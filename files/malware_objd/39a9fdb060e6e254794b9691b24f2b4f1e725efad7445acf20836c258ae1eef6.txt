
39a9fdb060e6e254794b9691b24f2b4f1e725efad7445acf20836c258ae1eef6.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	jmp    0x733c284d
  411005:	aam    0x2c
  411007:	outs   dx,BYTE PTR ds:[esi]
  411008:	hlt    
  411009:	(bad)  
  41100a:	ins    DWORD PTR es:[edi],dx
  41100b:	add    eax,0x46306936
  411010:	(bad)  
  411011:	iret   
  411012:	xchg   ebx,eax
  411013:	test   DWORD PTR [esi+eax*8],esi
  411016:	lods   al,BYTE PTR ds:[esi]
  411017:	cmp    al,0xbc
  411019:	add    eax,0xd08701e
  41101e:	sbb    ah,BYTE PTR [ecx]
  411020:	arpl   WORD PTR [eax+0x17],di
  411023:	add    BYTE PTR [esi-0x4da87174],cl
  411029:	pop    eax
  41102a:	sub    BYTE PTR [ebx-0x2fb6fbb9],0x59
  411031:	cmp    ebx,0xffffffc2
  411034:	in     al,0x49
  411036:	xor    BYTE PTR [esi+0x42],bl
  411039:	xor    eax,0xa88dc5b5
  41103e:	sub    al,0xd6
  411040:	sti    
  411041:	xlat   BYTE PTR ds:[ebx]
  411042:	and    eax,0xa9b3992c
  411047:	popf   
  411048:	xchg   edi,eax
  411049:	xor    eax,0xa322f620
  41104e:	xor    BYTE PTR [ecx+0x4cba57c5],bh
  411054:	dec    BYTE PTR [eax+eiz*4-0x33c65816]
  41105b:	sbb    cl,BYTE PTR [edx-0x31]
  41105e:	int    0x8a
  411060:	jle    0x410ff9
  411062:	in     eax,0xc2
  411064:	into   
  411065:	sub    DWORD PTR [eax+0x42439321],edi
  41106b:	(bad)  
  41106c:	fsub   QWORD PTR [ebx]
  41106e:	push   0xcc6c555c
  411073:	mov    ebx,0x91160ac6
  411078:	add    BYTE PTR [ecx],0xc
  41107b:	clc    
  41107c:	daa    
  41107d:	sbb    eax,0x3219f620
  411082:	(bad)
  411085:	out    dx,al
  411086:	mov    dl,0xa
  411088:	fistp  QWORD PTR [edx]
  41108a:	mov    ebp,0x67f6fe80
  41108f:	fdivr  QWORD PTR [esi]
  411091:	cmp    al,0x9f
  411093:	fst    QWORD PTR [ebx+0x3c]
  411096:	and    al,0x35
  411098:	jl     0x41104c
  41109a:	neg    BYTE PTR [eax+0x5c91c2bf]
  4110a0:	adc    esp,edx
  4110a2:	xor    ch,dh
  4110a4:	and    esp,DWORD PTR [eax-0x39]
  4110a7:	out    0x55,eax
  4110a9:	xchg   ebp,eax
  4110aa:	(bad)  
  4110ab:	(bad)  es:[ebx+0x58a85c97]
  4110b2:	cmp    cl,BYTE PTR [ebx-0x54]
  4110b5:	add    eax,0x80bc6835
  4110ba:	test   al,0x1b
  4110bc:	push   ebp
  4110bd:	rol    BYTE PTR [esp+ebx*4-0x22],0x53
  4110c2:	clc    
  4110c3:	jnp    0x411046
  4110c5:	mul    BYTE PTR [ebx]
  4110c7:	idiv   BYTE PTR [esi+0x5a009b3f]
  4110cd:	push   eax
  4110ce:	icebp  
  4110cf:	xchg   ebx,eax
  4110d0:	shl    BYTE PTR [edx+0x34],1
  4110d3:	stc    
  4110d4:	xor    eax,0x642fba64
  4110d9:	xchg   ebx,eax
  4110da:	pusha  
  4110db:	add    eax,0x88f286a6
  4110e0:	div    ebp
  4110e2:	sub    eax,0x7209b915
  4110e7:	les    ecx,FWORD PTR [ebx+0xed339c1]
  4110ed:	xchg   edi,eax
  4110ee:	push   edi
  4110ef:	lds    edx,FWORD PTR [eax+0x67]
  4110f2:	clc    
  4110f3:	inc    ebp
  4110f4:	rol    ecx,1
  4110f6:	rcr    BYTE PTR [ecx],0x9f
  4110f9:	mov    bh,0xe1
  4110fb:	add    DWORD PTR [edi+0x4b],edi
  4110fe:	sbb    DWORD PTR ds:0xd86537c7,edi
  411104:	xlat   BYTE PTR ds:[ebx]
  411105:	cmp    eax,0x921b10ae
  41110a:	sub    BYTE PTR [eax+0xbf6a28],ah
  411110:	outs   dx,DWORD PTR ds:[esi]
  411111:	in     eax,dx
  411112:	sar    BYTE PTR [esi-0x4d],1
  411115:	clc    
  411116:	mov    dl,0xa3
  411118:	jnp    0x411187
  41111a:	add    eax,0xb8a07fca
  41111f:	dec    edi
  411120:	mov    es,WORD PTR [ebp+0x1a]
  411123:	xor    DWORD PTR [ecx+0x4cbea8b9],ebp
  411129:	cmc    
  41112a:	mov    esi,0x4e933bd9
  41112f:	mov    DWORD PTR [ecx-0x34],esi
  411132:	xor    DWORD PTR [edi],0x8df8dd9
  411138:	push   0xa395fcc9
  41113d:	call   0x6f6ec94c
  411142:	scas   al,BYTE PTR es:[edi]
  411143:	ins    DWORD PTR es:[edi],dx
  411144:	sbb    edx,edx
  411146:	push   esp
  411147:	and    ch,cl
  411149:	mov    bl,0xd6
  41114b:	sbb    bl,BYTE PTR gs:[ecx]
  41114e:	push   es
  41114f:	sbb    DWORD PTR [ebx-0x3c],eax
  411152:	aaa    
  411153:	repnz mov bh,0x6e
  411156:	jmp    0x411148
  411158:	mov    al,0xf6
  41115a:	sar    eax,0xa4
  41115d:	repz cli 
  41115f:	mov    WORD PTR [edi],?
  411161:	shl    BYTE PTR [ebx],0x2f
  411164:	in     al,0x67
  411166:	repnz add edi,DWORD PTR [edi-0x63]
  41116a:	scas   al,BYTE PTR es:[edi]
  41116b:	add    DWORD PTR [esi+esi*1],ebx
  41116e:	lea    esp,[ebp-0x14]
  411171:	xor    esp,DWORD PTR [edx]
  411173:	dec    ebp
  411174:	xchg   edi,eax
  411175:	icebp  
  411176:	adc    ecx,DWORD PTR ds:0x1e9fb53c
  41117c:	shl    BYTE PTR [ebp-0x7],cl
  41117f:	lods   eax,DWORD PTR ds:[esi]
  411180:	cld    
  411181:	add    BYTE PTR [eax-0x144c30d9],bh
  411187:	cmp    ebp,DWORD PTR [ebp+ebx*8-0x60]
  41118b:	xor    ch,BYTE PTR [edx]
  41118d:	(bad)  [ebx+0x10]
  411190:	add    BYTE PTR [ebx-0x49],0xcb
  411194:	das    
  411195:	les    esp,FWORD PTR [edx+edi*4-0x4c]
  411199:	and    eax,DWORD PTR [ecx]
  41119b:	mov    ch,0x4c
  41119d:	inc    ebx
  41119e:	mov    cl,0xc7
  4111a0:	xchg   DWORD PTR [eax+0x193aa82d],ecx
  4111a6:	and    DWORD PTR [ebx+0xaa13e4b],ecx
  4111ac:	loopne 0x41117c
  4111ae:	fdiv   DWORD PTR [edx]
  4111b0:	push   0xc346e00b
  4111b5:	jmp    0xa40b:0x51e6d997
  4111bc:	sbb    dl,BYTE PTR [edi]
  4111be:	dec    edx
  4111bf:	or     ah,BYTE PTR [edx]
  4111c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111c2:	xlat   BYTE PTR ds:[ebx]
  4111c3:	add    bh,BYTE PTR [edx]
  4111c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111c6:	jne    0x41117d
  4111c8:	mov    al,0x55
  4111ca:	jo     0x411203
  4111cc:	aaa    
  4111cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111ce:	xor    al,0xc3
  4111d0:	sub    BYTE PTR [ebp+0x74ee3a35],0x1b
  4111d7:	push   ebx
  4111d8:	push   0x3e
  4111da:	rcl    DWORD PTR [ebx+0x1c916c78],0xf1
  4111e1:	sbb    DWORD PTR [esi-0x70],edi
  4111e4:	pop    ds
  4111e5:	xchg   BYTE PTR [eax-0x78],bh
  4111e8:	fistp  DWORD PTR [ebp+ecx*4+0x5f]
  4111ec:	jle    0x4111bf
  4111ee:	and    DWORD PTR [edx-0x4f4e0329],esp
  4111f4:	repnz mov ds:0x91962407,al
  4111fa:	dec    eax
  4111fb:	pop    esi
  4111fc:	inc    esp
  4111fd:	(bad)  
  4111fe:	out    0xba,al
  411200:	push   esp
  411201:	dec    ecx
  411202:	test   eax,0x3c21c5d3
  411207:	lock xor DWORD PTR [edi],esp
  41120a:	adc    ah,BYTE PTR [ebx+0x3310c252]
  411210:	pop    eax
  411211:	pop    ds
  411212:	dec    edx
  411213:	push   edx
  411214:	add    eax,0x2b59bfd
  411219:	call   ebx
  41121b:	add    ah,al
  41121d:	xor    cl,al
  41121f:	rcr    DWORD PTR ds:0xede7fa26,0xfb
  411226:	and    dl,BYTE PTR [ebp+0x6277c8b0]
  41122c:	xlat   BYTE PTR ds:[ebx]
  41122d:	fisubr WORD PTR ds:0x9d71a641
  411233:	imul   eax,DWORD PTR [eax-0x29b67058],0x82b669ad
  41123d:	std    
  41123e:	jne    0x4111c7
  411240:	sbb    edi,DWORD PTR [ebx-0x4ccfa916]
  411246:	fmul   DWORD PTR [ebx]
  411248:	jmp    0x1c61:0x32d6e036
  41124f:	fadd   st,st(5)
  411251:	mov    ebx,0xee969e4
  411256:	sar    BYTE PTR ds:[ebx+edx*4],1
  41125a:	add    ebp,DWORD PTR [ebx+0x40b16c4f]
  411260:	fistp  DWORD PTR [ebx+0x126fa694]
  411266:	add    ch,BYTE PTR [edx]
  411268:	inc    ecx
  411269:	(bad)  
  41126a:	call   0x9476:0x901681f4
  411271:	loop   0x411251
  411273:	scas   al,BYTE PTR es:[edi]
  411274:	das    
  411275:	mov    ch,0x87
  411277:	hlt    
  411278:	nop
  411279:	and    ebp,0x4552973b
  41127f:	and    esp,DWORD PTR [edi+edx*2]
  411282:	clc    
  411283:	es jnp 0x4112e1
  411286:	test   eax,0x823da69e
  41128b:	push   0x5b6bbfdb
  411290:	test   dh,cl
  411292:	sub    BYTE PTR [ebp-0x3e],bh
  411295:	add    al,0xaa
  411297:	shl    edx,cl
  411299:	dec    esi
  41129a:	test   BYTE PTR [ebx*2+0xe8f3031],0xa1
  4112a2:	aam    0x37
  4112a4:	sub    ebx,DWORD PTR [esi]
  4112a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112a7:	fst    QWORD PTR [ebp+0x2a2f8522]
  4112ad:	ss aad 0x4b
  4112b0:	ja     0x41127d
  4112b2:	and    bh,BYTE PTR [ebp+0x25]
  4112b5:	sar    bl,cl
  4112b7:	js     0x411312
  4112b9:	and    eax,0x9cf25ade
  4112be:	call   0xf3f945a8
  4112c3:	daa    
  4112c4:	cli    
  4112c5:	pop    edi
  4112c6:	jmp    0xdfae0f61
  4112cb:	fistp  QWORD PTR [edx]
  4112cd:	xor    DWORD PTR [eax+eax*1-0x51],0xab089c07
  4112d5:	scas   al,BYTE PTR es:[edi]
  4112d6:	nop
  4112d7:	iret   
  4112d8:	cmp    cl,BYTE PTR [edx]
  4112da:	or     al,0x28
  4112dc:	cmp    ebp,DWORD PTR [ebx+0x59c0d80b]
  4112e2:	cmp    eax,0x5aed59da
  4112e7:	sbb    DWORD PTR [esi],edx
  4112e9:	inc    edx
  4112ea:	sub    eax,0x53823cf1
  4112ef:	fdiv   QWORD PTR [ebx]
  4112f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112f2:	jmp    ecx
  4112f4:	pop    ebp
  4112f5:	imul   ebx,DWORD PTR [ebx+edi*1],0x5d
  4112f9:	pop    ds
  4112fa:	aas    
  4112fb:	push   ebx
  4112fc:	addr16 jno 0x4112ae
  4112ff:	xchg   DWORD PTR [ebx-0x61b5f93e],eax
  411305:	sub    BYTE PTR [ebx-0x2454304f],bh
  41130b:	ss repnz push ecx
  41130e:	push   ss
  41130f:	mov    DWORD PTR [esi],ebx
  411311:	jle    0x4112ff
  411313:	scas   al,BYTE PTR es:[edi]
  411314:	mov    esi,0xa91fcb8
  411319:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41131a:	cmp    edi,DWORD PTR [ebx+0x45fc67bd]
  411320:	(bad)  
  411322:	rol    BYTE PTR [ecx+0x1d],cl
  411325:	add    eax,0x2e74f8eb
  41132a:	push   0x47
  41132c:	xor    dh,ah
  41132e:	fsubr  st(6),st
  411330:	cmp    DWORD PTR [ecx],edi
  411332:	sti    
  411333:	dec    edx
  411334:	iret   
  411335:	rol    DWORD PTR [ecx-0x6f],cl
  411338:	jnp    0x411347
  41133a:	and    ah,0x38
  41133d:	adc    ecx,0xffffffdd
  411340:	jno    0x411395
  411342:	fimul  WORD PTR [ebp-0x6771106]
  411348:	push   0xffffffc5
  41134a:	pop    ebx
  41134b:	out    dx,eax
  41134c:	ss pop es
  41134e:	nop
  41134f:	xchg   DWORD PTR [ebx-0x13],ebx
  411352:	pop    esi
  411353:	in     al,dx
  411354:	sti    
  411355:	sahf   
  411356:	dec    ebp
  411357:	and    eax,0xa3f24dd
  41135c:	popf   
  41135d:	cmp    bl,BYTE PTR [ebx]
  41135f:	xor    bl,BYTE PTR [eax+0x6e]
  411362:	cmp    ebp,DWORD PTR [eax-0x77]
  411365:	and    ah,BYTE PTR [ecx+0x2]
  411368:	add    dl,dh
  41136a:	rol    BYTE PTR [edi+0x7703e6e1],0x53
  411371:	mov    ch,0x9a
  411373:	inc    esp
  411374:	fimul  DWORD PTR [esi+0x1c]
  411377:	lahf   
  411378:	ins    DWORD PTR es:[edi],dx
  411379:	adc    ch,BYTE PTR [ebx+eiz*1-0x63]
  41137d:	test   al,0x9b
  41137f:	sbb    al,0x9c
  411381:	fimul  DWORD PTR [edi-0x9e8d7a]
  411387:	jnp    0x41131c
  411389:	xor    eax,0xa3a8a21f
  41138e:	arpl   WORD PTR [edx],bx
  411390:	xor    BYTE PTR [ecx-0x44030e6d],ah
  411396:	iret   
  411397:	fldcw  WORD PTR [ecx-0x4c]
  41139a:	cwde   
  41139b:	mov    esp,0x4cfb3c9d
  4113a0:	sbb    al,BYTE PTR [edi-0x5c]
  4113a3:	outs   dx,DWORD PTR ds:[esi]
  4113a4:	pop    ss
  4113a5:	(bad)  [eax-0x38685092]
  4113ab:	js     0x411401
  4113ad:	and    al,0xa5
  4113af:	ins    BYTE PTR es:[edi],dx
  4113b0:	mov    al,0xe1
  4113b2:	mov    dh,0x9c
  4113b4:	mov    esi,0xd98f8263
  4113b9:	les    ecx,FWORD PTR [edi-0x23]
  4113bc:	aaa    
  4113bd:	sbb    DWORD PTR [ecx],eax
  4113bf:	mov    cl,0x25
  4113c1:	and    BYTE PTR [edx+0x76],ah
  4113c4:	sub    eax,0x6b4ee37f
  4113c9:	mov    esi,0x6fb2bfc4
  4113ce:	ror    BYTE PTR [ebp+0x66],0x13
  4113d2:	std    
  4113d3:	jbe    0x4113ff
  4113d5:	ins    BYTE PTR es:[edi],dx
  4113d6:	lods   eax,DWORD PTR ds:[esi]
  4113d7:	outs   dx,BYTE PTR ds:[esi]
  4113d8:	ins    DWORD PTR es:[edi],dx
  4113d9:	push   edx
  4113da:	loop   0x41141b
  4113dc:	mov    DWORD PTR [esi],ecx
  4113de:	sub    ch,BYTE PTR [ebx+0x1faaf477]
  4113e4:	ret    0xa9cb
  4113e7:	rcr    edi,1
  4113e9:	mov    eax,ds:0xd0b5d962
  4113ee:	int    0xfd
  4113f0:	add    al,0xd8
  4113f2:	in     eax,dx
  4113f3:	ja     0x4113f1
  4113f5:	add    dh,BYTE PTR [eax-0x59]
  4113f8:	stos   DWORD PTR es:[edi],eax
  4113f9:	ds rcl bh,cl
  4113fc:	adc    esp,DWORD PTR [ebx-0x1e]
  4113ff:	(bad)  
  411400:	jmp    0x4113bc
  411402:	sar    BYTE PTR [ecx-0x48],0xb4
  411406:	(bad)  
  411407:	rcr    BYTE PTR [edi+0x101b848e],1
  41140d:	mov    bh,0x43
  41140f:	dec    ebp
  411410:	les    ecx,FWORD PTR [ebp-0xb]
  411413:	cmp    cl,BYTE PTR [ebp+0x1f]
  411416:	inc    eax
  411417:	clc    
  411418:	(bad)  
  411419:	adc    DWORD PTR [esi+0x60817772],eax
  41141f:	(bad)  
  411420:	xchg   ecx,eax
  411421:	pop    es
  411422:	mov    edi,0x2fe93dcc
  411427:	out    0x6f,eax
  411429:	cdq    
  41142a:	stc    
  41142b:	test   al,0xa7
  41142d:	push   cs
  41142e:	(bad)  
  41142f:	repz (bad) 
  411431:	fwait
  411432:	idiv   DWORD PTR [ebp-0x3f334465]
  411438:	cdq    
  411439:	lods   al,BYTE PTR ds:[esi]
  41143a:	sti    
  41143b:	sahf   
  41143c:	mov    dl,0xed
  41143e:	lods   eax,DWORD PTR ds:[esi]
  41143f:	adc    cl,BYTE PTR [ecx-0x5c7385dd]
  411445:	v4fnmaddps xmm6{k6}{z},xmm1,XMMWORD PTR [ebp+ebp*4+0x7f14fe1b]
  411450:	and    BYTE PTR [esp+edi*4-0x24],0xe2
  411455:	jl     0x411462
  411457:	ins    BYTE PTR es:[edi],dx
  411458:	push   eax
  411459:	push   cs
  41145a:	cld    
  41145b:	dec    esp
  41145c:	fwait
  41145d:	dec    esi
  41145e:	dec    eax
  41145f:	pusha  
  411460:	cmp    BYTE PTR [edi-0x3d],cl
  411463:	mov    ebx,0x14d348d2
  411468:	add    al,0x3b
  41146a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41146b:	arpl   si,cx
  41146d:	test   eax,0x13307725
  411472:	or     al,0x91
  411474:	inc    esi
  411475:	sbb    BYTE PTR ds:0x84302cf2,0x66
  41147c:	daa    
  41147d:	xchg   edx,eax
  41147e:	icebp  
  41147f:	test   BYTE PTR [edx],dl
  411481:	or     al,0xd0
  411483:	adc    eax,0x93926b32
  411488:	aas    
  411489:	mov    ch,0xd7
  41148b:	push   cs
  41148c:	mov    ah,0x3a
  41148e:	lds    esi,FWORD PTR [edx]
  411490:	jae    0x41148a
  411492:	mov    ecx,0xd36103fb
  411497:	in     al,dx
  411498:	dec    eax
  411499:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41149a:	retf   0x13d1
  41149d:	adc    al,0x79
  41149f:	xchg   ebx,eax
  4114a0:	lods   al,BYTE PTR ds:[esi]
  4114a1:	rol    DWORD PTR [edx-0x62],cl
  4114a4:	jbe    0x411462
  4114a6:	push   esp
  4114a7:	or     eax,0x60f53265
  4114ac:	cmp    esp,DWORD PTR [ecx-0x670b18c4]
  4114b2:	xor    al,0x6f
  4114b4:	adc    ah,bh
  4114b6:	jo     0x4114a9
  4114b8:	push   cs
  4114b9:	bound  esi,QWORD PTR [eax-0x1e216dee]
  4114bf:	sahf   
  4114c0:	aaa    
  4114c1:	out    0x8b,al
  4114c3:	cld    
  4114c4:	pop    es
  4114c5:	dec    edx
  4114c6:	in     al,0xb5
  4114c8:	xor    DWORD PTR [edi-0x24],esp
  4114cb:	xor    al,BYTE PTR [eax-0x5c]
  4114ce:	jne    0x411539
  4114d0:	adc    DWORD PTR [eax],0xfffffff4
  4114d3:	mov    ebp,0xe5dc1db5
  4114d8:	popa   
  4114d9:	add    ebp,DWORD PTR ds:0x6ba024bf
  4114df:	loope  0x4114c1
  4114e1:	jo     0x4114df
  4114e3:	clc    
  4114e4:	leave  
  4114e5:	std    
  4114e6:	sbb    al,0xcb
  4114e8:	stos   BYTE PTR es:[edi],al
  4114e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114ea:	inc    esi
  4114eb:	shr    DWORD PTR [edi],cl
  4114ed:	sbb    DWORD PTR [eax],edi
  4114ef:	rol    BYTE PTR [esi+0x9],cl
  4114f2:	cli    
  4114f3:	fsubr  QWORD PTR [ecx+0x76]
  4114f6:	in     eax,0x18
  4114f8:	push   eax
  4114f9:	mov    edx,0x3fa3a18f
  4114fe:	out    0xce,al
  411500:	sbb    eax,0x79221646
  411505:	test   al,0x8
  411507:	loop   0x4114a3
  411509:	sub    al,0xb3
  41150b:	mov    esi,0xdaf609aa
  411510:	inc    esi
  411511:	pop    edi
  411512:	jo     0x411590
  411514:	enter  0xbf5d,0x4a
  411518:	pop    ebx
  411519:	mov    ds:0xef607cba,eax
  41151e:	cs call 0x69d9627c
  411524:	into   
  411525:	and    ebp,DWORD PTR [ebp+0x27a3cb9c]
  41152b:	ror    DWORD PTR [ebp-0xb],1
  41152e:	push   ebx
  41152f:	pop    ebx
  411531:	pop    es
  411532:	adc    eax,0xfe43b501
  411537:	dec    esp
  411538:	dec    esi
  411539:	pop    esi
  41153a:	test   al,0x5f
  41153c:	xchg   BYTE PTR ds:0x3a5a058a,cl
  411542:	cwde   
  411543:	mov    es,WORD PTR [edx-0x56618d29]
  411549:	loop   0x41151a
  41154b:	xor    al,0x50
  41154d:	into   
  41154e:	and    eax,0xe87ce1e6
  411553:	xchg   edi,eax
  411554:	out    0x8c,al
  411556:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411557:	fmul   DWORD PTR [esi-0x6baaafd6]
  41155d:	jne    0x411582
  41155f:	add    ebx,DWORD PTR [ecx+0x56]
  411562:	inc    ebx
  411563:	pop    ss
  411564:	mov    ds:0x1d8382ba,eax
  411569:	add    eax,DWORD PTR [esi+ebx*1+0x5b50058e]
  411570:	mov    ah,0xe
  411572:	mov    ds:0x1ed54729,al
  411577:	push   ebp
  411578:	and    bh,BYTE PTR [esi+0x13]
  41157b:	rcr    BYTE PTR [eax],1
  41157d:	pop    ss
  41157e:	lahf   
  41157f:	and    al,0x5d
  411581:	aaa    
  411582:	in     al,dx
  411583:	pushf  
  411584:	xchg   DWORD PTR [ebp+0x6e],esp
  411587:	dec    edi
  411588:	repz push 0xffffffeb
  41158b:	dec    ebp
  41158c:	mov    ebx,0x14139a34
  411591:	stos   DWORD PTR es:[edi],eax
  411592:	out    0xb9,eax
  411594:	(bad)  
  411595:	iret   
  411596:	cli    
  411597:	or     eax,0xa350f63
  41159c:	xchg   dh,bl
  41159e:	test   ebx,edi
  4115a0:	adc    eax,0xb7938e24
  4115a5:	fstp   DWORD PTR [ebx+ebp*1-0x37]
  4115a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115aa:	aas    
  4115ab:	repz xchg edx,eax
  4115ad:	mov    edx,0xa744be07
  4115b2:	pop    es
  4115b3:	fild   WORD PTR [edi+0x46]
  4115b6:	inc    edi
  4115b7:	dec    esi
  4115b8:	mov    esi,0xaa9be0a5
  4115bd:	or     BYTE PTR [edx],cl
  4115bf:	and    edi,DWORD PTR [ecx+0x5]
  4115c2:	jmp    0x92fc4f58
  4115c7:	pop    ebx
  4115c8:	sub    esp,DWORD PTR [ebx-0x6ef05404]
  4115ce:	xlat   BYTE PTR ds:[ebx]
  4115cf:	bound  ebp,QWORD PTR [edx+0x41]
  4115d2:	inc    ebx
  4115d3:	popf   
  4115d4:	fs in  eax,dx
  4115d6:	dec    esi
  4115d7:	jno    0x41156f
  4115d9:	popf   
  4115da:	sti    
  4115db:	push   0x3544ed7d
  4115e0:	xchg   ebp,eax
  4115e1:	xchg   ebp,eax
  4115e2:	and    DWORD PTR [edi+0x1f1dbd69],eax
  4115e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115e9:	outs   dx,DWORD PTR ds:[esi]
  4115ea:	retf   0xcf8f
  4115ed:	xchg   esp,eax
  4115ee:	popa   
  4115ef:	pop    edi
  4115f0:	pop    ebp
  4115f1:	(bad)  
  4115f2:	scas   eax,DWORD PTR es:[edi]
  4115f3:	out    0x90,al
  4115f5:	and    DWORD PTR [ebx],esi
  4115f7:	das    
  4115f8:	and    eax,0xd2c353a9
  4115fd:	mov    bl,0xba
  4115ff:	jmp    0x824e:0x1237dc0a
  411606:	in     al,dx
  411607:	jnp    0x4115ce
  411609:	pop    ebx
  41160a:	jl     0x411600
  41160c:	xchg   edx,eax
  41160d:	or     BYTE PTR [ecx],bh
  41160f:	pushf  
  411610:	xlat   BYTE PTR ds:[ebx]
  411611:	(bad)  
  411612:	les    esp,FWORD PTR [esi]
  411614:	les    esi,FWORD PTR [esi]
  411616:	xor    ebx,DWORD PTR [esi+eiz*8]
  411619:	xor    ah,al
  41161b:	cmp    al,0xa0
  41161d:	ins    BYTE PTR es:[edi],dx
  41161e:	mov    ah,0xbf
  411620:	into   
  411621:	xor    BYTE PTR [eax],0x5f
  411624:	out    0x95,al
  411626:	jecxz  0x41167a
  411628:	sub    bl,cl
  41162a:	dec    cx
  41162c:	adc    BYTE PTR [edx-0x721e63b0],al
  411632:	frstor [edi+ebp*4+0x54a3235b]
  411639:	xor    al,0x7
  41163b:	ret    
  41163c:	xchg   edx,eax
  41163d:	scas   al,BYTE PTR es:[edi]
  41163e:	in     al,dx
  41163f:	lods   al,BYTE PTR ds:[esi]
  411640:	sbb    BYTE PTR [ecx],0x94
  411643:	and    esp,ebx
  411645:	rol    BYTE PTR [edi+0x7],0x62
  411649:	or     al,0x69
  41164b:	adc    al,ah
  41164d:	sahf   
  41164e:	data16 cmp al,0x49
  411651:	jecxz  0x4116af
  411653:	push   0x14
  411655:	sub    DWORD PTR [esp+edi*4-0x1e],0xbacea0e3
  41165d:	xchg   DWORD PTR [ebx+0x3986b8e2],esi
  411663:	jmp    0x4d366e19
  411668:	in     al,dx
  411669:	adc    bl,BYTE PTR [ebx-0x4a]
  41166c:	mov    DWORD PTR [bp+0x18fa],eax
  411671:	jbe    0x41166b
  411673:	aas    
  411674:	xchg   edi,eax
  411675:	dec    ecx
  411676:	sub    ebp,DWORD PTR [di+0x1130]
  41167b:	and    eax,0x21db29d1
  411680:	dec    esi
  411681:	aad    0x1
  411683:	mov    ds:0x6a66d480,al
  411688:	xor    DWORD PTR [ecx],0xffffffcd
  41168b:	sub    eax,0xf4934c10
  411691:	xor    al,0x3
  411693:	rol    BYTE PTR [ecx],cl
  411695:	aaa    
  411696:	dec    edi
  411697:	out    dx,al
  411698:	mov    ebx,0x28b25683
  41169d:	inc    esp
  41169e:	bound  edx,QWORD PTR [edx+0x2]
  4116a1:	adc    BYTE PTR [eax],ah
  4116a3:	xchg   ebp,eax
  4116a4:	(bad)  
  4116a6:	and    eax,0x3387c84d
  4116ab:	ss mov edi,0xafa2d5e7
  4116b1:	pop    ss
  4116b2:	retf   0xd00c
  4116b5:	std    
  4116b6:	inc    ecx
  4116b7:	inc    edx
  4116b8:	sbb    BYTE PTR [ebx-0x4631d961],dl
  4116be:	or     edx,0xffffff8c
  4116c1:	add    al,0xa6
  4116c3:	mov    ds:0x5363d907,eax
  4116c8:	ret    
  4116c9:	jae    0x411682
  4116cb:	dec    edi
  4116cc:	sbb    DWORD PTR [esi-0x39c72a4e],0x74702c16
  4116d6:	call   0xe4c0:0x3ff45c96
  4116dd:	pop    ebp
  4116de:	xchg   edi,eax
  4116df:	mov    dl,BYTE PTR [ebp-0x80]
  4116e2:	inc    edx
  4116e3:	pop    ebx
  4116e4:	ja     0x4116ce
  4116e6:	jmp    0x411717
  4116e8:	adc    BYTE PTR [edx+0xd69724d],ah
  4116ee:	inc    ecx
  4116ef:	nop
  4116f0:	lahf   
  4116f1:	enterw 0x5d9d,0x5c
  4116f6:	add    BYTE PTR [ebp+0x3],0xf4
  4116fa:	inc    eax
  4116fb:	test   edx,ecx
  4116fd:	or     al,0x79
  4116ff:	push   0xffffff88
  411701:	sub    ebx,eax
  411703:	adc    al,0xf9
  411705:	adc    BYTE PTR [ebx],0x12
  411708:	mov    dl,0x47
  41170a:	stos   BYTE PTR es:[edi],al
  41170b:	push   ds
  41170c:	(bad)  
  41170d:	test   BYTE PTR [edx+0x63],0x2f
  411711:	lea    eax,[edi]
  411713:	add    eax,0x718e318b
  411718:	pusha  
  411719:	repz cmp al,0xdf
  41171c:	xchg   ecx,eax
  41171d:	lds    edi,FWORD PTR [ebp-0x160fde18]
  411723:	mov    dl,0x0
  411725:	leave  
  411726:	mov    edx,0x86acb247
  41172b:	add    bl,BYTE PTR [esi]
  41172d:	dec    esp
  41172e:	adc    eax,0x92c89fff
  411733:	xor    al,0xd0
  411735:	mov    ebx,DWORD PTR [ebx-0x14b3a96f]
  41173b:	jge    0x411748
  41173d:	pop    es
  41173e:	push   ebp
  41173f:	(bad)  
  411741:	int    0x97
  411743:	enter  0x9723,0x34
  411747:	mov    ebp,0x395eea97
  41174c:	ds pop ebp
  41174e:	fs addr16 pop ds
  411751:	pushf  
  411752:	sub    edx,DWORD PTR [esi]
  411754:	aam    0x2b
  411756:	xor    eax,0x1db01cdd
  41175b:	sbb    BYTE PTR [eax],ah
  41175d:	icebp  
  41175e:	ficomp DWORD PTR [edi]
  411760:	sub    eax,0x38b815db
  411765:	jmp    0xb62ae1ca
  41176a:	jae    0x4117ba
  41176c:	ss test eax,0x18e74262
  411772:	dec    edi
  411773:	push   edx
  411774:	in     al,0x9b
  411776:	ror    DWORD PTR [ecx],1
  411778:	in     al,dx
  411779:	fnstsw WORD PTR [ebp-0x1f]
  41177c:	cli    
  41177d:	je     0x411762
  41177f:	add    DWORD PTR [ecx-0x5faeb192],esp
  411785:	retf   0x1ea1
  411788:	xchg   DWORD PTR [ecx],ecx
  41178a:	(bad)  [edx-0x47]
  41178d:	pop    ds
  41178e:	or     eax,0xe7c8465c
  411793:	add    ecx,DWORD PTR [ecx+0x381757b3]
  411799:	and    BYTE PTR [ebp+0x248af558],0x15
  4117a0:	pop    edi
  4117a1:	push   eax
  4117a2:	stos   DWORD PTR es:[edi],eax
  4117a3:	sbb    ecx,edx
  4117a5:	pop    ds
  4117a6:	mov    ah,bh
  4117a8:	js     0x411743
  4117aa:	stos   DWORD PTR es:[edi],eax
  4117ab:	aaa    
  4117ac:	xchg   esp,eax
  4117ad:	cmp    bh,BYTE PTR [eax+edx*2+0x6d220f1a]
  4117b4:	icebp  
  4117b5:	daa    
  4117b6:	(bad)  
  4117b7:	das    
  4117b8:	push   eax
  4117b9:	(bad)  
  4117ba:	pop    eax
  4117bb:	add    bh,BYTE PTR [ecx+edi*1-0x40]
  4117bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117c0:	pop    ecx
  4117c1:	lock mov edi,0x964475b
  4117c7:	add    al,0x38
  4117c9:	mov    ?,WORD PTR [ecx-0x91dd7]
  4117cf:	call   0x5f975aa1
  4117d4:	aas    
  4117d5:	(bad)  
  4117d6:	(bad)  
  4117d7:	mov    ecx,0x7d549227
  4117dc:	test   al,0xf1
  4117de:	xchg   edx,eax
  4117df:	pop    ss
  4117e0:	in     eax,dx
  4117e1:	call   0x1ae:0x3040d466
  4117e8:	(bad)  
  4117e9:	es inc si
  4117ec:	push   cs
  4117ed:	out    0xf8,eax
  4117ef:	push   edi
  4117f0:	stc    
  4117f1:	adc    eax,DWORD PTR [ebx]
  4117f3:	inc    ebp
  4117f4:	loop   0x411869
  4117f6:	mov    cl,0xce
  4117f8:	xchg   ebx,eax
  4117f9:	jg     0x411877
  4117fb:	and    eax,0xf4a584cf
  411800:	outs   dx,DWORD PTR ds:[esi]
  411801:	cmp    BYTE PTR [edi],0xd1
  411804:	mov    es,WORD PTR [eax]
  411806:	bnd jge 0x41179d
  411809:	aas    
  41180a:	and    DWORD PTR [ebx+eax*2],edx
  41180d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41180e:	jmp    0x41182e
  411810:	xlat   BYTE PTR ds:[ebx]
  411811:	aaa    
  411812:	fiadd  WORD PTR [edi]
  411814:	mov    esi,0xc2d7df4a
  411819:	sub    DWORD PTR [edx],0xadb99bca
  41181f:	push   esi
  411820:	js     0x411840
  411822:	stos   BYTE PTR es:[edi],al
  411823:	push   ebx
  411824:	mov    eax,ds:0xe3902fc5
  411829:	in     al,0x4a
  41182b:	mov    WORD PTR [edx],cs
  41182d:	mov    edx,0xb5c2ec13
  411832:	adc    bh,al
  411834:	hlt    
  411835:	xchg   ecx,eax
  411836:	das    
  411837:	int    0xe9
  411839:	mov    ebx,0x135d4a8c
  41183e:	mov    eax,ds:0xa511919a
  411844:	adc    eax,0xdc09cfb9
  411849:	jmp    0xea92c522
  41184e:	jmp    0x41188d
  411850:	pop    ebx
  411851:	dec    ecx
  411852:	je     0x4118c5
  411854:	(bad)  
  411855:	(bad)  
  411856:	cmovnp edi,DWORD PTR [ebx+0x12]
  41185a:	xchg   esi,eax
  41185b:	push   esi
  41185c:	jmp    0xab3:0x35990c6d
  411863:	mov    al,ds:0x8328fe29
  411868:	dec    ebx
  411869:	mov    ebp,0x1f469eaa
  41186e:	test   DWORD PTR [eax+ecx*4],esi
  411871:	pop    eax
  411872:	fcom   DWORD PTR [edi-0x17851de9]
  411878:	jmp    0x4118a6
  41187a:	fild   DWORD PTR [eax+0x70]
  41187d:	inc    edx
  41187e:	add    esp,DWORD PTR [edx+0x3b]
  411881:	adc    eax,0x60b936c2
  411886:	sub    al,0x1f
  411888:	mov    ebp,0x5ad8365c
  41188d:	shr    BYTE PTR [edi+0x3cc5213d],cl
  411893:	enter  0xc35e,0x11
  411897:	mov    si,0x6b50
  41189b:	push   ebp
  41189c:	hlt    
  41189d:	pop    ebx
  41189e:	cmc    
  41189f:	mov    bh,0xda
  4118a1:	jns    0x411912
  4118a3:	cmp    cl,BYTE PTR gs:[ebp-0x6e]
  4118a7:	push   cs
  4118a8:	pop    es
  4118a9:	lds    edx,FWORD PTR [esi+0x6f852640]
  4118af:	loope  0x4118cc
  4118b1:	in     al,dx
  4118b2:	adc    eax,0x4f2655e
  4118b7:	jne    0x4118cc
  4118b9:	fnstenv [eax-0x1d]
  4118bc:	shl    BYTE PTR [ecx-0x3398ab43],cl
  4118c2:	(bad)  
  4118c3:	retf   
  4118c4:	in     eax,dx
  4118c5:	pop    ebx
  4118c6:	call   0x5104f892
  4118cb:	lds    ecx,FWORD PTR [ebx+ebx*2-0x6ff28124]
  4118d2:	fs mov bl,bh
  4118d5:	lods   eax,DWORD PTR ds:[esi]
  4118d6:	popf   
  4118d7:	and    cl,BYTE PTR [edx-0x54da9b48]
  4118dd:	pop    edx
  4118de:	pop    ds
  4118df:	mov    ah,0xef
  4118e1:	mov    cl,BYTE PTR [eax-0x6280f053]
  4118e7:	inc    ebx
  4118e8:	outs   dx,BYTE PTR es:[esi]
  4118ea:	jl     0x411907
  4118ec:	cdq    
  4118ed:	sub    al,0xed
  4118ef:	pop    ecx
  4118f0:	les    eax,FWORD PTR [ebx+0x12fce7b1]
  4118f6:	mov    edi,0x49dc7bb4
  4118fb:	adc    ebp,DWORD PTR [edx+0x53]
  4118fe:	pop    ebx
  4118ff:	cdq    
  411900:	mov    BYTE PTR [ebx-0x1ff85f7b],0x8b
  411907:	xlat   BYTE PTR ds:[ebx]
  411908:	fwait
  411909:	test   al,0xb3
  41190b:	jbe    0x4118a3
  41190d:	aad    0xdc
  41190f:	repz enter 0x527a,0x99
  411914:	ret    0x8490
  411917:	jne    0x411983
  411919:	add    BYTE PTR [edi],ah
  41191b:	loope  0x4118da
  41191d:	daa    
  41191e:	mov    ds,WORD PTR [ebx]
  411920:	dec    esp
  411921:	jb     0x411993
  411923:	push   ds
  411924:	push   ebp
  411925:	stc    
  411926:	enter  0xdbf8,0x47
  41192a:	icebp  
  41192b:	xchg   edi,eax
  41192c:	pop    ecx
  41192d:	mov    ds:0x64c91b67,al
  411932:	xchg   esp,eax
  411933:	mov    ah,0x17
  411935:	(bad)  
  411936:	stc    
  411937:	popf   
  411938:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411939:	inc    esi
  41193a:	adc    edi,DWORD PTR [ecx]
  41193c:	jl     0x411953
  41193e:	fnstenv [ebp-0x5]
  411941:	jnp    0x4118dc
  411943:	mov    DWORD PTR [ebx],esi
  411945:	mov    BYTE PTR [ecx-0x715f936b],al
  41194b:	in     al,0x46
  41194d:	inc    ebp
  41194e:	sbb    ebx,ebx
  411950:	xchg   ebx,eax
  411951:	les    ebx,FWORD PTR [esi]
  411953:	ins    BYTE PTR es:[edi],dx
  411954:	sar    BYTE PTR ds:0xa82d63b9,0xa3
  41195b:	es popa 
  41195d:	ds inc ebp
  41195f:	lods   eax,DWORD PTR ds:[esi]
  411960:	jg     0x411904
  411962:	sub    al,0x67
  411964:	or     esi,ebx
  411966:	jle    0x41192a
  411968:	push   es
  411969:	push   cs
  41196a:	add    esp,DWORD PTR [esi-0x58d3e34a]
  411970:	pusha  
  411971:	and    eax,0xc444855f
  411976:	pop    esp
  411977:	adc    dl,cl
  411979:	gs jbe 0x41197c
  41197c:	push   cs
  41197d:	lock call 0xb8234d49
  411983:	sbb    DWORD PTR [edx-0x77],0xe483f7ab
  41198a:	in     al,0xfc
  41198c:	lock mov edi,DWORD PTR [esi-0x4a840a79]
  411993:	pop    ebx
  411994:	out    dx,eax
  411995:	push   edi
  411996:	mov    ecx,0x24650da
  41199b:	dec    dh
  41199d:	hlt    
  41199e:	dec    edx
  41199f:	test   eax,0xcf2c2d82
  4119a4:	xchg   edi,eax
  4119a5:	icebp  
  4119a6:	aad    0x35
  4119a8:	scas   al,BYTE PTR es:[edi]
  4119a9:	push   es
  4119aa:	adc    DWORD PTR [edi],ecx
  4119ac:	fwait
  4119ad:	and    DWORD PTR [esi],esp
  4119af:	stos   BYTE PTR es:[edi],al
  4119b0:	xchg   esi,eax
  4119b1:	js     0x41196f
  4119b3:	ret    0xaaa6
  4119b6:	addr16 (bad) 
  4119b8:	sub    eax,0xf8ee345c
  4119bd:	and    al,0x4c
  4119bf:	retf   
  4119c0:	pushf  
  4119c1:	or     BYTE PTR [bp+di],al
  4119c4:	fsubr  st,st(7)
  4119c6:	jge    0x411a31
  4119c8:	(bad)  
  4119c9:	dec    esp
  4119ca:	pop    ebp
  4119cb:	or     DWORD PTR [esi+0x184eea77],eax
  4119d1:	inc    ecx
  4119d2:	out    dx,al
  4119d3:	fstp   DWORD PTR [esi+eiz*4-0x9168de4]
  4119da:	or     dl,BYTE PTR [ecx+ebx*8+0x32cd3671]
  4119e1:	mov    ebp,0x3ca4335e
  4119e6:	popa   
  4119e7:	rcr    bl,0xb8
  4119ea:	xchg   BYTE PTR [ecx-0x115f3ebb],dh
  4119f0:	pop    edx
  4119f1:	es mov esp,0x7d134afb
  4119f7:	xchg   DWORD PTR [edi-0xe],eax
  4119fa:	push   ebx
  4119fb:	cmp    edx,ebp
  4119fd:	popa   
  4119fe:	or     DWORD PTR [eax-0x443e563d],eax
  411a04:	fdivr  QWORD PTR [ecx-0x30797d63]
  411a0a:	test   DWORD PTR [ecx-0x3c2dc942],ecx
  411a10:	dec    edi
  411a11:	cmovle esp,DWORD PTR [esi]
  411a14:	push   0xffffffc3
  411a16:	push   ecx
  411a17:	ret    0x7527
  411a1a:	popa   
  411a1b:	aad    0x17
  411a1d:	in     eax,dx
  411a1e:	add    al,BYTE PTR [ebp+0x9]
  411a21:	fs or  eax,0xdca95546
  411a27:	xchg   ebp,eax
  411a28:	sbb    eax,0xf7fd5096
  411a2d:	mov    WORD PTR [edi+0x5f],fs
  411a30:	jmp    0x5d8f0cb9
  411a35:	shr    BYTE PTR [ebp-0x26f69ce7],0x83
  411a3c:	mov    eax,ds:0x8c797c13
  411a41:	lock ds sti 
  411a44:	scas   al,BYTE PTR es:[edi]
  411a45:	xor    eax,0xfc231b61
  411a4a:	jle    0x4119ea
  411a4c:	int3   
  411a4d:	pop    ebp
  411a4e:	fld    TBYTE PTR [ecx+0x7cbe7403]
  411a54:	inc    ebp
  411a55:	jo     0x411ab4
  411a57:	arpl   bx,ax
  411a59:	je     0x411a84
  411a5b:	cwde   
  411a5c:	addr16 (bad) 
  411a5e:	scas   eax,DWORD PTR es:[edi]
  411a5f:	ror    DWORD PTR ds:0x88b70cd5,cl
  411a65:	dec    esi
  411a66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a67:	lock les edi,FWORD PTR [edx]
  411a6a:	ja     0x411a1d
  411a6c:	test   BYTE PTR [edx+0x1f6b6d41],0xed
  411a73:	cmp    DWORD PTR [edx+0xbe5ff7a],edx
  411a79:	shl    BYTE PTR gs:[edi+0x3b332484],1
  411a80:	or     DWORD PTR ds:0xc2fd892f,0x95a23a28
  411a8a:	in     al,0x88
  411a8c:	jp     0x411a8f
  411a8e:	xchg   edx,eax
  411a8f:	push   edi
  411a90:	mov    dh,0xed
  411a92:	add    BYTE PTR [edx],dh
  411a94:	push   ds
  411a95:	leave  
  411a96:	xor    DWORD PTR [edi-0x63],0x63
  411a9a:	sti    
  411a9b:	mov    ds:0xa1ff44ac,al
  411aa0:	das    
  411aa1:	or     al,0xce
  411aa3:	push   esi
  411aa4:	shr    DWORD PTR [ecx-0x74],cl
  411aa7:	inc    ecx
  411aa8:	fisttp WORD PTR [edi]
  411aaa:	dec    ecx
  411aab:	cmp    eax,0x660fa178
  411ab0:	outs   dx,BYTE PTR ds:[esi]
  411ab1:	sbb    esp,DWORD PTR [eax+ebx*2]
  411ab4:	inc    eax
  411ab5:	pop    ss
  411ab6:	out    dx,al
  411ab7:	mov    ch,0x5f
  411ab9:	xchg   ebp,eax
  411aba:	inc    ebx
  411abb:	jo     0x411b28
  411abd:	ret    0x301
  411ac0:	stos   DWORD PTR es:[edi],eax
  411ac1:	lods   al,BYTE PTR ds:[esi]
  411ac2:	push   ss
  411ac3:	fild   DWORD PTR [ebp+0x73]
  411ac6:	push   es
  411ac7:	fadd   QWORD PTR [edi-0x685481f8]
  411acd:	inc    edx
  411ace:	jmp    0x2a93:0x88432718
  411ad5:	ret    0xb050
  411ad8:	pop    esp
  411ad9:	dec    esp
  411ada:	and    DWORD PTR [ebp+0x14],ebx
  411add:	ins    BYTE PTR es:[edi],dx
  411ade:	outs   dx,BYTE PTR ds:[esi]
  411adf:	aaa    
  411ae0:	inc    edi
  411ae1:	cdq    
  411ae2:	cmp    al,cl
  411ae4:	jl     0x411a9d
  411ae6:	push   0x79
  411ae8:	push   ecx
  411ae9:	mov    ah,0x50
  411aeb:	push   ebx
  411aec:	ds retf 0xb66f
  411af0:	add    edi,edx
  411af2:	pop    esp
  411af3:	adc    eax,0xea272431
  411af8:	jno    0x411b45
  411afa:	lods   al,BYTE PTR ds:[esi]
  411afb:	shr    DWORD PTR [ebx],1
  411afd:	inc    ecx
  411afe:	xchg   bh,ah
  411b00:	mov    ds:0x6ef3ee15,al
  411b05:	xchg   edi,eax
  411b06:	out    dx,eax
  411b07:	out    dx,eax
  411b08:	lods   eax,DWORD PTR ds:[esi]
  411b09:	jge    0x411aca
  411b0b:	xchg   edx,eax
  411b0c:	cmp    esi,ebp
  411b0e:	add    eax,0x914297d8
  411b13:	cld    
  411b14:	sub    BYTE PTR [eax-0x4],bl
  411b17:	out    dx,al
  411b18:	xchg   edx,eax
  411b19:	jg     0x411b06
  411b1b:	nop
  411b1c:	ret    0x2efa
  411b1f:	and    al,0xba
  411b21:	mov    edx,0x2018390d
  411b26:	push   ebp
  411b27:	movups XMMWORD PTR [eax+0x176612b0],xmm3
  411b2e:	pushf  
  411b2f:	xchg   ebp,eax
  411b30:	pop    eax
  411b31:	dec    esp
  411b32:	sub    dl,0xc9
  411b35:	aaa    
  411b36:	dec    esi
  411b37:	sbb    ch,dl
  411b39:	sahf   
  411b3a:	clc    
  411b3b:	and    cl,dl
  411b3d:	(bad)  
  411b3e:	jl     0x411b1f
  411b40:	adc    BYTE PTR [edx],bh
  411b42:	lds    ebp,FWORD PTR [esi*4-0x733282eb]
  411b49:	jp     0x411af7
  411b4b:	fstp   QWORD PTR [edi+0x1fe6da54]
  411b51:	xor    ch,bh
  411b53:	xchg   ebp,eax
  411b54:	je     0x411b14
  411b56:	shl    DWORD PTR [edi],0xd3
  411b59:	aad    0xbc
  411b5b:	addr16 jmp 0x58f:0x46fd879f
  411b63:	das    
  411b64:	(bad)  
  411b65:	sbb    BYTE PTR [edx],0x7f
  411b68:	sbb    al,0x64
  411b6a:	adc    al,0x2
  411b6c:	and    al,BYTE PTR [esi]
  411b6e:	jge    0x411be5
  411b70:	mov    al,BYTE PTR [ecx+0x52]
  411b73:	bound  ecx,QWORD PTR [esi]
  411b75:	xor    DWORD PTR [edx-0x79],edi
  411b78:	pushf  
  411b79:	out    dx,eax
  411b7a:	test   dl,0xe6
  411b7d:	(bad)  
  411b7e:	std    
  411b7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b80:	jae    0x411b64
  411b82:	js     0x411b17
  411b84:	shr    dh,0xfe
  411b87:	popa   
  411b88:	cmp    ecx,DWORD PTR [edx+0x4a]
  411b8b:	cmp    DWORD PTR [edi+ecx*4+0x1f],ebx
  411b8f:	sub    eax,DWORD PTR [edi-0x37]
  411b92:	jb     0x411bcb
  411b94:	jne    0x411b96
  411b96:	ror    esp,cl
  411b98:	stc    
  411b99:	(bad)  
  411b9a:	or     BYTE PTR [eax-0xb641093],bl
  411ba0:	loopne 0x411b73
  411ba2:	add    eax,0x1269099d
  411ba7:	(bad)
  411bab:	mov    BYTE PTR ds:0xd3dd507c,dl
  411bb1:	fabs   
  411bb3:	out    dx,al
  411bb4:	pop    ebx
  411bb5:	test   eax,0xfe90da17
  411bba:	int    0x4a
  411bbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411bbd:	pop    edi
  411bbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411bbf:	mov    eax,ds:0x730698f0
  411bc4:	xor    bl,BYTE PTR [ecx]
  411bc6:	inc    esi
  411bc7:	mov    bl,0x66
  411bc9:	fs sbb eax,0x27b20cf1
  411bcf:	and    al,0x2e
  411bd1:	sahf   
  411bd2:	xchg   edx,eax
  411bd3:	out    0x51,al
  411bd5:	test   edi,0x62888c0c
  411bdb:	and    eax,0xc8f81f73
  411be0:	jb     0x411ba8
  411be2:	rcl    DWORD PTR [esi],1
  411be4:	and    ebx,DWORD PTR [edx]
  411be6:	data16 stc 
  411be8:	mov    ebx,0x2ccfb834
  411bed:	into   
  411bee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411bef:	pop    ds
  411bf0:	and    esp,eax
  411bf2:	mov    esi,0x364637e7
  411bf7:	loop   0x411c74
  411bf9:	repz xor eax,0xa015ec4e
  411bff:	aad    0xae
  411c01:	loopne 0x411bce
  411c03:	popa   
  411c04:	mov    ah,0x2d
  411c06:	sahf   
  411c07:	and    BYTE PTR [esi],cl
  411c09:	push   cs
  411c0a:	fs xchg edx,eax
  411c0c:	ror    dh,1
  411c0e:	int    0xbf
  411c10:	pop    ebp
  411c11:	test   BYTE PTR [edi],0xeb
  411c14:	pop    edx
  411c15:	js     0x411be9
  411c17:	fisttp QWORD PTR [ebp+0x71e5e252]
  411c1d:	stos   DWORD PTR es:[edi],eax
  411c1e:	xchg   DWORD PTR [ebx+0x30900258],eax
  411c24:	in     eax,dx
  411c25:	and    eax,0xaa88e83f
  411c2a:	pop    ecx
  411c2b:	ins    DWORD PTR es:[edi],dx
  411c2c:	fadd   QWORD PTR ss:[esi-0x6]
  411c30:	lods   al,BYTE PTR ds:[esi]
  411c31:	push   ebx
  411c32:	retf   0x2072
  411c35:	addr16 inc edi
  411c37:	jmp    DWORD PTR [esi]
  411c39:	pop    eax
  411c3a:	int    0x4a
  411c3c:	fisubr DWORD PTR [ebx-0x4dbc19f7]
  411c42:	jnp    0x411c75
  411c44:	jg     0x411cc5
  411c46:	ins    DWORD PTR es:[edi],dx
  411c47:	sub    eax,0xf31a797e
  411c4c:	repz cld 
  411c4e:	ins    BYTE PTR es:[edi],dx
  411c4f:	fistp  QWORD PTR es:[edx+0x5ce464b4]
  411c56:	add    dh,cl
  411c58:	push   edx
  411c59:	test   eax,0x273fc12c
  411c5e:	dec    esi
  411c5f:	int    0xd
  411c61:	push   ecx
  411c62:	push   edi
  411c63:	clc    
  411c64:	mov    ?,WORD PTR [eax+0x62]
  411c67:	test   eax,0x955ff8ba
  411c6c:	aas    
  411c6d:	lea    eax,[ecx+0xda466cc]
  411c73:	jae    0x411c29
  411c75:	dec    edx
  411c76:	or     al,0xb4
  411c78:	xchg   ecx,eax
  411c79:	pop    eax
  411c7a:	outs   dx,BYTE PTR ds:[esi]
  411c7b:	mov    ds:0x4e711f2f,al
  411c80:	cmp    al,0x45
  411c82:	pusha  
  411c83:	mov    ss,ecx
  411c85:	enter  0x14ba,0x45
  411c89:	(bad)  
  411c8a:	mov    cl,0x53
  411c8c:	cmp    al,0x33
  411c8e:	push   ss
  411c8f:	pop    esp
  411c90:	xchg   DWORD PTR [edi],edi
  411c92:	pop    ss
  411c93:	rcl    DWORD PTR [edi+eax*4+0x103336bb],0x25
  411c9b:	rcl    DWORD PTR [ebp-0x159833c3],0xba
  411ca2:	stos   BYTE PTR es:[edi],al
  411ca3:	into   
  411ca4:	pushf  
  411ca5:	stos   BYTE PTR es:[edi],al
  411ca6:	adc    esp,DWORD PTR [esi+0x2caa6f28]
  411cac:	pushf  
  411cad:	stos   DWORD PTR es:[edi],eax
  411cae:	jle    0x411cd7
  411cb0:	jg     0x411c52
  411cb2:	push   ebx
  411cb3:	arpl   WORD PTR [edx+0x4e9f55ae],sp
  411cb9:	call   0xf74c20fc
  411cbe:	sti    
  411cbf:	rcl    BYTE PTR [esi+0x46],cl
  411cc2:	pop    eax
  411cc3:	adc    ebx,DWORD PTR [edi+0x5a]
  411cc6:	mov    bl,0x6d
  411cc8:	xor    eax,0xc0f3a4c6
  411ccd:	push   0x235e8c50
  411cd2:	inc    ebx
  411cd3:	jmp    0x70db:0x152f860a
  411cda:	mov    BYTE PTR [ecx+0x1c6470c5],ch
  411ce0:	test   BYTE PTR [edx+0x67],cl
  411ce3:	jmp    0x411c81
  411ce5:	test   eax,0x92b1164e
  411cea:	cmp    eax,0xe976fc73
  411cef:	popa   
  411cf0:	fwait
  411cf1:	ins    BYTE PTR es:[edi],dx
  411cf2:	nop
  411cf3:	xchg   BYTE PTR cs:[ebp+0x0],bl
  411cf7:	mov    esp,0x24c1484b
  411cfc:	out    dx,al
  411cfd:	push   es
  411cfe:	inc    ebp
  411cff:	mov    dh,0xb1
  411d01:	xchg   ebx,eax
  411d02:	xchg   esi,eax
  411d03:	xchg   ebx,eax
  411d04:	jmp    DWORD PTR [eax]
  411d06:	and    al,0x6a
  411d08:	aad    0x6b
  411d0a:	test   al,cl
  411d0c:	sub    cl,cl
  411d0e:	mov    eax,0x116ac747
  411d13:	push   esi
  411d14:	fst    st(0)
  411d16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d17:	dec    ecx
  411d18:	xor    edx,0xf5987a1e
  411d1e:	and    esp,DWORD PTR [ebp-0x4b3aac6]
  411d24:	fdivr  QWORD PTR [edx+ecx*4]
  411d27:	xor    DWORD PTR [esi-0x7a],ebp
  411d2a:	mov    ch,0xcf
  411d2c:	pop    esi
  411d2d:	cmp    edi,DWORD PTR [ebx]
  411d2f:	ins    BYTE PTR es:[edi],dx
  411d30:	mov    esi,0xf6cb88c7
  411d35:	cwde   
  411d36:	(bad)  
  411d37:	push   ecx
  411d38:	or     BYTE PTR [ecx-0x504cff75],al
  411d3e:	in     eax,dx
  411d3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d40:	fist   WORD PTR [esi+edx*8]
  411d43:	int    0x8a
  411d45:	les    edi,FWORD PTR [esi+0x6ef0eee1]
  411d4b:	repnz pop edx
  411d4d:	mov    ds:0x8b62f935,eax
  411d52:	out    0x2a,al
  411d54:	fld    st(4)
  411d56:	pop    esp
  411d57:	mov    edx,0x55508dfe
  411d5c:	int    0x58
  411d5e:	rol    DWORD PTR [ebp+0x2d600560],1
  411d64:	mov    ds:0x2bc19d3e,al
  411d69:	inc    esp
  411d6a:	xor    BYTE PTR [ecx+0x28],al
  411d6d:	je     0x411d26
  411d6f:	mov    DWORD PTR [ebx+0x7b],ebp
  411d72:	mov    edx,0x33f83958
  411d77:	(bad)  
  411d7a:	jmp    0xc082569a
  411d7f:	sub    eax,0x5cf7bb2
  411d84:	clc    
  411d85:	addr16 jmp 0x411d7e
  411d88:	imul   edx,esi,0xffffffa1
  411d8b:	not    ebp
  411d8d:	lods   al,BYTE PTR ds:[esi]
  411d8e:	out    0x1,eax
  411d90:	xchg   esi,eax
  411d91:	(bad)  [edi+0x1b3573fc]
  411d97:	pop    ds
  411d98:	jae    0x411dc9
  411d9a:	scas   eax,DWORD PTR es:[edi]
  411d9b:	and    al,0xb4
  411d9d:	fcomp  QWORD PTR ds:0x7e725eb2
  411da3:	xchg   ecx,eax
  411da4:	jb     0x411db4
  411da6:	mov    WORD PTR [ecx],cs
  411da8:	xchg   edi,eax
  411da9:	imul   ebp,DWORD PTR [ecx+ebx*8],0x1f
  411dad:	addr16 jne 0x411d97
  411db0:	and    dh,cl
  411db2:	push   ebx
  411db3:	in     eax,dx
  411db4:	xor    cl,BYTE PTR [ebp-0x7c]
  411db7:	cmp    bh,BYTE PTR [edx-0x5d]
  411dba:	mov    es,WORD PTR [ecx]
  411dbc:	sbb    BYTE PTR [eax],cl
  411dbe:	movaps xmm0,XMMWORD PTR [esi]
  411dc1:	xchg   ecx,eax
  411dc2:	xchg   ecx,eax
  411dc3:	push   ds
  411dc4:	or     eax,0x21affaf0
  411dc9:	jns    0x411d74
  411dcb:	ja     0x411d8c
  411dcd:	addr16 gs xor eax,0xf7c22e86
  411dd4:	je     0x411d85
  411dd6:	xchg   ecx,eax
  411dd7:	mov    edi,db4
  411dda:	xor    esp,ebp
  411ddc:	mov    ecx,ebx
  411dde:	sub    bh,BYTE PTR [ebx-0x5f]
  411de1:	mov    edx,0xb3013080
  411de6:	adc    esp,DWORD PTR [edx-0x3c]
  411de9:	nop
  411dea:	xlat   BYTE PTR ds:[ebx]
  411deb:	xchg   DWORD PTR [ecx+0x590932a],edx
  411df1:	sub    ah,BYTE PTR [eax]
  411df3:	sbb    DWORD PTR [esi-0x12],esi
  411df6:	xchg   esi,edx
  411df8:	aas    
  411df9:	rol    BYTE PTR [edi+eax*8-0x59a6d2b0],0xc9
  411e01:	ror    BYTE PTR [ecx],0x9a
  411e04:	push   ds
  411e05:	jmp    0x7dfa:0x6e4f05df
  411e0c:	das    
  411e0d:	ja     0x411e21
  411e0f:	je     0x411e20
  411e11:	xor    eax,eax
  411e13:	mov    ss,WORD PTR [ecx]
  411e15:	out    0x72,al
  411e17:	mov    BYTE PTR [ebx+ebx*4+0x52573ead],dh
  411e1e:	add    al,0x29
  411e20:	dec    esp
  411e21:	add    esp,DWORD PTR [edi-0x6a]
  411e24:	repz jbe 0x411e4f
  411e27:	dec    ecx
  411e28:	inc    ebp
  411e29:	and    edi,DWORD PTR [ecx]
  411e2b:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  411e2d:	adc    DWORD PTR [edi+0xa],edx
  411e30:	adc    ebp,edx
  411e32:	dec    esp
  411e33:	mov    al,0x93
  411e35:	mov    ecx,0x505e6e07
  411e3a:	into   
  411e3b:	iret   
  411e3c:	arpl   WORD PTR [esi+eiz*8+0x70e1c179],sp
  411e43:	mov    esi,0xe7586437
  411e48:	sub    BYTE PTR [ecx-0x16215c37],0x68
  411e4f:	scas   eax,DWORD PTR es:[edi]
  411e50:	(bad)  
  411e51:	xchg   esp,eax
  411e52:	repnz cs out 0x77,eax
  411e56:	loop   0x411e3d
  411e58:	adc    DWORD PTR [edx+0x0],eax
  411e5b:	ja     0x411e2d
  411e5d:	push   0xb9ca90eb
  411e62:	fiadd  WORD PTR [edi+0x4b]
  411e65:	xchg   esp,eax
  411e66:	out    dx,eax
  411e67:	sbb    ebp,esi
  411e69:	fisub  WORD PTR [eax-0xe4e12d0]
  411e6f:	cmp    eax,0xb165aac4
  411e74:	jb     0x411e4b
  411e76:	jnp    0x411eb4
  411e78:	and    esi,DWORD PTR [ebx+0x4e189510]
  411e7e:	out    dx,eax
  411e7f:	(bad)  
  411e80:	sahf   
  411e81:	inc    ebp
  411e82:	int    0x30
  411e84:	add    al,0xc9
  411e86:	mov    esp,0xf89dbd49
  411e8b:	add    al,0x1b
  411e8d:	test   eax,0x3c30dc86
  411e92:	sbb    DWORD PTR [ecx],esi
  411e94:	neg    DWORD PTR gs:[ebx]
  411e97:	xchg   ebx,eax
  411e98:	inc    esi
  411e99:	repnz aaa 
  411e9b:	jo     0x411ec0
  411e9d:	ret    
  411e9e:	jecxz  0x411e3b
  411ea0:	jl     0x411e66
  411ea2:	pop    ecx
  411ea3:	sub    BYTE PTR ds:0xcb23f453,cl
  411ea9:	sbb    al,0x5b
  411eab:	(bad)  
  411ead:	jno    0x411ed9
  411eaf:	jmp    0x7ebb:0xac37e955
  411eb6:	jl     0x411e79
  411eb8:	ss clc 
  411eba:	pop    ecx
  411ebb:	test   al,0xe3
  411ebd:	test   eax,0xe29b34c
  411ec2:	or     ch,BYTE PTR [esi-0x6b]
  411ec5:	(bad)
  411ec8:	mov    dh,0x5a
  411eca:	gs repnz (bad) 
  411ecd:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  411ecf:	xlat   BYTE PTR ds:[ebx]
  411ed0:	call   0x801b:0xe6ef88f8
  411ed7:	jmp    0x461f:0xd6833a7e
  411ede:	pop    ecx
  411edf:	adc    eax,esi
  411ee1:	(bad)  
  411ee2:	test   DWORD PTR [ecx+eiz*8+0x3e53ccd9],0x7f446d9f
  411eed:	mov    bh,0x70
  411eef:	push   0xa1dda0e5
  411ef4:	(bad)  
  411ef5:	(bad)  
  411ef6:	fdiv   QWORD PTR [esi+0x1d]
  411ef9:	xor    eax,esp
  411efb:	and    DWORD PTR [eax],eax
  411efd:	mov    BYTE PTR [ebp-0x14],al
  411f00:	or     DWORD PTR cs:[ecx-0x20],ebx
  411f04:	ins    DWORD PTR es:[edi],dx
  411f05:	test   BYTE PTR [ebx],ch
  411f07:	mov    bh,0x14
  411f09:	jp     0x411f52
  411f0b:	in     eax,0xf7
  411f0d:	xchg   edi,eax
  411f0e:	push   edi
  411f0f:	and    BYTE PTR [ebp-0x5],dh
  411f12:	pop    ebx
  411f13:	or     ch,dh
  411f15:	test   al,0xc8
  411f17:	mov    cl,0x16
  411f19:	jno    0x411f7a
  411f1b:	js     0x411eef
  411f1d:	mov    bh,0x3b
  411f1f:	sbb    al,0xb9
  411f21:	in     al,0x59
  411f23:	jmp    0xa1c5:0x132bd1f6
  411f2a:	xor    ebp,DWORD PTR [eax-0x4ec85aee]
  411f30:	shl    BYTE PTR [edi-0x16320c9],cl
  411f36:	out    0x7d,al
  411f38:	lea    ebx,[ebp+edx*2-0x574e0caa]
  411f3f:	xor    eax,0xd07798f5
  411f44:	ins    DWORD PTR es:[edi],dx
  411f45:	xor    DWORD PTR [esi+0x12819300],ebp
  411f4b:	push   ds
  411f4c:	cs aad 0x3a
  411f4f:	pop    esi
  411f50:	jo     0x411f9b
  411f52:	add    bh,bh
  411f54:	push   cs
  411f55:	mov    bh,0xf8
  411f57:	inc    edi
  411f58:	pop    ds
  411f59:	fimul  WORD PTR [edx]
  411f5b:	mov    ch,bl
  411f5d:	cmp    cl,ah
  411f5f:	in     eax,0x95
  411f61:	mov    dh,0x8d
  411f63:	cdq    
  411f64:	cwde   
  411f65:	(bad)  [esi-0x30]
  411f68:	pop    ds
  411f69:	inc    edx
  411f6a:	cwde   
  411f6b:	fs xchg ebx,eax
  411f6d:	inc    edx
  411f6e:	int    0xe0
  411f70:	push   edi
  411f71:	shl    DWORD PTR [edx-0x24],0x8b
  411f75:	jl     0x411f43
  411f77:	cdq    
  411f78:	push   esi
  411f79:	cmp    BYTE PTR [eax-0x6f],bh
  411f7c:	push   ds
  411f7d:	xor    ch,al
  411f7f:	icebp  
  411f80:	mov    ch,0x1
  411f82:	(bad)  
  411f83:	rcl    edi,0xca
  411f86:	push   edi
  411f87:	fs xchg edi,eax
  411f89:	jne    0x411fb8
  411f8b:	push   ds
  411f8c:	xlat   BYTE PTR ds:[ebx]
  411f8d:	push   esi
  411f8e:	pop    eax
  411f8f:	into   
  411f90:	add    ecx,DWORD PTR [ebp+0x78]
  411f93:	mov    DWORD PTR [eax+0x32cd43e3],ecx
  411f99:	into   
  411f9a:	pop    eax
  411f9b:	pop    edx
  411f9c:	xor    al,0xba
  411f9e:	push   es
  411f9f:	mov    cl,0xa0
  411fa1:	sahf   
  411fa2:	jle    0x412010
  411fa4:	(bad)  
  411fa5:	pop    edx
  411fa6:	out    dx,al
  411fa7:	inc    esp
  411fa8:	cmp    al,0x88
  411faa:	in     eax,0xa3
  411fac:	addr16 dec ebx
  411fae:	call   0x6f5c9dd9
  411fb3:	stos   BYTE PTR es:[edi],al
  411fb4:	rcr    DWORD PTR [esi-0x406ecac6],1
  411fba:	inc    esp
  411fbb:	rol    edi,1
  411fbd:	pop    ebx
  411fbe:	inc    ecx
  411fbf:	cmp    al,cl
  411fc1:	clc    
  411fc2:	std    
  411fc3:	add    cl,BYTE PTR ds:0xdfd77dd0
  411fca:	loopne 0x41200d
  411fcc:	icebp  
  411fcd:	pop    esp
  411fce:	add    BYTE PTR [eax+0x2dc70278],cl
  411fd4:	sbb    BYTE PTR [edx+esi*8+0x6568190f],bh
  411fdb:	(bad)  
  411fdc:	push   0xbfb3b063
  411fe1:	and    dh,BYTE PTR [esi+edi*4+0x234c89f5]
  411fe8:	test   al,0xf3
  411fea:	sar    DWORD PTR [ecx+0x7623afaf],1
  411ff0:	inc    esp
  411ff1:	fild   WORD PTR [esi]
  411ff3:	imul   ebx,DWORD PTR [esi],0x1d
  411ff6:	sbb    eax,0x4b33ad82
  411ffb:	test   DWORD PTR [edx],ebx
  411ffd:	int3   
  411ffe:	add    dl,BYTE PTR [edx+0x41]
  412001:	or     al,0xee
  412003:	inc    eax
  412004:	lock das 
  412006:	call   0x8ec1:0xf6601c6
  41200d:	mov    bh,0x22
  41200f:	inc    ecx
  412010:	fbstp  TBYTE PTR [edx+0x5]
  412013:	adc    DWORD PTR ds:0xde7ac3d9,edx
  412019:	jmp    0x63a6:0x64b8637f
  412020:	push   ds
  412021:	repz fld QWORD PTR [esi-0x39]
  412025:	and    al,0x2a
  412027:	ds cli 
  412029:	cmp    eax,0x5f0a43d6
  41202e:	sbb    al,0xa6
  412030:	sti    
  412031:	push   ss
  412032:	sub    bl,BYTE PTR [eax-0x34f65b27]
  412038:	loope  0x412006
  41203a:	adc    esp,DWORD PTR [ebp+ebp*4-0x3030cb0]
  412041:	inc    ebp
  412042:	sbb    ebx,DWORD PTR [ebp+0x1c]
  412045:	or     eax,0x60380e28
  41204a:	sbb    al,0x29
  41204c:	xchg   edx,eax
  41204d:	pop    ds
  41204e:	jp     0x412006
  412050:	aas    
  412051:	inc    esi
  412052:	cld    
  412053:	(bad)  
  412054:	test   al,0x4c
  412056:	scas   eax,DWORD PTR es:[edi]
  412057:	in     eax,dx
  412058:	dec    edx
  412059:	dec    eax
  41205a:	dec    esi
  41205b:	xor    DWORD PTR [ebx+0x55],eax
  41205e:	shr    ecx,1
  412060:	or     BYTE PTR [ebp+0x43],dh
  412063:	push   edi
  412064:	mov    eax,0x25fd89a8
  412069:	add    dl,al
  41206b:	mov    ebx,0xaf66cc69
  412070:	jp     0x4120d0
  412072:	imul   ebx,edi,0xffffff92
  412075:	dec    edi
  412076:	add    eax,DWORD PTR [ecx]
  412078:	into   
  412079:	dec    edx
  41207a:	mov    BYTE PTR [ecx+0x63],bh
  41207d:	xchg   edx,eax
  41207e:	sub    eax,0xda48459f
  412083:	mov    bh,0x1
  412085:	lods   eax,DWORD PTR ds:[esi]
  412086:	sti    
  412087:	xchg   ebx,eax
  412088:	out    dx,al
  412089:	hlt    
  41208a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41208b:	pop    es
  41208c:	ja     0x41208a
  41208e:	std    
  41208f:	dec    edx
  412091:	push   ss
  412092:	jmp    0x4120d7
  412094:	scas   al,BYTE PTR es:[edi]
  412095:	sub    ch,BYTE PTR [ebx+0x1]
  412098:	adc    eax,0xab556b60
  41209d:	leave  
  41209e:	add    cl,cl
  4120a0:	cmp    eax,0xfd43da76
  4120a5:	(bad)  
  4120a6:	not    DWORD PTR [edi+0x55]
  4120a9:	and    eax,0xce22f73d
  4120ae:	dec    ebx
  4120af:	addr16 dec ebp
  4120b1:	dec    edx
  4120b2:	icebp  
  4120b3:	pop    edx
  4120b4:	cs pop es
  4120b6:	daa    
  4120b7:	xor    BYTE PTR [edi],dl
  4120b9:	push   0x36f6aa5
  4120be:	mov    dl,0x5b
  4120c0:	jnp    0x412083
  4120c2:	or     eax,DWORD PTR [esi]
  4120c4:	repnz or BYTE PTR [eax-0x1a5951c3],dh
  4120cb:	add    eax,0x830f0d55
  4120d0:	mov    edi,DWORD PTR ss:[ebx-0x59e5d3ac]
  4120d7:	int3   
  4120d8:	ja     0x41212a
  4120da:	jg     0x41212e
  4120dc:	mov    bh,al
  4120de:	data16 mov cl,0xf4
  4120e1:	pop    es
  4120e2:	pushf  
  4120e3:	mov    al,ds:0xed4635f4
  4120e8:	dec    ebx
  4120e9:	rol    DWORD PTR [edx],1
  4120eb:	aam    0xb
  4120ed:	sbb    eax,DWORD PTR [edi-0x549ead30]
  4120f3:	add    eax,0xf3ca4fee
  4120f8:	pop    es
  4120f9:	jne    0x41210e
  4120fb:	lods   eax,DWORD PTR ds:[esi]
  4120fc:	jno    0x4120ed
  4120fe:	xor    al,0x9a
  412100:	xlat   BYTE PTR ds:[ebx]
  412101:	sbb    bh,BYTE PTR [edx+0x6]
  412104:	mov    BYTE PTR [ebp+0x2e],dl
  412107:	jne    0x4120a9
  412109:	(bad)  
  41210a:	cmp    cl,cl
  41210c:	fwait
  41210d:	fs scas al,BYTE PTR es:[edi]
  41210f:	mov    ds:0x4324e7d4,al
  412114:	and    eax,0xcc687bee
  412119:	xchg   esp,eax
  41211a:	or     BYTE PTR [ecx+eax*4+0x54],dh
  41211e:	loop   0x4120e5
  412120:	call   0x8e066590
  412125:	pushf  
  412126:	cwde   
  412127:	loope  0x4120cd
  412129:	push   edi
  41212a:	aad    0x36
  41212c:	jmp    0xddf1683d
  412131:	xor    al,0x1b
  412133:	dec    esi
  412134:	dec    esi
  412135:	jp     0x4120ee
  412137:	mov    edi,ecx
  412139:	mov    dh,0xda
  41213b:	fs in  eax,dx
  41213d:	and    al,BYTE PTR [edx]
  41213f:	ins    DWORD PTR es:[edi],dx
  412140:	in     eax,0xe5
  412142:	iret   
  412143:	sub    esp,edi
  412145:	xchg   BYTE PTR [ebp+0xc143db7],bh
  41214b:	mov    BYTE PTR [esi-0x71],bl
  41214e:	retf   0xff0a
  412151:	adc    cl,BYTE PTR [ebp+esi*2-0x47]
  412155:	xlat   BYTE PTR ds:[ebx]
  412156:	into   
  412157:	sti    
  412158:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412159:	xor    ah,BYTE PTR ds:0xed6d8091
  41215f:	sbb    DWORD PTR [edx+ebx*8-0x49a28b68],ebx
  412166:	ins    DWORD PTR es:[edi],dx
  412167:	fldenv [esi]
  412169:	cmc    
  41216a:	stos   DWORD PTR es:[edi],eax
  41216b:	sub    BYTE PTR [edi],bh
  41216d:	ficomp DWORD PTR fs:[ecx+0x7a1bfe63]
  412174:	jne    0x412124
  412176:	pop    edx
  412177:	mov    ebx,0x54de146f
  41217c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41217d:	inc    edx
  41217e:	ins    BYTE PTR es:[edi],dx
  41217f:	les    edx,FWORD PTR ds:0xf3321602
  412185:	pop    eax
  412186:	mov    al,ds:0x1b269efb
  41218b:	xor    eax,0x2c8cc3f5
  412190:	jmp    0xfdb725f7
  412195:	mov    al,ds:0xa8096d0c
  41219a:	jno    0x412125
  41219c:	iret   
  41219d:	test   al,0x98
  41219f:	mov    edi,0x245a4a55
  4121a4:	pop    esi
  4121a5:	ds pop ss
  4121a7:	mov    eax,ds:0x5617e4df
  4121ac:	sbb    bh,bl
  4121ae:	lahf   
  4121af:	cdq    
  4121b0:	js     0x41214a
  4121b2:	neg    BYTE PTR ds:0x4f1ae036
  4121b8:	in     al,dx
  4121b9:	sar    BYTE PTR [eax+0x5a],0xb3
  4121bd:	mov    ?,edx
  4121bf:	sti    
  4121c0:	mov    dl,0xe1
  4121c2:	repz int 0xc6
  4121c5:	shl    BYTE PTR [edx],0xa7
  4121c8:	xchg   ebp,eax
  4121c9:	retf   0xe94c
  4121cc:	mov    ebp,0xda1f4879
  4121d1:	cmc    
  4121d2:	push   edx
  4121d3:	inc    ebp
  4121d4:	test   ecx,esp
  4121d6:	cmp    DWORD PTR [esi-0x27],esi
  4121d9:	push   ecx
  4121da:	push   ebx
  4121db:	(bad)  
  4121dc:	outs   dx,BYTE PTR ds:[esi]
  4121dd:	fistp  DWORD PTR [edi]
  4121df:	cmc    
  4121e0:	lds    eax,FWORD PTR [eax-0x5d]
  4121e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121e4:	pop    edi
  4121e5:	sbb    eax,0x167bcba1
  4121ea:	or     bl,BYTE PTR [esi+0x2e]
  4121ed:	(bad)  
  4121ef:	mov    DWORD PTR [edx+edx*8+0x72],esp
  4121f3:	ins    BYTE PTR es:[edi],dx
  4121f4:	lea    eax,[eax+0x1166fc67]
  4121fa:	xor    eax,0x292556b4
  4121ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412200:	hlt    
  412201:	sahf   
  412202:	fiadd  WORD PTR [ebp+ebx*1-0x7047df85]
  412209:	jae    0x412212
  41220b:	and    dl,bh
  41220d:	mov    DWORD PTR [eax+esi*8+0x2d3722df],esi
  412214:	mov    ah,BYTE PTR [ebp+0x28dfad70]
  41221a:	mov    ds:0x680c24a5,eax
  41221f:	ficom  DWORD PTR [esi+0x1d36db43]
  412225:	jo     0x4121a7
  412227:	jnp    0x41222e
  412229:	sbb    DWORD PTR [ebp+0x72],edi
  41222c:	out    dx,al
  41222d:	fnstcw WORD PTR [ecx+0x59b83227]
  412233:	in     al,0x37
  412235:	jecxz  0x4121e4
  412237:	das    
  412238:	shl    DWORD PTR [edi-0x6],cl
  41223b:	aas    
  41223c:	fild   WORD PTR [ecx+0x2c59eeca]
  412242:	out    dx,al
  412243:	push   es
  412244:	(bad)  
  412245:	into   
  412246:	dec    esp
  412247:	retf   0x4618
  41224a:	sbb    BYTE PTR [edx],al
  41224c:	fsubr  DWORD PTR [esi]
  41224e:	or     ecx,DWORD PTR [edi-0x50]
  412251:	ror    ah,cl
  412253:	pop    ss
  412254:	xchg   edi,eax
  412255:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412256:	push   eax
  412257:	sub    bl,bl
  412259:	rcr    DWORD PTR [ecx],0x4f
  41225c:	xchg   esp,eax
  41225d:	imul   edx,DWORD PTR [edi+0x70],0xb
  412261:	sti    
  412262:	dec    esp
  412263:	pusha  
  412264:	pop    edi
  412265:	xchg   BYTE PTR [ecx],ah
  412267:	push   esp
  412268:	pop    esi
  412269:	add    ah,BYTE PTR [edi+0x159f8e89]
  41226f:	call   0x5a31:0x63e81f32
  412276:	call   0x2a39:0xd16872f6
  41227d:	mov    al,0x1f
  41227f:	call   0xbf4adca7
  412284:	xchg   ecx,eax
  412285:	dec    esp
  412286:	add    ch,bl
  412288:	in     al,dx
  412289:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41228a:	lods   al,BYTE PTR ds:[esi]
  41228b:	add    ecx,DWORD PTR [ecx+0xa]
  41228e:	add    ebp,0x3d8fd864
  412294:	dec    edi
  412295:	and    eax,0xa4c57372
  41229a:	inc    ebp
  41229b:	stc    
  41229c:	test   BYTE PTR [ebx-0x8],al
  41229f:	inc    ebp
  4122a0:	pop    ebp
  4122a1:	fidivr WORD PTR [edx-0x392c03a4]
  4122a7:	inc    edx
  4122a8:	xchg   DWORD PTR [ebx],esi
  4122aa:	xchg   ebx,eax
  4122ab:	test   eax,0xfd61c83c
  4122b0:	aaa    
  4122b1:	dec    esp
  4122b2:	mov    eax,0x1ef8b47f
  4122b7:	stos   DWORD PTR es:[edi],eax
  4122b8:	xchg   ecx,eax
  4122b9:	dec    DWORD PTR [ecx-0x42]
  4122bc:	out    0xc5,eax
  4122be:	retf   0x8d37
  4122c1:	mov    dl,BYTE PTR [edi+0x3367ab2b]
  4122c7:	dec    ebp
  4122c8:	xchg   esi,eax
  4122c9:	ret    0x552
  4122cc:	popf   
  4122cd:	jmp    0x412269
  4122cf:	in     al,dx
  4122d0:	aam    0xba
  4122d2:	test   al,al
  4122d4:	push   ebp
  4122d5:	xchg   ecx,eax
  4122d6:	cmp    eax,0x3393e9aa
  4122db:	(bad)  
  4122dc:	and    edx,esp
  4122de:	push   cs
  4122df:	ret    0xf9f3
  4122e2:	sbb    eax,0x26d7f204
  4122e7:	rcr    edi,1
  4122e9:	and    BYTE PTR [ebx-0x4d6cc397],0x2b
  4122f0:	inc    ebx
  4122f1:	pop    edx
  4122f2:	mov    cs,WORD PTR [edi-0x45]
  4122f5:	mov    dl,0x11
  4122f7:	add    DWORD PTR [edx],esi
  4122f9:	icebp  
  4122fa:	and    DWORD PTR [ecx],esi
  4122fc:	mov    cl,0x21
  4122fe:	pop    edi
  4122ff:	(bad)  
  412300:	push   cx
  412302:	xchg   ecx,eax
  412303:	test   DWORD PTR [ecx],ebx
  412305:	xor    eax,0x759f50b8
  41230a:	clc    
  41230b:	mov    dl,0xa7
  41230d:	cmp    DWORD PTR [edi-0x7c],ebp
  412310:	fwait
  412311:	adc    al,0x42
  412313:	cmp    eax,0x92e1006
  412318:	jle    0x4122f5
  41231a:	mov    si,0x82b8
  41231e:	dec    esp
  41231f:	cs push ss
  412321:	fnstcw WORD PTR [eax-0x2f]
  412324:	push   0x8b7a5016
  412329:	pushf  
  41232a:	pusha  
  41232b:	add    al,0x86
  41232d:	adc    dh,bh
  41232f:	fs xchg esi,eax
  412331:	imul   edx,DWORD PTR [ecx],0x29
  412334:	rcl    BYTE PTR [ecx+0x5f1c6dd3],cl
  41233a:	pop    es
  41233b:	sbb    BYTE PTR [ecx-0x2204a5f2],ah
  412341:	pop    ecx
  412342:	adc    esp,edx
  412344:	or     esi,ecx
  412346:	jle    0x412340
  412348:	mov    ebp,0xbc2e2352
  41234d:	sbb    BYTE PTR [edi-0x3d],ch
  412350:	or     bl,bl
  412352:	pusha  
  412353:	in     al,dx
  412354:	jmp    FWORD PTR [edi+0x46]
  412357:	ror    DWORD PTR [ebx-0x676d81a5],0xf1
  41235e:	mov    ebp,0x7df2b47e
  412363:	sbb    ebp,DWORD PTR [ecx]
  412365:	inc    ecx
  412366:	mov    eax,ds:0xdd4e3f59
  41236b:	adc    BYTE PTR [ebp-0x18b1e0dc],dl
  412371:	inc    ebx
  412372:	lods   eax,DWORD PTR ds:[esi]
  412373:	push   eax
  412374:	das    
  412375:	pop    ecx
  412376:	inc    ecx
  412377:	cmp    ah,BYTE PTR [eax+0x19cb28ee]
  41237d:	sub    al,0xe5
  41237f:	popf   
  412380:	cmp    BYTE PTR [ecx+0x2e],ch
  412383:	int    0xc2
  412385:	jns    0x412346
  412387:	sti    
  412388:	xchg   edi,eax
  412389:	iret   
  41238a:	fwait
  41238b:	dec    dl
  41238d:	add    DWORD PTR [edx],esp
  41238f:	sar    DWORD PTR [esi],0xb7
  412392:	aam    0x90
  412394:	jae    0x4123fd
  412396:	pop    ds
  412397:	dec    ebp
  412398:	xchg   edi,eax
  412399:	or     ebx,ecx
  41239b:	pop    eax
  41239c:	sar    DWORD PTR [ebx+0x6c],cl
  41239f:	or     al,0xf6
  4123a1:	daa    
  4123a2:	adc    eax,0xd21fe0d
  4123a7:	cli    
  4123a8:	mov    bh,0x0
  4123aa:	add    edi,DWORD PTR [esi]
  4123ac:	(bad)  
  4123ad:	pop    edx
  4123ae:	(bad)  
  4123af:	aas    
  4123b0:	stc    
  4123b1:	or     bh,BYTE PTR [edi+0x56]
  4123b4:	clc    
  4123b5:	sub    DWORD PTR [ebx-0x80],esi
  4123b8:	addr16 xchg edi,eax
  4123ba:	(bad)  
  4123bb:	daa    
  4123bc:	ins    BYTE PTR es:[edi],dx
  4123bd:	or     al,0x42
  4123bf:	aaa    
  4123c0:	mov    ecx,0xb3106215
  4123c5:	xor    BYTE PTR [ebx-0x23],0xef
  4123c9:	mov    edi,0x2549826e
  4123ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4123cf:	jg     0x4123a6
  4123d1:	int    0xea
  4123d3:	dec    ebx
  4123d4:	aam    0x95
  4123d6:	fst    DWORD PTR [ebp+0x7b9dd1ea]
  4123dc:	mov    bl,0x25
  4123de:	xor    edx,DWORD PTR [ecx+0x6c]
  4123e1:	add    al,bl
  4123e3:	jg     0x41244d
  4123e5:	test   DWORD PTR [ecx],esp
  4123e7:	sub    bh,ch
  4123e9:	gs stc 
  4123eb:	(bad)  
  4123ee:	repz pop edi
  4123f0:	xlat   BYTE PTR ds:[ebx]
  4123f1:	jecxz  0x41241f
  4123f3:	or     eax,0xbc592a6
  4123f8:	mov    cl,0xab
  4123fb:	and    edx,DWORD PTR [edi+0x24675020]
  412401:	shr    DWORD PTR [ecx],cl
  412403:	outs   dx,DWORD PTR ds:[esi]
  412404:	mov    DWORD PTR [edx],ecx
  412406:	mov    BYTE PTR [ecx],ah
  412408:	mul    DWORD PTR ds:0xdca4fc0
  41240e:	out    dx,al
  41240f:	fdiv   st,st(0)
  412411:	out    0x0,al
  412413:	dec    edx
  412414:	and    dl,dl
  412416:	fmul   DWORD PTR [ecx+0x448b8e98]
  41241c:	int3   
  41241d:	mov    eax,0xe0c69cc2
  412422:	push   ebx
  412423:	in     eax,0x56
  412425:	cld    
  412426:	pusha  
  412427:	repz adc BYTE PTR [eax+ebx*2+0x1648dcba],0xee
  412430:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412431:	xchg   ecx,eax
  412432:	scas   al,BYTE PTR es:[edi]
  412433:	lods   eax,DWORD PTR ds:[esi]
  412434:	(bad)  
  412436:	out    dx,eax
  412437:	xchg   bh,dh
  412439:	out    dx,al
  41243a:	retf   
  41243b:	dec    ebp
  41243c:	pop    ds
  41243d:	call   0x34d17f9b
  412442:	ss daa 
  412444:	add    eax,DWORD PTR [ecx+0x6f]
  412447:	push   cs
  412448:	or     edx,eax
  41244a:	or     al,0xf5
  41244c:	adc    cl,BYTE PTR [edi+ebp*4]
  41244f:	or     ch,0x5
  412452:	aam    0x9d
  412454:	jmp    0x412482
  412456:	pop    ecx
  412457:	mov    ecx,0xb3da2adb
  41245c:	hlt    
  41245d:	pushf  
  41245e:	sub    ecx,eax
  412460:	xor    al,0x8e
  412462:	(bad)  
  412463:	mov    esi,?
  412465:	fwait
  412466:	jne    0x412456
  412468:	sub    BYTE PTR [edx+edi*2],cl
  41246b:	ret    0xeacf
  41246e:	in     al,dx
  41246f:	xchg   ch,dl
  412471:	pop    esi
  412472:	push   es
  412473:	xchg   esi,eax
  412474:	outs   dx,DWORD PTR ds:[esi]
  412475:	inc    edx
  412476:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412477:	stos   DWORD PTR es:[edi],eax
  412478:	jne    0x41241b
  41247a:	jne    0x412483
  41247c:	imul   edi,DWORD PTR [edi],0x56
  41247f:	and    esp,edi
  412481:	mov    esi,0x1be8babf
  412486:	xor    DWORD PTR [ecx+esi*2-0x5637ab70],ebp
  41248d:	cmp    BYTE PTR [ebx],dl
  41248f:	push   eax
  412490:	out    dx,eax
  412491:	aam    0x9
  412493:	sub    BYTE PTR [esi+0x1],ch
  412496:	mov    al,0xf8
  412498:	sub    ecx,DWORD PTR [esi]
  41249a:	gs jg  0x412489
  41249d:	into   
  41249e:	dec    edx
  41249f:	xor    edi,ecx
  4124a1:	mov    cl,0xe1
  4124a3:	jb     0x4124e4
  4124a5:	lea    edi,[ebp-0x10]
  4124a8:	out    dx,eax
  4124a9:	mov    al,0x77
  4124ab:	adc    ebp,DWORD PTR [ebp+0x68d33a25]
  4124b1:	jp     0x4124da
  4124b3:	or     DWORD PTR [edx+eiz*4+0xf],esi
  4124b7:	dec    edx
  4124b8:	in     al,dx
  4124b9:	mov    cl,BYTE PTR [esi-0x35]
  4124bc:	and    eax,0xc95fd37c
  4124c1:	into   
  4124c2:	pop    ebp
  4124c3:	or     al,0x92
  4124c5:	lahf   
  4124c6:	pop    edi
  4124c7:	adc    BYTE PTR [edi],ah
  4124c9:	in     eax,dx
  4124ca:	and    al,0x98
  4124cc:	cmc    
  4124cd:	les    edi,FWORD PTR [edx]
  4124cf:	add    al,0x37
  4124d1:	imul   ebx,esp,0xffffffe8
  4124d4:	xchg   ecx,eax
  4124d5:	dec    ecx
  4124d6:	lahf   
  4124d7:	stos   DWORD PTR es:[edi],eax
  4124d8:	xor    al,0x1e
  4124da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4124db:	inc    esp
  4124dc:	test   esi,eax
  4124de:	test   BYTE PTR [ecx+0x52],ch
  4124e1:	scas   eax,DWORD PTR es:[edi]
  4124e2:	iret   
  4124e3:	xchg   edi,eax
  4124e4:	fdiv   QWORD PTR [edi+edi*2]
  4124e7:	push   es
  4124e8:	sub    DWORD PTR [esi],0x434fae91
  4124ee:	jnp    0x412516
  4124f0:	jge    0x4124ff
  4124f2:	fst    DWORD PTR [esi+0x79]
  4124f5:	sub    esi,DWORD PTR [ebp+edi*1-0x28]
  4124f9:	int3   
  4124fa:	arpl   WORD PTR [ebp+0x77],cx
  4124fd:	loop   0x412524
  4124ff:	sub    ah,dh
  412501:	jecxz  0x412533
  412503:	neg    esp
  412505:	lock push eax
  412507:	push   ecx
  412508:	mov    ch,0x9e
  41250a:	icebp  
  41250b:	mov    bl,0x41
  41250d:	and    eax,0xfe859807
  412512:	mov    ds:0x3dbca578,eax
  412517:	sub    eax,0xafb9b0fb
  41251c:	inc    BYTE PTR [ebx]
  41251e:	cli    
  41251f:	sti    
  412520:	dec    edi
  412521:	dec    eax
  412522:	lock push cs
  412524:	gs xor al,0xc7
  412527:	jnp    0x412528
  412529:	(bad)  
  41252a:	xor    al,0x2c
  41252c:	sub    DWORD PTR [ecx+0x54],esp
  41252f:	mov    al,ds:0x5ec741ba
  412534:	add    eax,0x907cebb3
  412539:	cs jg  0x412546
  41253c:	daa    
  41253d:	aam    0xf3
  41253f:	push   ss
  412540:	test   eax,0x1b25e4ec
  412545:	sbb    eax,0x6815d950
  41254a:	dec    ebx
  41254b:	repz lahf 
  41254d:	push   cs
  41254e:	in     al,dx
  41254f:	mov    WORD PTR [edi],cs
  412551:	pop    ebx
  412552:	dec    ebp
  412553:	lds    ecx,FWORD PTR [eax]
  412555:	cmp    edx,DWORD PTR [esi]
  412557:	push   eax
  412558:	dec    edx
  412559:	jmp    0x37b7:0xfdf8bd28
  412560:	mov    cl,0x7e
  412562:	sbb    BYTE PTR [esi],al
  412564:	push   edi
  412565:	jne    0x4125c1
  412567:	push   ebx
  412568:	test   al,0xc6
  41256a:	pop    ebx
  41256b:	fistp  WORD PTR ds:0xef687909
  412571:	div    edx
  412573:	outs   dx,DWORD PTR ds:[esi]
  412574:	mov    dl,0xe
  412576:	stos   DWORD PTR es:[edi],eax
  412577:	popa   
  412578:	daa    
  412579:	es push ecx
  41257b:	mov    esi,DWORD PTR [ecx]
  41257d:	outs   dx,DWORD PTR ds:[esi]
  41257e:	adc    DWORD PTR [edi-0x1d],ebp
  412581:	mov    dl,0xdd
  412583:	or     dl,cl
  412585:	bound  edx,QWORD PTR [eax-0x79]
  412588:	sti    
  412589:	out    dx,eax
  41258a:	repnz adc BYTE PTR [edx+0x4b81a10a],cl
  412591:	leave  
  412592:	pop    ds
  412593:	or     dh,BYTE PTR [ebp+0x78ed3b30]
  412599:	and    ch,BYTE PTR [ebx+ebx*2-0x204585e2]
  4125a0:	lock mov ch,0xd0
  4125a3:	test   al,0x13
  4125a5:	jecxz  0x412625
  4125a7:	adc    al,dl
  4125a9:	inc    ebx
  4125aa:	jne    0x412581
  4125ac:	shl    DWORD PTR [esi-0x69],cl
  4125af:	inc    ecx
  4125b0:	outs   dx,DWORD PTR ds:[esi]
  4125b1:	test   BYTE PTR [edi+esi*4+0x7dd52120],ah
  4125b8:	add    bh,BYTE PTR [ebx+0x74963e6f]
  4125be:	pop    edx
  4125bf:	xchg   ebp,eax
  4125c0:	(bad)  
  4125c1:	cmp    eax,0x8f1c44c9
  4125c6:	rcl    DWORD PTR [esi],0x54
  4125c9:	call   0x9a3a266
  4125ce:	inc    ebx
  4125cf:	jecxz  0x4125cb
  4125d1:	cs mov ah,ah
  4125d4:	(bad)  
  4125d5:	(bad)  
  4125d6:	push   ss
  4125d7:	add    ah,0x0
  4125da:	(bad)  
  4125db:	jae    0x41262d
  4125dd:	push   ecx
  4125de:	cli    
  4125df:	loope  0x4125d4
  4125e1:	mov    dl,0xfc
  4125e3:	xor    dl,BYTE PTR [ebx-0x189051eb]
  4125e9:	mov    ebp,0xc32eaee7
  4125ee:	ret    0xb173
  4125f1:	es mov ebx,0xa8b834fc
  4125f7:	fld    DWORD PTR [esi]
  4125f9:	pop    esi
  4125fa:	mov    bh,0x21
  4125fc:	mov    dh,0x25
  4125fe:	fisttp QWORD PTR [ecx-0x6c]
  412601:	cmp    ah,BYTE PTR [edx-0x10c76036]
  412607:	jmp    0x4125ea
  412609:	shr    BYTE PTR [eax+0x53],1
  41260c:	shl    DWORD PTR [ebx],1
  41260e:	sub    al,0x5c
  412610:	sahf   
  412611:	push   ecx
  412612:	pop    ebp
  412613:	jl     0x412682
  412615:	sub    DWORD PTR [eax],0xffffff9e
  412618:	dec    esi
  412619:	nop
  41261a:	(bad)  
  41261b:	fistp  QWORD PTR [edi+0x5f]
  41261e:	add    DWORD PTR [esp+edx*2],eax
  412621:	scas   al,BYTE PTR es:[edi]
  412622:	adc    eax,0x118c23aa
  412627:	push   edx
  412628:	mov    bl,0x16
  41262a:	int    0x42
  41262c:	xchg   edx,eax
  41262d:	jbe    0x4125e4
  41262f:	call   0xda9c5f1c
  412634:	not    ah
  412636:	stos   DWORD PTR es:[edi],eax
  412637:	loop   0x412678
  412639:	test   eax,0x70866e98
  41263e:	mov    esp,0xcace7aa
  412643:	ja     0x4125c6
  412645:	sbb    BYTE PTR [eax],0xaa
  412648:	ins    BYTE PTR es:[edi],dx
  412649:	mov    dh,0x37
  41264b:	inc    esi
  41264d:	scas   al,BYTE PTR es:[edi]
  41264e:	sub    esi,DWORD PTR [edi+0x7bf96646]
  412654:	outs   dx,DWORD PTR ds:[esi]
  412655:	lahf   
  412656:	adc    BYTE PTR [esi-0x6],dh
  412659:	scas   eax,DWORD PTR es:[edi]
  41265a:	push   ss
  41265b:	aas    
  41265c:	mov    dh,0x9
  41265e:	in     eax,dx
  41265f:	mov    edx,0x69ba0403
  412664:	jbe    0x41262c
  412666:	test   eax,0xf5d54c
  41266b:	div    bh
  41266d:	adc    esi,DWORD PTR [ebp-0x3a]
  412670:	push   0xe351ae0a
  412675:	pop    ss
  412676:	pop    esi
  412677:	int3   
  412678:	inc    esp
  412679:	sub    al,0x93
  41267b:	fidiv  WORD PTR [ecx-0x1d]
  41267e:	pop    ebx
  41267f:	ret    
  412680:	or     BYTE PTR [ebx+0x3b],dl
  412683:	fwait
  412684:	cmp    esi,ebx
  412686:	or     al,0x16
  412688:	xlat   BYTE PTR ds:[ebx]
  412689:	mov    ebx,0x4491f887
  41268e:	sbb    al,BYTE PTR [esi+eiz*1-0x7f]
  412692:	cmp    dh,BYTE PTR [eax-0x23]
  412695:	(bad)  [ecx]
  412697:	clc    
  412698:	push   ecx
  412699:	sti    
  41269a:	or     BYTE PTR [eax+0x351d024d],bh
  4126a0:	xchg   BYTE PTR [edi+0x1e],cl
  4126a3:	and    ecx,DWORD PTR [ebx-0x26]
  4126a6:	rcl    BYTE PTR [esi],0xb1
  4126a9:	push   edi
  4126aa:	(bad)  
  4126ac:	xchg   edx,eax
  4126ad:	(bad)  
  4126ae:	ds mov bl,0x2a
  4126b1:	inc    edi
  4126b2:	int    0x44
  4126b4:	xor    eax,DWORD PTR [eax]
  4126b6:	addr16 shr ebp,1
  4126b9:	stos   DWORD PTR es:[edi],eax
  4126ba:	stc    
  4126bb:	jmp    0x412712
  4126bd:	scas   al,BYTE PTR es:[edi]
  4126be:	cmp    BYTE PTR [ecx+0x38062f40],ch
  4126c4:	fidivr WORD PTR [edx-0x5]
  4126c7:	or     ebx,DWORD PTR [edi+0x54c1c7c6]
  4126cd:	mov    ds:0x5e09e7bc,al
  4126d2:	repnz push ebp
  4126d4:	mov    eax,0x106eed7
  4126d9:	outs   dx,BYTE PTR ds:[esi]
  4126da:	sub    eax,ecx
  4126dc:	xchg   ebx,eax
  4126dd:	jp     0x4126f8
  4126df:	(bad)  
  4126e0:	enter  0xf94,0x47
  4126e4:	mov    esp,0xf2934534
  4126e9:	xor    al,0xb9
  4126eb:	scas   eax,DWORD PTR es:[edi]
  4126ec:	sub    al,0xeb
  4126ee:	je     0x4126aa
  4126f0:	mov    ebp,0x5209ad2f
  4126f5:	cmp    DWORD PTR [ebx+0x14ac48a3],esp
  4126fb:	adc    DWORD PTR [edx],esp
  4126fd:	dec    eax
  4126fe:	xor    eax,0x894d98f2
  412703:	push   ss
  412704:	fbld   TBYTE PTR [ecx]
  412706:	jge    0x41276e
  412708:	and    al,0xec
  41270a:	es lock inc ebp
  41270d:	xor    eax,0x458f0853
  412712:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412713:	add    DWORD PTR [esi-0x51],edx
  412716:	pop    edx
  412717:	inc    ebx
  412718:	push   edi
  412719:	jno    0x412779
  41271b:	sub    ebp,DWORD PTR [esi]
  41271d:	sbb    al,ch
  41271f:	dec    esi
  412720:	xchg   ebx,eax
  412721:	cmp    al,0x63
  412723:	ins    BYTE PTR es:[edi],dx
  412724:	sbb    ebp,DWORD PTR [edx-0xe]
  412727:	scas   eax,DWORD PTR es:[edi]
  412728:	into   
  412729:	in     eax,0x6f
  41272b:	and    al,0x89
  41272d:	loopne 0x41270c
  41272f:	pop    esp
  412730:	and    cl,BYTE PTR [esi-0x26]
  412733:	retf   
  412734:	push   cs
  412735:	fcomp  DWORD PTR [eax]
  412737:	hlt    
  412738:	fmul   QWORD PTR [esi+0xb]
  41273b:	retf   
  41273c:	dec    eax
  41273d:	mov    al,ds:0xbe9c1e2
  412742:	call   0xd75b1bb0
  412747:	cwde   
  412748:	cmp    edx,DWORD PTR [edx]
  41274a:	pop    ds
  41274b:	dec    esp
  41274c:	inc    ecx
  41274d:	cdq    
  41274e:	popa   
  41274f:	push   0xdaf8013f
  412754:	stc    
  412755:	xlat   BYTE PTR ds:[ebx]
  412756:	xlat   BYTE PTR ds:[ebx]
  412757:	ret    0x642d
  41275a:	mov    esi,0xa642215c
  41275f:	pop    edx
  412760:	scas   eax,DWORD PTR es:[edi]
  412761:	(bad)  
  412762:	int    0x4b
  412764:	mov    esi,0xdfdb2090
  412769:	xor    eax,ecx
  41276b:	mov    eax,0xb36b4a27
  412770:	mov    esi,ecx
  412772:	out    0x71,eax
  412774:	rcl    DWORD PTR [esi-0x61dbc950],0x4f
  41277b:	gs xchg edi,eax
  41277d:	mov    bl,0xa
  41277f:	mov    dl,0x17
  412781:	add    edx,DWORD PTR [ebp+edi*8-0x9]
  412785:	add    bl,ah
  412787:	stos   DWORD PTR es:[edi],eax
  412788:	call   0x657544b9
  41278d:	paddb  mm7,QWORD PTR [eax-0x3b]
  412791:	sub    DWORD PTR ds:0x33fdc85,edx
  412797:	mov    ecx,0x6c954b03
  41279c:	sub    eax,DWORD PTR [ebx+0x3b]
  41279f:	jp     0x4127b6
  4127a1:	sbb    eax,0xd376f485
  4127a6:	sbb    eax,0xdcc8a168
  4127ab:	(bad)  
  4127ad:	shl    DWORD PTR [eax+0x795d5152],cl
  4127b3:	fld    DWORD PTR [edi+0x22]
  4127b6:	fwait
  4127b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127b8:	bswap  ecx
  4127ba:	jno    0x4127d6
  4127bc:	in     al,0xdb
  4127be:	(bad)  
  4127c0:	jmp    0x8c2ae76
  4127c5:	sahf   
  4127c6:	sar    DWORD PTR [eax+ecx*4],0x14
  4127ca:	ds xor al,0xa2
  4127cd:	sbb    ebx,DWORD PTR [edi+0x73d4ef2c]
  4127d3:	inc    esp
  4127d4:	sub    ebp,ecx
  4127d6:	sbb    DWORD PTR [eax+0x40],esi
  4127d9:	inc    eax
  4127da:	call   0xe24fe2f0
  4127df:	mov    al,ds:0xba162412
  4127e4:	lods   al,BYTE PTR ds:[esi]
  4127e5:	leave  
  4127e6:	pushf  
  4127e7:	daa    
  4127e8:	push   edi
  4127e9:	push   ds
  4127ea:	fcom   DWORD PTR [esi-0x80]
  4127ed:	jle    0x412842
  4127ef:	sbb    eax,esi
  4127f1:	mov    edx,DWORD PTR [edx-0x5c10fbf3]
  4127f7:	and    esi,esi
  4127f9:	fnsave [ebx]
  4127fb:	push   cs
  4127fc:	mov    WORD PTR [esp+ebp*2-0x8],es
  412800:	pusha  
  412801:	push   0xffffffb8
  412803:	popf   
  412804:	cmc    
  412805:	les    ecx,FWORD PTR [ebx+0x29a2795c]
  41280b:	dec    edx
  41280c:	adc    ecx,esp
  41280e:	ret    
  41280f:	and    edi,esp
  412811:	outs   dx,BYTE PTR ds:[esi]
  412812:	sub    DWORD PTR [ebp+0x1c3f2605],ebx
  412818:	push   ebx
  412819:	and    ebx,DWORD PTR [edi-0x6d]
  41281c:	jbe    0x4127c0
  41281e:	in     eax,0x69
  412820:	js     0x4127eb
  412822:	arpl   WORD PTR [ebp+0x5d],di
  412825:	rcl    DWORD PTR [eax-0x4c638aef],cl
  41282b:	push   0xc40d5b73
  412830:	sbb    BYTE PTR ds:0x97d11549,ch
  412836:	rcr    BYTE PTR [esi-0x53],0x3d
  41283a:	mov    esi,0xd182d697
  41283f:	pusha  
  412840:	or     BYTE PTR [edi-0x4d],dl
  412843:	xchg   edx,eax
  412844:	(bad)  
  412845:	adc    eax,0xc3deab12
  41284a:	in     eax,0x85
  41284c:	leave  
  41284d:	repnz outs dx,DWORD PTR ds:[esi]
  41284f:	fwait
  412850:	sar    BYTE PTR [esi+eax*4+0x897c731],cl
  412857:	jp     0x412854
  412859:	sbb    ah,BYTE PTR [edx+0x3e79c03f]
  41285f:	ins    BYTE PTR es:[edi],dx
  412860:	cs mov bl,0xc7
  412863:	inc    ebx
  412864:	cs cmp ebx,esp
  412867:	mov    DWORD PTR [edx],edx
  412869:	add    DWORD PTR [ebx+eiz*8-0x66],eax
  41286d:	js     0x41288c
  41286f:	out    0x25,eax
  412871:	adc    eax,DWORD PTR [esi+0x326847e9]
  412877:	jge    0x412866
  412879:	fisttp QWORD PTR [esi+0x57]
  41287c:	or     DWORD PTR [edx],ebp
  41287e:	xlat   BYTE PTR ds:[ebx]
  41287f:	jns    0x412815
  412881:	xor    esp,edx
  412883:	sbb    ch,BYTE PTR [ebp+0x8]
  412886:	jbe    0x4128b2
  412888:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412889:	fwait
  41288a:	mov    ds:0xf584d64f,al
  41288f:	aam    0xb6
  412891:	push   edx
  412892:	xor    DWORD PTR ds:0xd7c6014c,edi
  412898:	jo     0x412880
  41289a:	sbb    DWORD PTR [edi+0x535c0d4f],esp
  4128a0:	add    DWORD PTR [ecx-0x2d342246],esp
  4128a6:	int3   
  4128a7:	xor    al,0x82
  4128a9:	jecxz  0x4128c0
  4128ab:	mov    eax,0xb66b911f
  4128b0:	pushf  
  4128b1:	xchg   esi,eax
  4128b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128b3:	ret    
  4128b4:	mov    dl,0xc3
  4128b6:	inc    ebp
  4128b7:	sti    
  4128b8:	daa    
  4128b9:	inc    ebp
  4128ba:	mov    ds:0x33bfb437,eax
  4128bf:	jecxz  0x41288d
  4128c1:	ins    BYTE PTR es:[edi],dx
  4128c2:	lods   eax,DWORD PTR ds:[esi]
  4128c3:	push   ecx
  4128c4:	jo     0x412875
  4128c6:	pushw  0x68aa
  4128ca:	and    DWORD PTR [edx+eax*8+0x57],edx
  4128ce:	xor    DWORD PTR [edi+0x50bdd417],ebp
  4128d4:	inc    DWORD PTR [ebp+0x27]
  4128d7:	sti    
  4128d8:	adc    BYTE PTR [ecx-0x1f8e3dd8],dh
  4128de:	mov    ds:0xbd8e2f84,al
  4128e3:	fcom   DWORD PTR [esp+edi*4]
  4128e6:	xchg   ebp,eax
  4128e7:	adc    al,0xd4
  4128e9:	fcmovnu st,st(5)
  4128eb:	data16 jmp 0x41287c
  4128ee:	mov    ah,0x6d
  4128f0:	jb     0x412907
  4128f2:	xor    bl,BYTE PTR [ecx-0x17]
  4128f5:	inc    ecx
  4128f6:	sbb    BYTE PTR ds:0xc283c3af,0x40
  4128fd:	and    cl,bl
  4128ff:	mov    bl,0xa0
  412901:	fdivr  QWORD PTR [edi+esi*8-0x5c]
  412905:	dec    esi
  412906:	fwait
  412907:	push   ebx
  412908:	not    BYTE PTR [ebp+0x3459c66c]
  41290e:	or     edx,ebp
  412910:	and    DWORD PTR ds:0x6c9f85fb,0x35
  412917:	mov    ds:0xed0ef836,eax
  41291c:	stc    
  41291d:	hlt    
  41291e:	mov    ch,0x79
  412920:	bound  ebp,QWORD PTR [edi-0x1c]
  412923:	out    0x99,al
  412925:	repz and eax,0xc9bf242e
  41292b:	(bad)  
  41292d:	aaa    
  41292e:	sbb    al,0xaf
  412930:	outs   dx,DWORD PTR ds:[esi]
  412931:	mov    ecx,DWORD PTR [eax]
  412933:	cmp    dh,BYTE PTR [eax]
  412935:	arpl   sp,cx
  412937:	dec    edi
  412938:	rol    BYTE PTR [ecx],cl
  41293a:	pushf  
  41293b:	mov    ebx,DWORD PTR [ebx+0x63f35a43]
  412941:	dec    ecx
  412942:	pusha  
  412943:	std    
  412944:	lock imul ebp,DWORD PTR [ebp-0x31],0xffffff99
  412949:	inc    ebx
  41294a:	mov    dh,0x74
  41294c:	rol    DWORD PTR [ecx+0x55390a8d],1
  412952:	aad    0x93
  412954:	and    eax,0x98dfdb00
  412959:	jl     0x4129a5
  41295b:	cmp    dl,BYTE PTR [edi-0x2a]
  41295e:	mov    esi,0xf62178a7
  412963:	(bad)  
  412964:	adc    edi,DWORD PTR [edi]
  412966:	rcr    bh,0x3
  412969:	dec    ebx
  41296a:	mov    BYTE PTR [ebx+0xd],0xa3
  41296e:	inc    esp
  41296f:	sub    ebp,ebx
  412971:	inc    edx
  412972:	xor    DWORD PTR [ebx-0x6a4e9819],edi
  412978:	scas   eax,DWORD PTR es:[edi]
  412979:	enter  0x3e4b,0x87
  41297d:	push   ecx
  41297e:	and    al,0xfb
  412980:	jno    0x4129b1
  412982:	adc    edi,edi
  412984:	sbb    al,0x82
  412986:	xchg   edx,eax
  412987:	fbld   TBYTE PTR [edi]
  412989:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41298a:	test   DWORD PTR [ebp+0x7a],0x38ff7e8f
  412991:	mov    esi,0x18d1a126
  412996:	fisub  DWORD PTR [edi]
  412998:	mov    ebp,0xf0ef20ab
  41299d:	push   edi
  41299e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41299f:	pop    edi
  4129a0:	hlt    
  4129a1:	dec    edi
  4129a2:	or     esp,eax
  4129a4:	out    0x9,eax
  4129a6:	sub    ch,al
  4129a8:	sti    
  4129a9:	out    0x7b,eax
  4129ab:	out    dx,al
  4129ac:	sub    dh,0x86
  4129af:	test   DWORD PTR [ebx],edx
  4129b1:	or     DWORD PTR [edi+eiz*1],ebp
  4129b4:	mov    esi,0x51950212
  4129b9:	push   0xf3f80f47
  4129be:	dec    eax
  4129bf:	mov    edx,0xe7d03808
  4129c4:	sar    cl,cl
  4129c6:	call   0xdf64:0x43b9ac70
  4129cd:	dec    esp
  4129ce:	push   ds
  4129cf:	xor    esp,0x4a
  4129d2:	jmp    0xe601:0x763d6437
  4129d9:	push   edx
  4129da:	mov    WORD PTR [edi],ds
  4129dc:	jae    0x412996
  4129de:	pop    ss
  4129df:	inc    ecx
  4129e0:	nop
  4129e1:	aaa    
  4129e2:	mov    ds:0x160ff41a,eax
  4129e7:	and    ebx,DWORD PTR [ecx-0x7f]
  4129ea:	outs   dx,DWORD PTR ds:[esi]
  4129eb:	pop    edx
  4129ec:	ins    BYTE PTR es:[edi],dx
  4129ed:	push   edi
  4129ee:	lods   eax,DWORD PTR ds:[esi]
  4129ef:	mov    edx,0xec833164
  4129f4:	push   edx
  4129f5:	adc    ebp,DWORD PTR [edi+0x32]
  4129f8:	fild   WORD PTR [esi+0x3d0190a3]
  4129fe:	leave  
  4129ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a00:	sbb    DWORD PTR [esi+0x3dacd8e5],esp
  412a06:	ins    BYTE PTR es:[edi],dx
  412a07:	mov    ds:0x2693ff5f,al
  412a0c:	inc    ebx
  412a0d:	fimul  WORD PTR [ebp+0x1e]
  412a10:	xchg   esi,eax
  412a11:	inc    ebx
  412a12:	adc    eax,0x1fe88435
  412a17:	dec    esi
  412a18:	(bad)  
  412a19:	scas   al,BYTE PTR es:[edi]
  412a1a:	pop    edx
  412a1b:	lods   eax,DWORD PTR ds:[esi]
  412a1c:	leave  
  412a1d:	and    BYTE PTR [ecx],bl
  412a1f:	sub    DWORD PTR ds:[edi+0x7658f18e],edi
  412a26:	sub    al,0x6
  412a28:	mov    edi,DWORD PTR [edx+edx*2-0x6e28317c]
  412a2f:	fnstsw WORD PTR [ebp+0x53702ae8]
  412a35:	test   DWORD PTR [esi-0x1f14483e],esp
  412a3b:	inc    ebp
  412a3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a3d:	aaa    
  412a3e:	cmp    dh,BYTE PTR [ecx-0x3d]
  412a41:	sahf   
  412a42:	std    
  412a43:	les    esp,FWORD PTR [ebx+0x29]
  412a46:	sub    al,0x71
  412a48:	inc    esp
  412a49:	jne    0x4129ed
  412a4b:	gs inc esp
  412a4d:	test   DWORD PTR [ebx],0x338dd052
  412a53:	and    eax,0xab6ad62e
  412a58:	sub    al,0x1a
  412a5a:	std    
  412a5b:	mov    al,0x1d
  412a5d:	popa   
  412a5e:	and    ecx,DWORD PTR [ecx+0x4d84158d]
  412a64:	imul   ebp,DWORD PTR [eax+0x4c8f4b0b],0xc
  412a6b:	daa    
  412a6c:	popf   
  412a6d:	rcl    DWORD PTR [edx+0x5936e284],cl
  412a73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a74:	pusha  
  412a75:	cmp    DWORD PTR [edx+0x67b23bbf],ecx
  412a7b:	mov    ds:0x2706328c,al
  412a80:	ins    BYTE PTR es:[edi],dx
  412a81:	mov    BYTE PTR [edi+0x133bab75],ch
  412a87:	jp     0x412afc
  412a89:	mov    ebx,0x9c34bd95
  412a8e:	jge    0x412ab5
  412a90:	or     eax,0xffab11ae
  412a95:	call   0x3d82:0x6defb390
  412a9c:	daa    
  412a9d:	mov    bh,0xf2
  412a9f:	xchg   DWORD PTR [edi+0x429d7b7e],esi
  412aa5:	call   DWORD PTR [ebp+0x762fa7f]
  412aab:	add    DWORD PTR [edx],0xd
  412aae:	daa    
  412aaf:	jmp    0x2289:0xdb4bc63b
  412ab6:	leave  
  412ab7:	std    
  412ab8:	add    DWORD PTR [esi+0x33],esp
  412abb:	popa   
  412abc:	ss nop
  412abe:	push   0x29
  412ac0:	mov    eax,ds:0xe08bce77
  412ac5:	adc    al,0x2
  412ac7:	stc    
  412ac8:	cmp    ch,BYTE PTR [edi+0x6e]
  412acb:	or     DWORD PTR [eax],edx
  412acd:	scas   eax,DWORD PTR es:[edi]
  412ace:	pcmpgtw mm3,QWORD PTR [edi-0x7f447bec]
  412ad5:	adc    al,0xc6
  412ad7:	sub    al,0x40
  412ad9:	stos   DWORD PTR es:[edi],eax
  412ada:	adc    al,0x2d
  412adc:	shl    BYTE PTR [ebx-0x60],0x7
  412ae0:	enter  0xe691,0x4d
  412ae4:	mov    al,0x7
  412ae6:	repz and esi,DWORD PTR [ecx]
  412ae9:	mov    ebp,0xf7f71e77
  412aee:	sbb    BYTE PTR [ebp-0x5d],0x13
  412af2:	fimul  WORD PTR [edi-0x6c3cafe7]
  412af8:	mov    eax,0xaf1b2697
  412afd:	mov    ecx,0xdc2de399
  412b02:	retf   
  412b03:	rcl    BYTE PTR [ecx+0x5f],cl
  412b06:	sahf   
  412b07:	stos   DWORD PTR es:[edi],eax
  412b08:	dec    esi
  412b09:	(bad)  
  412b0a:	aaa    
  412b0b:	xchg   BYTE PTR [edx+0x31],bl
  412b0e:	ror    DWORD PTR [esi+0x41],1
  412b11:	xchg   ebp,eax
  412b12:	and    eax,0x3c59c754
  412b17:	ss out 0x93,ax
  412b1b:	pop    ecx
  412b1c:	adc    BYTE PTR [esi+0x7b],bh
  412b1f:	mov    eax,ds:0xaab050b9
  412b24:	jno    0x412b77
  412b26:	push   0xffffffc9
  412b28:	cld    
  412b29:	std    
  412b2a:	and    eax,0x2dc1286d
  412b2f:	mov    ch,0xda
  412b31:	cmp    eax,0x15648b27
  412b36:	stc    
  412b37:	scas   al,BYTE PTR es:[edi]
  412b38:	mov    WORD PTR [edx+0x8],?
  412b3b:	push   edi
  412b3c:	fisubr DWORD PTR ds:0x8bdd8362
  412b42:	imul   esp,DWORD PTR [eax+0x7922ef1b],0xffffffcf
  412b49:	mov    ebp,DWORD PTR [eax+ecx*4-0xc]
  412b4d:	add    al,0x65
  412b4f:	push   ss
  412b50:	add    eax,0x6176ea0e
  412b55:	xor    BYTE PTR [esi+edx*2+0x64c98d66],ah
  412b5c:	rcl    eax,cl
  412b5e:	fimul  WORD PTR [eax]
  412b60:	and    BYTE PTR [ebx+edi*8+0x25e735e5],dh
  412b67:	shl    BYTE PTR [ecx+0x5b2d323e],0x47
  412b6e:	shl    bh,1
  412b70:	stos   DWORD PTR es:[edi],eax
  412b71:	dec    edx
  412b72:	(bad)  
  412b73:	xchg   edx,eax
  412b74:	dec    edi
  412b75:	rol    DWORD PTR [esi-0x48],1
  412b78:	cmp    eax,0xc4e0ad17
  412b7d:	xchg   edx,eax
  412b7e:	add    al,0x9c
  412b80:	push   esi
  412b81:	(bad)  [esp+esi*8+0x17]
  412b85:	bound  eax,QWORD PTR [esi]
  412b87:	mov    al,0xf2
  412b89:	push   ss
  412b8a:	or     al,0xc3
  412b8c:	data16 jge 0x412c08
  412b8f:	fild   WORD PTR [esi+0x6b661e9a]
  412b95:	pop    edx
  412b96:	jmp    0x412bfc
  412b98:	shl    BYTE PTR ds:0x693baa54,cl
  412b9e:	sub    al,0xa5
  412ba0:	fild   WORD PTR [esi]
  412ba2:	ins    BYTE PTR es:[edi],dx
  412ba3:	adc    BYTE PTR [ecx-0x30],ch
  412ba6:	add    DWORD PTR [esi+0x77],esp
  412ba9:	jmp    0x4f6d:0x26e4f715
  412bb0:	or     eax,0xb2b5e3f1
  412bb5:	loope  0x412b96
  412bb7:	sub    esi,esi
  412bb9:	or     BYTE PTR [edx+0x7365db04],ch
  412bbf:	xor    esp,eax
  412bc1:	test   BYTE PTR [esi-0x4c13efe2],0x74
  412bc8:	push   ecx
  412bc9:	cmp    eax,0xfaee6081
  412bce:	imul   ebx,edi,0xb00fe201
  412bd4:	jmp    0xc3b913b7
  412bd9:	sbb    eax,0x3889dcac
  412bde:	xchg   edi,eax
  412bdf:	mov    cl,BYTE PTR [ebx]
  412be1:	loop   0x412bfc
  412be3:	fisttp WORD PTR [ebp-0x53]
  412be6:	daa    
  412be7:	aas    
  412be8:	call   0x653f6aee
  412bed:	fwait
  412bee:	sub    eax,0x9490122b
  412bf3:	test   DWORD PTR [esi-0x7e255b11],esi
  412bf9:	pop    eax
  412bfa:	mov    BYTE PTR [edi],al
  412bfc:	enter  0xb004,0xa1
  412c00:	lock scas al,BYTE PTR es:[edi]
  412c02:	rol    BYTE PTR [ebx-0x68fe9a3d],cl
  412c08:	mov    ebx,0x28da5ceb
  412c0d:	sbb    eax,0x28c6b9c8
  412c12:	push   ss
  412c13:	mov    al,ds:0xa6eb2264
  412c18:	jl     0x412c0c
  412c1a:	ret    0xee30
  412c1d:	add    eax,0x1b4d5a6d
  412c22:	and    eax,0x770ab316
  412c27:	int    0x4
  412c29:	mov    ecx,DWORD PTR [ecx]
  412c2b:	pop    edi
  412c2c:	mov    gs,WORD PTR [esi-0x5c2f0e2a]
  412c32:	pop    edi
  412c33:	dec    ebx
  412c34:	or     esi,ebx
  412c36:	xor    BYTE PTR [edi+0x28],dl
  412c39:	dec    esp
  412c3a:	dec    edx
  412c3b:	sbb    BYTE PTR [ebp-0x190a126b],dl
  412c41:	pop    ebx
  412c42:	pop    es
  412c43:	bnd jno 0x412c36
  412c46:	outs   dx,BYTE PTR ds:[esi]
  412c47:	xchg   ecx,eax
  412c48:	outs   dx,BYTE PTR ds:[esi]
  412c49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c4a:	dec    ebx
  412c4b:	mov    edi,0xf499c57e
  412c50:	scas   al,BYTE PTR es:[edi]
  412c51:	hlt    
  412c52:	loop   0x412c2c
  412c54:	xchg   ebx,eax
  412c55:	push   0xffffffb9
  412c57:	push   esi
  412c58:	mov    bh,0x51
  412c5a:	(bad)  
  412c5c:	sbb    dl,dl
  412c5e:	leave  
  412c5f:	push   ebp
  412c60:	add    BYTE PTR [ecx],ah
  412c62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c63:	ds call 0xb905086c
  412c69:	jp     0x412cbf
  412c6b:	or     edx,DWORD PTR [edx-0x196195dd]
  412c71:	add    eax,0x49fa5cc2
  412c76:	jmp    0x412c88
  412c78:	addr16 (bad) 
  412c7a:	push   esi
  412c7b:	fild   WORD PTR [esi+0x5f]
  412c7e:	in     al,0xdb
  412c80:	sbb    BYTE PTR [edi+0x23],0x71
  412c84:	es pop ebx
  412c86:	aaa    
  412c87:	popa   
  412c88:	adc    ch,dl
  412c8a:	mov    esp,DWORD PTR [esi+0x61087ea6]
  412c90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c91:	div    BYTE PTR [edi]
  412c93:	sub    al,0xe0
  412c95:	or     eax,0x9f73d10a
  412c9a:	ins    BYTE PTR es:[edi],dx
  412c9b:	retf   0xb289
  412c9e:	aad    0xf0
  412ca0:	cwde   
  412ca1:	jmp    0x412c2c
  412ca3:	add    BYTE PTR [esp+ebp*4],0xaf
  412ca7:	and    al,0x5a
  412ca9:	in     al,dx
  412caa:	and    ah,ch
  412cac:	lahf   
  412cad:	mov    dl,0x53
  412caf:	pushf  
  412cb0:	adc    al,0xff
  412cb2:	jne    0x412d0c
  412cb4:	not    BYTE PTR [esi+0x29]
  412cb7:	push   esi
  412cb8:	sbb    DWORD PTR [esi-0x1b9d798e],edx
  412cbe:	sbb    DWORD PTR [ebp+0x19],edx
  412cc1:	fimul  DWORD PTR [eax-0x3f]
  412cc4:	dec    eax
  412cc5:	cmp    DWORD PTR [ebp+0x6afc99a2],0x684bd1cf
  412ccf:	sbb    cl,BYTE PTR [edx+0x3abd1e77]
  412cd5:	xchg   edx,eax
  412cd6:	pusha  
  412cd7:	and    eax,0x3edddf75
  412cdc:	pop    eax
  412cdd:	cmp    ecx,DWORD PTR [ebx+0x4b22845f]
  412ce3:	(bad)  
  412ce4:	repz fsubr QWORD PTR [edx]
  412ce7:	lods   eax,DWORD PTR ds:[esi]
  412ce8:	mov    esi,ebp
  412cea:	cwde   
  412ceb:	jo     0x412d37
  412ced:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412cee:	mov    dl,0x8f
  412cf0:	mov    ds:0xe52500f3,al
  412cf5:	jmp    0x33bb5849
  412cfa:	push   0xffffff8b
  412cfc:	dec    ebx
  412cfd:	lds    esi,FWORD PTR [ecx-0x44991417]
  412d03:	dec    ecx
  412d04:	adc    esi,DWORD PTR [ecx-0x22360b78]
  412d0a:	push   0x52e98113
  412d0f:	mov    cl,0x91
  412d11:	enter  0xff19,0x8a
  412d15:	jg     0x412ce9
  412d17:	xchg   ebp,eax
  412d18:	or     BYTE PTR [eax+0x3a],al
  412d1b:	or     edi,DWORD PTR [ecx+0x29076380]
  412d21:	mov    BYTE PTR [edx+0x512688ee],0x46
  412d28:	add    ebx,edi
  412d2a:	fnstsw WORD PTR [edx+0x48]
  412d2d:	inc    esi
  412d2e:	aas    
  412d2f:	jl     0x412d05
  412d31:	popf   
  412d32:	scas   eax,DWORD PTR es:[edi]
  412d33:	outs   dx,BYTE PTR ds:[esi]
  412d34:	jns    0x412d3a
  412d36:	lds    edx,FWORD PTR [ebp-0x74]
  412d39:	jo     0x412cce
  412d3b:	mov    esp,DWORD PTR [edi-0x7704950c]
  412d41:	and    bh,dl
  412d43:	stc    
  412d44:	nop
  412d45:	ja     0x412d6b
  412d47:	ins    BYTE PTR es:[edi],dx
  412d48:	dec    ebp
  412d49:	xor    BYTE PTR [esi-0x4e],bh
  412d4c:	mov    ecx,0xfbc67051
  412d51:	jno    0x412d24
  412d53:	loope  0x412cfd
  412d55:	std    
  412d56:	mov    dh,0x62
  412d58:	pop    es
  412d59:	pop    esi
  412d5a:	(bad)  
  412d5b:	mov    BYTE PTR [eax-0x13],ch
  412d5e:	sbb    eax,0x400149cd
  412d63:	out    0x55,eax
  412d65:	push   ebx
  412d66:	rcr    DWORD PTR [ebp-0x76],cl
  412d69:	fdivr  QWORD PTR [eax*4+0x10cc94de]
  412d70:	mov    esp,0x86f36c68
  412d75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d76:	scas   eax,DWORD PTR es:[edi]
  412d77:	sbb    ebx,DWORD PTR [eax+0x2f7119ad]
  412d7d:	jmp    0x412d0a
  412d7f:	fmul   QWORD PTR [eax-0x2f]
  412d82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d84:	pop    ecx
  412d85:	push   ebp
  412d86:	out    dx,eax
  412d87:	pop    ss
  412d88:	jae    0x412dcc
  412d8a:	mov    edx,edi
  412d8c:	stos   BYTE PTR es:[edi],al
  412d8d:	je     0x412da7
  412d8f:	stos   DWORD PTR es:[edi],eax
  412d90:	cs loope 0x412d75
  412d93:	cmp    BYTE PTR [edi+0x10],bl
  412d96:	jg     0x412d28
  412d98:	inc    eax
  412d99:	je     0x412e03
  412d9b:	inc    ebp
  412d9c:	xor    DWORD PTR [ebx+0x4e],edi
  412d9f:	lods   al,BYTE PTR ds:[esi]
  412da0:	inc    esi
  412da1:	fucomi st,st(1)
  412da3:	pop    ecx
  412da4:	ror    DWORD PTR [edx+0x40f032f6],0xde
  412dab:	mov    ebp,0xacf8130d
  412db0:	addr16 es push ebx
  412db3:	lods   al,BYTE PTR ds:[esi]
  412db4:	cmp    ah,BYTE PTR [edx]
  412db6:	mov    bl,0x99
  412db8:	push   ss
  412db9:	mov    ch,0x15
  412dbb:	call   0x32a2741
  412dc0:	or     DWORD PTR [edi+0xd],esp
  412dc3:	sbb    edi,DWORD PTR [ecx]
  412dc5:	pop    edx
  412dc6:	xchg   DWORD PTR ds:0x1001d43e,ebx
  412dcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412dcd:	dec    ebx
  412dce:	sbb    DWORD PTR ds:0xd3c74d6b,0xffffffcd
  412dd5:	imul   ebp,DWORD PTR [ebp+0xfe9278e],0x6d
  412ddc:	sahf   
  412ddd:	mov    edx,0xfe8b4117
  412de2:	fs cmp al,0x89
  412de5:	push   es
  412de6:	aam    0xbd
  412de8:	cmp    DWORD PTR [ebp+0x6c],0xffffffe5
  412dec:	jp     0x412dc1
  412dee:	int    0xcb
  412df0:	sbb    al,0x4c
  412df2:	loop   0x412e0e
  412df4:	popa   
  412df5:	add    bh,BYTE PTR [ebx+ebx*1-0x7ba79c6b]
  412dfc:	in     eax,dx
  412dfd:	mov    edi,0xcc7756a9
  412e02:	test   al,0xc3
  412e04:	dec    eax
  412e05:	sub    DWORD PTR [eax],eax
  412e07:	push   0x53fc0edb
  412e0c:	dec    ecx
  412e0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e0e:	aam    0x74
  412e10:	sbb    esi,DWORD PTR [esi-0x73]
  412e13:	sub    DWORD PTR [esi],0xffffffc1
  412e16:	(bad)  
  412e17:	daa    
  412e18:	pusha  
  412e19:	or     dl,bl
  412e1b:	jmp    0x412e87
  412e1d:	or     edx,DWORD PTR [eax]
  412e1f:	sbb    BYTE PTR [edx+0x72dd5fb0],dh
  412e25:	aas    
  412e26:	ins    BYTE PTR es:[edi],dx
  412e27:	(bad)  
  412e28:	inc    ecx
  412e29:	out    0xf6,eax
  412e2b:	(bad)  
  412e2d:	call   0x2858:0x77129e91
  412e34:	sub    eax,0x6bb197a7
  412e39:	xor    DWORD PTR [eax+ebx*1-0x2264561e],eax
  412e40:	push   esp
  412e41:	and    eax,ebx
  412e43:	inc    eax
  412e44:	imul   ebp,DWORD PTR [esi+0x15],0x4e9515dd
  412e4b:	pop    ecx
  412e4c:	lea    esi,[eax+0x14cdff4f]
  412e52:	out    0xf7,eax
  412e54:	cmp    al,0x2f
  412e56:	test   DWORD PTR [eax+0x6a951a35],eax
  412e5c:	jae    0x412e50
  412e5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e5f:	lahf   
  412e60:	out    0x89,al
  412e62:	test   eax,0x9827159a
  412e67:	xchg   esp,eax
  412e68:	int    0x53
  412e6a:	aam    0xfc
  412e6c:	jnp    0x412e4b
  412e6e:	or     bl,dl
  412e70:	pop    esp
  412e71:	xor    esi,DWORD PTR [esi+ebp*8]
  412e74:	jmp    0x412e79
  412e76:	add    dl,0xb7
  412e79:	popf   
  412e7a:	pop    eax
  412e7b:	mov    edx,0x7c18da60
  412e80:	jl     0x412e22
  412e82:	das    
  412e83:	mov    es,WORD PTR [ecx-0x5b]
  412e86:	popf   
  412e87:	push   edx
  412e88:	pop    esp
  412e89:	pop    ebp
  412e8a:	ins    DWORD PTR es:[edi],dx
  412e8b:	push   es
  412e8c:	dec    esp
  412e8d:	push   cs
  412e8e:	stos   DWORD PTR es:[edi],eax
  412e8f:	iret   
  412e90:	jge    0x412e34
  412e92:	jmp    0x7cbc:0x42cf1d9f
  412e99:	dec    eax
  412e9a:	es and al,0xb8
  412e9d:	cmp    DWORD PTR [edi-0x6],edi
  412ea0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ea1:	pop    ecx
  412ea2:	mov    bl,0xcf
  412ea4:	nop
  412ea5:	cdq    
  412ea6:	(bad)  
  412ea8:	rcl    BYTE PTR [ebx],1
  412eaa:	loope  0x412eea
  412eac:	rcr    DWORD PTR [ebx+0x76],cl
  412eaf:	pop    es
  412eb0:	push   edx
  412eb1:	lods   eax,DWORD PTR ds:[esi]
  412eb2:	ret    0xcb9f
  412eb5:	pushf  
  412eb6:	out    dx,eax
  412eb7:	mov    edi,0x89b9a098
  412ebc:	jo     0x412e6d
  412ebe:	adc    edx,DWORD PTR [ebx+ecx*2+0xc31bf1d]
  412ec5:	pop    ebx
  412ec6:	or     ch,0x2c
  412ec9:	adc    ecx,DWORD PTR [edi]
  412ecb:	inc    eax
  412ecc:	out    0x25,eax
  412ece:	inc    ecx
  412ecf:	or     eax,DWORD PTR [esi]
  412ed1:	loopne 0x412ece
  412ed3:	jb     0x412ef1
  412ed5:	adc    BYTE PTR [eax+0x34],cl
  412ed8:	sbb    ch,ah
  412eda:	xor    cl,BYTE PTR [ebx-0x52098025]
  412ee0:	jecxz  0x412edf
  412ee2:	les    edi,FWORD PTR [eax+0x72c4e486]
  412ee8:	sahf   
  412ee9:	dec    ebx
  412eea:	(bad)  
  412eeb:	jmp    0x6ea9:0x686c4e99
  412ef2:	hlt    
  412ef3:	fild   WORD PTR [ebp+0x1a19edea]
  412efa:	pusha  
  412efb:	xchg   ebx,eax
  412efc:	or     esi,ebx
  412efe:	or     eax,0x76a69dde
  412f03:	mov    bh,0xa2
  412f05:	retf   
  412f06:	fmul   QWORD PTR [ebx-0x1]
  412f09:	pop    es
  412f0a:	mov    ds:0xa79461f0,eax
  412f0f:	mov    ebp,0xb4682db7
  412f14:	repnz adc ah,dl
  412f17:	pop    ss
  412f18:	pop    ecx
  412f19:	ret    
  412f1a:	xchg   BYTE PTR [eax-0x7c],bl
  412f1d:	dec    edi
  412f1e:	jae    0x412f40
  412f20:	jp     0x412f43
  412f22:	adc    al,0xca
  412f25:	add    DWORD PTR ds:0x3d6b1f0,ecx
  412f2b:	out    dx,eax
  412f2c:	inc    esi
  412f2d:	mulps  xmm6,XMMWORD PTR [ebp+0x11]
  412f31:	mov    bh,0x24
  412f33:	add    DWORD PTR [ecx-0x77],0xffffffd2
  412f37:	jae    0x412fb8
  412f39:	sbb    eax,0x8e35f6e2
  412f3e:	mov    edx,0xb64e7d3a
  412f43:	push   ebp
  412f44:	xchg   esp,eax
  412f45:	cmp    BYTE PTR [ebp-0x27],0x21
  412f49:	xchg   edx,eax
  412f4a:	(bad)  
  412f4b:	call   0x5ad3:0x92adfc2d
  412f52:	mov    ebx,0x2c55e116
  412f57:	imul   esp,DWORD PTR [ecx+0x7d],0x88fa5f6d
  412f5e:	fcomp  QWORD PTR [edi+0x2f]
  412f61:	jnp    0x412f2e
  412f63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f64:	mov    ecx,0x66b39459
  412f69:	or     BYTE PTR [edx+esi*4+0x752c4cd5],0x7
  412f71:	and    ah,bl
  412f73:	jp     0x412fc8
  412f75:	outs   dx,BYTE PTR ds:[esi]
  412f76:	lock repnz and eax,0x900007dd
  412f7d:	out    dx,al
  412f7e:	and    ebp,DWORD PTR [edx]
  412f80:	xor    al,0xdb
  412f82:	out    dx,al
  412f83:	push   0x22
  412f85:	push   ebx
  412f86:	aad    0x6a
  412f88:	cmp    edx,DWORD PTR [edi-0x16e8b706]
  412f8e:	ret    0x74f5
  412f91:	adc    ah,BYTE PTR [esp+esi*1]
  412f94:	mov    eax,0x96453adb
  412f99:	fldenv [esp+ecx*8+0x480ea196]
  412fa0:	adc    al,0xb2
  412fa2:	xchg   ecx,eax
  412fa3:	ss mov bl,0x9d
  412fa6:	test   DWORD PTR [eax-0x703eb645],0xbd5db471
  412fb0:	cwde   
  412fb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fb2:	stos   BYTE PTR es:[edi],al
  412fb3:	push   edx
  412fb4:	nop
  412fb5:	pop    eax
  412fb6:	pop    eax
  412fb7:	test   DWORD PTR [ecx],eax
  412fb9:	inc    edi
  412fba:	sti    
  412fbb:	sbb    bh,0xb3
  412fbe:	call   0x9821:0x514c8a2d
  412fc5:	xor    ecx,0xffffff8b
  412fc8:	ds dec eax
  412fca:	cs add eax,0xda8543a
  412fd0:	mov    bl,0x65
  412fd2:	or     ch,ch
  412fd4:	cwde   
  412fd5:	xor    al,0x89
  412fd7:	les    edi,FWORD PTR [ebx+ecx*4+0x556572f9]
  412fde:	std    
  412fdf:	mov    cl,0x62
  412fe1:	jecxz  0x412ff4
  412fe3:	loope  0x413047
  412fe5:	std    
  412fe6:	outs   dx,DWORD PTR ds:[esi]
  412fe7:	adc    DWORD PTR [ebp+0x3d6010fc],ecx
  412fed:	push   esi
  412fee:	pop    ecx
  412fef:	or     bh,BYTE PTR [ebx+0x3a]
  412ff2:	inc    eax
  412ff3:	ds js  0x413014
  412ff6:	xchg   cl,cl
  412ff8:	mov    BYTE PTR [ebx],ch
  412ffa:	daa    
  412ffb:	push   ebx
  412ffc:	mov    esp,esp
  412ffe:	pop    ds
  412fff:	mov    eax,ds:0x181134cb
  413004:	dec    ebp
  413005:	lds    esi,FWORD PTR [eax-0x70]
  413008:	test   DWORD PTR [ecx-0x4eb80e5a],ebp
  41300e:	jne    0x412fba
  413010:	xchg   esp,eax
  413011:	cwde   
  413012:	adc    bl,BYTE PTR [esp+ebx*2+0x24]
  413016:	cmp    edi,DWORD PTR [ebx]
  413018:	mov    ebx,0x9d4f70b3
  41301d:	pusha  
  41301e:	ror    BYTE PTR [ecx+0x4e1d671f],1
  413024:	(bad)  
  413025:	xchg   edi,eax
  413026:	repz sub al,bl
  413029:	sub    al,0xf7
  41302b:	mov    ch,0xbb
  41302d:	fxch   st(2)
  41302f:	xchg   edx,eax
  413030:	(bad)  
  413031:	pusha  
  413032:	mov    ch,dl
  413034:	xchg   DWORD PTR [eax],ebx
  413036:	jge    0x413022
  413038:	pop    ds
  413039:	int3   
  41303a:	cmp    al,0xd2
  41303c:	push   ds
  41303d:	retf   0x2322
  413040:	mov    ebp,cs
  413042:	lods   eax,DWORD PTR ds:[esi]
  413043:	push   edi
  413044:	imul   edx,DWORD PTR [ebp+0x63],0x44
  413048:	xor    al,0x17
  41304a:	xor    ebp,DWORD PTR [edx+0x4f]
  41304d:	push   0x99ca64b6
  413052:	jg     0x4130ad
  413054:	dec    esi
  413055:	daa    
  413056:	jae    0x41309a
  413058:	adc    DWORD PTR [ecx-0x2f],ecx
  41305b:	mov    ebp,0x91a2a2b8
  413060:	icebp  
  413061:	js     0x413089
  413063:	mov    al,ds:0xa3134318
  413068:	sbb    al,0x3
  41306a:	loopne 0x413087
  41306c:	pop    ebp
  41306d:	push   esp
  41306e:	addr16 sub eax,0x7712b8a6
  413074:	pinsrw mm7,WORD PTR [edi],0x84
  413078:	aas    
  413079:	mov    eax,ds:0x7a94e43d
  41307e:	popa   
  41307f:	add    al,0xe7
  413081:	xchg   ecx,eax
  413082:	push   0xffffffe5
  413084:	inc    esp
  413085:	pusha  
  413086:	cmp    al,bh
  413088:	mov    ah,0x43
  41308a:	(bad)  
  41308b:	jmp    0x44fa5a59
  413090:	dec    edx
  413091:	sahf   
  413092:	mov    eax,0xce4443c3
  413097:	jae    0x4130bf
  413099:	cmp    eax,0xb0e07d10
  41309e:	mov    cl,0x50
  4130a0:	jns    0x413042
  4130a2:	sahf   
  4130a3:	fs ds sbb edx,ecx
  4130a7:	sbb    DWORD PTR [edx+0x1c],esp
  4130aa:	cmp    al,0xd7
  4130ac:	loopne 0x4130f3
  4130ae:	call   0x30f8:0x51873e0
  4130b5:	and    DWORD PTR [edx-0x5ecfa514],esi
  4130bb:	adc    eax,0x70ea7c4a
  4130c0:	mov    WORD PTR [edi+0x6978d8b4],ds
  4130c6:	outs   dx,BYTE PTR ds:[esi]
  4130c7:	lods   eax,DWORD PTR ds:[esi]
  4130c8:	sahf   
  4130c9:	or     bh,bh
  4130cb:	add    al,BYTE PTR [ebx]
  4130cd:	cmc    
  4130ce:	imul   edi,DWORD PTR [edx+edi*1-0x29],0xf1d64b24
  4130d6:	or     eax,0xd2aa66e7
  4130db:	add    DWORD PTR [ebx+0x5e],esp
  4130de:	pop    di
  4130e0:	in     al,0x4b
  4130e2:	push   cs
  4130e3:	mov    dl,0xfb
  4130e5:	sub    DWORD PTR [ebx+ecx*1],0x2a
  4130e9:	jmp    0xc7488fb7
  4130ee:	inc    esp
  4130ef:	push   ebp
  4130f0:	out    0x4b,al
  4130f2:	ror    BYTE PTR [edx],0x36
  4130f5:	in     eax,0x57
  4130f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4130f8:	cdq    
  4130f9:	cs call 0x3d903cf6
  4130ff:	push   0x28
  413101:	popf   
  413102:	test   eax,esp
  413104:	mov    bh,0x5d
  413106:	imul   ebx,DWORD PTR [ebx+0x3b0ea948],0xd
  41310d:	int    0x3c
  41310f:	cdq    
  413110:	xchg   BYTE PTR [edx],al
  413112:	cwde   
  413113:	stos   BYTE PTR es:[edi],al
  413114:	pop    ebx
  413115:	or     DWORD PTR [edx+0x3d],eax
  413118:	and    eax,0xaf877c8
  41311d:	sub    DWORD PTR [edi-0xe9262e3],ebp
  413123:	icebp  
  413124:	gs pusha 
  413126:	ror    BYTE PTR [ebx-0x7fa97b91],cl
  41312c:	nop
  41312d:	mov    ds:0x3d59114a,al
  413132:	std    
  413133:	inc    edx
  413134:	push   edx
  413135:	mov    ah,0x38
  413137:	mov    ds:0x3cfdcd8,eax
  41313c:	xchg   dl,al
  41313e:	ja     0x4130d3
  413140:	mov    edi,0xdc8b4460
  413145:	sbb    BYTE PTR [ebx+eiz*1+0x2b],ah
  413149:	jnp    0x4130ef
  41314b:	out    dx,eax
  41314c:	or     DWORD PTR [esi],0x8
  41314f:	scas   al,BYTE PTR es:[edi]
  413150:	aam    0x6
  413152:	ror    DWORD PTR [edi],0x13
  413155:	inc    esp
  413156:	test   eax,0xef13780
  41315b:	(bad)  
  41315c:	imul   DWORD PTR [edx]
  41315e:	push   0x5c
  413160:	xor    ecx,0x73a4a257
  413166:	call   0x5b9d19c6
  41316b:	or     eax,0x4b96f430
  413170:	cmp    BYTE PTR [ecx],bh
  413172:	mov    esp,edx
  413174:	int    0x16
  413176:	into   
  413177:	bound  esi,QWORD PTR [ebp+0x5f]
  41317a:	cmp    edi,edx
  41317c:	mov    DWORD PTR [ecx-0x21ed9a76],esp
  413182:	test   eax,0xc81a3386
  413187:	ds push cs
  413189:	cmp    al,0xcc
  41318b:	dec    BYTE PTR [ecx+ebp*1+0x51]
  41318f:	xor    dl,BYTE PTR [ecx+ebp*8-0x25]
  413193:	inc    esp
  413194:	adc    DWORD PTR [edi],ebx
  413196:	push   ds
  413197:	iret   
  413198:	jmp    FWORD PTR [ecx+0x62]
  41319b:	fs mov ah,0xb8
  41319e:	std    
  41319f:	inc    esi
  4131a0:	scas   eax,DWORD PTR es:[edi]
  4131a1:	jo     0x41316f
  4131a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4131a4:	inc    ebp
  4131a5:	stos   BYTE PTR es:[edi],al
  4131a6:	mov    ecx,0x47ac5d0b
  4131ab:	xchg   edx,eax
  4131ac:	sbb    DWORD PTR [esi],esi
  4131ae:	xchg   ebp,eax
  4131af:	mov    esi,ss
  4131b1:	pop    ebx
  4131b2:	sbb    BYTE PTR [eax+eiz*8-0x40],cl
  4131b6:	fs imul esi,eax,0xc9a7cc31
  4131bd:	sbb    esp,esi
  4131bf:	xchg   ebp,eax
  4131c0:	or     DWORD PTR [edx-0x168c5e3d],esp
  4131c6:	xchg   ebp,eax
  4131c7:	clc    
  4131c8:	mov    ah,0x2
  4131ca:	ret    
  4131cb:	jp     0x4131f9
  4131cd:	jge    0x41314f
  4131cf:	gs dec ebp
  4131d1:	ret    
  4131d2:	int    0xfd
  4131d4:	xor    esp,edx
  4131d6:	mov    ecx,0x7b164710
  4131db:	fsub   QWORD PTR [edi+eiz*1+0x24]
  4131df:	sbb    edi,DWORD PTR ds:0x9c17a0d8
  4131e5:	(bad)  
  4131e6:	rcl    DWORD PTR [esp+edx*2],cl
  4131e9:	in     eax,0xf1
  4131eb:	lock test eax,0x1aa61011
  4131f1:	test   al,0xe2
  4131f3:	xor    dh,cl
  4131f5:	inc    ecx
  4131f6:	cli    
  4131f7:	xor    BYTE PTR [esi+esi*4],ch
  4131fa:	retf   
  4131fb:	adc    al,0xb2
  4131fd:	cld    
  4131fe:	and    dh,bh
  413200:	loope  0x413279
  413202:	push   cs
  413203:	nop
  413204:	add    al,0x60
  413206:	mov    eax,0x2acf11e
  41320b:	fcmove st,st(2)
  41320d:	(bad)  
  41320e:	jo     0x41327e
  413210:	jnp    0x41319e
  413212:	retf   0x1271
  413215:	push   ds
  413216:	or     DWORD PTR [eax],ebx
  413218:	dec    edx
  413219:	std    
  41321a:	int3   
  41321b:	dec    esp
  41321c:	inc    edx
  41321d:	scas   al,BYTE PTR es:[edi]
  41321e:	fwait
  41321f:	push   eax
  413220:	popw   ds
  413222:	push   ds
  413223:	add    eax,DWORD PTR [ecx]
  413225:	or     bh,BYTE PTR [ebx-0x77fbfef3]
  41322b:	add    BYTE PTR [eax+0x7e],0x88
  41322f:	test   eax,0xd6616134
  413234:	jg     0x4132b5
  413236:	stc    
  413237:	(bad)
  41323a:	cmp    DWORD PTR [ecx-0x45],0xffffffe6
  41323e:	mov    al,0x59
  413240:	pusha  
  413241:	hlt    
  413242:	ins    DWORD PTR es:[edi],dx
  413243:	push   ebp
  413244:	push   ss
  413245:	test   DWORD PTR [edx+0x32fa3d51],eax
  41324b:	aad    0x56
  41324d:	mov    ecx,0xe903466
  413252:	dec    ebp
  413253:	retf   0xc38c
  413256:	in     eax,0xdf
  413258:	or     ebx,0xcb4a987c
  41325e:	and    edx,edx
  413260:	cmp    ecx,DWORD PTR [edx]
  413262:	cmp    bl,dh
  413264:	mov    ecx,DWORD PTR [ecx+ecx*8+0x188e668f]
  41326b:	arpl   WORD PTR [ebp+0x2a],bp
  41326e:	cmc    
  41326f:	sbb    BYTE PTR [ebx+0x4f],0x36
  413273:	imul   esi,DWORD PTR [ebx+0x3e],0x2b
  413277:	or     DWORD PTR [ecx+0x3],ecx
  41327a:	fcomp  st(3)
  41327c:	std    
  41327d:	pop    esi
  41327e:	cmp    ecx,DWORD PTR [ebx+ebx*1]
  413281:	and    eax,0xc81565f0
  413286:	jge    0x4132bb
  413288:	cdq    
  413289:	jns    0x4132b4
  41328b:	out    dx,eax
  41328c:	mov    al,0xf0
  41328e:	lods   al,BYTE PTR ds:[esi]
  41328f:	mov    eax,ds:0x9aa68b1d
  413294:	in     eax,dx
  413295:	js     0x4132b9
  413297:	cs enter 0xa855,0xa2
  41329c:	push   edx
  41329d:	or     al,0x7b
  41329f:	in     eax,0x38
  4132a1:	xchg   ebp,eax
  4132a2:	cmp    ebp,DWORD PTR ds:0x74dba5d1
  4132a8:	fwait
  4132a9:	or     al,0xf8
  4132ab:	fnsave [edi-0x3d3ee739]
  4132b1:	into   
  4132b2:	icebp  
  4132b3:	js     0x413286
  4132b5:	jnp    0x4132e8
  4132b7:	cmp    BYTE PTR [ebx+0x6],0x2b
  4132bb:	mov    ah,0xfb
  4132bd:	inc    DWORD PTR [esi*2-0x14f073b7]
  4132c4:	xchg   ebx,eax
  4132c5:	cdq    
  4132c6:	mov    eax,0xc5fd3608
  4132cb:	test   al,0xbc
  4132cd:	mov    esi,DWORD PTR [bp+0x46]
  4132d1:	cmp    al,0xd6
  4132d3:	inc    ebx
  4132d4:	xchg   esp,eax
  4132d5:	mov    esp,0xa4ad89a4
  4132da:	out    dx,eax
  4132db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4132dc:	test   BYTE PTR [ebx],al
  4132de:	jge    0x4132d7
  4132e0:	or     DWORD PTR [ecx+ecx*1+0x1],0xfffffff3
  4132e5:	xchg   BYTE PTR [eax],cl
  4132e7:	dec    esp
  4132e8:	out    dx,eax
  4132e9:	dec    ebp
  4132ea:	pushf  
  4132eb:	mov    eax,0xeaa657f7
  4132f0:	mov    edx,0x51ced54
  4132f5:	shl    cl,cl
  4132f7:	adc    eax,0x89b23cad
  4132fc:	xchg   esi,eax
  4132fd:	enter  0x68b3,0xbb
  413301:	mov    al,ds:0x2558d03b
  413306:	and    bl,BYTE PTR [ebx-0x59]
  413309:	push   ebx
  41330a:	push   ecx
  41330b:	jmp    0x169a7233
  413310:	xor    dl,BYTE PTR [esi+0x12af4bed]
  413316:	adc    eax,0xbdf6bd80
  41331b:	xlat   BYTE PTR ds:[ebx]
  41331c:	rol    DWORD PTR [esi+0x48],0x91
  413320:	loop   0x413330
  413322:	mov    al,0xa9
  413324:	lea    eax,[eax+0x1ea76f64]
  41332a:	dec    esp
  41332b:	or     al,0xea
  41332d:	inc    esp
  41332e:	jecxz  0x413386
  413330:	retf   0xba11
  413333:	jno    0x4132e6
  413335:	jg     0x41333a
  413337:	popa   
  413338:	aaa    
  413339:	mov    ds:0xdf817afe,eax
  41333e:	lds    edi,FWORD PTR [eax]
  413340:	mov    ecx,DWORD PTR [ebx-0x35]
  413343:	pop    ecx
  413344:	jmp    0x454d:0x815d037f
  41334b:	adc    DWORD PTR [esi-0x26b60d8c],ebp
  413351:	xchg   ebp,edx
  413353:	xor    eax,0xe68dc400
  413358:	xor    dh,BYTE PTR [edx-0x65]
  41335b:	jge    0x4133c6
  41335d:	mov    cl,0x8d
  41335f:	push   ss
  413360:	jmp    0x68bc:0x3a149f20
  413367:	std    
  413368:	sahf   
  413369:	pop    ebx
  41336a:	cmp    al,0xbc
  41336c:	xor    al,0x4b
  41336e:	xchg   esi,eax
  41336f:	aas    
  413370:	push   es
  413371:	inc    eax
  413372:	xlat   BYTE PTR ds:[ebx]
  413373:	mov    bl,0x80
  413375:	mov    ecx,DWORD PTR [ebx+esi*1]
  413378:	cmc    
  413379:	inc    ebp
  41337a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41337b:	inc    esp
  41337c:	add    al,0xd
  41337e:	jmp    0xaad2:0x3ed9ca3f
  413385:	dec    ecx
  413386:	jnp    0x4133f4
  413388:	vmread DWORD PTR [edx+0x35],ebp
  41338c:	sbb    al,0xa
  41338e:	mov    bh,0xf6
  413390:	icebp  
  413391:	fnstsw WORD PTR [esp+edx*4]
  413394:	repnz pop ebx
  413396:	and    dh,BYTE PTR [edi-0x7f34625d]
  41339c:	ffree  st(5)
  41339e:	std    
  41339f:	ror    DWORD PTR [ecx+0x7f8b238b],cl
  4133a5:	pop    esp
  4133a6:	sub    eax,0x81a4c953
  4133ab:	xor    al,0x73
  4133ad:	mov    ?,WORD PTR [esi-0x34]
  4133b0:	or     ecx,DWORD PTR [esi]
  4133b2:	cmc    
  4133b3:	pop    ds
  4133b4:	mov    eax,ds:0x63025dae
  4133b9:	dec    ecx
  4133ba:	in     al,0xdd
  4133bc:	push   esp
  4133bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133bf:	sahf   
  4133c0:	es mov ch,0xa5
  4133c3:	dec    ebp
  4133c4:	pop    ds
  4133c5:	arpl   WORD PTR [ebx],dx
  4133c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4133c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4133c9:	mov    dl,0xdf
  4133cb:	cwde   
  4133cc:	inc    esi
  4133cd:	data16 sahf 
  4133cf:	sbb    al,BYTE PTR [edi]
  4133d1:	imul   ecx,DWORD PTR [ecx],0x9acd6ef3
  4133d7:	inc    ebp
  4133d8:	dec    edi
  4133d9:	push   0xffffffdd
  4133db:	sar    BYTE PTR [ebx-0x10efe112],cl
  4133e1:	pusha  
  4133e2:	mov    al,ds:0x9aaad50b
  4133e7:	jmp    0x4133f4
  4133e9:	pop    esi
  4133ea:	(bad)
  4133ee:	in     eax,0x8e
  4133f0:	stos   DWORD PTR es:[edi],eax
  4133f1:	adc    ebp,DWORD PTR [ebx+0x1d]
  4133f4:	call   0x85f1:0x46fb54a
  4133fb:	jo     0x41338b
  4133fd:	fisttp WORD PTR [esi]
  4133ff:	jns    0x41347a
  413401:	mov    edx,DWORD PTR [edx-0x43a96f9a]
  413407:	sub    al,0xf7
  413409:	je     0x413459
  41340b:	and    eax,ebx
  41340d:	mov    eax,ds:0xbf9c051f
  413412:	call   0xa6d4:0x7eee647e
  413419:	push   ebp
  41341a:	mov    eax,0xa345034c
  41341f:	shl    edx,cl
  413421:	imul   ebx,DWORD PTR [ecx+edx*8],0x493582fb
  413428:	jo     0x413402
  41342a:	mov    ds:0x217e22ab,al
  41342f:	pop    edx
  413430:	xlat   BYTE PTR ds:[ebx]
  413431:	sub    DWORD PTR [esi-0x21241f5],ecx
  413437:	leave  
  413438:	out    0x7a,eax
  41343a:	mov    eax,ds:0x48c84980
  41343f:	out    dx,al
  413440:	sub    al,0xc0
  413442:	out    0x61,eax
  413444:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413445:	mov    ah,0x3e
  413447:	cwde   
  413448:	cli    
  413449:	mov    ds:0x13bd7a9b,al
  41344e:	arpl   WORD PTR ds:0x23545df5,cx
  413454:	int3   
  413455:	sbb    eax,0x8a5d5ab8
  41345a:	jno    0x413447
  41345c:	sbb    al,0x62
  41345e:	mov    cl,0xab
  413460:	test   BYTE PTR [eax],0x56
  413463:	std    
  413464:	test   eax,0x34cd59ab
  413469:	sbb    al,0xac
  41346b:	jmp    0x41348c
  41346d:	jecxz  0x413497
  41346f:	inc    ebp
  413470:	pop    ebp
  413471:	inc    esi
  413472:	in     eax,0xb
  413474:	daa    
  413475:	js     0x41343b
  413477:	add    al,0x3d
  413479:	cmp    ebx,DWORD PTR [edi]
  41347b:	mov    DWORD PTR [eax-0x7d],ebx
  41347e:	fld    DWORD PTR [ebp-0x8]
  413481:	ja     0x4134f0
  413483:	out    0x93,al
  413485:	out    0x5c,eax
  413487:	js     0x41347c
  413489:	int    0x3d
  41348b:	add    ecx,DWORD PTR [ecx+eiz*8]
  41348e:	pop    esp
  41348f:	cmp    esp,eax
  413491:	jge    0x413474
  413493:	jb     0x41346c
  413495:	aam    0x79
  413497:	(bad)  
  413498:	sti    
  413499:	bound  edx,QWORD PTR [ebx-0x56]
  41349c:	rol    DWORD PTR [esi+edi*4+0x3e],cl
  4134a0:	pop    eax
  4134a1:	adc    edi,esi
  4134a3:	dec    ebx
  4134a4:	push   edx
  4134a5:	add    bh,BYTE PTR [eax-0x99b352d]
  4134ab:	jnp    0x4134e4
  4134ad:	aad    0x5
  4134af:	xor    esi,DWORD PTR [ebp+0x51]
  4134b2:	sbb    esi,DWORD PTR [eax]
  4134b4:	ja     0x413535
  4134b6:	xor    eax,0xa6f1cf88
  4134bb:	test   BYTE PTR [ecx],al
  4134bd:	inc    esp
  4134be:	pop    edi
  4134bf:	and    al,0x42
  4134c1:	pop    edi
  4134c2:	hlt    
  4134c3:	add    DWORD PTR [edx],ecx
  4134c5:	outs   dx,BYTE PTR ds:[esi]
  4134c6:	mov    eax,0x840c71c7
  4134cb:	repnz sbb cl,al
  4134ce:	xchg   edi,esi
  4134d0:	loop   0x413536
  4134d2:	aaa    
  4134d3:	mov    WORD PTR [edx+eiz*2+0x6c758eeb],cs
  4134da:	out    dx,al
  4134db:	iret   
  4134dc:	mov    ch,0xb8
  4134de:	sbb    al,0x54
  4134e0:	aad    0xc6
  4134e2:	inc    ebx
  4134e3:	pop    ss
  4134e4:	mov    al,ds:0x17203391
  4134e9:	jmp    0x413538
  4134eb:	push   esp
  4134ec:	fld    st(6)
  4134ee:	js     0x413518
  4134f0:	mov    WORD PTR [ebp*8+0x63c02cac],ds
  4134f7:	scas   al,BYTE PTR es:[edi]
  4134f8:	cmp    DWORD PTR [edx-0x77],eax
  4134fb:	mov    ah,0xdf
  4134fd:	and    BYTE PTR [edi],bl
  4134ff:	jae    0x4134c0
  413501:	adc    edx,DWORD PTR [eax+0x54]
  413504:	mov    bl,0xa4
  413506:	mov    BYTE PTR [ebp+0x7b87ff5a],ah
  41350c:	shl    DWORD PTR [ebx-0x57],1
  41350f:	popf   
  413510:	retf   
  413511:	lahf   
  413512:	sar    DWORD PTR [edi-0x4382fb7d],1
  413518:	shl    BYTE PTR [ecx+0x6b],1
  41351b:	hlt    
  41351c:	fisubr WORD PTR [esi+edi*4-0x21eea76]
  413523:	mov    ds:0x8db7ef47,al
  413528:	push   ebp
  413529:	or     dh,dl
  41352b:	jne    0x41355e
  41352d:	nop
  41352e:	add    al,0xa0
  413530:	or     BYTE PTR [edi-0x260d201],dh
  413536:	in     eax,dx
  413537:	lds    eax,FWORD PTR [edi+ebx*1]
  41353a:	shr    BYTE PTR [ebx-0xc30eada],cl
  413540:	sbb    al,0xe2
  413542:	es icebp 
  413544:	or     DWORD PTR [ecx],esi
  413546:	inc    edx
  413547:	nop
  413548:	out    dx,eax
  413549:	dec    eax
  41354a:	xchg   ecx,eax
  41354b:	push   es
  41354c:	mov    cl,0x78
  41354e:	and    al,0xf4
  413550:	cmp    eax,0x6cb2bf5f
  413555:	cmp    BYTE PTR [esi],ch
  413557:	loopne 0x4135ac
  413559:	xor    BYTE PTR [edi+0x1c],ch
  41355c:	add    eax,0xb8b52b13
  413561:	clc    
  413562:	out    dx,al
  413563:	jb     0x4135d5
  413565:	jns    0x413539
  413567:	shufps xmm3,XMMWORD PTR [ebp-0x31],0x35
  41356c:	ja     0x413597
  41356e:	out    dx,eax
  41356f:	cs xchg ecx,eax
  413571:	fstp   QWORD PTR [edx]
  413573:	popf   
  413574:	or     cl,bl
  413576:	push   edi
  413577:	pop    ebp
  413578:	(bad)  
  413579:	fisub  DWORD PTR [eax+0x57]
  41357c:	pop    ss
  41357d:	outs   dx,DWORD PTR ds:[esi]
  41357e:	and    al,0xb
  413580:	mov    bl,0x29
  413582:	ins    DWORD PTR es:[edi],dx
  413583:	jnp    0x4135d2
  413585:	xchg   ebp,eax
  413586:	inc    ebp
  413587:	test   DWORD PTR [edi-0x2c3761e9],eax
  41358d:	dec    esi
  41358e:	mov    edi,0xe1cb1fc1
  413593:	test   al,0xf6
  413595:	jne    0x4135ed
  413597:	cwde   
  413598:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413599:	adc    eax,0xece7f282
  41359e:	sub    bl,BYTE PTR [ebx]
  4135a0:	icebp  
  4135a1:	lea    ecx,[ecx+eax*2-0x5e]
  4135a5:	sub    eax,0xc0003c82
  4135aa:	dec    ebx
  4135ab:	stos   DWORD PTR es:[edi],eax
  4135ac:	add    eax,0x5471a52b
  4135b1:	ficomp DWORD PTR [eax-0x214cdb7e]
  4135b7:	sbb    bl,cl
  4135b9:	sar    BYTE PTR [edx],0x52
  4135bc:	fmul   DWORD PTR [eax]
  4135be:	mov    ds:0x818ab2c4,al
  4135c3:	sub    DWORD PTR [ecx],0x34
  4135c6:	add    ebp,DWORD PTR [ebx-0x7bac415a]
  4135cc:	pop    es
  4135cd:	push   0x7d
  4135cf:	push   ebp
  4135d0:	hlt    
  4135d1:	push   0x53
  4135d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135d4:	repz addr16 jle 0x4135e8
  4135d8:	imul   edx,DWORD PTR [edx-0x23a6f446],0xec93e957
  4135e2:	aad    0x7f
  4135e4:	xchg   edi,eax
  4135e5:	ss out dx,eax
  4135e7:	mov    esp,0x4af10e4d
  4135ec:	(bad)  [ecx]
  4135ee:	xchg   ebp,eax
  4135ef:	xchg   ebp,eax
  4135f0:	jmp    0x4135ab
  4135f2:	add    al,0x41
  4135f4:	xchg   ebx,eax
  4135f5:	sub    al,0x8f
  4135f7:	or     BYTE PTR [ebp-0x40050f2e],dh
  4135fd:	or     DWORD PTR [edx-0x289ad62],0xffffffa1
  413604:	(bad)  
  413605:	(bad)  
  413606:	call   0x1f26fb66
  41360b:	sub    edi,DWORD PTR [ebx-0x1bd64503]
  413611:	push   edi
  413612:	(bad)  
  413613:	icebp  
  413614:	pop    ds
  413615:	xchg   esi,eax
  413616:	xor    ecx,DWORD PTR [edi+0x11ce0840]
  41361c:	daa    
  41361d:	push   eax
  41361e:	xlat   BYTE PTR ds:[ebx]
  41361f:	jbe    0x4135b6
  413621:	popa   
  413622:	enter  0x2e63,0xe9
  413626:	mov    esi,0x62eca46
  41362b:	add    eax,0x49432dcf
  413630:	dec    edx
  413631:	xchg   edi,eax
  413632:	jbe    0x4135ec
  413634:	xor    DWORD PTR [edi],esp
  413636:	add    al,0x77
  413638:	(bad)  
  413639:	(bad)  
  41363b:	into   
  41363c:	or     esp,DWORD PTR [edx-0x3a9f2364]
  413642:	nop
  413643:	(bad)  
  413644:	adc    esp,esp
  413646:	bound  ecx,QWORD PTR [edx-0x16042c21]
  41364c:	cmp    al,0x6b
  41364e:	xchg   ebp,eax
  41364f:	and    DWORD PTR [ebx],ecx
  413651:	sar    DWORD PTR [edi+eiz*2-0x70],0x89
  413656:	or     edx,DWORD PTR [edx]
  413658:	push   edx
  413659:	call   0xf452:0x50500b63
  413660:	cli    
  413661:	xchg   esp,eax
  413662:	imul   ebp,DWORD PTR [edi+0x5e],0x7c
  413666:	mov    dh,0x9f
  413668:	mov    al,0xa4
  41366a:	je     0x413693
  41366c:	jae    0x41366d
  41366e:	data16 repz add al,BYTE PTR [ebx-0x28e7e574]
  413676:	je     0x4136b2
  413678:	inc    eax
  413679:	not    BYTE PTR [esi-0x2a4f068e]
  41367f:	pop    edi
  413680:	aam    0x33
  413682:	enter  0x213b,0x32
  413686:	aas    
  413687:	out    0x75,al
  413689:	mov    DWORD PTR [ecx+0x21],esp
  41368c:	add    DWORD PTR [ebp+0x2578b370],ebx
  413692:	stc    
  413693:	out    0x60,eax
  413695:	jecxz  0x4136e5
  413697:	(bad)  
  413698:	sub    al,0x2c
  41369a:	in     al,dx
  41369b:	mov    WORD PTR [ebx],fs
  41369d:	loop   0x413636
  41369f:	and    bh,BYTE PTR ds:0x64f354b4
  4136a5:	mov    edi,0x78161410
  4136aa:	and    eax,0x977efe47
  4136af:	inc    esp
  4136b0:	fild   WORD PTR [ecx+eiz*4+0x5b3d0e36]
  4136b7:	mov    edi,DWORD PTR [ebp+edx*1+0x15]
  4136bb:	and    BYTE PTR [edi],dl
  4136bd:	data16 movs BYTE PTR es:[edi],BYTE PTR ss:[esi]
  4136c0:	push   0x43c4f9f2
  4136c5:	test   al,0x82
  4136c7:	or     ah,0x74
  4136ca:	xchg   ecx,eax
  4136cb:	mov    cl,0x8d
  4136cd:	or     eax,0x679e469c
  4136d2:	jnp    0x41374e
  4136d4:	fisttp QWORD PTR [ebx-0x376810fb]
  4136da:	outs   dx,DWORD PTR ds:[esi]
  4136db:	jo     0x41367e
  4136dd:	dec    edi
  4136de:	js     0x413681
  4136e0:	mov    ecx,0x76165c04
  4136e5:	sti    
  4136e6:	lea    ecx,[ebx]
  4136e8:	inc    ebp
  4136e9:	outs   dx,BYTE PTR ds:[esi]
  4136ea:	sub    eax,0x27c67b45
  4136ef:	outs   dx,BYTE PTR ds:[esi]
  4136f0:	in     al,dx
  4136f1:	stos   BYTE PTR es:[edi],al
  4136f2:	sub    eax,edi
  4136f4:	mov    bl,0xcb
  4136f6:	mov    ebp,0xfe0578bb
  4136fb:	loope  0x41370b
  4136fd:	push   eax
  4136fe:	outs   dx,BYTE PTR ds:[esi]
  4136ff:	jecxz  0x41372d
  413701:	lds    ebx,FWORD PTR [ecx]
  413703:	mov    ds,edi
  413705:	mov    ebp,0x526a5912
  41370a:	iret   
  41370b:	scas   eax,DWORD PTR es:[edi]
  41370c:	loope  0x413718
  41370e:	out    0x7a,eax
  413710:	lea    eax,[ecx+edx*1+0x5a]
  413714:	push   esi
  413715:	das    
  413716:	enter  0x6394,0x59
  41371a:	retf   
  41371b:	or     eax,0x2dd35367
  413720:	ins    BYTE PTR es:[edi],dx
  413721:	leave  
  413722:	jp     0x413764
  413724:	sbb    esi,DWORD PTR [ecx+esi*4+0x6d]
  413728:	shl    BYTE PTR [edx],0x4d
  41372b:	dec    edx
  41372c:	(bad)  
  41372e:	xlat   BYTE PTR ds:[ebx]
  41372f:	int3   
  413730:	lea    ebp,[eax]
  413732:	cli    
  413733:	pop    edx
  413734:	sti    
  413735:	lock jmp 0x4d26a194
  41373b:	fnstenv [edi-0x68]
  41373e:	es mov ah,0x69
  413741:	sub    eax,0x10fd1eee
  413746:	pop    edi
  413747:	and    edx,DWORD PTR [ecx-0x4d]
  41374a:	repz sbb al,0x3f
  41374d:	stos   DWORD PTR es:[edi],eax
  41374e:	jae    0x413701
  413750:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413752:	test   esi,edi
  413754:	xchg   esi,eax
  413755:	daa    
  413756:	inc    ebx
  413757:	cli    
  413758:	cmp    DWORD PTR [eax+ebp*2],esp
  41375b:	add    al,0x78
  41375d:	les    edi,FWORD PTR [ebx+0x29e074be]
  413763:	pop    ss
  413764:	sbb    al,0x51
  413766:	data16 jnp 0x413726
  413769:	jp     0x413745
  41376b:	dec    ebx
  41376c:	sub    al,0x42
  41376e:	dec    eax
  41376f:	sti    
  413770:	xchg   ecx,eax
  413771:	or     bl,BYTE PTR [edx-0x328013b5]
  413777:	pop    edi
  413778:	xlat   BYTE PTR ds:[ebx]
  413779:	jecxz  0x413786
  41377b:	jg     0x413742
  41377d:	jle    0x4137de
  41377f:	ret    
  413780:	or     al,0xe8
  413782:	xchg   edx,ebp
  413784:	pop    esp
  413785:	and    DWORD PTR [edx-0x16],esp
  413788:	(bad)  
  413789:	(bad)  
  41378a:	rol    DWORD PTR [esi-0x52],1
  41378d:	cli    
  41378e:	hlt    
  41378f:	inc    ebx
  413790:	add    ebx,DWORD PTR [eax]
  413792:	ja     0x41376b
  413794:	or     dh,BYTE PTR [eax]
  413796:	and    DWORD PTR cs:[ebx],ebp
  413799:	lods   al,BYTE PTR ds:[esi]
  41379a:	mov    dl,0x43
  41379c:	mov    eax,0x7205af1e
  4137a1:	mov    dl,0xa1
  4137a3:	cmp    eax,0x8302d626
  4137a8:	cli    
  4137a9:	retf   0xcb6d
  4137ac:	aad    0xcf
  4137ae:	or     DWORD PTR es:[ebx+0x32],eax
  4137b2:	outs   dx,DWORD PTR ds:[esi]
  4137b3:	mov    eax,0xa978bf02
  4137b8:	cmp    DWORD PTR [edi-0x119935b6],ecx
  4137be:	repnz push 0xffffffcd
  4137c1:	dec    edi
  4137c2:	je     0x41380e
  4137c4:	cmp    DWORD PTR [edi+ebp*2+0x60c6a17e],esp
  4137cb:	mov    ch,0x0
  4137cd:	mov    al,0xa2
  4137cf:	lahf   
  4137d0:	sbb    DWORD PTR [ebx+ecx*2+0x5b],ebp
  4137d4:	mov    WORD PTR [esi],fs
  4137d6:	jne    0x413797
  4137d8:	xlat   BYTE PTR ds:[ebx]
  4137d9:	call   0x40517af4
  4137de:	(bad)  
  4137df:	(bad)  
  4137e0:	mov    esi,0x3a2bab63
  4137e5:	ficomp WORD PTR [edi]
  4137e7:	sbb    eax,0x262e6f0
  4137ec:	test   eax,0xae108499
  4137f1:	cmp    ecx,esi
  4137f3:	popf   
  4137f4:	scas   eax,DWORD PTR es:[edi]
  4137f5:	stc    
  4137f6:	lahf   
  4137f7:	stos   BYTE PTR es:[edi],al
  4137f8:	ds mov ebp,0x5aa0f5f5
  4137fe:	mov    ss,WORD PTR [edi]
  413800:	add    BYTE PTR [ebp-0x28f1118b],al
  413806:	fisubr DWORD PTR [esi-0x1b]
  413809:	push   eax
  41380a:	aam    0x86
  41380c:	popa   
  41380d:	out    0x6d,eax
  41380f:	cld    
  413810:	sar    BYTE PTR [ebx-0x44],cl
  413813:	push   ebp
  413814:	in     eax,0xf9
  413816:	mov    ecx,0x939f9fab
  41381b:	dec    ecx
  41381c:	test   eax,0x867aa1d5
  413821:	in     al,dx
  413822:	or     dl,BYTE PTR [eax]
  413824:	xor    DWORD PTR [edx+0x750d491b],eax
  41382a:	cld    
  41382b:	loop   0x4137ec
  41382d:	mov    esp,0xf63b6bb1
  413832:	sub    ecx,esi
  413834:	jnp    0x413806
  413836:	fwait
  413837:	test   BYTE PTR [esp+ebp*4],0x4d
  41383b:	dec    edx
  41383c:	repz call 0x2f5e:0xc1f99fee
  413844:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413845:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413846:	ins    DWORD PTR es:[edi],dx
  413847:	mov    eax,DWORD PTR [eax+0x62]
  41384a:	inc    esp
  41384b:	xchg   ecx,eax
  41384c:	adc    bh,BYTE PTR [edi+esi*2+0x7fc533cc]
  413853:	jne    0x4138c3
  413855:	and    DWORD PTR [ecx+0x26],ecx
  413858:	test   BYTE PTR [eax+0x2b2c9017],0x7d
  41385f:	repnz les edi,FWORD PTR [eax-0x285ebc2a]
  413866:	dec    eax
  413867:	inc    esp
  413868:	fsubr  DWORD PTR ds:[edi+0x29e49b84]
  41386f:	stos   BYTE PTR es:[edi],al
  413870:	test   eax,0x8f6ed440
  413875:	std    
  413876:	add    DWORD PTR [eax-0x1deeee1c],esp
  41387c:	jge    0x4138f4
  41387e:	stos   BYTE PTR es:[edi],al
  41387f:	jecxz  0x413804
  413881:	mov    ah,0x51
  413883:	lahf   
  413884:	xchg   cl,bl
  413886:	cmp    al,0x7e
  413888:	sub    ch,cl
  41388a:	out    0x6a,eax
  41388c:	pop    eax
  41388d:	cmp    al,al
  41388f:	aaa    
  413890:	xor    eax,0xb5709cda
  413895:	dec    esp
  413896:	sbb    ecx,ebx
  413898:	retf   
  413899:	sbb    BYTE PTR [edx-0x7b118da8],0x4c
  4138a0:	jmp    DWORD PTR [eax-0x4a]
  4138a3:	std    
  4138a4:	mov    fs,WORD PTR [eax-0x43]
  4138a7:	cmp    DWORD PTR [edx-0x36a0a7e],edx
  4138ad:	data16 ss in al,0x8b
  4138b1:	(bad)  
  4138b2:	loope  0x4138f7
  4138b4:	mov    bl,0xb2
  4138b6:	fstp   DWORD PTR [eax+ebp*8]
  4138b9:	(bad)  [ebp+0x5]
  4138bc:	into   
  4138bd:	dec    edi
  4138be:	leave  
  4138bf:	(bad)  
  4138c0:	pusha  
  4138c1:	mov    ds:0xf4c774e9,eax
  4138c6:	fsubr  DWORD PTR [ecx]
  4138c8:	imul   ebp,DWORD PTR [edx-0x43d4d627],0x7f
  4138cf:	ins    BYTE PTR es:[edi],dx
  4138d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138d1:	mov    esp,0xf2a84a45
  4138d6:	fcomp  DWORD PTR [edi+0x4]
  4138d9:	dec    ebx
  4138da:	mov    ebx,0x5af930e6
  4138df:	mov    bl,0x2f
  4138e1:	std    
  4138e2:	xchg   ebx,eax
  4138e3:	mov    ah,0x12
  4138e5:	mov    ds:0x89778faf,eax
  4138ea:	push   edx
  4138eb:	xor    bh,ah
  4138ed:	xor    al,0xbf
  4138ef:	and    edx,DWORD PTR [esi-0x12]
  4138f2:	test   ah,ah
  4138f4:	lahf   
  4138f5:	loop   0x41396c
  4138f7:	inc    edx
  4138f8:	push   es
  4138f9:	sub    edi,DWORD PTR [esp+ebp*8+0x75]
  4138fd:	test   ah,bh
  4138ff:	icebp  
  413900:	cs jbe 0x4138f1
  413903:	js     0x413941
  413905:	and    al,0x50
  413907:	ds int 0x76
  41390a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41390b:	mov    edi,0x64a7d2ed
  413910:	jae    0x413986
  413912:	fnstsw WORD PTR [edi+0x379ee3c7]
  413918:	pop    ss
  413919:	stos   WORD PTR es:[edi],ax
  41391b:	xor    eax,0x95b2df45
  413920:	and    ebp,DWORD PTR [edi]
  413922:	cmp    al,0x27
  413924:	bound  ecx,QWORD PTR [esi+edi*8-0x71]
  413928:	inc    esi
  413929:	std    
  41392a:	xor    eax,0x1f5209ee
  41392f:	xchg   ebx,eax
  413930:	stos   BYTE PTR es:[edi],al
  413931:	aam    0xd9
  413933:	mov    cs,WORD PTR [ecx+0x28]
  413936:	add    DWORD PTR [ebx-0x3063c85b],ecx
  41393c:	ds cwde 
  41393e:	add    eax,0x241a0466
  413943:	loop   0x4138dc
  413945:	stos   DWORD PTR es:[edi],eax
  413946:	les    eax,FWORD PTR [edi+0x27]
  413949:	push   cs
  41394a:	and    al,BYTE PTR [ebx+0x23]
  41394d:	ds dec eax
  41394f:	sub    DWORD PTR [ebp-0x25],esp
  413952:	dec    edx
  413953:	loopne 0x413983
  413955:	xor    DWORD PTR [edi],esp
  413957:	mov    bl,0xfe
  413959:	mov    ecx,0xde557b5e
  41395e:	push   ebp
  41395f:	mov    cl,0x35
  413961:	in     al,dx
  413962:	mov    cl,0x60
  413964:	sar    edx,0x4b
  413967:	iret   
  413968:	aaa    
  413969:	cld    
  41396a:	loope  0x4139c6
  41396c:	int3   
  41396d:	loope  0x4139bb
  41396f:	jl     0x413925
  413971:	push   eax
  413972:	clc    
  413973:	and    BYTE PTR [ebx+0x1bc704a6],0x8f
  41397a:	pop    ebx
  41397b:	fwait
  41397c:	rcl    BYTE PTR [ebx+0x2d601711],1
  413982:	int3   
  413983:	out    0x7e,eax
  413985:	jg     0x75b31682
  41398b:	xchg   ch,ah
  41398d:	call   0x29b9:0xab352e14
  413994:	push   es
  413995:	test   DWORD PTR [ebx],edi
  413997:	(bad)  
  413999:	inc    ebx
  41399a:	shl    DWORD PTR ss:[ebp-0x3ea451c4],0xdc
  4139a2:	int3   
  4139a3:	mov    al,ds:0x1564b1e3
  4139a8:	jb     0x41394a
  4139aa:	sbb    al,0x22
  4139ac:	test   BYTE PTR cs:[ebx],cl
  4139af:	or     ebx,edi
  4139b1:	in     eax,dx
  4139b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139b3:	cmp    ebp,DWORD PTR [edi+0x68c7bda2]
  4139b9:	in     eax,0x91
  4139bb:	jmp    FWORD PTR [esi-0x77215b54]
  4139c1:	adc    eax,0xb3fd2a45
  4139c6:	add    dh,ah
  4139c8:	and    BYTE PTR [esi+0x6aaf48db],dl
  4139ce:	ins    BYTE PTR es:[edi],dx
  4139cf:	sti    
  4139d0:	inc    esi
  4139d1:	das    
  4139d2:	aas    
  4139d3:	cli    
  4139d4:	and    al,0x7
  4139d6:	sbb    esp,eax
  4139d8:	dec    ecx
  4139d9:	xor    DWORD PTR [esi-0x39],edi
  4139dc:	scas   eax,DWORD PTR es:[edi]
  4139dd:	sar    al,cl
  4139df:	les    esp,FWORD PTR [esp+esi*2-0x1d]
  4139e3:	test   DWORD PTR [ebp+0x47],esp
  4139e6:	jle    0x41397d
  4139e8:	adc    edi,DWORD PTR [edx+eax*8+0x6a]
  4139ec:	adc    ah,BYTE PTR [edi]
  4139ee:	push   ebp
  4139ef:	xor    al,0x9a
  4139f1:	ins    DWORD PTR es:[edi],dx
  4139f2:	mov    cl,0xe2
  4139f4:	or     eax,0xc1091db1
  4139f9:	repnz cli 
  4139fb:	sub    ah,0x75
  4139fe:	push   DWORD PTR [ebx-0xbb13c4b]
  413a04:	mov    esp,0x31ddb65a
  413a09:	cmc    
  413a0a:	and    BYTE PTR [esi],al
  413a0c:	lea    eax,[esi]
  413a0e:	pop    ds
  413a0f:	ret    
  413a10:	jp     0x41399c
  413a12:	jb     0x4139c9
  413a14:	jno    0x413a80
  413a16:	je     0x4139d1
  413a18:	retf   0x6ef7
  413a1b:	mov    esi,0xcf250598
  413a20:	mov    al,ch
  413a22:	lods   al,BYTE PTR ds:[esi]
  413a23:	xchg   edi,eax
  413a24:	pop    edi
  413a25:	stos   BYTE PTR es:[edi],al
  413a26:	cwde   
  413a27:	dec    ebp
  413a28:	sub    edx,0x1b
  413a2b:	(bad)  
  413a2c:	jmp    0x413a9d
  413a2e:	setge  bl
  413a31:	push   ds
  413a32:	xchg   esp,eax
  413a33:	pop    es
  413a34:	addr16 call 0x985a1cbf
  413a3a:	mov    ah,0x6
  413a3d:	xchg   ah,ah
  413a3f:	add    ebx,eax
  413a41:	or     BYTE PTR [ebx-0x59ad4cc0],bh
  413a47:	les    esi,FWORD PTR [edx-0x41]
  413a4a:	adc    eax,0x5695f525
  413a4f:	into   
  413a50:	mov    dh,0xbf
  413a52:	jae    0x413a9f
  413a54:	jmp    0x4139e8
  413a56:	popf   
  413a57:	mov    eax,0xc2619a76
  413a5c:	arpl   sp,dx
  413a5e:	sahf   
  413a5f:	mov    ah,0x69
  413a61:	mov    dh,0x6a
  413a63:	xlat   BYTE PTR ds:[ebx]
  413a64:	rol    DWORD PTR [edi+0x10d2f11d],cl
  413a6a:	repz sub BYTE PTR [ecx+0x406676aa],dl
  413a71:	loope  0x413a80
  413a73:	lahf   
  413a74:	dec    esi
  413a75:	pop    ss
  413a76:	push   es
  413a77:	daa    
  413a78:	push   ebp
  413a79:	enter  0x2d53,0x10
  413a7d:	fld    TBYTE PTR [ebx]
  413a7f:	lods   eax,DWORD PTR ds:[esi]
  413a80:	sub    eax,DWORD PTR [eax-0x8211d04]
  413a86:	jg     0x413ad2
  413a88:	dec    esp
  413a89:	fild   WORD PTR [ecx+0x6]
  413a8c:	mov    esp,0x7b1a463a
  413a91:	enter  0xa585,0x53
  413a95:	mov    WORD PTR [eax+0x7b2189d0],ss
  413a9b:	jg     0x413aae
  413a9d:	add    al,0xe5
  413a9f:	das    
  413aa0:	adc    DWORD PTR [ebp-0x657d12c0],0xd4e55fa5
  413aaa:	lock aam 0xa6
  413aad:	jns    0x413b08
  413aaf:	imul   edi,DWORD PTR [ecx-0x25],0x1d
  413ab3:	mov    dl,0x22
  413ab5:	mov    dl,0xbf
  413ab7:	or     al,0x48
  413ab9:	shl    al,1
  413abb:	pop    esi
  413abc:	xchg   edx,eax
  413abd:	mov    esp,0x901f2cc5
  413ac2:	jecxz  0x413af7
  413ac4:	leave  
  413ac5:	cmp    al,0xf
  413ac7:	xchg   edi,eax
  413ac8:	jg     0x413a8c
  413aca:	mov    edi,0x9d920e8f
  413acf:	(bad)  
  413ad0:	stc    
  413ad1:	mov    DWORD PTR [ebp-0x52e41a61],ecx
  413ad7:	in     eax,dx
  413ad8:	idiv   DWORD PTR [eax-0x59]
  413adb:	cmc    
  413adc:	ins    DWORD PTR es:[edi],dx
  413add:	mov    edx,0x7c62f84
  413ae2:	adc    ah,BYTE PTR [edx+0x60]
  413ae5:	hlt    
  413ae6:	call   0x9451eec2
  413aeb:	out    dx,al
  413aec:	arpl   WORD PTR [edx+0x31],cx
  413aef:	pop    ecx
  413af0:	mov    esi,edx
  413af2:	pop    edi
  413af3:	push   ds
  413af4:	inc    ebp
  413af5:	fnstcw WORD PTR [esi-0x6d574705]
  413afb:	cmp    BYTE PTR ds:0xbf4a9a3c,0xae
  413b02:	add    al,0x79
  413b04:	mov    esi,0x8bb9715b
  413b09:	popa   
  413b0a:	mov    al,ds:0x72726c32
  413b0f:	push   edi
  413b10:	xor    ebp,DWORD PTR [edx]
  413b12:	in     al,dx
  413b13:	push   0xffffffc0
  413b15:	sub    BYTE PTR [ebx+0x2d],dh
  413b18:	mov    eax,0x6710b9f1
  413b1d:	(bad)  
  413b1e:	mov    edx,0x318b4d9d
  413b23:	jne    0x413b0a
  413b25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b26:	outs   dx,BYTE PTR ds:[esi]
  413b27:	retf   0x6361
  413b2a:	xor    DWORD PTR [edx+0x39d88e81],edx
  413b30:	ds adc al,0xdf
  413b33:	pop    eax
  413b34:	lea    ecx,[eax]
  413b36:	push   edx
  413b37:	ins    BYTE PTR es:[edi],dx
  413b38:	outs   dx,DWORD PTR ds:[esi]
  413b39:	xor    al,0x4
  413b3b:	shl    ah,1
  413b3d:	pusha  
  413b3e:	push   ds
  413b3f:	es xchg edx,eax
  413b41:	aam    0x41
  413b43:	test   ch,cl
  413b45:	pop    edi
  413b46:	xlat   BYTE PTR ds:[ebx]
  413b47:	push   esp
  413b48:	inc    ebp
  413b49:	bound  esi,QWORD PTR ds:0x6a555760
  413b4f:	popf   
  413b50:	aam    0x2c
  413b52:	push   edx
  413b53:	cs push ecx
  413b55:	pop    esp
  413b56:	mov    bh,0xa2
  413b58:	retf   
  413b59:	es jbe 0x413b1c
  413b5c:	aaa    
  413b5d:	in     al,0x85
  413b5f:	add    ebx,ebx
  413b61:	xchg   ecx,eax
  413b62:	sub    DWORD PTR [edx],eax
  413b64:	ins    BYTE PTR es:[edi],dx
  413b65:	pop    ebp
  413b66:	or     ebp,edi
  413b68:	add    BYTE PTR [ebx],ah
  413b6a:	inc    DWORD PTR [edi+0x51729939]
  413b70:	in     eax,0xc9
  413b72:	ins    BYTE PTR es:[edi],dx
  413b73:	out    dx,eax
  413b74:	retf   
  413b75:	stc    
  413b76:	lea    edi,[edx]
  413b78:	xor    al,0xae
  413b7a:	outs   dx,BYTE PTR ds:[esi]
  413b7b:	loop   0x413b67
  413b7d:	outs   dx,DWORD PTR cs:[esi]
  413b7f:	fild   DWORD PTR [edi-0x65b8eab3]
  413b85:	clc    
  413b86:	fucom  st(6)
  413b88:	or     bh,BYTE PTR [esi+ebx*2]
  413b8b:	sar    BYTE PTR [edi-0x37],0xa5
  413b8f:	sahf   
  413b90:	pop    es
  413b91:	(bad)  
  413b92:	jno    0x413b48
  413b94:	pop    ebp
  413b95:	(bad)  
  413b96:	mov    ebx,0x46a35fb1
  413b9b:	mov    ss,WORD PTR [esi-0x35]
  413b9e:	fs ins DWORD PTR es:[edi],dx
  413ba0:	sar    BYTE PTR [esi],cl
  413ba2:	jbe    0x413bbe
  413ba4:	add    esp,ebx
  413ba6:	cwde   
  413ba7:	add    cl,BYTE PTR [esi]
  413ba9:	adc    dl,BYTE PTR [ebx]
  413bab:	rcl    bl,0xc1
  413bae:	ins    BYTE PTR es:[edi],dx
  413baf:	fdivr  QWORD PTR [esi+eax*1-0x18]
  413bb3:	add    DWORD PTR [esi-0x79],ebx
  413bb6:	dec    ebx
  413bb7:	push   eax
  413bb8:	and    DWORD PTR [ecx+eax*4],esi
  413bbb:	mov    WORD PTR [ebx+0x3f],es
  413bbe:	add    BYTE PTR [edi],bh
  413bc0:	out    dx,eax
  413bc1:	shr    al,0xde
  413bc4:	outs   dx,BYTE PTR ds:[esi]
  413bc5:	xchg   ebx,eax
  413bc6:	sbb    eax,0x817243ef
  413bcb:	ret    
  413bcc:	jo     0x413c38
  413bce:	inc    eax
  413bcf:	sbb    al,BYTE PTR [eax+0x24]
  413bd2:	adc    BYTE PTR [ebx-0x1a],bh
  413bd5:	shl    DWORD PTR [edx],1
  413bd7:	push   esp
  413bd8:	mov    ds:0x9fca5161,eax
  413bdd:	mov    ch,0x32
  413bdf:	push   ds
  413be0:	xchg   edx,eax
  413be1:	pusha  
  413be2:	scas   al,BYTE PTR es:[edi]
  413be3:	inc    ecx
  413be4:	sub    BYTE PTR [ebx+0x7dd4052a],dl
  413bea:	push   ds
  413beb:	das    
  413bec:	lods   al,BYTE PTR ds:[esi]
  413bed:	add    eax,0x8ff151f5
  413bf2:	jb     0x413b79
  413bf4:	add    eax,0x6031b1b8
  413bf9:	pop    eax
  413bfa:	mov    ecx,0x7bad4cb5
  413bff:	pop    eax
  413c00:	xor    eax,DWORD PTR [edi]
  413c02:	mov    ah,0xb7
  413c04:	sti    
  413c05:	addr16 xchg ecx,eax
  413c07:	or     esi,ebx
  413c09:	pop    DWORD PTR [ebp+0x77459fce]
  413c0f:	and    edi,DWORD PTR [esi]
  413c11:	ds jbe 0x413bc6
  413c14:	aad    0x84
  413c16:	(bad)  
  413c17:	lahf   
  413c18:	push   0x2a
  413c1a:	cmc    
  413c1b:	ins    DWORD PTR es:[edi],dx
  413c1c:	cmp    DWORD PTR [ecx+eax*2-0x52],esi
  413c20:	iret   
  413c21:	mov    edi,ebp
  413c23:	inc    ebx
  413c24:	mov    dh,0xfc
  413c26:	repz cdq 
  413c28:	mov    ebp,0xb4545398
  413c2d:	jmp    0x413c3f
  413c2f:	out    dx,eax
  413c30:	jo     0x413bc7
  413c32:	ror    DWORD PTR ds:0xe2fa5aaa,1
  413c38:	iret   
  413c39:	out    0x1e,eax
  413c3b:	dec    eax
  413c3c:	popf   
  413c3d:	adc    al,0x11
  413c3f:	addr16 and DWORD PTR [bp+si-0x19],ebp
  413c44:	mov    esi,0x937545fa
  413c49:	fidivr WORD PTR cs:[ecx+eiz*4+0x471acf94]
  413c51:	cdq    
  413c52:	jo     0x413c73
  413c54:	xor    BYTE PTR [edi+0x7c],dl
  413c57:	dec    ebx
  413c58:	icebp  
  413c59:	dec    esp
  413c5a:	mov    ch,0x97
  413c5c:	push   esp
  413c5d:	xor    DWORD PTR [edi+0x6a],ecx
  413c60:	lds    edi,FWORD PTR [ebp-0x1a]
  413c63:	pop    edx
  413c64:	gs imul edx,eax,0x14b3191f
  413c6b:	imul   esp,DWORD PTR [ecx-0x10],0xffffffd0
  413c6f:	into   
  413c70:	scas   al,BYTE PTR es:[edi]
  413c71:	repz call 0x6b2f901d
  413c77:	mov    al,0x89
  413c79:	xor    ecx,DWORD PTR [eax+0x1d8e3fd7]
  413c7f:	xchg   ebp,esp
  413c81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c82:	pop    es
  413c83:	and    bh,al
  413c85:	or     ah,ch
  413c87:	pop    eax
  413c88:	cmp    al,0xe8
  413c8a:	(bad)
  413c8e:	ret    0x6008
  413c91:	mov    bh,0x8d
  413c93:	ret    
  413c94:	cmp    BYTE PTR [ebp+0x3],0xab
  413c98:	jge    0x413d14
  413c9a:	cs ror bh,1
  413c9d:	out    dx,al
  413c9e:	pop    edx
  413c9f:	jbe    0x413c45
  413ca1:	in     al,0x56
  413ca3:	ins    DWORD PTR es:[edi],dx
  413ca4:	stos   BYTE PTR es:[edi],al
  413ca5:	cmp    al,0x65
  413ca7:	lds    esi,FWORD PTR [ecx+0x1c]
  413caa:	outs   dx,BYTE PTR ds:[esi]
  413cab:	add    ebx,edx
  413cad:	mov    bl,0x99
  413caf:	repz test bl,bh
  413cb2:	loope  0x413ca3
  413cb4:	div    BYTE PTR [eax+0x3b1297be]
  413cba:	jge    0x413d1d
  413cbc:	dec    esp
  413cbd:	dec    esi
  413cbe:	pop    es
  413cbf:	(bad)  
  413cc0:	mov    dl,0xdb
  413cc2:	jmp    0x7662:0xff73986b
  413cc9:	inc    esp
  413cca:	stos   DWORD PTR es:[edi],eax
  413ccb:	pop    esi
  413ccc:	pop    ss
  413ccd:	sbb    al,0xd
  413ccf:	xor    bh,cl
  413cd1:	lds    ebx,FWORD PTR ds:0x98a2cae
  413cd7:	xchg   edi,eax
  413cd8:	enter  0x404e,0xe1
  413cdc:	cmp    dh,bl
  413cde:	dec    ebp
  413cdf:	test   BYTE PTR [edi-0x9487ba0],al
  413ce5:	dec    ebp
  413ce6:	rcl    BYTE PTR [ecx],1
  413ce8:	popf   
  413ce9:	neg    BYTE PTR [eax]
  413ceb:	or     esp,ecx
  413ced:	pop    ebp
  413cee:	mov    bh,0x89
  413cf0:	jmp    0x40f8:0xf6415464
  413cf7:	inc    ecx
  413cf8:	hlt    
  413cf9:	jo     0x413d49
  413cfb:	mov    DWORD PTR [ebx-0x117950d5],ebx
  413d01:	mov    edx,edi
  413d03:	dec    ebx
  413d04:	retf   
  413d05:	jecxz  0x413d66
  413d07:	shl    DWORD PTR [edi],1
  413d09:	jmp    0x413cff
  413d0b:	imul   ecx,DWORD PTR [ecx+ecx*1-0x6f981caf],0xd006f1c0
  413d16:	popf   
  413d17:	push   es
  413d18:	mov    esp,0xe910eeb3
  413d1d:	ins    BYTE PTR es:[edi],dx
  413d1e:	or     BYTE PTR [edi+0x4d],ah
  413d21:	aas    
  413d22:	adc    BYTE PTR [edx-0x624eef42],0x59
  413d29:	test   BYTE PTR [ebp-0x5da9a549],bl
  413d2f:	mov    al,0xdb
  413d31:	jle    0x413cbf
  413d33:	repz (bad) 
  413d35:	pop    ebx
  413d36:	in     al,0xec
  413d38:	fcom   QWORD PTR [esi-0x6e0aa939]
  413d3e:	mov    esp,0xa5bfd82e
  413d43:	popa   
  413d44:	fwait
  413d45:	mov    al,0x4f
  413d47:	fadd   DWORD PTR [edx-0x15460ac0]
  413d4d:	xchg   BYTE PTR [esi],dh
  413d4f:	cli    
  413d50:	jno    0x413dcc
  413d52:	xor    esi,DWORD PTR [edi]
  413d54:	mov    bl,0xf5
  413d56:	popf   
  413d57:	sbb    eax,0x7f7e1b7d
  413d5c:	or     edx,DWORD PTR [ecx+0x45a40b93]
  413d62:	arpl   dx,bp
  413d64:	jnp    0x413d00
  413d66:	jnp    0x413d28
  413d68:	mov    esi,0xd0803d50
  413d6d:	sub    eax,0x1412553c
  413d72:	push   0xaeeed4e8
  413d77:	push   edi
  413d78:	test   BYTE PTR ds:0x65a4252e,dh
  413d7e:	je     0x413d3a
  413d80:	out    dx,al
  413d81:	cld    
  413d82:	inc    esp
  413d83:	and    BYTE PTR [ecx+0x749d03b2],0x4f
  413d8a:	lods   eax,DWORD PTR ds:[esi]
  413d8b:	push   edx
  413d8c:	sbb    al,0x4d
  413d8e:	add    eax,0x8bf11ece
  413d93:	neg    DWORD PTR [edx-0x21]
  413d96:	ficom  DWORD PTR [ecx]
  413d98:	jb     0x413d7c
  413d9a:	pop    esi
  413d9b:	(bad)  
  413d9c:	sub    esi,DWORD PTR [edi]
  413d9e:	jae    0x413df0
  413da0:	add    DWORD PTR [ebx],edx
  413da2:	popf   
  413da3:	aas    
  413da4:	jle    0x413e1e
  413da6:	ins    BYTE PTR es:[edi],dx
  413da7:	scas   al,BYTE PTR es:[edi]
  413da8:	sbb    eax,DWORD PTR [eax]
  413daa:	int    0x9
  413dac:	sub    eax,0x7103fa9b
  413db1:	fcmovbe st,st(2)
  413db3:	icebp  
  413db4:	add    al,0x57
  413db6:	dec    ebp
  413db7:	pop    es
  413db8:	enter  0x70ef,0xa1
  413dbc:	push   ebp
  413dbd:	sub    DWORD PTR [ebx+0x27],0x93fd5eea
  413dc4:	imul   ebx,DWORD PTR [edx+0x56],0x831d654a
  413dcb:	push   0x1f
  413dcd:	sbb    al,BYTE PTR [edx+0x13]
  413dd0:	les    ebp,FWORD PTR [eax-0x330db4a]
  413dd6:	stos   DWORD PTR es:[edi],eax
  413dd7:	dec    ebp
  413dd8:	not    BYTE PTR [edi]
  413dda:	mov    al,ds:0x8b25a176
  413ddf:	jae    0x413d75
  413de1:	cwde   
  413de2:	aaa    
  413de3:	push   ds
  413de4:	bound  ecx,QWORD PTR [ecx+0x6c]
  413de7:	dec    esp
  413de8:	daa    
  413de9:	cld    
  413dea:	xchg   edi,eax
  413deb:	js     0x413d78
  413ded:	inc    edx
  413dee:	gs xchg esi,eax
  413df0:	arpl   WORD PTR [ecx],sp
  413df2:	add    BYTE PTR [ebx+eiz*8-0x47527a83],al
  413df9:	cmp    eax,0xc32cb7f6
  413dfe:	(bad)  
  413dff:	push   ebx
  413e00:	test   al,0xb2
  413e02:	push   0xffffffbf
  413e04:	int3   
  413e05:	cmp    al,0x41
  413e07:	jno    0x413e54
  413e09:	push   0xffffff96
  413e0b:	push   esp
  413e0c:	jmp    0x413da9
  413e0e:	and    cl,dh
  413e10:	mov    BYTE PTR [edi+0x28],ah
  413e13:	jecxz  0x413e02
  413e15:	gs xchg esp,eax
  413e17:	loopne 0x413e0b
  413e19:	and    bh,BYTE PTR [edi]
  413e1b:	stos   DWORD PTR es:[edi],eax
  413e1c:	mov    edi,DWORD PTR [ebp+0x55]
  413e1f:	cmp    esp,ebx
  413e21:	mov    al,ds:0xfdfba5ab
  413e26:	xchg   edx,eax
  413e27:	sti    
  413e28:	int    0x5c
  413e2a:	popa   
  413e2b:	stos   DWORD PTR es:[edi],eax
  413e2c:	push   ebx
  413e2d:	aas    
  413e2e:	push   ebp
  413e2f:	or     DWORD PTR [edi+0x7a],edi
  413e32:	mov    eax,ds:0xa1dbf442
  413e37:	mov    al,ah
  413e39:	imul   ebp,DWORD PTR [edi],0xffffffa0
  413e3c:	mov    cl,0x2c
  413e3e:	mov    ecx,DWORD PTR [eax]
  413e40:	push   edx
  413e41:	sub    eax,0xffcae8b8
  413e46:	xor    BYTE PTR [edx+edi*2],0xf3
  413e4a:	jmp    0x96a8:0x46fba77b
  413e51:	cwde   
  413e52:	mov    ebp,0xc2d3eed
  413e57:	test   BYTE PTR [ecx-0x669737e3],ch
  413e5d:	test   al,0xac
  413e5f:	xor    ebx,ebx
  413e61:	inc    ebx
  413e62:	or     eax,0xb8335bc4
  413e67:	sub    dh,BYTE PTR fs:[ebx-0x4b07b101]
  413e6e:	aad    0xa7
  413e70:	in     eax,dx
  413e71:	js     0x413ee9
  413e73:	and    al,0xfa
  413e75:	xor    DWORD PTR [esi-0x3c],0xf08ef30d
  413e7c:	(bad)  
  413e7d:	pushf  
  413e7e:	int3   
  413e7f:	cld    
  413e80:	das    
  413e81:	dec    ecx
  413e82:	mov    ebp,0x72989aaf
  413e87:	push   dx
  413e89:	jge    0x413e83
  413e8b:	xor    BYTE PTR [ecx-0x2ce53a51],0xf7
  413e92:	fadd   st,st(7)
  413e94:	neg    BYTE PTR [edi+0x77708bb5]
  413e9a:	lea    eax,[ebp-0x7ad35a52]
  413ea0:	jno    0x413ea8
  413ea2:	cmp    eax,0x3de82dde
  413ea7:	jo     0x413e32
  413ea9:	outs   dx,BYTE PTR ds:[esi]
  413eaa:	mov    eax,DWORD PTR [edx+ebp*8]
  413ead:	aaa    
  413eae:	sbb    eax,0xfb06a7df
  413eb3:	sahf   
  413eb4:	adc    DWORD PTR [ebx-0x2a],0xddedead5
  413ebb:	cli    
  413ebc:	inc    ebp
  413ebd:	cs (bad) 
  413ec0:	or     eax,0xa0744bd2
  413ec5:	leave  
  413ec6:	pushf  
  413ec7:	sbb    esi,DWORD PTR [ecx]
  413ec9:	or     edx,ebp
  413ecb:	and    DWORD PTR [ecx-0x4a7ff8eb],ebx
  413ed1:	pop    edi
  413ed2:	push   edi
  413ed3:	jmp    0x413f1c
  413ed5:	or     dh,BYTE PTR [eax+0x5e]
  413ed8:	mov    cl,0xaa
  413eda:	add    al,0x52
  413edc:	sbb    eax,0x2e060cb6
  413ee1:	dec    edx
  413ee2:	int    0x29
  413ee4:	inc    esi
  413ee5:	scas   al,BYTE PTR es:[edi]
  413ee6:	fist   DWORD PTR [esi-0x65f3a73d]
  413eec:	xlat   BYTE PTR ds:[ebx]
  413eed:	es mov bh,0xb6
  413ef0:	pop    edi
  413ef1:	xor    BYTE PTR [edi-0x11b76f73],0x9a
  413ef8:	inc    edx
  413ef9:	push   eax
  413efa:	pop    ss
  413efb:	mov    ecx,0x6e8359e5
  413f00:	dec    DWORD PTR [esi+0x3c]
  413f03:	dec    ch
  413f05:	cmp    al,0x3f
  413f08:	mov    ebp,0xa57560b
  413f0d:	push   eax
  413f0e:	ins    DWORD PTR es:[edi],dx
  413f0f:	cmp    DWORD PTR [ebx-0x10],0x104e2b79
  413f16:	aad    0xcf
  413f18:	into   
  413f19:	cmp    BYTE PTR [ecx+0x347da004],0xc1
  413f20:	mov    bh,0x4d
  413f22:	add    BYTE PTR [edx],cl
  413f24:	or     BYTE PTR [esi+0x6018df4d],ch
  413f2a:	mov    bh,0x88
  413f2c:	mov    ch,0xc4
  413f2e:	int    0x9d
  413f30:	cmp    eax,0xa5cd8bdd
  413f35:	aam    0x3e
  413f37:	mov    ch,0x93
  413f39:	pop    ds
  413f3a:	mov    al,ds:0x8654c67e
  413f3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f40:	fcom   QWORD PTR [esi-0x23]
  413f43:	sbb    esi,ecx
  413f45:	pand   mm1,QWORD PTR [eax]
  413f48:	inc    eax
  413f49:	idiv   BYTE PTR [ebp-0x10ec69c5]
  413f4f:	(bad)  
  413f50:	nop
  413f51:	ss js  0x413f85
  413f54:	mov    esp,0x99e6d39
  413f59:	pop    ss
  413f5a:	mov    al,ds:0xb12072fc
  413f5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f60:	inc    esp
  413f61:	cld    
  413f62:	cld    
  413f63:	mov    al,ds:0x45464d8b
  413f68:	popf   
  413f69:	inc    edi
  413f6a:	lods   eax,DWORD PTR ds:[esi]
  413f6b:	pop    edi
  413f6c:	and    eax,0x95cc0291
  413f71:	fnclex 
  413f73:	sub    dl,BYTE PTR [eax+0x9]
  413f76:	bound  ebx,QWORD PTR [esi+eax*8-0x29]
  413f7a:	jno    0x413fbd
  413f7c:	dec    ebp
  413f7d:	fbstp  TBYTE PTR [ebx+0x2622fbf]
  413f83:	fs gs push eax
  413f86:	adc    eax,0xc3ca35a3
  413f8b:	and    ch,BYTE PTR [edx+0x2626d8d7]
  413f91:	cmc    
  413f92:	jg     0x413fd7
  413f94:	mov    esi,0x5f28b4c6
  413f99:	inc    esp
  413f9a:	and    eax,ebp
  413f9c:	cmp    DWORD PTR [ebx],0x4c2d7d93
  413fa2:	mov    BYTE PTR [ebp+0x73],0x1
  413fa6:	sbb    cl,BYTE PTR [esi]
  413fa8:	push   ebp
  413fa9:	xchg   BYTE PTR [edx-0x636168a8],cl
  413faf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fb0:	add    eax,DWORD PTR [esi-0x71efd291]
  413fb6:	iret   
  413fb7:	test   eax,0x5ac5b567
  413fbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413fbd:	lods   eax,DWORD PTR ds:[esi]
  413fbe:	sbb    al,0xdc
  413fc0:	iret   
  413fc1:	call   0x9cc9:0xef90d280
  413fc8:	dec    esi
  413fc9:	test   al,0x62
  413fcb:	pop    edx
  413fcc:	ins    BYTE PTR es:[edi],dx
  413fcd:	mov    ch,0x3
  413fcf:	sbb    al,al
  413fd1:	push   eax
  413fd2:	inc    edi
  413fd3:	dec    edi
  413fd4:	push   ecx
  413fd5:	in     eax,0x3e
  413fd7:	cmp    eax,0xcb4dd46a
  413fdc:	cld    
  413fdd:	or     eax,0x63b8a019
  413fe2:	sub    eax,0xffffffbb
  413fe5:	sbb    BYTE PTR [ebx-0x2b41e6a7],bl
  413feb:	add    dl,dl
  413fed:	retf   0xda19
  413ff0:	test   DWORD PTR [ecx-0x33575223],0xc0ffca3f
  413ffa:	mov    edi,DWORD PTR [esp+eax*2-0x6abe74f5]
  414001:	add    DWORD PTR [eax],esi
  414003:	xchg   esi,eax
  414004:	fdivr  QWORD PTR [ecx+0xa3336ac]
  41400a:	xchg   edi,eax
  41400b:	cmp    ecx,DWORD PTR [ecx+0x3527484b]
  414011:	inc    edx
  414012:	mov    ah,0xa6
  414014:	(bad)  
  414015:	data16 cmp al,0xe
  414018:	adc    al,BYTE PTR [ecx-0x5b36170d]
  41401e:	dec    edi
  41401f:	dec    eax
  414020:	jl     0x414008
  414022:	pop    es
  414023:	fst    QWORD PTR [eax]
  414025:	push   0xd07e4a2e
  41402a:	sub    eax,0x6033d6de
  41402f:	inc    esi
  414030:	rol    BYTE PTR [edi-0x79d1198b],1
  414036:	mov    ah,BYTE PTR [edi-0x5558c683]
  41403c:	(bad)
  41403f:	xchg   ecx,eax
  414040:	jge    0x4140c1
  414042:	pop    ds
  414043:	cmp    DWORD PTR [edx],edx
  414045:	fs jno 0x413fdd
  414048:	sbb    bh,ah
  41404a:	sub    bh,BYTE PTR [edx]
  41404c:	dec    edx
  41404d:	jl     0x414061
  41404f:	out    0x89,eax
  414051:	mov    edi,0xf1c6dadf
  414056:	cmp    al,ah
  414058:	push   edi
  414059:	mov    al,ds:0xfda5a746
  41405e:	pop    ecx
  41405f:	cli    
  414060:	call   0xebb762d
  414065:	repnz stos DWORD PTR es:[edi],eax
  414067:	mov    ch,0x60
  414069:	hlt    
  41406a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41406b:	int    0x2f
  41406d:	sbb    ch,ch
  41406f:	std    
  414070:	mov    al,ds:0x89922afa
  414075:	mov    bh,0x77
  414077:	lahf   
  414078:	or     al,0xae
  41407a:	sbb    bl,BYTE PTR [edx]
  41407c:	push   cs
  41407d:	pop    edx
  41407e:	int3   
  41407f:	arpl   WORD PTR [edx],sp
  414081:	or     eax,0xce76b7b3
  414086:	mov    ch,0x34
  414088:	jns    0x414068
  41408a:	popa   
  41408b:	pop    esi
  41408c:	add    edi,edi
  41408e:	cmp    cl,BYTE PTR [esi]
  414090:	and    BYTE PTR [ebp-0xc],bh
  414093:	invd   
  414095:	ficom  DWORD PTR [edx-0x116d8365]
  41409b:	aam    0xd5
  41409d:	jns    0x414071
  41409f:	mov    ds:0xb94c462d,eax
  4140a4:	ret    
  4140a5:	cmp    eax,0x6f354b5a
  4140aa:	and    eax,0xf26bc4cc
  4140af:	test   eax,0x3568f265
  4140b4:	adc    eax,0x3f5cab5
  4140b9:	mov    dh,0x2c
  4140bb:	mov    al,ds:0x91cf55f7
  4140c0:	xchg   edx,eax
  4140c1:	sbb    cl,BYTE PTR [edx+0x33]
  4140c4:	pushf  
  4140c5:	xor    DWORD PTR [edi+0x900993f],0xab487401
  4140cf:	retf   0xd46b
  4140d2:	add    BYTE PTR [edi+0x1b],dl
  4140d5:	jno    0x41414a
  4140d7:	sti    
  4140d8:	in     al,0xae
  4140da:	outs   dx,DWORD PTR ds:[esi]
  4140db:	mov    ebx,0x3b59055b
  4140e0:	in     al,dx
  4140e1:	and    al,0x48
  4140e3:	sbb    ah,bh
  4140e5:	lods   eax,DWORD PTR ds:[esi]
  4140e6:	adc    eax,0xcf6518f7
  4140eb:	jmp    FWORD PTR [ebx]
  4140ed:	xor    bh,BYTE PTR [eax]
  4140ef:	sbb    ah,BYTE PTR [ecx+0x46]
  4140f2:	mov    edi,0xe7c5a10
  4140f7:	inc    esi
  4140f8:	push   esp
  4140f9:	retf   0xea42
  4140fc:	pop    eax
  4140fd:	push   eax
  4140fe:	outs   dx,BYTE PTR ds:[esi]
  4140ff:	ror    DWORD PTR [ebx+0x1ef09ffd],0x86
  414106:	shl    BYTE PTR [eax-0x547a76b5],1
  41410c:	in     eax,dx
  41410d:	adc    BYTE PTR [ebx-0x6b],bl
  414110:	xchg   esp,eax
  414111:	dec    ebp
  414112:	mov    al,0x73
  414114:	das    
  414115:	inc    esp
  414116:	xor    al,0xe3
  414118:	and    BYTE PTR [eax+0x78],dh
  41411b:	cli    
  41411c:	je     0x4140ac
  41411e:	inc    ebx
  41411f:	pop    eax
  414120:	sar    BYTE PTR [ebp-0x3df7b880],1
  414126:	leave  
  414127:	inc    ebx
  414128:	mul    DWORD PTR [esp+ebp*2-0x3196abf]
  41412f:	dec    edi
  414130:	adc    BYTE PTR [ebx],dh
  414132:	fist   DWORD PTR [ecx-0x30]
  414135:	ja     0x414127
  414137:	ss inc ebp
  414139:	repz stc 
  41413b:	adc    esp,DWORD PTR [esi]
  41413d:	mov    al,0x3f
  41413f:	(bad)  
  414140:	dec    ebp
  414141:	sub    eax,0x49f9385c
  414146:	adc    eax,0x54244173
  41414b:	or     ecx,eax
  41414d:	icebp  
  41414e:	xlat   BYTE PTR ds:[ebx]
  41414f:	in     eax,0xe
  414151:	(bad)  
  414153:	ror    DWORD PTR [ebx+0x2bc998ba],cl
  414159:	clc    
  41415a:	arpl   ax,bx
  41415c:	test   al,0xa8
  41415e:	data16 clc 
  414160:	jp     0x4140e8
  414162:	aas    
  414163:	push   esp
  414164:	shr    BYTE PTR [ebx+edx*1-0x7f946a16],0x2f
  41416c:	bound  edx,QWORD PTR [ebx+0xdede7a9]
  414172:	add    eax,0xaabaefc2
  414177:	pop    edx
  414178:	js     0x414164
  41417a:	repz leave 
  41417c:	gs push esi
  41417e:	jmp    0x4374:0xc15b8a01
  414185:	leave  
  414186:	jae    0x41410f
  414188:	inc    esp
  414189:	js     0x414138
  41418b:	add    DWORD PTR [edx+0x2f],edi
  41418e:	aad    0x8c
  414190:	push   edi
  414191:	out    0xd4,al
  414193:	hlt    
  414194:	clc    
  414195:	daa    
  414196:	ret    0xb73b
  414199:	xor    eax,0xd7af169
  41419e:	pop    esp
  41419f:	mov    al,ds:0xbe499f36
  4141a4:	jg     0x414198
  4141a6:	xchg   BYTE PTR [esi-0x5b58ecdb],al
  4141ac:	inc    esi
  4141ad:	dec    ebp
  4141ae:	cmp    edi,edx
  4141b0:	call   0xae180b7f
  4141b5:	push   es
  4141b6:	inc    edx
  4141b7:	call   0x4d203ff7
  4141bc:	dec    ebx
  4141bd:	push   cs
  4141be:	repnz and BYTE PTR [esi+0x1b],bh
  4141c2:	repz std 
  4141c4:	nop
  4141c5:	dec    ebx
  4141c6:	add    ah,BYTE PTR [esi]
  4141c8:	test   DWORD PTR [edx+0x35],edx
  4141cb:	sub    DWORD PTR [esi],ebx
  4141cd:	stos   DWORD PTR es:[edi],eax
  4141ce:	outs   dx,DWORD PTR ds:[esi]
  4141cf:	jb     0x414151
  4141d1:	adc    dh,BYTE PTR [ecx+0x1315dd32]
  4141d7:	out    0xe5,eax
  4141d9:	add    ebp,esi
  4141db:	scas   al,BYTE PTR es:[edi]
  4141dc:	dec    ecx
  4141dd:	clc    
  4141de:	call   0xb454:0x7a175a9c
  4141e5:	inc    esi
  4141e6:	mov    ss,eax
  4141e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141e9:	mov    edx,0x6ed5a813
  4141ee:	out    dx,al
  4141ef:	xchg   ebp,eax
  4141f0:	jo     0x4141a8
  4141f2:	add    eax,DWORD PTR [ebp-0x69]
  4141f5:	adc    dx,WORD PTR [ebx-0x3e]
  4141f9:	js     0x414206
  4141fb:	fdivr  QWORD PTR [esi+0x390ee97f]
  414201:	pop    eax
  414202:	adc    eax,0x6dca7a6a
  414207:	sub    esi,DWORD PTR [edx+0x4481293a]
  41420d:	addr16 call 0x7bfa980c
  414213:	and    eax,0x20c4589b
  414218:	in     al,0x7e
  41421a:	sub    bl,ah
  41421c:	xchg   esi,eax
  41421d:	adc    DWORD PTR [esi+eax*4+0x9],esp
  414221:	push   eax
  414222:	std    
  414223:	loope  0x414279
  414225:	lods   eax,DWORD PTR ds:[esi]
  414226:	add    eax,0x55c3e520
  41422b:	xchg   edi,eax
  41422c:	fild   DWORD PTR [ecx+0x69f15091]
  414232:	xlat   BYTE PTR ds:[ebx]
  414233:	mov    edx,0x95b774a4
  414238:	jbe    0x1f5c90f6
  41423e:	cmp    BYTE PTR [esi-0x41643f75],cl
  414244:	mov    edi,0x92e25399
  414249:	mov    bl,0xe0
  41424b:	xchg   bh,dh
  41424d:	fidiv  DWORD PTR [edi-0x5af2ebdd]
  414253:	sub    eax,0xff2fce8c
  414258:	stos   BYTE PTR es:[edi],al
  414259:	ss push 0x17e9dc82
  41425f:	rcr    BYTE PTR es:[edi+edx*8+0x802f34c],1
  414267:	push   ebp
  414268:	shr    esi,cl
  41426a:	shl    BYTE PTR [ebx-0x9],0x3
  41426e:	daa    
  41426f:	in     eax,0x7
  414271:	adc    DWORD PTR [ebp-0x2efed83c],ebx
  414277:	pop    es
  414278:	(bad)  
  414279:	lds    ecx,FWORD PTR [ecx+edx*1-0x3136480b]
  414280:	or     al,0x6
  414282:	pop    eax
  414283:	mov    esi,0xb2bde715
  414288:	dec    ebp
  414289:	and    al,0x8c
  41428b:	fisub  WORD PTR [ebx+0x1294f345]
  414291:	mov    ecx,0xba67505a
  414296:	sbb    bl,BYTE PTR [edi+0x70c50b6]
  41429c:	xor    al,BYTE PTR [edx-0x47]
  41429f:	sahf   
  4142a0:	cmp    DWORD PTR [esi-0x5ebd5aed],edx
  4142a6:	aad    0x5c
  4142a8:	or     bl,dl
  4142aa:	adc    DWORD PTR [ecx+edi*1],ebx
  4142ad:	sub    al,0x11
  4142af:	mov    al,ds:0x513e20b6
  4142b4:	mov    WORD PTR ds:0xca952f9,cs
  4142ba:	dec    edi
  4142bb:	dec    esi
  4142bc:	mov    ds,WORD PTR [edx]
  4142be:	hlt    
  4142bf:	mov    ds:0xb86e1a50,al
  4142c4:	mov    esi,0x8d6120a5
  4142c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142ca:	and    edx,DWORD PTR [eax+eax*2]
  4142cd:	aaa    
  4142ce:	test   ecx,edx
  4142d0:	push   ecx
  4142d1:	cmc    
  4142d2:	push   ecx
  4142d3:	add    bh,bh
  4142d5:	lds    edi,FWORD PTR [ecx+0x6a]
  4142d8:	cdq    
  4142d9:	js     0x414328
  4142db:	cmp    bl,BYTE PTR ds:[ebp+esi*1+0x3c]
  4142e0:	fld    TBYTE PTR [edx+0x4e]
  4142e3:	imul   esi,ebx,0xc9460e3
  4142e9:	jb     0x4142a4
  4142eb:	hlt    
  4142ec:	and    DWORD PTR [edi-0x3d],esp
  4142ef:	ficomp DWORD PTR ds:0xfcf086a8
  4142f5:	lods   eax,DWORD PTR ds:[esi]
  4142f6:	inc    ebx
  4142f7:	add    ah,BYTE PTR [eax+eax*2-0xf]
  4142fb:	xor    al,0x9b
  4142fd:	xor    DWORD PTR [ebp+0x8becb15],ebp
  414303:	ret    0x4d44
  414306:	push   esp
  414307:	pop    ss
  414308:	pop    eax
  414309:	addr16 adc al,0x6a
  41430c:	add    ebx,DWORD PTR [ecx-0x3ab1a143]
  414312:	or     BYTE PTR [edx+0x2016c1e0],ch
  414318:	(bad)  
  414319:	les    eax,FWORD PTR [ebp-0x4ffa1e44]
  41431f:	xchg   BYTE PTR [edi+0x44],bh
  414322:	int3   
  414323:	mov    ecx,0xf5f20dfa
  414328:	(bad)  
  414329:	into   
  41432a:	jl     0x4142bb
  41432c:	stos   DWORD PTR es:[edi],eax
  41432d:	js     0x41431a
  41432f:	pushf  
  414330:	jmp    0x414388
  414332:	sub    cl,BYTE PTR [esi-0x53]
  414335:	xor    BYTE PTR [eax],dh
  414337:	dec    esp
  414338:	mov    esp,0xbc8e0333
  41433d:	push   esp
  41433e:	(bad)  [ecx+0x3aabd75e]
  414344:	jge    0x41431b
  414346:	jne    0x4143c3
  414348:	jmp    0xcd555fed
  41434d:	adc    edi,DWORD PTR [esi]
  41434f:	jmp    0xee99:0xdf978d13
  414356:	lock cmp ch,0xb6
  41435a:	in     al,dx
  41435b:	jbe    0x4143b8
  41435d:	ins    DWORD PTR es:[edi],dx
  41435e:	into   
  41435f:	std    
  414360:	pop    ebx
  414361:	xlat   BYTE PTR ds:[ebx]
  414362:	mov    ch,BYTE PTR [edi]
  414364:	dec    ecx
  414365:	stos   BYTE PTR es:[edi],al
  414366:	clc    
  414367:	scas   eax,DWORD PTR es:[edi]
  414368:	cmp    al,BYTE PTR [ecx+ebp*4]
  41436b:	aas    
  41436c:	jmp    0xa23add35
  414371:	xchg   esi,eax
  414372:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414373:	aas    
  414374:	cmp    DWORD PTR [ebx-0x62],edi
  414377:	sub    ch,al
  414379:	inc    ecx
  41437a:	unpcklps xmm4,XMMWORD PTR [edx+eax*4]
  41437e:	sahf   
  41437f:	ret    0x4c6a
  414382:	xchg   DWORD PTR [esi-0x5d],esi
  414385:	fstp   DWORD PTR [ecx]
  414387:	dec    esp
  414388:	push   ds
  414389:	pop    ebx
  41438a:	data16 xor al,0x1e
  41438d:	ret    0x4179
  414390:	repz xchg edi,edx
  414393:	lds    edi,FWORD PTR [eax+0x11]
  414396:	retf   
  414397:	or     eax,0x57ccb01e
  41439c:	sti    
  41439d:	test   eax,0x72a4aee9
  4143a2:	jg     0x41433d
  4143a4:	mov    ecx,0x4f00eb77
  4143a9:	lods   eax,DWORD PTR ds:[esi]
  4143aa:	stos   BYTE PTR es:[edi],al
  4143ab:	pop    eax
  4143ac:	test   BYTE PTR [eax-0xf9684b7],0x56
  4143b3:	push   0x5fe7dc6
  4143b8:	push   ebx
  4143b9:	push   cs
  4143ba:	mov    edx,0xb762ef4
  4143bf:	xor    esp,DWORD PTR [esi]
  4143c1:	sbb    edx,DWORD PTR [edx+0x3e]
  4143c4:	int3   
  4143c5:	call   FWORD PTR [ecx+0x21]
  4143c8:	repnz adc BYTE PTR [edi],dl
  4143cb:	or     al,0x44
  4143cd:	leave  
  4143ce:	test   DWORD PTR ds:0xc1b1eaff,esp
  4143d4:	inc    esi
  4143d5:	mov    esi,0xbc626425
  4143da:	sub    al,0x5
  4143dc:	int3   
  4143dd:	inc    edi
  4143de:	pop    ebp
  4143df:	pop    ss
  4143e0:	pop    ecx
  4143e1:	cdq    
  4143e2:	add    DWORD PTR ds:0x6edb0b53,ebx
  4143e8:	inc    esp
  4143e9:	nop
  4143ea:	inc    edi
  4143eb:	xor    al,0xde
  4143ed:	or     al,0x36
  4143ef:	and    BYTE PTR [edi-0x38263fe9],bh
  4143f5:	or     BYTE PTR [edx-0x1b],al
  4143f8:	std    
  4143f9:	cmp    BYTE PTR [edx+0x1d],0x8e
  4143fd:	sub    al,0x2c
  4143ff:	jns    0x4143be
  414401:	test   eax,0x963868c9
  414406:	mov    bl,0x48
  414408:	frstor [edx+0x5d]
  41440b:	aas    
  41440c:	mov    edi,0xf32b9159
  414411:	(bad)  
  414412:	retf   0x27be
  414415:	xchg   edx,eax
  414416:	push   ds
  414417:	in     eax,dx
  414418:	cmp    al,dl
  41441a:	std    
  41441b:	inc    ecx
  41441c:	or     ebx,esp
  41441e:	ret    
  41441f:	mov    bl,cl
  414421:	jmp    0xf881:0xaac9028b
  414428:	pop    ds
  414429:	and    BYTE PTR [edi],dh
  41442b:	pop    ebp
  41442c:	sbb    al,ch
  41442e:	cli    
  41442f:	ficomp WORD PTR [ecx]
  414431:	add    dl,al
  414433:	mov    esi,0xda84c022
  414438:	sbb    al,BYTE PTR [edi-0x55]
  41443b:	dec    eax
  41443c:	jecxz  0x41445f
  41443e:	push   ecx
  41443f:	addr16 imul eax,ebx,0x5758b63e
  414446:	test   eax,0xc9e8e5ff
  41444b:	cli    
  41444c:	rol    BYTE PTR [eax],0x4d
  41444f:	inc    ecx
  414450:	pusha  
  414451:	xchg   esi,eax
  414452:	cmp    cl,al
  414454:	outs   dx,BYTE PTR ds:[esi]
  414455:	fst    QWORD PTR [eax]
  414457:	fptan  
  414459:	jnp    0x4144d8
  41445b:	aaa    
  41445c:	and    DWORD PTR ds:0xd4a7f0d6,esp
  414462:	gs js  0x4144a5
  414465:	pop    ds
  414466:	retf   
  414467:	stos   BYTE PTR es:[edi],al
  414468:	xchg   esp,eax
  414469:	fucomp st(5)
  41446b:	sti    
  41446c:	sub    DWORD PTR [edx],ebx
  41446e:	idiv   DWORD PTR [edx]
  414470:	ss pop esi
  414472:	cmp    ebx,ebx
  414474:	cmp    BYTE PTR [edx+0x7d0e24f7],bl
  41447a:	inc    ebx
  41447b:	outs   dx,DWORD PTR ds:[esi]
  41447c:	jbe    0x4144e7
  41447e:	fstp   DWORD PTR [eax-0x68]
  414481:	int3   
  414482:	inc    edi
  414483:	mov    bh,0x8b
  414485:	hlt    
  414486:	or     edi,ebp
  414488:	xor    BYTE PTR [ecx-0x1c],bl
  41448b:	mov    dh,0x98
  41448d:	fwait
  41448e:	mov    dh,cl
  414490:	repnz xlat BYTE PTR ds:[ebx]
  414492:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414493:	in     al,0x62
  414495:	lea    esi,ds:[ecx-0x67]
  414499:	mov    bh,0x54
  41449b:	xchg   ebx,eax
  41449c:	add    ah,BYTE PTR [edi]
  41449e:	pop    ebx
  41449f:	cwd    
  4144a1:	lods   eax,DWORD PTR ds:[esi]
  4144a2:	add    DWORD PTR [esi+0x55],esp
  4144a5:	xchg   esi,eax
  4144a6:	ins    BYTE PTR es:[edi],dx
  4144a7:	xor    al,0xca
  4144a9:	popa   
  4144aa:	test   BYTE PTR [ebx+ecx*2-0x2c],ch
  4144ae:	fwait
  4144af:	sbb    eax,0xc5badb0d
  4144b4:	add    eax,0xe3e4e014
  4144b9:	imul   ecx,DWORD PTR [edx-0x3a],0xbea5fb54
  4144c0:	out    0xee,eax
  4144c2:	sbb    BYTE PTR [ebp+0x1c],bl
  4144c5:	inc    DWORD PTR [ebp+0x74]
  4144c8:	loope  0x4144c9
  4144ca:	inc    ebx
  4144cb:	push   ds
  4144cc:	pop    eax
  4144cd:	loopne 0x414480
  4144cf:	shl    BYTE PTR [edi+0xa],1
  4144d2:	loopne 0x41453d
  4144d4:	cmp    eax,0x1d4db1ea
  4144d9:	ret    
  4144da:	push   eax
  4144db:	jmp    0x6ce92ee9
  4144e0:	mov    al,ds:0x96885122
  4144e5:	ins    BYTE PTR es:[edi],dx
  4144e6:	lahf   
  4144e7:	cmp    DWORD PTR [esi],0xffffffb2
  4144ea:	cmp    al,al
  4144ec:	adc    eax,0x42eaee09
  4144f1:	sub    eax,0x2eb2d2db
  4144f6:	dec    ebx
  4144f7:	inc    edi
  4144f8:	in     eax,0x2b
  4144fa:	in     eax,0xd1
  4144fc:	pop    edx
  4144fd:	push   ss
  4144fe:	cmp    BYTE PTR [eax-0xa037f6b],bh
  414504:	pop    es
  414505:	mov    esp,0x10aa0b15
  41450a:	push   esi
  41450b:	enter  0x7508,0x9b
  41450f:	mov    ebp,DWORD PTR [ecx+0x8]
  414512:	in     al,dx
  414513:	mov    fs,WORD PTR [eax-0x51]
  414516:	fldcw  WORD PTR [ebx]
  414518:	xchg   esp,eax
  414519:	xor    bh,BYTE PTR [edx-0x2115e1d8]
  41451f:	sbb    BYTE PTR [eax],bh
  414521:	cdq    
  414522:	fisttp QWORD PTR [eax]
  414524:	pop    ds
  414525:	clc    
  414526:	lods   al,BYTE PTR ds:[esi]
  414527:	ins    BYTE PTR es:[edi],dx
  414528:	in     eax,0xbf
  41452a:	addr16 sub ebx,eax
  41452d:	(bad)  
  41452e:	xor    eax,0x3d136f9b
  414533:	(bad)  
  414534:	sahf   
  414535:	iret   
  414536:	push   es
  414537:	cmp    cl,BYTE PTR [ebp+0x15]
  41453a:	fsubrp st(1),st
  41453c:	pop    ss
  41453d:	das    
  41453e:	xchg   esi,ecx
  414540:	dec    esi
  414541:	sbb    ecx,edx
  414543:	mov    bh,0xec
  414545:	lds    esp,FWORD PTR [ebx-0x140658f7]
  41454b:	mov    bh,0x16
  41454d:	mov    eax,0x9b57a2a
  414552:	sub    ecx,DWORD PTR [edi+0x6]
  414555:	pop    esp
  414556:	xor    DWORD PTR [ebp+0x349cbb96],ebp
  41455c:	mov    DWORD PTR [ebp-0x26],ebp
  41455f:	mov    dh,0x81
  414561:	push   eax
  414562:	shl    DWORD PTR [eax+0x2b85ab67],0xfc
  414569:	shl    DWORD PTR [eax+0x4c1a6095],1
  41456f:	add    bh,BYTE PTR [eax]
  414571:	cmp    cl,cl
  414573:	into   
  414574:	xchg   esp,eax
  414575:	jbe    0x414552
  414577:	lea    edx,[ebx+0x64]
  41457a:	ss cdq 
  41457c:	dec    edi
  41457d:	into   
  41457e:	gs es dec esp
  414581:	inc    esi
  414582:	add    edx,esi
  414584:	aas    
  414585:	sar    DWORD PTR [edi+0x68],cl
  414588:	ja     0x4145c5
  41458a:	xor    DWORD PTR [edi-0x3b],esi
  41458d:	pop    esp
  41458e:	bound  ecx,QWORD PTR [ecx]
  414590:	push   esi
  414591:	push   esp
  414592:	clc    
  414593:	jp     0x4145bb
  414595:	mov    ah,0xa7
  414597:	and    DWORD PTR [edx],edx
  414599:	loopne 0x41456e
  41459b:	cwde   
  41459c:	sti    
  41459d:	mov    bh,0x20
  41459f:	sub    bh,BYTE PTR [ebp+ecx*8+0x30]
  4145a3:	pop    eax
  4145a4:	leave  
  4145a5:	test   BYTE PTR ds:0xdf57fceb,bh
  4145ab:	loopne 0x414592
  4145ad:	and    BYTE PTR ds:0x808e5b96,bh
  4145b3:	out    0xa4,eax
  4145b5:	inc    ebp
  4145b6:	iret   
  4145b7:	xchg   BYTE PTR [edx],dh
  4145b9:	outs   dx,DWORD PTR ds:[esi]
  4145ba:	fnstsw WORD PTR [edx]
  4145bc:	push   cs
  4145bd:	jge    0x414624
  4145bf:	lahf   
  4145c0:	lea    esp,[ebx+0x10c4ec72]
  4145c6:	fcmovnbe st,st(1)
  4145c8:	and    ebx,ebx
  4145ca:	xchg   ebp,eax
  4145cb:	adc    DWORD PTR [ecx],edi
  4145cd:	pusha  
  4145ce:	and    BYTE PTR [edi-0x4c],dh
  4145d1:	pop    edx
  4145d2:	lods   al,BYTE PTR ds:[esi]
  4145d3:	jle    0x414641
  4145d5:	xchg   DWORD PTR [ebx-0x76],ebx
  4145d8:	je     0x414566
  4145da:	imul   ecx,DWORD PTR [eax-0x27],0x5610a7cf
  4145e1:	das    
  4145e2:	cmp    al,0xad
  4145e4:	push   0xffffffa9
  4145e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145e7:	popa   
  4145e8:	push   esi
  4145e9:	jle    0x414636
  4145eb:	add    al,0x41
  4145ed:	mov    eax,0x923e99d
  4145f2:	aam    0xe
  4145f4:	jmp    0x41460a
  4145f6:	ret    0x212b
  4145f9:	push   ebp
  4145fa:	sub    edx,DWORD PTR [edx-0x2a5bfd0d]
  414600:	leave  
  414601:	fmul   QWORD PTR [edi]
  414603:	jbe    0x414674
  414605:	test   eax,0xf04c66fd
  41460a:	mov    ebp,0xc96589bd
  41460f:	(bad)  
  414610:	(bad)  
  414611:	pop    ebp
  414612:	aaa    
  414613:	lock test al,0x59
  414616:	pop    ecx
  414617:	scas   al,BYTE PTR es:[edi]
  414618:	pushf  
  414619:	and    esp,DWORD PTR ds:0xf53eb99f
  41461f:	imul   edi,ebx,0xb08a542a
  414625:	(bad)  
  414626:	shl    bh,cl
  414628:	and    BYTE PTR [esi-0x5a9937f8],cl
  41462e:	loop   0x414640
  414630:	dec    ecx
  414631:	and    ah,BYTE PTR [edi-0x56]
  414634:	sbb    esp,DWORD PTR ds:[ecx]
  414637:	mov    BYTE PTR [ebp-0x5b5bebdf],0x20
  41463e:	mov    DWORD PTR [edx+0x41],0xce6d0c44
  414645:	dec    ebx
  414646:	push   ds
  414647:	pand   mm6,QWORD PTR [esi+0x13691db5]
  41464e:	(bad)  
  41464f:	loopne 0x41462c
  414651:	add    DWORD PTR [esi],0x6ec688f5
  414657:	jns    0x41462c
  414659:	jb     0x4145de
  41465b:	sbb    esp,DWORD PTR [esi-0xb]
  41465e:	jne    0x41467b
  414660:	jno    0x4146c9
  414662:	lods   al,BYTE PTR ds:[esi]
  414663:	xchg   edx,eax
  414664:	push   edi
  414665:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414666:	sbb    DWORD PTR [edi-0x65ab62db],edi
  41466c:	mov    dh,BYTE PTR [ebp+0x3e]
  41466f:	jmp    0x41467f
  414671:	out    0xa9,al
  414673:	lock call 0xb883:0x45c27648
  41467b:	cwde   
  41467c:	repnz pop esi
  41467e:	push   eax
  41467f:	mov    ebp,0x7de7c2cc
  414684:	mov    al,0xd6
  414686:	outs   dx,DWORD PTR ds:[esi]
  414687:	cmp    dh,ah
  414689:	bound  ebp,QWORD PTR [esi+0x38]
  41468c:	push   edx
  41468d:	jmp    0xb0b6:0xbd7e5119
  414694:	push   ds
  414695:	retf   
  414696:	out    dx,eax
  414697:	call   0x9ff6c244
  41469c:	in     eax,0x13
  41469e:	sub    ch,dl
  4146a0:	mov    esp,0xe5e1c97c
  4146a5:	xor    eax,esp
  4146a7:	or     cl,al
  4146a9:	adc    dh,bh
  4146ab:	in     al,dx
  4146ac:	and    al,BYTE PTR [edx+0x5d]
  4146af:	dec    edi
  4146b0:	sub    DWORD PTR ds:0x3d070c05,esi
  4146b6:	adc    eax,0x17beb8a7
  4146bb:	pop    edi
  4146bc:	xor    DWORD PTR [edi+0x41261ab0],esi
  4146c2:	and    DWORD PTR [bp-0x30],ebx
  4146c6:	fs push eax
  4146c8:	mov    ah,0x54
  4146ca:	loopne 0x4146a0
  4146cc:	adc    DWORD PTR [edi],ebx
  4146ce:	cmp    al,al
  4146d0:	and    DWORD PTR [eax-0x1bb0e6a6],ebx
  4146d6:	pop    ss
  4146d7:	mov    esi,0x7c7eccd1
  4146dc:	xlat   BYTE PTR ds:[ebx]
  4146dd:	popa   
  4146de:	adc    edi,0x1a1790e5
  4146e4:	popa   
  4146e5:	push   ss
  4146e6:	xchg   esp,eax
  4146e7:	bound  ebx,QWORD PTR [edi+0x31e68334]
  4146ed:	mov    dh,0x68
  4146ef:	mov    esi,es
  4146f1:	xchg   esp,eax
  4146f2:	ja     0x414724
  4146f4:	add    al,BYTE PTR [esi]
  4146f6:	call   0x6e7a:0x75ce6069
  4146fd:	test   eax,0x44c7226a
  414702:	mov    bh,0x7d
  414704:	ins    BYTE PTR es:[edi],dx
  414705:	pop    ds
  414706:	xlat   BYTE PTR ds:[ebx]
  414707:	les    eax,FWORD PTR [ecx]
  414709:	scas   al,BYTE PTR es:[edi]
  41470a:	out    0x28,al
  41470c:	sbb    DWORD PTR [ebx+0x2e5ce995],ecx
  414712:	jns    0x414704
  414714:	jmp    0x4146bc
  414716:	(bad)  
  414717:	enter  0x26a0,0x15
  41471b:	and    bh,BYTE PTR [ebx]
  41471d:	inc    edi
  41471e:	inc    eax
  41471f:	call   0xf8e:0xfc82d726
  414726:	in     eax,dx
  414727:	(bad)  
  414728:	jle    0x414747
  41472a:	jb     0x414727
  41472c:	in     eax,dx
  41472d:	not    DWORD PTR [ebx+0x74a5e9ab]
  414733:	dec    edx
  414734:	std    
  414735:	adc    BYTE PTR [esi+0x4d],dh
  414738:	imul   ebp,esi,0x40
  41473b:	mov    ebp,DWORD PTR [ebx+0x54818a4f]
  414741:	or     esi,ebx
  414743:	call   0xf977:0x1cfc879f
  41474a:	in     al,0x45
  41474c:	(bad)
  41474f:	test   DWORD PTR ds:0xcc2b1bc0,ebx
  414755:	test   al,0x31
  414757:	mov    ds:0x3b4a396b,al
  41475c:	push   eax
  41475d:	jo     0x4146f8
  41475f:	pop    ecx
  414760:	pop    esp
  414761:	and    BYTE PTR [ebp-0x1def1b9a],dh
  414767:	lds    edx,FWORD PTR [eax]
  414769:	fsub   DWORD PTR [edi+0x4183fca2]
  41476f:	add    ebx,DWORD PTR [eax]
  414771:	mov    bh,ah
  414773:	gs (bad) 
  414775:	push   ebp
  414776:	daa    
  414777:	adc    bh,dl
  414779:	or     DWORD PTR [eax+0x34c8e237],edx
  41477f:	jl     0x414722
  414781:	sbb    al,0x2a
  414783:	jns    0x4147d8
  414785:	addr16 retf 
  414787:	aaa    
  414788:	fisub  DWORD PTR [edi]
  41478a:	add    al,0x7b
  41478c:	adc    ebp,DWORD PTR [ebx-0x2dac4784]
  414792:	arpl   WORD PTR [edi],ax
  414794:	cwde   
  414795:	sub    esi,DWORD PTR [ecx-0x7fcf695b]
  41479b:	adc    DWORD PTR [edx+ecx*8],0xffffffc3
  41479f:	cdq    
  4147a0:	ret    0xd75e
  4147a3:	shl    BYTE PTR ds:0x3860b94b,cl
  4147a9:	lds    edi,FWORD PTR [edi]
  4147ab:	mov    ecx,DWORD PTR [edx]
  4147ad:	fs push cs
  4147af:	sbb    al,BYTE PTR [edi+0x6a]
  4147b2:	add    eax,0xb1936034
  4147b7:	xchg   ecx,eax
  4147b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147b9:	mov    eax,ds:0xfad5b9e5
  4147be:	push   0x8bf51c90
  4147c3:	sub    al,0x58
  4147c5:	(bad)  
  4147c6:	mov    edx,0x6420bcd8
  4147cb:	pop    ecx
  4147cc:	test   BYTE PTR [ecx-0x6291cf04],cl
  4147d2:	imul   edx,DWORD PTR [edi-0x509b4781],0x855319a4
  4147dc:	jb     0x41477a
  4147de:	daa    
  4147df:	mov    ds:0xfd462a09,eax
  4147e4:	sbb    eax,0x9ab67804
  4147e9:	mov    ah,0x7b
  4147eb:	cmp    al,0x31
  4147ed:	mov    bl,0x71
  4147ef:	jle    0x414862
  4147f1:	clc    
  4147f2:	adc    eax,0x7a79ede3
  4147f7:	mov    ah,0xc8
  4147f9:	and    eax,0x802d2c48
  4147fe:	aam    0x9b
  414800:	stos   BYTE PTR es:[edi],al
  414801:	in     al,0x4a
  414803:	mov    BYTE PTR [ecx-0x66c03ee9],0xfb
  41480a:	pusha  
  41480b:	cdq    
  41480c:	xchg   BYTE PTR [eax],bl
  41480e:	pop    esi
  41480f:	sub    eax,0xecf39442
  414814:	stos   BYTE PTR es:[di],al
  414816:	mov    ebx,0xc1b08eeb
  41481b:	mov    esi,0xad899a61
  414820:	retf   
  414821:	add    BYTE PTR [esi+0x79e3257e],cl
  414827:	iret   
  414828:	seta   BYTE PTR [ebx+0x65bb6307]
  41482f:	dec    ebp
  414830:	xchg   ecx,eax
  414831:	scas   al,BYTE PTR es:[edi]
  414832:	rol    BYTE PTR [esi+ebp*2-0x37],1
  414836:	nop
  414837:	jp     0x41480b
  414839:	dec    edi
  41483a:	mov    edx,0x15ae2cbb
  41483f:	jb     0x414895
  414841:	cmp    eax,0x6389dd7e
  414846:	ret    
  414847:	sub    ebx,DWORD PTR [ecx+0x4cbadeeb]
  41484d:	gs aaa 
  41484f:	aam    0xe1
  414851:	mov    ebp,0xd581dbca
  414856:	and    bl,BYTE PTR [ebx-0x55]
  414859:	loope  0x414804
  41485b:	sbb    dh,BYTE PTR [edi+0xf]
  41485e:	sub    eax,DWORD PTR [esi+0x48067b0f]
  414864:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414865:	dec    ebx
  414866:	adc    al,0x90
  414868:	xor    BYTE PTR [edi-0x1c],ah
  41486b:	cmp    DWORD PTR [ecx+0x5d],0x1bbc2326
  414872:	es jae 0x41481d
  414875:	or     ch,BYTE PTR [esi+0x4c]
  414878:	dec    eax
  414879:	add    al,0xeb
  41487b:	adc    BYTE PTR [edx],ah
  41487d:	in     al,dx
  41487e:	shl    DWORD PTR [esi],1
  414880:	(bad)  
  414881:	jge    0x41481a
  414883:	hlt    
  414884:	(bad)  [edx]
  414886:	mov    dh,0x90
  414888:	outs   dx,BYTE PTR ds:[esi]
  414889:	imul   ecx,DWORD PTR [ebp-0x5dfe755c],0x31
  414890:	call   0xc030820d
  414895:	rcr    DWORD PTR [ebx-0x41193c9f],1
  41489b:	mov    al,0xf0
  41489d:	push   eax
  41489e:	xor    al,0x3e
  4148a0:	dec    edi
  4148a1:	enter  0xea82,0xa3
  4148a5:	mov    ds:0xa6efc941,al
  4148aa:	xor    bh,dh
  4148ac:	sbb    al,0x78
  4148ae:	loope  0x41486d
  4148b0:	(bad)  
  4148b1:	cmp    al,0xee
  4148b3:	mov    edx,0xde1b647c
  4148b8:	cs xor eax,0xeb7d6c73
  4148be:	out    0xed,al
  4148c0:	(bad)  
  4148c1:	ror    DWORD PTR [edx+0x44c6cf63],0x5e
  4148c8:	xor    bh,cl
  4148ca:	jmp    0x2dddab74
  4148cf:	aam    0xb8
  4148d1:	or     ecx,DWORD PTR [ecx-0x429d5099]
  4148d7:	ror    DWORD PTR [esi-0x3f],1
  4148da:	sbb    BYTE PTR [edi-0x17f3ebc8],0xca
  4148e1:	popa   
  4148e2:	dec    ebp
  4148e3:	(bad)  
  4148e4:	xacquire xchg DWORD PTR [eax+0x38],esi
  4148e8:	sub    DWORD PTR [edi],esi
  4148ea:	mov    al,0x7
  4148ec:	fwait
  4148ed:	pop    esp
  4148ee:	xor    al,0x6d
  4148f0:	sbb    DWORD PTR [esi],eax
  4148f2:	mov    edi,0xa878a2bd
  4148f7:	mov    DWORD PTR [edi-0x60],ecx
  4148fa:	sub    eax,0x5e4f7789
  4148ff:	test   ch,al
  414901:	sti    
  414902:	in     al,0x68
  414904:	ins    DWORD PTR es:[edi],dx
  414905:	in     eax,dx
  414906:	ror    DWORD PTR [edx-0x2a],0x86
  41490a:	popa   
  41490b:	loopne 0x4148ad
  41490d:	ds mov ebx,0xbe01ac1e
  414913:	popf   
  414914:	out    dx,al
  414915:	dec    ebp
  414916:	es icebp 
  414918:	in     eax,dx
  414919:	add    DWORD PTR [ebx],0xffffff96
  41491c:	dec    ecx
  41491d:	lods   al,BYTE PTR ds:[esi]
  41491e:	test   al,0x2a
  414920:	push   edi
  414921:	call   0xd535a158
  414926:	xchg   ebp,eax
  414927:	aad    0x8e
  414929:	test   eax,0xe1c9c61f
  41492e:	test   BYTE PTR [esi+0x2a62e8f7],0xfe
  414935:	and    cl,BYTE PTR [ecx-0x19]
  414938:	mov    ah,0x8
  41493a:	pop    ebx
  41493b:	inc    esp
  41493c:	shl    DWORD PTR [edx],cl
  41493e:	outs   dx,BYTE PTR ds:[esi]
  41493f:	sub    eax,0xf1af18db
  414944:	dec    esp
  414945:	fild   WORD PTR [ecx]
  414947:	jbe    0x414945
  414949:	fstp   QWORD PTR [esi-0x2b]
  41494c:	pusha  
  41494d:	retf   
  41494e:	jg     0x414993
  414950:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414951:	cmp    edx,DWORD PTR fs:[edx+0x69bf201a]
  414958:	pop    es
  414959:	xchg   DWORD PTR [ebp-0x3c],ebp
  41495c:	pop    ecx
  41495d:	xlat   BYTE PTR ds:[ebx]
  41495e:	xor    DWORD PTR [eax+0x7cc541fe],ebp
  414964:	dec    ebx
  414965:	int3   
  414966:	pop    ebp
  414967:	dec    esi
  414968:	cwde   
  414969:	retf   0xe029
  41496c:	call   0x6f1a:0x6ea29f05
  414973:	mov    BYTE PTR [eax+0x49],dh
  414976:	cld    
  414977:	sbb    edx,DWORD PTR ds:0x15290f9f
  41497d:	in     eax,0xee
  41497f:	cmc    
  414980:	dec    esp
  414981:	fnsave [ebp+0x7eb2fd46]
  414987:	xor    dh,al
  414989:	push   esp
  41498a:	jle    0x414962
  41498c:	sbb    al,0x6
  41498e:	adc    ebx,DWORD PTR [eax]
  414990:	add    al,BYTE PTR [ebx]
  414992:	cmp    DWORD PTR [ecx+0x73cb8d43],esi
  414998:	add    eax,0xffffffc2
  41499b:	pusha  
  41499c:	xchg   ebx,eax
  41499d:	and    al,0x5
  41499f:	push   ebp
  4149a0:	jl     0x414982
  4149a2:	adc    ebp,ecx
  4149a4:	arpl   WORD PTR [eax+0x3c],si
  4149a7:	and    BYTE PTR [ecx-0x4d873740],ah
  4149ad:	or     dl,BYTE PTR [ebx-0x23]
  4149b0:	mov    cl,0x68
  4149b2:	mov    edx,0xa6d0c71d
  4149b7:	sahf   
  4149b8:	xchg   esp,eax
  4149b9:	pop    edx
  4149ba:	fsub   DWORD PTR ds:0x7552aacc
  4149c0:	mov    cl,0x19
  4149c2:	neg    DWORD PTR [ebp+0x6d97a21]
  4149c8:	sub    al,0xaf
  4149ca:	jbe    0x414994
  4149cc:	add    dl,bh
  4149ce:	arpl   WORD PTR [edx],di
  4149d0:	or     eax,DWORD PTR [edx+0x70]
  4149d3:	sar    BYTE PTR ds:0xf896006d,1
  4149d9:	dec    esi
  4149da:	lods   al,BYTE PTR ds:[esi]
  4149db:	sar    DWORD PTR [eax+0x63],cl
  4149de:	(bad)  [ebx+0x7f4eb534]
  4149e4:	mov    esi,0x1426f2c
  4149e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149ea:	loope  0x4149df
  4149ec:	ss dec eax
  4149ee:	fnstcw WORD PTR [edi-0x36]
  4149f1:	bound  edx,QWORD PTR [eax]
  4149f3:	je     0x414a12
  4149f5:	mov    ah,0x6e
  4149f7:	fsubrp st(4),st
  4149f9:	addr16 in eax,0x3a
  4149fc:	dec    esi
  4149fd:	pop    edx
  4149fe:	lock lods eax,DWORD PTR ds:[esi]
  414a00:	or     dh,0xfb
  414a03:	sub    eax,ebp
  414a05:	add    DWORD PTR [eax-0x38],esi
  414a08:	imul   edi,DWORD PTR [edx-0x70],0x4168494e
  414a0f:	(bad)  
  414a11:	pop    esp
  414a12:	xchg   ecx,eax
  414a13:	in     al,dx
  414a14:	(bad)  
  414a15:	xor    BYTE PTR [esi+ebx*1-0x78],cl
  414a19:	push   eax
  414a1a:	pushf  
  414a1b:	outs   dx,DWORD PTR ds:[esi]
  414a1c:	sub    dl,BYTE PTR [ebx+ebp*8-0x1]
  414a20:	adc    al,0xe
  414a22:	pop    edi
  414a23:	test   DWORD PTR [eax+ecx*2-0x61],ebx
  414a27:	xchg   ebx,eax
  414a28:	ja     0x4149ce
  414a2a:	cmp    BYTE PTR [edx+0x72],dh
  414a2d:	(bad)  
  414a2e:	mov    dh,0xf1
  414a30:	imul   esi,DWORD PTR [edi-0x41f991cc],0x5b
  414a37:	jno    0x414aa5
  414a39:	sub    BYTE PTR [edi-0x3670c474],0xc5
  414a40:	or     al,0x6a
  414a42:	inc    ebp
  414a43:	out    dx,eax
  414a44:	xchg   esp,eax
  414a45:	nop
  414a46:	xchg   edx,eax
  414a47:	je     0x414aaf
  414a49:	ins    BYTE PTR es:[edi],dx
  414a4a:	xlat   BYTE PTR ds:[ebx]
  414a4b:	call   DWORD PTR [edx+0x75]
  414a4e:	cmp    DWORD PTR [edx],ecx
  414a50:	pop    ss
  414a51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a52:	pop    eax
  414a53:	fwait
  414a54:	dec    ebp
  414a55:	dec    ebp
  414a56:	dec    BYTE PTR [edi]
  414a58:	or     BYTE PTR ss:[ecx-0x27],dl
  414a5c:	mov    cl,BYTE PTR [edx+eax*1-0x34249342]
  414a63:	sbb    eax,0xba33cd81
  414a68:	arpl   WORD PTR [ecx],di
  414a6a:	mov    dl,0x57
  414a6c:	in     eax,dx
  414a6d:	lea    edx,[edx-0x3a]
  414a70:	dec    ebx
  414a71:	imul   edi,DWORD PTR [eax-0x53e6e57f],0x9c12e4be
  414a7b:	add    DWORD PTR gs:[eax],esp
  414a7e:	pushf  
  414a7f:	idiv   BYTE PTR es:[ecx-0x7d889916]
  414a86:	es repnz fidiv WORD PTR gs:[edx-0x12]
  414a8c:	sbb    BYTE PTR [eax+0x5f499064],ch
  414a92:	xor    DWORD PTR [ebx*2-0x1148584f],esi
  414a99:	add    edi,DWORD PTR ds:0xad81648e
  414a9f:	add    BYTE PTR [ecx],ah
  414aa1:	aam    0x41
  414aa3:	shr    DWORD PTR [edx+0x6c5f30b5],cl
  414aa9:	xor    DWORD PTR [ecx+0x48],0xffffff96
  414aad:	adc    al,0xf9
  414aaf:	jp     0x414a50
  414ab1:	adc    bh,BYTE PTR [edx+0x5fd4d2f4]
  414ab7:	adc    BYTE PTR [edx],dl
  414ab9:	jl     0x414ac1
  414abb:	adc    BYTE PTR [esi],ah
  414abd:	ftst   
  414abf:	mov    BYTE PTR [ebx+0x261f613e],bl
  414ac5:	inc    ecx
  414ac6:	arpl   WORD PTR [edi],di
  414ac8:	dec    ebx
  414ac9:	mov    al,ds:0x4db5b336
  414ace:	push   ds
  414acf:	(bad)  
  414ad0:	xchg   edi,eax
  414ad1:	inc    edi
  414ad2:	fcomip st,st(2)
  414ad4:	ret    
  414ad5:	cmc    
  414ad6:	sub    DWORD PTR [eax],ebx
  414ad8:	aaa    
  414ad9:	push   esp
  414ada:	pusha  
  414adb:	xchg   ecx,eax
  414adc:	xor    bl,bh
  414ade:	jmp    0x414b51
  414ae0:	push   0xffffff9f
  414ae2:	dec    ebx
  414ae3:	or     BYTE PTR ds:0x6d292492,dh
  414ae9:	enter  0xe0d1,0x8
  414aed:	sub    al,0x75
  414aef:	daa    
  414af0:	aam    0x1
  414af2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414af3:	mov    dh,BYTE PTR [ebx-0x5b]
  414af6:	fimul  WORD PTR [eax-0x2b]
  414af9:	loopne 0x414b70
  414afb:	iret   
  414afc:	push   esp
  414afd:	mov    gs,edx
  414aff:	das    
  414b00:	inc    ebx
  414b01:	cwde   
  414b02:	pop    ds
  414b03:	stc    
  414b04:	out    dx,al
  414b05:	cdq    
  414b06:	inc    eax
  414b07:	mov    ebx,0xd17cd37a
  414b0c:	(bad)  
  414b0d:	stos   BYTE PTR es:[edi],al
  414b0e:	fisubr WORD PTR [edx-0x31]
  414b11:	add    DWORD PTR cs:[ebx-0xf7dde4a],esp
  414b18:	stos   BYTE PTR es:[edi],al
  414b19:	das    
  414b1a:	fimul  WORD PTR [eax+0x1a]
  414b1d:	rcl    DWORD PTR [ebx-0x39d01bfc],1
  414b23:	mov    eax,0xf32ca22a
  414b28:	mov    bh,0x5f
  414b2a:	or     ebx,DWORD PTR [edi+0x32ef15cc]
  414b30:	dec    ecx
  414b31:	mov    ecx,DWORD PTR [eax+0x40]
  414b34:	sti    
  414b35:	inc    esp
  414b36:	shl    DWORD PTR [ecx],cl
  414b38:	mov    BYTE PTR [edx],dl
  414b3a:	and    eax,ecx
  414b3c:	sti    
  414b3d:	stos   DWORD PTR es:[edi],eax
  414b3e:	(bad)  
  414b3f:	enter  0xdabb,0x29
  414b43:	push   esi
  414b44:	lods   al,BYTE PTR ds:[esi]
  414b45:	adc    eax,0x6ed25e1f
  414b4a:	sub    ah,BYTE PTR [ecx+ecx*4+0x19]
  414b4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b4f:	ja     0x414b85
  414b51:	xchg   esp,eax
  414b52:	test   BYTE PTR [ecx],dh
  414b54:	cmp    edi,edx
  414b56:	fild   WORD PTR [ecx]
  414b58:	les    edx,FWORD PTR [ecx-0xd4b54dd]
  414b5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b5f:	cwde   
  414b60:	ret    
  414b61:	jns    0x414b69
  414b63:	test   al,0x3f
  414b65:	out    dx,al
  414b66:	mov    esp,0x5da47e02
  414b6b:	clc    
  414b6c:	(bad)  
  414b6e:	call   0x29f82097
  414b73:	mov    bl,0x1
  414b75:	not    ecx
  414b77:	fstp   QWORD PTR [esi+0x60fe6a0f]
  414b7d:	mov    dl,0x29
  414b7f:	mov    eax,ds:0x760668e3
  414b84:	cmp    edi,DWORD PTR [edx]
  414b86:	ret    
  414b87:	shr    DWORD PTR [ecx+0x6e35398],1
  414b8d:	jmp    0xa6fd:0xcd08f5c9
  414b94:	loopne 0x414b8f
  414b96:	outs   dx,DWORD PTR ds:[esi]
  414b97:	mov    ah,0x85
  414b99:	sub    al,al
  414b9b:	add    eax,0x717bcc56
  414ba0:	mov    edx,0x29a7dfbd
  414ba5:	cs ins BYTE PTR es:[edi],dx
  414ba7:	jnp    0x414b2b
  414ba9:	es ja  0x414b66
  414bac:	je     0x414bb2
  414bae:	lods   eax,DWORD PTR ds:[esi]
  414baf:	cmp    al,0xbd
  414bb1:	je     0x414b75
  414bb3:	ins    DWORD PTR es:[edi],dx
  414bb4:	not    dh
  414bb6:	lock dec edx
  414bb8:	cs call 0xbf344b69
  414bbe:	idiv   BYTE PTR [ebx]
  414bc0:	hlt    
  414bc1:	gs xor eax,0xab6609fc
  414bc7:	mov    eax,ds:0xe55dc7c0
  414bcc:	scas   al,BYTE PTR es:[edi]
  414bcd:	and    al,BYTE PTR [edi+0x52]
  414bd0:	cmp    eax,0xf615c769
  414bd5:	mov    eax,0x38382370
  414bda:	dec    ecx
  414bdb:	push   ebx
  414bdc:	mov    ebx,0x17bc6686
  414be1:	pop    ecx
  414be2:	sbb    DWORD PTR fs:[edx+0x670131ab],ebx
  414be9:	inc    ecx
  414bea:	mov    ch,BYTE PTR [edx+0x35cfca19]
  414bf0:	pop    esp
  414bf1:	rcr    edx,cl
  414bf3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414bf4:	inc    eax
  414bf5:	ja     0x414c27
  414bf7:	push   esp
  414bf8:	cmp    eax,0x8898aa9a
  414bfd:	push   ebx
  414bfe:	test   cl,ah
  414c00:	mov    bh,0x45
  414c02:	sub    eax,0x556d975c
  414c07:	xchg   edx,eax
  414c08:	ins    BYTE PTR es:[edi],dx
  414c09:	out    0x1b,al
  414c0b:	addr16 pop esi
  414c0d:	inc    esp
  414c0e:	xchg   esi,eax
  414c0f:	mov    esi,0x5e69b8f3
  414c14:	push   edi
  414c15:	js     0x414c64
  414c17:	adc    BYTE PTR [esi-0x16],dl
  414c1a:	adc    BYTE PTR [eax],cl
  414c1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c1d:	das    
  414c1e:	mov    edi,DWORD PTR [ebp+0x147ebebc]
  414c24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c25:	lahf   
  414c26:	adc    al,0xb8
  414c28:	mov    WORD PTR [ecx+ebx*4-0x1948fb8c],fs
  414c2f:	jl     0x414c08
  414c31:	ret    0x7324
  414c34:	add    DWORD PTR [edx],edx
  414c36:	shl    esi,0xe0
  414c39:	lahf   
  414c3a:	jge    0x414cab
  414c3c:	(bad)  
  414c3d:	out    0x18,al
  414c3f:	mov    dh,0x17
  414c41:	jle    0x414c45
  414c43:	fnsave [esi]
  414c45:	jp     0x414c53
  414c47:	push   ss
  414c48:	mov    BYTE PTR [eax],dh
  414c4a:	out    dx,eax
  414c4b:	loopne 0x414c02
  414c4d:	fcom   QWORD PTR [edx-0x19f563a7]
  414c53:	push   0x25
  414c55:	aaa    
  414c56:	jle    0x414c8e
  414c58:	push   ebx
  414c59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c5a:	test   BYTE PTR [edx+0x17],al
  414c5d:	sub    eax,0xd4ccddd6
  414c62:	adc    eax,0xfa797645
  414c67:	fadd   DWORD PTR [esi+eiz*8+0x1c]
  414c6b:	pextrw esp,mm3,0x71
  414c6f:	js     0x414c31
  414c71:	push   edx
  414c72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c73:	pop    eax
  414c74:	loope  0x414c6e
  414c76:	daa    
  414c77:	pop    edx
  414c78:	sbb    ebp,DWORD PTR [ebx-0x357bb79d]
  414c7e:	retf   0xab99
  414c81:	pslld  mm7,QWORD PTR [esi-0x6f]
  414c85:	imul   ebp,DWORD PTR [esi],0xd4dec0d2
  414c8b:	xchg   edx,eax
  414c8c:	or     DWORD PTR [ecx+edx*2+0x336c67b0],0xfffffff2
  414c94:	mov    ds:0xd835d0d9,al
  414c99:	pusha  
  414c9a:	lods   al,BYTE PTR es:[esi]
  414c9c:	outs   dx,DWORD PTR ds:[esi]
  414c9d:	retf   
  414c9e:	idiv   DWORD PTR [edx]
  414ca0:	mov    ecx,0x78329eea
  414ca5:	jecxz  0x414cc4
  414ca7:	jb     0x414c84
  414ca9:	inc    ebx
  414caa:	cs fcmovu st,st(0)
  414cad:	das    
  414cae:	push   edi
  414caf:	in     al,dx
  414cb0:	mov    gs,edi
  414cb2:	sbb    DWORD PTR [ecx+0x5e69363b],edx
  414cb8:	lods   al,BYTE PTR ds:[esi]
  414cb9:	mov    WORD PTR [eax-0x17275589],es
  414cbf:	pop    ss
  414cc0:	jae    0x414c4d
  414cc2:	sbb    DWORD PTR [eax+0x30],0x3b86d5e1
  414cc9:	or     DWORD PTR [edx-0x6d42da30],eax
  414ccf:	sahf   
  414cd0:	retf   0x9f48
  414cd3:	mov    edi,0xdcaddd74
  414cd8:	test   ah,0x13
  414cdb:	dec    edi
  414cdc:	jae    0x414c88
  414cde:	pushf  
  414cdf:	sub    cl,BYTE PTR [edx+0x6d]
  414ce2:	cmc    
  414ce3:	inc    edx
  414ce4:	inc    ebx
  414ce5:	mov    ch,BYTE PTR [ecx]
  414ce7:	and    cl,cl
  414ce9:	mov    eax,0x941d7f43
  414cee:	pop    esp
  414cef:	mov    ds:0xe436c2e5,eax
  414cf4:	jl     0x414ced
  414cf6:	scas   eax,DWORD PTR es:[edi]
  414cf7:	imul   ebp,DWORD PTR [eax],0xfffffff9
  414cfa:	in     eax,dx
  414cfb:	mov    bh,BYTE PTR [edi-0x4b2e61ca]
  414d01:	cli    
  414d02:	rcl    BYTE PTR [edi-0x73],1
  414d05:	outs   dx,DWORD PTR ds:[esi]
  414d06:	adc    dh,BYTE PTR [ecx-0x67]
  414d09:	mov    esp,0xea97cb5f
  414d0e:	cmp    dl,bl
  414d10:	push   esi
  414d11:	rol    ch,cl
  414d13:	jb     0x414d7e
  414d15:	and    eax,0xe371877d
  414d1a:	push   ebx
  414d1b:	push   edx
  414d1c:	mov    dl,0x48
  414d1e:	jb     0x414d86
  414d20:	adc    eax,0x57cb773c
  414d25:	out    dx,al
  414d26:	mov    WORD PTR [eax],fs
  414d28:	neg    cl
  414d2a:	mov    ah,0x78
  414d2c:	xor    DWORD PTR [ebx-0x5544f335],0x11
  414d33:	sub    eax,0x6aa4c345
  414d38:	jne    0x414d44
  414d3a:	adc    ecx,ecx
  414d3c:	test   DWORD PTR [edi+eiz*1+0x12],0x346dd207
  414d44:	lahf   
  414d45:	xchg   esp,eax
  414d46:	mov    WORD PTR [esi+0x5f],?
  414d49:	sbb    ch,cl
  414d4b:	dec    edi
  414d4c:	xchg   esi,eax
  414d4d:	add    eax,0x7e66fdd1
  414d52:	lds    ecx,FWORD PTR [edi-0x5a]
  414d55:	inc    edi
  414d56:	add    eax,0x40b17fca
  414d5b:	lea    edx,[ecx]
  414d5d:	test   eax,0x6d479595
  414d62:	popf   
  414d63:	cwde   
  414d64:	xor    ebp,edi
  414d66:	sub    eax,0x94a51e5f
  414d6b:	cmovp  ebp,DWORD PTR [edx]
  414d6e:	pop    esp
  414d6f:	cmp    BYTE PTR [ebp+eiz*1-0x34e58b12],0xad
  414d77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d79:	xchg   esi,eax
  414d7a:	dec    edx
  414d7b:	out    0x43,al
  414d7d:	mov    ecx,edi
  414d7f:	imul   ebx,DWORD PTR [ecx],0x876b0aa7
  414d85:	xor    al,0x22
  414d87:	(bad)  
  414d88:	retf   
  414d89:	sub    BYTE PTR [ebp+0x1d4dbce6],bl
  414d8f:	push   ecx
  414d90:	cmp    BYTE PTR [ebx-0x40],dh
  414d93:	test   eax,0x5b04d83e
  414d98:	shl    BYTE PTR [ecx+0x6a34fd23],1
  414d9e:	cli    
  414d9f:	pop    esp
  414da0:	xchg   BYTE PTR [esi-0x39],cl
  414da3:	pop    edi
  414da4:	add    BYTE PTR [edx-0x51],0x7
  414da8:	aam    0xa3
  414daa:	mov    bh,0x2d
  414dac:	dec    ebp
  414dad:	push   ss
  414dae:	adc    esi,DWORD PTR [ebp+esi*1-0x3d]
  414db2:	imul   esp,DWORD PTR [ebx+0x74bb726e],0x87d031d2
  414dbc:	scas   al,BYTE PTR es:[edi]
  414dbd:	and    ebx,edi
  414dbf:	cld    
  414dc0:	sub    al,0x91
  414dc2:	popa   
  414dc3:	daa    
  414dc4:	test   BYTE PTR [esi+0x67],bh
  414dc7:	scas   eax,DWORD PTR es:[edi]
  414dc8:	pop    ebp
  414dc9:	je     0x414de6
  414dcb:	mov    eax,0x17d7cc25
  414dd0:	into   
  414dd1:	cmp    DWORD PTR ds:0x3820c510,ecx
  414dd7:	test   BYTE PTR [edi-0xb],0x2a
  414ddb:	mov    al,BYTE PTR [ecx+edi*1]
  414dde:	and    BYTE PTR [esi-0x4c],bh
  414de1:	mov    edx,DWORD PTR [eax+0x3b37efe5]
  414de7:	sub    dl,BYTE PTR [eax+0x23bb8724]
  414ded:	ja     0x414dd5
  414def:	or     eax,0x434948a
  414df4:	xor    al,0xc4
  414df6:	cmp    dh,bh
  414df8:	pop    ebx
  414df9:	ds hlt 
  414dfb:	push   ss
  414dfc:	cli    
  414dfd:	mov    BYTE PTR [edx+0x346e3b79],ah
  414e03:	adc    eax,0xf5fba682
  414e08:	dec    edx
  414e09:	ds je  0x414e3c
  414e0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e0d:	ja     0x414ddf
  414e0f:	outs   dx,DWORD PTR ds:[esi]
  414e10:	hlt    
  414e11:	or     DWORD PTR [esi+0x25],edi
  414e14:	gs sub al,0x2
  414e17:	rol    al,cl
  414e19:	push   cs
  414e1a:	inc    eax
  414e1b:	std    
  414e1c:	pop    edi
  414e1d:	pop    edi
  414e1e:	push   esi
  414e1f:	jmp    0x414de8
  414e21:	jg     0x414e36
  414e23:	xchg   BYTE PTR [edx-0x6],ch
  414e26:	shr    DWORD PTR [esi+0x47a906ed],1
  414e2c:	xchg   BYTE PTR [edi+0x5],ah
  414e2f:	push   eax
  414e30:	mov    dl,0xf1
  414e32:	lock xor eax,0x5c38239b
  414e38:	jge    0x414e85
  414e3a:	fidivr DWORD PTR [edx]
  414e3c:	mov    ds:0xb4d502d2,al
  414e41:	aad    0x14
  414e43:	mov    eax,ds:0x8b8670a6
  414e48:	add    al,0xb6
  414e4a:	xchg   edi,eax
  414e4b:	xor    BYTE PTR [edx+0x5c9225e4],bh
  414e51:	cmp    ebx,ebx
  414e53:	mov    dl,0x6f
  414e55:	inc    esp
  414e56:	push   esi
  414e57:	ins    BYTE PTR es:[edi],dx
  414e58:	cmp    dl,dl
  414e5a:	push   edx
  414e5b:	jge    0x414e0f
  414e5d:	call   0xdda:0x9058ce8c
  414e64:	mov    ch,0xe7
  414e66:	outs   dx,DWORD PTR ds:[esi]
  414e67:	xor    BYTE PTR [edx],dl
  414e69:	lods   al,BYTE PTR ds:[esi]
  414e6a:	pop    es
  414e6b:	jae    0x414eb7
  414e6d:	cmp    al,0xac
  414e6f:	shr    BYTE PTR [eax],cl
  414e71:	or     eax,0x9814e38
  414e76:	scas   al,BYTE PTR es:[edi]
  414e77:	mov    ds:0x51e88cf1,eax
  414e7c:	popa   
  414e7d:	outs   dx,DWORD PTR ds:[esi]
  414e7e:	dec    edi
  414e7f:	jg     0x414e0f
  414e81:	mov    ebp,0xaf9392fb
  414e86:	mov    edi,ebp
  414e88:	mov    BYTE PTR [esi+0x77],cl
  414e8b:	cmp    al,0xd9
  414e8d:	mov    esp,ebx
  414e8f:	adc    DWORD PTR [ebp+0x4b],0xc83748e4
  414e96:	punpcklwd mm6,DWORD PTR [esi+ebp*4+0x49]
  414e9b:	cmp    edi,esp
  414e9d:	jg     0x414e3a
  414e9f:	clc    
  414ea0:	ror    DWORD PTR [ebp+0x797bb7d6],cl
  414ea6:	outs   dx,DWORD PTR ds:[esi]
  414ea7:	jo     0x414e90
  414ea9:	or     cl,BYTE PTR [edx+0x46]
  414eac:	jo     0x414ec2
  414eae:	cwde   
  414eaf:	lods   eax,DWORD PTR ds:[esi]
  414eb0:	icebp  
  414eb1:	repz dec esp
  414eb3:	mov    BYTE PTR [edi-0x2a],dl
  414eb6:	clc    
  414eb7:	or     BYTE PTR [edi+0x2690c012],cl
  414ebd:	dec    ecx
  414ebe:	xchg   BYTE PTR [ecx+0x72d893da],ch
  414ec4:	xchg   DWORD PTR [ecx+0x5d],ebx
  414ec7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ec8:	es inc ebp
  414eca:	inc    edi
  414ecb:	adc    DWORD PTR [edx+eax*2+0x5c],ebp
  414ecf:	call   0xaf5545fd
  414ed4:	adc    al,0xf9
  414ed6:	aas    
  414ed7:	mov    ebp,0x9b5aa41b
  414edc:	sub    ch,BYTE PTR [ebx]
  414ede:	ds pop edi
  414ee0:	fwait
  414ee1:	daa    
  414ee2:	shr    BYTE PTR [edi-0x11],0x1c
  414ee6:	fimul  WORD PTR [edx+eax*4]
  414ee9:	push   esi
  414eea:	mov    ecx,0x33b40a38
  414eef:	shl    ch,0xa
  414ef2:	push   edx
  414ef3:	(bad)  
  414ef5:	or     BYTE PTR [esi+0xc6fcc3c],cl
  414efb:	add    DWORD PTR [esi+0x30f0bc7b],ecx
  414f01:	xor    edx,esi
  414f03:	test   eax,0x27f757a4
  414f08:	fnstsw ax
  414f0a:	pop    ebx
  414f0b:	retf   0x9f18
  414f0e:	mov    esp,0x6b7a4e47
  414f13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f14:	add    al,0xa6
  414f16:	jecxz  0x414f10
  414f18:	add    al,0x51
  414f1a:	lock ret 0xbdd1
  414f1e:	sar    DWORD PTR [ecx+0x440596ff],cl
  414f24:	test   cl,al
  414f26:	scas   al,BYTE PTR es:[edi]
  414f27:	sahf   
  414f28:	arpl   WORD PTR [ecx+eiz*1+0x49],sp
  414f2c:	jmp    0xc2547ade
  414f31:	inc    esi
  414f32:	stos   DWORD PTR es:[edi],eax
  414f33:	push   ecx
  414f34:	(bad)  
  414f35:	retf   0x88
  414f38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f39:	adc    DWORD PTR ds:0x7d5153,0x69
  414f40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f41:	sbb    al,0xf1
  414f43:	(bad)  
  414f44:	mov    edx,0x9f2495f5
  414f49:	jg     0x414ece
  414f4b:	out    0xba,al
  414f4d:	add    ecx,0x4998da3f
  414f53:	adc    bh,BYTE PTR [eax+0x7f640bf2]
  414f59:	adc    eax,DWORD PTR [edx-0x61]
  414f5c:	ret    0x5ad
  414f5f:	cs aaa 
  414f61:	inc    ebp
  414f62:	ret    0x3baf
  414f65:	fiadd  WORD PTR [ebx]
  414f67:	jno    0x414f21
  414f69:	jle    0x414fce
  414f6b:	inc    edi
  414f6c:	and    al,0xd6
  414f6e:	sbb    DWORD PTR [esi-0x65],0xeaffb3fe
  414f75:	lods   eax,DWORD PTR ds:[esi]
  414f76:	stos   BYTE PTR es:[edi],al
  414f77:	mov    eax,ecx
  414f79:	fsub   QWORD PTR [ecx+0x78]
  414f7c:	arpl   WORD PTR [edi+0x6],ax
  414f7f:	clc    
  414f80:	pop    edi
  414f81:	pop    edx
  414f82:	push   ds
  414f83:	lock std 
  414f85:	and    BYTE PTR ds:0x3c460128,0xfe
  414f8c:	xor    BYTE PTR [eax-0x4b],0xc2
  414f90:	rcr    ebp,cl
  414f92:	pop    esp
  414f93:	je     0x414fdd
  414f95:	dec    esi
  414f96:	ror    BYTE PTR [ebx+0x49e17586],0x2
  414f9d:	hlt    
  414f9e:	int3   
  414f9f:	or     BYTE PTR [edi-0x55],al
  414fa2:	mov    al,0xf3
  414fa4:	test   al,0xc9
  414fa6:	mov    eax,0x908faaa
  414fab:	lods   al,BYTE PTR ds:[esi]
  414fac:	pop    esp
  414fad:	and    al,0xe6
  414faf:	retf   
  414fb0:	inc    esp
  414fb1:	and    al,0x60
  414fb3:	std    
  414fb4:	inc    edi
  414fb5:	sbb    eax,DWORD PTR [eax-0x6c60e341]
  414fbb:	int    0xd9
  414fbd:	adc    eax,DWORD PTR [esi+0x20]
  414fc0:	bound  esp,QWORD PTR [edi+ebp*8-0x51]
  414fc4:	push   cs
  414fc5:	pop    bx
  414fc7:	mov    ch,0x80
  414fc9:	xor    DWORD PTR [eax-0x4b7f13ac],eax
  414fcf:	cwde   
  414fd0:	pop    ebp
  414fd1:	and    al,0x78
  414fd3:	xchg   DWORD PTR [edx+0x6aadd891],esi
  414fd9:	test   DWORD PTR [edi],0x1679356e
  414fdf:	std    
  414fe0:	and    DWORD PTR [esi-0x71],edx
  414fe3:	xor    eax,0x72f2c83c
  414fe8:	or     DWORD PTR [edx+0x29],eax
  414feb:	call   0x76b66d52
  414ff0:	lds    ebx,FWORD PTR [eax-0x3d]
  414ff3:	jmp    0xbaae:0xfca402ba
  414ffa:	lock leave 
  414ffc:	fdivrp st(0),st
  414ffe:	pushf  
  414fff:	in     eax,dx
  415000:	mov    ecx,0xe2dfb73f
  415005:	sbb    BYTE PTR [eax+0x7a],ch
  415008:	mov    ch,BYTE PTR [edi+0x33]
  41500b:	in     eax,0x17
  41500d:	ror    BYTE PTR [ebp+0x3e],cl
  415010:	lods   al,BYTE PTR ds:[esi]
  415011:	xchg   edi,eax
  415012:	imul   esi,eax,0xcc06bf35
  415018:	imul   ebp,DWORD PTR [edx+0x49],0x3a
  41501c:	cmp    ebp,ecx
  41501e:	jle    0x415091
  415020:	xchg   edx,eax
  415021:	xchg   esi,eax
  415022:	loop   0x41509b
  415024:	sti    
  415025:	adc    edx,edi
  415027:	or     dl,cl
  415029:	jnp    0x414fe0
  41502b:	pusha  
  41502c:	push   ss
  41502d:	rcl    ebp,cl
  41502f:	fisub  WORD PTR [ebp+eiz*1-0x71]
  415033:	xchg   ecx,eax
  415034:	xor    BYTE PTR [ebp-0x13],ah
  415037:	add    al,0x60
  415039:	mov    ecx,DWORD PTR [ebp+0x42385ca3]
  41503f:	mov    ds:0xd6e6b95b,eax
  415044:	retf   0x6ff9
  415047:	sub    ebx,DWORD PTR [ebx+0x13]
  41504a:	add    cl,BYTE PTR ds:0x885c1959
  415050:	sub    DWORD PTR ds:[edx-0x68d3dda],ecx
  415057:	loopne 0x415090
  415059:	jg     0x41504f
  41505b:	jmp    0xa56c:0xd244e7fc
  415062:	pop    es
  415063:	repnz xchg dx,ax
  415066:	jmp    0x77ce:0xba69a71
  41506d:	iret   
  41506e:	rol    BYTE PTR [ebx],1
  415070:	mov    bh,0xbd
  415072:	lods   al,BYTE PTR ds:[esi]
  415073:	sub    BYTE PTR [ecx],al
  415075:	pop    ecx
  415076:	jmp    0xcabd:0x200f8bef
  41507d:	rcr    BYTE PTR [esi+0x7a],cl
  415080:	mov    ebx,0xcb0fa46e
  415085:	dec    ebx
  415086:	mov    ch,0xac
  415088:	into   
  415089:	add    al,0xa0
  41508b:	push   ss
  41508c:	or     ebp,DWORD PTR ds:0x5bdfef64
  415092:	jmp    0xe00e:0x2d37360c
  415099:	xchg   DWORD PTR [edx],ecx
  41509b:	ret    0xdfce
  41509e:	dec    edx
  41509f:	push   es
  4150a0:	sbb    al,BYTE PTR [ebx-0x7edb539e]
  4150a6:	ins    BYTE PTR es:[edi],dx
  4150a7:	mov    esp,0x64982997
  4150ac:	int3   
  4150ad:	mov    esi,?
  4150af:	outs   dx,DWORD PTR ds:[esi]
  4150b0:	loopne 0x41504c
  4150b2:	jno    0x4150c4
  4150b4:	mov    DWORD PTR [edx-0x1e487e7c],0x5eb2a88b
  4150be:	sub    BYTE PTR [ecx-0x2b],dh
  4150c1:	jmp    0xa60b:0xca34a859
  4150c8:	ins    BYTE PTR es:[edi],dx
  4150c9:	jmp    0x41504b
  4150cb:	cmp    bh,al
  4150cd:	fbstp  TBYTE PTR [eax+0x7d6ae120]
  4150d3:	mov    bh,0x50
  4150d5:	cmp    DWORD PTR [edx],esp
  4150d7:	adc    DWORD PTR [ebp+0x389e5b84],ebx
  4150dd:	mov    dl,0x0
  4150df:	gs fsubr st(5),st
  4150e2:	imul   bl
  4150e4:	jo     0x415076
  4150e6:	mov    ds:0xf79dc19e,al
  4150eb:	jne    0x41515b
  4150ed:	call   0x8717:0x84ec06e9
  4150f4:	dec    ebp
  4150f5:	test   BYTE PTR [ecx],ah
  4150f7:	mov    edx,0x620fc40c
  4150fc:	xor    ebp,DWORD PTR [ebx+0x73]
  4150ff:	je     0x41516c
  415101:	xchg   esp,eax
  415102:	mov    cl,0x32
  415104:	mov    ebx,0xde3626e8
  415109:	cwde   
  41510a:	push   edi
  41510b:	dec    esi
  41510c:	jge    0x415118
  41510e:	mov    ebx,0x9a03f1ee
  415113:	or     ecx,edx
  415115:	cli    
  415116:	out    dx,al
  415117:	(bad)  
  415118:	pop    ss
  415119:	ja     0x41510d
  41511b:	and    DWORD PTR [esi+edi*4-0x27be678b],esi
  415122:	xor    eax,0xcfca35a5
  415127:	(bad)  [esi]
  415129:	arpl   WORD PTR [esi+0x7d],cx
  41512c:	and    bh,dl
  41512e:	std    
  41512f:	push   eax
  415130:	stos   DWORD PTR es:[edi],eax
  415131:	cli    
  415132:	shr    dh,cl
  415134:	sub    bl,BYTE PTR [eax]
  415136:	pop    ecx
  415137:	retf   
  415138:	dec    ecx
  415139:	xor    eax,esp
  41513b:	sbb    eax,0x297a87bb
  415140:	push   ebp
  415141:	mov    cl,0x95
  415143:	repnz sbb BYTE PTR [eax-0x5d],al
  415147:	dec    esp
  415148:	xlat   BYTE PTR ds:[ebx]
  415149:	jno    0x4150df
  41514b:	cmp    dl,BYTE PTR [eax]
  41514d:	out    dx,eax
  41514e:	jge    0x415152
  415150:	add    dl,dl
  415152:	aad    0xcf
  415154:	ret    0x317b
  415157:	ins    DWORD PTR es:[edi],dx
  415158:	dec    eax
  415159:	std    
  41515a:	or     BYTE PTR [edi+0x551b3890],ah
  415160:	mov    bl,0x57
  415162:	jo     0x4151d3
  415164:	adc    ch,BYTE PTR [edx]
  415166:	push   es
  415167:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  415169:	mov    ebp,DWORD PTR [edx+0x10]
  41516c:	pop    ebp
  41516d:	hlt    
  41516e:	jnp    0x415195
  415170:	jecxz  0x4151ef
  415172:	push   esi
  415173:	fdivr  DWORD PTR [ebx]
  415175:	adc    ebp,DWORD PTR ds:0x905e7c77
  41517b:	and    edx,DWORD PTR [edi+0x6d]
  41517e:	dec    esi
  41517f:	or     eax,0xd513a87b
  415184:	jmp    0x415107
  415186:	in     al,dx
  415187:	sub    DWORD PTR [edx-0x43d813a8],esp
  41518d:	test   al,0x11
  41518f:	dec    ebx
  415190:	and    dl,cl
  415192:	cdq    
  415193:	dec    esi
  415194:	mov    esi,0x424179f2
  415199:	fiadd  DWORD PTR [ebx-0x65442094]
  41519f:	pop    ebp
  4151a0:	test   eax,0x8cdb6541
  4151a5:	jge    0x4151bc
  4151a7:	data16 or ah,BYTE PTR [esi-0x61]
  4151ab:	std    
  4151ac:	push   esi
  4151ad:	fist   DWORD PTR ds:0x76383b38
  4151b3:	cmp    ch,BYTE PTR [esi+eiz*8-0x120969ce]
  4151ba:	shl    BYTE PTR [ecx+eiz*2-0x21f2c128],0xbf
  4151c2:	stos   DWORD PTR es:[edi],eax
  4151c3:	adc    edx,DWORD PTR [ecx]
  4151c5:	or     al,0x17
  4151c7:	jmp    FWORD PTR ds:0x9918b1ad
  4151cd:	cld    
  4151ce:	cmp    BYTE PTR [edi],dh
  4151d0:	cmp    DWORD PTR [ecx-0x7],ecx
  4151d3:	call   0x4fc1af4b
  4151d8:	xchg   BYTE PTR [ebp+0x20a57a2d],dh
  4151de:	sub    DWORD PTR [ebx+0x32e51da],ecx
  4151e4:	and    esp,0x19
  4151e7:	in     eax,dx
  4151e8:	add    ebx,DWORD PTR [ebp-0x4f222f7f]
  4151ee:	cli    
  4151ef:	adc    al,0xf0
  4151f1:	out    0xe5,al
  4151f3:	inc    esp
  4151f4:	and    al,0x8a
  4151f6:	(bad)
  4151f9:	jb     0x415217
  4151fb:	mov    ch,0xea
  4151fd:	xor    eax,DWORD PTR [ecx]
  4151ff:	repz adc BYTE PTR [edi+0x14],dh
  415203:	mov    cl,0x76
  415205:	jle    0x415271
  415207:	inc    eax
  415208:	jmp    0xfb24:0x7c8bb08
  41520f:	mov    bl,0x51
  415211:	xor    cl,BYTE PTR [ebx-0x504a6698]
  415217:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415218:	stos   BYTE PTR es:[edi],al
  415219:	xchg   edi,eax
  41521a:	mov    bh,0x9b
  41521c:	pop    ds
  41521d:	out    dx,al
  41521e:	and    BYTE PTR [edi+0x63],ch
  415221:	or     al,BYTE PTR [edx+0x50]
  415224:	xor    dl,BYTE PTR [ebp+ecx*4+0x66]
  415228:	sbb    BYTE PTR [edx],cl
  41522a:	push   cs
  41522b:	les    edi,FWORD PTR [edx+0x1f700953]
  415231:	xchg   DWORD PTR [edi+0x4425b2d0],edi
  415237:	sub    al,0x46
  415239:	loop   0x4152b3
  41523b:	mov    WORD PTR [ebp-0x2e],?
  41523e:	or     cl,dh
  415240:	mov    al,ds:0x1d4cd81b
  415245:	in     eax,0x8a
  415247:	popf   
  415248:	jbe    0x415251
  41524a:	adc    bh,BYTE PTR [esi-0x3b]
  41524d:	mov    ah,0x66
  41524f:	aad    0x6a
  415251:	cmp    BYTE PTR gs:[esi-0x185d2953],ah
  415258:	pop    esi
  415259:	in     al,dx
  41525a:	fstp   TBYTE PTR [edx+eiz*4+0x50]
  41525e:	mov    dx,0x2d18
  415262:	inc    esp
  415263:	inc    eax
  415264:	stos   BYTE PTR es:[edi],al
  415265:	in     al,dx
  415266:	(bad)  [ebx+0x323edba0]
  41526c:	pushf  
  41526d:	fistp  DWORD PTR [esi+0x3b]
  415270:	es cs cmp bl,bh
  415274:	xor    eax,0x48c8f40c
  415279:	fisubr WORD PTR ds:0x3963773e
  41527f:	jmp    0x46936549
  415284:	and    al,BYTE PTR [ecx+ebx*1-0x24]
  415288:	retf   
  415289:	ja     0x415221
  41528b:	call   DWORD PTR [ebx]
  41528d:	jg     0x41530a
  41528f:	test   BYTE PTR [ebp+0x55882863],dl
  415295:	jmp    0x41527c
  415297:	xchg   esi,eax
  415298:	cmp    cl,BYTE PTR [eax+ebp*4]
  41529b:	dec    esp
  41529c:	retf   0x6525
  41529f:	imul   edx,DWORD PTR [esi+0x79],0x3423139f
  4152a6:	mov    eax,0x8ed87d58
  4152ab:	sahf   
  4152ac:	stc    
  4152ad:	lock shl ebp,0xdc
  4152b1:	jae    0x41525a
  4152b3:	test   DWORD PTR [ebp+0x29],ecx
  4152b6:	imul   ebx,DWORD PTR [esi+0x9],0xe6629f92
  4152bd:	push   ebx
  4152be:	es adc eax,0xda6465b
  4152c4:	xor    ah,BYTE PTR ds:0xf2e0001f
  4152ca:	sub    DWORD PTR [edi],ebp
  4152cc:	hlt    
  4152cd:	or     BYTE PTR [ebp-0x50],al
  4152d0:	jo     0x415302
  4152d2:	mov    esp,0xea1397aa
  4152d7:	pop    esi
  4152d8:	xor    al,0xe2
  4152da:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  4152dc:	shl    ah,0xe1
  4152df:	das    
  4152e0:	ror    edx,1
  4152e2:	sub    BYTE PTR [esi-0x3b],0x76
  4152e6:	mov    BYTE PTR [ebx+ebp*1-0x79321b3c],bl
  4152ed:	add    DWORD PTR [edx],esp
  4152ef:	imul   ebx,DWORD PTR [esi],0xffffffc8
  4152f2:	mov    ds,WORD PTR [esi+0x20]
  4152f5:	js     0x415337
  4152f7:	dec    ebx
  4152f8:	or     dl,BYTE PTR [eax-0x73]
  4152fb:	inc    ebx
  4152fc:	call   0xc3ac:0x4729507a
  415303:	push   edi
  415304:	dec    eax
  415305:	stc    
  415306:	xor    dl,BYTE PTR [esi]
  415308:	dec    ebp
  415309:	pop    ds
  41530a:	lds    ecx,FWORD PTR [esi+0x23]
  41530d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41530e:	jge    0x4152d5
  415310:	stos   DWORD PTR es:[edi],eax
  415311:	fadd   st,st(6)
  415313:	add    ch,BYTE PTR [eax-0x2]
  415316:	test   BYTE PTR [eax+ebp*8-0x5b],bh
  41531a:	sbb    dh,BYTE PTR [edx-0xbba938]
  415320:	popa   
  415321:	dec    esi
  415322:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415323:	sub    eax,0xd4e4596c
  415328:	jae    0x415374
  41532a:	jo     0x4152bf
  41532c:	sbb    ebx,DWORD PTR [ebx]
  41532e:	call   0xbf95:0xfec41499
  415335:	rol    DWORD PTR [edx-0x8],0x81
  415339:	sbb    dh,BYTE PTR [ebp+0x4dbf95c7]
  41533f:	push   ebx
  415340:	std    
  415341:	add    edi,DWORD PTR [ecx]
  415343:	cs ja  0x415303
  415346:	jno    0x4152fa
  415348:	fs js  0x415376
  41534b:	pushf  
  41534c:	out    0xc4,eax
  41534e:	les    ebp,FWORD PTR [esi+0x18643358]
  415354:	enter  0xc95f,0xc6
  415358:	pop    es
  415359:	add    BYTE PTR [esi-0x40118f8c],ch
  41535f:	jno    0x415371
  415361:	xchg   ecx,eax
  415362:	(bad)  
  415363:	mov    edi,0x1e2b0069
  415368:	retf   0x6f61
  41536b:	ja     0x4153ae
  41536d:	outs   dx,BYTE PTR ds:[esi]
  41536e:	daa    
  41536f:	mov    ds:0xca683988,al
  415374:	xchg   esp,edi
  415376:	aam    0x4a
  415378:	in     al,0x5c
  41537a:	retf   0xb9cc
  41537d:	repz cmp DWORD PTR [edx-0x58],ebx
  415381:	dec    eax
  415382:	clc    
  415383:	test   eax,0x6f657994
  415388:	jnp    0x4153dd
  41538a:	out    0xfb,eax
  41538c:	fbstp  TBYTE PTR es:[ecx+0x17]
  415390:	push   esp
  415391:	sar    dh,1
  415393:	(bad)  
  415394:	aad    0xc2
  415396:	mov    edi,0x1107bde6
  41539b:	sar    DWORD PTR [edx+0x4e],0xb1
  41539f:	aas    
  4153a0:	repnz dec ebx
  4153a2:	sti    
  4153a3:	ffree  st(1)
  4153a5:	int    0x14
  4153a7:	js     0x415381
  4153a9:	scas   al,BYTE PTR es:[edi]
  4153aa:	pop    ss
  4153ab:	cmp    eax,0xda6805aa
  4153b0:	push   edi
  4153b1:	adc    DWORD PTR [ebp+0x3bc38d81],edx
  4153b7:	fadd   QWORD PTR [esi+0xd]
  4153ba:	dec    edx
  4153bb:	add    BYTE PTR [eax-0x38],dl
  4153be:	in     eax,0xb4
  4153c0:	pop    ds
  4153c1:	clc    
  4153c2:	aas    
  4153c3:	mov    ds:0xac30e993,al
  4153c8:	sahf   
  4153c9:	mov    esp,0xe1f60bd6
  4153ce:	popf   
  4153cf:	and    eax,DWORD PTR [ebx]
  4153d1:	cmp    DWORD PTR [edx-0x7e1578a6],ecx
  4153d7:	lods   al,BYTE PTR ds:[esi]
  4153d8:	loopne 0x41538e
  4153da:	adc    ebp,DWORD PTR [edi-0x7c]
  4153dd:	addr16 jno 0x4153d5
  4153e0:	push   es
  4153e1:	rcl    BYTE PTR [edi+eax*4-0x1ee422e1],cl
  4153e8:	and    esp,DWORD PTR [esi-0x19ffbf61]
  4153ee:	adc    BYTE PTR [eax-0x16],dh
  4153f1:	shr    DWORD PTR [eax-0x55fbb8f4],cl
  4153f7:	fimul  WORD PTR [eax-0x26]
  4153fa:	rcr    BYTE PTR [esi+ecx*8],1
  4153fd:	xchg   DWORD PTR [ebx],edi
  4153ff:	xchg   esp,eax
  415400:	push   es
  415401:	mov    ebp,0x784ef212
  415406:	jns    0x41546b
  415408:	cmp    dh,BYTE PTR [ebp-0x6975b357]
  41540e:	dec    esi
  41540f:	shl    DWORD PTR [ecx-0x17],0x3
  415413:	jne    0x4153d0
  415415:	in     al,0x31
  415417:	cli    
  415418:	cdq    
  415419:	xchg   esp,eax
  41541a:	mov    esi,0xdf1a354d
  41541f:	adc    ebx,DWORD PTR [edi+0xe667cc7]
  415425:	lods   al,BYTE PTR ds:[esi]
  415426:	cmc    
  415427:	or     ebx,DWORD PTR [edi+ebp*2]
  41542a:	call   0xcfc36c0d
  41542f:	pop    edi
  415430:	xor    edx,edx
  415432:	xor    edx,DWORD PTR [edx]
  415434:	aas    
  415435:	test   DWORD PTR [eax+0x63],0x2f2b0028
  41543c:	das    
  41543d:	jl     0x41547a
  41543f:	sbb    eax,0x827cc8e4
  415444:	ds mov cx,0xfadc
  415449:	test   BYTE PTR [esi-0x7d],ah
  41544c:	pop    ebx
  41544d:	test   DWORD PTR [eiz*2-0x7d2ba807],ecx
  415454:	ins    BYTE PTR es:[edi],dx
  415455:	inc    edi
  415456:	cmp    dl,bl
  415458:	xchg   edx,eax
  415459:	out    0xb,al
  41545b:	test   al,ah
  41545d:	out    dx,al
  41545e:	js     0x4154cb
  415460:	stos   BYTE PTR es:[edi],al
  415461:	fs out 0xbe,eax
  415464:	or     al,0x53
  415466:	adc    al,0x34
  415469:	pop    ss
  41546a:	xchg   DWORD PTR [ecx-0x3ec25dc2],eax
  415470:	mov    cl,0xf0
  415472:	ja     0x415418
  415474:	inc    esi
  415475:	xchg   esp,eax
  415476:	imul   edx,DWORD PTR [edx+0x7974ac61],0x70
  41547d:	call   0xa17ec639
  415482:	mov    edx,0x2c19fa79
  415487:	xor    DWORD PTR [ebx],0xd6dec5b4
  41548d:	ficom  WORD PTR [ecx-0x4afe4cfa]
  415493:	aas    
  415494:	jne    0x4154bb
  415496:	pop    ss
  415497:	jmp    0x9feb:0x52474033
  41549e:	js     0x415511
  4154a0:	xor    eax,0x138609d9
  4154a5:	mov    dl,0x4
  4154a7:	push   ds
  4154a8:	iret   
  4154a9:	fidivr DWORD PTR [ebx-0x3a3c21]
  4154af:	jmp    0x56cc622b
  4154b4:	xchg   ebp,eax
  4154b5:	aaa    
  4154b6:	loopne 0x4154df
  4154b8:	pushf  
  4154b9:	loope  0x4154ec
  4154bb:	les    esi,FWORD PTR [ecx+0x11]
  4154be:	inc    edi
  4154bf:	xor    ah,dh
  4154c1:	sub    eax,0x2dc59ec5
  4154c6:	pop    eax
  4154c7:	shl    BYTE PTR [ebx+0x7c7963f6],0xab
  4154ce:	jmp    FWORD PTR [eax-0x7f40d18c]
  4154d4:	es and ebx,0x3d2966f9
  4154db:	or     ebp,edi
  4154dd:	jne    0x415532
  4154df:	(bad)  
  4154e0:	rcl    DWORD PTR [esi+0x5b],cl
  4154e3:	xchg   esi,eax
  4154e4:	mov    ds:0x28f0f44e,eax
  4154e9:	or     DWORD PTR [esp+ebx*8+0x2ddd019e],0x29
  4154f1:	mov    bh,0xee
  4154f3:	add    DWORD PTR [ecx-0x16abced],esp
  4154f9:	cmp    cl,BYTE PTR [ebx-0x7e]
  4154fc:	cli    
  4154fd:	mov    ch,0x43
  4154ff:	icebp  
  415500:	psubusb mm2,QWORD PTR [edx]
  415503:	lock xchg BYTE PTR [ebx-0x43],ch
  415507:	call   0x6c2f:0x5be931bd
  41550e:	and    ch,al
  415510:	(bad)  
  415511:	ss dec ebx
  415513:	pop    esp
  415514:	xor    eax,0xb784e1dd
  415519:	xchg   esp,eax
  41551a:	lods   al,BYTE PTR ds:[esi]
  41551b:	cmp    ebp,DWORD PTR [edx-0x39e43d38]
  415521:	das    
  415522:	mov    eax,0xebc1b1f9
  415527:	push   eax
  415528:	mov    ah,0xaa
  41552a:	jns    0x415571
  41552c:	xor    bh,BYTE PTR [ebp-0x3e]
  41552f:	cmp    eax,0xe65395aa
  415534:	mov    esp,0x23473d97
  415539:	jl     0x41558b
  41553b:	dec    ebx
  41553c:	test   DWORD PTR [edi+ecx*8-0x16aeafd4],esi
  415543:	add    BYTE PTR [edi+0x4e],al
  415546:	cmp    BYTE PTR [eax-0x11],bl
  415549:	xlat   BYTE PTR ds:[ebx]
  41554a:	pop    esp
  41554b:	xor    BYTE PTR [edx],0xb0
  41554e:	xchg   ebp,eax
  41554f:	stc    
  415550:	add    edx,DWORD PTR [edx+0x3]
  415553:	jle    0x4154db
  415555:	pusha  
  415556:	aaa    
  415557:	dec    edx
  415558:	in     eax,dx
  415559:	sub    BYTE PTR [eax],0x6c
  41555c:	dec    ebx
  41555d:	dec    ebx
  41555e:	in     al,0xc7
  415560:	mov    eax,0x128e7bd8
  415565:	pop    edx
  415566:	ds in  eax,0x48
  415569:	(bad)  
  41556a:	aas    
  41556b:	in     al,dx
  41556c:	push   edx
  41556d:	(bad)  
  41556e:	mov    eax,ds:0x8036e7cc
  415573:	jnp    0x415517
  415575:	pop    edi
  415576:	imul   edx,DWORD PTR [esi],0x28a84a95
  41557c:	push   ds
  41557d:	dec    eax
  41557e:	xor    cl,BYTE PTR [esi-0x1f]
  415581:	sub    eax,ebp
  415583:	cmp    edi,DWORD PTR [eax]
  415585:	dec    esi
  415586:	mov    bh,bh
  415588:	dec    ebx
  415589:	xchg   DWORD PTR [edi-0x6a],ebx
  41558c:	mov    dh,0xf2
  41558e:	dec    edx
  41558f:	xlat   BYTE PTR fs:[ebx]
  415591:	xor    al,0x2c
  415593:	(bad)
  415596:	jmp    0x39e9:0x6946456c
  41559d:	std    
  41559e:	test   esp,ecx
  4155a0:	scas   eax,DWORD PTR es:[edi]
  4155a1:	in     eax,0x59
  4155a3:	adc    eax,0x4dc3d85f
  4155a8:	fild   DWORD PTR [esi+0x58]
  4155ab:	jnp    0x415570
  4155ad:	(bad)  
  4155af:	push   eax
  4155b0:	mov    ah,0xc6
  4155b2:	mov    ds:0x26a91965,eax
  4155b7:	or     BYTE PTR gs:[esi],ch
  4155ba:	rcl    al,1
  4155bc:	inc    edx
  4155bd:	daa    
  4155be:	mov    al,ds:0x17c9ac63
  4155c3:	mov    dl,0x85
  4155c5:	(bad)
  4155c9:	nop
  4155ca:	inc    ecx
  4155cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155cc:	lahf   
  4155cd:	adc    DWORD PTR [edi+0x46fe4c8f],eax
  4155d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155d4:	retf   0xcc0f
  4155d7:	push   0xffffffc4
  4155d9:	inc    DWORD PTR [ebp-0x4007d952]
  4155df:	adc    edi,ecx
  4155e1:	je     0x41558f
  4155e3:	inc    esp
  4155e4:	test   BYTE PTR [ecx+0x61],bl
  4155e7:	shl    BYTE PTR [ecx+0x49],1
  4155ea:	(bad)  
  4155ec:	out    0x40,al
  4155ee:	std    
  4155ef:	mov    al,ds:0xcc7a271a
  4155f4:	(bad)  
  4155f5:	rcr    BYTE PTR [esi+0x53dee1c1],cl
  4155fb:	fs adc esp,esi
  4155fe:	pop    es
  4155ff:	xchg   esp,eax
  415600:	xchg   esi,eax
  415601:	xchg   ecx,eax
  415602:	pop    edx
  415603:	sbb    BYTE PTR [esi+0x5a2aa78e],0xc4
  41560a:	push   ecx
  41560b:	mov    bl,0x62
  41560d:	arpl   WORD PTR [eax-0x662da279],bx
  415613:	fwait
  415614:	mov    dl,0xe9
  415616:	sbb    bh,BYTE PTR [ebx+0x401a58e]
  41561c:	or     dl,BYTE PTR [edi-0x4136116d]
  415622:	bound  ebp,QWORD PTR [esi+0x2935e46]
  415628:	addr16 jge 0x4155e8
  41562b:	shl    ebx,1
  41562d:	call   0x5fa246a2
  415632:	sub    DWORD PTR [edi-0x29],ebx
  415635:	and    BYTE PTR [edi-0x7e],bl
  415638:	mov    ebp,0x5d467ece
  41563d:	sub    BYTE PTR [ebx],bl
  41563f:	repz cdq 
  415641:	xchg   ecx,eax
  415642:	dec    ebp
  415643:	fwait
  415644:	mov    DWORD PTR [edi+0x22bce883],0x6d1c39c4
  41564e:	rcl    edx,0x97
  415651:	fist   DWORD PTR [esi]
  415653:	push   eax
  415654:	paddb  mm3,mm4
  415657:	cli    
  415658:	adc    bh,0xd6
  41565b:	add    ecx,DWORD PTR [edi]
  41565d:	in     al,dx
  41565e:	jno    0x41565d
  415660:	jl     0x415631
  415662:	out    0xd2,al
  415664:	cmp    DWORD PTR [ecx-0x49],edi
  415667:	xchg   edi,eax
  415668:	repz mov dl,0x32
  41566b:	test   al,0xa3
  41566d:	mov    ebx,0x338b1ca2
  415672:	cmp    DWORD PTR [edx],eax
  415674:	push   esi
  415675:	dec    eax
  415676:	in     al,dx
  415677:	or     DWORD PTR [eax+eiz*2-0x6c890a32],ebx
  41567e:	jae    0x4156c7
  415680:	dec    esi
  415681:	frstor [esi]
  415683:	push   cs
  415684:	in     eax,dx
  415685:	jge    0x4156d7
  415687:	and    cl,al
  415689:	inc    ebp
  41568a:	inc    eax
  41568b:	inc    ebx
  41568c:	mov    ss,WORD PTR [ecx+0x11c486eb]
  415692:	call   0x79b126
  415697:	jg     0x415619
  415699:	add    al,BYTE PTR [edi+0x4c]
  41569c:	jecxz  0x4156e9
  41569e:	arpl   WORD PTR [ebx-0x5],bp
  4156a1:	js     0x41566a
  4156a3:	sbb    eax,edi
  4156a5:	pushf  
  4156a6:	pop    edi
  4156a7:	mov    ah,0x3b
  4156a9:	jno    0x415719
  4156ab:	lods   al,BYTE PTR ds:[esi]
  4156ac:	icebp  
  4156ad:	mov    ch,0x69
  4156af:	enter  0xbdec,0x54
  4156b3:	(bad)  
  4156b4:	dec    ebp
  4156b5:	loope  0x415698
  4156b7:	std    
  4156b8:	fidiv  WORD PTR [esi]
  4156ba:	nop
  4156bb:	sbb    eax,0x7a4be14e
  4156c0:	test   al,0x99
  4156c2:	stos   BYTE PTR es:[edi],al
  4156c3:	xor    eax,0x2b0fac1
  4156c9:	retf   
  4156ca:	push   ebp
  4156cb:	(bad)  
  4156cc:	adc    DWORD PTR [ecx+esi*4-0x4b4359b6],esp
  4156d3:	cmc    
  4156d4:	ins    BYTE PTR es:[edi],dx
  4156d5:	pop    edi
  4156d6:	aas    
  4156d7:	rcr    DWORD PTR [ebx+0x79bb298f],1
  4156dd:	loop   0x4156e4
  4156df:	out    dx,eax
  4156e0:	mov    ecx,0xd5c726d7
  4156e5:	xchg   DWORD PTR [eax+0x2a471fa0],esp
  4156eb:	and    BYTE PTR [esi+0x1948d853],al
  4156f1:	loopne 0x4156df
  4156f3:	xchg   ebp,eax
  4156f4:	xchg   DWORD PTR [edi+0x24],eax
  4156f7:	jp     0x415697
  4156f9:	(bad)  
  4156fb:	into   
  4156fc:	rcr    ebx,0x3e
  4156ff:	data16 jb 0x415728
  415702:	mov    al,0x2c
  415704:	push   edi
  415705:	test   BYTE PTR [ecx-0x439326c5],al
  41570b:	sub    al,0xd1
  41570d:	xchg   edx,eax
  41570e:	arpl   bp,di
  415710:	or     ebp,0x3e5b44fc
  415716:	lods   eax,DWORD PTR ds:[esi]
  415717:	fdiv   st(0),st
  415719:	sbb    al,0xc4
  41571b:	arpl   WORD PTR [ebx+0x63411218],sp
  415721:	jmp    0x4842:0x74e9050
  415728:	in     al,0xd2
  41572a:	push   esi
  41572b:	jg     0x415747
  41572d:	sbb    BYTE PTR [esp+ebp*8],cl
  415730:	lock pop es
  415732:	jbe    0x415710
  415734:	call   0x1fbb6f2a
  415739:	mov    eax,0x6bf3098b
  41573e:	sub    al,0x5b
  415740:	pop    esi
  415741:	adc    dh,BYTE PTR [ecx+ebx*1-0x41]
  415745:	cdq    
  415746:	das    
  415747:	sub    cl,al
  415749:	shl    DWORD PTR [ebx+0xab3a0a6],cl
  41574f:	lds    esp,FWORD PTR [esi]
  415751:	enter  0x27e9,0x54
  415755:	dec    esi
  415756:	cli    
  415757:	test   al,ah
  415759:	cmp    eax,0xa61ac469
  41575e:	cmp    eax,0xd8556362
  415763:	bound  ebp,QWORD PTR [esi-0x56]
  415766:	in     al,0x97
  415768:	mov    ebp,0xa4ca4418
  41576d:	(bad)  
  41576e:	pushf  
  41576f:	imul   DWORD PTR [eax]
  415771:	and    dl,al
  415773:	push   0x48
  415775:	lods   al,BYTE PTR ds:[esi]
  415776:	adc    BYTE PTR [ecx+0x23b702e4],dh
  41577c:	mov    edx,0x2286c946
  415781:	daa    
  415782:	scas   al,BYTE PTR es:[edi]
  415783:	inc    ebp
  415784:	imul   esp,DWORD PTR [ecx-0x2e6928a3],0x1c8b196b
  41578e:	scas   al,BYTE PTR es:[edi]
  41578f:	inc    esi
  415790:	push   ss
  415791:	bound  ebx,QWORD PTR [ecx]
  415793:	xor    eax,0xd5a583e2
  415798:	mov    bh,0x4d
  41579a:	fisub  DWORD PTR [edi-0x49cf2144]
  4157a0:	pop    ss
  4157a1:	loopne 0x415794
  4157a3:	xchg   edx,eax
  4157a4:	pop    edx
  4157a5:	and    ebp,edx
  4157a7:	fisttp DWORD PTR [edx]
  4157a9:	or     eax,0x93825ba3
  4157ae:	popf   
  4157af:	les    eax,FWORD PTR [ecx-0x5]
  4157b2:	(bad)  
  4157b3:	jmp    0xd2f3:0xfd19ba5f
  4157ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4157bb:	hlt    
  4157bc:	pop    edi
  4157bd:	(bad)  
  4157be:	mov    eax,0xdc76fc2e
  4157c3:	int    0x30
  4157c5:	(bad)  
  4157c6:	in     eax,0x7
  4157c8:	push   eax
  4157c9:	sub    BYTE PTR ds:0x8f65afc7,al
  4157cf:	dec    ecx
  4157d0:	pop    ss
  4157d1:	jne    0x4157e3
  4157d3:	xor    ecx,DWORD PTR [eax+0x54]
  4157d6:	adc    al,BYTE PTR [eax-0x6]
  4157d9:	or     BYTE PTR [eax],bh
  4157db:	aas    
  4157dc:	xchg   ebp,eax
  4157dd:	nop
  4157de:	jle    0x4157f4
  4157e0:	dec    eax
  4157e1:	cwde   
  4157e2:	lock dec ebp
  4157e4:	add    al,0xad
  4157e6:	mov    ds:0x9ad7019c,eax
  4157eb:	jo     0x41584c
  4157ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157ee:	adc    esp,esp
  4157f0:	iret   
  4157f1:	les    ebx,FWORD PTR [ebx]
  4157f3:	fstp   TBYTE PTR [esi-0x659ca6d7]
  4157f9:	mov    edi,0x603f6063
  4157fe:	int    0x92
  415800:	jge    0x41580b
  415802:	sbb    BYTE PTR [ebp+0x74],bl
  415805:	rcl    DWORD PTR [edx+0x77],0x8
  415809:	sbb    dh,BYTE PTR [ecx*4-0x555b0b21]
  415810:	jmp    0xd66c:0x734e338c
  415817:	xchg   BYTE PTR [eax],cl
  415819:	push   edi
  41581a:	(bad)
  41581f:	xor    BYTE PTR [ebp-0x122fd34c],cl
  415825:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415826:	lods   al,BYTE PTR ds:[esi]
  415827:	rcl    DWORD PTR [ecx+0x46],cl
  41582a:	dec    eax
  41582b:	sub    BYTE PTR [ebp+0x3208aa38],dh
  415831:	iret   
  415832:	and    dh,BYTE PTR [edi]
  415834:	sbb    ch,BYTE PTR [edi]
  415836:	sti    
  415837:	int    0x8f
  415839:	shl    bl,1
  41583b:	mov    edi,0xa1b07af2
  415840:	shl    DWORD PTR [edi-0x54],1
  415843:	dec    esp
  415844:	dec    ebx
  415845:	test   edi,0x256a9b73
  41584b:	nop
  41584c:	(bad)  
  41584d:	out    dx,al
  41584e:	fsubrp st(3),st
  415850:	xor    ebx,DWORD PTR [ebx-0x63aaf59f]
  415856:	mov    ebp,0xe68e6be4
  41585b:	xchg   BYTE PTR [eax+0x53],dh
  41585e:	cmp    esi,DWORD PTR [edx-0x7]
  415861:	loopne 0x41584e
  415863:	mov    al,ds:0x606e3b71
  415868:	(bad)  
  415869:	(bad)  
  41586a:	mov    ch,0xeb
  41586c:	xchg   ecx,eax
  41586d:	iret   
  41586e:	ret    0xa40a
  415871:	dec    edi
  415872:	mov    gs,WORD PTR [esi]
  415874:	xchg   edx,eax
  415875:	sbb    DWORD PTR [eax*8-0x5d4f2350],edi
  41587c:	mov    eax,ds:0x9ae1fa40
  415881:	push   esp
  415882:	fbstp  TBYTE PTR [eax]
  415884:	outs   dx,DWORD PTR ds:[esi]
  415885:	xchg   ebx,eax
  415886:	adc    eax,0x80686b5a
  41588b:	je     0x4158fb
  41588d:	ds cdq 
  41588f:	jmp    0x88077fab
  415894:	pop    ebp
  415895:	cdq    
  415896:	xchg   esp,eax
  415897:	xchg   esp,eax
  415898:	jo     0x415851
  41589a:	test   al,0xbb
  41589c:	mov    al,ds:0x4c379f1d
  4158a1:	sbb    eax,0xe4186fac
  4158a6:	or     cl,ch
  4158a8:	jmp    0x1697f9c5
  4158ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158ae:	cdq    
  4158af:	mov    dl,0x7e
  4158b1:	sub    ch,al
  4158b3:	retf   
  4158b4:	and    al,0xb5
  4158b6:	in     al,0x13
  4158b8:	mov    ebp,esp
  4158ba:	mov    eax,ds:0x28336398
  4158bf:	jns    0x415880
  4158c1:	int3   
  4158c2:	dec    edi
  4158c3:	push   ecx
  4158c4:	(bad)  
  4158c5:	fmul   DWORD PTR [eax]
  4158c7:	fs (bad) 
  4158c9:	sbb    BYTE PTR [ebp+0x6ae4d558],cl
  4158cf:	test   DWORD PTR [edi-0xc],ecx
  4158d2:	loope  0x415896
  4158d4:	xchg   ebp,eax
  4158d5:	adc    eax,DWORD PTR [ebp+esi*1+0x5af1470c]
  4158dc:	stos   BYTE PTR es:[edi],al
  4158dd:	push   0x1a
  4158df:	jmp    0x415919
  4158e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158e2:	stos   DWORD PTR es:[edi],eax
  4158e3:	push   cs
  4158e4:	jl     0x415912
  4158e6:	out    0xe3,eax
  4158e8:	inc    ebp
  4158e9:	jg     0x41590a
  4158eb:	pop    ebx
  4158ec:	ret    0x1ab1
  4158ef:	push   ss
  4158f0:	test   eax,0x5cbd30f7
  4158f5:	cld    
  4158f6:	in     eax,0xf2
  4158f8:	mov    ebp,0x87a65c37
  4158fd:	cli    
  4158fe:	adc    esi,DWORD PTR [ecx-0x200c82fe]
  415904:	and    al,BYTE PTR [edx+0x188ca192]
  41590a:	xchg   ebp,eax
  41590b:	icebp  
  41590c:	pop    edi
  41590d:	xchg   ebp,eax
  41590e:	sbb    eax,0x39348f0
  415913:	sub    ah,ch
  415915:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  415917:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415919:	ffreep st(5)
  41591b:	(bad)  
  41591c:	mov    bl,0x42
  41591e:	into   
  41591f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415920:	sahf   
  415921:	pop    edi
  415922:	adc    BYTE PTR [edi-0x63],ah
  415925:	pusha  
  415926:	or     al,0xb6
  415928:	mov    al,ds:0x38c27941
  41592d:	or     DWORD PTR [ecx+0x4d],0x536e2f8d
  415934:	retf   0xc4a5
  415937:	std    
  415938:	adc    BYTE PTR [ebx+ecx*1-0x2edec880],dh
  41593f:	push   ecx
  415940:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415941:	rol    ebp,1
  415943:	mov    eax,ds:0x6b53184b
  415948:	xchg   edx,eax
  415949:	bound  eax,QWORD PTR [eax+0x28]
  41594c:	sub    WORD PTR [edx+ebx*8-0x591a562e],cx
  415954:	mov    ah,0x37
  415956:	cmp    BYTE PTR [edi],bh
  415958:	adc    esi,edi
  41595a:	mov    edi,0x52a41f22
  41595f:	test   al,0xe8
  415961:	xchg   edi,eax
  415962:	scas   eax,DWORD PTR es:[edi]
  415963:	push   ss
  415964:	mov    dh,0x5d
  415966:	inc    edi
  415967:	pop    ds
  415968:	cmp    bh,BYTE PTR [ebx+0x5]
  41596b:	and    al,0x35
  41596d:	lods   al,BYTE PTR ds:[esi]
  41596e:	sbb    BYTE PTR [edx+0x40],bl
  415971:	mov    cl,0x49
  415973:	fs pop ss
  415975:	pop    edx
  415976:	jno    0x41591e
  415978:	mov    eax,0x6f8bf774
  41597d:	xsha256 (bad)
  41597e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41597f:	push   edi
  415980:	loop   0x415911
  415982:	xchg   ebx,eax
  415983:	sbb    BYTE PTR [edx],dl
  415985:	add    bh,BYTE PTR [edx+0x4f]
  415988:	mul    BYTE PTR [eax-0x1c]
  41598b:	xchg   BYTE PTR [esi],bl
  41598d:	(bad)  
  41598e:	retf   0x931d
  415991:	scas   eax,DWORD PTR es:[edi]
  415992:	mov    al,0x53
  415994:	push   edx
  415995:	adc    ah,BYTE PTR [edi-0x49]
  415998:	gs pop esi
  41599a:	and    edx,DWORD PTR [eax+0x53]
  41599d:	arpl   WORD PTR [ecx+0x6a6ae9ef],sp
  4159a3:	or     edx,esi
  4159a5:	mov    al,0xa4
  4159a7:	or     ebp,eax
  4159a9:	loop   0x41596d
  4159ab:	pop    ss
  4159ac:	push   cs
  4159ad:	xchg   DWORD PTR [ebx-0x58e8077f],ebp
  4159b3:	fs loopne 0x415a17
  4159b6:	scas   al,BYTE PTR es:[edi]
  4159b7:	bound  ebx,QWORD PTR [ecx-0x3f8176c1]
  4159bd:	and    BYTE PTR [esi-0x11],bh
  4159c0:	cli    
  4159c1:	sub    al,0x4a
  4159c3:	jge    0x415a37
  4159c5:	mov    ds:0xeedfbe2e,al
  4159ca:	jmp    0xb7b4b776
  4159cf:	xor    eax,DWORD PTR [edi-0x73]
  4159d2:	push   edx
  4159d3:	sahf   
  4159d4:	div    esp
  4159d6:	js     0x415a34
  4159d8:	dec    edx
  4159d9:	adc    cl,BYTE PTR [esi]
  4159db:	test   al,0xe6
  4159dd:	(bad)  
  4159de:	lea    edi,[eax-0x30]
  4159e1:	and    eax,0xf4a39b1e
  4159e6:	pusha  
  4159e7:	mov    ch,0x57
  4159e9:	adc    al,0xf5
  4159eb:	xchg   ebx,eax
  4159ec:	mov    bl,0xf8
  4159ee:	push   ds
  4159ef:	cmp    al,0x31
  4159f1:	and    DWORD PTR [edx],edi
  4159f3:	fcomp  QWORD PTR [esi-0x1c]
  4159f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4159f7:	test   eax,0xde33dba
  4159fc:	retf   0x7787
  4159ff:	in     al,dx
  415a00:	loope  0x415a3b
  415a02:	rcr    BYTE PTR [ebx-0x25e0ca13],1
  415a08:	dec    eax
  415a09:	jbe    0x415a5d
  415a0b:	in     al,0x97
  415a0d:	dec    ebp
  415a0e:	cwde   
  415a0f:	sub    al,0x6d
  415a11:	jnp    0x415a51
  415a13:	mov    ecx,0xe7431e85
  415a18:	mov    DWORD PTR [esi+0x3],ebx
  415a1b:	or     ch,bh
  415a1d:	nop
  415a1e:	fst    DWORD PTR [ebx+0x29]
  415a21:	scas   al,BYTE PTR es:[edi]
  415a22:	or     DWORD PTR [esp+eiz*2+0x14354ea3],0x8d409040
  415a2d:	in     eax,0x9c
  415a2f:	mov    ebp,0xacdb849e
  415a34:	inc    edx
  415a35:	mov    ah,0xd2
  415a37:	adc    eax,DWORD PTR [edi+0x4a67279d]
  415a3d:	xchg   DWORD PTR [eax],ecx
  415a3f:	mov    ah,0xa9
  415a41:	hlt    
  415a42:	add    al,0x3
  415a44:	fiadd  WORD PTR [esi-0x41c0d030]
  415a4a:	sahf   
  415a4b:	popa   
  415a4c:	add    al,0xfa
  415a4e:	mov    edx,0xcb72e58c
  415a53:	xchg   edx,eax
  415a54:	sub    eax,DWORD PTR [ecx+0x5a]
  415a57:	mov    dh,0x87
  415a59:	pusha  
  415a5a:	popf   
  415a5b:	mov    eax,ds:0xe8633149
  415a60:	sbb    ebp,0xffffffdc
  415a63:	and    al,0x35
  415a65:	fld    TBYTE PTR [esi+eax*4]
  415a68:	jg     0x415ac1
  415a6a:	out    dx,eax
  415a6b:	or     BYTE PTR [edx+0x4c6c7377],bh
  415a71:	sbb    edx,DWORD PTR [esi-0x62338b10]
  415a77:	cmp    eax,0xd7b51167
  415a7c:	fisttp DWORD PTR [eax-0x49]
  415a7f:	out    0x1d,al
  415a81:	adc    DWORD PTR [ebx-0x21c0db49],edi
  415a87:	push   es
  415a88:	xlat   BYTE PTR ds:[ebx]
  415a89:	cmp    edi,DWORD PTR [ecx]
  415a8b:	sbb    BYTE PTR [eax],dl
  415a8d:	inc    eax
  415a8e:	scas   al,BYTE PTR es:[edi]
  415a8f:	dec    esp
  415a90:	and    DWORD PTR [ebp-0x47263288],edi
  415a96:	es fwait
  415a98:	and    DWORD PTR [ebx+0x3feeb19c],ebx
  415a9e:	push   cs
  415a9f:	mov    ebx,0xc1b0bc60
  415aa4:	jp     0x415aeb
  415aa6:	mov    eax,ds:0x2f4c9ed9
  415aab:	fs pop ebx
  415aad:	and    BYTE PTR [esi+0x37],ah
  415ab0:	popa   
  415ab1:	inc    eax
  415ab2:	mov    cl,0x9b
  415ab4:	call   0x4aaa:0xdd0b9fac
  415abb:	dec    ebp
  415abc:	mov    dh,0x2e
  415abe:	cmp    eax,0x6f1292dc
  415ac3:	or     edx,DWORD PTR ds:0x33d91256
  415ac9:	(bad)
  415acc:	push   edx
  415acd:	mov    edi,0xc7aac62f
  415ad2:	neg    DWORD PTR [esi-0x69eea6a2]
  415ad8:	mov    ?,WORD PTR [ecx+0x12576d48]
  415ade:	mov    esp,DWORD PTR [esi-0x1e]
  415ae1:	jmp    0x415a7e
  415ae3:	out    0x90,al
  415ae5:	or     esi,DWORD PTR [ecx]
  415ae7:	and    esi,DWORD PTR [esi]
  415ae9:	mov    cl,0x20
  415aeb:	inc    ebx
  415aec:	lds    esp,FWORD PTR [eax+0x327dec63]
  415af2:	pop    es
  415af3:	fisubr WORD PTR [edi+0x4b]
  415af6:	bound  ebp,QWORD PTR ds:0x8b812d9d
  415afc:	push   ebp
  415afd:	push   edx
  415afe:	rcl    BYTE PTR [edi],cl
  415b00:	fsubr  st,st(1)
  415b02:	mov    bl,0xd0
  415b04:	fsubrp st(7),st
  415b06:	mov    ch,0x11
  415b08:	push   esi
  415b09:	push   0x960b47a9
  415b0e:	lds    ebp,FWORD PTR [edx]
  415b10:	xor    al,0x5c
  415b12:	out    dx,eax
  415b13:	and    DWORD PTR [edi-0x44ee9d94],0xbd743f53
  415b1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b1e:	xor    dh,0xc4
  415b21:	xchg   esp,eax
  415b22:	cmp    al,0x5b
  415b24:	cs mov edi,0xfc6248c
  415b2a:	aam    0xae
  415b2c:	cli    
  415b2d:	push   esi
  415b2e:	sahf   
  415b2f:	sub    BYTE PTR [ecx-0x62f50e0b],dl
  415b35:	js     0x415b91
  415b37:	jae    0x415abf
  415b39:	and    BYTE PTR [ebp-0x3b4a7b3],0xe0
  415b40:	xchg   edx,eax
  415b41:	sbb    BYTE PTR [eax-0x728a22e0],ah
  415b47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b48:	sbb    BYTE PTR [eax],ah
  415b4a:	xchg   ecx,eax
  415b4b:	push   di
  415b4d:	fild   DWORD PTR [ebx+0x233a59dd]
  415b53:	sbb    edi,DWORD PTR [ebx]
  415b55:	xchg   bh,dh
  415b57:	fnstcw WORD PTR [edx+0x4f]
  415b5a:	adc    al,0xb6
  415b5c:	xchg   DWORD PTR [ebp-0x13],eax
  415b5f:	push   ebx
  415b60:	push   0xffffffb4
  415b62:	jo     0x415af7
  415b64:	cmp    ecx,esp
  415b66:	iret   
  415b67:	add    edx,DWORD PTR [ebp-0x4ea0bf63]
  415b6d:	(bad)  
  415b6e:	fisttp WORD PTR [esi]
  415b70:	dec    ebp
  415b71:	aas    
  415b72:	xchg   dl,al
  415b74:	(bad)  
  415b75:	cmc    
  415b76:	aaa    
  415b77:	dec    edi
  415b78:	pop    ebp
  415b79:	fnsave [esi+edi*4-0x2b]
  415b7d:	out    dx,eax
  415b7e:	mov    ah,0xff
  415b80:	dec    edi
  415b81:	inc    edi
  415b82:	test   BYTE PTR [esi+0xb367c23],bl
  415b88:	xchg   ebx,eax
  415b89:	adc    BYTE PTR [edx+0x498283ee],ah
  415b8f:	pop    es
  415b90:	and    eax,0x4acb5218
  415b95:	clc    
  415b96:	test   dh,al
  415b98:	nop
  415b99:	jecxz  0x415bb9
  415b9b:	lahf   
  415b9c:	hlt    
  415b9d:	mov    bh,0xce
  415b9f:	pusha  
  415ba0:	dec    eax
  415ba1:	push   esp
  415ba2:	jmp    DWORD PTR [edi+esi*4-0x1744a9fd]
  415ba9:	add    DWORD PTR [eax-0x4fe98ab5],eax
  415baf:	iret   
  415bb0:	or     bl,BYTE PTR [ebx-0x6]
  415bb3:	xchg   edi,eax
  415bb4:	call   0x688e4c40
  415bb9:	(bad)
  415bbc:	push   eax
  415bbd:	sub    eax,0xc08003ee
  415bc2:	int3   
  415bc3:	lea    eax,[edx]
  415bc5:	mov    esp,0x626e4f5a
  415bca:	xor    edi,DWORD PTR [ecx-0x2079c12c]
  415bd0:	shl    BYTE PTR [ecx+0x10],1
  415bd3:	mov    ebx,0xb9cc2b3a
  415bd8:	jle    0x415ba9
  415bda:	inc    esi
  415bdb:	adc    al,0xe9
  415bdd:	pop    ebx
  415bde:	lods   eax,DWORD PTR ds:[esi]
  415bdf:	adc    al,0x24
  415be1:	ret    
  415be2:	das    
  415be3:	sti    
  415be4:	sahf   
  415be5:	push   ss
  415be6:	repnz pop eax
  415be8:	mov    al,0x66
  415bea:	cmp    eax,0x1d7eab13
  415bef:	and    eax,0xb1c325a0
  415bf4:	jbe    0x415bfd
  415bf6:	std    
  415bf7:	fnstsw WORD PTR [esi+0x7b]
  415bfa:	mov    al,ds:0x6fa55944
  415bff:	jle    0x415bc8
  415c01:	fld    TBYTE PTR [esi]
  415c03:	cld    
  415c04:	stc    
  415c05:	dec    edi
  415c06:	test   BYTE PTR [edx-0x16aaa589],dl
  415c0c:	imul   eax,DWORD PTR [edx+0x4d68f7da],0xffffffea
  415c13:	or     BYTE PTR [edx-0x64],cl
  415c16:	std    
  415c17:	popf   
  415c18:	das    
  415c19:	cmp    cl,bh
  415c1b:	(bad)  [esi-0x28f9bbd0]
  415c21:	loopne 0x415ba8
  415c23:	hlt    
  415c24:	sahf   
  415c25:	or     ebx,DWORD PTR [ebx]
  415c27:	out    dx,eax
  415c28:	nop
  415c29:	add    dh,ch
  415c2b:	jo     0x415c2c
  415c2d:	test   BYTE PTR [edx-0x1b8d6d4c],al
  415c33:	xchg   ebp,eax
  415c34:	xor    bl,BYTE PTR [ecx+0x67]
  415c37:	rol    BYTE PTR [edi-0x13],cl
  415c3a:	inc    cl
  415c3c:	cmp    eax,0x4c6f50e9
  415c41:	mov    dh,0x4d
  415c43:	sub    esi,eax
  415c45:	ffreep st(1)
  415c47:	leave  
  415c48:	in     eax,dx
  415c49:	jmp    FWORD PTR [edx+0x3e]
  415c4c:	pop    ecx
  415c4d:	sbb    al,0xd7
  415c4f:	or     DWORD PTR [esi+ebx*1],edx
  415c52:	jg     0x415c41
  415c54:	cwde   
  415c55:	aaa    
  415c56:	sub    DWORD PTR [ecx+esi*4+0x64],edi
  415c5a:	or     eax,DWORD PTR [ecx]
  415c5c:	mov    dh,0x69
  415c5e:	inc    edi
  415c5f:	and    cl,BYTE PTR [edi]
  415c61:	dec    ebx
  415c62:	in     eax,dx
  415c63:	push   cs
  415c64:	outs   dx,DWORD PTR ds:[esi]
  415c65:	pop    eax
  415c66:	add    esi,esi
  415c68:	add    esp,edx
  415c6a:	push   ss
  415c6b:	xor    eax,DWORD PTR [esi+0x626fa0e6]
  415c71:	test   al,0x6d
  415c73:	xlat   BYTE PTR ds:[ebx]
  415c74:	jnp    0x415c3e
  415c76:	pop    es
  415c77:	rol    eax,1
  415c79:	xchg   edx,eax
  415c7a:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  415c7c:	push   cs
  415c7d:	sub    DWORD PTR [ecx],ebp
  415c7f:	loope  0x415c46
  415c81:	enter  0x952b,0x9d
  415c85:	ss and al,0x87
  415c88:	mov    eax,ds:0xe71ad704
  415c8d:	leave  
  415c8e:	test   al,ch
  415c90:	xchg   ecx,eax
  415c91:	or     al,0x53
  415c93:	leave  
  415c94:	jge    0x415c30
  415c96:	(bad)  
  415c97:	cld    
  415c98:	jo     0x415c5d
  415c9a:	cdq    
  415c9b:	rol    BYTE PTR [eax+edx*4+0x207c0869],1
  415ca2:	push   edi
  415ca3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ca4:	adc    dh,BYTE PTR ds:0x908e9077
  415caa:	pop    esp
  415cab:	cmc    
  415cac:	ret    
  415cad:	cmp    DWORD PTR [edi+ebp*2],edx
  415cb0:	lea    ebp,[edi]
  415cb2:	hlt    
  415cb3:	ss aas 
  415cb5:	adc    BYTE PTR [eax],bl
  415cb7:	cld    
  415cb8:	in     al,dx
  415cb9:	sbb    al,0xc1
  415cbb:	(bad)  
  415cbc:	cmp    edi,DWORD PTR [edx-0x40]
  415cbf:	arpl   WORD PTR [ecx-0x56],bx
  415cc2:	push   ebx
  415cc3:	mov    DWORD PTR [ebx+edi*2],edi
  415cc6:	sub    ebp,DWORD PTR [esi-0x58264047]
  415ccc:	jno    0x415c66
  415cce:	stc    
  415ccf:	xchg   ebp,eax
  415cd0:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  415cd2:	xchg   esi,eax
  415cd3:	adc    al,BYTE PTR ds:0xc876dbc1
  415cd9:	call   0x33e21805
  415cde:	(bad)  
  415cdf:	mov    edx,0xbff693f
  415ce4:	or     BYTE PTR [ecx],ch
  415ce6:	stc    
  415ce7:	inc    eax
  415ce8:	jae    0x415ccf
  415cea:	mov    bh,0x33
  415cec:	repz call 0x71d4eba1
  415cf2:	adc    BYTE PTR [ebp-0x10],ah
  415cf5:	leave  
  415cf6:	sub    al,0x2
  415cf8:	mov    edx,0xb955ea52
  415cfd:	sbb    DWORD PTR [eax-0x545862c6],edx
  415d03:	mov    BYTE PTR [ecx-0x1d5122c7],bh
  415d09:	ret    0x174d
  415d0c:	retf   
  415d0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d0e:	or     esp,DWORD PTR [edx+0x53]
  415d11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d12:	or     eax,0xbf074274
  415d17:	dec    ebx
  415d18:	shl    DWORD PTR [edi+edi*1],cl
  415d1b:	lahf   
  415d1c:	xchg   edi,eax
  415d1d:	aas    
  415d1e:	inc    ebx
  415d1f:	lahf   
  415d20:	stos   DWORD PTR es:[edi],eax
  415d21:	gs pop edx
  415d23:	les    esi,FWORD PTR [ecx+0x72701eee]
  415d29:	fld    DWORD PTR fs:0x973f60f7
  415d30:	popf   
  415d31:	or     dl,BYTE PTR [ebp+0x2a]
  415d34:	mov    edi,0x772007aa
  415d39:	out    dx,al
  415d3a:	mov    ecx,0x9a392078
  415d3f:	clc    
  415d40:	sub    al,0xb2
  415d42:	loopne 0x415d52
  415d44:	cmp    ecx,esp
  415d46:	mov    bl,BYTE PTR [esi-0x359c1402]
  415d4c:	xchg   DWORD PTR [esi-0x14971946],ebp
  415d52:	push   ebp
  415d53:	(bad)  
  415d54:	mov    ds:0xe5c148d3,eax
  415d59:	(bad)  
  415d5a:	jle    0x415d4e
  415d5c:	push   esi
  415d5d:	sub    eax,DWORD PTR [ecx]
  415d5f:	aaa    
  415d60:	xchg   ah,cl
  415d62:	and    eax,DWORD PTR [edx-0x54c0f2ec]
  415d68:	jnp    0x415d08
  415d6a:	lods   al,BYTE PTR ds:[esi]
  415d6b:	ds jns 0x415ddb
  415d6e:	pop    esi
  415d6f:	xlat   BYTE PTR ds:[ebx]
  415d70:	push   ss
  415d71:	cwde   
  415d72:	mov    ebp,0x7b7177d6
  415d77:	push   eax
  415d78:	mov    esp,0x5a6b593b
  415d7d:	fist   DWORD PTR [ebx-0x25]
  415d80:	xchg   esp,eax
  415d81:	pop    ebp
  415d82:	xchg   esi,eax
  415d83:	pop    esp
  415d84:	mov    cl,0x68
  415d86:	jp     0x415de7
  415d88:	icebp  
  415d89:	in     eax,dx
  415d8a:	mov    ebx,0x367bdf6d
  415d8f:	push   edx
  415d90:	mov    ds:0x8f2a6ce8,eax
  415d95:	jno    0x415d71
  415d97:	add    ebp,ebp
  415d99:	aam    0x12
  415d9b:	loop   0x415dd3
  415d9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d9e:	jnp    0x415deb
  415da0:	pop    esi
  415da1:	push   0x251293f2
  415da6:	and    esp,DWORD PTR [edx-0x48]
  415da9:	mov    edi,0xa8f2c7f5
  415dae:	out    0xbe,al
  415db0:	add    DWORD PTR [edi],edi
  415db2:	xor    DWORD PTR [ebp-0x7d46a888],ebp
  415db8:	sti    
  415db9:	pusha  
  415dba:	fs xor ecx,ebp
  415dbd:	sti    
  415dbe:	test   al,0x15
  415dc0:	xchg   edi,eax
  415dc1:	cmp    bh,bl
  415dc3:	fcom   st(2)
  415dc5:	test   eax,0x789b6361
  415dca:	clc    
  415dcb:	aaa    
  415dcc:	and    ecx,ebx
  415dce:	retf   0x97e5
  415dd1:	jp     0x415e2b
  415dd3:	shr    ah,0x7c
  415dd6:	mov    bl,0x9a
  415dd8:	dec    ecx
  415dd9:	imul   ebx,DWORD PTR ds:0x9790faab,0xd623a346
  415de3:	adc    DWORD PTR [ebp+0x6a1ab6dd],esi
  415de9:	sbb    BYTE PTR [ebp-0x5f],dh
  415dec:	pop    esp
  415ded:	sbb    al,0x73
  415def:	mov    DWORD PTR [ebx],eax
  415df1:	cwde   
  415df2:	sub    al,0x27
  415df4:	sar    eax,1
  415df6:	inc    esp
  415df7:	mov    WORD PTR [ebx+eax*2],ss
  415dfa:	sbb    edi,ebp
  415dfc:	mov    edi,esp
  415dfe:	xor    bl,BYTE PTR [edx]
  415e00:	dec    eax
  415e01:	les    eax,FWORD PTR [ebx+0x22e2ea57]
  415e07:	das    
  415e08:	cld    
  415e09:	cdq    
  415e0a:	inc    edx
  415e0b:	call   0xae9f:0x4c7799a6
  415e12:	mov    ecx,0x6485622
  415e17:	and    al,0xe9
  415e19:	jmp    0xfae5:0xe0426d06
  415e20:	mov    esp,0x2166ce89
  415e25:	jmp    FWORD PTR [ecx]
  415e27:	ja     0x415e58
  415e29:	in     eax,0x79
  415e2b:	xchg   BYTE PTR [eax],dl
  415e2d:	ficom  DWORD PTR [ebx]
  415e2f:	jns    0x415e75
  415e31:	cwde   
  415e32:	mov    al,ds:0x73cc59f2
  415e37:	pop    es
  415e38:	dec    esi
  415e39:	jns    0x415e1b
  415e3b:	cmp    ch,0xa3
  415e3e:	push   ss
  415e3f:	(bad)  
  415e40:	xchg   esi,eax
  415e41:	fmul   QWORD PTR [esi]
  415e43:	int3   
  415e44:	push   ss
  415e45:	iret   
  415e46:	cmp    BYTE PTR [ecx],bl
  415e48:	scas   eax,DWORD PTR es:[edi]
  415e49:	mov    ds:0x417e4dd2,al
  415e4e:	sti    
  415e4f:	aas    
  415e50:	sbb    eax,esp
  415e52:	leave  
  415e53:	sub    BYTE PTR ds:0xc48fc7c,dh
  415e59:	(bad)  
  415e5a:	add    bl,BYTE PTR [ebx]
  415e5c:	inc    edx
  415e5d:	dec    ebx
  415e5e:	mov    cl,0xa9
  415e60:	fcmovbe st,st(4)
  415e62:	push   esi
  415e63:	pop    edx
  415e64:	cmp    dl,BYTE PTR [ecx+0x4f90d27e]
  415e6a:	out    dx,eax
  415e6b:	cmc    
  415e6c:	(bad)  
  415e6d:	cmc    
  415e6e:	add    eax,0x34265a38
  415e73:	(bad)  
  415e75:	mov    bh,0xae
  415e77:	xor    dl,bl
  415e79:	ficom  WORD PTR [ecx-0xb6519cb]
  415e7f:	in     eax,dx
  415e80:	xchg   edi,eax
  415e81:	test   BYTE PTR [ecx],al
  415e83:	mov    dl,0x47
  415e85:	stc    
  415e86:	mov    DWORD PTR [eax+0x37cadbff],edx
  415e8c:	das    
  415e8d:	in     eax,0xdc
  415e8f:	imul   edx,DWORD PTR [esp+eax*4-0x47],0xfffffffd
  415e94:	sti    
  415e95:	cmc    
  415e96:	pop    ebp
  415e97:	(bad)  
  415e98:	sar    DWORD PTR [edi+0x3f],cl
  415e9b:	sahf   
  415e9c:	imul   esp,DWORD PTR [edi-0x1aaf742a],0x79
  415ea3:	lds    edi,FWORD PTR [esi]
  415ea5:	mov    BYTE PTR [edi],ch
  415ea7:	fdivrp st(3),st
  415ea9:	dec    edx
  415eaa:	test   eax,0xa4090d4e
  415eaf:	loopne 0x415e70
  415eb1:	jecxz  0x415f18
  415eb3:	jl     0x415e93
  415eb5:	lock cmp BYTE PTR [esi+0x138dc5bc],dh
  415ebc:	mov    ah,0x4c
  415ebe:	mul    DWORD PTR [ebp-0x71]
  415ec1:	mov    dl,cl
  415ec3:	popa   
  415ec4:	mov    bh,0x23
  415ec6:	mov    al,ds:0xb40d7683
  415ecb:	stos   DWORD PTR es:[edi],eax
  415ecc:	(bad)  
  415ecd:	xchg   edi,eax
  415ece:	dec    ebp
  415ecf:	jl     0x415f0c
  415ed1:	dec    eax
  415ed2:	(bad)  [ebx+0x3f52f6b9]
  415ed8:	ins    BYTE PTR es:[edi],dx
  415ed9:	add    DWORD PTR [eax+0x17],eax
  415edc:	fs std 
  415ede:	push   ebp
  415edf:	hlt    
  415ee0:	pop    edx
  415ee1:	pop    esi
  415ee2:	jp     0x415f08
  415ee4:	mov    al,ds:0x83ae1eda
  415ee9:	repnz cs ss or eax,0x6e9a4aea
  415ef1:	jae    0x415e85
  415ef3:	push   edx
  415ef4:	(bad)  
  415ef6:	sbb    eax,0x3b552ff4
  415efb:	imul   edx,DWORD PTR [esi-0x72693a03],0x7
  415f02:	inc    esi
  415f03:	scas   al,BYTE PTR es:[edi]
  415f04:	mov    ah,0x50
  415f06:	jp     0x415e90
  415f08:	lahf   
  415f09:	dec    edx
  415f0a:	sbb    BYTE PTR [ecx+eiz*2],bh
  415f0d:	push   edi
  415f0e:	in     al,dx
  415f0f:	cld    
  415f10:	and    BYTE PTR [edi+0x42],ah
  415f13:	in     al,0xdf
  415f15:	sub    DWORD PTR [eax-0x37163bfe],ebp
  415f1b:	jg     0x415f24
  415f1d:	adc    al,0x3b
  415f1f:	sub    DWORD PTR [edx+esi*1+0x4f9a0c79],edi
  415f26:	push   0xffffff92
  415f28:	adc    dl,BYTE PTR [edi-0x1]
  415f2b:	pop    eax
  415f2c:	push   cs
  415f2d:	and    al,0xe8
  415f2f:	xchg   DWORD PTR [edx-0xc],edx
  415f32:	sub    eax,0xb1b91d22
  415f37:	repz sbb ecx,DWORD PTR [edx+0x34]
  415f3b:	in     eax,0x41
  415f3d:	xchg   BYTE PTR [ebp+0x7f],bl
  415f40:	adc    bl,bh
  415f42:	fnstenv [edx+0x5c]
  415f45:	ficomp DWORD PTR [esi]
  415f47:	jp     0x415f67
  415f49:	inc    esi
  415f4a:	clc    
  415f4b:	xchg   ebp,eax
  415f4c:	inc    ebp
  415f4d:	icebp  
  415f4e:	dec    esp
  415f4f:	in     al,0xef
  415f51:	add    DWORD PTR ds:0xf2874e04,edi
  415f57:	mov    ch,0xb7
  415f59:	nop
  415f5a:	mov    eax,ds:0xab6f7475
  415f5f:	rcl    DWORD PTR [edi-0x597e81f5],cl
  415f65:	(bad)  
  415f67:	cmp    BYTE PTR [ebx],bh
  415f69:	gs mov ah,0xf1
  415f6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f6d:	(bad)  
  415f6e:	mov    ah,BYTE PTR [ebx]
  415f70:	cdq    
  415f71:	cli    
  415f72:	jge    0x415f6f
  415f74:	and    al,0xa
  415f76:	and    al,0x4e
  415f78:	xchg   edi,eax
  415f79:	and    ebp,DWORD PTR [ecx]
  415f7b:	adc    al,0xcf
  415f7d:	popa   
  415f7e:	mov    esp,DWORD PTR [eax-0x54]
  415f81:	push   ebx
  415f82:	push   ds
  415f83:	daa    
  415f84:	add    edx,0x32b28252
  415f8a:	adc    DWORD PTR [esi+0x50],eax
  415f8d:	mov    ds:0xf0771bfd,al
  415f92:	cmp    al,0xae
  415f94:	das    
  415f95:	adc    ebp,DWORD PTR [esp+eiz*8+0x64689840]
  415f9c:	push   eax
  415f9d:	mov    edx,0x9e20897b
  415fa2:	(bad)  
  415fa3:	fld    DWORD PTR [ecx]
  415fa5:	push   ecx
  415fa6:	(bad)  
  415fa7:	jp     0x415ffd
  415fa9:	dec    edx
  415faa:	dec    edx
  415fab:	xor    al,0x50
  415fad:	int    0xfe
  415faf:	cmp    bh,BYTE PTR [ecx-0x549288e5]
  415fb5:	mov    ecx,0x4ddf42d4
  415fba:	mul    BYTE PTR [edx+0x6f]
  415fbd:	lds    esp,FWORD PTR [ecx]
  415fbf:	jo     0x416022
  415fc1:	ror    DWORD PTR [edx],cl
  415fc3:	mov    ecx,0x733eb3f0
  415fc8:	dec    edi
  415fc9:	pop    edi
  415fca:	jmp    DWORD PTR [eax-0x6a]
  415fcd:	popf   
  415fce:	jmp    0x4c750e84
  415fd3:	dec    eax
  415fd4:	jae    0x415fb7
  415fd6:	dec    esi
  415fd7:	push   ss
  415fd8:	sub    DWORD PTR ds:0x85ee2,edi
  415fde:	mov    eax,0xda663831
  415fe3:	test   DWORD PTR [ebx+0xa],edi
  415fe6:	jl     0x415fbd
  415fe8:	es push ss
  415fea:	xor    DWORD PTR [ebx-0x4fc06ac],edi
  415ff0:	cmp    DWORD PTR [esp+eax*1],ebp
  415ff3:	sar    BYTE PTR [ecx+0x64],1
  415ff6:	test   BYTE PTR ds:0xc2cf4a6f,dl
  415ffc:	loop   0x416068
  415ffe:	xor    esp,DWORD PTR [esi]
  416000:	es ss push ebp
  416003:	mov    edx,0x3fd60b4d
  416008:	popa   
  416009:	push   edx
  41600a:	xor    eax,0x4f18afd0
  41600f:	dec    ebp
  416010:	and    al,0x9
  416012:	loopne 0x415ffa
  416014:	rcl    dl,1
  416016:	test   BYTE PTR [edi],ah
  416018:	xchg   esi,eax
  416019:	add    al,0x0
  41601b:	into   
  41601c:	push   esi
  41601d:	retf   0xf8c
  416020:	cmp    BYTE PTR [ebx-0x13],0xa7
  416024:	xchg   esi,eax
  416025:	aad    0x97
  416027:	repnz and edi,DWORD PTR [ebx+edx*1-0x1249a5fc]
  41602f:	clc    
  416030:	or     al,0x98
  416032:	dec    edx
  416033:	cmp    BYTE PTR [edi],cl
  416035:	cmp    eax,0x6efaa342
  41603a:	ss retf 
  41603c:	adc    ah,ah
  41603e:	lea    edx,ds:0x68532e0d
  416044:	(bad)  
  416045:	ins    DWORD PTR es:[edi],dx
  416046:	out    dx,al
  416047:	inc    eax
  416048:	mul    DWORD PTR [ebp-0x1a7716bc]
  41604e:	fild   WORD PTR cs:[ebp+0x2b]
  416052:	jmp    0x4160a7
  416054:	or     DWORD PTR [esi+0x79],ebx
  416057:	repz lea edi,[eax]
  41605a:	mov    BYTE PTR [edx-0x6f76cd38],cl
  416060:	push   edx
  416061:	fld    QWORD PTR [edi+0x33]
  416064:	sub    ah,ch
  416066:	add    DWORD PTR [edi-0x4f],ecx
  416069:	jp     0x41604b
  41606b:	adc    DWORD PTR [ebp-0x6],esi
  41606e:	(bad)  
  41606f:	fimul  DWORD PTR [eax]
  416071:	mov    cl,0x5f
  416073:	in     al,0xbf
  416075:	xchg   ebp,eax
  416076:	jmp    0x54a2:0xdfecd70c
  41607d:	and    BYTE PTR [ebx],cl
  41607f:	icebp  
  416080:	push   edx
  416081:	jmp    0x7fe03d8e
  416086:	pop    ds
  416087:	push   esi
  416088:	pop    esp
  416089:	test   DWORD PTR [edx-0x7ac5c425],esp
  41608f:	cmp    ch,bl
  416091:	dec    edi
  416092:	mov    ah,BYTE PTR [ecx+0x56]
  416095:	fwait
  416096:	neg    ebp
  416098:	call   0x3e2cd572
  41609d:	out    dx,eax
  41609e:	sbb    dh,ah
  4160a0:	aaa    
  4160a1:	pop    eax
  4160a2:	cwde   
  4160a3:	mov    al,BYTE PTR [edi-0x429abd21]
  4160a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160aa:	into   
  4160ab:	jnp    0x416090
  4160ad:	ins    DWORD PTR es:[edi],dx
  4160ae:	test   al,0x9c
  4160b0:	iret   
  4160b1:	inc    ecx
  4160b2:	stos   DWORD PTR es:[edi],eax
  4160b3:	mov    ds:0x84a57d36,eax
  4160b8:	(bad)  
  4160b9:	sub    eax,0xfeae445a
  4160be:	or     eax,0x37118911
  4160c3:	fcmovnb st,st(6)
  4160c5:	push   0x18
  4160c7:	adc    DWORD PTR [eax-0x5c],edi
  4160ca:	fidiv  DWORD PTR [eax]
  4160cc:	jae    0x416084
  4160ce:	adc    eax,0x4331a473
  4160d3:	in     al,dx
  4160d4:	repz sbb DWORD PTR [ecx],esi
  4160d7:	mov    dl,0x35
  4160d9:	ficom  WORD PTR [ecx+edi*1-0x7c]
  4160dd:	push   eax
  4160de:	push   0x4d
  4160e0:	mov    esp,0x2b03afa3
  4160e5:	cmp    al,0xcb
  4160e7:	mov    ebp,0xa08f8463
  4160ec:	retf   
  4160ed:	adc    al,bl
  4160ef:	(bad)  
  4160f1:	adc    cl,BYTE PTR [eax-0x45ec3877]
  4160f7:	mov    ds:0x2faf109e,eax
  4160fc:	push   esp
  4160fd:	out    0x80,al
  4160ff:	aam    0xf4
  416101:	(bad)  
  416102:	pop    esp
  416103:	out    dx,eax
  416104:	dec    ebp
  416105:	push   ecx
  416106:	sti    
  416107:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416108:	jo     0x4160a6
  41610a:	pushf  
  41610b:	cwde   
  41610c:	and    ecx,ecx
  41610e:	frstor [ebx]
  416110:	xor    eax,0xa447d23e
  416115:	fcomip st,st(0)
  416117:	adc    al,0x57
  416119:	test   BYTE PTR [edx+0x44502e7],ah
  41611f:	aad    0xd
  416121:	pop    ss
  416122:	sti    
  416123:	cmp    al,0x1a
  416125:	add    eax,0xa687a8ca
  41612a:	sbb    DWORD PTR [eax-0x4e7c6155],edi
  416130:	imul   ebp,DWORD PTR [edi],0x3ea2d568
  416136:	push   ss
  416137:	cmp    al,0x58
  416139:	push   cs
  41613a:	retf   0xe61b
  41613d:	or     eax,0x846085dd
  416142:	mov    esi,0x3a30a8f1
  416147:	pop    esp
  416148:	jecxz  0x4161bc
  41614a:	in     al,0x49
  41614c:	or     al,0x14
  41614e:	push   esp
  41614f:	xlat   BYTE PTR ds:[ebx]
  416150:	pop    edx
  416151:	cwde   
  416152:	and    DWORD PTR [ebp-0x3b],0xffffffb5
  416156:	out    dx,al
  416157:	sbb    al,0xce
  416159:	aam    0xe1
  41615b:	dec    eax
  41615c:	addr16 dec eax
  41615e:	cmc    
  41615f:	xchg   edx,eax
  416160:	fbstp  TBYTE PTR [esi-0x1b]
  416163:	mov    al,ds:0x7199c565
  416168:	and    al,0x90
  41616a:	sahf   
  41616b:	int    0x21
  41616d:	into   
  41616e:	add    eax,DWORD PTR [esi-0x58]
  416171:	xchg   ecx,eax
  416172:	jecxz  0x416120
  416174:	sbb    ebp,DWORD PTR [ebx-0x28]
  416177:	das    
  416178:	pop    ebx
  416179:	pop    ss
  41617a:	loopne 0x416121
  41617c:	in     eax,dx
  41617d:	xchg   esp,eax
  41617e:	xchg   esi,eax
  41617f:	push   ebp
  416180:	lods   eax,DWORD PTR ds:[esi]
  416181:	push   0x62
  416183:	inc    ebx
  416184:	cdq    
  416185:	xor    ah,dl
  416187:	jnp    0x416140
  416189:	arpl   di,dx
  41618b:	adc    BYTE PTR [ecx-0x2c],bl
  41618e:	add    DWORD PTR [esi+0x27],ebx
  416191:	or     cl,dh
  416193:	mov    ds,WORD PTR [ecx]
  416195:	(bad)  
  416196:	std    
  416197:	pop    edi
  416198:	add    eax,DWORD PTR [ebp+0x219cb59d]
  41619e:	xor    ah,BYTE PTR ds:0x2cc5f22f
  4161a4:	sbb    DWORD PTR [ebp+0x39],ebx
  4161a7:	dec    ebp
  4161a8:	or     BYTE PTR [edx-0x74],al
  4161ab:	mov    cl,0x68
  4161ad:	and    BYTE PTR [eax+ebx*8],dh
  4161b0:	inc    esi
  4161b1:	xor    esi,ebp
  4161b3:	add    DWORD PTR [ecx],edx
  4161b5:	and    BYTE PTR [edx+0x48],bl
  4161b8:	cs push ecx
  4161ba:	xlat   BYTE PTR ds:[ebx]
  4161bb:	add    BYTE PTR [ebp-0x43],0x32
  4161bf:	je     0x4161e1
  4161c1:	cwde   
  4161c2:	popf   
  4161c3:	xchg   dh,al
  4161c5:	mov    eax,ds:0x5b434fd6
  4161ca:	mov    BYTE PTR [eax],al
  4161cc:	scas   al,BYTE PTR es:[edi]
  4161cd:	dec    edi
  4161ce:	xchg   edx,eax
  4161cf:	cs dec edx
  4161d1:	push   esi
  4161d2:	aaa    
  4161d3:	aam    0x15
  4161d5:	mov    ch,0x9b
  4161d7:	mov    esi,0x4645af04
  4161dc:	fwait
  4161dd:	xchg   edx,eax
  4161de:	sbb    DWORD PTR [esi-0x2],ecx
  4161e1:	ss aaa 
  4161e3:	pop    esp
  4161e4:	adc    BYTE PTR [ebp+0x3e227698],dh
  4161ea:	int3   
  4161eb:	repz int 0xab
  4161ee:	xchg   esp,eax
  4161f0:	jmp    0x4161fd
  4161f2:	adc    bl,BYTE PTR [ebp+0x14]
  4161f5:	sub    cl,dl
  4161f7:	mov    ch,BYTE PTR [ecx]
  4161f9:	scas   al,BYTE PTR es:[edi]
  4161fa:	jnp    0x416273
  4161fc:	ret    0x7f54
  4161ff:	inc    esi
  416200:	retf   0x2017
  416203:	inc    ebx
  416204:	xlat   BYTE PTR ds:[ebx]
  416205:	jo     0x416257
  416207:	and    bl,BYTE PTR [edi]
  416209:	test   eax,0x851aff3b
  41620e:	(bad)  
  41620f:	mov    ebx,0xa8d105e
  416214:	lods   al,BYTE PTR ds:[esi]
  416215:	jge    0x41625f
  416217:	sbb    BYTE PTR [eax+0x4eae3abe],0xe
  41621e:	sub    DWORD PTR [edx+esi*1-0x5c],edi
  416222:	out    0x69,al
  416224:	cmp    eax,0xc3b39a8c
  416229:	push   edx
  41622a:	ss scas al,BYTE PTR es:[edi]
  41622c:	xchg   edi,eax
  41622d:	mov    ah,0x1a
  41622f:	or     BYTE PTR [eax],ch
  416231:	jb     0x41626b
  416233:	mov    bh,0xa6
  416235:	fmul   QWORD PTR ds:0x2458778f
  41623b:	adc    esi,DWORD PTR [ebp-0xb]
  41623e:	jecxz  0x416274
  416240:	mov    cl,0x8a
  416242:	cdq    
  416243:	xchg   esi,eax
  416244:	leave  
  416245:	sub    al,0x89
  416247:	and    ebx,DWORD PTR [esi-0xae6fb08]
  41624d:	imul   edi,DWORD PTR [ecx-0x6c],0xffffffb7
  416251:	xlat   BYTE PTR ds:[ebx]
  416252:	mov    ebp,eax
  416254:	sbb    al,0x16
  416256:	in     eax,0x2c
  416258:	jge    0x4161fd
  41625a:	mov    ds:0xd38a858e,al
  41625f:	mov    dl,0xbe
  416261:	xlat   BYTE PTR ds:[ebx]
  416262:	mov    al,ds:0xd088ef0a
  416267:	in     al,dx
  416268:	mov    WORD PTR [eax-0x5],?
  41626b:	add    BYTE PTR [edi-0x604ceac0],ch
  416271:	in     al,dx
  416272:	aam    0xae
  416274:	push   ebx
  416275:	push   0xffffffc2
  416277:	push   es
  416278:	mov    WORD PTR [esi+0x495584dd],ds
  41627e:	pop    ebp
  41627f:	test   al,0x75
  416281:	xor    edx,DWORD PTR [ecx]
  416283:	cld    
  416284:	xchg   edx,eax
  416285:	pop    eax
  416286:	mov    bh,0x53
  416288:	icebp  
  416289:	fistp  DWORD PTR [ebx+0xa]
  41628c:	in     al,0x73
  41628e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41628f:	clc    
  416290:	retf   0x5e2e
  416293:	fld    DWORD PTR [eax+0x53fda750]
  416299:	mov    eax,fs:0xe428a15e
  41629f:	call   0xa58d:0x8c9c153a
  4162a6:	and    al,0x91
  4162a8:	xor    dl,dh
  4162aa:	push   eax
  4162ab:	aam    0x2
  4162ad:	daa    
  4162ae:	dec    edi
  4162af:	inc    esp
  4162b0:	pushf  
  4162b1:	sbb    DWORD PTR [esi+0x5cf2792d],esi
  4162b7:	aam    0x92
  4162b9:	sbb    eax,0xae6e761c
  4162be:	push   ebx
  4162bf:	adc    al,0x81
  4162c1:	(bad)  
  4162c2:	das    
  4162c3:	out    0x76,al
  4162c5:	add    DWORD PTR [edx],ebp
  4162c7:	xlat   BYTE PTR ds:[ebx]
  4162c8:	(bad)  
  4162c9:	cld    
  4162ca:	iret   
  4162cb:	xor    DWORD PTR [edi+ecx*2],esp
  4162ce:	dec    ebp
  4162cf:	test   BYTE PTR gs:[edi+0x1c76c501],ah
  4162d6:	addr16 sbb cl,bl
  4162d9:	repnz clc 
  4162db:	inc    ebp
  4162dc:	mov    BYTE PTR [eax-0x4a82ae59],al
  4162e2:	dec    ebp
  4162e3:	sbb    DWORD PTR ds:0x438bd5e5,0xed9e6473
  4162ed:	lods   eax,DWORD PTR ds:[esi]
  4162ee:	cmp    esi,DWORD PTR [eax+0x5c]
  4162f1:	rcr    ecx,1
  4162f3:	aas    
  4162f4:	adc    dh,BYTE PTR [esi+ebp*1]
  4162f7:	and    BYTE PTR [ebx-0x3e56944f],bl
  4162fd:	push   ds
  4162fe:	sub    esp,DWORD PTR [esi+0x975cc68]
  416304:	js     0x4162c2
  416306:	mov    cl,0xb3
  416308:	sbb    ch,dh
  41630a:	fidiv  WORD PTR [ebp+0x33]
  41630d:	scas   eax,DWORD PTR es:[edi]
  41630e:	fisubr WORD PTR [eax]
  416310:	mov    al,ds:0xff7f5c35
  416315:	dec    ecx
  416316:	jns    0x41637e
  416318:	push   ecx
  416319:	lahf   
  41631a:	in     al,0x4c
  41631c:	and    eax,0x190cd6e6
  416321:	or     BYTE PTR [ecx],dh
  416323:	loop   0x416346
  416325:	push   edx
  416326:	pop    edx
  416327:	sub    eax,0x7ee1ca83
  41632c:	xchg   edi,eax
  41632d:	icebp  
  41632e:	sub    al,0x90
  416330:	pop    edi
  416331:	les    esp,FWORD PTR [ecx+0x51]
  416334:	jae    0x41635a
  416336:	mov    ds:0xcc7518d5,al
  41633b:	xchg   esp,eax
  41633c:	leave  
  41633d:	loope  0x4163b4
  41633f:	rol    DWORD PTR [edx-0xf],1
  416342:	fwait
  416343:	mov    al,ds:0x3f70b222
  416348:	outs   dx,BYTE PTR ds:[esi]
  416349:	test   BYTE PTR [edx+ebx*8+0x3d4cf312],cl
  416350:	stos   BYTE PTR es:[edi],al
  416351:	push   edx
  416352:	mov    es,esi
  416354:	bound  ecx,QWORD PTR [eax+0x37a6a620]
  41635a:	pop    ds
  41635b:	xchg   ecx,eax
  41635c:	cmc    
  41635d:	jg     0x416309
  41635f:	sahf   
  416360:	inc    eax
  416361:	aad    0x8e
  416363:	ins    BYTE PTR es:[edi],dx
  416364:	leave  
  416365:	xchg   DWORD PTR gs:[ecx],edx
  416368:	or     eax,0x348e552b
  41636d:	repz call 0xaad1:0xe3e16d2f
  416375:	and    eax,0x4c269a2a
  41637a:	inc    edi
  41637b:	mov    ebp,0x1bd54d1f
  416380:	add    BYTE PTR [eax+eiz*1],0x59
  416384:	mov    esp,0xa3b52072
  416389:	jb     0x4163bc
  41638b:	sub    ebx,DWORD PTR [edx-0x16]
  41638e:	mov    esp,0x4f712bf5
  416393:	jae    0x41637d
  416395:	mov    WORD PTR [esi+0x4148792a],gs
  41639b:	adc    DWORD PTR [edx+0x5e],eax
  41639e:	int    0x28
  4163a0:	loop   0x41633f
  4163a2:	sbb    esp,DWORD PTR [ebx-0x6]
  4163a5:	es repnz inc esi
  4163a8:	ds out 0xd8,al
  4163ab:	sub    al,0x1d
  4163ad:	jge    0x416340
  4163af:	push   ds
  4163b0:	xchg   edi,eax
  4163b1:	dec    esp
  4163b2:	cmp    DWORD PTR [esi-0x78],ecx
  4163b5:	cmp    ah,ah
  4163b7:	pushf  
  4163b8:	leave  
  4163b9:	lea    edi,[ebp-0x1c]
  4163bc:	xchg   ch,cl
  4163be:	jo     0x416389
  4163c0:	fcomp  QWORD PTR [esi-0x2f14cd95]
  4163c6:	lea    edx,[edi+0x22df9bd0]
  4163cc:	xchg   BYTE PTR [ecx+ebp*2+0x1a],dh
  4163d0:	mov    ebx,DWORD PTR [edx]
  4163d2:	into   
  4163d3:	dec    ebx
  4163d4:	hlt    
  4163d5:	pop    edi
  4163d6:	dec    edi
  4163d7:	push   cs
  4163d8:	sar    DWORD PTR [edx+0x45543d48],cl
  4163de:	ins    BYTE PTR es:[edi],dx
  4163df:	mov    eax,ds:0xbeff9f3f
  4163e4:	ja     0x416399
  4163e6:	add    DWORD PTR [esi-0x65],ebp
  4163e9:	(bad)  
  4163ea:	out    0x3a,al
  4163ec:	push   es
  4163ed:	jmp    0xae0c:0x2f44260f
  4163f4:	push   ss
  4163f5:	sbb    BYTE PTR [edi-0x40],ah
  4163f8:	mov    edx,0x7ebdc306
  4163fd:	out    0xa1,eax
  4163ff:	sbb    al,0xe
  416401:	mov    BYTE PTR [ecx],dh
  416403:	out    dx,al
  416404:	in     al,dx
  416405:	iret   
  416406:	pusha  
  416407:	add    al,BYTE PTR [edi]
  416409:	push   0xffffffa2
  41640b:	xchg   ecx,eax
  41640c:	fs sti 
  41640e:	mov    fs,WORD PTR [eax]
  416410:	sub    al,0xe5
  416412:	hlt    
  416413:	pop    ss
  416414:	pushf  
  416415:	xchg   esp,eax
  416416:	ds jg  0x4163ff
  416419:	push   0xffffffd6
  41641b:	shrd   DWORD PTR [esi+esi*2+0xb],edi,0x12
  416421:	lods   al,BYTE PTR ds:[esi]
  416422:	ret    
  416423:	pop    ss
  416424:	push   0xcfb04a08
  416429:	mov    eax,0xd307bd9a
  41642e:	fucomp st(7)
  416430:	test   eax,0xbcb532e4
  416435:	pop    esp
  416436:	lods   eax,DWORD PTR ds:[esi]
  416437:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416438:	cmc    
  416439:	fmul   QWORD PTR [edi-0x20]
  41643c:	mov    dh,0x6a
  41643e:	scas   al,BYTE PTR es:[edi]
  41643f:	mov    al,ds:0x75b9dd83
  416444:	jle    0x416408
  416446:	repz adc DWORD PTR [ebp-0x54],edi
  41644a:	stos   DWORD PTR es:[edi],eax
  41644b:	sub    BYTE PTR ss:[edx],al
  41644e:	xor    DWORD PTR [ecx-0x24],edx
  416451:	popf   
  416452:	repnz inc edi
  416454:	popf   
  416455:	mov    ds:0x2bbb12e8,eax
  41645a:	and    DWORD PTR [edi],eax
  41645c:	ins    DWORD PTR es:[edi],dx
  41645d:	call   0x1aad:0x72fe47e5
  416464:	dec    DWORD PTR [eax-0x7c5995bb]
  41646a:	and    eax,0xaa5b9d0
  41646f:	mov    ebp,0xaf899082
  416474:	inc    eax
  416475:	es push 0xfffffff2
  416478:	pop    eax
  416479:	mov    al,0xa9
  41647b:	cs pop edi
  41647d:	jmp    0x9fe77fa2
  416482:	and    DWORD PTR [esi],0xcc97cca5
  416488:	iret   
  416489:	jne    0x416505
  41648b:	adc    eax,0x6f8e43f9
  416490:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416491:	in     eax,dx
  416492:	jmp    0x7f9b:0xa1c6d2b1
  416499:	jo     0x416433
  41649b:	hlt    
  41649c:	sar    BYTE PTR [esi+0x4eb5a135],cl
  4164a2:	fwait
  4164a3:	call   0x2530b24a
  4164a8:	adc    al,0x62
  4164aa:	mov    BYTE PTR [ebx],bh
  4164ac:	in     al,0xb
  4164ae:	pop    ebx
  4164af:	mov    edi,0x6aad316d
  4164b4:	ins    BYTE PTR es:[edi],dx
  4164b5:	jbe    0x416441
  4164b7:	call   0x719c9121
  4164bc:	or     cl,bl
  4164be:	jbe    0x416482
  4164c0:	dec    ebp
  4164c1:	xchg   ecx,eax
  4164c2:	jb     0x416466
  4164c4:	inc    ebp
  4164c5:	cwde   
  4164c6:	pmullw mm7,QWORD PTR [ecx+0x7a1b6b96]
  4164cd:	cmp    dl,al
  4164cf:	sub    DWORD PTR [ebx+0xbe81e47],ebp
  4164d5:	into   
  4164d6:	xchg   edx,eax
  4164d7:	jae    0x416485
  4164d9:	add    edi,edi
  4164db:	loop   0x4164a5
  4164dd:	and    DWORD PTR [ecx+edx*4+0x3],edx
  4164e1:	imul   ebx,DWORD PTR [edi-0x15],0xd2cbb05f
  4164e8:	adc    DWORD PTR [ebx+0x51afcb64],ecx
  4164ee:	mov    ch,0x5b
  4164f0:	cs cmp eax,0x84d5813c
  4164f6:	jmp    0x913c2a0d
  4164fb:	stc    
  4164fc:	inc    edi
  4164fd:	ds (bad) 
  4164ff:	cwde   
  416500:	adc    ebp,ebp
  416502:	js     0x416486
  416504:	loopne 0x4164aa
  416506:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416507:	repz jo 0x41652f
  41650a:	imul   ebx,ebp,0x6c
  41650d:	out    0xfa,al
  41650f:	push   esp
  416510:	fdivr  DWORD PTR [edi-0x3c89a948]
  416516:	(bad)
  41651a:	loop   0x416532
  41651c:	outs   dx,BYTE PTR ds:[esi]
  41651d:	retf   
  41651e:	cli    
  41651f:	dec    ebp
  416520:	fild   WORD PTR [edx]
  416522:	dec    ecx
  416523:	jae    0x416530
  416525:	add    dh,dl
  416527:	addr16 jb 0x416599
  41652a:	sbb    ch,BYTE PTR [esp+edi*8-0x7be6363b]
  416531:	and    eax,DWORD PTR [ebx+0x1c]
  416534:	out    0xb1,eax
  416536:	leave  
  416537:	std    
  416538:	pop    ecx
  416539:	dec    ebp
  41653a:	adc    eax,0xd6ce6294
  41653f:	fidiv  DWORD PTR [eax+esi*2]
  416542:	jge    0x416557
  416544:	adc    ch,bl
  416546:	mov    bh,0xf4
  416548:	xor    bh,BYTE PTR [ebx-0x39e7757f]
  41654e:	sub    DWORD PTR gs:[ebx+0xb],ebx
  416552:	xchg   edx,eax
  416553:	dec    eax
  416554:	loope  0x416543
  416556:	jne    0x416536
  416558:	loop   0x416555
  41655a:	mov    ds:0xf4602c94,eax
  41655f:	mov    edx,0xfc7ff82e
  416564:	fild   DWORD PTR [ebx+0x21]
  416567:	dec    eax
  416568:	mov    ah,0x24
  41656a:	repz mov ch,0xe8
  41656d:	add    edi,0xffffffbc
  416570:	scas   al,BYTE PTR es:[edi]
  416571:	les    ebx,FWORD PTR [edi-0x72]
  416574:	pusha  
  416575:	jmp    0x4165ce
  416577:	ror    DWORD PTR [edi-0x6c],0x3d
  41657b:	xchg   esp,eax
  41657c:	aas    
  41657d:	ds popf 
  41657f:	mov    ah,0x9e
  416581:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416582:	xchg   ebx,eax
  416583:	add    BYTE PTR [esi-0x52b297e],dh
  416589:	jp     0x416524
  41658b:	retf   0xbcd1
  41658e:	mov    edx,ebx
  416590:	cmp    DWORD PTR [ecx+0x5fdaa75e],esp
  416596:	cdq    
  416597:	pop    edi
  416598:	mov    ebp,0xa56aef3
  41659d:	sbb    edi,DWORD PTR [esp+edx*8+0x41]
  4165a1:	xor    DWORD PTR [eax-0x55143b0b],esi
  4165a7:	mov    eax,0x2617db95
  4165ac:	mov    dh,0x19
  4165ae:	cmp    bl,ah
  4165b0:	sahf   
  4165b1:	push   edi
  4165b2:	jbe    0x41656c
  4165b4:	and    al,0x2d
  4165b6:	push   0xfffffffa
  4165b8:	mov    DWORD PTR [edi],ecx
  4165ba:	int3   
  4165bb:	aas    
  4165bc:	cmp    BYTE PTR [eax-0x19],cl
  4165bf:	retf   
  4165c0:	dec    ebx
  4165c1:	and    DWORD PTR fs:[ecx-0x468d9b97],ecx
  4165c8:	jns    0x4165fb
  4165ca:	jmp    0x95f6:0xc7096900
  4165d1:	mov    edx,0x33b12860
  4165d6:	out    0x0,al
  4165d8:	cmp    DWORD PTR [edx],esi
  4165da:	hlt    
  4165db:	(bad)  
  4165dc:	mov    ecx,0x3cf3f78e
  4165e1:	outs   dx,DWORD PTR ds:[esi]
  4165e2:	push   ebp
  4165e3:	stos   BYTE PTR es:[di],al
  4165e5:	push   0xf
  4165e7:	jge    0x4165e7
  4165e9:	cmp    ch,bh
  4165eb:	push   esp
  4165ec:	pop    edi
  4165ed:	stc    
  4165ee:	push   ds
  4165ef:	out    0xa0,al
  4165f1:	fwait
  4165f2:	jnp    0x4165b3
  4165f4:	add    eax,0xcf78529f
  4165f9:	test   eax,0x37f67a7c
  4165fe:	cli    
  4165ff:	lods   al,BYTE PTR ds:[esi]
  416600:	aam    0xa2
  416602:	push   edi
  416603:	add    eax,0xa040a1f1
  416608:	cmp    al,0xa0
  41660a:	jge    0x416606
  41660c:	int    0x71
  41660e:	clc    
  41660f:	fwait
  416610:	add    al,0xe6
  416612:	(bad)  
  416613:	sub    al,0xba
  416615:	cmp    eax,0x19e2722c
  41661a:	call   0x1617a207
  41661f:	adc    ch,BYTE PTR [edx+0x341dde29]
  416625:	cmp    al,0xba
  416627:	sahf   
  416628:	dec    ebx
  416629:	mov    eax,ds:0xb7a5740
  41662e:	js     0x4165cb
  416630:	daa    
  416631:	loopne 0x416683
  416633:	inc    ecx
  416634:	push   esi
  416635:	xchg   edi,eax
  416636:	inc    ebp
  416637:	iret   
  416638:	dec    edi
  416639:	(bad)  
  41663a:	fcmovu st,st(1)
  41663c:	cli    
  41663d:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41663f:	inc    edi
  416640:	push   0x17
  416642:	push   ebx
  416643:	sbb    ebp,DWORD PTR [ebx+0x32f0157b]
  416649:	pop    ebp
  41664a:	xchg   DWORD PTR [ebx+edi*1-0x10],edx
  41664e:	dec    esp
  41664f:	xchg   ebx,eax
  416650:	sub    eax,0xcf8e22bf
  416655:	add    eax,0xf751f942
  41665a:	and    al,0x65
  41665c:	aas    
  41665d:	pop    edx
  41665e:	mov    gs,WORD PTR [ebp+0x5e]
  416661:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416662:	fcmovb st,st(6)
  416664:	xchg   ebp,eax
  416665:	std    
  416666:	in     al,dx
  416667:	inc    esi
  416668:	push   eax
  416669:	in     al,dx
  41666a:	mov    cl,0xfe
  41666c:	js     0x4166b1
  41666e:	adc    bl,dl
  416670:	pushf  
  416671:	sbb    al,0xf0
  416673:	dec    esi
  416674:	add    DWORD PTR [edx],ebp
  416676:	push   ecx
  416677:	and    DWORD PTR [esi+0x2f5b4140],0x2d
  41667e:	ds imul esi,edx,0x8cccc0a0
  416685:	inc    ebx
  416687:	mov    ecx,0x713de90b
  41668c:	dec    edi
  41668d:	repnz sbb edi,DWORD PTR [ebp-0x14ea8201]
  416694:	or     eax,0xfc97bc86
  416699:	sub    esi,DWORD PTR [edi]
  41669b:	add    ebx,eax
  41669d:	sbb    dl,BYTE PTR [esi+0x50]
  4166a0:	data16 xor cl,0x3c
  4166a4:	or     BYTE PTR [ebx+0x1474c39d],dh
  4166aa:	jno    0x416694
  4166ac:	das    
  4166ad:	xchg   ecx,eax
  4166ae:	cs jne 0x41663c
  4166b1:	cdq    
  4166b2:	int3   
  4166b3:	call   0xf2a9914f
  4166b8:	mov    al,0x17
  4166ba:	cld    
  4166bb:	pop    esi
  4166bc:	push   cs
  4166bd:	mov    esp,0x93830cb8
  4166c2:	push   ebx
  4166c3:	xchg   ebx,eax
  4166c4:	jg     0x416702
  4166c6:	test   al,0x8
  4166c8:	cwde   
  4166c9:	push   cs
  4166ca:	ins    BYTE PTR es:[edi],dx
  4166cb:	jnp    0x4166df
  4166cd:	mov    bl,0xbf
  4166cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4166d0:	sbb    DWORD PTR [ecx-0x3b],ecx
  4166d3:	mov    WORD PTR [ebx+0x5a],?
  4166d6:	call   0x3065:0xade5e8e9
  4166dd:	push   ss
  4166de:	cdq    
  4166df:	xor    al,0xba
  4166e1:	mov    ecx,0x44170fed
  4166e6:	mov    bh,0x5c
  4166e8:	popa   
  4166e9:	loope  0x4166e0
  4166eb:	inc    esi
  4166ec:	sbb    ebx,DWORD PTR [ecx+0x5f82e71a]
  4166f2:	cld    
  4166f3:	mov    bh,0xf1
  4166f5:	rcl    edi,1
  4166f7:	cmp    DWORD PTR [ebx+eiz*1+0x41ee7311],0xffffff83
  4166ff:	mov    esi,0xebd325bb
  416704:	dec    edx
  416705:	pop    ebx
  416706:	sub    DWORD PTR [ecx-0x3c5cc880],ebp
  41670c:	test   al,0x40
  41670e:	ja     0x4166c0
  416710:	jge    0x416787
  416712:	xor    eax,0x9eac41d5
  416717:	iret   
  416718:	mov    ch,0x3f
  41671a:	sub    eax,0x715f5149
  41671f:	xchg   esi,eax
  416720:	dec    esp
  416721:	fistp  WORD PTR [edx-0xd]
  416724:	xchg   ebx,eax
  416725:	or     BYTE PTR ds:0x131e28f0,dl
  41672b:	lods   eax,DWORD PTR ds:[esi]
  41672c:	add    eax,0x70f75ff0
  416731:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416732:	shl    esp,1
  416734:	push   esi
  416735:	mov    ecx,0x2f41a5e1
  41673a:	loopne 0x4167bb
  41673c:	loopne 0x416727
  41673e:	jmp    0x43bf:0x307be8bc
  416745:	xchg   ecx,eax
  416746:	daa    
  416747:	les    esi,FWORD PTR [edx+0x50]
  41674a:	jnp    0x4167b8
  41674c:	adc    bh,BYTE PTR [esi]
  41674e:	mov    eax,0xe17d7386
  416753:	push   ebp
  416754:	pop    edx
  416755:	add    DWORD PTR [edx],ebp
  416757:	adc    ebp,DWORD PTR [edi]
  416759:	adc    al,dh
  41675b:	adc    esp,ebp
  41675d:	mov    ah,0x70
  41675f:	add    BYTE PTR [esi],ah
  416761:	or     eax,0x918208fc
  416766:	retf   0x90d
  416769:	popa   
  41676a:	xchg   ebx,eax
  41676b:	mov    bh,0x79
  41676d:	mov    dl,0x4f
  41676f:	sub    al,0xd1
  416771:	out    dx,eax
  416772:	aad    0xc1
  416774:	mov    WORD PTR [esi-0x113e71eb],ds
  41677a:	or     edx,DWORD PTR [edx]
  41677c:	mov    ebp,0xf2c68f6b
  416781:	cld    
  416782:	repnz std 
  416784:	inc    ebx
  416785:	lods   al,BYTE PTR ds:[esi]
  416786:	out    dx,eax
  416787:	and    DWORD PTR [edx+ecx*2-0x78d46a76],esi
  41678e:	inc    eax
  41678f:	and    al,0x9f
  416791:	pop    eax
  416792:	jp     0x416794
  416794:	push   ecx
  416795:	add    al,0x0
  416797:	int3   
  416798:	repnz push edx
  41679a:	adc    eax,0x911c79d9
  41679f:	push   ds
  4167a0:	mov    ds:0x8ee5c06,al
  4167a5:	lods   eax,DWORD PTR ds:[esi]
  4167a6:	xchg   ecx,eax
  4167a7:	pop    eax
  4167a8:	ins    DWORD PTR es:[edi],dx
  4167a9:	fs call 0xd65dcdbc
  4167af:	iret   
  4167b0:	mov    al,ds:0xc9b9c5f3
  4167b5:	enter  0xca50,0x8a
  4167b9:	jmp    0x5891:0xe3f9adcf
  4167c0:	mov    esp,0x631d48c3
  4167c5:	and    DWORD PTR [ecx+0x36b9191e],ebp
  4167cb:	fidiv  WORD PTR [ebx-0x3f]
  4167ce:	push   esi
  4167cf:	or     eax,0xf5cdda31
  4167d4:	add    ebx,edi
  4167d6:	inc    esi
  4167d7:	mov    DWORD PTR [eax],esi
  4167d9:	sbb    bl,BYTE PTR [ecx-0x71]
  4167dc:	sbb    bl,BYTE PTR [edi]
  4167de:	cmp    eax,0xaa2c66bc
  4167e3:	sti    
  4167e4:	mov    bl,0xe1
  4167e6:	int    0x49
  4167e8:	dec    ebp
  4167e9:	and    edi,edi
  4167eb:	ds inc ecx
  4167ed:	fsubr  st,st(7)
  4167ef:	test   DWORD PTR [edi+0x2f],ebx
  4167f2:	(bad)  
  4167f3:	and    al,0x95
  4167f5:	sub    al,BYTE PTR [ebx-0x5a139b70]
  4167fb:	repz jle 0x4167ac
  4167fe:	test   eax,0xe0261c8d
  416803:	push   es
  416804:	and    al,0xb7
  416806:	rep lods al,BYTE PTR ds:[esi]
  416808:	aam    0xa5
  41680a:	jmp    DWORD PTR [ebp-0x16]
  41680d:	int3   
  41680e:	loop   0x416796
  416810:	add    DWORD PTR [edi+0x1498877],ecx
  416816:	push   eax
  416817:	xor    DWORD PTR ds:0x978eae7a,edx
  41681d:	(bad)  
  41681e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41681f:	sbb    BYTE PTR ds:0x7ee68679,ah
  416825:	mov    eax,ds:0x8963ef08
  41682a:	sub    al,0x9c
  41682c:	aas    
  41682d:	cld    
  41682e:	mov    DWORD PTR [ecx+esi*4],esp
  416831:	mov    ebp,DWORD PTR [edx+0x13]
  416834:	push   esi
  416835:	and    ecx,DWORD PTR ds:0xf116764c
  41683b:	mov    bh,0x6e
  41683d:	sub    dh,BYTE PTR [ecx+0x1a]
  416840:	or     eax,0x4b572ea4
  416845:	pop    ebp
  416846:	add    DWORD PTR [eax-0x58],edx
  416849:	(bad)  
  41684a:	xchg   ecx,eax
  41684b:	mov    ch,0x8
  41684d:	pop    ds
  41684e:	ret    
  41684f:	into   
  416850:	mov    eax,0xcf2f0cf4
  416855:	inc    ebp
  416856:	ds mov al,0x61
  416859:	xor    al,0xc
  41685b:	(bad)  
  41685c:	push   edx
  41685d:	div    DWORD PTR [eax]
  41685f:	push   ebx
  416860:	inc    ebx
  416861:	cmc    
  416862:	add    ecx,DWORD PTR [ecx]
  416864:	jbe    0x4167f2
  416866:	or     al,0x2e
  416868:	xor    BYTE PTR [edx],bh
  41686a:	out    0x5f,al
  41686c:	(bad)  
  41686d:	mov    ebp,0x4d9ae2e6
  416872:	sbb    al,0xd7
  416874:	stc    
  416875:	fsub   QWORD PTR [edi+0x13c025f4]
  41687b:	lods   al,BYTE PTR ds:[esi]
  41687c:	add    dh,dh
  41687e:	mov    cl,0xe7
  416880:	in     al,0x9
  416882:	aas    
  416883:	jle    0x416833
  416885:	js     0x4168a4
  416887:	cmp    ebp,DWORD PTR ds:0xa25815cd
  41688d:	fwait
  41688e:	das    
  41688f:	pusha  
  416890:	xor    eax,0x9bd754e0
  416895:	pop    ebp
  416896:	inc    esi
  416897:	and    al,0x81
  416899:	test   BYTE PTR [ebx+0x54],al
  41689c:	xchg   esi,eax
  41689d:	push   ebp
  41689e:	push   ebx
  41689f:	mov    eax,0xb2af420c
  4168a4:	ins    BYTE PTR es:[edi],dx
  4168a5:	icebp  
  4168a6:	mov    bl,0x96
  4168a8:	in     eax,dx
  4168a9:	cmp    DWORD PTR [edi-0x6f],ecx
  4168ac:	and    esp,0x0
  4168af:	and    BYTE PTR [ecx],bh
  4168b1:	icebp  
  4168b2:	rcr    DWORD PTR [ebp-0x56],cl
  4168b5:	mov    bh,0xfc
  4168b7:	dec    ebx
  4168b8:	ins    DWORD PTR es:[edi],dx
  4168b9:	sub    al,0x20
  4168bb:	lahf   
  4168bc:	loop   0x416929
  4168be:	neg    ecx
  4168c0:	and    eax,0x1387c888
  4168c5:	cdq    
  4168c6:	or     ah,ch
  4168c8:	mov    bl,0xe0
  4168ca:	cmp    bl,ah
  4168cc:	mov    cl,0x76
  4168ce:	push   0x4f09f742
  4168d3:	push   0x572ea425
  4168d8:	(bad)  
  4168d9:	xchg   esp,eax
  4168da:	or     eax,0xf2de0392
  4168df:	sahf   
  4168e0:	loop   0x41688e
  4168e2:	and    esi,esi
  4168e4:	lock sub ch,dh
  4168e7:	scas   eax,DWORD PTR es:[edi]
  4168e8:	loop   0x416921
  4168ea:	jns    0x4168bb
  4168ec:	repz and BYTE PTR [ecx],dh
  4168ef:	nop
  4168f0:	xchg   edi,eax
  4168f1:	test   eax,0x203edc49
  4168f6:	mov    ch,0xc4
  4168f8:	cmp    al,ah
  4168fa:	and    eax,0xfb6868d0
  4168ff:	stos   BYTE PTR es:[edi],al
  416900:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416901:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416902:	push   ss
  416903:	test   al,0x3e
  416905:	xor    eax,0x2a2d190f
  41690a:	retf   0x4a2f
  41690d:	scas   al,BYTE PTR es:[edi]
  41690e:	in     al,dx
  41690f:	push   ecx
  416910:	into   
  416911:	out    dx,eax
  416912:	int    0x7
  416914:	sub    BYTE PTR [eax],bl
  416916:	lods   eax,DWORD PTR ds:[esi]
  416917:	daa    
  416918:	or     BYTE PTR [ecx+edx*2+0x31],dh
  41691c:	stos   BYTE PTR es:[edi],al
  41691d:	mov    al,ds:0x21e54bb6
  416922:	xor    edi,DWORD PTR [ebx]
  416924:	pop    ds
  416925:	fnstsw WORD PTR [ebp-0x3b5aa444]
  41692b:	loopne 0x416972
  41692d:	add    ebp,DWORD PTR [edi-0x35cf7489]
  416933:	pusha  
  416934:	lods   eax,DWORD PTR ds:[esi]
  416935:	enter  0x8c02,0x5f
  416939:	scas   eax,DWORD PTR es:[edi]
  41693a:	mov    ds:0x7712c3a5,al
  41693f:	int    0x49
  416941:	mov    DWORD PTR [esi+0x44360f40],edx
  416947:	aam    0x6f
  416949:	push   ebp
  41694a:	xor    eax,0xbb241ab8
  41694f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416950:	rcr    BYTE PTR [eax],cl
  416952:	pop    ss
  416953:	rcl    esp,0x6a
  416956:	(bad)  
  416957:	frstor [edx+0x1d48286c]
  41695d:	mov    esp,0x48232af6
  416962:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416963:	ja     0x416954
  416965:	in     al,0xf8
  416967:	adc    DWORD PTR [edx],edi
  416969:	inc    esi
  41696a:	leave  
  41696b:	xor    DWORD PTR [ebx+esi*8],0x17
  41696f:	fcomp  DWORD PTR [esi]
  416971:	jge    0x41697a
  416973:	mov    eax,0x2d860dfd
  416978:	jae    0x416974
  41697a:	leave  
  41697b:	mov    ebx,DWORD PTR [esi-0x7b2a20ed]
  416981:	mov    ds:0x30eac305,al
  416986:	sbb    BYTE PTR [edx],al
  416988:	push   cs
  416989:	sahf   
  41698a:	ret    
  41698b:	jmp    0x1aa99b17
  416990:	or     al,0xc5
  416992:	sbb    DWORD PTR [ebp-0x74],0x23
  416996:	add    al,bh
  416998:	scas   al,BYTE PTR es:[edi]
  416999:	inc    esi
  41699a:	cs dec ecx
  41699c:	outs   dx,DWORD PTR ds:[esi]
  41699d:	push   esi
  41699e:	and    ecx,ebx
  4169a0:	imul   ebp,DWORD PTR [eax],0x70735129
  4169a6:	xchg   esp,eax
  4169a7:	mov    ch,0xd4
  4169a9:	xchg   ebx,eax
  4169aa:	call   0xfad8d917
  4169af:	popa   
  4169b0:	adc    BYTE PTR [esi-0x31],cl
  4169b3:	mov    fs:0xd3818c37,al
  4169b9:	cli    
  4169ba:	add    bh,BYTE PTR [ebx-0xa]
  4169bd:	in     al,0x94
  4169bf:	test   DWORD PTR [ecx-0x18],0xbac65f36
  4169c6:	sbb    BYTE PTR [eax-0x73eb95c0],dh
  4169cc:	scas   al,BYTE PTR es:[edi]
  4169cd:	dec    esi
  4169ce:	jmp    0x1915:0x8e197a24
  4169d5:	outs   dx,BYTE PTR ds:[esi]
  4169d6:	enter  0x32c2,0x51
  4169da:	lea    eax,[ebx]
  4169dc:	je     0x41697d
  4169de:	push   es
  4169df:	rcr    BYTE PTR [ebp-0x11],0x74
  4169e3:	(bad)
  4169e6:	dec    esi
  4169e7:	adc    eax,0x5c2404d9
  4169ec:	push   ebp
  4169ed:	xor    al,0x33
  4169ef:	or     edi,esi
  4169f1:	dec    esp
  4169f2:	mov    esi,0x93ceab8f
  4169f7:	cld    
  4169f8:	jo     0x416986
  4169fa:	std    
  4169fb:	mov    dh,0xae
  4169fd:	gs xchg edi,eax
  4169ff:	lea    esi,[ebx-0x17]
  416a02:	ret    
  416a03:	inc    BYTE PTR [ebp+0x1c]
  416a06:	cmp    DWORD PTR [edi+0x1a],0x1a40ae9e
  416a0d:	cs sbb al,0x3f
  416a10:	push   edi
  416a11:	loope  0x416a86
  416a13:	(bad)  
  416a14:	sbb    ebx,ecx
  416a16:	and    al,0xae
  416a18:	mov    ebx,0x7ad4a2fc
  416a1d:	test   eax,0x793150bb
  416a22:	int    0x94
  416a24:	dec    esi
  416a25:	(bad)  [eax+eiz*1-0x5ad2b7a6]
  416a2c:	jmp    0x416a96
  416a2e:	arpl   WORD PTR [edx+edi*4+0x28],cx
  416a32:	ret    
  416a33:	addr16 out dx,eax
  416a35:	mov    cl,0x74
  416a37:	fld    st(7)
  416a39:	pop    ebx
  416a3a:	ja     0x416a3c
  416a3c:	test   eax,0x1a9e05aa
  416a41:	enter  0x56f3,0xdb
  416a45:	test   ah,bh
  416a47:	mov    ch,al
  416a49:	pushf  
  416a4a:	iret   
  416a4b:	aas    
  416a4c:	fild   WORD PTR [ecx+eax*1-0x62]
  416a50:	icebp  
  416a51:	sub    bh,BYTE PTR [esi+0x15]
  416a54:	(bad)  
  416a55:	enter  0x33ae,0xe8
  416a59:	dec    sp
  416a5b:	lock mov bh,0x67
  416a5e:	push   ds
  416a5f:	dec    ecx
  416a60:	mov    eax,0x7a219049
  416a65:	in     eax,0xc5
  416a67:	jbe    0x416a87
  416a69:	cmp    eax,0x65082a10
  416a6e:	loopne 0x416a3e
  416a70:	cli    
  416a71:	stc    
  416a72:	in     al,dx
  416a73:	jle    0x416aa5
  416a75:	enter  0xd036,0x39
  416a79:	stos   DWORD PTR es:[edi],eax
  416a7a:	add    ah,dl
  416a7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a7d:	push   esi
  416a7e:	pop    ds
  416a7f:	int    0xd9
  416a81:	inc    ebp
  416a82:	jno    0x416a38
  416a84:	jmp    FWORD PTR [edi-0x4ddeab0a]
  416a8a:	nop
  416a8b:	inc    edi
  416a8c:	(bad)  
  416a8d:	cs dec edx
  416a8f:	pop    esi
  416a90:	and    eax,0x1ee015a8
  416a95:	rcl    dl,cl
  416a97:	pusha  
  416a98:	loope  0x416afe
  416a9a:	cli    
  416a9b:	sbb    eax,0x94de505a
  416aa0:	enter  0x5f1e,0xd6
  416aa4:	adc    ch,BYTE PTR [ecx]
  416aa6:	pop    ebp
  416aa7:	xchg   BYTE PTR [ebx],ah
  416aa9:	aad    0xe8
  416aab:	mov    ebx,0x48c84feb
  416ab0:	pop    esp
  416ab1:	xlat   BYTE PTR ds:[ebx]
  416ab2:	push   esp
  416ab3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ab4:	xchg   BYTE PTR [ecx+0x68],dh
  416ab7:	mov    bh,0x4
  416ab9:	daa    
  416aba:	ins    DWORD PTR es:[edi],dx
  416abb:	test   DWORD PTR [ebx+0x6b9941ed],ebp
  416ac1:	mov    al,0x73
  416ac3:	retf   
  416ac4:	inc    eax
  416ac5:	pushf  
  416ac6:	cs popa 
  416ac8:	xlat   BYTE PTR ds:[ebx]
  416ac9:	push   0x7d
  416acb:	adc    al,0xb5
  416acd:	mov    bl,0xb6
  416acf:	and    DWORD PTR cs:[ebp-0x7052d737],ebx
  416ad6:	int    0xae
  416ad8:	fmul   st,st(6)
  416ada:	fsubr  QWORD PTR [eax+ebx*4]
  416add:	daa    
  416ade:	jge    0x416acb
  416ae0:	enter  0x37ff,0xcb
  416ae4:	push   edi
  416ae5:	mov    ecx,0xb13162a3
  416aea:	and    eax,DWORD PTR [ecx]
  416aec:	out    dx,al
  416aed:	adc    BYTE PTR [esi+0x7bd9f50e],bl
  416af3:	ss in  al,0x22
  416af6:	add    ecx,DWORD PTR [esi+0x62]
  416af9:	adc    al,0x56
  416afb:	adc    bl,BYTE PTR [eax]
  416afd:	div    DWORD PTR [ecx-0x56]
  416b00:	dec    edx
  416b01:	cmp    BYTE PTR [edi],bh
  416b03:	xor    BYTE PTR [edx],dl
  416b05:	push   es
  416b06:	nop
  416b07:	out    0x56,al
  416b09:	or     DWORD PTR ss:[esp+ebp*1],esp
  416b0d:	popf   
  416b0e:	mov    edx,0xe9bb882b
  416b13:	(bad)  
  416b14:	cwde   
  416b15:	xor    edi,esi
  416b17:	add    BYTE PTR [ecx+eax*1+0x78],dl
  416b1b:	jecxz  0x416af8
  416b1d:	dec    esi
  416b1e:	sub    BYTE PTR [eax+0x26],0x1c
  416b22:	jne    0x416ac9
  416b24:	cmp    al,0x93
  416b26:	jmp    0x416b47
  416b28:	aas    
  416b29:	fs push ebp
  416b2b:	jmp    0x5470ce7b
  416b30:	sahf   
  416b31:	test   DWORD PTR [edi+0x37611a24],edx
  416b37:	mov    eax,ds:0x39b30fcf
  416b3c:	sub    BYTE PTR [edx],dh
  416b3e:	inc    ebp
  416b3f:	loop   0x416ba0
  416b41:	arpl   WORD PTR ds:0x35d0f7e2,si
  416b47:	ins    BYTE PTR es:[edi],dx
  416b48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b49:	mov    ah,0x8
  416b4b:	dec    esp
  416b4c:	push   es
  416b4d:	sbb    eax,DWORD PTR [edi+0x51]
  416b50:	lods   eax,DWORD PTR ds:[esi]
  416b51:	lahf   
  416b52:	pop    ebp
  416b53:	ret    
  416b54:	les    eax,FWORD PTR [edx]
  416b56:	or     eax,0x3f18420a
  416b5b:	setp   BYTE PTR [edx]
  416b5e:	cmp    DWORD PTR [esi],edx
  416b60:	jo     0x416b17
  416b62:	sti    
  416b63:	sub    esi,DWORD PTR [edi]
  416b65:	or     al,BYTE PTR [eax]
  416b67:	xchg   ebp,eax
  416b68:	(bad)  
  416b69:	repz rol DWORD PTR [ebx-0x79],0x68
  416b6e:	icebp  
  416b6f:	push   cs
  416b70:	mov    edi,0x60d231a6
  416b75:	add    DWORD PTR [ecx],ecx
  416b77:	fwait
  416b78:	push   eax
  416b79:	or     eax,0x83e9d6b9
  416b7e:	xchg   esp,eax
  416b7f:	or     esi,DWORD PTR [ebp-0x4de8b2f3]
  416b85:	ds es sbb ch,dh
  416b89:	mov    edx,0x6d75e720
  416b8e:	pop    ds
  416b8f:	xchg   ecx,eax
  416b90:	dec    edi
  416b91:	aaa    
  416b92:	ret    0x35f0
  416b95:	adc    esp,eax
  416b97:	or     eax,0x8f25e3ad
  416b9c:	es sti 
  416b9e:	mov    ah,0x64
  416ba0:	dec    esi
  416ba1:	add    ebx,esi
  416ba3:	stos   BYTE PTR es:[edi],al
  416ba4:	jmp    0x2:0x33179c2f
  416bab:	dec    ecx
  416bac:	hlt    
  416bad:	and    BYTE PTR [esi+0x5580e783],bh
  416bb3:	xchg   esi,eax
  416bb4:	or     DWORD PTR [edi-0x69],0x54
  416bb8:	jb     0x416c23
  416bba:	sub    DWORD PTR [esi+0x35],eax
  416bbd:	pop    edi
  416bbe:	cmp    esp,edi
  416bc0:	rcl    BYTE PTR [esi],1
  416bc2:	stos   BYTE PTR es:[edi],al
  416bc3:	cli    
  416bc4:	(bad)
  416bc7:	jl     0x416c23
  416bc9:	xchg   esi,eax
  416bca:	jp     0x416bd8
  416bcc:	stc    
  416bcd:	cmc    
  416bce:	dec    eax
  416bcf:	mov    esi,0x36dbf88e
  416bd4:	adc    DWORD PTR [edi+eax*8-0x34],esi
  416bd8:	(bad)  
  416bd9:	jae    0x416be3
  416bdb:	mov    WORD PTR [ebp-0x27],fs
  416bde:	imul   ebp,DWORD PTR [ebp+0x4752fe8],0xa
  416be5:	in     al,dx
  416be6:	fs push edx
  416be8:	loop   0x416bd5
  416bea:	push   ebp
  416beb:	mov    al,ds:0x8f14af8d
  416bf0:	jae    0x416b8e
  416bf2:	jo     0x416c2b
  416bf4:	cmp    BYTE PTR [ebx],al
  416bf6:	cdq    
  416bf7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416bf8:	addr16 pop ecx
  416bfa:	add    ebx,esi
  416bfc:	clc    
  416bfd:	mov    ch,0xbe
  416bff:	mov    cl,BYTE PTR [edx]
  416c01:	pusha  
  416c02:	das    
  416c03:	sbb    DWORD PTR [edx],esp
  416c05:	fdiv   DWORD PTR [ebx-0x76bdd265]
  416c0b:	std    
  416c0c:	sbb    DWORD PTR [edi+0x22],ebx
  416c0f:	rcr    BYTE PTR [edx],1
  416c11:	cs pop es
  416c13:	sub    ebx,DWORD PTR [ecx]
  416c15:	sbb    DWORD PTR [esi],esp
  416c17:	imul   esp,esp,0x917fa561
  416c1d:	loop   0x416c10
  416c1f:	or     BYTE PTR [edx+0x572b4273],ch
  416c25:	std    
  416c26:	(bad)  
  416c28:	popf   
  416c29:	adc    DWORD PTR [ecx+0x57],eax
  416c2c:	(bad)  
  416c2e:	xor    eax,DWORD PTR [ebx+0x4ac409be]
  416c34:	or     ebp,esp
  416c36:	je     0x416c06
  416c38:	push   esp
  416c39:	mov    ebx,0x8211f0f8
  416c3e:	cmp    DWORD PTR [eax],ebp
  416c40:	jl     0x416c1b
  416c42:	dec    eax
  416c43:	lods   eax,DWORD PTR ds:[esi]
  416c44:	rol    ch,1
  416c46:	loope  0x416c5d
  416c48:	cli    
  416c49:	pop    ebx
  416c4a:	and    al,0xa9
  416c4c:	(bad)
  416c4f:	int3   
  416c50:	sbb    al,0xb0
  416c52:	(bad)  ds:0x61e36a90
  416c58:	fadd   DWORD PTR [esi+0x6a]
  416c5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c5c:	in     al,0xff
  416c5e:	je     0x416c5f
  416c60:	ja     0x416bfc
  416c62:	dec    eax
  416c63:	jo     0x416c34
  416c65:	xchg   esp,eax
  416c66:	stos   BYTE PTR es:[edi],al
  416c67:	dec    edx
  416c68:	out    0x54,al
  416c6a:	jecxz  0x416c44
  416c6c:	xor    al,0xc6
  416c6e:	pop    ebx
  416c6f:	(bad)  
  416c70:	xchg   edi,eax
  416c71:	sar    DWORD PTR [edx],0x66
  416c74:	mov    ebp,0x9eff0d93
  416c79:	mov    eax,ds:0x5e299336
  416c7e:	adc    al,0x40
  416c80:	ja     0x416c95
  416c82:	inc    eax
  416c83:	jge    0x416c27
  416c85:	fs pusha 
  416c87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c88:	out    0x7a,eax
  416c8a:	retf   0xa20c
  416c8d:	sbb    al,0xeb
  416c8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c90:	or     dh,BYTE PTR [ebx-0x76]
  416c93:	dec    edi
  416c94:	jb     0x416ca2
  416c96:	pop    edx
  416c97:	or     ebp,0x2c71a4b3
  416c9d:	test   al,0x8a
  416c9f:	inc    edx
  416ca0:	adc    eax,0x65d713a5
  416ca5:	in     eax,0x1a
  416ca7:	jl     0x416c8d
  416ca9:	and    BYTE PTR [edx-0x6a],0xf3
  416cad:	(bad)  
  416cae:	test   BYTE PTR [ebx],bl
  416cb0:	mov    ebp,ebx
  416cb2:	das    
  416cb3:	mov    esi,0x592cbd8d
  416cb8:	and    BYTE PTR [esi],ch
  416cba:	mov    eax,0x68736189
  416cbf:	and    DWORD PTR [esi+0x5685af7f],ecx
  416cc5:	push   ss
  416cc6:	sbb    al,dh
  416cc8:	xor    DWORD PTR [ebx-0x46c707b1],0x74
  416ccf:	or     ebx,DWORD PTR [eax-0x61]
  416cd2:	pusha  
  416cd3:	mov    ds:0xe207b1,eax
  416cd8:	mov    cl,BYTE PTR [esi+0x27f17862]
  416cde:	sub    eax,0x265ec43e
  416ce3:	mov    al,0xaf
  416ce5:	xor    DWORD PTR [edi+eax*1+0x2],ebp
  416ce9:	sub    dl,BYTE PTR [edi]
  416ceb:	cs jb  0x416d1c
  416cee:	jbe    0x416d1e
  416cf0:	jp     0x416ce7
  416cf2:	dec    esi
  416cf3:	popf   
  416cf4:	mov    edi,0xe2a34b07
  416cf9:	cmp    ecx,ebp
  416cfb:	jmp    0x416d63
  416cfd:	jns    0x416d40
  416cff:	inc    eax
  416d00:	in     al,0xc4
  416d02:	into   
  416d03:	scas   eax,DWORD PTR es:[edi]
  416d04:	mov    al,0xec
  416d06:	mov    DWORD PTR [edx+0xdbbe636],eax
  416d0c:	repz and BYTE PTR [ebx-0x56e1099a],dl
  416d13:	ins    BYTE PTR es:[edi],dx
  416d14:	pop    eax
  416d15:	xchg   esp,eax
  416d16:	mov    DWORD PTR [ebp-0x42],ebx
  416d19:	xor    eax,0x8663b7ca
  416d1e:	push   ds
  416d1f:	fs pop edx
  416d21:	sub    al,0x6
  416d23:	(bad)  
  416d24:	sbb    al,0xcb
  416d26:	lahf   
  416d27:	adc    eax,DWORD PTR [edi-0x77]
  416d2a:	imul   DWORD PTR [ebp+0x2a7b70f2]
  416d30:	jno    0x416cbe
  416d32:	bound  esp,QWORD PTR [ebp+0x64]
  416d35:	xchg   esp,eax
  416d36:	stos   DWORD PTR es:[edi],eax
  416d37:	mov    al,ds:0xc4154d2c
  416d3c:	fdiv   DWORD PTR [edi]
  416d3e:	xor    BYTE PTR [ecx+ecx*4],bl
  416d41:	cmp    BYTE PTR [edx+0x46],0x60
  416d45:	cwde   
  416d46:	pop    edx
  416d47:	push   edi
  416d48:	pop    ss
  416d49:	das    
  416d4a:	fwait
  416d4b:	sti    
  416d4c:	sar    DWORD PTR [eiz*8-0x2ed430f7],1
  416d53:	dec    esp
  416d54:	xor    eax,0x77b36b57
  416d59:	arpl   WORD PTR [ecx+0x2a],sp
  416d5c:	(bad)  
  416d5e:	rol    DWORD PTR [edx+0x69e02d4],0xb2
  416d65:	inc    edx
  416d66:	xor    al,0xa2
  416d68:	enter  0xed39,0x6f
  416d6c:	(bad)  
  416d6d:	out    0xc8,al
  416d6f:	in     eax,dx
  416d70:	cmp    ch,cl
  416d72:	xor    BYTE PTR [edx-0x4e],dh
  416d75:	shl    ebp,1
  416d77:	das    
  416d78:	inc    ebx
  416d79:	adc    bl,cl
  416d7b:	daa    
  416d7c:	add    DWORD PTR [esi+0x590facef],esp
  416d82:	lar    edi,WORD PTR [esi]
  416d85:	test   eax,0x185e9edb
  416d8a:	adc    ch,0x72
  416d8d:	loop   0x416d74
  416d8f:	mov    ah,0xec
  416d91:	std    
  416d92:	popf   
  416d93:	jb     0x416df2
  416d95:	into   
  416d96:	inc    eax
  416d97:	mov    WORD PTR [edx-0xb],es
  416d9a:	lock shl esp,0xd0
  416d9e:	js     0x416d7a
  416da0:	mov    ah,BYTE PTR [eax]
  416da2:	xor    dl,BYTE PTR ds:[eax+0x39]
  416da6:	sbb    ah,ah
  416da8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416da9:	mov    bh,0x7b
  416dab:	pop    edi
  416dac:	test   al,0x22
  416dae:	mov    bh,0xc4
  416db0:	es sbb al,0xbf
  416db3:	fild   QWORD PTR [ebp-0x55]
  416db6:	mov    ch,0x5c
  416db8:	out    0xfa,eax
  416dba:	aad    0xee
  416dbc:	into   
  416dbd:	cmp    BYTE PTR [eax+0x7ff536be],bh
  416dc3:	cmp    DWORD PTR [esi],edi
  416dc5:	or     eax,0x999fcb85
  416dca:	stc    
  416dcb:	sar    dl,1
  416dcd:	cmp    eax,0x86ddc641
  416dd2:	push   esi
  416dd3:	inc    esp
  416dd4:	shl    DWORD PTR es:[ebp-0x12760a9b],cl
  416ddb:	or     esi,DWORD PTR [ebx+0x58bbca88]
  416de1:	repnz adc BYTE PTR [edx+0x41],bl
  416de5:	push   ds
  416de6:	ja     0x416def
  416de8:	mov    al,0x88
  416dea:	cmc    
  416deb:	js     0x416e61
  416ded:	fadd   DWORD PTR [ebp+0x3b]
  416df0:	arpl   di,ax
  416df2:	es loop 0x416da8
  416df5:	loop   0x416df9
  416df7:	mov    ah,0xfa
  416df9:	or     eax,0xc0426f9b
  416dfe:	mov    ds:0x53fc5a4b,al
  416e03:	jo     0x416dde
  416e05:	pop    es
  416e06:	push   ecx
  416e07:	jnp    0x416e2e
  416e09:	sub    edi,0x3169b716
  416e0f:	xor    BYTE PTR [edi],bh
  416e11:	out    dx,eax
  416e12:	dec    ebp
  416e13:	jp     0x416e25
  416e15:	js     0x416db1
  416e17:	add    BYTE PTR [esi-0x6e],dl
  416e1a:	fmul   QWORD PTR [eax]
  416e1c:	repnz (bad) 
  416e1e:	mov    ecx,0xffe103e
  416e23:	aaa    
  416e24:	les    esp,FWORD PTR [eax]
  416e26:	int    0xdc
  416e28:	ja     0x416dca
  416e2a:	mov    ds:0x20b45e14,al
  416e2f:	and    dl,bl
  416e31:	push   esi
  416e32:	sbb    eax,0xcc8e9ff0
  416e37:	push   ss
  416e38:	in     eax,dx
  416e39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e3a:	(bad)  
  416e3b:	or     DWORD PTR [edi-0x1e],ebx
  416e3e:	out    0xd9,eax
  416e40:	xor    BYTE PTR [eax-0x7b],bl
  416e43:	pop    ds
  416e44:	outs   dx,BYTE PTR ds:[esi]
  416e45:	repnz out dx,al
  416e47:	inc    eax
  416e49:	add    al,0xa9
  416e4b:	aam    0xd7
  416e4d:	scas   eax,DWORD PTR es:[edi]
  416e4e:	mov    eax,ds:0xa483528a
  416e53:	or     eax,0x9a689107
  416e58:	adc    ah,cl
  416e5a:	xchg   edx,eax
  416e5b:	retf   0x1926
  416e5e:	call   0x181:0x80188802
  416e65:	imul   edx,DWORD PTR [eax],0x76379719
  416e6b:	call   0x48:0x3d8ff1df
  416e72:	cwde   
  416e73:	cld    
  416e74:	int3   
  416e75:	cmc    
  416e76:	cwde   
  416e77:	arpl   WORD PTR [eax],si
  416e79:	mov    bh,0xd6
  416e7b:	sub    ebp,DWORD PTR [ecx-0x7b350bf0]
  416e81:	ds pop eax
  416e83:	add    ah,dl
  416e85:	je     0x416ee3
  416e87:	jmp    0x9d52a062
  416e8c:	pusha  
  416e8d:	mov    bh,0xc5
  416e8f:	mov    BYTE PTR es:[ecx-0x47e8f9e6],bl
  416e96:	jns    0x416e54
  416e98:	or     al,0x0
  416e9a:	pushf  
  416e9b:	mov    dl,0x14
  416e9d:	xchg   ebp,eax
  416e9e:	int3   
  416e9f:	test   BYTE PTR [edx-0x1d],ah
  416ea2:	inc    edx
  416ea3:	push   ebx
  416ea4:	adc    al,0xf9
  416ea6:	iret   
  416ea7:	cmp    eax,0xfbaf7bcc
  416eac:	(bad)  
  416ead:	sub    cl,cl
  416eaf:	push   edx
  416eb0:	or     DWORD PTR [esi+0x47],eax
  416eb3:	loope  0x416ef0
  416eb5:	cmp    ah,0x37
  416eb8:	std    
  416eb9:	mov    di,0x9231
  416ebd:	and    ch,dl
  416ebf:	loopne 0x416f24
  416ec1:	call   0x25c877a
  416ec6:	(bad)  
  416ec8:	nop
  416ec9:	push   eax
  416eca:	jle    0x416e55
  416ecc:	xchg   ecx,eax
  416ecd:	pop    esp
  416ece:	xchg   ebx,eax
  416ecf:	lds    ebp,FWORD PTR cs:[ebx+0x7e43208]
  416ed6:	ret    
  416ed7:	sub    DWORD PTR [ebx-0x71],esi
  416eda:	jg     0x416eda
  416edc:	jmp    0x3f1e07a7
  416ee1:	retf   
  416ee2:	jl     0x416f56
  416ee4:	xchg   edx,eax
  416ee5:	xor    al,0x7a
  416ee7:	jns    0x416f04
  416ee9:	and    DWORD PTR [edi-0xe],esi
  416eec:	adc    DWORD PTR ds:0x6448a288,ecx
  416ef2:	mov    edx,es
  416ef4:	lods   al,BYTE PTR ds:[esi]
  416ef5:	sbb    edx,DWORD PTR [ecx+0x7d]
  416ef8:	rcpps  xmm2,xmm2
  416efb:	fldcw  WORD PTR [edi]
  416efd:	jb     0x416f66
  416eff:	mov    ecx,0x5eb63cb9
  416f04:	and    al,0xfa
  416f06:	xor    eax,esp
  416f08:	sbb    eax,0xab1c0b09
  416f0d:	mov    esp,0xe4b3be9e
  416f12:	nop
  416f13:	test   eax,0x3b08620d
  416f18:	add    al,bh
  416f1a:	xchg   BYTE PTR [eax+0x39],al
  416f1d:	mov    ch,0x17
  416f1f:	pusha  
  416f20:	es add al,0x7b
  416f23:	mov    eax,ds:0xa4fd98be
  416f28:	jnp    0x416f7e
  416f2a:	lds    esp,FWORD PTR [edi+ebx*4]
  416f2d:	xor    DWORD PTR [edx+eax*2+0x650187ed],ebp
  416f34:	adc    BYTE PTR [esi+0x42c64cde],bl
  416f3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f3b:	ficom  WORD PTR [ebx+0x5e]
  416f3e:	cmp    eax,0x9428605f
  416f43:	dec    edi
  416f44:	jbe    0x416f94
  416f46:	int    0x94
  416f48:	cwde   
  416f49:	mov    ebx,0x362d76e6
  416f4e:	adc    eax,ecx
  416f50:	(bad)  
  416f51:	loope  0x416f75
  416f53:	scas   al,BYTE PTR es:[edi]
  416f54:	sbb    eax,0xb3a15de6
  416f59:	mov    edx,0x5a05b2ff
  416f5e:	push   edi
  416f5f:	scas   eax,DWORD PTR es:[edi]
  416f60:	inc    ebp
  416f61:	aaa    
  416f62:	adc    DWORD PTR [eax+0x4a33d285],edi
  416f68:	dec    ebp
  416f69:	push   ecx
  416f6a:	jecxz  0x416fd1
  416f6c:	push   es
  416f6d:	push   edi
  416f6e:	dec    ecx
  416f6f:	add    esp,DWORD PTR ds:0x499fd9a5
  416f75:	call   DWORD PTR [edx+0x5d]
  416f78:	in     al,dx
  416f79:	sub    DWORD PTR [ecx+0x54cf867],0x3d
  416f80:	adc    DWORD PTR ds:0x77fc8dcc,0xcb2cdc49
  416f8a:	out    dx,eax
  416f8b:	popa   
  416f8c:	mov    eax,0xfbc2a772
  416f91:	and    DWORD PTR [esi],0xffffffce
  416f94:	pop    ecx
  416f95:	sbb    DWORD PTR [edx],0xffffffd7
  416f98:	ror    BYTE PTR [eax+esi*2+0x4a],cl
  416f9c:	cmc    
  416f9d:	and    eax,DWORD PTR [ebp-0x4ed58d5e]
  416fa3:	ins    BYTE PTR es:[edi],dx
  416fa4:	xor    dl,0xc7
  416fa7:	cmp    al,BYTE PTR [ebx]
  416fa9:	clc    
  416faa:	push   ss
  416fab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416fac:	push   ecx
  416fad:	leave  
  416fae:	cs cmp eax,0x6d0d1829
  416fb4:	lods   eax,DWORD PTR ds:[esi]
  416fb5:	sbb    BYTE PTR [esp+ebx*8+0x4fdef303],bl
  416fbc:	inc    edx
  416fbd:	sbb    al,0xbf
  416fbf:	cmp    al,0x96
  416fc1:	jle    0x417005
  416fc3:	out    dx,eax
  416fc4:	lods   al,BYTE PTR ds:[esi]
  416fc5:	push   edi
  416fc6:	(bad)  
  416fc8:	and    eax,0xe8a611cd
  416fcd:	fs inc edi
  416fcf:	push   ecx
  416fd0:	adc    DWORD PTR ss:[ebx*8-0x24295cf9],esi
  416fd8:	fidivr DWORD PTR [ecx]
  416fda:	push   0xcfa5e3c3
  416fdf:	sub    edi,DWORD PTR [esi]
  416fe1:	adc    dl,BYTE PTR [edx]
  416fe3:	pop    ds
  416fe4:	pop    ss
  416fe5:	pop    es
  416fe6:	in     al,0xfa
  416fe8:	add    eax,0xb96b0ffc
  416fed:	push   edx
  416fee:	ins    BYTE PTR es:[edi],dx
  416fef:	jnp    0x416fe5
  416ff1:	daa    
  416ff2:	mov    eax,0x6fb670f2
  416ff7:	stos   DWORD PTR es:[edi],eax
  416ff8:	xchg   BYTE PTR [edi+0x1acc724d],dh
  416ffe:	mov    WORD PTR [edi+0x71740d23],gs
  417004:	daa    
  417005:	and    DWORD PTR [ebp+0x27],0xe146a589
  41700c:	mov    al,ds:0x6fd9836b
  417011:	sbb    DWORD PTR [ebp+ebx*4-0x797c483b],0x85ea3342
  41701c:	sbb    edx,DWORD PTR [edi+0x10]
  41701f:	push   es
  417020:	mov    ds:0x9b915f0f,eax
  417025:	ficomp WORD PTR [eax]
  417027:	std    
  417028:	dec    edx
  417029:	in     al,dx
  41702a:	call   0xa2edeb99
  41702f:	mov    dl,0x89
  417031:	lods   eax,DWORD PTR ds:[esi]
  417032:	mov    WORD PTR [edx+0x5ba0020],fs
  417038:	gs mov bl,0x50
  41703b:	mov    ebp,fs
  41703d:	fimul  DWORD PTR [ebp+0x2b25a8c2]
  417043:	mov    eax,ds:0x2f0d21af
  417048:	mov    ds:0xa7fb65a3,eax
  41704d:	lock push eax
  41704f:	dec    edx
  417050:	mov    edi,0xbcb4488f
  417055:	add    al,0x85
  417057:	pop    esp
  417058:	or     al,0x61
  41705a:	mov    edi,cs
  41705c:	mov    dl,0xc3
  41705e:	stc    
  41705f:	mov    bl,0x1a
  417061:	add    ebp,esi
  417063:	add    al,0x43
  417065:	dec    ebx
  417066:	and    BYTE PTR ds:0x2e5148b6,dl
  41706c:	inc    esi
  41706d:	dec    eax
  41706e:	cmp    al,0x5
  417070:	mov    al,0x7e
  417072:	lods   eax,DWORD PTR ds:[esi]
  417073:	fmul   DWORD PTR ds:0x456ca046
  417079:	addr16 in al,0x88
  41707c:	popa   
  41707d:	xor    DWORD PTR [edx+0x3d],eax
  417080:	(bad)  
  417081:	push   ss
  417082:	push   ebp
  417083:	jl     0x41708d
  417085:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417086:	and    cl,BYTE PTR [ebp*4-0x781d4789]
  41708d:	mov    bh,0x1a
  41708f:	mov    bh,0x79
  417091:	jp     0x417048
  417093:	jne    0x417090
  417095:	push   edi
  417096:	pop    ebx
  417097:	xchg   esi,eax
  417098:	inc    esi
  417099:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41709a:	jnp    0x4170c7
  41709c:	inc    eax
  41709d:	or     ebx,eax
  41709f:	xchg   esp,eax
  4170a0:	sub    BYTE PTR [eax+ebp*2-0x6],cl
  4170a4:	or     ch,bh
  4170a6:	clc    
  4170a7:	das    
  4170a8:	mov    ah,0x1c
  4170aa:	les    eax,FWORD PTR [ebp-0x5385ef02]
  4170b0:	fcom   QWORD PTR [ebp+0x39596998]
  4170b6:	mov    BYTE PTR [esi-0x4451d4ac],cl
  4170bc:	scas   eax,DWORD PTR es:[di]
  4170be:	cmc    
  4170bf:	jne    0x4170a3
  4170c1:	cmp    ebp,edi
  4170c3:	call   0xcdd4:0xa85ee156
  4170ca:	inc    ebp
  4170cb:	mov    WORD PTR ds:0xe457cc83,es
  4170d1:	pop    eax
  4170d2:	sbb    DWORD PTR [esi],eax
  4170d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170d5:	and    BYTE PTR ds:0x5e643d2f,al
  4170db:	(bad)  
  4170dc:	hlt    
  4170dd:	mov    esp,0x19b09bf
  4170e2:	sbb    esp,edi
  4170e4:	mov    esp,cr4
  4170e7:	(bad)  
  4170e8:	(bad)  
  4170ea:	mov    ebx,0x2f7f55
  4170ef:	arpl   WORD PTR [edx+eiz*2+0x2befab22],di
  4170f6:	add    esp,DWORD PTR [ebx-0x48c55780]
  4170fc:	das    
  4170fd:	mov    eax,0xf33e5602
  417102:	lods   eax,DWORD PTR ds:[esi]
  417103:	imul   ebp,esp,0xffffffe9
  417106:	aaa    
  417107:	and    cl,BYTE PTR [ecx+0x1e]
  41710a:	std    
  41710b:	sbb    al,0x29
  41710d:	test   al,0x4c
  41710f:	stc    
  417110:	xlat   BYTE PTR ds:[ebx]
  417111:	in     eax,0x72
  417113:	fild   DWORD PTR [edx]
  417115:	pop    ebp
  417116:	int3   
  417117:	adc    BYTE PTR [edi+0x58],ah
  41711a:	pop    ecx
  41711b:	imul   DWORD PTR [ebp+0x51]
  41711e:	(bad)  
  41711f:	(bad)  
  417120:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417121:	popf   
  417122:	pop    edi
  417123:	pop    es
  417124:	pop    ebx
  417125:	xchg   esp,eax
  417126:	xchg   esi,eax
  417127:	mov    esi,0xe22ee408
  41712c:	por    mm7,QWORD PTR [ecx-0x4d5884b2]
  417133:	push   esp
  417134:	add    BYTE PTR [esp+ecx*2],0xd5
  417138:	imul   edx,edx,0xffffffe0
  41713b:	mov    bl,0x98
  41713d:	jmp    0x4170e5
  41713f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417140:	fisub  WORD PTR [eax+0x4e]
  417143:	mov    dl,0x72
  417145:	iret   
  417146:	mov    ecx,0x3fea4fb9
  41714b:	mov    cl,0x63
  41714d:	hlt    
  41714e:	sbb    BYTE PTR ds:0xf4de8155,bh
  417154:	sbb    ebp,eax
  417156:	lds    ecx,FWORD PTR [ecx]
  417158:	xor    edx,DWORD PTR [edi+0x272db5c8]
  41715e:	sub    esp,esi
  417160:	cmp    ah,BYTE PTR [eax-0x5865d163]
  417166:	pop    ds
  417167:	jno    0x41713d
  417169:	out    dx,al
  41716a:	inc    edi
  41716b:	(bad)  
  41716c:	in     al,0x6c
  41716e:	jmp    0x417170
  417170:	leave  
  417171:	fist   WORD PTR [di]
  417174:	arpl   cx,sp
  417176:	inc    ecx
  417177:	loop   0x4171ca
  417179:	mov    ax,0x110
  41717d:	addr16 sahf 
  41717f:	sub    ch,BYTE PTR [edi-0x4a153d00]
  417185:	sbb    al,0xc4
  417187:	jmp    0x4171b0
  417189:	ds dec ebp
  41718b:	fdivr  QWORD PTR [ebx+0x2c1e3f32]
  417191:	push   edi
  417192:	push   0xf74b1e21
  417197:	inc    edi
  417198:	ins    BYTE PTR es:[edi],dx
  417199:	push   cs
  41719a:	push   0x2753d470
  41719f:	in     eax,0x18
  4171a1:	shr    BYTE PTR [eax+0x58139c02],0x50
  4171a8:	jo     0x4171b5
  4171aa:	fild   DWORD PTR [edi+0x5]
  4171ad:	out    0x73,al
  4171af:	mov    ebx,0x26cd5cda
  4171b4:	retf   
  4171b5:	xchg   BYTE PTR [edi],dh
  4171b7:	inc    ebx
  4171b8:	or     al,0x9b
  4171ba:	mov    DWORD PTR [esi-0x3e8ebd59],edx
  4171c0:	inc    edx
  4171c1:	adc    eax,0x7cfe432a
  4171c6:	jle    0x4171f9
  4171c8:	mov    ds:0x6cb991b1,al
  4171cd:	add    ebp,DWORD PTR [ebx+0x585e67c1]
  4171d3:	sbb    eax,0xa7ee7068
  4171d8:	and    DWORD PTR [esi+0x432c0602],edi
  4171de:	push   ebp
  4171df:	push   edi
  4171e0:	cmp    eax,0x87fce054
  4171e5:	xor    eax,0xe0d96914
  4171ea:	push   ebp
  4171eb:	dec    eax
  4171ec:	fimul  WORD PTR [eax+eax*1+0x7b75332a]
  4171f3:	sub    esi,DWORD PTR [ecx]
  4171f5:	lds    edi,FWORD PTR ds:0x6884495a
  4171fb:	sub    edx,DWORD PTR [edi+edi*8-0x21]
  4171ff:	lds    edx,FWORD PTR [edx]
  417201:	push   cs
  417202:	ret    0xc77f
  417205:	lods   eax,DWORD PTR ds:[esi]
  417206:	mov    BYTE PTR [edx+0x49],bh
  417209:	fucomip st,st(3)
  41720b:	and    esp,DWORD PTR ds:0xc809cb53
  417211:	test   dl,0xc4
  417214:	inc    ebx
  417215:	inc    edx
  417216:	jmp    0x5fa98712
  41721b:	and    al,0x1b
  41721d:	mov    WORD PTR [eax],es
  41721f:	(bad)  
  417220:	mov    ebp,0x946e0ba3
  417225:	loopne 0x417275
  417227:	jne    0x4171fc
  417229:	cld    
  41722a:	mov    ds:0xfad6aa1b,eax
  41722f:	sub    DWORD PTR [ebp+0x27],esp
  417232:	mov    fs,WORD PTR [edx-0x55]
  417235:	(bad)  
  417236:	leave  
  417237:	rcl    BYTE PTR [ebp+0x40a27c1a],1
  41723d:	shr    edx,cl
  41723f:	mov    al,ds:0x5e915851
  417244:	mov    esi,0x151fcd36
  417249:	xor    ebp,esi
  41724b:	iret   
  41724c:	retf   
  41724d:	call   0x4a6f:0xc163d207
  417254:	cmc    
  417255:	inc    esp
  417256:	push   ecx
  417257:	inc    edx
  417258:	push   ebp
  417259:	inc    eax
  41725a:	mov    bl,0xd
  41725c:	push   esi
  41725d:	cli    
  41725e:	dec    edi
  41725f:	(bad)  
  417261:	inc    esp
  417262:	test   BYTE PTR ds:0x26206a19,al
  417268:	jecxz  0x417231
  41726a:	daa    
  41726b:	jmp    0xd027:0xae7c1313
  417272:	xchg   ecx,ebp
  417274:	xchg   ebx,eax
  417275:	(bad)  
  417276:	sub    al,0x14
  417278:	mov    bl,0x84
  41727a:	cmc    
  41727b:	mov    ds:0x9bb15e26,al
  417280:	adc    BYTE PTR [esi+eax*2+0x6384cdcb],0x81
  417288:	dec    eax
  417289:	jg     0x41721c
  41728b:	loope  0x4172a7
  41728d:	(bad)  
  41728e:	ins    DWORD PTR es:[edi],dx
  41728f:	call   0x8635c174
  417294:	cmp    DWORD PTR [ebx+0x49c82654],esi
  41729a:	push   eax
  41729b:	sbb    DWORD PTR [edx+0x1e],edx
  41729e:	bound  esp,QWORD PTR [eax]
  4172a0:	rcr    DWORD PTR [ebp+0x56e01825],cl
  4172a6:	stc    
  4172a7:	call   0xae31:0x33bb473d
  4172ae:	jo     0x41729a
  4172b0:	inc    edx
  4172b1:	bound  esp,QWORD PTR [esi+0x6d8c82e2]
  4172b7:	aaa    
  4172b8:	pop    ebp
  4172b9:	pop    DWORD PTR [eax+0x24595ed6]
  4172bf:	test   eax,0xb0fd81e5
  4172c4:	out    0x2f,eax
  4172c6:	scas   al,BYTE PTR es:[edi]
  4172c7:	inc    esi
  4172c8:	dec    eax
  4172c9:	pop    edx
  4172ca:	dec    edi
  4172cb:	mov    dl,0x2d
  4172cd:	xor    DWORD PTR [edx+0x68ffb305],eax
  4172d3:	popf   
  4172d4:	push   eax
  4172d5:	in     al,0x25
  4172d7:	push   eax
  4172d8:	fwait
  4172d9:	and    esi,DWORD PTR [ebx]
  4172db:	ja     0x417293
  4172dd:	(bad)  
  4172de:	adc    ebp,DWORD PTR [ecx+eiz*8]
  4172e1:	inc    ebx
  4172e2:	dec    ebp
  4172e3:	(bad)  
  4172e4:	out    0x9a,al
  4172e6:	loop   0x4172df
  4172e8:	add    BYTE PTR [ebp+0x5d],ah
  4172eb:	and    al,0xe
  4172ed:	mov    bl,0x54
  4172ef:	cld    
  4172f0:	popf   
  4172f1:	jp     0x4172dd
  4172f3:	mov    WORD PTR [edx],cs
  4172f5:	loope  0x4172f9
  4172f7:	imul   ebp,esp,0xfffffff3
  4172fa:	push   ebp
  4172fb:	cli    
  4172fc:	ret    
  4172fd:	cmc    
  4172fe:	or     DWORD PTR [edx-0x15],edi
  417301:	fidiv  DWORD PTR [ecx+0x762249a8]
  417307:	xchg   edi,eax
  417308:	sub    eax,0x23a8927e
  41730d:	ins    BYTE PTR es:[edi],dx
  41730e:	xor    BYTE PTR [esi+0x2a],cl
  417311:	sub    BYTE PTR [ebx+0x20],dl
  417314:	push   edi
  417315:	adc    edx,ecx
  417317:	xor    al,0x3c
  417319:	mov    eax,0xd2378d3a
  41731e:	leave  
  41731f:	jge    0x41738f
  417321:	pop    ebx
  417322:	or     al,0xf2
  417324:	dec    ebp
  417325:	mov    eax,ds:0xbcd93d74
  41732a:	das    
  41732b:	or     ah,BYTE PTR [ecx-0x2]
  41732e:	jecxz  0x417346
  417330:	ficom  DWORD PTR [edi]
  417332:	add    ch,BYTE PTR [ebp+0xe]
  417335:	shr    BYTE PTR [ecx+0x21],0x28
  417339:	in     al,0x19
  41733b:	mov    esi,0xf7f3cb7b
  417340:	adc    eax,DWORD PTR [ebx-0x1430ef35]
  417346:	imul   esi,DWORD PTR [eax+0x41],0xffffffa2
  41734a:	pop    edx
  41734b:	pop    ds
  41734c:	add    DWORD PTR [edx+0x55b7fe8],ebx
  417352:	leave  
  417353:	push   ds
  417354:	jp     0x417344
  417356:	push   esi
  417357:	mov    ecx,0x7544ba46
  41735c:	jecxz  0x4172e2
  41735e:	arpl   WORD PTR [edi+0x67],sp
  417361:	mov    al,ds:0xee472c5d
  417366:	and    ebp,DWORD PTR [eax]
  417368:	adc    DWORD PTR [esi],ecx
  41736a:	pop    esp
  41736b:	or     esp,ebx
  41736d:	dec    DWORD PTR [ecx+esi*2]
  417370:	cmp    edx,DWORD PTR [ebx+0x707ab0f8]
  417376:	add    eax,0xddb4fd7e
  41737b:	fwait
  41737c:	ds push ds
  41737e:	addr16 in al,dx
  417380:	cmp    DWORD PTR [ecx-0x40],esp
  417383:	rcl    eax,0xb8
  417386:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417387:	(bad)  
  417388:	jecxz  0x417380
  41738a:	rcr    DWORD PTR [edi+0x5cc2af4b],1
  417390:	push   edi
  417391:	dec    edi
  417392:	lods   al,BYTE PTR ds:[esi]
  417393:	mov    edi,0x9be4e363
  417398:	aam    0xc9
  41739a:	inc    edx
  41739b:	das    
  41739c:	mov    ebp,0x1c3030d9
  4173a1:	lods   al,BYTE PTR ds:[esi]
  4173a2:	inc    ecx
  4173a3:	sub    eax,0xf954ed52
  4173a8:	adc    DWORD PTR [ecx-0x384de6e2],edi
  4173ae:	inc    edi
  4173af:	dec    ebx
  4173b0:	xor    al,0x86
  4173b2:	test   DWORD PTR [esi+eiz*2+0x1a],0xf3acea58
  4173ba:	mov    ch,0xe
  4173bc:	fidivr DWORD PTR [ebp+0x1353b81]
  4173c2:	pop    eax
  4173c3:	lock mov bh,0x1f
  4173c6:	loop   0x4173c1
  4173c8:	xor    eax,0x8023ba20
  4173cd:	outs   dx,DWORD PTR ds:[esi]
  4173ce:	xor    DWORD PTR [ebp-0x59caa657],ecx
  4173d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173d5:	add    BYTE PTR [edi-0x578c4ec5],ah
  4173db:	inc    edi
  4173dc:	xor    DWORD PTR [ebx],edx
  4173de:	xchg   esi,eax
  4173df:	outs   dx,BYTE PTR ds:[esi]
  4173e0:	lock pop ds
  4173e2:	jl     0x4173b2
  4173e4:	push   ds
  4173e5:	jnp    0x41737f
  4173e7:	add    BYTE PTR [ecx-0x37],cl
  4173ea:	pusha  
  4173eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173ec:	std    
  4173ed:	bound  ebp,QWORD PTR [ebx]
  4173ef:	icebp  
  4173f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173f1:	inc    edi
  4173f2:	pop    ss
  4173f3:	sbb    cl,dl
  4173f5:	sub    al,0x78
  4173f7:	xchg   edx,ecx
  4173f9:	enter  0xfcf0,0xf3
  4173fd:	sbb    DWORD PTR [ecx-0xddf02b6],esi
  417403:	gs xor eax,0x2757c09e
  417409:	pop    esi
  41740a:	mov    ecx,0x3efe9fe5
  41740f:	jne    0x41739f
  417411:	mov    dl,0xaf
  417413:	sbb    eax,0x1900300d
  417418:	mov    ch,0xc7
  41741a:	add    BYTE PTR [esi-0x147b3b5e],al
  417420:	or     BYTE PTR [edi],ch
  417422:	ror    ebp,1
  417424:	push   eax
  417425:	leave  
  417426:	push   esp
  417427:	jg     0x417473
  417429:	ds mov ebx,0xee2c27b4
  41742f:	popa   
  417430:	push   ss
  417431:	cwde   
  417432:	inc    esi
  417433:	inc    edx
  417434:	mov    fs,WORD PTR [ebx+0x38]
  417437:	gs ret 0xea4a
  41743b:	pusha  
  41743c:	lea    esp,[eax]
  41743e:	mov    BYTE PTR [ecx],al
  417440:	fidivr DWORD PTR [ebx+0x50f0e2b1]
  417446:	jg     0x417475
  417448:	mov    bl,0x8e
  41744a:	ja     0x41740a
  41744c:	pop    ecx
  41744d:	jno    0x417410
  41744f:	dec    edx
  417450:	out    dx,eax
  417451:	loopne 0x41747e
  417453:	call   0x58d5:0xac707f21
  41745a:	clc    
  41745b:	cdq    
  41745c:	outs   dx,BYTE PTR ds:[esi]
  41745d:	fld    st(4)
  41745f:	mov    dh,0xa3
  417461:	(bad)  
  417463:	mov    ebp,0x938b4e1d
  417468:	fwait
  417469:	push   ecx
  41746a:	in     al,dx
  41746b:	gs mov dh,0x68
  41746e:	xor    eax,0xb5e0d7d1
  417473:	hlt    
  417474:	xor    BYTE PTR [ebx],al
  417476:	stos   BYTE PTR es:[edi],al
  417477:	sbb    eax,0x229c4f95
  41747c:	jp     0x41746d
  41747e:	jp     0x417427
  417480:	dec    esi
  417481:	pusha  
  417482:	mov    ah,0x10
  417484:	stos   BYTE PTR es:[edi],al
  417485:	cpuid  
  417487:	add    DWORD PTR [edx-0x24],edx
  41748a:	out    0xdd,eax
  41748c:	dec    esi
  41748d:	add    al,BYTE PTR [edx-0x557a5768]
  417493:	fnstenv [edi+0x73d219ac]
  417499:	dec    esp
  41749a:	fidivr DWORD PTR [ecx-0x7c]
  41749d:	xchg   edi,eax
  41749e:	dec    esi
  41749f:	popa   
  4174a0:	test   eax,0x5747ff16
  4174a5:	pusha  
  4174a6:	enter  0x3d95,0x51
  4174aa:	cmp    al,0x21
  4174ac:	jo     0x417448
  4174ae:	push   ss
  4174af:	mov    al,0x3
  4174b1:	aam    0x2
  4174b3:	push   ebx
  4174b4:	jo     0x417532
  4174b6:	xchg   edx,eax
  4174b7:	mov    ecx,0x97f3b31a
  4174bc:	leave  
  4174bd:	clc    
  4174be:	jns    0x4174bc
  4174c0:	cli    
  4174c1:	aas    
  4174c2:	test   al,0xed
  4174c4:	mov    ecx,0x4e8ddb34
  4174c9:	push   ebx
  4174ca:	add    ah,bh
  4174cc:	cmp    al,0x7f
  4174ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4174cf:	jp     0x4174dc
  4174d1:	adc    DWORD PTR [esi],ecx
  4174d3:	fstp   QWORD PTR [edx]
  4174d5:	mov    eax,ds:0xb764223
  4174da:	ja     0x41746f
  4174dc:	es lahf 
  4174de:	ficom  DWORD PTR [edi+0x1a642bde]
  4174e4:	in     eax,0xd
  4174e6:	mov    dh,0x6c
  4174e8:	into   
  4174e9:	pop    ds
  4174ea:	test   BYTE PTR [ebx],bh
  4174ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4174ed:	test   DWORD PTR [edx+0x3f],0xa70ed27
  4174f4:	out    dx,eax
  4174f5:	mov    cl,ch
  4174f7:	and    ebp,ebx
  4174f9:	dec    edi
  4174fa:	xor    al,0x14
  4174fc:	jns    0x4174b6
  4174fe:	test   DWORD PTR [esi],edx
  417500:	xor    eax,0x8ce2b022
  417505:	mov    al,ds:0x8d820cbc
  41750a:	iret   
  41750b:	or     eax,ecx
  41750d:	mov    eax,ds:0xf75bb190
  417512:	xchg   edi,eax
  417513:	inc    eax
  417514:	mov    ds:0x3bf45e41,al
  417519:	jmp    0xc721ae1e
  41751e:	inc    edx
  41751f:	ja     0x417591
  417521:	sahf   
  417522:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417523:	loope  0x417506
  417525:	cmc    
  417526:	test   al,0xd3
  417528:	dec    ebx
  417529:	push   esi
  41752a:	xchg   ebp,eax
  41752b:	xchg   edi,eax
  41752c:	(bad)  
  41752d:	pop    edx
  41752e:	fwait
  41752f:	jmp    0x4174bb
  417531:	mov    ebx,0xf7af203b
  417536:	pop    es
  417537:	pusha  
  417538:	push   cs
  417539:	sahf   
  41753a:	jo     0x417568
  41753c:	pop    ecx
  41753d:	fcomp  QWORD PTR [edx+0x6dc36a6e]
  417543:	mov    dl,0x87
  417545:	dec    ebp
  417546:	dec    edi
  417547:	stos   BYTE PTR es:[edi],al
  417548:	add    al,0x90
  41754a:	xor    eax,DWORD PTR [ecx+0x16680785]
  417550:	hlt    
  417551:	pop    ebx
  417552:	mov    ecx,0xea32b462
  417557:	loope  0x41752f
  417559:	gs enter 0xc6ab,0xd8
  41755e:	ficomp DWORD PTR [ebp-0x7]
  417561:	pop    ss
  417562:	daa    
  417563:	scas   al,BYTE PTR es:[edi]
  417564:	push   ebp
  417566:	sub    ah,BYTE PTR [bx+si+0x59]
  41756a:	arpl   WORD PTR [edx],cx
  41756c:	xchg   ecx,eax
  41756d:	aam    0x8a
  41756f:	repnz sbb eax,0x406586e2
  417576:	icebp  
  417577:	popa   
  417578:	call   DWORD PTR [esi-0x36f1a669]
  41757e:	cmp    BYTE PTR [ebx],al
  417580:	xor    BYTE PTR [ebx],ah
  417582:	jl     0x4175df
  417584:	retf   0x57a4
  417587:	xlat   BYTE PTR ds:[ebx]
  417588:	push   ecx
  417589:	or     edi,DWORD PTR [esi]
  41758b:	mov    WORD PTR [ecx+0x2d728b4],?
  417591:	adc    edx,DWORD PTR [edi+0x4d3e2450]
  417597:	add    DWORD PTR [eax-0x2c],edi
  41759a:	adc    esi,eax
  41759c:	mov    esp,0xefca995c
  4175a1:	mov    eax,0xc946410b
  4175a6:	push   esi
  4175a7:	cmp    DWORD PTR [ebp-0x6e],ebp
  4175aa:	and    eax,DWORD PTR [eax+0x66]
  4175ad:	adc    al,0x7d
  4175af:	je     0x417567
  4175b1:	adc    dl,BYTE PTR [ebx+0x31990a7e]
  4175b7:	arpl   WORD PTR [ebx+0x6f],cx
  4175ba:	(bad)  
  4175bb:	leave  
  4175bc:	add    cl,BYTE PTR [ebx+edx*2-0x633c0c6b]
  4175c3:	sbb    al,0xbe
  4175c5:	sub    eax,0x8d79e286
  4175ca:	xor    al,0x1b
  4175cc:	sbb    esp,esi
  4175ce:	sahf   
  4175cf:	and    eax,0x32179013
  4175d4:	test   DWORD PTR [ecx+ebp*8],0x4dbc3300
  4175db:	dec    esi
  4175dc:	sub    cl,BYTE PTR [edi+0x6a]
  4175df:	stos   BYTE PTR es:[edi],al
  4175e0:	loopne 0x41762f
  4175e2:	dec    eax
  4175e3:	push   eax
  4175e4:	std    
  4175e5:	cdq    
  4175e6:	leave  
  4175e7:	into   
  4175e8:	xchg   BYTE PTR [edx],dh
  4175ea:	mov    ebp,0x812e82b7
  4175ef:	call   0xb6522136
  4175f4:	nop
  4175f5:	adc    ah,BYTE PTR [eax-0x47]
  4175f8:	inc    esi
  4175f9:	pop    ebp
  4175fa:	add    DWORD PTR ds:0x49dd4860,ebp
  417600:	adc    ch,BYTE PTR [esi-0x6]
  417603:	pushf  
  417604:	scas   eax,DWORD PTR es:[edi]
  417605:	push   cs
  417606:	jecxz  0x417651
  417608:	jmp    0xb7be:0x32aa5dea
  41760f:	mov    bl,0xf9
  417611:	les    ebx,FWORD PTR [eax+0x1d08361a]
  417617:	jecxz  0x41764b
  417619:	mov    ds:0x9a340829,al
  41761e:	cmp    ah,BYTE PTR [ebx+0x7e]
  417621:	scas   al,BYTE PTR es:[edi]
  417622:	cmp    cl,cl
  417624:	int3   
  417625:	clc    
  417626:	inc    esi
  417627:	lahf   
  417628:	jo     0x4175e6
  41762a:	ficom  WORD PTR [ecx-0x1d0a41e]
  417630:	punpcklwd mm3,DWORD PTR [ebp+0x448e2087]
  417637:	daa    
  417638:	ror    cl,0xde
  41763b:	xor    ebx,esp
  41763d:	jl     0x4175fe
  41763f:	test   BYTE PTR [ecx-0x7a3e70e7],ch
  417645:	lods   al,BYTE PTR ds:[esi]
  417646:	sub    DWORD PTR [edi],esp
  417648:	sbb    al,0xcf
  41764a:	leave  
  41764b:	mov    esp,0x5bdd4680
  417650:	ret    
  417651:	add    al,0xf0
  417653:	fs mov ebx,0x350a2e28
  417659:	enter  0x42fc,0x6e
  41765d:	inc    esp
  41765e:	aam    0xef
  417660:	mov    ebp,0x5f253558
  417665:	mov    ah,0x51
  417667:	push   esi
  417668:	dec    ecx
  417669:	lds    ecx,FWORD PTR [edi]
  41766b:	mov    edi,0x6c23d2c
  417670:	xor    edi,DWORD PTR [edx+eax*2-0x4c]
  417674:	data16 es sub al,0xed
  417678:	cmp    bh,bh
  41767a:	jnp    0x41762f
  41767c:	xchg   ecx,eax
  41767d:	and    eax,0x22e70783
  417682:	push   ecx
  417683:	shl    edx,0x9f
  417686:	out    dx,al
  417687:	push   esp
  417688:	in     eax,dx
  417689:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41768a:	push   ebp
  41768b:	mov    dl,0x40
  41768d:	shl    BYTE PTR [ecx+eax*8-0x39],0x8a
  417692:	std    
  417693:	or     eax,DWORD PTR [ebp-0x403eedc0]
  417699:	loop   0x41761e
  41769b:	push   ecx
  41769c:	push   0xffffffe5
  41769e:	mov    edi,0x2b1b1b5f
  4176a3:	jmp    0x417698
  4176a5:	mov    ?,WORD PTR [esi+0x72ccc124]
  4176ab:	repnz and DWORD PTR [edi+0xd],esp
  4176af:	push   edx
  4176b0:	xlat   BYTE PTR ds:[ebx]
  4176b1:	jns    0x4176d0
  4176b3:	mov    edi,DWORD PTR [edx-0x5d]
  4176b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4176b7:	push   es
  4176b8:	lods   eax,DWORD PTR ds:[esi]
  4176b9:	daa    
  4176ba:	pop    ds
  4176bb:	add    ch,0xc4
  4176be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4176bf:	out    0x1b,al
  4176c1:	cmc    
  4176c2:	mov    ch,0x12
  4176c4:	cmp    BYTE PTR [eax-0x25d06249],al
  4176ca:	sub    eax,0xf1e992f7
  4176cf:	mov    ds:0x3a330b3a,eax
  4176d4:	adc    DWORD PTR [ecx+0x485f59f0],0x9dad1389
  4176de:	pusha  
  4176df:	mov    edi,0x9ec4d484
  4176e4:	jmp    0x7edd084a
  4176e9:	test   al,0xb8
  4176eb:	sub    eax,0x34d2888e
  4176f0:	lds    eax,FWORD PTR [ecx-0x1783d833]
  4176f6:	outs   dx,DWORD PTR ds:[esi]
  4176f7:	xlat   BYTE PTR ds:[ebx]
  4176f8:	mov    eax,0x531be85b
  4176fd:	test   eax,0xde6addf1
  417702:	and    edi,DWORD PTR [ebx]
  417704:	dec    ebp
  417705:	jle    0x4176ed
  417707:	mov    dl,0x91
  417709:	inc    eax
  41770a:	sub    BYTE PTR [ecx+0x71],dh
  41770d:	sub    dh,BYTE PTR ds:0x9a0c7396
  417713:	xchg   BYTE PTR [edx+0x4667e63c],ah
  417719:	jnp    0x41769c
  41771b:	push   eax
  41771c:	repz or al,0xc3
  41771f:	and    al,0x50
  417721:	cld    
  417722:	dec    ecx
  417723:	enter  0x586a,0xab
  417727:	dec    ebp
  417728:	into   
  417729:	mov    ch,BYTE PTR [ecx-0x60]
  41772c:	mov    ebp,0xc0fbba2a
  417731:	mov    ebp,0x35f95af5
  417736:	inc    edi
  417737:	imul   edi,DWORD PTR [edx+0x5ef870d],0x38a942a9
  417741:	push   esp
  417742:	and    ebp,ebx
  417744:	push   ebp
  417745:	popa   
  417746:	ins    DWORD PTR es:[edi],dx
  417747:	mov    bl,0x9e
  417749:	call   0xb9fd:0xd847c17
  417750:	in     al,dx
  417751:	test   DWORD PTR [edi],ebx
  417753:	out    dx,eax
  417754:	dec    ebp
  417755:	xlat   BYTE PTR ds:[ebx]
  417756:	div    BYTE PTR [edx]
  417758:	aaa    
  417759:	cdq    
  41775a:	leave  
  41775b:	jmp    0x417702
  41775d:	jecxz  0x4177b7
  41775f:	mov    ch,0xd2
  417761:	xor    al,0x70
  417763:	mov    dh,0x6f
  417765:	sub    ch,ch
  417767:	xor    dl,dh
  417769:	popa   
  41776a:	fdivp  st(3),st
  41776c:	push   eax
  41776d:	xor    al,0xd
  41776f:	(bad)  
  417770:	cs push cs
  417772:	or     dl,bh
  417774:	nop
  417775:	jg     0x4177ed
  417777:	fs test al,0x3b
  41777a:	test   DWORD PTR [eax+edi*1+0x116878d8],ecx
  417781:	and    esp,esi
  417783:	xchg   ebp,eax
  417784:	lea    esp,[ecx]
  417786:	cld    
  417787:	adc    eax,0xf914f294
  41778c:	cwde   
  41778d:	push   ebp
  41778e:	(bad)  
  41778f:	sub    ebp,DWORD PTR [esi]
  417791:	add    dl,BYTE PTR [edx+esi*2]
  417794:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417795:	(bad)  
  417796:	mov    cl,0x79
  417798:	mov    ah,0xab
  41779a:	cmp    BYTE PTR [edx+0x6a],0x16
  41779e:	arpl   ax,cx
  4177a0:	push   edi
  4177a1:	std    
  4177a2:	inc    esi
  4177a3:	inc    ebx
  4177a4:	ret    0x184f
  4177a7:	imul   esi,DWORD PTR [eax-0x67313550],0xb293fce3
  4177b1:	sub    DWORD PTR [eax],0x39fe1006
  4177b7:	loopne 0x41776e
  4177b9:	rcl    DWORD PTR [eax+edi*2],1
  4177bc:	call   0xb98d:0xdb2f8fdb
  4177c3:	retf   0xed69
  4177c6:	xor    al,bh
  4177c8:	pushf  
  4177c9:	or     dl,ah
  4177cb:	sbb    ecx,DWORD PTR [edi-0x3bec61bd]
  4177d1:	mov    bl,0xcf
  4177d3:	(bad)  
  4177d4:	scas   eax,DWORD PTR es:[edi]
  4177d5:	ds mov dh,0xe4
  4177d8:	xchg   DWORD PTR [esi+0x3dc3df23],ebp
  4177de:	add    ah,BYTE PTR [edi+0x77]
  4177e1:	clc    
  4177e2:	mov    ds:0x939d8d5,al
  4177e7:	cli    
  4177e8:	mov    eax,0x592b2272
  4177ed:	fs jne 0x41777a
  4177f0:	cmp    eax,edi
  4177f2:	push   cs
  4177f3:	outs   dx,DWORD PTR ds:[esi]
  4177f4:	data16 or al,BYTE PTR [esi+edi*2]
  4177f8:	cmp    ch,BYTE PTR [eax]
  4177fa:	inc    DWORD PTR [ebx]
  4177fc:	mov    DWORD PTR [eax],edi
  4177fe:	lods   eax,DWORD PTR ds:[esi]
  4177ff:	push   ebp
  417800:	mov    dl,0x51
  417802:	and    bl,BYTE PTR [ecx]
  417804:	mov    ds:0x5c4a38dd,al
  417809:	pop    edi
  41780a:	out    dx,eax
  41780b:	mov    esi,DWORD PTR [edx+0x70ba8657]
  417811:	jl     0x417887
  417813:	push   ebp
  417814:	sbb    ch,BYTE PTR [edx+0x3e]
  417817:	xchg   esp,eax
  417818:	push   esp
  417819:	(bad)  
  41781a:	mov    eax,0x86f58efc
  41781f:	test   eax,0x20af9aa1
  417824:	les    ebx,FWORD PTR [esi+0x46]
  417827:	and    BYTE PTR [edx],al
  417829:	retf   
  41782a:	stc    
  41782b:	or     eax,0xd8b33fbd
  417830:	mov    al,0x6a
  417832:	sbb    esi,DWORD PTR [edx-0x6da9027a]
  417838:	test   BYTE PTR [esi-0x1f],al
  41783b:	jne    0x4177d1
  41783d:	xchg   esp,eax
  41783e:	inc    esi
  41783f:	xchg   esp,eax
  417840:	add    al,0x18
  417842:	sbb    ebx,DWORD PTR [ebx+edx*8]
  417845:	retf   0x2d15
  417848:	adc    edi,ebx
  41784a:	out    dx,al
  41784b:	jne    0x41785a
  41784d:	aad    0xaa
  41784f:	adc    esp,DWORD PTR [edi+0x10]
  417852:	xchg   ebx,eax
  417853:	push   edx
  417854:	ins    DWORD PTR es:[edi],dx
  417855:	sub    esi,edi
  417857:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417858:	fucomip st,st(0)
  41785a:	mov    dl,0x29
  41785c:	inc    esi
  41785d:	sub    BYTE PTR [esi],dl
  41785f:	lods   al,BYTE PTR ds:[esi]
  417860:	out    0xf0,eax
  417862:	sbb    eax,DWORD PTR [ebp+0x3e78514b]
  417868:	cmp    al,0x24
  41786a:	xchg   dh,al
  41786c:	cli    
  41786d:	(bad)  
  41786e:	mov    ds:0xf63e1b59,eax
  417873:	jecxz  0x41782e
  417875:	fs out dx,al
  417877:	push   cs
  417878:	mov    ch,BYTE PTR [edx+ecx*1]
  41787b:	inc    esp
  41787c:	lods   eax,DWORD PTR ds:[esi]
  41787d:	mov    bl,0x1d
  41787f:	fld    QWORD PTR [ebx-0x46af460d]
  417885:	inc    ecx
  417886:	out    dx,al
  417887:	jno    0x4178c7
  417889:	mov    ds:0xb4177a4e,eax
  41788e:	cmp    DWORD PTR [eax],edx
  417890:	jmp    0x128a:0x5b386cc1
  417897:	jle    0x417872
  417899:	push   ebp
  41789a:	leave  
  41789b:	cmp    BYTE PTR [edx+0x79],ch
  41789e:	stc    
  41789f:	and    al,bl
  4178a1:	mov    al,0xc4
  4178a3:	xlat   BYTE PTR ds:[ebx]
  4178a4:	dec    ecx
  4178a5:	test   eax,0x9af8f568
  4178aa:	js     0x4178bc
  4178ac:	or     ecx,esp
  4178ae:	call   0x9278c213
  4178b3:	cmp    ch,BYTE PTR [edx+0x2d7e75d8]
  4178b9:	lock inc edi
  4178bb:	jge    0x4178a4
  4178bd:	mov    cl,0xd6
  4178bf:	push   esi
  4178c0:	and    eax,0xaeadbfd5
  4178c5:	hlt    
  4178c6:	imul   ecx,DWORD PTR [edi-0x7958cd90],0xde766112
  4178d0:	(bad)  
  4178d1:	fcom   QWORD PTR [edi-0x1b8086d5]
  4178d7:	jecxz  0x41785a
  4178d9:	mov    dh,0x78
  4178db:	pop    ebp
  4178dc:	pop    ds
  4178dd:	sub    esi,DWORD PTR [esi]
  4178df:	push   cs
  4178e0:	bts    DWORD PTR ds:0x87bd6b6d,eax
  4178e7:	inc    eax
  4178e8:	hlt    
  4178e9:	adc    DWORD PTR [edx+0x51ad31a5],ebp
  4178ef:	mov    ebp,0x4b4af7b1
  4178f4:	push   0x8e9c1631
  4178f9:	mov    ds:0x74bf5bd2,al
  4178fe:	clc    
  4178ff:	packssdw mm5,QWORD PTR [ecx+0x7d7bb54]
  417906:	jno    0x4178fd
  417908:	std    
  417909:	cmp    al,0xb7
  41790b:	fisttp DWORD PTR [ebp-0x5ef8d072]
  417911:	std    
  417912:	xor    BYTE PTR [edx],ch
  417914:	mov    edx,0xeb35e631
  417919:	adc    al,0xaf
  41791b:	or     eax,0x251fa034
  417920:	mov    al,ds:0xc2fadc49
  417925:	cdq    
  417926:	fsubr  DWORD PTR [edx-0x57]
  417929:	lea    ebx,[ebp-0x650a248c]
  41792f:	mov    gs,WORD PTR [ecx-0x100416f3]
  417935:	sahf   
  417936:	imul   eax,DWORD PTR [edx+0x24],0xffffff87
  41793a:	(bad)
  41793d:	sbb    ah,BYTE PTR [ecx-0x5a838d7d]
  417943:	fsubr  st(5),st
  417945:	jp     0x417908
  417947:	mov    esi,0x45fea71c
  41794c:	adc    al,0x7e
  41794e:	lods   al,BYTE PTR ds:[esi]
  41794f:	popa   
  417950:	fcmovnu st,st(7)
  417952:	push   ebx
  417953:	test   BYTE PTR [ebx-0x18],dh
  417956:	into   
  417957:	(bad)  
  417958:	push   ecx
  417959:	jmp    0x417904
  41795b:	arpl   ax,di
  41795d:	inc    ebx
  41795e:	mov    dh,0x93
  417960:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417961:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417962:	clc    
  417963:	mov    fs,ebx
  417965:	push   ds
  417966:	pusha  
  417967:	mov    WORD PTR [esi],ss
  417969:	jno    0x417947
  41796b:	bound  ebx,QWORD PTR [ebp+ecx*4+0x25]
  41796f:	cmp    esi,ecx
  417971:	push   edx
  417972:	pop    ebx
  417973:	repnz (bad) 
  417975:	aam    0xa4
  417977:	cmp    eax,0x8e240540
  41797c:	push   ebx
  41797d:	(bad)  
  41797e:	std    
  41797f:	jmp    0xf827bcf3
  417984:	das    
  417985:	mov    edi,0xc5fceed0
  41798a:	push   es
  41798b:	mov    ds:0x143ddf20,eax
  417990:	cli    
  417991:	fimul  DWORD PTR [eax+0x13]
  417994:	fdiv   st(4),st
  417996:	sbb    eax,0x990c18cc
  41799b:	(bad)  
  41799c:	retf   0x2eed
  41799f:	repz cmp dh,BYTE PTR fs:[eax+0x1e5a5986]
  4179a7:	fmul   QWORD PTR [ecx]
  4179a9:	mov    gs,WORD PTR [ebx+0x768b840d]
  4179af:	or     eax,0xf97221d9
  4179b4:	mov    WORD PTR cs:[ecx+0x5b022c28],ss
  4179bb:	xchg   ebp,eax
  4179bc:	scas   eax,DWORD PTR es:[edi]
  4179bd:	cmp    ebx,ebp
  4179bf:	ins    BYTE PTR es:[edi],dx
  4179c0:	les    esp,FWORD PTR [ecx]
  4179c2:	paddq  mm7,mm4
  4179c5:	push   edi
  4179c6:	push   eax
  4179c7:	mov    ah,0x13
  4179c9:	inc    esp
  4179ca:	inc    esi
  4179cb:	mov    dh,0x8c
  4179cd:	in     eax,dx
  4179ce:	into   
  4179cf:	and    cl,bh
  4179d1:	or     dh,BYTE PTR [eax-0x7b392881]
  4179d7:	mov    edx,0x7740738a
  4179dc:	leave  
  4179dd:	jae    0x4179dc
  4179df:	inc    esi
  4179e0:	xor    eax,0xcd64960f
  4179e5:	xchg   ebx,eax
  4179e6:	ret    
  4179e7:	mov    ch,0xbb
  4179e9:	dec    esp
  4179ea:	test   DWORD PTR [esi+eax*1],eax
  4179ed:	jmp    DWORD PTR [esi-0x73]
  4179f0:	aam    0x7a
  4179f2:	sub    ch,BYTE PTR [edx-0x4fb2aaa1]
  4179f8:	pop    ds
  4179f9:	daa    
  4179fa:	jecxz  0x4179df
  4179fc:	lods   al,BYTE PTR ds:[esi]
  4179fd:	rcr    DWORD PTR fs:[edi+0x2],cl
  417a01:	jmp    0x6359e567
  417a06:	jge    0x417a13
  417a08:	xchg   ecx,eax
  417a09:	push   ebx
  417a0a:	les    esi,FWORD PTR gs:[ecx]
  417a0d:	retf   0xf997
  417a10:	sbb    bl,BYTE PTR [ebp-0x68]
  417a13:	add    edi,DWORD PTR [ecx+ebp*4-0x10]
  417a17:	icebp  
  417a18:	sub    BYTE PTR [ebx+0x40dcbff1],0x23
  417a1f:	(bad)  
  417a20:	xor    BYTE PTR [eax],ch
  417a22:	(bad)  [edx-0x3f]
  417a25:	retf   0x16f0
  417a28:	add    al,0x91
  417a2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a2b:	cmc    
  417a2c:	or     al,0x2e
  417a2e:	sub    eax,0xef706b39
  417a33:	shl    DWORD PTR [ebx*8+0x21028053],1
  417a3a:	dec    ebx
  417a3b:	(bad)  
  417a3c:	lods   al,BYTE PTR ds:[esi]
  417a3d:	inc    ebp
  417a3e:	cmp    bl,dh
  417a40:	pop    ds
  417a41:	cwde   
  417a42:	in     al,dx
  417a43:	pusha  
  417a44:	ja     0x417a7a
  417a46:	rcl    DWORD PTR [edx+0x2b2dd47],0x65
  417a4d:	xor    DWORD PTR [eax-0x76],ebp
  417a50:	hlt    
  417a51:	out    0x8b,eax
  417a53:	(bad)  
  417a54:	fwait
  417a55:	pop    ds
  417a56:	push   ebx
  417a57:	clc    
  417a58:	retf   0xf8a7
  417a5b:	sbb    eax,0x4f142030
  417a60:	(bad)  
  417a61:	and    eax,0x52a48603
  417a66:	add    dl,ah
  417a68:	outs   dx,DWORD PTR ds:[esi]
  417a69:	fs ret 0x9b1c
  417a6d:	mov    ds:0xeccb9d57,al
  417a72:	xchg   edx,eax
  417a73:	int    0xfc
  417a75:	xchg   edx,eax
  417a76:	push   cs
  417a77:	test   BYTE PTR [edx+0x44],dh
  417a7a:	push   0x2e34d3ef
  417a7f:	jge    0x417a8e
  417a81:	call   0xf38d:0x51c83995
  417a88:	ss adc al,0x1a
  417a8b:	sbb    DWORD PTR [eax+0x44],0xffffffb8
  417a8f:	daa    
  417a90:	imul   esi,ecx,0x214f7aeb
  417a96:	test   ebp,edi
  417a98:	mov    ecx,0xc6872cdb
  417a9d:	jl     0x417a82
  417a9f:	mov    edi,0xbed94fc4
  417aa4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417aa5:	push   edi
  417aa6:	pop    esi
  417aa7:	dec    esp
  417aa8:	dec    eax
  417aa9:	scas   eax,DWORD PTR es:[edi]
  417aaa:	icebp  
  417aab:	sbb    DWORD PTR [esi+0x37],eax
  417aae:	dec    ebp
  417aaf:	add    BYTE PTR [edx],ch
  417ab1:	jnp    0x417b0b
  417ab3:	jae    0x417aaf
  417ab5:	imul   esi,DWORD PTR [ecx+0x64bae35c],0x23
  417abc:	aad    0x84
  417abe:	cmc    
  417abf:	iret   
  417ac0:	out    0xf0,eax
  417ac2:	sbb    ch,0x1f
  417ac5:	jecxz  0x417a59
  417ac7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ac8:	into   
  417ac9:	xlat   BYTE PTR ds:[ebx]
  417aca:	sub    DWORD PTR [edi+ecx*8],0x2cf8e9b6
  417ad1:	mov    edi,0x7edd1501
  417ad6:	aam    0xcb
  417ad8:	aam    0x5c
  417ada:	pop    eax
  417adb:	jne    0x417b22
  417add:	loope  0x417aab
  417adf:	ins    BYTE PTR es:[edi],dx
  417ae0:	mov    al,ds:0x43b6ccb
  417ae5:	in     eax,dx
  417ae6:	sub    al,0xc9
  417ae8:	or     eax,0x276f4f78
  417aed:	shl    DWORD PTR [edi-0x28bf831],0x3a
  417af4:	nop
  417af5:	and    esp,ecx
  417af7:	call   0xf30f735b
  417afc:	sub    esp,esi
  417afe:	adc    al,0x90
  417b00:	shl    DWORD PTR [edx],1
  417b02:	stc    
  417b03:	dec    ebp
  417b04:	adc    al,ch
  417b06:	gs add eax,0x26fe5e2e
  417b0c:	outs   dx,BYTE PTR ds:[esi]
  417b0d:	aad    0xe9
  417b0f:	clc    
  417b10:	int    0xb7
  417b12:	mov    eax,ds:0xebe629a0
  417b17:	add    BYTE PTR [edi],al
  417b19:	dec    ecx
  417b1a:	test   BYTE PTR [esi],ah
  417b1c:	inc    DWORD PTR [edi]
  417b1e:	add    al,0xa2
  417b20:	retf   0x8536
  417b23:	and    eax,ebp
  417b25:	in     eax,0xe3
  417b27:	in     al,dx
  417b28:	and    al,BYTE PTR [edi-0x37]
  417b2b:	jno    0x417b66
  417b2d:	rcr    DWORD PTR [ecx+0x1c0bcf1b],cl
  417b33:	outs   dx,DWORD PTR ds:[esi]
  417b34:	mov    eax,ds:0x9e543dc4
  417b39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b3a:	pop    eax
  417b3b:	and    al,0xd
  417b3d:	and    DWORD PTR [edi-0x4b0b9d5],esp
  417b43:	cdq    
  417b44:	push   eax
  417b45:	mov    al,ds:0xa6935dc9
  417b4a:	inc    esp
  417b4b:	mov    al,0xdc
  417b4d:	pop    ds
  417b4e:	xchg   DWORD PTR [ebp+0x73],edi
  417b51:	jmp    FWORD PTR [ebx+0x43]
  417b54:	loop   0x417b1f
  417b56:	sti    
  417b57:	dec    edi
  417b58:	or     DWORD PTR [edi],esp
  417b5a:	icebp  
  417b5b:	mov    ah,bl
  417b5d:	test   eax,0x7ba41682
  417b62:	sahf   
  417b63:	(bad)  
  417b64:	adc    bh,BYTE PTR [ebp+0x4bcb446f]
  417b6a:	arpl   WORD PTR [edi+edx*4-0x49],di
  417b6e:	fs daa 
  417b70:	xor    BYTE PTR [ebp+eax*4+0x69],ah
  417b74:	fxch   st(0)
  417b76:	jmp    0x4928:0x8ee0c15b
  417b7d:	iret   
  417b7e:	pop    ss
  417b7f:	cmp    eax,0xc2a4c899
  417b84:	push   eax
  417b85:	push   ss
  417b86:	jmp    0x417bd5
  417b88:	jns    0x417b7b
  417b8a:	pop    esi
  417b8b:	fild   DWORD PTR [eax+0x1c92fef9]
  417b91:	outs   dx,BYTE PTR ds:[esi]
  417b92:	sbb    eax,0x715fa29
  417b97:	sub    BYTE PTR [ebx],bh
  417b99:	mov    ecx,edx
  417b9b:	sahf   
  417b9c:	xchg   esi,eax
  417b9d:	or     cl,BYTE PTR [edi+0x27]
  417ba0:	xchg   ecx,eax
  417ba1:	adc    ch,BYTE PTR [ebp-0x2d]
  417ba4:	cli    
  417ba5:	mov    cl,0x13
  417ba7:	cmc    
  417ba8:	jne    0x417be0
  417baa:	inc    eax
  417bab:	fisttp QWORD PTR gs:[edi+0xd9b5c41]
  417bb2:	in     eax,dx
  417bb3:	call   0xd91:0x8acc0cef
  417bba:	push   edx
  417bbb:	jne    0x417be8
  417bbd:	pop    ecx
  417bbe:	mov    edx,0xd6572f83
  417bc3:	bsf    esp,esi
  417bc6:	scas   al,BYTE PTR es:[edi]
  417bc7:	cmp    bh,BYTE PTR [esi+0x2a]
  417bca:	push   esi
  417bcb:	jns    0x417bdf
  417bcd:	pop    esi
  417bce:	xchg   esp,eax
  417bcf:	mov    ecx,0xc9aada5d
  417bd4:	neg    BYTE PTR [ecx]
  417bd6:	js     0x417b8c
  417bd8:	test   eax,0x140d84b8
  417bdd:	xchg   ebp,eax
  417bdf:	loop   0x417b6f
  417be1:	pop    ecx
  417be2:	test   al,0x15
  417be4:	add    edi,DWORD PTR ds:0x5ee897ac
  417bea:	std    
  417beb:	mov    esi,0x7e15bb70
  417bf0:	cmp    ah,BYTE PTR [edx-0xf]
  417bf3:	xor    DWORD PTR [edx+0x9456974],ecx
  417bf9:	pop    eax
  417bfa:	aad    0xd6
  417bfc:	xchg   ecx,eax
  417bfd:	inc    ecx
  417bfe:	nop
  417bff:	pop    ss
  417c00:	sub    DWORD PTR [ebp-0x2],eax
  417c03:	push   esp
  417c04:	adc    ah,0xd8
  417c07:	outs   dx,DWORD PTR ds:[esi]
  417c08:	dec    edx
  417c09:	pop    ebp
  417c0a:	mov    BYTE PTR [ebx-0x72],dh
  417c0d:	jmp    0x74258b50
  417c12:	mov    ds:0x4951ec5a,eax
  417c17:	xor    BYTE PTR [ebx+0x61e051f],dl
  417c1d:	int3   
  417c1e:	ror    BYTE PTR [edi+edi*8],cl
  417c21:	cli    
  417c22:	mov    edi,0x65b9c4c9
  417c27:	mov    esi,0x3c8b3086
  417c2c:	lea    ebp,[edi-0x1b]
  417c2f:	push   ss
  417c30:	dec    edx
  417c31:	pop    eax
  417c32:	std    
  417c33:	jb     0x417bc0
  417c35:	inc    eax
  417c36:	mov    BYTE PTR [edi],cl
  417c38:	clc    
  417c39:	cmp    eax,0xc985f44e
  417c3e:	loopne 0x417c51
  417c40:	mov    ch,BYTE PTR [ecx+ebx*2-0x395ae70b]
  417c47:	xor    eax,0x92707d94
  417c4c:	fsubp  st(5),st
  417c4e:	ret    
  417c4f:	aaa    
  417c50:	lds    esi,FWORD PTR [edx]
  417c52:	or     bh,ah
  417c54:	jmp    0xb92c:0xea05a23a
  417c5b:	mov    ecx,0xb4ce30dd
  417c60:	sub    al,0xdf
  417c62:	inc    ebx
  417c63:	mov    eax,ds:0x858fcabc
  417c68:	stos   BYTE PTR es:[edi],al
  417c69:	and    ebx,DWORD PTR [esi]
  417c6b:	ins    DWORD PTR es:[edi],dx
  417c6c:	inc    esp
  417c6d:	ins    DWORD PTR es:[edi],dx
  417c6e:	cmp    dl,BYTE PTR [esi-0x69]
  417c71:	dec    esp
  417c72:	fs mov ch,0xc1
  417c75:	adc    eax,0xae772b87
  417c7a:	jns    0x417c09
  417c7c:	sahf   
  417c7d:	daa    
  417c7e:	jl     0x417c3c
  417c80:	pop    edi
  417c81:	mov    ds:0x2599631b,al
  417c86:	xchg   ebp,eax
  417c87:	fdiv   QWORD PTR [edi+0x27]
  417c8a:	jno    0x417c3b
  417c8c:	jo     0x417c85
  417c8e:	pop    es
  417c8f:	and    BYTE PTR [esi-0x49],0x99
  417c93:	jg     0x417c87
  417c95:	dec    ecx
  417c96:	push   ebx
  417c97:	inc    edi
  417c98:	inc    esp
  417c99:	pusha  
  417c9a:	jb     0x417ca6
  417c9c:	lock push 0xf71ba466
  417ca2:	dec    eax
  417ca3:	shr    BYTE PTR [ecx-0x2232be5c],cl
  417ca9:	repnz mov cs,ebx
  417cac:	test   eax,0x3e894166
  417cb1:	retf   
  417cb2:	sbb    al,0x8b
  417cb4:	int3   
  417cb5:	jp     0x417cee
  417cb7:	dec    ebp
  417cb8:	pop    ds
  417cb9:	loope  0x417ce6
  417cbb:	add    DWORD PTR [edx+ebp*8+0x45],ecx
  417cbf:	cmp    DWORD PTR [edi-0x17340854],ebp
  417cc5:	dec    ebp
  417cc6:	mov    DWORD PTR [eax-0x4b],0x3671076e
  417ccd:	cwde   
  417cce:	adc    ebx,DWORD PTR [esp+edi*4+0x5a916f64]
  417cd5:	inc    esi
  417cd6:	add    eax,0xfd0372fb
  417cdb:	and    edi,ecx
  417cdd:	cmp    eax,0xcc7cfe22
  417ce2:	xchg   BYTE PTR [edx],dl
  417ce4:	out    0x72,eax
  417ce6:	mov    ?,edx
  417ce8:	dec    esp
  417ce9:	mov    al,0x80
  417ceb:	cmp    DWORD PTR [si+0x79],edi
  417cef:	cld    
  417cf0:	test   eax,0xd3141429
  417cf5:	and    ah,BYTE PTR [eax+0x43ae823a]
  417cfb:	jmp    0x417cf1
  417cfd:	and    ebp,DWORD PTR [esi+0x3c6324ff]
  417d03:	cdq    
  417d04:	pop    esp
  417d05:	shr    BYTE PTR [ebp+0x20],cl
  417d08:	popa   
  417d09:	jbe    0x417c9c
  417d0b:	mov    ah,0x82
  417d0d:	(bad)  
  417d0e:	mov    ah,0xba
  417d10:	push   esi
  417d11:	outs   dx,BYTE PTR ds:[esi]
  417d12:	imul   ebx,esp,0xffffff88
  417d15:	aas    
  417d16:	mov    ah,0x2b
  417d18:	imul   esp,DWORD PTR [edi],0x6c80658c
  417d1e:	and    dl,BYTE PTR [ecx-0x44]
  417d21:	pop    edi
  417d22:	in     eax,0x92
  417d24:	xor    bh,BYTE PTR [esi-0x7617c928]
  417d2a:	cmp    BYTE PTR [edi],0xb9
  417d2d:	and    al,0x4c
  417d2f:	mov    cl,ch
  417d31:	jge    0x417d3c
  417d33:	jb     0x417d78
  417d35:	dec    ecx
  417d36:	addr16 ja 0x417daf
  417d39:	mov    ds:0xd38475f9,al
  417d3e:	dec    esp
  417d3f:	stos   DWORD PTR es:[edi],eax
  417d40:	and    eax,0xaf83d46c
  417d45:	je     0x417d27
  417d47:	and    DWORD PTR [edx],ebp
  417d49:	adc    eax,0xb2031609
  417d4e:	sbb    BYTE PTR ds:0x73a10835,0x36
  417d55:	push   0x2d6f3008
  417d5a:	fwait
  417d5b:	push   0x7a
  417d5d:	clc    
  417d5e:	mov    bl,0xc0
  417d60:	xor    ebx,DWORD PTR [ebp+0x5d761f80]
  417d66:	inc    eax
  417d67:	mov    ds:0x32b178d7,al
  417d6c:	xchg   ecx,eax
  417d6d:	jecxz  0x417de7
  417d6f:	retf   
  417d70:	sbb    BYTE PTR [ebx],ah
  417d72:	adc    bl,dh
  417d74:	fldenv [eax-0x1d]
  417d77:	jmp    0x417d6c
  417d79:	mov    eax,ds:0xba97944a
  417d7e:	mov    ebx,0xfe7d3b09
  417d83:	adc    bl,BYTE PTR [edx]
  417d85:	(bad)  
  417d86:	jg     0x417dce
  417d88:	outs   dx,BYTE PTR ds:[esi]
  417d89:	inc    edi
  417d8a:	addr16 popf 
  417d8c:	(bad)  
  417d8d:	pop    edi
  417d8e:	call   0x45688461
  417d93:	and    al,0x69
  417d95:	ss fcmovu st,st(2)
  417d98:	in     al,0x52
  417d9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d9b:	dec    edx
  417d9c:	scas   eax,DWORD PTR es:[edi]
  417d9d:	push   eax
  417d9e:	push   0x27
  417da0:	je     0x417dd5
  417da2:	cmp    al,BYTE PTR [ebx+0x1]
  417da5:	clc    
  417da6:	lods   eax,DWORD PTR ds:[esi]
  417da7:	dec    ebp
  417da8:	mov    bl,0x7c
  417daa:	mov    dl,0x97
  417dac:	shr    BYTE PTR [esi-0x55417fb3],1
  417db2:	mov    gs,WORD PTR [esp]
  417db5:	jle    0x417dd5
  417db7:	shl    ah,1
  417db9:	addr16 push 0xffffffcc
  417dbc:	int    0xb9
  417dbe:	hlt    
  417dbf:	and    DWORD PTR [eax+ecx*1],edi
  417dc2:	not    DWORD PTR [ecx]
  417dc4:	push   ebp
  417dc5:	stos   BYTE PTR es:[edi],al
  417dc6:	mov    DWORD PTR [esi],edx
  417dc8:	jns    0x417db3
  417dca:	fld    DWORD PTR [eax-0x158a57f1]
  417dd0:	mov    esi,0xe8a14382
  417dd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417dd6:	mov    al,ds:0x342a164b
  417ddb:	mov    dl,0xed
  417ddd:	test   eax,0xebe5d58c
  417de2:	adc    eax,0x800c4fa5
  417de7:	xrelease mov BYTE PTR [ebx+0x8538912],cl
  417dee:	popf   
  417def:	nop
  417df0:	inc    ebx
  417df1:	inc    esi
  417df2:	mov    esi,0xe06031ba
  417df7:	fimul  WORD PTR [esi]
  417df9:	fs adc al,0xc3
  417dfc:	inc    ebx
  417dfd:	xchg   ebp,eax
  417dfe:	stc    
  417dff:	inc    esi
  417e00:	idiv   DWORD PTR [edx]
  417e02:	in     eax,dx
  417e03:	sbb    edx,ecx
  417e05:	and    DWORD PTR [edx],ebx
  417e07:	inc    ebp
  417e08:	adc    eax,0x85aacf5
  417e0d:	sub    bl,BYTE PTR [ebx-0x4b]
  417e10:	ins    DWORD PTR es:[edi],dx
  417e11:	js     0x417de7
  417e13:	mov    cl,0xe5
  417e15:	ds cdq 
  417e17:	add    DWORD PTR [ebx-0x71],eax
  417e1a:	xchg   esp,eax
  417e1b:	call   0x50e0:0x164390fa
  417e22:	xchg   DWORD PTR [eax+0x7b],eax
  417e25:	jb     0x417e8a
  417e27:	dec    edx
  417e28:	(bad)  
  417e29:	fcomp  QWORD PTR ds:0xd43cb6e6
  417e2f:	pushf  
  417e30:	adc    eax,0x9df8c80c
  417e35:	xchg   edi,eax
  417e36:	pop    ss
  417e37:	add    BYTE PTR [eax],al
  417e39:	jo     0x417e42
  417e3b:	xchg   ebx,eax
  417e3c:	(bad)  
  417e3e:	and    dh,BYTE PTR ds:0x60e2bd0
  417e44:	pop    ds
  417e45:	mov    BYTE PTR [ebx-0x45cd4a2d],al
  417e4b:	jl     0x417e65
  417e4d:	icebp  
  417e4e:	xor    DWORD PTR ds:0xd431f2e7,esp
  417e54:	jae    0xb86134a8
  417e5a:	test   BYTE PTR [ebx-0x1d],ch
  417e5d:	test   al,0x78
  417e5f:	mov    al,0xe3
  417e61:	cmp    eax,0xc8fe5e56
  417e66:	adc    esp,DWORD PTR [edx+0x34]
  417e69:	push   edi
  417e6a:	and    al,BYTE PTR ds:0x7878418c
  417e70:	icebp  
  417e71:	(bad)  
  417e72:	ds and esi,ebx
  417e75:	cmp    eax,0x84978174
  417e7a:	in     eax,0x40
  417e7c:	std    
  417e7d:	mov    bh,0xb1
  417e7f:	ror    bl,1
  417e81:	nop
  417e82:	xor    ebx,edx
  417e84:	add    BYTE PTR [ecx],bl
  417e86:	or     edi,esi
  417e88:	lock dec ecx
  417e8b:	ret    0x4b8e
  417e8e:	cmp    DWORD PTR [edi+0x11476c1b],0xffffffd3
  417e95:	cmp    DWORD PTR [edx+0x12],ecx
  417e98:	and    eax,0x70ef1e47
  417e9d:	mov    bh,0x9d
  417e9f:	mov    ch,0x7
  417ea1:	xchg   esp,eax
  417ea2:	and    al,0x5e
  417ea4:	psubsb mm0,QWORD PTR [ebx-0x354c80f]
  417eab:	mov    al,0x75
  417ead:	sbb    ah,al
  417eaf:	repz loope 0x417e6d
  417eb2:	enter  0xfa04,0x54
  417eb6:	adc    BYTE PTR [ecx+0x602bc2bb],dl
  417ebc:	fsubr  DWORD PTR [ebp+0x4d3c0084]
  417ec2:	sbb    BYTE PTR [edi+esi*2-0xbe752e8],0x77
  417eca:	push   edi
  417ecb:	fsubr  DWORD PTR [esi+edi*4-0x5ffde7e9]
  417ed2:	not    BYTE PTR [ebp-0xd]
  417ed5:	jge    0x417f1f
  417ed7:	pushf  
  417ed8:	(bad)  
  417ed9:	rcr    BYTE PTR [edx],cl
  417edb:	dec    ebp
  417edc:	jne    0x417ef7
  417ede:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417edf:	push   ds
  417ee0:	fisttp QWORD PTR [eax+0x12]
  417ee3:	mov    BYTE PTR [ecx+0x24],al
  417ee6:	xor    bl,0x70
  417ee9:	call   0xc9d0:0x885e107f
  417ef0:	inc    esi
  417ef1:	sbb    esp,eax
  417ef3:	ror    BYTE PTR [ebp+0x57],0x33
  417ef7:	mov    esp,0x48af68b2
  417efc:	pop    edi
  417efd:	scas   al,BYTE PTR es:[edi]
  417efe:	jnp    0x417e8c
  417f00:	les    edx,FWORD PTR [ebx+eiz*1+0x34]
  417f04:	or     esi,DWORD PTR [eax+0x7e]
  417f07:	jmp    0x417f4c
  417f09:	xor    BYTE PTR [ecx-0x2b],ah
  417f0c:	test   DWORD PTR [esi-0x2224e3ca],esi
  417f12:	or     ah,BYTE PTR [ecx-0x7a]
  417f15:	pop    ebx
  417f16:	cld    
  417f17:	push   esi
  417f18:	or     BYTE PTR [ebx-0x65],al
  417f1b:	rcl    DWORD PTR [ecx],cl
  417f1d:	aad    0x42
  417f1f:	(bad)  
  417f20:	jnp    0x417ee9
  417f22:	dec    edi
  417f23:	aam    0x11
  417f25:	in     al,0xbd
  417f27:	mov    al,ds:0xf2b59245
  417f2c:	cmc    
  417f2d:	adc    al,0x3f
  417f2f:	adc    eax,0xee6ba8f
  417f34:	bound  edi,QWORD PTR [ebp+0x4b94b359]
  417f3a:	or     al,0x36
  417f3c:	pop    ss
  417f3d:	pop    ds
  417f3e:	aam    0x10
  417f40:	ins    DWORD PTR es:[edi],dx
  417f41:	or     DWORD PTR [edi+0x64ffa1a5],esp
  417f47:	outs   dx,DWORD PTR ds:[esi]
  417f48:	fistp  QWORD PTR [ebx+0x6c]
  417f4b:	dec    eax
  417f4c:	xchg   edx,eax
  417f4d:	dec    esp
  417f4e:	mov    fs,edi
  417f50:	or     eax,DWORD PTR [esi+ecx*2-0x639d271b]
  417f57:	pop    esi
  417f58:	adc    BYTE PTR [edi],0x2f
  417f5b:	cdq    
  417f5c:	je     0x417f01
  417f5e:	mov    ebp,0xdb56f477
  417f63:	or     DWORD PTR [edi-0x5c75a1ca],0x7aef6c7e
  417f6d:	(bad)  
  417f6e:	ins    DWORD PTR es:[edi],dx
  417f6f:	inc    ebx
  417f70:	std    
  417f71:	retf   0x2d3b
  417f74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f75:	nop
  417f76:	pop    es
  417f77:	jl     0x417ff6
  417f79:	ins    BYTE PTR es:[edi],dx
  417f7a:	imul   ecx,DWORD PTR [ecx-0x7e266a5a],0xffffff9b
  417f81:	je     0x417f49
  417f83:	out    dx,eax
  417f84:	leave  
  417f85:	jg     0x417f73
  417f87:	inc    edi
  417f88:	jg     0x417f16
  417f8a:	popf   
  417f8b:	mov    eax,DWORD PTR [ebp+0x6363989e]
  417f91:	fld    QWORD PTR [esi]
  417f93:	and    bl,cl
  417f95:	jg     0x417feb
  417f97:	enter  0xe482,0x9f
  417f9b:	cmp    BYTE PTR [esp+edx*8],ch
  417f9e:	or     BYTE PTR [edi],ah
  417fa0:	xchg   ecx,eax
  417fa1:	adc    edi,DWORD PTR [edi+0x49]
  417fa4:	xchg   ebp,eax
  417fa5:	call   0x7cbe:0x7d2b477f
  417fac:	inc    eax
  417fad:	rcr    BYTE PTR [ebx+ecx*8],0xf7
  417fb1:	mov    esp,0x6d1fca5
  417fb6:	(bad)  
  417fb7:	lds    ebp,FWORD PTR [edx+0x30080fe6]
  417fbd:	dec    esp
  417fbe:	or     BYTE PTR [eax],0xe7
  417fc1:	sub    ecx,ebp
  417fc3:	(bad)  
  417fc5:	mov    ?,esp
  417fc7:	pop    ecx
  417fc8:	push   ds
  417fc9:	xchg   esi,eax
  417fca:	mov    bh,0xb4
  417fcc:	repnz shl BYTE PTR [edi+edi*4],0x5
  417fd1:	(bad)  
  417fd2:	rcr    BYTE PTR [esp+ebp*2-0x4d516a26],1
  417fd9:	mov    bh,0x5d
  417fdb:	pop    es
  417fdc:	and    DWORD PTR [ebp+0x758f1894],0xdd2d3975
  417fe6:	push   ebp
  417fe7:	sub    esi,ebx
  417fe9:	ja     0x417fc1
  417feb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417fec:	fcmovne st,st(2)
  417fee:	or     DWORD PTR [edx],esi
  417ff0:	xchg   edx,eax
  417ff1:	jnp    0x417f98
  417ff3:	jbe    0x418019
  417ff5:	inc    eax
  417ff6:	jge    0x417fe7
  417ff8:	add    DWORD PTR [ecx+ebx*4],esp
  417ffb:	(bad)  
  417ffc:	repz and bl,bh
  417fff:	xor    eax,DWORD PTR [esi-0x5f9f9777]
  418005:	sub    eax,0x1510400a
  41800a:	add    eax,esp
  41800c:	leave  
  41800d:	loope  0x417fe6
  41800f:	call   0x1b259948
  418014:	aaa    
  418015:	sbb    eax,0x45d3cbd6
  41801a:	stos   BYTE PTR es:[edi],al
  41801b:	push   esp
  41801c:	jae    0x417fd0
  41801e:	(bad)  
  41801f:	and    al,0xc
  418021:	xchg   eax,esi
  418023:	jmp    0x417fe5
  418025:	fwait
  418026:	mov    ch,al
  418028:	enter  0xb583,0x48
  41802c:	push   eax
  41802d:	jns    0x418087
  41802f:	xor    al,BYTE PTR es:[edi]
  418032:	gs xchg ebp,eax
  418034:	sub    al,0xec
  418036:	or     eax,0x6276f35b
  41803b:	mov    bl,0xb5
  41803d:	stos   BYTE PTR es:[edi],al
  41803e:	imul   ebx,esi,0xffffffc4
  418041:	rol    BYTE PTR [edi+0x751cd468],0xd1
  418048:	mov    ebp,0x9df51f3c
  41804d:	aam    0xf4
  41804f:	(bad)  
  418050:	je     0x418094
  418052:	xchg   DWORD PTR [di-0x725f],edi
  418057:	sub    BYTE PTR [eax],0xd3
  41805a:	ds or  ecx,esp
  41805d:	adc    edi,ebp
  41805f:	ja     0x417ffc
  418061:	xchg   ecx,eax
  418062:	push   esi
  418063:	sub    edx,eax
  418065:	jne    0x417ff0
  418067:	rcr    BYTE PTR [edi],cl
  418069:	cdq    
  41806a:	je     0x418016
  41806c:	std    
  41806d:	fwait
  41806e:	xor    al,0xb1
  418070:	iret   
  418071:	push   ebp
  418072:	outs   dx,BYTE PTR ds:[esi]
  418073:	and    al,0xbd
  418075:	dec    esi
  418076:	or     BYTE PTR [edx],bl
  418078:	and    al,0xfb
  41807a:	iret   
  41807b:	xor    BYTE PTR [esi-0x1ddde702],cl
  418081:	pop    ecx
  418082:	xor    eax,0x44b9ac81
  418087:	adc    eax,0x2d44d505
  41808c:	lahf   
  41808d:	aaa    
  41808e:	xlat   BYTE PTR ds:[ebx]
  41808f:	inc    ecx
  418090:	jnp    0x41803e
  418092:	call   0xaae:0x24289467
  418099:	mov    ch,0xca
  41809b:	lock cdq 
  41809d:	or     edx,DWORD PTR [esp+edx*1]
  4180a0:	int    0xad
  4180a2:	xchg   esp,eax
  4180a3:	mov    al,ss:0x8d19f488
  4180a9:	xchg   ebx,eax
  4180aa:	ja     0x418125
  4180ac:	(bad)  
  4180ae:	and    BYTE PTR [ecx+0x25],dl
  4180b1:	out    0xf6,al
  4180b3:	daa    
  4180b4:	xor    eax,0xe26bd2b8
  4180b9:	call   0xd7823a9d
  4180be:	jns    0x418101
  4180c0:	sbb    cl,0xcb
  4180c3:	and    bh,BYTE PTR [eax]
  4180c5:	push   edx
  4180c6:	xchg   ebx,eax
  4180c7:	stos   BYTE PTR es:[edi],al
  4180c8:	mov    ?,WORD PTR [esi]
  4180ca:	jl     0x418101
  4180cc:	jns    0x41811b
  4180ce:	je     0x4180ed
  4180d0:	sti    
  4180d1:	stos   DWORD PTR es:[edi],eax
  4180d2:	sub    al,0xe4
  4180d4:	gs loope 0x418070
  4180d7:	push   ss
  4180d8:	mov    al,BYTE PTR [ebp-0x20]
  4180db:	sar    BYTE PTR [eax+0x3b3a3149],1
  4180e1:	lods   eax,DWORD PTR ds:[esi]
  4180e2:	cmp    ch,BYTE PTR [ebx+0x611f109a]
  4180e8:	jnp    0x418113
  4180ea:	shl    BYTE PTR [ebp-0x29106f0],cl
  4180f0:	mov    ebx,0x77c7033b
  4180f5:	mov    esi,0x81368ef9
  4180fa:	add    ax,0xa10a
  4180fe:	jg     0x41810c
  418100:	mov    eax,ds:0x47d06743
  418105:	lea    eax,[esi+0x3852c3a6]
  41810b:	rcr    BYTE PTR [esi-0x1],0x3
  41810f:	fprem  
  418111:	fisubr WORD PTR [ebx]
  418113:	hlt    
  418114:	add    al,0x68
  418116:	in     eax,dx
  418117:	jnp    0x41814c
  418119:	jle    0x418123
  41811b:	mov    ah,0xa4
  41811d:	test   BYTE PTR [edi+0x2a],al
  418120:	mov    ebx,0x6e59bca0
  418125:	push   ds
  418126:	fwait
  418127:	repnz adc ah,BYTE PTR [edi]
  41812a:	je     0x418185
  41812c:	out    0xe,al
  41812e:	std    
  41812f:	xchg   esi,eax
  418130:	push   edx
  418131:	push   eax
  418132:	mov    ds,WORD PTR [edx+0xd]
  418135:	xchg   edi,eax
  418136:	or     al,0xc5
  418138:	mov    ds:0x3843f23f,al
  41813d:	pop    edi
  41813e:	jns    0x41810d
  418140:	loop   0x418104
  418142:	dec    edx
  418143:	and    edi,DWORD PTR [edi]
  418145:	xchg   BYTE PTR [edx+0x2d601369],dh
  41814b:	ins    BYTE PTR es:[edi],dx
  41814c:	mov    cl,0x5d
  41814e:	in     al,0x35
  418150:	imul   eax,esp,0x228b02c8
  418156:	jae    0x418116
  418158:	arpl   cx,di
  41815a:	call   0xc0c10402
  41815f:	pusha  
  418160:	out    dx,eax
  418161:	(bad)  
  418163:	cld    
  418164:	test   al,0x5f
  418166:	mov    esp,0x889b9aa
  41816b:	jmp    0x2d1e5251
  418170:	fdiv   QWORD PTR [ebp-0x21571815]
  418176:	fcmovnb st,st(6)
  418178:	daa    
  418179:	outs   dx,BYTE PTR ds:[esi]
  41817a:	push   0x60012d96
  41817f:	test   eax,0x638af94d
  418184:	jo     0x418117
  418186:	jbe    0x418117
  418188:	lods   al,BYTE PTR ds:[esi]
  418189:	xor    dh,BYTE PTR [edx+0x755698b9]
  41818f:	or     ch,BYTE PTR [esi+esi*2]
  418192:	stos   BYTE PTR es:[edi],al
  418193:	jecxz  0x418192
  418195:	xchg   ebp,eax
  418196:	clc    
  418197:	jl     0x41813e
  418199:	popf   
  41819a:	xchg   ebp,eax
  41819b:	jne    0x41818f
  41819d:	sub    esi,DWORD PTR [eax]
  41819f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4181a0:	iret   
  4181a1:	pop    edi
  4181a2:	retf   0x54c0
  4181a5:	inc    ecx
  4181a6:	push   ecx
  4181a7:	aaa    
  4181a8:	sbb    DWORD PTR [edi-0x142536dc],ebx
  4181ae:	loop   0x418186
  4181b0:	mov    WORD PTR [ebx+ecx*1-0x6c],es
  4181b4:	push   edx
  4181b5:	fdivr  st,st(5)
  4181b7:	loop   0x41819a
  4181b9:	sti    
  4181ba:	rol    ebp,cl
  4181bc:	ins    DWORD PTR es:[edi],dx
  4181bd:	dec    ebx
  4181be:	fcmovb st,st(2)
  4181c0:	inc    esi
  4181c1:	xchg   edx,eax
  4181c2:	xchg   esp,eax
  4181c3:	popf   
  4181c4:	jae    0x4181b9
  4181c6:	jno    0x41816f
  4181c8:	sub    ah,ah
  4181ca:	ret    
  4181cb:	pop    eax
  4181cc:	jmp    0x418187
  4181ce:	add    dh,cl
  4181d0:	fimul  DWORD PTR [edx]
  4181d2:	push   ecx
  4181d3:	lahf   
  4181d4:	adc    BYTE PTR [ecx-0x68f2fd32],dh
  4181da:	scas   eax,DWORD PTR es:[edi]
  4181db:	iret   
  4181dc:	sbb    ch,BYTE PTR [edx+0x7447e1fe]
  4181e2:	lods   al,BYTE PTR ds:[esi]
  4181e3:	ds popf 
  4181e5:	mov    ebx,0x44ec7e42
  4181ea:	mov    ecx,0xea160cd4
  4181ef:	xor    DWORD PTR [ebx],ebp
  4181f1:	fmulp  st(0),st
  4181f3:	add    BYTE PTR [edx],0xad
  4181f6:	stc    
  4181f7:	test   BYTE PTR [edx],al
  4181f9:	fwait
  4181fa:	lods   eax,DWORD PTR ds:[esi]
  4181fb:	xor    DWORD PTR [edi-0x9],ebp
  4181fe:	outs   dx,DWORD PTR ds:[esi]
  4181ff:	pop    edi
  418200:	mov    al,ds:0x10e9f85e
  418205:	jo     0x418235
  418207:	out    dx,eax
  418208:	sbb    esp,eax
  41820a:	and    eax,0xf3900428
  41820f:	sbb    eax,0xc546a46f
  418214:	inc    ecx
  418215:	icebp  
  418216:	mov    cl,0x19
  418218:	imul   esp,eax,0xffffffab
  41821b:	dec    edi
  41821c:	(bad)  
  41821d:	xor    ah,BYTE PTR [ebx-0x78]
  418220:	out    dx,al
  418221:	cld    
  418222:	pop    eax
  418223:	mov    dh,0x72
  418225:	mov    edx,edi
  418227:	inc    esp
  418228:	stos   BYTE PTR es:[edi],al
  418229:	dec    esp
  41822a:	data16 icebp 
  41822c:	xor    BYTE PTR [edi+eax*8],bl
  41822f:	fiadd  DWORD PTR [edx]
  418231:	addr16 mov edx,0x7a3d577
  418237:	popa   
  418238:	push   ebx
  418239:	shl    eax,1
  41823b:	stos   DWORD PTR es:[edi],eax
  41823c:	mov    ds:0xe94f5c62,al
  418241:	(bad)  
  418242:	xchg   ecx,eax
  418243:	dec    edx
  418244:	sub    BYTE PTR [ebp+0x4cb9e0df],dh
  41824a:	test   DWORD PTR [ebx+0x4c7c83ce],esi
  418250:	enter  0x7ad7,0x16
  418254:	aam    0x2c
  418256:	repnz inc esi
  418258:	add    ax,WORD PTR [esi]
  41825b:	aas    
  41825c:	shl    BYTE PTR [esi-0x1258d6b3],0xc7
  418263:	out    0xa1,eax
  418265:	stc    
  418266:	mov    al,0x2b
  418268:	adc    cl,BYTE PTR ds:0xe0ec6b0b
  41826e:	sub    DWORD PTR [esi+0x4d360305],eax
  418274:	add    DWORD PTR [esi+0x52],0x51
  418278:	xor    eax,0xa0c57ee
  41827d:	adc    eax,DWORD PTR [edi+0xd]
  418280:	or     al,0xd3
  418282:	pop    ebp
  418283:	lods   al,BYTE PTR ds:[esi]
  418284:	gs loope 0x41820d
  418287:	aam    0xd2
  418289:	retf   
  41828a:	out    0x52,al
  41828c:	sub    ecx,DWORD PTR [ebx-0x144ca3bf]
  418292:	add    ch,ah
  418294:	jae    0x4182fd
  418296:	dec    esi
  418297:	(bad)  
  418298:	out    dx,al
  418299:	mov    dl,0x9f
  41829b:	adc    al,ah
  41829d:	cvttps2pi mm2,QWORD PTR [esi+0x4d86619a]
  4182a4:	lar    esi,WORD PTR [esi]
  4182a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182a8:	aaa    
  4182a9:	inc    esp
  4182aa:	das    
  4182ab:	into   
  4182ac:	adc    dl,BYTE PTR [esi+0xf]
  4182af:	out    0x9f,al
  4182b1:	fadd   QWORD PTR [ebx+0x4217f3a4]
  4182b7:	jmp    0x8ac478c6
  4182bc:	xchg   esp,eax
  4182bd:	adc    al,0x7a
  4182bf:	add    esp,eax
  4182c1:	mov    esi,0xf817dafc
  4182c6:	mov    edi,0x250fe8e
  4182cb:	arpl   WORD PTR [edx],bx
  4182cd:	sar    ah,cl
  4182cf:	idiv   ah
  4182d1:	loope  0x4182a1
  4182d3:	fisttp DWORD PTR [edx+0x85a1b61]
  4182d9:	push   ss
  4182da:	push   ebx
  4182dc:	xchg   eax,esp
  4182de:	repz mov ebx,fs
  4182e1:	loopne 0x41829d
  4182e3:	scas   al,BYTE PTR es:[edi]
  4182e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182e5:	jl     0x4182f4
  4182e7:	sub    cl,cl
  4182e9:	xchg   edi,eax
  4182ea:	jg     0x41826f
  4182ec:	or     ebp,DWORD PTR [ecx+0x7bbf427c]
  4182f2:	mov    eax,DWORD PTR [edx-0x35f1a620]
  4182f8:	inc    eax
  4182f9:	imul   esp,DWORD PTR [edi+esi*8-0x2a],0x4a
  4182fe:	loope  0x418284
  418300:	ins    BYTE PTR es:[edi],dx
  418301:	ins    BYTE PTR es:[edi],dx
  418302:	inc    esp
  418303:	mov    ebx,0x7cf8a20e
  418308:	cmp    al,BYTE PTR [esi-0x50fb2da0]
  41830e:	lods   eax,DWORD PTR ds:[esi]
  41830f:	push   0x1b
  418311:	loopne 0x4182bb
  418313:	loop   0x4182a7
  418315:	aam    0x26
  418317:	std    
  418318:	dec    esp
  418319:	inc    edi
  41831a:	mul    bh
  41831c:	cmp    ah,bh
  41831e:	lea    ebp,[edx+edi*8]
  418321:	xchg   ecx,eax
  418322:	or     bl,BYTE PTR [edi+0x6d58e1c4]
  418328:	cmp    dl,BYTE PTR [ebx]
  41832a:	clc    
  41832b:	adc    al,0x81
  41832d:	add    DWORD PTR [ecx+0x7e],esp
  418330:	ds daa 
  418332:	rol    BYTE PTR [ebx],0xe2
  418335:	mov    esp,0xda4c4539
  41833a:	cmp    DWORD PTR [esi+0x34812bed],ecx
  418340:	std    
  418341:	jnp    0x41838f
  418343:	push   0xcc9b96bf
  418348:	mov    esp,0x4c470842
  41834d:	xchg   DWORD PTR [ebp+0x2e],edx
  418350:	push   edx
  418351:	jo     0x4183af
  418353:	lock popf 
  418355:	sbb    ecx,DWORD PTR [ebx]
  418357:	hlt    
  418358:	cdq    
  418359:	clc    
  41835a:	setp   BYTE PTR [esi-0x2e6b63a2]
  418361:	xchg   ecx,eax
  418362:	(bad)  [edi+0x32]
  418365:	mov    al,ds:0x649c5379
  41836a:	cmp    BYTE PTR [eax-0x140e8bb2],bl
  418370:	push   esi
  418371:	in     al,dx
  418372:	push   edi
  418373:	mov    BYTE PTR [edi-0x353aa66e],bh
  418379:	push   ebp
  41837a:	jno    0x418307
  41837c:	pop    ds
  41837d:	pop    es
  41837e:	test   BYTE PTR [esi],dh
  418380:	add    BYTE PTR [esi],0x14
  418383:	cwde   
  418384:	repz jno 0x4183c1
  418387:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418388:	daa    
  418389:	or     al,0x9
  41838b:	mov    al,0x25
  41838d:	stc    
  41838e:	iret   
  41838f:	mov    ebp,DWORD PTR [edx]
  418391:	call   0xecb25fb1
  418396:	sub    esp,ebx
  418398:	js     0x41833b
  41839a:	mov    ds,esi
  41839c:	ins    BYTE PTR es:[edi],dx
  41839d:	push   ecx
  41839e:	fs repz add eax,0xce1ddbcc
  4183a5:	mov    bh,0x11
  4183a7:	jnp    0x4183db
  4183a9:	cmp    edx,DWORD PTR [ebx-0x65]
  4183ac:	es xchg edx,eax
  4183ae:	push   es
  4183af:	cli    
  4183b0:	sub    eax,0xd0362638
  4183b5:	adc    BYTE PTR [edx],0x74
  4183b8:	dec    ebp
  4183b9:	cmp    bh,0x30
  4183bc:	or     ecx,DWORD PTR ds:0x25305023
  4183c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4183c3:	mov    ds:0xf3737c7e,eax
  4183c8:	jecxz  0x418361
  4183ca:	icebp  
  4183cb:	or     ebx,DWORD PTR [ecx]
  4183cd:	jb     0x41834f
  4183cf:	xchg   ecx,eax
  4183d0:	mov    WORD PTR [ebx-0x67],ds
  4183d3:	xchg   esi,eax
  4183d4:	pop    ds
  4183d5:	stos   BYTE PTR es:[edi],al
  4183d6:	xchg   ecx,eax
  4183d7:	push   es
  4183d8:	std    
  4183d9:	out    dx,eax
  4183da:	mov    ds:0x4112157a,al
  4183df:	popf   
  4183e0:	out    0x13,al
  4183e2:	adc    eax,0xe1c56b49
  4183e7:	rcl    DWORD PTR [esi-0x35],1
  4183ea:	jb     0x4183c7
  4183ec:	out    0xe4,al
  4183ee:	mov    edi,0x9e685f83
  4183f3:	xchg   edx,eax
  4183f4:	pop    edi
  4183f5:	fstp   QWORD PTR [edi]
  4183f7:	and    eax,0xd23b1e78
  4183fc:	sub    eax,0x82f15927
  418401:	fwait
  418402:	push   es
  418403:	add    al,0xa6
  418405:	xor    ebx,eax
  418407:	push   ss
  418408:	and    eax,0xd99fbb57
  41840d:	jbe    0x4183b7
  41840f:	sub    al,0xce
  418411:	xor    al,0xbf
  418413:	lods   eax,DWORD PTR ds:[esi]
  418414:	ret    0xa724
  418417:	push   0x7b5e7f81
  41841c:	out    0x44,al
  41841e:	and    al,0xf5
  418420:	enter  0xab72,0x8b
  418424:	dec    ebx
  418425:	add    edi,eax
  418427:	ret    
  418428:	and    BYTE PTR [edx+0x6b5db586],bh
  41842e:	pop    edx
  41842f:	adc    DWORD PTR [ebp+0x4],ebp
  418432:	test   BYTE PTR [eax+0x1957c746],ah
  418438:	jbe    0x418449
  41843a:	outs   dx,DWORD PTR ds:[esi]
  41843b:	std    
  41843c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41843d:	inc    esi
  41843e:	push   cs
  41843f:	or     edx,DWORD PTR [esi]
  418441:	dec    eax
  418442:	pop    esi
  418443:	test   edi,0xaf84d349
  418449:	push   esi
  41844a:	aaa    
  41844b:	and    al,0x1d
  41844d:	(bad)  
  41844e:	jecxz  0x418446
  418450:	mov    cl,0x78
  418452:	adc    ch,ch
  418454:	int3   
  418455:	shr    ah,0xce
  418458:	out    0x8a,al
  41845a:	mov    ds:0x8162a7bc,eax
  41845f:	and    ebp,DWORD PTR [ecx-0x3019829f]
  418465:	inc    ebp
  418466:	lds    ecx,FWORD PTR [edi-0x20940d45]
  41846c:	mov    al,ds:0x4b7c663d
  418471:	mov    ss,WORD PTR [ecx-0x2c3218ba]
  418477:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418478:	sub    bh,BYTE PTR [ebx+0x5c1cc948]
  41847e:	fsubr  QWORD PTR [esi-0x18]
  418481:	cmc    
  418482:	outs   dx,BYTE PTR ds:[esi]
  418483:	mov    bh,0xb
  418485:	pop    esp
  418486:	jg     0x418426
  418488:	sbb    DWORD PTR [ebx],ecx
  41848a:	lock bswap eax
  41848d:	mov    ebx,0xdbcafa5d
  418492:	cld    
  418493:	push   es
  418494:	in     eax,0xe6
  418496:	lods   al,BYTE PTR ds:[esi]
  418497:	fidiv  WORD PTR [edx+eax*1]
  41849a:	cld    
  41849b:	and    al,BYTE PTR [edx+0xd]
  41849e:	cmp    DWORD PTR [edx+eiz*2+0x7e266421],esi
  4184a5:	push   ecx
  4184a6:	aas    
  4184a7:	push   ebx
  4184a8:	inc    edi
  4184a9:	imul   ebp,DWORD PTR [ebx+eiz*2],0x81a8d20b
  4184b0:	scas   eax,DWORD PTR es:[edi]
  4184b1:	xchg   esi,eax
  4184b2:	cmp    eax,0xbab91885
  4184b7:	adc    al,0x1a
  4184b9:	sahf   
  4184ba:	and    DWORD PTR [ecx],0xffffff94
  4184bd:	mov    al,0x51
  4184bf:	imul   edi
  4184c1:	clc    
  4184c2:	sbb    al,0xac
  4184c4:	mov    WORD PTR [esi-0xbd8eff6],ds
  4184ca:	loop   0x418517
  4184cc:	test   eax,0x1558bda1
  4184d1:	lahf   
  4184d2:	iret   
  4184d3:	mov    ecx,0x6f535c13
  4184d8:	mov    eax,0xeb6693fe
  4184dd:	daa    
  4184de:	loopne 0x4184d9
  4184e0:	jecxz  0x41849e
  4184e2:	or     dl,BYTE PTR [ebp-0x3f]
  4184e5:	call   0x2d1a:0xbf5c40ba
  4184ec:	enter  0x5658,0x1
  4184f0:	sbb    al,0x56
  4184f2:	out    dx,al
  4184f3:	dec    ecx
  4184f4:	retf   0xbf54
  4184f7:	add    ebp,edi
  4184f9:	or     al,0x4d
  4184fb:	out    0x53,al
  4184fd:	sub    esi,eax
  4184ff:	sbb    eax,0xfc939d87
  418504:	jno    0x4184c0
  418506:	push   0x810b76ca
  41850b:	out    0xf,eax
  41850d:	cs gs pop edx
  418510:	and    dl,BYTE PTR [edi+0x77]
  418513:	pop    es
  418514:	mov    al,0xc2
  418516:	push   cs
  418517:	push   edi
  418518:	jne    0x41853f
  41851a:	xchg   ebx,eax
  41851b:	test   eax,0xe867ef40
  418520:	gs adc eax,0x953872b2
  418526:	std    
  418527:	out    dx,al
  418528:	in     eax,dx
  418529:	cmp    BYTE PTR [ebp-0x51605149],cl
  41852f:	jl     0x418507
  418531:	pop    edx
  418532:	pop    edx
  418533:	cmp    esp,DWORD PTR [ebp+ebp*8+0x6e]
  418537:	icebp  
  418538:	ja     0x41856b
  41853a:	xor    edi,edx
  41853c:	push   0xffffffd4
  41853e:	or     ebx,DWORD PTR [eax-0x26]
  418541:	xchg   BYTE PTR [eax],ah
  418543:	pop    ds
  418544:	test   BYTE PTR [esp+edi*2],cl
  418547:	loope  0x418532
  418549:	sar    BYTE PTR [esi+0x2a],0x2d
  41854d:	xor    BYTE PTR [ecx+edx*8+0xf],0x3c
  418552:	xor    ebp,esp
  418554:	out    dx,eax
  418555:	add    BYTE PTR [esi],cl
  418557:	push   edx
  418558:	pop    edi
  418559:	clc    
  41855a:	in     al,dx
  41855b:	mov    DWORD PTR [ebx+0x2f8188ff],esp
  418561:	stos   BYTE PTR es:[edi],al
  418562:	sub    BYTE PTR [edi],cl
  418564:	mov    WORD PTR [esi+0x3b],ds
  418567:	repz bt DWORD PTR ss:[esi],edx
  41856c:	sbb    ecx,DWORD PTR [edi]
  41856e:	mov    ds:0xdcd8677d,al
  418573:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418574:	xor    eax,0xcf578094
  418579:	int3   
  41857a:	cmc    
  41857b:	imul   ebp,DWORD PTR [eax-0x7],0xffffffd0
  41857f:	neg    DWORD PTR [eax-0x66d77992]
  418585:	or     eax,0xb5319231
  41858a:	cld    
  41858b:	mov    ch,0xa
  41858d:	sbb    ch,al
  41858f:	test   BYTE PTR [edi+edx*4],bl
  418592:	jge    0x418593
  418594:	pop    edx
  418595:	out    dx,eax
  418596:	or     edi,DWORD PTR [eax]
  418598:	cld    
  418599:	stc    
  41859a:	ss enter 0x43d,0x8d
  41859f:	call   0x5672:0x56a2fb41
  4185a6:	mov    edx,0xb639c763
  4185ab:	sub    BYTE PTR [ecx+edx*1],al
  4185ae:	xchg   edi,eax
  4185af:	aaa    
  4185b0:	imul   eax,DWORD PTR [ebx],0x2b26ddfb
  4185b6:	xchg   ebx,eax
  4185b7:	sub    DWORD PTR ds:0xef9a9594,eax
  4185bd:	xor    esi,DWORD PTR [ebx]
  4185bf:	fcom   st(6)
  4185c1:	adc    bl,ah
  4185c3:	add    BYTE PTR [ebx-0xd],0xc5
  4185c7:	test   eax,0xfb5057d
  4185cc:	add    BYTE PTR [edi],bh
  4185ce:	mov    esp,DWORD PTR [ecx+0x72d2dd1a]
  4185d4:	or     al,0x8c
  4185d6:	dec    edi
  4185d7:	dec    ecx
  4185d8:	rcl    DWORD PTR [ebp+0x66],0x19
  4185dc:	and    DWORD PTR [esi],edx
  4185de:	push   0xdf6676c2
  4185e3:	cld    
  4185e4:	add    BYTE PTR [ecx],0x49
  4185e7:	mov    BYTE PTR [eax+edi*8-0x2d154dde],0x1f
  4185ef:	fstp   QWORD PTR [esi+0x4f4413d5]
  4185f5:	mov    dl,BYTE PTR [bx+di-0x26c3]
  4185fa:	cdq    
  4185fb:	mov    bl,0x46
  4185fd:	sbb    ah,BYTE PTR [esi]
  4185ff:	cmp    al,0xf1
  418601:	test   al,0x6b
  418603:	ficomp DWORD PTR [ebp+0x562eb9c9]
  418609:	mov    eax,0xffc45dff
  41860e:	dec    ebp
  41860f:	push   ds
  418610:	into   
  418611:	lea    edi,[ecx-0x3446ab08]
  418617:	push   edx
  418618:	cli    
  418619:	out    0xb5,eax
  41861b:	ins    BYTE PTR es:[edi],dx
  41861c:	movups XMMWORD PTR [esi],xmm6
  41861f:	adc    ecx,DWORD PTR [ecx+eax*8]
  418622:	ins    BYTE PTR es:[edi],dx
  418623:	fidiv  DWORD PTR [ecx+0x52999729]
  418629:	fdiv   QWORD PTR ds:0x2b79dd39
  41862f:	ins    BYTE PTR es:[edi],dx
  418630:	or     edi,esi
  418632:	outs   dx,BYTE PTR ds:[esi]
  418633:	int    0xe3
  418635:	mov    esp,0xbe7caa0
  41863a:	stc    
  41863b:	mov    esi,0xf75e3e04
  418640:	outs   dx,DWORD PTR ds:[esi]
  418641:	and    edx,ebx
  418643:	ret    0xb7c3
  418646:	and    BYTE PTR [edi-0x36],al
  418649:	push   ss
  41864a:	and    al,0x8
  41864c:	into   
  41864d:	xor    BYTE PTR ds:0xc2756e19,ch
  418653:	mov    cl,0xa1
  418655:	mov    ss:0x8926637,eax
  41865b:	fmul   QWORD PTR [ecx+0x3e]
  41865e:	call   0xae3e0b83
  418663:	cld    
  418664:	and    dh,BYTE PTR [edi-0x72]
  418667:	loope  0x4186a2
  418669:	test   DWORD PTR [edi+0x38],eax
  41866c:	daa    
  41866d:	icebp  
  41866e:	es mov ch,0xc6
  418671:	pusha  
  418672:	jo     0x4186a7
  418674:	cdq    
  418675:	push   esp
  418676:	jns    0x4186df
  418678:	aas    
  418679:	inc    ecx
  41867a:	mov    WORD PTR [edx+eiz*2+0x76],cs
  41867e:	sbb    ebp,DWORD PTR gs:0x4564cc4a
  418685:	div    BYTE PTR [ebx+eiz*1-0x41956f1e]
  41868c:	mov    ch,0x88
  41868e:	aaa    
  41868f:	dec    DWORD PTR [ebx-0x18]
  418692:	enter  0x6b,0xb3
  418696:	aam    0x23
  418698:	xchg   edx,eax
  418699:	sti    
  41869a:	push   esi
  41869b:	pushf  
  41869c:	in     al,0x19
  41869e:	lea    ebp,es:0xd4e22cd
  4186a5:	test   BYTE PTR [edx+eax*2],ah
  4186a8:	push   esi
  4186a9:	sub    DWORD PTR [edx],ebx
  4186ab:	dec    ebp
  4186ac:	ins    BYTE PTR es:[edi],dx
  4186ad:	xor    dh,BYTE PTR [edx-0x118fd037]
  4186b3:	add    DWORD PTR [eax-0x7e852307],esi
  4186b9:	ror    BYTE PTR [ebx],1
  4186bb:	shr    DWORD PTR [ebx-0x187ef700],cl
  4186c1:	xor    eax,0x3b25dc7c
  4186c6:	xchg   ebx,eax
  4186c7:	stc    
  4186c8:	jmp    0xddba:0xf4cc0118
  4186cf:	adc    eax,DWORD PTR [ebp+0x49]
  4186d2:	push   ebx
  4186d3:	push   esi
  4186d4:	test   eax,0xdf2da466
  4186d9:	dec    ebp
  4186da:	cmp    eax,0x2fbda1f6
  4186df:	mov    ds:0x37f83d06,eax
  4186e4:	outs   dx,BYTE PTR ds:[esi]
  4186e5:	jmp    0xbeb36208
  4186ea:	inc    edi
  4186eb:	sub    eax,0x91504b00
  4186f0:	pop    ecx
  4186f1:	cmp    edx,ebx
  4186f3:	inc    ecx
  4186f4:	out    0x2c,al
  4186f6:	and    al,0x88
  4186f8:	jnp    0x41873d
  4186fa:	rcr    BYTE PTR [ebx],0x43
  4186fd:	sbb    esi,DWORD PTR [esi]
  4186ff:	fwait
  418700:	sub    esp,ecx
  418702:	jo     0x41877c
  418704:	clc    
  418705:	cli    
  418706:	mov    DWORD PTR [esi],edi
  418708:	cdq    
  418709:	mov    BYTE PTR [ecx+ecx*1+0x3e],al
  41870d:	dec    ecx
  41870e:	or     eax,0xe2797649
  418713:	mov    ebp,0xb395b534
  418718:	xor    eax,0xf9b78134
  41871d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41871e:	push   0xe69b81fc
  418723:	bound  ebx,QWORD PTR [edi]
  418725:	cmp    DWORD PTR [edi+ecx*4-0x44e89e52],ebp
  41872c:	push   ecx
  41872d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41872e:	jl     0x418757
  418730:	xchg   ecx,eax
  418731:	call   0x66aa6fd1
  418736:	ror    DWORD PTR [esi+0x2e],1
  418739:	cmp    dl,cl
  41873b:	leave  
  41873c:	sahf   
  41873d:	in     eax,0xf4
  41873f:	pop    esi
  418740:	mov    bl,0xc8
  418742:	pop    esi
  418743:	lods   al,BYTE PTR ds:[esi]
  418744:	xor    DWORD PTR [edi+0x39df7c70],ebx
  41874a:	sbb    DWORD PTR [ebp+edx*1+0x4dc62b71],ebp
  418751:	add    edi,eax
  418753:	imul   esp,DWORD PTR ds:0x928e6cf3,0xffffffb9
  41875a:	cmp    BYTE PTR [eax+0x61],dh
  41875d:	or     al,0xaf
  41875f:	shl    ch,1
  418761:	aad    0xa2
  418763:	adc    BYTE PTR [eax],dh
  418765:	fnstsw WORD PTR [esi]
  418767:	cdq    
  418768:	loop   0x4187c7
  41876a:	xchg   esi,eax
  41876b:	or     eax,0xe4da5516
  418770:	xor    dl,BYTE PTR [eax+0x6c]
  418773:	jmp    0x418755
  418775:	adc    ebx,esi
  418777:	sub    eax,0xa438fab0
  41877c:	enter  0x5d18,0xae
  418780:	jmp    0x4e3d:0xf740d22b
  418787:	jbe    0x4187bc
  418789:	outs   dx,BYTE PTR ds:[esi]
  41878a:	jg     0x41876d
  41878c:	mov    esi,0xe3a22bda
  418791:	adc    bl,cl
  418793:	data16 cmp cl,ch
  418796:	fist   WORD PTR [eax]
  418798:	push   ss
  418799:	add    bh,al
  41879b:	hlt    
  41879c:	push   esp
  41879d:	mov    cl,0x90
  41879f:	scas   eax,DWORD PTR es:[edi]
  4187a0:	rol    BYTE PTR [ebx-0x7ef53696],1
  4187a6:	lds    edx,FWORD PTR [ecx-0x4a71cdd1]
  4187ac:	and    ah,al
  4187ae:	out    dx,eax
  4187af:	cmp    ebx,DWORD PTR [edx+0xe]
  4187b2:	sar    DWORD PTR [esi+ebp*8+0x6a],1
  4187b6:	stc    
  4187b7:	push   ebx
  4187b8:	call   0xff8c80f3
  4187bd:	scas   eax,DWORD PTR es:[edi]
  4187be:	repz xor eax,0xbb7f8695
  4187c4:	fs adc eax,0xe0520ef3
  4187ca:	dec    ebx
  4187cb:	mov    bh,0xdc
  4187cd:	or     BYTE PTR [ebx+0x2c],dh
  4187d0:	pop    ebp
  4187d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187d2:	inc    ebx
  4187d3:	cmp    al,0x72
  4187d5:	cmc    
  4187d6:	popa   
  4187d7:	cdq    
  4187d8:	lea    edi,[eax+esi*2-0x66]
  4187dc:	add    ecx,DWORD PTR [eax+0x1cc8b4d1]
  4187e2:	xchg   edx,eax
  4187e3:	mov    bl,0x18
  4187e5:	lods   al,BYTE PTR ds:[esi]
  4187e6:	xchg   esp,eax
  4187e7:	iret   
  4187e8:	gs push ebp
  4187ea:	add    DWORD PTR [edx],eax
  4187ec:	je     0x418808
  4187ee:	call   0x4e4d6e06
  4187f3:	jecxz  0x4187f6
  4187f5:	adc    esp,edi
  4187f7:	push   ss
  4187f8:	imul   ebx,DWORD PTR [eax+0x71],0x9a616b48
  4187ff:	inc    edx
  418800:	mov    ch,0x9a
  418802:	pop    ebx
  418803:	and    dh,cl
  418805:	ret    0xf8dd
  418808:	xor    dh,BYTE PTR [ebx+ebx*8-0x7439f878]
  41880f:	iret   
  418810:	jbe    0x4187c3
  418812:	(bad)  
  418813:	xor    ecx,DWORD PTR [edi]
  418815:	dec    edx
  418816:	cmc    
  418817:	das    
  418818:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418819:	xchg   esi,ecx
  41881b:	mov    edi,0x5ce69ddc
  418820:	jge    0x4187b9
  418822:	push   ebp
  418823:	aad    0xdc
  418825:	imul   esi,ebx,0xf2761675
  41882b:	jb     0x41887c
  41882d:	dec    ecx
  41882e:	dec    eax
  41882f:	xor    ebp,DWORD PTR [ebx-0x7a]
  418832:	pop    ecx
  418833:	pop    ebp
  418834:	pop    ecx
  418835:	sti    
  418836:	dec    ebx
  418837:	loopne 0x41885a
  418839:	jl     0x418871
  41883b:	aas    
  41883c:	lock xchg ecx,eax
  41883e:	push   ss
  41883f:	push   ebx
  418840:	aad    0x49
  418842:	and    bh,BYTE PTR [edx]
  418844:	cmp    cl,al
  418846:	mov    edx,0x2028567f
  41884b:	mov    cl,0xbc
  41884d:	dec    ebp
  41884e:	pop    esi
  41884f:	fdiv   QWORD PTR [ecx+0x4a]
  418852:	dec    ecx
  418853:	jg     0x4188bf
  418855:	jne    0x41882f
  418857:	jae    0x41886b
  418859:	mov    ah,cl
  41885b:	sbb    al,0x5d
  41885d:	clc    
  41885e:	fxch   st(2)
  418860:	test   ebp,edx
  418862:	addr16 ud2 
  418865:	xor    bl,BYTE PTR [ecx]
  418867:	lock adc ecx,0xffffffa4
  41886b:	aad    0xbd
  41886d:	jne    0x4187fa
  41886f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418870:	inc    ecx
  418871:	icebp  
  418872:	xor    al,BYTE PTR [ecx-0xe27f975]
  418878:	retf   0x8bc2
  41887b:	jae    0x418835
  41887d:	int3   
  41887e:	sub    dl,BYTE PTR [ebx+0x4979efb2]
  418884:	adc    BYTE PTR [esi],0xc2
  418887:	xchg   BYTE PTR [ebx-0x32182c01],dl
  41888d:	out    dx,al
  41888e:	(bad)  
  41888f:	inc    esp
  418890:	sbb    al,0x21
  418892:	int3   
  418893:	ds add bl,ch
  418896:	pop    edi
  418897:	mov    ebx,0xc6bfa810
  41889c:	jb     0x4188ed
  41889e:	rcl    dh,cl
  4188a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188a1:	repnz fucompp 
  4188a4:	aad    0x9
  4188a6:	adc    ecx,DWORD PTR [ebx-0x4a49ded0]
  4188ac:	pusha  
  4188ad:	in     eax,dx
  4188ae:	mov    ecx,0xed9b4bfe
  4188b3:	imul   eax,ecx,0xd445e976
  4188b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188ba:	inc    ecx
  4188bb:	push   ebx
  4188bc:	popa   
  4188bd:	pop    ss
  4188be:	push   esp
  4188bf:	clc    
  4188c0:	(bad)  
  4188c1:	test   al,0x31
  4188c3:	or     al,0x70
  4188c5:	jns    0x4188c6
  4188c7:	scas   eax,DWORD PTR es:[edi]
  4188c8:	mov    eax,0xa4d42c2f
  4188cd:	mov    ebp,0x2e682f9c
  4188d2:	(bad)  
  4188d3:	sti    
  4188d4:	push   ecx
  4188d5:	sub    edx,ecx
  4188d7:	push   edi
  4188d8:	jle    0x4188cf
  4188da:	fsub   st(1),st
  4188dc:	ins    BYTE PTR es:[edi],dx
  4188dd:	mov    eax,ds:0x53767a01
  4188e2:	hlt    
  4188e3:	std    
  4188e4:	jne    0x418926
  4188e6:	popf   
  4188e7:	(bad)  
  4188e8:	out    dx,eax
  4188e9:	push   es
  4188ea:	enter  0x22c,0xcd
  4188ee:	dec    edx
  4188ef:	sbb    DWORD PTR [ebp+0x60],ebp
  4188f2:	dec    edi
  4188f3:	stc    
  4188f4:	sbb    edx,DWORD PTR [esp+ebp*1]
  4188f7:	call   0xd3fe4cf0
  4188fc:	mov    ecx,0x1d1edfe1
  418901:	cmp    bh,cl
  418903:	dec    eax
  418904:	in     al,dx
  418905:	in     al,dx
  418906:	cld    
  418907:	jnp    0x418912
  418909:	nop
  41890a:	xor    DWORD PTR [edx],esi
  41890c:	ret    0x5791
  41890f:	cld    
  418910:	add    dl,BYTE PTR [edi]
  418912:	das    
  418913:	inc    BYTE PTR [edx+0x4222a7b4]
  418919:	out    0x22,al
  41891b:	pop    es
  41891c:	push   esi
  41891d:	rcr    BYTE PTR [edx+0x77513442],0xdd
  418924:	dec    edx
  418925:	and    al,0x8
  418927:	ins    DWORD PTR es:[edi],dx
  418928:	sbb    dh,dl
  41892a:	push   edx
  41892b:	push   0xd78cd036
  418930:	je     0x4188b7
  418932:	clc    
  418933:	ftst   
  418935:	push   esp
  418936:	lods   al,BYTE PTR ds:[esi]
  418937:	pusha  
  418938:	adc    eax,ecx
  41893a:	push   esi
  41893b:	inc    eax
  41893c:	dec    edi
  41893d:	out    dx,eax
  41893e:	cmp    BYTE PTR [ebp-0x406f15a9],bh
  418944:	add    edx,DWORD PTR [edi]
  418946:	jnp    0x418920
  418948:	dec    edi
  418949:	mov    ecx,0xb5ffa481
  41894e:	pushf  
  41894f:	inc    esi
  418950:	mov    edi,0x143e19f3
  418955:	cmp    eax,0xef8d4c2e
  41895a:	add    BYTE PTR ds:0xa9711c62,ch
  418960:	loopne 0x418972
  418962:	mov    edx,es
  418964:	mov    ah,0xc6
  418966:	pop    ebx
  418967:	sub    al,0xc
  418969:	and    ch,BYTE PTR [eax+0x2d63e6ca]
  41896f:	jmp    0x288d:0x61bf78d0
  418976:	sbb    BYTE PTR [edi+0x991fb7],ah
  41897c:	cmp    BYTE PTR [eax+0xa],ch
  41897f:	loopne 0x418915
  418981:	psubsw mm6,mm6
  418984:	jnp    0x4189e6
  418986:	xor    DWORD PTR [edx+0x5662b091],edi
  41898c:	mov    esp,0x5c14c5e4
  418991:	lock and esi,ebx
  418994:	mov    esp,0xa8392c3f
  418999:	or     BYTE PTR [ecx+edi*1+0x348cdd93],ah
  4189a0:	pop    esi
  4189a1:	in     eax,dx
  4189a2:	gs push es
  4189a4:	xchg   edx,eax
  4189a5:	pop    ebx
  4189a6:	mov    ebx,0x1fd9ec9b
  4189ab:	bound  esi,QWORD PTR [ecx-0x7b36550]
  4189b1:	jl     0x418a01
  4189b3:	(bad)  [edi-0x69372341]
  4189b9:	pop    ebp
  4189ba:	add    al,0xd6
  4189bc:	push   edx
  4189bd:	and    al,0x49
  4189bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4189c0:	rcr    edx,cl
  4189c2:	dec    ebp
  4189c3:	pop    ebx
  4189c4:	adc    al,0xa5
  4189c6:	int3   
  4189c7:	aad    0x61
  4189c9:	fadd   st(6),st
  4189cb:	retf   0x95b
  4189ce:	enter  0x4bab,0x90
  4189d2:	mov    dh,0xcd
  4189d4:	aam    0xf4
  4189d6:	adc    bl,BYTE PTR [ecx-0x3bbe009d]
  4189dc:	fild   DWORD PTR [ebp+0x56298f8c]
  4189e2:	xchg   esi,eax
  4189e3:	push   es
  4189e4:	arpl   WORD PTR [ecx-0x396b8594],sp
  4189ea:	jp     0x418994
  4189ec:	js     0x4189d5
  4189ee:	addr16 pop eax
  4189f0:	ds jno 0x4189e9
  4189f3:	adc    eax,0x6bf1542c
  4189f8:	pop    ss
  4189f9:	push   ebx
  4189fa:	imul   ebp,DWORD PTR [edx+0xa],0x84bea369
  418a01:	gs stc 
  418a03:	sbb    DWORD PTR [eax-0x5233d7e0],esp
  418a09:	fidiv  WORD PTR [ebp+0x32]
  418a0c:	imul   ecx,DWORD PTR [edi],0x16
  418a0f:	xchg   DWORD PTR [eax+0x60ec4875],edi
  418a15:	pop    edi
  418a16:	mov    esi,DWORD PTR [esi+0x14]
  418a19:	xor    al,0x2a
  418a1b:	imul   esi,DWORD PTR [edx+0x38],0xfe3bc3f2
  418a22:	test   DWORD PTR [eax-0x7cdd0ce9],ebp
  418a28:	inc    ebp
  418a29:	js     0x418a20
  418a2b:	jp     0x418a5b
  418a2d:	sub    edx,0x34ad7b6f
  418a33:	dec    ecx
  418a34:	jecxz  0x4189fa
  418a36:	in     eax,dx
  418a37:	lock loop 0x4189cf
  418a3a:	mov    edi,0x3ed671ae
  418a3f:	(bad)  
  418a40:	ss xchg ecx,eax
  418a42:	stc    
  418a43:	jmp    0x4189ef
  418a45:	mov    edi,0x8ffaf5f9
  418a4a:	push   DWORD PTR [ecx-0x5783cb6f]
  418a50:	mov    edi,0xbd6963c1
  418a55:	mov    edi,0x8498c2c9
  418a5a:	sub    edx,esi
  418a5c:	mov    ds:0x6fdc9f10,al
  418a61:	nop
  418a62:	jno    0x418a6d
  418a64:	cmp    BYTE PTR ds:0xc8650264,bl
  418a6a:	xor    ecx,ecx
  418a6c:	dec    eax
  418a6d:	hlt    
  418a6e:	mov    ds:0x56fe0688,eax
  418a73:	iret   
  418a74:	(bad)
  418a77:	hlt    
  418a78:	fldcw  WORD PTR [edx+0x3e]
  418a7b:	jno    0x418ad6
  418a7d:	addr16 jne 0x418a0c
  418a80:	enter  0xee10,0x5d
  418a84:	sbb    esi,DWORD PTR [ebx+edx*8+0x3a]
  418a88:	aaa    
  418a89:	dec    edx
  418a8a:	mov    ebp,DWORD PTR [ebx+0x5174cb40]
  418a90:	mov    al,0xc7
  418a92:	fst    DWORD PTR [ebx]
  418a94:	xchg   esi,eax
  418a95:	push   ss
  418a96:	push   edi
  418a97:	nop
  418a98:	push   0xb1d7b321
  418a9d:	adc    edi,DWORD PTR [esi]
  418a9f:	js     0x418a86
  418aa1:	loope  0x418a7a
  418aa3:	sbb    ebx,eax
  418aa5:	pop    es
  418aa6:	add    esi,DWORD PTR [esi]
  418aa8:	add    ebp,ecx
  418aaa:	das    
  418aab:	hlt    
  418aac:	pop    eax
  418aad:	add    BYTE PTR [edx+0x173af5f0],cl
  418ab3:	lods   al,BYTE PTR ds:[esi]
  418ab4:	or     BYTE PTR [edx+0x45],dh
  418ab7:	push   0xffffff8a
  418ab9:	ins    DWORD PTR es:[edi],dx
  418aba:	pop    esi
  418abb:	sbb    DWORD PTR [edx],ebx
  418abd:	mov    dh,BYTE PTR [ebx-0x24]
  418ac0:	push   ebp
  418ac1:	mov    cl,0x14
  418ac3:	daa    
  418ac4:	pop    edi
  418ac5:	bound  esi,QWORD PTR [edi+ebp*8+0x2c6aa449]
  418acc:	mov    ch,BYTE PTR [esp+esi*2]
  418acf:	cli    
  418ad0:	pushf  
  418ad1:	leave  
  418ad2:	jno    0x418ae6
  418ad4:	add    al,0x97
  418ad7:	add    eax,0x29edf267
  418adc:	out    0x16,eax
  418ade:	rcl    DWORD PTR [ebp+0x61],0xc7
  418ae2:	call   0xf05d:0xcd42815
  418ae9:	or     BYTE PTR [ebx-0x29dba647],0x98
  418af0:	jge    0x418ae2
  418af2:	in     eax,dx
  418af3:	pop    ebx
  418af4:	sbb    DWORD PTR [esi-0x1f],esp
  418af7:	adc    eax,0x34177aca
  418afc:	in     al,dx
  418afd:	add    al,0x11
  418aff:	mov    eax,0x11e2400d
  418b04:	mov    ecx,0x649b00a5
  418b09:	xchg   esi,eax
  418b0a:	gs xor cl,bh
  418b0d:	dec    esi
  418b0e:	jbe    0x418b6b
  418b10:	addr16 adc eax,0xc41ae5b7
  418b16:	xor    BYTE PTR [edi-0x59a53c9b],0x69
  418b1d:	xor    ebp,DWORD PTR [ebp+edx*2-0x42]
  418b21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b22:	es mov esp,0x37cb75c1
  418b28:	xchg   esi,eax
  418b29:	test   eax,0x25af06c1
  418b2e:	push   esi
  418b2f:	hlt    
  418b30:	addr16 cmp cl,bh
  418b33:	pusha  
  418b34:	(bad)  
  418b35:	test   BYTE PTR [ebp+0x4327f7d3],0x4b
  418b3c:	bound  ecx,QWORD PTR [eax+eax*4-0x3d]
  418b40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b41:	xlat   BYTE PTR ds:[ebx]
  418b42:	inc    esi
  418b43:	loopne 0x418b25
  418b45:	sbb    eax,0x33ab0778
  418b4a:	mov    edx,0x6a655fa2
  418b4f:	push   eax
  418b50:	xchg   ebp,eax
  418b51:	imul   edi,DWORD PTR [esi+esi*8],0xffffff84
  418b55:	or     dh,BYTE PTR [ecx-0x22099682]
  418b5b:	mov    bh,0xdc
  418b5d:	pop    esi
  418b5e:	rcr    BYTE PTR [ebx+0x767e6dce],0x1c
  418b65:	xor    ah,dh
  418b67:	outs   dx,DWORD PTR ds:[esi]
  418b68:	mov    eax,edx
  418b6a:	sub    al,0xb7
  418b6c:	ins    DWORD PTR es:[edi],dx
  418b6d:	daa    
  418b6e:	cmp    eax,0x8b4f38c0
  418b73:	outs   dx,DWORD PTR ds:[esi]
  418b74:	cdq    
  418b75:	ret    
  418b76:	sub    ecx,DWORD PTR [edi-0x4b]
  418b79:	mov    eax,ds:0xab52c4d7
  418b7e:	shl    DWORD PTR [ebx-0x1b217e70],0x59
  418b85:	dec    ebx
  418b86:	jmp    0x418b6f
  418b88:	cmp    dh,BYTE PTR [esi]
  418b8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b8b:	inc    esi
  418b8c:	add    eax,0xbd16b65c
  418b91:	mov    dl,0x40
  418b93:	push   edi
  418b94:	fidivr WORD PTR [ebx-0x51]
  418b97:	dec    ebp
  418b98:	add    ch,ah
  418b9a:	jo     0x418ba5
  418b9c:	pop    ss
  418b9d:	int    0x68
  418b9f:	loop   0x418b8d
  418ba1:	les    edx,FWORD PTR [edi+0x1a]
  418ba4:	add    bl,0x31
  418ba7:	sub    ah,dh
  418ba9:	pop    DWORD PTR [esi]
  418bab:	fild   WORD PTR [edi+0x47cbd102]
  418bb1:	jns    0x418b8f
  418bb3:	pop    esp
  418bb4:	push   0xfb001e09
  418bb9:	jb     0x418b74
  418bbb:	dec    esp
  418bbc:	or     BYTE PTR cs:[esi+ebx*2],0x33
  418bc1:	hlt    
  418bc2:	pop    ds
  418bc3:	icebp  
  418bc4:	xchg   edx,eax
  418bc5:	dec    ebp
  418bc6:	mov    eax,0x4555776d
  418bcb:	ins    DWORD PTR es:[edi],dx
  418bcc:	mov    bh,0x6f
  418bce:	out    dx,eax
  418bcf:	sti    
  418bd0:	sbb    edi,ebx
  418bd2:	add    al,BYTE PTR [esi+ecx*1+0x208095d9]
  418bd9:	jb     0x418c54
  418bdb:	dec    esi
  418bdc:	sbb    BYTE PTR [esi],ah
  418bde:	mov    esp,0x96f35c83
  418be3:	stos   BYTE PTR es:[edi],al
  418be4:	dec    edx
  418be5:	mov    eax,ds:0xd1dff698
  418bea:	aaa    
  418beb:	pushf  
  418bec:	add    cl,0x0
  418bef:	sub    ecx,0xffffff9f
  418bf2:	repnz dec ebp
  418bf4:	xor    cl,ah
  418bf6:	into   
  418bf7:	repnz pop ebx
  418bf9:	and    al,0x3f
  418bfb:	mov    bh,0x44
  418bfd:	and    al,dl
  418bff:	cmp    eax,0x4c014f05
  418c04:	mov    al,0xf4
  418c06:	call   FWORD PTR [ebx+0x1d]
  418c09:	cmp    al,0xa1
  418c0b:	loope  0x418c89
  418c0d:	inc    ebp
  418c0e:	adc    eax,0x31918d4
  418c13:	out    dx,al
  418c14:	js     0x418bd7
  418c16:	adc    ch,BYTE PTR [ebx-0x14d02542]
  418c1c:	xor    cl,cl
  418c1e:	and    dh,BYTE PTR [esi-0x4b]
  418c21:	dec    edx
  418c22:	dec    ebp
  418c23:	sahf   
  418c24:	inc    ecx
  418c25:	and    ebx,DWORD PTR [eax-0x6b04c597]
  418c2b:	xchg   BYTE PTR [esi-0x6371c7a0],cl
  418c31:	jmp    0x99b4:0x6e9d2e51
  418c38:	(bad)  
  418c39:	push   0x2e
  418c3b:	or     ah,BYTE PTR ds:0x22ae53c2
  418c41:	into   
  418c42:	push   ds
  418c43:	xor    al,0x92
  418c45:	cmp    ebx,DWORD PTR [edx+0x6bde06f5]
  418c4b:	outs   dx,BYTE PTR ds:[esi]
  418c4c:	out    0x41,al
  418c4e:	gs pop es
  418c50:	jmp    0x418c49
  418c52:	ins    DWORD PTR es:[edi],dx
  418c53:	or     BYTE PTR [edi-0x5e],dl
  418c56:	mov    cl,0x5f
  418c58:	adc    DWORD PTR [esi],esp
  418c5a:	cld    
  418c5b:	or     esp,edx
  418c5d:	jb     0x418bf4
  418c5f:	fadd   QWORD PTR [eax]
  418c61:	or     BYTE PTR [ecx+0x7],ch
  418c64:	sar    ebp,0x72
  418c67:	ss push ecx
  418c69:	cmc    
  418c6a:	sub    cl,BYTE PTR [esi]
  418c6c:	mov    eax,0x7c5cfd7a
  418c71:	hlt    
  418c72:	lds    edi,FWORD PTR [ebp+0x43a57b85]
  418c78:	or     dh,dh
  418c7a:	shl    DWORD PTR [ecx],0x99
  418c7d:	sbb    ah,BYTE PTR [esi+0x34]
  418c80:	(bad)  
  418c81:	out    dx,al
  418c82:	jge    0x418c9b
  418c84:	leave  
  418c85:	outs   dx,BYTE PTR ds:[esi]
  418c86:	out    0xe3,al
  418c88:	fcomp  DWORD PTR [ebx]
  418c8a:	sub    esp,DWORD PTR [ecx-0x5d2ebf18]
  418c90:	fcomp  st(5)
  418c92:	out    dx,al
  418c93:	(bad)  
  418c94:	popf   
  418c95:	ins    BYTE PTR es:[edi],dx
  418c96:	shr    BYTE PTR [ecx-0x2cf8cc90],1
  418c9c:	out    0xf,eax
  418c9e:	mov    esp,0x2e0c25bd
  418ca3:	adc    BYTE PTR [edi],dl
  418ca5:	repz and ebx,0xcee58239
  418cac:	aad    0x9a
  418cae:	xor    DWORD PTR [edx],ebp
  418cb0:	mov    edi,0x7551bf8e
  418cb5:	dec    esp
  418cb6:	dec    ecx
  418cb7:	sahf   
  418cb8:	loope  0x418ce3
  418cba:	lahf   
  418cbb:	in     eax,0x7a
  418cbd:	xor    DWORD PTR [ecx],edx
  418cbf:	mov    esi,0xacbf90b1
  418cc4:	hlt    
  418cc5:	(bad)  
  418cc6:	pop    ecx
  418cc7:	push   ebp
  418cc8:	ja     0x418d01
  418cca:	test   al,0x93
  418ccc:	(bad)  
  418cce:	jne    0x418d33
  418cd0:	push   0xfffffff6
  418cd2:	out    0xc7,al
  418cd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418cd5:	xchg   edx,eax
  418cd6:	out    dx,al
  418cd7:	je     0x418cf6
  418cd9:	cwde   
  418cda:	loop   0x418d0e
  418cdc:	pushf  
  418cdd:	sbb    al,0x13
  418cdf:	scas   eax,DWORD PTR es:[edi]
  418ce0:	retf   0x1746
  418ce3:	xor    al,0xd7
  418ce5:	dec    ecx
  418ce6:	push   ss
  418ce7:	in     al,dx
  418ce8:	mov    dh,0x94
  418cea:	cmp    al,0xce
  418cec:	sar    BYTE PTR [ecx],0xea
  418cef:	cli    
  418cf0:	xchg   esp,eax
  418cf1:	jo     0x418c83
  418cf3:	ror    bl,0x47
  418cf6:	or     al,0xcf
  418cf8:	cmp    DWORD PTR [ecx+0x69],esp
  418cfb:	jae    0x418d41
  418cfd:	push   ecx
  418cfe:	pushf  
  418cff:	pop    ebx
  418d00:	adc    DWORD PTR [esi+0x51fbbd93],ecx
  418d06:	popa   
  418d07:	and    ebx,DWORD PTR [ebx+0x42]
  418d0a:	fdiv   QWORD PTR [esi+0x50]
  418d0d:	cmp    dh,BYTE PTR [ebx+0x76]
  418d10:	sub    bh,BYTE PTR [esi]
  418d12:	fisttp DWORD PTR [edx]
  418d14:	retf   0x97c6
  418d17:	ficom  WORD PTR ds:0xf7c6bd32
  418d1d:	add    cl,BYTE PTR gs:[ebp+0x1485d290]
  418d24:	adc    DWORD PTR [edi+0x51],esi
  418d27:	test   al,0xd5
  418d29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d2a:	and    dl,ch
  418d2c:	mov    es,edx
  418d2e:	ret    
  418d2f:	dec    ecx
  418d30:	dec    esi
  418d31:	cmp    dh,BYTE PTR [ecx+0x5b128df5]
  418d37:	jg     0x418d61
  418d39:	shr    BYTE PTR [ecx],0xdc
  418d3c:	ficom  DWORD PTR [ebx+esi*2+0x3d]
  418d40:	sbb    DWORD PTR [edx],esp
  418d42:	mov    ebx,0xd1fc5231
  418d47:	or     BYTE PTR [edx+0x1fac2895],ch
  418d4d:	(bad)  
  418d4e:	pop    ebx
  418d4f:	add    esi,ecx
  418d51:	mov    ds:0x79eacb08,eax
  418d56:	jmp    0x1189:0xae89db94
  418d5d:	ret    
  418d5e:	cld    
  418d5f:	jl     0x418dc1
  418d61:	mov    eax,ds:0x457e3e93
  418d66:	arpl   WORD PTR [edx],dx
  418d68:	fadd   QWORD PTR [ecx+0x31]
  418d6b:	hlt    
  418d6c:	xor    al,0xc4
  418d6e:	not    BYTE PTR [edi-0x1715d5fc]
  418d74:	scas   eax,DWORD PTR es:[edi]
  418d75:	inc    ebp
  418d76:	push   es
  418d77:	mov    edi,0xd79efda
  418d7c:	adc    BYTE PTR [edi],cl
  418d7e:	enter  0xf4e2,0x57
  418d82:	dec    ecx
  418d83:	xor    al,0x60
  418d85:	pop    ecx
  418d86:	xor    DWORD PTR [eax],0x79
  418d89:	push   0xf9e685ae
  418d8e:	lsl    ecx,WORD PTR [esi]
  418d91:	jle    0x418d18
  418d93:	lock and bl,bl
  418d96:	js     0x418d18
  418d98:	test   DWORD PTR [edi+0x41],0xedf14df
  418d9f:	mov    ds:0x2041c232,al
  418da4:	fbld   TBYTE PTR [eax+ebp*8+0x58]
  418da8:	inc    edi
  418da9:	jg     0x418d49
  418dab:	inc    eax
  418dac:	outs   dx,DWORD PTR ds:[esi]
  418dad:	ins    DWORD PTR es:[edi],dx
  418dae:	and    BYTE PTR [edx],al
  418db0:	inc    esi
  418db1:	add    BYTE PTR [esi-0x2118ef1a],dl
  418db7:	mul    BYTE PTR [esi+0x13]
  418dba:	inc    esp
  418dbb:	push   eax
  418dbc:	push   ebx
  418dbd:	and    BYTE PTR [ebx+0x7f],cl
  418dc0:	mov    ?,WORD PTR [eax]
  418dc2:	fild   QWORD PTR [ebp+0x156e0bb7]
  418dc8:	xchg   esi,eax
  418dc9:	sub    DWORD PTR [eax],edi
  418dcb:	jl     0x418dc4
  418dcd:	fdiv   DWORD PTR [ebx+0xe]
  418dd0:	and    al,0x96
  418dd2:	std    
  418dd3:	mov    ecx,0x65fe7e12
  418dd8:	mov    dh,BYTE PTR [ebx+0x67e87af1]
  418dde:	pcmpeqb mm4,mm0
  418de1:	loop   0x418dbb
  418de3:	or     DWORD PTR [edx*4+0x172ae97e],edx
  418dea:	cdq    
  418deb:	inc    ebp
  418dec:	pop    esi
  418ded:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418dee:	loope  0x418db6
  418df0:	jo     0x418df1
  418df2:	std    
  418df3:	popf   
  418df4:	in     eax,dx
  418df5:	push   0xffffffd3
  418df7:	fidiv  WORD PTR [edx]
  418df9:	rcr    BYTE PTR [edi],1
  418dfb:	lds    edx,FWORD PTR [esp+ecx*4]
  418dfe:	lahf   
  418dff:	cmp    al,0xcf
  418e01:	jmp    0x6ca4:0xcac51e34
  418e08:	sbb    bh,BYTE PTR [ebx]
  418e0a:	mul    ch
  418e0c:	push   ebp
  418e0d:	nop
  418e0e:	dec    DWORD PTR [eax*2+0x1076288b]
  418e15:	inc    ecx
  418e16:	mov    ch,0xa2
  418e18:	and    eax,0xf89a4a86
  418e1d:	dec    esi
  418e1e:	lahf   
  418e1f:	sahf   
  418e20:	jmp    0x1ffa12fa
  418e25:	nop
  418e26:	out    dx,eax
  418e27:	sbb    edx,DWORD PTR [ebx+0x40e1a6a]
  418e2d:	adc    al,0xd
  418e2f:	mov    ebx,0xaba60186
  418e34:	jge    0x418e59
  418e36:	shl    cl,0xbf
  418e39:	adc    BYTE PTR [ebp+0x3f032f53],bl
  418e3f:	les    edi,FWORD PTR [ebx+ecx*8+0x65adc93a]
  418e46:	xor    ch,BYTE PTR ds:0x21f6a5e3
  418e4c:	sub    al,0x2f
  418e4e:	mov    dl,0x6
  418e50:	jmp    0x928a56f7
  418e55:	test   DWORD PTR [edx],ecx
  418e57:	inc    ebp
  418e58:	call   0x4ea7:0xc81dd674
  418e5f:	popa   
  418e60:	int3   
  418e61:	pop    ds
  418e62:	repnz push es
  418e64:	aaa    
  418e65:	xchg   edi,eax
  418e66:	sub    esi,0xfaa3eae6
  418e6c:	push   ebx
  418e6d:	inc    esp
  418e6e:	test   BYTE PTR [ecx],bl
  418e70:	push   0xffffffdb
  418e72:	pop    esp
  418e73:	inc    edx
  418e74:	hlt    
  418e75:	pop    es
  418e76:	ja     0x418e68
  418e78:	int3   
  418e79:	xor    eax,0xc2c7409e
  418e7e:	mov    eax,ds:0x9390b21b
  418e83:	or     dl,BYTE PTR [ebp+0x68ebebad]
  418e89:	mov    esi,0xbf510dd3
  418e8e:	mov    bh,BYTE PTR [esp+eiz*4+0x588c9b01]
  418e95:	add    eax,DWORD PTR [edx]
  418e97:	dec    BYTE PTR [ecx-0x51]
  418e9a:	add    eax,DWORD PTR [esi-0x57]
  418e9d:	std    
  418e9e:	outs   dx,BYTE PTR ds:[esi]
  418e9f:	mov    edi,0xb955f6a8
  418ea4:	add    al,0xbd
  418ea6:	mov    ecx,0xfb5756eb
  418eab:	std    
  418eac:	push   0x63faef41
  418eb1:	addr16 repnz dec ecx
  418eb4:	loopne 0x418eec
  418eb6:	stos   DWORD PTR es:[edi],eax
  418eb7:	aaa    
  418eb8:	fisub  DWORD PTR [edi-0x24]
  418ebb:	mov    ds,WORD PTR [edx+edi*8-0x1201672b]
  418ec2:	mov    ch,0x54
  418ec4:	fdivr  DWORD PTR [esi+0xba588b]
  418eca:	bound  esp,QWORD PTR [esi+0x21]
  418ecd:	mov    ds:0xd5e2086,eax
  418ed2:	ss dec ecx
  418ed4:	mov    dl,0xe0
  418ed6:	jno    0x418eb3
  418ed8:	xchg   edx,eax
  418ed9:	aaa    
  418eda:	xchg   edi,eax
  418edb:	jno    0x418f26
  418edd:	mov    ebx,0xe2667d21
  418ee2:	outs   dx,DWORD PTR ds:[esi]
  418ee3:	jno    0x418ecf
  418ee5:	mov    edi,0x51602270
  418eea:	fnstenv [edi+0x5c]
  418eed:	aaa    
  418eee:	cs add al,0x72
  418ef1:	adc    eax,0xfce71082
  418ef6:	aad    0xd7
  418ef8:	cwde   
  418ef9:	xchg   edx,eax
  418efa:	dec    esi
  418efb:	fcom   DWORD PTR ds:0xc72f4214
  418f01:	and    dh,BYTE PTR [esi-0x27]
  418f04:	adc    eax,0x9f94828c
  418f09:	retf   
  418f0a:	pushf  
  418f0b:	ret    0x15a
  418f0e:	out    dx,al
  418f0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f10:	or     ebp,ebx
  418f12:	in     eax,dx
  418f13:	dec    edx
  418f14:	fist   WORD PTR [edx+0x2f]
  418f17:	mov    dh,0x39
  418f19:	xchg   ebp,eax
  418f1a:	xchg   edi,eax
  418f1b:	cmp    esi,DWORD PTR [ecx]
  418f1d:	or     DWORD PTR [esi],ecx
  418f1f:	jns    0x418edc
  418f21:	or     DWORD PTR [eax+0x5486095e],ebp
  418f27:	rcl    DWORD PTR [ebx],0x67
  418f2a:	xor    al,0x75
  418f2c:	lock xchg ebp,eax
  418f2e:	push   ss
  418f2f:	or     al,0x20
  418f31:	push   eax
  418f32:	ja     0x418f69
  418f34:	pusha  
  418f35:	xor    eax,0x9d560d68
  418f3a:	and    bh,BYTE PTR [esi+0x2eff0777]
  418f40:	dec    ebx
  418f41:	ins    BYTE PTR es:[edi],dx
  418f42:	lea    ebx,[edx+ebx*2+0x429066e7]
  418f49:	sub    ecx,ebp
  418f4b:	es push esp
  418f4d:	xor    dl,BYTE PTR [esi]
  418f4f:	das    
  418f50:	jae    0x418f6b
  418f52:	in     al,dx
  418f53:	adc    bl,bl
  418f55:	and    al,0x72
  418f57:	or     eax,0x5e154ee6
  418f5c:	pop    ebp
  418f5d:	jmp    0x2f80161a
  418f62:	daa    
  418f63:	fcom   QWORD PTR [ebx-0x8]
  418f66:	add    al,BYTE PTR [ebx]
  418f68:	iret   
  418f69:	cmp    BYTE PTR [eax+0x78c9b6d9],cl
  418f6f:	and    ah,ch
  418f71:	adc    al,0xf6
  418f73:	stos   DWORD PTR es:[edi],eax
  418f74:	imul   ecx,DWORD PTR [ecx-0x2e],0x7ce76c46
  418f7b:	stc    
  418f7c:	fild   WORD PTR [eax-0x1d]
  418f7f:	jmp    0xdbb5cf2d
  418f84:	xor    al,0xf5
  418f86:	ret    
  418f87:	add    eax,0x95b6f917
  418f8c:	or     eax,0x752076ae
  418f91:	push   ss
  418f92:	xor    DWORD PTR [edx+0x277bec76],esp
  418f98:	call   0xedfb:0x1b967580
  418f9f:	or     esp,DWORD PTR [edi+0x52b9aaac]
  418fa5:	jle    0x418fd0
  418fa7:	stos   DWORD PTR es:[edi],eax
  418fa8:	mov    ecx,0x7c0e8e5d
  418fad:	pop    ebx
  418fae:	js     0x418fdd
  418fb0:	fdivr  QWORD PTR [ebx]
  418fb2:	lds    eax,FWORD PTR [eax]
  418fb4:	sub    eax,0x5ebc4f95
  418fb9:	pop    ecx
  418fba:	push   ss
  418fbb:	inc    eax
  418fbc:	add    eax,0xaae275
  418fc1:	adc    ah,ch
  418fc3:	pop    ebp
  418fc4:	sbb    al,0x68
  418fc6:	ds inc esp
  418fc8:	or     DWORD PTR [ecx-0x3803f87d],eax
  418fce:	in     eax,0x31
  418fd0:	mov    al,0x4e
  418fd2:	push   es
  418fd3:	push   0x67
  418fd5:	mov    cl,0xd9
  418fd7:	xchg   DWORD PTR [ecx],edx
  418fd9:	mov    eax,0x6ea56cec
  418fde:	mov    edx,0x34e927c9
  418fe3:	mov    cl,0x29
  418fe5:	pop    esp
  418fe6:	inc    edx
  418fe7:	xor    eax,0xf09ba03a
  418fec:	mov    esp,0x5ef54b48
  418ff1:	mov    edi,0xa43ae8bb
  418ff6:	fdivp  st(3),st
  418ff8:	cs (bad) 
  418ffa:	fsub   DWORD PTR [ecx+esi*8-0x1a5adc04]
  419001:	nop
  419002:	inc    esp
  419003:	fs sbb bh,dh
  419006:	jle    0x418ff4
  419008:	(bad)  
  419009:	cmp    ax,0xc5a9
  41900d:	mov    al,0xfa
  41900f:	ror    edi,1
  419011:	outs   dx,BYTE PTR ds:[esi]
  419012:	xchg   edx,eax
  419013:	or     eax,0x7f1809fc
  419018:	test   BYTE PTR [eax-0x6b],bl
  41901b:	loope  0x418fdb
  41901d:	jmp    0xd90a9e8b
  419022:	clc    
  419023:	or     eax,0xc5608291
  419028:	sbb    DWORD PTR [edx+0x8],0xffffffc8
  41902c:	mov    dl,0xe7
  41902e:	add    ecx,edx
  419030:	ins    BYTE PTR es:[edi],dx
  419031:	ds enter 0xd8ae,0xbc
  419036:	jo     0x418fc8
  419038:	push   ebp
  419039:	or     dl,dl
  41903b:	jmp    0xd021a379
  419040:	mov    ebx,0xee7717d2
  419045:	mov    ds:0x4ab27dd9,al
  41904a:	in     al,0x17
  41904c:	inc    eax
  41904d:	gs sbb al,0xd5
  419050:	jbe    0x419073
  419052:	sti    
  419053:	fstp   TBYTE PTR fs:[edx-0xa]
  419057:	sbb    esp,DWORD PTR [ecx-0x57]
  41905a:	mov    edx,0x64398120
  41905f:	enter  0x80dc,0x73
  419063:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419064:	data16 xor dl,dl
  419067:	pop    eax
  419068:	je     0x4190de
  41906a:	and    edx,esi
  41906c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41906d:	mov    bh,0xe6
  41906f:	enter  0xc16f,0xb9
  419073:	retf   0x38cf
  419076:	je     0x419017
  419078:	icebp  
  419079:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41907a:	adc    BYTE PTR [ecx+0x62],cl
  41907d:	push   0xffffffa2
  41907f:	stos   BYTE PTR es:[edi],al
  419080:	inc    edi
  419081:	cmp    BYTE PTR [esi-0x5c16c3c],cl
  419087:	mov    cs,ebp
  419089:	cmp    esp,DWORD PTR [edi]
  41908b:	je     0x41902f
  41908d:	nop
  41908e:	or     al,0x9f
  419090:	out    0x9c,al
  419092:	dec    ecx
  419093:	sahf   
  419094:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419095:	mov    esp,0xa5da5163
  41909a:	mov    ecx,0x391186da
  41909f:	std    
  4190a0:	lods   al,BYTE PTR ds:[esi]
  4190a1:	fwait
  4190a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4190a3:	shl    DWORD PTR [edx],0xd3
  4190a6:	cmp    DWORD PTR [esi+0x6845d5ff],ebx
  4190ac:	pop    ds
  4190ad:	adc    BYTE PTR [ebx+0x4b39abbd],dl
  4190b3:	jle    0x419114
  4190b5:	test   al,0xd3
  4190b7:	inc    esp
  4190b8:	(bad)  
  4190b9:	dec    ebx
  4190ba:	out    0xf6,al
  4190bc:	call   DWORD PTR [ebx-0x3680efa2]
  4190c2:	and    al,0x3b
  4190c4:	or     ebx,DWORD PTR [edi+esi*8+0x2c]
  4190c8:	xor    al,0x2e
  4190ca:	dec    esi
  4190cb:	mov    ch,0xc5
  4190cd:	cli    
  4190ce:	in     eax,0xe0
  4190d0:	mov    ecx,0x22bcdbd0
  4190d5:	aad    0xb9
  4190d7:	pop    es
  4190d8:	in     eax,dx
  4190d9:	add    eax,0x35a88267
  4190de:	lds    edi,FWORD PTR [ebx-0x3c]
  4190e1:	mov    ch,0x30
  4190e3:	aas    
  4190e4:	(bad)  
  4190e5:	shl    BYTE PTR ds:0x86e0a997,1
  4190eb:	out    dx,eax
  4190ec:	mov    ebp,0xf14e3af1
  4190f1:	cdq    
  4190f2:	xor    dh,0xf6
  4190f5:	mov    cl,dh
  4190f7:	push   0x2f692780
  4190fc:	call   0x314e521c
  419101:	adc    ecx,DWORD PTR [ecx+0x68580c18]
  419107:	mov    cl,0x5d
  419109:	icebp  
  41910a:	or     eax,0x524b7b7f
  41910f:	xchg   DWORD PTR [ecx+edx*1+0x71ff404a],ecx
  419116:	xor    BYTE PTR [ecx-0x3514e7da],0x89
  41911d:	xchg   esi,eax
  41911e:	jno    0x4190c7
  419120:	and    DWORD PTR [eax+eax*1-0x5c],edx
  419124:	jb     0x419197
  419126:	xchg   ebp,eax
  419127:	adc    BYTE PTR [edi],dl
  419129:	sbb    ch,0x55
  41912c:	push   ebx
  41912d:	add    ah,BYTE PTR [esi-0xdd09b10]
  419133:	jb     0x41916d
  419135:	(bad)  
  419136:	adc    bl,BYTE PTR [eax+0x16]
  419139:	cli    
  41913a:	repnz fdivrp st(3),st
  41913d:	jle    0x419187
  41913f:	out    dx,al
  419140:	ror    edx,cl
  419142:	fcom   QWORD PTR [ebx-0x71]
  419145:	test   DWORD PTR [ebp+eax*4-0x339e04d6],0xf1c4efbf
  419150:	push   ds
  419151:	cmp    eax,0x1c3439bf
  419156:	jecxz  0x41919c
  419158:	(bad)  
  419159:	test   eax,0x3006621e
  41915e:	xchg   esi,eax
  41915f:	and    al,0x5a
  419161:	aad    0x52
  419163:	jno    0x4191da
  419165:	mov    ebx,0x6d7a3b97
  41916a:	or     DWORD PTR [edx+0x39],ebp
  41916d:	jb     0x419196
  41916f:	jmp    0xe7c2:0x7792d63d
  419176:	dec    edi
  419177:	sub    dl,bh
  419179:	or     DWORD PTR [eax],edi
  41917b:	push   ds
  41917c:	pop    edi
  41917d:	aaa    
  41917e:	rol    BYTE PTR [ecx],0xcb
  419181:	or     DWORD PTR [ebx-0x37],ebp
  419184:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419185:	les    eax,FWORD PTR ds:0x6c6da5a9
  41918b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41918c:	cmp    BYTE PTR [esi],ch
  41918e:	xchg   DWORD PTR [ebx-0x4f],esp
  419191:	xchg   bx,ax
  419193:	enter  0xcdb0,0x65
  419197:	dec    esi
  419198:	cmp    eax,0xb5eb7107
  41919d:	jle    0x4191f3
  41919f:	sbb    eax,0x4efe551f
  4191a4:	cwde   
  4191a5:	adc    bl,BYTE PTR [esi+edi*8]
  4191a8:	pop    ecx
  4191a9:	(bad)  
  4191ab:	jge    0x41914b
  4191ad:	(bad)  
  4191ae:	outs   dx,BYTE PTR ds:[esi]
  4191af:	int    0xbe
  4191b1:	xchg   edi,eax
  4191b2:	cs in  eax,0x9c
  4191b5:	shr    BYTE PTR [eax+esi*8],0xb0
  4191b9:	fld    QWORD PTR [eax-0x3c8ce075]
  4191bf:	(bad)  
  4191c0:	cmc    
  4191c1:	xor    DWORD PTR [esi+ebx*4+0x70],0x7f
  4191c6:	jecxz  0x4191f7
  4191c8:	mov    es,edi
  4191ca:	fwait
  4191cb:	cwde   
  4191cc:	or     bh,BYTE PTR [ebx-0x1e9346c6]
  4191d2:	inc    ecx
  4191d3:	call   0x9419:0xa0f286b8
  4191da:	jnp    0x419226
  4191dc:	push   esp
  4191dd:	and    DWORD PTR [edx],0x38edc3c0
  4191e3:	sub    BYTE PTR ds:0x27dfd3de,dl
  4191e9:	and    cl,BYTE PTR gs:[edi+eax*4+0x2a]
  4191ee:	cmc    
  4191ef:	cdq    
  4191f0:	aam    0x9
  4191f2:	and    al,0x82
  4191f4:	push   esp
  4191f5:	cmp    dl,BYTE PTR [ecx+0x326132b1]
  4191fb:	mov    ds:0xbca1330f,al
  419200:	je     0x419276
  419202:	scas   al,BYTE PTR es:[edi]
  419203:	ret    
  419204:	sub    eax,DWORD PTR [esp+ecx*4+0x2d]
  419208:	or     al,0x28
  41920a:	jmp    0x4191d3
  41920c:	jne    0x419274
  41920e:	neg    DWORD PTR [edi]
  419210:	mov    eax,ds:0xeaef91be
  419215:	push   eax
  419216:	outs   dx,BYTE PTR ds:[esi]
  419217:	rcl    BYTE PTR [eax],cl
  419219:	mov    BYTE PTR [ebx+0x51],cl
  41921c:	hlt    
  41921d:	out    dx,eax
  41921e:	leave  
  41921f:	xchg   esi,eax
  419220:	push   ss
  419221:	mov    ds:0xc4d683f1,eax
  419226:	cmp    eax,0x423028ce
  41922b:	clc    
  41922c:	mov    cl,0x10
  41922e:	mov    bh,0x34
  419230:	fcomp  DWORD PTR [esi-0x5]
  419233:	push   ebx
  419234:	mov    ds:0x201dfe8c,al
  419239:	xor    al,0xeb
  41923b:	push   ds
  41923c:	lock in eax,dx
  41923e:	repz pop ss
  419240:	or     edx,ebx
  419242:	fsin   
  419244:	repz mov esi,DWORD PTR [edx+eiz*2+0x48fec176]
  41924c:	sbb    DWORD PTR es:[ecx-0x7a0660c4],esi
  419253:	int3   
  419254:	sbb    bh,BYTE PTR [eax]
  419256:	mov    eax,ds:0x5359c29
  41925b:	pop    ecx
  41925c:	stc    
  41925d:	pushf  
  41925e:	pop    edi
  41925f:	push   ebp
  419260:	xchg   ebp,eax
  419261:	adc    eax,DWORD PTR [edx+0xb]
  419264:	mov    ah,0x33
  419266:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419267:	mov    ds:0x8da46bd3,al
  41926c:	add    ah,BYTE PTR [ebx+0x15]
  41926f:	xchg   ebp,eax
  419270:	adc    esp,ecx
  419272:	cmp    al,0x67
  419274:	(bad)  
  419275:	clc    
  419276:	mov    ebp,edx
  419278:	push   ecx
  419279:	shr    DWORD PTR [ebp+0x74dbc542],cl
  41927f:	mov    ecx,0x60ba0264
  419284:	cmp    BYTE PTR [edx+eax*2-0x36],bl
  419288:	sub    eax,DWORD PTR ds:0x54bde9c6
  41928e:	popf   
  41928f:	sbb    eax,DWORD PTR ds:0x5040850e
  419295:	rcl    ah,1
  419297:	push   ecx
  419298:	adc    edi,eax
  41929a:	inc    edi
  41929b:	inc    ebp
  41929c:	pop    edi
  41929d:	jmp    0xe563:0x76f63389
  4192a4:	pop    edx
  4192a5:	inc    ebx
  4192a6:	mov    esp,0x9fbd74fb
  4192ab:	and    bh,BYTE PTR ss:[esi]
  4192ae:	push   ebx
  4192af:	jae    0x419287
  4192b1:	das    
  4192b2:	fs sbb al,0x9f
  4192b5:	jo     0x4192df
  4192b7:	mov    ah,0x76
  4192b9:	imul   edi,ebp,0xbe0cd5d4
  4192bf:	mov    bh,0x77
  4192c1:	popf   
  4192c2:	aad    0x79
  4192c4:	jno    0x41928a
  4192c6:	add    BYTE PTR [ebp-0x665c814d],dh
  4192cc:	shl    BYTE PTR [ecx+0x7a00107c],cl
  4192d2:	push   esp
  4192d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4192d4:	xchg   esp,eax
  4192d5:	xchg   ebx,eax
  4192d6:	clc    
  4192d7:	lods   al,BYTE PTR ds:[esi]
  4192d8:	jb     0x419306
  4192da:	or     bl,BYTE PTR [ebx+0x60]
  4192dd:	fucomip st,st(3)
  4192df:	icebp  
  4192e0:	pop    es
  4192e1:	les    esp,FWORD PTR [esi-0x7efa43b9]
  4192e7:	jmp    0x4192be
  4192e9:	test   DWORD PTR [ecx-0x6ed3029b],0x4e865588
  4192f3:	arpl   WORD PTR [bp+si-0x4150],si
  4192f8:	mov    DWORD PTR es:[esi-0x50],esp
  4192fc:	sub    BYTE PTR [eax],0xea
  4192ff:	mov    esp,DWORD PTR [esi]
  419301:	stc    
  419302:	lea    edi,[ecx-0x78]
  419305:	sub    eax,0xb55b508b
  41930a:	outs   dx,BYTE PTR ds:[esi]
  41930b:	out    dx,al
  41930c:	imul   edx,DWORD PTR [edi+0x4e77bcf3],0x55
  419313:	das    
  419314:	and    DWORD PTR [ecx+0x4207d261],ebp
  41931a:	jmp    0x4192ac
  41931c:	and    ebp,DWORD PTR [ebx-0x4db39d1c]
  419322:	adc    DWORD PTR ds:0x60c073ea,0xde5ddda2
  41932c:	adc    DWORD PTR [ecx+0x323e2c],esi
  419332:	jno    0x419301
  419334:	add    esi,edx
  419336:	and    al,0xf3
  419338:	sub    bh,BYTE PTR [esi+0x5d]
  41933b:	mov    esp,0x7fc3e174
  419340:	aas    
  419341:	inc    ecx
  419342:	pushf  
  419343:	rol    BYTE PTR [edi+0x48],0x68
  419347:	jns    0x41930c
  419349:	or     BYTE PTR ds:0xd86c2f83,al
  41934f:	aad    0x48
  419351:	mov    ebp,0xa92f5a2d
  419356:	scas   al,BYTE PTR es:[edi]
  419357:	scas   eax,DWORD PTR es:[edi]
  419358:	sbb    eax,edi
  41935a:	(bad)  
  41935b:	pop    ds
  41935c:	inc    eax
  41935d:	mov    al,0xaa
  41935f:	pop    edx
  419360:	mov    ebx,0xbf0a599a
  419365:	cli    
  419366:	mov    ah,BYTE PTR [ecx]
  419368:	cld    
  419369:	inc    ecx
  41936a:	push   ebx
  41936b:	stc    
  41936c:	adc    eax,0x76e46a69
  419371:	and    al,0xe7
  419373:	imul   dh
  419375:	neg    BYTE PTR [ebx-0x6de72af6]
  41937b:	das    
  41937c:	jno    0x4193e7
  41937e:	mov    ebp,0x636ccc3c
  419383:	ins    DWORD PTR es:[edi],dx
  419384:	stc    
  419385:	fisub  WORD PTR [edx]
  419387:	clc    
  419388:	aad    0x1a
  41938a:	inc    ebx
  41938b:	jmp    0x41936c
  41938d:	arpl   di,di
  41938f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419390:	inc    ebx
  419391:	mov    al,ds:0x529fa45
  419396:	shl    cl,1
  419398:	push   ecx
  419399:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41939a:	in     al,0xe7
  41939c:	ror    BYTE PTR [ebx],1
  41939e:	mov    db4,edi
  4193a1:	ret    
  4193a2:	push   ebx
  4193a3:	pop    eax
  4193a4:	ins    BYTE PTR es:[edi],dx
  4193a5:	jge    0x41939a
  4193a7:	push   esi
  4193a8:	push   ss
  4193a9:	mov    edx,0x40ac3acc
  4193ae:	add    BYTE PTR ds:0x3567403c,al
  4193b4:	leave  
  4193b5:	cmp    DWORD PTR [edx],edi
  4193b7:	jnp    0x4193ad
  4193b9:	cmp    al,0xb3
  4193bb:	cld    
  4193bc:	outs   dx,BYTE PTR ds:[esi]
  4193bd:	hlt    
  4193be:	fmul   QWORD PTR [edi-0x36f9023b]
  4193c4:	adc    ebp,eax
  4193c6:	jno    0x4193a6
  4193c8:	ins    DWORD PTR es:[edi],dx
  4193c9:	pop    es
  4193ca:	aas    
  4193cb:	xor    BYTE PTR [ebx-0x6a66c782],ch
  4193d1:	mov    bl,0xa7
  4193d3:	push   cs
  4193d4:	add    BYTE PTR [esi+0x60],bl
  4193d7:	test   esi,edx
  4193d9:	inc    ebx
  4193da:	push   0x45fdf5a7
  4193df:	jmp    0x5947125
  4193e4:	jno    0x419405
  4193e6:	leave  
  4193e7:	sbb    dl,al
  4193e9:	stc    
  4193ea:	add    DWORD PTR [eax-0x21e620fc],ebx
  4193f0:	and    BYTE PTR [eax+0x7e48f1e0],dh
  4193f6:	add    eax,0xe94abf19
  4193fb:	(bad)  
  4193fc:	sbb    ebx,ebp
  4193fe:	int3   
  4193ff:	adc    eax,0x891c3a42
  419404:	ficom  DWORD PTR [ebx+ebp*8-0x5aeb38d6]
  41940b:	or     edi,0x793262e7
  419411:	into   
  419412:	add    BYTE PTR [esi],0x41
  419415:	sub    BYTE PTR [eax-0x54],0x9f
  419419:	mov    dh,0x9d
  41941b:	shl    DWORD PTR [eax+eax*4+0x7a],cl
  41941f:	pusha  
  419420:	ins    DWORD PTR es:[edi],dx
  419421:	adc    BYTE PTR [esi+0x17a89179],bl
  419427:	mov    esi,0xfcc0fbc6
  41942c:	das    
  41942d:	mov    al,0xfa
  41942f:	inc    ecx
  419430:	inc    ecx
  419431:	ret    0x9b00
  419434:	and    DWORD PTR [eax-0x34],edi
  419437:	scas   eax,DWORD PTR es:[edi]
  419438:	adc    eax,0x66e2a226
  41943d:	rcr    DWORD PTR [edi],1
  41943f:	inc    ecx
  419440:	fdiv   DWORD PTR [edx+0xb4f2eff]
  419446:	fild   QWORD PTR [ebx]
  419448:	mov    ebx,0xec029551
  41944d:	mov    dl,0xfe
  41944f:	(bad)  
  419450:	push   ss
  419451:	bound  ebx,QWORD PTR [edi-0x163d2f94]
  419457:	sbb    BYTE PTR [ecx+ebx*1-0x4dd5bb1c],0x5b
  41945f:	or     esp,DWORD PTR [esi+edx*4+0x3660b8b2]
  419466:	je     0x419435
  419468:	pop    esp
  419469:	lea    ebx,[edx]
  41946b:	xchg   edi,eax
  41946c:	push   ss
  41946d:	outs   dx,DWORD PTR ds:[esi]
  41946e:	mov    ah,al
  419470:	add    dl,cl
  419472:	sbb    al,0x41
  419474:	test   BYTE PTR [ebp-0x7e6daf2f],dh
  41947a:	mov    DWORD PTR [eax],eax
  41947c:	sbb    eax,0x59d9150
  419481:	mov    DWORD PTR [ecx],ebx
  419483:	jns    0x41944a
  419485:	stc    
  419486:	mov    esp,0xc59fadf9
  41948b:	es cmp eax,0xa36b26aa
  419491:	pusha  
  419492:	(bad)  
  419493:	pop    ebx
  419494:	int    0x2a
  419496:	les    ecx,FWORD PTR [ebp-0x1b29339c]
  41949c:	data16 fisttp WORD PTR [ecx+edi*1-0x19313e73]
  4194a4:	scas   al,BYTE PTR es:[edi]
  4194a5:	xchg   esp,eax
  4194a6:	into   
  4194a7:	mov    gs,WORD PTR [edx+0x17ee4fe7]
  4194ad:	jne    0x41951a
  4194af:	mov    edi,0x801700b
  4194b4:	and    BYTE PTR [ecx-0x2d588c39],dl
  4194ba:	fs loopne 0x41952d
  4194bd:	dec    edi
  4194be:	pop    ebp
  4194bf:	mov    ds:0x8a6d632b,eax
  4194c4:	fwait
  4194c5:	ins    DWORD PTR es:[edi],dx
  4194c6:	push   ebp
  4194c7:	stos   DWORD PTR es:[edi],eax
  4194c8:	imul   esp,DWORD PTR [edi],0xfffffffa
  4194cb:	push   ebp
  4194cd:	jno    0x419535
  4194cf:	mov    dh,0x95
  4194d1:	mov    ebp,0x50c750ba
  4194d6:	ja     0x4194b0
  4194d8:	loope  0x419545
  4194da:	fadd   DWORD PTR [edi+edi*8-0x57]
  4194de:	scas   eax,DWORD PTR es:[edi]
  4194df:	mov    ds:0xb259f58f,eax
  4194e4:	or     BYTE PTR [edi+0x6b],dh
  4194e7:	sub    edx,DWORD PTR [eax+esi*1-0x612fb1a]
  4194ee:	out    dx,al
  4194ef:	pop    esi
  4194f0:	dec    edx
  4194f1:	inc    esp
  4194f2:	or     BYTE PTR [esi+ebx*2-0x41],ch
  4194f6:	xor    BYTE PTR [ebp-0x4a],ch
  4194f9:	(bad)  
  4194fb:	int    0x1d
  4194fd:	dec    ecx
  4194fe:	in     eax,dx
  4194ff:	pop    ebp
  419500:	je     0x419498
  419502:	inc    ebp
  419503:	mov    esp,0xd97315a7
  419508:	jnp    0x4194b3
  41950a:	xchg   esi,eax
  41950b:	fwait
  41950c:	push   ds
  41950d:	mov    WORD PTR [ebx-0x653b55d],ds
  419513:	ja     0x419559
  419515:	in     eax,dx
  419516:	mov    WORD PTR [edi],gs
  419518:	test   al,0xa6
  41951a:	test   DWORD PTR [eax+0xf],0x5c4568c2
  419521:	(bad)  
  419522:	pop    esp
  419523:	fs mov ecx,0x2f672a5a
  419529:	sbb    al,0x6f
  41952c:	mov    esi,0x7409e417
  419531:	jo     0x4195a9
  419533:	cmp    eax,0x9cb47c38
  419538:	scas   al,BYTE PTR es:[edi]
  419539:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41953a:	sub    bl,BYTE PTR [edi+edi*1]
  41953d:	and    dl,dl
  41953f:	js     0x4194f8
  419541:	fstp   QWORD PTR [edx-0x6f]
  419544:	inc    ebp
  419545:	pop    esi
  419546:	ins    DWORD PTR es:[edi],dx
  419547:	adc    BYTE PTR [ecx],ch
  419549:	and    al,0x46
  41954b:	enter  0x50ca,0x93
  41954f:	ss jnp 0x419592
  419552:	out    0x9f,eax
  419554:	xchg   ebp,eax
  419555:	inc    edi
  419556:	sbb    dl,BYTE PTR [edi+edx*1]
  419559:	jge    0x419556
  41955b:	lock dec esp
  41955d:	repnz sub eax,0x6aaa791a
  419563:	jmp    0x8456a2bd
  419568:	xor    al,0xa
  41956a:	imul   edx,edi,0xcf269860
  419570:	push   es
  419571:	stc    
  419572:	scas   eax,DWORD PTR es:[edi]
  419573:	push   ds
  419574:	and    BYTE PTR [eax+eax*2-0x58],cl
  419578:	xchg   ecx,ebp
  41957a:	and    BYTE PTR [edi-0x387aaa0a],dh
  419580:	push   esp
  419581:	mov    ecx,0xa032698d
  419586:	xor    DWORD PTR [ebp+0x40],edi
  419589:	ret    
  41958a:	div    BYTE PTR [edi+ebx*1-0x1f]
  41958e:	leave  
  41958f:	(bad)  
  419590:	aam    0x38
  419592:	and    cl,BYTE PTR [eax+edx*2+0x2e5be992]
  419599:	(bad)  
  41959a:	aaa    
  41959b:	rcr    BYTE PTR [ebp+0x1f],1
  41959e:	cs int3 
  4195a0:	mov    ecx,0xfcc27aab
  4195a5:	and    DWORD PTR [ecx],edi
  4195a7:	add    DWORD PTR [eax],edi
  4195a9:	fsubr  QWORD PTR [edx-0x6fc0cb88]
  4195af:	fwait
  4195b0:	xor    cl,dh
  4195b2:	(bad)  
  4195b3:	mov    ah,0xcd
  4195b5:	daa    
  4195b6:	cmp    al,0x55
  4195b8:	xor    eax,0xb99922a7
  4195bd:	or     bh,BYTE PTR [eax-0x9]
  4195c0:	sub    al,0x4d
  4195c2:	mov    ebx,0x1908a13e
  4195c7:	pop    ebp
  4195c8:	mov    al,es:0xea555a93
  4195ce:	jo     0x41961e
  4195d0:	xor    DWORD PTR [eax+edi*8-0x21],edx
  4195d4:	inc    eax
  4195d5:	or     eax,0xd1533e52
  4195da:	mov    ds:0xd84bfb99,eax
  4195df:	push   edx
  4195e0:	inc    esp
  4195e1:	aas    
  4195e2:	inc    esi
  4195e3:	int    0x5a
  4195e5:	xchg   esi,eax
  4195e6:	xlat   BYTE PTR ds:[ebx]
  4195e7:	in     al,0x4d
  4195e9:	add    ch,cl
  4195eb:	fs fs and al,0x12
  4195f0:	xchg   esi,ecx
  4195f2:	in     eax,dx
  4195f3:	std    
  4195f4:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4195f6:	pop    ss
  4195f7:	or     ch,0x4
  4195fa:	mov    ebp,0x211c2f1f
  4195ff:	push   eax
  419600:	sub    BYTE PTR [edx-0x4b],cl
  419603:	stc    
  419604:	inc    ebx
  419605:	push   esi
  419606:	jne    0x419645
  419608:	or     ah,BYTE PTR [ecx]
  41960a:	push   ds
  41960b:	add    edx,ebp
  41960d:	jae    0x4195db
  41960f:	stos   BYTE PTR es:[edi],al
  419610:	out    dx,eax
  419611:	cdq    
  419612:	add    ch,BYTE PTR [esp+ebx*1]
  419615:	xchg   edi,eax
  419616:	fisttp QWORD PTR [edx]
  419618:	(bad)  
  419619:	cli    
  41961a:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41961c:	ins    DWORD PTR es:[edi],dx
  41961d:	dec    eax
  41961e:	fimul  DWORD PTR [ebx+0x29]
  419621:	push   esp
  419622:	push   ds
  419623:	pop    es
  419624:	neg    BYTE PTR [edx]
  419626:	stos   BYTE PTR es:[edi],al
  419627:	cmp    eax,0xbf750ebf
  41962c:	mov    dl,0x16
  41962e:	je     0x41965a
  419630:	cmp    BYTE PTR [esi+0x2d],0xe1
  419634:	js     0x419652
  419636:	popa   
  419637:	or     DWORD PTR [edi+0x2a],ecx
  41963a:	mov    ch,0x3a
  41963c:	sar    DWORD PTR ds:0x54af551e,cl
  419642:	sahf   
  419643:	xchg   edx,eax
  419644:	dec    esp
  419645:	test   esp,0x1d7d8123
  41964b:	dec    ecx
  41964c:	gs ins DWORD PTR es:[edi],dx
  41964e:	clc    
  41964f:	mov    bl,0xe0
  419651:	mov    edx,0xe5c0e4fe
  419656:	inc    esp
  419657:	add    edx,ebx
  419659:	lock mov WORD PTR [esi-0x7f],ss
  41965d:	adc    al,0x44
  41965f:	push   esp
  419660:	test   eax,0xc0bb92b2
  419665:	dec    eax
  419666:	cli    
  419667:	out    dx,al
  419668:	inc    bh
  41966a:	and    BYTE PTR [ebp+0x8],al
  41966d:	mov    ecx,0xe2c7f626
  419672:	and    esp,DWORD PTR [ebx+ecx*1-0x44]
  419676:	pop    ebp
  419677:	retf   
  419678:	sub    ah,BYTE PTR [edi+0x21]
  41967b:	mov    esi,0xc532d318
  419680:	lahf   
  419681:	lock cmp BYTE PTR [esi-0x7a5c119c],0x6b
  419689:	psllw  mm0,QWORD PTR [ebx+0x51]
  41968d:	and    bl,bh
  41968f:	js     0x4196f6
  419691:	sub    ebp,DWORD PTR [esi+0x33]
  419694:	mov    eax,ds:0xf901a906
  419699:	pop    ebp
  41969a:	(bad)  
  41969b:	retf   
  41969c:	mov    esi,0xc97da7e5
  4196a1:	mov    eax,0xf01641d6
  4196a6:	(bad)  
  4196a7:	imul   edi,DWORD PTR [esi],0x5d
  4196aa:	mov    ebp,0xa857babd
  4196af:	add    dl,ch
  4196b1:	scas   eax,DWORD PTR es:[edi]
  4196b2:	mov    ebp,0x4ffbd1a2
  4196b7:	test   al,0x8c
  4196b9:	jmp    0x85aa8fbb
  4196be:	pop    ecx
  4196bf:	jge    0x4196a9
  4196c1:	push   eax
  4196c2:	mov    WORD PTR [esi-0x3d],ds
  4196c5:	jmp    0x5a595a94
  4196ca:	cmp    dh,BYTE PTR [edx+0x12]
  4196cd:	stos   BYTE PTR es:[edi],al
  4196ce:	mov    eax,0xe80e9056
  4196d3:	and    BYTE PTR [edx],dl
  4196d5:	dec    esi
  4196d6:	mov    ecx,0x48f2d1bd
  4196db:	mov    esi,0xe41119af
  4196e0:	pop    ebp
  4196e1:	inc    ecx
  4196e2:	pop    esp
  4196e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196e4:	retw   0x3ba
  4196e8:	enter  0x4cf1,0x6d
  4196ec:	adc    ecx,DWORD PTR [ebx+0x5073cc01]
  4196f2:	out    0x8,eax
  4196f4:	and    eax,0x537c7f9f
  4196f9:	call   0xefb17fef
  4196fe:	clc    
  4196ff:	jge    0x4196b1
  419701:	pusha  
  419702:	fnsave [ecx-0x306c84ea]
  419708:	fs jg  0x4196d0
  41970b:	in     eax,dx
  41970c:	push   es
  41970d:	inc    esp
  41970e:	dec    edi
  41970f:	ret    0xb860
  419712:	pushf  
  419713:	aaa    
  419714:	dec    ecx
  419715:	pusha  
  419716:	test   BYTE PTR [ebp+0x9],al
  419719:	mov    ecx,0x54e1ab5c
  41971e:	ret    
  41971f:	add    BYTE PTR [ecx-0x2c97357b],al
  419725:	in     al,dx
  419726:	fwait
  419727:	dec    esp
  419728:	push   esp
  419729:	push   0xffffffbc
  41972b:	add    al,0x2d
  41972d:	push   es
  41972e:	int3   
  41972f:	mov    BYTE PTR [eax-0x29],dl
  419732:	js     0x4196f6
  419734:	push   ebx
  419735:	stos   BYTE PTR es:[edi],al
  419736:	cmp    DWORD PTR [esi],eax
  419738:	sbb    al,0x26
  41973a:	adc    DWORD PTR [ecx-0x54],0xffffff9d
  41973e:	xchg   DWORD PTR [ebx-0x7f],ebx
  419741:	cdq    
  419742:	sbb    al,BYTE PTR [edi+eiz*8+0x7c5d46f6]
  419749:	adc    BYTE PTR ds:0xe365ffd5,dh
  41974f:	sti    
  419750:	stos   DWORD PTR es:[edi],eax
  419751:	outs   dx,DWORD PTR ds:[esi]
  419752:	les    ebp,FWORD PTR [edi]
  419754:	shl    bh,cl
  419756:	es cmp eax,0x285a6a9
  41975c:	mov    dh,0x49
  41975e:	mov    dl,0xc9
  419760:	(bad)
  419763:	xlat   BYTE PTR ds:[ebx]
  419764:	sub    BYTE PTR [ecx-0x4b],dl
  419767:	int3   
  419768:	fiadd  WORD PTR ds:0xcdb14d32
  41976e:	push   0xf65822c9
  419773:	out    0x26,al
  419775:	shl    DWORD PTR [edi],cl
  419777:	pop    ecx
  419778:	mov    BYTE PTR [esi+0x8fd84c7],bh
  41977e:	sbb    al,0xf8
  419780:	hlt    
  419781:	repnz add esi,ebx
  419784:	jl     0x419715
  419786:	push   ebp
  419787:	jo     0x419808
  419789:	(bad)  
  41978a:	mov    cl,0x6d
  41978c:	mov    ah,0x28
  41978e:	sub    BYTE PTR [ebx],bl
  419790:	imul   edx,DWORD PTR [ecx-0x6578fc3a],0xc0bb81b
  41979a:	and    eax,0x1d43fe09
  41979f:	ficom  DWORD PTR [ecx]
  4197a1:	or     esi,DWORD PTR [eax-0x66]
  4197a4:	dec    edi
  4197a5:	add    ah,bl
  4197a7:	stos   BYTE PTR es:[edi],al
  4197a8:	je     0x41978e
  4197aa:	dec    esi
  4197ab:	add    ebx,ebp
  4197ad:	pushf  
  4197ae:	and    eax,0xcdb71e6f
  4197b3:	inc    ebp
  4197b4:	pop    eax
  4197b5:	aaa    
  4197b6:	mov    ds:0x919d97d7,eax
  4197bb:	add    al,0x27
  4197bd:	dec    ebx
  4197be:	arpl   WORD PTR [ebp+0x5b314504],bx
  4197c4:	pop    ebx
  4197c5:	arpl   WORD PTR [esi+0x7b0354ab],bp
  4197cb:	loop   0x4197ce
  4197cd:	mov    WORD PTR [ebx+0x21f74e60],?
  4197d3:	mov    ecx,0x28a4296f
  4197d8:	aaa    
  4197d9:	inc    edi
  4197da:	inc    ebx
  4197db:	retw   
  4197dd:	jmp    0x419854
  4197df:	mov    esi,0x27db69d1
  4197e4:	push   ecx
  4197e5:	loope  0x419842
  4197e7:	mov    eax,0xa0d2d34
  4197ec:	xor    DWORD PTR [ebp+0x3f8b56be],0xffffff8b
  4197f3:	mov    al,0xe7
  4197f5:	mov    ?,WORD PTR [ebx-0x2fa60fb4]
  4197fb:	loopne 0x41979b
  4197fd:	(bad)  
  4197fe:	adc    DWORD PTR [ecx],edx
  419800:	stc    
  419801:	xor    BYTE PTR [ecx],ah
  419803:	sub    eax,DWORD PTR [ebp-0x53]
  419806:	fxch   st(2)
  419808:	int3   
  419809:	aam    0x93
  41980b:	add    eax,0x52d2b867
  419810:	fist   DWORD PTR [esp+eiz*4]
  419813:	call   0x4a1f:0x7b404aa0
  41981a:	clc    
  41981b:	jns    0x419898
  41981d:	pop    ebp
  41981e:	daa    
  41981f:	inc    ebp
  419820:	in     eax,0xc0
  419822:	shr    BYTE PTR [eax+edi*1],1
  419825:	loopne 0x4197c0
  419827:	cmp    al,BYTE PTR [ebp+0x57]
  41982a:	pop    es
  41982b:	dec    esi
  41982c:	scas   al,BYTE PTR es:[edi]
  41982d:	cmp    eax,0x9c156866
  419832:	mov    gs,WORD PTR [esi+0x44]
  419835:	retf   
  419836:	(bad)  
  419837:	cmp    al,0xd9
  419839:	adc    DWORD PTR [esi],0xf9ef9bfa
  41983f:	sbb    bl,dl
  419841:	outs   dx,DWORD PTR ds:[esi]
  419842:	fisttp WORD PTR [ebp-0x27d85ff3]
  419848:	addr16 xchg ebx,eax
  41984a:	xchg   ebp,eax
  41984b:	fstp   QWORD PTR [esi]
  41984d:	ror    ebx,1
  41984f:	lods   eax,DWORD PTR ds:[esi]
  419851:	int3   
  419852:	xor    al,0x6b
  419854:	pushf  
  419855:	xchg   esp,eax
  419856:	or     edx,0xffffffea
  419859:	data16 mov dl,al
  41985c:	push   ss
  41985d:	jb     0x4198ab
  41985f:	xor    ecx,DWORD PTR [eax+0x19]
  419862:	test   al,0x68
  419864:	inc    esi
  419865:	or     dh,BYTE PTR [edx-0x40]
  419868:	sub    dl,bh
  41986a:	xor    edi,eax
  41986c:	hlt    
  41986d:	rcr    dh,0x67
  419870:	into   
  419871:	xor    al,0xed
  419873:	sbb    BYTE PTR [edx],dl
  419875:	and    BYTE PTR [edi+0x6b333fff],al
  41987b:	pop    edx
  41987c:	xlat   BYTE PTR ds:[ebx]
  41987d:	sti    
  41987e:	(bad)  
  419880:	inc    ebp
  419881:	test   bl,cl
  419883:	dec    esp
  419884:	scas   eax,DWORD PTR es:[edi]
  419885:	push   ss
  419886:	sub    dh,BYTE PTR [ebp-0xd]
  419889:	nop
  41988a:	adc    ax,0x3572
  41988e:	jbe    0x4198ab
  419890:	mul    DWORD PTR [ecx]
  419892:	sub    DWORD PTR [edi-0x60b3d32d],edi
  419898:	shl    edx,0xac
  41989b:	sti    
  41989c:	sub    al,0x0
  41989e:	inc    edx
  41989f:	je     0x4198cf
  4198a1:	xor    dl,BYTE PTR [ebx+0x4bed0e64]
  4198a7:	push   ds
  4198a8:	push   es
  4198a9:	ficomp WORD PTR [ecx]
  4198ab:	sub    al,0x37
  4198ad:	aas    
  4198ae:	cli    
  4198af:	add    BYTE PTR [edx+edx*4-0x16],0xfe
  4198b4:	pop    eax
  4198b5:	rcl    BYTE PTR [eax],cl
  4198b7:	add    al,0x8a
  4198b9:	adc    eax,0x38b75b7f
  4198be:	jnp    0x419907
  4198c0:	xchg   esi,eax
  4198c1:	lods   eax,DWORD PTR ds:[esi]
  4198c2:	pop    ss
  4198c3:	shr    DWORD PTR [edx-0x34],cl
  4198c6:	push   edi
  4198c7:	scas   eax,DWORD PTR es:[edi]
  4198c8:	cwde   
  4198c9:	dec    ebx
  4198ca:	test   DWORD PTR [eax-0xbb42595],eax
  4198d0:	(bad)  
  4198d1:	int3   
  4198d2:	adc    dl,BYTE PTR [ebp-0x45fe3581]
  4198d8:	addr16 enter 0xa8c7,0xbe
  4198dd:	scas   eax,DWORD PTR es:[edi]
  4198de:	loopne 0x41990d
  4198e0:	and    DWORD PTR [esi+0x52],esp
  4198e3:	test   al,0xe8
  4198e5:	ret    
  4198e6:	addr16 sti 
  4198e8:	lea    esp,[eax]
  4198ea:	pop    ebx
  4198eb:	aad    0xe9
  4198ed:	test   eax,0xbfa521be
  4198f2:	or     bh,BYTE PTR [edx+0x7694fcdb]
  4198f8:	int3   
  4198f9:	mov    cl,ch
  4198fb:	and    DWORD PTR [eax+0x61],edx
  4198fe:	inc    esp
  4198ff:	mov    al,ds:0x432905f1
  419904:	(bad)  
  419905:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419906:	in     eax,0xe8
  419908:	inc    ebx
  419909:	ret    0x7ebf
  41990c:	fidivr WORD PTR [edi]
  41990e:	add    BYTE PTR ds:0x18e506b8,al
  419914:	retf   
  419915:	scas   al,BYTE PTR es:[edi]
  419916:	xor    DWORD PTR [edx+0x18],esi
  419919:	mov    ebx,0x3a1486b
  41991e:	push   edi
  41991f:	mov    dl,0x2f
  419921:	dec    edx
  419922:	loop   0x4198fb
  419924:	ins    BYTE PTR es:[edi],dx
  419925:	inc    edi
  419926:	icebp  
  419927:	imul   esi,DWORD PTR [esp+eiz*8-0x3a51282d],0xffffffbd
  41992f:	push   es
  419930:	mov    eax,0x543a65e5
  419935:	jns    0x419900
  419937:	inc    ecx
  419938:	jge    0x419910
  41993a:	lods   eax,DWORD PTR ds:[esi]
  41993b:	dec    ecx
  41993c:	inc    ecx
  41993d:	sub    ch,BYTE PTR [eax+0x24]
  419940:	and    DWORD PTR [ebp+0x1b],esi
  419943:	hlt    
  419944:	bound  ecx,QWORD PTR [esi-0x29275ee0]
  41994a:	xchg   ecx,esp
  41994c:	xchg   bh,ah
  41994e:	jmp    0xe6d4:0x8c2349eb
  419955:	sub    eax,0x7e56888d
  41995a:	xor    BYTE PTR [edx-0x7dc66daa],bh
  419960:	dec    ebx
  419961:	cmp    eax,0xda0fb011
  419966:	pop    esi
  419967:	fsub   DWORD PTR [eax]
  419969:	out    dx,eax
  41996a:	lods   eax,DWORD PTR ds:[esi]
  41996b:	or     ah,dl
  41996d:	mov    bl,0xfa
  41996f:	dec    eax
  419970:	sbb    BYTE PTR [edx+0x402471bf],dl
  419976:	pop    ebp
  419977:	dec    edi
  419978:	ror    eax,cl
  41997a:	out    0x7f,eax
  41997c:	and    eax,0x428a4fb0
  419981:	xchg   ecx,eax
  419982:	dec    edx
  419983:	fdivr  QWORD PTR [esi]
  419985:	dec    ebp
  419986:	jg     0x419942
  419988:	ret    
  419989:	xor    BYTE PTR [ecx-0x3e],0x7c
  41998d:	mov    dl,0xbf
  41998f:	daa    
  419990:	test   DWORD PTR [ecx],edi
  419992:	aad    0xe4
  419994:	xchg   ebp,eax
  419995:	or     DWORD PTR [bx+si-0x35],ebp
  419999:	ja     0x4199d0
  41999b:	in     eax,0xe4
  41999d:	sub    al,0x3a
  41999f:	inc    eax
  4199a0:	test   BYTE PTR [esi-0x566c6050],ch
  4199a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199a7:	stc    
  4199a8:	shr    cl,0xfc
  4199ab:	int3   
  4199ac:	pop    esp
  4199ad:	fsubr  QWORD PTR [esi+0x1f452348]
  4199b3:	clc    
  4199b4:	mov    ebx,0x4088bee
  4199b9:	xchg   dx,ax
  4199bb:	mov    dl,0xa6
  4199bd:	or     eax,0x165e77ea
  4199c2:	push   ebx
  4199c3:	lock pop edi
  4199c5:	push   ebx
  4199c6:	cmp    eax,0x5143b6fa
  4199cb:	in     al,dx
  4199cc:	stos   DWORD PTR es:[edi],eax
  4199cd:	jecxz  0x419a15
  4199cf:	sbb    al,BYTE PTR [eax-0x39f0d1b0]
  4199d5:	lods   al,BYTE PTR ds:[esi]
  4199d6:	push   es
  4199d7:	pop    edi
  4199d8:	ret    0x1c77
  4199db:	add    BYTE PTR [edi-0x5f974248],dl
  4199e1:	mov    DWORD PTR [edx+0x649cd7ca],edi
  4199e7:	out    0xa,eax
  4199e9:	mov    ebp,DWORD PTR [esp+edx*8]
  4199ec:	inc    ebp
  4199ed:	pusha  
  4199ee:	into   
  4199ef:	mov    ebp,0xdd0b1422
  4199f4:	in     eax,dx
  4199f5:	cmp    al,0x1
  4199f7:	aam    0x21
  4199f9:	cmp    DWORD PTR [edx],edx
  4199fb:	inc    edx
  4199fc:	dec    edx
  4199fd:	test   al,0xaf
  4199ff:	mov    dh,0xda
  419a01:	retf   0xb6cc
  419a04:	jmp    0xb18f:0xf5891dac
  419a0b:	stos   BYTE PTR es:[edi],al
  419a0c:	jo     0x4199c6
  419a0e:	shl    DWORD PTR [edx+0x413677eb],cl
  419a14:	int    0x85
  419a16:	ret    
  419a17:	inc    edi
  419a18:	jmp    0x419a11
  419a1a:	jnp    0x4199b4
  419a1c:	dec    ebp
  419a1d:	out    0x8b,al
  419a1f:	push   ds
  419a20:	imul   edx,edx,0xaf8d5133
  419a26:	shl    BYTE PTR [ecx],0xc2
  419a29:	test   DWORD PTR [edx],0xb3755c83
  419a2f:	inc    eax
  419a30:	or     dl,BYTE PTR [ebp+0x7e5ca472]
  419a36:	popa   
  419a37:	xadd   BYTE PTR [esi],bh
  419a3a:	dec    ecx
  419a3b:	aam    0x90
  419a3d:	push   0xffffff8c
  419a3f:	(bad)  
  419a40:	lahf   
  419a41:	push   esp
  419a42:	or     eax,edx
  419a44:	hlt    
  419a45:	out    dx,eax
  419a46:	fild   QWORD PTR ds:0x55490a5c
  419a4c:	int    0x54
  419a4e:	lds    ebx,FWORD PTR [ebp-0x67]
  419a51:	test   ah,cl
  419a53:	lock scas eax,DWORD PTR es:[edi]
  419a55:	and    cl,BYTE PTR [ecx-0x27]
  419a58:	stos   DWORD PTR es:[edi],eax
  419a59:	xchg   esi,eax
  419a5a:	lock fidivr WORD PTR [edx-0x47]
  419a5e:	push   ebx
  419a5f:	pop    esp
  419a60:	push   edi
  419a61:	jne    0x419a6d
  419a63:	adc    eax,0x3fb07d3
  419a68:	ss mov eax,0xcb4f66a7
  419a6e:	and    BYTE PTR [edi],cl
  419a70:	pop    edi
  419a71:	xchg   ebx,eax
  419a72:	and    dh,dh
  419a74:	stc    
  419a75:	cmp    BYTE PTR [edx-0x30],dh
  419a78:	cmp    eax,0x1be79fc3
  419a7d:	and    bh,BYTE PTR [ebp+0x2c]
  419a80:	cmp    edx,edi
  419a82:	out    dx,al
  419a83:	cld    
  419a84:	jecxz  0x419a60
  419a86:	dec    esi
  419a87:	add    DWORD PTR [eax],ebp
  419a89:	dec    eax
  419a8a:	ds cs out 0x2d,eax
  419a8e:	mov    BYTE PTR [ebx],cl
  419a90:	jmp    0x419adc
  419a92:	mov    edx,0xd36a8449
  419a97:	jecxz  0x419a40
  419a99:	cmp    esp,DWORD PTR [esi]
  419a9b:	out    dx,al
  419a9c:	push   ss
  419a9d:	out    dx,al
  419a9e:	push   0xc01b30d2
  419aa3:	push   ecx
  419aa4:	cld    
  419aa5:	sub    DWORD PTR [edx+0x2aa8767c],ebx
  419aab:	daa    
  419aac:	xchg   esp,eax
  419aad:	dec    ebx
  419aae:	cmc    
  419aaf:	inc    ebx
  419ab0:	repz mov esi,0x3ee43ed2
  419ab6:	in     eax,dx
  419ab7:	popa   
  419ab8:	sub    al,BYTE PTR [esi]
  419aba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419abb:	sti    
  419abc:	mov    ebx,0xf46ffb4c
  419ac1:	addr16 enter 0x53d1,0x49
  419ac6:	int    0x41
  419ac8:	and    eax,0xfe1c6379
  419acd:	popa   
  419ace:	inc    edi
  419acf:	dec    ebx
  419ad0:	xor    eax,0x6c6cbd2a
  419ad5:	jb     0x419aa2
  419ad7:	push   cs
  419ad8:	retf   0x6077
  419adb:	imul   esp,DWORD PTR [eax-0x35],0xfb398ab4
  419ae2:	sub    DWORD PTR [esi-0xf22537f],ebx
  419ae8:	out    0x8a,eax
  419aea:	xchg   esi,eax
  419aeb:	add    edx,DWORD PTR [ebx]
  419aed:	scas   al,BYTE PTR es:[edi]
  419aee:	call   0xdf62cfbf
  419af3:	lods   eax,DWORD PTR ds:[esi]
  419af4:	xchg   ebp,eax
  419af5:	and    edx,ecx
  419af7:	xchg   ebx,eax
  419af8:	aas    
  419af9:	cld    
  419afa:	add    eax,0xed0b319b
  419aff:	shl    BYTE PTR [esi],cl
  419b01:	div    ebx
  419b03:	out    0xba,al
  419b05:	cwde   
  419b06:	and    cl,dh
  419b08:	cmp    DWORD PTR [edx-0x41],edi
  419b0b:	shl    DWORD PTR [esi-0x70],cl
  419b0e:	int3   
  419b0f:	lock or eax,DWORD PTR [edi]
  419b12:	int3   
  419b13:	mov    al,ds:0xfcc92a93
  419b18:	jmp    0xcd46:0x6605ad5e
  419b1f:	aas    
  419b20:	jge    0x419afb
  419b22:	mov    ebx,0xfbd83b62
  419b27:	pop    ss
  419b28:	jle    0x419b9d
  419b2a:	mov    bl,0x90
  419b2c:	stos   BYTE PTR es:[edi],al
  419b2d:	cmp    BYTE PTR [eax-0x45],al
  419b30:	pushf  
  419b31:	stos   BYTE PTR es:[edi],al
  419b32:	push   ss
  419b33:	int3   
  419b34:	push   edx
  419b35:	push   0x99477ba8
  419b3a:	inc    edi
  419b3b:	push   edx
  419b3c:	stos   BYTE PTR es:[edi],al
  419b3d:	xchg   DWORD PTR [ecx-0xcb64e9f],esi
  419b43:	js     0x419ba0
  419b45:	scas   eax,DWORD PTR es:[edi]
  419b46:	lock sub DWORD PTR [esi+0x71],ebp
  419b4a:	push   edi
  419b4b:	xchg   edi,eax
  419b4c:	jle    0x419b36
  419b4e:	push   eax
  419b4f:	fs sbb eax,0x59e0100f
  419b55:	or     ebx,DWORD PTR [edx-0x105fb1e7]
  419b5b:	dec    ebp
  419b5c:	div    DWORD PTR ds:0xe8190afe
  419b62:	les    edx,FWORD PTR [ebp-0x2f769afe]
  419b68:	cmp    BYTE PTR [esi-0x42],0xdf
  419b6c:	pop    esi
  419b6d:	pop    edi
  419b6e:	mov    ds:0x6cccab3f,eax
  419b73:	push   eax
  419b74:	jge    0x419b65
  419b76:	pop    ds
  419b77:	add    DWORD PTR [ecx-0x3b48b2e],ebx
  419b7d:	js     0x419b90
  419b7f:	mov    BYTE PTR [edi-0xb],bl
  419b82:	and    BYTE PTR [ebx-0x70],cl
  419b85:	xor    eax,0x3225cd0b
  419b8a:	sahf   
  419b8b:	scas   al,BYTE PTR es:[edi]
  419b8c:	sbb    al,BYTE PTR ds:0x339c8401
  419b92:	ss mov edx,0xf46f4b24
  419b98:	fwait
  419b99:	xchg   ebp,eax
  419b9a:	mov    DWORD PTR [edx],0x54d765f7
  419ba0:	ficom  DWORD PTR [ebp-0x3b]
  419ba3:	into   
  419ba4:	xor    DWORD PTR ds:0x6eccd1da,esi
  419baa:	mov    DWORD PTR [ebp+eax*2+0x1639e908],ecx
  419bb1:	jns    0x419b98
  419bb3:	sbb    DWORD PTR [edx+0x1b0231fe],0x50059074
  419bbd:	mov    ebp,DWORD PTR [edi-0x26]
  419bc0:	xchg   edx,eax
  419bc1:	jecxz  0x419bac
  419bc3:	arpl   WORD PTR [edi-0x22f9bbf0],bx
  419bc9:	push   es
  419bca:	pop    ecx
  419bcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419bcc:	add    DWORD PTR [ebx-0x3affc147],edx
  419bd2:	int3   
  419bd3:	clc    
  419bd4:	mov    bh,0xd6
  419bd6:	call   DWORD PTR [ebx]
  419bd8:	add    bl,BYTE PTR [edx-0x43ea05a3]
  419bde:	ficom  WORD PTR [ebp+0x1d395dfb]
  419be4:	cmp    edi,edi
  419be6:	jbe    0x419b6a
  419be8:	jg     0x419ba0
  419bea:	xor    esp,DWORD PTR [esi]
  419bec:	and    bl,BYTE PTR [ebx]
  419bee:	xchg   edi,eax
  419bef:	retf   
  419bf0:	cmp    DWORD PTR [ebx],edx
  419bf2:	lds    ebp,FWORD PTR [ebp+0x669a874d]
  419bf8:	stos   DWORD PTR es:[edi],eax
  419bf9:	xchg   DWORD PTR [ecx+0x6c78c953],ebp
  419bff:	and    BYTE PTR [edi+0x45],bl
  419c02:	stc    
  419c03:	jnp    0x419bb0
  419c05:	jnp    0x419bae
  419c07:	cli    
  419c08:	xor    al,0x37
  419c0a:	mov    edx,eax
  419c0c:	add    BYTE PTR [eax+ebx*1],dh
  419c0f:	sub    eax,0x10658b73
  419c14:	sahf   
  419c15:	jns    0x419ba0
  419c17:	pop    es
  419c18:	imul   esi,DWORD PTR [ecx],0x70070c7a
  419c1e:	stos   DWORD PTR es:[edi],eax
  419c1f:	and    edx,edi
  419c21:	pop    ds
  419c22:	mov    es,WORD PTR [esi+0x17b431b9]
  419c28:	(bad)  
  419c29:	(bad)  
  419c2a:	pop    eax
  419c2b:	or     BYTE PTR [ecx+0x106b458d],bl
  419c31:	jae    0x419c35
  419c33:	cmp    ah,BYTE PTR [esi]
  419c35:	ins    DWORD PTR es:[edi],dx
  419c36:	js     0x419bd9
  419c38:	(bad)  
  419c39:	call   0xb88b:0x5d1bb798
  419c40:	je     0x419c6c
  419c42:	or     edi,DWORD PTR [ecx+0xefaf2c6]
  419c48:	hlt    
  419c49:	leave  
  419c4a:	adc    BYTE PTR [edx],ch
  419c4c:	int3   
  419c4d:	fbstp  TBYTE PTR [edi+0x38]
  419c50:	jmp    0x47ed2b90
  419c55:	sub    edx,DWORD PTR [eax+0x4a]
  419c58:	cmp    cl,al
  419c5a:	sahf   
  419c5b:	iret   
  419c5c:	add    dl,dl
  419c5e:	gs (bad) 
  419c60:	or     dh,BYTE PTR [ebx]
  419c62:	jl     0x419cbb
  419c64:	and    DWORD PTR [ecx-0x34],ebp
  419c67:	and    eax,0x85832ebe
  419c6c:	cmp    ch,BYTE PTR [esi-0x604b593a]
  419c72:	aas    
  419c73:	push   ebx
  419c74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c75:	and    esi,DWORD PTR [ecx+0x1e5ae7d7]
  419c7b:	ins    DWORD PTR es:[edi],dx
  419c7c:	pop    ds
  419c7d:	and    al,0xe0
  419c7f:	ins    BYTE PTR es:[edi],dx
  419c80:	push   0x0
  419c82:	pop    ds
  419c83:	mov    edx,0x47dcbb81
  419c88:	aas    
  419c89:	loop   0x419c9f
  419c8b:	xor    BYTE PTR [esi],ch
  419c8d:	pop    eax
  419c8e:	pushf  
  419c8f:	das    
  419c90:	cmc    
  419c91:	push   edi
  419c92:	(bad)  
  419c93:	in     al,0x82
  419c95:	dec    edi
  419c96:	loope  0x419c3e
  419c98:	repz arpl di,ax
  419c9b:	adc    al,0x4b
  419c9d:	mov    esi,0xf41b5748
  419ca2:	mov    ss,ecx
  419ca4:	out    dx,al
  419ca5:	mov    ebp,DWORD PTR [ebp+0x10]
  419ca8:	push   ebx
  419ca9:	pop    esp
  419caa:	dec    esp
  419cab:	and    bh,BYTE PTR [ebx-0xd]
  419cae:	pop    es
  419caf:	cmp    BYTE PTR [ebx],dh
  419cb1:	mov    WORD PTR [eax+edx*1],ds
  419cb4:	mov    BYTE PTR [esi+0x71],bh
  419cb7:	mov    eax,0x31f9d95c
  419cbc:	call   FWORD PTR [edx+edi*4]
  419cbf:	jge    0x419cea
  419cc1:	xchg   ecx,eax
  419cc2:	lock imul eax,ebp,0x50a58965
  419cc9:	iret   
  419cca:	mov    al,0x99
  419ccc:	push   eax
  419ccd:	xchg   esi,eax
  419cce:	repz xor ebp,ebx
  419cd1:	adc    al,0x86
  419cd3:	mov    dh,0xf5
  419cd5:	mov    edi,0x774cc645
  419cda:	sub    al,0xc2
  419cdc:	retf   
  419cdd:	inc    ebp
  419cde:	mov    edi,0x5e87c12b
  419ce3:	mov    ?,WORD PTR [ebx*8-0x41176a57]
  419cea:	sar    BYTE PTR [edi],1
  419cec:	pushf  
  419ced:	in     al,dx
  419cee:	out    dx,al
  419cef:	(bad)  
  419cf0:	loop   0x419cf6
  419cf2:	add    cl,BYTE PTR [edx]
  419cf4:	dec    ebp
  419cf5:	jae    0x419cf4
  419cf7:	and    DWORD PTR [ebx-0x60],esi
  419cfa:	mov    ds:0x6f0d5625,al
  419cff:	fs ja  0x419cdc
  419d02:	clc    
  419d03:	fs mov cl,0x3
  419d06:	and    BYTE PTR [esi-0x43cfad73],bh
  419d0c:	ret    
  419d0d:	inc    esi
  419d0e:	js     0x419cec
  419d10:	in     al,dx
  419d11:	push   0x77
  419d13:	call   DWORD PTR [edi]
  419d15:	pop    ds
  419d16:	pop    esp
  419d17:	daa    
  419d18:	jno    0x419d67
  419d1a:	jle    0x419d79
  419d1c:	outs   dx,BYTE PTR ds:[esi]
  419d1d:	int3   
  419d1e:	adc    bh,BYTE PTR [esi+0x61302d89]
  419d24:	in     eax,0x1d
  419d26:	dec    esp
  419d27:	out    dx,eax
  419d28:	or     al,0x13
  419d2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d2b:	shl    BYTE PTR [edi+0x138b92a7],0xe0
  419d32:	dec    ebp
  419d33:	sub    esi,0xe4287567
  419d39:	stc    
  419d3a:	xor    ch,BYTE PTR [eax]
  419d3c:	pop    ebp
  419d3d:	inc    edi
  419d3e:	jg     0x419dad
  419d40:	xor    eax,0xc572ceb1
  419d45:	repnz mov ds:0xa342dbdb,al
  419d4b:	mov    ebx,0x44e6df67
  419d50:	mov    ebx,0x4fa878b2
  419d55:	imul   esi,eax,0xffffff84
  419d58:	push   0x59869ae3
  419d5d:	add    al,0x78
  419d5f:	xchg   edi,eax
  419d60:	dec    eax
  419d61:	hlt    
  419d62:	push   ebx
  419d63:	jecxz  0x419d42
  419d65:	cdq    
  419d66:	mov    bl,0xfb
  419d68:	cwde   
  419d69:	sar    edi,cl
  419d6b:	call   0x57f5f73a
  419d70:	cwde   
  419d71:	sbb    ebx,ebp
  419d73:	push   esi
  419d74:	push   edi
  419d75:	jno    0x419df3
  419d77:	aad    0x24
  419d79:	in     eax,0xa8
  419d7b:	mov    ecx,0xb9a64a5e
  419d80:	and    BYTE PTR [edi-0x2303e3e5],dl
  419d86:	mov    ds:0x994e0504,al
  419d8b:	sbb    DWORD PTR [ebp+0x3c7dbd50],0x448349a8
  419d95:	fistp  WORD PTR [ebp+0x621f278f]
  419d9b:	add    edi,DWORD PTR [edi+0x3de93941]
  419da1:	fist   DWORD PTR [eax+0x1f]
  419da4:	aas    
  419da5:	push   cs
  419da6:	adc    ah,ch
  419da8:	jmp    0x422d:0xcdfc14fe
  419daf:	mov    al,0x4
  419db1:	pop    eax
  419db2:	jns    0x419d4c
  419db4:	lock repz or ah,cl
  419db8:	xor    BYTE PTR [edx],bh
  419dba:	pop    edx
  419dbb:	in     eax,0x46
  419dbd:	pop    edi
  419dbe:	push   ebx
  419dbf:	icebp  
  419dc0:	dec    esp
  419dc1:	cli    
  419dc2:	imul   sp,WORD PTR [ecx],0x23
  419dc6:	inc    esi
  419dc7:	shr    DWORD PTR [ebp+0x4aff5a0f],0xdb
  419dce:	mov    edi,0x5d7566ac
  419dd3:	fst    QWORD PTR ds:0xb35b40cd
  419dd9:	adc    DWORD PTR [esi+0x31],0x5c
  419ddd:	mov    edx,0x5cef35ac
  419de2:	cmp    ebp,0xffffff90
  419de5:	call   0x82b:0x28ec6df9
  419dec:	mov    ecx,0x56e30581
  419df1:	inc    esp
  419df2:	inc    ebx
  419df3:	loope  0x419db7
  419df5:	test   al,0x99
  419df7:	dec    ebx
  419df8:	in     eax,0xdf
  419dfa:	push   eax
  419dfb:	add    al,0xb
  419dfd:	inc    ebp
  419dfe:	ins    DWORD PTR es:[edi],dx
  419dff:	(bad)  
  419e00:	jl     0x419dba
  419e02:	dec    eax
  419e03:	inc    ebx
  419e04:	fdivr  st(3),st
  419e06:	call   0xc2d3:0x4b714e39
  419e0d:	pop    ebp
  419e0e:	dec    edi
  419e0f:	rcl    BYTE PTR [ebp-0x4f],0x24
  419e13:	add    BYTE PTR [esi],0x61
  419e16:	js     0x419dc3
  419e18:	inc    edx
  419e19:	pop    esp
  419e1a:	dec    esi
  419e1b:	cdq    
  419e1c:	ffree  st(4)
  419e1e:	popa   
  419e1f:	pop    es
  419e20:	add    ebp,eax
  419e22:	xlat   BYTE PTR ds:[ebx]
  419e23:	jge    0x419e55
  419e25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e26:	lock fcom st(3)
  419e29:	lock adc al,0xe2
  419e2c:	sub    al,0xb4
  419e2e:	das    
  419e2f:	or     ebp,DWORD PTR [ecx]
  419e31:	jge    0x419e30
  419e33:	icebp  
  419e34:	cdq    
  419e35:	xchg   ecx,eax
  419e36:	cvtps2pi mm6,QWORD PTR [edi+edi*4]
  419e3a:	icebp  
  419e3b:	mov    ebx,0x176bed35
  419e40:	fwait
  419e41:	outs   dx,BYTE PTR ds:[esi]
  419e42:	(bad)  
  419e43:	mov    fs,eax
  419e45:	fisub  WORD PTR [edx-0x1b90fdb6]
  419e4b:	cmp    BYTE PTR [esi],0xb
  419e4e:	mov    ch,bh
  419e50:	sub    eax,0xbe4806e8
  419e55:	jno    0x419de7
  419e57:	test   al,0x61
  419e59:	test   al,0xe2
  419e5b:	jbe    0x419e60
  419e5d:	lods   eax,DWORD PTR ds:[esi]
  419e5e:	jbe    0x419ebd
  419e60:	stc    
  419e61:	ret    0x6b72
  419e64:	cmp    al,0xac
  419e66:	inc    edx
  419e67:	loope  0x419e72
  419e69:	loope  0x419e22
  419e6b:	in     eax,0x99
  419e6d:	iret   
  419e6e:	jp     0x419e7c
  419e70:	dec    ebx
  419e71:	cdq    
  419e72:	mov    WORD PTR [ebx],ds
  419e74:	xchg   esi,eax
  419e75:	add    BYTE PTR [ecx+0x55],bl
  419e78:	jge    0x419e69
  419e7a:	scas   eax,DWORD PTR es:[edi]
  419e7b:	clc    
  419e7c:	xchg   edi,eax
  419e7d:	xchg   ecx,eax
  419e7e:	leave  
  419e7f:	or     eax,0xb25d23f2
  419e84:	clc    
  419e85:	ret    0xa869
  419e88:	ins    BYTE PTR es:[edi],dx
  419e89:	clc    
  419e8a:	into   
  419e8b:	mov    bh,0xa4
  419e8d:	rcr    BYTE PTR [eax],cl
  419e8f:	push   edx
  419e90:	ret    
  419e91:	ret    
  419e92:	add    ebx,DWORD PTR [esi]
  419e94:	cli    
  419e95:	(bad)  
  419e96:	cmp    bh,BYTE PTR [edx-0x3f]
  419e99:	icebp  
  419e9a:	or     DWORD PTR [edi],edx
  419e9c:	mov    ?,edx
  419e9e:	jmp    0x419ec5
  419ea0:	mov    WORD PTR [eax],fs
  419ea2:	adc    edx,ebp
  419ea4:	nop
  419ea5:	add    ebx,DWORD PTR [ebx+0x7d]
  419ea8:	sbb    edi,ecx
  419eaa:	sub    eax,0xd297c8b7
  419eaf:	in     eax,0xe7
  419eb1:	shl    DWORD PTR [esi+0x63bbb315],0xd4
  419eb8:	std    
  419eb9:	fldenv ds:0x95973848
  419ebf:	imul   ebp,DWORD PTR [edi+0x1],0xffffffa9
  419ec3:	push   eax
  419ec4:	push   0xc5d3d112
  419ec9:	xchg   BYTE PTR [ebx+0x6314d4c7],bh
  419ecf:	adc    eax,0xe4b5cfb3
  419ed4:	nop
  419ed5:	out    dx,al
  419ed6:	mov    eax,ds:0x9533dfd9
  419edb:	ds and al,0x39
  419ede:	int3   
  419edf:	fs jl  0x419e79
  419ee2:	dec    edx
  419ee3:	arpl   WORD PTR [eax],di
  419ee5:	sub    al,0x91
  419ee7:	lods   eax,DWORD PTR ds:[esi]
  419ee8:	xor    BYTE PTR [esi-0x43],ch
  419eeb:	inc    ebp
  419eec:	shl    BYTE PTR [ebp-0x15],cl
  419eef:	push   0xffffffad
  419ef1:	cmp    DWORD PTR [edi],esi
  419ef3:	jle    0x419eb0
  419ef5:	repnz mov eax,DWORD PTR [eax+0x70e3b802]
  419efc:	push   0x5cc4a69c
  419f01:	or     al,0x1c
  419f03:	lahf   
  419f04:	adc    al,bh
  419f06:	cmp    ch,bl
  419f08:	mov    ebp,0x2cd881c4
  419f0d:	jne    0x419f81
  419f0f:	dec    esp
  419f10:	fnstcw WORD PTR [eax+0x9b8f385]
  419f16:	inc    eax
  419f17:	jmp    0x5430290e
  419f1c:	pop    esp
  419f1d:	ror    BYTE PTR [edx],1
  419f1f:	mov    edi,es
  419f21:	push   ebp
  419f22:	sahf   
  419f23:	push   es
  419f24:	push   edi
  419f25:	lds    esp,FWORD PTR [edx+0x7247d289]
  419f2b:	sahf   
  419f2c:	nop
  419f2d:	clc    
  419f2e:	aaa    
  419f2f:	adc    ch,bl
  419f31:	pushf  
  419f32:	mov    bl,0x26
  419f34:	outs   dx,DWORD PTR ds:[esi]
  419f35:	xor    eax,0xbe8224e3
  419f3a:	sbb    DWORD PTR [ebp-0x6cffc417],esi
  419f40:	scas   eax,DWORD PTR es:[edi]
  419f41:	adc    ch,BYTE PTR [ebp+0x6b39c1a4]
  419f47:	push   ds
  419f48:	(bad)  
  419f49:	cmp    ecx,DWORD PTR ds:0x23dae24a
  419f4f:	mov    ch,0x93
  419f51:	scas   eax,DWORD PTR es:[edi]
  419f52:	mov    ch,0xe
  419f54:	mov    esi,0x8f98bbba
  419f59:	xor    cl,BYTE PTR [edi+0x616cb80f]
  419f5f:	ins    BYTE PTR es:[edi],dx
  419f60:	in     eax,dx
  419f61:	mov    dh,0x78
  419f63:	out    0xd1,eax
  419f65:	std    
  419f66:	dec    eax
  419f67:	xchg   edx,eax
  419f68:	and    ah,BYTE PTR [eax+0x0]
  419f6b:	jl     0x419f8e
  419f6d:	dec    edx
  419f6e:	sub    BYTE PTR [edi-0x25],dh
  419f71:	mov    ch,0x1d
  419f73:	out    dx,eax
  419f74:	fistp  QWORD PTR [esi+eiz*2-0x66fa3c2a]
  419f7b:	dec    eax
  419f7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f7d:	mov    dh,bh
  419f7f:	gs jle 0x419f6e
  419f82:	in     al,dx
  419f83:	je     0x419fd6
  419f85:	xor    DWORD PTR [eax+edi*4+0x73530c2c],esp
  419f8c:	stos   DWORD PTR es:[edi],eax
  419f8d:	pushf  
  419f8e:	retf   0x2cef
  419f91:	in     eax,dx
  419f92:	cmp    al,al
  419f94:	or     BYTE PTR [ebp-0x8c754bc],cl
  419f9a:	shr    ebx,0x9e
  419f9d:	call   0x5dc21eaf
  419fa2:	ret    
  419fa3:	and    ebp,ebp
  419fa5:	repz or bh,BYTE PTR [ecx]
  419fa8:	scas   eax,DWORD PTR es:[edi]
  419fa9:	and    dl,BYTE PTR [ebx+ecx*8-0x6a]
  419fad:	jmp    0x7c4da19b
  419fb2:	jne    0x419fbc
  419fb4:	imul   edi,DWORD PTR [edi+edi*2-0x1c],0xe
  419fb9:	cmp    BYTE PTR [ebp-0x9],cl
  419fbc:	xchg   edx,eax
  419fbd:	and    eax,0x737f8454
  419fc2:	dec    ax
  419fc4:	sub    edi,DWORD PTR cs:[esi+0x30]
  419fc8:	ins    BYTE PTR es:[edi],dx
  419fc9:	lahf   
  419fca:	pop    esp
  419fcb:	sbb    eax,ecx
  419fcd:	and    ch,bh
  419fcf:	sbb    dh,BYTE PTR [ebp*1-0x77f4a358]
  419fd6:	mov    eax,ds:0x6df40004
  419fdb:	push   ebp
  419fdc:	inc    eax
  419fdd:	iret   
  419fde:	lds    ebp,FWORD PTR [edi+0x67]
  419fe1:	xor    al,0xd
  419fe3:	shl    ebx,cl
  419fe5:	and    BYTE PTR [edx],ch
  419fe7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419fe8:	xor    esp,ebx
  419fea:	mov    ds:0x475146fd,eax
  419fef:	cmc    
  419ff0:	pop    esp
  419ff1:	and    esi,DWORD PTR ds:0xda1b5b63
  419ff7:	dec    edi
  419ff8:	out    dx,eax
  419ff9:	jmp    0xa44f7e96
  419ffe:	push   0xffffff96
  41a000:	stc    
  41a001:	and    dl,ch
  41a003:	jns    0x41a04e
  41a005:	leave  
  41a006:	stos   BYTE PTR es:[edi],al
  41a007:	xor    al,0x1e
  41a009:	push   esp
  41a00a:	pop    es
  41a00b:	cmp    esi,eax
  41a00d:	push   esi
  41a00e:	fadd   DWORD PTR [ecx-0x7a]
  41a011:	pusha  
  41a012:	or     al,0x44
  41a014:	aaa    
  41a015:	out    0xf3,al
  41a017:	fldcw  WORD PTR [esp+edx*4]
  41a01a:	sahf   
  41a01b:	adc    al,0x13
  41a01d:	(bad)  
  41a01e:	fs gs cmc 
  41a021:	fsub   st(2),st
  41a023:	xchg   ebx,eax
  41a024:	xor    al,ch
  41a026:	fwait
  41a027:	push   0x7b
  41a029:	lods   eax,DWORD PTR ds:[esi]
  41a02a:	add    cl,BYTE PTR [ecx+0x654b35e6]
  41a030:	inc    eax
  41a031:	test   DWORD PTR [edx+0x7ba3c17b],esp
  41a037:	mov    eax,ds:0xc34bae9b
  41a03c:	inc    eax
  41a03d:	lods   eax,DWORD PTR ds:[esi]
  41a03e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a03f:	sahf   
  41a040:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a041:	data16 xor BYTE PTR [esi+0x1ac1f510],al
  41a048:	push   eax
  41a049:	push   ds
  41a04a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a04b:	cmp    DWORD PTR [edx],ebp
  41a04d:	cmp    DWORD PTR [esi+0x37],ebp
  41a050:	inc    ebx
  41a051:	xlat   BYTE PTR ds:[ebx]
  41a052:	std    
  41a053:	mov    ecx,0x49ca3c2
  41a058:	inc    esp
  41a059:	(bad)  
  41a05a:	(bad)  
  41a05b:	mov    edx,0xdb5e014f
  41a060:	mov    esi,0x4ee13514
  41a065:	aad    0xfb
  41a067:	pop    esp
  41a068:	mov    ch,0x1d
  41a06a:	adc    al,BYTE PTR cs:[esi+0x14]
  41a06e:	and    BYTE PTR [esi],bh
  41a070:	pop    ss
  41a071:	cmp    edx,ebp
  41a073:	sbb    al,0xd3
  41a075:	jb     0x41a011
  41a077:	adc    edx,DWORD PTR [edi+0x5729b64e]
  41a07d:	jno    0x41a0be
  41a07f:	adc    dh,BYTE PTR [edi]
  41a081:	test   BYTE PTR [edi+0x75],dl
  41a084:	jecxz  0x41a087
  41a086:	pop    edx
  41a087:	pop    ecx
  41a088:	jb     0x41a0f0
  41a08a:	fisubr WORD PTR [esi+0x330c4084]
  41a090:	or     ecx,ebp
  41a092:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41a094:	sub    DWORD PTR [ecx-0x76],esp
  41a097:	jns    0x41a0cf
  41a099:	jg     0x41a04d
  41a09b:	into   
  41a09c:	jp     0x41a062
  41a09e:	test   ebp,edi
  41a0a0:	and    bh,BYTE PTR [edi-0x6193d433]
  41a0a6:	imul   ebx,ecx,0xc02fb29
  41a0ac:	xor    dl,dl
  41a0ae:	push   ss
  41a0af:	jmp    0x25ac:0xe512188a
  41a0b6:	loopne 0x41a11d
  41a0b8:	sbb    DWORD PTR [esi-0x29],0xc312554f
  41a0bf:	addr16 cmp ecx,0x7e
  41a0c3:	sub    ch,cl
  41a0c5:	retf   
  41a0c6:	aaa    
  41a0c7:	mov    ebx,0xc48c5ce9
  41a0cc:	lahf   
  41a0cd:	xor    ecx,0x4139eb2a
  41a0d3:	push   es
  41a0d4:	adc    ecx,DWORD PTR [eax+eiz*1+0x78843e67]
  41a0db:	mov    ch,0xcd
  41a0dd:	mov    cs,ebx
  41a0df:	(bad)  
  41a0e0:	call   0xc8e0:0x237793b
  41a0e7:	pop    ebp
  41a0e8:	mov    eax,ds:0x42620a57
  41a0ed:	fst    QWORD PTR [eax-0x34954260]
  41a0f3:	xlat   BYTE PTR ds:[ebx]
  41a0f4:	xchg   esp,eax
  41a0f5:	lds    edx,FWORD PTR [edx-0x7cbe6524]
  41a0fb:	xor    DWORD PTR [edi+ebx*8-0x3ec64305],0x4a
  41a103:	mov    eax,ds:0x9003e256
  41a108:	aas    
  41a109:	cwde   
  41a10a:	add    BYTE PTR [eax+0x4c591761],ah
  41a110:	jno    0x41a0e3
  41a112:	das    
  41a113:	icebp  
  41a114:	inc    ebp
  41a115:	sub    ebp,DWORD PTR [esp+edi*1-0x62e6591f]
  41a11c:	or     DWORD PTR [ebx+0x24490d19],0xffffff9c
  41a123:	fs mov ebx,0x4322353
  41a129:	or     al,0x8f
  41a12b:	(bad)  
  41a12c:	xor    DWORD PTR [ebx+0x35c4d8a7],ecx
  41a132:	push   edx
  41a133:	jecxz  0x41a119
  41a135:	bound  esi,QWORD PTR [esi+0x18]
  41a138:	pushf  
  41a139:	mov    ch,0xed
  41a13b:	call   0xea1:0xc269e8c1
  41a142:	inc    BYTE PTR [ebx-0x8]
  41a145:	gs add dl,ch
  41a148:	aam    0xc7
  41a14a:	dec    ebx
  41a14b:	aam    0xd7
  41a14d:	icebp  
  41a14e:	jmp    0x2c3752ad
  41a153:	out    dx,eax
  41a154:	xchg   esi,eax
  41a155:	cwde   
  41a156:	ret    0xc35
  41a159:	sbb    esi,edi
  41a15b:	or     ch,BYTE PTR [ebx-0x63]
  41a15e:	jecxz  0x41a0eb
  41a160:	les    ecx,FWORD PTR [ebx-0x3334aaaa]
  41a166:	in     al,0xd9
  41a168:	cmp    DWORD PTR [eax-0x6ba2075],0x1b66777d
  41a172:	lods   eax,DWORD PTR ds:[esi]
  41a173:	je     0x41a1a0
  41a175:	stos   DWORD PTR es:[edi],eax
  41a176:	adc    dl,BYTE PTR [edx+ebx*8]
  41a179:	in     al,dx
  41a17a:	xchg   ebp,eax
  41a17b:	and    DWORD PTR [ebp+0x3b],eax
  41a17e:	lahf   
  41a17f:	fnsave [ecx-0x2c]
  41a182:	cmp    al,0xd8
  41a184:	jmp    0x41a1d1
  41a186:	push   0x4a160acc
  41a18b:	rol    BYTE PTR [eax],1
  41a18d:	rcr    BYTE PTR [ebx],cl
  41a18f:	in     al,dx
  41a190:	popf   
  41a191:	test   BYTE PTR [eax-0x4a386382],dl
  41a197:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a198:	bound  edi,QWORD PTR [edx]
  41a19a:	inc    esi
  41a19b:	dec    eax
  41a19c:	ret    
  41a19d:	inc    BYTE PTR [edx+eax*4-0x25]
  41a1a1:	imul   ebp,edi,0x21d90d88
  41a1a7:	xchg   esp,eax
  41a1a8:	sub    eax,DWORD PTR [edx+0x22]
  41a1ab:	out    0x2f,al
  41a1ad:	cmp    eax,DWORD PTR [ecx]
  41a1af:	out    dx,al
  41a1b0:	cmc    
  41a1b1:	sub    BYTE PTR [ebx],ah
  41a1b3:	push   edi
  41a1b4:	mov    edx,0xbc30b57e
  41a1b9:	test   BYTE PTR [edx],cl
  41a1bb:	les    edi,FWORD PTR [esi+esi*2-0x3f91957]
  41a1c2:	repz fisub DWORD PTR [edi-0x2a]
  41a1c6:	pusha  
  41a1c7:	jl     0x41a149
  41a1c9:	fld    DWORD PTR ds:0x3cd66e27
  41a1cf:	and    cl,bl
  41a1d1:	pop    es
  41a1d2:	std    
  41a1d3:	mov    ds:0xf3d10cd1,eax
  41a1d8:	dec    ebp
  41a1d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a1da:	dec    ebx
  41a1db:	sar    DWORD PTR [eax-0x6e],1
  41a1de:	jg     0x41a196
  41a1e0:	xor    eax,0x1298b958
  41a1e5:	pop    ss
  41a1e6:	fistp  WORD PTR [edi+0x4bd80314]
  41a1ec:	add    DWORD PTR [edx],ebx
  41a1ee:	dec    eax
  41a1ef:	or     DWORD PTR [ecx+0x631329e8],0x5855dcb7
  41a1f9:	scas   eax,DWORD PTR es:[edi]
  41a1fa:	ret    0x237a
  41a1fd:	out    dx,al
  41a1fe:	enter  0x55f3,0x75
  41a202:	xor    ah,BYTE PTR [eax]
  41a204:	imul   eax,ecx,0xf47ac2c0
  41a20a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a20b:	popf   
  41a20c:	ficom  DWORD PTR [eax+0x4a7ee519]
  41a212:	stos   DWORD PTR es:[edi],eax
  41a213:	mov    dh,0xd9
  41a215:	lods   eax,DWORD PTR ds:[esi]
  41a216:	jmp    0x41a1cd
  41a218:	data16 shl BYTE PTR [edi*8+0x5bc5e9c7],0x1
  41a221:	dec    ecx
  41a222:	or     edi,DWORD PTR [edi-0x421e9670]
  41a228:	mov    ss,edi
  41a22a:	sub    BYTE PTR [ebx+0x37cce161],bh
  41a230:	das    
  41a231:	sbb    ebp,DWORD PTR [edx]
  41a233:	lock clc 
  41a235:	aaa    
  41a236:	dec    esi
  41a237:	out    dx,al
  41a238:	xor    BYTE PTR [esi-0x2e19549d],dl
  41a23e:	mov    eax,0xfcaabee
  41a243:	(bad)  
  41a245:	mov    ah,BYTE PTR [eax]
  41a247:	dec    ebp
  41a248:	cwde   
  41a249:	stc    
  41a24a:	inc    eax
  41a24b:	das    
  41a24c:	add    bl,ch
  41a24e:	arpl   dx,dx
  41a250:	inc    edx
  41a251:	lods   al,BYTE PTR ds:[esi]
  41a252:	push   es
  41a253:	xchg   esp,eax
  41a254:	sbb    DWORD PTR [edx],esi
  41a256:	in     eax,dx
  41a257:	addr16 dec edi
  41a259:	aaa    
  41a25a:	add    dh,dl
  41a25c:	sbb    DWORD PTR [ebp+0x52dd8e8b],0x48
  41a263:	push   ecx
  41a264:	cmp    edx,DWORD PTR [ecx+edx*1-0x2be6ed63]
  41a26b:	rol    ah,cl
  41a26d:	push   0xd
  41a26f:	push   esi
  41a270:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a271:	in     eax,dx
  41a272:	fdivr  st(0),st
  41a274:	ins    BYTE PTR es:[edi],dx
  41a275:	inc    esp
  41a276:	shl    cl,1
  41a278:	mov    dh,0x9f
  41a27a:	and    ebp,DWORD PTR ds:0x472b189a
  41a280:	bound  edx,QWORD PTR ds:0xd1c7a665
  41a286:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a287:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a288:	mov    ebp,DWORD PTR [edx-0x4f541382]
  41a28e:	mov    cl,0x8a
  41a290:	lock test edx,ecx
  41a293:	dec    esi
  41a294:	mov    eax,ds:0xe0fe5fc9
  41a299:	add    ebx,DWORD PTR [ebx-0x1b27b880]
  41a29f:	pop    ebp
  41a2a0:	repnz add BYTE PTR [eax],0x6
  41a2a4:	arpl   WORD PTR [ecx],cx
  41a2a6:	stos   DWORD PTR es:[edi],eax
  41a2a7:	sbb    dl,ch
  41a2a9:	sbb    DWORD PTR [ebx],ebx
  41a2ab:	stos   DWORD PTR es:[edi],eax
  41a2ac:	push   ecx
  41a2ad:	adc    edx,eax
  41a2af:	mov    ecx,0x1b9da657
  41a2b4:	mov    ah,0xf5
  41a2b6:	shl    DWORD PTR [ebp-0x65d2a2b4],1
  41a2bc:	push   edx
  41a2bd:	scas   eax,DWORD PTR es:[edi]
  41a2be:	pop    ss
  41a2bf:	pop    ds
  41a2c0:	pop    edx
  41a2c1:	xor    esp,ebx
  41a2c3:	std    
  41a2c4:	xor    ch,BYTE PTR es:[ebx]
  41a2c7:	dec    esi
  41a2c8:	or     eax,0x1913f24b
  41a2cd:	mov    edx,0x2de85b65
  41a2d2:	or     DWORD PTR [esi-0x2c],esp
  41a2d5:	(bad)  [edx+0x13898241]
  41a2db:	adc    bl,BYTE PTR [edi+0x74]
  41a2de:	test   BYTE PTR [ebp-0x72891d39],dl
  41a2e4:	scas   al,BYTE PTR es:[edi]
  41a2e5:	lods   al,BYTE PTR ds:[esi]
  41a2e6:	xor    DWORD PTR [esi-0x3],esi
  41a2e9:	(bad)  
  41a2ea:	mov    eax,ds:0x8a8a1c7f
  41a2ef:	xor    al,0x46
  41a2f1:	ins    BYTE PTR es:[edi],dx
  41a2f2:	sbb    BYTE PTR [ecx],bl
  41a2f4:	pop    esp
  41a2f5:	stc    
  41a2f6:	jmp    0x41a2cf
  41a2f8:	mov    ebx,0x41e46d75
  41a2fd:	sbb    eax,0xb768302a
  41a302:	fwait
  41a303:	outs   dx,BYTE PTR ds:[esi]
  41a304:	mov    cl,0xa3
  41a306:	inc    esp
  41a307:	cmpps  xmm2,XMMWORD PTR [ebx+0x70],0x12
  41a30c:	sbb    ebp,DWORD PTR [esi]
  41a30e:	add    bx,WORD PTR es:[edi-0x35]
  41a313:	les    eax,FWORD PTR [eax]
  41a315:	dec    ebp
  41a316:	cmp    DWORD PTR [edx],0x5a
  41a319:	loope  0x41a322
  41a31b:	sub    bh,ah
  41a31d:	in     eax,0x64
  41a31f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a320:	or     ch,BYTE PTR [ecx+0x375980c0]
  41a326:	jp     0x41a321
  41a328:	repz push es
  41a32a:	pushf  
  41a32b:	leave  
  41a32c:	aas    
  41a32d:	fdivr  QWORD PTR [edi+0x4f]
  41a330:	mov    gs,WORD PTR [esp+ecx*8+0x2ca24297]
  41a337:	mov    ah,0xaa
  41a339:	pop    ss
  41a33a:	test   al,0x5f
  41a33c:	add    BYTE PTR [edi+0x67],al
  41a33f:	jg     0x41a35a
  41a341:	mov    ds:0x686235d2,eax
  41a346:	test   al,0xd1
  41a348:	cmp    edi,DWORD PTR [esi-0x73]
  41a34b:	mov    esp,0xa749764a
  41a350:	cmp    ch,BYTE PTR [eax-0x77294da]
  41a356:	inc    ebx
  41a357:	(bad)  
  41a358:	inc    esp
  41a359:	cmp    ch,BYTE PTR [ebp-0x79]
  41a35c:	call   0xd7c9:0x2f7855cb
  41a363:	fmul   QWORD PTR [ecx+0x2a]
  41a366:	add    eax,0xaf6aebb6
  41a36b:	cmp    BYTE PTR [esi-0x423bca70],0x29
  41a372:	mov    edi,0xbd2d62fd
  41a377:	mov    ds:0x84796f24,eax
  41a37c:	or     eax,0x23fbd233
  41a381:	cs mov esp,0x581bb37d
  41a387:	std    
  41a388:	or     ebx,DWORD PTR [ecx-0x26effa48]
  41a38e:	neg    DWORD PTR [esi-0x5d]
  41a391:	nop
  41a392:	mov    esp,0x424fb94c
  41a397:	call   0xaa2e7112
  41a39c:	push   eax
  41a39d:	lock nop
  41a39f:	arpl   WORD PTR [ecx+0x34],sp
  41a3a2:	push   ss
  41a3a3:	push   ebx
  41a3a4:	sub    al,0x7c
  41a3a6:	pushf  
  41a3a7:	jae    0x41a3e4
  41a3a9:	sbb    DWORD PTR [esi-0xe0648ea],ebx
  41a3af:	jle    0x41a3b9
  41a3b1:	lods   al,BYTE PTR ds:[esi]
  41a3b2:	mov    WORD PTR ds:0xe04a4192,?
  41a3b8:	dec    edx
  41a3b9:	inc    eax
  41a3ba:	or     ah,bl
  41a3bc:	push   edx
  41a3bd:	mov    es,WORD PTR [ebx+edx*1-0x36]
  41a3c1:	mov    eax,ds:0xf0e37f63
  41a3c6:	loopne 0x41a444
  41a3c8:	sbb    dh,ah
  41a3ca:	out    0x18,al
  41a3cc:	daa    
  41a3cd:	sub    eax,0x701de926
  41a3d2:	test   al,0xd9
  41a3d4:	loop   0x41a38e
  41a3d6:	ret    0x3a79
  41a3d9:	out    0x29,eax
  41a3db:	stc    
  41a3dc:	jl     0x41a3ab
  41a3de:	les    esi,FWORD PTR [ecx+ebx*1+0x75297b7c]
  41a3e5:	dec    edx
  41a3e6:	loop   0x41a3fd
  41a3e8:	idiv   DWORD PTR [ecx]
  41a3ea:	xlat   BYTE PTR es:[ebx]
  41a3ec:	sar    DWORD PTR [ebp*2+0x484eff91],0x54
  41a3f4:	add    dh,BYTE PTR [edx]
  41a3f6:	jnp    0x41a3f7
  41a3f8:	ud1    ebx,ecx
  41a3fb:	or     ebp,DWORD PTR ds:0x57b13082
  41a401:	mov    esp,0x6b74f549
  41a406:	popa   
  41a407:	add    eax,0xe320199
  41a40c:	dec    ebp
  41a40d:	popa   
  41a40e:	in     al,dx
  41a40f:	lea    ebx,[edi+0x2375018f]
  41a415:	imul   ebp,DWORD PTR [ebx],0x88f87212
  41a41b:	fimul  WORD PTR [ebp+edi*2+0x78]
  41a41f:	jbe    0x41a3c5
  41a421:	mov    al,ds:0x988b86dc
  41a426:	cdq    
  41a427:	fld    DWORD PTR [edi]
  41a429:	stos   DWORD PTR es:[edi],eax
  41a42a:	fst    QWORD PTR [edi-0x77af22a]
  41a430:	jg     0x41a414
  41a432:	cdq    
  41a433:	jle    0x41a463
  41a435:	adc    al,0xcf
  41a437:	stc    
  41a438:	pop    esi
  41a439:	push   eax
  41a43a:	mov    bh,0x60
  41a43c:	mov    edi,0x858ed435
  41a441:	sti    
  41a442:	xor    eax,0x4ebf0dc8
  41a447:	jne    0x41a477
  41a449:	dec    ebx
  41a44a:	jmp    0xd84dfafe
  41a44f:	call   0x17cb79f4
  41a454:	clc    
  41a455:	sbb    ah,BYTE PTR [edx-0x1]
  41a458:	pushf  
  41a459:	mov    al,ds:0x4b0b2a49
  41a45e:	sbb    DWORD PTR [eax+0x2e3cca05],edx
  41a464:	mov    cl,cl
  41a466:	mov    eax,0xcafb4e87
  41a46b:	mov    esp,0xff741679
  41a470:	fcomp  QWORD PTR [eax]
  41a472:	outs   dx,BYTE PTR ds:[esi]
  41a473:	retf   
  41a474:	dec    ecx
  41a475:	dec    esi
  41a476:	cwde   
  41a477:	pop    edx
  41a478:	xchg   edi,eax
  41a479:	or     al,0x85
  41a47b:	push   ss
  41a47c:	jge    0x41a49d
  41a47e:	and    ch,cl
  41a480:	xor    dl,BYTE PTR [ecx+0x1169936b]
  41a486:	in     al,dx
  41a487:	and    eax,0xcc364f3c
  41a48c:	jl     0x41a43b
  41a48e:	cli    
  41a48f:	test   DWORD PTR [eax],ebx
  41a491:	pop    ecx
  41a492:	sub    BYTE PTR [ebx],bl
  41a494:	(bad)  
  41a495:	aas    
  41a496:	cmp    al,0x90
  41a498:	adc    edx,esi
  41a49a:	sbb    eax,0x5aa577da
  41a49f:	adc    eax,0xb7cc360f
  41a4a4:	repz xchg ebp,eax
  41a4a6:	jns    0x41a50d
  41a4a8:	ins    DWORD PTR es:[edi],dx
  41a4a9:	dec    ecx
  41a4aa:	repnz mov bl,0x3
  41a4ad:	push   esi
  41a4ae:	cld    
  41a4af:	mul    DWORD PTR [eax]
  41a4b1:	add    dl,BYTE PTR [edi+0x7f]
  41a4b4:	out    dx,al
  41a4b5:	mov    ch,0x7c
  41a4b7:	sub    eax,0xfc7795b1
  41a4bc:	sar    BYTE PTR [edx-0x522dcc57],cl
  41a4c2:	adc    DWORD PTR [esi-0x2b],ebp
  41a4c5:	pop    es
  41a4c6:	call   0x12ee:0xbc7f731f
  41a4cd:	pusha  
  41a4ce:	lds    eax,FWORD PTR [ebx]
  41a4d0:	inc    ecx
  41a4d1:	dec    ebp
  41a4d2:	mov    cl,0xc7
  41a4d4:	test   eax,0xeeea8c3b
  41a4d9:	add    eax,0xd2ba1d6b
  41a4de:	mov    eax,0x9f4ba11f
  41a4e3:	xchg   ebx,eax
  41a4e4:	cld    
  41a4e5:	xchg   esi,eax
  41a4e6:	adc    DWORD PTR [eax],ebx
  41a4e8:	cs push 0x68765a9b
  41a4ee:	in     al,0xae
  41a4f0:	stos   BYTE PTR es:[edi],al
  41a4f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a4f2:	rol    DWORD PTR [ebx],cl
  41a4f4:	mov    esi,0x9fbde23d
  41a4f9:	nop
  41a4fa:	mov    ecx,0x4fb3e3f5
  41a4ff:	jb     0x41a534
  41a501:	mov    esp,0xecd4dab0
  41a506:	or     al,0x26
  41a508:	mov    cl,0x1f
  41a50a:	or     ecx,eax
  41a50c:	dec    edx
  41a50d:	cmp    al,0x6e
  41a50f:	out    dx,al
  41a510:	out    dx,al
  41a511:	pop    eax
  41a512:	ficom  WORD PTR [edi+ebp*8-0x5ae0428]
  41a519:	inc    eax
  41a51a:	das    
  41a51b:	es push ss
  41a51d:	sbb    edx,eax
  41a51f:	outs   dx,BYTE PTR ds:[esi]
  41a520:	mov    eax,DWORD PTR [ebp-0x3b]
  41a523:	fs (bad) 
  41a525:	jns    0x41a520
  41a527:	cdq    
  41a528:	push   0xffffffc1
  41a52a:	or     BYTE PTR [ebp+0x17],cl
  41a52d:	aas    
  41a52e:	pop    ebp
  41a52f:	pop    ecx
  41a530:	jp     0x41a4f2
  41a532:	pusha  
  41a533:	fdivr  QWORD PTR [edx+edx*2+0x7f]
  41a537:	fcom   DWORD PTR [ecx+esi*2]
  41a53a:	shr    ah,1
  41a53c:	sbb    al,0x90
  41a53e:	enter  0xccc8,0x67
  41a542:	imul   eax,DWORD PTR ds:0x83e9532a,0x66e86557
  41a54c:	dec    ecx
  41a54d:	scas   al,BYTE PTR es:[edi]
  41a54e:	push   edx
  41a54f:	in     eax,dx
  41a550:	mov    ss,edi
  41a552:	adc    BYTE PTR [ebx+0x4a],bh
  41a555:	sub    esi,eax
  41a557:	scas   eax,DWORD PTR es:[edi]
  41a558:	(bad)  
  41a559:	out    dx,al
  41a55a:	mov    edx,ebp
  41a55c:	pop    ds
  41a55d:	adc    BYTE PTR [edi],0x5c
  41a560:	scas   eax,DWORD PTR es:[edi]
  41a561:	mov    ebx,cs
  41a563:	(bad)  
  41a564:	sahf   
  41a565:	shl    esp,1
  41a567:	mov    esi,0x6a083db8
  41a56c:	sbb    BYTE PTR [esi-0x2a77e0c1],bh
  41a572:	push   edx
  41a573:	inc    edi
  41a574:	inc    ebx
  41a575:	xchg   esi,eax
  41a576:	mov    ah,0xd7
  41a578:	and    esi,DWORD PTR [ecx]
  41a57a:	mov    edx,0x3a83b680
  41a57f:	pop    ds
  41a580:	inc    esi
  41a581:	sub    BYTE PTR [ebp-0x21],0xdb
  41a585:	jnp    0x41a5d8
  41a587:	push   ecx
  41a588:	dec    ebx
  41a589:	mov    eax,0x284e234
  41a58e:	dec    ebx
  41a58f:	mov    WORD PTR [ebp-0x78],?
  41a592:	mov    al,ds:0x13eee21a
  41a597:	pop    ebp
  41a598:	mov    ds:0x1ab08ff8,al
  41a59d:	push   ss
  41a59e:	int    0x3f
  41a5a0:	cwde   
  41a5a1:	call   0xeef2:0xb5061526
  41a5a8:	clc    
  41a5a9:	test   BYTE PTR [ebx],dh
  41a5ab:	lods   al,BYTE PTR ds:[esi]
  41a5ac:	mov    esp,0x3813d827
  41a5b1:	dec    eax
  41a5b2:	(bad)  
  41a5b3:	(bad)  
  41a5b4:	pop    ds
  41a5b5:	add    DWORD PTR [ebp-0x29],ebp
  41a5b8:	loopne 0x41a5d8
  41a5ba:	add    BYTE PTR [eax+0xac31952],0x84
  41a5c1:	push   0x897f4609
  41a5c6:	aam    0xf1
  41a5c8:	out    dx,eax
  41a5c9:	jecxz  0x41a54f
  41a5cb:	test   al,0x2d
  41a5cd:	test   edi,0xf1e8b993
  41a5d3:	cmp    BYTE PTR [edx],bl
  41a5d5:	jbe    0x41a593
  41a5d7:	outs   dx,DWORD PTR ds:[esi]
  41a5d8:	cmp    bh,BYTE PTR [edx]
  41a5da:	mov    edx,0x546179a4
  41a5df:	sub    BYTE PTR [eax-0x3c],0xe9
  41a5e3:	cmp    al,0xd8
  41a5e5:	mov    al,0xc5
  41a5e7:	lods   eax,DWORD PTR ds:[esi]
  41a5e8:	ja     0x41a5c1
  41a5ea:	daa    
  41a5eb:	push   0xffffffdd
  41a5ed:	adc    al,BYTE PTR [ecx]
  41a5ef:	inc    esp
  41a5f0:	ss jne 0x41a5f2
  41a5f3:	into   
  41a5f4:	fstp   QWORD PTR es:[ebx]
  41a5f7:	lods   al,BYTE PTR ds:[esi]
  41a5f8:	outs   dx,BYTE PTR ds:[esi]
  41a5f9:	lods   eax,DWORD PTR ds:[esi]
  41a5fa:	pop    ecx
  41a5fb:	adc    al,0x64
  41a5fd:	push   edx
  41a5fe:	pop    edx
  41a5ff:	or     eax,0x1b07102a
  41a604:	fiadd  DWORD PTR [ecx-0x6b]
  41a607:	jle    0x41a61e
  41a609:	adc    eax,0xa2b49dd4
  41a60e:	xchg   edx,eax
  41a60f:	call   0xedaa2510
  41a614:	pusha  
  41a615:	sbb    al,BYTE PTR [esp+ebp*1-0x493db9ad]
  41a61c:	fbstp  TBYTE PTR [edx]
  41a61e:	push   cs
  41a61f:	sub    al,0x6d
  41a621:	cmp    al,0xa
  41a623:	push   ss
  41a624:	mov    ds:0xe326caca,al
  41a629:	adc    bl,BYTE PTR [edx+0x14]
  41a62c:	test   DWORD PTR [edi],ebx
  41a62e:	mov    edi,0x5cf08b31
  41a633:	ret    
  41a634:	mov    WORD PTR [edx+0x49],gs
  41a637:	cmp    edi,edx
  41a639:	rcl    DWORD PTR ds:0x6ccbb152,cl
  41a63f:	inc    esp
  41a640:	xor    dl,BYTE PTR [edx+ebp*8+0x1e4b26d4]
  41a647:	adc    eax,DWORD PTR [edi-0x7e5d4d84]
  41a64d:	mov    bl,0xef
  41a64f:	fwait
  41a650:	jmp    0x41a670
  41a652:	xor    DWORD PTR [ebx+0x1],eax
  41a655:	in     al,0x52
  41a657:	pop    ebx
  41a658:	mov    ecx,0xdfc74009
  41a65d:	pop    ebp
  41a65e:	aam    0x5
  41a660:	jmp    0x41a66b
  41a662:	fiadd  WORD PTR [edi+ecx*2+0x0]
  41a666:	cli    
  41a667:	or     dh,BYTE PTR [esi-0x57]
  41a66a:	(bad)
  41a66d:	dec    edi
  41a66e:	mov    bh,cl
  41a670:	aaa    
  41a671:	jbe    0x41a69d
  41a673:	cli    
  41a674:	out    0x8b,eax
  41a676:	cmc    
  41a677:	loope  0x41a6c3
  41a679:	push   0xffffffdd
  41a67b:	dec    esp
  41a67c:	mov    dh,0x26
  41a67e:	icebp  
  41a67f:	(bad)  
  41a680:	jg     0x41a639
  41a682:	int3   
  41a683:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a684:	mov    ds:0x6a10637a,al
  41a689:	icebp  
  41a68a:	dec    ecx
  41a68b:	push   edi
  41a68c:	xchg   ebx,eax
  41a68d:	out    0xda,al
  41a68f:	inc    edi
  41a690:	mov    dh,0xb5
  41a692:	inc    ecx
  41a693:	lock arpl WORD PTR [ecx+0xfe6b1c7],bx
  41a69a:	jno    0x41a654
  41a69c:	xor    bl,BYTE PTR [ecx+esi*4-0x606f1fb6]
  41a6a3:	inc    edx
  41a6a4:	scas   al,BYTE PTR es:[edi]
  41a6a5:	test   BYTE PTR [edx+0x6a9e6270],dl
  41a6ab:	(bad)  
  41a6ac:	jbe    0x41a68a
  41a6ae:	pusha  
  41a6af:	call   0x530:0x26ce7d02
  41a6b6:	or     ebx,ecx
  41a6b8:	sbb    bl,al
  41a6ba:	enter  0x5021,0xc1
  41a6be:	repnz xchg ecx,eax
  41a6c0:	pusha  
  41a6c1:	ja     0x41a647
  41a6c3:	pop    ecx
  41a6c4:	or     ah,BYTE PTR [si-0x11]
  41a6c8:	sub    eax,0x5f927ddf
  41a6cd:	xchg   esi,eax
  41a6ce:	frstor [edx+0x53]
  41a6d1:	jnp    0x41a6ee
  41a6d3:	or     al,0xe9
  41a6d5:	jb     0x41a678
  41a6d7:	push   eax
  41a6d8:	mov    ebx,0xb2e35078
  41a6dd:	fstp   DWORD PTR [ebp-0x52]
  41a6e0:	jae    0x41a74b
  41a6e2:	cmp    ebp,ecx
  41a6e4:	mov    ecx,0x354ae18
  41a6e9:	xor    ebp,esp
  41a6eb:	adc    eax,0x5daa417
  41a6f0:	xor    cl,BYTE PTR [edx+0x4e010b1]
  41a6f6:	xchg   esp,eax
  41a6f7:	ret    
  41a6f8:	lock jmp 0x27e0:0xbe991b4d
  41a700:	jmp    0x8347dcc3
  41a705:	in     eax,0x38
  41a707:	(bad)  
  41a708:	push   ebp
  41a709:	das    
  41a70a:	into   
  41a70b:	adc    ah,BYTE PTR [esi-0x4f]
  41a70e:	ret    0x8e75
  41a711:	pushf  
  41a712:	pusha  
  41a713:	sbb    bh,BYTE PTR [ecx]
  41a715:	imul   ecx,DWORD PTR [esi],0x41
  41a718:	pop    esp
  41a719:	stos   BYTE PTR es:[edi],al
  41a71a:	gs aad 0x93
  41a71d:	inc    ecx
  41a71e:	add    al,dl
  41a720:	lods   al,BYTE PTR ds:[esi]
  41a721:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a722:	sub    al,0xc6
  41a724:	int3   
  41a725:	fstp   DWORD PTR [esi+0x38]
  41a728:	jl     0x41a761
  41a72a:	and    eax,0x3fb237dc
  41a72f:	int    0x2c
  41a731:	mov    al,0x5a
  41a733:	jmp    0xbb3088b1
  41a738:	fisttp DWORD PTR [edx-0xa]
  41a73b:	aas    
  41a73c:	shr    ecx,cl
  41a73e:	xchg   edx,eax
  41a73f:	sti    
  41a740:	cmp    BYTE PTR [eax],dh
  41a742:	push   ebx
  41a743:	loope  0x41a77b
  41a745:	xchg   BYTE PTR [ebx-0x56],dl
  41a748:	xchg   ecx,eax
  41a749:	fistp  DWORD PTR [eax]
  41a74b:	(bad)  
  41a74c:	outs   dx,BYTE PTR ds:[esi]
  41a74d:	push   ecx
  41a74e:	push   ss
  41a74f:	imul   edx,DWORD PTR [ebp+0x245aa1af],0x908a7540
  41a759:	mov    ds:0x4572d296,eax
  41a75e:	jge    0x41a737
  41a760:	ret    0xe69d
  41a763:	out    0xb7,eax
  41a765:	lea    esi,[ecx]
  41a767:	jbe    0x41a7cd
  41a769:	repnz adc ebp,DWORD PTR [ebp-0x5c]
  41a76d:	mov    ch,0x91
  41a76f:	popa   
  41a770:	arpl   bx,si
  41a772:	aam    0x96
  41a774:	xchg   esi,eax
  41a775:	bound  ecx,QWORD PTR [edi+ebp*1+0x37]
  41a779:	jge    0x41a796
  41a77b:	xor    ch,ch
  41a77d:	pop    edi
  41a77e:	test   al,0xe0
  41a780:	mov    ah,0x88
  41a782:	neg    BYTE PTR [eax+0x5f984fac]
  41a788:	retf   0x1a01
  41a78b:	dec    ebp
  41a78c:	fdivr  QWORD PTR [edi+0x52]
  41a78f:	jp     0x41a73a
  41a791:	loope  0x41a808
  41a793:	mov    esi,0x5dfdde0b
  41a798:	lahf   
  41a799:	ja     0x41a784
  41a79b:	pop    edx
  41a79c:	imul   edi,DWORD PTR [ebp-0x6c2bc2d2],0xf2cf3a9a
  41a7a6:	pop    esi
  41a7a7:	imul   edx,DWORD PTR [eax-0x5a],0xffffffcf
  41a7ab:	inc    ecx
  41a7ac:	or     BYTE PTR [edi+eax*2+0x2fc7b424],ah
  41a7b3:	pushf  
  41a7b4:	inc    BYTE PTR [ebx]
  41a7b6:	das    
  41a7b7:	setns  BYTE PTR [ebp+0x7140fe58]
  41a7be:	push   ecx
  41a7bf:	jge    0x41a74f
  41a7c1:	mov    al,ds:0x8248971c
  41a7c6:	fcomi  st,st(2)
  41a7c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7c9:	fmul   QWORD PTR [edi-0x68]
  41a7cc:	jne    0x41a7b4
  41a7ce:	mov    dh,0x6d
  41a7d0:	jnp    0x41a7e0
  41a7d2:	gs push cs
  41a7d4:	xor    eax,0x5d342fda
  41a7d9:	push   0x3b
  41a7db:	dec    eax
  41a7dc:	es cmp eax,0x8148e072
  41a7e2:	and    BYTE PTR [ebp+0x52],bh
  41a7e5:	mov    dl,0xa
  41a7e7:	scas   al,BYTE PTR es:[edi]
  41a7e8:	lahf   
  41a7e9:	out    dx,al
  41a7ea:	mov    bl,0xa6
  41a7ec:	mov    cs,WORD PTR [eax]
  41a7ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7ef:	pop    ss
  41a7f0:	adc    esp,DWORD PTR [edi]
  41a7f2:	mov    ch,0x6b
  41a7f4:	jb     0x41a866
  41a7f6:	stos   BYTE PTR es:[edi],al
  41a7f7:	pop    eax
  41a7f8:	pushf  
  41a7f9:	xor    eax,0xe448ae80
  41a7fe:	jne    0x41a848
  41a800:	sub    edi,DWORD PTR [ebx+0x4b]
  41a803:	and    BYTE PTR [eax+edi*4+0x21],ah
  41a807:	test   al,0xd0
  41a809:	(bad)  
  41a80b:	push   cs
  41a80c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a80d:	push   ecx
  41a80e:	imul   esp,edx,0xffffffcf
  41a811:	je     0x41a841
  41a813:	js     0x41a889
  41a815:	adc    BYTE PTR [ebp-0xa],0x50
  41a819:	gs scas al,BYTE PTR es:[edi]
  41a81b:	xor    BYTE PTR [edi+edx*2-0x219527f6],cl
  41a822:	fnstcw WORD PTR [ecx-0x68]
  41a825:	jg     0x41a85f
  41a827:	push   0x53
  41a829:	das    
  41a82a:	ja     0x41a826
  41a82c:	sub    dh,BYTE PTR [eax-0x3d7308ae]
  41a832:	clc    
  41a833:	fucom  st(6)
  41a835:	jmp    0xa5e362dc
  41a83a:	xchg   esi,eax
  41a83b:	lods   al,BYTE PTR ds:[esi]
  41a83c:	add    BYTE PTR [esi+ecx*4],bh
  41a83f:	sub    esp,ecx
  41a841:	sbb    esi,DWORD PTR [esi]
  41a843:	ret    0x638e
  41a846:	fidiv  DWORD PTR [ebx+0x72]
  41a849:	push   ebx
  41a84a:	xor    eax,0xa5201f55
  41a84f:	outs   dx,BYTE PTR ds:[esi]
  41a850:	fwait
  41a851:	pushf  
  41a852:	mov    al,0x52
  41a854:	mov    eax,0x2af5a86c
  41a859:	mov    al,ds:0xee82a099
  41a85e:	out    0xc6,al
  41a860:	jno    0x41a826
  41a862:	sbb    al,0xa7
  41a864:	les    edi,FWORD PTR [edi-0x13]
  41a867:	jge    0x41a86d
  41a869:	int3   
  41a86a:	cdq    
  41a86b:	rcr    BYTE PTR [esi],1
  41a86d:	or     bh,ah
  41a86f:	repz ret 
  41a871:	into   
  41a872:	pop    ecx
  41a873:	aas    
  41a874:	dec    edi
  41a875:	inc    edx
  41a876:	in     al,dx
  41a877:	pop    ebx
  41a878:	(bad)  
  41a879:	out    0x4e,eax
  41a87b:	xchg   esi,esi
  41a87d:	test   DWORD PTR [ebp+0x5e],ebx
  41a880:	popf   
  41a881:	popa   
  41a882:	fldcw  WORD PTR [edi]
  41a884:	(bad)  
  41a885:	repz adc bh,bl
  41a888:	sbb    BYTE PTR [ecx],bh
  41a88a:	xor    al,dl
  41a88c:	arpl   WORD PTR [ebx],cx
  41a88e:	int3   
  41a88f:	hlt    
  41a890:	add    ah,0x17
  41a893:	retfw  0x3bfa
  41a897:	sbb    BYTE PTR [esi-0x3985d639],0x4f
  41a89e:	daa    
  41a89f:	not    edi
  41a8a1:	ret    
  41a8a2:	jb     0x41a8b7
  41a8a4:	mov    bh,0x18
  41a8a6:	mov    dl,0x8
  41a8a8:	or     DWORD PTR [edx-0x38035ab],ebp
  41a8ae:	outs   dx,BYTE PTR ds:[esi]
  41a8af:	pop    ds
  41a8b0:	fisub  DWORD PTR [edx-0x2]
  41a8b3:	jne    0x41a852
  41a8b5:	rcr    DWORD PTR [esi+0x3a7ee175],1
  41a8bb:	fist   DWORD PTR [ebx+0x37a219cf]
  41a8c1:	lods   eax,DWORD PTR ds:[esi]
  41a8c2:	bnd je 0x41a8c9
  41a8c5:	jp     0x41a848
  41a8c7:	scas   eax,DWORD PTR es:[edi]
  41a8c8:	rol    DWORD PTR [edi-0x6c],cl
  41a8cb:	out    0xc3,eax
  41a8cd:	or     esp,ebp
  41a8cf:	gs sbb edx,0x26edbd11
  41a8d6:	les    esp,FWORD PTR [ecx-0xc53d707]
  41a8dc:	das    
  41a8dd:	fisttp WORD PTR [esp+ebx*1]
  41a8e0:	cmp    DWORD PTR [ebx],edx
  41a8e2:	mov    dh,0x13
  41a8e4:	imul   BYTE PTR ds:0x11dfc4fc
  41a8ea:	push   eax
  41a8eb:	cdq    
  41a8ec:	xor    DWORD PTR [edi+0x142abefd],edi
  41a8f2:	jmp    0xb448:0x84eb7dde
  41a8f9:	and    al,0x71
  41a8fb:	js     0x41a890
  41a8fd:	mov    dh,0x99
  41a8ff:	loope  0x41a8b7
  41a901:	std    
  41a902:	sub    al,0x30
  41a904:	fmulp  st(3),st
  41a906:	or     al,0x11
  41a908:	mov    edi,0x65cb85a6
  41a90d:	fnsave [eax+0x59]
  41a910:	push   eax
  41a911:	mov    ah,0x9b
  41a913:	jae    0x41a8a6
  41a915:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a916:	dec    eax
  41a917:	fiadd  DWORD PTR [ebx+0x3b14ce5f]
  41a91d:	repz sub ah,BYTE PTR [eax+0x1a]
  41a921:	iret   
  41a922:	enter  0xd7,0x2
  41a926:	imul   ebx,DWORD PTR [edx+0x3a],0xffffffd3
  41a92a:	ds pusha 
  41a92c:	int    0x21
  41a92e:	and    al,0x12
  41a930:	or     BYTE PTR [ecx-0x19],ah
  41a933:	pushf  
  41a934:	or     eax,0xf79c1839
  41a939:	icebp  
  41a93a:	mov    WORD PTR [esi-0x5eb4798b],fs
  41a940:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a941:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a942:	aas    
  41a943:	jge    0x41a9b3
  41a945:	mov    WORD PTR ds:0x4097b4fe,ss
  41a94b:	mov    dh,0x7e
  41a94d:	test   DWORD PTR [eax],eax
  41a94f:	adc    al,0x4a
  41a951:	jl     0x41a958
  41a953:	loope  0x41a8d5
  41a955:	ror    DWORD PTR [ecx+0x299aa23b],0x42
  41a95c:	adc    bh,BYTE PTR [esi-0x10]
  41a95f:	outs   dx,BYTE PTR ds:[esi]
  41a960:	in     eax,0xe3
  41a962:	gs in  eax,dx
  41a964:	push   ecx
  41a965:	mov    bh,bl
  41a967:	psrlq  mm4,QWORD PTR [esi]
  41a96a:	ret    0x6e97
  41a96d:	aas    
  41a96e:	shr    DWORD PTR [esi-0x74d2b8bf],cl
  41a974:	stc    
  41a975:	repnz mov ecx,esi
  41a978:	adc    BYTE PTR [edx+0x50],0x53
  41a97c:	adc    eax,DWORD PTR [ecx-0x7f]
  41a97f:	jns    0x41a962
  41a981:	jl     0x41a9e0
  41a983:	fmul   DWORD PTR [eax-0x4]
  41a986:	jae    0x41a9d0
  41a988:	lock mov ecx,0x5e921ca4
  41a98e:	jecxz  0x41a911
  41a990:	icebp  
  41a991:	or     al,0x85
  41a993:	int    0xe
  41a995:	(bad)  
  41a997:	or     al,0x97
  41a999:	cmp    eax,0x332cd4f4
  41a99e:	ds dec ebp
  41a9a0:	adc    eax,0xfe42faee
  41a9a5:	out    0x27,eax
  41a9a7:	repnz pop ebx
  41a9a9:	dec    eax
  41a9aa:	mov    ebp,0xcf4bea5b
  41a9af:	in     eax,dx
  41a9b0:	sub    al,0x87
  41a9b2:	push   esp
  41a9b3:	pop    es
  41a9b4:	inc    ecx
  41a9b5:	(bad)  
  41a9b6:	mov    eax,ds:0x5ed250fb
  41a9bb:	fld    QWORD PTR [edx+edx*2-0x411889ad]
  41a9c2:	xlat   BYTE PTR ds:[ebx]
  41a9c3:	xchg   ebp,eax
  41a9c4:	adc    esi,esp
  41a9c6:	sub    eax,0x6fefb2a7
  41a9cb:	mov    al,0xd3
  41a9cd:	push   ebp
  41a9ce:	sahf   
  41a9cf:	test   al,0x3e
  41a9d1:	(bad)  
  41a9d3:	mov    dh,0x61
  41a9d5:	mov    DWORD PTR [ebx],edx
  41a9d7:	cli    
  41a9d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9d9:	sbb    eax,0x765841cd
  41a9de:	push   es
  41a9df:	mov    cl,0xdf
  41a9e1:	das    
  41a9e2:	mov    al,ds:0x8261485c
  41a9e7:	jnp    0x41aa47
  41a9e9:	inc    ebp
  41a9ea:	dec    DWORD PTR [esi+0x31bad705]
  41a9f0:	scas   eax,DWORD PTR es:[edi]
  41a9f1:	cli    
  41a9f2:	sbb    ebx,eax
  41a9f4:	sub    DWORD PTR [ebp-0x7b],edi
  41a9f7:	fadd   st(1),st
  41a9f9:	and    edi,DWORD PTR [edi+0x4ab8ac67]
  41a9ff:	add    ebx,edx
  41aa01:	lea    eax,[ecx+esi*1+0x51]
  41aa05:	mov    ch,0x28
  41aa07:	jge    0x41a99c
  41aa09:	mov    esp,0x8563b747
  41aa0e:	mov    bh,0x21
  41aa10:	sbb    BYTE PTR [edx],dh
  41aa12:	(bad)  
  41aa13:	sbb    ebp,DWORD PTR [eax+eax*8+0x1276c6f]
  41aa1a:	or     al,0x9c
  41aa1c:	inc    edi
  41aa1d:	mov    ah,0xb0
  41aa1f:	dec    ebp
  41aa20:	pop    eax
  41aa21:	xor    al,0x87
  41aa23:	xchg   ecx,eax
  41aa24:	lea    ecx,[esi]
  41aa26:	in     al,0xab
  41aa28:	lods   al,BYTE PTR ds:[esi]
  41aa29:	sahf   
  41aa2a:	dec    ebp
  41aa2b:	out    dx,eax
  41aa2c:	rol    BYTE PTR [ecx-0x35],cl
  41aa2f:	xchg   DWORD PTR [esp+edx*8-0x71],ebx
  41aa33:	(bad)  
  41aa34:	in     eax,0x3e
  41aa36:	data16 mov ah,BYTE PTR [ecx]
  41aa39:	sub    DWORD PTR [ebx-0x6d7649be],edi
  41aa3f:	test   BYTE PTR [ecx+0x74],0xbc
  41aa43:	out    0xdd,eax
  41aa45:	mov    ds:0x96939a31,al
  41aa4a:	into   
  41aa4b:	jo     0x41aac6
  41aa4d:	popf   
  41aa4e:	adc    DWORD PTR [edi-0x11],ebx
  41aa51:	inc    edx
  41aa53:	shr    DWORD PTR [eax-0x40],1
  41aa56:	retf   0x2d
  41aa59:	add    BYTE PTR [ebx+eiz*8],ch
  41aa5c:	mov    cl,0x3b
  41aa5e:	mov    al,0xc0
  41aa60:	(bad)  
  41aa61:	test   eax,0x1e54a033
  41aa66:	test   DWORD PTR [ecx],ebx
  41aa68:	sub    al,0x43
  41aa6a:	stc    
  41aa6b:	inc    BYTE PTR [ebp-0x69]
  41aa6e:	mov    dh,0x88
  41aa70:	fisttp WORD PTR [edi-0x37e659d6]
  41aa76:	push   edi
  41aa77:	mov    ds:0x7bb602c,eax
  41aa7c:	sub    esp,esp
  41aa7e:	xchg   DWORD PTR [ebp*1+0x1f6e86f5],edi
  41aa85:	sbb    al,0x9a
  41aa87:	add    ch,BYTE PTR [ebx+0x53526c51]
  41aa8d:	arpl   ax,si
  41aa8f:	inc    eax
  41aa90:	shl    ebp,cl
  41aa92:	mov    bh,0x98
  41aa94:	push   edx
  41aa95:	mov    eax,0x54641db5
  41aa9a:	ins    DWORD PTR es:[edi],dx
  41aa9b:	pop    eax
  41aa9c:	(bad)  
  41aa9e:	mov    eax,ecx
  41aaa0:	dec    esp
  41aaa1:	jb     0x41aae5
  41aaa3:	int    0xb4
  41aaa5:	xchg   edx,eax
  41aaa6:	imul   ecx,ebx,0x28e66f3e
  41aaac:	jmp    0xb399:0xdc3c17c0
  41aab3:	out    0xb0,eax
  41aab5:	jb     0x41ab0c
  41aab7:	call   0x5c6b4208
  41aabc:	sbb    esp,ebp
  41aabe:	lock (bad) 
  41aac1:	in     al,0x67
  41aac3:	into   
  41aac4:	(bad)  
  41aac5:	jle    0x41ab2b
  41aac7:	pop    edi
  41aac8:	and    al,0xe3
  41aaca:	push   0x91bede4e
  41aacf:	cli    
  41aad0:	ror    DWORD PTR [esi-0x6],cl
  41aad3:	sbb    eax,0xd8e74732
  41aad8:	sub    ch,BYTE PTR [edi+0x36ba82ec]
  41aade:	pop    edx
  41aadf:	rcl    DWORD PTR [edi-0x424a14e1],0x5f
  41aae6:	jbe    0x41aaa4
  41aae8:	or     dh,BYTE PTR [ecx]
  41aaea:	pop    edx
  41aaeb:	push   esi
  41aaec:	inc    esi
  41aaed:	mov    cl,BYTE PTR [edi-0x2dd133b3]
  41aaf3:	ins    BYTE PTR es:[edi],dx
  41aaf4:	sub    al,0xad
  41aaf6:	pop    esi
  41aaf7:	imul   ebx,DWORD PTR [ecx],0x37b11282
  41aafd:	jmp    0x41ab05
  41aaff:	mov    esp,0xcdf78fd4
  41ab04:	mov    esp,0xbebb21fe
  41ab09:	pop    es
  41ab0a:	mov    al,0x5e
  41ab0c:	aad    0x37
  41ab0e:	add    eax,0xf0d81e20
  41ab13:	xor    edi,DWORD PTR [ecx-0x54c9d63f]
  41ab19:	and    DWORD PTR [ecx],0x6c
  41ab1c:	jle    0x41ab4d
  41ab1e:	test   DWORD PTR [eax],edi
  41ab20:	nop
  41ab21:	out    0xf4,al
  41ab23:	jp     0x41ab57
  41ab25:	mov    bl,0xcc
  41ab27:	pop    esi
  41ab28:	ja     0x41aae0
  41ab2a:	ins    BYTE PTR es:[edi],dx
  41ab2b:	inc    edx
  41ab2c:	mov    ds:0xf8a0416b,eax
  41ab31:	or     DWORD PTR [esi-0x5a],0xfffffff7
  41ab35:	jnp    0x41ab8c
  41ab37:	mov    eax,ds:0xd255c783
  41ab3c:	addr16 rcl dl,0x1d
  41ab40:	xchg   ebp,eax
  41ab41:	sar    BYTE PTR [ecx*1+0x6ceef59e],0x4c
  41ab49:	neg    BYTE PTR [ebx-0x2a]
  41ab4c:	js     0x41aadc
  41ab4e:	add    bl,al
  41ab50:	dec    ecx
  41ab51:	mov    ch,0xb3
  41ab53:	sub    al,0x1a
  41ab55:	and    bh,ch
  41ab57:	imul   esp,edi,0xe455b204
  41ab5d:	(bad)  
  41ab5e:	aad    0x81
  41ab60:	cs hlt 
  41ab62:	xchg   edi,eax
  41ab63:	fcomp  DWORD PTR [esi+0x1d7fd26d]
  41ab69:	mov    bh,0x42
  41ab6b:	clc    
  41ab6c:	out    dx,eax
  41ab6d:	mov    ds:0x7a9a8fa0,al
  41ab72:	pop    ss
  41ab73:	loopne 0x41ab83
  41ab75:	and    eax,0x75714179
  41ab7a:	ins    BYTE PTR es:[edi],dx
  41ab7b:	out    0x88,eax
  41ab7d:	mov    ebx,0x2ce0d850
  41ab82:	lods   eax,DWORD PTR ds:[esi]
  41ab83:	push   cs
  41ab84:	dec    ebx
  41ab85:	cmc    
  41ab86:	lods   eax,DWORD PTR ds:[esi]
  41ab87:	adc    cl,BYTE PTR [eax]
  41ab89:	adc    DWORD PTR [ebx-0x6d],ecx
  41ab8c:	or     cl,al
  41ab8e:	and    DWORD PTR [edx],esi
  41ab90:	mov    cl,dh
  41ab92:	iret   
  41ab93:	(bad)  
  41ab94:	es cld 
  41ab96:	fidivr DWORD PTR [edx+0x48]
  41ab99:	or     ecx,DWORD PTR [ecx]
  41ab9b:	pop    ss
  41ab9c:	pop    ecx
  41ab9d:	sahf   
  41ab9e:	jo     0x41abd9
  41aba0:	jne    0x41ab5f
  41aba2:	js     0x41ab9f
  41aba4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aba5:	lock mov WORD PTR [edx+ecx*2],cs
  41aba9:	retf   
  41abaa:	daa    
  41abab:	out    dx,eax
  41abac:	jo     0x41abce
  41abae:	pop    ecx
  41abaf:	ins    DWORD PTR es:[edi],dx
  41abb0:	cmp    DWORD PTR [edi],edx
  41abb2:	xchg   esi,eax
  41abb3:	sbb    ebp,DWORD PTR [edi+0x4e]
  41abb6:	(bad)  
  41abb8:	jno    0x41ac21
  41abba:	mov    bl,0x30
  41abbc:	xchg   ecx,eax
  41abbd:	lock stc 
  41abbf:	leave  
  41abc0:	(bad)  
  41abc1:	and    al,0xe4
  41abc3:	cmp    al,0x85
  41abc5:	es cli 
  41abc7:	in     al,dx
  41abc8:	mov    ds:0x5f8d6426,eax
  41abcd:	push   0xffffffb2
  41abcf:	xchg   edx,eax
  41abd0:	cmp    bl,BYTE PTR [esi]
  41abd2:	jns    0x41ac27
  41abd4:	loopne 0x41ab62
  41abd6:	retf   
  41abd7:	(bad)  
  41abd8:	adc    DWORD PTR [ebp+0x1b],esi
  41abdb:	adc    eax,0x6fdca98e
  41abe0:	pop    eax
  41abe1:	call   0x44c59b3a
  41abe6:	mov    dh,0xa5
  41abe8:	fisub  WORD PTR [edx]
  41abea:	sbb    DWORD PTR [edx],edx
  41abec:	adc    al,0x90
  41abee:	vmwrite ebp,edi
  41abf1:	mov    edx,0xff8510da
  41abf6:	aam    0xcd
  41abf8:	lea    eax,[ebx+0x1e]
  41abfb:	dec    ecx
  41abfc:	outs   dx,BYTE PTR ds:[esi]
  41abfd:	aaa    
  41abfe:	mov    bl,0x89
  41ac00:	pop    ecx
  41ac01:	cmp    BYTE PTR [esi+eiz*1-0x6951ea35],bh
  41ac08:	inc    edx
  41ac09:	add    al,0x96
  41ac0b:	push   ss
  41ac0c:	adc    ebx,DWORD PTR [ebp-0x3ce9aa03]
  41ac12:	push   ebx
  41ac13:	call   0x5e92:0x7390f990
  41ac1a:	(bad)  [ecx+0x6c99b7be]
  41ac20:	jl     0x41abf0
  41ac22:	pop    ecx
  41ac23:	mov    WORD PTR [edi],es
  41ac25:	sub    ch,cl
  41ac27:	iret   
  41ac28:	leave  
  41ac29:	popa   
  41ac2a:	xchg   ebp,eax
  41ac2b:	mov    dl,0x53
  41ac2d:	adc    al,0x1f
  41ac2f:	fistp  DWORD PTR [edx-0x62]
  41ac32:	dec    ebp
  41ac33:	dec    esp
  41ac34:	jno    0x41acae
  41ac36:	gs jno 0x41ac32
  41ac39:	test   DWORD PTR ds:0x1231ed2e,0x862f0108
  41ac43:	mov    cl,0x95
  41ac45:	out    0xf4,al
  41ac47:	jno    0x41ac09
  41ac49:	mov    bh,0x39
  41ac4b:	sbb    al,0x79
  41ac4d:	inc    ebp
  41ac4e:	jno    0x41acae
  41ac50:	std    
  41ac51:	(bad)  
  41ac52:	xor    DWORD PTR [edx],eax
  41ac54:	inc    edx
  41ac55:	adc    ecx,eax
  41ac57:	mov    al,0x74
  41ac59:	sub    BYTE PTR [esi+0xa],cl
  41ac5c:	fadd   st(6),st
  41ac5e:	dec    ecx
  41ac5f:	mov    ah,0xce
  41ac61:	cmc    
  41ac62:	loope  0x41ac5a
  41ac64:	jnp    0x41abf6
  41ac66:	nop
  41ac67:	hlt    
  41ac68:	mov    cl,0x9c
  41ac6a:	in     eax,dx
  41ac6b:	out    0xcc,eax
  41ac6d:	xchg   ebx,eax
  41ac6e:	std    
  41ac6f:	pop    esi
  41ac70:	test   DWORD PTR [eax-0xf01de53],0x61258362
  41ac7a:	cmp    ebp,DWORD PTR [esi+0x78a21b93]
  41ac80:	jge    0x41ac46
  41ac82:	pop    ebx
  41ac83:	inc    esp
  41ac84:	mov    esi,0x5638a951
  41ac89:	pop    ebp
  41ac8a:	mov    bh,0xd
  41ac8c:	outs   dx,BYTE PTR ds:[esi]
  41ac8d:	aaa    
  41ac8e:	enter  0xb005,0x97
  41ac92:	cmp    ecx,0xffffffbb
  41ac95:	(bad)  
  41ac96:	pop    edi
  41ac97:	ret    
  41ac98:	movzx  esi,WORD PTR [eax]
  41ac9b:	cmp    DWORD PTR [ebx],0x73
  41ac9e:	xchg   edx,eax
  41ac9f:	inc    edx
  41aca0:	aaa    
  41aca1:	inc    ebp
  41aca2:	lods   al,BYTE PTR ds:[esi]
  41aca3:	push   0xd9e04aab
  41aca8:	js     0x41acf5
  41acaa:	xor    ch,BYTE PTR [ecx]
  41acac:	inc    esi
  41acad:	retf   0xc499
  41acb0:	cmp    al,0xc2
  41acb2:	aam    0xd8
  41acb4:	in     al,0x3c
  41acb6:	mov    ebp,0x44ebea59
  41acbb:	and    eax,DWORD PTR [ebp-0x2242fd9]
  41acc1:	fcmovnb st,st(7)
  41acc3:	ins    BYTE PTR es:[edi],dx
  41acc4:	or     eax,0xaaf1c6a2
  41acc9:	jmp    0x41ac59
  41accb:	xchg   edx,eax
  41accc:	mov    eax,0x65de5fa1
  41acd1:	pusha  
  41acd2:	les    dx,DWORD PTR [ebx]
  41acd5:	xchg   BYTE PTR [ecx-0x2d],cl
  41acd8:	dec    esi
  41acd9:	div    BYTE PTR [ebx+ebx*1-0x53243f22]
  41ace0:	arpl   si,sp
  41ace2:	test   DWORD PTR [ecx+0x170d386b],edi
  41ace8:	mov    cl,0xf2
  41acea:	xor    DWORD PTR [ebp+0xa74ee9e],eax
  41acf0:	cmp    DWORD PTR [edx+0x594f83f9],ebp
  41acf6:	(bad)  
  41acf7:	and    dh,BYTE PTR [eax+ebp*4-0x7a377df2]
  41acfe:	mov    bh,0x4d
  41ad00:	xor    BYTE PTR [ecx],ah
  41ad02:	xchg   ecx,eax
  41ad03:	mov    esp,0x2b56c8d4
  41ad08:	jl     0x41ad1d
  41ad0a:	mov    bh,0xaf
  41ad0c:	out    0x72,eax
  41ad0e:	lea    ebx,[eax-0xd]
  41ad11:	jne    0x41ad21
  41ad13:	and    DWORD PTR [edi-0x6abae85],ebp
  41ad19:	cmp    dh,dh
  41ad1b:	cmp    BYTE PTR [ecx+0x9],dl
  41ad1e:	nop
  41ad1f:	cdq    
  41ad20:	mov    ebp,0xff8af2a5
  41ad25:	hlt    
  41ad26:	xchg   BYTE PTR [edi-0x7b],bl
  41ad29:	or     esi,0xec6fa1dd
  41ad2f:	mov    dh,0xc5
  41ad31:	xchg   esi,eax
  41ad32:	xor    esp,DWORD PTR [ebp-0x6b]
  41ad35:	mov    eax,0xf375d4d7
  41ad3a:	(bad)  
  41ad3b:	in     eax,dx
  41ad3c:	test   al,0xef
  41ad3e:	test   BYTE PTR ds:0x70f98df,ch
  41ad44:	cmp    bl,BYTE PTR [esi-0x5dd72662]
  41ad4a:	outs   dx,DWORD PTR ds:[esi]
  41ad4b:	jmp    0x41ad13
  41ad4d:	(bad)  
  41ad4e:	fild   DWORD PTR [esi]
  41ad50:	cmp    BYTE PTR [ebp-0x1b076a5b],0xc5
  41ad57:	mov    bh,0x9b
  41ad59:	test   eax,0x79016377
  41ad5e:	jbe    0x41adbe
  41ad60:	cmp    DWORD PTR [esi],ecx
  41ad62:	xchg   dl,dh
  41ad64:	mov    al,ds:0x71639c90
  41ad69:	jge    0x41adb7
  41ad6b:	dec    DWORD PTR [edx+ebx*2-0x73b9c9a8]
  41ad72:	mov    al,0x3c
  41ad74:	sar    BYTE PTR [edx],0x33
  41ad77:	push   ds
  41ad78:	test   eax,0xf1274480
  41ad7d:	mov    cl,0xcf
  41ad7f:	mov    al,ds:0xecb27ea0
  41ad84:	sub    DWORD PTR [edi+eiz*1-0x767b9d26],esp
  41ad8b:	mov    esp,0x233c21fe
  41ad90:	push   ebp
  41ad91:	mov    ch,BYTE PTR [eax]
  41ad93:	push   0x86d760c7
  41ad98:	cmp    bl,ch
  41ad9a:	rcl    BYTE PTR [eax-0x16],cl
  41ad9d:	dec    edi
  41ad9e:	or     bl,BYTE PTR [edx+0x5c]
  41ada1:	mov    ch,0x3c
  41ada3:	push   ds
  41ada4:	ds pop edi
  41ada6:	(bad)  [ebp-0x5f]
  41ada9:	sbb    eax,0xc5854145
  41adae:	fs pop eax
  41adb0:	popf   
  41adb1:	pop    edi
  41adb2:	repz mov gs,WORD PTR [ebx]
  41adb5:	push   cs
  41adb6:	in     eax,0xe5
  41adb8:	dec    esi
  41adb9:	inc    ebx
  41adba:	jb     0x41adb0
  41adbc:	sbb    DWORD PTR [ebx+0x61f37fd0],eax
  41adc2:	cdq    
  41adc3:	stc    
  41adc4:	mov    eax,ds:0x11943d1a
  41adc9:	xor    al,0x33
  41adcb:	xchg   DWORD PTR [ebp+eax*2-0x1b684fa1],ecx
  41add2:	mov    esi,0x63924def
  41add7:	or     esi,DWORD PTR [edi+0x52109254]
  41addd:	mov    ebp,0xbe93d547
  41ade2:	not    DWORD PTR [esi-0x19]
  41ade5:	das    
  41ade6:	stc    
  41ade7:	jae    0x41ade2
  41ade9:	arpl   WORD PTR [esi],cx
  41adeb:	pop    ebp
  41adec:	sub    ch,ch
  41adee:	stc    
  41adef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41adf0:	icebp  
  41adf1:	(bad)  
  41adf3:	jp     0x41add6
  41adf5:	icebp  
  41adf6:	adc    ebx,DWORD PTR [ebx]
  41adf8:	mov    dh,0x50
  41adfa:	jl     0x41ae67
  41adfc:	jmp    0x41ae7b
  41adfe:	add    DWORD PTR [esi+ebp*8+0x2de55243],ecx
  41ae05:	imul   esp,DWORD PTR [esi+eax*1],0x7599e2cf
  41ae0c:	aad    0xfe
  41ae0e:	or     al,0x87
  41ae10:	loope  0x41ae62
  41ae12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae13:	sbb    eax,0xde63dafc
  41ae18:	test   DWORD PTR [eax+0x67ba1dba],edi
  41ae1e:	and    esp,DWORD PTR [edi-0x4f]
  41ae21:	cmp    al,0x8b
  41ae23:	adc    BYTE PTR ds:0xa9e22991,ah
  41ae29:	mov    BYTE PTR [edi],al
  41ae2b:	lahf   
  41ae2c:	add    al,0xfc
  41ae2e:	jle    0x41adec
  41ae30:	(bad)  
  41ae31:	push   edi
  41ae32:	sahf   
  41ae33:	xor    BYTE PTR [eax],0x71
  41ae36:	fstp   QWORD PTR [ebx-0x33]
  41ae39:	inc    ebx
  41ae3a:	add    eax,0x2ea696cc
  41ae3f:	shl    BYTE PTR [edi+0x27115946],1
  41ae45:	dec    ebp
  41ae46:	mov    al,0x69
  41ae48:	inc    ebx
  41ae49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae4a:	out    0x84,eax
  41ae4c:	pop    eax
  41ae4d:	(bad)  
  41ae4e:	inc    ebx
  41ae4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae50:	into   
  41ae51:	jmp    0x41ae6b
  41ae53:	in     al,0x35
  41ae55:	inc    edx
  41ae56:	push   ecx
  41ae57:	xchg   edx,eax
  41ae58:	sub    eax,0x3aa52e65
  41ae5d:	mov    esi,0x5059d602
  41ae62:	out    0xe9,eax
  41ae64:	clc    
  41ae65:	xchg   esp,eax
  41ae66:	dec    ebx
  41ae67:	(bad)  
  41ae68:	ds xchg ebx,eax
  41ae6a:	mov    dl,0xba
  41ae6c:	clc    
  41ae6d:	mov    bh,0x65
  41ae6f:	cmp    eax,0x8854af66
  41ae74:	enter  0x6cbc,0x7d
  41ae78:	jmp    0x92f8ecc0
  41ae7d:	or     al,0x62
  41ae7f:	or     DWORD PTR [esi-0x6a],0x19c38c6f
  41ae86:	push   ebp
  41ae87:	lods   al,BYTE PTR ds:[esi]
  41ae88:	fldlg2 
  41ae8a:	dec    esp
  41ae8b:	fimul  WORD PTR [edi+edx*2-0x30]
  41ae8f:	ss mov eax,0xd620f8fa
  41ae95:	mov    bl,0xa1
  41ae97:	outs   dx,DWORD PTR ds:[esi]
  41ae98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae99:	dec    eax
  41ae9a:	sbb    BYTE PTR [ecx],al
  41ae9c:	std    
  41ae9d:	out    0x49,al
  41ae9f:	sbb    eax,esp
  41aea1:	(bad)  
  41aea3:	arpl   sp,bp
  41aea5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aea6:	mov    edi,0xe882aac0
  41aeab:	mov    eax,0xe392c59d
  41aeb0:	into   
  41aeb1:	stc    
  41aeb2:	iret   
  41aeb3:	mov    ebp,0xdf3ad7c2
  41aeb8:	xchg   esp,eax
  41aeb9:	das    
  41aeba:	mov    ah,0x48
  41aebc:	leave  
  41aebd:	fcmovu st,st(1)
  41aebf:	ds mov ah,0x78
  41aec2:	jl     0x41af09
  41aec4:	bnd jl 0x41ae92
  41aec7:	cmp    ecx,ebx
  41aec9:	out    dx,eax
  41aeca:	pop    es
  41aecb:	push   edi
  41aecc:	pusha  
  41aecd:	dec    esp
  41aece:	dec    esp
  41aecf:	jp     0x41af29
  41aed1:	xor    DWORD PTR [ebx+0x1c3b0737],edx
  41aed7:	cmp    BYTE PTR [esi-0x19],bh
  41aeda:	and    al,0x64
  41aedc:	jbe    0x41af34
  41aede:	add    eax,0x3f475d3c
  41aee3:	sbb    dl,ch
  41aee5:	inc    esp
  41aee6:	sahf   
  41aee7:	cdq    
  41aee8:	retf   0x8d20
  41aeeb:	mov    BYTE PTR [ebx],dl
  41aeed:	and    DWORD PTR [edx-0x10905d21],0x41
  41aef4:	mov    ebx,0x18c61b54
  41aef9:	fbld   TBYTE PTR [esi+0x5623ded5]
  41aeff:	das    
  41af00:	shl    bl,1
  41af02:	and    BYTE PTR [ecx+0x41],ch
  41af05:	pop    ebx
  41af06:	test   dl,dl
  41af08:	clc    
  41af09:	lock push ss
  41af0b:	mov    ch,0x4c
  41af0d:	adc    cl,BYTE PTR [ebx-0x11]
  41af10:	cmp    al,0xa8
  41af12:	xchg   ebp,eax
  41af13:	add    al,0x9b
  41af15:	je     0x41aeed
  41af17:	push   edx
  41af18:	adc    BYTE PTR [ebx-0x36],dh
  41af1b:	inc    esi
  41af1c:	fcom   st(3)
  41af1e:	mov    eax,ds:0xc2ce11be
  41af23:	mov    ah,0x77
  41af25:	xor    BYTE PTR [ecx],0x65
  41af28:	mov    DWORD PTR [ebp-0x18],ebx
  41af2b:	push   edx
  41af2c:	call   DWORD PTR [edx+0x62]
  41af2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af30:	fild   DWORD PTR [ebp+edi*4+0x13]
  41af34:	mov    cl,0x62
  41af36:	icebp  
  41af37:	cmp    ecx,edi
  41af39:	mov    ds:0x709fcb7d,eax
  41af3e:	pop    ebp
  41af3f:	lock jp 0x41afb3
  41af42:	mov    DWORD PTR [edi-0x197c9736],ecx
  41af48:	cmp    esp,DWORD PTR [eax+0x1b]
  41af4b:	outs   dx,BYTE PTR ds:[esi]
  41af4c:	cli    
  41af4d:	mov    ecx,DWORD PTR [ebx-0x79]
  41af50:	(bad)  
  41af51:	aam    0x9c
  41af53:	lds    edx,FWORD PTR [ecx+0x56]
  41af56:	scas   eax,DWORD PTR es:[edi]
  41af57:	jg     0x41af7f
  41af59:	shl    DWORD PTR [esp+ecx*4],cl
  41af5c:	adc    cl,BYTE PTR ds:0x6ad77364
  41af62:	or     DWORD PTR [ebx+ebx*4+0x1a],ecx
  41af66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af67:	call   0x89571e9e
  41af6c:	jbe    0x41af15
  41af6e:	mov    esp,0x4aee7cb9
  41af73:	jmp    0x41af94
  41af75:	jno    0x41afa0
  41af77:	fldenv [edx+0x1d]
  41af7a:	mov    al,0x30
  41af7c:	nop
  41af7d:	bound  ebp,QWORD PTR [eax+esi*4+0x6874a601]
  41af84:	mov    edi,0x54d459b2
  41af89:	pop    ebp
  41af8a:	test   eax,0xe1e08857
  41af8f:	dec    ecx
  41af90:	push   es
  41af91:	jb     0x41af30
  41af93:	(bad)  
  41af94:	ds mov bl,0x58
  41af97:	dec    edx
  41af98:	xchg   ebx,eax
  41af99:	xor    ch,BYTE PTR [edi-0x54]
  41af9c:	repnz pop ebp
  41af9e:	jnp    0x41af2b
  41afa0:	pop    edx
  41afa1:	mov    ch,ah
  41afa3:	xchg   DWORD PTR ds:0xeb8f1c9,esp
  41afa9:	dec    edx
  41afaa:	dec    eax
  41afab:	ret    
  41afac:	out    dx,al
  41afad:	add    al,0x21
  41afaf:	cmp    al,0x5e
  41afb1:	aaa    
  41afb2:	ins    BYTE PTR es:[edi],dx
  41afb3:	push   cs
  41afb4:	sbb    eax,0xef6275e8
  41afb9:	pop    ss
  41afba:	jecxz  0x41b009
  41afbc:	push   edi
  41afbd:	into   
  41afbe:	dec    edi
  41afbf:	pop    edx
  41afc0:	fnstenv [ecx-0x5b]
  41afc3:	(bad)  
  41afc4:	jbe    0x41afb5
  41afc6:	(bad)  
  41afc7:	jmp    0x8c86d0ff
  41afcc:	pop    esi
  41afcd:	call   0xe73798fa
  41afd2:	(bad)  
  41afd4:	push   edx
  41afd5:	mov    bl,0xc8
  41afd7:	hlt    
  41afd8:	(bad)  
  41afd9:	xor    eax,DWORD PTR [ecx-0x18]
  41afdc:	mov    BYTE PTR [edi-0x20],bl
  41afdf:	mov    ebp,0x3a76d3fc
  41afe4:	inc    esp
  41afe5:	add    cl,bh
  41afe7:	sqrtps xmm0,XMMWORD PTR [esi+0x42]
  41afeb:	inc    ecx
  41afec:	sub    DWORD PTR [esp+edi*4],edx
  41afef:	jg     0x41b026
  41aff1:	push   eax
  41aff2:	fidivr WORD PTR [edx+0x63]
  41aff5:	sbb    al,0x46
  41aff7:	adc    ah,BYTE PTR ds:0x7735e1e5
  41affd:	gs adc eax,0x6c2b9cf9
  41b003:	daa    
  41b004:	jno    0x41b057
  41b006:	in     al,0x21
  41b008:	pop    eax
  41b009:	push   ebx
  41b00a:	clc    
  41b00b:	push   cs
  41b00c:	or     al,ah
  41b00e:	jmp    0x2fc7:0x91f87cb1
  41b015:	push   ss
  41b016:	mov    edi,0xa730142a
  41b01b:	dec    ebp
  41b01c:	int3   
  41b01d:	cld    
  41b01e:	ja     0x41b074
  41b020:	pop    edx
  41b021:	popf   
  41b022:	test   esp,esi
  41b024:	mov    dh,0x28
  41b026:	sub    eax,0xc3bf4c07
  41b02b:	jle    0x41b012
  41b02d:	adc    ch,BYTE PTR [ebx+0x6a]
  41b030:	or     al,BYTE PTR [esp+esi*8-0x1ab63568]
  41b037:	mov    cl,0x82
  41b039:	sahf   
  41b03a:	test   BYTE PTR [edx+0x7df27faf],bh
  41b040:	rcl    esp,1
  41b042:	leave  
  41b043:	xchg   BYTE PTR [ecx+0x58bc0e32],bh
  41b049:	jg     0x41b006
  41b04b:	fisttp QWORD PTR [ecx+0x46]
  41b04e:	and    ecx,esp
  41b050:	sbb    BYTE PTR [ecx],bh
  41b052:	dec    ecx
  41b053:	test   eax,0x5631ab96
  41b058:	sub    al,0x6c
  41b05a:	ss scas al,BYTE PTR es:[edi]
  41b05c:	adc    BYTE PTR [edi+0x15],bh
  41b05f:	sti    
  41b060:	push   edi
  41b061:	mov    dl,0x66
  41b063:	imul   edi,DWORD PTR es:[edi-0x46],0x64
  41b068:	dec    edi
  41b069:	call   0x254988c0
  41b06e:	push   es
  41b06f:	lods   al,BYTE PTR ds:[esi]
  41b070:	stos   BYTE PTR es:[edi],al
  41b071:	fwait
  41b072:	pop    eax
  41b073:	pop    edx
  41b074:	pusha  
  41b075:	aaa    
  41b076:	pop    ecx
  41b077:	push   0x7c36b143
  41b07c:	pop    ss
  41b07d:	pop    ebp
  41b07e:	add    BYTE PTR [edi+0x3df25f10],ch
  41b084:	sbb    eax,0xdfd18574
  41b089:	in     al,0xef
  41b08b:	int    0x54
  41b08d:	lock js 0x41b02c
  41b090:	cwde   
  41b091:	fldenv [esi+ebx*8+0xffcbc7b]
  41b098:	lahf   
  41b099:	shl    BYTE PTR [edi-0x66],cl
  41b09c:	lods   eax,DWORD PTR ds:[esi]
  41b09d:	in     eax,0x57
  41b09f:	ret    
  41b0a0:	push   esi
  41b0a1:	fimul  DWORD PTR [edx+ebx*8]
  41b0a4:	das    
  41b0a5:	xor    al,0x2c
  41b0a7:	orps   xmm2,xmm1
  41b0aa:	inc    ebp
  41b0ab:	jl     0x41b0e4
  41b0ad:	and    esi,0xffffffc3
  41b0b0:	inc    ecx
  41b0b1:	pop    edx
  41b0b2:	xchg   BYTE PTR [esi-0x71],bh
  41b0b5:	pusha  
  41b0b6:	(bad)  
  41b0b7:	loope  0x41b0f1
  41b0b9:	(bad)  
  41b0ba:	or     eax,0x95a031de
  41b0bf:	rol    DWORD PTR [edx+ebx*4+0x6d],0xa4
  41b0c4:	outs   dx,BYTE PTR ds:[esi]
  41b0c5:	pop    ds
  41b0c6:	jle    0x41b06b
  41b0c8:	mov    al,0x80
  41b0ca:	rcr    DWORD PTR [edi],0x70
  41b0cd:	cmp    al,0x16
  41b0cf:	popf   
  41b0d0:	xchg   esi,eax
  41b0d1:	push   edx
  41b0d2:	fwait
  41b0d3:	and    al,0x89
  41b0d5:	sbb    ch,ch
  41b0d7:	jne    0x41b06d
  41b0d9:	sbb    ch,BYTE PTR ds:0xaae50aa8
  41b0df:	push   0x6a
  41b0e1:	xchg   edx,eax
  41b0e2:	ss das 
  41b0e4:	jg     0x41b08c
  41b0e6:	inc    esi
  41b0e7:	mov    eax,ds:0x18fe75b7
  41b0ec:	dec    edx
  41b0ed:	cdq    
  41b0ee:	xor    al,0x6a
  41b0f0:	cmp    ecx,DWORD PTR [ebx+0x2]
  41b0f3:	jmp    0x34b:0x6f569e5c
  41b0fa:	in     al,dx
  41b0fb:	mov    ah,0xb9
  41b0fd:	jnp    0x41b0d5
  41b0ff:	jmp    0x41b14f
  41b101:	adc    eax,DWORD PTR [ebx-0x38]
  41b104:	icebp  
  41b105:	nop
  41b106:	mov    ah,0xb1
  41b108:	(bad)  
  41b109:	iret   
  41b10a:	ret    
  41b10b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b10c:	test   BYTE PTR [edi+0x6],0xe0
  41b110:	mov    edi,0x499d458f
  41b115:	mov    ebp,0xbf7cf7bb
  41b11a:	scas   eax,DWORD PTR es:[edi]
  41b11b:	inc    eax
  41b11c:	xor    esp,ebx
  41b11e:	adc    eax,0x255f2821
  41b123:	pusha  
  41b124:	loopne 0x41b16d
  41b126:	dec    ebx
  41b127:	mov    edx,0x2538a984
  41b12c:	mov    cl,BYTE PTR [edi]
  41b12e:	stc    
  41b12f:	lods   al,BYTE PTR ds:[esi]
  41b130:	mov    ah,0xc8
  41b132:	jns    0x41b0e4
  41b134:	add    al,0xdc
  41b136:	cmp    edi,DWORD PTR [ebp+ebp*1+0x4d]
  41b13a:	int3   
  41b13b:	lods   al,BYTE PTR ds:[esi]
  41b13c:	mov    ah,0x56
  41b13e:	dec    ebx
  41b13f:	shl    dl,cl
  41b141:	aaa    
  41b142:	sbb    cl,BYTE PTR [esi+0x4a]
  41b145:	out    0xcd,eax
  41b147:	mov    DWORD PTR [eax+0xa],eax
  41b14a:	sbb    al,0x4
  41b14c:	jae    0x41b114
  41b14e:	xchg   ebp,eax
  41b14f:	mov    dl,bl
  41b151:	jge    0x41b10d
  41b153:	push   0x3
  41b155:	pushf  
  41b156:	dec    edx
  41b157:	sub    dl,ah
  41b159:	mov    eax,0x5b4ab55e
  41b15e:	sub    ch,bh
  41b160:	lock jmp 0xfa5b:0x5700f549
  41b168:	and    al,0xe3
  41b16a:	mov    esp,0xd9e43bbe
  41b16f:	es int3 
  41b171:	mov    edi,0x1478f6b7
  41b176:	scas   eax,DWORD PTR es:[edi]
  41b177:	pop    es
  41b178:	data16 repz mov dl,0xcf
  41b17c:	mov    edx,0xaa0c9de0
  41b181:	jp     0x41b114
  41b183:	cmp    al,0x49
  41b185:	and    DWORD PTR [ebx+0x1d93673d],edi
  41b18b:	in     al,0xab
  41b18d:	xor    esi,DWORD PTR [esi-0x54b47c59]
  41b193:	popf   
  41b194:	jb     0x41b18c
  41b196:	jge    0x41b17b
  41b198:	add    ebp,DWORD PTR [esi-0x41720ff1]
  41b19e:	daa    
  41b19f:	dec    esi
  41b1a0:	or     eax,0x3ea3c43d
  41b1a5:	push   0x62
  41b1a7:	sub    eax,0xaf310d0
  41b1ac:	dec    ebx
  41b1ad:	outs   dx,DWORD PTR ds:[esi]
  41b1ae:	out    0x6b,al
  41b1b0:	mov    bh,0xba
  41b1b2:	iret   
  41b1b3:	cmp    eax,0x7ac440d6
  41b1b8:	(bad)  
  41b1bb:	add    eax,0x5de0ca3a
  41b1c0:	jmp    0x5c9bab4d
  41b1c5:	cdq    
  41b1c6:	push   esi
  41b1c7:	push   cs
  41b1c8:	dec    DWORD PTR [ecx+0x635ab768]
  41b1ce:	jge    0x41b1e3
  41b1d0:	cmp    eax,0x8a204622
  41b1d5:	mov    ds:0x6dff9a6,eax
  41b1da:	xchg   ecx,eax
  41b1db:	dec    edx
  41b1dc:	or     al,BYTE PTR [ebx-0xc]
  41b1df:	pop    edi
  41b1e0:	xlat   BYTE PTR ds:[ebx]
  41b1e1:	fwait
  41b1e2:	out    0x90,eax
  41b1e4:	es inc esp
  41b1e6:	add    eax,DWORD PTR [edi+esi*8+0x2a]
  41b1ea:	pusha  
  41b1eb:	test   al,0x45
  41b1ee:	aad    0xf3
  41b1f0:	cld    
  41b1f1:	lods   eax,DWORD PTR ds:[esi]
  41b1f2:	dec    ebp
  41b1f3:	jne    0x41b186
  41b1f5:	inc    ebx
  41b1f6:	(bad)
  41b1f9:	xchg   ecx,eax
  41b1fa:	inc    ecx
  41b1fb:	and    eax,0x95a06bb6
  41b200:	fidiv  WORD PTR [edx+eiz*4]
  41b203:	xchg   DWORD PTR [edx-0x5e169b30],ecx
  41b209:	fidivr DWORD PTR [esi+0x76]
  41b20c:	xchg   edi,eax
  41b20d:	jl     0x41b21d
  41b20f:	fs mov cl,0x65
  41b212:	cdq    
  41b213:	es mov bh,0xf6
  41b216:	mov    esi,0x4ae99389
  41b21b:	push   ecx
  41b21c:	fadd   st(0),st
  41b21e:	or     edi,ebx
  41b220:	(bad)  
  41b221:	jbe    0x41b284
  41b223:	shl    DWORD PTR [edi],cl
  41b225:	lea    edi,[eax-0x50b47e87]
  41b22b:	mov    dl,0xd5
  41b22d:	pop    eax
  41b22e:	int    0x39
  41b230:	retf   
  41b231:	lock cmc 
  41b233:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b234:	push   eax
  41b235:	jb     0x41b21e
  41b237:	das    
  41b238:	pop    edx
  41b239:	pop    ds
  41b23a:	xor    al,0xff
  41b23c:	mov    ecx,cs
  41b23e:	inc    edx
  41b23f:	jbe    0x41b276
  41b241:	(bad)  
  41b242:	pop    ecx
  41b243:	daa    
  41b244:	sbb    BYTE PTR [eax],0x2e
  41b247:	pop    ecx
  41b248:	inc    edx
  41b249:	push   esp
  41b24a:	mov    ch,0x72
  41b24c:	ins    DWORD PTR es:[edi],dx
  41b24d:	retf   
  41b24e:	call   0xf4be7576
  41b253:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b254:	mov    al,0x19
  41b256:	xchg   BYTE PTR [ebx+0x1e],bh
  41b259:	call   0xc9c8f11a
  41b25e:	cdq    
  41b25f:	scas   eax,DWORD PTR es:[edi]
  41b260:	mov    bh,0x95
  41b262:	and    eax,0xb8d92d8c
  41b267:	inc    edi
  41b268:	lods   eax,DWORD PTR ds:[esi]
  41b269:	xchg   esi,eax
  41b26a:	mov    al,ds:0x6b7c0342
  41b26f:	popa   
  41b270:	xor    BYTE PTR [ebp-0x2d5070b4],ch
  41b276:	pop    ecx
  41b277:	sub    al,0x9
  41b279:	jo     0x41b22b
  41b27b:	mov    esp,0xdbe28c76
  41b280:	jle    0x41b293
  41b282:	sbb    ebp,eax
  41b284:	inc    edi
  41b285:	mov    ebp,esi
  41b287:	retf   
  41b288:	pushf  
  41b289:	fucomi st,st(5)
  41b28b:	lds    ebp,FWORD PTR [ecx]
  41b28d:	(bad)  
  41b28e:	loope  0x41b29d
  41b290:	xchg   ebx,eax
  41b291:	pop    ecx
  41b292:	xchg   edi,eax
  41b293:	popa   
  41b294:	xor    eax,0xbd9a51bd
  41b299:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b29a:	or     DWORD PTR [eax],ebp
  41b29c:	and    al,0x6d
  41b29e:	add    al,0x7c
  41b2a0:	push   esi
  41b2a1:	movzx  ebp,WORD PTR es:[edx-0x49]
  41b2a6:	outs   dx,BYTE PTR ds:[esi]
  41b2a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b2a8:	push   edi
  41b2a9:	add    al,0x94
  41b2ab:	aas    
  41b2ac:	pop    esp
  41b2ad:	mov    cs,eax
  41b2af:	add    al,BYTE PTR [eax]
  41b2b1:	dec    ebx
  41b2b2:	jne    0x41b243
  41b2b4:	jecxz  0x41b321
  41b2b6:	sbb    ecx,DWORD PTR [edi]
  41b2b8:	or     BYTE PTR [esi+eiz*8+0x2],dh
  41b2bc:	push   0x5774ad7b
  41b2c1:	in     eax,dx
  41b2c2:	scas   eax,DWORD PTR es:[edi]
  41b2c3:	push   ebp
  41b2c4:	mov    al,0x99
  41b2c6:	jmp    0xecb4:0x34275b45
  41b2cd:	xchg   edx,eax
  41b2ce:	sbb    eax,0xd7128342
  41b2d3:	ror    al,1
  41b2d5:	inc    esp
  41b2d6:	pop    ebp
  41b2d7:	es dec dx
  41b2da:	pop    esi
  41b2db:	push   edi
  41b2dc:	sub    BYTE PTR [ecx+0x59bc8813],dh
  41b2e2:	adc    esp,DWORD PTR [edi]
  41b2e4:	stos   BYTE PTR es:[edi],al
  41b2e5:	xchg   bl,al
  41b2e7:	shl    BYTE PTR [ebp+0x60],cl
  41b2ea:	jb     0x41b2c9
  41b2ec:	jns    0x41b27b
  41b2ee:	and    cl,BYTE PTR [ebx+0x77eb6337]
  41b2f4:	jae    0x41b2d3
  41b2f6:	push   cs
  41b2f7:	add    DWORD PTR [edx-0x65c61a6e],esi
  41b2fd:	(bad)  
  41b2fe:	rcl    BYTE PTR [ebx+0x58],0x6b
  41b302:	mov    ch,0xb1
  41b304:	rol    DWORD PTR [edi-0x775879b4],cl
  41b30a:	into   
  41b30b:	cmp    eax,0x5ac0a333
  41b310:	test   DWORD PTR [ebx+0x49],0x6982155
  41b317:	rcr    DWORD PTR [ecx-0x445b04de],0xb9
  41b31e:	cwde   
  41b31f:	dec    esp
  41b320:	xchg   ebx,eax
  41b321:	(bad)  
  41b322:	retf   
  41b323:	add    DWORD PTR [ebp+0x3b7ccd61],esi
  41b329:	rol    DWORD PTR [esi],1
  41b32b:	pop    ss
  41b32c:	or     cl,BYTE PTR [ecx]
  41b32e:	clc    
  41b32f:	fdiv   QWORD PTR [eax+0x40]
  41b332:	or     ah,BYTE PTR [ebx-0x2e]
  41b335:	or     edi,ecx
  41b337:	(bad)  [ebp+eiz*1+0x19]
  41b33b:	in     eax,0xcc
  41b33d:	mov    ds:0xe6e8d4cb,al
  41b342:	jl     0x41b349
  41b344:	lds    esp,FWORD PTR [esp+ecx*1+0x55b000a2]
  41b34b:	xchg   BYTE PTR [edx],bh
  41b34d:	mov    ecx,0x986c71f7
  41b352:	jb     0x41b3c7
  41b354:	dec    edi
  41b355:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b356:	jl     0x41b37e
  41b358:	cs enter 0xa23c,0x27
  41b35d:	or     al,0x78
  41b35f:	pop    esi
  41b360:	cs into 
  41b362:	adc    bl,dl
  41b364:	lods   al,BYTE PTR ds:[esi]
  41b365:	jb     0x41b335
  41b367:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b368:	pop    es
  41b369:	(bad)  
  41b36b:	cmp    ax,0x7578
  41b36f:	xchg   esi,eax
  41b370:	mov    dl,0xf7
  41b372:	in     al,0xb3
  41b374:	fidivr WORD PTR [ecx+0x18896e95]
  41b37a:	push   esi
  41b37b:	add    eax,0x1ade860b
  41b380:	mov    ah,0xa9
  41b382:	test   al,0xb
  41b384:	sub    BYTE PTR [edx+eax*4-0x3671887e],cl
  41b38b:	mov    BYTE PTR [ecx-0x35],bl
  41b38e:	mov    ch,0xac
  41b390:	lock fstp QWORD PTR [esi+edx*1+0x2f96e0fe]
  41b398:	pop    esp
  41b399:	dec    esi
  41b39a:	aas    
  41b39b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b39c:	sbb    BYTE PTR [edx-0x62],0x8a
  41b3a0:	add    ah,BYTE PTR [ecx+ecx*2+0x6b2532ae]
  41b3a7:	daa    
  41b3a8:	mov    ecx,0xed281f9e
  41b3ad:	gs push esp
  41b3af:	push   ecx
  41b3b0:	adc    al,BYTE PTR [ebp-0x54]
  41b3b3:	in     al,dx
  41b3b4:	or     al,0xbe
  41b3b6:	mov    eax,0x52e453ec
  41b3bb:	fiadd  WORD PTR [eax]
  41b3bd:	lss    ebx,FWORD PTR [eax+0x4a]
  41b3c1:	sbb    BYTE PTR gs:[esi],ah
  41b3c4:	clc    
  41b3c5:	bound  ebx,QWORD PTR [ecx-0x5c8262a]
  41b3cb:	xlat   BYTE PTR ds:[ebx]
  41b3cc:	cld    
  41b3cd:	(bad)  
  41b3ce:	es pop es
  41b3d0:	xlat   BYTE PTR ds:[ebx]
  41b3d1:	out    dx,al
  41b3d2:	jo     0x41b423
  41b3d4:	adc    BYTE PTR [ebx],bh
  41b3d6:	enter  0xf0e0,0x9
  41b3da:	mov    ecx,0xda1458e1
  41b3df:	das    
  41b3e0:	cmp    esp,esp
  41b3e2:	jecxz  0x41b37b
  41b3e4:	mov    bl,0x1d
  41b3e6:	cmc    
  41b3e7:	call   0x16f9:0x729f621c
  41b3ee:	and    DWORD PTR [edx-0x4cf6420e],esi
  41b3f4:	(bad)  
  41b3f5:	nop
  41b3f6:	sbb    eax,0x140765b1
  41b3fb:	out    dx,al
  41b3fc:	cs mov dl,0xb5
  41b3ff:	inc    ebp
  41b400:	and    eax,0x881c1d64
  41b405:	scas   eax,DWORD PTR es:[edi]
  41b406:	bound  ebp,QWORD PTR [ebp+0x7aa33475]
  41b40c:	neg    ch
  41b40e:	sub    BYTE PTR [edi+ebp*4+0x71],bh
  41b412:	mov    ah,0x97
  41b414:	xchg   ecx,eax
  41b415:	out    0x42,eax
  41b417:	inc    ecx
  41b418:	sti    
  41b419:	fst    st(7)
  41b41b:	fadd   QWORD PTR [ecx+0x4f]
  41b41e:	sub    dh,BYTE PTR [eax+ecx*4+0x7f]
  41b422:	lahf   
  41b423:	xlat   BYTE PTR ds:[ebx]
  41b424:	jo     0x41b400
  41b426:	inc    esp
  41b427:	sub    DWORD PTR [edx-0x53],edx
  41b42a:	fild   WORD PTR [edx+0x1be60df4]
  41b430:	shl    eax,0xa5
  41b433:	lahf   
  41b434:	or     eax,0x4f508b26
  41b439:	add    DWORD PTR [eax],0xbfe518cd
  41b43f:	xor    BYTE PTR [esi],0x43
  41b442:	bound  esp,QWORD PTR [edx+0x1d468d00]
  41b448:	popa   
  41b449:	data16 mov ch,0x6b
  41b44c:	pop    ds
  41b44d:	fild   DWORD PTR [ebx+0x5]
  41b450:	inc    eax
  41b451:	mov    eax,ds:0x325cb462
  41b456:	xor    ebp,DWORD PTR [ecx+0x6]
  41b459:	adc    esi,DWORD PTR [edi+edx*8-0x37]
  41b45d:	push   eax
  41b45e:	xchg   esp,eax
  41b45f:	bound  esi,QWORD PTR [eax+0xbb7a28f]
  41b465:	sub    DWORD PTR [ebx+0x5b365de6],edi
  41b46b:	shl    eax,1
  41b46d:	int    0x19
  41b46f:	sbb    DWORD PTR [edx-0x6867cc20],0x19
  41b476:	adc    eax,0xb366c607
  41b47b:	mov    WORD PTR [edi+0x580a2c94],fs
  41b481:	and    ah,BYTE PTR ds:0xbef6b864
  41b487:	aaa    
  41b488:	sbb    BYTE PTR es:[edi+ebx*4-0x50c8d11a],dl
  41b490:	cmp    ebx,ebx
  41b492:	call   0x955d:0xd543da9c
  41b499:	push   es
  41b49a:	pop    ss
  41b49b:	xor    BYTE PTR [eax+0x4f642b8],ah
  41b4a1:	or     DWORD PTR [ecx+0x2407ea0d],ebp
  41b4a7:	rol    BYTE PTR [esi+ebx*8],cl
  41b4aa:	push   ss
  41b4ab:	and    eax,0xd4d9033c
  41b4b0:	inc    ebx
  41b4b1:	push   edx
  41b4b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4b3:	das    
  41b4b4:	adc    ebx,eax
  41b4b6:	jp     0x41b50a
  41b4b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4b9:	jl     0x41b522
  41b4bb:	and    esi,DWORD PTR [ebx]
  41b4bd:	mov    ch,0x78
  41b4bf:	lea    esi,[edi]
  41b4c1:	mov    ds:0x391e1425,eax
  41b4c6:	push   cs
  41b4c7:	fs pop ebx
  41b4c9:	or     al,0xb
  41b4cb:	xchg   ebp,eax
  41b4cc:	bswap  eax
  41b4ce:	js     0x41b53f
  41b4d0:	test   eax,0x3a0f11fc
  41b4d5:	cld    
  41b4d6:	dec    edx
  41b4d7:	mov    ds:0x5cd4e9ec,al
  41b4dc:	or     al,0x19
  41b4de:	jmp    0x8d43e199
  41b4e3:	mov    ah,0x61
  41b4e5:	aaa    
  41b4e6:	aad    0xe5
  41b4e8:	loop   0x41b4c7
  41b4ea:	push   esp
  41b4eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b4ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4ed:	mov    eax,0x8e45e1ff
  41b4f2:	mov    BYTE PTR [ecx-0x4f14de6f],0x41
  41b4f9:	mov    DWORD PTR [esi],0x2dc320e9
  41b4ff:	cmp    cl,BYTE PTR ds:0xee0527f1
  41b505:	adc    BYTE PTR [ebx],cl
  41b507:	loope  0x41b53d
  41b509:	jno    0x41b520
  41b50b:	inc    edx
  41b50c:	enter  0x3781,0x4a
  41b510:	mov    esi,0xe043524c
  41b515:	arpl   WORD PTR [edx-0x302af797],cx
  41b51b:	add    al,0xa5
  41b51d:	arpl   WORD PTR [eax],cx
  41b51f:	inc    edx
  41b520:	sub    ecx,DWORD PTR [eax]
  41b522:	xor    eax,0xf46ea267
  41b527:	sub    al,0x2f
  41b529:	das    
  41b52a:	mov    ch,BYTE PTR [edi-0x5c]
  41b52d:	xlat   BYTE PTR ds:[ebx]
  41b52e:	mov    ebp,0xf877e14
  41b533:	lea    ecx,[eax+0x1d]
  41b536:	enter  0x8800,0x89
  41b53a:	inc    eax
  41b53b:	pop    eax
  41b53c:	rcl    BYTE PTR ds:0xc3418738,1
  41b542:	test   al,0xec
  41b544:	ror    BYTE PTR [esi],0x51
  41b547:	xor    edi,DWORD PTR [eax+0x19]
  41b54a:	cmp    bh,bl
  41b54c:	rol    BYTE PTR [edx-0x3d],0xd6
  41b550:	dec    esi
  41b551:	fwait
  41b552:	pop    edx
  41b553:	cmp    dh,BYTE PTR [esi+0x11]
  41b556:	das    
  41b557:	mov    ebx,0x9dcf6672
  41b55c:	std    
  41b55d:	aad    0x1c
  41b55f:	lock unpcklps xmm1,XMMWORD PTR [ebx]
  41b563:	mov    edi,0xca4780ea
  41b568:	cmp    dh,BYTE PTR [eax]
  41b56a:	push   ss
  41b56b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b56c:	div    DWORD PTR [edi-0xc]
  41b56f:	pusha  
  41b570:	out    0x93,al
  41b572:	lahf   
  41b573:	jno    0x41b576
  41b575:	sub    ebx,0x58eca343
  41b57b:	mov    WORD PTR [ebx],ds
  41b57d:	lds    ebp,FWORD PTR [esi+0x7fda833b]
  41b583:	sub    eax,0xd446aed2
  41b588:	sar    dh,1
  41b58a:	ret    0x4520
  41b58d:	outs   dx,BYTE PTR ds:[esi]
  41b58e:	dec    BYTE PTR [eax+0x22]
  41b591:	mov    ds:0xfd9b8ad9,al
  41b596:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b597:	mov    bh,0x12
  41b599:	push   ds
  41b59a:	and    BYTE PTR [ebp-0x548f6d7c],bl
  41b5a0:	sub    ecx,ecx
  41b5a2:	mov    BYTE PTR [ebp-0x24],cl
  41b5a5:	xchg   bl,cl
  41b5a7:	and    DWORD PTR [eax+0xb],esi
  41b5aa:	jl     0x41b547
  41b5ac:	and    eax,0xb38b5b63
  41b5b1:	out    0xf1,al
  41b5b3:	jbe    0x41b56d
  41b5b5:	sub    esp,eax
  41b5b7:	fisttp DWORD PTR ds:0xd48a0ba9
  41b5bd:	lahf   
  41b5be:	jns    0x41b633
  41b5c0:	aaa    
  41b5c1:	mov    ebp,0xb23521fd
  41b5c6:	mov    ch,BYTE PTR [ecx+esi*2-0x6c]
  41b5ca:	pop    edi
  41b5cb:	frstor [ebp+0x46]
  41b5ce:	pop    esi
  41b5cf:	popf   
  41b5d0:	loopne 0x41b629
  41b5d2:	je     0x41b604
  41b5d4:	mov    esi,0xf540d910
  41b5d9:	pop    esp
  41b5da:	loopne 0x41b5d1
  41b5dc:	dec    ebx
  41b5dd:	int3   
  41b5de:	bound  ebx,QWORD PTR [ebx-0xaceabf5]
  41b5e4:	xor    eax,0x38fdfc46
  41b5e9:	dec    ecx
  41b5ea:	rol    BYTE PTR [ebp+0x51f90761],0xcd
  41b5f1:	add    eax,0xb3c51235
  41b5f6:	stos   DWORD PTR es:[edi],eax
  41b5f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b5f8:	mov    esp,0xc9c9b886
  41b5fd:	in     al,0x24
  41b5ff:	pop    edi
  41b600:	pop    ebx
  41b601:	or     al,0x2b
  41b604:	popa   
  41b605:	je     0x41b665
  41b607:	cs test ch,dl
  41b60a:	stc    
  41b60b:	adc    al,0x5a
  41b60d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b60e:	paddq  mm1,QWORD PTR [ebx]
  41b611:	in     al,dx
  41b612:	xor    ecx,DWORD PTR [esi-0x1f]
  41b615:	leave  
  41b616:	sub    DWORD PTR [ebp-0x78081b6b],esp
  41b61c:	mov    ebp,0xa96a4e24
  41b621:	pop    ecx
  41b622:	sbb    al,bh
  41b624:	pop    edx
  41b625:	ins    DWORD PTR es:[edi],dx
  41b626:	or     al,0x16
  41b628:	mov    DWORD PTR [esi-0x24],esp
  41b62b:	and    ebp,DWORD PTR [ebp-0x51]
  41b62e:	shl    BYTE PTR [ebp-0x3bcf5a42],1
  41b634:	stc    
  41b635:	inc    ecx
  41b636:	or     BYTE PTR [ebx+0x7a],bh
  41b639:	cwde   
  41b63a:	sahf   
  41b63b:	add    al,0xa4
  41b63d:	jmp    0x3134:0xbd3ee4a9
  41b644:	push   edi
  41b645:	and    BYTE PTR [eax],ch
  41b647:	dec    ebp
  41b648:	rol    BYTE PTR [ecx+0x5487c2b0],cl
  41b64e:	push   ss
  41b64f:	or     bl,dh
  41b651:	pusha  
  41b652:	lea    ebp,[esi-0x30]
  41b655:	popa   
  41b656:	fcmovbe st,st(7)
  41b658:	test   eax,0x806c9c00
  41b65d:	(bad)  
  41b65e:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b660:	scas   al,BYTE PTR es:[edi]
  41b661:	repz push ss
  41b663:	and    ah,BYTE PTR [edi+0x4c284993]
  41b669:	xchg   DWORD PTR [edx-0x69],esp
  41b66c:	or     edi,DWORD PTR [edi]
  41b66e:	xchg   DWORD PTR [eax-0x66],ebp
  41b671:	imul   edi,DWORD PTR [ebx],0xffffff96
  41b674:	ret    0x7875
  41b677:	inc    ebp
  41b678:	ret    0x19d8
  41b67b:	(bad)  
  41b67c:	mov    WORD PTR [esi],ds
  41b67e:	scas   al,BYTE PTR es:[edi]
  41b67f:	add    bl,BYTE PTR [edx+ebp*4+0x2e5edf35]
  41b686:	es in  al,dx
  41b688:	in     eax,0xa4
  41b68a:	mov    dh,cl
  41b68c:	pusha  
  41b68d:	cld    
  41b68e:	push   ebp
  41b68f:	jo     0x41b684
  41b691:	int3   
  41b692:	cmp    al,0xa1
  41b694:	push   ds
  41b695:	popa   
  41b696:	ror    bh,cl
  41b698:	fldcw  WORD PTR ds:0x9bd1647e
  41b69e:	sbb    esi,DWORD PTR [esi-0x12]
  41b6a1:	ins    DWORD PTR es:[edi],dx
  41b6a2:	mov    eax,0xcd592433
  41b6a7:	in     eax,dx
  41b6a8:	xchg   ebp,eax
  41b6a9:	mov    ebp,0xfaceab80
  41b6ae:	retf   0x73e2
  41b6b1:	mov    ds:0x9a85258f,eax
  41b6b6:	jle    0x41b672
  41b6b8:	mov    dh,0xec
  41b6ba:	jo     0x41b6ad
  41b6bc:	inc    edi
  41b6bd:	xchg   BYTE PTR [ecx+0x20bfa989],bl
  41b6c3:	in     al,dx
  41b6c4:	xchg   esi,eax
  41b6c5:	out    dx,eax
  41b6c6:	in     eax,dx
  41b6c7:	xor    al,0x8f
  41b6c9:	mov    WORD PTR cs:[ecx],fs
  41b6cc:	push   edx
  41b6cd:	rcr    DWORD PTR [edi-0x2d57cd56],cl
  41b6d3:	pushf  
  41b6d4:	popf   
  41b6d5:	shl    BYTE PTR [edi],1
  41b6d7:	stos   DWORD PTR es:[edi],eax
  41b6d8:	lods   eax,DWORD PTR ds:[esi]
  41b6d9:	lods   eax,DWORD PTR ds:[esi]
  41b6da:	stos   DWORD PTR es:[edi],eax
  41b6db:	inc    edx
  41b6dc:	push   esp
  41b6dd:	jb     0x41b6ee
  41b6df:	mov    edx,0x7e316e32
  41b6e4:	jbe    0x41b66b
  41b6e6:	jne    0x41b739
  41b6e8:	sub    al,0x19
  41b6ea:	(bad)  
  41b6ec:	sbb    DWORD PTR [ebx-0x6e5c7a8c],ebx
  41b6f2:	bound  edx,QWORD PTR [edi+ecx*8]
  41b6f5:	adc    eax,0x515b8696
  41b6fa:	loopne 0x41b6cd
  41b6fc:	pop    edx
  41b6fd:	iret   
  41b6fe:	ja     0x41b6a8
  41b700:	mov    al,0x8b
  41b702:	hlt    
  41b703:	mov    WORD PTR [eax],es
  41b705:	push   esp
  41b706:	(bad)  
  41b707:	push   0xffffff98
  41b709:	mov    ds:0xf4c52fe5,al
  41b70e:	int    0x1a
  41b710:	inc    ebx
  41b711:	cmp    BYTE PTR [ebx+0x52d3b3e4],ch
  41b717:	fcomp  DWORD PTR [edx]
  41b719:	aam    0xdb
  41b71b:	and    eax,0x47054969
  41b721:	mov    BYTE PTR [esi+edx*2-0x6],0xbf
  41b726:	jne    0x41b6c0
  41b728:	inc    esi
  41b729:	sub    ah,al
  41b72b:	popf   
  41b72c:	pusha  
  41b72d:	dec    eax
  41b72e:	fidivr DWORD PTR [edi-0x5b]
  41b731:	sub    eax,0xb09240f5
  41b736:	mov    ch,BYTE PTR [edx-0x52]
  41b739:	add    DWORD PTR [ebx],eax
  41b73b:	pop    edi
  41b73c:	push   ds
  41b73d:	or     dh,dl
  41b73f:	int3   
  41b740:	or     bl,dh
  41b742:	int3   
  41b743:	and    edi,DWORD PTR [esi-0x216d2e57]
  41b749:	push   edi
  41b74a:	jbe    0x41b7b3
  41b74c:	shl    BYTE PTR [esi+0x46],cl
  41b74f:	dec    ebx
  41b750:	aam    0xea
  41b752:	push   ecx
  41b753:	fnstsw WORD PTR [eax+ebx*8]
  41b756:	sti    
  41b757:	ret    
  41b758:	sbb    DWORD PTR [eax+0x10],edi
  41b75b:	xor    al,0xef
  41b75d:	sbb    BYTE PTR [edi+0x1a],dl
  41b760:	hlt    
  41b761:	dec    edi
  41b762:	mov    ds:0xf9217f36,eax
  41b767:	and    DWORD PTR ds:0xe17fa732,0xc108729b
  41b771:	xchg   ebx,eax
  41b772:	jecxz  0x41b798
  41b774:	pop    edi
  41b775:	xchg   esp,eax
  41b776:	and    eax,0x52e52cd5
  41b77b:	shl    BYTE PTR [esi],0x6d
  41b77e:	push   ebx
  41b77f:	cwde   
  41b780:	jmp    0x574c2add
  41b785:	popa   
  41b786:	jl     0x41b784
  41b788:	xchg   ebx,eax
  41b789:	cmp    cl,BYTE PTR [ebp-0x788b8533]
  41b78f:	fidiv  WORD PTR [ebx]
  41b791:	jns    0x41b785
  41b793:	pop    edi
  41b794:	push   es
  41b795:	aad    0x14
  41b797:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b798:	and    ecx,ebp
  41b79a:	mov    ch,0xab
  41b79c:	jg     0x41b7ee
  41b79e:	push   esi
  41b79f:	bound  ecx,QWORD PTR [esi]
  41b7a1:	ret    0x6af7
  41b7a4:	jbe    0x41b7d4
  41b7a6:	retf   
  41b7a7:	stc    
  41b7a8:	cmp    BYTE PTR [esi+esi*8-0x36fdd344],bh
  41b7af:	mov    cl,0x2f
  41b7b1:	test   eax,0x607c2621
  41b7b6:	pop    edi
  41b7b7:	mov    bh,ah
  41b7b9:	push   0x3e
  41b7bb:	ja     0x41b81e
  41b7bd:	dec    ebx
  41b7be:	lock xchg esp,eax
  41b7c0:	js     0x41b7d2
  41b7c2:	xor    DWORD PTR [edi+0x642774ca],esp
  41b7c8:	outs   dx,BYTE PTR ds:[esi]
  41b7c9:	pop    edx
  41b7ca:	lea    edi,ds:0xeded1ac8
  41b7d0:	in     eax,0xbf
  41b7d2:	sbb    edi,eax
  41b7d4:	jle    0x41b79a
  41b7d6:	add    BYTE PTR [ebx+0x67],bh
  41b7d9:	xchg   ecx,eax
  41b7da:	pop    ss
  41b7db:	xchg   esi,eax
  41b7dc:	mov    edi,0xdf6ed2e8
  41b7e1:	mov    edx,0xa394388e
  41b7e6:	sbb    edi,DWORD PTR [edx+0x4f]
  41b7e9:	mov    cs,WORD PTR [eax+0x32]
  41b7ec:	jp     0x41b7df
  41b7ee:	pand   mm1,QWORD PTR [esi+eax*4+0x7c]
  41b7f3:	mov    esp,0x73c6e45a
  41b7f8:	cmp    BYTE PTR [ebx],ch
  41b7fa:	scas   eax,DWORD PTR es:[edi]
  41b7fb:	cmp    esp,edi
  41b7fd:	jns    0x41b826
  41b7ff:	(bad)  
  41b800:	aas    
  41b801:	add    dl,BYTE PTR [edx]
  41b803:	jg     0x41b7c5
  41b805:	or     eax,0x3e924591
  41b80a:	lea    ecx,[ebx-0x7f]
  41b80d:	clc    
  41b80e:	jbe    0x41b7ab
  41b810:	icebp  
  41b811:	(bad)  
  41b812:	mov    esi,0x71b53fd6
  41b817:	sub    al,0x95
  41b819:	rol    DWORD PTR [edi+eiz*8],1
  41b81c:	mov    esp,0xe2d011cc
  41b821:	int3   
  41b822:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b823:	sub    BYTE PTR [ebx+ebp*8-0x71],ch
  41b827:	jno    0x41b810
  41b829:	mov    dh,0x7f
  41b82b:	into   
  41b82c:	test   ah,ch
  41b82e:	sti    
  41b82f:	clc    
  41b830:	or     bl,dh
  41b832:	pop    esp
  41b833:	pop    ebx
  41b834:	ret    
  41b835:	ins    BYTE PTR es:[di],dx
  41b837:	(bad)  
  41b838:	outs   dx,DWORD PTR ds:[esi]
  41b839:	(bad)  
  41b83a:	fld    TBYTE PTR [ecx]
  41b83c:	jmp    0x5579466c
  41b841:	fdiv   QWORD PTR [edi+eax*1-0x23a1b8ef]
  41b848:	xchg   ecx,eax
  41b849:	aad    0xa3
  41b84b:	mov    ecx,0x26fdc972
  41b850:	inc    ebp
  41b851:	int3   
  41b852:	push   ss
  41b853:	je     0x41b8a3
  41b855:	jecxz  0x41b802
  41b857:	ss call 0x8007:0x3713c084
  41b85f:	popa   
  41b860:	and    ecx,DWORD PTR [edx-0x1b]
  41b863:	stc    
  41b864:	out    dx,al
  41b865:	clc    
  41b866:	push   edx
  41b867:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b868:	test   ah,cl
  41b86a:	sahf   
  41b86b:	sbb    edi,DWORD PTR [ecx+0x72]
  41b86e:	push   edx
  41b86f:	jp     0x41b816
  41b871:	adc    ch,BYTE PTR [ebp+0x613e0a4d]
  41b877:	(bad)  
  41b879:	dec    ebp
  41b87a:	add    DWORD PTR [edi],ebp
  41b87c:	push   ecx
  41b87d:	or     eax,0xa2e72655
  41b882:	jnp    0x41b84b
  41b884:	and    BYTE PTR [edx+ebp*2],ah
  41b887:	sti    
  41b888:	fidivr DWORD PTR [ebx-0x7]
  41b88b:	ins    BYTE PTR es:[edi],dx
  41b88c:	or     dl,al
  41b88e:	cmp    ebp,DWORD PTR [esi]
  41b890:	pop    ebp
  41b891:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b892:	adc    eax,0xfaa5ab87
  41b897:	mov    bh,0x8c
  41b899:	fisttp WORD PTR [ebp-0x34]
  41b89c:	jbe    0x41b8b7
  41b89e:	repz pop esp
  41b8a0:	(bad)  
  41b8a1:	push   cs
  41b8a2:	dec    edi
  41b8a3:	or     DWORD PTR [ebx+0x67],ecx
  41b8a6:	imul   eax,DWORD PTR [eax+0x50],0x3f
  41b8aa:	std    
  41b8ab:	shl    DWORD PTR [eax+0x4c2cde05],0x15
  41b8b2:	call   0x2b66:0x53fa8e8f
  41b8b9:	popf   
  41b8ba:	sbb    al,0x34
  41b8bc:	rcl    BYTE PTR [esi],1
  41b8be:	scas   eax,DWORD PTR es:[edi]
  41b8bf:	pcmpgtd mm3,QWORD PTR [edx-0x7f]
  41b8c3:	xchg   ebx,eax
  41b8c4:	mov    edi,0xf833fd25
  41b8c9:	or     al,0x5d
  41b8cb:	add    eax,0x4d8e26e6
  41b8d0:	pusha  
  41b8d1:	jne    0x41b86f
  41b8d3:	mov    fs,WORD PTR [ebx-0x5b]
  41b8d6:	add    BYTE PTR [ebx],al
  41b8d8:	add    dl,BYTE PTR [edx+0x68]
  41b8db:	fisubr WORD PTR [edx-0x5c]
  41b8de:	sar    eax,0x22
  41b8e1:	mov    WORD PTR [edx],?
  41b8e3:	and    ebp,ebp
  41b8e5:	xor    DWORD PTR [edi+0x32],eax
  41b8e8:	sbb    bl,ah
  41b8ea:	xchg   edx,eax
  41b8eb:	fldcw  WORD PTR [edx+0x4d622de6]
  41b8f1:	cmp    al,0x5b
  41b8f3:	inc    esi
  41b8f4:	pop    edi
  41b8f5:	push   cs
  41b8f6:	or     eax,0x8c458211
  41b8fb:	cmc    
  41b8fc:	mov    bl,0xe2
  41b8fe:	cs xchg ebp,eax
  41b900:	lahf   
  41b901:	push   ds
  41b902:	mov    dl,0xaf
  41b904:	iret   
  41b905:	test   eax,0xe8d85f42
  41b90a:	dec    ecx
  41b90b:	mov    ah,0x69
  41b90d:	ror    ebp,0x64
  41b910:	iret   
  41b911:	mov    bl,0x4d
  41b913:	pop    es
  41b914:	ja     0x41b981
  41b916:	add    ecx,eax
  41b918:	jp     0x41b8d3
  41b91a:	mov    eax,ds:0xc945c528
  41b91f:	pop    eax
  41b920:	mov    al,ds:0xbe861e98
  41b925:	enter  0xdd1d,0xe7
  41b929:	mov    WORD PTR [esi-0xcde15b5],ds
  41b92f:	retf   0x7d4c
  41b932:	fwait
  41b933:	loop   0x41b8f8
  41b935:	loopne 0x41b8be
  41b937:	inc    eax
  41b938:	pop    edx
  41b939:	inc    edi
  41b93a:	sub    DWORD PTR [eax],ebp
  41b93c:	arpl   si,bx
  41b93e:	push   ss
  41b93f:	pop    esp
  41b940:	mov    DWORD PTR [ecx-0x49],edx
  41b943:	lahf   
  41b944:	adc    esi,0xfffffff0
  41b947:	jno    0x41b9b6
  41b949:	xor    DWORD PTR [ecx+0x50],esp
  41b94c:	fld    QWORD PTR [edi-0x2eba5964]
  41b952:	fnsave [edi]
  41b954:	repz push edi
  41b956:	jle    0x41b94a
  41b958:	xor    DWORD PTR [edx+0x21fabc4c],esp
  41b95e:	inc    edx
  41b95f:	enter  0x9dae,0xa9
  41b963:	imul   eax,DWORD PTR [edx],0xa93bfdd3
  41b969:	adc    edx,DWORD PTR [ebp+0x52690ab7]
  41b96f:	dec    eax
  41b970:	out    dx,al
  41b971:	fistp  WORD PTR ds:0xd12282b0
  41b977:	add    DWORD PTR [edi-0x36],esp
  41b97a:	imul   ecx,DWORD PTR [ecx+0xf],0xffffff9b
  41b97e:	or     al,0x4a
  41b980:	mov    al,0xae
  41b982:	inc    edx
  41b983:	scas   al,BYTE PTR es:[edi]
  41b984:	fidiv  DWORD PTR [edx]
  41b986:	mov    esp,0xef8b3d5b
  41b98b:	cmp    BYTE PTR [esi],cl
  41b98d:	add    esi,ecx
  41b98f:	dec    edi
  41b990:	out    dx,al
  41b991:	popa   
  41b992:	(bad)  
  41b993:	pop    esp
  41b994:	lods   al,BYTE PTR ds:[esi]
  41b995:	adc    cl,BYTE PTR [eax]
  41b997:	sbb    bl,al
  41b999:	xchg   esp,eax
  41b99a:	fcmovnb st,st(0)
  41b99c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b99d:	jp     0x41b957
  41b99f:	pop    ss
  41b9a0:	inc    edi
  41b9a1:	test   ebx,edi
  41b9a3:	div    BYTE PTR [ecx-0x131396ff]
  41b9a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b9aa:	out    0xab,eax
  41b9ac:	jno    0x41b9a2
  41b9ae:	push   0xe1f612d0
  41b9b3:	xchg   ebx,eax
  41b9b4:	ss movs DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41b9b7:	ret    
  41b9b8:	retf   0xa2a
  41b9bb:	and    bl,BYTE PTR [edi-0x400bf129]
  41b9c1:	pop    es
  41b9c2:	shl    DWORD PTR [esi],cl
  41b9c4:	outs   dx,BYTE PTR ds:[esi]
  41b9c5:	popa   
  41b9c6:	stc    
  41b9c7:	bound  ebp,QWORD PTR [eax+0x1a15bdf0]
  41b9cd:	xchg   edi,eax
  41b9ce:	pop    edi
  41b9cf:	les    esi,FWORD PTR [ecx-0x9]
  41b9d2:	out    0x2,al
  41b9d4:	lods   eax,DWORD PTR ds:[esi]
  41b9d5:	mov    al,0x61
  41b9d7:	imul   ecx,DWORD PTR [ecx+0x587394a0],0xe
  41b9de:	adc    ebp,DWORD PTR [edi+0x7f99cf59]
  41b9e4:	je     0x41b9fc
  41b9e6:	sub    eax,0x5a98e3fd
  41b9eb:	push   ecx
  41b9ec:	add    ebp,DWORD PTR [edi]
  41b9ee:	stos   DWORD PTR es:[edi],eax
  41b9ef:	in     al,dx
  41b9f0:	lea    esi,[ebx]
  41b9f2:	test   al,0x3
  41b9f4:	mov    eax,0xea97dfce
  41b9f9:	mov    bl,0xc
  41b9fb:	or     eax,0x6c2e8a53
  41ba00:	mov    ch,0x3f
  41ba02:	add    ebx,edx
  41ba04:	and    DWORD PTR [ecx-0x1dca2416],0xacd1502
  41ba0e:	call   0x64d5:0x4d3a8558
  41ba15:	rcr    BYTE PTR [ebx-0xd0b36ab],1
  41ba1b:	adc    DWORD PTR [edx],ebx
  41ba1d:	sti    
  41ba1e:	outs   dx,DWORD PTR ds:[esi]
  41ba1f:	rcl    ebx,1
  41ba21:	add    DWORD PTR [esi+0x53e79c96],0x3fbc0f50
  41ba2b:	imul   BYTE PTR [ebx+0x77]
  41ba2e:	(bad)  [edx+0x78]
  41ba31:	mov    DWORD PTR [edx-0x76279ee5],0x28ed8eb2
  41ba3b:	inc    DWORD PTR [edi]
  41ba3d:	mov    ds:0x1b173b27,al
  41ba42:	sbb    BYTE PTR [esi],dl
  41ba44:	jge    0x41ba24
  41ba46:	enter  0x9a1e,0xad
  41ba4a:	mov    edx,0xcfdd9c8d
  41ba4f:	xlat   BYTE PTR ds:[ebx]
  41ba50:	bound  ebp,QWORD PTR [edx]
  41ba52:	mov    ebx,0x178be032
  41ba57:	inc    edx
  41ba58:	stos   DWORD PTR es:[edi],eax
  41ba59:	pop    esi
  41ba5a:	nop
  41ba5b:	out    0x2b,eax
  41ba5d:	retf   
  41ba5e:	cmp    edi,DWORD PTR [ebp+0x147544ff]
  41ba64:	xor    al,0xc4
  41ba66:	mov    DWORD PTR [ebp+ebx*4-0x3463ea5d],esp
  41ba6d:	test   eax,0x7e7efa74
  41ba72:	popf   
  41ba73:	mov    DWORD PTR [ebx+0x1409ef32],edi
  41ba79:	mov    al,0x5c
  41ba7b:	add    ah,BYTE PTR [ecx+0x37]
  41ba7e:	out    0x17,al
  41ba80:	(bad)  
  41ba81:	sbb    al,0xd6
  41ba83:	sub    ebx,ebp
  41ba85:	sti    
  41ba86:	jae    0x41ba75
  41ba88:	or     DWORD PTR [ebx-0x4ec3d880],edi
  41ba8e:	ins    BYTE PTR es:[edi],dx
  41ba8f:	js     0x41bafd
  41ba91:	sub    DWORD PTR [edi],esi
  41ba93:	inc    edi
  41ba94:	fs mov esi,0x42588c41
  41ba9a:	rcl    BYTE PTR [ebx+0x258a182b],cl
  41baa0:	pmuludq mm3,QWORD PTR [edi+esi*2-0x45428520]
  41baa8:	dec    edx
  41baa9:	outs   dx,BYTE PTR ds:[esi]
  41baaa:	mov    al,ds:0x5be1478f
  41baaf:	and    eax,0x57878d16
  41bab4:	mov    eax,ds:0x5b1beb26
  41bab9:	dec    ecx
  41baba:	pop    ecx
  41babb:	shl    DWORD PTR [esi-0x7c8f7ca7],cl
  41bac1:	stos   DWORD PTR es:[edi],eax
  41bac2:	clc    
  41bac3:	xchg   BYTE PTR [ebp+0xd],cl
  41bac6:	or     eax,0x306cfed
  41bacb:	push   ebp
  41bacc:	push   ebp
  41bacd:	in     eax,dx
  41bace:	cmp    al,0xcb
  41bad0:	push   edx
  41bad1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bad2:	push   ss
  41bad3:	mov    eax,ds:0x87a81ca9
  41bad8:	out    dx,al
  41bad9:	imul   ebx,edi,0x65f6c63e
  41badf:	xlat   BYTE PTR es:[ebx]
  41bae1:	push   ebx
  41bae2:	xchg   ebp,esp
  41bae4:	mov    al,ds:0xb88f0509
  41bae9:	ins    DWORD PTR es:[edi],dx
  41baea:	out    0xee,al
  41baec:	imul   ebx,DWORD PTR [ebp+0x65a9a8d1],0x7f
  41baf3:	sub    eax,0x77de1044
  41baf8:	inc    edx
  41baf9:	stos   BYTE PTR es:[edi],al
  41bafa:	xchg   edi,eax
  41bafb:	or     eax,0xd4eff168
  41bb00:	cmp    ebp,edx
  41bb02:	out    dx,al
  41bb03:	pusha  
  41bb04:	jp     0x41bace
  41bb06:	mov    ds:0xbe5df103,al
  41bb0b:	sbb    dh,BYTE PTR [ecx]
  41bb0d:	outs   dx,DWORD PTR ds:[esi]
  41bb0e:	xchg   esp,eax
  41bb0f:	mov    bh,0x59
  41bb11:	jnp    0x41bb40
  41bb13:	popf   
  41bb14:	test   al,0x13
  41bb16:	sar    DWORD PTR ds:0x17de93c4,1
  41bb1c:	pop    ss
  41bb1d:	mov    dl,BYTE PTR [esi+0x5b]
  41bb20:	inc    edx
  41bb21:	fwait
  41bb22:	jno    0x41bb5c
  41bb24:	cmp    al,0xbf
  41bb26:	or     esp,DWORD PTR [ebx]
  41bb28:	int    0xff
  41bb2a:	sub    al,al
  41bb2c:	xchg   BYTE PTR [edx+0x1b],al
  41bb2f:	rcl    DWORD PTR [eax],cl
  41bb31:	shr    BYTE PTR ds:0x538eec6,1
  41bb37:	repz scas eax,DWORD PTR es:[di]
  41bb3a:	loope  0x41bb6a
  41bb3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb3d:	dec    ebp
  41bb3e:	cs out 0xfe,al
  41bb41:	rcl    BYTE PTR [ecx+0x40],cl
  41bb44:	std    
  41bb45:	pushf  
  41bb46:	adc    BYTE PTR [ecx-0x58740042],ch
  41bb4c:	sar    bh,cl
  41bb4e:	ret    0xa09a
  41bb51:	into   
  41bb52:	(bad)  
  41bb53:	sbb    eax,0x23208093
  41bb58:	cdq    
  41bb59:	mov    ebp,0xdeec40fa
  41bb5e:	lock jns 0x41bb27
  41bb61:	or     al,0x56
  41bb63:	xor    dh,BYTE PTR [ebx-0xb54220b]
  41bb69:	stc    
  41bb6a:	mov    esp,DWORD PTR [ebx]
  41bb6c:	in     al,0x68
  41bb6e:	cmp    esi,0x2d
  41bb71:	mov    ds,WORD PTR ds:0x60445c57
  41bb77:	sub    esp,DWORD PTR [edx+0x11318ca]
  41bb7d:	add    eax,0x25fe05a4
  41bb82:	mov    ds:0x48b4a45a,eax
  41bb87:	dec    edx
  41bb88:	jnp    0x41bbb0
  41bb8a:	jl     0x41bb3e
  41bb8c:	dec    ebp
  41bb8d:	jbe    0x41bbaf
  41bb8f:	ins    DWORD PTR es:[edi],dx
  41bb90:	xchg   edx,eax
  41bb91:	into   
  41bb92:	leave  
  41bb93:	sahf   
  41bb94:	adc    eax,0xd473b0dd
  41bb99:	ja     0x41bbde
  41bb9b:	ins    DWORD PTR es:[edi],dx
  41bb9c:	in     eax,dx
  41bb9d:	xor    edx,DWORD PTR [edi-0x4f3b3bc0]
  41bba3:	dec    ebp
  41bba4:	ds scas al,BYTE PTR es:[edi]
  41bba6:	(bad)  
  41bba7:	(bad)  
  41bba8:	dec    esp
  41bba9:	test   dl,bh
  41bbab:	pop    edi
  41bbac:	gs cs hlt 
  41bbaf:	pop    es
  41bbb0:	fild   QWORD PTR [edx-0x89274b4]
  41bbb6:	arpl   WORD PTR [eax+0x543ca44a],bp
  41bbbc:	inc    ecx
  41bbbd:	xchg   edx,eax
  41bbbe:	call   0x57c:0x9f70e285
  41bbc5:	jge    0x41bbe4
  41bbc7:	into   
  41bbc8:	(bad)  
  41bbc9:	mov    dl,0xc5
  41bbcb:	loop   0x41bb9d
  41bbcd:	test   al,0xc3
  41bbcf:	rcl    DWORD PTR [edi+0x26eb62fe],cl
  41bbd5:	dec    esi
  41bbd6:	xor    al,0xad
  41bbd8:	mov    DWORD PTR [esi+0x38],eax
  41bbdb:	dec    ebp
  41bbdc:	jmp    0x50b38da3
  41bbe1:	mov    ebp,0xddfc9f99
  41bbe6:	sub    BYTE PTR ds:0x350b,0x39
  41bbec:	xchg   edx,eax
  41bbed:	pop    ds
  41bbee:	xchg   edi,eax
  41bbef:	fldcw  WORD PTR [eax]
  41bbf1:	stos   DWORD PTR es:[edi],eax
  41bbf2:	jmp    0xfc16:0x27680ecf
  41bbf9:	ins    BYTE PTR es:[edi],dx
  41bbfa:	out    dx,al
  41bbfb:	aas    
  41bbfc:	pop    ss
  41bbfd:	iret   
  41bbfe:	int    0xd8
  41bc00:	adc    ecx,ebp
  41bc02:	lds    ebx,FWORD PTR [eax]
  41bc04:	cmc    
  41bc05:	daa    
  41bc06:	xchg   esi,eax
  41bc07:	inc    eax
  41bc08:	jne    0x41bbb0
  41bc0a:	jo     0x41bbed
  41bc0c:	mov    WORD PTR [eax-0x3e],ds
  41bc0f:	pop    ebx
  41bc10:	sar    edi,1
  41bc12:	fsubr  QWORD PTR [edi]
  41bc14:	mov    ecx,db4
  41bc17:	mov    esp,0x2ea70118
  41bc1c:	inc    ebp
  41bc1d:	add    edx,DWORD PTR ss:[ecx]
  41bc20:	inc    eax
  41bc21:	repnz dec eax
  41bc23:	cmp    DWORD PTR [eax+0x55],esi
  41bc26:	xor    ch,BYTE PTR [eax-0x3c]
  41bc29:	imul   esp,ebx,0x54
  41bc2c:	dec    eax
  41bc2d:	push   ss
  41bc2e:	xchg   edi,eax
  41bc2f:	cmp    ebx,eax
  41bc31:	cdq    
  41bc32:	adc    al,0x51
  41bc34:	mov    al,0x39
  41bc36:	or     al,0x6a
  41bc38:	xor    BYTE PTR [edx+0x2de6bddf],0x51
  41bc3f:	adc    dl,BYTE PTR ss:[eax]
  41bc42:	jno    0x41bbd8
  41bc44:	lahf   
  41bc45:	xchg   BYTE PTR [edi+0x7a],ah
  41bc48:	push   esp
  41bc49:	popa   
  41bc4a:	sbb    BYTE PTR ss:[eax+0x60],0x6
  41bc4f:	rol    ebx,1
  41bc51:	test   DWORD PTR [edx],esp
  41bc53:	sub    DWORD PTR [ebp-0x3e900287],esi
  41bc59:	xchg   ecx,eax
  41bc5a:	aad    0xdd
  41bc5c:	cld    
  41bc5d:	hlt    
  41bc5e:	ret    0x8af8
  41bc61:	mov    ebx,0x3b783ad8
  41bc66:	fld    QWORD PTR [esi+0x71]
  41bc69:	sub    eax,DWORD PTR [ecx+0x66137264]
  41bc6f:	sbb    bh,bh
  41bc71:	outs   dx,BYTE PTR ds:[esi]
  41bc72:	cli    
  41bc73:	jecxz  0x41bca7
  41bc75:	test   BYTE PTR [ecx],bl
  41bc77:	push   0x41
  41bc79:	(bad)  
  41bc7a:	mov    dl,0xe3
  41bc7c:	mov    al,ds:0x22f15302
  41bc81:	sub    DWORD PTR [esi],edi
  41bc83:	mov    cl,0xbc
  41bc85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc86:	outs   dx,DWORD PTR ds:[esi]
  41bc87:	cwde   
  41bc88:	(bad)  
  41bc89:	jg     0x41bcfb
  41bc8b:	popa   
  41bc8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc8d:	mov    dl,0x53
  41bc8f:	fdivr  QWORD PTR [edx+0x78]
  41bc92:	cmp    eax,0xc6385c0a
  41bc97:	or     BYTE PTR [esp+edx*1+0x2],cl
  41bc9b:	pushf  
  41bc9c:	rol    ah,cl
  41bc9e:	ror    DWORD PTR ds:0xaf927958,0x53
  41bca5:	cmp    BYTE PTR [esi],bl
  41bca7:	iret   
  41bca8:	xchg   ebp,eax
  41bca9:	div    BYTE PTR [ebp+0x3e]
  41bcac:	fisub  WORD PTR [edx-0x60]
  41bcaf:	sbb    eax,0x5006486f
  41bcb4:	pop    ebp
  41bcb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bcb6:	mov    BYTE PTR [esi-0x7d],ch
  41bcb9:	pusha  
  41bcba:	adc    cl,BYTE PTR [edi]
  41bcbc:	fwait
  41bcbd:	cmp    cl,BYTE PTR [ebx]
  41bcbf:	rcl    BYTE PTR [esp+eiz*2],0x0
  41bcc3:	sub    eax,0xccb81c4f
  41bcc8:	icebp  
  41bcc9:	ins    DWORD PTR es:[edi],dx
  41bcca:	xchg   esi,eax
  41bccb:	ret    
  41bccc:	mov    eax,ds:0xd5669033
  41bcd1:	btc    DWORD PTR [esi],ebp
  41bcd4:	out    dx,eax
  41bcd5:	adc    edi,DWORD PTR [esi-0x5e7966c5]
  41bcdb:	cli    
  41bcdc:	imul   ebp,DWORD PTR [esi],0xffffff91
  41bcdf:	sbb    eax,0x22aea724
  41bce4:	xchg   edi,eax
  41bce5:	mov    bl,0x74
  41bce7:	inc    ecx
  41bce8:	fsubr  DWORD PTR [eax+0x54]
  41bceb:	jnp    0x41bd45
  41bced:	mov    al,ds:0xb910d9ef
  41bcf2:	inc    ebx
  41bcf3:	push   0xfffffffa
  41bcf5:	mov    eax,ds:0x93adf2af
  41bcfa:	enter  0x14a8,0xd5
  41bcfe:	call   0xd8bf:0xdb01bbc5
  41bd05:	jecxz  0x41bd2a
  41bd07:	(bad)  
  41bd08:	dec    edi
  41bd09:	(bad)  
  41bd0a:	(bad)  
  41bd0b:	xor    al,cl
  41bd0d:	xor    DWORD PTR [edx*2-0x5f309918],0x43
  41bd15:	push   ebx
  41bd16:	dec    ebx
  41bd17:	xlat   BYTE PTR cs:[ebx]
  41bd19:	jle    0x41bd11
  41bd1b:	dec    edx
  41bd1c:	xchg   esp,eax
  41bd1d:	or     DWORD PTR [edx+0x7b],esi
  41bd20:	cmp    DWORD PTR [eax],esi
  41bd22:	xlat   BYTE PTR ds:[ebx]
  41bd23:	lods   eax,DWORD PTR ds:[esi]
  41bd24:	les    eax,FWORD PTR [esi-0x6871e038]
  41bd2a:	std    
  41bd2b:	xor    al,0x8d
  41bd2d:	aas    
  41bd2e:	sub    eax,0xa7ce025
  41bd33:	addr16 jnp 0x41bd57
  41bd36:	js     0x41bcc7
  41bd38:	data16 sahf 
  41bd3a:	nop
  41bd3b:	dec    edx
  41bd3c:	dec    eax
  41bd3d:	and    esp,ebx
  41bd3f:	pop    esp
  41bd40:	adc    BYTE PTR [ecx-0x47],bh
  41bd43:	mov    eax,ds:0x7a068d77
  41bd48:	lea    ecx,[ebx-0x13]
  41bd4b:	test   al,0x27
  41bd4d:	mov    esp,0x26052b9c
  41bd52:	rol    ecx,cl
  41bd54:	adc    BYTE PTR [edx-0x23],bl
  41bd57:	push   ebx
  41bd58:	xor    ebp,DWORD PTR [esi]
  41bd5a:	aas    
  41bd5b:	inc    edx
  41bd5c:	shl    esp,0xdd
  41bd5f:	push   ecx
  41bd60:	fsin   
  41bd62:	sub    edi,eax
  41bd64:	mov    edi,DWORD PTR [edi]
  41bd66:	or     BYTE PTR [ebx],bh
  41bd68:	cmp    al,0xd3
  41bd6a:	das    
  41bd6b:	xchg   BYTE PTR [edx-0x14daa90b],dl
  41bd71:	sbb    dl,dl
  41bd73:	ds or  cl,ah
  41bd76:	test   al,0x66
  41bd78:	and    al,0xa7
  41bd7a:	mov    WORD PTR fs:0x4faad077,cs
  41bd81:	sub    ch,dh
  41bd83:	pop    esi
  41bd84:	jmp    0x41bd8f
  41bd86:	inc    eax
  41bd87:	sub    cl,0x52
  41bd8a:	inc    edx
  41bd8b:	add    eax,0xc85e2710
  41bd90:	add    bl,BYTE PTR [eax+ecx*8-0x7a]
  41bd94:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41bd96:	(bad)  
  41bd97:	adc    BYTE PTR [edi],dl
  41bd99:	mov    bl,BYTE PTR [eax-0x506817f9]
  41bd9f:	sbb    bl,BYTE PTR [ebx-0x1]
  41bda2:	dec    edx
  41bda3:	shl    ah,1
  41bda5:	dec    esp
  41bda6:	aaa    
  41bda7:	adc    BYTE PTR [ecx+eiz*4+0x618caff],cl
  41bdae:	sub    al,0x2b
  41bdb0:	ret    
  41bdb1:	loopne 0x41bd96
  41bdb3:	pop    ebp
  41bdb4:	inc    ebx
  41bdb5:	or     BYTE PTR [esi-0x4e6e779],ah
  41bdbb:	pop    esp
  41bdbc:	push   cs
  41bdbd:	bound  esp,QWORD PTR [edi-0x3d]
  41bdc0:	lods   eax,DWORD PTR ds:[esi]
  41bdc1:	fisubr WORD PTR [ebx-0x26]
  41bdc4:	jl     0x41be0c
  41bdc6:	xchg   esp,eax
  41bdc7:	or     ebx,ebx
  41bdc9:	and    eax,0x190898e8
  41bdce:	repz pop ds
  41bdd0:	or     BYTE PTR [edi-0x28310922],ah
  41bdd6:	inc    ebx
  41bdd7:	mov    dh,BYTE PTR [esi]
  41bdd9:	mov    dl,BYTE PTR ds:0xcf445104
  41bddf:	nop
  41bde0:	inc    edx
  41bde1:	fisubr DWORD PTR [ebx+ecx*4+0x5b87756d]
  41bde8:	pop    esp
  41bde9:	inc    edi
  41bdea:	pop    eax
  41bdeb:	xchg   esp,eax
  41bdec:	outs   dx,BYTE PTR ds:[esi]
  41bded:	mov    ecx,0xa678159b
  41bdf2:	popa   
  41bdf3:	cmp    ch,BYTE PTR [ebp-0x1d]
  41bdf6:	mov    bl,0xa3
  41bdf8:	cdq    
  41bdf9:	loope  0x41be6b
  41bdfb:	mov    ah,0x46
  41bdfd:	std    
  41bdfe:	or     al,0x1
  41be00:	loope  0x41bdc3
  41be02:	outs   dx,BYTE PTR ds:[esi]
  41be03:	xor    al,BYTE PTR [esi]
  41be05:	add    esp,0x1d
  41be08:	ficom  DWORD PTR [esi]
  41be0a:	cmp    esi,DWORD PTR [esi+0x6d]
  41be0d:	ja     0x41bd94
  41be0f:	xor    al,0x7c
  41be11:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be13:	sub    esp,DWORD PTR [eax]
  41be15:	adc    BYTE PTR ds:0xba9bab47,ah
  41be1b:	test   eax,0xbb487c56
  41be20:	pop    esp
  41be21:	int3   
  41be22:	jp     0x41be41
  41be24:	pop    ebp
  41be25:	ficom  WORD PTR [eax+0x1f]
  41be28:	and    edi,DWORD PTR [ebp+0x39efc638]
  41be2e:	mov    ebx,0x9ade7622
  41be33:	lods   eax,DWORD PTR ds:[esi]
  41be34:	mov    ?,WORD PTR [ebx+0x284658f8]
  41be3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be3b:	inc    esp
  41be3c:	das    
  41be3d:	pop    ebx
  41be3e:	shl    DWORD PTR [edx],cl
  41be40:	test   DWORD PTR [edi+ebx*4],0x9159e70e
  41be47:	cmp    BYTE PTR [bx+si],bl
  41be4a:	push   edx
  41be4b:	inc    ecx
  41be4c:	call   0x79d:0xfbcac9f5
  41be53:	or     ah,BYTE PTR [esi+0x55da1341]
  41be59:	retf   0x741b
  41be5c:	and    dh,BYTE PTR [ecx-0x5c668090]
  41be62:	ins    DWORD PTR es:[edi],dx
  41be63:	pop    ecx
  41be64:	xor    eax,0x5a36acd1
  41be69:	emms   
  41be6b:	adc    DWORD PTR [ecx+0x6b887cc6],esi
  41be71:	je     0x41be3f
  41be73:	sar    bl,1
  41be75:	cmp    eax,esp
  41be77:	retf   
  41be78:	stos   DWORD PTR es:[edi],eax
  41be79:	sub    edi,esp
  41be7b:	aas    
  41be7c:	int3   
  41be7d:	dec    esp
  41be7e:	rol    BYTE PTR [ebx],1
  41be80:	push   cs
  41be81:	(bad)  
  41be82:	push   0x52
  41be84:	sbb    eax,0x44c85ea8
  41be89:	fisttp WORD PTR [esi]
  41be8b:	push   ebp
  41be8c:	inc    edi
  41be8d:	in     eax,dx
  41be8e:	test   al,0x36
  41be90:	jp     0x41be4a
  41be92:	pop    es
  41be93:	fbstp  TBYTE PTR [ebp+0x54c95286]
  41be99:	add    eax,0x8c4fea03
  41be9e:	mov    dl,0xf1
  41bea0:	rcr    BYTE PTR [edi+ebp*8+0x56],cl
  41bea4:	push   ebp
  41bea5:	fwait
  41bea6:	push   esi
  41bea7:	pushf  
  41bea8:	jo     0x41beb7
  41beaa:	daa    
  41beab:	pop    edi
  41beac:	cmp    al,0x64
  41beae:	arpl   WORD PTR [edx+0x77f48fc3],cx
  41beb4:	scas   eax,DWORD PTR es:[edi]
  41beb5:	xchg   edx,eax
  41beb6:	mov    esp,0xc2ec3638
  41bebb:	add    eax,edi
  41bebd:	pushf  
  41bebe:	dec    edx
  41bebf:	gs int 0x37
  41bec2:	mov    al,0x34
  41bec4:	xchg   DWORD PTR [edx],ebx
  41bec6:	add    edx,DWORD PTR [edx+eiz*2-0xf584122]
  41becd:	(bad)  
  41bece:	sbb    al,0xc
  41bed0:	and    BYTE PTR [ebx-0x66],bh
  41bed3:	push   es
  41bed4:	mov    esp,0xaadb6a70
  41bed9:	jbe    0x41bf39
  41bedb:	retf   0x1930
  41bede:	mov    edi,0x133c6306
  41bee3:	mov    al,0x63
  41bee5:	dec    ebx
  41bee6:	push   ds
  41bee7:	dec    ecx
  41bee8:	jb     0x41bf1e
  41beea:	cmp    eax,0xea2ecbe
  41beef:	inc    esi
  41bef0:	test   al,0x23
  41bef2:	cmp    al,0xc
  41bef4:	dec    edi
  41bef5:	aaa    
  41bef6:	jo     0x41bedd
  41bef8:	inc    edx
  41bef9:	jle    0x41beed
  41befb:	pop    edx
  41befc:	jbe    0x41bf66
  41befe:	ror    BYTE PTR [edi*1+0x746f106],0xa1
  41bf06:	mov    ah,0x14
  41bf08:	cmp    DWORD PTR [eax+0x16d86fe],esp
  41bf0e:	adc    BYTE PTR [edi],0x52
  41bf11:	sbb    BYTE PTR [ecx],bl
  41bf13:	shl    BYTE PTR [ebx],1
  41bf15:	sbb    bl,bh
  41bf17:	repnz in eax,0x9d
  41bf1a:	cmovl  edx,DWORD PTR [ecx]
  41bf1d:	aaa    
  41bf1e:	test   BYTE PTR [esi-0x14],0xf0
  41bf22:	add    BYTE PTR [edx+esi*4-0x6a],ch
  41bf26:	and    bl,BYTE PTR [esi]
  41bf28:	aad    0xe0
  41bf2a:	je     0x41bef2
  41bf2c:	ret    0xb745
  41bf2f:	mov    esp,0xec081bd2
  41bf34:	pop    ebx
  41bf35:	popa   
  41bf36:	mov    edx,0x99b5679d
  41bf3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf3c:	or     eax,0x4c0a30c7
  41bf41:	scas   al,BYTE PTR es:[edi]
  41bf42:	stos   BYTE PTR es:[edi],al
  41bf43:	cmp    cl,BYTE PTR [ebp-0x401ad247]
  41bf49:	ret    
  41bf4a:	mov    al,ds:0xd7be462b
  41bf4f:	ror    BYTE PTR [esi],0x1a
  41bf52:	mov    DWORD PTR [esi+0xd286958],esi
  41bf58:	mov    ebp,0x1e471d3b
  41bf5d:	fwait
  41bf5e:	jge    0x41bf00
  41bf60:	in     eax,0x32
  41bf62:	retf   0xfa7c
  41bf65:	dec    eax
  41bf66:	ret    0xe271
  41bf69:	mov    dh,0x6d
  41bf6b:	dec    ebx
  41bf6c:	mov    dh,0x93
  41bf6f:	or     al,0x4b
  41bf71:	js     0x41bf90
  41bf73:	pop    ss
  41bf74:	push   cs
  41bf75:	gs aad 0xdf
  41bf78:	fst    DWORD PTR [edx]
  41bf7a:	nop
  41bf7b:	sbb    ch,cl
  41bf7d:	fistp  WORD PTR [ecx+0x45]
  41bf80:	bound  edx,QWORD PTR [esi+ebx*1+0x180e135e]
  41bf87:	mov    bh,0xab
  41bf89:	add    eax,0x591fad1b
  41bf8e:	pop    ecx
  41bf8f:	push   edx
  41bf90:	mov    eax,0x4d96dace
  41bf95:	pop    es
  41bf96:	fs dec ebp
  41bf98:	mov    al,BYTE PTR [eax]
  41bf9a:	test   DWORD PTR [edi+0x58030ca9],esp
  41bfa0:	repnz in eax,dx
  41bfa2:	mov    dl,0x4d
  41bfa4:	jle    0x41bf68
  41bfa6:	jmp    0x2d2e7bdd
  41bfab:	push   ebp
  41bfac:	jne    0x41c027
  41bfae:	dec    edx
  41bfaf:	jge    0x41bfec
  41bfb1:	dec    esi
  41bfb2:	xchg   ebp,eax
  41bfb3:	or     DWORD PTR [eax+0x54],edi
  41bfb6:	fdivr  DWORD PTR [edi-0x7f89d7f2]
  41bfbc:	xor    DWORD PTR [ecx+ecx*8+0x2a],edx
  41bfc0:	push   esi
  41bfc1:	mov    cl,0x62
  41bfc3:	(bad)  
  41bfc4:	data16 jne 0x41bf4c
  41bfc7:	dec    esp
  41bfc8:	repnz aam 0x97
  41bfcb:	sub    edi,DWORD PTR [ebp+0x54b868f3]
  41bfd1:	adc    DWORD PTR [edi+0x2def3510],0xffffffac
  41bfd8:	test   al,0x22
  41bfda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfdb:	push   edi
  41bfdc:	jo     0x41bfb0
  41bfde:	mov    bl,0xb9
  41bfe0:	add    BYTE PTR [ebx-0x4],al
  41bfe3:	test   eax,0x1c76472c
  41bfe8:	mov    dl,0xb0
  41bfea:	xlat   BYTE PTR fs:[ebx]
  41bfec:	push   ss
  41bfed:	xchg   esp,eax
  41bfee:	(bad)  
  41bfef:	ins    BYTE PTR es:[edi],dx
  41bff0:	cmp    BYTE PTR [ecx-0x4bf7406d],0xe3
  41bff7:	sbb    ah,BYTE PTR [ecx]
  41bff9:	pop    ebx
  41bffa:	neg    bl
  41bffc:	loopne 0x41bfa2
  41bffe:	jmp    0x41bf81
  41c000:	loope  0x41c046
  41c002:	iret   
  41c003:	retf   0x91be
  41c006:	test   BYTE PTR [esi],cl
  41c008:	(bad)  
  41c009:	sbb    bl,BYTE PTR [ebx-0x75efc32]
  41c00f:	mov    esi,DWORD PTR [esi-0x3a493f65]
  41c015:	push   0xffffffeb
  41c017:	out    dx,eax
  41c018:	cld    
  41c019:	aas    
  41c01a:	mov    dl,0xf3
  41c01c:	cli    
  41c01d:	inc    edx
  41c01e:	mov    esi,0x30ccebd2
  41c023:	and    al,0x5a
  41c025:	iret   
  41c026:	(bad)  
  41c027:	int3   
  41c028:	sub    eax,0x53d6d66d
  41c02d:	(bad)  
  41c02e:	mov    edx,0xb928c1bb
  41c033:	mov    eax,ds:0xdcfdb74f
  41c038:	xchg   esp,eax
  41c039:	adc    al,ch
  41c03b:	mov    BYTE PTR [eax],dl
  41c03d:	hlt    
  41c03e:	push   ebx
  41c03f:	mov    edx,edi
  41c041:	(bad)  
  41c042:	loop   0x41c094
  41c044:	dec    edi
  41c045:	hlt    
  41c046:	xchg   BYTE PTR [ebp+0x1f6d8351],ah
  41c04c:	lea    ebx,[ebx-0x35860201]
  41c052:	jmp    DWORD PTR [edi-0x44ee969d]
  41c058:	mov    bh,0x15
  41c05a:	sub    dh,BYTE PTR [ecx+0x2e]
  41c05d:	retf   0x1ca1
  41c060:	cli    
  41c061:	data16 mov bh,0x4a
  41c064:	fucomip st,st(5)
  41c066:	call   DWORD PTR [esi-0x33]
  41c069:	push   cs
  41c06a:	and    dl,ch
  41c06c:	retf   
  41c06d:	xchg   ecx,eax
  41c06e:	pop    esp
  41c06f:	xor    al,BYTE PTR [edi]
  41c071:	ins    BYTE PTR es:[edi],dx
  41c072:	into   
  41c073:	daa    
  41c074:	mov    ebx,0x14ec6ef
  41c079:	repz cld 
  41c07b:	pop    esp
  41c07c:	ins    DWORD PTR es:[edi],dx
  41c07d:	out    dx,eax
  41c07e:	inc    esi
  41c07f:	ret    
  41c080:	in     eax,0xe3
  41c082:	dec    edi
  41c083:	jne    0x41c02b
  41c085:	push   esp
  41c086:	pop    es
  41c087:	imul   ch
  41c089:	inc    esi
  41c08a:	(bad)  
  41c08b:	iret   
  41c08c:	and    esp,ebx
  41c08e:	repz dec esp
  41c090:	dec    esi
  41c091:	pusha  
  41c092:	and    BYTE PTR [eax],dl
  41c094:	jge    0x41c08c
  41c096:	pop    es
  41c097:	out    0xeb,al
  41c099:	test   al,0xb5
  41c09b:	jl     0x41c0fd
  41c09d:	mov    ds:0x71d4b56c,al
  41c0a2:	pop    eax
  41c0a3:	jp     0x41c066
  41c0a5:	(bad)  
  41c0a6:	fmul   QWORD PTR [ecx+esi*1]
  41c0a9:	and    BYTE PTR [ecx],0x33
  41c0ac:	cmp    ecx,DWORD PTR [edi-0x5d]
  41c0af:	sbb    al,0x36
  41c0b1:	mov    eax,0xbc1b8c67
  41c0b6:	cmp    al,BYTE PTR [edx-0x303f6367]
  41c0bc:	(bad)  
  41c0bd:	imul   ebp,DWORD PTR [eax+edi*1-0x9],0x16ec9741
  41c0c5:	(bad)  
  41c0c7:	xor    eax,ebx
  41c0c9:	not    BYTE PTR [edx+eiz*8+0x1ab61f2f]
  41c0d0:	mov    edi,0xbf3c243
  41c0d5:	sub    eax,0xa69a7e15
  41c0da:	cs cld 
  41c0dc:	nop
  41c0dd:	adc    eax,0x386e1f3d
  41c0e2:	mov    edx,0x1c08d54e
  41c0e7:	bound  ebp,QWORD PTR [edx-0x64d758b]
  41c0ed:	gs cmp bl,dh
  41c0f0:	sub    bh,bh
  41c0f2:	pop    ss
  41c0f3:	dec    ebx
  41c0f4:	dec    ecx
  41c0f5:	lea    esi,[esi+0x79]
  41c0f8:	mov    eax,ds:0x1dae101a
  41c0fd:	fbld   TBYTE PTR [edi]
  41c0ff:	test   edi,eax
  41c101:	mov    eax,0x9ffa9a27
  41c106:	into   
  41c107:	jae    0x41c14f
  41c109:	pusha  
  41c10a:	xchg   BYTE PTR [ecx-0x126861c9],cl
  41c110:	mov    dh,0xbc
  41c112:	pop    ebx
  41c113:	fidiv  WORD PTR [ebx+ebp*1-0x43fd2d88]
  41c11a:	adc    DWORD PTR [edi],esi
  41c11c:	add    BYTE PTR [esi+ecx*2],al
  41c11f:	mov    BYTE PTR [eax+0x6c],bh
  41c122:	sbb    DWORD PTR [ecx],ecx
  41c124:	mov    edx,0x908106b5
  41c129:	call   0x59ed:0x96055469
  41c130:	xor    ebx,DWORD PTR [edi]
  41c132:	xlat   BYTE PTR ds:[ebx]
  41c133:	pop    edx
  41c134:	ins    DWORD PTR es:[edi],dx
  41c135:	mov    ds:0x3cff014b,al
  41c13a:	dec    ebp
  41c13b:	or     BYTE PTR [eax+ebx*4-0x7f],dl
  41c13f:	cwde   
  41c140:	xor    edx,DWORD PTR [esi+0x45]
  41c143:	xor    ecx,ecx
  41c145:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c146:	lahf   
  41c147:	(bad)  
  41c148:	pop    esi
  41c149:	ins    BYTE PTR es:[edi],dx
  41c14a:	or     eax,0xc5f6e673
  41c14f:	or     BYTE PTR [edi-0x462b713d],cl
  41c155:	jmp    0x41c10c
  41c157:	shl    DWORD PTR [eax-0x7a],1
  41c15a:	add    DWORD PTR [ecx+0x51ca03a9],0xc428fd2a
  41c164:	call   0xc2967782
  41c169:	(bad)  
  41c16a:	or     ecx,DWORD PTR [eax]
  41c16c:	sahf   
  41c16d:	push   ecx
  41c16e:	mov    edx,0x284887e2
  41c173:	lahf   
  41c174:	xchg   DWORD PTR [esi+esi*1],edx
  41c177:	jmp    0x41c1e7
  41c179:	pop    eax
  41c17a:	nop
  41c17b:	xchg   BYTE PTR [esi],bl
  41c17d:	jo     0x41c122
  41c17f:	lods   eax,DWORD PTR ds:[esi]
  41c180:	loop   0x41c1d6
  41c182:	xor    ebp,eax
  41c184:	ret    0x7f12
  41c187:	cwde   
  41c188:	sub    eax,DWORD PTR [ecx+0xc]
  41c18b:	cmp    ebx,ebx
  41c18d:	in     al,dx
  41c18e:	rcl    DWORD PTR [edx],cl
  41c190:	(bad)  
  41c191:	xlat   BYTE PTR ds:[ebx]
  41c192:	jecxz  0x41c1e2
  41c194:	cld    
  41c195:	cmp    esi,esi
  41c197:	cmp    al,0xef
  41c199:	data16 scas al,BYTE PTR es:[edi]
  41c19b:	inc    eax
  41c19c:	sar    DWORD PTR [ecx],cl
  41c19e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c19f:	sbb    DWORD PTR [ebp-0x4d],ecx
  41c1a2:	into   
  41c1a3:	mov    eax,ds:0xdd6d28a3
  41c1a8:	sbb    eax,0x4359ecc5
  41c1ad:	fisttp DWORD PTR [esi+0x78]
  41c1b0:	test   eax,0x727c4d10
  41c1b5:	ret    0xa80e
  41c1b8:	sahf   
  41c1b9:	lods   eax,DWORD PTR ds:[esi]
  41c1ba:	popf   
  41c1bb:	ret    
  41c1bc:	stc    
  41c1bd:	iret   
  41c1be:	lds    ebx,FWORD PTR [edi+0x411ee2bd]
  41c1c4:	jne    0x41c172
  41c1c6:	inc    esp
  41c1c7:	loop   0x41c177
  41c1c9:	mov    bl,ch
  41c1cb:	imul   ebp,DWORD PTR [edi+0x29deda1e],0xffffffc1
  41c1d2:	clc    
  41c1d3:	sbb    BYTE PTR [esi+0x3047e146],ah
  41c1d9:	stc    
  41c1da:	cmp    ch,dl
  41c1dc:	lods   al,BYTE PTR ds:[esi]
  41c1dd:	push   esp
  41c1de:	rol    DWORD PTR [edi+0x15],0x20
  41c1e2:	xchg   ebx,eax
  41c1e3:	or     al,0x6b
  41c1e5:	out    0xac,eax
  41c1e7:	inc    ebx
  41c1e8:	push   ebx
  41c1e9:	push   esi
  41c1ea:	shl    BYTE PTR [edx+esi*1+0x17fcc0ea],1
  41c1f1:	aad    0xb7
  41c1f3:	retf   
  41c1f4:	sub    BYTE PTR [ebp-0x2356c3cd],dh
  41c1fa:	cmp    bh,BYTE PTR [edx+edx*8-0x30]
  41c1fe:	loop   0x41c243
  41c200:	ret    
  41c201:	add    al,0x8d
  41c203:	jp     0x41c1a3
  41c205:	aas    
  41c206:	dec    ecx
  41c207:	pop    esp
  41c208:	in     eax,0x38
  41c20a:	push   ecx
  41c20b:	jno    0x41c1ff
  41c20d:	or     al,0x4c
  41c20f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c210:	push   edx
  41c211:	jne    0x41c222
  41c213:	cmp    dh,bl
  41c215:	or     ecx,DWORD PTR [eax-0x8905b4d]
  41c21b:	dec    edx
  41c21c:	out    dx,al
  41c21d:	add    BYTE PTR [ebp+0x59],0x91
  41c221:	pop    ds
  41c222:	dec    ebx
  41c223:	ja     0x41c258
  41c225:	(bad)  
  41c226:	fs test al,0xa3
  41c22a:	sbb    ebx,DWORD PTR [eax+edx*2]
  41c22d:	add    ebx,DWORD PTR [eax-0x3b]
  41c230:	into   
  41c231:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c232:	shl    DWORD PTR [ecx-0x132ebcb4],0x9e
  41c239:	fmul   st(7),st
  41c23b:	cmp    BYTE PTR [edi+esi*4-0x16],0x32
  41c240:	andps  xmm0,XMMWORD PTR [esi-0x41]
  41c244:	mov    al,0xbe
  41c246:	sub    DWORD PTR [eax],0x4ed94ccc
  41c24c:	jns    0x41c1e6
  41c24e:	(bad)  
  41c24f:	jp     0x41c244
  41c251:	push   ecx
  41c252:	lods   al,BYTE PTR ds:[esi]
  41c253:	aam    0x22
  41c255:	sbb    cl,dl
  41c257:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c258:	in     eax,0x9
  41c25a:	sbb    al,0x8e
  41c25c:	test   ebx,eax
  41c25e:	stos   BYTE PTR es:[edi],al
  41c25f:	mov    dh,0xcd
  41c261:	pop    ds
  41c262:	mov    dh,BYTE PTR [ebx+0x34]
  41c265:	mov    esp,0x21d760ae
  41c26a:	adc    dl,0x62
  41c26d:	add    DWORD PTR [edi+0x2e23022f],esi
  41c273:	mov    ah,0xb3
  41c275:	mov    esp,0xa12e94f6
  41c27a:	jle    0x41c264
  41c27c:	pop    ecx
  41c27d:	xchg   ecx,eax
  41c27e:	out    0x87,eax
  41c280:	or     ebx,eax
  41c282:	push   ebp
  41c283:	sub    al,0x15
  41c285:	xchg   ecx,eax
  41c286:	sbb    al,0x6b
  41c288:	inc    esp
  41c289:	fwait
  41c28a:	enter  0xefbd,0xb1
  41c28e:	rcl    DWORD PTR [esi],0x17
  41c291:	xor    al,0x4b
  41c293:	cmp    al,0x40
  41c295:	add    cl,ah
  41c297:	sbb    DWORD PTR [edi+edi*2-0x6b],eax
  41c29b:	in     eax,0x61
  41c29d:	cwde   
  41c29e:	sub    BYTE PTR [ebp+0x65289f43],dl
  41c2a4:	push   cs
  41c2a5:	jp     0x41c272
  41c2a7:	adc    ah,BYTE PTR [ecx]
  41c2a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2aa:	fdiv   QWORD PTR [edi-0x52]
  41c2ad:	xchg   edi,eax
  41c2ae:	imul   edx,edx,0x32389726
  41c2b4:	pop    ecx
  41c2b5:	jmp    FWORD PTR [eax-0x53]
  41c2b8:	cwde   
  41c2b9:	mov    al,ds:0xaa1810f7
  41c2be:	and    edi,DWORD PTR [edx-0x33df7631]
  41c2c4:	(bad)
  41c2c7:	mov    bl,0x46
  41c2c9:	int    0x9
  41c2cb:	push   ecx
  41c2cc:	lea    ebp,[edx-0x1fe90dcf]
  41c2d2:	gs int 0xc1
  41c2d5:	cmp    al,0x87
  41c2d7:	jbe    0x41c340
  41c2d9:	sar    BYTE PTR [esp+edx*4],cl
  41c2dc:	(bad)
  41c2df:	lods   eax,DWORD PTR ds:[esi]
  41c2e0:	gs stos DWORD PTR es:[edi],eax
  41c2e2:	hlt    
  41c2e3:	pop    ebp
  41c2e4:	push   esp
  41c2e5:	jne    0x41c29f
  41c2e7:	aad    0x4f
  41c2e9:	call   0xede12f82
  41c2ee:	pop    ss
  41c2ef:	fnstenv [edx]
  41c2f1:	inc    edi
  41c2f2:	std    
  41c2f3:	inc    ecx
  41c2f4:	ret    0x4bc1
  41c2f7:	fcmovnu st,st(6)
  41c2f9:	xlat   BYTE PTR ds:[ebx]
  41c2fa:	mov    esp,0x3be66387
  41c2ff:	add    cl,ah
  41c301:	aad    0xae
  41c303:	loope  0x41c2cd
  41c305:	xchg   DWORD PTR [eax+ebp*8+0x192eee2e],ebx
  41c30c:	mov    esi,0x53597a6f
  41c311:	int3   
  41c312:	push   eax
  41c313:	js     0x41c2ee
  41c315:	fs pop esp
  41c317:	ins    BYTE PTR es:[edi],dx
  41c318:	mov    ecx,0xd2de09e0
  41c31d:	push   ecx
  41c31e:	add    al,0xa0
  41c320:	aam    0xc0
  41c322:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c323:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c324:	ror    ch,cl
  41c326:	retf   0x736e
  41c329:	and    BYTE PTR [esi],bl
  41c32b:	adc    eax,0xfbe28e6
  41c330:	shl    DWORD PTR [ecx],1
  41c332:	enter  0xaa01,0x6e
  41c336:	and    BYTE PTR [ebp-0xf377345],dh
  41c33c:	mov    ds:0x73441eec,al
  41c341:	cld    
  41c342:	and    al,0x74
  41c344:	loop   0x41c2fc
  41c346:	inc    edx
  41c347:	stc    
  41c348:	stc    
  41c349:	cs shl ebp,cl
  41c34c:	and    eax,0xa42b81b2
  41c351:	add    bl,ch
  41c353:	scas   al,BYTE PTR es:[edi]
  41c354:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c355:	ja     0x41c2f7
  41c357:	cmp    al,0x92
  41c359:	fs loopne 0x41c33d
  41c35c:	outs   dx,DWORD PTR ds:[esi]
  41c35d:	mov    edx,0x311356bc
  41c362:	lea    esi,fs:0x940627f1
  41c369:	xchg   ecx,eax
  41c36a:	cmp    DWORD PTR [edi+0x77],esi
  41c36d:	call   DWORD PTR [edi]
  41c36f:	(bad)  
  41c370:	call   0xf8360519
  41c375:	or     esp,DWORD PTR ds:0x3371fecd
  41c37b:	stos   DWORD PTR es:[edi],eax
  41c37c:	std    
  41c37d:	frstor [eax+0x4cdc578d]
  41c383:	cmp    esi,DWORD PTR [edx+0x531de336]
  41c389:	cvtps2pi mm0,QWORD PTR ds:0xe1117d6c
  41c390:	cmc    
  41c391:	test   eax,0xbe1b7abc
  41c396:	stos   BYTE PTR es:[edi],al
  41c397:	mov    ebp,0x843ff0fb
  41c39c:	mov    esp,0xad99be35
  41c3a1:	sbb    eax,edi
  41c3a3:	push   ds
  41c3a4:	ds mov edi,0xb7a866d
  41c3aa:	add    eax,0x17b55512
  41c3af:	shr    BYTE PTR [esi-0x38],0xbe
  41c3b3:	xlat   BYTE PTR ds:[ebx]
  41c3b4:	leave  
  41c3b5:	xchg   ebx,eax
  41c3b6:	jge    0x41c3b4
  41c3b8:	or     eax,0x8e3df6d0
  41c3bd:	gs scas eax,DWORD PTR es:[edi]
  41c3bf:	and    ch,BYTE PTR [esp+ecx*1-0x284e5bdf]
  41c3c6:	mov    edx,0xd2587ab
  41c3cb:	scas   al,BYTE PTR es:[edi]
  41c3cc:	pusha  
  41c3cd:	out    0x3a,al
  41c3cf:	jne    0x41c3d2
  41c3d1:	sub    eax,0xedef97a1
  41c3d6:	call   0x94b2:0x4060bfee
  41c3dd:	mov    ds:0xd8d8074d,eax
  41c3e2:	shr    DWORD PTR [ebx+ecx*4-0x67d69d77],cl
  41c3e9:	or     eax,0x3df2ca5b
  41c3ee:	cmc    
  41c3ef:	sbb    edx,DWORD PTR [edi+0xe]
  41c3f2:	fist   DWORD PTR [ebp-0x42]
  41c3f5:	mov    bl,0x84
  41c3f7:	cwde   
  41c3f8:	pushf  
  41c3f9:	sar    BYTE PTR [edx-0x38ef588f],cl
  41c3ff:	mov    esp,0xd9abbdb0
  41c404:	and    ah,BYTE PTR [edi]
  41c406:	jle    0x41c3a8
  41c408:	mov    eax,0x49e156e2
  41c40d:	(bad)  
  41c40e:	repz arpl WORD PTR [ebx-0xe],dx
  41c412:	xlat   BYTE PTR ds:[ebx]
  41c413:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c414:	cmp    eax,0xa5e0d2ab
  41c419:	sbb    al,0x96
  41c41b:	stos   BYTE PTR es:[edi],al
  41c41c:	stos   DWORD PTR es:[edi],eax
  41c41d:	jno    0x41c427
  41c41f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c420:	(bad)  
  41c421:	(bad)  
  41c422:	int    0x7b
  41c424:	or     al,0x6d
  41c426:	mov    edx,DWORD PTR [eax-0x54]
  41c429:	lea    ebp,[eax-0x527bb188]
  41c42f:	daa    
  41c430:	sbb    DWORD PTR [edx],esi
  41c432:	add    cl,BYTE PTR [ebp+edi*1+0x34]
  41c436:	(bad)  
  41c437:	scas   al,BYTE PTR es:[edi]
  41c438:	add    DWORD PTR [ecx+esi*8+0x1f24f47b],0x6d9e51a4
  41c443:	push   eax
  41c444:	xchg   ebp,eax
  41c445:	cmp    DWORD PTR [ebx+0x11ed42a4],esi
  41c44b:	adc    eax,0x5b8f126c
  41c450:	sbb    BYTE PTR ds:0x51aedf4e,ah
  41c456:	fs xchg esi,eax
  41c458:	imul   edx,DWORD PTR [edx-0x37ef5bb6],0x4c
  41c45f:	and    ebp,DWORD PTR [edi+0x74]
  41c462:	repnz push esp
  41c464:	out    0x99,eax
  41c466:	fist   DWORD PTR [esi+eax*2+0x2654502a]
  41c46d:	mov    ah,0x36
  41c46f:	add    eax,DWORD PTR [ecx-0x6f86afd8]
  41c475:	xchg   edx,eax
  41c476:	xor    ebx,edx
  41c478:	sub    al,0x41
  41c47a:	dec    edx
  41c47b:	or     cl,BYTE PTR [ecx-0x26d2f74e]
  41c481:	mov    ebx,?
  41c483:	xchg   DWORD PTR [esp+edx*1],edi
  41c486:	(bad)
  41c489:	dec    esi
  41c48a:	cmp    cl,BYTE PTR [ebp+0x74]
  41c48d:	push   eax
  41c48e:	add    ebp,DWORD PTR ds:[edi]
  41c491:	push   edi
  41c492:	xchg   BYTE PTR [ebx+ebx*4-0x56],ch
  41c496:	pop    esp
  41c497:	lds    edx,FWORD PTR [ebx-0x52e3c413]
  41c49d:	sbb    ecx,DWORD PTR [eax+0x17080dfb]
  41c4a3:	cli    
  41c4a4:	(bad)  
  41c4a5:	mov    dl,0xad
  41c4a7:	dec    ecx
  41c4a8:	pop    ecx
  41c4a9:	or     edx,DWORD PTR [eax-0x3fee4dc3]
  41c4af:	mov    fs,WORD PTR [edx-0x74b4966f]
  41c4b5:	push   eax
  41c4b6:	sbb    edi,DWORD PTR [edi]
  41c4b8:	or     al,0xdb
  41c4ba:	ins    DWORD PTR es:[edi],dx
  41c4bb:	pcmpgtw mm6,mm5
  41c4be:	pop    edx
  41c4bf:	push   esi
  41c4c0:	aas    
  41c4c1:	iret   
  41c4c2:	int    0x82
  41c4c4:	push   ebp
  41c4c5:	or     eax,0x168a9eb6
  41c4ca:	mov    eax,ds:0x3b9aea1e
  41c4cf:	mov    edx,0x22a9aaa0
  41c4d4:	test   bl,cl
  41c4d6:	and    DWORD PTR [ebx+0xb],esi
  41c4d9:	xlat   BYTE PTR ds:[ebx]
  41c4da:	xor    al,0xd7
  41c4dc:	inc    edi
  41c4dd:	adc    ebp,esp
  41c4df:	aam    0xbc
  41c4e1:	iret   
  41c4e2:	in     eax,0xca
  41c4e4:	pushf  
  41c4e5:	xchg   edi,eax
  41c4e6:	in     al,dx
  41c4e7:	inc    edi
  41c4e8:	xor    dh,bl
  41c4ea:	ins    DWORD PTR es:[edi],dx
  41c4eb:	outs   dx,DWORD PTR ds:[esi]
  41c4ec:	push   0x41
  41c4ee:	jl     0x41c4ed
  41c4f0:	and    BYTE PTR [ebx-0x31],cl
  41c4f3:	or     al,al
  41c4f5:	pop    ebx
  41c4f6:	push   edx
  41c4f7:	cmp    eax,ebp
  41c4f9:	mov    ds:0x23eb9d40,al
  41c4fe:	xchg   BYTE PTR [ebp-0x74],ch
  41c501:	dec    edx
  41c502:	(bad)  
  41c503:	mov    ds:0xb34e74dc,al
  41c508:	rcl    BYTE PTR [edi+0x3e],1
  41c50b:	inc    ebp
  41c50c:	ds dec ebp
  41c50e:	cwde   
  41c50f:	popf   
  41c510:	and    edx,DWORD PTR [edx]
  41c512:	adc    DWORD PTR [edi+0x43b464cb],0x6c96b0d9
  41c51c:	pop    edx
  41c51d:	xchg   esp,eax
  41c51e:	inc    edi
  41c51f:	sahf   
  41c520:	pop    ss
  41c521:	jae    0x41c537
  41c523:	das    
  41c524:	pop    esp
  41c525:	jo     0x41c599
  41c527:	cmp    esp,ebx
  41c529:	ins    DWORD PTR es:[edi],dx
  41c52a:	fadd   DWORD PTR [esi+0x5ccd0524]
  41c530:	cmp    al,0x89
  41c532:	push   cs
  41c533:	pop    ds
  41c534:	aam    0x29
  41c536:	lods   eax,DWORD PTR ds:[esi]
  41c537:	je     0x41c4c1
  41c539:	ret    0xed1f
  41c53c:	fisttp QWORD PTR [esi]
  41c53e:	sub    BYTE PTR [ebp-0x75],bl
  41c541:	mov    cl,0xfc
  41c543:	rcl    ah,1
  41c545:	push   cs
  41c546:	outs   dx,DWORD PTR ds:[esi]
  41c547:	jnp    0x41c4cc
  41c549:	sub    edx,DWORD PTR [esi]
  41c54b:	cli    
  41c54c:	sahf   
  41c54d:	xchg   ebp,eax
  41c54e:	je     0x41c59d
  41c550:	mov    al,0xe4
  41c552:	pop    esp
  41c553:	push   edx
  41c554:	inc    ebp
  41c555:	loope  0x41c570
  41c557:	xchg   esp,eax
  41c558:	int    0xc9
  41c55a:	scas   al,BYTE PTR es:[edi]
  41c55b:	sub    DWORD PTR [eax],edi
  41c55d:	mov    edi,0x6524955c
  41c562:	je     0x41c504
  41c564:	dec    ebp
  41c565:	adc    ebp,edi
  41c567:	push   es
  41c568:	pop    edx
  41c569:	sbb    dl,dl
  41c56b:	mov    ch,0x6c
  41c56d:	add    ch,al
  41c56f:	aad    0x58
  41c571:	jmp    0x1d045332
  41c576:	call   0x8ada:0x516715be
  41c57d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c57e:	aad    0x8c
  41c580:	les    esp,FWORD PTR [ebp-0x69]
  41c583:	loopne 0x41c604
  41c585:	dec    edx
  41c586:	jno    0x41c51f
  41c588:	jg     0x41c57f
  41c58a:	xchg   ah,bh
  41c58c:	push   0x6e65693b
  41c591:	shl    DWORD PTR [edi+0x2a],cl
  41c594:	dec    eax
  41c595:	xchg   esp,eax
  41c596:	and    dh,BYTE PTR [ebx+0x7]
  41c599:	repz pop ecx
  41c59b:	stos   BYTE PTR es:[edi],al
  41c59c:	jne    0x41c528
  41c59e:	push   edi
  41c59f:	rcl    BYTE PTR [esp+eiz*8+0x9],0xc3
  41c5a4:	jmp    0x41c5b3
  41c5a6:	pop    ecx
  41c5a7:	pop    ss
  41c5a8:	or     eax,DWORD PTR [ebx]
  41c5aa:	pushf  
  41c5ab:	mov    esi,0x89cf295f
  41c5b0:	stos   DWORD PTR es:[edi],eax
  41c5b1:	jnp    0x41c577
  41c5b3:	xor    ch,BYTE PTR [esi-0x4270160]
  41c5b9:	les    ebp,FWORD PTR [esi]
  41c5bb:	mov    dl,0x69
  41c5bd:	xchg   esi,eax
  41c5be:	addr16 (bad) 
  41c5c0:	in     eax,dx
  41c5c1:	lods   eax,DWORD PTR ds:[esi]
  41c5c2:	sti    
  41c5c3:	retf   0x7a02
  41c5c6:	imul   esi,DWORD PTR [edx+0x51cd6fbc],0xc5d6c504
  41c5d0:	jbe    0x41c58a
  41c5d2:	ja     0x41c5e0
  41c5d4:	mov    al,0xd3
  41c5d6:	(bad)
  41c5d9:	(bad)
  41c5dc:	loopne 0x41c62e
  41c5de:	push   0x3e0a5580
  41c5e3:	push   esi
  41c5e4:	xor    dh,BYTE PTR [edx-0x2de8ea67]
  41c5ea:	cwde   
  41c5eb:	scas   eax,DWORD PTR es:[edi]
  41c5ec:	(bad)  
  41c5ee:	push   edi
  41c5ef:	xor    ch,BYTE PTR fs:[ecx]
  41c5f2:	push   ds
  41c5f3:	mov    esp,0xa000ef18
  41c5f8:	jb     0x41c613
  41c5fa:	xor    eax,0x9e6a6a43
  41c5ff:	cmp    ch,ah
  41c601:	loop   0x41c5a8
  41c603:	xchg   esi,eax
  41c604:	jle    0x41c677
  41c606:	xor    eax,0x145cfe5e
  41c60b:	push   ss
  41c60c:	mov    edi,0xca84a6a5
  41c611:	pusha  
  41c612:	or     ebp,DWORD PTR [ebp+0x1c627c0b]
  41c618:	ins    DWORD PTR es:[edi],dx
  41c619:	and    DWORD PTR [edi+eax*4-0x52a14a20],ecx
  41c620:	or     ch,BYTE PTR ds:0xf272143e
  41c626:	fimul  WORD PTR [eax-0x20339c06]
  41c62c:	ds push ecx
  41c62e:	popa   
  41c62f:	je     0x41c5b4
  41c631:	test   DWORD PTR [esi],ecx
  41c633:	(bad)  
  41c634:	sbb    dl,cl
  41c636:	adc    ecx,DWORD PTR [esp+ecx*4]
  41c639:	dec    ebp
  41c63a:	fucom  st(0)
  41c63c:	sub    eax,0xce70943b
  41c641:	mov    ah,0xc2
  41c643:	ds sbb al,0xfd
  41c646:	fwait
  41c647:	mov    ebp,DWORD PTR [esi]
  41c649:	daa    
  41c64a:	out    dx,al
  41c64b:	push   esi
  41c64c:	aaa    
  41c64d:	xchg   ecx,ebx
  41c64f:	mov    dl,0xfa
  41c651:	nop
  41c652:	hlt    
  41c653:	xor    esi,ebp
  41c655:	stos   BYTE PTR es:[edi],al
  41c656:	pop    esp
  41c657:	sbb    BYTE PTR [edi],dl
  41c659:	call   0x7603:0x2b237c8f
  41c660:	xchg   ebp,eax
  41c661:	int3   
  41c662:	daa    
  41c663:	mov    ds,WORD PTR [edx-0x78]
  41c666:	sub    ch,0xdb
  41c669:	push   cs
  41c66a:	adc    eax,0x518011
  41c66f:	out    0xfc,eax
  41c671:	xor    al,0xb1
  41c673:	jle    0x41c601
  41c675:	dec    ebx
  41c676:	mov    ah,0x5e
  41c678:	dec    eax
  41c679:	fsubrp st(6),st
  41c67b:	sub    ebx,eax
  41c67d:	cmp    esp,edx
  41c67f:	xchg   ebp,eax
  41c680:	fnstsw WORD PTR [esp+esi*4-0x72f1b9cf]
  41c687:	das    
  41c688:	sbb    DWORD PTR [bx+0x376],esi
  41c68d:	push   es
  41c68e:	es loop 0x41c665
  41c691:	fidiv  DWORD PTR [ebp+0x2076626c]
  41c697:	add    cl,dl
  41c699:	jecxz  0x41c6ca
  41c69b:	imul   edx,DWORD PTR [edi],0xd65588f2
  41c6a1:	xchg   ecx,eax
  41c6a2:	jle    0x41c6b1
  41c6a4:	and    eax,0x3b8afab5
  41c6a9:	scas   eax,DWORD PTR es:[edi]
  41c6aa:	mov    ds:0x7d76d776,eax
  41c6af:	xchg   ebx,eax
  41c6b0:	loopne 0x41c65d
  41c6b2:	push   ss
  41c6b3:	mov    ss,edi
  41c6b5:	mov    ds:0x1a8600ce,eax
  41c6ba:	mov    cl,0x57
  41c6bc:	xchg   ebx,eax
  41c6bd:	aam    0x16
  41c6bf:	les    esi,FWORD PTR [edi+0x67]
  41c6c2:	popa   
  41c6c3:	int    0xc4
  41c6c5:	push   esp
  41c6c6:	popw   ds
  41c6c8:	cwde   
  41c6c9:	pop    ecx
  41c6ca:	stos   DWORD PTR es:[edi],eax
  41c6cb:	test   al,0xd2
  41c6cd:	add    DWORD PTR [eax],ebp
  41c6cf:	lds    eax,FWORD PTR [edi-0x50]
  41c6d2:	push   ds
  41c6d3:	and    ebx,esi
  41c6d5:	imul   esi,esi,0x5a
  41c6d8:	mov    eax,ds:0x857b09a9
  41c6dd:	jbe    0x41c67e
  41c6df:	mov    bl,BYTE PTR ds:0x6de0e560
  41c6e5:	or     edi,ebp
  41c6e7:	dec    eax
  41c6e8:	popa   
  41c6e9:	stos   DWORD PTR es:[edi],eax
  41c6ea:	push   ecx
  41c6eb:	out    dx,al
  41c6ec:	and    cl,ah
  41c6ee:	push   esp
  41c6ef:	hlt    
  41c6f0:	cdq    
  41c6f1:	enter  0xae60,0x30
  41c6f5:	jg     0x41c683
  41c6f7:	les    esp,FWORD PTR [esi+0x31]
  41c6fa:	pop    esi
  41c6fb:	inc    edx
  41c6fc:	pop    es
  41c6fd:	xchg   BYTE PTR [ebx],cl
  41c6ff:	inc    edx
  41c701:	sbb    ah,BYTE PTR [edx-0xe]
  41c704:	aaa    
  41c705:	mov    ebp,0xac189a31
  41c70a:	xchg   ebp,eax
  41c70b:	sbb    al,0x88
  41c70d:	push   cs
  41c70e:	imul   eax,DWORD PTR ds:0xa2ec532,0x22
  41c715:	std    
  41c716:	jge    0x41c790
  41c718:	mov    cl,0x59
  41c71a:	xor    eax,0x6d
  41c71d:	in     al,dx
  41c71e:	sub    cl,BYTE PTR [edi+0x45]
  41c721:	add    DWORD PTR [edx+0x61],edx
  41c724:	leave  
  41c725:	push   edi
  41c726:	dec    esi
  41c727:	mov    al,ds:0x167494eb
  41c72c:	mov    ah,0xae
  41c72e:	call   0xc1d4c7de
  41c733:	xchg   ebp,eax
  41c734:	jnp    0x41c6df
  41c736:	ds dec eax
  41c738:	loop   0x41c716
  41c73a:	js     0x41c761
  41c73c:	rcl    BYTE PTR [ecx-0x5d],1
  41c73f:	ja     0x41c7ac
  41c741:	cmp    al,0x61
  41c743:	xor    BYTE PTR [edx-0x4b],0x57
  41c747:	jl     0x41c77a
  41c749:	lea    eax,[edx+ebp*4]
  41c74c:	bound  ebx,QWORD PTR [esi+edi*2+0x67]
  41c750:	hlt    
  41c751:	jge    0x41c744
  41c753:	bound  edi,QWORD PTR [eax+0x444bfd8e]
  41c759:	fcomp  QWORD PTR [esi-0x8]
  41c75c:	dec    ecx
  41c75d:	or     al,0x95
  41c75f:	or     edi,DWORD PTR [edx*2+0x66be88dd]
  41c766:	pop    ecx
  41c767:	xor    al,0xa1
  41c769:	mov    bl,0x80
  41c76b:	mov    ebp,0x38d4415f
  41c770:	inc    esi
  41c771:	jne    0x41c749
  41c773:	xchg   edx,eax
  41c774:	cmp    cl,BYTE PTR [ecx]
  41c776:	outs   dx,BYTE PTR ds:[esi]
  41c777:	mov    cl,0x42
  41c779:	and    DWORD PTR [esi],edi
  41c77b:	imul   eax,ecx,0x4b
  41c77e:	ds sub ch,bl
  41c781:	scas   al,BYTE PTR es:[edi]
  41c782:	(bad)  
  41c783:	out    dx,al
  41c784:	inc    ebp
  41c785:	jl     0x41c748
  41c787:	iret   
  41c788:	xchg   ebx,eax
  41c789:	mov    ch,0xfc
  41c78b:	xchg   DWORD PTR [ecx+ebx*8],ebx
  41c78e:	gs jns 0x41c775
  41c791:	mov    edi,gs
  41c793:	ds adc ebp,ecx
  41c796:	mov    esp,0xa3403e3b
  41c79b:	inc    ebx
  41c79c:	neg    bl
  41c79e:	xchg   DWORD PTR [edx+0x76],ecx
  41c7a1:	cmp    DWORD PTR [edi+0x47],ecx
  41c7a4:	loope  0x41c77a
  41c7a6:	add    dh,BYTE PTR [esi+0x31cb3430]
  41c7ac:	stc    
  41c7ad:	and    dh,dl
  41c7af:	imul   ebx,DWORD PTR [eax],0x9bfea3b8
  41c7b5:	imul   ecx,DWORD PTR [eax+0xbe47478],0xc9f448ea
  41c7bf:	xchg   edi,eax
  41c7c1:	leave  
  41c7c2:	(bad)  
  41c7c3:	push   0xffffffa6
  41c7c5:	aas    
  41c7c6:	sbb    al,0xce
  41c7c8:	mov    eax,ds:0xac2b31fb
  41c7cd:	ret    0x518f
  41c7d0:	dec    edi
  41c7d1:	fwait
  41c7d2:	dec    edx
  41c7d3:	ror    dl,0xd7
  41c7d6:	dec    ebp
  41c7d7:	mov    al,0xf7
  41c7d9:	mov    dh,BYTE PTR [eax+ecx*2]
  41c7dc:	fsubr  QWORD PTR [edi-0x3f]
  41c7df:	mov    ds:0xc8ab0584,al
  41c7e4:	mov    ds:0x8fd357e0,eax
  41c7e9:	sub    BYTE PTR [edi-0x64],ch
  41c7ec:	jecxz  0x41c771
  41c7ee:	cmc    
  41c7ef:	pop    edi
  41c7f0:	sub    BYTE PTR [edi*1+0x6d1a2e5b],bh
  41c7f7:	test   esi,eax
  41c7f9:	and    BYTE PTR [ebp+0x247d6401],0x7b
  41c800:	test   eax,0xaec9a07
  41c805:	out    dx,al
  41c806:	push   0xffffff98
  41c808:	sbb    ch,bl
  41c80a:	fmul   st(3),st
  41c80c:	cmp    BYTE PTR [edi+0x4b],ch
  41c80f:	ja     0x41c874
  41c811:	sahf   
  41c812:	imul   esi,DWORD PTR [ebp-0x56],0x8cd2fdba
  41c819:	push   ebx
  41c81a:	(bad)  
  41c81b:	movzx  ebx,WORD PTR [ecx]
  41c81e:	retf   0x3b04
  41c821:	call   DWORD PTR [eax]
  41c823:	mov    bl,0x6
  41c825:	(bad)  
  41c827:	(bad)  
  41c828:	jp     0x41c824
  41c82a:	pop    edi
  41c82b:	ja     0x41c844
  41c82d:	(bad)  
  41c82e:	dec    esp
  41c82f:	outs   dx,BYTE PTR ds:[esi]
  41c830:	mov    eax,ds:0x569ee7eb
  41c835:	hlt    
  41c836:	jmp    0x12c3746f
  41c83b:	and    eax,0xa03f7974
  41c840:	outs   dx,DWORD PTR ds:[esi]
  41c841:	add    ah,BYTE PTR [ebp-0x5f]
  41c844:	or     edi,ebp
  41c846:	shl    DWORD PTR [esi+ebp*4],cl
  41c849:	into   
  41c84a:	ror    DWORD PTR ds:0xf714a44b,cl
  41c850:	shl    DWORD PTR [edx+esi*4],cl
  41c853:	into   
  41c854:	pop    ss
  41c855:	xor    DWORD PTR [edx],ebp
  41c857:	sbb    edx,edi
  41c859:	enter  0xb972,0x6d
  41c85d:	aad    0xa8
  41c85f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c860:	(bad)  
  41c861:	or     dh,ch
  41c863:	jae    0x41c89b
  41c865:	dec    eax
  41c866:	in     eax,dx
  41c867:	fs out dx,al
  41c869:	sbb    edx,DWORD PTR [esi+0x343a821a]
  41c86f:	mov    ss:0xfef1a565,eax
  41c875:	add    DWORD PTR [edx],eax
  41c877:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c878:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c879:	stc    
  41c87a:	pop    ebx
  41c87b:	jbe    0x41c8ae
  41c87d:	xchg   DWORD PTR [ebp+0x3c],edx
  41c880:	mov    bh,0x7d
  41c882:	call   0x58e2:0x8e2fbd01
  41c889:	in     eax,0xe1
  41c88b:	or     ebp,DWORD PTR [esi]
  41c88d:	jmp    0xfefa:0xc364c612
  41c894:	aad    0xf
  41c896:	jmp    0x41c915
  41c898:	jmp    0x2a88:0x861880d4
  41c89f:	aam    0x4c
  41c8a1:	xor    ch,BYTE PTR [ebp+0x69216bc5]
  41c8a7:	ja     0x41c883
  41c8a9:	inc    esi
  41c8aa:	int    0xf1
  41c8ac:	xchg   edi,eax
  41c8ad:	or     al,0x73
  41c8af:	fiadd  DWORD PTR [edi]
  41c8b1:	mov    gs,WORD PTR ds:[ebp+eax*2+0x30]
  41c8b6:	mov    ah,0x88
  41c8b8:	lock mov ebx,0x9a56ba13
  41c8be:	iret   
  41c8bf:	les    ebp,FWORD PTR [eax]
  41c8c1:	pop    esp
  41c8c2:	xchg   BYTE PTR [eax-0x74223ff5],dl
  41c8c8:	dec    eax
  41c8c9:	push   esi
  41c8ca:	pusha  
  41c8cb:	stos   BYTE PTR es:[edi],al
  41c8cc:	and    al,0x19
  41c8ce:	hlt    
  41c8cf:	mov    ebx,DWORD PTR [ecx]
  41c8d1:	fsubp  st(7),st
  41c8d3:	sar    BYTE PTR [eax],1
  41c8d5:	jmp    0x41c8cb
  41c8d7:	and    DWORD PTR [eax-0x1d],edi
  41c8da:	sub    al,0x90
  41c8dc:	hlt    
  41c8dd:	bound  eax,QWORD PTR [ebp-0x43]
  41c8e0:	push   ds
  41c8e1:	sbb    eax,0x1fa05404
  41c8e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8e7:	(bad)  
  41c8e8:	fwait
  41c8e9:	enter  0x4283,0x1
  41c8ed:	ins    BYTE PTR es:[edi],dx
  41c8ee:	mov    cl,0x6b
  41c8f0:	test   al,0x78
  41c8f2:	xor    al,0xf8
  41c8f4:	cmp    ebx,DWORD PTR [eax]
  41c8f6:	pusha  
  41c8f7:	(bad)  
  41c8f8:	idiv   BYTE PTR [edx+0x45dcb609]
  41c8fe:	retf   
  41c8ff:	pop    ss
  41c900:	sub    al,0x3c
  41c902:	or     BYTE PTR [esi+0x339020d3],0xfd
  41c909:	xchg   BYTE PTR [edi],al
  41c90b:	(bad)  
  41c90d:	mov    ebp,0x3c0c3922
  41c912:	cdq    
  41c913:	adc    esp,DWORD PTR [edx]
  41c915:	(bad)  
  41c916:	enter  0x4d4c,0x53
  41c91a:	xchg   edi,ebp
  41c91c:	in     al,0x79
  41c91e:	cmp    DWORD PTR [edi+0x5b],0xd9307954
  41c925:	imul   ebx,DWORD PTR [edx+0x0],0x61f66687
  41c92c:	mov    ecx,0xb0534393
  41c931:	scas   eax,DWORD PTR es:[edi]
  41c932:	push   es
  41c933:	mov    edi,0xdff5cd8f
  41c938:	and    BYTE PTR [edi+0x36ddf62d],ch
  41c93e:	out    0x72,al
  41c940:	aam    0x71
  41c942:	dec    esp
  41c943:	sbb    eax,0xf5f2f6fc
  41c948:	jp     0x41c99b
  41c94a:	popa   
  41c94b:	lds    ebp,FWORD PTR [ebx+0x2c]
  41c94e:	in     eax,0xa7
  41c950:	test   al,0xb3
  41c952:	test   al,0xf5
  41c954:	inc    ebp
  41c955:	push   esi
  41c956:	(bad)  
  41c957:	and    esi,esp
  41c959:	push   es
  41c95a:	sub    ah,bl
  41c95c:	push   ebp
  41c95d:	in     eax,dx
  41c95e:	aad    0xf0
  41c960:	repz cmp bh,BYTE PTR [ebp-0x6f7c62be]
  41c967:	xchg   ecx,eax
  41c968:	mov    eax,ds:0xe12e761f
  41c96d:	inc    ecx
  41c96e:	xchg   DWORD PTR [edx+0x38],ebp
  41c971:	xor    BYTE PTR [eax],0x5c
  41c974:	ja     0x41c952
  41c976:	repz jge 0x41c907
  41c979:	or     edi,eax
  41c97b:	xlat   BYTE PTR ds:[ebx]
  41c97c:	mov    esi,0x616fed92
  41c981:	mov    al,0x84
  41c983:	ins    DWORD PTR es:[edi],dx
  41c984:	push   ebp
  41c985:	(bad)  
  41c986:	fisubr DWORD PTR ds:0x173f3e8f
  41c98c:	leave  
  41c98d:	cwde   
  41c98e:	test   BYTE PTR [ecx-0x515bf96],bl
  41c994:	pop    es
  41c995:	xchg   ebp,eax
  41c996:	fwait
  41c997:	jno    0x41c9be
  41c999:	stos   BYTE PTR es:[edi],al
  41c99a:	push   eax
  41c99b:	retf   0x324b
  41c99e:	sar    ecx,1
  41c9a0:	shl    DWORD PTR [ebp+0x14],1
  41c9a3:	pop    ecx
  41c9a4:	and    eax,DWORD PTR [eax]
  41c9a6:	push   es
  41c9a7:	pop    es
  41c9a8:	or     BYTE PTR [eax],ah
  41c9aa:	pop    edi
  41c9ab:	jo     0x41c93c
  41c9ad:	push   ss
  41c9ae:	xlat   BYTE PTR ds:[ebx]
  41c9af:	pop    edx
  41c9b0:	ds and ecx,edi
  41c9b3:	mov    ebp,DWORD PTR [esi-0x263cfdab]
  41c9b9:	and    BYTE PTR [esi],0x30
  41c9bc:	sub    al,0x61
  41c9be:	cdq    
  41c9bf:	ret    0x5d68
  41c9c2:	pop    ecx
  41c9c3:	jl     0x41c962
  41c9c5:	cs cli 
  41c9c7:	mov    al,0x28
  41c9c9:	add    eax,0xca6b268d
  41c9ce:	sbb    al,0xfd
  41c9d0:	out    0x9d,eax
  41c9d2:	push   cs
  41c9d3:	cmp    eax,0x7459b445
  41c9d8:	test   cl,cl
  41c9da:	neg    al
  41c9dc:	mov    BYTE PTR [ebp-0x7e],bh
  41c9df:	mov    bh,0x43
  41c9e1:	vpmacsdql xmm5,xmm6,xmm6,XMMWORD PTR [esi-0x68]
  41c9e8:	enter  0x7977,0xc0
  41c9ec:	mov    ebp,0x5f6dbb04
  41c9f1:	not    edi
  41c9f3:	cli    
  41c9f4:	pop    ecx
  41c9f5:	sub    edx,DWORD PTR [edx+0x435fdd13]
  41c9fb:	mov    bl,BYTE PTR [eax]
  41c9fd:	push   ebx
  41c9fe:	imul   edi,DWORD PTR [ecx+0x7b6e40b4],0xf1d1b1c9
  41ca08:	push   edi
  41ca09:	dec    esi
  41ca0a:	push   cs
  41ca0b:	jmp    0x93d7:0xb6b97a3c
  41ca12:	out    0x4c,al
  41ca14:	sbb    dh,BYTE PTR [eax]
  41ca16:	pop    esi
  41ca17:	jp     0x41c99b
  41ca19:	aaa    
  41ca1a:	dec    ebp
  41ca1b:	xchg   edi,eax
  41ca1c:	or     eax,0x3417c3a2
  41ca21:	call   0xe2af3814
  41ca26:	dec    ecx
  41ca27:	dec    ebx
  41ca28:	ds stos BYTE PTR es:[edi],al
  41ca2a:	mov    ds:0xde9b9009,al
  41ca2f:	or     edi,ebp
  41ca31:	or     al,0x73
  41ca33:	shl    BYTE PTR [ebp-0x33736517],0x16
  41ca3a:	sbb    DWORD PTR [ecx-0x72],esi
  41ca3d:	not    BYTE PTR [ecx+0x67]
  41ca40:	test   eax,0xe5d66ae4
  41ca45:	int    0x31
  41ca47:	imul   eax,esp,0x61
  41ca4a:	sbb    edx,ecx
  41ca4c:	fld    QWORD PTR [eax+0x77]
  41ca4f:	cmp    al,0x42
  41ca51:	retf   
  41ca52:	lock xor ah,BYTE PTR [edi-0x66]
  41ca56:	out    dx,al
  41ca57:	rcr    BYTE PTR [ebp-0x80],cl
  41ca5a:	sahf   
  41ca5b:	cld    
  41ca5c:	rol    ecx,1
  41ca5e:	hlt    
  41ca5f:	shr    ebx,0xe4
  41ca62:	sub    esi,ecx
  41ca64:	outs   dx,DWORD PTR ds:[esi]
  41ca65:	mov    ah,0x64
  41ca67:	inc    eax
  41ca68:	idiv   ebp
  41ca6a:	jb     0x41caa8
  41ca6c:	lods   eax,DWORD PTR ds:[esi]
  41ca6d:	jl     0x41ca95
  41ca6f:	sbb    DWORD PTR [ebp+esi*2+0xcb8e91],eax
  41ca76:	add    DWORD PTR [edx+ebp*4+0x43],ecx
  41ca7a:	jle    0x41ca56
  41ca7c:	push   eax
  41ca7d:	fcom   DWORD PTR [edi-0x286f2f32]
  41ca83:	mov    cl,0xbb
  41ca85:	sub    BYTE PTR [ebx],bh
  41ca87:	sub    eax,0x3d773b7a
  41ca8c:	sbb    eax,0xa0520c06
  41ca91:	sbb    BYTE PTR [ebp-0x37],ah
  41ca94:	mov    al,0x16
  41ca96:	arpl   WORD PTR [ecx],bx
  41ca98:	jne    0x41cb00
  41ca9a:	fild   WORD PTR [edx]
  41ca9c:	push   esp
  41ca9d:	add    eax,0x6be8b45c
  41caa2:	jbe    0x41ca65
  41caa4:	xchg   esi,eax
  41caa5:	rcl    BYTE PTR [esp],1
  41caa8:	aam    0x75
  41caaa:	outs   dx,DWORD PTR ds:[esi]
  41caab:	inc    edx
  41caac:	add    DWORD PTR [edx+ecx*1],eax
  41caaf:	jb     0x41caa4
  41cab1:	pop    ds
  41cab2:	int    0x7
  41cab4:	pop    edi
  41cab5:	or     al,0x4c
  41cab7:	inc    esi
  41cab8:	add    DWORD PTR [eax+0x26],ecx
  41cabb:	and    al,0x98
  41cabd:	sub    DWORD PTR [edx-0x26],0x6d56b6dd
  41cac4:	mov    bh,0x7b
  41cac6:	clc    
  41cac7:	fwait
  41cac8:	cld    
  41cac9:	lahf   
  41caca:	enter  0x57d3,0xd7
  41cace:	sub    bh,BYTE PTR [ecx+0x28]
  41cad1:	ins    DWORD PTR es:[edi],dx
  41cad2:	int3   
  41cad3:	push   cs
  41cad4:	dec    edx
  41cad5:	pop    esi
  41cad6:	pop    es
  41cad7:	ja     0x41cad4
  41cad9:	inc    esp
  41cada:	jp     0x41cac9
  41cadc:	and    edi,edx
  41cade:	sub    DWORD PTR [esi-0x6a85af85],esi
  41cae4:	pop    ebp
  41cae5:	push   es
  41cae6:	jecxz  0x41cb4d
  41cae8:	nop
  41cae9:	dec    DWORD PTR [eax-0x5c2f094a]
  41caef:	push   edi
  41caf1:	iret   
  41caf2:	outs   dx,DWORD PTR ds:[esi]
  41caf3:	sub    eax,0xb36777ca
  41caf8:	cmp    al,0x71
  41cafa:	and    DWORD PTR [edi],ecx
  41cafc:	mov    DWORD PTR [edx+0x129ada12],edx
  41cb02:	inc    edx
  41cb03:	fidiv  WORD PTR [edx-0x35a0c09f]
  41cb09:	mov    fs,WORD PTR [ebp-0xa9b2418]
  41cb0f:	add    cl,BYTE PTR [edi+edi*2+0x474b4551]
  41cb16:	test   DWORD PTR [edi-0x5d],ecx
  41cb19:	test   al,0xe6
  41cb1b:	sti    
  41cb1c:	cli    
  41cb1d:	push   ds
  41cb1e:	sub    ax,0x4660
  41cb22:	add    al,ah
  41cb24:	cs mov ch,0xe1
  41cb27:	add    BYTE PTR [ebp-0x2d7e960b],dh
  41cb2d:	jne    0x41caba
  41cb2f:	inc    esp
  41cb30:	push   esi
  41cb31:	retf   0x847
  41cb34:	fdivr  DWORD PTR [eax+0xb]
  41cb37:	aaa    
  41cb38:	addr16 dec eax
  41cb3a:	int3   
  41cb3b:	aas    
  41cb3c:	and    esp,DWORD PTR [ebp-0x54]
  41cb3f:	aaa    
  41cb40:	cmp    ebx,DWORD PTR [esi+eax*1+0x3747f3fd]
  41cb47:	inc    edx
  41cb48:	xor    al,0xab
  41cb4a:	repz xchg ecx,eax
  41cb4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb4d:	mov    ah,0x37
  41cb4f:	js     0x41cbcb
  41cb51:	mov    ds:0x5a7c4ac2,eax
  41cb56:	adc    eax,0x1f47012e
  41cb5b:	gs xchg esp,eax
  41cb5d:	push   eax
  41cb5e:	dec    ebp
  41cb5f:	call   0x225d:0xc067a494
  41cb66:	out    dx,al
  41cb67:	and    eax,0xc0286bda
  41cb6c:	fisub  DWORD PTR [ebp+0x70fa4253]
  41cb72:	mov    esp,0xa026ce48
  41cb77:	bound  ecx,QWORD PTR [eax-0x74a5e8b6]
  41cb7d:	std    
  41cb7e:	enter  0x7ba4,0x57
  41cb82:	jmp    0x5dd8:0xf82ef0af
  41cb89:	ins    DWORD PTR es:[edi],dx
  41cb8a:	imul   ecx,DWORD PTR [esi+0x1493a6ed],0xeaba1c64
  41cb94:	adc    BYTE PTR [ebp+0x78116b5c],bl
  41cb9a:	and    ecx,edx
  41cb9c:	js     0x41cbb3
  41cb9e:	js     0x41cbde
  41cba0:	and    al,0x7b
  41cba2:	xchg   esi,eax
  41cba3:	adc    eax,0x4fc0d5ed
  41cba8:	sahf   
  41cba9:	in     al,dx
  41cbaa:	cmc    
  41cbab:	cld    
  41cbac:	ins    DWORD PTR es:[edi],dx
  41cbad:	xor    ah,cl
  41cbaf:	xor    al,0xb8
  41cbb1:	stos   DWORD PTR es:[edi],eax
  41cbb2:	(bad)  
  41cbb3:	scas   al,BYTE PTR es:[edi]
  41cbb4:	cmp    eax,0xbdeb56e7
  41cbb9:	dec    ebx
  41cbba:	pop    es
  41cbbb:	loopne 0x41cc37
  41cbbd:	mov    esi,0x3df63720
  41cbc2:	mov    al,0xb8
  41cbc4:	sub    dh,bl
  41cbc6:	mov    esi,0x7954889c
  41cbcb:	inc    ecx
  41cbcc:	jne    0x41cbfd
  41cbce:	rol    ecx,cl
  41cbd0:	mov    al,0x26
  41cbd2:	inc    eax
  41cbd3:	stos   BYTE PTR es:[edi],al
  41cbd4:	inc    ecx
  41cbd5:	shl    WORD PTR [ebp+0x32],cl
  41cbd9:	push   esi
  41cbda:	adc    eax,0x1ee8de4a
  41cbdf:	xor    eax,0x82766505
  41cbe4:	scas   eax,DWORD PTR es:[edi]
  41cbe5:	test   al,0xa2
  41cbe7:	push   esp
  41cbe8:	or     eax,0x215523f3
  41cbed:	shl    DWORD PTR [ecx-0x1b9bc688],0xe9
  41cbf4:	xor    BYTE PTR [ebp+0x115270af],dh
  41cbfa:	cmp    al,0xa6
  41cbfc:	(bad)  
  41cbfd:	xchg   ebx,eax
  41cbfe:	jne    0x41cbc7
  41cc00:	jnp    0x41cbde
  41cc02:	and    BYTE PTR [edi+0x64d6e0c5],bl
  41cc08:	sub    bl,ah
  41cc0a:	jg     0x41cb97
  41cc0c:	pop    ecx
  41cc0d:	call   0x6aa6:0x82bc68
  41cc14:	mov    ebp,0x6ad268d3
  41cc19:	test   eax,0x958349f8
  41cc1e:	adc    DWORD PTR [ecx+0x46fe4e79],edi
  41cc24:	ud1    esp,DWORD PTR [edi+eiz*8+0xb]
  41cc29:	js     0x41cc4a
  41cc2b:	adc    al,0x4a
  41cc2d:	rol    BYTE PTR [ecx+0x2d],cl
  41cc30:	das    
  41cc31:	mov    BYTE PTR [edx+0x8],dl
  41cc34:	adc    DWORD PTR [ebp+0xbb7e03c],esi
  41cc3a:	lock or BYTE PTR [ecx-0x22a2b9b6],bl
  41cc41:	repnz sub BYTE PTR [eax],ah
  41cc44:	lods   eax,DWORD PTR ds:[esi]
  41cc45:	in     al,0xf0
  41cc47:	cmp    ecx,0x79
  41cc4a:	xor    eax,0xa8a69eed
  41cc4f:	sbb    bh,dh
  41cc51:	inc    ebx
  41cc52:	mov    dh,0x99
  41cc54:	mov    dl,0x52
  41cc56:	popa   
  41cc57:	jmp    0xe12e:0x35959814
  41cc5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc5f:	mov    al,ds:0x5850fc58
  41cc64:	int3   
  41cc65:	lods   al,BYTE PTR ds:[esi]
  41cc66:	mov    eax,ds:0xbafc797e
  41cc6b:	es xchg al,al
  41cc6e:	imul   esi,DWORD PTR [edx-0x6ef9ead8],0x8657ccd0
  41cc78:	in     eax,0x7b
  41cc7a:	mov    dl,0xf
  41cc7c:	add    eax,0x3bb1cfd1
  41cc81:	fisub  WORD PTR [eax-0x19539f6e]
  41cc87:	test   DWORD PTR [edx+0x29],edi
  41cc8a:	mov    edx,0x66a0c4ea
  41cc8f:	inc    esi
  41cc90:	xchg   esp,eax
  41cc91:	stos   DWORD PTR es:[edi],eax
  41cc92:	test   BYTE PTR [ecx-0x40],cl
  41cc95:	push   ss
  41cc96:	mov    eax,DWORD PTR [esi+0x2]
  41cc99:	push   es
  41cc9a:	cmc    
  41cc9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc9c:	pusha  
  41cc9d:	ret    0x4f96
  41cca0:	sbb    eax,0x4f7bacaf
  41cca5:	push   ebp
  41cca6:	dec    edx
  41cca7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cca8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cca9:	into   
  41ccaa:	sub    esi,eax
  41ccac:	pop    edi
  41ccad:	or     DWORD PTR [edi-0x18f71db2],ebp
  41ccb3:	and    ebx,DWORD PTR [ebx+0x47372b31]
  41ccb9:	xchg   edi,eax
  41ccba:	cmovl  edi,ebp
  41ccbd:	dec    ebp
  41ccbe:	call   0x7067fc2b
  41ccc3:	mov    eax,ds:0x2600131e
  41ccc8:	or     al,0x83
  41ccca:	add    eax,0xc278be3c
  41cccf:	popf   
  41ccd0:	cmp    DWORD PTR [esp+edx*4+0x6d],edx
  41ccd4:	enter  0x1e1,0x85
  41ccd8:	dec    ebp
  41ccd9:	dec    eax
  41ccda:	jle    0x41ccd4
  41ccdc:	xchg   ebx,eax
  41ccdd:	(bad)  
  41ccde:	and    ebx,esp
  41cce0:	mov    al,0xef
  41cce2:	jae    0x41cd04
  41cce4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cce5:	mov    eax,0xe00f2cbc
  41ccea:	mov    ds:0x574f42bb,al
  41ccef:	cmc    
  41ccf0:	int3   
  41ccf1:	jae    0x41ccec
  41ccf3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ccf4:	in     eax,dx
  41ccf5:	imul   ebp,DWORD PTR [ebx+eax*4-0x6178b4b2],0xb5109030
  41cd00:	mov    dl,0xce
  41cd02:	xchg   BYTE PTR [edx-0x34],cl
  41cd05:	xchg   ecx,eax
  41cd06:	(bad)  
  41cd07:	aad    0x5a
  41cd09:	int3   
  41cd0a:	mov    bh,0x37
  41cd0c:	in     eax,0x8c
  41cd0e:	ins    DWORD PTR es:[edi],dx
  41cd0f:	xlat   BYTE PTR ds:[ebx]
  41cd10:	add    BYTE PTR [ebx],cl
  41cd12:	(bad)  
  41cd14:	mov    cl,0x7a
  41cd16:	xchg   DWORD PTR [ebp+0x6932e681],ebp
  41cd1c:	pusha  
  41cd1d:	xchg   ebx,eax
  41cd1e:	fcmove st,st(7)
  41cd20:	pop    ebx
  41cd21:	xchg   edx,eax
  41cd22:	fdiv   DWORD PTR [ecx-0x43f6c237]
  41cd28:	jbe    0x41ccc9
  41cd2a:	xor    ah,BYTE PTR [ebx-0x4c]
  41cd2d:	imul   esp,DWORD PTR [eax],0x66fb5c4c
  41cd33:	xor    eax,0x72119570
  41cd38:	dec    ebx
  41cd39:	xchg   esp,eax
  41cd3a:	jo     0x41cd7f
  41cd3c:	retf   0xc56d
  41cd3f:	lods   al,BYTE PTR ds:[esi]
  41cd40:	push   ss
  41cd41:	in     eax,0xaf
  41cd43:	das    
  41cd44:	stos   DWORD PTR es:[edi],eax
  41cd45:	push   esp
  41cd46:	mov    WORD PTR [edi+0x58bd5dba],cs
  41cd4c:	pop    ecx
  41cd4d:	stc    
  41cd4e:	jno    0x41ccda
  41cd50:	jnp    0x41cd1c
  41cd52:	dec    ecx
  41cd53:	mov    ch,0xbe
  41cd55:	xchg   ecx,eax
  41cd56:	cli    
  41cd57:	mov    bh,0x89
  41cd59:	dec    edi
  41cd5a:	clc    
  41cd5b:	leave  
  41cd5c:	cpuid  
  41cd5e:	inc    ecx
  41cd5f:	jns    0x41cd45
  41cd61:	test   esi,edx
  41cd63:	inc    edi
  41cd64:	cmp    eax,DWORD PTR [ecx+0x18]
  41cd67:	push   edi
  41cd68:	out    0xb2,al
  41cd6a:	nop
  41cd6b:	cs (bad) 
  41cd6d:	inc    BYTE PTR [ecx+0x16b99506]
  41cd73:	push   esp
  41cd74:	clc    
  41cd75:	out    dx,al
  41cd76:	or     eax,0x20d27ff2
  41cd7b:	jo     0x41cd53
  41cd7d:	or     bh,ah
  41cd7f:	shl    ch,0x62
  41cd82:	test   DWORD PTR [edi],ebp
  41cd84:	push   cs
  41cd85:	in     eax,0x6e
  41cd87:	rcl    BYTE PTR [eax+eiz*1+0x2e],cl
  41cd8b:	or     eax,DWORD PTR [ecx+0x4e090246]
  41cd91:	loope  0x41cd47
  41cd93:	dec    edi
  41cd94:	xor    al,0x5b
  41cd96:	popa   
  41cd97:	clc    
  41cd98:	das    
  41cd99:	outs   dx,BYTE PTR ds:[esi]
  41cd9a:	cld    
  41cd9b:	ret    0xc510
  41cd9e:	mov    ah,0xb1
  41cda0:	jecxz  0x41ce0f
  41cda2:	and    DWORD PTR [edi],esp
  41cda4:	sub    bl,dh
  41cda6:	retf   
  41cda7:	scas   eax,DWORD PTR es:[edi]
  41cda8:	push   esp
  41cda9:	jp     0x41cd4e
  41cdab:	mov    esp,0x7f95aebc
  41cdb0:	lahf   
  41cdb1:	or     DWORD PTR [ebx-0x784a6f69],edx
  41cdb7:	stos   DWORD PTR es:[edi],eax
  41cdb8:	jl     0x41cd66
  41cdba:	mov    dh,0x65
  41cdbc:	test   dl,dl
  41cdbe:	daa    
  41cdbf:	imul   edi,DWORD PTR [edx+0x13],0xe
  41cdc3:	out    0xdc,al
  41cdc5:	test   eax,0xf7962c1e
  41cdca:	aad    0x46
  41cdcc:	fisttp WORD PTR [ebx-0x35a13de]
  41cdd2:	imul   ecx,esi,0x662f500a
  41cdd8:	adc    BYTE PTR ds:0xf5f18c89,cl
  41cdde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cddf:	cmp    eax,DWORD PTR ds:[edi-0x21]
  41cde3:	clc    
  41cde4:	aaa    
  41cde5:	es and al,0x71
  41cde8:	push   ebp
  41cde9:	add    edi,DWORD PTR [ecx]
  41cdeb:	mov    edx,0x698ad9e2
  41cdf0:	jne    0x41cd7b
  41cdf2:	add    BYTE PTR [ebx+0x37df8075],bh
  41cdf8:	add    al,0xb1
  41cdfa:	cmp    esi,DWORD PTR [ecx+0x637f5257]
  41ce00:	ret    0x71a2
  41ce03:	push   ebp
  41ce04:	(bad)  
  41ce05:	int3   
  41ce06:	sahf   
  41ce07:	add    BYTE PTR [edi],ch
  41ce09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce0a:	sahf   
  41ce0b:	test   eax,edx
  41ce0d:	xchg   esi,eax
  41ce0e:	mov    ds:0xbdfa0b1d,eax
  41ce13:	pop    es
  41ce14:	adc    al,0x31
  41ce16:	test   al,0x47
  41ce18:	cmp    al,0x63
  41ce1a:	ret    
  41ce1b:	xchg   ebp,eax
  41ce1c:	pop    esi
  41ce1d:	mov    eax,0x7e6a7c77
  41ce22:	mov    esi,0x12cf79a9
  41ce27:	and    esp,DWORD PTR [esi-0x32ac44c4]
  41ce2d:	cld    
  41ce2e:	fld    TBYTE PTR [ebx+0x4c]
  41ce31:	jp     0x41ce63
  41ce33:	push   edi
  41ce34:	dec    ecx
  41ce35:	mov    esi,0x9a8f3bc6
  41ce3a:	add    DWORD PTR [eax+0x66bdf004],ecx
  41ce40:	sar    bh,1
  41ce42:	xor    BYTE PTR [ebp-0x3b],0xe2
  41ce46:	stc    
  41ce47:	xchg   esi,eax
  41ce48:	adc    BYTE PTR [esi],0x9a
  41ce4b:	inc    esp
  41ce4c:	adc    BYTE PTR [eax],bh
  41ce4e:	pop    ebx
  41ce4f:	pop    ss
  41ce50:	hlt    
  41ce51:	ret    
  41ce52:	(bad)  [eax+0x43]
  41ce55:	daa    
  41ce56:	fmulp  st(3),st
  41ce58:	jbe    0x41cdfd
  41ce5a:	out    dx,al
  41ce5b:	xchg   BYTE PTR [ebp+0x74c409f5],cl
  41ce61:	out    dx,eax
  41ce62:	pop    ecx
  41ce63:	icebp  
  41ce64:	mov    fs,WORD PTR [ebx-0x68]
  41ce67:	push   0x40
  41ce69:	dec    esi
  41ce6a:	jae    0x41cec4
  41ce6c:	(bad)  
  41ce6d:	adc    al,0x73
  41ce6f:	in     eax,0x32
  41ce71:	mov    gs,ecx
  41ce73:	jmp    FWORD PTR [esi]
  41ce75:	sbb    al,BYTE PTR [esi]
  41ce77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce78:	loop   0x41cee6
  41ce7a:	into   
  41ce7b:	mov    ch,0xcb
  41ce7d:	mov    ecx,0x22fe80b1
  41ce82:	lds    esi,FWORD PTR [eax]
  41ce84:	clc    
  41ce85:	xchg   al,dl
  41ce87:	(bad)  
  41ce88:	fcmovnbe st,st(3)
  41ce8a:	push   edx
  41ce8b:	dec    edi
  41ce8c:	enter  0x2ca0,0x28
  41ce90:	adc    DWORD PTR [ebp+esi*2+0x78],ecx
  41ce94:	sbb    ah,ch
  41ce96:	xor    BYTE PTR [ecx-0xad9a8ae],dl
  41ce9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce9d:	loopne 0x41ce69
  41ce9f:	xor    eax,ecx
  41cea1:	sub    DWORD PTR [bp+si+0x16],esi
  41cea5:	push   esi
  41cea6:	xlat   BYTE PTR ds:[ebx]
  41cea7:	std    
  41cea8:	jo     0x41cef6
  41ceaa:	xchg   esp,eax
  41ceab:	repnz mov esi,0x9e7d9e02
  41ceb1:	inc    ebp
  41ceb2:	into   
  41ceb3:	mov    cl,0xd1
  41ceb5:	dec    esp
  41ceb6:	or     BYTE PTR [eax+0x13],0xaa
  41ceba:	add    BYTE PTR [ebx-0x133130c8],0x59
  41cec1:	repz addr16 loope 0x41cf25
  41cec5:	leave  
  41cec6:	jns    0x41cf1e
  41cec8:	push   ecx
  41cec9:	jne    0x41ce8a
  41cecb:	mov    eax,0x6ac27bca
  41ced0:	xchg   ecx,eax
  41ced1:	les    edx,FWORD PTR [edx-0x4a]
  41ced4:	push   ds
  41ced5:	cmc    
  41ced6:	mov    BYTE PTR [edi-0x235680c9],dl
  41cedc:	push   cs
  41cedd:	call   0x18308c3f
  41cee2:	pushf  
  41cee3:	ins    BYTE PTR es:[edi],dx
  41cee4:	cld    
  41cee5:	out    dx,eax
  41cee6:	ss mov cl,0xb0
  41cee9:	mov    dh,0xa6
  41ceeb:	dec    esp
  41ceec:	xor    esi,DWORD PTR [ebx-0x76]
  41ceef:	jle    0x41ce86
  41cef1:	std    
  41cef2:	outs   dx,BYTE PTR ds:[esi]
  41cef3:	mov    eax,0x7c1a7823
  41cef8:	inc    edx
  41cef9:	push   edi
  41cefa:	mov    esi,0xf023338a
  41ceff:	lds    ecx,FWORD PTR ds:0x8b865f5b
  41cf05:	pop    ss
  41cf06:	dec    esi
  41cf07:	jae    0x41cf68
  41cf09:	cmp    edx,DWORD PTR [eax-0x50]
  41cf0c:	jg     0x41cf6c
  41cf0e:	rol    ch,1
  41cf10:	fwait
  41cf11:	mov    BYTE PTR ds:0x5b1b05fa,bh
  41cf17:	in     al,0x56
  41cf19:	fwait
  41cf1a:	and    ebx,DWORD PTR [ebp+0x63261fa2]
  41cf20:	retf   0x3b3e
  41cf23:	clc    
  41cf24:	push   ss
  41cf25:	xor    BYTE PTR [edi-0x301f5239],dl
  41cf2b:	xchg   esi,eax
  41cf2c:	inc    ecx
  41cf2d:	jge    0x41cf80
  41cf2f:	jp     0x41cfae
  41cf31:	and    eax,0x4ce51ad3
  41cf36:	retf   
  41cf37:	mov    ebp,0x3b3abe67
  41cf3c:	lock mov esp,0xd54aafe4
  41cf42:	gs inc edi
  41cf44:	jo     0x41ceda
  41cf46:	adc    al,0xa1
  41cf48:	retf   0xca30
  41cf4b:	fldcw  WORD PTR [edi+eiz*8]
  41cf4e:	into   
  41cf4f:	repnz lock addr16 cdq 
  41cf53:	fs sub eax,0xa3f0fe20
  41cf59:	nop
  41cf5a:	xchg   BYTE PTR [esi],bh
  41cf5c:	mov    dl,BYTE PTR [ecx+0x36]
  41cf5f:	scas   eax,DWORD PTR es:[edi]
  41cf60:	inc    eax
  41cf61:	les    ecx,FWORD PTR [ebx]
  41cf63:	mov    al,dh
  41cf65:	cli    
  41cf66:	lea    edi,ds:0xcda64be3
  41cf6c:	dec    ebp
  41cf6d:	in     al,0x92
  41cf6f:	rcl    BYTE PTR [edi],0xa2
  41cf72:	test   eax,0x85ac9829
  41cf77:	aas    
  41cf78:	adc    bl,BYTE PTR [edi-0x3370b48b]
  41cf7e:	stos   BYTE PTR es:[edi],al
  41cf7f:	sahf   
  41cf80:	cmc    
  41cf81:	mov    esp,0xaf3f0f66
  41cf86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf87:	inc    esp
  41cf88:	dec    edx
  41cf89:	outs   dx,DWORD PTR ds:[esi]
  41cf8a:	mov    bl,0x2f
  41cf8c:	iret   
  41cf8d:	xor    dh,0x73
  41cf90:	shl    BYTE PTR [eax-0x25],1
  41cf93:	inc    ecx
  41cf94:	mov    ecx,DWORD PTR [edx]
  41cf96:	mov    esi,0x981fbced
  41cf9b:	pslld  mm4,QWORD PTR [ecx+0x55821a61]
  41cfa2:	jle    0x41d016
  41cfa4:	dec    edi
  41cfa5:	fstp   DWORD PTR [edx+0x11]
  41cfa8:	pop    ebp
  41cfa9:	push   0xce38f307
  41cfae:	fidivr DWORD PTR [edi]
  41cfb0:	mov    es,edx
  41cfb2:	test   BYTE PTR [ecx-0x4b],0x7
  41cfb6:	inc    esp
  41cfb7:	ja     0x41d032
  41cfb9:	shl    BYTE PTR [edi-0x3b],1
  41cfbc:	pop    ebp
  41cfbd:	sbb    DWORD PTR [edi-0x2a59c1c6],ebp
  41cfc3:	stos   DWORD PTR es:[edi],eax
  41cfc4:	sbb    dl,BYTE PTR [ebx+0x62]
  41cfc7:	pusha  
  41cfc8:	aam    0x14
  41cfca:	mov    ecx,0x4375b243
  41cfcf:	dec    ebp
  41cfd0:	pop    ss
  41cfd1:	mov    cl,0xbc
  41cfd3:	push   0xfffffff6
  41cfd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cfd6:	jl     0x41cf9d
  41cfd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cfd9:	js     0x41cf9e
  41cfdb:	and    bl,BYTE PTR [eax]
  41cfdd:	in     al,dx
  41cfde:	popa   
  41cfdf:	dec    esp
  41cfe0:	adc    DWORD PTR [ebx+eiz*2],eax
  41cfe3:	aad    0x42
  41cfe5:	test   BYTE PTR [edi+0x5b],cl
  41cfe8:	dec    ecx
  41cfe9:	xchg   ecx,eax
  41cfea:	or     eax,0xcef89eaa
  41cfef:	stc    
  41cff0:	push   ebx
  41cff1:	std    
  41cff2:	jmp    0xf1a6cfac
  41cff7:	out    0x94,al
  41cff9:	(bad)  
  41cffa:	sub    DWORD PTR [ecx-0x77],esp
  41cffd:	mov    ah,0xbe
  41cfff:	out    0x68,eax
  41d001:	add    bh,BYTE PTR [esi+0x6f]
  41d004:	retf   
  41d005:	cmp    al,0x8b
  41d007:	aaa    
  41d008:	add    DWORD PTR [eax-0x5e4cd9e5],esp
  41d00e:	ror    BYTE PTR [ebx-0x1cf4ebd8],0x9d
  41d015:	hlt    
  41d016:	mov    al,0x86
  41d018:	sbb    al,0xbf
  41d01a:	retf   0x7ddc
  41d01d:	dec    edx
  41d01e:	xor    bh,BYTE PTR [edx]
  41d020:	or     al,0x27
  41d022:	cmp    ah,bh
  41d024:	xor    ecx,DWORD PTR [ebp-0x1095605]
  41d02a:	and    bl,BYTE PTR [ebp+0x350e3f17]
  41d030:	jnp    0x41d031
  41d032:	loope  0x41d06d
  41d034:	add    DWORD PTR [edi+0x54],esp
  41d037:	mov    ds:0xc5ecd049,eax
  41d03c:	fst    DWORD PTR [ecx+ebx*2]
  41d03f:	sub    eax,0xb14b0c9c
  41d044:	adc    al,0x62
  41d046:	loope  0x41cfdf
  41d048:	jge    0x41d074
  41d04a:	inc    edi
  41d04b:	dec    esp
  41d04c:	add    BYTE PTR [ebp-0x7737cc17],ch
  41d052:	pop    ss
  41d053:	cmc    
  41d054:	jo     0x41d079
  41d056:	mov    dl,0x6
  41d058:	jp     0x41d018
  41d05a:	adc    esi,DWORD PTR [ebx]
  41d05c:	lods   eax,DWORD PTR ds:[esi]
  41d05d:	jmp    0x708f:0xcd0603ae
  41d064:	cmp    eax,0x97148d99
  41d069:	cmp    BYTE PTR [edx],al
  41d06b:	iret   
  41d06c:	test   al,0xb6
  41d06e:	cmp    eax,DWORD PTR [esi+eax*2]
  41d071:	bound  edx,QWORD PTR [ebx+0x4442a349]
  41d077:	scas   eax,DWORD PTR es:[edi]
  41d078:	mov    esp,0x24fdf05c
  41d07d:	(bad)  
  41d07e:	fisub  DWORD PTR [edx+0x47dd8804]
  41d084:	mov    esp,DWORD PTR [ebx]
  41d086:	repz hlt 
  41d088:	repz fcomp QWORD PTR [eax+0x1d]
  41d08c:	clc    
  41d08d:	mul    BYTE PTR [eax+0x33c3e3bd]
  41d093:	stc    
  41d094:	aad    0x18
  41d096:	imul   ecx,DWORD PTR [edi],0xffffff94
  41d099:	push   edx
  41d09a:	dec    ebp
  41d09b:	and    DWORD PTR [ebp+0x15ac73dd],0xd10e07c0
  41d0a5:	mov    eax,0xc12b3537
  41d0aa:	sub    cl,BYTE PTR [esp+eiz*8]
  41d0ad:	fnstsw WORD PTR [ebp+0x58]
  41d0b0:	cwde   
  41d0b1:	in     al,0x5d
  41d0b3:	das    
  41d0b4:	jg     0x41d0e3
  41d0b6:	inc    ebp
  41d0b7:	xchg   edx,eax
  41d0b8:	cmp    eax,0xd375c1e0
  41d0bd:	pop    ss
  41d0be:	jg     0x41d0a8
  41d0c0:	std    
  41d0c1:	stc    
  41d0c2:	pop    ss
  41d0c3:	push   0xffffffa8
  41d0c5:	mov    esp,0xb09cbba1
  41d0ca:	pop    es
  41d0cb:	jmp    0xab8dd2eb
  41d0d0:	jne    0x41d0da
  41d0d2:	(bad)  
  41d0d3:	lds    esp,FWORD PTR [ebx-0x1d]
  41d0d6:	lea    ebp,[ebp-0x2f26797a]
  41d0dc:	jecxz  0x41d0c0
  41d0de:	and    eax,0x2762e661
  41d0e3:	or     cl,BYTE PTR [ebx+0x53]
  41d0e6:	inc    ebx
  41d0e7:	push   edi
  41d0e8:	mov    bh,0x5
  41d0ea:	repz mov ebx,0x2a321051
  41d0f0:	cld    
  41d0f1:	sbb    bl,BYTE PTR [ebx-0x6bb26487]
  41d0f7:	lds    edx,FWORD PTR [edi]
  41d0f9:	xlat   BYTE PTR ds:[ebx]
  41d0fa:	ror    BYTE PTR [edx+0x5d],cl
  41d0fd:	hlt    
  41d0fe:	jge    0x41d11e
  41d100:	adc    bl,BYTE PTR [esi-0x2f]
  41d103:	pop    edx
  41d104:	xchg   edi,eax
  41d105:	leave  
  41d106:	xor    ch,BYTE PTR [ecx-0x53]
  41d109:	add    DWORD PTR [ecx-0x235f0398],edx
  41d10f:	jmp    0x41d12f
  41d111:	sub    cl,BYTE PTR [ecx]
  41d113:	ds aas 
  41d115:	fiadd  DWORD PTR [ebx]
  41d117:	ds sub BYTE PTR fs:[ebx+0x998302e],ch
  41d11f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d120:	and    DWORD PTR [ebp-0x7c],esi
  41d123:	jns    0x41d120
  41d125:	or     esp,DWORD PTR [edi-0x163128df]
  41d12b:	sub    DWORD PTR [edx+ecx*2],edx
  41d12e:	pop    ss
  41d12f:	xchg   BYTE PTR [ebx],ch
  41d131:	sub    DWORD PTR [edi],ebp
  41d133:	jg     0x17df409
  41d139:	aad    0xcc
  41d13b:	fldln2 
  41d13d:	aam    0xc
  41d13f:	or     al,0x7
  41d141:	mov    ss:0x26c50fe1,al
  41d147:	mov    eax,0x211254f2
  41d14c:	ret    
  41d14d:	(bad)  
  41d14e:	icebp  
  41d14f:	popf   
  41d150:	inc    bl
  41d152:	aam    0x49
  41d154:	out    dx,al
  41d155:	test   eax,ecx
  41d157:	jg     0x41d196
  41d159:	mov    ?,ebx
  41d15b:	stos   BYTE PTR es:[edi],al
  41d15c:	loop   0x41d1cd
  41d15e:	or     al,0x3
  41d160:	in     eax,dx
  41d161:	gs jne 0x41d1ba
  41d164:	cli    
  41d165:	mov    dl,ah
  41d167:	mov    ss,WORD PTR [esi-0xd]
  41d16a:	jl     0x41d153
  41d16c:	sub    eax,DWORD PTR [ebp+0x6403ea85]
  41d172:	xchg   ebx,eax
  41d173:	test   eax,0xe2d4b9a3
  41d178:	pop    ebx
  41d179:	stc    
  41d17a:	rcl    edx,0x71
  41d17d:	jge    0x41d12f
  41d17f:	sbb    DWORD PTR [eax-0x7f],ecx
  41d182:	jnp    0x41d104
  41d184:	jg     0x41d1eb
  41d186:	and    cl,cl
  41d188:	test   DWORD PTR [ecx-0x44819321],edi
  41d18e:	aam    0xfe
  41d190:	mov    al,ds:0xec0195f9
  41d195:	int    0xf9
  41d197:	ins    BYTE PTR es:[edi],dx
  41d198:	pop    DWORD PTR [edx]
  41d19a:	dec    ebp
  41d19b:	retf   
  41d19c:	int    0x13
  41d19e:	sar    DWORD PTR [edi],1
  41d1a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d1a1:	daa    
  41d1a2:	cmp    edx,DWORD PTR [ebx+0x3d]
  41d1a5:	pop    eax
  41d1a6:	and    ch,BYTE PTR [ebx-0x2b69f4c9]
  41d1ac:	pusha  
  41d1ad:	sbb    ah,BYTE PTR [eax]
  41d1af:	jl     0x41d1ec
  41d1b1:	aad    0x14
  41d1b3:	mov    al,ds:0xcd972974
  41d1b8:	xchg   ecx,eax
  41d1b9:	xchg   esi,eax
  41d1ba:	ss sub eax,0xcbee2c59
  41d1c0:	add    eax,DWORD PTR [edi+edi*4+0x507972c]
  41d1c7:	test   eax,0x25e91a4f
  41d1cc:	dec    ebp
  41d1cd:	jl     0x41d207
  41d1cf:	inc    ecx
  41d1d0:	fidivr DWORD PTR [esi]
  41d1d2:	fucom  st(7)
  41d1d4:	pop    esi
  41d1d5:	ins    BYTE PTR es:[edi],dx
  41d1d6:	(bad)  
  41d1d7:	es popaw 
  41d1da:	xlat   BYTE PTR ds:[ebx]
  41d1db:	mov    ds:0x7ed85e81,eax
  41d1e0:	daa    
  41d1e1:	stos   BYTE PTR es:[edi],al
  41d1e2:	mov    edi,ecx
  41d1e4:	add    al,0xd1
  41d1e6:	call   0x46c3b215
  41d1eb:	dec    edx
  41d1ec:	inc    ebp
  41d1ed:	dec    ebx
  41d1ee:	les    ecx,FWORD PTR [esi]
  41d1f0:	mov    eax,0x34204d9a
  41d1f5:	push   0xc527e17b
  41d1fa:	out    0x3e,eax
  41d1fc:	add    eax,0x67112427
  41d201:	out    0x7b,al
  41d203:	mov    edx,0x53b3d502
  41d208:	jmp    0xa5cc6654
  41d20d:	jbe    0x41d1e2
  41d20f:	push   ds
  41d210:	sub    bl,ah
  41d212:	mov    edi,0x871f67e7
  41d217:	push   cs
  41d218:	jae    0x41d1c6
  41d21a:	ror    al,cl
  41d21c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d21d:	pop    esi
  41d21e:	rcr    DWORD PTR [edi-0x2e24cc3],0xf8
  41d225:	cmp    ch,BYTE PTR [edi]
  41d227:	loop   0x41d262
  41d229:	stc    
  41d22a:	cld    
  41d22b:	out    0x5b,al
  41d22d:	push   esi
  41d22e:	adc    al,0xc4
  41d230:	push   0xfed357eb
  41d235:	clc    
  41d236:	push   esp
  41d237:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d238:	leave  
  41d239:	pop    eax
  41d23a:	jno    0x41d217
  41d23c:	out    0x5d,eax
  41d23e:	jle    0x41d1e8
  41d240:	(bad)  
  41d241:	stc    
  41d242:	nop
  41d243:	aaa    
  41d244:	repz xchg esp,eax
  41d246:	pusha  
  41d247:	popa   
  41d248:	fs pop ecx
  41d24b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d24c:	leave  
  41d24d:	scas   al,BYTE PTR es:[edi]
  41d24e:	add    al,0x4f
  41d250:	es imul edi,edi,0xffffff93
  41d254:	add    bl,al
  41d256:	push   ebx
  41d257:	mov    ah,0xf9
  41d259:	sub    al,0x6a
  41d25b:	iret   
  41d25c:	hlt    
  41d25d:	mov    gs,WORD PTR [edi]
  41d25f:	jg     0xe66755d3
  41d265:	and    BYTE PTR [ebp+0x7a087868],al
  41d26b:	fldcw  WORD PTR [esi]
  41d26d:	dec    ebx
  41d26e:	leave  
  41d26f:	sbb    al,0x6d
  41d271:	xor    al,0x5c
  41d273:	cld    
  41d274:	mov    cs,ebp
  41d276:	push   ebp
  41d277:	push   edx
  41d278:	adc    dh,BYTE PTR [ebp-0x5a]
  41d27b:	loopne 0x41d29e
  41d27d:	sbb    edi,DWORD PTR [eax+0x21]
  41d280:	rcl    esi,1
  41d282:	jns    0x41d235
  41d284:	ins    DWORD PTR es:[edi],dx
  41d285:	pop    eax
  41d286:	sub    ecx,DWORD PTR [edi-0x13bd0217]
  41d28c:	adc    dh,BYTE PTR [ebp-0x25ef3045]
  41d292:	imul   edi,DWORD PTR [esi+0x41],0x22
  41d296:	mov    al,0xad
  41d298:	or     DWORD PTR [ecx-0x7d],eax
  41d29b:	js     0x41d2a6
  41d29d:	(bad)  
  41d29e:	xor    bh,BYTE PTR [ecx]
  41d2a0:	mov    dh,0x1a
  41d2a2:	dec    edx
  41d2a3:	je     0x41d2b0
  41d2a5:	imul   DWORD PTR [ecx-0x2e]
  41d2a8:	and    al,0x2b
  41d2aa:	es loope 0x41d24b
  41d2ad:	in     eax,dx
  41d2ae:	out    0xb7,eax
  41d2b0:	cmp    DWORD PTR [ecx],ebx
  41d2b2:	aas    
  41d2b3:	lock int3 
  41d2b5:	int3   
  41d2b6:	adc    ch,BYTE PTR [eax-0x2029b61]
  41d2bc:	rcl    DWORD PTR [eax+eiz*8],cl
  41d2bf:	std    
  41d2c0:	adc    eax,0x42b8893b
  41d2c5:	bound  edi,QWORD PTR [ebx+ecx*4+0x5]
  41d2c9:	jl     0x41d26c
  41d2cb:	mov    BYTE PTR [esi-0x5f6f0c28],bh
  41d2d1:	dec    edi
  41d2d2:	push   ebx
  41d2d3:	in     al,0x9b
  41d2d5:	bound  edi,QWORD PTR [edx-0x6b2d619c]
  41d2db:	cmp    edx,DWORD PTR [edx-0x80]
  41d2de:	shr    BYTE PTR [ebx+edi*1],0x9d
  41d2e2:	xor    dh,BYTE PTR [eax-0x3a031c99]
  41d2e8:	lods   al,BYTE PTR ds:[esi]
  41d2e9:	pop    ebx
  41d2ea:	add    ebp,edx
  41d2ec:	sbb    ecx,DWORD PTR [eax]
  41d2ee:	push   edi
  41d2ef:	scas   eax,DWORD PTR es:[edi]
  41d2f0:	sub    esi,DWORD PTR [ecx-0x9]
  41d2f3:	popa   
  41d2f4:	mov    dl,bh
  41d2f6:	or     DWORD PTR [ebp-0x54],ecx
  41d2f9:	retf   0x4351
  41d2fc:	ror    BYTE PTR [ebx],0xd7
  41d2ff:	cwde   
  41d300:	and    al,0x33
  41d302:	fild   QWORD PTR [esi]
  41d304:	aaa    
  41d305:	(bad)  
  41d306:	sahf   
  41d307:	(bad)
  41d30a:	fidiv  WORD PTR [esi+ebx*2-0x148a58c8]
  41d311:	out    dx,eax
  41d312:	bound  eax,QWORD PTR [ebx]
  41d314:	stc    
  41d315:	push   ebp
  41d316:	ds call 0xd932:0xa9801bba
  41d31e:	fwait
  41d31f:	loopne 0x41d34f
  41d321:	push   edx
  41d322:	jne    0x41d2bf
  41d324:	(bad)  
  41d326:	sub    eax,DWORD PTR [eax-0x7c3dbe13]
  41d32c:	cmp    al,0x34
  41d32e:	idiv   DWORD PTR [edi+0x2786344b]
  41d334:	stos   BYTE PTR es:[edi],al
  41d335:	int    0xb9
  41d337:	dec    edx
  41d338:	sub    eax,0x79661d4f
  41d33d:	icebp  
  41d33e:	js     0x41d380
  41d340:	rcl    DWORD PTR [edx+ecx*1],1
  41d343:	mov    bl,0xa1
  41d345:	lock xchg esp,eax
  41d347:	mov    edx,0xf639bb3d
  41d34c:	imul   ebx,DWORD PTR [ebx],0x2ca31b4f
  41d352:	test   al,0x57
  41d354:	inc    ebx
  41d355:	pop    ds
  41d356:	or     esi,DWORD PTR [ecx-0x56c5fdb2]
  41d35c:	call   0x976e52cc
  41d361:	add    bh,BYTE PTR [esi+edx*4]
  41d364:	jge    0x41d37d
  41d366:	or     edx,edx
  41d368:	pop    esp
  41d369:	loope  0x41d3cf
  41d36b:	icebp  
  41d36c:	cmp    DWORD PTR [ebp-0x8],0x7a
  41d370:	sbb    bh,dl
  41d372:	das    
  41d373:	fwait
  41d374:	in     eax,dx
  41d375:	ret    0x5019
  41d378:	inc    edi
  41d379:	mov    WORD PTR [ebx],cs
  41d37b:	das    
  41d37c:	outs   dx,BYTE PTR ds:[esi]
  41d37d:	adc    al,bl
  41d37f:	xchg   ebx,eax
  41d380:	lahf   
  41d381:	js     0x41d3de
  41d383:	sbb    eax,0x5d0b19f
  41d388:	lea    edx,[ecx-0x50]
  41d38b:	add    eax,0x47169fd
  41d390:	cli    
  41d391:	sub    eax,0xb1beb957
  41d396:	jns    0x41d38e
  41d398:	(bad)  
  41d399:	ja     0x41d36f
  41d39b:	and    BYTE PTR [esi+0x11103ca0],ah
  41d3a1:	jae    0x41d3b2
  41d3a3:	mov    eax,DWORD PTR [edx+0x3d]
  41d3a6:	fimul  WORD PTR [esp+eax*4]
  41d3a9:	fiadd  WORD PTR [eax-0x18]
  41d3ac:	dec    ecx
  41d3ad:	and    ah,BYTE PTR [eax+0x5c1c70e7]
  41d3b3:	cmp    BYTE PTR [edi],cl
  41d3b5:	pusha  
  41d3b6:	sub    edx,DWORD PTR [esp+edi*4+0x75168898]
  41d3bd:	cmp    al,0x5
  41d3bf:	mov    ecx,0x5d82754a
  41d3c4:	xor    ebp,DWORD PTR [ebp+0x5a]
  41d3c7:	test   BYTE PTR [edx+0x51],dl
  41d3ca:	gs retf 
  41d3cc:	adc    eax,DWORD PTR [edx+0x4fea841]
  41d3d2:	stos   BYTE PTR es:[edi],al
  41d3d3:	retf   
  41d3d4:	add    edx,DWORD PTR [edi+0x5e6539e0]
  41d3da:	icebp  
  41d3db:	inc    edx
  41d3dc:	pop    eax
  41d3dd:	adc    al,0x6f
  41d3df:	mov    dl,0x7
  41d3e1:	fsubr  DWORD PTR [ebx]
  41d3e3:	fmul   QWORD PTR [esi]
  41d3e5:	xor    esi,ecx
  41d3e7:	test   eax,0xd4cccae3
  41d3ec:	and    bl,BYTE PTR [esi+0x5]
  41d3ef:	lods   al,BYTE PTR ds:[esi]
  41d3f0:	ds jb  0x41d438
  41d3f3:	dec    edx
  41d3f4:	sub    eax,ecx
  41d3f6:	cwde   
  41d3f7:	xor    al,BYTE PTR [ecx]
  41d3f9:	iret   
  41d3fa:	data16 aad 0xfe
  41d3fd:	sbb    eax,DWORD PTR [ebx]
  41d3ff:	pop    ss
  41d400:	sbb    ebp,DWORD PTR [edi+0x24e316a]
  41d406:	shl    DWORD PTR [ebp+0x7b98b60e],0x92
  41d40d:	jbe    0x41d3a4
  41d40f:	inc    edx
  41d410:	icebp  
  41d411:	test   bl,cl
  41d413:	lds    edx,FWORD PTR [edi-0x37]
  41d416:	ja     0x41d3aa
  41d418:	sub    dh,BYTE PTR [esi-0x3e]
  41d41b:	leave  
  41d41c:	in     eax,0x4c
  41d41e:	mov    edi,0x96d649f
  41d423:	test   eax,0xde8756f9
  41d428:	adc    BYTE PTR [esi-0x59753cef],dh
  41d42e:	xchg   esi,eax
  41d42f:	pop    es
  41d430:	stos   DWORD PTR es:[edi],eax
  41d431:	aad    0xb8
  41d433:	sbb    esi,esi
  41d435:	neg    ebp
  41d437:	xor    esp,ebp
  41d439:	fisttp QWORD PTR [esi-0x3100fb7d]
  41d43f:	sbb    eax,0x458d5597
  41d444:	imul   ecx,esi,0x8
  41d447:	lods   al,BYTE PTR ds:[esi]
  41d448:	outs   dx,DWORD PTR ds:[esi]
  41d449:	inc    esi
  41d44a:	mov    edi,0x3b8ad8ac
  41d44f:	data16 or bl,0x41
  41d453:	cwde   
  41d454:	inc    ecx
  41d455:	cmp    al,dh
  41d457:	pop    eax
  41d458:	lock push cs
  41d45a:	mov    DWORD PTR [edi-0x5fec573c],esp
  41d460:	into   
  41d461:	jno    0x41d42e
  41d463:	push   eax
  41d464:	dec    eax
  41d465:	and    BYTE PTR [ebp-0x72],ch
  41d468:	jg     0x41d450
  41d46a:	cmp    DWORD PTR [esi],edi
  41d46c:	ins    DWORD PTR es:[edi],dx
  41d46d:	dec    edi
  41d46e:	ffreep st(6)
  41d470:	and    ebp,DWORD PTR [edi]
  41d472:	retf   0xbb9a
  41d475:	fimul  WORD PTR [ebp-0x12]
  41d478:	pop    ss
  41d479:	loop   0x41d439
  41d47b:	out    0x97,eax
  41d47d:	cli    
  41d47e:	mov    al,0xb1
  41d480:	js     0x41d44f
  41d482:	leave  
  41d483:	lods   al,BYTE PTR ds:[esi]
  41d484:	retf   0x4467
  41d487:	or     al,0xcf
  41d489:	mov    eax,0xcf579117
  41d48e:	dec    esp
  41d48f:	jb     0x41d4cd
  41d491:	(bad)  
  41d492:	(bad)  
  41d493:	call   0x14c3a40b
  41d498:	jmp    0xe0e4722e
  41d49d:	add    al,0x39
  41d49f:	out    dx,al
  41d4a0:	out    0x99,al
  41d4a2:	push   edi
  41d4a3:	ret    
  41d4a4:	inc    edx
  41d4a5:	or     al,0x1
  41d4a7:	adc    al,0xbf
  41d4a9:	push   ecx
  41d4aa:	stos   BYTE PTR es:[edi],al
  41d4ab:	fiadd  WORD PTR [esi+0xc87861]
  41d4b1:	mov    ds:0x5955ca65,eax
  41d4b6:	clc    
  41d4b7:	push   0xa7522300
  41d4bc:	in     al,dx
  41d4bd:	or     esi,esp
  41d4bf:	aas    
  41d4c0:	fs shr bh,cl
  41d4c3:	je     0x41d47d
  41d4c5:	sub    dl,BYTE PTR [ecx-0x9]
  41d4c8:	mov    ds:0x8fa4f979,eax
  41d4cd:	mov    ds:0x5377bc09,al
  41d4d2:	mov    WORD PTR [ecx-0x2f],gs
  41d4d5:	xor    DWORD PTR [esi],esp
  41d4d7:	jae    0x41d533
  41d4d9:	ins    BYTE PTR es:[edi],dx
  41d4da:	xchg   esi,eax
  41d4db:	sub    bh,cl
  41d4dd:	inc    ebx
  41d4de:	in     al,0x55
  41d4e0:	push   ecx
  41d4e1:	mov    gs,WORD PTR [edx]
  41d4e3:	ins    BYTE PTR es:[edi],dx
  41d4e4:	or     al,0x88
  41d4e6:	push   esi
  41d4e7:	loope  0x41d4d0
  41d4e9:	nop
  41d4ea:	outs   dx,BYTE PTR ds:[esi]
  41d4eb:	push   esi
  41d4ec:	les    edi,FWORD PTR [esi+0x2632e52a]
  41d4f2:	cli    
  41d4f3:	add    al,0xb1
  41d4f5:	dec    ebx
  41d4f6:	lea    ecx,[ecx]
  41d4f8:	sbb    BYTE PTR ds:0x6f9046b6,dh
  41d4fe:	das    
  41d4ff:	add    eax,0xfb0e293a
  41d504:	pop    ss
  41d505:	into   
  41d506:	leave  
  41d507:	push   esp
  41d508:	inc    edi
  41d509:	dec    ebp
  41d50a:	adc    BYTE PTR [ebp+0x6a],cl
  41d50d:	jns    0x41d518
  41d50f:	adc    ebp,DWORD PTR [edx]
  41d511:	jae    0x41d4bb
  41d513:	sub    al,0x91
  41d515:	and    DWORD PTR [esi+0x36],0x161ab7e4
  41d51c:	fisubr DWORD PTR [ebp-0x49cc98c2]
  41d522:	lods   eax,DWORD PTR ss:[esi]
  41d524:	sub    DWORD PTR [eax+0x40853b8b],esi
  41d52a:	dec    ebx
  41d52b:	mov    eax,0xc615e43d
  41d530:	jecxz  0x41d536
  41d532:	mov    ch,0x44
  41d534:	test   al,0x66
  41d536:	sub    edx,DWORD PTR [edi+0x6c]
  41d539:	cmp    ebp,DWORD PTR [edi-0x79706b2f]
  41d53f:	xchg   ecx,eax
  41d540:	int3   
  41d541:	or     eax,0x74dc0270
  41d546:	and    eax,0x8207034c
  41d54b:	xchg   ecx,eax
  41d54c:	clc    
  41d54d:	inc    esi
  41d54e:	jecxz  0x41d4e6
  41d550:	push   cs
  41d551:	cdq    
  41d552:	sub    edx,DWORD PTR [eax-0x29fc54]
  41d558:	dec    esp
  41d559:	lfs    edi,FWORD PTR [si]
  41d55d:	fwait
  41d55e:	push   esp
  41d55f:	pop    sp
  41d561:	dec    ebp
  41d562:	adc    BYTE PTR ds:0xfff1d3c0,bl
  41d568:	gs cmp al,0xda
  41d56b:	cwde   
  41d56c:	pop    ebx
  41d56d:	or     eax,0x258655ca
  41d572:	sar    ah,cl
  41d574:	mov    ebx,0x38450daf
  41d579:	cmp    eax,0xb229c2e1
  41d57e:	ret    0xc807
  41d581:	pop    ebx
  41d582:	pop    esi
  41d583:	fst    QWORD PTR [esi]
  41d585:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d586:	inc    ecx
  41d587:	jp     0x41d58f
  41d589:	sub    DWORD PTR [esi],0x30
  41d58c:	push   cs
  41d58d:	push   0x6de13df
  41d592:	pop    edx
  41d593:	xor    DWORD PTR [ebx],0xea153f47
  41d599:	shl    BYTE PTR [ebp-0x24],0x2f
  41d59d:	aaa    
  41d59e:	imul   BYTE PTR [edx*1-0x4880fa2a]
  41d5a5:	and    bl,BYTE PTR [edx]
  41d5a7:	fisttp DWORD PTR [edx]
  41d5a9:	mov    WORD PTR [edx-0x39],?
  41d5ac:	ss popaw 
  41d5af:	imul   BYTE PTR [edx-0x38]
  41d5b2:	pop    esi
  41d5b3:	mov    ds:0xf71cfa8b,eax
  41d5b8:	aad    0xc7
  41d5ba:	cmp    al,BYTE PTR [ebp-0x266d43c9]
  41d5c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5c1:	ja     0x41d614
  41d5c3:	ret    0xde36
  41d5c6:	out    dx,eax
  41d5c7:	xlat   BYTE PTR ds:[ebx]
  41d5c8:	or     bh,ah
  41d5ca:	shr    DWORD PTR [esi+0x14e227ed],0x3
  41d5d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d5d2:	mov    esi,0xd0ba50cb
  41d5d7:	out    0x72,eax
  41d5d9:	add    al,BYTE PTR [ebx+0x53]
  41d5dc:	aad    0xed
  41d5de:	push   edx
  41d5df:	push   es
  41d5e0:	adc    DWORD PTR [eax],edx
  41d5e2:	push   0xffffff88
  41d5e4:	dec    ebp
  41d5e5:	mov    bh,0xeb
  41d5e7:	pop    ss
  41d5e8:	pop    esi
  41d5e9:	aas    
  41d5ea:	and    al,0x9b
  41d5ec:	jns    0x41d5a8
  41d5ee:	push   es
  41d5ef:	shl    BYTE PTR [edx+0x22b0ed29],cl
  41d5f5:	bswap  edx
  41d5f7:	push   ss
  41d5f8:	lahf   
  41d5f9:	pop    esp
  41d5fa:	mov    ch,0x4f
  41d5fc:	xor    eax,0xfc7a9789
  41d601:	xor    ah,BYTE PTR [ecx+eiz*4-0x25]
  41d605:	fwait
  41d606:	cmp    edx,edx
  41d608:	repnz cli 
  41d60a:	and    eax,0x5eb024e
  41d60f:	jp     0x41d673
  41d611:	test   eax,0x3c1564d6
  41d616:	xchg   ebp,eax
  41d617:	rcr    DWORD PTR [edi],1
  41d619:	adc    BYTE PTR [ecx],dl
  41d61b:	mov    ?,esi
  41d61d:	(bad)  
  41d61e:	dec    edx
  41d61f:	shl    DWORD PTR [edx-0x7d],1
  41d622:	test   eax,0x8b3ee88a
  41d627:	push   esi
  41d628:	sbb    ebx,ebx
  41d62a:	data16 out 0x81,al
  41d62d:	inc    ebx
  41d62e:	ficom  DWORD PTR [ebp+0x42]
  41d631:	push   0xb051180
  41d636:	mov    ds:0x3a463fdf,al
  41d63b:	mov    esp,DWORD PTR [ebp+0x61]
  41d63e:	sbb    DWORD PTR [edx+esi*2+0x57d1d237],0x27
  41d646:	jecxz  0x41d653
  41d648:	neg    BYTE PTR [edi-0x272ea88c]
  41d64e:	push   esp
  41d64f:	sbb    al,0x71
  41d651:	lods   al,BYTE PTR ds:[esi]
  41d652:	inc    esp
  41d653:	ins    DWORD PTR es:[edi],dx
  41d654:	bound  eax,QWORD PTR [ebx+ebp*8+0x3bbbd14f]
  41d65b:	xchg   edi,eax
  41d65c:	mov    al,BYTE PTR [ebx+esi*4]
  41d65f:	stc    
  41d660:	jle    0x41d5e3
  41d662:	outs   dx,BYTE PTR ds:[esi]
  41d663:	hlt    
  41d664:	mov    ah,0x8
  41d666:	sbb    al,0x53
  41d668:	xlat   BYTE PTR ds:[ebx]
  41d669:	imul   edi,DWORD PTR [esp+ecx*4],0x2b
  41d66d:	jle    0x41d6ba
  41d66f:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41d671:	int3   
  41d672:	sub    al,0xf1
  41d674:	mov    bl,0xad
  41d676:	mov    DWORD PTR es:[esi-0x69da5fda],edx
  41d67d:	ror    BYTE PTR [ebx],1
  41d67f:	(bad)  
  41d680:	fidiv  DWORD PTR [ecx]
  41d682:	push   0x5
  41d684:	xchg   esi,eax
  41d685:	bound  esi,QWORD PTR ds:0xb9d9becd
  41d68b:	into   
  41d68c:	aad    0x2f
  41d68e:	jp     0x41d696
  41d690:	dec    esp
  41d691:	dec    esp
  41d692:	ret    
  41d693:	shl    DWORD PTR [ebx-0x7a],cl
  41d696:	into   
  41d697:	icebp  
  41d698:	fidiv  WORD PTR [esi-0x35602d5a]
  41d69e:	repnz dec edx
  41d6a0:	stc    
  41d6a1:	push   edx
  41d6a2:	inc    esp
  41d6a3:	(bad)  
  41d6a4:	mov    eax,0x21e33127
  41d6a9:	loopne 0x41d64d
  41d6ab:	push   esp
  41d6ac:	push   cs
  41d6ad:	xchg   edi,eax
  41d6ae:	fdivr  st(2),st
  41d6b0:	cld    
  41d6b1:	or     BYTE PTR [edx-0x22],ch
  41d6b4:	(bad)  
  41d6b6:	or     esi,esi
  41d6b8:	jmp    0x68ab:0x2ba86eb4
  41d6bf:	int3   
  41d6c0:	inc    ecx
  41d6c1:	pusha  
  41d6c2:	popa   
  41d6c3:	adc    al,0x26
  41d6c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d6c6:	dec    esp
  41d6c7:	adc    ah,BYTE PTR ds:0x14135168
  41d6cd:	and    ecx,DWORD PTR ds:0xe3c5861a
  41d6d3:	inc    esp
  41d6d4:	mov    dh,0xf5
  41d6d6:	push   edi
  41d6d7:	and    eax,0xff9fe630
  41d6dc:	mov    eax,DWORD PTR [ecx]
  41d6de:	mov    esp,0xd6783cd9
  41d6e3:	dec    esp
  41d6e4:	daa    
  41d6e5:	in     al,0x29
  41d6e7:	cwde   
  41d6e8:	cs dec ecx
  41d6ea:	pop    ebx
  41d6eb:	pushf  
  41d6ec:	pop    esi
  41d6ed:	(bad)  
  41d6ef:	loopne 0x41d76a
  41d6f1:	adc    edx,DWORD PTR [edi+0x79]
  41d6f4:	pop    ebx
  41d6f5:	mov    bh,dl
  41d6f7:	mov    al,ds:0x3885e4d3
  41d6fc:	(bad)  
  41d6fd:	dec    edi
  41d6fe:	xor    BYTE PTR [ebx],dl
  41d700:	imul   edx,esi,0xe9e46061
  41d706:	push   ecx
  41d707:	cmp    BYTE PTR [ebx-0x7d45ef97],0xfc
  41d70e:	inc    esi
  41d70f:	int3   
  41d710:	in     eax,0x4
  41d712:	cmp    eax,0xb46583f5
  41d717:	shr    cl,1
  41d719:	out    dx,al
  41d71a:	mov    edx,0xbc7146ec
  41d71f:	fwait
  41d720:	add    BYTE PTR ds:0x72f01d52,al
  41d726:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d727:	ss cld 
  41d729:	outs   dx,BYTE PTR ds:[esi]
  41d72a:	add    DWORD PTR [eax-0x24],esi
  41d72d:	out    dx,eax
  41d72e:	cmp    al,0xfd
  41d730:	pop    ebx
  41d731:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d733:	mov    ds:0xc98fe804,eax
  41d738:	sahf   
  41d739:	jecxz  0x41d6f0
  41d73b:	leave  
  41d73c:	mov    ecx,0x737f3992
  41d741:	aad    0xce
  41d743:	shl    DWORD PTR [ebp+0x78],cl
  41d746:	jno    0x41d7ab
  41d748:	test   al,0x83
  41d74a:	jo     0x41d723
  41d74c:	int3   
  41d74d:	inc    eax
  41d74e:	or     bh,BYTE PTR [edi+0x78]
  41d751:	rol    BYTE PTR [eax],1
  41d753:	int    0x7f
  41d755:	push   ss
  41d756:	ds mov bl,0xa7
  41d759:	inc    ecx
  41d75a:	lds    edx,FWORD PTR [edx+edx*1-0x5f73b88f]
  41d761:	mov    DWORD PTR [eax-0x62cdaa63],ebp
  41d767:	pushf  
  41d768:	retf   
  41d769:	sahf   
  41d76a:	adc    ebx,ebx
  41d76c:	sub    edx,eax
  41d76e:	enter  0xeff3,0xd7
  41d772:	loopne 0x41d6f7
  41d774:	mov    edi,0x341cd16f
  41d779:	inc    dh
  41d77b:	and    edx,DWORD PTR [edi-0x53f8c6b]
  41d781:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d782:	sub    ah,BYTE PTR [ebx]
  41d784:	jge    0x41d7f4
  41d786:	in     eax,dx
  41d787:	imul   eax,DWORD PTR [edi],0xffffff9c
  41d78a:	cwde   
  41d78b:	or     edx,DWORD PTR [esi+ecx*4]
  41d78e:	mov    al,0xdd
  41d790:	push   edx
  41d791:	hlt    
  41d792:	fsubr  st,st(3)
  41d794:	test   eax,0x2bd3259d
  41d799:	push   eax
  41d79a:	(bad)  
  41d79b:	neg    DWORD PTR [esi+0x73b0265a]
  41d7a1:	inc    edx
  41d7a2:	cmp    DWORD PTR [ecx],ecx
  41d7a4:	into   
  41d7a5:	mov    esp,DWORD PTR [ebx-0x32]
  41d7a8:	mov    BYTE PTR [ecx+0x720165a8],dh
  41d7ae:	bound  eax,QWORD PTR [eax]
  41d7b0:	pop    ss
  41d7b1:	xchg   edi,eax
  41d7b2:	xor    edi,0x9293a81f
  41d7b8:	es inc edi
  41d7ba:	and    ebp,ebp
  41d7bc:	retf   0xa1aa
  41d7bf:	mov    cl,ah
  41d7c1:	mov    esp,0x1b8e2ab0
  41d7c6:	push   0x35
  41d7c8:	pop    esp
  41d7c9:	cmc    
  41d7ca:	(bad)  
  41d7cb:	push   ebp
  41d7cc:	arpl   WORD PTR [ebp-0x58],bp
  41d7cf:	adc    BYTE PTR [edi+0x75],ah
  41d7d2:	mov    ecx,0x15b2924b
  41d7d7:	rol    BYTE PTR [ebp-0x634272ef],0xbc
  41d7de:	pusha  
  41d7df:	mov    edx,0x63ea878c
  41d7e4:	mov    al,0x74
  41d7e6:	rcl    DWORD PTR [esi+0xa7b41cb],1
  41d7ec:	add    edi,DWORD PTR [eax-0x40]
  41d7ef:	imul   esi,DWORD PTR es:[edx+0x3911674],0x5fb415b6
  41d7fa:	test   DWORD PTR [ecx],ecx
  41d7fc:	mov    BYTE PTR [edi],ch
  41d7fe:	imul   ecx,DWORD PTR [ebx+0x33],0x78
  41d802:	mov    ds:0xf169c208,al
  41d807:	dec    esp
  41d808:	dec    edi
  41d809:	(bad)  [esi+0x28]
  41d80c:	dec    ebp
  41d80d:	adc    BYTE PTR [ebx],bh
  41d80f:	mov    esp,0x77183de0
  41d814:	push   cs
  41d815:	leave  
  41d816:	int3   
  41d817:	mov    ?,WORD PTR [edi+0x5114482c]
  41d81d:	pop    ebx
  41d81e:	repnz fsub st,st(7)
  41d821:	fisubr DWORD PTR [esp+ebp*2-0xa1221ab]
  41d828:	or     eax,0xa69c4394
  41d82d:	sbb    bh,BYTE PTR [ebx]
  41d82f:	test   BYTE PTR [ecx-0x721d57d9],ch
  41d835:	fnstsw WORD PTR gs:[edi+0x7c]
  41d839:	dec    edi
  41d83a:	(bad)  
  41d83b:	outs   dx,BYTE PTR ds:[esi]
  41d83c:	(bad)  
  41d83d:	sti    
  41d83e:	jecxz  0x41d882
  41d840:	jae    0x41d816
  41d842:	mov    DWORD PTR [edx],ebx
  41d844:	dec    eax
  41d845:	and    al,0x1b
  41d847:	jo     0x41d8c2
  41d849:	fcmovnbe st,st(6)
  41d84b:	mov    ds:0x51ff1ab6,al
  41d850:	push   ss
  41d851:	push   ds
  41d852:	pushf  
  41d853:	ins    DWORD PTR es:[edi],dx
  41d854:	call   0xc4cd:0x870fb49d
  41d85b:	shl    dh,1
  41d85d:	adc    al,BYTE PTR [ecx-0x6f2f50c1]
  41d863:	xor    eax,0x5b9ded5f
  41d868:	push   si
  41d86a:	pop    esi
  41d86b:	in     eax,0x6e
  41d86d:	je     0x41d8ee
  41d86f:	xchg   edi,eax
  41d870:	jno    0x41d85a
  41d872:	add    ebx,0x13
  41d875:	adc    BYTE PTR [edx+0x44b36c87],al
  41d87b:	in     al,dx
  41d87c:	ds stos DWORD PTR es:[edi],eax
  41d87e:	stc    
  41d87f:	xchg   esi,eax
  41d880:	(bad)  
  41d881:	and    DWORD PTR [edx+0x22],edi
  41d884:	or     esi,DWORD PTR ds:0xd49cd26b
  41d88a:	shl    BYTE PTR [ebx],1
  41d88c:	lods   eax,DWORD PTR ds:[esi]
  41d88d:	loope  0x41d8a7
  41d88f:	cdq    
  41d890:	outs   dx,DWORD PTR ds:[esi]
  41d891:	std    
  41d892:	pusha  
  41d893:	dec    ecx
  41d894:	jmp    0x5575:0x3e70dc76
  41d89b:	data16 mov ah,0x8
  41d89e:	mov    eax,0xd689d1e2
  41d8a3:	push   ss
  41d8a4:	fisub  WORD PTR [ebp-0x4f499d6e]
  41d8aa:	mov    gs,WORD PTR [edx-0x4d6c9e34]
  41d8b0:	mov    al,0xa9
  41d8b2:	popa   
  41d8b3:	shl    DWORD PTR [edi+0x41],1
  41d8b6:	adc    eax,0x66bd35c9
  41d8bb:	repz push ds
  41d8bd:	shl    DWORD PTR [ebp-0x2e3f8bac],cl
  41d8c3:	add    eax,0xc8b90a1b
  41d8c8:	pop    esi
  41d8c9:	mov    BYTE PTR [ecx-0x4ce5e556],bl
  41d8cf:	push   esp
  41d8d0:	dec    eax
  41d8d1:	xchg   ebp,eax
  41d8d2:	inc    eax
  41d8d3:	ss aam 0x7b
  41d8d6:	jmp    0x41d879
  41d8d8:	mov    ch,0x74
  41d8da:	push   cs
  41d8db:	rcr    DWORD PTR [eax+0x33],1
  41d8de:	aas    
  41d8df:	mov    esp,0x3b70b667
  41d8e4:	scas   eax,DWORD PTR es:[edi]
  41d8e5:	dec    ecx
  41d8e6:	mov    ch,0x2f
  41d8e8:	and    DWORD PTR [edx+0x56d42b19],0x7b
  41d8ef:	xor    dl,BYTE PTR ds:0xaa909bf2
  41d8f5:	add    dh,0xc8
  41d8f8:	jecxz  0x41d8d4
  41d8fa:	fbstp  TBYTE PTR ds:0x8798fbe9
  41d900:	push   es
  41d901:	fdiv   st,st(3)
  41d903:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d904:	(bad)  [ebp-0xd772e5a]
  41d90a:	pop    ss
  41d90b:	(bad)  
  41d90c:	mov    ecx,0x90c714d5
  41d911:	adc    DWORD PTR [edx+0x6e63ccf2],ebp
  41d917:	ret    
  41d918:	(bad)  
  41d919:	je     0x41d925
  41d91b:	inc    DWORD PTR [ebp+0x3b]
  41d91e:	stos   DWORD PTR es:[edi],eax
  41d91f:	mov    ecx,0xb8a2cf77
  41d924:	or     dh,ch
  41d926:	dec    ecx
  41d927:	push   edi
  41d928:	dec    esi
  41d929:	or     al,0x65
  41d92b:	sbb    ecx,DWORD PTR [ebp+0x41]
  41d92e:	js     0x41d93c
  41d930:	push   edi
  41d931:	sbb    DWORD PTR [ebx+0xe163f53],0x695e38a
  41d93b:	adc    edx,DWORD PTR [edx]
  41d93d:	rcl    ebx,cl
  41d93f:	js     0x41d9b2
  41d941:	sar    DWORD PTR ds:0x35aa487f,1
  41d947:	sbb    al,0xae
  41d949:	shl    DWORD PTR [ebx],1
  41d94b:	xor    edi,DWORD PTR [esi+0x7fd9f098]
  41d951:	xor    al,BYTE PTR [ebx+0x1e]
  41d954:	and    bh,BYTE PTR [eax]
  41d956:	dec    edi
  41d957:	mov    edi,0x1d405a0a
  41d95c:	sub    esi,DWORD PTR [esi]
  41d95e:	xchg   ebp,eax
  41d95f:	and    al,BYTE PTR [ecx+0x69]
  41d962:	ins    DWORD PTR es:[edi],dx
  41d963:	test   DWORD PTR [esi],ebp
  41d965:	fidivr DWORD PTR [ebp-0x18]
  41d968:	(bad)  
  41d969:	xchg   ebp,eax
  41d96a:	push   es
  41d96b:	stos   DWORD PTR es:[edi],eax
  41d96c:	ret    0xfe8c
  41d96f:	sahf   
  41d970:	hlt    
  41d971:	test   eax,0x6c66c186
  41d976:	daa    
  41d977:	and    DWORD PTR [ebp-0x2d],edi
  41d97a:	dec    ebx
  41d97b:	pop    ebp
  41d97c:	sub    al,0xd4
  41d97e:	mov    dl,0x20
  41d980:	dec    ecx
  41d981:	add    DWORD PTR [edi],ecx
  41d983:	inc    esp
  41d984:	jo     0x41d98f
  41d986:	push   0x31
  41d988:	idiv   BYTE PTR [eax-0x18497e3]
  41d98e:	lock retf 
  41d990:	retf   0x468b
  41d993:	ficom  WORD PTR [ebx]
  41d995:	mov    DWORD PTR [edx+0x185811d9],eax
  41d99b:	sub    al,0x14
  41d99d:	push   es
  41d99e:	jmp    0x142e:0xbe2812ea
  41d9a5:	mov    dl,bh
  41d9a7:	xor    edx,DWORD PTR [ebp-0x77d4350f]
  41d9ad:	idiv   DWORD PTR [eax+ecx*4+0x4293be5a]
  41d9b4:	xor    BYTE PTR [eax-0x2],al
  41d9b7:	xchg   edx,eax
  41d9b8:	imul   edi,DWORD PTR [ecx],0xddc00b06
  41d9be:	imul   ebx,edi,0xeb48a3b7
  41d9c4:	xlat   BYTE PTR ds:[ebx]
  41d9c5:	jge    0x41d9b1
  41d9c7:	and    BYTE PTR [ecx-0x50],bh
  41d9ca:	push   0x4e2da5bd
  41d9cf:	xchg   DWORD PTR [ebp-0x1d],ecx
  41d9d2:	aas    
  41d9d3:	out    0x56,eax
  41d9d5:	pop    eax
  41d9d6:	ret    
  41d9d7:	xor    edx,ebp
  41d9d9:	xor    eax,0xc5829e37
  41d9de:	mov    ds:0xb46343ca,eax
  41d9e3:	adc    BYTE PTR [esi+0x36],al
  41d9e6:	imul   edi,DWORD PTR [esi-0x2],0xee6e6625
  41d9ed:	and    DWORD PTR [esi],ecx
  41d9ef:	inc    ebx
  41d9f0:	out    0x3a,al
  41d9f2:	jne    0x41d98f
  41d9f4:	repz or al,0xee
  41d9f7:	adc    ebx,DWORD PTR [ebx]
  41d9f9:	mov    dl,ch
  41d9fb:	mov    ebx,0xe3b6ac94
  41da00:	adc    al,0xf4
  41da02:	sub    bh,BYTE PTR [eax+0x7829520a]
  41da08:	mov    dl,0x63
  41da0a:	retf   
  41da0b:	loope  0x41da34
  41da0d:	add    BYTE PTR [edx],cl
  41da0f:	xrelease xchg BYTE PTR [edx-0x74a46526],bl
  41da16:	sub    eax,0x966c1821
  41da1b:	mov    edx,DWORD PTR [edi]
  41da1d:	hlt    
  41da1e:	mov    bh,0x86
  41da20:	cmp    esp,DWORD PTR [ebx+0x6ebbb5ed]
  41da26:	std    
  41da27:	or     al,0x88
  41da29:	scas   al,BYTE PTR es:[edi]
  41da2a:	mov    esp,0xa42c8aa7
  41da2f:	into   
  41da30:	mov    BYTE PTR [ecx-0x738cf525],bl
  41da36:	and    al,0x81
  41da38:	test   eax,0x2e44d4d0
  41da3d:	jns    0x41daa9
  41da3f:	fdivr  QWORD PTR [edx+eiz*8]
  41da42:	lods   al,BYTE PTR ds:[esi]
  41da43:	loope  0x41da14
  41da45:	ror    BYTE PTR [eax+0x11e8cb86],1
  41da4b:	ins    BYTE PTR es:[edi],dx
  41da4c:	arpl   WORD PTR [edx+0x380aa0cc],bp
  41da52:	cmc    
  41da53:	icebp  
  41da54:	test   al,0x77
  41da56:	scas   al,BYTE PTR es:[edi]
  41da57:	pop    esp
  41da58:	inc    edx
  41da59:	jl     0x41da8b
  41da5b:	sbb    cl,BYTE PTR [ecx+0x7c]
  41da5e:	inc    edx
  41da5f:	imul   ebp,DWORD PTR ds:0xa4c108cb,0xffffffe7
  41da66:	daa    
  41da67:	rcr    DWORD PTR [eax+ebx*4],1
  41da6a:	jbe    0x41da08
  41da6c:	push   ebx
  41da6d:	xchg   edx,eax
  41da6e:	shr    esp,1
  41da70:	xor    esp,ecx
  41da72:	cmp    dh,bh
  41da74:	push   ebp
  41da75:	pop    ecx
  41da76:	mov    gs,eax
  41da78:	cli    
  41da79:	xor    eax,0xd1b1461e
  41da7e:	fadd   DWORD PTR [ecx]
  41da80:	jns    0x41daaf
  41da82:	and    ebp,ecx
  41da84:	retf   
  41da85:	dec    ecx
  41da86:	dec    edi
  41da87:	jle    0x41da1c
  41da89:	out    0x5c,al
  41da8b:	dec    esi
  41da8c:	shl    dh,0xb8
  41da8f:	scas   al,BYTE PTR es:[edi]
  41da90:	bound  ebx,QWORD PTR [eax-0x6e]
  41da93:	in     eax,dx
  41da94:	imul   esp,DWORD PTR [edi+0x7d],0x61
  41da98:	and    ebx,DWORD PTR [esi+0x779d8812]
  41da9e:	addr16 mov ah,0xcd
  41daa1:	jmp    0x45c2a99d
  41daa6:	dec    esi
  41daa7:	push   edi
  41daa8:	repnz xor cl,BYTE PTR gs:[ebp+0x73]
  41daad:	jmp    0x31b0:0xa299478b
  41dab4:	retf   
  41dab5:	or     al,0x8a
  41dab7:	dec    esp
  41dab8:	inc    eax
  41dab9:	sbb    DWORD PTR [esi+edi*8+0x52],edi
  41dabd:	dec    esp
  41dabe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dabf:	mov    ebp,0xab2ac11b
  41dac4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dac5:	cmp    DWORD PTR [esi+ebp*8],ebp
  41dac8:	das    
  41dac9:	dec    esp
  41daca:	aam    0xe8
  41dacc:	sbb    esi,DWORD PTR [edi]
  41dace:	leave  
  41dacf:	pop    ebx
  41dad0:	in     al,dx
  41dad1:	leave  
  41dad2:	jbe    0x41da7d
  41dad4:	pop    es
  41dad5:	adc    bh,ah
  41dad7:	pop    edi
  41dad8:	das    
  41dad9:	test   DWORD PTR [edx+0x1e0803e3],edx
  41dadf:	pop    ebx
  41dae0:	cmp    cl,BYTE PTR [ecx-0x2e]
  41dae3:	aas    
  41dae4:	int    0xd5
  41dae6:	cs sbb al,0xdb
  41dae9:	or     DWORD PTR [esi+ecx*2+0x492ce7f4],edi
  41daf0:	pop    ebp
  41daf1:	and    BYTE PTR [esi],0xd6
  41daf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41daf5:	and    edi,ebp
  41daf7:	xchg   esp,eax
  41daf8:	sbb    eax,0xba7e4be4
  41dafd:	(bad)  
  41dafe:	test   DWORD PTR [ecx+0x549c2cf4],0x37e56658
  41db08:	imul   ecx,DWORD PTR [edx],0x6459992a
  41db0e:	sub    al,BYTE PTR [edx+0x7b]
  41db11:	lds    ebp,FWORD PTR [ecx+0x741225ff]
  41db17:	push   es
  41db18:	sub    eax,DWORD PTR [ebx-0x48]
  41db1b:	dec    edi
  41db1c:	adc    DWORD PTR [edi+edx*8-0x4d8987af],edi
  41db23:	sar    DWORD PTR [edi-0x6523e3d1],0xe0
  41db2a:	test   eax,0x6d994bd7
  41db2f:	xchg   edi,eax
  41db30:	and    BYTE PTR [esi-0x1937af1d],dl
  41db36:	(bad)  
  41db37:	rcr    DWORD PTR [ecx-0x3974decd],1
  41db3d:	xlat   BYTE PTR gs:[ebx]
  41db3f:	shl    DWORD PTR [ecx],1
  41db41:	pop    ds
  41db42:	jb     0x41dac9
  41db44:	je     0x41db17
  41db46:	mov    dh,0x9f
  41db48:	loope  0x41db34
  41db4a:	inc    ecx
  41db4b:	pop    ss
  41db4c:	or     esp,edi
  41db4e:	jbe    0x41db93
  41db50:	pop    ss
  41db51:	jno    0x41db1b
  41db53:	das    
  41db54:	mov    ah,0x25
  41db56:	sbb    al,0xa2
  41db58:	ins    DWORD PTR es:[edi],dx
  41db59:	dec    edi
  41db5a:	sub    eax,0x696a3563
  41db5f:	scas   al,BYTE PTR es:[edi]
  41db60:	dec    ecx
  41db61:	pop    esi
  41db62:	or     ah,BYTE PTR [ebp-0x17fa4557]
  41db68:	enter  0x1657,0x5
  41db6c:	aas    
  41db6d:	xor    ch,BYTE PTR [ebx+0x1e]
  41db70:	shr    ecx,cl
  41db72:	aam    0x80
  41db74:	and    DWORD PTR fs:[edi+0x30],edi
  41db78:	dec    esi
  41db79:	je     0x41db9c
  41db7b:	dec    edi
  41db7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db7e:	cmc    
  41db7f:	fisubr WORD PTR [ebp-0x7454cbf2]
  41db85:	push   edx
  41db86:	cwde   
  41db87:	jae    0x41dba3
  41db89:	(bad)  [ecx]
  41db8b:	inc    ebp
  41db8c:	and    al,0xc5
  41db8e:	pop    eax
  41db8f:	int3   
  41db90:	daa    
  41db91:	or     esp,DWORD PTR [edi-0x40]
  41db94:	dec    ebp
  41db95:	mov    ds:0xbd74ce9f,al
  41db9a:	mov    cl,0x81
  41db9c:	shr    BYTE PTR [eax],0xb9
  41db9f:	ins    BYTE PTR es:[edi],dx
  41dba0:	jnp    0x41db69
  41dba2:	div    DWORD PTR [ebx+0x3169d62a]
  41dba8:	adc    BYTE PTR [edx+eax*4-0x3b66c4e4],dh
  41dbaf:	sbb    al,BYTE PTR [ebp+0x33]
  41dbb2:	xchg   edx,eax
  41dbb3:	int    0xb9
  41dbb5:	and    ebp,eax
  41dbb7:	repnz sbb DWORD PTR [ebx],ebp
  41dbba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dbbb:	mov    esp,0xd31a57b6
  41dbc0:	mov    ch,0x50
  41dbc2:	dec    esp
  41dbc3:	dec    esp
  41dbc4:	cmp    ebx,esi
  41dbc6:	es dec esp
  41dbc8:	pop    ds
  41dbc9:	ins    DWORD PTR es:[edi],dx
  41dbca:	in     al,0x66
  41dbcc:	mov    ebp,0x34dcf36f
  41dbd1:	popf   
  41dbd2:	shl    BYTE PTR [ecx],0x69
  41dbd5:	add    ebx,DWORD PTR [ebx-0x61]
  41dbd8:	enter  0x40bd,0x9
  41dbdc:	sti    
  41dbdd:	les    eax,FWORD PTR [edi-0x31753b10]
  41dbe3:	ficomp DWORD PTR fs:[ebx]
  41dbe6:	aad    0x44
  41dbe8:	mov    esp,0xe842a12b
  41dbed:	dec    esi
  41dbee:	dec    BYTE PTR [ecx-0x41]
  41dbf1:	inc    edi
  41dbf2:	das    
  41dbf3:	ret    
  41dbf4:	sub    eax,0xb3eb775c
  41dbf9:	pop    esp
  41dbfa:	mov    ch,0x10
  41dbfc:	push   ebx
  41dbfd:	inc    esp
  41dbfe:	retf   
  41dbff:	adc    eax,0xbb0fb12c
  41dc04:	sub    al,0x6a
  41dc06:	and    al,0x8e
  41dc08:	dec    ecx
  41dc09:	mov    dh,0x39
  41dc0b:	cmp    ebx,edi
  41dc0d:	sub    bh,BYTE PTR [ebp+ebx*1+0x18fcae1c]
  41dc14:	aas    
  41dc15:	nop
  41dc16:	repnz sbb dl,dl
  41dc19:	ror    esi,1
  41dc1b:	add    al,0xcc
  41dc1d:	xchg   esp,eax
  41dc1e:	or     ebp,DWORD PTR [edx-0x29]
  41dc21:	jmp    0x41dc15
  41dc23:	rcl    BYTE PTR [ecx],1
  41dc25:	mov    eax,0x602ae2f4
  41dc2a:	sbb    DWORD PTR ds:0xf8be9894,0xbc31788f
  41dc34:	xor    al,0x87
  41dc36:	bound  esi,QWORD PTR [ebx-0x72]
  41dc39:	test   DWORD PTR [esi],0x4421c797
  41dc3f:	or     eax,0xbd9497b1
  41dc44:	and    BYTE PTR [edx+0x5b],bh
  41dc47:	lods   al,BYTE PTR ds:[esi]
  41dc48:	std    
  41dc49:	or     al,BYTE PTR [ebx-0x791ab369]
  41dc4f:	push   es
  41dc50:	repnz mov ecx,0xa0c47992
  41dc56:	dec    esi
  41dc57:	enter  0x7ab3,0xbb
  41dc5b:	xchg   edx,eax
  41dc5c:	mov    ebx,ds
  41dc5e:	inc    edx
  41dc5f:	mov    ds:0x9ae1269d,eax
  41dc64:	icebp  
  41dc65:	dec    esi
  41dc66:	pop    esi
  41dc67:	icebp  
  41dc68:	test   al,0xb
  41dc6a:	gs loope 0x41dc44
  41dc6d:	test   eax,0x3c126476
  41dc72:	dec    eax
  41dc73:	xor    DWORD PTR [ecx-0x1c69b495],edx
  41dc79:	ror    DWORD PTR [edi+0x25b9dd3e],0x63
  41dc80:	rcl    BYTE PTR [esi],cl
  41dc82:	jnp    0x41dcef
  41dc84:	scas   al,BYTE PTR es:[edi]
  41dc85:	pop    ss
  41dc86:	sbb    DWORD PTR [eax],esi
  41dc88:	retf   
  41dc89:	cmp    cl,bh
  41dc8b:	fidivr DWORD PTR [ebx+0x23]
  41dc8e:	shr    BYTE PTR fs:[ebx],cl
  41dc91:	push   0xffffffb4
  41dc93:	out    dx,al
  41dc94:	adc    al,0xe4
  41dc96:	addr16 mov bh,0xeb
  41dc99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc9a:	push   ebx
  41dc9b:	es pop ds
  41dc9d:	dec    edi
  41dc9e:	xchg   ebp,eax
  41dc9f:	scas   eax,DWORD PTR es:[edi]
  41dca0:	neg    BYTE PTR [ebp+0x60587c19]
  41dca6:	loopne 0x41dd0a
  41dca8:	add    DWORD PTR [esi-0x18],edx
  41dcab:	cs jae 0x41dc3d
  41dcae:	and    eax,esi
  41dcb0:	xlat   BYTE PTR ds:[ebx]
  41dcb1:	jg     0x41dcce
  41dcb3:	addr16 pop ebx
  41dcb5:	adc    al,0xe6
  41dcb7:	push   esp
  41dcb8:	lods   al,BYTE PTR ds:[esi]
  41dcb9:	les    edi,FWORD PTR ds:0x878193d0
  41dcbf:	inc    edx
  41dcc0:	inc    edx
  41dcc1:	popa   
  41dcc2:	jnp    0x41dc88
  41dcc4:	jecxz  0x41dc98
  41dcc6:	sub    al,0xac
  41dcc8:	out    0x45,eax
  41dcca:	lea    ebx,[edi+0x27]
  41dccd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dcce:	mov    BYTE PTR [esi-0x72],bl
  41dcd1:	std    
  41dcd2:	dec    esi
  41dcd3:	cmp    DWORD PTR [eax],edi
  41dcd5:	js     0x41dccc
  41dcd7:	scas   eax,DWORD PTR es:[edi]
  41dcd8:	popf   
  41dcd9:	cld    
  41dcda:	call   DWORD PTR [ecx-0x7c58431b]
  41dce0:	xor    DWORD PTR [eax+0x4551100d],edi
  41dce6:	sbb    bh,0x45
  41dce9:	(bad)  
  41dcea:	jmp    0x437c:0x1715d6a4
  41dcf1:	push   esi
  41dcf2:	repnz and ah,BYTE PTR [esi+eiz*8]
  41dcf6:	cmp    ebp,DWORD PTR [eax-0x6c8c930e]
  41dcfc:	jge    0x41dcc3
  41dcfe:	mov    eax,ds:0x9f5ef16e
  41dd03:	ss adc eax,ecx
  41dd06:	(bad)  
  41dd08:	sub    DWORD PTR ds:0xe2ea9da1,ebp
  41dd0e:	add    al,0x31
  41dd10:	adc    al,0x29
  41dd12:	or     al,BYTE PTR [edi-0x57]
  41dd15:	mov    ebp,0x503cfd13
  41dd1a:	aas    
  41dd1b:	xor    BYTE PTR [edx+eax*8],dh
  41dd1e:	lock mov ds:0x321c68be,al
  41dd24:	ret    
  41dd25:	push   es
  41dd26:	push   esi
  41dd27:	jle    0x41dd92
  41dd29:	dec    esp
  41dd2a:	fidivr WORD PTR [ebx]
  41dd2c:	sahf   
  41dd2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd2e:	cwde   
  41dd2f:	shr    esp,1
  41dd31:	arpl   WORD PTR [edx],ax
  41dd33:	mov    bh,0x63
  41dd35:	push   esi
  41dd36:	sub    BYTE PTR [esi-0x4f82ab2b],0xca
  41dd3d:	jnp    0x41dd20
  41dd3f:	imul   eax,DWORD PTR [ebp+0x56],0xffffffdf
  41dd43:	les    eax,FWORD PTR [esp+edx*4+0x5658c20f]
  41dd4a:	fsub   DWORD PTR [ebp-0x46edbb69]
  41dd50:	hlt    
  41dd51:	(bad)  
  41dd52:	into   
  41dd53:	jecxz  0x41dd63
  41dd55:	or     al,0xa1
  41dd57:	sar    DWORD PTR [edx],cl
  41dd59:	sub    eax,0x431e195d
  41dd5e:	lea    esi,[ebp+eax*2-0x7e]
  41dd62:	cmp    al,0x6b
  41dd65:	iret   
  41dd66:	adc    BYTE PTR [edi+0x9],dh
  41dd69:	pop    ecx
  41dd6a:	xlat   BYTE PTR ds:[ebx]
  41dd6b:	es cs pop ebp
  41dd6e:	xchg   edx,eax
  41dd6f:	retf   0xec92
  41dd72:	retf   
  41dd73:	mov    ecx,0xb9260ad7
  41dd78:	scas   al,BYTE PTR es:[edi]
  41dd79:	clc    
  41dd7a:	sbb    si,bp
  41dd7d:	add    al,0x1d
  41dd7f:	jnp    0x41dd91
  41dd81:	or     ebx,DWORD PTR [edx]
  41dd83:	and    cl,BYTE PTR [eax]
  41dd85:	mov    cl,BYTE PTR [edi]
  41dd87:	xor    BYTE PTR [ebp+0x147c416],al
  41dd8d:	mov    al,ds:0x2effe11a
  41dd92:	or     bl,BYTE PTR [ecx]
  41dd94:	aas    
  41dd95:	xor    al,0x6a
  41dd97:	aad    0x62
  41dd99:	int3   
  41dd9a:	stos   DWORD PTR es:[edi],eax
  41dd9b:	mov    ebp,0xa3bbe00d
  41dda0:	jb     0x41dd94
  41dda2:	xchg   ecx,ecx
  41dda4:	(bad)  
  41dda6:	and    eax,0xd065e260
  41ddab:	sbb    dl,0xbb
  41ddae:	inc    ebp
  41ddaf:	jae    0x41de10
  41ddb1:	inc    esi
  41ddb2:	nop
  41ddb3:	(bad)  
  41ddb4:	cmp    DWORD PTR [eax+0x1944add2],eax
  41ddba:	cwde   
  41ddbb:	in     eax,dx
  41ddbc:	xchg   ebp,eax
  41ddbd:	gs ret 0xcfc1
  41ddc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ddc2:	cli    
  41ddc3:	leave  
  41ddc4:	mov    ah,0x1a
  41ddc6:	inc    esp
  41ddc7:	or     dh,dl
  41ddc9:	cli    
  41ddca:	fld    DWORD PTR [edx-0xa49c4e0]
  41ddd0:	sub    dl,BYTE PTR [esi]
  41ddd2:	stos   BYTE PTR es:[edi],al
  41ddd3:	jge    0x41dd86
  41ddd5:	cmp    BYTE PTR [edx-0x73aeebfc],dh
  41dddb:	(bad)  
  41dddc:	std    
  41dddd:	cld    
  41ddde:	shl    DWORD PTR [edi-0x1eac36be],1
  41dde4:	push   edx
  41dde5:	cli    
  41dde6:	jae    0x41dd73
  41dde8:	fucomip st,st(4)
  41ddea:	jmp    0x3254bba9
  41ddef:	ficomp DWORD PTR [edx+0x77]
  41ddf2:	dec    ebx
  41ddf3:	stc    
  41ddf4:	leave  
  41ddf5:	inc    edi
  41ddf6:	jmp    0x5aca:0xadc42853
  41ddfd:	mov    BYTE PTR [ebx+0xd],cl
  41de00:	pushf  
  41de01:	jns    0x41dd8a
  41de03:	rcr    DWORD PTR ds:0xbf8416d5,1
  41de09:	dec    ebx
  41de0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de0b:	inc    esi
  41de0c:	push   edx
  41de0d:	mov    bh,0x2c
  41de0f:	fldenv [esp+ebp*8]
  41de12:	jp     0x41de3a
  41de14:	in     eax,0x49
  41de16:	call   0xce33:0xba52680f
  41de1d:	outs   dx,DWORD PTR ds:[esi]
  41de1e:	nop
  41de1f:	jnp    0x41de33
  41de21:	data16 or dl,BYTE PTR [edx+0x7]
  41de25:	mov    ecx,0xfafbefd6
  41de2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de2b:	cvtps2pd xmm1,QWORD PTR [eax-0x34]
  41de2f:	dec    eax
  41de30:	jmp    0xb00c:0xcd8b4687
  41de37:	or     eax,0x3b83233
  41de3c:	inc    edi
  41de3d:	addr16 mov eax,ss:0xd6bd
  41de42:	xor    eax,DWORD PTR [eax]
  41de44:	push   0x6
  41de46:	adc    ch,BYTE PTR [ecx+0x31]
  41de49:	icebp  
  41de4a:	or     ebp,DWORD PTR [ebp-0x79]
  41de4d:	mov    edx,0xf94c0e76
  41de52:	jecxz  0x41de1d
  41de54:	and    al,0x81
  41de56:	mov    BYTE PTR [edi+0x27151b4a],al
  41de5c:	popa   
  41de5d:	jl     0x41de02
  41de5f:	xchg   ecx,eax
  41de60:	outs   dx,DWORD PTR ds:[esi]
  41de61:	jmp    0x41de4f
  41de63:	(bad)  
  41de64:	adc    bl,BYTE PTR [ebp+0x68a6ce1f]
  41de6a:	fucomip st,st(0)
  41de6c:	mov    ecx,0xdb6c7576
  41de71:	test   BYTE PTR gs:[ecx],bl
  41de74:	xchg   DWORD PTR [edi+0x71],edx
  41de77:	or     edx,eax
  41de79:	(bad)  
  41de7a:	and    BYTE PTR [ecx+0x55],ch
  41de7d:	xor    al,0xb0
  41de7f:	jmp    0xc850:0xebd3fa22
  41de86:	fldenv [esi]
  41de88:	imul   esi,DWORD PTR [ebp-0x44],0x47
  41de8c:	mov    ah,0x5f
  41de8e:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41de90:	adc    eax,0x55e61311
  41de95:	mov    ebp,0x5f8ff7b6
  41de9a:	(bad)  
  41de9c:	jo     0x41de8e
  41de9e:	add    ah,ah
  41dea0:	int    0xd7
  41dea2:	test   edx,edx
  41dea4:	mov    esi,0x45ddf851
  41dea9:	bound  ebx,QWORD PTR [esi-0xbbad7c0]
  41deaf:	mov    al,ds:0x46052e96
  41deb4:	sub    esp,ebp
  41deb6:	aas    
  41deb7:	or     esi,esp
  41deb9:	repnz dec ecx
  41debb:	adc    ch,BYTE PTR [ebp-0x23296cc8]
  41dec1:	test   DWORD PTR [edi-0x5362e0b5],edx
  41dec7:	ins    BYTE PTR es:[edi],dx
  41dec8:	daa    
  41dec9:	lods   al,BYTE PTR ds:[esi]
  41deca:	jp     0x41df02
  41decc:	push   esi
  41decd:	rcl    BYTE PTR [ebx+0x7aaf6469],cl
  41ded3:	test   eax,0x52de3761
  41ded8:	mov    bl,0xf8
  41deda:	outs   dx,DWORD PTR ds:[esi]
  41dedb:	adc    DWORD PTR [edx-0x10540dc6],ebx
  41dee1:	sub    DWORD PTR [ecx+0x32],esp
  41dee4:	push   ss
  41dee5:	inc    edx
  41dee6:	fwait
  41dee7:	test   BYTE PTR [edi-0x72],bl
  41deea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41deeb:	jmp    0x871205a1
  41def0:	jecxz  0x41defa
  41def2:	mov    esp,0x5ec2e7be
  41def7:	sub    ecx,DWORD PTR [edx+0x4ce8b0fa]
  41defd:	daa    
  41defe:	in     al,dx
  41deff:	xchg   edi,eax
  41df00:	stc    
  41df01:	add    BYTE PTR [ecx-0x2a],0xc1
  41df05:	dec    ebp
  41df06:	lea    edx,[ebp+0x7ed36a6b]
  41df0c:	ret    
  41df0d:	xchg   ebx,eax
  41df0e:	xor    cl,BYTE PTR [edi]
  41df10:	fwait
  41df11:	pop    esp
  41df12:	xor    bh,BYTE PTR [esi+0x7c]
  41df15:	push   0x26
  41df17:	bound  esp,QWORD PTR [eax-0xee595c8]
  41df1d:	push   ss
  41df1e:	jmp    FWORD PTR [ebx-0x48]
  41df21:	(bad)  
  41df22:	adc    edi,DWORD PTR [edi+0x11d899a4]
  41df28:	repz (bad) 
  41df2a:	imul   eax,DWORD PTR [ecx-0x744b30b7],0xf969cc3c
  41df34:	popf   
  41df35:	inc    esp
  41df36:	or     esp,DWORD PTR [eax+0x26]
  41df39:	push   edi
  41df3a:	loop   0x41df58
  41df3c:	ds mov ch,cl
  41df3f:	and    BYTE PTR [ebx-0x3d],dh
  41df42:	sub    BYTE PTR [edx-0x5d],0xae
  41df46:	clc    
  41df47:	cmc    
  41df48:	add    BYTE PTR [ecx-0x3eaf5fcc],dl
  41df4e:	iret   
  41df4f:	dec    edx
  41df50:	and    eax,0x130b4977
  41df55:	dec    ebp
  41df56:	sub    DWORD PTR [ecx+esi*4+0x38],ecx
  41df5a:	iret   
  41df5b:	shl    BYTE PTR [edi-0x56e8fb59],1
  41df61:	mov    fs,esi
  41df63:	add    DWORD PTR [esi+eiz*2-0x6ffb69f9],esp
  41df6a:	dec    esi
  41df6b:	repz jl 0x41df87
  41df6e:	dec    ecx
  41df6f:	aam    0x6e
  41df71:	and    BYTE PTR [esi],dh
  41df73:	xchg   edx,eax
  41df74:	iret   
  41df75:	dec    edx
  41df76:	test   edx,esp
  41df78:	inc    esi
  41df79:	jmp    0x9c39:0xcd7e1e4f
  41df80:	cmp    bh,ch
  41df82:	jmp    0x41df3f
  41df84:	outs   dx,BYTE PTR ds:[esi]
  41df85:	aas    
  41df86:	je     0x41df66
  41df88:	hlt    
  41df89:	jecxz  0x41df7d
  41df8b:	xor    al,0x14
  41df8d:	ins    DWORD PTR es:[edi],dx
  41df8e:	sti    
  41df8f:	adc    esi,DWORD PTR [edi-0x1a]
  41df92:	push   ecx
  41df93:	(bad)  
  41df94:	imul   esp,DWORD PTR [edx-0x69],0x26
  41df98:	jg     0x41dfd3
  41df9a:	dec    eax
  41df9b:	(bad)  
  41df9c:	lahf   
  41df9d:	adc    dh,0xea
  41dfa0:	mov    esi,DWORD PTR [esi]
  41dfa2:	scas   eax,DWORD PTR es:[edi]
  41dfa3:	outs   dx,BYTE PTR ds:[esi]
  41dfa4:	outs   dx,DWORD PTR ds:[esi]
  41dfa5:	adc    al,0xac
  41dfa7:	(bad)  
  41dfa8:	lods   al,BYTE PTR ds:[esi]
  41dfa9:	mov    esp,0x115abd3a
  41dfae:	dec    ebx
  41dfaf:	xor    ah,0x9e
  41dfb2:	dec    eax
  41dfb3:	mov    ah,BYTE PTR [ecx+eiz*4]
  41dfb6:	inc    edx
  41dfb7:	test   BYTE PTR [edi-0x62],dh
  41dfba:	or     eax,0xa8637e79
  41dfbf:	test   DWORD PTR [ecx],esi
  41dfc1:	jp     0x41e041
  41dfc3:	mov    ebx,DWORD PTR [ebp-0x2413ad27]
  41dfc9:	fbld   TBYTE PTR [esi+0x2d7ca0bd]
  41dfcf:	clc    
  41dfd0:	pusha  
  41dfd1:	shl    DWORD PTR [ecx-0x23],1
  41dfd4:	je     0x41dffe
  41dfd6:	jns    0x41e027
  41dfd8:	jge    0x41e00e
  41dfda:	idiv   BYTE PTR [ecx]
  41dfdc:	retf   0xeaa6
  41dfdf:	push   eax
  41dfe0:	mov    ecx,0xe6cd3edb
  41dfe5:	mov    ?,WORD PTR [esi]
  41dfe7:	js     0x41e022
  41dfe9:	push   edi
  41dfea:	gs or  dl,dl
  41dfed:	mov    BYTE PTR [ecx],0x69
  41dff0:	in     eax,dx
  41dff1:	cs pop esi
  41dff3:	mov    ds:0xfdb113b0,al
  41dff8:	inc    esi
  41dff9:	cld    
  41dffa:	int    0xb4
  41dffc:	sbb    bl,BYTE PTR [eax+0x42b70dc6]
  41e002:	pop    eax
  41e003:	pop    ebp
  41e004:	xchg   edi,eax
  41e005:	ja     0x41e051
  41e007:	loop   0x41dfbc
  41e009:	inc    eax
  41e00a:	repz jmp 0xefe29614
  41e010:	push   esp
  41e011:	adc    bh,BYTE PTR ds:0x71453ab9
  41e017:	ss adc dh,bl
  41e01a:	rol    DWORD PTR [edi],cl
  41e01c:	fs add eax,0xae824104
  41e022:	sub    eax,eax
  41e024:	(bad)  
  41e025:	pusha  
  41e026:	popf   
  41e027:	xor    BYTE PTR [edx+0x7a],dh
  41e02a:	dec    esi
  41e02b:	ret    0xb685
  41e02e:	push   eax
  41e02f:	push   ebx
  41e030:	aaa    
  41e031:	dec    ebx
  41e032:	retf   
  41e033:	dec    bl
  41e035:	in     al,dx
  41e036:	sub    eax,0xdba4c44d
  41e03b:	sub    DWORD PTR [eax+0x30],esi
  41e03e:	jae    0x41e072
  41e040:	mov    edi,0x7422a458
  41e045:	jecxz  0x41e05a
  41e047:	es mov ebx,0xe0f984f8
  41e04d:	xor    DWORD PTR [edi],ebp
  41e04f:	xchg   ebx,eax
  41e050:	add    eax,0xbfcc7186
  41e055:	mov    dl,0x71
  41e057:	jne    0x41e08b
  41e059:	inc    ebp
  41e05a:	xor    al,0x4a
  41e05c:	inc    edi
  41e05d:	xor    al,0x7d
  41e05f:	lahf   
  41e060:	inc    edi
  41e061:	out    dx,al
  41e062:	sbb    eax,0xcd984ff7
  41e067:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e068:	aaa    
  41e069:	xor    eax,0x44796e0b
  41e06e:	or     bl,BYTE PTR [ebx-0x7632c218]
  41e074:	pop    esp
  41e075:	add    al,0x72
  41e077:	inc    edx
  41e078:	pop    edx
  41e079:	and    al,0xb3
  41e07b:	pop    ebp
  41e07c:	int3   
  41e07d:	stc    
  41e07e:	mov    cl,0xf9
  41e080:	pop    ss
  41e081:	int3   
  41e082:	mov    cl,0xd3
  41e084:	add    al,0x8d
  41e086:	scas   eax,DWORD PTR es:[edi]
  41e087:	out    0x8a,eax
  41e089:	std    
  41e08a:	pop    esp
  41e08b:	sub    DWORD PTR [eax],ebp
  41e08d:	enter  0x7600,0x7b
  41e091:	loopne 0x41e034
  41e093:	cmc    
  41e094:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e095:	pop    ebp
  41e096:	jnp    0x41e06b
  41e098:	fucomip st,st(2)
  41e09a:	and    ch,BYTE PTR [edi+ebx*4]
  41e09d:	jnp    0x41e0e8
  41e09f:	neg    DWORD PTR [esi+0x3a]
  41e0a2:	sub    ecx,edx
  41e0a4:	lods   al,BYTE PTR ds:[esi]
  41e0a5:	inc    edi
  41e0a6:	and    BYTE PTR [edx-0xafb6139],dh
  41e0ac:	mov    WORD PTR ds:0xf1610bd9,gs
  41e0b2:	inc    edi
  41e0b3:	dec    esi
  41e0b4:	nop
  41e0b5:	lods   eax,DWORD PTR ds:[esi]
  41e0b6:	(bad)  
  41e0b7:	fisttp DWORD PTR [edx+0x63]
  41e0ba:	sar    DWORD PTR [eax+0x0],0x22
  41e0be:	push   edi
  41e0bf:	add    edx,ecx
  41e0c1:	cdq    
  41e0c2:	jno    0x41e124
  41e0c4:	cmc    
  41e0c5:	pop    ecx
  41e0c6:	rol    DWORD PTR [esi],1
  41e0c8:	jno    0x41e0de
  41e0ca:	dec    esp
  41e0cb:	enter  0x29f0,0xd0
  41e0cf:	or     eax,0xf99716e1
  41e0d4:	jp     0x41e13a
  41e0d6:	sub    al,dh
  41e0d8:	or     bh,BYTE PTR [ebx+0xa]
  41e0db:	in     al,0x1d
  41e0dd:	out    0xc5,al
  41e0df:	pop    es
  41e0e0:	out    0xbc,eax
  41e0e2:	xchg   edx,eax
  41e0e3:	or     ch,BYTE PTR [ebx+ebp*8+0x689b2a5f]
  41e0ea:	mov    ebp,0x2dd379ff
  41e0ef:	cwde   
  41e0f0:	sbb    edx,DWORD PTR [edi]
  41e0f2:	das    
  41e0f3:	mov    ebx,0xd68267ca
  41e0f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e0f9:	mov    bh,0xf
  41e0fb:	jnp    0x41e158
  41e0fd:	jno    0x41e0bc
  41e0ff:	addr16 (bad) 
  41e101:	not    edx
  41e103:	adc    bl,BYTE PTR [edx-0x12]
  41e106:	ret    
  41e107:	or     ecx,DWORD PTR [esi-0x4229c74d]
  41e10d:	sub    al,0x3d
  41e10f:	call   0x5e26:0x583aa374
  41e116:	push   ebx
  41e117:	cdq    
  41e118:	inc    ecx
  41e119:	xor    ecx,DWORD PTR [ebx-0xdc076f8]
  41e11f:	and    eax,0x1a5dcfba
  41e124:	sub    dh,BYTE PTR [ebx]
  41e126:	push   ecx
  41e127:	mov    bh,0xe
  41e129:	add    eax,0x70b9298c
  41e12e:	mov    ds:0x51246430,al
  41e133:	(bad)  
  41e134:	xchg   ebp,eax
  41e135:	(bad)  
  41e136:	xor    dl,dh
  41e138:	or     al,0x8a
  41e13a:	jb     0x41e116
  41e13c:	xor    DWORD PTR ds:0xddb380e1,ecx
  41e142:	sti    
  41e143:	sbb    al,0x17
  41e145:	stc    
  41e146:	sbb    ebx,DWORD PTR [edi-0x61]
  41e149:	mov    ?,WORD PTR [edi]
  41e14b:	int    0xcf
  41e14d:	xchg   ecx,eax
  41e14e:	scas   eax,DWORD PTR es:[edi]
  41e14f:	lea    edx,[ecx+0x2f]
  41e152:	cmp    edi,DWORD PTR cs:0x735508c5
  41e159:	mov    esi,0xd1da6ae8
  41e15e:	call   0x6e83:0x5f26365f
  41e165:	std    
  41e166:	or     BYTE PTR [ebx],cl
  41e168:	call   0xf62a1cd8
  41e16d:	mov    eax,0xd926a1c5
  41e172:	(bad)  
  41e173:	movsx  esi,BYTE PTR [ebp-0x29]
  41e177:	es jmp 0x3c7de5c
  41e17d:	sbb    eax,0x3d61a3df
  41e182:	(bad)  
  41e183:	mov    ds:0xe5e52b85,al
  41e188:	mov    al,0x92
  41e18a:	push   edx
  41e18b:	in     ax,0x1a
  41e18e:	jmp    0x248c:0x8fe0f14b
  41e195:	in     eax,0x2f
  41e197:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e198:	lock aad 0xc6
  41e19b:	dec    edx
  41e19c:	pop    esi
  41e19d:	xchg   ecx,eax
  41e19e:	popa   
  41e19f:	icebp  
  41e1a0:	adc    BYTE PTR [ebx+0x167c9c49],dh
  41e1a6:	(bad)  
  41e1a8:	jno    0x41e1ff
  41e1aa:	sbb    BYTE PTR [ecx+0x47529ad0],al
  41e1b0:	jg     0x41e1aa
  41e1b2:	lods   eax,DWORD PTR ds:[esi]
  41e1b3:	int3   
  41e1b4:	lods   al,BYTE PTR ds:[esi]
  41e1b5:	ins    BYTE PTR es:[edi],dx
  41e1b6:	(bad)  
  41e1b7:	cmp    al,0x2d
  41e1b9:	int3   
  41e1ba:	sub    BYTE PTR [ecx],0x88
  41e1bd:	lock pop ebx
  41e1bf:	mov    dl,0xaf
  41e1c1:	cwde   
  41e1c2:	loope  0x41e159
  41e1c4:	jl     0x41e231
  41e1c6:	clc    
  41e1c7:	jmp    0xcaf5:0x8e03ce13
  41e1ce:	sbb    ah,ah
  41e1d0:	into   
  41e1d1:	push   eax
  41e1d2:	mov    esi,0x78f2aa46
  41e1d7:	push   esi
  41e1d8:	mov    cs,WORD PTR [ebx+0x488c7a7c]
  41e1de:	xor    DWORD PTR ds:0x79935c77,0x70c0598
  41e1e8:	fdivr  QWORD PTR [esi-0x5129680c]
  41e1ee:	out    dx,al
  41e1ef:	imul   ebp,DWORD PTR [eax+0x6a],0x67
  41e1f3:	enter  0xc2a3,0xe2
  41e1f7:	and    bl,BYTE PTR [edi-0x2a06b7a8]
  41e1fd:	xchg   DWORD PTR [eax+0x209df625],ebx
  41e203:	lock push esi
  41e205:	jae    0x41e198
  41e207:	pop    ecx
  41e208:	or     al,0x6e
  41e20a:	mov    ecx,0x5fefa05b
  41e20f:	cmp    BYTE PTR [esi-0x393bbc20],0x6a
  41e216:	jg     0x41e1f7
  41e218:	cs or  eax,0x2e1be193
  41e21e:	xchg   BYTE PTR [ebp-0x466aa7ad],dl
  41e224:	push   ss
  41e225:	jno    0x41e1d3
  41e227:	push   0xffffff9c
  41e229:	jne    0x41e1ff
  41e22b:	ins    BYTE PTR es:[edi],dx
  41e22c:	xor    dh,cl
  41e22e:	pop    esi
  41e22f:	xchg   ebp,eax
  41e230:	adc    eax,0x87a38ecd
  41e235:	mov    ds,WORD PTR [eax+0x4ee9028]
  41e23b:	inc    edi
  41e23c:	cmp    al,0x2f
  41e23e:	rcr    BYTE PTR [eax+0x1ef6e8fe],1
  41e244:	mov    eax,ds:0xd98f0751
  41e249:	imul   edx,DWORD PTR [esi],0xffffffea
  41e24c:	out    dx,al
  41e24d:	lea    ebx,[edx-0x59]
  41e250:	call   DWORD PTR [ecx+0x9]
  41e253:	out    0x93,eax
  41e255:	nop
  41e256:	adc    DWORD PTR [eax+0x5764dda9],eax
  41e25c:	xchg   edx,eax
  41e25d:	rol    BYTE PTR [ebx+0x5067c780],0x49
  41e264:	inc    ebp
  41e265:	inc    ebp
  41e266:	mov    al,0xc3
  41e268:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e269:	into   
  41e26a:	imul   esp,DWORD PTR [edx-0x3d8b8249],0x5ba36c94
  41e274:	pop    ecx
  41e275:	adc    bl,dl
  41e277:	xchg   esp,eax
  41e278:	mov    edi,0xad035042
  41e27d:	push   ss
  41e27e:	dec    ecx
  41e27f:	loope  0x41e2a0
  41e281:	nop
  41e282:	push   edi
  41e283:	fldcw  WORD PTR [ecx-0x48cfff8a]
  41e289:	jecxz  0x41e2d3
  41e28b:	(bad)  
  41e28d:	xlat   BYTE PTR ds:[ebx]
  41e28e:	inc    ecx
  41e28f:	jns    0x41e276
  41e291:	pop    edi
  41e292:	mov    esi,0xbea91ef8
  41e297:	push   esi
  41e298:	bound  esi,QWORD PTR [ebp+0x4ae180e2]
  41e29e:	inc    esp
  41e29f:	and    al,0xaf
  41e2a1:	cwde   
  41e2a2:	pushf  
  41e2a3:	and    esp,eax
  41e2a5:	mov    al,0xaf
  41e2a7:	inc    ebp
  41e2a8:	and    ecx,DWORD PTR [esi]
  41e2aa:	xor    edi,esp
  41e2ac:	push   ds
  41e2ad:	aaa    
  41e2ae:	retf   0x28d8
  41e2b1:	retf   
  41e2b2:	or     BYTE PTR ds:0xf0b8b99d,al
  41e2b8:	mov    al,0x64
  41e2ba:	jo     0x41e323
  41e2bc:	retf   
  41e2bd:	sbb    al,0xdb
  41e2bf:	imul   DWORD PTR [edi-0x1b]
  41e2c2:	(bad)  
  41e2c3:	dec    edi
  41e2c4:	pop    ecx
  41e2c5:	out    dx,al
  41e2c6:	ja     0x41e27f
  41e2c8:	iret   
  41e2c9:	mov    WORD PTR [ecx-0x44],cs
  41e2cc:	mul    DWORD PTR [ebp-0x6eb365cb]
  41e2d2:	or     dh,cl
  41e2d4:	or     cl,BYTE PTR [esi]
  41e2d6:	out    0x26,eax
  41e2d8:	dec    ebp
  41e2d9:	xor    eax,0xd5f63da9
  41e2de:	mov    ds:0x7f469f71,al
  41e2e3:	lds    ebp,FWORD PTR [esi+ebp*2-0x137b9b07]
  41e2ea:	data16 jns 0x41e32c
  41e2ed:	imul   esi,esp,0x4de65935
  41e2f3:	xor    edx,DWORD PTR [edi]
  41e2f5:	mov    bh,0xa5
  41e2f7:	mov    dh,0xe9
  41e2f9:	rol    BYTE PTR [edx-0x1c],1
  41e2fc:	cmp    al,0xc6
  41e2fe:	lahf   
  41e2ff:	xor    ebp,esi
  41e301:	pop    ebp
  41e302:	cmp    esi,edi
  41e304:	scas   al,BYTE PTR es:[edi]
  41e305:	jo     0x41e306
  41e307:	dec    eax
  41e308:	jnp    0x41e32b
  41e30a:	out    dx,al
  41e30b:	cmp    al,0x6b
  41e30d:	in     al,0x9e
  41e30f:	es shl edx,0x10
  41e313:	mov    dl,0x8d
  41e315:	ins    DWORD PTR es:[edi],dx
  41e316:	lahf   
  41e317:	ret    
  41e318:	sub    DWORD PTR [ebp-0x3413c68a],edx
  41e31e:	mov    ds:0x502bde2d,eax
  41e323:	xchg   DWORD PTR [ebx],esp
  41e325:	adc    esp,DWORD PTR [ebx*8+0x612680ce]
  41e32c:	cmp    DWORD PTR [esi+0x42],eax
  41e32f:	pop    ss
  41e330:	imul   esi,ebp,0xffffffd1
  41e333:	sub    edx,esp
  41e335:	stos   DWORD PTR es:[edi],eax
  41e336:	jp     0x41e33b
  41e338:	arpl   WORD PTR [esi+0x76],bx
  41e33b:	pop    esp
  41e33c:	push   edx
  41e33d:	fs or  bh,bl
  41e340:	imul   esp,DWORD PTR [esi],0x41e44ae3
  41e346:	mov    eax,DWORD PTR [eax-0x3e]
  41e349:	push   DWORD PTR ds:0xa534714e
  41e34f:	mov    dl,0x2b
  41e351:	nop
  41e352:	dec    esp
  41e353:	mov    WORD PTR [edx+ebx*1+0x63],cs
  41e357:	sub    bl,BYTE PTR [edx+0x4f]
  41e35a:	cmp    al,0x27
  41e35d:	or     eax,0x22437570
  41e362:	out    dx,eax
  41e363:	aaa    
  41e364:	mov    eax,0xd18a0c2c
  41e369:	jge    0x41e3c6
  41e36b:	jns    0x41e37d
  41e36d:	mov    al,0x9e
  41e36f:	sti    
  41e370:	inc    edx
  41e371:	cmp    DWORD PTR [ebp+0x3e8a3676],esp
  41e377:	sar    BYTE PTR [esi+0x34],1
  41e37a:	das    
  41e37b:	fistp  WORD PTR [eax+ecx*4-0x78]
  41e37f:	and    ah,BYTE PTR [ebp+0x7785c4dc]
  41e385:	inc    ecx
  41e386:	cmp    DWORD PTR [esi+0x22],ebx
  41e389:	jg     0x41e370
  41e38b:	nop
  41e38c:	int    0x29
  41e38e:	sub    eax,0xa5ff7b21
  41e393:	or     edx,DWORD PTR [eax-0x12]
  41e396:	jle    0x41e3eb
  41e398:	mov    ebp,esp
  41e39a:	rcr    DWORD PTR [ecx+esi*4-0x7af372d2],cl
  41e3a1:	inc    esp
  41e3a2:	sbb    BYTE PTR [edx-0xf],bl
  41e3a5:	les    esp,FWORD PTR [eax-0x10]
  41e3a8:	cwde   
  41e3a9:	data16 into 
  41e3ab:	push   0xd77b4518
  41e3b0:	in     eax,0x65
  41e3b2:	jecxz  0x41e3b1
  41e3b4:	out    0x80,eax
  41e3b6:	xor    DWORD PTR ds:0xdd246de0,ebp
  41e3bc:	(bad)  
  41e3bd:	jbe    0x41e365
  41e3bf:	retf   
  41e3c0:	in     eax,dx
  41e3c1:	mov    ebx,0x759da32c
  41e3c6:	cmp    eax,0xb289113b
  41e3cb:	mov    cs,WORD PTR [esi]
  41e3cd:	rol    DWORD PTR [ebp-0x50],cl
  41e3d0:	and    dl,BYTE PTR [edi+0xf]
  41e3d3:	and    ecx,DWORD PTR [ebx-0x38]
  41e3d6:	scas   al,BYTE PTR es:[edi]
  41e3d7:	push   es
  41e3d8:	xor    bl,0x9a
  41e3db:	mov    ds:0x82a31972,al
  41e3e0:	inc    esi
  41e3e1:	outs   dx,DWORD PTR ds:[esi]
  41e3e2:	jmp    0x41e409
  41e3e4:	xor    dl,dh
  41e3e6:	in     al,0xf1
  41e3e8:	sub    al,0xd9
  41e3ea:	mul    dl
  41e3ec:	hlt    
  41e3ed:	add    al,BYTE PTR [eax]
  41e3ef:	fst    DWORD PTR [ebx-0x254432d4]
  41e3f5:	sbb    ebp,ecx
  41e3f7:	test   al,0x79
  41e3f9:	inc    ebx
  41e3fa:	js     0x41e3da
  41e3fc:	das    
  41e3fd:	out    dx,al
  41e3fe:	jg     0x41e443
  41e400:	lahf   
  41e401:	lods   al,BYTE PTR ds:[esi]
  41e402:	sub    eax,0x8c05ba0d
  41e407:	mov    esp,0x4ed838f9
  41e40c:	fbld   TBYTE PTR [eax]
  41e40e:	cmp    DWORD PTR [ebx+0x2a],esi
  41e411:	mov    cl,0x51
  41e413:	mov    ah,dh
  41e415:	and    cl,bl
  41e417:	mov    edi,0x891d0a4
  41e41c:	inc    ebx
  41e41d:	je     0x41e492
  41e41f:	mov    ebp,0xca655b1c
  41e424:	jo     0x41e464
  41e426:	lea    edx,[esi+0x4c]
  41e429:	sbb    ch,ch
  41e42b:	dec    eax
  41e42c:	add    BYTE PTR [ebp-0xe8646ab],cl
  41e432:	inc    edx
  41e433:	and    al,BYTE PTR [edi+0x5d]
  41e436:	jl     0x41e476
  41e438:	ins    BYTE PTR es:[edi],dx
  41e439:	cmp    al,0xb
  41e43b:	loop   0x41e4a2
  41e43d:	mov    dh,0xcf
  41e43f:	xor    cl,BYTE PTR [ebx]
  41e441:	dec    ecx
  41e442:	mov    ds:0x1c74e694,al
  41e447:	jmp    0xdb327f23
  41e44c:	jge    0x41e440
  41e44e:	test   eax,0xa189ebcf
  41e453:	test   BYTE PTR ds:0x3db985e4,al
  41e459:	test   eax,0xc4fb81df
  41e45e:	ret    0xb7e9
  41e461:	popa   
  41e462:	imul   ch
  41e464:	ss (bad) 
  41e466:	sbb    DWORD PTR [edx+0x5f2bf5a8],esi
  41e46c:	sbb    DWORD PTR [eax+0x394a996a],0xefc3cd93
  41e476:	ffree  st(6)
  41e478:	das    
  41e479:	xor    esp,esp
  41e47b:	daa    
  41e47c:	mov    esp,0xb99ba5d3
  41e481:	fadd   st,st(2)
  41e483:	cli    
  41e484:	adc    eax,0x8984db83
  41e489:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e48a:	pop    esi
  41e48b:	scas   al,BYTE PTR es:[edi]
  41e48c:	call   0xff971c0c
  41e491:	cli    
  41e492:	pop    esi
  41e493:	dec    ebx
  41e494:	repz jl 0x41e4ce
  41e497:	cmp    dh,BYTE PTR ss:[eax+ebp*8+0x6af634c9]
  41e49f:	pusha  
  41e4a0:	sbb    DWORD PTR [ebx-0x7645c774],0x6eceac0e
  41e4aa:	dec    esp
  41e4ab:	inc    sp
  41e4ad:	ret    
  41e4ae:	les    ebx,FWORD PTR [edx]
  41e4b0:	sbb    ah,bh
  41e4b2:	mov    al,0xfc
  41e4b4:	sar    BYTE PTR [ebp+0x30],0xf1
  41e4b8:	and    DWORD PTR [ebx],eax
  41e4ba:	ret    0xc408
  41e4bd:	scas   al,BYTE PTR es:[edi]
  41e4be:	dec    ebx
  41e4bf:	push   ss
  41e4c0:	mov    dh,0x3d
  41e4c2:	push   esp
  41e4c3:	aas    
  41e4c4:	mov    WORD PTR [esi+0x3ebde3dc],fs
  41e4ca:	adc    DWORD PTR [eax+0x70],esp
  41e4cd:	(bad)  
  41e4ce:	cld    
  41e4cf:	stos   BYTE PTR es:[edi],al
  41e4d0:	mov    ds:0x719cbefc,al
  41e4d5:	add    BYTE PTR [edx+0x494287f6],bl
  41e4db:	xchg   ecx,eax
  41e4dc:	out    dx,al
  41e4dd:	mov    ds:0x8f00d41b,eax
  41e4e2:	pusha  
  41e4e3:	pop    eax
  41e4e4:	inc    esi
  41e4e5:	xchg   BYTE PTR [esi],al
  41e4e7:	dec    edx
  41e4e8:	sbb    bl,0x30
  41e4eb:	movups XMMWORD PTR [esi-0x7a],xmm2
  41e4ef:	add    eax,0x4aaf89bd
  41e4f4:	push   ecx
  41e4f5:	jno    0x41e540
  41e4f7:	scas   al,BYTE PTR es:[edi]
  41e4f8:	xor    esi,edx
  41e4fa:	mov    ecx,gs
  41e4fc:	int3   
  41e4fd:	mov    eax,0xc4318347
  41e502:	pop    eax
  41e503:	mov    ebp,0xbb6afc7e
  41e508:	mov    bl,0x76
  41e50a:	or     eax,0xb9101efd
  41e50f:	mov    ?,WORD PTR [eax+0x78]
  41e512:	sub    bl,BYTE PTR [esi-0x7b]
  41e515:	mov    cl,0xae
  41e517:	(bad)  
  41e518:	rol    BYTE PTR [edx],1
  41e51a:	fs dec ecx
  41e51c:	lea    edi,[edi]
  41e51e:	cmp    edi,0x7406d110
  41e524:	sbb    BYTE PTR [ecx+0x39dcfbe5],al
  41e52a:	ror    DWORD PTR [edx],1
  41e52c:	pop    ecx
  41e52d:	sub    al,0x8c
  41e52f:	cmp    ecx,DWORD PTR [ebx]
  41e531:	and    bl,BYTE PTR [ebx]
  41e533:	in     al,dx
  41e534:	inc    DWORD PTR [edi+edx*2+0x17]
  41e538:	nop
  41e539:	ficom  DWORD PTR fs:[ebx-0x2b]
  41e53d:	retf   0xa30b
  41e540:	frstor [edx-0x513b02c7]
  41e546:	mov    dh,0x8d
  41e548:	(bad)  
  41e549:	push   esp
  41e54a:	sbb    esp,DWORD PTR [edx-0x49]
  41e54d:	fdivr  st,st(2)
  41e54f:	mov    BYTE PTR [edi],bl
  41e551:	fsub   st,st(4)
  41e553:	or     BYTE PTR [eax+0x5946bdbb],0x54
  41e55a:	aad    0x5f
  41e55c:	xchg   ebp,eax
  41e55d:	xor    dh,BYTE PTR [ebx-0x31]
  41e560:	mov    BYTE PTR [ebx],bl
  41e562:	fs xchg ebx,eax
  41e564:	(bad)  
  41e565:	jge    0x41e59b
  41e567:	sbb    bl,BYTE PTR [ebx-0x5943909c]
  41e56d:	xchg   DWORD PTR [eax],ebx
  41e56f:	and    ecx,DWORD PTR [edx]
  41e571:	jecxz  0x41e564
  41e573:	pushf  
  41e574:	mov    WORD PTR [edx],ds
  41e576:	sub    BYTE PTR [eax+0x31],dl
  41e579:	inc    esp
  41e57a:	mov    al,ds:0x7999be7b
  41e57f:	stos   BYTE PTR es:[edi],al
  41e580:	out    0xca,eax
  41e582:	test   eax,0x26e5f25e
  41e587:	js     0x41e52c
  41e589:	fsubr  QWORD PTR [ecx]
  41e58b:	arpl   WORD PTR [esi+0x2202eff3],si
  41e591:	or     ch,bl
  41e593:	pop    edx
  41e594:	rol    DWORD PTR [edx+0x4d50d97b],1
  41e59a:	dec    ebx
  41e59b:	add    BYTE PTR [ebx+edx*4+0x47],dh
  41e59f:	(bad)  
  41e5a0:	mov    bl,0x8a
  41e5a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e5a3:	addr16 sub esp,ebp
  41e5a6:	icebp  
  41e5a7:	retf   0xd9b6
  41e5aa:	sub    eax,0xde9aae6d
  41e5af:	je     0x41e5c4
  41e5b1:	push   ebp
  41e5b2:	or     al,0xe9
  41e5b4:	dec    ebx
  41e5b5:	sub    ah,BYTE PTR [esi+eiz*4]
  41e5b8:	sti    
  41e5b9:	test   ch,0x98
  41e5bc:	adc    bh,bl
  41e5be:	add    al,bh
  41e5c0:	inc    esp
  41e5c1:	pop    ebp
  41e5c2:	cli    
  41e5c3:	repz (bad) 
  41e5c5:	call   0x19fad81b
  41e5ca:	adc    DWORD PTR [edx+0x29],ebp
  41e5cd:	hlt    
  41e5ce:	jae    0x41e55c
  41e5d0:	inc    edx
  41e5d1:	adc    dl,BYTE PTR [edi-0x18615e82]
  41e5d7:	and    al,BYTE PTR [eax-0x35]
  41e5da:	addr16 (bad) 
  41e5dc:	jae    0x41e5da
  41e5de:	out    dx,al
  41e5df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e5e0:	jo     0x41e5ca
  41e5e2:	inc    eax
  41e5e3:	lods   eax,DWORD PTR ds:[esi]
  41e5e4:	xor    bh,dh
  41e5e6:	hlt    
  41e5e7:	mov    cs,WORD PTR ds:0xcc747bfd
  41e5ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5ee:	dec    eax
  41e5ef:	and    eax,0x24413a1c
  41e5f4:	cli    
  41e5f5:	dec    ebp
  41e5f6:	jo     0x41e609
  41e5f8:	adc    edi,edx
  41e5fa:	cli    
  41e5fb:	(bad)  [ebx+0xd]
  41e5fe:	or     BYTE PTR [ebx-0x18],0x7
  41e602:	xchg   edi,eax
  41e603:	push   ds
  41e604:	jb     0x41e5d2
  41e606:	add    BYTE PTR [ebp+0x65576a92],bh
  41e60c:	xlat   BYTE PTR ds:[ebx]
  41e60d:	jg     0x41e5b9
  41e60f:	arpl   WORD PTR [edi+0x64],sp
  41e612:	push   DWORD PTR [eax]
  41e614:	sbb    BYTE PTR [edi],0x5d
  41e617:	jb     0x41e66b
  41e619:	iret   
  41e61a:	mov    BYTE PTR [ebx],bh
  41e61c:	add    DWORD PTR [esi-0x4f79a61f],0x6d7fc4ae
  41e626:	enter  0xe19f,0x45
  41e62a:	inc    edi
  41e62b:	pmuludq mm7,QWORD PTR [esi-0x77]
  41e62f:	adc    eax,0xc7723633
  41e634:	pop    ecx
  41e635:	dec    esp
  41e636:	pop    eax
  41e637:	or     eax,0x59ea4f81
  41e63c:	(bad)  
  41e63d:	xchg   esp,eax
  41e63e:	test   eax,0x951f4cae
  41e643:	xchg   ebp,eax
  41e644:	pop    edx
  41e645:	fwait
  41e646:	add    DWORD PTR [esi],esp
  41e648:	pop    eax
  41e649:	jmp    0x8b70e31f
  41e64e:	imul   edx,DWORD PTR [ecx-0x2d635f04],0xffffffd2
  41e655:	push   esi
  41e656:	(bad)  
  41e658:	push   edx
  41e659:	ja     0x41e62e
  41e65b:	xchg   ebp,eax
  41e65c:	out    0xe5,eax
  41e65e:	mov    bh,BYTE PTR [edx+0x21]
  41e661:	mov    ch,0xcf
  41e663:	test   BYTE PTR [ecx-0x15],0x68
  41e667:	or     eax,0x2d15226a
  41e66c:	ret    0x2028
  41e66f:	and    DWORD PTR [edi+0x3c],ebp
  41e672:	imul   esp,DWORD PTR [ebp+0x6d],0x79
  41e676:	ret    
  41e677:	dec    esi
  41e678:	ins    DWORD PTR es:[edi],dx
  41e679:	ret    
  41e67a:	add    dl,BYTE PTR [esi+0x7f9af354]
  41e680:	bt     DWORD PTR [edi],edi
  41e683:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e684:	aaa    
  41e685:	jnp    0x41e658
  41e687:	xor    eax,DWORD PTR [edx]
  41e689:	popf   
  41e68a:	and    bl,BYTE PTR [edx-0x39]
  41e68d:	sbb    edi,eax
  41e68f:	gs or  eax,0x8db8e9a
  41e695:	sub    al,BYTE PTR [esi+eax*8-0x24]
  41e699:	leave  
  41e69a:	sbb    BYTE PTR [ebp+0x7d011a0],cl
  41e6a0:	cmp    eax,0x83050154
  41e6a5:	xchg   edx,eax
  41e6a6:	push   eax
  41e6a7:	mov    ebx,gs
  41e6a9:	jns    0x41e64f
  41e6ab:	mov    WORD PTR [eax],gs
  41e6ad:	cli    
  41e6ae:	scas   al,BYTE PTR es:[edi]
  41e6af:	pop    ebx
  41e6b0:	clc    
  41e6b1:	loopne 0x41e6e9
  41e6b3:	lods   eax,DWORD PTR ds:[esi]
  41e6b4:	lods   al,BYTE PTR ds:[esi]
  41e6b5:	test   eax,0xacf4b403
  41e6ba:	sti    
  41e6bb:	pop    edi
  41e6bc:	inc    edi
  41e6bd:	and    al,BYTE PTR [ebx-0x55bdee2]
  41e6c3:	xlat   BYTE PTR ds:[ebx]
  41e6c4:	dec    eax
  41e6c5:	int    0x55
  41e6c7:	rcr    bh,0xe1
  41e6ca:	test   eax,0x21edbc75
  41e6cf:	(bad)  
  41e6d0:	popf   
  41e6d1:	out    dx,eax
  41e6d2:	stos   BYTE PTR es:[edi],al
  41e6d3:	mov    esp,DWORD PTR [ebx+ecx*8]
  41e6d6:	push   edi
  41e6d7:	shl    BYTE PTR [ebx+0x26],0xb7
  41e6db:	scas   eax,DWORD PTR es:[edi]
  41e6dc:	into   
  41e6dd:	pop    edi
  41e6de:	pop    ds
  41e6df:	out    0xf,eax
  41e6e1:	pop    esp
  41e6e2:	mov    DWORD PTR [edx],eax
  41e6e4:	adc    edx,DWORD PTR ds:0xf5f8375c
  41e6ea:	and    eax,0xe1318096
  41e6ef:	jmp    0x7c3414a9
  41e6f4:	sbb    BYTE PTR [esi-0x2bb33f90],al
  41e6fa:	mov    ebp,0x9a8a9fe9
  41e6ff:	pop    esp
  41e700:	xchg   esi,eax
  41e701:	xchg   ecx,eax
  41e702:	adc    eax,0xee1db576
  41e707:	xchg   edx,eax
  41e708:	push   ss
  41e709:	sbb    DWORD PTR [eax-0x75],edx
  41e70c:	jns    0x41e768
  41e70e:	enter  0xa989,0x37
  41e712:	mov    esi,0xed5625a9
  41e717:	xchg   edx,eax
  41e718:	repz mov WORD PTR [ecx],es
  41e71b:	pop    ebx
  41e71c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e71d:	pop    edi
  41e71e:	aas    
  41e71f:	lea    edx,[edi-0x538810c8]
  41e725:	sub    DWORD PTR [eax+0x230acffb],ecx
  41e72b:	jns    0x41e77c
  41e72d:	and    eax,0xf77f502b
  41e732:	faddp  st(2),st
  41e734:	push   eax
  41e735:	data16 (bad) 
  41e737:	sbb    dh,BYTE PTR [edi]
  41e739:	mov    bl,0x8
  41e73b:	add    eax,0xc3923769
  41e740:	ds test al,0x3d
  41e743:	(bad)  
  41e744:	popa   
  41e745:	outs   dx,BYTE PTR ds:[esi]
  41e746:	mov    ds:0x6559659c,al
  41e74b:	xchg   ebx,eax
  41e74c:	or     eax,0x17741d06
  41e751:	(bad)  
  41e752:	or     al,0xb0
  41e754:	mov    ah,BYTE PTR [eax+0x44]
  41e757:	dec    ebp
  41e758:	lds    ebx,FWORD PTR [edx+0x3cffca7b]
  41e75e:	mov    eax,DWORD PTR [ebx-0x2e]
  41e761:	retf   
  41e762:	xchg   edx,eax
  41e763:	xor    ecx,ecx
  41e765:	or     ebp,ecx
  41e767:	js     0x41e750
  41e769:	lods   eax,DWORD PTR ds:[esi]
  41e76a:	push   ecx
  41e76b:	mov    edx,0xdc9bd23d
  41e770:	loopne 0x41e787
  41e772:	push   dx
  41e774:	icebp  
  41e775:	out    0x12,al
  41e777:	(bad)  
  41e778:	out    0x92,eax
  41e77a:	or     eax,0x1c624255
  41e77f:	dec    esi
  41e780:	xlat   BYTE PTR ds:[ebx]
  41e781:	pop    esp
  41e782:	mov    ebx,0xe55ffd99
  41e787:	jp     0x41e7f9
  41e789:	jb     0x41e7ad
  41e78b:	push   0xffffff97
  41e78d:	inc    ebx
  41e78e:	dec    ebp
  41e78f:	jmp    0x41e723
  41e791:	dec    esi
  41e792:	sar    BYTE PTR [eax+ecx*1],0x15
  41e796:	mov    DWORD PTR [edi-0x306f5427],eax
  41e79c:	cmp    eax,0x5c97f877
  41e7a1:	ds mov ch,0xc9
  41e7a4:	xchg   ebx,eax
  41e7a5:	mov    edi,0xa1e44afa
  41e7aa:	dec    ebx
  41e7ab:	dec    ecx
  41e7ac:	adc    DWORD PTR [eax-0x1ffc5fbe],eax
  41e7b2:	ret    
  41e7b3:	xchg   edi,eax
  41e7b4:	enter  0x4852,0x78
  41e7b8:	mov    dl,0xee
  41e7ba:	into   
  41e7bb:	push   es
  41e7bc:	xor    BYTE PTR [ecx-0x28],bh
  41e7bf:	jo     0x41e7c0
  41e7c1:	cmp    dl,BYTE PTR [edi+0x483618e0]
  41e7c7:	push   cs
  41e7c8:	xor    al,0x45
  41e7ca:	xlat   BYTE PTR ds:[ebx]
  41e7cb:	mov    bl,0x20
  41e7cd:	sbb    al,0x50
  41e7cf:	mov    bh,dl
  41e7d1:	fldcw  WORD PTR [ebx+0x2900491a]
  41e7d7:	sbb    ch,bl
  41e7d9:	or     edi,DWORD PTR [edi+ecx*4]
  41e7dc:	aas    
  41e7dd:	or     ebx,DWORD PTR [ebp+0x33]
  41e7e0:	scas   eax,DWORD PTR es:[edi]
  41e7e1:	les    edx,FWORD PTR [edx-0x39]
  41e7e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e7e5:	add    esi,0x5f92f6e0
  41e7eb:	cld    
  41e7ec:	iret   
  41e7ed:	hlt    
  41e7ee:	in     al,dx
  41e7ef:	mov    cs,WORD PTR [edi]
  41e7f1:	push   esp
  41e7f2:	shl    DWORD PTR [ecx+0x78],0xe5
  41e7f6:	sahf   
  41e7f7:	pushf  
  41e7f8:	mov    ds:0xd4f9653f,al
  41e7fd:	out    dx,eax
  41e7fe:	jmp    0x41e784
  41e800:	jo     0x41e802
  41e802:	dec    ebp
  41e803:	xchg   ebx,eax
  41e804:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e805:	clc    
  41e806:	sub    BYTE PTR [ecx+0x9a1ab61],al
  41e80c:	or     dh,BYTE PTR [eax-0x55]
  41e80f:	lea    esp,[ecx+0x1eca0280]
  41e815:	add    BYTE PTR [esi+0x2d],bl
  41e818:	(bad)  
  41e819:	test   al,0x1c
  41e81b:	outs   dx,BYTE PTR ds:[esi]
  41e81c:	jmp    0x41e7d7
  41e81e:	ins    BYTE PTR es:[edi],dx
  41e81f:	jg     0x41e7dd
  41e821:	sbb    ebp,0xffffff97
  41e824:	out    0x37,eax
  41e826:	fistp  DWORD PTR [eax]
  41e828:	pop    ebx
  41e829:	(bad)  
  41e82a:	fs imul ecx,ebx,0x1a
  41e82e:	pop    es
  41e82f:	adc    DWORD PTR [esi],esp
  41e831:	and    DWORD PTR [edi-0x5d15e1e],esi
  41e837:	out    dx,eax
  41e838:	pop    eax
  41e839:	int3   
  41e83a:	jmp    0x8ca7:0x4ce4d4e6
  41e841:	(bad)  
  41e842:	je     0x41e812
  41e844:	pop    edi
  41e845:	int    0xe2
  41e847:	sub    ecx,DWORD PTR [eax-0x755931ed]
  41e84d:	jnp    0x41e7e2
  41e84f:	lea    ebx,[eax]
  41e851:	push   cs
  41e852:	jle    0x41e8cf
  41e854:	or     BYTE PTR [edi-0x742d145],bl
  41e85a:	rol    DWORD PTR [edi-0x6c],1
  41e85d:	and    esi,ebp
  41e85f:	ja     0x41e8b0
  41e861:	out    0xe0,eax
  41e863:	and    edx,DWORD PTR [edx]
  41e865:	xchg   esp,eax
  41e866:	iret   
  41e867:	imul   edx,DWORD PTR [ebx],0x6f
  41e86a:	push   edx
  41e86b:	fsub   QWORD PTR [ecx]
  41e86d:	adc    DWORD PTR [esi+0x69],ebp
  41e870:	pop    ds
  41e871:	mov    dh,0xed
  41e873:	xlat   BYTE PTR ds:[ebx]
  41e874:	out    0x88,eax
  41e876:	and    al,0xf2
  41e878:	sar    BYTE PTR [eax+0x717d6826],cl
  41e87e:	add    BYTE PTR ds:0x440a6a6a,0xc0
  41e885:	cmp    BYTE PTR [esi],ah
  41e887:	mov    eax,ds:0xec1f49e3
  41e88c:	push   0xffffffaa
  41e88e:	push   ebx
  41e88f:	jne    0x41e8b0
  41e891:	imul   DWORD PTR [ecx+edi*4+0x4952557e]
  41e898:	sbb    ecx,DWORD PTR [edi-0x61]
  41e89b:	popa   
  41e89c:	cmp    al,0xb8
  41e89e:	stos   DWORD PTR es:[edi],eax
  41e89f:	fs (bad) 
  41e8a1:	int3   
  41e8a2:	sub    DWORD PTR [edi],ebx
  41e8a4:	shr    BYTE PTR [ebp-0x36],1
  41e8a7:	jge    0x41e86f
  41e8a9:	inc    ebx
  41e8aa:	xchg   BYTE PTR [eax],al
  41e8ac:	jno    0x41e8f1
  41e8ae:	repz push ss
  41e8b0:	jo     0x41e8dc
  41e8b2:	out    0x6e,eax
  41e8b4:	or     BYTE PTR [ecx-0x41a3e438],dh
  41e8ba:	(bad)  
  41e8bb:	pop    ds
  41e8bc:	repnz pusha 
  41e8be:	shl    BYTE PTR [ecx+ebx*2+0x6c],0xe
  41e8c3:	cli    
  41e8c4:	paddq  mm5,QWORD PTR [ecx+0x24cf2370]
  41e8cb:	mov    edi,DWORD PTR [edi-0x53]
  41e8ce:	sti    
  41e8cf:	push   0xb85805f4
  41e8d4:	int3   
  41e8d5:	mov    eax,ds:0x1c193415
  41e8da:	xlat   BYTE PTR ds:[ebx]
  41e8db:	in     al,0xf2
  41e8dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e8de:	loope  0x41e918
  41e8e0:	xchg   edi,eax
  41e8e1:	sub    eax,0x2e2aa70d
  41e8e6:	dec    ebx
  41e8e7:	xchg   dh,ch
  41e8e9:	fmulp  st(5),st
  41e8eb:	ins    BYTE PTR es:[edi],dx
  41e8ec:	mov    edx,0x3763abeb
  41e8f1:	mov    gs,WORD PTR [eax+0x7fa93f75]
  41e8f7:	jne    0x41e8dc
  41e8f9:	sub    edx,0xe
  41e8fc:	sub    BYTE PTR [ebp-0x91c127],bh
  41e902:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e903:	shl    ebp,1
  41e905:	dec    ebx
  41e906:	daa    
  41e907:	div    BYTE PTR [eax+0x41]
  41e90a:	imul   ebp,DWORD PTR [edx+eax*8+0x60],0x14
  41e90f:	pop    ecx
  41e910:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e911:	jle    0x41e925
  41e913:	lods   al,BYTE PTR ds:[esi]
  41e914:	int3   
  41e915:	push   ebp
  41e916:	and    DWORD PTR [ebx+0x71e17cf6],0xffffffe0
  41e91d:	push   0xffffff9b
  41e91f:	xchg   ecx,eax
  41e920:	imul   ecx,DWORD PTR [edi+0x61],0xe0cb2b9f
  41e927:	addr16 pop esp
  41e929:	(bad)  
  41e92b:	addr16 mov dl,0x1b
  41e92e:	cmp    DWORD PTR [esi],0xffffff88
  41e931:	xor    eax,0xe89e21f5
  41e936:	fwait
  41e937:	mov    cl,0xf
  41e939:	and    dh,BYTE PTR ss:[edx+esi*8-0x2b]
  41e93e:	iret   
  41e93f:	imul   eax,ebp,0x2c
  41e942:	sub    BYTE PTR [ebp-0x4eee9d1c],0x3
  41e949:	cmp    ch,ah
  41e94b:	daa    
  41e94c:	xlat   BYTE PTR ds:[ebx]
  41e94d:	push   0xffffffaf
  41e94f:	retf   
  41e950:	aaa    
  41e951:	pop    ss
  41e952:	sub    BYTE PTR [edi],0xa3
  41e955:	ds mov cl,0xf6
  41e958:	lds    esp,FWORD PTR [ecx]
  41e95a:	out    dx,eax
  41e95b:	sub    ebp,DWORD PTR [edi-0x49]
  41e95e:	into   
  41e95f:	sub    al,0xe9
  41e961:	int3   
  41e962:	pop    edi
  41e963:	dec    esp
  41e964:	pop    es
  41e965:	inc    edx
  41e966:	adc    eax,0x3b18b469
  41e96b:	cmp    eax,0x28f72f87
  41e970:	and    DWORD PTR [esi],esp
  41e972:	inc    esi
  41e973:	stos   BYTE PTR es:[edi],al
  41e974:	push   cs
  41e975:	mov    edi,0xb7044dce
  41e97a:	mov    dl,0x4a
  41e97c:	daa    
  41e97d:	push   ds
  41e97e:	add    esp,DWORD PTR [edi-0x3d0ac0b7]
  41e984:	rcl    BYTE PTR [ecx],0x88
  41e987:	mov    ebx,0x246f48ba
  41e98c:	stos   BYTE PTR es:[edi],al
  41e98d:	push   ebp
  41e98e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e98f:	sbb    al,0xb2
  41e991:	mov    cl,0x10
  41e993:	inc    esp
  41e994:	jle    0x41e9c9
  41e996:	dec    ebp
  41e997:	xchg   DWORD PTR cs:[ecx+ebp*8+0x74],eax
  41e99c:	or     ah,BYTE PTR [esi]
  41e99e:	mov    ch,0x56
  41e9a0:	std    
  41e9a1:	pop    es
  41e9a2:	and    ebp,esp
  41e9a4:	dec    edx
  41e9a5:	loopne 0x41e9c4
  41e9a7:	jo     0x41e9d9
  41e9a9:	push   ecx
  41e9aa:	je     0x41e96e
  41e9ac:	call   0x5f20:0x39a4d217
  41e9b3:	(bad)  
  41e9b4:	push   esp
  41e9b5:	push   esp
  41e9b6:	cmc    
  41e9b7:	clc    
  41e9b8:	ffreep st(1)
  41e9ba:	hlt    
  41e9bb:	std    
  41e9bc:	add    bh,BYTE PTR [ecx]
  41e9be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e9bf:	sbb    bh,BYTE PTR [ecx+0xf]
  41e9c2:	mov    WORD PTR [edx],es
  41e9c4:	mov    eax,0x427c2aa6
  41e9c9:	pop    ebx
  41e9ca:	mov    ebp,0x3f8f1dea
  41e9cf:	(bad)  
  41e9d0:	and    ah,BYTE PTR [esi+0x4625b94c]
  41e9d6:	(bad)  
  41e9d7:	or     eax,0xa5403fc3
  41e9dc:	inc    BYTE PTR [edi-0x5b]
  41e9df:	add    eax,0x1db57248
  41e9e4:	loope  0x41ea27
  41e9e6:	cmp    bh,BYTE PTR [edx]
  41e9e8:	push   cs
  41e9e9:	pop    edx
  41e9ea:	test   DWORD PTR [ebp+0x3b],ecx
  41e9ed:	jno    0x41e99a
  41e9ef:	dec    edx
  41e9f0:	out    0x4c,eax
  41e9f2:	mov    ds:0x96411e78,al
  41e9f7:	sub    DWORD PTR [esi+0x13a9aabd],0x76
  41e9fe:	mov    al,0xd
  41ea00:	mov    cl,0x63
  41ea02:	xchg   BYTE PTR [ebp+eax*8-0x6fc1e5ae],cl
  41ea09:	xor    al,0x91
  41ea0b:	fldcw  WORD PTR [esi+0x14]
  41ea0e:	xchg   DWORD PTR [esp+ebx*8-0x52672aae],esi
  41ea15:	popf   
  41ea16:	mov    edi,0x111f70cb
  41ea1b:	in     al,dx
  41ea1c:	test   BYTE PTR [edx],0x1a
  41ea1f:	jge    0x41ea82
  41ea21:	or     ah,BYTE PTR [ecx-0x49]
  41ea24:	and    bl,ch
  41ea26:	sub    BYTE PTR [eax],ch
  41ea28:	sti    
  41ea29:	popa   
  41ea2a:	fcom   QWORD PTR [ebx]
  41ea2c:	jmp    0x1cde93c4
  41ea31:	dec    ebp
  41ea32:	pop    esi
  41ea33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea34:	stc    
  41ea35:	call   0xc548:0x5286284e
  41ea3c:	pop    ebp
  41ea3d:	dec    ebx
  41ea3e:	push   esi
  41ea3f:	pop    ebx
  41ea40:	and    DWORD PTR [ecx+0x3],edi
  41ea43:	or     BYTE PTR [esi+ebp*2-0x72],bh
  41ea47:	repnz and al,0x62
  41ea4a:	cmp    DWORD PTR [ebp+0x7829231],edx
  41ea50:	mov    al,ds:0x4093f6d3
  41ea55:	stos   BYTE PTR es:[edi],al
  41ea56:	loopne 0x41ea34
  41ea58:	das    
  41ea59:	jge    0x41ea63
  41ea5b:	xchg   ebx,eax
  41ea5c:	in     eax,0xc2
  41ea5e:	push   esi
  41ea5f:	adc    BYTE PTR [eax],al
  41ea61:	or     ecx,ebx
  41ea63:	jno    0x41ea64
  41ea65:	pop    ds
  41ea66:	(bad)  
  41ea67:	pop    ebx
  41ea68:	push   ecx
  41ea69:	add    bh,dl
  41ea6b:	xchg   esi,eax
  41ea6c:	xor    BYTE PTR [esi+0x30],ch
  41ea6f:	or     al,0xad
  41ea71:	pop    ds
  41ea72:	inc    esp
  41ea73:	sub    eax,0xecca3e91
  41ea78:	and    DWORD PTR [ebx+0x174ee97],ebp
  41ea7e:	popf   
  41ea7f:	adc    ch,BYTE PTR [ebp+0x528a3966]
  41ea85:	add    cl,BYTE PTR [esi-0x4e]
  41ea88:	stc    
  41ea89:	push   0x273531d4
  41ea8e:	in     eax,dx
  41ea8f:	jge    0x41eac5
  41ea91:	xchg   ecx,eax
  41ea92:	rcl    edi,cl
  41ea94:	nop
  41ea95:	ss lods al,BYTE PTR es:[esi]
  41ea98:	inc    edx
  41ea99:	mul    DWORD PTR [ebx]
  41ea9b:	jle    0x41ead7
  41ea9d:	call   0x8b150b2f
  41eaa2:	sub    eax,DWORD PTR [eax]
  41eaa4:	add    ebp,DWORD PTR [ebx+0x4c7d0a0e]
  41eaaa:	ficomp DWORD PTR [ebx+0x19566b1f]
  41eab0:	arpl   WORD PTR [ecx],ax
  41eab2:	lods   eax,DWORD PTR ds:[esi]
  41eab3:	jp     0x41eae4
  41eab5:	or     al,0x9b
  41eab7:	es dec edi
  41eab9:	or     eax,0xb415dd8a
  41eabe:	and    eax,esp
  41eac0:	int    0xab
  41eac2:	pushf  
  41eac3:	adc    dh,BYTE PTR [ecx+0x7a632eee]
  41eac9:	dec    esp
  41eaca:	(bad)  
  41eacb:	xchg   ebp,eax
  41eacc:	push   eax
  41eacd:	scas   eax,DWORD PTR es:[edi]
  41eace:	stos   DWORD PTR es:[edi],eax
  41eacf:	push   esp
  41ead0:	out    0x30,al
  41ead2:	jg     0x41ea71
  41ead4:	jne    0x41eae7
  41ead6:	cmp    al,0xfa
  41ead8:	lahf   
  41ead9:	jns    0x41ea7f
  41eadb:	cmp    eax,esp
  41eadd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eade:	cwde   
  41eadf:	sbb    esp,DWORD PTR [esi+0x22194a61]
  41eae5:	outs   dx,BYTE PTR ds:[esi]
  41eae6:	popf   
  41eae7:	hlt    
  41eae8:	mov    eax,0xb4352d96
  41eaed:	sbb    al,0x9e
  41eaef:	mov    dl,0x82
  41eaf1:	jmp    0x41eaec
  41eaf3:	push   ss
  41eaf4:	fld    st(6)
  41eaf6:	scas   eax,DWORD PTR es:[edi]
  41eaf7:	cmc    
  41eaf8:	mov    edx,DWORD PTR [ebp-0x18]
  41eafb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eafc:	xchg   ebx,eax
  41eafd:	std    
  41eafe:	dec    ebp
  41eaff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb00:	xchg   edx,eax
  41eb01:	mov    al,0x26
  41eb03:	outs   dx,DWORD PTR ds:[esi]
  41eb04:	icebp  
  41eb05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb06:	call   0x366b018c
  41eb0b:	pop    ecx
  41eb0c:	test   BYTE PTR [edi-0xf],ah
  41eb0f:	add    ecx,DWORD PTR [esi+ebp*8+0x3b]
  41eb13:	sar    al,1
  41eb15:	imul   eax,DWORD PTR [ebx-0x56],0x30
  41eb19:	mov    dh,0x40
  41eb1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb1c:	adc    eax,0x5b8b76b
  41eb21:	js     0x41eb91
  41eb23:	and    dl,BYTE PTR [ecx-0x3db4be4a]
  41eb29:	int    0x91
  41eb2b:	adc    eax,0x93dbc479
  41eb30:	dec    esi
  41eb31:	iret   
  41eb32:	arpl   WORD PTR [edx-0x334d969],di
  41eb38:	rcr    BYTE PTR [edi+edi*2-0x41484d94],1
  41eb3f:	push   edi
  41eb40:	arpl   WORD PTR [esi+0x2ed134fd],cx
  41eb46:	dec    edi
  41eb47:	arpl   WORD PTR [edi+0x69],si
  41eb4a:	leave  
  41eb4b:	jecxz  0x41ebb3
  41eb4d:	jmp    0xfc15:0x72eb7906
  41eb54:	mov    eax,ds:0x30ac0bc4
  41eb59:	adc    eax,0xdf8ef479
  41eb5e:	sub    al,cl
  41eb60:	push   edx
  41eb61:	call   0xba2a:0x5c8ae690
  41eb68:	cmp    al,0x35
  41eb6a:	push   ebx
  41eb6b:	cld    
  41eb6c:	xor    bl,0x1a
  41eb6f:	cmp    esi,DWORD PTR [edi+0x4a2633ef]
  41eb75:	shl    eax,0x6a
  41eb78:	fdivr  DWORD PTR [edx+0x33]
  41eb7b:	adc    eax,0x52fb8e6e
  41eb80:	xor    eax,0xc672b70e
  41eb85:	adc    DWORD PTR [edi+0x65],edx
  41eb88:	imul   esi,DWORD PTR ds:0xd43ecd8b,0xffffffb5
  41eb8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb90:	xor    BYTE PTR [esp+ebp*1-0x3d],0x10
  41eb95:	stos   BYTE PTR es:[edi],al
  41eb96:	xchg   BYTE PTR [edx],bh
  41eb98:	lahf   
  41eb99:	ja     0x41eb8f
  41eb9b:	call   0x3b5d:0xdefcfd7b
  41eba2:	push   ebx
  41eba3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eba4:	mov    al,0x40
  41eba6:	xor    DWORD PTR [eax],ebp
  41eba8:	mov    ch,0xd0
  41ebaa:	xchg   esi,eax
  41ebab:	push   esi
  41ebac:	cwde   
  41ebad:	inc    eax
  41ebae:	or     al,0x53
  41ebb0:	or     DWORD PTR [edx-0x4a],ebx
  41ebb3:	jae    0x41ec06
  41ebb5:	push   edi
  41ebb6:	add    eax,0x616571a2
  41ebbb:	lahf   
  41ebbc:	(bad)  
  41ebbd:	cmp    DWORD PTR [edi+esi*2],ebp
  41ebc0:	aaa    
  41ebc1:	mov    BYTE PTR [ebp-0x38627292],ah
  41ebc7:	adc    cl,dl
  41ebc9:	scas   eax,DWORD PTR es:[edi]
  41ebca:	leave  
  41ebcb:	and    esi,DWORD PTR [eax]
  41ebcd:	les    esi,FWORD PTR [ecx]
  41ebcf:	cmp    bh,BYTE PTR [eax+0x326e1874]
  41ebd5:	inc    edi
  41ebd6:	outs   dx,DWORD PTR ds:[esi]
  41ebd7:	inc    edi
  41ebd8:	test   eax,0x7fec338e
  41ebdd:	je     0x41ebe8
  41ebdf:	(bad)  
  41ebe0:	fisubr WORD PTR [edi]
  41ebe2:	retf   
  41ebe3:	mov    ds,WORD PTR [ecx-0x6]
  41ebe6:	cmp    DWORD PTR [edx+eiz*1-0x26],ebp
  41ebea:	sbb    edx,esi
  41ebec:	mov    cl,0x54
  41ebee:	out    0x89,eax
  41ebf0:	jecxz  0x41eb8c
  41ebf2:	sbb    BYTE PTR [edi+eax*8+0x24f727fc],bh
  41ebf9:	push   esi
  41ebfa:	jmp    0x41ebf1
  41ebfc:	stos   BYTE PTR es:[edi],al
  41ebfd:	push   eax
  41ebfe:	push   eax
  41ebff:	(bad)  
  41ec00:	mov    al,BYTE PTR [edx+0x332aefe0]
  41ec06:	pop    esp
  41ec07:	adc    dh,BYTE PTR [esi]
  41ec09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec0a:	mov    BYTE PTR ss:[edi+edx*4],ch
  41ec0e:	xor    ah,BYTE PTR [ecx-0x7d]
  41ec11:	idiv   eax
  41ec13:	pop    ebx
  41ec14:	into   
  41ec15:	sahf   
  41ec16:	idiv   DWORD PTR [edx+ecx*2+0x3df5ad03]
  41ec1d:	dec    ebp
  41ec1e:	and    BYTE PTR [ebp-0x3d3403c7],al
  41ec24:	cmp    DWORD PTR [ebx-0x579a0436],esp
  41ec2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec2b:	jae    0x41ec7b
  41ec2d:	inc    eax
  41ec2e:	sub    esi,DWORD PTR [ebx]
  41ec30:	test   al,0xee
  41ec32:	repnz leave 
  41ec34:	jae    0x41ebcd
  41ec36:	sub    BYTE PTR [ebp+0x3a8996fa],ch
  41ec3c:	ss push ds
  41ec3e:	int    0xef
  41ec40:	iret   
  41ec41:	repnz (bad) 
  41ec43:	repnz das 
  41ec45:	mov    ecx,0x1cdeaa77
  41ec4a:	dec    ecx
  41ec4b:	cs retf 
  41ec4d:	add    al,0xba
  41ec4f:	push   es
  41ec50:	jge    0x41ec96
  41ec52:	fistp  WORD PTR [esi+0x6f]
  41ec55:	out    0xe5,al
  41ec57:	fmulp  st(2),st
  41ec59:	into   
  41ec5a:	sbb    bl,dh
  41ec5c:	or     BYTE PTR [ecx-0x4e564b5c],0xc3
  41ec63:	cmp    al,0x33
  41ec65:	rcr    BYTE PTR [ecx-0x9938daf],cl
  41ec6b:	rol    BYTE PTR [esi],0x1b
  41ec6e:	or     BYTE PTR [edx+0x3],dl
  41ec71:	sub    BYTE PTR [ecx-0x1f],ah
  41ec74:	add    al,0x13
  41ec76:	adc    edi,edx
  41ec78:	aam    0xae
  41ec7a:	push   es
  41ec7b:	bound  edx,QWORD PTR [eax]
  41ec7d:	mov    ebp,0x68a9ea0b
  41ec82:	js     0x41ec78
  41ec84:	mov    bl,0x65
  41ec86:	inc    ebp
  41ec87:	pop    es
  41ec88:	repnz sbb DWORD PTR ds:0x66268de3,ebp
  41ec8f:	xchg   BYTE PTR [edx-0x4fc14e96],cl
  41ec95:	ficom  WORD PTR [eax+0x54]
  41ec98:	stos   BYTE PTR es:[edi],al
  41ec99:	pop    esi
  41ec9a:	ins    DWORD PTR es:[edi],dx
  41ec9b:	add    ch,BYTE PTR [esp+edi*8]
  41ec9e:	xchg   edi,eax
  41ec9f:	sahf   
  41eca0:	or     BYTE PTR [ecx+eax*2-0x6d],dl
  41eca4:	xchg   DWORD PTR [edx-0x470d246a],esi
  41ecaa:	cmp    eax,DWORD PTR [edi]
  41ecac:	cs daa 
  41ecae:	(bad)
  41ecb3:	pop    ebx
  41ecb4:	sti    
  41ecb5:	or     eax,0x31d27bc4
  41ecba:	pop    ds
  41ecbb:	adc    eax,0x6cc9eb14
  41ecc0:	mov    eax,0x112fcb8d
  41ecc5:	test   eax,0xd2152477
  41ecca:	aam    0x4
  41eccc:	jmp    0x41ed0a
  41ecce:	ss push cs
  41ecd0:	loope  0x41ec68
  41ecd2:	push   ecx
  41ecd3:	cmc    
  41ecd4:	cmp    eax,0x472d57a8
  41ecd9:	sbb    esp,DWORD PTR [ecx]
  41ecdb:	inc    edi
  41ecdc:	push   0x30e22a18
  41ece1:	fdiv   DWORD PTR [edi]
  41ece3:	jl     0x41ed39
  41ece5:	mov    esp,0x51efb4dd
  41ecea:	add    ebp,ecx
  41ecec:	mov    esi,0xe174060
  41ecf1:	sbb    BYTE PTR [esi+0x71e8bec8],ch
  41ecf7:	xchg   DWORD PTR [ecx+0xb],esi
  41ecfa:	fs xor dl,ah
  41ecfd:	repz adc DWORD PTR [ebp+eiz*4-0x21],0x7c
  41ed03:	and    DWORD PTR [ebx-0x61447824],0xffffffd6
  41ed0a:	inc    esp
  41ed0b:	hlt    
  41ed0c:	pop    ebx
  41ed0d:	in     al,dx
  41ed0e:	xchg   BYTE PTR [esi-0x13],bl
  41ed11:	test   eax,0x5d4bfe0b
  41ed16:	push   edx
  41ed17:	retf   0x72ca
  41ed1a:	push   ds
  41ed1b:	sahf   
  41ed1c:	idiv   edi
  41ed1e:	dec    ebp
  41ed1f:	and    BYTE PTR [edi-0x75],0x17
  41ed23:	mov    ebp,0xb42c17e9
  41ed28:	fdivrp st(2),st
  41ed2a:	pop    ds
  41ed2b:	jg     0x41ecad
  41ed2d:	sti    
  41ed2e:	mov    edx,DWORD PTR [edi-0x7112ea5f]
  41ed34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed35:	ja     0x41ed9b
  41ed37:	ja     0x41ed0c
  41ed39:	dec    edi
  41ed3a:	outs   dx,DWORD PTR ds:[esi]
  41ed3b:	arpl   dx,sp
  41ed3d:	cwde   
  41ed3e:	push   edi
  41ed3f:	or     BYTE PTR [ebp+eiz*8-0x40bdf53e],0xf3
  41ed47:	push   0xffffff97
  41ed49:	sub    al,0x86
  41ed4b:	xor    DWORD PTR [edx-0x4faccfdf],ecx
  41ed51:	and    DWORD PTR [esi+edi*4+0x13],ecx
  41ed55:	inc    edx
  41ed56:	mov    ah,0x4b
  41ed58:	ds popa 
  41ed5a:	adc    edi,DWORD PTR [ecx+0x366afe18]
  41ed60:	retf   0xdbec
  41ed63:	jmp    0xbff1:0x89d7aeb4
  41ed6a:	int    0x80
  41ed6c:	or     eax,0x12fb7e2b
  41ed71:	daa    
  41ed72:	div    DWORD PTR [eax-0x47]
  41ed75:	aaa    
  41ed76:	cmp    eax,0xc7cc24d5
  41ed7b:	rcl    eax,cl
  41ed7d:	push   ebx
  41ed7e:	(bad)  
  41ed7f:	xchg   ebp,eax
  41ed80:	push   edx
  41ed81:	sub    cl,BYTE PTR [esi+esi*2-0x27bf1768]
  41ed88:	fs xor bh,dl
  41ed8b:	xchg   DWORD PTR [edi],esi
  41ed8d:	ja     0x41ed66
  41ed8f:	popa   
  41ed90:	adc    ch,dl
  41ed92:	icebp  
  41ed93:	cdq    
  41ed94:	out    dx,eax
  41ed95:	push   esi
  41ed96:	pop    ss
  41ed97:	lea    eax,[eax-0x63]
  41ed9a:	mov    al,ds:0xd05128fc
  41ed9f:	or     edx,DWORD PTR [ebx-0x5f]
  41eda2:	adc    BYTE PTR ds:0x7b8c756e,dl
  41eda8:	out    0xbe,al
  41edaa:	arpl   WORD PTR [edx-0x63d0adf3],bx
  41edb0:	fild   WORD PTR [ebp+0x3d643f3c]
  41edb6:	add    ah,dh
  41edb8:	pop    edi
  41edb9:	jnp    0x41edb7
  41edbb:	ins    BYTE PTR es:[edi],dx
  41edbc:	sbb    ebp,DWORD PTR [eax+0x712e3e39]
  41edc2:	fucomip st,st(7)
  41edc4:	pop    ss
  41edc5:	pop    ds
  41edc6:	jae    0x41ed7c
  41edc8:	push   esp
  41edc9:	add    al,0x2b
  41edcb:	or     DWORD PTR [eax-0xf],edx
  41edce:	sub    DWORD PTR [ebx+ebp*4],edi
  41edd1:	imul   ecx,DWORD PTR [esi],0xe6096fd8
  41edd7:	arpl   WORD PTR [ebp+0x9],di
  41edda:	mov    edi,0xc4fd04e4
  41eddf:	cmp    eax,0x8b59249e
  41ede4:	or     al,0xf0
  41ede6:	ins    DWORD PTR es:[edi],dx
  41ede7:	pop    ebx
  41ede8:	sub    BYTE PTR [ecx-0x4991e20f],dl
  41edee:	mov    dh,0x61
  41edf0:	fsub   QWORD PTR [esi+edx*4]
  41edf3:	mov    WORD PTR [esi-0x16],?
  41edf6:	push   ebx
  41edf7:	loopne 0x41edef
  41edf9:	lds    esi,FWORD PTR [esi+0x319ecc99]
  41edff:	(bad)  
  41ee01:	jb     0x41ee43
  41ee03:	inc    esi
  41ee04:	stos   DWORD PTR es:[edi],eax
  41ee05:	popa   
  41ee06:	cwde   
  41ee07:	pop    esp
  41ee08:	aaa    
  41ee09:	add    ch,BYTE PTR [edx]
  41ee0b:	push   esp
  41ee0c:	les    edx,FWORD PTR [edi]
  41ee0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee0f:	(bad)  [eax+0x28be290c]
  41ee15:	fmul   QWORD PTR [ebp+0xaede775]
  41ee1b:	dec    ebx
  41ee1c:	(bad)  
  41ee1d:	leave  
  41ee1e:	icebp  
  41ee1f:	out    0xce,al
  41ee21:	inc    ebp
  41ee22:	mov    bl,0x25
  41ee24:	lds    ecx,FWORD PTR [ecx-0x7ad1da4b]
  41ee2a:	pop    eax
  41ee2b:	sbb    ch,BYTE PTR [esi-0xf]
  41ee2e:	ja     0x41edc9
  41ee30:	pop    edx
  41ee31:	(bad)  
  41ee32:	cmp    ah,al
  41ee34:	dec    edx
  41ee35:	mov    ds:0x5e90010f,eax
  41ee3a:	mov    eax,ds:0x7257768a
  41ee3f:	jge    0x41ee22
  41ee41:	xadd   BYTE PTR [ebp+0x2942e4f5],bh
  41ee48:	call   0x1b6eba84
  41ee4d:	dec    eax
  41ee4e:	xor    edi,0x9ba6f293
  41ee54:	xor    BYTE PTR [esi-0x1],dh
  41ee57:	add    DWORD PTR [ecx],ebx
  41ee59:	retf   0xc06d
  41ee5c:	out    0xb0,eax
  41ee5e:	jmp    0x41eebb
  41ee60:	inc    eax
  41ee61:	inc    esi
  41ee62:	hlt    
  41ee63:	xor    al,0x8d
  41ee65:	enter  0x1d92,0x7e
  41ee69:	popf   
  41ee6a:	xchg   dh,cl
  41ee6c:	inc    ecx
  41ee6d:	out    dx,al
  41ee6e:	test   eax,0xe6e01b75
  41ee73:	adc    al,0xee
  41ee75:	or     BYTE PTR [edi],dl
  41ee77:	ds loopne 0x41ee4d
  41ee7a:	mov    fs,eax
  41ee7c:	jae    0x41ee0e
  41ee7e:	call   0x54542712
  41ee83:	ja     0x41ee08
  41ee85:	inc    ebx
  41ee86:	lea    eax,[eax]
  41ee88:	mov    WORD PTR ss:[ebp+0x560e5c9],cs
  41ee8f:	xchg   ebp,eax
  41ee90:	ds jg  0x41ee4c
  41ee93:	ret    
  41ee94:	xchg   esp,eax
  41ee95:	adc    BYTE PTR [ebx],bh
  41ee97:	inc    esi
  41ee98:	popf   
  41ee99:	div    DWORD PTR [edi+0x41d4aa6f]
  41ee9f:	sbb    BYTE PTR [eax-0x2],ch
  41eea2:	adc    ebp,esp
  41eea4:	mov    cs,WORD PTR [esi]
  41eea6:	ret    0xbdde
  41eea9:	sbb    BYTE PTR [ecx],bh
  41eeab:	or     eax,0xde0979d1
  41eeb0:	mov    ebp,ecx
  41eeb2:	mov    eax,ds:0x137d8c1d
  41eeb7:	addr16 cmp eax,0x9f276eae
  41eebd:	pop    ecx
  41eebe:	mov    ds:0x7e17a4a1,eax
  41eec3:	imul   esp,DWORD PTR [esi],0xffffffeb
  41eec6:	sub    al,al
  41eec8:	(bad)  
  41eec9:	push   ds
  41eeca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eecb:	loope  0x41ee6b
  41eecd:	retf   0xf880
  41eed0:	add    edi,DWORD PTR [esi+0x61d6bd87]
  41eed6:	push   esi
  41eed7:	idiv   dl
  41eed9:	or     eax,0xf4e9d24b
  41eede:	adc    eax,edx
  41eee0:	nop
  41eee1:	sti    
  41eee2:	outs   dx,DWORD PTR ds:[esi]
  41eee3:	mov    esi,0x5a1114c6
  41eee8:	fwait
  41eee9:	push   0x6166474b
  41eeee:	shl    ecx,cl
  41eef0:	jnp    0x41ee82
  41eef2:	shl    DWORD PTR [edi+0x68],0x4
  41eef6:	jmp    0x41ee9d
  41eef8:	pop    es
  41eef9:	(bad)  
  41eefa:	imul   esp,DWORD PTR [edx-0x1637dd02],0xffffffaa
  41ef01:	mov    bh,0xb0
  41ef03:	jmp    0x280fbed5
  41ef08:	adc    al,0xfc
  41ef0a:	cmp    eax,DWORD PTR [ebp-0x42]
  41ef0d:	call   0x7dd1:0x2c9a9d57
  41ef14:	(bad)  
  41ef15:	fnsave [eax+0x30]
  41ef18:	xor    bh,BYTE PTR [edx+0x42b1363]
  41ef1e:	stos   BYTE PTR es:[edi],al
  41ef1f:	xchg   ebp,edx
  41ef21:	jmp    0x41eeed
  41ef23:	jmp    0x9ce6:0xd5ee1d15
  41ef2a:	stos   BYTE PTR es:[edi],al
  41ef2b:	inc    edi
  41ef2c:	aam    0xdc
  41ef2e:	outs   dx,DWORD PTR ds:[esi]
  41ef2f:	cmp    edi,DWORD PTR [ecx+0xcbf8d2c]
  41ef35:	xor    al,0xa3
  41ef37:	inc    ebp
  41ef38:	push   0xffffff99
  41ef3a:	test   ebx,0xa823d637
  41ef40:	dec    ebp
  41ef41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef42:	dec    edi
  41ef43:	jns    0x41ef11
  41ef45:	or     BYTE PTR [edi-0x69],bl
  41ef48:	dec    ebx
  41ef49:	pop    es
  41ef4a:	xchg   esp,eax
  41ef4b:	inc    ebx
  41ef4c:	inc    ebp
  41ef4d:	xor    ah,ah
  41ef4f:	push   ebp
  41ef50:	ja     0x41ef57
  41ef52:	sbb    DWORD PTR [ebx-0x3e],edx
  41ef55:	dec    ecx
  41ef56:	cmp    BYTE PTR [esi-0x5b],bh
  41ef59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef5a:	sbb    cl,BYTE PTR ds:0x6d3b4005
  41ef60:	fimul  DWORD PTR [esi]
  41ef62:	stos   BYTE PTR es:[edi],al
  41ef63:	jge    0x41efd8
  41ef65:	adc    al,0x3b
  41ef67:	lds    ebx,FWORD PTR [esi-0x80]
  41ef6a:	pop    eax
  41ef6b:	clc    
  41ef6c:	pop    ebp
  41ef6d:	mov    dh,0x32
  41ef6f:	cld    
  41ef70:	xchg   ecx,eax
  41ef71:	add    DWORD PTR [esi],ebx
  41ef73:	jns    0x41ef44
  41ef75:	scas   eax,DWORD PTR es:[edi]
  41ef76:	cmp    esi,DWORD PTR [ecx+0x40]
  41ef79:	scas   eax,DWORD PTR es:[edi]
  41ef7a:	(bad)  
  41ef7b:	mov    edx,0x54b61c77
  41ef80:	sbb    ebp,DWORD PTR [edi-0x70]
  41ef83:	fnstcw WORD PTR [ebp-0x6eef837b]
  41ef89:	xor    eax,0xa2ee06f6
  41ef8e:	mov    ?,WORD PTR [eax]
  41ef90:	push   0xef29a865
  41ef95:	sbb    al,0x20
  41ef97:	xchg   ecx,eax
  41ef98:	mov    ebp,esp
  41ef9a:	ins    DWORD PTR es:[edi],dx
  41ef9b:	lea    ebp,[ebx]
  41ef9d:	mov    bl,0xd3
  41ef9f:	mov    cl,0x2a
  41efa1:	dec    esi
  41efa2:	repz pop esp
  41efa4:	adc    DWORD PTR [eax],0xffffffe2
  41efa7:	pop    ds
  41efa8:	push   ss
  41efa9:	mov    al,ds:0x7b674e2e
  41efae:	pop    edi
  41efaf:	arpl   WORD PTR [esi],dx
  41efb1:	and    DWORD PTR [eax+edx*4],edi
  41efb4:	int3   
  41efb5:	mov    dh,0xa8
  41efb7:	mov    eax,ds:0x60d174e3
  41efbc:	lahf   
  41efbd:	xor    DWORD PTR ds:0xdaa1aa0f,edi
  41efc3:	test   DWORD PTR [ecx+0x1a],ebp
  41efc6:	gs out dx,eax
  41efc8:	jmp    0x41f02e
  41efca:	fist   WORD PTR [edx]
  41efcc:	xchg   ebp,eax
  41efcd:	ret    
  41efce:	or     ah,BYTE PTR ds:0x4e095c30
  41efd4:	jbe    0x41f00c
  41efd6:	imul   ebp,DWORD PTR [edi-0x30],0xd9a16b6f
  41efdd:	repz (bad) 
  41efdf:	xlat   BYTE PTR ds:[ebx]
  41efe0:	jge    0x41eff7
  41efe2:	xchg   edi,eax
  41efe3:	mov    ebp,0x580c7b97
  41efe8:	mov    esi,0xac79e54a
  41efed:	push   ds
  41efee:	cmc    
  41efef:	mov    ecx,0x60229081
  41eff4:	ins    BYTE PTR es:[edi],dx
  41eff5:	cs cmp al,0x9f
  41eff8:	scas   eax,DWORD PTR es:[edi]
  41eff9:	in     al,0xa1
  41effb:	les    ax,DWORD PTR [ecx]
  41effe:	out    0x8a,eax
  41f000:	sbb    al,BYTE PTR [ecx-0x724b0c22]
  41f006:	retf   0xe171
  41f009:	jg     0x41efc8
  41f00b:	or     ah,ch
  41f00d:	push   ss
  41f00e:	or     al,0x93
  41f010:	aam    0x96
  41f012:	imul   edx,DWORD PTR [ebp-0x67dd1cbe],0xb9d69102
  41f01c:	aam    0x19
  41f01e:	ins    DWORD PTR es:[di],dx
  41f020:	inc    edi
  41f021:	fistp  WORD PTR [esi+0x12]
  41f024:	dec    edi
  41f025:	daa    
  41f026:	dec    ebp
  41f027:	cmp    al,0xc0
  41f029:	pushf  
  41f02a:	inc    esi
  41f02b:	mov    cl,al
  41f02d:	aad    0xe7
  41f02f:	jbe    0x41f09d
  41f031:	out    dx,al
  41f032:	mul    cl
  41f034:	pop    ebp
  41f035:	fmul   QWORD PTR fs:[ebp-0x629ffb91]
  41f03c:	retf   
  41f03d:	lea    ebp,[ecx-0x2d]
  41f040:	rol    DWORD PTR [edx],0xd4
  41f043:	mov    al,ds:0xc0d6f1f
  41f048:	push   esp
  41f049:	jl     0x41f0b8
  41f04b:	loope  0x41f040
  41f04d:	int    0xdd
  41f04f:	or     dh,dh
  41f051:	sbb    DWORD PTR [ebx],edx
  41f053:	inc    ebx
  41f054:	jo     0x41f092
  41f056:	mov    eax,0x7f65e3a5
  41f05b:	hlt    
  41f05c:	add    eax,0x65537124
  41f061:	mov    al,ds:0x6f8039ab
  41f066:	cmp    DWORD PTR [esi+edi*8-0x67c2ec21],ebp
  41f06d:	fisub  DWORD PTR [eax+0xc68a961]
  41f073:	retf   
  41f074:	(bad)  
  41f075:	outs   dx,DWORD PTR ds:[esi]
  41f076:	cmp    dh,BYTE PTR [esp+eiz*4]
  41f079:	add    al,0xbc
  41f07b:	add    al,0x1b
  41f07d:	mov    esp,0x19020f06
  41f082:	imul   ecx,DWORD PTR [ecx+0x2533ea0b],0x4bd00bde
  41f08c:	adc    al,0x98
  41f08e:	test   al,0x39
  41f090:	rcr    ch,0x40
  41f093:	retf   
  41f094:	dec    esp
  41f095:	inc    edi
  41f096:	push   DWORD PTR [edi-0x51da4c8d]
  41f09c:	mov    ah,0xe4
  41f09e:	retf   0xdc47
  41f0a1:	inc    eax
  41f0a2:	(bad)  
  41f0a3:	bound  esp,QWORD PTR [ebp-0x7]
  41f0a6:	fdiv   QWORD PTR [edi+0x1e015339]
  41f0ac:	jl     0x41f0ee
  41f0ae:	in     eax,dx
  41f0af:	xlat   BYTE PTR ds:[ebx]
  41f0b0:	popf   
  41f0b1:	push   ss
  41f0b2:	jo     0x41f12c
  41f0b4:	push   ds
  41f0b5:	int    0xf6
  41f0b7:	sbb    edx,edi
  41f0b9:	cld    
  41f0ba:	and    BYTE PTR [eax],cl
  41f0bc:	cdq    
  41f0bd:	mov    es,WORD PTR [ebx+edi*1-0x54]
  41f0c1:	into   
  41f0c2:	inc    esp
  41f0c3:	and    eax,0xf98a8371
  41f0c8:	push   cs
  41f0c9:	into   
  41f0ca:	int    0x35
  41f0cc:	push   0x875693bc
  41f0d1:	(bad)  
  41f0d2:	jle    0x41f12a
  41f0d4:	or     DWORD PTR [edi+0xa5d0a1e],esi
  41f0da:	ret    
  41f0db:	mov    eax,DWORD PTR [ecx]
  41f0dd:	cmp    esi,0xfffffffa
  41f0e0:	addr16 cdq 
  41f0e2:	pop    ebp
  41f0e3:	xchg   esi,eax
  41f0e4:	shl    BYTE PTR [eax+0x2b],1
  41f0e7:	push   DWORD PTR [edx-0x6871882c]
  41f0ed:	sbb    edi,DWORD PTR [ebx+0x65]
  41f0f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f0f1:	mov    esp,0x1d193fce
  41f0f6:	mov    edx,0x60c609c9
  41f0fb:	dec    ebp
  41f0fc:	je     0x41f0ab
  41f0fe:	je     0x41f0d7
  41f100:	pop    esp
  41f101:	(bad)  
  41f102:	fisttp QWORD PTR [edx+ecx*2-0x2b]
  41f106:	jnp    0x41f0b1
  41f108:	xlat   BYTE PTR ds:[ebx]
  41f109:	mov    edx,0x775a630a
  41f10e:	jmp    0x41f0dc
  41f110:	pop    ebx
  41f111:	sub    al,0x7f
  41f113:	xor    al,0x3f
  41f115:	(bad)  
  41f116:	mov    cl,0x97
  41f118:	cmp    al,0xa1
  41f11a:	inc    edi
  41f11b:	sub    ebp,ebp
  41f11d:	inc    esp
  41f11e:	lods   eax,DWORD PTR ds:[esi]
  41f11f:	mov    fs,WORD PTR [esi+0x4f]
  41f122:	leave  
  41f123:	hlt    
  41f124:	xor    DWORD PTR [edx-0x39a0f3d0],esi
  41f12a:	or     cl,BYTE PTR [esi-0x56d993a5]
  41f130:	sub    DWORD PTR [edi+0x15],0x5290b892
  41f137:	mov    eax,ds:0x7a94e95c
  41f13c:	inc    eax
  41f13d:	mov    esi,0xfd73edd1
  41f142:	mov    ds:0x87e7b38b,eax
  41f147:	ins    DWORD PTR es:[edi],dx
  41f148:	mov    cl,0xfc
  41f14a:	retf   0xa8be
  41f14d:	sub    ah,dh
  41f14f:	xor    al,0xe3
  41f151:	popf   
  41f152:	mov    ecx,0xc3f240c7
  41f157:	mov    dh,BYTE PTR [eax-0x6d]
  41f15a:	sbb    eax,ecx
  41f15c:	iret   
  41f15d:	jmp    0xc2fa:0x2deede03
  41f164:	dec    eax
  41f165:	or     al,0x8
  41f167:	cmp    al,0xe
  41f169:	aas    
  41f16a:	add    BYTE PTR [ecx+eax*2],bh
  41f16d:	inc    ebx
  41f16e:	lods   al,BYTE PTR fs:[esi]
  41f170:	add    DWORD PTR [ebp+edx*4+0x43],ecx
  41f174:	jns    0x41f124
  41f176:	call   0xeb1c:0x8bde9b6a
  41f17d:	mov    ebp,0x2c96af7b
  41f182:	cmc    
  41f183:	ins    BYTE PTR es:[edi],dx
  41f184:	xchg   esi,eax
  41f185:	imul   esp,edx,0x3cc4e160
  41f18b:	mov    BYTE PTR [esi-0x8],cl
  41f18e:	icebp  
  41f18f:	in     eax,dx
  41f190:	enter  0xd396,0x6d
  41f194:	dec    ebx
  41f195:	and    eax,0xf6a2431c
  41f19a:	pop    ebp
  41f19b:	inc    edi
  41f19c:	dec    esi
  41f19d:	out    0x39,al
  41f19f:	and    DWORD PTR [esi],ecx
  41f1a1:	gs xchg edi,eax
  41f1a3:	clc    
  41f1a4:	jbe    0x41f147
  41f1a6:	fisub  WORD PTR ds:0x67f1bc4e
  41f1ac:	pop    edi
  41f1ad:	call   DWORD PTR ds:0xac7fcac9
  41f1b3:	es lock add edx,ecx
  41f1b7:	leave  
  41f1b8:	pusha  
  41f1b9:	shr    BYTE PTR [ecx-0x72],0x83
  41f1bd:	jno    0x41f198
  41f1bf:	ret    
  41f1c0:	or     cl,ch
  41f1c2:	dec    ebp
  41f1c3:	inc    edx
  41f1c4:	fwait
  41f1c5:	mov    dl,0xae
  41f1c7:	xchg   esp,eax
  41f1c8:	add    eax,0xecb1fda2
  41f1cd:	leave  
  41f1ce:	push   esi
  41f1cf:	test   ch,ah
  41f1d1:	jnp    0x41f1d0
  41f1d3:	jmp    0x41f1eb
  41f1d5:	in     al,0xf1
  41f1d7:	cs cdq 
  41f1d9:	cmp    eax,0x7d50e10f
  41f1de:	fsub   QWORD PTR [edx]
  41f1e0:	mov    DWORD PTR [edx-0x5c],edi
  41f1e3:	add    eax,0xfe067013
  41f1e8:	jae    0x41f25e
  41f1ea:	rcr    dl,cl
  41f1ec:	int    0xcf
  41f1ee:	aaa    
  41f1ef:	add    cl,dh
  41f1f1:	adc    esp,DWORD PTR [edi*8+0x28cca2b0]
  41f1f8:	cmp    dh,BYTE PTR ds:0xfba618e4
  41f1fe:	sbb    al,0x56
  41f200:	jg     0x41f1d5
  41f202:	sahf   
  41f203:	or     dh,BYTE PTR [ebx-0x1]
  41f206:	f2xm1  
  41f208:	mov    al,0xcb
  41f20a:	ss cld 
  41f20c:	out    dx,eax
  41f20d:	mov    eax,cs
  41f20f:	ret    
  41f210:	and    cl,BYTE PTR [esi]
  41f212:	sti    
  41f213:	loopne 0x41f271
  41f215:	aaa    
  41f216:	in     al,dx
  41f217:	ret    
  41f218:	mov    WORD PTR [edx-0x6844b98f],gs
  41f21e:	daa    
  41f21f:	je     0x41f1e8
  41f221:	mov    edi,esi
  41f223:	or     ebp,DWORD PTR [edi+edx*8]
  41f226:	gs loopne 0x41f1e4
  41f229:	add    DWORD PTR [edx-0x36],esp
  41f22c:	stc    
  41f22d:	mov    bl,0x7d
  41f22f:	xchg   ebp,eax
  41f230:	inc    ebx
  41f231:	xor    dl,0x4d
  41f234:	and    al,0x95
  41f236:	xchg   edi,eax
  41f237:	pusha  
  41f238:	out    0xea,al
  41f23a:	mov    eax,0x3314c64c
  41f23f:	cdq    
  41f240:	mov    eax,0xa4a2f639
  41f245:	jle    0x41f2b8
  41f247:	fnclex 
  41f249:	push   cs
  41f24a:	inc    edx
  41f24b:	cmp    DWORD PTR [ebx-0x49],ebp
  41f24e:	push   ss
  41f24f:	pop    ebx
  41f250:	mov    ebp,0x2ddb9dc2
  41f255:	mov    eax,ds:0x6d8050f6
  41f25a:	or     ebp,DWORD PTR [eax]
  41f25c:	dec    eax
  41f25d:	sub    ch,BYTE PTR [ebx]
  41f25f:	pop    esi
  41f260:	and    al,0xde
  41f262:	mov    ah,0x94
  41f264:	loop   0x41f249
  41f266:	dec    esp
  41f267:	xlat   BYTE PTR ds:[ebx]
  41f268:	pushf  
  41f269:	call   0xab24:0x38b2a1
  41f270:	or     al,0xe
  41f272:	sbb    DWORD PTR [esi-0x1329bce3],esi
  41f278:	mov    dh,0x84
  41f27a:	into   
  41f27b:	push   ecx
  41f27c:	cmp    DWORD PTR [edx+0x30],edx
  41f27f:	mov    WORD PTR [edi-0x13],fs
  41f282:	mov    ch,0x43
  41f284:	pop    es
  41f285:	mov    ch,0xa7
  41f287:	cmp    al,al
  41f289:	stos   BYTE PTR es:[edi],al
  41f28a:	push   ds
  41f28b:	loopne 0x41f2dd
  41f28d:	mov    esi,0xc6042ca2
  41f292:	mov    edi,0x3945a6d0
  41f297:	mov    esp,?
  41f299:	popf   
  41f29a:	loop   0x41f22e
  41f29c:	or     DWORD PTR [ebx+0x7e],edx
  41f29f:	push   0x5ceea62d
  41f2a4:	mov    dh,0xee
  41f2a6:	mov    dl,0x14
  41f2a8:	ss jmp 0x41f314
  41f2ab:	int    0xf2
  41f2ad:	push   edx
  41f2ae:	jle    0x41f2dc
  41f2b0:	pop    ss
  41f2b1:	push   cs
  41f2b2:	sub    al,0x60
  41f2b4:	jl     0x41f2ce
  41f2b6:	mov    ebx,0x552ab874
  41f2bb:	sbb    al,0x9c
  41f2bd:	and    DWORD PTR [eax-0x59636174],0xffffff91
  41f2c4:	(bad)  
  41f2c5:	fisttp QWORD PTR [eax-0x47]
  41f2c8:	cmp    DWORD PTR [edx-0x29],0xf
  41f2cc:	mov    esp,0x811f18c5
  41f2d1:	push   ebp
  41f2d2:	xchg   DWORD PTR [esp+eax*2+0x69],esp
  41f2d6:	(bad)  
  41f2d8:	sbb    ebx,eax
  41f2da:	push   eax
  41f2db:	(bad)  
  41f2dc:	pop    esi
  41f2dd:	scas   al,BYTE PTR es:[edi]
  41f2de:	add    eax,0x6f2f8cd9
  41f2e3:	je     0x41f323
  41f2e5:	dec    ecx
  41f2e6:	pop    esp
  41f2e7:	adc    eax,0x8201f8fe
  41f2ec:	sbb    esi,DWORD PTR [ebx+0x6c220545]
  41f2f2:	sub    edx,DWORD PTR [edi-0x6b20f0be]
  41f2f8:	xchg   edx,eax
  41f2f9:	imul   BYTE PTR [esi]
  41f2fb:	lods   al,BYTE PTR ds:[esi]
  41f2fc:	retf   
  41f2fd:	shl    BYTE PTR [ecx],0xbb
  41f300:	not    DWORD PTR [edx-0x71a48a3c]
  41f306:	mov    dl,0xef
  41f308:	in     al,0xe
  41f30a:	mov    BYTE PTR [esi-0x46],ah
  41f30d:	add    al,0xa1
  41f30f:	pusha  
  41f310:	mov    ds:0x169f44d8,al
  41f315:	inc    ebp
  41f316:	cld    
  41f317:	(bad)  
  41f318:	das    
  41f319:	test   DWORD PTR [ebp-0x3b15a0ad],ebp
  41f31f:	ss inc edx
  41f321:	mov    ebx,0xbe948fdb
  41f326:	or     cl,al
  41f328:	jbe    0x41f2c7
  41f32a:	dec    ecx
  41f32b:	mov    bl,0x13
  41f32d:	lods   eax,DWORD PTR ds:[esi]
  41f32e:	xchg   esi,eax
  41f32f:	fld    QWORD PTR [esi-0x21c7d434]
  41f335:	mov    dl,0x13
  41f337:	mov    ecx,0x61b118ad
  41f33c:	sub    BYTE PTR [eax+0x5b],0xd3
  41f340:	push   esp
  41f341:	sbb    DWORD PTR [ebx],esi
  41f343:	inc    ebp
  41f344:	das    
  41f345:	es jg  0x41f2fc
  41f348:	add    al,0x45
  41f34b:	jae    0x41f3be
  41f34d:	test   DWORD PTR [edx*4+0x40db0d31],edi
  41f354:	sub    al,0xcb
  41f356:	mov    ebp,0x9c2ed557
  41f35b:	in     eax,dx
  41f35c:	fnstsw WORD PTR [ebp-0x444fae63]
  41f362:	adc    DWORD PTR [edx],esi
  41f364:	pushf  
  41f365:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f366:	sahf   
  41f367:	jnp    0x41f306
  41f369:	or     eax,0x2b001b1
  41f36e:	pop    esi
  41f36f:	ret    
  41f370:	popf   
  41f371:	mov    bh,BYTE PTR [ebx-0x17548ae9]
  41f377:	imul   ebx,DWORD PTR [eax],0xffffff90
  41f37a:	or     DWORD PTR [edi+ebp*1+0x4946b318],ecx
  41f381:	mov    ds:0x1c8bee06,al
  41f386:	sub    ecx,0x389558e6
  41f38c:	push   ebx
  41f38d:	fbld   TBYTE PTR [edi+0x7d]
  41f390:	fcomp  QWORD PTR [ecx-0x1d]
  41f393:	retf   0x71ee
  41f396:	pop    esi
  41f397:	ror    BYTE PTR [eax+0x51],cl
  41f39a:	xor    esi,DWORD PTR fs:[ecx]
  41f39d:	jle    0x41f368
  41f39f:	pop    ebp
  41f3a0:	xlat   BYTE PTR ds:[ebx]
  41f3a1:	outs   dx,BYTE PTR ds:[esi]
  41f3a2:	xor    BYTE PTR [edi],0xad
  41f3a5:	dec    eax
  41f3a6:	xor    dl,al
  41f3a8:	pop    ds
  41f3a9:	mov    bh,0x6f
  41f3ab:	aam    0x13
  41f3ad:	rcr    DWORD PTR [ebp-0x28],cl
  41f3b0:	sbb    esi,DWORD PTR [edi+0x3e]
  41f3b3:	cmp    dl,BYTE PTR ss:[edi-0x63f7695a]
  41f3ba:	in     eax,dx
  41f3bb:	or     BYTE PTR [eax],dh
  41f3bd:	pop    edi
  41f3be:	(bad)  
  41f3bf:	cmp    ah,BYTE PTR [eax+0x75]
  41f3c2:	aad    0x26
  41f3c4:	jge    0x41f3ac
  41f3c6:	cmp    al,0x15
  41f3c8:	xor    eax,0xf9d96379
  41f3cd:	jmp    0xc0681b7b
  41f3d2:	jmp    0x41f3a5
  41f3d4:	scas   al,BYTE PTR es:[edi]
  41f3d5:	dec    esp
  41f3d6:	jmp    0x87d27456
  41f3db:	sbb    al,0x0
  41f3dd:	aam    0x6e
  41f3df:	mov    bl,0xca
  41f3e1:	push   ebx
  41f3e2:	add    DWORD PTR [edx-0x54],ebp
  41f3e5:	inc    ebp
  41f3e6:	sbb    ebp,DWORD PTR [ecx+edi*8]
  41f3e9:	push   es
  41f3ea:	in     al,dx
  41f3eb:	sub    eax,0x69443a0e
  41f3f0:	mov    ?,edx
  41f3f2:	mov    ecx,ebx
  41f3f4:	or     bl,bl
  41f3f6:	ds xor eax,0xe900e7e5
  41f3fc:	xor    eax,0x13898f15
  41f401:	xor    esp,DWORD PTR [ecx-0x2d477849]
  41f407:	sbb    bl,al
  41f409:	cwde   
  41f40a:	jb     0x41f436
  41f40c:	dec    esi
  41f40d:	adc    esi,DWORD PTR [eax]
  41f40f:	outs   dx,DWORD PTR ds:[esi]
  41f410:	xor    eax,0x85b20895
  41f415:	shr    BYTE PTR [edx+0x305144fb],0x6a
  41f41c:	stos   BYTE PTR es:[edi],al
  41f41d:	or     DWORD PTR [ecx-0x36],esp
  41f420:	or     DWORD PTR [eax+0x36],esi
  41f423:	jmp    0xde0a:0x2b35c291
  41f42a:	jne    0x41f3e2
  41f42c:	mov    ecx,0xcfdd4ce8
  41f431:	js     0x41f43a
  41f433:	adc    BYTE PTR [ecx],ch
  41f435:	int3   
  41f436:	lahf   
  41f437:	xchg   BYTE PTR [edi-0x1c],bl
  41f43a:	pop    ds
  41f43b:	mov    DWORD PTR [edi+0x6909ce1],esp
  41f441:	addr16 (bad) 
  41f443:	pusha  
  41f444:	sbb    al,0x4b
  41f446:	retf   
  41f447:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f448:	inc    ebx
  41f449:	addr16 retf 0x7787
  41f44d:	mov    ch,0xcc
  41f44f:	mov    edx,0x96a09ffb
  41f454:	loopne 0x41f445
  41f456:	mov    ebx,0xb53d5801
  41f45b:	xor    edi,DWORD PTR [eax-0x613c9edb]
  41f461:	pop    esp
  41f462:	xor    DWORD PTR [ebx+0x7c9d4665],0x76
  41f469:	mov    ecx,0x6a7a6d8
  41f46e:	jmp    0x41f4af
  41f470:	sbb    dh,BYTE PTR [ecx+0x5f]
  41f473:	fst    DWORD PTR [ecx+0x2958d184]
  41f479:	mov    ds:0xe5dbf0f0,eax
  41f47e:	dec    esi
  41f47f:	or     DWORD PTR [esi+eiz*2-0x72501445],esi
  41f486:	pop    ebp
  41f487:	inc    edx
  41f488:	in     al,dx
  41f489:	mov    ebp,0xaeab08bb
  41f48e:	mov    esi,0x74623e0f
  41f493:	stos   DWORD PTR es:[edi],eax
  41f494:	inc    ebx
  41f495:	pop    ds
  41f496:	repz mov eax,ds:0x2e808f0b
  41f49c:	xchg   ebp,eax
  41f49d:	push   edx
  41f49e:	mov    esi,0xa02e049b
  41f4a3:	xor    BYTE PTR [eax],0xfe
  41f4a6:	pop    eax
  41f4a7:	pop    esp
  41f4a8:	pop    ss
  41f4a9:	icebp  
  41f4aa:	pop    edx
  41f4ab:	inc    ecx
  41f4ac:	cs leave 
  41f4ae:	arpl   bp,bx
  41f4b0:	das    
  41f4b1:	jl     0x41f4db
  41f4b3:	jb     0x41f469
  41f4b5:	mov    ds:0xe796f54a,al
  41f4ba:	push   eax
  41f4bb:	or     DWORD PTR [edi-0x36],esi
  41f4be:	sbb    al,dh
  41f4c0:	sub    al,0x3b
  41f4c2:	shl    BYTE PTR [edx*4+0x4bcc718b],1
  41f4c9:	and    al,0xaa
  41f4cb:	(bad)  
  41f4cd:	and    DWORD PTR [esi-0x9],esi
  41f4d0:	sti    
  41f4d1:	push   eax
  41f4d2:	or     al,BYTE PTR [ecx+0x35e261f0]
  41f4d8:	push   ecx
  41f4d9:	sub    al,ah
  41f4db:	sahf   
  41f4dc:	fcmovu st,st(4)
  41f4de:	cmp    esi,edx
  41f4e0:	addr16 and eax,0xba8c29f6
  41f4e6:	sub    eax,0x60e8576e
  41f4eb:	ins    BYTE PTR es:[edi],dx
  41f4ec:	ja     0x41f49d
  41f4ee:	push   ds
  41f4ef:	xchg   BYTE PTR [eax+0x5f],dl
  41f4f2:	sbb    al,0x3a
  41f4f4:	retf   
  41f4f5:	stc    
  41f4f6:	push   esp
  41f4f7:	xchg   edx,eax
  41f4f8:	iret   
  41f4f9:	xlat   BYTE PTR ds:[ebx]
  41f4fa:	ins    DWORD PTR es:[edi],dx
  41f4fb:	outs   dx,DWORD PTR ds:[esi]
  41f4fc:	cmp    al,0x4f
  41f4fe:	push   es
  41f4ff:	dec    edi
  41f500:	(bad)  ds:0xc77bbe07
  41f506:	mov    bl,0x5
  41f508:	jne    0x41f548
  41f50a:	and    dl,BYTE PTR [ebp-0x72]
  41f50d:	jne    0x41f490
  41f50f:	pop    ecx
  41f510:	adc    DWORD PTR [eax+edi*2+0xd],esp
  41f514:	shr    bl,0xdd
  41f517:	(bad)  
  41f519:	sub    edx,0x7c
  41f51c:	imul   DWORD PTR [ecx+eiz*4-0x7e]
  41f520:	sbb    DWORD PTR [edi+0x46],eax
  41f523:	das    
  41f524:	jmp    0x41f528
  41f526:	retf   0xded2
  41f529:	out    dx,eax
  41f52a:	sar    BYTE PTR [esi+0x7f],1
  41f52d:	xor    bh,BYTE PTR [edi+0x59]
  41f530:	mov    ch,cl
  41f532:	or     ebx,DWORD PTR [eax]
  41f534:	sub    ebx,0x21
  41f537:	arpl   WORD PTR [eax],dx
  41f539:	test   DWORD PTR [ebx],0x16a34a4
  41f53f:	mov    ebp,0x6ac78c81
  41f544:	mov    ah,0xc7
  41f546:	xchg   edx,eax
  41f547:	outs   dx,DWORD PTR ds:[esi]
  41f548:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f549:	aaa    
  41f54a:	mov    al,0xe5
  41f54c:	or     ebx,DWORD PTR [ebx-0x3a3831a5]
  41f552:	call   0xa94f37f4
  41f557:	xor    edi,edx
  41f559:	cmp    BYTE PTR [ecx],0x9f
  41f55c:	ins    BYTE PTR es:[edi],dx
  41f55d:	call   0x9b7caae3
  41f562:	xchg   ebp,eax
  41f563:	std    
  41f564:	push   ecx
  41f565:	fs ffree st(2)
  41f568:	je     0x41f55a
  41f56a:	sub    eax,0xdf7ea9bd
  41f56f:	(bad)  
  41f571:	add    edi,DWORD PTR [eax]
  41f573:	xlat   BYTE PTR ds:[ebx]
  41f574:	mov    ah,0x3e
  41f576:	add    al,BYTE PTR [ebp+0x2d]
  41f579:	pop    ecx
  41f57a:	mov    ebx,0x9b5a3755
  41f57f:	es inc ecx
  41f581:	push   ss
  41f582:	push   eax
  41f583:	push   edx
  41f584:	aas    
  41f585:	push   edi
  41f586:	mov    ebx,0xff57e2
  41f58b:	dec    ebx
  41f58c:	loop   0x41f531
  41f58e:	lds    ebp,FWORD PTR [eax]
  41f590:	jle    0x41f5d8
  41f592:	lods   al,BYTE PTR ds:[esi]
  41f593:	cdq    
  41f594:	dec    ebp
  41f595:	cmp    BYTE PTR [esi],0xbd
  41f598:	sub    al,BYTE PTR [ebx]
  41f59a:	push   ebp
  41f59b:	retf   
  41f59c:	push   eax
  41f59d:	jg     0x41f543
  41f59f:	mov    ecx,0xf20a7504
  41f5a4:	or     dl,BYTE PTR [ebp+0x67]
  41f5a7:	and    al,0x20
  41f5a9:	adc    cl,BYTE PTR [eax*1-0xe8d2eb5]
  41f5b0:	push   es
  41f5b1:	add    ah,BYTE PTR [edi]
  41f5b3:	jmp    0x41f553
  41f5b5:	fldenv [ecx]
  41f5b7:	mov    edx,0x597cdee6
  41f5bc:	test   BYTE PTR [eax+ebp*4-0x10],dh
  41f5c0:	inc    edi
  41f5c1:	(bad)  
  41f5c2:	mov    esi,0x425dad3d
  41f5c7:	sub    DWORD PTR [edi-0x6e83d214],ecx
  41f5cd:	lock lods al,BYTE PTR ds:[esi]
  41f5cf:	in     al,0x4a
  41f5d1:	xor    DWORD PTR [esi+0x6c],esp
  41f5d4:	jmp    0x659c3d24
  41f5d9:	xlat   BYTE PTR ds:[ebx]
  41f5da:	push   cs
  41f5db:	test   al,0x9f
  41f5dd:	mov    cl,0x19
  41f5df:	push   ss
  41f5e0:	aam    0xf
  41f5e2:	adc    BYTE PTR [edx],ah
  41f5e4:	ss adc eax,0x5d0b6ab0
  41f5ea:	stos   DWORD PTR es:[edi],eax
  41f5eb:	scas   eax,DWORD PTR es:[edi]
  41f5ec:	aad    0xd2
  41f5ee:	pop    esi
  41f5ef:	aaa    
  41f5f0:	and    BYTE PTR [ecx+0xc],0x4
  41f5f4:	push   cs
  41f5f5:	cmp    al,0x40
  41f5f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f5f8:	push   esp
  41f5f9:	shr    BYTE PTR [edx],0x44
  41f5fc:	mov    ebp,0x1291b5ef
  41f601:	dec    edx
  41f602:	pop    ecx
  41f603:	mov    WORD PTR [esi+0x0],?
  41f606:	and    DWORD PTR [edi-0x66],ebx
  41f609:	mov    ch,0xd4
  41f60b:	mov    eax,0x8d7094ff
  41f610:	fdivr  DWORD PTR [ecx]
  41f612:	xor    eax,DWORD PTR [esi+ecx*8+0x5b6ab1f2]
  41f619:	pop    ss
  41f61a:	sub    eax,0x57bbfdea
  41f61f:	shr    DWORD PTR [ebx-0x7e6c8d1],1
  41f625:	into   
  41f626:	mov    cl,0x83
  41f628:	jne    0x41f68b
  41f62a:	stos   BYTE PTR es:[edi],al
  41f62b:	push   cs
  41f62c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f62d:	gs dec esp
  41f62f:	out    dx,eax
  41f630:	jb     0x41f694
  41f632:	xor    eax,0xbb66c374
  41f637:	inc    ecx
  41f638:	dec    esi
  41f639:	sbb    BYTE PTR [esp+edx*2],0x7
  41f63d:	pop    esi
  41f63e:	(bad)  
  41f63f:	fisttp WORD PTR ds:0xeb5a1422
  41f645:	fldenv [edi]
  41f647:	jns    0x41f5df
  41f649:	outs   dx,BYTE PTR ds:[esi]
  41f64a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f64b:	into   
  41f64c:	dec    ebx
  41f64d:	dec    edx
  41f64e:	enter  0x8cd,0xeb
  41f652:	nop
  41f653:	cmp    al,BYTE PTR [ebp+0x3b6d981c]
  41f659:	ins    DWORD PTR es:[edi],dx
  41f65a:	cmp    ebp,DWORD PTR [edx+ebp*8]
  41f65d:	imul   ecx,DWORD PTR [eax+eiz*4+0x7d04dd2f],0x305aed85
  41f668:	stos   BYTE PTR es:[edi],al
  41f669:	pushf  
  41f66a:	xchg   dl,dh
  41f66c:	in     al,dx
  41f66d:	pop    ds
  41f66e:	mov    BYTE PTR [eax],cl
  41f670:	jb     0x41f600
  41f672:	in     al,0xb2
  41f674:	pusha  
  41f675:	xor    BYTE PTR [esi],dl
  41f677:	mov    bh,BYTE PTR [eax-0x4d633dba]
  41f67d:	fldcw  WORD PTR [eax+ecx*1-0x10]
  41f681:	neg    edi
  41f683:	mov    edi,0xc22708d8
  41f688:	daa    
  41f689:	inc    esp
  41f68a:	dec    ecx
  41f68b:	out    dx,al
  41f68c:	and    ebp,DWORD PTR [esi+0x3f]
  41f68f:	ficomp WORD PTR [edx+0x46b6c8fe]
  41f695:	push   0x32202972
  41f69a:	cdq    
  41f69b:	out    dx,eax
  41f69c:	sub    eax,0x978c5aa0
  41f6a1:	or     edi,DWORD PTR [ebp+0x6b46a2e]
  41f6a7:	or     ch,BYTE PTR [edi]
  41f6a9:	push   es
  41f6aa:	xor    DWORD PTR [ecx],eax
  41f6ac:	xor    eax,0x7740ff79
  41f6b1:	ret    
  41f6b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6b3:	dec    edi
  41f6b4:	rcr    BYTE PTR [ebp-0x2],0x4b
  41f6b8:	cmp    DWORD PTR [edi],edi
  41f6ba:	jmp    0xdc8c:0x1ac05d65
  41f6c1:	push   edi
  41f6c2:	cli    
  41f6c3:	cmp    BYTE PTR ds:0x353900e3,dh
  41f6c9:	pop    eax
  41f6ca:	mov    esp,0x382cfd8a
  41f6cf:	pop    ecx
  41f6d0:	and    al,0xf0
  41f6d2:	fdivr  QWORD PTR [edi+0x7c]
  41f6d6:	jg     0x41f6b0
  41f6d8:	adc    al,0x11
  41f6da:	inc    esi
  41f6db:	sub    BYTE PTR [ebx+0x68],0x59
  41f6df:	push   edi
  41f6e0:	dec    ebx
  41f6e1:	inc    ebx
  41f6e2:	or     DWORD PTR ds:0x76542594,esp
  41f6e8:	int3   
  41f6e9:	mov    al,0x23
  41f6eb:	(bad)  
  41f6ec:	xchg   edx,eax
  41f6ed:	enter  0x3993,0x2b
  41f6f1:	repnz mov cl,BYTE PTR [ebx+0x3f]
  41f6f5:	test   BYTE PTR [edi+0x5b4178e],dl
  41f6fb:	jb     0x41f720
  41f6fd:	jb     0x41f756
  41f6ff:	aas    
  41f700:	mov    ecx,ecx
  41f702:	out    0xad,eax
  41f704:	sbb    ebx,edi
  41f706:	pop    ebp
  41f707:	retf   
  41f708:	mov    ebx,DWORD PTR [ecx+esi*4-0x1b]
  41f70c:	and    al,0xa7
  41f70f:	mov    edx,0x76a86b2
  41f714:	sub    edx,DWORD PTR [ecx]
  41f716:	test   BYTE PTR [ecx+0x1d],dh
  41f719:	mov    esi,0x9790561c
  41f71e:	push   ds
  41f71f:	js     0x41f79c
  41f721:	into   
  41f722:	mov    al,0x6
  41f724:	xor    al,0x32
  41f726:	push   cs
  41f727:	imul   eax,edx,0xffffffb4
  41f72a:	add    BYTE PTR [esi+0x72],ah
  41f72d:	or     al,0xd5
  41f72f:	jmp    0x9ab6:0x89746a54
  41f736:	enter  0xdb29,0xf3
  41f73a:	mov    DWORD PTR [esi+0x17],esi
  41f73d:	scas   al,BYTE PTR es:[edi]
  41f73e:	adc    al,0x2f
  41f740:	in     al,dx
  41f741:	dec    esi
  41f742:	pop    ds
  41f743:	js     0x41f763
  41f745:	das    
  41f746:	jns    0x41f7a5
  41f748:	xchg   edi,eax
  41f749:	shl    BYTE PTR [eax],1
  41f74b:	call   0x711d:0x483601bf
  41f752:	xchg   esp,eax
  41f753:	(bad)  
  41f754:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f755:	ins    DWORD PTR es:[edi],dx
  41f756:	or     edx,edx
  41f758:	pop    ecx
  41f759:	sub    BYTE PTR [ebp+0x2c],dh
  41f75c:	icebp  
  41f75d:	and    eax,0xbd7621eb
  41f762:	lods   eax,DWORD PTR ds:[esi]
  41f763:	xchg   esi,eax
  41f764:	xor    BYTE PTR [ebp-0x48],al
  41f767:	in     eax,dx
  41f768:	aad    0x31
  41f76a:	outs   dx,BYTE PTR ds:[esi]
  41f76b:	fcompp 
  41f76e:	bound  ebp,QWORD PTR [esi-0xb615da6]
  41f774:	and    DWORD PTR [edx+0x325cd6ca],eax
  41f77a:	addr16 ja 0x41f746
  41f77d:	cmp    al,0x93
  41f77f:	pusha  
  41f780:	xor    eax,0xba8f2b70
  41f785:	(bad)  
  41f786:	add    eax,0x500fb06b
  41f78b:	push   edx
  41f78c:	sub    dl,dl
  41f78e:	inc    eax
  41f78f:	lea    edx,[ebp-0x69bb3493]
  41f795:	popf   
  41f796:	ins    BYTE PTR es:[edi],dx
  41f797:	mov    ?,WORD PTR [edi-0x1]
  41f79a:	jle    0x41f7c9
  41f79c:	ss jp  0x41f790
  41f79f:	outs   dx,BYTE PTR ds:[esi]
  41f7a0:	push   esp
  41f7a1:	sbb    al,0x12
  41f7a3:	mov    cl,0xe2
  41f7a5:	or     DWORD PTR [ecx+0x6fe390fa],edi
  41f7ab:	jb     0x41f777
  41f7ad:	and    al,0xe2
  41f7af:	xor    BYTE PTR [esi],0x55
  41f7b2:	xchg   ebx,eax
  41f7b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f7b4:	pop    ebx
  41f7b5:	mov    ah,0x60
  41f7b7:	mov    dh,0x23
  41f7b9:	out    0x64,al
  41f7bb:	into   
  41f7bc:	dec    edx
  41f7bd:	add    al,0x78
  41f7bf:	push   ebx
  41f7c0:	and    al,0x60
  41f7c2:	jmp    0xa208fd50
  41f7c7:	cmc    
  41f7c8:	jae    0x41f819
  41f7ca:	and    eax,esi
  41f7cc:	cmp    eax,DWORD PTR [edi-0x5726220c]
  41f7d2:	das    
  41f7d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f7d4:	bound  edx,QWORD PTR [eax+0x5c97b6e3]
  41f7da:	sub    eax,0xd02b42cb
  41f7df:	sub    DWORD PTR [eax+edi*8],ebx
  41f7e2:	(bad)  
  41f7e3:	sbb    esp,edx
  41f7e5:	jne    0x41f853
  41f7e7:	or     eax,DWORD PTR [ebp+0x66eea4a1]
  41f7ed:	pop    eax
  41f7ee:	jecxz  0x41f84d
  41f7f0:	pop    es
  41f7f1:	retf   0x7c6d
  41f7f4:	cs es push esp
  41f7f7:	mov    ds:0xfad55f26,eax
  41f7fc:	push   es
  41f7fd:	xchg   BYTE PTR [ebx-0x2676a0f8],ah
  41f803:	arpl   WORD PTR [ecx-0x72],cx
  41f806:	xor    al,0x1f
  41f808:	xchg   ecx,edi
  41f80a:	pop    esi
  41f80b:	jmp    0x569d:0xccdb0b0c
  41f812:	xchg   edx,eax
  41f813:	xor    eax,0xaa68bf00
  41f818:	fiadd  WORD PTR [ecx+ebp*2+0x36]
  41f81c:	jbe    0x41f801
  41f81e:	in     eax,0x6c
  41f820:	mov    ?,eax
  41f822:	ins    DWORD PTR es:[edi],dx
  41f823:	adc    BYTE PTR [edx],0xf
  41f826:	mov    ebp,0x573c4940
  41f82b:	and    BYTE PTR [edi+0x707a40d8],al
  41f831:	push   cs
  41f832:	add    al,0x4a
  41f834:	pop    edi
  41f835:	aaa    
  41f836:	fucom  st(7)
  41f838:	mov    al,ds:0x4162c25a
  41f83d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f83e:	dec    esp
  41f83f:	je     0x41f82b
  41f841:	xchg   edi,eax
  41f842:	push   ds
  41f843:	xor    DWORD PTR [ecx],edx
  41f845:	cwde   
  41f846:	sub    DWORD PTR [edi+0x1d],esi
  41f849:	fisub  WORD PTR [ebx-0x24]
  41f84c:	int3   
  41f84d:	add    eax,0x92e217ef
  41f852:	stos   BYTE PTR es:[edi],al
  41f853:	cmc    
  41f854:	icebp  
  41f855:	sbb    BYTE PTR [edx],al
  41f857:	jle    0x41f856
  41f859:	hlt    
  41f85a:	adc    BYTE PTR [esi],cl
  41f85c:	jle    0x41f8b5
  41f85e:	test   DWORD PTR [edi+0x20],ebp
  41f861:	popf   
  41f862:	pop    ebx
  41f863:	and    DWORD PTR [edi-0x68],ebp
  41f866:	inc    eax
  41f867:	repnz add al,0xd0
  41f86a:	or     BYTE PTR [eax-0x63a4daac],bl
  41f870:	push   es
  41f871:	xchg   ebx,eax
  41f872:	jno    0x41f8b3
  41f874:	xchg   edi,eax
  41f875:	sub    ebp,ebp
  41f877:	push   es
  41f878:	add    bl,ch
  41f87a:	hlt    
  41f87b:	es jb  0x41f82a
  41f87e:	cmp    DWORD PTR [esi+0x76e4c758],edi
  41f884:	jg     0x41f867
  41f886:	dec    esp
  41f887:	pushf  
  41f888:	ret    
  41f889:	leave  
  41f88a:	adc    BYTE PTR [esi],0x61
  41f88d:	inc    ebp
  41f88e:	les    ebx,FWORD PTR [ebx+0x74d21fc9]
  41f894:	mov    eax,0x4b8b615f
  41f899:	rcl    DWORD PTR [esi+0x25],1
  41f89c:	or     esp,DWORD PTR [edi-0x5d]
  41f89f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f8a0:	pop    ebx
  41f8a1:	add    edi,esi
  41f8a3:	leave  
  41f8a4:	imul   edx,DWORD PTR [edi],0xffffffc7
  41f8a7:	xchg   ecx,eax
  41f8a8:	mov    edx,0x6c4e850b
  41f8ad:	repz jmp 0x41f8df
  41f8b0:	and    DWORD PTR [ebx-0x521e35f2],esi
  41f8b6:	lahf   
  41f8b7:	mov    dl,0x2e
  41f8b9:	aaa    
  41f8ba:	mov    ebx,0x79779f57
  41f8bf:	repz add bh,BYTE PTR [ebp*1+0x26742405]
  41f8c7:	mov    ds:0xf9acecfd,al
  41f8cc:	ror    edx,0xb3
  41f8cf:	test   BYTE PTR [ebp-0x66],ch
  41f8d2:	in     al,0xa1
  41f8d4:	push   ss
  41f8d5:	sub    dl,BYTE PTR [esi-0xa]
  41f8d8:	nop
  41f8d9:	mov    edi,0x6b0a80c5
  41f8de:	cmp    BYTE PTR [ebx-0x54],0xf7
  41f8e2:	mov    cl,0x97
  41f8e4:	xor    DWORD PTR [eax],ecx
  41f8e6:	arpl   bx,sp
  41f8e8:	out    dx,eax
  41f8e9:	out    0xec,al
  41f8eb:	xlat   BYTE PTR ds:[ebx]
  41f8ec:	cli    
  41f8ed:	inc    BYTE PTR [ecx+0x7e7209c]
  41f8f3:	aad    0x73
  41f8f5:	cmp    edx,DWORD PTR [eax-0x7656a624]
  41f8fb:	sub    al,0xa2
  41f8fd:	push   edi
  41f8fe:	adc    eax,0xb60e46f1
  41f903:	je     0x41f8ee
  41f905:	lds    esi,FWORD PTR [ebp+edx*4-0x6c]
  41f909:	test   al,0xd8
  41f90b:	out    0x42,eax
  41f90d:	cli    
  41f90e:	jno    0x41f98f
  41f910:	ret    0xf71d
  41f913:	xchg   esp,eax
  41f914:	sub    cl,BYTE PTR [eax]
  41f916:	inc    ecx
  41f917:	lock or BYTE PTR [esi+0x6502849a],ah
  41f91e:	sbb    edi,DWORD PTR [edx-0x128fb6fc]
  41f924:	(bad)  [ecx+0x2f3e1902]
  41f92a:	test   eax,0x34f0b7f8
  41f92f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f930:	mov    dl,0x5d
  41f932:	jecxz  0x41f9aa
  41f934:	push   cs
  41f935:	jmp    0x346a:0x70d17db9
  41f93c:	add    eax,0xba0e9e3a
  41f941:	call   0x4f91e07b
  41f946:	arpl   WORD PTR ds:0x92b21fb5,cx
  41f94c:	retf   
  41f94d:	pop    ds
  41f94e:	fsubrp st(6),st
  41f950:	sub    dh,BYTE PTR [ecx-0x45d38c1]
  41f956:	fstp   DWORD PTR [edi+edi*8+0x7ad945a]
  41f95d:	sar    ecx,1
  41f95f:	lock inc ebp
  41f961:	scas   al,BYTE PTR es:[edi]
  41f962:	retf   
  41f963:	out    dx,eax
  41f964:	sbb    ebp,ebx
  41f966:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f967:	xor    al,0x75
  41f969:	cs ret 0x2992
  41f96d:	rcr    DWORD PTR [edx-0x34],1
  41f970:	xchg   BYTE PTR [edi+0x66d67845],ah
  41f976:	and    al,0x32
  41f978:	pop    edx
  41f979:	imul   eax,DWORD PTR [eax+eiz*8],0xabdb6c9c
  41f980:	pop    esi
  41f981:	xor    al,BYTE PTR ds:0x696feb3
  41f987:	pop    edi
  41f988:	xchg   ecx,eax
  41f989:	std    
  41f98a:	cdq    
  41f98b:	and    eax,0x27ea9280
  41f990:	popf   
  41f991:	and    al,0xc1
  41f993:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f994:	jmp    0x5c1bf331
  41f999:	mov    esp,ss
  41f99b:	popa   
  41f99c:	xchg   esi,eax
  41f99d:	faddp  st(5),st
  41f99f:	std    
  41f9a0:	out    0x77,al
  41f9a2:	out    0xde,eax
  41f9a4:	test   eax,0xf402d745
  41f9a9:	sbb    DWORD PTR [ecx-0x5e],esi
  41f9ac:	fdivp  st(5),st
  41f9ae:	dec    ebx
  41f9af:	std    
  41f9b0:	fwait
  41f9b1:	mov    ecx,edx
  41f9b3:	xchg   ecx,eax
  41f9b4:	jae    0x41f950
  41f9b6:	fsubr  QWORD PTR [edi+0x15]
  41f9b9:	or     al,0x1b
  41f9bb:	daa    
  41f9bc:	out    dx,eax
  41f9bd:	add    BYTE PTR [edi-0x3af7df17],al
  41f9c3:	jo     0x41f98a
  41f9c5:	cmp    al,0xdd
  41f9c7:	mov    al,0xbc
  41f9c9:	aad    0xff
  41f9cb:	mov    ah,0x19
  41f9cd:	cmp    al,0x7e
  41f9cf:	fbld   TBYTE PTR [edx+0x4d]
  41f9d2:	add    DWORD PTR [ebx+0x7d],ebp
  41f9d5:	daa    
  41f9d6:	lahf   
  41f9d7:	inc    esp
  41f9d8:	cmp    BYTE PTR [edi+ecx*4-0x76],bl
  41f9dc:	push   es
  41f9dd:	int    0x6a
  41f9df:	call   0x3d0c:0xe8f682d1
  41f9e6:	xchg   esi,eax
  41f9e7:	cli    
  41f9e8:	jmp    0x41f9da
  41f9ea:	xor    eax,DWORD PTR [ecx]
  41f9ec:	inc    eax
  41f9ed:	stc    
  41f9ee:	xor    eax,0xd2c3d159
  41f9f3:	adc    dh,BYTE PTR ss:[eax*2+0x32249dcd]
  41f9fb:	out    0x96,eax
  41f9fd:	js     0x41fa09
  41f9ff:	mov    edx,DWORD PTR [ebx]
  41fa01:	std    
  41fa02:	sub    BYTE PTR [eax+0x750890ae],ch
  41fa08:	adc    DWORD PTR [ebp-0x27],ebp
  41fa0b:	push   esp
  41fa0c:	dec    edx
  41fa0d:	sbb    al,0xc9
  41fa0f:	add    BYTE PTR [esi],bh
  41fa11:	cmp    ebx,DWORD PTR [ecx-0x4c121bfe]
  41fa17:	and    ebp,DWORD PTR [ebx]
  41fa19:	add    DWORD PTR [ebp-0x2c],0x1f24378b
  41fa20:	xchg   edi,eax
  41fa21:	(bad)  
  41fa22:	jnp    0x41fa70
  41fa24:	mov    ebp,0xaca55dc
  41fa29:	pop    esi
  41fa2a:	js     0x41fa34
  41fa2c:	and    cl,bh
  41fa2e:	and    BYTE PTR [edx],cl
  41fa30:	dec    ebp
  41fa31:	mov    al,0x54
  41fa33:	rcr    BYTE PTR [ebx-0x5959ec9a],0x43
  41fa3a:	bound  esp,QWORD PTR ds:0xcadd813f
  41fa40:	pop    es
  41fa41:	cld    
  41fa42:	fcom   QWORD PTR [eax-0x3]
  41fa45:	std    
  41fa46:	je     0x41fac0
  41fa48:	adc    BYTE PTR [eax],0x35
  41fa4b:	cli    
  41fa4c:	test   al,0x8e
  41fa4e:	xor    al,0x12
  41fa50:	mov    bh,0x50
  41fa52:	call   FWORD PTR [edi-0x73]
  41fa55:	mov    ds:0xe22c49bf,eax
  41fa5a:	mov    eax,ds:0x65a7e585
  41fa5f:	lods   al,BYTE PTR ds:[esi]
  41fa60:	xor    al,0xec
  41fa62:	pop    ds
  41fa63:	ja     0x41fa53
  41fa65:	jmp    0x60fb:0xfcedd162
  41fa6c:	inc    eax
  41fa6d:	pusha  
  41fa6e:	inc    eax
  41fa6f:	or     edi,DWORD PTR [ebx-0x7b62fa43]
  41fa75:	or     dl,BYTE PTR [ebx+0x59]
  41fa78:	push   edx
  41fa79:	adc    al,0xf5
  41fa7b:	push   ebx
  41fa7c:	pusha  
  41fa7d:	fisub  DWORD PTR [edi-0x48c09676]
  41fa83:	dec    ecx
  41fa84:	rcl    BYTE PTR [eax],cl
  41fa86:	push   esp
  41fa87:	lock pop ebp
  41fa89:	sub    al,0x4
  41fa8b:	sub    al,0xee
  41fa8d:	mov    al,ds:0xf87ee76b
  41fa92:	test   DWORD PTR ds:0xb806d015,0x84ef3989
  41fa9c:	mov    ds:0xffd05633,al
  41faa1:	jae    0x41fa2c
  41faa3:	sub    BYTE PTR [esi-0xf],bh
  41faa6:	cmp    al,dh
  41faa8:	and    eax,0xa929ab35
  41faad:	scas   al,BYTE PTR es:[edi]
  41faae:	(bad)  
  41faaf:	sub    eax,0x57ee458c
  41fab4:	mov    dl,0xbc
  41fab6:	test   al,0x4c
  41fab8:	sbb    al,0x18
  41faba:	cli    
  41fabb:	jae    0x41fa61
  41fabd:	ins    BYTE PTR es:[edi],dx
  41fabe:	fdivr  DWORD PTR [ebx]
  41fac0:	ds out dx,al
  41fac2:	imul   ecx,DWORD PTR [edi],0x9dffd212
  41fac8:	xchg   BYTE PTR [edi-0x2214d926],al
  41face:	ins    BYTE PTR es:[edi],dx
  41facf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fad0:	stc    
  41fad1:	mov    dl,0x93
  41fad3:	xor    eax,0xaab7c5e
  41fad8:	cmp    al,0x14
  41fada:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fadb:	into   
  41fadc:	sbb    eax,0xb008a7ff
  41fae1:	sub    ebp,DWORD PTR [eax]
  41fae3:	mov    ebx,0xb2293547
  41fae8:	cmp    bl,0x5a
  41faeb:	rol    BYTE PTR [ecx-0x2a0c05a1],0xb6
  41faf2:	(bad)  
  41faf3:	call   0x659c:0x7dec9fdd
  41fafa:	lahf   
  41fafb:	mov    ecx,0xa30f6fa3
  41fb00:	push   esp
  41fb01:	cdq    
  41fb02:	fisub  DWORD PTR fs:[esp+eax*4+0x41]
  41fb07:	rol    al,0x56
  41fb0a:	pop    es
  41fb0b:	and    cl,BYTE PTR [ebx]
  41fb0d:	aam    0xaf
  41fb0f:	lods   eax,DWORD PTR ds:[esi]
  41fb10:	mov    esi,0x8f9763ab
  41fb15:	sub    al,0x44
  41fb17:	adc    DWORD PTR [edx-0x56],ebx
  41fb1a:	into   
  41fb1b:	and    dh,BYTE PTR [eax-0x411586f4]
  41fb21:	adc    ebp,eax
  41fb23:	pop    ss
  41fb24:	dec    ecx
  41fb25:	fcmove st,st(4)
  41fb27:	pop    ds
  41fb28:	pop    esp
  41fb29:	aas    
  41fb2a:	mov    edi,0x1e7feb59
  41fb2f:	jmp    0x7bc9:0x78e29a10
  41fb36:	jnp    0x41fb12
  41fb38:	pop    es
  41fb39:	nop
  41fb3a:	ins    BYTE PTR es:[edi],dx
  41fb3b:	sbb    DWORD PTR [ecx+0x17],edx
  41fb3e:	test   al,0xca
  41fb40:	out    0x80,eax
  41fb42:	cli    
  41fb43:	jmp    0x31e4:0x79861fe5
  41fb4a:	sub    al,0x60
  41fb4c:	div    BYTE PTR [edx]
  41fb4e:	mov    bl,0xa6
  41fb50:	inc    edi
  41fb51:	rol    ecx,0xdc
  41fb54:	dec    DWORD PTR [edi-0x6b]
  41fb57:	xor    esp,DWORD PTR [ebx-0x7814fe7a]
  41fb5d:	xchg   bh,ah
  41fb5f:	test   BYTE PTR [edi+esi*2+0x10],ah
  41fb63:	push   es
  41fb64:	sub    ah,bl
  41fb66:	jmp    0x4962f337
  41fb6b:	mov    edx,0xd0efa75f
  41fb70:	jecxz  0x41fbc2
  41fb72:	out    dx,al
  41fb73:	push   ebx
  41fb74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb75:	jle    0x41fb2b
  41fb77:	and    bl,dh
  41fb79:	add    edi,DWORD PTR [ebx-0x2f352c89]
  41fb7f:	(bad)  
  41fb80:	iret   
  41fb81:	adc    DWORD PTR [esi],edx
  41fb83:	nop
  41fb84:	js     0x41fb9b
  41fb86:	popf   
  41fb87:	cld    
  41fb88:	ret    0x72f4
  41fb8b:	push   ebx
  41fb8c:	sub    BYTE PTR [edx-0xf],dh
  41fb8f:	outs   dx,DWORD PTR ds:[esi]
  41fb90:	rcl    BYTE PTR [ebp+0x2e],0xd5
  41fb94:	xchg   ebx,eax
  41fb95:	stos   DWORD PTR es:[edi],eax
  41fb96:	sbb    al,0x64
  41fb98:	les    ebx,FWORD PTR [ecx-0x5c]
  41fb9b:	jge    0x41fb41
  41fb9d:	jle    0x41fb5d
  41fb9f:	retf   
  41fba0:	pop    ecx
  41fba1:	loopne 0x41fc11
  41fba3:	sub    DWORD PTR [ecx],esi
  41fba5:	test   BYTE PTR [edi],dl
  41fba7:	sub    BYTE PTR [ebp+0xa],bl
  41fbaa:	adc    al,0xfa
  41fbac:	nop
  41fbad:	sub    al,0x9c
  41fbaf:	adc    BYTE PTR [ecx+0x64],bl
  41fbb2:	leave  
  41fbb3:	xchg   DWORD PTR [edx+eax*4+0x6dc24c09],ecx
  41fbba:	jns    0x41fc0b
  41fbbc:	mov    edi,0x5cc2cc09
  41fbc1:	inc    edx
  41fbc2:	pop    ss
  41fbc3:	stos   BYTE PTR es:[edi],al
  41fbc4:	sub    eax,0xa127909b
  41fbc9:	daa    
  41fbca:	xchg   ebx,eax
  41fbcb:	jbe    0x41fc46
  41fbcd:	inc    ecx
  41fbce:	xor    BYTE PTR [ebp-0x44],ah
  41fbd1:	mov    WORD PTR [eax+0x37483e26],?
  41fbd7:	jl     0x41fb85
  41fbd9:	adc    BYTE PTR [edi+0xc],ah
  41fbdc:	jno    0x41fc4f
  41fbde:	mov    edi,0x6e204ee2
  41fbe3:	sub    DWORD PTR ds:0xce329866,ebx
  41fbe9:	add    al,0x95
  41fbeb:	jnp    0x41fb97
  41fbed:	out    0x4d,eax
  41fbef:	dec    esi
  41fbf0:	add    ah,BYTE PTR [edi-0x3771053c]
  41fbf6:	je     0x41fc74
  41fbf8:	sub    al,0x7
  41fbfa:	and    al,0xf0
  41fbfc:	shr    BYTE PTR [ebx+0x32ded72d],1
  41fc02:	xlat   BYTE PTR ds:[ebx]
  41fc03:	iret   
  41fc04:	inc    ecx
  41fc05:	cmp    bh,BYTE PTR [ecx+0x2a]
  41fc08:	ret    
  41fc09:	jmp    0x2326845a
  41fc0e:	out    dx,al
  41fc0f:	not    DWORD PTR [eax+0x4941019a]
  41fc15:	fisttp DWORD PTR [ecx]
  41fc17:	xor    al,0xc9
  41fc19:	out    dx,eax
  41fc1a:	jae    0x41fc14
  41fc1c:	(bad)  
  41fc1d:	jbe    0x41fb9f
  41fc1f:	mov    eax,ds:0x7b1886a5
  41fc24:	sar    dl,0xc
  41fc27:	retf   
  41fc28:	adc    ecx,DWORD PTR [ebp-0x119166d6]
  41fc2e:	dec    edi
  41fc2f:	test   DWORD PTR [esi+0x50],edx
  41fc32:	lahf   
  41fc33:	frstor [ecx]
  41fc35:	push   ebx
  41fc36:	sbb    DWORD PTR [ecx],0x56
  41fc39:	gs add al,0x52
  41fc3c:	pop    eax
  41fc3d:	js     0x41fc6a
  41fc3f:	test   eax,0xb1bd35bd
  41fc44:	and    BYTE PTR [eax+0x4f3d7d17],dh
  41fc4a:	pop    esi
  41fc4b:	xchg   ebx,eax
  41fc4c:	mov    ebp,0x78691ba9
  41fc51:	xlat   BYTE PTR ds:[ebx]
  41fc52:	mov    ebx,0x7e75e603
  41fc57:	sar    DWORD PTR [eax],0xbd
  41fc5a:	std    
  41fc5b:	shr    DWORD PTR [ecx+0x70],0x8a
  41fc5f:	fwait
  41fc60:	cmp    esp,eax
  41fc62:	jns    0x41fccb
  41fc64:	std    
  41fc65:	je     0x41fc8c
  41fc67:	inc    ecx
  41fc68:	jb     0x41fc9d
  41fc6a:	adc    edx,DWORD PTR [ebp+0x5dab4e86]
  41fc70:	adc    esp,edx
  41fc72:	push   edi
  41fc73:	fstp   TBYTE PTR [ecx-0x5a]
  41fc76:	mov    eax,esp
  41fc78:	imul   ebp,DWORD PTR [edi+0x64],0xffffff92
  41fc7c:	jne    0x41fcd6
  41fc7e:	mov    ebp,0x4c8e57ca
  41fc83:	mov    ah,0x33
  41fc85:	adc    DWORD PTR [eax],ecx
  41fc87:	sbb    BYTE PTR [ebx+0x0],bh
  41fc8a:	add    DWORD PTR [edi+eax*2+0x47],0xffffff99
  41fc8f:	enter  0xc524,0x6f
  41fc93:	imul   esi,DWORD PTR ds:0x7efac47c,0xd20e2908
  41fc9d:	outs   dx,DWORD PTR ds:[esi]
  41fc9e:	sar    BYTE PTR [eax],0x1
  41fca1:	aad    0x33
  41fca3:	jb     0x41fcea
  41fca5:	cmp    DWORD PTR [ebp-0x60],edx
  41fca8:	xchg   ecx,eax
  41fca9:	inc    eax
  41fcaa:	push   0x2c
  41fcac:	pop    eax
  41fcad:	dec    esi
  41fcae:	or     al,0xf4
  41fcb0:	mov    BYTE PTR [ebx],ch
  41fcb2:	mov    eax,0x94baf81e
  41fcb7:	sub    al,0x7d
  41fcb9:	(bad)  
  41fcba:	dec    BYTE PTR [ebp+0x7a88891e]
  41fcc0:	dec    edx
  41fcc1:	das    
  41fcc2:	cwde   
  41fcc3:	les    esp,FWORD PTR [ecx]
  41fcc5:	mov    DWORD PTR [edx+0x5e],ebx
  41fcc8:	mov    bp,0x723c
  41fccc:	push   ecx
  41fccd:	mov    ds:0xb10659e0,eax
  41fcd2:	stc    
  41fcd3:	cmp    ebp,DWORD PTR [ebx-0x7789982f]
  41fcd9:	outs   dx,BYTE PTR ds:[esi]
  41fcda:	mov    ecx,0x24d90dca
  41fcdf:	inc    esp
  41fce0:	ja     0x41fc9e
  41fce2:	les    edx,FWORD PTR [ebp+0x6d]
  41fce5:	xor    al,0xc2
  41fce7:	or     edi,DWORD PTR [eax-0x1]
  41fcea:	iret   
  41fceb:	(bad)  
  41fcec:	out    0x4f,eax
  41fcee:	add    DWORD PTR [ecx],esp
  41fcf0:	and    eax,0x8476aaf0
  41fcf5:	pushf  
  41fcf6:	push   0x19c5d57
  41fcfb:	cmp    eax,0x509f4c71
  41fd00:	call   0x1e837149
  41fd05:	jle    0x41fd71
  41fd07:	popf   
  41fd08:	sbb    ch,BYTE PTR [edi-0x38afdc46]
  41fd0e:	push   esi
  41fd0f:	add    ebx,DWORD PTR [eax-0x36]
  41fd12:	mov    dl,0x26
  41fd14:	push   esi
  41fd15:	aas    
  41fd16:	fild   DWORD PTR [ebx+0x44]
  41fd19:	pop    ebx
  41fd1b:	xor    BYTE PTR [eax],dl
  41fd1d:	xchg   esi,eax
  41fd1e:	fadd   QWORD PTR [edx]
  41fd20:	xchg   BYTE PTR [ebp+0x58],dl
  41fd23:	shl    BYTE PTR [eax+0x5d],cl
  41fd26:	xchg   ebp,eax
  41fd27:	pop    esi
  41fd28:	dec    edi
  41fd29:	(bad)  
  41fd2a:	fisttp DWORD PTR [ecx+eax*1-0x66]
  41fd2e:	int    0xc
  41fd30:	ins    BYTE PTR es:[edi],dx
  41fd31:	adc    al,0xc7
  41fd33:	adc    eax,0xb6a7d622
  41fd38:	pop    esp
  41fd39:	push   edi
  41fd3a:	and    bl,BYTE PTR [edi+0x53e51e41]
  41fd40:	pop    ds
  41fd41:	push   esi
  41fd42:	stos   BYTE PTR es:[edi],al
  41fd43:	out    dx,eax
  41fd44:	push   esi
  41fd45:	(bad)  
  41fd46:	popf   
  41fd47:	xchg   edi,eax
  41fd48:	ret    
  41fd49:	stc    
  41fd4a:	or     DWORD PTR [ebx-0x2f],ecx
  41fd4d:	test   ebx,edi
  41fd4f:	dec    eax
  41fd50:	adc    eax,0x7438dfd
  41fd55:	pusha  
  41fd56:	idiv   DWORD PTR [esi]
  41fd58:	int    0x75
  41fd5a:	cmp    al,BYTE PTR [edi+0x0]
  41fd5d:	push   es
  41fd5e:	je     0x41fd37
  41fd60:	add    ebp,ecx
  41fd62:	xor    edi,DWORD PTR [ebp+0x341ab005]
  41fd68:	(bad)
  41fd6c:	mov    esi,0x9a48a157
  41fd71:	sbb    al,0xce
  41fd73:	or     BYTE PTR [eax],bh
  41fd75:	mov    ebx,0x6ed2cb32
  41fd7a:	jg     0x41fd73
  41fd7c:	sub    al,0x5e
  41fd7e:	sub    eax,0xbd80a9e
  41fd83:	imul   ebp,DWORD PTR [ebx+0x116c627],0x55f4d3a7
  41fd8d:	js     0x41fd7b
  41fd8f:	mov    esi,0xb9c5bd32
  41fd94:	scas   al,BYTE PTR es:[edi]
  41fd95:	sub    esp,DWORD PTR [ecx]
  41fd97:	repz sub ah,0x49
  41fd9b:	(bad)  
  41fd9c:	into   
  41fd9d:	pop    ebx
  41fd9e:	jns    0x41fe18
  41fda0:	fwait
  41fda1:	mov    eax,esp
  41fda3:	add    eax,0x98df12de
  41fda8:	xchg   ebp,eax
  41fda9:	inc    eax
  41fdaa:	cmp    cl,BYTE PTR [eax]
  41fdac:	sub    al,BYTE PTR [edx-0x75ab7a8]
  41fdb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fdb3:	pop    edi
  41fdb4:	arpl   WORD PTR [esi+0x21],ax
  41fdb7:	xchg   ebx,eax
  41fdb8:	jbe    0x41fd6b
  41fdba:	retf   0x93b2
  41fdbd:	push   edi
  41fdbe:	jo     0x41fdef
  41fdc0:	je     0x41fddb
  41fdc2:	div    BYTE PTR [ecx*8-0x61ad3a61]
  41fdc9:	mov    dh,bl
  41fdcb:	sub    bl,BYTE PTR [esi-0x4c]
  41fdce:	ror    ebx,cl
  41fdd0:	cli    
  41fdd1:	retf   0xdbdf
  41fdd4:	shl    ebp,0xe6
  41fdd7:	in     al,dx
  41fdd8:	sub    BYTE PTR [ebx+0x3a],ch
  41fddb:	dec    ebx
  41fddc:	pop    ss
  41fddd:	inc    esp
  41fdde:	retf   0x5a5d
  41fde1:	jne    0x41fe12
  41fde3:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fde5:	imul   esp,DWORD PTR [edi+edi*1],0xd1149c31
  41fdec:	adc    BYTE PTR [edi-0x23e3a243],al
  41fdf2:	gs cmp al,0x12
  41fdf5:	ret    0xcbe0
  41fdf8:	pop    ecx
  41fdf9:	scas   al,BYTE PTR es:[edi]
  41fdfa:	xchg   ebp,eax
  41fdfb:	loope  0x41fe75
  41fdfd:	(bad)  
  41fdff:	xor    BYTE PTR [ecx-0x4],al
  41fe02:	lds    ecx,FWORD PTR [esi+0x6c]
  41fe05:	sbb    ebx,DWORD PTR [ebp-0x39e34600]
  41fe0b:	xchg   BYTE PTR [eax],al
  41fe0d:	push   esi
  41fe0e:	cmp    esp,esp
  41fe10:	xor    BYTE PTR [ebx-0x67cbe893],ch
  41fe16:	std    
  41fe17:	in     al,0xf4
  41fe19:	ror    DWORD PTR [ebp+0x5b],cl
  41fe1c:	idiv   BYTE PTR [esi-0x24de4197]
  41fe22:	and    eax,0xb65c4d04
  41fe27:	push   ebp
  41fe28:	inc    ebp
  41fe29:	ret    0xb292
  41fe2c:	push   eax
  41fe2d:	ins    DWORD PTR es:[edi],dx
  41fe2e:	pop    ds
  41fe2f:	ret    
  41fe30:	imul   esp,DWORD PTR [ebx-0x77],0x42fa25ce
  41fe37:	ins    DWORD PTR es:[edi],dx
  41fe38:	lea    eax,ds:0xcaacf794
  41fe3e:	jecxz  0x41fde8
  41fe40:	(bad)
  41fe43:	and    al,0x8a
  41fe45:	pop    es
  41fe46:	jmp    0xf7d04512
  41fe4b:	xchg   ebx,eax
  41fe4c:	jb     0x41fe40
  41fe4e:	in     al,dx
  41fe4f:	test   DWORD PTR [esi+eiz*2+0x1a2f0f10],ebp
  41fe56:	or     eax,0xd8ca4b3f
  41fe5b:	xchg   dl,cl
  41fe5d:	bound  edx,QWORD PTR [ecx-0x38]
  41fe60:	xchg   edi,eax
  41fe61:	mov    eax,ds:0x17daa8e9
  41fe66:	xchg   DWORD PTR [esp+esi*4],edi
  41fe69:	pop    ebp
  41fe6a:	adc    BYTE PTR [eax-0x10ae955],0xe0
  41fe71:	scas   al,BYTE PTR es:[edi]
  41fe72:	mov    esi,0x6dd95aec
  41fe77:	mov    cl,0x3c
  41fe79:	and    esi,DWORD PTR [ecx+ebp*1+0x7ebb91eb]
  41fe80:	dec    esp
  41fe81:	in     al,dx
  41fe82:	pop    ebp
  41fe83:	xchg   esp,eax
  41fe84:	sub    BYTE PTR [edi-0x3eca0985],bl
  41fe8a:	jle    0x41fe49
  41fe8c:	mov    edx,0x52291d0f
  41fe91:	push   es
  41fe92:	jge    0x41fe84
  41fe94:	sub    eax,0xd9ae8930
  41fe99:	and    ebx,DWORD PTR [edi+0x11]
  41fe9c:	leave  
  41fe9d:	out    0x40,eax
  41fe9f:	push   ecx
  41fea0:	mov    esp,eax
  41fea2:	xor    esi,DWORD PTR [eax+0x34b3d764]
  41fea8:	jne    0x41fe91
  41feaa:	xchg   esi,eax
  41feab:	mov    DWORD PTR [esi-0x4e36f6fd],esp
  41feb1:	ja     0x41fe5b
  41feb3:	mov    ds:0x1c87816c,al
  41feb8:	mov    bl,0x8b
  41feba:	mov    eax,DWORD PTR [edi-0x5a099971]
  41fec0:	xor    dh,al
  41fec2:	call   DWORD PTR [edx-0x15]
  41fec5:	xor    al,0x4e
  41fec7:	test   BYTE PTR [ecx-0x45d4bd32],dh
  41fecd:	push   es
  41fece:	ror    BYTE PTR [edi*2-0x3b4032e1],cl
  41fed5:	or     eax,0x218d4de8
  41feda:	xchg   edi,eax
  41fedb:	dec    ecx
  41fedc:	jle    0x41ff3b
  41fede:	xchg   esi,eax
  41fedf:	xor    al,0xce
  41fee1:	lods   al,BYTE PTR ds:[esi]
  41fee2:	inc    esi
  41fee3:	or     BYTE PTR [edx],ah
  41fee5:	pop    eax
  41fee6:	xor    al,0x15
  41fee8:	xor    eax,0x48baf63a
  41feed:	adc    ch,BYTE PTR [ebx-0x5b]
  41fef0:	loope  0x41fed4
  41fef2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fef3:	push   ebp
  41fef4:	push   esp
  41fef5:	mov    edx,0x9cba8648
  41fefa:	adc    al,0x68
  41fefc:	or     esi,DWORD PTR [ecx+ebx*1-0x3a788960]
  41ff03:	(bad)  
  41ff04:	ja     0x41fee7
  41ff06:	outs   dx,BYTE PTR ds:[esi]
  41ff07:	push   edx
  41ff08:	push   edx
  41ff09:	mov    ah,0x86
  41ff0b:	(bad)  
  41ff0c:	lods   eax,DWORD PTR ds:[esi]
  41ff0d:	rcr    BYTE PTR [edx+0x3f],0xcf
  41ff11:	xchg   edx,eax
  41ff12:	iret   
  41ff13:	cmc    
  41ff14:	jno    0x41fed5
  41ff16:	retf   
  41ff17:	adc    eax,0x8f48ef05
  41ff1c:	push   0xeaa069b
  41ff21:	add    al,0xdc
  41ff23:	icebp  
  41ff24:	sub    DWORD PTR [edi+0x11],eax
  41ff27:	inc    esp
  41ff28:	lea    edi,[edi+0x690b1562]
  41ff2e:	inc    eax
  41ff2f:	ret    
  41ff30:	xchg   ebx,eax
  41ff31:	into   
  41ff32:	outs   dx,BYTE PTR ds:[esi]
  41ff33:	stos   BYTE PTR es:[edi],al
  41ff34:	setg   BYTE PTR [ecx]
  41ff37:	sub    eax,DWORD PTR [esi+0x1ae43fd5]
  41ff3d:	adc    ebp,edx
  41ff3f:	or     ecx,DWORD PTR [ecx-0x2f]
  41ff42:	mov    al,ds:0x368cea30
  41ff47:	ss enter 0xdc6b,0x48
  41ff4c:	outs   dx,DWORD PTR ds:[esi]
  41ff4d:	loopne 0x41ffcd
  41ff4f:	je     0x41ff37
  41ff51:	(bad)  
  41ff53:	or     al,BYTE PTR [ebp-0x1c]
  41ff56:	ss std 
  41ff58:	sti    
  41ff59:	(bad)  
  41ff5a:	adc    al,0x3
  41ff5c:	mov    ds:0x7f2dc428,al
  41ff61:	or     al,dl
  41ff63:	retf   0x820c
  41ff66:	in     eax,0x42
  41ff68:	xor    edx,DWORD PTR [ebp+ebx*8+0x6d733368]
  41ff6f:	out    0xa3,eax
  41ff71:	cmp    eax,0x31e05e70
  41ff76:	jbe    0x41ff51
  41ff78:	dec    eax
  41ff79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff7a:	mov    cl,bh
  41ff7c:	test   eax,0x6a146860
  41ff81:	scas   al,BYTE PTR es:[edi]
  41ff82:	xor    BYTE PTR [eax-0x5c],dh
  41ff85:	ss push cs
  41ff87:	pop    ds
  41ff88:	or     cl,BYTE PTR [esi+ebx*2+0x66]
  41ff8c:	scas   eax,DWORD PTR es:[edi]
  41ff8d:	idiv   ecx
  41ff8f:	push   es
  41ff90:	pusha  
  41ff91:	inc    ebp
  41ff92:	pushf  
  41ff93:	xchg   esi,eax
  41ff94:	xchg   DWORD PTR [ebp+0x64],ebp
  41ff97:	scas   al,BYTE PTR es:[edi]
  41ff98:	leave  
  41ff99:	aas    
  41ff9a:	fidiv  WORD PTR [esp+eax*2]
  41ff9d:	mov    DWORD PTR [eax-0x8],esp
  41ffa0:	adc    eax,0xc024ac8
  41ffa5:	arpl   WORD PTR [edx-0x1bce1986],bx
  41ffab:	arpl   WORD PTR [ecx-0x661f2e10],bx
  41ffb1:	cdq    
  41ffb2:	fwait
  41ffb3:	jl     0x42002d
  41ffb5:	call   0x62101bbd
  41ffba:	sub    al,0x8d
  41ffbc:	shl    BYTE PTR [ecx-0x2],0x56
  41ffc0:	sbb    BYTE PTR [ebx+0x630b5af3],ah
  41ffc6:	inc    edi
  41ffc7:	fadd   DWORD PTR [ecx+0x2d]
  41ffca:	mov    dl,0x5c
  41ffcc:	shr    BYTE PTR [esi+edx*2-0x2e8398ce],0x2c
  41ffd4:	jmp    0x41ffda
  41ffd6:	jmp    0x6d9e:0xbd06afa2
  41ffdd:	or     eax,0xa4225143
  41ffe2:	adc    edi,0x32
  41ffe5:	call   0xa68fca55
  41ffea:	scas   al,BYTE PTR es:[edi]
  41ffeb:	fisubr DWORD PTR [edi+edx*8-0x212b47bc]
  41fff2:	iret   
  41fff3:	inc    ebp
  41fff4:	daa    
  41fff5:	mov    ebp,0x2be7346d
  41fffa:	cmp    dl,ch
  41fffc:	xchg   esp,eax
  41fffd:	nop
  41fffe:	push   edx
  41ffff:	xorps  xmm7,XMMWORD PTR [edi-0x9]
  420003:	cmp    esi,edx
  420005:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420006:	arpl   WORD PTR [edi],si
  420008:	sar    DWORD PTR [ebx-0x4fc52568],1
  42000e:	inc    ebp
  42000f:	ins    DWORD PTR es:[edi],dx
  420010:	or     eax,esp
  420012:	adc    al,0x8d
  420014:	mov    gs,WORD PTR [ebp-0xda939e6]
  42001a:	sbb    ebp,edx
  42001c:	repz inc edi
  42001e:	inc    edx
  42001f:	stos   DWORD PTR es:[edi],eax
  420020:	jb     0x4200a1
  420022:	and    al,0xc8
  420024:	jge    0x420007
  420026:	mov    ch,0x8d
  420028:	jae    0x42001c
  42002a:	or     BYTE PTR [ecx-0x2a7c27d7],dh
  420030:	xchg   edx,eax
  420031:	or     al,0x4d
  420033:	mov    edi,0x41cedcf9
  420038:	fisub  DWORD PTR [ebx-0xc]
  42003b:	mov    esp,0xa5c0e24f
  420040:	xchg   edi,eax
  420041:	sbb    al,0xf1
  420043:	retf   0x666a
  420046:	pusha  
  420047:	jle    0x420042
  420049:	adc    eax,DWORD PTR [ebx+esi*8+0x39987445]
  420050:	call   0xbdcbcc19
  420055:	sahf   
  420056:	sub    bh,BYTE PTR [esi]
  420058:	mov    eax,0x91462747
  42005d:	push   cs
  42005e:	shl    DWORD PTR [ebx+0x38],0x78
  420062:	inc    eax
  420063:	mov    al,BYTE PTR [eax]
  420065:	cmp    al,0x3a
  420067:	ret    
  420068:	pop    ss
  420069:	repnz push eax
  42006b:	mov    bh,0xc3
  42006d:	scas   al,BYTE PTR es:[edi]
  42006e:	pop    es
  42006f:	inc    ebx
  420070:	test   DWORD PTR [ebx],ebp
  420072:	mov    ds:0xf3dea930,al
  420077:	sbb    al,0x2
  420079:	push   edi
  42007a:	jecxz  0x420077
  42007c:	mov    esi,0x82de6034
  420081:	push   ebx
  420082:	mov    cl,0xad
  420084:	push   esi
  420085:	mov    eax,0xb4155361
  42008a:	int3   
  42008b:	xor    ah,al
  42008d:	jne    0x420105
  42008f:	xchg   edx,eax
  420090:	jbe    0x42010e
  420092:	adc    eax,0x5d9bd104
  420097:	jmp    0xb2c5:0x4616950d
  42009e:	push   ss
  42009f:	push   ebx
  4200a0:	mov    edi,0x708cb12f
  4200a5:	in     al,dx
  4200a6:	into   
  4200a7:	ret    
  4200a8:	sbb    BYTE PTR [ebp-0x5c],dh
  4200ab:	ja     0x42011f
  4200ad:	imul   esi,DWORD PTR [ebx],0xa492fa4c
  4200b3:	jmp    0xa50b:0x767da11c
  4200ba:	mov    esi,ebp
  4200bc:	pop    eax
  4200bd:	mov    al,0x4d
  4200bf:	(bad)  
  4200c0:	in     eax,dx
  4200c1:	xchg   esi,ebx
  4200c3:	rcl    ch,cl
  4200c5:	and    esi,DWORD PTR [ebx-0x186be865]
  4200cb:	xor    bl,bl
  4200cd:	mov    cl,0xe6
  4200cf:	frstor [ebx]
  4200d1:	pop    ss
  4200d2:	fst    QWORD PTR [edx-0x52]
  4200d5:	sbb    eax,0x2d79a63f
  4200da:	pop    esp
  4200db:	aad    0xed
  4200dd:	fcomi  st,st(6)
  4200df:	jmp    0xc5e8:0x4e563f34
  4200e6:	add    dh,BYTE PTR [ecx]
  4200e8:	inc    edi
  4200e9:	mov    eax,0x514a79
  4200ee:	icebp  
  4200ef:	adc    bl,BYTE PTR [edx+eax*2-0x39]
  4200f3:	jecxz  0x4200ee
  4200f5:	es not ah
  4200f8:	mov    bh,0x8d
  4200fa:	std    
  4200fb:	test   BYTE PTR [esi-0x9],bh
  4200fe:	jae    0x42014e
  420100:	pusha  
  420101:	or     DWORD PTR [edi-0x4586e3e9],ebp
  420107:	icebp  
  420108:	test   al,0x7
  42010a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42010b:	mov    dl,0xfd
  42010d:	push   ds
  42010e:	mov    dh,0x97
  420110:	jp     0x420096
  420112:	cmp    BYTE PTR [esp+edi*2+0x79f1817a],bh
  420119:	das    
  42011a:	jnp    0x420100
  42011c:	sbb    dh,dh
  42011e:	sub    BYTE PTR ss:[esi],0x8c
  420122:	neg    bl
  420124:	push   esp
  420125:	dec    ecx
  420126:	add    DWORD PTR [ebx],edx
  420128:	mov    BYTE PTR ss:[ebx-0x41],dh
  42012c:	push   ds
  42012d:	xchg   ebx,eax
  42012e:	aam    0x68
  420130:	shl    BYTE PTR [ebp-0x5999f198],0xb0
  420137:	fcom   QWORD PTR [ecx+0x6b]
  42013a:	and    DWORD PTR [edi-0x51b59cec],ebx
  420140:	push   0x814b5a71
  420145:	and    DWORD PTR [edi-0x615e027f],0x1fead5a6
  42014f:	add    cl,BYTE PTR [edx+eax*8+0x199b27c6]
  420156:	imul   edi,DWORD PTR [ebp+0x79],0x4dd1b1a8
  42015d:	adc    DWORD PTR [esi+0x382d5c18],0x4fb61056
  420167:	sub    edx,edi
  420169:	mov    bh,0xaa
  42016b:	sahf   
  42016c:	cli    
  42016d:	jae    0x420136
  42016f:	sbb    bl,BYTE PTR [edi+0x52]
  420172:	mov    ecx,0xedc6a9d3
  420177:	ror    BYTE PTR [esi-0xa96a9ac],0xb5
  42017e:	xor    DWORD PTR [eax+0x1e29b95a],eax
  420184:	in     eax,0xbe
  420186:	scas   al,BYTE PTR es:[edi]
  420187:	int3   
  420188:	mov    ebx,0x26b41225
  42018d:	cmp    BYTE PTR [ebx+0x1b8e1c00],ah
  420193:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420194:	lds    ebx,FWORD PTR [esi-0x2e7dcf08]
  42019a:	pop    ds
  42019b:	call   0xb3d7ac58
  4201a0:	pop    ss
  4201a1:	inc    esp
  4201a2:	and    ah,BYTE PTR [edi]
  4201a4:	imul   ebp,DWORD PTR [esi-0x6a2897a6],0xd
  4201ab:	(bad)  
  4201ac:	retf   
  4201ad:	xchg   esi,eax
  4201ae:	leave  
  4201af:	es (bad) 
  4201b1:	sbb    ebx,ebp
  4201b3:	pop    eax
  4201b4:	je     0x42017f
  4201b6:	jmp    0x5d06:0x50ce0cb5
  4201bd:	cwde   
  4201be:	popa   
  4201bf:	fistp  DWORD PTR [edi]
  4201c1:	push   edi
  4201c2:	mov    WORD PTR [edx],gs
  4201c4:	fisub  WORD PTR [ebx-0x523090c0]
  4201ca:	mov    ah,0x2
  4201cc:	xor    DWORD PTR [edi-0x4177568f],0xffffff9c
  4201d3:	dec    esi
  4201d4:	xchg   ecx,eax
  4201d5:	and    eax,0xddcca8cd
  4201da:	lahf   
  4201db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4201dc:	sub    ebp,DWORD PTR ds:0xc25ee368
  4201e2:	add    dl,BYTE PTR [ecx-0x64]
  4201e5:	mov    eax,0xac95e3f
  4201ea:	xor    ecx,DWORD PTR [ebp+0x18ca5a0d]
  4201f0:	test   bl,bh
  4201f2:	sbb    ch,ch
  4201f4:	das    
  4201f5:	dec    ebx
  4201f6:	stos   BYTE PTR es:[edi],al
  4201f7:	pop    esp
  4201f8:	adc    DWORD PTR [ecx+eax*1-0x4500d1cf],esi
  4201ff:	aas    
  420200:	jbe    0x4201e9
  420202:	inc    edx
  420203:	dec    esi
  420204:	jg     0x42027b
  420206:	pop    edi
  420207:	hlt    
  420208:	cmp    DWORD PTR [ebx+0x5d],ebp
  42020b:	into   
  42020c:	or     al,0x8a
  42020e:	sbb    eax,0x3e2ef537
  420213:	stos   DWORD PTR es:[edi],eax
  420214:	pop    ss
  420215:	div    ebp
  420217:	pop    edi
  420218:	aad    0x3d
  42021a:	lock mov ds:0xe5f93219,eax
  420220:	jbe    0x42028f
  420222:	imul   ecx,ecx,0x64
  420225:	lods   eax,DWORD PTR ds:[esi]
  420226:	push   cs
  420227:	mov    ch,0x84
  420229:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42022a:	sub    al,0x3e
  42022c:	(bad)  
  42022d:	jge    0x420239
  42022f:	sbb    eax,0xd2b6ea49
  420234:	pop    eax
  420235:	xor    al,0xeb
  420237:	scas   al,BYTE PTR es:[edi]
  420238:	test   DWORD PTR [ecx+0x11ae4cc0],eax
  42023e:	jg     0x42020b
  420240:	je     0x4201cb
  420242:	push   edi
  420243:	jo     0x4201e0
  420245:	jb     0x4202a4
  420247:	(bad)  
  420248:	xor    bh,BYTE PTR [ecx+0x3ac1fc0e]
  42024e:	jge    0x4202c9
  420250:	or     eax,0xfacb91f1
  420255:	and    BYTE PTR [ecx-0x7c],ch
  420258:	scas   al,BYTE PTR es:[edi]
  420259:	fadd   st,st(5)
  42025b:	xchg   esp,eax
  42025c:	dec    esi
  42025d:	(bad)  
  42025e:	(bad)  
  42025f:	leave  
  420260:	call   0x616ae1f
  420265:	cmp    BYTE PTR [ecx-0x36ac489a],dl
  42026b:	push   edi
  42026c:	mov    edx,0xba34a048
  420271:	ror    ebp,1
  420273:	jae    0x420265
  420275:	loop   0x42023b
  420277:	mov    esi,0x935bd9a
  42027c:	jmp    0x61767b6b
  420281:	fbstp  TBYTE PTR [ecx+ebx*4+0x2ba9c383]
  420288:	rol    BYTE PTR [ebx+0x0],cl
  42028b:	les    ecx,FWORD PTR [edx]
  42028d:	int    0x60
  42028f:	sti    
  420290:	sub    bl,BYTE PTR [ebp+0x5d10396d]
  420296:	test   eax,0x89e2d5c3
  42029b:	addr16 xor al,0x56
  42029e:	mov    ebp,0x26627dc7
  4202a3:	sub    DWORD PTR [ebx-0x5d],esi
  4202a6:	call   0x507753b5
  4202ab:	ret    0x2e05
  4202ae:	push   eax
  4202af:	(bad)  
  4202b0:	jne    0x4202b1
  4202b2:	add    al,0x9c
  4202b4:	into   
  4202b5:	repz arpl WORD PTR [esi],cx
  4202b8:	xchg   edx,eax
  4202b9:	and    al,0x38
  4202bb:	shl    BYTE PTR [ebp+0xf],1
  4202be:	aam    0x4f
  4202c0:	(bad)  
  4202c1:	xchg   edi,eax
  4202c2:	jmp    0x7b80e068
  4202c7:	mov    cl,0x4d
  4202c9:	push   edi
  4202ca:	pop    ds
  4202cb:	sub    al,0x52
  4202cd:	cwde   
  4202ce:	cli    
  4202cf:	lods   al,BYTE PTR ds:[esi]
  4202d1:	loope  0x4202e1
  4202d3:	test   eax,0x4b95301b
  4202d8:	pop    ds
  4202d9:	sub    DWORD PTR [eax],esp
  4202db:	jns    0x420283
  4202dd:	out    dx,eax
  4202de:	mov    al,ds:0x6a70bb41
  4202e3:	xchg   edi,eax
  4202e4:	call   0x86e4d776
  4202e9:	adc    BYTE PTR [ebp+0x60],bl
  4202ec:	xchg   edi,eax
  4202ed:	or     eax,0x4edc6b4c
  4202f2:	loop   0x4202bf
  4202f4:	push   cs
  4202f5:	sahf   
  4202f6:	mov    dl,0x66
  4202f8:	and    bl,BYTE PTR [edi-0x21]
  4202fb:	sub    eax,eax
  4202fd:	lahf   
  4202fe:	pop    esi
  4202ff:	dec    edx
  420300:	ja     0x42031a
  420302:	pop    ecx
  420303:	mov    bh,0x3f
  420305:	mov    ecx,0xab7d56fa
  42030a:	stos   DWORD PTR es:[edi],eax
  42030b:	adc    eax,0x39553269
  420310:	or     BYTE PTR [esi+0x76],ah
  420313:	fdivr  st(4),st
  420315:	lea    esp,[ebp+0x6d]
  420318:	jne    0x4202f7
  42031a:	jg     0x4202e5
  42031c:	aam    0xfc
  42031e:	push   esi
  42031f:	xchg   DWORD PTR [eax+0x3d6b68d9],edx
  420325:	push   0x49
  420327:	ret    
  420328:	daa    
  420329:	push   ss
  42032a:	pop    es
  42032b:	lock mov al,0xff
  42032e:	test   al,0xc8
  420330:	jmp    0x4202d6
  420332:	fmul   DWORD PTR [edi-0x632c2ef6]
  420338:	or     bl,BYTE PTR [ebx]
  42033a:	adc    BYTE PTR [ebx+ebx*4+0x63],0x9b
  42033f:	cmc    
  420340:	mov    esp,DWORD PTR [eax+0x4bc0f5d0]
  420346:	cmp    ecx,DWORD PTR [edi-0x5e0724b5]
  42034c:	ins    DWORD PTR es:[edi],dx
  42034d:	cwde   
  42034e:	cdq    
  42034f:	ds dec eax
  420351:	rcl    DWORD PTR [edx+ebp*2+0x5ed44357],1
  420358:	or     al,0xd9
  42035a:	mov    esp,0xd39f6b93
  42035f:	aas    
  420360:	call   0x4031:0x9b8993c9
  420367:	push   ecx
  420368:	inc    ebp
  420369:	and    bh,ch
  42036b:	or     ch,ch
  42036d:	sub    ebx,ebp
  42036f:	test   eax,0x147e8770
  420374:	pop    ebp
  420375:	sub    eax,0x7798ee71
  42037a:	adc    BYTE PTR [edi-0x3551535e],dh
  420380:	pushf  
  420381:	inc    edi
  420382:	push   edx
  420383:	add    cl,BYTE PTR [ecx]
  420385:	rol    dh,cl
  420387:	cmp    esi,DWORD PTR [esi+0x27206670]
  42038d:	(bad)  
  42038e:	loopne 0x420324
  420390:	or     eax,0x199c9fa2
  420395:	idiv   DWORD PTR [eax]
  420397:	outs   dx,BYTE PTR ds:[esi]
  420398:	xor    eax,0xb8046088
  42039d:	out    0x8e,al
  42039f:	clc    
  4203a0:	popa   
  4203a1:	or     ch,BYTE PTR [esp+esi*4]
  4203a4:	dec    esp
  4203a5:	clc    
  4203a6:	and    cl,bh
  4203a8:	xchg   ecx,eax
  4203a9:	sbb    al,0x8d
  4203ab:	icebp  
  4203ac:	stos   DWORD PTR es:[edi],eax
  4203ad:	dec    ecx
  4203ae:	popf   
  4203af:	lock imul ebx,DWORD PTR [eax+eiz*4],0x122a011e
  4203b7:	push   ss
  4203b8:	push   edx
  4203b9:	or     al,0x7c
  4203bb:	scas   eax,DWORD PTR es:[edi]
  4203bc:	ins    BYTE PTR es:[edi],dx
  4203bd:	pop    ebx
  4203be:	enter  0x8e99,0xd7
  4203c2:	pop    ebx
  4203c3:	adc    al,0x3e
  4203c5:	pop    esi
  4203c6:	dec    edi
  4203c7:	lahf   
  4203c8:	xlat   BYTE PTR ds:[ebx]
  4203c9:	mov    bl,BYTE PTR [ecx+edx*4-0x44dd9d6c]
  4203d0:	sub    al,0x6f
  4203d2:	mov    ss:0xa41a2742,eax
  4203d8:	call   0xd6c9:0x5274a9d2
  4203df:	aad    0x60
  4203e1:	retf   
  4203e2:	dec    ebx
  4203e3:	test   DWORD PTR [ecx+eiz*1-0x528ab3c0],ebp
  4203ea:	jg     0x4203b3
  4203ec:	pop    ecx
  4203ed:	adc    al,0x1e
  4203ef:	sar    DWORD PTR [edx-0x7c],0xfa
  4203f3:	dec    ebp
  4203f4:	adc    BYTE PTR [edi+eax*4-0x11428334],0xf6
  4203fc:	(bad)  
  4203fd:	push   esi
  4203fe:	pop    edi
  4203ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420400:	stc    
  420401:	(bad)  
  420402:	imul   edx,DWORD PTR [esi+0x38],0x5c1dac2e
  420409:	ss call 0xcae0:0x743743b4
  420411:	mov    edi,cs
  420413:	data16 es cmc 
  420416:	aaa    
  420417:	add    BYTE PTR [edx],ch
  420419:	adc    DWORD PTR [eax-0x20491f9c],ebx
  42041f:	xchg   esi,eax
  420420:	ins    BYTE PTR es:[edi],dx
  420421:	(bad)  
  420422:	leave  
  420423:	sub    eax,0x7915c656
  420428:	and    al,0xf0
  42042a:	fsub   QWORD PTR [ecx]
  42042c:	xor    esp,DWORD PTR [eax-0x12]
  42042f:	xchg   ebp,esp
  420431:	add    eax,0x4da73e0e
  420436:	inc    ebp
  420437:	int3   
  420438:	ret    
  420439:	sub    eax,0xcf6c68ec
  42043e:	les    edx,FWORD PTR [ebp+0x5c00db3c]
  420444:	mov    WORD PTR [esi+0x6e],fs
  420447:	nop
  420448:	(bad)  
  420449:	or     eax,0xc2bea60e
  42044e:	push   ss
  42044f:	call   0x812eb589
  420454:	mov    dl,0xf1
  420456:	xchg   BYTE PTR [ecx+0x5d],cl
  420459:	or     eax,0x30248c6
  42045e:	xor    al,0x31
  420460:	fsub   st,st(2)
  420462:	cmp    ebp,DWORD PTR [ebx+0x22]
  420465:	or     eax,0xaff5333d
  42046a:	xor    al,0xc0
  42046c:	xchg   esp,eax
  42046d:	dec    esi
  42046e:	xchg   ecx,eax
  42046f:	push   esi
  420470:	or     ecx,edi
  420472:	in     eax,0xf4
  420474:	jl     0x42040e
  420476:	sahf   
  420477:	test   eax,0xd1c82adc
  42047c:	ret    
  42047d:	mov    bh,0x9e
  42047f:	push   0x3b
  420481:	jge    0x4204a0
  420483:	sbb    BYTE PTR [ebp+0x48f4951e],0x1
  42048a:	push   ebx
  42048b:	ja     0x4204d9
  42048d:	icebp  
  42048e:	(bad)  
  42048f:	dec    esp
  420490:	lahf   
  420491:	push   esi
  420492:	rcl    DWORD PTR [edi],1
  420494:	push   edi
  420495:	xchg   ebx,eax
  420496:	cdq    
  420497:	je     0x42049c
  420499:	cs sub al,0xfa
  42049c:	inc    ebx
  42049d:	mov    ecx,0x4d2f8fe3
  4204a2:	add    al,0xf2
  4204a4:	(bad)  
  4204a5:	popa   
  4204a6:	add    eax,0xca8cc552
  4204ab:	jo     0x4204d0
  4204ad:	jae    0x420433
  4204af:	test   BYTE PTR [ebp-0x57],al
  4204b2:	mov    eax,ds:0xc285d86d
  4204b7:	aam    0xf5
  4204b9:	call   0x9691dd40
  4204be:	retf   
  4204bf:	cmp    DWORD PTR [esi],eax
  4204c1:	jo     0x42047a
  4204c3:	(bad)  
  4204c4:	jg     0x420493
  4204c6:	clc    
  4204c7:	arpl   WORD PTR [edi-0x71],bp
  4204ca:	push   ss
  4204cb:	adc    al,cl
  4204cd:	mov    ebx,0x5c0f5ede
  4204d2:	call   0x398ad205
  4204d7:	jo     0x4204b7
  4204d9:	sub    al,0x9d
  4204db:	fsubrp st(1),st
  4204dd:	adc    eax,0x1ff53252
  4204e2:	data16 jbe 0x4204ab
  4204e5:	(bad)  
  4204e7:	mov    eax,0xb498d797
  4204ec:	fisub  WORD PTR ss:[edi+0x55]
  4204f0:	cld    
  4204f1:	adc    DWORD PTR [eax+0x51],0x77e44153
  4204f8:	jne    0x4204fd
  4204fa:	jns    0x420557
  4204fc:	or     eax,0xb3cee6b4
  420501:	inc    ecx
  420502:	js     0x42057a
  420504:	cmp    al,0x2c
  420506:	push   ds
  420507:	or     al,0xac
  420509:	rol    DWORD PTR es:[eax],1
  42050c:	and    eax,0x7f68654b
  420511:	aaa    
  420512:	scas   al,BYTE PTR es:[edi]
  420513:	iret   
  420514:	sti    
  420515:	mov    bl,0xa3
  420517:	push   eax
  420518:	(bad)  
  420519:	fsubrp st(0),st
  42051b:	and    dl,BYTE PTR [edi]
  42051d:	imul   ebp,esi,0x85bf32d9
  420523:	jno    0x42053a
  420525:	adc    edx,DWORD PTR [edi-0x488c32eb]
  42052b:	pop    edi
  42052c:	call   0xb0055fd0
  420531:	pop    es
  420532:	and    DWORD PTR [edx-0x51],esp
  420535:	jbe    0x420504
  420537:	sub    al,ch
  420539:	push   ebx
  42053a:	dec    ebp
  42053b:	push   0xffffffeb
  42053d:	mov    edx,0xb4bc7aac
  420542:	enter  0xf08,0xad
  420546:	xor    BYTE PTR [ecx+ebx*1],bl
  420549:	adc    BYTE PTR [ebx+0x6],0x9a
  42054d:	xchg   ebp,eax
  42054e:	dec    edx
  42054f:	jns    0x42058b
  420551:	mov    ebx,0x9f3a2a2f
  420556:	scas   eax,DWORD PTR es:[edi]
  420557:	xchg   esi,eax
  420558:	repnz test BYTE PTR [ebx+0x0],dh
  42055c:	cmp    sp,bp
  42055f:	push   edi
  420560:	test   DWORD PTR [edx+0xcceacd4],0x148fea33
  42056a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42056b:	call   0xf2f5d6f0
  420570:	into   
  420571:	(bad)  
  420573:	outs   dx,DWORD PTR ds:[esi]
  420574:	lea    edx,[edi]
  420576:	js     0x4205c9
  420578:	loopne 0x4205ec
  42057a:	outs   dx,DWORD PTR ds:[esi]
  42057b:	outs   dx,DWORD PTR ds:[esi]
  42057c:	aad    0x7e
  42057e:	push   ecx
  42057f:	xor    eax,0x7a1b7921
  420584:	or     al,0x50
  420586:	jp     0x420551
  420588:	out    dx,al
  420589:	push   ecx
  42058a:	pop    ebx
  42058b:	jecxz  0x42053d
  42058d:	call   0xa7eb:0x4cddfab
  420594:	xchg   ebp,eax
  420595:	scas   eax,DWORD PTR es:[edi]
  420596:	rol    DWORD PTR [ebx],0xcd
  420599:	push   ecx
  42059a:	jmp    0xd1fb:0xe6b46a
  4205a1:	add    ecx,ecx
  4205a3:	and    cl,bl
  4205a5:	idiv   BYTE PTR [edi+0x3f]
  4205a8:	imul   edx,DWORD PTR cs:[ebx],0x86113430
  4205af:	fistp  WORD PTR [ecx]
  4205b1:	dec    ebx
  4205b2:	imul   edx,DWORD PTR [ecx+0x496bfcea],0xaf855c23
  4205bc:	push   0x475b3360
  4205c1:	adc    eax,0xe7c7632e
  4205c6:	cmp    eax,0xbc4face0
  4205cb:	adc    DWORD PTR [eax],ebx
  4205cd:	and    BYTE PTR [ebp-0x79],dl
  4205d0:	jmp    0xb42aa6df
  4205d5:	pop    es
  4205d6:	mov    eax,ds:0xcacc9b8b
  4205db:	push   ss
  4205dc:	lods   al,BYTE PTR ds:[esi]
  4205dd:	imul   edx,DWORD PTR [ebx+0x59],0xffffff8a
  4205e1:	(bad)  
  4205e3:	inc    esi
  4205e4:	fbld   TBYTE PTR [edi-0x26]
  4205e7:	adc    eax,0xb46d70dc
  4205ec:	into   
  4205ed:	loop   0x420588
  4205ef:	shr    BYTE PTR [eax-0x3c3736fc],1
  4205f5:	dec    ecx
  4205f6:	loope  0x420621
  4205f8:	add    cl,BYTE PTR [esi+0x597e13dd]
  4205fe:	and    eax,0x9a38f3b5
  420603:	add    DWORD PTR [ecx],edi
  420605:	icebp  
  420606:	and    eax,0x21223642
  42060b:	mov    al,0x17
  42060d:	scas   eax,DWORD PTR es:[edi]
  42060e:	pop    ebp
  42060f:	mov    dl,0x66
  420611:	lea    edx,[ecx-0xa866715]
  420617:	xchg   DWORD PTR [esi+eiz*4+0x4790fcb8],edi
  42061e:	push   esp
  42061f:	leave  
  420620:	inc    ebp
  420621:	div    al
  420623:	sahf   
  420624:	leave  
  420625:	les    edx,FWORD PTR [ecx]
  420627:	and    BYTE PTR [eax],0x4
  42062a:	sub    cl,BYTE PTR [eax+0x50]
  42062d:	sub    ecx,0xc6218de4
  420633:	jbe    0x420653
  420635:	lock inc esp
  420637:	test   ebx,edx
  420639:	ins    BYTE PTR es:[edi],dx
  42063a:	das    
  42063b:	(bad)  
  42063c:	fisub  DWORD PTR cs:[eax+0x3d]
  420640:	jg     0x420665
  420642:	xor    bh,BYTE PTR cs:[ebx-0x6a]
  420646:	popf   
  420647:	data16 xor BYTE PTR [ebx],al
  42064a:	and    BYTE PTR [edi+0x32f188a9],cl
  420650:	sbb    al,0x26
  420652:	adc    eax,0x7e105c72
  420657:	sub    DWORD PTR [ebp-0x6a33cdb6],edi
  42065d:	dec    ecx
  42065e:	bnd jmp 0x56c25b3d
  420664:	xchg   BYTE PTR [eax-0x1c],dl
  420667:	add    ah,dl
  420669:	gs call 0x68cb78ed
  42066f:	inc    ecx
  420670:	add    BYTE PTR [ebx+0x2b4d5c13],dh
  420676:	test   DWORD PTR [edi-0x4ee01e25],ebx
  42067c:	inc    eax
  42067d:	mov    ch,0xe7
  42067f:	leave  
  420680:	and    BYTE PTR [ebx+edi*2],bl
  420683:	sbb    eax,0x9164d11a
  420688:	dec    edi
  420689:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42068a:	xor    ebp,DWORD PTR [ebp-0x67b4e5e6]
  420690:	arpl   WORD PTR [esi+0x2d184908],ax
  420696:	mov    esp,0x8f093f61
  42069b:	and    ah,ah
  42069d:	dec    ecx
  42069e:	xchg   ebp,eax
  42069f:	mov    bh,0x87
  4206a1:	(bad)  
  4206a3:	popa   
  4206a4:	sti    
  4206a5:	pop    edi
  4206a6:	into   
  4206a7:	arpl   WORD PTR [eax-0x66],bp
  4206aa:	pushf  
  4206ab:	lahf   
  4206ac:	fnclex 
  4206ae:	or     BYTE PTR [edi-0x1c55a72e],bh
  4206b4:	or     ebp,DWORD PTR [esi]
  4206b6:	sub    al,0x2c
  4206b8:	outs   dx,DWORD PTR ds:[esi]
  4206b9:	cmp    BYTE PTR [edi-0x78],al
  4206bc:	or     al,0x2e
  4206be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4206bf:	sub    BYTE PTR [edx],ah
  4206c1:	and    al,0x7
  4206c3:	fs dec esp
  4206c5:	mov    ecx,es
  4206c7:	js     0x8de63c46
  4206cd:	mov    eax,0x5e7f8054
  4206d2:	jecxz  0x420732
  4206d4:	in     eax,0xa0
  4206d6:	jge    0x420705
  4206d8:	aas    
  4206d9:	xchg   esi,eax
  4206da:	fucomip st,st(7)
  4206dc:	mov    ds:0xd444b37a,al
  4206e1:	mov    al,0xf9
  4206e3:	mov    eax,ds:0x5d0ce9bd
  4206e8:	adc    al,0x31
  4206ea:	test   al,0x2d
  4206ec:	test   DWORD PTR [ecx],ecx
  4206ee:	push   cs
  4206ef:	mov    ebp,0xa87f6bb
  4206f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206f5:	and    eax,0xdca05017
  4206fa:	ja     0x42070d
  4206fc:	mov    edx,0x1ddb38a0
  420701:	stc    
  420702:	and    ch,BYTE PTR [esi-0x7c]
  420705:	sbb    eax,0x36dbd660
  42070a:	loopne 0x420730
  42070c:	cmp    al,0x22
  42070e:	push   ebx
  42070f:	popa   
  420710:	lds    esp,FWORD PTR [edi+0x61]
  420713:	mov    gs,ebp
  420715:	jbe    0x420780
  420717:	jnp    0x420779
  420719:	not    DWORD PTR [ebx+esi*4]
  42071c:	nop
  42071d:	xor    dh,al
  42071f:	cmp    edi,edx
  420721:	xchg   esp,eax
  420722:	cmp    dh,BYTE PTR [ebx]
  420724:	dec    ebp
  420725:	out    dx,eax
  420726:	rol    DWORD PTR [ebx+0x11],1
  420729:	arpl   WORD PTR [esi+edx*8-0x70302cb0],cx
  420730:	loop   0x4207aa
  420732:	mov    ebx,0xc45cf86
  420737:	mov    ebx,0x41f49bd3
  42073c:	sbb    bh,0x60
  42073f:	xor    eax,DWORD PTR [eax-0x78]
  420742:	sar    BYTE PTR [eax],1
  420744:	int    0x7d
  420746:	mov    ebp,0x289c87a2
  42074b:	or     ah,cl
  42074d:	mov    al,ds:0x1153ff30
  420752:	jmp    0x7646:0x8fdbfde7
  420759:	ds jge 0x420791
  42075c:	jb     0x4207b4
  42075e:	sub    BYTE PTR [ecx-0x4c],dh
  420761:	xor    ah,BYTE PTR [ebp-0x2a]
  420764:	icebp  
  420765:	nop
  420766:	cli    
  420767:	(bad)  
  420768:	jecxz  0x420702
  42076a:	add    edx,DWORD PTR ds:0x4d797eae
  420770:	mov    ds:0xb753fb63,al
  420775:	sbb    esp,DWORD PTR [ebp-0x1b00735b]
  42077b:	daa    
  42077c:	mov    edi,0xc88e4c35
  420781:	call   0x43577ecb
  420786:	jb     0x4207ee
  420788:	imul   esp,DWORD PTR [ecx],0x52f6707d
  42078e:	into   
  42078f:	xor    ch,BYTE PTR [edi]
  420791:	sbb    eax,DWORD PTR [ebx]
  420793:	retf   0x5526
  420796:	pop    ds
  420797:	sub    bh,BYTE PTR [ebx+ebp*1-0x17330bd8]
  42079e:	sub    edx,esi
  4207a0:	xor    dl,dl
  4207a2:	pop    ecx
  4207a3:	mov    al,0x40
  4207a5:	cld    
  4207a6:	adc    DWORD PTR [edi+0x49],ebp
  4207a9:	(bad)  
  4207aa:	cld    
  4207ab:	or     BYTE PTR [edi+0x2c2c3ab5],bl
  4207b1:	test   eax,0xef4778d
  4207b6:	or     al,0xcf
  4207b8:	dec    ecx
  4207b9:	mov    ch,ah
  4207bb:	jmp    0x4207f7
  4207bd:	mov    bl,0xa4
  4207bf:	aas    
  4207c0:	mov    esi,0x308592e4
  4207c5:	xor    eax,0x18c22704
  4207ca:	xor    bl,BYTE PTR [ebp-0x29]
  4207cd:	or     DWORD PTR [ebx+0x2470b9a7],edx
  4207d3:	neg    DWORD PTR [ebx-0x28]
  4207d6:	pop    edx
  4207d7:	push   esi
  4207d8:	add    ecx,DWORD PTR [eax+edx*2+0x11]
  4207dc:	sub    DWORD PTR [eax+eiz*4+0x5987deb0],edx
  4207e3:	shl    BYTE PTR [eax-0x7b],0xd6
  4207e7:	mov    dh,0x31
  4207e9:	out    dx,eax
  4207ea:	mov    bh,0x15
  4207ec:	shr    DWORD PTR [ecx+0x16353abf],0xa9
  4207f3:	mov    DWORD PTR [ecx+0x1b802b7d],ebx
  4207f9:	leave  
  4207fa:	sub    BYTE PTR [ecx+edx*8-0x46090239],ch
  420801:	push   edx
  420802:	fmul   QWORD PTR [ebx+0x1a0f9f18]
  420808:	inc    esi
  420809:	xor    BYTE PTR [edx+0x4abeacfe],ch
  42080f:	pop    eax
  420810:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420811:	out    dx,al
  420812:	(bad)  
  420814:	add    edi,DWORD PTR [esi]
  420816:	pop    ds
  420817:	ds shl ebp,0x87
  42081b:	loope  0x4207cd
  42081d:	push   esp
  42081e:	imul   edi,DWORD PTR [eax+0x4c448857],0xffffffd9
  420825:	xor    BYTE PTR [edx-0x71bf517b],ah
  42082b:	jbe    0x420860
  42082d:	push   esi
  42082e:	xchg   ebp,eax
  42082f:	call   0x27368040
  420834:	and    esp,DWORD PTR [esi]
  420836:	out    0xf,eax
  420838:	ds xor esi,edx
  42083b:	mov    edx,0x3dc6b5dd
  420840:	mov    edx,0x82ca6f21
  420845:	adc    esi,DWORD PTR [ebp+0x6c]
  420848:	xor    cl,BYTE PTR [eax-0x1b]
  42084b:	push   eax
  42084c:	mov    esp,0x30992399
  420851:	repz aas 
  420853:	xlat   BYTE PTR ds:[ebx]
  420854:	aad    0x10
  420856:	sbb    BYTE PTR [eax+0x73ae4554],dh
  42085c:	sub    eax,0x2dd05e63
  420861:	stos   BYTE PTR es:[edi],al
  420862:	pusha  
  420863:	(bad)  
  420864:	adc    al,0x2c
  420866:	retf   
  420867:	mov    edx,0xebad99c5
  42086c:	dec    edx
  42086d:	in     eax,dx
  42086e:	or     DWORD PTR [ecx-0x7f],esi
  420871:	es push eax
  420873:	(bad)  
  420874:	je     0x420854
  420876:	stos   DWORD PTR es:[edi],eax
  420877:	mov    edx,0xe72ec5ba
  42087c:	loopne 0x420844
  42087e:	dec    ebp
  42087f:	mov    ebp,0x3940b08c
  420884:	test   ah,ah
  420886:	inc    esi
  420887:	or     ebx,DWORD PTR [ebp+0x3c]
  42088a:	xor    bh,cl
  42088c:	pop    ebp
  42088d:	dec    BYTE PTR [eax-0x77]
  420890:	jno    0x4208bd
  420892:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420893:	xchg   ebp,eax
  420894:	push   ecx
  420895:	xor    al,cl
  420897:	lea    ebx,[esi+0x29344a8c]
  42089d:	lea    ebp,[ebp+0x29]
  4208a0:	mov    al,0x8f
  4208a2:	pop    edi
  4208a3:	sub    al,0x45
  4208a5:	and    BYTE PTR [ebx],bh
  4208a7:	fsubrp st(4),st
  4208a9:	inc    ebx
  4208aa:	push   esp
  4208ab:	retf   0x5ddd
  4208ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4208af:	popa   
  4208b0:	xlat   BYTE PTR ds:[ebx]
  4208b1:	jl     0x4208f7
  4208b3:	popa   
  4208b4:	jno    0x420909
  4208b6:	ficomp WORD PTR [eax-0x32]
  4208b9:	mov    ch,BYTE PTR [edx]
  4208bb:	mov    ds:0xe42efd97,al
  4208c0:	add    DWORD PTR [eax],esi
  4208c2:	sub    al,0xfe
  4208c4:	push   0x27aeee5b
  4208c9:	ins    DWORD PTR es:[edi],dx
  4208ca:	dec    ecx
  4208cb:	sbb    eax,0x824c231
  4208d0:	les    edi,FWORD PTR [esi-0x54292ef4]
  4208d6:	dec    ebx
  4208d7:	test   BYTE PTR [ebx+eax*8],dh
  4208da:	je     0x42091e
  4208dc:	add    DWORD PTR [edx+eax*2+0x72],eax
  4208e0:	outs   dx,DWORD PTR ds:[esi]
  4208e1:	loopne 0x4208b8
  4208e3:	mov    edx,0xf4e9598b
  4208e8:	mov    esi,0x50ea43a4
  4208ed:	and    BYTE PTR [edx-0x597a6ada],al
  4208f3:	dec    edi
  4208f4:	test   eax,0x61f23864
  4208f9:	fucom  st(2)
  4208fb:	jl     0x420949
  4208fd:	jle    0x4208f6
  4208ff:	push   esp
  420900:	loopne 0x42096e
  420902:	jne    0x420912
  420904:	ins    DWORD PTR es:[edi],dx
  420905:	sti    
  420906:	dec    ebx
  420907:	dec    ecx
  420908:	imul   ebx,DWORD PTR [esi],0x7
  42090b:	in     al,0xbc
  42090d:	inc    esi
  42090e:	scas   eax,DWORD PTR es:[edi]
  42090f:	je     0x420951
  420911:	sar    DWORD PTR [esi],cl
  420913:	or     eax,0x72b5fa66
  420918:	enter  0xf69b,0x66
  42091c:	popf   
  42091d:	mov    esi,DWORD PTR [ebp+0x135ac6a0]
  420923:	ret    
  420924:	jle    0x4208fd
  420926:	mov    bh,0x28
  420928:	mov    esi,0x9fffcdb6
  42092d:	out    dx,eax
  42092e:	dec    edi
  42092f:	sbb    BYTE PTR [ebx-0x25dc355],0x31
  420936:	aas    
  420937:	pop    es
  420938:	jo     0x4209b4
  42093a:	idiv   BYTE PTR [esi+ebp*4]
  42093d:	stos   DWORD PTR es:[edi],eax
  42093e:	inc    edx
  42093f:	out    dx,eax
  420940:	mov    bl,0x22
  420943:	sub    al,0xe3
  420945:	bswap  esi
  420947:	cmp    DWORD PTR [ebx-0x2b],eax
  42094a:	es cmp eax,0x9247b29d
  420950:	or     esi,DWORD PTR [ebx-0x1f]
  420953:	dec    edi
  420954:	adc    al,0x40
  420956:	stos   BYTE PTR es:[edi],al
  420957:	mov    esp,0x70c2ba1c
  42095c:	jns    0x420910
  42095e:	push   ds
  42095f:	push   ss
  420960:	cdq    
  420961:	xor    DWORD PTR [edi-0x17],esi
  420964:	mul    ah
  420966:	lea    edx,[ebx]
  420968:	arpl   WORD PTR [ebx+esi*2-0x41],bx
  42096c:	push   edx
  42096d:	stc    
  42096e:	sub    al,0x94
  420970:	cmp    ch,BYTE PTR [edx]
  420972:	push   0xfffffff2
  420974:	or     eax,0x733d2f35
  420979:	cmc    
  42097a:	adc    al,0xc7
  42097c:	jo     0x420903
  42097e:	mov    DWORD PTR [edx],ebp
  420980:	jno    0x420905
  420982:	pop    esp
  420983:	stos   DWORD PTR es:[edi],eax
  420984:	jmp    0xf5f8a4a0
  420989:	mov    ah,0x16
  42098b:	and    al,0x67
  42098d:	jae    0x4209d2
  42098f:	imul   ebx,DWORD PTR [ebx+0x6b],0x23620f4e
  420996:	push   esi
  420997:	sbb    al,0x62
  420999:	sbb    ebp,eax
  42099b:	pop    eax
  42099c:	dec    esi
  42099d:	push   ebp
  42099e:	cmp    al,0x2b
  4209a0:	mov    ds:0x27cc732d,eax
  4209a5:	stos   BYTE PTR es:[edi],al
  4209a6:	out    0x4c,al
  4209a8:	push   eax
  4209a9:	dec    ebp
  4209aa:	je     0x420961
  4209ac:	lahf   
  4209ad:	dec    ebx
  4209ae:	mov    bl,0x5d
  4209b0:	fnstcw WORD PTR [ebp-0x6251f366]
  4209b6:	push   esi
  4209b7:	ret    
  4209b8:	cmp    eax,0xa47b0a8a
  4209bd:	popf   
  4209be:	sbb    al,0x23
  4209c0:	cld    
  4209c1:	sub    ebp,DWORD PTR [edi]
  4209c3:	cmc    
  4209c4:	push   ds
  4209c5:	lds    esi,FWORD PTR [eax]
  4209c7:	fwait
  4209c8:	jo     0x420997
  4209ca:	inc    edx
  4209cb:	test   BYTE PTR [edx-0x6c],bl
  4209ce:	icebp  
  4209cf:	xchg   ebp,eax
  4209d0:	mov    DWORD PTR ds:0x32f4e68,eax
  4209d6:	ret    
  4209d7:	jp     0x420a09
  4209d9:	loop   0x420993
  4209db:	jmp    0x5fef77a2
  4209e0:	mov    eax,eax
  4209e2:	xchg   esp,eax
  4209e3:	push   edi
  4209e4:	inc    DWORD PTR ds:0x150d2b43
  4209ea:	lds    ecx,FWORD PTR [edx]
  4209ec:	in     al,0x73
  4209ee:	mov    edx,0x852a2b9
  4209f3:	aas    
  4209f4:	push   0x4e
  4209f6:	mov    eax,0x1ffa6148
  4209fb:	or     BYTE PTR [edi-0x42711b77],bl
  420a01:	or     cl,ch
  420a03:	scas   eax,DWORD PTR es:[edi]
  420a04:	aas    
  420a05:	mov    esi,0xd6a6ebc5
  420a0b:	ss icebp 
  420a0d:	dec    edx
  420a0e:	imul   esi,DWORD PTR [ebp-0x64a4915b],0xffffffd5
  420a15:	dec    eax
  420a16:	xchg   ebx,eax
  420a17:	(bad)  
  420a18:	ja     0x420a42
  420a1a:	or     esp,DWORD PTR [ecx+0x14]
  420a1d:	mov    al,0x26
  420a1f:	popa   
  420a20:	fidiv  DWORD PTR [ecx+eax*2+0x538f8782]
  420a27:	mov    al,ds:0x80f0164a
  420a2c:	lahf   
  420a2d:	pop    eax
  420a2e:	xlat   BYTE PTR ds:[ebx]
  420a2f:	mov    ecx,0xe80e04d8
  420a34:	fisubr WORD PTR [ecx]
  420a36:	mov    cl,0x8e
  420a38:	mov    ebp,0x9fd5bc33
  420a3d:	hlt    
  420a3e:	mov    ebx,DWORD PTR [ebp+0x74]
  420a41:	add    bl,BYTE PTR [ecx+0x6c4fd4d2]
  420a47:	or     ebp,DWORD PTR [esi]
  420a49:	push   ds
  420a4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a4b:	xor    bl,BYTE PTR [ebp-0x7f]
  420a4e:	push   esp
  420a4f:	xchg   ecx,eax
  420a50:	test   BYTE PTR [eax+0xd3ac61],al
  420a56:	ja     0x420a7a
  420a58:	std    
  420a59:	pushf  
  420a5a:	pop    ss
  420a5b:	pop    ebp
  420a5c:	outs   dx,DWORD PTR ds:[esi]
  420a5d:	test   edx,ecx
  420a5f:	call   0x9dd1:0x7f9887c3
  420a66:	mov    bh,0xa1
  420a68:	imul   esi,DWORD PTR [edx+0x48],0xb25f58b4
  420a6f:	mov    DWORD PTR ds:0x19f0410,ebp
  420a75:	sti    
  420a76:	mov    ebx,0xee964536
  420a7b:	jmp    0x420a81
  420a7d:	mov    BYTE PTR [eax+esi*4-0x4c],dl
  420a81:	aas    
  420a82:	push   ebp
  420a83:	xor    DWORD PTR [edi-0x7d],ecx
  420a86:	jg     0x420a81
  420a88:	mov    eax,ds:0x8f226be8
  420a8d:	ds push ds
  420a8f:	es (bad) 
  420a91:	stos   DWORD PTR es:[edi],eax
  420a92:	xor    eax,DWORD PTR [ebx]
  420a94:	jnp    0x420a56
  420a96:	mul    BYTE PTR [ebx+eax*4-0x73]
  420a9a:	popa   
  420a9b:	xor    ebx,eax
  420a9d:	pop    ecx
  420a9e:	lods   al,BYTE PTR ds:[esi]
  420a9f:	ins    BYTE PTR es:[edi],dx
  420aa0:	jp     0x420ac2
  420aa2:	cmc    
  420aa3:	sbb    BYTE PTR ss:[esi],ch
  420aa6:	iret   
  420aa7:	or     al,0xe7
  420aa9:	das    
  420aaa:	mov    dh,0x67
  420aac:	xchg   edi,eax
  420aae:	dec    ebp
  420aaf:	ret    
  420ab0:	in     eax,dx
  420ab1:	mov    dl,0x3c
  420ab3:	lods   al,BYTE PTR ds:[esi]
  420ab4:	dec    ecx
  420ab5:	int    0x82
  420ab7:	jecxz  0x420ad0
  420ab9:	xor    ebx,edx
  420abb:	daa    
  420abc:	mov    ?,WORD PTR ds:0x9bf9fc78
  420ac2:	adc    DWORD PTR [ecx-0x18],ecx
  420ac5:	cwde   
  420ac6:	jns    0x420a86
  420ac8:	add    bl,BYTE PTR [eax+eax*2+0x1]
  420acc:	mov    ebx,0xc7ad79d5
  420ad1:	pop    ss
  420ad2:	add    ch,BYTE PTR [ebx-0x6]
  420ad5:	dec    esi
  420ad6:	push   esi
  420ad7:	fadd   DWORD PTR [ebx+0xa7503f5]
  420add:	mov    al,0x60
  420adf:	mov    al,0x70
  420ae1:	push   ebx
  420ae2:	rcr    DWORD PTR [edi-0x21],cl
  420ae5:	and    BYTE PTR [ecx-0x47023ccb],dh
  420aeb:	ins    BYTE PTR es:[edi],dx
  420aec:	pop    es
  420aed:	mov    eax,es:0x4cb75c6d
  420af3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420af4:	int3   
  420af5:	retf   
  420af6:	int3   
  420af7:	sub    BYTE PTR [edi],dh
  420af9:	mov    ?,WORD PTR [ebx]
  420afb:	add    esp,DWORD PTR [ebx]
  420afd:	fwait
  420afe:	int3   
  420aff:	stc    
  420b00:	xor    BYTE PTR [eax+0x31],dl
  420b03:	imul   ch
  420b05:	mov    edx,0x299278bc
  420b0a:	sub    ah,BYTE PTR [esi]
  420b0c:	loop   0x420afc
  420b0e:	gs popa 
  420b10:	add    dl,BYTE PTR [esi+0x6e17432c]
  420b16:	jns    0x420b82
  420b18:	xchg   edx,eax
  420b19:	push   esi
  420b1a:	data16 or bl,dh
  420b1d:	lahf   
  420b1e:	jno    0x420ac6
  420b20:	mov    dh,0x9b
  420b22:	push   esi
  420b23:	and    ah,BYTE PTR [eax]
  420b25:	je     0x420b8f
  420b27:	fimul  WORD PTR [edi]
  420b29:	cli    
  420b2a:	sub    al,0xad
  420b2c:	pop    esi
  420b2d:	gs (bad) 
  420b2f:	(bad)  
  420b30:	xchg   esp,eax
  420b31:	shr    BYTE PTR [edi],cl
  420b33:	jge    0x420b66
  420b35:	cmp    ecx,DWORD PTR [ecx-0x62]
  420b38:	or     DWORD PTR [edx],eax
  420b3a:	clc    
  420b3b:	daa    
  420b3c:	dec    esp
  420b3d:	or     DWORD PTR [ebx+0x7b54ace6],edx
  420b43:	jne    0x420b64
  420b45:	es cmp eax,0xb2d3c7f3
  420b4b:	ror    BYTE PTR [esp+esi*1],cl
  420b4e:	jmp    0xbe6efa3b
  420b53:	or     al,0xea
  420b55:	inc    ax
  420b57:	push   ds
  420b58:	cmp    eax,0xe6e4a3b4
  420b5d:	stos   BYTE PTR es:[edi],al
  420b5e:	dec    esi
  420b5f:	jecxz  0x420ae3
  420b61:	or     DWORD PTR [esi-0x7f],esi
  420b64:	loopne 0x420bd8
  420b66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b67:	jnp    0x420b15
  420b69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b6a:	adc    al,0x12
  420b6c:	int    0x68
  420b6e:	popa   
  420b6f:	xchg   edx,eax
  420b70:	fild   DWORD PTR ds:0xb01ce710
  420b76:	shl    BYTE PTR [esi+0x9933774],cl
  420b7c:	clc    
  420b7d:	dec    ebp
  420b7e:	jo     0x420b0e
  420b80:	outs   dx,DWORD PTR ds:[esi]
  420b81:	and    BYTE PTR [eax-0x2a],dl
  420b84:	fiadd  WORD PTR ds:0xeb2874f1
  420b8a:	dec    ecx
  420b8b:	and    eax,0x77fbb3af
  420b90:	aaa    
  420b91:	mov    DWORD PTR [eax],ecx
  420b93:	mov    eax,0x4383a429
  420b98:	mov    al,0x2
  420b9a:	ficom  WORD PTR [ebp-0x6a77e9ed]
  420ba0:	out    dx,eax
  420ba1:	in     eax,0x18
  420ba3:	lock cmp ah,al
  420ba6:	push   0x7adbd8cc
  420bab:	scas   eax,DWORD PTR es:[edi]
  420bac:	xchg   DWORD PTR [edi+edx*4],eax
  420baf:	in     al,dx
  420bb0:	neg    DWORD PTR ds:0xec3b240e
  420bb6:	pop    eax
  420bb7:	adc    BYTE PTR [ecx+0x482ad5bf],cl
  420bbd:	and    dl,BYTE PTR [ebp-0x8]
  420bc0:	rcr    dl,cl
  420bc2:	add    al,0x91
  420bc4:	cmp    DWORD PTR [esi+0x5f6ce8b5],edx
  420bca:	in     al,dx
  420bcb:	je     0x420c49
  420bcd:	jmp    0x420b7c
  420bcf:	sti    
  420bd0:	fld    st(1)
  420bd2:	ja     0x420bce
  420bd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420bd5:	je     0x420b69
  420bd7:	xchg   edi,eax
  420bd8:	pop    eax
  420bd9:	xlat   BYTE PTR ds:[ebx]
  420bda:	xchg   al,al
  420bdc:	(bad)  
  420bdd:	mov    ah,0x7a
  420bdf:	clc    
  420be0:	fsubrp st(5),st
  420be2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420be3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420be4:	jge    0x420c5f
  420be6:	pop    esp
  420be7:	add    bl,cl
  420be9:	imul   eax,DWORD PTR [edi],0xaae92790
  420bef:	ud2    
  420bf1:	jle    0x420c33
  420bf3:	mov    dh,0xb4
  420bf5:	mov    esi,0x8ec1c1cc
  420bfa:	stc    
  420bfb:	(bad)  
  420bfc:	push   eax
  420bfd:	or     ebx,DWORD PTR [esi-0x6b621828]
  420c03:	mov    WORD PTR [edx-0x257d8f70],fs
  420c09:	xchg   ecx,eax
  420c0a:	dec    esi
  420c0b:	xchg   ebp,eax
  420c0c:	fmul   DWORD PTR [esi-0x4b]
  420c0f:	sbb    al,0xb7
  420c11:	fidivr WORD PTR [eiz*8-0x2533963f]
  420c18:	dec    ebp
  420c19:	lahf   
  420c1a:	and    eax,0xe6aa0d0f
  420c1f:	push   edi
  420c20:	inc    eax
  420c21:	dec    esp
  420c22:	mov    al,0xca
  420c24:	or     eax,DWORD PTR [edx+0x6de6ec7]
  420c2a:	or     al,0x82
  420c2c:	xchg   edx,eax
  420c2d:	ret    0xe364
  420c30:	mov    DWORD PTR [eax],0xc776433e
  420c36:	cmp    BYTE PTR [esi-0xf],ch
  420c39:	imul   edi,DWORD PTR [edi],0xe28b3a1e
  420c3f:	or     ch,BYTE PTR [edi+0x46045869]
  420c45:	aam    0x54
  420c47:	dec    esi
  420c48:	dec    BYTE PTR ds:0x24c83c1b
  420c4e:	inc    edi
  420c4f:	lahf   
  420c50:	out    0xa9,eax
  420c52:	and    eax,0x61f19967
  420c57:	dec    edx
  420c58:	imul   esi,edx,0x1d
  420c5b:	sub    ecx,DWORD PTR [eax]
  420c5d:	dec    edx
  420c5e:	fstp   TBYTE PTR [ebx+ecx*2+0x52]
  420c62:	inc    edx
  420c63:	cmp    DWORD PTR [ecx-0x4604f659],edx
  420c69:	lea    esi,[edi-0x1b]
  420c6c:	sar    eax,0x59
  420c6f:	shl    DWORD PTR [esp+ebp*1+0x587f1aac],0xdc
  420c77:	(bad)
  420c7b:	(bad)  
  420c7c:	repz pop ds
  420c7e:	imul   esi,ebp,0xffffff84
  420c81:	pop    esp
  420c82:	fist   WORD PTR [esi]
  420c84:	or     eax,0xe41a1160
  420c89:	add    cl,BYTE PTR [esi-0x37fc886]
  420c8f:	cmp    BYTE PTR [ecx],ch
  420c91:	repnz enter 0x7fc0,0xe9
  420c96:	push   edx
  420c97:	push   ss
  420c98:	(bad)  
  420c9a:	cli    
  420c9b:	clc    
  420c9c:	jmp    0x420ca3
  420c9e:	sbb    ah,0xfb
  420ca1:	adc    eax,DWORD PTR [ecx-0x1dbd7b75]
  420ca7:	add    DWORD PTR [edx-0x52],ebp
  420caa:	mov    gs,WORD PTR [esp+ecx*2]
  420cad:	cwde   
  420cae:	jno    0x420c74
  420cb0:	inc    eax
  420cb1:	jp     0x420cae
  420cb3:	or     BYTE PTR [eax-0x27752273],dl
  420cb9:	mov    BYTE PTR [ebp-0x1d44bd7e],dl
  420cbf:	mov    dh,0x24
  420cc1:	into   
  420cc2:	mov    ch,0xbe
  420cc4:	test   BYTE PTR [ecx-0x66],cl
  420cc7:	sub    bh,BYTE PTR [eax]
  420cc9:	sub    DWORD PTR [ebx+0x1935d167],0x10
  420cd0:	sbb    al,0x92
  420cd2:	sub    esp,DWORD PTR [edx-0x30a95036]
  420cd8:	pop    edx
  420cd9:	dec    edi
  420cda:	addr16 pop eax
  420cdc:	xchg   DWORD PTR [ecx+0x2c],ebp
  420cdf:	shr    DWORD PTR [eax-0x44],1
  420ce2:	shl    DWORD PTR [ebx+0x77cdaa35],cl
  420ce8:	mov    edx,0xa39376
  420ced:	test   eax,0xad5aa500
  420cf2:	jne    0x420d27
  420cf4:	retf   0xbf19
  420cf7:	hlt    
  420cf8:	lods   al,BYTE PTR ds:[esi]
  420cf9:	mov    ds:0x7abdcd3d,al
  420cfe:	enter  0xb812,0x58
  420d02:	ja     0x420d5a
  420d04:	sti    
  420d05:	mov    al,ds:0xd4005e79
  420d0a:	jle    0x420cef
  420d0c:	push   ecx
  420d0d:	jg     0x420d8a
  420d0f:	fidivr WORD PTR [edx+0x177030f5]
  420d15:	mov    dh,BYTE PTR [eax+0x56]
  420d18:	inc    ebx
  420d19:	pop    ebx
  420d1a:	and    BYTE PTR [ebx+0xa],bl
  420d1d:	push   edi
  420d1e:	xor    al,0x51
  420d20:	add    eax,0x605f334d
  420d25:	jne    0x420d92
  420d27:	or     eax,0xc3fe6cb9
  420d2c:	(bad)  
  420d2d:	jp     0x420d3f
  420d2f:	shl    BYTE PTR [eax],cl
  420d31:	jbe    0x420d2d
  420d33:	(bad)
  420d36:	pusha  
  420d37:	lock push edi
  420d39:	xor    DWORD PTR [esi+0x3dd66a7a],0x53b21868
  420d43:	pop    ecx
  420d44:	mul    DWORD PTR [ebp+0x7544821d]
  420d4a:	retf   0xcbfe
  420d4d:	inc    ebp
  420d4e:	cld    
  420d4f:	repnz out dx,al
  420d51:	jge    0x420d0a
  420d53:	pop    ebp
  420d54:	dec    esi
  420d55:	imul   edx,DWORD PTR [ebp-0x32fcc1b1],0x54
  420d5c:	add    DWORD PTR [esi],edi
  420d5e:	mov    DWORD PTR [ebp+0x7e871926],edx
  420d64:	sub    BYTE PTR [edx+0x20],dl
  420d67:	mov    dl,0xa4
  420d69:	mov    al,ds:0x64dfa78d
  420d6e:	mov    eax,ds:0x287d9b86
  420d73:	or     ch,cl
  420d75:	sti    
  420d76:	je     0x420d98
  420d78:	push   es
  420d79:	adc    dh,al
  420d7b:	xchg   ebx,eax
  420d7c:	pop    esi
  420d7d:	cmp    al,0xfb
  420d7f:	pextrw ecx,(bad),0xc5
  420d81:	mov    ?,WORD PTR [edi]
  420d83:	jmp    0x420df9
  420d85:	dec    esp
  420d86:	shr    DWORD PTR [esi-0x77],cl
  420d89:	cmp    eax,0xc44da980
  420d8e:	push   esi
  420d8f:	mov    ch,BYTE PTR [ecx+edi*4-0x2b]
  420d93:	cmp    eax,0x92a872ad
  420d98:	jp     0x420d87
  420d9a:	jns    0x420d1c
  420d9c:	adc    BYTE PTR [esi+0x67],dh
  420d9f:	(bad)  
  420da0:	retf   0xff6f
  420da3:	inc    edx
  420da4:	out    0x1c,al
  420da6:	fdivr  QWORD PTR [eax-0x2c]
  420da9:	inc    ecx
  420daa:	adc    esi,DWORD PTR [edi+0x5e]
  420dad:	call   0x5d06:0x725dc85b
  420db4:	mov    gs,WORD PTR [edx+0x1d]
  420db7:	push   ecx
  420db8:	mov    eax,0x5bd3d36e
  420dbd:	ja     0x420db6
  420dbf:	in     eax,dx
  420dc0:	inc    BYTE PTR [edx+0x3afaa681]
  420dc6:	jl     0x420e0f
  420dc8:	scas   al,BYTE PTR es:[edi]
  420dc9:	fwait
  420dca:	jle    0x420e18
  420dcc:	loop   0x420e07
  420dce:	cli    
  420dcf:	jno    0x420e22
  420dd1:	jmp    ebp
  420dd3:	fisub  WORD PTR [edi]
  420dd5:	jmp    0x7809e89b
  420dda:	pop    ebp
  420ddb:	into   
  420ddc:	xchg   ecx,eax
  420ddd:	jo     0x420df0
  420ddf:	addr16 or edi,edx
  420de2:	add    BYTE PTR [esi+0x5d],0x82
  420de6:	repnz jmp 0xc4a4:0xe1a4264a
  420dee:	fisub  DWORD PTR [esi-0x1388ea9b]
  420df4:	fist   DWORD PTR [esi+0x67]
  420df7:	pusha  
  420df8:	(bad)  
  420df9:	clc    
  420dfa:	xchg   ebx,eax
  420dfb:	xchg   ecx,eax
  420dfc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420dfe:	fwait
  420dff:	cmp    al,0xdc
  420e01:	out    0x63,eax
  420e03:	cld    
  420e04:	xlat   BYTE PTR ds:[ebx]
  420e05:	jmp    0xa5f5:0x453ae761
  420e0c:	in     eax,dx
  420e0d:	rcr    esi,cl
  420e0f:	xor    al,0xb7
  420e11:	std    
  420e12:	and    dh,bh
  420e14:	test   eax,0x2d5ab8db
  420e19:	fmul   st(4),st
  420e1b:	aas    
  420e1c:	cwde   
  420e1d:	or     esp,DWORD PTR [ebx]
  420e1f:	xchg   edi,eax
  420e20:	push   esi
  420e21:	pop    edi
  420e22:	int3   
  420e23:	clc    
  420e24:	retf   0xa4ab
  420e27:	ficomp WORD PTR gs:0xc16bfff9
  420e2e:	push   edi
  420e2f:	push   eax
  420e30:	adc    eax,0xe9ce502c
  420e35:	lods   eax,DWORD PTR ds:[esi]
  420e36:	fcomp  DWORD PTR [edx]
  420e38:	jnp    0x420de4
  420e3a:	push   ecx
  420e3b:	jmp    0x68374e9a
  420e40:	push   edx
  420e41:	sbb    esp,DWORD PTR [ebx+0x15]
  420e44:	dec    edx
  420e45:	adc    eax,0xf5ec453d
  420e4a:	mov    al,ds:0x2fd8dbeb
  420e4f:	mov    dl,0x29
  420e51:	fimul  WORD PTR ds:0x529788d0
  420e57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e58:	inc    eax
  420e59:	aad    0x71
  420e5b:	shr    BYTE PTR [edi],cl
  420e5d:	aad    0x8b
  420e5f:	adc    DWORD PTR [edi+0x72c9fd5],eax
  420e65:	push   eax
  420e66:	mov    esi,0xfc29ed0b
  420e6b:	mov    cl,0x8c
  420e6d:	push   edi
  420e6e:	std    
  420e6f:	fimul  WORD PTR ds:0x275b9e00
  420e75:	pop    es
  420e76:	stos   DWORD PTR es:[edi],eax
  420e77:	xchg   edi,eax
  420e78:	pop    ebp
  420e79:	pop    edx
  420e7a:	sbb    bh,ah
  420e7c:	adc    dl,al
  420e7e:	or     al,0x5c
  420e80:	pop    ecx
  420e81:	push   cs
  420e82:	xor    al,0x68
  420e84:	mov    ds:0xad653ee1,eax
  420e89:	cmp    esp,DWORD PTR [edi-0x303436d3]
  420e8f:	add    ecx,0xffffffeb
  420e92:	xor    eax,0xcbe32499
  420e97:	test   al,0xfb
  420e99:	addr16 pop eax
  420e9b:	loop   0x420e61
  420e9d:	pop    es
  420e9e:	add    DWORD PTR [ebx-0xf5bc3e],eax
  420ea4:	mov    eax,ds:0xfb97d5ee
  420ea9:	sbb    eax,edx
  420eab:	stos   DWORD PTR es:[edi],eax
  420eac:	scas   al,BYTE PTR es:[edi]
  420ead:	enter  0x97c7,0x4
  420eb1:	push   ebx
  420eb2:	mov    bl,0x23
  420eb4:	fwait
  420eb5:	mov    bl,0x19
  420eb7:	push   ebx
  420eb8:	mov    ebx,0x82901267
  420ebd:	cld    
  420ebe:	ret    
  420ebf:	loop   0x420f2b
  420ec1:	push   ebx
  420ec2:	sub    bl,bl
  420ec4:	sbb    al,0xf7
  420ec6:	jmp    0x4365d186
  420ecb:	iret   
  420ecc:	and    ebp,esi
  420ece:	pop    edx
  420ecf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ed0:	pop    ecx
  420ed1:	mov    ebp,0x745617ac
  420ed6:	sub    DWORD PTR [ebx],ebp
  420ed8:	in     eax,dx
  420ed9:	iret   
  420eda:	jp     0x420f24
  420edc:	sub    BYTE PTR [edi+0x32],bl
  420edf:	ins    BYTE PTR es:[edi],dx
  420ee0:	jecxz  0x420eda
  420ee2:	mov    ah,BYTE PTR [ebx+0x4d]
  420ee5:	adc    DWORD PTR [eax],eax
  420ee7:	pop    ebx
  420ee8:	outs   dx,BYTE PTR ds:[esi]
  420ee9:	or     eax,0x2c63ecfc
  420eee:	mov    gs,WORD PTR [ebx-0x4fa6cf62]
  420ef4:	jns    0x420ef9
  420ef6:	sub    BYTE PTR [edx+0x53],bh
  420ef9:	fnstcw WORD PTR ds:0x25da89f7
  420eff:	cmp    DWORD PTR [eax-0x59d0a9a5],edx
  420f05:	ficom  WORD PTR [ebx-0x64]
  420f08:	aaa    
  420f09:	xor    edx,ecx
  420f0b:	jl     0x420f3b
  420f0d:	add    ebx,DWORD PTR [esi-0x79]
  420f10:	shl    BYTE PTR [edi],1
  420f12:	xchg   esp,eax
  420f13:	sub    BYTE PTR [ecx-0x6ae2182f],bh
  420f19:	pop    esi
  420f1a:	push   DWORD PTR [ebx+0x17]
  420f1d:	fnstcw WORD PTR [ebx+0x3d916a45]
  420f23:	imul   ebx,ebx,0x4c
  420f26:	xchg   edi,eax
  420f27:	jmp    0x8bdbfd6e
  420f2c:	in     al,0x7d
  420f2e:	stos   DWORD PTR es:[edi],eax
  420f2f:	push   edx
  420f30:	(bad)  [edx-0xa8f746a]
  420f36:	(bad)  
  420f38:	pop    ss
  420f39:	sub    eax,0x82d4eb64
  420f3e:	cli    
  420f3f:	ins    DWORD PTR es:[edi],dx
  420f40:	xor    DWORD PTR [edi-0x5c4050da],0xd80098a4
  420f4a:	xor    al,0x48
  420f4c:	fldcw  WORD PTR [edi-0x64]
  420f4f:	call   0x12d0:0x6f5761ce
  420f56:	jb     0x420fa5
  420f58:	and    DWORD PTR [edx-0x1bed47d2],0xcedef80b
  420f62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f63:	sbb    DWORD PTR [ebp-0x3744c651],eax
  420f69:	mul    BYTE PTR [edi+0x33]
  420f6c:	xchg   edi,eax
  420f6d:	stos   BYTE PTR es:[edi],al
  420f6e:	sub    eax,0x584b92f3
  420f73:	and    al,0x81
  420f75:	fwait
  420f76:	xchg   esp,eax
  420f77:	dec    edi
  420f78:	loopne 0x420f22
  420f7a:	fnsave [ebx-0x79052047]
  420f80:	mov    ds:0xd32ab61a,eax
  420f85:	push   ebx
  420f86:	ret    
  420f87:	push   eax
  420f88:	cmp    eax,DWORD PTR [ecx-0x2b]
  420f8b:	fst    st(7)
  420f8d:	in     al,dx
  420f8e:	cmp    eax,0x9ad5087a
  420f93:	in     eax,dx
  420f94:	cmp    eax,0xc58e97d7
  420f99:	data16 jae 0x420f35
  420f9c:	sar    DWORD PTR [eax-0x6],1
  420f9f:	xchg   ebp,eax
  420fa0:	sbb    cl,BYTE PTR [ecx-0xf]
  420fa3:	push   esi
  420fa4:	add    eax,esp
  420fa6:	xchg   esi,eax
  420fa7:	pushf  
  420fa8:	mov    bh,0xb4
  420faa:	mov    dh,0xc8
  420fac:	pusha  
  420fad:	sub    BYTE PTR [esi-0x5e],dh
  420fb0:	rcr    DWORD PTR [ebx-0x72],0xbd
  420fb4:	xchg   ebx,eax
  420fb5:	pusha  
  420fb6:	ins    BYTE PTR es:[edi],dx
  420fb7:	popa   
  420fb8:	in     eax,0xc6
  420fba:	mov    esi,0xb176cc2d
  420fbf:	add    al,0x74
  420fc1:	inc    esi
  420fc2:	push   ebp
  420fc3:	dec    dx
  420fc5:	ffree  st(2)
  420fc7:	mov    eax,0xcf891674
  420fcc:	inc    ebx
  420fcd:	mov    eax,0x2eb1cd91
  420fd2:	test   al,0xc0
  420fd4:	rol    BYTE PTR [ecx],1
  420fd6:	mov    edx,0x98f431b8
  420fdb:	outs   dx,DWORD PTR ds:[esi]
  420fdc:	mov    BYTE PTR [esi+0xff1f427],dh
  420fe2:	test   ebp,0x8e6558a8
  420fe8:	push   es
  420fe9:	hlt    
  420fea:	mov    dh,0xc6
  420fec:	xor    BYTE PTR [edx+0x1dd71fa],dh
  420ff2:	dec    ecx
  420ff3:	lds    eax,FWORD PTR [esp+ebx*1]
  420ff6:	fdivp  st(6),st
  420ff8:	pop    edi
  420ff9:	xchg   edx,eax
  420ffa:	or     cl,0xd9
  420ffd:	cmp    BYTE PTR [esi+ebp*1-0x28a6710e],ah
  421004:	test   al,0x4b
  421006:	mov    edx,0xd71e1d09
  42100b:	push   ebp
  42100c:	xchg   edi,eax
  42100d:	mov    bh,0xfa
  42100f:	pop    ss
  421010:	(bad)  
  421011:	xor    dh,BYTE PTR [ebp+0xe]
  421014:	push   edi
  421015:	adc    edi,DWORD PTR [ebx+0x1df06e45]
  42101b:	pop    ss
  42101c:	and    ecx,edx
  42101e:	hlt    
  42101f:	cs je  0x42106c
  421022:	jno    0x42104e
  421024:	fs sbb al,0x8d
  421027:	mov    ds:0x34503e,eax
  42102c:	aam    0x32
  42102e:	push   0x75328d8
  421033:	push   ecx
  421034:	mov    edx,DWORD PTR [ecx+eiz*1-0x68ea20e2]
  42103b:	pop    ecx
  42103c:	and    BYTE PTR [ebx-0x1b4ca225],dl
  421042:	out    0x92,al
  421044:	cmp    dl,bh
  421046:	(bad)  
  421047:	dec    esp
  421048:	neg    cl
  42104a:	jp     0x421036
  42104c:	cmp    bh,BYTE PTR [ecx]
  42104e:	cmc    
  42104f:	fadd   st(6),st
  421051:	ins    BYTE PTR es:[edi],dx
  421052:	jecxz  0x4210a5
  421054:	cs push 0x4d
  421057:	fwait
  421058:	push   eax
  421059:	xchg   ebp,eax
  42105a:	inc    eax
  42105b:	adc    BYTE PTR [ecx+0x47f00b53],ah
  421061:	sbb    BYTE PTR [ebp-0x7cb0cfd1],0xb8
  421068:	sar    BYTE PTR [eax],0x9c
  42106b:	lds    edi,FWORD PTR [edx+0x62aaf160]
  421071:	push   0xffffffa9
  421073:	add    eax,0x4718034b
  421078:	call   0xe985677a
  42107d:	push   edx
  42107e:	fisttp QWORD PTR [eax+0x6d]
  421081:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421082:	out    0x20,eax
  421084:	cmp    eax,edx
  421086:	mov    esi,0xb7695f76
  42108b:	add    ebx,DWORD PTR [edi+0x7790aaa2]
  421091:	add    BYTE PTR [esi-0x7a],dh
  421094:	sahf   
  421095:	jp     0x421059
  421097:	jnp    0x42107a
  421099:	stos   BYTE PTR es:[edi],al
  42109a:	cmp    cl,BYTE PTR [edx+eiz*4+0x6e1d05f8]
  4210a1:	push   ds
  4210a2:	sbb    ebx,esp
  4210a4:	adc    BYTE PTR [ebp+ebx*2-0x5c],0x99
  4210a9:	cs ret 
  4210ab:	jge    0x42104d
  4210ad:	jp     0x4210d4
  4210af:	jp     0x421116
  4210b1:	lods   eax,DWORD PTR ds:[esi]
  4210b2:	jmp    0x87ee:0x3d5b9ca8
  4210b9:	ins    BYTE PTR es:[edi],dx
  4210ba:	into   
  4210bb:	mov    cl,0x5a
  4210bd:	out    dx,eax
  4210be:	repz adc edx,DWORD PTR [ebx-0x44b1c637]
  4210c5:	and    al,cl
  4210c7:	mov    ch,0xf5
  4210c9:	das    
  4210ca:	out    0x8,al
  4210cc:	ret    0x7723
  4210cf:	sub    al,0xfc
  4210d1:	pusha  
  4210d2:	sub    al,0x35
  4210d4:	inc    eax
  4210d5:	xor    al,0x94
  4210d7:	xor    eax,0x3035daa2
  4210dc:	fcom   QWORD PTR [ecx]
  4210de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4210df:	mov    edi,edx
  4210e1:	jae    0x421155
  4210e3:	pop    esp
  4210e4:	retf   0x616b
  4210e7:	retf   
  4210e8:	nop
  4210e9:	sbb    eax,0xe5ef0687
  4210ee:	lods   eax,DWORD PTR ds:[esi]
  4210ef:	jl     0x4210ce
  4210f1:	push   ds
  4210f2:	cwde   
  4210f3:	cmp    al,0x68
  4210f5:	or     dl,BYTE PTR [ecx]
  4210f7:	push   ebx
  4210f8:	(bad)  
  4210fa:	std    
  4210fb:	sti    
  4210fc:	sub    esi,ebp
  4210fe:	adc    al,ah
  421100:	pushf  
  421101:	mov    bl,0x5
  421103:	es jns 0x421109
  421106:	xchg   ebx,eax
  421107:	cmp    BYTE PTR [ebp-0x4eead4bc],dl
  42110d:	popa   
  42110e:	pop    esi
  42110f:	mov    al,ds:0x329c643e
  421114:	inc    esi
  421115:	cmp    bl,BYTE PTR [ecx-0x116b4352]
  42111b:	cdq    
  42111c:	or     ah,cl
  42111e:	xor    eax,0x3f656827
  421123:	add    DWORD PTR [ebx+0x954b88],0xffffffd0
  42112a:	stc    
  42112b:	je     0x42112d
  42112d:	mov    BYTE PTR ss:[ebx-0x2189c521],ah
  421134:	jmp    0x3c3a:0xa67bad38
  42113b:	fcomp  QWORD PTR [ebx-0x9dfbb4a]
  421141:	push   esi
  421142:	fist   DWORD PTR [edx+0xf5b3545]
  421148:	inc    edx
  421149:	lods   al,BYTE PTR ds:[esi]
  42114a:	adc    bl,al
  42114c:	fld    st(7)
  42114e:	pop    eax
  42114f:	ss mov dl,0x5a
  421152:	pop    esi
  421153:	mov    dh,0x13
  421155:	aaa    
  421156:	fcom   DWORD PTR [edx-0x7aa78eef]
  42115c:	or     bh,0x85
  42115f:	shr    BYTE PTR [ebp+ecx*8-0x88c7636],cl
  421166:	mov    ebp,0xca026428
  42116b:	or     al,0x65
  42116d:	pop    es
  42116e:	fmul   st,st(2)
  421170:	int3   
  421171:	cs push ecx
  421173:	xor    DWORD PTR [ebx+0x6e],ecx
  421176:	adc    eax,edx
  421178:	pop    eax
  421179:	fisttp WORD PTR [esi-0x6b384b93]
  42117f:	push   esp
  421180:	push   ebp
  421181:	jle    0x42117e
  421183:	pusha  
  421184:	leave  
  421185:	adc    BYTE PTR fs:[edi],0xc
  421189:	jno    0x421158
  42118b:	cs xchg ecx,eax
  42118d:	mov    eax,ds:0xd853705e
  421192:	xchg   esp,eax
  421193:	popf   
  421194:	mov    ds:0x3fe4f943,eax
  421199:	popf   
  42119a:	popa   
  42119b:	lds    ebp,FWORD PTR [ecx]
  42119d:	pusha  
  42119e:	aad    0x7c
  4211a0:	jae    0x4211b0
  4211a2:	fstp   TBYTE PTR [bx+di-0x40]
  4211a6:	cmp    al,0x45
  4211a8:	sub    eax,0xf75d2200
  4211ad:	mov    ebp,0x752a2705
  4211b2:	xor    esp,ebp
  4211b4:	mov    eax,ds:0x26254ac4
  4211b9:	mov    bh,0xfd
  4211bb:	imul   ecx,DWORD PTR [esi+0x34],0x62
  4211bf:	pop    esp
  4211c0:	into   
  4211c1:	cli    
  4211c2:	pop    eax
  4211c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4211c4:	cmp    al,0xa1
  4211c6:	cmp    eax,0xaee74824
  4211cb:	je     0x421193
  4211cd:	or     eax,0xd99c9af5
  4211d2:	push   ebx
  4211d3:	mov    bh,0x3f
  4211d5:	mov    al,bh
  4211d7:	popa   
  4211d8:	cmc    
  4211d9:	fst    DWORD PTR [ebp-0x31]
  4211dc:	push   esi
  4211dd:	lods   eax,DWORD PTR ds:[esi]
  4211de:	ss pop ss
  4211e0:	mov    dl,0xca
  4211e2:	dec    esp
  4211e3:	pop    ecx
  4211e4:	cmp    esp,DWORD PTR [esi-0x2d17c35]
  4211ea:	sbb    bl,BYTE PTR [ecx]
  4211ec:	jns    0x4211be
  4211ee:	sub    BYTE PTR [ebx-0x4],al
  4211f1:	adc    bh,BYTE PTR [edi-0x1]
  4211f4:	iret   
  4211f5:	fcmovbe st,st(6)
  4211f7:	ds out dx,eax
  4211f9:	cmp    al,0x69
  4211fb:	sbb    bh,BYTE PTR ds:0x1f352621
  421201:	ret    0x22e4
  421204:	or     bl,BYTE PTR [edx]
  421206:	fcomp  st(3)
  421208:	popf   
  421209:	and    DWORD PTR [ecx+0x17ca606d],esp
  42120f:	xchg   ebp,eax
  421210:	add    eax,0x38ba3b65
  421215:	cmp    al,BYTE PTR [ebp+0x7731462c]
  42121b:	out    dx,al
  42121c:	stos   DWORD PTR es:[edi],eax
  42121d:	popf   
  42121e:	je     0x42128e
  421220:	shl    ebp,0x33
  421223:	lods   eax,DWORD PTR ds:[esi]
  421224:	pop    eax
  421225:	iret   
  421226:	pop    esp
  421227:	mov    eax,ds:0x56b22bf8
  42122c:	add    bh,BYTE PTR [ebx+0x1b3a9f39]
  421232:	aaa    
  421233:	ss xor al,0x54
  421236:	or     BYTE PTR [ecx+0xd],dl
  421239:	sbb    ebp,DWORD PTR ds:0x7f473584
  42123f:	dec    edx
  421240:	fs and al,0xaa
  421243:	jl     0x4212b3
  421245:	dec    esi
  421246:	test   DWORD PTR [edi+0x38],ecx
  421249:	dec    ebp
  42124a:	push   cs
  42124b:	sub    BYTE PTR [ecx+0x16],ch
  42124e:	dec    ecx
  42124f:	mov    ch,0x31
  421251:	mov    ebx,ds
  421253:	and    eax,edi
  421255:	(bad)  
  421256:	jb     0x421249
  421258:	jge    0x421269
  42125a:	add    al,0xf3
  42125c:	cmp    BYTE PTR [eax-0x31],al
  42125f:	loope  0x42123d
  421261:	and    DWORD PTR [ebx+0x39],edx
  421264:	add    esp,DWORD PTR [edi]
  421266:	dec    edi
  421267:	repz pop ecx
  421269:	mov    ecx,0x31419d4d
  42126e:	test   al,0x24
  421270:	sbb    al,0x7a
  421272:	and    BYTE PTR [ecx+0xc],dh
  421275:	cdq    
  421276:	ss cs jmp 0x4212c9
  42127a:	test   DWORD PTR [esi],ebp
  42127c:	pop    ecx
  42127d:	sbb    ch,bh
  42127f:	shr    BYTE PTR [eax-0x1579f860],0x55
  421286:	push   eax
  421287:	xor    DWORD PTR [ebx-0x6a7ca769],eax
  42128d:	test   al,0x11
  42128f:	jp     0x421228
  421291:	lods   eax,DWORD PTR ds:[esi]
  421292:	sbb    esp,DWORD PTR [ebx]
  421294:	popa   
  421295:	mov    esp,0x493d847f
  42129a:	jle    0x42125e
  42129c:	xchg   ebp,eax
  42129d:	mov    ss,edi
  42129f:	xor    eax,0x24de6717
  4212a4:	jmp    0xff0d4054
  4212a9:	cmp    ah,dl
  4212ab:	stos   BYTE PTR es:[edi],al
  4212ac:	xor    BYTE PTR [edi+0x4b358b3d],ch
  4212b2:	sub    esp,0xf265a4a3
  4212b8:	push   ebp
  4212b9:	jle    0x4212ab
  4212bb:	rol    DWORD PTR [edx-0x71],cl
  4212be:	sub    DWORD PTR [ebx+ebx*8],esi
  4212c1:	in     eax,dx
  4212c2:	xchg   BYTE PTR [esi],dh
  4212c4:	cmp    eax,0x3dfeb290
  4212c9:	aam    0xea
  4212cb:	pop    ecx
  4212cc:	pop    es
  4212cd:	dec    esp
  4212ce:	inc    esi
  4212cf:	mov    BYTE PTR [ebx+0x2f],dh
  4212d2:	aad    0x0
  4212d4:	and    DWORD PTR [ebp-0x74],ebp
  4212d7:	sbb    eax,DWORD PTR [edi-0x11]
  4212da:	or     al,0xa1
  4212dc:	imul   eax,DWORD PTR [edi],0xffffff9c
  4212df:	pop    ebx
  4212e0:	add    ah,BYTE PTR [esi]
  4212e2:	mov    al,ds:0x7d607ab
  4212e7:	icebp  
  4212e8:	inc    esi
  4212e9:	lea    ebx,[edx]
  4212eb:	and    DWORD PTR [ebp-0x328f69db],ebx
  4212f1:	repz adc esp,DWORD PTR [ecx-0x68]
  4212f5:	xor    al,0xab
  4212f7:	or     DWORD PTR [edi],ebp
  4212f9:	(bad)
  4212fc:	sub    BYTE PTR ss:[ecx+ebx*8-0x4c43a2b3],al
  421304:	push   eax
  421305:	xchg   esp,eax
  421306:	(bad)  [edx]
  421308:	es sbb eax,0x9fc84cf8
  42130e:	push   0x6a
  421310:	cmp    al,0x5f
  421312:	inc    ecx
  421313:	push   ecx
  421314:	jg     0x42131b
  421316:	dec    edi
  421317:	(bad)  
  421318:	mov    ebp,0x4e492ee0
  42131d:	mov    al,ds:0x47494f12
  421322:	push   es
  421323:	and    ebp,ebp
  421325:	xchg   DWORD PTR [ebx-0x1c94e963],edi
  42132b:	fst    QWORD PTR [ebp-0x23]
  42132e:	xor    eax,0x85d9bdd
  421333:	ins    DWORD PTR es:[edi],dx
  421334:	cmc    
  421335:	push   es
  421336:	push   edx
  421337:	push   edi
  421338:	rcl    BYTE PTR [edx],cl
  42133a:	xor    ecx,ebp
  42133c:	fs dec ecx
  42133e:	les    ecx,FWORD PTR [esi-0x29a60289]
  421344:	or     al,0xe4
  421346:	xor    BYTE PTR [bp+di-0x56],al
  42134a:	fisubr DWORD PTR [esi+edx*1-0x61d1e27a]
  421351:	shl    DWORD PTR [eax],1
  421353:	inc    esi
  421354:	inc    esi
  421355:	imul   edi,ecx,0x735871bf
  42135b:	add    al,0xc4
  42135d:	lds    esi,FWORD PTR [eax+ebx*4+0x24]
  421361:	sbb    eax,0x8d0a0091
  421366:	rcl    edi,0xd7
  421369:	add    eax,DWORD PTR [ebx]
  42136b:	pop    esp
  42136c:	gs xchg edx,ebp
  42136f:	mov    ebp,0xa58deb5a
  421374:	dec    DWORD PTR [edi]
  421376:	lods   eax,DWORD PTR ds:[esi]
  421377:	jns    0x42131c
  421379:	push   ebx
  42137a:	xor    DWORD PTR [ebx-0x27],esi
  42137d:	(bad)
  421381:	and    eax,0x6b48053f
  421386:	xor    eax,edx
  421388:	inc    esi
  421389:	xchg   ecx,eax
  42138a:	cmc    
  42138b:	push   esi
  42138c:	jo     0x421343
  42138e:	out    0x19,al
  421390:	jno    0x4213cc
  421392:	cdq    
  421393:	sbb    dl,ah
  421395:	cmp    al,0xa5
  421397:	xchg   ebp,ebx
  421399:	xor    ebp,DWORD PTR [edi]
  42139b:	or     dh,dl
  42139d:	sub    DWORD PTR [ecx+0x2c],ebp
  4213a0:	xchg   edx,eax
  4213a1:	xlat   BYTE PTR ds:[ebx]
  4213a2:	leave  
  4213a3:	xor    bh,BYTE PTR [ecx+ebp*1+0x30017b93]
  4213aa:	call   0x489d:0x68e1c056
  4213b1:	inc    esp
  4213b2:	pushf  
  4213b3:	pop    DWORD PTR [edi-0x40]
  4213b6:	or     al,0xa2
  4213b8:	dec    ecx
  4213b9:	iret   
  4213ba:	stc    
  4213bb:	cmc    
  4213bc:	les    ecx,FWORD PTR [esi+edi*8-0x51784e43]
  4213c3:	push   es
  4213c4:	dec    edi
  4213c5:	and    al,0xa5
  4213c7:	outs   dx,DWORD PTR ds:[esi]
  4213c8:	call   0x438e:0x378c7d87
  4213cf:	mov    eax,ds:0x34626bfd
  4213d4:	fnstenv [eax+0x73]
  4213d7:	not    ah
  4213d9:	lds    ebx,FWORD PTR [esi-0xb1c6699]
  4213df:	cmp    ebx,ebx
  4213e1:	(bad)  
  4213e2:	mov    ebx,0x67b8d5fd
  4213e7:	addr16 push ebx
  4213e9:	jae    0x4213cf
  4213eb:	push   ebx
  4213ec:	imul   esp,DWORD PTR [eax-0x60f9dd7b],0x0
  4213f3:	push   0x41c6d64b
  4213f8:	ja     0x4213d1
  4213fa:	test   DWORD PTR [edi],esp
  4213fc:	mov    al,0xd7
  4213fe:	fsub   DWORD PTR ds:0x4e934d70
  421404:	fs jnp 0x421473
  421407:	sub    DWORD PTR [edi],0x34527314
  42140d:	add    al,bh
  42140f:	xor    eax,0x41cd9b13
  421414:	ret    
  421415:	jp     0x42143c
  421417:	leave  
  421418:	mov    edi,0xc124356c
  42141d:	sbb    edx,ebx
  42141f:	mov    ds:0x593b4247,al
  421424:	aaa    
  421425:	(bad)  
  421426:	mov    eax,0xf0afdd80
  42142b:	sbb    DWORD PTR [ebx-0x585ce983],ebp
  421431:	popf   
  421432:	sti    
  421433:	hlt    
  421434:	mov    al,ds:0xd9286610
  421439:	sub    eax,0x8e7c9772
  42143e:	add    eax,0x89840702
  421443:	pop    ebp
  421444:	out    0x22,eax
  421446:	cmp    DWORD PTR [ebx+0x375fe325],esp
  42144c:	sar    BYTE PTR [ecx-0x72219a07],1
  421452:	icebp  
  421453:	pop    esp
  421454:	mov    ds:0xd846c2af,al
  421459:	ror    BYTE PTR [ebx+0x641ab693],cl
  42145f:	sub    BYTE PTR [ebx+0x3b62229b],cl
  421465:	inc    ebp
  421466:	mov    al,ds:0x58ae8812
  42146b:	pop    esi
  42146c:	adc    eax,0x814aa5ba
  421471:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421472:	nop
  421473:	xchg   edi,eax
  421474:	call   0x8f48:0xeb194de4
  42147b:	mov    DWORD PTR [ebx+0x2e],ecx
  42147e:	fcmovb st,st(7)
  421480:	inc    ebp
  421481:	imul   edi,ebx,0xa5889ff6
  421487:	retf   0x192e
  42148a:	inc    ecx
  42148b:	jae    0x421442
  42148d:	jns    0x421449
  42148f:	sahf   
  421490:	cld    
  421491:	fisub  DWORD PTR [edi]
  421493:	fnstenv [ecx]
  421495:	shl    DWORD PTR [esi],1
  421497:	jl     0x421505
  421499:	mov    esi,0x7ba3c4d0
  42149e:	or     BYTE PTR [edi-0x41e3878a],al
  4214a4:	loop   0x421515
  4214a6:	or     BYTE PTR [esi+0x6],0x6d
  4214aa:	mov    dh,0x52
  4214ac:	(bad)  [ebx]
  4214ae:	sbb    al,0xef
  4214b0:	fld    TBYTE PTR [ecx+ecx*4]
  4214b3:	out    dx,eax
  4214b4:	xor    eax,0x1bc4ea46
  4214b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4214ba:	xor    BYTE PTR [edx-0x461a9c45],bh
  4214c0:	push   eax
  4214c1:	push   0x52
  4214c3:	out    0x4e,eax
  4214c5:	push   0x3339e9b2
  4214ca:	rol    bl,0x90
  4214cd:	nop
  4214ce:	nop
  4214cf:	nop
  4214d0:	push   ecx
  4214d1:	push   ebp
  4214d2:	mov    ebp,DWORD PTR [esp+0x10]
  4214d6:	xor    eax,eax
  4214d8:	test   ebp,ebp
  4214da:	push   esi
  4214db:	mov    DWORD PTR [esp+0x8],eax
  4214df:	mov    esi,0xfffffffd
  4214e4:	je     0x421546
  4214e6:	push   ebx
  4214e7:	push   edi
  4214e8:	mov    edi,DWORD PTR [esp+0x18]
  4214ec:	mov    DWORD PTR [esp+0x1c],0x1
  4214f4:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  4214f8:	add    esi,0x2
  4214fb:	inc    esi
  4214fc:	mov    BYTE PTR [esi+edi*1],cl
  4214ff:	mov    ecx,DWORD PTR [esp+0x24]
  421503:	movzx  ecx,BYTE PTR [eax+ecx*1]
  421507:	mov    edx,DWORD PTR [esp+0x10]
  42150b:	mov    eax,DWORD PTR [esp+0x1c]
  42150f:	add    edx,eax
  421511:	mov    DWORD PTR [esp+0x10],edx
  421515:	ror    eax,cl
  421517:	mov    eax,DWORD PTR [esp+0x10]
  42151b:	mov    edx,eax
  42151d:	shr    edx,0x3
  421520:	mov    ebx,0x1
  421525:	sub    ebx,edx
  421527:	imul   eax,ebx
  42152a:	mov    DWORD PTR [esp+0x10],eax
  42152e:	shl    ebx,0x3
  421531:	mov    bl,BYTE PTR [esi+edi*1]
  421534:	add    bl,cl
  421536:	mov    ecx,DWORD PTR [esp+0x20]
  42153a:	mov    BYTE PTR [esi+edi*1],bl
  42153d:	sub    esi,0x2
  421540:	cmp    esi,ecx
  421542:	jl     0x4214f4
  421544:	pop    edi
  421545:	pop    ebx
  421546:	pop    esi
  421547:	pop    ebp
  421548:	pop    ecx
  421549:	ret    
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x78
  421556:	push   esi
  421557:	mov    DWORD PTR [ebp-0x50],0x0
  42155e:	mov    DWORD PTR [ebp-0x18],0x0
  421565:	mov    DWORD PTR [ebp-0x78],0x0
  42156c:	mov    DWORD PTR [ebp-0x68],0x0
  421573:	mov    DWORD PTR [ebp-0x8],0x0
  42157a:	mov    DWORD PTR [ebp-0x74],0x0
  421581:	mov    DWORD PTR [ebp-0x70],0x0
  421588:	mov    DWORD PTR [ebp-0x14],0x0
  42158f:	mov    DWORD PTR [ebp-0x54],0x0
  421596:	mov    DWORD PTR [ebp-0x10],0x0
  42159d:	mov    DWORD PTR [ebp-0x60],0x0
  4215a4:	mov    DWORD PTR [ebp-0x4],0x0
  4215ab:	mov    DWORD PTR [ebp-0x64],0x0
  4215b2:	mov    DWORD PTR [ebp-0x30],0x0
  4215b9:	mov    DWORD PTR [ebp-0x5c],0x0
  4215c0:	mov    DWORD PTR [ebp-0x2c],0x0
  4215c7:	mov    DWORD PTR [ebp-0x58],0x0
  4215ce:	mov    DWORD PTR [ebp-0xc],0x0
  4215d5:	mov    eax,ds:0x428100
  4215da:	mov    DWORD PTR [ebp-0x28],eax
  4215dd:	mov    ecx,DWORD PTR ds:0x428104
  4215e3:	mov    DWORD PTR [ebp-0x24],ecx
  4215e6:	mov    edx,DWORD PTR ds:0x428108
  4215ec:	mov    DWORD PTR [ebp-0x20],edx
  4215ef:	mov    al,ds:0x42810c
  4215f4:	mov    BYTE PTR [ebp-0x1c],al
  4215f7:	mov    ecx,DWORD PTR ds:0x4280f0
  4215fd:	mov    DWORD PTR [ebp-0x40],ecx
  421600:	mov    edx,DWORD PTR ds:0x4280f4
  421606:	mov    DWORD PTR [ebp-0x3c],edx
  421609:	mov    eax,ds:0x4280f8
  42160e:	mov    DWORD PTR [ebp-0x38],eax
  421611:	mov    cx,WORD PTR ds:0x4280fc
  421618:	mov    WORD PTR [ebp-0x34],cx
  42161c:	mov    dl,BYTE PTR ds:0x4280fe
  421622:	mov    BYTE PTR [ebp-0x32],dl
  421625:	mov    DWORD PTR [ebp-0x30],0x40
  42162c:	cmp    DWORD PTR [ebp+0x8],0x0
  421630:	jne    0x42163b
  421632:	mov    eax,DWORD PTR [ebp-0x10]
  421635:	add    eax,0x1
  421638:	mov    DWORD PTR [ebp-0x10],eax
  42163b:	mov    DWORD PTR [ebp-0x48],0x0
  421642:	mov    DWORD PTR [ebp-0x4c],0x0
  421649:	push   0x1
  42164b:	lea    ecx,[ebp-0x14]
  42164e:	push   ecx
  42164f:	call   DWORD PTR ds:0x428000
  421655:	mov    BYTE PTR [ebp-0x40],0x56
  421659:	call   DWORD PTR ds:0x428010
  42165f:	mov    DWORD PTR [ebp-0x2c],eax
  421662:	mov    BYTE PTR [ebp-0x3e],0x72
  421666:	movzx  edx,WORD PTR [ebp-0x2c]
  42166a:	test   edx,edx
  42166c:	jne    0x4216ae
  42166e:	mov    BYTE PTR [ebp-0x34],0x0
  421672:	mov    DWORD PTR [ebp-0x14],0xe0d
  421679:	lea    eax,[ebp-0x28]
  42167c:	push   eax
  42167d:	call   DWORD PTR ds:0x428014
  421683:	mov    DWORD PTR [ebp-0x68],eax
  421686:	mov    DWORD PTR [ebp-0x5c],0x3a
  42168d:	lea    ecx,[ebp-0x40]
  421690:	push   ecx
  421691:	mov    edx,DWORD PTR [ebp-0x68]
  421694:	push   edx
  421695:	call   DWORD PTR ds:0x428018
  42169b:	mov    DWORD PTR [ebp-0x44],eax
  42169e:	mov    DWORD PTR [ebp-0x8],0x9f4397b0
  4216a5:	mov    DWORD PTR [ebp-0x70],0x10c93f
  4216ac:	jmp    0x4216c3
  4216ae:	mov    BYTE PTR ds:0x443a58,0x0
  4216b5:	mov    BYTE PTR ds:0x42bb88,0x0
  4216bc:	mov    BYTE PTR ds:0x441b18,0x0
  4216c3:	mov    DWORD PTR [ebp-0x2c],0x410000
  4216ca:	push   DWORD PTR ds:0x428014
  4216d0:	pop    edx
  4216d1:	mov    DWORD PTR [ebp-0x74],edx
  4216d4:	push   DWORD PTR [ebp-0x30]
  4216d7:	push   0x1000
  4216dc:	mov    eax,DWORD PTR [ebp-0x14]
  4216df:	add    eax,0x23
  4216e2:	add    eax,0x23
  4216e5:	push   eax
  4216e6:	xor    eax,eax
  4216e8:	push   eax
  4216e9:	mov    ecx,DWORD PTR [ebp-0x44]
  4216ec:	call   ecx
  4216ee:	mov    edx,eax
  4216f0:	mov    DWORD PTR [ebp-0x4],edx
  4216f3:	mov    eax,DWORD PTR [ebp-0x70]
  4216f6:	sub    eax,0xdae0b
  4216fb:	mov    DWORD PTR [ebp-0x70],eax
  4216fe:	cmp    DWORD PTR [ebp-0x4],0x0
  421702:	jne    0x42170b
  421704:	mov    BYTE PTR ds:0x441b18,0x0
  42170b:	mov    ecx,DWORD PTR [ebp-0x4]
  42170e:	add    ecx,DWORD PTR [ebp-0x14]
  421711:	mov    edx,DWORD PTR [ebp-0x8]
  421714:	mov    DWORD PTR [ecx],edx
  421716:	mov    eax,DWORD PTR [ebp-0x4]
  421719:	add    eax,DWORD PTR [ebp-0x5c]
  42171c:	mov    DWORD PTR [ebp-0x64],eax
  42171f:	mov    ecx,DWORD PTR ds:0x428018
  421725:	mov    DWORD PTR [ebp-0x54],ecx
  421728:	mov    edx,DWORD PTR [ebp-0x4]
  42172b:	add    edx,DWORD PTR [ebp-0x14]
  42172e:	mov    eax,DWORD PTR [ebp+0x8]
  421731:	mov    DWORD PTR [edx+0x4],eax
  421734:	mov    ecx,DWORD PTR [ebp-0x4]
  421737:	add    ecx,DWORD PTR [ebp-0x14]
  42173a:	mov    DWORD PTR [ebp-0xc],ecx
  42173d:	cmp    DWORD PTR [ebp-0x70],0x0
  421741:	jbe    0x42175e
  421743:	mov    edx,DWORD PTR [ebp-0xc]
  421746:	push   edx
  421747:	mov    eax,DWORD PTR [ebp-0x14]
  42174a:	push   eax
  42174b:	mov    ecx,DWORD PTR [ebp-0x2c]
  42174e:	add    ecx,DWORD PTR [ebp-0x70]
  421751:	push   ecx
  421752:	mov    edx,DWORD PTR [ebp-0x4]
  421755:	push   edx
  421756:	call   0x4214d0
  42175b:	add    esp,0x10
  42175e:	cmp    DWORD PTR [ebp-0x64],0x0
  421762:	je     0x421776
  421764:	mov    ecx,DWORD PTR [ebp-0x54]
  421767:	push   ecx
  421768:	push   DWORD PTR [ebp-0x74]
  42176b:	mov    esi,DWORD PTR [ebp-0x64]
  42176e:	push   edx
  42176f:	pop    eax
  421770:	push   ecx
  421771:	nop
  421772:	jmp    esi
  421774:	jmp    0x42177c
  421776:	mov    eax,DWORD PTR [ebp+0x8]
  421779:	mov    DWORD PTR [ebp-0x18],eax
  42177c:	mov    eax,0x1
  421781:	pop    esi
  421782:	mov    esp,ebp
  421784:	pop    ebp
  421785:	ret    
  421786:	int3   
  421787:	int3   
  421788:	int3   
  421789:	int3   
  42178a:	int3   
  42178b:	int3   
  42178c:	int3   
  42178d:	int3   
  42178e:	int3   
  42178f:	int3   
  421790:	push   ebp
  421791:	mov    ebp,esp
  421793:	sub    esp,0x18
  421796:	lea    eax,[ebp-0x18]
  421799:	push   eax
  42179a:	call   DWORD PTR ds:0x42800c
  4217a0:	cmp    WORD PTR [ebp-0x18],0x0
  4217a5:	je     0x4217e8
  4217a7:	mov    ecx,DWORD PTR ds:0x428010
  4217ad:	push   0x0
  4217af:	push   0xb2
  4217b4:	push   0x82
  4217b9:	push   0x0
  4217bb:	mov    DWORD PTR [ebp-0x4],ecx
  4217be:	call   DWORD PTR ds:0x428008
  4217c4:	push   DWORD PTR [ebp-0x4]
  4217c7:	pop    edx
  4217c8:	call   edx
  4217ca:	push   eax
  4217cb:	pop    DWORD PTR [ebp-0x8]
  4217ce:	push   0xcb77e4be
  4217d3:	call   0x421550
  4217d8:	add    esp,0x4
  4217db:	call   0x411000
  4217e0:	xor    eax,eax
  4217e2:	mov    esp,ebp
  4217e4:	pop    ebp
  4217e5:	ret    0x10
  4217e8:	dec    DWORD PTR [ebx]
  4217ea:	inc    esi
  4217eb:	(bad)  
  4217ec:	adc    ah,BYTE PTR [esi]
  4217ee:	(bad)  
  4217ef:	and    DWORD PTR [ebx+edi*2+0xcba5035],edi
  4217f6:	mov    ecx,0x25aa461c
  4217fb:	(bad)  
  4217fc:	and    DWORD PTR [edi+edi*2-0xc05afcb],edi
  421803:	inc    esi
  421804:	sbb    al,0x46
  421806:	adc    ah,BYTE PTR ds:0x7fbc21d6
  42180c:	xor    eax,0x46f3ba50
  421811:	sbb    al,0x46
  421813:	adc    ah,BYTE PTR ds:0x7fbc21d6
  421819:	xor    eax,0x46f3ba50
  42181e:	sbb    al,0x46
  421820:	adc    ah,BYTE PTR ds:0x87bc21d6
  421826:	xor    eax,0x59fdba50
  42182b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42182c:	dec    eax
  42182d:	adc    dl,BYTE PTR [ecx-0x38621321]
  421833:	xor    al,0x1c
  421835:	ja     0x421809
  421837:	adc    dh,BYTE PTR [edi+ebp*1+0x61]
  42183b:	add    eax,0x18d353a6
  421840:	inc    edi
  421841:	xor    edi,edx
  421843:	shl    DWORD PTR ds:0x4a7c287d,cl
  421849:	mov    ds:0x151ade01,al
  42184e:	and    cl,bh
  421850:	popf   
  421851:	data16 jne 0x42187c
  421854:	xor    ah,BYTE PTR [ecx-0x67]
  421857:	jb     0x4217f5
  421859:	adc    bl,BYTE PTR [edx+0x34]
  42185c:	(bad)  
  42185e:	dec    ebx
  42185f:	adc    DWORD PTR [esi+esi*1+0x25],ecx
  421863:	(bad)  
  421864:	and    DWORD PTR [edi+edi*2+0x6abd5035],edi
  42186b:	mov    edx,0xb7ea0545
  421870:	fsub   QWORD PTR [edx+0x44]
  421873:	in     eax,dx
  421874:	aas    
  421875:	adc    eax,DWORD PTR [edx+0x61]
  421878:	dec    esp
  421879:	inc    esp
  42187a:	and    ebx,DWORD PTR [esi]
  42187c:	das    
  42187d:	mov    ecx,ebx
  42187f:	cs jne 0x4218ef
  421882:	xor    eax,0xe484f982
  421887:	aam    0x18
  421889:	jge    0x42183e
  42188b:	sbb    BYTE PTR [esi-0x4f3d32e9],dh
  421891:	(bad)  
  421893:	and    eax,0x44dd544c
  421898:	sub    esi,esi
  42189a:	jmp    DWORD PTR [edx+ebx*2]
  42189d:	lock or edx,esp
  4218a0:	push   ss
  4218a1:	or     al,0x92
  4218a3:	and    al,0xdc
  4218a5:	jns    0x4218eb
  4218a7:	in     eax,dx
  4218a8:	aas    
  4218a9:	adc    eax,DWORD PTR [edx+0x60]
  4218ac:	dec    esp
  4218ad:	xor    al,0xbf
  4218af:	sub    BYTE PTR [edi],0x69
  4218b2:	stc    
  4218b3:	cmp    al,0x75
  4218b5:	js     0x42185f
  4218b7:	sub    cl,bh
  4218b9:	push   ds
  4218ba:	jns    0x421937
  4218bc:	sbb    BYTE PTR ds:0x27b6b32e,ch
  4218c2:	push   eax
  4218c3:	pop    eax
  4218c4:	mov    al,0xb1
  4218c6:	mov    esi,0x404a4c8e
  4218cb:	fldcw  WORD PTR [ebx]
  4218cd:	inc    BYTE PTR [edi-0x6517a559]
  4218d3:	and    eax,0xb7ea0574
  4218d8:	fsub   QWORD PTR [ecx]
  4218da:	mov    esp,0xba50357f
  4218df:	repz inc esi
  4218e1:	dec    esp
  4218e2:	add    edx,DWORD PTR [edx]
  4218e4:	and    eax,0x7fbe209a
  4218e9:	xchg   ebp,eax
  4218ea:	adc    cl,0xbc
  4218ed:	inc    esi
  4218ee:	sbb    al,0x46
  4218f0:	adc    ah,BYTE PTR ds:0x9fbc21d6
  4218f6:	xor    eax,0x47f8bb53
  4218fb:	push   ss
  4218fc:	inc    esi
  4218fd:	adc    cl,bl
  4218ff:	shl    BYTE PTR [ecx],cl
  421901:	mov    esp,0xba5033c3
  421906:	repz inc esi
  421908:	sbb    al,0x57
  42190a:	scas   eax,DWORD PTR es:[edi]
  42190b:	and    eax,0x7fac21d6
  421910:	xor    eax,0x46f6ba50
  421915:	sbb    al,0x46
  421917:	push   ebx
  421918:	and    eax,0x7fbc31d6
  42191d:	xor    eax,0x43f3ba52
  421922:	sbb    al,0x47
  421924:	adc    ah,BYTE PTR ds:0x7abc21d6
  42192a:	xor    eax,0x46f3ba51
  42192f:	sbb    al,0x46
  421931:	adc    dh,BYTE PTR [ebp-0x26]
  421934:	and    DWORD PTR [ebx+edi*2+0x17bb5035],edi
  42193b:	inc    ebx
  42193c:	sbb    al,0x44
  42193e:	adc    ah,BYTE PTR ds:0x6fbc2156
  421944:	xor    eax,0x46f3aa50
  421949:	sbb    al,0x46
  42194b:	add    ah,BYTE PTR ds:0x7fbc31d6
  421951:	xor    eax,0x56f3ba50
  421956:	sbb    al,0x46
  421958:	adc    ah,BYTE PTR ds:0x7fbc21d6
  42195e:	xor    eax,0x7f07ba50
  421963:	adc    BYTE PTR [esi+0x7b],al
  421966:	es (bad) 
  421968:	and    DWORD PTR [edi+ecx*4-0x450aafc2],edi
  42196f:	inc    esi
  421970:	sbb    al,0x46
  421972:	adc    ah,BYTE PTR ds:0x7fbc21d6
  421978:	xor    eax,0x46f3ba50
  42197d:	sbb    al,0x46
  42197f:	adc    ah,BYTE PTR ds:0x7fbc21d6
  421985:	xor    eax,0x46f3ba50
  42198a:	sbb    al,0x46
  42198c:	adc    ah,BYTE PTR ds:0x7fbc21d6
  421992:	xor    eax,0x46f3ba50
  421997:	sbb    al,0x46
  421999:	adc    ah,BYTE PTR ds:0x7fbc21d6
  42199f:	xor    eax,0x46f3ba50
  4219a4:	sbb    al,0x46
  4219a6:	adc    ah,BYTE PTR ds:0x7fbc21d6
  4219ac:	xor    eax,0x46f3ba50
  4219b1:	sbb    al,0x46
  4219b3:	adc    ah,BYTE PTR ds:0x7fbc21d6
  4219b9:	xor    eax,0x46f3ba50
  4219be:	sbb    al,0x46
  4219c0:	adc    ah,BYTE PTR ds:0x7fbc21d6
  4219c6:	xor    eax,0x46f3ba50
  4219cb:	sbb    al,0x46
  4219cd:	adc    ah,BYTE PTR ds:0x7fbc21d6
  4219d3:	xor    eax,0x46f3ba50
  4219d8:	sbb    al,0x68
  4219da:	inc    ax
  4219dc:	scas   al,BYTE PTR es:[edi]
  4219dd:	push   ebp
  4219de:	mov    esp,0x5a50357f
  4219e3:	clc    
  4219e4:	inc    esi
  4219e5:	sbb    al,0x56
  4219e7:	adc    ah,BYTE PTR ds:0x7fb8f5d6
  4219ed:	xor    eax,0x16f3ba54
  4219f2:	pop    ecx
  4219f3:	add    eax,0x21997120
  4219f8:	mov    esp,0xba50357f
  4219fd:	rol    DWORD PTR [esi+0x1c],cl
  421a00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a01:	cmp    al,0x57
  421a03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a04:	push   ebx
  421a05:	fistp  QWORD PTR [edi+0x35]
  421a08:	push   eax
  421a09:	mov    edx,0x461c4693
  421a0e:	loop   0x421a3e
  421a10:	(bad)  
  421a11:	and    esi,esp
  421a13:	jg     0x421a4a
  421a15:	push   eax
  421a16:	(bad)  
  421a17:	test   DWORD PTR [esi+0x1c],0xd6251246
  421a1e:	and    DWORD PTR [edi+edi*2-0xc45afcb],edi
  421a25:	data16 sbb al,0x46
  421a28:	repnz and eax,0x7fbc21d6
  421a2e:	xor    eax,0x46f3ba50
  421a33:	sbb    al,0x46
  421a35:	adc    ah,BYTE PTR ds:0x7fbc21d6
  421a3b:	xor    eax,0x46f3ba50
  421a40:	sbb    al,0x46
  421a42:	adc    ah,BYTE PTR ds:0x7fbc21d6
  421a48:	xor    eax,0x46f3ba50
  421a4d:	sbb    al,0x46
  421a4f:	adc    ah,BYTE PTR ds:0x7fbc21d6
  421a55:	xor    eax,0x46f3ba50
  421a5a:	sbb    al,0x46
  421a5c:	adc    ah,BYTE PTR ds:0x7fbc21d6
  421a62:	xor    eax,0x46f3ba50
  421a67:	sbb    al,0x46
  421a69:	adc    ah,BYTE PTR ds:0x7fbc21d6
  421a6f:	xor    eax,0x46f3ba50
  421a74:	sbb    al,0x46
  421a76:	adc    ah,BYTE PTR ds:0x7fbc21d6
  421a7c:	xor    eax,0x46f3ba50
  421a81:	sbb    al,0x46
  421a83:	adc    ah,BYTE PTR ds:0x7fbc21d6
  421a89:	xor    eax,0x46f3ba50
  421a8e:	sbb    al,0x46
  421a90:	adc    ah,BYTE PTR ds:0x7fbc21d6
  421a96:	xor    eax,0x46f3ba50
  421a9b:	sbb    al,0x46
  421a9d:	adc    ah,BYTE PTR ds:0x7fbc21d6
  421aa3:	xor    eax,0x46f3ba50
  421aa8:	sbb    al,0x46
  421aaa:	adc    ah,BYTE PTR ds:0x7fbc21d6
  421ab0:	xor    eax,0x46f3ba50
  421ab5:	sbb    al,0x46
  421ab7:	adc    ah,BYTE PTR ds:0x7fbc21d6
  421abd:	xor    eax,0x46f3ba50
  421ac2:	sbb    al,0x46
  421ac4:	adc    ah,BYTE PTR ds:0x7fbc21d6
  421aca:	xor    eax,0x46f3ba50
  421acf:	sbb    al,0x46
  421ad1:	adc    ah,BYTE PTR ds:0x7fbc21d6
  421ad7:	xor    eax,0x46f3ba50
  421adc:	sbb    al,0x46
  421ade:	adc    ah,BYTE PTR ds:0x7fbc21d6
  421ae4:	xor    eax,0x46f3ba50
  421ae9:	sbb    al,0x46
  421aeb:	adc    ah,BYTE PTR ds:0x7fbc21d6
  421af1:	xor    eax,0x46f3ba50
  421af6:	sbb    al,0x46
  421af8:	adc    ah,BYTE PTR ds:0x7fbc21d6
  421afe:	xor    eax,0x46f3ba50
  421b03:	sbb    al,0x46
  421b05:	adc    ah,BYTE PTR ds:0x7fbc21d6
  421b0b:	xor    eax,0x46f3ba50
  421b10:	sbb    al,0x46
  421b12:	adc    ah,BYTE PTR ds:0x7fbc21d6
  421b18:	xor    eax,0x46f3ba50
  421b1d:	sbb    al,0x46
  421b1f:	adc    ah,BYTE PTR ds:0x7fbc21d6
  421b25:	xor    eax,0x46f3ba50
  421b2a:	sbb    al,0x46
  421b2c:	adc    ah,BYTE PTR ds:0x7fbc21d6
  421b32:	xor    eax,0x46f3ba50
  421b37:	sbb    al,0x46
  421b39:	adc    ah,BYTE PTR ds:0x7fbc21d6
  421b3f:	xor    eax,0x46f3ba50
  421b44:	sbb    al,0x46
  421b46:	adc    ah,BYTE PTR ds:0x7fbc21d6
  421b4c:	xor    eax,0x46f3ba50
  421b51:	sbb    al,0x46
  421b53:	adc    ah,BYTE PTR ds:0x7fbc21d6
  421b59:	xor    eax,0x46f3ba50
  421b5e:	sbb    al,0x46
  421b60:	adc    ah,BYTE PTR ds:0x7fbc21d6
  421b66:	xor    eax,0x46f3ba50
  421b6b:	sbb    al,0x46
  421b6d:	adc    ah,BYTE PTR ds:0x7fbc21d6
  421b73:	xor    eax,0x46f3ba50
  421b78:	sbb    al,0x46
  421b7a:	adc    ah,BYTE PTR ds:0x7fbc21d6
  421b80:	xor    eax,0x46f3ba50
  421b85:	sbb    al,0x46
  421b87:	adc    ah,BYTE PTR ds:0x7fbc21d6
  421b8d:	xor    eax,0x46f3ba50
  421b92:	sbb    al,0x46
  421b94:	adc    ah,BYTE PTR ds:0x7fbc21d6
  421b9a:	xor    eax,0x46f3ba50
  421b9f:	sbb    al,0x46
  421ba1:	adc    ah,BYTE PTR ds:0x7fbc21d6
  421ba7:	xor    eax,0x46f3ba50
  421bac:	sbb    al,0x46
  421bae:	adc    ah,BYTE PTR ds:0x7fbc21d6
  421bb4:	xor    eax,0x46f3ba50
  421bb9:	sbb    al,0x46
  421bbb:	adc    ah,BYTE PTR ds:0x7fbc21d6
  421bc1:	xor    eax,0x46f3ba50
  421bc6:	sbb    al,0x46
  421bc8:	adc    ah,BYTE PTR ds:0x7fbc21d6
  421bce:	xor    eax,0x46f3ba50
  421bd3:	sbb    al,0x46
  421bd5:	adc    ah,BYTE PTR ds:0x7fbc21d6
  421bdb:	xor    eax,0x46f3ba50
  421be0:	sbb    al,0x46
  421be2:	adc    ah,BYTE PTR ds:0x7fbc21d6
  421be8:	xor    eax,0x46f8123f
  421bed:	xor    eax,DWORD PTR [esi+0x12]
  421bf0:	xor    eax,0xdd9621d6
  421bf5:	out    dx,eax
  421bf6:	and    esp,ebx
  421bf8:	or     al,0x6b
  421bfa:	add    cl,0x42
  421bfd:	enter  0xc9e0,0xaf
  421c01:	retf   
  421c02:	mov    al,ds:0x1c77cb36
  421c07:	maskmovq mm4,(bad)
  421c08:	mul    DWORD PTR [ebp+0x36c5bb33]
  421c0e:	(bad)  
  421c0f:	repz jle 0x421bea
  421c12:	arpl   WORD PTR [ecx+0x25],di
  421c15:	jne    0x421c74
  421c17:	xchg   esp,eax
  421c18:	rol    DWORD PTR [ebx],0xbc
  421c1b:	pop    eax
  421c1c:	xchg   edx,eax
  421c1d:	fsubr  st,st(7)
  421c1f:	mov    ds:0x2f74b52b,al
  421c24:	clc    
  421c25:	ret    0xdc90
  421c28:	jo     0x421c15
  421c2a:	je     0x421c2d
  421c2c:	mov    edi,0xea69d995
  421c31:	mov    ebx,0x5fd8cedc
  421c36:	xchg   esi,eax
  421c37:	pop    edi
  421c38:	dec    ebx
  421c39:	pop    ecx
  421c3a:	imul   ebx,DWORD PTR [ecx+0x3e],0x54
  421c3e:	je     0x421bd5
  421c40:	out    dx,eax
  421c41:	or     eax,0x272d1c39
  421c46:	jb     0x421c64
  421c48:	inc    BYTE PTR [ecx-0x5a]
  421c4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c4c:	in     eax,0x4a
  421c4e:	pop    eax
  421c4f:	pop    esi
  421c50:	lds    esi,FWORD PTR [ecx]
  421c52:	xor    DWORD PTR [ebx-0xa95f720],edx
  421c58:	mov    ?,esi
  421c5a:	push   0x5b
  421c5c:	inc    eax
  421c5d:	xchg   ebp,eax
  421c5e:	dec    ebx
  421c5f:	in     eax,0x41
  421c61:	cld    
  421c62:	pop    edx
  421c63:	cli    
  421c64:	imul   ecx,DWORD PTR [esp+edx*4],0x44e430f
  421c6b:	pushf  
  421c6c:	or     eax,0x18be28fc
  421c71:	scas   eax,DWORD PTR es:[edi]
  421c72:	or     ah,bl
  421c74:	fs js  0x421c61
  421c77:	jl     0x421c58
  421c79:	mov    DWORD PTR [edi+0x3ac16855],edx
  421c7f:	mov    ah,BYTE PTR [bx+0x5201]
  421c84:	(bad)  
  421c85:	pop    edx
  421c86:	mov    ss:0xbd40af5e,al
  421c8c:	outs   dx,DWORD PTR ds:[esi]
  421c8d:	cmp    esi,DWORD PTR es:0x96487a3f
  421c94:	inc    ebp
  421c95:	lods   al,BYTE PTR ds:[esi]
  421c96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c97:	cmp    al,0x3e
  421c99:	mov    bl,0x27
  421c9b:	scas   al,BYTE PTR es:[edi]
  421c9c:	(bad)  
  421c9d:	dec    edi
  421c9e:	and    BYTE PTR [edx-0x43],bh
  421ca1:	xchg   BYTE PTR ds:0xb72cf6ee,ch
  421ca7:	adc    eax,0x2b7640ea
  421cac:	sar    BYTE PTR [eax+0x2e],cl
  421caf:	repnz aas 
  421cb1:	test   eax,0xae07fabd
  421cb6:	xchg   esp,eax
  421cb7:	sub    ebx,edi
  421cb9:	mov    WORD PTR [esi],gs
  421cbb:	in     al,0x3c
  421cbd:	and    DWORD PTR [eax-0x7edd9de4],esi
  421cc3:	scas   eax,DWORD PTR es:[edi]
  421cc4:	hlt    
  421cc5:	cwde   
  421cc6:	in     eax,dx
  421cc7:	sub    eax,0xae41457b
  421ccc:	in     eax,0x5d
  421cce:	les    ebp,FWORD PTR [ebp-0x52]
  421cd1:	cdq    
  421cd2:	retf   
  421cd3:	mov    edi,0x6dce03ea
  421cd8:	lods   eax,DWORD PTR ds:[esi]
  421cd9:	add    edx,ecx
  421cdb:	or     al,al
  421cdd:	pushf  
  421cde:	sbb    eax,0x8e9e49e9
  421ce3:	or     al,0xf5
  421ce5:	jp     0x421c78
  421ce7:	std    
  421ce8:	in     eax,dx
  421ce9:	adc    ch,bh
  421ceb:	stc    
  421cec:	pop    ecx
  421ced:	xchg   DWORD PTR [ebp+0x57],ecx
  421cf0:	repnz call 0xfdbf:0x1f6e0cec
  421cf8:	mov    edi,0x421d9e13
  421cfd:	in     eax,0x62
  421cff:	loop   0x421d49
  421d01:	mov    ch,0x2a
  421d03:	mov    al,cs:0x236c36cc
  421d09:	(bad)  
  421d0a:	or     ebp,DWORD PTR [ecx]
  421d0c:	fist   WORD PTR [edx]
  421d0e:	icebp  
  421d0f:	xlat   BYTE PTR ds:[ebx]
  421d10:	dec    eax
  421d11:	out    0xa8,eax
  421d13:	(bad)  
  421d14:	(bad)  
  421d15:	mov    ch,0x76
  421d17:	cmp    al,0xd8
  421d19:	xchg   DWORD PTR [ebx],esp
  421d1b:	ficomp WORD PTR [edi+eiz*8+0x39]
  421d1f:	ds inc esp
  421d21:	mov    bh,0x94
  421d23:	sub    DWORD PTR [ecx],eax
  421d25:	in     eax,dx
  421d26:	imul   ebx
  421d28:	test   bh,al
  421d2a:	out    dx,eax
  421d2b:	mov    ecx,0xf425c1c5
  421d30:	aas    
  421d31:	jb     0x421cfc
  421d33:	adc    edx,eax
  421d35:	pop    ebx
  421d36:	and    ch,BYTE PTR [ebp+0x16]
  421d39:	dec    esi
  421d3a:	mov    ecx,0x69cb4839
  421d3f:	popa   
  421d40:	loope  0x421ccb
  421d42:	sub    edi,eax
  421d44:	adc    DWORD PTR [esp+edx*1],edx
  421d47:	call   0xa79cb9b
  421d4c:	cmp    BYTE PTR [ebx+0x7ed94dc9],ah
  421d52:	cmp    BYTE PTR cs:[eax+ebp*4],ch
  421d56:	out    dx,eax
  421d57:	cmc    
  421d58:	retf   0x6fdf
  421d5b:	aam    0x48
  421d5d:	mov    eax,ds:0xa9c0df90
  421d62:	cli    
  421d63:	cmp    al,0x37
  421d65:	or     edx,DWORD PTR [edi+0x78]
  421d68:	test   BYTE PTR fs:[edx],dl
  421d6b:	pop    edi
  421d6c:	jmp    0x97467fcc
  421d71:	std    
  421d72:	iret   
  421d73:	mov    esp,0x78f4edb
  421d78:	sub    BYTE PTR [edx+0x44ef4651],bh
  421d7e:	or     DWORD PTR [esi],0x63
  421d81:	lock sub DWORD PTR [ebx-0x7e],0xffffff96
  421d86:	mov    ah,0xf
  421d88:	inc    edi
  421d89:	xchg   edi,eax
  421d8a:	cld    
  421d8b:	mul    DWORD PTR [ebp+eiz*2-0x13]
  421d8f:	xor    BYTE PTR [esi-0x31],al
  421d92:	or     eax,DWORD PTR [ecx+0x32ed390]
  421d98:	call   0x5054:0x740317c4
  421d9f:	mov    bl,0x43
  421da1:	push   ss
  421da2:	xchg   esp,eax
  421da3:	sub    dl,BYTE PTR [esi+0x25]
  421da6:	fs push edi
  421da8:	cmp    eax,DWORD PTR [eax-0x4d9b36bc]
  421dae:	cmp    DWORD PTR [eax],0xfffffff8
  421db1:	and    al,0x79
  421db3:	inc    esp
  421db4:	pop    ecx
  421db5:	(bad)  
  421db6:	push   0x25
  421db8:	or     DWORD PTR [eax+0x3b],0xffffffbb
  421dbc:	jecxz  0x421e2f
  421dbe:	and    al,0x28
  421dc0:	retf   
  421dc1:	sbb    edx,eax
  421dc3:	enter  0xc092,0x71
  421dc7:	daa    
  421dc8:	shl    bl,0xcd
  421dcb:	mov    esi,0x2ca62e9d
  421dd0:	cli    
  421dd1:	jg     0x421d7d
  421dd3:	stc    
  421dd4:	out    0x3a,al
  421dd6:	rcl    cl,0x25
  421dd9:	mov    al,ds:0xb9f7e575
  421dde:	imul   ebx,DWORD PTR [edx-0xc],0x29f70c73
  421de5:	xchg   edx,eax
  421de6:	adc    DWORD PTR [ebx-0xf],ecx
  421de9:	fistp  DWORD PTR [esi-0x31a5f815]
  421def:	test   DWORD PTR [ebp-0x28],0xd57f0876
  421df6:	(bad)  
  421df7:	mul    DWORD PTR [esi]
  421df9:	mov    esp,0x2ab2f0d5
  421dfe:	arpl   WORD PTR [edx+ecx*8+0x5f],di
  421e02:	mov    dh,0x5a
  421e04:	shl    DWORD PTR [ebx+0x7400ae1c],1
  421e0a:	sbb    DWORD PTR [edx-0x55],eax
  421e0d:	pop    esp
  421e0e:	or     BYTE PTR [ecx-0x22],bl
  421e11:	cmp    al,0x71
  421e13:	or     ebp,DWORD PTR [eax+ecx*4+0xc]
  421e17:	sub    esi,DWORD PTR [ecx-0x3e20007]
  421e1d:	pop    edx
  421e1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e1f:	pop    es
  421e20:	icebp  
  421e21:	sbb    DWORD PTR [edx-0x26118b10],esp
  421e27:	xchg   DWORD PTR [ebx-0x6b],ebx
  421e2a:	jb     0x421df0
  421e2c:	mov    dl,0x9
  421e2e:	jle    0x421ddf
  421e30:	ins    DWORD PTR es:[edi],dx
  421e31:	jae    0x421db9
  421e33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e34:	and    al,BYTE PTR [edx+0x60b3af4d]
  421e3a:	out    dx,al
  421e3b:	daa    
  421e3c:	mov    bl,0x4
  421e3e:	sahf   
  421e3f:	adc    BYTE PTR [edi+eax*4+0x9e5449f],bl
  421e46:	xlat   BYTE PTR ds:[bx]
  421e48:	ja     0x421eaa
  421e4a:	jae    0x421eb6
  421e4c:	ror    DWORD PTR [edx+0x7b012359],0x51
  421e53:	(bad)  [eax]
  421e55:	sub    cl,BYTE PTR [edx+0x5d6f5664]
  421e5b:	or     ah,ch
  421e5d:	call   0x289e259b
  421e62:	jno    0x421e1f
  421e64:	out    0xfa,eax
  421e66:	sbb    BYTE PTR ds:0x3a70ac28,dl
  421e6c:	out    dx,al
  421e6d:	cdq    
  421e6e:	xchg   esi,eax
  421e6f:	mov    al,0x68
  421e71:	inc    ebp
  421e72:	ds jmp 0xa620:0xd03d51ae
  421e7a:	push   ecx
  421e7b:	cmp    al,0xb1
  421e7d:	ret    
  421e7e:	xor    al,0xe5
  421e80:	sbb    al,dl
  421e82:	dec    ebx
  421e83:	ret    0xaaef
  421e86:	js     0x421ec2
  421e88:	push   ecx
  421e89:	ins    DWORD PTR es:[edi],dx
  421e8a:	cmp    dh,BYTE PTR [eax]
  421e8c:	sub    dh,BYTE PTR [edi-0x75b1a115]
  421e92:	inc    esi
  421e93:	scas   eax,DWORD PTR es:[edi]
  421e94:	mov    esp,0x6536567c
  421e99:	mov    ebp,0xaeb2b352
  421e9e:	ss mov fs,esi
  421ea1:	data16 lahf 
  421ea3:	call   0xe811:0x60992bef
  421eaa:	ss stc 
  421eac:	push   ecx
  421ead:	imul   eax,DWORD PTR [eax+0x18],0xffffffac
  421eb1:	shr    DWORD PTR [ecx+0x78],1
  421eb4:	sahf   
  421eb5:	cmp    eax,0x55449518
  421eba:	inc    ebp
  421ebb:	inc    ecx
  421ebc:	aam    0x30
  421ebe:	add    al,0x4
  421ec0:	mov    ah,0xdb
  421ec2:	push   ds
  421ec3:	or     DWORD PTR [ecx+0x3c],edx
  421ec6:	(bad)  
  421ec8:	or     eax,0x88c6a50e
  421ecd:	and    dh,BYTE PTR [eax]
  421ecf:	adc    eax,0x234cd5f0
  421ed4:	add    DWORD PTR [edx],esp
  421ed6:	ficomp WORD PTR ds:[eax-0x5b]
  421eda:	xor    ch,BYTE PTR [esi]
  421edc:	sbb    BYTE PTR [ebp-0x52cd96ac],dl
  421ee2:	jnp    0x421f16
  421ee4:	jbe    0x421f24
  421ee6:	out    0xdf,eax
  421ee8:	mov    ecx,DWORD PTR [edx+edx*2+0x7a58f4ae]
  421eef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ef0:	retf   
  421ef1:	ds retf 
  421ef3:	sbb    al,0xdd
  421ef5:	pop    eax
  421ef6:	popf   
  421ef7:	arpl   WORD PTR [eax+0x599af7c2],si
  421efd:	push   ebp
  421efe:	bound  ebx,QWORD PTR [esi-0x4b1b11aa]
  421f04:	lds    ebx,FWORD PTR [esi+edx*4+0x50]
  421f08:	pop    es
  421f09:	aaa    
  421f0a:	adc    BYTE PTR [esp+edx*4+0x55c8fbbc],ah
  421f11:	xchg   edi,eax
  421f12:	imul   ebx,DWORD PTR [edx],0xffffffaa
  421f15:	ja     0x421eec
  421f17:	test   eax,0x9e2c61a9
  421f1c:	aaa    
  421f1d:	cmp    BYTE PTR [ecx],0x28
  421f20:	xor    DWORD PTR [edx-0x2e0d4cc],ebx
  421f26:	sti    
  421f27:	loop   0x421edb
  421f29:	adc    ah,BYTE PTR [esi+0x2e]
  421f2c:	or     bl,BYTE PTR [edx+0x11]
  421f2f:	repnz mov ch,0x14
  421f32:	loopne 0x421f7f
  421f34:	ret    0xe83b
  421f37:	(bad)  
  421f38:	jmp    0xfbea:0xa9dac3b4
  421f3f:	xchg   dh,cl
  421f41:	aas    
  421f42:	test   eax,0xc8df6d78
  421f47:	js     0x421f03
  421f49:	mov    edi,0x54e7ceda
  421f4e:	fidivr WORD PTR ds:0x48010c5f
  421f54:	dec    si
  421f56:	leave  
  421f57:	xchg   ebx,eax
  421f58:	pop    edi
  421f59:	pushf  
  421f5a:	push   ebp
  421f5b:	leave  
  421f5c:	xor    ah,al
  421f5e:	out    dx,al
  421f5f:	mov    ecx,0x65ac631e
  421f64:	cs stc 
  421f66:	nop
  421f67:	or     BYTE PTR [ecx-0x1c],0x9b
  421f6b:	mov    bh,0xaf
  421f6d:	push   ss
  421f6e:	sahf   
  421f6f:	stos   DWORD PTR es:[edi],eax
  421f70:	int    0x9e
  421f72:	fwait
  421f73:	lds    ebx,FWORD PTR [edi]
  421f75:	adc    edx,edx
  421f77:	fld    TBYTE PTR ds:0x96ed507e
  421f7d:	xchg   edx,eax
  421f7e:	ss pushf 
  421f80:	jnp    0x421fe3
  421f82:	jns    0x421feb
  421f84:	xor    edi,esp
  421f86:	adc    BYTE PTR [ecx],bl
  421f88:	mov    ebp,0xabccfcd0
  421f8d:	call   0x53d7:0xdaa609f1
  421f94:	jge    0x422008
  421f96:	lods   eax,DWORD PTR ds:[esi]
  421f97:	add    al,0xfe
  421f99:	mov    ch,0xcd
  421f9b:	das    
  421f9c:	or     eax,edx
  421f9e:	mov    BYTE PTR [ebx+0x20],ch
  421fa1:	push   edi
  421fa2:	outs   dx,DWORD PTR ds:[esi]
  421fa3:	mov    al,0xea
  421fa5:	ss add eax,0xbf2769ab
  421fab:	or     BYTE PTR [edx+0x12e42149],dh
  421fb1:	call   0x99128c54
  421fb6:	and    DWORD PTR [esp+0x146c52e],edi
  421fbd:	mov    esi,0xfbc3d260
  421fc2:	push   0xffffffb4
  421fc4:	je     0x422044
  421fc6:	sbb    bl,BYTE PTR ds:0x59b202e1
  421fcc:	sbb    esi,ecx
  421fce:	sbb    edx,ebp
  421fd0:	scas   al,BYTE PTR es:[edi]
  421fd1:	pop    eax
  421fd2:	inc    ebx
  421fd3:	or     DWORD PTR [edx],ebp
  421fd5:	dec    DWORD PTR [esi+0x39b49ae9]
  421fdb:	fcmovnb st,st(5)
  421fdd:	test   eax,0x10cb5a43
  421fe2:	cwde   
  421fe3:	xor    eax,0x11ba0ad9
  421fe8:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421fea:	push   0x3de5772c
  421fef:	cmp    BYTE PTR [esp+edi*2],ch
  421ff2:	dec    ebx
  421ff3:	sub    BYTE PTR [eax+0x79],bl
  421ff6:	jmp    0x42205e
  421ff8:	hlt    
  421ff9:	cmp    cl,al
  421ffb:	and    eax,0x89f5e1a9
  422000:	cmp    al,0x3c
  422002:	(bad)  
  422004:	sub    BYTE PTR [ebx],dl
  422006:	xor    al,0x1c
  422008:	pop    es
  422009:	inc    eax
  42200a:	xchg   BYTE PTR [eax-0x47c252d],bl
  422010:	test   eax,0xd4cb515a
  422015:	jle    0x42206a
  422017:	cmc    
  422018:	xchg   esi,eax
  422019:	retf   0xe030
  42201c:	aam    0xd5
  42201e:	xchg   edx,eax
  42201f:	push   esi
  422020:	cli    
  422021:	loope  0x4220a1
  422023:	jmp    0x421fda
  422025:	jge    0x421fb4
  422027:	adc    eax,0x76f2a345
  42202c:	mov    ds:0x414b8ece,eax
  422031:	push   es
  422032:	sbb    eax,0xc37e3a16
  422037:	out    0xcf,al
  422039:	bound  edi,QWORD PTR [edx]
  42203b:	scas   al,BYTE PTR es:[edi]
  42203c:	mov    DWORD PTR [edi+0xa],ecx
  42203f:	enter  0xe9fe,0xe6
  422043:	scas   al,BYTE PTR es:[edi]
  422044:	xchg   BYTE PTR [eax-0x231fb59f],ch
  42204a:	push   0xffffffef
  42204c:	(bad)  
  42204d:	aam    0xdc
  42204f:	jg     0x422060
  422051:	pop    ss
  422052:	in     al,dx
  422053:	jmp    0x91dad11f
  422058:	jbe    0x422012
  42205a:	jp     0x421fe6
  42205c:	int    0x22
  42205e:	call   0xd64e4750
  422063:	(bad)  
  422065:	ror    DWORD PTR ds:0xd4513141,1
  42206b:	inc    esp
  42206d:	(bad)  
  42206f:	imul   edi,DWORD PTR [eax+0x7f],0x6c
  422073:	jge    0x422070
  422075:	cmp    BYTE PTR [ecx],cl
  422077:	push   ecx
  422078:	pop    ss
  422079:	mov    esp,0x821d8a00
  42207e:	add    BYTE PTR [esi],cl
  422080:	fnop   
  422082:	inc    eax
  422083:	mov    ch,0x2d
  422085:	xor    edi,ebx
  422087:	xchg   ecx,eax
  422088:	mov    ah,0x6e
  42208a:	out    dx,al
  42208b:	mov    ebp,0x706ce66c
  422090:	dec    edi
  422091:	add    DWORD PTR [edi],ebp
  422093:	jo     0x42206e
  422095:	stos   BYTE PTR es:[edi],al
  422096:	lds    edx,FWORD PTR ds:0x3e33fb88
  42209c:	xchg   esp,eax
  42209d:	(bad)  
  42209f:	retf   0x1993
  4220a2:	inc    esp
  4220a3:	cmc    
  4220a4:	push   edi
  4220a5:	jns    0x42202a
  4220a7:	mov    al,0x73
  4220a9:	pop    ecx
  4220aa:	(bad)  
  4220ac:	add    al,0x40
  4220ae:	sti    
  4220af:	aam    0xdc
  4220b1:	out    dx,al
  4220b2:	jg     0x42207c
  4220b4:	inc    ebp
  4220b5:	or     bh,al
  4220b7:	inc    esi
  4220b8:	pop    ds
  4220b9:	push   ebp
  4220ba:	ins    BYTE PTR es:[edi],dx
  4220bb:	xchg   esp,eax
  4220bc:	fs aaa 
  4220be:	test   DWORD PTR [edx+ecx*1-0x1b],esi
  4220c2:	sbb    esi,DWORD PTR [ebp-0x45]
  4220c5:	xor    al,0x9e
  4220c7:	fstp   DWORD PTR [ecx-0x41325f03]
  4220cd:	mov    ebp,es
  4220cf:	call   0x9844bc5
  4220d4:	jp     0x422104
  4220d6:	fdiv   QWORD PTR [edx+0x36157241]
  4220dc:	arpl   WORD PTR [bx+si+0x45d6],ax
  4220e1:	jg     0x4220f7
  4220e3:	fisubr DWORD PTR [ebx]
  4220e5:	call   0x6768:0xbea43197
  4220ec:	daa    
  4220ed:	sahf   
  4220ee:	fwait
  4220ef:	mov    eax,0x76f5f795
  4220f4:	add    DWORD PTR [edi],ecx
  4220f6:	inc    ecx
  4220f7:	mov    eax,ds:0xe64a34b2
  4220fc:	and    ch,dh
  4220fe:	mov    ?,WORD PTR [ebx+0x19]
  422101:	adc    esp,ebp
  422103:	stos   BYTE PTR es:[edi],al
  422104:	rcr    ebx,cl
  422106:	retf   
  422107:	jecxz  0x4220c1
  422109:	and    DWORD PTR [ecx-0x4e82d614],ebx
  42210f:	xlat   BYTE PTR ds:[ebx]
  422110:	pop    edi
  422111:	data16 aad 0xc
  422114:	mov    cl,0xbe
  422116:	cmp    cl,0x43
  422119:	adc    al,0xd7
  42211b:	adc    BYTE PTR [ebx],cl
  42211d:	pusha  
  42211e:	push   0xae3e28de
  422123:	sbb    dh,0xa
  422126:	repnz inc ebp
  422128:	push   esi
  422129:	cmp    ecx,DWORD PTR ds:0xe12e635a
  42212f:	mov    al,cl
  422131:	scas   al,BYTE PTR es:[edi]
  422132:	add    eax,0x24d96e3f
  422137:	js     0x4220ec
  422139:	add    eax,0x70eb0474
  42213e:	dec    DWORD PTR [edx]
  422140:	xor    dh,0x71
  422143:	ja     0x422129
  422145:	cwde   
  422146:	mov    bl,0x9a
  422148:	data16 sbb al,al
  42214b:	addr16 dec ebx
  42214d:	sbb    BYTE PTR [edi],ah
  42214f:	loope  0x422102
  422151:	bound  ebp,QWORD PTR [eax]
  422153:	gs pop ecx
  422155:	pop    es
  422156:	jmp    0x2f20:0xb0a82b0c
  42215d:	fwait
  42215e:	xor    BYTE PTR [esi],bh
  422160:	(bad)  [edx-0x2c]
  422163:	fwait
  422164:	in     eax,0x34
  422166:	es sahf 
  422168:	add    BYTE PTR [eax],bl
  42216a:	dec    esi
  42216b:	aas    
  42216c:	ret    
  42216d:	cpuid  
  42216f:	sub    BYTE PTR [ebp+edx*4-0x80],ch
  422173:	repz out 0xfe,al
  422176:	out    0x26,eax
  422178:	push   ds
  422179:	enter  0x2435,0x11
  42217d:	add    ebx,DWORD PTR [ecx]
  42217f:	jle    0x42218e
  422181:	sub    eax,0xc4850aca
  422186:	mov    ds:0x83e09c5d,eax
  42218b:	rol    DWORD PTR [edx-0x80],0x13
  42218f:	and    DWORD PTR [ebp-0x60],edi
  422192:	add    edi,DWORD PTR [ecx]
  422194:	lods   al,BYTE PTR ds:[esi]
  422195:	xchg   ecx,eax
  422196:	cmp    al,0xfc
  422198:	imul   ecx,esi,0x1c94b8c7
  42219e:	cdq    
  42219f:	ins    BYTE PTR es:[edi],dx
  4221a0:	pop    ss
  4221a1:	cdq    
  4221a2:	pop    eax
  4221a3:	dec    esp
  4221a4:	xlat   BYTE PTR ds:[ebx]
  4221a5:	cdq    
  4221a6:	iret   
  4221a7:	scas   al,BYTE PTR es:[edi]
  4221a8:	mov    bh,BYTE PTR [ebp-0x292859f5]
  4221ae:	push   ss
  4221af:	push   edx
  4221b0:	inc    esp
  4221b1:	dec    esi
  4221b2:	jbe    0x4221cd
  4221b4:	mov    esp,0x671739f1
  4221b9:	int3   
  4221ba:	inc    ebx
  4221bb:	jo     0x422184
  4221bd:	loopne 0x4221a0
  4221bf:	test   DWORD PTR [edi-0x78],eax
  4221c2:	xchg   ebp,eax
  4221c3:	mov    DWORD PTR [ebx],esi
  4221c5:	sbb    eax,DWORD PTR [ebp+0x478515b0]
  4221cb:	mov    edx,0xef2fba26
  4221d0:	mov    edi,0x49a2ddd6
  4221d5:	lahf   
  4221d6:	je     0x4221a1
  4221d8:	adc    esp,DWORD PTR [ebx-0x497596ae]
  4221de:	mov    al,0x3f
  4221e0:	sub    eax,0xc8986996
  4221e5:	mov    cl,0x8
  4221e7:	cmc    
  4221e8:	dec    ecx
  4221e9:	bound  esi,QWORD PTR [esp+eiz*8-0x4e]
  4221ed:	das    
  4221ee:	jmp    0x42224e
  4221f0:	aaa    
  4221f1:	jmp    0x3737:0xdefd6b92
  4221f8:	xlat   BYTE PTR ds:[ebx]
  4221f9:	cmp    dl,BYTE PTR ds:0x150e7a27
  4221ff:	xchg   esp,eax
  422200:	mov    edx,0x455b672
  422205:	dec    ebp
  422206:	inc    ecx
  422207:	lahf   
  422208:	xchg   ebp,eax
  422209:	(bad)  
  42220a:	fidivr DWORD PTR [eax]
  42220c:	les    ebp,FWORD PTR [ebx-0x19d1bfa9]
  422212:	and    al,bh
  422214:	iret   
  422215:	xor    BYTE PTR [ecx+0x5c],bl
  422218:	push   esp
  422219:	(bad)  
  42221a:	sbb    DWORD PTR [ebp+0x6c79ae96],ebp
  422220:	scas   eax,DWORD PTR es:[edi]
  422221:	mov    dh,0x3f
  422223:	inc    edx
  422224:	(bad)
  422227:	fsub   DWORD PTR [esi+0x49]
  42222a:	mov    cl,0x11
  42222c:	mov    edx,0x8e38213c
  422231:	cld    
  422232:	into   
  422233:	(bad)  
  422234:	hlt    
  422235:	clc    
  422236:	ficomp DWORD PTR [edx+0xa]
  422239:	outs   dx,BYTE PTR ds:[esi]
  42223a:	xor    eax,0x33b702b2
  42223f:	idiv   ebx
  422241:	lods   al,BYTE PTR ds:[esi]
  422242:	hlt    
  422243:	(bad)  
  422244:	imul   ecx,DWORD PTR [edi+edx*1],0x65
  422248:	push   edx
  422249:	cmp    ah,BYTE PTR [eax-0x23]
  42224c:	call   0x4f4ee329
  422251:	jge    0x4222b1
  422253:	in     eax,0xaf
  422255:	mov    al,ds:0x68c95c2c
  42225a:	rol    edx,cl
  42225c:	or     edi,DWORD PTR [ebx+ebp*2+0x73]
  422260:	jge    0x4222d8
  422262:	push   cs
  422263:	sbb    ebx,DWORD PTR [esi]
  422265:	sub    BYTE PTR [ebp+0x5705085c],cl
  42226b:	mov    ds:0xcf644836,al
  422270:	xchg   al,ah
  422272:	and    eax,0x54d17d72
  422277:	loope  0x4222bd
  422279:	and    DWORD PTR [ebx-0x62],ebx
  42227c:	mov    bh,0x73
  42227e:	sahf   
  42227f:	fild   WORD PTR [edx+0x6a]
  422282:	rcr    ch,cl
  422284:	pop    ebp
  422285:	adc    edi,eax
  422287:	xchg   DWORD PTR [edx+0x41],ebp
  42228a:	add    al,0x5d
  42228c:	cld    
  42228d:	xor    BYTE PTR [ebx],bh
  42228f:	inc    ebp
  422290:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422291:	and    bl,bl
  422293:	mov    al,0x78
  422295:	lea    esi,[ecx-0x5b]
  422298:	mov    ebp,0x3ba0e6e8
  42229d:	inc    ecx
  42229e:	jne    0x422308
  4222a0:	mov    ebp,0x7b63fcb2
  4222a5:	sub    al,0xb5
  4222a7:	push   ebx
  4222a8:	test   eax,0xeffed6b1
  4222ad:	adc    BYTE PTR [ebx],bl
  4222af:	mov    dh,0x9a
  4222b1:	cli    
  4222b2:	dec    edi
  4222b3:	and    al,0xb1
  4222b5:	inc    eax
  4222b6:	fwait
  4222b7:	iret   
  4222b8:	dec    esp
  4222b9:	cmc    
  4222ba:	push   ds
  4222bb:	mov    ah,0x3
  4222bd:	aas    
  4222be:	ss call 0x10abe162
  4222c4:	cs icebp 
  4222c6:	das    
  4222c7:	(bad)  
  4222c8:	nop
  4222c9:	jle    0x4222e1
  4222cb:	adc    DWORD PTR [ecx-0x15],ecx
  4222ce:	sub    eax,ebx
  4222d0:	in     eax,0x4e
  4222d2:	hlt    
  4222d3:	xor    eax,0x387c124c
  4222d8:	mov    bh,0xc2
  4222da:	mov    dl,0xe3
  4222dc:	mov    fs,WORD PTR [ebx+ebp*2]
  4222df:	dec    esi
  4222e0:	xor    al,0x20
  4222e2:	sbb    BYTE PTR [edi],0x41
  4222e5:	mov    dl,0xfb
  4222e7:	test   al,0x2d
  4222e9:	mov    al,0x2e
  4222eb:	iret   
  4222ec:	or     edx,DWORD PTR [eax-0x32]
  4222ef:	or     cl,dh
  4222f1:	mov    ebx,0xdb559d4f
  4222f6:	sbb    DWORD PTR [edi+0x47],ebp
  4222f9:	mov    ds:0x543f7419,al
  4222fe:	add    BYTE PTR [edi],0x5f
  422301:	sbb    al,0x45
  422303:	lds    ebp,FWORD PTR [edx+0x281bb99b]
  422309:	jecxz  0x42234e
  42230b:	daa    
  42230c:	sbb    edx,eax
  42230e:	sbb    DWORD PTR [edx],esp
  422310:	das    
  422311:	sub    eax,0x8e312838
  422316:	pop    esp
  422317:	arpl   WORD PTR [ebx-0x21],sp
  42231a:	mov    dl,0x74
  42231c:	test   edi,esi
  42231e:	icebp  
  42231f:	outs   dx,DWORD PTR ds:[esi]
  422320:	mov    ah,0x7e
  422322:	inc    edx
  422323:	mov    ds:0xb5f1011f,al
  422328:	rcr    BYTE PTR [esi+0x13],1
  42232b:	xlat   BYTE PTR ds:[ebx]
  42232c:	sahf   
  42232d:	rcr    BYTE PTR [ecx*1-0x58d10240],1
  422334:	mov    cl,BYTE PTR [ebp+edx*8+0xd4bd6]
  42233b:	mov    dl,BYTE PTR [ebx-0x422d19e7]
  422341:	push   es
  422342:	ror    BYTE PTR [ebp+0x1c7806cc],1
  422348:	mov    ah,0x9b
  42234a:	sub    ecx,ebp
  42234c:	ret    
  42234d:	retf   
  42234e:	and    eax,0xd9d2ffa9
  422353:	push   eax
  422354:	dec    ecx
  422355:	xchg   ebp,eax
  422356:	sar    DWORD PTR [edx],0xea
  422359:	fstp   TBYTE PTR [ebx+0x72]
  42235c:	stos   DWORD PTR es:[edi],eax
  42235d:	push   eax
  42235e:	push   edx
  42235f:	sub    al,0x52
  422361:	scas   eax,DWORD PTR es:[edi]
  422362:	and    al,0x5d
  422364:	mov    ds:0xde44ab5e,eax
  422369:	dec    esi
  42236a:	xchg   ebx,eax
  42236b:	cmp    BYTE PTR [ebx],bl
  42236d:	inc    esp
  42236e:	push   esi
  42236f:	mov    WORD PTR [esi],ax
  422372:	inc    edx
  422373:	sbb    al,0xd9
  422375:	mov    ds:0x7e432244,al
  42237a:	add    eax,0xac4bd270
  42237f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422380:	shr    esp,cl
  422382:	out    dx,al
  422383:	pushf  
  422384:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422385:	push   esp
  422386:	aas    
  422387:	sbb    DWORD PTR [eax-0x30],ebx
  42238a:	xlat   BYTE PTR ds:[ebx]
  42238b:	enter  0xc4a0,0x6e
  42238f:	add    dl,BYTE PTR [ebx+edi*1+0x108b152e]
  422396:	or     DWORD PTR [esi-0x76],ebx
  422399:	xchg   esp,eax
  42239a:	fcmovnb st,st(6)
  42239c:	push   esp
  42239d:	pushf  
  42239e:	lds    esp,FWORD PTR [eax]
  4223a0:	xlat   BYTE PTR ds:[ebx]
  4223a1:	xchg   ecx,eax
  4223a2:	xchg   BYTE PTR [ebx+edx*8+0x490fba9e],al
  4223a9:	jno    0x4223fc
  4223ab:	add    al,BYTE PTR [edi]
  4223ad:	std    
  4223ae:	sbb    al,0x4a
  4223b0:	(bad)  
  4223b1:	dec    ecx
  4223b2:	sbb    DWORD PTR [ecx+0x69],edi
  4223b5:	aam    0xa8
  4223b7:	jle    0x422398
  4223b9:	jmp    0x6380:0x982bd3f4
  4223c0:	mov    cl,0xe8
  4223c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223c3:	xor    DWORD PTR [edi+0x5c],esp
  4223c6:	sbb    al,0xa0
  4223c8:	push   ebp
  4223c9:	pop    edx
  4223ca:	iret   
  4223cb:	mov    WORD PTR [ebp+0x67f68e3f],cs
  4223d1:	add    edx,eax
  4223d3:	mov    cs,ebp
  4223d5:	add    eax,0x9131f91c
  4223da:	mov    cl,0xbb
  4223dc:	(bad)  
  4223dd:	adc    al,0x6b
  4223df:	xor    al,0x98
  4223e1:	dec    ebx
  4223e2:	iret   
  4223e3:	xor    cl,BYTE PTR ds:0x1f0b5b30
  4223e9:	adc    bl,BYTE PTR [ebx+eiz*1+0x3a]
  4223ed:	inc    ebp
  4223ee:	jne    0x42244d
  4223f0:	push   eax
  4223f1:	cwde   
  4223f2:	daa    
  4223f3:	pop    eax
  4223f4:	out    dx,al
  4223f5:	hlt    
  4223f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4223f7:	mov    bl,0xee
  4223f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4223fa:	lods   eax,DWORD PTR ds:[esi]
  4223fb:	add    eax,0x756c2517
  422400:	push   edi
  422401:	outs   dx,BYTE PTR ds:[esi]
  422402:	leave  
  422403:	cmp    DWORD PTR [edx-0x47],edx
  422406:	sbb    eax,0x43b25a24
  42240b:	bts    DWORD PTR [edi-0x28],esi
  42240f:	ficomp DWORD PTR cs:[edi+0x1d]
  422413:	retf   0xf981
  422416:	xchg   ecx,eax
  422417:	mov    al,0x26
  422419:	dec    edi
  42241a:	pop    esp
  42241b:	int    0x88
  42241d:	popf   
  42241e:	xchg   esp,eax
  42241f:	push   ds
  422420:	repz add dl,BYTE PTR [esi-0x31]
  422424:	pop    esi
  422425:	test   al,0x89
  422427:	xor    DWORD PTR [esi+edi*1],esi
  42242a:	gs sbb eax,0x63743397
  422430:	repz lfs esp,FWORD PTR [ebx-0x57]
  422435:	sahf   
  422436:	push   edx
  422437:	imul   ecx,DWORD PTR [ebx],0xffffffca
  42243a:	inc    esi
  42243b:	in     al,dx
  42243c:	and    DWORD PTR [eax],ecx
  42243e:	and    edx,edi
  422440:	imul   ecx,DWORD PTR [ebp-0x2d544f],0xfe9b1f39
  42244a:	pop    ss
  42244b:	dec    edi
  42244c:	rcl    DWORD PTR [edx+0x4886d1b3],1
  422452:	sub    esp,esi
  422454:	jge    0x4224a5
  422456:	inc    ebp
  422457:	pop    esp
  422458:	fnsave [esi+ebp*1-0x22]
  42245c:	sbb    eax,0xffffffe5
  42245f:	scas   al,BYTE PTR es:[edi]
  422460:	rcr    DWORD PTR [eax-0x5cf5d29f],0x6
  422467:	outs   dx,DWORD PTR ds:[esi]
  422468:	inc    edx
  422469:	arpl   dx,bp
  42246b:	push   ds
  42246c:	add    edi,ebp
  42246e:	mov    ds:0x92dccf6,eax
  422473:	pop    edi
  422474:	sbb    DWORD PTR [ebx],eax
  422476:	and    esi,DWORD PTR [ebp+0x58]
  422479:	xor    cl,BYTE PTR [ecx+esi*2+0x1efe3f3f]
  422480:	adc    dl,BYTE PTR [esi-0x35]
  422483:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422484:	mov    BYTE PTR [esi+0xd9fc0ce],ch
  42248a:	xchg   esp,eax
  42248b:	mov    eax,0x97ea54a3
  422490:	cmp    eax,0x753aef7f
  422495:	pop    ebp
  422496:	add    al,0x32
  422498:	ja     0x422476
  42249a:	daa    
  42249b:	daa    
  42249c:	repz jns 0x422476
  42249f:	mov    bh,0x4b
  4224a1:	shl    DWORD PTR [ebp+0x6ded1236],cl
  4224a7:	aas    
  4224a8:	scas   al,BYTE PTR es:[edi]
  4224a9:	mov    esi,0x79c47ab5
  4224ae:	push   ebx
  4224af:	ins    DWORD PTR es:[edi],dx
  4224b0:	arpl   WORD PTR [esi+0x6d],cx
  4224b3:	stos   DWORD PTR es:[edi],eax
  4224b4:	icebp  
  4224b5:	sub    DWORD PTR [edx],0xffffff89
  4224b8:	cwde   
  4224b9:	adc    al,0x55
  4224bb:	mov    dl,0x69
  4224bd:	push   ecx
  4224be:	jo     0x422503
  4224c0:	pop    esi
  4224c1:	test   BYTE PTR [ebp+0x45],0x89
  4224c5:	sbb    dl,BYTE PTR fs:[ebp-0x3b195cf2]
  4224cc:	push   ecx
  4224cd:	sbb    DWORD PTR [edx-0x3f],ebx
  4224d0:	fdivr  QWORD PTR [edx-0x3]
  4224d3:	push   edx
  4224d4:	lea    ebx,gs:[eax-0x13]
  4224d8:	les    eax,FWORD PTR [eax+0x32120f83]
  4224de:	jne    0x422481
  4224e0:	xchg   ecx,eax
  4224e1:	test   al,0x54
  4224e3:	fwait
  4224e4:	cmp    DWORD PTR [eax],0x78086a2f
  4224ea:	shr    BYTE PTR [esi+0x23275982],1
  4224f0:	outs   dx,DWORD PTR ds:[esi]
  4224f1:	(bad)  
  4224f2:	xchg   esi,eax
  4224f3:	aam    0xfb
  4224f5:	mov    ebx,0x6e8f46fe
  4224fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4224fb:	and    BYTE PTR [edi],bl
  4224fd:	xlat   BYTE PTR ds:[ebx]
  4224fe:	in     eax,0x28
  422500:	push   cs
  422501:	cld    
  422502:	dec    ecx
  422503:	inc    ebp
  422504:	retf   
  422505:	je     0x42248b
  422507:	sahf   
  422508:	adc    bh,cl
  42250a:	ss adc al,0xc2
  42250d:	jecxz  0x4224cc
  42250f:	xchg   edx,eax
  422510:	push   ecx
  422511:	add    DWORD PTR [ebx-0x5df272f3],edx
  422517:	sub    DWORD PTR [ebp+0x7e],edi
  42251a:	test   DWORD PTR [ecx+0x7f],eax
  42251d:	nop
  42251e:	xchg   esi,eax
  42251f:	out    0x55,al
  422521:	push   cs
  422522:	clc    
  422523:	pop    ecx
  422524:	(bad)  
  422525:	mov    edx,0x92bd2eae
  42252a:	addr16 lock push 0xffffffb7
  42252e:	sub    ah,BYTE PTR [esp+ecx*1+0x37]
  422532:	das    
  422533:	pop    ecx
  422534:	add    edx,DWORD PTR [ebp+0x34]
  422537:	fnstcw WORD PTR [eax-0x9]
  42253a:	clc    
  42253b:	ror    DWORD PTR [edi+0x3f094084],cl
  422541:	sub    DWORD PTR [esi+0x9b2a3f6],edi
  422547:	sbb    DWORD PTR [edx+0x42eb1589],0x1fb8d228
  422551:	gs int3 
  422553:	enter  0xc587,0x6d
  422557:	retf   
  422558:	fisub  DWORD PTR [eax+0x57]
  42255b:	mov    esp,0x511f2fd5
  422560:	jns    0x42257f
  422562:	push   ds
  422563:	add    eax,0xdd67cf83
  422568:	jg     0xf861d471
  42256e:	aaa    
  42256f:	jnp    0x42250c
  422571:	in     al,dx
  422572:	or     ebx,eax
  422574:	sub    eax,0xbab3ca22
  422579:	ja     0x4225e4
  42257b:	ret    
  42257c:	push   ebx
  42257d:	dec    edx
  42257e:	fiadd  WORD PTR [edi+0x33]
  422581:	pop    ecx
  422582:	dec    eax
  422583:	sub    DWORD PTR [ecx-0x72],eax
  422586:	jg     0x4225fa
  422588:	mov    ebp,0x58ae65fe
  42258d:	hlt    
  42258e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42258f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422590:	jo     0x422575
  422592:	lock mov ebp,0xdee9787
  422598:	mov    edx,0x40af8428
  42259d:	mov    eax,DWORD PTR [ecx-0x54]
  4225a0:	bound  eax,QWORD PTR [edi+0x48]
  4225a3:	in     al,dx
  4225a4:	and    DWORD PTR ss:[eax],esi
  4225a7:	ficomp WORD PTR [eax]
  4225a9:	ds iret 
  4225ab:	int    0x9b
  4225ad:	(bad)  
  4225ae:	jbe    0x422591
  4225b0:	mov    ah,0xc9
  4225b2:	push   ds
  4225b3:	lahf   
  4225b4:	test   al,0x45
  4225b6:	out    0xde,eax
  4225b8:	retf   
  4225b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4225ba:	cmc    
  4225bb:	jae    0x422601
  4225bd:	and    eax,0x17197b44
  4225c2:	fwait
  4225c3:	mov    ds:0xfd773c74,eax
  4225c8:	lods   eax,DWORD PTR ds:[esi]
  4225c9:	xlat   BYTE PTR ds:[ebx]
  4225ca:	outs   dx,BYTE PTR ds:[esi]
  4225cb:	loopne 0x422578
  4225cd:	adc    eax,0xedab23aa
  4225d2:	add    al,0xf1
  4225d4:	out    dx,al
  4225d5:	sti    
  4225d6:	fldcw  WORD PTR [ebp+eax*1-0x7a24ce30]
  4225dd:	sbb    BYTE PTR [esi],0xbc
  4225e0:	pop    es
  4225e1:	mov    ah,0x9e
  4225e3:	scas   eax,DWORD PTR es:[edi]
  4225e4:	xchg   edx,eax
  4225e5:	sti    
  4225e6:	icebp  
  4225e7:	sub    al,0xf1
  4225e9:	and    DWORD PTR [esi+0x20],ecx
  4225ec:	jg     0x42257c
  4225ee:	shl    BYTE PTR [eax-0x42],cl
  4225f1:	loop   0x422615
  4225f3:	lahf   
  4225f4:	test   BYTE PTR [esi],ch
  4225f6:	dec    eax
  4225f7:	test   DWORD PTR [esi],esp
  4225f9:	outs   dx,DWORD PTR ds:[esi]
  4225fa:	fsub   st,st(4)
  4225fc:	mov    edi,0xb3f05d55
  422601:	xor    al,0xe1
  422603:	mov    WORD PTR [edx-0x2efb65bc],gs
  422609:	enter  0x8a79,0xac
  42260d:	jle    0x4225f7
  42260f:	mov    ebp,0x5dccfe30
  422614:	xor    bh,BYTE PTR ds:0x7163377c
  42261a:	jp     0x4225ba
  42261c:	test   DWORD PTR [ebx],0x6cece810
  422622:	dec    ebx
  422623:	dec    esp
  422624:	inc    esp
  422625:	in     al,dx
  422626:	jmp    0x422626
  422628:	xor    al,0x40
  42262a:	xlat   BYTE PTR ds:[ebx]
  42262b:	jmp    0x42269f
  42262d:	sti    
  42262e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42262f:	dec    esi
  422630:	sti    
  422631:	inc    ebx
  422632:	clc    
  422633:	push   0xfffffffe
  422635:	popa   
  422636:	mov    DWORD PTR [edi],ecx
  422638:	ret    0x9f
  42263b:	cdq    
  42263c:	sbb    ebx,DWORD PTR [ebp+0x26]
  42263f:	push   0x4f42655f
  422644:	mov    ch,0x4a
  422646:	in     al,dx
  422647:	(bad)  
  422648:	test   eax,0x4dec4e89
  42264d:	mov    ah,0xc6
  42264f:	jb     0x422615
  422651:	iret   
  422652:	mov    ch,cl
  422654:	leave  
  422655:	dec    esi
  422656:	sub    DWORD PTR ds:[si],esp
  42265a:	scas   eax,DWORD PTR es:[edi]
  42265b:	jl     0x422624
  42265d:	ret    0x7278
  422660:	cmp    BYTE PTR [eax+edi*1],0xd3
  422664:	inc    edx
  422665:	mov    bh,0xa4
  422667:	icebp  
  422668:	mov    al,0x24
  42266a:	jmp    0xb5e08985
  42266f:	mov    BYTE PTR [eax-0x7f],cl
  422672:	fsubr  DWORD PTR [edi+0x2391eef9]
  422678:	xchg   ecx,eax
  422679:	test   BYTE PTR [edx],0x56
  42267c:	inc    esi
  42267d:	add    eax,0x9d322041
  422682:	jno    0x4226b0
  422684:	sbb    eax,0x813a91cf
  422689:	fcompp 
  42268b:	lods   al,BYTE PTR ds:[esi]
  42268c:	sahf   
  42268d:	jo     0x422614
  42268f:	inc    eax
  422690:	add    BYTE PTR [edi+0x6c],0xd5
  422694:	jns    0x42270d
  422696:	or     al,0x7b
  422698:	mov    al,0xe3
  42269a:	(bad)  
  42269b:	pop    ds
  42269c:	sub    ah,BYTE PTR [edx-0x42]
  42269f:	dec    ecx
  4226a0:	xchg   ebx,eax
  4226a1:	push   ds
  4226a2:	sti    
  4226a3:	cwde   
  4226a4:	mov    ebp,0xf823f99d
  4226a9:	jp     0x42270c
  4226ab:	test   al,dh
  4226ad:	call   0x98d8eb00
  4226b2:	lods   eax,DWORD PTR ds:[esi]
  4226b3:	loopne 0x422705
  4226b5:	xor    eax,0x5d2d4036
  4226ba:	lahf   
  4226bb:	jge    0x422654
  4226bd:	call   0x21018700
  4226c2:	push   eax
  4226c3:	fsub   QWORD PTR [esi+0x4bfa5ce7]
  4226c9:	pop    es
  4226ca:	mov    eax,ds:0x432bfb24
  4226cf:	inc    edx
  4226d0:	mov    ds:0x4a1c4f40,al
  4226d5:	push   esi
  4226d6:	fiadd  DWORD PTR [ebp-0x1]
  4226d9:	call   0x4712:0x6d082196
  4226e0:	iret   
  4226e1:	cmp    ebp,DWORD PTR [ecx+eiz*4+0x3dd4affd]
  4226e8:	sub    al,0xbd
  4226ea:	cwde   
  4226eb:	pop    ebp
  4226ec:	lea    esp,ds:0x26931dda
  4226f2:	bound  esp,QWORD PTR [ecx-0x61]
  4226f5:	xchg   BYTE PTR [esi],dh
  4226f7:	add    DWORD PTR [eax],0xffffff97
  4226fa:	xor    BYTE PTR [ebx+eiz*1-0x74],ah
  4226fe:	mov    eax,ds:0x13985446
  422703:	dec    eax
  422704:	cmp    eax,0xac4ae525
  422709:	repnz push esi
  42270b:	(bad)  
  42270c:	retf   0xeb14
  42270f:	xchg   ebp,eax
  422710:	cmp    eax,0xd029d741
  422715:	enter  0x4025,0xfd
  422719:	mov    bh,0x67
  42271b:	stc    
  42271c:	stos   DWORD PTR es:[edi],eax
  42271d:	aam    0x33
  42271f:	(bad)  [esi]
  422721:	cs dec ebx
  422723:	test   eax,0xd60323db
  422728:	push   ss
  422729:	(bad)  
  42272a:	paddusb mm7,QWORD PTR [eax]
  42272d:	frstor [eax]
  42272f:	fild   QWORD PTR [ebp-0x3e689521]
  422735:	call   0xe884:0x5ee0f00f
  42273c:	ss dec edi
  42273e:	pop    ebx
  42273f:	imul   ebx,ecx,0x63
  422742:	xor    ebp,DWORD PTR [ebp-0x2b]
  422745:	das    
  422746:	xchg   edi,eax
  422748:	push   cs
  422749:	(bad)  
  42274a:	(bad)  
  42274b:	fnstcw WORD PTR [edx+ebp*1+0x24]
  42274f:	jp     0x422752
  422751:	sbb    DWORD PTR [ecx-0x2f4fcd14],ecx
  422757:	loope  0x42275f
  422759:	add    dh,BYTE PTR [edi+0x428bf21a]
  42275f:	addr16 add eax,edi
  422762:	jno    0x422791
  422764:	repnz aas 
  422766:	test   eax,0x8a3b2417
  42276b:	xchg   BYTE PTR [esp+eax*4],dh
  42276e:	adc    BYTE PTR [ebp+0x722f77b4],ch
  422774:	push   edi
  422775:	call   0x2207:0x83f93b7b
  42277c:	aas    
  42277d:	test   al,0x3d
  42277f:	push   esi
  422780:	out    0xe1,eax
  422782:	call   0xb2cb:0x8ee25136
  422789:	shl    BYTE PTR [ebp+edi*1+0x201d213d],cl
  422790:	sbb    eax,0x81c3444b
  422795:	jmp    0x42274f
  422797:	(bad)  
  422798:	(bad)  
  422799:	push   eax
  42279a:	aad    0xd
  42279c:	xor    eax,0x4910b224
  4227a1:	inc    edi
  4227a2:	push   cs
  4227a3:	mov    dl,ah
  4227a5:	test   al,0x87
  4227a7:	fwait
  4227a8:	mov    BYTE PTR [esi],cl
  4227aa:	cmp    al,0x7b
  4227ac:	pop    ebp
  4227ad:	adc    eax,0x5efa6b51
  4227b2:	jmp    FWORD PTR [esi-0x5e]
  4227b5:	call   0x51c036bf
  4227ba:	daa    
  4227bb:	fimul  WORD PTR [ecx]
  4227bd:	pop    es
  4227be:	xchg   edx,eax
  4227bf:	or     ch,BYTE PTR [ecx+0x5f9ec7c7]
  4227c5:	sbb    eax,0x4e3b8c34
  4227ca:	mov    ah,0x54
  4227cc:	fsubr  st(4),st
  4227ce:	cs and BYTE PTR ss:[edx+eax*8+0x41],ah
  4227d4:	(bad)  
  4227d5:	sub    DWORD PTR ds:0x57f6c5be,eax
  4227db:	lock sub dh,BYTE PTR cs:[ecx+0x7b8f3f91]
  4227e3:	shl    DWORD PTR [ebx],cl
  4227e5:	addr16 dec edi
  4227e7:	pop    ebx
  4227e8:	xchg   DWORD PTR [edi],ebx
  4227ea:	shr    bl,cl
  4227ec:	lock std 
  4227ee:	xor    al,0x3c
  4227f0:	xor    dh,cl
  4227f2:	xchg   ebx,eax
  4227f3:	pop    esp
  4227f4:	mul    DWORD PTR [ebx+0x6514566e]
  4227fa:	mov    edx,0x67a5a5e3
  4227ff:	aam    0x76
  422801:	mov    eax,ds:0x6d129aa2
  422806:	mov    cs,WORD PTR [eax-0x22]
  422809:	mov    ah,0xd1
  42280b:	daa    
  42280c:	push   ds
  42280d:	mov    al,0x8d
  42280f:	xor    dh,BYTE PTR [eax-0x5ea11e66]
  422815:	or     al,0xc3
  422817:	xor    esi,DWORD PTR [esi-0x14]
  42281a:	arpl   WORD PTR [esi-0x2f6c60c7],sp
  422820:	(bad)  
  422821:	dec    ecx
  422822:	mov    DWORD PTR [edi],edx
  422824:	test   DWORD PTR [ebp-0x2d],edi
  422827:	mov    ds:0x94b537ad,eax
  42282c:	adc    ebx,DWORD PTR [edx-0x5d8ce171]
  422832:	aad    0xa9
  422834:	enter  0xb106,0x8a
  422838:	in     al,dx
  422839:	cmp    dl,BYTE PTR [edx]
  42283b:	mov    eax,ds:0x97008fec
  422840:	leave  
  422841:	inc    edi
  422842:	not    BYTE PTR [edx-0x58]
  422845:	dec    edi
  422846:	fldenv [ebp-0x6d23b28d]
  42284c:	ja     0x4227e3
  42284e:	and    al,0x5
  422850:	loope  0x422870
  422852:	popf   
  422853:	jle    0x42287e
  422855:	xchg   ebp,eax
  422856:	jl     0x42288e
  422858:	aam    0xa1
  42285a:	les    ecx,FWORD PTR [esi-0x16]
  42285d:	jbe    0x4227e2
  42285f:	ins    DWORD PTR es:[edi],dx
  422860:	inc    esi
  422861:	int    0xa2
  422863:	retf   
  422864:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422865:	add    DWORD PTR [ebx-0x5],ebx
  422868:	data16 addr16 or bh,ch
  42286c:	bound  esp,QWORD PTR [edx]
  42286e:	cld    
  42286f:	js     0x422837
  422871:	and    eax,0x57af4d19
  422876:	retf   0xa038
  422879:	dec    edx
  42287a:	xchg   esi,eax
  42287b:	stos   BYTE PTR es:[edi],al
  42287c:	call   0x9e07:0x4a3a2574
  422883:	and    al,0x3
  422885:	mov    ebp,0x52b1aeb
  42288a:	sahf   
  42288b:	retf   0xd3c6
  42288e:	xchg   ebx,eax
  42288f:	xchg   ecx,eax
  422890:	fimul  DWORD PTR [eax]
  422892:	shl    BYTE PTR ds:0xfcd1aede,1
  422898:	test   al,0xb9
  42289a:	dec    ecx
  42289b:	adc    eax,0xafefdbb8
  4228a0:	cmc    
  4228a1:	sahf   
  4228a2:	pusha  
  4228a3:	sbb    eax,0xf5b27a23
  4228a8:	fwait
  4228a9:	ins    DWORD PTR es:[edi],dx
  4228aa:	mov    ecx,0x371aa6f2
  4228af:	push   0xa1163291
  4228b4:	stos   BYTE PTR es:[edi],al
  4228b5:	sub    ecx,0x3c0469f4
  4228bb:	and    DWORD PTR [edx+eax*8+0x1f9c47c1],esi
  4228c2:	or     edi,DWORD PTR [esi-0x77bc52b]
  4228c8:	dec    esi
  4228c9:	inc    eax
  4228ca:	xor    dl,BYTE PTR [esi]
  4228cc:	sahf   
  4228cd:	add    ecx,edi
  4228cf:	cwde   
  4228d0:	sti    
  4228d1:	lods   eax,DWORD PTR ds:[esi]
  4228d2:	mov    edx,0x35f7d0a
  4228d7:	mov    edx,0xdc05e2df
  4228dc:	fistp  DWORD PTR [edx+0x3762dfa]
  4228e2:	mov    eax,ebx
  4228e4:	pop    ebx
  4228e5:	mov    ah,0xec
  4228e7:	xchg   ebp,eax
  4228e8:	int3   
  4228e9:	add    ecx,esp
  4228eb:	aam    0xc8
  4228ed:	xor    eax,0xc0d0d0a7
  4228f2:	mov    ecx,0x26edb6e1
  4228f7:	fmul   DWORD PTR [ecx-0x3673ef10]
  4228fd:	add    BYTE PTR [eax-0x47],bl
  422900:	jp     0x4228e3
  422902:	mov    DWORD PTR [ebx+0x5951cfbf],esi
  422908:	dec    eax
  422909:	cwde   
  42290a:	sbb    ecx,DWORD PTR [esi]
  42290c:	jp     0x42290c
  42290e:	pop    esi
  42290f:	pop    esi
  422910:	mov    dh,0xdf
  422912:	inc    esp
  422913:	rol    BYTE PTR [edx-0x1a743fcd],0x5d
  42291a:	ret    0x10
  42291d:	nop
  42291e:	nop
  42291f:	nop
  422920:	cmp    DWORD PTR ds:0x45cabc,0x1
  422927:	jne    0x42292e
  422929:	call   0x422e6c
  42292e:	push   DWORD PTR [esp+0x4]
  422932:	call   0x422cf5
  422937:	push   0xff
  42293c:	call   DWORD PTR ds:0x45c1c0
  422942:	pop    ecx
  422943:	pop    ecx
  422944:	ret    
  422945:	cmp    DWORD PTR ds:0x45cabc,0x1
  42294c:	jne    0x422953
  42294e:	call   0x422e6c
  422953:	push   DWORD PTR [esp+0x4]
  422957:	call   0x422cf5
  42295c:	push   0xff
  422961:	call   0x422b3b
  422966:	pop    ecx
  422967:	pop    ecx
  422968:	ret    
  422969:	push   0x60
  42296b:	push   0x428110
  422970:	call   0x423858
  422975:	mov    edi,0x94
  42297a:	mov    eax,edi
  42297c:	call   0x4238b0
  422981:	mov    DWORD PTR [ebp-0x18],esp
  422984:	mov    esi,esp
  422986:	mov    DWORD PTR [esi],edi
  422988:	push   esi
  422989:	call   DWORD PTR ds:0x428024
  42298f:	mov    ecx,DWORD PTR [esi+0x10]
  422992:	mov    DWORD PTR ds:0x45cac4,ecx
  422998:	mov    eax,DWORD PTR [esi+0x4]
  42299b:	mov    ds:0x45cad0,eax
  4229a0:	mov    edx,DWORD PTR [esi+0x8]
  4229a3:	mov    DWORD PTR ds:0x45cad4,edx
  4229a9:	mov    esi,DWORD PTR [esi+0xc]
  4229ac:	and    esi,0x7fff
  4229b2:	mov    DWORD PTR ds:0x45cac8,esi
  4229b8:	cmp    ecx,0x2
  4229bb:	je     0x4229c9
  4229bd:	or     esi,0x8000
  4229c3:	mov    DWORD PTR ds:0x45cac8,esi
  4229c9:	shl    eax,0x8
  4229cc:	add    eax,edx
  4229ce:	mov    ds:0x45cacc,eax
  4229d3:	xor    esi,esi
  4229d5:	push   esi
  4229d6:	mov    edi,DWORD PTR ds:0x428014
  4229dc:	call   edi
  4229de:	cmp    WORD PTR [eax],0x5a4d
  4229e3:	jne    0x422a04
  4229e5:	mov    ecx,DWORD PTR [eax+0x3c]
  4229e8:	add    ecx,eax
  4229ea:	cmp    DWORD PTR [ecx],0x4550
  4229f0:	jne    0x422a04
  4229f2:	movzx  eax,WORD PTR [ecx+0x18]
  4229f6:	cmp    eax,0x10b
  4229fb:	je     0x422a1c
  4229fd:	cmp    eax,0x20b
  422a02:	je     0x422a09
  422a04:	mov    DWORD PTR [ebp-0x1c],esi
  422a07:	jmp    0x422a30
  422a09:	cmp    DWORD PTR [ecx+0x84],0xe
  422a10:	jbe    0x422a04
  422a12:	xor    eax,eax
  422a14:	cmp    DWORD PTR [ecx+0xf8],esi
  422a1a:	jmp    0x422a2a
  422a1c:	cmp    DWORD PTR [ecx+0x74],0xe
  422a20:	jbe    0x422a04
  422a22:	xor    eax,eax
  422a24:	cmp    DWORD PTR [ecx+0xe8],esi
  422a2a:	setne  al
  422a2d:	mov    DWORD PTR [ebp-0x1c],eax
  422a30:	push   0x1
  422a32:	call   0x423807
  422a37:	pop    ecx
  422a38:	test   eax,eax
  422a3a:	jne    0x422a44
  422a3c:	push   0x1c
  422a3e:	call   0x422945
  422a43:	pop    ecx
  422a44:	call   0x42377e
  422a49:	test   eax,eax
  422a4b:	jne    0x422a55
  422a4d:	push   0x10
  422a4f:	call   0x422945
  422a54:	pop    ecx
  422a55:	call   0x423667
  422a5a:	mov    DWORD PTR [ebp-0x4],esi
  422a5d:	call   0x423469
  422a62:	test   eax,eax
  422a64:	jge    0x422a6e
  422a66:	push   0x1b
  422a68:	call   0x422920
  422a6d:	pop    ecx
  422a6e:	call   DWORD PTR ds:0x428020
  422a74:	mov    ds:0x45d274,eax
  422a79:	call   0x423347
  422a7e:	mov    ds:0x45cab4,eax
  422a83:	call   0x4232a5
  422a88:	test   eax,eax
  422a8a:	jge    0x422a94
  422a8c:	push   0x8
  422a8e:	call   0x422920
  422a93:	pop    ecx
  422a94:	call   0x423072
  422a99:	test   eax,eax
  422a9b:	jge    0x422aa5
  422a9d:	push   0x9
  422a9f:	call   0x422920
  422aa4:	pop    ecx
  422aa5:	call   0x422b7d
  422aaa:	mov    DWORD PTR [ebp-0x20],eax
  422aad:	cmp    eax,esi
  422aaf:	je     0x422ab8
  422ab1:	push   eax
  422ab2:	call   0x422920
  422ab7:	pop    ecx
  422ab8:	mov    DWORD PTR [ebp-0x38],esi
  422abb:	lea    eax,[ebp-0x64]
  422abe:	push   eax
  422abf:	call   DWORD PTR ds:0x42801c
  422ac5:	call   0x423009
  422aca:	mov    DWORD PTR [ebp-0x68],eax
  422acd:	test   BYTE PTR [ebp-0x38],0x1
  422ad1:	je     0x422ad9
  422ad3:	movzx  eax,WORD PTR [ebp-0x34]
  422ad7:	jmp    0x422adc
  422ad9:	push   0xa
  422adb:	pop    eax
  422adc:	push   eax
  422add:	push   DWORD PTR [ebp-0x68]
  422ae0:	push   esi
  422ae1:	push   esi
  422ae2:	call   edi
  422ae4:	push   eax
  422ae5:	call   0x421790
  422aea:	mov    edi,eax
  422aec:	mov    DWORD PTR [ebp-0x6c],edi
  422aef:	cmp    DWORD PTR [ebp-0x1c],esi
  422af2:	jne    0x422afa
  422af4:	push   edi
  422af5:	call   0x422cb5
  422afa:	call   0x422cd7
  422aff:	jmp    0x422b2c
  422b01:	mov    eax,DWORD PTR [ebp-0x14]
  422b04:	mov    ecx,DWORD PTR [eax]
  422b06:	mov    ecx,DWORD PTR [ecx]
  422b08:	mov    DWORD PTR [ebp-0x70],ecx
  422b0b:	push   eax
  422b0c:	push   ecx
  422b0d:	call   0x422ea5
  422b12:	pop    ecx
  422b13:	pop    ecx
  422b14:	ret    
  422b15:	mov    esp,DWORD PTR [ebp-0x18]
  422b18:	mov    edi,DWORD PTR [ebp-0x70]
  422b1b:	cmp    DWORD PTR [ebp-0x1c],0x0
  422b1f:	jne    0x422b27
  422b21:	push   edi
  422b22:	call   0x422cc6
  422b27:	call   0x422ce6
  422b2c:	or     DWORD PTR [ebp-0x4],0xffffffff
  422b30:	mov    eax,edi
  422b32:	lea    esp,[ebp-0x7c]
  422b35:	call   0x423893
  422b3a:	ret    
  422b3b:	push   0x42812c
  422b40:	call   DWORD PTR ds:0x428014
  422b46:	test   eax,eax
  422b48:	je     0x422b60
  422b4a:	push   0x42811c
  422b4f:	push   eax
  422b50:	call   DWORD PTR ds:0x428018
  422b56:	test   eax,eax
  422b58:	je     0x422b60
  422b5a:	push   DWORD PTR [esp+0x4]
  422b5e:	call   eax
  422b60:	push   DWORD PTR [esp+0x4]
  422b64:	call   DWORD PTR ds:0x428028
  422b6a:	int3   
  422b6b:	push   0x8
  422b6d:	call   0x423a1f
  422b72:	pop    ecx
  422b73:	ret    
  422b74:	push   0x8
  422b76:	call   0x42398b
  422b7b:	pop    ecx
  422b7c:	ret    
  422b7d:	mov    eax,ds:0x45d270
  422b82:	test   eax,eax
  422b84:	je     0x422b88
  422b86:	call   eax
  422b88:	push   esi
  422b89:	push   edi
  422b8a:	mov    ecx,0x42a00c
  422b8f:	mov    edi,0x42a018
  422b94:	xor    eax,eax
  422b96:	cmp    ecx,edi
  422b98:	mov    esi,ecx
  422b9a:	jae    0x422bb3
  422b9c:	test   eax,eax
  422b9e:	jne    0x422bdf
  422ba0:	mov    ecx,DWORD PTR [esi]
  422ba2:	test   ecx,ecx
  422ba4:	je     0x422ba8
  422ba6:	call   ecx
  422ba8:	add    esi,0x4
  422bab:	cmp    esi,edi
  422bad:	jb     0x422b9c
  422baf:	test   eax,eax
  422bb1:	jne    0x422bdf
  422bb3:	push   0x4236ab
  422bb8:	call   0x423b30
  422bbd:	mov    esi,0x42a000
  422bc2:	mov    eax,esi
  422bc4:	mov    edi,0x42a008
  422bc9:	cmp    eax,edi
  422bcb:	pop    ecx
  422bcc:	jae    0x422bdd
  422bce:	mov    eax,DWORD PTR [esi]
  422bd0:	test   eax,eax
  422bd2:	je     0x422bd6
  422bd4:	call   eax
  422bd6:	add    esi,0x4
  422bd9:	cmp    esi,edi
  422bdb:	jb     0x422bce
  422bdd:	xor    eax,eax
  422bdf:	pop    edi
  422be0:	pop    esi
  422be1:	ret    
  422be2:	push   ebp
  422be3:	mov    ebp,esp
  422be5:	push   esi
  422be6:	push   edi
  422be7:	push   0x8
  422be9:	call   0x423a1f
  422bee:	xor    esi,esi
  422bf0:	inc    esi
  422bf1:	cmp    DWORD PTR ds:0x45cb04,esi
  422bf7:	pop    ecx
  422bf8:	jne    0x422c0a
  422bfa:	push   DWORD PTR [ebp+0x8]
  422bfd:	call   DWORD PTR ds:0x428030
  422c03:	push   eax
  422c04:	call   DWORD PTR ds:0x42802c
  422c0a:	cmp    DWORD PTR [ebp+0xc],0x0
  422c0e:	mov    al,BYTE PTR [ebp+0x10]
  422c11:	mov    DWORD PTR ds:0x45cb00,esi
  422c17:	mov    ds:0x45cafc,al
  422c1c:	jne    0x422c70
  422c1e:	mov    ecx,DWORD PTR ds:0x45d268
  422c24:	test   ecx,ecx
  422c26:	je     0x422c51
  422c28:	mov    eax,ds:0x45d264
  422c2d:	sub    eax,0x4
  422c30:	cmp    eax,ecx
  422c32:	jmp    0x422c4a
  422c34:	mov    eax,DWORD PTR [eax]
  422c36:	test   eax,eax
  422c38:	je     0x422c3c
  422c3a:	call   eax
  422c3c:	mov    eax,ds:0x45d264
  422c41:	sub    eax,0x4
  422c44:	cmp    eax,DWORD PTR ds:0x45d268
  422c4a:	mov    ds:0x45d264,eax
  422c4f:	jae    0x422c34
  422c51:	mov    eax,0x42a01c
  422c56:	mov    esi,0x42a020
  422c5b:	cmp    eax,esi
  422c5d:	mov    edi,eax
  422c5f:	jae    0x422c70
  422c61:	mov    eax,DWORD PTR [edi]
  422c63:	test   eax,eax
  422c65:	je     0x422c69
  422c67:	call   eax
  422c69:	add    edi,0x4
  422c6c:	cmp    edi,esi
  422c6e:	jb     0x422c61
  422c70:	mov    eax,0x42a024
  422c75:	mov    esi,0x42a028
  422c7a:	cmp    eax,esi
  422c7c:	mov    edi,eax
  422c7e:	jae    0x422c8f
  422c80:	mov    eax,DWORD PTR [edi]
  422c82:	test   eax,eax
  422c84:	je     0x422c88
  422c86:	call   eax
  422c88:	add    edi,0x4
  422c8b:	cmp    edi,esi
  422c8d:	jb     0x422c80
  422c8f:	cmp    DWORD PTR [ebp+0x10],0x0
  422c93:	pop    edi
  422c94:	pop    esi
  422c95:	je     0x422ca0
  422c97:	push   0x8
  422c99:	call   0x42398b
  422c9e:	jmp    0x422cb2
  422ca0:	push   DWORD PTR [ebp+0x8]
  422ca3:	mov    DWORD PTR ds:0x45cb04,0x1
  422cad:	call   0x422b3b
  422cb2:	pop    ecx
  422cb3:	pop    ebp
  422cb4:	ret    
  422cb5:	push   0x0
  422cb7:	push   0x0
  422cb9:	push   DWORD PTR [esp+0xc]
  422cbd:	call   0x422be2
  422cc2:	add    esp,0xc
  422cc5:	ret    
  422cc6:	push   0x0
  422cc8:	push   0x1
  422cca:	push   DWORD PTR [esp+0xc]
  422cce:	call   0x422be2
  422cd3:	add    esp,0xc
  422cd6:	ret    
  422cd7:	push   0x1
  422cd9:	push   0x0
  422cdb:	push   0x0
  422cdd:	call   0x422be2
  422ce2:	add    esp,0xc
  422ce5:	ret    
  422ce6:	push   0x1
  422ce8:	push   0x1
  422cea:	push   0x0
  422cec:	call   0x422be2
  422cf1:	add    esp,0xc
  422cf4:	ret    
  422cf5:	push   ebp
  422cf6:	mov    ebp,esp
  422cf8:	sub    esp,0x10c
  422cfe:	mov    eax,ds:0x45c430
  422d03:	xor    eax,DWORD PTR [ebp+0x4]
  422d06:	mov    ecx,DWORD PTR [ebp+0x8]
  422d09:	push   ebx
  422d0a:	push   esi
  422d0b:	mov    DWORD PTR [ebp-0x4],eax
  422d0e:	xor    edx,edx
  422d10:	push   edi
  422d11:	xor    eax,eax
  422d13:	cmp    ecx,DWORD PTR [eax*8+0x45c1c8]
  422d1a:	je     0x422d22
  422d1c:	inc    eax
  422d1d:	cmp    eax,0x12
  422d20:	jb     0x422d13
  422d22:	mov    esi,eax
  422d24:	shl    esi,0x3
  422d27:	cmp    ecx,DWORD PTR [esi+0x45c1c8]
  422d2d:	jne    0x422e56
  422d33:	mov    eax,ds:0x45cabc
  422d38:	cmp    eax,0x1
  422d3b:	je     0x422e31
  422d41:	cmp    eax,edx
  422d43:	jne    0x422d52
  422d45:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422d4c:	je     0x422e31
  422d52:	cmp    ecx,0xfc
  422d58:	je     0x422e56
  422d5e:	push   0x104
  422d63:	lea    eax,[ebp-0x10c]
  422d69:	push   eax
  422d6a:	push   edx
  422d6b:	mov    BYTE PTR [ebp-0x8],dl
  422d6e:	call   DWORD PTR ds:0x42803c
  422d74:	test   eax,eax
  422d76:	jne    0x422d8b
  422d78:	lea    eax,[ebp-0x10c]
  422d7e:	push   0x428484
  422d83:	push   eax
  422d84:	call   0x423c40
  422d89:	pop    ecx
  422d8a:	pop    ecx
  422d8b:	lea    eax,[ebp-0x10c]
  422d91:	push   eax
  422d92:	lea    edi,[ebp-0x10c]
  422d98:	call   0x423e70
  422d9d:	inc    eax
  422d9e:	cmp    eax,0x3c
  422da1:	pop    ecx
  422da2:	jbe    0x422dcd
  422da4:	lea    eax,[ebp-0x10c]
  422daa:	push   eax
  422dab:	call   0x423e70
  422db0:	mov    edi,eax
  422db2:	lea    eax,[ebp-0x10c]
  422db8:	sub    eax,0x3b
  422dbb:	push   0x3
  422dbd:	add    edi,eax
  422dbf:	push   0x428480
  422dc4:	push   edi
  422dc5:	call   0x423d40
  422dca:	add    esp,0x10
  422dcd:	push   edi
  422dce:	call   0x423e70
  422dd3:	push   DWORD PTR [esi+0x45c1cc]
  422dd9:	mov    ebx,eax
  422ddb:	call   0x423e70
  422de0:	lea    eax,[ebx+eax*1+0x1c]
  422de4:	pop    ecx
  422de5:	add    eax,0x3
  422de8:	pop    ecx
  422de9:	and    eax,0xfffffffc
  422dec:	call   0x4238b0
  422df1:	mov    ebx,esp
  422df3:	push   0x428464
  422df8:	push   ebx
  422df9:	call   0x423c40
  422dfe:	push   edi
  422dff:	push   ebx
  422e00:	call   0x423c50
  422e05:	push   0x428460
  422e0a:	push   ebx
  422e0b:	call   0x423c50
  422e10:	push   DWORD PTR [esi+0x45c1cc]
  422e16:	push   ebx
  422e17:	call   0x423c50
  422e1c:	push   0x12010
  422e21:	push   0x428438
  422e26:	push   ebx
  422e27:	call   0x423b42
  422e2c:	add    esp,0x2c
  422e2f:	jmp    0x422e56
  422e31:	push   edx
  422e32:	lea    eax,[ebp+0x8]
  422e35:	push   eax
  422e36:	lea    esi,[esi+0x45c1cc]
  422e3c:	push   DWORD PTR [esi]
  422e3e:	call   0x423e70
  422e43:	pop    ecx
  422e44:	push   eax
  422e45:	push   DWORD PTR [esi]
  422e47:	push   0xfffffff4
  422e49:	call   DWORD PTR ds:0x428038
  422e4f:	push   eax
  422e50:	call   DWORD PTR ds:0x428034
  422e56:	lea    esp,[ebp-0x118]
  422e5c:	mov    ecx,DWORD PTR [ebp-0x4]
  422e5f:	xor    ecx,DWORD PTR [ebp+0x4]
  422e62:	call   0x423f2c
  422e67:	pop    edi
  422e68:	pop    esi
  422e69:	pop    ebx
  422e6a:	leave  
  422e6b:	ret    
  422e6c:	mov    eax,ds:0x45cabc
  422e71:	cmp    eax,0x1
  422e74:	je     0x422e83
  422e76:	test   eax,eax
  422e78:	jne    0x422ea4
  422e7a:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422e81:	jne    0x422ea4
  422e83:	push   0xfc
  422e88:	call   0x422cf5
  422e8d:	mov    eax,ds:0x45cb08
  422e92:	test   eax,eax
  422e94:	pop    ecx
  422e95:	je     0x422e99
  422e97:	call   eax
  422e99:	push   0xff
  422e9e:	call   0x422cf5
  422ea3:	pop    ecx
  422ea4:	ret    
  422ea5:	push   ebp
  422ea6:	mov    ebp,esp
  422ea8:	push   ecx
  422ea9:	push   ebx
  422eaa:	push   esi
  422eab:	push   edi
  422eac:	call   0x42370d
  422eb1:	mov    edi,DWORD PTR [ebp+0x8]
  422eb4:	mov    esi,eax
  422eb6:	mov    edx,DWORD PTR [esi+0x54]
  422eb9:	mov    eax,ds:0x45c2dc
  422ebe:	mov    ecx,edx
  422ec0:	cmp    DWORD PTR [ecx],edi
  422ec2:	je     0x422ed1
  422ec4:	lea    ebx,[eax+eax*2]
  422ec7:	add    ecx,0xc
  422eca:	lea    ebx,[edx+ebx*4]
  422ecd:	cmp    ecx,ebx
  422ecf:	jb     0x422ec0
  422ed1:	lea    eax,[eax+eax*2]
  422ed4:	lea    eax,[edx+eax*4]
  422ed7:	cmp    ecx,eax
  422ed9:	jae    0x422edf
  422edb:	cmp    DWORD PTR [ecx],edi
  422edd:	je     0x422ee1
  422edf:	xor    ecx,ecx
  422ee1:	test   ecx,ecx
  422ee3:	je     0x422ffb
  422ee9:	mov    ebx,DWORD PTR [ecx+0x8]
  422eec:	test   ebx,ebx
  422eee:	mov    DWORD PTR [ebp+0x8],ebx
  422ef1:	je     0x422ffb
  422ef7:	cmp    ebx,0x5
  422efa:	jne    0x422f08
  422efc:	and    DWORD PTR [ecx+0x8],0x0
  422f00:	xor    eax,eax
  422f02:	inc    eax
  422f03:	jmp    0x423004
  422f08:	cmp    ebx,0x1
  422f0b:	je     0x422ff6
  422f11:	mov    eax,DWORD PTR [esi+0x58]
  422f14:	mov    DWORD PTR [ebp-0x4],eax
  422f17:	mov    eax,DWORD PTR [ebp+0xc]
  422f1a:	mov    DWORD PTR [esi+0x58],eax
  422f1d:	mov    eax,DWORD PTR [ecx+0x4]
  422f20:	cmp    eax,0x8
  422f23:	jne    0x422fe8
  422f29:	mov    edx,DWORD PTR ds:0x45c2d0
  422f2f:	mov    eax,ds:0x45c2d4
  422f34:	add    eax,edx
  422f36:	cmp    edx,eax
  422f38:	jge    0x422f61
  422f3a:	lea    eax,[edx+edx*2]
  422f3d:	shl    eax,0x2
  422f40:	mov    edi,DWORD PTR [esi+0x54]
  422f43:	and    DWORD PTR [eax+edi*1+0x8],0x0
  422f48:	mov    edi,DWORD PTR ds:0x45c2d0
  422f4e:	mov    ebx,DWORD PTR ds:0x45c2d4
  422f54:	inc    edx
  422f55:	add    ebx,edi
  422f57:	add    eax,0xc
  422f5a:	cmp    edx,ebx
  422f5c:	jl     0x422f40
  422f5e:	mov    ebx,DWORD PTR [ebp+0x8]
  422f61:	mov    ecx,DWORD PTR [ecx]
  422f63:	cmp    ecx,0xc000008e
  422f69:	mov    edi,DWORD PTR [esi+0x5c]
  422f6c:	jne    0x422f77
  422f6e:	mov    DWORD PTR [esi+0x5c],0x83
  422f75:	jmp    0x422fdb
  422f77:	cmp    ecx,0xc0000090
  422f7d:	jne    0x422f88
  422f7f:	mov    DWORD PTR [esi+0x5c],0x81
  422f86:	jmp    0x422fdb
  422f88:	cmp    ecx,0xc0000091
  422f8e:	jne    0x422f99
  422f90:	mov    DWORD PTR [esi+0x5c],0x84
  422f97:	jmp    0x422fdb
  422f99:	cmp    ecx,0xc0000093
  422f9f:	jne    0x422faa
  422fa1:	mov    DWORD PTR [esi+0x5c],0x85
  422fa8:	jmp    0x422fdb
  422faa:	cmp    ecx,0xc000008d
  422fb0:	jne    0x422fbb
  422fb2:	mov    DWORD PTR [esi+0x5c],0x82
  422fb9:	jmp    0x422fdb
  422fbb:	cmp    ecx,0xc000008f
  422fc1:	jne    0x422fcc
  422fc3:	mov    DWORD PTR [esi+0x5c],0x86
  422fca:	jmp    0x422fdb
  422fcc:	cmp    ecx,0xc0000092
  422fd2:	jne    0x422fdb
  422fd4:	mov    DWORD PTR [esi+0x5c],0x8a
  422fdb:	push   DWORD PTR [esi+0x5c]
  422fde:	push   0x8
  422fe0:	call   ebx
  422fe2:	pop    ecx
  422fe3:	mov    DWORD PTR [esi+0x5c],edi
  422fe6:	jmp    0x422fef
  422fe8:	and    DWORD PTR [ecx+0x8],0x0
  422fec:	push   eax
  422fed:	call   ebx
  422fef:	mov    eax,DWORD PTR [ebp-0x4]
  422ff2:	pop    ecx
  422ff3:	mov    DWORD PTR [esi+0x58],eax
  422ff6:	or     eax,0xffffffff
  422ff9:	jmp    0x423004
  422ffb:	push   DWORD PTR [ebp+0xc]
  422ffe:	call   DWORD PTR ds:0x428040
  423004:	pop    edi
  423005:	pop    esi
  423006:	pop    ebx
  423007:	leave  
  423008:	ret    
  423009:	cmp    DWORD PTR ds:0x45d26c,0x0
  423010:	jne    0x423017
  423012:	call   0x42444c
  423017:	push   esi
  423018:	mov    esi,DWORD PTR ds:0x45d274
  42301e:	test   esi,esi
  423020:	jne    0x423029
  423022:	mov    esi,0x42849b
  423027:	jmp    0x42306e
  423029:	mov    al,BYTE PTR [esi]
  42302b:	cmp    al,0x22
  42302d:	jne    0x423057
  42302f:	inc    esi
  423030:	mov    al,BYTE PTR [esi]
  423032:	cmp    al,0x22
  423034:	je     0x423067
  423036:	test   al,al
  423038:	je     0x423050
  42303a:	movzx  eax,al
  42303d:	push   eax
  42303e:	call   0x423f6b
  423043:	test   eax,eax
  423045:	pop    ecx
  423046:	je     0x423049
  423048:	inc    esi
  423049:	inc    esi
  42304a:	mov    al,BYTE PTR [esi]
  42304c:	cmp    al,0x22
  42304e:	jne    0x423036
  423050:	cmp    BYTE PTR [esi],0x22
  423053:	jne    0x423068
  423055:	jmp    0x423067
  423057:	cmp    al,0x20
  423059:	jbe    0x423068
  42305b:	inc    esi
  42305c:	cmp    BYTE PTR [esi],0x20
  42305f:	ja     0x42305b
  423061:	jmp    0x423068
  423063:	cmp    al,0x20
  423065:	ja     0x42306e
  423067:	inc    esi
  423068:	mov    al,BYTE PTR [esi]
  42306a:	test   al,al
  42306c:	jne    0x423063
  42306e:	mov    eax,esi
  423070:	pop    esi
  423071:	ret    
  423072:	push   ebx
  423073:	xor    ebx,ebx
  423075:	cmp    DWORD PTR ds:0x45d26c,ebx
  42307b:	push   esi
  42307c:	push   edi
  42307d:	jne    0x423084
  42307f:	call   0x42444c
  423084:	mov    esi,DWORD PTR ds:0x45cab4
  42308a:	xor    edi,edi
  42308c:	cmp    esi,ebx
  42308e:	jne    0x4230a2
  423090:	jmp    0x4230c2
  423092:	cmp    al,0x3d
  423094:	je     0x423097
  423096:	inc    edi
  423097:	push   esi
  423098:	call   0x423e70
  42309d:	pop    ecx
  42309e:	lea    esi,[esi+eax*1+0x1]
  4230a2:	mov    al,BYTE PTR [esi]
  4230a4:	cmp    al,bl
  4230a6:	jne    0x423092
  4230a8:	lea    eax,[edi*4+0x4]
  4230af:	push   eax
  4230b0:	call   0x424582
  4230b5:	mov    edi,eax
  4230b7:	cmp    edi,ebx
  4230b9:	pop    ecx
  4230ba:	mov    DWORD PTR ds:0x45cae4,edi
  4230c0:	jne    0x4230c7
  4230c2:	or     eax,0xffffffff
  4230c5:	jmp    0x42311f
  4230c7:	mov    esi,DWORD PTR ds:0x45cab4
  4230cd:	push   ebp
  4230ce:	jmp    0x4230fa
  4230d0:	push   esi
  4230d1:	call   0x423e70
  4230d6:	mov    ebp,eax
  4230d8:	inc    ebp
  4230d9:	cmp    BYTE PTR [esi],0x3d
  4230dc:	pop    ecx
  4230dd:	je     0x4230f8
  4230df:	push   ebp
  4230e0:	call   0x424582
  4230e5:	cmp    eax,ebx
  4230e7:	pop    ecx
  4230e8:	mov    DWORD PTR [edi],eax
  4230ea:	je     0x423123
  4230ec:	push   esi
  4230ed:	push   eax
  4230ee:	call   0x423c40
  4230f3:	pop    ecx
  4230f4:	pop    ecx
  4230f5:	add    edi,0x4
  4230f8:	add    esi,ebp
  4230fa:	cmp    BYTE PTR [esi],bl
  4230fc:	jne    0x4230d0
  4230fe:	push   DWORD PTR ds:0x45cab4
  423104:	call   0x42446a
  423109:	mov    DWORD PTR ds:0x45cab4,ebx
  42310f:	mov    DWORD PTR [edi],ebx
  423111:	mov    DWORD PTR ds:0x45d260,0x1
  42311b:	xor    eax,eax
  42311d:	pop    ecx
  42311e:	pop    ebp
  42311f:	pop    edi
  423120:	pop    esi
  423121:	pop    ebx
  423122:	ret    
  423123:	push   DWORD PTR ds:0x45cae4
  423129:	call   0x42446a
  42312e:	mov    DWORD PTR ds:0x45cae4,ebx
  423134:	or     eax,0xffffffff
  423137:	jmp    0x42311d
  423139:	push   ebp
  42313a:	mov    ebp,esp
  42313c:	push   ecx
  42313d:	push   ebx
  42313e:	mov    ebx,DWORD PTR [ebp+0xc]
  423141:	xor    edx,edx
  423143:	cmp    DWORD PTR [ebp+0x8],edx
  423146:	push   edi
  423147:	mov    DWORD PTR [esi],edx
  423149:	mov    edi,ecx
  42314b:	mov    DWORD PTR [ebx],0x1
  423151:	je     0x42315c
  423153:	mov    ecx,DWORD PTR [ebp+0x8]
  423156:	add    DWORD PTR [ebp+0x8],0x4
  42315a:	mov    DWORD PTR [ecx],edi
  42315c:	cmp    BYTE PTR [eax],0x22
  42315f:	jne    0x42316f
  423161:	xor    ecx,ecx
  423163:	test   edx,edx
  423165:	sete   cl
  423168:	inc    eax
  423169:	mov    edx,ecx
  42316b:	mov    cl,0x22
  42316d:	jmp    0x42319c
  42316f:	inc    DWORD PTR [esi]
  423171:	test   edi,edi
  423173:	je     0x42317a
  423175:	mov    cl,BYTE PTR [eax]
  423177:	mov    BYTE PTR [edi],cl
  423179:	inc    edi
  42317a:	mov    cl,BYTE PTR [eax]
  42317c:	movzx  ebx,cl
  42317f:	inc    eax
  423180:	test   BYTE PTR [ebx+0x45cf21],0x4
  423187:	je     0x423195
  423189:	inc    DWORD PTR [esi]
  42318b:	test   edi,edi
  42318d:	je     0x423194
  42318f:	mov    bl,BYTE PTR [eax]
  423191:	mov    BYTE PTR [edi],bl
  423193:	inc    edi
  423194:	inc    eax
  423195:	test   cl,cl
  423197:	mov    ebx,DWORD PTR [ebp+0xc]
  42319a:	je     0x4231ce
  42319c:	test   edx,edx
  42319e:	jne    0x42315c
  4231a0:	cmp    cl,0x20
  4231a3:	je     0x4231aa
  4231a5:	cmp    cl,0x9
  4231a8:	jne    0x42315c
  4231aa:	test   edi,edi
  4231ac:	je     0x4231b2
  4231ae:	and    BYTE PTR [edi-0x1],0x0
  4231b2:	and    DWORD PTR [ebp-0x4],0x0
  4231b6:	cmp    BYTE PTR [eax],0x0
  4231b9:	je     0x423295
  4231bf:	mov    cl,BYTE PTR [eax]
  4231c1:	cmp    cl,0x20
  4231c4:	je     0x4231cb
  4231c6:	cmp    cl,0x9
  4231c9:	jne    0x4231d1
  4231cb:	inc    eax
  4231cc:	jmp    0x4231bf
  4231ce:	dec    eax
  4231cf:	jmp    0x4231b2
  4231d1:	cmp    BYTE PTR [eax],0x0
  4231d4:	je     0x423295
  4231da:	cmp    DWORD PTR [ebp+0x8],0x0
  4231de:	je     0x4231e9
  4231e0:	mov    ecx,DWORD PTR [ebp+0x8]
  4231e3:	add    DWORD PTR [ebp+0x8],0x4
  4231e7:	mov    DWORD PTR [ecx],edi
  4231e9:	inc    DWORD PTR [ebx]
  4231eb:	xor    ebx,ebx
  4231ed:	inc    ebx
  4231ee:	xor    edx,edx
  4231f0:	jmp    0x4231f4
  4231f2:	inc    eax
  4231f3:	inc    edx
  4231f4:	cmp    BYTE PTR [eax],0x5c
  4231f7:	je     0x4231f2
  4231f9:	cmp    BYTE PTR [eax],0x22
  4231fc:	jne    0x423224
  4231fe:	test   dl,0x1
  423201:	jne    0x423222
  423203:	cmp    DWORD PTR [ebp-0x4],0x0
  423207:	je     0x423215
  423209:	lea    ecx,[eax+0x1]
  42320c:	cmp    BYTE PTR [ecx],0x22
  42320f:	jne    0x423215
  423211:	mov    eax,ecx
  423213:	jmp    0x423217
  423215:	xor    ebx,ebx
  423217:	xor    ecx,ecx
  423219:	cmp    DWORD PTR [ebp-0x4],ecx
  42321c:	sete   cl
  42321f:	mov    DWORD PTR [ebp-0x4],ecx
  423222:	shr    edx,1
  423224:	test   edx,edx
  423226:	je     0x423235
  423228:	test   edi,edi
  42322a:	je     0x423230
  42322c:	mov    BYTE PTR [edi],0x5c
  42322f:	inc    edi
  423230:	inc    DWORD PTR [esi]
  423232:	dec    edx
  423233:	jne    0x423228
  423235:	mov    cl,BYTE PTR [eax]
  423237:	test   cl,cl
  423239:	je     0x423283
  42323b:	cmp    DWORD PTR [ebp-0x4],0x0
  42323f:	jne    0x42324b
  423241:	cmp    cl,0x20
  423244:	je     0x423283
  423246:	cmp    cl,0x9
  423249:	je     0x423283
  42324b:	test   ebx,ebx
  42324d:	je     0x42327d
  42324f:	test   edi,edi
  423251:	je     0x42326c
  423253:	movzx  edx,cl
  423256:	test   BYTE PTR [edx+0x45cf21],0x4
  42325d:	je     0x423265
  42325f:	mov    BYTE PTR [edi],cl
  423261:	inc    edi
  423262:	inc    eax
  423263:	inc    DWORD PTR [esi]
  423265:	mov    cl,BYTE PTR [eax]
  423267:	mov    BYTE PTR [edi],cl
  423269:	inc    edi
  42326a:	jmp    0x42327b
  42326c:	movzx  ecx,cl
  42326f:	test   BYTE PTR [ecx+0x45cf21],0x4
  423276:	je     0x42327b
  423278:	inc    eax
  423279:	inc    DWORD PTR [esi]
  42327b:	inc    DWORD PTR [esi]
  42327d:	inc    eax
  42327e:	jmp    0x4231eb
  423283:	test   edi,edi
  423285:	je     0x42328b
  423287:	and    BYTE PTR [edi],0x0
  42328a:	inc    edi
  42328b:	inc    DWORD PTR [esi]
  42328d:	mov    ebx,DWORD PTR [ebp+0xc]
  423290:	jmp    0x4231b6
  423295:	mov    eax,DWORD PTR [ebp+0x8]
  423298:	test   eax,eax
  42329a:	je     0x42329f
  42329c:	and    DWORD PTR [eax],0x0
  42329f:	inc    DWORD PTR [ebx]
  4232a1:	pop    edi
  4232a2:	pop    ebx
  4232a3:	leave  
  4232a4:	ret    
  4232a5:	push   ebp
  4232a6:	mov    ebp,esp
  4232a8:	push   ecx
  4232a9:	push   ecx
  4232aa:	push   ebx
  4232ab:	push   esi
  4232ac:	push   edi
  4232ad:	xor    edi,edi
  4232af:	cmp    DWORD PTR ds:0x45d26c,edi
  4232b5:	jne    0x4232bc
  4232b7:	call   0x42444c
  4232bc:	and    BYTE PTR ds:0x45cc14,0x0
  4232c3:	push   0x104
  4232c8:	mov    esi,0x45cb10
  4232cd:	push   esi
  4232ce:	push   edi
  4232cf:	call   DWORD PTR ds:0x42803c
  4232d5:	mov    eax,ds:0x45d274
  4232da:	cmp    eax,edi
  4232dc:	mov    DWORD PTR ds:0x45caf4,esi
  4232e2:	je     0x4232eb
  4232e4:	cmp    BYTE PTR [eax],0x0
  4232e7:	mov    ebx,eax
  4232e9:	jne    0x4232ed
  4232eb:	mov    ebx,esi
  4232ed:	lea    eax,[ebp-0x4]
  4232f0:	push   eax
  4232f1:	push   edi
  4232f2:	lea    esi,[ebp-0x8]
  4232f5:	xor    ecx,ecx
  4232f7:	mov    eax,ebx
  4232f9:	call   0x423139
  4232fe:	mov    esi,DWORD PTR [ebp-0x4]
  423301:	mov    eax,DWORD PTR [ebp-0x8]
  423304:	shl    esi,0x2
  423307:	add    eax,esi
  423309:	push   eax
  42330a:	call   0x424582
  42330f:	mov    edi,eax
  423311:	add    esp,0xc
  423314:	test   edi,edi
  423316:	jne    0x42331d
  423318:	or     eax,0xffffffff
  42331b:	jmp    0x423342
  42331d:	lea    eax,[ebp-0x4]
  423320:	push   eax
  423321:	lea    ecx,[esi+edi*1]
  423324:	push   edi
  423325:	lea    esi,[ebp-0x8]
  423328:	mov    eax,ebx
  42332a:	call   0x423139
  42332f:	mov    eax,DWORD PTR [ebp-0x4]
  423332:	dec    eax
  423333:	pop    ecx
  423334:	mov    ds:0x45cad8,eax
  423339:	pop    ecx
  42333a:	mov    DWORD PTR ds:0x45cadc,edi
  423340:	xor    eax,eax
  423342:	pop    edi
  423343:	pop    esi
  423344:	pop    ebx
  423345:	leave  
  423346:	ret    
  423347:	push   ecx
  423348:	push   ecx
  423349:	mov    eax,ds:0x45cc18
  42334e:	push   ebx
  42334f:	push   ebp
  423350:	push   esi
  423351:	push   edi
  423352:	mov    edi,DWORD PTR ds:0x428054
  423358:	xor    ebx,ebx
  42335a:	xor    esi,esi
  42335c:	cmp    eax,ebx
  42335e:	push   0x2
  423360:	pop    ebp
  423361:	jne    0x423390
  423363:	call   edi
  423365:	mov    esi,eax
  423367:	cmp    esi,ebx
  423369:	je     0x423377
  42336b:	mov    DWORD PTR ds:0x45cc18,0x1
  423375:	jmp    0x423395
  423377:	call   DWORD PTR ds:0x428010
  42337d:	cmp    eax,0x78
  423380:	jne    0x42338b
  423382:	mov    eax,ebp
  423384:	mov    ds:0x45cc18,eax
  423389:	jmp    0x423390
  42338b:	mov    eax,ds:0x45cc18
  423390:	cmp    eax,0x1
  423393:	jne    0x423412
  423395:	cmp    esi,ebx
  423397:	jne    0x4233a1
  423399:	call   edi
  42339b:	mov    esi,eax
  42339d:	cmp    esi,ebx
  42339f:	je     0x42341a
  4233a1:	cmp    WORD PTR [esi],bx
  4233a4:	mov    eax,esi
  4233a6:	je     0x4233b6
  4233a8:	add    eax,ebp
  4233aa:	cmp    WORD PTR [eax],bx
  4233ad:	jne    0x4233a8
  4233af:	add    eax,ebp
  4233b1:	cmp    WORD PTR [eax],bx
  4233b4:	jne    0x4233a8
  4233b6:	mov    edi,DWORD PTR ds:0x428050
  4233bc:	push   ebx
  4233bd:	push   ebx
  4233be:	push   ebx
  4233bf:	sub    eax,esi
  4233c1:	push   ebx
  4233c2:	sar    eax,1
  4233c4:	inc    eax
  4233c5:	push   eax
  4233c6:	push   esi
  4233c7:	push   ebx
  4233c8:	push   ebx
  4233c9:	mov    DWORD PTR [esp+0x34],eax
  4233cd:	call   edi
  4233cf:	mov    ebp,eax
  4233d1:	cmp    ebp,ebx
  4233d3:	je     0x423407
  4233d5:	push   ebp
  4233d6:	call   0x424582
  4233db:	cmp    eax,ebx
  4233dd:	pop    ecx
  4233de:	mov    DWORD PTR [esp+0x10],eax
  4233e2:	je     0x423407
  4233e4:	push   ebx
  4233e5:	push   ebx
  4233e6:	push   ebp
  4233e7:	push   eax
  4233e8:	push   DWORD PTR [esp+0x24]
  4233ec:	push   esi
  4233ed:	push   ebx
  4233ee:	push   ebx
  4233ef:	call   edi
  4233f1:	test   eax,eax
  4233f3:	jne    0x423403
  4233f5:	push   DWORD PTR [esp+0x10]
  4233f9:	call   0x42446a
  4233fe:	pop    ecx
  4233ff:	mov    DWORD PTR [esp+0x10],ebx
  423403:	mov    ebx,DWORD PTR [esp+0x10]
  423407:	push   esi
  423408:	call   DWORD PTR ds:0x42804c
  42340e:	mov    eax,ebx
  423410:	jmp    0x423462
  423412:	cmp    eax,ebp
  423414:	je     0x42341e
  423416:	cmp    eax,ebx
  423418:	je     0x42341e
  42341a:	xor    eax,eax
  42341c:	jmp    0x423462
  42341e:	call   DWORD PTR ds:0x428048
  423424:	mov    esi,eax
  423426:	cmp    esi,ebx
  423428:	je     0x42341a
  42342a:	cmp    BYTE PTR [esi],bl
  42342c:	je     0x423438
  42342e:	inc    eax
  42342f:	cmp    BYTE PTR [eax],bl
  423431:	jne    0x42342e
  423433:	inc    eax
  423434:	cmp    BYTE PTR [eax],bl
  423436:	jne    0x42342e
  423438:	sub    eax,esi
  42343a:	inc    eax
  42343b:	mov    ebp,eax
  42343d:	push   ebp
  42343e:	call   0x424582
  423443:	mov    edi,eax
  423445:	cmp    edi,ebx
  423447:	pop    ecx
  423448:	jne    0x42344e
  42344a:	xor    edi,edi
  42344c:	jmp    0x423459
  42344e:	push   ebp
  42344f:	push   esi
  423450:	push   edi
  423451:	call   0x4245a0
  423456:	add    esp,0xc
  423459:	push   esi
  42345a:	call   DWORD PTR ds:0x428044
  423460:	mov    eax,edi
  423462:	pop    edi
  423463:	pop    esi
  423464:	pop    ebp
  423465:	pop    ebx
  423466:	pop    ecx
  423467:	pop    ecx
  423468:	ret    
  423469:	sub    esp,0x48
  42346c:	push   ebx
  42346d:	mov    ebx,0x480
  423472:	push   ebx
  423473:	call   0x424582
  423478:	test   eax,eax
  42347a:	pop    ecx
  42347b:	jne    0x423485
  42347d:	or     eax,0xffffffff
  423480:	jmp    0x423662
  423485:	mov    ds:0x45d160,eax
  42348a:	mov    DWORD PTR ds:0x45d148,0x20
  423494:	lea    ecx,[eax+0x480]
  42349a:	jmp    0x4234ba
  42349c:	and    BYTE PTR [eax+0x4],0x0
  4234a0:	or     DWORD PTR [eax],0xffffffff
  4234a3:	and    DWORD PTR [eax+0x8],0x0
  4234a7:	mov    BYTE PTR [eax+0x5],0xa
  4234ab:	mov    ecx,DWORD PTR ds:0x45d160
  4234b1:	add    eax,0x24
  4234b4:	add    ecx,0x480
  4234ba:	cmp    eax,ecx
  4234bc:	jb     0x42349c
  4234be:	push   ebp
  4234bf:	push   esi
  4234c0:	push   edi
  4234c1:	lea    eax,[esp+0x14]
  4234c5:	push   eax
  4234c6:	call   DWORD PTR ds:0x42801c
  4234cc:	cmp    WORD PTR [esp+0x46],0x0
  4234d2:	je     0x4235c1
  4234d8:	mov    eax,DWORD PTR [esp+0x48]
  4234dc:	test   eax,eax
  4234de:	je     0x4235c1
  4234e4:	mov    edi,DWORD PTR [eax]
  4234e6:	lea    ebp,[eax+0x4]
  4234e9:	lea    eax,[edi+ebp*1]
  4234ec:	mov    DWORD PTR [esp+0x10],eax
  4234f0:	mov    eax,0x800
  4234f5:	cmp    edi,eax
  4234f7:	jl     0x4234fb
  4234f9:	mov    edi,eax
  4234fb:	cmp    DWORD PTR ds:0x45d148,edi
  423501:	jge    0x423551
  423503:	mov    esi,0x45d164
  423508:	push   ebx
  423509:	call   0x424582
  42350e:	test   eax,eax
  423510:	pop    ecx
  423511:	je     0x42354b
  423513:	add    DWORD PTR ds:0x45d148,0x20
  42351a:	mov    DWORD PTR [esi],eax
  42351c:	lea    ecx,[eax+0x480]
  423522:	jmp    0x42353a
  423524:	and    BYTE PTR [eax+0x4],0x0
  423528:	or     DWORD PTR [eax],0xffffffff
  42352b:	and    DWORD PTR [eax+0x8],0x0
  42352f:	mov    BYTE PTR [eax+0x5],0xa
  423533:	mov    ecx,DWORD PTR [esi]
  423535:	add    eax,0x24
  423538:	add    ecx,ebx
  42353a:	cmp    eax,ecx
  42353c:	jb     0x423524
  42353e:	add    esi,0x4
  423541:	cmp    DWORD PTR ds:0x45d148,edi
  423547:	jl     0x423508
  423549:	jmp    0x423551
  42354b:	mov    edi,DWORD PTR ds:0x45d148
  423551:	xor    ebx,ebx
  423553:	test   edi,edi
  423555:	jle    0x4235c1
  423557:	mov    eax,DWORD PTR [esp+0x10]
  42355b:	mov    eax,DWORD PTR [eax]
  42355d:	cmp    eax,0xffffffff
  423560:	je     0x4235b6
  423562:	mov    cl,BYTE PTR [ebp+0x0]
  423565:	test   cl,0x1
  423568:	je     0x4235b6
  42356a:	test   cl,0x8
  42356d:	jne    0x42357a
  42356f:	push   eax
  423570:	call   DWORD PTR ds:0x42805c
  423576:	test   eax,eax
  423578:	je     0x4235b6
  42357a:	mov    ecx,ebx
  42357c:	mov    eax,ebx
  42357e:	and    eax,0x1f
  423581:	lea    eax,[eax+eax*8]
  423584:	sar    ecx,0x5
  423587:	mov    ecx,DWORD PTR [ecx*4+0x45d160]
  42358e:	lea    esi,[ecx+eax*4]
  423591:	mov    eax,DWORD PTR [esp+0x10]
  423595:	mov    eax,DWORD PTR [eax]
  423597:	mov    DWORD PTR [esi],eax
  423599:	mov    al,BYTE PTR [ebp+0x0]
  42359c:	mov    BYTE PTR [esi+0x4],al
  42359f:	lea    eax,[esi+0xc]
  4235a2:	push   0xfa0
  4235a7:	push   eax
  4235a8:	call   0x4248ed
  4235ad:	test   eax,eax
  4235af:	pop    ecx
  4235b0:	pop    ecx
  4235b1:	je     0x4235e1
  4235b3:	inc    DWORD PTR [esi+0x8]
  4235b6:	add    DWORD PTR [esp+0x10],0x4
  4235bb:	inc    ebx
  4235bc:	inc    ebp
  4235bd:	cmp    ebx,edi
  4235bf:	jl     0x423557
  4235c1:	xor    ebx,ebx
  4235c3:	mov    ecx,DWORD PTR ds:0x45d160
  4235c9:	lea    eax,[ebx+ebx*8]
  4235cc:	lea    esi,[ecx+eax*4]
  4235cf:	cmp    DWORD PTR [esi],0xffffffff
  4235d2:	jne    0x423643
  4235d4:	test   ebx,ebx
  4235d6:	mov    BYTE PTR [esi+0x4],0x81
  4235da:	jne    0x4235e6
  4235dc:	push   0xfffffff6
  4235de:	pop    eax
  4235df:	jmp    0x4235f0
  4235e1:	or     eax,0xffffffff
  4235e4:	jmp    0x42365f
  4235e6:	mov    eax,ebx
  4235e8:	dec    eax
  4235e9:	neg    eax
  4235eb:	sbb    eax,eax
  4235ed:	add    eax,0xfffffff5
  4235f0:	push   eax
  4235f1:	call   DWORD PTR ds:0x428038
  4235f7:	mov    edi,eax
  4235f9:	cmp    edi,0xffffffff
  4235fc:	je     0x42363d
  4235fe:	push   edi
  4235ff:	call   DWORD PTR ds:0x42805c
  423605:	test   eax,eax
  423607:	je     0x42363d
  423609:	and    eax,0xff
  42360e:	cmp    eax,0x2
  423611:	mov    DWORD PTR [esi],edi
  423613:	jne    0x42361b
  423615:	or     BYTE PTR [esi+0x4],0x40
  423619:	jmp    0x423624
  42361b:	cmp    eax,0x3
  42361e:	jne    0x423624
  423620:	or     BYTE PTR [esi+0x4],0x8
  423624:	lea    eax,[esi+0xc]
  423627:	push   0xfa0
  42362c:	push   eax
  42362d:	call   0x4248ed
  423632:	test   eax,eax
  423634:	pop    ecx
  423635:	pop    ecx
  423636:	je     0x4235e1
  423638:	inc    DWORD PTR [esi+0x8]
  42363b:	jmp    0x423647
  42363d:	or     BYTE PTR [esi+0x4],0x40
  423641:	jmp    0x423647
  423643:	or     BYTE PTR [esi+0x4],0x80
  423647:	inc    ebx
  423648:	cmp    ebx,0x3
  42364b:	jl     0x4235c3
  423651:	push   DWORD PTR ds:0x45d148
  423657:	call   DWORD PTR ds:0x428058
  42365d:	xor    eax,eax
  42365f:	pop    edi
  423660:	pop    esi
  423661:	pop    ebp
  423662:	pop    ebx
  423663:	add    esp,0x48
  423666:	ret    
  423667:	push   0xc
  423669:	push   0x4284a0
  42366e:	call   0x423858
  423673:	mov    DWORD PTR [ebp-0x1c],0x428ef8
  42367a:	cmp    DWORD PTR [ebp-0x1c],0x428ef8
  423681:	jae    0x4236a5
  423683:	and    DWORD PTR [ebp-0x4],0x0
  423687:	mov    eax,DWORD PTR [ebp-0x1c]
  42368a:	mov    eax,DWORD PTR [eax]
  42368c:	test   eax,eax
  42368e:	je     0x42369b
  423690:	call   eax
  423692:	jmp    0x42369b
  423694:	xor    eax,eax
  423696:	inc    eax
  423697:	ret    
  423698:	mov    esp,DWORD PTR [ebp-0x18]
  42369b:	or     DWORD PTR [ebp-0x4],0xffffffff
  42369f:	add    DWORD PTR [ebp-0x1c],0x4
  4236a3:	jmp    0x42367a
  4236a5:	call   0x423893
  4236aa:	ret    
  4236ab:	push   0xc
  4236ad:	push   0x4284b0
  4236b2:	call   0x423858
  4236b7:	mov    DWORD PTR [ebp-0x1c],0x428f00
  4236be:	cmp    DWORD PTR [ebp-0x1c],0x428f00
  4236c5:	jae    0x4236e9
  4236c7:	and    DWORD PTR [ebp-0x4],0x0
  4236cb:	mov    eax,DWORD PTR [ebp-0x1c]
  4236ce:	mov    eax,DWORD PTR [eax]
  4236d0:	test   eax,eax
  4236d2:	je     0x4236df
  4236d4:	call   eax
  4236d6:	jmp    0x4236df
  4236d8:	xor    eax,eax
  4236da:	inc    eax
  4236db:	ret    
  4236dc:	mov    esp,DWORD PTR [ebp-0x18]
  4236df:	or     DWORD PTR [ebp-0x4],0xffffffff
  4236e3:	add    DWORD PTR [ebp-0x1c],0x4
  4236e7:	jmp    0x4236be
  4236e9:	call   0x423893
  4236ee:	ret    
  4236ef:	call   0x423936
  4236f4:	mov    eax,ds:0x45c304
  4236f9:	cmp    eax,0xffffffff
  4236fc:	je     0x42370c
  4236fe:	push   eax
  4236ff:	call   DWORD PTR ds:0x428064
  423705:	or     DWORD PTR ds:0x45c304,0xffffffff
  42370c:	ret    
  42370d:	push   ebx
  42370e:	push   esi
  42370f:	call   DWORD PTR ds:0x428010
  423715:	push   DWORD PTR ds:0x45c304
  42371b:	mov    ebx,eax
  42371d:	call   DWORD PTR ds:0x428074
  423723:	mov    esi,eax
  423725:	test   esi,esi
  423727:	jne    0x423772
  423729:	push   0x88
  42372e:	push   0x1
  423730:	call   0x424978
  423735:	mov    esi,eax
  423737:	test   esi,esi
  423739:	pop    ecx
  42373a:	pop    ecx
  42373b:	je     0x42376a
  42373d:	push   esi
  42373e:	push   DWORD PTR ds:0x45c304
  423744:	call   DWORD PTR ds:0x428070
  42374a:	test   eax,eax
  42374c:	je     0x42376a
  42374e:	mov    DWORD PTR [esi+0x54],0x45c258
  423755:	mov    DWORD PTR [esi+0x14],0x1
  42375c:	call   DWORD PTR ds:0x42806c
  423762:	or     DWORD PTR [esi+0x4],0xffffffff
  423766:	mov    DWORD PTR [esi],eax
  423768:	jmp    0x423772
  42376a:	push   0x10
  42376c:	call   0x422920
  423771:	pop    ecx
  423772:	push   ebx
  423773:	call   DWORD PTR ds:0x428068
  423779:	mov    eax,esi
  42377b:	pop    esi
  42377c:	pop    ebx
  42377d:	ret    
  42377e:	call   0x4238ed
  423783:	test   eax,eax
  423785:	je     0x423797
  423787:	call   DWORD PTR ds:0x428078
  42378d:	cmp    eax,0xffffffff
  423790:	mov    ds:0x45c304,eax
  423795:	jne    0x42379f
  423797:	call   0x4236ef
  42379c:	xor    eax,eax
  42379e:	ret    
  42379f:	push   esi
  4237a0:	push   0x88
  4237a5:	push   0x1
  4237a7:	call   0x424978
  4237ac:	mov    esi,eax
  4237ae:	test   esi,esi
  4237b0:	pop    ecx
  4237b1:	pop    ecx
  4237b2:	je     0x4237e4
  4237b4:	push   esi
  4237b5:	push   DWORD PTR ds:0x45c304
  4237bb:	call   DWORD PTR ds:0x428070
  4237c1:	test   eax,eax
  4237c3:	je     0x4237e4
  4237c5:	mov    DWORD PTR [esi+0x54],0x45c258
  4237cc:	mov    DWORD PTR [esi+0x14],0x1
  4237d3:	call   DWORD PTR ds:0x42806c
  4237d9:	or     DWORD PTR [esi+0x4],0xffffffff
  4237dd:	mov    DWORD PTR [esi],eax
  4237df:	xor    eax,eax
  4237e1:	inc    eax
  4237e2:	pop    esi
  4237e3:	ret    
  4237e4:	call   0x4236ef
  4237e9:	xor    eax,eax
  4237eb:	pop    esi
  4237ec:	ret    
  4237ed:	cmp    DWORD PTR ds:0x45cac4,0x2
  4237f4:	jne    0x423803
  4237f6:	cmp    DWORD PTR ds:0x45cad0,0x5
  4237fd:	jb     0x423803
  4237ff:	xor    eax,eax
  423801:	inc    eax
  423802:	ret    
  423803:	push   0x3
  423805:	pop    eax
  423806:	ret    
  423807:	xor    eax,eax
  423809:	cmp    DWORD PTR [esp+0x4],eax
  42380d:	push   0x0
  42380f:	sete   al
  423812:	push   0x1000
  423817:	push   eax
  423818:	call   DWORD PTR ds:0x428080
  42381e:	test   eax,eax
  423820:	mov    ds:0x45d140,eax
  423825:	je     0x423851
  423827:	call   0x4237ed
  42382c:	cmp    eax,0x3
  42382f:	mov    ds:0x45d144,eax
  423834:	jne    0x423854
  423836:	push   0x3f8
  42383b:	call   0x424bfa
  423840:	test   eax,eax
  423842:	pop    ecx
  423843:	jne    0x423854
  423845:	push   DWORD PTR ds:0x45d140
  42384b:	call   DWORD PTR ds:0x42807c
  423851:	xor    eax,eax
  423853:	ret    
  423854:	xor    eax,eax
  423856:	inc    eax
  423857:	ret    
  423858:	push   0x425728
  42385d:	mov    eax,fs:0x0
  423863:	push   eax
  423864:	mov    eax,DWORD PTR [esp+0x10]
  423868:	mov    DWORD PTR [esp+0x10],ebp
  42386c:	lea    ebp,[esp+0x10]
  423870:	sub    esp,eax
  423872:	push   ebx
  423873:	push   esi
  423874:	push   edi
  423875:	mov    eax,DWORD PTR [ebp-0x8]
  423878:	mov    DWORD PTR [ebp-0x18],esp
  42387b:	push   eax
  42387c:	mov    eax,DWORD PTR [ebp-0x4]
  42387f:	mov    DWORD PTR [ebp-0x4],0xffffffff
  423886:	mov    DWORD PTR [ebp-0x8],eax
  423889:	lea    eax,[ebp-0x10]
  42388c:	mov    fs:0x0,eax
  423892:	ret    
  423893:	mov    ecx,DWORD PTR [ebp-0x10]
  423896:	mov    DWORD PTR fs:0x0,ecx
  42389d:	pop    ecx
  42389e:	pop    edi
  42389f:	pop    esi
  4238a0:	pop    ebx
  4238a1:	leave  
  4238a2:	push   ecx
  4238a3:	ret    
  4238a4:	int3   
  4238a5:	int3   
  4238a6:	int3   
  4238a7:	int3   
  4238a8:	int3   
  4238a9:	int3   
  4238aa:	int3   
  4238ab:	int3   
  4238ac:	int3   
  4238ad:	int3   
  4238ae:	int3   
  4238af:	int3   
  4238b0:	cmp    eax,0x1000
  4238b5:	jae    0x4238c5
  4238b7:	neg    eax
  4238b9:	add    eax,esp
  4238bb:	add    eax,0x4
  4238be:	test   DWORD PTR [eax],eax
  4238c0:	xchg   esp,eax
  4238c1:	mov    eax,DWORD PTR [eax]
  4238c3:	push   eax
  4238c4:	ret    
  4238c5:	push   ecx
  4238c6:	lea    ecx,[esp+0x8]
  4238ca:	sub    ecx,0x1000
  4238d0:	sub    eax,0x1000
  4238d5:	test   DWORD PTR [ecx],eax
  4238d7:	cmp    eax,0x1000
  4238dc:	jae    0x4238ca
  4238de:	sub    ecx,eax
  4238e0:	mov    eax,esp
  4238e2:	test   DWORD PTR [ecx],eax
  4238e4:	mov    esp,ecx
  4238e6:	mov    ecx,DWORD PTR [eax]
  4238e8:	mov    eax,DWORD PTR [eax+0x4]
  4238eb:	push   eax
  4238ec:	ret    
  4238ed:	push   esi
  4238ee:	push   edi
  4238ef:	xor    esi,esi
  4238f1:	mov    edi,0x45cc20
  4238f6:	cmp    DWORD PTR [esi*8+0x45c314],0x1
  4238fe:	jne    0x42391e
  423900:	lea    eax,[esi*8+0x45c310]
  423907:	mov    DWORD PTR [eax],edi
  423909:	push   0xfa0
  42390e:	push   DWORD PTR [eax]
  423910:	add    edi,0x18
  423913:	call   0x4248ed
  423918:	test   eax,eax
  42391a:	pop    ecx
  42391b:	pop    ecx
  42391c:	je     0x42392a
  42391e:	inc    esi
  42391f:	cmp    esi,0x24
  423922:	jl     0x4238f6
  423924:	xor    eax,eax
  423926:	inc    eax
  423927:	pop    edi
  423928:	pop    esi
  423929:	ret    
  42392a:	and    DWORD PTR [esi*8+0x45c310],0x0
  423932:	xor    eax,eax
  423934:	jmp    0x423927
  423936:	push   ebx
  423937:	mov    ebx,DWORD PTR ds:0x428060
  42393d:	push   esi
  42393e:	mov    esi,0x45c310
  423943:	push   edi
  423944:	mov    edi,DWORD PTR [esi]
  423946:	test   edi,edi
  423948:	je     0x42395d
  42394a:	cmp    DWORD PTR [esi+0x4],0x1
  42394e:	je     0x42395d
  423950:	push   edi
  423951:	call   ebx
  423953:	push   edi
  423954:	call   0x42446a
  423959:	and    DWORD PTR [esi],0x0
  42395c:	pop    ecx
  42395d:	add    esi,0x8
  423960:	cmp    esi,0x45c430
  423966:	jl     0x423944
  423968:	mov    esi,0x45c310
  42396d:	pop    edi
  42396e:	mov    eax,DWORD PTR [esi]
  423970:	test   eax,eax
  423972:	je     0x42397d
  423974:	cmp    DWORD PTR [esi+0x4],0x1
  423978:	jne    0x42397d
  42397a:	push   eax
  42397b:	call   ebx
  42397d:	add    esi,0x8
  423980:	cmp    esi,0x45c430
  423986:	jl     0x42396e
  423988:	pop    esi
  423989:	pop    ebx
  42398a:	ret    
  42398b:	push   ebp
  42398c:	mov    ebp,esp
  42398e:	mov    eax,DWORD PTR [ebp+0x8]
  423991:	push   DWORD PTR [eax*8+0x45c310]
  423998:	call   DWORD PTR ds:0x42808c
  42399e:	pop    ebp
  42399f:	ret    
  4239a0:	push   ebp
  4239a1:	mov    ebp,esp
  4239a3:	push   esi
  4239a4:	mov    esi,DWORD PTR [ebp+0x8]
  4239a7:	lea    esi,[esi*8+0x45c310]
  4239ae:	cmp    DWORD PTR [esi],0x0
  4239b1:	je     0x4239b8
  4239b3:	xor    eax,eax
  4239b5:	inc    eax
  4239b6:	jmp    0x423a1c
  4239b8:	push   edi
  4239b9:	push   0x18
  4239bb:	call   0x424582
  4239c0:	mov    edi,eax
  4239c2:	test   edi,edi
  4239c4:	pop    ecx
  4239c5:	jne    0x4239d6
  4239c7:	call   0x425800
  4239cc:	mov    DWORD PTR [eax],0xc
  4239d2:	xor    eax,eax
  4239d4:	jmp    0x423a1b
  4239d6:	push   0xa
  4239d8:	call   0x423a1f
  4239dd:	cmp    DWORD PTR [esi],0x0
  4239e0:	pop    ecx
  4239e1:	jne    0x423a09
  4239e3:	push   0xfa0
  4239e8:	push   edi
  4239e9:	call   0x4248ed
  4239ee:	test   eax,eax
  4239f0:	pop    ecx
  4239f1:	pop    ecx
  4239f2:	jne    0x423a05
  4239f4:	push   edi
  4239f5:	call   0x42446a
  4239fa:	push   0xa
  4239fc:	call   0x42398b
  423a01:	pop    ecx
  423a02:	pop    ecx
  423a03:	jmp    0x4239c7
  423a05:	mov    DWORD PTR [esi],edi
  423a07:	jmp    0x423a10
  423a09:	push   edi
  423a0a:	call   0x42446a
  423a0f:	pop    ecx
  423a10:	push   0xa
  423a12:	call   0x42398b
  423a17:	xor    eax,eax
  423a19:	pop    ecx
  423a1a:	inc    eax
  423a1b:	pop    edi
  423a1c:	pop    esi
  423a1d:	pop    ebp
  423a1e:	ret    
  423a1f:	push   ebp
  423a20:	mov    ebp,esp
  423a22:	mov    eax,DWORD PTR [ebp+0x8]
  423a25:	push   esi
  423a26:	lea    esi,[eax*8+0x45c310]
  423a2d:	cmp    DWORD PTR [esi],0x0
  423a30:	jne    0x423a45
  423a32:	push   eax
  423a33:	call   0x4239a0
  423a38:	test   eax,eax
  423a3a:	pop    ecx
  423a3b:	jne    0x423a45
  423a3d:	push   0x11
  423a3f:	call   0x422920
  423a44:	pop    ecx
  423a45:	push   DWORD PTR [esi]
  423a47:	call   DWORD PTR ds:0x428090
  423a4d:	pop    esi
  423a4e:	pop    ebp
  423a4f:	ret    
  423a50:	push   esi
  423a51:	push   DWORD PTR ds:0x45d268
  423a57:	call   0x4259b6
  423a5c:	pop    ecx
  423a5d:	mov    ecx,DWORD PTR ds:0x45d264
  423a63:	mov    esi,eax
  423a65:	mov    eax,ds:0x45d268
  423a6a:	mov    edx,ecx
  423a6c:	sub    edx,eax
  423a6e:	add    edx,0x4
  423a71:	cmp    esi,edx
  423a73:	jae    0x423ac3
  423a75:	mov    ecx,0x800
  423a7a:	cmp    esi,ecx
  423a7c:	jae    0x423a80
  423a7e:	mov    ecx,esi
  423a80:	add    ecx,esi
  423a82:	push   ecx
  423a83:	push   eax
  423a84:	call   0x425809
  423a89:	test   eax,eax
  423a8b:	pop    ecx
  423a8c:	pop    ecx
  423a8d:	jne    0x423aa6
  423a8f:	add    esi,0x10
  423a92:	push   esi
  423a93:	push   DWORD PTR ds:0x45d268
  423a99:	call   0x425809
  423a9e:	test   eax,eax
  423aa0:	pop    ecx
  423aa1:	pop    ecx
  423aa2:	jne    0x423aa6
  423aa4:	pop    esi
  423aa5:	ret    
  423aa6:	mov    ecx,DWORD PTR ds:0x45d264
  423aac:	sub    ecx,DWORD PTR ds:0x45d268
  423ab2:	mov    ds:0x45d268,eax
  423ab7:	sar    ecx,0x2
  423aba:	lea    ecx,[eax+ecx*4]
  423abd:	mov    DWORD PTR ds:0x45d264,ecx
  423ac3:	mov    DWORD PTR [ecx],edi
  423ac5:	add    DWORD PTR ds:0x45d264,0x4
  423acc:	mov    eax,edi
  423ace:	pop    esi
  423acf:	ret    
  423ad0:	push   0x80
  423ad5:	call   0x424582
  423ada:	test   eax,eax
  423adc:	pop    ecx
  423add:	mov    ds:0x45d268,eax
  423ae2:	jne    0x423ae8
  423ae4:	push   0x18
  423ae6:	pop    eax
  423ae7:	ret    
  423ae8:	and    DWORD PTR [eax],0x0
  423aeb:	mov    eax,ds:0x45d268
  423af0:	mov    ds:0x45d264,eax
  423af5:	xor    eax,eax
  423af7:	ret    
  423af8:	push   0xc
  423afa:	push   0x4284c0
  423aff:	call   0x423858
  423b04:	call   0x422b6b
  423b09:	and    DWORD PTR [ebp-0x4],0x0
  423b0d:	mov    edi,DWORD PTR [ebp+0x8]
  423b10:	call   0x423a50
  423b15:	mov    DWORD PTR [ebp-0x1c],eax
  423b18:	or     DWORD PTR [ebp-0x4],0xffffffff
  423b1c:	call   0x423b2a
  423b21:	mov    eax,DWORD PTR [ebp-0x1c]
  423b24:	call   0x423893
  423b29:	ret    
  423b2a:	call   0x422b74
  423b2f:	ret    
  423b30:	push   DWORD PTR [esp+0x4]
  423b34:	call   0x423af8
  423b39:	neg    eax
  423b3b:	sbb    eax,eax
  423b3d:	neg    eax
  423b3f:	pop    ecx
  423b40:	dec    eax
  423b41:	ret    
  423b42:	push   ebp
  423b43:	mov    ebp,esp
  423b45:	sub    esp,0x10
  423b48:	push   ebx
  423b49:	xor    ebx,ebx
  423b4b:	cmp    DWORD PTR ds:0x45cd70,ebx
  423b51:	push   esi
  423b52:	push   edi
  423b53:	jne    0x423bc2
  423b55:	push   0x428530
  423b5a:	call   DWORD PTR ds:0x428094
  423b60:	mov    edi,eax
  423b62:	cmp    edi,ebx
  423b64:	je     0x423bfd
  423b6a:	mov    esi,DWORD PTR ds:0x428018
  423b70:	push   0x428524
  423b75:	push   edi
  423b76:	call   esi
  423b78:	test   eax,eax
  423b7a:	mov    ds:0x45cd70,eax
  423b7f:	je     0x423bfd
  423b81:	push   0x428514
  423b86:	push   edi
  423b87:	call   esi
  423b89:	push   0x428500
  423b8e:	push   edi
  423b8f:	mov    ds:0x45cd74,eax
  423b94:	call   esi
  423b96:	cmp    DWORD PTR ds:0x45cac4,0x2
  423b9d:	mov    ds:0x45cd78,eax
  423ba2:	jne    0x423bc2
  423ba4:	push   0x4284e4
  423ba9:	push   edi
  423baa:	call   esi
  423bac:	test   eax,eax
  423bae:	mov    ds:0x45cd80,eax
  423bb3:	je     0x423bc2
  423bb5:	push   0x4284cc
  423bba:	push   edi
  423bbb:	call   esi
  423bbd:	mov    ds:0x45cd7c,eax
  423bc2:	mov    eax,ds:0x45cd7c
  423bc7:	test   eax,eax
  423bc9:	je     0x423c07
  423bcb:	call   eax
  423bcd:	test   eax,eax
  423bcf:	je     0x423bee
  423bd1:	lea    ecx,[ebp-0x4]
  423bd4:	push   ecx
  423bd5:	push   0xc
  423bd7:	lea    ecx,[ebp-0x10]
  423bda:	push   ecx
  423bdb:	push   0x1
  423bdd:	push   eax
  423bde:	call   DWORD PTR ds:0x45cd80
  423be4:	test   eax,eax
  423be6:	je     0x423bee
  423be8:	test   BYTE PTR [ebp-0x8],0x1
  423bec:	jne    0x423c07
  423bee:	cmp    DWORD PTR ds:0x45cad0,0x4
  423bf5:	jb     0x423c01
  423bf7:	or     BYTE PTR [ebp+0x12],0x20
  423bfb:	jmp    0x423c26
  423bfd:	xor    eax,eax
  423bff:	jmp    0x423c36
  423c01:	or     BYTE PTR [ebp+0x12],0x4
  423c05:	jmp    0x423c26
  423c07:	mov    eax,ds:0x45cd74
  423c0c:	test   eax,eax
  423c0e:	je     0x423c26
  423c10:	call   eax
  423c12:	mov    ebx,eax
  423c14:	test   ebx,ebx
  423c16:	je     0x423c26
  423c18:	mov    eax,ds:0x45cd78
  423c1d:	test   eax,eax
  423c1f:	je     0x423c26
  423c21:	push   ebx
  423c22:	call   eax
  423c24:	mov    ebx,eax
  423c26:	push   DWORD PTR [ebp+0x10]
  423c29:	push   DWORD PTR [ebp+0xc]
  423c2c:	push   DWORD PTR [ebp+0x8]
  423c2f:	push   ebx
  423c30:	call   DWORD PTR ds:0x45cd70
  423c36:	pop    edi
  423c37:	pop    esi
  423c38:	pop    ebx
  423c39:	leave  
  423c3a:	ret    
  423c3b:	int3   
  423c3c:	int3   
  423c3d:	int3   
  423c3e:	int3   
  423c3f:	int3   
  423c40:	push   edi
  423c41:	mov    edi,DWORD PTR [esp+0x8]
  423c45:	jmp    0x423cb5
  423c47:	lea    esp,[esp+0x0]
  423c4e:	mov    edi,edi
  423c50:	mov    ecx,DWORD PTR [esp+0x4]
  423c54:	push   edi
  423c55:	test   ecx,0x3
  423c5b:	je     0x423c70
  423c5d:	mov    al,BYTE PTR [ecx]
  423c5f:	add    ecx,0x1
  423c62:	test   al,al
  423c64:	je     0x423ca3
  423c66:	test   ecx,0x3
  423c6c:	jne    0x423c5d
  423c6e:	mov    edi,edi
  423c70:	mov    eax,DWORD PTR [ecx]
  423c72:	mov    edx,0x7efefeff
  423c77:	add    edx,eax
  423c79:	xor    eax,0xffffffff
  423c7c:	xor    eax,edx
  423c7e:	add    ecx,0x4
  423c81:	test   eax,0x81010100
  423c86:	je     0x423c70
  423c88:	mov    eax,DWORD PTR [ecx-0x4]
  423c8b:	test   al,al
  423c8d:	je     0x423cb2
  423c8f:	test   ah,ah
  423c91:	je     0x423cad
  423c93:	test   eax,0xff0000
  423c98:	je     0x423ca8
  423c9a:	test   eax,0xff000000
  423c9f:	je     0x423ca3
  423ca1:	jmp    0x423c70
  423ca3:	lea    edi,[ecx-0x1]
  423ca6:	jmp    0x423cb5
  423ca8:	lea    edi,[ecx-0x2]
  423cab:	jmp    0x423cb5
  423cad:	lea    edi,[ecx-0x3]
  423cb0:	jmp    0x423cb5
  423cb2:	lea    edi,[ecx-0x4]
  423cb5:	mov    ecx,DWORD PTR [esp+0xc]
  423cb9:	test   ecx,0x3
  423cbf:	je     0x423cde
  423cc1:	mov    dl,BYTE PTR [ecx]
  423cc3:	add    ecx,0x1
  423cc6:	test   dl,dl
  423cc8:	je     0x423d30
  423cca:	mov    BYTE PTR [edi],dl
  423ccc:	add    edi,0x1
  423ccf:	test   ecx,0x3
  423cd5:	jne    0x423cc1
  423cd7:	jmp    0x423cde
  423cd9:	mov    DWORD PTR [edi],edx
  423cdb:	add    edi,0x4
  423cde:	mov    edx,0x7efefeff
  423ce3:	mov    eax,DWORD PTR [ecx]
  423ce5:	add    edx,eax
  423ce7:	xor    eax,0xffffffff
  423cea:	xor    eax,edx
  423cec:	mov    edx,DWORD PTR [ecx]
  423cee:	add    ecx,0x4
  423cf1:	test   eax,0x81010100
  423cf6:	je     0x423cd9
  423cf8:	test   dl,dl
  423cfa:	je     0x423d30
  423cfc:	test   dh,dh
  423cfe:	je     0x423d27
  423d00:	test   edx,0xff0000
  423d06:	je     0x423d1a
  423d08:	test   edx,0xff000000
  423d0e:	je     0x423d12
  423d10:	jmp    0x423cd9
  423d12:	mov    DWORD PTR [edi],edx
  423d14:	mov    eax,DWORD PTR [esp+0x8]
  423d18:	pop    edi
  423d19:	ret    
  423d1a:	mov    WORD PTR [edi],dx
  423d1d:	mov    eax,DWORD PTR [esp+0x8]
  423d21:	mov    BYTE PTR [edi+0x2],0x0
  423d25:	pop    edi
  423d26:	ret    
  423d27:	mov    WORD PTR [edi],dx
  423d2a:	mov    eax,DWORD PTR [esp+0x8]
  423d2e:	pop    edi
  423d2f:	ret    
  423d30:	mov    BYTE PTR [edi],dl
  423d32:	mov    eax,DWORD PTR [esp+0x8]
  423d36:	pop    edi
  423d37:	ret    
  423d38:	int3   
  423d39:	int3   
  423d3a:	int3   
  423d3b:	int3   
  423d3c:	int3   
  423d3d:	int3   
  423d3e:	int3   
  423d3f:	int3   
  423d40:	mov    ecx,DWORD PTR [esp+0xc]
  423d44:	push   edi
  423d45:	test   ecx,ecx
  423d47:	je     0x423ddf
  423d4d:	push   esi
  423d4e:	push   ebx
  423d4f:	mov    ebx,ecx
  423d51:	mov    esi,DWORD PTR [esp+0x14]
  423d55:	test   esi,0x3
  423d5b:	mov    edi,DWORD PTR [esp+0x10]
  423d5f:	jne    0x423d6c
  423d61:	shr    ecx,0x2
  423d64:	jne    0x423def
  423d6a:	jmp    0x423d93
  423d6c:	mov    al,BYTE PTR [esi]
  423d6e:	add    esi,0x1
  423d71:	mov    BYTE PTR [edi],al
  423d73:	add    edi,0x1
  423d76:	sub    ecx,0x1
  423d79:	je     0x423da6
  423d7b:	test   al,al
  423d7d:	je     0x423dae
  423d7f:	test   esi,0x3
  423d85:	jne    0x423d6c
  423d87:	mov    ebx,ecx
  423d89:	shr    ecx,0x2
  423d8c:	jne    0x423def
  423d8e:	and    ebx,0x3
  423d91:	je     0x423da6
  423d93:	mov    al,BYTE PTR [esi]
  423d95:	add    esi,0x1
  423d98:	mov    BYTE PTR [edi],al
  423d9a:	add    edi,0x1
  423d9d:	test   al,al
  423d9f:	je     0x423dd8
  423da1:	sub    ebx,0x1
  423da4:	jne    0x423d93
  423da6:	mov    eax,DWORD PTR [esp+0x10]
  423daa:	pop    ebx
  423dab:	pop    esi
  423dac:	pop    edi
  423dad:	ret    
  423dae:	test   edi,0x3
  423db4:	je     0x423dcc
  423db6:	mov    BYTE PTR [edi],al
  423db8:	add    edi,0x1
  423dbb:	sub    ecx,0x1
  423dbe:	je     0x423e5c
  423dc4:	test   edi,0x3
  423dca:	jne    0x423db6
  423dcc:	mov    ebx,ecx
  423dce:	shr    ecx,0x2
  423dd1:	jne    0x423e47
  423dd3:	mov    BYTE PTR [edi],al
  423dd5:	add    edi,0x1
  423dd8:	sub    ebx,0x1
  423ddb:	jne    0x423dd3
  423ddd:	pop    ebx
  423dde:	pop    esi
  423ddf:	mov    eax,DWORD PTR [esp+0x8]
  423de3:	pop    edi
  423de4:	ret    
  423de5:	mov    DWORD PTR [edi],edx
  423de7:	add    edi,0x4
  423dea:	sub    ecx,0x1
  423ded:	je     0x423d8e
  423def:	mov    edx,0x7efefeff
  423df4:	mov    eax,DWORD PTR [esi]
  423df6:	add    edx,eax
  423df8:	xor    eax,0xffffffff
  423dfb:	xor    eax,edx
  423dfd:	mov    edx,DWORD PTR [esi]
  423dff:	add    esi,0x4
  423e02:	test   eax,0x81010100
  423e07:	je     0x423de5
  423e09:	test   dl,dl
  423e0b:	je     0x423e39
  423e0d:	test   dh,dh
  423e0f:	je     0x423e2f
  423e11:	test   edx,0xff0000
  423e17:	je     0x423e25
  423e19:	test   edx,0xff000000
  423e1f:	jne    0x423de5
  423e21:	mov    DWORD PTR [edi],edx
  423e23:	jmp    0x423e3d
  423e25:	and    edx,0xffff
  423e2b:	mov    DWORD PTR [edi],edx
  423e2d:	jmp    0x423e3d
  423e2f:	and    edx,0xff
  423e35:	mov    DWORD PTR [edi],edx
  423e37:	jmp    0x423e3d
  423e39:	xor    edx,edx
  423e3b:	mov    DWORD PTR [edi],edx
  423e3d:	add    edi,0x4
  423e40:	xor    eax,eax
  423e42:	sub    ecx,0x1
  423e45:	je     0x423e53
  423e47:	xor    eax,eax
  423e49:	mov    DWORD PTR [edi],eax
  423e4b:	add    edi,0x4
  423e4e:	sub    ecx,0x1
  423e51:	jne    0x423e49
  423e53:	and    ebx,0x3
  423e56:	jne    0x423dd3
  423e5c:	mov    eax,DWORD PTR [esp+0x10]
  423e60:	pop    ebx
  423e61:	pop    esi
  423e62:	pop    edi
  423e63:	ret    
  423e64:	int3   
  423e65:	int3   
  423e66:	int3   
  423e67:	int3   
  423e68:	int3   
  423e69:	int3   
  423e6a:	int3   
  423e6b:	int3   
  423e6c:	int3   
  423e6d:	int3   
  423e6e:	int3   
  423e6f:	int3   
  423e70:	mov    ecx,DWORD PTR [esp+0x4]
  423e74:	test   ecx,0x3
  423e7a:	je     0x423ea0
  423e7c:	mov    al,BYTE PTR [ecx]
  423e7e:	add    ecx,0x1
  423e81:	test   al,al
  423e83:	je     0x423ed3
  423e85:	test   ecx,0x3
  423e8b:	jne    0x423e7c
  423e8d:	add    eax,0x0
  423e92:	lea    esp,[esp+0x0]
  423e99:	lea    esp,[esp+0x0]
  423ea0:	mov    eax,DWORD PTR [ecx]
  423ea2:	mov    edx,0x7efefeff
  423ea7:	add    edx,eax
  423ea9:	xor    eax,0xffffffff
  423eac:	xor    eax,edx
  423eae:	add    ecx,0x4
  423eb1:	test   eax,0x81010100
  423eb6:	je     0x423ea0
  423eb8:	mov    eax,DWORD PTR [ecx-0x4]
  423ebb:	test   al,al
  423ebd:	je     0x423ef1
  423ebf:	test   ah,ah
  423ec1:	je     0x423ee7
  423ec3:	test   eax,0xff0000
  423ec8:	je     0x423edd
  423eca:	test   eax,0xff000000
  423ecf:	je     0x423ed3
  423ed1:	jmp    0x423ea0
  423ed3:	lea    eax,[ecx-0x1]
  423ed6:	mov    ecx,DWORD PTR [esp+0x4]
  423eda:	sub    eax,ecx
  423edc:	ret    
  423edd:	lea    eax,[ecx-0x2]
  423ee0:	mov    ecx,DWORD PTR [esp+0x4]
  423ee4:	sub    eax,ecx
  423ee6:	ret    
  423ee7:	lea    eax,[ecx-0x3]
  423eea:	mov    ecx,DWORD PTR [esp+0x4]
  423eee:	sub    eax,ecx
  423ef0:	ret    
  423ef1:	lea    eax,[ecx-0x4]
  423ef4:	mov    ecx,DWORD PTR [esp+0x4]
  423ef8:	sub    eax,ecx
  423efa:	ret    
  423efb:	push   0x8
  423efd:	push   0x428540
  423f02:	call   0x423858
  423f07:	and    DWORD PTR [ebp-0x4],0x0
  423f0b:	push   0x0
  423f0d:	push   0x1
  423f0f:	call   0x425a82
  423f14:	pop    ecx
  423f15:	pop    ecx
  423f16:	jmp    0x423f1f
  423f18:	xor    eax,eax
  423f1a:	inc    eax
  423f1b:	ret    
  423f1c:	mov    esp,DWORD PTR [ebp-0x18]
  423f1f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423f23:	push   0x3
  423f25:	call   DWORD PTR ds:0x428028
  423f2b:	int3   
  423f2c:	cmp    ecx,DWORD PTR ds:0x45c430
  423f32:	jne    0x423f35
  423f34:	ret    
  423f35:	jmp    0x423efb
  423f3a:	movzx  eax,BYTE PTR [esp+0x4]
  423f3f:	mov    cl,BYTE PTR [esp+0xc]
  423f43:	test   BYTE PTR [eax+0x45cf21],cl
  423f49:	jne    0x423f67
  423f4b:	cmp    DWORD PTR [esp+0x8],0x0
  423f50:	je     0x423f60
  423f52:	movzx  eax,WORD PTR [eax*2+0x42893a]
  423f5a:	and    eax,DWORD PTR [esp+0x8]
  423f5e:	jmp    0x423f62
  423f60:	xor    eax,eax
  423f62:	test   eax,eax
  423f64:	jne    0x423f67
  423f66:	ret    
  423f67:	xor    eax,eax
  423f69:	inc    eax
  423f6a:	ret    
  423f6b:	push   0x4
  423f6d:	push   0x0
  423f6f:	push   DWORD PTR [esp+0xc]
  423f73:	call   0x423f3a
  423f78:	add    esp,0xc
  423f7b:	ret    
  423f7c:	sub    eax,0x3a4
  423f81:	je     0x423fa5
  423f83:	sub    eax,0x4
  423f86:	je     0x423f9f
  423f88:	sub    eax,0xd
  423f8b:	je     0x423f99
  423f8d:	dec    eax
  423f8e:	je     0x423f93
  423f90:	xor    eax,eax
  423f92:	ret    
  423f93:	mov    eax,0x404
  423f98:	ret    
  423f99:	mov    eax,0x412
  423f9e:	ret    
  423f9f:	mov    eax,0x804
  423fa4:	ret    
  423fa5:	mov    eax,0x411
  423faa:	ret    
  423fab:	push   edi
  423fac:	push   0x40
  423fae:	xor    eax,eax
  423fb0:	pop    ecx
  423fb1:	mov    edi,0x45cf20
  423fb6:	rep stos DWORD PTR es:[edi],eax
  423fb8:	stos   BYTE PTR es:[edi],al
  423fb9:	xor    eax,eax
  423fbb:	mov    ds:0x45d024,eax
  423fc0:	mov    ds:0x45cf1c,eax
  423fc5:	mov    ds:0x45cf14,eax
  423fca:	mov    edi,0x45d030
  423fcf:	stos   DWORD PTR es:[edi],eax
  423fd0:	stos   DWORD PTR es:[edi],eax
  423fd1:	stos   DWORD PTR es:[edi],eax
  423fd2:	pop    edi
  423fd3:	ret    
  423fd4:	push   ebp
  423fd5:	mov    ebp,esp
  423fd7:	sub    esp,0x518
  423fdd:	mov    eax,ds:0x45c430
  423fe2:	xor    eax,DWORD PTR [ebp+0x4]
  423fe5:	push   esi
  423fe6:	mov    DWORD PTR [ebp-0x4],eax
  423fe9:	lea    eax,[ebp-0x18]
  423fec:	push   eax
  423fed:	push   DWORD PTR ds:0x45d024
  423ff3:	call   DWORD PTR ds:0x4280a0
  423ff9:	cmp    eax,0x1
  423ffc:	mov    esi,0x100
  424001:	jne    0x424114
  424007:	xor    eax,eax
  424009:	mov    BYTE PTR [ebp+eax*1-0x118],al
  424010:	inc    eax
  424011:	cmp    eax,esi
  424013:	jb     0x424009
  424015:	mov    al,BYTE PTR [ebp-0x12]
  424018:	test   al,al
  42401a:	mov    BYTE PTR [ebp-0x118],0x20
  424021:	je     0x424059
  424023:	push   ebx
  424024:	lea    edx,[ebp-0x11]
  424027:	push   edi
  424028:	movzx  ecx,BYTE PTR [edx]
  42402b:	movzx  eax,al
  42402e:	cmp    eax,ecx
  424030:	ja     0x42404f
  424032:	sub    ecx,eax
  424034:	inc    ecx
  424035:	mov    ebx,ecx
  424037:	shr    ecx,0x2
  42403a:	lea    edi,[ebp+eax*1-0x118]
  424041:	mov    eax,0x20202020
  424046:	rep stos DWORD PTR es:[edi],eax
  424048:	mov    ecx,ebx
  42404a:	and    ecx,0x3
  42404d:	rep stos BYTE PTR es:[edi],al
  42404f:	inc    edx
  424050:	mov    al,BYTE PTR [edx]
  424052:	inc    edx
  424053:	test   al,al
  424055:	jne    0x424028
  424057:	pop    edi
  424058:	pop    ebx
  424059:	push   0x0
  42405b:	push   DWORD PTR ds:0x45cf14
  424061:	lea    eax,[ebp-0x518]
  424067:	push   DWORD PTR ds:0x45d024
  42406d:	push   eax
  42406e:	push   esi
  42406f:	lea    eax,[ebp-0x118]
  424075:	push   eax
  424076:	push   0x1
  424078:	call   0x425f88
  42407d:	push   0x0
  42407f:	push   DWORD PTR ds:0x45d024
  424085:	lea    eax,[ebp-0x218]
  42408b:	push   esi
  42408c:	push   eax
  42408d:	push   esi
  42408e:	lea    eax,[ebp-0x118]
  424094:	push   eax
  424095:	push   esi
  424096:	push   DWORD PTR ds:0x45cf14
  42409c:	call   0x425bcc
  4240a1:	push   0x0
  4240a3:	push   DWORD PTR ds:0x45d024
  4240a9:	lea    eax,[ebp-0x318]
  4240af:	push   esi
  4240b0:	push   eax
  4240b1:	push   esi
  4240b2:	lea    eax,[ebp-0x118]
  4240b8:	push   eax
  4240b9:	push   0x200
  4240be:	push   DWORD PTR ds:0x45cf14
  4240c4:	call   0x425bcc
  4240c9:	add    esp,0x5c
  4240cc:	xor    eax,eax
  4240ce:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  4240d6:	test   cl,0x1
  4240d9:	je     0x4240f1
  4240db:	or     BYTE PTR [eax+0x45cf21],0x10
  4240e2:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  4240e9:	mov    BYTE PTR [eax+0x45d040],cl
  4240ef:	jmp    0x42410d
  4240f1:	test   cl,0x2
  4240f4:	je     0x424106
  4240f6:	or     BYTE PTR [eax+0x45cf21],0x20
  4240fd:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  424104:	jmp    0x4240e9
  424106:	and    BYTE PTR [eax+0x45d040],0x0
  42410d:	inc    eax
  42410e:	cmp    eax,esi
  424110:	jb     0x4240ce
  424112:	jmp    0x424158
  424114:	xor    eax,eax
  424116:	cmp    eax,0x41
  424119:	jb     0x424134
  42411b:	cmp    eax,0x5a
  42411e:	ja     0x424134
  424120:	or     BYTE PTR [eax+0x45cf21],0x10
  424127:	mov    cl,al
  424129:	add    cl,0x20
  42412c:	mov    BYTE PTR [eax+0x45d040],cl
  424132:	jmp    0x424153
  424134:	cmp    eax,0x61
  424137:	jb     0x42414c
  424139:	cmp    eax,0x7a
  42413c:	ja     0x42414c
  42413e:	or     BYTE PTR [eax+0x45cf21],0x20
  424145:	mov    cl,al
  424147:	sub    cl,0x20
  42414a:	jmp    0x42412c
  42414c:	and    BYTE PTR [eax+0x45d040],0x0
  424153:	inc    eax
  424154:	cmp    eax,esi
  424156:	jb     0x424116
  424158:	mov    ecx,DWORD PTR [ebp-0x4]
  42415b:	xor    ecx,DWORD PTR [ebp+0x4]
  42415e:	pop    esi
  42415f:	call   0x423f2c
  424164:	leave  
  424165:	ret    
  424166:	push   ebp
  424167:	mov    ebp,esp
  424169:	sub    esp,0x1c
  42416c:	mov    eax,ds:0x45c430
  424171:	xor    eax,DWORD PTR [ebp+0x4]
  424174:	push   ebx
  424175:	push   esi
  424176:	mov    esi,DWORD PTR [ebp+0x8]
  424179:	xor    ebx,ebx
  42417b:	cmp    esi,ebx
  42417d:	mov    DWORD PTR [ebp-0x4],eax
  424180:	push   edi
  424181:	je     0x4242db
  424187:	xor    edx,edx
  424189:	xor    eax,eax
  42418b:	cmp    DWORD PTR [eax+0x45c440],esi
  424191:	je     0x4241f8
  424193:	add    eax,0x30
  424196:	inc    edx
  424197:	cmp    eax,0xf0
  42419c:	jb     0x42418b
  42419e:	lea    eax,[ebp-0x1c]
  4241a1:	push   eax
  4241a2:	push   esi
  4241a3:	call   DWORD PTR ds:0x4280a0
  4241a9:	cmp    eax,0x1
  4241ac:	jne    0x4242d3
  4241b2:	push   0x40
  4241b4:	xor    eax,eax
  4241b6:	cmp    DWORD PTR [ebp-0x1c],0x1
  4241ba:	pop    ecx
  4241bb:	mov    edi,0x45cf20
  4241c0:	rep stos DWORD PTR es:[edi],eax
  4241c2:	stos   BYTE PTR es:[edi],al
  4241c3:	mov    DWORD PTR ds:0x45d024,esi
  4241c9:	mov    DWORD PTR ds:0x45cf14,ebx
  4241cf:	jbe    0x4242c1
  4241d5:	cmp    BYTE PTR [ebp-0x16],0x0
  4241d9:	je     0x424299
  4241df:	lea    ecx,[ebp-0x15]
  4241e2:	mov    dl,BYTE PTR [ecx]
  4241e4:	test   dl,dl
  4241e6:	je     0x424299
  4241ec:	movzx  eax,BYTE PTR [ecx-0x1]
  4241f0:	movzx  edx,dl
  4241f3:	jmp    0x424289
  4241f8:	push   0x40
  4241fa:	xor    eax,eax
  4241fc:	pop    ecx
  4241fd:	mov    edi,0x45cf20
  424202:	rep stos DWORD PTR es:[edi],eax
  424204:	lea    ecx,[edx+edx*2]
  424207:	shl    ecx,0x4
  42420a:	mov    DWORD PTR [ebp-0x8],ebx
  42420d:	stos   BYTE PTR es:[edi],al
  42420e:	lea    ebx,[ecx+0x45c450]
  424214:	mov    al,BYTE PTR [ebx]
  424216:	mov    esi,ebx
  424218:	jmp    0x424243
  42421a:	mov    dl,BYTE PTR [esi+0x1]
  42421d:	test   dl,dl
  42421f:	je     0x424247
  424221:	movzx  eax,al
  424224:	movzx  edi,dl
  424227:	cmp    eax,edi
  424229:	ja     0x42423f
  42422b:	mov    edx,DWORD PTR [ebp-0x8]
  42422e:	mov    dl,BYTE PTR [edx+0x45c438]
  424234:	or     BYTE PTR [eax+0x45cf21],dl
  42423a:	inc    eax
  42423b:	cmp    eax,edi
  42423d:	jbe    0x424234
  42423f:	inc    esi
  424240:	inc    esi
  424241:	mov    al,BYTE PTR [esi]
  424243:	test   al,al
  424245:	jne    0x42421a
  424247:	inc    DWORD PTR [ebp-0x8]
  42424a:	add    ebx,0x8
  42424d:	cmp    DWORD PTR [ebp-0x8],0x4
  424251:	jb     0x424214
  424253:	mov    eax,DWORD PTR [ebp+0x8]
  424256:	mov    ds:0x45d024,eax
  42425b:	mov    DWORD PTR ds:0x45cf1c,0x1
  424265:	call   0x423f7c
  42426a:	lea    ecx,[ecx+0x45c444]
  424270:	mov    esi,ecx
  424272:	mov    edi,0x45d030
  424277:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424278:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424279:	mov    ds:0x45cf14,eax
  42427e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42427f:	jmp    0x4242e0
  424281:	or     BYTE PTR [eax+0x45cf21],0x4
  424288:	inc    eax
  424289:	cmp    eax,edx
  42428b:	jbe    0x424281
  42428d:	inc    ecx
  42428e:	inc    ecx
  42428f:	cmp    BYTE PTR [ecx-0x1],0x0
  424293:	jne    0x4241e2
  424299:	xor    ecx,ecx
  42429b:	inc    ecx
  42429c:	mov    eax,ecx
  42429e:	or     BYTE PTR [eax+0x45cf21],0x8
  4242a5:	inc    eax
  4242a6:	cmp    eax,0xff
  4242ab:	jb     0x42429e
  4242ad:	mov    eax,esi
  4242af:	call   0x423f7c
  4242b4:	mov    ds:0x45cf14,eax
  4242b9:	mov    DWORD PTR ds:0x45cf1c,ecx
  4242bf:	jmp    0x4242c7
  4242c1:	mov    DWORD PTR ds:0x45cf1c,ebx
  4242c7:	xor    eax,eax
  4242c9:	mov    edi,0x45d030
  4242ce:	stos   DWORD PTR es:[edi],eax
  4242cf:	stos   DWORD PTR es:[edi],eax
  4242d0:	stos   DWORD PTR es:[edi],eax
  4242d1:	jmp    0x4242e0
  4242d3:	cmp    DWORD PTR ds:0x45cd84,ebx
  4242d9:	je     0x4242e9
  4242db:	call   0x423fab
  4242e0:	call   0x423fd4
  4242e5:	xor    eax,eax
  4242e7:	jmp    0x4242ec
  4242e9:	or     eax,0xffffffff
  4242ec:	mov    ecx,DWORD PTR [ebp-0x4]
  4242ef:	xor    ecx,DWORD PTR [ebp+0x4]
  4242f2:	pop    edi
  4242f3:	pop    esi
  4242f4:	pop    ebx
  4242f5:	call   0x423f2c
  4242fa:	leave  
  4242fb:	ret    
  4242fc:	push   0x14
  4242fe:	push   0x428550
  424303:	call   0x423858
  424308:	or     DWORD PTR [ebp-0x1c],0xffffffff
  42430c:	push   0xd
  42430e:	call   0x423a1f
  424313:	pop    ecx
  424314:	xor    edi,edi
  424316:	mov    DWORD PTR [ebp-0x4],edi
  424319:	mov    DWORD PTR ds:0x45cd84,edi
  42431f:	mov    eax,DWORD PTR [ebp+0x8]
  424322:	cmp    eax,0xfffffffe
  424325:	jne    0x424339
  424327:	mov    DWORD PTR ds:0x45cd84,0x1
  424331:	call   DWORD PTR ds:0x42809c
  424337:	jmp    0x424364
  424339:	cmp    eax,0xfffffffd
  42433c:	jne    0x424350
  42433e:	mov    DWORD PTR ds:0x45cd84,0x1
  424348:	call   DWORD PTR ds:0x428098
  42434e:	jmp    0x424364
  424350:	cmp    eax,0xfffffffc
  424353:	jne    0x424364
  424355:	mov    DWORD PTR ds:0x45cd84,0x1
  42435f:	mov    eax,ds:0x45cdb4
  424364:	mov    DWORD PTR [ebp+0x8],eax
  424367:	cmp    eax,DWORD PTR ds:0x45d024
  42436d:	je     0x42442e
  424373:	mov    esi,DWORD PTR ds:0x45cf18
  424379:	mov    DWORD PTR [ebp-0x20],esi
  42437c:	cmp    esi,edi
  42437e:	je     0x424384
  424380:	cmp    DWORD PTR [esi],edi
  424382:	je     0x424394
  424384:	push   0x220
  424389:	call   0x424582
  42438e:	pop    ecx
  42438f:	mov    esi,eax
  424391:	mov    DWORD PTR [ebp-0x20],esi
  424394:	cmp    esi,edi
  424396:	je     0x424417
  424398:	push   DWORD PTR [ebp+0x8]
  42439b:	call   0x424166
  4243a0:	pop    ecx
  4243a1:	mov    DWORD PTR [ebp-0x1c],eax
  4243a4:	cmp    eax,edi
  4243a6:	jne    0x424417
  4243a8:	mov    DWORD PTR [esi],edi
  4243aa:	mov    eax,ds:0x45d024
  4243af:	mov    DWORD PTR [esi+0x4],eax
  4243b2:	mov    eax,ds:0x45cf1c
  4243b7:	mov    DWORD PTR [esi+0x8],eax
  4243ba:	mov    eax,ds:0x45cf14
  4243bf:	mov    DWORD PTR [esi+0xc],eax
  4243c2:	xor    eax,eax
  4243c4:	mov    DWORD PTR [ebp-0x24],eax
  4243c7:	cmp    eax,0x5
  4243ca:	jge    0x4243dc
  4243cc:	mov    cx,WORD PTR [eax*2+0x45d030]
  4243d4:	mov    WORD PTR [esi+eax*2+0x10],cx
  4243d9:	inc    eax
  4243da:	jmp    0x4243c4
  4243dc:	xor    eax,eax
  4243de:	mov    DWORD PTR [ebp-0x24],eax
  4243e1:	cmp    eax,0x101
  4243e6:	jge    0x4243f5
  4243e8:	mov    cl,BYTE PTR [eax+0x45cf20]
  4243ee:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  4243f2:	inc    eax
  4243f3:	jmp    0x4243de
  4243f5:	xor    eax,eax
  4243f7:	mov    DWORD PTR [ebp-0x24],eax
  4243fa:	cmp    eax,0x100
  4243ff:	jge    0x424411
  424401:	mov    cl,BYTE PTR [eax+0x45d040]
  424407:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  42440e:	inc    eax
  42440f:	jmp    0x4243f7
  424411:	mov    DWORD PTR ds:0x45cf18,esi
  424417:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  42441b:	jne    0x424431
  42441d:	cmp    esi,DWORD PTR ds:0x45cf18
  424423:	je     0x424431
  424425:	push   esi
  424426:	call   0x42446a
  42442b:	pop    ecx
  42442c:	jmp    0x424431
  42442e:	mov    DWORD PTR [ebp-0x1c],edi
  424431:	or     DWORD PTR [ebp-0x4],0xffffffff
  424435:	call   0x424443
  42443a:	mov    eax,DWORD PTR [ebp-0x1c]
  42443d:	call   0x423893
  424442:	ret    
  424443:	push   0xd
  424445:	call   0x42398b
  42444a:	pop    ecx
  42444b:	ret    
  42444c:	cmp    DWORD PTR ds:0x45d26c,0x0
  424453:	jne    0x424467
  424455:	push   0xfffffffd
  424457:	call   0x4242fc
  42445c:	pop    ecx
  42445d:	mov    DWORD PTR ds:0x45d26c,0x1
  424467:	xor    eax,eax
  424469:	ret    
  42446a:	push   0xc
  42446c:	push   0x428560
  424471:	call   0x423858
  424476:	mov    esi,DWORD PTR [ebp+0x8]
  424479:	test   esi,esi
  42447b:	je     0x4244d5
  42447d:	cmp    DWORD PTR ds:0x45d144,0x3
  424484:	jne    0x4244c6
  424486:	push   0x4
  424488:	call   0x423a1f
  42448d:	pop    ecx
  42448e:	and    DWORD PTR [ebp-0x4],0x0
  424492:	push   esi
  424493:	call   0x424c42
  424498:	pop    ecx
  424499:	mov    DWORD PTR [ebp-0x1c],eax
  42449c:	test   eax,eax
  42449e:	je     0x4244a9
  4244a0:	push   esi
  4244a1:	push   eax
  4244a2:	call   0x424c6d
  4244a7:	pop    ecx
  4244a8:	pop    ecx
  4244a9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4244ad:	call   0x4244bd
  4244b2:	cmp    DWORD PTR [ebp-0x1c],0x0
  4244b6:	jne    0x4244d5
  4244b8:	push   DWORD PTR [ebp+0x8]
  4244bb:	jmp    0x4244c7
  4244bd:	push   0x4
  4244bf:	call   0x42398b
  4244c4:	pop    ecx
  4244c5:	ret    
  4244c6:	push   esi
  4244c7:	push   0x0
  4244c9:	push   DWORD PTR ds:0x45d140
  4244cf:	call   DWORD PTR ds:0x428088
  4244d5:	call   0x423893
  4244da:	ret    
  4244db:	push   0xc
  4244dd:	push   0x428570
  4244e2:	call   0x423858
  4244e7:	mov    esi,DWORD PTR [ebp+0x8]
  4244ea:	cmp    DWORD PTR ds:0x45d144,0x3
  4244f1:	jne    0x424521
  4244f3:	cmp    esi,DWORD PTR ds:0x45cf04
  4244f9:	ja     0x424521
  4244fb:	push   0x4
  4244fd:	call   0x423a1f
  424502:	pop    ecx
  424503:	and    DWORD PTR [ebp-0x4],0x0
  424507:	push   esi
  424508:	call   0x425421
  42450d:	pop    ecx
  42450e:	mov    DWORD PTR [ebp-0x1c],eax
  424511:	or     DWORD PTR [ebp-0x4],0xffffffff
  424515:	call   0x42454d
  42451a:	mov    eax,DWORD PTR [ebp-0x1c]
  42451d:	test   eax,eax
  42451f:	jne    0x424544
  424521:	test   esi,esi
  424523:	jne    0x424526
  424525:	inc    esi
  424526:	cmp    DWORD PTR ds:0x45d144,0x1
  42452d:	je     0x424535
  42452f:	add    esi,0xf
  424532:	and    esi,0xfffffff0
  424535:	push   esi
  424536:	push   0x0
  424538:	push   DWORD PTR ds:0x45d140
  42453e:	call   DWORD PTR ds:0x4280a4
  424544:	call   0x423893
  424549:	ret    
  42454a:	mov    esi,DWORD PTR [ebp+0x8]
  42454d:	push   0x4
  42454f:	call   0x42398b
  424554:	pop    ecx
  424555:	ret    
  424556:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  42455b:	ja     0x42457f
  42455d:	push   DWORD PTR [esp+0x4]
  424561:	call   0x4244db
  424566:	test   eax,eax
  424568:	pop    ecx
  424569:	jne    0x424581
  42456b:	cmp    DWORD PTR [esp+0x8],eax
  42456f:	je     0x424581
  424571:	push   DWORD PTR [esp+0x4]
  424575:	call   0x426142
  42457a:	test   eax,eax
  42457c:	pop    ecx
  42457d:	jne    0x42455d
  42457f:	xor    eax,eax
  424581:	ret    
  424582:	push   DWORD PTR ds:0x45cdc8
  424588:	push   DWORD PTR [esp+0x8]
  42458c:	call   0x424556
  424591:	pop    ecx
  424592:	pop    ecx
  424593:	ret    
  424594:	int3   
  424595:	int3   
  424596:	int3   
  424597:	int3   
  424598:	int3   
  424599:	int3   
  42459a:	int3   
  42459b:	int3   
  42459c:	int3   
  42459d:	int3   
  42459e:	int3   
  42459f:	int3   
  4245a0:	push   ebp
  4245a1:	mov    ebp,esp
  4245a3:	push   edi
  4245a4:	push   esi
  4245a5:	mov    esi,DWORD PTR [ebp+0xc]
  4245a8:	mov    ecx,DWORD PTR [ebp+0x10]
  4245ab:	mov    edi,DWORD PTR [ebp+0x8]
  4245ae:	mov    eax,ecx
  4245b0:	mov    edx,ecx
  4245b2:	add    eax,esi
  4245b4:	cmp    edi,esi
  4245b6:	jbe    0x4245c0
  4245b8:	cmp    edi,eax
  4245ba:	jb     0x42473c
  4245c0:	test   edi,0x3
  4245c6:	jne    0x4245dc
  4245c8:	shr    ecx,0x2
  4245cb:	and    edx,0x3
  4245ce:	cmp    ecx,0x8
  4245d1:	jb     0x4245fc
  4245d3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4245d5:	jmp    DWORD PTR [edx*4+0x4246ec]
  4245dc:	mov    eax,edi
  4245de:	mov    edx,0x3
  4245e3:	sub    ecx,0x4
  4245e6:	jb     0x4245f4
  4245e8:	and    eax,0x3
  4245eb:	add    ecx,eax
  4245ed:	jmp    DWORD PTR [eax*4+0x424600]
  4245f4:	jmp    DWORD PTR [ecx*4+0x4246fc]
  4245fb:	nop
  4245fc:	jmp    DWORD PTR [ecx*4+0x424680]
  424603:	nop
  424604:	adc    BYTE PTR [esi+0x42],al
  424607:	add    BYTE PTR [esi+eax*2],bh
  42460a:	inc    edx
  42460b:	add    BYTE PTR [eax+0x46],ah
  42460e:	inc    edx
  42460f:	add    BYTE PTR [ebx],ah
  424611:	ror    DWORD PTR [edx-0x75f877fa],1
  424617:	inc    esi
  424618:	add    DWORD PTR [eax+0x468a0147],ecx
  42461e:	add    al,cl
  424620:	jmp    0x289ce27
  424625:	add    esi,0x3
  424628:	add    edi,0x3
  42462b:	cmp    ecx,0x8
  42462e:	jb     0x4245fc
  424630:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424632:	jmp    DWORD PTR [edx*4+0x4246ec]
  424639:	lea    ecx,[ecx+0x0]
  42463c:	and    edx,ecx
  42463e:	mov    al,BYTE PTR [esi]
  424640:	mov    BYTE PTR [edi],al
  424642:	mov    al,BYTE PTR [esi+0x1]
  424645:	shr    ecx,0x2
  424648:	mov    BYTE PTR [edi+0x1],al
  42464b:	add    esi,0x2
  42464e:	add    edi,0x2
  424651:	cmp    ecx,0x8
  424654:	jb     0x4245fc
  424656:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424658:	jmp    DWORD PTR [edx*4+0x4246ec]
  42465f:	nop
  424660:	and    edx,ecx
  424662:	mov    al,BYTE PTR [esi]
  424664:	mov    BYTE PTR [edi],al
  424666:	add    esi,0x1
  424669:	shr    ecx,0x2
  42466c:	add    edi,0x1
  42466f:	cmp    ecx,0x8
  424672:	jb     0x4245fc
  424674:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424676:	jmp    DWORD PTR [edx*4+0x4246ec]
  42467d:	lea    ecx,[ecx+0x0]
  424680:	jecxz  0x4246c8
  424682:	inc    edx
  424683:	add    al,dl
  424685:	inc    esi
  424686:	inc    edx
  424687:	add    al,cl
  424689:	inc    esi
  42468a:	inc    edx
  42468b:	add    al,al
  42468d:	inc    esi
  42468e:	inc    edx
  42468f:	add    BYTE PTR [eax-0x4fffbdba],bh
  424695:	inc    esi
  424696:	inc    edx
  424697:	add    BYTE PTR [eax-0x5fffbdba],ch
  42469d:	inc    esi
  42469e:	inc    edx
  42469f:	add    BYTE PTR [ebx-0x761b71bc],cl
  4246a5:	inc    esp
  4246a6:	(bad)  
  4246a7:	in     al,0x8b
  4246a9:	inc    esp
  4246aa:	mov    gs,eax
  4246ac:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4246b0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4246b4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4246b8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4246bc:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4246c0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4246c4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4246c8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4246cc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4246d0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4246d4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4246d8:	lea    eax,[ecx*4+0x0]
  4246df:	add    esi,eax
  4246e1:	add    edi,eax
  4246e3:	jmp    DWORD PTR [edx*4+0x4246ec]
  4246ea:	mov    edi,edi
  4246ec:	cld    
  4246ed:	inc    esi
  4246ee:	inc    edx
  4246ef:	add    BYTE PTR [edi+eax*2],al
  4246f2:	inc    edx
  4246f3:	add    BYTE PTR [eax],dl
  4246f5:	inc    edi
  4246f6:	inc    edx
  4246f7:	add    BYTE PTR [edi+eax*2],ah
  4246fa:	inc    edx
  4246fb:	add    BYTE PTR [ebx+0x5f5e0845],cl
  424701:	leave  
  424702:	ret    
  424703:	nop
  424704:	mov    al,BYTE PTR [esi]
  424706:	mov    BYTE PTR [edi],al
  424708:	mov    eax,DWORD PTR [ebp+0x8]
  42470b:	pop    esi
  42470c:	pop    edi
  42470d:	leave  
  42470e:	ret    
  42470f:	nop
  424710:	mov    al,BYTE PTR [esi]
  424712:	mov    BYTE PTR [edi],al
  424714:	mov    al,BYTE PTR [esi+0x1]
  424717:	mov    BYTE PTR [edi+0x1],al
  42471a:	mov    eax,DWORD PTR [ebp+0x8]
  42471d:	pop    esi
  42471e:	pop    edi
  42471f:	leave  
  424720:	ret    
  424721:	lea    ecx,[ecx+0x0]
  424724:	mov    al,BYTE PTR [esi]
  424726:	mov    BYTE PTR [edi],al
  424728:	mov    al,BYTE PTR [esi+0x1]
  42472b:	mov    BYTE PTR [edi+0x1],al
  42472e:	mov    al,BYTE PTR [esi+0x2]
  424731:	mov    BYTE PTR [edi+0x2],al
  424734:	mov    eax,DWORD PTR [ebp+0x8]
  424737:	pop    esi
  424738:	pop    edi
  424739:	leave  
  42473a:	ret    
  42473b:	nop
  42473c:	lea    esi,[ecx+esi*1-0x4]
  424740:	lea    edi,[ecx+edi*1-0x4]
  424744:	test   edi,0x3
  42474a:	jne    0x424770
  42474c:	shr    ecx,0x2
  42474f:	and    edx,0x3
  424752:	cmp    ecx,0x8
  424755:	jb     0x424764
  424757:	std    
  424758:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42475a:	cld    
  42475b:	jmp    DWORD PTR [edx*4+0x424888]
  424762:	mov    edi,edi
  424764:	neg    ecx
  424766:	jmp    DWORD PTR [ecx*4+0x424838]
  42476d:	lea    ecx,[ecx+0x0]
  424770:	mov    eax,edi
  424772:	mov    edx,0x3
  424777:	cmp    ecx,0x4
  42477a:	jb     0x424788
  42477c:	and    eax,0x3
  42477f:	sub    ecx,eax
  424781:	jmp    DWORD PTR [eax*4+0x42478c]
  424788:	jmp    DWORD PTR [ecx*4+0x424888]
  42478f:	nop
  424790:	pushf  
  424791:	inc    edi
  424792:	inc    edx
  424793:	add    al,al
  424795:	inc    edi
  424796:	inc    edx
  424797:	add    al,ch
  424799:	inc    edi
  42479a:	inc    edx
  42479b:	add    BYTE PTR [edx-0x2edcfcba],cl
  4247a1:	mov    BYTE PTR [edi+0x3],al
  4247a4:	sub    esi,0x1
  4247a7:	shr    ecx,0x2
  4247aa:	sub    edi,0x1
  4247ad:	cmp    ecx,0x8
  4247b0:	jb     0x424764
  4247b2:	std    
  4247b3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247b5:	cld    
  4247b6:	jmp    DWORD PTR [edx*4+0x424888]
  4247bd:	lea    ecx,[ecx+0x0]
  4247c0:	mov    al,BYTE PTR [esi+0x3]
  4247c3:	and    edx,ecx
  4247c5:	mov    BYTE PTR [edi+0x3],al
  4247c8:	mov    al,BYTE PTR [esi+0x2]
  4247cb:	shr    ecx,0x2
  4247ce:	mov    BYTE PTR [edi+0x2],al
  4247d1:	sub    esi,0x2
  4247d4:	sub    edi,0x2
  4247d7:	cmp    ecx,0x8
  4247da:	jb     0x424764
  4247dc:	std    
  4247dd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247df:	cld    
  4247e0:	jmp    DWORD PTR [edx*4+0x424888]
  4247e7:	nop
  4247e8:	mov    al,BYTE PTR [esi+0x3]
  4247eb:	and    edx,ecx
  4247ed:	mov    BYTE PTR [edi+0x3],al
  4247f0:	mov    al,BYTE PTR [esi+0x2]
  4247f3:	mov    BYTE PTR [edi+0x2],al
  4247f6:	mov    al,BYTE PTR [esi+0x1]
  4247f9:	shr    ecx,0x2
  4247fc:	mov    BYTE PTR [edi+0x1],al
  4247ff:	sub    esi,0x3
  424802:	sub    edi,0x3
  424805:	cmp    ecx,0x8
  424808:	jb     0x424764
  42480e:	std    
  42480f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424811:	cld    
  424812:	jmp    DWORD PTR [edx*4+0x424888]
  424819:	lea    ecx,[ecx+0x0]
  42481c:	cmp    al,0x48
  42481e:	inc    edx
  42481f:	add    BYTE PTR [eax+ecx*2+0x42],al
  424823:	add    BYTE PTR [eax+ecx*2+0x42],cl
  424827:	add    BYTE PTR [eax+ecx*2+0x42],dl
  42482b:	add    BYTE PTR [eax+ecx*2+0x42],bl
  42482f:	add    BYTE PTR [eax+ecx*2+0x42],ah
  424833:	add    BYTE PTR [eax+ecx*2+0x42],ch
  424837:	add    BYTE PTR [edi+0x48],bh
  42483a:	inc    edx
  42483b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424841:	inc    esp
  424842:	(bad)  
  424843:	sbb    al,0x8b
  424845:	inc    esp
  424846:	mov    ds,WORD PTR [eax]
  424848:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42484c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  424850:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  424854:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  424858:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42485c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  424860:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  424864:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  424868:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42486c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  424870:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  424874:	lea    eax,[ecx*4+0x0]
  42487b:	add    esi,eax
  42487d:	add    edi,eax
  42487f:	jmp    DWORD PTR [edx*4+0x424888]
  424886:	mov    edi,edi
  424888:	cwde   
  424889:	dec    eax
  42488a:	inc    edx
  42488b:	add    BYTE PTR [eax-0x4fffbdb8],ah
  424891:	dec    eax
  424892:	inc    edx
  424893:	add    ah,al
  424895:	dec    eax
  424896:	inc    edx
  424897:	add    BYTE PTR [ebx+0x5f5e0845],cl
  42489d:	leave  
  42489e:	ret    
  42489f:	nop
  4248a0:	mov    al,BYTE PTR [esi+0x3]
  4248a3:	mov    BYTE PTR [edi+0x3],al
  4248a6:	mov    eax,DWORD PTR [ebp+0x8]
  4248a9:	pop    esi
  4248aa:	pop    edi
  4248ab:	leave  
  4248ac:	ret    
  4248ad:	lea    ecx,[ecx+0x0]
  4248b0:	mov    al,BYTE PTR [esi+0x3]
  4248b3:	mov    BYTE PTR [edi+0x3],al
  4248b6:	mov    al,BYTE PTR [esi+0x2]
  4248b9:	mov    BYTE PTR [edi+0x2],al
  4248bc:	mov    eax,DWORD PTR [ebp+0x8]
  4248bf:	pop    esi
  4248c0:	pop    edi
  4248c1:	leave  
  4248c2:	ret    
  4248c3:	nop
  4248c4:	mov    al,BYTE PTR [esi+0x3]
  4248c7:	mov    BYTE PTR [edi+0x3],al
  4248ca:	mov    al,BYTE PTR [esi+0x2]
  4248cd:	mov    BYTE PTR [edi+0x2],al
  4248d0:	mov    al,BYTE PTR [esi+0x1]
  4248d3:	mov    BYTE PTR [edi+0x1],al
  4248d6:	mov    eax,DWORD PTR [ebp+0x8]
  4248d9:	pop    esi
  4248da:	pop    edi
  4248db:	leave  
  4248dc:	ret    
  4248dd:	push   DWORD PTR [esp+0x4]
  4248e1:	call   DWORD PTR ds:0x4280a8
  4248e7:	xor    eax,eax
  4248e9:	inc    eax
  4248ea:	ret    0x8
  4248ed:	push   0x10
  4248ef:	push   0x4285b8
  4248f4:	call   0x423858
  4248f9:	mov    eax,ds:0x45cd88
  4248fe:	test   eax,eax
  424900:	jne    0x424939
  424902:	cmp    DWORD PTR ds:0x45cac4,0x1
  424909:	je     0x42492f
  42490b:	push   0x4285a4
  424910:	call   DWORD PTR ds:0x428014
  424916:	test   eax,eax
  424918:	je     0x42492f
  42491a:	push   0x42857c
  42491f:	push   eax
  424920:	call   DWORD PTR ds:0x428018
  424926:	mov    ds:0x45cd88,eax
  42492b:	test   eax,eax
  42492d:	jne    0x424939
  42492f:	mov    eax,0x4248dd
  424934:	mov    ds:0x45cd88,eax
  424939:	and    DWORD PTR [ebp-0x4],0x0
  42493d:	push   DWORD PTR [ebp+0xc]
  424940:	push   DWORD PTR [ebp+0x8]
  424943:	call   eax
  424945:	mov    DWORD PTR [ebp-0x1c],eax
  424948:	jmp    0x42496e
  42494a:	mov    eax,DWORD PTR [ebp-0x14]
  42494d:	mov    eax,DWORD PTR [eax]
  42494f:	mov    eax,DWORD PTR [eax]
  424951:	mov    DWORD PTR [ebp-0x20],eax
  424954:	xor    eax,eax
  424956:	inc    eax
  424957:	ret    
  424958:	mov    esp,DWORD PTR [ebp-0x18]
  42495b:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  424962:	jne    0x42496c
  424964:	push   0x8
  424966:	call   DWORD PTR ds:0x428068
  42496c:	xor    eax,eax
  42496e:	or     DWORD PTR [ebp-0x4],0xffffffff
  424972:	call   0x423893
  424977:	ret    
  424978:	push   0x10
  42497a:	push   0x4285c8
  42497f:	call   0x423858
  424984:	mov    esi,DWORD PTR [ebp+0x8]
  424987:	imul   esi,DWORD PTR [ebp+0xc]
  42498b:	mov    DWORD PTR [ebp-0x1c],esi
  42498e:	test   esi,esi
  424990:	jne    0x424993
  424992:	inc    esi
  424993:	xor    edi,edi
  424995:	mov    DWORD PTR [ebp-0x20],edi
  424998:	cmp    esi,0xffffffe0
  42499b:	ja     0x424a02
  42499d:	cmp    DWORD PTR ds:0x45d144,0x3
  4249a4:	jne    0x4249ed
  4249a6:	add    esi,0xf
  4249a9:	and    esi,0xfffffff0
  4249ac:	mov    DWORD PTR [ebp+0xc],esi
  4249af:	mov    ebx,DWORD PTR [ebp-0x1c]
  4249b2:	cmp    ebx,DWORD PTR ds:0x45cf04
  4249b8:	ja     0x4249ed
  4249ba:	push   0x4
  4249bc:	call   0x423a1f
  4249c1:	pop    ecx
  4249c2:	and    DWORD PTR [ebp-0x4],edi
  4249c5:	push   ebx
  4249c6:	call   0x425421
  4249cb:	pop    ecx
  4249cc:	mov    DWORD PTR [ebp-0x20],eax
  4249cf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4249d3:	call   0x424a22
  4249d8:	mov    edi,DWORD PTR [ebp-0x20]
  4249db:	test   edi,edi
  4249dd:	je     0x4249f1
  4249df:	push   DWORD PTR [ebp-0x1c]
  4249e2:	push   0x0
  4249e4:	push   edi
  4249e5:	call   0x426160
  4249ea:	add    esp,0xc
  4249ed:	test   edi,edi
  4249ef:	jne    0x424a2b
  4249f1:	push   esi
  4249f2:	push   0x8
  4249f4:	push   DWORD PTR ds:0x45d140
  4249fa:	call   DWORD PTR ds:0x4280a4
  424a00:	mov    edi,eax
  424a02:	test   edi,edi
  424a04:	jne    0x424a2b
  424a06:	cmp    DWORD PTR ds:0x45cdc8,edi
  424a0c:	je     0x424a2b
  424a0e:	push   esi
  424a0f:	call   0x426142
  424a14:	pop    ecx
  424a15:	test   eax,eax
  424a17:	jne    0x424993
  424a1d:	jmp    0x424a2d
  424a1f:	mov    esi,DWORD PTR [ebp+0xc]
  424a22:	push   0x4
  424a24:	call   0x42398b
  424a29:	pop    ecx
  424a2a:	ret    
  424a2b:	mov    eax,edi
  424a2d:	call   0x423893
  424a32:	ret    
  424a33:	push   esi
  424a34:	mov    esi,DWORD PTR [esp+0x8]
  424a38:	mov    eax,DWORD PTR [esi+0x3c]
  424a3b:	push   edi
  424a3c:	xor    edi,edi
  424a3e:	cmp    eax,DWORD PTR ds:0x45cdd4
  424a44:	je     0x424aa9
  424a46:	cmp    eax,edi
  424a48:	je     0x424aa9
  424a4a:	mov    eax,DWORD PTR [esi+0x2c]
  424a4d:	cmp    DWORD PTR [eax],edi
  424a4f:	jne    0x424aa9
  424a51:	mov    eax,DWORD PTR [esi+0x34]
  424a54:	cmp    eax,edi
  424a56:	je     0x424a74
  424a58:	cmp    DWORD PTR [eax],edi
  424a5a:	jne    0x424a74
  424a5c:	cmp    eax,DWORD PTR ds:0x45cef0
  424a62:	je     0x424a74
  424a64:	push   eax
  424a65:	call   0x42446a
  424a6a:	push   DWORD PTR [esi+0x3c]
  424a6d:	call   0x4263af
  424a72:	pop    ecx
  424a73:	pop    ecx
  424a74:	mov    eax,DWORD PTR [esi+0x30]
  424a77:	cmp    eax,edi
  424a79:	je     0x424a97
  424a7b:	cmp    DWORD PTR [eax],edi
  424a7d:	jne    0x424a97
  424a7f:	cmp    eax,DWORD PTR ds:0x45cef4
  424a85:	je     0x424a97
  424a87:	push   eax
  424a88:	call   0x42446a
  424a8d:	push   DWORD PTR [esi+0x3c]
  424a90:	call   0x426350
  424a95:	pop    ecx
  424a96:	pop    ecx
  424a97:	push   DWORD PTR [esi+0x2c]
  424a9a:	call   0x42446a
  424a9f:	push   DWORD PTR [esi+0x3c]
  424aa2:	call   0x42446a
  424aa7:	pop    ecx
  424aa8:	pop    ecx
  424aa9:	mov    eax,DWORD PTR [esi+0x40]
  424aac:	cmp    eax,DWORD PTR ds:0x45ceec
  424ab2:	je     0x424acc
  424ab4:	cmp    eax,edi
  424ab6:	je     0x424acc
  424ab8:	cmp    DWORD PTR [eax],edi
  424aba:	jne    0x424acc
  424abc:	push   eax
  424abd:	call   0x42446a
  424ac2:	push   DWORD PTR [esi+0x44]
  424ac5:	call   0x42446a
  424aca:	pop    ecx
  424acb:	pop    ecx
  424acc:	mov    eax,DWORD PTR [esi+0x50]
  424acf:	cmp    eax,DWORD PTR ds:0x45cdd0
  424ad5:	je     0x424af3
  424ad7:	cmp    eax,edi
  424ad9:	je     0x424af3
  424adb:	cmp    DWORD PTR [eax+0xb4],edi
  424ae1:	jne    0x424af3
  424ae3:	push   eax
  424ae4:	call   0x4261c0
  424ae9:	push   DWORD PTR [esi+0x50]
  424aec:	call   0x42446a
  424af1:	pop    ecx
  424af2:	pop    ecx
  424af3:	push   esi
  424af4:	call   0x42446a
  424af9:	pop    ecx
  424afa:	pop    edi
  424afb:	pop    esi
  424afc:	ret    
  424afd:	push   esi
  424afe:	call   0x42370d
  424b03:	mov    esi,eax
  424b05:	mov    eax,DWORD PTR [esi+0x64]
  424b08:	cmp    eax,DWORD PTR ds:0x45c58c
  424b0e:	je     0x424bba
  424b14:	test   eax,eax
  424b16:	je     0x424b47
  424b18:	mov    ecx,DWORD PTR [eax+0x2c]
  424b1b:	dec    DWORD PTR [eax]
  424b1d:	test   ecx,ecx
  424b1f:	je     0x424b23
  424b21:	dec    DWORD PTR [ecx]
  424b23:	mov    ecx,DWORD PTR [eax+0x34]
  424b26:	test   ecx,ecx
  424b28:	je     0x424b2c
  424b2a:	dec    DWORD PTR [ecx]
  424b2c:	mov    ecx,DWORD PTR [eax+0x30]
  424b2f:	test   ecx,ecx
  424b31:	je     0x424b35
  424b33:	dec    DWORD PTR [ecx]
  424b35:	mov    ecx,DWORD PTR [eax+0x40]
  424b38:	test   ecx,ecx
  424b3a:	je     0x424b3e
  424b3c:	dec    DWORD PTR [ecx]
  424b3e:	mov    ecx,DWORD PTR [eax+0x4c]
  424b41:	dec    DWORD PTR [ecx+0xb4]
  424b47:	mov    ecx,DWORD PTR ds:0x45c58c
  424b4d:	mov    DWORD PTR [esi+0x64],ecx
  424b50:	mov    ecx,DWORD PTR ds:0x45c58c
  424b56:	inc    DWORD PTR [ecx]
  424b58:	mov    ecx,DWORD PTR ds:0x45c58c
  424b5e:	mov    ecx,DWORD PTR [ecx+0x2c]
  424b61:	test   ecx,ecx
  424b63:	je     0x424b67
  424b65:	inc    DWORD PTR [ecx]
  424b67:	mov    ecx,DWORD PTR ds:0x45c58c
  424b6d:	mov    ecx,DWORD PTR [ecx+0x34]
  424b70:	test   ecx,ecx
  424b72:	je     0x424b76
  424b74:	inc    DWORD PTR [ecx]
  424b76:	mov    ecx,DWORD PTR ds:0x45c58c
  424b7c:	mov    ecx,DWORD PTR [ecx+0x30]
  424b7f:	test   ecx,ecx
  424b81:	je     0x424b85
  424b83:	inc    DWORD PTR [ecx]
  424b85:	mov    ecx,DWORD PTR ds:0x45c58c
  424b8b:	mov    ecx,DWORD PTR [ecx+0x40]
  424b8e:	test   ecx,ecx
  424b90:	je     0x424b94
  424b92:	inc    DWORD PTR [ecx]
  424b94:	mov    ecx,DWORD PTR ds:0x45c58c
  424b9a:	mov    ecx,DWORD PTR [ecx+0x4c]
  424b9d:	inc    DWORD PTR [ecx+0xb4]
  424ba3:	test   eax,eax
  424ba5:	je     0x424bba
  424ba7:	cmp    DWORD PTR [eax],0x0
  424baa:	jne    0x424bba
  424bac:	cmp    eax,0x45c538
  424bb1:	je     0x424bba
  424bb3:	push   eax
  424bb4:	call   0x424a33
  424bb9:	pop    ecx
  424bba:	mov    eax,DWORD PTR [esi+0x64]
  424bbd:	pop    esi
  424bbe:	ret    
  424bbf:	push   0xc
  424bc1:	push   0x428758
  424bc6:	call   0x423858
  424bcb:	push   0xc
  424bcd:	call   0x423a1f
  424bd2:	pop    ecx
  424bd3:	and    DWORD PTR [ebp-0x4],0x0
  424bd7:	call   0x424afd
  424bdc:	mov    DWORD PTR [ebp-0x1c],eax
  424bdf:	or     DWORD PTR [ebp-0x4],0xffffffff
  424be3:	call   0x424bf1
  424be8:	mov    eax,DWORD PTR [ebp-0x1c]
  424beb:	call   0x423893
  424bf0:	ret    
  424bf1:	push   0xc
  424bf3:	call   0x42398b
  424bf8:	pop    ecx
  424bf9:	ret    
  424bfa:	push   0x140
  424bff:	push   0x0
  424c01:	push   DWORD PTR ds:0x45d140
  424c07:	call   DWORD PTR ds:0x4280a4
  424c0d:	test   eax,eax
  424c0f:	mov    ds:0x45cf00,eax
  424c14:	jne    0x424c17
  424c16:	ret    
  424c17:	mov    ecx,DWORD PTR [esp+0x4]
  424c1b:	and    DWORD PTR ds:0x45cef8,0x0
  424c22:	and    DWORD PTR ds:0x45cefc,0x0
  424c29:	mov    ds:0x45cf08,eax
  424c2e:	xor    eax,eax
  424c30:	mov    DWORD PTR ds:0x45cf04,ecx
  424c36:	mov    DWORD PTR ds:0x45cf0c,0x10
  424c40:	inc    eax
  424c41:	ret    
  424c42:	mov    eax,ds:0x45cefc
  424c47:	lea    ecx,[eax+eax*4]
  424c4a:	mov    eax,ds:0x45cf00
  424c4f:	lea    ecx,[eax+ecx*4]
  424c52:	jmp    0x424c66
  424c54:	mov    edx,DWORD PTR [esp+0x4]
  424c58:	sub    edx,DWORD PTR [eax+0xc]
  424c5b:	cmp    edx,0x100000
  424c61:	jb     0x424c6c
  424c63:	add    eax,0x14
  424c66:	cmp    eax,ecx
  424c68:	jb     0x424c54
  424c6a:	xor    eax,eax
  424c6c:	ret    
  424c6d:	push   ebp
  424c6e:	mov    ebp,esp
  424c70:	sub    esp,0x10
  424c73:	mov    ecx,DWORD PTR [ebp+0x8]
  424c76:	mov    eax,DWORD PTR [ecx+0x10]
  424c79:	push   esi
  424c7a:	mov    esi,DWORD PTR [ebp+0xc]
  424c7d:	push   edi
  424c7e:	mov    edi,esi
  424c80:	sub    edi,DWORD PTR [ecx+0xc]
  424c83:	add    esi,0xfffffffc
  424c86:	shr    edi,0xf
  424c89:	mov    ecx,edi
  424c8b:	imul   ecx,ecx,0x204
  424c91:	lea    ecx,[ecx+eax*1+0x144]
  424c98:	mov    DWORD PTR [ebp-0x10],ecx
  424c9b:	mov    ecx,DWORD PTR [esi]
  424c9d:	dec    ecx
  424c9e:	test   cl,0x1
  424ca1:	mov    DWORD PTR [ebp-0x4],ecx
  424ca4:	jne    0x424f81
  424caa:	push   ebx
  424cab:	lea    ebx,[ecx+esi*1]
  424cae:	mov    edx,DWORD PTR [ebx]
  424cb0:	mov    DWORD PTR [ebp-0xc],edx
  424cb3:	mov    edx,DWORD PTR [esi-0x4]
  424cb6:	mov    DWORD PTR [ebp-0x8],edx
  424cb9:	mov    edx,DWORD PTR [ebp-0xc]
  424cbc:	test   dl,0x1
  424cbf:	mov    DWORD PTR [ebp+0xc],ebx
  424cc2:	jne    0x424d38
  424cc4:	sar    edx,0x4
  424cc7:	dec    edx
  424cc8:	cmp    edx,0x3f
  424ccb:	jbe    0x424cd0
  424ccd:	push   0x3f
  424ccf:	pop    edx
  424cd0:	mov    ecx,DWORD PTR [ebx+0x4]
  424cd3:	cmp    ecx,DWORD PTR [ebx+0x8]
  424cd6:	jne    0x424d1a
  424cd8:	cmp    edx,0x20
  424cdb:	mov    ebx,0x80000000
  424ce0:	jae    0x424cfb
  424ce2:	mov    ecx,edx
  424ce4:	shr    ebx,cl
  424ce6:	lea    ecx,[edx+eax*1+0x4]
  424cea:	not    ebx
  424cec:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424cf0:	dec    BYTE PTR [ecx]
  424cf2:	jne    0x424d17
  424cf4:	mov    ecx,DWORD PTR [ebp+0x8]
  424cf7:	and    DWORD PTR [ecx],ebx
  424cf9:	jmp    0x424d17
  424cfb:	lea    ecx,[edx-0x20]
  424cfe:	shr    ebx,cl
  424d00:	lea    ecx,[edx+eax*1+0x4]
  424d04:	not    ebx
  424d06:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424d0d:	dec    BYTE PTR [ecx]
  424d0f:	jne    0x424d17
  424d11:	mov    ecx,DWORD PTR [ebp+0x8]
  424d14:	and    DWORD PTR [ecx+0x4],ebx
  424d17:	mov    ebx,DWORD PTR [ebp+0xc]
  424d1a:	mov    edx,DWORD PTR [ebx+0x8]
  424d1d:	mov    ebx,DWORD PTR [ebx+0x4]
  424d20:	mov    ecx,DWORD PTR [ebp-0x4]
  424d23:	add    ecx,DWORD PTR [ebp-0xc]
  424d26:	mov    DWORD PTR [edx+0x4],ebx
  424d29:	mov    edx,DWORD PTR [ebp+0xc]
  424d2c:	mov    ebx,DWORD PTR [edx+0x4]
  424d2f:	mov    edx,DWORD PTR [edx+0x8]
  424d32:	mov    DWORD PTR [ebx+0x8],edx
  424d35:	mov    DWORD PTR [ebp-0x4],ecx
  424d38:	mov    edx,ecx
  424d3a:	sar    edx,0x4
  424d3d:	dec    edx
  424d3e:	cmp    edx,0x3f
  424d41:	jbe    0x424d46
  424d43:	push   0x3f
  424d45:	pop    edx
  424d46:	mov    ebx,DWORD PTR [ebp-0x8]
  424d49:	and    ebx,0x1
  424d4c:	mov    DWORD PTR [ebp-0xc],ebx
  424d4f:	jne    0x424de4
  424d55:	sub    esi,DWORD PTR [ebp-0x8]
  424d58:	mov    ebx,DWORD PTR [ebp-0x8]
  424d5b:	sar    ebx,0x4
  424d5e:	push   0x3f
  424d60:	mov    DWORD PTR [ebp+0xc],esi
  424d63:	dec    ebx
  424d64:	pop    esi
  424d65:	cmp    ebx,esi
  424d67:	jbe    0x424d6b
  424d69:	mov    ebx,esi
  424d6b:	add    ecx,DWORD PTR [ebp-0x8]
  424d6e:	mov    edx,ecx
  424d70:	sar    edx,0x4
  424d73:	dec    edx
  424d74:	cmp    edx,esi
  424d76:	mov    DWORD PTR [ebp-0x4],ecx
  424d79:	jbe    0x424d7d
  424d7b:	mov    edx,esi
  424d7d:	cmp    ebx,edx
  424d7f:	je     0x424ddf
  424d81:	mov    ecx,DWORD PTR [ebp+0xc]
  424d84:	mov    esi,DWORD PTR [ecx+0x4]
  424d87:	cmp    esi,DWORD PTR [ecx+0x8]
  424d8a:	jne    0x424dc7
  424d8c:	cmp    ebx,0x20
  424d8f:	mov    esi,0x80000000
  424d94:	jae    0x424dad
  424d96:	mov    ecx,ebx
  424d98:	shr    esi,cl
  424d9a:	not    esi
  424d9c:	and    DWORD PTR [eax+edi*4+0x44],esi
  424da0:	dec    BYTE PTR [ebx+eax*1+0x4]
  424da4:	jne    0x424dc7
  424da6:	mov    ecx,DWORD PTR [ebp+0x8]
  424da9:	and    DWORD PTR [ecx],esi
  424dab:	jmp    0x424dc7
  424dad:	lea    ecx,[ebx-0x20]
  424db0:	shr    esi,cl
  424db2:	not    esi
  424db4:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424dbb:	dec    BYTE PTR [ebx+eax*1+0x4]
  424dbf:	jne    0x424dc7
  424dc1:	mov    ecx,DWORD PTR [ebp+0x8]
  424dc4:	and    DWORD PTR [ecx+0x4],esi
  424dc7:	mov    ecx,DWORD PTR [ebp+0xc]
  424dca:	mov    esi,DWORD PTR [ecx+0x8]
  424dcd:	mov    ecx,DWORD PTR [ecx+0x4]
  424dd0:	mov    DWORD PTR [esi+0x4],ecx
  424dd3:	mov    ecx,DWORD PTR [ebp+0xc]
  424dd6:	mov    esi,DWORD PTR [ecx+0x4]
  424dd9:	mov    ecx,DWORD PTR [ecx+0x8]
  424ddc:	mov    DWORD PTR [esi+0x8],ecx
  424ddf:	mov    esi,DWORD PTR [ebp+0xc]
  424de2:	jmp    0x424de7
  424de4:	mov    ebx,DWORD PTR [ebp+0x8]
  424de7:	cmp    DWORD PTR [ebp-0xc],0x0
  424deb:	jne    0x424df5
  424ded:	cmp    ebx,edx
  424def:	je     0x424e75
  424df5:	mov    ecx,DWORD PTR [ebp-0x10]
  424df8:	lea    ecx,[ecx+edx*8]
  424dfb:	mov    ebx,DWORD PTR [ecx+0x4]
  424dfe:	mov    DWORD PTR [esi+0x8],ecx
  424e01:	mov    DWORD PTR [esi+0x4],ebx
  424e04:	mov    DWORD PTR [ecx+0x4],esi
  424e07:	mov    ecx,DWORD PTR [esi+0x4]
  424e0a:	mov    DWORD PTR [ecx+0x8],esi
  424e0d:	mov    ecx,DWORD PTR [esi+0x4]
  424e10:	cmp    ecx,DWORD PTR [esi+0x8]
  424e13:	jne    0x424e75
  424e15:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424e19:	mov    BYTE PTR [ebp+0xf],cl
  424e1c:	inc    cl
  424e1e:	cmp    edx,0x20
  424e21:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424e25:	jae    0x424e4c
  424e27:	cmp    BYTE PTR [ebp+0xf],0x0
  424e2b:	jne    0x424e3b
  424e2d:	mov    ecx,edx
  424e2f:	mov    ebx,0x80000000
  424e34:	shr    ebx,cl
  424e36:	mov    ecx,DWORD PTR [ebp+0x8]
  424e39:	or     DWORD PTR [ecx],ebx
  424e3b:	mov    ebx,0x80000000
  424e40:	mov    ecx,edx
  424e42:	shr    ebx,cl
  424e44:	lea    eax,[eax+edi*4+0x44]
  424e48:	or     DWORD PTR [eax],ebx
  424e4a:	jmp    0x424e75
  424e4c:	cmp    BYTE PTR [ebp+0xf],0x0
  424e50:	jne    0x424e62
  424e52:	lea    ecx,[edx-0x20]
  424e55:	mov    ebx,0x80000000
  424e5a:	shr    ebx,cl
  424e5c:	mov    ecx,DWORD PTR [ebp+0x8]
  424e5f:	or     DWORD PTR [ecx+0x4],ebx
  424e62:	lea    ecx,[edx-0x20]
  424e65:	mov    edx,0x80000000
  424e6a:	shr    edx,cl
  424e6c:	lea    eax,[eax+edi*4+0xc4]
  424e73:	or     DWORD PTR [eax],edx
  424e75:	mov    eax,DWORD PTR [ebp-0x4]
  424e78:	mov    DWORD PTR [esi],eax
  424e7a:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424e7e:	mov    eax,DWORD PTR [ebp-0x10]
  424e81:	dec    DWORD PTR [eax]
  424e83:	jne    0x424f80
  424e89:	mov    eax,ds:0x45cef8
  424e8e:	test   eax,eax
  424e90:	je     0x424f72
  424e96:	mov    ecx,DWORD PTR ds:0x45cf10
  424e9c:	mov    esi,DWORD PTR ds:0x428084
  424ea2:	push   0x4000
  424ea7:	shl    ecx,0xf
  424eaa:	add    ecx,DWORD PTR [eax+0xc]
  424ead:	mov    ebx,0x8000
  424eb2:	push   ebx
  424eb3:	push   ecx
  424eb4:	call   esi
  424eb6:	mov    ecx,DWORD PTR ds:0x45cf10
  424ebc:	mov    eax,ds:0x45cef8
  424ec1:	mov    edx,0x80000000
  424ec6:	shr    edx,cl
  424ec8:	or     DWORD PTR [eax+0x8],edx
  424ecb:	mov    eax,ds:0x45cef8
  424ed0:	mov    eax,DWORD PTR [eax+0x10]
  424ed3:	mov    ecx,DWORD PTR ds:0x45cf10
  424ed9:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424ee1:	mov    eax,ds:0x45cef8
  424ee6:	mov    eax,DWORD PTR [eax+0x10]
  424ee9:	dec    BYTE PTR [eax+0x43]
  424eec:	mov    eax,ds:0x45cef8
  424ef1:	mov    ecx,DWORD PTR [eax+0x10]
  424ef4:	cmp    BYTE PTR [ecx+0x43],0x0
  424ef8:	jne    0x424f03
  424efa:	and    DWORD PTR [eax+0x4],0xfffffffe
  424efe:	mov    eax,ds:0x45cef8
  424f03:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424f07:	jne    0x424f72
  424f09:	push   ebx
  424f0a:	push   0x0
  424f0c:	push   DWORD PTR [eax+0xc]
  424f0f:	call   esi
  424f11:	mov    eax,ds:0x45cef8
  424f16:	push   DWORD PTR [eax+0x10]
  424f19:	push   0x0
  424f1b:	push   DWORD PTR ds:0x45d140
  424f21:	call   DWORD PTR ds:0x428088
  424f27:	mov    eax,ds:0x45cefc
  424f2c:	mov    edx,DWORD PTR ds:0x45cf00
  424f32:	lea    eax,[eax+eax*4]
  424f35:	shl    eax,0x2
  424f38:	mov    ecx,eax
  424f3a:	mov    eax,ds:0x45cef8
  424f3f:	sub    ecx,eax
  424f41:	lea    ecx,[ecx+edx*1-0x14]
  424f45:	push   ecx
  424f46:	lea    ecx,[eax+0x14]
  424f49:	push   ecx
  424f4a:	push   eax
  424f4b:	call   0x4267a0
  424f50:	mov    eax,DWORD PTR [ebp+0x8]
  424f53:	add    esp,0xc
  424f56:	dec    DWORD PTR ds:0x45cefc
  424f5c:	cmp    eax,DWORD PTR ds:0x45cef8
  424f62:	jbe    0x424f68
  424f64:	sub    DWORD PTR [ebp+0x8],0x14
  424f68:	mov    eax,ds:0x45cf00
  424f6d:	mov    ds:0x45cf08,eax
  424f72:	mov    eax,DWORD PTR [ebp+0x8]
  424f75:	mov    ds:0x45cef8,eax
  424f7a:	mov    DWORD PTR ds:0x45cf10,edi
  424f80:	pop    ebx
  424f81:	pop    edi
  424f82:	pop    esi
  424f83:	leave  
  424f84:	ret    
  424f85:	mov    eax,ds:0x45cefc
  424f8a:	mov    ecx,DWORD PTR ds:0x45cf0c
  424f90:	push   edi
  424f91:	xor    edi,edi
  424f93:	cmp    eax,ecx
  424f95:	jne    0x424fcb
  424f97:	lea    eax,[ecx+ecx*4+0x50]
  424f9b:	shl    eax,0x2
  424f9e:	push   eax
  424f9f:	push   DWORD PTR ds:0x45cf00
  424fa5:	push   edi
  424fa6:	push   DWORD PTR ds:0x45d140
  424fac:	call   DWORD PTR ds:0x4280b0
  424fb2:	cmp    eax,edi
  424fb4:	jne    0x424fba
  424fb6:	xor    eax,eax
  424fb8:	pop    edi
  424fb9:	ret    
  424fba:	add    DWORD PTR ds:0x45cf0c,0x10
  424fc1:	mov    ds:0x45cf00,eax
  424fc6:	mov    eax,ds:0x45cefc
  424fcb:	mov    ecx,DWORD PTR ds:0x45cf00
  424fd1:	push   esi
  424fd2:	push   0x41c4
  424fd7:	push   0x8
  424fd9:	push   DWORD PTR ds:0x45d140
  424fdf:	lea    eax,[eax+eax*4]
  424fe2:	lea    esi,[ecx+eax*4]
  424fe5:	call   DWORD PTR ds:0x4280a4
  424feb:	cmp    eax,edi
  424fed:	mov    DWORD PTR [esi+0x10],eax
  424ff0:	jne    0x424ff6
  424ff2:	xor    eax,eax
  424ff4:	jmp    0x425039
  424ff6:	push   0x4
  424ff8:	push   0x2000
  424ffd:	push   0x100000
  425002:	push   edi
  425003:	call   DWORD PTR ds:0x4280ac
  425009:	cmp    eax,edi
  42500b:	mov    DWORD PTR [esi+0xc],eax
  42500e:	jne    0x425022
  425010:	push   DWORD PTR [esi+0x10]
  425013:	push   edi
  425014:	push   DWORD PTR ds:0x45d140
  42501a:	call   DWORD PTR ds:0x428088
  425020:	jmp    0x424ff2
  425022:	or     DWORD PTR [esi+0x8],0xffffffff
  425026:	mov    DWORD PTR [esi],edi
  425028:	mov    DWORD PTR [esi+0x4],edi
  42502b:	inc    DWORD PTR ds:0x45cefc
  425031:	mov    eax,DWORD PTR [esi+0x10]
  425034:	or     DWORD PTR [eax],0xffffffff
  425037:	mov    eax,esi
  425039:	pop    esi
  42503a:	pop    edi
  42503b:	ret    
  42503c:	push   ebp
  42503d:	mov    ebp,esp
  42503f:	push   ecx
  425040:	push   ecx
  425041:	mov    ecx,DWORD PTR [ebp+0x8]
  425044:	mov    eax,DWORD PTR [ecx+0x8]
  425047:	push   ebx
  425048:	push   esi
  425049:	mov    esi,DWORD PTR [ecx+0x10]
  42504c:	push   edi
  42504d:	xor    ebx,ebx
  42504f:	jmp    0x425054
  425051:	shl    eax,1
  425053:	inc    ebx
  425054:	test   eax,eax
  425056:	jge    0x425051
  425058:	mov    eax,ebx
  42505a:	imul   eax,eax,0x204
  425060:	lea    eax,[eax+esi*1+0x144]
  425067:	push   0x3f
  425069:	mov    DWORD PTR [ebp-0x8],eax
  42506c:	pop    edx
  42506d:	mov    DWORD PTR [eax+0x8],eax
  425070:	mov    DWORD PTR [eax+0x4],eax
  425073:	add    eax,0x8
  425076:	dec    edx
  425077:	jne    0x42506d
  425079:	push   0x4
  42507b:	mov    edi,ebx
  42507d:	push   0x1000
  425082:	shl    edi,0xf
  425085:	add    edi,DWORD PTR [ecx+0xc]
  425088:	push   0x8000
  42508d:	push   edi
  42508e:	call   DWORD PTR ds:0x4280ac
  425094:	test   eax,eax
  425096:	jne    0x4250a0
  425098:	or     eax,0xffffffff
  42509b:	jmp    0x42513d
  4250a0:	lea    edx,[edi+0x7000]
  4250a6:	cmp    edi,edx
  4250a8:	mov    DWORD PTR [ebp-0x4],edx
  4250ab:	ja     0x4250f0
  4250ad:	mov    ecx,edx
  4250af:	sub    ecx,edi
  4250b1:	shr    ecx,0xc
  4250b4:	lea    eax,[edi+0x10]
  4250b7:	inc    ecx
  4250b8:	or     DWORD PTR [eax-0x8],0xffffffff
  4250bc:	or     DWORD PTR [eax+0xfec],0xffffffff
  4250c3:	lea    edx,[eax+0xffc]
  4250c9:	mov    DWORD PTR [eax],edx
  4250cb:	lea    edx,[eax-0x1004]
  4250d1:	mov    DWORD PTR [eax-0x4],0xff0
  4250d8:	mov    DWORD PTR [eax+0x4],edx
  4250db:	mov    DWORD PTR [eax+0xfe8],0xff0
  4250e5:	add    eax,0x1000
  4250ea:	dec    ecx
  4250eb:	jne    0x4250b8
  4250ed:	mov    edx,DWORD PTR [ebp-0x4]
  4250f0:	mov    eax,DWORD PTR [ebp-0x8]
  4250f3:	add    eax,0x1f8
  4250f8:	lea    ecx,[edi+0xc]
  4250fb:	mov    DWORD PTR [eax+0x4],ecx
  4250fe:	mov    DWORD PTR [ecx+0x8],eax
  425101:	lea    ecx,[edx+0xc]
  425104:	mov    DWORD PTR [eax+0x8],ecx
  425107:	mov    DWORD PTR [ecx+0x4],eax
  42510a:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  42510f:	xor    edi,edi
  425111:	inc    edi
  425112:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  425119:	mov    al,BYTE PTR [esi+0x43]
  42511c:	mov    cl,al
  42511e:	inc    cl
  425120:	test   al,al
  425122:	mov    eax,DWORD PTR [ebp+0x8]
  425125:	mov    BYTE PTR [esi+0x43],cl
  425128:	jne    0x42512d
  42512a:	or     DWORD PTR [eax+0x4],edi
  42512d:	mov    edx,0x80000000
  425132:	mov    ecx,ebx
  425134:	shr    edx,cl
  425136:	not    edx
  425138:	and    DWORD PTR [eax+0x8],edx
  42513b:	mov    eax,ebx
  42513d:	pop    edi
  42513e:	pop    esi
  42513f:	pop    ebx
  425140:	leave  
  425141:	ret    
  425142:	push   ebp
  425143:	mov    ebp,esp
  425145:	sub    esp,0xc
  425148:	mov    ecx,DWORD PTR [ebp+0x8]
  42514b:	mov    eax,DWORD PTR [ecx+0x10]
  42514e:	push   ebx
  42514f:	push   esi
  425150:	mov    esi,DWORD PTR [ebp+0x10]
  425153:	push   edi
  425154:	mov    edi,DWORD PTR [ebp+0xc]
  425157:	mov    edx,edi
  425159:	sub    edx,DWORD PTR [ecx+0xc]
  42515c:	add    esi,0x17
  42515f:	shr    edx,0xf
  425162:	mov    ecx,edx
  425164:	imul   ecx,ecx,0x204
  42516a:	lea    ecx,[ecx+eax*1+0x144]
  425171:	mov    DWORD PTR [ebp-0xc],ecx
  425174:	mov    ecx,DWORD PTR [edi-0x4]
  425177:	and    esi,0xfffffff0
  42517a:	dec    ecx
  42517b:	cmp    esi,ecx
  42517d:	lea    edi,[ecx+edi*1-0x4]
  425181:	mov    ebx,DWORD PTR [edi]
  425183:	mov    DWORD PTR [ebp+0x10],ecx
  425186:	mov    DWORD PTR [ebp-0x4],ebx
  425189:	jle    0x4252e4
  42518f:	test   bl,0x1
  425192:	jne    0x4252dd
  425198:	add    ebx,ecx
  42519a:	cmp    esi,ebx
  42519c:	jg     0x4252dd
  4251a2:	mov    ecx,DWORD PTR [ebp-0x4]
  4251a5:	sar    ecx,0x4
  4251a8:	dec    ecx
  4251a9:	cmp    ecx,0x3f
  4251ac:	mov    DWORD PTR [ebp-0x8],ecx
  4251af:	jbe    0x4251b7
  4251b1:	push   0x3f
  4251b3:	pop    ecx
  4251b4:	mov    DWORD PTR [ebp-0x8],ecx
  4251b7:	mov    ebx,DWORD PTR [edi+0x4]
  4251ba:	cmp    ebx,DWORD PTR [edi+0x8]
  4251bd:	jne    0x425202
  4251bf:	cmp    ecx,0x20
  4251c2:	mov    ebx,0x80000000
  4251c7:	jae    0x4251e3
  4251c9:	shr    ebx,cl
  4251cb:	mov    ecx,DWORD PTR [ebp-0x8]
  4251ce:	lea    ecx,[ecx+eax*1+0x4]
  4251d2:	not    ebx
  4251d4:	and    DWORD PTR [eax+edx*4+0x44],ebx
  4251d8:	dec    BYTE PTR [ecx]
  4251da:	jne    0x425202
  4251dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4251df:	and    DWORD PTR [ecx],ebx
  4251e1:	jmp    0x425202
  4251e3:	add    ecx,0xffffffe0
  4251e6:	shr    ebx,cl
  4251e8:	mov    ecx,DWORD PTR [ebp-0x8]
  4251eb:	lea    ecx,[ecx+eax*1+0x4]
  4251ef:	not    ebx
  4251f1:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4251f8:	dec    BYTE PTR [ecx]
  4251fa:	jne    0x425202
  4251fc:	mov    ecx,DWORD PTR [ebp+0x8]
  4251ff:	and    DWORD PTR [ecx+0x4],ebx
  425202:	mov    ecx,DWORD PTR [edi+0x8]
  425205:	mov    ebx,DWORD PTR [edi+0x4]
  425208:	mov    DWORD PTR [ecx+0x4],ebx
  42520b:	mov    ecx,DWORD PTR [edi+0x4]
  42520e:	mov    edi,DWORD PTR [edi+0x8]
  425211:	mov    DWORD PTR [ecx+0x8],edi
  425214:	mov    ecx,DWORD PTR [ebp+0x10]
  425217:	sub    ecx,esi
  425219:	add    DWORD PTR [ebp-0x4],ecx
  42521c:	cmp    DWORD PTR [ebp-0x4],0x0
  425220:	jle    0x4252cb
  425226:	mov    edi,DWORD PTR [ebp-0x4]
  425229:	mov    ecx,DWORD PTR [ebp+0xc]
  42522c:	sar    edi,0x4
  42522f:	dec    edi
  425230:	cmp    edi,0x3f
  425233:	lea    ecx,[ecx+esi*1-0x4]
  425237:	jbe    0x42523c
  425239:	push   0x3f
  42523b:	pop    edi
  42523c:	mov    ebx,DWORD PTR [ebp-0xc]
  42523f:	lea    ebx,[ebx+edi*8]
  425242:	mov    DWORD PTR [ebp+0x10],ebx
  425245:	mov    ebx,DWORD PTR [ebx+0x4]
  425248:	mov    DWORD PTR [ecx+0x4],ebx
  42524b:	mov    ebx,DWORD PTR [ebp+0x10]
  42524e:	mov    DWORD PTR [ecx+0x8],ebx
  425251:	mov    DWORD PTR [ebx+0x4],ecx
  425254:	mov    ebx,DWORD PTR [ecx+0x4]
  425257:	mov    DWORD PTR [ebx+0x8],ecx
  42525a:	mov    ebx,DWORD PTR [ecx+0x4]
  42525d:	cmp    ebx,DWORD PTR [ecx+0x8]
  425260:	jne    0x4252b9
  425262:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  425266:	mov    BYTE PTR [ebp+0x13],cl
  425269:	inc    cl
  42526b:	cmp    edi,0x20
  42526e:	mov    BYTE PTR [edi+eax*1+0x4],cl
  425272:	jae    0x425290
  425274:	cmp    BYTE PTR [ebp+0x13],0x0
  425278:	jne    0x425288
  42527a:	mov    ecx,edi
  42527c:	mov    ebx,0x80000000
  425281:	shr    ebx,cl
  425283:	mov    ecx,DWORD PTR [ebp+0x8]
  425286:	or     DWORD PTR [ecx],ebx
  425288:	lea    eax,[eax+edx*4+0x44]
  42528c:	mov    ecx,edi
  42528e:	jmp    0x4252b0
  425290:	cmp    BYTE PTR [ebp+0x13],0x0
  425294:	jne    0x4252a6
  425296:	lea    ecx,[edi-0x20]
  425299:	mov    ebx,0x80000000
  42529e:	shr    ebx,cl
  4252a0:	mov    ecx,DWORD PTR [ebp+0x8]
  4252a3:	or     DWORD PTR [ecx+0x4],ebx
  4252a6:	lea    eax,[eax+edx*4+0xc4]
  4252ad:	lea    ecx,[edi-0x20]
  4252b0:	mov    edx,0x80000000
  4252b5:	shr    edx,cl
  4252b7:	or     DWORD PTR [eax],edx
  4252b9:	mov    edx,DWORD PTR [ebp+0xc]
  4252bc:	mov    ecx,DWORD PTR [ebp-0x4]
  4252bf:	lea    eax,[edx+esi*1-0x4]
  4252c3:	mov    DWORD PTR [eax],ecx
  4252c5:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  4252c9:	jmp    0x4252ce
  4252cb:	mov    edx,DWORD PTR [ebp+0xc]
  4252ce:	lea    eax,[esi+0x1]
  4252d1:	mov    DWORD PTR [edx-0x4],eax
  4252d4:	mov    DWORD PTR [edx+esi*1-0x8],eax
  4252d8:	jmp    0x425419
  4252dd:	xor    eax,eax
  4252df:	jmp    0x42541c
  4252e4:	jge    0x425419
  4252ea:	mov    ebx,DWORD PTR [ebp+0xc]
  4252ed:	sub    DWORD PTR [ebp+0x10],esi
  4252f0:	lea    ecx,[esi+0x1]
  4252f3:	mov    DWORD PTR [ebx-0x4],ecx
  4252f6:	lea    ebx,[ebx+esi*1-0x4]
  4252fa:	mov    esi,DWORD PTR [ebp+0x10]
  4252fd:	sar    esi,0x4
  425300:	dec    esi
  425301:	cmp    esi,0x3f
  425304:	mov    DWORD PTR [ebp+0xc],ebx
  425307:	mov    DWORD PTR [ebx-0x4],ecx
  42530a:	jbe    0x42530f
  42530c:	push   0x3f
  42530e:	pop    esi
  42530f:	test   BYTE PTR [ebp-0x4],0x1
  425313:	jne    0x425399
  425319:	mov    esi,DWORD PTR [ebp-0x4]
  42531c:	sar    esi,0x4
  42531f:	dec    esi
  425320:	cmp    esi,0x3f
  425323:	jbe    0x425328
  425325:	push   0x3f
  425327:	pop    esi
  425328:	mov    ecx,DWORD PTR [edi+0x4]
  42532b:	cmp    ecx,DWORD PTR [edi+0x8]
  42532e:	jne    0x425372
  425330:	cmp    esi,0x20
  425333:	mov    ebx,0x80000000
  425338:	jae    0x425353
  42533a:	mov    ecx,esi
  42533c:	shr    ebx,cl
  42533e:	lea    esi,[esi+eax*1+0x4]
  425342:	not    ebx
  425344:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425348:	dec    BYTE PTR [esi]
  42534a:	jne    0x42536f
  42534c:	mov    ecx,DWORD PTR [ebp+0x8]
  42534f:	and    DWORD PTR [ecx],ebx
  425351:	jmp    0x42536f
  425353:	lea    ecx,[esi-0x20]
  425356:	shr    ebx,cl
  425358:	lea    ecx,[esi+eax*1+0x4]
  42535c:	not    ebx
  42535e:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425365:	dec    BYTE PTR [ecx]
  425367:	jne    0x42536f
  425369:	mov    ecx,DWORD PTR [ebp+0x8]
  42536c:	and    DWORD PTR [ecx+0x4],ebx
  42536f:	mov    ebx,DWORD PTR [ebp+0xc]
  425372:	mov    ecx,DWORD PTR [edi+0x8]
  425375:	mov    esi,DWORD PTR [edi+0x4]
  425378:	mov    DWORD PTR [ecx+0x4],esi
  42537b:	mov    esi,DWORD PTR [edi+0x8]
  42537e:	mov    ecx,DWORD PTR [edi+0x4]
  425381:	mov    DWORD PTR [ecx+0x8],esi
  425384:	mov    esi,DWORD PTR [ebp+0x10]
  425387:	add    esi,DWORD PTR [ebp-0x4]
  42538a:	mov    DWORD PTR [ebp+0x10],esi
  42538d:	sar    esi,0x4
  425390:	dec    esi
  425391:	cmp    esi,0x3f
  425394:	jbe    0x425399
  425396:	push   0x3f
  425398:	pop    esi
  425399:	mov    ecx,DWORD PTR [ebp-0xc]
  42539c:	lea    ecx,[ecx+esi*8]
  42539f:	mov    edi,DWORD PTR [ecx+0x4]
  4253a2:	mov    DWORD PTR [ebx+0x8],ecx
  4253a5:	mov    DWORD PTR [ebx+0x4],edi
  4253a8:	mov    DWORD PTR [ecx+0x4],ebx
  4253ab:	mov    ecx,DWORD PTR [ebx+0x4]
  4253ae:	mov    DWORD PTR [ecx+0x8],ebx
  4253b1:	mov    ecx,DWORD PTR [ebx+0x4]
  4253b4:	cmp    ecx,DWORD PTR [ebx+0x8]
  4253b7:	jne    0x425410
  4253b9:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  4253bd:	mov    BYTE PTR [ebp+0xf],cl
  4253c0:	inc    cl
  4253c2:	cmp    esi,0x20
  4253c5:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4253c9:	jae    0x4253e7
  4253cb:	cmp    BYTE PTR [ebp+0xf],0x0
  4253cf:	jne    0x4253df
  4253d1:	mov    ecx,esi
  4253d3:	mov    edi,0x80000000
  4253d8:	shr    edi,cl
  4253da:	mov    ecx,DWORD PTR [ebp+0x8]
  4253dd:	or     DWORD PTR [ecx],edi
  4253df:	lea    eax,[eax+edx*4+0x44]
  4253e3:	mov    ecx,esi
  4253e5:	jmp    0x425407
  4253e7:	cmp    BYTE PTR [ebp+0xf],0x0
  4253eb:	jne    0x4253fd
  4253ed:	lea    ecx,[esi-0x20]
  4253f0:	mov    edi,0x80000000
  4253f5:	shr    edi,cl
  4253f7:	mov    ecx,DWORD PTR [ebp+0x8]
  4253fa:	or     DWORD PTR [ecx+0x4],edi
  4253fd:	lea    eax,[eax+edx*4+0xc4]
  425404:	lea    ecx,[esi-0x20]
  425407:	mov    edx,0x80000000
  42540c:	shr    edx,cl
  42540e:	or     DWORD PTR [eax],edx
  425410:	mov    eax,DWORD PTR [ebp+0x10]
  425413:	mov    DWORD PTR [ebx],eax
  425415:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  425419:	xor    eax,eax
  42541b:	inc    eax
  42541c:	pop    edi
  42541d:	pop    esi
  42541e:	pop    ebx
  42541f:	leave  
  425420:	ret    
  425421:	push   ebp
  425422:	mov    ebp,esp
  425424:	sub    esp,0x14
  425427:	mov    ecx,DWORD PTR [ebp+0x8]
  42542a:	mov    eax,ds:0x45cefc
  42542f:	mov    edx,DWORD PTR ds:0x45cf00
  425435:	add    ecx,0x17
  425438:	and    ecx,0xfffffff0
  42543b:	push   ebx
  42543c:	mov    DWORD PTR [ebp-0x10],ecx
  42543f:	sar    ecx,0x4
  425442:	push   esi
  425443:	lea    eax,[eax+eax*4]
  425446:	push   edi
  425447:	dec    ecx
  425448:	cmp    ecx,0x20
  42544b:	lea    edi,[edx+eax*4]
  42544e:	mov    DWORD PTR [ebp-0x4],edi
  425451:	jge    0x42545e
  425453:	or     esi,0xffffffff
  425456:	shr    esi,cl
  425458:	or     DWORD PTR [ebp-0x8],0xffffffff
  42545c:	jmp    0x42546b
  42545e:	add    ecx,0xffffffe0
  425461:	or     eax,0xffffffff
  425464:	xor    esi,esi
  425466:	shr    eax,cl
  425468:	mov    DWORD PTR [ebp-0x8],eax
  42546b:	mov    eax,ds:0x45cf08
  425470:	mov    ebx,eax
  425472:	mov    DWORD PTR [ebp-0xc],esi
  425475:	cmp    ebx,edi
  425477:	jmp    0x42548d
  425479:	mov    ecx,DWORD PTR [ebx+0x4]
  42547c:	mov    edi,DWORD PTR [ebx]
  42547e:	and    ecx,DWORD PTR [ebp-0x8]
  425481:	and    edi,esi
  425483:	or     ecx,edi
  425485:	jne    0x425492
  425487:	add    ebx,0x14
  42548a:	cmp    ebx,DWORD PTR [ebp-0x4]
  42548d:	mov    DWORD PTR [ebp+0x8],ebx
  425490:	jb     0x425479
  425492:	cmp    ebx,DWORD PTR [ebp-0x4]
  425495:	jne    0x4254bb
  425497:	mov    ebx,edx
  425499:	jmp    0x4254ac
  42549b:	mov    ecx,DWORD PTR [ebx+0x4]
  42549e:	mov    edi,DWORD PTR [ebx]
  4254a0:	and    ecx,DWORD PTR [ebp-0x8]
  4254a3:	and    edi,esi
  4254a5:	or     ecx,edi
  4254a7:	jne    0x4254b3
  4254a9:	add    ebx,0x14
  4254ac:	cmp    ebx,eax
  4254ae:	mov    DWORD PTR [ebp+0x8],ebx
  4254b1:	jb     0x42549b
  4254b3:	cmp    ebx,eax
  4254b5:	je     0x42554f
  4254bb:	mov    DWORD PTR ds:0x45cf08,ebx
  4254c1:	mov    eax,DWORD PTR [ebx+0x10]
  4254c4:	mov    edx,DWORD PTR [eax]
  4254c6:	cmp    edx,0xffffffff
  4254c9:	mov    DWORD PTR [ebp-0x4],edx
  4254cc:	je     0x4254e2
  4254ce:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  4254d5:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  4254d9:	and    ecx,DWORD PTR [ebp-0x8]
  4254dc:	and    edi,esi
  4254de:	or     ecx,edi
  4254e0:	jne    0x425518
  4254e2:	mov    edx,DWORD PTR [eax+0xc4]
  4254e8:	and    edx,DWORD PTR [ebp-0x8]
  4254eb:	and    DWORD PTR [ebp-0x4],0x0
  4254ef:	lea    ecx,[eax+0x44]
  4254f2:	mov    esi,DWORD PTR [ecx]
  4254f4:	and    esi,DWORD PTR [ebp-0xc]
  4254f7:	or     edx,esi
  4254f9:	mov    esi,DWORD PTR [ebp-0xc]
  4254fc:	jne    0x425515
  4254fe:	mov    edx,DWORD PTR [ecx+0x84]
  425504:	and    edx,DWORD PTR [ebp-0x8]
  425507:	inc    DWORD PTR [ebp-0x4]
  42550a:	add    ecx,0x4
  42550d:	mov    edi,DWORD PTR [ecx]
  42550f:	and    edi,esi
  425511:	or     edx,edi
  425513:	je     0x4254fe
  425515:	mov    edx,DWORD PTR [ebp-0x4]
  425518:	mov    ecx,edx
  42551a:	imul   ecx,ecx,0x204
  425520:	lea    ecx,[ecx+eax*1+0x144]
  425527:	mov    DWORD PTR [ebp-0xc],ecx
  42552a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42552e:	xor    edi,edi
  425530:	and    ecx,esi
  425532:	jne    0x4255a1
  425534:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42553b:	and    ecx,DWORD PTR [ebp-0x8]
  42553e:	push   0x20
  425540:	pop    edi
  425541:	jmp    0x4255a1
  425543:	cmp    DWORD PTR [ebx+0x8],0x0
  425547:	jne    0x425554
  425549:	add    ebx,0x14
  42554c:	mov    DWORD PTR [ebp+0x8],ebx
  42554f:	cmp    ebx,DWORD PTR [ebp-0x4]
  425552:	jb     0x425543
  425554:	cmp    ebx,DWORD PTR [ebp-0x4]
  425557:	jne    0x42557f
  425559:	mov    ebx,edx
  42555b:	jmp    0x425566
  42555d:	cmp    DWORD PTR [ebx+0x8],0x0
  425561:	jne    0x42556d
  425563:	add    ebx,0x14
  425566:	cmp    ebx,eax
  425568:	mov    DWORD PTR [ebp+0x8],ebx
  42556b:	jb     0x42555d
  42556d:	cmp    ebx,eax
  42556f:	jne    0x42557f
  425571:	call   0x424f85
  425576:	mov    ebx,eax
  425578:	test   ebx,ebx
  42557a:	mov    DWORD PTR [ebp+0x8],ebx
  42557d:	je     0x425597
  42557f:	push   ebx
  425580:	call   0x42503c
  425585:	pop    ecx
  425586:	mov    ecx,DWORD PTR [ebx+0x10]
  425589:	mov    DWORD PTR [ecx],eax
  42558b:	mov    eax,DWORD PTR [ebx+0x10]
  42558e:	cmp    DWORD PTR [eax],0xffffffff
  425591:	jne    0x4254bb
  425597:	xor    eax,eax
  425599:	jmp    0x425718
  42559e:	shl    ecx,1
  4255a0:	inc    edi
  4255a1:	test   ecx,ecx
  4255a3:	jge    0x42559e
  4255a5:	mov    ecx,DWORD PTR [ebp-0xc]
  4255a8:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  4255ac:	mov    ecx,DWORD PTR [edx]
  4255ae:	sub    ecx,DWORD PTR [ebp-0x10]
  4255b1:	mov    esi,ecx
  4255b3:	sar    esi,0x4
  4255b6:	dec    esi
  4255b7:	cmp    esi,0x3f
  4255ba:	mov    DWORD PTR [ebp-0x8],ecx
  4255bd:	jle    0x4255c2
  4255bf:	push   0x3f
  4255c1:	pop    esi
  4255c2:	cmp    esi,edi
  4255c4:	je     0x4256cb
  4255ca:	mov    ecx,DWORD PTR [edx+0x4]
  4255cd:	cmp    ecx,DWORD PTR [edx+0x8]
  4255d0:	jne    0x42562e
  4255d2:	cmp    edi,0x20
  4255d5:	mov    ebx,0x80000000
  4255da:	jge    0x425602
  4255dc:	mov    ecx,edi
  4255de:	shr    ebx,cl
  4255e0:	mov    ecx,DWORD PTR [ebp-0x4]
  4255e3:	lea    edi,[eax+edi*1+0x4]
  4255e7:	not    ebx
  4255e9:	mov    DWORD PTR [ebp-0x14],ebx
  4255ec:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  4255f0:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  4255f4:	dec    BYTE PTR [edi]
  4255f6:	jne    0x42562b
  4255f8:	mov    ecx,DWORD PTR [ebp-0x14]
  4255fb:	mov    ebx,DWORD PTR [ebp+0x8]
  4255fe:	and    DWORD PTR [ebx],ecx
  425600:	jmp    0x42562e
  425602:	lea    ecx,[edi-0x20]
  425605:	shr    ebx,cl
  425607:	mov    ecx,DWORD PTR [ebp-0x4]
  42560a:	lea    ecx,[eax+ecx*4+0xc4]
  425611:	lea    edi,[eax+edi*1+0x4]
  425615:	not    ebx
  425617:	and    DWORD PTR [ecx],ebx
  425619:	dec    BYTE PTR [edi]
  42561b:	mov    DWORD PTR [ebp-0x14],ebx
  42561e:	jne    0x42562b
  425620:	mov    ebx,DWORD PTR [ebp+0x8]
  425623:	mov    ecx,DWORD PTR [ebp-0x14]
  425626:	and    DWORD PTR [ebx+0x4],ecx
  425629:	jmp    0x42562e
  42562b:	mov    ebx,DWORD PTR [ebp+0x8]
  42562e:	cmp    DWORD PTR [ebp-0x8],0x0
  425632:	mov    ecx,DWORD PTR [edx+0x8]
  425635:	mov    edi,DWORD PTR [edx+0x4]
  425638:	mov    DWORD PTR [ecx+0x4],edi
  42563b:	mov    ecx,DWORD PTR [edx+0x4]
  42563e:	mov    edi,DWORD PTR [edx+0x8]
  425641:	mov    DWORD PTR [ecx+0x8],edi
  425644:	je     0x4256d7
  42564a:	mov    ecx,DWORD PTR [ebp-0xc]
  42564d:	lea    ecx,[ecx+esi*8]
  425650:	mov    edi,DWORD PTR [ecx+0x4]
  425653:	mov    DWORD PTR [edx+0x8],ecx
  425656:	mov    DWORD PTR [edx+0x4],edi
  425659:	mov    DWORD PTR [ecx+0x4],edx
  42565c:	mov    ecx,DWORD PTR [edx+0x4]
  42565f:	mov    DWORD PTR [ecx+0x8],edx
  425662:	mov    ecx,DWORD PTR [edx+0x4]
  425665:	cmp    ecx,DWORD PTR [edx+0x8]
  425668:	jne    0x4256c8
  42566a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42566e:	mov    BYTE PTR [ebp+0xb],cl
  425671:	inc    cl
  425673:	cmp    esi,0x20
  425676:	mov    BYTE PTR [esi+eax*1+0x4],cl
  42567a:	jge    0x42569f
  42567c:	cmp    BYTE PTR [ebp+0xb],0x0
  425680:	jne    0x42568d
  425682:	mov    edi,0x80000000
  425687:	mov    ecx,esi
  425689:	shr    edi,cl
  42568b:	or     DWORD PTR [ebx],edi
  42568d:	mov    ecx,esi
  42568f:	mov    edi,0x80000000
  425694:	shr    edi,cl
  425696:	mov    ecx,DWORD PTR [ebp-0x4]
  425699:	or     DWORD PTR [eax+ecx*4+0x44],edi
  42569d:	jmp    0x4256c8
  42569f:	cmp    BYTE PTR [ebp+0xb],0x0
  4256a3:	jne    0x4256b2
  4256a5:	lea    ecx,[esi-0x20]
  4256a8:	mov    edi,0x80000000
  4256ad:	shr    edi,cl
  4256af:	or     DWORD PTR [ebx+0x4],edi
  4256b2:	mov    ecx,DWORD PTR [ebp-0x4]
  4256b5:	lea    edi,[eax+ecx*4+0xc4]
  4256bc:	lea    ecx,[esi-0x20]
  4256bf:	mov    esi,0x80000000
  4256c4:	shr    esi,cl
  4256c6:	or     DWORD PTR [edi],esi
  4256c8:	mov    ecx,DWORD PTR [ebp-0x8]
  4256cb:	test   ecx,ecx
  4256cd:	je     0x4256da
  4256cf:	mov    DWORD PTR [edx],ecx
  4256d1:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  4256d5:	jmp    0x4256da
  4256d7:	mov    ecx,DWORD PTR [ebp-0x8]
  4256da:	mov    esi,DWORD PTR [ebp-0x10]
  4256dd:	add    edx,ecx
  4256df:	lea    ecx,[esi+0x1]
  4256e2:	mov    DWORD PTR [edx],ecx
  4256e4:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  4256e8:	mov    esi,DWORD PTR [ebp-0xc]
  4256eb:	mov    ecx,DWORD PTR [esi]
  4256ed:	test   ecx,ecx
  4256ef:	lea    edi,[ecx+0x1]
  4256f2:	mov    DWORD PTR [esi],edi
  4256f4:	jne    0x425710
  4256f6:	cmp    ebx,DWORD PTR ds:0x45cef8
  4256fc:	jne    0x425710
  4256fe:	mov    ecx,DWORD PTR [ebp-0x4]
  425701:	cmp    ecx,DWORD PTR ds:0x45cf10
  425707:	jne    0x425710
  425709:	and    DWORD PTR ds:0x45cef8,0x0
  425710:	mov    ecx,DWORD PTR [ebp-0x4]
  425713:	mov    DWORD PTR [eax],ecx
  425715:	lea    eax,[edx+0x4]
  425718:	pop    edi
  425719:	pop    esi
  42571a:	pop    ebx
  42571b:	leave  
  42571c:	ret    
  42571d:	int3   
  42571e:	int3   
  42571f:	int3   
  425720:	push   esi
  425721:	inc    ebx
  425722:	xor    dh,BYTE PTR [eax]
  425724:	pop    eax
  425725:	inc    ebx
  425726:	xor    BYTE PTR [eax],dh
  425728:	push   ebp
  425729:	mov    ebp,esp
  42572b:	sub    esp,0x8
  42572e:	push   ebx
  42572f:	push   esi
  425730:	push   edi
  425731:	push   ebp
  425732:	cld    
  425733:	mov    ebx,DWORD PTR [ebp+0xc]
  425736:	mov    eax,DWORD PTR [ebp+0x8]
  425739:	test   DWORD PTR [eax+0x4],0x6
  425740:	jne    0x4257c8
  425746:	mov    DWORD PTR [ebp-0x8],eax
  425749:	mov    eax,DWORD PTR [ebp+0x10]
  42574c:	mov    DWORD PTR [ebp-0x4],eax
  42574f:	lea    eax,[ebp-0x8]
  425752:	mov    DWORD PTR [ebx-0x4],eax
  425755:	mov    esi,DWORD PTR [ebx+0xc]
  425758:	mov    edi,DWORD PTR [ebx+0x8]
  42575b:	cmp    esi,0xffffffff
  42575e:	je     0x4257c1
  425760:	lea    ecx,[esi+esi*2]
  425763:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  425768:	je     0x4257af
  42576a:	push   esi
  42576b:	push   ebp
  42576c:	lea    ebp,[ebx+0x10]
  42576f:	call   DWORD PTR [edi+ecx*4+0x4]
  425773:	pop    ebp
  425774:	pop    esi
  425775:	mov    ebx,DWORD PTR [ebp+0xc]
  425778:	or     eax,eax
  42577a:	je     0x4257af
  42577c:	js     0x4257ba
  42577e:	mov    edi,DWORD PTR [ebx+0x8]
  425781:	push   ebx
  425782:	call   0x4266b0
  425787:	add    esp,0x4
  42578a:	lea    ebp,[ebx+0x10]
  42578d:	push   esi
  42578e:	push   ebx
  42578f:	call   0x4266f2
  425794:	add    esp,0x8
  425797:	lea    ecx,[esi+esi*2]
  42579a:	push   0x1
  42579c:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  4257a0:	call   0x426786
  4257a5:	mov    eax,DWORD PTR [edi+ecx*4]
  4257a8:	mov    DWORD PTR [ebx+0xc],eax
  4257ab:	call   DWORD PTR [edi+ecx*4+0x8]
  4257af:	mov    edi,DWORD PTR [ebx+0x8]
  4257b2:	lea    ecx,[esi+esi*2]
  4257b5:	mov    esi,DWORD PTR [edi+ecx*4]
  4257b8:	jmp    0x42575b
  4257ba:	mov    eax,0x0
  4257bf:	jmp    0x4257dd
  4257c1:	mov    eax,0x1
  4257c6:	jmp    0x4257dd
  4257c8:	push   ebp
  4257c9:	lea    ebp,[ebx+0x10]
  4257cc:	push   0xffffffff
  4257ce:	push   ebx
  4257cf:	call   0x4266f2
  4257d4:	add    esp,0x8
  4257d7:	pop    ebp
  4257d8:	mov    eax,0x1
  4257dd:	pop    ebp
  4257de:	pop    edi
  4257df:	pop    esi
  4257e0:	pop    ebx
  4257e1:	mov    esp,ebp
  4257e3:	pop    ebp
  4257e4:	ret    
  4257e5:	push   ebp
  4257e6:	mov    ecx,DWORD PTR [esp+0x8]
  4257ea:	mov    ebp,DWORD PTR [ecx]
  4257ec:	mov    eax,DWORD PTR [ecx+0x1c]
  4257ef:	push   eax
  4257f0:	mov    eax,DWORD PTR [ecx+0x18]
  4257f3:	push   eax
  4257f4:	call   0x4266f2
  4257f9:	add    esp,0x8
  4257fc:	pop    ebp
  4257fd:	ret    0x4
  425800:	call   0x42370d
  425805:	add    eax,0x8
  425808:	ret    
  425809:	push   0x14
  42580b:	push   0x428768
  425810:	call   0x423858
  425815:	mov    edi,DWORD PTR [ebp+0x8]
  425818:	xor    ebx,ebx
  42581a:	cmp    edi,ebx
  42581c:	jne    0x42582c
  42581e:	push   DWORD PTR [ebp+0xc]
  425821:	call   0x424582
  425826:	pop    ecx
  425827:	jmp    0x4259b0
  42582c:	mov    esi,DWORD PTR [ebp+0xc]
  42582f:	cmp    esi,ebx
  425831:	jne    0x42583f
  425833:	push   edi
  425834:	call   0x42446a
  425839:	pop    ecx
  42583a:	jmp    0x4259ae
  42583f:	cmp    DWORD PTR ds:0x45d144,0x3
  425846:	jne    0x42597a
  42584c:	mov    DWORD PTR [ebp-0x1c],ebx
  42584f:	cmp    esi,0xffffffe0
  425852:	ja     0x425949
  425858:	push   0x4
  42585a:	call   0x423a1f
  42585f:	pop    ecx
  425860:	mov    DWORD PTR [ebp-0x4],ebx
  425863:	push   edi
  425864:	call   0x424c42
  425869:	pop    ecx
  42586a:	mov    DWORD PTR [ebp-0x20],eax
  42586d:	cmp    eax,ebx
  42586f:	je     0x425919
  425875:	cmp    esi,DWORD PTR ds:0x45cf04
  42587b:	ja     0x4258c9
  42587d:	push   esi
  42587e:	push   edi
  42587f:	push   eax
  425880:	call   0x425142
  425885:	add    esp,0xc
  425888:	test   eax,eax
  42588a:	je     0x425891
  42588c:	mov    DWORD PTR [ebp-0x1c],edi
  42588f:	jmp    0x4258c9
  425891:	push   esi
  425892:	call   0x425421
  425897:	pop    ecx
  425898:	mov    DWORD PTR [ebp-0x1c],eax
  42589b:	cmp    eax,ebx
  42589d:	je     0x4258c9
  42589f:	mov    eax,DWORD PTR [edi-0x4]
  4258a2:	dec    eax
  4258a3:	mov    DWORD PTR [ebp-0x24],eax
  4258a6:	cmp    eax,esi
  4258a8:	jb     0x4258ac
  4258aa:	mov    eax,esi
  4258ac:	push   eax
  4258ad:	push   edi
  4258ae:	push   DWORD PTR [ebp-0x1c]
  4258b1:	call   0x4245a0
  4258b6:	push   edi
  4258b7:	call   0x424c42
  4258bc:	mov    DWORD PTR [ebp-0x20],eax
  4258bf:	push   edi
  4258c0:	push   eax
  4258c1:	call   0x424c6d
  4258c6:	add    esp,0x18
  4258c9:	cmp    DWORD PTR [ebp-0x1c],ebx
  4258cc:	jne    0x425919
  4258ce:	cmp    esi,ebx
  4258d0:	jne    0x4258d8
  4258d2:	xor    esi,esi
  4258d4:	inc    esi
  4258d5:	mov    DWORD PTR [ebp+0xc],esi
  4258d8:	add    esi,0xf
  4258db:	and    esi,0xfffffff0
  4258de:	mov    DWORD PTR [ebp+0xc],esi
  4258e1:	push   esi
  4258e2:	push   ebx
  4258e3:	push   DWORD PTR ds:0x45d140
  4258e9:	call   DWORD PTR ds:0x4280a4
  4258ef:	mov    DWORD PTR [ebp-0x1c],eax
  4258f2:	cmp    eax,ebx
  4258f4:	je     0x425919
  4258f6:	mov    eax,DWORD PTR [edi-0x4]
  4258f9:	dec    eax
  4258fa:	mov    DWORD PTR [ebp-0x24],eax
  4258fd:	cmp    eax,esi
  4258ff:	jb     0x425903
  425901:	mov    eax,esi
  425903:	push   eax
  425904:	push   edi
  425905:	push   DWORD PTR [ebp-0x1c]
  425908:	call   0x4245a0
  42590d:	push   edi
  42590e:	push   DWORD PTR [ebp-0x20]
  425911:	call   0x424c6d
  425916:	add    esp,0x14
  425919:	or     DWORD PTR [ebp-0x4],0xffffffff
  42591d:	call   0x425971
  425922:	cmp    DWORD PTR [ebp-0x20],ebx
  425925:	jne    0x425949
  425927:	cmp    esi,ebx
  425929:	jne    0x42592e
  42592b:	xor    esi,esi
  42592d:	inc    esi
  42592e:	add    esi,0xf
  425931:	and    esi,0xfffffff0
  425934:	mov    DWORD PTR [ebp+0xc],esi
  425937:	push   esi
  425938:	push   edi
  425939:	push   ebx
  42593a:	push   DWORD PTR ds:0x45d140
  425940:	call   DWORD PTR ds:0x4280b0
  425946:	mov    DWORD PTR [ebp-0x1c],eax
  425949:	mov    eax,DWORD PTR [ebp-0x1c]
  42594c:	cmp    eax,ebx
  42594e:	jne    0x4259b0
  425950:	cmp    DWORD PTR ds:0x45cdc8,ebx
  425956:	je     0x4259b0
  425958:	push   esi
  425959:	call   0x426142
  42595e:	pop    ecx
  42595f:	test   eax,eax
  425961:	jne    0x42584c
  425967:	jmp    0x4259ae
  425969:	xor    ebx,ebx
  42596b:	mov    esi,DWORD PTR [ebp+0xc]
  42596e:	mov    edi,DWORD PTR [ebp+0x8]
  425971:	push   0x4
  425973:	call   0x42398b
  425978:	pop    ecx
  425979:	ret    
  42597a:	xor    eax,eax
  42597c:	cmp    esi,0xffffffe0
  42597f:	ja     0x425997
  425981:	cmp    esi,ebx
  425983:	jne    0x425988
  425985:	xor    esi,esi
  425987:	inc    esi
  425988:	push   esi
  425989:	push   edi
  42598a:	push   ebx
  42598b:	push   DWORD PTR ds:0x45d140
  425991:	call   DWORD PTR ds:0x4280b0
  425997:	cmp    eax,ebx
  425999:	jne    0x4259b0
  42599b:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259a1:	je     0x4259b0
  4259a3:	push   esi
  4259a4:	call   0x426142
  4259a9:	pop    ecx
  4259aa:	test   eax,eax
  4259ac:	jne    0x42597a
  4259ae:	xor    eax,eax
  4259b0:	call   0x423893
  4259b5:	ret    
  4259b6:	push   0x10
  4259b8:	push   0x428778
  4259bd:	call   0x423858
  4259c2:	cmp    DWORD PTR ds:0x45d144,0x3
  4259c9:	jne    0x425a05
  4259cb:	push   0x4
  4259cd:	call   0x423a1f
  4259d2:	pop    ecx
  4259d3:	and    DWORD PTR [ebp-0x4],0x0
  4259d7:	mov    esi,DWORD PTR [ebp+0x8]
  4259da:	push   esi
  4259db:	call   0x424c42
  4259e0:	pop    ecx
  4259e1:	mov    DWORD PTR [ebp-0x1c],eax
  4259e4:	test   eax,eax
  4259e6:	je     0x4259f3
  4259e8:	mov    esi,DWORD PTR [esi-0x4]
  4259eb:	sub    esi,0x9
  4259ee:	mov    DWORD PTR [ebp-0x20],esi
  4259f1:	jmp    0x4259f6
  4259f3:	mov    esi,DWORD PTR [ebp-0x20]
  4259f6:	or     DWORD PTR [ebp-0x4],0xffffffff
  4259fa:	call   0x425a23
  4259ff:	cmp    DWORD PTR [ebp-0x1c],0x0
  425a03:	jne    0x425a18
  425a05:	push   DWORD PTR [ebp+0x8]
  425a08:	push   0x0
  425a0a:	push   DWORD PTR ds:0x45d140
  425a10:	call   DWORD PTR ds:0x4280b4
  425a16:	mov    esi,eax
  425a18:	mov    eax,esi
  425a1a:	call   0x423893
  425a1f:	ret    
  425a20:	mov    esi,DWORD PTR [ebp-0x20]
  425a23:	push   0x4
  425a25:	call   0x42398b
  425a2a:	pop    ecx
  425a2b:	ret    
  425a2c:	push   ebp
  425a2d:	mov    ebp,esp
  425a2f:	sub    esp,0x10
  425a32:	push   esi
  425a33:	lea    eax,[ebp-0x8]
  425a36:	push   eax
  425a37:	call   DWORD PTR ds:0x4280c4
  425a3d:	mov    esi,DWORD PTR [ebp-0x4]
  425a40:	xor    esi,DWORD PTR [ebp-0x8]
  425a43:	call   DWORD PTR ds:0x4280c0
  425a49:	xor    esi,eax
  425a4b:	call   DWORD PTR ds:0x42806c
  425a51:	xor    esi,eax
  425a53:	call   DWORD PTR ds:0x4280bc
  425a59:	xor    esi,eax
  425a5b:	lea    eax,[ebp-0x10]
  425a5e:	push   eax
  425a5f:	call   DWORD PTR ds:0x4280b8
  425a65:	mov    eax,DWORD PTR [ebp-0xc]
  425a68:	xor    eax,DWORD PTR [ebp-0x10]
  425a6b:	xor    esi,eax
  425a6d:	mov    DWORD PTR ds:0x45c430,esi
  425a73:	jne    0x425a7f
  425a75:	mov    DWORD PTR ds:0x45c430,0xbb40e64e
  425a7f:	pop    esi
  425a80:	leave  
  425a81:	ret    
  425a82:	push   0x118
  425a87:	push   0x428928
  425a8c:	call   0x423858
  425a91:	mov    eax,ds:0x45c430
  425a96:	xor    eax,DWORD PTR [ebp+0x4]
  425a99:	mov    DWORD PTR [ebp-0x1c],eax
  425a9c:	mov    eax,ds:0x45cd98
  425aa1:	xor    ecx,ecx
  425aa3:	cmp    eax,ecx
  425aa5:	je     0x425ac6
  425aa7:	mov    DWORD PTR [ebp-0x4],ecx
  425aaa:	push   DWORD PTR [ebp+0xc]
  425aad:	push   DWORD PTR [ebp+0x8]
  425ab0:	call   eax
  425ab2:	pop    ecx
  425ab3:	pop    ecx
  425ab4:	or     DWORD PTR [ebp-0x4],0xffffffff
  425ab8:	jmp    0x425bc4
  425abd:	xor    eax,eax
  425abf:	inc    eax
  425ac0:	ret    
  425ac1:	mov    esp,DWORD PTR [ebp-0x18]
  425ac4:	jmp    0x425ab4
  425ac6:	mov    eax,DWORD PTR [ebp+0x8]
  425ac9:	dec    eax
  425aca:	je     0x425adf
  425acc:	mov    edi,0x428904
  425ad1:	mov    DWORD PTR [ebp-0x20],0x428850
  425ad8:	mov    esi,0xd4
  425add:	jmp    0x425af0
  425adf:	mov    edi,0x428830
  425ae4:	mov    DWORD PTR [ebp-0x20],0x428790
  425aeb:	mov    esi,0xb9
  425af0:	mov    BYTE PTR [ebp-0x24],cl
  425af3:	push   0x104
  425af8:	lea    eax,[ebp-0x128]
  425afe:	push   eax
  425aff:	push   ecx
  425b00:	call   DWORD PTR ds:0x42803c
  425b06:	test   eax,eax
  425b08:	jne    0x425b1d
  425b0a:	push   0x428484
  425b0f:	lea    eax,[ebp-0x128]
  425b15:	push   eax
  425b16:	call   0x423c40
  425b1b:	pop    ecx
  425b1c:	pop    ecx
  425b1d:	lea    ebx,[ebp-0x128]
  425b23:	lea    eax,[ebp-0x128]
  425b29:	push   eax
  425b2a:	call   0x423e70
  425b2f:	pop    ecx
  425b30:	add    eax,0xb
  425b33:	cmp    eax,0x3c
  425b36:	jbe    0x425b61
  425b38:	lea    eax,[ebp-0x128]
  425b3e:	push   eax
  425b3f:	call   0x423e70
  425b44:	mov    ebx,eax
  425b46:	lea    eax,[ebp-0x128]
  425b4c:	sub    eax,0x31
  425b4f:	add    ebx,eax
  425b51:	push   0x3
  425b53:	push   0x428480
  425b58:	push   ebx
  425b59:	call   0x423d40
  425b5e:	add    esp,0x10
  425b61:	push   ebx
  425b62:	call   0x423e70
  425b67:	pop    ecx
  425b68:	lea    eax,[eax+esi*1+0xc]
  425b6c:	add    eax,0x3
  425b6f:	and    eax,0xfffffffc
  425b72:	call   0x4238b0
  425b77:	mov    DWORD PTR [ebp-0x18],esp
  425b7a:	mov    esi,esp
  425b7c:	push   edi
  425b7d:	push   esi
  425b7e:	call   0x423c40
  425b83:	mov    edi,0x428460
  425b88:	push   edi
  425b89:	push   esi
  425b8a:	call   0x423c50
  425b8f:	push   0x428784
  425b94:	push   esi
  425b95:	call   0x423c50
  425b9a:	push   ebx
  425b9b:	push   esi
  425b9c:	call   0x423c50
  425ba1:	push   edi
  425ba2:	push   esi
  425ba3:	call   0x423c50
  425ba8:	push   DWORD PTR [ebp-0x20]
  425bab:	push   esi
  425bac:	call   0x423c50
  425bb1:	push   0x12010
  425bb6:	push   0x428438
  425bbb:	push   esi
  425bbc:	call   0x423b42
  425bc1:	add    esp,0x3c
  425bc4:	push   0x3
  425bc6:	call   0x422cc6
  425bcb:	int3   
  425bcc:	push   0x38
  425bce:	push   0x428d48
  425bd3:	call   0x423858
  425bd8:	xor    ebx,ebx
  425bda:	cmp    DWORD PTR ds:0x45cdbc,ebx
  425be0:	jne    0x425c1a
  425be2:	push   ebx
  425be3:	push   ebx
  425be4:	xor    esi,esi
  425be6:	inc    esi
  425be7:	push   esi
  425be8:	push   0x428d44
  425bed:	push   0x100
  425bf2:	push   ebx
  425bf3:	call   DWORD PTR ds:0x4280d0
  425bf9:	test   eax,eax
  425bfb:	je     0x425c05
  425bfd:	mov    DWORD PTR ds:0x45cdbc,esi
  425c03:	jmp    0x425c1a
  425c05:	call   DWORD PTR ds:0x428010
  425c0b:	cmp    eax,0x78
  425c0e:	jne    0x425c1a
  425c10:	mov    DWORD PTR ds:0x45cdbc,0x2
  425c1a:	cmp    DWORD PTR [ebp+0x14],ebx
  425c1d:	jle    0x425c3a
  425c1f:	mov    ecx,DWORD PTR [ebp+0x14]
  425c22:	mov    eax,DWORD PTR [ebp+0x10]
  425c25:	dec    ecx
  425c26:	cmp    BYTE PTR [eax],bl
  425c28:	je     0x425c32
  425c2a:	inc    eax
  425c2b:	cmp    ecx,ebx
  425c2d:	jne    0x425c25
  425c2f:	or     ecx,0xffffffff
  425c32:	or     eax,0xffffffff
  425c35:	sub    eax,ecx
  425c37:	add    DWORD PTR [ebp+0x14],eax
  425c3a:	mov    eax,ds:0x45cdbc
  425c3f:	cmp    eax,0x2
  425c42:	je     0x425e24
  425c48:	cmp    eax,ebx
  425c4a:	je     0x425e24
  425c50:	cmp    eax,0x1
  425c53:	jne    0x425e57
  425c59:	xor    edi,edi
  425c5b:	mov    DWORD PTR [ebp-0x1c],edi
  425c5e:	mov    DWORD PTR [ebp-0x20],ebx
  425c61:	mov    DWORD PTR [ebp-0x24],ebx
  425c64:	cmp    DWORD PTR [ebp+0x20],ebx
  425c67:	jne    0x425c71
  425c69:	mov    eax,ds:0x45cdb4
  425c6e:	mov    DWORD PTR [ebp+0x20],eax
  425c71:	push   ebx
  425c72:	push   ebx
  425c73:	push   DWORD PTR [ebp+0x14]
  425c76:	push   DWORD PTR [ebp+0x10]
  425c79:	xor    eax,eax
  425c7b:	cmp    DWORD PTR [ebp+0x24],ebx
  425c7e:	setne  al
  425c81:	lea    eax,[eax*8+0x1]
  425c88:	push   eax
  425c89:	push   DWORD PTR [ebp+0x20]
  425c8c:	call   DWORD PTR ds:0x4280cc
  425c92:	mov    esi,eax
  425c94:	mov    DWORD PTR [ebp-0x28],esi
  425c97:	cmp    esi,ebx
  425c99:	je     0x425e57
  425c9f:	mov    DWORD PTR [ebp-0x4],0x1
  425ca6:	lea    eax,[esi+esi*1]
  425ca9:	add    eax,0x3
  425cac:	and    eax,0xfffffffc
  425caf:	call   0x4238b0
  425cb4:	mov    DWORD PTR [ebp-0x18],esp
  425cb7:	mov    eax,esp
  425cb9:	mov    DWORD PTR [ebp-0x2c],eax
  425cbc:	or     DWORD PTR [ebp-0x4],0xffffffff
  425cc0:	jmp    0x425cdd
  425cc2:	xor    eax,eax
  425cc4:	inc    eax
  425cc5:	ret    
  425cc6:	mov    esp,DWORD PTR [ebp-0x18]
  425cc9:	call   0x426cf5
  425cce:	xor    ebx,ebx
  425cd0:	mov    DWORD PTR [ebp-0x2c],ebx
  425cd3:	or     DWORD PTR [ebp-0x4],0xffffffff
  425cd7:	mov    edi,DWORD PTR [ebp-0x1c]
  425cda:	mov    esi,DWORD PTR [ebp-0x28]
  425cdd:	cmp    DWORD PTR [ebp-0x2c],ebx
  425ce0:	jne    0x425cfe
  425ce2:	lea    eax,[esi+esi*1]
  425ce5:	push   eax
  425ce6:	call   0x424582
  425ceb:	pop    ecx
  425cec:	mov    DWORD PTR [ebp-0x2c],eax
  425cef:	cmp    eax,ebx
  425cf1:	je     0x425e57
  425cf7:	mov    DWORD PTR [ebp-0x20],0x1
  425cfe:	push   esi
  425cff:	push   DWORD PTR [ebp-0x2c]
  425d02:	push   DWORD PTR [ebp+0x14]
  425d05:	push   DWORD PTR [ebp+0x10]
  425d08:	push   0x1
  425d0a:	push   DWORD PTR [ebp+0x20]
  425d0d:	call   DWORD PTR ds:0x4280cc
  425d13:	test   eax,eax
  425d15:	je     0x425e01
  425d1b:	push   ebx
  425d1c:	push   ebx
  425d1d:	push   esi
  425d1e:	push   DWORD PTR [ebp-0x2c]
  425d21:	push   DWORD PTR [ebp+0xc]
  425d24:	push   DWORD PTR [ebp+0x8]
  425d27:	call   DWORD PTR ds:0x4280d0
  425d2d:	mov    edi,eax
  425d2f:	mov    DWORD PTR [ebp-0x1c],edi
  425d32:	cmp    edi,ebx
  425d34:	je     0x425e01
  425d3a:	test   BYTE PTR [ebp+0xd],0x4
  425d3e:	je     0x425d6d
  425d40:	cmp    DWORD PTR [ebp+0x1c],ebx
  425d43:	je     0x425e01
  425d49:	cmp    edi,DWORD PTR [ebp+0x1c]
  425d4c:	jg     0x425e01
  425d52:	push   DWORD PTR [ebp+0x1c]
  425d55:	push   DWORD PTR [ebp+0x18]
  425d58:	push   esi
  425d59:	push   DWORD PTR [ebp-0x2c]
  425d5c:	push   DWORD PTR [ebp+0xc]
  425d5f:	push   DWORD PTR [ebp+0x8]
  425d62:	call   DWORD PTR ds:0x4280d0
  425d68:	jmp    0x425e01
  425d6d:	mov    DWORD PTR [ebp-0x4],0x2
  425d74:	lea    eax,[edi+edi*1]
  425d77:	add    eax,0x3
  425d7a:	and    eax,0xfffffffc
  425d7d:	call   0x4238b0
  425d82:	mov    DWORD PTR [ebp-0x18],esp
  425d85:	mov    eax,esp
  425d87:	mov    DWORD PTR [ebp-0x30],eax
  425d8a:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d8e:	jmp    0x425dab
  425d90:	xor    eax,eax
  425d92:	inc    eax
  425d93:	ret    
  425d94:	mov    esp,DWORD PTR [ebp-0x18]
  425d97:	call   0x426cf5
  425d9c:	xor    ebx,ebx
  425d9e:	mov    DWORD PTR [ebp-0x30],ebx
  425da1:	or     DWORD PTR [ebp-0x4],0xffffffff
  425da5:	mov    edi,DWORD PTR [ebp-0x1c]
  425da8:	mov    esi,DWORD PTR [ebp-0x28]
  425dab:	cmp    DWORD PTR [ebp-0x30],ebx
  425dae:	jne    0x425dc8
  425db0:	lea    eax,[edi+edi*1]
  425db3:	push   eax
  425db4:	call   0x424582
  425db9:	pop    ecx
  425dba:	mov    DWORD PTR [ebp-0x30],eax
  425dbd:	cmp    eax,ebx
  425dbf:	je     0x425e01
  425dc1:	mov    DWORD PTR [ebp-0x24],0x1
  425dc8:	push   edi
  425dc9:	push   DWORD PTR [ebp-0x30]
  425dcc:	push   esi
  425dcd:	push   DWORD PTR [ebp-0x2c]
  425dd0:	push   DWORD PTR [ebp+0xc]
  425dd3:	push   DWORD PTR [ebp+0x8]
  425dd6:	call   DWORD PTR ds:0x4280d0
  425ddc:	test   eax,eax
  425dde:	je     0x425e01
  425de0:	push   ebx
  425de1:	push   ebx
  425de2:	cmp    DWORD PTR [ebp+0x1c],ebx
  425de5:	jne    0x425deb
  425de7:	push   ebx
  425de8:	push   ebx
  425de9:	jmp    0x425df1
  425deb:	push   DWORD PTR [ebp+0x1c]
  425dee:	push   DWORD PTR [ebp+0x18]
  425df1:	push   edi
  425df2:	push   DWORD PTR [ebp-0x30]
  425df5:	push   ebx
  425df6:	push   DWORD PTR [ebp+0x20]
  425df9:	call   DWORD PTR ds:0x428050
  425dff:	mov    edi,eax
  425e01:	cmp    DWORD PTR [ebp-0x24],ebx
  425e04:	je     0x425e0f
  425e06:	push   DWORD PTR [ebp-0x30]
  425e09:	call   0x42446a
  425e0e:	pop    ecx
  425e0f:	cmp    DWORD PTR [ebp-0x20],ebx
  425e12:	je     0x425e1d
  425e14:	push   DWORD PTR [ebp-0x2c]
  425e17:	call   0x42446a
  425e1c:	pop    ecx
  425e1d:	mov    eax,edi
  425e1f:	jmp    0x425f7f
  425e24:	mov    DWORD PTR [ebp-0x34],ebx
  425e27:	xor    edi,edi
  425e29:	mov    DWORD PTR [ebp-0x38],ebx
  425e2c:	cmp    DWORD PTR [ebp+0x8],ebx
  425e2f:	jne    0x425e39
  425e31:	mov    eax,ds:0x45cda4
  425e36:	mov    DWORD PTR [ebp+0x8],eax
  425e39:	cmp    DWORD PTR [ebp+0x20],ebx
  425e3c:	jne    0x425e46
  425e3e:	mov    eax,ds:0x45cdb4
  425e43:	mov    DWORD PTR [ebp+0x20],eax
  425e46:	push   DWORD PTR [ebp+0x8]
  425e49:	call   0x426add
  425e4e:	pop    ecx
  425e4f:	mov    DWORD PTR [ebp-0x3c],eax
  425e52:	cmp    eax,0xffffffff
  425e55:	jne    0x425e5e
  425e57:	xor    eax,eax
  425e59:	jmp    0x425f7f
  425e5e:	cmp    eax,DWORD PTR [ebp+0x20]
  425e61:	je     0x425f55
  425e67:	push   ebx
  425e68:	push   ebx
  425e69:	lea    ecx,[ebp+0x14]
  425e6c:	push   ecx
  425e6d:	push   DWORD PTR [ebp+0x10]
  425e70:	push   eax
  425e71:	push   DWORD PTR [ebp+0x20]
  425e74:	call   0x426b26
  425e79:	add    esp,0x18
  425e7c:	mov    DWORD PTR [ebp-0x34],eax
  425e7f:	cmp    eax,ebx
  425e81:	je     0x425e57
  425e83:	push   ebx
  425e84:	push   ebx
  425e85:	push   DWORD PTR [ebp+0x14]
  425e88:	push   eax
  425e89:	push   DWORD PTR [ebp+0xc]
  425e8c:	push   DWORD PTR [ebp+0x8]
  425e8f:	call   DWORD PTR ds:0x4280c8
  425e95:	mov    esi,eax
  425e97:	mov    DWORD PTR [ebp-0x40],esi
  425e9a:	cmp    esi,ebx
  425e9c:	je     0x425f44
  425ea2:	mov    DWORD PTR [ebp-0x4],ebx
  425ea5:	add    eax,0x3
  425ea8:	and    eax,0xfffffffc
  425eab:	call   0x4238b0
  425eb0:	mov    DWORD PTR [ebp-0x18],esp
  425eb3:	mov    edi,esp
  425eb5:	mov    DWORD PTR [ebp-0x44],edi
  425eb8:	push   esi
  425eb9:	push   ebx
  425eba:	push   edi
  425ebb:	call   0x426160
  425ec0:	add    esp,0xc
  425ec3:	jmp    0x425ed5
  425ec5:	xor    eax,eax
  425ec7:	inc    eax
  425ec8:	ret    
  425ec9:	mov    esp,DWORD PTR [ebp-0x18]
  425ecc:	call   0x426cf5
  425ed1:	xor    ebx,ebx
  425ed3:	xor    edi,edi
  425ed5:	or     DWORD PTR [ebp-0x4],0xffffffff
  425ed9:	cmp    edi,ebx
  425edb:	jne    0x425f00
  425edd:	push   DWORD PTR [ebp-0x40]
  425ee0:	call   0x424582
  425ee5:	pop    ecx
  425ee6:	mov    edi,eax
  425ee8:	cmp    edi,ebx
  425eea:	je     0x425f1d
  425eec:	push   DWORD PTR [ebp-0x40]
  425eef:	push   ebx
  425ef0:	push   edi
  425ef1:	call   0x426160
  425ef6:	add    esp,0xc
  425ef9:	mov    DWORD PTR [ebp-0x38],0x1
  425f00:	push   DWORD PTR [ebp-0x40]
  425f03:	push   edi
  425f04:	push   DWORD PTR [ebp+0x14]
  425f07:	push   DWORD PTR [ebp-0x34]
  425f0a:	push   DWORD PTR [ebp+0xc]
  425f0d:	push   DWORD PTR [ebp+0x8]
  425f10:	call   DWORD PTR ds:0x4280c8
  425f16:	mov    DWORD PTR [ebp-0x40],eax
  425f19:	cmp    eax,ebx
  425f1b:	jne    0x425f21
  425f1d:	xor    esi,esi
  425f1f:	jmp    0x425f47
  425f21:	push   DWORD PTR [ebp+0x1c]
  425f24:	push   DWORD PTR [ebp+0x18]
  425f27:	lea    eax,[ebp-0x40]
  425f2a:	push   eax
  425f2b:	push   edi
  425f2c:	push   DWORD PTR [ebp+0x20]
  425f2f:	push   DWORD PTR [ebp-0x3c]
  425f32:	call   0x426b26
  425f37:	add    esp,0x18
  425f3a:	mov    esi,eax
  425f3c:	neg    esi
  425f3e:	sbb    esi,esi
  425f40:	neg    esi
  425f42:	jmp    0x425f47
  425f44:	mov    esi,DWORD PTR [ebp-0x48]
  425f47:	cmp    DWORD PTR [ebp-0x38],ebx
  425f4a:	je     0x425f6f
  425f4c:	push   edi
  425f4d:	call   0x42446a
  425f52:	pop    ecx
  425f53:	jmp    0x425f6f
  425f55:	push   DWORD PTR [ebp+0x1c]
  425f58:	push   DWORD PTR [ebp+0x18]
  425f5b:	push   DWORD PTR [ebp+0x14]
  425f5e:	push   DWORD PTR [ebp+0x10]
  425f61:	push   DWORD PTR [ebp+0xc]
  425f64:	push   DWORD PTR [ebp+0x8]
  425f67:	call   DWORD PTR ds:0x4280c8
  425f6d:	mov    esi,eax
  425f6f:	cmp    DWORD PTR [ebp-0x34],ebx
  425f72:	je     0x425f7d
  425f74:	push   DWORD PTR [ebp-0x34]
  425f77:	call   0x42446a
  425f7c:	pop    ecx
  425f7d:	mov    eax,esi
  425f7f:	lea    esp,[ebp-0x54]
  425f82:	call   0x423893
  425f87:	ret    
  425f88:	push   0x1c
  425f8a:	push   0x428d70
  425f8f:	call   0x423858
  425f94:	xor    esi,esi
  425f96:	cmp    DWORD PTR ds:0x45cdc0,esi
  425f9c:	jne    0x425fd3
  425f9e:	lea    eax,[ebp-0x1c]
  425fa1:	push   eax
  425fa2:	xor    edi,edi
  425fa4:	inc    edi
  425fa5:	push   edi
  425fa6:	push   0x428d44
  425fab:	push   edi
  425fac:	call   DWORD PTR ds:0x4280d8
  425fb2:	test   eax,eax
  425fb4:	je     0x425fbe
  425fb6:	mov    DWORD PTR ds:0x45cdc0,edi
  425fbc:	jmp    0x425fd3
  425fbe:	call   DWORD PTR ds:0x428010
  425fc4:	cmp    eax,0x78
  425fc7:	jne    0x425fd3
  425fc9:	mov    DWORD PTR ds:0x45cdc0,0x2
  425fd3:	mov    eax,ds:0x45cdc0
  425fd8:	cmp    eax,0x2
  425fdb:	je     0x4260cb
  425fe1:	cmp    eax,esi
  425fe3:	je     0x4260cb
  425fe9:	cmp    eax,0x1
  425fec:	jne    0x4260f1
  425ff2:	mov    DWORD PTR [ebp-0x20],esi
  425ff5:	mov    DWORD PTR [ebp-0x24],esi
  425ff8:	cmp    DWORD PTR [ebp+0x18],esi
  425ffb:	jne    0x426005
  425ffd:	mov    eax,ds:0x45cdb4
  426002:	mov    DWORD PTR [ebp+0x18],eax
  426005:	push   esi
  426006:	push   esi
  426007:	push   DWORD PTR [ebp+0x10]
  42600a:	push   DWORD PTR [ebp+0xc]
  42600d:	xor    eax,eax
  42600f:	cmp    DWORD PTR [ebp+0x20],esi
  426012:	setne  al
  426015:	lea    eax,[eax*8+0x1]
  42601c:	push   eax
  42601d:	push   DWORD PTR [ebp+0x18]
  426020:	call   DWORD PTR ds:0x4280cc
  426026:	mov    edi,eax
  426028:	mov    DWORD PTR [ebp-0x28],edi
  42602b:	test   edi,edi
  42602d:	je     0x4260f1
  426033:	and    DWORD PTR [ebp-0x4],0x0
  426037:	lea    ebx,[edi+edi*1]
  42603a:	mov    eax,ebx
  42603c:	add    eax,0x3
  42603f:	and    eax,0xfffffffc
  426042:	call   0x4238b0
  426047:	mov    DWORD PTR [ebp-0x18],esp
  42604a:	mov    esi,esp
  42604c:	mov    DWORD PTR [ebp-0x2c],esi
  42604f:	push   ebx
  426050:	push   0x0
  426052:	push   esi
  426053:	call   0x426160
  426058:	add    esp,0xc
  42605b:	or     DWORD PTR [ebp-0x4],0xffffffff
  42605f:	jmp    0x426076
  426061:	xor    eax,eax
  426063:	inc    eax
  426064:	ret    
  426065:	mov    esp,DWORD PTR [ebp-0x18]
  426068:	call   0x426cf5
  42606d:	xor    esi,esi
  42606f:	or     DWORD PTR [ebp-0x4],0xffffffff
  426073:	mov    edi,DWORD PTR [ebp-0x28]
  426076:	test   esi,esi
  426078:	jne    0x426091
  42607a:	push   edi
  42607b:	push   0x2
  42607d:	call   0x424978
  426082:	pop    ecx
  426083:	pop    ecx
  426084:	mov    esi,eax
  426086:	test   esi,esi
  426088:	je     0x4260f1
  42608a:	mov    DWORD PTR [ebp-0x24],0x1
  426091:	push   edi
  426092:	push   esi
  426093:	push   DWORD PTR [ebp+0x10]
  426096:	push   DWORD PTR [ebp+0xc]
  426099:	push   0x1
  42609b:	push   DWORD PTR [ebp+0x18]
  42609e:	call   DWORD PTR ds:0x4280cc
  4260a4:	test   eax,eax
  4260a6:	je     0x4260b9
  4260a8:	push   DWORD PTR [ebp+0x14]
  4260ab:	push   eax
  4260ac:	push   esi
  4260ad:	push   DWORD PTR [ebp+0x8]
  4260b0:	call   DWORD PTR ds:0x4280d8
  4260b6:	mov    DWORD PTR [ebp-0x20],eax
  4260b9:	cmp    DWORD PTR [ebp-0x24],0x0
  4260bd:	je     0x4260c6
  4260bf:	push   esi
  4260c0:	call   0x42446a
  4260c5:	pop    ecx
  4260c6:	mov    eax,DWORD PTR [ebp-0x20]
  4260c9:	jmp    0x426139
  4260cb:	mov    ebx,DWORD PTR [ebp+0x1c]
  4260ce:	cmp    ebx,esi
  4260d0:	jne    0x4260d8
  4260d2:	mov    ebx,DWORD PTR ds:0x45cda4
  4260d8:	mov    edi,DWORD PTR [ebp+0x18]
  4260db:	test   edi,edi
  4260dd:	jne    0x4260e5
  4260df:	mov    edi,DWORD PTR ds:0x45cdb4
  4260e5:	push   ebx
  4260e6:	call   0x426add
  4260eb:	pop    ecx
  4260ec:	cmp    eax,0xffffffff
  4260ef:	jne    0x4260f5
  4260f1:	xor    eax,eax
  4260f3:	jmp    0x426139
  4260f5:	cmp    eax,edi
  4260f7:	je     0x426117
  4260f9:	push   0x0
  4260fb:	push   0x0
  4260fd:	lea    ecx,[ebp+0x10]
  426100:	push   ecx
  426101:	push   DWORD PTR [ebp+0xc]
  426104:	push   eax
  426105:	push   edi
  426106:	call   0x426b26
  42610b:	add    esp,0x18
  42610e:	mov    esi,eax
  426110:	test   esi,esi
  426112:	je     0x4260f1
  426114:	mov    DWORD PTR [ebp+0xc],esi
  426117:	push   DWORD PTR [ebp+0x14]
  42611a:	push   DWORD PTR [ebp+0x10]
  42611d:	push   DWORD PTR [ebp+0xc]
  426120:	push   DWORD PTR [ebp+0x8]
  426123:	push   ebx
  426124:	call   DWORD PTR ds:0x4280d4
  42612a:	mov    edi,eax
  42612c:	test   esi,esi
  42612e:	je     0x426137
  426130:	push   esi
  426131:	call   0x42446a
  426136:	pop    ecx
  426137:	mov    eax,edi
  426139:	lea    esp,[ebp-0x38]
  42613c:	call   0x423893
  426141:	ret    
  426142:	mov    eax,ds:0x45cdc4
  426147:	test   eax,eax
  426149:	je     0x42615a
  42614b:	push   DWORD PTR [esp+0x4]
  42614f:	call   eax
  426151:	test   eax,eax
  426153:	pop    ecx
  426154:	je     0x42615a
  426156:	xor    eax,eax
  426158:	inc    eax
  426159:	ret    
  42615a:	xor    eax,eax
  42615c:	ret    
  42615d:	int3   
  42615e:	int3   
  42615f:	int3   
  426160:	mov    edx,DWORD PTR [esp+0xc]
  426164:	mov    ecx,DWORD PTR [esp+0x4]
  426168:	test   edx,edx
  42616a:	je     0x4261bb
  42616c:	xor    eax,eax
  42616e:	mov    al,BYTE PTR [esp+0x8]
  426172:	push   edi
  426173:	mov    edi,ecx
  426175:	cmp    edx,0x4
  426178:	jb     0x4261ab
  42617a:	neg    ecx
  42617c:	and    ecx,0x3
  42617f:	je     0x42618d
  426181:	sub    edx,ecx
  426183:	mov    BYTE PTR [edi],al
  426185:	add    edi,0x1
  426188:	sub    ecx,0x1
  42618b:	jne    0x426183
  42618d:	mov    ecx,eax
  42618f:	shl    eax,0x8
  426192:	add    eax,ecx
  426194:	mov    ecx,eax
  426196:	shl    eax,0x10
  426199:	add    eax,ecx
  42619b:	mov    ecx,edx
  42619d:	and    edx,0x3
  4261a0:	shr    ecx,0x2
  4261a3:	je     0x4261ab
  4261a5:	rep stos DWORD PTR es:[edi],eax
  4261a7:	test   edx,edx
  4261a9:	je     0x4261b5
  4261ab:	mov    BYTE PTR [edi],al
  4261ad:	add    edi,0x1
  4261b0:	sub    edx,0x1
  4261b3:	jne    0x4261ab
  4261b5:	mov    eax,DWORD PTR [esp+0x8]
  4261b9:	pop    edi
  4261ba:	ret    
  4261bb:	mov    eax,DWORD PTR [esp+0x4]
  4261bf:	ret    
  4261c0:	push   esi
  4261c1:	mov    esi,DWORD PTR [esp+0x8]
  4261c5:	test   esi,esi
  4261c7:	je     0x42634e
  4261cd:	push   DWORD PTR [esi+0x4]
  4261d0:	call   0x42446a
  4261d5:	push   DWORD PTR [esi+0x8]
  4261d8:	call   0x42446a
  4261dd:	push   DWORD PTR [esi+0xc]
  4261e0:	call   0x42446a
  4261e5:	push   DWORD PTR [esi+0x10]
  4261e8:	call   0x42446a
  4261ed:	push   DWORD PTR [esi+0x14]
  4261f0:	call   0x42446a
  4261f5:	push   DWORD PTR [esi+0x18]
  4261f8:	call   0x42446a
  4261fd:	push   DWORD PTR [esi]
  4261ff:	call   0x42446a
  426204:	push   DWORD PTR [esi+0x20]
  426207:	call   0x42446a
  42620c:	push   DWORD PTR [esi+0x24]
  42620f:	call   0x42446a
  426214:	push   DWORD PTR [esi+0x28]
  426217:	call   0x42446a
  42621c:	push   DWORD PTR [esi+0x2c]
  42621f:	call   0x42446a
  426224:	push   DWORD PTR [esi+0x30]
  426227:	call   0x42446a
  42622c:	push   DWORD PTR [esi+0x34]
  42622f:	call   0x42446a
  426234:	push   DWORD PTR [esi+0x1c]
  426237:	call   0x42446a
  42623c:	push   DWORD PTR [esi+0x38]
  42623f:	call   0x42446a
  426244:	push   DWORD PTR [esi+0x3c]
  426247:	call   0x42446a
  42624c:	add    esp,0x40
  42624f:	push   DWORD PTR [esi+0x40]
  426252:	call   0x42446a
  426257:	push   DWORD PTR [esi+0x44]
  42625a:	call   0x42446a
  42625f:	push   DWORD PTR [esi+0x48]
  426262:	call   0x42446a
  426267:	push   DWORD PTR [esi+0x4c]
  42626a:	call   0x42446a
  42626f:	push   DWORD PTR [esi+0x50]
  426272:	call   0x42446a
  426277:	push   DWORD PTR [esi+0x54]
  42627a:	call   0x42446a
  42627f:	push   DWORD PTR [esi+0x58]
  426282:	call   0x42446a
  426287:	push   DWORD PTR [esi+0x5c]
  42628a:	call   0x42446a
  42628f:	push   DWORD PTR [esi+0x60]
  426292:	call   0x42446a
  426297:	push   DWORD PTR [esi+0x64]
  42629a:	call   0x42446a
  42629f:	push   DWORD PTR [esi+0x68]
  4262a2:	call   0x42446a
  4262a7:	push   DWORD PTR [esi+0x6c]
  4262aa:	call   0x42446a
  4262af:	push   DWORD PTR [esi+0x70]
  4262b2:	call   0x42446a
  4262b7:	push   DWORD PTR [esi+0x74]
  4262ba:	call   0x42446a
  4262bf:	push   DWORD PTR [esi+0x78]
  4262c2:	call   0x42446a
  4262c7:	push   DWORD PTR [esi+0x7c]
  4262ca:	call   0x42446a
  4262cf:	add    esp,0x40
  4262d2:	push   DWORD PTR [esi+0x80]
  4262d8:	call   0x42446a
  4262dd:	push   DWORD PTR [esi+0x84]
  4262e3:	call   0x42446a
  4262e8:	push   DWORD PTR [esi+0x88]
  4262ee:	call   0x42446a
  4262f3:	push   DWORD PTR [esi+0x8c]
  4262f9:	call   0x42446a
  4262fe:	push   DWORD PTR [esi+0x90]
  426304:	call   0x42446a
  426309:	push   DWORD PTR [esi+0x94]
  42630f:	call   0x42446a
  426314:	push   DWORD PTR [esi+0x98]
  42631a:	call   0x42446a
  42631f:	push   DWORD PTR [esi+0x9c]
  426325:	call   0x42446a
  42632a:	push   DWORD PTR [esi+0xa0]
  426330:	call   0x42446a
  426335:	push   DWORD PTR [esi+0xa4]
  42633b:	call   0x42446a
  426340:	push   DWORD PTR [esi+0xa8]
  426346:	call   0x42446a
  42634b:	add    esp,0x2c
  42634e:	pop    esi
  42634f:	ret    
  426350:	push   esi
  426351:	mov    esi,DWORD PTR [esp+0x8]
  426355:	test   esi,esi
  426357:	je     0x4263ad
  426359:	mov    eax,DWORD PTR [esi]
  42635b:	mov    ecx,DWORD PTR ds:0x45c934
  426361:	cmp    eax,DWORD PTR [ecx]
  426363:	je     0x426374
  426365:	cmp    eax,DWORD PTR ds:0x45c904
  42636b:	je     0x426374
  42636d:	push   eax
  42636e:	call   0x42446a
  426373:	pop    ecx
  426374:	mov    eax,DWORD PTR [esi+0x4]
  426377:	mov    ecx,DWORD PTR ds:0x45c934
  42637d:	cmp    eax,DWORD PTR [ecx+0x4]
  426380:	je     0x426391
  426382:	cmp    eax,DWORD PTR ds:0x45c908
  426388:	je     0x426391
  42638a:	push   eax
  42638b:	call   0x42446a
  426390:	pop    ecx
  426391:	mov    esi,DWORD PTR [esi+0x8]
  426394:	mov    eax,ds:0x45c934
  426399:	cmp    esi,DWORD PTR [eax+0x8]
  42639c:	je     0x4263ad
  42639e:	cmp    esi,DWORD PTR ds:0x45c90c
  4263a4:	je     0x4263ad
  4263a6:	push   esi
  4263a7:	call   0x42446a
  4263ac:	pop    ecx
  4263ad:	pop    esi
  4263ae:	ret    
  4263af:	push   esi
  4263b0:	mov    esi,DWORD PTR [esp+0x8]
  4263b4:	test   esi,esi
  4263b6:	je     0x426486
  4263bc:	mov    eax,DWORD PTR [esi+0xc]
  4263bf:	mov    ecx,DWORD PTR ds:0x45c934
  4263c5:	cmp    eax,DWORD PTR [ecx+0xc]
  4263c8:	je     0x4263d9
  4263ca:	cmp    eax,DWORD PTR ds:0x45c910
  4263d0:	je     0x4263d9
  4263d2:	push   eax
  4263d3:	call   0x42446a
  4263d8:	pop    ecx
  4263d9:	mov    eax,DWORD PTR [esi+0x10]
  4263dc:	mov    ecx,DWORD PTR ds:0x45c934
  4263e2:	cmp    eax,DWORD PTR [ecx+0x10]
  4263e5:	je     0x4263f6
  4263e7:	cmp    eax,DWORD PTR ds:0x45c914
  4263ed:	je     0x4263f6
  4263ef:	push   eax
  4263f0:	call   0x42446a
  4263f5:	pop    ecx
  4263f6:	mov    eax,DWORD PTR [esi+0x14]
  4263f9:	mov    ecx,DWORD PTR ds:0x45c934
  4263ff:	cmp    eax,DWORD PTR [ecx+0x14]
  426402:	je     0x426413
  426404:	cmp    eax,DWORD PTR ds:0x45c918
  42640a:	je     0x426413
  42640c:	push   eax
  42640d:	call   0x42446a
  426412:	pop    ecx
  426413:	mov    eax,DWORD PTR [esi+0x18]
  426416:	mov    ecx,DWORD PTR ds:0x45c934
  42641c:	cmp    eax,DWORD PTR [ecx+0x18]
  42641f:	je     0x426430
  426421:	cmp    eax,DWORD PTR ds:0x45c91c
  426427:	je     0x426430
  426429:	push   eax
  42642a:	call   0x42446a
  42642f:	pop    ecx
  426430:	mov    eax,DWORD PTR [esi+0x1c]
  426433:	mov    ecx,DWORD PTR ds:0x45c934
  426439:	cmp    eax,DWORD PTR [ecx+0x1c]
  42643c:	je     0x42644d
  42643e:	cmp    eax,DWORD PTR ds:0x45c920
  426444:	je     0x42644d
  426446:	push   eax
  426447:	call   0x42446a
  42644c:	pop    ecx
  42644d:	mov    eax,DWORD PTR [esi+0x20]
  426450:	mov    ecx,DWORD PTR ds:0x45c934
  426456:	cmp    eax,DWORD PTR [ecx+0x20]
  426459:	je     0x42646a
  42645b:	cmp    eax,DWORD PTR ds:0x45c924
  426461:	je     0x42646a
  426463:	push   eax
  426464:	call   0x42446a
  426469:	pop    ecx
  42646a:	mov    esi,DWORD PTR [esi+0x24]
  42646d:	mov    eax,ds:0x45c934
  426472:	cmp    esi,DWORD PTR [eax+0x24]
  426475:	je     0x426486
  426477:	cmp    esi,DWORD PTR ds:0x45c928
  42647d:	je     0x426486
  42647f:	push   esi
  426480:	call   0x42446a
  426485:	pop    ecx
  426486:	pop    esi
  426487:	ret    
  426488:	int3   
  426489:	int3   
  42648a:	int3   
  42648b:	int3   
  42648c:	int3   
  42648d:	int3   
  42648e:	int3   
  42648f:	int3   
  426490:	push   ebp
  426491:	mov    ebp,esp
  426493:	push   esi
  426494:	xor    eax,eax
  426496:	push   eax
  426497:	push   eax
  426498:	push   eax
  426499:	push   eax
  42649a:	push   eax
  42649b:	push   eax
  42649c:	push   eax
  42649d:	push   eax
  42649e:	mov    edx,DWORD PTR [ebp+0xc]
  4264a1:	lea    ecx,[ecx+0x0]
  4264a4:	mov    al,BYTE PTR [edx]
  4264a6:	or     al,al
  4264a8:	je     0x4264b3
  4264aa:	add    edx,0x1
  4264ad:	bts    DWORD PTR [esp],eax
  4264b1:	jmp    0x4264a4
  4264b3:	mov    esi,DWORD PTR [ebp+0x8]
  4264b6:	or     ecx,0xffffffff
  4264b9:	lea    ecx,[ecx+0x0]
  4264bc:	add    ecx,0x1
  4264bf:	mov    al,BYTE PTR [esi]
  4264c1:	or     al,al
  4264c3:	je     0x4264ce
  4264c5:	add    esi,0x1
  4264c8:	bt     DWORD PTR [esp],eax
  4264cc:	jae    0x4264bc
  4264ce:	mov    eax,ecx
  4264d0:	add    esp,0x20
  4264d3:	pop    esi
  4264d4:	leave  
  4264d5:	ret    
  4264d6:	int3   
  4264d7:	int3   
  4264d8:	int3   
  4264d9:	int3   
  4264da:	int3   
  4264db:	int3   
  4264dc:	int3   
  4264dd:	int3   
  4264de:	int3   
  4264df:	int3   
  4264e0:	mov    edx,DWORD PTR [esp+0x4]
  4264e4:	mov    ecx,DWORD PTR [esp+0x8]
  4264e8:	test   edx,0x3
  4264ee:	jne    0x42652c
  4264f0:	mov    eax,DWORD PTR [edx]
  4264f2:	cmp    al,BYTE PTR [ecx]
  4264f4:	jne    0x426524
  4264f6:	or     al,al
  4264f8:	je     0x426520
  4264fa:	cmp    ah,BYTE PTR [ecx+0x1]
  4264fd:	jne    0x426524
  4264ff:	or     ah,ah
  426501:	je     0x426520
  426503:	shr    eax,0x10
  426506:	cmp    al,BYTE PTR [ecx+0x2]
  426509:	jne    0x426524
  42650b:	or     al,al
  42650d:	je     0x426520
  42650f:	cmp    ah,BYTE PTR [ecx+0x3]
  426512:	jne    0x426524
  426514:	add    ecx,0x4
  426517:	add    edx,0x4
  42651a:	or     ah,ah
  42651c:	jne    0x4264f0
  42651e:	mov    edi,edi
  426520:	xor    eax,eax
  426522:	ret    
  426523:	nop
  426524:	sbb    eax,eax
  426526:	shl    eax,1
  426528:	add    eax,0x1
  42652b:	ret    
  42652c:	test   edx,0x1
  426532:	je     0x42654c
  426534:	mov    al,BYTE PTR [edx]
  426536:	add    edx,0x1
  426539:	cmp    al,BYTE PTR [ecx]
  42653b:	jne    0x426524
  42653d:	add    ecx,0x1
  426540:	or     al,al
  426542:	je     0x426520
  426544:	test   edx,0x2
  42654a:	je     0x4264f0
  42654c:	mov    ax,WORD PTR [edx]
  42654f:	add    edx,0x2
  426552:	cmp    al,BYTE PTR [ecx]
  426554:	jne    0x426524
  426556:	or     al,al
  426558:	je     0x426520
  42655a:	cmp    ah,BYTE PTR [ecx+0x1]
  42655d:	jne    0x426524
  42655f:	or     ah,ah
  426561:	je     0x426520
  426563:	add    ecx,0x2
  426566:	jmp    0x4264f0
  426568:	int3   
  426569:	int3   
  42656a:	int3   
  42656b:	int3   
  42656c:	int3   
  42656d:	int3   
  42656e:	int3   
  42656f:	int3   
  426570:	mov    eax,DWORD PTR [esp+0xc]
  426574:	test   eax,eax
  426576:	je     0x4265c2
  426578:	mov    edx,DWORD PTR [esp+0x4]
  42657c:	push   esi
  42657d:	push   edi
  42657e:	mov    esi,edx
  426580:	mov    edi,DWORD PTR [esp+0x10]
  426584:	or     edx,edi
  426586:	and    edx,0x3
  426589:	je     0x4265c3
  42658b:	test   eax,0x1
  426590:	je     0x4265a3
  426592:	mov    cl,BYTE PTR [esi]
  426594:	cmp    cl,BYTE PTR [edi]
  426596:	jne    0x4265f0
  426598:	add    esi,0x1
  42659b:	add    edi,0x1
  42659e:	sub    eax,0x1
  4265a1:	je     0x4265c0
  4265a3:	mov    cl,BYTE PTR [esi]
  4265a5:	mov    dl,BYTE PTR [edi]
  4265a7:	cmp    cl,dl
  4265a9:	jne    0x4265f0
  4265ab:	mov    cl,BYTE PTR [esi+0x1]
  4265ae:	mov    dl,BYTE PTR [edi+0x1]
  4265b1:	cmp    cl,dl
  4265b3:	jne    0x4265f0
  4265b5:	add    edi,0x2
  4265b8:	add    esi,0x2
  4265bb:	sub    eax,0x2
  4265be:	jne    0x4265a3
  4265c0:	pop    edi
  4265c1:	pop    esi
  4265c2:	ret    
  4265c3:	mov    ecx,eax
  4265c5:	and    eax,0x3
  4265c8:	shr    ecx,0x2
  4265cb:	je     0x4265f8
  4265cd:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4265cf:	je     0x4265f8
  4265d1:	mov    ecx,DWORD PTR [esi-0x4]
  4265d4:	mov    edx,DWORD PTR [edi-0x4]
  4265d7:	cmp    cl,dl
  4265d9:	jne    0x4265eb
  4265db:	cmp    ch,dh
  4265dd:	jne    0x4265eb
  4265df:	shr    ecx,0x10
  4265e2:	shr    edx,0x10
  4265e5:	cmp    cl,dl
  4265e7:	jne    0x4265eb
  4265e9:	cmp    ch,dh
  4265eb:	mov    eax,0x0
  4265f0:	sbb    eax,eax
  4265f2:	pop    edi
  4265f3:	sbb    eax,0xffffffff
  4265f6:	pop    esi
  4265f7:	ret    
  4265f8:	test   eax,eax
  4265fa:	je     0x4265c0
  4265fc:	mov    edx,DWORD PTR [esi]
  4265fe:	mov    ecx,DWORD PTR [edi]
  426600:	cmp    dl,cl
  426602:	jne    0x4265eb
  426604:	sub    eax,0x1
  426607:	je     0x426625
  426609:	cmp    dh,ch
  42660b:	jne    0x4265eb
  42660d:	sub    eax,0x1
  426610:	je     0x426625
  426612:	and    ecx,0xff0000
  426618:	and    edx,0xff0000
  42661e:	cmp    edx,ecx
  426620:	jne    0x4265eb
  426622:	sub    eax,0x1
  426625:	pop    edi
  426626:	pop    esi
  426627:	ret    
  426628:	int3   
  426629:	int3   
  42662a:	int3   
  42662b:	int3   
  42662c:	int3   
  42662d:	int3   
  42662e:	int3   
  42662f:	int3   
  426630:	push   ebp
  426631:	mov    ebp,esp
  426633:	push   edi
  426634:	push   esi
  426635:	push   ebx
  426636:	mov    ecx,DWORD PTR [ebp+0x10]
  426639:	jecxz  0x426662
  42663b:	mov    ebx,ecx
  42663d:	mov    edi,DWORD PTR [ebp+0x8]
  426640:	mov    esi,edi
  426642:	xor    eax,eax
  426644:	repnz scas al,BYTE PTR es:[edi]
  426646:	neg    ecx
  426648:	add    ecx,ebx
  42664a:	mov    edi,esi
  42664c:	mov    esi,DWORD PTR [ebp+0xc]
  42664f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426651:	mov    al,BYTE PTR [esi-0x1]
  426654:	xor    ecx,ecx
  426656:	cmp    al,BYTE PTR [edi-0x1]
  426659:	ja     0x426660
  42665b:	je     0x426662
  42665d:	sub    ecx,0x2
  426660:	not    ecx
  426662:	mov    eax,ecx
  426664:	pop    ebx
  426665:	pop    esi
  426666:	pop    edi
  426667:	leave  
  426668:	ret    
  426669:	int3   
  42666a:	int3   
  42666b:	int3   
  42666c:	int3   
  42666d:	int3   
  42666e:	int3   
  42666f:	int3   
  426670:	push   ebp
  426671:	mov    ebp,esp
  426673:	push   esi
  426674:	xor    eax,eax
  426676:	push   eax
  426677:	push   eax
  426678:	push   eax
  426679:	push   eax
  42667a:	push   eax
  42667b:	push   eax
  42667c:	push   eax
  42667d:	push   eax
  42667e:	mov    edx,DWORD PTR [ebp+0xc]
  426681:	lea    ecx,[ecx+0x0]
  426684:	mov    al,BYTE PTR [edx]
  426686:	or     al,al
  426688:	je     0x426693
  42668a:	add    edx,0x1
  42668d:	bts    DWORD PTR [esp],eax
  426691:	jmp    0x426684
  426693:	mov    esi,DWORD PTR [ebp+0x8]
  426696:	mov    edi,edi
  426698:	mov    al,BYTE PTR [esi]
  42669a:	or     al,al
  42669c:	je     0x4266aa
  42669e:	add    esi,0x1
  4266a1:	bt     DWORD PTR [esp],eax
  4266a5:	jae    0x426698
  4266a7:	lea    eax,[esi-0x1]
  4266aa:	add    esp,0x20
  4266ad:	pop    esi
  4266ae:	leave  
  4266af:	ret    
  4266b0:	push   ebp
  4266b1:	mov    ebp,esp
  4266b3:	push   ebx
  4266b4:	push   esi
  4266b5:	push   edi
  4266b6:	push   ebp
  4266b7:	push   0x0
  4266b9:	push   0x0
  4266bb:	push   0x4266c8
  4266c0:	push   DWORD PTR [ebp+0x8]
  4266c3:	call   0x42713e
  4266c8:	pop    ebp
  4266c9:	pop    edi
  4266ca:	pop    esi
  4266cb:	pop    ebx
  4266cc:	mov    esp,ebp
  4266ce:	pop    ebp
  4266cf:	ret    
  4266d0:	mov    ecx,DWORD PTR [esp+0x4]
  4266d4:	test   DWORD PTR [ecx+0x4],0x6
  4266db:	mov    eax,0x1
  4266e0:	je     0x4266f1
  4266e2:	mov    eax,DWORD PTR [esp+0x8]
  4266e6:	mov    edx,DWORD PTR [esp+0x10]
  4266ea:	mov    DWORD PTR [edx],eax
  4266ec:	mov    eax,0x3
  4266f1:	ret    
  4266f2:	push   ebx
  4266f3:	push   esi
  4266f4:	push   edi
  4266f5:	mov    eax,DWORD PTR [esp+0x10]
  4266f9:	push   eax
  4266fa:	push   0xfffffffe
  4266fc:	push   0x4266d0
  426701:	push   DWORD PTR fs:0x0
  426708:	mov    DWORD PTR fs:0x0,esp
  42670f:	mov    eax,DWORD PTR [esp+0x20]
  426713:	mov    ebx,DWORD PTR [eax+0x8]
  426716:	mov    esi,DWORD PTR [eax+0xc]
  426719:	cmp    esi,0xffffffff
  42671c:	je     0x42674c
  42671e:	cmp    esi,DWORD PTR [esp+0x24]
  426722:	je     0x42674c
  426724:	lea    esi,[esi+esi*2]
  426727:	mov    ecx,DWORD PTR [ebx+esi*4]
  42672a:	mov    DWORD PTR [esp+0x8],ecx
  42672e:	mov    DWORD PTR [eax+0xc],ecx
  426731:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426736:	jne    0x42674a
  426738:	push   0x101
  42673d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426741:	call   0x426786
  426746:	call   DWORD PTR [ebx+esi*4+0x8]
  42674a:	jmp    0x42670f
  42674c:	pop    DWORD PTR fs:0x0
  426753:	add    esp,0xc
  426756:	pop    edi
  426757:	pop    esi
  426758:	pop    ebx
  426759:	ret    
  42675a:	xor    eax,eax
  42675c:	mov    ecx,DWORD PTR fs:0x0
  426763:	cmp    DWORD PTR [ecx+0x4],0x4266d0
  42676a:	jne    0x42677c
  42676c:	mov    edx,DWORD PTR [ecx+0xc]
  42676f:	mov    edx,DWORD PTR [edx+0xc]
  426772:	cmp    DWORD PTR [ecx+0x8],edx
  426775:	jne    0x42677c
  426777:	mov    eax,0x1
  42677c:	ret    
  42677d:	push   ebx
  42677e:	push   ecx
  42677f:	mov    ebx,0x45c94c
  426784:	jmp    0x426790
  426786:	push   ebx
  426787:	push   ecx
  426788:	mov    ebx,0x45c94c
  42678d:	mov    ecx,DWORD PTR [ebp+0x8]
  426790:	mov    DWORD PTR [ebx+0x8],ecx
  426793:	mov    DWORD PTR [ebx+0x4],eax
  426796:	mov    DWORD PTR [ebx+0xc],ebp
  426799:	pop    ecx
  42679a:	pop    ebx
  42679b:	ret    0x4
  42679e:	int3   
  42679f:	int3   
  4267a0:	push   ebp
  4267a1:	mov    ebp,esp
  4267a3:	push   edi
  4267a4:	push   esi
  4267a5:	mov    esi,DWORD PTR [ebp+0xc]
  4267a8:	mov    ecx,DWORD PTR [ebp+0x10]
  4267ab:	mov    edi,DWORD PTR [ebp+0x8]
  4267ae:	mov    eax,ecx
  4267b0:	mov    edx,ecx
  4267b2:	add    eax,esi
  4267b4:	cmp    edi,esi
  4267b6:	jbe    0x4267c0
  4267b8:	cmp    edi,eax
  4267ba:	jb     0x42693c
  4267c0:	test   edi,0x3
  4267c6:	jne    0x4267dc
  4267c8:	shr    ecx,0x2
  4267cb:	and    edx,0x3
  4267ce:	cmp    ecx,0x8
  4267d1:	jb     0x4267fc
  4267d3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4267d5:	jmp    DWORD PTR [edx*4+0x4268ec]
  4267dc:	mov    eax,edi
  4267de:	mov    edx,0x3
  4267e3:	sub    ecx,0x4
  4267e6:	jb     0x4267f4
  4267e8:	and    eax,0x3
  4267eb:	add    ecx,eax
  4267ed:	jmp    DWORD PTR [eax*4+0x426800]
  4267f4:	jmp    DWORD PTR [ecx*4+0x4268fc]
  4267fb:	nop
  4267fc:	jmp    DWORD PTR [ecx*4+0x426880]
  426803:	nop
  426804:	adc    BYTE PTR [eax+0x42],ch
  426807:	add    BYTE PTR [eax+ebp*2],bh
  42680a:	inc    edx
  42680b:	add    BYTE PTR [eax+0x68],ah
  42680e:	inc    edx
  42680f:	add    BYTE PTR [ebx],ah
  426811:	ror    DWORD PTR [edx-0x75f877fa],1
  426817:	inc    esi
  426818:	add    DWORD PTR [eax+0x468a0147],ecx
  42681e:	add    al,cl
  426820:	jmp    0x289f027
  426825:	add    esi,0x3
  426828:	add    edi,0x3
  42682b:	cmp    ecx,0x8
  42682e:	jb     0x4267fc
  426830:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426832:	jmp    DWORD PTR [edx*4+0x4268ec]
  426839:	lea    ecx,[ecx+0x0]
  42683c:	and    edx,ecx
  42683e:	mov    al,BYTE PTR [esi]
  426840:	mov    BYTE PTR [edi],al
  426842:	mov    al,BYTE PTR [esi+0x1]
  426845:	shr    ecx,0x2
  426848:	mov    BYTE PTR [edi+0x1],al
  42684b:	add    esi,0x2
  42684e:	add    edi,0x2
  426851:	cmp    ecx,0x8
  426854:	jb     0x4267fc
  426856:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426858:	jmp    DWORD PTR [edx*4+0x4268ec]
  42685f:	nop
  426860:	and    edx,ecx
  426862:	mov    al,BYTE PTR [esi]
  426864:	mov    BYTE PTR [edi],al
  426866:	add    esi,0x1
  426869:	shr    ecx,0x2
  42686c:	add    edi,0x1
  42686f:	cmp    ecx,0x8
  426872:	jb     0x4267fc
  426874:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426876:	jmp    DWORD PTR [edx*4+0x4268ec]
  42687d:	lea    ecx,[ecx+0x0]
  426880:	jecxz  0x4268ea
  426882:	inc    edx
  426883:	add    al,dl
  426885:	push   0x68c80042
  42688a:	inc    edx
  42688b:	add    al,al
  42688d:	push   0x68b80042
  426892:	inc    edx
  426893:	add    BYTE PTR [eax-0x57ffbd98],dh
  426899:	push   0x68a00042
  42689e:	inc    edx
  42689f:	add    BYTE PTR [ebx-0x761b71bc],cl
  4268a5:	inc    esp
  4268a6:	(bad)  
  4268a7:	in     al,0x8b
  4268a9:	inc    esp
  4268aa:	mov    gs,eax
  4268ac:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4268b0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4268b4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4268b8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4268bc:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4268c0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4268c4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4268c8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4268cc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4268d0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4268d4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4268d8:	lea    eax,[ecx*4+0x0]
  4268df:	add    esi,eax
  4268e1:	add    edi,eax
  4268e3:	jmp    DWORD PTR [edx*4+0x4268ec]
  4268ea:	mov    edi,edi
  4268ec:	cld    
  4268ed:	push   0x69040042
  4268f2:	inc    edx
  4268f3:	add    BYTE PTR [eax],dl
  4268f5:	imul   eax,DWORD PTR [edx+0x0],0x426924
  4268fc:	mov    eax,DWORD PTR [ebp+0x8]
  4268ff:	pop    esi
  426900:	pop    edi
  426901:	leave  
  426902:	ret    
  426903:	nop
  426904:	mov    al,BYTE PTR [esi]
  426906:	mov    BYTE PTR [edi],al
  426908:	mov    eax,DWORD PTR [ebp+0x8]
  42690b:	pop    esi
  42690c:	pop    edi
  42690d:	leave  
  42690e:	ret    
  42690f:	nop
  426910:	mov    al,BYTE PTR [esi]
  426912:	mov    BYTE PTR [edi],al
  426914:	mov    al,BYTE PTR [esi+0x1]
  426917:	mov    BYTE PTR [edi+0x1],al
  42691a:	mov    eax,DWORD PTR [ebp+0x8]
  42691d:	pop    esi
  42691e:	pop    edi
  42691f:	leave  
  426920:	ret    
  426921:	lea    ecx,[ecx+0x0]
  426924:	mov    al,BYTE PTR [esi]
  426926:	mov    BYTE PTR [edi],al
  426928:	mov    al,BYTE PTR [esi+0x1]
  42692b:	mov    BYTE PTR [edi+0x1],al
  42692e:	mov    al,BYTE PTR [esi+0x2]
  426931:	mov    BYTE PTR [edi+0x2],al
  426934:	mov    eax,DWORD PTR [ebp+0x8]
  426937:	pop    esi
  426938:	pop    edi
  426939:	leave  
  42693a:	ret    
  42693b:	nop
  42693c:	lea    esi,[ecx+esi*1-0x4]
  426940:	lea    edi,[ecx+edi*1-0x4]
  426944:	test   edi,0x3
  42694a:	jne    0x426970
  42694c:	shr    ecx,0x2
  42694f:	and    edx,0x3
  426952:	cmp    ecx,0x8
  426955:	jb     0x426964
  426957:	std    
  426958:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42695a:	cld    
  42695b:	jmp    DWORD PTR [edx*4+0x426a88]
  426962:	mov    edi,edi
  426964:	neg    ecx
  426966:	jmp    DWORD PTR [ecx*4+0x426a38]
  42696d:	lea    ecx,[ecx+0x0]
  426970:	mov    eax,edi
  426972:	mov    edx,0x3
  426977:	cmp    ecx,0x4
  42697a:	jb     0x426988
  42697c:	and    eax,0x3
  42697f:	sub    ecx,eax
  426981:	jmp    DWORD PTR [eax*4+0x42698c]
  426988:	jmp    DWORD PTR [ecx*4+0x426a88]
  42698f:	nop
  426990:	pushf  
  426991:	imul   eax,DWORD PTR [edx+0x0],0x4269c0
  426998:	call   0x8a42ac06
  42699d:	inc    esi
  42699e:	add    esp,DWORD PTR [ebx]
  4269a0:	ror    DWORD PTR [eax-0x117cfcb9],1
  4269a6:	add    ecx,eax
  4269a8:	jmp    0x231ecaf
  4269ad:	cmp    ecx,0x8
  4269b0:	jb     0x426964
  4269b2:	std    
  4269b3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269b5:	cld    
  4269b6:	jmp    DWORD PTR [edx*4+0x426a88]
  4269bd:	lea    ecx,[ecx+0x0]
  4269c0:	mov    al,BYTE PTR [esi+0x3]
  4269c3:	and    edx,ecx
  4269c5:	mov    BYTE PTR [edi+0x3],al
  4269c8:	mov    al,BYTE PTR [esi+0x2]
  4269cb:	shr    ecx,0x2
  4269ce:	mov    BYTE PTR [edi+0x2],al
  4269d1:	sub    esi,0x2
  4269d4:	sub    edi,0x2
  4269d7:	cmp    ecx,0x8
  4269da:	jb     0x426964
  4269dc:	std    
  4269dd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269df:	cld    
  4269e0:	jmp    DWORD PTR [edx*4+0x426a88]
  4269e7:	nop
  4269e8:	mov    al,BYTE PTR [esi+0x3]
  4269eb:	and    edx,ecx
  4269ed:	mov    BYTE PTR [edi+0x3],al
  4269f0:	mov    al,BYTE PTR [esi+0x2]
  4269f3:	mov    BYTE PTR [edi+0x2],al
  4269f6:	mov    al,BYTE PTR [esi+0x1]
  4269f9:	shr    ecx,0x2
  4269fc:	mov    BYTE PTR [edi+0x1],al
  4269ff:	sub    esi,0x3
  426a02:	sub    edi,0x3
  426a05:	cmp    ecx,0x8
  426a08:	jb     0x426964
  426a0e:	std    
  426a0f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a11:	cld    
  426a12:	jmp    DWORD PTR [edx*4+0x426a88]
  426a19:	lea    ecx,[ecx+0x0]
  426a1c:	cmp    al,0x6a
  426a1e:	inc    edx
  426a1f:	add    BYTE PTR [edx+ebp*2+0x42],al
  426a23:	add    BYTE PTR [edx+ebp*2+0x42],cl
  426a27:	add    BYTE PTR [edx+ebp*2+0x42],dl
  426a2b:	add    BYTE PTR [edx+ebp*2+0x42],bl
  426a2f:	add    BYTE PTR [edx+ebp*2+0x42],ah
  426a33:	add    BYTE PTR [edx+ebp*2+0x42],ch
  426a37:	add    BYTE PTR [edi+0x6a],bh
  426a3a:	inc    edx
  426a3b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426a41:	inc    esp
  426a42:	(bad)  
  426a43:	sbb    al,0x8b
  426a45:	inc    esp
  426a46:	mov    ds,WORD PTR [eax]
  426a48:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426a4c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426a50:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426a54:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426a58:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426a5c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426a60:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426a64:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426a68:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426a6c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426a70:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426a74:	lea    eax,[ecx*4+0x0]
  426a7b:	add    esi,eax
  426a7d:	add    edi,eax
  426a7f:	jmp    DWORD PTR [edx*4+0x426a88]
  426a86:	mov    edi,edi
  426a88:	cwde   
  426a89:	push   0x42
  426a8b:	add    BYTE PTR [eax-0x4fffbd96],ah
  426a91:	push   0x42
  426a93:	add    ah,al
  426a95:	push   0x42
  426a97:	add    BYTE PTR [ebx+0x5f5e0845],cl
  426a9d:	leave  
  426a9e:	ret    
  426a9f:	nop
  426aa0:	mov    al,BYTE PTR [esi+0x3]
  426aa3:	mov    BYTE PTR [edi+0x3],al
  426aa6:	mov    eax,DWORD PTR [ebp+0x8]
  426aa9:	pop    esi
  426aaa:	pop    edi
  426aab:	leave  
  426aac:	ret    
  426aad:	lea    ecx,[ecx+0x0]
  426ab0:	mov    al,BYTE PTR [esi+0x3]
  426ab3:	mov    BYTE PTR [edi+0x3],al
  426ab6:	mov    al,BYTE PTR [esi+0x2]
  426ab9:	mov    BYTE PTR [edi+0x2],al
  426abc:	mov    eax,DWORD PTR [ebp+0x8]
  426abf:	pop    esi
  426ac0:	pop    edi
  426ac1:	leave  
  426ac2:	ret    
  426ac3:	nop
  426ac4:	mov    al,BYTE PTR [esi+0x3]
  426ac7:	mov    BYTE PTR [edi+0x3],al
  426aca:	mov    al,BYTE PTR [esi+0x2]
  426acd:	mov    BYTE PTR [edi+0x2],al
  426ad0:	mov    al,BYTE PTR [esi+0x1]
  426ad3:	mov    BYTE PTR [edi+0x1],al
  426ad6:	mov    eax,DWORD PTR [ebp+0x8]
  426ad9:	pop    esi
  426ada:	pop    edi
  426adb:	leave  
  426adc:	ret    
  426add:	push   ebp
  426ade:	mov    ebp,esp
  426ae0:	sub    esp,0xc
  426ae3:	mov    eax,ds:0x45c430
  426ae8:	xor    eax,DWORD PTR [ebp+0x4]
  426aeb:	and    BYTE PTR [ebp-0x6],0x0
  426aef:	push   0x6
  426af1:	mov    DWORD PTR [ebp-0x4],eax
  426af4:	lea    eax,[ebp-0xc]
  426af7:	push   eax
  426af8:	push   0x1004
  426afd:	push   DWORD PTR [ebp+0x8]
  426b00:	call   DWORD PTR ds:0x4280dc
  426b06:	test   eax,eax
  426b08:	jne    0x426b0f
  426b0a:	or     eax,0xffffffff
  426b0d:	jmp    0x426b19
  426b0f:	lea    eax,[ebp-0xc]
  426b12:	push   eax
  426b13:	call   0x426e1e
  426b18:	pop    ecx
  426b19:	mov    ecx,DWORD PTR [ebp-0x4]
  426b1c:	xor    ecx,DWORD PTR [ebp+0x4]
  426b1f:	call   0x423f2c
  426b24:	leave  
  426b25:	ret    
  426b26:	push   0x38
  426b28:	push   0x428ea8
  426b2d:	call   0x423858
  426b32:	mov    eax,ds:0x45c430
  426b37:	xor    eax,DWORD PTR [ebp+0x4]
  426b3a:	mov    DWORD PTR [ebp-0x1c],eax
  426b3d:	xor    edi,edi
  426b3f:	mov    DWORD PTR [ebp-0x20],edi
  426b42:	mov    DWORD PTR [ebp-0x24],edi
  426b45:	mov    eax,DWORD PTR [ebp+0x14]
  426b48:	mov    ebx,DWORD PTR [eax]
  426b4a:	mov    DWORD PTR [ebp-0x28],ebx
  426b4d:	mov    DWORD PTR [ebp-0x2c],edi
  426b50:	mov    eax,DWORD PTR [ebp+0x8]
  426b53:	cmp    eax,DWORD PTR [ebp+0xc]
  426b56:	je     0x426ccf
  426b5c:	lea    ecx,[ebp-0x40]
  426b5f:	push   ecx
  426b60:	push   eax
  426b61:	mov    esi,DWORD PTR ds:0x4280a0
  426b67:	call   esi
  426b69:	test   eax,eax
  426b6b:	je     0x426b8d
  426b6d:	cmp    DWORD PTR [ebp-0x40],0x1
  426b71:	jne    0x426b8d
  426b73:	lea    eax,[ebp-0x40]
  426b76:	push   eax
  426b77:	push   DWORD PTR [ebp+0xc]
  426b7a:	call   esi
  426b7c:	test   eax,eax
  426b7e:	je     0x426b8d
  426b80:	cmp    DWORD PTR [ebp-0x40],0x1
  426b84:	jne    0x426b8d
  426b86:	mov    DWORD PTR [ebp-0x2c],0x1
  426b8d:	cmp    DWORD PTR [ebp-0x2c],edi
  426b90:	je     0x426bac
  426b92:	cmp    ebx,0xffffffff
  426b95:	je     0x426b9b
  426b97:	mov    esi,ebx
  426b99:	jmp    0x426ba7
  426b9b:	push   DWORD PTR [ebp+0x10]
  426b9e:	call   0x423e70
  426ba3:	pop    ecx
  426ba4:	mov    esi,eax
  426ba6:	inc    esi
  426ba7:	mov    DWORD PTR [ebp-0x44],esi
  426baa:	jmp    0x426baf
  426bac:	mov    esi,DWORD PTR [ebp-0x44]
  426baf:	cmp    DWORD PTR [ebp-0x2c],edi
  426bb2:	jne    0x426bce
  426bb4:	push   edi
  426bb5:	push   edi
  426bb6:	push   ebx
  426bb7:	push   DWORD PTR [ebp+0x10]
  426bba:	push   0x1
  426bbc:	push   DWORD PTR [ebp+0x8]
  426bbf:	call   DWORD PTR ds:0x4280cc
  426bc5:	mov    esi,eax
  426bc7:	mov    DWORD PTR [ebp-0x44],esi
  426bca:	cmp    esi,edi
  426bcc:	je     0x426c26
  426bce:	mov    DWORD PTR [ebp-0x4],edi
  426bd1:	lea    eax,[esi+esi*1]
  426bd4:	add    eax,0x3
  426bd7:	and    eax,0xfffffffc
  426bda:	call   0x4238b0
  426bdf:	mov    DWORD PTR [ebp-0x18],esp
  426be2:	mov    ebx,esp
  426be4:	mov    DWORD PTR [ebp-0x48],ebx
  426be7:	lea    eax,[esi+esi*1]
  426bea:	push   eax
  426beb:	push   edi
  426bec:	push   ebx
  426bed:	call   0x426160
  426bf2:	add    esp,0xc
  426bf5:	or     DWORD PTR [ebp-0x4],0xffffffff
  426bf9:	jmp    0x426c12
  426bfb:	xor    eax,eax
  426bfd:	inc    eax
  426bfe:	ret    
  426bff:	mov    esp,DWORD PTR [ebp-0x18]
  426c02:	call   0x426cf5
  426c07:	xor    edi,edi
  426c09:	xor    ebx,ebx
  426c0b:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c0f:	mov    esi,DWORD PTR [ebp-0x44]
  426c12:	cmp    ebx,edi
  426c14:	jne    0x426c34
  426c16:	push   esi
  426c17:	push   0x2
  426c19:	call   0x424978
  426c1e:	pop    ecx
  426c1f:	pop    ecx
  426c20:	mov    ebx,eax
  426c22:	cmp    ebx,edi
  426c24:	jne    0x426c2d
  426c26:	xor    eax,eax
  426c28:	jmp    0x426ce1
  426c2d:	mov    DWORD PTR [ebp-0x24],0x1
  426c34:	push   esi
  426c35:	push   ebx
  426c36:	push   DWORD PTR [ebp-0x28]
  426c39:	push   DWORD PTR [ebp+0x10]
  426c3c:	push   0x1
  426c3e:	push   DWORD PTR [ebp+0x8]
  426c41:	call   DWORD PTR ds:0x4280cc
  426c47:	test   eax,eax
  426c49:	je     0x426cd2
  426c4f:	cmp    DWORD PTR [ebp+0x18],edi
  426c52:	je     0x426c74
  426c54:	push   edi
  426c55:	push   edi
  426c56:	push   DWORD PTR [ebp+0x1c]
  426c59:	push   DWORD PTR [ebp+0x18]
  426c5c:	push   esi
  426c5d:	push   ebx
  426c5e:	push   edi
  426c5f:	push   DWORD PTR [ebp+0xc]
  426c62:	call   DWORD PTR ds:0x428050
  426c68:	test   eax,eax
  426c6a:	je     0x426cd2
  426c6c:	mov    eax,DWORD PTR [ebp+0x18]
  426c6f:	mov    DWORD PTR [ebp-0x20],eax
  426c72:	jmp    0x426cd2
  426c74:	cmp    DWORD PTR [ebp-0x2c],edi
  426c77:	jne    0x426c8f
  426c79:	push   edi
  426c7a:	push   edi
  426c7b:	push   edi
  426c7c:	push   edi
  426c7d:	push   esi
  426c7e:	push   ebx
  426c7f:	push   edi
  426c80:	push   DWORD PTR [ebp+0xc]
  426c83:	call   DWORD PTR ds:0x428050
  426c89:	mov    esi,eax
  426c8b:	cmp    esi,edi
  426c8d:	je     0x426cd2
  426c8f:	push   esi
  426c90:	push   0x1
  426c92:	call   0x424978
  426c97:	pop    ecx
  426c98:	pop    ecx
  426c99:	mov    DWORD PTR [ebp-0x20],eax
  426c9c:	cmp    eax,edi
  426c9e:	je     0x426cd2
  426ca0:	push   edi
  426ca1:	push   edi
  426ca2:	push   esi
  426ca3:	push   eax
  426ca4:	push   esi
  426ca5:	push   ebx
  426ca6:	push   edi
  426ca7:	push   DWORD PTR [ebp+0xc]
  426caa:	call   DWORD PTR ds:0x428050
  426cb0:	cmp    eax,edi
  426cb2:	jne    0x426cc2
  426cb4:	push   DWORD PTR [ebp-0x20]
  426cb7:	call   0x42446a
  426cbc:	pop    ecx
  426cbd:	mov    DWORD PTR [ebp-0x20],edi
  426cc0:	jmp    0x426cd2
  426cc2:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426cc6:	je     0x426cd2
  426cc8:	mov    ecx,DWORD PTR [ebp+0x14]
  426ccb:	mov    DWORD PTR [ecx],eax
  426ccd:	jmp    0x426cd2
  426ccf:	mov    ebx,DWORD PTR [ebp-0x48]
  426cd2:	cmp    DWORD PTR [ebp-0x24],edi
  426cd5:	je     0x426cde
  426cd7:	push   ebx
  426cd8:	call   0x42446a
  426cdd:	pop    ecx
  426cde:	mov    eax,DWORD PTR [ebp-0x20]
  426ce1:	lea    esp,[ebp-0x54]
  426ce4:	mov    ecx,DWORD PTR [ebp-0x1c]
  426ce7:	xor    ecx,DWORD PTR [ebp+0x4]
  426cea:	call   0x423f2c
  426cef:	call   0x423893
  426cf4:	ret    
  426cf5:	push   ebp
  426cf6:	mov    ebp,esp
  426cf8:	sub    esp,0x48
  426cfb:	push   ebx
  426cfc:	push   esi
  426cfd:	push   edi
  426cfe:	push   0x4
  426d00:	pop    eax
  426d01:	call   0x4238b0
  426d06:	mov    ebx,esp
  426d08:	push   0x1c
  426d0a:	lea    eax,[ebp-0x24]
  426d0d:	push   eax
  426d0e:	push   ebx
  426d0f:	call   DWORD PTR ds:0x4280e8
  426d15:	test   eax,eax
  426d17:	je     0x426d8a
  426d19:	mov    edi,DWORD PTR [ebp-0x20]
  426d1c:	lea    eax,[ebp-0x48]
  426d1f:	push   eax
  426d20:	call   DWORD PTR ds:0x4280e4
  426d26:	mov    eax,DWORD PTR [ebp-0x44]
  426d29:	lea    esi,[eax-0x1]
  426d2c:	not    esi
  426d2e:	and    esi,ebx
  426d30:	sub    esi,eax
  426d32:	mov    DWORD PTR [ebp-0x4],eax
  426d35:	mov    eax,ds:0x45cac4
  426d3a:	mov    ecx,eax
  426d3c:	dec    ecx
  426d3d:	neg    ecx
  426d3f:	sbb    ecx,ecx
  426d41:	and    ecx,0xffff1000
  426d47:	add    ecx,0x11000
  426d4d:	add    ecx,edi
  426d4f:	cmp    esi,ecx
  426d51:	jb     0x426d8a
  426d53:	cmp    eax,0x1
  426d56:	je     0x426da2
  426d58:	mov    ebx,edi
  426d5a:	mov    edi,0x1000
  426d5f:	push   0x1c
  426d61:	lea    eax,[ebp-0x24]
  426d64:	push   eax
  426d65:	push   ebx
  426d66:	call   DWORD PTR ds:0x4280e8
  426d6c:	test   eax,eax
  426d6e:	je     0x426d8a
  426d70:	add    ebx,DWORD PTR [ebp-0x18]
  426d73:	test   DWORD PTR [ebp-0x14],edi
  426d76:	je     0x426d5f
  426d78:	test   BYTE PTR [ebp-0xf],0x1
  426d7c:	mov    ebx,DWORD PTR [ebp-0x24]
  426d7f:	je     0x426d86
  426d81:	xor    eax,eax
  426d83:	inc    eax
  426d84:	jmp    0x426dbe
  426d86:	cmp    esi,ebx
  426d88:	jae    0x426d8e
  426d8a:	xor    eax,eax
  426d8c:	jmp    0x426dbe
  426d8e:	push   0x4
  426d90:	push   edi
  426d91:	push   DWORD PTR [ebp-0x4]
  426d94:	push   ebx
  426d95:	call   DWORD PTR ds:0x4280ac
  426d9b:	mov    eax,ds:0x45cac4
  426da0:	jmp    0x426da4
  426da2:	mov    ebx,esi
  426da4:	dec    eax
  426da5:	neg    eax
  426da7:	sbb    eax,eax
  426da9:	and    eax,0x103
  426dae:	lea    ecx,[ebp-0x8]
  426db1:	push   ecx
  426db2:	inc    eax
  426db3:	push   eax
  426db4:	push   DWORD PTR [ebp-0x4]
  426db7:	push   ebx
  426db8:	call   DWORD PTR ds:0x428008
  426dbe:	lea    esp,[ebp-0x54]
  426dc1:	pop    edi
  426dc2:	pop    esi
  426dc3:	pop    ebx
  426dc4:	leave  
  426dc5:	ret    
  426dc6:	int3   
  426dc7:	int3   
  426dc8:	int3   
  426dc9:	int3   
  426dca:	int3   
  426dcb:	int3   
  426dcc:	int3   
  426dcd:	int3   
  426dce:	int3   
  426dcf:	int3   
  426dd0:	push   ebp
  426dd1:	mov    ebp,esp
  426dd3:	push   edi
  426dd4:	push   esi
  426dd5:	push   ebx
  426dd6:	mov    esi,DWORD PTR [ebp+0xc]
  426dd9:	mov    edi,DWORD PTR [ebp+0x8]
  426ddc:	mov    al,0xff
  426dde:	mov    edi,edi
  426de0:	or     al,al
  426de2:	je     0x426e16
  426de4:	mov    al,BYTE PTR [esi]
  426de6:	add    esi,0x1
  426de9:	mov    ah,BYTE PTR [edi]
  426deb:	add    edi,0x1
  426dee:	cmp    ah,al
  426df0:	je     0x426de0
  426df2:	sub    al,0x41
  426df4:	cmp    al,0x1a
  426df6:	sbb    cl,cl
  426df8:	and    cl,0x20
  426dfb:	add    al,cl
  426dfd:	add    al,0x41
  426dff:	xchg   al,ah
  426e01:	sub    al,0x41
  426e03:	cmp    al,0x1a
  426e05:	sbb    cl,cl
  426e07:	and    cl,0x20
  426e0a:	add    al,cl
  426e0c:	add    al,0x41
  426e0e:	cmp    al,ah
  426e10:	je     0x426de0
  426e12:	sbb    al,al
  426e14:	sbb    al,0xff
  426e16:	movsx  eax,al
  426e19:	pop    ebx
  426e1a:	pop    esi
  426e1b:	pop    edi
  426e1c:	leave  
  426e1d:	ret    
  426e1e:	push   esi
  426e1f:	push   edi
  426e20:	call   0x42370d
  426e25:	mov    edi,DWORD PTR [eax+0x64]
  426e28:	cmp    edi,DWORD PTR ds:0x45c58c
  426e2e:	je     0x426e37
  426e30:	call   0x424bbf
  426e35:	mov    edi,eax
  426e37:	mov    esi,DWORD PTR [esp+0xc]
  426e3b:	cmp    DWORD PTR [edi+0x28],0x1
  426e3f:	movzx  eax,BYTE PTR [esi]
  426e42:	jle    0x426e52
  426e44:	push   0x8
  426e46:	push   eax
  426e47:	push   edi
  426e48:	call   0x426ea6
  426e4d:	add    esp,0xc
  426e50:	jmp    0x426e5c
  426e52:	mov    ecx,DWORD PTR [edi+0x48]
  426e55:	movzx  eax,BYTE PTR [ecx+eax*2]
  426e59:	and    eax,0x8
  426e5c:	test   eax,eax
  426e5e:	je     0x426e63
  426e60:	inc    esi
  426e61:	jmp    0x426e3b
  426e63:	movzx  ecx,BYTE PTR [esi]
  426e66:	inc    esi
  426e67:	cmp    ecx,0x2d
  426e6a:	mov    edx,ecx
  426e6c:	je     0x426e73
  426e6e:	cmp    ecx,0x2b
  426e71:	jne    0x426e77
  426e73:	movzx  ecx,BYTE PTR [esi]
  426e76:	inc    esi
  426e77:	xor    eax,eax
  426e79:	cmp    ecx,0x30
  426e7c:	jl     0x426e88
  426e7e:	cmp    ecx,0x39
  426e81:	jg     0x426e88
  426e83:	sub    ecx,0x30
  426e86:	jmp    0x426e8b
  426e88:	or     ecx,0xffffffff
  426e8b:	cmp    ecx,0xffffffff
  426e8e:	je     0x426e9c
  426e90:	lea    eax,[eax+eax*4]
  426e93:	lea    eax,[ecx+eax*2]
  426e96:	movzx  ecx,BYTE PTR [esi]
  426e99:	inc    esi
  426e9a:	jmp    0x426e79
  426e9c:	cmp    edx,0x2d
  426e9f:	pop    edi
  426ea0:	pop    esi
  426ea1:	jne    0x426ea5
  426ea3:	neg    eax
  426ea5:	ret    
  426ea6:	push   ebp
  426ea7:	mov    ebp,esp
  426ea9:	push   ecx
  426eaa:	mov    eax,DWORD PTR [ebp+0xc]
  426ead:	lea    ecx,[eax+0x1]
  426eb0:	cmp    ecx,0x100
  426eb6:	mov    ecx,DWORD PTR [ebp+0x8]
  426eb9:	ja     0x426ec4
  426ebb:	mov    ecx,DWORD PTR [ecx+0x48]
  426ebe:	movzx  eax,WORD PTR [ecx+eax*2]
  426ec2:	jmp    0x426f18
  426ec4:	push   esi
  426ec5:	mov    edx,eax
  426ec7:	sar    edx,0x8
  426eca:	push   edi
  426ecb:	mov    edi,DWORD PTR [ecx+0x48]
  426ece:	movzx  esi,dl
  426ed1:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426ed6:	pop    edi
  426ed7:	pop    esi
  426ed8:	je     0x426ee9
  426eda:	and    BYTE PTR [ebp-0x2],0x0
  426ede:	push   0x2
  426ee0:	mov    BYTE PTR [ebp-0x3],al
  426ee3:	mov    BYTE PTR [ebp-0x4],dl
  426ee6:	pop    eax
  426ee7:	jmp    0x426ef3
  426ee9:	and    BYTE PTR [ebp-0x3],0x0
  426eed:	mov    BYTE PTR [ebp-0x4],al
  426ef0:	xor    eax,eax
  426ef2:	inc    eax
  426ef3:	push   0x1
  426ef5:	push   DWORD PTR [ecx+0x14]
  426ef8:	push   DWORD PTR [ecx+0x4]
  426efb:	lea    ecx,[ebp+0xe]
  426efe:	push   ecx
  426eff:	push   eax
  426f00:	lea    eax,[ebp-0x4]
  426f03:	push   eax
  426f04:	push   0x1
  426f06:	call   0x425f88
  426f0b:	add    esp,0x1c
  426f0e:	test   eax,eax
  426f10:	jne    0x426f14
  426f12:	leave  
  426f13:	ret    
  426f14:	movzx  eax,WORD PTR [ebp+0xe]
  426f18:	and    eax,DWORD PTR [ebp+0x10]
  426f1b:	leave  
  426f1c:	ret    
  426f1d:	int3   
  426f1e:	int3   
  426f1f:	int3   
  426f20:	mov    eax,DWORD PTR [esp+0x8]
  426f24:	mov    ecx,DWORD PTR [esp+0x10]
  426f28:	or     ecx,eax
  426f2a:	mov    ecx,DWORD PTR [esp+0xc]
  426f2e:	jne    0x426f39
  426f30:	mov    eax,DWORD PTR [esp+0x4]
  426f34:	mul    ecx
  426f36:	ret    0x10
  426f39:	push   ebx
  426f3a:	mul    ecx
  426f3c:	mov    ebx,eax
  426f3e:	mov    eax,DWORD PTR [esp+0x8]
  426f42:	mul    DWORD PTR [esp+0x14]
  426f46:	add    ebx,eax
  426f48:	mov    eax,DWORD PTR [esp+0x8]
  426f4c:	mul    ecx
  426f4e:	add    edx,ebx
  426f50:	pop    ebx
  426f51:	ret    0x10
  426f54:	int3   
  426f55:	int3   
  426f56:	int3   
  426f57:	int3   
  426f58:	int3   
  426f59:	int3   
  426f5a:	int3   
  426f5b:	int3   
  426f5c:	int3   
  426f5d:	int3   
  426f5e:	int3   
  426f5f:	int3   
  426f60:	push   ebp
  426f61:	mov    ebp,esp
  426f63:	push   edi
  426f64:	push   esi
  426f65:	push   ebx
  426f66:	mov    ecx,DWORD PTR [ebp+0x10]
  426f69:	or     ecx,ecx
  426f6b:	je     0x426fba
  426f6d:	mov    esi,DWORD PTR [ebp+0x8]
  426f70:	mov    edi,DWORD PTR [ebp+0xc]
  426f73:	mov    bh,0x41
  426f75:	mov    bl,0x5a
  426f77:	mov    dh,0x20
  426f79:	lea    ecx,[ecx+0x0]
  426f7c:	mov    ah,BYTE PTR [esi]
  426f7e:	or     ah,ah
  426f80:	mov    al,BYTE PTR [edi]
  426f82:	je     0x426fab
  426f84:	or     al,al
  426f86:	je     0x426fab
  426f88:	add    esi,0x1
  426f8b:	add    edi,0x1
  426f8e:	cmp    ah,bh
  426f90:	jb     0x426f98
  426f92:	cmp    ah,bl
  426f94:	ja     0x426f98
  426f96:	add    ah,dh
  426f98:	cmp    al,bh
  426f9a:	jb     0x426fa2
  426f9c:	cmp    al,bl
  426f9e:	ja     0x426fa2
  426fa0:	add    al,dh
  426fa2:	cmp    ah,al
  426fa4:	jne    0x426fb1
  426fa6:	sub    ecx,0x1
  426fa9:	jne    0x426f7c
  426fab:	xor    ecx,ecx
  426fad:	cmp    ah,al
  426faf:	je     0x426fba
  426fb1:	mov    ecx,0xffffffff
  426fb6:	jb     0x426fba
  426fb8:	neg    ecx
  426fba:	mov    eax,ecx
  426fbc:	pop    ebx
  426fbd:	pop    esi
  426fbe:	pop    edi
  426fbf:	leave  
  426fc0:	ret    
  426fc1:	int3   
  426fc2:	int3   
  426fc3:	int3   
  426fc4:	int3   
  426fc5:	int3   
  426fc6:	int3   
  426fc7:	int3   
  426fc8:	int3   
  426fc9:	int3   
  426fca:	int3   
  426fcb:	int3   
  426fcc:	int3   
  426fcd:	int3   
  426fce:	int3   
  426fcf:	int3   
  426fd0:	push   esi
  426fd1:	mov    eax,DWORD PTR [esp+0x14]
  426fd5:	or     eax,eax
  426fd7:	jne    0x427001
  426fd9:	mov    ecx,DWORD PTR [esp+0x10]
  426fdd:	mov    eax,DWORD PTR [esp+0xc]
  426fe1:	xor    edx,edx
  426fe3:	div    ecx
  426fe5:	mov    ebx,eax
  426fe7:	mov    eax,DWORD PTR [esp+0x8]
  426feb:	div    ecx
  426fed:	mov    esi,eax
  426fef:	mov    eax,ebx
  426ff1:	mul    DWORD PTR [esp+0x10]
  426ff5:	mov    ecx,eax
  426ff7:	mov    eax,esi
  426ff9:	mul    DWORD PTR [esp+0x10]
  426ffd:	add    edx,ecx
  426fff:	jmp    0x427048
  427001:	mov    ecx,eax
  427003:	mov    ebx,DWORD PTR [esp+0x10]
  427007:	mov    edx,DWORD PTR [esp+0xc]
  42700b:	mov    eax,DWORD PTR [esp+0x8]
  42700f:	shr    ecx,1
  427011:	rcr    ebx,1
  427013:	shr    edx,1
  427015:	rcr    eax,1
  427017:	or     ecx,ecx
  427019:	jne    0x42700f
  42701b:	div    ebx
  42701d:	mov    esi,eax
  42701f:	mul    DWORD PTR [esp+0x14]
  427023:	mov    ecx,eax
  427025:	mov    eax,DWORD PTR [esp+0x10]
  427029:	mul    esi
  42702b:	add    edx,ecx
  42702d:	jb     0x42703d
  42702f:	cmp    edx,DWORD PTR [esp+0xc]
  427033:	ja     0x42703d
  427035:	jb     0x427046
  427037:	cmp    eax,DWORD PTR [esp+0x8]
  42703b:	jbe    0x427046
  42703d:	dec    esi
  42703e:	sub    eax,DWORD PTR [esp+0x10]
  427042:	sbb    edx,DWORD PTR [esp+0x14]
  427046:	xor    ebx,ebx
  427048:	sub    eax,DWORD PTR [esp+0x8]
  42704c:	sbb    edx,DWORD PTR [esp+0xc]
  427050:	neg    edx
  427052:	neg    eax
  427054:	sbb    edx,0x0
  427057:	mov    ecx,edx
  427059:	mov    edx,ebx
  42705b:	mov    ebx,ecx
  42705d:	mov    ecx,eax
  42705f:	mov    eax,esi
  427061:	pop    esi
  427062:	ret    0x10
  427065:	int3   
  427066:	int3   
  427067:	int3   
  427068:	int3   
  427069:	int3   
  42706a:	int3   
  42706b:	int3   
  42706c:	int3   
  42706d:	int3   
  42706e:	int3   
  42706f:	int3   
  427070:	lea    eax,[edx-0x1]
  427073:	pop    ebx
  427074:	ret    
  427075:	lea    esp,[esp+0x0]
  42707c:	lea    esp,[esp+0x0]
  427080:	xor    eax,eax
  427082:	mov    al,BYTE PTR [esp+0x8]
  427086:	push   ebx
  427087:	mov    ebx,eax
  427089:	shl    eax,0x8
  42708c:	mov    edx,DWORD PTR [esp+0x8]
  427090:	test   edx,0x3
  427096:	je     0x4270ad
  427098:	mov    cl,BYTE PTR [edx]
  42709a:	add    edx,0x1
  42709d:	cmp    cl,bl
  42709f:	je     0x427070
  4270a1:	test   cl,cl
  4270a3:	je     0x4270f6
  4270a5:	test   edx,0x3
  4270ab:	jne    0x427098
  4270ad:	or     ebx,eax
  4270af:	push   edi
  4270b0:	mov    eax,ebx
  4270b2:	shl    ebx,0x10
  4270b5:	push   esi
  4270b6:	or     ebx,eax
  4270b8:	mov    ecx,DWORD PTR [edx]
  4270ba:	mov    edi,0x7efefeff
  4270bf:	mov    eax,ecx
  4270c1:	mov    esi,edi
  4270c3:	xor    ecx,ebx
  4270c5:	add    esi,eax
  4270c7:	add    edi,ecx
  4270c9:	xor    ecx,0xffffffff
  4270cc:	xor    eax,0xffffffff
  4270cf:	xor    ecx,edi
  4270d1:	xor    eax,esi
  4270d3:	add    edx,0x4
  4270d6:	and    ecx,0x81010100
  4270dc:	jne    0x4270fa
  4270de:	and    eax,0x81010100
  4270e3:	je     0x4270b8
  4270e5:	and    eax,0x1010100
  4270ea:	jne    0x4270f4
  4270ec:	and    esi,0x80000000
  4270f2:	jne    0x4270b8
  4270f4:	pop    esi
  4270f5:	pop    edi
  4270f6:	pop    ebx
  4270f7:	xor    eax,eax
  4270f9:	ret    
  4270fa:	mov    eax,DWORD PTR [edx-0x4]
  4270fd:	cmp    al,bl
  4270ff:	je     0x427137
  427101:	test   al,al
  427103:	je     0x4270f4
  427105:	cmp    ah,bl
  427107:	je     0x427130
  427109:	test   ah,ah
  42710b:	je     0x4270f4
  42710d:	shr    eax,0x10
  427110:	cmp    al,bl
  427112:	je     0x427129
  427114:	test   al,al
  427116:	je     0x4270f4
  427118:	cmp    ah,bl
  42711a:	je     0x427122
  42711c:	test   ah,ah
  42711e:	je     0x4270f4
  427120:	jmp    0x4270b8
  427122:	pop    esi
  427123:	pop    edi
  427124:	lea    eax,[edx-0x1]
  427127:	pop    ebx
  427128:	ret    
  427129:	lea    eax,[edx-0x2]
  42712c:	pop    esi
  42712d:	pop    edi
  42712e:	pop    ebx
  42712f:	ret    
  427130:	lea    eax,[edx-0x3]
  427133:	pop    esi
  427134:	pop    edi
  427135:	pop    ebx
  427136:	ret    
  427137:	lea    eax,[edx-0x4]
  42713a:	pop    esi
  42713b:	pop    edi
  42713c:	pop    ebx
  42713d:	ret    
  42713e:	jmp    DWORD PTR ds:0x4280e0
