
e24a68fe9026a16b4aada249d3bd150456d8af296ff79d174a10a7c6dea1ef03.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x70
  401006:	mov    eax,DWORD PTR [ebp-0x50]
  401009:	mov    ecx,DWORD PTR [ebp-0x4c]
  40100c:	mov    edx,DWORD PTR [ebp-0x50]
  40100f:	add    DWORD PTR ds:0x428481,0x428521
  401019:	sub    eax,edx
  40101b:	mov    DWORD PTR ds:0x4284a5,ecx
  401021:	push   edi
  401022:	mov    edi,DWORD PTR [ebp-0x4c]
  401025:	mov    DWORD PTR [ebp-0x50],eax
  401028:	not    edx
  40102a:	sbb    ecx,edi
  40102c:	inc    DWORD PTR ds:0x42838d
  401032:	mov    DWORD PTR [ebp-0x4c],ecx
  401035:	or     DWORD PTR [ebp-0x50],0xcb78dc42
  40103c:	sub    DWORD PTR ds:0x428499,ecx
  401042:	or     DWORD PTR [ebp-0x4c],0x9c2b8ae8
  401049:	mov    edx,DWORD PTR ds:0x428461
  40104f:	xor    DWORD PTR ds:0x4285a5,edx
  401055:	mov    eax,DWORD PTR [ebp-0x58]
  401058:	jmp    0x4013f9
  40105d:	(bad)  
  40105e:	mov    edi,0x9098bf8d
  401063:	cwde   
  401064:	(bad)  
  401065:	mov    cl,BYTE PTR [esi+ebp*4-0x31]
  401069:	and    esp,DWORD PTR cs:[eax-0x62]
  40106d:	mov    esi,0xbdbebebe
  401072:	les    edi,FWORD PTR [esi+0x415f57be]
  401078:	mov    DWORD PTR [esi],edx
  40107a:	ds out 0x1f,al
  40107d:	(bad)  [eax+0x5be9ef0]
  401083:	inc    esi
  401084:	pop    ds
  401085:	(bad)  
  401086:	xlat   BYTE PTR ds:[ebx]
  401087:	ffree  st(5)
  401089:	outs   dx,BYTE PTR gs:[esi]
  40108b:	mov    ecx,0x723deed2
  401090:	repnz cmc 
  401092:	adc    al,0x95
  401094:	out    0xc5,eax
  401096:	ss mov cl,0x7e
  401099:	test   DWORD PTR [edx+0xd339a63],esp
  40109f:	repz or BYTE PTR [ecx-0x2c],al
  4010a3:	fisub  WORD PTR [ebx+0x39d2cc4]
  4010a9:	mov    ?,WORD PTR [esp+eax*4-0x44]
  4010ad:	int    0xf4
  4010af:	cmp    esp,eax
  4010b1:	icebp  
  4010b2:	arpl   WORD PTR ds:0xfe52947e,dx
  4010b8:	call   0x4be36aff
  4010bd:	pop    eax
  4010be:	rcr    bl,1
  4010c0:	inc    esi
  4010c1:	dec    ebp
  4010c2:	shl    DWORD PTR [edx+0x79],0x32
  4010c6:	sub    edi,DWORD PTR [ebx-0x13b6c9c8]
  4010cc:	inc    edx
  4010cd:	lds    ebp,FWORD PTR [esi]
  4010cf:	cmp    DWORD PTR [eax+edi*4-0x3c10b663],esp
  4010d6:	jnp    0x40108a
  4010d8:	cmp    esi,edi
  4010da:	jle    0x401145
  4010dc:	mov    esi,0xbd592451
  4010e1:	shl    ebx,cl
  4010e3:	xchg   edx,eax
  4010e4:	rol    bl,1
  4010e6:	sbb    al,0x61
  4010e8:	ins    BYTE PTR es:[edi],dx
  4010e9:	nop
  4010ea:	aas    
  4010eb:	jecxz  0x401159
  4010ed:	mov    esp,es
  4010ef:	inc    ebp
  4010f0:	leave  
  4010f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4010f2:	inc    ecx
  4010f3:	ss popf 
  4010f5:	xchg   edi,eax
  4010f6:	(bad)  
  4010f7:	rcl    BYTE PTR [ecx+0x776649bb],1
  4010fd:	pop    ss
  4010fe:	mov    ah,BYTE PTR [ecx]
  401100:	adc    BYTE PTR [edi],ah
  401102:	js     0x40117a
  401104:	jns    0x401134
  401106:	or     edi,ecx
  401108:	dec    esp
  401109:	mov    bh,0xd1
  40110b:	xor    eax,0xbf20903f
  401110:	adc    ecx,esi
  401112:	dec    esp
  401113:	cmp    al,0xd1
  401115:	mov    dl,0x87
  401117:	std    
  401118:	std    
  401119:	mov    bl,0x65
  40111b:	sbb    al,0xe2
  40111d:	add    edi,eax
  40111f:	call   FWORD PTR [ecx+0x55]
  401122:	cdq    
  401123:	ficomp DWORD PTR [eax+0x72ec971]
  401129:	inc    edx
  40112a:	jne    0x4010b0
  40112c:	es push es
  40112e:	sub    BYTE PTR [ebx+0x4a8093ae],ah
  401134:	sar    BYTE PTR [edi+esi*2],0xd7
  401138:	jmp    0xc7a366ca
  40113d:	shl    DWORD PTR es:[edi],0x7e
  401141:	shr    BYTE PTR ds:0xdf48071c,0x70
  401148:	push   es
  401149:	mul    DWORD PTR [ecx]
  40114b:	nop
  40114c:	push   ebx
  40114d:	(bad)  
  40114e:	xor    eax,0xa9fddbaa
  401153:	add    eax,0x90a27139
  401158:	addr16 dec eax
  40115a:	mov    ds:0xf90335b,eax
  40115f:	outs   dx,BYTE PTR ds:[esi]
  401160:	xor    al,BYTE PTR [eax-0x37bdfde2]
  401166:	ja     0x40110d
  401168:	pop    edi
  401169:	in     eax,0xb
  40116b:	sti    
  40116c:	retf   
  40116d:	sbb    bl,bl
  40116f:	inc    ecx
  401170:	sub    al,0x7b
  401172:	fwait
  401173:	cmp    bh,BYTE PTR [ecx+0x51a57358]
  401179:	mov    eax,ds:0x16ce78a7
  40117e:	xchg   ebx,eax
  40117f:	shl    BYTE PTR [ecx],0x4d
  401182:	loopne 0x4011de
  401184:	inc    ebp
  401185:	jne    0x4011b8
  401187:	in     eax,dx
  401188:	sbb    eax,0x3a3ed07d
  40118d:	scas   al,BYTE PTR es:[edi]
  40118e:	inc    ebp
  40118f:	xchg   eax,esp
  401191:	xor    BYTE PTR [esi+0x154445b8],0x2d
  401198:	(bad)  
  401199:	js     0x4011af
  40119b:	sbb    bl,BYTE PTR [ecx+0x5b]
  40119e:	jmp    0x9c6df0c6
  4011a3:	pop    ebx
  4011a4:	rol    cl,0x53
  4011a7:	add    BYTE PTR [eax],dh
  4011a9:	(bad)  
  4011aa:	(bad)  
  4011ac:	scas   eax,DWORD PTR es:[edi]
  4011ad:	sub    esi,ecx
  4011af:	loopne 0x401207
  4011b1:	cli    
  4011b2:	mov    esi,0x669eed70
  4011b7:	add    al,0x18
  4011b9:	inc    ecx
  4011ba:	push   0x0
  4011bc:	cmp    BYTE PTR [esi],ch
  4011be:	arpl   bp,dx
  4011c0:	mov    BYTE PTR [ebp+eiz*8+0x77],al
  4011c4:	inc    ebp
  4011c5:	pop    es
  4011c6:	mov    edx,0x446dcc49
  4011cb:	test   DWORD PTR [eax],ebx
  4011cd:	mov    al,0x13
  4011cf:	push   0x6eccd4b4
  4011d4:	fst    DWORD PTR [edx-0xe60d0f3]
  4011da:	jns    0x4011a0
  4011dc:	(bad)
  4011e0:	push   es
  4011e1:	inc    edi
  4011e2:	dec    ecx
  4011e3:	jecxz  0x4011d2
  4011e5:	cmp    DWORD PTR [edi-0x7f5d7b7f],esp
  4011eb:	cdq    
  4011ec:	sar    ebp,1
  4011ee:	pop    ecx
  4011ef:	jecxz  0x4011d3
  4011f1:	retf   0x21a3
  4011f4:	jmp    0xf4fd:0x90181c5e
  4011fb:	or     esp,ebx
  4011fd:	jns    0x4011b0
  4011ff:	aam    0x45
  401201:	inc    ecx
  401202:	pop    eax
  401203:	push   esp
  401204:	or     edx,DWORD PTR [edx-0x4f]
  401207:	mov    edi,0xda1850c6
  40120c:	fadd   st(4),st
  40120e:	push   0xffffffcc
  401210:	aam    0x44
  401212:	pop    es
  401213:	pop    ds
  401214:	lock fbld TBYTE PTR [esi+0x6d]
  401218:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401219:	or     eax,DWORD PTR [esi-0x80]
  40121c:	scas   eax,DWORD PTR es:[edi]
  40121d:	or     BYTE PTR [ecx-0x42],ch
  401220:	sbb    BYTE PTR [ebp-0x62],ch
  401223:	push   0xec89132c
  401228:	js     0x4011dd
  40122a:	enter  0x2cc,0x90
  40122e:	retf   0x297
  401231:	dec    esi
  401232:	ins    DWORD PTR es:[edi],dx
  401233:	mov    edx,0x4d63008c
  401238:	inc    esi
  401239:	out    0x5,eax
  40123b:	dec    eax
  40123c:	outs   dx,WORD PTR ss:[esi]
  40123f:	mov    dl,0xe6
  401241:	pop    ecx
  401242:	and    DWORD PTR [ecx+0x1c6a3f45],ebx
  401248:	pop    ss
  401249:	das    
  40124a:	dec    edx
  40124b:	fnsave [ecx+0x4f171ee2]
  401251:	js     0x40126e
  401253:	jns    0x401200
  401255:	call   0xabb88571
  40125a:	add    al,0x45
  40125c:	adc    cl,bh
  40125e:	into   
  40125f:	inc    ecx
  401260:	cmp    esi,DWORD PTR [esi+0x66693f7a]
  401266:	inc    ebx
  401267:	dec    esi
  401268:	popa   
  401269:	prefetch (bad)
  40126a:	or     eax,0xb610f2ff
  40126f:	cli    
  401270:	jno    0x401281
  401272:	mov    ecx,0x3e48d53
  401277:	push   ss
  401278:	(bad)  
  401279:	push   edi
  40127a:	pop    esp
  40127b:	js     0x4012d4
  40127d:	or     DWORD PTR [edi+0x748fe3dd],0xab7ae662
  401287:	xchg   ebx,eax
  401288:	mov    cl,0x2
  40128a:	cli    
  40128b:	sub    al,0x5
  40128d:	sbb    DWORD PTR [ecx],0xe4d5933f
  401293:	pop    ss
  401294:	mov    DWORD PTR [si],ecx
  401297:	pop    esi
  401298:	jae    0x4012de
  40129a:	cwde   
  40129b:	adc    eax,0x8fcf7003
  4012a0:	popf   
  4012a1:	pop    ss
  4012a2:	or     DWORD PTR [edx],eax
  4012a4:	in     al,0x92
  4012a6:	add    eax,esp
  4012a8:	sbb    ebp,edi
  4012aa:	(bad)  
  4012ab:	or     al,0xf8
  4012ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4012ae:	cdq    
  4012af:	mov    ds:0xa4c56c6a,al
  4012b4:	xchg   ecx,eax
  4012b5:	jg     0x401240
  4012b7:	pop    ss
  4012b8:	std    
  4012b9:	sub    ebx,DWORD PTR [ebp+0x6db62a7a]
  4012bf:	pop    ds
  4012c0:	mov    esp,0xadbee33d
  4012c5:	test   eax,0xfdc80ea3
  4012ca:	retf   
  4012cb:	mov    esi,0xbd9e314b
  4012d0:	imul   DWORD PTR [ecx+eiz*8]
  4012d3:	in     al,dx
  4012d4:	outs   dx,BYTE PTR ds:[esi]
  4012d5:	sbb    bl,BYTE PTR ds:0xb9132607
  4012db:	fcomp  QWORD PTR [ecx-0x2bccee99]
  4012e1:	dec    ebp
  4012e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4012e3:	dec    edi
  4012e4:	jmp    0x9ec3:0x23fc8069
  4012eb:	test   BYTE PTR [esi-0xf],bh
  4012ee:	fstp   DWORD PTR [eax-0x46050101]
  4012f4:	aam    0x1c
  4012f6:	(bad)  
  4012f7:	push   esp
  4012f8:	pop    esi
  4012f9:	xchg   ebp,eax
  4012fa:	dec    eax
  4012fb:	aas    
  4012fc:	mov    ch,BYTE PTR [esi+eax*1-0x4d]
  401300:	sub    bl,BYTE PTR [ebx]
  401302:	dec    ebx
  401303:	mov    edx,0xe4a2aedb
  401308:	pop    ecx
  401309:	shr    BYTE PTR [ebx],1
  40130b:	cld    
  40130c:	cs (bad) 
  40130e:	mov    edi,0xfc1d9d58
  401313:	xchg   edi,eax
  401314:	imul   edi,DWORD PTR [edx-0x21],0x72a3bbbe
  40131b:	jnp    0x40136a
  40131d:	(bad)  
  40131e:	in     eax,0x4a
  401320:	cld    
  401321:	out    dx,al
  401322:	xchg   esi,eax
  401323:	cmp    ecx,ebx
  401325:	jne    0x401378
  401327:	mov    ds:0x595f385f,al
  40132c:	jmp    0x2985167f
  401331:	fisub  DWORD PTR [esp+eax*4]
  401334:	daa    
  401335:	scas   al,BYTE PTR es:[edi]
  401336:	sub    DWORD PTR [ecx],ebx
  401338:	mov    ah,0xb9
  40133a:	pusha  
  40133b:	jne    0x40131c
  40133d:	(bad)  
  40133e:	jle    0x40132a
  401340:	lods   eax,DWORD PTR ds:[esi]
  401341:	enter  0xa622,0x7d
  401345:	fstcw  WORD PTR [ecx+0x22f9261e]
  40134c:	retf   
  40134d:	mov    eax,0x2cd006a0
  401352:	rcl    BYTE PTR [ebx],0x5e
  401355:	stos   DWORD PTR es:[edi],eax
  401356:	pop    es
  401357:	inc    esp
  401358:	sahf   
  401359:	or     DWORD PTR ds:0x9a6dec20,ebx
  40135f:	lock jmp 0x69804cfd
  401365:	nop
  401366:	mov    ch,0xb7
  401368:	out    dx,al
  401369:	cld    
  40136a:	and    al,0xda
  40136c:	add    edx,DWORD PTR [edi-0x4f]
  40136f:	add    eax,DWORD PTR [esi+0x3a]
  401372:	scas   eax,DWORD PTR es:[edi]
  401373:	shr    DWORD PTR [edx],1
  401375:	push   esp
  401376:	rol    BYTE PTR [esi+0x30],0xca
  40137a:	sti    
  40137b:	mov    WORD PTR [eax-0x1f],fs
  40137e:	sbb    esp,DWORD PTR [edx-0x2195453]
  401384:	cli    
  401385:	jmp    0xe0ac133e
  40138a:	sbb    al,0xa
  40138c:	push   ecx
  40138d:	xor    eax,0xe8e14fce
  401392:	fisubr DWORD PTR [ebx-0x1f728aa8]
  401398:	xor    BYTE PTR [edi+0x6b20c244],bh
  40139e:	inc    eax
  40139f:	fwait
  4013a0:	xchg   ebp,eax
  4013a1:	shr    DWORD PTR [ebx+0x18114352],1
  4013a7:	imul   ebx,DWORD PTR [di+0x1e],0xe
  4013ac:	push   ss
  4013ad:	inc    eax
  4013ae:	jg     0x4013a9
  4013b0:	(bad)  
  4013b1:	pop    edi
  4013b2:	mov    esp,0xca475f99
  4013b7:	sbb    eax,0xc1267acf
  4013bc:	cwde   
  4013bd:	das    
  4013be:	mov    bh,al
  4013c0:	pop    eax
  4013c1:	aad    0x8d
  4013c3:	xor    DWORD PTR [ebx],ebp
  4013c5:	jmp    0x401430
  4013c7:	sub    eax,0xb151d86f
  4013cc:	mov    eax,0x96f559f3
  4013d1:	mov    DWORD PTR [esi+esi*1+0x7a],ebp
  4013d5:	jno    0x401382
  4013d7:	sbb    esi,DWORD PTR [eax+0x2d]
  4013da:	mov    DWORD PTR [esi],ebp
  4013dc:	jecxz  0x4013c8
  4013de:	stc    
  4013df:	or     eax,0xf076521f
  4013e4:	cwde   
  4013e5:	fdiv   DWORD PTR [esi]
  4013e7:	out    dx,al
  4013e8:	dec    eax
  4013e9:	in     al,0xb5
  4013eb:	pop    ebp
  4013ec:	xchg   DWORD PTR [eax+0x6a],eax
  4013ef:	jecxz  0x401461
  4013f1:	mov    dl,0xf9
  4013f3:	or     edi,DWORD PTR [ebx]
  4013f5:	adc    BYTE PTR [eax+0x70],bh
  4013f8:	push   edx
  4013f9:	mov    ecx,DWORD PTR [ebp-0x54]
  4013fc:	add    edi,DWORD PTR ds:0x428501
  401402:	mov    edx,DWORD PTR [ebp-0x58]
  401405:	sbb    DWORD PTR ds:0x428519,ecx
  40140b:	mov    edi,DWORD PTR [ebp-0x54]
  40140e:	sub    DWORD PTR ds:0x4285a5,0x1812
  401418:	sub    eax,edx
  40141a:	movzx  edx,BYTE PTR ds:0x428491
  401421:	jmp    0x4017c2
  401426:	test   BYTE PTR [edx+0x7cbcfc08],0x3a
  40142d:	mov    WORD PTR [esi+0x6e],es
  401430:	rcl    DWORD PTR [eax-0x1c59f51e],cl
  401436:	mov    ebp,0xbdbebec4
  40143b:	les    edi,FWORD PTR [esi+0x66cc86be]
  401441:	xchg   edx,eax
  401442:	ins    DWORD PTR es:[edi],dx
  401443:	jle    0x401445
  401445:	fldcw  WORD PTR ds:0x272ba00a
  40144b:	sub    BYTE PTR ds:0x4ec33d1a,dl
  401451:	cmp    BYTE PTR [eax-0x2b],0x25
  401455:	rol    DWORD PTR [edx+0x52ffe096],1
  40145b:	xor    eax,0x3bf93129
  401460:	in     al,0xca
  401462:	test   DWORD PTR [ebx+0x34],ecx
  401465:	cmp    eax,0x131f1958
  40146a:	sbb    al,0x22
  40146c:	aam    0xfc
  40146e:	jne    0x4014c6
  401470:	rcr    ebx,0x97
  401473:	jnp    0x401476
  401475:	xor    DWORD PTR [ecx+edi*2-0x18],eax
  401479:	jp     0x401408
  40147b:	jo     0x4014a7
  40147d:	jl     0x401445
  40147f:	repnz push ds
  401481:	iret   
  401482:	shl    DWORD PTR [ebp-0x18dceab2],1
  401488:	jle    0x401471
  40148a:	xchg   esi,eax
  40148b:	xor    BYTE PTR ds:0x50a26d0b,0x7b
  401492:	adc    ebp,DWORD PTR [esi]
  401494:	sub    eax,0xc67a531d
  401499:	test   eax,0x3eead97f
  40149e:	push   ds
  40149f:	dec    eax
  4014a0:	mov    ?,WORD PTR ds:[eax+ecx*4+0x137c291d]
  4014a8:	dec    esp
  4014a9:	popf   
  4014aa:	pop    es
  4014ab:	lds    esi,FWORD PTR [ebp+0x25]
  4014ae:	in     al,0xf2
  4014b0:	mov    al,0x77
  4014b2:	dec    ebp
  4014b3:	neg    DWORD PTR [esi-0x1570c7b3]
  4014b9:	dec    ecx
  4014ba:	aas    
  4014bb:	jge    0x4014ce
  4014bd:	mov    esp,0x5766e2c1
  4014c2:	stos   DWORD PTR es:[edi],eax
  4014c3:	adc    ebp,DWORD PTR [edi]
  4014c5:	mov    ah,bh
  4014c7:	(bad)  
  4014c9:	test   al,0x91
  4014cb:	xor    ebx,DWORD PTR [edx+0x173df396]
  4014d1:	call   0x25ad:0xebfc3bea
  4014d8:	sub    al,0x91
  4014da:	mov    bl,0x38
  4014dc:	xlat   BYTE PTR ds:[ebx]
  4014dd:	jg     0x401517
  4014df:	(bad)  
  4014e0:	xchg   ebx,eax
  4014e1:	or     DWORD PTR [ebx],edi
  4014e3:	adc    DWORD PTR [ebp+0x7216aa5e],esi
  4014e9:	ins    DWORD PTR es:[edi],dx
  4014ea:	retf   
  4014eb:	xchg   ebx,eax
  4014ec:	retf   0x46d0
  4014ef:	push   eax
  4014f0:	pop    eax
  4014f1:	aad    0xde
  4014f3:	sar    BYTE PTR [eax],cl
  4014f5:	mov    dh,0x8b
  4014f7:	retf   
  4014f8:	jg     0x40147e
  4014fa:	(bad)
  4014fd:	xor    bh,BYTE PTR [ebx+0x4f]
  401500:	jg     0x401520
  401502:	sbb    bl,dl
  401504:	popf   
  401505:	jge    0x401492
  401507:	pop    es
  401508:	test   eax,0x2911e5d1
  40150d:	jmp    0xa39afed8
  401512:	push   esi
  401513:	jle    0x4014ba
  401515:	call   0x945a:0x79296bd4
  40151c:	ds sbb eax,0xc0e2b396
  401522:	sub    eax,0x76fd8905
  401527:	retf   0x4caf
  40152a:	lea    ebx,[eax]
  40152c:	mov    edx,0x2f5962bd
  401531:	scas   al,BYTE PTR es:[edi]
  401532:	icebp  
  401533:	cwde   
  401534:	(bad)  
  401535:	in     al,0x60
  401537:	cmp    ecx,DWORD PTR [ebp-0x458920fa]
  40153d:	xchg   ebx,eax
  40153e:	pop    ebp
  40153f:	mov    ds:0xc75849b6,al
  401544:	loop   0x40150a
  401546:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401547:	or     al,0xbc
  401549:	add    eax,0xcc4e1876
  40154e:	dec    BYTE PTR [ecx+0x17]
  401551:	jge    0x401510
  401553:	cmp    al,0x95
  401555:	and    eax,0x5b0a395
  40155a:	aad    0x2a
  40155c:	in     al,0xec
  40155e:	cs xor al,0x44
  401561:	pop    es
  401562:	and    eax,0x1cdce63e
  401567:	cmp    esp,DWORD PTR [ebp+0x4fc39937]
  40156d:	fadd   QWORD PTR [ebx-0x59a3c0f9]
  401573:	fs jl  0x40153e
  401576:	sahf   
  401577:	inc    esp
  401578:	aas    
  401579:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40157a:	mov    dh,0x6d
  40157c:	jl     0x40152c
  40157e:	imul   ebx,DWORD PTR [ebp+0x1c],0x3c
  401582:	rcl    al,cl
  401584:	nop
  401585:	jmp    0xd5e4:0xa45ecfaa
  40158c:	and    ecx,edx
  40158e:	enter  0xe876,0xde
  401592:	pop    edx
  401593:	dec    ebp
  401594:	(bad)  
  401595:	daa    
  401596:	retf   
  401597:	test   BYTE PTR [ecx],0x64
  40159a:	inc    edx
  40159b:	pop    ss
  40159c:	pop    ds
  40159d:	jp     0x40153b
  40159f:	hlt    
  4015a0:	ss mov edi,0x49579854
  4015a6:	xchg   edx,eax
  4015a7:	pop    ecx
  4015a8:	ficom  WORD PTR [esi+0x38]
  4015ab:	imul   ecx,DWORD PTR [esi+0x2e],0xffffffbe
  4015af:	dec    eax
  4015b0:	cmc    
  4015b1:	out    dx,eax
  4015b2:	pusha  
  4015b3:	hlt    
  4015b4:	(bad)  
  4015b5:	sbb    al,0x1d
  4015b7:	mov    cl,0x21
  4015b9:	leave  
  4015ba:	push   ecx
  4015bb:	jle    0x401549
  4015bd:	or     ebx,DWORD PTR [ecx-0x555d0072]
  4015c3:	push   0x79d39d44
  4015c8:	fnsave [edi]
  4015ca:	lods   al,BYTE PTR ds:[esi]
  4015cb:	repz push ecx
  4015cd:	sbb    al,0xea
  4015cf:	dec    eax
  4015d0:	les    eax,FWORD PTR [esp+edi*1]
  4015d3:	sbb    esp,DWORD PTR ds:0x2fbdbf20
  4015d9:	iret   
  4015da:	ret    0x6f99
  4015dd:	jb     0x401626
  4015df:	sti    
  4015e0:	cdq    
  4015e1:	or     DWORD PTR [esi],esp
  4015e3:	and    al,0x5a
  4015e5:	push   esp
  4015e6:	int3   
  4015e7:	adc    al,0xb7
  4015e9:	popf   
  4015ea:	push   esp
  4015eb:	jmp    0xae02c6bb
  4015f0:	inc    ecx
  4015f1:	aas    
  4015f2:	pop    ebp
  4015f3:	add    al,BYTE PTR [ecx]
  4015f5:	cmp    al,0x64
  4015f7:	fild   WORD PTR [ecx-0xa71ec1f]
  4015fd:	adc    al,0x5e
  4015ff:	test   esp,ecx
  401601:	pcmpgtb mm6,QWORD PTR [ebx+0x20]
  401605:	in     eax,0xb1
  401607:	popf   
  401608:	ins    BYTE PTR es:[edi],dx
  401609:	add    DWORD PTR [edi-0x46b6321a],eax
  40160f:	sub    al,0xd2
  401611:	push   0xffffffd6
  401613:	bnd jnp 0x401607
  401616:	daa    
  401617:	and    ebx,DWORD PTR [edi]
  401619:	lds    ebx,FWORD PTR [edi+0x33]
  40161c:	in     al,dx
  40161d:	xchg   ebp,eax
  40161e:	jo     0x40160d
  401620:	jnp    0x4015b5
  401622:	loope  0x401613
  401624:	push   ebp
  401625:	and    eax,0xf850194c
  40162a:	xchg   esp,eax
  40162b:	psllw  mm4,mm7
  40162e:	push   ss
  40162f:	add    al,0x23
  401631:	out    dx,al
  401632:	cmp    ebx,DWORD PTR [ebx]
  401634:	jo     0x401617
  401636:	sub    bh,BYTE PTR [edi]
  401638:	mov    eax,ds:0x98f6c1
  40163d:	enter  0xc161,0x20
  401641:	push   ebx
  401642:	nop
  401643:	ror    ebx,0x1
  401646:	inc    ebx
  401647:	jecxz  0x40169a
  401649:	frstor [ebp-0x41]
  40164c:	mov    dh,0xd0
  40164e:	push   0xbb42ee3
  401653:	mov    al,ds:0x8fb13349
  401658:	cmp    DWORD PTR [ebx],esi
  40165a:	pop    eax
  40165b:	push   ss
  40165c:	pop    ebx
  40165d:	nop
  40165e:	js     0x401672
  401660:	test   BYTE PTR [eax],ah
  401662:	and    eax,0x549a3b8
  401667:	and    ah,BYTE PTR [edi+0x7b]
  40166a:	dec    ebp
  40166b:	std    
  40166c:	fstp   TBYTE PTR [ebx+edx*4+0x5ae7660c]
  401673:	pop    edx
  401674:	jmp    0x4016be
  401676:	test   edi,0xd0add5b2
  40167c:	xor    edx,DWORD PTR [edi+0x1767ef49]
  401682:	inc    eax
  401683:	ret    0x56cd
  401686:	pusha  
  401687:	jbe    0x401684
  401689:	pop    ds
  40168a:	in     eax,dx
  40168b:	sub    BYTE PTR [edi],ch
  40168d:	shl    DWORD PTR [ecx+0x754a7fe3],0x8b
  401694:	outs   dx,BYTE PTR ds:[esi]
  401695:	xchg   edx,eax
  401696:	cmp    BYTE PTR [edx+0x76],ch
  401699:	push   eax
  40169a:	fwait
  40169b:	dec    ebx
  40169c:	pop    ds
  40169d:	jo     0x40164b
  40169f:	js     0x40164c
  4016a1:	inc    eax
  4016a2:	add    BYTE PTR [edx-0x42ccfb4],0xfc
  4016a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4016aa:	leave  
  4016ab:	retf   
  4016ac:	xchg   ecx,eax
  4016ad:	fmul   st,st(7)
  4016af:	std    
  4016b0:	pop    ebx
  4016b1:	push   esi
  4016b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4016b3:	dec    edx
  4016b4:	inc    ebx
  4016b5:	jle    0x401701
  4016b7:	push   edx
  4016b8:	repnz retf 0x2ee1
  4016bc:	leave  
  4016bd:	(bad)  
  4016bf:	lods   eax,DWORD PTR ds:[esi]
  4016c0:	cmp    DWORD PTR [edx],ebx
  4016c2:	pop    ds
  4016c3:	fwait
  4016c4:	mov    ch,0x3e
  4016c6:	push   eax
  4016c7:	neg    edi
  4016c9:	into   
  4016ca:	add    BYTE PTR [eax-0x59ec6ca],bl
  4016d0:	fwait
  4016d1:	or     al,0x44
  4016d3:	or     al,0x20
  4016d5:	xor    al,0x85
  4016d7:	fs xor cl,BYTE PTR cs:[edi+0xc]
  4016dc:	pusha  
  4016dd:	inc    ebp
  4016de:	lods   eax,DWORD PTR fs:[esi]
  4016e0:	es leave 
  4016e2:	push   eax
  4016e3:	xchg   edi,eax
  4016e4:	dec    esp
  4016e5:	adc    edi,ebp
  4016e7:	shl    DWORD PTR [eax-0x249e54cf],0x45
  4016ee:	xlat   BYTE PTR ds:[ebx]
  4016ef:	arpl   WORD PTR [eax+0x5a],bx
  4016f2:	xchg   ebp,eax
  4016f3:	(bad)  
  4016f4:	pusha  
  4016f5:	ficom  DWORD PTR [esi-0x5f8ac1e4]
  4016fb:	cmp    ebx,DWORD PTR [esi-0x5d07bb8e]
  401701:	loop   0x4016d0
  401703:	pop    ebp
  401704:	xchg   edx,eax
  401705:	icebp  
  401706:	mov    edx,0x2bd1acc6
  40170b:	adc    al,0xb6
  40170d:	adc    eax,0x9c2eeb46
  401712:	push   ecx
  401713:	fld    QWORD PTR [ebp+0x74]
  401716:	loop   0x40169e
  401718:	cmp    esp,DWORD PTR [ebx+0x4646bba6]
  40171e:	stos   DWORD PTR es:[edi],eax
  40171f:	hlt    
  401720:	and    dl,bl
  401722:	sbb    al,0x19
  401724:	xor    al,0x87
  401726:	sub    bl,cl
  401728:	and    DWORD PTR [edi+0x3e],ecx
  40172b:	cmp    al,0xcb
  40172d:	sub    eax,0x7a385311
  401732:	pop    esp
  401733:	les    ebx,FWORD PTR [edi+ebx*2-0x51]
  401737:	pop    ds
  401738:	repnz cmc 
  40173a:	or     al,0x75
  40173c:	push   0xfef1feac
  401741:	inc    edx
  401742:	inc    esp
  401743:	add    eax,0x3928ce02
  401748:	sbb    ebp,DWORD PTR [edi+0x4f]
  40174b:	scas   al,BYTE PTR es:[edi]
  40174c:	mov    al,ds:0x1f6f124
  401751:	out    dx,al
  401752:	gs aam 0x30
  401755:	aaa    
  401756:	daa    
  401757:	jmp    0x39867312
  40175c:	repz or BYTE PTR [edx+eax*8+0x59],0xac
  401762:	(bad)  
  401763:	(bad)  
  401764:	pop    ecx
  401765:	push   esp
  401766:	in     eax,0x3d
  401768:	mov    ah,0xaf
  40176a:	xchg   DWORD PTR [esi+esi*2],esi
  40176d:	xchg   ebp,eax
  40176e:	sub    al,0x81
  401770:	xchg   ecx,eax
  401771:	adc    BYTE PTR [esi],ah
  401773:	sbb    bh,bh
  401775:	wrmsr  
  401777:	call   edx
  401779:	or     dh,BYTE PTR [edx]
  40177b:	and    eax,DWORD PTR [esp+ebx*1-0x67]
  40177f:	push   es
  401780:	in     eax,0x7e
  401782:	arpl   cx,ax
  401784:	cdq    
  401785:	into   
  401786:	les    esp,FWORD PTR ds:0xe0b4ab68
  40178c:	push   edx
  40178d:	loop   0x401735
  40178f:	mov    eax,0x2a677e5e
  401794:	and    esi,DWORD PTR [ebp+0x47807b32]
  40179a:	xchg   esp,eax
  40179b:	pop    edx
  40179c:	shl    bh,0xef
  40179f:	rcr    BYTE PTR [ecx-0x58],1
  4017a2:	fwait
  4017a3:	dec    edx
  4017a4:	or     ebx,esp
  4017a6:	xchg   bh,dh
  4017a8:	add    eax,0x8be097a8
  4017ad:	jle    0x4017db
  4017af:	mov    WORD PTR [ebp+0x63],?
  4017b2:	xchg   ecx,eax
  4017b3:	sahf   
  4017b4:	dec    edx
  4017b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4017b6:	ja     0x4017f8
  4017b8:	or     ch,bh
  4017ba:	cmp    eax,0xe276f673
  4017bf:	mov    ebp,DWORD PTR ds:0xa845897a
  4017c5:	sbb    ecx,edi
  4017c7:	mov    DWORD PTR [ebp-0x54],ecx
  4017ca:	or     ecx,0x1b77
  4017d0:	or     DWORD PTR [ebp-0x58],0xcb78a05a
  4017d7:	adc    DWORD PTR ds:0x428481,edi
  4017dd:	or     DWORD PTR [ebp-0x54],0x9c2b8ae8
  4017e4:	lea    eax,[ebp+0x20]
  4017e7:	cmp    DWORD PTR ds:0x428479,0x0
  4017ee:	mov    edi,DWORD PTR ds:0x428595
  4017f4:	movzx  ecx,WORD PTR ds:0x428389
  4017fb:	mov    ecx,0x7757
  401800:	jmp    0x401860
  401805:	mov    ecx,0x59da
  40180a:	cmp    DWORD PTR ds:0x428479,0x0
  401811:	ja     0x401846
  401817:	push   0x4282c5
  40181c:	call   DWORD PTR ds:0x42e09c
  401822:	xor    edx,edx
  401824:	or     edx,DWORD PTR ds:0x428385
  40182a:	xor    DWORD PTR ds:0x4284f5,edx
  401830:	mov    edi,DWORD PTR ds:0x428465
  401836:	or     DWORD PTR ds:0x4284fd,edi
  40183c:	or     DWORD PTR ds:0x428375,0x7336
  401846:	sbb    DWORD PTR ds:0x428479,0x42f3
  401850:	mov    DWORD PTR ds:0x4285a9,0x382b
  40185a:	inc    DWORD PTR ds:0x4285b1
  401860:	mov    DWORD PTR [ebp-0xc],eax
  401863:	mov    eax,ds:0x4225b0
  401868:	mov    ecx,DWORD PTR [ebp-0xc]
  40186b:	sbb    DWORD PTR ds:0x428495,0xc55
  401875:	mov    eax,DWORD PTR [eax]
  401877:	xor    edx,edi
  401879:	add    eax,DWORD PTR [ecx]
  40187b:	mov    edi,0x32de6d5d
  401880:	mov    ecx,DWORD PTR ds:0x428491
  401886:	sbb    DWORD PTR ds:0x42843d,ecx
  40188c:	mov    DWORD PTR [ebp-0x14],eax
  40188f:	cmp    DWORD PTR ds:0x428599,0x0
  401896:	not    ecx
  401898:	mov    DWORD PTR ds:0x4284a9,0x2a4e
  4018a2:	mov    edx,DWORD PTR ds:0x42857d
  4018a8:	jmp    0x401900
  4018ad:	mov    DWORD PTR ds:0x428369,0x4cb6
  4018b7:	mov    eax,0x4273
  4018bc:	cmp    DWORD PTR ds:0x428599,0x0
  4018c3:	jle    0x4018e8
  4018c9:	push   DWORD PTR [ebp-0x14]
  4018cc:	push   0x428195
  4018d1:	push   0x428221
  4018d6:	call   DWORD PTR ds:0x42e22c
  4018dc:	add    ecx,edx
  4018de:	or     DWORD PTR ds:0x428481,0x4284a1
  4018e8:	and    ecx,0x1796
  4018ee:	sub    edx,0x208e
  4018f4:	xor    DWORD PTR ds:0x428495,edx
  4018fa:	sub    DWORD PTR ds:0x42849d,ebx
  401900:	mov    eax,DWORD PTR [ebp+0x18]
  401903:	mov    ecx,DWORD PTR [ebp+0x1c]
  401906:	cmp    DWORD PTR ds:0x428449,0x0
  40190d:	movzx  edx,BYTE PTR ds:0x428445
  401914:	mov    edx,DWORD PTR ds:0x428521
  40191a:	movzx  edx,WORD PTR ds:0x4285a9
  401921:	jmp    0x401971
  401926:	mov    DWORD PTR ds:0x428595,0x405c
  401930:	cmp    DWORD PTR ds:0x428449,0x0
  401937:	jge    0x401961
  40193d:	push   DWORD PTR [ebp-0xc]
  401940:	push   DWORD PTR [ebp-0x14]
  401943:	push   0x1391
  401948:	push   0x7a4e
  40194d:	call   DWORD PTR ds:0x42e0a0
  401953:	neg    edx
  401955:	add    edx,0x51c2
  40195b:	sbb    edx,DWORD PTR ds:0x428395
  401961:	adc    DWORD PTR ds:0x428591,ecx
  401967:	sub    DWORD PTR ds:0x428395,0x3064
  401971:	shrd   eax,ecx,0x2
  401975:	shr    ecx,0x2
  401978:	cmp    DWORD PTR ds:0x4284a5,0x0
  40197f:	mov    ecx,DWORD PTR ds:0x42847d
  401985:	mov    ecx,0x3508
  40198a:	not    edx
  40198c:	jmp    0x4019d4
  401991:	mov    DWORD PTR ds:0x428585,edi
  401997:	mov    DWORD PTR ds:0x428469,0x1955
  4019a1:	cmp    DWORD PTR ds:0x4284a5,0x0
  4019a8:	je     0x4019cc
  4019ae:	push   0x428273
  4019b3:	push   0x400000
  4019b8:	call   DWORD PTR ds:0x42e0a4
  4019be:	neg    edx
  4019c0:	xor    DWORD PTR ds:0x428371,0x55e7
  4019ca:	sub    ecx,ecx
  4019cc:	not    ecx
  4019ce:	and    ecx,DWORD PTR ds:0x428471
  4019d4:	mov    ecx,DWORD PTR [ebp+0x18]
  4019d7:	mov    edx,DWORD PTR [ebp+0x1c]
  4019da:	add    DWORD PTR ds:0x42850d,0x428599
  4019e4:	xor    eax,edi
  4019e6:	xor    edx,edx
  4019e8:	or     edx,eax
  4019ea:	and    eax,0x837
  4019ef:	mov    DWORD PTR [ebp-0x3c],edx
  4019f2:	jmp    0x401d93
  4019f7:	inc    DWORD PTR [edx+0x3c]
  4019fa:	pop    ebx
  4019fb:	mov    esp,0xf09aa0bb
  401a00:	fisubr DWORD PTR [edx+0x50d5ece3]
  401a06:	sahf   
  401a07:	mov    esi,0xbdbebecc
  401a0c:	les    edi,FWORD PTR [esi-0x2e35f42]
  401a12:	mov    edi,ecx
  401a14:	loope  0x401a7e
  401a16:	add    bl,dl
  401a18:	ja     0x401a78
  401a1a:	test   eax,0x32356551
  401a1f:	repnz les edx,FWORD PTR [eax+0x65bf5f21]
  401a26:	push   DWORD PTR ds:0xb839fae
  401a2c:	push   0xffffff9b
  401a2e:	jl     0x4019be
  401a30:	jecxz  0x4019c4
  401a32:	push   0x527747e
  401a37:	imul   ebp,DWORD PTR [ebp+0x36d25ceb],0xffffffba
  401a3e:	inc    eax
  401a3f:	pop    edi
  401a40:	xchg   edx,eax
  401a41:	daa    
  401a42:	and    ebx,esp
  401a44:	pop    ebp
  401a45:	out    dx,eax
  401a46:	fs inc eax
  401a48:	jp     0x401a46
  401a4a:	pushf  
  401a4b:	in     eax,dx
  401a4c:	mov    eax,0x2b84e963
  401a51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a52:	cmp    DWORD PTR [edx+0x72636912],ecx
  401a58:	sbb    eax,0xafdac58d
  401a5d:	aas    
  401a5e:	lods   eax,DWORD PTR ds:[esi]
  401a5f:	std    
  401a60:	sub    eax,0x62546810
  401a65:	sub    DWORD PTR [eax-0x13],ebp
  401a68:	pusha  
  401a69:	sub    al,0xfb
  401a6b:	lods   eax,DWORD PTR ds:[esi]
  401a6c:	out    0x10,al
  401a6e:	mov    esp,0x279b9681
  401a73:	in     al,0xe8
  401a75:	out    0x27,eax
  401a77:	out    dx,al
  401a78:	sub    eax,0x5c4097fb
  401a7d:	push   edi
  401a7e:	cmc    
  401a7f:	push   ebp
  401a80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a81:	push   cs
  401a82:	enter  0x3b74,0x2c
  401a86:	push   ds
  401a87:	jecxz  0x401a20
  401a89:	adc    DWORD PTR [edx-0x6f],eax
  401a8c:	jnp    0x401a6e
  401a8e:	in     eax,dx
  401a8f:	pop    ss
  401a90:	in     al,0xf5
  401a92:	test   al,0x8f
  401a94:	inc    esi
  401a95:	ret    0x73f0
  401a98:	mov    edi,0xb2eabe43
  401a9d:	imul   eax,DWORD PTR [ecx],0xffffff8f
  401aa0:	sahf   
  401aa1:	mov    ebx,0xc3039f39
  401aa6:	test   DWORD PTR [ebp+0x4ab0bde8],esi
  401aac:	in     eax,0x22
  401aae:	fcmovbe st,st(5)
  401ab0:	pop    ebp
  401ab1:	sti    
  401ab2:	inc    edx
  401ab3:	cmp    edi,eax
  401ab5:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ab7:	mov    DWORD PTR [edi],edi
  401ab9:	jmp    0x401ae6
  401abb:	xchg   DWORD PTR [ebp-0x30],esp
  401abe:	push   ebx
  401abf:	nop
  401ac0:	mov    edi,0x4635e23d
  401ac5:	pop    ebp
  401ac6:	xchg   ecx,eax
  401ac7:	inc    eax
  401ac8:	jecxz  0x401ac9
  401aca:	loopne 0x401a76
  401acc:	add    eax,0x16875e9d
  401ad1:	cmc    
  401ad2:	jb     0x401abd
  401ad4:	ror    BYTE PTR [ebp+0x48193bc5],cl
  401ada:	jl     0x401b32
  401adc:	ja     0x401adc
  401ade:	cmp    esp,edi
  401ae0:	mov    ebx,ecx
  401ae2:	pop    ebx
  401ae3:	in     eax,dx
  401ae4:	inc    ebp
  401ae5:	xlat   BYTE PTR ds:[ebx]
  401ae6:	repz or al,0xf
  401ae9:	in     al,0x76
  401aeb:	sub    DWORD PTR [ebp+0x12],edi
  401aee:	daa    
  401aef:	sbb    ecx,edi
  401af1:	lock jbe 0x401b07
  401af4:	lea    esi,[ecx+edi*8-0x79ddd35e]
  401afb:	inc    eax
  401afc:	dec    edi
  401afd:	pop    edi
  401afe:	cld    
  401aff:	out    0x27,eax
  401b01:	scas   al,BYTE PTR es:[edi]
  401b02:	leave  
  401b03:	mov    ebx,0x6d11e995
  401b08:	push   edi
  401b09:	in     eax,dx
  401b0a:	aam    0xed
  401b0c:	add    DWORD PTR [esi+0x6a],edx
  401b0f:	popa   
  401b10:	jp     0x401b77
  401b12:	out    dx,eax
  401b13:	jl     0x401ae3
  401b15:	addr16 mov bh,0x60
  401b18:	js     0x401b52
  401b1a:	xchg   esp,eax
  401b1b:	cmp    BYTE PTR [eax],dl
  401b1d:	jne    0x401b71
  401b1f:	imul   BYTE PTR [eax]
  401b21:	jns    0x401adc
  401b23:	daa    
  401b24:	and    BYTE PTR [edi+ebp*2+0x49d6f6b2],ch
  401b2b:	jmp    0x401b03
  401b2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b2e:	jnp    0x401b76
  401b30:	mov    cl,0xf6
  401b32:	(bad)  
  401b33:	xchg   ebx,eax
  401b34:	bt     edi,edx
  401b37:	dec    ecx
  401b38:	sub    bl,BYTE PTR [ebp+0x27]
  401b3b:	mov    edi,0xc996c58d
  401b40:	stc    
  401b41:	mov    al,0xc
  401b43:	push   ebx
  401b44:	or     DWORD PTR [eax+esi*8-0x785a6e9b],ebx
  401b4b:	lods   al,BYTE PTR ds:[esi]
  401b4c:	fisubr DWORD PTR [ebx+0x24]
  401b4f:	push   cs
  401b50:	int    0x5
  401b52:	sar    BYTE PTR [edx-0x4f],1
  401b55:	pop    ebx
  401b56:	fwait
  401b57:	push   edx
  401b58:	adc    BYTE PTR [edx+edi*4-0x3a],0xa4
  401b5d:	xor    eax,0x8ff2e1e4
  401b62:	sbb    DWORD PTR [edx+0x67],esi
  401b65:	push   ebp
  401b66:	xchg   ebx,eax
  401b67:	jmp    0xa83f1c25
  401b6c:	jo     0x401b22
  401b6e:	xchg   ecx,eax
  401b6f:	rcl    BYTE PTR [edi+ebp*1+0x7a],cl
  401b73:	not    DWORD PTR [ebx]
  401b75:	ins    DWORD PTR es:[edi],dx
  401b76:	sbb    ecx,DWORD PTR [eax]
  401b78:	js     0x401bb5
  401b7a:	push   ebp
  401b7b:	or     BYTE PTR [ecx],al
  401b7d:	aam    0xf0
  401b7f:	xor    esp,DWORD PTR [eax+0x2]
  401b82:	imul   ecx,DWORD PTR [eax-0x6a],0xa0e39804
  401b89:	cmp    bl,BYTE PTR [esi]
  401b8b:	jmp    0x401bcf
  401b8d:	les    esp,FWORD PTR [esi-0x67da6203]
  401b93:	pop    ebp
  401b94:	and    ch,BYTE PTR [ecx-0x52534b0a]
  401b9a:	jecxz  0x401bb4
  401b9c:	or     eax,esi
  401b9e:	sar    ah,1
  401ba0:	mov    edx,0xca60021f
  401ba5:	add    al,0xbb
  401ba7:	inc    eax
  401ba8:	mov    edi,0x34fa3c97
  401bad:	call   0x58909ad8
  401bb2:	pop    esi
  401bb3:	(bad)  
  401bb5:	into   
  401bb6:	nop
  401bb7:	mov    cl,0x71
  401bb9:	jb     0x401b56
  401bbb:	int3   
  401bbc:	add    cl,BYTE PTR [ebx]
  401bbe:	imul   DWORD PTR [esi]
  401bc0:	sbb    BYTE PTR [eax],dh
  401bc2:	out    0x49,eax
  401bc4:	loop   0x401bee
  401bc6:	and    bh,ch
  401bc8:	mul    DWORD PTR [edi]
  401bca:	stc    
  401bcb:	fimul  DWORD PTR [ebp+0x1694d540]
  401bd1:	int3   
  401bd2:	pop    ecx
  401bd3:	sub    eax,DWORD PTR [edi]
  401bd5:	in     al,dx
  401bd6:	cs (bad) 
  401bd8:	and    al,0x36
  401bda:	mov    dl,0x2a
  401bdc:	push   ebx
  401bdd:	dec    esp
  401bde:	stos   DWORD PTR es:[edi],eax
  401bdf:	out    0x51,eax
  401be1:	pop    edx
  401be2:	fst    QWORD PTR [ebp-0x25]
  401be5:	les    ebp,FWORD PTR ds:0x82a03714
  401beb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401bec:	push   0x74
  401bee:	sub    al,0xe9
  401bf0:	int    0x49
  401bf2:	jne    0x401bed
  401bf4:	sbb    ch,bh
  401bf6:	pop    es
  401bf7:	adc    ebx,ebp
  401bf9:	mov    ebp,0xc81964f6
  401bfe:	stos   BYTE PTR es:[edi],al
  401bff:	arpl   WORD PTR [ebx-0x44020337],ax
  401c05:	cmp    eax,0x1f27cbfd
  401c0a:	(bad)  [esi]
  401c0c:	push   0xae299cfa
  401c11:	xor    al,bh
  401c13:	inc    ebx
  401c14:	jmp    0xa69a:0xa06a578f
  401c1b:	push   es
  401c1c:	xor    al,0x68
  401c1e:	addr16 dec ebx
  401c20:	sti    
  401c21:	or     eax,0x704ca9fc
  401c26:	mov    bh,0x5d
  401c28:	mov    edi,edi
  401c2a:	xor    DWORD PTR [ecx-0x48],ecx
  401c2d:	(bad)  
  401c2e:	mov    al,0xfc
  401c30:	iret   
  401c31:	data16 sbb BYTE PTR [ecx+0x45],ah
  401c35:	adc    al,0x9c
  401c37:	sbb    al,0xfe
  401c39:	int3   
  401c3a:	mov    bh,0x2e
  401c3c:	inc    esi
  401c3d:	ja     0x401c5f
  401c3f:	and    dh,BYTE PTR [ecx]
  401c41:	call   0xc8be407e
  401c46:	mov    bl,0x87
  401c48:	fcomp  DWORD PTR [esi]
  401c4a:	xchg   edi,eax
  401c4b:	pop    ebp
  401c4c:	xor    ah,BYTE PTR ds:0x594c3355
  401c52:	pusha  
  401c53:	jo     0x401bf0
  401c55:	add    eax,0x8cc91e54
  401c5a:	iret   
  401c5b:	repz push cs
  401c5d:	dec    ebp
  401c5e:	xchg   esi,eax
  401c5f:	rcl    BYTE PTR [esi+0x23],cl
  401c62:	jmp    0xb0fb:0xf842f248
  401c69:	xchg   DWORD PTR [edi],esp
  401c6b:	and    al,0x78
  401c6d:	pushf  
  401c6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c6f:	hlt    
  401c70:	ret    
  401c71:	sbb    bl,bl
  401c73:	xor    BYTE PTR [eax+0x70],al
  401c76:	repz cmp BYTE PTR [edx-0x1ca8bffe],0x63
  401c7e:	fstp   TBYTE PTR [esi]
  401c80:	jl     0x401cfc
  401c82:	xchg   DWORD PTR [edx-0x50],ebp
  401c85:	icebp  
  401c86:	stc    
  401c87:	xchg   esi,eax
  401c88:	jmp    0x401c1b
  401c8a:	stc    
  401c8b:	add    al,0xa5
  401c8d:	sbb    al,0xad
  401c8f:	dec    ecx
  401c90:	pop    ds
  401c91:	pop    esi
  401c92:	fbld   TBYTE PTR [esi]
  401c94:	int    0x65
  401c96:	into   
  401c97:	push   ss
  401c98:	mov    WORD PTR [ebx-0x6c0b075b],gs
  401c9e:	rol    BYTE PTR [ecx],1
  401ca0:	sub    ah,ch
  401ca2:	push   es
  401ca3:	cld    
  401ca4:	cmp    edi,DWORD PTR [edi-0x35]
  401ca7:	mov    ch,0x17
  401ca9:	pop    esp
  401caa:	push   ecx
  401cab:	and    eax,0x4ad5eee
  401cb0:	sti    
  401cb1:	test   BYTE PTR [ebx+0x62],bl
  401cb4:	and    al,0x16
  401cb6:	in     eax,0x55
  401cb8:	cdq    
  401cb9:	cmc    
  401cba:	cmc    
  401cbb:	pop    edx
  401cbc:	ja     0x401c46
  401cbe:	or     al,0x7e
  401cc0:	(bad)
  401cc4:	in     eax,dx
  401cc5:	adc    BYTE PTR [edx],ch
  401cc7:	test   dh,0xae
  401cca:	(bad)  
  401ccb:	sub    DWORD PTR [edi-0x5e],eax
  401cce:	push   ecx
  401ccf:	push   0x48cf4d66
  401cd4:	cmp    al,BYTE PTR [edi+ebp*4-0x681f7969]
  401cdb:	fbld   TBYTE PTR [esi+eiz*2]
  401cde:	loopne 0x401d47
  401ce0:	call   0x5962:0x6bfc34f8
  401ce7:	fstp   DWORD PTR [edi]
  401ce9:	adc    al,0x91
  401ceb:	lods   eax,DWORD PTR ds:[esi]
  401cec:	(bad)  
  401ced:	push   ebx
  401cee:	push   es
  401cef:	sub    ebx,esp
  401cf1:	push   edi
  401cf2:	xchg   esp,eax
  401cf3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401cf4:	adc    DWORD PTR [eax],esi
  401cf6:	jmp    0x88fe:0x11cad9f9
  401cfd:	(bad)  
  401cfe:	stc    
  401cff:	and    esi,esi
  401d01:	sub    al,0x88
  401d03:	fucomi st,st(4)
  401d05:	dec    ebp
  401d06:	inc    ecx
  401d07:	xlat   BYTE PTR ds:[ebx]
  401d08:	lods   eax,DWORD PTR ds:[esi]
  401d09:	and    dh,ah
  401d0b:	jbe    0x401d32
  401d0d:	scas   eax,DWORD PTR es:[edi]
  401d0e:	fsub   DWORD PTR [ebp*1+0x129bc53a]
  401d15:	adc    eax,0x4b01ef1b
  401d1a:	clc    
  401d1b:	outs   dx,DWORD PTR ds:[esi]
  401d1c:	adc    eax,0xc176c22a
  401d21:	mov    edx,eax
  401d23:	aas    
  401d24:	mov    ecx,0x5e85d570
  401d29:	scas   eax,DWORD PTR es:[edi]
  401d2a:	rol    DWORD PTR [edi+esi*8-0x11],1
  401d2e:	mov    dl,0x72
  401d30:	pushf  
  401d31:	test   DWORD PTR [ebx],ebx
  401d33:	aaa    
  401d34:	hlt    
  401d35:	pop    esi
  401d36:	(bad)  [edx]
  401d38:	adc    al,0x97
  401d3a:	xor    eax,0x563c5213
  401d3f:	xor    eax,0x2740a981
  401d44:	mov    eax,0xa94a8628
  401d49:	mov    edx,0x8b25f185
  401d4e:	push   edi
  401d4f:	sub    al,0xb0
  401d51:	jle    0x401d70
  401d53:	xchg   esp,eax
  401d54:	lds    esp,FWORD PTR [edx+0x56]
  401d57:	out    dx,al
  401d58:	sbb    al,0xad
  401d5a:	int    0x24
  401d5c:	mov    fs,WORD PTR [edx-0x4bd5b1dd]
  401d62:	push   esi
  401d63:	xchg   bx,ax
  401d65:	and    BYTE PTR [ecx+0x7c0c77c3],al
  401d6b:	scas   al,BYTE PTR es:[edi]
  401d6c:	jge    0x401d70
  401d6e:	in     eax,dx
  401d6f:	neg    bl
  401d71:	ret    
  401d72:	outs   dx,DWORD PTR ds:[esi]
  401d73:	jb     0x401daa
  401d75:	mov    edx,0xd26902cd
  401d7a:	or     al,dh
  401d7c:	xchg   esi,eax
  401d7d:	jnp    0x401de7
  401d7f:	lods   al,BYTE PTR ds:[esi]
  401d80:	sti    
  401d81:	call   eax
  401d83:	cwde   
  401d84:	or     DWORD PTR [eax-0x6e],esp
  401d87:	jg     0x401d79
  401d89:	mov    al,ds:0xf25848a5
  401d8e:	mov    dl,0xf9
  401d90:	ja     0x401d94
  401d92:	rol    edi,1
  401d94:	inc    ebp
  401d95:	nop
  401d96:	push   ebp
  401d97:	sub    al,0x0
  401d99:	add    bh,al
  401d9b:	inc    ebp
  401d9c:	xchg   esp,eax
  401d9d:	outs   dx,DWORD PTR ds:[esi]
  401d9e:	inc    ebp
  401d9f:	add    BYTE PTR [eax],al
  401da1:	mov    DWORD PTR [ebp-0x70],0x78a6
  401da8:	mov    DWORD PTR [ebp-0x6c],0x188
  401daf:	sbb    DWORD PTR ds:0x428455,ecx
  401db5:	mov    DWORD PTR [ebp-0x70],0x5b3f
  401dbc:	mov    DWORD PTR [ebp-0x6c],0x3219
  401dc3:	add    DWORD PTR ds:0x42858d,0x3158
  401dcd:	mov    DWORD PTR [ebp-0x70],0x231c
  401dd4:	add    eax,DWORD PTR ds:0x42843d
  401dda:	mov    DWORD PTR [ebp-0x6c],0x1337
  401de1:	sub    DWORD PTR ds:0x4283a1,edx
  401de7:	mov    DWORD PTR [ebp-0x70],0x7593
  401dee:	mov    DWORD PTR [ebp-0x6c],0x11b8
  401df5:	movzx  eax,BYTE PTR ds:0x42837d
  401dfc:	and    DWORD PTR ds:0x4285a5,eax
  401e02:	mov    DWORD PTR [ebp-0x70],0x3b72
  401e09:	mov    DWORD PTR [ebp-0x6c],0x3abc
  401e10:	cmp    DWORD PTR ds:0x428445,0x0
  401e17:	mov    DWORD PTR ds:0x42857d,0x646
  401e21:	mov    DWORD PTR ds:0x428455,0x14a3
  401e2b:	jmp    0x401eb8
  401e30:	movzx  eax,WORD PTR ds:0x428521
  401e37:	mov    DWORD PTR ds:0x428445,ebx
  401e3d:	cmp    DWORD PTR ds:0x428445,0x0
  401e44:	jle    0x401e86
  401e4a:	push   DWORD PTR [ebp-0x20]
  401e4d:	push   0x428273
  401e52:	push   0x428177
  401e57:	push   0x400000
  401e5c:	call   DWORD PTR ds:0x42e230
  401e62:	xor    DWORD PTR ds:0x42857d,0x4536
  401e6c:	sub    DWORD PTR ds:0x428505,edi
  401e72:	sbb    DWORD PTR ds:0x42846d,0x42857d
  401e7c:	add    DWORD PTR ds:0x428495,0x5ddd
  401e86:	sbb    DWORD PTR ds:0x4285a5,0x428455
  401e90:	adc    DWORD PTR ds:0x428599,0x5ea9
  401e9a:	sub    DWORD PTR ds:0x428589,0x428575
  401ea4:	add    DWORD PTR ds:0x428375,0x5dac
  401eae:	add    DWORD PTR ds:0x42836d,0x46fc
  401eb8:	mov    DWORD PTR [ebp-0x68],0x1b45
  401ebf:	xor    DWORD PTR ds:0x428461,edx
  401ec5:	mov    DWORD PTR [ebp-0x64],0x767d
  401ecc:	or     DWORD PTR ds:0x42857d,edi
  401ed2:	mov    DWORD PTR [ebp-0x60],0x1d973857
  401ed9:	mov    DWORD PTR [ebp-0x5c],0x0
  401ee0:	mov    DWORD PTR [ebp-0x34],0x599d
  401ee7:	xor    eax,DWORD PTR ds:0x4284f5
  401eed:	mov    DWORD PTR [ebp-0x2c],0x165d
  401ef4:	mov    DWORD PTR [ebp-0x1c],0xc51
  401efb:	xor    eax,eax
  401efd:	add    eax,DWORD PTR ds:0x428389
  401f03:	or     eax,DWORD PTR ds:0x428465
  401f09:	mov    ds:0x428389,eax
  401f0e:	mov    DWORD PTR [ebp-0x44],0x3f55
  401f15:	cmp    DWORD PTR ds:0x42858d,0x0
  401f1c:	mov    DWORD PTR ds:0x428365,0xd43
  401f26:	mov    DWORD PTR ds:0x4285a9,0x5a6d
  401f30:	mov    DWORD PTR ds:0x42844d,edx
  401f36:	jmp    0x40200c
  401f3b:	mov    eax,0x36f8
  401f40:	mov    DWORD PTR ds:0x4284a5,edx
  401f46:	cmp    DWORD PTR ds:0x42858d,0x0
  401f4d:	jg     0x401f82
  401f53:	push   0x4521
  401f58:	push   0x4861
  401f5d:	push   DWORD PTR [ebp-0x20]
  401f60:	push   0x428268
  401f65:	push   DWORD PTR [ebp-0x28]
  401f68:	call   DWORD PTR ds:0x42e0a8
  401f6e:	adc    DWORD PTR ds:0x428475,0x7cd6
  401f78:	sbb    DWORD PTR ds:0x428521,0xfa0
  401f82:	adc    DWORD PTR ds:0x428481,0x42836d
  401f8c:	add    DWORD PTR ds:0x428389,0x4284a1
  401f96:	cmp    DWORD PTR ds:0x42857d,0x0
  401f9d:	mov    DWORD PTR ds:0x4284a5,0x6252
  401fa7:	mov    DWORD PTR ds:0x4283a1,0x40d0
  401fb1:	jmp    0x40200c
  401fb6:	mov    DWORD PTR ds:0x428585,edx
  401fbc:	cmp    DWORD PTR ds:0x42857d,0x0
  401fc3:	ja     0x401fee
  401fc9:	push   0x428195
  401fce:	call   DWORD PTR ds:0x42e234
  401fd4:	and    DWORD PTR ds:0x42838d,0x428529
  401fde:	sbb    DWORD PTR ds:0x428469,0x5068
  401fe8:	xor    DWORD PTR ds:0x428521,edi
  401fee:	and    DWORD PTR ds:0x428511,0x4285ad
  401ff8:	xor    DWORD PTR ds:0x428529,0x4285a5
  402002:	add    DWORD PTR ds:0x428575,0xd3c
  40200c:	mov    DWORD PTR [ebp-0x44],0x1
  402013:	mov    DWORD PTR [ebp-0x44],0x42e8
  40201a:	mov    eax,DWORD PTR [ebp-0x60]
  40201d:	add    DWORD PTR ds:0x428385,0x4284fd
  402027:	shl    ecx,0x1e
  40202a:	mov    ecx,DWORD PTR [ebp-0x5c]
  40202d:	add    DWORD PTR ds:0x428505,0x5f4
  402037:	push   ecx
  402038:	adc    DWORD PTR ds:0x42852d,0x428379
  402042:	push   eax
  402043:	or     DWORD PTR ds:0x428531,0x42850d
  40204d:	push   0xddf
  402052:	sbb    DWORD PTR ds:0x428391,0x218d
  40205c:	jmp    0x4023fd
  402061:	mov    ebp,0x2b7a2504
  402066:	jl     0x401ffa
  402068:	mov    esp,0x9e22191a
  40206d:	jae    0x402066
  40206f:	stos   BYTE PTR es:[edi],al
  402070:	jecxz  0x40202f
  402072:	sar    BYTE PTR [esi-0x413b4242],cl
  402078:	mov    esi,0x927a923e
  40207d:	shl    ch,cl
  40207f:	and    eax,0x5cd31b
  402084:	fwait
  402085:	inc    eax
  402086:	or     DWORD PTR [edx],edi
  402088:	daa    
  402089:	aad    0xad
  40208b:	in     al,0xb5
  40208d:	jle    0x402047
  40208f:	cs xchg ecx,eax
  402091:	sbb    al,0xf4
  402093:	out    dx,eax
  402094:	iret   
  402095:	inc    BYTE PTR [edx]
  402097:	sub    DWORD PTR [ebp+0x49],0xffffffc1
  40209b:	ins    DWORD PTR es:[edi],dx
  40209c:	jae    0x4020ef
  40209e:	push   esp
  40209f:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  4020a1:	pop    ebp
  4020a2:	out    dx,al
  4020a3:	test   eax,0x223240c5
  4020a8:	mov    dh,0xcf
  4020aa:	mov    ebx,0xe899e308
  4020af:	inc    eax
  4020b0:	ficom  WORD PTR [edx+0x7b]
  4020b3:	iret   
  4020b4:	inc    ebx
  4020b5:	retf   
  4020b6:	or     eax,0xa4dcd898
  4020bb:	xor    ebx,DWORD PTR [ebp+0xdff2a5c]
  4020c1:	cmp    al,0x24
  4020c3:	jb     0x402115
  4020c5:	pop    esp
  4020c6:	or     BYTE PTR [esi],ch
  4020c8:	jl     0x40211a
  4020ca:	cmp    eax,0x6d69d2ad
  4020cf:	xor    al,0x57
  4020d1:	push   0xef3362a
  4020d6:	int    0xfa
  4020d8:	outs   dx,DWORD PTR ds:[esi]
  4020d9:	or     esp,DWORD PTR [eax-0x33]
  4020dc:	aad    0x4a
  4020de:	pop    ecx
  4020df:	dec    esp
  4020e0:	inc    esp
  4020e1:	repz and al,0x4f
  4020e4:	inc    ebp
  4020e5:	lock jmp 0x24925725
  4020eb:	xchg   DWORD PTR [edi-0x6161e67c],eax
  4020f1:	ss call 0x61b5:0xe2703c3c
  4020f9:	in     al,0x8b
  4020fb:	jb     0x40214d
  4020fd:	scas   eax,DWORD PTR es:[edi]
  4020fe:	xor    ah,BYTE PTR [edx+edx*8-0x4]
  402102:	iret   
  402103:	or     al,0xf9
  402105:	add    al,0x4d
  402107:	std    
  402108:	cwde   
  402109:	rol    bh,0x1f
  40210c:	add    dl,BYTE PTR ds:0x7112bb2a
  402112:	in     al,dx
  402113:	xor    ebx,ebx
  402115:	sub    BYTE PTR [ecx+ebx*8],al
  402118:	iret   
  402119:	adc    DWORD PTR [edx+ebx*1-0x25],esp
  40211d:	(bad)  
  40211e:	mov    edx,0xd5e622c2
  402123:	pop    ebx
  402124:	jp     0x4020af
  402126:	xchg   esi,eax
  402127:	rcl    BYTE PTR [esi+0x37],cl
  40212a:	popf   
  40212b:	pushf  
  40212c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40212d:	mov    BYTE PTR [esi+ebp*1],0x53
  402131:	jb     0x4021b0
  402133:	sbb    cl,BYTE PTR [esi]
  402135:	sub    dl,al
  402137:	std    
  402138:	mov    bh,0x41
  40213a:	cmp    eax,esi
  40213c:	stos   BYTE PTR es:[edi],al
  40213d:	ja     0x40214d
  40213f:	cs push ss
  402141:	leave  
  402142:	test   BYTE PTR [ecx+0x32455246],0xe9
  402149:	fs popa 
  40214b:	clc    
  40214c:	outs   dx,DWORD PTR ds:[esi]
  40214d:	xchg   edi,eax
  40214e:	sbb    ch,BYTE PTR [edi]
  402150:	add    DWORD PTR [ecx-0x20],ecx
  402153:	je     0x402118
  402155:	or     bl,al
  402157:	cmp    BYTE PTR [ebx+0x7f],ch
  40215a:	xchg   ecx,eax
  40215b:	push   0x51adc5f4
  402160:	push   edx
  402161:	or     al,0x0
  402163:	fldcw  WORD PTR [esi]
  402165:	lods   al,BYTE PTR ds:[esi]
  402166:	push   edi
  402167:	push   ecx
  402168:	jmp    FWORD PTR [edi+0x74abb7e6]
  40216e:	in     eax,dx
  40216f:	xor    eax,0xffffff9d
  402172:	lods   al,BYTE PTR ds:[esi]
  402173:	ror    dl,cl
  402175:	push   cs
  402176:	dec    eax
  402177:	test   BYTE PTR [edx],0x8a
  40217a:	aas    
  40217b:	mov    ds:0xd2265705,al
  402180:	push   edx
  402181:	iret   
  402182:	dec    edi
  402183:	hlt    
  402184:	imul   esi,DWORD PTR [ecx],0x50
  402187:	dec    esp
  402188:	mov    DWORD PTR [edx-0x56],0xb5a0b2bf
  40218f:	outs   dx,DWORD PTR ds:[esi]
  402190:	popf   
  402191:	jg     0x4021e7
  402193:	inc    edx
  402194:	cmc    
  402195:	daa    
  402196:	sbb    eax,0x23016728
  40219b:	cli    
  40219c:	popf   
  40219d:	mov    dl,0x4b
  40219f:	push   0x5c
  4021a1:	pop    ebx
  4021a2:	not    BYTE PTR [eax+eax*1]
  4021a5:	xchg   edx,eax
  4021a6:	add    bl,bh
  4021a8:	hlt    
  4021a9:	loop   0x402178
  4021ab:	inc    edi
  4021ac:	call   0xce85:0xe09eab4
  4021b3:	cli    
  4021b4:	imul   esi,esi,0xd54f27ad
  4021ba:	outs   dx,DWORD PTR ds:[esi]
  4021bb:	sbb    eax,0x799d55c6
  4021c0:	lea    ebp,[ebx+0x49e63afd]
  4021c6:	cmp    dl,bl
  4021c8:	inc    edi
  4021c9:	add    edx,DWORD PTR [eax]
  4021cb:	cmp    ebx,DWORD PTR [edx]
  4021cd:	xchg   DWORD PTR [ebp-0x62],ebx
  4021d0:	addr16 add ebx,eax
  4021d3:	retf   0x98d7
  4021d6:	sub    eax,0x85dbf611
  4021db:	pop    edx
  4021dc:	cld    
  4021dd:	lods   eax,DWORD PTR ds:[esi]
  4021de:	pop    eax
  4021df:	fiadd  DWORD PTR [edi+0x5fba1569]
  4021e5:	aad    0x91
  4021e7:	loope  0x402226
  4021e9:	pop    edi
  4021ea:	mov    al,0x3f
  4021ec:	adc    edi,DWORD PTR [edi-0x47]
  4021ef:	sub    BYTE PTR [edi-0x5],0x13
  4021f3:	sbb    ecx,0x59b0abdf
  4021f9:	mov    dh,0x74
  4021fb:	bound  edx,QWORD PTR [eax]
  4021fd:	ja     0x4021dc
  4021ff:	push   ds
  402200:	xor    DWORD PTR [ecx+0x45],edx
  402203:	jge    0x402197
  402205:	cli    
  402206:	push   es
  402207:	ins    DWORD PTR es:[edi],dx
  402208:	data16 adc ch,bl
  40220b:	inc    ebx
  40220c:	inc    eax
  40220d:	xchg   edx,eax
  40220e:	and    eax,0xf9f38f10
  402213:	cmp    DWORD PTR [edi],ebx
  402215:	fwait
  402216:	cmp    al,0x1a
  402218:	push   0xffffffd8
  40221a:	adc    esi,DWORD PTR [ecx]
  40221c:	or     ch,BYTE PTR [ebp-0x30dc726f]
  402222:	xchg   ebp,eax
  402223:	dec    ebp
  402224:	mov    eax,0x4c333b4
  402229:	sbb    DWORD PTR [esi+0x6e],eax
  40222c:	adc    al,0x9d
  40222f:	call   0xd688dbb6
  402234:	sub    eax,DWORD PTR [edi]
  402236:	repnz adc edx,DWORD PTR [ebx-0x402311ad]
  40223d:	xor    DWORD PTR [ecx],0xffffffb5
  402240:	xchg   BYTE PTR [edx+ecx*4],ah
  402243:	or     bl,BYTE PTR [esi+0x5b6fbca5]
  402249:	cmp    BYTE PTR ds:0x895923,0xe4
  402250:	mov    ch,0x54
  402252:	enter  0x93ca,0xd3
  402256:	mov    cl,0x51
  402258:	jecxz  0x4022cc
  40225a:	in     eax,0xd0
  40225c:	inc    ebp
  40225d:	imul   BYTE PTR [ebx]
  40225f:	retf   
  402260:	mov    eax,ds:0xbc9d4912
  402265:	adc    ebx,esi
  402267:	clc    
  402268:	xor    al,bl
  40226a:	cdq    
  40226b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40226c:	mov    eax,ds:0xb219dce1
  402271:	aaa    
  402272:	test   eax,0xdef34ba1
  402277:	pop    ebp
  402278:	arpl   WORD PTR [esp+eax*4],si
  40227b:	mov    al,BYTE PTR [ecx]
  40227d:	push   eax
  40227e:	mov    esi,0x7d3f0e16
  402283:	retf   
  402284:	je     0x402210
  402286:	sbb    BYTE PTR [ebx+0x12],ah
  402289:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40228a:	xor    DWORD PTR [edx+0x68],edi
  40228d:	xor    dh,BYTE PTR [ebx+0x1a]
  402290:	jg     0x402232
  402292:	xchg   esi,ecx
  402294:	mov    bh,BYTE PTR [ebx+eiz*1-0x62]
  402298:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402299:	sbb    ebx,DWORD PTR ds:0xc355b7e6
  40229f:	pop    es
  4022a0:	push   edi
  4022a1:	mov    bh,0xb5
  4022a3:	imul   ecx,DWORD PTR [edx+ebp*4+0x4afe4754],0x3e
  4022ab:	(bad)  
  4022ac:	(bad)  
  4022ad:	mov    bh,0xb0
  4022af:	adc    dh,BYTE PTR [ebx]
  4022b1:	lock or ebx,DWORD PTR [edx-0x61]
  4022b5:	mul    DWORD PTR [edi]
  4022b7:	dec    edi
  4022b8:	dec    edi
  4022ba:	aam    0xbf
  4022bc:	lods   eax,DWORD PTR ds:[esi]
  4022bd:	or     BYTE PTR [ebp-0x77],bh
  4022c0:	adc    bh,dl
  4022c2:	or     esi,DWORD PTR [esi-0xf7f56c7]
  4022c8:	push   ecx
  4022c9:	mov    al,0xa8
  4022cb:	mov    ch,0xf6
  4022cd:	xor    BYTE PTR [edx+0x9],al
  4022d0:	inc    ecx
  4022d1:	js     0x4022cb
  4022d3:	adc    al,0x84
  4022d5:	inc    ebp
  4022d6:	mov    ebx,0x8719293a
  4022db:	(bad)  
  4022dc:	mov    eax,0x5a0892b4
  4022e1:	jo     0x402269
  4022e3:	clts   
  4022e5:	jge    0x402326
  4022e7:	inc    ebx
  4022e8:	push   0xffffffd5
  4022ea:	ds loope 0x4022df
  4022ed:	aad    0x26
  4022ef:	cmp    BYTE PTR ds:0xfc337e46,0x44
  4022f6:	out    dx,eax
  4022f7:	lock inc esi
  4022f9:	adc    DWORD PTR [edi*1-0x78f64880],ebx
  402300:	cmp    cl,BYTE PTR ds:0xa987d749
  402306:	add    BYTE PTR [ecx+ecx*1-0x6948ad5e],cl
  40230d:	xlat   BYTE PTR ds:[ebx]
  40230e:	push   edx
  40230f:	push   0xffffffd4
  402311:	ins    BYTE PTR es:[edi],dx
  402312:	inc    esi
  402313:	shr    esi,0x8
  402316:	sbb    al,0x5d
  402318:	div    BYTE PTR ds:0x6492bb5d
  40231f:	sub    al,0x8d
  402321:	jp     0x4022c0
  402323:	neg    BYTE PTR [eax+0x46a69df]
  402329:	ret    
  40232a:	retf   
  40232b:	mov    esi,ebx
  40232d:	mov    esp,0xab82a20a
  402332:	push   0x86a0d234
  402337:	sub    eax,0x1f2acc05
  40233c:	add    eax,0x921ed1f
  402341:	pushf  
  402342:	gs dec esi
  402344:	retf   
  402345:	cli    
  402346:	mov    edi,0xa102b061
  40234b:	jecxz  0x40235b
  40234d:	out    dx,eax
  40234e:	fwait
  40234f:	out    0x7c,eax
  402351:	mov    esp,0x946a9944
  402356:	sub    BYTE PTR [edx+ecx*4-0x603b1a30],dl
  40235d:	jnp    0x402361
  40235f:	add    edx,DWORD PTR [ebx*1+0x758aceff]
  402366:	xor    DWORD PTR [esi],esi
  402368:	sbb    DWORD PTR [eax],ecx
  40236a:	xlat   BYTE PTR ds:[ebx]
  40236b:	adc    BYTE PTR [edx+0x59],bl
  40236e:	fdivr  QWORD PTR [esi+0x3f]
  402371:	jp     0x40234a
  402373:	jle    0x4023aa
  402375:	test   ah,dl
  402377:	jno    0x402327
  402379:	xchg   BYTE PTR [ecx],al
  40237b:	and    esi,DWORD PTR [ebp-0x7a]
  40237e:	pop    ds
  40237f:	in     al,0x35
  402381:	push   ss
  402382:	scas   eax,DWORD PTR es:[edi]
  402383:	out    0xdf,al
  402385:	sub    dl,BYTE PTR [ebp+ecx*4+0x490da8ce]
  40238c:	push   cs
  40238d:	mov    esp,0xa11b5c05
  402392:	mov    esi,0xc9e8221c
  402397:	(bad)  
  402398:	xlat   BYTE PTR ds:[ebx]
  402399:	jo     0x402415
  40239b:	jne    0x402365
  40239d:	mov    DWORD PTR ds:0x90a10cf9,edx
  4023a3:	addr16 xchg ecx,eax
  4023a5:	adc    DWORD PTR [ecx+0x4d665dc2],edi
  4023ab:	push   edx
  4023ac:	loope  0x402416
  4023ae:	xor    eax,0x55a7cc7b
  4023b3:	scas   eax,DWORD PTR es:[edi]
  4023b4:	idiv   DWORD PTR [eax-0x7d439849]
  4023ba:	pop    edx
  4023bb:	xor    ch,ch
  4023bd:	cld    
  4023be:	dec    esi
  4023bf:	fnstenv [ecx]
  4023c1:	es inc edi
  4023c3:	lock cdq 
  4023c5:	js     0x402406
  4023c7:	inc    eax
  4023c8:	jne    0x402353
  4023ca:	jge    0x402412
  4023cc:	loop   0x402400
  4023ce:	sar    DWORD PTR [ecx],cl
  4023d0:	and    al,BYTE PTR [esi]
  4023d2:	(bad)
  4023d6:	test   DWORD PTR [ebp+esi*4-0x6ff0e88c],ecx
  4023dd:	cmp    edi,ebp
  4023df:	pop    ebx
  4023e0:	xor    eax,DWORD PTR [ebx]
  4023e2:	test   eax,0xf4f2e604
  4023e7:	mov    esi,0x830eaf52
  4023ec:	sbb    BYTE PTR [ecx],ch
  4023ee:	cmp    eax,DWORD PTR [edx-0x2a]
  4023f1:	dec    ebx
  4023f2:	cmp    DWORD PTR [esi+0x4936e380],ebx
  4023f8:	or     al,0x8b
  4023fa:	mov    edx,0xf680fea
  4023ff:	sub    eax,0x1d810000
  402404:	imul   eax,DWORD PTR [edx+eax*2+0x42849100],0xfe9ae800
  40240f:	add    DWORD PTR [eax],eax
  402411:	mov    ecx,DWORD PTR [ebp-0x68]
  402414:	mov    edx,DWORD PTR ds:0x428489
  40241a:	add    DWORD PTR ds:0x4283a5,edx
  402420:	mov    edx,DWORD PTR [ebp-0x64]
  402423:	sub    DWORD PTR ds:0x428575,ecx
  402429:	xor    eax,ecx
  40242b:	sub    DWORD PTR ds:0x42850d,edi
  402431:	mov    ecx,DWORD PTR [ebp-0x70]
  402434:	mov    edx,DWORD PTR [ebp-0x6c]
  402437:	neg    DWORD PTR ds:0x4285ad
  40243d:	sub    eax,ecx
  40243f:	mov    ecx,DWORD PTR ds:0x422768
  402445:	lea    eax,[eax+ecx*1-0x27d2]
  40244c:	not    edx
  40244e:	mov    ecx,DWORD PTR [ebp-0x1c]
  402451:	adc    edx,DWORD PTR ds:0x4284f5
  402457:	mov    edx,DWORD PTR [ebp-0x2c]
  40245a:	neg    DWORD PTR ds:0x42846d
  402460:	or     ecx,0x4f00
  402466:	and    ecx,edx
  402468:	cmp    DWORD PTR ds:0x42835d,0x0
  40246f:	mov    DWORD PTR ds:0x428579,ebx
  402475:	mov    edx,DWORD PTR ds:0x428475
  40247b:	jmp    0x4024db
  402480:	mov    DWORD PTR ds:0x428455,0xc4d
  40248a:	cmp    DWORD PTR ds:0x42835d,0x0
  402491:	jg     0x4024b5
  402497:	push   DWORD PTR [ebp-0x24]
  40249a:	push   DWORD PTR [ebp-0x28]
  40249d:	call   DWORD PTR ds:0x42dfe8
  4024a3:	xor    edx,DWORD PTR ds:0x428451
  4024a9:	adc    DWORD PTR ds:0x42851d,ecx
  4024af:	add    edx,0x747e
  4024b5:	or     DWORD PTR ds:0x42857d,0x36ec
  4024bf:	neg    DWORD PTR ds:0x428575
  4024c5:	adc    edx,DWORD PTR ds:0x428371
  4024cb:	sbb    DWORD PTR ds:0x4285b1,edi
  4024d1:	sbb    DWORD PTR ds:0x42857d,0x669d
  4024db:	mov    edx,DWORD PTR [ebp-0x34]
  4024de:	or     ecx,edx
  4024e0:	xor    ecx,0x5fdd
  4024e6:	cmp    ecx,DWORD PTR [eax]
  4024e8:	mov    DWORD PTR ds:0x428521,0x2fd8
  4024f2:	jne    0x408bb3
  4024f8:	mov    ecx,DWORD PTR [esi]
  4024fa:	cmp    DWORD PTR ds:0x428531,0x0
  402501:	mov    DWORD PTR ds:0x428445,edi
  402507:	not    edx
  402509:	mov    DWORD PTR ds:0x428521,0x71cc
  402513:	jmp    0x402572
  402518:	mov    eax,ds:0x428531
  40251d:	mov    eax,0x2d63
  402522:	cmp    DWORD PTR ds:0x428531,0x0
  402529:	je     0x40255f
  40252f:	push   0x428399
  402534:	push   DWORD PTR [ebp-0x18]
  402537:	push   0x428285
  40253c:	push   0x6ba7
  402541:	call   DWORD PTR ds:0x42dfec
  402547:	sbb    edx,DWORD PTR ds:0x4283a5
  40254d:	xor    edx,DWORD PTR ds:0x42839d
  402553:	and    edx,edx
  402555:	mov    DWORD PTR ds:0x428459,0x7db9
  40255f:	add    DWORD PTR ds:0x428495,edx
  402565:	inc    edx
  402566:	and    DWORD PTR ds:0x428369,ecx
  40256c:	or     DWORD PTR ds:0x4284b1,ecx
  402572:	mov    eax,DWORD PTR [esi+0x4]
  402575:	shrd   ecx,eax,0x2
  402579:	shr    eax,0x2
  40257c:	adc    DWORD PTR ds:0x4283a1,ecx
  402582:	mov    eax,DWORD PTR [esi]
  402584:	movzx  edx,BYTE PTR ds:0x428461
  40258b:	or     DWORD PTR ds:0x428595,edx
  402591:	mov    edx,DWORD PTR [esi+0x4]
  402594:	shl    eax,0x1e
  402597:	xor    ecx,edi
  402599:	xor    eax,eax
  40259b:	or     eax,ecx
  40259d:	jmp    0x40293e
  4025a2:	cmp    al,0x5
  4025a4:	ja     0x4025d8
  4025a6:	jl     0x40255c
  4025a8:	mov    esp,0xb45d5307
  4025ad:	iret   
  4025ae:	popf   
  4025af:	pop    ebx
  4025b0:	je     0x40258f
  4025b2:	mov    esi,0xbdbebeda
  4025b7:	les    edi,FWORD PTR [esi-0x6cfd6a42]
  4025bd:	mov    dl,BYTE PTR [edi]
  4025bf:	(bad)  
  4025c0:	aaa    
  4025c1:	push   esi
  4025c2:	das    
  4025c3:	cmp    DWORD PTR [edi+0x22],0x8f950402
  4025ca:	jne    0x4025fd
  4025cc:	jne    0x40258c
  4025ce:	sbb    DWORD PTR [eax-0x3],ecx
  4025d1:	test   eax,0x12dc2b96
  4025d6:	out    dx,eax
  4025d7:	or     esp,esi
  4025d9:	(bad)  
  4025da:	sub    esi,DWORD PTR [ebx-0x7f]
  4025dd:	div    bl
  4025df:	jmp    0x5c65de8
  4025e4:	push   ds
  4025e5:	popf   
  4025e6:	sti    
  4025e7:	loope  0x4025d3
  4025e9:	lock mov esi,ebp
  4025ec:	push   es
  4025ed:	arpl   WORD PTR gs:[ebp-0x64],cx
  4025f1:	sbb    BYTE PTR ds:0x701c105a,bh
  4025f7:	aam    0xb7
  4025f9:	and    eax,0x4a046da9
  4025fe:	arpl   WORD PTR [esi-0x1a406081],bp
  402604:	add    BYTE PTR [edx],dh
  402606:	mov    ebp,0x270c5079
  40260b:	scas   eax,DWORD PTR es:[edi]
  40260c:	ret    
  40260d:	mov    ebx,?
  40260f:	in     eax,0x4a
  402611:	in     al,0x79
  402613:	mov    eax,0x22c49a07
  402618:	push   ecx
  402619:	bound  edi,QWORD PTR [ebp+0x70]
  40261c:	cmp    eax,0xc4a07d55
  402621:	jle    0x4025d9
  402623:	dec    esi
  402624:	jnp    0x402690
  402626:	inc    eax
  402627:	cmp    dh,BYTE PTR ds:0x878141c1
  40262d:	push   0xffffffc3
  40262f:	pop    esp
  402630:	lods   al,BYTE PTR ds:[esi]
  402631:	mov    dh,BYTE PTR [ebp*1-0x1af22c6c]
  402638:	ret    
  402639:	xchg   DWORD PTR [edi+0x3e],esp
  40263c:	ret    
  40263d:	push   ss
  40263e:	add    edi,eax
  402640:	mov    al,ds:0xa141da95
  402645:	fldcw  WORD PTR [ecx]
  402647:	push   ebx
  402648:	outs   dx,DWORD PTR ds:[esi]
  402649:	mov    edx,0x98ecd965
  40264e:	pop    ss
  40264f:	pop    esi
  402650:	into   
  402651:	dec    DWORD PTR [esi-0x11]
  402654:	jmp    0x40260c
  402656:	and    dl,dl
  402658:	dec    esi
  402659:	mov    eax,ds:0x550a8e4a
  40265e:	fistp  DWORD PTR [edi+ebp*2-0x5]
  402662:	lds    esp,FWORD PTR [ebp+0x659d347b]
  402668:	call   0x9f1f:0x8dadfd4d
  40266f:	or     eax,0xc56dc683
  402674:	inc    eax
  402675:	das    
  402676:	add    al,0x1f
  402678:	loop   0x4026b6
  40267a:	out    dx,al
  40267b:	aas    
  40267c:	outs   dx,BYTE PTR ds:[esi]
  40267d:	push   edi
  40267e:	out    0x40,al
  402680:	fdivr  DWORD PTR [ecx+0x3f6b11e6]
  402686:	mov    cs,WORD PTR [ebx+ecx*8-0x3d]
  40268a:	jl     0x402622
  40268c:	icebp  
  40268d:	xor    ecx,edi
  40268f:	in     eax,0x9f
  402691:	and    eax,0xaa9991a9
  402696:	stos   BYTE PTR es:[edi],al
  402697:	cdq    
  402698:	jnp    0x4026d9
  40269a:	ins    BYTE PTR es:[edi],dx
  40269b:	jmp    0x26afdaed
  4026a0:	sar    BYTE PTR [ecx+eiz*4],0xc3
  4026a4:	jbe    0x40262e
  4026a6:	push   ss
  4026a7:	push   ebp
  4026a8:	adc    eax,0x7ef9a2a5
  4026ad:	mov    cs,WORD PTR [esi+0x66cdbc9e]
  4026b3:	into   
  4026b4:	repnz repnz sbb al,BYTE PTR [esi]
  4026b8:	mov    ebp,0xabfdf666
  4026bd:	mov    ds,WORD PTR [eax-0x5f]
  4026c0:	jmp    0x4026b2
  4026c2:	aaa    
  4026c3:	pop    ebx
  4026c4:	into   
  4026c5:	ror    esi,cl
  4026c7:	imul   ebp,DWORD PTR [edi],0x1c
  4026ca:	ins    DWORD PTR es:[edi],dx
  4026cb:	shl    BYTE PTR [eax+0x60a292ce],0x97
  4026d2:	aas    
  4026d3:	rcl    cl,1
  4026d5:	(bad)  
  4026d6:	dec    ecx
  4026d7:	jg     0x4026c9
  4026d9:	mov    al,al
  4026db:	add    ecx,DWORD PTR [ecx+edx*8+0x62465d76]
  4026e2:	jbe    0x4026cf
  4026e4:	fisubr WORD PTR ds:0x81b3ecc5
  4026ea:	rol    BYTE PTR [esp+esi*4-0x3b],1
  4026ee:	push   edi
  4026ef:	(bad)  
  4026f0:	lea    edx,ds:[ecx]
  4026f3:	addr16 inc esp
  4026f5:	mov    bh,0xd
  4026f7:	fisubr DWORD PTR [ecx+0x7b]
  4026fa:	das    
  4026fb:	jb     0x4026cc
  4026fd:	mov    edi,0xeb927b49
  402702:	dec    ebp
  402703:	aas    
  402704:	(bad)  
  402705:	jmp    0x402723
  402707:	popf   
  402708:	(bad)  
  402709:	cld    
  40270a:	cwde   
  40270b:	cs das 
  40270d:	add    BYTE PTR [edx+0x535b5eae],ah
  402713:	mov    ch,0x7f
  402715:	jp     0x402736
  402717:	scas   al,BYTE PTR es:[edi]
  402718:	dec    esi
  402719:	push   edi
  40271a:	ins    DWORD PTR es:[edi],dx
  40271b:	(bad)  
  40271d:	add    eax,0x6ae7a4c7
  402722:	dec    ebp
  402723:	popa   
  402724:	loopne 0x40272a
  402726:	stos   BYTE PTR es:[edi],al
  402727:	lods   eax,DWORD PTR ds:[esi]
  402728:	lds    esp,FWORD PTR [ecx]
  40272a:	xlat   BYTE PTR ds:[ebx]
  40272b:	mov    eax,ds:0xae228950
  402730:	push   eax
  402731:	sub    BYTE PTR [edx+0x31],dh
  402734:	xor    bl,BYTE PTR [edi-0x33cf7b3e]
  40273a:	mov    DWORD PTR [ebx-0x57fa1a4],ebx
  402740:	xlat   BYTE PTR ds:[ebx]
  402741:	fmulp  st(3),st
  402743:	nop
  402744:	std    
  402745:	jmp    0xd92ea924
  40274a:	inc    edx
  40274b:	xor    cl,bh
  40274d:	sar    bh,cl
  40274f:	and    dl,BYTE PTR [ebp+0x5c]
  402752:	stc    
  402753:	pop    esp
  402754:	stc    
  402755:	push   edi
  402756:	daa    
  402757:	test   DWORD PTR [edx-0xa],ebx
  40275a:	fbld   TBYTE PTR [eax+0x8]
  40275d:	xor    esi,DWORD PTR [esi]
  40275f:	mov    dl,0x74
  402761:	cli    
  402762:	jmp    0xf6b3:0x196c1b34
  402769:	mov    ds:0xed326809,al
  40276e:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402770:	fcomp  QWORD PTR [eax-0x5e]
  402773:	jnp    0x4027df
  402775:	fsub   st(1),st
  402777:	ret    0x3bcb
  40277a:	mov    edx,0xd4c82f08
  40277f:	sbb    edi,ebp
  402781:	inc    edi
  402782:	out    0x2c,al
  402784:	dec    esi
  402785:	mov    cs,WORD PTR [ecx+0x4abcd777]
  40278b:	fstcw  WORD PTR [eax+0x54]
  40278f:	xchg   edi,eax
  402790:	add    eax,0x8b07891d
  402795:	pushf  
  402796:	not    DWORD PTR [ecx+0x7cdc496a]
  40279c:	xor    BYTE PTR [edx],bh
  40279e:	mov    ah,0xf
  4027a0:	mov    edx,0x5dda1dc4
  4027a5:	bnd ret 
  4027a7:	(bad)  
  4027a8:	loope  0x402741
  4027aa:	ror    DWORD PTR [esi+0x71e2ec9d],cl
  4027b0:	pop    esi
  4027b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4027b3:	xchg   ebp,eax
  4027b4:	xor    dh,BYTE PTR [ebx]
  4027b6:	push   es
  4027b7:	pop    ecx
  4027b8:	arpl   WORD PTR [eax+0x75],sp
  4027bb:	stos   DWORD PTR es:[edi],eax
  4027bc:	(bad)  
  4027be:	mov    cl,0xcd
  4027c0:	mov    cl,0x3e
  4027c2:	iret   
  4027c3:	add    eax,0x9ee7e154
  4027c8:	xlat   BYTE PTR ds:[ebx]
  4027c9:	mov    esi,0x1739793f
  4027ce:	add    eax,0xfba28ae6
  4027d3:	and    BYTE PTR [ebx],cl
  4027d5:	mov    eax,0xb0b4938c
  4027da:	xchg   edi,eax
  4027db:	addr16 inc ebx
  4027dd:	dec    edx
  4027de:	cmp    cl,dl
  4027e0:	js     0x40277f
  4027e2:	shl    BYTE PTR [ecx],1
  4027e4:	xor    eax,DWORD PTR [esi+ebx*1]
  4027e7:	pusha  
  4027e8:	(bad)  
  4027e9:	xor    dl,BYTE PTR [edx]
  4027eb:	test   BYTE PTR [edi+0x16],bl
  4027ee:	cdq    
  4027ef:	jne    0x40284d
  4027f1:	push   edx
  4027f2:	xchg   esp,eax
  4027f3:	xchg   esi,eax
  4027f4:	int3   
  4027f5:	mov    edx,esi
  4027f7:	frstor [ebx]
  4027f9:	inc    ecx
  4027fa:	mov    dl,0x69
  4027fc:	out    0x3b,eax
  4027fe:	aas    
  4027ff:	retf   0xb8c4
  402802:	pop    eax
  402803:	fst    QWORD PTR [ebp-0x2]
  402806:	enter  0x4244,0x1d
  40280a:	sub    ch,BYTE PTR [ecx]
  40280c:	mov    ebx,0xec565637
  402811:	aam    0xb8
  402813:	push   cs
  402814:	xchg   BYTE PTR ds:0x7c5ac5a4,ah
  40281a:	mov    bh,0x46
  40281c:	pop    ds
  40281d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40281e:	sub    dh,bh
  402820:	fmul   DWORD PTR [eax]
  402822:	adc    eax,0xc95d0f8e
  402827:	imul   edi,DWORD PTR [esi-0x23bd90a1],0x427e097e
  402831:	int3   
  402832:	(bad)  
  402833:	push   0x5f752b74
  402838:	and    BYTE PTR [ecx+0x1a],al
  40283b:	(bad)  
  40283c:	mov    WORD PTR [edx-0x6a],gs
  40283f:	xor    al,0xa3
  402841:	loopne 0x402881
  402843:	cmp    BYTE PTR [ecx],ch
  402845:	mov    BYTE PTR ds:0x7df9eecb,0xf
  40284c:	and    BYTE PTR [eax+0x60],cl
  40284f:	sbb    BYTE PTR [ebx+0xc6a9671],ch
  402855:	mov    ch,0xaf
  402857:	jns    0x40280d
  402859:	int3   
  40285a:	mov    DWORD PTR [ecx],ebp
  40285c:	lock push ecx
  40285e:	push   esi
  40285f:	or     BYTE PTR [edx],ah
  402861:	in     al,dx
  402862:	pop    ds
  402863:	loop   0x4028d9
  402865:	lahf   
  402866:	retf   0x586
  402869:	or     eax,0x9b69a765
  40286e:	push   edx
  40286f:	call   0xaad4:0xb2e01ae5
  402876:	mov    ds:0x10989bac,eax
  40287b:	cli    
  40287c:	or     BYTE PTR [ebp-0x79],bl
  40287f:	(bad)  
  402880:	inc    ecx
  402881:	xchg   edx,eax
  402882:	jle    0x40280d
  402884:	lods   al,BYTE PTR ds:[esi]
  402885:	test   eax,0xb2bf767e
  40288a:	mov    edx,0x19caeff6
  40288f:	ret    
  402890:	inc    edx
  402891:	popf   
  402892:	and    eax,0x12053524
  402897:	imul   esp,ebx,0xa6c1bec8
  40289d:	ss xchg esi,eax
  40289f:	sbb    bl,BYTE PTR [ebx]
  4028a1:	(bad)  
  4028a2:	inc    ebx
  4028a3:	stc    
  4028a4:	iret   
  4028a5:	scas   eax,DWORD PTR es:[edi]
  4028a6:	pop    edi
  4028a7:	in     eax,dx
  4028a8:	iret   
  4028a9:	popf   
  4028aa:	jae    0x402892
  4028ac:	push   ds
  4028ad:	mov    ch,0xad
  4028af:	xlat   BYTE PTR ds:[ebx]
  4028b0:	push   0xaf91d77
  4028b5:	enter  0x805,0x66
  4028b9:	not    eax
  4028bb:	mov    edi,0xa3ae0fbc
  4028c0:	stc    
  4028c1:	cmp    eax,0x4a04c9c
  4028c6:	dec    ecx
  4028c7:	fist   DWORD PTR [esi+0x9]
  4028ca:	push   0x2dbb5bc0
  4028cf:	test   BYTE PTR [edx+eiz*4+0x23],cl
  4028d3:	adc    DWORD PTR [ecx+0x5f],ebp
  4028d6:	aaa    
  4028d7:	mov    dh,0x48
  4028d9:	retf   
  4028da:	in     al,dx
  4028db:	dec    edi
  4028dc:	sahf   
  4028dd:	test   BYTE PTR [edx-0x345cad8b],bl
  4028e3:	jne    0x402927
  4028e5:	mov    bl,0x70
  4028e7:	xor    al,0xa0
  4028e9:	pop    es
  4028ea:	hlt    
  4028eb:	cdq    
  4028ec:	icebp  
  4028ed:	mov    ch,0xcf
  4028ef:	mov    ds:0x60ca9969,eax
  4028f4:	jp     0x4028ab
  4028f6:	push   0xffffffd4
  4028f8:	icebp  
  4028f9:	sbb    ebp,eax
  4028fb:	(bad)  
  4028fc:	stos   DWORD PTR es:[edi],eax
  4028fd:	and    al,0x85
  4028ff:	xchg   BYTE PTR [edi+edi*8+0x7ed576fe],ah
  402906:	call   0xa22a:0xcf0840fa
  40290d:	bound  eax,QWORD PTR [eax]
  40290f:	mov    ds:0x7abf5691,eax
  402914:	dec    edi
  402915:	ins    BYTE PTR es:[edi],dx
  402916:	adc    eax,0x13dfceb9
  40291b:	add    al,0xb
  40291d:	lahf   
  40291e:	jp     0x402953
  402920:	inc    ecx
  402921:	imul   edx,DWORD PTR [ebp-0x431530cf],0x70
  402928:	mov    dl,0x75
  40292a:	pop    edi
  40292b:	fcomp  st(0)
  40292d:	jp     0x402996
  40292f:	jns    0x402975
  402931:	cmp    eax,0x5afefbc3
  402936:	and    BYTE PTR fs:0x61f5f0bd,al
  40293d:	or     BYTE PTR [ebx+0x13bec4d],0xc7
  402944:	add    eax,0x428459
  402949:	sbb    DWORD PTR [esi+0x0],edi
  40294c:	add    BYTE PTR [edi],cl
  40294e:	test   edi,esp
  402950:	add    BYTE PTR [eax],al
  402952:	add    BYTE PTR [ebx+0x4285213d],al
  402958:	add    BYTE PTR [eax],al
  40295a:	mov    DWORD PTR ds:0x428575,edi
  402960:	mov    ecx,0x5bac
  402965:	mov    ecx,0x785
  40296a:	jmp    0x4029c0
  40296f:	mov    DWORD PTR ds:0x428525,0x7d3d
  402979:	mov    eax,ds:0x428381
  40297e:	cmp    DWORD PTR ds:0x428521,0x0
  402985:	jl     0x4029a6
  40298b:	push   0x25e9
  402990:	call   DWORD PTR ds:0x42e238
  402996:	and    ecx,0x7efc
  40299c:	and    DWORD PTR ds:0x4284b1,0x428399
  4029a6:	sub    edx,edx
  4029a8:	and    DWORD PTR ds:0x428585,0x3b56
  4029b2:	mov    edx,DWORD PTR ds:0x42855d
  4029b8:	mov    edx,DWORD PTR [edx]
  4029ba:	add    DWORD PTR ds:0x428475,edx
  4029c0:	mov    eax,DWORD PTR [ebp-0xc]
  4029c3:	mov    ecx,DWORD PTR [ebp+0x20]
  4029c6:	sub    DWORD PTR ds:0x4283a5,edi
  4029cc:	xor    DWORD PTR [eax],ecx
  4029ce:	mov    eax,DWORD PTR [ebp-0xc]
  4029d1:	or     edx,ecx
  4029d3:	mov    ecx,DWORD PTR [ebp+0x18]
  4029d6:	or     DWORD PTR ds:0x428481,ebx
  4029dc:	mov    edx,DWORD PTR [ebp+0x1c]
  4029df:	add    DWORD PTR ds:0x42837d,0x2a87
  4029e9:	shrd   ecx,edx,0x2
  4029ed:	sub    DWORD PTR ds:0x42848d,0x428465
  4029f7:	mov    DWORD PTR [ebp-0x14],ecx
  4029fa:	mov    ecx,DWORD PTR [ebp+0x18]
  4029fd:	xor    DWORD PTR [ebp-0x14],edi
  402a00:	shr    edx,0x2
  402a03:	xor    edx,0x4270
  402a09:	mov    edx,DWORD PTR [ebp+0x1c]
  402a0c:	sbb    DWORD PTR ds:0x428439,0x428455
  402a16:	xor    edx,edx
  402a18:	and    DWORD PTR ds:0x4285a9,0x428361
  402a22:	or     edx,DWORD PTR [ebp-0x14]
  402a25:	or     DWORD PTR ds:0x428481,0x6ae7
  402a2f:	shl    ecx,0x1e
  402a32:	xor    DWORD PTR ds:0x428399,edx
  402a38:	sub    DWORD PTR [eax],edx
  402a3a:	xor    ecx,ecx
  402a3c:	add    ecx,DWORD PTR ds:0x4284f1
  402a42:	mov    eax,ds:0x428569
  402a47:	sub    eax,ecx
  402a49:	add    ecx,DWORD PTR [ecx+eax*1]
  402a4c:	mov    eax,ds:0x4225b0
  402a51:	add    edx,DWORD PTR ds:0x428395
  402a57:	mov    ecx,DWORD PTR [ebp-0xc]
  402a5a:	cmp    DWORD PTR ds:0x428449,0x0
  402a61:	not    edx
  402a63:	not    DWORD PTR ds:0x42837d
  402a69:	movzx  edx,WORD PTR ds:0x42836d
  402a70:	jmp    0x402ae1
  402a75:	mov    edx,0x6743
  402a7a:	cmp    DWORD PTR ds:0x428449,0x0
  402a81:	jg     0x402ac1
  402a87:	push   0x8e71
  402a8c:	push   DWORD PTR [ebp-0x1c]
  402a8f:	call   DWORD PTR ds:0x42dff0
  402a95:	movzx  edx,WORD PTR ds:0x428499
  402a9c:	sbb    edx,DWORD PTR ds:0x428591
  402aa2:	mov    DWORD PTR ds:0x428499,edx
  402aa8:	movzx  edx,BYTE PTR ds:0x4284a1
  402aaf:	adc    DWORD PTR ds:0x428579,edx
  402ab5:	or     edx,0x3af6
  402abb:	and    edx,DWORD PTR ds:0x42835d
  402ac1:	or     DWORD PTR ds:0x428399,0x67f9
  402acb:	add    edx,0x3b45
  402ad1:	or     edx,DWORD PTR ds:0x428501
  402ad7:	adc    DWORD PTR ds:0x428579,0x3eb0
  402ae1:	mov    eax,DWORD PTR [eax]
  402ae3:	cmp    DWORD PTR ds:0x428381,0x0
  402aea:	mov    DWORD PTR ds:0x428509,0xab9
  402af4:	mov    edx,DWORD PTR ds:0x42839d
  402afa:	mov    DWORD PTR ds:0x428371,0x238f
  402b04:	jmp    0x402b79
  402b09:	mov    DWORD PTR ds:0x4285a5,ecx
  402b0f:	cmp    DWORD PTR ds:0x428381,0x0
  402b16:	ja     0x402b5f
  402b1c:	push   DWORD PTR [ebp-0x14]
  402b1f:	push   0x4281c1
  402b24:	push   DWORD PTR [ebp-0x10]
  402b27:	push   0x428268
  402b2c:	push   DWORD PTR [ebp-0x18]
  402b2f:	push   0x24b6
  402b34:	call   DWORD PTR ds:0x42e23c
  402b3a:	mov    edx,DWORD PTR ds:0x4283a5
  402b40:	sub    DWORD PTR ds:0x42838d,edx
  402b46:	sbb    DWORD PTR ds:0x428479,ebx
  402b4c:	movzx  edx,BYTE PTR ds:0x42835d
  402b53:	adc    DWORD PTR ds:0x42849d,edx
  402b59:	add    DWORD PTR ds:0x42859d,ebx
  402b5f:	xor    edx,edx
  402b61:	or     edx,DWORD PTR ds:0x4285ad
  402b67:	xor    edx,DWORD PTR ds:0x428515
  402b6d:	mov    DWORD PTR ds:0x4285ad,edx
  402b73:	add    edx,0x71a6
  402b79:	add    eax,DWORD PTR [ecx]
  402b7b:	sub    ecx,0x1eef
  402b81:	mov    DWORD PTR [ebp-0x14],eax
  402b84:	or     ecx,DWORD PTR ds:0x42848d
  402b8a:	mov    ecx,DWORD PTR [ebx]
  402b8c:	mov    eax,DWORD PTR [ebx+0x4]
  402b8f:	shrd   ecx,eax,0x2
  402b93:	cmp    DWORD PTR ds:0x42835d,0x0
  402b9a:	mov    DWORD PTR ds:0x428501,0x61cd
  402ba4:	mov    edx,DWORD PTR ds:0x428369
  402baa:	mov    DWORD PTR ds:0x428375,edx
  402bb0:	jmp    0x402c95
  402bb5:	mov    DWORD PTR ds:0x428379,0x124b
  402bbf:	mov    DWORD PTR ds:0x428451,0x5ddc
  402bc9:	cmp    DWORD PTR ds:0x42835d,0x0
  402bd0:	jle    0x402bf9
  402bd6:	push   0x6f74
  402bdb:	call   DWORD PTR ds:0x42e0ac
  402be1:	sub    DWORD PTR ds:0x42851d,edx
  402be7:	and    edx,DWORD PTR ds:0x428455
  402bed:	mov    edx,DWORD PTR ds:0x4285a5
  402bf3:	xor    DWORD PTR ds:0x4284f5,edx
  402bf9:	mov    edx,DWORD PTR ds:0x4285e9
  402bff:	mov    edx,DWORD PTR [edx]
  402c01:	xor    DWORD PTR ds:0x428459,edx
  402c07:	and    DWORD PTR ds:0x42837d,0x245f
  402c11:	cmp    DWORD PTR ds:0x428371,0x0
  402c18:	mov    DWORD PTR ds:0x428511,0x70c6
  402c22:	not    edx
  402c24:	mov    edx,0x462e
  402c29:	jmp    0x402c95
  402c2e:	mov    DWORD PTR ds:0x4284b1,edx
  402c34:	cmp    DWORD PTR ds:0x428371,0x0
  402c3b:	jl     0x402c5f
  402c41:	push   DWORD PTR [ebp-0x18]
  402c44:	push   0x2a6e
  402c49:	call   DWORD PTR ds:0x42e240
  402c4f:	sbb    DWORD PTR ds:0x428371,0x59bd
  402c59:	sub    edx,0x641d
  402c5f:	sbb    DWORD PTR ds:0x428379,0x428531
  402c69:	sbb    DWORD PTR ds:0x428515,0x27b0
  402c73:	mov    edx,DWORD PTR ds:0x4284dd
  402c79:	mov    edx,DWORD PTR [edx]
  402c7b:	adc    DWORD PTR ds:0x428435,edx
  402c81:	xor    DWORD PTR ds:0x428485,0x428451
  402c8b:	sbb    DWORD PTR ds:0x4284a1,0x33ea
  402c95:	shr    eax,0x2
  402c98:	cmp    DWORD PTR ds:0x428475,0x0
  402c9f:	mov    DWORD PTR ds:0x428591,0x384
  402ca9:	mov    DWORD PTR ds:0x428375,0x2b95
  402cb3:	mov    edx,DWORD PTR ds:0x428579
  402cb9:	mov    DWORD PTR ds:0x428531,edx
  402cbf:	jmp    0x402d0e
  402cc4:	mov    eax,0x220e
  402cc9:	mov    DWORD PTR ds:0x42851d,0x7b53
  402cd3:	cmp    DWORD PTR ds:0x428475,0x0
  402cda:	jbe    0x402d06
  402ce0:	push   0x3c7e
  402ce5:	push   0x1ff0
  402cea:	call   DWORD PTR ds:0x42e0b0
  402cf0:	sub    edx,0x6132
  402cf6:	sbb    DWORD PTR ds:0x428531,0x612a
  402d00:	sbb    DWORD PTR ds:0x428595,ecx
  402d06:	dec    edx
  402d07:	inc    edx
  402d08:	and    edx,DWORD PTR ds:0x428595
  402d0e:	mov    eax,DWORD PTR [ebx]
  402d10:	mov    edx,DWORD PTR [ebx+0x4]
  402d13:	dec    DWORD PTR ds:0x428435
  402d19:	xor    ecx,edi
  402d1b:	shl    eax,0x1e
  402d1e:	xor    edx,0x1700
  402d24:	xor    eax,eax
  402d26:	sub    edx,0x11fc
  402d2c:	or     eax,ecx
  402d2e:	mov    ecx,DWORD PTR [ebx]
  402d30:	cmp    DWORD PTR ds:0x428531,0x0
  402d37:	mov    DWORD PTR ds:0x428499,0x400c
  402d41:	mov    edx,DWORD PTR ds:0x42845d
  402d47:	mov    edx,DWORD PTR ds:0x42852d
  402d4d:	jmp    0x402d9d
  402d52:	mov    DWORD PTR ds:0x428481,0x114
  402d5c:	cmp    DWORD PTR ds:0x428531,0x0
  402d63:	je     0x402d85
  402d69:	push   DWORD PTR [ebp-0x24]
  402d6c:	call   DWORD PTR ds:0x42e0b4
  402d72:	dec    edx
  402d73:	xor    edx,DWORD PTR ds:0x428589
  402d79:	or     DWORD PTR ds:0x428469,ebx
  402d7f:	sub    DWORD PTR ds:0x42852d,ecx
  402d85:	mov    edx,DWORD PTR ds:0x42857d
  402d8b:	xor    DWORD PTR ds:0x42851d,edx
  402d91:	xor    edx,0x442c
  402d97:	not    DWORD PTR ds:0x42836d
  402d9d:	mov    edx,DWORD PTR [ebx+0x4]
  402da0:	add    DWORD PTR ds:0x428469,0x428449
  402daa:	shrd   ecx,edx,0x2
  402dae:	shr    edx,0x2
  402db1:	mov    DWORD PTR [ebp-0x1c],ecx
  402db4:	sbb    edx,DWORD PTR ds:0x428531
  402dba:	mov    ecx,DWORD PTR [ebx]
  402dbc:	mov    edx,DWORD PTR ds:0x4284b1
  402dc2:	xor    DWORD PTR ds:0x42851d,edx
  402dc8:	mov    edx,DWORD PTR [ebx+0x4]
  402dcb:	xor    DWORD PTR [ebp-0x1c],edi
  402dce:	and    DWORD PTR ds:0x4284a1,0x4abe
  402dd8:	xor    edx,edx
  402dda:	sub    DWORD PTR ds:0x428441,0x1446
  402de4:	or     edx,DWORD PTR [ebp-0x1c]
  402de7:	shl    ecx,0x1e
  402dea:	lea    ecx,[edx+eax*1]
  402ded:	mov    edx,DWORD PTR ds:0x42855d
  402df3:	xor    eax,eax
  402df5:	xor    eax,DWORD PTR ds:0x4285e9
  402dfb:	sub    edx,eax
  402dfd:	add    edx,DWORD PTR [edx+eax*1]
  402e00:	mov    eax,DWORD PTR [ebx]
  402e02:	xor    DWORD PTR ds:0x4285a1,ecx
  402e08:	mov    edx,DWORD PTR [ebx+0x4]
  402e0b:	or     DWORD PTR ds:0x42843d,0x3bc
  402e15:	shrd   eax,edx,0x2
  402e19:	shr    edx,0x2
  402e1c:	cmp    DWORD PTR ds:0x4285ad,0x0
  402e23:	mov    DWORD PTR ds:0x42849d,ebx
  402e29:	mov    DWORD PTR ds:0x4284a1,0x656f
  402e33:	movzx  edx,BYTE PTR ds:0x428449
  402e3a:	jmp    0x402e93
  402e3f:	mov    DWORD PTR ds:0x42846d,0x5c7
  402e49:	mov    DWORD PTR ds:0x4284ad,0x3013
  402e53:	cmp    DWORD PTR ds:0x4285ad,0x0
  402e5a:	jle    0x402e7f
  402e60:	push   DWORD PTR [ebp-0x24]
  402e63:	call   DWORD PTR ds:0x42e0b8
  402e69:	sub    DWORD PTR ds:0x428381,0x7db0
  402e73:	sub    DWORD PTR ds:0x4285b1,ecx
  402e79:	adc    DWORD PTR ds:0x42843d,edx
  402e7f:	and    edx,DWORD PTR ds:0x428519
  402e85:	mov    edx,DWORD PTR ds:0x4283cd
  402e8b:	mov    edx,DWORD PTR [edx]
  402e8d:	xor    DWORD PTR ds:0x42839d,edx
  402e93:	mov    DWORD PTR [ebp-0x1c],eax
  402e96:	not    DWORD PTR ds:0x428481
  402e9c:	mov    eax,DWORD PTR [ebx]
  402e9e:	add    DWORD PTR ds:0x428519,0x4968
  402ea8:	jmp    0x403249
  402ead:	cmp    al,0xdc
  402eaf:	(bad)  
  402eb0:	inc    ebp
  402eb1:	ss dec ebx
  402eb3:	mov    esp,0x8c100abc
  402eb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402eb9:	push   0x62
  402ebb:	hlt    
  402ebc:	iret   
  402ebd:	mov    ebp,0xbdbebee0
  402ec2:	les    edi,FWORD PTR [esi-0x70995942]
  402ec8:	ret    
  402ec9:	adc    ebp,esp
  402ecb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ecc:	fld    TBYTE PTR [esi-0x39]
  402ecf:	dec    ebp
  402ed0:	cmp    DWORD PTR [edx-0x6e4dd047],ebx
  402ed6:	pushf  
  402ed7:	int    0xfb
  402ed9:	fcomp  QWORD PTR [edx+0x642e84ff]
  402edf:	jb     0x402e98
  402ee1:	lock ja 0x402e97
  402ee4:	jns    0x402e90
  402ee6:	or     al,0x24
  402ee8:	and    edx,DWORD PTR [esi+0x6f3368d3]
  402eee:	jb     0x402f4c
  402ef0:	adc    DWORD PTR [edx-0x7fe226f0],0xffffffd1
  402ef7:	popa   
  402ef8:	aam    0x55
  402efa:	das    
  402efb:	aas    
  402efc:	jne    0x402f6b
  402efe:	mov    al,0x8e
  402f00:	ficomp WORD PTR [eax-0x13fd6153]
  402f06:	imul   ecx,esp,0xfffffff7
  402f09:	push   edi
  402f0a:	add    ah,dh
  402f0c:	adc    BYTE PTR [ebx-0x445503ba],bh
  402f12:	adc    eax,esi
  402f14:	lods   eax,DWORD PTR ds:[esi]
  402f15:	sub    eax,0xeedf66fe
  402f1a:	lds    eax,FWORD PTR [ebx+0x22]
  402f1d:	push   ebp
  402f1e:	pop    ebp
  402f1f:	mov    al,0xe5
  402f21:	stos   DWORD PTR es:[edi],eax
  402f22:	adc    eax,0x21462aa8
  402f27:	xor    bl,BYTE PTR [ebx+0x0]
  402f2a:	ret    0x9eb8
  402f2d:	arpl   WORD PTR [edx-0x477b1fee],bx
  402f33:	scas   al,BYTE PTR es:[edi]
  402f34:	mov    ecx,0x437c26e9
  402f39:	daa    
  402f3a:	test   al,0x3f
  402f3c:	je     0x402f40
  402f3e:	or     edi,ecx
  402f40:	shr    BYTE PTR [edi+0x13],cl
  402f43:	dec    edi
  402f44:	mov    ebp,DWORD PTR [ebx+0x4f]
  402f47:	(bad)
  402f4b:	dec    eax
  402f4c:	mov    cl,0x80
  402f4e:	inc    ebp
  402f4f:	or     DWORD PTR [eax-0x51],ebp
  402f52:	aad    0x6e
  402f54:	scas   al,BYTE PTR es:[edi]
  402f55:	pushf  
  402f56:	push   edx
  402f57:	push   ecx
  402f58:	(bad)  
  402f59:	sahf   
  402f5a:	dec    ebp
  402f5b:	xor    eax,0xddd32f2
  402f60:	fst    DWORD PTR [esi+0x65]
  402f63:	and    edx,DWORD PTR [ecx+0x5164436c]
  402f69:	lods   al,BYTE PTR ds:[esi]
  402f6a:	dec    ecx
  402f6b:	sub    al,0x63
  402f6d:	(bad)  
  402f6e:	iret   
  402f6f:	mov    ebp,0xc12e919b
  402f74:	push   edi
  402f75:	mov    ecx,0x3d924911
  402f7a:	mov    bl,0x31
  402f7c:	jg     0x402f9a
  402f7e:	jnp    0x402ff1
  402f80:	push   0x2fd324cb
  402f85:	mov    bl,0xe2
  402f87:	shl    DWORD PTR [eax],0x34
  402f8a:	pop    edx
  402f8b:	or     al,0xda
  402f8d:	add    DWORD PTR [eax],eax
  402f8f:	mov    ebp,0xa85d1ae5
  402f94:	cmp    al,0x5a
  402f96:	and    ebx,ebx
  402f98:	aaa    
  402f99:	push   ebx
  402f9a:	jae    0x402fa3
  402f9c:	rcl    BYTE PTR [ebp-0x6f1f7b1a],0x84
  402fa3:	aad    0x91
  402fa5:	enter  0x7fa6,0xe0
  402fa9:	mov    esi,0xee19aad
  402fae:	push   ss
  402faf:	mov    ds:0x4487e273,al
  402fb4:	(bad)  
  402fb6:	cdq    
  402fb7:	jg     0x402faa
  402fb9:	or     BYTE PTR [edx],0xf9
  402fbc:	sub    DWORD PTR [esi+0x9],esp
  402fbf:	dec    ebp
  402fc0:	xor    al,ah
  402fc2:	test   eax,0xe4b554ce
  402fc7:	jg     0x402fbe
  402fc9:	xchg   ebp,eax
  402fca:	in     eax,dx
  402fcb:	(bad)  [esi+ebx*1]
  402fce:	xor    eax,0x831149d3
  402fd3:	add    al,ch
  402fd5:	add    BYTE PTR [edx],ch
  402fd7:	jbe    0x402f9f
  402fd9:	inc    edi
  402fda:	ds daa 
  402fdc:	push   ss
  402fdd:	and    DWORD PTR [edx+0x77],0xda54b862
  402fe4:	and    dl,BYTE PTR [eax]
  402fe6:	out    dx,eax
  402fe7:	shl    cl,0x3c
  402fea:	imul   ecx,DWORD PTR [esi],0xffffff8e
  402fed:	and    ebx,DWORD PTR [ebp+0x5d]
  402ff0:	add    eax,DWORD PTR [ecx+0x65]
  402ff3:	leave  
  402ff4:	push   edx
  402ff5:	retf   
  402ff6:	es test al,0x62
  402ff9:	dec    edi
  402ffa:	push   esp
  402ffb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ffc:	fldenv [eax]
  402ffe:	ja     0x40302f
  403000:	lahf   
  403001:	fistp  WORD PTR [esi+eax*4-0x4]
  403005:	adc    al,0xad
  403007:	fcomp  QWORD PTR [ebx+0x1b839de1]
  40300d:	out    0xa3,eax
  40300f:	out    dx,eax
  403010:	hlt    
  403011:	hlt    
  403012:	jmp    0x403085
  403014:	pop    ebp
  403015:	or     esi,DWORD PTR [esi]
  403017:	sub    bh,BYTE PTR [edx]
  403019:	fs daa 
  40301b:	add    BYTE PTR [esi+0x55360893],al
  403021:	out    0xc4,eax
  403023:	(bad)  
  403024:	hlt    
  403025:	jl     0x40304f
  403027:	fcmove st,st(6)
  403029:	rcr    ch,cl
  40302b:	xor    eax,0xdfd8bbff
  403030:	pop    esi
  403031:	pop    ss
  403032:	fcom   QWORD PTR [edx+0x6a817140]
  403038:	dec    ebx
  403039:	sub    BYTE PTR [eax-0x24386cbb],al
  40303f:	rol    BYTE PTR [edx-0x19],cl
  403042:	int    0x6a
  403044:	in     eax,0xf
  403046:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403047:	mov    ecx,0xe095abf2
  40304c:	repz dec ebx
  40304e:	xchg   ebx,eax
  40304f:	fidivr WORD PTR es:[esi]
  403052:	enter  0x7c15,0x1a
  403056:	and    edx,DWORD PTR [edi+0x1f]
  403059:	rcl    DWORD PTR [ecx-0x10],cl
  40305c:	sbb    ebx,DWORD PTR [eax]
  40305e:	test   eax,0x7d545f84
  403063:	cmp    ecx,DWORD PTR [esi+0x7215b2cd]
  403069:	and    al,BYTE PTR [edx-0x60]
  40306c:	test   BYTE PTR [edx+esi*4-0x4ae47a76],dl
  403073:	mov    dl,0x33
  403075:	mov    al,ds:0x321bcdc7
  40307a:	cwde   
  40307b:	mov    DWORD PTR [ecx+0x30],edi
  40307e:	jnp    0x40300a
  403080:	ret    0xe818
  403083:	xor    al,0xc2
  403085:	das    
  403086:	cdq    
  403087:	jmp    0x403101
  403089:	push   ebx
  40308a:	pop    ebx
  40308b:	lea    esi,[ebx-0x3c]
  40308e:	imul   esi,eax,0x266105d3
  403094:	ds ins DWORD PTR es:[edi],dx
  403096:	std    
  403097:	adc    BYTE PTR [ecx+edx*1+0x5d],ah
  40309b:	hlt    
  40309c:	jp     0x4030f6
  40309e:	mov    dl,0x87
  4030a0:	xchg   esi,eax
  4030a1:	fs (bad) 
  4030a3:	mov    ch,0xe
  4030a5:	(bad)  
  4030a6:	(bad)  
  4030a7:	sub    eax,0x8bf74824
  4030ac:	xor    cl,cl
  4030ae:	xchg   esp,eax
  4030af:	mov    eax,ds:0x367dca55
  4030b4:	popa   
  4030b5:	jbe    0x4030cc
  4030b7:	pop    eax
  4030b8:	mov    BYTE PTR [esi+0x2a],cl
  4030bb:	inc    esi
  4030bc:	cmp    DWORD PTR [ecx+0x6],0xb98523ac
  4030c3:	dec    edi
  4030c4:	out    0xf6,al
  4030c6:	push   esp
  4030c7:	jp     0x403138
  4030c9:	stos   BYTE PTR es:[edi],al
  4030ca:	fist   WORD PTR [esi]
  4030cc:	stos   DWORD PTR es:[edi],eax
  4030cd:	js     0x40312f
  4030cf:	pop    ss
  4030d0:	imul   ecx,ebx,0x4f
  4030d3:	adc    BYTE PTR ss:[ebx],al
  4030d6:	loopne 0x403078
  4030d8:	xor    DWORD PTR [esi-0x6],ebx
  4030db:	inc    ebp
  4030dc:	ret    0xa013
  4030df:	mov    cl,0xc2
  4030e1:	xor    eax,esi
  4030e3:	in     al,dx
  4030e4:	call   0x1b45:0x6da257ba
  4030eb:	fs inc edx
  4030ed:	jo     0x4030f8
  4030ef:	in     eax,0x31
  4030f1:	sti    
  4030f2:	loopne 0x403100
  4030f4:	lds    ebx,FWORD PTR [ebp+0x5e6f3bf0]
  4030fa:	stos   DWORD PTR es:[edi],eax
  4030fb:	mov    cl,0x34
  4030fd:	scas   eax,DWORD PTR es:[edi]
  4030fe:	js     0x403155
  403100:	lea    ebp,[ecx]
  403102:	xlat   BYTE PTR ds:[ebx]
  403103:	pop    esi
  403104:	xchg   esi,eax
  403105:	mov    dh,0x79
  403107:	xor    eax,0xd6c6a0d
  40310c:	lahf   
  40310d:	mov    dh,0xd7
  40310f:	adc    ecx,edi
  403111:	sub    BYTE PTR [ebx],ah
  403113:	add    bl,BYTE PTR [edx]
  403115:	sar    DWORD PTR [edi],0xa5
  403118:	out    dx,al
  403119:	shl    BYTE PTR [esi-0x1f],1
  40311c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40311d:	adc    esi,edx
  40311f:	or     edi,DWORD PTR [edx]
  403121:	arpl   WORD PTR [edx+0x55],di
  403124:	and    DWORD PTR [ebx+0x60aa1c57],esi
  40312a:	mov    ss,WORD PTR [ecx+0x2a]
  40312d:	or     edi,DWORD PTR [edi+esi*2+0x2e]
  403131:	sbb    esi,ecx
  403133:	cmp    al,0x3a
  403135:	fadd   st,st(6)
  403137:	fisub  DWORD PTR [edi]
  403139:	retf   
  40313a:	imul   edx,DWORD PTR [ebx],0xffffffa8
  40313d:	out    0xf7,eax
  40313f:	cmc    
  403140:	inc    esi
  403141:	inc    eax
  403142:	imul   esp,DWORD PTR [eax],0x830699ac
  403148:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403149:	xchg   edx,eax
  40314a:	daa    
  40314b:	mov    BYTE PTR [eax+0x1c],ch
  40314e:	xchg   esi,eax
  40314f:	inc    edi
  403150:	pop    esi
  403151:	(bad)  
  403152:	mov    ah,0x38
  403154:	cwde   
  403155:	jmp    0x55e4efe3
  40315a:	adc    bh,dh
  40315c:	call   0xc70d:0xa878ac5f
  403163:	add    eax,0xb4cc1667
  403168:	fcmovu st,st(4)
  40316a:	jne    0x40317b
  40316c:	jmp    0x4031b7
  40316e:	stos   DWORD PTR es:[edi],eax
  40316f:	mov    al,ds:0x78138942
  403174:	test   BYTE PTR [ebx],0xae
  403177:	popf   
  403178:	ds pop ecx
  40317a:	neg    ch
  40317c:	sahf   
  40317d:	int3   
  40317e:	inc    esi
  40317f:	pop    ss
  403180:	loope  0x4031f4
  403182:	mov    al,ds:0xb3c41e1d
  403187:	in     eax,0xf9
  403189:	jmp    0x4031f0
  40318b:	inc    ebx
  40318c:	jo     0x403127
  40318e:	xchg   esp,eax
  40318f:	mov    edx,0x82b1e79c
  403194:	or     eax,0xa2d7ac28
  403199:	dec    ebp
  40319a:	sub    bl,BYTE PTR [edx]
  40319c:	(bad)  
  40319d:	in     eax,0xc3
  40319f:	pushf  
  4031a0:	add    eax,0x156bcd82
  4031a5:	mov    eax,0xa7e0a29a
  4031aa:	push   ds
  4031ab:	test   eax,0x56c37385
  4031b0:	adc    ebx,DWORD PTR [eax-0x39]
  4031b3:	inc    esp
  4031b4:	(bad)  
  4031b5:	out    dx,al
  4031b6:	push   ecx
  4031b7:	cwde   
  4031b8:	ins    BYTE PTR es:[edi],dx
  4031b9:	and    DWORD PTR [ebx],0x4d
  4031bc:	mov    dh,0x9e
  4031be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031bf:	repz push es
  4031c1:	add    dh,BYTE PTR ds:0x45990789
  4031c7:	(bad)  
  4031c8:	adc    cl,BYTE PTR [edi+0xdb4fc9b]
  4031ce:	(bad)  
  4031cf:	loope  0x4031f9
  4031d1:	pop    eax
  4031d2:	mov    al,0x52
  4031d4:	jb     0x403211
  4031d6:	inc    ebx
  4031d7:	fs (bad) 
  4031d9:	sahf   
  4031da:	js     0x403192
  4031dc:	xchg   ebx,eax
  4031dd:	in     eax,0x35
  4031df:	ja     0x40319c
  4031e1:	xor    DWORD PTR [esi],edx
  4031e3:	xchg   edi,eax
  4031e4:	lds    eax,FWORD PTR [esi]
  4031e6:	leave  
  4031e7:	pop    es
  4031e8:	int3   
  4031e9:	lock (bad) [eax+0x31]
  4031ed:	into   
  4031ee:	mov    ds:0xffa87805,eax
  4031f3:	lock mov edx,0xd9eb0b7
  4031f9:	dec    esi
  4031fa:	mov    bh,0xd4
  4031fc:	mov    cl,0x1
  4031fe:	adc    al,0x86
  403200:	jo     0x40320e
  403202:	jg     0x403266
  403204:	ror    DWORD PTR [ebx],0x50
  403207:	mov    ecx,0x9da320e
  40320c:	div    BYTE PTR [esp+esi*8-0x2c40183b]
  403213:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403214:	out    dx,eax
  403215:	dec    eax
  403216:	or     esi,edi
  403218:	outs   dx,BYTE PTR ds:[esi]
  403219:	rol    ecx,0x32
  40321c:	fld    DWORD PTR [esi-0x60ca50a0]
  403222:	int3   
  403223:	div    DWORD PTR [ebp+0x33]
  403226:	jmp    0x403224
  403228:	push   es
  403229:	fcomp  st(3)
  40322b:	xchg   esp,eax
  40322c:	mov    edi,0x4ae571bd
  403231:	fidiv  DWORD PTR [ecx]
  403233:	push   ds
  403234:	fbld   TBYTE PTR [esi]
  403236:	cmp    bl,BYTE PTR [esi+0x66af4221]
  40323c:	mov    esp,ecx
  40323e:	xor    edx,DWORD PTR [ecx-0x7]
  403241:	dec    esi
  403242:	sub    al,0xe3
  403244:	in     eax,dx
  403245:	inc    edi
  403246:	mov    edx,0x538b7a08
  40324b:	add    al,0x31
  40324d:	jge    0x403233
  40324f:	sub    DWORD PTR ds:0x428509,ebx
  403255:	mov    edx,eax
  403257:	sub    DWORD PTR ds:0x4285a9,0x42838d
  403261:	xor    eax,eax
  403263:	or     eax,DWORD PTR [ebp-0x1c]
  403266:	shl    edx,0x1e
  403269:	mov    edx,DWORD PTR ds:0x428489
  40326f:	xor    DWORD PTR ds:0x42843d,edx
  403275:	imul   eax,ecx
  403278:	sub    DWORD PTR ds:0x428529,0x4172
  403282:	mov    ecx,DWORD PTR [ebx]
  403284:	add    edx,0x41d1
  40328a:	mov    edx,DWORD PTR [ebx+0x4]
  40328d:	shrd   ecx,edx,0x2
  403291:	mov    DWORD PTR [ebp-0x1c],ecx
  403294:	mov    ecx,DWORD PTR [ebx]
  403296:	or     DWORD PTR ds:0x4284f9,0x42b9
  4032a0:	xor    DWORD PTR [ebp-0x1c],edi
  4032a3:	mov    DWORD PTR ds:0x428585,0x397a
  4032ad:	shr    edx,0x2
  4032b0:	cmp    DWORD PTR ds:0x42858d,0x0
  4032b7:	mov    DWORD PTR ds:0x428521,0x7cee
  4032c1:	mov    edx,DWORD PTR ds:0x428435
  4032c7:	jmp    0x403370
  4032cc:	mov    DWORD PTR ds:0x42838d,0x3170
  4032d6:	cmp    DWORD PTR ds:0x42858d,0x0
  4032dd:	jge    0x403302
  4032e3:	push   DWORD PTR [ebp-0x28]
  4032e6:	call   DWORD PTR ds:0x42e244
  4032ec:	add    edx,DWORD PTR ds:0x42844d
  4032f2:	sub    edx,0x765a
  4032f8:	xor    DWORD PTR ds:0x428505,0x290
  403302:	sbb    DWORD PTR ds:0x428441,edi
  403308:	inc    edx
  403309:	not    edx
  40330b:	cmp    DWORD PTR ds:0x428521,0x0
  403312:	mov    edx,DWORD PTR ds:0x428461
  403318:	mov    DWORD PTR ds:0x4284fd,0x501f
  403322:	mov    edx,DWORD PTR ds:0x428501
  403328:	jmp    0x403370
  40332d:	mov    DWORD PTR ds:0x4283a5,0x1634
  403337:	mov    DWORD PTR ds:0x428519,0xaef
  403341:	cmp    DWORD PTR ds:0x428521,0x0
  403348:	jb     0x403364
  40334e:	call   DWORD PTR ds:0x42e0bc
  403354:	adc    DWORD PTR ds:0x428461,0x4284ad
  40335e:	adc    edx,0x2d88
  403364:	and    edx,0x4ab7
  40336a:	sub    edx,DWORD PTR ds:0x428441
  403370:	mov    edx,DWORD PTR [ebx+0x4]
  403373:	or     edx,DWORD PTR ds:0x428519
  403379:	mov    edx,ecx
  40337b:	add    DWORD PTR ds:0x428395,0x428509
  403385:	xor    ecx,ecx
  403387:	adc    DWORD PTR ds:0x428365,0x428485
  403391:	or     ecx,DWORD PTR [ebp-0x1c]
  403394:	sub    DWORD PTR ds:0x42847d,0x6b10
  40339e:	shl    edx,0x1e
  4033a1:	add    DWORD PTR ds:0x42836d,ebx
  4033a7:	sub    ecx,eax
  4033a9:	mov    DWORD PTR ds:0x428439,0x9e0
  4033b3:	mov    eax,DWORD PTR [ebp-0xc]
  4033b6:	cmp    DWORD PTR [eax],ecx
  4033b8:	mov    DWORD PTR ds:0x428599,0x2658
  4033c2:	mov    eax,DWORD PTR [ebp-0xc]
  4033c5:	mov    ecx,DWORD PTR [ebp+0x18]
  4033c8:	mov    edx,DWORD PTR ds:0x428391
  4033ce:	mov    edx,DWORD PTR [ebp+0x1c]
  4033d1:	jg     0x4038e5
  4033d7:	and    DWORD PTR ds:0x4285a1,0xf14
  4033e1:	shrd   ecx,edx,0x2
  4033e5:	xor    DWORD PTR ds:0x428469,0x428461
  4033ef:	mov    DWORD PTR [ebp-0x1c],ecx
  4033f2:	xor    DWORD PTR ds:0x428395,edi
  4033f8:	mov    ecx,DWORD PTR [ebp+0x18]
  4033fb:	xor    DWORD PTR [ebp-0x1c],edi
  4033fe:	shl    ecx,0x1e
  403401:	mov    DWORD PTR ds:0x428445,0x71ad
  40340b:	xor    ecx,ecx
  40340d:	or     ecx,DWORD PTR [ebp-0x1c]
  403410:	shr    edx,0x2
  403413:	sub    DWORD PTR ds:0x42852d,0x3b82
  40341d:	mov    edx,DWORD PTR [ebp+0x1c]
  403420:	cmp    DWORD PTR ds:0x428501,0x0
  403427:	mov    DWORD PTR ds:0x428591,0xe2a
  403431:	mov    DWORD PTR ds:0x428379,ecx
  403437:	mov    edx,0x4d53
  40343c:	jmp    0x4034b7
  403441:	mov    DWORD PTR ds:0x4285a5,0xfd5
  40344b:	mov    DWORD PTR ds:0x428479,ecx
  403451:	cmp    DWORD PTR ds:0x428501,0x0
  403458:	jae    0x4034a5
  40345e:	push   DWORD PTR [ebp-0x1c]
  403461:	push   0x633e
  403466:	push   0x428297
  40346b:	push   DWORD PTR [ebp-0x1c]
  40346e:	push   DWORD PTR [ebp-0xc]
  403471:	push   DWORD PTR [ebp-0x20]
  403474:	push   DWORD PTR [ebp-0x24]
  403477:	push   0x6c89
  40347c:	call   DWORD PTR ds:0x42dff4
  403482:	movzx  edx,WORD PTR ds:0x42845d
  403489:	sub    edx,DWORD PTR ds:0x428515
  40348f:	mov    DWORD PTR ds:0x42845d,edx
  403495:	mov    DWORD PTR ds:0x428391,0x6c8
  40349f:	sbb    edx,DWORD PTR ds:0x42839d
  4034a5:	mov    edx,DWORD PTR ds:0x4285ad
  4034ab:	and    DWORD PTR ds:0x428465,edx
  4034b1:	inc    DWORD PTR ds:0x42835d
  4034b7:	mov    DWORD PTR [ebp-0x2c],ecx
  4034ba:	xor    DWORD PTR ds:0x428375,0x3285
  4034c4:	mov    ecx,DWORD PTR [ebx]
  4034c6:	mov    edx,DWORD PTR [ebx+0x4]
  4034c9:	and    DWORD PTR ds:0x428579,0x4bb1
  4034d3:	shrd   ecx,edx,0x2
  4034d7:	mov    DWORD PTR ds:0x428459,0x325c
  4034e1:	shr    edx,0x2
  4034e4:	add    DWORD PTR ds:0x428511,0x68a9
  4034ee:	mov    DWORD PTR [ebp-0x1c],ecx
  4034f1:	sub    DWORD PTR ds:0x4284b1,ebx
  4034f7:	mov    ecx,DWORD PTR [ebx]
  4034f9:	sub    DWORD PTR ds:0x428499,0x42851d
  403503:	mov    edx,DWORD PTR [ebx+0x4]
  403506:	xor    DWORD PTR [ebp-0x1c],edi
  403509:	sub    DWORD PTR ds:0x428379,0x428391
  403513:	xor    edx,edx
  403515:	or     edx,DWORD PTR [ebp-0x1c]
  403518:	add    DWORD PTR ds:0x428371,0x71c0
  403522:	shl    ecx,0x1e
  403525:	adc    DWORD PTR ds:0x428521,0x4284a1
  40352f:	imul   edx,DWORD PTR [ebp-0x2c]
  403533:	and    DWORD PTR ds:0x42847d,0x15cd
  40353d:	sub    DWORD PTR [eax],edx
  40353f:	jmp    0x4041b5
  403544:	jmp    0x4038e5
  403549:	pop    ss
  40354a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40354b:	out    0xaf,eax
  40354d:	js     0x4034ff
  40354f:	cwde   
  403550:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403551:	retf   
  403552:	mov    ch,0x34
  403554:	fst    QWORD PTR [eax+edi*8]
  403557:	stos   BYTE PTR es:[edi],al
  403558:	jecxz  0x403518
  40355a:	call   0xc4fdf41d
  40355f:	mov    esi,0x7690bebe
  403564:	xchg   edx,eax
  403565:	les    ecx,FWORD PTR [edx+0x350012d]
  40356b:	mov    bl,0x45
  40356d:	pop    ebx
  40356e:	imul   esp,ebx,0xffffff96
  403571:	adc    eax,0xcd628820
  403576:	and    DWORD PTR [ecx],edx
  403578:	mov    esp,0xb875eaea
  40357d:	neg    esp
  40357f:	ins    BYTE PTR es:[edi],dx
  403580:	pop    edx
  403581:	sub    ebp,esp
  403583:	and    ecx,DWORD PTR [ebx]
  403585:	in     al,dx
  403586:	(bad)  
  403587:	shl    BYTE PTR [ebp+0xd],0x1c
  40358b:	dec    eax
  40358c:	popf   
  40358d:	add    eax,0xde1811dd
  403592:	stos   BYTE PTR es:[edi],al
  403593:	push   0xffffff8c
  403595:	dec    edx
  403596:	and    esi,DWORD PTR [esi+edx*4-0x74]
  40359a:	test   DWORD PTR [eax-0x49],eax
  40359d:	xor    eax,0xa1ec766f
  4035a2:	stos   BYTE PTR es:[edi],al
  4035a3:	ret    
  4035a4:	xor    BYTE PTR [ecx+edi*1+0x74],dh
  4035a8:	call   0xa15fc02d
  4035ad:	ins    BYTE PTR es:[edi],dx
  4035ae:	daa    
  4035af:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  4035b1:	daa    
  4035b2:	mov    esp,0x5047a416
  4035b7:	push   ss
  4035b8:	stc    
  4035b9:	test   DWORD PTR [eax-0x72],edx
  4035bc:	adc    BYTE PTR ds:0xfa119203,0x55
  4035c3:	out    0x1b,eax
  4035c5:	xchg   DWORD PTR [ebx-0x2d05d37],ebx
  4035cb:	xor    eax,0xff12f611
  4035d0:	adc    BYTE PTR [ebx],cl
  4035d2:	pop    ebx
  4035d3:	push   edx
  4035d4:	sbb    DWORD PTR [bx+di-0x24],edi
  4035d8:	sub    ebp,ecx
  4035da:	(bad)  
  4035de:	jbe    0x403645
  4035e0:	(bad)  
  4035e1:	cmp    cl,BYTE PTR [ecx+0x6c3632ce]
  4035e7:	cmp    bh,bh
  4035e9:	sbb    DWORD PTR [esi+0x2d6aaffc],ebp
  4035ef:	lahf   
  4035f0:	(bad)  
  4035f1:	jp     0x4035af
  4035f3:	ja     0x4035c8
  4035f5:	aam    0xd5
  4035f7:	xlat   BYTE PTR ds:[ebx]
  4035f8:	mov    dh,0x8c
  4035fa:	imul   esi,DWORD PTR [eax-0x6053d60f],0xffffffcd
  403601:	sub    cl,BYTE PTR [ecx+0xf16f024]
  403607:	loope  0x403682
  403609:	mov    ah,0xf0
  40360b:	std    
  40360c:	xor    dh,BYTE PTR ds:0xee3c86e7
  403612:	ror    ah,cl
  403614:	fild   WORD PTR [ebx+0x1b]
  403617:	xor    DWORD PTR [ebp-0x65],ebx
  40361a:	mov    edi,0xa2710054
  40361f:	call   0xc5f9:0xc0adc166
  403626:	test   eax,0x5c53c315
  40362b:	mov    al,ds:0x84e7cc16
  403630:	xchg   BYTE PTR [edx+0x7c],al
  403633:	lock imul ebx,edi,0x5e5e66ad
  40363a:	jl     0x403640
  40363c:	je     0x4035d8
  40363e:	add    eax,DWORD PTR [edx-0x4ee183d1]
  403644:	xchg   edi,eax
  403645:	push   0xfffffffc
  403647:	mov    bh,0xf0
  403649:	sub    BYTE PTR [ebx],ah
  40364b:	lea    ecx,[ecx-0x56560868]
  403651:	pop    ebp
  403652:	int3   
  403653:	in     eax,dx
  403654:	pop    es
  403655:	loop   0x403619
  403657:	lds    ecx,FWORD PTR [ecx]
  403659:	in     al,0x8e
  40365b:	inc    esp
  40365c:	mov    BYTE PTR [edx],dl
  40365e:	(bad)  
  40365f:	lods   al,BYTE PTR ds:[esi]
  403660:	outs   dx,BYTE PTR ds:[esi]
  403661:	adc    bl,BYTE PTR [edi]
  403663:	push   es
  403664:	adc    eax,DWORD PTR [edi+0x3b8612ab]
  40366a:	cs stc 
  40366c:	lahf   
  40366d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40366e:	add    BYTE PTR [esi-0x31],0x67
  403672:	and    edx,DWORD PTR ds:0xa71450a8
  403678:	and    al,0x1e
  40367a:	push   ds
  40367b:	sub    DWORD PTR [edx],0xffffff86
  40367e:	and    DWORD PTR [edi+edi*1],0x3
  403682:	lds    ecx,FWORD PTR [edi+0x6b]
  403685:	sub    DWORD PTR [eax+0x6f],edx
  403688:	mov    BYTE PTR [eax],ah
  40368a:	call   0xfe2d:0x8342d030
  403691:	sbb    eax,esp
  403693:	adc    BYTE PTR [ebx],dh
  403695:	jmp    0x7485:0x3d989d3c
  40369c:	sbb    BYTE PTR [ebp-0x3adffd],ah
  4036a2:	inc    ecx
  4036a3:	sbb    al,al
  4036a5:	sub    eax,0x79817cf0
  4036aa:	gs jnp 0x4036aa
  4036ad:	aaa    
  4036ae:	mov    ch,0x8
  4036b1:	mov    ah,0x2b
  4036b3:	das    
  4036b4:	fimul  DWORD PTR [edi+0x41]
  4036b7:	sti    
  4036b8:	clc    
  4036b9:	fucomi st,st(2)
  4036bb:	mov    BYTE PTR ss:[ebp-0x26],al
  4036bf:	jp     0x4036be
  4036c1:	test   eax,0xead2219f
  4036c6:	mov    ss,edx
  4036c8:	push   ebp
  4036c9:	cmc    
  4036ca:	popa   
  4036cb:	jmp    FWORD PTR [ebx-0x43]
  4036ce:	stc    
  4036cf:	popa   
  4036d0:	pushf  
  4036d1:	gs jmp 0x7382:0x720cae4e
  4036d9:	pop    eax
  4036da:	mov    esp,0x522f509c
  4036df:	sbb    edi,esi
  4036e1:	enter  0xa2c9,0x83
  4036e5:	retf   
  4036e6:	test   eax,0x3e28ca2a
  4036eb:	pop    ecx
  4036ec:	mov    ds:0xd557fdeb,eax
  4036f1:	sub    al,0xf0
  4036f3:	enter  0xe6ee,0x51
  4036f7:	outs   dx,DWORD PTR ds:[esi]
  4036f8:	popf   
  4036f9:	and    eax,0x7e17179a
  4036fe:	pop    ecx
  4036ff:	fadd   QWORD PTR [eax]
  403701:	xchg   edx,eax
  403702:	push   ebx
  403703:	fistp  DWORD PTR [edx]
  403705:	and    eax,0x7f106e9c
  40370a:	out    dx,al
  40370b:	fdivr  QWORD PTR [edx+0xc930b17]
  403711:	and    al,0x28
  403713:	inc    ebx
  403714:	test   DWORD PTR ds:0xea9e3cab,0xa315d6cb
  40371e:	in     eax,0x3b
  403720:	pop    ds
  403721:	ret    
  403722:	sbb    eax,0xe1583e05
  403727:	jb     0x4036f0
  403729:	jmp    0xe6e0:0xec3ad479
  403730:	les    edx,FWORD PTR [ecx+0x6b]
  403733:	rcl    BYTE PTR [ecx+edi*2-0x46],cl
  403737:	push   edi
  403738:	pop    ebp
  403739:	xor    DWORD PTR [esi+0x64],edx
  40373c:	or     esp,eax
  40373e:	fist   WORD PTR [edx+0x3fc6fcb4]
  403744:	cdq    
  403745:	mov    esi,0xd13ce54f
  40374a:	adc    BYTE PTR [ebp-0x27],al
  40374d:	push   ebx
  40374e:	int    0xbc
  403750:	lods   eax,DWORD PTR ds:[esi]
  403751:	je     0x403783
  403753:	(bad)  
  403754:	xchg   edx,eax
  403755:	jns    0x4037cc
  403757:	scas   eax,DWORD PTR es:[edi]
  403758:	add    bl,bh
  40375a:	popa   
  40375b:	fs sbb ecx,edx
  40375e:	xchg   esp,eax
  40375f:	arpl   WORD PTR [edx-0x3],si
  403762:	mov    ebp,0xf418fd6
  403767:	add    dh,BYTE PTR [esi-0x4487fa55]
  40376d:	fld    TBYTE PTR [edi+0xb]
  403770:	push   ecx
  403771:	xor    edi,DWORD PTR [edx+0x41]
  403774:	sub    bl,BYTE PTR [ecx]
  403776:	mov    bl,0x28
  403778:	sub    al,0xdd
  40377a:	imul   edx,ebx,0x4
  40377d:	inc    edx
  40377e:	int3   
  40377f:	fsubr  st(3),st
  403781:	pop    ds
  403782:	(bad)  
  403783:	jmp    0x814bfe49
  403788:	sbb    esp,edi
  40378a:	add    dl,BYTE PTR ds:[ebp+ebx*4-0x49]
  40378f:	inc    esi
  403790:	dec    edx
  403791:	int    0x5e
  403793:	lock adc bl,BYTE PTR [ecx+0x306ca079]
  40379a:	or     al,BYTE PTR ds:0xd221596a
  4037a0:	and    BYTE PTR [eax+eiz*8-0x418ce941],dh
  4037a7:	inc    edx
  4037a8:	cmp    al,0x65
  4037aa:	mov    eax,0xf154ceee
  4037af:	inc    edi
  4037b0:	and    BYTE PTR [ebp+0x42],ah
  4037b3:	inc    eax
  4037b4:	xchg   ebp,eax
  4037b5:	aad    0x7
  4037b7:	sbb    al,0xaa
  4037b9:	sub    edx,edx
  4037bb:	push   eax
  4037bc:	sti    
  4037bd:	test   eax,0x85311ab0
  4037c2:	fdiv   QWORD PTR [esi-0x1fc3ddd1]
  4037c8:	(bad)  
  4037c9:	ror    DWORD PTR [eax],1
  4037cb:	daa    
  4037cc:	cs jns 0x4037a7
  4037cf:	lahf   
  4037d0:	jmp    0x403794
  4037d2:	add    al,0x34
  4037d4:	jmp    0x403803
  4037d6:	xchg   esi,eax
  4037d7:	sub    BYTE PTR [edx],ch
  4037d9:	lds    esp,FWORD PTR ds:0xebf8afd5
  4037df:	sub    ch,0x2d
  4037e2:	nop
  4037e3:	mov    ecx,0x3deeb060
  4037e8:	and    al,0x8c
  4037ea:	ret    0xe80c
  4037ed:	add    ch,BYTE PTR [esp+edx*2-0x5a72f8e7]
  4037f4:	aam    0x52
  4037f6:	xchg   ebx,eax
  4037f7:	icebp  
  4037f8:	mov    al,ds:0x878de41b
  4037fd:	xchg   ecx,eax
  4037fe:	stos   BYTE PTR es:[edi],al
  4037ff:	adc    DWORD PTR [ebp+0x2305e5a],esi
  403805:	push   es
  403806:	cmp    bl,BYTE PTR [ebp+0x2f]
  403809:	push   esp
  40380a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40380b:	imul   esi,DWORD PTR [edx+0x1a],0x4a
  40380f:	push   edi
  403810:	xchg   esi,eax
  403811:	pop    eax
  403812:	nop
  403813:	fldlg2 
  403815:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403816:	repz rcr al,0xa0
  40381a:	mov    ebx,0x55d697bf
  40381f:	sbb    bh,bl
  403821:	stos   BYTE PTR es:[edi],al
  403822:	aaa    
  403823:	mov    ch,0x58
  403825:	pop    ebp
  403826:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403827:	aaa    
  403828:	jle    0x40384c
  40382a:	mov    ebp,0xae0204ef
  40382f:	ror    BYTE PTR ds:0xd8bb1379,0x7d
  403836:	aas    
  403837:	add    eax,0x72888dee
  40383c:	jnp    0x403837
  40383e:	imul   edx,DWORD PTR [ecx-0x50],0x856ecdbc
  403845:	in     al,dx
  403846:	mov    esp,0x955b790e
  40384b:	mov    edx,0x1bdda3ef
  403850:	cld    
  403851:	inc    esp
  403852:	shl    DWORD PTR [edi],cl
  403854:	pop    edi
  403855:	pop    edx
  403856:	sub    edi,DWORD PTR [eax]
  403858:	shl    ch,0x5
  40385b:	data16 and al,0xa8
  40385e:	out    dx,eax
  40385f:	stos   DWORD PTR es:[edi],eax
  403860:	jle    0x403867
  403862:	loopne 0x4038b6
  403864:	mov    esi,0x82963136
  403869:	or     eax,0x317cebc3
  40386e:	(bad)  
  40386f:	mov    ebx,DWORD PTR [ebp+edi*2+0x68cf527e]
  403876:	out    0x33,al
  403878:	in     al,dx
  403879:	retf   0xeaf6
  40387c:	out    dx,eax
  40387d:	outs   dx,BYTE PTR ds:[esi]
  40387e:	in     eax,dx
  40387f:	mov    edx,0x5ef7f013
  403884:	pushf  
  403885:	popf   
  403886:	cmp    BYTE PTR [edx-0x211a6058],bl
  40388c:	mov    ecx,0xdb4548f1
  403891:	mov    BYTE PTR [ebp+0x105e1715],ch
  403897:	in     eax,dx
  403898:	aaa    
  403899:	imul   ebp,DWORD PTR [ebp+0x73],0x3ea57820
  4038a0:	cmp    al,0x92
  4038a2:	sbb    BYTE PTR [edi-0x33],dl
  4038a5:	enter  0x6daa,0xf9
  4038a9:	xor    ecx,esp
  4038ab:	pop    esp
  4038ac:	xor    BYTE PTR [edi+0x7ef3b40e],bl
  4038b2:	jp     0x4038bb
  4038b4:	cmp    BYTE PTR [eax+0xe],dh
  4038b7:	and    eax,0x5aeb5aa2
  4038bc:	sar    DWORD PTR ds:0x94e59763,0xff
  4038c3:	psrad  mm4,QWORD PTR [esi-0x183bfda5]
  4038ca:	popa   
  4038cb:	call   0x9268:0x109ef645
  4038d2:	(bad)  
  4038d3:	(bad)  
  4038d4:	xlat   BYTE PTR ds:[ebx]
  4038d5:	inc    eax
  4038d6:	in     eax,dx
  4038d7:	test   eax,0xfcd61e2b
  4038dc:	jne    0x403889
  4038de:	mov    eax,DWORD PTR [edi+ebp*1]
  4038e1:	jl     0x4038ba
  4038e3:	aam    0xd7
  4038e5:	shrd   ecx,edx,0x2
  4038e9:	xor    DWORD PTR ds:0x4284f5,0x4285a5
  4038f3:	mov    DWORD PTR [ebp-0x1c],ecx
  4038f6:	mov    ecx,DWORD PTR [ebp+0x18]
  4038f9:	xor    DWORD PTR ds:0x428489,0x4285b1
  403903:	xor    DWORD PTR [ebp-0x1c],edi
  403906:	adc    DWORD PTR ds:0x428475,0x4aad
  403910:	shl    ecx,0x1e
  403913:	not    DWORD PTR ds:0x42843d
  403919:	xor    ecx,ecx
  40391b:	sub    DWORD PTR ds:0x428589,0x450d
  403925:	or     ecx,DWORD PTR [ebp-0x1c]
  403928:	jmp    0x403cc9
  40392d:	cdq    
  40392e:	jbe    0x40398b
  403930:	fidivr WORD PTR [ebx+eiz*8-0x40084545]
  403937:	mul    BYTE PTR [esi+edi*8-0x426db5b2]
  40393e:	in     eax,dx
  40393f:	mov    esi,0xbec4bdbe
  403944:	mov    esi,0xdaf73817
  403949:	rol    DWORD PTR [ebx+0x4f],1
  40394c:	cmp    eax,0x3e6c7e9c
  403951:	mov    BYTE PTR [ecx+0x4d],0x9a
  403955:	lods   eax,DWORD PTR ds:[esi]
  403956:	or     dl,BYTE PTR [ebp+0x51]
  403959:	or     BYTE PTR [eax+0x74],bh
  40395c:	lahf   
  40395d:	mov    ebx,0xaffcada0
  403962:	lods   eax,DWORD PTR ds:[esi]
  403963:	xchg   bl,ah
  403965:	dec    ebp
  403966:	pop    esi
  403967:	mov    ecx,DWORD PTR [ebp-0x73]
  40396a:	cmp    al,0xf9
  40396c:	pop    ebp
  40396d:	mov    ds:0xcbdeaea1,eax
  403972:	pop    esp
  403973:	mov    bh,0xe2
  403975:	scas   al,BYTE PTR es:[edi]
  403976:	ins    BYTE PTR es:[edi],dx
  403977:	cmp    DWORD PTR [edx+ecx*2-0x63b3994c],esi
  40397e:	mov    ebp,0x10ae9a35
  403983:	loopne 0x403920
  403985:	loop   0x4039e1
  403987:	lods   eax,DWORD PTR ds:[esi]
  403988:	and    ah,0x95
  40398b:	out    dx,eax
  40398c:	jmp    0xa56a:0x16c3c20f
  403993:	leave  
  403994:	xor    DWORD PTR [ebx+edi*1],esp
  403997:	out    0x3d,eax
  403999:	stc    
  40399a:	in     al,dx
  40399b:	mov    ds:0xbb2dca7d,al
  4039a0:	or     ebx,ebx
  4039a2:	mov    DWORD PTR ds:0xe20b4e08,edi
  4039a8:	fild   QWORD PTR [ebx+0x37768374]
  4039ae:	and    al,0xe9
  4039b0:	jne    0x40394a
  4039b2:	outs   dx,BYTE PTR ds:[esi]
  4039b3:	jae    0x4039f1
  4039b5:	leave  
  4039b6:	cs jno 0x4039a6
  4039b9:	cmp    bh,BYTE PTR [eax-0x66]
  4039bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4039bd:	pop    ecx
  4039be:	test   cl,cl
  4039c0:	dec    BYTE PTR [eax-0x59971598]
  4039c6:	frstor [edi-0x23c518c7]
  4039cc:	cmp    BYTE PTR ds:[esp+eax*4+0x54ee9edd],cl
  4039d4:	jno    0x4039fc
  4039d6:	jbe    0x403961
  4039d8:	add    ebx,ecx
  4039da:	nop
  4039db:	or     DWORD PTR [esi+0x3c2f7d6b],0x74a36e1b
  4039e5:	sbb    al,BYTE PTR [edi-0x9ea5bba]
  4039eb:	or     DWORD PTR ds:0xc57be4c9,0x2f09f0dd
  4039f5:	or     al,0xa8
  4039f7:	rcl    DWORD PTR [edi+0x350878a8],1
  4039fd:	jne    0x403a45
  4039ff:	daa    
  403a00:	push   ss
  403a01:	add    al,0xa6
  403a03:	mov    cl,0x54
  403a05:	fld    TBYTE PTR [ecx+0x7a]
  403a08:	xchg   edx,eax
  403a09:	imul   esi,edx,0xf629e4d2
  403a0f:	rcl    BYTE PTR [eax+0x7d990e59],cl
  403a15:	not    BYTE PTR [edi]
  403a17:	dec    esi
  403a18:	xchg   ebp,eax
  403a19:	mov    ecx,0x266feb68
  403a1e:	test   al,0xae
  403a20:	hlt    
  403a21:	aas    
  403a22:	icebp  
  403a23:	sbb    al,0x47
  403a25:	ret    0xee38
  403a28:	push   esi
  403a29:	cwde   
  403a2a:	cli    
  403a2b:	or     BYTE PTR [edx-0x4f],0xaa
  403a2f:	mov    ds:0x417b29,eax
  403a34:	jbe    0x403a74
  403a36:	or     bh,BYTE PTR [eax]
  403a38:	ficomp WORD PTR [edi+0x5cb8bb17]
  403a3e:	and    eax,0xa0e1af2c
  403a43:	mov    ecx,0xcb7a1a92
  403a48:	ja     0x403a3f
  403a4a:	or     DWORD PTR [edx],esi
  403a4c:	push   ebx
  403a4d:	lahf   
  403a4e:	idiv   BYTE PTR [ecx]
  403a50:	aad    0xcb
  403a52:	dec    ecx
  403a53:	je     0x403a9b
  403a55:	add    DWORD PTR [ecx+0x313c0d06],edi
  403a5b:	pop    edi
  403a5c:	ins    BYTE PTR es:[edi],dx
  403a5d:	inc    ebx
  403a5e:	push   ds
  403a5f:	(bad)  [ecx-0x2c]
  403a62:	mov    esi,0x39e8ee
  403a67:	jbe    0x403ad1
  403a69:	retf   0x41c2
  403a6c:	cmp    DWORD PTR [esi-0x51],edi
  403a6f:	mov    eax,ds:0xa55f7c33
  403a74:	ds (bad) 
  403a77:	int    0x6e
  403a79:	mov    bh,0x9d
  403a7b:	test   DWORD PTR [ecx],ebx
  403a7d:	pop    ebp
  403a7e:	pusha  
  403a7f:	xor    eax,0x16a720b1
  403a84:	jbe    0x403a44
  403a86:	or     ah,BYTE PTR [eax]
  403a88:	adc    DWORD PTR [edx],esp
  403a8a:	sub    eax,0x622ed984
  403a8f:	sbb    al,BYTE PTR [eax+0x55850087]
  403a95:	leave  
  403a96:	int    0x8e
  403a98:	jge    0x403a20
  403a9a:	cwde   
  403a9b:	outs   dx,BYTE PTR ds:[esi]
  403a9c:	imul   ebp,DWORD PTR [ebp+0x41e76ba2],0xff5c3273
  403aa6:	xor    al,0x59
  403aa8:	popf   
  403aa9:	int3   
  403aaa:	jnp    0x403aca
  403aac:	ror    BYTE PTR ds:0x509a16ca,0xad
  403ab3:	scas   eax,DWORD PTR es:[edi]
  403ab4:	into   
  403ab5:	ror    BYTE PTR [ebp+0x49],0x3f
  403ab9:	into   
  403aba:	pop    ss
  403abb:	enter  0xc53a,0xed
  403abf:	sbb    BYTE PTR [ebx-0x4e],al
  403ac2:	js     0x403aa7
  403ac4:	ins    BYTE PTR es:[edi],dx
  403ac5:	imul   ebp,DWORD PTR [esi],0xa3c38f07
  403acb:	pushf  
  403acc:	and    BYTE PTR [ebp+0x1d],ah
  403acf:	push   esi
  403ad0:	cli    
  403ad1:	jle    0x403a76
  403ad3:	icebp  
  403ad4:	inc    eax
  403ad5:	sub    eax,0x976f102
  403ada:	icebp  
  403adb:	ret    
  403adc:	xor    al,0x8f
  403ade:	in     eax,dx
  403adf:	test   eax,0x2b05ea2c
  403ae4:	xor    DWORD PTR [edi-0x9fedd66],edx
  403aea:	retf   
  403aeb:	ds cs cld 
  403aee:	outs   dx,DWORD PTR ds:[esi]
  403aef:	lock lahf 
  403af1:	loope  0x403aaf
  403af3:	or     al,0xaf
  403af5:	jno    0x403af4
  403af7:	retf   0xe262
  403afa:	jb     0x403afc
  403afc:	sahf   
  403afd:	mov    al,BYTE PTR [eax+0x682d72d8]
  403b03:	pop    esi
  403b04:	daa    
  403b05:	out    dx,al
  403b06:	push   es
  403b07:	ja     0x403b65
  403b09:	jne    0x403b08
  403b0b:	cmp    al,0x39
  403b0d:	mov    eax,ds:0xb5129e6
  403b12:	and    eax,0x4629d2e1
  403b17:	ins    DWORD PTR es:[edi],dx
  403b18:	(bad)  
  403b19:	mov    ecx,0x16c5db77
  403b1e:	mov    BYTE PTR [edi],dh
  403b20:	dec    esp
  403b21:	xchg   ecx,eax
  403b22:	xchg   edi,eax
  403b23:	and    esp,DWORD PTR [edi+0x11]
  403b26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b27:	fisttp DWORD PTR [edx+ebx*1]
  403b2a:	std    
  403b2b:	aad    0x40
  403b2d:	dec    ecx
  403b2e:	lock aas 
  403b30:	fstp   DWORD PTR [ebx]
  403b32:	call   0xe1f1:0xe953f87
  403b39:	lea    eax,[ebp+ebp*1+0x7d08e56c]
  403b40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b41:	cmp    dl,bl
  403b43:	pusha  
  403b44:	cmp    eax,0xf7179f06
  403b49:	mov    bl,0x4
  403b4b:	mov    bh,0xe2
  403b4d:	ins    DWORD PTR es:[edi],dx
  403b4e:	popa   
  403b4f:	pusha  
  403b50:	mov    ecx,0x1f5ff0cf
  403b55:	inc    edx
  403b56:	mov    ebp,DWORD PTR [ecx-0x38]
  403b59:	(bad)  
  403b5a:	and    bl,BYTE PTR [edx-0x3ea503]
  403b60:	xchg   BYTE PTR [eax],dl
  403b62:	stos   DWORD PTR es:[edi],eax
  403b63:	cmp    dl,BYTE PTR [esi-0x19]
  403b66:	ja     0x403b7d
  403b68:	bound  esp,QWORD PTR [ecx]
  403b6a:	mov    ah,0xda
  403b6c:	imul   ebx,DWORD PTR [ebx],0xffffffee
  403b6f:	jl     0x403bbd
  403b71:	xor    cl,dl
  403b73:	mov    dh,0x76
  403b75:	adc    eax,0xd0ff3e00
  403b7a:	cmp    ch,al
  403b7c:	dec    eax
  403b7d:	and    esp,eax
  403b7f:	sub    al,0x95
  403b81:	adc    cl,BYTE PTR [ebx]
  403b83:	mov    eax,ds:0x7c7f158f
  403b88:	jb     0x403b3e
  403b8a:	dec    ebx
  403b8b:	stc    
  403b8c:	adc    DWORD PTR [eax+0x61],0x12a3fa0b
  403b93:	ret    0xb727
  403b96:	pop    edi
  403b97:	fdivr  DWORD PTR [eax-0x2bcbe696]
  403b9d:	ret    
  403b9e:	test   ch,dh
  403ba0:	jmp    0x5b0f:0x6f2263b4
  403ba7:	mov    al,0xeb
  403ba9:	sub    edi,DWORD PTR [edx-0x63]
  403bac:	and    bl,BYTE PTR [edx]
  403bae:	mov    cl,BYTE PTR [eax-0x5d8a959d]
  403bb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bb5:	jmp    0xb1bea82b
  403bba:	daa    
  403bbb:	cwde   
  403bbc:	add    eax,0x290e03f6
  403bc1:	sbb    al,0xa7
  403bc3:	(bad)  
  403bc4:	mov    dh,BYTE PTR [ecx+0x1a248696]
  403bca:	pop    ebp
  403bcb:	pop    eax
  403bcc:	cmp    cl,ah
  403bce:	test   al,0x73
  403bd0:	sbb    BYTE PTR [edi],cl
  403bd2:	rol    DWORD PTR [ebp-0x3e],1
  403bd5:	xlat   BYTE PTR ds:[ebx]
  403bd6:	add    BYTE PTR [ecx+0x7b],bl
  403bd9:	scas   eax,DWORD PTR es:[edi]
  403bda:	cs push 0x1
  403bdd:	fdivr  DWORD PTR [eax+ecx*8-0x42446fa5]
  403be4:	dec    esi
  403be5:	lods   eax,DWORD PTR ds:[esi]
  403be6:	out    0x4e,al
  403be8:	shl    BYTE PTR [ecx-0x50],cl
  403beb:	mov    DWORD PTR [edx],edx
  403bed:	pusha  
  403bee:	sub    DWORD PTR [esi+0x330fbb],eax
  403bf4:	pop    edi
  403bf5:	pop    esi
  403bf6:	mov    esi,0xff385bc1
  403bfb:	xchg   BYTE PTR fs:[ecx+0x1132e7e5],bh
  403c02:	in     al,0x91
  403c04:	and    DWORD PTR [esi],esp
  403c06:	inc    edx
  403c07:	mov    eax,ds:0x3ca19c89
  403c0c:	inc    edi
  403c0d:	outs   dx,BYTE PTR ds:[esi]
  403c0e:	pop    esi
  403c0f:	test   DWORD PTR [edx],ebp
  403c11:	add    DWORD PTR [edx],0x389d66f2
  403c17:	sub    dl,BYTE PTR [edx+eax*2-0x1d31f07d]
  403c1e:	ror    DWORD PTR [ebx],cl
  403c20:	lods   eax,DWORD PTR ds:[esi]
  403c21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c22:	imul   ecx,DWORD PTR [ebx],0x7bb034fd
  403c28:	mov    eax,ds:0x21c20eda
  403c2d:	call   0x3c47:0x3535ee9e
  403c34:	and    ah,bl
  403c36:	jbe    0x403bd0
  403c38:	mov    ?,WORD PTR [edi]
  403c3a:	pop    ebx
  403c3b:	inc    edx
  403c3c:	adc    ah,bl
  403c3e:	and    DWORD PTR [edx-0x8],edi
  403c41:	ror    ebp,1
  403c43:	jg     0x403ca7
  403c45:	push   ss
  403c46:	jp     0x403ca2
  403c48:	and    al,0xf4
  403c4a:	scas   al,BYTE PTR es:[edi]
  403c4b:	and    ebx,ecx
  403c4d:	bound  edi,QWORD PTR [ebp-0x29]
  403c50:	out    dx,al
  403c51:	(bad)  
  403c52:	stos   BYTE PTR es:[edi],al
  403c53:	and    ecx,DWORD PTR [ecx+esi*8-0xd]
  403c57:	mov    esi,0xfee63be5
  403c5c:	addr16 mov ah,0xaf
  403c5f:	std    
  403c60:	ins    BYTE PTR es:[edi],dx
  403c61:	pop    ebx
  403c62:	cwde   
  403c63:	jl     0x403ca5
  403c65:	fist   DWORD PTR [ecx]
  403c67:	out    0x6b,eax
  403c69:	add    esi,0xcbf326d2
  403c6f:	cmp    al,BYTE PTR [ebx-0x7bf11bf0]
  403c75:	daa    
  403c76:	adc    BYTE PTR [esi],dl
  403c78:	iret   
  403c79:	sbb    esp,DWORD PTR [ecx+esi*2]
  403c7c:	xchg   DWORD PTR [ecx],esp
  403c7e:	jecxz  0x403c88
  403c80:	push   esi
  403c81:	repz cs repnz dec ebx
  403c85:	dec    edx
  403c86:	sub    DWORD PTR [edx+0x1b],ebx
  403c89:	add    al,0x20
  403c8b:	in     eax,0xad
  403c8d:	and    al,0x7e
  403c8f:	push   ecx
  403c90:	add    DWORD PTR [ebx+0x58],edi
  403c93:	shr    DWORD PTR [ecx],cl
  403c95:	hlt    
  403c96:	or     al,0x1e
  403c98:	mov    esp,0x7536bed5
  403c9d:	arpl   sp,bx
  403c9f:	mov    al,ds:0x52ca4a06
  403ca4:	inc    ebp
  403ca5:	cmc    
  403ca6:	les    edi,FWORD PTR [ecx-0x42]
  403ca9:	mov    esp,0x26b2026f
  403cae:	or     esi,DWORD PTR [edx-0x26753b96]
  403cb4:	imul   edi,DWORD PTR [ebx-0x37facc11],0x61df3159
  403cbe:	jo     0x403d17
  403cc0:	sub    eax,0x1b67b47c
  403cc5:	adc    DWORD PTR [edi-0x153e7d7f],ebp
  403ccb:	add    cl,BYTE PTR [edi]
  403ccd:	mov    bh,0x15
  403ccf:	inc    ecx
  403cd0:	test   BYTE PTR [edx+0x0],al
  403cd3:	and    DWORD PTR ds:0x42843d,edx
  403cd9:	mov    edx,DWORD PTR [ebp+0x1c]
  403cdc:	cmp    DWORD PTR ds:0x4284a5,0x0
  403ce3:	mov    edx,0xb30
  403ce8:	not    DWORD PTR ds:0x42836d
  403cee:	jmp    0x403db9
  403cf3:	mov    DWORD PTR ds:0x428371,0x7955
  403cfd:	mov    DWORD PTR ds:0x4284fd,0x3fbe
  403d07:	cmp    DWORD PTR ds:0x4284a5,0x0
  403d0e:	jae    0x403d49
  403d14:	push   0x2165
  403d19:	push   0x209b
  403d1e:	push   0x61ab
  403d23:	push   0x585a
  403d28:	push   DWORD PTR [ebp-0x14]
  403d2b:	call   DWORD PTR ds:0x42e0c0
  403d31:	xor    DWORD PTR ds:0x42843d,edi
  403d37:	xor    DWORD PTR ds:0x428449,edi
  403d3d:	xor    edx,DWORD PTR ds:0x4284a9
  403d43:	sub    DWORD PTR ds:0x428395,edi
  403d49:	sbb    DWORD PTR ds:0x4284b1,0x3090
  403d53:	sub    DWORD PTR ds:0x428461,ecx
  403d59:	xor    DWORD PTR ds:0x42850d,edi
  403d5f:	cmp    DWORD PTR ds:0x42857d,0x0
  403d66:	mov    edx,0x71bd
  403d6b:	not    edx
  403d6d:	jmp    0x403db9
  403d72:	mov    edx,0x37a5
  403d77:	mov    edx,0x5337
  403d7c:	cmp    DWORD PTR ds:0x42857d,0x0
  403d83:	jle    0x403dad
  403d89:	push   0x428475
  403d8e:	call   DWORD PTR ds:0x42e0c4
  403d94:	mov    edx,DWORD PTR ds:0x428551
  403d9a:	mov    edx,DWORD PTR [edx]
  403d9c:	and    DWORD PTR ds:0x42835d,edx
  403da2:	adc    DWORD PTR ds:0x428459,0x11e9
  403dac:	dec    edx
  403dad:	and    edx,0xf08
  403db3:	sub    edx,DWORD PTR ds:0x4285a1
  403db9:	mov    DWORD PTR [ebp-0x2c],ecx
  403dbc:	mov    ecx,DWORD PTR [esi]
  403dbe:	add    DWORD PTR ds:0x428475,ebx
  403dc4:	mov    edx,DWORD PTR [esi+0x4]
  403dc7:	or     DWORD PTR ds:0x428365,0x428379
  403dd1:	shrd   ecx,edx,0x2
  403dd5:	xor    DWORD PTR ds:0x428509,0x24cb
  403ddf:	shr    edx,0x2
  403de2:	and    edx,DWORD PTR ds:0x428591
  403de8:	mov    DWORD PTR [ebp-0x1c],ecx
  403deb:	mov    ecx,DWORD PTR [esi]
  403ded:	mov    edx,DWORD PTR [esi+0x4]
  403df0:	xor    DWORD PTR [ebp-0x1c],edi
  403df3:	xor    edx,edx
  403df5:	or     edx,DWORD PTR [ebp-0x1c]
  403df8:	sub    DWORD PTR ds:0x42843d,0x5e3f
  403e02:	shl    ecx,0x1e
  403e05:	sbb    DWORD PTR ds:0x42843d,0x5068
  403e0f:	add    edx,DWORD PTR [ebp-0x2c]
  403e12:	jmp    0x4041b3
  403e17:	bound  ecx,QWORD PTR [ebx-0x73d3f5ff]
  403e1d:	push   0xffffffab
  403e1f:	(bad)  
  403e20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e21:	push   ss
  403e22:	rol    DWORD PTR [edx+0x1c],1
  403e25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e26:	jecxz  0x403de6
  403e28:	cmc    
  403e29:	mov    esi,0xbec4bdbe
  403e2e:	mov    esi,0x9266fd06
  403e33:	(bad)  
  403e34:	fsub   QWORD PTR [ebp+0x32]
  403e37:	loop   0x403e6b
  403e39:	jno    0x403df9
  403e3b:	aad    0x31
  403e3d:	jmp    0xb671:0xcc4457c
  403e44:	loopne 0x403e16
  403e46:	fdiv   DWORD PTR [esi+esi*4-0x257176c8]
  403e4d:	xchg   ebx,eax
  403e4e:	cmc    
  403e4f:	aas    
  403e50:	mov    ds:0xf298dee4,eax
  403e55:	cmp    DWORD PTR [ecx+eiz*4],esi
  403e58:	xor    eax,0xb8b48627
  403e5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e5e:	xor    ebx,esp
  403e60:	jle    0x403edc
  403e62:	daa    
  403e63:	dec    esi
  403e64:	mov    ebp,DWORD PTR [ecx]
  403e66:	aaa    
  403e67:	mov    ah,dl
  403e69:	and    al,0x57
  403e6b:	sbb    DWORD PTR [edi+ecx*8+0x7d5e993a],ecx
  403e72:	aas    
  403e73:	test   BYTE PTR [ebp-0x32f16222],ah
  403e79:	jle    0x403e19
  403e7b:	and    eax,0x54c005b6
  403e80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e81:	or     BYTE PTR [ebx+eax*8],al
  403e84:	pop    edx
  403e85:	xchg   ebx,eax
  403e86:	mov    ch,0xe2
  403e88:	dec    ecx
  403e89:	push   es
  403e8a:	(bad)  
  403e8b:	scas   al,BYTE PTR es:[edi]
  403e8c:	adc    al,0x63
  403e8e:	fcmovb st,st(2)
  403e90:	or     BYTE PTR [ecx],al
  403e92:	sub    eax,ecx
  403e94:	mov    ah,0xbb
  403e96:	ret    0x39c2
  403e99:	xlat   BYTE PTR ds:[ebx]
  403e9a:	test   eax,0xc0b53c1e
  403e9f:	pop    esp
  403ea0:	add    edi,DWORD PTR [edx-0x1750da25]
  403ea6:	mov    WORD PTR [edx],ss
  403ea8:	call   0x2754:0x2fd5ff6e
  403eaf:	loope  0x403e68
  403eb1:	xchg   ecx,eax
  403eb2:	fistp  DWORD PTR [esp+ebp*4+0x4bf93d02]
  403eb9:	ficomp WORD PTR [esi+0x2d00925d]
  403ebf:	push   esi
  403ec0:	lods   eax,DWORD PTR ds:[esi]
  403ec1:	icebp  
  403ec2:	xchg   BYTE PTR [edx],ah
  403ec4:	and    esp,DWORD PTR [edx+0x46efc229]
  403eca:	das    
  403ecb:	(bad)  
  403ecc:	add    al,0xb3
  403ece:	call   0xb753:0x5abbdfaf
  403ed5:	mov    DWORD PTR [ebx+0x3fccc656],ebp
  403edb:	repz push edi
  403edd:	in     eax,0x8c
  403edf:	or     al,0xec
  403ee1:	test   BYTE PTR [edx+ebx*4],dh
  403ee4:	jl     0x403e6b
  403ee6:	fiadd  WORD PTR [edx+0x1]
  403ee9:	js     0x403eac
  403eeb:	push   ebp
  403eec:	int    0xa6
  403eee:	mov    ah,0x94
  403ef0:	jae    0x403f02
  403ef2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ef3:	push   eax
  403ef4:	xlat   BYTE PTR ds:[ebx]
  403ef5:	or     eax,DWORD PTR [ebx]
  403ef7:	or     BYTE PTR [edi+0x4c],dh
  403efa:	int    0x5f
  403efc:	cli    
  403efd:	adc    al,0xad
  403eff:	es jl  0x403ecd
  403f02:	pop    ds
  403f03:	loop   0x403f3c
  403f05:	(bad)
  403f08:	cmp    eax,0x4b680952
  403f0d:	xchg   edi,eax
  403f0e:	mov    bl,0x93
  403f10:	adc    eax,0x7ec3608b
  403f15:	fscale 
  403f17:	aad    0x8a
  403f19:	sti    
  403f1a:	inc    ecx
  403f1b:	(bad)  
  403f1d:	inc    edi
  403f1e:	or     BYTE PTR [eax-0x11],dl
  403f21:	mov    bh,0x50
  403f23:	inc    ebp
  403f24:	test   al,0xd9
  403f26:	test   al,0x23
  403f28:	mov    ah,0x68
  403f2a:	jo     0x403eda
  403f2c:	mov    ebp,0x7202e32e
  403f31:	std    
  403f32:	retf   0x7b0e
  403f35:	rcr    edi,1
  403f37:	call   0xb670:0x7becd045
  403f3e:	jmp    0x403ef4
  403f40:	je     0x403fb5
  403f42:	mov    bl,0xdb
  403f44:	and    eax,0xccd212aa
  403f49:	in     al,dx
  403f4a:	(bad)  
  403f4c:	xchg   BYTE PTR [ebx-0x19],bh
  403f4f:	xchg   BYTE PTR [edi+edi*4-0x7f],bl
  403f53:	mov    al,0x28
  403f55:	mov    bh,0xcf
  403f57:	mov    cl,0xf8
  403f59:	jnp    0x403f16
  403f5b:	out    dx,eax
  403f5c:	in     eax,dx
  403f5d:	cmp    eax,0x7f474bcf
  403f62:	int3   
  403f63:	rcl    DWORD PTR [ecx-0x3908579],0xc1
  403f6a:	jmp    0x65f6be95
  403f6f:	shl    DWORD PTR [edx],1
  403f71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f72:	bound  ecx,QWORD PTR [ebp-0x32502681]
  403f78:	jbe    0x403f7f
  403f7a:	dec    eax
  403f7b:	(bad)  
  403f7c:	fcom   DWORD PTR [esi-0x57a4b22c]
  403f82:	lds    esp,FWORD PTR [esp+ebx*4-0x3c]
  403f86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f87:	frstor [ebx-0x1e]
  403f8a:	aam    0x36
  403f8c:	cli    
  403f8d:	jbe    0x403f55
  403f8f:	sub    BYTE PTR [edx-0x38],ch
  403f92:	and    al,0x1b
  403f94:	adc    BYTE PTR [esi-0x4642a1e8],ah
  403f9a:	xchg   esi,eax
  403f9b:	or     BYTE PTR [ebp+eax*4+0x64e90f4a],0x4d
  403fa3:	fwait
  403fa4:	mov    ah,0x40
  403fa6:	cwde   
  403fa7:	xor    eax,0x4ba36e8b
  403fac:	(bad)  
  403fad:	rcl    BYTE PTR [ebx],1
  403faf:	xor    eax,0x3193e4b3
  403fb4:	sbb    cl,BYTE PTR [esi-0x53]
  403fb7:	push   edi
  403fb8:	jmp    0x1ca:0xe875f1be
  403fbf:	mov    bh,0xa0
  403fc1:	sbb    ebp,DWORD PTR [edx+ebx*1]
  403fc4:	xchg   BYTE PTR [eax+0x7a821799],cl
  403fca:	in     al,0xc5
  403fcc:	jno    0x40401b
  403fce:	and    al,0x90
  403fd0:	add    eax,0xf239cbeb
  403fd5:	pop    edi
  403fd6:	mov    esi,0xc82fc01e
  403fdb:	and    eax,0x654d899a
  403fe0:	ds or  edx,esp
  403fe3:	or     eax,DWORD PTR [ebp+0x562a271c]
  403fe9:	std    
  403fea:	std    
  403feb:	je     0x404017
  403fed:	test   BYTE PTR [eax],dl
  403fef:	adc    BYTE PTR [ebx],bh
  403ff1:	mov    ch,bl
  403ff3:	rcr    DWORD PTR [ebx],0x1a
  403ff6:	mov    ch,0xa8
  403ff8:	jo     0x403fe7
  403ffa:	outs   dx,BYTE PTR ds:[esi]
  403ffb:	mov    ds:0x9d24eb7,al
  404000:	xchg   esp,eax
  404001:	sbb    al,0x35
  404003:	push   eax
  404004:	mov    gs,WORD PTR [esi-0x2a]
  404007:	ins    BYTE PTR es:[edi],dx
  404008:	adc    al,BYTE PTR [edx+0x3a]
  40400b:	fadd   QWORD PTR [ecx+0x4bd26d7b]
  404011:	add    bh,dh
  404013:	pop    ecx
  404014:	mov    ds:0x6431ff51,eax
  404019:	imul   DWORD PTR [eax+0x13941b4e]
  40401f:	iret   
  404020:	stc    
  404021:	jmp    0x40407c
  404023:	xchg   esp,eax
  404024:	sbb    BYTE PTR [ebx-0x2ceb9bd5],bl
  40402a:	sub    esi,edi
  40402c:	jg     0x404030
  40402e:	addr16 dec ebp
  404030:	push   0x773f72a3
  404035:	mov    ch,0x8f
  404037:	xchg   BYTE PTR [edi-0x58],cl
  40403a:	test   eax,0xacdc8977
  40403f:	add    al,0x37
  404041:	dec    edi
  404042:	fisttp DWORD PTR [ecx+0x3450ff2d]
  404048:	cmp    eax,0x316f6186
  40404d:	and    ch,BYTE PTR [esi+ebx*4+0xb]
  404051:	or     eax,DWORD PTR [ebx]
  404053:	pop    ecx
  404054:	retf   0xe5f2
  404057:	clc    
  404058:	mov    ds:0x8ba96b36,al
  40405d:	mov    edi,0xaf3588c
  404062:	enter  0x7169,0x5d
  404066:	addr16 cdq 
  404068:	leave  
  404069:	(bad)  
  40406a:	mov    dl,0x79
  40406d:	cwde   
  40406e:	push   ds
  40406f:	push   0xe3b6a9bc
  404074:	fimul  WORD PTR [ebx+0x49a0b109]
  40407a:	(bad)  
  40407b:	mov    dl,BYTE PTR [ebp+0xe763a25]
  404081:	outs   dx,BYTE PTR fs:[esi]
  404083:	sar    DWORD PTR ds:0x95809d6e,1
  404089:	cdq    
  40408a:	retf   0x569a
  40408d:	and    eax,0x12c678b1
  404092:	fbstp  TBYTE PTR [eax-0x71]
  404095:	adc    ebp,ecx
  404097:	retf   0x3ce2
  40409a:	out    dx,eax
  40409b:	mov    DWORD PTR [edx+0x4608561f],eax
  4040a1:	fist   WORD PTR [eax+0x3c]
  4040a4:	cmc    
  4040a5:	pop    ebx
  4040a6:	repnz test al,0x89
  4040a9:	xchg   esi,eax
  4040aa:	cmp    BYTE PTR [ecx],ah
  4040ac:	sti    
  4040ad:	adc    eax,0x86b15c68
  4040b2:	sub    eax,0x1041ce3
  4040b7:	fcmovb st,st(5)
  4040b9:	shr    DWORD PTR [eax],cl
  4040bb:	mov    edx,0x5c94067d
  4040c0:	(bad)  
  4040c2:	add    DWORD PTR [edx-0x48aad349],eax
  4040c8:	nop
  4040c9:	pusha  
  4040ca:	xchg   edi,eax
  4040cb:	jne    0x404062
  4040cd:	add    BYTE PTR [eax-0x3ec8948b],al
  4040d3:	mov    ebx,0xa58dce45
  4040d8:	cmp    eax,0xb6a07833
  4040dd:	xchg   DWORD PTR [edi],edi
  4040df:	mov    al,dh
  4040e1:	cmp    dh,0x48
  4040e4:	stc    
  4040e5:	sbb    al,0xd8
  4040e7:	sbb    eax,0xe32c07de
  4040ec:	test   BYTE PTR [ebp+0x35],0xf5
  4040f0:	or     BYTE PTR [eax+0x3976f84d],al
  4040f6:	pop    ss
  4040f7:	sub    ah,BYTE PTR [esi+ecx*8+0x1ca953a3]
  4040fe:	sbb    al,0x18
  404100:	pop    esi
  404101:	dec    ebx
  404102:	pop    ds
  404103:	stc    
  404104:	ret    
  404105:	push   ebp
  404106:	in     eax,dx
  404107:	and    bh,BYTE PTR [esi+0x58a6ff4d]
  40410d:	aad    0x36
  40410f:	out    dx,al
  404110:	dec    eax
  404111:	aam    0xdb
  404113:	repz mov dh,0x7d
  404116:	jmp    0x4040f0
  404118:	scas   al,BYTE PTR es:[edi]
  404119:	xchg   ebx,eax
  40411a:	push   eax
  40411b:	adc    BYTE PTR [ecx],bl
  40411d:	push   ds
  40411e:	ror    BYTE PTR [bx],0x10
  404122:	xor    edi,DWORD PTR [ebx+0x50]
  404125:	leave  
  404126:	inc    esp
  404127:	scas   eax,DWORD PTR es:[edi]
  404128:	add    BYTE PTR [esp+ecx*8+0x675b40b4],dh
  40412f:	pushf  
  404130:	cmp    bh,BYTE PTR [ebx]
  404132:	fdiv   DWORD PTR ds:0x1b3c7b42
  404138:	addr16 aas 
  40413a:	cmp    al,0x79
  40413d:	pop    ebp
  40413e:	popf   
  40413f:	add    BYTE PTR [edx+0x1d6ce3eb],al
  404145:	jp     0x4041aa
  404147:	jo     0x4041af
  404149:	jle    0x4040ff
  40414b:	test   DWORD PTR [ebp-0x80],edi
  40414e:	das    
  40414f:	add    al,BYTE PTR [ebp-0xd]
  404152:	add    edx,DWORD PTR [edx+0x1e]
  404155:	and    DWORD PTR [edi],eax
  404157:	mov    eax,ds:0x9739088b
  40415c:	shl    DWORD PTR [eax],0x32
  40415f:	mov    cl,0xd
  404161:	scas   eax,DWORD PTR es:[edi]
  404162:	and    esp,DWORD PTR [edi-0x9]
  404165:	sbb    DWORD PTR [ebx-0x5295524c],esi
  40416b:	mov    cl,0x6a
  40416d:	dec    eax
  40416e:	xchg   esi,ecx
  404170:	(bad)  
  404171:	call   0xe54f:0x2bb7563e
  404178:	jo     0x404109
  40417a:	adc    edx,DWORD PTR [esi+eiz*1-0x1c942a57]
  404181:	and    ch,0xae
  404184:	cwde   
  404185:	push   esi
  404186:	sahf   
  404187:	out    dx,eax
  404188:	jns    0x404120
  40418a:	inc    eax
  40418b:	mov    esp,0xf456ac90
  404190:	ins    DWORD PTR es:[edi],dx
  404191:	add    DWORD PTR [esi],0xffffffa8
  404194:	aaa    
  404195:	into   
  404196:	pushf  
  404197:	mov    dl,0x69
  404199:	adc    al,0xfc
  40419b:	shl    BYTE PTR [ecx+0x6f],0xb1
  40419f:	and    esi,DWORD PTR [edi+0x2]
  4041a2:	dec    ebx
  4041a3:	in     al,0xfa
  4041a5:	pop    eax
  4041a6:	stc    
  4041a7:	xlat   BYTE PTR ds:[ebx]
  4041a8:	adc    DWORD PTR [edi+0x44],ebx
  4041ab:	mov    ebp,0x8a4d87e7
  4041b0:	hlt    
  4041b1:	mov    ah,0xcb
  4041b3:	add    DWORD PTR [eax],edx
  4041b5:	cmp    DWORD PTR ds:0x4284a5,0x0
  4041bc:	not    ecx
  4041be:	mov    DWORD PTR ds:0x428361,0x38eb
  4041c8:	jmp    0x40423c
  4041cd:	mov    edx,DWORD PTR ds:0x4284fd
  4041d3:	cmp    DWORD PTR ds:0x4284a5,0x0
  4041da:	jne    0x40421e
  4041e0:	push   DWORD PTR [ebp-0x1c]
  4041e3:	push   0x3daa
  4041e8:	push   0x6a0e
  4041ed:	call   DWORD PTR ds:0x42dff8
  4041f3:	mov    edx,DWORD PTR ds:0x428455
  4041f9:	xor    edx,DWORD PTR ds:0x428591
  4041ff:	mov    DWORD PTR ds:0x428455,edx
  404205:	or     edx,DWORD PTR ds:0x428531
  40420b:	movzx  edx,WORD PTR ds:0x42846d
  404212:	and    DWORD PTR ds:0x428491,edx
  404218:	xor    ecx,0x6193
  40421e:	add    edx,0x3a4f
  404224:	add    DWORD PTR ds:0x428441,ecx
  40422a:	mov    ecx,DWORD PTR ds:0x42840d
  404230:	mov    edx,DWORD PTR ds:0x428551
  404236:	sub    ecx,edx
  404238:	imul   ecx,DWORD PTR [ecx+edx*1]
  40423c:	mov    eax,DWORD PTR [esi]
  40423e:	cmp    DWORD PTR ds:0x4284a1,0x0
  404245:	mov    DWORD PTR ds:0x428395,0x80f
  40424f:	mov    DWORD PTR ds:0x428599,ecx
  404255:	jmp    0x4042b8
  40425a:	mov    DWORD PTR ds:0x42844d,0x4518
  404264:	cmp    DWORD PTR ds:0x4284a1,0x0
  40426b:	jb     0x404293
  404271:	push   DWORD PTR [ebp-0x10]
  404274:	call   DWORD PTR ds:0x42dffc
  40427a:	adc    edx,0x1a1
  404280:	xor    ecx,ecx
  404282:	add    ecx,DWORD PTR ds:0x4284e1
  404288:	mov    edx,DWORD PTR ds:0x4285d1
  40428e:	sub    ecx,edx
  404290:	xor    ecx,DWORD PTR [ecx+edx*1]
  404293:	add    DWORD PTR ds:0x42846d,0x3b89
  40429d:	sbb    DWORD PTR ds:0x4285b1,ecx
  4042a3:	sub    edx,edx
  4042a5:	movzx  ecx,WORD PTR ds:0x428519
  4042ac:	xor    ecx,DWORD PTR ds:0x428589
  4042b2:	mov    DWORD PTR ds:0x428519,ecx
  4042b8:	mov    ecx,DWORD PTR [esi+0x4]
  4042bb:	shrd   eax,ecx,0x2
  4042bf:	shr    ecx,0x2
  4042c2:	cmp    DWORD PTR ds:0x4285a9,0x0
  4042c9:	mov    DWORD PTR ds:0x428519,ecx
  4042cf:	mov    DWORD PTR ds:0x4284a9,0x365d
  4042d9:	jmp    0x404321
  4042de:	mov    DWORD PTR ds:0x428465,0x759d
  4042e8:	cmp    DWORD PTR ds:0x4285a9,0x0
  4042ef:	jae    0x404315
  4042f5:	call   DWORD PTR ds:0x42e248
  4042fb:	adc    edx,ecx
  4042fd:	mov    ecx,DWORD PTR ds:0x428459
  404303:	and    ecx,DWORD PTR ds:0x428595
  404309:	mov    DWORD PTR ds:0x428459,ecx
  40430f:	sbb    edx,DWORD PTR ds:0x428391
  404315:	sbb    DWORD PTR ds:0x428469,0x7721
  40431f:	add    ecx,ecx
  404321:	mov    ecx,DWORD PTR [esi]
  404323:	mov    edx,DWORD PTR [esi+0x4]
  404326:	xor    eax,edi
  404328:	shl    ecx,0x1e
  40432b:	xor    edx,edx
  40432d:	or     edx,eax
  40432f:	mov    DWORD PTR [ebp-0x4],edx
  404332:	mov    DWORD PTR [ebp-0x30],0xcb79b576
  404339:	mov    eax,0x9c2b8ae8
  40433e:	mov    DWORD PTR [ebp-0x2c],eax
  404341:	mov    DWORD PTR [ebp-0x20],0xcb79b572
  404348:	mov    DWORD PTR [ebp-0x1c],eax
  40434b:	mov    DWORD PTR [ebp-0x10],0xcb79b57e
  404352:	mov    DWORD PTR [ebp-0xc],eax
  404355:	mov    DWORD PTR [ebp-0x60],0xcb79b57a
  40435c:	mov    DWORD PTR [ebp-0x5c],eax
  40435f:	jmp    0x404700
  404364:	cmp    BYTE PTR [eax+0x14],dh
  404367:	cmp    al,0x9c
  404369:	mov    esp,0xa24d7438
  40436e:	mov    BYTE PTR [edi+ebx*2-0x426df304],ah
  404375:	sti    
  404376:	mov    esi,0xbec4bdbe
  40437b:	mov    esi,0xdcee8290
  404380:	ins    BYTE PTR es:[edi],dx
  404381:	lock mov ds:0x5aa096f5,al
  404387:	out    0x46,al
  404389:	cld    
  40438a:	pop    esi
  40438b:	xchg   edi,eax
  40438c:	rcl    BYTE PTR [ecx-0x339626],1
  404392:	adc    edx,DWORD PTR [ecx+0x252d6b8a]
  404398:	add    dl,ah
  40439a:	sbb    eax,0x7319bf5d
  40439f:	mov    ecx,0x11cca0a5
  4043a4:	sbb    al,0x6b
  4043a6:	loop   0x404414
  4043a8:	dec    edx
  4043a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043aa:	aad    0xa3
  4043ac:	mov    ds:0x913b3058,al
  4043b1:	inc    esi
  4043b2:	lahf   
  4043b3:	scas   eax,DWORD PTR es:[edi]
  4043b4:	push   DWORD PTR [edi-0x24]
  4043b7:	retf   
  4043b8:	mov    BYTE PTR [ebp-0x633b29cd],0x3d
  4043bf:	retf   0xc964
  4043c2:	sbb    esp,ecx
  4043c4:	sti    
  4043c5:	xchg   edi,eax
  4043c6:	int    0xd7
  4043c8:	out    dx,eax
  4043c9:	jge    0x404359
  4043cb:	shl    DWORD PTR [edi-0xe],cl
  4043ce:	sbb    cl,dl
  4043d0:	jno    0x4043f9
  4043d2:	pop    edi
  4043d3:	xlat   BYTE PTR ds:[ebx]
  4043d4:	mov    edi,0x651d8109
  4043d9:	ds jns 0x40441e
  4043dc:	js     0x4043b6
  4043de:	imul   edx,DWORD PTR [ecx],0x24
  4043e1:	inc    edi
  4043e2:	pop    es
  4043e3:	mov    ch,cl
  4043e5:	ds mov ebx,0xdbc2b0bf
  4043eb:	sbb    DWORD PTR [esi+0x4209779c],0x75
  4043f2:	adc    eax,0x90f2e671
  4043f7:	pop    esp
  4043f8:	adc    bh,BYTE PTR [edx+0x46]
  4043fb:	mov    al,ds:0xfd37d83
  404400:	jl     0x404415
  404402:	call   0x5fe61452
  404407:	mov    esi,DWORD PTR [ebp+0x22]
  40440a:	jns    0x404429
  40440c:	adc    eax,0x5393542e
  404411:	not    BYTE PTR [ebx+0x7b]
  404414:	ror    BYTE PTR [ebx+0x6d],cl
  404417:	or     DWORD PTR [eax-0xd],esi
  40441a:	ret    
  40441b:	popa   
  40441c:	jp     0x40444f
  40441e:	push   ss
  40441f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404420:	sar    DWORD PTR [ebx],0x99
  404423:	push   eax
  404424:	push   0x2b
  404426:	pop    esp
  404427:	mov    esp,0x5e51b884
  40442c:	push   0xc2562403
  404431:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404432:	(bad)  
  404434:	pop    esp
  404435:	es repz retf 0xad32
  40443a:	sub    BYTE PTR [ebx],0xab
  40443d:	dec    edx
  40443e:	sub    al,dl
  404440:	ins    DWORD PTR es:[edi],dx
  404441:	aad    0xb9
  404443:	pop    eax
  404444:	adc    DWORD PTR [ebx],edx
  404446:	ret    
  404447:	fild   WORD PTR [ebp+0x48]
  40444a:	jnp    0x4043d9
  40444c:	sub    ch,BYTE PTR es:[eax]
  40444f:	repz rcr cl,1
  404452:	ins    DWORD PTR es:[edi],dx
  404453:	mov    al,0x95
  404455:	rol    BYTE PTR [ebp-0x45934c2f],1
  40445b:	test   BYTE PTR [eax],dh
  40445d:	or     BYTE PTR [ebx-0x52],dl
  404460:	jmp    0x40440a
  404462:	icebp  
  404463:	fs or  eax,0xcf385124
  404469:	rcl    ah,1
  40446b:	jle    0x404433
  40446d:	retf   0x6ed4
  404470:	push   ebp
  404471:	inc    esp
  404472:	jge    0x404453
  404474:	rcr    edi,1
  404476:	pop    ss
  404477:	fs inc esi
  404479:	push   0xffffffac
  40447b:	push   esp
  40447c:	mov    ah,0x77
  40447e:	adc    dh,BYTE PTR [ebx]
  404480:	or     DWORD PTR [ebx-0x39c157a9],edi
  404486:	inc    eax
  404487:	mul    BYTE PTR [edx+0x496c8632]
  40448d:	imul   edx,DWORD PTR [ebp+0x5b],0x2cce95fe
  404494:	imul   ebx,DWORD PTR [eax-0x4f48ae17],0xdc726af8
  40449e:	pop    ds
  40449f:	add    ecx,esp
  4044a1:	rcr    BYTE PTR [eax],cl
  4044a3:	rcr    DWORD PTR [ebp+0x524857fc],1
  4044a9:	push   esp
  4044aa:	add    al,BYTE PTR es:[ebp+0x67]
  4044ae:	(bad)  
  4044af:	je     0x404474
  4044b1:	imul   esi,DWORD PTR [ecx-0x19],0x3a9f96b1
  4044b8:	stc    
  4044b9:	imul   edi,eax,0x11
  4044bc:	mov    esi,0xeccf1a14
  4044c1:	or     BYTE PTR [edi+0x46f8fb6f],bl
  4044c7:	pop    ebp
  4044c8:	cs stos BYTE PTR es:[edi],al
  4044ca:	retf   
  4044cb:	pop    esp
  4044cc:	add    al,0x54
  4044cf:	test   eax,0xc60d85c9
  4044d4:	mov    esi,0x633be37d
  4044d9:	stos   DWORD PTR es:[edi],eax
  4044da:	jo     0x404531
  4044dc:	je     0x4044ff
  4044de:	outs   dx,BYTE PTR ds:[esi]
  4044df:	pusha  
  4044e0:	(bad)  
  4044e2:	mov    DWORD PTR [edx],esi
  4044e4:	repnz cmp dl,BYTE PTR ds:0xe8a634b2
  4044eb:	xchg   edi,eax
  4044ec:	(bad)  
  4044ed:	and    edi,ecx
  4044ef:	sub    ebp,DWORD PTR [edi+edx*2-0xe9ad398]
  4044f6:	dec    esp
  4044f7:	shr    DWORD PTR ds:0xc6d473e,0x7
  4044fe:	iret   
  4044ff:	jae    0x404493
  404501:	int    0xf9
  404503:	mov    dh,al
  404505:	sbb    DWORD PTR [esi+0x41dd98d4],eax
  40450b:	push   0x56d427d
  404510:	jno    0x40458d
  404512:	pop    ebp
  404513:	xor    eax,0xa5b869b2
  404518:	out    dx,al
  404519:	loope  0x404594
  40451b:	je     0x404545
  40451d:	pop    ebx
  40451e:	add    ah,BYTE PTR [esi-0x4f3129ef]
  404524:	sbb    DWORD PTR [esi+0x5f],0xc
  404528:	dec    esi
  404529:	xchg   edi,eax
  40452a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40452b:	lds    esi,FWORD PTR [ebx-0x37]
  40452e:	sbb    BYTE PTR cs:[edx+0x1fc7e929],bl
  404535:	adc    ch,dh
  404537:	jne    0x404576
  404539:	loop   0x4044e8
  40453b:	dec    ecx
  40453c:	dec    cl
  40453e:	or     bl,BYTE PTR [edi]
  404540:	in     al,0x15
  404542:	mov    esi,eax
  404544:	shl    BYTE PTR [ecx+0x2dce8984],1
  40454a:	add    edx,DWORD PTR [edx+0x76]
  40454d:	jnp    0x404570
  40454f:	imul   esi,DWORD PTR [edi],0x1a70f4d
  404555:	xor    al,0x29
  404557:	mov    bl,0x30
  404559:	pop    edi
  40455a:	jbe    0x40453c
  40455c:	or     edx,ebx
  40455e:	push   esi
  40455f:	pusha  
  404560:	xchg   ebp,eax
  404561:	inc    eax
  404562:	(bad)
  404565:	push   eax
  404566:	cmp    al,0xdb
  404568:	xchg   ebp,eax
  404569:	push   eax
  40456b:	mov    edi,0x3f8008e
  404570:	pop    esp
  404571:	mov    bh,0x62
  404573:	xchg   ebp,eax
  404574:	mov    bl,0xdf
  404576:	retf   
  404577:	ja     0x4045f2
  404579:	pop    eax
  40457a:	mov    WORD PTR [edx],fs
  40457c:	cmp    BYTE PTR [ebx-0x55],cl
  40457f:	inc    edi
  404580:	push   cs
  404581:	sbb    eax,0x928b7970
  404586:	es push ecx
  404588:	outs   dx,BYTE PTR ds:[esi]
  404589:	sar    DWORD PTR [esp+ecx*4],cl
  40458c:	and    esp,DWORD PTR [ebx+0x7b27b5ef]
  404592:	iret   
  404593:	push   eax
  404594:	lds    ebx,FWORD PTR [ebx-0x5a]
  404597:	pop    es
  404598:	ja     0x404566
  40459a:	in     eax,dx
  40459b:	lock sbb edx,ecx
  40459e:	mov    edi,0xc72ac9a7
  4045a3:	je     0x4045c7
  4045a5:	mov    dl,0x5d
  4045a7:	mov    edx,0x4bb0e9d5
  4045ac:	ss ins BYTE PTR es:[edi],dx
  4045ae:	sub    ebx,edi
  4045b0:	add    ebp,DWORD PTR [eax-0x51]
  4045b3:	arpl   WORD PTR [edi+0x2f],si
  4045b6:	(bad)  
  4045b8:	daa    
  4045b9:	loopne 0x4045c6
  4045bb:	and    al,0xc3
  4045bd:	retf   
  4045be:	in     eax,0xcc
  4045c0:	leave  
  4045c1:	cmp    BYTE PTR [esi+0x1b],bl
  4045c4:	fistp  QWORD PTR [ecx-0x3e]
  4045c7:	retf   0x53ce
  4045ca:	fstp   QWORD PTR [ecx+edi*2]
  4045cd:	pop    ds
  4045ce:	gs jb  0x4045af
  4045d1:	add    edi,edx
  4045d3:	sub    eax,DWORD PTR ds:0x4af48c48
  4045d9:	aas    
  4045da:	fist   DWORD PTR [ebx+eiz*8-0x63619dcf]
  4045e1:	enter  0x4e56,0x12
  4045e5:	or     BYTE PTR [eax],bh
  4045e7:	lea    esi,[edx+esi*2]
  4045ea:	sar    dh,cl
  4045ec:	sti    
  4045ed:	cdq    
  4045ee:	jno    0x404580
  4045f0:	mov    edx,0x364484c0
  4045f5:	sbb    ebx,ebx
  4045f7:	cmp    eax,0x5719877c
  4045fc:	adc    edx,DWORD PTR [eax-0x151b89a2]
  404602:	mov    ebx,0x32f2e327
  404607:	cmc    
  404608:	jns    0x4045fe
  40460a:	pop    ebp
  40460b:	lea    ecx,ds:0xd68299e0
  404611:	jo     0x404640
  404613:	pop    es
  404614:	sbb    al,0x11
  404616:	(bad)  
  404617:	lods   al,BYTE PTR ds:[esi]
  404618:	xor    DWORD PTR [esi+0x71b7ef35],ecx
  40461e:	pop    es
  40461f:	(bad)  
  404620:	jl     0x4045f4
  404622:	cmp    BYTE PTR [ebx+edx*1],cl
  404625:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404626:	out    dx,al
  404627:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404628:	adc    eax,0x75d57df9
  40462d:	push   esp
  40462e:	addr16 mov esp,0x13201036
  404634:	imul   esp,ecx,0xffffffe3
  404637:	sub    eax,0x34a5e6d8
  40463c:	mov    eax,ds:0x15159581
  404641:	add    cl,BYTE PTR cs:[edi-0x3667b9d0]
  404648:	ds cmp eax,0x7bcdfd90
  40464e:	and    eax,0xea6719c8
  404653:	mov    ebp,0x1b22a26
  404658:	(bad)  
  404659:	aam    0x72
  40465b:	mov    dh,0xe8
  40465d:	xor    bh,BYTE PTR [ebp+0x2f]
  404660:	or     cl,BYTE PTR ds:[eax]
  404663:	pop    es
  404664:	dec    edx
  404665:	jnp    0x40468f
  404667:	pop    esp
  404668:	xchg   ebp,eax
  404669:	mov    bl,0xca
  40466b:	mov    al,ds:0xe5225ba2
  404671:	sub    cl,BYTE PTR [esi+0x32]
  404674:	mov    cl,0x16
  404676:	addr16 inc esi
  404678:	dec    esi
  404679:	data16 jl 0x404619
  40467c:	test   DWORD PTR [ecx],ebx
  40467e:	pop    ebx
  40467f:	daa    
  404680:	inc    esp
  404681:	xchg   DWORD PTR [ecx+ecx*4-0x67],ecx
  404685:	mov    dh,BYTE PTR [ebp+0x115dafd4]
  40468b:	mov    dl,0x2d
  40468d:	cld    
  40468e:	aas    
  40468f:	xchg   DWORD PTR [edi+eax*8+0x1b],ebp
  404693:	lahf   
  404694:	dec    ebx
  404695:	mov    esi,0xde7e7d74
  40469a:	gs jmp 0x404717
  40469d:	pop    esi
  40469e:	jmp    0xc119:0x85336113
  4046a5:	mov    cl,0x7b
  4046a7:	and    ecx,DWORD PTR [edi-0x73]
  4046aa:	adc    edi,DWORD PTR [eax+0x49eab297]
  4046b0:	jge    0x404711
  4046b2:	or     eax,0xbaa8abb5
  4046b7:	xchg   esi,eax
  4046b8:	fnstenv [edi]
  4046ba:	out    0x73,eax
  4046bc:	fsubp  st(0),st
  4046be:	xchg   ecx,eax
  4046bf:	xchg   esp,eax
  4046c0:	in     al,0x51
  4046c2:	jns    0x4046fa
  4046c4:	lea    esi,[esi+0x4d]
  4046c7:	das    
  4046c8:	xchg   esi,eax
  4046c9:	arpl   WORD PTR [eax],bp
  4046cb:	dec    ebp
  4046cc:	cmp    eax,0xe8dbf198
  4046d1:	inc    ecx
  4046d2:	fst    QWORD PTR [ebx-0x1c]
  4046d5:	fisub  DWORD PTR [edi]
  4046d7:	jno    0x40466a
  4046d9:	mov    ebx,0x4867fa17
  4046de:	jecxz  0x40472e
  4046e0:	pop    ecx
  4046e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046e2:	cmp    eax,0x609ff4f1
  4046e7:	(bad)  
  4046e9:	inc    ebp
  4046ea:	mov    al,ds:0x478a6368
  4046ef:	data16 sti 
  4046f1:	fwait
  4046f2:	and    BYTE PTR [ebx],0x6e
  4046f5:	es dec esi
  4046f7:	and    DWORD PTR [edx],ebx
  4046f9:	in     eax,0xfa
  4046fb:	add    eax,DWORD PTR [esp+ebx*8]
  4046fe:	sbb    al,bl
  404700:	mov    eax,DWORD PTR [ebp-0x30]
  404703:	mov    ecx,DWORD PTR [ebp-0x2c]
  404706:	shrd   eax,ecx,0x2
  40470a:	shr    ecx,0x2
  40470d:	mov    ecx,DWORD PTR [ebp-0x30]
  404710:	mov    edx,DWORD PTR [ebp-0x2c]
  404713:	xor    eax,edi
  404715:	shl    ecx,0x1e
  404718:	xor    edx,edx
  40471a:	or     eax,edx
  40471c:	lea    eax,[ebp+eax*1-0x4]
  404720:	mov    DWORD PTR [ebp-0x34],eax
  404723:	mov    eax,DWORD PTR [ebp-0x30]
  404726:	mov    ecx,DWORD PTR [ebp-0x2c]
  404729:	shrd   eax,ecx,0x2
  40472d:	shr    ecx,0x2
  404730:	mov    ecx,DWORD PTR [ebp-0x30]
  404733:	mov    edx,DWORD PTR [ebp-0x2c]
  404736:	shl    ecx,0x1e
  404739:	mov    ecx,DWORD PTR [ebp-0x14]
  40473c:	xor    eax,edi
  40473e:	xor    edx,edx
  404740:	or     eax,edx
  404742:	mov    cl,BYTE PTR [eax+ecx*1]
  404745:	mov    eax,DWORD PTR [ebp-0x34]
  404748:	xor    BYTE PTR [eax],cl
  40474a:	mov    eax,DWORD PTR [ebp-0x20]
  40474d:	mov    ecx,DWORD PTR [ebp-0x1c]
  404750:	shrd   eax,ecx,0x2
  404754:	shr    ecx,0x2
  404757:	mov    ecx,DWORD PTR [ebp-0x20]
  40475a:	mov    edx,DWORD PTR [ebp-0x1c]
  40475d:	xor    eax,edi
  40475f:	jmp    0x404b00
  404764:	xchg   esp,eax
  404765:	mov    esi,DWORD PTR [esi-0x434b497e]
  40476b:	fwait
  40476c:	or     al,dl
  40476e:	cli    
  40476f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404770:	jmp    0x4047e4
  404772:	outs   dx,BYTE PTR ds:[esi]
  404773:	fnstsw WORD PTR [esi-0x424141fd]
  404779:	les    edi,FWORD PTR [esi-0x78576142]
  40477f:	mov    al,dl
  404781:	(bad)  
  404782:	mov    edi,0xbbe09407
  404787:	mov    eax,ds:0x33dd2525
  40478c:	lds    esi,FWORD PTR [ebp+0x28]
  40478f:	jb     0x4047fe
  404791:	pop    ebx
  404792:	fldenv [ebx+0x63]
  404795:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404796:	mov    edx,0xb9a05f4b
  40479b:	xchg   esi,eax
  40479c:	sar    bl,cl
  40479e:	enter  0x608f,0xc4
  4047a2:	xchg   edx,ecx
  4047a4:	add    eax,0x74abf850
  4047a9:	sbb    BYTE PTR [eax+0x1dd32247],ch
  4047af:	and    esp,DWORD PTR [eax]
  4047b1:	sbb    eax,0xca76878d
  4047b6:	fsub   DWORD PTR gs:[esi+0x5d]
  4047bb:	icebp  
  4047bc:	push   ecx
  4047bd:	pusha  
  4047be:	xchg   BYTE PTR [esi+edx*2-0x2e],dh
  4047c2:	retf   0xe143
  4047c5:	(bad)  
  4047c6:	xchg   edx,eax
  4047c7:	xor    eax,DWORD PTR [ecx-0x11]
  4047ca:	pop    edi
  4047cb:	cmp    ecx,DWORD PTR [ebx+0x1f]
  4047ce:	jne    0x404819
  4047d0:	scas   eax,DWORD PTR es:[edi]
  4047d1:	enter  0xfd41,0xa2
  4047d5:	idiv   BYTE PTR [ebp+edx*2-0x29]
  4047d9:	rcl    DWORD PTR [ebx+esi*8-0x20],0xef
  4047de:	adc    al,0x2c
  4047e0:	xor    cl,BYTE PTR es:[ebx]
  4047e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047e4:	mov    ecx,0xaa0b86ce
  4047e9:	cmp    eax,0x54099ff5
  4047ee:	dec    eax
  4047ef:	call   DWORD PTR [esi+0x5ac0dc14]
  4047f5:	ret    
  4047f6:	push   0x5a
  4047f8:	outs   dx,DWORD PTR ds:[esi]
  4047f9:	push   esi
  4047fa:	mov    edi,0xd4680dfc
  4047ff:	jae    0x404876
  404801:	arpl   WORD PTR [ebx-0x7219c07d],dx
  404807:	mov    bh,BYTE PTR [eax]
  404809:	xor    al,0xa9
  40480b:	je     0x404876
  40480d:	inc    ecx
  40480e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40480f:	cld    
  404810:	mov    dl,0x99
  404812:	(bad)  
  404814:	or     edx,DWORD PTR [ebx-0x31]
  404817:	scas   al,BYTE PTR es:[edi]
  404818:	clc    
  404819:	cmp    ebx,DWORD PTR [eax+0x64]
  40481c:	adc    edx,esi
  40481e:	cmp    esp,DWORD PTR [ecx-0x944be]
  404824:	inc    esp
  404825:	mov    esp,0xfebdbb31
  40482a:	or     DWORD PTR [ebp+0x35],ecx
  40482d:	pop    ecx
  40482e:	xlat   BYTE PTR ds:[ebx]
  40482f:	(bad)  
  404830:	sub    eax,DWORD PTR cs:[esi+0x358178eb]
  404837:	mov    ch,0x25
  404839:	pop    esp
  40483a:	jl     0x4047ee
  40483c:	jbe    0x4047c9
  40483e:	sub    esp,eax
  404840:	dec    esp
  404841:	test   BYTE PTR [edi-0x70],dl
  404844:	dec    edx
  404845:	stos   DWORD PTR es:[edi],eax
  404846:	dec    ebx
  404847:	bound  esi,QWORD PTR [edx+ecx*1+0x5f]
  40484b:	add    al,0xa8
  40484d:	adc    ecx,esp
  40484f:	mov    al,0x7
  404851:	jge    0x404866
  404853:	jp     0x404824
  404855:	and    DWORD PTR [esi+0x3a],esp
  404858:	in     al,0x62
  40485a:	jl     0x404808
  40485c:	pushf  
  40485d:	jg     0x40483e
  40485f:	mov    WORD PTR [eax+0x43],ss
  404862:	rcr    BYTE PTR ss:[ebp-0x4256b333],0x90
  40486a:	mov    gs,WORD PTR [edx-0x11]
  40486d:	aaa    
  40486e:	shl    eax,1
  404870:	repnz cmp cl,dl
  404873:	cmp    al,0x44
  404875:	xchg   ebx,eax
  404876:	pop    esp
  404877:	xor    BYTE PTR [edi-0xba7e087],ch
  40487d:	shl    DWORD PTR [edi+ebp*1+0x67fc5f39],1
  404884:	and    al,0xf0
  404886:	push   es
  404887:	sub    eax,0x92a8a11f
  40488c:	or     ebx,0xffffffcf
  40488f:	aaa    
  404890:	sbb    al,0xe9
  404892:	mov    bh,0x4e
  404894:	push   ss
  404895:	xchg   esi,eax
  404896:	mov    esp,ebx
  404898:	mov    ch,0x7d
  40489a:	imul   esp,edi,0xffffffd9
  40489d:	ror    BYTE PTR [edx-0x2d16642b],cl
  4048a3:	push   esp
  4048a4:	retf   
  4048a5:	push   ecx
  4048a6:	in     al,0x0
  4048a8:	shr    BYTE PTR [ecx-0x7e],cl
  4048ab:	dec    eax
  4048ac:	mov    ch,0xca
  4048ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048af:	fwait
  4048b0:	cmp    BYTE PTR ds:0xb3b0887e,ch
  4048b6:	jl     0x404884
  4048b8:	xor    eax,0x99723a2f
  4048bd:	arpl   WORD PTR [eax+0x4e],cx
  4048c0:	in     eax,dx
  4048c1:	push   ds
  4048c2:	fnsave [edx]
  4048c4:	das    
  4048c5:	dec    eax
  4048c6:	ficom  WORD PTR [ebp+0x67924477]
  4048cc:	add    esp,esp
  4048ce:	in     eax,0xc1
  4048d0:	test   DWORD PTR [esi],esi
  4048d2:	fisubr WORD PTR [esi+0x50ee2b2a]
  4048d8:	jmp    0xada5008c
  4048dd:	(bad)  
  4048de:	xor    DWORD PTR [ebp+ebx*8-0x40aa7695],esi
  4048e5:	mov    eax,ds:0x14cfa045
  4048ea:	shl    esp,1
  4048ec:	cmp    DWORD PTR [ecx-0x616101a4],eax
  4048f2:	mov    edi,0xfb5f4994
  4048f7:	imul   edi,DWORD PTR [ecx],0x45aa2017
  4048fd:	xor    BYTE PTR ds:0x3a4e289f,bl
  404903:	xor    DWORD PTR [eax+ecx*8-0x7b],edi
  404907:	rcr    ah,0xfb
  40490a:	xchg   ecx,eax
  40490b:	lds    ebx,FWORD PTR [ecx]
  40490d:	outs   dx,BYTE PTR ds:[esi]
  40490e:	pushf  
  40490f:	icebp  
  404910:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404911:	adc    edi,DWORD PTR ss:[eax-0xc563d8c]
  404918:	mov    BYTE PTR [eax-0x16642cf4],dh
  40491e:	mov    ah,0x5c
  404920:	mov    bh,0x8
  404922:	pop    ss
  404923:	jmp    0xf9dc4d6b
  404928:	inc    edx
  404929:	mov    al,0xec
  40492b:	mov    bl,0x4
  40492d:	mov    ch,0xd8
  40492f:	hlt    
  404930:	icebp  
  404931:	popa   
  404932:	cmp    DWORD PTR [ebp-0x167ba40a],0x79bf835b
  40493c:	iret   
  40493d:	fadd   DWORD PTR [esi+0x33cf9e47]
  404943:	lods   eax,DWORD PTR ds:[esi]
  404944:	mov    edi,DWORD PTR [edx-0x33ba1bed]
  40494a:	shr    BYTE PTR [edx+0x647d9a8d],cl
  404950:	iret   
  404951:	(bad)  
  404952:	mov    esi,0x25cfe12a
  404957:	adc    DWORD PTR [edx+0x51],ecx
  40495a:	sbb    esp,DWORD PTR [ebx]
  40495c:	cwde   
  40495d:	jb     0x404963
  40495f:	inc    ebp
  404960:	cmp    al,0x2b
  404962:	jmp    0x3b7d:0xacee22b
  404969:	jle    0x404951
  40496b:	call   0x2ef1:0x1408d6ab
  404972:	adc    BYTE PTR [eax+0x73],ch
  404975:	dec    eax
  404976:	xor    edi,ecx
  404978:	push   ss
  404979:	xor    al,0x2
  40497b:	dec    ebp
  40497c:	rcr    BYTE PTR [eax-0x14148b0d],0x7d
  404983:	call   0x74df:0xc5727769
  40498a:	shl    BYTE PTR [ebp+0x1],cl
  40498d:	add    esi,esp
  40498f:	(bad)  
  404991:	and    DWORD PTR ds:0x176323a6,ebp
  404997:	mov    al,ds:0xb3c26861
  40499c:	(bad)
  40499f:	clc    
  4049a0:	xor    esp,DWORD PTR [ecx]
  4049a2:	cdq    
  4049a3:	jmp    0x1f35bfd
  4049a8:	jb     0x404a02
  4049aa:	clc    
  4049ab:	cli    
  4049ac:	add    ecx,ebx
  4049ae:	sbb    eax,0xf6163d03
  4049b3:	test   eax,0xfefbf1b9
  4049b8:	repz sbb al,0x35
  4049bb:	pop    es
  4049bc:	mov    edi,0x2a353165
  4049c1:	cdq    
  4049c2:	jae    0x404a1a
  4049c4:	push   es
  4049c5:	sbb    edx,DWORD PTR [esi-0x4c673d9a]
  4049cb:	in     eax,dx
  4049cc:	repnz push ebp
  4049ce:	scas   al,BYTE PTR es:[edi]
  4049cf:	jbe    0x40495e
  4049d1:	shl    DWORD PTR [edi],1
  4049d3:	xor    ebp,esp
  4049d5:	mov    al,0x1d
  4049d7:	(bad)  
  4049d8:	cli    
  4049d9:	lods   al,BYTE PTR ds:[esi]
  4049da:	xor    eax,0x69109213
  4049df:	sbb    DWORD PTR [edx],0x1564c713
  4049e5:	jns    0x40498e
  4049e7:	add    bh,ah
  4049e9:	xchg   ecx,eax
  4049ea:	lahf   
  4049eb:	sub    eax,0xa87f5ca8
  4049f0:	cli    
  4049f1:	add    eax,0x8a0b3577
  4049f6:	xor    dl,BYTE PTR [ebp+0x418142b3]
  4049fc:	aaa    
  4049fd:	sbb    al,0x5
  4049ff:	mov    ?,edi
  404a01:	fnstenv [esi-0x27]
  404a04:	hlt    
  404a05:	mov    edi,0xc51f2e60
  404a0a:	das    
  404a0b:	mul    DWORD PTR [esi]
  404a0d:	pop    eax
  404a0e:	sub    DWORD PTR [ecx-0x688112e1],edx
  404a14:	adc    BYTE PTR ds:0xacf1d75a,0xfe
  404a1b:	inc    esp
  404a1c:	ret    
  404a1d:	mov    ebp,0x98955cf6
  404a22:	adc    dl,dh
  404a24:	push   ebp
  404a25:	pop    edx
  404a26:	scas   al,BYTE PTR es:[edi]
  404a27:	jmp    0x159eda1
  404a2c:	aam    0x52
  404a2e:	inc    esp
  404a2f:	(bad)
  404a32:	fisub  WORD PTR [eax+0x1dcbab85]
  404a38:	cmp    DWORD PTR [ebp-0x723fc882],ebp
  404a3e:	adc    esi,DWORD PTR [edx-0x6b]
  404a41:	shl    BYTE PTR ss:[ebp+0x7a],0xf8
  404a46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a47:	cld    
  404a48:	leave  
  404a49:	pusha  
  404a4a:	mov    edi,0xd4640130
  404a4f:	pop    edi
  404a50:	shr    DWORD PTR [eax-0x68],0xc0
  404a54:	call   0x9608:0xb6223bed
  404a5b:	sub    BYTE PTR [ebp+0x4b],dh
  404a5e:	adc    DWORD PTR [ebx-0xd5c78b8],ebx
  404a64:	fisttp QWORD PTR [ecx+ebp*1-0x3d88792b]
  404a6b:	mov    dl,0xdd
  404a6d:	fidiv  WORD PTR [esp+ebx*4-0x3aabf317]
  404a74:	cdq    
  404a75:	push   es
  404a76:	lea    esi,[esp+esi*2+0x47]
  404a7a:	add    al,al
  404a7c:	push   ebp
  404a7d:	adc    al,0x17
  404a7f:	icebp  
  404a80:	iret   
  404a81:	das    
  404a82:	jmp    0x404a12
  404a84:	jae    0x404aa1
  404a86:	xlat   BYTE PTR ds:[ebx]
  404a87:	mov    ds:0x2dc8d004,eax
  404a8c:	adc    DWORD PTR [ebx+ecx*8],ecx
  404a8f:	cmp    BYTE PTR [esi+esi*8],dl
  404a92:	xchg   esp,eax
  404a93:	inc    ebp
  404a94:	bound  edi,QWORD PTR [ebp-0x11eec9ef]
  404a9a:	push   esi
  404a9b:	push   ebx
  404a9c:	int3   
  404a9d:	dec    esi
  404a9e:	call   FWORD PTR [esi]
  404aa0:	sbb    BYTE PTR [ecx+0x16f507b2],ah
  404aa6:	loop   0x404aa4
  404aa8:	dec    ebx
  404aa9:	ins    DWORD PTR es:[di],dx
  404aab:	xlat   BYTE PTR ds:[ebx]
  404aac:	ins    DWORD PTR es:[edi],dx
  404aad:	jns    0x404a5c
  404aaf:	pop    esi
  404ab0:	jg     0x404afd
  404ab2:	inc    ebp
  404ab3:	shr    DWORD PTR [eax-0x2e],0xc3
  404ab7:	xor    eax,0xf070650
  404abc:	cmp    edx,edx
  404abe:	test   edi,ebx
  404ac0:	fidivr WORD PTR [eax-0x76b2219d]
  404ac6:	lock add DWORD PTR [ebx+ebx*1],esp
  404aca:	mov    ebx,0xc3a76770
  404acf:	cmp    bl,bh
  404ad1:	(bad)  
  404ad3:	inc    ecx
  404ad4:	test   eax,0xf9c52bed
  404ad9:	addr16 xchg ecx,esp
  404adc:	mov    WORD PTR [ecx-0x61],?
  404adf:	stos   BYTE PTR es:[edi],al
  404ae0:	sbb    eax,DWORD PTR [esi-0x35]
  404ae3:	sub    DWORD PTR [ecx-0x3d641d9e],esp
  404ae9:	enter  0xdacc,0xbe
  404aed:	push   eax
  404aee:	mov    edx,0xbe2b4dfe
  404af3:	adc    DWORD PTR [edi+0x62],esp
  404af6:	push   ss
  404af7:	(bad)  
  404af8:	lea    esp,[edx+0x5e3ccb7a]
  404afe:	jmp    0xd233:0x1ee1c17f
  404b05:	or     eax,edx
  404b07:	lea    eax,[ebp+eax*1-0x4]
  404b0b:	mov    DWORD PTR [ebp-0x34],eax
  404b0e:	mov    eax,DWORD PTR [ebp-0x20]
  404b11:	mov    ecx,DWORD PTR [ebp-0x1c]
  404b14:	shrd   eax,ecx,0x2
  404b18:	shr    ecx,0x2
  404b1b:	mov    ecx,DWORD PTR [ebp-0x20]
  404b1e:	mov    edx,DWORD PTR [ebp-0x1c]
  404b21:	shl    ecx,0x1e
  404b24:	mov    ecx,DWORD PTR [ebp-0x14]
  404b27:	jmp    0x404ec8
  404b2c:	cmp    BYTE PTR [edx],ch
  404b2e:	push   0xffffff83
  404b30:	jl     0x404ab5
  404b32:	cmp    BYTE PTR [edx-0x61edfbc6],bh
  404b38:	dec    ecx
  404b39:	sahf   
  404b3a:	push   edx
  404b3b:	sahf   
  404b3c:	mov    ebp,0xbdbebe09
  404b41:	les    edi,FWORD PTR [esi+0x177928be]
  404b47:	mov    DWORD PTR [eax-0x1c],eax
  404b4a:	cmp    dh,BYTE PTR [eax+0x41b66fce]
  404b50:	adc    eax,0xce3d734c
  404b55:	cdq    
  404b56:	shl    DWORD PTR ds:0x224fd4a2,cl
  404b5c:	sub    eax,0x780b5827
  404b61:	test   BYTE PTR [edx],bl
  404b63:	cmp    eax,0xb53df5f2
  404b68:	and    ah,dh
  404b6a:	inc    eax
  404b6b:	fnsetpm(287 only) 
  404b6d:	adc    DWORD PTR [ebp-0x5b],ebp
  404b70:	rcr    BYTE PTR [eax],cl
  404b72:	xchg   esp,eax
  404b73:	ss xchg edx,eax
  404b75:	rol    BYTE PTR [edx-0x1890f7c],1
  404b7b:	aas    
  404b7c:	(bad)  
  404b7d:	gs adc bl,dh
  404b80:	out    0xf,al
  404b82:	(bad)  
  404b83:	pop    esp
  404b84:	outs   dx,BYTE PTR ds:[esi]
  404b85:	clc    
  404b86:	in     eax,0x7
  404b88:	sbb    esp,ecx
  404b8a:	ss aad 0xed
  404b8d:	ficomp WORD PTR [ebp+0x3c]
  404b90:	in     eax,0x68
  404b92:	pop    ds
  404b93:	mov    BYTE PTR [edx-0x5e],dh
  404b96:	psubq  mm2,QWORD PTR [esi+edi*4-0x63]
  404b9b:	dec    edi
  404b9c:	add    eax,0x719a3445
  404ba1:	push   ecx
  404ba2:	repnz out 0x23,eax
  404ba5:	data16 ror BYTE PTR cs:[edx+0x73],1
  404baa:	pop    ds
  404bab:	jo     0x404b2e
  404bad:	fst    QWORD PTR [ecx]
  404bb0:	push   esp
  404bb1:	mov    ds:0xa7bddc21,eax
  404bb6:	loop   0x404c25
  404bb8:	inc    esp
  404bb9:	xlat   BYTE PTR ds:[ebx]
  404bba:	add    DWORD PTR [esi-0x386d54c4],esp
  404bc0:	fsub   QWORD PTR [ecx+ecx*2+0x1f]
  404bc4:	mov    DWORD PTR [ebx+edi*2],0x2889b868
  404bcb:	mov    bl,BYTE PTR [edi+0x5590d7a6]
  404bd1:	xor    BYTE PTR [ebx+0x407e0fa4],bl
  404bd7:	cmp    al,0x77
  404bd9:	lods   eax,DWORD PTR ds:[esi]
  404bda:	rcl    BYTE PTR [ebx+esi*1],0xb1
  404bde:	mov    gs,WORD PTR [ebx+0x6390bec9]
  404be4:	mov    ?,WORD PTR [eax-0x557fe476]
  404bea:	jne    0x404c37
  404bec:	js     0x404bd8
  404bee:	(bad)  
  404bef:	test   eax,0xe4ce6189
  404bf4:	loop   0x404c2b
  404bf6:	add    BYTE PTR [ebx+0x2739a1bf],dl
  404bfc:	inc    ebp
  404bfd:	xor    ebp,esp
  404bff:	dec    edi
  404c00:	loop   0x404c24
  404c02:	and    eax,0x4b6de4ec
  404c07:	dec    esp
  404c08:	mov    dh,0x9
  404c0a:	pop    eax
  404c0b:	stos   DWORD PTR es:[edi],eax
  404c0c:	jmp    0x404c53
  404c0e:	mov    ds:0xc2451cb9,eax
  404c13:	inc    ebp
  404c14:	mov    al,ds:0x66036899
  404c19:	mov    ebx,0xba877c2f
  404c1e:	push   esp
  404c1f:	inc    esp
  404c20:	push   ebx
  404c21:	test   eax,0x76737636
  404c26:	mov    al,BYTE PTR [edi+0x584bd2ca]
  404c2c:	jge    0x404c2f
  404c2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c2f:	mov    esp,0x335c4922
  404c34:	inc    edi
  404c35:	and    cl,al
  404c37:	jne    0x404c6a
  404c39:	pop    ds
  404c3a:	loope  0x404c2e
  404c3c:	repz sar DWORD PTR [ebp+0x1c],0xf7
  404c41:	xor    al,0xbe
  404c43:	nop
  404c44:	adc    BYTE PTR [ebx],ch
  404c46:	arpl   WORD PTR [ebx],bp
  404c48:	leave  
  404c49:	xor    al,0x5f
  404c4b:	mov    cl,ah
  404c4d:	call   0xcf17:0x9fc00aac
  404c54:	les    ebp,FWORD PTR [edi]
  404c56:	pop    ds
  404c57:	(bad)  
  404c58:	pop    ds
  404c59:	sti    
  404c5a:	inc    esi
  404c5b:	cmp    BYTE PTR [ebp-0x72],0x0
  404c5f:	hlt    
  404c60:	inc    ebx
  404c61:	aam    0x39
  404c63:	sub    al,0x8
  404c65:	adc    dh,bl
  404c67:	and    al,0xd4
  404c69:	ss pop edi
  404c6b:	fisttp QWORD PTR [edi]
  404c6d:	jno    0x404c42
  404c6f:	iret   
  404c70:	aaa    
  404c71:	cmp    eax,0x5d2b2427
  404c76:	mov    ds:0x6bb7fb6c,al
  404c7b:	xchg   ebp,eax
  404c7c:	enter  0x5798,0x55
  404c80:	lods   al,BYTE PTR ds:[esi]
  404c81:	(bad)  
  404c82:	mov    ebp,0x44bb6601
  404c87:	in     al,0xfa
  404c89:	jns    0x404d04
  404c8b:	jo     0x404cdf
  404c8d:	add    ah,BYTE PTR [eax]
  404c8f:	test   DWORD PTR [ecx-0x3],ebp
  404c92:	bound  ecx,QWORD PTR [edx-0x75]
  404c95:	adc    eax,0x883cca70
  404c9a:	ret    
  404c9b:	inc    edi
  404c9c:	jns    0x404cab
  404c9e:	lahf   
  404c9f:	push   ebx
  404ca0:	mov    edi,0xf4ef9ec6
  404ca5:	push   ss
  404ca6:	hlt    
  404ca7:	dec    esp
  404ca8:	daa    
  404ca9:	pop    edx
  404caa:	add    al,0x7c
  404cac:	imul   edi,DWORD PTR [eax],0x56
  404caf:	outs   dx,DWORD PTR ds:[esi]
  404cb0:	in     eax,dx
  404cb1:	int    0x7b
  404cb3:	stos   BYTE PTR es:[edi],al
  404cb4:	sbb    eax,0x71025651
  404cb9:	int    0xef
  404cbb:	sub    bh,BYTE PTR ds:0xaec4f825
  404cc1:	cmp    al,BYTE PTR [ebp+0x30]
  404cc4:	lods   eax,DWORD PTR ds:[esi]
  404cc5:	dec    esp
  404cc6:	iret   
  404cc7:	dec    esi
  404cc8:	outs   dx,DWORD PTR ds:[esi]
  404cc9:	test   eax,0x7e1d644e
  404cce:	stos   BYTE PTR es:[edi],al
  404ccf:	mov    ah,0x3d
  404cd1:	jne    0x404d47
  404cd3:	retf   0x265
  404cd6:	jae    0x404c84
  404cd8:	outs   dx,DWORD PTR ds:[esi]
  404cd9:	xor    DWORD PTR [esi+0x1bfd8633],edi
  404cdf:	mov    esp,0xc90b5e1d
  404ce4:	mov    eax,0x3a59aecd
  404ce9:	shl    DWORD PTR [ebx-0x62],1
  404cec:	mov    ds:0xb851f8c3,eax
  404cf1:	out    0x2d,al
  404cf3:	pop    ecx
  404cf4:	jecxz  0x404d1c
  404cf6:	lods   al,BYTE PTR ds:[si]
  404cf8:	or     DWORD PTR [eax+0x15ce9187],eax
  404cfe:	arpl   sp,bp
  404d00:	jmp    0x6768dece
  404d05:	mov    ebp,DWORD PTR ds:0x7320d83e
  404d0b:	pushf  
  404d0c:	inc    edi
  404d0d:	sub    al,al
  404d0f:	popa   
  404d10:	ret    0x97c7
  404d13:	xor    ch,ch
  404d15:	push   esi
  404d16:	ins    BYTE PTR es:[edi],dx
  404d17:	mov    esi,DWORD PTR [edi+eiz*4-0x23]
  404d1b:	bound  esp,QWORD PTR [ebp+0x442bd66a]
  404d21:	jno    0x404d81
  404d23:	jge    0x404d7d
  404d25:	or     al,0xfd
  404d27:	sub    edi,DWORD PTR [esi+edi*1]
  404d2a:	pop    edi
  404d2b:	sbb    BYTE PTR [esi],bl
  404d2d:	pop    esi
  404d2e:	adc    al,BYTE PTR [ebp-0xf]
  404d31:	or     al,0x70
  404d33:	xchg   edi,eax
  404d34:	sbb    dh,BYTE PTR [eax+0x25867172]
  404d3a:	fdiv   st,st(7)
  404d3c:	mov    bl,0x12
  404d3e:	(bad)  
  404d3f:	pop    eax
  404d40:	push   es
  404d41:	and    esi,ecx
  404d43:	pop    esi
  404d44:	lods   eax,DWORD PTR ds:[esi]
  404d45:	out    dx,eax
  404d46:	call   0x3f16fde0
  404d4b:	ss jg  0x404d33
  404d4e:	pop    ds
  404d4f:	xchg   edx,eax
  404d50:	inc    esp
  404d51:	pop    esi
  404d52:	cld    
  404d53:	ins    BYTE PTR es:[edi],dx
  404d54:	sbb    al,0x7e
  404d56:	(bad)  
  404d57:	sub    eax,0x1cf59cbd
  404d5c:	dec    edi
  404d5d:	adc    DWORD PTR [edx],ebx
  404d5f:	inc    edx
  404d60:	fbld   TBYTE PTR [eax]
  404d62:	stc    
  404d63:	ds adc ebx,eax
  404d66:	cmp    bh,BYTE PTR [ecx-0x6fbb086c]
  404d6c:	(bad)  
  404d6d:	mov    ds:0x858959a6,al
  404d72:	push   ebp
  404d73:	xor    al,BYTE PTR [edi+ecx*2+0x3e26928e]
  404d7a:	mov    BYTE PTR [ebp+0x25],dl
  404d7d:	xor    eax,0x22a0ddbd
  404d82:	(bad)  
  404d83:	call   0xd9aaa8c2
  404d88:	test   BYTE PTR [esp+ebx*4-0x7d2892ec],0x6a
  404d90:	outs   dx,BYTE PTR ds:[esi]
  404d91:	dec    ebx
  404d92:	aam    0x28
  404d94:	call   0xf201:0xae64459c
  404d9b:	sti    
  404d9c:	adc    cl,cl
  404d9e:	aam    0x9e
  404da0:	cmp    al,dh
  404da2:	sbb    al,0xcf
  404da4:	popf   
  404da5:	test   BYTE PTR [edx],ah
  404da7:	and    DWORD PTR [ebp-0x8],edi
  404daa:	adc    esp,esi
  404dac:	ins    BYTE PTR es:[edi],dx
  404dad:	jnp    0x404d8b
  404daf:	shr    DWORD PTR [ecx-0x16d4c649],0x0
  404db6:	imul   esi,DWORD PTR ds:0x5755e0db,0xf1924e65
  404dc0:	loop   0x404e34
  404dc2:	addr16 jmp 0x650d:0x8ef691b3
  404dca:	ficom  DWORD PTR [esi+0x6a2cafb8]
  404dd0:	xor    BYTE PTR [eax+0x77132c9d],cl
  404dd6:	ss jg  0x404e35
  404dd9:	pop    ss
  404dda:	scas   eax,DWORD PTR es:[edi]
  404ddb:	es pop ss
  404ddd:	lahf   
  404dde:	jle    0x404dab
  404de0:	stc    
  404de1:	fs adc al,0xd8
  404de4:	pop    ebp
  404de5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404de6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404de7:	mov    bl,bh
  404de9:	mov    dl,0xc1
  404deb:	loope  0x404e13
  404ded:	push   ebp
  404dee:	mov    ah,0x26
  404df0:	fldlg2 
  404df2:	fiadd  WORD PTR [ecx-0x10e0297b]
  404df8:	(bad)  
  404df9:	pop    ecx
  404dfa:	shl    DWORD PTR [esi],1
  404dfc:	inc    esp
  404dfd:	sbb    ebp,DWORD PTR [ebx-0x73d90ac6]
  404e03:	sar    edx,1
  404e05:	jmp    0xd5c6:0xb050e25
  404e0c:	and    DWORD PTR [eax-0x301d7a97],edx
  404e12:	xor    DWORD PTR [esi+0x41],esi
  404e15:	inc    ecx
  404e16:	and    DWORD PTR [ecx+0x69],esp
  404e19:	daa    
  404e1a:	lds    esi,FWORD PTR [ebx]
  404e1c:	aad    0xf3
  404e1e:	inc    esi
  404e1f:	imul   edi,DWORD PTR [eax-0x6373b293],0xffffffd5
  404e26:	nop
  404e27:	test   DWORD PTR [edx+edi*4-0x1e6afcdf],esi
  404e2e:	test   al,0x18
  404e30:	jne    0x404e8a
  404e32:	mov    bl,cl
  404e34:	jg     0x404eab
  404e36:	mov    al,0x80
  404e38:	bound  esi,QWORD PTR fs:[ecx]
  404e3b:	mov    ebx,0x8f3ff133
  404e40:	(bad)  
  404e41:	add    ah,bl
  404e43:	std    
  404e44:	aas    
  404e45:	dec    eax
  404e46:	(bad)  
  404e47:	jg     0x404e10
  404e49:	fcomp  DWORD PTR [edi+0x329adec0]
  404e4f:	jne    0x404e1a
  404e51:	lods   eax,DWORD PTR ds:[esi]
  404e52:	pop    edi
  404e53:	std    
  404e54:	out    dx,al
  404e55:	or     eax,0xa65d6d29
  404e5a:	adc    esi,eax
  404e5c:	lods   al,BYTE PTR ds:[esi]
  404e5d:	sub    ecx,eax
  404e5f:	sbb    al,0xe
  404e61:	ficom  DWORD PTR [edi]
  404e63:	add    al,0xea
  404e65:	add    al,0x62
  404e67:	pop    ebx
  404e68:	sahf   
  404e69:	shr    DWORD PTR [eax],0x43
  404e6c:	iret   
  404e6d:	cmp    DWORD PTR [ecx-0x7dcdade3],ebx
  404e73:	xor    cl,0xf7
  404e76:	outs   dx,DWORD PTR ds:[esi]
  404e77:	add    eax,0x5ed373f4
  404e7c:	in     al,0x27
  404e7e:	push   ebp
  404e7f:	pop    es
  404e80:	jo     0x404e8a
  404e82:	jbe    0x404e74
  404e84:	pushf  
  404e85:	push   ds
  404e86:	cwde   
  404e87:	ss mov esp,0x982074e5
  404e8d:	mov    esp,0x18ba997f
  404e92:	int    0xca
  404e94:	cs cmp al,0x42
  404e97:	aad    0x3d
  404e99:	lahf   
  404e9a:	add    DWORD PTR ds:[eax-0x17dcd914],eax
  404ea1:	cdq    
  404ea2:	pop    ecx
  404ea3:	or     eax,0x95b60b2c
  404ea8:	mov    ah,0x3c
  404eaa:	mov    esp,0xd8b92c8a
  404eaf:	xchg   ecx,eax
  404eb0:	in     al,0x14
  404eb2:	add    eax,0xae93b19a
  404eb7:	lods   al,BYTE PTR ds:[esi]
  404eb8:	mov    bh,0xca
  404eba:	jo     0x404f11
  404ebc:	fwait
  404ebd:	push   cs
  404ebe:	mov    WORD PTR [edi],fs
  404ec0:	retf   
  404ec1:	mov    eax,0xa1115466
  404ec6:	jo     0x404e95
  404ec8:	xor    eax,edi
  404eca:	xor    edx,edx
  404ecc:	or     eax,edx
  404ece:	mov    cl,BYTE PTR [eax+ecx*1]
  404ed1:	mov    eax,DWORD PTR [ebp-0x34]
  404ed4:	or     BYTE PTR [eax],cl
  404ed6:	mov    eax,DWORD PTR [ebp-0x10]
  404ed9:	mov    ecx,DWORD PTR [ebp-0xc]
  404edc:	shrd   eax,ecx,0x2
  404ee0:	shr    ecx,0x2
  404ee3:	mov    ecx,DWORD PTR [ebp-0x10]
  404ee6:	mov    edx,DWORD PTR [ebp-0xc]
  404ee9:	xor    eax,edi
  404eeb:	shl    ecx,0x1e
  404eee:	xor    edx,edx
  404ef0:	or     eax,edx
  404ef2:	lea    eax,[ebp+eax*1-0x4]
  404ef6:	mov    DWORD PTR [ebp-0x34],eax
  404ef9:	mov    eax,DWORD PTR [ebp-0x10]
  404efc:	mov    ecx,DWORD PTR [ebp-0xc]
  404eff:	shrd   eax,ecx,0x2
  404f03:	shr    ecx,0x2
  404f06:	mov    ecx,DWORD PTR [ebp-0x10]
  404f09:	mov    edx,DWORD PTR [ebp-0xc]
  404f0c:	xor    eax,edi
  404f0e:	shl    ecx,0x1e
  404f11:	mov    ecx,DWORD PTR [ebp-0x14]
  404f14:	xor    edx,edx
  404f16:	or     eax,edx
  404f18:	mov    cl,BYTE PTR [eax+ecx*1]
  404f1b:	mov    eax,DWORD PTR [ebp-0x34]
  404f1e:	add    BYTE PTR [eax],cl
  404f20:	mov    eax,DWORD PTR [ebp-0x60]
  404f23:	mov    ecx,DWORD PTR [ebp-0x5c]
  404f26:	shrd   eax,ecx,0x2
  404f2a:	shr    ecx,0x2
  404f2d:	mov    ecx,DWORD PTR [ebp-0x60]
  404f30:	mov    edx,DWORD PTR [ebp-0x5c]
  404f33:	xor    eax,edi
  404f35:	xor    edx,edx
  404f37:	or     eax,edx
  404f39:	lea    eax,[ebp+eax*1-0x4]
  404f3d:	mov    DWORD PTR [ebp-0x34],eax
  404f40:	mov    eax,DWORD PTR [ebp-0x60]
  404f43:	shl    ecx,0x1e
  404f46:	mov    ecx,DWORD PTR [ebp-0x5c]
  404f49:	shrd   eax,ecx,0x2
  404f4d:	shr    ecx,0x2
  404f50:	mov    ecx,DWORD PTR [ebp-0x60]
  404f53:	mov    edx,DWORD PTR [ebp-0x5c]
  404f56:	xor    eax,edi
  404f58:	xor    edx,edx
  404f5a:	or     eax,edx
  404f5c:	mov    edx,DWORD PTR [ebp+0x14]
  404f5f:	shl    ecx,0x1e
  404f62:	mov    ecx,DWORD PTR [ebp-0x14]
  404f65:	mov    cl,BYTE PTR [eax+ecx*1]
  404f68:	mov    eax,DWORD PTR [ebp-0x34]
  404f6b:	or     BYTE PTR [eax],cl
  404f6d:	jmp    0x40530e
  404f72:	mov    DWORD PTR [edx],ecx
  404f74:	push   0xabac68c5
  404f79:	mov    al,BYTE PTR [edi+0x3b920a40]
  404f7f:	jp     0x404f5c
  404f81:	jecxz  0x404f41
  404f83:	adc    DWORD PTR [esi-0x413b4242],edi
  404f89:	mov    esi,0x942f8c5d
  404f8e:	add    ecx,ebp
  404f90:	and    ecx,edi
  404f92:	inc    esp
  404f93:	mov    ecx,0x36081018
  404f98:	inc    eax
  404f99:	sbb    BYTE PTR [ebx-0x62],bh
  404f9c:	push   esp
  404f9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f9e:	sbb    al,BYTE PTR [esp+edx*4-0x7b]
  404fa2:	mov    dh,0xc8
  404fa4:	sbb    al,0x59
  404fa6:	add    ch,dh
  404fa8:	adc    dh,ch
  404faa:	inc    edi
  404fab:	mov    ah,0x4a
  404fae:	(bad)  
  404faf:	popa   
  404fb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404fb1:	mov    dh,BYTE PTR [ebx+0x4e]
  404fb4:	sub    al,0x32
  404fb6:	xchg   BYTE PTR [ebp-0xc],dl
  404fb9:	mov    dx,0xfa89
  404fbd:	cmp    DWORD PTR [eax],ebp
  404fbf:	mov    ds:0x17556477,al
  404fc4:	adc    al,0xd3
  404fc7:	ret    0x3940
  404fca:	test   eax,0xa12e6eee
  404fcf:	stos   DWORD PTR es:[edi],eax
  404fd0:	lods   al,BYTE PTR ds:[esi]
  404fd1:	fidivr WORD PTR [esi+0x7d779b7f]
  404fd7:	jecxz  0x404f68
  404fd9:	mov    esp,0x3e955725
  404fde:	pop    es
  404fdf:	sub    eax,0xf35dc9e3
  404fe4:	(bad)  
  404fe5:	jl     0x404f89
  404fe7:	loopne 0x404f80
  404fe9:	ja     0x405044
  404feb:	jb     0x40504c
  404fed:	jno    0x404ffa
  404fef:	rol    BYTE PTR [esp+ebp*1+0x692aded1],1
  404ff6:	lock daa 
  404ff8:	fisttp QWORD PTR [ebx]
  404ffa:	push   eax
  404ffb:	ficomp WORD PTR [eax+0x43b41199]
  405001:	(bad)  
  405002:	push   ss
  405003:	sub    eax,0xdf365e1b
  405008:	mov    DWORD PTR [ebp-0x22789615],esi
  40500e:	pop    ss
  40500f:	(bad)  
  405010:	dec    ebx
  405011:	jmp    0x24e28b79
  405016:	inc    ebx
  405017:	mov    eax,0xfbb68875
  40501c:	(bad)  
  40501d:	out    dx,al
  40501e:	pop    ebx
  40501f:	pop    edx
  405020:	aaa    
  405021:	ja     0x405053
  405023:	mov    fs,WORD PTR [edx+0x7a]
  405026:	xlat   BYTE PTR ds:[ebx]
  405027:	mov    WORD PTR [ecx],ss
  405029:	push   eax
  40502a:	in     al,dx
  40502b:	or     al,0x49
  40502d:	int    0x86
  40502f:	mov    cs,WORD PTR [esi]
  405031:	popf   
  405032:	sub    edx,DWORD PTR [ebp+0x54d5780d]
  405038:	arpl   WORD PTR [ecx],bx
  40503a:	push   es
  40503b:	xchg   esp,eax
  40503c:	popa   
  40503d:	call   0x89be:0x964b2977
  405044:	inc    edi
  405045:	mov    BYTE PTR [eax+0x33],0xf5
  405049:	push   eax
  40504a:	mov    cs,eax
  40504c:	leave  
  40504d:	fmul   QWORD PTR [esi+0x16]
  405050:	xlat   BYTE PTR ds:[ebx]
  405051:	dec    ecx
  405052:	dec    ebx
  405053:	dec    esp
  405054:	cwde   
  405055:	mov    ds:0x4f8c1599,eax
  40505a:	mov    di,0x12b9
  40505e:	jae    0x405026
  405060:	mov    edx,0x5fdbe0b4
  405065:	loop   0x405052
  405067:	fild   QWORD PTR [ebx-0x1cffafb3]
  40506d:	cmp    eax,0xdf8670b1
  405072:	mov    ch,ah
  405074:	adc    eax,0x2b75485a
  405079:	int    0xdb
  40507b:	or     esi,DWORD PTR [ebx]
  40507d:	sar    edx,0xf2
  405080:	cmp    bh,BYTE PTR [edx-0x15c369ab]
  405086:	push   ebx
  405087:	cmp    dh,BYTE PTR [ebp+0x47ca6e92]
  40508d:	hlt    
  40508e:	mov    dh,ch
  405090:	cmp    DWORD PTR [eax+0x5a],edi
  405093:	sbb    eax,0x93fac918
  405098:	les    ebp,FWORD PTR [esi+ecx*8+0x55]
  40509c:	fistp  QWORD PTR [ebp-0x17518b89]
  4050a2:	out    0xed,eax
  4050a4:	adc    dl,dl
  4050a6:	aad    0x72
  4050a8:	sbb    eax,0x25909173
  4050ad:	loop   0x40507d
  4050af:	jle    0x40503e
  4050b1:	(bad)  
  4050b2:	iret   
  4050b3:	mov    BYTE PTR [edx+0x5a818371],dl
  4050b9:	adc    ch,BYTE PTR [eax+ebp*1-0x2b]
  4050bd:	les    ebx,FWORD PTR [eax+ebx*1]
  4050c0:	test   edx,edx
  4050c2:	adc    DWORD PTR [eax+0x4e],ebp
  4050c5:	fst    QWORD PTR [ecx]
  4050c7:	mov    bl,0x84
  4050c9:	mov    cl,0x76
  4050cc:	enter  0x7659,0xef
  4050d0:	or     DWORD PTR [esi+0x53b9e880],edi
  4050d6:	sti    
  4050d7:	inc    eax
  4050d8:	mov    ecx,DWORD PTR [esi+0x29ee047c]
  4050de:	add    al,0xa
  4050e0:	pushf  
  4050e1:	pop    ebx
  4050e2:	(bad)  
  4050e3:	sbb    al,BYTE PTR gs:[ebp-0x1c]
  4050e7:	outs   dx,DWORD PTR ds:[esi]
  4050e8:	outs   dx,BYTE PTR ds:[esi]
  4050e9:	test   al,0xbd
  4050eb:	loop   0x405147
  4050ed:	in     eax,dx
  4050ee:	inc    edx
  4050ef:	in     eax,0x57
  4050f1:	popf   
  4050f2:	in     al,dx
  4050f3:	fstp   TBYTE PTR [edi]
  4050f5:	inc    esp
  4050f6:	mov    ebx,0xf09c443f
  4050fb:	lea    eax,[eax+0x6]
  4050fe:	mov    cl,0xdd
  405100:	in     eax,dx
  405101:	popa   
  405102:	or     BYTE PTR [ebp+ebx*4+0xb],bh
  405106:	mov    ebx,0xfd4ce7
  40510b:	ja     0x405177
  40510d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40510e:	adc    eax,0xf5c23f10
  405113:	or     eax,0x78430ce
  405118:	push   eax
  405119:	inc    ecx
  40511a:	cmp    al,0x4d
  40511c:	sbb    BYTE PTR [esi-0x37a9da8e],cl
  405122:	xor    al,0x82
  405124:	mov    WORD PTR [ecx+esi*1],cs
  405127:	mov    ?,WORD PTR [ebp-0x4f]
  40512a:	inc    edi
  40512b:	adc    BYTE PTR [eax-0x3b74144],cl
  405131:	sub    BYTE PTR [edx-0x1d],dl
  405134:	cli    
  405135:	fwait
  405136:	(bad)  
  405137:	lods   al,BYTE PTR ds:[esi]
  405138:	cmp    al,0x2c
  40513a:	out    0x80,al
  40513c:	fnsave [edi-0x5a]
  40513f:	add    BYTE PTR [esi-0x15f7b135],dh
  405145:	in     al,0x55
  405147:	in     al,dx
  405148:	loop   0x405174
  40514a:	or     eax,DWORD PTR [ecx]
  40514c:	cmp    eax,0x848f034e
  405151:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405152:	xchg   DWORD PTR [ebx+0x6aa7a49c],esi
  405158:	push   ds
  405159:	sbb    bh,BYTE PTR [ecx]
  40515b:	mov    esi,0x35fc79cb
  405160:	pop    ss
  405161:	mov    al,0x6e
  405163:	push   cs
  405164:	hlt    
  405165:	cmp    BYTE PTR [esi-0x1405d578],dl
  40516b:	(bad)  
  40516c:	fidiv  WORD PTR [esi-0x3e]
  40516f:	mov    ebx,0xe9379127
  405174:	pop    edx
  405175:	sar    BYTE PTR [ecx],1
  405177:	xchg   esp,eax
  405178:	sub    ch,ch
  40517a:	in     eax,dx
  40517b:	jge    0x4051b1
  40517d:	sub    al,0x83
  40517f:	bswap  eax
  405181:	sub    esi,ebx
  405183:	xchg   esp,eax
  405184:	xor    edi,edi
  405186:	ins    DWORD PTR es:[edi],dx
  405187:	and    al,BYTE PTR [esi]
  405189:	fldcw  WORD PTR [edx+0x3]
  40518c:	cdq    
  40518d:	ins    DWORD PTR es:[edi],dx
  40518e:	sub    BYTE PTR [edx],dl
  405190:	dec    esi
  405191:	jnp    0x4051ba
  405193:	xor    eax,0xe347b2e1
  405198:	int3   
  405199:	sbb    BYTE PTR [ebx-0x3a],0x9d
  40519d:	jns    0x405177
  40519f:	loop   0x4051a7
  4051a1:	mov    eax,ds:0x2d4484dc
  4051a6:	fstp   QWORD PTR [ebp+0x78]
  4051a9:	daa    
  4051aa:	jb     0x405197
  4051ac:	(bad)  
  4051ad:	leave  
  4051ae:	std    
  4051af:	bound  edx,QWORD PTR [edi]
  4051b1:	aam    0xbc
  4051b3:	sbb    BYTE PTR [eax+0x73],dh
  4051b6:	add    dh,BYTE PTR [ebx+0x41]
  4051b9:	push   ebx
  4051ba:	ret    0x2f79
  4051bd:	(bad)  
  4051bf:	stos   BYTE PTR es:[edi],al
  4051c0:	sub    al,0xc2
  4051c2:	push   ds
  4051c3:	cmp    BYTE PTR [edi],0x8d
  4051c6:	fwait
  4051c7:	sub    al,bl
  4051c9:	pushf  
  4051ca:	and    al,0x8f
  4051cc:	hlt    
  4051cd:	inc    ecx
  4051ce:	and    DWORD PTR [edi],eax
  4051d0:	jge    0x405163
  4051d2:	aad    0x54
  4051d4:	and    BYTE PTR ds:0x5f1554b2,ah
  4051da:	mov    ds:0x36ea25c9,al
  4051df:	and    bl,bh
  4051e1:	mov    WORD PTR [eax+0x62],ds
  4051e4:	test   dh,dh
  4051e6:	ja     0x405198
  4051e8:	pop    es
  4051e9:	sbb    DWORD PTR [ebp-0xc734685],0xd971af42
  4051f3:	add    dh,bl
  4051f5:	sbb    DWORD PTR [edi],ecx
  4051f7:	add    edi,DWORD PTR [ecx-0x6904d236]
  4051fd:	push   esp
  4051fe:	or     bh,BYTE PTR [ecx]
  405200:	xchg   edx,eax
  405201:	rcr    BYTE PTR [esi-0x2c],0xdf
  405205:	in     eax,dx
  405206:	in     eax,dx
  405207:	mov    DWORD PTR [eax-0x67],ebp
  40520a:	fnstsw WORD PTR [edx]
  40520c:	mov    cl,0xe7
  40520e:	aaa    
  40520f:	adc    BYTE PTR [esi-0x76],0x91
  405213:	and    BYTE PTR [edx+0xf],0x98
  405217:	addr16 popa 
  405219:	adc    bh,BYTE PTR ds:0xa4de385c
  40521f:	pop    ecx
  405220:	xchg   edi,eax
  405221:	nop
  405222:	jp     0x40528d
  405224:	inc    ebx
  405225:	lahf   
  405226:	addr16 call 0xa117d5f5
  40522c:	jmp    0xff8b:0xe56594af
  405233:	push   0x4b
  405235:	cld    
  405236:	mov    bh,0x70
  405238:	mov    ebx,DWORD PTR [ebp-0x40dacdcf]
  40523e:	push   eax
  40523f:	sbb    al,0x25
  405241:	pop    esi
  405242:	leave  
  405243:	(bad)  
  405244:	imul   edx,DWORD PTR [edi+0x3c],0xd4d3a74
  40524b:	cmp    ah,BYTE PTR [esi-0x49]
  40524e:	mov    bh,0x27
  405250:	iret   
  405251:	or     eax,ebx
  405253:	jl     0x405224
  405255:	inc    esi
  405256:	push   esp
  405257:	sbb    BYTE PTR [eax+0x1e259d4e],bl
  40525d:	out    dx,eax
  40525e:	xchg   ebp,eax
  40525f:	inc    edi
  405260:	mov    edi,0x8c578b79
  405265:	fsubr  QWORD PTR [ebx+0x3f]
  405268:	xchg   BYTE PTR [ebp-0x74],ah
  40526b:	mov    al,0xcc
  40526d:	ret    
  40526e:	and    edi,DWORD PTR [esi+eiz*2]
  405271:	xchg   edi,eax
  405272:	sub    BYTE PTR [edx-0x20],0xd3
  405276:	and    esi,eax
  405278:	pop    esi
  405279:	fwait
  40527a:	aad    0x3f
  40527c:	stos   BYTE PTR es:[edi],al
  40527d:	or     edx,DWORD PTR [ebp-0x56356f81]
  405283:	or     eax,0x6c596ded
  405288:	xchg   DWORD PTR [edx-0x45],edx
  40528b:	clc    
  40528c:	aas    
  40528d:	(bad)  
  40528e:	pop    ebx
  40528f:	push   0x41804f53
  405294:	cmp    bl,bh
  405296:	(bad)  
  405297:	cli    
  405298:	cmp    al,0x26
  40529a:	loope  0x4052e2
  40529c:	clflush BYTE PTR [ebp-0x2e4d3581]
  4052a3:	sbb    edx,DWORD PTR [edx]
  4052a5:	mov    edx,0xfb1258ef
  4052aa:	and    ah,BYTE PTR [edx]
  4052ac:	mov    al,ds:0x98be460
  4052b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052b2:	xor    dl,al
  4052b4:	push   ecx
  4052b5:	add    DWORD PTR [ecx],edi
  4052b7:	mov    ecx,0xc74c1f42
  4052bc:	sti    
  4052bd:	jl     0x40527d
  4052bf:	aam    0xa4
  4052c1:	retf   0xb330
  4052c4:	add    BYTE PTR [edx+0x698a3694],ch
  4052ca:	fwait
  4052cb:	arpl   WORD PTR [eax],bp
  4052cd:	cs push esi
  4052cf:	adc    eax,ebp
  4052d1:	mov    dl,0x44
  4052d3:	ret    
  4052d4:	inc    ecx
  4052d5:	xchg   esi,eax
  4052d6:	out    0x27,al
  4052d8:	jecxz  0x405288
  4052da:	mov    dh,0x32
  4052dc:	rol    DWORD PTR [edi*4+0x48f1da0],1
  4052e3:	pusha  
  4052e4:	dec    esp
  4052e5:	(bad)  
  4052e6:	or     dh,BYTE PTR [esi]
  4052e8:	fadd   DWORD PTR [ecx+0x442d6d77]
  4052ee:	push   edi
  4052ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4052f0:	imul   eax,DWORD PTR [esi],0x5317fcc2
  4052f6:	ja     0x4052fa
  4052f8:	outs   dx,DWORD PTR ds:[esi]
  4052f9:	push   esp
  4052fa:	pop    esp
  4052fb:	(bad)  
  4052fd:	fild   DWORD PTR [eax-0x3d256a4c]
  405303:	mov    ds:0x44e80707,al
  405308:	out    dx,eax
  405309:	dec    ebx
  40530a:	fiadd  DWORD PTR [edi+0x51]
  40530d:	adc    BYTE PTR [ebx-0x3774efbb],cl
  405313:	shrd   ecx,edx,0x2
  405317:	shl    eax,0x1e
  40531a:	shr    edx,0x2
  40531d:	mov    DWORD PTR [ebp+0x14],edx
  405320:	mov    DWORD PTR [ebp+0x14],eax
  405323:	xor    edx,edx
  405325:	mov    eax,ecx
  405327:	jmp    0x4056c8
  40532c:	sub    eax,0x846700b2
  405331:	jnp    0x4052e9
  405333:	mov    esp,0xe3d964fe
  405338:	or     ch,BYTE PTR [ecx+edx*8-0x41e84270]
  40533f:	mov    esi,0xbebec4bd
  405344:	daa    
  405345:	aas    
  405346:	pop    ss
  405347:	les    eax,FWORD PTR [eax-0x73c2e98d]
  40534d:	mov    edx,edi
  40534f:	push   ebx
  405350:	dec    edi
  405351:	(bad)  
  405352:	into   
  405353:	imul   esi,DWORD PTR [esi-0x39],0xffffffee
  405357:	shl    DWORD PTR [ebp+ebx*4-0x1],1
  40535b:	mov    dh,BYTE PTR [eax+0x6a]
  40535e:	scas   eax,DWORD PTR es:[edi]
  40535f:	or     edx,ebx
  405361:	and    ebx,DWORD PTR [edx+0x0]
  405364:	xor    dl,BYTE PTR [edi+ebp*8]
  405367:	adc    BYTE PTR ds:0x266f8cff,bl
  40536d:	imul   ebp,DWORD PTR [eax],0xe9addf5
  405373:	cmp    cl,bh
  405375:	loope  0x40539b
  405377:	dec    ecx
  405378:	das    
  405379:	fcomp  QWORD PTR [esi+0x24]
  40537d:	aam    0x84
  40537f:	hlt    
  405380:	xlat   BYTE PTR ds:[ebx]
  405381:	retf   0x1579
  405384:	push   cs
  405385:	push   ebp
  405386:	das    
  405387:	fistp  DWORD PTR [edx+0x3c]
  40538a:	aad    0x60
  40538c:	mov    BYTE PTR [ecx+0x14a768fd],bh
  405392:	clc    
  405393:	sbb    eax,0xb9e25109
  405398:	push   0x3d10d701
  40539d:	stos   DWORD PTR es:[edi],eax
  40539e:	bound  ebx,QWORD PTR [esi+0x73c6c270]
  4053a4:	inc    edx
  4053a5:	jecxz  0x40540d
  4053a7:	jns    0x4053ac
  4053a9:	out    0xf3,eax
  4053ab:	sub    BYTE PTR [eax-0x43],ch
  4053ae:	lods   al,BYTE PTR ds:[esi]
  4053af:	outs   dx,BYTE PTR ds:[esi]
  4053b0:	lea    esp,[edx-0x46]
  4053b3:	xchg   ecx,eax
  4053b4:	add    DWORD PTR [ecx],esi
  4053b6:	in     eax,dx
  4053b7:	pop    ecx
  4053b8:	sti    
  4053b9:	sbb    dh,dl
  4053bb:	int3   
  4053bc:	in     eax,dx
  4053bd:	sub    al,0xc0
  4053bf:	xchg   ebx,edi
  4053c1:	iret   
  4053c2:	xor    bh,bl
  4053c4:	jno    0x4053f7
  4053c6:	test   DWORD PTR [edi],esp
  4053c8:	mov    bl,0x6c
  4053ca:	sub    ebp,DWORD PTR [edi-0x67851904]
  4053d0:	cmp    bl,al
  4053d2:	mov    eax,ds:0x8d276b3b
  4053d7:	call   0x6d3:0xb1227cbc
  4053de:	ss sbb eax,0x1c4b0120
  4053e4:	and    ebp,ebp
  4053e6:	adc    DWORD PTR [edi-0x6bba7885],ecx
  4053ec:	test   BYTE PTR [edi-0x17e53826],dh
  4053f2:	sbb    al,0x63
  4053f4:	sub    BYTE PTR [edi+0x43],0x27
  4053f8:	mov    gs,WORD PTR [esi]
  4053fa:	das    
  4053fb:	adc    ebp,edi
  4053fd:	imul   esi,edx,0xcf6d1826
  405403:	cdq    
  405404:	xor    esp,DWORD PTR [eax+0x2]
  405407:	dec    edi
  405408:	jle    0x405454
  40540a:	leave  
  40540b:	pop    ebp
  40540c:	stos   BYTE PTR es:[edi],al
  40540d:	or     dl,BYTE PTR [ebp+0x27]
  405410:	dec    edi
  405411:	xchg   esi,eax
  405412:	sub    bl,BYTE PTR [eax]
  405414:	cdq    
  405415:	cli    
  405416:	mov    cl,0xd9
  405418:	punpckhwd mm6,QWORD PTR [ecx-0x63]
  40541c:	icebp  
  40541d:	icebp  
  40541e:	not    BYTE PTR [edx]
  405420:	outs   dx,DWORD PTR ds:[esi]
  405421:	in     al,0x21
  405423:	popf   
  405424:	call   0xf731:0x97882aea
  40542b:	daa    
  40542c:	and    bh,ch
  40542e:	fstp   TBYTE PTR [edx-0x3d]
  405431:	dec    ebx
  405432:	xor    edx,DWORD PTR [esp+ebx*8+0x62e7dec9]
  405439:	inc    ebp
  40543a:	cli    
  40543b:	sub    eax,0x48a9fa2a
  405440:	mov    gs,WORD PTR [edx]
  405442:	add    BYTE PTR [edx],cl
  405444:	fistp  WORD PTR [edx]
  405446:	sar    DWORD PTR [ecx+ecx*1-0x25264674],cl
  40544d:	sub    DWORD PTR [ebx+ebp*8+0x5f],0x19e4b2ff
  405455:	fs pop eax
  405457:	sub    eax,0xcff2830d
  40545c:	cmp    DWORD PTR [edx],edi
  40545e:	int    0x2a
  405460:	dec    ecx
  405461:	inc    ebx
  405462:	xlat   BYTE PTR ds:[ebx]
  405463:	lahf   
  405464:	std    
  405465:	cdq    
  405466:	mov    ds:0x3b92da92,eax
  40546b:	sti    
  40546c:	lods   al,BYTE PTR ds:[esi]
  40546d:	pop    ecx
  40546e:	scas   eax,DWORD PTR es:[edi]
  40546f:	inc    esp
  405470:	call   0x97b79249
  405475:	jge    0x4054f3
  405477:	fst    QWORD PTR [ecx+0x7d]
  40547a:	int3   
  40547b:	adc    edi,DWORD PTR [esi]
  40547d:	outs   dx,BYTE PTR ds:[esi]
  40547e:	mov    eax,es
  405480:	cli    
  405481:	adc    al,BYTE PTR [ebx+0xf39a60b]
  405487:	push   cs
  405488:	add    ah,ah
  40548a:	jmp    0x7190914b
  40548f:	inc    ebp
  405490:	pop    ebp
  405491:	push   ebx
  405492:	js     0x4054fe
  405494:	int    0x46
  405496:	aad    0x8
  405498:	scas   al,BYTE PTR es:[edi]
  405499:	into   
  40549a:	sar    BYTE PTR fs:[esi],1
  40549d:	outs   dx,DWORD PTR ds:[esi]
  40549e:	test   eax,0xa401f960
  4054a3:	sbb    al,0x45
  4054a5:	mov    al,0x7b
  4054a7:	sub    eax,0xd8a95955
  4054ac:	dec    ax
  4054ae:	xchg   DWORD PTR [ebp+ebx*4-0xf],edx
  4054b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4054b3:	sub    eax,0xb30303b8
  4054b8:	imul   ebp,DWORD PTR [ecx-0x786fb3b4],0xd70b937c
  4054c2:	push   ebx
  4054c3:	ficom  DWORD PTR [edi+0x3df2c215]
  4054c9:	daa    
  4054ca:	push   eax
  4054cb:	rcr    DWORD PTR [edx],0x95
  4054ce:	mov    ebp,0xa4a53067
  4054d3:	push   esi
  4054d4:	mov    edi,0x66bf9b21
  4054d9:	inc    ebp
  4054da:	je     0x405507
  4054dc:	push   eax
  4054dd:	call   0x9e3e:0xe38e6a3d
  4054e4:	adc    al,0xac
  4054e6:	fwait
  4054e7:	cmp    DWORD PTR [ebp-0x4b93b0cd],esi
  4054ed:	pop    eax
  4054ee:	dec    ecx
  4054ef:	push   cs
  4054f0:	or     edx,DWORD PTR [ebp+0x4]
  4054f3:	jmp    0x22cf:0xb1e384e9
  4054fa:	xchg   edi,eax
  4054fb:	jnp    0x40556d
  4054fd:	xchg   ebx,eax
  4054fe:	mov    ch,0x9
  405500:	inc    edx
  405501:	hlt    
  405502:	pop    edx
  405503:	loopne 0x405487
  405505:	pop    esp
  405506:	xor    eax,0x47eab808
  40550b:	jle    0x405532
  40550d:	xchg   ecx,eax
  40550e:	adc    eax,0xdae1a999
  405513:	mov    ecx,0x41eea21b
  405518:	dec    esp
  405519:	loop   0x405527
  40551b:	jno    0x4054f5
  40551d:	clc    
  40551e:	cmp    al,0x6
  405520:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405521:	pop    es
  405522:	cwde   
  405523:	(bad)  
  405524:	mov    ebp,0x11f6b574
  405529:	into   
  40552a:	mov    al,ds:0x6edbc0b4
  40552f:	into   
  405530:	adc    BYTE PTR [eax-0x692715a],bl
  405536:	mov    edi,DWORD PTR [edi]
  405538:	adc    eax,0x57e0e5e9
  40553d:	test   DWORD PTR [ebp+0x1dc88219],0xec736646
  405547:	lock mov al,ds:0xa20a1922
  40554d:	xchg   ecx,eax
  40554e:	mov    ch,0x8
  405550:	push   esp
  405551:	mov    ecx,0xdc80a890
  405556:	stc    
  405557:	sbb    eax,0x94ae58ea
  40555c:	imul   ecx,DWORD PTR [ecx+0x59fcaf06],0x28
  405563:	mov    dh,0x85
  405565:	icebp  
  405566:	inc    esp
  405567:	int3   
  405568:	xchg   esp,eax
  405569:	mov    ebx,0x30a41be
  40556e:	mov    ebx,0xc758ded5
  405573:	pop    edi
  405574:	and    BYTE PTR [ebx],ch
  405576:	push   ss
  405577:	add    eax,0xde780e6f
  40557c:	dec    ebp
  40557d:	jmp    0xaae1:0x81154fdc
  405584:	mov    edi,0x8628658b
  405589:	xchg   esp,eax
  40558a:	test   al,0x25
  40558c:	xchg   esp,eax
  40558d:	inc    edi
  40558e:	lods   eax,DWORD PTR ds:[esi]
  40558f:	sbb    esi,edi
  405591:	pop    ebx
  405592:	dec    eax
  405593:	push   cs
  405594:	sbb    eax,0x4a61424c
  405599:	cmp    al,0xdb
  40559b:	sub    eax,0x38cfb9aa
  4055a0:	and    eax,0xf4c68be0
  4055a5:	aam    0x88
  4055a7:	bound  ebp,QWORD PTR [edi-0x563676a9]
  4055ad:	(bad)  
  4055ae:	cmovo  esp,DWORD PTR [edi+0x41407df0]
  4055b5:	sub    BYTE PTR [ecx-0x3deb7bab],0xb6
  4055bc:	arpl   WORD PTR ds:0x5ff6f6b0,bx
  4055c2:	jl     0x405588
  4055c4:	xlat   BYTE PTR ds:[ebx]
  4055c5:	mov    ?,WORD PTR [edx]
  4055c7:	sar    DWORD PTR [ebx],0x5c
  4055ca:	imul   esi,DWORD PTR [esi],0x36
  4055cd:	dec    edx
  4055ce:	sub    BYTE PTR ds:0xa7bda3bc,0xb4
  4055d5:	or     eax,0xe985a340
  4055da:	xor    DWORD PTR [ebx],ecx
  4055dc:	pop    ds
  4055dd:	push   ebx
  4055de:	in     eax,0x78
  4055e0:	mov    edx,0x455efbc2
  4055e5:	out    dx,al
  4055e6:	imul   esp,DWORD PTR [esi+0x47],0x6e6692c4
  4055ed:	aaa    
  4055ee:	rcr    DWORD PTR [ebx-0x3d],cl
  4055f1:	xchg   ecx,eax
  4055f2:	dec    esi
  4055f3:	cmp    DWORD PTR [esi-0x26959f97],ebp
  4055f9:	push   ecx
  4055fa:	sar    BYTE PTR ds:0x93dd4b4c,1
  405600:	cmp    DWORD PTR [esi+eax*1-0x4fd1c89d],esi
  405607:	pop    ds
  405608:	push   edi
  405609:	std    
  40560a:	jns    0x40563c
  40560c:	add    DWORD PTR [edx+0x2b925454],eax
  405612:	push   ecx
  405613:	rol    BYTE PTR [edx+0x43],1
  405616:	hlt    
  405617:	(bad)  
  405618:	xor    BYTE PTR [eax],al
  40561a:	mov    cl,0x30
  40561c:	sub    ah,dl
  40561e:	je     0x40569a
  405620:	sahf   
  405621:	std    
  405622:	and    eax,0xdd194eca
  405627:	jmp    0x405616
  405629:	inc    edx
  40562a:	push   ebp
  40562b:	mov    ecx,0xf97a30ee
  405630:	push   esp
  405631:	or     bh,BYTE PTR [ecx+0x6a31c0b5]
  405637:	loopne 0x405644
  405639:	xor    al,0xd3
  40563b:	adc    eax,edi
  40563d:	hlt    
  40563e:	xor    ecx,0xffffff9e
  405641:	xlat   BYTE PTR ds:[ebx]
  405642:	inc    eax
  405643:	mov    ch,BYTE PTR [edx]
  405645:	jecxz  0x4055da
  405647:	imul   eax,DWORD PTR [edi+edx*8+0x12],0x33b967f6
  40564f:	mov    esp,0xbe8fa03
  405654:	jb     0x40564b
  405656:	fnstcw WORD PTR [edx+0x47]
  405659:	push   ds
  40565a:	js     0x40562d
  40565c:	push   es
  40565d:	out    dx,al
  40565e:	pop    ecx
  40565f:	fdiv   DWORD PTR [edx]
  405661:	inc    esi
  405662:	pop    edi
  405663:	arpl   WORD PTR [ebp+0x19037fc1],sp
  405669:	(bad)  
  40566a:	mov    ebx,0xe281dc77
  40566f:	rcl    edx,0x4f
  405672:	cld    
  405673:	jbe    0x405682
  405675:	out    dx,eax
  405676:	and    DWORD PTR ds:0x9757fe06,edx
  40567c:	xchg   DWORD PTR [ebx+0xed3536c],edi
  405682:	sti    
  405683:	add    DWORD PTR [ebx-0x5241098],ecx
  405689:	or     edi,0x69813315
  40568f:	pop    ds
  405690:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405691:	mov    esi,0x2af10084
  405696:	loopne 0x4056e2
  405698:	cli    
  405699:	aas    
  40569a:	mov    bh,0xf9
  40569c:	clc    
  40569d:	xlat   BYTE PTR ds:[ebx]
  40569e:	pushf  
  40569f:	repnz adc bh,BYTE PTR [ecx-0x62]
  4056a3:	add    ebx,edi
  4056a5:	push   ebp
  4056a6:	push   edx
  4056a7:	jge    0x405636
  4056a9:	xor    eax,0x284529f1
  4056ae:	icebp  
  4056af:	inc    ebp
  4056b0:	jle    0x40568f
  4056b2:	shl    dh,0xfc
  4056b5:	pop    ecx
  4056b6:	xor    bl,bl
  4056b8:	sbb    edx,DWORD PTR [edx]
  4056ba:	add    ah,BYTE PTR [edi+0x5d]
  4056bd:	popa   
  4056be:	jns    0x4056ec
  4056c0:	add    eax,0x46e4ea03
  4056c5:	pop    esi
  4056c6:	inc    edi
  4056c7:	add    DWORD PTR [ebx],esi
  4056c9:	(bad)  
  4056ca:	or     eax,edx
  4056cc:	mov    edx,DWORD PTR [ebp-0x4]
  4056cf:	dec    eax
  4056d0:	not    eax
  4056d2:	jmp    0x405a73
  4056d7:	int    0x14
  4056d9:	mov    ds:0x7ab8a317,eax
  4056de:	sbb    al,0x97
  4056e0:	mov    ah,0x18
  4056e2:	ror    DWORD PTR [eax-0x412ed38b],1
  4056e8:	pop    ds
  4056e9:	mov    esi,0xbec4bdbe
  4056ee:	mov    esi,0xdb74962d
  4056f3:	inc    ecx
  4056f4:	mov    DWORD PTR [eax-0xe],edi
  4056f7:	shld   ebx,edx,0x10
  4056fb:	aaa    
  4056fc:	dec    ecx
  4056fd:	addr16 sbb al,0x7d
  405700:	popa   
  405701:	loop   0x4056fa
  405703:	pop    esp
  405704:	aad    0xde
  405706:	aas    
  405707:	mulps  xmm3,XMMWORD PTR [eax-0x72]
  40570b:	test   DWORD PTR [edi],ecx
  40570d:	fnsave [edi+ebx*8+0x6bbcaf1d]
  405714:	pop    ss
  405715:	pop    ecx
  405716:	adc    ebp,edi
  405718:	test   eax,0xf760aabc
  40571d:	psubusb mm4,QWORD PTR [edx-0x159b148b]
  405724:	jl     0x405730
  405726:	inc    esi
  405727:	xchg   esi,eax
  405728:	test   al,0x99
  40572a:	jp     0x405743
  40572c:	cmc    
  40572d:	and    dl,BYTE PTR [edi]
  40572f:	aam    0xf8
  405731:	pop    edx
  405732:	in     eax,0x15
  405734:	rol    DWORD PTR [ebp+0x57],1
  405737:	fistp  WORD PTR [edx]
  405739:	out    dx,eax
  40573a:	adc    al,0x7d
  40573c:	jp     0x4057a0
  40573e:	enter  0x143f,0xa3
  405742:	sub    BYTE PTR [eax-0x2c],bl
  405745:	or     eax,0x64498179
  40574a:	lea    edi,[edx]
  40574c:	inc    esp
  40574d:	xchg   DWORD PTR [eax+0x66],edx
  405750:	xor    dl,BYTE PTR [esi*8+0x7b84d5d]
  405757:	popa   
  405758:	xor    al,0xb8
  40575a:	mov    bh,0xdd
  40575c:	jle    0x405731
  40575e:	into   
  40575f:	jp     0x4057a1
  405761:	cmp    ah,0xa3
  405764:	call   0xd858:0xcc641373
  40576b:	cmp    bh,dl
  40576d:	jle    0x405708
  40576f:	cdq    
  405770:	fisubr WORD PTR [esi]
  405772:	daa    
  405773:	mov    al,0xb4
  405775:	cld    
  405776:	add    eax,0xfbef250d
  40577b:	xor    DWORD PTR [edx-0x1a],esp
  40577e:	fidivr WORD PTR ds:0x526cfd27
  405784:	cld    
  405785:	mov    eax,es:0x1e99015c
  40578b:	addr16 pop ss
  40578d:	mov    bh,0xa5
  40578f:	js     0x4057c7
  405791:	mov    DWORD PTR [edi+0x76],ebx
  405794:	cld    
  405795:	mov    esp,DWORD PTR [esi+0x362f719e]
  40579b:	xor    dh,ah
  40579d:	ror    BYTE PTR [edx],1
  40579f:	mov    ah,0x44
  4057a1:	pop    ecx
  4057a2:	jbe    0x405738
  4057a4:	mov    dh,bh
  4057a6:	pop    esp
  4057a7:	adc    dl,BYTE PTR [ebx-0x26fc6ae3]
  4057ad:	ss xchg ecx,eax
  4057af:	mov    eax,DWORD PTR [edi]
  4057b1:	pop    ss
  4057b2:	push   esi
  4057b3:	paddsw mm7,QWORD PTR [ebx]
  4057b6:	add    eax,0x892e98cf
  4057bb:	imul   edi,DWORD PTR [eax-0x2b812bd1],0xffffffad
  4057c2:	push   eax
  4057c3:	push   ss
  4057c4:	ins    DWORD PTR es:[edi],dx
  4057c5:	dec    ecx
  4057c6:	test   eax,0x7f23b3b
  4057cb:	and    eax,0xafe0aece
  4057d0:	(bad)  
  4057d2:	test   DWORD PTR [edx],0x37ca6620
  4057d8:	loope  0x405847
  4057da:	push   edi
  4057db:	adc    al,0x2
  4057dd:	pop    ds
  4057de:	fs push ebx
  4057e0:	addr16 or al,0xeb
  4057e3:	dec    esp
  4057e4:	test   eax,0x32cf4a15
  4057e9:	pop    ss
  4057ea:	bound  esp,QWORD PTR [edi-0x9]
  4057ed:	popa   
  4057ee:	mov    eax,0xc86fa482
  4057f3:	out    0xb3,al
  4057f5:	adc    dl,ch
  4057f7:	enter  0x3144,0x66
  4057fb:	inc    ecx
  4057fc:	(bad)
  405800:	mov    edi,0x6acbe593
  405805:	and    BYTE PTR [edx+0x7c],0x8d
  405809:	outs   dx,DWORD PTR ds:[esi]
  40580a:	retf   
  40580b:	adc    edx,DWORD PTR [ebp-0x29]
  40580e:	and    al,0xc4
  405810:	push   eax
  405811:	call   0xbcf0180f
  405816:	int    0xba
  405818:	outs   dx,DWORD PTR ds:[esi]
  405819:	ret    0xad42
  40581c:	dec    esp
  40581d:	les    edx,FWORD PTR [ebx+0x2836775]
  405823:	pop    ebp
  405824:	jp     0x405821
  405826:	mul    BYTE PTR [edi]
  405828:	inc    ebx
  405829:	dec    ecx
  40582a:	shl    DWORD PTR [ebx-0x2f],cl
  40582d:	cmp    DWORD PTR [edi-0x10],eax
  405830:	ror    DWORD PTR [edi],1
  405832:	sar    BYTE PTR ds:0xfd3c80ff,cl
  405838:	jle    0x4057da
  40583a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40583b:	call   0x7679fb41
  405840:	aam    0x3d
  405842:	rol    BYTE PTR [edx],cl
  405844:	fidivr WORD PTR [eax+edx*8]
  405847:	fwait
  405848:	xchg   DWORD PTR [ebx+0x71628284],ebx
  40584e:	mov    bl,ch
  405850:	mov    ebp,0xe04ada2a
  405855:	loopne 0x40588d
  405857:	ficomp DWORD PTR [ecx]
  405859:	ins    DWORD PTR es:[edi],dx
  40585a:	je     0x405855
  40585c:	dec    esp
  40585d:	nop
  40585e:	pop    ebp
  40585f:	and    cl,BYTE PTR [ebx-0x2ba700ad]
  405865:	mov    BYTE PTR [eax+ecx*2],bl
  405868:	mov    eax,ds:0x6e3e0e4b
  40586d:	dec    eax
  40586e:	inc    ebp
  40586f:	addr16 add al,0xf7
  405872:	scas   eax,DWORD PTR es:[edi]
  405873:	dec    ebp
  405874:	mov    cl,0xb7
  405876:	fiadd  DWORD PTR [edx-0x74]
  405879:	out    0x8b,al
  40587b:	inc    ecx
  40587c:	out    0x8a,eax
  40587e:	enter  0x56cd,0x3e
  405882:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405883:	repnz ror BYTE PTR [ebp+0x7f],1
  405887:	or     al,0xcd
  405889:	pop    edi
  40588a:	ins    DWORD PTR es:[edi],dx
  40588b:	inc    ecx
  40588c:	inc    ecx
  40588d:	sub    bl,BYTE PTR [eax+0x4e87593a]
  405893:	mov    esi,DWORD PTR [ebx+0x6a3b3013]
  405899:	outs   dx,DWORD PTR ds:[esi]
  40589a:	cld    
  40589b:	mov    dh,0x67
  40589d:	or     ecx,DWORD PTR [ebx-0x46ede3ad]
  4058a3:	in     eax,dx
  4058a4:	(bad)  
  4058a5:	loopne 0x40584b
  4058a7:	xchg   ebp,eax
  4058a8:	repz inc esi
  4058aa:	cmp    al,0x93
  4058ac:	xor    eax,0x2c82e809
  4058b1:	dec    esp
  4058b2:	lahf   
  4058b3:	fadd   QWORD PTR [ebx*1+0x229acd9]
  4058ba:	mov    DWORD PTR [eax],eax
  4058bc:	mov    bh,0x11
  4058be:	cmp    eax,0xedeac861
  4058c3:	stos   BYTE PTR es:[edi],al
  4058c4:	xor    ah,BYTE PTR [ebx]
  4058c6:	arpl   si,cx
  4058c8:	xchg   esi,eax
  4058c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058ca:	(bad)  
  4058cb:	or     esi,eax
  4058cd:	mov    ds:0xe766c9e5,eax
  4058d2:	adc    al,0x49
  4058d4:	mov    eax,0x314ec748
  4058d9:	je     0x40586b
  4058db:	dec    eax
  4058dc:	sub    bh,dl
  4058de:	mov    cl,0x39
  4058e0:	xchg   edx,eax
  4058e1:	jbe    0x405928
  4058e3:	popf   
  4058e4:	icebp  
  4058e5:	rcr    dh,0x49
  4058e8:	loop   0x405890
  4058ea:	ss aad 0x0
  4058ed:	sbb    edx,DWORD PTR [edi+edx*4+0x72793d4c]
  4058f4:	inc    ebp
  4058f5:	mov    dh,0xc8
  4058f7:	sbb    WORD PTR [esi+0x0],di
  4058fb:	out    0x30,al
  4058fd:	fstp   QWORD PTR [ecx+ebp*8-0x3d9ca636]
  405904:	sub    DWORD PTR [ecx],esp
  405906:	cmp    ah,BYTE PTR [esi-0x762c147b]
  40590c:	test   eax,0x14dbb3ba
  405911:	mov    DWORD PTR [ebx],esi
  405913:	pushf  
  405914:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405915:	addr16 cmp eax,0x7ae91eb2
  40591b:	sub    BYTE PTR [esi+0x22],ch
  40591e:	xlat   BYTE PTR ds:[ebx]
  40591f:	icebp  
  405920:	or     BYTE PTR [ebp-0x3c],dh
  405923:	inc    eax
  405924:	mov    al,ds:0xf7c66dba
  405929:	xchg   ebp,eax
  40592a:	popa   
  40592b:	jbe    0x4058d4
  40592d:	cs and al,0x22
  405930:	loopne 0x4058f7
  405932:	sbb    ebx,edx
  405934:	mov    ds:0xbd5b0d26,al
  405939:	popa   
  40593a:	or     al,0x37
  40593c:	push   ds
  40593d:	aad    0x49
  40593f:	(bad)  
  405940:	mov    ch,0x79
  405942:	pop    ebp
  405943:	mov    dl,0x49
  405945:	(bad)  
  405947:	retf   0x4380
  40594a:	or     ah,BYTE PTR [edx-0x5d]
  40594d:	sar    DWORD PTR [edx+0x2e81e59c],0xdb
  405954:	push   0x39
  405956:	test   eax,0xdf5fd288
  40595b:	dec    ebx
  40595c:	jle    0x4059a8
  40595e:	xchg   ecx,eax
  40595f:	dec    eax
  405960:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405961:	outs   dx,BYTE PTR ds:[esi]
  405962:	test   al,0x1f
  405964:	cmp    eax,0x6efaff86
  405969:	aam    0x18
  40596b:	cwde   
  40596c:	or     eax,0xd6ee180b
  405971:	adc    esp,DWORD PTR [edi-0x1a0f7662]
  405977:	jmp    0x40599a
  405979:	int    0x11
  40597b:	inc    esi
  40597c:	push   ebp
  40597d:	or     al,0x2c
  40597f:	dec    esi
  405980:	enter  0xcdc9,0x82
  405984:	rcr    DWORD PTR ds:[edi-0x2ba2eae5],0x36
  40598c:	sbb    DWORD PTR [ebx+0x79],ebp
  40598f:	stos   BYTE PTR es:[edi],al
  405990:	or     eax,0x981997f
  405995:	mov    ah,0xb2
  405997:	lock cdq 
  405999:	inc    edi
  40599a:	mov    ebp,DWORD PTR [edi]
  40599c:	rcr    bh,cl
  40599e:	rol    BYTE PTR [ebp-0x56cf3100],0x68
  4059a5:	pop    eax
  4059a6:	in     al,dx
  4059a7:	leave  
  4059a8:	xchg   edi,eax
  4059a9:	cmc    
  4059aa:	jno    0x405a0c
  4059ac:	push   ecx
  4059ad:	or     cl,dl
  4059af:	cmp    eax,0x4e71a733
  4059b4:	jnp    0x4059f6
  4059b6:	cmp    DWORD PTR [ebx+0x35],eax
  4059b9:	icebp  
  4059ba:	xchg   esi,ecx
  4059bc:	or     DWORD PTR ds:0x697ec8ba,0xffffffb3
  4059c3:	mov    ebx,DWORD PTR [ebp-0x636757af]
  4059c9:	into   
  4059ca:	cmp    DWORD PTR [eax],edi
  4059cc:	pop    edi
  4059cd:	xor    edx,DWORD PTR [ecx+ebp*8]
  4059d0:	sbb    eax,0x309ec630
  4059d5:	pop    ebx
  4059d6:	fldcw  WORD PTR [ebx]
  4059d8:	int    0xc4
  4059da:	mov    es,WORD PTR [esi+eiz*1]
  4059dd:	outs   dx,BYTE PTR ds:[esi]
  4059de:	je     0x405a35
  4059e0:	mov    bl,al
  4059e2:	mov    dh,0xea
  4059e4:	xchg   ebp,eax
  4059e5:	adc    BYTE PTR [ebx],al
  4059e7:	mov    ebx,0x31b6dc91
  4059ec:	mov    esi,0xee1b7eda
  4059f1:	popa   
  4059f2:	pop    ebx
  4059f3:	fisttp DWORD PTR [edi-0x4a]
  4059f6:	ins    BYTE PTR es:[edi],dx
  4059f7:	xor    al,0x13
  4059f9:	inc    ecx
  4059fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059fb:	push   es
  4059fc:	push   edi
  4059fd:	std    
  4059fe:	fidiv  DWORD PTR [edi-0x2bb2fd45]
  405a04:	jnp    0x405a75
  405a06:	(bad)  
  405a07:	inc    edx
  405a08:	mov    edx,0xa117b9d7
  405a0d:	dec    ebx
  405a0e:	push   ss
  405a0f:	sar    BYTE PTR [ecx+0x73b77ff6],0x1e
  405a16:	in     eax,dx
  405a17:	lock out dx,al
  405a19:	(bad)  
  405a1a:	ret    
  405a1b:	xor    eax,0xe0c8d1d7
  405a20:	les    ebp,FWORD PTR [ecx+eiz*1-0x6a]
  405a24:	es pop esi
  405a26:	data16 and BYTE PTR [esi-0x37],bh
  405a2a:	nop
  405a2b:	loopne 0x4059ed
  405a2d:	lods   eax,DWORD PTR ds:[esi]
  405a2e:	push   ds
  405a2f:	jge    0x4059c5
  405a31:	add    BYTE PTR [edi],dh
  405a33:	in     al,0xf4
  405a35:	sahf   
  405a36:	test   DWORD PTR [edx],ebx
  405a38:	ja     0x405a02
  405a3a:	pop    eax
  405a3b:	sbb    al,0x2b
  405a3d:	jle    0x405a0b
  405a3f:	mov    bl,0x20
  405a41:	mov    cl,0x5
  405a43:	dec    edi
  405a44:	ja     0x405a7e
  405a46:	ficomp WORD PTR [edx-0x62]
  405a49:	and    esi,esi
  405a4b:	jns    0x405aab
  405a4d:	lods   al,BYTE PTR ds:[esi]
  405a4e:	push   ss
  405a4f:	mov    bh,0xc8
  405a51:	sar    ch,0xc0
  405a54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a55:	arpl   WORD PTR [ecx-0x27],sp
  405a58:	pop    edi
  405a59:	lods   eax,DWORD PTR es:[esi]
  405a5b:	push   cs
  405a5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a5d:	sbb    eax,0x40653693
  405a62:	mov    eax,ds:0x15b7b790
  405a67:	pop    ecx
  405a68:	push   ds
  405a69:	adc    DWORD PTR [edx+0x456c2cf8],ebx
  405a6f:	push   ss
  405a70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a71:	dec    edi
  405a72:	or     ah,BYTE PTR [ebx]
  405a74:	ret    0xcf33
  405a77:	mov    DWORD PTR [ebp-0x4],eax
  405a7a:	mov    DWORD PTR [ebp+0x14],ecx
  405a7d:	xor    eax,eax
  405a7f:	or     DWORD PTR [ebp+0x14],eax
  405a82:	mov    eax,DWORD PTR [ebp-0x50]
  405a85:	mov    ecx,DWORD PTR [ebp-0x4c]
  405a88:	shrd   eax,ecx,0x2
  405a8c:	shr    ecx,0x2
  405a8f:	mov    cx,ax
  405a92:	mov    eax,DWORD PTR [ebp-0x50]
  405a95:	mov    edx,0x6d5d
  405a9a:	xor    cx,dx
  405a9d:	mov    edx,DWORD PTR [ebp-0x4c]
  405aa0:	xor    edx,edx
  405aa2:	shl    eax,0x1e
  405aa5:	mov    ax,dx
  405aa8:	or     ax,cx
  405aab:	mov    ecx,DWORD PTR [ebp-0x4]
  405aae:	cmp    WORD PTR [ecx],ax
  405ab1:	je     0x406288
  405ab7:	mov    eax,DWORD PTR [ebp+0x14]
  405aba:	sub    DWORD PTR [ebp-0x4],eax
  405abd:	mov    eax,DWORD PTR [esi]
  405abf:	jmp    0x405e60
  405ac4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ac5:	test   eax,0x3c522b52
  405aca:	mov    eax,0x46ddf0ac
  405acf:	xchg   edx,eax
  405ad0:	popf   
  405ad1:	push   es
  405ad2:	xor    ch,bl
  405ad4:	mov    ebp,0xbdbebe25
  405ad9:	les    edi,FWORD PTR [esi+0x7eda95be]
  405adf:	mov    WORD PTR [ecx-0xb6a61dc],fs
  405ae5:	rol    DWORD PTR [esi-0x63],1
  405ae8:	loop   0x405aeb
  405aea:	jne    0x405b27
  405aec:	adc    bh,BYTE PTR [eax+eiz*1-0x73]
  405af0:	or     dh,BYTE PTR [edi-0x5a63a429]
  405af6:	cdq    
  405af7:	or     al,0x1a
  405af9:	sbb    eax,0x2d24555
  405afe:	imul   esp,DWORD PTR [ecx*2+0x6e5f5cec],0x907a6282
  405b09:	out    dx,al
  405b0a:	adc    DWORD PTR [esi],esi
  405b0c:	pop    ebx
  405b0d:	inc    ebp
  405b0e:	push   ebx
  405b0f:	out    dx,al
  405b10:	scas   al,BYTE PTR es:[edi]
  405b11:	inc    eax
  405b12:	push   edx
  405b13:	hlt    
  405b14:	sub    DWORD PTR [ecx],esi
  405b16:	pop    edx
  405b17:	mov    ah,0x32
  405b19:	imul   edx,DWORD PTR [edx],0x5b
  405b1c:	sbb    eax,0x73fd206a
  405b21:	xor    ebp,eax
  405b23:	pop    ds
  405b24:	push   0xffffff9e
  405b26:	imul   esi,DWORD PTR [ecx-0x56],0x73
  405b2a:	cs addr16 test al,0x52
  405b2e:	call   0xb9b1cbdb
  405b33:	dec    eax
  405b34:	loop   0x405b20
  405b36:	clc    
  405b37:	push   0xf8bfed4a
  405b3c:	jl     0x405b1f
  405b3e:	mul    DWORD PTR [ecx-0xe]
  405b41:	push   0xdc6f9d52
  405b46:	test   al,0x50
  405b48:	push   ebp
  405b49:	add    eax,0x94b65351
  405b4e:	and    BYTE PTR ds:0xdea54682,bl
  405b54:	repnz cld 
  405b56:	push   edi
  405b57:	je     0x405b8a
  405b59:	xor    eax,0x230f15bb
  405b5e:	cwde   
  405b5f:	test   al,0x32
  405b61:	fisubr DWORD PTR gs:[ebp-0x10]
  405b65:	xchg   edi,eax
  405b66:	pop    ds
  405b67:	xchg   esp,eax
  405b68:	test   al,0x8
  405b6a:	cli    
  405b6b:	lods   eax,DWORD PTR ds:[esi]
  405b6c:	fwait
  405b6d:	add    dl,BYTE PTR [ebx]
  405b6f:	dec    ebp
  405b70:	into   
  405b71:	xor    DWORD PTR [ecx-0x29],esi
  405b74:	fwait
  405b75:	in     al,dx
  405b76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b77:	sbb    eax,0x7c0e7517
  405b7c:	sahf   
  405b7d:	push   ds
  405b7e:	enter  0x858,0x15
  405b82:	add    DWORD PTR [eax+0x53060ff],0x1c
  405b89:	sub    eax,0x98ce1ecb
  405b8e:	inc    DWORD PTR [esi]
  405b90:	icebp  
  405b91:	(bad)  
  405b92:	stos   BYTE PTR es:[edi],al
  405b93:	(bad)  
  405b94:	sub    edx,DWORD PTR [ecx+ebp*2+0x77]
  405b98:	leave  
  405b99:	and    eax,0x7099dbf3
  405b9e:	jnp    0x405b46
  405ba0:	fcomip st,st(6)
  405ba2:	aam    0xbc
  405ba4:	inc    esi
  405ba5:	xchg   ebp,eax
  405ba6:	ins    DWORD PTR es:[edi],dx
  405ba7:	sbb    bl,BYTE PTR [ecx]
  405ba9:	mov    bl,0x7e
  405bab:	inc    ebx
  405bac:	adc    al,0x75
  405bae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405baf:	xchg   edi,eax
  405bb0:	inc    esi
  405bb1:	in     al,0x80
  405bb3:	xor    al,0xcc
  405bb5:	sahf   
  405bb6:	dec    edi
  405bb7:	pop    eax
  405bb8:	or     al,0xbc
  405bba:	push   ds
  405bbb:	lods   al,BYTE PTR ds:[esi]
  405bbc:	mov    bl,0x2a
  405bbe:	dec    esp
  405bbf:	xchg   edx,eax
  405bc0:	jb     0x405bc2
  405bc2:	sbb    edx,DWORD PTR [edx-0x360a5459]
  405bc8:	jne    0x405b82
  405bca:	push   edx
  405bcb:	ror    dh,0x7e
  405bce:	arpl   WORD PTR [edi+edx*2+0x55792006],cx
  405bd5:	xchg   esp,eax
  405bd6:	cdq    
  405bd7:	rcl    edi,0xc3
  405bda:	or     eax,0x981152ac
  405bdf:	popa   
  405be0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405be1:	jmp    0x5398:0x4b270d11
  405be8:	push   edx
  405be9:	das    
  405bea:	lahf   
  405beb:	and    eax,DWORD PTR [edi]
  405bed:	loope  0x405c1e
  405bef:	(bad)
  405bf2:	mov    ebx,0xd2a8ce3d
  405bf7:	mov    eax,0x48d3b53d
  405bfc:	ja     0x405bed
  405bfe:	out    dx,eax
  405bff:	adc    eax,0x7c09804b
  405c04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c05:	aaa    
  405c06:	es ins DWORD PTR es:[edi],dx
  405c08:	or     BYTE PTR [eax-0x38a3b7c9],bl
  405c0e:	js     0x405c29
  405c10:	and    DWORD PTR [edi-0x75d3bedd],ebx
  405c16:	mov    ds:0x89133d4a,al
  405c1b:	daa    
  405c1c:	ins    DWORD PTR es:[edi],dx
  405c1d:	and    DWORD PTR [ecx+ebp*1-0x53],edx
  405c21:	xor    eax,0x2fe5a8f8
  405c26:	mov    edi,0xa09860d1
  405c2b:	test   al,0x6b
  405c2d:	test   al,0x77
  405c2f:	leave  
  405c30:	cmp    BYTE PTR [ebx-0x4e],dl
  405c33:	jmp    0x24073ef2
  405c38:	sbb    eax,0xa95e7b19
  405c3d:	jmp    0x405c58
  405c3f:	and    ah,ch
  405c41:	leave  
  405c42:	aad    0xa
  405c44:	je     0x405cb7
  405c46:	mov    esi,0xe0835926
  405c4b:	icebp  
  405c4c:	jge    0x405c4b
  405c4e:	and    eax,0x46041794
  405c53:	or     dl,bl
  405c55:	(bad)  
  405c57:	xchg   edx,eax
  405c58:	popf   
  405c59:	add    al,0x26
  405c5b:	or     dh,BYTE PTR [edx]
  405c5d:	(bad)  
  405c5e:	loop   0x405c71
  405c60:	test   eax,0x1e1704
  405c65:	pop    ebx
  405c66:	rol    BYTE PTR [ebx-0x6f454632],0x3a
  405c6d:	add    al,0x8c
  405c6f:	pop    ecx
  405c70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c71:	fstp   QWORD PTR [eax+0x20c5f387]
  405c77:	nop
  405c78:	fild   QWORD PTR [ebp+0x3f1e4c32]
  405c7e:	retf   0x1585
  405c81:	sub    bl,BYTE PTR [eax-0x8]
  405c84:	push   cs
  405c85:	pop    ds
  405c86:	pop    edx
  405c87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c88:	xor    esp,ebx
  405c8a:	fisttp DWORD PTR [edx-0x4bdd77e0]
  405c90:	dec    eax
  405c91:	or     ebx,DWORD PTR [eax+eiz*8+0x11b10a8a]
  405c98:	xchg   edx,eax
  405c99:	dec    ebx
  405c9a:	ja     0x405c8b
  405c9c:	jp     0x405ca0
  405c9e:	adc    DWORD PTR [edi-0x7],ebx
  405ca1:	sbb    ebx,esi
  405ca3:	out    0x51,al
  405ca5:	mov    DWORD PTR [edx+0x11],0xad45a6d3
  405cac:	push   ebp
  405cad:	(bad)  
  405cae:	out    dx,eax
  405caf:	or     eax,0xc8d80d2c
  405cb4:	sahf   
  405cb5:	dec    esi
  405cb6:	jne    0x405c66
  405cb8:	pop    eax
  405cb9:	sub    ecx,0xb8c02de0
  405cbf:	js     0x405cd0
  405cc1:	and    ebp,DWORD PTR [eax-0x733e02f1]
  405cc7:	pop    edi
  405cc8:	mov    ds:0x4895e3cd,eax
  405ccd:	push   eax
  405cce:	lods   al,BYTE PTR ds:[esi]
  405ccf:	and    dl,BYTE PTR [ebp+0x25]
  405cd2:	pop    ss
  405cd3:	mov    ebx,0x5cf3836f
  405cd8:	push   edx
  405cd9:	fisttp DWORD PTR [ebp+0x4336e366]
  405cdf:	je     0x405cf4
  405ce1:	jp     0x405cbd
  405ce3:	jge    0x405ce6
  405ce5:	jne    0x405d3a
  405ce7:	call   0x23c5a10f
  405cec:	mov    ds:0x40df5d6f,al
  405cf1:	push   ss
  405cf2:	mov    ah,0x92
  405cf4:	xlat   BYTE PTR ds:[ebx]
  405cf5:	jge    0x405d28
  405cf7:	scas   eax,DWORD PTR es:[edi]
  405cf8:	dec    esi
  405cf9:	sub    al,0x4e
  405cfb:	repz fcomp QWORD PTR [eax]
  405cfe:	sbb    edx,DWORD PTR [ecx-0x18e13cc8]
  405d04:	xor    ecx,ebx
  405d06:	push   ds
  405d07:	nop
  405d08:	mov    dh,0x7b
  405d0a:	ins    DWORD PTR es:[edi],dx
  405d0b:	jmp    0xf41cba5e
  405d10:	lods   eax,DWORD PTR ds:[esi]
  405d11:	push   cs
  405d12:	gs dec esp
  405d14:	das    
  405d15:	scas   eax,DWORD PTR es:[edi]
  405d16:	mov    bl,0x5c
  405d18:	mov    cl,0x8e
  405d1a:	push   esi
  405d1b:	aad    0xba
  405d1d:	ret    0x4029
  405d20:	mov    esp,0xef79e9c5
  405d25:	inc    ebp
  405d26:	aad    0x8b
  405d28:	icebp  
  405d29:	or     eax,0x755a8559
  405d2e:	mov    WORD PTR ds:0x9a524bb3,ss
  405d34:	push   esp
  405d35:	arpl   WORD PTR [esi-0x7],sp
  405d38:	clc    
  405d39:	mov    eax,0x8142af6b
  405d3e:	jge    0x405daa
  405d40:	sti    
  405d41:	dec    esp
  405d42:	add    DWORD PTR [eax+0x78759818],eax
  405d48:	inc    ebp
  405d49:	and    esp,ebx
  405d4b:	icebp  
  405d4c:	sub    BYTE PTR [esi+0x75],0x59
  405d50:	gs adc eax,0xaeeb9a49
  405d56:	test   BYTE PTR [bx+di+0x385e],ah
  405d5b:	push   ss
  405d5c:	mov    edx,ebx
  405d5e:	js     0x405d34
  405d60:	mov    al,ds:0xdcab25cd
  405d65:	cmc    
  405d66:	sti    
  405d67:	fs (bad) 
  405d69:	stos   DWORD PTR es:[edi],eax
  405d6a:	push   edx
  405d6b:	(bad)  
  405d6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d6d:	lahf   
  405d6e:	dec    edx
  405d6f:	xor    BYTE PTR [eax],dl
  405d71:	std    
  405d72:	inc    eax
  405d73:	fistp  DWORD PTR [esi+0x7444bdee]
  405d79:	pop    ds
  405d7a:	in     al,0xf8
  405d7c:	or     BYTE PTR [ecx-0x28],dl
  405d7f:	in     eax,0xe8
  405d81:	or     dl,BYTE PTR [esi+0x152d084c]
  405d87:	in     al,0xf3
  405d89:	inc    ebx
  405d8a:	(bad)  
  405d8b:	sub    eax,0x2b457ca3
  405d90:	(bad)  
  405d92:	adc    esp,DWORD PTR [eax-0x1f124c58]
  405d98:	xchg   edx,eax
  405d99:	jg     0x405def
  405d9b:	push   eax
  405d9c:	test   DWORD PTR [ecx],eax
  405d9e:	jecxz  0x405de7
  405da0:	xchg   DWORD PTR [edx],ebp
  405da2:	jle    0x405d2c
  405da4:	xlat   BYTE PTR ds:[ebx]
  405da5:	in     al,dx
  405da6:	int3   
  405da7:	and    BYTE PTR [ebp-0x6961d6dd],0x4e
  405dae:	jne    0x405d8d
  405db0:	xor    DWORD PTR [edi-0x282522d0],edi
  405db6:	and    DWORD PTR [ebx+edx*8],edi
  405db9:	ror    BYTE PTR [ebp+0x718e5275],1
  405dbf:	out    0x52,al
  405dc1:	mov    esp,0x765ff131
  405dc6:	ret    0x2882
  405dc9:	sti    
  405dca:	pop    esp
  405dcb:	fidivr WORD PTR [esi-0x3e]
  405dce:	loope  0x405d83
  405dd0:	cmc    
  405dd1:	pusha  
  405dd2:	fld    QWORD PTR [eax-0xb4e6628]
  405dd8:	adc    eax,0xae329472
  405ddd:	hlt    
  405dde:	adc    DWORD PTR [esi],0x62e4e791
  405de4:	xchg   edi,eax
  405de5:	test   DWORD PTR [ecx+ebp*1-0x5c02d549],0xf00c5959
  405df0:	fcomp  QWORD PTR [ebx+0x14]
  405df3:	sbb    al,0xb8
  405df5:	jp     0x405e6c
  405df7:	jge    0x405e23
  405df9:	inc    esi
  405dfa:	inc    eax
  405dfb:	xchg   ebx,eax
  405dfc:	xor    ah,BYTE PTR [eax-0x32]
  405dff:	xchg   ebx,eax
  405e00:	aas    
  405e01:	inc    ebp
  405e02:	jne    0x405e59
  405e04:	mov    cl,0x43
  405e06:	xchg   BYTE PTR [esi+0x20],al
  405e09:	mov    ah,0x7
  405e0b:	inc    edx
  405e0c:	or     al,ah
  405e0e:	xor    DWORD PTR [ebp-0x63137757],eax
  405e14:	xchg   ebp,eax
  405e15:	and    eax,0x7fb265df
  405e1a:	(bad)  
  405e1b:	mov    ah,0xef
  405e1d:	mov    eax,ds:0xa11333f3
  405e22:	mov    ecx,0x555c2938
  405e27:	clc    
  405e28:	mov    ds:0xa9468d63,eax
  405e2d:	mov    bh,0x78
  405e2f:	add    ebx,DWORD PTR [ebp+0x7d]
  405e32:	and    esp,eax
  405e34:	loop   0x405e3a
  405e36:	dec    esi
  405e37:	fstp   DWORD PTR [ebp-0x70]
  405e3a:	mov    ?,WORD PTR ds:0x31a08c03
  405e40:	fistp  QWORD PTR [eax+edi*4-0x65]
  405e44:	or     bh,BYTE PTR [ebx+eiz*2+0x56]
  405e48:	cmp    BYTE PTR [ebp-0x175519c],0x71
  405e4f:	cmp    eax,0x8e7800ad
  405e54:	les    ecx,FWORD PTR [ecx+0x94c916b]
  405e5a:	fcomi  st,st(1)
  405e5c:	(bad)  
  405e5d:	push   cs
  405e5e:	and    cl,BYTE PTR [eax-0x75]
  405e61:	dec    esi
  405e62:	add    al,0x8b
  405e64:	enter  0xe1c1,0x1e
  405e68:	xor    ecx,0x80000000
  405e6e:	mov    DWORD PTR [ebp-0x64],ecx
  405e71:	mov    ecx,DWORD PTR [esi]
  405e73:	mov    edx,DWORD PTR [esi+0x4]
  405e76:	jmp    0x406217
  405e7b:	pusha  
  405e7c:	adc    bh,BYTE PTR ds:0x60b2b35d
  405e82:	adc    al,0xa6
  405e84:	pop    es
  405e85:	fst    QWORD PTR ds:[eax+0x27]
  405e89:	fnstsw WORD PTR ds:[esi-0x424141d3]
  405e90:	les    edi,FWORD PTR [esi-0x35b23242]
  405e96:	mov    ah,BYTE PTR [ebx-0x28e009f0]
  405e9c:	iret   
  405e9d:	out    dx,eax
  405e9e:	and    al,0x7d
  405ea0:	lds    ebp,FWORD PTR [esi+0x6ba59711]
  405ea6:	mov    WORD PTR [esi+0x32df22ab],ss
  405eac:	(bad)
  405eb0:	ficom  WORD PTR [bx+di-0x7]
  405eb4:	jmp    0x874bbea8
  405eb9:	es mov esi,0x758cb58
  405ebf:	lods   eax,DWORD PTR ds:[esi]
  405ec0:	sub    edx,esp
  405ec2:	and    al,0x9e
  405ec4:	outs   dx,BYTE PTR ds:[esi]
  405ec5:	adc    eax,DWORD PTR [edx]
  405ec7:	inc    edx
  405ec8:	sahf   
  405ec9:	or     eax,0xd9ac431c
  405ece:	xor    DWORD PTR [ebp-0xe],ebp
  405ed1:	out    0x30,al
  405ed3:	jmp    0x2b:0x2a097316
  405eda:	or     bl,bl
  405edc:	push   esp
  405edd:	mov    WORD PTR [ebx+0x5f01e57c],ds
  405ee3:	nop
  405ee4:	cmc    
  405ee5:	add    esi,0x30e7ec4a
  405eeb:	push   eax
  405eec:	cdq    
  405eed:	in     al,dx
  405eee:	fld    st(2)
  405ef0:	mov    ah,BYTE PTR [edi]
  405ef2:	add    dh,bl
  405ef4:	imul   ecx,esi,0x8a59b4ce
  405efa:	repnz int 0xe2
  405efd:	cmp    eax,0xecb78a3c
  405f02:	sbb    BYTE PTR [edx-0x31bb7eab],0x38
  405f09:	or     al,0x17
  405f0b:	pop    edx
  405f0c:	ret    
  405f0d:	xor    al,0x91
  405f0f:	scas   eax,DWORD PTR es:[edi]
  405f10:	xlat   BYTE PTR ds:[ebx]
  405f11:	lahf   
  405f12:	test   eax,0xf4f8a065
  405f17:	test   BYTE PTR [ebx-0x349e0925],bl
  405f1d:	mov    ds:0xca08fe41,al
  405f22:	add    al,0x2f
  405f24:	dec    esi
  405f25:	cs lahf 
  405f27:	dec    ebx
  405f28:	mov    bh,0xea
  405f2a:	and    al,0xc8
  405f2c:	and    al,0x49
  405f2e:	mov    esi,esi
  405f30:	dec    eax
  405f31:	push   edi
  405f32:	loopne 0x405f65
  405f34:	push   ss
  405f35:	push   es
  405f36:	test   DWORD PTR [edx+0xa],ecx
  405f39:	xchg   esi,eax
  405f3a:	fisub  WORD PTR [ebx]
  405f3c:	mov    eax,ds:0xa6e3272f
  405f41:	daa    
  405f42:	mov    BYTE PTR [eax+edi*1-0x5a],dl
  405f46:	or     eax,edi
  405f48:	adc    al,0x2d
  405f4a:	sahf   
  405f4b:	test   al,0x89
  405f4d:	and    al,0x4b
  405f4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f50:	sti    
  405f51:	or     dh,bh
  405f53:	out    dx,eax
  405f54:	sbb    al,BYTE PTR [ebx-0x1d9e090a]
  405f5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f5b:	pusha  
  405f5c:	into   
  405f5d:	mov    bl,0x14
  405f5f:	sub    DWORD PTR [esp+ebx*2],eax
  405f62:	in     eax,0x22
  405f64:	aas    
  405f65:	arpl   dx,bx
  405f67:	mov    esp,0xba375026
  405f6c:	sbb    BYTE PTR es:[ebp-0x49df26b],bl
  405f73:	lods   al,BYTE PTR ds:[esi]
  405f74:	je     0x405f4f
  405f76:	push   edx
  405f77:	xor    bh,BYTE PTR [edi+edi*1-0x5b]
  405f7b:	nop
  405f7c:	mov    bl,0x43
  405f7e:	sbb    esp,DWORD PTR [ebx]
  405f80:	mov    bh,0x32
  405f82:	mov    DWORD PTR [edx-0x1b79dc0],edi
  405f88:	ficomp DWORD PTR [esi]
  405f8a:	popa   
  405f8b:	ret    0x8419
  405f8e:	or     edx,edx
  405f90:	das    
  405f91:	sub    edi,ebx
  405f93:	test   BYTE PTR [edi],al
  405f95:	cdq    
  405f96:	sahf   
  405f97:	adc    eax,0xa7687012
  405f9c:	push   0xbcac4bbd
  405fa1:	out    dx,eax
  405fa2:	xchg   ebp,eax
  405fa3:	or     DWORD PTR [ebx-0x52],ebx
  405fa6:	aaa    
  405fa7:	push   eax
  405fa8:	cmp    dh,BYTE PTR es:[ecx]
  405fab:	stos   BYTE PTR es:[edi],al
  405fac:	aad    0xa1
  405fae:	loopne 0x40600f
  405fb0:	xor    DWORD PTR [edx+ecx*2+0x2690a7a3],eax
  405fb7:	fcmovnbe st,st(4)
  405fb9:	aad    0xd5
  405fbb:	or     BYTE PTR [eax],dh
  405fbd:	aam    0x3c
  405fbf:	xchg   edx,eax
  405fc0:	push   edx
  405fc1:	pop    ss
  405fc2:	cmp    DWORD PTR ds:0xf45890fb,ebp
  405fc8:	nop
  405fc9:	dec    ebp
  405fca:	shr    DWORD PTR [ecx-0x3d],cl
  405fcd:	mov    ecx,0xef90a8f8
  405fd2:	add    DWORD PTR [edx-0x31b0c1b9],0x79
  405fd9:	mov    edx,0xdd499334
  405fde:	in     eax,0x7c
  405fe0:	dec    eax
  405fe1:	sub    al,0x41
  405fe3:	mov    dh,0x13
  405fe5:	cmc    
  405fe6:	icebp  
  405fe7:	cmp    eax,0x372250ba
  405fec:	mov    cl,ch
  405fee:	mov    ds,WORD PTR [ecx+0x11724dc9]
  405ff4:	cld    
  405ff5:	rcl    cl,cl
  405ff7:	or     eax,0xa7dd5220
  405ffc:	mov    ebp,DWORD PTR [esp+eax*8+0x7f]
  406000:	jmp    0x40601b
  406002:	sub    eax,0x799b120d
  406007:	enter  0xed3e,0xfd
  40600b:	sub    edx,DWORD PTR [edx+0x1d929ac]
  406011:	(bad)  
  406012:	sti    
  406013:	add    DWORD PTR [ebp+0x22168355],ecx
  406019:	dec    esi
  40601a:	hlt    
  40601b:	es stc 
  40601d:	jmp    0x405ff4
  40601f:	mov    al,ds:0x9a07efbf
  406024:	sub    BYTE PTR [ebx],ah
  406026:	imul   eax,ecx,0x59
  406029:	sti    
  40602a:	enter  0xfef4,0x77
  40602e:	call   0xfee6dbcc
  406033:	ds ret 0xbbf5
  406037:	(bad)  
  406038:	sahf   
  406039:	shr    DWORD PTR ds:0xba35e7c,cl
  40603f:	xchg   ebp,eax
  406040:	je     0x406064
  406042:	xor    eax,0xa76b99bd
  406047:	push   ebp
  406048:	mov    eax,ds:0xba8e1dda
  40604d:	in     al,dx
  40604e:	int3   
  40604f:	jae    0x406010
  406051:	test   eax,0x52e3cf73
  406056:	cmp    edi,DWORD PTR [edi+0x41]
  406059:	mov    ds:0xeb7eff84,al
  40605e:	pop    ds
  40605f:	jb     0x406014
  406061:	jp     0x406046
  406063:	add    dl,BYTE PTR [edx-0x7d]
  406066:	imul   edi,DWORD PTR [edx+0x65],0x7
  40606a:	adc    eax,0x63c95606
  40606f:	sbb    BYTE PTR [ecx+0x53e13787],dl
  406075:	adc    ah,BYTE PTR [esi]
  406077:	(bad)  
  406078:	lock inc esi
  40607a:	jg     0x406037
  40607c:	cmc    
  40607d:	and    eax,edx
  40607f:	inc    esp
  406080:	inc    edi
  406081:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406082:	xchg   ebx,eax
  406083:	out    0xc,al
  406085:	dec    esi
  406086:	xchg   edx,eax
  406088:	loope  0x40602e
  40608a:	leave  
  40608b:	mov    DWORD PTR [esp+eax*1-0x37],esp
  40608f:	push   0x2224d299
  406094:	in     al,dx
  406095:	leave  
  406096:	cmp    ah,ah
  406098:	xor    eax,0x215e8dcc
  40609d:	stc    
  40609e:	dec    edx
  40609f:	fwait
  4060a0:	repnz sub al,0x70
  4060a3:	jns    0x406115
  4060a5:	ret    
  4060a6:	loope  0x40608e
  4060a8:	loope  0x406114
  4060aa:	adc    al,0xb7
  4060ac:	inc    esi
  4060ad:	lahf   
  4060ae:	stos   BYTE PTR es:[edi],al
  4060af:	mov    eax,0xbac940b2
  4060b4:	pop    ecx
  4060b5:	dec    eax
  4060b6:	push   ds
  4060b7:	dec    eax
  4060b8:	or     al,0xed
  4060ba:	fistp  QWORD PTR [esi]
  4060bc:	jo     0x40611c
  4060be:	add    BYTE PTR [edx+edi*1+0x5a],bh
  4060c2:	add    BYTE PTR [edx],0xfc
  4060c5:	inc    esp
  4060c6:	cmc    
  4060c7:	push   es
  4060c8:	push   esi
  4060c9:	int3   
  4060ca:	test   eax,0x86dd8268
  4060cf:	mov    cl,0x6c
  4060d1:	sub    al,0xf8
  4060d3:	mov    esp,0x111c7a64
  4060d8:	pushf  
  4060d9:	push   ecx
  4060da:	dec    ecx
  4060db:	xchg   edi,eax
  4060dc:	inc    esp
  4060dd:	dec    esp
  4060de:	xor    ecx,DWORD PTR [ebx+0x142a6acb]
  4060e4:	mov    ebp,DWORD PTR [ebx+0x4c]
  4060e7:	fadd   st,st(7)
  4060e9:	inc    edi
  4060ea:	inc    esp
  4060eb:	adc    DWORD PTR [ecx-0x2e241f0e],edi
  4060f1:	jg     0x406148
  4060f3:	or     al,0x1
  4060f5:	sar    ebx,0xf2
  4060f8:	jns    0x40608b
  4060fa:	gs push 0xa4b7de56
  406100:	jne    0x4060d3
  406102:	cld    
  406103:	jae    0x40611c
  406105:	sbb    ebx,edi
  406107:	mov    ch,0x3d
  406109:	outs   dx,BYTE PTR ds:[esi]
  40610a:	adc    BYTE PTR [edx-0x6e],0x71
  40610e:	ud2    
  406110:	xor    BYTE PTR [ecx-0x5fd8df6f],cl
  406116:	push   edi
  406117:	test   BYTE PTR [ebx+0x7e],dh
  40611a:	arpl   WORD PTR [ebp+eiz*2-0x44],di
  40611e:	sub    DWORD PTR [eax-0x10],ebx
  406121:	loop   0x406185
  406123:	xlat   BYTE PTR ds:[ebx]
  406124:	ret    0x15dc
  406127:	adc    eax,0x617ab52c
  40612c:	push   ecx
  40612d:	js     0x40612e
  40612f:	ret    0xbd8c
  406132:	stos   BYTE PTR es:[edi],al
  406133:	out    0x99,al
  406135:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406136:	pushf  
  406137:	(bad)  
  406138:	or     eax,DWORD PTR [ebx]
  40613a:	in     eax,dx
  40613b:	nop
  40613c:	or     BYTE PTR [esi+0x377270dc],0x8d
  406143:	sbb    bl,BYTE PTR [ebx]
  406145:	shl    DWORD PTR [ebx],0xff
  406148:	(bad)  
  406149:	push   ds
  40614a:	jl     0x4060e8
  40614c:	mov    edi,0x297a8c62
  406151:	fcmovnb st,st(3)
  406153:	jnp    0x4061b5
  406155:	addr16 mov ch,0xef
  406158:	mov    dl,0xe3
  40615a:	arpl   WORD PTR [eax+0x23a4681e],si
  406160:	scas   eax,DWORD PTR es:[edi]
  406161:	push   edi
  406162:	(bad)  
  406163:	ficomp DWORD PTR [ecx+edx*4+0x5820332a]
  40616a:	jno    0x40610e
  40616c:	lods   eax,DWORD PTR ds:[esi]
  40616d:	adc    ch,BYTE PTR [esi-0x11049a7b]
  406173:	mov    bh,0xbe
  406175:	add    DWORD PTR [eax+ebp*1-0x71],edx
  406179:	pusha  
  40617a:	jge    0x406169
  40617c:	add    eax,0x26d69cd1
  406181:	in     eax,dx
  406182:	push   0x2a
  406184:	inc    esp
  406185:	or     ch,ch
  406187:	pop    eax
  406188:	pop    ecx
  406189:	ds pop esi
  40618b:	jno    0x406151
  40618d:	sbb    DWORD PTR [eax+0x6c028614],0x3498322e
  406197:	retf   
  406198:	aad    0x2c
  40619a:	or     esp,DWORD PTR [eax]
  40619c:	jecxz  0x406154
  40619e:	mov    ebp,0x375a5332
  4061a3:	aaa    
  4061a4:	nop
  4061a5:	addr16 cdq 
  4061a7:	jmp    0x46fab781
  4061ac:	jge    0x406131
  4061ae:	or     eax,0x8c9508a5
  4061b3:	push   es
  4061b4:	test   BYTE PTR [esi+0x3f],ah
  4061b7:	cmp    edi,DWORD PTR [ecx+0x34]
  4061ba:	fisub  WORD PTR [edi-0x3]
  4061bd:	(bad)  
  4061be:	xchg   esp,eax
  4061bf:	jmp    0xe18e:0xd94c77b6
  4061c6:	xchg   ebp,eax
  4061c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4061c8:	jno    0x406174
  4061ca:	mov    al,ds:0xd3101853
  4061cf:	cdq    
  4061d0:	and    edx,DWORD PTR [eax-0x1c]
  4061d3:	mov    al,ds:0x3eb579b0
  4061d8:	mov    ah,0x84
  4061da:	push   esi
  4061db:	cdq    
  4061dc:	std    
  4061dd:	sbb    ebp,DWORD PTR [esi-0x3c]
  4061e0:	sub    DWORD PTR gs:[ecx],edi
  4061e3:	xchg   DWORD PTR [edx],eax
  4061e5:	and    BYTE PTR [edx+eax*1],al
  4061e8:	loopne 0x40616d
  4061ea:	fist   WORD PTR [eax+0x210e2685]
  4061f0:	test   BYTE PTR [edx],dh
  4061f2:	sbb    ah,dl
  4061f4:	std    
  4061f5:	loope  0x406261
  4061f7:	push   edi
  4061f8:	push   cs
  4061f9:	pop    ebp
  4061fa:	dec    edx
  4061fb:	test   cl,bh
  4061fd:	test   BYTE PTR [eax+0x3a],dh
  406200:	popf   
  406201:	dec    ebx
  406202:	das    
  406203:	cdq    
  406204:	push   0x5b
  406206:	(bad)  
  406207:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406208:	mov    cl,0x67
  40620a:	in     eax,dx
  40620b:	jnp    0x406213
  40620d:	or     BYTE PTR [eax],cl
  40620f:	cmp    dh,cl
  406211:	add    ebp,DWORD PTR ds:0xd9e0b76e
  406217:	xor    edx,0x9c2b8ae8
  40621d:	xor    ecx,0xcb79b577
  406223:	shrd   ecx,edx,0x2
  406227:	shr    edx,0x2
  40622a:	or     edx,DWORD PTR [ebp-0x64]
  40622d:	xor    eax,eax
  40622f:	or     ecx,eax
  406231:	mov    eax,DWORD PTR [ebx]
  406233:	mov    DWORD PTR [ebp-0x2c],edx
  406236:	mov    edx,DWORD PTR [ebx+0x4]
  406239:	mov    edx,eax
  40623b:	xor    eax,eax
  40623d:	shl    edx,0x1e
  406240:	xor    edx,0x80000000
  406246:	mov    DWORD PTR [ebp-0x70],eax
  406249:	mov    eax,DWORD PTR [ebx]
  40624b:	mov    DWORD PTR [ebp-0x6c],edx
  40624e:	mov    edx,DWORD PTR [ebx+0x4]
  406251:	xor    eax,0xcb79b577
  406256:	xor    edx,0x9c2b8ae8
  40625c:	shrd   eax,edx,0x2
  406260:	or     eax,DWORD PTR [ebp-0x70]
  406263:	shr    edx,0x2
  406266:	mov    DWORD PTR [ebp-0x38],eax
  406269:	mov    eax,edx
  40626b:	or     eax,DWORD PTR [ebp-0x6c]
  40626e:	mov    DWORD PTR [ebp-0x5c],edx
  406271:	cmp    ecx,DWORD PTR [ebp-0x38]
  406274:	jne    0x405a82
  40627a:	cmp    DWORD PTR [ebp-0x2c],eax
  40627d:	je     0x408bb3
  406283:	jmp    0x405a82
  406288:	mov    eax,DWORD PTR [esi]
  40628a:	mov    ecx,DWORD PTR [esi+0x4]
  40628d:	mov    ecx,eax
  40628f:	shl    ecx,0x1e
  406292:	xor    ecx,0x80000000
  406298:	mov    DWORD PTR [ebp+0x14],ecx
  40629b:	mov    ecx,DWORD PTR [esi]
  40629d:	mov    edx,DWORD PTR [esi+0x4]
  4062a0:	xor    ecx,0xcb79b577
  4062a6:	xor    edx,0x9c2b8ae8
  4062ac:	shrd   ecx,edx,0x2
  4062b0:	xor    eax,eax
  4062b2:	or     ecx,eax
  4062b4:	mov    eax,DWORD PTR [ebx]
  4062b6:	mov    DWORD PTR [ebp-0x68],ecx
  4062b9:	mov    ecx,DWORD PTR [ebx+0x4]
  4062bc:	mov    ecx,eax
  4062be:	xor    eax,eax
  4062c0:	shr    edx,0x2
  4062c3:	or     edx,DWORD PTR [ebp+0x14]
  4062c6:	mov    DWORD PTR [ebp+0x10],eax
  4062c9:	mov    eax,DWORD PTR [ebx]
  4062cb:	shl    ecx,0x1e
  4062ce:	xor    ecx,0x80000000
  4062d4:	mov    DWORD PTR [ebp-0x64],edx
  4062d7:	jmp    0x406678
  4062dc:	aas    
  4062dd:	jne    0x40629e
  4062df:	arpl   ax,di
  4062e1:	jl     0x406347
  4062e3:	jns    0x40632d
  4062e5:	das    
  4062e6:	inc    esi
  4062e7:	xchg   edx,eax
  4062e8:	dec    eax
  4062e9:	shl    DWORD PTR [esi+ebx*4],0xbd
  4062ed:	xor    edi,DWORD PTR [esi-0x413b4242]
  4062f3:	mov    esi,0x8b4ee530
  4062f8:	outs   dx,BYTE PTR cs:[esi]
  4062fa:	pop    ebp
  4062fb:	icebp  
  4062fc:	rcr    BYTE PTR ds:0xbc740184,cl
  406302:	xor    ebx,esp
  406304:	js     0x406294
  406306:	inc    ecx
  406307:	inc    edx
  406308:	out    dx,eax
  406309:	je     0x4062fa
  40630b:	pop    es
  40630c:	lock lea ebp,[eax+esi*1-0x35267a1d]
  406314:	mov    ebp,0xc19537a4
  406319:	sbb    cl,BYTE PTR [ebx+0x61]
  40631c:	dec    ebx
  40631d:	int    0xa8
  40631f:	mov    eax,ds:0xc81a7fcd
  406324:	mov    esi,0x416fabbd
  406329:	scas   eax,DWORD PTR es:[edi]
  40632a:	fisub  DWORD PTR [esi+0x2b4be9a0]
  406330:	sar    edi,0x8e
  406333:	aam    0x98
  406335:	(bad)  
  406336:	mov    dh,0x96
  406338:	jl     0x4062cf
  40633a:	outs   dx,BYTE PTR ds:[esi]
  40633b:	mov    ah,0x35
  40633d:	imul   ebx,DWORD PTR [edi-0x247f5dc9],0x7f563d7c
  406347:	pop    esp
  406348:	ds pop ebx
  40634a:	stos   DWORD PTR es:[edi],eax
  40634b:	fucom  st(4)
  40634d:	or     al,0x2
  40634f:	clc    
  406350:	(bad)  
  406351:	mov    ebx,0x256897eb
  406357:	ds cli 
  406359:	out    dx,al
  40635a:	sub    al,0x6b
  40635c:	rcl    DWORD PTR [ebx-0x7dd20ec4],1
  406362:	ss push 0x300e0ff3
  406368:	test   DWORD PTR [edx],0x6dc9bbd3
  40636e:	repnz adc DWORD PTR [ebp-0x5],ebx
  406372:	fcmovb st,st(0)
  406374:	out    0x2d,al
  406376:	and    ebx,esi
  406378:	mov    bl,0xe2
  40637a:	iret   
  40637b:	mov    dl,0x30
  40637d:	rcr    esp,0x50
  406380:	mov    al,0xb
  406382:	pushf  
  406383:	(bad)  
  406384:	pop    ds
  406385:	push   0x9207e07a
  40638a:	ret    0x4885
  40638d:	sub    al,0x4d
  40638f:	stos   DWORD PTR es:[edi],eax
  406390:	dec    edi
  406391:	sub    DWORD PTR [ecx-0x2f],ebp
  406394:	arpl   WORD PTR [esi],bx
  406396:	xor    ebx,eax
  406398:	jnp    0x406414
  40639a:	inc    ebp
  40639b:	mov    bh,0x4c
  40639d:	mov    al,0x74
  40639f:	in     eax,dx
  4063a0:	mov    ecx,0xcc52a0e
  4063a5:	dec    ebx
  4063a6:	jo     0x406426
  4063a8:	add    eax,DWORD PTR [ebx]
  4063aa:	xchg   ebx,eax
  4063ab:	push   ebp
  4063ac:	retf   
  4063ad:	cmp    eax,0xb649f692
  4063b2:	pusha  
  4063b3:	dec    esp
  4063b4:	sub    bl,BYTE PTR [eax+0x4a51eb4b]
  4063ba:	jo     0x406412
  4063bc:	int    0xf
  4063be:	mov    dh,0xe8
  4063c0:	mov    ds:0xd4c51830,eax
  4063c5:	cmp    eax,0xc4a53695
  4063ca:	sbb    DWORD PTR [ecx-0x4a],esi
  4063cd:	add    DWORD PTR [ecx-0x32],edx
  4063d0:	out    dx,eax
  4063d1:	mov    bh,0x3b
  4063d3:	into   
  4063d4:	mov    eax,0x1a421e59
  4063d9:	mov    ebp,0xe708b1ce
  4063de:	test   DWORD PTR [edi+0x5b],esp
  4063e1:	xchg   ch,dh
  4063e3:	and    eax,0x4a8faec9
  4063e8:	js     0x40638e
  4063ea:	add    DWORD PTR [ebp+0x5154a354],ebx
  4063f0:	in     eax,0x15
  4063f2:	mov    cl,0x94
  4063f4:	and    ah,BYTE PTR [ebx]
  4063f6:	repnz sbb eax,0xc5703b47
  4063fc:	test   BYTE PTR [edi-0x1540e034],0x67
  406403:	mov    dl,0x44
  406405:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406406:	xor    al,0xa9
  406408:	int    0x63
  40640a:	add    ah,bh
  40640c:	mov    ecx,0x9d19cc7b
  406411:	stos   BYTE PTR es:[edi],al
  406412:	ins    BYTE PTR es:[edi],dx
  406413:	scas   eax,DWORD PTR es:[edi]
  406414:	pop    ecx
  406415:	shl    BYTE PTR [esi],1
  406417:	jl     0x40643d
  406419:	bnd je 0x4063c2
  40641c:	mov    ah,0xed
  40641e:	out    dx,al
  40641f:	jp     0x4063a3
  406421:	inc    eax
  406422:	cwde   
  406423:	in     al,dx
  406424:	out    dx,al
  406425:	sahf   
  406426:	es push ds
  406428:	or     al,0xdf
  40642a:	repnz (bad) 
  40642c:	nop
  40642d:	repnz sub esi,DWORD PTR [edx+0x22e3a0b0]
  406434:	pop    ds
  406435:	push   edx
  406436:	outs   dx,BYTE PTR ds:[esi]
  406437:	rcl    DWORD PTR es:0xcca12e8e,1
  40643e:	xchg   ecx,eax
  40643f:	xor    eax,0x291aad2e
  406444:	hlt    
  406445:	(bad)  [edi]
  406447:	jo     0x40645e
  406449:	nop
  40644a:	aam    0x18
  40644c:	sbb    bl,al
  40644e:	and    eax,DWORD PTR [eax+0x2]
  406451:	push   bx
  406453:	xchg   BYTE PTR [edi],dh
  406455:	and    edx,esp
  406457:	xlat   BYTE PTR ds:[ebx]
  406458:	push   esi
  406459:	add    DWORD PTR ds:0x55412b63,edx
  40645f:	outs   dx,BYTE PTR ds:[esi]
  406460:	in     eax,0xf4
  406462:	jae    0x406445
  406464:	inc    ecx
  406465:	or     BYTE PTR [ebx],al
  406467:	mov    ds:0x68576e6e,eax
  40646c:	jae    0x4063f8
  40646e:	std    
  40646f:	in     al,dx
  406470:	xor    eax,0x5516f815
  406475:	sub    ch,BYTE PTR es:[edx+edi*1+0x5f]
  40647a:	nop
  40647b:	mov    ds:0x144ef124,eax
  406480:	push   ecx
  406481:	jo     0x406457
  406483:	add    dl,BYTE PTR [edi-0x6d]
  406486:	add    al,0x3f
  406488:	das    
  406489:	add    dl,BYTE PTR [ecx+0x40cc53fb]
  40648f:	ja     0x40649d
  406491:	push   0xd517856
  406496:	mov    ah,0x15
  406498:	xchg   edi,eax
  406499:	push   edx
  40649a:	and    eax,0x9c271484
  40649f:	or     DWORD PTR [ebx],0xe2968568
  4064a5:	in     eax,0xc9
  4064a7:	ret    0xa83f
  4064aa:	jmp    0x4064e1
  4064ac:	inc    ebp
  4064ad:	test   bh,ah
  4064af:	std    
  4064b0:	jge    0x40643c
  4064b2:	test   BYTE PTR [edx+0x5b],dl
  4064b5:	gs nop
  4064b7:	jno    0x406477
  4064b9:	mov    ebp,0x6106a47a
  4064be:	test   al,0xb4
  4064c0:	xchg   ecx,eax
  4064c1:	fstp   QWORD PTR ds:0x4def0230
  4064c7:	rol    esp,cl
  4064c9:	retf   0xfa33
  4064cc:	mov    ah,0x74
  4064ce:	sub    DWORD PTR [esi+0x3ece49c2],ebx
  4064d4:	mov    dl,0xff
  4064d6:	sbb    al,0x98
  4064d8:	mov    al,BYTE PTR [ecx*4-0x5cc6274d]
  4064df:	or     edi,DWORD PTR [ecx]
  4064e1:	pop    esp
  4064e2:	mov    ch,0xc3
  4064e4:	int    0x81
  4064e6:	add    edi,edx
  4064e8:	add    cl,ch
  4064ea:	dec    ebp
  4064eb:	dec    edx
  4064ec:	or     BYTE PTR [eax-0x35efe59e],ah
  4064f2:	pushf  
  4064f3:	dec    eax
  4064f4:	out    dx,al
  4064f5:	pop    esp
  4064f6:	mov    eax,0x94d1ce3d
  4064fb:	push   es
  4064fc:	mov    ds:0x600ced6a,eax
  406501:	mov    ds:0x83dbd5a7,al
  406506:	mov    edx,0x2639e6c7
  40650b:	das    
  40650c:	jb     0x4064e1
  40650e:	cdq    
  40650f:	and    DWORD PTR [edx-0x4b],ecx
  406512:	jns    0x40650b
  406514:	sbb    DWORD PTR [ecx+eiz*1+0x6b],edx
  406518:	push   ecx
  406519:	xor    DWORD PTR cs:[ebx-0x155deefe],ecx
  406520:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406521:	cs (bad) 
  406523:	iret   
  406524:	mov    esi,0x5e9fc471
  406529:	jb     0x40659e
  40652b:	lods   eax,DWORD PTR ds:[esi]
  40652c:	pop    edx
  40652d:	js     0x406567
  40652f:	xchg   edx,eax
  406530:	mov    cl,0xfc
  406532:	mov    esp,?
  406534:	das    
  406535:	sub    BYTE PTR [edi],dl
  406537:	jns    0x406514
  406539:	and    al,0x4d
  40653b:	pop    esi
  40653c:	div    BYTE PTR [eax+0x55923d42]
  406542:	hlt    
  406543:	clc    
  406544:	mov    edx,0x6b3e28ff
  406549:	and    ecx,DWORD PTR [esi-0x6bcc5326]
  40654f:	cmp    eax,0x892e0634
  406554:	jp     0x4065aa
  406556:	sbb    ecx,DWORD PTR [ebx]
  406558:	adc    BYTE PTR [esi+0x2d4c48f7],ch
  40655e:	shr    BYTE PTR [ecx],cl
  406560:	mov    esp,0x9a662be8
  406565:	sub    eax,0xb50c5cdb
  40656a:	retf   0xc43d
  40656d:	inc    ebp
  40656e:	pop    edi
  40656f:	outs   dx,BYTE PTR ds:[esi]
  406570:	mov    dh,0x7c
  406572:	mov    dh,0x95
  406574:	push   ebp
  406575:	call   0xfec2:0xb8b48cd0
  40657c:	xor    DWORD PTR [eax-0x32110aef],0x48
  406583:	and    BYTE PTR [ebx+0x5c],ah
  406586:	jp     0x406607
  406588:	popa   
  406589:	adc    eax,0xe07e2c3e
  40658e:	lods   al,BYTE PTR ds:[esi]
  40658f:	es pop ss
  406591:	and    BYTE PTR ds:0x6ef4bda1,ch
  406597:	jge    0x406569
  406599:	popa   
  40659a:	ficom  DWORD PTR [edx]
  40659c:	mov    edx,DWORD PTR [eax+0x2b25d27f]
  4065a2:	push   ebp
  4065a3:	add    esp,DWORD PTR [ecx-0x25014564]
  4065a9:	sub    DWORD PTR [ebx+0x16],ebx
  4065ac:	lahf   
  4065ad:	add    DWORD PTR [edi-0x1a],eax
  4065b0:	test   DWORD PTR [edx-0x66],0x45b99921
  4065b7:	mov    cl,0x14
  4065b9:	or     eax,0xa025edc7
  4065be:	jmp    0x4065ff
  4065c0:	mov    gs:0xce072fda,al
  4065c6:	xor    DWORD PTR [edx],0xa892df09
  4065cc:	xor    al,0x80
  4065ce:	into   
  4065cf:	imul   esi,esp,0xc83aea32
  4065d5:	imul   edi,DWORD PTR [eax+0x19ec14e9],0x7e
  4065dc:	jae    0x40660b
  4065de:	mov    ebp,0x6ff4b8be
  4065e3:	pop    ds
  4065e4:	icebp  
  4065e5:	adc    bh,dl
  4065e7:	xchg   ebx,eax
  4065e8:	and    BYTE PTR [ecx],0xc8
  4065eb:	cs inc ebx
  4065ed:	sbb    edi,edi
  4065ef:	jp     0x4065ff
  4065f1:	cmc    
  4065f2:	pop    eax
  4065f3:	jne    0x4065a1
  4065f5:	dec    ecx
  4065f6:	mov    edi,0xc3706073
  4065fb:	adc    DWORD PTR [edx],ebp
  4065fd:	adc    al,0x9f
  4065ff:	and    esp,DWORD PTR [edi+eax*1-0x67]
  406603:	(bad)  
  406604:	(bad)  
  406605:	jmp    0x532e:0xe461c82b
  40660c:	sub    DWORD PTR [ecx*2+0x1677bc26],edi
  406613:	xchg   ecx,eax
  406614:	xchg   esi,eax
  406615:	out    0x70,al
  406617:	sub    BYTE PTR [ecx+0x573fef5d],ah
  40661d:	scas   al,BYTE PTR es:[edi]
  40661e:	(bad)  
  40661f:	mov    ch,0xda
  406621:	cmp    eax,0x8b5d4690
  406626:	aaa    
  406627:	loop   0x40663b
  406629:	adc    DWORD PTR [eax+0x13],ecx
  40662c:	and    eax,0xa90d88f4
  406631:	xor    ah,BYTE PTR [esi-0x2b102147]
  406637:	mov    esp,0xee9120ea
  40663c:	es ret 0xf062
  406640:	jmp    0x2b79:0x5e472b6
  406647:	mov    esp,0x512d3add
  40664c:	cli    
  40664d:	pusha  
  40664e:	inc    ecx
  40664f:	jmp    0x79a42530
  406654:	inc    ecx
  406655:	mov    ch,0xa5
  406657:	cwde   
  406658:	ins    BYTE PTR es:[edi],dx
  406659:	data16 aaa 
  40665b:	scas   al,BYTE PTR es:[edi]
  40665c:	sbb    eax,0x9b940b38
  406661:	add    DWORD PTR [ecx-0x38],ebp
  406664:	xchg   esp,eax
  406665:	adc    al,0x7e
  406667:	inc    edi
  406668:	ror    cl,1
  40666a:	jbe    0x406654
  40666c:	adc    ebx,DWORD PTR [edi+0xc]
  40666f:	sub    al,0x83
  406671:	cmp    eax,0xf2c3ca76
  406676:	and    DWORD PTR ds:0x3504538b,edx
  40667c:	ja     0x406633
  40667e:	jns    0x40664b
  406680:	mov    DWORD PTR [ebp+0x14],ecx
  406683:	mov    ecx,0x9c2b8ae8
  406688:	xor    edx,ecx
  40668a:	shrd   eax,edx,0x2
  40668e:	or     eax,DWORD PTR [ebp+0x10]
  406691:	shr    edx,0x2
  406694:	mov    DWORD PTR [ebp-0x70],eax
  406697:	mov    eax,edx
  406699:	or     eax,DWORD PTR [ebp+0x14]
  40669c:	mov    DWORD PTR [ebp-0x5c],edx
  40669f:	jmp    0x406a40
  4066a4:	xchg   ecx,eax
  4066a5:	cld    
  4066a6:	pop    ebx
  4066a7:	cmp    DWORD PTR [edx+eiz*4-0x15230365],0x14a6920c
  4066b2:	loope  0x406644
  4066b4:	mov    esi,0xbdbebe3b
  4066b9:	les    edi,FWORD PTR [esi+0x551db7be]
  4066bf:	(bad)  
  4066c0:	aad    0x1
  4066c2:	mov    bl,0x35
  4066c4:	mov    al,BYTE PTR ds:0x3888e33c
  4066ca:	add    edx,DWORD PTR [edx+eax*2-0x2710bcc6]
  4066d1:	je     0x406685
  4066d3:	push   cs
  4066d4:	mov    ds:0x5981dc09,eax
  4066d9:	stc    
  4066da:	jl     0x406756
  4066dc:	ret    
  4066dd:	jne    0x40666b
  4066df:	mov    WORD PTR [ebx+edx*8-0x8],?
  4066e3:	xchg   DWORD PTR [edi+ebx*4],ebp
  4066e6:	fst    DWORD PTR [edx-0x64]
  4066e9:	jge    0x406670
  4066eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066ec:	daa    
  4066ed:	push   esi
  4066ee:	xor    ebp,ebx
  4066f0:	mov    WORD PTR [eax+esi*4+0x38],cs
  4066f4:	pop    ebx
  4066f5:	cmc    
  4066f6:	test   DWORD PTR ds:0xe5c19cc8,eax
  4066fc:	inc    eax
  4066fd:	cld    
  4066fe:	mov    dl,bl
  406700:	dec    esi
  406701:	xchg   ebx,eax
  406702:	mov    ebx,0xb468599b
  406707:	in     al,0x5
  406709:	xchg   ebp,eax
  40670a:	repnz push 0xffffffd1
  40670d:	retf   0x3e31
  406710:	scas   eax,DWORD PTR es:[edi]
  406711:	adc    eax,0x1454adc6
  406716:	popa   
  406717:	mul    BYTE PTR [edx-0x5a]
  40671a:	stos   BYTE PTR es:[edi],al
  40671b:	repnz fsub DWORD PTR ds:0x8f08
  406721:	(bad)  
  406722:	std    
  406723:	and    eax,0xbbd1d792
  406728:	das    
  406729:	not    BYTE PTR [ebx+0x54bc13db]
  40672f:	iret   
  406730:	outs   dx,BYTE PTR ds:[esi]
  406731:	loopne 0x406738
  406733:	aas    
  406734:	push   ecx
  406735:	jmp    0xa2bf:0x428b2efb
  40673c:	hlt    
  40673d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40673e:	bound  edi,QWORD PTR [esi-0x5a]
  406741:	or     ch,dh
  406743:	sbb    bh,BYTE PTR [ecx+0x4c]
  406746:	inc    esp
  406747:	sbb    BYTE PTR [ebp+0x527a5fbb],al
  40674d:	push   0x7a947219
  406752:	out    dx,al
  406753:	pop    esp
  406754:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406755:	xchg   esi,eax
  406756:	xchg   edx,eax
  406757:	pop    esp
  406758:	imul   edx,edx,0x35
  40675b:	add    edi,DWORD PTR [eax-0x7c2365d1]
  406761:	xchg   esi,eax
  406762:	loop   0x4067a1
  406764:	sahf   
  406765:	div    DWORD PTR [eax]
  406767:	jno    0x4067ab
  406769:	outs   dx,DWORD PTR ds:[esi]
  40676a:	add    al,0x13
  40676c:	xchg   ebx,eax
  40676d:	push   ebx
  40676e:	js     0x40677d
  406770:	inc    esi
  406771:	ins    BYTE PTR es:[edi],dx
  406772:	cmp    eax,0xf97606cd
  406777:	and    DWORD PTR [ebx],esp
  406779:	mov    dh,BYTE PTR [edi-0xd]
  40677c:	mov    ecx,0xfd3f34b5
  406781:	jbe    0x406787
  406783:	add    dl,al
  406785:	jnp    0x4067e6
  406787:	call   0x960a:0x13eaf49
  40678e:	dec    ebx
  40678f:	adc    BYTE PTR [eax+0x74],al
  406792:	add    BYTE PTR [edi-0x1e267df2],ah
  406798:	repnz push es
  40679a:	std    
  40679b:	(bad)  
  40679c:	xchg   edi,eax
  40679d:	loope  0x406727
  40679f:	inc    esp
  4067a0:	push   esp
  4067a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4067a2:	popf   
  4067a3:	jl     0x40676f
  4067a5:	sti    
  4067a6:	in     eax,0x43
  4067a8:	inc    ebx
  4067a9:	xor    BYTE PTR [ebp-0xa6c2aba],dl
  4067af:	cdq    
  4067b0:	jns    0x40675c
  4067b2:	pop    es
  4067b3:	cmp    edx,esp
  4067b5:	stc    
  4067b6:	lahf   
  4067b7:	je     0x4067e9
  4067b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4067ba:	mov    BYTE PTR [eax+0x5ffa2021],al
  4067c0:	repz fiadd WORD PTR [ebx+0x8]
  4067c4:	cmp    ah,BYTE PTR [ebx+0x16]
  4067c7:	dec    esp
  4067c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4067c9:	push   ebx
  4067ca:	cmc    
  4067cb:	daa    
  4067cc:	adc    eax,0xd771768b
  4067d1:	out    0x20,al
  4067d3:	xchg   esp,eax
  4067d4:	imul   ebp,esi,0x78
  4067d7:	xlat   BYTE PTR ds:[ebx]
  4067d8:	cs jne 0x406783
  4067db:	push   ds
  4067dc:	scas   eax,DWORD PTR es:[edi]
  4067dd:	push   0x60a468e0
  4067e2:	mov    ebp,0x4e5770c
  4067e7:	dec    ecx
  4067e8:	mov    esp,0xff511951
  4067ed:	mov    ebx,0x5afd946b
  4067f2:	imul   esi,esp,0x3b
  4067f5:	mov    ch,0xf4
  4067f7:	inc    ebp
  4067f8:	xor    BYTE PTR [edx+0x762ecbd4],0xe2
  4067ff:	sti    
  406800:	mov    BYTE PTR [edx+0x5b],0x93
  406804:	mov    eax,ds:0xceb0de9b
  406809:	out    0x5c,eax
  40680b:	scas   al,BYTE PTR es:[edi]
  40680c:	shl    BYTE PTR [ecx+0x187d770b],1
  406812:	add    bl,BYTE PTR ds:0xb0c9bc90
  406818:	sub    eax,0x8b2de741
  40681d:	fnstcw WORD PTR [edi+edx*1+0xd30f990]
  406824:	ss test eax,0x943589f3
  40682a:	(bad)
  40682d:	lods   eax,DWORD PTR ds:[esi]
  40682e:	adc    bl,BYTE PTR ds:0x584aba5f
  406834:	sub    BYTE PTR [ebx+0x47d02703],bl
  40683a:	inc    ecx
  40683b:	and    eax,0xaebbe0c8
  406840:	lds    eax,FWORD PTR [ecx]
  406842:	fs int3 
  406844:	xchg   edi,eax
  406845:	cld    
  406846:	out    dx,al
  406847:	cmp    eax,0x10dc092d
  40684c:	sbb    dl,dh
  40684e:	pop    ecx
  40684f:	xlat   BYTE PTR ds:[ebx]
  406850:	or     DWORD PTR [ecx+0x64],0xca9ed052
  406857:	(bad)  
  406858:	mov    ds:0x48b2c870,al
  40685d:	aaa    
  40685e:	xchg   bl,dh
  406860:	mov    eax,0x3995d70d
  406865:	sbb    al,0x38
  406867:	test   DWORD PTR [ecx-0x34b71bc],0x8ead1bd5
  406871:	add    BYTE PTR [esi-0x7ccc1973],0x74
  406878:	mov    fs,WORD PTR [ecx+0x5c]
  40687b:	push   edi
  40687c:	add    bl,al
  40687e:	stos   BYTE PTR es:[edi],al
  40687f:	mov    ebp,0xdb6218d1
  406884:	ffree  st(1)
  406886:	pop    ss
  406887:	stos   DWORD PTR es:[edi],eax
  406888:	int    0x39
  40688a:	pusha  
  40688b:	stos   BYTE PTR es:[edi],al
  40688c:	aam    0xe4
  40688e:	cli    
  40688f:	push   ebp
  406890:	mov    al,0x40
  406892:	aas    
  406893:	outs   dx,DWORD PTR ds:[esi]
  406894:	add    al,0x27
  406896:	jmp    0x4068a2
  406898:	adc    esi,DWORD PTR [esi]
  40689a:	xchg   BYTE PTR [edi+0x13874960],dh
  4068a0:	out    dx,eax
  4068a1:	leave  
  4068a2:	or     al,0x34
  4068a4:	adc    BYTE PTR [ecx],bl
  4068a6:	repz neg dl
  4068a9:	fs mov ah,0xb7
  4068ac:	dec    edi
  4068ad:	call   0x53ac:0xe7ab9bd2
  4068b4:	bound  ebp,QWORD PTR [ecx]
  4068b6:	lods   al,BYTE PTR ds:[esi]
  4068b7:	stos   BYTE PTR es:[edi],al
  4068b8:	sub    ebp,esi
  4068ba:	sti    
  4068bb:	jae    0x40683f
  4068bd:	mov    DWORD PTR [eax+0xe],edx
  4068c0:	mov    gs,esi
  4068c2:	dec    esp
  4068c3:	add    ebp,DWORD PTR [ecx-0x4787f893]
  4068c9:	jmp    0x6532:0x17ceb9b9
  4068d0:	stos   DWORD PTR es:[edi],eax
  4068d1:	sbb    ebx,DWORD PTR [edx+0x714b1858]
  4068d7:	xor    al,0xe8
  4068d9:	fwait
  4068da:	dec    ebp
  4068db:	(bad)  
  4068dc:	arpl   di,sp
  4068de:	dec    edx
  4068df:	popa   
  4068e0:	or     ch,BYTE PTR [esi+ebp*2+0x581553e4]
  4068e7:	popf   
  4068e8:	push   esp
  4068e9:	mov    gs,WORD PTR [esi+0x62a7a794]
  4068ef:	cmc    
  4068f0:	call   0xa090:0x377cf8be
  4068f7:	sti    
  4068f8:	sub    al,0x94
  4068fa:	(bad)  
  4068fb:	and    DWORD PTR [edx],edi
  4068fd:	dec    edx
  4068fe:	xor    eax,0x605626f
  406903:	jb     0x406902
  406905:	and    BYTE PTR [eax-0x144acd7f],ch
  40690b:	clc    
  40690c:	sub    eax,ecx
  40690e:	or     BYTE PTR [esi],al
  406910:	lods   eax,DWORD PTR ds:[esi]
  406911:	and    BYTE PTR [esi],bh
  406913:	push   ds
  406914:	mov    ds:0x8a81e32a,eax
  406919:	pop    eax
  40691a:	dec    edx
  40691b:	add    BYTE PTR [ebp+0x1c8beadc],bl
  406921:	es cmp ecx,ebp
  406924:	sub    eax,0x5088fcf2
  406929:	mov    dl,0x6d
  40692b:	dec    edi
  40692c:	push   eax
  40692d:	inc    esp
  40692e:	add    bl,0x9
  406931:	cmp    eax,0x2acc7b06
  406936:	jno    0x4068d9
  406938:	std    
  406939:	cmc    
  40693a:	in     al,0x69
  40693c:	fcomp  st(4)
  40693e:	ds push ss
  406940:	fdivr  st,st(1)
  406942:	jmp    0xd198:0xf18fb8a
  406949:	lods   al,BYTE PTR ds:[esi]
  40694a:	retf   0x3e82
  40694d:	test   DWORD PTR [ebp-0x5e],esp
  406950:	pop    esi
  406951:	mov    al,ds:0x3d8e7240
  406956:	aam    0xa8
  406958:	sub    eax,0x97840c57
  40695d:	test   dh,al
  40695f:	fild   QWORD PTR [edx+0x62]
  406962:	(bad)  
  406963:	mov    esi,0x888c1bce
  406968:	cmp    eax,0x91ea2e2e
  40696d:	ss xlat BYTE PTR es:[ebx]
  406970:	sub    BYTE PTR [ebx+0x51f926a5],al
  406976:	cli    
  406977:	pop    edx
  406978:	xlat   BYTE PTR ds:[ebx]
  406979:	fmul   QWORD PTR [edx]
  40697b:	sbb    DWORD PTR [edx+0x4f],eax
  40697e:	mov    esp,0x8633878b
  406983:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406984:	mov    ch,0xb2
  406986:	loopne 0x40691e
  406988:	and    DWORD PTR [esi+edx*4-0xce4e6cc],esp
  40698f:	in     eax,dx
  406990:	data16 icebp 
  406992:	mov    esp,DWORD PTR [ecx-0x6e]
  406995:	sbb    eax,0xc34ad7d0
  40699a:	sub    edi,DWORD PTR [ebp+eiz*2+0x4bef422]
  4069a1:	ror    DWORD PTR [edx+0x5f],cl
  4069a4:	mov    ebx,0xb975f47a
  4069a9:	dec    eax
  4069aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069ab:	cmp    ah,BYTE PTR [ebx+0x1]
  4069ae:	mov    ah,0x1
  4069b0:	lods   eax,DWORD PTR ds:[esi]
  4069b1:	test   DWORD PTR [edx+0x6b],0x57f39f9f
  4069b8:	stc    
  4069b9:	sub    edi,DWORD PTR [eax-0x6c]
  4069bc:	scas   eax,DWORD PTR es:[edi]
  4069bd:	mov    eax,0xc47ce9f0
  4069c2:	dec    esp
  4069c3:	ret    0x1473
  4069c6:	test   eax,0x7a42f5
  4069cb:	aaa    
  4069cc:	xchg   ebp,eax
  4069cd:	sbb    ecx,edi
  4069cf:	test   al,0x64
  4069d1:	in     al,0xc3
  4069d3:	push   edx
  4069d4:	neg    BYTE PTR [ebx-0x44d80c9f]
  4069da:	(bad)  
  4069dc:	fsubr  DWORD PTR [ecx]
  4069de:	push   bx
  4069e0:	push   esp
  4069e1:	adc    eax,0xf1cde212
  4069e6:	mov    bl,0xa0
  4069e8:	sub    ecx,DWORD PTR [edi]
  4069ea:	adc    esp,ebx
  4069ec:	out    dx,eax
  4069ed:	daa    
  4069ee:	test   edi,esp
  4069f0:	div    BYTE PTR [edx+0x7e]
  4069f3:	cmp    BYTE PTR [eax+eax*8-0x745568c4],bh
  4069fa:	xchg   esi,eax
  4069fb:	or     esp,esp
  4069fd:	jns    0x406a31
  4069ff:	push   es
  406a00:	mov    ds:0x63a54383,eax
  406a05:	jecxz  0x406a3e
  406a07:	aas    
  406a08:	xchg   ebp,eax
  406a09:	test   eax,0x4ba3437b
  406a0e:	sub    al,BYTE PTR [ecx+0x3c]
  406a11:	ror    BYTE PTR [ebx+0x51],cl
  406a14:	stos   BYTE PTR es:[edi],al
  406a15:	fld    DWORD PTR fs:[ebx]
  406a18:	loope  0x406a08
  406a1a:	rol    BYTE PTR [ebx+0x34fb35de],1
  406a20:	leave  
  406a21:	mov    esi,0x271f6302
  406a26:	pop    ebp
  406a27:	mov    esp,cs
  406a29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a2a:	fisttp QWORD PTR [ecx-0x58]
  406a2d:	xor    bh,BYTE PTR [edx+edx*2+0x671818a8]
  406a34:	repz fmul DWORD PTR [ebx-0x223e7a96]
  406a3b:	stos   BYTE PTR es:[edi],al
  406a3c:	xchg   ecx,eax
  406a3d:	push   0xffffffdf
  406a3f:	ror    BYTE PTR [ecx+0x458b9445],0x90
  406a46:	cmp    DWORD PTR [ebp-0x68],eax
  406a49:	jne    0x406a5b
  406a4f:	mov    eax,DWORD PTR [ebp-0x6c]
  406a52:	cmp    DWORD PTR [ebp-0x64],eax
  406a55:	je     0x406a96
  406a5b:	mov    eax,DWORD PTR [ebp+0x8]
  406a5e:	mov    edx,DWORD PTR [ebp+0xc]
  406a61:	mov    edx,DWORD PTR [ebp-0x4]
  406a64:	mov    edx,DWORD PTR [edx+0x3c]
  406a67:	lea    eax,[edx+eax*8+0x78]
  406a6b:	mov    edx,DWORD PTR [ebp-0x4]
  406a6e:	mov    eax,DWORD PTR [edx+eax*1]
  406a71:	mov    DWORD PTR [ebp-0x24],eax
  406a74:	mov    eax,DWORD PTR [esi]
  406a76:	mov    edx,DWORD PTR [esi+0x4]
  406a79:	shrd   eax,edx,0x2
  406a7d:	mov    DWORD PTR [ebp+0x14],eax
  406a80:	mov    eax,DWORD PTR [esi]
  406a82:	xor    DWORD PTR [ebp+0x14],edi
  406a85:	shr    edx,0x2
  406a88:	mov    edx,DWORD PTR [esi+0x4]
  406a8b:	xor    edx,edx
  406a8d:	shl    eax,0x1e
  406a90:	or     edx,DWORD PTR [ebp+0x14]
  406a93:	mov    DWORD PTR [ebp-0x28],edx
  406a96:	mov    eax,DWORD PTR [ebp-0x24]
  406a99:	mov    eax,DWORD PTR [ebp-0x24]
  406a9c:	xor    edx,edx
  406a9e:	shld   edx,eax,0x2
  406aa2:	xor    edx,ecx
  406aa4:	mov    DWORD PTR [ebp+0xc],edx
  406aa7:	mov    edx,DWORD PTR [esi]
  406aa9:	shl    eax,0x2
  406aac:	jmp    0x406e4d
  406ab1:	stos   BYTE PTR es:[edi],al
  406ab2:	outs   dx,BYTE PTR ds:[esi]
  406ab3:	jne    0x406a9b
  406ab5:	mov    ecx,0x99b2bae5
  406aba:	add    ebp,DWORD PTR [esi-0x23]
  406abd:	scas   eax,DWORD PTR es:[edi]
  406abe:	loop   0x406b1c
  406ac0:	sar    DWORD PTR [ebp-0x424141bf],1
  406ac6:	les    edi,FWORD PTR [esi+0x316a4dbe]
  406acc:	fsin   
  406ace:	cdq    
  406acf:	mov    esp,0xe093c4ae
  406ad4:	das    
  406ad5:	cld    
  406ad6:	icebp  
  406ad7:	sbb    edx,DWORD PTR [ebx-0x19716176]
  406add:	fs jl  0x406a85
  406ae0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ae1:	cmp    eax,0xd17c2a32
  406ae6:	mov    ebx,cs
  406ae8:	add    eax,0xaae5d004
  406aed:	div    edx
  406aef:	push   es
  406af0:	pop    ebx
  406af1:	pop    edi
  406af2:	enter  0xf561,0x35
  406af6:	(bad)  
  406af7:	imul   edi,DWORD PTR [edx-0x210d69d2],0x71
  406afe:	cmp    eax,0x92acfa56
  406b03:	inc    eax
  406b04:	sbb    esp,DWORD PTR [edx+ebx*8]
  406b07:	adc    BYTE PTR [esi],al
  406b09:	mov    ds:0x51d5f2d2,al
  406b0e:	(bad)  
  406b0f:	xor    DWORD PTR [ebp-0x793c657e],ebp
  406b15:	dec    edi
  406b16:	popf   
  406b17:	in     al,dx
  406b18:	repnz and esp,ebp
  406b1b:	push   eax
  406b1c:	dec    edx
  406b1d:	out    dx,eax
  406b1e:	(bad)  
  406b1f:	fldl2e 
  406b21:	outs   dx,DWORD PTR ds:[esi]
  406b22:	sbb    DWORD PTR [esi],eax
  406b24:	inc    edi
  406b25:	outs   dx,DWORD PTR ds:[esi]
  406b26:	call   0xae635949
  406b2b:	test   eax,0x7085522f
  406b30:	cmp    bl,BYTE PTR [esi-0x21613348]
  406b36:	lea    esp,[edx]
  406b38:	lahf   
  406b39:	lods   eax,DWORD PTR ds:[esi]
  406b3a:	test   BYTE PTR [eax-0x314ec19f],dl
  406b40:	hlt    
  406b41:	pop    edi
  406b42:	add    al,bl
  406b44:	clc    
  406b45:	push   edi
  406b46:	sub    ch,0xad
  406b49:	retf   0x99b1
  406b4c:	push   ss
  406b4d:	idiv   BYTE PTR [ecx]
  406b4f:	inc    ebp
  406b50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b51:	sti    
  406b52:	push   0x719a50ad
  406b57:	fcomp  QWORD PTR [edx]
  406b59:	into   
  406b5a:	xchg   bl,bl
  406b5c:	ret    
  406b5d:	push   0x55
  406b5f:	adc    ebp,DWORD PTR [esi]
  406b61:	xor    al,0xe4
  406b63:	cmp    BYTE PTR [esi+0x1b],dh
  406b66:	and    eax,0xd49e0ef2
  406b6b:	or     eax,0x34dd1754
  406b70:	fscale 
  406b72:	cwde   
  406b73:	mov    ebx,0x1dd01f9d
  406b78:	sub    DWORD PTR [ecx],esi
  406b7a:	int3   
  406b7b:	aas    
  406b7c:	sbb    DWORD PTR [ebx],edi
  406b7e:	cmc    
  406b7f:	repz rcr ebx,1
  406b82:	aad    0xe8
  406b84:	xor    al,0x9
  406b86:	or     ebx,edi
  406b88:	cmp    DWORD PTR [ebx],ebx
  406b8a:	popa   
  406b8b:	xor    eax,0xf84635dd
  406b90:	xchg   esi,eax
  406b91:	xor    al,0x93
  406b93:	test   al,0x65
  406b95:	addr16 clc 
  406b97:	outs   dx,BYTE PTR ds:[esi]
  406b98:	scas   eax,DWORD PTR es:[edi]
  406b99:	rcr    DWORD PTR [eax],0x50
  406b9c:	call   0x3c2c09dd
  406ba1:	adc    ebp,DWORD PTR [ebp-0x1b57bf1]
  406ba7:	outs   dx,DWORD PTR ds:[esi]
  406ba8:	call   0xb34fdafc
  406bad:	mov    ecx,0xa723c5d
  406bb2:	jae    0x406be3
  406bb4:	not    esi
  406bb6:	pop    ebp
  406bb7:	lds    ecx,FWORD PTR [ebx-0x17]
  406bba:	fs mov esp,0x92220c2d
  406bc0:	fild   QWORD PTR [ecx-0x2b12c8c7]
  406bc6:	push   edx
  406bc7:	jo     0x406b8b
  406bc9:	stos   BYTE PTR es:[edi],al
  406bca:	mov    cl,0xf0
  406bcc:	push   eax
  406bcd:	pop    ds
  406bce:	call   0xee84:0x519e9398
  406bd5:	and    dh,BYTE PTR [ecx+0x51245f0d]
  406bdb:	dec    eax
  406bdc:	pop    esp
  406bdd:	and    ch,al
  406bdf:	dec    ebx
  406be0:	inc    edx
  406be1:	out    dx,al
  406be2:	dec    edi
  406be3:	cmc    
  406be4:	popa   
  406be5:	jp     0x406c45
  406be7:	call   0x66352180
  406bec:	(bad)  
  406bed:	aam    0x80
  406bef:	popf   
  406bf0:	in     al,dx
  406bf1:	popf   
  406bf2:	xchg   edx,eax
  406bf3:	out    0xe8,al
  406bf5:	cmp    BYTE PTR [edi-0x2eab6f52],0xf5
  406bfc:	push   0xffffffc4
  406bfe:	imul   ebp,DWORD PTR [edx-0x614b5a1e],0x3b33a8fb
  406c08:	loope  0x406c0c
  406c0a:	inc    eax
  406c0b:	xchg   DWORD PTR [ebp-0x6],esi
  406c0e:	jne    0x406c82
  406c10:	push   edi
  406c11:	repnz dec ebx
  406c13:	ins    DWORD PTR es:[edi],dx
  406c14:	push   DWORD PTR [edi-0x7abc0c01]
  406c1a:	pop    edx
  406c1b:	popa   
  406c1c:	arpl   WORD PTR [edx],di
  406c1e:	or     eax,0xf138de60
  406c23:	imul   edi,DWORD PTR [esi],0xffffff91
  406c26:	aam    0x70
  406c28:	add    al,0x9c
  406c2a:	pushf  
  406c2b:	xchg   ebx,eax
  406c2c:	(bad)  
  406c2d:	int3   
  406c2e:	mov    ebx,0xf0a0a354
  406c33:	xor    BYTE PTR [ebx+0x14],0xb6
  406c37:	cmp    eax,0x3fa13fe9
  406c3c:	in     eax,0x8c
  406c3e:	or     BYTE PTR [ebp+esi*8-0x7e676fd],bl
  406c45:	push   esi
  406c46:	retf   
  406c47:	dec    esp
  406c48:	in     al,0x46
  406c4a:	aaa    
  406c4b:	inc    eax
  406c4c:	mov    esi,0x2c0684b6
  406c51:	mov    eax,0x4560c96f
  406c56:	push   0xfd29e66a
  406c5b:	mov    ebx,0x71c77e65
  406c60:	add    eax,DWORD PTR [esi]
  406c62:	mov    ebp,0xe473394a
  406c67:	push   0xca4568b3
  406c6c:	mov    WORD PTR [esi+edx*4+0x6c974483],cs
  406c73:	mov    al,ds:0xd131696a
  406c78:	mov    eax,ds:0x92a9c393
  406c7d:	dec    edx
  406c7e:	add    BYTE PTR [edi+0x539176da],0x42
  406c85:	ret    0x9b9a
  406c88:	push   cs
  406c89:	pop    es
  406c8a:	fstp   TBYTE PTR [edx-0x6d8f90ae]
  406c90:	arpl   WORD PTR [esi-0x37],ax
  406c93:	and    cl,BYTE PTR [ecx+0x5e3c3b64]
  406c99:	jl     0x406d10
  406c9b:	push   cs
  406c9c:	ins    DWORD PTR es:[edi],dx
  406c9d:	push   es
  406c9e:	xor    al,0x1b
  406ca0:	adc    bl,BYTE PTR [ebx+eiz*2-0x210059c0]
  406ca7:	pop    es
  406ca8:	sbb    BYTE PTR [eax-0x77d73859],0xaf
  406caf:	jl     0x406cd1
  406cb1:	push   cs
  406cb2:	dec    ebx
  406cb3:	outs   dx,BYTE PTR ds:[esi]
  406cb4:	fwait
  406cb5:	jnp    0x406c42
  406cb7:	sbb    DWORD PTR ds:0xdee4edb6,esp
  406cbd:	fs sbb ch,0x3d
  406cc1:	xchg   edx,eax
  406cc2:	add    ah,BYTE PTR [ebx+0x72]
  406cc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406cc6:	stos   BYTE PTR es:[edi],al
  406cc7:	mov    bh,0xc9
  406cc9:	and    DWORD PTR [esi],esp
  406ccb:	add    ecx,ebp
  406ccd:	add    eax,DWORD PTR [esp+edi*1+0x4dfcd790]
  406cd4:	pop    ss
  406cd5:	and    al,0x6c
  406cd7:	jmp    0x551a:0xd8cc9df3
  406cde:	dec    edi
  406cdf:	clc    
  406ce0:	ficomp WORD PTR [edx+edi*1]
  406ce3:	(bad)  
  406ce4:	cdq    
  406ce5:	xor    BYTE PTR [eax],al
  406ce7:	cli    
  406ce8:	(bad)  
  406ce9:	push   DWORD PTR [edi-0x32]
  406cec:	fs jae 0x406d12
  406cef:	ja     0x406cb2
  406cf1:	pop    ebp
  406cf2:	adc    cl,al
  406cf4:	mov    esi,0xea004ad0
  406cf9:	xor    al,0x3a
  406cfb:	pop    ebx
  406cfc:	daa    
  406cfd:	mov    dh,0x8a
  406cff:	scas   eax,DWORD PTR es:[edi]
  406d00:	jp     0x406ce7
  406d02:	mov    eax,0x7720029b
  406d07:	scas   al,BYTE PTR es:[edi]
  406d08:	cld    
  406d09:	scas   eax,DWORD PTR es:[edi]
  406d0a:	ret    0x1e87
  406d0d:	xchg   edx,eax
  406d0e:	fmul   DWORD PTR [ebp+0x12fd731c]
  406d14:	push   eax
  406d15:	aam    0x11
  406d17:	scas   al,BYTE PTR es:[edi]
  406d18:	dec    edi
  406d19:	sub    al,BYTE PTR [ebp-0x80]
  406d1c:	dec    ebp
  406d1d:	out    dx,eax
  406d1e:	lods   al,BYTE PTR ds:[esi]
  406d1f:	add    al,0x1c
  406d21:	push   esp
  406d22:	xor    esi,ebp
  406d24:	cli    
  406d25:	pusha  
  406d26:	popa   
  406d27:	scas   al,BYTE PTR es:[edi]
  406d28:	sbb    eax,0x1002cf6c
  406d2d:	js     0x406cc1
  406d2f:	enter  0xe50c,0x8b
  406d33:	push   es
  406d34:	cmp    al,0xd9
  406d36:	jp     0x406cfe
  406d38:	push   esi
  406d39:	repnz clc 
  406d3b:	push   es
  406d3c:	(bad)  
  406d3d:	scas   eax,DWORD PTR es:[edi]
  406d3e:	mov    al,ds:0xe7b42abc
  406d43:	dec    eax
  406d44:	or     ch,BYTE PTR [ecx-0x38fadf08]
  406d4a:	(bad)  
  406d4b:	(bad)  
  406d4c:	pop    ss
  406d4d:	clc    
  406d4e:	pop    es
  406d4f:	xchg   BYTE PTR [eax],al
  406d51:	sbb    DWORD PTR [ebx],eax
  406d53:	push   ds
  406d54:	jns    0x406da9
  406d56:	into   
  406d57:	push   es
  406d58:	push   ecx
  406d59:	xor    ebx,ebp
  406d5b:	pusha  
  406d5c:	lahf   
  406d5d:	xor    bl,0xe7
  406d60:	xchg   ebp,eax
  406d61:	rol    esi,cl
  406d63:	mov    al,0xd6
  406d65:	or     eax,0xffefb8db
  406d6a:	or     esi,DWORD PTR [ecx]
  406d6c:	push   esi
  406d6d:	hlt    
  406d6e:	call   0x9dbfeff7
  406d73:	lea    esi,[esi-0x3a4e4015]
  406d79:	int    0x2f
  406d7b:	ins    DWORD PTR es:[edi],dx
  406d7c:	rol    BYTE PTR [eax],1
  406d7e:	stos   BYTE PTR es:[edi],al
  406d7f:	enter  0x38a6,0x4a
  406d83:	cmp    eax,0x2720c457
  406d88:	mov    dl,BYTE PTR [ebx+0x1a4fde66]
  406d8e:	enter  0xa408,0xa4
  406d92:	pusha  
  406d93:	clc    
  406d94:	push   es
  406d95:	pop    ss
  406d96:	scas   eax,DWORD PTR es:[edi]
  406d97:	mov    al,ds:0x50eefef4
  406d9c:	inc    ebx
  406d9d:	mov    bh,0x94
  406d9f:	sbb    bl,dl
  406da1:	mov    bh,0xa2
  406da3:	test   eax,0x3a8c26c9
  406da8:	pop    ds
  406da9:	jle    0x406d8b
  406dab:	pop    eax
  406dac:	sahf   
  406dad:	jl     0x406df6
  406daf:	jle    0x406d88
  406db1:	fst    QWORD PTR [ebx+0x365beeb9]
  406db8:	inc    esp
  406db9:	and    eax,0x42a5be46
  406dbe:	add    al,0xe8
  406dc0:	pop    ebp
  406dc1:	(bad)  
  406dc2:	dec    esp
  406dc3:	mov    cl,0x6f
  406dc5:	int3   
  406dc6:	rcl    esp,1
  406dc8:	ret    0xa04c
  406dcb:	jg     0x406d61
  406dcd:	and    DWORD PTR [edi+0x6a9d78f1],edi
  406dd3:	aas    
  406dd4:	and    DWORD PTR [esi-0x41],esp
  406dd7:	inc    ecx
  406dd8:	fbstp  TBYTE PTR [edi+ebx*2]
  406ddb:	retf   0xd770
  406dde:	mov    edx,0x701b8312
  406de3:	jle    0x406db6
  406de5:	jg     0x406e2e
  406de7:	pop    es
  406de8:	sahf   
  406de9:	fwait
  406dea:	out    dx,al
  406deb:	enter  0x2336,0x82
  406def:	repz jp 0x406dc6
  406df2:	sub    ah,ch
  406df4:	jecxz  0x406dd6
  406df6:	jge    0x406df7
  406df8:	cs iret 
  406dfa:	dec    ebx
  406dfb:	mov    esp,0xdb560c7a
  406e00:	pop    ecx
  406e01:	or     esi,DWORD PTR [ecx+ebp*1+0x3e]
  406e05:	jne    0x406dfa
  406e07:	xor    DWORD PTR [esi+eax*1+0x62f941d8],ebx
  406e0e:	data16 int 0xde
  406e11:	add    DWORD PTR [edx+0x1a87b659],ebp
  406e17:	sahf   
  406e18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e19:	stc    
  406e1a:	or     ebp,DWORD PTR [edx+ebp*1+0xf5a3ffb]
  406e21:	mov    esi,0x7a27644c
  406e26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e27:	xchg   edi,eax
  406e28:	imul   eax,DWORD PTR [ebp+0x35],0x21
  406e2c:	and    BYTE PTR [ecx+0x6d],dh
  406e2f:	add    dl,cl
  406e31:	mov    eax,DWORD PTR [ebx-0x654ed1a8]
  406e37:	mov    ebp,0xb3bec6f1
  406e3c:	dec    esi
  406e3d:	fidivr WORD PTR [ebp-0x67]
  406e40:	aad    0x7c
  406e42:	adc    DWORD PTR ds:0x7cfc1efc,0xffffffab
  406e49:	adc    DWORD PTR [ecx+ebp*1+0x10558927],ebp
  406e50:	mov    edx,DWORD PTR [esi+0x4]
  406e53:	xor    eax,0xcb79b576
  406e58:	mov    DWORD PTR [ebp+0x14],edx
  406e5b:	cmp    eax,DWORD PTR [ebp+0x10]
  406e5e:	jne    0x407653
  406e64:	mov    eax,edx
  406e66:	cmp    DWORD PTR [ebp+0xc],eax
  406e69:	jne    0x407653
  406e6f:	mov    eax,DWORD PTR [esi]
  406e71:	mov    edx,DWORD PTR [esi+0x4]
  406e74:	mov    eax,DWORD PTR [esi]
  406e76:	mov    edx,DWORD PTR [esi+0x4]
  406e79:	mov    edx,eax
  406e7b:	xor    eax,eax
  406e7d:	shl    edx,0x1e
  406e80:	mov    DWORD PTR [ebp+0x10],eax
  406e83:	mov    eax,DWORD PTR [esi]
  406e85:	xor    edx,0x80000000
  406e8b:	mov    DWORD PTR [ebp+0x14],edx
  406e8e:	mov    edx,DWORD PTR [esi+0x4]
  406e91:	xor    eax,0xcb79b577
  406e96:	xor    ecx,edx
  406e98:	shrd   eax,ecx,0x2
  406e9c:	or     eax,DWORD PTR [ebp+0x10]
  406e9f:	shr    ecx,0x2
  406ea2:	mov    DWORD PTR [ebp+0x8],eax
  406ea5:	mov    eax,ecx
  406ea7:	or     eax,DWORD PTR [ebp+0x14]
  406eaa:	mov    ecx,DWORD PTR [ebx]
  406eac:	mov    edx,DWORD PTR [ebx+0x4]
  406eaf:	push   eax
  406eb0:	push   DWORD PTR [ebp+0x8]
  406eb3:	push   edx
  406eb4:	push   ecx
  406eb5:	call   0x41594e
  406eba:	mov    eax,DWORD PTR [esi]
  406ebc:	mov    ecx,DWORD PTR [esi+0x4]
  406ebf:	shrd   eax,ecx,0x2
  406ec3:	shr    ecx,0x2
  406ec6:	shr    edx,0x1e
  406ec9:	xor    ecx,0xe70ae2ba
  406ecf:	push   ecx
  406ed0:	xor    eax,edi
  406ed2:	mov    DWORD PTR [ebp+0x10],edx
  406ed5:	mov    edx,DWORD PTR [ebx]
  406ed7:	mov    edi,DWORD PTR [ebx+0x4]
  406eda:	push   eax
  406edb:	push   edi
  406edc:	push   edx
  406edd:	call   0x41594e
  406ee2:	shld   edx,eax,0x2
  406ee6:	mov    ecx,edx
  406ee8:	xor    edx,edx
  406eea:	or     ecx,edx
  406eec:	mov    edx,DWORD PTR [esi]
  406eee:	mov    edi,DWORD PTR [esi+0x4]
  406ef1:	shl    eax,0x2
  406ef4:	or     eax,DWORD PTR [ebp+0x10]
  406ef7:	jmp    0x407298
  406efc:	test   al,0xc
  406efe:	lea    ebp,[esi]
  406f00:	mov    cl,0xbc
  406f02:	test   al,0x9c
  406f04:	sahf   
  406f05:	cld    
  406f06:	lds    esp,FWORD PTR [edi+ecx*4-0x4122ff8d]
  406f0d:	dec    ecx
  406f0e:	mov    esi,0xbec4bdbe
  406f13:	mov    esi,0x8cc3a2ce
  406f18:	jns    0x406ea2
  406f1a:	dec    ecx
  406f1b:	cs cli 
  406f1d:	adc    DWORD PTR [eax],esi
  406f1f:	nop
  406f20:	bound  ebp,QWORD PTR [edx]
  406f22:	ret    0x2e63
  406f25:	aad    0x54
  406f27:	clc    
  406f28:	dec    eax
  406f29:	pop    es
  406f2a:	pop    edx
  406f2b:	cmp    DWORD PTR [eax],0xffffffd0
  406f2e:	dec    ecx
  406f2f:	pusha  
  406f30:	es xchg esi,eax
  406f32:	retf   0x909d
  406f35:	in     eax,dx
  406f36:	xor    edi,DWORD PTR [ecx]
  406f38:	sbb    edi,0xffffffe9
  406f3b:	jb     0x406eee
  406f3d:	pop    edi
  406f3e:	das    
  406f3f:	push   cs
  406f40:	dec    edi
  406f41:	int    0xb5
  406f43:	not    BYTE PTR [ebx-0x1]
  406f46:	add    eax,0x36153edb
  406f4b:	or     al,0xf6
  406f4d:	retf   
  406f4e:	inc    esp
  406f4f:	leave  
  406f50:	(bad)  
  406f51:	cmp    DWORD PTR [ecx+0x1b],edi
  406f54:	push   ss
  406f55:	(bad)  
  406f56:	lds    esp,FWORD PTR [eax+edx*4-0x5]
  406f5a:	lods   al,BYTE PTR ds:[esi]
  406f5b:	les    esp,FWORD PTR [ecx]
  406f5d:	in     eax,dx
  406f5e:	sub    dh,bh
  406f60:	cmp    edi,0xe9347513
  406f66:	jmp    0x406fbb
  406f68:	pop    esp
  406f69:	fstp   st(3)
  406f6b:	xchg   ecx,eax
  406f6c:	xchg   edi,eax
  406f6d:	xor    BYTE PTR [eax+0x40],dl
  406f70:	sbb    ch,BYTE PTR [ecx-0x29]
  406f73:	popf   
  406f74:	lock je 0x406f46
  406f77:	push   edi
  406f78:	imul   ecx,DWORD PTR [edi-0x2948598a],0x8793b945
  406f82:	add    eax,0x64ac8c19
  406f87:	xlat   BYTE PTR ds:[ebx]
  406f88:	out    dx,eax
  406f89:	or     al,0xa7
  406f8b:	sub    BYTE PTR [eax+0x11],ah
  406f8e:	and    bl,bh
  406f90:	int    0x5a
  406f92:	ja     0x406f2a
  406f94:	loopne 0x406f6e
  406f96:	inc    ebx
  406f97:	inc    edi
  406f98:	or     al,0xf5
  406f9a:	bound  esp,QWORD PTR [edi]
  406f9c:	jmp    0xd0265d50
  406fa1:	int    0x3c
  406fa3:	mov    esi,0x5059d237
  406fa8:	ficomp DWORD PTR [ebx+0xa]
  406fab:	inc    ecx
  406fac:	inc    esi
  406fad:	dec    esp
  406fae:	retf   0x2014
  406fb1:	jns    0x406fe9
  406fb3:	jne    0x407021
  406fb5:	pop    ss
  406fb6:	rcr    DWORD PTR [ebx-0x3652f300],cl
  406fbc:	push   edi
  406fbd:	aad    0xf6
  406fbf:	cdq    
  406fc0:	fild   DWORD PTR [esi]
  406fc2:	jns    0x406fc8
  406fc4:	stos   DWORD PTR es:[edi],eax
  406fc5:	jae    0x406f67
  406fc7:	mov    bh,BYTE PTR [edx+0x1a]
  406fca:	dec    ebx
  406fcb:	daa    
  406fcc:	pushf  
  406fcd:	inc    ecx
  406fce:	aad    0x1
  406fd0:	adc    DWORD PTR [ebp-0x7b1fa259],esi
  406fd6:	mov    esi,0xf57be534
  406fdb:	lods   eax,DWORD PTR ds:[esi]
  406fdc:	lods   al,BYTE PTR ds:[esi]
  406fdd:	rol    DWORD PTR [edx+0x25],0xf4
  406fe1:	test   BYTE PTR [esi+0x1367755e],ah
  406fe7:	mov    edx,0xf30c69e6
  406fec:	ins    DWORD PTR es:[edi],dx
  406fed:	test   eax,0xd3713215
  406ff2:	jle    0x407072
  406ff4:	pop    edi
  406ff5:	jne    0x406fc7
  406ff7:	cs int3 
  406ff9:	cwde   
  406ffa:	mov    ch,0xd3
  406ffc:	pop    edx
  406ffd:	inc    eax
  406ffe:	sbb    BYTE PTR [esi],0xdd
  407001:	jg     0x406ff2
  407003:	lods   eax,DWORD PTR ds:[esi]
  407004:	adc    eax,0xf8d320d1
  407009:	sti    
  40700a:	inc    ebx
  40700b:	cmp    eax,0x4421f349
  407010:	pusha  
  407011:	sub    eax,0xb2f99681
  407016:	dec    esi
  407017:	sahf   
  407018:	and    al,0x66
  40701a:	sbb    DWORD PTR [edx],ecx
  40701c:	(bad)  
  40701d:	outs   dx,BYTE PTR ds:[esi]
  40701e:	sub    DWORD PTR [esi-0x77167076],ebp
  407024:	repnz or al,BYTE PTR [edi-0x53]
  407028:	adc    cl,BYTE PTR [eax-0x357030d]
  40702e:	jbe    0x406fba
  407030:	fist   DWORD PTR [edx+0xe]
  407033:	lods   eax,DWORD PTR ds:[esi]
  407034:	mov    ch,BYTE PTR [eax]
  407036:	adc    eax,edi
  407038:	nop
  407039:	mov    ds:0xf3908fff,eax
  40703e:	sub    edx,DWORD PTR [ebp+0x11]
  407041:	adc    al,0xe8
  407043:	cmp    DWORD PTR ds:0x591b72ef,ebx
  407049:	push   ds
  40704a:	sub    eax,0x70b15649
  40704f:	mov    ds:0x7e9db4ed,eax
  407054:	aad    0xa1
  407056:	push   0xffffff82
  407058:	add    BYTE PTR [esi+0x35],0x1c
  40705c:	test   BYTE PTR [eax-0x2],dh
  40705f:	leave  
  407060:	or     BYTE PTR [ecx],ah
  407062:	pusha  
  407063:	rol    BYTE PTR [edx],0xd
  407066:	into   
  407067:	arpl   WORD PTR ds:0x226204f4,bp
  40706d:	cmp    al,0xa6
  40706f:	lock loope 0x40706e
  407072:	(bad)  
  407073:	aam    0x3
  407075:	sahf   
  407076:	or     dh,bl
  407078:	pop    ebx
  407079:	ja     0x40706d
  40707b:	jecxz  0x407046
  40707d:	inc    ecx
  40707e:	fld    DWORD PTR [edx-0xa]
  407081:	jbe    0x4070b5
  407083:	div    BYTE PTR [esi]
  407085:	push   esi
  407086:	jnp    0x4070db
  407088:	adc    ch,dl
  40708a:	fcom   DWORD PTR [esi+0x4f]
  40708d:	push   0x7e746373
  407092:	(bad)  
  407093:	add    bl,ch
  407095:	push   edi
  407096:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407097:	jmp    0x58d551f
  40709c:	js     0x40704b
  40709e:	enter  0xd51d,0x97
  4070a2:	cmc    
  4070a3:	jnp    0x4070a2
  4070a5:	push   edi
  4070a6:	push   ebx
  4070a7:	push   eax
  4070a8:	mov    ecx,0x66393f8a
  4070ad:	mov    es,WORD PTR cs:[eax-0x37]
  4070b1:	mov    cl,0x9f
  4070b3:	sbb    ah,cl
  4070b5:	xchg   edi,eax
  4070b6:	inc    edx
  4070b7:	outs   dx,BYTE PTR ds:[esi]
  4070b8:	iret   
  4070b9:	loopne 0x407111
  4070bb:	dec    esi
  4070bc:	in     eax,dx
  4070bd:	out    0x5,al
  4070bf:	mov    ecx,0xd443a88c
  4070c4:	jle    0x407067
  4070c6:	sahf   
  4070c7:	out    0x8f,eax
  4070c9:	call   0xaf57b2b5
  4070ce:	cmp    ebp,DWORD PTR [eax+edi*8-0x47]
  4070d2:	ins    BYTE PTR es:[edi],dx
  4070d3:	pop    esp
  4070d4:	lahf   
  4070d5:	pop    ebp
  4070d6:	push   ds
  4070d7:	les    ebx,FWORD PTR [ebp-0x64]
  4070da:	inc    edx
  4070db:	dec    eax
  4070dc:	test   edi,edx
  4070de:	std    
  4070df:	das    
  4070e0:	push   edx
  4070e1:	mov    edx,0xaf382a9
  4070e6:	ret    
  4070e7:	mov    ch,0xc7
  4070e9:	out    0x7d,eax
  4070eb:	retf   0xd5e5
  4070ee:	ret    
  4070ef:	shr    DWORD PTR [ebx-0xc],1
  4070f2:	push   ds
  4070f3:	retf   0xf612
  4070f6:	sbb    al,0xe1
  4070f8:	mov    esi,0x9f7f098c
  4070fd:	retf   0x6bf0
  407100:	jp     0x407139
  407102:	or     BYTE PTR ds:0xd962f864,al
  407108:	inc    edx
  407109:	fs mov ecx,0xec6c0982
  40710f:	mov    ?,esi
  407111:	xchg   esi,eax
  407112:	or     al,0x6d
  407114:	test   BYTE PTR [ebx+0xaa8683f],dh
  40711a:	(bad)  
  40711b:	mov    al,BYTE PTR [edi+esi*4+0x3c]
  40711f:	or     ebx,esp
  407121:	std    
  407122:	xlat   BYTE PTR ds:[ebx]
  407123:	adc    dh,BYTE PTR [eax-0x1e061a93]
  407129:	inc    ebx
  40712a:	jo     0x4070ad
  40712c:	test   DWORD PTR [esi+esi*4],ebp
  40712f:	add    eax,0x87f8c8f7
  407134:	int3   
  407135:	mov    ah,0x54
  407137:	sbb    bh,bh
  407139:	mov    ?,WORD PTR ds:0xed0fb999
  40713f:	and    al,0x9a
  407141:	mov    cl,0xbd
  407143:	lds    eax,FWORD PTR [ebp-0x57]
  407146:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407148:	icebp  
  407149:	xchg   ebp,eax
  40714a:	cmp    BYTE PTR [ebp-0x41],dh
  40714d:	shr    DWORD PTR ds:0x1e3658a9,0xa3
  407154:	and    ch,BYTE PTR [eax-0x4c]
  407157:	out    0xe1,eax
  407159:	sub    al,0x38
  40715b:	out    0xbf,eax
  40715d:	(bad)  
  40715e:	and    al,0x68
  407160:	mov    edi,0xfdfe8f5b
  407165:	hlt    
  407166:	stos   DWORD PTR es:[edi],eax
  407167:	sub    DWORD PTR [ebp+edi*4-0x2ada8f7e],ebx
  40716e:	mov    esi,DWORD PTR [edi-0x33]
  407171:	mov    es,WORD PTR [edi+0x18]
  407174:	add    ch,0x9d
  407177:	stos   DWORD PTR es:[edi],eax
  407178:	xchg   edx,eax
  407179:	je     0x4070fc
  40717b:	mov    al,0x8a
  40717d:	mov    edi,0xd398dc59
  407182:	mov    DWORD PTR [esp+ebx*2+0xf],ecx
  407186:	aas    
  407187:	dec    ebp
  407188:	mov    WORD PTR [edx+0x38d89570],?
  40718e:	pop    esi
  40718f:	mov    eax,0x74a3b854
  407194:	push   ds
  407195:	dec    edx
  407196:	adc    ah,dh
  407198:	sar    DWORD PTR [esp+ebx*4],cl
  40719b:	mov    ah,0xe0
  40719d:	adc    dl,bh
  40719f:	fwait
  4071a0:	scas   al,BYTE PTR es:[edi]
  4071a1:	in     eax,0xf7
  4071a3:	xor    bl,al
  4071a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071a6:	mov    dh,0x14
  4071a8:	fwait
  4071a9:	stos   BYTE PTR es:[edi],al
  4071aa:	int3   
  4071ab:	sub    cl,al
  4071ad:	popa   
  4071ae:	dec    esp
  4071af:	pop    ss
  4071b0:	mov    dh,0x5e
  4071b2:	retf   
  4071b3:	into   
  4071b4:	rcr    DWORD PTR [edx],cl
  4071b6:	adc    al,0x67
  4071b8:	jecxz  0x407164
  4071ba:	(bad)  
  4071bc:	repz data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071bf:	adc    dh,bh
  4071c1:	sti    
  4071c2:	inc    cx
  4071c4:	cmc    
  4071c5:	adc    BYTE PTR [esi-0x33],0x81
  4071c9:	in     al,dx
  4071ca:	sub    ah,BYTE PTR [ebx]
  4071cc:	cmp    bl,BYTE PTR [esi]
  4071ce:	cdq    
  4071cf:	data16 mov WORD PTR [edx+0x2bcdf20a],ds
  4071d6:	mov    ebp,0x9ff84e30
  4071db:	adc    dl,BYTE PTR [ebp+0xb109696]
  4071e1:	cmp    BYTE PTR [ebx-0x55cb8803],cl
  4071e7:	out    dx,eax
  4071e8:	pop    edx
  4071e9:	dec    ebp
  4071ea:	mov    bh,0x16
  4071ec:	sub    DWORD PTR [eax-0x4f],esi
  4071ef:	fistp  WORD PTR [ebp+0x6b3076f4]
  4071f5:	mov    al,0x61
  4071f7:	dec    ecx
  4071f8:	mov    ch,BYTE PTR [edi-0x3dc1a552]
  4071fe:	cld    
  4071ff:	scas   al,BYTE PTR es:[edi]
  407200:	call   0xc5fd:0x88572eda
  407207:	loop   0x407196
  407209:	rol    BYTE PTR [ebx+ebp*1+0x1066b2e3],0x87
  407211:	dec    esp
  407212:	out    dx,eax
  407213:	daa    
  407214:	add    ebp,ebp
  407216:	test   edi,0x3b5f133d
  40721c:	mov    al,ds:0x3c43c2ff
  407221:	cmp    DWORD PTR [ecx+ecx*1],esi
  407224:	call   0x8ae6:0x47e02a94
  40722b:	mov    edx,0x69e3a220
  407230:	adc    DWORD PTR [esi],edx
  407232:	daa    
  407233:	adc    esp,eax
  407235:	loopne 0x4071c6
  407237:	jmp    0xfb81:0xd2807618
  40723e:	mov    ah,0xaf
  407240:	push   ebx
  407241:	add    eax,eax
  407243:	mov    ebx,0xca9022b0
  407248:	mov    dh,0x8b
  40724a:	ins    BYTE PTR es:[edi],dx
  40724b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40724c:	sub    BYTE PTR [edx+ebx*4-0x6],dh
  407250:	push   eax
  407251:	call   FWORD PTR [edx+0x2b9b7420]
  407257:	push   cs
  407258:	shl    DWORD PTR [edi-0x2dae94e8],cl
  40725e:	popf   
  40725f:	stc    
  407260:	xchg   esi,eax
  407261:	dec    esi
  407262:	add    DWORD PTR [ebp-0x4f8461a7],ebp
  407268:	ins    DWORD PTR es:[edi],dx
  407269:	push   eax
  40726a:	inc    edx
  40726b:	xchg   edx,eax
  40726c:	inc    ebp
  40726d:	js     0x4072d8
  40726f:	ss sub eax,0x475085c2
  407275:	xor    eax,0x5a9b5e84
  40727a:	add    DWORD PTR [edx-0x695f7],esp
  407280:	xchg   esi,eax
  407281:	test   eax,0xc1925ea6
  407286:	test   eax,0x59cbe933
  40728b:	mov    edx,0x5fec1ce5
  407290:	xchg   ebp,eax
  407291:	imul   ebp,DWORD PTR [esi-0x4e0d1cbf],0x33f9337f
  40729b:	rol    BYTE PTR [ecx+0x79b576f2],1
  4072a1:	retf   
  4072a2:	xor    edi,0x9c2b8ae8
  4072a8:	mov    DWORD PTR [esi],edx
  4072aa:	jmp    0x40764b
  4072af:	mov    bl,0xe6
  4072b1:	ds lahf 
  4072b3:	pushf  
  4072b4:	test   al,0xb4
  4072b6:	stc    
  4072b7:	jo     0x4072e0
  4072b9:	inc    edx
  4072ba:	fld    QWORD PTR [edi+0x79]
  4072bd:	jo     0x40729c
  4072bf:	mov    ebp,0xbdbebe4f
  4072c4:	les    edi,FWORD PTR [esi-0x7c75d142]
  4072ca:	mov    dh,cl
  4072cc:	mov    ebp,DWORD PTR [edi+0x56]
  4072cf:	jp     0x407282
  4072d1:	push   edx
  4072d2:	fst    st(2)
  4072d4:	cmp    edi,ebp
  4072d6:	rcl    DWORD PTR [esi],cl
  4072d8:	lds    ebp,FWORD PTR [edx]
  4072da:	daa    
  4072db:	mov    ds:0x87882162,al
  4072e0:	in     al,0x6d
  4072e2:	push   ebp
  4072e3:	loopne 0x407277
  4072e5:	push   ss
  4072e6:	mov    esi,0x97501b45
  4072eb:	shl    BYTE PTR [ecx+0x3e],1
  4072ee:	cld    
  4072ef:	scas   al,BYTE PTR es:[edi]
  4072f0:	retf   
  4072f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4072f2:	imul   ebp,ecx,0x874b4257
  4072f8:	mov    eax,ds:0x87b7f74c
  4072fd:	fadd   QWORD PTR [edx-0xd]
  407300:	cmp    al,0xdb
  407302:	add    esp,DWORD PTR [esi]
  407304:	pop    ebx
  407305:	cld    
  407306:	out    0x65,eax
  407308:	mov    ds:0xee0c0e4c,eax
  40730d:	imul   eax,DWORD PTR [ebx+0x22],0x76382f35
  407314:	loope  0x40732f
  407316:	adc    BYTE PTR [esi+0x4],0x20
  40731a:	ins    DWORD PTR es:[edi],dx
  40731b:	in     al,dx
  40731c:	ret    0x3ee5
  40731f:	popa   
  407320:	mov    bl,0x1f
  407322:	xchg   dh,ah
  407324:	mov    dl,0xb6
  407326:	jecxz  0x40739e
  407328:	aam    0xc2
  40732a:	jmp    0xc4ae:0x7a835976
  407331:	push   ecx
  407332:	stos   BYTE PTR es:[edi],al
  407333:	rcr    DWORD PTR [ebx],0x74
  407336:	adc    BYTE PTR [esi+ecx*1-0x1],cl
  40733a:	mov    bh,0xdd
  40733c:	aam    0x5
  40733e:	ins    DWORD PTR es:[edi],dx
  40733f:	ins    BYTE PTR es:[edi],dx
  407340:	inc    esp
  407341:	dec    esp
  407342:	icebp  
  407343:	test   al,0xf8
  407345:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407346:	mov    ds:0xf9992c9e,eax
  40734b:	jle    0x40739c
  40734d:	push   esi
  40734e:	aaa    
  40734f:	sbb    edx,DWORD PTR [ebx]
  407351:	popa   
  407352:	xor    BYTE PTR [edi*2+0x2f9e320b],bl
  407359:	adc    al,0x98
  40735b:	mov    cl,0x78
  40735d:	and    al,0x15
  40735f:	lock adc dl,ah
  407362:	xchg   ecx,eax
  407363:	inc    esi
  407364:	retf   
  407365:	adc    al,0xe6
  407367:	bound  edx,QWORD PTR fs:[edi-0x2ded465f]
  40736e:	pop    esi
  40736f:	jmp    0x5c79c61a
  407374:	mov    BYTE PTR ds:0x2645e54e,ah
  40737a:	lods   al,BYTE PTR ds:[esi]
  40737b:	jo     0x40735a
  40737d:	push   DWORD PTR [edi+0x1e]
  407380:	sub    ch,BYTE PTR [eax-0x493c50a]
  407386:	cmp    ah,dh
  407388:	adc    DWORD PTR [edx+0xd5eabd2],ebp
  40738e:	and    DWORD PTR [edx-0x2e],eax
  407391:	shl    DWORD PTR [eax+eax*1],cl
  407394:	xlat   BYTE PTR ds:[ebx]
  407395:	jl     0x407400
  407397:	add    DWORD PTR [esp+esi*2+0x47798b1f],0xb6b06f2a
  4073a2:	loope  0x4073d5
  4073a4:	adc    DWORD PTR [edi+0x586924f9],edx
  4073aa:	sub    DWORD PTR [ebx],esp
  4073ac:	lea    esi,[edx]
  4073ae:	adc    dl,BYTE PTR [eax+0x6c]
  4073b1:	out    0x2b,eax
  4073b3:	es popa 
  4073b5:	call   0xd1583aa9
  4073ba:	mov    WORD PTR [edi+0x161815e3],cs
  4073c0:	dec    esp
  4073c1:	(bad)  
  4073c2:	in     al,0xdc
  4073c4:	or     DWORD PTR [edi],eax
  4073c6:	pop    es
  4073c7:	sbb    bh,BYTE PTR [ecx]
  4073c9:	mov    ebx,0xa5a11f0c
  4073ce:	xchg   esi,eax
  4073cf:	scas   al,BYTE PTR es:[edi]
  4073d0:	push   ebp
  4073d1:	outs   dx,DWORD PTR ds:[esi]
  4073d2:	pop    ebx
  4073d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073d4:	js     0x40740f
  4073d6:	push   es
  4073d7:	js     0x407396
  4073d9:	mov    bl,0x8a
  4073db:	in     al,0xd6
  4073dd:	mov    ebp,0x8ffc4362
  4073e2:	push   edx
  4073e3:	nop
  4073e4:	lods   al,BYTE PTR ds:[esi]
  4073e5:	mov    ds:0xd30ada0d,eax
  4073ea:	fwait
  4073eb:	stc    
  4073ec:	test   BYTE PTR [eax+0x1600c3d7],ah
  4073f2:	adc    eax,0xcd9b9c0a
  4073f7:	jmp    0x29acc6ae
  4073fc:	jnp    0x4073d9
  4073fe:	and    bl,ah
  407400:	mov    edi,0x8c479cc6
  407405:	inc    edi
  407406:	daa    
  407407:	sub    esp,edi
  407409:	inc    eax
  40740a:	ror    BYTE PTR ds:0x3115aaed,0x7a
  407411:	jb     0x407423
  407413:	mov    edx,0x6a55f697
  407418:	xchg   ebx,eax
  407419:	das    
  40741a:	cdq    
  40741b:	fidivr DWORD PTR [ebx]
  40741d:	sbb    ebx,0x12
  407420:	call   FWORD PTR [edx-0x7b852d08]
  407426:	out    dx,eax
  407427:	xchg   esi,eax
  407428:	ja     0x407462
  40742a:	stos   BYTE PTR es:[edi],al
  40742b:	sub    eax,0xb5f14566
  407430:	sbb    al,0x4
  407432:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407433:	mov    al,0x7c
  407435:	enter  0x98e6,0x6b
  407439:	es repz repnz loopne 0x40741a
  40743e:	sbb    BYTE PTR [ebx+ecx*1],dh
  407441:	sbb    cl,al
  407443:	sti    
  407444:	inc    esp
  407445:	cmp    al,0x26
  407447:	mul    bh
  407449:	pushf  
  40744a:	dec    esp
  40744b:	retf   
  40744c:	xlat   BYTE PTR ds:[ebx]
  40744d:	rcr    DWORD PTR [ecx-0x2d],0xe2
  407451:	mov    esp,DWORD PTR [esp+ecx*2+0x1b8bce23]
  407458:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407459:	adc    al,0x4e
  40745b:	dec    ecx
  40745c:	(bad)  
  40745d:	add    edi,DWORD PTR [ebx+0x6c73b3f5]
  407463:	dec    ecx
  407464:	mov    dl,0x9b
  407466:	or     esp,DWORD PTR [edi+0x7a864905]
  40746c:	pop    esi
  40746d:	or     dl,bl
  40746f:	cdq    
  407470:	mov    ah,BYTE PTR [edi]
  407472:	(bad)  
  407473:	retf   
  407474:	dec    eax
  407475:	push   edx
  407476:	jns    0x407473
  407478:	mov    ds,edi
  40747a:	ins    DWORD PTR es:[edi],dx
  40747b:	stc    
  40747c:	jmp    0xa1aa:0x803f26a4
  407483:	or     eax,0x2c55efdb
  407488:	xchg   esp,eax
  407489:	push   es
  40748a:	idiv   BYTE PTR [esi+0x2fad324d]
  407490:	(bad)
  407493:	or     al,bl
  407495:	mov    edi,0x3f7b45dd
  40749a:	(bad)  
  40749b:	arpl   WORD PTR [ebx+0x779a6938],ax
  4074a1:	stos   BYTE PTR es:[edi],al
  4074a2:	jo     0x407427
  4074a4:	outs   dx,BYTE PTR ds:[esi]
  4074a5:	adc    DWORD PTR [eax+0x27af60a5],eax
  4074ab:	inc    eax
  4074ac:	mov    ebp,0x817ea36d
  4074b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074b2:	fldenv [edi-0x2efcfe38]
  4074b8:	sub    DWORD PTR [edx+0x66255015],edx
  4074be:	arpl   WORD PTR [ebp+0x4afc9585],bp
  4074c4:	outs   dx,BYTE PTR ds:[esi]
  4074c5:	ins    DWORD PTR es:[edi],dx
  4074c6:	cmp    eax,0x9d254d25
  4074cb:	mov    ds:0xc97f0fc0,eax
  4074d0:	sbb    DWORD PTR [ecx-0x2705b575],0xacc2fb4
  4074da:	jnp    0x407544
  4074dc:	jge    0x4074e2
  4074de:	and    BYTE PTR [eax],bl
  4074e0:	mov    ebx,ds
  4074e2:	aas    
  4074e3:	push   edx
  4074e4:	mov    ch,0x62
  4074e6:	jg     0x407542
  4074e8:	mov    BYTE PTR [edx+0x267320c9],al
  4074ee:	sbb    esp,DWORD PTR [ecx]
  4074f0:	mov    ds:0x465eed5b,eax
  4074f5:	das    
  4074f6:	xchg   edx,eax
  4074f7:	(bad)  [ebx-0x37]
  4074fa:	fwait
  4074fb:	pop    ebp
  4074fc:	int    0x7
  4074fe:	scas   eax,DWORD PTR es:[edi]
  4074ff:	mov    ds:0x5f6da205,eax
  407504:	(bad)  
  407505:	mov    ch,0x12
  407507:	adc    al,0x34
  407509:	pop    esp
  40750a:	aas    
  40750b:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40750d:	pop    edi
  40750e:	jbe    0x40753a
  407510:	rol    BYTE PTR [edx],1
  407512:	enter  0xfc74,0xf9
  407516:	xor    bl,BYTE PTR [ecx-0x1778e88d]
  40751c:	jns    0x407562
  40751e:	xor    dh,BYTE PTR [eax]
  407520:	cmp    edi,DWORD PTR [edi+ebp*1+0x156a32d7]
  407527:	jnp    0x4074f0
  407529:	into   
  40752a:	ror    BYTE PTR [ebx],cl
  40752c:	and    DWORD PTR [edx+0x43f4b233],0x34130e77
  407536:	pop    esi
  407537:	shr    DWORD PTR [edi+0x74],1
  40753a:	ja     0x40750f
  40753c:	and    BYTE PTR [ebx-0x7c],bl
  40753f:	inc    ebp
  407540:	mov    dl,0xe2
  407542:	daa    
  407543:	and    esi,edi
  407545:	or     DWORD PTR [ebx+0x7df0b755],ebp
  40754b:	or     BYTE PTR [edx-0x740233c9],0xbe
  407552:	jle    0x407552
  407554:	fwait
  407555:	mov    al,ds:0xe3f5dbf4
  40755a:	jmp    0x84f91fc3
  40755f:	xchg   DWORD PTR [esi+0x697a5eb5],edx
  407565:	ret    0x7f95
  407568:	add    edx,DWORD PTR [edx]
  40756a:	sbb    al,ch
  40756c:	(bad)  
  40756e:	mov    dh,0x74
  407570:	dec    ebp
  407571:	(bad)  
  407572:	aad    0xaa
  407574:	dec    ecx
  407575:	fild   DWORD PTR ds:0x1538a07
  40757b:	mov    ds:0xcef0b1f5,al
  407580:	hlt    
  407581:	arpl   WORD PTR [eax-0x60],ax
  407584:	lods   eax,DWORD PTR ds:[esi]
  407585:	ret    0x5e3c
  407588:	cmp    ecx,ebx
  40758a:	adc    edi,eax
  40758c:	jmp    0xc451a246
  407591:	jno    0x407560
  407593:	daa    
  407594:	push   esp
  407595:	mov    eax,0xe02ca3dd
  40759a:	push   ss
  40759b:	mul    edi
  40759d:	sahf   
  40759e:	js     0x407578
  4075a0:	iret   
  4075a1:	div    DWORD PTR [edx+edi*4+0x71]
  4075a5:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4075a7:	cdq    
  4075a8:	jle    0x407621
  4075aa:	sub    ch,dl
  4075ac:	sub    bh,BYTE PTR [ebx-0x6b]
  4075af:	call   0x5bb83e19
  4075b4:	push   ss
  4075b5:	dec    eax
  4075b6:	mov    cl,0x7f
  4075b8:	adc    DWORD PTR [ecx+ecx*4+0x17],ebp
  4075bc:	sub    ebx,esi
  4075be:	cld    
  4075bf:	scas   eax,DWORD PTR es:[edi]
  4075c0:	mov    esp,0x989a7e19
  4075c5:	inc    ecx
  4075c6:	int3   
  4075c7:	and    al,0x5b
  4075c9:	sbb    DWORD PTR [ebx],esp
  4075cb:	pop    ds
  4075cc:	jo     0x4075dc
  4075ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4075cf:	adc    eax,0xeb5eb78f
  4075d4:	outs   dx,DWORD PTR ds:[esi]
  4075d5:	(bad)  
  4075d7:	clc    
  4075d8:	aam    0x27
  4075da:	push   0x2a
  4075dc:	sub    eax,0x417fbca5
  4075e1:	dec    ebx
  4075e2:	fdivrp st(2),st
  4075e4:	and    eax,ebx
  4075e6:	inc    edx
  4075e7:	push   ebx
  4075e8:	hlt    
  4075e9:	cwde   
  4075ea:	mov    cl,0xd5
  4075ec:	xor    BYTE PTR [ebp+ebp*4+0x6895a6eb],bl
  4075f3:	push   esi
  4075f4:	xor    al,BYTE PTR [ecx-0x62aaadd9]
  4075fa:	or     eax,0x804a3553
  4075ff:	gs cs cwde 
  407602:	mov    ebx,0xe1507553
  407607:	xchg   DWORD PTR [ecx],esp
  407609:	push   0x8ea442a2
  40760e:	xor    al,0xda
  407610:	ins    BYTE PTR es:[edi],dx
  407611:	outs   dx,DWORD PTR ds:[esi]
  407612:	or     edx,DWORD PTR [eax+edi*8-0x5f9191fd]
  407619:	lods   al,BYTE PTR ds:[esi]
  40761a:	stos   BYTE PTR es:[edi],al
  40761b:	mov    al,0xe
  40761d:	fadd   QWORD PTR [ebx+0x5b588e0]
  407623:	add    dl,bl
  407625:	xor    bh,BYTE PTR [esi]
  407627:	call   0xf7edb650
  40762c:	popf   
  40762d:	stos   DWORD PTR es:[edi],eax
  40762e:	xor    eax,0xdb09e5cc
  407633:	int3   
  407634:	mov    al,ds:0x2a03d8d4
  407639:	lahf   
  40763a:	xor    DWORD PTR [ebp-0xa],0xb960642a
  407641:	ret    0x8630
  407644:	fild   QWORD PTR [esi+eiz*4-0x7]
  407648:	mov    ds:0x7e89eb7e,eax
  40764d:	add    al,0xe9
  40764f:	xchg   ebx,eax
  407650:	or     eax,0x458b0000
  407655:	fadd   QWORD PTR [ebx]
  407657:	inc    ebp
  407658:	cld    
  407659:	mov    DWORD PTR [ebp-0x28],eax
  40765c:	mov    eax,DWORD PTR [ebp-0x28]
  40765f:	mov    eax,DWORD PTR [ebp-0x4]
  407662:	mov    eax,DWORD PTR [ebp-0x28]
  407665:	mov    eax,DWORD PTR [eax+0xc]
  407668:	mov    edx,DWORD PTR [ebp-0x4]
  40766b:	movzx  eax,WORD PTR [edx+eax*1]
  40766f:	cdq    
  407670:	shld   edx,eax,0x2
  407674:	xor    edx,ecx
  407676:	mov    DWORD PTR [ebp+0xc],edx
  407679:	jmp    0x407a1a
  40767e:	sbb    BYTE PTR [edi-0x2f],cl
  407681:	pop    esi
  407682:	call   0x3e77:0x3eb7bc64
  407689:	(bad)  [eax]
  40768b:	adc    dh,al
  40768d:	iret   
  40768e:	mov    esi,0xbdbebe57
  407693:	les    edi,FWORD PTR [esi+0x7d27adbe]
  407699:	ret    
  40769a:	pushf  
  40769b:	nop
  40769c:	sub    cl,dl
  40769e:	fist   DWORD PTR [ecx-0x71]
  4076a1:	(bad)
  4076a6:	mov    BYTE PTR [ebx+eiz*8+0x4],bl
  4076aa:	cmp    BYTE PTR [esi],ch
  4076ac:	push   0xfffffffb
  4076ae:	out    dx,al
  4076af:	push   ds
  4076b0:	dec    esp
  4076b1:	adc    DWORD PTR [ecx-0x7a],ebx
  4076b4:	add    eax,0x873a0c69
  4076b9:	stc    
  4076ba:	push   edi
  4076bb:	cli    
  4076bc:	or     al,0x4e
  4076be:	nop
  4076bf:	js     0x4076a7
  4076c1:	pop    edi
  4076c2:	loopne 0x40766f
  4076c4:	(bad)  
  4076c5:	mov    ecx,0x4947bc0a
  4076ca:	xor    BYTE PTR [edx-0x1208176e],0x70
  4076d1:	mov    ah,BYTE PTR [esi-0x25ee8594]
  4076d7:	dec    ecx
  4076d8:	sbb    cl,BYTE PTR [edx+0x170e2d19]
  4076de:	push   ecx
  4076df:	and    eax,0x82c9a162
  4076e4:	or     ebp,DWORD PTR [edx-0x1a88e749]
  4076ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4076eb:	mov    ?,WORD PTR [edx+0x46]
  4076ee:	call   0xd6c8b577
  4076f3:	pop    edi
  4076f4:	push   esi
  4076f5:	mov    cl,0xee
  4076f7:	stos   DWORD PTR es:[edi],eax
  4076f8:	or     ah,ah
  4076fa:	shl    BYTE PTR [edx+eiz*8],cl
  4076fd:	xor    DWORD PTR [ecx+eiz*4],0x942afc25
  407704:	adc    al,0xcc
  407706:	cmp    ch,BYTE PTR [edx]
  407708:	mov    dh,0xe9
  40770a:	cmp    bh,BYTE PTR [esi+0xa]
  40770d:	lock mov esp,0x8ded730f
  407713:	sbb    edi,esp
  407715:	inc    ebx
  407716:	add    al,BYTE PTR [ecx+0x291bffdf]
  40771c:	mov    esp,eax
  40771e:	mov    es,WORD PTR [ebx+0x3c]
  407721:	scas   al,BYTE PTR es:[edi]
  407722:	dec    edx
  407723:	bound  esp,QWORD PTR [eax+0x1daeb26b]
  407729:	pop    ds
  40772a:	inc    edx
  40772b:	aaa    
  40772c:	push   0x7c027d79
  407731:	push   0x990e816d
  407736:	ins    DWORD PTR es:[edi],dx
  407737:	scas   eax,DWORD PTR es:[edi]
  407738:	lods   eax,DWORD PTR ds:[esi]
  407739:	popa   
  40773a:	xchg   ebp,eax
  40773b:	mov    ds:0xc7c5cb39,eax
  407740:	jg     0x4077a6
  407742:	and    cl,BYTE PTR [ecx+0x27]
  407745:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407746:	mov    dh,0xa7
  407748:	nop
  407749:	loopne 0x4076ce
  40774b:	lea    ecx,[eax]
  40774d:	outs   dx,DWORD PTR ds:[esi]
  40774e:	adc    ebx,esp
  407750:	(bad)
  407753:	mov    bh,0xaf
  407755:	xchg   edx,ebp
  407757:	jmp    0xbdee233b
  40775c:	xor    bh,bl
  40775e:	repnz aam 0xe5
  407761:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  407763:	cdq    
  407764:	lock pop ss
  407766:	fisttp DWORD PTR [esi-0xa]
  407769:	aas    
  40776a:	push   ecx
  40776b:	mov    BYTE PTR [edi],dh
  40776d:	add    eax,0x2a36da87
  407772:	dec    esp
  407773:	jns    0x4077d4
  407775:	jne    0x4077e9
  407777:	or     eax,0x8cae3dfa
  40777c:	(bad)  
  40777d:	xchg   edi,eax
  40777e:	jge    0x407794
  407780:	and    eax,ebx
  407782:	cld    
  407783:	add    eax,0x2e22c2c7
  407788:	sar    DWORD PTR gs:[edx+0x3b141d87],0x15
  407790:	nop
  407791:	ds dec esi
  407793:	sbb    dl,BYTE PTR gs:[edx]
  407796:	push   ecx
  407797:	out    0xbe,eax
  407799:	xlat   BYTE PTR ds:[ebx]
  40779a:	cmp    dl,cl
  40779c:	mov    ebx,0xd7202a52
  4077a1:	dec    edi
  4077a2:	fadd   QWORD PTR [ecx-0x71]
  4077a5:	inc    esi
  4077a6:	fist   WORD PTR [edi]
  4077a8:	pop    esi
  4077a9:	pop    ebp
  4077aa:	es cmp al,cl
  4077ad:	mov    WORD PTR [esi],gs
  4077af:	and    ecx,DWORD PTR [ebx-0x9615d6e]
  4077b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077b6:	call   0xbbfb:0x4f433bb3
  4077bd:	test   ebx,ebp
  4077bf:	jae    0x407786
  4077c1:	hlt    
  4077c2:	sbb    eax,0xfcbad05
  4077c7:	sub    ah,cl
  4077c9:	ret    0x7ea7
  4077cc:	ret    
  4077cd:	cmp    al,0x80
  4077cf:	retf   0x3eb0
  4077d2:	aad    0xd6
  4077d4:	nop
  4077d5:	les    edx,FWORD PTR [ecx]
  4077d7:	sti    
  4077d8:	int    0xee
  4077da:	pop    edi
  4077db:	leave  
  4077dc:	cmp    al,dh
  4077de:	push   0x14
  4077e0:	inc    esi
  4077e1:	pop    esi
  4077e3:	xor    ah,BYTE PTR [ebp+0x489f81f5]
  4077e9:	std    
  4077ea:	xlat   BYTE PTR ds:[ebx]
  4077eb:	mov    dl,0xdc
  4077ed:	sub    bh,al
  4077ef:	mov    dl,0x33
  4077f1:	dec    edx
  4077f2:	or     DWORD PTR ds:0x46215810,ebp
  4077f8:	out    dx,al
  4077f9:	add    ebp,DWORD PTR [esi-0x72]
  4077fc:	xchg   ecx,eax
  4077fd:	adc    esi,DWORD PTR [ecx-0x203681d5]
  407803:	fisttp QWORD PTR [ecx+0x33c77e93]
  407809:	jmp    0x407791
  40780b:	data16 (bad) 
  40780e:	es mov al,0x52
  407811:	add    eax,0x67cb587a
  407816:	mov    es,edi
  407818:	fidivr WORD PTR [edx]
  40781a:	mov    ds:0xbd82c848,al
  40781f:	sti    
  407820:	std    
  407821:	jo     0x407830
  407823:	lods   al,BYTE PTR ds:[esi]
  407824:	adc    DWORD PTR [ecx+0x20e457a2],ebp
  40782a:	addr16 ret 0x2fbc
  40782e:	cmp    edi,esp
  407830:	jne    0x407856
  407832:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407833:	scas   al,BYTE PTR es:[edi]
  407834:	cwde   
  407835:	xchg   edx,eax
  407836:	loope  0x4077fa
  407838:	in     al,dx
  407839:	lods   al,BYTE PTR ds:[esi]
  40783a:	(bad)  
  40783b:	lods   al,BYTE PTR ds:[esi]
  40783c:	mov    al,0x2c
  40783e:	pop    edi
  40783f:	fcomp  QWORD PTR [eiz*1-0x6e1d18eb]
  407846:	and    BYTE PTR [ecx-0x788e4d94],bh
  40784c:	(bad)  
  40784d:	shr    DWORD PTR [eax-0x49],1
  407850:	push   edx
  407851:	inc    edi
  407852:	in     eax,dx
  407853:	retf   
  407854:	jle    0x40788f
  407856:	sbb    ecx,DWORD PTR [ebx]
  407858:	call   0xd0eab91a
  40785d:	lea    edi,[edi]
  40785f:	arpl   WORD PTR [edi+0x1ff29b52],bp
  407865:	pop    esi
  407866:	rol    DWORD PTR [ebx+0x7df63443],1
  40786c:	push   eax
  40786d:	push   ebx
  40786e:	add    eax,0x9dd2f87f
  407873:	out    0xe3,al
  407875:	jbe    0x40783a
  407877:	loop   0x4077fe
  407879:	jecxz  0x40787b
  40787b:	sahf   
  40787c:	shl    DWORD PTR [ebx+eax*8],0xd
  407880:	std    
  407881:	xchg   BYTE PTR [edx+0x56],bh
  407884:	pop    ecx
  407885:	sbb    BYTE PTR [ebx+edx*8+0x4f],dl
  407889:	mov    eax,ds:0x2ac5b2f0
  40788e:	xchg   ecx,eax
  40788f:	pop    eax
  407890:	or     eax,0xae637875
  407895:	imul   ebx,DWORD PTR [esp+ebp*4],0x5a869ac4
  40789c:	int    0x47
  40789e:	repnz mov bh,0x35
  4078a1:	pushf  
  4078a2:	es jne 0x40788b
  4078a5:	inc    edi
  4078a6:	xor    BYTE PTR [edx],dl
  4078a8:	dec    edi
  4078a9:	sub    eax,0x562c133e
  4078ae:	inc    esp
  4078af:	push   es
  4078b0:	xchg   WORD PTR [ecx+0x7d],ax
  4078b4:	inc    ebp
  4078b5:	fisubr DWORD PTR [esi-0x2896ac48]
  4078bb:	loopne 0x40792c
  4078bd:	outs   dx,BYTE PTR ds:[esi]
  4078be:	pop    esi
  4078bf:	adc    eax,0x4c5bfdaa
  4078c4:	aaa    
  4078c5:	pushf  
  4078c6:	or     DWORD PTR [esi+0x1e],0x7a
  4078ca:	call   0x18ef31b5
  4078cf:	mov    gs,ebp
  4078d1:	data16 test BYTE PTR [ecx],dl
  4078d4:	shl    BYTE PTR [ebx],1
  4078d6:	sbb    bl,BYTE PTR [edi-0x4e]
  4078d9:	push   edi
  4078da:	cmc    
  4078db:	addr16 mov cs:0xe231,eax
  4078e0:	xor    al,0x3
  4078e2:	pop    esi
  4078e3:	mov    BYTE PTR [ebp+0x54],ah
  4078e6:	dec    eax
  4078e7:	pop    ds
  4078e8:	xor    al,0xff
  4078ea:	mov    cl,0xd0
  4078ec:	mov    eax,0x46b9577d
  4078f1:	mov    edi,DWORD PTR [eax+0x34b3ed4a]
  4078f7:	nop
  4078f8:	inc    esi
  4078f9:	retf   
  4078fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4078fb:	cld    
  4078fc:	push   0xfffffff3
  4078fe:	push   esp
  4078ff:	jecxz  0x407957
  407901:	cmc    
  407902:	in     al,0xe3
  407904:	push   ebx
  407905:	cmp    eax,0x6c050298
  40790a:	pop    ss
  40790b:	test   eax,0xb6dd679
  407910:	sahf   
  407911:	cwde   
  407912:	in     al,0xbb
  407914:	adc    dl,BYTE PTR [eax+0x13514e67]
  40791a:	scas   al,BYTE PTR es:[edi]
  40791b:	mov    ecx,0x18539347
  407920:	or     BYTE PTR [esi-0x70c953df],ch
  407926:	mov    ?,WORD PTR [esi]
  407928:	je     0x4078cb
  40792a:	test   esi,esi
  40792c:	adc    al,0x6f
  40792e:	inc    ebp
  40792f:	das    
  407930:	gs pushf 
  407932:	repnz mov eax,ds:0xad045bac
  407938:	dec    eax
  407939:	or     cl,BYTE PTR [ebx+0x5d]
  40793c:	std    
  40793d:	stos   DWORD PTR es:[edi],eax
  40793e:	adc    al,0x12
  407940:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407941:	jl     0x40799f
  407943:	int    0xd5
  407945:	sub    ebp,DWORD PTR ds:0xfb5ac491
  40794b:	mov    esp,DWORD PTR ds:0x99461d25
  407951:	adc    edx,DWORD PTR ds:[ebp+edx*2+0x2c]
  407956:	test   eax,0xc5d656d7
  40795b:	mov    ch,0x44
  40795d:	test   eax,0xac298da3
  407962:	xor    DWORD PTR [edi-0x15],0xd
  407966:	clc    
  407967:	dec    ebx
  407968:	xlat   BYTE PTR ds:[ebx]
  407969:	or     edx,DWORD PTR [edx-0x29b4fdc6]
  40796f:	xlat   BYTE PTR ds:[ebx]
  407970:	xor    DWORD PTR [ecx+edx*4+0x3a495368],esi
  407977:	scas   eax,DWORD PTR es:[edi]
  407978:	sti    
  407979:	add    al,0xc2
  40797b:	and    al,BYTE PTR [eax]
  40797d:	shr    BYTE PTR [eax],0x5b
  407980:	mov    dl,0x4e
  407982:	lds    ebp,FWORD PTR ds:[ebp-0x4d]
  407986:	inc    ecx
  407987:	xor    DWORD PTR ds:0xafd9d30,ecx
  40798d:	je     0x407a0e
  40798f:	loopne 0x4079fb
  407991:	xchg   ebx,eax
  407992:	sub    BYTE PTR [edx],ah
  407994:	xchg   esp,eax
  407995:	xchg   esp,eax
  407996:	ret    0xe920
  407999:	jmp    0x4079ed
  40799b:	mov    ebx,0xafdb21b
  4079a0:	in     al,dx
  4079a1:	fwait
  4079a2:	in     eax,dx
  4079a3:	push   0xfffffffe
  4079a5:	ficomp DWORD PTR [edi-0x3a]
  4079a8:	gs jl  0x407983
  4079ab:	je     0x407a12
  4079ad:	call   0x465f:0xbb0626cd
  4079b4:	stc    
  4079b5:	jmp    0x40799e
  4079b7:	repz xchg esi,eax
  4079b9:	rcr    ch,cl
  4079bb:	pop    ebp
  4079bc:	int3   
  4079bd:	mov    esi,0xf021d6e3
  4079c2:	aad    0xdd
  4079c4:	jns    0x4079cc
  4079c6:	jp     0x40796c
  4079c8:	mov    cl,0x28
  4079ca:	(bad)  
  4079cb:	ins    DWORD PTR es:[edi],dx
  4079cc:	pushf  
  4079cd:	mov    dh,0x30
  4079cf:	push   edi
  4079d0:	push   ebp
  4079d1:	jl     0x407a3e
  4079d3:	xchg   ebx,eax
  4079d4:	and    edi,DWORD PTR [eax]
  4079d6:	ss hlt 
  4079d8:	cmp    BYTE PTR [edi],cl
  4079da:	int    0xbe
  4079dc:	(bad)  
  4079dd:	xchg   esi,eax
  4079de:	outs   dx,DWORD PTR ds:[esi]
  4079df:	in     al,dx
  4079e0:	add    ah,cl
  4079e2:	inc    ebp
  4079e3:	jmp    0x7779:0xa5ce65d
  4079ea:	loopne 0x4079d0
  4079ec:	push   ss
  4079ed:	jbe    0x4079c5
  4079ef:	adc    eax,0x4f169d1e
  4079f4:	cs mov al,0x72
  4079f7:	dec    ebp
  4079f8:	and    DWORD PTR [ecx+0x7864b17],esp
  4079fe:	icebp  
  4079ff:	and    ebp,edi
  407a01:	xchg   BYTE PTR [edx],dl
  407a03:	pop    es
  407a04:	or     ah,0x33
  407a07:	cli    
  407a08:	enter  0x6f77,0x74
  407a0c:	ret    
  407a0d:	mov    WORD PTR [edi-0x6c],ss
  407a10:	dec    esp
  407a11:	push   eax
  407a12:	pushf  
  407a13:	inc    edi
  407a14:	repz pop eax
  407a16:	imul   esi,DWORD PTR [edi+0x558b8d7d],0x2e0c1a8
  407a20:	mov    DWORD PTR [ebp+0x10],edx
  407a23:	mov    edx,DWORD PTR [ebp-0x54]
  407a26:	xor    eax,0xcb79b576
  407a2b:	mov    DWORD PTR [ebp+0x14],edx
  407a2e:	cmp    eax,DWORD PTR [ebp+0x10]
  407a31:	jne    0x408352
  407a37:	mov    eax,edx
  407a39:	cmp    DWORD PTR [ebp+0xc],eax
  407a3c:	jne    0x408352
  407a42:	mov    DWORD PTR [ebp+0x8],0xcb79b576
  407a49:	mov    DWORD PTR [ebp+0xc],ecx
  407a4c:	mov    DWORD PTR [ebp-0x60],0xcb79b572
  407a53:	mov    DWORD PTR [ebp-0x5c],ecx
  407a56:	mov    DWORD PTR [ebp-0x48],0xcb79b57e
  407a5d:	mov    DWORD PTR [ebp-0x44],ecx
  407a60:	mov    DWORD PTR [ebp-0x38],0xcb79b57a
  407a67:	mov    DWORD PTR [ebp-0x34],ecx
  407a6a:	mov    eax,DWORD PTR [ebp+0x8]
  407a6d:	jmp    0x407e0e
  407a72:	cmp    eax,0x2444c2a4
  407a77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a78:	inc    eax
  407a79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a7a:	ret    0x7a7b
  407a7d:	xchg   edx,eax
  407a7e:	mov    ds:0xbd90ddb2,al
  407a83:	pop    ebp
  407a84:	mov    esi,0xbec4bdbe
  407a89:	mov    esi,0xc447a587
  407a8e:	std    
  407a8f:	icebp  
  407a90:	and    eax,0xbea9f4be
  407a95:	pop    esp
  407a96:	out    0xc,eax
  407a98:	or     BYTE PTR [ebx],ah
  407a9a:	lods   eax,DWORD PTR ds:[esi]
  407a9b:	addr16 ficomp DWORD PTR [bx+di]
  407a9f:	add    BYTE PTR [ebp-0x1fbe4c35],al
  407aa5:	push   ds
  407aa6:	out    0x9e,al
  407aa8:	je     0x407a63
  407aaa:	push   ebp
  407aab:	sub    BYTE PTR [edx-0x796883bc],dl
  407ab1:	jge    0x407a56
  407ab3:	mov    al,0xe7
  407ab5:	inc    esp
  407ab6:	in     eax,0x47
  407ab8:	adc    al,0x60
  407aba:	out    0x9a,eax
  407abc:	pushf  
  407abd:	out    0x2c,al
  407abf:	mov    dl,0xf4
  407ac1:	mov    eax,0x1dff078
  407ac6:	sub    DWORD PTR [edx+ebp*1],0xffffffc3
  407aca:	sbb    al,0xca
  407acc:	inc    ebp
  407acd:	pop    esi
  407ace:	xor    DWORD PTR [ebx],ebx
  407ad0:	call   0x812d:0x5ec5c893
  407ad7:	call   0xd2c9:0xd10f5baa
  407ade:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  407ae0:	ficom  WORD PTR [esi-0x42]
  407ae3:	out    dx,eax
  407ae4:	cmp    al,0x9e
  407ae6:	test   BYTE PTR [ecx-0x6b0deaa5],dh
  407aec:	pushf  
  407aed:	and    DWORD PTR [eax+0x27e4f5cd],ecx
  407af3:	outs   dx,BYTE PTR ds:[esi]
  407af4:	(bad)  
  407af6:	xor    ecx,DWORD PTR ds:0x189d4382
  407afc:	loopne 0x407a84
  407afe:	inc    eax
  407aff:	repnz shr bh,1
  407b02:	loope  0x407b01
  407b04:	pop    eax
  407b05:	pop    edi
  407b06:	pop    DWORD PTR [ecx+esi*2+0x357869d8]
  407b0d:	mov    bh,BYTE PTR [eax+0xc]
  407b10:	jle    0x407b6a
  407b12:	and    esp,ebx
  407b14:	inc    ecx
  407b15:	xchg   esp,eax
  407b16:	xor    dl,bh
  407b18:	ss ret 
  407b1a:	xchg   esi,eax
  407b1b:	fstp   TBYTE PTR es:[edi]
  407b1e:	cld    
  407b1f:	lahf   
  407b20:	inc    edi
  407b21:	arpl   ax,bp
  407b23:	test   BYTE PTR [eax],bl
  407b25:	dec    eax
  407b26:	lahf   
  407b27:	fsub   QWORD PTR [ebp-0x63]
  407b2a:	xchg   esp,eax
  407b2b:	and    ch,BYTE PTR [eax-0xc]
  407b2e:	std    
  407b2f:	xchg   edx,eax
  407b30:	mov    esp,DWORD PTR [edx-0x4d]
  407b33:	popf   
  407b34:	in     al,dx
  407b35:	ret    
  407b36:	clc    
  407b37:	jmp    0x407b3b
  407b39:	xchg   DWORD PTR [esi+0x3e7b44bb],esi
  407b3f:	and    eax,0xde19aa93
  407b44:	push   ebx
  407b45:	dec    eax
  407b46:	aaa    
  407b47:	mov    eax,0x98a82dc5
  407b4c:	sbb    eax,0x63cb8fe4
  407b51:	inc    edi
  407b52:	jb     0x407ba7
  407b54:	lds    esi,FWORD PTR [edx+esi*4]
  407b57:	ins    DWORD PTR es:[edi],dx
  407b58:	jbe    0x407b68
  407b5a:	fild   QWORD PTR [eax+0x4ce243e8]
  407b60:	je     0x407b27
  407b62:	xchg   ebx,eax
  407b63:	mov    bh,0x8b
  407b65:	aas    
  407b66:	(bad)  
  407b67:	fsub   QWORD PTR [eax]
  407b69:	xchg   ebp,eax
  407b6a:	ins    DWORD PTR es:[edi],dx
  407b6b:	sub    ebx,DWORD PTR [esi]
  407b6d:	scas   eax,DWORD PTR es:[edi]
  407b6e:	in     eax,dx
  407b6f:	push   esp
  407b70:	retf   
  407b71:	inc    BYTE PTR [esi+0x3b]
  407b74:	inc    eax
  407b75:	pop    ebx
  407b76:	and    bl,BYTE PTR [edx-0x6e5821c5]
  407b7c:	(bad)  
  407b7d:	fnsave [edi]
  407b7f:	dec    ecx
  407b80:	in     eax,dx
  407b81:	call   0xde92:0xc74a3c3c
  407b88:	and    dh,BYTE PTR [esp+ebx*1]
  407b8b:	sbb    BYTE PTR [ebx-0x3b],bl
  407b8e:	iret   
  407b8f:	xor    bl,BYTE PTR [ebp-0x50]
  407b92:	loopne 0x407bab
  407b94:	jmp    0x407ba7
  407b96:	jb     0x407b1d
  407b98:	dec    ebp
  407b99:	retf   
  407b9a:	pop    ss
  407b9b:	popf   
  407b9c:	sti    
  407b9d:	(bad)  
  407b9e:	adc    al,0x70
  407ba0:	pop    ebx
  407ba1:	(bad)  
  407ba3:	xchg   DWORD PTR [ecx-0x29260e8f],esp
  407ba9:	or     eax,0x5ddc42cd
  407bae:	sub    eax,0x65a892ed
  407bb3:	lock and ch,BYTE PTR ds:0xd5caa634
  407bba:	lea    ebx,[esi+0x24]
  407bbd:	mov    edx,DWORD PTR [edi]
  407bbf:	sbb    eax,0x80602714
  407bc4:	pushf  
  407bc5:	fs mov ch,0xc
  407bc8:	stos   DWORD PTR es:[edi],eax
  407bc9:	sahf   
  407bca:	lods   al,BYTE PTR ds:[esi]
  407bcb:	xor    al,0x7f
  407bcd:	inc    eax
  407bce:	test   BYTE PTR [edi+0x224b64dd],cl
  407bd4:	mov    dh,0xd2
  407bd6:	xchg   ebx,eax
  407bd7:	adc    bh,BYTE PTR fs:[edx+0x5]
  407bdb:	xor    BYTE PTR [edx+0x7fb91fb9],bl
  407be1:	fcomp  QWORD PTR [esi+0x7f]
  407be4:	fisttp WORD PTR [esi-0x5d]
  407be7:	cs mov bl,0xb8
  407bea:	sbb    dh,ch
  407bec:	loop   0x407b7c
  407bee:	fimul  WORD PTR [ebp-0x75]
  407bf1:	add    al,0x16
  407bf3:	sbb    ebx,DWORD PTR ds:0x60110cfb
  407bf9:	outs   dx,DWORD PTR ds:[esi]
  407bfa:	xchg   ebx,eax
  407bfb:	mov    eax,ds:0x2bdec69b
  407c00:	cwde   
  407c01:	mov    bh,0x66
  407c03:	xor    edx,DWORD PTR [eax+0x53b256f0]
  407c09:	daa    
  407c0a:	mov    cl,0xaf
  407c0c:	cmc    
  407c0d:	call   0x8adb0cfc
  407c12:	or     DWORD PTR [ebx],0xf5c4e4e1
  407c18:	dec    edi
  407c19:	daa    
  407c1a:	in     eax,0x67
  407c1c:	js     0x407c69
  407c1e:	inc    ebp
  407c1f:	jnp    0x407c02
  407c21:	dec    edx
  407c22:	cmp    BYTE PTR [ebx+0x65aa0862],bl
  407c28:	mov    ebp,0x8e21e052
  407c2d:	pushf  
  407c2e:	and    eax,0xf8cabaf0
  407c33:	mov    edi,0x78fd251c
  407c38:	mov    cl,bh
  407c3a:	add    edx,eax
  407c3c:	inc    ecx
  407c3d:	cmp    ch,dl
  407c3f:	scas   al,BYTE PTR es:[edi]
  407c40:	imul   esp,esp,0x1
  407c43:	add    al,0xb7
  407c45:	or     dh,dl
  407c47:	add    al,0xb4
  407c49:	mov    ds:0x897b1d1d,al
  407c4e:	inc    ebx
  407c4f:	test   al,0x22
  407c52:	mov    bl,BYTE PTR ds:0xd0f225af
  407c58:	fprem1 
  407c5a:	and    BYTE PTR [esi+0x5c],dh
  407c5d:	lahf   
  407c5e:	dec    edx
  407c5f:	push   ebx
  407c60:	or     BYTE PTR ds:0x5b52ee07,bl
  407c66:	(bad)  
  407c67:	jns    0x407c7a
  407c69:	(bad)  
  407c6a:	hlt    
  407c6b:	xchg   esp,eax
  407c6c:	sahf   
  407c6d:	imul   esi,DWORD PTR [esi+esi*1-0x13],0x6f
  407c72:	jmp    0x407cb9
  407c74:	and    dh,BYTE PTR [esi]
  407c76:	xlat   BYTE PTR ds:[ebx]
  407c77:	push   ecx
  407c78:	cmp    al,0xf2
  407c7a:	mov    ebx,0xece840e3
  407c7f:	xor    ch,dh
  407c81:	pop    esi
  407c82:	inc    ecx
  407c83:	addr16 push edx
  407c85:	fcom   DWORD PTR [ebx-0x27302a91]
  407c8b:	xchg   esp,eax
  407c8c:	and    edx,DWORD PTR [eax+0x30]
  407c8f:	(bad)  
  407c90:	retf   0xb5fa
  407c93:	stos   BYTE PTR es:[edi],al
  407c94:	popf   
  407c95:	ins    DWORD PTR es:[edi],dx
  407c96:	fwait
  407c97:	inc    esi
  407c98:	pop    es
  407c99:	in     eax,0xe2
  407c9b:	add    ebx,0xd0b3ad3
  407ca1:	cli    
  407ca2:	in     al,0x12
  407ca4:	pop    es
  407ca5:	fmul   DWORD PTR [eax+0x63]
  407ca8:	xlat   BYTE PTR ds:[ebx]
  407ca9:	mov    dh,0x5f
  407cab:	inc    ebp
  407cac:	mov    edi,DWORD PTR ds:0xeab179a2
  407cb2:	push   cs
  407cb3:	test   al,0xdc
  407cb5:	jmp    0x407cc8
  407cb7:	push   eax
  407cb8:	fwait
  407cb9:	scas   eax,DWORD PTR es:[edi]
  407cba:	sbb    esi,DWORD PTR [ebx-0x43aace32]
  407cc0:	ret    
  407cc1:	sub    DWORD PTR [ebx+edi*2-0x15f2fa76],eax
  407cc8:	cmp    al,0x88
  407cca:	rcr    DWORD PTR [esp+edx*2+0x3],0xd7
  407ccf:	out    dx,al
  407cd0:	ins    DWORD PTR es:[edi],dx
  407cd1:	loope  0x407cac
  407cd3:	ds stos BYTE PTR es:[edi],al
  407cd5:	sub    BYTE PTR [esi-0x5c3a4a4e],bh
  407cdb:	mov    dl,0xc1
  407cdd:	(bad)  
  407cde:	ret    0xe55d
  407ce1:	daa    
  407ce2:	and    esi,eax
  407ce4:	icebp  
  407ce5:	in     al,0x57
  407ce7:	or     al,0x31
  407ce9:	mov    esp,0x4b520b13
  407cee:	inc    esi
  407cef:	sbb    ah,BYTE PTR [edx+0x2e24eaf4]
  407cf5:	jb     0x407d71
  407cf7:	add    BYTE PTR [edi-0x6de35b91],bh
  407cfd:	sbb    ah,BYTE PTR [esi]
  407cff:	arpl   WORD PTR [esi],bp
  407d01:	js     0x407d29
  407d03:	xor    al,0x88
  407d05:	and    eax,0xcaa9720b
  407d0a:	sub    DWORD PTR [esi-0x56],eax
  407d0d:	cmp    ch,bh
  407d0f:	int    0x96
  407d11:	cmc    
  407d12:	call   0x3a890a60
  407d17:	or     eax,0xecc47257
  407d1c:	enter  0x5f2c,0x66
  407d20:	cwde   
  407d21:	dec    esi
  407d22:	inc    ecx
  407d23:	outs   dx,BYTE PTR ds:[esi]
  407d24:	push   edi
  407d25:	pop    es
  407d26:	pop    ecx
  407d27:	lods   al,BYTE PTR ds:[esi]
  407d28:	pop    edx
  407d29:	mov    BYTE PTR [eax-0x326d28bd],al
  407d2f:	test   DWORD PTR [edi+ebp*1],eax
  407d32:	push   0x4f64f566
  407d37:	out    0xf4,eax
  407d39:	jecxz  0x407d60
  407d3b:	inc    ebp
  407d3c:	stos   BYTE PTR es:[edi],al
  407d3d:	outs   dx,DWORD PTR ds:[esi]
  407d3e:	dec    ebp
  407d3f:	jge    0x407d5d
  407d41:	push   eax
  407d42:	xlat   BYTE PTR ds:[ebx]
  407d43:	xor    dl,BYTE PTR [eax+0x1f2b172e]
  407d49:	inc    esi
  407d4a:	cs pop esp
  407d4c:	xor    al,0xc2
  407d4e:	in     eax,0x13
  407d50:	sbb    bl,BYTE PTR [edx-0x6d]
  407d53:	push   eax
  407d54:	test   BYTE PTR [edi+0x68],bl
  407d57:	xchg   ebx,eax
  407d58:	or     DWORD PTR [ecx],esp
  407d5a:	(bad)  
  407d5b:	addr16 xchg ecx,eax
  407d5d:	std    
  407d5e:	aam    0xbd
  407d60:	test   BYTE PTR [edx+0x2ce99db7],dl
  407d66:	adc    ebx,DWORD PTR [eax+ecx*4-0x39b4d704]
  407d6d:	sti    
  407d6e:	stos   BYTE PTR es:[edi],al
  407d6f:	xchg   ecx,eax
  407d70:	or     BYTE PTR [edi],ch
  407d72:	shld   DWORD PTR [ebx+0x5476e034],edi,0x3f
  407d7a:	lds    eax,FWORD PTR [ebx]
  407d7c:	rol    BYTE PTR [edx+0x48d9c4c8],0x8c
  407d83:	ja     0x407d7d
  407d85:	retf   0x66a7
  407d88:	gs and al,0x25
  407d8b:	(bad)  
  407d8c:	jb     0x407e07
  407d8e:	pop    edi
  407d8f:	dec    edi
  407d90:	loope  0x407df9
  407d92:	ror    eax,1
  407d94:	inc    eax
  407d95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d96:	sub    bh,BYTE PTR [eax+0x73]
  407d99:	xchg   edx,eax
  407d9a:	inc    esp
  407d9b:	cdq    
  407d9c:	or     ah,BYTE PTR [eax+ebx*1]
  407d9f:	aad    0xc5
  407da1:	jg     0x407d34
  407da3:	arpl   WORD PTR [ebx],cx
  407da5:	dec    eax
  407da6:	jbe    0x407dbe
  407da8:	push   ebp
  407da9:	mov    esp,0xb81616cf
  407dae:	bnd ret 0x7aef
  407db2:	loop   0x407de1
  407db4:	cmp    DWORD PTR [esi+ebx*4+0x78c10040],edx
  407dbb:	cmp    eax,0x5a71d2fe
  407dc0:	and    al,0x2d
  407dc2:	icebp  
  407dc3:	ins    DWORD PTR es:[edi],dx
  407dc4:	loope  0x407d80
  407dc6:	mov    esi,0xac0d35b3
  407dcb:	xor    BYTE PTR [edx-0x7021715e],bh
  407dd1:	inc    eax
  407dd2:	or     al,0x5a
  407dd4:	sar    ecx,1
  407dd6:	(bad)  
  407dd7:	lds    esp,FWORD PTR [ebx]
  407dd9:	sbb    esi,edx
  407ddb:	fld    DWORD PTR [ebx+0x62a80836]
  407de1:	frstor [esi-0x63f6ad3f]
  407de7:	lods   eax,DWORD PTR ds:[esi]
  407de8:	jnp    0x407e14
  407dea:	fisubr DWORD PTR [ebp+0x1405cc38]
  407df0:	mov    ebp,0x8126e6a3
  407df5:	aad    0x41
  407df7:	pop    ds
  407df8:	je     0x407deb
  407dfa:	and    BYTE PTR [edx],dl
  407dfc:	add    cl,BYTE PTR [ecx-0x6097dd27]
  407e02:	stos   DWORD PTR es:[edi],eax
  407e03:	(bad)  
  407e04:	rol    BYTE PTR [edx-0x1eefec51],1
  407e0a:	dec    edx
  407e0b:	xchg   edx,eax
  407e0c:	adc    eax,0xc4d8b81
  407e11:	shrd   eax,ecx,0x2
  407e15:	shr    ecx,0x2
  407e18:	mov    ecx,DWORD PTR [ebp+0x8]
  407e1b:	mov    edx,DWORD PTR [ebp+0xc]
  407e1e:	xor    eax,edi
  407e20:	shl    ecx,0x1e
  407e23:	xor    edx,edx
  407e25:	or     eax,edx
  407e27:	add    eax,DWORD PTR ds:0x422768
  407e2d:	mov    DWORD PTR [ebp+0x14],eax
  407e30:	mov    eax,DWORD PTR [ebp+0x8]
  407e33:	mov    ecx,DWORD PTR [ebp+0xc]
  407e36:	shrd   eax,ecx,0x2
  407e3a:	shr    ecx,0x2
  407e3d:	mov    ecx,DWORD PTR [ebp+0x8]
  407e40:	mov    edx,DWORD PTR [ebp+0xc]
  407e43:	xor    eax,edi
  407e45:	shl    ecx,0x1e
  407e48:	xor    edx,edx
  407e4a:	or     eax,edx
  407e4c:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  407e50:	mov    eax,DWORD PTR [ebp+0x14]
  407e53:	xor    BYTE PTR [eax],cl
  407e55:	mov    eax,DWORD PTR [ebp-0x60]
  407e58:	mov    ecx,DWORD PTR [ebp-0x5c]
  407e5b:	shrd   eax,ecx,0x2
  407e5f:	shr    ecx,0x2
  407e62:	mov    ecx,DWORD PTR [ebp-0x60]
  407e65:	mov    edx,DWORD PTR [ebp-0x5c]
  407e68:	xor    eax,edi
  407e6a:	shl    ecx,0x1e
  407e6d:	xor    edx,edx
  407e6f:	or     eax,edx
  407e71:	add    eax,DWORD PTR ds:0x422768
  407e77:	mov    DWORD PTR [ebp+0x14],eax
  407e7a:	mov    eax,DWORD PTR [ebp-0x60]
  407e7d:	mov    ecx,DWORD PTR [ebp-0x5c]
  407e80:	shrd   eax,ecx,0x2
  407e84:	shr    ecx,0x2
  407e87:	mov    ecx,DWORD PTR [ebp-0x60]
  407e8a:	mov    edx,DWORD PTR [ebp-0x5c]
  407e8d:	xor    eax,edi
  407e8f:	shl    ecx,0x1e
  407e92:	xor    edx,edx
  407e94:	or     eax,edx
  407e96:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  407e9a:	mov    eax,DWORD PTR [ebp+0x14]
  407e9d:	or     BYTE PTR [eax],cl
  407e9f:	mov    eax,DWORD PTR [ebp-0x48]
  407ea2:	mov    ecx,DWORD PTR [ebp-0x44]
  407ea5:	shrd   eax,ecx,0x2
  407ea9:	shr    ecx,0x2
  407eac:	mov    ecx,DWORD PTR [ebp-0x48]
  407eaf:	mov    edx,DWORD PTR [ebp-0x44]
  407eb2:	xor    eax,edi
  407eb4:	jmp    0x408255
  407eb9:	out    0x23,al
  407ebb:	pop    ss
  407ebc:	jns    0x407ed9
  407ebe:	jns    0x407e6b
  407ec0:	mov    bl,0xaa
  407ec2:	repz ror edi,0x22
  407ec6:	cs fs sahf 
  407ec9:	mov    esi,0xbdbebe65
  407ece:	les    edi,FWORD PTR [esi+0x4db787be]
  407ed4:	mov    DWORD PTR [ebp-0x50d64765],edx
  407eda:	repz mov esp,0x85c74143
  407ee0:	or     DWORD PTR [edx+0x32db5b69],edi
  407ee6:	xchg   edi,eax
  407ee7:	and    dh,BYTE PTR [ecx]
  407ee9:	daa    
  407eea:	or     esi,DWORD PTR [ecx-0x52]
  407eed:	es into 
  407eef:	jne    0x407f60
  407ef1:	push   esp
  407ef2:	clc    
  407ef3:	cdq    
  407ef4:	out    dx,eax
  407ef5:	or     DWORD PTR [edi-0x72],0x7c
  407ef9:	jmp    FWORD PTR [edx+0x7ecc88a]
  407eff:	std    
  407f00:	xchg   ebx,esp
  407f02:	lahf   
  407f03:	pop    esp
  407f04:	clc    
  407f05:	and    eax,0x7663f81d
  407f0a:	inc    ecx
  407f0b:	(bad)  
  407f0c:	jmp    0x407f39
  407f0e:	in     eax,dx
  407f0f:	mov    ds:0x21d32011,al
  407f14:	das    
  407f15:	stos   DWORD PTR es:[edi],eax
  407f16:	inc    ebx
  407f17:	fcmovb st,st(6)
  407f19:	mov    ds:0x208ae773,eax
  407f1e:	ins    BYTE PTR es:[edi],dx
  407f1f:	movups xmm5,xmm6
  407f22:	call   0x3451fa4
  407f27:	arpl   WORD PTR [edi-0x3d],cx
  407f2a:	xor    al,0x7e
  407f2c:	nop
  407f2d:	call   0xfc94ae2d
  407f32:	mov    ds:0xc7bd36e6,al
  407f37:	inc    edx
  407f38:	gs or  eax,ecx
  407f3b:	retf   0xdfdb
  407f3e:	outs   dx,DWORD PTR ds:[esi]
  407f3f:	sbb    eax,0x77f329c9
  407f44:	mov    dh,0xbc
  407f46:	mov    ds:0x9aa796fa,al
  407f4b:	pop    edi
  407f4c:	cmp    al,0xad
  407f4e:	sar    DWORD PTR [eax-0x6ee79781],0x52
  407f55:	sbb    BYTE PTR [edx-0x5a],bl
  407f58:	mov    dl,0xe3
  407f5a:	xor    dh,BYTE PTR [ebp-0x67]
  407f5d:	jmp    0x415c:0xf2611ce5
  407f64:	out    0xe4,eax
  407f66:	imul   edx,DWORD PTR [ebp+0x7],0x7
  407f6a:	(bad)  
  407f6b:	push   ebp
  407f6c:	popf   
  407f6d:	test   BYTE PTR [ecx+0x77dee687],dh
  407f73:	gs fwait
  407f75:	hlt    
  407f76:	rcl    DWORD PTR [edi+eax*1+0x67753281],cl
  407f7d:	and    esi,DWORD PTR [ebx+edx*2-0x1e]
  407f81:	std    
  407f82:	mov    esi,edi
  407f84:	add    al,0x7a
  407f86:	imul   ebx,DWORD PTR gs:[eax+0x2b],0xffffffe6
  407f8b:	das    
  407f8c:	outs   dx,DWORD PTR ds:[esi]
  407f8d:	cmp    al,bh
  407f8f:	out    dx,al
  407f90:	jle    0x407f41
  407f92:	popa   
  407f93:	fisttp WORD PTR [esi+edi*4-0x25c69910]
  407f9a:	mov    ds:0x1622cf61,al
  407f9f:	pop    es
  407fa0:	fisub  DWORD PTR [ebx+0x2e722194]
  407fa6:	aad    0x5
  407fa8:	sbb    DWORD PTR [eax+0xc],edi
  407fab:	mov    ah,0x6d
  407fad:	iret   
  407fae:	test   eax,0x7f6b808
  407fb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407fb4:	mov    esp,0x7636dcea
  407fb9:	mov    ebx,0xc6f81576
  407fbe:	jbe    0x408005
  407fc0:	sbb    BYTE PTR [ebx-0x2d0c707d],ch
  407fc6:	inc    esi
  407fc7:	push   esp
  407fc8:	call   0x8317:0xf934deba
  407fcf:	xor    bl,bh
  407fd1:	(bad)  
  407fd2:	daa    
  407fd3:	cmp    al,0xd7
  407fd5:	ret    
  407fd6:	into   
  407fd7:	pop    edx
  407fd8:	lods   eax,DWORD PTR ds:[esi]
  407fd9:	adc    DWORD PTR cs:[esi+0x2e3e25c6],ebx
  407fe0:	rol    BYTE PTR [edi],cl
  407fe2:	xor    eax,0xc5fb5512
  407fe7:	call   DWORD PTR [ebx]
  407fe9:	gs out 0xd4,eax
  407fec:	sti    
  407fed:	das    
  407fee:	xchg   BYTE PTR [ebx],cl
  407ff0:	or     BYTE PTR [ecx-0x4b],cl
  407ff3:	mov    dl,0xe4
  407ff5:	test   BYTE PTR [edi-0x20d62668],ch
  407ffb:	add    BYTE PTR [ecx-0x41d871de],bh
  408001:	sahf   
  408002:	push   0x8d93e283
  408007:	in     eax,0x3a
  408009:	ficomp DWORD PTR ds:0x939d54eb
  40800f:	push   ds
  408010:	adc    eax,0xad26f4de
  408015:	mov    DWORD PTR [ebx+edi*8-0x664270d0],esi
  40801c:	adc    BYTE PTR [esi],dh
  40801e:	add    al,0xf9
  408020:	dec    ebx
  408021:	es sub bh,0x69
  408025:	call   0xef9b5b85
  40802a:	lea    edx,[ebp-0x7d]
  40802d:	mov    eax,0x995e6fd5
  408032:	fisub  WORD PTR [ebx]
  408034:	mov    WORD PTR [esi-0x17],?
  408037:	adc    edi,esp
  408039:	mov    edi,0xd84a6fc7
  40803e:	mov    bh,0x17
  408040:	fisttp QWORD PTR cs:[ebp-0x30]
  408044:	outs   dx,DWORD PTR ds:[esi]
  408045:	xchg   esp,eax
  408046:	cmp    dl,BYTE PTR [edi-0x79]
  408049:	xor    esp,DWORD PTR [ebx+0x39]
  40804c:	mov    dl,0x86
  40804e:	sbb    edx,DWORD PTR [ecx]
  408050:	lahf   
  408051:	stos   BYTE PTR es:[edi],al
  408052:	loop   0x408015
  408054:	dec    ebx
  408055:	and    edi,ecx
  408057:	inc    esp
  408058:	sbb    cl,dh
  40805a:	pop    esp
  40805b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40805c:	and    DWORD PTR [ecx+0x2a],0xffffffdc
  408060:	fst    QWORD PTR ds:0x21b090f6
  408066:	adc    BYTE PTR [ecx],bl
  408068:	cld    
  408069:	sub    edi,edi
  40806b:	mov    esi,0x38eb93a3
  408070:	in     eax,dx
  408071:	ror    BYTE PTR [ecx-0x50],1
  408074:	mov    ah,0x8f
  408076:	leave  
  408077:	outs   dx,DWORD PTR ds:[esi]
  408078:	and    eax,0x46329ff1
  40807d:	jl     0x4080b7
  40807f:	iret   
  408080:	cdq    
  408081:	sbb    ebx,DWORD PTR [ecx]
  408083:	data16 aam 0x55
  408086:	jge    0x4080c4
  408088:	push   es
  408089:	pop    ebp
  40808a:	pop    ss
  40808b:	rcr    WORD PTR [eax-0x16],cl
  40808f:	imul   DWORD PTR [esi+0x2e2bf9dd]
  408095:	mov    bh,0x67
  408097:	pop    esp
  408098:	std    
  408099:	push   esi
  40809a:	addr16 jmp 0xa4c0:0x51ef80b1
  4080a2:	mov    dl,ch
  4080a4:	xchg   esi,eax
  4080a5:	(bad)  
  4080a7:	scas   al,BYTE PTR es:[edi]
  4080a8:	fisttp DWORD PTR ds:0x53d91223
  4080ae:	out    dx,eax
  4080af:	pop    ebx
  4080b0:	cmp    eax,0x63dbd629
  4080b5:	inc    eax
  4080b6:	sar    edx,cl
  4080b8:	push   esp
  4080b9:	aas    
  4080ba:	xchg   ebp,eax
  4080bb:	scas   eax,DWORD PTR es:[edi]
  4080bc:	sub    al,0x85
  4080be:	mov    ebx,0x8eb01fd
  4080c3:	div    DWORD PTR [edx]
  4080c5:	imul   esi,DWORD PTR [eax],0x21
  4080c8:	xor    DWORD PTR [ebp+eax*4+0x386c078],0xffffff91
  4080d0:	mov    bl,0xf2
  4080d2:	xlat   BYTE PTR ds:[ebx]
  4080d3:	(bad)  
  4080d4:	adc    esi,esi
  4080d6:	std    
  4080d7:	(bad)
  4080db:	je     0x4080a7
  4080dd:	(bad)  
  4080de:	call   DWORD PTR [ecx-0x21]
  4080e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080e3:	xchg   edi,eax
  4080e4:	lods   al,BYTE PTR ds:[esi]
  4080e5:	push   ebp
  4080e6:	cmp    al,0x40
  4080e8:	jg     0x4080ac
  4080ea:	add    DWORD PTR [esi-0x45],ebx
  4080ed:	mov    edi,0x5de67ffa
  4080f2:	pop    ebp
  4080f3:	in     eax,dx
  4080f4:	loopne 0x40811f
  4080f6:	rcr    BYTE PTR [ecx+edi*4+0x23],cl
  4080fa:	nop
  4080fb:	pop    es
  4080fc:	ret    
  4080fd:	sub    ecx,ebp
  4080ff:	fwait
  408100:	pop    ds
  408101:	out    0xa0,al
  408103:	cmp    eax,DWORD PTR [ebp+0x1e5354ad]
  408109:	push   ebp
  40810a:	ret    
  40810b:	rol    DWORD PTR [ecx+0x33],cl
  40810e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40810f:	inc    esi
  408110:	xchg   edx,eax
  408111:	push   ss
  408112:	adc    al,0x39
  408114:	inc    edi
  408115:	cdq    
  408116:	fwait
  408117:	sbb    esi,DWORD PTR [ebp+0xa]
  40811a:	xchg   edi,eax
  40811b:	inc    ebx
  40811c:	sahf   
  40811d:	jo     0x40818e
  40811f:	in     eax,dx
  408120:	xor    BYTE PTR [esi+0x1613d7ff],al
  408126:	into   
  408127:	(bad)  
  408128:	push   ebx
  408129:	arpl   ax,ax
  40812b:	rol    DWORD PTR [edx-0x12695b64],1
  408131:	pop    es
  408132:	add    al,bh
  408134:	icebp  
  408135:	into   
  408136:	aad    0xed
  408138:	push   ss
  408139:	outs   dx,DWORD PTR cs:[esi]
  40813b:	push   eax
  40813c:	leave  
  40813d:	lods   eax,DWORD PTR ds:[esi]
  40813e:	jge    0x408166
  408140:	sahf   
  408141:	bound  edx,QWORD PTR [ebx]
  408143:	sbb    DWORD PTR ds:0x29f0d2a2,esp
  408149:	cmp    DWORD PTR [edi-0x6],esp
  40814c:	jl     0x408113
  40814e:	int    0xbd
  408150:	mov    es,WORD PTR [esi-0x7fd0ab4d]
  408156:	sub    DWORD PTR [edx+0x57],eax
  408159:	mov    esi,0xd08a8e17
  40815e:	stos   BYTE PTR es:[edi],al
  40815f:	cs pop ds
  408161:	cmp    al,0x2f
  408163:	mov    edi,eax
  408165:	jmp    0x4081b4
  408167:	pushf  
  408168:	dec    esi
  408169:	pushf  
  40816a:	test   eax,0x6d5eba07
  40816f:	mov    eax,0x43eea4cc
  408174:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  408176:	fucomip st,st(2)
  408178:	mov    edi,0x99f032f7
  40817d:	inc    ebp
  40817e:	xor    esp,DWORD PTR [esi-0x5ac02733]
  408184:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408185:	mov    eax,ds:0x1cefa33c
  40818a:	mov    bh,0x9f
  40818c:	push   ecx
  40818d:	ins    BYTE PTR es:[edi],dx
  40818e:	aam    0xba
  408190:	xor    al,0x85
  408192:	mov    ds:0x172dedbf,eax
  408197:	xor    cl,bh
  408199:	(bad)  
  40819a:	dec    eax
  40819b:	sbb    esi,esi
  40819d:	data16 and al,0x4e
  4081a0:	jle    0x408147
  4081a2:	add    al,0x88
  4081a4:	sub    BYTE PTR [eax+esi*4-0x8],bl
  4081a8:	imul   edx,DWORD PTR [eax+0x1a],0xd58b485f
  4081af:	ja     0x408161
  4081b1:	shr    BYTE PTR [ebx+0x77],0x10
  4081b5:	sti    
  4081b6:	cmp    DWORD PTR [ecx-0x76],eax
  4081b9:	dec    ecx
  4081ba:	jmp    0x95250f10
  4081bf:	fidivr WORD PTR [bp+di]
  4081c2:	aam    0x7a
  4081c4:	and    BYTE PTR [ebp+0xdce5401],ah
  4081ca:	mov    ch,0x88
  4081cc:	retf   
  4081cd:	retf   
  4081ce:	adc    esp,ebp
  4081d0:	mov    ch,0xf
  4081d2:	or     eax,edi
  4081d4:	pop    ebx
  4081d5:	(bad)  
  4081d6:	(bad)  
  4081d8:	ins    DWORD PTR es:[edi],dx
  4081d9:	pusha  
  4081da:	adc    al,0x4b
  4081dc:	cli    
  4081dd:	cli    
  4081de:	xchg   esi,eax
  4081df:	jbe    0x40818d
  4081e1:	imul   ebx,DWORD PTR [ebx+0x35ebef45],0x63d107a3
  4081eb:	xchg   edi,eax
  4081ec:	jmp    0xd47118c6
  4081f1:	fisubr DWORD PTR [edi+eax*4]
  4081f4:	bound  ebp,QWORD PTR [ebx-0x2f6336fb]
  4081fa:	push   edx
  4081fb:	cmp    ch,cl
  4081fd:	stos   DWORD PTR es:[edi],eax
  4081fe:	clc    
  4081ff:	pusha  
  408200:	jns    0x4081c7
  408202:	xchg   ebx,eax
  408203:	rol    esi,cl
  408205:	test   DWORD PTR [edx-0x5b],eax
  408208:	fcomp  DWORD PTR [ebp-0x76]
  40820b:	xor    ah,BYTE PTR ds:0x1c125f38
  408211:	mov    ds:0x735a0b04,eax
  408216:	pop    ebp
  408217:	mov    edi,0xf412fd30
  40821c:	jp     0x4081c8
  40821e:	dec    ecx
  40821f:	in     eax,0xc4
  408221:	or     bl,bh
  408223:	jl     0x408204
  408225:	fisub  DWORD PTR [ecx+0x28e57232]
  40822b:	(bad)  
  40822c:	aas    
  40822d:	outs   dx,DWORD PTR ds:[esi]
  40822e:	sar    DWORD PTR [esi-0x1b],cl
  408231:	or     BYTE PTR [eax-0x50],cl
  408234:	add    BYTE PTR [esi-0x815c479],cl
  40823a:	iret   
  40823b:	stos   DWORD PTR es:[edi],eax
  40823c:	mov    ds:0x7096866a,eax
  408241:	pop    ss
  408242:	xor    eax,0xb4ebb182
  408247:	xchg   ebp,eax
  408248:	imul   ecx,ecx,0xa2a372ec
  40824e:	jo     0x408233
  408250:	sbb    eax,esp
  408252:	xor    al,0x8e
  408254:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408255:	xor    edx,edx
  408257:	or     eax,edx
  408259:	add    eax,DWORD PTR ds:0x422768
  40825f:	shl    ecx,0x1e
  408262:	mov    DWORD PTR [ebp+0x14],eax
  408265:	mov    eax,DWORD PTR [ebp-0x48]
  408268:	mov    ecx,DWORD PTR [ebp-0x44]
  40826b:	shrd   eax,ecx,0x2
  40826f:	shr    ecx,0x2
  408272:	mov    ecx,DWORD PTR [ebp-0x48]
  408275:	mov    edx,DWORD PTR [ebp-0x44]
  408278:	xor    eax,edi
  40827a:	shl    ecx,0x1e
  40827d:	xor    edx,edx
  40827f:	or     eax,edx
  408281:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  408285:	mov    eax,DWORD PTR [ebp+0x14]
  408288:	add    BYTE PTR [eax],cl
  40828a:	mov    eax,DWORD PTR [ebp-0x38]
  40828d:	mov    ecx,DWORD PTR [ebp-0x34]
  408290:	shrd   eax,ecx,0x2
  408294:	xor    eax,edi
  408296:	shr    ecx,0x2
  408299:	mov    ecx,DWORD PTR [ebp-0x38]
  40829c:	mov    edx,DWORD PTR [ebp-0x34]
  40829f:	shl    ecx,0x1e
  4082a2:	mov    ecx,DWORD PTR [ebp-0x38]
  4082a5:	xor    edx,edx
  4082a7:	or     eax,edx
  4082a9:	mov    edx,DWORD PTR [ebp-0x34]
  4082ac:	add    eax,DWORD PTR ds:0x422768
  4082b2:	shrd   ecx,edx,0x2
  4082b6:	xor    ecx,edi
  4082b8:	shr    edx,0x2
  4082bb:	mov    edx,DWORD PTR [ebp-0x38]
  4082be:	mov    edi,DWORD PTR [ebp-0x34]
  4082c1:	xor    edi,edi
  4082c3:	or     ecx,edi
  4082c5:	mov    cl,BYTE PTR [ebp+ecx*1-0x4]
  4082c9:	or     BYTE PTR [eax],cl
  4082cb:	mov    eax,DWORD PTR [esi]
  4082cd:	mov    ecx,DWORD PTR [esi+0x4]
  4082d0:	shl    eax,0x1e
  4082d3:	shl    edx,0x1e
  4082d6:	mov    edx,DWORD PTR [esi]
  4082d8:	mov    edi,DWORD PTR [esi+0x4]
  4082db:	xor    edi,0x9c2b8ae8
  4082e1:	xor    eax,0x80000000
  4082e6:	mov    DWORD PTR [ebp+0x14],eax
  4082e9:	mov    eax,0xcb79b577
  4082ee:	xor    edx,eax
  4082f0:	shrd   edx,edi,0x2
  4082f4:	shr    edi,0x2
  4082f7:	or     edi,DWORD PTR [ebp+0x14]
  4082fa:	xor    ecx,ecx
  4082fc:	or     edx,ecx
  4082fe:	mov    ecx,DWORD PTR [ebx]
  408300:	mov    DWORD PTR [ebp-0x64],edi
  408303:	mov    edi,DWORD PTR [ebx+0x4]
  408306:	mov    edi,ecx
  408308:	xor    ecx,ecx
  40830a:	shl    edi,0x1e
  40830d:	xor    edi,0x80000000
  408313:	mov    DWORD PTR [ebp+0x10],ecx
  408316:	mov    ecx,DWORD PTR [ebx]
  408318:	mov    DWORD PTR [ebp+0x14],edi
  40831b:	mov    edi,DWORD PTR [ebx+0x4]
  40831e:	xor    ecx,eax
  408320:	xor    edi,0x9c2b8ae8
  408326:	shrd   ecx,edi,0x2
  40832a:	or     ecx,DWORD PTR [ebp+0x10]
  40832d:	shr    edi,0x2
  408330:	mov    DWORD PTR [ebp-0x70],ecx
  408333:	mov    ecx,edi
  408335:	or     ecx,DWORD PTR [ebp+0x14]
  408338:	mov    DWORD PTR [ebp+0xc],edi
  40833b:	cmp    edx,DWORD PTR [ebp-0x70]
  40833e:	jne    0x408bb3
  408344:	cmp    DWORD PTR [ebp-0x64],ecx
  408347:	jne    0x408bb3
  40834d:	jmp    0x4083eb
  408352:	mov    eax,DWORD PTR [esi]
  408354:	mov    edx,DWORD PTR [esi+0x4]
  408357:	mov    eax,DWORD PTR [esi]
  408359:	mov    edx,DWORD PTR [esi+0x4]
  40835c:	mov    edx,eax
  40835e:	xor    eax,eax
  408360:	shl    edx,0x1e
  408363:	mov    DWORD PTR [ebp+0x10],eax
  408366:	mov    eax,DWORD PTR [esi]
  408368:	xor    edx,0x80000000
  40836e:	mov    DWORD PTR [ebp+0x14],edx
  408371:	mov    edx,DWORD PTR [esi+0x4]
  408374:	xor    eax,0xcb79b577
  408379:	xor    ecx,edx
  40837b:	shrd   eax,ecx,0x2
  40837f:	or     eax,DWORD PTR [ebp+0x10]
  408382:	shr    ecx,0x2
  408385:	mov    DWORD PTR [ebp+0x8],eax
  408388:	mov    eax,ecx
  40838a:	or     eax,DWORD PTR [ebp+0x14]
  40838d:	mov    ecx,DWORD PTR [ebx]
  40838f:	mov    edx,DWORD PTR [ebx+0x4]
  408392:	push   eax
  408393:	push   DWORD PTR [ebp+0x8]
  408396:	push   edx
  408397:	push   ecx
  408398:	call   0x41594e
  40839d:	mov    eax,DWORD PTR [esi]
  40839f:	mov    ecx,DWORD PTR [esi+0x4]
  4083a2:	shrd   eax,ecx,0x2
  4083a6:	shr    ecx,0x2
  4083a9:	shr    edx,0x1e
  4083ac:	xor    ecx,0xe70ae2ba
  4083b2:	push   ecx
  4083b3:	xor    eax,edi
  4083b5:	mov    DWORD PTR [ebp+0x10],edx
  4083b8:	mov    edx,DWORD PTR [ebx]
  4083ba:	mov    edi,DWORD PTR [ebx+0x4]
  4083bd:	push   eax
  4083be:	push   edi
  4083bf:	push   edx
  4083c0:	call   0x41594e
  4083c5:	shld   edx,eax,0x2
  4083c9:	shl    eax,0x2
  4083cc:	mov    ecx,eax
  4083ce:	or     ecx,DWORD PTR [ebp+0x10]
  4083d1:	xor    eax,eax
  4083d3:	or     edx,eax
  4083d5:	xor    ecx,0xcb79b576
  4083db:	xor    edx,0x9c2b8ae8
  4083e1:	mov    DWORD PTR [esi],ecx
  4083e3:	mov    DWORD PTR [esi+0x4],edx
  4083e6:	mov    eax,0xcb79b577
  4083eb:	mov    ecx,DWORD PTR [esi]
  4083ed:	mov    edx,DWORD PTR [esi+0x4]
  4083f0:	mov    edx,ecx
  4083f2:	shl    edx,0x1e
  4083f5:	xor    edx,0x80000000
  4083fb:	mov    DWORD PTR [ebp+0x14],edx
  4083fe:	mov    edx,DWORD PTR [esi]
  408400:	mov    edi,DWORD PTR [esi+0x4]
  408403:	xor    edi,0x9c2b8ae8
  408409:	xor    edx,eax
  40840b:	shrd   edx,edi,0x2
  40840f:	shr    edi,0x2
  408412:	or     edi,DWORD PTR [ebp+0x14]
  408415:	xor    ecx,ecx
  408417:	or     edx,ecx
  408419:	mov    ecx,DWORD PTR [ebx]
  40841b:	mov    DWORD PTR [ebp+0xc],edi
  40841e:	mov    edi,DWORD PTR [ebx+0x4]
  408421:	mov    edi,ecx
  408423:	xor    ecx,ecx
  408425:	shl    edi,0x1e
  408428:	mov    DWORD PTR [ebp+0x10],ecx
  40842b:	mov    ecx,DWORD PTR [ebx]
  40842d:	xor    edi,0x80000000
  408433:	mov    DWORD PTR [ebp+0x14],edi
  408436:	mov    edi,DWORD PTR [ebx+0x4]
  408439:	xor    eax,ecx
  40843b:	jmp    0x4087dc
  408440:	xor    eax,0x7b36559b
  408445:	cmp    al,0xb6
  408447:	pushf  
  408448:	pop    eax
  408449:	out    dx,eax
  40844a:	push   0xffffffd1
  40844c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40844d:	popf   
  40844e:	mov    WORD PTR [ebp+edi*4-0x42414195],fs
  408455:	les    edi,FWORD PTR [esi-0xb865042]
  40845b:	xchg   ecx,eax
  40845c:	mov    dl,BYTE PTR [esi]
  40845e:	and    DWORD PTR [ebx],eax
  408460:	or     al,0xe5
  408462:	stos   BYTE PTR es:[edi],al
  408463:	outs   dx,BYTE PTR ds:[esi]
  408464:	(bad)  
  408465:	jo     0x40847f
  408467:	sub    DWORD PTR [bp+si-0x51c6],ebp
  40846c:	out    dx,eax
  40846d:	inc    ebx
  40846e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40846f:	jae    0x40847a
  408471:	cmp    DWORD PTR [esi],edi
  408473:	outs   dx,DWORD PTR ds:[esi]
  408474:	pop    ebx
  408475:	pushf  
  408476:	popa   
  408477:	pop    edx
  408479:	and    ebx,edx
  40847b:	out    dx,eax
  40847c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40847d:	rol    edx,cl
  40847f:	and    eax,esp
  408481:	dec    esi
  408482:	fisub  DWORD PTR [esi-0x64]
  408485:	jne    0x40849b
  408487:	pop    esi
  408488:	fdivr  DWORD PTR [edx]
  40848a:	scas   al,BYTE PTR es:[edi]
  40848b:	mov    BYTE PTR [ebx-0x49],ch
  40848e:	pop    ebx
  40848f:	push   ebx
  408490:	in     eax,0xb6
  408492:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408493:	mov    ebp,0xd0fcc0f5
  408498:	popa   
  408499:	aaa    
  40849a:	cmp    BYTE PTR ds:0x75832d12,bl
  4084a0:	in     al,dx
  4084a1:	das    
  4084a2:	je     0x40851d
  4084a4:	pop    ebp
  4084a5:	ins    DWORD PTR es:[edi],dx
  4084a6:	mov    ecx,0xd68f605a
  4084ab:	mov    ebx,0x7649a981
  4084b0:	shl    DWORD PTR [ecx],cl
  4084b2:	and    cl,BYTE PTR [eax+0x4c267c32]
  4084b8:	mov    al,0x7d
  4084ba:	inc    esi
  4084bb:	pop    edi
  4084bc:	adc    al,0xe2
  4084be:	xchg   esp,eax
  4084bf:	jecxz  0x408525
  4084c1:	mov    bl,ch
  4084c3:	in     al,dx
  4084c4:	xor    eax,0x65ade7bd
  4084c9:	fs scas eax,DWORD PTR es:[edi]
  4084cb:	sbb    BYTE PTR [ebx+0x5343124],al
  4084d1:	imul   esi,DWORD PTR [edx-0x49],0x6bde37a7
  4084d8:	xchg   esp,eax
  4084d9:	lods   al,BYTE PTR ds:[esi]
  4084da:	sub    dh,0xe7
  4084dd:	mov    ebp,0x3620ad74
  4084e2:	loop   0x4084bb
  4084e4:	daa    
  4084e5:	test   al,0xe1
  4084e7:	leave  
  4084e8:	js     0x40853b
  4084ea:	push   0xfffffffa
  4084ec:	sub    DWORD PTR [ebp+0x7e8e1e2d],esp
  4084f2:	stos   BYTE PTR es:[edi],al
  4084f3:	xor    eax,0x20b9f9b1
  4084f8:	dec    esi
  4084f9:	jmp    0x54f419b3
  4084fe:	pop    eax
  4084ff:	out    0x1e,eax
  408501:	sahf   
  408502:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408503:	(bad)  
  408504:	mov    es,ebp
  408506:	cdq    
  408507:	arpl   WORD PTR cs:[esi],si
  40850a:	xchg   ecx,eax
  40850b:	inc    esp
  40850c:	inc    esp
  40850d:	retf   
  40850e:	int    0xb4
  408510:	outs   dx,BYTE PTR ds:[esi]
  408511:	xchg   ebp,eax
  408512:	test   al,0x70
  408514:	(bad)  
  408515:	and    dl,cl
  408517:	and    BYTE PTR [esi],al
  408519:	and    dh,ah
  40851b:	fsub   st,st(7)
  40851d:	mov    eax,DWORD PTR [ebx-0x3b]
  408520:	(bad)  
  408521:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408522:	adc    dh,al
  408524:	sar    DWORD PTR [edi+0x28],0x7e
  408528:	adc    dh,BYTE PTR [ebx-0x66efac02]
  40852e:	sahf   
  40852f:	pop    es
  408530:	aaa    
  408531:	(bad)  
  408532:	nop
  408533:	in     eax,0xde
  408535:	mov    ds:0x3fba2532,eax
  40853a:	xchg   edi,eax
  40853b:	or     edx,DWORD PTR [ecx]
  40853d:	and    ch,BYTE PTR [ebx-0x43ac60c]
  408543:	cmp    eax,0x58a3ded2
  408548:	push   ss
  408549:	call   0x1b6c:0x31c64419
  408550:	cs xor al,0x25
  408553:	jb     0x4084fc
  408555:	(bad)  
  408556:	out    dx,al
  408557:	jle    0x4085af
  408559:	jecxz  0x4084ee
  40855b:	clc    
  40855c:	mov    al,ds:0xa0c3ffe9
  408561:	add    ah,BYTE PTR [edi-0x3e]
  408564:	pop    ss
  408565:	sbb    eax,DWORD PTR [edx-0x28]
  408568:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408569:	mov    dh,0x9d
  40856b:	pop    ecx
  40856c:	push   edx
  40856d:	mov    BYTE PTR [esi],bl
  40856f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408570:	jbe    0x40855e
  408572:	mov    ds:0x5563225f,eax
  408577:	(bad)  [eax-0x78]
  40857a:	adc    ebx,esp
  40857c:	fwait
  40857d:	dec    ecx
  40857e:	dec    eax
  40857f:	mov    ah,0x5a
  408581:	sub    al,0xf3
  408583:	push   esp
  408584:	test   DWORD PTR [eax+ebp*4-0x20],esp
  408588:	scas   al,BYTE PTR es:[edi]
  408589:	adc    DWORD PTR ds:[ebx+0x58],0xe0ad1724
  408591:	jg     0x408599
  408593:	sbb    esp,ecx
  408595:	imul   edx,DWORD PTR [ecx],0x1afe8922
  40859b:	and    al,0x7d
  40859d:	sbb    esi,DWORD PTR [edi]
  40859f:	mov    eax,0x2ac9a45d
  4085a4:	mov    eax,ds:0x4b4ec69b
  4085a9:	sbb    ebx,DWORD PTR [ecx+0x42]
  4085ac:	xchg   edx,eax
  4085ad:	adc    ebx,DWORD PTR [edx]
  4085af:	adc    eax,DWORD PTR [eax+0x7a5c0a21]
  4085b5:	push   ebx
  4085b6:	inc    esi
  4085b7:	add    BYTE PTR [eax-0xde19696],ch
  4085bd:	cs test dh,bl
  4085c0:	jl     0x40858a
  4085c2:	outs   dx,DWORD PTR ds:[esi]
  4085c3:	scas   al,BYTE PTR es:[edi]
  4085c4:	dec    esp
  4085c5:	push   ds
  4085c6:	pop    edx
  4085c7:	(bad)  
  4085c8:	loopne 0x4085e9
  4085ca:	mov    edx,0x33df905b
  4085cf:	test   BYTE PTR [ebx+0x60e19cb5],0x62
  4085d6:	add    eax,0x5e67a9bb
  4085db:	in     al,0x94
  4085dd:	sub    dh,BYTE PTR [edi-0x30]
  4085e0:	iret   
  4085e1:	mov    DWORD PTR [edi+0x390fe32b],esi
  4085e7:	test   DWORD PTR [eax+0x16d8c9bb],edi
  4085ed:	xchg   ebx,eax
  4085ee:	dec    esi
  4085ef:	push   esp
  4085f0:	dec    ecx
  4085f1:	ret    0x2a68
  4085f4:	lahf   
  4085f5:	in     al,dx
  4085f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4085f7:	inc    ebp
  4085f8:	add    eax,0x2a1b7cb5
  4085fd:	fisttp WORD PTR [eax]
  4085ff:	imul   eax,DWORD PTR [ebp-0x40],0xffffffaa
  408603:	pop    ebx
  408604:	cmp    BYTE PTR ds:0x58aa3967,ch
  40860a:	jg     0x4085a1
  40860c:	sub    BYTE PTR [edx],ch
  40860e:	mov    ds:0x8ce166de,al
  408613:	sbb    ebp,DWORD PTR [edx]
  408615:	lods   al,BYTE PTR ds:[esi]
  408616:	cli    
  408617:	jmp    0xf840:0x859ed521
  40861e:	iret   
  40861f:	retf   0xe3fc
  408622:	xchg   edi,eax
  408623:	ret    0xeb48
  408626:	sub    dl,BYTE PTR [ebx-0x1c]
  408629:	aad    0xc1
  40862b:	xchg   ebp,eax
  40862c:	xchg   DWORD PTR [ecx-0x4b3d1c85],esi
  408632:	ds (bad) 
  408634:	push   0xaa482b1f
  408639:	or     ch,BYTE PTR [eax+ebx*4+0x5a]
  40863d:	or     bl,dh
  40863f:	pop    es
  408640:	(bad)
  408643:	test   eax,0xabbfe3b7
  408648:	mov    ch,0xf8
  40864a:	lea    ebp,[edx-0x18511526]
  408650:	cwde   
  408651:	iret   
  408652:	sbb    esp,DWORD PTR [ebp-0xe]
  408655:	cmp    BYTE PTR [ecx+ebx*8+0xb],cl
  408659:	cmc    
  40865a:	xlat   BYTE PTR ds:[ebx]
  40865b:	push   ss
  40865c:	or     DWORD PTR [edi+0x27],edx
  40865f:	inc    ebx
  408660:	outs   dx,BYTE PTR ds:[esi]
  408661:	imul   eax,DWORD PTR [ebx+edx*1],0xffffffe1
  408665:	cwde   
  408666:	jecxz  0x4086d4
  408668:	sub    ebx,DWORD PTR [edi]
  40866a:	out    0xe3,al
  40866c:	pop    ebp
  40866d:	dec    ecx
  40866e:	or     BYTE PTR [edx],dh
  408670:	or     BYTE PTR [di],al
  408673:	xchg   dh,dl
  408675:	adc    ah,BYTE PTR [ecx+esi*2]
  408678:	cmp    BYTE PTR [edx+0x27],0x93
  40867c:	cmp    DWORD PTR [esi+0x17547324],ecx
  408682:	and    al,bh
  408684:	aad    0xd0
  408686:	rcr    al,1
  408688:	sub    al,0x84
  40868a:	or     BYTE PTR [ecx],ch
  40868c:	pop    eax
  40868d:	not    BYTE PTR [esi+edx*2+0x1617b89]
  408694:	push   cs
  408695:	ja     0x40861f
  408697:	sub    ah,BYTE PTR [ebx*4-0x4e381cf8]
  40869e:	stos   DWORD PTR es:[edi],eax
  40869f:	int3   
  4086a0:	sbb    DWORD PTR [eax-0x5e],0x2
  4086a4:	aas    
  4086a5:	push   es
  4086a6:	ror    DWORD PTR [ebx+0x44],1
  4086a9:	push   es
  4086aa:	call   0x5f07:0x5f82654d
  4086b1:	jne    0x4086f5
  4086b3:	mov    eax,0x45980481
  4086b8:	js     0x4086f3
  4086ba:	shl    BYTE PTR [ecx],1
  4086bc:	out    dx,eax
  4086bd:	stos   BYTE PTR es:[edi],al
  4086be:	adc    eax,0x2376aed6
  4086c3:	dec    esi
  4086c4:	cmp    eax,0x58e71fcb
  4086c9:	mov    BYTE PTR [eax+0x4b17dd41],dl
  4086cf:	jle    0x408724
  4086d1:	and    esp,DWORD PTR [edx]
  4086d3:	fldenv [edi+0x27]
  4086d6:	and    al,0xfc
  4086d8:	mov    ebx,0x167ae295
  4086dd:	aad    0xbc
  4086df:	call   0xc6e:0x5a57796
  4086e6:	or     edx,DWORD PTR ds:0xf1d61de7
  4086ec:	jl     0x408676
  4086ee:	retf   
  4086ef:	mov    ch,al
  4086f1:	pop    ebp
  4086f2:	test   DWORD PTR [edi+0x46a49405],esp
  4086f8:	dec    ecx
  4086f9:	add    dl,0xec
  4086fc:	mov    dl,0xa6
  4086fe:	adc    al,0xcd
  408700:	cmp    cl,BYTE PTR [ebp-0x1b]
  408703:	cdq    
  408704:	lods   al,BYTE PTR ds:[esi]
  408705:	xor    eax,0x477a944d
  40870a:	into   
  40870b:	nop
  40870c:	cmp    edx,edi
  40870e:	jge    0x4086ce
  408710:	dec    ebp
  408711:	clc    
  408712:	xlat   BYTE PTR ds:[ebx]
  408713:	dec    ebp
  408714:	mov    ah,0xc5
  408716:	icebp  
  408717:	xor    al,0xa0
  408719:	test   al,0x4b
  40871b:	xchg   ecx,eax
  40871c:	cdq    
  40871d:	(bad)  
  40871e:	loopne 0x408799
  408720:	mov    dh,0xa6
  408722:	fild   WORD PTR [ebx+ebx*8]
  408725:	dec    ebp
  408726:	rcl    DWORD PTR [edi+0x24],1
  408729:	data16 jns 0x4086d6
  40872c:	push   cs
  40872d:	js     0x408755
  40872f:	pusha  
  408730:	int3   
  408731:	gs scas al,BYTE PTR es:[edi]
  408733:	into   
  408734:	xor    al,0xa8
  408736:	jb     0x4087ae
  408738:	retf   
  408739:	mov    ch,0x7d
  40873b:	(bad)  
  40873c:	cli    
  40873d:	sub    dh,cl
  40873f:	xor    eax,0xca12773c
  408744:	aas    
  408745:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408746:	fs popfw 
  408749:	push   edi
  40874a:	popa   
  40874b:	dec    edx
  40874c:	mov    gs,WORD PTR [edx-0x1b]
  40874f:	inc    esi
  408750:	imul   eax,ebx,0xffffffb1
  408753:	cmp    DWORD PTR [ebx+0x5a],edx
  408756:	and    BYTE PTR ds:0x7ce613ec,ah
  40875c:	stc    
  40875d:	sub    al,0x1a
  40875f:	int3   
  408760:	inc    edx
  408761:	xor    ah,BYTE PTR [ebp+0x13]
  408764:	jg     0x4087ab
  408766:	add    DWORD PTR [eax+0x1f18dce5],ecx
  40876c:	jl     0x4087cf
  40876e:	sti    
  40876f:	mov    edx,0x6c51254d
  408774:	inc    esp
  408775:	inc    esp
  408776:	iret   
  408777:	fild   DWORD PTR [edi-0x78552604]
  40877d:	stc    
  40877e:	arpl   WORD PTR [eax+eiz*2+0x29],ax
  408782:	xor    ebp,DWORD PTR [ebx+0x48]
  408785:	cdq    
  408786:	jae    0x408758
  408788:	add    al,ah
  40878a:	push   eax
  40878b:	xchg   ebp,eax
  40878c:	adc    bh,BYTE PTR [esi-0x7cc78df5]
  408792:	or     dl,BYTE PTR [edx]
  408794:	jo     0x408800
  408796:	fcmovnbe st,st(4)
  408798:	sbb    DWORD PTR [edx],edi
  40879a:	jge    0x408741
  40879c:	mov    bl,0x30
  40879e:	adc    al,0x5c
  4087a0:	jae    0x40880f
  4087a2:	arpl   WORD PTR [esi*8+0x15db01a8],dx
  4087a9:	mov    WORD PTR [edx-0x25],fs
  4087ac:	clc    
  4087ad:	jecxz  0x4087b2
  4087af:	cmp    DWORD PTR [edi],ebp
  4087b1:	dec    eax
  4087b2:	sbb    al,0x2e
  4087b4:	stc    
  4087b5:	jb     0x4087d6
  4087b7:	and    ebp,DWORD PTR [eax+eax*4+0x36]
  4087bb:	dec    esi
  4087bc:	dec    ecx
  4087bd:	popa   
  4087be:	xchg   ebp,eax
  4087bf:	imul   esp,edx,0x3e92d074
  4087c5:	shl    DWORD PTR [ecx+0x43],1
  4087c8:	jmp    0x31aa:0xbf903312
  4087cf:	xchg   ecx,eax
  4087d0:	dec    ebp
  4087d1:	stos   DWORD PTR es:[edi],eax
  4087d2:	ins    DWORD PTR es:[edi],dx
  4087d3:	inc    esi
  4087d4:	sbb    DWORD PTR ds:0xcdca,ecx
  4087d9:	(bad)  
  4087da:	mov    ecx,0xe8f7810f
  4087df:	mov    ch,BYTE PTR [ebx]
  4087e1:	pushf  
  4087e2:	mov    ecx,edi
  4087e4:	shrd   eax,ecx,0x2
  4087e8:	or     eax,DWORD PTR [ebp+0x10]
  4087eb:	shr    ecx,0x2
  4087ee:	or     ecx,DWORD PTR [ebp+0x14]
  4087f1:	jmp    0x408b92
  4087f6:	sbb    cl,cl
  4087f8:	ins    DWORD PTR es:[edi],dx
  4087f9:	xchg   esi,eax
  4087fa:	mov    bl,0xba
  4087fc:	cmp    BYTE PTR [edx+ebp*4-0x21],cl
  408800:	xchg   esp,eax
  408801:	nop
  408802:	xchg   edi,eax
  408803:	outs   dx,BYTE PTR ds:[esi]
  408804:	jb     0x4087e3
  408806:	mov    esi,0xbdbebe73
  40880b:	les    edi,FWORD PTR [esi-0x68451242]
  408811:	mov    dl,al
  408813:	(bad)  
  408814:	idiv   BYTE PTR [ecx]
  408816:	sbb    BYTE PTR ds:0xacf2b6ba,cl
  40881c:	sbb    eax,0xa3f8bce7
  408821:	pop    edi
  408822:	mov    DWORD PTR [ebp+0x7a],esi
  408825:	sahf   
  408826:	ret    
  408827:	scas   eax,DWORD PTR es:[edi]
  408828:	jle    0x4087dd
  40882a:	js     0x408866
  40882c:	and    BYTE PTR [eax],bl
  40882e:	or     DWORD PTR [ebp+0x44b6b143],eax
  408834:	fucom  st(0)
  408836:	jp     0x4087ca
  408838:	bound  ecx,QWORD PTR [esi+0x1b]
  40883b:	jne    0x4088a7
  40883d:	dec    ecx
  40883e:	stos   DWORD PTR es:[edi],eax
  40883f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408840:	jno    0x4087fc
  408842:	push   edi
  408843:	in     eax,0x33
  408845:	add    cl,BYTE PTR [edx+0x511277b3]
  40884b:	outs   dx,DWORD PTR ds:[esi]
  40884c:	inc    ebp
  40884d:	sub    al,0xdc
  40884f:	das    
  408850:	inc    esp
  408851:	xor    eax,0xbc6236e4
  408856:	repnz std 
  408858:	imul   eax,DWORD PTR [ecx+0x2f01e571],0xffffff8b
  40885f:	outs   dx,BYTE PTR ds:[esi]
  408860:	in     al,dx
  408861:	popf   
  408862:	sub    eax,ebp
  408864:	mov    dh,0xdd
  408866:	mov    ebp,0x7127755
  40886b:	out    dx,eax
  40886c:	dec    ebx
  40886d:	int    0xd5
  40886f:	fldenv [edi+0x4b2741fb]
  408875:	and    BYTE PTR [ebp-0x233bc5e2],0xf6
  40887c:	pusha  
  40887d:	fwait
  40887e:	jns    0x408845
  408880:	fs ror esp,cl
  408883:	mov    al,ds:0x807c546d
  408889:	mov    BYTE PTR [ebp-0x74],bl
  40888c:	mov    DWORD PTR [edx+0x59],ecx
  40888f:	ss (bad) 
  408891:	or     esp,DWORD PTR [ebp-0xe]
  408894:	and    DWORD PTR [eax+0x16],0xfffffffe
  408898:	out    0xd2,al
  40889a:	jmp    0xff3df173
  40889f:	inc    ebx
  4088a0:	jp     0x408881
  4088a2:	dec    eax
  4088a3:	sub    DWORD PTR [ecx+0x16],eax
  4088a6:	test   BYTE PTR [ebx-0x6589c55e],bl
  4088ac:	mov    ebx,0xb8a72e34
  4088b1:	jae    0x408920
  4088b3:	or     DWORD PTR [ecx],ebp
  4088b5:	lock inc ecx
  4088b7:	out    0x48,al
  4088b9:	ss inc esp
  4088bb:	push   eax
  4088bc:	aas    
  4088bd:	popa   
  4088be:	into   
  4088bf:	scas   al,BYTE PTR es:[edi]
  4088c0:	test   BYTE PTR [edi-0x257a503],dh
  4088c6:	adc    DWORD PTR [edi],0x28
  4088c9:	inc    ebp
  4088ca:	adc    ah,cl
  4088cc:	xchg   ebx,eax
  4088cd:	sub    DWORD PTR [ebx+0x400f1d1f],edi
  4088d3:	xor    bl,BYTE PTR [edx-0x16]
  4088d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088d7:	mov    esi,DWORD PTR [edx-0x12e87bad]
  4088dd:	fild   QWORD PTR [edi]
  4088df:	clc    
  4088e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088e1:	push   ebx
  4088e2:	xchg   ecx,eax
  4088e3:	mov    ebx,0xc9cc5818
  4088e8:	(bad)  
  4088e9:	cli    
  4088ea:	(bad)  [ebp-0x65608bee]
  4088f0:	push   ds
  4088f1:	xchg   ebp,eax
  4088f2:	mov    ah,0x62
  4088f4:	pop    ecx
  4088f5:	or     ebp,eax
  4088f7:	xor    al,0xcb
  4088f9:	int    0x49
  4088fb:	adc    ebp,DWORD PTR ds:0x9c7b4ab8
  408901:	jmp    0x9c8e:0x53322ed2
  408908:	in     eax,dx
  408909:	shl    BYTE PTR [ecx+eax*2+0x72],0x28
  40890e:	cmp    cl,bl
  408910:	push   ds
  408911:	(bad)
  408914:	hlt    
  408915:	jge    0x4088df
  408917:	xchg   edx,eax
  408918:	and    al,0xa0
  40891a:	ret    0xf9e2
  40891d:	mov    dh,0x94
  40891f:	outs   dx,DWORD PTR ds:[esi]
  408920:	lock or cl,BYTE PTR [eax-0x2030dacf]
  408927:	sbb    esi,ebx
  408929:	cmp    eax,0x6295ef83
  40892e:	and    eax,0x43314d21
  408933:	and    DWORD PTR [eax+0x29],0x75
  408937:	jno    0x408966
  408939:	inc    ebx
  40893a:	push   es
  40893b:	lea    esi,[ecx-0x59f20435]
  408941:	push   es
  408942:	stos   BYTE PTR es:[edi],al
  408943:	jge    0x4088de
  408945:	ins    BYTE PTR es:[edi],dx
  408946:	fadd   DWORD PTR [eax]
  408948:	inc    ebx
  408949:	scas   al,BYTE PTR es:[edi]
  40894a:	cld    
  40894b:	and    edi,DWORD PTR [ebp+0x5b]
  40894e:	pop    es
  40894f:	(bad)  
  408950:	jmp    0x1b5d:0xb63b81ce
  408957:	mov    esp,DWORD PTR [eax+0x5f]
  40895a:	fs adc al,0x80
  40895d:	inc    esp
  40895e:	inc    ebx
  40895f:	inc    eax
  408960:	in     eax,0xb9
  408962:	loop   0x408944
  408964:	mov    al,0xbf
  408966:	(bad)  
  408968:	xchg   esi,eax
  408969:	ret    
  40896a:	int3   
  40896b:	push   ebx
  40896c:	and    edi,DWORD PTR [ecx-0x5]
  40896f:	pop    edi
  408970:	scas   eax,DWORD PTR es:[edi]
  408971:	xor    eax,ebp
  408973:	dec    esp
  408974:	mov    edx,0xdacb1ee0
  408979:	test   ebp,esp
  40897b:	bound  eax,QWORD PTR [ecx+0x19f31f36]
  408981:	add    ecx,ebp
  408983:	fstp   QWORD PTR [eax-0x5d42f38c]
  408989:	fwait
  40898a:	int    0x52
  40898c:	nop
  40898d:	mov    edx,0x2cabf89b
  408992:	pop    ss
  408993:	and    al,bl
  408995:	scas   al,BYTE PTR es:[edi]
  408996:	and    DWORD PTR [ebx+0x62],ebp
  408999:	inc    ebp
  40899a:	ret    
  40899b:	jae    0x40894e
  40899d:	sub    eax,0x9af0bcbd
  4089a2:	fadd   QWORD PTR [ebx-0x66]
  4089a5:	pop    ebx
  4089a6:	sbb    BYTE PTR [ebp-0x6c],0x92
  4089aa:	daa    
  4089ab:	sar    DWORD PTR [edi],0x30
  4089ae:	mov    ebx,0xc7bcbbf8
  4089b3:	std    
  4089b4:	test   bl,0x43
  4089b7:	int    0x72
  4089b9:	xchg   edi,eax
  4089ba:	aas    
  4089bb:	inc    esp
  4089bc:	outs   dx,DWORD PTR ds:[esi]
  4089bd:	ret    0x9263
  4089c0:	and    ah,ch
  4089c2:	add    dl,BYTE PTR [ebp-0x68b8c85b]
  4089c8:	push   ss
  4089c9:	stc    
  4089ca:	div    DWORD PTR [eax]
  4089cc:	pop    esi
  4089cd:	sahf   
  4089ce:	jb     0x4089e5
  4089d0:	scas   eax,DWORD PTR es:[edi]
  4089d1:	xor    bl,ah
  4089d3:	das    
  4089d4:	cmp    al,0xa3
  4089d6:	adc    al,0xe9
  4089d8:	jnp    0x408a22
  4089da:	(bad)  
  4089db:	dec    esp
  4089dc:	stos   BYTE PTR es:[edi],al
  4089dd:	add    ecx,DWORD PTR [esi-0x52]
  4089e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089e1:	test   BYTE PTR [edx-0x99fe3b6],dh
  4089e7:	cs dec ebx
  4089e9:	mul    DWORD PTR [edi-0x2]
  4089ec:	sub    al,0xc7
  4089ee:	sub    eax,0x2286b757
  4089f3:	inc    BYTE PTR [eax+0x45]
  4089f6:	and    al,0x73
  4089f8:	pop    ebp
  4089f9:	sbb    DWORD PTR [edx-0x240459f8],ecx
  4089ff:	jp     0x4089e1
  408a01:	arpl   WORD PTR [ecx+0x6ddf762f],sp
  408a07:	and    DWORD PTR [ebx+0x709f885a],ecx
  408a0d:	test   DWORD PTR [eax],esi
  408a0f:	(bad)  
  408a10:	mov    esi,0x19fe7ba
  408a15:	ficom  DWORD PTR [ecx]
  408a17:	push   ebx
  408a18:	xchg   ecx,eax
  408a19:	jmp    0xd1080c0
  408a1e:	xor    dl,BYTE PTR [ebx]
  408a20:	div    DWORD PTR [eax+0x35]
  408a23:	mov    ah,BYTE PTR [ebx]
  408a25:	out    dx,al
  408a26:	arpl   WORD PTR [esi-0x39],si
  408a29:	enter  0x8803,0x1d
  408a2d:	xchg   ecx,eax
  408a2e:	pusha  
  408a2f:	sbb    al,0xa4
  408a31:	xlat   BYTE PTR ds:[ebx]
  408a32:	(bad)  
  408a33:	mov    ds:0x11fa2f73,al
  408a38:	dec    edi
  408a39:	cs jmp 0x408a9d
  408a3c:	stos   DWORD PTR es:[edi],eax
  408a3d:	jg     0x408a8f
  408a3f:	and    BYTE PTR [edi],dl
  408a41:	mov    WORD PTR [edi+0x3f],cs
  408a44:	aas    
  408a45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a46:	fld    QWORD PTR [eax-0x4bfb829b]
  408a4c:	loopne 0x4089d6
  408a4e:	push   cs
  408a4f:	pusha  
  408a50:	and    ebx,DWORD PTR ds:0x734ed6cd
  408a56:	stos   BYTE PTR es:[edi],al
  408a57:	or     BYTE PTR [esi-0x330f7a61],0xd9
  408a5e:	in     al,dx
  408a5f:	and    ebp,edx
  408a61:	mov    WORD PTR es:[ebp+ebx*1+0x57],ss
  408a66:	xacquire xchg BYTE PTR [ecx+0x44],dh
  408a6a:	pop    eax
  408a6b:	int3   
  408a6c:	pop    ecx
  408a6d:	into   
  408a6e:	fcmove st,st(6)
  408a70:	fidivr DWORD PTR [ecx]
  408a72:	sbb    edi,DWORD PTR [edi+eax*1+0x38cc7ef8]
  408a79:	mov    al,ds:0x39ee7fd6
  408a7e:	push   ecx
  408a7f:	mov    eax,0x53fcc073
  408a84:	test   DWORD PTR [ebp-0x5c],0x3efcaf03
  408a8b:	in     eax,0xe4
  408a8d:	loopne 0x408a2d
  408a8f:	aaa    
  408a90:	add    ebx,DWORD PTR [ecx+ecx*2]
  408a93:	mov    eax,0x3515b917
  408a98:	pop    ebx
  408a99:	jge    0x408a7d
  408a9b:	mov    esp,DWORD PTR [esi-0x1d]
  408a9e:	imul   edx,DWORD PTR [ebx-0x24],0xffffffbb
  408aa2:	push   eax
  408aa3:	js     0x408ab4
  408aa5:	add    al,BYTE PTR [esi-0x2f9bdc1a]
  408aab:	js     0x408a92
  408aad:	adc    esp,ebx
  408aaf:	sub    esp,edi
  408ab1:	sub    eax,0x4661fa43
  408ab6:	js     0x408ad8
  408ab8:	out    0xcc,eax
  408aba:	pushf  
  408abb:	pushf  
  408abc:	mov    DWORD PTR [ebx+eiz*1+0x75],ebp
  408ac0:	dec    esi
  408ac1:	test   eax,0x6beeae2a
  408ac6:	dec    esi
  408ac7:	adc    bl,ah
  408ac9:	cwde   
  408aca:	cwde   
  408acb:	retf   0xc2fd
  408ace:	and    edi,edi
  408ad0:	sub    BYTE PTR [esi+0x68087b63],ch
  408ad6:	or     BYTE PTR [esi],cl
  408ad8:	jmp    0x408b38
  408ada:	cwde   
  408adb:	(bad)  [ebp+esi*1-0x7efeecc7]
  408ae2:	hlt    
  408ae3:	and    DWORD PTR [edi+0x3b],ecx
  408ae6:	add    dl,al
  408ae8:	stc    
  408ae9:	call   FWORD PTR [ebx+0x5633df5d]
  408aef:	mov    ah,0xc4
  408af1:	fistp  QWORD PTR [esi]
  408af3:	out    0x62,eax
  408af5:	cmp    DWORD PTR [ecx-0x70],eax
  408af8:	jae    0x408b70
  408afa:	dec    DWORD PTR [eax-0x26]
  408afd:	aas    
  408afe:	lock add eax,0x8fb0c791
  408b04:	js     0x408abe
  408b06:	and    DWORD PTR [edi],edx
  408b08:	in     eax,0xaa
  408b0a:	cmp    eax,0x9a98a8f2
  408b0f:	clc    
  408b10:	adc    al,0x54
  408b12:	cmp    eax,ecx
  408b14:	fcmovb st,st(0)
  408b16:	outs   dx,BYTE PTR ds:[esi]
  408b17:	lds    ebx,FWORD PTR [ecx+edx*2]
  408b1a:	push   cs
  408b1b:	and    ebp,edx
  408b1d:	sub    ebp,ebx
  408b1f:	inc    edx
  408b20:	rcr    edi,1
  408b22:	lods   eax,DWORD PTR ds:[esi]
  408b23:	add    al,0x26
  408b25:	call   DWORD PTR [edx-0x3c]
  408b28:	ja     0x408b4e
  408b2a:	arpl   WORD PTR [eax-0x7a027134],si
  408b30:	addr16 jp 0x408b05
  408b33:	les    ebx,FWORD PTR [edx]
  408b35:	out    0x70,al
  408b37:	jmp    0x3c7d5da
  408b3c:	sub    eax,0x553d8a8f
  408b41:	or     DWORD PTR [edx+0x48],eax
  408b44:	or     BYTE PTR [edi+0x49],al
  408b47:	push   0x6d93ddbb
  408b4c:	bound  ebp,QWORD PTR [ebx]
  408b4e:	jmp    0x408ba3
  408b50:	scas   eax,DWORD PTR es:[edi]
  408b51:	sub    al,BYTE PTR [ecx]
  408b53:	gs inc ecx
  408b55:	rol    dh,1
  408b57:	jmp    0xfdab:0xec286a7
  408b5e:	pop    ss
  408b5f:	inc    edi
  408b60:	mov    ch,0x1d
  408b62:	dec    edi
  408b63:	mov    esi,DWORD PTR [edx-0x70]
  408b66:	retf   
  408b67:	mov    fs,edi
  408b69:	ss push cs
  408b6b:	in     eax,0xe6
  408b6d:	in     al,0xe4
  408b6f:	cmp    DWORD PTR gs:0xd11ef957,ebp
  408b76:	adc    BYTE PTR ds:0x140ea40e,ah
  408b7c:	(bad)  
  408b7d:	aam    0xdd
  408b7f:	outs   dx,DWORD PTR ds:[esi]
  408b80:	out    0x75,al
  408b82:	cmp    ebp,DWORD PTR [ecx-0x21]
  408b85:	push   edx
  408b86:	js     0x408bae
  408b88:	add    ch,cl
  408b8a:	cmp    al,0xce
  408b8c:	add    ah,BYTE PTR [eax]
  408b8e:	fstp   st(2)
  408b90:	jge    0x408bf5
  408b92:	cmp    edx,eax
  408b94:	jne    0x408ba3
  408b9a:	cmp    DWORD PTR [ebp+0xc],ecx
  408b9d:	je     0x408bb3
  408ba3:	push   DWORD PTR [ebp+0x20]
  408ba6:	push   DWORD PTR [ebp+0x1c]
  408ba9:	push   DWORD PTR [ebp+0x18]
  408bac:	push   ebx
  408bad:	push   esi
  408bae:	call   0x411472
  408bb3:	pop    edi
  408bb4:	leave  
  408bb5:	ret    0x1c
  408bb8:	cmp    cl,0x40
  408bbb:	jae    0x408bf8
  408bc1:	cmp    cl,0x20
  408bc4:	mov    DWORD PTR ds:0x42836d,0x1ce5
  408bce:	jae    0x408be4
  408bd4:	xor    DWORD PTR ds:0x428531,0x6917
  408bde:	shrd   eax,edx,cl
  408be1:	shr    edx,cl
  408be3:	ret    
  408be4:	mov    eax,edx
  408be6:	xor    edx,edx
  408be8:	and    cl,0x1f
  408beb:	mov    DWORD PTR ds:0x428589,0x321d
  408bf5:	shr    eax,cl
  408bf7:	ret    
  408bf8:	xor    eax,eax
  408bfa:	xor    edx,edx
  408bfc:	ret    
  408bfd:	push   ebp
  408bfe:	mov    ebp,esp
  408c00:	jmp    0x408e7f
  408c05:	addr16 hlt 
  408c07:	js     0x408c4d
  408c09:	jl     0x408c57
  408c0b:	jnp    0x408c09
  408c0d:	dec    edx
  408c0e:	xlat   BYTE PTR ds:[ebx]
  408c0f:	pop    esi
  408c10:	sahf   
  408c11:	rcr    BYTE PTR ds:0x79bd920a,1
  408c17:	mov    esi,0xbec279be
  408c1c:	mov    esi,0xdcfa7bcf
  408c21:	push   ds
  408c22:	and    BYTE PTR [esi+esi*8+0x83f8c24],ch
  408c29:	fadd   QWORD PTR [ebx]
  408c2b:	and    ebx,DWORD PTR [ebx+0x59277f5]
  408c31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c32:	cmp    ebx,DWORD PTR [esi]
  408c34:	or     cl,bh
  408c36:	dec    esi
  408c37:	stos   BYTE PTR es:[edi],al
  408c38:	gs inc esp
  408c3a:	push   cs
  408c3b:	mov    esi,0x2aff4ccf
  408c40:	(bad)  
  408c41:	xchg   DWORD PTR [eax+eax*8],esp
  408c44:	(bad)  
  408c45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c46:	lahf   
  408c47:	jmp    0x408c78
  408c49:	(bad)  
  408c4a:	fcomp  st(2)
  408c4c:	std    
  408c4d:	jbe    0x408c8e
  408c4f:	bound  edx,QWORD PTR [edx-0x10]
  408c52:	out    dx,al
  408c53:	out    0xd6,eax
  408c55:	out    0xf0,al
  408c57:	and    esp,0xffffffb5
  408c5a:	rcl    BYTE PTR [ecx-0x45],0x76
  408c5e:	ja     0x408bfd
  408c60:	xchg   bh,dl
  408c62:	call   0xdd67856c
  408c67:	scas   al,BYTE PTR es:[edi]
  408c68:	mov    ebx,0x851956c4
  408c6d:	lock mov al,ds:0x2913f6b8
  408c73:	sti    
  408c74:	(bad)  
  408c75:	repz push esi
  408c77:	dec    esi
  408c78:	fcmovu st,st(3)
  408c7a:	repnz cvttsd2si esi,QWORD PTR [edi-0x4e4d9feb]
  408c83:	repz adc dh,BYTE PTR [edi+0x2d7f7993]
  408c8a:	out    0xf0,al
  408c8c:	pop    esp
  408c8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c8e:	push   ebx
  408c8f:	add    DWORD PTR [eax-0x7470803f],ebp
  408c95:	js     0x408c7c
  408c97:	push   ss
  408c98:	cmc    
  408c99:	rol    edx,1
  408c9b:	push   0x33c8d790
  408ca0:	(bad)  
  408ca1:	cmc    
  408ca2:	jns    0x408d21
  408ca4:	push   eax
  408ca5:	mov    eax,ds:0xf9e8c417
  408caa:	or     BYTE PTR fs:[edi+0x6b],cl
  408cae:	pusha  
  408caf:	in     al,dx
  408cb0:	in     al,0x52
  408cb2:	lods   al,BYTE PTR ds:[esi]
  408cb3:	adc    BYTE PTR [ebp-0x3a],ch
  408cb6:	mov    ebp,0x1a00d379
  408cbb:	inc    edx
  408cbd:	sub    al,BYTE PTR [ecx]
  408cbf:	xor    cl,dl
  408cc1:	sub    ax,cx
  408cc4:	gs mov dl,0xaa
  408cc7:	arpl   WORD PTR [eax+edi*4+0x2d],bp
  408ccb:	adc    ebp,DWORD PTR [edi-0x56b282f8]
  408cd1:	pop    edi
  408cd2:	ds out 0xf7,eax
  408cd5:	pop    ds
  408cd6:	cld    
  408cd7:	pop    ss
  408cd8:	iret   
  408cd9:	mov    ecx,0x7c93d18f
  408cde:	pop    ebx
  408cdf:	push   ss
  408ce0:	dec    eax
  408ce1:	mov    esi,edi
  408ce3:	sub    esi,DWORD PTR [ebx]
  408ce5:	add    DWORD PTR [ecx-0x4a],0x3e
  408ce9:	es out 0x15,eax
  408cec:	cmp    ecx,esp
  408cee:	sub    esp,eax
  408cf0:	fistp  WORD PTR [edi+0x23160049]
  408cf6:	sbb    dh,BYTE PTR [esi]
  408cf8:	mov    al,0x26
  408cfa:	jbe    0x408ce8
  408cfc:	cmp    ebp,DWORD PTR [esi-0x536e1431]
  408d02:	mov    al,ds:0xd4819547
  408d07:	inc    esp
  408d08:	mov    cl,0xfa
  408d0a:	mov    esp,0x67cc14ef
  408d0f:	lock xchg DWORD PTR [ebx],esi
  408d12:	pushf  
  408d13:	pop    ecx
  408d14:	push   ds
  408d15:	fidivr DWORD PTR [eax+0x6a05a80]
  408d1b:	mov    edi,0xad63043d
  408d20:	std    
  408d21:	adc    edi,edx
  408d23:	aaa    
  408d24:	sub    BYTE PTR [ebx],dl
  408d26:	jge    0x408d63
  408d28:	jmp    0x9e9:0x7e17ae45
  408d2f:	inc    edi
  408d30:	pop    esp
  408d31:	xchg   edx,eax
  408d32:	gs sub eax,0x49b37112
  408d38:	not    DWORD PTR [ebx-0x6469c975]
  408d3e:	sbb    al,0xed
  408d40:	lahf   
  408d41:	mov    ebx,0x99d3cda7
  408d46:	nop
  408d47:	push   0x2049b091
  408d4c:	or     ch,ch
  408d4e:	enter  0xf3a8,0xad
  408d52:	mov    esp,0x9a0f8f30
  408d57:	xlat   BYTE PTR ds:[ebx]
  408d58:	and    DWORD PTR [eax+ecx*2+0x6008ae34],esi
  408d5f:	add    eax,0x6a95032
  408d64:	push   edi
  408d65:	cmp    eax,0x9e435ce0
  408d6a:	push   edx
  408d6b:	stc    
  408d6c:	jmp    0x408d2a
  408d6e:	push   esp
  408d6f:	cwde   
  408d70:	and    DWORD PTR [ebp-0x5e54d6af],edi
  408d76:	and    eax,0x8439709d
  408d7b:	adc    BYTE PTR [esi],ch
  408d7d:	jecxz  0x408d82
  408d7f:	xchg   ebx,eax
  408d80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d81:	in     eax,0x7e
  408d83:	jb     0x408dff
  408d85:	enter  0x171a,0xef
  408d89:	mov    DWORD PTR [eax],edx
  408d8b:	add    DWORD PTR [edi-0x36],0xe33b2bb
  408d92:	mov    esi,0x641c4c0d
  408d97:	imul   esp,DWORD PTR es:[edx+0x4],0xb371d9f4
  408d9f:	sbb    eax,0x420439d2
  408da4:	mov    ah,0xfa
  408da6:	pop    es
  408da7:	inc    ebp
  408da8:	sub    ecx,DWORD PTR [ebx]
  408daa:	jo     0x408dd2
  408dac:	mov    esi,0x5b84067c
  408db1:	mov    bl,0x24
  408db3:	mov    ebp,0x6c07ccac
  408db8:	ror    DWORD PTR [ebx+0x19],0xca
  408dbc:	cld    
  408dbd:	cmp    DWORD PTR [edx],esi
  408dbf:	outs   dx,BYTE PTR ds:[esi]
  408dc0:	jne    0x408d5f
  408dc2:	sub    BYTE PTR [edx+edx*2],cl
  408dc5:	jb     0x408d4c
  408dc7:	jmp    0xc491:0xf516abf8
  408dce:	mov    bh,0xe3
  408dd0:	mov    al,0x16
  408dd2:	mov    cl,BYTE PTR [ebx+eax*4-0x58]
  408dd6:	mov    dh,0x93
  408dd8:	stc    
  408dd9:	int3   
  408dda:	jle    0x408d88
  408ddc:	test   DWORD PTR [esi],0x7d2b5e93
  408de2:	scas   al,BYTE PTR es:[edi]
  408de3:	mov    edx,0x2f4ca3f2
  408de8:	sti    
  408de9:	hlt    
  408dea:	ins    BYTE PTR es:[edi],dx
  408deb:	icebp  
  408dec:	data16 (bad) [ebx+0x75c48079]
  408df3:	std    
  408df4:	dec    edx
  408df5:	xor    ebp,DWORD PTR [eax+0x2640a248]
  408dfb:	cmp    DWORD PTR [edi-0x4e1318d],esp
  408e01:	and    eax,0x7e0ae987
  408e06:	and    cl,BYTE PTR [ebp+0x69b69eb4]
  408e0c:	addr16 xchg edi,eax
  408e0e:	push   ecx
  408e0f:	inc    eax
  408e10:	ffree  st(3)
  408e12:	out    dx,eax
  408e13:	ret    0xc3c9
  408e16:	int3   
  408e17:	jmp    0x408da3
  408e19:	jge    0x408e5c
  408e1b:	into   
  408e1c:	pop    ds
  408e1d:	imul   esi,DWORD PTR [ecx+ebx*4],0x23
  408e21:	test   ebx,edx
  408e23:	aam    0x43
  408e25:	mov    ds:0xb21a5166,al
  408e2a:	pop    ebx
  408e2b:	icebp  
  408e2c:	add    esp,DWORD PTR [ebx]
  408e2e:	outs   dx,DWORD PTR ds:[esi]
  408e2f:	pushf  
  408e30:	mov    al,0x63
  408e32:	inc    esi
  408e33:	ret    
  408e34:	aas    
  408e35:	hlt    
  408e36:	gs iret 
  408e38:	jb     0x408dd1
  408e3a:	int    0x6a
  408e3c:	mov    ch,0xd7
  408e3e:	xor    BYTE PTR [eax-0x1b],bh
  408e41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e42:	pop    esp
  408e43:	and    ah,dh
  408e45:	sbb    BYTE PTR [ebx-0x1d11e614],al
  408e4b:	sub    DWORD PTR [esi],esi
  408e4d:	ss out 0x3c,eax
  408e50:	inc    DWORD PTR [ebp+0x34]
  408e53:	jecxz  0x408eaf
  408e55:	cmp    ecx,DWORD PTR [eax+0x21]
  408e58:	mov    al,0x23
  408e5a:	mov    esi,0x92fa140f
  408e5f:	mov    edx,0xe58847f
  408e64:	fcomip st,st(0)
  408e66:	es xor edx,0x94f42ab7
  408e6d:	push   ss
  408e6e:	pop    ebp
  408e6f:	jp     0x408e0d
  408e71:	ins    BYTE PTR es:[edi],dx
  408e72:	dec    ebx
  408e73:	stos   BYTE PTR es:[edi],al
  408e74:	ret    
  408e75:	test   BYTE PTR [eax+0x36ad459c],0x97
  408e7c:	ficomp WORD PTR [edx+0x30ec834c]
  408e82:	mov    DWORD PTR [ebp-0x18],0xcb79b576
  408e89:	mov    eax,0x9c2b8ae8
  408e8e:	neg    ecx
  408e90:	mov    DWORD PTR [ebp-0x14],eax
  408e93:	adc    DWORD PTR ds:0x428479,0x14e
  408e9d:	jmp    0x40911c
  408ea2:	outs   dx,DWORD PTR ds:[esi]
  408ea3:	in     eax,0x49
  408ea5:	rcr    BYTE PTR [esp+esi*2+0x7b],1
  408ea9:	retw   
  408eab:	dec    ebx
  408eac:	jo     0x408e8b
  408eae:	sti    
  408eaf:	fxch   st(1)
  408eb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408eb2:	jp     0x408f31
  408eb4:	mov    esi,0xbec279be
  408eb9:	mov    esi,0x93f50c60
  408ebe:	and    esp,DWORD PTR [edi]
  408ec0:	out    dx,eax
  408ec1:	scas   eax,DWORD PTR es:[edi]
  408ec2:	pop    ecx
  408ec3:	pop    esi
  408ec4:	mov    ecx,DWORD PTR [edx-0x1b]
  408ec7:	mov    ah,0xd4
  408ec9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408eca:	aaa    
  408ecb:	call   0x75fa:0x6de33934
  408ed2:	aam    0x12
  408ed4:	test   BYTE PTR [ecx+ebx*2],ch
  408ed7:	mov    dl,0x52
  408ed9:	push   edx
  408eda:	xlat   BYTE PTR ds:[ebx]
  408edb:	loope  0x408f34
  408edd:	hlt    
  408ede:	xchg   ch,ah
  408ee0:	mov    bl,BYTE PTR [ecx-0xe]
  408ee3:	or     eax,0xb6440d56
  408ee8:	fldcw  WORD PTR [ecx-0x33acfdb2]
  408eee:	mov    ecx,0x58a255bc
  408ef3:	mov    edi,0xbe76e0ac
  408ef8:	pop    es
  408ef9:	call   0x87ae:0xb7e5f629
  408f00:	xor    BYTE PTR [edi+0x7c79017f],ch
  408f06:	adc    esi,DWORD PTR [eax]
  408f08:	std    
  408f09:	ret    
  408f0a:	jmp    0x3ff86289
  408f0f:	int    0xe2
  408f11:	xor    al,0xba
  408f13:	mov    dl,0x63
  408f15:	mov    ds:0x9e19bda7,eax
  408f1a:	cwde   
  408f1b:	jmp    0x81698cb3
  408f20:	mov    edx,0xee693ffd
  408f25:	ss mov ch,0x85
  408f28:	retf   
  408f29:	int3   
  408f2a:	rcl    BYTE PTR [edi-0x1b],0x2e
  408f2e:	cmp    esi,eax
  408f30:	ret    0x8bcc
  408f33:	sub    DWORD PTR [edi],ecx
  408f35:	in     al,0xa7
  408f37:	addr16 mov ebx,0x79c49557
  408f3d:	lea    edx,[esi-0x5b0517de]
  408f43:	test   BYTE PTR [ebx-0x250c8f1b],0xc0
  408f4a:	adc    al,0x40
  408f4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f4d:	loopne 0x408f5c
  408f4f:	and    al,0x1
  408f51:	jp     0x408efb
  408f53:	jno    0x408f64
  408f55:	ret    
  408f56:	cwde   
  408f57:	dec    ebp
  408f58:	out    0x76,eax
  408f5a:	push   ds
  408f5b:	out    dx,al
  408f5c:	xchg   BYTE PTR [edi-0x6b],cl
  408f5f:	add    al,BYTE PTR [ebp-0x6]
  408f62:	xlat   BYTE PTR ds:[ebx]
  408f63:	jnp    0x408f1b
  408f65:	inc    esp
  408f66:	inc    ebx
  408f67:	aas    
  408f68:	pushf  
  408f69:	cmp    esp,ebp
  408f6b:	dec    esp
  408f6c:	mov    dh,0x53
  408f6e:	repnz or edx,DWORD PTR [ecx]
  408f71:	retf   0x2fa6
  408f74:	adc    eax,DWORD PTR [esi]
  408f76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f77:	in     al,0x47
  408f79:	mov    esp,DWORD PTR [edx]
  408f7b:	mov    al,BYTE PTR [edi]
  408f7d:	scas   al,BYTE PTR es:[edi]
  408f7e:	pop    ss
  408f7f:	pop    ebp
  408f80:	test   eax,0x2fb52878
  408f85:	inc    edx
  408f86:	ja     0x408fa9
  408f88:	stos   DWORD PTR es:[edi],eax
  408f89:	add    al,0xa1
  408f8b:	and    DWORD PTR cs:[ebp-0x62],esi
  408f8f:	push   esp
  408f90:	ficom  WORD PTR [edi+0x7d]
  408f93:	push   ecx
  408f94:	sahf   
  408f95:	outs   dx,BYTE PTR ds:[esi]
  408f96:	(bad)  
  408f97:	sub    bh,BYTE PTR [ebp+ebp*4+0x36]
  408f9b:	(bad)
  408f9f:	fld    st(3)
  408fa1:	sub    DWORD PTR [edx-0x55],ebx
  408fa4:	jp     0x409021
  408fa6:	sbb    al,0x2c
  408fa8:	das    
  408fa9:	xchg   esp,eax
  408faa:	mov    esp,0x6acc077c
  408faf:	(bad)  
  408fb0:	pop    ss
  408fb1:	jp     0x40900b
  408fb3:	ss push 0x602eb55a
  408fb9:	gs mov ebx,0xe81fdb2d
  408fbf:	sub    eax,0xc3967b62
  408fc4:	push   0x5c
  408fc6:	repz jns 0x408fe5
  408fc9:	pop    edi
  408fca:	sbb    DWORD PTR [ebp-0x6a],ebx
  408fcd:	dec    ebx
  408fce:	imul   edi,DWORD PTR [ecx],0xfffffff1
  408fd1:	adc    eax,0x32237e45
  408fd6:	jmp    0x5c07ee66
  408fdb:	pop    eax
  408fdc:	mov    edi,0xaa2caa1f
  408fe1:	push   ebp
  408fe2:	jp     0x408fd9
  408fe4:	add    esi,DWORD PTR [esi-0xa]
  408fe7:	pop    edx
  408fe8:	in     al,dx
  408fe9:	mov    ebx,0x1b1ddce1
  408fee:	mov    bl,BYTE PTR [eax-0x30584aa1]
  408ff4:	sti    
  408ff5:	stc    
  408ff6:	mov    esp,0xc26ba853
  408ffb:	sbb    bl,dl
  408ffd:	inc    edx
  408ffe:	das    
  408fff:	aad    0xc5
  409001:	repz loopne 0x408fef
  409004:	or     esp,ebx
  409006:	jg     0x409068
  409008:	retf   0x239b
  40900b:	sub    DWORD PTR [eax+0x210bb35d],ebx
  409011:	sbb    dl,ah
  409013:	ret    
  409014:	lea    ecx,[eax-0x116457e3]
  40901a:	or     eax,0x9e199277
  40901f:	cdq    
  409020:	jle    0x408fdc
  409022:	xchg   DWORD PTR [esi+0x43df8d9],eax
  409028:	sbb    BYTE PTR [edx],cl
  40902a:	and    edx,DWORD PTR [edi+0x68]
  40902d:	je     0x40904b
  40902f:	clc    
  409030:	rcr    DWORD PTR [ecx],cl
  409032:	in     eax,dx
  409033:	cli    
  409034:	call   0x350a:0x9668a2d7
  40903b:	pop    ecx
  40903c:	lods   eax,DWORD PTR ds:[esi]
  40903d:	outs   dx,BYTE PTR ds:[esi]
  40903e:	outs   dx,DWORD PTR ds:[esi]
  40903f:	aam    0x7
  409041:	arpl   sp,bp
  409043:	mov    esp,0xa07dca45
  409048:	add    al,0x6
  40904a:	mov    dl,0x8f
  40904c:	mov    ah,0x82
  40904e:	stc    
  40904f:	pop    ds
  409050:	sar    DWORD PTR [ebx-0x87c01],1
  409056:	push   edi
  409057:	cmp    dh,dl
  409059:	int3   
  40905a:	(bad)  
  40905b:	pop    ebp
  40905c:	sar    dh,0x51
  40905f:	pop    eax
  409060:	cmp    dl,ch
  409062:	(bad)  
  409065:	jle    0x408ffd
  409067:	scas   al,BYTE PTR es:[edi]
  409068:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409069:	hlt    
  40906a:	neg    DWORD PTR [ecx-0x5402af14]
  409070:	iret   
  409071:	inc    esi
  409072:	push   eax
  409073:	push   ss
  409074:	inc    ebx
  409075:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409076:	jno    0x4090b0
  409078:	push   cs
  409079:	mov    dh,0x0
  40907b:	inc    esp
  40907c:	daa    
  40907d:	test   eax,0xb08131f4
  409082:	mov    WORD PTR [eax],?
  409084:	jbe    0x40901d
  409086:	fistp  QWORD PTR [esi]
  409088:	jo     0x409097
  40908a:	fistp  QWORD PTR [ebx]
  40908c:	je     0x4090b5
  40908e:	into   
  40908f:	call   0x5887:0x27e0665f
  409096:	lahf   
  409097:	out    0x23,eax
  409099:	inc    eax
  40909a:	inc    esi
  40909b:	int3   
  40909c:	adc    al,0x6b
  40909e:	(bad)  
  40909f:	and    eax,0x42f51395
  4090a4:	jns    0x4090ba
  4090a6:	add    BYTE PTR [eax-0x6e],cl
  4090a9:	sub    BYTE PTR [edx-0x63],0xb6
  4090ad:	mov    ebp,0x1ce7bb60
  4090b2:	test   esp,edx
  4090b4:	fst    DWORD PTR [ecx-0x61]
  4090b7:	push   0xa02b0e98
  4090bc:	das    
  4090bd:	xor    dl,BYTE PTR [ecx+0x20]
  4090c0:	out    0xae,al
  4090c2:	dec    esi
  4090c3:	lea    esp,[edi]
  4090c5:	out    0xc9,eax
  4090c7:	mov    ebp,0x7daaade9
  4090cc:	inc    ecx
  4090cd:	push   0xbd7beb64
  4090d2:	je     0x409132
  4090d4:	je     0x4090e3
  4090d6:	or     al,0x14
  4090d8:	int3   
  4090d9:	push   0x40c72b5b
  4090de:	test   al,0x1c
  4090e0:	push   ecx
  4090e1:	mov    edx,0x5cdc1679
  4090e6:	adc    eax,ecx
  4090e8:	stc    
  4090e9:	adc    DWORD PTR [eax],0xc881e8a4
  4090ef:	imul   edx,DWORD PTR [esi-0x70f3440c],0x3769b463
  4090f9:	adc    BYTE PTR [esi+0x30],cl
  4090fc:	mov    ds:0x2d65e21,eax
  409101:	xchg   ebx,eax
  409102:	js     0x409181
  409104:	sbb    ah,bl
  409106:	sub    ebx,edi
  409108:	jp     0x409113
  40910a:	shr    DWORD PTR [edi+eiz*2+0x180d20ab],1
  409111:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409112:	adc    edx,0xffffff8e
  409115:	in     eax,0x1
  409117:	xchg   ebp,eax
  409118:	inc    ebp
  409119:	iret   
  40911a:	mov    bl,0x34
  40911c:	mov    DWORD PTR [ebp-0x30],0xcb79b572
  409123:	mov    DWORD PTR [ebp-0x2c],eax
  409126:	cmp    DWORD PTR ds:0x4285a1,0x0
  40912d:	mov    DWORD PTR ds:0x42859d,0x24a6
  409137:	mov    DWORD PTR ds:0x428451,0x40da
  409141:	jmp    0x4091a4
  409146:	not    eax
  409148:	mov    DWORD PTR ds:0x4284f5,0x7db9
  409152:	cmp    DWORD PTR ds:0x4285a1,0x0
  409159:	jae    0x409182
  40915f:	push   0x1999
  409164:	push   0x428177
  409169:	push   0x428323
  40916e:	call   DWORD PTR ds:0x42e0c8
  409174:	sub    ecx,DWORD PTR ds:0x428399
  40917a:	and    ecx,ecx
  40917c:	adc    DWORD PTR ds:0x428439,ebx
  409182:	mov    ecx,DWORD PTR ds:0x4284a1
  409188:	add    DWORD PTR ds:0x428371,ecx
  40918e:	neg    DWORD PTR ds:0x428365
  409194:	xor    DWORD PTR ds:0x428525,ebx
  40919a:	or     DWORD PTR ds:0x428459,0x673
  4091a4:	mov    DWORD PTR [ebp-0x28],0xae8f94a8
  4091ab:	mov    DWORD PTR [ebp-0x24],0x29bd2
  4091b2:	mov    DWORD PTR [ebp-0x20],0x6ec3
  4091b9:	sbb    eax,ecx
  4091bb:	push   esi
  4091bc:	mov    DWORD PTR [ebp-0x1c],0x2a74
  4091c3:	xor    ecx,ecx
  4091c5:	xor    ecx,DWORD PTR ds:0x4283e9
  4091cb:	mov    eax,ds:0x42855d
  4091d0:	sub    ecx,eax
  4091d2:	or     ecx,DWORD PTR [ecx+eax*1]
  4091d5:	mov    DWORD PTR [ebp-0x10],0x2e2c
  4091dc:	push   0x5285
  4091e1:	or     DWORD PTR ds:0x428371,ecx
  4091e7:	mov    DWORD PTR [ebp-0xc],0x3d0a
  4091ee:	and    ecx,ecx
  4091f0:	mov    eax,DWORD PTR [ebp-0x10]
  4091f3:	and    ecx,DWORD PTR ds:0x428521
  4091f9:	mov    ecx,DWORD PTR [ebp-0xc]
  4091fc:	sub    DWORD PTR ds:0x428521,0x4285a9
  409206:	push   0x712c
  40920b:	or     DWORD PTR ds:0x42852d,0x428449
  409215:	push   ecx
  409216:	sbb    DWORD PTR ds:0x42851d,0x3312
  409220:	push   eax
  409221:	call   0x41594e
  409226:	and    DWORD PTR ds:0x42851d,edi
  40922c:	mov    ecx,DWORD PTR [ebp-0x20]
  40922f:	mov    esi,DWORD PTR [ebp-0x1c]
  409232:	and    DWORD PTR ds:0x428529,0x428441
  40923c:	push   0x5f43
  409241:	and    DWORD PTR ds:0x428471,0x42858d
  40924b:	or     edx,0x69b4
  409251:	push   0x1657
  409256:	or     eax,0x528b
  40925b:	xor    edx,esi
  40925d:	xor    eax,ecx
  40925f:	xor    DWORD PTR ds:0x428455,0x4284f9
  409269:	push   edx
  40926a:	push   eax
  40926b:	or     DWORD PTR ds:0x428399,0x42c0
  409275:	call   0x41594e
  40927a:	mov    esi,DWORD PTR ds:0x42845d
  409280:	xor    esi,DWORD PTR ds:0x428495
  409286:	mov    DWORD PTR ds:0x42845d,esi
  40928c:	mov    ecx,DWORD PTR [ebp-0x28]
  40928f:	and    esi,DWORD PTR ds:0x428599
  409295:	jmp    0x409514
  40929a:	aam    0x9e
  40929c:	jp     0x409286
  40929e:	mov    esp,0xba543b
  4092a3:	ret    0x923c
  4092a6:	pusha  
  4092a7:	xor    eax,0x8335cfc3
  4092ac:	mov    esi,0xbec279be
  4092b1:	mov    esi,0xc3d2958e
  4092b6:	jp     0x40924c
  4092b8:	cmp    BYTE PTR [eax],cl
  4092ba:	mov    ebx,0x68082e4a
  4092bf:	cld    
  4092c0:	(bad)  
  4092c1:	xor    al,0xa0
  4092c3:	push   ebx
  4092c4:	js     0x409320
  4092c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092c7:	arpl   bx,sp
  4092c9:	cmp    al,0x9e
  4092cb:	(bad)  
  4092cc:	push   esi
  4092cd:	or     BYTE PTR [ebx],bh
  4092cf:	xor    ch,BYTE PTR fs:[edi-0x4c3bb31]
  4092d6:	test   BYTE PTR [ebx-0x63],bh
  4092d9:	retf   
  4092da:	cmp    bh,BYTE PTR [ecx]
  4092dc:	pop    ebp
  4092dd:	and    edx,DWORD PTR [ebx-0x5b230cf0]
  4092e3:	outs   dx,DWORD PTR ds:[esi]
  4092e4:	sub    dl,BYTE PTR [edx]
  4092e6:	jo     0x409328
  4092e8:	pop    es
  4092e9:	arpl   WORD PTR [eax],bx
  4092eb:	fistp  QWORD PTR [edi+edi*1+0x8]
  4092ef:	jecxz  0x40928f
  4092f1:	lds    edi,FWORD PTR [esi-0x3]
  4092f4:	das    
  4092f5:	xor    al,0x9e
  4092f7:	adc    DWORD PTR ss:[eax-0x797c50f4],eax
  4092fe:	xchg   edi,eax
  4092ff:	dec    eax
  409300:	push   ecx
  409301:	mov    esp,0x3b9ae46b
  409306:	xchg   edx,eax
  409307:	xchg   edi,eax
  409308:	jmp    0x940eb332
  40930d:	shl    ecx,0x51
  409310:	xchg   BYTE PTR [edx],al
  409312:	call   0x22f1:0x2958e861
  409319:	and    BYTE PTR [eax],0xd5
  40931c:	and    ah,dh
  40931e:	or     BYTE PTR [ebx+0x24],dl
  409321:	xor    bh,0xb7
  409324:	pop    ss
  409325:	dec    ebp
  409326:	imul   ecx,edx,0xffffffc9
  409329:	pop    es
  40932a:	retf   
  40932b:	or     BYTE PTR [ebx+eax*2],al
  40932e:	push   0xffffff81
  409330:	xchg   ebp,eax
  409331:	in     al,dx
  409332:	cmp    DWORD PTR [ebx],esp
  409334:	test   eax,0xe397e6de
  409339:	add    DWORD PTR [edx+0x19],edx
  40933c:	je     0x4093a3
  40933e:	mov    ah,0xe7
  409340:	push   esp
  409341:	cmp    dh,ch
  409343:	mov    ebp,0xd90ae2a2
  409348:	cmp    eax,0x7bb43482
  40934d:	imul   ecx,DWORD PTR [eax+ebp*8],0x6e
  409351:	mov    bh,BYTE PTR [ebx+0x159579f]
  409357:	sbb    al,0xe1
  409359:	dec    esp
  40935a:	xchg   esp,eax
  40935b:	hlt    
  40935c:	scas   eax,DWORD PTR es:[edi]
  40935d:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40935f:	pusha  
  409360:	sbb    cl,BYTE PTR [ebp+0x1c]
  409363:	push   ss
  409364:	mov    ecx,0x349df315
  409369:	mov    bh,0x55
  40936b:	lahf   
  40936c:	jo     0x40938f
  40936e:	(bad)  
  40936f:	in     al,dx
  409370:	jecxz  0x4093bd
  409372:	arpl   WORD PTR [edi],si
  409374:	enter  0xbfe4,0x21
  409378:	int3   
  409379:	shl    BYTE PTR [esi+0x1d],1
  40937c:	xchg   edi,eax
  40937d:	xlat   BYTE PTR ds:[ebx]
  40937e:	mov    bl,0x18
  409380:	dec    ebx
  409381:	cmc    
  409382:	das    
  409383:	loopne 0x409376
  409385:	shl    esp,cl
  409387:	xchg   ebx,eax
  409388:	mov    cl,0x9a
  40938a:	(bad)  
  40938c:	adc    ecx,DWORD PTR [edx+esi*4+0x203eec89]
  409393:	jmp    0xb36587d9
  409398:	fucomi st,st(5)
  40939a:	in     al,dx
  40939b:	add    BYTE PTR [ecx+0x40],0x7c
  40939f:	lock clc 
  4093a1:	mov    dh,0xd
  4093a3:	fstp   st(7)
  4093a5:	xchg   edx,eax
  4093a6:	push   ebx
  4093a7:	jo     0x4093f7
  4093a9:	mov    ds:0xb5e8df0f,eax
  4093ae:	sub    ebx,DWORD PTR [edx-0x55b6cd9e]
  4093b4:	daa    
  4093b5:	push   es
  4093b6:	mov    cl,0x3c
  4093b8:	popa   
  4093b9:	mov    edx,0xacd80852
  4093be:	and    eax,0xa9a95f26
  4093c3:	dec    esi
  4093c4:	jp     0x4093f4
  4093c6:	shl    BYTE PTR [edi],1
  4093c8:	cli    
  4093c9:	add    ch,BYTE PTR [edx+0x9]
  4093cc:	dec    eax
  4093cd:	(bad)  
  4093ce:	push   edi
  4093cf:	shl    BYTE PTR [edi-0x33],0x7b
  4093d3:	lea    edi,[esi]
  4093d5:	test   DWORD PTR [ecx],0x21237f58
  4093db:	mov    ebp,0xbf5d6356
  4093e0:	mov    ds:0xfc73d499,al
  4093e5:	fist   DWORD PTR [eax+0x14bae356]
  4093eb:	add    edx,DWORD PTR [edx]
  4093ed:	adc    esi,ebx
  4093ef:	outs   dx,BYTE PTR ss:[esi]
  4093f1:	test   DWORD PTR [ecx+0x14174e28],ebx
  4093f7:	xchg   BYTE PTR [edx],ch
  4093f9:	push   eax
  4093fa:	cs pcmpgtb mm0,mm6
  4093fe:	gs jae 0x4093ea
  409401:	(bad)  
  409402:	mov    ch,0x17
  409404:	rol    DWORD PTR [ebx],0xc6
  409407:	push   ebp
  409408:	outs   dx,BYTE PTR ds:[esi]
  409409:	xor    esi,DWORD PTR [esi-0x5a]
  40940c:	adc    al,0x95
  40940e:	pop    ds
  40940f:	sti    
  409410:	test   eax,0xde96f33b
  409415:	mov    edx,0xa47ce323
  40941a:	jb     0x40941c
  40941c:	stos   DWORD PTR es:[edi],eax
  40941d:	mov    ebx,0x9f88869
  409422:	jecxz  0x40947f
  409424:	iret   
  409425:	mov    ds:0xa6c2807b,eax
  40942a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40942b:	mov    es,edx
  40942d:	ss retf 0x2f24
  409431:	dec    ebp
  409432:	mov    ebx,esi
  409434:	mov    eax,ds:0x3c6e1abe
  409439:	lahf   
  40943a:	pop    es
  40943b:	sub    BYTE PTR [ecx],dh
  40943d:	ficomp DWORD PTR [ecx+eiz*2+0x2bf1ab2a]
  409444:	iret   
  409445:	retf   
  409446:	div    DWORD PTR [edi+0x4c5e42a5]
  40944c:	or     eax,0x7bcdba09
  409451:	jmp    0xee0d:0x8f6fd1be
  409458:	add    dh,BYTE PTR [ebx+0x2fb32eb3]
  40945e:	int3   
  40945f:	xchg   BYTE PTR [eax-0x34e0ee3a],al
  409465:	pop    esi
  409466:	mov    edi,0x1ae72cda
  40946b:	(bad)  
  40946c:	fst    QWORD PTR [esi]
  40946e:	les    eax,FWORD PTR [edx]
  409470:	retf   0xa4c4
  409473:	adc    eax,DWORD PTR [ebx+0x74886110]
  409479:	inc    ebx
  40947a:	aad    0xcc
  40947c:	xchg   DWORD PTR [esi],esp
  40947e:	mov    edi,DWORD PTR [edx]
  409480:	inc    edx
  409481:	sti    
  409482:	push   edi
  409483:	jb     0x409412
  409485:	dec    edx
  409486:	xchg   BYTE PTR ds:0x7bb21156,bh
  40948c:	test   DWORD PTR [eax+0x3b],esp
  40948f:	neg    BYTE PTR [ebx+0x3fa11c19]
  409495:	(bad)  
  409496:	aam    0xa3
  409498:	(bad)  
  409499:	mov    bh,dh
  40949b:	add    ebp,DWORD PTR [ecx]
  40949d:	js     0x4094d2
  40949f:	pop    ss
  4094a0:	mov    ebx,0x727f5ce8
  4094a5:	cmp    BYTE PTR [ebx+0x2b],cl
  4094a8:	xchg   ebx,eax
  4094a9:	sbb    edi,DWORD PTR [edi]
  4094ab:	div    DWORD PTR [ebx-0x3e9f2cd5]
  4094b1:	cwde   
  4094b2:	ins    DWORD PTR es:[edi],dx
  4094b3:	fimul  DWORD PTR [edi+0x534e0a0d]
  4094b9:	push   esp
  4094ba:	mov    bh,0xb8
  4094bc:	pop    eax
  4094bd:	call   FWORD PTR [eax-0x67]
  4094c0:	jo     0x409446
  4094c2:	jmp    0x5ff9575a
  4094c7:	cs in  eax,dx
  4094c9:	ds jle 0x4094d2
  4094cc:	mov    esi,0xd804b5c4
  4094d1:	xchg   esp,eax
  4094d2:	stos   DWORD PTR es:[edi],eax
  4094d3:	in     al,dx
  4094d4:	lock jecxz 0x409528
  4094d7:	jb     0x409532
  4094d9:	imul   DWORD PTR [edi]
  4094db:	ror    DWORD PTR [edx-0x9],cl
  4094de:	jg     0x409535
  4094e0:	and    eax,0xcacd7987
  4094e5:	adc    DWORD PTR [ebx+0x5f],ecx
  4094e8:	lahf   
  4094e9:	test   al,0x37
  4094eb:	xchg   ebp,eax
  4094ec:	addr16 sbb al,0x75
  4094ef:	out    dx,al
  4094f0:	popf   
  4094f1:	mov    eax,0xed221747
  4094f6:	test   al,0xd6
  4094f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094f9:	fidivr WORD PTR [ebp-0x7f]
  4094fc:	sar    DWORD PTR [ebx],1
  4094fe:	pop    ss
  4094ff:	jno    0x4094af
  409501:	cwde   
  409502:	push   ss
  409503:	sub    BYTE PTR [ebp+0x2d164d83],cl
  409509:	ja     0x40953e
  40950b:	jmp    0x4094ea
  40950d:	adc    ecx,DWORD PTR [ecx+ecx*8]
  409510:	xcrypt-cbc (bad)
  409511:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409512:	push   edx
  409513:	mov    ecx,DWORD PTR [ebx+0x1581dc75]
  409519:	jge    0x40949e
  40951b:	inc    edx
  40951c:	add    bl,cl
  40951e:	popa   
  40951f:	add    BYTE PTR [eax],al
  409521:	push   esi
  409522:	dec    DWORD PTR ds:0x428371
  409528:	push   ecx
  409529:	not    DWORD PTR ds:0x428581
  40952f:	push   edx
  409530:	adc    DWORD PTR ds:0x428481,0x42849d
  40953a:	push   eax
  40953b:	sbb    DWORD PTR ds:0x428375,0x42837d
  409545:	call   0x4222ab
  40954a:	mov    DWORD PTR [ebp-0x30],eax
  40954d:	cmp    DWORD PTR ds:0x428469,0x0
  409554:	mov    ecx,0x19e0
  409559:	mov    DWORD PTR ds:0x428579,0x71a7
  409563:	mov    ecx,0x1714
  409568:	jmp    0x4095c4
  40956d:	movzx  eax,BYTE PTR ds:0x428465
  409574:	mov    eax,0x70fc
  409579:	cmp    DWORD PTR ds:0x428469,0x0
  409580:	jb     0x4095ac
  409586:	push   0x428481
  40958b:	push   0x428323
  409590:	call   DWORD PTR ds:0x42e24c
  409596:	and    DWORD PTR ds:0x42858d,0x600c
  4095a0:	add    ecx,DWORD PTR ds:0x42847d
  4095a6:	or     ecx,DWORD PTR ds:0x428495
  4095ac:	adc    ecx,esi
  4095ae:	sbb    DWORD PTR ds:0x42851d,edx
  4095b4:	sbb    DWORD PTR ds:0x428471,0x1a7e
  4095be:	add    esi,0x6267
  4095c4:	mov    DWORD PTR [ebp-0x2c],edx
  4095c7:	mov    DWORD PTR [ebp-0x10],0x5fa8
  4095ce:	mov    DWORD PTR [ebp-0xc],0x1751
  4095d5:	or     DWORD PTR ds:0x428495,0x4285b1
  4095df:	mov    DWORD PTR [ebp-0x20],0x5e90
  4095e6:	sub    DWORD PTR ds:0x428445,ecx
  4095ec:	mov    DWORD PTR [ebp-0x1c],0xfc1
  4095f3:	mov    edx,DWORD PTR ds:0x428419
  4095f9:	mov    edx,DWORD PTR [edx]
  4095fb:	adc    DWORD PTR ds:0x42838d,edx
  409601:	mov    DWORD PTR [ebp-0x28],0x7044
  409608:	or     DWORD PTR ds:0x42845d,0x3ffc
  409612:	mov    DWORD PTR [ebp-0x24],0x7bf
  409619:	mov    eax,DWORD PTR [ebp-0x28]
  40961c:	adc    ecx,0x6b26
  409622:	mov    ecx,DWORD PTR [ebp-0x24]
  409625:	add    DWORD PTR ds:0x4285a1,edi
  40962b:	mov    edx,DWORD PTR [ebp-0x20]
  40962e:	cmp    DWORD PTR ds:0x428465,0x0
  409635:	mov    DWORD PTR ds:0x42846d,edi
  40963b:	mov    DWORD PTR ds:0x428435,ecx
  409641:	mov    DWORD PTR ds:0x428475,0x2db2
  40964b:	jmp    0x409715
  409650:	mov    esi,DWORD PTR ds:0x428471
  409656:	mov    DWORD PTR ds:0x428509,ebx
  40965c:	cmp    DWORD PTR ds:0x428465,0x0
  409663:	jg     0x409686
  409669:	push   0x3d0d
  40966e:	call   DWORD PTR ds:0x42e000
  409674:	xor    DWORD PTR ds:0x428469,ecx
  40967a:	sbb    DWORD PTR ds:0x428465,edi
  409680:	dec    DWORD PTR ds:0x428379
  409686:	mov    esi,DWORD PTR ds:0x428365
  40968c:	xor    DWORD PTR ds:0x42850d,esi
  409692:	and    DWORD PTR ds:0x428515,ecx
  409698:	dec    esi
  409699:	cmp    DWORD PTR ds:0x428519,0x0
  4096a0:	mov    DWORD PTR ds:0x428521,0x1a91
  4096aa:	movzx  esi,BYTE PTR ds:0x428371
  4096b1:	mov    esi,0x63fe
  4096b6:	jmp    0x409715
  4096bb:	mov    DWORD PTR ds:0x42845d,0x20e7
  4096c5:	cmp    DWORD PTR ds:0x428519,0x0
  4096cc:	jae    0x4096f5
  4096d2:	push   DWORD PTR [ebp-0x20]
  4096d5:	push   0x278f
  4096da:	push   DWORD PTR [ebp-0x1c]
  4096dd:	call   DWORD PTR ds:0x42e004
  4096e3:	or     esi,DWORD PTR ds:0x428501
  4096e9:	sbb    esi,DWORD PTR ds:0x4284f5
  4096ef:	and    DWORD PTR ds:0x42835d,edx
  4096f5:	dec    DWORD PTR ds:0x428599
  4096fb:	or     esi,0x67c0
  409701:	add    DWORD PTR ds:0x428445,0x146d
  40970b:	sbb    DWORD PTR ds:0x428595,0xdcf
  409715:	mov    esi,DWORD PTR [ebp-0x1c]
  409718:	add    eax,0x355c
  40971d:	mov    DWORD PTR ds:0x42839d,0x28d
  409727:	adc    ecx,0x819
  40972d:	xor    DWORD PTR ds:0x428361,0x49ee
  409737:	or     eax,edx
  409739:	mov    DWORD PTR ds:0x428395,0x383a
  409743:	mov    edx,DWORD PTR [ebp-0x10]
  409746:	or     ecx,esi
  409748:	sub    DWORD PTR ds:0x428389,0x6778
  409752:	mov    esi,DWORD PTR [ebp-0xc]
  409755:	or     eax,edx
  409757:	movzx  edx,BYTE PTR ds:0x42857d
  40975e:	xor    edx,DWORD PTR ds:0x428495
  409764:	mov    DWORD PTR ds:0x42857d,edx
  40976a:	mov    edx,DWORD PTR [ebp-0x30]
  40976d:	or     ecx,esi
  40976f:	mov    esi,DWORD PTR [ebp-0x2c]
  409772:	or     eax,0xf34
  409777:	neg    DWORD PTR ds:0x428499
  40977d:	or     ecx,0x6c90
  409783:	mov    DWORD PTR ds:0x42848d,0x7584
  40978d:	cmp    edx,eax
  40978f:	mov    DWORD PTR ds:0x428471,0x7ecb
  409799:	jne    0x4097bb
  40979f:	mov    DWORD PTR ds:0x42843d,0x4655
  4097a9:	cmp    esi,ecx
  4097ab:	mov    DWORD PTR ds:0x42843d,0x7ff3
  4097b5:	je     0x40a10f
  4097bb:	xor    esi,esi
  4097bd:	or     esi,DWORD PTR ds:0x42858d
  4097c3:	adc    DWORD PTR ds:0x428515,esi
  4097c9:	mov    DWORD PTR [ebp-0x30],0x5ddc
  4097d0:	mov    DWORD PTR [ebp-0x2c],0x7433
  4097d7:	mov    eax,DWORD PTR [ebp-0x30]
  4097da:	mov    ecx,DWORD PTR [ebp-0x2c]
  4097dd:	xor    ecx,0xfffffd1f
  4097e3:	xor    eax,0xffff9fff
  4097e8:	and    ecx,0x6e0
  4097ee:	and    eax,0x6244
  4097f3:	mov    DWORD PTR [ebp-0x10],eax
  4097f6:	mov    DWORD PTR [ebp-0xc],ecx
  4097f9:	mov    DWORD PTR [ebp-0x20],0x4a50
  409800:	mov    DWORD PTR [ebp-0x1c],0x2079
  409807:	mov    DWORD PTR [ebp-0x28],0x792e
  40980e:	mov    DWORD PTR [ebp-0x24],0x10e8
  409815:	mov    DWORD PTR [ebp-0x30],0x22b3
  40981c:	mov    DWORD PTR [ebp-0x2c],0x2293
  409823:	mov    eax,DWORD PTR [ebp-0x30]
  409826:	mov    ecx,DWORD PTR [ebp-0x2c]
  409829:	mov    edx,DWORD PTR [ebp-0x28]
  40982c:	mov    esi,DWORD PTR [ebp-0x24]
  40982f:	add    eax,edx
  409831:	mov    edx,DWORD PTR [ebp-0x20]
  409834:	adc    ecx,esi
  409836:	mov    esi,DWORD PTR [ebp-0x1c]
  409839:	add    eax,0x3e60
  40983e:	adc    ecx,0xd49e
  409844:	xor    eax,0x14ce
  409849:	xor    ecx,0x354f
  40984f:	add    eax,edx
  409851:	mov    edx,DWORD PTR [ebp-0x10]
  409854:	adc    ecx,esi
  409856:	mov    esi,DWORD PTR [ebp-0xc]
  409859:	cmp    edx,eax
  40985b:	jne    0x409869
  409861:	cmp    esi,ecx
  409863:	je     0x40a10f
  409869:	mov    DWORD PTR [ebp-0x28],0x4db
  409870:	mov    DWORD PTR [ebp-0x24],0x233b
  409877:	mov    DWORD PTR [ebp-0x30],0x2c94
  40987e:	push   0x6b33
  409883:	mov    DWORD PTR [ebp-0x2c],0x647f
  40988a:	jmp    0x409b09
  40988f:	and    BYTE PTR [ebx-0x53bd1443],ah
  409895:	sub    al,0xab
  409897:	dec    edi
  409898:	test   al,0xc
  40989a:	xchg   edx,eax
  40989b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40989c:	jmp    0x88333d5d
  4098a1:	mov    esi,0xbec279be
  4098a6:	mov    esi,0x91ae4aaf
  4098ab:	inc    edi
  4098ac:	sti    
  4098ad:	sbb    al,0x66
  4098af:	xlat   BYTE PTR ds:[ebx]
  4098b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4098b1:	sub    eax,0x17a274ca
  4098b7:	pushf  
  4098b8:	std    
  4098b9:	(bad)  
  4098bc:	jns    0x4098e0
  4098be:	push   esi
  4098bf:	cmp    DWORD PTR [ecx+ebx*4-0x39],0x21
  4098c4:	push   ebx
  4098c5:	jp     0x40990d
  4098c7:	imul   edx,edx,0xffffff93
  4098ca:	(bad)  
  4098cb:	loop   0x4098fe
  4098cd:	fidivr DWORD PTR [edi+edx*2-0x73]
  4098d1:	fwait
  4098d2:	fs pop ebx
  4098d4:	and    BYTE PTR [ebx-0x60],0xed
  4098d8:	dec    esi
  4098d9:	xor    DWORD PTR [ebx],ecx
  4098db:	sub    ch,al
  4098dd:	sti    
  4098de:	sub    ebx,DWORD PTR [ebx+0x7fb5a027]
  4098e4:	(bad)  
  4098e5:	and    bh,dl
  4098e7:	std    
  4098e8:	push   0x22941124
  4098ed:	push   0x1b
  4098ef:	stc    
  4098f0:	jle    0x409951
  4098f2:	jno    0x4098af
  4098f4:	dec    esi
  4098f5:	sbb    al,0xb4
  4098f7:	xor    dl,BYTE PTR [eax]
  4098f9:	push   ecx
  4098fa:	sub    BYTE PTR [eax],al
  4098fc:	and    esi,ecx
  4098fe:	jmp    0x4098e7
  409900:	push   ebx
  409901:	and    ecx,edx
  409903:	jecxz  0x409962
  409905:	cmp    esp,DWORD PTR [edi]
  409907:	jbe    0x409911
  409909:	fstp   DWORD PTR [edx]
  40990b:	adc    DWORD PTR [ecx-0x46],0x5ba9ca09
  409912:	and    bh,bl
  409914:	fwait
  409915:	das    
  409916:	xor    dh,al
  409918:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409919:	neg    edi
  40991b:	arpl   WORD PTR [ecx-0x4a6febc2],di
  409921:	shl    DWORD PTR [esi],cl
  409923:	smsw   WORD PTR [edi+0x6f]
  409927:	fwait
  409928:	push   ds
  409929:	mov    WORD PTR [ebp-0x353d5875],ss
  40992f:	fs ja  0x409961
  409932:	lods   al,BYTE PTR ds:[esi]
  409933:	imul   edx
  409935:	mov    DWORD PTR [ebp-0x7adf6e83],esi
  40993b:	sub    eax,0x699d5581
  409940:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409941:	out    0xc3,al
  409943:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409944:	mov    edx,0xfd904d98
  409949:	fwait
  40994a:	pop    esi
  40994b:	mov    BYTE PTR [ebp+0x8],ah
  40994e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40994f:	pop    ecx
  409950:	cmp    DWORD PTR [edx+0x6a],eax
  409953:	cmp    BYTE PTR [edx+0x500a1b1],0xa8
  40995a:	pop    ebp
  40995b:	mov    edi,0xb0232352
  409960:	sbb    eax,0x22023189
  409965:	push   esi
  409966:	mov    ebp,0xe2255777
  40996b:	adc    eax,0x698a6d31
  409970:	cmc    
  409971:	dec    ebx
  409972:	xchg   ebx,eax
  409973:	(bad)  
  409975:	jbe    0x4099f6
  409977:	jmp    0x409914
  409979:	jmp    0x4099ce
  40997b:	sub    BYTE PTR [ebx],dh
  40997d:	cmp    eax,0xc5f1c0e4
  409982:	and    eax,0x58d17f34
  409987:	push   cs
  409988:	ins    BYTE PTR es:[edi],dx
  409989:	jp     0x409a05
  40998b:	and    BYTE PTR [esi],dh
  40998d:	stos   DWORD PTR es:[edi],eax
  40998e:	jmp    0x409911
  409990:	mov    eax,ds:0x9312f88
  409995:	and    eax,0xc967cd7
  40999a:	pop    ebp
  40999b:	jmp    0x64b2:0x715125e1
  4099a2:	mov    al,ds:0x7e48ebf6
  4099a7:	cmp    bl,BYTE PTR [edi]
  4099a9:	xor    DWORD PTR [edx+esi*4-0x383652a0],ecx
  4099b0:	jo     0x409963
  4099b2:	push   ebx
  4099b3:	std    
  4099b4:	xchg   BYTE PTR [ecx],bh
  4099b6:	pop    eax
  4099b7:	mov    bh,al
  4099b9:	scas   eax,DWORD PTR es:[edi]
  4099ba:	add    eax,0x760cc48d
  4099bf:	pop    esi
  4099c0:	push   ecx
  4099c1:	call   0x4d62838f
  4099c6:	cmp    eax,0x9bb1cd37
  4099cb:	sbb    BYTE PTR [edx-0x63],al
  4099ce:	je     0x409a3d
  4099d0:	or     eax,0x4eae4391
  4099d5:	cmc    
  4099d6:	lea    esp,[eax]
  4099d8:	mov    BYTE PTR [ecx-0x68],ah
  4099db:	mov    esp,0x73fa27af
  4099e0:	adc    dh,BYTE PTR [eax-0x58]
  4099e3:	stos   DWORD PTR es:[edi],eax
  4099e4:	cmp    edx,DWORD PTR [edx-0x25]
  4099e7:	dec    ebp
  4099e8:	dec    eax
  4099e9:	pop    DWORD PTR [edx-0x2cb9f878]
  4099ef:	ins    DWORD PTR es:[edi],dx
  4099f0:	inc    eax
  4099f1:	or     eax,0xcb41381d
  4099f6:	les    edi,FWORD PTR [edi]
  4099f8:	in     eax,dx
  4099f9:	scas   al,BYTE PTR es:[edi]
  4099fa:	fsub   DWORD PTR [edx+0x6fc4e470]
  409a00:	and    DWORD PTR [edi-0x75],edx
  409a03:	sbb    eax,0x8e9de5d4
  409a08:	(bad)  
  409a09:	icebp  
  409a0a:	ror    BYTE PTR [esi+esi*8+0x15],1
  409a0e:	pusha  
  409a0f:	jp     0x4099b4
  409a11:	shl    BYTE PTR [esi+0x7fa03337],cl
  409a17:	hlt    
  409a18:	ret    0x3501
  409a1b:	stos   DWORD PTR es:[edi],eax
  409a1c:	add    cl,bl
  409a1e:	mov    eax,ds:0x91a89d01
  409a23:	push   cs
  409a24:	jbe    0x4099f4
  409a26:	dec    eax
  409a27:	into   
  409a28:	mov    bh,0x27
  409a2a:	mov    edi,0x12dc72e8
  409a2f:	imul   ecx,DWORD PTR ds:0xbdc31bc4,0xb37a4a0c
  409a39:	mov    al,0x43
  409a3b:	ins    BYTE PTR es:[edi],dx
  409a3c:	aam    0xa3
  409a3e:	dec    ebp
  409a3f:	sub    bh,BYTE PTR [edi]
  409a41:	(bad)  
  409a42:	je     0x409a22
  409a44:	jbe    0x409a88
  409a46:	sbb    BYTE PTR [esi],0xb3
  409a49:	dec    ecx
  409a4a:	push   0x5
  409a4c:	xchg   BYTE PTR [ebx],cl
  409a4e:	and    al,0x62
  409a50:	lahf   
  409a51:	sbb    DWORD PTR ds:0x4aed9e88,0xffffffa5
  409a58:	dec    edx
  409a59:	cmp    BYTE PTR [edi-0x76],bl
  409a5c:	jle    0x409a19
  409a5e:	je     0x409a39
  409a60:	inc    esp
  409a61:	icebp  
  409a62:	outs   dx,BYTE PTR cs:[esi]
  409a64:	dec    edx
  409a65:	lock imul eax,DWORD PTR [edi],0x33
  409a69:	push   0xefd13e53
  409a6e:	push   edx
  409a6f:	mov    al,0x8e
  409a71:	jno    0x409aa8
  409a73:	or     dh,BYTE PTR [ebx+0x6af6212a]
  409a79:	inc    edi
  409a7a:	dec    esp
  409a7b:	stos   BYTE PTR es:[edi],al
  409a7c:	adc    DWORD PTR [edi-0x49],esp
  409a7f:	xchg   esi,eax
  409a80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a81:	adc    ah,cl
  409a83:	int    0xdd
  409a85:	jecxz  0x409a61
  409a87:	jmp    FWORD PTR ds:[ebp-0x56]
  409a8b:	stos   BYTE PTR es:[edi],al
  409a8c:	enter  0x7b77,0x80
  409a90:	daa    
  409a91:	or     BYTE PTR [ebx-0x6],ah
  409a94:	out    0x7,eax
  409a96:	cdq    
  409a97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a98:	fidivr WORD PTR [ebx+ecx*2-0x2df7950]
  409a9f:	xchg   edi,eax
  409aa0:	aam    0xe0
  409aa2:	ficomp DWORD PTR [edi+0x4d9f4d75]
  409aa8:	cli    
  409aa9:	test   BYTE PTR [esp+eiz*2],bh
  409aac:	inc    ebx
  409aad:	ins    DWORD PTR es:[edi],dx
  409aae:	in     al,dx
  409aaf:	daa    
  409ab0:	jb     0x409ad2
  409ab2:	call   0x324f0f5f
  409ab7:	jbe    0x409a43
  409ab9:	mov    bh,0x34
  409abb:	adc    al,0xb9
  409abd:	pop    eax
  409abe:	pop    edi
  409abf:	mov    edi,0x1067572b
  409ac4:	mov    ecx,DWORD PTR [ecx]
  409ac6:	popa   
  409ac7:	aas    
  409ac8:	leave  
  409ac9:	push   eax
  409aca:	mov    ah,bl
  409acc:	mov    dl,0xd0
  409ace:	dec    esi
  409acf:	out    dx,al
  409ad0:	cmp    edi,DWORD PTR [edx]
  409ad2:	fadd   DWORD PTR [edx-0x3964132e]
  409ad8:	mov    WORD PTR [ecx],?
  409ada:	jg     0x409a94
  409adc:	jle    0x409aa7
  409ade:	addr16 jnp 0x409ac4
  409ae1:	xlat   BYTE PTR ds:[ebx]
  409ae2:	gs cli 
  409ae4:	dec    ebp
  409ae5:	imul   eax,edi,0x6d9c12b9
  409aeb:	fidivr WORD PTR [ebx-0x65]
  409aee:	dec    ebp
  409aef:	fdivr  DWORD PTR [edi-0xb]
  409af2:	sub    ebp,DWORD PTR [ebp+edi*8-0x42c1f9d5]
  409af9:	bound  ebp,QWORD PTR [ebx+ebx*2+0x297c4d65]
  409b00:	test   DWORD PTR [ebp+0xd112fc7],eax
  409b06:	add    BYTE PTR ds:0xd0458b63,0x8b
  409b0d:	dec    ebp
  409b0e:	aam    0x68
  409b10:	(bad)  
  409b11:	jl     0x409b13
  409b13:	add    BYTE PTR [ecx+0x50],dl
  409b16:	call   0x41594e
  409b1b:	mov    ecx,DWORD PTR [ebp-0x28]
  409b1e:	mov    esi,DWORD PTR [ebp-0x24]
  409b21:	push   0x4e1a18a
  409b26:	push   0x283cdcc
  409b2b:	and    edx,esi
  409b2d:	and    eax,ecx
  409b2f:	push   edx
  409b30:	push   eax
  409b31:	call   0x41594e
  409b36:	xor    eax,0x687b
  409b3b:	xor    edx,0x18d4
  409b41:	mov    DWORD PTR [ebp-0x30],eax
  409b44:	mov    DWORD PTR [ebp-0x2c],edx
  409b47:	mov    eax,ds:0x42294c
  409b4c:	cmp    eax,0x7cd80819
  409b51:	jne    0x40a10f
  409b57:	mov    eax,DWORD PTR [ebp-0x18]
  409b5a:	mov    ecx,DWORD PTR [ebp-0x14]
  409b5d:	mov    edx,DWORD PTR [ebp-0x18]
  409b60:	mov    esi,DWORD PTR [ebp-0x14]
  409b63:	shrd   eax,ecx,0x2
  409b67:	shl    edx,0x1e
  409b6a:	mov    edx,DWORD PTR ds:0x422738
  409b70:	mov    edx,DWORD PTR [edx+0x1a8]
  409b76:	shr    ecx,0x2
  409b79:	xor    esi,esi
  409b7b:	mov    ecx,0x32de6d5d
  409b80:	xor    eax,ecx
  409b82:	or     eax,esi
  409b84:	mov    DWORD PTR [edx],eax
  409b86:	mov    eax,DWORD PTR [ebp-0x18]
  409b89:	mov    edx,DWORD PTR [ebp-0x14]
  409b8c:	shrd   eax,edx,0x2
  409b90:	shr    edx,0x2
  409b93:	mov    edx,DWORD PTR [ebp-0x18]
  409b96:	mov    esi,DWORD PTR [ebp-0x14]
  409b99:	xor    eax,ecx
  409b9b:	xor    esi,esi
  409b9d:	or     eax,esi
  409b9f:	mov    ds:0x42294c,eax
  409ba4:	mov    BYTE PTR [ebp-0x2],0x4f
  409ba8:	mov    BYTE PTR [ebp-0x1],0xf9
  409bac:	movzx  eax,BYTE PTR [ebp-0x1]
  409bb0:	shl    edx,0x1e
  409bb3:	mov    dl,BYTE PTR [ebp-0x2]
  409bb6:	xor    al,0x42
  409bb8:	add    al,dl
  409bba:	jmp    0x409e39
  409bbf:	mov    ah,0x7e
  409bc1:	mov    ch,0xd4
  409bc3:	mov    ebx,0x3e9ebcfc
  409bc8:	mov    cl,0x9a
  409bca:	jecxz  0x409bfe
  409bcc:	mov    cl,0x12
  409bce:	sahf   
  409bcf:	scas   al,BYTE PTR es:[edi]
  409bd0:	mov    edi,DWORD PTR [esi-0x413d8642]
  409bd6:	mov    esi,0x8b1ca747
  409bdb:	aad    0x28
  409bdd:	push   eax
  409bde:	out    dx,al
  409bdf:	in     eax,dx
  409be0:	adc    al,0x13
  409be2:	adc    al,0xdb
  409be4:	inc    edx
  409be5:	inc    ebp
  409be6:	in     eax,dx
  409be7:	data16 sbb ah,BYTE PTR [ebx]
  409bea:	push   edi
  409beb:	jo     0x409c29
  409bed:	push   cs
  409bee:	sub    DWORD PTR [eax+0x5e],ecx
  409bf1:	cli    
  409bf2:	fiadd  WORD PTR [edx-0x57]
  409bf5:	mov    ah,BYTE PTR [ebx]
  409bf7:	mov    bh,0x18
  409bf9:	sbb    DWORD PTR [edi-0x1382c530],0xffffff88
  409c00:	or     BYTE PTR [ecx-0x2a],dh
  409c03:	mov    edi,0xec602a79
  409c08:	iret   
  409c09:	lahf   
  409c0a:	(bad)  
  409c0c:	and    DWORD PTR [edx+0x1d],eax
  409c0f:	mov    bh,0x26
  409c11:	jp     0x409bf3
  409c13:	pop    es
  409c14:	es fdiv st(7),st
  409c17:	pop    ecx
  409c18:	push   es
  409c19:	or     al,0xb0
  409c1b:	sub    esi,DWORD PTR [ecx+esi*4+0x7a]
  409c1f:	xchg   ecx,eax
  409c20:	arpl   ax,di
  409c22:	mov    edi,gs
  409c24:	xor    al,BYTE PTR [edi]
  409c26:	sbb    ecx,eax
  409c28:	cmp    BYTE PTR [esi+edi*1+0x3b],dh
  409c2c:	sub    ebx,DWORD PTR [ecx+ebp*8-0x1e]
  409c30:	cmp    ebx,DWORD PTR [edx]
  409c32:	mov    cl,0x8f
  409c34:	call   DWORD PTR [ebx+ebp*4]
  409c37:	retf   
  409c38:	fdiv   st(3),st
  409c3a:	std    
  409c3b:	aad    0x6e
  409c3d:	cs cld 
  409c3f:	jo     0x409c9d
  409c41:	sub    eax,esp
  409c43:	or     BYTE PTR [edx-0x2635203d],bl
  409c49:	pushf  
  409c4a:	cmc    
  409c4b:	push   esi
  409c4c:	mov    dl,0xdc
  409c4e:	dec    esi
  409c4f:	call   0x84e6654
  409c54:	nop
  409c55:	(bad)  
  409c56:	cmp    al,0x50
  409c58:	mov    ?,WORD PTR [edi+0x43]
  409c5b:	jle    0x409c69
  409c5d:	scas   eax,DWORD PTR es:[edi]
  409c5e:	sbb    bh,BYTE PTR [eax]
  409c60:	add    DWORD PTR [ebx+esi*8-0x6cabf1d0],0x4e8499bf
  409c6b:	nop
  409c6c:	js     0x409c37
  409c6e:	mov    dh,0x73
  409c70:	or     DWORD PTR [ecx-0x78503e6e],eax
  409c76:	fs or  al,0x90
  409c79:	in     al,dx
  409c7a:	pcmpeqd mm7,mm1
  409c7d:	daa    
  409c7e:	or     eax,0xbf580611
  409c83:	mov    cl,0xe8
  409c85:	sbb    eax,0x8bdf673
  409c8a:	test   al,0x26
  409c8c:	test   DWORD PTR [ebx+0x4],edx
  409c8f:	mov    edi,0x3824a8f4
  409c94:	shl    BYTE PTR [eax+0x29],0xfb
  409c98:	jne    0x409ce9
  409c9a:	clc    
  409c9b:	push   ebx
  409c9c:	pop    ebx
  409c9d:	xor    BYTE PTR [edi],dh
  409c9f:	cmp    al,0x48
  409ca1:	inc    edi
  409ca2:	xchg   ecx,eax
  409ca3:	pushf  
  409ca4:	popf   
  409ca5:	rcr    edi,1
  409ca7:	and    DWORD PTR [ecx-0x73326a64],ecx
  409cad:	cmp    ah,BYTE PTR [edx+0x6b24a9c0]
  409cb3:	setae  dh
  409cb6:	xlat   BYTE PTR ds:[ebx]
  409cb7:	ds arpl sp,sp
  409cba:	fimul  DWORD PTR [edx]
  409cbc:	gs ins DWORD PTR es:[edi],dx
  409cbe:	adc    ecx,esp
  409cc0:	stos   BYTE PTR es:[edi],al
  409cc1:	mov    al,0x1
  409cc3:	mul    DWORD PTR [ecx+0x2f952050]
  409cc9:	xor    eax,0xd09174b5
  409cce:	xchg   esi,eax
  409ccf:	test   eax,0xd6e94943
  409cd4:	add    BYTE PTR [ebx+esi*2+0x55],cl
  409cd8:	les    edi,FWORD PTR es:[esi+0x39]
  409cdc:	adc    BYTE PTR [edi+0x3b],bh
  409cdf:	dec    ecx
  409ce0:	ror    dl,1
  409ce2:	dec    ecx
  409ce3:	add    BYTE PTR [ebp+0x3f8f95b2],al
  409ce9:	cwde   
  409cea:	push   ebx
  409ceb:	xchg   ecx,eax
  409cec:	jae    0x409cb3
  409cee:	jns    0x409d1d
  409cf0:	(bad)  
  409cf2:	scas   al,BYTE PTR es:[edi]
  409cf3:	jbe    0x409d6d
  409cf5:	sub    DWORD PTR [edi+0x629884f8],0xc73e653f
  409cff:	and    eax,0x9bd12e0b
  409d04:	adc    edx,ebp
  409d06:	jge    0x409d25
  409d08:	jmp    DWORD PTR [esi+0x4f]
  409d0b:	hlt    
  409d0c:	das    
  409d0d:	pop    edi
  409d0e:	in     eax,0x59
  409d10:	push   ds
  409d11:	xchg   esp,eax
  409d12:	iret   
  409d13:	sbb    ch,BYTE PTR [ebx]
  409d15:	jns    0x409d07
  409d17:	jno    0x409d24
  409d19:	inc    edi
  409d1a:	repnz out 0x1b,eax
  409d1d:	and    edi,DWORD PTR [edx+eax*1]
  409d20:	ds dec esi
  409d22:	rol    DWORD PTR [esi+eiz*1+0x20],0x40
  409d27:	iret   
  409d28:	arpl   cx,di
  409d2a:	and    eax,0x3d3cca0d
  409d2f:	loope  0x409cb2
  409d31:	adc    eax,0xe892ec12
  409d36:	mov    al,0xb0
  409d38:	jb     0x409da1
  409d3a:	div    DWORD PTR [edi]
  409d3c:	xor    eax,0x3eca36e
  409d41:	dec    esp
  409d42:	fld    TBYTE PTR [edx-0x784ee5bf]
  409d48:	mov    cl,0x2d
  409d4a:	jmp    0x409d52
  409d4c:	cmp    eax,0xd5e2b8d8
  409d51:	cmp    BYTE PTR es:[esi],0xa9
  409d55:	push   eax
  409d56:	sti    
  409d57:	dec    dl
  409d59:	int3   
  409d5a:	aaa    
  409d5b:	or     eax,0xe66d8b68
  409d60:	leave  
  409d61:	fcomp  DWORD PTR [ecx+0x4c]
  409d64:	xor    al,0x62
  409d66:	inc    esp
  409d67:	test   BYTE PTR [edx+0x1d11f935],0x3d
  409d6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d6f:	and    BYTE PTR [ecx],cl
  409d71:	jg     0x409d34
  409d73:	mov    bh,BYTE PTR [edx]
  409d75:	xor    eax,0xc1961f9e
  409d7a:	adc    eax,0x38342c57
  409d7f:	mov    WORD PTR [edi-0x5a],ss
  409d82:	cmp    BYTE PTR ss:[esi+esi*2-0x2a78e6ab],dh
  409d8a:	in     al,0xaf
  409d8c:	and    BYTE PTR [edi+0x158c61a8],ah
  409d92:	xchg   BYTE PTR [esi],ch
  409d94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d95:	inc    ebx
  409d96:	push   ebp
  409d97:	mov    DWORD PTR [ecx+0x627875a3],esi
  409d9d:	addr16 pushf 
  409d9f:	test   al,0xb9
  409da1:	and    eax,DWORD PTR [ecx+0xc4f6313]
  409da7:	out    0x92,al
  409da9:	clc    
  409daa:	jl     0x409d67
  409dac:	cmp    dh,al
  409dae:	outs   dx,DWORD PTR ds:[esi]
  409daf:	lea    ebx,[edi+eax*4-0x1073209]
  409db6:	arpl   WORD PTR gs:[edi+esi*1-0x5f],bp
  409dbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409dbc:	sti    
  409dbd:	in     al,0x3
  409dbf:	adc    ebx,DWORD PTR [edx+0x2c]
  409dc2:	dec    edx
  409dc3:	(bad)  
  409dc5:	loopne 0x409e17
  409dc7:	data16 data16 and ah,BYTE PTR [edi-0x79d60908]
  409dcf:	push   ebx
  409dd0:	fwait
  409dd1:	mov    BYTE PTR [ebx+eax*8],0x8a
  409dd5:	and    al,0xa
  409dd7:	push   edx
  409dd8:	or     eax,0xbd2c6f5c
  409ddd:	ins    BYTE PTR es:[edi],dx
  409dde:	arpl   WORD PTR [ebp+0x1ade210b],cx
  409de4:	mov    al,0xb4
  409de6:	xor    bh,al
  409de8:	test   edi,0x307a2217
  409dee:	pop    ebp
  409def:	pop    edx
  409df0:	in     eax,0x0
  409df2:	or     DWORD PTR [esi],0x24e9e0df
  409df8:	or     BYTE PTR [ebx+edx*1+0xf0fb3cd],bh
  409dff:	out    dx,al
  409e00:	sar    BYTE PTR [esp+esi*2+0x67],1
  409e04:	xor    BYTE PTR [edx-0x21],ah
  409e07:	pushf  
  409e08:	(bad)  
  409e0a:	xchg   ebx,eax
  409e0b:	sub    DWORD PTR [edx-0x7cc344d0],esp
  409e11:	or     edi,DWORD PTR [edx]
  409e13:	ins    BYTE PTR es:[edi],dx
  409e14:	or     al,0xaf
  409e16:	or     ecx,DWORD PTR [ecx+0x7a]
  409e19:	mov    eax,edx
  409e1b:	in     eax,dx
  409e1c:	jge    0x409e71
  409e1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e1f:	ret    
  409e20:	dec    eax
  409e21:	scas   al,BYTE PTR es:[edi]
  409e22:	xchg   esp,eax
  409e23:	adc    BYTE PTR [edx-0xe],dh
  409e26:	pop    esp
  409e27:	xor    DWORD PTR [edi],esi
  409e29:	mov    ds:0x6d35457d,eax
  409e2e:	xor    edx,DWORD PTR [edi*2-0x1aadb8a7]
  409e35:	and    esi,DWORD PTR [ecx+0x30]
  409e38:	adc    al,0x6a
  409e3a:	push   es
  409e3b:	add    eax,0xfa
  409e40:	mov    BYTE PTR [ebp-0x4],al
  409e43:	mov    BYTE PTR [ebp-0x3],0x67
  409e47:	pop    eax
  409e48:	mov    BYTE PTR [ebp-0x1],al
  409e4b:	mov    BYTE PTR [ebp-0x2],0x3
  409e4f:	mov    dl,BYTE PTR [ebp-0x2]
  409e52:	movzx  esi,dl
  409e55:	cdq    
  409e56:	idiv   esi
  409e58:	mov    dl,BYTE PTR [ebp-0x1]
  409e5b:	add    al,dl
  409e5d:	mov    dl,BYTE PTR [ebp-0x3]
  409e60:	or     al,dl
  409e62:	mov    dl,BYTE PTR [ebp-0x4]
  409e65:	add    al,0x3a
  409e67:	cmp    dl,al
  409e69:	jae    0x40a10f
  409e6f:	mov    eax,DWORD PTR [ebp-0x18]
  409e72:	jmp    0x40a0f1
  409e77:	popa   
  409e78:	nop
  409e79:	popf   
  409e7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e7b:	mov    ah,0xb8
  409e7d:	imul   ebx,DWORD PTR [eax+edi*1+0x3ba4862c],0x1a
  409e85:	jo     0x409e64
  409e87:	imul   edx,DWORD PTR [ecx-0x3d864142],0xb5dbebe
  409e91:	jge    0x409e1d
  409e93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e94:	mov    eax,es
  409e96:	rcl    DWORD PTR [eax-0x6f],0x2d
  409e9a:	and    ah,dl
  409e9c:	lea    eax,[edx-0x7]
  409e9f:	or     ah,bl
  409ea1:	in     al,dx
  409ea2:	mov    esi,DWORD PTR [ecx-0x3c28ecfe]
  409ea8:	pop    ebx
  409ea9:	sbb    al,bl
  409eab:	lock xchg ecx,eax
  409ead:	or     ebp,DWORD PTR [ebx-0x5f]
  409eb0:	push   es
  409eb1:	jmp    0x52c9:0x949fecb
  409eb8:	dec    esi
  409eb9:	add    BYTE PTR [ebx+0x7f],dl
  409ebc:	fstp   TBYTE PTR [eax-0x20756c35]
  409ec2:	hlt    
  409ec3:	inc    ebp
  409ec4:	sub    ch,dh
  409ec6:	dec    eax
  409ec7:	jle    0x409ec3
  409ec9:	pop    ss
  409eca:	and    al,0xd0
  409ecc:	into   
  409ecd:	lods   eax,DWORD PTR ds:[esi]
  409ece:	mov    esi,0xd83fcfc9
  409ed3:	outs   dx,DWORD PTR ds:[esi]
  409ed4:	shr    BYTE PTR [edi+0x27],0x8c
  409ed8:	mov    dh,0x4f
  409eda:	cmp    al,0xaa
  409edc:	or     al,0xc3
  409ede:	cmp    DWORD PTR [esi+0x24],esp
  409ee1:	push   0xffffff88
  409ee3:	push   ds
  409ee4:	stos   DWORD PTR es:[edi],eax
  409ee5:	js     0x409eeb
  409ee7:	icebp  
  409ee8:	in     al,0xff
  409eea:	cli    
  409eeb:	inc    esi
  409eec:	or     eax,0x15c05109
  409ef1:	(bad)  
  409ef2:	pop    esi
  409ef3:	inc    ecx
  409ef4:	dec    edi
  409ef5:	xchg   DWORD PTR [eax],eax
  409ef7:	int3   
  409ef8:	in     al,0x6
  409efa:	or     BYTE PTR [ebx-0x26],dh
  409efd:	fidivr WORD PTR [ebp+ecx*1-0x1a]
  409f01:	xlat   BYTE PTR ds:[ebx]
  409f02:	sar    ch,cl
  409f04:	adc    al,0xa1
  409f06:	sar    DWORD PTR [edi-0x1e],1
  409f09:	push   ds
  409f0a:	xlat   BYTE PTR ds:[ebx]
  409f0b:	mov    ebx,0x71d97020
  409f10:	mov    eax,ds:0xc24a328
  409f15:	adc    bl,dl
  409f17:	sahf   
  409f18:	fdivr  QWORD PTR ds:0xd08aa827
  409f1e:	xchg   ebx,eax
  409f1f:	ret    0x9b2f
  409f22:	and    DWORD PTR [esi-0x1d],0x2a
  409f26:	inc    edx
  409f27:	inc    edx
  409f28:	mov    bh,0x32
  409f2a:	adc    eax,ebp
  409f2c:	aam    0xba
  409f2e:	sbb    ecx,DWORD PTR [edi-0x7d]
  409f31:	dec    ebp
  409f32:	lahf   
  409f33:	sbb    eax,0xa64ff4e2
  409f38:	jp     0x409f2c
  409f3a:	xchg   esp,eax
  409f3b:	ds push ss
  409f3d:	sahf   
  409f3e:	lock inc ecx
  409f40:	mov    al,ds:0x57facd8f
  409f45:	test   eax,0x49861a19
  409f4a:	cmp    dl,bh
  409f4c:	arpl   WORD PTR [esp+ecx*1],dx
  409f4f:	fdivr  DWORD PTR [eax+0x64bc98f5]
  409f55:	les    ebp,FWORD PTR [ebx]
  409f57:	les    esp,FWORD PTR [eax+ebp*8]
  409f5a:	jle    0x409f10
  409f5c:	test   eax,0x280c320b
  409f61:	cmp    BYTE PTR ds:0xd853c573,al
  409f67:	test   DWORD PTR [ebx+eax*4-0x30],ebp
  409f6b:	es pop edx
  409f6d:	push   cs
  409f6e:	ja     0x409ef4
  409f70:	or     DWORD PTR [eax+esi*8+0xe],edi
  409f74:	cli    
  409f75:	jb     0x409f3c
  409f77:	mov    ds:0xc14ffe5a,eax
  409f7c:	xchg   DWORD PTR [edi-0x76c51b8a],ebp
  409f82:	icebp  
  409f83:	adc    DWORD PTR [edi+0x3f],0x11
  409f87:	mov    edi,0x962e3e55
  409f8c:	mov    ds:0x83218eae,eax
  409f91:	dec    ebx
  409f92:	fmul   QWORD PTR [eax+0x21]
  409f95:	in     eax,0xa3
  409f97:	sub    ebx,DWORD PTR [edx]
  409f99:	es scas al,BYTE PTR es:[edi]
  409f9b:	outs   dx,BYTE PTR ds:[esi]
  409f9c:	mov    esp,0xc9acdf25
  409fa1:	imul   DWORD PTR [edx+0x5a3d8a59]
  409fa7:	leave  
  409fa8:	and    DWORD PTR [ebx-0x3],0xdcb61325
  409faf:	rol    ah,0xe2
  409fb2:	fisub  DWORD PTR [eax]
  409fb4:	in     ax,0x63
  409fb7:	dec    ebp
  409fb8:	xor    DWORD PTR [edx],esp
  409fba:	aas    
  409fbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fbc:	mov    BYTE PTR [eax+0x7034688b],0x53
  409fc3:	sbb    al,0x8a
  409fc5:	and    al,0x8d
  409fc7:	in     eax,0x76
  409fc9:	gs nop
  409fcb:	cmc    
  409fcc:	cmp    DWORD PTR [ebx-0x2f92cec0],esi
  409fd2:	ds push es
  409fd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409fd5:	push   es
  409fd6:	or     BYTE PTR ds:[edi],bh
  409fd9:	add    ebp,edx
  409fdb:	adc    edi,DWORD PTR [edi+0x3b]
  409fde:	pop    edi
  409fdf:	mov    ds:0xcc4aea73,al
  409fe4:	or     BYTE PTR [edx],bh
  409fe6:	ds sub eax,0x1045a966
  409fec:	add    al,0xa9
  409fee:	retf   0xbef
  409ff1:	xor    ecx,edi
  409ff3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ff4:	neg    edx
  409ff6:	ror    DWORD PTR [edi+0x31],cl
  409ff9:	jnp    0x40a069
  409ffb:	loope  0x40a055
  409ffd:	mov    WORD PTR ds:0x54c742d7,ds
  40a003:	and    bl,cl
  40a005:	sbb    ecx,DWORD PTR [eax]
  40a007:	cmp    eax,0xb2208821
  40a00c:	inc    edx
  40a00d:	out    dx,eax
  40a00e:	pop    esi
  40a00f:	cli    
  40a010:	pop    es
  40a011:	dec    ecx
  40a012:	mov    edx,0xf365bc09
  40a017:	sbb    eax,0x49594e07
  40a01c:	push   esp
  40a01d:	or     esi,DWORD PTR [ebx-0x2f]
  40a020:	sahf   
  40a021:	jp     0x40a099
  40a023:	sub    eax,0xe5270d70
  40a028:	sbb    al,0x1b
  40a02a:	or     ch,ah
  40a02c:	fldenv [eax+0x63]
  40a02f:	mov    cl,0xc
  40a031:	into   
  40a032:	xor    eax,0x2ab503fc
  40a037:	pushw  cs
  40a039:	cmc    
  40a03a:	shl    eax,0xa4
  40a03d:	adc    BYTE PTR [ebp-0x6c],ah
  40a040:	push   ss
  40a041:	cmp    eax,0x20baa8bb
  40a046:	outs   dx,BYTE PTR ds:[esi]
  40a047:	aam    0xaa
  40a049:	jg     0x40a077
  40a04b:	mov    bl,0x4f
  40a04d:	push   ecx
  40a04e:	jle    0x40a03a
  40a050:	out    0x54,eax
  40a052:	and    DWORD PTR [edi-0x2],0x5c9c07d6
  40a059:	ds jg  0x409fe2
  40a05c:	pop    edi
  40a05d:	dec    edx
  40a05e:	sbb    DWORD PTR [eax-0x62c53d5f],edx
  40a064:	(bad)  
  40a065:	fs ins DWORD PTR es:[edi],dx
  40a067:	cwde   
  40a068:	ret    0x1b2
  40a06b:	pop    ecx
  40a06c:	push   ds
  40a06d:	inc    esp
  40a06e:	cmp    al,0x71
  40a070:	mov    WORD PTR [ebp+0x5c],es
  40a073:	pop    ecx
  40a074:	xchg   ebp,eax
  40a075:	call   0x56095d24
  40a07a:	mov    esp,0xc62ee511
  40a07f:	push   cs
  40a080:	sbb    esp,edi
  40a082:	push   ds
  40a083:	inc    edi
  40a084:	cmp    edi,DWORD PTR [ebp-0x5d]
  40a087:	pop    ss
  40a088:	adc    al,BYTE PTR [esi]
  40a08a:	dec    ebx
  40a08b:	mov    ebp,eax
  40a08d:	test   al,0x97
  40a08f:	cmp    DWORD PTR [ebp+eiz*4-0x7a],eax
  40a093:	mov    bl,0x6e
  40a095:	sbb    eax,0xc137ec4c
  40a09a:	xchg   DWORD PTR [ebx-0x2281893f],esp
  40a0a0:	xchg   ebx,eax
  40a0a1:	lods   eax,DWORD PTR ds:[esi]
  40a0a2:	int3   
  40a0a3:	sbb    DWORD PTR [edx],esp
  40a0a5:	call   0xff6a:0x3e445010
  40a0ac:	setge  al
  40a0af:	hlt    
  40a0b0:	inc    esp
  40a0b1:	fdiv   st(3),st
  40a0b3:	sahf   
  40a0b4:	adc    edi,DWORD PTR [esi+0x3c]
  40a0b7:	(bad)  
  40a0b8:	repnz mov dh,0x8
  40a0bb:	(bad)  
  40a0bc:	cmp    al,0x6d
  40a0be:	mov    bl,0xa1
  40a0c0:	popf   
  40a0c1:	repz ss jp 0x40a07c
  40a0c5:	iret   
  40a0c6:	push   edi
  40a0c7:	mov    ch,0x38
  40a0c9:	cmp    al,0xa
  40a0cb:	fiadd  WORD PTR [edx]
  40a0cd:	sbb    bh,BYTE PTR [eax]
  40a0cf:	jb     0x40a10c
  40a0d1:	mov    ds:0xfc34b877,eax
  40a0d6:	xor    al,0x86
  40a0d8:	inc    ecx
  40a0d9:	cmp    eax,0x46726b76
  40a0de:	mov    esp,DWORD PTR [ebx+0x45fbb536]
  40a0e4:	xor    bh,BYTE PTR [edx+0x4d]
  40a0e7:	mov    edx,DWORD PTR [ecx]
  40a0e9:	retf   
  40a0ea:	mov    bh,0x46
  40a0ec:	push   ebp
  40a0ed:	mov    edi,0x8b4d82a5
  40a0f2:	push   ebp
  40a0f3:	in     al,dx
  40a0f4:	shrd   eax,edx,0x2
  40a0f8:	xor    eax,ecx
  40a0fa:	mov    ecx,DWORD PTR [ebp-0x18]
  40a0fd:	shr    edx,0x2
  40a100:	mov    edx,DWORD PTR [ebp-0x14]
  40a103:	xor    edx,edx
  40a105:	shl    ecx,0x1e
  40a108:	or     eax,edx
  40a10a:	mov    ds:0x422840,eax
  40a10f:	pop    esi
  40a110:	leave  
  40a111:	ret    
  40a112:	push   ebp
  40a113:	mov    ebp,esp
  40a115:	sub    esp,0x28
  40a118:	push   ebx
  40a119:	push   esi
  40a11a:	push   edi
  40a11b:	mov    DWORD PTR [ebp-0x10],0x67e2
  40a122:	jmp    0x40a3b9
  40a127:	mov    al,ds:0xfc9cf9a5
  40a12c:	pushf  
  40a12d:	mov    al,ds:0xd54f94b9
  40a132:	jecxz  0x40a1a3
  40a134:	fwait
  40a135:	sbb    dl,cl
  40a137:	es xchg ebp,eax
  40a139:	mov    esi,0xbec2a9be
  40a13e:	mov    esi,0xdb3c014e
  40a143:	repnz das 
  40a145:	int    0x53
  40a147:	adc    eax,0x487bbc4f
  40a14c:	ficom  DWORD PTR [eax+0x39]
  40a14f:	and    DWORD PTR [ecx],esi
  40a151:	dec    ebp
  40a152:	or     ah,BYTE PTR [edx]
  40a154:	nop
  40a155:	mov    ebx,0x8c852131
  40a15a:	cmp    esp,DWORD PTR [ecx]
  40a15c:	scas   al,BYTE PTR es:[edi]
  40a15d:	sub    eax,0xfaa45d65
  40a162:	push   0xfceeef58
  40a167:	mov    ds:0x6df9d104,eax
  40a16c:	or     cl,BYTE PTR [ebx]
  40a16e:	fwait
  40a16f:	addr16 inc edx
  40a171:	pop    ss
  40a172:	pop    esp
  40a173:	lds    ebx,FWORD PTR ds:0x84d0c35b
  40a179:	push   eax
  40a17a:	rol    BYTE PTR [ecx+0x3631a352],0x3e
  40a181:	xor    cl,dh
  40a183:	retf   0x384b
  40a186:	cli    
  40a187:	jne    0x40a1fd
  40a189:	shl    DWORD PTR [edi-0x3d4e8447],0x8e
  40a190:	les    edx,FWORD PTR [edx-0x37]
  40a193:	int    0x97
  40a195:	sub    al,0x55
  40a197:	dec    ebp
  40a198:	in     al,0xf5
  40a19a:	xor    eax,0xa16c882e
  40a19f:	mov    al,ds:0x9868940e
  40a1a4:	aam    0xb0
  40a1a6:	xor    eax,DWORD PTR [esi+0x17]
  40a1a9:	sar    DWORD PTR [bp+0x4f],1
  40a1ad:	xor    DWORD PTR [edi],edi
  40a1af:	icebp  
  40a1b0:	cmp    BYTE PTR [edx+0x2d],0x61
  40a1b4:	sti    
  40a1b5:	add    ch,0x8c
  40a1b8:	xchg   BYTE PTR [ebx-0x13709dad],dh
  40a1be:	xor    BYTE PTR [edx+esi*4],0x1
  40a1c2:	inc    edx
  40a1c3:	pushf  
  40a1c4:	lods   eax,DWORD PTR ds:[esi]
  40a1c5:	jne    0x40a171
  40a1c7:	dec    ebp
  40a1c8:	sahf   
  40a1c9:	ss loope 0x40a1d2
  40a1cc:	shr    DWORD PTR [eax],0x2e
  40a1cf:	icebp  
  40a1d0:	iret   
  40a1d1:	into   
  40a1d2:	test   eax,0x8309b208
  40a1d7:	ror    DWORD PTR fs:[eax-0x2d],0xdf
  40a1dc:	les    sp,DWORD PTR [ebp+0x5dddb2c]
  40a1e3:	imul   esp,esi,0xffffff86
  40a1e6:	mov    ah,0x77
  40a1e8:	and    dl,dl
  40a1ea:	cmp    cl,al
  40a1ec:	dec    ebx
  40a1ed:	in     al,0x99
  40a1ef:	fcmovnu st,st(0)
  40a1f1:	jg     0x40a1f5
  40a1f3:	(bad)  
  40a1f4:	pop    esi
  40a1f5:	loope  0x40a276
  40a1f7:	mov    dl,0xf4
  40a1f9:	pop    ds
  40a1fa:	stos   BYTE PTR es:[edi],al
  40a1fb:	inc    ecx
  40a1fc:	jg     0x40a186
  40a1fe:	and    eax,0x26b9d64d
  40a203:	pushw  es
  40a205:	leave  
  40a206:	jb     0x40a1e7
  40a208:	pop    edx
  40a209:	(bad)  
  40a20a:	scas   eax,DWORD PTR es:[edi]
  40a20b:	sub    BYTE PTR [edx+0x73cc9a19],ch
  40a211:	push   ecx
  40a212:	(bad)  
  40a213:	outs   dx,DWORD PTR ds:[esi]
  40a214:	call   0xf386:0x494ece3
  40a21b:	and    edi,esp
  40a21d:	jmp    0x40a1f3
  40a21f:	mov    dl,0x8e
  40a221:	pop    edi
  40a222:	xor    al,0x9d
  40a224:	xchg   ebx,eax
  40a225:	fstp   TBYTE PTR [ebp-0x780e4ba8]
  40a22b:	sub    BYTE PTR [edi-0x29],al
  40a22e:	clc    
  40a22f:	test   eax,0x8a88642f
  40a234:	fisub  WORD PTR [esi+0x13]
  40a237:	test   eax,0xaddda210
  40a23c:	xor    BYTE PTR [edx],0x1a
  40a23f:	pop    edx
  40a240:	add    ecx,DWORD PTR [ebx]
  40a242:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a243:	inc    edx
  40a244:	mov    ecx,0x30d72aef
  40a249:	lods   al,BYTE PTR ds:[esi]
  40a24a:	mov    ch,0x87
  40a24c:	fistp  QWORD PTR [eax+eax*2]
  40a24f:	push   ds
  40a250:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a251:	pop    edx
  40a252:	(bad)  
  40a253:	push   0xfffffffb
  40a255:	pop    ds
  40a256:	fucomp st(6)
  40a259:	inc    eax
  40a25a:	or     DWORD PTR [ecx],edi
  40a25c:	(bad)  
  40a25d:	add    BYTE PTR [eax+0x15],dl
  40a260:	jmp    0x40a292
  40a262:	shl    BYTE PTR [ebx],0x13
  40a265:	dec    esi
  40a266:	mov    eax,ds:0xbde07a36
  40a26b:	(bad)  
  40a26c:	mov    bl,0x8a
  40a26e:	mov    ah,0x3f
  40a270:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a271:	mov    dl,0x7a
  40a273:	clc    
  40a274:	pop    ebp
  40a275:	cwde   
  40a276:	jb     0x40a2f0
  40a278:	fld    QWORD PTR [ebx]
  40a27a:	pop    ebp
  40a27b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a27c:	or     al,0x54
  40a27e:	pop    es
  40a27f:	sub    BYTE PTR [ecx+0x714ad49],bh
  40a285:	mov    ecx,0xdc3d529
  40a28a:	aam    0x32
  40a28c:	fimul  DWORD PTR [ebp+0x30]
  40a28f:	out    0xa8,al
  40a291:	mov    gs,eax
  40a293:	cmc    
  40a294:	pushf  
  40a295:	jg     0x40a269
  40a297:	jl     0x40a2e1
  40a299:	sub    eax,0x91676307
  40a29e:	lods   al,BYTE PTR ds:[esi]
  40a29f:	sahf   
  40a2a0:	mov    ebp,eax
  40a2a2:	outs   dx,DWORD PTR ds:[esi]
  40a2a3:	lods   eax,DWORD PTR ds:[esi]
  40a2a4:	inc    edx
  40a2a5:	dec    esp
  40a2a6:	gs pop edi
  40a2a8:	and    ecx,DWORD PTR ds:0x6806860b
  40a2ae:	ins    BYTE PTR es:[edi],dx
  40a2af:	add    ebp,DWORD PTR [ebp+0x359ae247]
  40a2b5:	xchg   edi,eax
  40a2b6:	fld    DWORD PTR es:[ecx+0x49aeea1b]
  40a2bd:	cs push ds
  40a2bf:	aam    0xd7
  40a2c1:	and    ch,bh
  40a2c3:	push   0xffffff90
  40a2c5:	jg     0x40a2d2
  40a2c7:	(bad)  
  40a2c8:	cmp    al,0xfd
  40a2ca:	lahf   
  40a2cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a2cc:	push   esp
  40a2cd:	lds    ecx,FWORD PTR [edx+esi*1+0x30193600]
  40a2d4:	xor    eax,0x9b06ed87
  40a2d9:	popf   
  40a2da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a2db:	repz cmc 
  40a2dd:	add    al,0x4e
  40a2df:	fmul   QWORD PTR [ebx+0x5]
  40a2e2:	jmp    0xa3626ad0
  40a2e7:	adc    DWORD PTR ds:[eax+ecx*1],esi
  40a2eb:	enter  0x96fd,0x5a
  40a2ef:	mov    ebp,0xac9b9c74
  40a2f4:	adc    eax,0x10c0de34
  40a2f9:	fimul  DWORD PTR [ebx+0x33a23c67]
  40a2ff:	sbb    eax,0x68786ec5
  40a304:	jne    0x40a336
  40a306:	mov    ds,esp
  40a308:	or     BYTE PTR [edi],bl
  40a30a:	pop    ds
  40a30b:	cmp    DWORD PTR [ebp-0x63f1ac59],esi
  40a311:	cmp    DWORD PTR [edx],0xc
  40a314:	xor    bh,BYTE PTR [ebp+0x20]
  40a317:	bound  edx,QWORD PTR [eax]
  40a319:	or     eax,0x66a30180
  40a31e:	push   es
  40a31f:	inc    esp
  40a320:	push   edx
  40a321:	inc    ebx
  40a322:	mov    ch,0x6f
  40a324:	retf   0xab3c
  40a327:	lods   eax,DWORD PTR ds:[esi]
  40a328:	out    dx,eax
  40a329:	push   edx
  40a32a:	cmp    ecx,DWORD PTR [ebp+0x3031ae43]
  40a330:	mov    ebp,0x5ff24815
  40a335:	inc    ecx
  40a336:	mov    edx,0xd393a8db
  40a33b:	in     al,0x47
  40a33d:	jb     0x40a38a
  40a33f:	jno    0x40a3b8
  40a341:	push   edi
  40a342:	test   DWORD PTR [eax-0x62],esi
  40a345:	push   edi
  40a346:	(bad)  
  40a347:	cmc    
  40a348:	arpl   si,cx
  40a34a:	mov    bh,0x14
  40a34c:	or     al,0x84
  40a34e:	and    al,0xfc
  40a350:	mov    ah,0xd4
  40a352:	shr    DWORD PTR [esi],1
  40a354:	cmp    eax,0x501080f7
  40a359:	xchg   esi,eax
  40a35a:	sub    bh,BYTE PTR [ecx+0x2a2ae946]
  40a360:	xor    ecx,eax
  40a362:	retf   0x74bf
  40a365:	cmp    al,0xd3
  40a367:	arpl   WORD PTR [ebx+0x27],si
  40a36a:	dec    edi
  40a36b:	xor    al,0x78
  40a36d:	jnp    0x40a3a9
  40a36f:	test   esi,0x41241006
  40a375:	mov    al,ds:0xdf6f6cdd
  40a37a:	mov    dl,bl
  40a37c:	in     al,dx
  40a37d:	test   BYTE PTR ds:0x452962b5,ch
  40a383:	stos   BYTE PTR es:[edi],al
  40a384:	or     DWORD PTR [esi+ebp*2],esi
  40a387:	lods   al,BYTE PTR ds:[esi]
  40a388:	pop    ebx
  40a389:	nop
  40a38a:	iret   
  40a38b:	or     al,0xd1
  40a38d:	xor    edi,ebx
  40a38f:	div    BYTE PTR [esi]
  40a391:	aam    0xd9
  40a393:	cs ret 
  40a395:	bound  eax,QWORD PTR [edi+0x43377a07]
  40a39b:	dec    edi
  40a39c:	inc    edx
  40a39d:	call   0x56846a3f
  40a3a2:	sub    DWORD PTR [eax-0x4464fba4],0x4e
  40a3a9:	std    
  40a3aa:	ret    0x7eb
  40a3ad:	xor    eax,0xabe1e784
  40a3b2:	jmp    0x6900f746
  40a3b7:	xchg   BYTE PTR [edi+eax*8+0x45],dl
  40a3bb:	cld    
  40a3bc:	es inc edi
  40a3be:	add    BYTE PTR [eax],al
  40a3c0:	mov    DWORD PTR [ebp-0x8],0x580
  40a3c7:	mov    DWORD PTR [ebp-0xc],0x5f3e
  40a3ce:	mov    DWORD PTR [ebp-0x28],0x3294
  40a3d5:	mov    DWORD PTR [ebp-0x24],0x643
  40a3dc:	mov    DWORD PTR [ebp-0x20],0x2545
  40a3e3:	mov    DWORD PTR [ebp-0x1c],0x43ab
  40a3ea:	xor    ebx,ebx
  40a3ec:	inc    ebx
  40a3ed:	jmp    0x40a684
  40a3f2:	ins    DWORD PTR es:[edi],dx
  40a3f3:	shr    ebx,0x9a
  40a3f6:	jl     0x40a3b4
  40a3f8:	scas   eax,DWORD PTR es:[edi]
  40a3f9:	sub    bl,BYTE PTR [ebx+ebp*1-0x7a]
  40a3fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3fe:	retf   
  40a3ff:	jbe    0x40a443
  40a401:	fst    QWORD PTR [ecx]
  40a403:	fwait
  40a404:	mov    esi,0xbec2a9be
  40a409:	mov    esi,0x8ad8981e
  40a40e:	mov    dl,0xd8
  40a410:	sbb    eax,0x9fce6503
  40a415:	dec    esp
  40a416:	xchg   edi,eax
  40a417:	iret   
  40a418:	out    0x74,al
  40a41a:	add    BYTE PTR [ebp-0x5b8c944d],bl
  40a420:	mov    esi,0xd53c89ed
  40a425:	xor    al,0x7e
  40a427:	sub    al,BYTE PTR ds:0x1718e8
  40a42d:	(bad)  
  40a42e:	call   0x96247f9f
  40a433:	dec    edi
  40a434:	in     eax,dx
  40a435:	jb     0x40a4ad
  40a437:	in     al,0x21
  40a439:	jae    0x40a4b7
  40a43b:	stos   BYTE PTR es:[edi],al
  40a43c:	cs add eax,0xe24efd95
  40a442:	out    0x5a,eax
  40a444:	add    ah,ah
  40a446:	and    ebx,edi
  40a448:	pop    eax
  40a449:	sbb    eax,0x887b0eda
  40a44e:	jle    0x40a436
  40a450:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a451:	into   
  40a452:	adc    esi,DWORD PTR [ebx-0x1ac2e360]
  40a458:	or     bh,BYTE PTR ds:0x97a7727c
  40a45e:	xchg   ebx,eax
  40a45f:	sbb    ebp,DWORD PTR [esi+0x5a]
  40a462:	mov    eax,0xda981ad
  40a467:	mov    ds:0x1a359762,eax
  40a46c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a46d:	dec    ebx
  40a46e:	clc    
  40a46f:	ja     0x40a3f6
  40a471:	gs (bad) 
  40a473:	out    0xf7,al
  40a475:	pop    edi
  40a476:	fcomp  QWORD PTR [esi-0x74c0bd80]
  40a47c:	(bad)  
  40a47d:	cmp    bh,bl
  40a47f:	out    0xb,al
  40a481:	sbb    bl,dh
  40a483:	mov    cl,0x26
  40a485:	push   eax
  40a486:	and    eax,0xa6275d99
  40a48b:	pop    ecx
  40a48c:	inc    ebp
  40a48d:	dec    ebx
  40a48e:	call   DWORD PTR [edi+0x13]
  40a491:	in     eax,0xf4
  40a493:	pusha  
  40a494:	mov    WORD PTR [ebx],?
  40a496:	test   eax,0xc674c90
  40a49b:	xchg   bl,cl
  40a49d:	and    al,0x6a
  40a49f:	add    ah,bl
  40a4a1:	dec    eax
  40a4a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a4a3:	inc    ebx
  40a4a4:	sbb    DWORD PTR [eax+0x41],ebp
  40a4a7:	mov    es,WORD PTR [eax]
  40a4a9:	mov    dh,0x6c
  40a4ab:	test   DWORD PTR [eax],eax
  40a4ad:	pop    edi
  40a4ae:	nop
  40a4af:	mov    esi,0xd35856bd
  40a4b4:	mov    cs,WORD PTR [eax-0x18]
  40a4b7:	sbb    al,0xac
  40a4b9:	(bad)  
  40a4ba:	imul   ebx,eax,0x72d840b1
  40a4c0:	cli    
  40a4c1:	out    0x61,eax
  40a4c3:	sar    DWORD PTR ds:0x3c4972ba,cl
  40a4c9:	data16 loope 0x40a496
  40a4cc:	into   
  40a4cd:	jmp    0x12e0:0xf3b51593
  40a4d4:	daa    
  40a4d5:	add    ch,BYTE PTR [eax+0x3e3748d0]
  40a4db:	sbb    al,0xed
  40a4dd:	pop    ebp
  40a4de:	loop   0x40a482
  40a4e0:	es popa 
  40a4e2:	adc    al,0x98
  40a4e4:	inc    esp
  40a4e5:	and    cl,BYTE PTR [ecx]
  40a4e7:	cmp    eax,0xd492186b
  40a4ec:	in     eax,dx
  40a4ed:	cmp    bh,BYTE PTR [edx+0x3beb77be]
  40a4f3:	mov    esp,0xe0ac4f9e
  40a4f8:	push   ds
  40a4f9:	pop    ss
  40a4fa:	push   ebx
  40a4fb:	shr    edi,0xbc
  40a4fe:	cmp    eax,0x22b347ba
  40a503:	shl    DWORD PTR [eax],0xda
  40a506:	es cld 
  40a508:	es pop ebx
  40a50a:	rcr    ch,1
  40a50c:	and    eax,DWORD PTR [edx-0x20774212]
  40a512:	fadd   DWORD PTR [edx+0x2d]
  40a515:	push   eax
  40a516:	fsub   DWORD PTR [ebx-0x568ad000]
  40a51c:	lods   eax,DWORD PTR ds:[esi]
  40a51d:	int3   
  40a51e:	xor    BYTE PTR [eax],dh
  40a520:	adc    BYTE PTR [eax+ebx*1-0x78dc63c9],cl
  40a527:	(bad)  
  40a528:	out    dx,eax
  40a529:	fmul   st,st(5)
  40a52b:	and    ebp,DWORD PTR [ebx-0x15]
  40a52e:	jmp    0x40a585
  40a530:	mov    ecx,0xf281f08d
  40a535:	mov    ds:0xbd0e8944,al
  40a53a:	sub    eax,0x3b89a7ea
  40a53f:	adc    al,0xac
  40a541:	aad    0x63
  40a543:	fsincos 
  40a545:	jg     0x40a4cf
  40a547:	stos   BYTE PTR es:[edi],al
  40a548:	lea    ecx,[esi-0x594f4304]
  40a54e:	call   0x55f5c828
  40a553:	in     al,dx
  40a554:	dec    ebx
  40a555:	ror    BYTE PTR [eax-0x3c],1
  40a558:	test   DWORD PTR [edx-0x3f],edx
  40a55b:	mov    ch,0x12
  40a55d:	add    DWORD PTR [eax],ebp
  40a55f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a560:	xor    DWORD PTR [esi-0x754bed29],ecx
  40a566:	jns    0x40a5e0
  40a568:	pop    ss
  40a569:	fsubr  QWORD PTR [esi+0x3113f918]
  40a56f:	call   0x276919e
  40a574:	push   edx
  40a575:	fst    QWORD PTR [esi-0x6b76e350]
  40a57b:	fs dec esi
  40a57d:	bound  ebp,QWORD PTR [esi-0x119ebd01]
  40a583:	aam    0xb0
  40a585:	in     al,0xe5
  40a587:	inc    BYTE PTR [eax-0x4d]
  40a58a:	fwait
  40a58b:	call   0xb546c57c
  40a590:	pop    esi
  40a591:	inc    eax
  40a592:	int3   
  40a593:	inc    edi
  40a594:	lea    ebx,[esi+0x3a]
  40a597:	rcl    DWORD PTR [esi-0x4b3f9fae],0xd7
  40a59e:	adc    dl,BYTE PTR [edx+0x68]
  40a5a1:	sub    eax,0x35096811
  40a5a6:	(bad)
  40a5a9:	jns    0x40a566
  40a5ab:	mov    esi,0x90aeba37
  40a5b0:	je     0x40a532
  40a5b2:	popf   
  40a5b3:	xchg   BYTE PTR [esi+0x2a],ch
  40a5b6:	ins    BYTE PTR es:[edi],dx
  40a5b7:	cdq    
  40a5b8:	fimul  WORD PTR ds:0xc22c8fe7
  40a5be:	push   ds
  40a5bf:	xchg   ecx,eax
  40a5c0:	sbb    BYTE PTR [ecx-0x722829fc],ch
  40a5c6:	or     cl,dh
  40a5c8:	xchg   ebx,eax
  40a5c9:	jle    0x40a5ed
  40a5cb:	mov    ebx,0x895d4b53
  40a5d0:	sbb    eax,0x2629c2c5
  40a5d5:	cmp    edx,ebp
  40a5d7:	mov    ah,0xd
  40a5d9:	mov    BYTE PTR [ebx],ah
  40a5db:	into   
  40a5dc:	test   ch,bl
  40a5de:	je     0x40a5b9
  40a5e0:	adc    DWORD PTR [esi+0x2acc545f],ebx
  40a5e6:	dec    ebx
  40a5e7:	pop    eax
  40a5e8:	cli    
  40a5e9:	imul   edx,DWORD PTR [eax-0x7495cd0f],0xabcf6924
  40a5f3:	or     eax,0x2d590d97
  40a5f8:	dec    edi
  40a5f9:	mov    ds:0xf6884742,al
  40a5fe:	mov    DWORD PTR [ebx-0x44],ebp
  40a601:	xchg   ecx,eax
  40a602:	push   0x6bb26cc2
  40a607:	fdiv   QWORD PTR [esp+esi*1-0x75]
  40a60b:	mov    al,ds:0xcdae5893
  40a610:	or     DWORD PTR [ebp+0xe523bc3],edx
  40a616:	jge    0x40a5a7
  40a618:	rcr    esp,1
  40a61a:	sbb    ebp,DWORD PTR [esp+esi*8-0x36881dc]
  40a621:	xor    al,0x32
  40a623:	scas   eax,DWORD PTR es:[edi]
  40a624:	inc    ebx
  40a625:	jae    0x40a667
  40a627:	jle    0x40a61b
  40a629:	cmp    edx,DWORD PTR [edi+0x18]
  40a62c:	mov    eax,ds:0x1ce16ac7
  40a631:	aas    
  40a632:	push   ebx
  40a633:	fild   WORD PTR [esi-0x5b]
  40a636:	jl     0x40a6a9
  40a638:	call   0xe399936e
  40a63d:	mov    eax,0x1c07f6f7
  40a642:	cwde   
  40a643:	xchg   esp,eax
  40a644:	js     0x40a6b7
  40a646:	push   ebx
  40a647:	jno    0x40a6a6
  40a649:	pop    edx
  40a64a:	or     BYTE PTR [edx-0x5d],bh
  40a64d:	xor    al,0xa9
  40a64f:	cmp    eax,edi
  40a651:	call   0x67c14bc9
  40a656:	adc    esp,DWORD PTR [esi-0x6272637a]
  40a65c:	call   0xe3fde19
  40a661:	xchg   ebx,eax
  40a662:	int3   
  40a663:	dec    edx
  40a664:	mov    DWORD PTR [ecx+0x4e7493],edi
  40a66a:	cmc    
  40a66b:	xor    al,0x43
  40a66d:	sub    eax,DWORD PTR cs:[edx-0x46]
  40a671:	dec    edi
  40a672:	push   ss
  40a673:	mov    BYTE PTR [edx+eiz*8-0x2a],dh
  40a677:	fidiv  WORD PTR [ecx+0x18]
  40a67a:	dec    ebx
  40a67b:	or     al,dh
  40a67d:	jmp    0x40a622
  40a67f:	(bad)  
  40a680:	mov    ds:0x89a72732,eax
  40a685:	pop    ebp
  40a686:	call   0xb22cec52
  40a68b:	jbe    0x40a68d
  40a68d:	add    BYTE PTR [ebx+0x458bf84d],cl
  40a693:	cld    
  40a694:	sub    ecx,eax
  40a696:	add    ecx,DWORD PTR [ebp-0xc]
  40a699:	add    ecx,DWORD PTR [ebp-0x10]
  40a69c:	imul   ecx,ecx,0x1f80
  40a6a2:	add    ecx,0x727e
  40a6a8:	xor    ecx,0x106c92f2
  40a6ae:	mov    DWORD PTR [ebp-0x8],0x113c
  40a6b5:	mov    DWORD PTR [ebp-0xc],0x3d61
  40a6bc:	mov    DWORD PTR [ebp-0x10],0x16e9
  40a6c3:	mov    DWORD PTR [ebp-0x4],0x21aa
  40a6ca:	mov    eax,DWORD PTR [ebp-0x10]
  40a6cd:	or     eax,0x3611
  40a6d2:	add    eax,DWORD PTR [ebp-0xc]
  40a6d5:	mov    edx,DWORD PTR [ebp-0x8]
  40a6d8:	and    eax,edx
  40a6da:	mov    edx,ecx
  40a6dc:	sub    edx,eax
  40a6de:	mov    eax,DWORD PTR [ebp-0x4]
  40a6e1:	mov    esi,DWORD PTR ds:0x422738
  40a6e7:	mov    esi,DWORD PTR [esi+0x1cc]
  40a6ed:	add    eax,0x6772
  40a6f2:	or     eax,0x1f24
  40a6f7:	sub    eax,0x7046
  40a6fc:	xor    eax,0x497a
  40a701:	sub    esi,eax
  40a703:	mov    eax,DWORD PTR [ebp+0x8]
  40a706:	mov    al,BYTE PTR [edx+eax*1-0x5774]
  40a70d:	mov    BYTE PTR [esi+ecx*1],al
  40a710:	mov    eax,DWORD PTR [ebp-0x14]
  40a713:	mov    esi,DWORD PTR [ebp-0x18]
  40a716:	and    eax,0x2389
  40a71b:	xor    eax,0x695
  40a720:	xor    edx,edx
  40a722:	div    esi
  40a724:	lea    ecx,[ecx+eax*1-0x2413]
  40a72b:	mov    eax,DWORD PTR [ebp-0x1c]
  40a72e:	add    eax,DWORD PTR [ebp-0x20]
  40a731:	mov    edx,DWORD PTR [ebp-0x24]
  40a734:	and    eax,edx
  40a736:	mov    edx,DWORD PTR [ebp-0x28]
  40a739:	imul   eax,edx
  40a73c:	mov    edx,0xd0c8f
  40a741:	sub    edx,eax
  40a743:	cmp    ecx,edx
  40a745:	jbe    0x40a6ae
  40a74b:	push   0x2
  40a74d:	pop    eax
  40a74e:	mov    DWORD PTR [ebp-0x1c],eax
  40a751:	mov    DWORD PTR [ebp-0x20],ebx
  40a754:	mov    DWORD PTR [ebp-0x24],0x5
  40a75b:	mov    DWORD PTR [ebp-0x28],0x6686
  40a762:	mov    DWORD PTR [ebp-0x8],0x7cf1
  40a769:	mov    DWORD PTR [ebp-0x4],eax
  40a76c:	mov    DWORD PTR [ebp+0x8],0x739a
  40a773:	mov    DWORD PTR [ebp-0xc],0xf3a
  40a77a:	xor    edx,edx
  40a77c:	mov    DWORD PTR [ebp-0x10],0x429
  40a783:	mov    eax,DWORD PTR [ebp-0x28]
  40a786:	mov    ecx,DWORD PTR [ebp-0x24]
  40a789:	sub    eax,0x175c
  40a78e:	div    ecx
  40a790:	mov    ecx,DWORD PTR [ebp-0x20]
  40a793:	xor    edx,edx
  40a795:	mov    edi,0x4db5
  40a79a:	div    ecx
  40a79c:	mov    ecx,DWORD PTR [ebp-0x1c]
  40a79f:	xor    edx,edx
  40a7a1:	div    ecx
  40a7a3:	xor    edx,edx
  40a7a5:	mov    ecx,eax
  40a7a7:	mov    eax,DWORD PTR [ebp+0x8]
  40a7aa:	imul   ecx,ecx,0x2e01
  40a7b0:	mov    esi,DWORD PTR [ebp-0x4]
  40a7b3:	add    eax,edi
  40a7b5:	div    esi
  40a7b7:	mov    edx,DWORD PTR [ebp-0x8]
  40a7ba:	mov    esi,0x940a7
  40a7bf:	sub    ecx,0x16bea86
  40a7c5:	jmp    0x40aa5c
  40a7ca:	lds    ecx,FWORD PTR [ebp+0x709870ff]
  40a7d0:	mov    dh,0xb7
  40a7d2:	and    dh,BYTE PTR [esi+ecx*1]
  40a7d5:	sahf   
  40a7d6:	xchg   esp,eax
  40a7d7:	fadd   st,st(5)
  40a7d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a7da:	(bad)  
  40a7db:	lahf   
  40a7dc:	mov    esi,0xbec2a9be
  40a7e1:	mov    esi,0x93ea0ec0
  40a7e6:	test   BYTE PTR [edi],ch
  40a7e8:	xchg   DWORD PTR ds:0x370a581b,edi
  40a7ee:	jle    0x40a804
  40a7f0:	cs jno 0x40a785
  40a7f3:	cmc    
  40a7f4:	out    0xb9,al
  40a7f6:	add    dl,BYTE PTR [eax]
  40a7f8:	fs dec ebp
  40a7fa:	jnp    0x40a82f
  40a7fc:	jmp    FWORD PTR [ebp+0x6f1679c4]
  40a802:	and    esp,esi
  40a804:	enter  0x6905,0xc2
  40a808:	in     al,0x8f
  40a80a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a80b:	arpl   WORD PTR [eax+0x2a756e9],bx
  40a811:	lods   al,BYTE PTR ds:[esi]
  40a812:	call   0xdd7f:0x4df3e0c0
  40a819:	jne    0x40a7f6
  40a81b:	retf   0x76ee
  40a81e:	sub    BYTE PTR [eax-0x4d],ah
  40a821:	arpl   WORD PTR [esi+0x62],ax
  40a824:	dec    edx
  40a825:	xor    al,BYTE PTR [ecx]
  40a827:	jp     0xe07da7a0
  40a82d:	stos   BYTE PTR es:[edi],al
  40a82e:	scas   al,BYTE PTR es:[edi]
  40a82f:	bound  esi,QWORD PTR [esi-0x75197804]
  40a835:	inc    ebp
  40a836:	dec    edi
  40a837:	cmp    esp,DWORD PTR [edi]
  40a839:	rcr    DWORD PTR [edx],cl
  40a83b:	sub    al,0x10
  40a83e:	aam    0x87
  40a840:	xchg   ebp,eax
  40a841:	(bad)  
  40a842:	int3   
  40a843:	pop    es
  40a844:	(bad)  
  40a845:	mov    al,0x50
  40a847:	xor    al,0xb
  40a849:	sub    BYTE PTR [ebx-0x3dc392ca],0x9d
  40a850:	push   eax
  40a851:	ror    BYTE PTR [edx+0x3beb8f23],cl
  40a857:	push   ebp
  40a858:	aad    0x67
  40a85a:	or     esi,DWORD PTR [ecx+0x17]
  40a85d:	mov    esi,DWORD PTR [bx+si]
  40a860:	cmp    bl,BYTE PTR ds:0xba43865
  40a866:	cmp    al,0xc2
  40a868:	outs   dx,BYTE PTR ds:[esi]
  40a86a:	addr16 out 0x17,eax
  40a86d:	stos   DWORD PTR es:[edi],eax
  40a86e:	fimul  WORD PTR [edx]
  40a870:	fcomip st,st(0)
  40a872:	js     0x40a85a
  40a874:	pop    edi
  40a875:	int3   
  40a876:	imul   ebx,DWORD PTR [edx+0x75],0x72040de2
  40a87d:	ret    0xd6a6
  40a880:	out    dx,eax
  40a881:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a882:	(bad)  
  40a883:	iret   
  40a884:	dec    edx
  40a885:	adc    DWORD PTR [esi+ecx*4],0x932678de
  40a88c:	inc    eax
  40a88d:	push   eax
  40a88e:	sbb    cl,BYTE PTR [eax-0x25546cb9]
  40a894:	xchg   DWORD PTR [ebp-0x42],ebx
  40a897:	shl    DWORD PTR [ecx-0x1b],0x78
  40a89b:	int    0x40
  40a89d:	call   0x483b:0x805e1a12
  40a8a4:	fild   QWORD PTR [edx-0x65]
  40a8a7:	(bad)  [ebx-0x226cf511]
  40a8ad:	xchg   edx,eax
  40a8ae:	jmp    FWORD PTR [edi]
  40a8b0:	sar    BYTE PTR [eax],0xe9
  40a8b3:	jle    0x40a8f3
  40a8b5:	pop    ss
  40a8b6:	sub    DWORD PTR [edi],0x231b45b0
  40a8bc:	jmp    0xda186e5f
  40a8c1:	mov    esi,0x2c582aa0
  40a8c6:	push   cs
  40a8c7:	jp     0x40a882
  40a8c9:	inc    eax
  40a8ca:	cld    
  40a8cb:	mov    ah,0xb
  40a8cd:	mov    esi,0x27246c8d
  40a8d2:	aam    0xbb
  40a8d4:	sub    DWORD PTR [eax-0x59e26a0e],ebp
  40a8da:	and    esp,DWORD PTR [esi]
  40a8dc:	and    al,0x6a
  40a8de:	mov    ebx,0xc220b525
  40a8e3:	shr    BYTE PTR [ecx+0xd],0x3
  40a8e7:	xchg   ecx,eax
  40a8e8:	daa    
  40a8e9:	inc    ecx
  40a8ea:	in     al,dx
  40a8eb:	pop    ecx
  40a8ec:	lds    ebp,FWORD PTR [edi+0x58b3fbc7]
  40a8f2:	xor    bl,ah
  40a8f4:	jo     0x40a93a
  40a8f6:	sbb    BYTE PTR [ebx-0x12],al
  40a8f9:	in     eax,dx
  40a8fa:	mov    cl,0xfc
  40a8fc:	sub    DWORD PTR [edi],0xf7c3c2f9
  40a902:	push   edi
  40a903:	xchg   DWORD PTR [ecx-0x73],ebp
  40a906:	mov    ds,WORD PTR [esi+0x182b9f38]
  40a90c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a90d:	dec    ecx
  40a90e:	jge    0x40a927
  40a910:	cwde   
  40a911:	jns    0x40a967
  40a913:	aas    
  40a914:	push   cs
  40a915:	iret   
  40a916:	pop    ebx
  40a917:	xlat   BYTE PTR ds:[ebx]
  40a918:	je     0x40a984
  40a91a:	or     BYTE PTR [esi],dh
  40a91c:	retf   0xa766
  40a91f:	jmp    0x701a68ad
  40a924:	test   DWORD PTR [ebx+edx*1+0x1eb73219],esi
  40a92b:	retf   
  40a92c:	scas   eax,DWORD PTR es:[edi]
  40a92d:	mov    esp,edi
  40a92f:	daa    
  40a930:	push   edi
  40a931:	or     BYTE PTR [esi+0x4c],bl
  40a934:	punpckldq mm2,DWORD PTR [edx]
  40a937:	fwait
  40a938:	stc    
  40a939:	(bad)  
  40a93a:	fst    DWORD PTR [esi]
  40a93c:	sbb    bl,ah
  40a93e:	or     edi,DWORD PTR [ebp-0x3d]
  40a941:	jmp    0x40a8d8
  40a943:	(bad)  
  40a945:	lea    ebx,[edi-0x3338f344]
  40a94b:	stos   BYTE PTR es:[edi],al
  40a94c:	mov    ds:0xeea829d4,al
  40a951:	xchg   DWORD PTR [edx-0x3ba6bca0],ecx
  40a957:	repz fcmovne st,st(1)
  40a95a:	mov    bh,0x90
  40a95c:	push   cs
  40a95d:	jmp    0x40a999
  40a95f:	dec    esi
  40a960:	stc    
  40a961:	mov    ecx,0x3c3557c8
  40a966:	sti    
  40a967:	fld    TBYTE PTR [eax]
  40a969:	scas   al,BYTE PTR es:[edi]
  40a96a:	into   
  40a96b:	or     al,0xd0
  40a96d:	pop    edx
  40a96e:	scas   al,BYTE PTR es:[edi]
  40a96f:	scas   al,BYTE PTR es:[edi]
  40a970:	inc    edi
  40a971:	jg     0x40a931
  40a973:	sub    ecx,DWORD PTR [eax-0x3140966e]
  40a979:	dec    edi
  40a97a:	call   0xe9d27f14
  40a97f:	lds    esi,FWORD PTR [ebp+0x7bed058e]
  40a985:	and    eax,0x61ce5a04
  40a98a:	add    ebx,DWORD PTR [esi-0x5d302195]
  40a990:	fst    DWORD PTR [eax-0x7f2dce86]
  40a996:	sti    
  40a997:	cld    
  40a998:	imul   ebx,DWORD PTR [esi-0x28499a5e],0x37e773a
  40a9a2:	retf   0x699d
  40a9a5:	je     0x40a9c8
  40a9a7:	mov    bh,0x3
  40a9a9:	popa   
  40a9aa:	sbb    al,0xec
  40a9ac:	mov    esi,0x853fa8a4
  40a9b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9b2:	and    BYTE PTR [ecx],0x23
  40a9b5:	addr16 sub al,0x86
  40a9b8:	jmp    0x40a9d9
  40a9ba:	(bad)  
  40a9bb:	cmp    DWORD PTR [edx],ecx
  40a9bd:	and    al,0x94
  40a9bf:	out    dx,eax
  40a9c0:	imul   DWORD PTR [esi]
  40a9c2:	sbb    DWORD PTR [edx+0x5989a7ed],esi
  40a9c8:	cmp    DWORD PTR [esi+0x7bca40cf],ebx
  40a9ce:	pop    eax
  40a9cf:	out    dx,al
  40a9d0:	lods   eax,DWORD PTR ds:[esi]
  40a9d1:	hlt    
  40a9d2:	ret    
  40a9d3:	rcl    DWORD PTR [ecx],cl
  40a9d5:	shl    ch,cl
  40a9d7:	lock je 0x40a9cd
  40a9da:	sbb    eax,0x4db7ad28
  40a9df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a9e0:	jbe    0x40a9ef
  40a9e2:	xor    eax,0x6afd0f7b
  40a9e7:	and    al,0x94
  40a9e9:	mov    edi,0x1b276ec7
  40a9ee:	xlat   BYTE PTR ds:[ebx]
  40a9ef:	and    ebp,edi
  40a9f1:	pop    eax
  40a9f2:	sbb    al,0x6b
  40a9f4:	sar    DWORD PTR [esi+0x59b3712a],cl
  40a9fa:	ret    0xf401
  40a9fd:	test   eax,0xd9e75638
  40aa02:	pop    ss
  40aa03:	xlat   BYTE PTR ds:[ebx]
  40aa04:	lods   eax,DWORD PTR ds:[esi]
  40aa05:	loop   0x40aa2e
  40aa07:	xor    dh,BYTE PTR [edx+0x64]
  40aa0a:	xchg   BYTE PTR [ebp-0x145ed6b1],dh
  40aa10:	test   eax,0xd52ff277
  40aa15:	adc    BYTE PTR [ebx+ebx*1-0x47],0x90
  40aa1a:	popa   
  40aa1b:	mov    dl,BYTE PTR [eax]
  40aa1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa1e:	mov    esp,0x46b85a37
  40aa23:	mov    bl,0x44
  40aa25:	xchg   DWORD PTR [eax],esp
  40aa27:	cmp    al,0xf7
  40aa29:	enter  0x161f,0x81
  40aa2d:	test   eax,0xe48aff7a
  40aa32:	es ffreep st(6)
  40aa35:	pusha  
  40aa36:	loope  0x40aa9d
  40aa38:	ins    DWORD PTR es:[edi],dx
  40aa39:	ins    DWORD PTR es:[edi],dx
  40aa3a:	cmp    BYTE PTR [ebx+0xd539a40],ch
  40aa40:	hlt    
  40aa41:	call   0xe83:0xae328539
  40aa48:	leave  
  40aa49:	jmp    0x2f042ecb
  40aa4e:	shr    DWORD PTR [edi-0x2c],1
  40aa51:	ret    0x44c
  40aa54:	popf   
  40aa55:	call   0xd71eea6c
  40aa5a:	push   eax
  40aa5b:	fild   QWORD PTR [ebx]
  40aa5d:	ret    0xd233
  40aa60:	div    esi
  40aa62:	mov    esi,0xdbd
  40aa67:	add    eax,esi
  40aa69:	cmp    ecx,eax
  40aa6b:	jae    0x40b05a
  40aa71:	mov    DWORD PTR [ebp-0x1c],0x2d7e
  40aa78:	mov    DWORD PTR [ebp-0x20],0x383e
  40aa7f:	mov    DWORD PTR [ebp-0x24],0x3a3a
  40aa86:	mov    DWORD PTR [ebp-0x14],0x13cd
  40aa8d:	jmp    0x40ad24
  40aa92:	popa   
  40aa93:	clc    
  40aa94:	jnp    0x40aae9
  40aa96:	jl     0x40aaec
  40aa98:	imul   edi,eax,0x9e64741c
  40aa9e:	sub    ebx,DWORD PTR [ebx+eax*8-0x415a1531]
  40aaa5:	mov    esi,0xbebec2a9
  40aaaa:	popf   
  40aaab:	add    edx,eax
  40aaad:	ret    
  40aaae:	pop    ss
  40aaaf:	int    0xab
  40aab1:	fst    st(1)
  40aab3:	fwait
  40aab4:	or     al,0xd7
  40aab6:	inc    ebx
  40aab7:	mov    dh,0xab
  40aab9:	sub    eax,0x472a5fc5
  40aabe:	cwde   
  40aabf:	cwde   
  40aac0:	adc    bh,cl
  40aac2:	pop    eax
  40aac3:	push   ebx
  40aac4:	push   0x6b
  40aac6:	shr    BYTE PTR [edx],cl
  40aac8:	loopne 0x40aace
  40aaca:	pushf  
  40aacb:	dec    ecx
  40aacc:	test   esi,ebp
  40aace:	or     esp,esp
  40aad0:	punpckhdq mm6,mm7
  40aad3:	paddd  mm4,QWORD PTR [ebp-0x10]
  40aad7:	fist   DWORD PTR gs:[eax+0x13]
  40aadb:	push   ecx
  40aadc:	dec    ebx
  40aadd:	mov    dl,BYTE PTR [ebx]
  40aadf:	pop    edi
  40aae0:	mov    bl,0x83
  40aae2:	mov    al,ds:0xa97ae6c8
  40aae7:	enter  0x2726,0x9e
  40aaeb:	xor    ebp,esi
  40aaed:	xchg   edi,eax
  40aaee:	lock push es
  40aaf0:	or     DWORD PTR gs:[ebx],0x56c28e60
  40aaf7:	xchg   edx,eax
  40aaf8:	fistp  WORD PTR [edx+0x3e]
  40aafb:	call   0x7fb4:0x63d0a612
  40ab02:	bound  ebp,QWORD PTR [ebx-0x56]
  40ab05:	into   
  40ab06:	or     ecx,DWORD PTR [ecx+0x4d]
  40ab09:	fld    QWORD PTR [ebp+0x6e8f0748]
  40ab0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab10:	cwde   
  40ab11:	outs   dx,DWORD PTR ss:[esi]
  40ab13:	test   eax,0x721edee
  40ab18:	jecxz  0x40ab39
  40ab1a:	(bad)  
  40ab1b:	sbb    al,BYTE PTR [edx+0x693f815f]
  40ab21:	(bad)  
  40ab24:	lods   eax,DWORD PTR ds:[esi]
  40ab25:	not    ebx
  40ab27:	cmp    BYTE PTR [edx],al
  40ab29:	loope  0x40aae2
  40ab2b:	and    BYTE PTR [edx+0x6e],bl
  40ab2e:	in     eax,0xa5
  40ab30:	daa    
  40ab31:	push   ss
  40ab32:	fsubr  DWORD PTR [ebp-0x2e]
  40ab35:	mov    bl,0xc6
  40ab37:	cmp    dh,BYTE PTR [eax+edi*1+0x53]
  40ab3b:	xchg   esi,eax
  40ab3c:	adc    al,0x3e
  40ab3e:	into   
  40ab3f:	xor    BYTE PTR [esp+eax*2-0x135e3677],dh
  40ab46:	dec    esi
  40ab47:	cmp    edi,DWORD PTR [ebp-0x584a11ec]
  40ab4d:	xchg   esi,eax
  40ab4e:	nop
  40ab4f:	cdq    
  40ab50:	add    DWORD PTR [edi+0x176c60e4],ebp
  40ab56:	jl     0x40ab1f
  40ab58:	xchg   BYTE PTR [eax+0x40],ch
  40ab5b:	(bad)  
  40ab5c:	mov    dl,0xc3
  40ab5e:	icebp  
  40ab5f:	(bad)  
  40ab60:	jbe    0x40aaef
  40ab62:	(bad)  
  40ab63:	iret   
  40ab64:	loop   0x40ab13
  40ab66:	pop    ebx
  40ab67:	daa    
  40ab68:	das    
  40ab69:	jno    0x40ab03
  40ab6b:	js     0x40ab52
  40ab6d:	pop    edx
  40ab6e:	push   ss
  40ab6f:	call   0xf93e:0x707ff894
  40ab76:	xchg   edx,eax
  40ab77:	out    0x4a,eax
  40ab79:	loopne 0x40ab5c
  40ab7b:	inc    ecx
  40ab7c:	scas   eax,DWORD PTR es:[edi]
  40ab7d:	jno    0x40abdf
  40ab7f:	cmp    bh,BYTE PTR [ebp+ecx*4-0x132d0832]
  40ab86:	adc    DWORD PTR [edi+0x4a],edx
  40ab89:	xchg   DWORD PTR [edx],ebx
  40ab8b:	mov    ebx,0x775929e
  40ab90:	fs dec edx
  40ab92:	in     al,0x27
  40ab94:	jg     0x40ab77
  40ab96:	jne    0x40ab3a
  40ab98:	cmp    BYTE PTR [esi-0x26],ah
  40ab9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab9c:	jae    0x40ac1a
  40ab9e:	aam    0x88
  40aba0:	in     al,0x82
  40aba2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aba3:	mov    bl,0xbf
  40aba5:	jne    0x40abf2
  40aba7:	jns    0x40abf0
  40aba9:	out    0x9,al
  40abab:	retf   
  40abac:	sub    dh,bh
  40abae:	push   ebx
  40abaf:	or     al,0xeb
  40abb1:	mov    eax,0x69dedfd
  40abb6:	add    al,0xad
  40abb8:	mov    ch,0x2b
  40abba:	icebp  
  40abbb:	scas   eax,DWORD PTR es:[edi]
  40abbc:	add    eax,0x848f4ec3
  40abc1:	adc    al,0x9c
  40abc3:	in     eax,0xad
  40abc5:	adc    BYTE PTR [edx-0xa],dl
  40abc8:	mov    cl,0x57
  40abca:	ins    BYTE PTR es:[edi],dx
  40abcb:	ja     0x40abb7
  40abcd:	repnz mov ds:0xcd55d914,eax
  40abd3:	mov    ds:0xedc7f066,al
  40abd8:	sbb    ah,BYTE PTR [ecx+ebx*2-0x7d5e156f]
  40abdf:	sbb    al,0xe9
  40abe1:	push   0xdfe5a98d
  40abe6:	cmp    eax,0xce18471c
  40abeb:	and    eax,0xaa5ef568
  40abf0:	xor    DWORD PTR [esi+0x5bedc24],0xffffffa6
  40abf7:	cmp    al,ah
  40abf9:	sub    BYTE PTR gs:[ebp-0x5bfebc86],bl
  40ac00:	jmp    0x1073:0xa43b2bfc
  40ac07:	ds pop ebx
  40ac09:	xchg   BYTE PTR [esi-0x50a62c4f],cl
  40ac0f:	ret    
  40ac10:	adc    BYTE PTR [edx],cl
  40ac12:	pop    ss
  40ac13:	adc    al,0x32
  40ac15:	sub    eax,0xfb674780
  40ac1a:	mov    cl,0x7b
  40ac1c:	js     0x40ac9d
  40ac1e:	(bad)
  40ac21:	(bad)  
  40ac22:	in     al,0xe2
  40ac24:	push   esp
  40ac25:	mov    al,0x61
  40ac27:	or     eax,DWORD PTR [edi-0x20e6704d]
  40ac2d:	mov    bl,0x4f
  40ac2f:	sbb    al,0x2
  40ac31:	adc    DWORD PTR [eax],0x928c037d
  40ac37:	lock dec edx
  40ac39:	jno    0x40abce
  40ac3b:	lods   al,BYTE PTR ds:[esi]
  40ac3c:	mov    BYTE PTR [eax+0x18],cl
  40ac3f:	js     0x40ac0a
  40ac41:	fimul  WORD PTR [eax-0xa]
  40ac44:	lods   al,BYTE PTR ds:[esi]
  40ac45:	repz jg 0x40ac8d
  40ac48:	xor    BYTE PTR [edx+0x35],ch
  40ac4b:	ror    DWORD PTR [ebx-0x58],cl
  40ac4e:	lods   eax,DWORD PTR ds:[esi]
  40ac4f:	jecxz  0x40abde
  40ac51:	cmp    BYTE PTR [ecx],dl
  40ac53:	daa    
  40ac54:	pop    eax
  40ac55:	adc    al,0x4d
  40ac57:	cs cs shr edi,1
  40ac5b:	xchg   esi,eax
  40ac5c:	popf   
  40ac5d:	dec    eax
  40ac5e:	inc    ebp
  40ac5f:	and    eax,0xbaca0c23
  40ac64:	div    al
  40ac66:	xchg   edi,eax
  40ac67:	mov    ebx,0x7ed1823
  40ac6c:	loop   0x40ac78
  40ac6e:	push   ebx
  40ac6f:	fnstsw WORD PTR [ecx+0x1f206a1f]
  40ac75:	dec    ebx
  40ac76:	fld    DWORD PTR [edx+ecx*4-0x5a029e3b]
  40ac7d:	mov    ah,0x74
  40ac7f:	or     eax,DWORD PTR [edi]
  40ac81:	jle    0x40acfc
  40ac83:	fsub   st(5),st
  40ac85:	inc    edx
  40ac86:	push   0x7b
  40ac88:	xor    DWORD PTR [edi+0x39a76a1d],esi
  40ac8e:	popa   
  40ac8f:	add    al,0x88
  40ac91:	add    bl,BYTE PTR [edi-0x7c]
  40ac94:	(bad)  
  40ac95:	sbb    eax,DWORD PTR ds:0xd829b0e7
  40ac9b:	outs   dx,BYTE PTR ds:[esi]
  40ac9c:	scas   eax,DWORD PTR es:[edi]
  40ac9d:	cs mov dh,0xbe
  40aca0:	sbb    DWORD PTR [esi],edx
  40aca2:	jo     0x40acda
  40aca4:	mov    al,0x93
  40aca6:	mov    dl,ah
  40aca8:	sbb    al,0x70
  40acaa:	aaa    
  40acab:	ds aam 0x42
  40acae:	add    al,0x28
  40acb0:	ja     0x40ac9b
  40acb2:	jmp    0xc2afa513
  40acb7:	xchg   esi,eax
  40acb8:	inc    ebp
  40acb9:	inc    ecx
  40acba:	aas    
  40acbb:	dec    ebx
  40acbc:	call   0x9e21eadb
  40acc1:	add    al,0x34
  40acc3:	push   ebx
  40acc4:	add    DWORD PTR [edx-0x29],edi
  40acc7:	jmp    0xfbc52d88
  40accc:	mov    DWORD PTR [eax],edx
  40acce:	retf   0x880e
  40acd1:	lock std 
  40acd3:	jmp    0x6b11:0x3fecd7ef
  40acda:	bound  ebp,QWORD PTR [edx-0x48129329]
  40ace0:	mov    WORD PTR [edi],fs
  40ace2:	jmp    0xe2f8:0xb9d3a31f
  40ace9:	daa    
  40acea:	pop    edx
  40aceb:	popf   
  40acec:	retf   
  40aced:	push   ebp
  40acee:	or     esi,0x8
  40acf1:	dec    ebp
  40acf2:	sbb    al,0x6a
  40acf4:	pop    edx
  40acf5:	pop    ebx
  40acf6:	daa    
  40acf7:	mov    ebx,DWORD PTR [ebp-0x49]
  40acfa:	adc    eax,0x353eee6e
  40acff:	push   0x42
  40ad01:	jb     0x40ad82
  40ad03:	arpl   WORD PTR [ebx+0x434254e9],ax
  40ad09:	shl    DWORD PTR [edi+0x65f98a93],cl
  40ad0f:	(bad)  
  40ad10:	sub    ah,BYTE PTR ds:0x955c36b
  40ad16:	mov    ebp,db0
  40ad19:	adc    eax,0x50016f36
  40ad1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad1f:	stc    
  40ad20:	je     0x40acb6
  40ad22:	push   0xffffff91
  40ad24:	xor    edx,edx
  40ad26:	mov    DWORD PTR [ebp-0x18],0x187
  40ad2d:	mov    DWORD PTR [ebp-0x28],0x3224
  40ad34:	mov    eax,DWORD PTR [ebp-0x28]
  40ad37:	push   0x6
  40ad39:	pop    ebx
  40ad3a:	div    ebx
  40ad3c:	mov    edx,eax
  40ad3e:	mov    eax,ds:0x422738
  40ad43:	mov    eax,DWORD PTR [eax+0x1d0]
  40ad49:	sub    eax,edx
  40ad4b:	mov    edx,DWORD PTR [ebp-0x24]
  40ad4e:	jmp    0x40afe5
  40ad53:	dec    esp
  40ad54:	sub    BYTE PTR [ebp-0x49],ah
  40ad57:	test   eax,0xb93c9cb8
  40ad5c:	and    BYTE PTR [esi-0x2212b070],bl
  40ad62:	nop
  40ad63:	aad    0xa9
  40ad65:	mov    esi,0xbec2a9be
  40ad6a:	mov    esi,0xc449bacf
  40ad6f:	out    0xbd,eax
  40ad71:	cmp    DWORD PTR [ebp-0x1b7d9f90],esi
  40ad77:	dec    ebp
  40ad78:	jnp    0x40ad6e
  40ad7a:	in     al,dx
  40ad7b:	mov    esi,0xc3fea823
  40ad80:	inc    eax
  40ad81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad82:	xor    BYTE PTR [edi],bl
  40ad84:	dec    esp
  40ad85:	fadd   st(3),st
  40ad87:	xchg   ecx,eax
  40ad88:	inc    eax
  40ad89:	(bad)  
  40ad8b:	cmp    ecx,DWORD PTR [eax]
  40ad8d:	add    eax,0xfcf88eea
  40ad92:	test   BYTE PTR [esi+0x572569a5],al
  40ad98:	push   ebp
  40ad99:	xor    bh,BYTE PTR [ebx+0x574c2727]
  40ad9f:	dec    esi
  40ada0:	js     0x40ae0f
  40ada2:	rcl    ebx,1
  40ada4:	fisub  DWORD PTR [esi]
  40ada6:	jle    0x40adf8
  40ada8:	sub    al,0x9a
  40adaa:	cmp    DWORD PTR [ebx],esp
  40adac:	je     0x40ae06
  40adae:	add    BYTE PTR [esi+0x24e6092f],bh
  40adb4:	popa   
  40adb5:	iret   
  40adb6:	lods   eax,DWORD PTR ds:[esi]
  40adb7:	and    dh,BYTE PTR [edx]
  40adb9:	sbb    eax,0x60115541
  40adbe:	dec    eax
  40adbf:	push   ebp
  40adc0:	mov    dh,BYTE PTR [esi-0x26e7f671]
  40adc6:	cmc    
  40adc7:	je     0x40ada4
  40adc9:	mov    cl,0x5a
  40adcb:	lahf   
  40adcc:	scas   eax,DWORD PTR es:[edi]
  40adcd:	push   ecx
  40adce:	jno    0x40ae14
  40add0:	aam    0xb2
  40add2:	fiadd  DWORD PTR [esp+eax*4]
  40add5:	xor    eax,0x188f3798
  40adda:	push   ebp
  40addb:	call   0x8bbb:0x42ac383a
  40ade2:	adc    cl,ah
  40ade4:	push   edx
  40ade5:	dec    ebx
  40ade6:	pop    esi
  40ade7:	cmp    ebx,0x34
  40adea:	mov    edx,ecx
  40adec:	aam    0x24
  40adee:	or     eax,0x56215e25
  40adf3:	xchg   BYTE PTR [eax+0x25],bl
  40adf6:	sbb    eax,DWORD PTR [ecx+0x66bcebff]
  40adfc:	lods   eax,DWORD PTR ds:[esi]
  40adfd:	outs   dx,DWORD PTR ds:[esi]
  40adfe:	cmp    al,0x79
  40ae00:	arpl   WORD PTR [edi+edx*1],bp
  40ae03:	pop    ebx
  40ae04:	js     0x40ae36
  40ae06:	xchg   ebp,eax
  40ae07:	iret   
  40ae08:	not    BYTE PTR [esi+0x38d828a2]
  40ae0e:	rcr    DWORD PTR [eax],0xbe
  40ae11:	lods   al,BYTE PTR ds:[esi]
  40ae12:	jmp    0xefcd:0xbe663149
  40ae19:	pop    ss
  40ae1a:	mul    DWORD PTR [ebp+0x45]
  40ae1d:	popf   
  40ae1e:	enter  0xa0a3,0x3b
  40ae22:	int    0x37
  40ae24:	jmp    0x40ae59
  40ae26:	lods   eax,DWORD PTR ds:[esi]
  40ae27:	out    0xee,eax
  40ae29:	test   al,0x28
  40ae2b:	mov    al,0xc9
  40ae2d:	cmc    
  40ae2e:	js     0x40ae73
  40ae30:	push   es
  40ae31:	(bad)  
  40ae33:	fld    TBYTE PTR [ebx+0x5dc2745b]
  40ae39:	arpl   WORD PTR [edi-0x44],si
  40ae3c:	xor    al,0xb
  40ae3e:	test   eax,0x7ca27eb3
  40ae43:	sub    eax,edx
  40ae45:	push   ss
  40ae46:	popa   
  40ae47:	(bad)  
  40ae48:	cwde   
  40ae49:	adc    ah,BYTE PTR [ebx]
  40ae4b:	or     BYTE PTR [ebx+edi*4],0xcb
  40ae4f:	inc    esp
  40ae50:	nop
  40ae51:	xchg   ecx,eax
  40ae52:	sar    BYTE PTR [esi+0x2fcf00],cl
  40ae58:	lods   al,BYTE PTR ds:[esi]
  40ae59:	cmc    
  40ae5a:	lea    edx,[ecx-0x55]
  40ae5d:	cwde   
  40ae5e:	aas    
  40ae5f:	jno    0x40aec8
  40ae61:	outs   dx,BYTE PTR ds:[esi]
  40ae62:	mov    eax,0x31539ede
  40ae67:	push   0x4090bdd2
  40ae6c:	jle    0x40ae68
  40ae6e:	mov    esp,0x3e5d7307
  40ae73:	cdq    
  40ae74:	sar    BYTE PTR [edx],1
  40ae76:	pop    eax
  40ae77:	inc    edi
  40ae78:	not    ebp
  40ae7a:	push   ds
  40ae7b:	fcmovbe st,st(5)
  40ae7d:	nop
  40ae7e:	jp     0x40ae86
  40ae80:	mov    al,0xca
  40ae82:	out    dx,al
  40ae83:	sbb    esi,ebx
  40ae85:	add    eax,edi
  40ae87:	inc    ebp
  40ae88:	ficom  DWORD PTR [eax-0x80]
  40ae8b:	into   
  40ae8c:	popa   
  40ae8d:	push   ebx
  40ae8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae8f:	mov    eax,0xa75801e6
  40ae94:	dec    eax
  40ae95:	cmp    cl,0x8f
  40ae98:	sbb    DWORD PTR [ebx+0x6e],esp
  40ae9b:	mov    DWORD PTR [ecx-0x3c],edx
  40ae9e:	mov    ah,0xf
  40aea0:	jnp    0x40aeb4
  40aea2:	and    DWORD PTR [edx+0x393a437d],esp
  40aea8:	retf   
  40aea9:	iret   
  40aeaa:	or     DWORD PTR [edi-0x3946eecd],0x29
  40aeb1:	jmp    DWORD PTR [edi]
  40aeb3:	xchg   edi,eax
  40aeb4:	cld    
  40aeb5:	ins    DWORD PTR es:[edi],dx
  40aeb6:	jmp    0x64d17311
  40aebb:	mov    edx,0x780dcbeb
  40aec0:	xor    DWORD PTR [esi-0x100c0ce8],0xe1ba6228
  40aeca:	(bad)  
  40aecb:	and    edx,DWORD PTR [edx-0x66]
  40aece:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aecf:	repnz inc esp
  40aed1:	mov    ah,cl
  40aed3:	dec    ebp
  40aed4:	cli    
  40aed5:	mov    al,0x6e
  40aed7:	fwait
  40aed8:	mov    eax,0x74254765
  40aedd:	shl    ebx,cl
  40aedf:	repz sub DWORD PTR [ecx+0x51],0x3e
  40aee4:	and    eax,0x2bfbdee7
  40aee9:	iret   
  40aeea:	push   esi
  40aeeb:	xchg   edx,eax
  40aeec:	inc    esi
  40aeed:	sub    esi,esi
  40aeef:	adc    WORD PTR [ebp-0x62],bp
  40aef3:	xor    edi,DWORD PTR [edx+0x3a]
  40aef6:	pusha  
  40aef7:	fild   WORD PTR [ebx-0x3d]
  40aefa:	in     eax,dx
  40aefb:	mov    dh,0x2c
  40aefd:	sub    dl,bh
  40aeff:	addr16 push edi
  40af01:	sbb    al,0x1b
  40af03:	and    DWORD PTR [esi+0xfc668a3],edx
  40af09:	ret    0xf7ac
  40af0c:	push   0xc6b13b8b
  40af11:	pop    edx
  40af12:	dec    edx
  40af13:	addr16 (bad) 
  40af15:	mov    ebp,0x726b0e54
  40af1a:	adc    DWORD PTR [edi],edx
  40af1c:	sub    esp,ecx
  40af1e:	adc    BYTE PTR [ebp+0xda64d17],ch
  40af24:	mov    eax,ds:0xa5dc523b
  40af29:	retfw  0xd7f6
  40af2d:	cs jo  0x40af5e
  40af30:	xor    edx,DWORD PTR [ebx-0x10]
  40af33:	and    DWORD PTR [edx-0x532cd4f6],0x7cfb5bcb
  40af3d:	push   cs
  40af3e:	push   esp
  40af3f:	pusha  
  40af40:	addr16 out dx,al
  40af42:	push   cs
  40af43:	adc    al,0x3d
  40af45:	into   
  40af46:	out    0x87,al
  40af48:	je     0x40af9b
  40af4a:	int    0xdf
  40af4c:	inc    ebx
  40af4d:	and    DWORD PTR [eax],edx
  40af4f:	xchg   esp,eax
  40af51:	adc    dl,ch
  40af53:	outs   dx,DWORD PTR ds:[esi]
  40af54:	loope  0x40afa2
  40af56:	out    0x4b,eax
  40af58:	pop    edx
  40af59:	es leave 
  40af5b:	and    DWORD PTR [edx-0x50d12c6a],esp
  40af61:	cmp    eax,0x28cd8756
  40af66:	bound  ebp,QWORD PTR [edx-0x1e]
  40af69:	jns    0x40af63
  40af6b:	fstp   QWORD PTR [ebp+0xe6edc67]
  40af71:	sbb    eax,0x63bd4be5
  40af76:	mov    BYTE PTR [edx-0xa3116b5],cl
  40af7c:	sbb    bl,al
  40af7e:	xchg   edi,eax
  40af7f:	pop    ss
  40af80:	das    
  40af81:	mov    eax,ds:0xbf6591
  40af86:	jmp    0x40af6d
  40af88:	imul   eax,DWORD PTR [eax-0x25650d0c],0x1d41247c
  40af92:	sbb    BYTE PTR [ebx],dl
  40af94:	fadd   st(5),st
  40af96:	out    dx,al
  40af97:	inc    eax
  40af98:	lock mov dl,0xa7
  40af9b:	mov    esp,0x59473296
  40afa0:	test   DWORD PTR [edi-0x438e9313],esi
  40afa6:	or     ebx,DWORD PTR [ecx+0x9479bb6]
  40afac:	popa   
  40afad:	adc    ecx,DWORD PTR [ebx]
  40afaf:	outs   dx,DWORD PTR ds:[esi]
  40afb0:	adc    DWORD PTR [esi-0x2a],ecx
  40afb3:	inc    edx
  40afb4:	hlt    
  40afb5:	add    al,0x58
  40afb7:	mov    ds:0xf8a1de54,al
  40afbc:	ins    DWORD PTR es:[edi],dx
  40afbd:	jmp    DWORD PTR [ecx+0xded9f2]
  40afc3:	fs inc eax
  40afc5:	push   edx
  40afc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40afc7:	push   ebx
  40afc8:	jb     0x40af9f
  40afca:	pop    ds
  40afcb:	daa    
  40afcc:	iret   
  40afcd:	push   eax
  40afce:	or     ebx,DWORD PTR [esi+0x64]
  40afd1:	das    
  40afd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40afd3:	dec    esp
  40afd4:	push   edi
  40afd5:	push   eax
  40afd6:	or     eax,0x8740e88a
  40afdb:	div    BYTE PTR [esi]
  40afdd:	out    dx,al
  40afde:	aaa    
  40afdf:	cmp    eax,0xad28b899
  40afe4:	inc    esp
  40afe5:	mov    ebx,DWORD PTR [ebp-0x20]
  40afe8:	imul   edx,ebx
  40afeb:	mov    ebx,DWORD PTR [ebp-0x1c]
  40afee:	xor    edx,ebx
  40aff0:	sub    edx,0x26bd
  40aff6:	add    eax,ecx
  40aff8:	and    edx,0x7126
  40affe:	mov    ebx,ecx
  40b000:	sub    ebx,edx
  40b002:	mov    edx,DWORD PTR [ebp-0x18]
  40b005:	sub    eax,edx
  40b007:	mov    edx,DWORD PTR [ebp-0x14]
  40b00a:	sub    eax,edx
  40b00c:	mov    edx,DWORD PTR [ebp+0xc]
  40b00f:	mov    dl,BYTE PTR [ebx+edx*1+0x16c0]
  40b016:	mov    BYTE PTR [eax-0xbb5],dl
  40b01c:	mov    eax,DWORD PTR [ebp-0x10]
  40b01f:	xor    eax,0xffffe1ce
  40b024:	add    eax,DWORD PTR [ebp-0xc]
  40b027:	xor    edx,edx
  40b029:	and    eax,0x6d33
  40b02e:	lea    ecx,[ecx+eax*1-0x6520]
  40b035:	mov    eax,DWORD PTR [ebp+0x8]
  40b038:	mov    ebx,DWORD PTR [ebp-0x4]
  40b03b:	add    eax,edi
  40b03d:	div    ebx
  40b03f:	mov    edx,DWORD PTR [ebp-0x8]
  40b042:	mov    ebx,0x940a7
  40b047:	sub    eax,edx
  40b049:	xor    edx,edx
  40b04b:	div    ebx
  40b04d:	add    eax,esi
  40b04f:	cmp    ecx,eax
  40b051:	jb     0x40aa71
  40b057:	xor    ebx,ebx
  40b059:	inc    ebx
  40b05a:	mov    DWORD PTR [ebp+0xc],0x77bd
  40b061:	mov    DWORD PTR [ebp+0x8],0x4f2a
  40b068:	mov    DWORD PTR [ebp-0x8],0x4738
  40b06f:	mov    DWORD PTR [ebp-0xc],0x6c4e
  40b076:	mov    DWORD PTR [ebp-0x10],0x7f0d
  40b07d:	mov    DWORD PTR [ebp-0x14],0x64ec
  40b084:	mov    DWORD PTR [ebp-0x18],0x1984
  40b08b:	mov    DWORD PTR [ebp-0x1c],0x293
  40b092:	mov    eax,DWORD PTR [ebp+0x8]
  40b095:	mov    ecx,DWORD PTR [ebp+0xc]
  40b098:	add    eax,0x1ef2
  40b09d:	and    eax,ecx
  40b09f:	xor    eax,0x7240
  40b0a4:	mov    ecx,0x7aaa
  40b0a9:	sub    ecx,eax
  40b0ab:	mov    DWORD PTR [ebp+0xc],0x8d3
  40b0b2:	mov    DWORD PTR [ebp+0x8],0x2392
  40b0b9:	mov    DWORD PTR [ebp-0x20],ebx
  40b0bc:	mov    DWORD PTR [ebp-0x24],0x338f
  40b0c3:	mov    DWORD PTR [ebp-0x28],0x61c9
  40b0ca:	mov    eax,DWORD PTR [ebp+0x8]
  40b0cd:	mov    edx,DWORD PTR [ebp+0xc]
  40b0d0:	imul   eax,edx
  40b0d3:	xor    eax,0x40a0
  40b0d8:	or     eax,0x1a48
  40b0dd:	xor    eax,0x139ddb0
  40b0e2:	mov    esi,ecx
  40b0e4:	jmp    0x40b37b
  40b0e9:	stos   BYTE PTR es:[edi],al
  40b0ea:	(bad)  
  40b0eb:	mov    ss,WORD PTR [esi-0x355674c]
  40b0f1:	sub    BYTE PTR [edx],dh
  40b0f3:	inc    eax
  40b0f4:	fstp   st(2)
  40b0f6:	push   esp
  40b0f7:	fs sahf 
  40b0f9:	ret    0xbeaf
  40b0fc:	mov    esi,0xbebec2a9
  40b101:	out    0x24,eax
  40b103:	dec    edi
  40b104:	mov    DWORD PTR [edi-0xb],esi
  40b107:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b108:	fwait
  40b109:	bound  ebx,QWORD PTR [esi-0x596303f0]
  40b10f:	sub    DWORD PTR [edx-0x3e],ebp
  40b112:	mov    edi,ebp
  40b114:	xchg   edi,eax
  40b115:	or     al,BYTE PTR [ebp+0x3e]
  40b118:	jmp    0x40b16a
  40b11a:	push   ss
  40b11b:	xchg   edx,eax
  40b11c:	and    esp,edx
  40b11e:	mov    BYTE PTR [esi],0x30
  40b121:	xchg   ebp,eax
  40b122:	push   esp
  40b123:	xor    DWORD PTR ds:0xc323772b,edx
  40b129:	pop    esp
  40b12a:	xor    ecx,DWORD PTR [ebx]
  40b12c:	push   gs
  40b12e:	inc    edx
  40b12f:	pop    esp
  40b130:	pop    eax
  40b131:	test   eax,0x7845e9ed
  40b136:	ds sbb al,0xa6
  40b139:	int3   
  40b13a:	fwait
  40b13b:	sbb    BYTE PTR [ebp+0x36],dl
  40b13e:	fdiv   QWORD PTR es:[ebx+0x1c]
  40b142:	dec    esp
  40b143:	(bad)  
  40b144:	aad    0xe0
  40b146:	and    BYTE PTR [eax+0x32e197ae],cl
  40b14c:	xchg   esi,eax
  40b14d:	xchg   edx,eax
  40b14e:	stos   DWORD PTR es:[edi],eax
  40b14f:	inc    edx
  40b150:	dec    ebp
  40b151:	sbb    DWORD PTR [ecx],eax
  40b153:	fsincos 
  40b155:	daa    
  40b156:	(bad)  
  40b157:	int3   
  40b158:	push   esi
  40b159:	pop    ebp
  40b15a:	push   ebx
  40b15b:	sub    BYTE PTR [eax+eax*8-0x45aa296d],bh
  40b162:	rcl    DWORD PTR [edx+0x74],cl
  40b165:	sahf   
  40b166:	jb     0x40b1e4
  40b168:	retf   
  40b169:	mov    BYTE PTR [edi-0x6f98f0b1],cl
  40b16f:	or     DWORD PTR [esi+0x25807944],edi
  40b175:	pusha  
  40b176:	push   edx
  40b177:	outs   dx,BYTE PTR ds:[esi]
  40b178:	(bad)  
  40b179:	(bad)  
  40b17a:	popa   
  40b17b:	hlt    
  40b17c:	retf   0x1052
  40b17f:	test   DWORD PTR [ebx+eax*4+0x1f59e8ee],ebx
  40b186:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b187:	pop    ebx
  40b188:	icebp  
  40b189:	(bad)  
  40b18a:	adc    BYTE PTR [ebx],bh
  40b18c:	push   ebx
  40b18d:	sub    eax,0x6ff553a1
  40b192:	out    0x6c,al
  40b194:	mov    dh,0x5d
  40b196:	mov    ebx,0x71e8efa6
  40b19b:	stos   BYTE PTR es:[edi],al
  40b19c:	mov    cl,0xee
  40b19e:	sbb    eax,ecx
  40b1a0:	pusha  
  40b1a1:	mov    cl,0x37
  40b1a3:	inc    ebx
  40b1a4:	dec    eax
  40b1a5:	ffreep st(7)
  40b1a7:	pop    ebp
  40b1a8:	cli    
  40b1a9:	cmp    edi,edx
  40b1ab:	sahf   
  40b1ac:	jl     0x40b15c
  40b1ae:	jle    0x40b1c3
  40b1b0:	lods   eax,DWORD PTR ds:[esi]
  40b1b1:	loopne 0x40b218
  40b1b3:	call   edx
  40b1b5:	out    0xa3,eax
  40b1b7:	jl     0x40b1d1
  40b1b9:	add    BYTE PTR [edx],bh
  40b1bb:	sub    al,0xec
  40b1bd:	adc    ah,BYTE PTR [esi-0x61]
  40b1c0:	lds    ecx,FWORD PTR [ecx-0x25]
  40b1c3:	and    esp,DWORD PTR [ebp+0x41]
  40b1c6:	pop    ds
  40b1c7:	mov    bl,0x23
  40b1c9:	dec    ebx
  40b1ca:	nop
  40b1cb:	lahf   
  40b1cc:	sbb    ebx,DWORD PTR [esi]
  40b1ce:	pushf  
  40b1cf:	aad    0xc9
  40b1d1:	test   eax,0xee0dd5a
  40b1d6:	add    DWORD PTR [edx+0x49],eax
  40b1d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1da:	mov    dh,0x2d
  40b1dc:	sbb    eax,0xa5821ca6
  40b1e1:	sbb    BYTE PTR [ecx-0x530f9df0],bl
  40b1e7:	ins    DWORD PTR es:[edi],dx
  40b1e8:	push   ds
  40b1e9:	xchg   ecx,eax
  40b1ea:	sbb    ah,BYTE PTR [eax]
  40b1ec:	ror    DWORD PTR [ebx],cl
  40b1ee:	test   BYTE PTR [esi],0xf2
  40b1f1:	test   BYTE PTR [ecx+0x6],dh
  40b1f4:	pop    ebp
  40b1f5:	mov    esp,0x252236bf
  40b1fa:	lock xlat BYTE PTR ds:[ebx]
  40b1fc:	pop    esp
  40b1fd:	xor    DWORD PTR [esi-0x3f48081b],esi
  40b203:	out    dx,al
  40b204:	mov    dl,0x38
  40b206:	jnp    0x40b249
  40b208:	arpl   WORD PTR [esi-0x40],sp
  40b20b:	fst    QWORD PTR [esi+0x7d]
  40b20e:	push   es
  40b20f:	push   edi
  40b210:	fs inc esi
  40b212:	jl     0x40b22a
  40b214:	jmp    0x40b267
  40b216:	loopne 0x40b21f
  40b218:	mov    cl,0x2a
  40b21a:	sub    DWORD PTR ss:[ebx+0x6c],edx
  40b21e:	dec    esi
  40b21f:	mov    bh,0xfe
  40b221:	fsub   st,st(1)
  40b223:	loop   0x40b26d
  40b225:	ret    
  40b226:	xchg   esp,eax
  40b227:	xchg   edi,eax
  40b228:	push   0xffffff8f
  40b22a:	jecxz  0x40b23c
  40b22c:	out    dx,al
  40b22d:	pop    ebp
  40b22e:	dec    ecx
  40b22f:	inc    BYTE PTR ds:0xbf686e61
  40b235:	jo     0x40b21c
  40b237:	mov    esp,0x3c1282f2
  40b23c:	adc    eax,0x5c4b4ba8
  40b241:	mov    ds:0xf13771aa,eax
  40b246:	and    bl,BYTE PTR [ecx]
  40b248:	or     BYTE PTR [eax],dh
  40b24a:	sub    esi,ebx
  40b24c:	inc    ecx
  40b24d:	jns    0x40b2b4
  40b24f:	out    0xca,eax
  40b251:	xchg   edi,eax
  40b252:	ror    BYTE PTR [esi+0x4e],cl
  40b255:	dec    edi
  40b256:	jmp    0x40b1f2
  40b258:	fst    QWORD PTR [ebx]
  40b25a:	es ss inc ebp
  40b25d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b25e:	in     al,dx
  40b25f:	and    al,0x84
  40b261:	in     al,dx
  40b262:	push   esi
  40b263:	bound  esp,QWORD PTR [eax+0x5d786d81]
  40b269:	ss sub eax,0x5f97d73d
  40b26f:	adc    bh,BYTE PTR [eax]
  40b271:	adc    eax,0xd233e792
  40b276:	fild   QWORD PTR [edi-0x44]
  40b279:	mov    cl,0x8
  40b27b:	sbb    al,0x8
  40b27d:	in     al,dx
  40b27e:	adc    BYTE PTR [ebp+0x314a7588],bh
  40b284:	loope  0x40b228
  40b286:	xor    eax,0x19bd6dc9
  40b28b:	adc    DWORD PTR [ecx+0x4fbe47d5],esp
  40b291:	es cmc 
  40b293:	cdq    
  40b294:	add    dh,BYTE PTR [ecx+0x2e006ff]
  40b29a:	cdq    
  40b29b:	adc    dh,dl
  40b29d:	mov    edi,0x7a9c72af
  40b2a2:	xchg   DWORD PTR [edx-0x4ca6306d],eax
  40b2a8:	in     al,0x5
  40b2aa:	aam    0xda
  40b2ac:	jmp    0x555510b5
  40b2b1:	pushf  
  40b2b2:	out    dx,eax
  40b2b3:	fcom   DWORD PTR [edi+ecx*8+0x3f49d7ae]
  40b2ba:	mov    ds:0xfce70ef2,eax
  40b2bf:	je     0x40b32b
  40b2c1:	fs sahf 
  40b2c3:	inc    esi
  40b2c4:	repz push 0x64
  40b2c7:	std    
  40b2c8:	and    edi,DWORD PTR [edx+ebx*2+0x74]
  40b2cc:	std    
  40b2cd:	scas   eax,DWORD PTR es:[edi]
  40b2ce:	push   edx
  40b2cf:	inc    ebp
  40b2d0:	ins    BYTE PTR es:[edi],dx
  40b2d1:	mov    eax,DWORD PTR [bp+si+0xd71]
  40b2d6:	push   edi
  40b2d7:	inc    esi
  40b2d8:	mov    ds:0xccfcf993,al
  40b2dd:	lea    ebp,[esi-0x51]
  40b2e0:	jnp    0x40b28e
  40b2e2:	add    DWORD PTR [ebp-0x67aeca09],esi
  40b2e8:	jg     0x40b340
  40b2ea:	adc    al,0x88
  40b2ec:	cmp    eax,0xf376bf19
  40b2f1:	push   cs
  40b2f2:	cld    
  40b2f3:	test   DWORD PTR [eiz*8+0xb24a28f],esi
  40b2fa:	std    
  40b2fb:	sti    
  40b2fc:	push   ds
  40b2fd:	adc    BYTE PTR [eax],al
  40b2ff:	pusha  
  40b300:	and    eax,edx
  40b302:	cmp    eax,0xa7dc9bcb
  40b307:	int3   
  40b308:	mov    cl,BYTE PTR [edx-0xf]
  40b30b:	outs   dx,DWORD PTR ds:[esi]
  40b30c:	arpl   WORD PTR [ebp+edx*1-0x4eb07d58],si
  40b313:	fild   QWORD PTR ds:0x5da918c6
  40b319:	xchg   esi,eax
  40b31a:	repnz pop eax
  40b31c:	lods   al,BYTE PTR ds:[esi]
  40b31d:	sbb    BYTE PTR [edi+0x49aa06c1],cl
  40b323:	push   0xbac57140
  40b328:	adc    al,0xa1
  40b32a:	jns    0x40b381
  40b32c:	mov    al,ds:0x2a0b91b7
  40b331:	mov    ch,0x73
  40b333:	les    esi,FWORD PTR [eax+ebx*1-0x5dd0ebbc]
  40b33a:	xchg   ebx,eax
  40b33b:	test   DWORD PTR [edx+0x66],esp
  40b33e:	cwde   
  40b33f:	pop    ecx
  40b340:	or     DWORD PTR [edx*8-0x7e3d0ae0],ebx
  40b347:	retf   0xcc26
  40b34a:	aaa    
  40b34b:	cld    
  40b34c:	mov    ah,0x3b
  40b34e:	aaa    
  40b34f:	mov    ebp,0xf45487d0
  40b354:	sub    al,0x77
  40b356:	add    bl,al
  40b358:	push   ecx
  40b359:	call   0xd044d961
  40b35e:	es mov edi,0x5f0468e6
  40b364:	dec    edi
  40b365:	lods   eax,DWORD PTR ds:[esi]
  40b366:	push   ds
  40b367:	pop    edx
  40b368:	inc    eax
  40b369:	es mov ebp,0x58b02762
  40b36f:	fadd   QWORD PTR [edx]
  40b371:	ins    DWORD PTR es:[edi],dx
  40b372:	or     al,0x96
  40b374:	cmp    al,0xcc
  40b376:	jg     0x40b3d9
  40b378:	sar    DWORD PTR [ebx-0x740fd4b9],0x45
  40b37f:	fmul   DWORD PTR [ebx+0x7d8bdc55]
  40b385:	loopne 0x40b394
  40b387:	ret    0x1c
  40b38a:	add    BYTE PTR [ebx],ch
  40b38c:	ret    0xd233
  40b38f:	div    edi
  40b391:	mov    edx,DWORD PTR ds:0x422738
  40b397:	mov    edx,DWORD PTR [edx+0x1d4]
  40b39d:	sub    edx,eax
  40b39f:	mov    eax,DWORD PTR [ebp+0x10]
  40b3a2:	mov    al,BYTE PTR [esi+eax*1]
  40b3a5:	mov    BYTE PTR [edx+ecx*1-0x1c12],al
  40b3ac:	mov    eax,DWORD PTR [ebp-0x1c]
  40b3af:	mov    edx,DWORD PTR [ebp-0x18]
  40b3b2:	imul   eax,edx
  40b3b5:	mov    edx,DWORD PTR [ebp-0x14]
  40b3b8:	imul   eax,eax,0x262b
  40b3be:	or     eax,edx
  40b3c0:	jmp    0x40b657
  40b3c5:	dec    ecx
  40b3c6:	mov    bl,0x7d
  40b3c8:	push   esp
  40b3c9:	mov    bh,0x74
  40b3cb:	pushf  
  40b3cc:	mov    esp,0xe3db5995
  40b3d1:	xchg   edi,eax
  40b3d2:	sub    BYTE PTR [edi+ecx*8-0x41414c53],al
  40b3d9:	test   eax,0xedbebec2
  40b3de:	push   ecx
  40b3df:	int    0xc1
  40b3e1:	cwde   
  40b3e2:	sbb    dl,BYTE PTR [ebx+edx*2-0x43f0bc1d]
  40b3e9:	fstp   QWORD PTR [ecx+0x34e82e52]
  40b3ef:	std    
  40b3f0:	mov    ds:0xad0c4219,al
  40b3f5:	pushf  
  40b3f6:	clc    
  40b3f7:	cmp    eax,0x5dcfa59e
  40b3fc:	cmp    esi,ecx
  40b3fe:	jnp    0x40b479
  40b400:	pop    eax
  40b401:	xchg   edi,eax
  40b402:	pushf  
  40b403:	sub    bh,BYTE PTR [eax-0x47]
  40b406:	ltr    WORD PTR ds:0xc220db8e
  40b40d:	lods   eax,DWORD PTR ds:[esi]
  40b40e:	mov    ch,0x67
  40b410:	test   eax,0xe6f75f8
  40b415:	inc    esi
  40b416:	jp     0x40b3f7
  40b418:	pop    ds
  40b419:	enter  0xbb49,0x82
  40b41d:	ss dec ebx
  40b41f:	ret    
  40b420:	cmp    ch,BYTE PTR [esi-0x35c86a7c]
  40b426:	and    al,0xec
  40b428:	xchg   BYTE PTR [eax-0x620541ad],dl
  40b42e:	xor    DWORD PTR [esi+eiz*2+0x8],eax
  40b432:	fld    TBYTE PTR [esi+eax*4-0x26]
  40b436:	push   cs
  40b437:	int3   
  40b438:	add    al,0x15
  40b43a:	inc    esp
  40b43b:	int3   
  40b43c:	popa   
  40b43d:	mov    esp,0x67fa4186
  40b442:	into   
  40b443:	or     DWORD PTR [ebp+0x57],ebp
  40b446:	cmc    
  40b447:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b448:	in     al,dx
  40b449:	stos   DWORD PTR es:[edi],eax
  40b44a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b44b:	outs   dx,DWORD PTR ds:[esi]
  40b44c:	mov    al,0xe2
  40b44e:	mov    ebp,DWORD PTR [esi+0x74]
  40b451:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b452:	cdq    
  40b453:	cmp    ebx,eax
  40b455:	pop    ebx
  40b456:	xchg   esp,eax
  40b457:	cld    
  40b458:	mov    eax,ds:0x345153be
  40b45d:	mov    ebp,0xa3841b6f
  40b462:	xlat   BYTE PTR ds:[ebx]
  40b463:	and    BYTE PTR [eax+0x11],bh
  40b466:	popa   
  40b467:	adc    ah,BYTE PTR [ebp-0x65fcdf99]
  40b46d:	push   ss
  40b46e:	cmp    ebx,esp
  40b470:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b471:	sub    cl,cl
  40b473:	mov    ecx,0xa9d3e68c
  40b478:	add    bl,BYTE PTR [ebp-0x4c]
  40b47b:	sbb    cl,BYTE PTR [edx]
  40b47d:	mov    ebx,0x626dc52b
  40b482:	sbb    ebx,DWORD PTR [edx+0x6e]
  40b485:	into   
  40b486:	sbb    eax,0xbc4d80f2
  40b48b:	cmp    esi,ebp
  40b48d:	fcom   DWORD PTR [ecx]
  40b48f:	xchg   DWORD PTR [edx+0x62],edi
  40b492:	pop    edx
  40b493:	and    al,0xbc
  40b495:	cli    
  40b496:	adc    BYTE PTR [edi+0x6fc8ccda],0x1c
  40b49d:	inc    ebx
  40b49e:	sti    
  40b49f:	das    
  40b4a0:	icebp  
  40b4a1:	push   edx
  40b4a2:	sbb    edi,esp
  40b4a4:	mov    dh,BYTE PTR [edx-0x8]
  40b4a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b4a8:	jg     0x40b4ff
  40b4aa:	mov    esp,0x4c8ac7aa
  40b4af:	inc    edi
  40b4b0:	scas   eax,DWORD PTR es:[edi]
  40b4b1:	stos   DWORD PTR es:[edi],eax
  40b4b2:	jno    0x40b4f7
  40b4b4:	adc    ecx,DWORD PTR ss:[ebp-0x6852f431]
  40b4bb:	and    DWORD PTR [ebx],esi
  40b4bd:	stc    
  40b4be:	mov    al,0x88
  40b4c0:	jns    0x40b45a
  40b4c2:	sub    DWORD PTR [ebx-0x59d0dfac],ebp
  40b4c8:	aaa    
  40b4c9:	xchg   ebx,eax
  40b4ca:	loop   0x40b519
  40b4cc:	pusha  
  40b4cd:	mov    edx,0x9ad898ae
  40b4d2:	add    BYTE PTR [ebp-0x7d],dl
  40b4d5:	push   eax
  40b4d6:	mov    bh,0xda
  40b4d8:	arpl   cx,sp
  40b4da:	sbb    al,0x14
  40b4dc:	pop    edx
  40b4dd:	sub    eax,DWORD PTR [edi-0x480ba9e0]
  40b4e3:	or     edx,edi
  40b4e5:	call   0x3ac5:0x38174d58
  40b4ec:	js     0x40b4a5
  40b4ee:	in     eax,0x67
  40b4f0:	aam    0xbf
  40b4f2:	scas   eax,DWORD PTR es:[edi]
  40b4f3:	mov    al,ds:0x11fa4565
  40b4f8:	mov    ebx,0x66abac71
  40b4fd:	outs   dx,BYTE PTR ds:[esi]
  40b4fe:	adc    al,0xa5
  40b500:	not    edx
  40b502:	mov    dl,0x13
  40b504:	sub    edx,edx
  40b506:	inc    edx
  40b507:	or     ecx,ecx
  40b509:	shl    DWORD PTR [edi+0x6238a042],cl
  40b50f:	mov    edi,0x7561180c
  40b514:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b515:	nop
  40b516:	fdiv   QWORD PTR [edx+ebp*8]
  40b519:	push   cs
  40b51a:	inc    edx
  40b51b:	xchg   ecx,eax
  40b51c:	cli    
  40b51d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b51e:	push   cs
  40b51f:	jb     0x40b4b9
  40b521:	mov    ss,WORD PTR [ebx]
  40b523:	outs   dx,DWORD PTR ds:[esi]
  40b524:	mov    bl,0xbc
  40b526:	leave  
  40b527:	jle    0x40b555
  40b529:	inc    ebp
  40b52a:	fwait
  40b52b:	mov    WORD PTR ds:0xd1d55332,gs
  40b531:	scas   eax,DWORD PTR es:[edi]
  40b532:	std    
  40b533:	pusha  
  40b534:	cmp    eax,0x441d4b5d
  40b539:	(bad)  
  40b53a:	call   0xa65012ac
  40b53f:	sti    
  40b540:	cmp    bh,bh
  40b542:	loope  0x40b5aa
  40b544:	daa    
  40b545:	mov    bh,0xce
  40b547:	mov    esi,eax
  40b549:	cmp    edi,DWORD PTR [edi-0x69]
  40b54c:	sahf   
  40b54d:	push   0x7d
  40b54f:	ins    BYTE PTR es:[edi],dx
  40b550:	add    bh,BYTE PTR [ebp-0x33fd022d]
  40b556:	popf   
  40b557:	pop    eax
  40b558:	xor    ebp,DWORD PTR [esi-0x47]
  40b55b:	scas   al,BYTE PTR es:[edi]
  40b55c:	call   0xd234:0x6d7872ad
  40b563:	test   DWORD PTR [ebp+0x79],0xff8a53b9
  40b56a:	ror    bl,1
  40b56c:	sbb    DWORD PTR [eax+0x7c9162f6],ebx
  40b572:	mov    cl,0x47
  40b574:	mov    esi,0xc0f557da
  40b579:	inc    ebx
  40b57a:	or     esi,ebp
  40b57c:	dec    DWORD PTR [ebp+0x5b]
  40b57f:	jle    0x40b5db
  40b581:	imul   BYTE PTR [ebp-0x49a49637]
  40b587:	mov    ebx,0x43dcde7b
  40b58c:	add    al,0x6b
  40b58e:	loope  0x40b5d6
  40b590:	mov    ebp,0x16672ef7
  40b595:	mov    al,0x88
  40b597:	xchg   DWORD PTR [ecx-0x45a00bf5],ecx
  40b59d:	icebp  
  40b59e:	into   
  40b59f:	push   eax
  40b5a0:	pop    edx
  40b5a1:	inc    esi
  40b5a2:	imul   edx,DWORD PTR [esi-0x27bdef79],0xffffff8c
  40b5a9:	sbb    DWORD PTR [ebp-0x478cd74c],esi
  40b5af:	xchg   DWORD PTR [ebp+0x59],esp
  40b5b2:	mov    eax,ds:0xb3e86f2b
  40b5b7:	int    0xd9
  40b5b9:	xchg   ecx,eax
  40b5ba:	jle    0x40b5b6
  40b5bc:	retf   0x8c9c
  40b5bf:	add    esi,esp
  40b5c1:	mov    esp,0xefae5c83
  40b5c6:	cli    
  40b5c7:	dec    ebx
  40b5c8:	setae  BYTE PTR [edx+0x25880998]
  40b5cf:	(bad)  
  40b5d0:	stc    
  40b5d1:	adc    eax,0xf9839214
  40b5d6:	mov    ch,0x98
  40b5d8:	mov    BYTE PTR [ebx-0x7b],ah
  40b5db:	adc    eax,0x2b49937b
  40b5e0:	fwait
  40b5e1:	gs jbe 0x40b57b
  40b5e4:	cli    
  40b5e5:	xor    eax,0xa2c01f98
  40b5ea:	rcr    DWORD PTR [ecx+0x3ce8bd53],0x4f
  40b5f1:	push   ss
  40b5f2:	clc    
  40b5f3:	add    al,0x34
  40b5f5:	mov    al,ds:0x16fb32fc
  40b5fa:	add    esp,edx
  40b5fc:	adc    dh,BYTE PTR [ebx]
  40b5fe:	aad    0x9
  40b600:	rcr    DWORD PTR ds:0xae93839d,cl
  40b606:	jb     0x40b5bd
  40b608:	inc    edi
  40b609:	retf   
  40b60a:	outs   dx,BYTE PTR ds:[esi]
  40b60b:	jmp    0x40b5a5
  40b60d:	xlat   BYTE PTR ds:[ebx]
  40b60e:	jae    0x40b686
  40b610:	(bad)  
  40b611:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b612:	and    BYTE PTR ds:0xc24855d0,dh
  40b618:	inc    ebp
  40b619:	cmp    al,0x63
  40b61b:	(bad)  
  40b61c:	leave  
  40b61d:	mov    ebx,0x4157f302
  40b622:	iret   
  40b623:	mov    dh,0x13
  40b625:	aad    0x3e
  40b627:	(bad)  
  40b628:	mov    dl,0xa6
  40b62a:	popa   
  40b62b:	adc    ah,BYTE PTR ds:0xe8b8dc47
  40b631:	test   al,0x3f
  40b633:	idiv   ebx
  40b635:	ss dec eax
  40b637:	inc    edx
  40b638:	jae    0x40b5ef
  40b63a:	mov    ecx,0xede9bd3c
  40b63f:	mov    esi,0x3b9b3c9c
  40b644:	mov    ds:0x708e26c2,eax
  40b649:	or     eax,0xf14da785
  40b64e:	adc    al,0xe7
  40b650:	stos   DWORD PTR es:[edi],eax
  40b651:	push   ebp
  40b652:	xchg   ecx,eax
  40b653:	call   0xf055:0x8bec2427
  40b65a:	or     eax,edx
  40b65c:	xor    eax,0x59f6
  40b661:	lea    ecx,[ecx+eax*1+0x350559e6]
  40b668:	mov    eax,DWORD PTR [ebp-0xc]
  40b66b:	and    eax,0xddc
  40b670:	add    eax,DWORD PTR [ebp-0x8]
  40b673:	xor    eax,0x46e3
  40b678:	add    eax,0x50eb
  40b67d:	cmp    ecx,eax
  40b67f:	jne    0x40b0ab
  40b685:	pop    edi
  40b686:	pop    esi
  40b687:	pop    ebx
  40b688:	leave  
  40b689:	ret    0xc
  40b68c:	push   ebp
  40b68d:	mov    ebp,esp
  40b68f:	sub    esp,0xec
  40b695:	push   ebx
  40b696:	push   esi
  40b697:	mov    DWORD PTR [ebp-0x8],0x548e
  40b69e:	jmp    0x40baa9
  40b6a3:	or     DWORD PTR [edx],ebx
  40b6a5:	or     eax,DWORD PTR [edi]
  40b6a7:	sbb    al,0x18
  40b6a9:	or     DWORD PTR [eax+ebp*4],ebx
  40b6ac:	mov    ds:0xcd259e60,eax
  40b6b1:	and    BYTE PTR [esi-0x41414866],bl
  40b6b7:	xchg   edx,eax
  40b6b8:	les    edi,FWORD PTR [esi+0x3e3cb7be]
  40b6be:	mov    ecx,ebp
  40b6c0:	cmc    
  40b6c1:	mov    ecx,?
  40b6c3:	push   0x68ee05af
  40b6c8:	shl    ecx,0xf1
  40b6cb:	pop    esp
  40b6cc:	xchg   DWORD PTR [edi+0x53],eax
  40b6cf:	shl    BYTE PTR [ebx+edx*2],1
  40b6d2:	sub    BYTE PTR [esi-0x66ec4245],ch
  40b6d8:	and    ecx,0x771a84d2
  40b6de:	and    DWORD PTR [ebx+0x6e],esi
  40b6e1:	loope  0x40b666
  40b6e3:	fwait
  40b6e4:	jge    0x40b675
  40b6e6:	sub    BYTE PTR [ebx],0x95
  40b6e9:	inc    ecx
  40b6ea:	push   esp
  40b6eb:	iret   
  40b6ec:	dec    ecx
  40b6ed:	push   edi
  40b6ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b6ef:	mov    bh,0x3
  40b6f1:	sub    DWORD PTR [eax+edi*2-0x38],ecx
  40b6f5:	stos   DWORD PTR es:[edi],eax
  40b6f6:	shl    DWORD PTR [edx-0x16d944f5],cl
  40b6fc:	xchg   ebp,eax
  40b6fd:	mov    ebx,DWORD PTR [esi-0x8]
  40b700:	das    
  40b701:	(bad)  
  40b702:	mov    eax,0xe09b62b2
  40b707:	xchg   ebx,eax
  40b708:	cmp    al,0xf7
  40b70a:	add    eax,edi
  40b70c:	or     al,0xde
  40b70e:	push   ebp
  40b70f:	push   ebp
  40b710:	cmp    BYTE PTR [esi+0x40],0xf1
  40b714:	cmp    al,0xa7
  40b716:	stc    
  40b717:	push   0x9aab3a21
  40b71c:	push   0xa64bf0eb
  40b721:	and    eax,DWORD PTR [edi]
  40b723:	lds    ebx,FWORD PTR [ecx+0x2ffda6e3]
  40b729:	rep stos BYTE PTR es:[edi],al
  40b72b:	shr    BYTE PTR [ebx],cl
  40b72d:	xchg   ebx,eax
  40b72e:	bound  esp,QWORD PTR [esi-0x35afcbb1]
  40b734:	mov    esi,0xc03cafab
  40b739:	or     bl,dh
  40b73b:	addr16 pop ds
  40b73d:	jmp    0xcbb3:0x98647bac
  40b744:	adc    esi,ebp
  40b746:	mov    ecx,0x240c657a
  40b74b:	or     al,0x5f
  40b74d:	ror    BYTE PTR [eax-0x283a97b1],0xdb
  40b754:	(bad)  
  40b755:	mov    eax,ds:0x4cf6604e
  40b75a:	inc    esp
  40b75b:	or     ah,bl
  40b75d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b75e:	clc    
  40b75f:	cwde   
  40b760:	xchg   ebp,eax
  40b761:	lods   al,BYTE PTR ds:[esi]
  40b762:	push   eax
  40b763:	add    DWORD PTR [ebx+edi*8],ecx
  40b766:	mov    al,ds:0x9e006824
  40b76b:	rcr    ah,1
  40b76d:	aad    0x20
  40b76f:	test   DWORD PTR [esi],ebp
  40b771:	(bad)  
  40b772:	and    bh,BYTE PTR [esi-0x7bf0cf64]
  40b778:	iret   
  40b779:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b77a:	inc    ecx
  40b77b:	jbe    0x40b75d
  40b77d:	cs sbb dl,bh
  40b780:	fidivr DWORD PTR [esi]
  40b782:	sbb    ebx,ebp
  40b784:	jmp    0x608838c6
  40b789:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b78a:	jo     0x40b7b9
  40b78c:	mov    al,ds:0xd987534b
  40b791:	push   esi
  40b792:	xchg   ebp,eax
  40b793:	jns    0x40b78d
  40b795:	sar    BYTE PTR [esi+ecx*4-0x4098c245],cl
  40b79c:	outs   dx,DWORD PTR ds:[esi]
  40b79d:	test   DWORD PTR [ebx+ebx*4+0x695c09e1],0xcc3d8883
  40b7a8:	out    dx,eax
  40b7a9:	xor    edx,DWORD PTR [edi+0x67fb5112]
  40b7af:	out    0xf8,eax
  40b7b1:	(bad)  
  40b7b3:	fcom   QWORD PTR [ebp-0x60c444a]
  40b7b9:	pop    edx
  40b7ba:	xchg   esi,eax
  40b7bb:	dec    esp
  40b7bc:	cmp    BYTE PTR [ecx-0x68],cl
  40b7bf:	add    cl,dl
  40b7c1:	js     0x40b7aa
  40b7c3:	pop    es
  40b7c4:	mov    eax,0x96c297d1
  40b7c9:	mov    al,ds:0xbe16ab8f
  40b7ce:	cld    
  40b7cf:	or     al,0x59
  40b7d1:	ja     0x40b829
  40b7d3:	mov    ch,0x1a
  40b7d5:	and    BYTE PTR [esi-0x18],dl
  40b7d8:	and    BYTE PTR [ebx+0x1d],ch
  40b7db:	jmp    0x5b64:0xbc10282b
  40b7e2:	enter  0x7226,0x5c
  40b7e6:	inc    esp
  40b7e7:	dec    eax
  40b7e8:	shl    ebx,0xd0
  40b7eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7ec:	mov    bh,0xaf
  40b7ee:	nop
  40b7ef:	cmp    esp,ecx
  40b7f1:	ins    DWORD PTR es:[edi],dx
  40b7f2:	cmp    ah,BYTE PTR ss:[ecx]
  40b7f5:	jg     0x40b78a
  40b7f7:	jmp    0x40b834
  40b7f9:	xchg   edx,eax
  40b7fa:	aas    
  40b7fb:	push   ebp
  40b7fc:	mov    dl,0x6
  40b7fe:	pop    esi
  40b7ff:	jns    0x40b87d
  40b801:	(bad)  
  40b802:	jno    0x40b80f
  40b804:	inc    ecx
  40b805:	adc    bh,BYTE PTR [esi+0x7]
  40b808:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  40b80a:	lahf   
  40b80b:	mov    ebx,eax
  40b80d:	ret    0x2c53
  40b810:	cmc    
  40b811:	popf   
  40b812:	push   0x1b7d4f89
  40b817:	out    0xe0,eax
  40b819:	rol    DWORD PTR [esi-0x4a6f4f35],cl
  40b81f:	fisubr DWORD PTR [ebx]
  40b821:	xchg   edx,eax
  40b822:	jl     0x40b82a
  40b824:	jecxz  0x40b89d
  40b826:	(bad)  
  40b829:	icebp  
  40b82a:	test   BYTE PTR [esi+ebp*2],0x80
  40b82e:	clc    
  40b82f:	xlat   BYTE PTR ds:[ebx]
  40b830:	pop    ebp
  40b831:	jnp    0x40b88a
  40b833:	je     0x40b842
  40b835:	xchg   cl,cl
  40b837:	pop    esi
  40b838:	xchg   esi,eax
  40b839:	sbb    ebx,DWORD PTR [eax]
  40b83b:	dec    edi
  40b83c:	inc    eax
  40b83d:	and    BYTE PTR [esi+0x79],dh
  40b840:	jg     0x40b87d
  40b842:	jbe    0x40b828
  40b844:	jmp    0x636b:0xb8c7e7b9
  40b84b:	push   ebp
  40b84c:	jnp    0x40b891
  40b84e:	sub    ch,BYTE PTR [edi]
  40b850:	fistp  DWORD PTR [ecx+0x78]
  40b853:	(bad)  
  40b855:	and    esi,eax
  40b857:	add    edx,DWORD PTR [ebp-0x5e16b4ed]
  40b85d:	dec    edx
  40b85e:	inc    ebp
  40b85f:	sub    DWORD PTR [ebp+eiz*1+0x37],esp
  40b863:	addr16 loope 0x40b7fd
  40b866:	sub    ecx,DWORD PTR [ecx+0x20]
  40b869:	sbb    bh,BYTE PTR [ebx+ebx*8]
  40b86c:	xchg   edi,eax
  40b86d:	cmp    edi,DWORD PTR [esi-0x1f]
  40b870:	gs rcr edx,1
  40b873:	je     0x40b846
  40b875:	sbb    dl,BYTE PTR [ebx-0x4c]
  40b878:	jb     0x40b855
  40b87a:	mov    ebp,0x58d28d9e
  40b87f:	mov    BYTE PTR [edi*1+0x6e08ed51],bh
  40b886:	test   eax,0x88e89ad6
  40b88b:	inc    esi
  40b88c:	dec    ebp
  40b88d:	cmp    BYTE PTR [ebx],cl
  40b88f:	mov    al,0xe8
  40b891:	popf   
  40b892:	ror    dh,cl
  40b894:	(bad)  
  40b895:	ds xor eax,0xe764eed7
  40b89b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b89c:	xor    BYTE PTR [ebx],dl
  40b89e:	int3   
  40b89f:	push   ebx
  40b8a0:	retf   0x5462
  40b8a3:	add    DWORD PTR [edx],edi
  40b8a5:	cmc    
  40b8a6:	push   ds
  40b8a7:	aam    0x42
  40b8a9:	and    al,0x9f
  40b8ab:	cmp    cl,BYTE PTR [edx+0x1872c328]
  40b8b1:	retf   0x6037
  40b8b4:	repz aas 
  40b8b6:	in     al,0x2c
  40b8b8:	add    DWORD PTR [ebx+0x10],ebp
  40b8bb:	xchg   DWORD PTR [ecx+0x28],edx
  40b8be:	dec    ecx
  40b8bf:	outs   dx,BYTE PTR ds:[esi]
  40b8c0:	inc    ebx
  40b8c1:	sbb    DWORD PTR [eax+0x49],0xffffffd4
  40b8c5:	fstp   DWORD PTR ds:0x629fc33f
  40b8cb:	mov    edi,0x6782abe8
  40b8d0:	nop
  40b8d1:	repnz fdivr st,st(7)
  40b8d4:	je     0x40b8e0
  40b8d6:	mov    eax,ds:0xace09694
  40b8db:	clc    
  40b8dc:	mov    al,0x62
  40b8de:	ret    0x98e5
  40b8e1:	sahf   
  40b8e2:	xchg   edi,eax
  40b8e3:	sbb    al,0x7
  40b8e5:	repnz add al,dh
  40b8e8:	out    0xef,eax
  40b8ea:	pop    ecx
  40b8eb:	push   edi
  40b8ec:	dec    ecx
  40b8ed:	leave  
  40b8ee:	loopne 0x40b965
  40b8f0:	popa   
  40b8f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8f2:	mov    ebp,0x55ac16bb
  40b8f7:	fs aaa 
  40b8f9:	dec    eax
  40b8fa:	aam    0xc2
  40b8fc:	(bad)  
  40b8fd:	rcr    DWORD PTR [esi+0x9407275],cl
  40b903:	out    0x8c,al
  40b905:	mov    bl,0x55
  40b907:	cmp    al,0xc3
  40b909:	pop    esi
  40b90a:	(bad)  
  40b90b:	shl    DWORD PTR [ecx+0x67bc6cd3],cl
  40b911:	imul   ebp,eax,0xbd20b762
  40b917:	push   0xfeec02a
  40b91c:	int3   
  40b91d:	lods   al,BYTE PTR ds:[esi]
  40b91e:	pop    edx
  40b91f:	push   esp
  40b920:	inc    ebx
  40b921:	aam    0xbc
  40b923:	test   al,0x82
  40b925:	adc    ecx,DWORD PTR [edi]
  40b927:	cli    
  40b928:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b929:	mov    ds:0xe04d4698,eax
  40b92e:	call   0x8516:0x9d776a96
  40b935:	inc    edx
  40b936:	jle    0x40b95c
  40b938:	and    eax,0xcf78e755
  40b93d:	enter  0xe985,0xa0
  40b941:	mov    DWORD PTR ds:0x18920eee,ebx
  40b947:	push   ecx
  40b948:	cs inc ecx
  40b94a:	mov    ebx,0xe88541e6
  40b94f:	jns    0x40b9a8
  40b951:	push   edi
  40b952:	out    0x31,al
  40b954:	sbb    BYTE PTR [ebx+0x2c],ah
  40b957:	push   0x8e57e3e7
  40b95c:	arpl   WORD PTR [edi-0x28],sp
  40b95f:	stc    
  40b960:	je     0x40b95b
  40b962:	ret    
  40b963:	lods   eax,DWORD PTR ds:[esi]
  40b964:	call   0x7017:0x47f5d1ee
  40b96b:	nop
  40b96c:	jmp    0x91fbc46d
  40b971:	outs   dx,DWORD PTR ds:[esi]
  40b972:	loopne 0x40b9a6
  40b974:	push   cs
  40b975:	pop    edx
  40b976:	and    BYTE PTR [edx+eiz*1-0x61],ah
  40b97a:	addr16 adc al,0x91
  40b97d:	cdq    
  40b97e:	inc    ebp
  40b97f:	sub    eax,eax
  40b981:	and    edi,0x7e23ac95
  40b987:	and    ebx,ebx
  40b989:	int3   
  40b98a:	jmp    0x1c1a:0x1124e303
  40b991:	cmp    eax,0x9d4e10ee
  40b996:	xor    esi,DWORD PTR [edx]
  40b998:	in     al,dx
  40b999:	inc    ebx
  40b99a:	mov    eax,0x865136da
  40b99f:	jnp    0x40b9a8
  40b9a1:	or     DWORD PTR [ebp-0xb],0x154016cd
  40b9a8:	cmc    
  40b9a9:	je     0x40ba27
  40b9ab:	bound  esi,QWORD PTR [ecx+0x72]
  40b9ae:	mov    al,ds:0x9cc99706
  40b9b3:	inc    ecx
  40b9b4:	xchg   esp,eax
  40b9b5:	ss push cs
  40b9b7:	sub    DWORD PTR [eax],edi
  40b9b9:	jae    0x40b99b
  40b9bb:	imul   eax,DWORD PTR [ebx-0x70],0x5
  40b9bf:	or     al,BYTE PTR [edi-0x48092b22]
  40b9c5:	pushf  
  40b9c6:	aas    
  40b9c7:	dec    ebx
  40b9c8:	or     al,0x49
  40b9ca:	xor    eax,0x10848866
  40b9cf:	mov    dl,0xa2
  40b9d1:	jo     0x40ba3c
  40b9d3:	cmp    eax,eax
  40b9d5:	adc    al,0x60
  40b9d7:	pop    ebx
  40b9d8:	ja     0x40ba4c
  40b9da:	imul   esi,eax,0xffffffe3
  40b9dd:	fadd   QWORD PTR [ecx+0x9]
  40b9e0:	test   BYTE PTR [ebp*2+0x248ec7aa],0x5f
  40b9e8:	inc    DWORD PTR [ebx]
  40b9ea:	xchg   esi,eax
  40b9eb:	pop    esi
  40b9ec:	xchg   ecx,eax
  40b9ed:	cmp    dl,BYTE PTR [edx-0x76]
  40b9f0:	sar    BYTE PTR [edi-0x6f],0xc3
  40b9f4:	push   ecx
  40b9f5:	push   0xffffffdc
  40b9f7:	mov    ds,WORD PTR [ebx]
  40b9f9:	test   DWORD PTR [eax],ebx
  40b9fb:	ins    BYTE PTR es:[edi],dx
  40b9fc:	(bad)
  40b9ff:	and    edi,edx
  40ba01:	gs mov eax,0x70ea36af
  40ba07:	xchg   edi,eax
  40ba08:	cmp    esi,DWORD PTR [ecx+0x3dc3a921]
  40ba0e:	lock call 0xcf0:0xee9c7230
  40ba16:	into   
  40ba17:	js     0x40ba80
  40ba19:	cmc    
  40ba1a:	daa    
  40ba1b:	dec    esp
  40ba1c:	lods   eax,DWORD PTR ds:[esi]
  40ba1d:	and    eax,0x81915589
  40ba22:	sbb    esp,edi
  40ba24:	addr16 popf 
  40ba26:	mov    bh,0x6
  40ba28:	mov    esp,0xe568aba
  40ba2d:	push   esp
  40ba2e:	std    
  40ba2f:	out    0xfa,al
  40ba31:	into   
  40ba32:	fst    DWORD PTR [ecx+0x7e20afe7]
  40ba38:	mov    edi,0x3096a61d
  40ba3d:	add    al,0x98
  40ba3f:	xor    edi,esp
  40ba41:	popf   
  40ba42:	jmp    0xc96a:0x216f1d87
  40ba49:	push   edi
  40ba4a:	push   esp
  40ba4b:	pop    ebx
  40ba4c:	fist   DWORD PTR ss:[esi]
  40ba4f:	std    
  40ba50:	leave  
  40ba51:	pop    es
  40ba52:	sbb    ah,BYTE PTR [edi]
  40ba54:	arpl   WORD PTR [ecx],di
  40ba56:	sbb    DWORD PTR [ebx],edx
  40ba58:	jg     0x40babe
  40ba5a:	xlat   BYTE PTR ds:[ebx]
  40ba5b:	bound  edx,QWORD PTR [esi+ebx*8+0x40]
  40ba5f:	stos   BYTE PTR es:[edi],al
  40ba60:	and    BYTE PTR [ebp-0x10],cl
  40ba63:	int    0xa7
  40ba65:	cmp    DWORD PTR [ebp-0x40abd42e],0xf21d66af
  40ba6f:	or     cl,dh
  40ba71:	xchg   ecx,eax
  40ba72:	add    esi,DWORD PTR [edi-0x69fa5f6b]
  40ba78:	xchg   BYTE PTR [edx],ah
  40ba7a:	adc    edx,edx
  40ba7c:	xchg   esi,eax
  40ba7d:	push   edi
  40ba7e:	ins    DWORD PTR es:[edi],dx
  40ba7f:	sbb    al,BYTE PTR [eax-0x6af37dd1]
  40ba85:	jmp    0x50b65d8f
  40ba8a:	push   ds
  40ba8b:	sti    
  40ba8c:	xlat   BYTE PTR ds:[ebx]
  40ba8d:	aas    
  40ba8e:	mov    BYTE PTR [edi-0x46],cl
  40ba91:	loop   0x40bac9
  40ba93:	sbb    eax,DWORD PTR [ebx*8-0x55061ec2]
  40ba9a:	xor    BYTE PTR [eax-0x8],dl
  40ba9d:	jge    0x40bafb
  40ba9f:	push   ebp
  40baa0:	adc    ah,BYTE PTR [ebp+0x59]
  40baa3:	in     eax,dx
  40baa4:	fwait
  40baa5:	push   esi
  40baa6:	and    dh,bl
  40baa8:	push   ebp
  40baa9:	mov    DWORD PTR [ebp-0x4],0x61c2
  40bab0:	mov    eax,DWORD PTR [ebp-0x4]
  40bab3:	mov    ecx,DWORD PTR [ebp-0x8]
  40bab6:	add    eax,0x1ca5
  40babb:	or     eax,ecx
  40babd:	mov    ecx,DWORD PTR ds:0x422738
  40bac3:	lea    eax,[eax+ecx*1-0x7eef]
  40baca:	mov    DWORD PTR [ebp-0x5c],eax
  40bacd:	mov    DWORD PTR [ebp-0x4],0x8ea
  40bad4:	mov    DWORD PTR [ebp-0x8],0x5759
  40badb:	mov    eax,DWORD PTR [ebp-0x8]
  40bade:	mov    ecx,DWORD PTR [ebp-0x4]
  40bae1:	and    eax,0x27f6
  40bae6:	xor    eax,ecx
  40bae8:	mov    ecx,DWORD PTR ds:0x42286c
  40baee:	imul   eax,eax,0x18
  40baf1:	xor    eax,0x17970
  40baf6:	lea    eax,[ebp+eax*1-0x54]
  40bafa:	mov    DWORD PTR [eax],ecx
  40bafc:	jmp    0x40bf07
  40bb01:	retf   0xf4e7
  40bb04:	leave  
  40bb05:	hlt    
  40bb06:	fsincos 
  40bb08:	out    0xad,eax
  40bb0a:	and    dl,BYTE PTR [edx-0x62]
  40bb0d:	sub    al,0x6d
  40bb0f:	lods   al,BYTE PTR ds:[esi]
  40bb10:	jecxz  0x40bb80
  40bb12:	mov    edi,0xc492bebe
  40bb17:	mov    esi,0x74b89dbe
  40bb1c:	xchg   edx,eax
  40bb1d:	(bad)  
  40bb1e:	inc    esp
  40bb1f:	and    bl,BYTE PTR [ebx-0x72]
  40bb22:	jle    0x40bb52
  40bb24:	xor    al,0x6d
  40bb26:	clc    
  40bb27:	xchg   esi,eax
  40bb28:	les    ebx,FWORD PTR [eax]
  40bb2a:	xchg   esp,eax
  40bb2b:	mov    cl,0x20
  40bb2d:	inc    ecx
  40bb2e:	leave  
  40bb2f:	cmp    cl,BYTE PTR ds:0xb26f7b0b
  40bb35:	mov    eax,0xd695a065
  40bb3a:	dec    ebp
  40bb3b:	aas    
  40bb3c:	pop    ebp
  40bb3d:	jmp    0x40bb31
  40bb3f:	add    DWORD PTR [ebp+0x22],ecx
  40bb42:	xlat   BYTE PTR ds:[ebx]
  40bb43:	(bad)  
  40bb44:	(bad)  
  40bb45:	call   0x358cf3a2
  40bb4a:	push   ebx
  40bb4b:	push   eax
  40bb4c:	or     DWORD PTR [ecx-0x7d182099],esp
  40bb52:	(bad)  [edx-0x472deb60]
  40bb58:	mov    ebx,0x7d5b35f9
  40bb5d:	rcl    BYTE PTR [esp+eax*4-0x56],cl
  40bb61:	sub    bh,BYTE PTR [eax+0x7f]
  40bb64:	pusha  
  40bb65:	xchg   esp,eax
  40bb66:	mov    cl,0x55
  40bb68:	jnp    0x40bb4f
  40bb6a:	jbe    0x40bb74
  40bb6c:	adc    DWORD PTR [ecx-0x6d],edx
  40bb6f:	sti    
  40bb70:	add    ebp,DWORD PTR [esi+0x54]
  40bb73:	mov    ch,0x1c
  40bb75:	jecxz  0x40bb18
  40bb77:	xchg   eax,ebx
  40bb79:	add    esp,DWORD PTR [eax+ebx*1-0x1a]
  40bb7d:	sbb    BYTE PTR [esi],bh
  40bb7f:	iret   
  40bb80:	pop    edi
  40bb81:	adc    al,0xd0
  40bb83:	inc    esp
  40bb84:	les    ebx,FWORD PTR [ebp-0x22]
  40bb87:	imul   eax,DWORD PTR [eax-0x7b2f7c8b],0x6fedbd5
  40bb91:	fsubr  DWORD PTR [esi]
  40bb93:	pop    ss
  40bb94:	push   ecx
  40bb95:	add    al,ch
  40bb97:	mul    BYTE PTR [eax+ebp*2-0x5ca73456]
  40bb9e:	shl    DWORD PTR [edx+0x16],0xf4
  40bba2:	cmp    al,BYTE PTR [ecx+0x7b]
  40bba5:	pop    es
  40bba6:	mov    dl,0x4
  40bba8:	dec    edx
  40bba9:	mov    ebp,0x5f3125d
  40bbae:	push   0xac523eae
  40bbb3:	cmp    al,0x3
  40bbb5:	call   0x49f3:0xe15d6640
  40bbbc:	lahf   
  40bbbd:	push   ebp
  40bbbe:	jmp    0x791d34ba
  40bbc3:	cld    
  40bbc4:	les    edi,FWORD PTR [edx]
  40bbc6:	les    esi,FWORD PTR [ecx+esi*2]
  40bbc9:	nop
  40bbca:	cdq    
  40bbcb:	stos   BYTE PTR es:[edi],al
  40bbcc:	push   es
  40bbcd:	or     esp,esp
  40bbcf:	mov    esp,ss
  40bbd1:	xor    DWORD PTR [eax],0xa2fa9ccd
  40bbd7:	inc    edx
  40bbd8:	mov    al,0x2
  40bbda:	xchg   edx,eax
  40bbdb:	fwait
  40bbdc:	inc    esi
  40bbdd:	fisubr WORD PTR [eax-0x60]
  40bbe0:	push   gs
  40bbe2:	mov    ?,edi
  40bbe4:	imul   esp,esp,0xffffffe0
  40bbe7:	dec    esi
  40bbe8:	push   ds
  40bbe9:	pop    ds
  40bbea:	xchg   ebx,eax
  40bbeb:	mov    edi,0x4309c950
  40bbf0:	or     dh,BYTE PTR [ecx-0x33]
  40bbf3:	xor    esi,eax
  40bbf5:	jmp    0x6044:0x1ba5084
  40bbfc:	out    dx,eax
  40bbfd:	and    BYTE PTR [ecx-0xe14cbc1],0xd9
  40bc04:	repnz sar DWORD PTR [ecx+0x22],0x26
  40bc09:	pusha  
  40bc0a:	xchg   esi,eax
  40bc0b:	call   0x88:0xe356f316
  40bc12:	inc    edx
  40bc13:	jbe    0x40bb99
  40bc15:	mov    ?,WORD PTR [ebx+0x40f7ac27]
  40bc1b:	arpl   di,dx
  40bc1d:	daa    
  40bc1e:	out    0xe3,eax
  40bc20:	lahf   
  40bc21:	std    
  40bc22:	call   FWORD PTR [eax-0x27db6e17]
  40bc28:	mov    bh,0xdd
  40bc2a:	dec    edi
  40bc2b:	and    eax,0xef517e21
  40bc30:	ja     0x40bbf4
  40bc32:	aad    0x3b
  40bc34:	and    esi,edx
  40bc36:	xor    BYTE PTR [edx+eiz*8],al
  40bc39:	mov    al,ds:0x551969bd
  40bc3e:	jge    0x40bc9e
  40bc40:	fistp  QWORD PTR [ebx+0xd]
  40bc43:	stos   DWORD PTR es:[edi],eax
  40bc44:	push   ebp
  40bc45:	cmp    al,0xf
  40bc47:	iret   
  40bc48:	gs leave 
  40bc4a:	in     al,0x6c
  40bc4c:	sbb    ebx,DWORD PTR [edx+0x3b]
  40bc4f:	and    eax,DWORD PTR [ebx+esi*2]
  40bc52:	ins    BYTE PTR es:[edi],dx
  40bc53:	js     0x40bc08
  40bc55:	and    BYTE PTR [edi+ecx*8+0x40],0x15
  40bc5a:	pop    esi
  40bc5b:	dec    ebp
  40bc5c:	or     edx,ebp
  40bc5e:	stc    
  40bc5f:	push   es
  40bc60:	fwait
  40bc61:	(bad)  
  40bc62:	sub    DWORD PTR [ebx+ebx*4-0x4931dd6e],ebx
  40bc69:	mov    eax,ds:0x9ddbe7a8
  40bc6e:	xchg   edx,eax
  40bc6f:	test   eax,0xd5a07e0c
  40bc74:	or     DWORD PTR [esi+0x5d],esp
  40bc77:	test   al,0xa6
  40bc79:	xor    ah,BYTE PTR [esi-0x7a]
  40bc7c:	mov    edx,0x4a3a480e
  40bc81:	imul   edx,esp,0x19
  40bc84:	cmp    BYTE PTR ds:0xef6ae492,bh
  40bc8a:	shr    BYTE PTR [edx-0x3bccc074],cl
  40bc90:	dec    edx
  40bc91:	mov    ds:0x9a5f2cc1,al
  40bc96:	(bad)  
  40bc97:	aaa    
  40bc98:	popa   
  40bc99:	das    
  40bc9a:	fs dec ecx
  40bc9c:	mov    edi,0xeaca033b
  40bca1:	imul   ebx,ebp,0x7b
  40bca4:	test   al,0x3e
  40bca6:	mov    gs,ebx
  40bca8:	aad    0xf9
  40bcaa:	stos   BYTE PTR es:[edi],al
  40bcab:	mov    dh,0x86
  40bcad:	cmp    edx,DWORD PTR [eax+0x5ba38f2e]
  40bcb3:	jl     0x40bc97
  40bcb5:	leave  
  40bcb6:	loopne 0x40bc78
  40bcb8:	neg    BYTE PTR [ecx+0x7e]
  40bcbb:	ret    
  40bcbc:	(bad)  
  40bcbd:	fcmove st,st(4)
  40bcbf:	out    dx,al
  40bcc0:	ds inc esp
  40bcc2:	test   eax,0x175ac7dd
  40bcc7:	fwait
  40bcc8:	adc    ecx,eax
  40bcca:	in     eax,0xc0
  40bccc:	and    dl,ah
  40bcce:	(bad)  
  40bccf:	adc    ah,BYTE PTR [eax-0x61d2fb44]
  40bcd5:	sub    eax,0x6b079630
  40bcda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bcdb:	in     eax,dx
  40bcdc:	sub    al,0x5
  40bcde:	inc    ebx
  40bcdf:	test   eax,0x1361f3c4
  40bce4:	stc    
  40bce5:	inc    ebp
  40bce6:	cwde   
  40bce7:	cwde   
  40bce8:	stc    
  40bce9:	xchg   ebp,eax
  40bcea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bceb:	pusha  
  40bcec:	inc    eax
  40bced:	add    eax,0x11c8a5d5
  40bcf2:	(bad)  
  40bcf3:	cmp    BYTE PTR [ecx-0x6b],bh
  40bcf6:	sar    eax,cl
  40bcf8:	test   cl,dl
  40bcfa:	xor    DWORD PTR [edx+0x59],0xa410895f
  40bd01:	stos   DWORD PTR es:[edi],eax
  40bd02:	ret    0x70c1
  40bd05:	hlt    
  40bd06:	sbb    eax,0x92f712cf
  40bd0b:	les    eax,FWORD PTR [ecx+0x625a7a20]
  40bd11:	mov    dh,0xcf
  40bd13:	test   DWORD PTR [ecx+0x16],0xf1345195
  40bd1a:	push   cs
  40bd1b:	mov    al,ds:0xbf2b12b7
  40bd20:	xor    al,0x1c
  40bd22:	xchg   esp,eax
  40bd23:	loopne 0x40bcac
  40bd25:	(bad)  
  40bd26:	xchg   esi,eax
  40bd27:	jl     0x40bd68
  40bd29:	and    eax,eax
  40bd2b:	mov    edx,0xf8298138
  40bd30:	jmp    0xa86f0ec9
  40bd35:	cmp    esp,ebx
  40bd37:	sub    bh,BYTE PTR [ebx+ecx*4+0x44bfc56e]
  40bd3e:	dec    eax
  40bd3f:	push   edi
  40bd40:	imul   edx,DWORD PTR [eax-0x2e45eb86],0x5f
  40bd47:	les    ebx,FWORD PTR [ebx+0x4c52c0ba]
  40bd4d:	sbb    al,0xb5
  40bd4f:	pop    esi
  40bd50:	ja     0x40bd6b
  40bd52:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40bd54:	ret    0x61c1
  40bd57:	nop
  40bd58:	out    dx,al
  40bd59:	push   eax
  40bd5a:	mov    ecx,esp
  40bd5c:	pop    es
  40bd5d:	pop    ds
  40bd5e:	mov    esi,0xf55ba4ae
  40bd63:	push   edi
  40bd64:	add    dl,BYTE PTR [edx]
  40bd66:	xchg   BYTE PTR [esp+eiz*8],dl
  40bd69:	ror    BYTE PTR ss:[ebx-0x3d229ffc],0x9b
  40bd71:	sbb    eax,DWORD PTR [ebx-0x107032ec]
  40bd77:	pop    ss
  40bd78:	cmp    edx,DWORD PTR [eax-0x1bf0df57]
  40bd7e:	push   ecx
  40bd7f:	adc    al,0x6e
  40bd81:	sar    BYTE PTR [edx+0x287af4ef],cl
  40bd87:	in     al,dx
  40bd88:	stos   BYTE PTR es:[edi],al
  40bd89:	sub    al,0x65
  40bd8b:	dec    eax
  40bd8c:	and    esi,edi
  40bd8e:	int    0xd7
  40bd90:	sub    BYTE PTR [edx+0x29],ch
  40bd93:	enter  0x5c53,0x2f
  40bd97:	retf   
  40bd98:	fldz   
  40bd9a:	test   al,0xcb
  40bd9c:	mov    ecx,0x2e404112
  40bda1:	cmp    eax,0x80c97007
  40bda6:	mov    dl,0x6e
  40bda8:	hlt    
  40bda9:	adc    BYTE PTR [esp+eiz*2],cl
  40bdac:	pop    ebx
  40bdad:	inc    ecx
  40bdae:	in     al,0x5c
  40bdb0:	(bad)  
  40bdb1:	and    al,0x74
  40bdb3:	repz jmp 0x42107859
  40bdb9:	add    DWORD PTR [esi-0x651d184c],eax
  40bdbf:	das    
  40bdc0:	clc    
  40bdc1:	shl    BYTE PTR [ecx+0x48],1
  40bdc4:	add    al,0x4c
  40bdc6:	nop
  40bdc7:	lahf   
  40bdc8:	lds    edx,FWORD PTR [eax+0x7]
  40bdcb:	loope  0x40bd50
  40bdcd:	add    al,0x1f
  40bdcf:	loopne 0x40bd83
  40bdd1:	or     ebx,DWORD PTR [ecx+ebp*1]
  40bdd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bdd5:	fdivp  st(7),st
  40bdd7:	inc    edi
  40bdd8:	dec    ebx
  40bdd9:	or     dl,BYTE PTR [esi+0x19]
  40bddc:	jae    0x40bdce
  40bdde:	mov    esp,0x4b2391ab
  40bde3:	mov    al,ds:0x81089561
  40bde8:	and    dh,bh
  40bdea:	sbb    edx,DWORD PTR ds:0x871108c2
  40bdf0:	fcomp  QWORD PTR [ecx]
  40bdf2:	xchg   edi,eax
  40bdf3:	lds    esi,FWORD PTR [edi]
  40bdf5:	add    ebp,DWORD PTR [ebp+0x79]
  40bdf8:	mov    ch,BYTE PTR [edx+0x79a3112f]
  40bdfe:	mov    cl,dh
  40be00:	stos   DWORD PTR es:[edi],eax
  40be01:	aas    
  40be02:	fcmovnb st,st(2)
  40be04:	mov    ah,0x33
  40be06:	jno    0x40bdfb
  40be08:	rol    al,cl
  40be0a:	pop    es
  40be0b:	push   0xb63f1685
  40be10:	clc    
  40be11:	push   eax
  40be12:	push   ds
  40be13:	mov    dh,BYTE PTR [ecx+esi*4-0x535cccb7]
  40be1a:	retf   
  40be1b:	add    edi,DWORD PTR [esi]
  40be1d:	mov    al,ds:0x137aaea0
  40be22:	imul   esi,DWORD PTR ss:[esi-0x74],0x8d7336f4
  40be2a:	mov    dh,0x9c
  40be2c:	or     DWORD PTR [ebx-0x50094119],ebp
  40be32:	adc    esi,DWORD PTR [eax+0x7e]
  40be35:	fisub  WORD PTR [edi+0x11267b31]
  40be3b:	mov    WORD PTR [esi],ss
  40be3d:	stos   DWORD PTR es:[edi],eax
  40be3e:	mov    ecx,0xa707e305
  40be43:	aaa    
  40be44:	inc    ecx
  40be45:	xchg   esi,eax
  40be46:	sbb    ch,BYTE PTR [ebx]
  40be48:	cmp    al,0xf5
  40be4a:	adc    al,ah
  40be4c:	(bad)  
  40be4e:	sbb    edx,DWORD PTR [ebp+0x13]
  40be51:	adc    DWORD PTR [eax],0x46a664d4
  40be57:	icebp  
  40be58:	mov    bl,0x9f
  40be5a:	add    bh,dl
  40be5c:	loope  0x40be7e
  40be5e:	paddusw mm0,QWORD PTR [edx]
  40be61:	push   esi
  40be62:	xchg   edx,eax
  40be63:	dec    edi
  40be64:	fwait
  40be65:	pop    ebp
  40be66:	cdq    
  40be67:	in     al,dx
  40be68:	(bad)  
  40be6a:	push   cs
  40be6b:	gs xchg edi,eax
  40be6d:	pop    ebp
  40be6e:	ja     0x40be7e
  40be70:	enter  0xe377,0x68
  40be74:	ss dec edi
  40be76:	shr    esi,1
  40be78:	les    ecx,FWORD PTR [ecx-0x5a4f0b85]
  40be7e:	fbld   TBYTE PTR [ecx]
  40be80:	into   
  40be81:	ins    BYTE PTR es:[edi],dx
  40be82:	adc    DWORD PTR ds:0x774f336e,esp
  40be88:	cmc    
  40be89:	jp     0x40bebc
  40be8b:	mov    bl,0xb6
  40be8d:	push   cs
  40be8e:	clc    
  40be8f:	inc    ebx
  40be90:	dec    edi
  40be91:	lock push cs
  40be93:	sti    
  40be94:	add    al,0x9
  40be96:	push   0x78
  40be98:	add    esp,DWORD PTR [edx+0x3b]
  40be9b:	push   0xda371f92
  40bea0:	dec    ecx
  40bea1:	(bad)
  40bea5:	cmc    
  40bea6:	leave  
  40bea7:	jle    0x40be62
  40bea9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40beaa:	mov    ch,0x2d
  40beac:	mov    dl,0x1
  40beae:	popa   
  40beaf:	dec    eax
  40beb0:	(bad)  
  40beb1:	fisubr WORD PTR [ebx]
  40beb3:	mov    edi,0xa175b4e7
  40beb8:	cmp    DWORD PTR [eax],edx
  40beba:	mov    edx,0xdf630e8d
  40bebf:	mov    ds:0x47de0002,eax
  40bec4:	inc    eax
  40bec5:	sub    al,0x32
  40bec7:	or     al,0xa1
  40bec9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40beca:	sub    DWORD PTR [eax],eax
  40becc:	imul   esi,DWORD PTR [ebx+0x79],0x2b
  40bed0:	and    BYTE PTR [ebx+0xa1e99a],al
  40bed6:	out    0x67,eax
  40bed8:	and    ah,al
  40beda:	loop   0x40bf58
  40bedc:	fwait
  40bedd:	pop    edi
  40bede:	xchg   ecx,eax
  40bedf:	mov    ebp,0x447d2373
  40bee4:	js     0x40bf44
  40bee6:	les    edx,FWORD PTR [esi-0x44]
  40bee9:	clc    
  40beea:	loop   0x40befb
  40beec:	adc    BYTE PTR [ecx-0x65],dl
  40beef:	pushf  
  40bef0:	cmp    al,0x7c
  40bef2:	inc    edi
  40bef3:	shl    BYTE PTR ss:[ecx-0x3f2e68be],cl
  40befa:	jle    0x40bf31
  40befc:	sub    al,0x72
  40befe:	test   BYTE PTR [esi],dl
  40bf00:	loope  0x40bf27
  40bf02:	add    al,0xa1
  40bf04:	in     eax,dx
  40bf05:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  40bf07:	mov    DWORD PTR [ebp-0x4],0x7584
  40bf0e:	mov    DWORD PTR [ebp-0x8],0x7c9f
  40bf15:	mov    eax,DWORD PTR [ebp-0x8]
  40bf18:	xor    edx,edx
  40bf1a:	push   0x3
  40bf1c:	pop    ecx
  40bf1d:	div    ecx
  40bf1f:	mov    ecx,DWORD PTR [ebp-0x4]
  40bf22:	xor    edx,edx
  40bf24:	push   0x2
  40bf26:	add    eax,0x14d3
  40bf2b:	and    eax,ecx
  40bf2d:	mov    ecx,0x6404
  40bf32:	sub    ecx,eax
  40bf34:	mov    DWORD PTR [ebp-0x74],ecx
  40bf37:	mov    DWORD PTR [ebp-0xc],0x13b5
  40bf3e:	mov    DWORD PTR [ebp-0x8],0x2e54
  40bf45:	mov    DWORD PTR [ebp-0x4],0x2f11
  40bf4c:	mov    eax,DWORD PTR [ebp-0x8]
  40bf4f:	mov    ecx,DWORD PTR [ebp-0x4]
  40bf52:	jmp    0x40c35d
  40bf57:	std    
  40bf58:	jno    0x40bf52
  40bf5a:	dec    ecx
  40bf5b:	mov    esp,0x32b9b44c
  40bf60:	rcr    DWORD PTR [esi-0x5958b270],1
  40bf66:	jecxz  0x40bfaa
  40bf68:	(bad)  
  40bf69:	mov    esi,0xbec492be
  40bf6e:	mov    esi,0x926c51d5
  40bf73:	mov    ecx,0x16bdcdc0
  40bf78:	mov    dl,0xd8
  40bf7a:	inc    esp
  40bf7b:	inc    eax
  40bf7c:	fwait
  40bf7d:	add    bh,BYTE PTR ds:0xee7ae554
  40bf83:	int    0x62
  40bf85:	(bad)  
  40bf86:	lds    edi,FWORD PTR [ecx+0x77]
  40bf89:	(bad)  
  40bf8a:	mov    dl,0x25
  40bf8c:	jmp    0x2817:0xb8fa4877
  40bf93:	xchg   ebx,eax
  40bf94:	aam    0xf0
  40bf96:	call   FWORD PTR ds:0xb8052455
  40bf9c:	cmc    
  40bf9d:	and    BYTE PTR [ebp+0x65],al
  40bfa0:	idiv   ah
  40bfa2:	fiadd  WORD PTR fs:[ebx+0x21b05d92]
  40bfa9:	retf   
  40bfaa:	cli    
  40bfab:	push   0xdfb052f9
  40bfb0:	fsubr  DWORD PTR [ebx]
  40bfb2:	stc    
  40bfb3:	jg     0x40bf42
  40bfb5:	xor    eax,0xdb65549c
  40bfba:	sub    eax,edx
  40bfbc:	lods   al,BYTE PTR ds:[esi]
  40bfbd:	loop   0x40bf87
  40bfbf:	lea    ecx,[edx]
  40bfc1:	and    DWORD PTR [edx],edi
  40bfc3:	aad    0x21
  40bfc5:	mov    dh,0xf1
  40bfc7:	or     DWORD PTR [ebx],esp
  40bfc9:	ret    0xa307
  40bfcc:	mov    esi,0x97ab7a3
  40bfd1:	push   0x98a5881d
  40bfd6:	pushf  
  40bfd7:	mov    ebp,0xb1d87f05
  40bfdc:	cwde   
  40bfdd:	mov    dh,0xd7
  40bfdf:	mov    BYTE PTR [esi],ah
  40bfe1:	mov    bh,0x22
  40bfe3:	gs xchg esp,eax
  40bfe5:	dec    edx
  40bfe6:	in     al,0x57
  40bfe8:	rcl    BYTE PTR [ecx+0x30],cl
  40bfeb:	xor    al,0x43
  40bfed:	fldenv [edx]
  40bfef:	xlat   BYTE PTR ds:[ebx]
  40bff0:	loope  0x40c01c
  40bff2:	sub    ebx,ebx
  40bff4:	fcom   DWORD PTR [edi]
  40bff6:	pop    edi
  40bff7:	xor    DWORD PTR [ecx+0x79ebf0e8],ebx
  40bffd:	jl     0x40bf9a
  40bfff:	sub    al,0x4f
  40c001:	rcl    DWORD PTR [ecx+0x43],cl
  40c004:	(bad)  
  40c005:	xchg   esp,eax
  40c006:	ret    0xc0b
  40c009:	bound  esp,QWORD PTR [ebx+0x2e]
  40c00c:	sub    edi,ecx
  40c00e:	(bad)  
  40c00f:	xchg   esi,eax
  40c010:	sub    BYTE PTR [edi+0x5],bh
  40c013:	jae    0x40c038
  40c015:	adc    eax,DWORD PTR [ebx]
  40c017:	push   edi
  40c018:	mov    dl,0xc8
  40c01a:	push   0xfd5c0074
  40c01f:	(bad)  
  40c020:	sar    DWORD PTR [ebp-0x46649db2],1
  40c026:	and    al,0xdc
  40c028:	call   0x926cc598
  40c02d:	int3   
  40c02e:	pop    ebp
  40c02f:	aaa    
  40c030:	lds    edi,FWORD PTR ds:0xfbc3b636
  40c036:	and    eax,0x686fcfa7
  40c03b:	jno    0x40c06d
  40c03d:	xchg   edx,eax
  40c03e:	lea    eax,[edx+0x4]
  40c041:	push   edx
  40c042:	aam    0xca
  40c044:	xchg   ebx,eax
  40c045:	dec    eax
  40c046:	ja     0x40c02e
  40c048:	loopne 0x40c075
  40c04a:	ja     0x40c070
  40c04c:	inc    esi
  40c04d:	fwait
  40c04e:	inc    eax
  40c04f:	push   0x2a
  40c051:	sti    
  40c052:	dec    ecx
  40c053:	scas   al,BYTE PTR es:[edi]
  40c054:	push   0x149f9f92
  40c059:	pop    ss
  40c05a:	arpl   WORD PTR [esi+ecx*4],cx
  40c05d:	int3   
  40c05e:	push   ds
  40c05f:	ret    0xbc91
  40c062:	push   0xffffff9a
  40c064:	aaa    
  40c065:	mov    al,0xf2
  40c067:	ins    BYTE PTR es:[edi],dx
  40c068:	xchg   edx,eax
  40c069:	adc    BYTE PTR [eax+esi*8],bh
  40c06c:	std    
  40c06d:	and    bh,al
  40c06f:	add    DWORD PTR [ecx+0x86b2a42],esi
  40c075:	inc    ecx
  40c076:	mov    eax,DWORD PTR [eax+0x38759f73]
  40c07c:	sub    DWORD PTR [eax-0x47],eax
  40c07f:	pop    eax
  40c080:	pusha  
  40c081:	loopne 0x40c096
  40c083:	or     DWORD PTR [edx-0x61856382],ebp
  40c089:	sbb    edi,DWORD PTR [esi+0x45f90a5b]
  40c08f:	add    ecx,DWORD PTR [ebp+0xa]
  40c092:	rol    edi,0x31
  40c095:	(bad)  
  40c096:	jp     0x40c076
  40c098:	(bad)  
  40c099:	and    eax,0x44ffa65c
  40c09e:	fucom  st(3)
  40c0a0:	cmp    eax,0x88646624
  40c0a5:	ds pushf 
  40c0a7:	out    0x4,al
  40c0a9:	push   0x3d86bb5
  40c0ae:	(bad)  
  40c0af:	popa   
  40c0b0:	xchg   ecx,eax
  40c0b1:	mov    ecx,0x1d399472
  40c0b6:	pop    ebx
  40c0b7:	inc    ebp
  40c0b8:	jnp    0x40c0cf
  40c0ba:	mov    al,ds:0x36b77105
  40c0bf:	sub    eax,0x74e3ecbf
  40c0c4:	(bad)  
  40c0c5:	xlat   BYTE PTR ds:[ebx]
  40c0c6:	sub    BYTE PTR [eax+0x21e2d667],al
  40c0cc:	inc    ecx
  40c0cd:	jg     0x40c0cd
  40c0cf:	or     ecx,DWORD PTR [eax]
  40c0d1:	mov    ch,0xa1
  40c0d3:	cmc    
  40c0d4:	xchg   esi,eax
  40c0d5:	dec    DWORD PTR [edi-0x12]
  40c0d8:	add    DWORD PTR [ebp+0x7f3200d9],ecx
  40c0de:	hlt    
  40c0df:	test   DWORD PTR [eax-0x40],edi
  40c0e2:	push   ecx
  40c0e3:	out    0xe5,al
  40c0e5:	popa   
  40c0e6:	mov    al,ds:0xfd4905ad
  40c0eb:	out    dx,al
  40c0ec:	dec    ecx
  40c0ed:	mov    ds:0x1d9b6642,al
  40c0f2:	stos   DWORD PTR es:[edi],eax
  40c0f3:	mov    al,ds:0xab8c0cec
  40c0f8:	mov    edi,0xdb55aa7c
  40c0fd:	ins    DWORD PTR es:[edi],dx
  40c0fe:	sar    DWORD PTR [ebx],cl
  40c100:	sahf   
  40c101:	dec    ecx
  40c102:	and    al,0x4
  40c104:	mov    BYTE PTR [eax],bh
  40c106:	pushf  
  40c107:	cdq    
  40c108:	push   cs
  40c109:	repz inc esp
  40c10b:	fsub   st(0),st
  40c10d:	test   DWORD PTR [esi],ebp
  40c10f:	adc    esi,eax
  40c111:	out    0x6d,al
  40c113:	xor    DWORD PTR [esi],edx
  40c115:	xchg   esp,eax
  40c116:	test   DWORD PTR [ecx],esp
  40c118:	mov    ds,WORD PTR [edi+eax*4-0x76]
  40c11c:	xor    BYTE PTR [ebx+0x1a],ch
  40c11f:	test   edi,esi
  40c121:	dec    esi
  40c122:	and    ebp,eax
  40c124:	arpl   WORD PTR [ebp-0x316495cc],bx
  40c12a:	sbb    esi,ebx
  40c12c:	sub    dl,BYTE PTR [edx]
  40c12e:	imul   ebp,esp,0x30
  40c131:	jmp    0x40c10a
  40c133:	fnsave [ecx-0xc]
  40c136:	cld    
  40c137:	fild   WORD PTR [edi+0x7f53464e]
  40c13d:	(bad)  
  40c13e:	adc    DWORD PTR [edi-0x4b0b3193],esp
  40c144:	fidivr WORD PTR [edi-0x27d90d8c]
  40c14a:	out    dx,al
  40c14b:	dec    ecx
  40c14c:	arpl   WORD PTR [eax],ax
  40c14e:	add    ecx,DWORD PTR [ecx-0x4f905aaa]
  40c154:	lock arpl WORD PTR [ebp-0x32cabc3a],bx
  40c15b:	push   edi
  40c15c:	fcom   st(4)
  40c15e:	xchg   edi,eax
  40c15f:	out    dx,al
  40c160:	retf   0x4ab7
  40c163:	ins    BYTE PTR es:[edi],dx
  40c164:	jne    0x40c1c0
  40c166:	repz dec esp
  40c168:	ds xor eax,0xe101d777
  40c16e:	push   esp
  40c16f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c170:	iret   
  40c171:	cwde   
  40c172:	test   al,0x3f
  40c174:	outs   dx,BYTE PTR ds:[esi]
  40c175:	(bad)
  40c178:	outs   dx,DWORD PTR ds:[esi]
  40c179:	add    al,0xb5
  40c17b:	lock sub dh,BYTE PTR [eax]
  40c17e:	into   
  40c17f:	fisub  DWORD PTR [edx+0x14]
  40c182:	daa    
  40c183:	iret   
  40c184:	mov    ecx,0xfd117923
  40c189:	in     al,0x3b
  40c18b:	and    al,0x6b
  40c18d:	call   0x2944:0x25240486
  40c194:	imul   edx,DWORD PTR [ebp+0x18e44553],0xfffffff7
  40c19b:	sub    BYTE PTR [edi+0x7f6757ac],dl
  40c1a1:	cli    
  40c1a2:	imul   ecx,DWORD PTR [eax-0x55a19a8],0x2ee91c33
  40c1ac:	mov    esi,0xcaee1fad
  40c1b1:	dec    esi
  40c1b2:	lea    eax,[ecx]
  40c1b4:	mov    ecx,0x7312c59
  40c1b9:	mov    ebx,0xe7a12358
  40c1be:	cmp    eax,0x2bc737e7
  40c1c3:	push   0x858feb44
  40c1c8:	dec    esp
  40c1c9:	add    DWORD PTR [ebp-0x772f7873],esp
  40c1cf:	(bad)  
  40c1d0:	dec    eax
  40c1d1:	and    al,0xbe
  40c1d3:	mov    eax,0x570483c9
  40c1d8:	jle    0x40c222
  40c1da:	jbe    0x40c241
  40c1dc:	lds    eax,FWORD PTR [edx+0x70e9c4c2]
  40c1e2:	shl    BYTE PTR [edx-0x229c8f26],0xf4
  40c1e9:	pop    es
  40c1ea:	mov    bh,0xeb
  40c1ec:	inc    ebp
  40c1ed:	dec    ebx
  40c1ee:	cwde   
  40c1ef:	call   0xa91477c9
  40c1f4:	stos   DWORD PTR es:[edi],eax
  40c1f5:	sub    DWORD PTR [esp+esi*1+0x727917e2],edi
  40c1fc:	fdivr  QWORD PTR [eax+0x1d]
  40c1ff:	push   es
  40c200:	stos   DWORD PTR es:[edi],eax
  40c201:	mov    esi,0xa7cc8fac
  40c206:	xchg   edi,eax
  40c207:	add    esi,DWORD PTR [edx+0x2e]
  40c20a:	and    cl,0x1a
  40c20d:	mov    dl,0x5a
  40c20f:	cmp    dh,BYTE PTR [esi-0x2d162b6c]
  40c215:	test   eax,0x8d1395e8
  40c21a:	xchg   ebx,eax
  40c21b:	mov    eax,0x1968e1a8
  40c220:	fdivr  QWORD PTR ss:[ebx+ebx*1]
  40c224:	imul   esi,DWORD PTR [ebp-0x45d028d8],0xffffffe2
  40c22b:	(bad)  
  40c22c:	and    DWORD PTR [ebx+0x2a],edx
  40c22f:	or     al,0xbf
  40c231:	jns    0x40c213
  40c233:	rcr    BYTE PTR [edx+0x4],0x39
  40c237:	push   ds
  40c238:	fwait
  40c239:	cmp    BYTE PTR [edx],bh
  40c23b:	pop    es
  40c23c:	test   eax,0x3dc039e7
  40c241:	inc    ebp
  40c242:	push   eax
  40c243:	loop   0x40c291
  40c245:	push   esp
  40c246:	inc    ebx
  40c247:	in     eax,0xe8
  40c249:	cmp    dl,bh
  40c24b:	repz or edx,esi
  40c24e:	pop    ss
  40c24f:	xchg   esi,eax
  40c250:	inc    eax
  40c251:	sub    al,0x1a
  40c253:	pop    ebp
  40c254:	test   eax,0x82940833
  40c259:	ss adc eax,0x6c8654d4
  40c25f:	jne    0x40c216
  40c261:	pop    es
  40c262:	outs   dx,BYTE PTR ds:[esi]
  40c263:	jb     0x40c293
  40c265:	dec    esp
  40c266:	sti    
  40c267:	inc    esp
  40c268:	or     ebp,ebp
  40c26a:	leave  
  40c26b:	rol    DWORD PTR [ecx+edi*2+0x33efb2d8],cl
  40c272:	push   esi
  40c273:	call   0xe75700a4
  40c278:	cmp    eax,DWORD PTR [ebx+0x56]
  40c27b:	cli    
  40c27c:	push   ecx
  40c27d:	je     0x40c23e
  40c27f:	cs fcomip st,st(5)
  40c282:	add    al,0xf7
  40c284:	jns    0x40c231
  40c286:	mov    eax,ds:0x8cdb33a
  40c28b:	dec    ecx
  40c28c:	sbb    BYTE PTR [ebp+ebp*8-0x71415fde],dl
  40c293:	(bad)  [ebx]
  40c295:	pmaxsw mm5,mm2
  40c298:	jne    0x40c296
  40c29a:	pop    eax
  40c29b:	js     0x40c2f0
  40c29d:	add    ebx,DWORD PTR [ecx-0x76]
  40c2a0:	mov    dh,0x1c
  40c2a2:	sub    eax,0x362dd145
  40c2a7:	dec    ebp
  40c2a8:	rcl    DWORD PTR [ecx],cl
  40c2aa:	push   edi
  40c2ab:	lds    edi,FWORD PTR [esi-0x61]
  40c2ae:	adc    eax,0xd837a15e
  40c2b3:	loopne 0x40c24b
  40c2b5:	add    BYTE PTR [esi+0x49],cl
  40c2b8:	loope  0x40c262
  40c2ba:	push   es
  40c2bb:	or     al,0x98
  40c2bd:	repnz imul eax,DWORD PTR [ebx],0xffffffdf
  40c2c1:	push   0x6e
  40c2c3:	add    al,0x29
  40c2c5:	lock scas al,BYTE PTR es:[edi]
  40c2c7:	imul   ebp,DWORD PTR [esi],0x78
  40c2ca:	cmc    
  40c2cb:	ins    DWORD PTR es:[edi],dx
  40c2cc:	mov    eax,0x213c12a0
  40c2d1:	pop    edx
  40c2d2:	out    0xbf,al
  40c2d4:	pop    ss
  40c2d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2d6:	jne    0x40c2d8
  40c2d8:	hlt    
  40c2d9:	jns    0x40c2fe
  40c2db:	adc    al,0xbc
  40c2dd:	(bad)  
  40c2de:	fcom   DWORD PTR [ebx+edi*8-0x78068072]
  40c2e5:	and    al,BYTE PTR [eax]
  40c2e7:	xchg   DWORD PTR [ebp+0x7d],edx
  40c2ea:	xor    ch,BYTE PTR [edx-0x50]
  40c2ed:	dec    edi
  40c2ee:	dec    eax
  40c2ef:	and    ecx,esi
  40c2f1:	ins    BYTE PTR es:[edi],dx
  40c2f2:	sub    ebp,esp
  40c2f4:	test   eax,0x28fcb3c3
  40c2f9:	sbb    DWORD PTR [ecx+0x49a23bc3],eax
  40c2ff:	jno    0x40c308
  40c301:	sub    BYTE PTR [edx-0x28e43719],0x8c
  40c308:	jno    0x5e272b1a
  40c30e:	jns    0x40c2c1
  40c310:	sbb    bl,BYTE PTR [ecx]
  40c312:	cmc    
  40c313:	cmp    ax,0x7b69
  40c317:	sub    cl,0xdc
  40c31a:	mov    ebx,0xa611fbb8
  40c31f:	add    BYTE PTR [eax+0x4ebf8f25],bl
  40c325:	mov    BYTE PTR [edx+0x4f],bl
  40c328:	sbb    al,0x1
  40c32a:	add    esp,DWORD PTR [esi]
  40c32c:	fdiv   QWORD PTR [edx-0x5f]
  40c32f:	loop   0x40c356
  40c331:	ins    DWORD PTR es:[edi],dx
  40c332:	das    
  40c333:	jmp    0xfaeefb77
  40c338:	repnz adc eax,0x3ece43e2
  40c33e:	jmp    0x40c38f
  40c340:	adc    esp,edi
  40c342:	and    BYTE PTR [esi],bh
  40c344:	stc    
  40c345:	loopne 0x40c323
  40c347:	ret    0xaec0
  40c34a:	xchg   DWORD PTR [ecx-0xb],edi
  40c34d:	aad    0x7e
  40c34f:	sbb    al,0x9b
  40c351:	(bad)  
  40c352:	or     eax,0xb7751f0
  40c357:	sub    esp,DWORD PTR ds:[ecx-0x37]
  40c35b:	or     eax,edi
  40c35d:	lea    eax,[ecx+eax*1-0x65ec]
  40c364:	mov    ecx,0x5e208
  40c369:	div    ecx
  40c36b:	mov    ecx,DWORD PTR [ebp-0xc]
  40c36e:	lea    eax,[eax+ecx*1+0x40c7]
  40c375:	mov    DWORD PTR [ebp-0x24],eax
  40c378:	mov    DWORD PTR [ebp-0x4],0x1bc6
  40c37f:	mov    DWORD PTR [ebp-0x8],0x16ac
  40c386:	mov    DWORD PTR [ebp-0xc],0x2185
  40c38d:	mov    eax,DWORD PTR [ebp-0xc]
  40c390:	mov    ecx,DWORD PTR [ebp-0x8]
  40c393:	xor    eax,0x1f75
  40c398:	sub    eax,ecx
  40c39a:	mov    ecx,DWORD PTR [ebp-0x4]
  40c39d:	sub    eax,ecx
  40c39f:	xor    eax,0xc3e
  40c3a4:	mov    DWORD PTR [ebp-0x58],eax
  40c3a7:	mov    DWORD PTR [ebp-0x14],0x66bd
  40c3ae:	pop    ecx
  40c3af:	mov    DWORD PTR [ebp-0x4],ecx
  40c3b2:	mov    DWORD PTR [ebp-0x8],0x3374
  40c3b9:	mov    DWORD PTR [ebp-0xc],0x3c31
  40c3c0:	mov    eax,DWORD PTR [ebp-0xc]
  40c3c3:	mov    edx,DWORD PTR [ebp-0x8]
  40c3c6:	mov    esi,DWORD PTR [ebp-0x4]
  40c3c9:	xor    eax,edx
  40c3cb:	xor    edx,edx
  40c3cd:	div    esi
  40c3cf:	mov    edx,DWORD PTR [ebp-0x14]
  40c3d2:	and    eax,edx
  40c3d4:	sub    eax,0x680
  40c3d9:	mov    DWORD PTR [ebp-0x24],eax
  40c3dc:	mov    DWORD PTR [ebp-0x30],0x5f68
  40c3e3:	mov    DWORD PTR [ebp-0x2c],0x398b
  40c3ea:	mov    DWORD PTR [ebp-0x4],0x5034
  40c3f1:	mov    DWORD PTR [ebp-0x8],0x7cbf
  40c3f8:	mov    DWORD PTR [ebp-0xc],0x4f6c
  40c3ff:	mov    DWORD PTR [ebp-0x14],0xee2
  40c406:	mov    eax,DWORD PTR [ebp-0x14]
  40c409:	add    eax,DWORD PTR [ebp-0xc]
  40c40c:	mov    edx,DWORD PTR [ebp-0x8]
  40c40f:	xor    eax,edx
  40c411:	mov    edx,DWORD PTR [ebp-0x4]
  40c414:	or     eax,edx
  40c416:	mov    edx,DWORD PTR [ebp-0x2c]
  40c419:	or     eax,edx
  40c41b:	mov    edx,DWORD PTR [ebp-0x30]
  40c41e:	and    eax,edx
  40c420:	mov    edx,0x5b68
  40c425:	sub    edx,eax
  40c427:	mov    DWORD PTR [ebp-0x24],edx
  40c42a:	mov    DWORD PTR [ebp-0x48],0x3308
  40c431:	mov    DWORD PTR [ebp-0x44],0x59a4
  40c438:	mov    DWORD PTR [ebp-0x38],0x2775
  40c43f:	mov    DWORD PTR [ebp-0x34],0x4da
  40c446:	mov    DWORD PTR [ebp-0x40],0x49d8
  40c44d:	mov    DWORD PTR [ebp-0x3c],0x1b5c
  40c454:	mov    DWORD PTR [ebp-0x28],0x338c
  40c45b:	mov    DWORD PTR [ebp-0x24],0x68ed
  40c462:	jmp    0x40c86d
  40c467:	inc    esi
  40c468:	outs   dx,DWORD PTR ds:[esi]
  40c469:	mov    ebx,0x8abcbc70
  40c46e:	ja     0x40c492
  40c470:	or     DWORD PTR [esi-0x77422231],ebp
  40c476:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c477:	push   ss
  40c478:	iret   
  40c479:	mov    esi,0xbec492be
  40c47e:	mov    esi,0x91ddf898
  40c483:	aas    
  40c484:	inc    ebx
  40c485:	sub    al,0x14
  40c487:	jb     0x40c48e
  40c489:	jae    0x40c4ac
  40c48b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c48c:	in     al,dx
  40c48d:	xchg   ebx,eax
  40c48e:	inc    eax
  40c48f:	xor    edi,0xffffffe1
  40c492:	das    
  40c493:	jno    0x40c423
  40c495:	pop    ecx
  40c496:	fisttp DWORD PTR [edi]
  40c498:	sub    BYTE PTR [edx+0xdb9649f],ah
  40c49e:	sbb    DWORD PTR [ebx+0x2a],ecx
  40c4a1:	in     eax,0x63
  40c4a3:	inc    eax
  40c4a4:	and    ecx,eax
  40c4a6:	inc    ebx
  40c4a7:	jae    0x40c460
  40c4a9:	in     eax,dx
  40c4aa:	dec    esp
  40c4ab:	dec    eax
  40c4ac:	push   ebp
  40c4ad:	jae    0x40c4e0
  40c4af:	(bad)  
  40c4b0:	jecxz  0x40c478
  40c4b2:	jmp    0x40c4a5
  40c4b4:	mov    ah,0x72
  40c4b6:	sub    eax,0xea78c466
  40c4bb:	popa   
  40c4bc:	xchg   esp,eax
  40c4bd:	imul   ecx,DWORD PTR [ecx+0x1e],0xffffff9b
  40c4c1:	mov    ah,0xce
  40c4c3:	push   ds
  40c4c4:	fs mov edx,0x412e68d0
  40c4ca:	(bad)  
  40c4cb:	jg     0x40c482
  40c4cd:	and    eax,0x7ef3f5b7
  40c4d2:	adc    BYTE PTR [eax],ah
  40c4d4:	retf   
  40c4d5:	jecxz  0x40c554
  40c4d7:	xchg   esp,eax
  40c4d8:	cmp    DWORD PTR [edi],ebx
  40c4da:	nop
  40c4db:	test   ch,bl
  40c4dd:	ss jnp 0x40c538
  40c4e0:	call   0xf116:0x36fc0a77
  40c4e7:	xchg   edi,eax
  40c4e8:	stc    
  40c4e9:	leave  
  40c4ea:	cmp    bl,al
  40c4ec:	fisubr WORD PTR [eax+esi*4-0x38]
  40c4f0:	push   0x6691a609
  40c4f5:	inc    eax
  40c4f6:	or     eax,0xa7635350
  40c4fb:	ins    DWORD PTR es:[edi],dx
  40c4fc:	in     al,dx
  40c4fd:	lock popa 
  40c4ff:	mov    cl,0xf3
  40c501:	cli    
  40c502:	scas   eax,DWORD PTR es:[edi]
  40c503:	jp     0x40c576
  40c505:	jae    0x40c544
  40c507:	pop    ebp
  40c508:	imul   eax,ebx,0x3a
  40c50b:	and    esi,DWORD PTR [edx-0x6499109]
  40c511:	iret   
  40c512:	dec    edi
  40c513:	push   edx
  40c514:	push   edi
  40c515:	mov    ecx,DWORD PTR [edi+0x5a977563]
  40c51b:	fld    TBYTE PTR [edx]
  40c51d:	dec    ebx
  40c51e:	or     DWORD PTR [eax],0xb8c43461
  40c524:	adc    al,0x26
  40c526:	mov    bh,0xab
  40c528:	mov    edi,DWORD PTR [eax+0x303ea05c]
  40c52e:	js     0x40c4b6
  40c530:	push   edi
  40c531:	inc    eax
  40c532:	ds loop 0x40c5ab
  40c535:	ficomp WORD PTR [eax+eiz*8-0x2d8d6e78]
  40c53c:	mov    ds:0x4d514702,eax
  40c541:	rcl    DWORD PTR [edi],1
  40c543:	mov    ss,WORD PTR [ebx]
  40c545:	test   eax,0x476f0390
  40c54a:	xor    ah,BYTE PTR [ebp+0xc03ed7a]
  40c550:	or     dl,BYTE PTR [edx+0x7d49359b]
  40c556:	push   ebp
  40c557:	inc    edx
  40c558:	(bad)  
  40c559:	pop    edx
  40c55a:	(bad)  
  40c55b:	das    
  40c55c:	cli    
  40c55d:	add    DWORD PTR [ebx+0x73],0x428ef628
  40c564:	cmc    
  40c565:	in     al,0x14
  40c567:	scas   eax,DWORD PTR es:[edi]
  40c568:	jne    0x40c59f
  40c56a:	ficomp WORD PTR [eax]
  40c56c:	aad    0x86
  40c56e:	mov    ebx,0xf33b6df2
  40c573:	pusha  
  40c574:	xor    al,0x2e
  40c576:	sub    ebp,DWORD PTR es:[ebx-0xd]
  40c57a:	xchg   ecx,eax
  40c57b:	push   edx
  40c57c:	mov    esp,0x7cd04ac8
  40c581:	mov    bl,0xbb
  40c583:	cmp    DWORD PTR [eax+0x49],ebp
  40c586:	stc    
  40c587:	xchg   edx,eax
  40c588:	mov    dl,0x18
  40c58a:	inc    esi
  40c58b:	mov    ds:0x32a1d79d,al
  40c590:	fisubr WORD PTR [ebp-0x4b0fd9d8]
  40c596:	(bad)  
  40c597:	mov    ebp,0xf90d6254
  40c59c:	pop    eax
  40c59d:	ficomp DWORD PTR [ebx]
  40c59f:	and    ebx,ecx
  40c5a1:	sub    esp,ebx
  40c5a3:	dec    edx
  40c5a4:	cmp    dh,ch
  40c5a6:	lock or bh,BYTE PTR [ebp+edx*8-0x520cf5b7]
  40c5ae:	mov    ch,0x80
  40c5b0:	std    
  40c5b1:	hlt    
  40c5b2:	xchg   DWORD PTR [esi-0x48],esp
  40c5b5:	jecxz  0x40c53f
  40c5b7:	push   ebp
  40c5b8:	xor    esi,eax
  40c5ba:	dec    eax
  40c5bb:	jg     0x40c591
  40c5bd:	or     BYTE PTR ds:0x85cd1d1e,0x26
  40c5c4:	repz sub eax,0x701a4eed
  40c5ca:	pop    ebx
  40c5cb:	mov    ecx,0x22080952
  40c5d0:	test   DWORD PTR [ebx-0x24],edx
  40c5d3:	je     0x40c593
  40c5d5:	and    dh,dh
  40c5d7:	mov    eax,ds:0xf1db3862
  40c5dc:	jp     0x40c5d9
  40c5de:	jo     0x40c5f8
  40c5e0:	test   BYTE PTR [edi+0x16],dl
  40c5e3:	imul   esi,DWORD PTR [edi],0xffffffa7
  40c5e6:	jnp    0x40c5d2
  40c5e8:	cmp    ah,BYTE PTR [edi-0x63]
  40c5eb:	(bad)  
  40c5ed:	lock xor eax,0x5c71e471
  40c5f3:	cld    
  40c5f4:	push   esi
  40c5f5:	pop    ss
  40c5f6:	push   esp
  40c5f7:	push   edi
  40c5f8:	sub    BYTE PTR [edx+ebp*2+0x3ba8375b],0xfd
  40c600:	popf   
  40c601:	push   edi
  40c602:	hlt    
  40c603:	nop
  40c604:	aad    0xba
  40c606:	add    eax,edx
  40c608:	pushf  
  40c609:	imul   edx,DWORD PTR [esi+0x1a],0xef960887
  40c610:	push   0xffffffd8
  40c612:	mov    ds:0x6a037ed,eax
  40c617:	iret   
  40c618:	enter  0x63ad,0x15
  40c61c:	in     al,dx
  40c61d:	cmp    eax,edi
  40c61f:	sub    DWORD PTR [edi],0xffffffaa
  40c622:	stos   BYTE PTR es:[edi],al
  40c623:	(bad)  
  40c624:	shr    DWORD PTR [eax+0x5a],1
  40c627:	repz in al,dx
  40c629:	add    cl,BYTE PTR [edi+0x458df8e9]
  40c62f:	pop    eax
  40c630:	jg     0x40c676
  40c632:	push   esp
  40c633:	inc    eax
  40c634:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c635:	pop    esp
  40c636:	and    ecx,eax
  40c638:	sbb    eax,DWORD PTR [ecx+esi*1+0x1189ecc1]
  40c63f:	mov    ch,0xda
  40c641:	popf   
  40c642:	jp     0x40c5f5
  40c644:	cwde   
  40c645:	fmul   st,st(4)
  40c647:	sahf   
  40c648:	jnp    0x40c619
  40c64a:	test   eax,0x406f6291
  40c64f:	jnp    0x40c613
  40c651:	mov    WORD PTR [edi+0x2e],es
  40c654:	xor    DWORD PTR [esi],esp
  40c656:	xchg   BYTE PTR [ecx],bh
  40c658:	dec    ecx
  40c659:	cld    
  40c65a:	xor    ebx,edi
  40c65c:	test   edi,ecx
  40c65e:	and    DWORD PTR [ecx-0x2e697828],esi
  40c664:	es pop ds
  40c666:	retf   0xc7e0
  40c669:	mov    fs,WORD PTR [edi]
  40c66b:	pop    esp
  40c66c:	rol    DWORD PTR [ecx-0x4d],1
  40c66f:	idiv   BYTE PTR [ecx+0x534515a7]
  40c675:	cdq    
  40c676:	mov    al,BYTE PTR [ebx-0x5eae5557]
  40c67c:	(bad)  
  40c67e:	gs loope 0x40c6c8
  40c681:	ss pop edi
  40c683:	(bad)
  40c687:	aam    0x32
  40c689:	clc    
  40c68a:	jbe    0x40c6fd
  40c68c:	std    
  40c68d:	adc    BYTE PTR [edi+esi*4+0x49d0ef07],ah
  40c694:	aam    0xc6
  40c696:	into   
  40c697:	(bad)  
  40c698:	repnz or bh,BYTE PTR [edx-0x19cdb32a]
  40c69f:	and    ebx,DWORD PTR [edx-0x55c56da1]
  40c6a5:	xchg   BYTE PTR [esp+edx*2-0xed4b387],ah
  40c6ac:	lds    esp,FWORD PTR [edi-0x28]
  40c6af:	lock (bad) 
  40c6b1:	leave  
  40c6b2:	idiv   BYTE PTR [edx+0x28a59609]
  40c6b8:	test   eax,0xff9423b2
  40c6bd:	jp     0x40c663
  40c6bf:	pusha  
  40c6c0:	stos   BYTE PTR es:[edi],al
  40c6c1:	mov    al,ds:0x6c8be839
  40c6c6:	dec    ebp
  40c6c7:	fucomp st(4)
  40c6c9:	mov    ch,0xb9
  40c6cb:	dec    ebp
  40c6cc:	or     esi,DWORD PTR [edi]
  40c6ce:	loop   0x40c6e0
  40c6d0:	pop    ss
  40c6d1:	pop    ecx
  40c6d2:	or     ebx,esi
  40c6d4:	stos   DWORD PTR es:[edi],eax
  40c6d5:	repnz rol ah,1
  40c6d8:	stos   DWORD PTR es:[edi],eax
  40c6d9:	lods   al,BYTE PTR ds:[esi]
  40c6da:	sti    
  40c6db:	lods   al,BYTE PTR ds:[esi]
  40c6dc:	or     DWORD PTR [ebp+0x602b4ca3],edi
  40c6e2:	test   eax,0xab53cc96
  40c6e7:	push   ebx
  40c6e8:	pop    ss
  40c6e9:	sub    BYTE PTR [esi-0x4a6e2787],dh
  40c6ef:	lods   al,BYTE PTR ds:[esi]
  40c6f0:	and    al,BYTE PTR [esi]
  40c6f2:	pushf  
  40c6f3:	shl    BYTE PTR [edi],cl
  40c6f5:	and    DWORD PTR [eax],edi
  40c6f7:	xchg   ebx,eax
  40c6f8:	mov    esi,0xd455c886
  40c6fd:	aas    
  40c6fe:	cmp    al,0x53
  40c700:	dec    ebx
  40c701:	ins    BYTE PTR es:[edi],dx
  40c702:	(bad)  
  40c703:	jge    0x40c6c2
  40c705:	dec    esi
  40c706:	xor    eax,0x30110fb1
  40c70b:	pop    ecx
  40c70c:	pop    ebp
  40c70d:	adc    al,0x19
  40c70f:	mov    ebp,0x9a44b4de
  40c714:	mov    esi,0xc1e96365
  40c719:	inc    esp
  40c71a:	jge    0x40c783
  40c71c:	mov    cl,0xca
  40c71e:	jbe    0x40c77f
  40c720:	push   ds
  40c721:	pop    ebx
  40c722:	dec    esp
  40c723:	pop    ecx
  40c724:	sbb    eax,0x3a547124
  40c729:	dec    edi
  40c72a:	das    
  40c72b:	jbe    0x40c7a0
  40c72d:	popf   
  40c72e:	arpl   WORD PTR [eax-0x6cbee5b2],ax
  40c734:	daa    
  40c735:	dec    ecx
  40c736:	mov    al,ds:0x26408607
  40c73b:	inc    esp
  40c73c:	dec    edi
  40c73d:	inc    ebp
  40c73e:	rcl    BYTE PTR fs:[esi],0x38
  40c742:	pushf  
  40c743:	push   cs
  40c744:	enter  0x9503,0xb6
  40c748:	pop    esi
  40c749:	mov    ecx,0xad7687b7
  40c74e:	fld    st(0)
  40c750:	and    DWORD PTR [esp+ebx*8+0x28eba187],esp
  40c757:	pop    ecx
  40c758:	test   BYTE PTR [ebx+eax*4+0x8],bh
  40c75c:	lock jnp 0x40c747
  40c75f:	jmp    0xbfafdd2
  40c764:	les    ebp,FWORD PTR [esi-0x39edd813]
  40c76a:	and    al,0x5a
  40c76c:	loopne 0x40c7e7
  40c76e:	lds    ebp,FWORD PTR [esi]
  40c770:	icebp  
  40c771:	inc    esp
  40c772:	or     eax,DWORD PTR [edi-0x2a0f97ee]
  40c778:	dec    ebx
  40c779:	or     eax,0x443b68dd
  40c77e:	in     al,0x3a
  40c780:	mov    ah,0xe3
  40c782:	inc    edx
  40c783:	inc    edx
  40c784:	popf   
  40c785:	add    edx,DWORD PTR [edi+0x27381daa]
  40c78b:	jbe    0x40c779
  40c78d:	ds pushf 
  40c78f:	les    ebp,FWORD PTR [ebx-0x48]
  40c792:	fdivr  QWORD PTR [ecx]
  40c794:	fidivr WORD PTR [eax]
  40c796:	add    BYTE PTR [edx-0x5c],cl
  40c799:	call   0x909f8f1f
  40c79e:	in     eax,0xce
  40c7a0:	loope  0x40c760
  40c7a2:	add    cl,BYTE PTR [esi+0x7]
  40c7a5:	xlat   BYTE PTR ds:[ebx]
  40c7a6:	mov    esi,ebx
  40c7a8:	and    BYTE PTR [ebx],ah
  40c7aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7ab:	not    BYTE PTR [ebx]
  40c7ad:	jg     0x40c75b
  40c7af:	inc    esp
  40c7b0:	outs   dx,DWORD PTR ds:[esi]
  40c7b1:	lds    esi,FWORD PTR [eax-0x3a]
  40c7b4:	ret    0x43ae
  40c7b7:	xchg   ebx,ebp
  40c7b9:	es push ebx
  40c7bb:	cmp    dh,dh
  40c7bd:	sbb    esi,DWORD PTR [ecx+0x1fa64124]
  40c7c3:	cmp    bh,al
  40c7c5:	adc    dh,bh
  40c7c7:	mov    fs,WORD PTR [eax]
  40c7c9:	mov    dh,0x60
  40c7cb:	mov    eax,DWORD PTR [edx+0x21075864]
  40c7d1:	addr16 push cs
  40c7d3:	cmp    BYTE PTR [ecx+0x60be7cac],0xe5
  40c7da:	mov    DWORD PTR [ecx+0x4f7595b5],esi
  40c7e0:	mul    BYTE PTR [esi+0x42b5b88]
  40c7e6:	sub    eax,0xc3a169f2
  40c7eb:	retf   
  40c7ec:	rol    BYTE PTR [ebp+0x42b4c48],1
  40c7f2:	fcomp  QWORD PTR [eax-0x5afaea0]
  40c7f8:	dec    ebp
  40c7f9:	xor    al,BYTE PTR [eax+esi*4-0x6b33c215]
  40c800:	and    edi,DWORD PTR [edx]
  40c802:	fcmovnu st,st(5)
  40c804:	pushf  
  40c805:	mov    cl,al
  40c807:	adc    al,0x30
  40c809:	iret   
  40c80a:	push   ecx
  40c80b:	mov    eax,ds:0xb4e0317c
  40c810:	mov    bl,0x73
  40c812:	aas    
  40c813:	inc    edx
  40c814:	push   ebx
  40c815:	or     BYTE PTR [ebx+edi*1-0x30cce579],cl
  40c81c:	das    
  40c81d:	and    al,0x1
  40c81f:	aaa    
  40c820:	push   0x67
  40c822:	icebp  
  40c823:	imul   ebp,ecx,0x46
  40c826:	xor    BYTE PTR [ebx+0x78ff1125],bh
  40c82c:	fidivr DWORD PTR [edi]
  40c82e:	icebp  
  40c82f:	jno    0x40c7d8
  40c831:	pushf  
  40c832:	je     0x40c851
  40c834:	push   eax
  40c835:	dec    BYTE PTR [eax]
  40c837:	stos   DWORD PTR es:[edi],eax
  40c838:	dec    edx
  40c839:	inc    edi
  40c83a:	xor    dl,BYTE PTR [ebp+0x2c775775]
  40c840:	icebp  
  40c841:	xchg   esp,eax
  40c842:	je     0x40c7fd
  40c844:	(bad)  
  40c845:	xor    eax,0xbbc60fda
  40c84a:	pop    ebp
  40c84b:	mov    ebx,0xd41d8d46
  40c850:	ror    BYTE PTR [edi+ebp*4-0x5925e294],cl
  40c857:	rcl    ebp,1
  40c859:	out    0x31,eax
  40c85b:	jl     0x40c7dd
  40c85d:	adc    edi,DWORD PTR [esi+ecx*4-0x29]
  40c861:	stc    
  40c862:	imul   ebp,edx,0xd242c99
  40c868:	rol    BYTE PTR [eax+eax*2],cl
  40c86b:	shl    DWORD PTR [edx+0x7be045c7],cl
  40c871:	sub    al,BYTE PTR [eax]
  40c873:	add    bh,al
  40c875:	inc    ebp
  40c876:	in     al,0x8f
  40c878:	jno    0x40c87a
  40c87a:	add    BYTE PTR [ebx+0x6e9e045],cl
  40c880:	add    al,0x0
  40c882:	add    bh,bh
  40c884:	fisubr DWORD PTR [edx+0x36]
  40c887:	mov    esp,0x55fc93b6
  40c88c:	or     eax,0x5782e3ac
  40c891:	(bad)  
  40c892:	fucomp st(1)
  40c894:	xlat   BYTE PTR ds:[ebx]
  40c895:	mov    esi,0xbec492be
  40c89a:	mov    esi,0x8ccb0e05
  40c89f:	jg     0x40c912
  40c8a1:	xor    eax,0xee8813ed
  40c8a6:	loopne 0x40c8e3
  40c8a8:	push   esi
  40c8a9:	jnp    0x40c8d3
  40c8ab:	add    BYTE PTR [ebx],dl
  40c8ad:	or     al,0xcb
  40c8af:	(bad)  
  40c8b0:	jno    0x40c863
  40c8b2:	jl     0x40c83d
  40c8b4:	clc    
  40c8b5:	sub    ah,BYTE PTR [edi-0xf34f96a]
  40c8bb:	dec    edx
  40c8bc:	out    0x55,eax
  40c8be:	or     DWORD PTR [eax],0xffffffda
  40c8c1:	xchg   DWORD PTR [ebp+0x3b],ebp
  40c8c4:	addr16 sbb dh,0x56
  40c8c8:	sar    BYTE PTR [ecx+ebx*2],0xdc
  40c8cc:	mov    ch,dl
  40c8ce:	push   cs
  40c8cf:	dec    ebx
  40c8d0:	ins    DWORD PTR es:[edi],dx
  40c8d1:	xor    al,0xf2
  40c8d3:	ins    DWORD PTR es:[edi],dx
  40c8d4:	jno    0x40c8bc
  40c8d6:	add    esp,DWORD PTR [edi+ecx*2]
  40c8d9:	test   DWORD PTR [ecx+0x7a],edi
  40c8dc:	sbb    DWORD PTR [ebp-0x2d],ecx
  40c8df:	cmp    esi,esp
  40c8e1:	xchg   DWORD PTR [ebp+0x15],esp
  40c8e4:	push   edi
  40c8e5:	xor    BYTE PTR [ebx+0x5d4ebfde],al
  40c8eb:	mov    ebp,0xaacb1685
  40c8f0:	out    dx,eax
  40c8f1:	nop
  40c8f2:	data16 aas 
  40c8f4:	or     esi,DWORD PTR [eax+edi*8+0x2d]
  40c8f8:	push   cs
  40c8f9:	and    ah,BYTE PTR [ebp-0x524c1308]
  40c8ff:	adc    eax,esi
  40c901:	jno    0x40c912
  40c903:	jecxz  0x40c975
  40c905:	leave  
  40c906:	(bad)  
  40c907:	sub    DWORD PTR [esi-0x59],ebx
  40c90a:	sub    eax,0xee9b7280
  40c90f:	dec    edi
  40c910:	arpl   WORD PTR [edi],bx
  40c912:	inc    ebx
  40c913:	dec    eax
  40c914:	mov    esp,0x65f59447
  40c919:	or     esi,ebp
  40c91b:	cmp    BYTE PTR [ecx+0x27],dl
  40c91e:	mov    ah,BYTE PTR [eax]
  40c920:	jbe    0x40c8f7
  40c922:	jl     0x40c936
  40c924:	sub    DWORD PTR [ebp+0x789ce1d7],0x32fea85f
  40c92e:	test   al,0xa0
  40c930:	push   cs
  40c931:	dec    edi
  40c932:	sahf   
  40c933:	dec    ebx
  40c934:	mov    dh,0x25
  40c936:	iret   
  40c937:	push   ds
  40c938:	sbb    ebx,esi
  40c93a:	shr    DWORD PTR [edi-0x53],cl
  40c93d:	mov    esp,0xd94182b6
  40c942:	mov    ch,0x36
  40c944:	pop    eax
  40c945:	(bad)  [ecx]
  40c947:	out    0xc7,al
  40c949:	pop    ebp
  40c94a:	sub    eax,0x620bcd00
  40c94f:	inc    ebp
  40c950:	addr16 (bad) 
  40c952:	dec    BYTE PTR [edi+0x35]
  40c955:	scas   eax,DWORD PTR es:[edi]
  40c956:	fwait
  40c957:	sub    BYTE PTR [esi+edx*4+0x1a54eec8],dh
  40c95e:	mov    ds:0x320e164b,eax
  40c963:	inc    esi
  40c964:	in     eax,0x98
  40c966:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c967:	shl    DWORD PTR [edx],1
  40c969:	shl    DWORD PTR [ebx],cl
  40c96b:	xchg   edx,eax
  40c96c:	js     0x40c92d
  40c96e:	clc    
  40c96f:	jg     0x40c8fe
  40c971:	in     eax,0x5c
  40c973:	cmp    DWORD PTR [edx-0x3bbef7cd],esp
  40c979:	or     DWORD PTR [esi],edx
  40c97b:	cld    
  40c97c:	cmp    eax,0x8c862679
  40c981:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c982:	mul    ebp
  40c984:	daa    
  40c985:	mov    al,ds:0x2d1bccfd
  40c98a:	stos   BYTE PTR es:[edi],al
  40c98b:	jmp    0x40c9cf
  40c98d:	in     al,0xa5
  40c98f:	test   DWORD PTR [ebp+0x71],ebp
  40c992:	sbb    DWORD PTR [ecx],edx
  40c994:	stc    
  40c995:	dec    ebp
  40c996:	cmp    al,al
  40c998:	sbb    BYTE PTR [eax+0x35],0xaf
  40c99c:	fisttp DWORD PTR [esi]
  40c99e:	xchg   edi,eax
  40c99f:	ds fwait
  40c9a1:	push   edx
  40c9a2:	lods   eax,DWORD PTR ds:[esi]
  40c9a3:	pop    edx
  40c9a4:	outs   dx,DWORD PTR ds:[esi]
  40c9a5:	inc    eax
  40c9a6:	imul   edx,DWORD PTR [esi-0x5eecab64],0x971a2090
  40c9b0:	outs   dx,BYTE PTR ds:[esi]
  40c9b1:	push   cs
  40c9b2:	sub    esi,DWORD PTR [eax]
  40c9b4:	jmp    0x1275d64
  40c9b9:	addr16 mov edx,0x89fb17dc
  40c9bf:	dec    eax
  40c9c0:	xlat   BYTE PTR ds:[ebx]
  40c9c1:	pop    ss
  40c9c2:	loope  0x40c99b
  40c9c4:	pop    ecx
  40c9c5:	(bad)  
  40c9c6:	loop   0x40ca0a
  40c9c8:	dec    esp
  40c9c9:	mov    ecx,0x9d87ec19
  40c9ce:	ror    DWORD PTR [esi-0x3bff0ffb],0xc6
  40c9d5:	push   0xc22229b8
  40c9da:	mov    edi,0xb7818c78
  40c9df:	into   
  40c9e0:	mov    al,ds:0x33cd2cc
  40c9e6:	inc    edi
  40c9e7:	xchg   DWORD PTR [ecx],edx
  40c9e9:	fcomip st,st(3)
  40c9eb:	(bad)  
  40c9ec:	jecxz  0x40c972
  40c9ee:	lods   al,BYTE PTR ds:[esi]
  40c9ef:	xchg   edx,eax
  40c9f0:	adc    DWORD PTR [ecx+0x7e],edx
  40c9f3:	aam    0xd0
  40c9f5:	pop    ds
  40c9f6:	adc    esi,DWORD PTR [edi*8-0x72d4dc93]
  40c9fd:	sub    eax,0xbd753181
  40ca02:	ss test al,al
  40ca05:	shr    BYTE PTR [ebp+0x60c1cf61],cl
  40ca0b:	jbe    0x40ca1d
  40ca0d:	push   edx
  40ca0e:	ins    BYTE PTR es:[edi],dx
  40ca0f:	test   al,0x42
  40ca11:	lea    esp,[edi]
  40ca13:	es in  al,dx
  40ca15:	dec    ebx
  40ca16:	dec    ebp
  40ca17:	test   BYTE PTR [ebx],dl
  40ca19:	std    
  40ca1a:	fidivr DWORD PTR [esi-0x28aaa8c3]
  40ca20:	icebp  
  40ca21:	ins    BYTE PTR es:[edi],dx
  40ca22:	dec    esi
  40ca23:	clc    
  40ca24:	adc    eax,0x63b71986
  40ca29:	pminub mm0,QWORD PTR [ecx]
  40ca2c:	test   DWORD PTR [edx-0x7d517615],0xe74a973
  40ca36:	xor    DWORD PTR [ebx-0x283aff1a],ebp
  40ca3c:	jg     0x40c9d9
  40ca3e:	inc    esp
  40ca3f:	xor    DWORD PTR [ebx+0x45],0x72
  40ca43:	inc    esp
  40ca44:	adc    DWORD PTR [esi+0x3acc61d9],esp
  40ca4a:	(bad)  
  40ca4b:	in     eax,0xd
  40ca4d:	out    dx,al
  40ca4e:	ds cdq 
  40ca50:	cdq    
  40ca51:	loope  0x40ca18
  40ca53:	inc    edx
  40ca54:	and    edx,DWORD PTR gs:0x94279e64
  40ca5b:	in     eax,dx
  40ca5c:	loope  0x40caa1
  40ca5e:	int3   
  40ca5f:	mov    bh,0xf4
  40ca61:	fidivr DWORD PTR [eax-0x36ab8623]
  40ca67:	jmp    0x3721:0x5b510b17
  40ca6e:	xchg   ebp,eax
  40ca6f:	sub    dl,BYTE PTR [ebx]
  40ca71:	popa   
  40ca72:	les    edi,FWORD PTR [ecx+0x42]
  40ca75:	inc    edi
  40ca76:	xor    bh,BYTE PTR [edi]
  40ca78:	and    dh,cl
  40ca7a:	pushf  
  40ca7b:	sbb    al,0x98
  40ca7d:	and    al,0x4
  40ca7f:	sbb    DWORD PTR [ebp+0x4],0x1b
  40ca83:	dec    edx
  40ca84:	ficomp DWORD PTR [ecx]
  40ca86:	jge    0x40cb07
  40ca88:	cld    
  40ca89:	adc    BYTE PTR [eax-0x767e95b0],bl
  40ca8f:	loopne 0x40ca44
  40ca91:	jg     0x40caf1
  40ca93:	mov    dl,0xa7
  40ca95:	in     al,dx
  40ca96:	cmp    al,0xed
  40ca98:	and    DWORD PTR [ebx+0x3d84ea6a],esp
  40ca9e:	out    dx,al
  40ca9f:	xchg   edi,eax
  40caa0:	shr    DWORD PTR [ebx+0x25],1
  40caa3:	in     al,dx
  40caa4:	dec    esi
  40caa5:	stos   BYTE PTR es:[edi],al
  40caa6:	nop
  40caa7:	jge    0x40ca33
  40caa9:	addr16 or al,0xe1
  40caac:	or     ch,BYTE PTR [eax+0x62b2e31e]
  40cab2:	mov    bl,0x64
  40cab4:	mov    esi,0x123ac892
  40cab9:	or     edi,DWORD PTR [ebx+0x34]
  40cabc:	in     eax,0x9c
  40cabe:	sub    DWORD PTR [eax+0x77097a4a],esp
  40cac4:	pop    ecx
  40cac5:	push   ebp
  40cac6:	add    bl,BYTE PTR [ebp+0x1e]
  40cac9:	push   ebp
  40caca:	cwde   
  40cacb:	cs push es
  40cacd:	xor    edx,eax
  40cacf:	xor    ah,BYTE PTR [ebx]
  40cad1:	jge    0x40ca5b
  40cad3:	add    ch,bl
  40cad5:	(bad)  
  40cad6:	jne    0x40cb27
  40cad8:	push   cs
  40cad9:	int    0x25
  40cadb:	and    eax,0x2376987e
  40cae0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cae1:	push   edx
  40cae2:	xchg   DWORD PTR [esi-0x79ba7d3d],edx
  40cae8:	mov    dh,0x3e
  40caea:	fs cmps BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40caed:	(bad)  
  40caee:	ja     0x40caae
  40caf0:	mov    al,ds:0x56cad14a
  40caf5:	xor    ah,dl
  40caf7:	xchg   BYTE PTR [edx+0xd],bh
  40cafa:	inc    ebx
  40cafb:	xor    BYTE PTR [ecx],ah
  40cafd:	or     bl,BYTE PTR [ebx+0x270ef225]
  40cb03:	or     eax,0x474bbc5a
  40cb08:	adc    al,0xbc
  40cb0a:	sbb    dl,BYTE PTR [edi]
  40cb0c:	jno    0x40cb71
  40cb0e:	call   0xd5b0:0x2a725841
  40cb15:	aad    0xa5
  40cb17:	aas    
  40cb18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb19:	add    al,0x82
  40cb1b:	fs fwait
  40cb1d:	aam    0xfa
  40cb1f:	clc    
  40cb20:	cmp    al,0x72
  40cb22:	ret    
  40cb23:	and    DWORD PTR ds:0xa0b839c6,eax
  40cb29:	arpl   WORD PTR [esi-0x3add4eaf],bx
  40cb2f:	sbb    edx,DWORD PTR [edx-0x3c968192]
  40cb35:	jb     0x40cbb0
  40cb37:	stc    
  40cb38:	mov    edx,0x40b9e534
  40cb3d:	cmp    al,ah
  40cb3f:	lock fisttp DWORD PTR [esi+0x4551fe66]
  40cb46:	adc    ah,cl
  40cb48:	stos   BYTE PTR es:[edi],al
  40cb49:	cdq    
  40cb4a:	jns    0x40cae0
  40cb4c:	xor    eax,0xaf3a7b45
  40cb51:	or     dl,bh
  40cb53:	or     DWORD PTR [esi-0x31e2c179],0xac3c6ed8
  40cb5d:	xor    DWORD PTR [eax-0x72],ebp
  40cb60:	lock out 0x89,al
  40cb63:	or     dl,ch
  40cb65:	hlt    
  40cb66:	std    
  40cb67:	xchg   edx,eax
  40cb68:	mov    eax,ds:0xb5c3d022
  40cb6d:	jne    0x40cba2
  40cb6f:	sub    al,0x79
  40cb71:	jle    0x40cbad
  40cb73:	out    0x2,al
  40cb75:	nop
  40cb76:	rol    DWORD PTR [edx+0x60a1aa22],cl
  40cb7c:	outs   dx,BYTE PTR ds:[esi]
  40cb7d:	or     bl,dh
  40cb7f:	test   DWORD PTR [ecx+0x111118cd],eax
  40cb85:	popf   
  40cb86:	nop
  40cb87:	(bad)  
  40cb88:	mov    al,0x83
  40cb8a:	dec    esp
  40cb8b:	mov    cl,0x49
  40cb8d:	pop    ss
  40cb8e:	out    0xac,eax
  40cb90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb91:	push   es
  40cb92:	or     BYTE PTR [ecx+edx*1],ah
  40cb95:	into   
  40cb96:	xor    edx,DWORD PTR [edi+0x16]
  40cb99:	inc    ecx
  40cb9a:	sub    al,0x2c
  40cb9c:	into   
  40cb9d:	xchg   ebp,eax
  40cb9e:	and    bh,bh
  40cba0:	inc    ecx
  40cba1:	push   esp
  40cba2:	mov    esi,0x45d5f64f
  40cba7:	inc    edx
  40cba8:	mov    eax,0x1d67dfac
  40cbad:	sub    al,0xcf
  40cbaf:	or     al,0xdf
  40cbb1:	cmp    ebp,DWORD PTR [ebx-0x66e71672]
  40cbb7:	add    esp,DWORD PTR [ecx-0x34]
  40cbba:	xlat   BYTE PTR ds:[ebx]
  40cbbb:	inc    eax
  40cbbc:	(bad)  
  40cbbd:	adc    edi,ebp
  40cbbf:	(bad)  [eax-0x14300874]
  40cbc5:	or     esi,esi
  40cbc7:	mov    edi,0x78e80872
  40cbcc:	jae    0x40cbb0
  40cbce:	xor    eax,0xd75b8e8b
  40cbd3:	and    DWORD PTR [eax+edi*4+0x79],0x56c15249
  40cbdb:	jbe    0x40cbd4
  40cbdd:	scas   al,BYTE PTR es:[edi]
  40cbde:	and    eax,0xcac817d6
  40cbe3:	xchg   DWORD PTR [edx],edx
  40cbe5:	out    dx,eax
  40cbe6:	add    dh,BYTE PTR [ecx]
  40cbe8:	pop    eax
  40cbe9:	(bad)  
  40cbea:	sub    ah,cl
  40cbec:	mov    bh,0x23
  40cbee:	adc    ebx,0xc528ccd2
  40cbf4:	je     0x40cbd0
  40cbf6:	adc    al,0xd3
  40cbf8:	leave  
  40cbf9:	cmp    BYTE PTR [ecx],dh
  40cbfb:	mov    ah,0xb1
  40cbfd:	xchg   BYTE PTR [ebp+0x4eece890],bh
  40cc03:	loopne 0x40cc01
  40cc05:	dec    ecx
  40cc06:	jmp    0x8f1ac915
  40cc0b:	scas   eax,DWORD PTR es:[edi]
  40cc0c:	sub    eax,0x4a6b3ed2
  40cc11:	add    DWORD PTR [ecx+0x28],0x115a4755
  40cc18:	dec    eax
  40cc19:	sbb    al,0x30
  40cc1b:	out    dx,eax
  40cc1c:	out    dx,eax
  40cc1d:	sbb    eax,0xaf7960f9
  40cc22:	sbb    eax,DWORD PTR [ebx+0x5e14c078]
  40cc28:	push   ss
  40cc29:	add    bh,BYTE PTR [ebp-0x33]
  40cc2c:	popf   
  40cc2d:	push   esi
  40cc2e:	shl    DWORD PTR [ecx-0x38],1
  40cc31:	sbb    ecx,DWORD PTR [esi+0xdb2b3da]
  40cc37:	push   edx
  40cc38:	dec    ebx
  40cc39:	test   al,0xc4
  40cc3b:	bound  ebp,QWORD PTR [esi-0x5e]
  40cc3e:	fwait
  40cc3f:	sbb    BYTE PTR [esi+0x5c],0x45
  40cc43:	and    BYTE PTR [edx+0x36722e4e],al
  40cc49:	les    edi,FWORD PTR [ebx+ebx*2]
  40cc4c:	imul   esi,edi,0x12c9f0e0
  40cc52:	mov    al,ds:0x6d9dc371
  40cc57:	pop    ebp
  40cc58:	jae    0x40ccc0
  40cc5a:	dec    edx
  40cc5b:	push   cs
  40cc5c:	fdivr  QWORD PTR [edx+0x46a0280d]
  40cc62:	mov    ch,0x6d
  40cc64:	loop   0x40cc3a
  40cc66:	mov    esp,0x7455ac43
  40cc6b:	lea    ebp,[ebx+edx*1-0x1fafd2bb]
  40cc72:	xor    ebp,DWORD PTR [edi+0x5c7368d2]
  40cc78:	inc    edi
  40cc79:	loope  0x40cc8a
  40cc7b:	sbb    bl,BYTE PTR [esi]
  40cc7d:	fdivp  st(0),st
  40cc7f:	mov    esi,0x782c0e70
  40cc84:	mov    bl,0x7
  40cc86:	in     eax,0xc6
  40cc88:	xor    ecx,DWORD PTR [ebx+0x758be455]
  40cc8e:	fmul   DWORD PTR [ebx+0x4805dc5d]
  40cc94:	leave  
  40cc95:	(bad)  
  40cc96:	inc    DWORD PTR [ecx-0x784f2e]
  40cc9c:	dec    DWORD PTR [ebx]
  40cc9e:	(bad)  
  40cc9f:	mov    esi,DWORD PTR [ebp-0x40]
  40cca2:	or     eax,esi
  40cca4:	or     edx,ebx
  40cca6:	mov    ebx,DWORD PTR [ebp-0x3c]
  40cca9:	mov    esi,DWORD PTR [ebp-0x38]
  40ccac:	or     edx,ebx
  40ccae:	mov    ebx,DWORD PTR [ebp-0x34]
  40ccb1:	sub    eax,esi
  40ccb3:	mov    esi,DWORD PTR [ebp-0x48]
  40ccb6:	sbb    edx,ebx
  40ccb8:	mov    ebx,DWORD PTR [ebp-0x44]
  40ccbb:	or     eax,esi
  40ccbd:	or     edx,ebx
  40ccbf:	add    eax,0x89b
  40ccc4:	jmp    0x40d0cf
  40ccc9:	popf   
  40ccca:	call   0xbabc:0x1b7c1940
  40ccd1:	pop    eax
  40ccd2:	out    0xe9,eax
  40ccd4:	jecxz  0x40ccab
  40ccd6:	dec    esi
  40ccd7:	hlt    
  40ccd8:	iret   
  40ccd9:	mov    ebp,0x92bebedf
  40ccde:	les    edi,FWORD PTR [esi-0x70c70942]
  40cce4:	ret    
  40cce5:	dec    edx
  40cce6:	cmp    BYTE PTR [edx-0x4e],dl
  40cce9:	or     cl,cl
  40cceb:	jns    0x40ccd0
  40cced:	ret    
  40ccee:	sbb    DWORD PTR [ecx-0x6a],0x36866846
  40ccf5:	out    dx,eax
  40ccf6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ccf7:	(bad)  
  40ccf8:	mov    esi,0x3db3d6f7
  40ccfd:	mov    ch,ch
  40ccff:	lds    ebx,FWORD PTR [edx]
  40cd01:	xchg   DWORD PTR [eax+ebx*4-0x78],eax
  40cd05:	mov    esp,0xd4aab4d1
  40cd0a:	cld    
  40cd0b:	cli    
  40cd0c:	out    0x7,eax
  40cd0e:	jae    0x40ccf1
  40cd10:	adc    al,0x27
  40cd12:	xchg   BYTE PTR [edi-0x6],al
  40cd15:	sbb    ebp,esp
  40cd17:	fs mov cl,0x82
  40cd1a:	sub    DWORD PTR [edi-0x6],edx
  40cd1d:	sbb    al,0xbc
  40cd1f:	(bad)  
  40cd21:	adc    eax,0x6eca547b
  40cd26:	sahf   
  40cd27:	cmp    al,0x28
  40cd29:	inc    ecx
  40cd2a:	cmp    BYTE PTR [edi],ah
  40cd2c:	pop    esi
  40cd2d:	call   0x3e85525c
  40cd32:	sbb    edx,ebx
  40cd34:	popf   
  40cd35:	ja     0x40cd4f
  40cd37:	fistp  DWORD PTR [esi-0x38]
  40cd3a:	xchg   dh,al
  40cd3c:	cmp    eax,ebp
  40cd3e:	outs   dx,DWORD PTR ds:[esi]
  40cd3f:	push   edx
  40cd40:	pop    edx
  40cd41:	mov    al,0xc0
  40cd43:	mov    cl,0xe5
  40cd45:	imul   eax,DWORD PTR [esi+0x65],0x44fe0507
  40cd4c:	fwait
  40cd4d:	push   ds
  40cd4e:	adc    DWORD PTR [eax],esp
  40cd50:	xchg   edi,eax
  40cd51:	xchg   bh,bl
  40cd53:	in     al,dx
  40cd54:	mov    WORD PTR [esp+eiz*2+0x40],gs
  40cd58:	jne    0x40cce6
  40cd5a:	in     al,dx
  40cd5b:	and    ah,al
  40cd5d:	sub    eax,0xe8c04129
  40cd62:	sub    DWORD PTR [eax-0x3ae6b960],esi
  40cd68:	js     0x40cde1
  40cd6a:	xchg   ebp,eax
  40cd6b:	xor    edi,ebx
  40cd6d:	daa    
  40cd6e:	ds call 0x93e1b39
  40cd74:	clc    
  40cd75:	sub    eax,0x40efb855
  40cd7a:	sub    edi,ebp
  40cd7c:	mov    ch,0xf
  40cd7e:	mov    ds:0x1948ebdf,al
  40cd83:	adc    esi,esp
  40cd85:	lea    eax,[ebx]
  40cd87:	psubusb mm0,mm0
  40cd8a:	test   DWORD PTR [edi+0x65db8a71],edi
  40cd90:	xchg   BYTE PTR [ecx],dh
  40cd92:	nop
  40cd93:	push   edx
  40cd94:	pusha  
  40cd95:	gs sbb al,0x25
  40cd98:	xor    dh,cl
  40cd9a:	inc    ecx
  40cd9b:	retf   
  40cd9c:	cmp    ecx,edi
  40cd9e:	pusha  
  40cd9f:	add    eax,0x80e96076
  40cda4:	mov    ebp,0xb63b0cc8
  40cda9:	push   edi
  40cdaa:	and    BYTE PTR [ebx],dl
  40cdac:	addr16 push esp
  40cdae:	jl     0x40cdca
  40cdb0:	jne    0x40ce01
  40cdb2:	cmc    
  40cdb3:	pop    ecx
  40cdb4:	stc    
  40cdb5:	and    eax,0x9ce66408
  40cdba:	inc    esp
  40cdbb:	mov    dh,0xdf
  40cdbd:	push   ebx
  40cdbe:	data16 xor al,0x58
  40cdc1:	or     BYTE PTR [ecx],bh
  40cdc3:	and    DWORD PTR [eax-0x4c3d1226],esp
  40cdc9:	jbe    0x40ce1a
  40cdcb:	test   DWORD PTR [ebx],edi
  40cdcd:	ja     0x40cdb3
  40cdcf:	adc    al,0x56
  40cdd1:	nop    esp
  40cdd4:	mov    esp,0x909261a9
  40cdd9:	nop
  40cdda:	retf   
  40cddb:	sbb    bh,BYTE PTR [ebx]
  40cddd:	(bad)  
  40cddf:	sti    
  40cde0:	test   BYTE PTR [esi-0x6280d33a],ch
  40cde6:	gs pop ecx
  40cde8:	mul    DWORD PTR [ebp+0x45f4e8fd]
  40cdee:	inc    esi
  40cdef:	shr    DWORD PTR [ecx+0xebe19f7],1
  40cdf5:	add    al,0xa2
  40cdf7:	adc    al,0xc1
  40cdf9:	out    dx,al
  40cdfa:	jl     0x40ce1c
  40cdfc:	xchg   ebp,eax
  40cdfd:	int    0x97
  40cdff:	cmp    eax,DWORD PTR [edi]
  40ce01:	sbb    BYTE PTR [edx+0x1715e36d],0x1
  40ce08:	inc    esp
  40ce09:	mov    esi,DWORD PTR [ebp-0x483efb2d]
  40ce0f:	(bad)  
  40ce10:	repz mov ch,0xeb
  40ce13:	sub    dh,BYTE PTR [ecx-0x4e]
  40ce16:	mov    BYTE PTR [ecx],bh
  40ce18:	es pop edx
  40ce1a:	dec    ebx
  40ce1b:	leave  
  40ce1c:	push   ecx
  40ce1d:	loope  0x40ce2f
  40ce1f:	cli    
  40ce20:	ficomp WORD PTR [ecx+ebx*1+0x452a4211]
  40ce27:	mov    dl,0x9d
  40ce29:	out    0xc2,eax
  40ce2b:	retf   
  40ce2c:	pusha  
  40ce2d:	imul   ecx,DWORD PTR [ebx-0x76],0xe36b3ab0
  40ce34:	dec    edx
  40ce35:	or     ecx,DWORD PTR [ebx-0x19]
  40ce38:	es push cs
  40ce3a:	sar    DWORD PTR [ecx+0x35c2f06b],cl
  40ce40:	enter  0x6969,0xc7
  40ce44:	add    cl,ch
  40ce46:	and    bl,ah
  40ce48:	je     0x40ce3c
  40ce4a:	ja     0x40cdd9
  40ce4c:	enter  0x7a4c,0xfd
  40ce50:	cli    
  40ce51:	dec    esi
  40ce52:	add    esi,ebx
  40ce54:	mov    edx,0x4fe9f72b
  40ce59:	mov    cl,0x6d
  40ce5b:	jo     0x40cec2
  40ce5d:	fsubr  DWORD PTR [ebp+0x5fd3d69f]
  40ce63:	scas   eax,DWORD PTR es:[edi]
  40ce64:	xchg   edx,eax
  40ce65:	fstp   DWORD PTR [eax+0x6086ecee]
  40ce6b:	lock push 0x9d262dc6
  40ce71:	ins    DWORD PTR es:[edi],dx
  40ce72:	mov    ds:0x75467bf2,al
  40ce77:	cs loope 0x40ceac
  40ce7a:	repz add ebp,DWORD PTR fs:[edx]
  40ce7e:	cmp    eax,0xc4374f5f
  40ce83:	and    eax,DWORD PTR [eax+0x67]
  40ce86:	adc    bl,ch
  40ce88:	xor    eax,0x15a0a583
  40ce8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce8e:	fst    DWORD PTR ds:0x25f7a91
  40ce94:	lock cmp ecx,DWORD PTR [ebx+0x8fef0c1]
  40ce9b:	arpl   WORD PTR [ebp+0x3b178542],di
  40cea1:	cmp    bh,dl
  40cea3:	aaa    
  40cea4:	dec    edx
  40cea5:	push   edi
  40cea6:	adc    eax,0x75cbe764
  40ceab:	inc    eax
  40ceac:	fstp   st(1)
  40ceae:	les    edx,FWORD PTR [esi+0x46823c8b]
  40ceb4:	inc    edx
  40ceb5:	stos   BYTE PTR es:[edi],al
  40ceb6:	mov    edx,0x399ab204
  40cebb:	ja     0x40cf33
  40cebd:	pop    ss
  40cebe:	hlt    
  40cebf:	lea    edi,[eax+ebp*2-0x6]
  40cec3:	push   esp
  40cec4:	push   esi
  40cec5:	pusha  
  40cec6:	fcmovnu st,st(1)
  40cec8:	and    ecx,DWORD PTR [eax-0x22cd75fb]
  40cece:	lea    ecx,[ecx+0x6f286fa4]
  40ced4:	mov    dh,0x48
  40ced6:	aas    
  40ced7:	hlt    
  40ced8:	push   0x78
  40ceda:	and    DWORD PTR ss:[ebx],ebp
  40cedd:	sbb    edi,esi
  40cedf:	retf   0x4251
  40cee2:	cmp    ecx,DWORD PTR ds:0x6def2436
  40cee8:	pop    ss
  40cee9:	stos   DWORD PTR es:[edi],eax
  40ceea:	cmp    eax,0x86c95d5c
  40ceef:	or     BYTE PTR [edi-0x2f3f4ad3],al
  40cef5:	adc    al,0xbd
  40cef7:	hlt    
  40cef8:	pushf  
  40cef9:	(bad)  
  40cefa:	out    dx,al
  40cefb:	fist   WORD PTR [ecx]
  40cefd:	call   0xc5c3c58d
  40cf02:	jl     0x40cec1
  40cf04:	mov    DWORD PTR [edx+0x5bedfcf9],0x5ba9d728
  40cf0e:	mov    esp,0x87ad59cf
  40cf13:	pushf  
  40cf14:	fdiv   QWORD PTR [ebp+0x6]
  40cf17:	imul   edi,DWORD PTR [eax+0x40],0x5ba22010
  40cf1e:	inc    esi
  40cf1f:	xchg   esp,eax
  40cf20:	int    0x1f
  40cf22:	stos   DWORD PTR es:[edi],eax
  40cf23:	mov    esi,0xe631aba8
  40cf28:	sub    DWORD PTR [edi-0x4d],edx
  40cf2b:	popa   
  40cf2c:	cmp    eax,0x66d6dfc7
  40cf31:	sbb    ah,BYTE PTR [esi]
  40cf33:	or     eax,0x365ce5e3
  40cf38:	sbb    ecx,DWORD PTR [edx]
  40cf3a:	xchg   esp,eax
  40cf3b:	add    BYTE PTR [ebx+0x10],bl
  40cf3e:	ins    DWORD PTR es:[edi],dx
  40cf3f:	(bad)  [esi+0x8c65f1f]
  40cf45:	(bad)
  40cf48:	inc    esp
  40cf49:	ins    BYTE PTR es:[edi],dx
  40cf4a:	into   
  40cf4b:	and    ah,bh
  40cf4d:	jg     0x40cf9f
  40cf4f:	mov    ebp,0x291f9050
  40cf54:	into   
  40cf55:	jne    0x40cfc9
  40cf57:	icebp  
  40cf58:	mov    bh,BYTE PTR [edi-0x723b6a68]
  40cf5e:	cmp    DWORD PTR [esi+edx*2],esi
  40cf61:	mov    edi,edx
  40cf63:	inc    esp
  40cf64:	aas    
  40cf65:	lea    eax,[eax+0x3e]
  40cf68:	test   eax,0xc586749
  40cf6d:	icebp  
  40cf6e:	call   0x6c8bce8d
  40cf73:	adc    DWORD PTR [eax-0x4bc92675],edi
  40cf79:	push   cs
  40cf7a:	and    al,0xe4
  40cf7c:	in     al,dx
  40cf7d:	jo     0x40cf49
  40cf7f:	and    eax,0x5048ec11
  40cf84:	out    0xf2,al
  40cf86:	rol    BYTE PTR [ecx-0x1b],0xe8
  40cf8a:	inc    eax
  40cf8b:	in     eax,dx
  40cf8c:	mov    bh,0xe8
  40cf8e:	leave  
  40cf8f:	xchg   esp,eax
  40cf90:	jne    0x40cfdf
  40cf92:	or     BYTE PTR [ebx+0x5d],dh
  40cf95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf96:	arpl   WORD PTR [eax-0x5b7aba68],bx
  40cf9c:	sub    esp,DWORD PTR [esi-0x29]
  40cf9f:	xor    BYTE PTR [edx+0x6ea4deb9],al
  40cfa5:	add    cl,dh
  40cfa7:	shl    ecx,0x6c
  40cfaa:	rcr    esp,cl
  40cfac:	aad    0xce
  40cfae:	mov    esi,0xa2767fb4
  40cfb3:	mov    dh,BYTE PTR [ebx]
  40cfb5:	add    eax,0x406633c3
  40cfba:	inc    ebp
  40cfbb:	and    esi,DWORD PTR [ecx+0x1c42cff4]
  40cfc1:	scas   eax,DWORD PTR es:[edi]
  40cfc2:	xchg   edi,eax
  40cfc3:	(bad)  
  40cfc4:	pop    es
  40cfc5:	fistp  DWORD PTR [ebp-0x2edb4116]
  40cfcb:	test   BYTE PTR [eax+0x4],bl
  40cfce:	sub    al,0x22
  40cfd0:	test   ebp,edi
  40cfd2:	psadbw mm3,QWORD PTR [ecx-0x44fc2ac0]
  40cfd9:	inc    ebp
  40cfda:	adc    ch,BYTE PTR ds:0xd880712e
  40cfe0:	mov    esp,0xd230e9a8
  40cfe5:	cmp    al,0x91
  40cfe7:	mov    eax,ds:0x97289fa9
  40cfec:	mov    ds:0x77731659,al
  40cff1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cff2:	in     eax,0x2e
  40cff4:	call   0x344:0xda7e6367
  40cffb:	mov    eax,0xad827b57
  40d000:	jmp    0xcdf4:0x3236dd29
  40d007:	xchg   ebx,eax
  40d008:	ficomp DWORD PTR [eax-0x17]
  40d00b:	xlat   BYTE PTR ds:[ebx]
  40d00c:	pop    ds
  40d00d:	ss push esp
  40d00f:	bound  eax,QWORD PTR [esi+0x55717b13]
  40d015:	jnp    0x40cfaf
  40d017:	xchg   esi,eax
  40d018:	(bad)  
  40d019:	and    DWORD PTR ss:[eax-0x36912744],ebx
  40d020:	xchg   ecx,eax
  40d021:	lahf   
  40d022:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d023:	cmp    eax,0x89a7f993
  40d028:	xor    eax,0xc1169f08
  40d02d:	clc    
  40d02e:	mov    eax,0xa330cff5
  40d033:	outs   dx,BYTE PTR ds:[esi]
  40d034:	or     edx,eax
  40d036:	fadd   DWORD PTR [esi+0x21f1ae54]
  40d03c:	fbld   TBYTE PTR [esp+esi*4]
  40d03f:	lahf   
  40d040:	clc    
  40d041:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d043:	in     eax,dx
  40d044:	pop    ebp
  40d045:	repnz dec ecx
  40d047:	jnp    0x40cfff
  40d049:	or     eax,0xf9bbfd92
  40d04e:	leave  
  40d04f:	or     al,0x8a
  40d051:	aad    0xdf
  40d053:	xor    al,0xcc
  40d055:	mov    ds:0x500d561e,al
  40d05a:	mov    ds:0x17ce4bdf,al
  40d05f:	js     0x40d0d9
  40d061:	nop
  40d062:	or     ch,BYTE PTR [ebp-0x4a764758]
  40d068:	mov    al,BYTE PTR [edi+0x7881af8d]
  40d06e:	mov    al,0xc5
  40d070:	mov    cl,0x65
  40d072:	retf   
  40d073:	xchg   edi,eax
  40d074:	sub    ah,BYTE PTR [ecx-0x173b4c3d]
  40d07a:	cdq    
  40d07b:	push   ebp
  40d07c:	mov    ebp,0x5c870de8
  40d081:	push   es
  40d082:	mov    ah,0xe6
  40d084:	sub    eax,0x66ae545d
  40d089:	sbb    eax,0x58a5423a
  40d08e:	and    cl,BYTE PTR [ebx-0x7cd930]
  40d094:	xor    BYTE PTR [ecx+0x5],0xcf
  40d098:	cmp    BYTE PTR [ebp+0x37e5032b],cl
  40d09e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d09f:	dec    esi
  40d0a0:	loop   0x40d09d
  40d0a2:	lods   al,BYTE PTR ds:[esi]
  40d0a3:	mov    esp,0x922c6f07
  40d0a8:	mov    bh,0x2d
  40d0aa:	pop    esp
  40d0ab:	xlat   BYTE PTR ds:[ebx]
  40d0ac:	fcomp  DWORD PTR [ebx+0x1b13bdff]
  40d0b2:	mov    ebp,0xee62167
  40d0b7:	imul   edi,esp,0x627933e5
  40d0bd:	inc    ecx
  40d0be:	mov    bh,0x58
  40d0c0:	fidivr WORD PTR [ecx+0x4c4c67cb]
  40d0c6:	imul   ebx,DWORD PTR [edi+0x5d],0xb17a802e
  40d0cd:	shl    BYTE PTR [edx-0x7c1fba77],1
  40d0d3:	rcr    BYTE PTR [edx-0x77],cl
  40d0d6:	push   ebp
  40d0d7:	in     al,0xc7
  40d0d9:	inc    ebp
  40d0da:	and    BYTE PTR [edi+ecx*1+0x45c70000],0x90
  40d0e2:	mov    fs,WORD PTR [ecx+0x0]
  40d0e5:	add    bh,al
  40d0e7:	inc    ebp
  40d0e8:	xchg   esp,eax
  40d0e9:	adc    DWORD PTR [eax],ecx
  40d0eb:	add    BYTE PTR [eax],al
  40d0ed:	mov    DWORD PTR [ebp-0x98],0x42d6904a
  40d0f7:	mov    DWORD PTR [ebp-0x94],0xe82c1
  40d101:	mov    DWORD PTR [ebp-0x88],0x58ff
  40d10b:	mov    DWORD PTR [ebp-0x84],0x7394
  40d115:	xor    eax,eax
  40d117:	inc    eax
  40d118:	mov    DWORD PTR [ebp-0x64],eax
  40d11b:	mov    DWORD PTR [ebp-0x8],0x5f59
  40d122:	mov    DWORD PTR [ebp-0x4],0x652b
  40d129:	mov    DWORD PTR [ebp-0xc],0xf43
  40d130:	mov    DWORD PTR [ebp-0x14],0x22dc
  40d137:	mov    DWORD PTR [ebp-0x2c],0x45d4
  40d13e:	mov    DWORD PTR [ebp-0x30],0x28e1
  40d145:	mov    DWORD PTR [ebp-0x7c],0x5e09
  40d14c:	mov    DWORD PTR [ebp-0x50],0x3910
  40d153:	mov    DWORD PTR [ebp-0x3c],0x5c97
  40d15a:	mov    DWORD PTR [ebp-0x24],0x6111
  40d161:	mov    DWORD PTR [ebp-0x78],ecx
  40d164:	mov    DWORD PTR [ebp-0x34],ecx
  40d167:	mov    DWORD PTR [ebp-0x44],0x207a
  40d16e:	mov    DWORD PTR [ebp-0x60],eax
  40d171:	mov    DWORD PTR [ebp-0x8c],0x7840
  40d17b:	mov    DWORD PTR [ebp-0x4c],0x6b0b
  40d182:	mov    eax,DWORD PTR [ebp-0x30]
  40d185:	or     eax,0x70c5
  40d18a:	add    eax,DWORD PTR [ebp-0x2c]
  40d18d:	mov    ecx,DWORD PTR [ebp-0x14]
  40d190:	or     eax,ecx
  40d192:	mov    ecx,0xce40
  40d197:	sub    ecx,eax
  40d199:	jmp    0x40d5a4
  40d19e:	imul   eax,ebx,0xb67c365b
  40d1a4:	lods   al,BYTE PTR ds:[esi]
  40d1a5:	xchg   esp,eax
  40d1a6:	adc    dl,0x9e
  40d1a9:	nop
  40d1aa:	mov    al,cs:0xe791e3ac
  40d1b0:	mov    esi,0xbec492be
  40d1b5:	mov    esi,0x92706f55
  40d1ba:	push   ecx
  40d1bb:	in     al,0xe6
  40d1bd:	jno    0x40d1aa
  40d1bf:	shr    ch,0x65
  40d1c2:	ret    
  40d1c3:	call   0xed89:0x84404d21
  40d1ca:	dec    ecx
  40d1cb:	xor    dh,BYTE PTR [esi+0x1d71fc18]
  40d1d1:	(bad)  
  40d1d2:	or     DWORD PTR [eax+edi*2-0x21],esi
  40d1d6:	or     DWORD PTR [edx-0x6a9f532d],edx
  40d1dc:	inc    eax
  40d1dd:	jp     0x40d20b
  40d1df:	mov    dl,0x5c
  40d1e1:	test   al,0x6
  40d1e4:	fs pop es
  40d1e6:	jae    0x40d1af
  40d1e8:	out    0xd3,eax
  40d1ea:	and    BYTE PTR [edi],dl
  40d1ec:	int3   
  40d1ed:	mov    cl,0xa0
  40d1ef:	push   eax
  40d1f0:	int3   
  40d1f1:	in     al,dx
  40d1f2:	aad    0xb8
  40d1f4:	adc    BYTE PTR [ebx+ebp*1+0x71],bh
  40d1f8:	or     BYTE PTR [edi],dl
  40d1fa:	adc    BYTE PTR [ebp+0x46],ah
  40d1fd:	lods   al,BYTE PTR ds:[esi]
  40d1fe:	mov    edx,0xf5a4f75a
  40d203:	xchg   ebx,eax
  40d204:	fnstenv [ecx-0x58e09687]
  40d20a:	pop    esi
  40d20b:	stos   BYTE PTR es:[edi],al
  40d20c:	std    
  40d20d:	sbb    eax,0xd4fce239
  40d212:	mov    al,0xdb
  40d214:	sti    
  40d215:	add    eax,0xb3be4e6c
  40d21a:	ret    
  40d21b:	jno    0x40d1f1
  40d21d:	in     al,dx
  40d21e:	mov    bh,0xd0
  40d220:	sahf   
  40d221:	rcl    BYTE PTR [edx+esi*1],0x85
  40d225:	loope  0x40d1f6
  40d227:	iret   
  40d228:	ficomp DWORD PTR [ecx-0x51795643]
  40d22e:	test   al,0x2e
  40d230:	push   0xffffffa9
  40d232:	xor    eax,0xa9ef302e
  40d237:	xlat   BYTE PTR ds:[ebx]
  40d238:	mov    esi,0x22dbf521
  40d23d:	ins    BYTE PTR es:[edi],dx
  40d23e:	ins    DWORD PTR es:[edi],dx
  40d23f:	sbb    DWORD PTR [eax],esi
  40d241:	dec    ebp
  40d242:	push   es
  40d243:	dec    edx
  40d244:	fmul   DWORD PTR [ebp+0xe]
  40d247:	mov    eax,eax
  40d249:	jo     0x40d1f6
  40d24b:	mov    esi,0x763c4541
  40d250:	popf   
  40d251:	xchg   edx,eax
  40d252:	bound  ebp,QWORD PTR [edi]
  40d254:	(bad)  
  40d255:	int3   
  40d256:	stos   DWORD PTR es:[edi],eax
  40d257:	sub    eax,0xf0def99
  40d25c:	pop    edx
  40d25d:	int    0xad
  40d25f:	enter  0x3737,0x3e
  40d263:	fadd   QWORD PTR [ebp-0x42]
  40d266:	out    0x93,eax
  40d268:	mov    ?,WORD PTR [esi-0x4b19824]
  40d26e:	retf   0x3104
  40d271:	mov    dl,BYTE PTR [esi+0x71]
  40d274:	aam    0x96
  40d276:	jne    0x40d268
  40d278:	jns    0x40d293
  40d27a:	ins    DWORD PTR es:[edi],dx
  40d27b:	mov    ds:0xca9b5f3e,eax
  40d280:	jnp    0x40d273
  40d282:	dec    eax
  40d283:	xchg   esp,eax
  40d284:	idiv   BYTE PTR [edx+0x6c192e76]
  40d28a:	inc    edi
  40d28b:	std    
  40d28c:	test   DWORD PTR [ecx+0x3e2376e6],ebx
  40d292:	sub    al,BYTE PTR [edi+0x6c31e128]
  40d298:	mov    esi,0x8e71bc8
  40d29d:	test   DWORD PTR [ebp+0x37],edx
  40d2a0:	sub    eax,DWORD PTR [esp+ebp*8+0x2f]
  40d2a4:	mov    cl,0xb
  40d2a7:	arpl   si,di
  40d2a9:	jae    0x40d321
  40d2ab:	add    al,0x24
  40d2ad:	les    edi,FWORD PTR [ecx]
  40d2af:	sub    esi,DWORD PTR [ebp+0x42]
  40d2b2:	dec    esi
  40d2b3:	mov    ebx,DWORD PTR [edx]
  40d2b5:	add    DWORD PTR [eax+0x49],esi
  40d2b8:	mov    eax,0x88cc7bd4
  40d2bd:	jg     0x40d33e
  40d2bf:	dec    ebp
  40d2c0:	ret    0x985c
  40d2c3:	stos   DWORD PTR es:[edi],eax
  40d2c4:	adc    esp,DWORD PTR [edi-0x65]
  40d2c7:	pop    ebx
  40d2c8:	ret    
  40d2c9:	es mov dh,0x10
  40d2cc:	sbb    edx,0x29813494
  40d2d2:	bound  ecx,QWORD PTR [esi+0x424fe703]
  40d2d8:	push   edi
  40d2d9:	scas   al,BYTE PTR es:[edi]
  40d2da:	into   
  40d2db:	in     eax,dx
  40d2dc:	enter  0xf36c,0x90
  40d2e0:	lds    ebx,FWORD PTR [ebx-0x4e]
  40d2e3:	pusha  
  40d2e4:	dec    ebp
  40d2e5:	xchg   esi,eax
  40d2e6:	loope  0x40d361
  40d2e8:	dec    esi
  40d2e9:	push   edi
  40d2ea:	fimul  WORD PTR [eax+0x60a10d12]
  40d2f0:	pop    esp
  40d2f1:	mov    ebx,0x81eb6ddf
  40d2f6:	out    dx,al
  40d2f7:	xchg   ebx,eax
  40d2f8:	cmp    ah,BYTE PTR [esi+ecx*1+0xb4e0642]
  40d2ff:	call   0x7271:0xc4e382f1
  40d306:	push   esp
  40d307:	dec    esp
  40d308:	mov    ecx,0xc68a8bb9
  40d30d:	jb     0x40d32a
  40d30f:	out    0x5d,al
  40d311:	or     edx,DWORD PTR [esi]
  40d313:	push   eax
  40d314:	gs loopne 0x40d384
  40d317:	loope  0x40d377
  40d319:	xor    bh,BYTE PTR [ebp-0x6c44d4b7]
  40d31f:	(bad)  
  40d320:	retf   
  40d321:	mov    cl,0x4a
  40d323:	popa   
  40d324:	push   eax
  40d325:	scas   al,BYTE PTR es:[edi]
  40d326:	mov    bl,0x32
  40d328:	ja     0x40d2ea
  40d32a:	xchg   esp,eax
  40d32b:	fsub   DWORD PTR [ebp+0x4]
  40d32e:	ret    
  40d32f:	jbe    0x40d2fb
  40d331:	jmp    0x2de5:0xc3e663e8
  40d338:	mul    BYTE PTR [eax]
  40d33a:	ins    DWORD PTR es:[edi],dx
  40d33b:	mov    bh,0x48
  40d33d:	int3   
  40d33e:	outs   dx,DWORD PTR ds:[esi]
  40d33f:	sub    al,0x61
  40d341:	aad    0x63
  40d343:	or     esi,esi
  40d345:	daa    
  40d346:	stos   DWORD PTR es:[edi],eax
  40d347:	(bad)  
  40d348:	xchg   ebx,eax
  40d349:	fsubr  st(0),st
  40d34b:	fstp   TBYTE PTR [ebx]
  40d34d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d34e:	(bad)  
  40d34f:	push   DWORD PTR [esi]
  40d351:	mov    al,0xe8
  40d353:	fiadd  WORD PTR [edx+0x6b]
  40d356:	je     0x40d343
  40d358:	jp     0x40d2de
  40d35a:	ret    
  40d35b:	cmp    DWORD PTR [ebp-0x3743a035],0x1303ba4f
  40d365:	dec    edi
  40d366:	(bad)  
  40d367:	cmp    eax,0x902948d0
  40d36c:	adc    eax,0x21eaf89e
  40d371:	jle    0x40d369
  40d373:	gs pop ebx
  40d375:	(bad)  
  40d376:	outs   dx,BYTE PTR ds:[esi]
  40d377:	scas   eax,DWORD PTR es:[edi]
  40d378:	cmp    DWORD PTR [edi+ebx*1],esp
  40d37b:	dec    edi
  40d37c:	and    DWORD PTR [edx+0xe],ecx
  40d37f:	out    0x13,eax
  40d381:	cli    
  40d382:	dec    ebp
  40d383:	jge    0x40d358
  40d385:	mov    ds:0xa4a3bb55,al
  40d38a:	cdq    
  40d38b:	mov    ds:0xdf5d30e6,eax
  40d390:	mov    al,es:0x6f382cf4
  40d396:	cmp    ecx,DWORD PTR [ebx-0x44158f6a]
  40d39c:	ins    BYTE PTR es:[edi],dx
  40d39d:	and    BYTE PTR [ebx-0x68],ch
  40d3a0:	imul   ebx,DWORD PTR [ebx],0xffffff9e
  40d3a3:	in     eax,0x6b
  40d3a5:	call   0x1aa4c4a7
  40d3aa:	rcr    ebp,1
  40d3ac:	add    al,BYTE PTR [ebx]
  40d3ae:	pop    es
  40d3af:	lahf   
  40d3b0:	push   cs
  40d3b1:	ds aam 0x4c
  40d3b4:	cmp    ecx,DWORD PTR [ebx*2-0x7cc12dd2]
  40d3bb:	shl    BYTE PTR [eax],cl
  40d3bd:	jne    0x40d3f0
  40d3bf:	(bad)  
  40d3c0:	sub    esp,DWORD PTR [edi-0x373d3aa8]
  40d3c6:	je     0x40d419
  40d3c8:	jecxz  0x40d402
  40d3ca:	(bad)  
  40d3cb:	mov    ebx,0x794afa02
  40d3d0:	jge    0x40d408
  40d3d2:	add    DWORD PTR [edi+0x77],ebx
  40d3d5:	jmp    0xb99d:0x14c2ffbb
  40d3dc:	inc    ebx
  40d3dd:	clc    
  40d3de:	shl    DWORD PTR [ebx+0x75],1
  40d3e1:	sub    DWORD PTR [eax+edx*4-0x14],esi
  40d3e5:	inc    ecx
  40d3e6:	cwde   
  40d3e7:	(bad)  
  40d3e8:	popf   
  40d3e9:	ret    0xaed3
  40d3ec:	mov    BYTE PTR [ecx+0x5abf8712],dh
  40d3f2:	ins    BYTE PTR es:[edi],dx
  40d3f3:	(bad)  
  40d3f4:	repz int3 
  40d3f6:	sbb    ebx,esi
  40d3f8:	jnp    0x40d431
  40d3fa:	inc    edi
  40d3fb:	push   0x3f45dc81
  40d400:	fwait
  40d401:	inc    esi
  40d402:	retf   0xc7d4
  40d405:	nop
  40d406:	ins    BYTE PTR es:[edi],dx
  40d407:	xor    eax,0x84d6d5ce
  40d40c:	shl    DWORD PTR [ecx+0x3e27e0b0],cl
  40d412:	adc    dh,BYTE PTR [ecx-0x4c]
  40d415:	cli    
  40d416:	pop    ebx
  40d417:	xchg   BYTE PTR [esi+ebp*2+0xd01eb9b],cl
  40d41e:	dec    ebp
  40d41f:	mov    ebx,0x3e7f5439
  40d424:	out    0xda,al
  40d426:	mov    eax,ds:0xfd4b21bd
  40d42b:	call   0x4a155375
  40d430:	pop    ss
  40d431:	sbb    cl,dl
  40d433:	and    BYTE PTR [ebx-0x3b],ah
  40d436:	jmp    DWORD PTR [ecx]
  40d438:	hlt    
  40d439:	ja     0x40d49d
  40d43b:	inc    esi
  40d43c:	xchg   esp,eax
  40d43d:	add    ch,BYTE PTR [ecx]
  40d43f:	fisttp DWORD PTR [esi]
  40d441:	jb     0x40d3ce
  40d443:	out    dx,al
  40d444:	test   esi,0x621c4067
  40d44a:	(bad)  
  40d44b:	fwait
  40d44c:	ds retf 0xa2e9
  40d450:	out    0x59,al
  40d452:	sbb    eax,0x4a5d9927
  40d457:	cwde   
  40d458:	mov    al,0xb2
  40d45a:	mov    ds:0xd674a2b8,eax
  40d45f:	bound  edx,QWORD PTR [ebp-0x446c785]
  40d465:	dec    ebx
  40d466:	sub    eax,0x9759c359
  40d46b:	or     eax,0x577af38a
  40d470:	mov    esp,0x88614e4e
  40d475:	fiadd  WORD PTR [ecx+esi*1-0x481cde77]
  40d47c:	sub    eax,0x812051f7
  40d481:	mov    eax,ds:0x81874def
  40d486:	inc    esi
  40d487:	adc    dl,BYTE PTR [edx]
  40d489:	sti    
  40d48a:	je     0x40d449
  40d48c:	imul   ebx,DWORD PTR [edx-0x55],0x48
  40d490:	jmp    FWORD PTR [esi+ebx*8-0x26bc4105]
  40d497:	pushf  
  40d498:	push   0x542ccae0
  40d49d:	repz adc al,0x52
  40d4a0:	xchg   edi,eax
  40d4a1:	mov    dl,0x5
  40d4a3:	stc    
  40d4a4:	add    al,BYTE PTR [eax+0x3e06c88f]
  40d4aa:	lahf   
  40d4ab:	retf   
  40d4ac:	jo     0x40d4ab
  40d4ae:	xor    ecx,DWORD PTR fs:[ecx]
  40d4b1:	jp     0x40d49b
  40d4b3:	in     al,dx
  40d4b4:	loopne 0x40d43e
  40d4b6:	mov    eax,ds:0xf4784761
  40d4bb:	add    cl,BYTE PTR [edi*1-0x2c4d84d4]
  40d4c2:	push   ss
  40d4c3:	dec    edi
  40d4c4:	mov    ebp,0xcc4d2727
  40d4c9:	popf   
  40d4ca:	retf   
  40d4cb:	and    dh,dh
  40d4cd:	jl     0x40d49b
  40d4cf:	je     0x40d48e
  40d4d1:	fidiv  WORD PTR [edx]
  40d4d3:	sbb    ecx,DWORD PTR ds:0x3e1c2283
  40d4d9:	inc    esp
  40d4da:	test   bh,cl
  40d4dc:	loope  0x40d52e
  40d4de:	sub    DWORD PTR [ebx+0x57f68b8a],eax
  40d4e4:	mov    al,0x5d
  40d4e6:	out    0xcc,eax
  40d4e8:	jo     0x40d4e0
  40d4ea:	out    0xcd,al
  40d4ec:	ins    BYTE PTR es:[edi],dx
  40d4ed:	xor    eax,0x3b320b11
  40d4f2:	xchg   ecx,eax
  40d4f3:	push   eax
  40d4f4:	mov    ah,0x8
  40d4f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4f7:	inc    ebx
  40d4f8:	jge    0x40d52b
  40d4fa:	push   edi
  40d4fb:	aam    0x13
  40d4fd:	outs   dx,DWORD PTR ds:[esi]
  40d4fe:	cmp    DWORD PTR [ebp+0x3d2911f9],esi
  40d504:	push   esi
  40d505:	test   BYTE PTR [ebp+0x4138535d],al
  40d50b:	sub    DWORD PTR [ebx+0x2576fc7d],edi
  40d511:	scas   ax,WORD PTR es:[edi]
  40d513:	push   cs
  40d514:	or     edi,eax
  40d516:	xchg   edx,eax
  40d517:	xchg   edi,eax
  40d518:	push   cs
  40d519:	sbb    ebx,DWORD PTR [ebx+0x72057d68]
  40d51f:	std    
  40d520:	cmp    dh,BYTE PTR [ecx-0x495f626a]
  40d526:	pop    edi
  40d527:	(bad)  
  40d528:	pop    ebp
  40d529:	jne    0x40d4b6
  40d52b:	xchg   esi,eax
  40d52c:	sub    eax,0x4c05c8be
  40d531:	fisub  WORD PTR [eax-0x4fb6c28f]
  40d537:	dec    edi
  40d538:	add    eax,0xe20c6110
  40d53d:	lds    esp,FWORD PTR [ecx-0x51]
  40d540:	or     eax,0x663a9510
  40d545:	ds mov eax,0x44ecdaa9
  40d54b:	retf   0x98cb
  40d54e:	ja     0x40d599
  40d550:	mov    dl,0xce
  40d552:	cmovne eax,DWORD PTR [esi+0x42]
  40d556:	jl     0x40d508
  40d558:	add    esi,DWORD PTR [ebx-0x911e1df]
  40d55e:	mov    ebp,0xf8c67018
  40d563:	aas    
  40d564:	retf   
  40d565:	mov    ds:0xd6eece08,eax
  40d56a:	out    0xcc,eax
  40d56c:	sub    al,0x97
  40d56e:	out    0xf0,al
  40d570:	repnz dec ebx
  40d572:	(bad)
  40d576:	in     eax,0xff
  40d578:	(bad)  
  40d579:	and    BYTE PTR fs:[edx-0x515ccf],0x4
  40d581:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40d583:	or     DWORD PTR [ebp-0x2b95694d],ecx
  40d589:	test   eax,0x31e4d921
  40d58e:	sar    ecx,0xce
  40d591:	int    0x58
  40d593:	dec    esi
  40d594:	ds shl edx,cl
  40d597:	mov    ecx,DWORD PTR [edx-0x738993d5]
  40d59d:	cmp    al,0x2e
  40d59f:	fdivr  DWORD PTR [ebp-0x1c]
  40d5a2:	je     0x40d5c8
  40d5a4:	mov    eax,DWORD PTR [ebp-0xc]
  40d5a7:	sub    ecx,eax
  40d5a9:	imul   ecx,ecx,0x7480
  40d5af:	add    ecx,DWORD PTR [ebp-0x58]
  40d5b2:	mov    eax,DWORD PTR [ebp-0x8]
  40d5b5:	push   ecx
  40d5b6:	mov    ecx,DWORD PTR [ebp-0x4]
  40d5b9:	lea    eax,[ecx+eax*1-0x1e6d]
  40d5c0:	mov    ecx,DWORD PTR [ebp-0x64]
  40d5c3:	xor    edx,edx
  40d5c5:	div    ecx
  40d5c7:	mov    ecx,DWORD PTR [ebp-0x74]
  40d5ca:	lea    eax,[eax+ecx*1-0xa617]
  40d5d1:	push   eax
  40d5d2:	mov    eax,DWORD PTR [ebp-0x88]
  40d5d8:	mov    ecx,DWORD PTR [ebp-0x84]
  40d5de:	push   0x770a
  40d5e3:	push   0x2a0c
  40d5e8:	push   ecx
  40d5e9:	push   eax
  40d5ea:	call   0x41594e
  40d5ef:	mov    ecx,DWORD PTR [ebp-0x98]
  40d5f5:	mov    esi,DWORD PTR [ebp-0x94]
  40d5fb:	push   esi
  40d5fc:	push   ecx
  40d5fd:	or     edx,0x615d
  40d603:	or     eax,0x455c
  40d608:	push   edx
  40d609:	push   eax
  40d60a:	call   0x4222ab
  40d60f:	mov    ecx,DWORD PTR [ebp-0x70]
  40d612:	mov    edx,DWORD PTR [ebp-0x6c]
  40d615:	xor    eax,ecx
  40d617:	mov    ecx,DWORD PTR [ebp-0x20]
  40d61a:	mov    edx,DWORD PTR [ebp-0x1c]
  40d61d:	mov    esi,DWORD PTR [ebp-0x80]
  40d620:	and    eax,0xb49
  40d625:	add    esi,0x629b
  40d62b:	lea    eax,[eax+ecx*1-0xfd]
  40d632:	xor    esi,0x4994
  40d638:	push   eax
  40d639:	lea    esi,[ebp+esi*1-0x3c93]
  40d640:	call   0x40dbf7
  40d645:	mov    ecx,eax
  40d647:	mov    eax,DWORD PTR [ebp-0x50]
  40d64a:	mov    edx,DWORD PTR [ebp-0x7c]
  40d64d:	sub    eax,0x161
  40d652:	xor    eax,edx
  40d654:	imul   eax,eax,0x5151
  40d65a:	add    eax,0x3901
  40d65f:	xor    eax,0x40c2
  40d664:	xor    edx,edx
  40d666:	mov    esi,0x218f6c45
  40d66b:	div    esi
  40d66d:	cmp    ecx,eax
  40d66f:	jne    0x40d7dc
  40d675:	mov    ecx,DWORD PTR [ebp-0x78]
  40d678:	xor    edx,edx
  40d67a:	mov    eax,0x209c
  40d67f:	div    ecx
  40d681:	mov    ecx,DWORD PTR ds:0x422738
  40d687:	mov    ecx,DWORD PTR [ecx+0x1a8]
  40d68d:	xor    edx,edx
  40d68f:	sub    ecx,eax
  40d691:	mov    eax,DWORD PTR [ebp-0x4c]
  40d694:	xor    eax,0x3daa
  40d699:	sub    eax,0x3375
  40d69e:	or     eax,0x6931
  40d6a3:	lea    eax,[ebp+eax*1-0x6c25]
  40d6aa:	push   eax
  40d6ab:	mov    eax,DWORD PTR [ebp-0x8c]
  40d6b1:	push   0x18
  40d6b3:	pop    esi
  40d6b4:	div    esi
  40d6b6:	mov    esi,DWORD PTR [ebp-0x60]
  40d6b9:	xor    edx,edx
  40d6bb:	div    esi
  40d6bd:	mov    edx,DWORD PTR [ebp-0x44]
  40d6c0:	mov    esi,DWORD PTR [ebp-0x34]
  40d6c3:	xor    eax,edx
  40d6c5:	xor    edx,edx
  40d6c7:	div    esi
  40d6c9:	imul   eax,eax,0x7d2a
  40d6cf:	sub    eax,0x928ded7
  40d6d4:	push   eax
  40d6d5:	mov    eax,ds:0x422738
  40d6da:	add    eax,0xaa
  40d6df:	push   eax
  40d6e0:	mov    eax,DWORD PTR [ebp-0x3c]
  40d6e3:	sub    ecx,eax
  40d6e5:	mov    eax,DWORD PTR [ebp-0x24]
  40d6e8:	push   DWORD PTR [ecx+eax*1+0xbd4]
  40d6ef:	call   0x41b447
  40d6f4:	mov    DWORD PTR [ebp-0x4],eax
  40d6f7:	mov    ecx,DWORD PTR ds:0x422840
  40d6fd:	lea    eax,[ebp+0x4]
  40d700:	mov    DWORD PTR [ecx*4+0x422838],eax
  40d707:	inc    DWORD PTR ds:0x422840
  40d70d:	mov    eax,DWORD PTR [ebp-0x4]
  40d710:	mov    eax,DWORD PTR [ebp-0x4]
  40d713:	xor    edx,edx
  40d715:	shld   edx,eax,0x2
  40d719:	shl    eax,0x2
  40d71c:	mov    ecx,0xcb79b576
  40d721:	mov    esi,0x9c2b8ae8
  40d726:	xor    eax,ecx
  40d728:	xor    edx,esi
  40d72a:	cmp    eax,ecx
  40d72c:	jne    0x40d746
  40d732:	cmp    edx,esi
  40d734:	jne    0x40d746
  40d73a:	mov    eax,0xcb79b572
  40d73f:	mov    edx,esi
  40d741:	jmp    0x40dbf1
  40d746:	lea    eax,[ebp-0x10]
  40d749:	mov    DWORD PTR [ebp-0x9c],eax
  40d74f:	mov    eax,DWORD PTR [ebp-0x54]
  40d752:	mov    DWORD PTR [ebp-0x10],eax
  40d755:	mov    eax,DWORD PTR [ebp-0x10]
  40d758:	mov    ecx,DWORD PTR [ebp-0x4]
  40d75b:	sub    eax,ecx
  40d75d:	mov    DWORD PTR [ebp-0x10],eax
  40d760:	mov    eax,DWORD PTR [ebp-0x20]
  40d763:	mov    ecx,DWORD PTR [ebp-0x1c]
  40d766:	sub    DWORD PTR [ebp-0x10],eax
  40d769:	mov    eax,DWORD PTR [ebp-0x4]
  40d76c:	mov    DWORD PTR [eax],0x658776e9
  40d772:	mov    DWORD PTR [eax+0x4],0xab756547
  40d779:	mov    eax,DWORD PTR [ebp-0x10]
  40d77c:	mov    ecx,DWORD PTR [ebp-0x4]
  40d77f:	mov    DWORD PTR [ecx+0x1],eax
  40d782:	mov    eax,ds:0x4225b4
  40d787:	push   DWORD PTR [eax]
  40d789:	push   DWORD PTR ds:0x422828
  40d78f:	push   DWORD PTR ds:0x4225bc
  40d795:	push   DWORD PTR ds:0x422808
  40d79b:	push   DWORD PTR ds:0x42287c
  40d7a1:	push   0xa5069baa
  40d7a6:	push   0xa5069bae
  40d7ab:	push   DWORD PTR [ebp-0x5c]
  40d7ae:	mov    eax,DWORD PTR [ebp-0x4]
  40d7b1:	call   eax
  40d7b3:	mov    eax,DWORD PTR [edi]
  40d7b5:	mov    eax,DWORD PTR [ebp+0x8]
  40d7b8:	push   DWORD PTR [eax]
  40d7ba:	call   0x40e823
  40d7bf:	mov    eax,ds:0x422738
  40d7c4:	push   0x4
  40d7c6:	add    eax,0x1dc
  40d7cb:	push   eax
  40d7cc:	push   edi
  40d7cd:	call   0x411c08
  40d7d2:	mov    eax,0xcb79b57e
  40d7d7:	jmp    0x40d73f
  40d7dc:	mov    eax,0xcb79b576
  40d7e1:	mov    edx,0x9c2b8ae8
  40d7e6:	jmp    0x40dbf1
  40d7eb:	hlt    
  40d7ec:	scas   eax,DWORD PTR es:[edi]
  40d7ed:	je     0x40d848
  40d7ef:	mov    ah,0x9a
  40d7f1:	cld    
  40d7f2:	mov    eax,0x90d1c6c0
  40d7f7:	mul    ch
  40d7f9:	adc    BYTE PTR [esi-0x41410f9b],bl
  40d7ff:	xchg   edx,eax
  40d800:	les    edi,FWORD PTR [esi-0x1a78742]
  40d806:	mov    esi,DWORD PTR [ebp-0x1fe785e4]
  40d80c:	imul   edx,DWORD PTR [edx-0x3a],0xd85f1e06
  40d813:	push   ds
  40d814:	adc    DWORD PTR [ecx+0x42ab587e],esp
  40d81a:	dec    edx
  40d81b:	jne    0x40d7b0
  40d81d:	out    0x18,eax
  40d81f:	mov    ebp,0xde5ceb2d
  40d824:	ds pop es
  40d826:	add    ebx,DWORD PTR [eax]
  40d828:	hlt    
  40d829:	xchg   ebx,eax
  40d82a:	mov    ch,0x30
  40d82c:	ss add dh,cl
  40d82f:	sub    ecx,DWORD PTR [edi]
  40d831:	adc    ecx,DWORD PTR [edi+esi*1+0x1c2bac72]
  40d838:	repz jbe 0x40d805
  40d83b:	or     al,0x6d
  40d83d:	push   edx
  40d83e:	sub    DWORD PTR [esi],ebp
  40d840:	adc    DWORD PTR [edx-0x15],esp
  40d843:	leave  
  40d844:	(bad)  [ecx-0x34]
  40d847:	sar    DWORD PTR [ebp+0x42],1
  40d84a:	fwait
  40d84b:	outs   dx,DWORD PTR ds:[esi]
  40d84c:	ins    DWORD PTR es:[edi],dx
  40d84d:	pop    esi
  40d84e:	sbb    DWORD PTR [edx+edx*8+0x41a4a12b],ecx
  40d855:	test   al,0xd
  40d857:	jns    0x40d7d9
  40d859:	aas    
  40d85a:	iret   
  40d85b:	cmp    cl,ah
  40d85d:	push   0x16b571e8
  40d862:	mov    edx,0x4dd74876
  40d867:	or     esi,DWORD PTR [ebx]
  40d869:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d86a:	jne    0x40d808
  40d86c:	fs sbb eax,0x41241ddd
  40d872:	cld    
  40d873:	or     al,BYTE PTR [ecx+0x3ba53dbd]
  40d879:	or     cl,ch
  40d87b:	pop    es
  40d87c:	mov    BYTE PTR [ebx+0x68],bh
  40d87f:	int3   
  40d880:	jmp    0xde23:0xd661e96b
  40d887:	inc    ebp
  40d888:	(bad)  
  40d889:	repnz pop esi
  40d88b:	and    bh,BYTE PTR [ecx+eiz*2]
  40d88e:	adc    esp,DWORD PTR ds:[ebx+0x38e75b46]
  40d895:	arpl   WORD PTR [edi-0x6d],bp
  40d898:	mov    al,0x71
  40d89a:	xor    BYTE PTR [esi+esi*1-0x7c],al
  40d89e:	mov    edi,0xdf5963d8
  40d8a3:	sbb    BYTE PTR [eax-0xb],0x40
  40d8a7:	(bad)  
  40d8a8:	sub    bh,ah
  40d8aa:	mov    dl,0x53
  40d8ac:	sbb    DWORD PTR [ebx+edi*4-0x655180f5],0xbb6726d9
  40d8b7:	xor    ch,BYTE PTR [esp+eiz*8]
  40d8ba:	adc    BYTE PTR [eax-0x16],bh
  40d8bd:	scas   al,BYTE PTR es:[edi]
  40d8be:	push   esi
  40d8bf:	xchg   edi,eax
  40d8c0:	call   0xcee4ef3c
  40d8c5:	and    DWORD PTR [esi+0x17],edx
  40d8c8:	popa   
  40d8c9:	jae    0x40d8db
  40d8cb:	retf   
  40d8cc:	push   ds
  40d8cd:	fs iret 
  40d8cf:	mov    ds:0xecfed6a2,eax
  40d8d4:	dec    edi
  40d8d5:	mov    al,0x93
  40d8d7:	jecxz  0x40d94d
  40d8d9:	imul   eax,DWORD PTR [eax+0x7502abd2],0xffffff96
  40d8e0:	iret   
  40d8e1:	mov    al,ds:0x2f028bfd
  40d8e6:	sar    DWORD PTR [eax+0x681c418d],0xcd
  40d8ed:	fadd   DWORD PTR [ecx]
  40d8ef:	push   edx
  40d8f0:	sub    cl,BYTE PTR [eax]
  40d8f2:	popf   
  40d8f3:	jbe    0x40d93a
  40d8f5:	mov    dl,BYTE PTR [ebx-0x2b]
  40d8f8:	push   edi
  40d8f9:	data16 or ch,BYTE PTR [edx-0x6b1b1d11]
  40d900:	cs xchg edi,eax
  40d902:	loop   0x40d8a2
  40d904:	inc    edi
  40d905:	mov    cl,0x10
  40d907:	fs aad 0x41
  40d90a:	fisttp DWORD PTR [ecx-0x4f90d041]
  40d910:	sahf   
  40d911:	or     al,0x7f
  40d913:	jecxz  0x40d8b4
  40d915:	push   ds
  40d916:	retf   0xee4e
  40d919:	gs jns 0x40d8a6
  40d91c:	adc    edx,DWORD PTR [ebx+0x17ba90c5]
  40d922:	sub    DWORD PTR [edi+0x7],edi
  40d925:	(bad)  
  40d926:	and    DWORD PTR [edi-0x3764c2ce],edi
  40d92c:	clc    
  40d92d:	pop    ebp
  40d92e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d92f:	jle    0x40d959
  40d931:	adc    eax,0x6cf5d990
  40d936:	sti    
  40d937:	jg     0x40d92d
  40d939:	test   al,0xb3
  40d93b:	mov    edx,0x48cbf068
  40d940:	and    al,0x49
  40d942:	jo     0x40d90d
  40d944:	lods   al,BYTE PTR ds:[esi]
  40d945:	fbstp  TBYTE PTR ds:0x7f54ee77
  40d94b:	xchg   ebx,eax
  40d94c:	or     ecx,DWORD PTR [edi-0x1475776d]
  40d952:	cld    
  40d953:	mov    cl,0x28
  40d955:	out    0x2b,al
  40d957:	xor    DWORD PTR [edx-0x36e545a3],edx
  40d95d:	fst    DWORD PTR ds:0x4d78795f
  40d963:	int    0x32
  40d965:	sbb    al,0xad
  40d967:	pop    ss
  40d968:	lahf   
  40d969:	(bad)  
  40d96a:	into   
  40d96b:	dec    edx
  40d96c:	fiadd  DWORD PTR [eax+0xff3e8d3]
  40d972:	and    eax,0x5b4e04d7
  40d977:	mov    ds,WORD PTR [esi+ebp*2+0x5fa0b898]
  40d97e:	seto   BYTE PTR [eax*1-0x48d1d7ef]
  40d986:	xchg   BYTE PTR [edi+0x3],dh
  40d989:	jno    0x40d991
  40d98b:	shl    BYTE PTR [edx+0x24787c62],cl
  40d991:	ins    DWORD PTR es:[edi],dx
  40d992:	fs jp  0x40da06
  40d995:	and    ebp,DWORD PTR [esi-0x266d92bd]
  40d99b:	xor    DWORD PTR [edi],edx
  40d99d:	fdiv   QWORD PTR [esi]
  40d99f:	dec    edi
  40d9a0:	cmc    
  40d9a1:	mov    ecx,0x4d8e3ccd
  40d9a6:	lahf   
  40d9a7:	jb     0x40d9cf
  40d9a9:	loopne 0x40d9df
  40d9ab:	jle    0x40da2c
  40d9ad:	xor    ah,BYTE PTR [eax]
  40d9af:	std    
  40d9b0:	mov    ebp,0x8f33badc
  40d9b5:	sub    eax,0xef8e1335
  40d9ba:	cwde   
  40d9bb:	lea    ebx,[ebp+edx*8-0x30a1393b]
  40d9c2:	cmp    eax,0x78cb7048
  40d9c7:	ret    
  40d9c8:	int    0x84
  40d9ca:	js     0x40d966
  40d9cc:	mov    ch,0xc2
  40d9ce:	rol    BYTE PTR es:[ebp+0xd972274],0xc
  40d9d6:	dec    ebp
  40d9d7:	jb     0x40da42
  40d9d9:	add    cl,bh
  40d9db:	xor    dl,BYTE PTR [edi-0x70]
  40d9de:	nop
  40d9df:	dec    esi
  40d9e0:	dec    ecx
  40d9e1:	inc    ecx
  40d9e2:	arpl   WORD PTR [ebx],dx
  40d9e4:	mov    al,0x98
  40d9e6:	daa    
  40d9e7:	rol    dh,0xca
  40d9ea:	ret    0x46c4
  40d9ed:	add    bh,BYTE PTR [eax-0x6b840e37]
  40d9f3:	cmp    DWORD PTR [ebp-0x5a],ebp
  40d9f6:	sbb    dh,BYTE PTR [esp+ecx*1]
  40d9f9:	or     al,0xe3
  40d9fb:	fsubr  DWORD PTR [esi-0xa0f3778]
  40da01:	or     al,0x52
  40da03:	iret   
  40da04:	int3   
  40da05:	in     eax,dx
  40da06:	in     al,0xf4
  40da08:	test   BYTE PTR [esi],cl
  40da0a:	addr16 inc ecx
  40da0c:	ds repnz and eax,0xc2911b0c
  40da13:	jp     0x40da29
  40da15:	shl    DWORD PTR [esi+edi*8+0x7f3158d9],1
  40da1c:	mov    ?,WORD PTR [edx+0x26e3e2d3]
  40da22:	shl    DWORD PTR [esi-0x26cd3656],cl
  40da28:	out    0x73,eax
  40da2a:	retf   
  40da2b:	inc    edi
  40da2c:	sbb    esi,DWORD PTR [ecx+edx*2-0xff3091]
  40da33:	inc    edi
  40da34:	scas   eax,DWORD PTR es:[edi]
  40da35:	cmp    eax,0x43f931d4
  40da3a:	push   es
  40da3b:	in     al,dx
  40da3c:	js     0x40da28
  40da3e:	push   ebp
  40da3f:	pop    ebp
  40da40:	and    al,0x7b
  40da42:	fwait
  40da43:	inc    edx
  40da44:	je     0x40dab5
  40da46:	and    BYTE PTR [ecx+0x48],ch
  40da49:	pop    ebx
  40da4a:	mov    esp,0x242f878d
  40da4f:	xchg   edx,eax
  40da50:	adc    eax,0x39731a07
  40da55:	jp     0x40da09
  40da57:	or     al,0x9f
  40da59:	out    0xa,eax
  40da5b:	cwde   
  40da5c:	or     BYTE PTR [esi-0x3],cl
  40da5f:	jle    0x40dac8
  40da61:	sbb    edi,ebp
  40da63:	mov    al,0x72
  40da65:	push   ebp
  40da66:	jne    0x40d9f5
  40da68:	xchg   esp,esp
  40da6a:	lods   al,BYTE PTR ds:[esi]
  40da6b:	add    DWORD PTR [eax],0x550db74d
  40da71:	stos   DWORD PTR es:[edi],eax
  40da72:	sbb    cl,BYTE PTR [eax-0x10a1dc6]
  40da78:	loope  0x40dada
  40da7a:	fsub   QWORD PTR [edi]
  40da7c:	(bad)  
  40da7d:	mov    WORD PTR [ebx],es
  40da7f:	sbb    eax,0xde7a3908
  40da84:	fnstcw WORD PTR [ecx+esi*2+0x6a9f6fd3]
  40da8b:	jle    0x40daeb
  40da8d:	repnz mov BYTE PTR [eax+0x68],ch
  40da91:	test   DWORD PTR [esi+edi*8+0x161cfabe],edx
  40da98:	adc    BYTE PTR [edi+0x14],ah
  40da9b:	and    al,0xa4
  40da9d:	rcl    DWORD PTR [eax+0x6d],0xae
  40daa1:	test   eax,0xe53714ef
  40daa6:	mov    bh,0x98
  40daa8:	stos   BYTE PTR es:[edi],al
  40daa9:	pop    eax
  40daaa:	arpl   WORD PTR [esi],dx
  40daac:	in     al,dx
  40daad:	xlat   BYTE PTR ds:[ebx]
  40daae:	xor    ah,BYTE PTR [ebx-0x4c]
  40dab1:	int3   
  40dab2:	add    ch,BYTE PTR [ecx]
  40dab4:	enter  0x1053,0xdc
  40dab8:	ins    DWORD PTR es:[edi],dx
  40dab9:	mov    cl,0xd5
  40dabb:	das    
  40dabc:	rcr    DWORD PTR [ecx],1
  40dabe:	mov    eax,0x82e2338b
  40dac3:	mov    esp,0x80098a8f
  40dac8:	sbb    al,0x23
  40daca:	call   0xd916:0x468e677c
  40dad1:	loopne 0x40daad
  40dad3:	sar    edi,cl
  40dad5:	lods   al,BYTE PTR ds:[esi]
  40dad6:	or     bl,BYTE PTR [edi]
  40dad8:	(bad)  
  40dad9:	sbb    BYTE PTR [ebx-0x77],bl
  40dadc:	mov    edx,0x14ef3ef2
  40dae1:	dec    edi
  40dae2:	mov    al,ds:0x4103a398
  40dae7:	mov    eax,0xf7e1f3d2
  40daec:	in     al,dx
  40daed:	dec    edi
  40daee:	cs out 0xc,eax
  40daf1:	mov    ebp,0x46317926
  40daf6:	test   esi,0x84798d6a
  40dafc:	and    ebx,DWORD PTR [eax+ebx*1]
  40daff:	add    eax,0xcc7f96fc
  40db04:	xor    ecx,esp
  40db06:	sub    DWORD PTR [ebp+0x12c259b],eax
  40db0c:	xchg   ebx,eax
  40db0d:	sub    al,0xe2
  40db0f:	out    dx,al
  40db10:	add    eax,0x5aa67d0c
  40db15:	fcmovu st,st(5)
  40db17:	imul   edx,edi,0x76f3b6f0
  40db1d:	mov    ebp,0x2bf7fef6
  40db22:	imul   esi,DWORD PTR [ecx-0x75a779c2],0x5649750c
  40db2c:	mov    esi,0x53a651cf
  40db31:	loope  0x40db56
  40db33:	test   eax,0x878bc791
  40db38:	loopne 0x40db1f
  40db3a:	lods   eax,DWORD PTR ds:[esi]
  40db3b:	cmp    BYTE PTR [esi],bh
  40db3d:	call   0x9f89e6fc
  40db42:	sbb    DWORD PTR [eax+0x3459a883],edx
  40db48:	in     eax,0xd5
  40db4a:	aam    0xae
  40db4c:	hlt    
  40db4d:	sub    eax,0x36f0ca72
  40db52:	shl    BYTE PTR [ebp+0x16],0x7c
  40db56:	pop    edi
  40db57:	jl     0x40dade
  40db59:	push   es
  40db5a:	jne    0x40dbb7
  40db5c:	mov    edi,0x4ea1d427
  40db61:	fwait
  40db62:	mov    DWORD PTR [edi-0x17],esi
  40db65:	in     al,0x4f
  40db67:	add    BYTE PTR [esi+0x3d],bl
  40db6a:	jno    0x40db55
  40db6c:	add    dh,ch
  40db6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db6f:	add    DWORD PTR [esi-0xb097741],eax
  40db75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db76:	aas    
  40db77:	out    dx,al
  40db78:	sti    
  40db79:	mov    dl,0x3
  40db7b:	(bad)  
  40db7c:	out    dx,eax
  40db7d:	xor    eax,DWORD PTR [ebp-0x25]
  40db80:	loop   0x40dbed
  40db82:	mov    ah,0x6e
  40db84:	out    dx,eax
  40db85:	int    0xe3
  40db87:	jg     0x40db87
  40db89:	scas   al,BYTE PTR es:[edi]
  40db8a:	fadd   QWORD PTR [esi+0x6f]
  40db8d:	fs pop edx
  40db8f:	jns    0x40dbf9
  40db91:	inc    edx
  40db92:	aaa    
  40db93:	jno    0x40db80
  40db95:	adc    esi,DWORD PTR gs:[edi]
  40db98:	gs inc eax
  40db9a:	sub    ecx,0xffffffc5
  40db9d:	das    
  40db9e:	(bad)  
  40db9f:	in     al,0xfc
  40dba1:	push   ecx
  40dba2:	(bad)  
  40dba3:	arpl   WORD PTR [eax+eax*2+0x2af6cd15],bx
  40dbaa:	stos   BYTE PTR es:[edi],al
  40dbab:	mov    eax,ds:0xf51e6a54
  40dbb0:	aaa    
  40dbb1:	cli    
  40dbb2:	add    al,BYTE PTR [ebp+0xbb67fc3]
  40dbb8:	mov    edi,0x31412162
  40dbbd:	ins    DWORD PTR es:[edi],dx
  40dbbe:	nop
  40dbbf:	les    edx,FWORD PTR [edi+0x79c9029b]
  40dbc5:	pop    edx
  40dbc6:	pop    esi
  40dbc7:	xor    dh,BYTE PTR [esi]
  40dbc9:	lods   eax,DWORD PTR ds:[esi]
  40dbca:	or     eax,0xefe70f8b
  40dbcf:	out    0xa2,eax
  40dbd1:	ror    edi,cl
  40dbd3:	pop    eax
  40dbd4:	sbb    dh,dl
  40dbd6:	(bad)  
  40dbd7:	ficomp DWORD PTR [ebx+0x3239c0bb]
  40dbdd:	(bad)  
  40dbde:	sub    edi,edx
  40dbe0:	icebp  
  40dbe1:	sub    dh,BYTE PTR [esi]
  40dbe3:	jne    0x40db97
  40dbe5:	add    al,0x45
  40dbe7:	sub    dl,BYTE PTR [ebx-0x23c904f4]
  40dbed:	xchg   BYTE PTR [edi+0x9],cl
  40dbf0:	and    bl,BYTE PTR [esi+0x5b]
  40dbf3:	leave  
  40dbf4:	ret    0x4
  40dbf7:	push   ebp
  40dbf8:	mov    ebp,esp
  40dbfa:	sub    esp,0x20
  40dbfd:	push   ebx
  40dbfe:	push   edi
  40dbff:	mov    DWORD PTR [ebp-0x8],0x522e
  40dc06:	mov    DWORD PTR [ebp-0x4],0x3dbd
  40dc0d:	mov    DWORD PTR [ebp-0x10],0x53f1
  40dc14:	mov    DWORD PTR [ebp-0xc],0x631b
  40dc1b:	jmp    0x40deaa
  40dc20:	dec    ebx
  40dc21:	pop    esi
  40dc22:	xchg   ebp,eax
  40dc23:	idiv   DWORD PTR [eax+edi*1-0x2a408d55]
  40dc2a:	push   ss
  40dc2b:	rol    ebp,1
  40dc2d:	out    dx,al
  40dc2e:	mov    ds:0xbef83990,al
  40dc33:	mov    esi,0xbebec299
  40dc38:	cmp    BYTE PTR [eax+0x3538c256],bh
  40dc3e:	xchg   ebx,eax
  40dc3f:	pop    eax
  40dc40:	int3   
  40dc41:	daa    
  40dc42:	mov    BYTE PTR [edx+edx*1-0x5e36a24a],bl
  40dc49:	or     cl,BYTE PTR [ebx+0x38]
  40dc4c:	mov    bl,0x45
  40dc4e:	jno    0x40dbf4
  40dc50:	sbb    ecx,eax
  40dc52:	sar    esi,cl
  40dc54:	adc    eax,0xbbf923f6
  40dc59:	inc    ecx
  40dc5a:	mov    bl,0x1c
  40dc5c:	pop    eax
  40dc5d:	jne    0x40dbe2
  40dc5f:	(bad)  
  40dc60:	push   eax
  40dc61:	xor    eax,0xb78aa5f
  40dc66:	(bad)  
  40dc67:	clc    
  40dc68:	jno    0x40dc9c
  40dc6a:	lods   eax,DWORD PTR ds:[esi]
  40dc6b:	test   al,0x35
  40dc6d:	or     DWORD PTR [ebp+0x5d],ecx
  40dc70:	jno    0x40dc63
  40dc72:	fistp  DWORD PTR ds:0x2665fb93
  40dc78:	push   ebp
  40dc79:	fisub  WORD PTR [edx+0x78]
  40dc7c:	hlt    
  40dc7d:	or     edi,0xd0813ff
  40dc83:	sub    bh,BYTE PTR [edi-0x545fe42b]
  40dc89:	and    dh,BYTE PTR cs:[eax-0x7c]
  40dc8d:	div    BYTE PTR [edi-0x7f84288d]
  40dc93:	leave  
  40dc94:	je     0x40dc73
  40dc96:	out    dx,eax
  40dc97:	adc    bl,BYTE PTR [ecx+0x7757ffbe]
  40dc9d:	jno    0x2f399d80
  40dca3:	mov    ebp,0x736b2acb
  40dca8:	sbb    BYTE PTR [edx],0x18
  40dcab:	adc    al,0x54
  40dcad:	stos   BYTE PTR es:[edi],al
  40dcae:	xchg   edi,eax
  40dcaf:	pmullw mm3,QWORD PTR [esi]
  40dcb2:	sbb    bl,BYTE PTR [edi-0xed5fb53]
  40dcb8:	and    BYTE PTR ds:0x90f89f84,bl
  40dcbe:	inc    eax
  40dcbf:	pop    ecx
  40dcc0:	cmp    DWORD PTR [edi],ebp
  40dcc2:	das    
  40dcc3:	pop    ebp
  40dcc4:	dec    esp
  40dcc5:	lahf   
  40dcc6:	mov    ds:0x5bfae9b5,al
  40dccb:	int    0xc7
  40dccd:	retf   0x308e
  40dcd0:	fst    DWORD PTR [ecx]
  40dcd2:	addr16 and al,0xa1
  40dcd5:	or     dl,BYTE PTR [edx-0x61]
  40dcd8:	adc    DWORD PTR gs:0xd38b813a,0x62
  40dce0:	dec    edx
  40dce1:	gs sub eax,0x562f7dd4
  40dce7:	sub    eax,0xbee6c36f
  40dcec:	xchg   ebp,eax
  40dced:	(bad)  
  40dcee:	hlt    
  40dcef:	push   0x57a1c14f
  40dcf4:	or     ebp,DWORD PTR [ecx-0x29]
  40dcf7:	mov    dl,0xfe
  40dcf9:	xchg   BYTE PTR [edx+0x50be980d],cl
  40dcff:	push   edi
  40dd00:	aam    0x8f
  40dd02:	and    esp,DWORD PTR [esi]
  40dd04:	(bad)  
  40dd05:	mov    edx,gs
  40dd07:	fld    QWORD PTR ds:0xff79167c
  40dd0d:	push   esi
  40dd0e:	pop    edi
  40dd0f:	mov    ebx,0xa91d3eed
  40dd14:	in     eax,0x99
  40dd16:	mov    eax,DWORD PTR [esi+0x77]
  40dd19:	inc    edx
  40dd1a:	cwde   
  40dd1b:	sbb    eax,0x10bde41e
  40dd20:	add    ebx,DWORD PTR [ebp-0x53]
  40dd23:	mov    ah,0xdf
  40dd25:	mov    esi,DWORD PTR [ebx-0x78]
  40dd28:	ss dec ecx
  40dd2a:	sub    DWORD PTR [ecx-0x73ea4470],ecx
  40dd30:	retf   
  40dd31:	push   esi
  40dd32:	ss adc ch,bl
  40dd35:	push   ebx
  40dd36:	stos   DWORD PTR es:[edi],eax
  40dd37:	add    al,0x91
  40dd39:	loop   0x40dccd
  40dd3b:	sar    BYTE PTR [ebx+ebp*2-0x371a0ffc],1
  40dd42:	in     eax,dx
  40dd43:	mov    al,ds:0x81fc15f1
  40dd48:	fwait
  40dd49:	arpl   sp,bx
  40dd4b:	add    al,0x11
  40dd4d:	hlt    
  40dd4e:	jnp    0x40dcef
  40dd50:	mov    esi,0x23b9bd49
  40dd55:	add    edx,esi
  40dd57:	push   esp
  40dd58:	mov    bl,0xdd
  40dd5a:	gs into 
  40dd5c:	scas   eax,DWORD PTR es:[edi]
  40dd5d:	mov    dh,BYTE PTR [ebx-0x4fa91ecc]
  40dd63:	stos   DWORD PTR es:[edi],eax
  40dd64:	data16 repnz mov ds:0x8afb3400,al
  40dd6b:	mov    eax,0xa485e250
  40dd70:	push   edx
  40dd71:	xor    al,0x49
  40dd73:	clc    
  40dd74:	xor    ebp,eax
  40dd76:	dec    edx
  40dd77:	push   0x8501b06a
  40dd7c:	or     edx,DWORD PTR ss:[edx+0x66]
  40dd80:	jecxz  0x40ddb1
  40dd82:	arpl   WORD PTR [esi+0x69],sp
  40dd85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd86:	ins    BYTE PTR es:[edi],dx
  40dd87:	or     BYTE PTR [eax+0x657aed95],al
  40dd8d:	cmc    
  40dd8e:	sbb    dl,BYTE PTR gs:[edx+0x85d39d3]
  40dd95:	push   ds
  40dd96:	inc    esi
  40dd97:	popa   
  40dd98:	push   0x936b897e
  40dd9d:	ja     0x40dda1
  40dd9f:	aad    0xf7
  40dda1:	mov    ebx,0x900ae992
  40dda6:	sub    edi,DWORD PTR [esi-0x2d]
  40dda9:	dec    edi
  40ddaa:	outs   dx,BYTE PTR ds:[esi]
  40ddab:	add    dh,BYTE PTR [esi]
  40ddad:	push   ecx
  40ddae:	shl    DWORD PTR [ecx],1
  40ddb0:	or     eax,0x5b38fc69
  40ddb5:	lods   eax,DWORD PTR ds:[esi]
  40ddb6:	lock imul ecx,DWORD PTR [edi-0x255eaa03],0x3d
  40ddbe:	jecxz  0x40de27
  40ddc0:	push   ecx
  40ddc1:	aas    
  40ddc2:	or     eax,0xbcdeccc1
  40ddc7:	push   eax
  40ddc8:	mov    eax,ebx
  40ddca:	pop    ss
  40ddcb:	ins    DWORD PTR es:[edi],dx
  40ddcc:	and    DWORD PTR [ecx],0x13
  40ddcf:	rcr    BYTE PTR [ebx+0x72],0x1b
  40ddd3:	out    0x15,al
  40ddd5:	jg     0x40ddf6
  40ddd7:	in     al,dx
  40ddd8:	sbb    ebx,ecx
  40ddda:	add    dl,BYTE PTR [ecx]
  40dddc:	jl     0x40ddcb
  40ddde:	dec    esi
  40dddf:	daa    
  40dde0:	popf   
  40dde1:	fdiv   QWORD PTR [eax]
  40dde3:	mov    ebx,0xc842dca3
  40dde8:	fidivr WORD PTR ds:0xee3fb106
  40ddee:	out    0x22,eax
  40ddf0:	xor    al,0xd
  40ddf2:	call   0x4e9d:0x4f55e473
  40ddf9:	fwait
  40ddfa:	pop    esi
  40ddfb:	jge    0x40ddbb
  40ddfd:	aam    0x5c
  40ddff:	mov    bh,0x27
  40de01:	cmp    DWORD PTR [ecx+0x45cea080],ebp
  40de07:	pop    ecx
  40de08:	lahf   
  40de09:	and    al,0x8
  40de0b:	add    al,0x73
  40de0d:	lds    ebp,FWORD PTR [esp+esi*1]
  40de10:	(bad)  
  40de11:	out    0x8c,al
  40de13:	xor    al,0x24
  40de15:	outs   dx,BYTE PTR ds:[esi]
  40de16:	mov    ebx,0xee63a5e8
  40de1b:	lock or BYTE PTR [esi+0x35],bh
  40de1f:	xchg   ebx,esi
  40de21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de22:	push   ebx
  40de23:	arpl   ax,si
  40de25:	adc    DWORD PTR [ecx-0x2fc34662],edx
  40de2b:	nop
  40de2c:	xor    ebp,DWORD PTR [ebx]
  40de2e:	int    0x96
  40de30:	aad    0xc0
  40de32:	and    al,0xcb
  40de34:	pop    ecx
  40de35:	push   0xfffffffc
  40de37:	sbb    BYTE PTR [edx-0x785d7868],0x9c
  40de3e:	js     0x40de78
  40de40:	bound  eax,QWORD PTR ds:0x73568205
  40de46:	hlt    
  40de47:	(bad)  
  40de48:	sub    eax,0xd0f8016b
  40de4d:	leave  
  40de4e:	mov    esp,0xae17b743
  40de53:	and    BYTE PTR [ebx-0xa],0xff
  40de57:	leave  
  40de58:	in     al,0x7e
  40de5a:	mov    ebx,0x4a8d7983
  40de5f:	inc    ebp
  40de60:	jne    0x40de8c
  40de62:	adc    DWORD PTR [edi+0x229c89f6],eax
  40de68:	mov    ds:0xeedcaa54,eax
  40de6d:	jbe    0x40de16
  40de6f:	pop    eax
  40de70:	imul   edx,ecx,0xfffffff0
  40de73:	pusha  
  40de74:	jl     0x40de1d
  40de76:	cmp    ebx,DWORD PTR [ebx-0x41]
  40de79:	fwait
  40de7a:	test   eax,0x673268e9
  40de7f:	push   esp
  40de80:	push   eax
  40de81:	push   ss
  40de82:	cmp    BYTE PTR [esi+0x5f],bl
  40de85:	jo     0x40de5c
  40de87:	mov    bh,0x65
  40de89:	ins    DWORD PTR es:[edi],dx
  40de8a:	ins    BYTE PTR es:[edi],dx
  40de8b:	int3   
  40de8c:	gs mov bl,0x6
  40de8f:	xor    eax,0xcc5b758c
  40de94:	dec    ebx
  40de95:	inc    BYTE PTR [edx-0x7b00d8bd]
  40de9b:	mov    ah,0x2c
  40de9d:	xchg   ebx,eax
  40de9e:	mov    edi,0xa01cde13
  40dea3:	pop    ds
  40dea4:	push   ss
  40dea5:	mov    esp,fs
  40dea7:	pop    edi
  40dea8:	popf   
  40dea9:	cmp    al,bh
  40deab:	inc    ebp
  40deac:	call   0x4130fe
  40deb1:	mov    DWORD PTR [ebp-0x14],0x1600
  40deb8:	mov    eax,DWORD PTR [ebp-0x18]
  40debb:	mov    ecx,DWORD PTR [ebp-0x14]
  40debe:	mov    edx,DWORD PTR [ebp-0x10]
  40dec1:	mov    edi,DWORD PTR [ebp-0xc]
  40dec4:	push   edi
  40dec5:	push   edx
  40dec6:	push   ecx
  40dec7:	push   eax
  40dec8:	call   0x41594e
  40decd:	mov    ecx,DWORD PTR [ebp-0x8]
  40ded0:	mov    edi,DWORD PTR [ebp-0x4]
  40ded3:	add    eax,0x1dc8
  40ded8:	adc    edx,0x6fbf
  40dede:	and    edx,edi
  40dee0:	push   0x1061
  40dee5:	and    eax,ecx
  40dee7:	or     edx,0x23ff
  40deed:	push   0x4000022f
  40def2:	or     eax,0x58c4
  40def7:	xor    edx,0x7a7a
  40defd:	xor    eax,0x5278
  40df02:	push   edx
  40df03:	push   eax
  40df04:	call   0x4222ab
  40df09:	jmp    0x40e198
  40df0e:	and    eax,0x8c7544dd
  40df13:	jnp    0x40df51
  40df15:	scas   al,BYTE PTR es:[edi]
  40df16:	fs aam 0x9e
  40df19:	nop
  40df1a:	jno    0x40deb5
  40df1c:	fninit 
  40df1e:	push   ss
  40df1f:	cld    
  40df20:	mov    esi,0xbec299be
  40df25:	mov    esi,0x94330946
  40df2a:	mov    bl,0x16
  40df2c:	nop
  40df2d:	lods   al,BYTE PTR ds:[esi]
  40df2e:	pop    es
  40df2f:	jns    0x40df69
  40df31:	je     0x40df6a
  40df33:	and    eax,0x501df50d
  40df38:	loopne 0x40deee
  40df3a:	pop    es
  40df3b:	add    dl,dl
  40df3d:	jmp    0x6526:0xedc8bb1e
  40df44:	and    BYTE PTR [esi+0x5cce4842],ah
  40df4a:	(bad)  
  40df4b:	leave  
  40df4c:	push   ss
  40df4d:	mov    ebx,0x8df23ea
  40df52:	and    edi,0xe
  40df55:	scas   al,BYTE PTR es:[edi]
  40df56:	mov    dl,BYTE PTR [edi]
  40df58:	aas    
  40df59:	(bad)  
  40df5a:	xor    ch,BYTE PTR [eax+0x776740e]
  40df60:	ret    0x5aa0
  40df63:	add    esp,ecx
  40df65:	addr16 mov dh,0x0
  40df68:	cmc    
  40df69:	mov    dh,0x71
  40df6b:	gs jmp 0x141cf65c
  40df71:	mov    ah,0x82
  40df73:	repnz int 0xaa
  40df76:	add    DWORD PTR [edx-0x6e],edi
  40df79:	dec    ecx
  40df7a:	lods   al,BYTE PTR ds:[esi]
  40df7b:	xchg   DWORD PTR [eax-0x431244ee],ecx
  40df81:	mov    al,bh
  40df83:	(bad)  [ebp+0x5e6da187]
  40df89:	shr    BYTE PTR [esi+0x128ae0b9],cl
  40df8f:	mov    eax,0xfe1b5e81
  40df94:	or     al,0x7d
  40df96:	sub    BYTE PTR [esi-0x368485ff],ch
  40df9c:	test   DWORD PTR [ecx-0x21b3a4ac],edi
  40dfa2:	inc    edx
  40dfa3:	jl     0x40dfc9
  40dfa5:	cmp    dh,ah
  40dfa7:	sub    al,0xeb
  40dfa9:	loope  0x40df63
  40dfab:	shr    BYTE PTR ds:0x65700edd,1
  40dfb1:	ja     0x40e02e
  40dfb3:	push   ds
  40dfb4:	scas   eax,DWORD PTR es:[edi]
  40dfb5:	hlt    
  40dfb6:	jne    0x40df69
  40dfb8:	int3   
  40dfb9:	arpl   WORD PTR [eax+0x24a4759b],sp
  40dfbf:	push   cs
  40dfc0:	cmc    
  40dfc1:	(bad)  
  40dfc2:	push   esi
  40dfc3:	enter  0x5e74,0xc6
  40dfc7:	cmp    bl,BYTE PTR [esi-0x635ed1ab]
  40dfcd:	shr    BYTE PTR [edi-0x46],1
  40dfd0:	adc    eax,0x9c08d092
  40dfd5:	in     al,0xd1
  40dfd7:	sar    DWORD PTR [esi-0x5b582e4f],cl
  40dfdd:	jnp    0x40e05a
  40dfdf:	and    edi,DWORD PTR [edx+0x71d77bb2]
  40dfe5:	(bad)  
  40dfe6:	cmp    edi,DWORD PTR [edx]
  40dfe8:	and    dh,bh
  40dfea:	sbb    BYTE PTR [ebx+0x4c88c215],dh
  40dff0:	or     cl,dh
  40dff2:	cmp    dl,BYTE PTR [ebp+0x25]
  40dff5:	add    al,0x32
  40dff7:	stos   DWORD PTR es:[edi],eax
  40dff8:	sub    eax,0x7197ac01
  40dffd:	mov    bh,0x6e
  40dfff:	mov    esi,0xf9701c93
  40e004:	pop    DWORD PTR ds:0xd04aa6d2
  40e00a:	enter  0x62f9,0x36
  40e00e:	ret    0x64dd
  40e011:	lock dec edx
  40e013:	jmp    DWORD PTR [esi+0x56]
  40e016:	(bad)  
  40e018:	repnz mov DWORD PTR [edx],edx
  40e01b:	xchg   DWORD PTR [ebp-0x4f],ebp
  40e01e:	les    esi,FWORD PTR [esi-0x53]
  40e021:	pushf  
  40e022:	sti    
  40e023:	pop    esi
  40e024:	leave  
  40e025:	imul   ebp,DWORD PTR ds:0x394c9222,0xffffff93
  40e02c:	xchg   ebx,ebp
  40e02e:	jne    0x40e02f
  40e030:	daa    
  40e031:	sub    edx,ecx
  40e033:	shr    DWORD PTR [esi],0xd0
  40e036:	fisub  WORD PTR [edx]
  40e038:	lock repnz add eax,0xc9785a47
  40e03f:	xchg   esi,eax
  40e040:	les    ebx,FWORD PTR [edi+eax*4]
  40e043:	jge    0x40e081
  40e045:	leave  
  40e046:	adc    bh,BYTE PTR [ebx-0x80]
  40e049:	loope  0x40e0c7
  40e04b:	push   ecx
  40e04c:	jns    0x40dfe9
  40e04e:	and    al,0x2e
  40e050:	jmp    0x40e01f
  40e052:	xor    DWORD PTR [ebp+0x29ab3ba8],esi
  40e058:	push   esp
  40e059:	fidivr WORD PTR [esi+0x7c]
  40e05c:	pop    ss
  40e05d:	inc    eax
  40e05e:	xor    eax,0x435438fd
  40e063:	sbb    edx,ecx
  40e065:	in     al,0x24
  40e067:	pop    ss
  40e068:	xchg   esi,eax
  40e069:	pop    edi
  40e06a:	ja     0x40e0a4
  40e06c:	xchg   esp,eax
  40e06d:	ds call 0x621e05c9
  40e073:	xor    DWORD PTR [ecx-0x57],ecx
  40e076:	ret    0xa3eb
  40e079:	mov    BYTE PTR [edi-0x6b2ff914],0x4a
  40e080:	xchg   esp,esi
  40e082:	shl    BYTE PTR [ebx],cl
  40e084:	push   0x509aab23
  40e089:	test   al,0xc1
  40e08b:	cs add eax,0x50fd5e41
  40e091:	fisubr WORD PTR fs:[eax+0x51]
  40e095:	pop    es
  40e096:	std    
  40e097:	and    eax,0x711275eb
  40e09c:	mov    eax,ds:0x4fe73768
  40e0a1:	inc    edi
  40e0a2:	mov    ?,WORD PTR [ecx]
  40e0a4:	mov    cs,WORD PTR [edi]
  40e0a6:	lock xchg esp,eax
  40e0a8:	rcr    BYTE PTR [eax+0x5c8e0de1],0xd1
  40e0af:	daa    
  40e0b0:	push   ebp
  40e0b1:	outs   dx,DWORD PTR ds:[esi]
  40e0b2:	sub    eax,0x4653dbb0
  40e0b7:	push   cs
  40e0b8:	out    0xab,al
  40e0ba:	mov    ecx,0xf3aabcda
  40e0bf:	push   ebx
  40e0c0:	fcmove st,st(7)
  40e0c2:	cmp    DWORD PTR [ecx],esi
  40e0c4:	sysexit 
  40e0c6:	popf   
  40e0c7:	in     eax,dx
  40e0c8:	push   cs
  40e0c9:	fcomp  DWORD PTR [eax+0x6bc616a4]
  40e0cf:	mov    dh,0xeb
  40e0d1:	mov    ebx,ebp
  40e0d3:	out    0xe2,al
  40e0d5:	jo     0x40e09f
  40e0d7:	and    ebx,DWORD PTR [esi-0x586f9b51]
  40e0dd:	daa    
  40e0de:	repz out 0x17,al
  40e0e1:	shr    DWORD PTR [edx],0x72
  40e0e4:	push   edi
  40e0e5:	mov    esi,0x7f043ad8
  40e0ea:	les    edx,FWORD PTR [ecx+0x62]
  40e0ed:	mov    eax,0xdc8430ab
  40e0f2:	das    
  40e0f3:	xchg   edx,eax
  40e0f4:	inc    ebp
  40e0f5:	or     eax,0xa14386cf
  40e0fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0fb:	ret    0x9790
  40e0fe:	mov    ah,0x4d
  40e100:	adc    al,0xfb
  40e102:	inc    edi
  40e103:	push   ds
  40e104:	push   cs
  40e105:	mov    edx,DWORD PTR [edi]
  40e107:	or     eax,0xb6e16dc5
  40e10c:	mul    DWORD PTR [edi]
  40e10e:	icebp  
  40e10f:	or     eax,DWORD PTR [ebx+0x1437216d]
  40e115:	mov    BYTE PTR [edi+0x5d],0xd9
  40e119:	xchg   ah,bh
  40e11b:	xor    edx,eax
  40e11d:	push   esp
  40e11e:	jns    0x40e0e4
  40e120:	das    
  40e121:	ds cmc 
  40e123:	jp     0x40e131
  40e125:	adc    dl,BYTE PTR ds:0xec28288c
  40e12b:	mov    ds:0x98b3caaf,eax
  40e130:	mov    edi,0xb476768b
  40e135:	in     al,dx
  40e136:	sub    DWORD PTR [ecx+ebx*1+0x22],0x62
  40e13b:	in     eax,dx
  40e13c:	sbb    al,0xcd
  40e13e:	rcr    BYTE PTR [ebx+0x71],1
  40e141:	jge    0x40e173
  40e143:	call   FWORD PTR [edi-0x7d42c5f6]
  40e149:	dec    esi
  40e14a:	mov    esi,0x4a23f49f
  40e14f:	std    
  40e150:	mov    es,WORD PTR [ecx]
  40e152:	div    DWORD PTR [eax]
  40e154:	adc    al,0xa4
  40e156:	cmp    esp,edx
  40e158:	fsubr  DWORD PTR [ebp-0x7a]
  40e15b:	je     0x40e1a5
  40e15d:	sbb    DWORD PTR [eax+0x29],esi
  40e160:	loopne 0x40e1b2
  40e162:	mov    edx,0xa4f9f5c0
  40e167:	mov    al,ds:0x228670c0
  40e16c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e16d:	jecxz  0x40e173
  40e16f:	adc    eax,0xfa94f035
  40e174:	xchg   ecx,eax
  40e175:	out    0x92,al
  40e177:	call   0x967c039f
  40e17c:	adc    al,0xf1
  40e17e:	add    eax,0xf0878afa
  40e183:	dec    ebx
  40e184:	push   ss
  40e185:	mov    dh,0xf7
  40e187:	cmp    ecx,0x7d
  40e18a:	dec    edi
  40e18b:	mov    al,ds:0x313ec924
  40e190:	jmp    0x40e149
  40e192:	push   edx
  40e193:	and    esp,edi
  40e195:	mov    dl,0xb2
  40e197:	sbb    BYTE PTR [ecx-0x1fba38fa],cl
  40e19d:	push   esp
  40e19e:	xor    eax,DWORD PTR [eax]
  40e1a0:	add    bh,al
  40e1a2:	inc    ebp
  40e1a3:	in     al,0x8c
  40e1a5:	jge    0x40e1a7
  40e1a7:	add    bh,al
  40e1a9:	inc    ebp
  40e1aa:	call   0x411ee5
  40e1af:	mov    DWORD PTR [ebp-0x14],0x51ef
  40e1b6:	xor    edi,edi
  40e1b8:	mov    DWORD PTR [ebp-0xc],0x3358
  40e1bf:	push   0xc9f
  40e1c4:	jmp    0x40e453
  40e1c9:	jecxz  0x40e232
  40e1cb:	fscale 
  40e1cd:	pop    edx
  40e1ce:	mov    ah,0x3c
  40e1d0:	lods   al,BYTE PTR ds:[esi]
  40e1d1:	je     0x40e1fd
  40e1d3:	push   eax
  40e1d4:	sahf   
  40e1d5:	jmp    0xf224c706
  40e1da:	add    bh,BYTE PTR [esi-0x413d6642]
  40e1e0:	mov    esi,0x94653fa6
  40e1e5:	aaa    
  40e1e6:	scas   eax,DWORD PTR es:[edi]
  40e1e7:	push   edi
  40e1e8:	inc    esp
  40e1e9:	test   eax,0x1a8c4e06
  40e1ee:	jae    0x40e1c4
  40e1f0:	dec    ebx
  40e1f1:	sbb    esp,ebx
  40e1f3:	jbe    0x40e1d7
  40e1f5:	jecxz  0x40e236
  40e1f7:	sub    ch,BYTE PTR [ebp-0x4f]
  40e1fa:	or     BYTE PTR ds:0xd4330213,0x7a
  40e201:	push   ecx
  40e202:	xor    cl,BYTE PTR [esi]
  40e204:	jg     0x40e1d3
  40e206:	cs xchg ebx,eax
  40e208:	stc    
  40e209:	stc    
  40e20a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e20b:	sub    DWORD PTR [ebp-0xd],ebp
  40e20e:	out    0x12,eax
  40e210:	out    dx,al
  40e211:	hlt    
  40e212:	gs pop es
  40e214:	add    esp,edx
  40e216:	or     BYTE PTR [ebx],ch
  40e218:	sti    
  40e219:	(bad)
  40e21c:	call   0xba8de680
  40e221:	push   ecx
  40e222:	cmp    eax,0xe0f57a6
  40e227:	pop    esp
  40e228:	nop
  40e229:	pop    ss
  40e22a:	xor    DWORD PTR [edi+0x5efaf26f],0xffffffe3
  40e231:	xor    dh,bl
  40e233:	jp     0x40e23b
  40e235:	and    eax,DWORD PTR [ecx]
  40e237:	out    0xaf,al
  40e239:	inc    ecx
  40e23a:	sbb    bh,dh
  40e23c:	sbb    eax,DWORD PTR [ecx+0x10]
  40e23f:	xor    BYTE PTR [esi],bh
  40e241:	sbb    edi,DWORD PTR [ebx]
  40e243:	rol    DWORD PTR [esi-0x3a],cl
  40e246:	mov    ebp,0xc11f15bb
  40e24b:	xchg   edi,eax
  40e24c:	xor    cl,ch
  40e24e:	or     al,BYTE PTR [ebx-0x37]
  40e251:	gs icebp 
  40e253:	ins    BYTE PTR es:[edi],dx
  40e254:	dec    edi
  40e255:	fistp  QWORD PTR ds:0xfa5aa1e1
  40e25b:	mov    al,ds:0x11fb893a
  40e260:	add    ch,cl
  40e262:	fnstcw WORD PTR [eax]
  40e264:	mov    dl,0xe7
  40e266:	sar    DWORD PTR [esi],1
  40e268:	cmp    ch,al
  40e26a:	fld    st(2)
  40e26c:	imul   edi,DWORD PTR [ebx],0x17
  40e26f:	xor    ch,BYTE PTR [eax-0xd]
  40e272:	cld    
  40e273:	lea    esi,[esi-0x32f361d7]
  40e279:	inc    eax
  40e27a:	dec    ebx
  40e27b:	sar    BYTE PTR [ebx-0x53],0x6
  40e27f:	stc    
  40e280:	cwde   
  40e281:	sub    DWORD PTR [ebx-0x66],edx
  40e284:	jle    0x40e22e
  40e286:	sub    al,0xe5
  40e288:	mov    edi,0x8210d691
  40e28d:	int3   
  40e28e:	lahf   
  40e28f:	aaa    
  40e290:	pop    esi
  40e291:	inc    ecx
  40e292:	fs mov ah,0xf
  40e295:	push   edi
  40e296:	push   cs
  40e297:	push   cs
  40e298:	arpl   WORD PTR [ecx-0x2951b0],bx
  40e29e:	imul   ebp,DWORD PTR [edi+0x2b288d36],0x49faebbd
  40e2a8:	fst    DWORD PTR [eax-0x11f3aced]
  40e2ae:	fcom   st(0)
  40e2b0:	out    0xdf,al
  40e2b2:	inc    edi
  40e2b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e2b4:	aaa    
  40e2b5:	jae    0x40e29d
  40e2b7:	inc    ebx
  40e2b8:	sub    eax,0x9ab80e2e
  40e2bd:	outs   dx,DWORD PTR ds:[esi]
  40e2be:	popf   
  40e2bf:	out    dx,al
  40e2c0:	and    DWORD PTR [edx-0x7a],esp
  40e2c3:	cmp    dh,BYTE PTR [edi]
  40e2c5:	nop
  40e2c6:	das    
  40e2c7:	or     DWORD PTR [edx+0x75d00679],ebp
  40e2cd:	xor    DWORD PTR [ecx+0x67],eax
  40e2d0:	cmp    DWORD PTR ds:[esi+edi*2],ecx
  40e2d4:	xor    cl,BYTE PTR [esp+esi*8]
  40e2d7:	pop    ds
  40e2d8:	call   0x615a27ef
  40e2dd:	dec    edi
  40e2de:	jge    0x40e35f
  40e2e0:	and    BYTE PTR [ebx-0x42],dh
  40e2e3:	loope  0x40e2a5
  40e2e5:	sbb    DWORD PTR [ebp-0x1d],edx
  40e2e8:	inc    eax
  40e2e9:	adc    edx,DWORD PTR [edx+0x45c72da]
  40e2ef:	cs push 0x4f
  40e2f2:	mov    esi,0x8156b652
  40e2f7:	add    DWORD PTR [ebx-0x72f4861],esi
  40e2fd:	icebp  
  40e2fe:	xor    ch,ah
  40e300:	sti    
  40e301:	(bad)  
  40e302:	out    0x87,eax
  40e304:	inc    esi
  40e305:	xchg   ecx,eax
  40e306:	push   0x5d
  40e308:	sti    
  40e309:	pop    ebx
  40e30a:	pop    edx
  40e30b:	cmc    
  40e30c:	cmp    eax,0x6e9b5076
  40e311:	inc    edi
  40e312:	stc    
  40e313:	xchg   bh,bl
  40e315:	xor    al,0x53
  40e317:	ret    
  40e318:	jbe    0x40e398
  40e31a:	mov    ebx,0x496fa70b
  40e31f:	push   ebp
  40e320:	sbb    al,BYTE PTR [eax]
  40e322:	jg     0x40e31b
  40e324:	daa    
  40e325:	loope  0x40e2ca
  40e327:	adc    ecx,DWORD PTR [ecx-0x4025f064]
  40e32d:	mov    es,WORD PTR [ebp+ecx*4-0x18097957]
  40e334:	cdq    
  40e335:	stos   DWORD PTR es:[edi],eax
  40e336:	loopne 0x40e2e6
  40e338:	add    dl,cl
  40e33a:	jne    0x40e389
  40e33c:	ret    0x9f8b
  40e33f:	fwait
  40e340:	(bad)  
  40e341:	sti    
  40e342:	or     BYTE PTR [edi+ebp*4+0x58b692e3],ch
  40e349:	inc    esp
  40e34a:	cmp    BYTE PTR [eax+0x16],cl
  40e34d:	and    eax,0x22807f0f
  40e352:	(bad)  
  40e353:	dec    eax
  40e354:	mov    WORD PTR [edi],es
  40e356:	jp     0x40e2e2
  40e358:	dec    ecx
  40e359:	shl    al,0x6d
  40e35c:	icebp  
  40e35d:	shr    ah,0x1e
  40e360:	inc    edx
  40e361:	(bad)
  40e366:	mov    ebx,0x7a4dc006
  40e36b:	clc    
  40e36c:	dec    ecx
  40e36d:	mov    ebx,0xbb305aec
  40e372:	lods   al,BYTE PTR ds:[si]
  40e374:	mov    al,0xe4
  40e376:	into   
  40e377:	mov    esp,0xd6269c65
  40e37c:	pushf  
  40e37d:	out    0xbb,eax
  40e37f:	ss inc ebp
  40e381:	fimul  DWORD PTR cs:[eax]
  40e384:	add    dh,BYTE PTR [edi+0x68]
  40e387:	adc    BYTE PTR [esi-0x46],dl
  40e38a:	fild   QWORD PTR [esp+ebp*2+0x5fb984a0]
  40e392:	mov    ecx,0xd2840cdb
  40e397:	cdq    
  40e398:	(bad)
  40e39c:	ins    BYTE PTR es:[edi],dx
  40e39d:	(bad)  
  40e39e:	ins    BYTE PTR es:[edi],dx
  40e39f:	jns    0x40e406
  40e3a1:	mov    edi,ebx
  40e3a3:	sub    al,0x9c
  40e3a5:	cld    
  40e3a6:	dec    ebp
  40e3a7:	jns    0x40e356
  40e3a9:	mov    edx,0x36bc589f
  40e3ae:	pop    ebp
  40e3af:	push   ebx
  40e3b0:	push   ebp
  40e3b1:	cli    
  40e3b2:	int    0x87
  40e3b4:	jge    0x40e3f4
  40e3b6:	jnp    0x40e3a6
  40e3b8:	lds    edx,FWORD PTR [eax-0x31d9f162]
  40e3be:	mov    edx,0x14dd1e35
  40e3c3:	sub    esi,DWORD PTR [ecx]
  40e3c5:	pop    ds
  40e3c6:	outs   dx,DWORD PTR ds:[esi]
  40e3c7:	mov    DWORD PTR [edi+eiz*2-0x1e],ebp
  40e3cb:	jae    0x40e3a9
  40e3cd:	sti    
  40e3ce:	lds    edi,FWORD PTR [ebp-0x1e]
  40e3d1:	dec    esi
  40e3d2:	scas   eax,DWORD PTR es:[edi]
  40e3d3:	mov    BYTE PTR ds:0x4bf6621e,bl
  40e3d9:	fwait
  40e3da:	xor    eax,0xf2dea99a
  40e3df:	aam    0x70
  40e3e1:	push   0xffffffc6
  40e3e3:	mov    esp,0x179c82b6
  40e3e8:	out    dx,eax
  40e3e9:	fsub   QWORD PTR [ecx]
  40e3eb:	test   eax,0xf738e461
  40e3f0:	xchg   DWORD PTR [edi-0x70],esp
  40e3f3:	fdivr  QWORD PTR [ebp+ebp*4+0x57]
  40e3f7:	xchg   ebx,eax
  40e3f8:	in     al,dx
  40e3f9:	pusha  
  40e3fa:	retf   
  40e3fb:	fwait
  40e3fc:	popf   
  40e3fd:	shl    BYTE PTR [esi],1
  40e3ff:	adc    BYTE PTR [edx],bh
  40e401:	or     DWORD PTR [eax-0x5d],esp
  40e404:	(bad)  
  40e405:	sbb    ecx,DWORD PTR [ebp+0x6ee00c89]
  40e40b:	sub    ebp,DWORD PTR [edx]
  40e40d:	outs   dx,BYTE PTR ds:[esi]
  40e40e:	leave  
  40e40f:	mov    cs,WORD PTR [ebx+0x36ec0d6]
  40e415:	xchg   ebp,eax
  40e416:	lock inc ebp
  40e418:	lods   eax,DWORD PTR ds:[esi]
  40e419:	jmp    0x40e3d3
  40e41b:	shr    BYTE PTR [eax+eiz*8-0x2f],0x8
  40e420:	fild   QWORD PTR [esp+eiz*2+0x70]
  40e424:	mov    ebx,0x5854622
  40e429:	pusha  
  40e42a:	xor    cl,ah
  40e42c:	push   eax
  40e42d:	push   esi
  40e42e:	fs add al,dh
  40e431:	dec    edi
  40e432:	outs   dx,BYTE PTR ds:[esi]
  40e433:	push   eax
  40e434:	mul    BYTE PTR [ebp+0x4e]
  40e437:	cmp    edi,DWORD PTR [ebp-0x56648bae]
  40e43d:	push   esi
  40e43e:	mov    ebp,0x3f892e62
  40e443:	or     edx,DWORD PTR [ecx-0x75]
  40e446:	adc    BYTE PTR [edx+0x52],dl
  40e449:	std    
  40e44a:	adc    DWORD PTR [eax],edi
  40e44c:	ins    DWORD PTR es:[edi],dx
  40e44d:	or     eax,0xdd1911f4
  40e452:	lock inc edi
  40e454:	mov    DWORD PTR [ebp-0x4],edi
  40e457:	mov    eax,DWORD PTR [ebp-0x18]
  40e45a:	mov    ecx,DWORD PTR [ebp-0x14]
  40e45d:	push   0x1c19
  40e462:	push   ecx
  40e463:	push   eax
  40e464:	call   0x41594e
  40e469:	mov    ecx,DWORD PTR [ebp-0x20]
  40e46c:	mov    ebx,DWORD PTR [ebp-0x1c]
  40e46f:	or     eax,ecx
  40e471:	or     edx,ebx
  40e473:	push   0x20fa
  40e478:	add    eax,0x7fac
  40e47d:	push   0x1cd48ab
  40e482:	adc    edx,0x133b
  40e488:	push   edx
  40e489:	push   eax
  40e48a:	call   0x4222ab
  40e48f:	mov    ebx,DWORD PTR [ebp-0x4]
  40e492:	lea    ecx,[eax-0x5d40]
  40e498:	xor    edx,edx
  40e49a:	mov    eax,0x16c2
  40e49f:	div    ebx
  40e4a1:	mov    edx,DWORD PTR [ebp-0xc]
  40e4a4:	sub    eax,edx
  40e4a6:	mov    DWORD PTR [esi+eax*4+0x725c],ecx
  40e4ad:	mov    DWORD PTR [ebp-0x14],0x6af0
  40e4b4:	mov    DWORD PTR [ebp-0x4],edi
  40e4b7:	mov    DWORD PTR [ebp-0xc],0x2c8a
  40e4be:	mov    ecx,DWORD PTR [ebp-0xc]
  40e4c1:	mov    eax,0x4401
  40e4c6:	sub    eax,ecx
  40e4c8:	mov    ecx,DWORD PTR [ebp-0x4]
  40e4cb:	xor    edx,edx
  40e4cd:	div    ecx
  40e4cf:	mov    ecx,DWORD PTR [ebp-0x14]
  40e4d2:	xor    eax,0xa80
  40e4d7:	or     eax,0x343b
  40e4dc:	or     eax,ecx
  40e4de:	mov    ecx,DWORD PTR [ebp+0x8]
  40e4e1:	mov    DWORD PTR [esi+eax*4-0x1fff4],ecx
  40e4e8:	mov    DWORD PTR [ebp-0xc],0x327f
  40e4ef:	mov    DWORD PTR [ebp-0x14],0x5215
  40e4f6:	mov    DWORD PTR [ebp+0x8],0x2502
  40e4fd:	mov    eax,DWORD PTR [ebp+0x8]
  40e500:	add    eax,DWORD PTR [ebp-0x14]
  40e503:	mov    ecx,DWORD PTR [ebp-0xc]
  40e506:	and    eax,0x2bab
  40e50b:	lea    eax,[eax+ecx*1-0x557f]
  40e512:	mov    ecx,DWORD PTR [ebp+0xc]
  40e515:	mov    DWORD PTR [esi+eax*4],ecx
  40e518:	mov    DWORD PTR [ebp-0xc],edi
  40e51b:	mov    DWORD PTR [ebp+0x8],0x5f40
  40e522:	mov    DWORD PTR [ebp-0x14],0x6ba4
  40e529:	mov    DWORD PTR [ebp+0xc],0x7b17
  40e530:	mov    ecx,DWORD PTR [ebp+0x8]
  40e533:	jmp    0x40e7c2
  40e538:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e539:	jno    0x40e4dc
  40e53b:	into   
  40e53c:	mov    ecx,0xb6b9b90d
  40e541:	jb     0x40e5b1
  40e543:	fld    QWORD PTR [ebp-0x37]
  40e546:	push   esp
  40e547:	sahf   
  40e548:	int    0x6
  40e54a:	mov    esi,0xbec299be
  40e54f:	mov    esi,0x890dc938
  40e554:	icebp  
  40e555:	jp     0x40e519
  40e557:	hlt    
  40e558:	jg     0x40e516
  40e55a:	in     eax,0xe
  40e55c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e55d:	loopne 0x40e542
  40e55f:	push   cs
  40e560:	dec    esp
  40e561:	stc    
  40e562:	stos   BYTE PTR es:[edi],al
  40e563:	in     eax,dx
  40e564:	ins    DWORD PTR es:[edi],dx
  40e565:	adc    DWORD PTR [edi],0x1
  40e568:	jae    0x40e5b0
  40e56a:	or     ch,BYTE PTR [esi+0x45]
  40e56d:	mov    DWORD PTR [eax+0x2b1e248],edx
  40e573:	pop    esi
  40e574:	or     al,0x7
  40e576:	sti    
  40e577:	sbb    eax,0xc4bca51e
  40e57c:	add    BYTE PTR [edx+edi*2+0x792a6037],cl
  40e583:	sub    DWORD PTR [ecx],esp
  40e585:	pushf  
  40e586:	dec    edi
  40e587:	mov    ds:0x6d4dfdee,al
  40e58c:	mov    ebx,0x57fb7c86
  40e591:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e592:	ins    BYTE PTR es:[edi],dx
  40e593:	cli    
  40e594:	add    edx,DWORD PTR [edx]
  40e596:	retf   
  40e597:	addr16 call 0x478d:0x550cdf4d
  40e59f:	lds    ebp,FWORD PTR [esi]
  40e5a1:	call   0x3eee1f4c
  40e5a6:	call   0x552d:0x8f081f56
  40e5ad:	jmp    0x5def:0x31405378
  40e5b4:	pop    es
  40e5b5:	into   
  40e5b6:	mov    al,ds:0xc6e62556
  40e5bb:	ret    
  40e5bc:	sub    DWORD PTR [eax+0x1b3f4c17],esp
  40e5c2:	dec    esp
  40e5c3:	mov    cl,0x83
  40e5c5:	pop    es
  40e5c6:	dec    ebp
  40e5c7:	sbb    esi,DWORD PTR [ecx-0x71]
  40e5ca:	(bad)  [eax-0x69cb921b]
  40e5d0:	add    al,0x4a
  40e5d2:	int    0x13
  40e5d4:	pushf  
  40e5d5:	retf   
  40e5d6:	sti    
  40e5d7:	push   ds
  40e5d8:	dec    eax
  40e5d9:	or     eax,0x383b56a9
  40e5de:	and    al,bh
  40e5e0:	in     eax,0xa1
  40e5e2:	inc    ecx
  40e5e3:	(bad)  
  40e5e4:	jmp    0x40e5b6
  40e5e6:	in     eax,dx
  40e5e7:	sub    al,0x48
  40e5e9:	pushf  
  40e5ea:	dec    ecx
  40e5eb:	shl    BYTE PTR [esp+esi*4+0x792ef0f4],cl
  40e5f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5f3:	pop    ebp
  40e5f4:	push   eax
  40e5f5:	sbb    ecx,eax
  40e5f7:	xchg   ebp,eax
  40e5f8:	imul   ebx,DWORD PTR ds:0x580cb191,0xffffffdc
  40e5ff:	pop    ebx
  40e600:	push   ecx
  40e601:	loopne 0x40e648
  40e603:	or     DWORD PTR [edx+0x70],ecx
  40e606:	push   esi
  40e607:	(bad)  
  40e608:	das    
  40e609:	jne    0x40e5af
  40e60b:	add    ch,al
  40e60d:	jmp    0xeda0f2e4
  40e612:	add    al,0xd3
  40e614:	pushf  
  40e615:	shl    BYTE PTR [esi-0x62b61dc8],cl
  40e61b:	stos   DWORD PTR es:[edi],eax
  40e61c:	lds    ebx,FWORD PTR [esi+0x71]
  40e61f:	inc    esp
  40e620:	and    esp,DWORD PTR [edi]
  40e622:	(bad)  
  40e623:	or     DWORD PTR [esp+eax*2],ecx
  40e626:	push   ss
  40e627:	jg     0x40e670
  40e629:	aad    0x11
  40e62b:	or     eax,0x80544440
  40e630:	loop   0x40e63e
  40e632:	push   ds
  40e633:	xor    eax,DWORD PTR [edi-0x5b6e83c]
  40e639:	or     eax,0x141e080d
  40e63e:	and    BYTE PTR [eax+eiz*4-0x4237e448],dl
  40e645:	outs   dx,DWORD PTR ds:[esi]
  40e646:	lahf   
  40e647:	loopne 0x40e63c
  40e649:	enter  0x103a,0x2d
  40e64d:	push   cs
  40e64e:	pusha  
  40e64f:	or     cl,BYTE PTR [ebx]
  40e651:	pop    ebp
  40e652:	inc    ecx
  40e653:	cdq    
  40e654:	adc    dl,ch
  40e656:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e657:	out    dx,al
  40e658:	retf   0x3bc5
  40e65b:	push   ss
  40e65c:	adc    BYTE PTR [esp+eax*1+0x42],dh
  40e660:	stc    
  40e661:	mov    DWORD PTR [eax],eax
  40e663:	sub    BYTE PTR [eax],dl
  40e665:	sub    al,0x4c
  40e667:	pop    ss
  40e668:	imul   esp,DWORD PTR [edi-0x739dbce6],0x1c
  40e66f:	dec    edi
  40e670:	test   eax,0xd632f151
  40e675:	psrld  mm3,QWORD PTR [esi+0x28]
  40e679:	sbb    ebx,DWORD PTR es:[ebx+0x35]
  40e67d:	clc    
  40e67e:	cld    
  40e67f:	test   DWORD PTR ds:0x279df6f7,eax
  40e685:	addr16 (bad) 
  40e687:	aaa    
  40e688:	leave  
  40e689:	mov    BYTE PTR [eax-0x6c],dl
  40e68c:	or     dl,BYTE PTR [edi+0x26dc588d]
  40e692:	lahf   
  40e693:	jmp    0x40e64e
  40e695:	and    eax,0x65ee8ed5
  40e69a:	aam    0x60
  40e69c:	test   eax,0xb459c26a
  40e6a1:	out    0x8f,eax
  40e6a3:	sub    al,0x4d
  40e6a5:	imul   ebx,DWORD PTR [ecx+0x67],0x30167f67
  40e6ac:	xor    bh,BYTE PTR [edx+edx*1]
  40e6af:	enter  0x7708,0x9c
  40e6b3:	push   esi
  40e6b4:	(bad)  
  40e6b5:	ss jo  0x40e63c
  40e6b8:	or     DWORD PTR [edx-0x1],eax
  40e6bb:	sub    bl,BYTE PTR [ebx-0x4d]
  40e6be:	in     al,dx
  40e6bf:	jge    0x40e6ab
  40e6c1:	add    al,0x5c
  40e6c3:	dec    esi
  40e6c4:	arpl   WORD PTR [edx+0x5498cd80],bp
  40e6ca:	mov    bh,0xc1
  40e6cc:	scas   al,BYTE PTR es:[edi]
  40e6cd:	cmp    ecx,ecx
  40e6cf:	adc    cx,WORD PTR [edx]
  40e6d2:	dec    ebp
  40e6d3:	pop    edi
  40e6d4:	arpl   WORD PTR [ecx+0x1e98f352],bp
  40e6da:	loop   0x40e6c0
  40e6dc:	shl    DWORD PTR [edi+0x6],1
  40e6df:	hlt    
  40e6e0:	sbb    DWORD PTR [esi-0x51],eax
  40e6e3:	pop    DWORD PTR [ebx+edi*1-0xb]
  40e6e7:	test   eax,0x2bf41ded
  40e6ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e6ed:	inc    edi
  40e6ee:	mov    ch,BYTE PTR [ebx+0x1ddb3cee]
  40e6f4:	cmp    ebx,DWORD PTR [ebx]
  40e6f6:	(bad)  
  40e6f7:	pop    esp
  40e6f8:	jmp    0x20e0:0x9c74de26
  40e6ff:	sub    esp,edx
  40e701:	clc    
  40e702:	or     dh,BYTE PTR [edx]
  40e704:	ja     0x40e77c
  40e706:	and    edx,DWORD PTR [ebx]
  40e708:	repnz xlat BYTE PTR ds:[ebx]
  40e70a:	sub    eax,0xb0119bab
  40e70f:	mov    eax,ds:0xa4134245
  40e714:	mov    esi,0xa5a24004
  40e719:	cmp    edi,DWORD PTR [ebx+0x3d3cb332]
  40e71f:	test   al,0xe6
  40e721:	(bad)  
  40e722:	jns    0x40e6b6
  40e724:	pop    es
  40e725:	leave  
  40e726:	retf   0xfa88
  40e729:	push   ebx
  40e72a:	push   ds
  40e72b:	pop    edi
  40e72c:	hlt    
  40e72d:	pushf  
  40e72e:	sbb    DWORD PTR [ebx+ecx*1],ebp
  40e731:	xlat   BYTE PTR ds:[ebx]
  40e732:	adc    BYTE PTR [esi+esi*2],ch
  40e735:	pop    es
  40e736:	xor    ecx,DWORD PTR [ecx+0x5d]
  40e739:	sub    cl,dh
  40e73b:	je     0x40e6de
  40e73d:	adc    ch,bl
  40e73f:	mov    edx,0x54e2683c
  40e744:	aaa    
  40e745:	add    dh,cl
  40e747:	xchg   edi,eax
  40e748:	xor    DWORD PTR [ebp-0x26],edi
  40e74b:	and    eax,0x54cf99d6
  40e750:	inc    edi
  40e751:	cmp    al,0xb1
  40e753:	shl    BYTE PTR [ecx-0x75],0x55
  40e757:	cli    
  40e758:	lods   al,BYTE PTR ds:[esi]
  40e759:	call   0xcbf4:0x319de6e8
  40e760:	in     eax,0xa3
  40e762:	nop
  40e763:	clc    
  40e764:	jl     0x40e758
  40e766:	pop    ds
  40e767:	mov    bh,0x9e
  40e769:	add    DWORD PTR [ecx+0x18],ebx
  40e76c:	sbb    ebp,DWORD PTR [edi]
  40e76e:	jl     0x40e76f
  40e770:	rcr    bh,cl
  40e772:	int    0x7d
  40e774:	and    bh,dh
  40e776:	or     DWORD PTR [eax+0x1cb759fd],0xfeea7dfb
  40e780:	mov    al,0x5a
  40e782:	xor    ah,ah
  40e784:	dec    eax
  40e785:	push   es
  40e786:	push   edx
  40e787:	pop    ecx
  40e788:	lods   eax,DWORD PTR ds:[esi]
  40e789:	shl    DWORD PTR [ecx+ecx*8+0x76],cl
  40e78d:	ret    0x61df
  40e790:	xchg   edx,eax
  40e791:	into   
  40e792:	sub    eax,0x733ae01a
  40e797:	mov    bl,0xb4
  40e799:	loope  0x40e739
  40e79b:	aas    
  40e79c:	pop    ds
  40e79d:	mul    DWORD PTR ds:0x30bd5ef7
  40e7a3:	mov    ch,0xec
  40e7a5:	gs ins DWORD PTR es:[edi],dx
  40e7a7:	xor    edx,DWORD PTR [esi+0x4f]
  40e7aa:	inc    edi
  40e7ab:	ss pop edx
  40e7ad:	pop    esp
  40e7ae:	stos   BYTE PTR es:[edi],al
  40e7af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e7b0:	cmovae edi,DWORD PTR [ebx]
  40e7b3:	ss cmp al,0x11
  40e7b6:	fcom   QWORD PTR [ecx]
  40e7b8:	imul   ecx,DWORD PTR gs:[esi-0x490b48d0],0xffffffb5
  40e7c0:	jecxz  0x40e805
  40e7c2:	mov    eax,0x43d2
  40e7c7:	sub    eax,ecx
  40e7c9:	add    eax,DWORD PTR [ebp+0xc]
  40e7cc:	xor    edx,edx
  40e7ce:	add    eax,DWORD PTR [ebp-0x14]
  40e7d1:	mov    ecx,DWORD PTR [ebp-0xc]
  40e7d4:	div    ecx
  40e7d6:	mov    ecx,DWORD PTR [ebp+0x10]
  40e7d9:	xor    edx,edx
  40e7db:	pop    edi
  40e7dc:	pop    ebx
  40e7dd:	or     eax,0x67ad
  40e7e2:	mov    DWORD PTR [esi+eax*4-0x3bfa4],ecx
  40e7e9:	mov    DWORD PTR [ebp+0x10],0x517b
  40e7f0:	mov    DWORD PTR [ebp+0xc],0x5d62
  40e7f7:	mov    DWORD PTR [ebp+0x8],0x41b0
  40e7fe:	mov    ecx,DWORD PTR [ebp+0x8]
  40e801:	mov    eax,DWORD PTR [ebp+0xc]
  40e804:	and    ecx,0x68c1
  40e80a:	sub    ecx,0x6fd3
  40e810:	or     ecx,eax
  40e812:	mov    eax,DWORD PTR [ebp+0x10]
  40e815:	imul   ecx,eax
  40e818:	mov    eax,0xf52840d5
  40e81d:	div    ecx
  40e81f:	leave  
  40e820:	ret    0xc
  40e823:	push   ebp
  40e824:	mov    ebp,esp
  40e826:	sub    esp,0xc0
  40e82c:	push   esi
  40e82d:	mov    DWORD PTR [ebp-0x80],0x2f93
  40e834:	mov    DWORD PTR [ebp-0x7c],0x3321
  40e83b:	mov    DWORD PTR [ebp-0x70],0x7d00
  40e842:	mov    DWORD PTR [ebp-0x6c],0xd87
  40e849:	jmp    0x40eb8c
  40e84e:	xor    dl,BYTE PTR [ecx]
  40e850:	sub    al,0x76
  40e852:	sub    al,0x78
  40e854:	mov    ah,0x99
  40e856:	sahf   
  40e857:	mov    ?,WORD PTR [eax+0x2cf76acf]
  40e85d:	shr    DWORD PTR [edx+0x1bebe0a],1
  40e863:	les    edi,FWORD PTR [esi+0x728ea6be]
  40e869:	fild   DWORD PTR [ecx+0x4d53f125]
  40e86f:	sbb    ecx,ebx
  40e871:	pop    edi
  40e872:	xor    ebp,DWORD PTR [ecx+esi*1-0x663f2969]
  40e879:	je     0x40e885
  40e87b:	lea    edx,[ebx+0x2d]
  40e87e:	call   0x5a96c685
  40e883:	or     al,BYTE PTR [edi-0x5b]
  40e886:	shl    DWORD PTR [esi+0x38a340d1],0x5f
  40e88d:	aaa    
  40e88e:	hlt    
  40e88f:	sub    al,BYTE PTR [ebx]
  40e891:	imul   ecx,DWORD PTR ss:[edx+0x5db56b84],0x56
  40e899:	inc    eax
  40e89a:	dec    esi
  40e89b:	mov    cl,0xad
  40e89d:	ds out 0x96,eax
  40e8a0:	xchg   DWORD PTR [eax],eax
  40e8a2:	sbb    esi,DWORD PTR [esi]
  40e8a4:	xchg   esi,eax
  40e8a5:	cwde   
  40e8a6:	loop   0x40e927
  40e8a8:	xchg   ebx,eax
  40e8a9:	cmp    DWORD PTR [edi+eax*1+0x25],ebx
  40e8ad:	je     0x40e91b
  40e8af:	scas   eax,DWORD PTR es:[edi]
  40e8b0:	adc    eax,0x1558f262
  40e8b5:	arpl   si,dx
  40e8b7:	jecxz  0x40e8da
  40e8b9:	dec    edi
  40e8ba:	mul    al
  40e8bc:	jle    0x40e907
  40e8be:	sub    esi,DWORD PTR [edx+0x65]
  40e8c1:	mov    al,0xce
  40e8c3:	shr    bl,0x32
  40e8c6:	xor    dl,BYTE PTR [edi+0x6d]
  40e8c9:	fwait
  40e8ca:	mov    bl,0x19
  40e8cc:	in     al,0xd3
  40e8ce:	push   es
  40e8cf:	cmp    ebp,DWORD PTR [edi]
  40e8d1:	mov    ebp,0x8c54216b
  40e8d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e8d7:	cmp    al,BYTE PTR [esi-0x2ce7360e]
  40e8dd:	cmp    cl,BYTE PTR [edi+0x74]
  40e8e0:	cli    
  40e8e1:	add    al,0xc7
  40e8e3:	out    0xc3,eax
  40e8e5:	hlt    
  40e8e6:	mov    edx,0x6d2c2e87
  40e8eb:	xchg   ebp,esp
  40e8ed:	and    DWORD PTR [ebx+0x3e9c856a],0x6c
  40e8f4:	mov    cl,0x53
  40e8f6:	int3   
  40e8f7:	push   edx
  40e8f8:	push   edx
  40e8f9:	aad    0x43
  40e8fb:	sub    al,0x81
  40e8fd:	mov    bh,0x49
  40e8ff:	mov    bl,0xb4
  40e901:	jmp    0x40e968
  40e903:	scas   al,BYTE PTR es:[edi]
  40e904:	jo     0x40e93e
  40e906:	fistp  WORD PTR [ebx+0x6131b084]
  40e90c:	mov    cl,0xaf
  40e90e:	pminub mm7,QWORD PTR [edx]
  40e911:	rol    bl,0x28
  40e914:	dec    edx
  40e915:	mov    fs,WORD PTR [ebp+ecx*1+0x74]
  40e919:	dec    esi
  40e91a:	and    edx,eax
  40e91c:	gs addr16 jne 0x40e93e
  40e920:	inc    edx
  40e921:	mov    al,ds:0x264b78d4
  40e926:	rsqrtps xmm1,XMMWORD PTR [esi]
  40e929:	loopne 0x40e997
  40e92b:	iret   
  40e92c:	mov    ebp,0xbb65ec1c
  40e931:	loopne 0x40e964
  40e933:	cwde   
  40e934:	jge    0x40e8e3
  40e936:	loop   0x40e962
  40e938:	pop    ecx
  40e939:	cmp    eax,0xff6df831
  40e93e:	mov    eax,0xeb9c1dd
  40e943:	sbb    DWORD PTR [eax],0xffffffca
  40e946:	inc    ebp
  40e947:	mov    ebx,0x7b925826
  40e94c:	pop    edi
  40e94d:	retf   
  40e94e:	mov    al,BYTE PTR [edx+0x71]
  40e951:	mov    es,WORD PTR [esi+0x80e61fd]
  40e957:	and    al,0xe8
  40e959:	push   esp
  40e95a:	push   ecx
  40e95b:	push   0x11727bfc
  40e960:	mov    cl,0xcd
  40e962:	xchg   edi,eax
  40e963:	mov    dl,0x6d
  40e965:	test   DWORD PTR [ecx],ebx
  40e967:	add    eax,0xf58f68d6
  40e96c:	daa    
  40e96d:	mov    bl,0xde
  40e96f:	cwde   
  40e970:	add    al,0x4f
  40e972:	ror    BYTE PTR [ebp+0x49],cl
  40e975:	xchg   ebp,eax
  40e976:	inc    eax
  40e977:	xor    edx,DWORD PTR [edi]
  40e979:	iret   
  40e97a:	fcomp  QWORD PTR [esi]
  40e97c:	cli    
  40e97d:	push   edx
  40e97e:	ins    DWORD PTR es:[edi],dx
  40e97f:	xor    eax,0xe09a2fcf
  40e984:	add    BYTE PTR [ebx],ch
  40e986:	sub    DWORD PTR [eax+0x1350850c],ecx
  40e98c:	adc    eax,0xa42134f4
  40e991:	push   edx
  40e992:	adc    eax,0x787351c2
  40e997:	js     0x40e99b
  40e999:	mov    cl,0x8f
  40e99b:	repnz dec ebp
  40e99d:	outs   dx,DWORD PTR ds:[esi]
  40e99e:	xor    al,0xd
  40e9a1:	sbb    cl,BYTE PTR [esi-0x6d]
  40e9a4:	repnz mov ch,0x3e
  40e9a7:	jb     0x40e9bc
  40e9a9:	dec    edx
  40e9aa:	clc    
  40e9ab:	pop    DWORD PTR [edx]
  40e9ad:	sahf   
  40e9ae:	or     dl,BYTE PTR [eax+0x28c6974]
  40e9b4:	adc    edi,DWORD PTR cs:[esi-0x2c]
  40e9b8:	ss xchg esi,eax
  40e9ba:	jmp    0x40e971
  40e9bc:	sub    al,0x62
  40e9be:	(bad)  [edi-0x4d]
  40e9c1:	popf   
  40e9c2:	repnz mov bl,0x31
  40e9c5:	ds inc eax
  40e9c7:	enter  0xd6bb,0xe1
  40e9cb:	cmp    ebp,DWORD PTR [eax-0x659ba9c7]
  40e9d1:	sbb    al,0x15
  40e9d3:	loope  0x40ea38
  40e9d5:	or     eax,0x9a34c9a9
  40e9da:	adc    ch,BYTE PTR [edi-0x5a]
  40e9dd:	mov    ah,ch
  40e9df:	repnz dec ecx
  40e9e1:	jle    0x40e981
  40e9e3:	leave  
  40e9e4:	jbe    0x40ea01
  40e9e6:	call   0x88ae69f9
  40e9eb:	imul   eax,DWORD PTR [ecx],0x45
  40e9ee:	pusha  
  40e9ef:	addr16 xchg ebx,eax
  40e9f1:	jo     0x40e9bd
  40e9f3:	outs   dx,BYTE PTR ds:[esi]
  40e9f4:	and    BYTE PTR [eax-0x34],0x5e
  40e9f8:	ds mov ebx,0x20e599ca
  40e9fe:	dec    esp
  40e9ff:	dec    ebx
  40ea00:	aam    0xfa
  40ea02:	outs   dx,DWORD PTR ds:[esi]
  40ea03:	scas   al,BYTE PTR es:[edi]
  40ea04:	je     0x40e9d2
  40ea06:	push   edx
  40ea07:	sub    eax,DWORD PTR [ebx+0x526037b3]
  40ea0d:	inc    eax
  40ea0e:	dec    edx
  40ea0f:	xor    ebx,DWORD PTR ds:0x67fb8c34
  40ea15:	pop    ebp
  40ea16:	(bad)
  40ea1a:	and    al,0x74
  40ea1c:	mov    bl,BYTE PTR [ecx]
  40ea1e:	mov    cl,BYTE PTR [ecx+0x2f]
  40ea21:	pop    eax
  40ea22:	push   esi
  40ea23:	xor    dh,bl
  40ea25:	sbb    cl,BYTE PTR [esi+0x6b]
  40ea28:	sub    cl,BYTE PTR [edi]
  40ea2a:	ja     0x40ea3d
  40ea2c:	mov    ebx,esi
  40ea2e:	or     eax,0xa231594f
  40ea33:	in     eax,dx
  40ea34:	xor    BYTE PTR [esi-0x11f837fe],ah
  40ea3a:	mov    ch,0xd9
  40ea3c:	rcr    BYTE PTR [edi+0x1a],cl
  40ea3f:	outs   dx,DWORD PTR ds:[esi]
  40ea40:	inc    esi
  40ea41:	or     ah,al
  40ea43:	test   al,bh
  40ea45:	cmp    eax,0x73c5fb35
  40ea4a:	sub    ecx,DWORD PTR [edx-0x70152b03]
  40ea50:	adc    esi,DWORD PTR [edx-0x738be89a]
  40ea56:	sbb    edx,0xc3d3d3aa
  40ea5c:	iret   
  40ea5d:	inc    edi
  40ea5e:	push   ebx
  40ea5f:	mov    dl,0xfa
  40ea61:	mov    ah,0xa1
  40ea63:	mov    eax,ds:0xfefbdb16
  40ea68:	(bad)  
  40ea69:	or     dh,BYTE PTR [ebx]
  40ea6b:	mov    edi,DWORD PTR [edi-0x5]
  40ea6e:	dec    edx
  40ea6f:	fstp   DWORD PTR cs:[edx-0x7b]
  40ea73:	(bad)
  40ea76:	pop    ss
  40ea77:	outs   dx,DWORD PTR ds:[esi]
  40ea78:	not    DWORD PTR [edx]
  40ea7a:	scas   eax,DWORD PTR es:[edi]
  40ea7b:	jne    0x40eae0
  40ea7d:	lds    edi,FWORD PTR [edi+0x7351f062]
  40ea83:	ret    
  40ea84:	bound  ecx,QWORD PTR gs:[eax+0x5e]
  40ea88:	push   ecx
  40ea89:	jge    0x40eafc
  40ea8b:	xlat   BYTE PTR ds:[ebx]
  40ea8c:	std    
  40ea8d:	xor    DWORD PTR [edi+0x46e2abba],edi
  40ea93:	jo     0x40ea79
  40ea95:	repnz pop esp
  40ea97:	and    esi,DWORD PTR [ebp+0x5018e71]
  40ea9d:	add    eax,0x9e212ca5
  40eaa2:	mov    al,ds:0x1ed2018e
  40eaa7:	cmp    DWORD PTR [edi-0x7e],eax
  40eaaa:	int3   
  40eaab:	xor    DWORD PTR [esi-0x59],0xffffffaa
  40eaaf:	mov    ds:0xc53fcdb9,eax
  40eab4:	push   ss
  40eab5:	imul   ecx,esi,0x3e
  40eab8:	retf   0x8d2b
  40eabb:	leave  
  40eabc:	xor    DWORD PTR [ecx+esi*2],ebp
  40eabf:	jnp    0x40eb09
  40eac1:	pop    ebx
  40eac2:	pop    eax
  40eac3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eac4:	or     al,0xd9
  40eac6:	or     al,0xd5
  40eac8:	mov    dl,0x18
  40eaca:	inc    ebp
  40eacb:	mov    WORD PTR [edx-0x46bc2f5d],es
  40ead1:	leave  
  40ead2:	into   
  40ead3:	and    BYTE PTR [ebx],dh
  40ead5:	jno    0x40ea67
  40ead7:	mov    bl,dl
  40ead9:	stc    
  40eada:	and    dl,BYTE PTR [ebx]
  40eadc:	jnp    0x40eae2
  40eade:	outs   dx,BYTE PTR ds:[esi]
  40eadf:	neg    DWORD PTR [eax-0x59]
  40eae2:	stos   DWORD PTR es:[edi],eax
  40eae3:	mov    bl,0xa9
  40eae5:	xchg   ebp,eax
  40eae6:	and    eax,0x6aced037
  40eaeb:	xor    al,BYTE PTR [edx+0xabe7bd6]
  40eaf1:	shl    BYTE PTR [edx-0x4a],1
  40eaf4:	xchg   ebx,eax
  40eaf5:	mov    DWORD PTR [ecx],eax
  40eaf7:	pop    edi
  40eaf8:	ins    DWORD PTR es:[edi],dx
  40eaf9:	dec    esp
  40eafa:	out    0xf8,eax
  40eafc:	(bad)  
  40eafd:	rol    DWORD PTR [eax+0x37],1
  40eb00:	ret    0x8a63
  40eb03:	imul   ecx,edi,0x69372807
  40eb09:	inc    ebp
  40eb0a:	lss    eax,FWORD PTR ds:[ebx+0x11]
  40eb0f:	or     eax,ebx
  40eb11:	fstp   QWORD PTR [ebp+ecx*4-0x1356ee36]
  40eb18:	mov    eax,DWORD PTR [esi]
  40eb1a:	(bad)  
  40eb1b:	pop    edi
  40eb1c:	ret    0x83d2
  40eb1f:	and    eax,0x760e84c5
  40eb24:	sub    ah,ah
  40eb26:	shl    BYTE PTR [ebp-0x5b],1
  40eb29:	aas    
  40eb2a:	cdq    
  40eb2b:	hlt    
  40eb2c:	pop    ebp
  40eb2d:	inc    ecx
  40eb2e:	fist   WORD PTR [ebx+0x28]
  40eb31:	sub    ebp,esi
  40eb33:	dec    ebp
  40eb34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb35:	(bad)  
  40eb36:	sub    al,0xf8
  40eb38:	push   0x3b9ab01b
  40eb3d:	fmul   st,st(2)
  40eb3f:	clc    
  40eb40:	dec    esi
  40eb41:	push   ds
  40eb42:	push   cs
  40eb43:	xor    eax,0xc3f16ad7
  40eb48:	ret    0xe5d1
  40eb4b:	icebp  
  40eb4c:	hlt    
  40eb4d:	pop    esp
  40eb4e:	les    eax,FWORD PTR [ebx+0x3f409243]
  40eb54:	sbb    BYTE PTR [ebp-0x65ddf03b],ch
  40eb5a:	push   0xffffffaf
  40eb5c:	das    
  40eb5d:	adc    DWORD PTR [esi],edi
  40eb5f:	test   DWORD PTR [eax],ecx
  40eb61:	sub    eax,0xe4a2f6ef
  40eb66:	cmp    BYTE PTR [esi+0x41e93ffc],ch
  40eb6c:	xchg   ebp,eax
  40eb6d:	fs jp  0x40eb2b
  40eb70:	(bad)  
  40eb71:	pusha  
  40eb72:	cld    
  40eb73:	push   0x6ae0d351
  40eb78:	push   0x4e
  40eb7a:	(bad)  
  40eb7b:	pop    ds
  40eb7c:	arpl   WORD PTR [ebx+ebp*8+0x39],cx
  40eb80:	and    al,0xba
  40eb82:	mov    cs,WORD PTR [eax+0x7503e60f]
  40eb88:	pop    edx
  40eb89:	(bad)  
  40eb8a:	and    ecx,DWORD PTR [ebx-0x685fba39]
  40eb90:	inc    ecx
  40eb91:	add    BYTE PTR [eax],al
  40eb93:	mov    DWORD PTR [ebp-0x5c],0xa7d
  40eb9a:	mov    DWORD PTR [ebp-0x50],0x772d
  40eba1:	mov    DWORD PTR [ebp-0x4c],0x37d8
  40eba8:	mov    DWORD PTR [ebp-0x40],0x414a
  40ebaf:	mov    DWORD PTR [ebp-0x3c],0x55ef
  40ebb6:	mov    DWORD PTR [ebp-0x30],0x136b
  40ebbd:	mov    DWORD PTR [ebp-0x2c],0x53e4
  40ebc4:	mov    DWORD PTR [ebp-0x20],0x32d8
  40ebcb:	mov    DWORD PTR [ebp-0x1c],0x5cb6
  40ebd2:	mov    DWORD PTR [ebp-0xc],0x3956
  40ebd9:	mov    DWORD PTR [ebp-0xa4],0x4e57
  40ebe3:	mov    DWORD PTR [ebp-0x94],0x1
  40ebed:	mov    DWORD PTR [ebp-0x14],0x17ab
  40ebf4:	mov    DWORD PTR [ebp-0x64],0x7a3d
  40ebfb:	mov    DWORD PTR [ebp-0x54],0x378a
  40ec02:	mov    DWORD PTR [ebp-0x74],0x5a00
  40ec09:	mov    DWORD PTR [ebp-0x24],0x1f3a
  40ec10:	mov    DWORD PTR [ebp-0x84],0x9a225
  40ec1a:	mov    DWORD PTR [ebp-0x44],0x31f8
  40ec21:	mov    DWORD PTR [ebp-0x34],0x3663
  40ec28:	mov    DWORD PTR [ebp-0xb4],0x3165
  40ec32:	mov    DWORD PTR [ebp-0xc0],0x1ebe
  40ec3c:	mov    DWORD PTR [ebp-0xbc],0x43cc
  40ec46:	mov    DWORD PTR [ebp-0xb0],0x7564
  40ec50:	mov    DWORD PTR [ebp-0xac],0x18cf
  40ec5a:	mov    DWORD PTR [ebp-0xa0],0x3135
  40ec64:	mov    DWORD PTR [ebp-0x9c],0x568d
  40ec6e:	mov    DWORD PTR [ebp-0x90],0x11f2
  40ec78:	mov    DWORD PTR [ebp-0x8c],0x63ea
  40ec82:	mov    DWORD PTR [ebp-0x10],0x3066
  40ec89:	mov    DWORD PTR [ebp-0x8],0x6ed2
  40ec90:	push   0x7e1d
  40ec95:	mov    DWORD PTR [ebp-0x4],0x30f4
  40ec9c:	mov    eax,DWORD PTR [ebp-0x20]
  40ec9f:	mov    ecx,DWORD PTR [ebp-0x1c]
  40eca2:	push   0x5380
  40eca7:	push   ecx
  40eca8:	push   eax
  40eca9:	call   0x41594e
  40ecae:	mov    ecx,eax
  40ecb0:	mov    eax,DWORD PTR [ebp-0x30]
  40ecb3:	xor    ecx,eax
  40ecb5:	mov    esi,edx
  40ecb7:	mov    edx,DWORD PTR [ebp-0x2c]
  40ecba:	mov    eax,DWORD PTR [ebp-0x40]
  40ecbd:	xor    esi,edx
  40ecbf:	mov    edx,DWORD PTR [ebp-0x3c]
  40ecc2:	xor    ecx,0xf3a
  40ecc8:	or     ecx,eax
  40ecca:	mov    eax,ds:0x422738
  40eccf:	mov    eax,DWORD PTR [eax+0x1d8]
  40ecd5:	mov    eax,DWORD PTR [eax]
  40ecd7:	xor    esi,0x6665
  40ecdd:	or     esi,edx
  40ecdf:	add    ecx,0xef6a96a5
  40ece5:	cdq    
  40ece6:	adc    esi,0xc8b6a000
  40ecec:	cmp    eax,ecx
  40ecee:	jne    0x40ecfc
  40ecf4:	cmp    edx,esi
  40ecf6:	je     0x40ed5b
  40ecfc:	mov    eax,DWORD PTR [ebp-0x50]
  40ecff:	mov    ecx,DWORD PTR [ebp-0x4c]
  40ed02:	mov    edx,DWORD PTR [ebp-0x60]
  40ed05:	mov    esi,DWORD PTR [ebp-0x5c]
  40ed08:	add    eax,0x7818
  40ed0d:	adc    ecx,0x87
  40ed13:	or     eax,edx
  40ed15:	mov    edx,DWORD PTR [ebp-0x70]
  40ed18:	or     ecx,esi
  40ed1a:	mov    esi,DWORD PTR [ebp-0x6c]
  40ed1d:	push   esi
  40ed1e:	push   edx
  40ed1f:	push   ecx
  40ed20:	push   eax
  40ed21:	call   0x41594e
  40ed26:	mov    ecx,DWORD PTR [ebp-0x80]
  40ed29:	mov    esi,DWORD PTR [ebp-0x7c]
  40ed2c:	and    eax,ecx
  40ed2e:	mov    ecx,DWORD PTR ds:0x422738
  40ed34:	mov    ecx,DWORD PTR [ecx+0x1d0]
  40ed3a:	mov    ecx,DWORD PTR [ecx]
  40ed3c:	and    edx,esi
  40ed3e:	xor    eax,0x2b01
  40ed43:	xor    edx,0x2021
  40ed49:	xor    esi,esi
  40ed4b:	cmp    ecx,eax
  40ed4d:	jne    0x40f1dc
  40ed53:	cmp    esi,edx
  40ed55:	jne    0x40f1dc
  40ed5b:	mov    eax,DWORD PTR [ebp-0xa4]
  40ed61:	mov    ecx,DWORD PTR [ebp-0xc]
  40ed64:	add    eax,0x80ca
  40ed69:	or     eax,ecx
  40ed6b:	mov    ecx,DWORD PTR ds:0x4227d4
  40ed71:	or     eax,0x686
  40ed76:	xor    eax,0x3eec
  40ed7b:	lea    eax,[eax+ecx*1-0xc11b]
  40ed82:	xor    DWORD PTR ds:0x4227cc,eax
  40ed88:	mov    eax,DWORD PTR [ebp-0x64]
  40ed8b:	and    eax,0x4dff
  40ed90:	add    eax,DWORD PTR [ebp-0x14]
  40ed93:	mov    ecx,DWORD PTR [ebp-0x94]
  40ed99:	xor    eax,0x676c
  40ed9e:	xor    edx,edx
  40eda0:	div    ecx
  40eda2:	mov    ecx,DWORD PTR [ebp-0x24]
  40eda5:	mov    edx,DWORD PTR [ebp-0x74]
  40eda8:	xor    ecx,0x6e1e
  40edae:	imul   ecx,edx
  40edb1:	mov    edx,DWORD PTR [ebp+0x8]
  40edb4:	push   0x4
  40edb6:	push   0xe4c37b20
  40edbb:	xor    eax,0x3884
  40edc0:	mov    eax,DWORD PTR [eax+edx*1]
  40edc3:	lea    ecx,[eax+ecx*1-0x27c6df8a]
  40edca:	mov    eax,DWORD PTR [ebp-0x34]
  40edcd:	mov    edx,DWORD PTR [ebp-0xb4]
  40edd3:	lea    eax,[edx+eax*1-0x76d2]
  40edda:	mov    edx,DWORD PTR [ebp-0x44]
  40eddd:	mov    esi,DWORD PTR [ebp-0x84]
  40ede3:	or     eax,edx
  40ede5:	xor    edx,edx
  40ede7:	div    esi
  40ede9:	mov    edx,DWORD PTR [ebp-0x54]
  40edec:	add    eax,0x43d7
  40edf1:	xor    eax,0x5e6a
  40edf6:	add    eax,DWORD PTR [edx+ecx*1]
  40edf9:	mov    ecx,DWORD PTR ds:0x4227cc
  40edff:	add    DWORD PTR [eax],ecx
  40ee01:	mov    eax,DWORD PTR [ebp-0x90]
  40ee07:	mov    ecx,DWORD PTR [ebp-0x8c]
  40ee0d:	mov    edx,DWORD PTR [ebp-0xa0]
  40ee13:	mov    esi,DWORD PTR [ebp-0x9c]
  40ee19:	sub    edx,eax
  40ee1b:	mov    eax,DWORD PTR [ebp-0xb0]
  40ee21:	sbb    esi,ecx
  40ee23:	mov    ecx,DWORD PTR [ebp-0xac]
  40ee29:	xor    edx,eax
  40ee2b:	mov    eax,DWORD PTR [ebp-0xc0]
  40ee31:	xor    esi,ecx
  40ee33:	mov    ecx,DWORD PTR [ebp-0xbc]
  40ee39:	add    edx,eax
  40ee3b:	adc    esi,ecx
  40ee3d:	add    edx,0x2313
  40ee43:	adc    esi,0x2a00
  40ee49:	push   esi
  40ee4a:	push   edx
  40ee4b:	call   0x4222ab
  40ee50:	mov    ecx,0x1207
  40ee55:	sub    ecx,eax
  40ee57:	push   0x0
  40ee59:	pop    eax
  40ee5a:	sbb    eax,edx
  40ee5c:	mov    edx,DWORD PTR ds:0x4227cc
  40ee62:	xor    esi,esi
  40ee64:	jmp    0x40f1a7
  40ee69:	mov    bh,0x51
  40ee6b:	lods   eax,DWORD PTR ds:[esi]
  40ee6c:	xchg   edi,eax
  40ee6d:	mov    ebx,0x8571b7bb
  40ee72:	pop    ecx
  40ee73:	xor    ch,bl
  40ee75:	adc    al,0xaa
  40ee77:	leave  
  40ee78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee79:	in     eax,dx
  40ee7a:	adc    bh,BYTE PTR [esi-0x413bfe42]
  40ee80:	mov    esi,0x93f747c0
  40ee85:	sbb    eax,0xcf9258d1
  40ee8a:	clc    
  40ee8b:	xor    BYTE PTR [esi+eax*8-0xc],ah
  40ee8f:	(bad)  
  40ee90:	xor    DWORD PTR [eax+0x7f],edx
  40ee93:	shr    DWORD PTR [esi+eax*1],cl
  40ee96:	popf   
  40ee97:	jecxz  0x40eec7
  40ee99:	popf   
  40ee9a:	sbb    edx,DWORD PTR gs:[ecx-0x4efb46a7]
  40eea1:	ror    ebp,1
  40eea3:	aas    
  40eea4:	mov    DWORD PTR [ebx+0x23],edi
  40eea7:	cmp    DWORD PTR [ebp-0x76fdc42b],0xeadc98d4
  40eeb1:	mov    ah,0x23
  40eeb3:	popf   
  40eeb4:	stos   DWORD PTR es:[di],eax
  40eeb6:	mov    cl,0xd
  40eeb8:	mov    esp,0xa8c5b467
  40eebd:	outs   dx,DWORD PTR ds:[esi]
  40eebe:	pop    ecx
  40eebf:	mov    esi,0x1844a720
  40eec4:	inc    ecx
  40eec5:	sbb    bh,ch
  40eec7:	mov    DWORD PTR [esi+0x6c3f9fff],0x8cb2df5e
  40eed1:	cmc    
  40eed2:	aas    
  40eed3:	outs   dx,DWORD PTR ds:[esi]
  40eed4:	sub    DWORD PTR [edi-0x36c6711e],esi
  40eeda:	gs xchg ecx,eax
  40eedc:	sbb    al,0xd8
  40eede:	(bad)  
  40eedf:	rol    edi,cl
  40eee1:	(bad)  
  40eee2:	or     BYTE PTR [eax+0x67fbc642],cl
  40eee8:	xchg   DWORD PTR [edx-0x66],ebp
  40eeeb:	pop    esi
  40eeec:	pop    edx
  40eeed:	in     al,0xcc
  40eeef:	les    edi,FWORD PTR ds:[esi+0x55071cd1]
  40eef6:	xchg   esi,eax
  40eef7:	sub    eax,0xd0868394
  40eefc:	fnstenv [ebx+0x6b44dfc4]
  40ef02:	add    edi,ebp
  40ef04:	mov    bl,0x72
  40ef06:	shl    DWORD PTR [ebp-0x12f7863c],1
  40ef0c:	xchg   ecx,eax
  40ef0d:	adc    DWORD PTR [eax-0x384e8cf9],ebx
  40ef13:	mov    al,ds:0x32798ac
  40ef18:	dec    eax
  40ef19:	retf   0x1b24
  40ef1c:	mov    ch,0x7
  40ef1e:	sti    
  40ef1f:	aaa    
  40ef20:	mov    ebp,0xd84c1823
  40ef25:	inc    ebx
  40ef26:	retf   0xbfbf
  40ef29:	mov    ds:0x24c7d5b9,al
  40ef2e:	lods   al,BYTE PTR ds:[esi]
  40ef2f:	add    BYTE PTR [eax+0x66d63fc3],0x33
  40ef36:	rcl    ebp,cl
  40ef38:	push   edi
  40ef39:	into   
  40ef3a:	sbb    DWORD PTR [ecx],eax
  40ef3c:	sbb    al,0xc3
  40ef3e:	bound  ebp,QWORD PTR [edi+0x36]
  40ef41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef42:	push   0x3b
  40ef44:	xchg   edi,eax
  40ef45:	or     eax,0xd140a125
  40ef4a:	call   0xca4d:0xa8060393
  40ef51:	mov    BYTE PTR [eax-0x23],dh
  40ef54:	pop    ds
  40ef55:	fs cmp edx,ecx
  40ef58:	iret   
  40ef59:	pushf  
  40ef5a:	and    ah,BYTE PTR [esi-0x613bff09]
  40ef60:	loop   0x40ef19
  40ef62:	ja     0x40ef21
  40ef64:	sbb    BYTE PTR [edx],0xdf
  40ef67:	xor    ch,BYTE PTR [eax+0x5605a653]
  40ef6d:	pop    es
  40ef6e:	out    0xe1,eax
  40ef70:	shl    esp,0xd9
  40ef73:	outs   dx,BYTE PTR ds:[esi]
  40ef74:	lea    esi,[ecx]
  40ef76:	lock add BYTE PTR ds:0x60230a78,bh
  40ef7d:	nop
  40ef7e:	shl    BYTE PTR [esi],cl
  40ef80:	aaa    
  40ef81:	mov    bl,0xa2
  40ef83:	(bad)  
  40ef84:	sbb    BYTE PTR [ebx-0x11],ah
  40ef87:	ins    BYTE PTR es:[edi],dx
  40ef88:	imul   eax,DWORD PTR [ebx],0xffffffc3
  40ef8b:	fcom   DWORD PTR [edx+0xa]
  40ef8e:	std    
  40ef8f:	push   edx
  40ef90:	out    dx,al
  40ef91:	mov    al,ds:0x61e397a9
  40ef96:	test   BYTE PTR [ebx],bh
  40ef98:	dec    esp
  40ef99:	sbb    esp,edx
  40ef9b:	push   edi
  40ef9c:	sti    
  40ef9d:	shr    DWORD PTR [esi+0x6ef45984],cl
  40efa3:	int    0xd9
  40efa5:	addr16 gs jp 0x40effc
  40efa9:	ret    
  40efaa:	out    dx,eax
  40efab:	push   ss
  40efac:	sub    DWORD PTR [ebx],edx
  40efae:	shl    DWORD PTR [ecx-0x5c],0x1a
  40efb2:	mov    ebp,0x30d5643f
  40efb7:	sbb    ecx,ecx
  40efb9:	out    0x3a,eax
  40efbb:	scas   al,BYTE PTR es:[edi]
  40efbc:	add    eax,DWORD PTR [eax]
  40efbe:	ret    
  40efbf:	aaa    
  40efc0:	inc    ebx
  40efc1:	cs ja  0x40ef67
  40efc4:	and    DWORD PTR [eax+eax*2-0x4b39b951],ebp
  40efcb:	lea    ebx,[ebp+ecx*2+0x13]
  40efcf:	(bad)  
  40efd1:	rcr    DWORD PTR [ebx+esi*4+0x4ad9af25],1
  40efd8:	outs   dx,DWORD PTR ds:[esi]
  40efd9:	rcl    DWORD PTR [ecx],cl
  40efdb:	ins    DWORD PTR es:[edi],dx
  40efdc:	pop    es
  40efdd:	and    al,0x5d
  40efdf:	pusha  
  40efe0:	fwait
  40efe1:	push   es
  40efe2:	mov    ds:0xe10dc1a4,al
  40efe7:	push   0xffffffee
  40efe9:	(bad)  
  40efea:	or     DWORD PTR [ebx+0x6184140b],edx
  40eff0:	mov    edx,0x6edf60c6
  40eff5:	push   edx
  40eff6:	inc    ebx
  40eff7:	into   
  40eff8:	retf   
  40eff9:	xchg   edx,eax
  40effa:	jmp    0x40efd3
  40effc:	sub    al,0x92
  40effe:	out    dx,eax
  40efff:	clc    
  40f000:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f001:	repnz loop 0x40f047
  40f004:	ins    DWORD PTR es:[edi],dx
  40f005:	dec    edx
  40f006:	add    eax,0x160245ba
  40f00b:	frstor [edx-0x63a41a4e]
  40f011:	xchg   ebx,eax
  40f012:	dec    eax
  40f013:	mov    ecx,0x8628ecfb
  40f018:	jne    0x40f037
  40f01a:	je     0x40f00b
  40f01c:	(bad)  
  40f01d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f01e:	xor    DWORD PTR [eax+eiz*8-0x43],ebp
  40f022:	sub    bl,BYTE PTR [edx+0x41]
  40f025:	jae    0x40efd7
  40f027:	sbb    esi,DWORD PTR [eax-0x33b0e423]
  40f02d:	out    0x3f,al
  40f02f:	jo     0x40efd2
  40f031:	fimul  DWORD PTR [ebp+0x468f26c3]
  40f037:	ror    esi,0xec
  40f03a:	push   es
  40f03b:	or     eax,0x76bab33b
  40f040:	sub    ah,dh
  40f042:	(bad)  
  40f043:	(bad)  
  40f044:	cmc    
  40f045:	stos   BYTE PTR es:[edi],al
  40f046:	std    
  40f047:	ins    DWORD PTR es:[edi],dx
  40f048:	out    0x39,al
  40f04a:	test   DWORD PTR [esi+0x5a80bcf0],0x32a66a6f
  40f054:	sahf   
  40f055:	jbe    0x40efdb
  40f057:	addr16 enter 0x99cc,0x66
  40f05c:	(bad)
  40f05f:	push   ebp
  40f060:	mov    dh,0x6d
  40f062:	into   
  40f063:	aad    0x93
  40f065:	retf   
  40f066:	inc    esi
  40f067:	pop    ds
  40f068:	xchg   BYTE PTR [edx-0xe],ch
  40f06b:	cmc    
  40f06c:	pop    ss
  40f06d:	cmp    ebp,DWORD PTR gs:0x528ba86f
  40f074:	lds    ebx,FWORD PTR [ebp-0x6e85c8aa]
  40f07a:	into   
  40f07b:	mov    cl,0x40
  40f07d:	mov    ds:0x816ff00d,eax
  40f082:	(bad)  
  40f083:	push   ecx
  40f084:	mov    ds:0x81eabf03,al
  40f089:	pushf  
  40f08a:	jns    0x40f0eb
  40f08c:	cdq    
  40f08d:	outs   dx,BYTE PTR ds:[esi]
  40f08e:	pop    edi
  40f08f:	dec    edx
  40f090:	inc    esi
  40f091:	pop    edi
  40f092:	dec    ecx
  40f093:	fiadd  DWORD PTR [esi]
  40f095:	nop
  40f096:	call   0x22cd:0xde0d596c
  40f09d:	mov    ah,0xf0
  40f09f:	add    eax,0xf6a5762d
  40f0a4:	mov    ds:0x62620572,al
  40f0a9:	adc    bl,0xec
  40f0ac:	and    BYTE PTR [edi+0x4e],0x5d
  40f0b0:	shr    BYTE PTR [esi+0x27dd70d9],0x8e
  40f0b7:	jg     0x40f0a0
  40f0b9:	icebp  
  40f0ba:	xchg   esi,eax
  40f0bb:	repnz or edx,DWORD PTR [esi+ebp*8-0x5e]
  40f0c0:	dec    ebx
  40f0c1:	inc    ebp
  40f0c2:	lock cmp ebx,edx
  40f0c5:	mov    cl,0x6e
  40f0c7:	rcr    BYTE PTR [edx+0x4],cl
  40f0ca:	addr16 loope 0x40f119
  40f0cd:	cmp    bh,BYTE PTR [esi]
  40f0cf:	ss mov ebx,0x8479bc63
  40f0d5:	(bad)  
  40f0d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f0d8:	inc    esi
  40f0d9:	clc    
  40f0da:	mov    bl,0x89
  40f0dc:	pop    ecx
  40f0dd:	pushf  
  40f0de:	sub    DWORD PTR [edi+0x62ef7d68],0xf8a9f842
  40f0e8:	dec    esp
  40f0e9:	retf   
  40f0ea:	or     edi,DWORD PTR [esi-0x29]
  40f0ed:	icebp  
  40f0ee:	xchg   DWORD PTR [edi+0x27dd6f43],edi
  40f0f4:	bound  edx,QWORD PTR [eax-0x4d]
  40f0f7:	adc    DWORD PTR [esi-0x71b29fc3],esp
  40f0fd:	cdq    
  40f0fe:	push   edi
  40f0ff:	loopne 0x40f0a0
  40f101:	stos   BYTE PTR es:[edi],al
  40f102:	pusha  
  40f103:	ins    BYTE PTR es:[edi],dx
  40f104:	outs   dx,DWORD PTR ds:[esi]
  40f105:	fsubr  DWORD PTR [eax]
  40f107:	dec    ebp
  40f108:	outs   dx,BYTE PTR ds:[esi]
  40f109:	inc    edi
  40f10a:	cdq    
  40f10b:	out    0xbe,al
  40f10d:	cmp    eax,0x704e73da
  40f112:	add    DWORD PTR [edi],esi
  40f114:	inc    ebx
  40f115:	mov    fs,ebx
  40f117:	clc    
  40f118:	and    BYTE PTR [ebx+ecx*4+0x2f],dh
  40f11c:	adc    al,BYTE PTR [ebp-0x16f57618]
  40f122:	loope  0x40f0dc
  40f124:	std    
  40f125:	mov    gs,WORD PTR [ebp-0x50c892ad]
  40f12b:	rcl    BYTE PTR [esi],1
  40f12d:	daa    
  40f12e:	push   ds
  40f12f:	mov    ds:0xc344a256,eax
  40f134:	lea    ebp,[edi+esi*2-0x28f6758d]
  40f13b:	mov    ch,0xcf
  40f13d:	pushf  
  40f13e:	ret    0xd705
  40f141:	(bad)  
  40f142:	rcl    DWORD PTR [ebx-0x4f],cl
  40f145:	and    ch,BYTE PTR [edi-0x6209ad53]
  40f14b:	(bad)  
  40f14c:	mov    dh,0x39
  40f14e:	cmp    BYTE PTR [ebx],bh
  40f150:	fmul   DWORD PTR [edx+0x14c22aff]
  40f156:	pop    esi
  40f157:	sahf   
  40f158:	pop    ecx
  40f159:	arpl   di,sp
  40f15b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f15c:	repnz mov dl,0x89
  40f15f:	int    0x81
  40f161:	daa    
  40f162:	mov    cl,0xd0
  40f164:	xor    al,0x9d
  40f166:	leave  
  40f167:	push   ecx
  40f168:	gs stc 
  40f16a:	stos   DWORD PTR es:[edi],eax
  40f16b:	icebp  
  40f16c:	dec    esi
  40f16d:	and    ch,BYTE PTR [ebx-0x6f]
  40f170:	mov    dh,dl
  40f172:	sbb    al,0x10
  40f174:	pop    eax
  40f175:	pop    esp
  40f176:	pop    es
  40f177:	xor    eax,0x59319d1e
  40f17c:	dec    ebx
  40f17d:	outs   dx,BYTE PTR ds:[esi]
  40f17e:	xchg   BYTE PTR [esi],cl
  40f180:	adc    DWORD PTR [ebx-0x30],esi
  40f183:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f184:	es ins BYTE PTR es:[edi],dx
  40f186:	jb     0x40f1c3
  40f188:	xchg   edi,eax
  40f189:	xchg   esp,eax
  40f18a:	pop    ecx
  40f18b:	in     al,0xff
  40f18d:	xor    eax,0x32d10e9b
  40f192:	imul   eax,DWORD PTR [ebp-0x67],0xd9f8d019
  40f199:	mov    edx,edi
  40f19b:	xor    dh,BYTE PTR [ecx]
  40f19d:	push   0x1bfd6ff4
  40f1a2:	mov    WORD PTR [ecx-0x57],fs
  40f1a5:	pop    ebx
  40f1a6:	push   0x3b
  40f1a8:	ror    DWORD PTR [edi],1
  40f1aa:	test   DWORD PTR ds:0x3b000000,ebp
  40f1b0:	lock jne 0x40f1dc
  40f1b7:	mov    eax,DWORD PTR [ebp-0x4]
  40f1ba:	mov    ecx,DWORD PTR [ebp-0x8]
  40f1bd:	add    eax,0x4296
  40f1c2:	shr    eax,0x2
  40f1c5:	or     eax,ecx
  40f1c7:	mov    ecx,DWORD PTR [ebp-0x10]
  40f1ca:	xor    eax,ecx
  40f1cc:	xor    eax,0x4e94
  40f1d1:	add    eax,DWORD PTR ds:0x4227cc
  40f1d7:	mov    ds:0x4227d4,eax
  40f1dc:	pop    esi
  40f1dd:	leave  
  40f1de:	ret    0x4
  40f1e1:	push   ebp
  40f1e2:	mov    ebp,esp
  40f1e4:	sub    esp,0x58
  40f1e7:	push   ebx
  40f1e8:	push   esi
  40f1e9:	jmp    0x40f59d
  40f1ee:	jne    0x40f25e
  40f1f0:	mov    ds:0xb73caafc,al
  40f1f5:	je     0x40f1e5
  40f1f7:	fsubr  QWORD PTR [ecx+edx*8-0x2f]
  40f1fb:	and    esi,DWORD PTR [eax-0x41e7ce31]
  40f201:	mov    esi,0xbebec4e3
  40f206:	lds    ebx,FWORD PTR [edi-0x7e]
  40f209:	rcr    DWORD PTR [edx],0xbd
  40f20c:	rcl    DWORD PTR [esi],cl
  40f20e:	(bad)  
  40f20f:	jnp    0x40f243
  40f211:	adc    BYTE PTR [esi],bl
  40f213:	icebp  
  40f214:	sub    eax,0x53d3f275
  40f219:	mov    esp,0x88dd387b
  40f21e:	sbb    al,BYTE PTR [ebp-0x21]
  40f221:	pop    ds
  40f222:	in     eax,0xf1
  40f224:	xlat   BYTE PTR ds:[ebx]
  40f225:	sub    DWORD PTR [ebx+esi*4+0x16],edx
  40f229:	call   0xde83:0x4fff4b71
  40f230:	ds nop
  40f232:	mov    ebx,ebx
  40f234:	xchg   ebx,eax
  40f235:	jno    0x40f276
  40f237:	out    dx,al
  40f238:	mov    edi,0x63df39bc
  40f23d:	adc    ebx,esi
  40f23f:	mov    cl,0x2e
  40f241:	repnz sub dh,BYTE PTR [ebx-0x40cfb185]
  40f248:	pop    esp
  40f249:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f24a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f24b:	inc    edi
  40f24c:	xlat   BYTE PTR ds:[ebx]
  40f24d:	repnz int3 
  40f24f:	test   eax,0xb69fc758
  40f254:	cwde   
  40f255:	ss xchg edx,eax
  40f257:	sbb    BYTE PTR [ecx],bl
  40f259:	mov    esp,0x672ec68e
  40f25e:	daa    
  40f25f:	cmp    DWORD PTR [ebx+0xc69ad3f],edi
  40f265:	jmp    0x91a1:0x9aa05054
  40f26c:	loope  0x40f252
  40f26e:	mov    ch,0x25
  40f270:	out    0x4c,al
  40f272:	div    BYTE PTR [edi]
  40f274:	pop    esp
  40f275:	je     0x40f216
  40f277:	and    edi,edx
  40f279:	xor    ecx,DWORD PTR [ecx]
  40f27b:	lahf   
  40f27c:	outs   dx,BYTE PTR ds:[esi]
  40f27d:	dec    ebx
  40f27e:	mov    eax,0xa8d3fa81
  40f283:	pusha  
  40f284:	int    0x4f
  40f286:	adc    al,0x80
  40f288:	jno    0x40f2e4
  40f28a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f28b:	mov    al,ds:0x12e0bc17
  40f290:	mov    esp,0x6a58113e
  40f295:	xor    BYTE PTR [esi],bh
  40f297:	mov    ebp,0xcdc20f94
  40f29c:	dec    ebp
  40f29d:	(bad)  
  40f29e:	mov    ecx,DWORD PTR [eax+0x16]
  40f2a1:	mov    ds:0x7194c5ee,eax
  40f2a6:	or     al,0x71
  40f2a8:	mov    esp,0x8e00f5b4
  40f2ad:	push   eax
  40f2ae:	adc    eax,0xecd526e9
  40f2b3:	add    eax,DWORD PTR [edi-0x7d]
  40f2b6:	mov    ebx,0x4a395f9a
  40f2bb:	xchg   ebx,eax
  40f2bc:	dec    edx
  40f2bd:	out    dx,eax
  40f2be:	xor    BYTE PTR [ebp+0x65ac1fec],cl
  40f2c4:	mov    ds:0xe9bc77fb,eax
  40f2c9:	cli    
  40f2ca:	pop    ds
  40f2cb:	fstp   DWORD PTR [edi]
  40f2cd:	rcr    DWORD PTR [edi-0x40],0xba
  40f2d1:	mov    DWORD PTR [edi+0x69],esi
  40f2d4:	sahf   
  40f2d5:	xchg   esi,esp
  40f2d7:	mov    esp,DWORD PTR [esi+0x3b]
  40f2da:	and    al,0xbd
  40f2dc:	dec    esp
  40f2dd:	pop    ecx
  40f2de:	out    0x75,eax
  40f2e0:	hlt    
  40f2e1:	sbb    DWORD PTR ds:0x8a4c7b6f,0x61
  40f2e8:	push   eax
  40f2e9:	xchg   esp,eax
  40f2ea:	stos   DWORD PTR es:[edi],eax
  40f2eb:	sbb    esp,DWORD PTR [ebx+0x76]
  40f2ee:	aas    
  40f2ef:	pop    ds
  40f2f0:	or     al,0xe2
  40f2f2:	mov    bl,0x64
  40f2f4:	cmc    
  40f2f5:	sbb    esp,DWORD PTR [edx-0x1dcbf653]
  40f2fb:	adc    eax,0x3b1d4955
  40f300:	fisubr WORD PTR [eax+eax*1+0x38]
  40f304:	sbb    edi,DWORD PTR [ebx*2+0x41e6ff48]
  40f30b:	jo     0x40f2cb
  40f30d:	cdq    
  40f30e:	test   DWORD PTR [ebp+0x60e9d069],ebx
  40f314:	inc    ebx
  40f315:	das    
  40f316:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f317:	adc    eax,0x15a54b50
  40f31c:	adc    al,BYTE PTR [ecx]
  40f31e:	jle    0x40f370
  40f320:	lods   eax,DWORD PTR ds:[esi]
  40f321:	std    
  40f322:	cmp    ch,BYTE PTR [ebx+0x548fc6ec]
  40f328:	in     eax,0xd7
  40f32a:	push   ecx
  40f32b:	in     eax,dx
  40f32c:	stos   DWORD PTR es:[edi],eax
  40f32d:	mov    ch,0xbd
  40f32f:	add    al,BYTE PTR [edi]
  40f331:	test   al,0xbf
  40f333:	lods   eax,DWORD PTR ds:[esi]
  40f334:	pop    ebx
  40f335:	inc    ebp
  40f336:	xchg   ecx,eax
  40f337:	outs   dx,BYTE PTR ds:[esi]
  40f338:	xchg   esp,eax
  40f339:	(bad)  
  40f33a:	ret    0xc0b5
  40f33d:	retf   0x60ff
  40f340:	cmp    BYTE PTR [edi+edi*4+0x2f],0x1c
  40f345:	lahf   
  40f346:	pop    ebx
  40f347:	mov    bl,0x57
  40f349:	lahf   
  40f34a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f34b:	aam    0xa9
  40f34d:	push   ebx
  40f34e:	xor    dh,dh
  40f350:	sbb    eax,0x4f52a928
  40f355:	(bad)
  40f35a:	jns    0x40f2f4
  40f35c:	sub    al,0xac
  40f35e:	inc    esi
  40f35f:	push   esi
  40f360:	(bad)  
  40f361:	pushf  
  40f362:	xchg   esp,eax
  40f363:	mov    bl,0xb6
  40f365:	dec    edi
  40f366:	(bad)  
  40f367:	and    eax,0xe08de399
  40f36c:	sahf   
  40f36d:	xchg   ebp,eax
  40f36e:	mov    al,0x7a
  40f370:	jg     0x40f385
  40f372:	popa   
  40f373:	xor    DWORD PTR [ecx],0x64
  40f376:	sub    DWORD PTR [edx+0x14],eax
  40f379:	pop    edx
  40f37a:	repnz out 0x78,al
  40f37d:	jmp    0xed059051
  40f382:	mov    WORD PTR [ebx+0x1ff7c87],ds
  40f388:	push   eax
  40f389:	loop   0x40f329
  40f38b:	into   
  40f38c:	ror    BYTE PTR [esi-0xeced07c],1
  40f392:	push   0x597879c1
  40f397:	xchg   edx,eax
  40f398:	fs add al,0xce
  40f39b:	fs (bad) 
  40f39d:	into   
  40f39e:	push   esp
  40f39f:	enter  0x3045,0xf7
  40f3a3:	jecxz  0x40f354
  40f3a5:	or     eax,DWORD PTR [ebx-0x5377d0fe]
  40f3ab:	sub    edi,esp
  40f3ad:	push   es
  40f3ae:	push   eax
  40f3af:	mov    eax,0xa6adab8
  40f3b4:	pop    ecx
  40f3b5:	mov    cl,0xd3
  40f3b7:	pop    esi
  40f3b8:	or     edi,DWORD PTR [edi+0x30046399]
  40f3be:	lods   al,BYTE PTR ds:[esi]
  40f3bf:	sub    eax,ecx
  40f3c1:	dec    ebp
  40f3c2:	and    BYTE PTR [ecx+0x32],cl
  40f3c5:	fcomp  QWORD PTR [ebp-0x59f6ed13]
  40f3cb:	sub    DWORD PTR [edx+0xcfb8d09],esi
  40f3d1:	xchg   ecx,eax
  40f3d2:	clc    
  40f3d3:	in     eax,0xd3
  40f3d5:	fnstcw WORD PTR [esi-0x3ca34be2]
  40f3db:	pop    edx
  40f3dc:	popa   
  40f3dd:	push   cs
  40f3de:	bound  ebx,QWORD PTR [ebp+edi*2+0x46]
  40f3e2:	dec    esi
  40f3e3:	mov    edi,0x73c181b9
  40f3e8:	rcr    dl,cl
  40f3ea:	sub    al,0x69
  40f3ec:	icebp  
  40f3ed:	rol    BYTE PTR [ecx+edi*1-0x24],0x99
  40f3f2:	sub    ebp,0x989f72df
  40f3f8:	sub    eax,0xe9250390
  40f3fd:	xchg   DWORD PTR [ecx+edi*4-0x4e014ed4],edx
  40f404:	xor    ebx,DWORD PTR [edi]
  40f406:	sub    esi,DWORD PTR [esp+edi*4-0x14cbbb86]
  40f40d:	pop    edi
  40f40e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f40f:	out    dx,eax
  40f410:	stc    
  40f411:	loopne 0x40f446
  40f413:	adc    ebx,0xffffffd8
  40f416:	inc    ebp
  40f417:	jp     0x40f3de
  40f419:	popf   
  40f41a:	dec    edx
  40f41b:	push   ss
  40f41c:	xchg   esi,eax
  40f41d:	loope  0x40f487
  40f41f:	dec    esi
  40f420:	mov    bl,0x3
  40f422:	push   ebp
  40f423:	sub    esi,DWORD PTR ds:0x86880741
  40f429:	jae    0x40f46c
  40f42b:	sbb    al,0x28
  40f42d:	nop
  40f42e:	in     eax,0xb9
  40f430:	pop    ecx
  40f431:	(bad)  
  40f432:	test   eax,0x7af22053
  40f437:	pop    ebx
  40f438:	out    0xd4,eax
  40f43a:	dec    esi
  40f43b:	std    
  40f43c:	das    
  40f43d:	fst    QWORD PTR [ecx]
  40f43f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f440:	add    al,0xf5
  40f442:	outs   dx,DWORD PTR ds:[esi]
  40f443:	or     BYTE PTR [edi],0x95
  40f446:	test   al,0x22
  40f448:	scas   al,BYTE PTR es:[edi]
  40f449:	hlt    
  40f44a:	lea    esp,[eax+esi*1]
  40f44d:	adc    ebx,edx
  40f44f:	sbb    al,0x89
  40f451:	mov    eax,0xb88ef902
  40f456:	xor    ah,BYTE PTR [ecx-0x68475c58]
  40f45c:	int3   
  40f45d:	inc    edi
  40f45e:	inc    edx
  40f45f:	cwde   
  40f460:	(bad)  
  40f461:	pop    es
  40f462:	push   esp
  40f463:	mov    edx,0x6ca92a79
  40f468:	popa   
  40f469:	stos   DWORD PTR es:[edi],eax
  40f46a:	dec    eax
  40f46b:	mov    BYTE PTR [bp+0x3498],ah
  40f470:	mov    ebp,0x75dc0078
  40f475:	dec    esp
  40f476:	cmp    al,0x15
  40f478:	adc    eax,0x6a438cf8
  40f47d:	dec    esi
  40f47e:	fcomp  QWORD PTR [ebx*4-0x2b66d3bc]
  40f485:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f486:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f487:	pusha  
  40f488:	repz push 0x15
  40f48b:	sti    
  40f48c:	or     al,0xf1
  40f48e:	push   ecx
  40f48f:	call   0x6cfa:0x8885d7d5
  40f496:	mov    edi,0x65678bcf
  40f49b:	sub    al,0x95
  40f49d:	cld    
  40f49e:	and    eax,0x744e12c4
  40f4a3:	retf   
  40f4a4:	(bad)  
  40f4a5:	in     al,dx
  40f4a6:	mov    ebx,0xe49f2df2
  40f4ab:	in     eax,0x68
  40f4ad:	lods   eax,DWORD PTR ds:[esi]
  40f4ae:	ffree  st(3)
  40f4b0:	or     BYTE PTR [edi],al
  40f4b2:	jmp    0x40f4bb
  40f4b4:	push   0xfffffff5
  40f4b6:	or     BYTE PTR [ebx],ah
  40f4b8:	mov    esi,0xa57cf285
  40f4bd:	inc    edx
  40f4be:	retf   0x9a5c
  40f4c1:	arpl   WORD PTR [eax],bp
  40f4c3:	xchg   edi,eax
  40f4c4:	mov    ch,0xea
  40f4c6:	leave  
  40f4c7:	add    eax,0xcccf647d
  40f4cc:	cdq    
  40f4cd:	pop    eax
  40f4ce:	stos   BYTE PTR es:[edi],al
  40f4cf:	push   es
  40f4d0:	sub    al,0x30
  40f4d2:	std    
  40f4d3:	mov    DWORD PTR [ebx+0x13],ecx
  40f4d6:	cld    
  40f4d7:	push   0xa7c31123
  40f4dc:	sbb    DWORD PTR [ebx*1-0x397e1553],esi
  40f4e3:	mov    DWORD PTR [esi-0x1e05cc2c],0x3e7cfbb9
  40f4ed:	jns    0x40f4fd
  40f4ef:	repz push ds
  40f4f1:	imul   edx,DWORD PTR [eax+0x532ba733],0xb3db2413
  40f4fb:	jb     0x40f48f
  40f4fd:	fstp   DWORD PTR [edi-0x303e4643]
  40f503:	jmp    0x40f4ea
  40f505:	mov    edi,0x30ca8d2d
  40f50a:	ftst   
  40f50c:	into   
  40f50d:	mov    edi,0x635aaca7
  40f512:	fisub  DWORD PTR [ecx]
  40f514:	mov    dl,0x1f
  40f516:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f517:	push   cs
  40f518:	ja     0x40f4c5
  40f51a:	loope  0x40f4a8
  40f51c:	jecxz  0x40f505
  40f51e:	xchg   esp,eax
  40f51f:	aam    0x7e
  40f521:	ds call 0xf852:0xb449a607
  40f529:	inc    esi
  40f52a:	sub    al,0x37
  40f52c:	int3   
  40f52d:	adc    al,0x8e
  40f52f:	or     dl,BYTE PTR [ebp+0x3ee97a84]
  40f535:	cmp    DWORD PTR [esi+ebx*1+0x51],esp
  40f539:	xchg   esi,eax
  40f53a:	int3   
  40f53b:	xor    ebp,DWORD PTR [eax-0x713fdce6]
  40f541:	sub    dh,BYTE PTR [esp+ecx*8-0x3e73aeac]
  40f548:	ret    0xc094
  40f54b:	outs   dx,DWORD PTR ds:[esi]
  40f54c:	addr16 pusha 
  40f54e:	or     eax,0xbf819c67
  40f553:	imul   edx,DWORD PTR [eax+edi*2-0x34],0xc6c94c9
  40f55b:	mul    BYTE PTR [ecx]
  40f55d:	sub    DWORD PTR [ecx+esi*1],0xffffffc6
  40f561:	jns    0x40f4f5
  40f563:	jns    0x40f560
  40f565:	enter  0xddd2,0x36
  40f569:	jo     0x40f5a7
  40f56b:	mov    WORD PTR [edi-0x12c9900f],ss
  40f571:	das    
  40f572:	das    
  40f573:	pop    edi
  40f574:	xor    DWORD PTR [ebx+0x38ba78],esi
  40f57a:	imul   ebx,DWORD PTR [edx-0x4f9e9d63],0xffffffae
  40f581:	(bad)  
  40f582:	pop    ebx
  40f583:	xchg   edx,eax
  40f584:	add    al,0x18
  40f586:	sub    BYTE PTR [eax],al
  40f588:	dec    esp
  40f589:	ret    0x61cf
  40f58c:	or     ah,BYTE PTR [eax]
  40f58e:	(bad)  
  40f58f:	push   edi
  40f590:	pop    ss
  40f591:	imul   eax,DWORD PTR [ecx+0x40],0xd4e6c57f
  40f598:	ss out 0x4,eax
  40f59b:	mov    bl,0x87
  40f59d:	push   edi
  40f59e:	mov    DWORD PTR [ebp-0x58],0x3082
  40f5a5:	mov    DWORD PTR [ebp-0x54],0x37a2
  40f5ac:	mov    DWORD PTR [ebp-0x50],0x49d6
  40f5b3:	mov    DWORD PTR [ebp-0x4c],0x6390
  40f5ba:	mov    DWORD PTR [ebp-0x48],0x40f2
  40f5c1:	mov    DWORD PTR [ebp-0x44],0x21d4
  40f5c8:	mov    DWORD PTR [ebp-0x28],0x4726
  40f5cf:	mov    DWORD PTR [ebp-0x24],0x221a
  40f5d6:	mov    DWORD PTR [ebp-0x30],0x768c
  40f5dd:	mov    DWORD PTR [ebp-0x2c],0x29e8
  40f5e4:	mov    DWORD PTR [ebp-0x40],0x6cf6
  40f5eb:	mov    DWORD PTR [ebp-0x3c],0x94c
  40f5f2:	mov    DWORD PTR [ebp-0x38],0x4797
  40f5f9:	mov    DWORD PTR [ebp-0x34],0x4439
  40f600:	mov    DWORD PTR [ebp-0x20],0x2531
  40f607:	mov    esi,0x5a3e
  40f60c:	mov    DWORD PTR [ebp-0x1c],esi
  40f60f:	mov    DWORD PTR [ebp-0x18],0x2e83e7a
  40f616:	mov    DWORD PTR [ebp-0x14],0x7
  40f61d:	mov    DWORD PTR [ebp-0x10],0xe3a
  40f624:	mov    DWORD PTR [ebp-0xc],0x6a6e
  40f62b:	mov    DWORD PTR [ebp-0x8],0x6b99
  40f632:	mov    DWORD PTR [ebp-0x4],0x2acd
  40f639:	mov    eax,DWORD PTR [ebp-0x10]
  40f63c:	mov    ecx,DWORD PTR [ebp-0xc]
  40f63f:	mov    eax,DWORD PTR [ebp-0x8]
  40f642:	mov    ecx,DWORD PTR [ebp-0x4]
  40f645:	mov    eax,DWORD PTR [ebp-0x18]
  40f648:	mov    ecx,DWORD PTR [ebp-0x14]
  40f64b:	mov    eax,DWORD PTR [ebp-0x8]
  40f64e:	jmp    0x40fa02
  40f653:	pusha  
  40f654:	and    cl,BYTE PTR [esi]
  40f656:	push   ebp
  40f657:	xchg   esp,eax
  40f658:	jns    0x40f602
  40f65a:	cmp    al,0x86
  40f65c:	aas    
  40f65d:	(bad)  
  40f65f:	rcl    edi,0x70
  40f662:	fstp   QWORD PTR [eax+0x1e]
  40f665:	mov    esi,0xbec4e3be
  40f66a:	mov    esi,0x8a7d1006
  40f66f:	sub    al,0xfd
  40f671:	add    al,0x22
  40f673:	pop    edx
  40f674:	add    esp,edi
  40f676:	dec    edx
  40f677:	dec    ecx
  40f678:	pop    ecx
  40f679:	pusha  
  40f67a:	test   ecx,eax
  40f67c:	mov    ds:0x168f3a99,al
  40f681:	outs   dx,WORD PTR ds:[esi]
  40f683:	fucom  st(0)
  40f685:	push   0x34
  40f687:	fcmovne st,st(4)
  40f689:	retf   
  40f68a:	test   eax,0x95bb81f0
  40f68f:	sbb    DWORD PTR [ebx+eax*4-0x9],0x3e341998
  40f697:	jecxz  0x40f6ab
  40f699:	rcl    eax,cl
  40f69b:	push   edx
  40f69c:	sbb    DWORD PTR ds:0x56c1e6fe,0xd
  40f6a3:	jnp    0x40f6bc
  40f6a5:	or     bh,al
  40f6a7:	ficom  WORD PTR [edi+0x6d]
  40f6aa:	sbb    BYTE PTR [esi-0x2703803],al
  40f6b0:	sbb    esp,DWORD PTR [eax-0x3a]
  40f6b3:	sahf   
  40f6b4:	popa   
  40f6b5:	arpl   WORD PTR [ebp+0x7c91e210],cx
  40f6bb:	jb     0x40f685
  40f6bd:	and    dl,dh
  40f6bf:	add    DWORD PTR [edi],ebp
  40f6c1:	xchg   edx,eax
  40f6c2:	stos   DWORD PTR es:[edi],eax
  40f6c3:	es (bad) 
  40f6c5:	sbb    bl,dh
  40f6c7:	add    al,0x78
  40f6c9:	cmp    eax,0x58e11bd7
  40f6ce:	adc    DWORD PTR [esi-0x54],edi
  40f6d1:	int    0xdb
  40f6d3:	leave  
  40f6d4:	inc    edx
  40f6d5:	sahf   
  40f6d6:	int3   
  40f6d7:	and    BYTE PTR ds:0x385815a2,cl
  40f6dd:	mov    ?,edi
  40f6df:	pop    esp
  40f6e0:	mov    ds:0xb558cd29,eax
  40f6e5:	es push edi
  40f6e7:	mov    ebp,DWORD PTR [edx+0xb]
  40f6ea:	mov    ecx,0xc0efc5e2
  40f6ef:	out    0x3c,eax
  40f6f1:	loopne 0x40f6da
  40f6f3:	out    dx,al
  40f6f4:	in     eax,0x1c
  40f6f6:	out    dx,al
  40f6f7:	(bad)  
  40f6f8:	pushf  
  40f6f9:	loop   0x40f68d
  40f6fb:	rcr    ch,1
  40f6fd:	and    ax,0xbcea
  40f701:	retf   0xe32
  40f704:	(bad)  
  40f706:	push   es
  40f707:	mov    esi,0x3db585a2
  40f70c:	mov    DWORD PTR [ebx-0x2286d670],esp
  40f712:	in     al,0xa
  40f714:	imul   ebx,DWORD PTR [edi+0x5443f073],0xed753dde
  40f71e:	imul   ecx,edx,0xd86a62df
  40f724:	adc    BYTE PTR [edi-0x3d],ch
  40f727:	push   ebp
  40f728:	mov    cl,0xc1
  40f72a:	daa    
  40f72b:	fstp   QWORD PTR [esp+edx*1-0x37]
  40f72f:	scas   al,BYTE PTR es:[edi]
  40f730:	lahf   
  40f731:	or     al,0xa6
  40f733:	sahf   
  40f734:	es (bad) 
  40f736:	pop    ecx
  40f737:	popf   
  40f738:	sub    esp,DWORD PTR [ecx-0x7d]
  40f73b:	arpl   si,sp
  40f73d:	xchg   ecx,eax
  40f73e:	mov    eax,0xd5a138ae
  40f743:	shl    ch,1
  40f745:	repz inc esi
  40f747:	pop    ds
  40f748:	idiv   dh
  40f74a:	dec    esi
  40f74b:	test   BYTE PTR [ecx],dh
  40f74d:	out    0xe7,eax
  40f74f:	js     0x40f6f1
  40f751:	sub    DWORD PTR ds:0xadf67b70,edi
  40f757:	imul   edx,DWORD PTR [ebx-0x4f],0x60
  40f75b:	mov    ch,dh
  40f75d:	je     0x40f76d
  40f75f:	mov    eax,ds:0x5eecfd56
  40f764:	push   cs
  40f765:	inc    esi
  40f766:	icebp  
  40f767:	in     eax,dx
  40f768:	jae    0x40f7b3
  40f76a:	icebp  
  40f76b:	je     0x40f74f
  40f76d:	sbb    BYTE PTR [esi+0x75],cl
  40f770:	es leave 
  40f772:	lds    ecx,FWORD PTR [edi]
  40f774:	psllq  mm7,QWORD PTR [ecx]
  40f777:	scas   al,BYTE PTR es:[edi]
  40f778:	xor    bh,ah
  40f77a:	int    0x9c
  40f77c:	push   cs
  40f77d:	push   ebx
  40f77e:	xchg   al,cl
  40f780:	mov    ds:0x6373a1b9,eax
  40f785:	add    eax,0x61be3a4d
  40f78a:	popf   
  40f78b:	cmp    DWORD PTR [ebx-0x6e],esp
  40f78e:	mov    ch,0x9f
  40f790:	int    0xcc
  40f792:	std    
  40f793:	stos   DWORD PTR es:[edi],eax
  40f794:	sub    BYTE PTR [ecx-0x1e],dl
  40f797:	mov    bh,0x6b
  40f799:	and    BYTE PTR [edi],bh
  40f79b:	sub    eax,0xfeb21ad1
  40f7a0:	ret    
  40f7a1:	call   0x650aa9d8
  40f7a6:	xchg   edi,eax
  40f7a7:	jge    0x40f732
  40f7a9:	xchg   ecx,eax
  40f7aa:	inc    esp
  40f7ab:	jne    0x40f827
  40f7ad:	mov    esp,0x4cece4f7
  40f7b2:	dec    ebx
  40f7b3:	cmp    BYTE PTR [eax+0x22],0xcd
  40f7b7:	cmp    eax,edi
  40f7b9:	pop    es
  40f7ba:	gs ins DWORD PTR es:[edi],dx
  40f7bc:	das    
  40f7bd:	fimul  WORD PTR [esi-0x7c]
  40f7c0:	and    ch,dl
  40f7c2:	ins    BYTE PTR es:[edi],dx
  40f7c3:	push   ebp
  40f7c4:	test   eax,0x8a852ef7
  40f7c9:	out    dx,eax
  40f7ca:	mov    ecx,0x4b0efdab
  40f7cf:	mov    eax,0x9e5cb3af
  40f7d4:	mov    bh,0x80
  40f7d6:	dec    ebx
  40f7d7:	pop    esp
  40f7d8:	jmp    0x9c516dcf
  40f7dd:	add    BYTE PTR [edx+0x15acdee3],al
  40f7e3:	xor    BYTE PTR [ebx+0x6ef5b3d3],0x80
  40f7ea:	xlat   BYTE PTR ds:[ebx]
  40f7eb:	xchg   esp,eax
  40f7ec:	sub    esp,ebp
  40f7ee:	aas    
  40f7ef:	sub    DWORD PTR [ecx],esi
  40f7f1:	fnstenv [ecx+0x136eac7f]
  40f7f7:	sub    ebx,DWORD PTR [edx-0x1cdc4d98]
  40f7fd:	icebp  
  40f7fe:	test   ecx,ecx
  40f800:	and    ch,BYTE PTR [ecx]
  40f802:	xchg   DWORD PTR [ebp+0x56e4ba6a],ebp
  40f808:	push   ebp
  40f809:	daa    
  40f80a:	aas    
  40f80b:	outs   dx,DWORD PTR ds:[esi]
  40f80c:	aaa    
  40f80d:	pop    edi
  40f80e:	cmp    dl,0x16
  40f811:	push   ds
  40f812:	xchg   DWORD PTR [esi+0x2e132bf9],ebx
  40f818:	rol    ah,1
  40f81a:	mov    dl,0x2f
  40f81c:	jp     0x40f80e
  40f81e:	xor    edx,DWORD PTR [ecx]
  40f820:	xchg   ebp,eax
  40f821:	jp     0x40f883
  40f823:	mov    ds:0x5bd995ab,al
  40f828:	jbe    0x40f7f8
  40f82a:	fadd   st(4),st
  40f82c:	sub    al,0x25
  40f82e:	pop    es
  40f82f:	xor    BYTE PTR [ecx+edx*4+0x3],bl
  40f833:	hlt    
  40f834:	dec    ebp
  40f835:	mov    al,BYTE PTR [eax+0x2fb26cbd]
  40f83b:	fcom   DWORD PTR [eax]
  40f83d:	out    dx,eax
  40f83e:	in     eax,0xae
  40f840:	data16 mov ss,WORD PTR [ebp+0x737b847a]
  40f847:	or     al,0x93
  40f849:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f84a:	rep lods eax,DWORD PTR ds:[esi]
  40f84c:	cmp    ecx,DWORD PTR [eax+0x68]
  40f84f:	lds    ebx,FWORD PTR [edx-0x36]
  40f852:	lods   al,BYTE PTR ss:[esi]
  40f854:	repz lea edx,[esp+esi*8-0x3e]
  40f859:	push   ecx
  40f85a:	and    BYTE PTR [eax+0x7f9ed6ad],0xa2
  40f861:	jle    0x40f897
  40f863:	loop   0x40f8e3
  40f865:	dec    ecx
  40f866:	out    dx,al
  40f867:	adc    eax,DWORD PTR [esi+0x4b]
  40f86a:	test   eax,0xccd888cb
  40f86f:	mov    cl,0xb3
  40f871:	cs add al,0x23
  40f874:	scas   al,BYTE PTR es:[edi]
  40f875:	(bad)  
  40f876:	adc    DWORD PTR [esi-0x5a3ccfea],edx
  40f87c:	or     eax,0x95600701
  40f881:	out    dx,eax
  40f882:	call   0x3dc5:0xd3176655
  40f889:	mov    ds:0x1a24afb3,eax
  40f88e:	outs   dx,DWORD PTR ds:[esi]
  40f88f:	in     al,0xb3
  40f891:	aaa    
  40f892:	rcr    DWORD PTR [ecx],cl
  40f894:	mov    bh,0x31
  40f896:	push   ecx
  40f897:	cld    
  40f898:	ins    DWORD PTR es:[edi],dx
  40f899:	bound  ecx,QWORD PTR [ebp+esi*4+0x74b49a5c]
  40f8a0:	ret    
  40f8a1:	inc    ebp
  40f8a2:	jnp    0x40f8eb
  40f8a4:	mov    ebp,0x19ed9739
  40f8a9:	clc    
  40f8aa:	mov    dh,0x6c
  40f8ac:	cld    
  40f8ad:	fidiv  WORD PTR [esi]
  40f8af:	adc    eax,0xc1b07d44
  40f8b4:	mov    ecx,DWORD PTR [edx+0x3df9f668]
  40f8ba:	call   0x2f1:0x8dfccf8
  40f8c1:	pop    es
  40f8c2:	inc    DWORD PTR [ecx+0x72]
  40f8c5:	push   cs
  40f8c6:	test   DWORD PTR [ebx],0xb24c9d2a
  40f8cc:	mov    dl,0xfb
  40f8ce:	data16 in al,0x45
  40f8d1:	pop    es
  40f8d2:	mov    edx,0x9344efb2
  40f8d7:	dec    esp
  40f8d8:	test   BYTE PTR [ebp+0x4a],bh
  40f8db:	add    BYTE PTR [ecx+ebx*2+0x58],cl
  40f8df:	sub    eax,0x9b0872bf
  40f8e4:	mov    WORD PTR [ecx],es
  40f8e6:	mov    edi,0x4d59ec08
  40f8eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8ec:	or     al,0xdf
  40f8ee:	nop
  40f8ef:	cmp    al,BYTE PTR [ecx+0x27]
  40f8f2:	xor    esi,ecx
  40f8f4:	jp     0x40f8a1
  40f8f6:	in     al,0x92
  40f8f8:	pop    eax
  40f8f9:	popa   
  40f8fa:	sub    BYTE PTR [esp],cl
  40f8fd:	cdq    
  40f8fe:	or     al,0xc2
  40f900:	inc    eax
  40f901:	push   0x35
  40f903:	popa   
  40f904:	push   es
  40f905:	inc    esp
  40f906:	jl     0x40f901
  40f908:	add    al,0x7
  40f90a:	hlt    
  40f90b:	push   esi
  40f90c:	push   eax
  40f90d:	mov    eax,0x549bb0b2
  40f912:	inc    esi
  40f913:	dec    eax
  40f914:	outs   dx,DWORD PTR ds:[esi]
  40f915:	ret    0x8e3c
  40f918:	cli    
  40f919:	mov    edi,0xfb7f1de0
  40f91e:	push   0xffffff9f
  40f920:	in     eax,dx
  40f921:	loope  0x40f8ce
  40f923:	inc    ebx
  40f924:	call   0x27ec8295
  40f929:	fwait
  40f92a:	pop    esi
  40f92b:	xor    edx,DWORD PTR [ecx]
  40f92d:	push   ss
  40f92e:	inc    ebp
  40f92f:	gs (bad) 
  40f931:	in     eax,dx
  40f932:	dec    ebp
  40f933:	enter  0x4084,0x8f
  40f937:	adc    eax,0x8a41bd58
  40f93c:	or     al,0x35
  40f93e:	jl     0x40f929
  40f940:	add    eax,0x6b339d18
  40f945:	ss adc eax,0xacc27451
  40f94b:	or     eax,0xb982685b
  40f950:	ins    DWORD PTR es:[edi],dx
  40f951:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f952:	in     eax,dx
  40f953:	cwde   
  40f954:	mov    ds:0x78394700,eax
  40f959:	inc    edx
  40f95a:	inc    eax
  40f95b:	ds dec edi
  40f95d:	or     al,0x29
  40f95f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f960:	adc    DWORD PTR [ebx-0x5e],0x49c235
  40f967:	mov    ds:0x95522050,al
  40f96c:	(bad)  
  40f96d:	mov    bh,0xbf
  40f96f:	cmc    
  40f970:	adc    ebp,esi
  40f972:	dec    ebx
  40f973:	(bad)  
  40f974:	das    
  40f975:	cmp    al,0xb1
  40f977:	gs xor eax,0x2b4e15a0
  40f97d:	add    ch,BYTE PTR [eax-0x1e4e90e4]
  40f983:	dec    ecx
  40f984:	fimul  WORD PTR [edi+esi*1-0x5e]
  40f988:	sbb    DWORD PTR [edx+0x1fdd4c69],0xffffffb0
  40f98f:	std    
  40f990:	not    DWORD PTR [edx+esi*2]
  40f993:	in     al,0xc2
  40f995:	sub    al,dh
  40f997:	mov    eax,0x2e4b82bb
  40f99c:	pop    eax
  40f99d:	dec    eax
  40f99e:	es cwde 
  40f9a0:	repnz jmp FWORD PTR [edx+0x257633b9]
  40f9a7:	cmp    bl,BYTE PTR [esi-0xa]
  40f9aa:	inc    esi
  40f9ab:	push   ebp
  40f9ac:	push   ds
  40f9ad:	pop    edx
  40f9ae:	(bad)  
  40f9af:	cld    
  40f9b0:	mov    cl,0x74
  40f9b2:	push   ss
  40f9b3:	jns    0x40f98b
  40f9b5:	call   0x4d172502
  40f9ba:	jae    0x40fa26
  40f9bc:	or     eax,0x86d7e2a0
  40f9c1:	jne    0x40f948
  40f9c3:	enter  0x989,0x34
  40f9c7:	ds xchg ebx,eax
  40f9c9:	fldcw  WORD PTR [esp+esi*8+0x79]
  40f9cd:	cmp    eax,0xdfe52ce6
  40f9d2:	mov    eax,0xf16a36c2
  40f9d7:	aas    
  40f9d8:	out    0x1e,al
  40f9da:	inc    esi
  40f9db:	inc    ebp
  40f9dc:	sbb    eax,0x1f04e3f8
  40f9e1:	es shl bl,0x36
  40f9e5:	mov    ah,0xef
  40f9e7:	leave  
  40f9e8:	mov    edi,0x59dbfeb
  40f9ed:	ret    
  40f9ee:	ins    DWORD PTR es:[edi],dx
  40f9ef:	sub    ax,0x2846
  40f9f3:	in     eax,dx
  40f9f4:	add    dl,bh
  40f9f6:	xchg   ebp,eax
  40f9f7:	jl     0x40fa2d
  40f9f9:	ret    0x1d84
  40f9fc:	inc    esi
  40f9fd:	inc    edi
  40f9fe:	and    eax,0x8b5e0a0e
  40fa03:	dec    ebp
  40fa04:	cld    
  40fa05:	mov    edx,DWORD PTR [ebp-0x10]
  40fa08:	mov    edi,DWORD PTR [ebp-0xc]
  40fa0b:	add    eax,edx
  40fa0d:	mov    edx,DWORD PTR [ebp-0x18]
  40fa10:	adc    ecx,edi
  40fa12:	mov    edi,DWORD PTR [ebp-0x14]
  40fa15:	push   edi
  40fa16:	push   edx
  40fa17:	or     ecx,0x6833
  40fa1d:	or     eax,0x6b80
  40fa22:	push   ecx
  40fa23:	push   eax
  40fa24:	call   0x4222ab
  40fa29:	mov    ecx,DWORD PTR [ebp-0x20]
  40fa2c:	mov    edi,DWORD PTR [ebp-0x1c]
  40fa2f:	and    eax,0x25cb
  40fa34:	jmp    0x40fde8
  40fa39:	js     0x40fa83
  40fa3b:	cld    
  40fa3c:	(bad)  
  40fa3e:	jb     0x40fabc
  40fa40:	pop    eax
  40fa41:	dec    eax
  40fa42:	lods   eax,DWORD PTR ds:[esi]
  40fa43:	push   cs
  40fa44:	sahf   
  40fa45:	arpl   WORD PTR [eax],si
  40fa47:	push   es
  40fa48:	xchg   edx,eax
  40fa49:	jge    0x40fa71
  40fa4b:	mov    esi,0xbec4e3be
  40fa50:	mov    esi,0xdce5b180
  40fa55:	mov    ch,0xa4
  40fa57:	and    DWORD PTR [ecx-0x1],esi
  40fa5a:	shrd   DWORD PTR ds:0xc4146ff7,esp,0xcf
  40fa62:	jbe    0x40fa0f
  40fa64:	sbb    ah,BYTE PTR cs:[ecx]
  40fa67:	add    ah,bh
  40fa69:	push   edx
  40fa6a:	inc    esp
  40fa6b:	fwait
  40fa6c:	inc    edx
  40fa6d:	xchg   ecx,eax
  40fa6e:	jle    0x40fad6
  40fa70:	dec    esi
  40fa71:	jno    0x40fad6
  40fa73:	icebp  
  40fa74:	xchg   esp,eax
  40fa75:	cmp    al,0x1a
  40fa77:	cmc    
  40fa78:	test   DWORD PTR [ecx+0x3f],edi
  40fa7b:	in     al,dx
  40fa7c:	nop
  40fa7d:	mov    cl,0xa1
  40fa7f:	or     esp,esp
  40fa81:	rol    BYTE PTR [ebx-0x59],1
  40fa84:	add    BYTE PTR [edx-0x3f205926],bl
  40fa8a:	jecxz  0x40fa7d
  40fa8c:	fcom   DWORD PTR [edi+0x5a]
  40fa8f:	lock or edi,DWORD PTR [eiz*1-0x52499b95]
  40fa97:	and    ebx,DWORD PTR [ebp+0x65f2480f]
  40fa9d:	and    cl,BYTE PTR [ebx+0x3efcda55]
  40faa3:	and    BYTE PTR [edi-0x4b8eeb31],dl
  40faa9:	stos   BYTE PTR es:[edi],al
  40faaa:	ss pusha 
  40faac:	daa    
  40faad:	outs   dx,DWORD PTR ds:[esi]
  40faae:	or     BYTE PTR [ebp-0x68b8e520],bl
  40fab4:	neg    DWORD PTR [ebx+0x7c]
  40fab7:	aad    0x30
  40fab9:	dec    edi
  40faba:	scas   al,BYTE PTR es:[edi]
  40fabb:	(bad)  
  40fabc:	clc    
  40fabd:	push   cs
  40fabe:	xchg   edx,eax
  40fabf:	cdq    
  40fac0:	fucom  st(6)
  40fac2:	(bad)  
  40fac3:	int    0xa3
  40fac5:	mov    al,0xb0
  40fac7:	dec    esi
  40fac8:	sbb    DWORD PTR [esi+ebx*8-0x7],ebx
  40facc:	adc    BYTE PTR [ebp+edi*8-0xc],ah
  40fad0:	and    BYTE PTR [esi+0xf],0x5b
  40fad4:	inc    esp
  40fad5:	add    dh,cl
  40fad7:	mov    bl,0x2f
  40fad9:	test   eax,0xa4e097c0
  40fade:	dec    edi
  40fadf:	pop    edi
  40fae0:	pop    ecx
  40fae1:	push   ecx
  40fae2:	in     al,dx
  40fae3:	dec    eax
  40fae4:	ss cmc 
  40fae6:	sub    DWORD PTR [eax+0x20],edx
  40fae9:	pusha  
  40faea:	add    al,ch
  40faec:	jp     0x40fb4b
  40faee:	(bad)  
  40faf0:	aaa    
  40faf1:	hlt    
  40faf2:	add    DWORD PTR [ebx+0x5e],ecx
  40faf5:	sbb    DWORD PTR [esi-0x34],0xa35e5143
  40fafc:	jmp    0x66a51081
  40fb01:	xor    edi,DWORD PTR [ecx+eiz*8+0x11]
  40fb05:	mov    esi,0xed27b1b6
  40fb0a:	jae    0x40fb06
  40fb0c:	xchg   BYTE PTR [edx],dh
  40fb0e:	add    al,0x95
  40fb10:	in     al,dx
  40fb11:	into   
  40fb12:	retf   
  40fb13:	jge    0x40faea
  40fb15:	or     eax,0x82eec4f8
  40fb1a:	jl     0x40fb55
  40fb1c:	push   ds
  40fb1d:	jno    0x40fac3
  40fb1f:	mov    ah,0xf6
  40fb21:	clc    
  40fb22:	and    BYTE PTR [eax+0x1539779d],0x34
  40fb29:	push   esi
  40fb2a:	scas   eax,DWORD PTR es:[edi]
  40fb2b:	dec    ebx
  40fb2c:	dec    ebx
  40fb2d:	imul   ebp,DWORD PTR [esi+ebx*2],0x19
  40fb31:	sub    DWORD PTR [edi+0x273c7d7b],edi
  40fb37:	(bad)  
  40fb38:	and    eax,0x85641d70
  40fb3d:	int    0x5e
  40fb3f:	inc    esp
  40fb40:	aad    0xd9
  40fb42:	sbb    al,0x70
  40fb44:	xchg   esi,eax
  40fb45:	shl    al,1
  40fb47:	lods   al,BYTE PTR ds:[esi]
  40fb48:	mov    esp,0x7fb3ade4
  40fb4d:	jae    0x40fadc
  40fb4f:	pop    edx
  40fb50:	and    dh,ah
  40fb52:	hlt    
  40fb53:	inc    ebp
  40fb54:	pop    ss
  40fb55:	jl     0x40fbca
  40fb57:	cmp    edi,DWORD PTR [edi+0x12fb1410]
  40fb5d:	jl     0x40fbb3
  40fb5f:	loope  0x40fb00
  40fb61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb62:	mov    esi,0xa9ed3015
  40fb67:	xor    bl,BYTE PTR [edx+eiz*2-0x5a843f07]
  40fb6e:	frstor [ebx]
  40fb70:	mov    ebp,0x21cbd918
  40fb75:	cmc    
  40fb76:	and    al,0x40
  40fb78:	xor    eax,0x4beb9d2f
  40fb7d:	in     eax,0xf9
  40fb7f:	mov    ecx,0x52c0d163
  40fb84:	add    bh,dl
  40fb86:	int3   
  40fb87:	sub    dh,bh
  40fb89:	repz sahf 
  40fb8b:	and    DWORD PTR [ebp-0x39c36113],edx
  40fb91:	bound  edx,QWORD PTR [ecx+0x50]
  40fb94:	inc    ecx
  40fb95:	push   esi
  40fb96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb97:	push   0x6f8a3449
  40fb9c:	sub    DWORD PTR [edx-0x69faaa3],ebx
  40fba2:	dec    ecx
  40fba3:	outs   dx,DWORD PTR ds:[esi]
  40fba4:	adc    eax,0xb2d11ed9
  40fba9:	mov    WORD PTR [ebp+0x3a],es
  40fbac:	fld    TBYTE PTR [ebp-0x20]
  40fbaf:	shl    DWORD PTR [esp+eax*2+0x33e0da26],1
  40fbb6:	es jns 0x40fc1d
  40fbb9:	push   edx
  40fbba:	fidiv  DWORD PTR [ebx]
  40fbbc:	and    BYTE PTR [ecx+0x5b],ch
  40fbbf:	add    DWORD PTR [edi-0x57],0x5242dcb3
  40fbc6:	dec    esp
  40fbc7:	popf   
  40fbc8:	or     BYTE PTR [edx+0x4b],ah
  40fbcb:	cmp    ebp,DWORD PTR [edx+0x5503a61a]
  40fbd1:	dec    eax
  40fbd2:	dec    eax
  40fbd3:	adc    BYTE PTR [edx],al
  40fbd5:	(bad)  
  40fbd7:	push   ecx
  40fbd8:	mov    gs,WORD PTR [esi]
  40fbda:	add    ebp,0x1d
  40fbdd:	inc    ebx
  40fbde:	jge    0x40fbc3
  40fbe0:	rcl    BYTE PTR [ebx+0x24],1
  40fbe3:	test   BYTE PTR [esi+0x11],ah
  40fbe6:	call   0xb4d7:0xed853695
  40fbed:	retf   
  40fbee:	ret    
  40fbef:	fdiv   DWORD PTR [edi]
  40fbf1:	mov    ecx,0xc668dc1e
  40fbf6:	lds    eax,FWORD PTR [edx-0x69]
  40fbf9:	xchg   esi,eax
  40fbfa:	xlat   BYTE PTR ds:[ebx]
  40fbfb:	data16 fimul DWORD PTR [ebp+0x7192ffa0]
  40fc02:	mov    esp,0xecd1b379
  40fc08:	retf   0xeaa4
  40fc0b:	aaa    
  40fc0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc0d:	loop   0x40fbad
  40fc0f:	ss push es
  40fc11:	mov    dl,0xb7
  40fc13:	xchg   edx,eax
  40fc14:	dec    esp
  40fc15:	add    BYTE PTR [esi-0x61],dl
  40fc18:	add    dl,bh
  40fc1a:	mov    bh,BYTE PTR [edi+ebp*4]
  40fc1d:	popf   
  40fc1e:	cmp    DWORD PTR [edx+0x2bc70ddd],ecx
  40fc24:	fcomip st,st(7)
  40fc26:	or     DWORD PTR ds:0x857294a9,eax
  40fc2c:	fcomp  DWORD PTR [eax+0x31178880]
  40fc32:	sti    
  40fc33:	mov    dl,0xa5
  40fc35:	test   eax,0xe434324
  40fc3a:	in     al,dx
  40fc3b:	xor    edi,ecx
  40fc3d:	xlat   BYTE PTR ds:[ebx]
  40fc3e:	mov    dl,BYTE PTR [ebp+0x6a]
  40fc41:	stc    
  40fc42:	rol    al,0xa1
  40fc45:	scas   eax,DWORD PTR es:[edi]
  40fc46:	jb     0x40fc5d
  40fc48:	mov    esp,ss
  40fc4a:	repz inc ebp
  40fc4c:	pop    ebp
  40fc4d:	pop    edi
  40fc4e:	mov    eax,ds:0x33663d8c
  40fc53:	add    dh,BYTE PTR [ecx-0x49ece226]
  40fc59:	jns    0x40fbe4
  40fc5b:	adc    al,0xb6
  40fc5d:	scas   al,BYTE PTR es:[edi]
  40fc5e:	jmp    0x3f68:0x1a7a82c
  40fc65:	jo     0x40fbfe
  40fc67:	adc    DWORD PTR [edi+0x7b15d4a2],eax
  40fc6d:	mov    eax,ds:0x7b623986
  40fc72:	or     eax,0x36e2c0a4
  40fc77:	les    ebp,FWORD PTR [esi]
  40fc79:	into   
  40fc7a:	int    0x19
  40fc7c:	loopne 0x40fc0b
  40fc7e:	call   0xe351:0x300145c2
  40fc85:	add    ebx,DWORD PTR [edx+0x225cb2b7]
  40fc8b:	loopne 0x40fcd0
  40fc8d:	cli    
  40fc8e:	adc    al,0x6a
  40fc90:	ins    BYTE PTR es:[edi],dx
  40fc91:	(bad)
  40fc94:	call   0x253dbcae
  40fc99:	mov    eax,ds:0xa3ac8916
  40fc9e:	pop    es
  40fc9f:	call   0x54ba:0x7054377
  40fca6:	(bad)  
  40fca7:	mov    cl,0x7e
  40fca9:	push   0x90158e42
  40fcae:	xor    BYTE PTR [esi-0x76],cl
  40fcb1:	pushf  
  40fcb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fcb3:	(bad)  
  40fcb4:	push   ds
  40fcb5:	jae    0x40fc3a
  40fcb7:	cmp    esi,DWORD PTR [esi]
  40fcb9:	addr16 (bad) 
  40fcbb:	(bad)  
  40fcbc:	dec    esp
  40fcbd:	inc    esi
  40fcbe:	outs   dx,DWORD PTR ds:[esi]
  40fcbf:	arpl   di,di
  40fcc1:	and    BYTE PTR [edi-0x360e2eb7],bh
  40fcc7:	outs   dx,DWORD PTR ds:[esi]
  40fcc8:	je     0x40fd40
  40fcca:	inc    edi
  40fccb:	rcl    DWORD PTR [ebx-0x5e],0x23
  40fccf:	xchg   ebp,eax
  40fcd0:	div    dl
  40fcd2:	mov    ds:0x9ebc3deb,eax
  40fcd7:	call   0xe1e2b01c
  40fcdc:	cmp    al,0xc1
  40fcde:	inc    esi
  40fcdf:	push   ecx
  40fce0:	pop    ebx
  40fce1:	idiv   DWORD PTR [esi-0x6432758]
  40fce7:	jo     0x40fcb6
  40fce9:	sbb    DWORD PTR [ebx],0xfb617985
  40fcef:	cld    
  40fcf0:	mov    DWORD PTR [edx],0x78c8c033
  40fcf6:	aam    0x7b
  40fcf8:	fdivr  DWORD PTR [ebp-0x5c]
  40fcfb:	cld    
  40fcfc:	loop   0x40fccd
  40fcfe:	inc    edx
  40fcff:	js     0x40fd33
  40fd01:	mov    ebp,eax
  40fd03:	or     al,BYTE PTR [eax+0x7a]
  40fd06:	dec    edx
  40fd07:	sub    BYTE PTR [esi+0x63],dl
  40fd0a:	lahf   
  40fd0b:	xchg   DWORD PTR [ecx-0x1e],ecx
  40fd0e:	ds loopne 0x40fca6
  40fd11:	shr    DWORD PTR [edx+ecx*8],1
  40fd14:	inc    ecx
  40fd15:	outs   dx,DWORD PTR ds:[esi]
  40fd16:	pop    esp
  40fd17:	inc    edi
  40fd18:	xor    ecx,DWORD PTR [esp+edi*1-0x43]
  40fd1c:	ins    BYTE PTR es:[edi],dx
  40fd1d:	push   ecx
  40fd1e:	mov    ah,0x57
  40fd20:	mov    BYTE PTR [ebp-0x7a],ch
  40fd23:	popa   
  40fd24:	pop    ebx
  40fd25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd26:	daa    
  40fd27:	xor    ah,ah
  40fd29:	gs add ah,dh
  40fd2c:	push   esi
  40fd2d:	push   esi
  40fd2e:	in     eax,dx
  40fd2f:	es mov edi,edx
  40fd32:	and    DWORD PTR [esi],esp
  40fd34:	fcom   QWORD PTR ds:0x3cb199e9
  40fd3a:	mov    ds:0xd6fe294a,eax
  40fd3f:	mov    bl,0x82
  40fd41:	imul   DWORD PTR [esi+ecx*8+0x72]
  40fd45:	adc    al,0xa6
  40fd47:	mov    eax,0x5e30dc3e
  40fd4c:	jno    0x40fceb
  40fd4e:	(bad)  
  40fd4f:	push   ebx
  40fd50:	hlt    
  40fd51:	adc    bh,BYTE PTR [ebp-0x6f9f3eff]
  40fd57:	xor    eax,ebp
  40fd59:	pop    edi
  40fd5a:	gs jmp 0x40fd1e
  40fd5d:	pop    esi
  40fd5e:	aaa    
  40fd5f:	pop    ecx
  40fd60:	mov    ds:0x91d0e34c,al
  40fd65:	aad    0x61
  40fd67:	mov    al,ds:0x7a12f401
  40fd6c:	xlat   BYTE PTR ds:[bx]
  40fd6e:	into   
  40fd6f:	pop    edx
  40fd70:	es xchg ebx,edx
  40fd73:	push   ebp
  40fd74:	out    0x23,eax
  40fd76:	pop    eax
  40fd77:	leave  
  40fd78:	dec    esp
  40fd79:	sub    esp,edi
  40fd7b:	repz scas al,BYTE PTR es:[edi]
  40fd7d:	fwait
  40fd7e:	test   DWORD PTR [ecx+0xd],esi
  40fd81:	mov    eax,ds:0x6620602d
  40fd86:	ror    bl,1
  40fd88:	fs neg ecx
  40fd8b:	pop    ds
  40fd8c:	imul   bh
  40fd8e:	and    BYTE PTR [esi-0x264696e1],ch
  40fd94:	mov    eax,ds:0x40159e21
  40fd99:	mov    ecx,DWORD PTR [edx-0x40545bab]
  40fd9f:	leave  
  40fda0:	mov    eax,0xe9fc0860
  40fda5:	ins    BYTE PTR es:[edi],dx
  40fda6:	std    
  40fda7:	xchg   ecx,eax
  40fda8:	retf   
  40fda9:	push   esi
  40fdaa:	jp     0x40fd30
  40fdac:	fadd   st(1),st
  40fdae:	add    DWORD PTR [esi+0x61],ebx
  40fdb1:	cmp    al,0xcb
  40fdb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fdb4:	jnp    0x40fdcf
  40fdb6:	out    0x6f,eax
  40fdb8:	mov    ecx,edx
  40fdba:	call   0x4089133
  40fdbf:	pop    ebp
  40fdc0:	jmp    0x875d3aef
  40fdc5:	sub    al,0xe0
  40fdc7:	mov    eax,0x38722cd2
  40fdcc:	xlat   BYTE PTR ds:[ebx]
  40fdcd:	(bad)  
  40fdce:	test   eax,0xdc5eb11
  40fdd3:	add    ebp,DWORD PTR [ebx]
  40fdd5:	gs inc edx
  40fdd7:	jmp    0xf10:0xd3ca22a2
  40fdde:	icebp  
  40fddf:	xor    BYTE PTR [ebx],bh
  40fde1:	addr16 loope 0x40fd83
  40fde4:	shr    BYTE PTR [eax-0x67],1
  40fde7:	dec    ebx
  40fde8:	or     eax,ecx
  40fdea:	mov    ecx,DWORD PTR [ebp-0x20]
  40fded:	mov    ecx,DWORD PTR [ebp-0x1c]
  40fdf0:	and    edx,0x76f2
  40fdf6:	or     edx,edi
  40fdf8:	xor    edx,esi
  40fdfa:	xor    eax,0x253b
  40fdff:	shld   edx,eax,0x2
  40fe03:	shl    eax,0x2
  40fe06:	shr    ecx,0x1e
  40fe09:	xor    esi,esi
  40fe0b:	or     eax,ecx
  40fe0d:	or     edx,esi
  40fe0f:	xor    eax,0xcb79b576
  40fe14:	mov    DWORD PTR [ebp-0x20],eax
  40fe17:	mov    esi,0x9c2b8ae8
  40fe1c:	xor    edx,esi
  40fe1e:	mov    DWORD PTR [ebp-0x1c],edx
  40fe21:	mov    eax,DWORD PTR [ebp-0x38]
  40fe24:	mov    ecx,DWORD PTR [ebp-0x34]
  40fe27:	mov    edx,DWORD PTR [ebp-0x40]
  40fe2a:	mov    edi,DWORD PTR [ebp-0x3c]
  40fe2d:	push   edi
  40fe2e:	push   edx
  40fe2f:	push   ecx
  40fe30:	push   eax
  40fe31:	call   0x41594e
  40fe36:	add    eax,0x536a
  40fe3b:	adc    edx,0x9573
  40fe41:	push   0x12613
  40fe46:	push   0xae21daec
  40fe4b:	push   edx
  40fe4c:	push   eax
  40fe4d:	call   0x4222ab
  40fe52:	mov    ecx,eax
  40fe54:	mov    eax,DWORD PTR [ebp-0x20]
  40fe57:	mov    ebx,DWORD PTR [ebp-0x1c]
  40fe5a:	xor    ecx,0x1b8b
  40fe60:	xor    edi,edi
  40fe62:	xor    edx,edi
  40fe64:	add    ecx,eax
  40fe66:	mov    eax,DWORD PTR [ebp+0xc]
  40fe69:	adc    edx,ebx
  40fe6b:	mov    DWORD PTR [eax],ecx
  40fe6d:	mov    DWORD PTR [eax+0x4],edx
  40fe70:	mov    eax,DWORD PTR [ebp-0x30]
  40fe73:	mov    ecx,DWORD PTR [ebp-0x2c]
  40fe76:	mov    edx,0xbdb2
  40fe7b:	sub    edx,eax
  40fe7d:	jmp    0x410231
  40fe82:	(bad)  
  40fe83:	out    dx,eax
  40fe84:	ins    BYTE PTR es:[edi],dx
  40fe85:	and    BYTE PTR [esp+edi*4+0x3f7f08b],bh
  40fe8c:	or     bh,0x8d
  40fe8f:	xlat   BYTE PTR ds:[ebx]
  40fe90:	and    bl,BYTE PTR [esi-0x4141d35c]
  40fe96:	jecxz  0x40fe5c
  40fe98:	mov    esi,0x5612d8be
  40fe9d:	mov    ecx,DWORD PTR [ebx-0x21ca8a5b]
  40fea3:	jmp    0x4b08:0x745a9b2a
  40feaa:	adc    ah,BYTE PTR [eax+0x3d793679]
  40feb0:	lahf   
  40feb1:	pop    ss
  40feb2:	xor    eax,DWORD PTR [ebp-0x7f82eeb8]
  40feb8:	maxps  xmm2,XMMWORD PTR [esp+edx*4]
  40febc:	sar    esi,0x4
  40febf:	imul   edx,DWORD PTR [edi+0x1a],0x994ae38d
  40fec6:	dec    eax
  40fec7:	jl     0x40ff3f
  40fec9:	mov    edi,0xd9b4e70e
  40fece:	xor    al,0xba
  40fed0:	(bad)  
  40fed1:	jo     0x40fefd
  40fed3:	pop    eax
  40fed4:	inc    DWORD PTR [ebx]
  40fed6:	dec    esp
  40fed7:	outs   dx,DWORD PTR ds:[esi]
  40fed8:	jg     0x40feb4
  40feda:	in     eax,0x7b
  40fedc:	adc    edi,DWORD PTR [edi]
  40fede:	ins    BYTE PTR es:[edi],dx
  40fedf:	lods   eax,DWORD PTR ds:[esi]
  40fee0:	mov    eax,edx
  40fee2:	dec    edx
  40fee3:	gs sbb al,0xf4
  40fee6:	push   0xe9faf945
  40feeb:	ja     0x40fe8a
  40feed:	ss pop ecx
  40feef:	fiadd  DWORD PTR [ebx-0x67c29c73]
  40fef5:	jne    0x40feef
  40fef7:	and    BYTE PTR [ecx-0x4a],dl
  40fefa:	dec    ebp
  40fefb:	cmp    bh,ah
  40fefd:	cmp    DWORD PTR [edx-0x250a9691],edx
  40ff03:	inc    esi
  40ff04:	add    eax,0x8e4b404
  40ff09:	mov    al,ah
  40ff0b:	mov    dh,0xe0
  40ff0d:	push   ss
  40ff0e:	xchg   ebx,eax
  40ff0f:	clc    
  40ff10:	mov    ebp,DWORD PTR [edi+0x1a]
  40ff13:	push   es
  40ff14:	ins    BYTE PTR es:[edi],dx
  40ff15:	out    0x6d,eax
  40ff17:	mov    eax,0xc551a655
  40ff1c:	les    edx,FWORD PTR [ebp+0x6136654e]
  40ff22:	shl    DWORD PTR [eax+0x32e8d89d],0x9a
  40ff29:	mov    BYTE PTR [ebx+0x5],cl
  40ff2c:	inc    eax
  40ff2d:	jecxz  0x40feb8
  40ff2f:	sub    cl,BYTE PTR [ebx+0x29fb5b4d]
  40ff35:	jecxz  0x40ff92
  40ff37:	or     ch,BYTE PTR [ecx]
  40ff39:	adc    edx,ecx
  40ff3b:	(bad)  
  40ff3c:	out    0x12,al
  40ff3e:	pop    ebx
  40ff3f:	scas   eax,DWORD PTR es:[edi]
  40ff40:	int    0xa7
  40ff42:	jns    0x40feee
  40ff44:	nop
  40ff45:	mov    DWORD PTR [esi-0x33162ca9],ebx
  40ff4b:	out    dx,eax
  40ff4c:	cmc    
  40ff4d:	ds pusha 
  40ff4f:	jbe    0x40ff86
  40ff51:	rcl    BYTE PTR gs:[ebx-0x37932fd1],0xe5
  40ff59:	mov    esi,0xbd3567e2
  40ff5e:	stos   DWORD PTR es:[edi],eax
  40ff5f:	fisub  DWORD PTR [eax-0x46]
  40ff62:	jp     0x40fefe
  40ff64:	inc    esp
  40ff65:	jae    0x40ff26
  40ff67:	pushf  
  40ff68:	sbb    DWORD PTR [ecx-0x73],esi
  40ff6b:	ja     0x40ff15
  40ff6d:	and    cl,BYTE PTR [edi-0x54]
  40ff70:	sub    edi,DWORD PTR [ecx-0x183829fd]
  40ff76:	and    BYTE PTR [ecx-0x60426302],ch
  40ff7c:	xor    BYTE PTR [esi-0x62],dl
  40ff7f:	iret   
  40ff80:	out    0x37,al
  40ff82:	addr16 mov esp,0x4c18320f
  40ff88:	pushf  
  40ff89:	arpl   WORD PTR [edi],di
  40ff8b:	dec    eax
  40ff8c:	mov    esp,esi
  40ff8e:	sbb    BYTE PTR ds:0x5a99eead,bh
  40ff94:	mov    ah,0x80
  40ff96:	jmp    0xa402:0xb4cd4a6b
  40ff9d:	mov    ds:0xa741a53d,al
  40ffa2:	fwait
  40ffa3:	gs sub al,0x7c
  40ffa6:	xchg   cl,cl
  40ffa8:	fstp   st(0)
  40ffaa:	repnz sub esi,DWORD PTR [ebx+0x2f83e1a9]
  40ffb1:	mov    dh,0x1e
  40ffb3:	loopne 0x40fff1
  40ffb5:	test   eax,0xc13b2d12
  40ffba:	mov    dl,0x6a
  40ffbc:	push   ebp
  40ffbd:	pop    esp
  40ffbe:	xor    eax,0xce8d4d47
  40ffc3:	push   edi
  40ffc4:	dec    esi
  40ffc5:	push   ss
  40ffc6:	ja     0x40ffbe
  40ffc8:	push   ecx
  40ffc9:	xchg   edx,eax
  40ffca:	je     0x410001
  40ffcc:	add    esp,eax
  40ffce:	mov    ebp,0x949c586
  40ffd3:	js     0x40ffd6
  40ffd5:	and    ch,cl
  40ffd7:	jbe    0x40ff89
  40ffd9:	xchg   esi,eax
  40ffda:	int    0x12
  40ffdc:	(bad)  
  40ffdd:	push   esi
  40ffde:	mov    ebx,0xae1ba7a4
  40ffe3:	fcomp  QWORD PTR [edx+edi*2+0x4668f029]
  40ffea:	cmc    
  40ffeb:	push   0x65
  40ffed:	cmc    
  40ffee:	mov    ebp,DWORD PTR ss:[eax+ecx*1-0x67]
  40fff3:	leave  
  40fff4:	jbe    0x410029
  40fff6:	enter  0x3afd,0x7c
  40fffa:	dec    edx
  40fffb:	dec    eax
  40fffc:	mov    ah,0x4e
  40fffe:	add    BYTE PTR [ecx+0x57a6a36b],0xde
  410005:	mov    eax,ds:0xc13110aa
  41000a:	cmp    dh,BYTE PTR [esi-0x348dc443]
  410010:	mov    ecx,0x2e816e24
  410015:	imul   eax,DWORD PTR [eax-0x42d7ebba],0xffffffa0
  41001c:	xor    al,0xc2
  41001e:	rcr    ecx,0x5f
  410021:	jmp    0x9d03:0x5dc65c14
  410028:	push   edx
  410029:	mov    ch,BYTE PTR [edi+edi*4+0x1b]
  41002d:	sub    eax,0x2f58c1e8
  410032:	or     edi,DWORD PTR [ecx+0x56]
  410035:	sub    BYTE PTR [ecx+0x64],ch
  410038:	or     ebx,DWORD PTR [esi]
  41003a:	mov    esp,edx
  41003c:	jmp    0x410099
  41003e:	sub    eax,0xb85b15aa
  410043:	inc    esp
  410044:	js     0x41009a
  410046:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410047:	push   ebp
  410048:	mov    edi,DWORD PTR [edx-0x363f4e6e]
  41004e:	inc    ecx
  41004f:	mov    dh,0x72
  410051:	jo     0x4100cb
  410053:	and    cl,BYTE PTR [esi]
  410055:	retf   
  410056:	xchg   DWORD PTR [esp+edx*2+0x45ba765c],esp
  41005d:	pusha  
  41005e:	daa    
  41005f:	call   FWORD PTR [ebp-0x662e43e5]
  410065:	xor    DWORD PTR [ecx+0x15],edx
  410068:	or     edx,DWORD PTR ds:0xff69b65d
  41006e:	aam    0x8a
  410070:	sub    cl,bh
  410072:	js     0x4100d4
  410074:	push   cs
  410075:	adc    BYTE PTR [eax+0x57],0x9b
  410079:	add    al,0x60
  41007b:	jg     0x41000c
  41007d:	pop    ds
  41007e:	push   0x52
  410080:	dec    eax
  410081:	jmp    0x4100dd
  410083:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410084:	pop    eax
  410085:	jb     0x41001f
  410087:	sub    edi,ebx
  410089:	out    0x77,eax
  41008b:	leave  
  41008c:	(bad)  
  41008d:	jle    0x410040
  41008f:	int    0xab
  410091:	lea    edx,ds:0x8d98c38b
  410097:	sbb    DWORD PTR [edx+0x55],eax
  41009a:	and    BYTE PTR [esi-0x156e3442],dh
  4100a0:	aaa    
  4100a1:	jae    0x4100e3
  4100a3:	out    dx,eax
  4100a4:	mov    esp,0x85608f4e
  4100a9:	test   al,0xe3
  4100ab:	jno    0x410055
  4100ad:	pop    eax
  4100ae:	lahf   
  4100af:	xor    eax,0x4ce1101c
  4100b4:	and    ebx,DWORD PTR [edx]
  4100b6:	mov    ebp,0xf4285f18
  4100bb:	loopne 0x410046
  4100bd:	push   0xffffff98
  4100bf:	adc    BYTE PTR [edi+0x27],ah
  4100c2:	call   FWORD PTR ds:0xc623243a
  4100c8:	jae    0x410094
  4100ca:	or     BYTE PTR [eax],al
  4100cc:	test   eax,0x370c3589
  4100d1:	mov    bl,0xc7
  4100d3:	fmul   DWORD PTR [esi-0x9562fe6]
  4100d9:	lahf   
  4100da:	mul    dh
  4100dc:	adc    BYTE PTR [edx+0x153b8007],dl
  4100e2:	inc    ebp
  4100e3:	push   ebp
  4100e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100e5:	inc    esp
  4100e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100e7:	add    BYTE PTR [ebx-0x67],ah
  4100ea:	mov    esi,0xf30fc5e7
  4100ef:	ss xchg ebx,eax
  4100f1:	and    cl,BYTE PTR [esi-0x45]
  4100f4:	lds    ecx,FWORD PTR [esi+0x24]
  4100f7:	shl    BYTE PTR [edx+0x65968be6],cl
  4100fd:	push   edx
  4100fe:	pop    es
  4100ff:	sub    al,0x84
  410101:	ins    BYTE PTR es:[edi],dx
  410102:	rcr    DWORD PTR [ebp+0x7efb5a4c],1
  410108:	xchg   ebx,eax
  410109:	hlt    
  41010a:	sti    
  41010b:	jae    0x4100b4
  41010d:	adc    eax,0xafae5050
  410112:	xchg   DWORD PTR [esi+eax*8],eax
  410115:	add    dh,BYTE PTR [ecx-0x684a44db]
  41011b:	pop    ebp
  41011c:	repz pop ebx
  41011e:	mov    DWORD PTR [ebx+0x77],eax
  410121:	imul   esi,DWORD PTR ds:0x6fea421f,0xdaa5b1c4
  41012b:	imul   ebx,ebp,0x52
  41012e:	ret    0x9f27
  410131:	mov    ch,BYTE PTR [edi+0x61]
  410134:	jmp    0x410119
  410136:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410137:	loope  0x410149
  410139:	fld    TBYTE PTR [edx]
  41013b:	(bad)  
  41013c:	pop    ebx
  41013d:	jne    0x41015e
  41013f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410140:	mov    eax,0x9a16357b
  410145:	cmp    eax,0x8092c9f0
  41014a:	and    dh,BYTE PTR [esi]
  41014c:	sub    al,0xef
  41014e:	clc    
  41014f:	rol    BYTE PTR ds:0xb31f7953,1
  410155:	fild   QWORD PTR [ebx+0x2a]
  410158:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410159:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41015a:	test   dh,bl
  41015c:	mov    bl,0xcc
  41015e:	ins    DWORD PTR es:[edi],dx
  41015f:	and    eax,0x3a68b75b
  410164:	mov    eax,ds:0x102aede5
  410169:	sub    eax,0xa192cd12
  41016e:	jb     0x41018b
  410170:	sub    dh,BYTE PTR [edi]
  410172:	mov    cl,0xe4
  410174:	cdq    
  410175:	xor    ebp,edi
  410177:	pop    ss
  410178:	cmp    DWORD PTR [edx],esi
  41017a:	add    ebx,DWORD PTR [ecx]
  41017c:	mov    al,ah
  41017e:	(bad)  
  41017f:	scas   al,BYTE PTR es:[edi]
  410180:	mov    ds:0xb9ef01b5,al
  410185:	shl    ah,cl
  410187:	ret    0xd7fb
  41018a:	inc    eax
  41018b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41018c:	ins    DWORD PTR es:[edi],dx
  41018d:	dec    esp
  41018e:	fnsave [edi-0x42]
  410191:	lea    esp,[edi]
  410193:	cld    
  410194:	jmp    DWORD PTR [esi]
  410196:	stos   BYTE PTR es:[edi],al
  410197:	inc    eax
  410198:	or     ah,BYTE PTR [edx-0x54]
  41019b:	cmp    ebp,DWORD PTR [edi]
  41019d:	lahf   
  41019e:	test   DWORD PTR [ecx],0x30c0d0c2
  4101a4:	adc    ebx,0x4276625c
  4101aa:	in     al,0xfe
  4101ac:	pusha  
  4101ad:	aam    0x71
  4101af:	rcl    DWORD PTR ds:0x9c0b8bea,0xbb
  4101b6:	sti    
  4101b7:	push   esi
  4101b8:	push   edi
  4101b9:	repz adc al,0x3a
  4101bc:	retf   0x6cd3
  4101bf:	pop    eax
  4101c0:	aam    0x55
  4101c2:	adc    BYTE PTR [esi+ebp*4-0x22],dl
  4101c6:	test   al,0xd3
  4101c8:	in     al,dx
  4101c9:	cmp    dh,BYTE PTR [edx-0x5b]
  4101cc:	sbb    edx,ecx
  4101ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101cf:	xor    dh,BYTE PTR [esi]
  4101d1:	not    BYTE PTR ds:0xf8cd3568
  4101d7:	int    0xcf
  4101d9:	cld    
  4101da:	fidiv  WORD PTR [edx]
  4101dc:	jo     0x410222
  4101de:	shl    DWORD PTR [esi-0x8f04678],cl
  4101e4:	jmp    0x3963:0xa8c56ed1
  4101eb:	je     0x4101b8
  4101ed:	ss pop ebx
  4101ef:	sbb    DWORD PTR [eax],edx
  4101f1:	repnz pop ebx
  4101f3:	sbb    al,0x16
  4101f5:	xor    eax,0x1bfb2346
  4101fa:	mov    ds:0xc7b287a6,al
  4101ff:	push   eax
  410200:	adc    BYTE PTR [edx+0x2d],bl
  410203:	add    DWORD PTR [eax-0x1b],0x4a
  410207:	sub    ecx,DWORD PTR [edi-0x1]
  41020a:	sbb    edi,DWORD PTR [edi]
  41020c:	dec    edx
  41020d:	xchg   esp,eax
  41020e:	xchg   esi,eax
  41020f:	jbe    0x41024f
  410211:	stos   DWORD PTR es:[edi],eax
  410212:	push   ebx
  410213:	aas    
  410214:	mov    eax,ds:0x2f15791a
  410219:	mov    al,0x6f
  41021b:	xlat   BYTE PTR ds:[ebx]
  41021c:	xor    al,0xd3
  41021e:	sbb    eax,0x6aa7783b
  410223:	leave  
  410224:	cmp    dh,dl
  410226:	cmp    DWORD PTR [esi],ecx
  410228:	aas    
  410229:	xchg   ebx,eax
  41022a:	stos   DWORD PTR es:[edi],eax
  41022b:	ja     0x410232
  41022d:	sub    BYTE PTR [edx-0xe],ah
  410230:	bound  ecx,QWORD PTR [ebx+0x2bbd845]
  410236:	dec    esp
  410237:	add    BYTE PTR [eax],al
  410239:	sbb    ebx,ecx
  41023b:	mov    ecx,DWORD PTR [ebp-0x24]
  41023e:	sub    edx,eax
  410240:	mov    eax,DWORD PTR [ebp+0xc]
  410243:	sbb    ebx,ecx
  410245:	add    edx,DWORD PTR [eax]
  410247:	mov    ecx,DWORD PTR [ebp-0x28]
  41024a:	adc    ebx,DWORD PTR [eax+0x4]
  41024d:	push   0x2
  41024f:	xor    ebx,esi
  410251:	mov    esi,DWORD PTR [ebp-0x24]
  410254:	pop    esi
  410255:	sub    esi,ecx
  410257:	mov    ecx,DWORD PTR [ebp-0x30]
  41025a:	sub    esi,ecx
  41025c:	mov    eax,ebx
  41025e:	jmp    0x410612
  410263:	sub    DWORD PTR [esi-0x65853526],eax
  410269:	cmp    DWORD PTR [esi-0x6df308e8],esp
  41026f:	clc    
  410270:	(bad)  
  410272:	iret   
  410273:	leave  
  410274:	xor    al,0xbe
  410276:	mov    esi,0xbebec4e3
  41027b:	outs   dx,BYTE PTR ds:[esi]
  41027c:	das    
  41027d:	add    ebx,0x17dc019e
  410283:	popf   
  410284:	and    dl,BYTE PTR [edx-0x52140feb]
  41028a:	sbb    eax,0xda8ae8bf
  41028f:	scas   al,BYTE PTR es:[edi]
  410290:	inc    eax
  410291:	pusha  
  410292:	int    0x8f
  410294:	retf   
  410295:	jmp    0x41030f
  410297:	imul   ebx,DWORD PTR [edi],0x19
  41029a:	sbb    al,0xe6
  41029c:	mov    ds:0x90ce55aa,eax
  4102a1:	in     al,0xae
  4102a3:	add    eax,0x11b2e102
  4102a8:	inc    esp
  4102a9:	jp     0x41022b
  4102ab:	adc    BYTE PTR [esi+edi*2+0x71],dh
  4102af:	mov    bl,0x37
  4102b2:	cmp    ch,BYTE PTR [esi-0x4b]
  4102b5:	(bad)  
  4102b6:	sbb    eax,0x622916d0
  4102bb:	mov    edi,0x261f2948
  4102c0:	lods   eax,DWORD PTR ds:[esi]
  4102c1:	inc    ecx
  4102c2:	mov    ds:0x6cf56d2b,al
  4102c7:	push   ebx
  4102c8:	xchg   ebp,eax
  4102c9:	not    DWORD PTR ds:0xd7340d8a
  4102cf:	cmp    BYTE PTR [edx-0x4d],dh
  4102d2:	cdq    
  4102d3:	and    dh,BYTE PTR [edx]
  4102d5:	pop    edx
  4102d6:	push   ss
  4102d7:	sub    eax,edx
  4102d9:	dec    esi
  4102da:	scas   al,BYTE PTR es:[edi]
  4102db:	in     eax,0x87
  4102dd:	push   0xffffffae
  4102df:	dec    ecx
  4102e0:	inc    eax
  4102e1:	test   al,0x9c
  4102e3:	(bad)  
  4102e4:	imul   ebx,DWORD PTR [eax+0xc],0xffffffee
  4102e8:	push   0x90aa4258
  4102ed:	imul   edi,DWORD PTR [ecx-0x2e08283b],0x53
  4102f4:	jmp    0xde304b8e
  4102f9:	pop    ss
  4102fa:	sbb    DWORD PTR [esi],ebx
  4102fc:	add    DWORD PTR ds:0x298c9800,edi
  410302:	pop    eax
  410303:	ins    BYTE PTR es:[edi],dx
  410304:	aaa    
  410305:	or     DWORD PTR [ebx],esp
  410307:	mov    esp,0x89582bc5
  41030c:	mov    esp,0xb92ebfd0
  410311:	fldenv [ebx+0x4c2b82d1]
  410317:	xor    ebx,0x5077aa0b
  41031d:	scas   eax,DWORD PTR es:[edi]
  41031e:	adc    BYTE PTR ds:0xe155010a,bh
  410324:	xor    ecx,DWORD PTR [ecx+esi*4+0x2a]
  410328:	lock test DWORD PTR [edi+edi*8],edx
  41032c:	mov    dh,0xf2
  41032e:	das    
  41032f:	xchg   ecx,eax
  410330:	imul   eax,DWORD PTR [ecx-0x74],0xbc6873ef
  410337:	or     DWORD PTR [eax+0x7d810810],ebx
  41033d:	sahf   
  41033e:	inc    edi
  41033f:	mov    ebp,0x39c31357
  410344:	in     al,dx
  410345:	xchg   BYTE PTR [edx],dh
  410347:	jl     0x410362
  410349:	xchg   edx,edi
  41034b:	cld    
  41034c:	cdq    
  41034d:	int3   
  41034e:	add    BYTE PTR fs:[eax+edi*4-0x725dcab8],ch
  410356:	ror    BYTE PTR [esi],cl
  410358:	test   BYTE PTR [ebp+ecx*1+0x7e],al
  41035c:	pop    es
  41035d:	mov    ecx,0x3254721b
  410362:	sub    DWORD PTR [eax+0x74],0xffffff9e
  410366:	adc    ch,BYTE PTR [esi+ecx*1]
  410369:	test   eax,0x95fdfa43
  41036e:	pop    edx
  41036f:	xor    BYTE PTR [ecx+0x52],0x53
  410373:	(bad)  
  410376:	adc    DWORD PTR [esi-0x5d475e7],esp
  41037c:	ret    
  41037d:	sub    al,0xb
  41037f:	mov    es,WORD PTR [edi+0x29]
  410382:	mov    ch,0x22
  410384:	or     ebx,DWORD PTR [edx+0x3e4c45bd]
  41038a:	shr    BYTE PTR [ecx],1
  41038c:	outs   dx,BYTE PTR ds:[esi]
  41038d:	pop    edx
  41038e:	add    bh,dl
  410390:	xlat   BYTE PTR ds:[ebx]
  410391:	fist   WORD PTR [edi-0x7f]
  410394:	lods   eax,DWORD PTR ds:[esi]
  410395:	jmp    0x410396
  410397:	inc    ecx
  410398:	push   ebx
  410399:	test   DWORD PTR [eax],ecx
  41039b:	adc    ecx,DWORD PTR [edi]
  41039d:	clc    
  41039e:	pop    edx
  41039f:	dec    edx
  4103a0:	pop    edi
  4103a1:	xchg   edi,ecx
  4103a3:	mov    eax,ds:0xca9e3191
  4103a8:	xor    al,0x79
  4103ab:	out    dx,al
  4103ac:	and    ah,al
  4103ae:	jo     0x410389
  4103b0:	stc    
  4103b1:	dec    esi
  4103b2:	xchg   ebx,eax
  4103b3:	ins    BYTE PTR es:[edi],dx
  4103b4:	and    eax,0xb857f359
  4103b9:	hlt    
  4103ba:	xor    BYTE PTR [edi-0x564d0da6],dh
  4103c0:	push   0xc19fb527
  4103c5:	cmp    ebx,esi
  4103c7:	imul   esi,DWORD PTR [ebp+esi*1-0x4b],0xffffff8b
  4103cc:	push   ss
  4103cd:	dec    esi
  4103ce:	cmp    BYTE PTR [esi+0x39],bh
  4103d1:	add    eax,0xbdee09b8
  4103d6:	scas   al,BYTE PTR es:[edi]
  4103d7:	or     BYTE PTR [edi-0x3c8fcf9b],0x80
  4103de:	je     0x41041f
  4103e0:	sub    BYTE PTR [ebp-0x408ea0ee],bl
  4103e6:	or     ch,BYTE PTR [eax]
  4103e8:	ins    DWORD PTR es:[edi],dx
  4103e9:	stos   BYTE PTR es:[edi],al
  4103ea:	out    dx,al
  4103eb:	lahf   
  4103ec:	dec    edi
  4103ed:	(bad)  
  4103ee:	inc    esp
  4103ef:	shr    DWORD PTR [eax],1
  4103f1:	mov    al,0x26
  4103f3:	aas    
  4103f4:	inc    esi
  4103f5:	jbe    0x4103eb
  4103f7:	push   0x48
  4103f9:	jae    0x4103c5
  4103fb:	inc    edi
  4103fc:	loope  0x41042a
  4103fe:	mov    esp,DWORD PTR [edi-0x324e405]
  410404:	or     BYTE PTR [edi+0x4c5b3249],0x1e
  41040b:	(bad)  
  41040c:	ja     0x4103d9
  41040e:	adc    BYTE PTR [edx+0x62],dl
  410411:	sub    al,0xa8
  410413:	push   esp
  410414:	add    al,0xc9
  410416:	pop    ds
  410417:	jmp    0x37a6505e
  41041c:	js     0x410425
  41041e:	push   ebx
  41041f:	in     al,0x28
  410421:	push   eax
  410422:	rcr    BYTE PTR [esi],0xa9
  410425:	xchg   DWORD PTR [esi+0x45b342a6],esi
  41042b:	mov    dl,0xdc
  41042d:	mov    al,0xd6
  41042f:	icebp  
  410430:	loope  0x41048b
  410432:	sbb    ah,BYTE PTR [eax+0x63]
  410435:	mov    BYTE PTR [ecx-0x163bec37],0x17
  41043c:	and    DWORD PTR [edi+0x5f],eax
  41043f:	push   ss
  410440:	push   esp
  410441:	(bad)  
  410442:	aas    
  410443:	lods   al,BYTE PTR ds:[esi]
  410444:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410445:	lods   al,BYTE PTR ds:[esi]
  410446:	adc    eax,DWORD PTR [ebx-0x3185bdb]
  41044c:	pop    ds
  41044d:	pop    ecx
  41044e:	inc    edi
  41044f:	dec    ecx
  410450:	mov    eax,0x3b538e14
  410455:	(bad)  
  410456:	xor    BYTE PTR [ebp-0x43888a33],al
  41045c:	ins    DWORD PTR es:[edi],dx
  41045d:	and    BYTE PTR [ebx-0x3c48af60],bh
  410463:	hlt    
  410464:	jmp    0x7c8007a1
  410469:	or     DWORD PTR [edx],esp
  41046b:	adc    BYTE PTR [esi-0x5ef63264],bl
  410471:	mov    ecx,0xbc7ce52d
  410476:	mov    dh,BYTE PTR [esi*2+0x7617c36d]
  41047d:	lea    ebp,[ecx-0x3ccd01db]
  410483:	stc    
  410484:	xchg   DWORD PTR [ebx+0x60],edi
  410487:	jmp    0x60c78dee
  41048c:	sub    al,0xf6
  41048e:	ja     0x410497
  410490:	out    dx,al
  410491:	adc    DWORD PTR [ecx],edx
  410493:	mov    eax,0xd8f3670
  410498:	call   0xe318:0x3f35d8c4
  41049f:	outs   dx,DWORD PTR ds:[esi]
  4104a0:	jg     0x410443
  4104a2:	inc    ebp
  4104a3:	imul   eax,esi,0x7493ae6f
  4104a9:	xchg   ebp,ecx
  4104ab:	cmp    al,0xd3
  4104ad:	hlt    
  4104ae:	mov    WORD PTR [ecx+edx*1-0x76],ds
  4104b2:	and    bl,BYTE PTR [ecx]
  4104b4:	retf   
  4104b5:	xor    eax,edx
  4104b7:	xor    BYTE PTR [ebx-0x35a3eb88],bl
  4104bd:	add    ebp,esi
  4104bf:	push   ds
  4104c0:	gs out 0x4b,eax
  4104c3:	dec    ebx
  4104c4:	popf   
  4104c5:	xchg   ebx,eax
  4104c6:	pop    ds
  4104c7:	push   es
  4104c8:	cmp    ebp,DWORD PTR [ecx-0x74376a3b]
  4104ce:	mov    ebx,0x14be1538
  4104d3:	mov    ds:0x16a77249,eax
  4104d8:	data16 or BYTE PTR [edi],bh
  4104db:	inc    esi
  4104dc:	pop    edi
  4104dd:	mov    WORD PTR [ebx-0x19],?
  4104e0:	jne    0x4104b1
  4104e2:	test   eax,0xf0f2c77
  4104e7:	add    al,0x19
  4104e9:	xor    dl,BYTE PTR ds:0x2df05761
  4104ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4104f0:	mov    edi,0x72e8ecd5
  4104f5:	fwait
  4104f6:	call   0xaa10:0x77d76dbe
  4104fd:	mov    al,0x38
  4104ff:	cmp    DWORD PTR [edi],edx
  410501:	adc    bl,BYTE PTR [esi-0xc]
  410504:	int    0xc
  410506:	sbb    bh,BYTE PTR [edx+0x73]
  410509:	retf   
  41050a:	pop    ebp
  41050b:	mov    ah,0x59
  41050d:	push   ebp
  41050e:	push   ebx
  41050f:	call   0xa1a90d60
  410514:	int3   
  410515:	imul   eax,ebp,0x9738a107
  41051b:	rcl    DWORD PTR [edi+0x30ea3a8e],cl
  410521:	push   ebp
  410522:	push   0x8ed4b852
  410527:	push   es
  410528:	dec    edx
  410529:	cmp    DWORD PTR [ebp-0x30],ecx
  41052c:	xchg   ecx,eax
  41052d:	test   edx,0x88497e03
  410533:	mul    BYTE PTR [edx+0x426881c]
  410539:	nop
  41053a:	mov    ah,0xec
  41053c:	mov    bh,0xb4
  41053e:	mov    ds,WORD PTR [edx-0x1c440c73]
  410544:	dec    ecx
  410545:	rcl    BYTE PTR [esi],cl
  410547:	jp     0x410592
  410549:	ror    DWORD PTR [esi+0x16],cl
  41054c:	in     al,dx
  41054d:	mov    edx,0xf8acafb3
  410552:	pop    es
  410553:	inc    edx
  410554:	popf   
  410555:	push   0x53c59952
  41055a:	cmc    
  41055b:	(bad)  
  41055c:	icebp  
  41055d:	pusha  
  41055e:	leave  
  41055f:	mov    esi,0xae573d6c
  410564:	inc    eax
  410565:	nop    DWORD PTR [ebp+ecx*8+0x3f]
  41056a:	scas   eax,DWORD PTR es:[edi]
  41056b:	or     eax,0x2a757375
  410570:	xchg   edi,eax
  410571:	stos   BYTE PTR es:[edi],al
  410572:	jle    0x41052b
  410574:	jmp    0xab6e6738
  410579:	into   
  41057a:	into   
  41057b:	push   0x9ed630cf
  410580:	je     0x41051e
  410582:	dec    esp
  410583:	aas    
  410584:	test   DWORD PTR [esi],esi
  410586:	push   esi
  410587:	sahf   
  410588:	adc    BYTE PTR [ecx+edx*1+0x11],0x28
  41058d:	inc    esp
  41058e:	idiv   DWORD PTR [ebx+0x32]
  410591:	mov    dl,0x3
  410593:	adc    al,BYTE PTR ds:0x9baa99bd
  410599:	mov    bh,0x75
  41059b:	mov    eax,0xc123d5ef
  4105a0:	adc    BYTE PTR [edi+0x3fecfff5],dl
  4105a6:	fwait
  4105a7:	mov    cl,0xc
  4105a9:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  4105ab:	fbld   TBYTE PTR [edi-0x32aa66fe]
  4105b1:	in     eax,0xf7
  4105b3:	shr    DWORD PTR [esi+0x19],0x73
  4105b7:	sbb    eax,0xabd7bee8
  4105bc:	dec    edi
  4105bd:	push   ss
  4105be:	(bad)  [ecx-0x138896d]
  4105c4:	pop    esi
  4105c5:	adc    DWORD PTR [edx+0x2a],esi
  4105c8:	xor    ch,BYTE PTR [eax-0xf50990d]
  4105ce:	xor    DWORD PTR [ebx-0x2e],0x9a40f026
  4105d5:	adc    BYTE PTR [edx+0x75],ah
  4105d8:	ret    
  4105d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4105da:	mov    ch,0xc9
  4105dc:	xchg   edx,eax
  4105dd:	ss and edi,esi
  4105e0:	and    edx,DWORD PTR [ebp+0x2db34d4b]
  4105e6:	sub    al,BYTE PTR [edi-0x52]
  4105e9:	out    dx,eax
  4105ea:	stos   BYTE PTR es:[edi],al
  4105eb:	pop    ds
  4105ec:	sbb    ch,BYTE PTR [ecx]
  4105ee:	gs pop ebp
  4105f0:	mov    ebx,0xab23d32d
  4105f5:	adc    al,0x3a
  4105f7:	in     eax,0x25
  4105f9:	fs xchg edx,eax
  4105fb:	int3   
  4105fc:	retf   0x9915
  4105ff:	push   0xa05c8d0d
  410604:	and    eax,0xfb0c5fc1
  410609:	add    ebx,DWORD PTR [ecx+ebx*1-0x12552fb7]
  410610:	(bad)  
  410611:	mov    cl,BYTE PTR [ebx+0x4d8bd45d]
  410617:	or     al,0x3
  410619:	xor    DWORD PTR [ecx+0x79b577f2],eax
  41061f:	retf   
  410620:	shrd   edx,eax,0x2
  410624:	xor    ecx,ecx
  410626:	shl    esi,0x1e
  410629:	xor    ecx,edi
  41062b:	shr    eax,0x2
  41062e:	or     ecx,edx
  410630:	xor    esi,0x80000000
  410636:	or     esi,eax
  410638:	mov    DWORD PTR [ebp-0x40],ecx
  41063b:	push   edi
  41063c:	mov    DWORD PTR [ebp-0x3c],esi
  41063f:	mov    eax,DWORD PTR [ebp-0x48]
  410642:	mov    ecx,DWORD PTR [ebp-0x44]
  410645:	push   0xae0404d3
  41064a:	push   ecx
  41064b:	push   eax
  41064c:	call   0x4222ab
  410651:	mov    ecx,eax
  410653:	mov    eax,DWORD PTR [ebp-0x50]
  410656:	mov    esi,DWORD PTR [ebp-0x4c]
  410659:	or     ecx,eax
  41065b:	mov    eax,DWORD PTR [ebp-0x40]
  41065e:	or     edx,esi
  410660:	jmp    0x410a14
  410665:	pop    ebx
  410666:	icebp  
  410667:	lds    esp,FWORD PTR [eax+0x3abbbc68]
  41066d:	ror    ecx,0xfe
  410670:	fst    QWORD PTR [edi+0xb]
  410673:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410674:	jecxz  0x410665
  410676:	cmp    al,0xbe
  410678:	mov    esi,0xbebec4e3
  41067d:	out    dx,al
  41067e:	ret    0x926a
  410681:	popa   
  410682:	cmp    edi,edx
  410684:	xor    BYTE PTR [eax+0x73],0x8d
  410688:	aam    0xf9
  41068a:	jle    0x410657
  41068c:	aam    0xad
  41068e:	push   ds
  41068f:	add    DWORD PTR [esi+0x58],esp
  410692:	jge    0x4106a7
  410694:	lahf   
  410695:	jb     0x41068b
  410697:	inc    ebx
  410698:	jbe    0x4106a4
  41069a:	jl     0x410695
  41069c:	mov    al,ds:0x939dc79f
  4106a1:	popa   
  4106a2:	sbb    al,0x5a
  4106a4:	push   edx
  4106a5:	and    esp,DWORD PTR [ebp+0x1]
  4106a8:	mov    dh,0x4a
  4106aa:	fdivr  DWORD PTR [edx]
  4106ac:	rcl    BYTE PTR [eax],0xfc
  4106af:	(bad)
  4106b2:	jcxz   0x4106cd
  4106b5:	add    edx,DWORD PTR [edi]
  4106b7:	arpl   WORD PTR ds:0x2bb1da60,di
  4106bd:	and    esp,DWORD PTR [ecx+0x3d]
  4106c0:	imul   ebp,DWORD PTR [ecx-0x15],0x1ed5eb46
  4106c7:	push   es
  4106c8:	pop    esp
  4106c9:	jo     0x4106cb
  4106cb:	pop    edx
  4106cc:	sub    eax,0xa3a6e171
  4106d1:	es or  ebx,esi
  4106d4:	sbb    DWORD PTR [ecx],esi
  4106d6:	push   ecx
  4106d7:	xlat   BYTE PTR ds:[ebx]
  4106d8:	bound  esp,QWORD PTR [eax+0x4cadbaae]
  4106de:	mov    ah,0x25
  4106e0:	pop    ebx
  4106e1:	lods   al,BYTE PTR ds:[esi]
  4106e2:	pop    eax
  4106e3:	pop    ss
  4106e4:	inc    ebx
  4106e5:	hlt    
  4106e6:	call   0x9cb76c07
  4106eb:	xchg   ebp,eax
  4106ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4106ed:	adc    al,0xd5
  4106ef:	popf   
  4106f0:	ja     0x410704
  4106f2:	out    dx,eax
  4106f3:	and    eax,0x7b5eabbf
  4106f8:	pop    ds
  4106f9:	push   edx
  4106fa:	sbb    ebx,DWORD PTR [eax+esi*4+0x30]
  4106fe:	pop    edx
  4106ff:	fild   DWORD PTR [eax+edx*1-0x8f745a7]
  410706:	mov    eax,ds:0x3323e824
  41070b:	std    
  41070c:	(bad)  
  41070d:	aas    
  41070e:	test   al,0x11
  410710:	out    dx,eax
  410711:	dec    esp
  410712:	add    eax,DWORD PTR [edi-0x1096e40b]
  410718:	call   0xc7fb:0xcf7fb855
  41071f:	clc    
  410720:	jmp    0x41072a
  410722:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410723:	add    al,0x5
  410725:	fdiv   st(2),st
  410727:	and    eax,ebx
  410729:	pop    ss
  41072a:	mov    esp,0x495a57f3
  41072f:	xchg   edi,eax
  410730:	(bad)  
  410731:	jmp    eax
  410733:	hlt    
  410734:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410735:	add    al,0x92
  410737:	fidiv  DWORD PTR [ecx]
  410739:	or     cl,BYTE PTR ds:0x556b49b7
  41073f:	aam    0x8d
  410741:	xor    al,0x69
  410743:	fldcw  WORD PTR [ebx-0x3a]
  410746:	mov    ch,0xb7
  410748:	or     dl,ch
  41074a:	cmc    
  41074b:	mov    bl,0x7b
  41074d:	jl     0x410721
  41074f:	cmp    edx,DWORD PTR ds:0x4ee507cf
  410755:	jo     0x410737
  410757:	mov    ds:0x790f728b,eax
  41075c:	inc    edx
  41075d:	jle    0x410798
  41075f:	mov    esp,0x7114519
  410764:	(bad)  
  410765:	or     BYTE PTR [edi],cl
  410767:	ret    
  410768:	xchg   ecx,eax
  410769:	xchg   ebx,eax
  41076a:	fldln2 
  41076c:	pause  
  41076e:	jno    0x41076b
  410770:	dec    esp
  410771:	sbb    eax,0xf82fba8e
  410776:	fmul   st(2),st
  410778:	enter  0xe5d6,0x6d
  41077c:	mov    ebx,0xf8a206ec
  410781:	dec    esi
  410782:	inc    ebp
  410783:	xchg   ecx,edi
  410785:	fiadd  WORD PTR [ebp-0x44]
  410788:	pop    DWORD PTR [edi]
  41078a:	xor    al,0x98
  41078c:	sbb    al,0xe4
  41078e:	shl    ecx,0x14
  410791:	xor    eax,0xdad76b20
  410796:	mov    esi,0x44a3c9c7
  41079b:	int3   
  41079c:	lods   al,BYTE PTR ds:[esi]
  41079d:	pop    esp
  41079e:	imul   esi,DWORD PTR [ebp-0x4e],0x0
  4107a2:	lea    ebx,[ebx-0x5460e055]
  4107a8:	pop    esp
  4107a9:	sahf   
  4107aa:	sti    
  4107ab:	or     al,0x19
  4107ad:	ss repnz loope 0x41076f
  4107b1:	out    0xc6,al
  4107b3:	xor    al,0x11
  4107b5:	push   edx
  4107b6:	mov    ebp,0xce3e655a
  4107bb:	pop    edi
  4107bc:	adc    al,0x54
  4107be:	cmc    
  4107bf:	pop    ebp
  4107c0:	mov    bh,0x62
  4107c2:	or     eax,0x507c5ee1
  4107c7:	in     eax,0x45
  4107c9:	ficomp DWORD PTR [edi]
  4107cb:	pop    ebp
  4107cc:	jbe    0x410836
  4107ce:	lock imul esi,DWORD PTR [edx+0x228606f6],0x58e369ff
  4107d9:	ss jl  0x41075f
  4107dc:	outs   dx,DWORD PTR ds:[esi]
  4107dd:	cmp    al,0xd9
  4107df:	xchg   esi,edi
  4107e1:	das    
  4107e2:	std    
  4107e3:	pop    eax
  4107e4:	aad    0x30
  4107e6:	xchg   esp,eax
  4107e7:	out    dx,eax
  4107e8:	xor    al,0x90
  4107ea:	pop    edi
  4107eb:	xor    bl,BYTE PTR ds:0xbde8fee0
  4107f1:	push   0x7a8e7d53
  4107f6:	jnp    0x4107bc
  4107f8:	cmp    DWORD PTR [esi+esi*4-0x2c],eax
  4107fc:	pop    edi
  4107fd:	sub    edi,ebp
  4107ff:	or     eax,0x1feb1ffb
  410804:	pop    ecx
  410805:	pop    edi
  410806:	adc    ah,BYTE PTR [ecx]
  410808:	adc    DWORD PTR [edi],ebp
  41080a:	lods   eax,DWORD PTR ds:[esi]
  41080b:	mov    cl,0x5
  41080d:	mov    BYTE PTR [edi],cl
  41080f:	cmp    ecx,DWORD PTR [esi]
  410811:	enter  0x7a1f,0x48
  410815:	loope  0x41079c
  410817:	or     DWORD PTR [ecx],ebx
  410819:	test   al,0xe6
  41081b:	and    dl,0x95
  41081e:	add    al,0xb0
  410820:	loopne 0x41086e
  410822:	aad    0xdb
  410824:	lahf   
  410825:	adc    al,0xf5
  410827:	retf   
  410828:	outs   dx,DWORD PTR ds:[esi]
  410829:	dec    edx
  41082a:	loope  0x410854
  41082c:	mov    esp,0xb48e067c
  410831:	(bad)
  410835:	(bad)  
  410836:	push   ebp
  410837:	popf   
  410838:	ja     0x4108ac
  41083a:	mov    ebx,0x8f1383e3
  41083f:	and    DWORD PTR [eax-0x45],ecx
  410842:	arpl   di,bx
  410844:	shr    DWORD PTR [edi-0x7c],cl
  410847:	pop    ss
  410848:	ins    BYTE PTR es:[edi],dx
  410849:	push   es
  41084a:	push   0x7c171fb3
  41084f:	pop    eax
  410850:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410851:	aaa    
  410852:	push   ebp
  410853:	(bad)  
  410854:	jnp    0x4108bb
  410856:	scas   al,BYTE PTR es:[edi]
  410857:	test   eax,0x4b079374
  41085c:	push   edi
  41085d:	mov    eax,ds:0xa4af7f54
  410862:	add    ecx,DWORD PTR [edi+0x20853f5f]
  410868:	pop    esi
  410869:	dec    ebx
  41086a:	add    DWORD PTR [edx+0x13],eax
  41086d:	adc    bh,al
  41086f:	ja     0x410800
  410871:	sbb    edi,DWORD PTR ss:[ebx]
  410874:	ror    BYTE PTR [ebx],cl
  410876:	mov    bh,0xb6
  410878:	push   0x60
  41087a:	stos   DWORD PTR es:[edi],eax
  41087b:	idiv   DWORD PTR [edx-0x8]
  41087e:	in     eax,dx
  41087f:	inc    ebx
  410880:	or     BYTE PTR [ebx-0x2a],ah
  410883:	iret   
  410884:	jle    0x4108a6
  410886:	test   DWORD PTR [ecx+0x4856dd5e],edi
  41088c:	and    esi,esi
  41088e:	rol    DWORD PTR [ebx+0x91d2a3e],1
  410894:	adc    eax,0xf2e68258
  410899:	sub    BYTE PTR ds:0x715029b2,0x39
  4108a0:	sbb    al,0x69
  4108a2:	test   DWORD PTR [esi+edi*4+0x4c5db2a2],esp
  4108a9:	(bad)  
  4108aa:	fimul  DWORD PTR [esi+0x5868abd]
  4108b0:	sbb    DWORD PTR [edi-0x63af6446],esi
  4108b6:	sbb    eax,0xde4b7bfb
  4108bb:	mov    BYTE PTR [ebx],ch
  4108bd:	push   ebp
  4108be:	jle    0x410902
  4108c0:	jbe    0x41088f
  4108c2:	cmp    eax,0xbfa043b5
  4108c7:	(bad)  
  4108c8:	dec    ebp
  4108c9:	push   ebx
  4108ca:	jnp    0x4108b5
  4108cc:	ret    
  4108cd:	das    
  4108ce:	mov    BYTE PTR [edx-0x50],al
  4108d1:	jae    0x410908
  4108d3:	jno    0x410856
  4108d5:	or     bl,BYTE PTR [esi]
  4108d7:	gs int3 
  4108d9:	dec    ecx
  4108da:	cmp    eax,DWORD PTR [edi-0x6b]
  4108dd:	mov    al,0x6
  4108df:	test   DWORD PTR [edi],edi
  4108e1:	or     al,0xf0
  4108e3:	mov    bh,0xda
  4108e5:	in     eax,dx
  4108e6:	sbb    dl,dl
  4108e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4108e9:	add    ch,BYTE PTR [esi]
  4108eb:	bnd jg 0x4108a6
  4108ee:	mov    ecx,0x70e8a38b
  4108f3:	adc    edx,esp
  4108f5:	inc    ebp
  4108f6:	cwde   
  4108f7:	push   edi
  4108f8:	popa   
  4108f9:	push   eax
  4108fa:	xchg   edi,eax
  4108fb:	pop    ebx
  4108fc:	ror    dl,cl
  4108fe:	fcmovb st,st(4)
  410900:	and    dl,BYTE PTR [ebp-0x5a]
  410903:	(bad)  [edi-0x35bed576]
  410909:	jmp    ebx
  41090b:	(bad)  
  41090d:	push   0xffffffce
  41090f:	jae    0x410910
  410911:	or     eax,DWORD PTR [ebp-0x6e133b56]
  410917:	fild   QWORD PTR [ebx]
  410919:	adc    DWORD PTR ds:0xe30b9170,ecx
  41091f:	lock imul eax,eax,0xe3d7489b
  410926:	popf   
  410927:	sub    ecx,esp
  410929:	xor    eax,0xc72dd068
  41092e:	int3   
  41092f:	inc    edi
  410930:	push   edx
  410931:	mul    DWORD PTR [edi-0x331a8da5]
  410937:	fdivp  st(1),st
  410939:	xchg   BYTE PTR [ebx+0xc],bh
  41093c:	mov    ebx,0xe3a1580e
  410941:	sar    DWORD PTR [eax],cl
  410943:	bound  edi,QWORD PTR [ebp-0x51]
  410946:	cmp    DWORD PTR [ecx],ebp
  410948:	xor    esi,DWORD PTR [ebx]
  41094a:	data16 adc al,0x5b
  41094d:	push   esp
  41094e:	bsf    edi,DWORD PTR [edx-0x122b8265]
  410955:	das    
  410956:	push   0x1c996f1d
  41095b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41095c:	xchg   ebp,eax
  41095d:	dec    ecx
  41095e:	mov    edi,0xeef6bbc6
  410963:	aaa    
  410964:	or     al,BYTE PTR [esi-0x63dd9148]
  41096a:	arpl   WORD PTR ds:[ecx+0x519b8e24],ax
  410971:	(bad)  
  410972:	lock mov bl,0x2e
  410975:	sbb    esi,esi
  410977:	or     ecx,DWORD PTR [edx]
  410979:	lea    esi,[ebx+0x17]
  41097c:	icebp  
  41097d:	xchg   BYTE PTR [edi],al
  41097f:	add    BYTE PTR [esi-0x48],bh
  410982:	mov    BYTE PTR es:[ebx+0x33],dl
  410986:	inc    esi
  410987:	sbb    eax,0xc7accfea
  41098c:	jnp    0x410959
  41098e:	jmp    0x4109cc
  410990:	popf   
  410991:	and    eax,0xa04c938b
  410996:	int    0x93
  410998:	xchg   esi,eax
  410999:	adc    ah,BYTE PTR [eax]
  41099b:	mov    fs,WORD PTR [ecx]
  41099d:	push   edx
  41099e:	jno    0x41095f
  4109a0:	in     eax,0x71
  4109a2:	loop   0x410975
  4109a4:	stc    
  4109a5:	dec    eax
  4109a6:	cs push ds
  4109a8:	shr    bh,cl
  4109aa:	xor    esi,ebp
  4109ac:	dec    edx
  4109ad:	or     al,0xdc
  4109af:	mov    cl,0x56
  4109b1:	fistp  QWORD PTR [edx]
  4109b3:	fisttp WORD PTR [edi]
  4109b5:	mov    edi,DWORD PTR [ebx]
  4109b7:	retf   0xa10c
  4109ba:	in     eax,dx
  4109bb:	cmp    ecx,DWORD PTR [esi]
  4109bd:	adc    al,0xe6
  4109bf:	jnp    0x4109fb
  4109c1:	idiv   DWORD PTR [edx]
  4109c3:	add    ah,BYTE PTR [edi+0x6154b5f8]
  4109c9:	ret    0xceda
  4109cc:	and    ah,BYTE PTR [eax]
  4109ce:	add    DWORD PTR [bx+si+0x4e],0xb754639e
  4109d6:	pop    ebx
  4109d7:	test   al,0x54
  4109d9:	xchg   ebx,eax
  4109da:	test   eax,0xa728f9fc
  4109df:	mov    cl,0xee
  4109e1:	cmp    DWORD PTR [ebx+edi*4-0x5a],esp
  4109e5:	jmp    0x205fb5a
  4109ea:	jns    0x410a02
  4109ec:	dec    ecx
  4109ed:	inc    ebp
  4109ee:	xor    DWORD PTR [edi-0x232082d2],edi
  4109f4:	adc    ch,BYTE PTR [ebp+ebp*2+0x986e972]
  4109fb:	mov    cl,0x33
  4109fd:	push   ecx
  4109fe:	adc    dl,BYTE PTR ds:0x44dd89f0
  410a04:	fnsave [ebx]
  410a06:	clc    
  410a07:	jl     0x410a12
  410a09:	xchg   esp,eax
  410a0a:	mov    dl,0x69
  410a0c:	jl     0x4109df
  410a0e:	aad    0x42
  410a10:	call   0xc475:0x8b36b5e4
  410a17:	add    ecx,eax
  410a19:	mov    eax,DWORD PTR [ebp-0x58]
  410a1c:	adc    edx,esi
  410a1e:	mov    esi,DWORD PTR [ebp-0x54]
  410a21:	add    ecx,eax
  410a23:	mov    eax,DWORD PTR [ebp+0x8]
  410a26:	adc    edx,esi
  410a28:	add    ecx,0xffff55a8
  410a2e:	pop    edi
  410a2f:	adc    edx,0xffff64cd
  410a35:	pop    esi
  410a36:	mov    DWORD PTR [eax],ecx
  410a38:	jmp    0x410dec
  410a3d:	pop    esi
  410a3e:	sub    al,0xdf
  410a40:	shr    BYTE PTR [ebx+ebx*1+0x359fbc6e],1
  410a47:	mov    esp,0x460319a4
  410a4c:	xchg   edx,eax
  410a4d:	push   ss
  410a4e:	inc    edx
  410a4f:	mov    esi,0xbec4e3be
  410a54:	mov    esi,0xdaeae4e8
  410a59:	cmp    ah,BYTE PTR [eax-0x3ba65438]
  410a5f:	inc    edx
  410a60:	sbb    ebp,eax
  410a62:	in     al,0x25
  410a64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a65:	mov    ah,0x79
  410a67:	jmp    0x410ac3
  410a69:	scas   eax,DWORD PTR es:[edi]
  410a6a:	enter  0x447d,0xc2
  410a6e:	and    ebx,eax
  410a70:	jno    0x410a2d
  410a72:	loop   0x410a33
  410a74:	js     0x4109ff
  410a76:	xchg   edx,eax
  410a77:	adc    al,0xc8
  410a79:	dec    ecx
  410a7a:	jg     0x410a2a
  410a7c:	out    dx,al
  410a7d:	int    0x6e
  410a7f:	inc    ebp
  410a80:	popa   
  410a81:	push   cs
  410a82:	fisub  DWORD PTR [esi]
  410a84:	push   esp
  410a85:	sub    eax,0xa0a9e61e
  410a8a:	or     BYTE PTR [edx],al
  410a8c:	push   0x46f3c6ca
  410a91:	add    edi,DWORD PTR [ebx]
  410a93:	fbstp  TBYTE PTR [ebx-0x2f]
  410a96:	(bad)  
  410a97:	jb     0x410b15
  410a99:	inc    esp
  410a9a:	mov    bl,0x62
  410a9c:	adc    al,0xad
  410a9e:	addr16 leave 
  410aa0:	cmp    eax,DWORD PTR [edx+0x427ce9be]
  410aa6:	mov    BYTE PTR [eiz*2-0xb006b2c],cl
  410aad:	pop    esi
  410aae:	sub    BYTE PTR ds:[eax+eiz*2],cl
  410ab2:	ins    BYTE PTR es:[edi],dx
  410ab3:	push   edi
  410ab4:	fdiv   QWORD PTR [edx-0x77afdbe6]
  410abb:	mov    cl,0x91
  410abd:	mov    dl,0x82
  410abf:	jbe    0x410a7e
  410ac1:	mov    WORD PTR [edi-0xba7b878],cs
  410ac7:	mov    bl,0x18
  410ac9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410aca:	outs   dx,BYTE PTR ds:[esi]
  410acb:	loopne 0x410a7e
  410acd:	sbb    eax,0x97ba260e
  410ad2:	sbb    al,0x7b
  410ad4:	nop
  410ad5:	and    cl,dh
  410ad7:	test   eax,0x4f85bcd1
  410adc:	out    dx,eax
  410add:	mov    esp,0xe41c9298
  410ae2:	cmp    ebx,DWORD PTR [edx+0x40934e5b]
  410ae8:	clc    
  410ae9:	and    al,0x5d
  410aeb:	push   edi
  410aec:	int3   
  410aed:	jnp    0x410aa3
  410aef:	dec    edx
  410af0:	dec    esp
  410af1:	stc    
  410af2:	sub    BYTE PTR [edi+0x386f61a5],dh
  410af8:	stos   BYTE PTR es:[edi],al
  410af9:	mov    bh,0x70
  410afb:	add    al,cl
  410afd:	mov    bh,0x7e
  410aff:	cmp    DWORD PTR [edi+0xfeded2c],ebp
  410b05:	mov    al,BYTE PTR [edi]
  410b07:	gs mov edi,0x9532f343
  410b0d:	sub    BYTE PTR [ebp+0x756b76e0],bh
  410b13:	hlt    
  410b14:	pop    ss
  410b15:	cmp    BYTE PTR [esp+ebp*2+0x443d952a],bl
  410b1c:	je     0x410ae6
  410b1e:	push   edx
  410b1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b20:	stos   BYTE PTR es:[edi],al
  410b21:	sub    ebx,DWORD PTR [eax+0x160cb46b]
  410b27:	push   esp
  410b28:	clc    
  410b29:	mov    edx,0xb2fd31a9
  410b2e:	aas    
  410b2f:	push   edi
  410b30:	frstor [eax+0x1c]
  410b33:	les    eax,FWORD PTR [edx+edx*4-0x48]
  410b37:	aas    
  410b38:	popf   
  410b39:	fst    QWORD PTR [ebp+0xa]
  410b3c:	ficom  DWORD PTR [ebp-0x71]
  410b3f:	inc    esi
  410b40:	outs   dx,BYTE PTR ds:[esi]
  410b41:	push   cs
  410b42:	in     eax,0x5
  410b44:	inc    ecx
  410b45:	push   ecx
  410b46:	icebp  
  410b47:	aam    0x8a
  410b49:	sub    eax,DWORD PTR [ecx+0x25962bfe]
  410b4f:	mov    ah,0xf7
  410b51:	xor    esp,esi
  410b53:	mov    edi,0x7ce3f26d
  410b58:	and    eax,0xed96f08e
  410b5d:	inc    esp
  410b5e:	xchg   edx,eax
  410b5f:	int3   
  410b60:	in     al,dx
  410b61:	push   cs
  410b62:	mov    ch,0xf3
  410b64:	push   ecx
  410b65:	inc    ebx
  410b66:	dec    ecx
  410b67:	sbb    eax,0x5dfe9e43
  410b6c:	xor    dl,BYTE PTR [edx+ebx*4]
  410b6f:	or     BYTE PTR [eax+0x4e3aabe],bl
  410b75:	test   DWORD PTR [eax],0x588b7b
  410b7b:	popf   
  410b7c:	or     BYTE PTR [eax+eax*8],0xd2
  410b80:	sub    al,0x72
  410b82:	pushf  
  410b83:	pop    ebp
  410b84:	scas   eax,DWORD PTR es:[edi]
  410b85:	lods   al,BYTE PTR ds:[esi]
  410b86:	mov    dh,0x5c
  410b88:	xchg   esp,eax
  410b89:	push   ebx
  410b8a:	test   al,0x92
  410b8c:	lds    esi,FWORD PTR [esi]
  410b8e:	mov    edi,0x31afd4a
  410b93:	and    ah,bl
  410b95:	outs   dx,DWORD PTR ds:[esi]
  410b96:	out    0xa3,al
  410b98:	push   ss
  410b99:	fldenv [ebp+0x35]
  410b9c:	xor    bh,0xda
  410b9f:	rcl    BYTE PTR [edx+eax*8-0x27],1
  410ba3:	icebp  
  410ba4:	ins    BYTE PTR es:[edi],dx
  410ba5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ba6:	add    BYTE PTR [ebx-0x6c],al
  410ba9:	loop   0x410bee
  410bab:	or     al,0xfd
  410bad:	test   BYTE PTR [ecx-0x66],ch
  410bb0:	cwde   
  410bb1:	add    cx,bp
  410bb4:	mov    dl,0xca
  410bb6:	jp     0x410b91
  410bb8:	fcomp  st(0)
  410bba:	xor    DWORD PTR [esi-0x5b7fe8da],eax
  410bc0:	inc    eax
  410bc1:	cmp    DWORD PTR [ebp-0x6e],eax
  410bc4:	and    ch,bh
  410bc6:	icebp  
  410bc7:	xchg   ecx,eax
  410bc8:	dec    esi
  410bc9:	fidivr WORD PTR [esp+ebp*2-0x5dd1fc57]
  410bd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410bd1:	add    DWORD PTR [eax-0x67],eax
  410bd4:	aaa    
  410bd5:	add    DWORD PTR ds:0xaf235921,esp
  410bdb:	sbb    BYTE PTR [edi-0x570ec549],dh
  410be1:	icebp  
  410be2:	cmp    ch,BYTE PTR [esi]
  410be4:	and    eax,0xc8a73bca
  410be9:	add    DWORD PTR [ecx+0x7e81f472],esp
  410bef:	sahf   
  410bf0:	call   0xab9a:0xf3f87c7a
  410bf7:	and    al,0x99
  410bf9:	lods   eax,DWORD PTR ds:[esi]
  410bfa:	neg    ebx
  410bfc:	jae    0x410c0f
  410bfe:	retf   0xef46
  410c01:	or     al,0x91
  410c03:	jns    0x410c59
  410c05:	imul   ebp,DWORD PTR [edi-0x60],0x39
  410c09:	cmp    al,0xf0
  410c0b:	push   ebx
  410c0c:	call   FWORD PTR [esi+0x3decb918]
  410c12:	int    0xea
  410c14:	mov    WORD PTR [edi+0x4b],es
  410c17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c19:	inc    ebx
  410c1a:	outs   dx,BYTE PTR ds:[esi]
  410c1b:	retf   0x85ea
  410c1e:	test   al,0xc3
  410c20:	sbb    al,0xea
  410c22:	jae    0x410ba4
  410c24:	or     BYTE PTR [edi-0x50],ch
  410c27:	push   edx
  410c28:	jmp    0xf441:0xdd8f94c0
  410c2f:	inc    ebx
  410c30:	xchg   edx,eax
  410c31:	inc    edi
  410c32:	inc    eax
  410c33:	jns    0x410c4b
  410c35:	fs dec edx
  410c37:	lea    ebx,[esi]
  410c39:	out    0x2b,al
  410c3b:	push   ecx
  410c3c:	jnp    0x410c24
  410c3e:	ins    DWORD PTR es:[edi],dx
  410c3f:	rol    BYTE PTR [edx],0x54
  410c42:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  410c44:	or     ecx,DWORD PTR [edx-0x5fd240a3]
  410c4a:	jb     0x410cb0
  410c4c:	push   ebx
  410c4d:	scas   al,BYTE PTR es:[edi]
  410c4e:	xor    BYTE PTR [esp+ebp*8-0xe88df0],dl
  410c55:	cmp    DWORD PTR [edi-0x1adb8573],0xe2a860f
  410c5f:	leave  
  410c60:	pop    ecx
  410c61:	outs   dx,DWORD PTR ds:[esi]
  410c62:	js     0x410bf5
  410c64:	pop    ss
  410c65:	sbb    DWORD PTR [ecx+edi*8+0x3e],0x1
  410c6a:	popf   
  410c6b:	push   ecx
  410c6c:	inc    DWORD PTR [edi-0x6024fabd]
  410c72:	xlat   BYTE PTR ds:[ebx]
  410c73:	ins    BYTE PTR es:[edi],dx
  410c74:	(bad)  
  410c75:	call   DWORD PTR [edi]
  410c77:	mov    esp,0x594b23b6
  410c7c:	or     BYTE PTR [ebp-0x5e6f248],cl
  410c82:	jl     0x410c47
  410c84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c85:	pop    ds
  410c86:	mov    ebp,0x5ba59e1c
  410c8b:	fsub   DWORD PTR [esi]
  410c8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c8e:	and    esp,DWORD PTR [ecx-0x21]
  410c91:	(bad)  
  410c92:	jae    0x410c79
  410c94:	dec    edx
  410c95:	fst    st(7)
  410c97:	sti    
  410c98:	pop    ecx
  410c99:	jo     0x410cec
  410c9b:	test   bl,bh
  410c9d:	cld    
  410c9e:	out    dx,eax
  410c9f:	lea    ebx,[ecx-0x1b2d9e3b]
  410ca5:	and    esi,DWORD PTR [ebp+0x42f15e44]
  410cab:	adc    edx,DWORD PTR [edi+0x5e]
  410cae:	cdq    
  410caf:	mov    eax,0xccd6c490
  410cb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410cb5:	and    eax,0xb3269502
  410cba:	(bad)  
  410cbb:	pusha  
  410cbc:	loop   0x410cb3
  410cbe:	sbb    edx,ebp
  410cc0:	xchg   ebx,eax
  410cc1:	xchg   BYTE PTR [ebp+0x64bc46ce],ch
  410cc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410cc8:	out    0x3a,eax
  410cca:	loop   0x410c91
  410ccc:	xchg   DWORD PTR [ebx+0x684eae24],esi
  410cd2:	dec    ecx
  410cd3:	sub    esp,DWORD PTR [ecx]
  410cd5:	mov    ebp,0x52878cae
  410cda:	jecxz  0x410cb6
  410cdc:	push   edi
  410cdd:	repz mov ds:0x47e8f413,al
  410ce3:	jecxz  0x410ce0
  410ce5:	cmc    
  410ce6:	test   al,0xf8
  410ce8:	mov    edi,0xde3649c0
  410ced:	outs   dx,DWORD PTR ds:[esi]
  410cee:	jmp    0x410c79
  410cf0:	(bad)  [ecx-0x18]
  410cf3:	loop   0x410c93
  410cf5:	mov    ds:0x97120ff2,eax
  410cfa:	call   0x1edebd6c
  410cff:	cld    
  410d00:	or     eax,0x21593a40
  410d05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d06:	shl    ebp,1
  410d08:	inc    edx
  410d09:	and    al,0x85
  410d0b:	push   ecx
  410d0c:	push   es
  410d0d:	bound  esp,QWORD PTR [edi]
  410d0f:	xor    al,0xce
  410d11:	cmp    ebx,DWORD PTR [ebx+0x148e5727]
  410d17:	push   ebx
  410d18:	jle    0x410d7e
  410d1a:	rcr    DWORD PTR [ecx],1
  410d1c:	push   ebp
  410d1d:	xchg   bp,ax
  410d1f:	(bad)  
  410d20:	fld    DWORD PTR [edi+eax*1]
  410d23:	inc    edi
  410d24:	sbb    eax,DWORD PTR [esi+edx*8+0x30]
  410d28:	fisubr WORD PTR [ecx+0x3c3c43cc]
  410d2e:	or     BYTE PTR [edx+0x7c],dl
  410d31:	dec    edi
  410d32:	xchg   BYTE PTR [esi],cl
  410d34:	cs lock add ch,ah
  410d38:	(bad)  
  410d39:	sar    dh,1
  410d3b:	call   0xd0708d9f
  410d40:	add    bl,BYTE PTR [ebx]
  410d42:	lods   eax,DWORD PTR ds:[esi]
  410d43:	addps  xmm5,XMMWORD PTR [eax+0x2b]
  410d47:	xchg   edi,eax
  410d48:	cmp    DWORD PTR fs:[esi-0x5e6cb398],edi
  410d4f:	test   eax,0xb3610be
  410d54:	adc    al,0x61
  410d56:	(bad)  
  410d57:	pop    esi
  410d58:	mov    bh,0x9b
  410d5a:	es in  eax,dx
  410d5c:	lahf   
  410d5d:	xor    eax,DWORD PTR [ebp-0x2fa53254]
  410d63:	neg    dl
  410d65:	sub    BYTE PTR [ebx],al
  410d67:	adc    DWORD PTR [eax-0x69],edx
  410d6a:	ret    
  410d6b:	mov    dh,0x88
  410d6d:	inc    ebp
  410d6e:	add    ebx,0x2b78c188
  410d74:	mov    BYTE PTR [ebp-0x19],dh
  410d77:	nop
  410d78:	test   eax,0xe4aee112
  410d7d:	(bad)  
  410d7e:	jle    0x410df9
  410d80:	call   0xae443b69
  410d85:	pop    ss
  410d86:	aam    0x50
  410d88:	sahf   
  410d89:	xor    bl,ah
  410d8b:	dec    eax
  410d8c:	add    BYTE PTR [ebx+0x69065fdb],0x5c
  410d93:	pop    ds
  410d94:	cmovns eax,DWORD PTR [esi-0xfe278c1]
  410d9b:	or     BYTE PTR [ebx],0x46
  410d9e:	cld    
  410d9f:	call   0x820e:0x6b747ef7
  410da6:	not    esp
  410da8:	mov    esp,0x2a1a23c7
  410dad:	call   0x6e29f336
  410db2:	inc    esi
  410db3:	jmp    0x8d71:0x48cb39c5
  410dba:	ins    BYTE PTR es:[edi],dx
  410dbb:	sti    
  410dbc:	inc    eax
  410dbd:	pushf  
  410dbe:	(bad)  
  410dbf:	iret   
  410dc0:	adc    ch,BYTE PTR [edx]
  410dc2:	or     al,0xd7
  410dc4:	mov    dh,0xd3
  410dc6:	pop    ds
  410dc7:	mov    dl,0x11
  410dc9:	cs pop esi
  410dcb:	ins    DWORD PTR es:[edi],dx
  410dcc:	mov    bl,0x68
  410dce:	fisub  WORD PTR [ebx+esi*2+0x44]
  410dd2:	sti    
  410dd3:	adc    eax,0x2166560d
  410dd8:	stos   BYTE PTR es:[edi],al
  410dd9:	mov    ch,0xce
  410ddb:	add    al,0x9c
  410ddd:	mov    ecx,0xebd45daf
  410de2:	push   cs
  410de3:	push   esi
  410de4:	mov    ecx,0x7b8e214e
  410de9:	jno    0x410e05
  410deb:	ja     0x410d76
  410ded:	push   eax
  410dee:	add    al,0x5b
  410df0:	leave  
  410df1:	ret    0x8
  410df4:	push   ebp
  410df5:	mov    ebp,esp
  410df7:	sub    esp,0x3c
  410dfa:	mov    DWORD PTR [ebp-0x20],0x3510
  410e01:	mov    DWORD PTR [ebp-0x1c],0x2104
  410e08:	mov    DWORD PTR [ebp-0x18],0x5d15
  410e0f:	mov    DWORD PTR [ebp-0x14],0x30cd
  410e16:	mov    DWORD PTR [ebp-0x10],0x1709
  410e1d:	mov    DWORD PTR [ebp-0xc],0x260b
  410e24:	jmp    0x4110ab
  410e29:	jo     0x410db5
  410e2b:	fldl2e 
  410e2d:	cmp    al,0xb9
  410e2f:	jo     0x410dcd
  410e31:	out    0x46,eax
  410e33:	mov    ah,BYTE PTR [eax+ebx*1+0x3bd15a85]
  410e3a:	dec    edx
  410e3b:	mov    esi,0xbec289be
  410e40:	mov    esi,0xd93bd8ed
  410e45:	shr    BYTE PTR [ecx+0x4a077f1e],1
  410e4b:	cdq    
  410e4c:	fdiv   st,st(4)
  410e4e:	dec    ecx
  410e4f:	adc    eax,0x64dbd3f7
  410e54:	sbb    al,0x80
  410e56:	je     0x410dea
  410e58:	hlt    
  410e59:	out    0x7c,eax
  410e5b:	lock cld 
  410e5d:	pop    ecx
  410e5e:	div    BYTE PTR [ecx+0x205e6c0b]
  410e64:	mov    ecx,0x35eb0f0e
  410e69:	mov    bl,0xa6
  410e6b:	and    eax,0x229e7b4f
  410e70:	repnz (bad) 
  410e72:	mov    bh,0x67
  410e74:	mov    bh,0x4e
  410e76:	mov    esp,0x9a1a585f
  410e7b:	xor    DWORD PTR [esi],0x898c2325
  410e81:	gs fxch st(5)
  410e84:	or     ebp,DWORD PTR [edx-0x8]
  410e87:	adc    BYTE PTR [edx+edx*4-0x2f],0x2
  410e8c:	dec    esi
  410e8d:	cmp    BYTE PTR [ecx+0x0],dh
  410e90:	js     0x410e33
  410e92:	add    ebp,ecx
  410e94:	mov    ecx,0x5a477b73
  410e99:	cmp    al,0x32
  410e9b:	mov    BYTE PTR [ebx+0x5597d630],cl
  410ea1:	mov    ah,0x3c
  410ea3:	or     dl,BYTE PTR [ebx-0x5a]
  410ea6:	aas    
  410ea7:	mov    edx,0xcead3d51
  410eac:	daa    
  410ead:	fild   QWORD PTR [esi]
  410eaf:	arpl   WORD PTR [ebx+0x4da417e5],bx
  410eb5:	xor    eax,0x18f78e35
  410eba:	mov    ebp,0x9e493af2
  410ebf:	jmp    FWORD PTR [eax+0x5d55fbb8]
  410ec5:	jns    0x410e57
  410ec7:	stos   DWORD PTR es:[edi],eax
  410ec8:	lods   al,BYTE PTR ds:[esi]
  410ec9:	push   0xffffffe4
  410ecb:	imul   esi,DWORD PTR [edi],0x15
  410ece:	xchg   BYTE PTR ds:0x9d348fb6,ah
  410ed4:	push   edi
  410ed5:	mov    edx,0x3b295192
  410eda:	jno    0x410ead
  410edc:	in     al,0x9b
  410ede:	inc    edi
  410edf:	mov    ah,0x4b
  410ee1:	sub    BYTE PTR [esi+0x21527fbf],ch
  410ee7:	mov    eax,0xb6be6292
  410eec:	repz jno 0x410f58
  410eef:	or     BYTE PTR [esi],ah
  410ef1:	outs   dx,BYTE PTR ds:[esi]
  410ef2:	mov    cs,WORD PTR [edi+eiz*8]
  410ef5:	stos   DWORD PTR es:[edi],eax
  410ef6:	or     eax,0xf50ec573
  410efb:	sub    eax,0x4dceb11e
  410f00:	mov    edx,DWORD PTR [edx+0x28d85dd8]
  410f06:	jle    0x410f5a
  410f08:	retf   
  410f09:	sbb    DWORD PTR [edx-0x51],esi
  410f0c:	xor    al,0x39
  410f0e:	inc    esi
  410f0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f10:	into   
  410f11:	rcl    cl,1
  410f13:	out    dx,al
  410f14:	call   0xf9569951
  410f19:	sbb    eax,0x6cd81336
  410f1e:	into   
  410f1f:	adc    BYTE PTR [edi+0x2e],0xbf
  410f23:	xor    DWORD PTR [ebp+0xa],esp
  410f26:	push   ecx
  410f27:	jns    0x410f32
  410f29:	fwait
  410f2a:	aad    0x6
  410f2c:	sub    eax,esp
  410f2e:	xchg   ebp,eax
  410f2f:	pop    ecx
  410f30:	inc    ebp
  410f31:	(bad)  [ecx]
  410f33:	adc    BYTE PTR [eax-0x36],bl
  410f36:	ret    
  410f37:	das    
  410f38:	sbb    al,0x69
  410f3a:	jge    0x410ee2
  410f3c:	lods   al,BYTE PTR ds:[esi]
  410f3d:	pop    ss
  410f3e:	fild   WORD PTR [edi-0x701464a1]
  410f44:	mov    bl,bh
  410f46:	jle    0x410f3b
  410f48:	icebp  
  410f49:	sbb    DWORD PTR [ebx],esp
  410f4b:	push   ds
  410f4c:	mov    ebx,0xf5bff4ba
  410f51:	adc    al,0x38
  410f53:	pop    ecx
  410f54:	dec    esi
  410f55:	and    BYTE PTR [edx+0x41],dl
  410f58:	rcr    BYTE PTR [ebx],cl
  410f5a:	je     0x410f25
  410f5c:	rcr    DWORD PTR ds:0xa669afea,cl
  410f62:	cdq    
  410f63:	xor    BYTE PTR [edx],ch
  410f65:	dec    esi
  410f66:	test   BYTE PTR [eax+edi*8+0x3167942],bl
  410f6d:	mov    al,ds:0x5f95e432
  410f72:	push   ds
  410f73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f74:	outs   dx,DWORD PTR ds:[esi]
  410f75:	cs icebp 
  410f77:	into   
  410f78:	sar    ebp,0x93
  410f7b:	jnp    0x410f59
  410f7d:	fist   DWORD PTR [ebx+ebx*4+0x3a6cc829]
  410f84:	or     bh,BYTE PTR [edi+0x3c]
  410f87:	ret    0x5301
  410f8a:	mov    edx,0xf8905f78
  410f8f:	je     0x410fea
  410f91:	outs   dx,BYTE PTR ds:[esi]
  410f92:	xchg   esp,eax
  410f93:	hlt    
  410f94:	int    0x46
  410f96:	in     eax,0x9a
  410f98:	ret    
  410f99:	push   0x150101f9
  410f9e:	jmp    0x66c7a5a6
  410fa3:	cmp    esi,edx
  410fa5:	std    
  410fa6:	in     eax,0xc0
  410fa8:	mov    edx,0xbb5e53f
  410fad:	sub    BYTE PTR [ebp-0x78c287fd],bh
  410fb3:	iret   
  410fb4:	push   ebp
  410fb5:	dec    edx
  410fb6:	in     al,dx
  410fb7:	(bad)  
  410fb8:	imul   esp,DWORD PTR [ebx+0x2018fd44],0x18
  410fbf:	shr    DWORD PTR [eax+ebx*4],cl
  410fc2:	ja     0x411014
  410fc4:	jl     0x410f85
  410fc6:	sbb    bl,BYTE PTR [ecx+esi*8]
  410fc9:	and    dh,0x3f
  410fcc:	jnp    0x410fbf
  410fce:	fmulp  st(6),st
  410fd0:	jge    0x41101b
  410fd2:	out    dx,al
  410fd3:	sub    eax,0x6de3376b
  410fd8:	or     edx,edx
  410fda:	sbb    edx,DWORD PTR [esi]
  410fdc:	cmp    eax,0xb7a4475e
  410fe1:	push   esp
  410fe2:	xor    al,0xb6
  410fe4:	inc    edi
  410fe5:	popf   
  410fe6:	rcl    BYTE PTR [eax+0xf0ee598],1
  410fec:	(bad)  
  410fed:	frstor [ebx+0x28950028]
  410ff3:	test   al,0xac
  410ff5:	xchg   edx,eax
  410ff6:	or     ebp,esp
  410ff8:	add    al,0xfd
  410ffa:	out    0x4,eax
  410ffc:	mov    bl,0xd5
  410ffe:	ficom  DWORD PTR ds:0xaa19d17e
  411004:	sub    al,bl
  411006:	mov    ebx,0x8e8d1788
  41100b:	inc    ecx
  41100c:	ja     0x41100d
  41100e:	ror    ebx,0x58
  411011:	popa   
  411012:	and    ecx,DWORD PTR [edx]
  411014:	ret    
  411015:	or     eax,0xce4afb81
  41101a:	sub    DWORD PTR [ebx+0x4e],ebp
  41101d:	adc    eax,0xff67202b
  411022:	ja     0x411012
  411024:	xor    BYTE PTR [esi+0x3e],al
  411027:	(bad)  
  411028:	mov    edi,0xab4dc46d
  41102d:	fwait
  41102e:	bnd js 0x410fd4
  411031:	lods   eax,DWORD PTR ds:[esi]
  411032:	xchg   DWORD PTR [edx],esi
  411034:	mov    ebx,0x7bb06ac2
  411039:	xchg   ecx,eax
  41103a:	jnp    0x411039
  41103c:	xchg   BYTE PTR [ebx+0xf87b264],dl
  411042:	cdq    
  411043:	xchg   esi,eax
  411044:	pushf  
  411045:	shl    DWORD PTR [ebx-0xab35399],0xf1
  41104c:	cdq    
  41104d:	mov    esi,esp
  41104f:	repz dec esi
  411051:	dec    ebp
  411052:	loop   0x4110c3
  411054:	fisubr DWORD PTR [edi+0x5c]
  411057:	and    al,0x3e
  411059:	into   
  41105a:	test   eax,0x629adba2
  41105f:	pop    es
  411060:	sbb    BYTE PTR [ebp+0x2a3535b4],0xf9
  411067:	stos   DWORD PTR es:[edi],eax
  411068:	jno    0x4110bc
  41106a:	adc    dh,BYTE PTR [eax-0x207739bf]
  411070:	mov    ds:0xaa520d51,al
  411076:	xor    eax,0x5e907704
  41107b:	iret   
  41107c:	sahf   
  41107d:	or     BYTE PTR [edi-0xa],cl
  411080:	in     al,dx
  411081:	cmp    ebx,edx
  411083:	shl    DWORD PTR [ebp+edi*2-0x10],1
  411087:	xor    eax,0x47d2225b
  41108c:	scas   eax,DWORD PTR es:[edi]
  41108d:	aas    
  41108e:	jl     0x4110c2
  411090:	aas    
  411091:	sbb    eax,0xa4720c72
  411096:	sub    BYTE PTR [ecx],al
  411098:	nop
  411099:	jle    0x41102a
  41109b:	sbb    edx,edi
  41109d:	js     0x41108f
  41109f:	(bad)  
  4110a0:	xor    al,0x3b
  4110a2:	mov    al,ds:0x5a166d35
  4110a7:	(bad)  
  4110a8:	lds    ecx,FWORD PTR [ebx]
  4110aa:	out    dx,eax
  4110ab:	mov    DWORD PTR [ebp-0x8],0x3204
  4110b2:	mov    DWORD PTR [ebp-0x4],0x62ea
  4110b9:	mov    DWORD PTR [ebp-0x38],0x58e9
  4110c0:	jmp    0x411347
  4110c5:	pop    edx
  4110c6:	daa    
  4110c7:	fcomp  QWORD PTR [eax-0x44]
  4110ca:	mov    esp,0xf3ba2b5a
  4110cf:	aad    0xe3
  4110d1:	pop    ds
  4110d2:	xor    DWORD PTR [esi-0x41b1f770],ebx
  4110d8:	mov    esi,0xbebec289
  4110dd:	(bad)  
  4110de:	stos   DWORD PTR es:[edi],eax
  4110df:	dec    edx
  4110e0:	ret    0x38ce
  4110e3:	mov    esp,0xc9a50391
  4110e8:	dec    ebx
  4110e9:	cmp    DWORD PTR [ebx+0x67],ecx
  4110ec:	(bad)  
  4110ed:	ror    eax,1
  4110ef:	xor    eax,0xcdefdde3
  4110f4:	clc    
  4110f5:	inc    eax
  4110f6:	add    eax,0xe65a8e55
  4110fb:	dec    eax
  4110fc:	sbb    bl,BYTE PTR [ebp-0xc]
  4110ff:	cld    
  411100:	loopne 0x411120
  411102:	xchg   ebp,eax
  411103:	mov    ah,0x1e
  411105:	cmp    esp,edx
  411107:	inc    esp
  411108:	loopne 0x41111c
  41110a:	sahf   
  41110b:	js     0x4110cc
  41110d:	jb     0x411117
  41110f:	xor    eax,DWORD PTR [eax-0x57]
  411112:	or     cl,BYTE PTR [edx+0x60]
  411115:	mov    dl,0x4a
  411117:	jl     0x411129
  411119:	mov    eax,ds:0x5085f637
  41111e:	mov    DWORD PTR [ebx],ebp
  411120:	xchg   ecx,eax
  411121:	inc    ebp
  411122:	pop    es
  411123:	dec    edx
  411124:	aam    0xac
  411126:	push   edi
  411127:	sbb    al,0x7d
  411129:	repnz mov ebp,0x11172731
  41112f:	sar    cl,1
  411131:	hlt    
  411132:	mov    dl,0xf3
  411134:	(bad)  
  411135:	aam    0x61
  411137:	aad    0x7d
  411139:	ret    0xfcca
  41113c:	jo     0x4110f2
  41113e:	fwait
  41113f:	xchg   BYTE PTR [edx+0x79],ah
  411142:	sbb    ebx,DWORD PTR [ebp+0x21]
  411145:	ja     0x4111b1
  411147:	dec    edi
  411148:	(bad)  
  411149:	add    al,0x89
  41114b:	cmp    al,ch
  41114d:	xchg   edi,eax
  41114e:	inc    ebp
  41114f:	frstor [ecx+edi*1-0x20ccd4c5]
  411156:	mov    ebx,0xce21853a
  41115b:	bswap  ecx
  41115d:	stos   BYTE PTR es:[edi],al
  41115e:	iret   
  41115f:	pusha  
  411160:	gs ret 
  411162:	add    ecx,ebp
  411164:	add    eax,0x2fa46eff
  411169:	mov    al,0x34
  41116b:	es out dx,eax
  41116d:	(bad)  
  41116e:	adc    al,0xeb
  411170:	(bad)  
  411171:	fisttp QWORD PTR [ebx-0x18]
  411174:	ficomp DWORD PTR [ecx+0x59]
  411177:	mov    bh,0x25
  411179:	fsub   QWORD PTR [esp+ecx*8+0x5a485519]
  411180:	cmp    dh,BYTE PTR ds:0xc295c413
  411186:	(bad)  
  411187:	leave  
  411188:	jb     0x4111a1
  41118a:	cmp    ecx,edi
  41118c:	inc    edi
  41118d:	mov    ecx,0x84f29332
  411192:	jo     0x41111f
  411194:	cvttps2pi mm0,QWORD PTR [esi+edx*2]
  411198:	into   
  411199:	scas   eax,DWORD PTR es:[edi]
  41119a:	in     al,dx
  41119b:	dec    eax
  41119c:	mov    al,0xdd
  41119e:	ds push esp
  4111a0:	inc    edx
  4111a1:	nop
  4111a2:	lds    ebx,FWORD PTR [esi+0x0]
  4111a5:	faddp  st(7),st
  4111a7:	push   ebp
  4111a8:	and    al,0xc4
  4111aa:	add    DWORD PTR [eax+0x2d],ebp
  4111ad:	add    ch,BYTE PTR [edx+0x2e2bcc6b]
  4111b3:	les    eax,FWORD PTR [edi+edx*2]
  4111b6:	push   ecx
  4111b7:	rol    BYTE PTR [eax-0x2e4ebc8],cl
  4111bd:	out    0x7,eax
  4111bf:	jnp    0x41120e
  4111c1:	mov    dh,0xd5
  4111c3:	clc    
  4111c4:	sbb    al,0x4a
  4111c6:	jnp    0x411193
  4111c8:	in     al,0xbd
  4111ca:	imul   dl
  4111cc:	xchg   edi,eax
  4111cd:	sahf   
  4111ce:	xchg   edx,eax
  4111cf:	repnz push 0xffffffe6
  4111d2:	mov    esp,0xe4d84c71
  4111d7:	pushf  
  4111d8:	push   es
  4111d9:	jge    0x41123a
  4111db:	adc    BYTE PTR [eax+0x133afc75],cl
  4111e1:	retf   0x90d0
  4111e4:	and    BYTE PTR [esi],bh
  4111e6:	mov    eax,ds:0x82533e2d
  4111eb:	inc    edi
  4111ec:	cmc    
  4111ed:	mov    ebp,0x66c8e733
  4111f2:	in     al,0x2c
  4111f4:	dec    edx
  4111f5:	fstp   st(5)
  4111f7:	stos   DWORD PTR es:[edi],eax
  4111f8:	or     al,0x54
  4111fa:	fnsave gs:[edi-0x4ff06ec7]
  411201:	lods   eax,DWORD PTR ds:[esi]
  411202:	push   edx
  411203:	dec    edx
  411204:	mov    ch,0xa7
  411206:	ss popa 
  411208:	sbb    eax,0x87bdba53
  41120d:	cmp    al,0x24
  41120f:	jmp    0x6a877fec
  411214:	dec    ebp
  411215:	pop    ss
  411216:	test   al,0x78
  411218:	sbb    ebx,DWORD PTR [edx-0x7a]
  41121b:	(bad)  
  41121c:	out    dx,al
  41121d:	retf   
  41121e:	and    BYTE PTR [esi],dl
  411220:	pop    edi
  411221:	out    dx,al
  411222:	xor    al,BYTE PTR [eax-0x6e556945]
  411228:	imul   esp,ebp,0x3c
  41122b:	data16 sahf 
  41122d:	imul   ecx,DWORD PTR [esi-0x4e7ba131],0x29
  411234:	sbb    bh,0xdf
  411237:	aad    0x6c
  411239:	pop    edi
  41123a:	dec    edi
  41123b:	sub    ecx,DWORD PTR [edx+0x28]
  41123e:	test   edi,ecx
  411240:	mov    edx,0x303b5848
  411245:	mov    bl,0x3
  411247:	or     eax,0xc8d9669e
  41124c:	and    BYTE PTR [edx+ebx*2+0x25c1a46e],0x75
  411254:	jae    0x411239
  411256:	xor    al,0x85
  411258:	call   0x480e4195
  41125d:	(bad)  
  41125e:	and    al,0x7
  411260:	popf   
  411261:	fidiv  DWORD PTR ds:0x7507f922
  411267:	(bad)  
  411268:	xlat   BYTE PTR ds:[ebx]
  411269:	loope  0x4111f3
  41126b:	mov    dh,0xd8
  41126d:	mov    al,0x34
  41126f:	rol    al,0xc1
  411272:	stos   BYTE PTR es:[edi],al
  411273:	mov    dh,0xb7
  411275:	push   ebp
  411276:	inc    esp
  411277:	push   ebp
  411278:	not    bl
  41127a:	jl     0x4112c4
  41127c:	sar    BYTE PTR [ebp+0x5c],1
  41127f:	daa    
  411280:	cld    
  411281:	sub    BYTE PTR [esi+0x6bcc0eca],ah
  411287:	test   al,0xfd
  411289:	cmp    eax,0xd9366b1
  41128e:	mov    BYTE PTR [eax+0x655abf74],ch
  411294:	pop    esi
  411295:	pop    ebx
  411296:	or     ecx,ebp
  411298:	(bad)  
  411299:	ret    0x3331
  41129c:	mov    eax,DWORD PTR [eax-0x24b532e0]
  4112a2:	push   eax
  4112a3:	daa    
  4112a4:	mov    ds:0x3eeca337,eax
  4112a9:	stos   DWORD PTR es:[edi],eax
  4112aa:	or     DWORD PTR [eax+0x37],esp
  4112ad:	push   ecx
  4112ae:	les    eax,FWORD PTR [ecx]
  4112b0:	and    eax,0xd828e4da
  4112b5:	xor    eax,0x5f86b23
  4112ba:	sbb    al,0x3c
  4112bc:	dec    edx
  4112bd:	shl    DWORD PTR [ecx],0x5b
  4112c0:	and    DWORD PTR [edx-0x28],esp
  4112c3:	and    eax,0xb0e14805
  4112c8:	sbb    ch,BYTE PTR [eax-0x1]
  4112cb:	sub    edi,DWORD PTR [edx-0x26910573]
  4112d1:	mov    esi,0xd0cf49cb
  4112d6:	add    ah,ch
  4112d8:	lds    edi,FWORD PTR [ebx+0x170646ad]
  4112de:	cwde   
  4112df:	mov    DWORD PTR [ebx+0x39d800bb],eax
  4112e5:	stc    
  4112e6:	mov    ds:0x4ec5aedb,al
  4112eb:	into   
  4112ec:	out    dx,eax
  4112ed:	(bad)  
  4112ee:	fcmovne st,st(3)
  4112f0:	cmp    ecx,DWORD PTR [eax]
  4112f2:	mov    ebx,0xeb2c90e3
  4112f7:	dec    ebp
  4112f8:	inc    edi
  4112f9:	dec    edx
  4112fa:	not    BYTE PTR [ecx+eax*1+0x5a1065ab]
  411301:	test   BYTE PTR ds:0xbb6e133e,0x51
  411308:	test   DWORD PTR [ebp+edi*8-0x4d],esi
  41130c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41130d:	mov    ?,WORD PTR [edi]
  41130f:	cmova  edx,DWORD PTR [ebp+0x48]
  411313:	outs   dx,BYTE PTR ds:[esi]
  411314:	push   0x976b037a
  411319:	jb     0x4112ca
  41131b:	mov    WORD PTR [eax],gs
  41131d:	leave  
  41131e:	int3   
  41131f:	jne    0x411352
  411321:	ret    0x200e
  411324:	sbb    eax,0x43769673
  411329:	xor    DWORD PTR [edx],edi
  41132b:	call   0xe7b6:0xf41afdc5
  411332:	push   es
  411333:	call   0x22bbf55e
  411338:	push   eax
  411339:	inc    esi
  41133a:	retf   
  41133b:	sbb    DWORD PTR [esi+0x3a],esi
  41133e:	push   esp
  41133f:	mov    ch,0xd6
  411341:	inc    eax
  411342:	test   al,0xd6
  411344:	sub    BYTE PTR [ebx],0x30
  411347:	mov    DWORD PTR [ebp-0x34],0x7f89
  41134e:	mov    DWORD PTR [ebp-0x30],0x7fda
  411355:	mov    DWORD PTR [ebp-0x2c],0x2889
  41135c:	mov    DWORD PTR [ebp-0x28],0xf0f
  411363:	mov    DWORD PTR [ebp-0x24],0x58e1
  41136a:	mov    DWORD PTR [ebp-0x3c],0x69c
  411371:	mov    eax,DWORD PTR [ebp-0x10]
  411374:	mov    ecx,DWORD PTR [ebp-0x14]
  411377:	and    al,0xb9
  411379:	add    al,cl
  41137b:	mov    ecx,DWORD PTR [ebp-0x18]
  41137e:	and    al,cl
  411380:	mov    ecx,DWORD PTR [ebp-0x1c]
  411383:	sub    al,0x11
  411385:	and    al,cl
  411387:	mov    ecx,DWORD PTR [ebp-0x20]
  41138a:	mov    edx,DWORD PTR [ebp+0x8]
  41138d:	imul   ecx,ecx,0x6008
  411393:	add    ecx,0x1759dd6e
  411399:	add    al,0x4d
  41139b:	xor    ecx,0x2b4185ee
  4113a1:	cmp    BYTE PTR [ecx+edx*1],al
  4113a4:	jne    0x41143e
  4113aa:	mov    ecx,DWORD PTR [ebp-0x4]
  4113ad:	mov    eax,0xffffeff8
  4113b2:	mov    edx,eax
  4113b4:	sub    edx,ecx
  4113b6:	add    edx,DWORD PTR [ebp-0x8]
  4113b9:	mov    ecx,DWORD PTR [ebp-0xc]
  4113bc:	or     edx,ecx
  4113be:	mov    ecx,DWORD PTR [ebp-0x4]
  4113c1:	imul   edx,edx,0x85300
  4113c7:	sub    eax,ecx
  4113c9:	add    eax,DWORD PTR [ebp-0x8]
  4113cc:	mov    ecx,DWORD PTR [ebp-0xc]
  4113cf:	or     eax,ecx
  4113d1:	mov    ecx,DWORD PTR [ebp+0x8]
  4113d4:	mov    ecx,DWORD PTR [edx+ecx*1+0x1c323f3c]
  4113db:	add    eax,0x40e5
  4113e0:	imul   eax,eax,0x214c
  4113e6:	add    eax,ecx
  4113e8:	mov    ecx,DWORD PTR [ebp+0x8]
  4113eb:	add    ecx,eax
  4113ed:	mov    DWORD PTR [ebp+0x8],ecx
  4113f0:	mov    eax,DWORD PTR [ebp-0x24]
  4113f3:	mov    ecx,DWORD PTR [ebp-0x28]
  4113f6:	and    eax,ecx
  4113f8:	mov    ecx,DWORD PTR [ebp-0x2c]
  4113fb:	and    eax,ecx
  4113fd:	mov    ecx,DWORD PTR [ebp-0x30]
  411400:	imul   eax,ecx
  411403:	mov    ecx,DWORD PTR [ebp-0x34]
  411406:	or     eax,ecx
  411408:	mov    ecx,DWORD PTR [ebp-0x38]
  41140b:	imul   eax,ecx
  41140e:	mov    ecx,DWORD PTR [ebp+0x8]
  411411:	sub    eax,0x777ea653
  411416:	cmp    DWORD PTR [ecx+0x54],eax
  411419:	je     0x411427
  41141f:	mov    eax,DWORD PTR [ebp+0x8]
  411422:	jmp    0x41146e
  411427:	mov    eax,DWORD PTR [ebp-0x3c]
  41142a:	sub    eax,0x5258
  41142f:	xor    eax,0x49e9
  411434:	add    eax,0x253
  411439:	jmp    0x41146e
  41143e:	mov    DWORD PTR [ebp-0x3c],0x4177
  411445:	mov    DWORD PTR [ebp+0x8],0x1405
  41144c:	mov    eax,DWORD PTR [ebp+0x8]
  41144f:	mov    ecx,DWORD PTR [ebp-0x3c]
  411452:	imul   eax,eax,0x58cc
  411458:	add    eax,0x3f39
  41145d:	and    eax,ecx
  41145f:	add    eax,0x3b90
  411464:	or     eax,0x4b1c
  411469:	sub    eax,0x7fdd
  41146e:	leave  
  41146f:	ret    0x4
  411472:	push   ebp
  411473:	mov    ebp,esp
  411475:	and    esp,0xfffffff8
  411478:	sub    esp,0x20
  41147b:	push   ebx
  41147c:	push   esi
  41147d:	lea    eax,[esp+0x10]
  411481:	mov    DWORD PTR [esp+0xc],eax
  411485:	mov    eax,DWORD PTR [esp+0xc]
  411489:	mov    ecx,DWORD PTR [esp+0x10]
  41148d:	mov    edx,DWORD PTR [esp+0x14]
  411491:	sub    DWORD PTR [eax],ecx
  411493:	sbb    DWORD PTR [eax+0x4],edx
  411496:	mov    eax,DWORD PTR [esp+0xc]
  41149a:	or     DWORD PTR [eax],0xcb7db576
  4114a0:	or     DWORD PTR [eax+0x4],0x9c2b8ae8
  4114a7:	lea    eax,[esp+0x18]
  4114ab:	jmp    0x41183a
  4114b0:	test   al,0x7c
  4114b2:	or     BYTE PTR [esp+ebx*1-0x44],ch
  4114b6:	lods   al,BYTE PTR ds:[esi]
  4114b7:	mov    esp,0x92465201
  4114bc:	cmp    eax,0xd4d1564a
  4114c1:	push   esp
  4114c2:	mov    esi,0xbec499be
  4114c7:	mov    esi,0xd927c916
  4114cc:	push   es
  4114cd:	sub    al,0x85
  4114cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114d0:	arpl   bx,bp
  4114d2:	int    0xb0
  4114d4:	inc    edi
  4114d5:	jo     0x411513
  4114d7:	fimul  WORD PTR [eax-0x32076b1]
  4114dd:	(bad)  
  4114de:	out    dx,al
  4114df:	aad    0x3e
  4114e1:	and    DWORD PTR [esi+esi*4],ecx
  4114e4:	push   esp
  4114e5:	out    dx,al
  4114e6:	(bad)  
  4114e7:	fsub   QWORD PTR es:[edi]
  4114ea:	into   
  4114eb:	leave  
  4114ec:	cdq    
  4114ed:	push   edx
  4114ee:	and    BYTE PTR [edx+0x6c],ah
  4114f1:	mov    ecx,0xcd7a0b67
  4114f6:	cld    
  4114f7:	call   0xd348b907
  4114fc:	jg     0x411563
  4114fe:	cmp    edi,DWORD PTR es:[ebp+edx*1+0x51]
  411503:	adc    eax,0xf2070c3
  411508:	fisubr WORD PTR [ecx+0x5fc11944]
  41150e:	loope  0x4114fb
  411510:	pop    esi
  411511:	mov    esi,0x58fc7dd2
  411516:	(bad)  
  411517:	xor    al,0x9a
  411519:	std    
  41151a:	ror    BYTE PTR [edx],cl
  41151c:	mov    ecx,0x33cafc2a
  411521:	dec    ebx
  411522:	test   DWORD PTR [edx],edx
  411524:	fucomi st,st(4)
  411526:	pop    esi
  411527:	call   0x973a9e95
  41152c:	push   esi
  41152d:	je     0x411503
  41152f:	or     al,0x9f
  411531:	sti    
  411532:	cmpps  xmm7,xmm3,0x2d
  411536:	(bad)  
  411537:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411538:	jge    0x411513
  41153a:	out    dx,al
  41153b:	je     0x41159c
  41153d:	jae    0x411596
  41153f:	stc    
  411540:	pushf  
  411541:	mov    al,ds:0xae705621
  411546:	aas    
  411547:	scas   al,BYTE PTR es:[edi]
  411548:	and    al,0xd1
  41154a:	ins    DWORD PTR es:[edi],dx
  41154b:	jecxz  0x4115cb
  41154d:	mov    ecx,0x8cada788
  411552:	sub    BYTE PTR [edx+eiz*1+0x39],0xde
  411557:	mov    edx,0xa3e8ef0
  41155c:	imul   edi,DWORD PTR [ebp+0x2201b421],0xd0670c66
  411566:	ret    
  411567:	aad    0x78
  411569:	jg     0x4115b2
  41156b:	js     0x41158d
  41156d:	push   edx
  41156e:	out    0x31,eax
  411570:	sbb    al,0x5c
  411572:	int    0xeb
  411574:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411575:	loopne 0x41150e
  411577:	loope  0x411503
  411579:	xor    al,0xae
  41157b:	mov    ebx,0x4c04250b
  411580:	vpcmpeqd ymm0,ymm3,ymm3
  411584:	sub    eax,0x36247788
  411589:	in     eax,dx
  41158a:	test   eax,0x2e2e7f4f
  41158f:	lahf   
  411590:	dec    esi
  411591:	jb     0x411554
  411593:	pop    ss
  411594:	call   0x874aef9e
  411599:	jae    0x4115cd
  41159b:	inc    ecx
  41159c:	push   edi
  41159d:	sahf   
  41159e:	mov    bl,0x41
  4115a0:	nop
  4115a1:	daa    
  4115a2:	push   0x60969af2
  4115a7:	jp     0x411619
  4115a9:	lea    eax,[esp+edx*2+0x70d91467]
  4115b0:	pop    ebp
  4115b1:	sub    bh,0x5c
  4115b4:	and    eax,0x5dd94a25
  4115b9:	push   edx
  4115ba:	call   0xb6d:0x1c7f9643
  4115c1:	es sahf 
  4115c3:	punpckldq mm0,DWORD PTR [edx]
  4115c6:	repz cdq 
  4115c8:	not    esp
  4115ca:	and    esi,DWORD PTR [edx]
  4115cc:	dec    ebp
  4115cd:	inc    esi
  4115ce:	pop    eax
  4115cf:	mov    ds:0x84143363,al
  4115d4:	icebp  
  4115d5:	or     esp,ecx
  4115d7:	pushf  
  4115d8:	pusha  
  4115d9:	cmp    ebp,edi
  4115db:	(bad)  
  4115dc:	xchg   ebx,eax
  4115dd:	les    esi,FWORD PTR [edx]
  4115df:	cmp    al,0xd0
  4115e1:	repnz dec esp
  4115e3:	and    eax,edx
  4115e5:	push   ss
  4115e6:	jne    0x411604
  4115e8:	imul   ebx,ebx,0xddf1b69c
  4115ee:	daa    
  4115ef:	test   al,0xa3
  4115f1:	dec    esp
  4115f2:	cmp    eax,0x8f1dcb24
  4115f7:	xchg   ecx,eax
  4115f8:	push   0xffffffc5
  4115fa:	sbb    eax,0x16838b91
  4115ff:	enter  0x7942,0x39
  411603:	aas    
  411604:	loop   0x4115d0
  411606:	xchg   DWORD PTR [edi+0x4c5501f5],edx
  41160c:	out    0x9d,eax
  41160e:	cmc    
  41160f:	in     al,dx
  411610:	cmp    DWORD PTR [edi-0x1e],edx
  411613:	imul   edi,DWORD PTR [ebx],0x66
  411616:	arpl   WORD PTR [edi-0x4d],dx
  411619:	mov    esp,0xd71b1d76
  41161e:	mov    ds:0x9773eed6,eax
  411623:	test   al,0x97
  411625:	mov    dl,0x88
  411627:	rol    edi,0x89
  41162a:	xchg   edx,eax
  41162b:	jecxz  0x41164c
  41162d:	outs   dx,DWORD PTR ds:[esi]
  41162e:	cld    
  41162f:	xchg   ecx,eax
  411630:	int    0x65
  411632:	mov    ds:0xdf544dea,al
  411637:	push   ebx
  411638:	or     BYTE PTR [edi],ah
  41163a:	call   0x3f44:0x714ac01c
  411641:	in     al,dx
  411642:	sub    eax,0x2739a6b1
  411647:	inc    ebx
  411648:	mov    al,0x5c
  41164a:	pop    esi
  41164b:	fwait
  41164c:	sbb    DWORD PTR [esi+0x69b23b63],eax
  411652:	or     DWORD PTR [ecx+0x251d2d4b],esi
  411658:	adc    al,0x32
  41165a:	cli    
  41165b:	push   0x2f
  41165d:	xchg   ebp,eax
  41165e:	adc    DWORD PTR [ebp+0x7b],ebx
  411661:	aam    0x5f
  411663:	sbb    esp,DWORD PTR [eax+0x51]
  411666:	cmp    dl,BYTE PTR [ebp+0xe02d7a3]
  41166c:	in     eax,0x9a
  41166e:	test   eax,0xf798e0b1
  411673:	and    ch,BYTE PTR [ebp+0x74]
  411676:	in     al,0xa0
  411678:	mov    al,ds:0x6cb9b9f5
  41167d:	dec    ebp
  41167e:	fnsave [ebx]
  411680:	push   edi
  411681:	cmp    DWORD PTR [ecx],ebx
  411683:	inc    eax
  411684:	or     DWORD PTR [ebx],esp
  411686:	sar    DWORD PTR [edx],cl
  411688:	sahf   
  411689:	cmp    DWORD PTR [eax],edx
  41168b:	dec    eax
  41168c:	pusha  
  41168d:	jo     0x41161a
  41168f:	call   0xebe:0x54cab7a5
  411696:	pop    esi
  411697:	ins    DWORD PTR es:[edi],dx
  411698:	sti    
  411699:	rcr    DWORD PTR [ecx],1
  41169b:	sbb    eax,0xa3b700e1
  4116a0:	neg    DWORD PTR [esi]
  4116a2:	mov    bh,0x1
  4116a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116a5:	out    dx,eax
  4116a6:	aad    0x3a
  4116a8:	das    
  4116a9:	add    ecx,DWORD PTR [ecx]
  4116ab:	or     al,0x2e
  4116ad:	test   al,0x28
  4116af:	and    al,0xd7
  4116b1:	cmp    cl,BYTE PTR [edi+0x6f959afc]
  4116b7:	call   0x61f908e7
  4116bc:	outs   dx,BYTE PTR ds:[esi]
  4116bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116bf:	test   DWORD PTR [edx-0x63c42827],ecx
  4116c5:	arpl   cx,bx
  4116c7:	push   ds
  4116c8:	mov    eax,0x86b7e407
  4116cd:	or     eax,0xbb82dc6
  4116d2:	sbb    eax,DWORD PTR [ecx+0xf]
  4116d5:	xchg   edx,eax
  4116d6:	ds daa 
  4116d8:	jge    0x411759
  4116da:	test   edi,edi
  4116dc:	aas    
  4116dd:	sbb    DWORD PTR es:[edi+eiz*8-0x775ac6da],esp
  4116e5:	stc    
  4116e6:	loope  0x4116ec
  4116e8:	pop    esi
  4116e9:	dec    edx
  4116ea:	mov    eax,ds:0x54744ff1
  4116ef:	and    eax,0x5bda3e17
  4116f4:	test   BYTE PTR [ebx],dl
  4116f6:	mov    al,ds:0x2f9b1c26
  4116fb:	pop    edx
  4116fc:	xchg   BYTE PTR [edi+ebp*4],bh
  4116ff:	xchg   DWORD PTR [edx-0x713244e8],edi
  411705:	aam    0x90
  411707:	mov    ah,0xd4
  411709:	jge    0x411734
  41170b:	fs or  al,0x77
  41170e:	jge    0x411704
  411710:	adc    ecx,DWORD PTR [edi]
  411712:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411713:	sbb    bl,bl
  411715:	mov    al,0xaa
  411717:	nop
  411718:	pop    edi
  411719:	jmp    0x4116eb
  41171b:	mov    eax,0x4faa1ce3
  411720:	add    bl,BYTE PTR [edx+0x50]
  411723:	stc    
  411724:	imul   edi,DWORD PTR [esi+0x60a18fd9],0xffffff81
  41172b:	add    DWORD PTR [ebx],esi
  41172d:	cwde   
  41172e:	push   edi
  41172f:	repz jmp DWORD PTR [eax+0x21fff00b]
  411736:	or     al,0xe3
  411738:	jmp    0x2fec:0xb92b1571
  41173f:	inc    edx
  411740:	cmp    al,0xa1
  411742:	cli    
  411743:	sbb    edx,ebx
  411745:	in     eax,0x89
  411747:	pusha  
  411748:	push   edx
  411749:	scas   al,BYTE PTR es:[edi]
  41174a:	cmp    al,0xe6
  41174c:	xchg   edx,eax
  41174d:	fucomip st,st(6)
  41174f:	pushf  
  411750:	repz pop ss
  411752:	ror    DWORD PTR [edi],cl
  411754:	into   
  411755:	inc    eax
  411756:	das    
  411757:	test   BYTE PTR ds:0xef09f8bd,al
  41175d:	pop    edx
  41175e:	ja     0x41179e
  411760:	outs   dx,BYTE PTR ds:[esi]
  411761:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411762:	rcr    DWORD PTR [edi],1
  411764:	or     dl,BYTE PTR [esi+ebp*1]
  411767:	jl     0x41170d
  411769:	adc    bh,BYTE PTR [esi+0x78]
  41176c:	jns    0x41176b
  41176e:	out    dx,eax
  41176f:	xchg   ebx,eax
  411770:	outs   dx,BYTE PTR ds:[esi]
  411771:	xchg   BYTE PTR [eax-0x45],ah
  411774:	pop    ecx
  411775:	push   ss
  411776:	pop    ds
  411777:	(bad)  
  411778:	mov    esi,0x7e97573c
  41177d:	mov    esp,0xe0b36a60
  411782:	lods   al,BYTE PTR ds:[esi]
  411783:	popf   
  411784:	and    bl,BYTE PTR [edi+0x5a373bcc]
  41178a:	ret    
  41178b:	ret    
  41178c:	mov    eax,0x5ced6f09
  411791:	mov    ebp,0x924db669
  411796:	test   DWORD PTR [ebx-0x14],ebx
  411799:	cmovs  ebp,DWORD PTR [ebp+0x1c]
  41179d:	ins    BYTE PTR es:[edi],dx
  41179e:	sti    
  41179f:	bound  esp,QWORD PTR [eax-0x1b]
  4117a2:	add    DWORD PTR [ecx+0x7d],esp
  4117a5:	sbb    BYTE PTR [esi+0x53a5fe6d],0x41
  4117ac:	dec    ebp
  4117ad:	xor    DWORD PTR gs:[edx],edi
  4117b0:	jb     0x411785
  4117b2:	mov    eax,cs
  4117b4:	ins    BYTE PTR es:[edi],dx
  4117b5:	push   edi
  4117b6:	inc    ecx
  4117b7:	jb     0x4117db
  4117b9:	pop    esi
  4117ba:	sbb    eax,0xb06d72eb
  4117bf:	inc    edi
  4117c0:	fwait
  4117c1:	idiv   dh
  4117c3:	jnp    0x41179b
  4117c5:	test   BYTE PTR [ebp-0x72],cl
  4117c8:	pop    ebx
  4117c9:	fwait
  4117ca:	(bad)  
  4117cb:	or     bh,BYTE PTR [esi]
  4117cd:	ins    DWORD PTR es:[edi],dx
  4117ce:	repz mov ds:0xef84e0ff,eax
  4117d4:	pop    ds
  4117d5:	add    DWORD PTR [esi-0x10a29580],eax
  4117db:	sbb    eax,0x37ed1f83
  4117e0:	repz es push edi
  4117e3:	jae    0x411770
  4117e5:	mov    ah,0x5d
  4117e7:	sbb    eax,0x43a157ac
  4117ec:	adc    esp,DWORD PTR [ebp+ecx*2+0x5d1d922f]
  4117f3:	dec    esi
  4117f4:	mov    ecx,0x6b134037
  4117f9:	in     al,0x29
  4117fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117fc:	(bad)  
  4117fd:	xor    eax,0x4cbccf28
  411802:	and    ecx,eax
  411804:	(bad)  
  411805:	mov    eax,0x2889a400
  41180a:	mov    dh,dh
  41180c:	mov    ds:0x7213162a,al
  411811:	inc    esi
  411812:	(bad)  
  411813:	mov    esi,0xbf7e34f7
  411818:	adc    edi,ebp
  41181a:	sti    
  41181b:	xchg   edi,eax
  41181c:	ds pop ds
  41181e:	or     dh,0xdf
  411821:	push   edx
  411822:	xchg   edi,eax
  411823:	outs   dx,BYTE PTR ds:[esi]
  411824:	bound  ebx,QWORD PTR [edx]
  411826:	std    
  411827:	dec    eax
  411828:	mov    eax,0xda7db86d
  41182d:	pop    edx
  41182e:	xor    dl,cl
  411830:	jle    0x4117be
  411832:	outs   dx,DWORD PTR ds:[esi]
  411833:	jecxz  0x411840
  411835:	add    BYTE PTR [edi+0x50d25c77],bh
  41183b:	jmp    0x411bca
  411840:	xlat   BYTE PTR ds:[ebx]
  411841:	xchg   ebx,eax
  411842:	push   edx
  411843:	call   FWORD PTR [edx-0x30636400]
  411849:	fist   WORD PTR [eax-0x63ca0570]
  41184f:	jecxz  0x411800
  411851:	pop    edx
  411852:	mov    esi,0xbec499be
  411857:	mov    esi,0x92329766
  41185c:	mov    ah,0x9c
  41185e:	pop    es
  41185f:	sti    
  411860:	cld    
  411861:	leave  
  411862:	repnz push edi
  411864:	inc    eax
  411865:	pop    DWORD PTR ds:0xd5d3d3e0
  41186b:	icebp  
  41186c:	push   cs
  41186d:	mov    esp,0x3c56741f
  411872:	cwde   
  411873:	sub    ecx,DWORD PTR [edx+0x275bad88]
  411879:	pop    eax
  41187a:	int3   
  41187b:	js     0x4118a8
  41187d:	rcl    DWORD PTR [edx-0xd55452f],0x31
  411884:	or     esp,DWORD PTR [esp+edi*4]
  411887:	push   es
  411888:	fnstcw WORD PTR [ebx+0x7f]
  41188b:	mov    ebp,0xdcf0665a
  411890:	shl    DWORD PTR ds:0xb315dec5,0xda
  411897:	cmp    DWORD PTR [ebp+eax*4-0x4f89cb21],0xc62ec47b
  4118a2:	sub    ebp,DWORD PTR [esi]
  4118a4:	and    eax,0xabb418ef
  4118a9:	jl     0x41184d
  4118ab:	cdq    
  4118ac:	inc    ebp
  4118ad:	ins    BYTE PTR es:[edi],dx
  4118ae:	pop    ebx
  4118af:	mov    eax,DWORD PTR [ebx+0x444845a6]
  4118b5:	mov    BYTE PTR [esp+ebx*8],ch
  4118b8:	pop    esi
  4118b9:	add    eax,0x74da016
  4118be:	ror    BYTE PTR [edx-0x43],0x16
  4118c2:	fcomip st,st(4)
  4118c4:	pusha  
  4118c5:	out    dx,eax
  4118c6:	jne    0x411935
  4118c8:	adc    BYTE PTR [edx+0xca324e6],ah
  4118ce:	cmp    al,cl
  4118d0:	cwde   
  4118d1:	adc    dl,dh
  4118d3:	test   al,0xdb
  4118d5:	sahf   
  4118d6:	dec    esi
  4118d7:	push   eax
  4118d8:	ins    DWORD PTR es:[edi],dx
  4118d9:	xchg   ebp,eax
  4118da:	mov    cl,0x8b
  4118dc:	xchg   BYTE PTR [ecx+ecx*8-0xb7ade04],bl
  4118e3:	repz pop ss
  4118e5:	lods   al,BYTE PTR ds:[esi]
  4118e6:	pop    edi
  4118e7:	fwait
  4118e8:	test   ax,0xc58e
  4118ec:	xlat   BYTE PTR ds:[ebx]
  4118ed:	out    dx,eax
  4118ee:	mov    edi,?
  4118f0:	clc    
  4118f1:	xor    bl,BYTE PTR [esp+eiz*4-0x74]
  4118f5:	xchg   edx,eax
  4118f6:	push   0x9f05783b
  4118fb:	cli    
  4118fc:	ret    0x4587
  4118ff:	jns    0xb208948b
  411905:	jo     0x41191d
  411907:	add    bl,dl
  411909:	cld    
  41190a:	pop    ds
  41190b:	and    eax,0xaa66c6d0
  411910:	jb     0x4118fc
  411912:	jmp    0x38576b49
  411917:	stos   BYTE PTR es:[edi],al
  411918:	sub    dh,al
  41191a:	cli    
  41191b:	cmc    
  41191c:	push   ss
  41191d:	add    bl,cl
  41191f:	dec    esp
  411920:	dec    ebp
  411921:	mov    BYTE PTR [ebp-0x2acb5cce],bh
  411927:	dec    ebp
  411928:	ins    BYTE PTR es:[edi],dx
  411929:	int3   
  41192a:	lods   eax,DWORD PTR ds:[esi]
  41192b:	sub    al,0x5d
  41192d:	clc    
  41192e:	pop    ss
  41192f:	sbb    esi,DWORD PTR [eax]
  411931:	jmp    0x2cca:0x791837b3
  411938:	xor    al,0xe8
  41193a:	or     al,0x3d
  41193c:	add    eax,0x48a1015b
  411941:	mov    edi,DWORD PTR [edi-0x31]
  411944:	inc    ebx
  411945:	ss cmp al,0x6f
  411948:	iret   
  411949:	shl    BYTE PTR [edx],cl
  41194b:	sub    DWORD PTR [ecx-0x46],ecx
  41194e:	mov    esi,0x77ca98c6
  411953:	loope  0x411924
  411955:	aam    0x15
  411957:	sbb    ah,BYTE PTR [ebx]
  411959:	ficom  WORD PTR [edi-0x4c9893c7]
  41195f:	dec    edi
  411960:	and    al,cl
  411962:	clc    
  411963:	rcl    DWORD PTR [eax],1
  411965:	xor    al,0x1d
  411967:	xor    al,0x5a
  411969:	fwait
  41196a:	test   al,0xb0
  41196c:	mov    bl,0x95
  41196e:	xor    dl,BYTE PTR [edx]
  411970:	je     0x411971
  411972:	fstp   QWORD PTR [ebp+0x8]
  411975:	pop    edx
  411976:	frstpm(287 only) 
  411978:	push   ss
  411979:	out    0x92,al
  41197b:	jmp    0xbcc5384e
  411980:	js     0x411957
  411982:	psrlw  mm3,QWORD PTR [esi+0x4d69f8d6]
  411989:	les    ebx,FWORD PTR [ecx-0x4c7c1aa9]
  41198f:	mov    al,dl
  411991:	push   edi
  411992:	ret    
  411993:	and    BYTE PTR [edi-0x63],dl
  411996:	mov    edx,0xef1e33a7
  41199b:	seta   ch
  41199e:	std    
  41199f:	(bad)  
  4119a0:	push   edx
  4119a1:	xchg   eax,edi
  4119a3:	adc    eax,0x13339990
  4119a8:	adc    al,0x94
  4119aa:	loope  0x411a07
  4119ac:	pop    esi
  4119ad:	and    ah,bl
  4119af:	sub    edx,edi
  4119b1:	jne    0x4119e5
  4119b3:	call   DWORD PTR [esi+0x79453ad3]
  4119b9:	jmp    0xf9b2e2b1
  4119be:	das    
  4119bf:	jb     0x411a40
  4119c1:	hlt    
  4119c2:	or     BYTE PTR ss:[esi-0x40],ch
  4119c6:	adc    DWORD PTR [ebp-0x36],0x199388e9
  4119cd:	adc    BYTE PTR [edi+0x45],bl
  4119d0:	jno    0x4119c0
  4119d2:	dec    edx
  4119d3:	(bad)  
  4119d4:	push   ecx
  4119d5:	ror    DWORD PTR [eax-0x7c],1
  4119d8:	dec    esp
  4119d9:	pop    ss
  4119da:	xchg   ebp,eax
  4119db:	xor    BYTE PTR [edx-0x48ab5406],cl
  4119e1:	shr    DWORD PTR [edx+0x54f82d7e],0x29
  4119e8:	inc    ecx
  4119e9:	addr16 xchg edx,eax
  4119eb:	str    WORD PTR [esp+eiz*8]
  4119ef:	cmp    BYTE PTR [eax-0x76],bh
  4119f2:	in     al,dx
  4119f3:	ficomp DWORD PTR ds:0x2bb06cff
  4119f9:	stos   DWORD PTR es:[edi],eax
  4119fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119fb:	inc    esi
  4119fc:	mov    ebx,0xc531ee99
  411a01:	sub    DWORD PTR es:[esi+0x6b],ebp
  411a05:	inc    ecx
  411a06:	dec    edi
  411a07:	sar    BYTE PTR [ebp-0x5b],cl
  411a0a:	pop    eax
  411a0b:	lock leave 
  411a0d:	aam    0x7d
  411a0f:	sbb    esi,esi
  411a11:	in     al,dx
  411a12:	sti    
  411a13:	add    al,0x37
  411a15:	pop    esi
  411a16:	inc    esi
  411a17:	add    DWORD PTR [esi],edi
  411a19:	and    eax,0xec4c668e
  411a1e:	stc    
  411a1f:	xchg   esi,eax
  411a20:	or     BYTE PTR [ebx],0x92
  411a23:	lods   eax,DWORD PTR ds:[esi]
  411a24:	ficomp WORD PTR [eax]
  411a26:	(bad)  
  411a27:	mov    dh,0x2b
  411a29:	mov    edx,0x7f8f7a06
  411a2e:	pop    ebp
  411a2f:	push   eax
  411a30:	imul   esp,DWORD PTR [eax],0x51
  411a33:	inc    ebp
  411a34:	ffreep st(7)
  411a36:	add    ebx,DWORD PTR [eax+0x3c3b3460]
  411a3c:	sub    al,0x7e
  411a3e:	in     eax,0x9a
  411a40:	jno    0x411a90
  411a42:	gs aad 0x85
  411a45:	inc    esp
  411a46:	mov    dh,0x23
  411a48:	add    eax,0x67a42add
  411a4d:	xchg   edi,eax
  411a4e:	xchg   ebp,eax
  411a4f:	iret   
  411a50:	xchg   esi,eax
  411a51:	xor    DWORD PTR [ebx-0x78],esi
  411a54:	cs mov ch,0xa7
  411a57:	icebp  
  411a58:	mov    ecx,0xae911ca3
  411a5d:	pushf  
  411a5e:	stc    
  411a5f:	sub    eax,ebx
  411a61:	sbb    eax,0xdf7533e1
  411a66:	mov    ch,0x77
  411a68:	add    edi,DWORD PTR ds:0x1f095e10
  411a6e:	jg     0x411ae5
  411a70:	ficomp DWORD PTR [ebp-0x42a9b03]
  411a76:	adc    BYTE PTR [edi-0x28],0x34
  411a7a:	mov    BYTE PTR [eax+edi*8+0x4c596b0],ah
  411a81:	adc    ebx,esp
  411a83:	adc    eax,0x6a6d19d3
  411a88:	push   0x8f35769c
  411a8d:	jg     0x411a19
  411a8f:	and    al,0x14
  411a91:	sar    ecx,cl
  411a93:	jno    0x411aaf
  411a95:	mov    esp,0x6e79c6ca
  411a9a:	mov    ds:0x2903e5ab,al
  411a9f:	adc    al,0x20
  411aa1:	pop    ebx
  411aa2:	jae    0x411ad3
  411aa4:	push   ds
  411aa5:	sbb    DWORD PTR [esi],ebx
  411aa7:	hlt    
  411aa8:	sub    eax,0x829acba3
  411aad:	pop    ecx
  411aae:	jl     0x411a43
  411ab0:	dec    edx
  411ab1:	push   edi
  411ab2:	cmp    bl,BYTE PTR [eax-0x58]
  411ab5:	adc    ebp,DWORD PTR [edi]
  411ab7:	lds    eax,FWORD PTR [edi+0x51]
  411aba:	jge    0x411ac1
  411abc:	pop    edx
  411abd:	fsub   st,st(2)
  411abf:	dec    edi
  411ac0:	sub    eax,0x2968f509
  411ac5:	(bad)  
  411ac6:	ja     0x411b3f
  411ac8:	xor    DWORD PTR [edx-0x7a1a1135],0x4a
  411acf:	in     al,0x9
  411ad1:	add    eax,0xb4fd795
  411ad6:	scas   eax,DWORD PTR es:[edi]
  411ad7:	fcmovnb st,st(6)
  411ad9:	add    al,0x4d
  411adb:	pop    es
  411adc:	clc    
  411add:	and    al,0xfd
  411adf:	les    edx,FWORD PTR [ebp+0x79]
  411ae2:	arpl   WORD PTR [edx],di
  411ae4:	ins    BYTE PTR es:[edi],dx
  411ae5:	test   DWORD PTR [ecx+0xce9de65],ebp
  411aeb:	dec    esp
  411aec:	mov    eax,0x7a370e5d
  411af1:	mov    eax,0x710c0cbf
  411af6:	fld    TBYTE PTR [eax+edx*2+0x4b5fd022]
  411afd:	das    
  411afe:	xlat   BYTE PTR ds:[ebx]
  411aff:	fcmovne st,st(7)
  411b01:	jnp    0x411b73
  411b03:	in     eax,dx
  411b04:	pop    esi
  411b05:	test   DWORD PTR [ebp+0x77],ecx
  411b08:	cmp    eax,0x835fdc76
  411b0d:	mov    bl,0x59
  411b0f:	xchg   ebp,eax
  411b10:	fldenv [ebp+0x78]
  411b13:	aas    
  411b14:	sub    esp,DWORD PTR [eax]
  411b16:	shr    dh,1
  411b18:	cdq    
  411b19:	lea    edx,[esi]
  411b1b:	sbb    DWORD PTR [edx],ebx
  411b1d:	loopne 0x411aef
  411b1f:	repnz gs mov ecx,0x440ed38c
  411b26:	(bad)  
  411b27:	sub    esi,DWORD PTR [esp+esi*8]
  411b2a:	add    BYTE PTR [eax],dl
  411b2c:	sti    
  411b2d:	dec    ecx
  411b2e:	iret   
  411b2f:	sbb    DWORD PTR [esi+ecx*2-0x3f],edi
  411b33:	mov    esp,0x4b079da0
  411b38:	(bad)  
  411b39:	jns    0x411b6b
  411b3b:	popa   
  411b3c:	jmp    0xaa37:0x6cc473c
  411b43:	inc    edi
  411b44:	pop    esp
  411b45:	jmp    0x411b9b
  411b47:	retf   
  411b48:	leave  
  411b49:	stos   BYTE PTR es:[edi],al
  411b4a:	xor    DWORD PTR [edi-0x28],ebx
  411b4d:	xor    dl,dh
  411b4f:	xchg   esp,eax
  411b50:	jg     0x411b47
  411b52:	xor    esi,DWORD PTR [ecx]
  411b54:	fsubr  st(7),st
  411b56:	pop    esp
  411b57:	or     DWORD PTR [ecx-0x3],ebp
  411b5a:	xor    ch,BYTE PTR [ecx]
  411b5c:	push   esp
  411b5d:	loop   0x411af9
  411b5f:	mov    eax,ds:0x1ec57840
  411b64:	and    DWORD PTR [ebx-0x59],edx
  411b67:	jbe    0x411b3c
  411b69:	xchg   ecx,eax
  411b6a:	sbb    DWORD PTR [ecx-0x15],ebp
  411b6d:	mov    ah,0xbd
  411b6f:	push   edx
  411b70:	xchg   edi,eax
  411b71:	mov    ebp,0x34942d54
  411b76:	shl    DWORD PTR [ebp-0x78],cl
  411b79:	arpl   WORD PTR [eax-0x50e27468],bx
  411b7f:	xchg   DWORD PTR [eax+eiz*4],ecx
  411b82:	pop    ebp
  411b83:	ret    0x879a
  411b86:	xchg   esp,eax
  411b87:	push   ebp
  411b88:	adc    DWORD PTR [edi],0x7f
  411b8b:	fisttp QWORD PTR [esi]
  411b8d:	ret    0x61d2
  411b90:	push   edi
  411b91:	leave  
  411b92:	sbb    bh,BYTE PTR [eax-0x4b04f714]
  411b98:	fbstp  TBYTE PTR [eax+0x38]
  411b9b:	pop    esp
  411b9c:	pop    es
  411b9d:	xor    BYTE PTR [ebp+0x697ca4e],0x98
  411ba4:	(bad)  
  411ba5:	in     eax,dx
  411ba6:	xchg   edx,eax
  411ba7:	dec    edx
  411ba8:	hlt    
  411ba9:	or     esi,esi
  411bab:	inc    edx
  411bac:	add    al,0xf3
  411bae:	and    eax,DWORD PTR [ebp-0x25]
  411bb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bb2:	xor    al,0xf7
  411bb4:	fstp   DWORD PTR [edi+ebp*8]
  411bb7:	cmp    eax,0xcba10da0
  411bbc:	repnz iret 
  411bbe:	stc    
  411bbf:	mov    ds,WORD PTR [eax+0x4a]
  411bc2:	adc    DWORD PTR [ecx-0x5c],esp
  411bc5:	sub    BYTE PTR [esi-0x10],al
  411bc8:	adc    al,0x3c
  411bca:	lea    eax,[esp+0x24]
  411bce:	push   eax
  411bcf:	call   0x40f1e1
  411bd4:	mov    eax,DWORD PTR [esp+0x18]
  411bd8:	mov    ecx,DWORD PTR [esp+0x1c]
  411bdc:	push   DWORD PTR [ebp+0x18]
  411bdf:	mov    ebx,DWORD PTR [ebp+0xc]
  411be2:	push   DWORD PTR [ebp+0x14]
  411be5:	mov    esi,DWORD PTR [ebp+0x8]
  411be8:	push   DWORD PTR [ebp+0x10]
  411beb:	push   DWORD PTR [esp+0x20]
  411bef:	push   DWORD PTR [esp+0x20]
  411bf3:	push   DWORD PTR [esp+0x38]
  411bf7:	push   DWORD PTR [esp+0x38]
  411bfb:	call   0x401000
  411c00:	pop    esi
  411c01:	pop    ebx
  411c02:	mov    esp,ebp
  411c04:	pop    ebp
  411c05:	ret    0x14
  411c08:	push   ebp
  411c09:	mov    ebp,esp
  411c0b:	sub    esp,0x30
  411c0e:	mov    DWORD PTR [ebp-0x24],0x7c16
  411c15:	mov    DWORD PTR [ebp-0x20],0x53bd
  411c1c:	mov    DWORD PTR [ebp-0x18],0x3bd5
  411c23:	mov    DWORD PTR [ebp-0x1c],0x6ab6
  411c2a:	mov    DWORD PTR [ebp-0xc],0x4b9d
  411c31:	mov    DWORD PTR [ebp-0x8],0x7e48
  411c38:	mov    DWORD PTR [ebp-0x4],0x604b
  411c3f:	mov    DWORD PTR [ebp-0x30],0x5b69
  411c46:	mov    DWORD PTR [ebp-0x2c],0x4521
  411c4d:	mov    DWORD PTR [ebp-0x28],0x2979
  411c54:	mov    DWORD PTR [ebp-0x14],0x9e8
  411c5b:	mov    DWORD PTR [ebp-0x10],0x40e5
  411c62:	mov    ecx,DWORD PTR [ebp-0x4]
  411c65:	mov    eax,DWORD PTR [ebp-0x8]
  411c68:	add    ecx,0x1d04
  411c6e:	xor    ecx,eax
  411c70:	mov    eax,DWORD PTR [ebp-0xc]
  411c73:	and    ecx,0x6f79
  411c79:	imul   ecx,eax
  411c7c:	xor    ecx,0xe33ab1
  411c82:	push   esi
  411c83:	mov    DWORD PTR [ebp-0x4],0x5989
  411c8a:	mov    DWORD PTR [ebp-0x8],0x402c1
  411c91:	mov    DWORD PTR [ebp-0xc],0x4114
  411c98:	mov    eax,DWORD PTR [ebp-0xc]
  411c9b:	mov    esi,DWORD PTR [ebp-0x8]
  411c9e:	xor    edx,edx
  411ca0:	sub    eax,0x6cb6
  411ca5:	div    esi
  411ca7:	mov    edx,DWORD PTR [ebp-0x4]
  411caa:	mov    esi,DWORD PTR [ebp+0xc]
  411cad:	or     eax,edx
  411caf:	xor    eax,0x67f1
  411cb4:	mov    edx,ecx
  411cb6:	sub    edx,eax
  411cb8:	mov    DWORD PTR [ebp-0x4],edx
  411cbb:	mov    eax,DWORD PTR [ebp-0x4]
  411cbe:	mov    edx,DWORD PTR [ebp-0x4]
  411cc1:	mov    dl,BYTE PTR [edx+esi*1]
  411cc4:	mov    esi,DWORD PTR [ebp+0x8]
  411cc7:	mov    BYTE PTR [eax+esi*1],dl
  411cca:	mov    eax,DWORD PTR [ebp-0x10]
  411ccd:	mov    edx,DWORD PTR [ebp-0x14]
  411cd0:	jmp    0x411fd9
  411cd5:	xchg   esi,eax
  411cd6:	mov    dh,0x33
  411cd8:	push   edx
  411cd9:	xor    ebx,DWORD PTR [eax+edi*4-0x46]
  411cdd:	push   eax
  411cde:	ret    0x923c
  411ce1:	adc    al,0xf4
  411ce3:	mov    BYTE PTR [esp+ecx*4-0x714141a0],ah
  411cea:	ret    0xbebe
  411ced:	shl    BYTE PTR [eax-0x10c96e23],0xa0
  411cf4:	imul   eax,DWORD PTR [ebx+0x32736cac],0xfffffff2
  411cfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411cfc:	sbb    eax,0x8071ebfe
  411d01:	pop    edx
  411d02:	pusha  
  411d03:	in     eax,0x3a
  411d05:	cmp    DWORD PTR [ebp+0x715e7b2f],edi
  411d0b:	xchg   edx,eax
  411d0c:	dec    ecx
  411d0d:	fs dec ebx
  411d0f:	inc    edi
  411d10:	andnps xmm1,XMMWORD PTR [ebx-0x4b0fe637]
  411d17:	call   0x1e10a17
  411d1c:	(bad)  
  411d1d:	in     al,0x70
  411d1f:	cmp    BYTE PTR [eax],bl
  411d21:	loopne 0x411cdf
  411d23:	test   al,0x18
  411d25:	mov    ah,0x35
  411d27:	je     0x411d8d
  411d29:	in     al,0xee
  411d2b:	jp     0x411cd4
  411d2d:	in     al,dx
  411d2e:	pop    es
  411d2f:	sti    
  411d30:	jp     0x411cba
  411d32:	or     BYTE PTR [edx-0x7b54a9f1],cl
  411d38:	push   0xf516b0ec
  411d3d:	push   edi
  411d3e:	leave  
  411d3f:	push   esi
  411d40:	fcmovnb st,st(2)
  411d42:	fadd   QWORD PTR [edx-0x5733b9cb]
  411d48:	inc    eax
  411d49:	in     eax,0x7e
  411d4b:	and    bl,BYTE PTR [esp+ebx*8-0x68]
  411d4f:	loope  0x411d31
  411d51:	repz pop esp
  411d53:	mov    esp,0x2c604950
  411d58:	push   ss
  411d59:	int    0x46
  411d5b:	jmp    0x37bbf4e8
  411d60:	push   esi
  411d61:	xchg   ebp,eax
  411d62:	jle    0x411d64
  411d64:	es xchg ebp,eax
  411d66:	int3   
  411d67:	cmp    eax,0x274109de
  411d6c:	mov    bh,0x1e
  411d6e:	mov    ebp,0xf4b5fa11
  411d73:	sbb    eax,DWORD PTR [edx-0x5c]
  411d76:	sahf   
  411d77:	loope  0x411d1f
  411d79:	pop    ebx
  411d7a:	sub    al,0x86
  411d7c:	sub    BYTE PTR [ebp-0x12],cl
  411d7f:	add    DWORD PTR [edx+0x40],esp
  411d82:	pop    edx
  411d83:	fild   QWORD PTR [ecx+0x75]
  411d86:	inc    esi
  411d87:	mov    al,0xf4
  411d89:	sub    eax,0xd4b796b6
  411d8e:	xchg   esi,eax
  411d8f:	xchg   ecx,eax
  411d90:	repz jbe 0x411d57
  411d93:	ja     0x411d32
  411d95:	xchg   edi,eax
  411d96:	inc    ebx
  411d97:	push   eax
  411d98:	in     eax,0x90
  411d9a:	inc    edx
  411d9b:	cdq    
  411d9c:	data16 ins BYTE PTR es:[edi],dx
  411d9e:	mov    ch,0xa1
  411da0:	push   edx
  411da1:	scas   eax,DWORD PTR es:[edi]
  411da2:	cdq    
  411da3:	(bad)  
  411da4:	jo     0x411de2
  411da6:	js     0x411d5b
  411da8:	mov    dh,0x15
  411daa:	aad    0xa6
  411dac:	sub    eax,0x9097b1e0
  411db1:	dec    ebp
  411db2:	scas   eax,DWORD PTR es:[edi]
  411db3:	inc    edx
  411db4:	std    
  411db5:	xchg   dl,al
  411db7:	jp     0x411d87
  411db9:	jne    0x411d3f
  411dbb:	stos   BYTE PTR es:[edi],al
  411dbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411dbd:	adc    esp,0x7ac0b4c2
  411dc3:	cmp    al,0x15
  411dc5:	mov    ebx,0x388e64ec
  411dca:	int3   
  411dcb:	dec    edx
  411dcc:	mov    esi,0x8ece45b0
  411dd1:	(bad)  
  411dd2:	mov    ah,0x5f
  411dd4:	mov    bh,0x1f
  411dd6:	add    eax,0x7b58a0c8
  411ddb:	popf   
  411ddc:	(bad)  
  411ddd:	push   ss
  411dde:	mov    ebp,0x2478a006
  411de3:	push   0x53395a8b
  411de8:	in     eax,dx
  411de9:	out    dx,al
  411dea:	lds    edx,FWORD PTR [esi]
  411dec:	fistp  QWORD PTR [ebx+0x4f8bb754]
  411df2:	mov    edx,0xf01fb102
  411df7:	mov    ah,0x3f
  411df9:	dec    esi
  411dfa:	mov    bl,0xa5
  411dfc:	cs jecxz 0x411df1
  411dff:	add    ch,ah
  411e01:	cli    
  411e02:	rol    esp,1
  411e04:	sbb    edi,DWORD PTR [esi]
  411e06:	jmp    0x8a37:0xba6a58a6
  411e0d:	in     eax,dx
  411e0e:	mov    ah,0xb4
  411e10:	push   edi
  411e11:	dec    ecx
  411e12:	loopne 0x411e56
  411e14:	inc    ebx
  411e15:	sub    BYTE PTR [edi],dh
  411e17:	scas   eax,DWORD PTR es:[edi]
  411e18:	and    BYTE PTR [ecx],al
  411e1a:	adc    BYTE PTR [ecx+0x30],bh
  411e1d:	inc    edi
  411e1e:	in     eax,dx
  411e1f:	xlat   BYTE PTR ds:[ebx]
  411e20:	mov    cl,0x9a
  411e22:	add    BYTE PTR [edi-0x2d5163e2],cl
  411e28:	adc    eax,0x98b711ad
  411e2d:	jo     0x411e70
  411e2f:	xor    al,0xe3
  411e31:	sbb    esp,ebp
  411e33:	js     0x411ea8
  411e35:	(bad)
  411e39:	mov    ah,0xc6
  411e3b:	xchg   edx,eax
  411e3c:	adc    DWORD PTR [esi],edx
  411e3e:	push   esi
  411e3f:	nop
  411e40:	or     al,0x3a
  411e42:	add    edx,esi
  411e44:	xchg   esp,eax
  411e45:	dec    eax
  411e46:	loopne 0x411dfa
  411e48:	or     BYTE PTR [ebx+0x54],dh
  411e4b:	sbb    BYTE PTR [ebx-0x230725b0],0x51
  411e52:	xchg   esi,eax
  411e53:	(bad)  
  411e54:	ds in  eax,dx
  411e56:	and    eax,0xeca16556
  411e5b:	push   edx
  411e5c:	sub    eax,0xa5602fd9
  411e61:	xor    DWORD PTR [ecx-0x2],0x36
  411e65:	and    al,BYTE PTR [edi+0x2043d66]
  411e6b:	push   esi
  411e6c:	iret   
  411e6d:	rcr    edx,0x6
  411e70:	xor    BYTE PTR [ebx],al
  411e72:	sbb    bl,0x5f
  411e75:	sbb    BYTE PTR [edi],0x81
  411e78:	add    ecx,ebp
  411e7a:	aaa    
  411e7b:	dec    eax
  411e7c:	pop    ss
  411e7d:	mov    edx,0xf46c66ba
  411e82:	int3   
  411e83:	into   
  411e84:	inc    eax
  411e85:	jo     0x411ec4
  411e87:	mov    al,0x98
  411e89:	adc    DWORD PTR [ebx],ebp
  411e8b:	mov    esi,ebp
  411e8d:	xchg   edx,eax
  411e8e:	outs   dx,BYTE PTR ds:[esi]
  411e8f:	inc    esp
  411e90:	mov    esp,0xf403c84a
  411e95:	and    esp,DWORD PTR [ecx]
  411e97:	push   es
  411e98:	call   0x9ca6:0x9e1251da
  411e9f:	rcl    BYTE PTR [esi+0x5738255f],0x1d
  411ea6:	mov    bh,0x83
  411ea8:	dec    edx
  411ea9:	call   0x4531:0xf738154d
  411eb0:	das    
  411eb1:	outs   dx,BYTE PTR ds:[esi]
  411eb2:	ins    DWORD PTR es:[edi],dx
  411eb3:	sub    ebp,esi
  411eb5:	cli    
  411eb6:	sub    ebp,DWORD PTR [ecx+0x49]
  411eb9:	dec    DWORD PTR [ebx]
  411ebb:	call   0x665978d2
  411ec0:	and    edi,eax
  411ec2:	push   edi
  411ec3:	fnstcw WORD PTR [edi-0x5a0dc6ca]
  411ec9:	cli    
  411eca:	int    0x51
  411ecc:	pop    edi
  411ecd:	call   0x85fd:0xb499b412
  411ed4:	imul   ch
  411ed6:	xchg   ebp,eax
  411ed7:	push   edi
  411ed8:	push   0x8cf297d9
  411edd:	xlat   BYTE PTR ds:[ebx]
  411ede:	mul    BYTE PTR [ebp+0x67]
  411ee1:	dec    edx
  411ee2:	xchg   edi,eax
  411ee3:	les    ecx,FWORD PTR [edx+0x5]
  411ee6:	jns    0x411e76
  411ee8:	sahf   
  411ee9:	push   esp
  411eea:	inc    DWORD PTR [ecx-0x456fb02a]
  411ef0:	or     al,0x4a
  411ef2:	lea    edi,[edx-0x1c6a05ee]
  411ef8:	addr16 cmc 
  411efa:	lock in eax,0x58
  411efd:	jmp    0x9c10a39f
  411f02:	xchg   edx,eax
  411f03:	xor    al,0x60
  411f05:	xchg   esp,eax
  411f06:	jecxz  0x411f40
  411f08:	mov    ecx,0x903d1704
  411f0d:	mov    al,ds:0x93dca98f
  411f12:	push   0xffffff8f
  411f14:	sbb    BYTE PTR [ebx+eiz*2+0xf],dh
  411f18:	pop    edi
  411f19:	and    edx,esi
  411f1b:	pop    ebp
  411f1c:	aaa    
  411f1d:	push   edx
  411f1e:	xchg   ecx,eax
  411f1f:	push   0x52a01429
  411f24:	jb     0x411eef
  411f26:	int3   
  411f27:	and    BYTE PTR [edi-0x784cdbf1],0x10
  411f2e:	add    BYTE PTR [eax+0x38],dl
  411f31:	mov    ds:0xdf3b65ef,al
  411f36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f37:	adc    eax,0xa699070d
  411f3c:	pop    esp
  411f3d:	sub    eax,0xc2db5d17
  411f42:	jb     0x411f53
  411f44:	mov    esi,0xfae9b9fc
  411f49:	sbb    edi,ebp
  411f4b:	scas   eax,DWORD PTR es:[edi]
  411f4c:	inc    ebx
  411f4d:	pop    ds
  411f4e:	and    eax,0x266fcb1f
  411f53:	sub    eax,DWORD PTR [ecx+0x453790e3]
  411f59:	in     al,0xd7
  411f5b:	xor    al,0x8b
  411f5d:	(bad)  [eax+0x61bf33a]
  411f63:	cwde   
  411f64:	push   es
  411f65:	xor    cl,BYTE PTR [edi+0xb]
  411f68:	imul   edi,DWORD PTR [edi],0x3
  411f6b:	add    DWORD PTR [eax-0x1c],esi
  411f6e:	xchg   DWORD PTR [ecx-0x6934c17b],ebp
  411f74:	in     eax,dx
  411f75:	es sub al,al
  411f78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f79:	mov    ch,0x80
  411f7b:	rol    BYTE PTR [eax+0x31],1
  411f7e:	and    al,0x88
  411f80:	cmp    BYTE PTR [edi+0x51e48711],dl
  411f86:	xchg   edx,eax
  411f87:	sbb    DWORD PTR [eax+ecx*2-0x537eab24],esi
  411f8e:	leave  
  411f8f:	xchg   edi,eax
  411f90:	add    ch,dl
  411f92:	bound  ecx,QWORD PTR [esi+edx*2]
  411f95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f96:	mov    ah,0x65
  411f98:	stos   DWORD PTR es:[edi],eax
  411f99:	dec    ebp
  411f9a:	sbb    al,0xd6
  411f9c:	mov    ecx,0x7d869264
  411fa1:	inc    esp
  411fa2:	aaa    
  411fa3:	xchg   ecx,eax
  411fa4:	dec    ebx
  411fa5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411fa6:	xchg   BYTE PTR [ebx],cl
  411fa8:	mov    eax,0x9873188c
  411fad:	loop   0x411f72
  411faf:	jnp    0x41202a
  411fb1:	inc    ecx
  411fb2:	mov    dh,0x37
  411fb4:	mov    ebp,0xef910768
  411fb9:	in     al,dx
  411fba:	push   edx
  411fbb:	push   edx
  411fbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411fbd:	sbb    DWORD PTR es:[edx+edi*1-0x90bddf6],esi
  411fc5:	lahf   
  411fc6:	ret    
  411fc7:	pop    ebp
  411fc8:	call   0xd42e:0x1367c268
  411fcf:	or     dh,BYTE PTR [esi-0x5b]
  411fd2:	sbb    edi,edi
  411fd4:	push   ds
  411fd5:	lahf   
  411fd6:	ficom  WORD PTR [esp+edi*2+0x69]
  411fda:	rcl    BYTE PTR [eax+0x23043bd2],0xc2
  411fe1:	or     eax,0x1a40
  411fe6:	xor    eax,0x1ac1
  411feb:	add    ecx,eax
  411fed:	mov    eax,DWORD PTR [ebp-0x18]
  411ff0:	mov    edx,0x7380
  411ff5:	sub    edx,eax
  411ff7:	add    edx,DWORD PTR [ebp-0x1c]
  411ffa:	mov    eax,DWORD PTR [ebp-0x20]
  411ffd:	xor    edx,eax
  411fff:	mov    eax,DWORD PTR [ebp-0x24]
  412002:	and    edx,eax
  412004:	mov    eax,DWORD PTR [ebp+0x10]
  412007:	jmp    0x412310
  41200c:	icebp  
  41200d:	or     DWORD PTR [ebp+0x7c3cad28],0xcf30669c
  412017:	nop
  412018:	cs cmp al,0x5a
  41201b:	rcr    DWORD PTR [esi+eiz*2-0x42],1
  41201f:	mov    esi,0xbebec28e
  412024:	push   ebp
  412025:	jg     0x41205c
  412027:	fld    DWORD PTR [esi+0x50b98575]
  41202d:	call   0x5cb5:0x1f9676d0
  412034:	ins    DWORD PTR es:[edi],dx
  412035:	inc    ebx
  412036:	sbb    BYTE PTR [esi-0x41],dl
  412039:	out    dx,eax
  41203a:	mov    ebx,0xf1dccb76
  41203f:	mov    dl,0x72
  412041:	out    0xe2,eax
  412043:	repz data16 aas 
  412046:	xor    bl,BYTE PTR [esp+ebp*8+0x1afc48fb]
  41204d:	jge    0x412018
  41204f:	test   DWORD PTR [esi],ebx
  412051:	mov    esp,0xb3e6db72
  412056:	lsl    ebx,ax
  412059:	fwait
  41205a:	(bad)  
  41205b:	mov    bl,0x5a
  41205d:	mov    bl,0xfe
  41205f:	dec    eax
  412060:	mov    ebp,0x58bdbc67
  412065:	or     DWORD PTR [eax],esp
  412067:	retf   
  412068:	push   edi
  412069:	call   0xfe72:0x4936db28
  412070:	xchg   edi,eax
  412071:	xchg   edi,eax
  412072:	xor    al,0xff
  412074:	xlat   BYTE PTR ds:[ebx]
  412075:	addr16 pop ss
  412077:	or     eax,0x1246131d
  41207c:	test   al,0xed
  41207e:	lea    eax,[esi+0x34]
  412081:	lea    esi,[ebx-0x5]
  412084:	pop    ecx
  412085:	push   0x37
  412087:	nop
  412088:	dec    ebp
  412089:	ret    0x47ff
  41208c:	cmp    ebp,DWORD PTR [ebp+0x1397dcb5]
  412092:	ins    BYTE PTR es:[edi],dx
  412093:	mov    ecx,0xcb801cc3
  412098:	lahf   
  412099:	pop    ebp
  41209a:	add    eax,0xbe68ead7
  41209f:	js     0x4120a8
  4120a1:	xchg   DWORD PTR [edx],esi
  4120a3:	(bad)  
  4120a4:	ja     0x4120c1
  4120a6:	and    DWORD PTR [ecx-0x23e2e101],ebx
  4120ac:	std    
  4120ad:	imul   edi,DWORD PTR [edi+0x30],0xc8e2c4e5
  4120b4:	sbb    al,al
  4120b6:	inc    edx
  4120b7:	inc    ecx
  4120b8:	cmp    al,0xdc
  4120ba:	fiadd  WORD PTR [ebx]
  4120bc:	dec    esp
  4120bd:	enter  0xeab0,0x69
  4120c1:	outs   dx,DWORD PTR ds:[esi]
  4120c2:	rcr    ebp,0x6a
  4120c5:	mov    edx,0x1380fc3d
  4120ca:	inc    edi
  4120cb:	(bad)  
  4120cc:	fsub   st(5),st
  4120ce:	inc    edx
  4120cf:	call   0x586e6925
  4120d4:	stos   BYTE PTR es:[edi],al
  4120d5:	mov    gs,WORD PTR [esi-0x5a]
  4120d8:	lock aaa 
  4120da:	adc    DWORD PTR [esi-0x5618ec2f],edx
  4120e0:	aad    0xe8
  4120e2:	jns    0x412138
  4120e4:	lock pop ds
  4120e6:	jp     0x412158
  4120e8:	sbb    BYTE PTR [ecx-0x80],dl
  4120eb:	in     eax,0xb8
  4120ed:	fistp  QWORD PTR [ecx-0x1b2f1dec]
  4120f3:	aas    
  4120f4:	sub    DWORD PTR [ebp-0x36735fa],0xff57472a
  4120fe:	enter  0x8818,0xbf
  412102:	sub    eax,0x81afed1
  412107:	mov    bh,0xf6
  412109:	push   edx
  41210a:	ror    DWORD PTR [eax],cl
  41210c:	fstp   QWORD PTR [di+0x7e]
  412110:	xor    eax,0x42dfe300
  412115:	mov    eax,0x9842d9ed
  41211a:	mov    ebp,0x2580a2fc
  41211f:	outs   dx,DWORD PTR ds:[esi]
  412120:	jecxz  0x41218d
  412122:	loope  0x412124
  412124:	retf   0x8951
  412127:	cld    
  412128:	nop
  412129:	lods   eax,DWORD PTR ds:[esi]
  41212a:	and    eax,0xaf19ee3f
  41212f:	xchg   edx,eax
  412130:	(bad)  
  412131:	adc    BYTE PTR [eax+0x6],al
  412134:	mov    esi,0x1f14c82f
  412139:	mov    es,WORD PTR [ebp*8+0x75b7706c]
  412140:	jns    0x4120d4
  412142:	pusha  
  412143:	popf   
  412144:	in     al,dx
  412145:	jmp    0x412150
  412147:	lds    esp,FWORD PTR [ebp+0x1c9fb61d]
  41214d:	test   BYTE PTR [ecx+0x71],dl
  412150:	inc    eax
  412151:	scas   al,BYTE PTR es:[edi]
  412152:	(bad)  
  412154:	inc    esi
  412155:	gs aaa 
  412157:	lods   al,BYTE PTR ds:[esi]
  412158:	loope  0x412160
  41215a:	data16 loope 0x41219c
  41215d:	xor    cl,BYTE PTR [edx]
  41215f:	inc    eax
  412160:	loop   0x41210b
  412162:	into   
  412163:	jmp    0x4121ba
  412165:	les    eax,FWORD PTR [esi-0x1e]
  412168:	pop    ebp
  412169:	in     eax,0x4c
  41216b:	add    edx,DWORD PTR [ebp-0x55a9ae35]
  412171:	cmp    DWORD PTR [ebp+eax*1+0x5e],ebx
  412175:	out    0x2e,eax
  412177:	iret   
  412178:	sbb    al,0x8b
  41217a:	push   DWORD PTR [edi-0x6d]
  41217d:	and    al,0x73
  41217f:	pushf  
  412180:	mov    edi,0x6c7450cc
  412185:	ja     0x41213f
  412187:	(bad)  
  412189:	loop   0x4121a7
  41218b:	mov    dh,0x7d
  41218d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41218e:	test   BYTE PTR [ebx-0x3d0c572],ah
  412194:	inc    BYTE PTR [eax]
  412196:	aad    0x8c
  412198:	ror    esi,cl
  41219a:	push   es
  41219b:	out    dx,eax
  41219c:	es jo  0x4121ad
  41219f:	in     eax,dx
  4121a0:	sub    BYTE PTR [eax-0x78],cl
  4121a3:	(bad)  
  4121a4:	jne    0x412153
  4121a6:	mov    ?,WORD PTR [ecx-0x2c]
  4121a9:	mov    edx,0x242cffd8
  4121ae:	adc    BYTE PTR [ebp-0x72],0xb
  4121b2:	inc    esp
  4121b3:	add    ecx,eax
  4121b5:	fdivp  st(2),st
  4121b7:	inc    edi
  4121b8:	int3   
  4121b9:	push   edx
  4121ba:	xlat   BYTE PTR ds:[ebx]
  4121bb:	xor    dh,BYTE PTR [esi]
  4121bd:	pop    eax
  4121be:	xchg   ecx,eax
  4121bf:	and    eax,DWORD PTR [ebp+0x310efdc5]
  4121c5:	push   0x805f06fb
  4121ca:	call   0x38a61efb
  4121cf:	xor    ebp,eax
  4121d1:	inc    eax
  4121d2:	jnp    0x4121e4
  4121d4:	dec    ecx
  4121d5:	jl     0x412256
  4121d7:	mov    DWORD PTR [edi],ecx
  4121d9:	lahf   
  4121da:	jg     0x4121f4
  4121dc:	repz test al,0x4b
  4121df:	push   0x27e17b00
  4121e4:	or     eax,0x3d853a9a
  4121e9:	in     eax,0xa
  4121eb:	mov    dl,0x7c
  4121ed:	push   0x0
  4121ef:	dec    eax
  4121f0:	les    esi,FWORD PTR [edi-0x59]
  4121f3:	repz sbb esp,ebp
  4121f6:	rcl    DWORD PTR ds:0x1de02bc7,1
  4121fc:	jge    0x412246
  4121fe:	inc    DWORD PTR [edx-0x1f]
  412201:	je     0x412212
  412203:	dec    esp
  412204:	adc    BYTE PTR [ebp+0x46978f1f],dh
  41220a:	push   cs
  41220b:	inc    esp
  41220c:	jp     0x4121cc
  41220e:	and    esi,esp
  412210:	mov    ch,0x31
  412212:	cs adc bh,0x4d
  412216:	mov    ds:0xe307928b,al
  41221b:	mov    ebx,0xee892323
  412220:	popaw  
  412222:	or     edx,eax
  412224:	sbb    al,0x8b
  412226:	mov    edi,DWORD PTR [ebp+0x29]
  412229:	push   0xd918d710
  41222e:	ficom  DWORD PTR [ebx-0x120f917]
  412234:	add    eax,ebp
  412236:	cmp    BYTE PTR [ebx+0x7d1c8da6],dh
  41223c:	cmp    esp,DWORD PTR [eax+0x29]
  41223f:	xchg   esp,eax
  412240:	add    BYTE PTR [eax-0x7],0x6b
  412244:	and    ecx,DWORD PTR fs:[ebx+0x209d2722]
  41224b:	fstp   TBYTE PTR [edx]
  41224d:	sbb    edx,DWORD PTR [esi+0x23b88722]
  412253:	pop    eax
  412254:	xchg   ebx,eax
  412255:	jbe    0x412217
  412257:	test   ebx,ebp
  412259:	js     0x412202
  41225b:	cmp    ah,BYTE PTR [edi+0x4b]
  41225e:	push   esp
  41225f:	mov    ds:0x4c4cf5ea,al
  412264:	test   BYTE PTR [eax+0x4a],0x0
  412268:	ret    0xd913
  41226b:	ja     0x412217
  41226d:	adc    eax,0x9467ea7f
  412272:	cli    
  412273:	in     al,0x3c
  412275:	lea    esp,[edx*2+0x48b31ad9]
  41227c:	inc    esi
  41227d:	lods   eax,DWORD PTR ds:[esi]
  41227e:	retf   
  41227f:	retf   0xdb47
  412282:	popf   
  412283:	fst    DWORD PTR [esi+0x13]
  412286:	push   edx
  412287:	and    ebp,ecx
  412289:	or     dh,bh
  41228b:	test   DWORD PTR [ebp-0x40000c1e],ebx
  412291:	popf   
  412292:	jb     0x4122c4
  412294:	push   edx
  412295:	mov    ebp,DWORD PTR [ebx+ebx*2]
  412298:	(bad)  
  412299:	and    bh,BYTE PTR [edx]
  41229b:	out    dx,eax
  41229c:	sbb    esi,DWORD PTR [esi+ebx*1+0x2]
  4122a0:	and    eax,0x3d60f2e6
  4122a5:	push   edi
  4122a6:	js     0x4122b5
  4122a8:	xor    dh,cl
  4122aa:	mov    ds:0xcf40a3b9,eax
  4122af:	and    edx,DWORD PTR [edi+0x46641561]
  4122b5:	inc    edx
  4122b6:	imul   DWORD PTR [edi]
  4122b8:	push   DWORD PTR [esi+esi*8+0x6736b00f]
  4122bf:	bound  esp,QWORD PTR [eax]
  4122c1:	mov    edx,0xaa3c5a1b
  4122c6:	sub    BYTE PTR [ebp-0x27],cl
  4122c9:	push   0x33
  4122cb:	push   0x5d
  4122cd:	idiv   esi
  4122cf:	(bad)  
  4122d0:	out    dx,eax
  4122d1:	out    0x38,eax
  4122d3:	and    esi,DWORD PTR [esi+0x10]
  4122d6:	push   ebp
  4122d7:	arpl   bp,di
  4122d9:	mov    esi,0x873fb623
  4122de:	les    ebp,FWORD PTR [edx-0x5d0e8bd2]
  4122e4:	push   cs
  4122e5:	ins    DWORD PTR es:[edi],dx
  4122e6:	sbb    DWORD PTR [edi-0x45],0x2abc9283
  4122ed:	mov    ebp,0x6a3cef55
  4122f2:	or     esi,DWORD PTR [edi]
  4122f4:	push   ecx
  4122f5:	xchg   esi,eax
  4122f6:	in     al,dx
  4122f7:	out    0x48,eax
  4122f9:	vpmaddwd ymm1,ymm0,YMMWORD PTR [eax]
  4122fd:	jnp    0x412342
  4122ff:	pop    esi
  412300:	(bad)  
  412301:	pop    esi
  412302:	cmp    al,0xbb
  412304:	into   
  412305:	imul   BYTE PTR [ecx-0x58c51a90]
  41230b:	add    BYTE PTR [edx-0x7ef67fd5],dh
  412311:	repnz adc eax,0x2b000070
  412317:	ret    0x558b
  41231a:	fmul   DWORD PTR [ebx-0x1d7e2b8b]
  412320:	jnp    0x41234c
  412322:	add    BYTE PTR [eax],al
  412324:	lea    edx,[edx+esi*1-0x3571]
  41232b:	mov    esi,DWORD PTR [ebp-0x30]
  41232e:	shr    edx,1
  412330:	or     edx,esi
  412332:	mov    esi,ecx
  412334:	sub    esi,edx
  412336:	add    esi,0x4751
  41233c:	cmp    esi,eax
  41233e:	jbe    0x411c83
  412344:	pop    esi
  412345:	leave  
  412346:	ret    0xc
  412349:	push   ebp
  41234a:	mov    ebp,esp
  41234c:	sub    esp,0x80
  412352:	push   ebx
  412353:	jmp    0x41268c
  412358:	push   0xffffffd2
  41235a:	jnp    0x4122dc
  41235c:	jl     0x412306
  41235e:	mov    edx,0xa0fab73b
  412363:	nop
  412364:	in     al,0x36
  412366:	adc    BYTE PTR [esi-0x414193d4],bl
  41236c:	in     eax,dx
  41236d:	les    edi,FWORD PTR [esi-0x1647f42]
  412373:	mov    ebx,DWORD PTR ds:0xcf5b2ed7
  412379:	mov    edi,0xcda9e637
  41237e:	mov    bh,0x7b
  412380:	ficomp WORD PTR [ebx+eiz*8+0x57]
  412384:	dec    eax
  412385:	js     0x4123f2
  412387:	je     0x412364
  412389:	data16 (bad) 
  41238b:	out    dx,al
  41238c:	xor    edx,DWORD PTR [eax+0x766f4745]
  412392:	(bad)  
  412393:	mov    esp,0x15e6924
  412398:	dec    esi
  412399:	(bad)  [edi+0x20f307d1]
  41239f:	add    edi,eax
  4123a1:	adc    esi,esp
  4123a3:	mov    eax,ds:0x94e9b09f
  4123a8:	loope  0x412334
  4123aa:	(bad)  
  4123ab:	jle    0x412418
  4123ad:	imul   edx,DWORD PTR [ebp+0x9a8b5d1],0x601e1a3c
  4123b7:	rol    BYTE PTR [ecx],1
  4123b9:	xor    DWORD PTR [eax+edx*2-0x7edf3c61],esp
  4123c0:	fadd   st(0),st
  4123c2:	cli    
  4123c3:	jno    0x4123d5
  4123c5:	ret    0x3027
  4123c8:	inc    esi
  4123c9:	pop    edi
  4123ca:	or     DWORD PTR [ecx+0x6bebb54f],ecx
  4123d0:	push   0xced76250
  4123d5:	sbb    al,0xa5
  4123d7:	inc    edx
  4123d8:	jae    0x41243e
  4123da:	jl     0x4123da
  4123dc:	nop
  4123dd:	or     DWORD PTR [esi-0x2d],edx
  4123e0:	jl     0x4123bd
  4123e2:	sbb    eax,0x2ab3e89c
  4123e7:	test   eax,0x323b14bf
  4123ec:	aam    0x79
  4123ee:	ds in  al,dx
  4123f0:	adc    eax,0xaf911fa7
  4123f5:	dec    ebp
  4123f6:	adc    al,0x47
  4123f8:	push   esp
  4123f9:	(bad)  
  4123fa:	mov    ah,BYTE PTR [eax]
  4123fc:	jns    0x4123d2
  4123fe:	out    0x54,eax
  412400:	mov    edi,ss
  412402:	mov    esp,0x8f0b7fec
  412407:	or     DWORD PTR [ebp+0x29],ecx
  41240a:	les    ebp,FWORD PTR ds:0xe3c0b360
  412410:	bswap  esp
  412412:	sbb    DWORD PTR [eax+ebp*8-0x66],ebx
  412416:	popa   
  412417:	xchg   edi,eax
  412418:	stos   BYTE PTR es:[edi],al
  412419:	aaa    
  41241a:	idiv   BYTE PTR [ecx]
  41241c:	in     eax,0x5f
  41241e:	outs   dx,DWORD PTR ds:[esi]
  41241f:	mov    fs:0xc6e90496,eax
  412425:	add    eax,0xe8700e14
  41242a:	rcr    ebp,0xe2
  41242d:	fdiv   QWORD PTR [ebp-0x70a2c132]
  412433:	inc    esp
  412434:	(bad)  
  412435:	adc    bh,BYTE PTR [ecx+0x13c835c0]
  41243b:	push   ds
  41243c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41243d:	push   ecx
  41243e:	push   ds
  41243f:	sub    BYTE PTR [edx+0x60c0c63a],ch
  412445:	fidivr DWORD PTR [eax+0x19ebdf91]
  41244b:	arpl   WORD PTR [eax],sp
  41244d:	and    eax,0xca721af1
  412452:	stos   BYTE PTR es:[edi],al
  412453:	outs   dx,BYTE PTR ds:[esi]
  412454:	pop    eax
  412455:	addr16 sbb eax,0xd490c2c7
  41245b:	fcmovu st,st(5)
  41245d:	sub    ebp,edx
  41245f:	push   esp
  412460:	outs   dx,BYTE PTR ds:[esi]
  412461:	jne    0x41241a
  412463:	add    edx,DWORD PTR [ecx]
  412465:	aaa    
  412466:	mov    edi,0xb08be75a
  41246b:	mov    ah,0x62
  41246d:	ss pop edi
  41246f:	xchg   esi,eax
  412470:	ja     0x4124d3
  412472:	dec    ebp
  412473:	ja     0x4124d0
  412475:	jb     0x412414
  412477:	bound  ebx,QWORD PTR [ecx-0x65]
  41247a:	push   0x48564f83
  41247f:	sub    esp,ebp
  412481:	idiv   BYTE PTR [ebp-0xaf6ba52]
  412487:	lds    esi,FWORD PTR [ebp-0x67]
  41248a:	dec    ebp
  41248b:	push   ebp
  41248c:	daa    
  41248d:	jle    0x412432
  41248f:	ficom  DWORD PTR [edi-0x8]
  412492:	scas   eax,DWORD PTR es:[edi]
  412493:	lods   eax,DWORD PTR ds:[esi]
  412494:	retf   
  412495:	ins    DWORD PTR es:[edi],dx
  412496:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412497:	out    0x62,eax
  412499:	jle    0x4124a7
  41249b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41249c:	data16 fild DWORD PTR [edx+0x7e]
  4124a0:	int3   
  4124a1:	cmp    bh,BYTE PTR [ebx+0x400f7196]
  4124a7:	push   ds
  4124a8:	sub    cl,0x4c
  4124ab:	xchg   ebp,eax
  4124ac:	pop    es
  4124ad:	neg    BYTE PTR ds:0x2a82c539
  4124b3:	sbb    bl,BYTE PTR [eax+0x3046fd54]
  4124b9:	into   
  4124ba:	add    DWORD PTR [edi],edi
  4124bc:	xchg   DWORD PTR [ebp+eiz*4-0x5ea6d2f],edi
  4124c3:	sbb    ebx,DWORD PTR [edi+0x5018ebe5]
  4124c9:	mov    cl,BYTE PTR [esi-0x1e41d30c]
  4124cf:	(bad)  
  4124d0:	jl     0x412532
  4124d2:	pop    ebp
  4124d3:	imul   ecx,ecx,0x60cf1ac5
  4124d9:	adc    DWORD PTR [eax+0x5d],0xffffff85
  4124dd:	dec    esi
  4124de:	or     DWORD PTR [ebx],edi
  4124e0:	push   eax
  4124e1:	out    dx,eax
  4124e2:	xchg   ebx,eax
  4124e3:	repnz rcr BYTE PTR [ecx-0x1],cl
  4124e7:	pop    edi
  4124e8:	adc    ecx,DWORD PTR [edi-0x6fe438a3]
  4124ee:	adc    DWORD PTR ds:[esi+0x6f4a032d],eax
  4124f5:	retf   0xcc92
  4124f8:	popa   
  4124f9:	adc    DWORD PTR [ebx],eax
  4124fb:	mov    ecx,eax
  4124fd:	ds add al,0x82
  412500:	test   BYTE PTR [eax+esi*2-0x4e],0xb9
  412505:	sti    
  412506:	test   dl,cl
  412508:	xchg   edx,esp
  41250a:	call   FWORD PTR [esp+eiz*8-0x28]
  41250e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41250f:	xor    eax,0x1daf02b2
  412514:	mov    es,WORD PTR [edx+edi*2]
  412517:	imul   esi,DWORD PTR [esi+0x1f],0x4643051e
  41251e:	inc    edx
  41251f:	out    dx,al
  412520:	and    dl,cl
  412522:	aaa    
  412523:	jg     0x41256b
  412525:	sar    dh,cl
  412527:	jmp    0x1ff0f989
  41252c:	mov    eax,0x1ab5db83
  412531:	aas    
  412532:	or     DWORD PTR [edx-0x64cf1dd9],ebp
  412538:	adc    bl,dl
  41253a:	add    DWORD PTR [edi-0x71],edx
  41253d:	xor    ah,cl
  41253f:	mov    cs,WORD PTR [ebx-0x11596f02]
  412545:	pop    es
  412546:	mov    ah,0x53
  412548:	mov    ch,0x68
  41254a:	mov    ds:0xa46c9c68,eax
  41254f:	inc    edi
  412550:	test   eax,0x377d75a5
  412555:	out    0x56,al
  412557:	fidiv  DWORD PTR [ecx]
  412559:	inc    edi
  41255a:	cmp    DWORD PTR [ecx],esi
  41255c:	jecxz  0x4125d9
  41255e:	adc    eax,0x9583dba4
  412563:	jmp    0x5d7261ac
  412568:	add    cl,BYTE PTR [ebp+0x59]
  41256b:	mov    edx,0x35f5b1fe
  412570:	jne    0x41254c
  412572:	sbb    eax,0x79eb8c0
  412577:	ins    DWORD PTR es:[edi],dx
  412578:	jp     0x41254b
  41257a:	fidiv  DWORD PTR [eax+0x1c]
  41257d:	sbb    eax,DWORD PTR [edi]
  41257f:	sbb    ecx,DWORD PTR [edi]
  412581:	mov    al,0x11
  412583:	sar    DWORD PTR [ecx+0x6e],1
  412586:	dec    ebx
  412587:	(bad)
  41258a:	icebp  
  41258b:	leave  
  41258c:	leave  
  41258d:	sub    BYTE PTR [esi-0x25057f19],cl
  412593:	icebp  
  412594:	out    0xa7,eax
  412596:	sbb    esi,ebp
  412598:	mov    bl,BYTE PTR [eax]
  41259a:	pop    ss
  41259b:	xor    al,BYTE PTR es:[eax]
  41259e:	mov    ds:0x3d8a41c8,al
  4125a3:	ffreep st(6)
  4125a5:	push   ebp
  4125a6:	out    0x76,eax
  4125a8:	adc    bl,BYTE PTR [esi]
  4125aa:	icebp  
  4125ab:	icebp  
  4125ac:	mov    dh,0xa4
  4125ae:	adc    eax,0xcc88c0bd
  4125b3:	cmp    BYTE PTR [eax+0x2620a42c],ch
  4125b9:	inc    ebx
  4125ba:	lahf   
  4125bb:	inc    ecx
  4125bc:	cdq    
  4125bd:	fimul  WORD PTR [ebx-0x7]
  4125c0:	cmp    BYTE PTR [ebp+0x7a3c58e6],bl
  4125c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125c7:	test   BYTE PTR ds:0xc15a4827,dh
  4125cd:	test   ecx,0xf4f0a16c
  4125d3:	mov    eax,0x25907e32
  4125d8:	fmul   st(7),st
  4125da:	dec    esp
  4125db:	scas   eax,DWORD PTR es:[edi]
  4125dc:	sti    
  4125dd:	sbb    al,0xa9
  4125df:	fstp   QWORD PTR [ebp-0x2ba4cf69]
  4125e5:	pop    eax
  4125e6:	sbb    edx,DWORD PTR [edi]
  4125e8:	mov    DWORD PTR [edx-0x49],ebp
  4125eb:	pushf  
  4125ec:	pop    ecx
  4125ed:	fnstenv [ebx+0x61]
  4125f0:	int3   
  4125f1:	aaa    
  4125f2:	xor    al,ch
  4125f4:	enter  0xa14d,0x64
  4125f8:	sbb    eax,0x83d7ce6c
  4125fd:	adc    esp,DWORD PTR [edi]
  4125ff:	adc    eax,DWORD PTR [edx-0x1b716ad5]
  412605:	inc    esi
  412606:	push   ds
  412607:	imul   ecx,DWORD PTR ds:0x4c6670b,0x77adaa6e
  412611:	lods   eax,DWORD PTR ds:[esi]
  412612:	mov    esp,0xc9f46326
  412617:	mov    esp,0x8c431536
  41261c:	enter  0x14a1,0x2b
  412620:	mov    al,ds:0x171247fd
  412625:	je     0x412633
  412627:	shl    DWORD PTR [edi+eiz*4],cl
  41262a:	int3   
  41262b:	dec    edx
  41262c:	lods   al,BYTE PTR ds:[esi]
  41262d:	ret    
  41262e:	loopne 0x4125d9
  412630:	xchg   edx,eax
  412631:	out    dx,eax
  412632:	and    dh,cl
  412634:	shl    BYTE PTR [ebp-0x114f57c8],1
  41263a:	fs pusha 
  41263c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41263d:	push   ds
  41263e:	or     BYTE PTR [ecx-0x6d],dh
  412641:	cmp    al,0x8b
  412643:	ret    0x1dc2
  412646:	inc    ebx
  412647:	aas    
  412648:	mul    DWORD PTR [esp+edx*1+0x6d]
  41264c:	int    0x8b
  41264e:	push   edx
  41264f:	cmc    
  412650:	lock sub al,0x97
  412653:	mov    dl,0xb6
  412655:	pop    es
  412656:	imul   BYTE PTR [ecx+0x1c]
  412659:	outs   dx,BYTE PTR ds:[esi]
  41265a:	pop    esp
  41265b:	cmc    
  41265c:	or     eax,esp
  41265e:	outs   dx,DWORD PTR ds:[esi]
  41265f:	in     al,dx
  412660:	mov    cl,0x19
  412662:	jge    0x8eb4d1ba
  412668:	cmp    esp,ebp
  41266a:	and    dl,cl
  41266c:	mov    ch,0x3e
  41266e:	mov    esi,0xa07616e9
  412673:	push   esp
  412674:	(bad)  
  412675:	scas   eax,DWORD PTR es:[edi]
  412676:	sub    al,0x3e
  412678:	popf   
  412679:	adc    al,ah
  41267b:	cmp    eax,0xdafe87cf
  412680:	and    eax,0xaf22bf69
  412685:	lahf   
  412686:	ins    DWORD PTR es:[edi],dx
  412687:	inc    ebp
  412688:	add    ah,BYTE PTR [bp+di+0x569c]
  41268d:	push   edi
  41268e:	xor    DWORD PTR ds:0x428585,edx
  412694:	mov    eax,DWORD PTR [ebp+0x8]
  412697:	add    ebx,DWORD PTR ds:0x428381
  41269d:	mov    ecx,DWORD PTR [ebp+0xc]
  4126a0:	and    ebx,DWORD PTR ds:0x428579
  4126a6:	shrd   eax,ecx,0x2
  4126aa:	xor    esi,DWORD PTR ds:0x428595
  4126b0:	shr    ecx,0x2
  4126b3:	mov    ecx,DWORD PTR [ebp+0x8]
  4126b6:	cmp    DWORD PTR ds:0x4284fd,0x0
  4126bd:	not    ebx
  4126bf:	mov    edi,0x75d4
  4126c4:	mov    DWORD PTR ds:0x42858d,0x68f
  4126ce:	mov    DWORD PTR ds:0x428599,0x72ee
  4126d8:	jmp    0x412740
  4126dd:	mov    esi,DWORD PTR ds:0x428449
  4126e3:	mov    DWORD PTR ds:0x428399,0x6012
  4126ed:	cmp    DWORD PTR ds:0x4284fd,0x0
  4126f4:	jg     0x41272a
  4126fa:	push   0x1b53
  4126ff:	push   0x62ef
  412704:	call   DWORD PTR ds:0x42e008
  41270a:	and    edi,0x6509
  412710:	xor    edx,edx
  412712:	add    edx,DWORD PTR ds:0x428591
  412718:	and    edx,DWORD PTR ds:0x428531
  41271e:	mov    DWORD PTR ds:0x428591,edx
  412724:	and    edi,DWORD PTR ds:0x428381
  41272a:	adc    DWORD PTR ds:0x428369,edi
  412730:	add    DWORD PTR ds:0x4285a1,edi
  412736:	mov    DWORD PTR ds:0x428499,0x7a33
  412740:	mov    edx,DWORD PTR [ebp+0xc]
  412743:	cmp    DWORD PTR ds:0x428479,0x0
  41274a:	mov    DWORD PTR ds:0x428361,0x5b58
  412754:	not    ebx
  412756:	mov    DWORD PTR ds:0x42848d,0x50a2
  412760:	mov    DWORD PTR ds:0x428461,edx
  412766:	jmp    0x4127b4
  41276b:	mov    DWORD PTR ds:0x428599,0x3c96
  412775:	cmp    DWORD PTR ds:0x428479,0x0
  41277c:	jne    0x41279e
  412782:	push   0x4282e5
  412787:	push   DWORD PTR [ebp-0x1c]
  41278a:	call   DWORD PTR ds:0x42e0cc
  412790:	and    DWORD PTR ds:0x428461,edi
  412796:	neg    DWORD PTR ds:0x428375
  41279c:	not    edi
  41279e:	sbb    DWORD PTR ds:0x42839d,edx
  4127a4:	sub    edi,ebx
  4127a6:	or     DWORD PTR ds:0x428479,ebx
  4127ac:	xor    esi,esi
  4127ae:	or     DWORD PTR ds:0x428365,ecx
  4127b4:	xor    edx,edx
  4127b6:	mov    esi,0x32de6d5d
  4127bb:	sub    DWORD PTR ds:0x42838d,ecx
  4127c1:	xor    eax,esi
  4127c3:	or     eax,edx
  4127c5:	mov    DWORD PTR [ebp-0x34],eax
  4127c8:	cmp    DWORD PTR ds:0x428479,0x0
  4127cf:	not    ebx
  4127d1:	mov    edx,0x6453
  4127d6:	mov    ebx,DWORD PTR ds:0x42849d
  4127dc:	mov    edi,DWORD PTR ds:0x42838d
  4127e2:	jmp    0x412823
  4127e7:	mov    edi,0x4ae9
  4127ec:	cmp    DWORD PTR ds:0x428479,0x0
  4127f3:	jbe    0x41280b
  4127f9:	push   0x428399
  4127fe:	call   DWORD PTR ds:0x42e254
  412804:	and    ebx,DWORD PTR ds:0x428455
  41280a:	inc    edx
  41280b:	adc    edx,0x18bc
  412811:	mov    ebx,DWORD PTR ds:0x428519
  412817:	or     ebx,DWORD PTR ds:0x428471
  41281d:	mov    DWORD PTR ds:0x428519,ebx
  412823:	mov    eax,DWORD PTR [ebp+0x8]
  412826:	shl    ecx,0x1e
  412829:	mov    ecx,DWORD PTR [ebp+0xc]
  41282c:	shrd   eax,ecx,0x2
  412830:	xor    eax,esi
  412832:	add    DWORD PTR ds:0x428469,0x71c1
  41283c:	shr    ecx,0x2
  41283f:	cmp    DWORD PTR ds:0x428529,0x0
  412846:	mov    DWORD PTR ds:0x428451,0x17f6
  412850:	mov    DWORD PTR ds:0x428455,ecx
  412856:	jmp    0x41291d
  41285b:	movzx  ecx,WORD PTR ds:0x42850d
  412862:	cmp    DWORD PTR ds:0x428529,0x0
  412869:	jl     0x412892
  41286f:	push   DWORD PTR [ebp-0x10]
  412872:	call   DWORD PTR ds:0x42e0d0
  412878:	sub    DWORD PTR ds:0x42844d,edi
  41287e:	xor    edx,edx
  412880:	or     edx,DWORD PTR ds:0x4283f5
  412886:	mov    edi,DWORD PTR ds:0x428555
  41288c:	sub    edx,edi
  41288e:	sub    edx,DWORD PTR [edx+edi*1]
  412891:	inc    edx
  412892:	inc    edx
  412893:	or     DWORD PTR ds:0x4284f5,0x781a
  41289d:	adc    edi,DWORD PTR ds:0x428585
  4128a3:	sbb    ebx,DWORD PTR ds:0x428595
  4128a9:	cmp    DWORD PTR ds:0x428499,0x0
  4128b0:	mov    DWORD PTR ds:0x428525,0x3519
  4128ba:	mov    DWORD PTR ds:0x42859d,edx
  4128c0:	jmp    0x41291d
  4128c5:	mov    edi,DWORD PTR ds:0x428475
  4128cb:	mov    DWORD PTR ds:0x428391,0x6a8c
  4128d5:	cmp    DWORD PTR ds:0x428499,0x0
  4128dc:	jae    0x412909
  4128e2:	push   0x74d4
  4128e7:	push   DWORD PTR [ebp-0x24]
  4128ea:	call   DWORD PTR ds:0x42e00c
  4128f0:	xor    ecx,ecx
  4128f2:	or     ecx,DWORD PTR ds:0x4284e1
  4128f8:	mov    edi,DWORD PTR ds:0x4285ed
  4128fe:	sub    ecx,edi
  412900:	add    ecx,DWORD PTR [ecx+edi*1]
  412903:	xor    DWORD PTR ds:0x428579,ebx
  412909:	add    DWORD PTR ds:0x42858d,edx
  41290f:	sub    edi,DWORD PTR ds:0x428529
  412915:	neg    edx
  412917:	sub    ecx,DWORD PTR ds:0x428589
  41291d:	mov    ecx,DWORD PTR [ebp+0x8]
  412920:	cmp    DWORD PTR ds:0x428591,0x0
  412927:	movzx  edx,BYTE PTR ds:0x428441
  41292e:	mov    edi,DWORD PTR ds:0x428481
  412934:	jmp    0x41298c
  412939:	mov    DWORD PTR ds:0x42851d,0x3a54
  412943:	mov    DWORD PTR ds:0x428375,0x35a1
  41294d:	cmp    DWORD PTR ds:0x428591,0x0
  412954:	jbe    0x412981
  41295a:	push   0x731e
  41295f:	push   DWORD PTR [ebp-0x1c]
  412962:	push   0x5d33
  412967:	push   DWORD PTR [ebp-0x28]
  41296a:	push   DWORD PTR [ebp-0x20]
  41296d:	call   DWORD PTR ds:0x42e0d4
  412973:	and    edx,edi
  412975:	and    DWORD PTR ds:0x428515,ebx
  41297b:	sbb    edi,0x47ca
  412981:	inc    edx
  412982:	add    DWORD PTR ds:0x428375,0x615e
  41298c:	mov    edx,DWORD PTR [ebp+0xc]
  41298f:	xor    ebx,ebx
  412991:	add    ebx,DWORD PTR ds:0x4283c1
  412997:	mov    edi,DWORD PTR ds:0x4285bd
  41299d:	sub    edi,ebx
  41299f:	or     ebx,DWORD PTR [ebx+edi*1]
  4129a2:	xor    edx,edx
  4129a4:	xor    DWORD PTR ds:0x428499,ebx
  4129aa:	or     eax,edx
  4129ac:	adc    edx,0x4918
  4129b2:	mov    DWORD PTR [ebp-0x34],eax
  4129b5:	sub    ebx,edx
  4129b7:	mov    eax,ds:0x4225b8
  4129bc:	mov    eax,DWORD PTR [eax]
  4129be:	mov    DWORD PTR [ebp-0x28],eax
  4129c1:	mov    eax,ds:0x4227d8
  4129c6:	mov    eax,DWORD PTR [eax]
  4129c8:	xor    edx,edx
  4129ca:	mov    DWORD PTR [ebp-0x20],eax
  4129cd:	mov    ebx,DWORD PTR ds:0x4284cd
  4129d3:	mov    ebx,DWORD PTR [ebx]
  4129d5:	sub    DWORD PTR ds:0x42850d,ebx
  4129db:	mov    eax,DWORD PTR [ebp-0x28]
  4129de:	mov    eax,DWORD PTR [ebp-0x28]
  4129e1:	xor    edx,edx
  4129e3:	mov    ebx,DWORD PTR [ebp+0x8]
  4129e6:	movzx  edx,BYTE PTR ds:0x428505
  4129ed:	sbb    DWORD PTR ds:0x428391,edx
  4129f3:	shl    ecx,0x1e
  4129f6:	mov    edi,DWORD PTR ds:0x42836d
  4129fc:	adc    DWORD PTR ds:0x4283a5,edi
  412a02:	xor    ecx,ecx
  412a04:	and    DWORD PTR ds:0x428365,ecx
  412a0a:	shld   ecx,eax,0x2
  412a0e:	jmp    0x412d47
  412a13:	scas   eax,DWORD PTR es:[edi]
  412a14:	cdq    
  412a15:	and    esp,ecx
  412a17:	sub    edi,DWORD PTR [eax+esi*4-0x64]
  412a1b:	push   ecx
  412a1c:	mov    edx,0xac9e90d1
  412a21:	sub    cl,dl
  412a23:	pop    esp
  412a24:	jb     0x4129e4
  412a26:	mov    esi,0xbebec4ed
  412a2b:	xchg   ebp,eax
  412a2c:	cmp    eax,0xec5adb60
  412a31:	cmp    dl,al
  412a33:	add    bh,BYTE PTR [edx-0x1728bbba]
  412a39:	retf   0x8506
  412a3c:	pusha  
  412a3d:	(bad)  
  412a3e:	(bad)  
  412a3f:	sub    esi,DWORD PTR [edx]
  412a41:	shr    DWORD PTR [edx],0x67
  412a44:	pusha  
  412a45:	push   eax
  412a46:	aam    0x51
  412a48:	dec    ebp
  412a49:	imul   ebp,DWORD PTR [ecx-0x77e9a090],0xffffffb2
  412a50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a51:	sbb    al,0xba
  412a53:	push   eax
  412a54:	inc    esp
  412a55:	shr    BYTE PTR [ebp-0x27e7aacb],cl
  412a5b:	jae    0x412a81
  412a5d:	jbe    0x412a66
  412a5f:	gs js  0x4129e2
  412a62:	xor    esi,DWORD PTR [esi+0x47]
  412a65:	leave  
  412a66:	cmp    al,0xfd
  412a68:	in     eax,dx
  412a69:	aaa    
  412a6a:	pop    esp
  412a6b:	sub    edi,0xffffffd6
  412a6e:	pop    ebx
  412a6f:	mov    ebx,DWORD PTR [esi-0x24d2337]
  412a75:	test   eax,0x2c32ae5b
  412a7a:	cmp    DWORD PTR [eax+ebp*4+0x7e0a7243],ebp
  412a81:	(bad)  
  412a82:	iret   
  412a83:	test   eax,0x29644162
  412a88:	scas   al,BYTE PTR es:[edi]
  412a89:	je     0x412a76
  412a8b:	mov    dh,0xc9
  412a8d:	mov    al,0xa0
  412a8f:	jl     0x412a41
  412a91:	pushf  
  412a92:	jmp    0x2bc0:0xa2acbd91
  412a99:	iret   
  412a9a:	int3   
  412a9b:	lods   eax,DWORD PTR ds:[esi]
  412a9c:	cmp    al,0x73
  412a9e:	or     BYTE PTR [esi+0x68],dl
  412aa1:	mov    bl,0xcc
  412aa3:	loop   0x412aa4
  412aa5:	pop    esp
  412aa6:	push   ebx
  412aa7:	mov    cl,0xe4
  412aa9:	dec    edi
  412aaa:	inc    ebp
  412aab:	fadd   DWORD PTR [edi-0x68]
  412aae:	inc    edx
  412aaf:	inc    edi
  412ab0:	fld1   
  412ab2:	pop    ss
  412ab3:	mov    eax,0x13ba1bf3
  412ab8:	sbb    DWORD PTR [esi+0x3d],0xffffffa7
  412abc:	sbb    ch,bh
  412abe:	loope  0x412b22
  412ac0:	jmp    0x11b1938c
  412ac5:	adc    cl,ch
  412ac7:	in     eax,dx
  412ac8:	mov    bl,0xb0
  412aca:	dec    ebx
  412acb:	cmc    
  412acc:	mov    bl,0x81
  412ace:	mov    esi,0xde385e0b
  412ad3:	sbb    ebp,DWORD PTR [edi]
  412ad5:	out    0xa9,al
  412ad7:	inc    ebp
  412ad8:	out    dx,al
  412ad9:	mov    edi,DWORD PTR [eax+0xd562edc]
  412adf:	ret    
  412ae0:	dec    ecx
  412ae1:	mov    ebp,0x486cb77f
  412ae6:	jmp    0x257:0xbc31a247
  412aed:	call   0xd475:0x2052840f
  412af4:	mov    al,ds:0x1b981cc4
  412af9:	in     eax,dx
  412afa:	push   esp
  412afb:	add    ch,cl
  412afd:	sbb    BYTE PTR [esi-0x45d2e6a7],cl
  412b03:	pop    ss
  412b04:	pop    ss
  412b05:	adc    DWORD PTR [esi+0x37696063],edx
  412b0b:	repz dec ebx
  412b0d:	sub    ecx,DWORD PTR [eax+ebx*4-0x58]
  412b11:	pop    esp
  412b12:	icebp  
  412b13:	mov    al,ds:0xdf92b2e3
  412b18:	adc    BYTE PTR [edx],bl
  412b1a:	lods   eax,DWORD PTR ds:[esi]
  412b1b:	les    ebp,FWORD PTR [ebx-0x546039c]
  412b21:	popa   
  412b22:	rol    bl,1
  412b24:	sahf   
  412b25:	enter  0xeee0,0x50
  412b29:	jb     0x412b72
  412b2b:	jp     0x412ad3
  412b2d:	and    ebp,ecx
  412b2f:	mov    WORD PTR [ecx+0x2a1d868a],fs
  412b35:	and    eax,0x8b73ddf5
  412b3a:	jbe    0x412b9f
  412b3c:	mov    dl,0x4a
  412b3e:	xchg   esp,eax
  412b3f:	jbe    0x412b3b
  412b41:	inc    BYTE PTR [eax]
  412b43:	cmp    bh,BYTE PTR [ebx+0x57e8d76a]
  412b49:	je     0x412b15
  412b4b:	push   edx
  412b4c:	pushf  
  412b4d:	sub    al,0xae
  412b4f:	(bad)  
  412b50:	cmp    edx,eax
  412b52:	add    eax,DWORD PTR [esi]
  412b54:	(bad)  
  412b55:	adc    DWORD PTR [eax],ebx
  412b57:	sar    BYTE PTR [ebp+0x15fe0ade],0x50
  412b5e:	xor    edx,DWORD PTR [ebp-0x21]
  412b61:	rol    DWORD PTR [edx+ebp*2],cl
  412b64:	hlt    
  412b65:	(bad)  
  412b66:	or     dh,cl
  412b68:	mov    eax,ds:0x62f5e95a
  412b6d:	and    edi,DWORD PTR [esi]
  412b6f:	sub    ecx,DWORD PTR [ebx]
  412b71:	push   es
  412b72:	(bad)  
  412b73:	ror    ch,0x79
  412b76:	sbb    DWORD PTR [ebp+0x38],0x9680c220
  412b7d:	inc    edi
  412b7e:	sub    esp,DWORD PTR [edx]
  412b80:	hlt    
  412b81:	xchg   ebp,eax
  412b82:	ficomp DWORD PTR [eax+0x30]
  412b85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b86:	push   edx
  412b87:	test   BYTE PTR [eax],cl
  412b89:	icebp  
  412b8a:	add    DWORD PTR [esi+ebx*4-0x23da665f],ecx
  412b91:	dec    edi
  412b92:	mov    ebx,0x90002fd6
  412b97:	mov    ebx,0xdb4eda7d
  412b9c:	jb     0x412b21
  412b9e:	loopne 0x412b85
  412ba0:	dec    esi
  412ba1:	retf   0x13a1
  412ba4:	sbb    al,0xf8
  412ba6:	in     al,dx
  412ba7:	inc    ecx
  412ba8:	cdq    
  412ba9:	lods   al,BYTE PTR ds:[esi]
  412baa:	inc    edx
  412bab:	mov    BYTE PTR [ecx+esi*4],dl
  412bae:	xor    eax,0x9ef67788
  412bb3:	jmp    0x3c20747c
  412bb8:	xlat   BYTE PTR ds:[ebx]
  412bb9:	push   ecx
  412bba:	dec    edx
  412bbb:	fmulp  st(3),st
  412bbd:	ret    
  412bbe:	call   0x21cabeac
  412bc3:	add    BYTE PTR [ebx-0x4524cf71],dh
  412bc9:	push   eax
  412bca:	test   edi,ebp
  412bcc:	dec    edi
  412bcd:	fincstp 
  412bcf:	push   edx
  412bd0:	jnp    0x412b61
  412bd2:	mov    bl,0x4b
  412bd4:	ins    BYTE PTR es:[edi],dx
  412bd5:	in     eax,0x60
  412bd7:	pop    esi
  412bd8:	aam    0xa9
  412bda:	mov    ch,0x17
  412bdc:	outs   dx,DWORD PTR ds:[esi]
  412bdd:	aaa    
  412bde:	pop    ecx
  412bdf:	push   edi
  412be0:	inc    ebp
  412be1:	ret    0xfcb4
  412be4:	mov    WORD PTR [eax-0x3f19ab98],?
  412bea:	loop   0x412c1b
  412bec:	(bad)  cs:[ebp-0x55f23d32]
  412bf3:	ror    BYTE PTR [ecx-0x37],1
  412bf6:	retf   0x50df
  412bf9:	lods   al,BYTE PTR ds:[esi]
  412bfa:	icebp  
  412bfb:	and    al,BYTE PTR [esi+0x72cf9c3]
  412c01:	and    esi,ebp
  412c03:	shl    DWORD PTR [esi-0x4c],0xeb
  412c07:	fimul  WORD PTR [ecx+0x273d1a43]
  412c0d:	jmp    0x412b99
  412c0f:	cmp    esi,DWORD PTR [ebp-0x3e1475e6]
  412c15:	popa   
  412c16:	cmp    al,0x80
  412c18:	xchg   ebp,eax
  412c19:	out    dx,al
  412c1a:	mov    eax,ds:0xc3bc768
  412c1f:	iret   
  412c20:	jae    0x412bd0
  412c22:	cmp    eax,0x14de8152
  412c27:	or     BYTE PTR [esi+0x20],al
  412c2a:	pop    es
  412c2b:	cmp    eax,0x49efc4c4
  412c30:	push   ebp
  412c31:	pop    ecx
  412c32:	push   0x91b464ae
  412c37:	call   0x4f33:0x65f48323
  412c3e:	shl    BYTE PTR [ebx+0x23],0x29
  412c42:	inc    ecx
  412c43:	mov    ah,0xc5
  412c45:	push   ecx
  412c46:	xor    BYTE PTR ds:0x262ab9da,bh
  412c4c:	lods   eax,DWORD PTR ds:[esi]
  412c4d:	mov    ebx,0xb28df46c
  412c52:	push   ss
  412c53:	mov    ebx,0xdc83faa4
  412c58:	test   BYTE PTR [ecx-0x36ec651d],bl
  412c5e:	dec    esi
  412c5f:	popa   
  412c60:	test   eax,0x2caa0f09
  412c65:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c67:	jb     0x412ca6
  412c69:	aad    0x26
  412c6b:	imul   edx,esp,0xfffffff2
  412c6e:	leave  
  412c6f:	inc    esi
  412c70:	aas    
  412c71:	out    0x67,eax
  412c73:	add    DWORD PTR ds:0x7586861f,0x2ec33878
  412c7d:	pop    ebx
  412c7e:	test   al,0x5c
  412c80:	in     al,0xa4
  412c82:	mov    ch,0x9b
  412c84:	xchg   edi,eax
  412c85:	adc    eax,0xa8bbd2a1
  412c8a:	mov    dl,0x2
  412c8c:	fs xchg esp,eax
  412c8e:	cmp    DWORD PTR [esp+ecx*2+0x14],0xffffffcf
  412c93:	mov    esi,0x2e2c49b8
  412c98:	push   esi
  412c99:	mov    al,ds:0x3ae05688
  412c9e:	cs inc esp
  412ca0:	xor    eax,0x2824cd51
  412ca5:	stc    
  412ca6:	xor    al,0x22
  412ca8:	sbb    al,0xc6
  412caa:	inc    esi
  412cab:	lahf   
  412cac:	daa    
  412cad:	(bad)  
  412cae:	sbb    eax,esi
  412cb0:	jmp    0xf58f3f5b
  412cb5:	jle    0x412d20
  412cb7:	scas   eax,DWORD PTR es:[edi]
  412cb8:	call   0xb569:0xbe4304a8
  412cbf:	cli    
  412cc0:	fs xchg esi,eax
  412cc2:	into   
  412cc3:	xor    DWORD PTR [eax+0x2d6d60e4],ecx
  412cc9:	js     0x412cff
  412ccb:	adc    BYTE PTR [edx],dh
  412ccd:	enter  0xd298,0xb3
  412cd1:	mov    dl,0xb0
  412cd3:	out    dx,eax
  412cd4:	mov    dl,0x8f
  412cd6:	and    al,0xc8
  412cd8:	ror    eax,cl
  412cda:	fild   WORD PTR [esi]
  412cdc:	jge    0x412c67
  412cde:	mov    dl,0x95
  412ce0:	pop    es
  412ce1:	lods   al,BYTE PTR ds:[esi]
  412ce2:	and    cl,BYTE PTR [ebp+0x235377fc]
  412ce8:	mov    WORD PTR [esi],es
  412cea:	dec    ebx
  412ceb:	popa   
  412cec:	inc    edi
  412ced:	out    0xe,eax
  412cef:	sti    
  412cf0:	and    DWORD PTR [esi+0x50275cca],ebx
  412cf6:	or     DWORD PTR [esi],esp
  412cf8:	add    al,0x3d
  412cfa:	sub    esi,DWORD PTR [ebx+0x3c28a884]
  412d00:	mov    ds:0x97f34cf9,al
  412d05:	xchg   esi,eax
  412d06:	or     ebx,edx
  412d08:	add    ebp,DWORD PTR [esp+esi*8]
  412d0b:	sbb    bh,BYTE PTR [eax+0x67c37bce]
  412d11:	xchg   edi,eax
  412d12:	fdiv   st(7),st
  412d14:	iret   
  412d15:	push   eax
  412d16:	jmp    0x39c3d2fb
  412d1b:	add    bh,dh
  412d1d:	xor    ch,ch
  412d1f:	out    0xdf,al
  412d21:	out    0x1,al
  412d23:	inc    esi
  412d24:	adc    esi,esi
  412d26:	sbb    al,0x17
  412d28:	xor    al,0xc0
  412d2a:	xchg   ecx,eax
  412d2b:	ret    
  412d2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d2d:	jmp    0x412ccd
  412d2f:	hlt    
  412d30:	dec    eax
  412d31:	pushf  
  412d32:	cld    
  412d33:	or     dl,BYTE PTR [esi-0xb]
  412d36:	mov    cl,0xf2
  412d38:	leave  
  412d39:	pusha  
  412d3a:	test   DWORD PTR [esi],edi
  412d3c:	pop    ecx
  412d3d:	ss repnz mov al,0xf5
  412d41:	xchg   edi,eax
  412d42:	stos   BYTE PTR es:[edi],al
  412d43:	mov    ds,ebx
  412d45:	and    eax,0x2e0c18c
  412d4a:	and    edi,edi
  412d4c:	mov    edi,0xcb79b576
  412d51:	mov    edx,0x9c2b8ae8
  412d56:	mov    DWORD PTR [ebp-0x10],ebx
  412d59:	mov    DWORD PTR ds:0x428495,0xc27
  412d63:	mov    ebx,DWORD PTR [ebp+0xc]
  412d66:	xor    eax,edi
  412d68:	xor    DWORD PTR ds:0x42845d,0x622f
  412d72:	xor    ecx,edx
  412d74:	mov    DWORD PTR ds:0x428495,0x97b
  412d7e:	mov    DWORD PTR [ebp-0x18],0xa5069aae
  412d85:	mov    DWORD PTR ds:0x4285ad,0x75c6
  412d8f:	mov    DWORD PTR [ebp-0x1c],0xa50693ae
  412d96:	mov    DWORD PTR [ebp-0xc],ebx
  412d99:	mov    DWORD PTR ds:0x428589,0x6dfc
  412da3:	cmp    eax,DWORD PTR [ebp-0x10]
  412da6:	jne    0x412db4
  412dac:	cmp    ecx,ebx
  412dae:	je     0x414af6
  412db4:	mov    eax,DWORD PTR [ebp-0x20]
  412db7:	sub    eax,0x3b59
  412dbc:	mov    eax,DWORD PTR [ebp-0x20]
  412dbf:	xor    ecx,ecx
  412dc1:	shld   ecx,eax,0x2
  412dc5:	xor    DWORD PTR ds:0x428441,0x428519
  412dcf:	shl    eax,0x2
  412dd2:	add    DWORD PTR ds:0x428479,0x428511
  412ddc:	xor    ecx,edx
  412dde:	cmp    DWORD PTR ds:0x428511,0x0
  412de5:	not    edx
  412de7:	not    edx
  412de9:	jmp    0x412e3e
  412dee:	mov    DWORD PTR ds:0x42858d,edx
  412df4:	not    edx
  412df6:	cmp    DWORD PTR ds:0x428511,0x0
  412dfd:	je     0x412e29
  412e03:	push   0x8204
  412e08:	push   DWORD PTR [ebp-0x28]
  412e0b:	call   DWORD PTR ds:0x42e010
  412e11:	mov    edx,DWORD PTR ds:0x428459
  412e17:	xor    DWORD PTR ds:0x428589,edx
  412e1d:	mov    edx,DWORD PTR ds:0x4285a9
  412e23:	sub    DWORD PTR ds:0x4285a5,edx
  412e29:	inc    edx
  412e2a:	adc    edx,DWORD PTR ds:0x4285a5
  412e30:	xor    edx,edx
  412e32:	xor    edx,DWORD PTR ds:0x4284a1
  412e38:	adc    DWORD PTR ds:0x428599,edx
  412e3e:	mov    edx,DWORD PTR [ebp+0x8]
  412e41:	xor    eax,edi
  412e43:	mov    edi,DWORD PTR [ebp+0xc]
  412e46:	mov    DWORD PTR ds:0x428391,0x757
  412e50:	cmp    eax,edx
  412e52:	mov    DWORD PTR ds:0x428361,0x1fab
  412e5c:	jne    0x412e74
  412e62:	cmp    ecx,edi
  412e64:	mov    DWORD PTR ds:0x4283a5,0x4385
  412e6e:	je     0x414af6
  412e74:	add    eax,DWORD PTR ds:0x428461
  412e7a:	mov    eax,DWORD PTR [ebp-0x1c]
  412e7d:	neg    DWORD PTR ds:0x428369
  412e83:	mov    ecx,DWORD PTR [ebp-0x1c]
  412e86:	push   0xfffffffe
  412e88:	and    DWORD PTR ds:0x4283a1,edx
  412e8e:	pop    ebx
  412e8f:	or     DWORD PTR ds:0x4285ad,edx
  412e95:	jmp    0x4131ce
  412e9a:	imul   ebx,DWORD PTR [edi+0x1cbccb74],0xf12aa079
  412ea4:	and    BYTE PTR [esi-0x6f6b5202],bl
  412eaa:	mov    WORD PTR [eax-0x42],?
  412ead:	mov    esi,0xbebec4ed
  412eb2:	pop    ss
  412eb3:	mov    bh,0x14
  412eb5:	ret    0x1acc
  412eb8:	ja     0x412f23
  412eba:	pop    es
  412ebb:	xor    ebp,DWORD PTR [esi+edx*4-0x274a29d7]
  412ec2:	in     al,0x40
  412ec4:	sub    esi,eax
  412ec6:	xchg   BYTE PTR [ebx+eiz*4-0x12],ch
  412eca:	push   cs
  412ecb:	pop    esp
  412ecc:	xchg   esp,eax
  412ecd:	xchg   ebx,eax
  412ece:	ss dec ecx
  412ed0:	pushf  
  412ed1:	mov    ecx,0x9bbd4095
  412ed6:	sub    eax,0xa871dea9
  412edb:	nop
  412edc:	cli    
  412edd:	mov    cr0,ebp
  412ee0:	call   0xd16a:0x74aaf96b
  412ee7:	popa   
  412ee8:	nop
  412ee9:	jecxz  0x412f36
  412eeb:	popf   
  412eec:	push   ds
  412eed:	jne    0x412ed8
  412eef:	(bad)  
  412ef0:	fsub   DWORD PTR [eax+0x2ba2c66b]
  412ef6:	mov    eax,ds:0x479d3c0d
  412efb:	cmc    
  412efc:	stc    
  412efd:	sub    al,0x7a
  412eff:	aam    0xb4
  412f01:	rcr    BYTE PTR [eax-0x44],cl
  412f04:	data16 je 0x412ec0
  412f07:	dec    ebp
  412f08:	pop    esp
  412f09:	mov    ebp,0x10f39863
  412f0e:	scas   eax,DWORD PTR es:[edi]
  412f0f:	push   ecx
  412f10:	shl    BYTE PTR [esi+0xf8ee288],cl
  412f16:	xchg   ebp,eax
  412f17:	push   ecx
  412f18:	xor    ecx,0xffffff88
  412f1b:	xor    eax,0x6d172a66
  412f20:	enter  0xc17e,0x2a
  412f24:	lahf   
  412f25:	arpl   WORD PTR [edi],dx
  412f27:	mov    cl,0x49
  412f29:	jmp    0x412ebf
  412f2b:	mov    edx,0x3c868601
  412f30:	and    bl,BYTE PTR [edi+0x41]
  412f33:	add    DWORD PTR [edi],edx
  412f35:	mov    ebx,DWORD PTR [edi]
  412f37:	xor    eax,DWORD PTR [eax-0x77eb3bb9]
  412f3d:	xor    DWORD PTR [ebx+esi*8+0x386415c2],0x9c9fadfc
  412f48:	xchg   ebp,eax
  412f49:	jne    0x412f65
  412f4b:	push   edi
  412f4c:	aad    0x1f
  412f4e:	popa   
  412f4f:	cli    
  412f50:	aaa    
  412f51:	xor    WORD PTR [esi],bp
  412f54:	xor    ebx,DWORD PTR [esi+0x1bf06cc1]
  412f5a:	daa    
  412f5b:	pop    ebp
  412f5c:	pop    esi
  412f5d:	stc    
  412f5e:	xchg   BYTE PTR [ebx-0x5a6fbc6f],ch
  412f64:	jb     0x412f1a
  412f66:	xor    BYTE PTR [ebx],cl
  412f68:	cli    
  412f69:	fucomip st,st(1)
  412f6b:	jecxz  0x412f05
  412f6d:	inc    ecx
  412f6e:	add    ebp,DWORD PTR [ebx]
  412f70:	cld    
  412f71:	add    ebx,DWORD PTR [eax]
  412f73:	lds    ebx,FWORD PTR [ebx-0x18]
  412f76:	xor    dl,BYTE PTR [esi+eiz*2-0x20df2d7a]
  412f7d:	pop    edx
  412f7e:	sbb    eax,0xfd4a51fb
  412f83:	pushf  
  412f84:	daa    
  412f85:	sub    al,0xc6
  412f87:	xchg   ebp,eax
  412f88:	adc    BYTE PTR [edx-0x60],bl
  412f8b:	fwait
  412f8c:	(bad)  
  412f8d:	fld    QWORD PTR [ebx-0x47]
  412f90:	or     ecx,ebp
  412f92:	leave  
  412f93:	rol    BYTE PTR [edi+0x54],1
  412f96:	in     al,0x9b
  412f98:	int    0xa4
  412f9a:	sar    DWORD PTR [edi+eiz*8-0x34c0d99d],0x23
  412fa2:	and    DWORD PTR [ecx+0x6d],ecx
  412fa5:	call   0xca80:0x9a665f4e
  412fac:	sti    
  412fad:	lods   eax,DWORD PTR ds:[esi]
  412fae:	retf   
  412faf:	test   DWORD PTR [ebx+0x6e76a844],edx
  412fb5:	mov    ebp,0xa62a7983
  412fba:	xor    ah,al
  412fbc:	or     BYTE PTR [eax-0x23],dh
  412fbf:	out    dx,al
  412fc0:	and    eax,0xa229efd4
  412fc6:	retf   
  412fc7:	clc    
  412fc8:	ficom  DWORD PTR [ebx-0x16]
  412fcb:	sbb    ch,cl
  412fcd:	cmp    DWORD PTR [edx+ebp*2+0x7f],edi
  412fd1:	jmp    0xcd08:0x7a9943ff
  412fd8:	dec    ebx
  412fd9:	pop    ebx
  412fda:	stos   BYTE PTR es:[edi],al
  412fdb:	adc    BYTE PTR [edx+eax*2-0x30],cl
  412fdf:	jecxz  0x41305a
  412fe1:	in     al,dx
  412fe2:	pop    ss
  412fe3:	out    dx,al
  412fe4:	in     al,0xff
  412fe6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412fe7:	arpl   dx,di
  412fe9:	aam    0xe4
  412feb:	cdq    
  412fec:	aam    0xbe
  412fee:	lock mov bl,0xbb
  412ff1:	popa   
  412ff2:	in     al,0x79
  412ff4:	mov    ds:0xbd282262,al
  412ff9:	aaa    
  412ffa:	cs enter 0x699d,0xf5
  412fff:	mov    fs:0x56a95910,eax
  413005:	pop    esi
  413006:	sbb    DWORD PTR [ecx+0x48657e85],edx
  41300c:	or     ah,BYTE PTR [edx]
  41300e:	mov    ds:0x9b81b335,eax
  413013:	out    dx,al
  413014:	test   DWORD PTR [ebx+edi*1-0x6b],0xbf4a9a6f
  41301c:	inc    edi
  41301d:	push   ss
  41301e:	dec    edi
  41301f:	daa    
  413020:	je     0x41305d
  413022:	in     eax,dx
  413023:	shr    BYTE PTR [eax+0x303aa373],cl
  413029:	adc    eax,0x1354bedf
  41302e:	sub    ah,ah
  413030:	jae    0x413089
  413032:	mov    cl,BYTE PTR ss:[edx-0x61]
  413036:	mov    bh,BYTE PTR [ecx-0x29]
  413039:	(bad)  
  41303a:	hlt    
  41303b:	pop    esp
  41303c:	and    edi,DWORD PTR [ecx+edi*1]
  41303f:	lock mov ah,BYTE PTR [eax+0x23]
  413043:	jecxz  0x412fd0
  413045:	pop    es
  413046:	add    BYTE PTR [edx+edi*8+0x62ec613e],al
  41304d:	xor    al,0xbd
  41304f:	in     eax,dx
  413050:	fcomp  QWORD PTR ds:0xb2287c92
  413056:	jb     0x412fec
  413058:	xchg   ebp,eax
  413059:	not    DWORD PTR ds:0x1d63c690
  41305f:	xchg   ecx,eax
  413060:	mov    bh,0xeb
  413063:	nop    DWORD PTR [edi]
  413066:	push   eax
  413067:	xchg   esi,eax
  413068:	jae    0x4130a8
  41306a:	cmp    ebp,ebx
  41306c:	out    0x79,al
  41306e:	inc    edx
  41306f:	popf   
  413070:	sbb    al,0x17
  413072:	mov    cl,0x5a
  413074:	sar    eax,1
  413076:	ror    dl,0x7b
  413079:	jl     0x4130e3
  41307b:	mov    ecx,0x40bed82d
  413080:	mov    dl,BYTE PTR [ecx+edi*2]
  413083:	mov    dl,0x9
  413085:	add    eax,0xadf518e2
  41308a:	test   DWORD PTR [esi],0x3c838d13
  413090:	leave  
  413091:	pop    eax
  413092:	xor    BYTE PTR [edi+0x17],bl
  413095:	mov    eax,0x891e99ee
  41309a:	scas   al,BYTE PTR es:[edi]
  41309b:	ds mov cl,0x20
  41309e:	dec    edi
  41309f:	mov    ebp,0xcec374b2
  4130a4:	test   eax,0x1b91e0f4
  4130a9:	mov    edx,0x5672518b
  4130ae:	scas   al,BYTE PTR es:[edi]
  4130af:	aas    
  4130b0:	jae    0x41308c
  4130b2:	cmp    esp,esi
  4130b4:	stos   BYTE PTR es:[edi],al
  4130b5:	mul    edx
  4130b7:	clc    
  4130b8:	adc    ebp,DWORD PTR [ecx+0x33d6ac86]
  4130be:	mov    al,bh
  4130c0:	xor    DWORD PTR [edx],ebp
  4130c2:	mov    ebx,0x1dc8b919
  4130c7:	push   ss
  4130c8:	adc    al,ch
  4130ca:	mov    gs:0x3cef344e,al
  4130d0:	or     eax,0x4a7c782d
  4130d5:	pop    ebp
  4130d6:	fs test edx,ebp
  4130d9:	push   esi
  4130da:	outs   dx,BYTE PTR ds:[esi]
  4130db:	mov    ds:0x78fb0cf5,al
  4130e0:	loope  0x4130fb
  4130e2:	retf   
  4130e3:	xor    eax,0xda323fb6
  4130e8:	repz inc eax
  4130ea:	outs   dx,BYTE PTR ds:[esi]
  4130eb:	enter  0x1637,0x17
  4130ef:	fistp  WORD PTR [edx+0x747959e7]
  4130f5:	mov    al,0xee
  4130f7:	mov    ebx,DWORD PTR [edx]
  4130f9:	sbb    DWORD PTR ss:[esi+0x53],esp
  4130fd:	sbb    al,0x59
  4130ff:	push   ebp
  413100:	ins    DWORD PTR es:[edi],dx
  413101:	test   BYTE PTR [edi-0x65e93bfd],0xc9
  413108:	pop    edi
  413109:	loope  0x413100
  41310b:	fs pop edx
  41310d:	mov    dl,0xad
  41310f:	test   al,0xd0
  413111:	adc    DWORD PTR [edi-0x14cd602f],ebp
  413117:	ja     0x4130af
  413119:	jp     0x4130a3
  41311b:	outs   dx,DWORD PTR ds:[esi]
  41311c:	inc    eax
  41311d:	push   ds
  41311e:	aad    0x63
  413120:	add    DWORD PTR [eax],ebx
  413122:	scas   al,BYTE PTR es:[edi]
  413123:	mov    eax,0x1adba4d7
  413128:	jl     0x4130f1
  41312a:	xor    al,0x4b
  41312c:	rcr    BYTE PTR [edi],1
  41312e:	cld    
  41312f:	ins    DWORD PTR es:[edi],dx
  413130:	sahf   
  413131:	outs   dx,BYTE PTR ds:[esi]
  413132:	outs   dx,BYTE PTR ds:[esi]
  413133:	mov    ah,dh
  413135:	or     ebx,DWORD PTR [ebp-0x54]
  413138:	ficomp DWORD PTR [esi]
  41313a:	adc    BYTE PTR [edx],0x85
  41313d:	sar    DWORD PTR ds:[ebx+0x6d79ccf8],0xfa
  413145:	sub    al,0x6c
  413147:	pusha  
  413148:	stos   DWORD PTR es:[edi],eax
  413149:	es (bad) 
  41314b:	xchg   ebx,eax
  41314c:	cmp    al,BYTE PTR [eax]
  41314e:	test   cl,0x90
  413151:	les    eax,FWORD PTR [edi]
  413153:	add    edi,DWORD PTR [eax-0x6831f463]
  413159:	add    eax,0xd11f7408
  41315e:	jmp    0x4131ac
  413160:	push   0x66
  413162:	mov    bh,0xb2
  413164:	lods   al,BYTE PTR ds:[esi]
  413165:	mov    DWORD PTR [edx+0x7486520b],ebx
  41316b:	dec    edx
  41316c:	sub    eax,0xb7ce1300
  413171:	xchg   edx,eax
  413172:	jmp    DWORD PTR ss:[ebp-0x6c]
  413176:	int3   
  413177:	sub    DWORD PTR [esi+0x5f],edi
  41317a:	out    0x95,eax
  41317c:	mov    ds:0xf9c60327,al
  413181:	add    eax,0xf234a2df
  413186:	call   0xefe521c7
  41318b:	mov    ah,0xe7
  41318d:	in     eax,0xd1
  41318f:	mov    ah,al
  413191:	rcr    ah,cl
  413193:	mov    edi,0x85d46954
  413198:	dec    ebp
  413199:	xor    BYTE PTR [ebp-0x69fc2265],ch
  41319f:	jbe    0x413123
  4131a1:	out    0xb4,eax
  4131a3:	out    0x11,eax
  4131a5:	and    al,0xb9
  4131a7:	js     0x4131b7
  4131a9:	xchg   BYTE PTR [edi],cl
  4131ab:	in     eax,0x75
  4131ad:	mov    bl,0x4d
  4131af:	jno    0x41321b
  4131b1:	(bad)  
  4131b3:	mov    esi,0xf5eddf2d
  4131b8:	adc    eax,0x3c0547e2
  4131bd:	cmp    eax,0x9a323f46
  4131c2:	fcomp  DWORD PTR [edi]
  4131c4:	mov    ah,0x55
  4131c6:	in     eax,dx
  4131c7:	and    eax,0x7c9a37d
  4131cc:	cli    
  4131cd:	push   edi
  4131ce:	xor    ecx,ebx
  4131d0:	xor    edi,edi
  4131d2:	add    edi,DWORD PTR ds:0x428465
  4131d8:	sub    DWORD PTR ds:0x428445,edi
  4131de:	shl    ecx,0x1e
  4131e1:	xor    DWORD PTR ds:0x428395,0x3d84
  4131eb:	mov    edi,0xa5069baf
  4131f0:	xor    eax,edi
  4131f2:	shr    eax,0x2
  4131f5:	jmp    0x41352e
  4131fa:	jmp    0x8a913c60
  4131ff:	mov    eax,0x40087bbc
  413204:	push   0xffffffd1
  413206:	loope  0x413220
  413208:	pop    esi
  413209:	sahf   
  41320a:	mov    esp,0xedbebe7e
  41320f:	les    edi,FWORD PTR [esi+0x450f88be]
  413215:	mov    ecx,ecx
  413217:	cmp    cl,BYTE PTR [edi-0x22]
  41321a:	ror    DWORD PTR ds:0x238f95bb,0xbe
  413221:	popf   
  413222:	and    DWORD PTR [ecx],edi
  413224:	test   BYTE PTR [ecx-0x3a],cl
  413227:	jecxz  0x413251
  413229:	cdq    
  41322a:	stos   DWORD PTR es:[edi],eax
  41322b:	mov    edx,esp
  41322d:	in     eax,0x7b
  41322f:	mov    cl,BYTE PTR [esi+eiz*8-0x7c]
  413233:	mov    edx,0x4a4ab862
  413238:	je     0x41323f
  41323a:	je     0x413261
  41323c:	retf   
  41323d:	sti    
  41323e:	fnstcw WORD PTR [esi+0x4a]
  413241:	std    
  413242:	nop
  413243:	push   ebp
  413244:	addr16 ja 0x41328a
  413247:	mov    dl,0x9d
  413249:	mov    edi,0x62407e75
  41324e:	or     al,0x3b
  413250:	jmp    0x382e:0xd6a5968a
  413257:	aad    0x57
  413259:	adc    al,0x27
  41325b:	in     al,dx
  41325c:	mov    esp,DWORD PTR [esi+0x3cd7b8a5]
  413262:	mul    BYTE PTR [edi+0x28]
  413265:	pop    ebx
  413266:	or     BYTE PTR [edx+esi*4-0x5c50df32],cl
  41326d:	sbb    ebx,DWORD PTR [eax]
  41326f:	mulps  xmm5,XMMWORD PTR [esi+0x155fac1]
  413276:	icebp  
  413277:	dec    esp
  413278:	and    bh,BYTE PTR [ecx+edx*1+0x5a6e933e]
  41327f:	inc    esi
  413280:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413281:	mov    BYTE PTR [ecx+0x173ac13c],bh
  413287:	out    dx,al
  413288:	jns    0x4132da
  41328a:	cmp    esp,DWORD PTR [eax]
  41328c:	add    eax,0x1e47d7bc
  413291:	jecxz  0x413242
  413293:	cmp    al,0x1c
  413295:	pop    ebp
  413296:	jg     0x4132c9
  413298:	push   es
  413299:	mov    edx,0xe60de44b
  41329e:	pop    esi
  41329f:	mov    dl,0x0
  4132a1:	mov    WORD PTR [ebp-0x7d3e6b63],es
  4132a7:	or     al,0x5f
  4132a9:	and    al,BYTE PTR [esi]
  4132ab:	jmp    0x413322
  4132ad:	jl     0x4132bb
  4132af:	fdiv   st,st(6)
  4132b1:	mov    edx,0xcd230865
  4132b6:	sub    edx,ebx
  4132b8:	dec    esp
  4132b9:	dec    esp
  4132ba:	popf   
  4132bb:	and    al,0x8b
  4132bd:	retf   0xd60e
  4132c0:	jp     0x4132af
  4132c2:	push   esp
  4132c3:	sub    BYTE PTR [ecx+0x40],ah
  4132c6:	clc    
  4132c7:	pop    esp
  4132c8:	cmp    edi,ecx
  4132ca:	ins    BYTE PTR es:[edi],dx
  4132cb:	rol    DWORD PTR [ecx+0x7ba0b8df],cl
  4132d1:	cmp    eax,0x84fee1e7
  4132d6:	sbb    al,0x87
  4132d8:	xor    BYTE PTR [edx-0xea41757],bh
  4132de:	sti    
  4132df:	sub    ch,BYTE PTR [esi+0x5]
  4132e2:	in     al,dx
  4132e3:	sbb    BYTE PTR [ebp+edi*4-0x25],0x5
  4132e8:	xchg   edx,eax
  4132e9:	jecxz  0x4132e7
  4132eb:	jmp    0x413304
  4132ed:	xchg   ebp,eax
  4132ee:	neg    DWORD PTR ds:0x195421ec
  4132f4:	mov    ds:0xb76f5025,al
  4132f9:	jle    0x4132d3
  4132fb:	lock xchg DWORD PTR [ecx+0x75],esi
  4132ff:	sub    dh,BYTE PTR [esi+0x1081ac40]
  413305:	test   eax,0x1b4b50a6
  41330a:	es das 
  41330c:	aas    
  41330d:	out    0x7a,al
  41330f:	stc    
  413310:	jo     0x41332f
  413312:	data16 hlt 
  413314:	std    
  413315:	jo     0x413350
  413317:	fadd   QWORD PTR ds:0x950ed63
  41331d:	sbb    al,0x4b
  41331f:	cmp    eax,0x538e2ef4
  413324:	popf   
  413325:	adc    DWORD PTR [eax],edx
  413327:	and    eax,DWORD PTR [edi+0x70d12e96]
  41332d:	(bad)  
  41332e:	in     al,0xbb
  413330:	gs jp  0x413381
  413333:	pop    esi
  413334:	lds    edi,FWORD PTR [ebp+edi*4-0x27]
  413338:	rcr    DWORD PTR [edi+0x3fcbfc58],cl
  41333e:	xchg   ecx,eax
  41333f:	clc    
  413340:	mov    cl,0x56
  413342:	jmp    0x506570fd
  413347:	dec    ecx
  413348:	dec    edi
  413349:	xchg   edx,eax
  41334a:	push   0xffffffa5
  41334c:	lea    esp,[ebx+0x1e]
  41334f:	es inc ebp
  413351:	xchg   ebx,eax
  413352:	xchg   DWORD PTR [ecx+0x635cf217],eax
  413358:	cmp    bl,bh
  41335a:	push   cs
  41335b:	(bad)  
  41335d:	cwde   
  41335e:	pop    ebp
  41335f:	ds fdiv st(5),st
  413362:	(bad)  
  413363:	loopne 0x41330e
  413365:	add    edx,edx
  413367:	mov    dh,0x6
  413369:	mov    edx,0x887dae4
  41336e:	push   ebp
  41336f:	imul   esp,DWORD PTR [ebp-0x36],0xffffff85
  413373:	sub    al,0x4e
  413375:	sar    esp,0x63
  413378:	in     eax,dx
  413379:	adc    BYTE PTR [ebx+0x13],dl
  41337c:	fiadd  WORD PTR [edx+0x67ca8d09]
  413382:	adc    DWORD PTR [esp+eiz*2-0x38],ebx
  413386:	mov    dl,0xad
  413388:	aam    0x57
  41338a:	enter  0x5e0b,0x43
  41338e:	or     DWORD PTR [edi+0x1],edi
  413391:	pop    ds
  413392:	rcl    DWORD PTR cs:[eax],1
  413395:	adc    DWORD PTR [edi*8-0x2c9f2730],esp
  41339c:	das    
  41339d:	out    dx,al
  41339e:	int3   
  41339f:	mov    esi,0x191ca4fa
  4133a4:	inc    ebx
  4133a5:	nop
  4133a6:	mov    ebx,0x65d1d2d1
  4133ab:	jae    0x413396
  4133ad:	mov    ds:0xad713fdb,eax
  4133b2:	xor    al,0xe1
  4133b4:	iret   
  4133b5:	fstp   QWORD PTR [esi]
  4133b7:	lds    edx,FWORD PTR [edx+0x6e]
  4133ba:	mov    bl,0x8d
  4133bc:	add    DWORD PTR [ebp-0x613ca795],edx
  4133c2:	lea    ebp,ds:0x5f754067
  4133c8:	inc    esi
  4133c9:	imul   eax,DWORD PTR [ecx-0x5eb482e8],0xea723a6a
  4133d3:	ins    BYTE PTR es:[edi],dx
  4133d4:	popf   
  4133d5:	xor    cl,BYTE PTR [edi-0x39]
  4133d8:	std    
  4133d9:	or     al,0x4f
  4133db:	add    BYTE PTR [ebp-0x2b371df6],cl
  4133e1:	js     0x4133c2
  4133e3:	dec    eax
  4133e4:	xor    BYTE PTR [edx],bh
  4133e6:	pop    esi
  4133e7:	pop    esp
  4133e8:	les    ebp,FWORD PTR [edi]
  4133ea:	(bad)  
  4133eb:	jns    0x4133a2
  4133ed:	es pusha 
  4133ef:	inc    esp
  4133f0:	rcl    DWORD PTR [ebx-0x28e6881f],0xbb
  4133f7:	pop    ss
  4133f8:	retf   
  4133f9:	lahf   
  4133fa:	mov    eax,0x35af931c
  4133ff:	int    0xb0
  413401:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413402:	scas   eax,DWORD PTR es:[edi]
  413403:	imul   bp,WORD PTR [edx+0x4658afd2],0xffac
  41340b:	add    al,0x58
  41340d:	xchg   esp,eax
  41340e:	fisttp WORD PTR [edi+0x2d3776fd]
  413414:	mov    ss,WORD PTR es:[ebx-0x68]
  413418:	xor    dl,cl
  41341a:	outs   dx,BYTE PTR ds:[esi]
  41341b:	daa    
  41341c:	hlt    
  41341d:	mov    bl,0xa9
  41341f:	(bad)  
  413420:	push   cs
  413421:	fdivr  QWORD PTR [eax-0x1f]
  413424:	loope  0x4133ce
  413426:	and    al,BYTE PTR [ebx]
  413428:	adc    dl,BYTE PTR [ebp-0x19]
  41342b:	fcmovnb st,st(2)
  41342d:	rcl    dl,0x51
  413430:	mov    ds:0x1fa1f9cd,eax
  413435:	out    dx,al
  413436:	jb     0x4133d8
  413438:	xor    eax,0x9b60c73a
  41343d:	jle    0x413430
  41343f:	imul   esp,DWORD PTR [edi-0x1f],0xfdb900f
  413446:	imul   ebp,DWORD PTR [ecx-0x62bc9ca5],0x7601120d
  413450:	aad    0x3a
  413452:	add    ebp,DWORD PTR [ebx]
  413454:	dec    esi
  413455:	jnp    0x413413
  413457:	mov    eax,0x3753aa3a
  41345c:	xchg   edi,eax
  41345d:	jo     0x41343f
  41345f:	cdq    
  413460:	or     bh,bl
  413462:	mov    es,ebx
  413464:	push   esp
  413465:	push   ebx
  413466:	adc    BYTE PTR [ebx+0x4da36ad2],ch
  41346c:	mov    al,ch
  41346e:	repz lds ebp,FWORD PTR ds:[eax+ebp*1]
  413473:	loop   0x4134ec
  413475:	out    0x88,eax
  413477:	pop    ebx
  413478:	clc    
  413479:	retf   
  41347a:	mov    eax,ds:0x6b197f4
  413480:	pop    edx
  413481:	dec    edx
  413482:	shl    ebx,cl
  413484:	cwde   
  413485:	mov    ah,BYTE PTR [ecx-0x1a]
  413488:	mov    WORD PTR [ebx+0x3e],fs
  41348b:	pusha  
  41348c:	or     ecx,edi
  41348e:	sub    bl,0x4c
  413491:	and    eax,ecx
  413493:	fidivr DWORD PTR [edi+0x125a1791]
  413499:	mov    al,cl
  41349b:	mov    edx,0xa12b2bf9
  4134a0:	ror    DWORD PTR [esi],0x1c
  4134a3:	pop    ds
  4134a4:	push   esp
  4134a5:	popa   
  4134a6:	scas   eax,DWORD PTR es:[edi]
  4134a7:	pushf  
  4134a8:	xor    eax,0x8985e616
  4134ad:	fst    DWORD PTR [ebx+edx*4+0x271f5b1e]
  4134b4:	xor    eax,0x8f2249bb
  4134b9:	mov    al,ds:0xd52ef839
  4134be:	ret    0x9cf
  4134c1:	and    edi,DWORD PTR [ecx-0x53]
  4134c4:	mov    cl,0x82
  4134c6:	and    cl,BYTE PTR [eax+0x3a2a7e92]
  4134cc:	scas   al,BYTE PTR es:[edi]
  4134cd:	or     BYTE PTR [edi],dh
  4134cf:	test   al,0xb5
  4134d2:	push   ecx
  4134d3:	pop    ss
  4134d4:	test   esi,esi
  4134d6:	pop    edx
  4134d7:	and    BYTE PTR [edx-0x45b0b454],al
  4134dd:	pop    edi
  4134de:	retf   0x26a7
  4134e1:	hlt    
  4134e2:	mov    edx,0xb09f419e
  4134e7:	call   0x2094:0x21c13039
  4134ee:	xor    DWORD PTR [ebp+esi*2-0xb],0xc
  4134f3:	xor    BYTE PTR [edx-0x2e],dl
  4134f6:	pop    eax
  4134f7:	dec    edi
  4134f8:	mov    esi,0x6b26c2f6
  4134fd:	neg    dh
  4134ff:	cmp    eax,ecx
  413501:	xchg   esi,eax
  413502:	xchg   edx,eax
  413503:	push   esi
  413504:	or     eax,0x5e1260a9
  413509:	add    bl,BYTE PTR [edx]
  41350b:	jle    0x4134ae
  41350d:	xchg   ebp,eax
  41350e:	mov    eax,0x38fa319
  413513:	jno    0x4134c7
  413515:	mov    WORD PTR [ebx-0x7a],ss
  413518:	cmp    DWORD PTR [esi-0x368a61eb],eax
  41351e:	cmp    DWORD PTR ds:0xec694651,ebx
  413524:	mov    bh,0x1d
  413526:	or     al,0x17
  413528:	push   eax
  413529:	test   eax,0x47503fab
  41352e:	or     eax,ecx
  413530:	cmp    DWORD PTR ds:0x428361,0x0
  413537:	mov    DWORD PTR ds:0x428471,0x5b09
  413541:	movzx  ecx,WORD PTR ds:0x428389
  413548:	jmp    0x413626
  41354d:	mov    DWORD PTR ds:0x42839d,0x463b
  413557:	cmp    DWORD PTR ds:0x428361,0x0
  41355e:	ja     0x413594
  413564:	push   0x1092
  413569:	push   0x34c2
  41356e:	push   DWORD PTR [ebp-0x10]
  413571:	push   0x63e1
  413576:	push   0x4282c5
  41357b:	push   DWORD PTR [ebp-0x24]
  41357e:	call   DWORD PTR ds:0x42e0d8
  413584:	adc    DWORD PTR ds:0x428529,0x3ae5
  41358e:	or     ecx,DWORD PTR ds:0x428579
  413594:	mov    ecx,DWORD PTR ds:0x428509
  41359a:	xor    DWORD PTR ds:0x428595,ecx
  4135a0:	add    DWORD PTR ds:0x4284f5,0x73c1
  4135aa:	xor    DWORD PTR ds:0x428501,0x45f8
  4135b4:	cmp    DWORD PTR ds:0x42852d,0x0
  4135bb:	mov    ecx,0x9c7
  4135c0:	mov    DWORD PTR ds:0x42837d,0x5708
  4135ca:	mov    DWORD PTR ds:0x428501,0x67de
  4135d4:	jmp    0x413626
  4135d9:	mov    ecx,DWORD PTR ds:0x42837d
  4135df:	cmp    DWORD PTR ds:0x42852d,0x0
  4135e6:	jl     0x413613
  4135ec:	push   DWORD PTR [ebp-0x14]
  4135ef:	push   DWORD PTR [ebp-0x10]
  4135f2:	push   DWORD PTR [ebp-0x28]
  4135f5:	call   DWORD PTR ds:0x42e0dc
  4135fb:	adc    DWORD PTR ds:0x42845d,edx
  413601:	mov    ecx,DWORD PTR ds:0x428371
  413607:	and    DWORD PTR ds:0x42857d,ecx
  41360d:	and    DWORD PTR ds:0x428385,edx
  413613:	mov    ecx,DWORD PTR ds:0x428451
  413619:	xor    ecx,DWORD PTR ds:0x428481
  41361f:	mov    DWORD PTR ds:0x428451,ecx
  413625:	dec    ecx
  413626:	mov    DWORD PTR [ebp-0xc],eax
  413629:	cmp    DWORD PTR ds:0x428479,0x0
  413630:	mov    DWORD PTR ds:0x428455,0x7db5
  41363a:	mov    DWORD PTR ds:0x42848d,edi
  413640:	jmp    0x4136bd
  413645:	mov    ecx,DWORD PTR ds:0x428365
  41364b:	mov    eax,ds:0x42846d
  413650:	cmp    DWORD PTR ds:0x428479,0x0
  413657:	je     0x4136a7
  41365d:	push   DWORD PTR [ebp-0x20]
  413660:	push   DWORD PTR [ebp-0x28]
  413663:	push   DWORD PTR [ebp-0x28]
  413666:	push   DWORD PTR [ebp-0xc]
  413669:	push   DWORD PTR [ebp-0x18]
  41366c:	push   DWORD PTR [ebp-0xc]
  41366f:	push   DWORD PTR [ebp-0x14]
  413672:	push   DWORD PTR [ebp-0x1c]
  413675:	push   DWORD PTR [ebp-0x20]
  413678:	push   DWORD PTR [ebp-0x14]
  41367b:	push   0x6fca
  413680:	push   DWORD PTR [ebp-0x14]
  413683:	push   0x1843
  413688:	call   DWORD PTR ds:0x42e014
  41368e:	movzx  ecx,BYTE PTR ds:0x42845d
  413695:	and    DWORD PTR ds:0x428579,ecx
  41369b:	sbb    ecx,0x7147
  4136a1:	and    DWORD PTR ds:0x4284f5,ebx
  4136a7:	mov    ecx,DWORD PTR ds:0x4284a5
  4136ad:	add    DWORD PTR ds:0x42844d,ecx
  4136b3:	and    DWORD PTR ds:0x42839d,0x5196
  4136bd:	mov    eax,ds:0x422738
  4136c2:	adc    DWORD PTR ds:0x428455,0x635d
  4136cc:	mov    DWORD PTR [ebp-0xc],eax
  4136cf:	cmp    DWORD PTR ds:0x428501,0x0
  4136d6:	mov    DWORD PTR ds:0x428375,0x6dcc
  4136e0:	mov    ecx,DWORD PTR ds:0x428471
  4136e6:	jmp    0x413753
  4136eb:	mov    DWORD PTR ds:0x42850d,0x2cf
  4136f5:	mov    DWORD PTR ds:0x4285b1,0x621d
  4136ff:	cmp    DWORD PTR ds:0x428501,0x0
  413706:	jbe    0x41373d
  41370c:	push   0x428501
  413711:	push   0x428435
  413716:	push   0x2216
  41371b:	call   DWORD PTR ds:0x42e258
  413721:	and    ecx,ecx
  413723:	mov    ecx,DWORD PTR ds:0x4283dd
  413729:	mov    ecx,DWORD PTR [ecx]
  41372b:	add    DWORD PTR ds:0x42839d,ecx
  413731:	or     ecx,ecx
  413733:	sbb    DWORD PTR ds:0x42851d,0x6873
  41373d:	sbb    DWORD PTR ds:0x428525,ecx
  413743:	adc    DWORD PTR ds:0x4284a1,0x1149
  41374d:	or     DWORD PTR ds:0x428521,edx
  413753:	mov    eax,DWORD PTR [ebp-0x28]
  413756:	cmp    DWORD PTR ds:0x428485,0x0
  41375d:	mov    ecx,0xa9f
  413762:	mov    DWORD PTR ds:0x42844d,0x1875
  41376c:	mov    DWORD PTR ds:0x428521,0x319d
  413776:	jmp    0x41383a
  41377b:	mov    DWORD PTR ds:0x428511,0x86c
  413785:	cmp    DWORD PTR ds:0x428485,0x0
  41378c:	jle    0x4137bf
  413792:	push   0x50b5
  413797:	call   DWORD PTR ds:0x42e25c
  41379d:	add    DWORD PTR ds:0x428395,0x737d
  4137a7:	sub    ecx,DWORD PTR ds:0x428521
  4137ad:	mov    ecx,DWORD PTR ds:0x428595
  4137b3:	xor    ecx,DWORD PTR ds:0x428461
  4137b9:	mov    DWORD PTR ds:0x428595,ecx
  4137bf:	inc    ecx
  4137c0:	movzx  ecx,BYTE PTR ds:0x428395
  4137c7:	sub    ecx,DWORD PTR ds:0x428501
  4137cd:	mov    DWORD PTR ds:0x428395,ecx
  4137d3:	cmp    DWORD PTR ds:0x42847d,0x0
  4137da:	not    ecx
  4137dc:	mov    DWORD PTR ds:0x42843d,0x5561
  4137e6:	jmp    0x41383a
  4137eb:	mov    DWORD PTR ds:0x4285b1,0x2772
  4137f5:	cmp    DWORD PTR ds:0x42847d,0x0
  4137fc:	jle    0x41381e
  413802:	push   0x5196
  413807:	push   0x42823f
  41380c:	call   DWORD PTR ds:0x42e260
  413812:	sbb    DWORD PTR ds:0x428399,ecx
  413818:	xor    ecx,DWORD PTR ds:0x4285ad
  41381e:	and    DWORD PTR ds:0x42846d,edi
  413824:	inc    DWORD PTR ds:0x428481
  41382a:	add    DWORD PTR ds:0x428389,0x3293
  413834:	or     DWORD PTR ds:0x428455,ecx
  41383a:	mov    DWORD PTR [ebp-0x24],eax
  41383d:	mov    ecx,DWORD PTR [ebp-0x24]
  413840:	push   0x4
  413842:	sub    DWORD PTR ds:0x42850d,0x4aeb
  41384c:	pop    eax
  41384d:	sbb    DWORD PTR ds:0x42858d,0x428389
  413857:	sub    eax,ecx
  413859:	cmp    DWORD PTR ds:0x4283a1,0x0
  413860:	mov    ecx,DWORD PTR ds:0x428521
  413866:	not    ecx
  413868:	movzx  ecx,BYTE PTR ds:0x428379
  41386f:	mov    ecx,DWORD PTR ds:0x428495
  413875:	jmp    0x4138c3
  41387a:	mov    DWORD PTR ds:0x428511,0x61cd
  413884:	cmp    DWORD PTR ds:0x4283a1,0x0
  41388b:	je     0x4138b5
  413891:	push   0x428515
  413896:	push   0x42830f
  41389b:	call   DWORD PTR ds:0x42e264
  4138a1:	or     DWORD PTR ds:0x428491,0x428455
  4138ab:	mov    DWORD PTR ds:0x428451,0x2055
  4138b5:	sub    ecx,DWORD PTR ds:0x42848d
  4138bb:	or     ecx,DWORD PTR ds:0x42843d
  4138c1:	neg    ecx
  4138c3:	mov    ecx,DWORD PTR [ebp-0x20]
  4138c6:	add    ecx,eax
  4138c8:	mov    DWORD PTR [ebp-0x30],ecx
  4138cb:	lea    eax,[ebp-0x3c]
  4138ce:	mov    DWORD PTR [ebp-0x38],eax
  4138d1:	mov    eax,DWORD PTR [ebp-0x18]
  4138d4:	mov    ecx,DWORD PTR [ebp-0x18]
  4138d7:	xor    eax,edi
  4138d9:	xor    ecx,ebx
  4138db:	shr    eax,0x2
  4138de:	shl    ecx,0x1e
  4138e1:	or     eax,ecx
  4138e3:	mov    DWORD PTR [ebp-0x2c],eax
  4138e6:	mov    DWORD PTR [ebp-0x8],0xa5069bbe
  4138ed:	mov    eax,DWORD PTR [ebp-0x8]
  4138f0:	mov    ecx,DWORD PTR [ebp-0x8]
  4138f3:	xor    eax,edi
  4138f5:	xor    ecx,ebx
  4138f7:	shr    eax,0x2
  4138fa:	shl    ecx,0x1e
  4138fd:	or     ecx,eax
  4138ff:	push   ecx
  413900:	lea    eax,[ebp-0x8]
  413903:	push   eax
  413904:	lea    eax,[ebp-0x80]
  413907:	push   eax
  413908:	call   0x411c08
  41390d:	mov    eax,DWORD PTR [ebp-0x8]
  413910:	mov    ecx,DWORD PTR [ebp-0x8]
  413913:	xor    eax,edi
  413915:	xor    ecx,ebx
  413917:	shr    eax,0x2
  41391a:	shl    ecx,0x1e
  41391d:	or     ecx,eax
  41391f:	push   ecx
  413920:	lea    eax,[ebp-0x24]
  413923:	push   eax
  413924:	mov    eax,DWORD PTR [ebp+0x8]
  413927:	mov    ecx,DWORD PTR [ebp+0xc]
  41392a:	shrd   eax,ecx,0x2
  41392e:	shr    ecx,0x2
  413931:	mov    ecx,DWORD PTR [ebp+0x8]
  413934:	mov    edx,DWORD PTR [ebp+0xc]
  413937:	xor    eax,esi
  413939:	xor    edx,edx
  41393b:	or     eax,edx
  41393d:	lea    eax,[ebp+eax*4-0x7c]
  413941:	push   eax
  413942:	shl    ecx,0x1e
  413945:	call   0x411c08
  41394a:	mov    eax,DWORD PTR [ebp-0x8]
  41394d:	mov    ecx,DWORD PTR [ebp-0x8]
  413950:	xor    eax,edi
  413952:	xor    ecx,ebx
  413954:	shr    eax,0x2
  413957:	shl    ecx,0x1e
  41395a:	or     ecx,eax
  41395c:	push   ecx
  41395d:	lea    eax,[ebp-0x30]
  413960:	push   eax
  413961:	jmp    0x413c9a
  413966:	in     eax,dx
  413967:	dec    edi
  413968:	ret    
  413969:	in     al,dx
  41396a:	fs jl  0x413963
  41396d:	pop    ebx
  41396e:	push   0x21e3e744
  413973:	mov    esp,0x86ecddfe
  413978:	mov    esi,0xbec4edbe
  41397d:	mov    esi,0x8cc78385
  413982:	push   ss
  413983:	repz jl 0x4139d9
  413986:	fmul   st(3),st
  413988:	xor    eax,0xba86812d
  41398d:	mov    ds:0x5adca12,eax
  413992:	sbb    DWORD PTR [ecx-0x2cf04b91],esp
  413998:	(bad)  
  413999:	(bad)  
  41399a:	push   esp
  41399b:	fdivrp st(4),st
  41399d:	ss aam 0x7c
  4139a0:	jp     0x413930
  4139a2:	inc    ebp
  4139a3:	push   es
  4139a4:	clc    
  4139a5:	icebp  
  4139a6:	xchg   ebp,eax
  4139a7:	sbb    dl,BYTE PTR [esi+0x35]
  4139aa:	(bad)  
  4139ab:	cmp    DWORD PTR [eax-0x43396740],ebp
  4139b1:	test   BYTE PTR ds:0xe16ce28d,dl
  4139b7:	lock push ebp
  4139b9:	pushf  
  4139ba:	and    bl,cl
  4139bc:	retf   
  4139bd:	out    dx,eax
  4139be:	add    eax,0xf5d195da
  4139c3:	popa   
  4139c4:	add    al,0xae
  4139c6:	sahf   
  4139c7:	sbb    esp,DWORD PTR [edi+0x7f]
  4139ca:	das    
  4139cb:	xchg   ebp,eax
  4139cc:	ret    
  4139cd:	lock (bad) 
  4139d0:	test   DWORD PTR [esi],edi
  4139d2:	jg     0x41397f
  4139d4:	mov    ch,0x13
  4139d6:	cmp    edi,DWORD PTR [edx]
  4139d8:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139da:	stos   DWORD PTR es:[edi],eax
  4139db:	cmp    eax,0xff18ada4
  4139e0:	sti    
  4139e1:	cs pop es
  4139e3:	jae    0x413967
  4139e5:	xor    ebx,DWORD PTR [ebx+0x5f79967a]
  4139eb:	sbb    eax,DWORD PTR [edi]
  4139ed:	pop    ds
  4139ee:	mov    eax,0xbe1b6b9d
  4139f3:	test   DWORD PTR [esi],ebx
  4139f5:	aad    0x73
  4139f7:	mov    ch,0x1b
  4139f9:	push   ebp
  4139fa:	dec    edx
  4139fb:	ds inc ebx
  4139fd:	rcl    DWORD PTR [ecx+0x16bb824],cl
  413a03:	xchg   ecx,eax
  413a04:	jg     0x41399e
  413a06:	sub    edx,esi
  413a08:	ss jb  0x413a09
  413a0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a0c:	rcl    DWORD PTR [esi-0x5464cf87],0x39
  413a13:	xor    BYTE PTR [edx-0x5f50bf9a],dl
  413a19:	and    DWORD PTR [ebp+ebx*1-0x6d],esi
  413a1d:	fsub   DWORD PTR [esi+eax*1+0x347d86bf]
  413a24:	retf   
  413a25:	lock mov esi,DWORD PTR fs:[ebx+0x5d11afe4]
  413a2d:	in     eax,0x14
  413a2f:	push   ebx
  413a30:	fisttp WORD PTR [di]
  413a33:	add    al,0xef
  413a35:	xchg   edx,eax
  413a36:	je     0x413a1d
  413a38:	jl     0x413a5f
  413a3a:	mov    al,ds:0x9df648d6
  413a3f:	inc    edi
  413a40:	test   DWORD PTR [esi],ecx
  413a42:	inc    ebp
  413a43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a44:	mov    cl,0xc9
  413a46:	push   esp
  413a47:	add    eax,0x959f7e07
  413a4c:	cmp    esi,esi
  413a4e:	es mov ah,0x5f
  413a51:	pop    eax
  413a52:	in     eax,dx
  413a53:	aad    0x71
  413a55:	fdivr  st,st(5)
  413a57:	in     al,dx
  413a58:	add    ebx,DWORD PTR [ebp+esi*2+0x33]
  413a5c:	sbb    al,bl
  413a5e:	cmp    eax,0x8b8c037c
  413a63:	retf   
  413a64:	(bad)  
  413a65:	pop    edx
  413a66:	mov    bl,0xa2
  413a68:	daa    
  413a69:	and    esi,esp
  413a6b:	scas   al,BYTE PTR es:[edi]
  413a6c:	add    dl,BYTE PTR [edi-0x6]
  413a6f:	aas    
  413a70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a71:	mov    eax,ds:0x20ca067d
  413a76:	push   es
  413a77:	dec    eax
  413a78:	stos   DWORD PTR es:[edi],eax
  413a79:	out    0x80,eax
  413a7b:	add    eax,0xddfbc748
  413a80:	ds dec ebx
  413a82:	std    
  413a83:	jno    0x413a6e
  413a85:	ds mov edx,esp
  413a88:	mov    ds:0x4feb8a70,al
  413a8d:	pop    esp
  413a8e:	int3   
  413a8f:	lods   al,BYTE PTR ds:[esi]
  413a90:	fcmovu st,st(1)
  413a92:	add    DWORD PTR [ebp-0x59],esi
  413a95:	jl     0x413a88
  413a97:	dec    ecx
  413a98:	or     bh,BYTE PTR [edx-0x43]
  413a9b:	sub    ebx,esi
  413a9d:	dec    ecx
  413a9e:	in     eax,0x3e
  413aa0:	icebp  
  413aa1:	lds    esp,FWORD PTR [ebx]
  413aa3:	call   0x67fd1405
  413aa8:	or     edi,ebp
  413aaa:	lods   eax,DWORD PTR ds:[esi]
  413aab:	pop    edx
  413aac:	lea    ecx,[edi-0x2bae6e25]
  413ab2:	cmp    cl,dl
  413ab4:	pop    ebp
  413ab5:	loop   0x413a4c
  413ab7:	jecxz  0x413a62
  413ab9:	sbb    eax,0x55a992fb
  413abe:	or     edx,edi
  413ac0:	fcmovnbe st,st(6)
  413ac2:	xchg   esp,eax
  413ac3:	cmc    
  413ac4:	mov    WORD PTR [esi-0x3faa5329],?
  413aca:	sub    ch,ah
  413acc:	rcl    BYTE PTR [edi+0x6d],cl
  413acf:	mov    cl,0x59
  413ad1:	outs   dx,DWORD PTR ds:[esi]
  413ad2:	rol    BYTE PTR [eax+0x13],1
  413ad5:	cmp    bl,ah
  413ad7:	sub    BYTE PTR [ebx-0xcf2f52d],al
  413add:	fiadd  WORD PTR ss:[edi+0x41]
  413ae1:	mov    ah,0x77
  413ae3:	setns  BYTE PTR [edi+ebp*2]
  413ae7:	sti    
  413ae8:	xor    BYTE PTR [ebx],dh
  413aea:	fld    QWORD PTR [eax+eiz*8-0x18]
  413aee:	sbb    BYTE PTR [edi+0x4f],ah
  413af1:	jg     0x413b4e
  413af3:	adc    BYTE PTR [esi+0x3876912c],ch
  413af9:	jae    0x413aac
  413afb:	sub    ch,ch
  413afd:	ja     0x413af1
  413aff:	mov    eax,ds:0x755f0467
  413b04:	dec    edi
  413b05:	fwait
  413b06:	mov    ds:0xec3863c3,al
  413b0b:	mov    cl,0xd9
  413b0d:	cmc    
  413b0e:	adc    al,0xfe
  413b10:	aas    
  413b11:	jb     0x413b2c
  413b13:	sti    
  413b14:	bound  esp,QWORD PTR [esi+0x4c]
  413b17:	push   ecx
  413b18:	and    ch,BYTE PTR [ecx+0x45]
  413b1b:	xchg   ebp,eax
  413b1c:	int3   
  413b1d:	adc    ah,BYTE PTR [eax+0x6f95e669]
  413b23:	(bad)  
  413b24:	mov    esi,0xc9f4bf53
  413b29:	cmp    eax,0x43ebece
  413b2e:	bound  eax,QWORD PTR [eax]
  413b30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b31:	sub    BYTE PTR [edi-0x4c3b86bd],dl
  413b37:	test   eax,0x804e3780
  413b3c:	retf   0x4f5a
  413b3f:	cmp    ebx,esp
  413b41:	mov    ah,0x20
  413b43:	(bad)  
  413b44:	cmc    
  413b45:	sbb    eax,0xc4feca40
  413b4a:	cmp    DWORD PTR [eax+0x3c],edi
  413b4d:	xor    edx,DWORD PTR [ebp-0x33]
  413b50:	dec    edi
  413b51:	xor    ebp,esi
  413b53:	fild   DWORD PTR [ebp+0x1cf21340]
  413b59:	push   0x4
  413b5b:	mov    ebp,0xf0cbb6b1
  413b60:	mov    eax,ds:0xd342a7c0
  413b65:	add    bh,bl
  413b67:	dec    esp
  413b68:	popa   
  413b69:	fdivr  QWORD PTR [edx+0x5983a7a9]
  413b6f:	ss int3 
  413b71:	sti    
  413b72:	push   esp
  413b73:	shl    cl,0x49
  413b76:	inc    edx
  413b77:	stos   DWORD PTR es:[edi],eax
  413b78:	dec    edi
  413b79:	push   ecx
  413b7a:	mov    ebx,0xf75c926d
  413b7f:	data16 loop 0x413b25
  413b82:	mov    eax,0x7ff4547e
  413b87:	jns    0x413b97
  413b89:	ss sahf 
  413b8b:	xor    ch,bl
  413b8d:	cmp    ecx,DWORD PTR [ecx]
  413b8f:	hlt    
  413b90:	es out 0xea,al
  413b93:	aaa    
  413b94:	sbb    al,0x86
  413b96:	jp     0x413c17
  413b98:	push   es
  413b99:	push   ebx
  413b9a:	arpl   cx,ax
  413b9c:	xchg   esi,eax
  413b9d:	xchg   BYTE PTR [edx+0x31],bl
  413ba0:	or     al,0x5b
  413ba2:	pushf  
  413ba3:	xchg   ebp,eax
  413ba4:	xor    eax,0xde6804b0
  413ba9:	shl    DWORD PTR [edx-0x3b],cl
  413bac:	dec    eax
  413bad:	xchg   esi,eax
  413bae:	sbb    ecx,DWORD PTR [eax*2+0x57d22848]
  413bb5:	xor    BYTE PTR [eax],0x8d
  413bb8:	add    eax,0x6face6e7
  413bbd:	pop    ebx
  413bbe:	cmp    al,0x95
  413bc0:	shl    BYTE PTR [esi+0x1a542917],0x7a
  413bc7:	test   BYTE PTR [eax+edi*8+0x705467e5],bl
  413bce:	mov    ch,0x81
  413bd0:	rcr    DWORD PTR [edi],0xe9
  413bd3:	rol    DWORD PTR [edx-0x46f71d3f],cl
  413bd9:	and    BYTE PTR [eax],cl
  413bdb:	jecxz  0x413c54
  413bdd:	pop    edx
  413bde:	push   edi
  413bdf:	jo     0x413c29
  413be1:	(bad)  
  413be2:	cmp    BYTE PTR [edx],dh
  413be4:	mov    eax,ds:0xc9d01a5b
  413be9:	push   ds
  413bea:	or     al,0x7f
  413bec:	out    dx,eax
  413bed:	mov    bl,0xfc
  413bef:	jle    0x413b7d
  413bf1:	fabs   
  413bf3:	fldenv [edx+0x7ff67c3f]
  413bf9:	nop
  413bfa:	cmc    
  413bfb:	mov    ecx,0xf2db72b
  413c00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c01:	xor    eax,0x453eff7b
  413c06:	pop    esi
  413c07:	jns    0x413be1
  413c09:	jecxz  0x413bf1
  413c0b:	xchg   ebp,eax
  413c0c:	xchg   edi,eax
  413c0d:	rcl    ch,1
  413c0f:	adc    esp,DWORD PTR [ebp-0x17cb7035]
  413c15:	retf   
  413c16:	cmp    al,0x35
  413c18:	push   edx
  413c19:	(bad)  
  413c1a:	jmp    0x413c95
  413c1c:	(bad)  
  413c1d:	sub    ecx,DWORD PTR [eax-0x53]
  413c20:	lods   al,BYTE PTR ds:[esi]
  413c21:	ds jnp 0x413c55
  413c24:	push   0xffffffba
  413c26:	pop    ds
  413c27:	fs inc ebx
  413c29:	sbb    al,0x6c
  413c2b:	ror    BYTE PTR [eax+0x55bc0ad5],0x37
  413c32:	xlat   BYTE PTR ds:[ebx]
  413c33:	icebp  
  413c34:	cmp    ah,BYTE PTR [ebx]
  413c36:	in     eax,dx
  413c37:	int3   
  413c38:	cli    
  413c39:	js     0x413c6e
  413c3b:	push   ss
  413c3c:	fdiv   DWORD PTR [esi]
  413c3e:	mov    ch,BYTE PTR [ecx+0x587e2c0]
  413c44:	push   0xb905cd89
  413c49:	ins    BYTE PTR es:[edi],dx
  413c4a:	test   DWORD PTR [ebx+0xe64bcf3],0x1dd5a7a7
  413c54:	es or  eax,0x451bbd18
  413c5a:	mov    esp,0x4a7a84ea
  413c5f:	sub    esi,DWORD PTR [edx-0x4109ffed]
  413c65:	adc    BYTE PTR [edx-0x5b],bh
  413c68:	ds adc eax,0x4082cec8
  413c6e:	test   al,0xca
  413c70:	cli    
  413c71:	and    DWORD PTR [eax+0x2c83d6fe],edx
  413c77:	call   0xbc43:0x72f832e0
  413c7e:	les    edx,FWORD PTR [ebx]
  413c80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c81:	imul   ebp,DWORD PTR [esi-0x25917ac7],0x5bade1bb
  413c8b:	loope  0x413ce3
  413c8d:	sub    edx,DWORD PTR [esi+0x28]
  413c90:	icebp  
  413c91:	imul   ebp,DWORD PTR [ebx-0x4f],0x473e32c8
  413c98:	pop    esi
  413c99:	or     BYTE PTR [ebx+0x4d8b1045],0x14
  413ca0:	shrd   eax,ecx,0x2
  413ca4:	shr    ecx,0x2
  413ca7:	mov    ecx,DWORD PTR [ebp+0x10]
  413caa:	mov    edx,DWORD PTR [ebp+0x14]
  413cad:	xor    eax,esi
  413caf:	xor    edx,edx
  413cb1:	or     eax,edx
  413cb3:	lea    eax,[ebp+eax*4-0x7c]
  413cb7:	push   eax
  413cb8:	shl    ecx,0x1e
  413cbb:	call   0x411c08
  413cc0:	mov    eax,DWORD PTR [ebp-0x8]
  413cc3:	mov    ecx,DWORD PTR [ebp-0x8]
  413cc6:	xor    ecx,ebx
  413cc8:	xor    eax,edi
  413cca:	shl    ecx,0x1e
  413ccd:	shr    eax,0x2
  413cd0:	or     ecx,eax
  413cd2:	push   ecx
  413cd3:	lea    eax,[ebp-0x2c]
  413cd6:	push   eax
  413cd7:	mov    eax,DWORD PTR [ebp+0x10]
  413cda:	mov    ecx,DWORD PTR [ebp+0x14]
  413cdd:	shrd   eax,ecx,0x2
  413ce1:	shr    ecx,0x2
  413ce4:	mov    ecx,DWORD PTR [ebp+0x10]
  413ce7:	mov    edx,DWORD PTR [ebp+0x14]
  413cea:	xor    edx,edx
  413cec:	xor    eax,esi
  413cee:	or     eax,edx
  413cf0:	shl    ecx,0x1e
  413cf3:	mov    ecx,DWORD PTR [ebp+0x10]
  413cf6:	mov    edx,DWORD PTR [ebp+0x14]
  413cf9:	shrd   ecx,edx,0x2
  413cfd:	shr    edx,0x2
  413d00:	mov    edx,DWORD PTR [ebp+0x10]
  413d03:	mov    ebx,DWORD PTR [ebp+0x14]
  413d06:	xor    ecx,esi
  413d08:	xor    ebx,ebx
  413d0a:	or     ecx,ebx
  413d0c:	add    eax,ecx
  413d0e:	lea    eax,[ebp+eax*4-0x7c]
  413d12:	push   eax
  413d13:	shl    edx,0x1e
  413d16:	call   0x411c08
  413d1b:	mov    eax,DWORD PTR [ebp-0x8]
  413d1e:	mov    ecx,DWORD PTR [ebp-0x8]
  413d21:	xor    ecx,0xfffffffe
  413d24:	shl    ecx,0x1e
  413d27:	xor    eax,edi
  413d29:	shr    eax,0x2
  413d2c:	or     ecx,eax
  413d2e:	push   ecx
  413d2f:	lea    eax,[ebp-0x38]
  413d32:	push   eax
  413d33:	mov    eax,DWORD PTR [ebp+0x10]
  413d36:	mov    ecx,DWORD PTR [ebp+0x14]
  413d39:	shrd   eax,ecx,0x2
  413d3d:	shr    ecx,0x2
  413d40:	jmp    0x414079
  413d45:	lock aad 0x95
  413d48:	dec    ecx
  413d49:	mov    bh,0x8a
  413d4b:	xor    al,0x7c
  413d4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d4e:	cmp    eax,0xa461dd72
  413d53:	inc    esp
  413d54:	fstp   QWORD PTR [ebx]
  413d56:	mov    WORD PTR [esi-0x413b1242],?
  413d5c:	mov    esi,0x8ad06186
  413d61:	stos   BYTE PTR es:[edi],al
  413d62:	inc    ecx
  413d63:	xor    BYTE PTR [ebx-0x4d],bl
  413d66:	or     dh,BYTE PTR [edx-0x5656da3a]
  413d6c:	push   edi
  413d6d:	retf   
  413d6e:	xor    al,0x3f
  413d70:	retf   0xb989
  413d73:	dec    DWORD PTR [ebx]
  413d75:	push   edx
  413d76:	aas    
  413d77:	pop    ecx
  413d78:	cwde   
  413d79:	in     eax,0xdb
  413d7b:	sbb    al,0xe2
  413d7d:	mov    eax,DWORD PTR [eax]
  413d7f:	pop    edi
  413d80:	mov    cl,0x27
  413d82:	sub    cl,BYTE PTR [edx-0x4f6f46e4]
  413d88:	shl    BYTE PTR [ebx-0x78],cl
  413d8b:	(bad)  
  413d8d:	and    al,0x84
  413d8f:	fpatan 
  413d91:	inc    edi
  413d92:	aad    0x63
  413d94:	cmp    al,0x57
  413d96:	popa   
  413d97:	not    ebx
  413d99:	fcom   QWORD PTR fs:[ebp+0x13]
  413d9d:	shr    DWORD PTR [edi+0x24],cl
  413da0:	and    ebx,DWORD PTR [edi-0x682bc9b6]
  413da6:	lahf   
  413da7:	pop    esi
  413da8:	fwait
  413da9:	inc    eax
  413daa:	fdiv   DWORD PTR ds:0x4116f0f9
  413db0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413db1:	mov    ah,0xf6
  413db3:	arpl   WORD PTR cs:[edx+ecx*4],sp
  413db7:	mov    dl,0xb
  413db9:	(bad)  
  413dba:	ret    0x3eda
  413dbd:	in     eax,0x9f
  413dbf:	sbb    eax,0xcb53c005
  413dc4:	inc    ebp
  413dc5:	fisttp DWORD PTR [esp+edx*1+0x28]
  413dc9:	adc    ch,0x99
  413dcc:	push   eax
  413dcd:	inc    ebp
  413dce:	add    ch,BYTE PTR [ebp-0x2]
  413dd1:	or     ecx,esp
  413dd3:	lock loop 0x413d64
  413dd6:	in     al,0x6c
  413dd8:	jne    0x413dbf
  413dda:	fistp  WORD PTR [edi+ecx*2]
  413ddd:	call   0xb998:0xc04fa990
  413de4:	pop    cx
  413de6:	repz sub dl,bh
  413de9:	adc    esp,DWORD PTR [ebp-0x4a]
  413dec:	cmp    al,0xb7
  413dee:	push   esi
  413def:	out    0x46,al
  413df1:	jae    0x413d89
  413df3:	test   eax,0x3dea1c7c
  413df8:	mov    edi,0x23cd0f7c
  413dfd:	lock push edi
  413dff:	push   ss
  413e00:	(bad)  [ebx+0x4625592c]
  413e06:	lds    ecx,FWORD PTR [ecx]
  413e08:	adc    eax,0xa8cd8554
  413e0d:	in     eax,0x15
  413e0f:	mov    ah,ah
  413e11:	arpl   WORD PTR [ebx-0x3d],di
  413e14:	psubd  mm7,QWORD PTR [esi+edi*2]
  413e18:	test   eax,0xac36baf2
  413e1d:	stc    
  413e1e:	or     DWORD PTR [ebp-0x67],esp
  413e21:	ss xchg esi,esp
  413e24:	repz pushf 
  413e26:	outs   dx,BYTE PTR ds:[esi]
  413e27:	jno    0x413de9
  413e29:	jmp    DWORD PTR [edx]
  413e2b:	xor    al,0xae
  413e2d:	imul   esp,DWORD PTR [edi+0x9],0xe5480c37
  413e34:	inc    ecx
  413e35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e36:	outs   dx,DWORD PTR ds:[esi]
  413e37:	iret   
  413e38:	sbb    dh,BYTE PTR [edx+eiz*4-0x5e]
  413e3c:	inc    ecx
  413e3d:	hlt    
  413e3e:	fs ror al,cl
  413e41:	jbe    0x413e80
  413e43:	fs jnp 0x413e7d
  413e46:	pop    ebx
  413e47:	dec    esi
  413e48:	mov    edi,0x4856e219
  413e4d:	out    0x8e,eax
  413e4f:	mov    cs,eax
  413e51:	xor    DWORD PTR [ebx+0x4b11efb2],edi
  413e57:	clc    
  413e58:	dec    esp
  413e59:	xlat   BYTE PTR ds:[ebx]
  413e5a:	(bad)  
  413e5b:	jno    0x413e1c
  413e5d:	arpl   WORD PTR [ebx+0x5b],cx
  413e60:	xchg   esi,eax
  413e61:	sahf   
  413e62:	je     0x413e4a
  413e64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e65:	cmp    al,0x4c
  413e67:	inc    esi
  413e68:	rcr    BYTE PTR [edi+0x4dc70583],1
  413e6e:	mov    bh,0xd
  413e70:	push   ebx
  413e71:	mov    cs,WORD PTR [esi+0x76abfd08]
  413e77:	cmp    al,ch
  413e79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e7a:	and    bh,BYTE PTR [esi]
  413e7c:	mov    esp,0x681451bb
  413e81:	sbb    BYTE PTR [edx-0x47],bl
  413e84:	sbb    WORD PTR [edi-0x77],sp
  413e88:	cmp    al,0xe
  413e8a:	fnstenv [esi-0x4c00843f]
  413e90:	fsub   DWORD PTR [edx-0x3e]
  413e93:	in     al,0xb0
  413e95:	mov    dl,0x53
  413e97:	out    0x1c,eax
  413e99:	aam    0xd4
  413e9b:	retf   
  413e9c:	lds    edi,FWORD PTR [edx+esi*2-0x2f]
  413ea0:	imul   ebx,DWORD PTR gs:[eax],0xfffffffe
  413ea4:	gs jo  0x413e3d
  413ea7:	dec    esp
  413ea8:	es dec ebx
  413eaa:	dec    ebp
  413eab:	push   DWORD PTR [esi]
  413ead:	or     DWORD PTR [ebx+0x4d328af8],0x3ad9423e
  413eb7:	fstp   DWORD PTR [ecx+edi*2-0x73ac98ab]
  413ebe:	and    DWORD PTR [ebx+0x14],0x14481b8e
  413ec5:	test   DWORD PTR [eax],ebx
  413ec7:	(bad)  [edx-0x15d584bc]
  413ecd:	rcr    BYTE PTR [esi],0xc4
  413ed0:	sbb    dh,bl
  413ed2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ed3:	lahf   
  413ed4:	mov    ?,ebx
  413ed6:	dec    edi
  413ed7:	stos   DWORD PTR es:[edi],eax
  413ed8:	push   edi
  413ed9:	pop    es
  413eda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413edb:	sub    DWORD PTR [esi-0x6730544],esp
  413ee1:	popa   
  413ee2:	sbb    eax,0x9e367f20
  413ee7:	lahf   
  413ee8:	das    
  413ee9:	int    0x44
  413eeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413eec:	pop    ecx
  413eed:	test   BYTE PTR [ebx],dh
  413eef:	stos   DWORD PTR es:[edi],eax
  413ef0:	sar    ebp,0x7e
  413ef3:	test   al,0x57
  413ef5:	rol    BYTE PTR [esi+0x7c77077b],1
  413efb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413efc:	fisttp DWORD PTR [ebx]
  413efe:	retf   0xc906
  413f01:	push   ds
  413f02:	out    0x92,eax
  413f04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f05:	in     al,0x86
  413f07:	and    edx,edx
  413f09:	xlat   BYTE PTR ds:[ebx]
  413f0a:	push   eax
  413f0b:	loope  0x413f7c
  413f0d:	test   al,0xa0
  413f0f:	(bad)  
  413f10:	pop    ebp
  413f11:	stos   DWORD PTR es:[edi],eax
  413f12:	inc    ebp
  413f13:	lahf   
  413f14:	outs   dx,BYTE PTR ds:[esi]
  413f15:	jmp    0x413f6d
  413f17:	lea    eax,[ecx]
  413f19:	jmp    0x9a958870
  413f1e:	imul   ebx,DWORD PTR [ecx+0x33ff8de6],0xce3bb39b
  413f28:	mov    al,ds:0x64ed41e7
  413f2d:	sub    eax,0x6ad6c917
  413f32:	popa   
  413f33:	lahf   
  413f34:	mov    al,ds:0x28694553
  413f39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f3a:	jnp    0x413f66
  413f3c:	nop
  413f3d:	jbe    0x413fb3
  413f3f:	push   es
  413f40:	fwait
  413f41:	retf   
  413f42:	ror    DWORD PTR [edx+0x26208753],cl
  413f48:	jl     0x413ecb
  413f4a:	jp     0x413fad
  413f4c:	(bad)  
  413f50:	aas    
  413f51:	outs   dx,BYTE PTR ds:[esi]
  413f52:	lds    edi,FWORD PTR [ecx+ecx*2+0x6ba21845]
  413f59:	imul   edi,DWORD PTR [ecx],0x53
  413f5c:	and    ah,dl
  413f5e:	(bad)  
  413f60:	rol    BYTE PTR [edx],cl
  413f62:	icebp  
  413f63:	xchg   dh,bh
  413f65:	sbb    eax,0x31b32a3b
  413f6a:	test   DWORD PTR ss:[eax-0x51],ecx
  413f6e:	adc    DWORD PTR [ebx+eax*1-0x2c8116a6],ecx
  413f75:	add    dl,BYTE PTR [edx+0x4ed7dc9a]
  413f7b:	sti    
  413f7c:	fcmovnu st,st(3)
  413f7e:	adc    dl,ah
  413f80:	mov    ds:0xed8296b3,eax
  413f85:	and    al,0x54
  413f87:	retf   
  413f88:	xchg   ebx,eax
  413f89:	mov    WORD PTR [esi+0x1],?
  413f8c:	fmul   DWORD PTR [ebx-0x324c6ae5]
  413f92:	xchg   esp,eax
  413f93:	hlt    
  413f94:	and    esi,DWORD PTR [esi-0x617782cf]
  413f9a:	sar    DWORD PTR [edi+0x29],0xc
  413f9e:	jmp    0x413f73
  413fa0:	in     al,0xdb
  413fa2:	sub    esi,DWORD PTR [edi]
  413fa4:	out    0x9d,al
  413fa6:	dec    esp
  413fa7:	shr    DWORD PTR [ecx+0x36],1
  413faa:	inc    edx
  413fab:	add    cl,BYTE PTR [edi-0x5d]
  413fae:	and    al,0xf4
  413fb0:	enter  0x5f08,0x59
  413fb4:	adc    DWORD PTR [edx+ebp*8+0x26],edi
  413fb8:	out    dx,eax
  413fb9:	jmp    0x8250:0xaf28fba4
  413fc0:	cwde   
  413fc1:	int    0x26
  413fc3:	(bad)  
  413fc5:	cmp    esp,DWORD PTR [ecx+0x5a]
  413fc8:	jne    0x413fc8
  413fca:	or     eax,0xc3eb5336
  413fcf:	fsub   DWORD PTR [eax+0x632c5a4]
  413fd5:	int    0x3
  413fd7:	mov    esp,ebp
  413fd9:	loopne 0x414058
  413fdb:	retf   0x49b5
  413fde:	cmp    al,0x95
  413fe0:	enter  0x3a8,0x9d
  413fe4:	stos   DWORD PTR es:[edi],eax
  413fe5:	dec    eax
  413fe6:	or     edx,ebp
  413fe8:	mov    eax,ds:0xf1c51a7d
  413fed:	(bad)  
  413fee:	js     0x41404d
  413ff0:	inc    eax
  413ff1:	xchg   esi,eax
  413ff2:	push   0xffffffd5
  413ff4:	fwait
  413ff5:	arpl   WORD PTR [edx+0x3a],dx
  413ff8:	pop    ds
  413ff9:	or     esi,DWORD PTR [edi+0x7f2dc295]
  413fff:	outs   dx,BYTE PTR ds:[esi]
  414000:	fst    QWORD PTR [edi]
  414002:	dec    esp
  414003:	jg     0x413fb7
  414005:	cwde   
  414006:	sub    DWORD PTR [eax-0x4d41431a],eax
  41400c:	sub    BYTE PTR [esi],0x4c
  41400f:	sub    al,0xbd
  414011:	in     eax,dx
  414012:	in     al,0x6
  414014:	pop    ebx
  414015:	pop    ebx
  414016:	push   esp
  414017:	aad    0x39
  414019:	push   ebx
  41401a:	fidivr WORD PTR [ebp+esi*1-0x5b0cc85c]
  414021:	outs   dx,BYTE PTR ds:[esi]
  414022:	mov    ecx,DWORD PTR [eax-0x3a7016dc]
  414028:	addr16 jmp 0x247ec98b
  41402e:	stc    
  41402f:	rol    ah,cl
  414031:	imul   edx,esp,0x86ebab76
  414037:	xor    esi,DWORD PTR [edi-0x6d]
  41403a:	sahf   
  41403b:	imul   esp,esp,0xa28c1d71
  414041:	int    0xdf
  414043:	fsubr  st,st(5)
  414045:	or     al,0xe0
  414047:	lahf   
  414048:	sbb    bl,dl
  41404a:	sbb    ch,BYTE PTR [esi+0x6115c710]
  414050:	mov    edx,0x4e49476b
  414055:	adc    DWORD PTR [esi-0x7f866592],eax
  41405b:	scas   eax,DWORD PTR es:[edi]
  41405c:	inc    esp
  41405d:	pop    esp
  41405e:	push   0x19
  414060:	cmp    BYTE PTR [edx-0x50],dh
  414063:	mov    ebx,0x5660c830
  414068:	add    DWORD PTR [edi],ebx
  41406a:	mov    dh,0xec
  41406c:	data16 gs (bad) 
  41406f:	sub    bh,BYTE PTR [eax+0x601c973c]
  414075:	fsubr  QWORD PTR [eax-0x4]
  414078:	mov    ecx,0x8b104d8b
  41407d:	push   ebp
  41407e:	adc    al,0x33
  414080:	rol    cl,cl
  414082:	loope  0x4140a2
  414084:	mov    ecx,DWORD PTR [ebp+0x10]
  414087:	xor    eax,esi
  414089:	or     eax,edx
  41408b:	mov    edx,DWORD PTR [ebp+0x14]
  41408e:	shrd   ecx,edx,0x2
  414092:	shr    edx,0x2
  414095:	mov    edx,DWORD PTR [ebp+0x10]
  414098:	mov    ebx,DWORD PTR [ebp+0x14]
  41409b:	xor    ecx,esi
  41409d:	xor    ebx,ebx
  41409f:	or     ecx,ebx
  4140a1:	shl    edx,0x1e
  4140a4:	jmp    0x4143dd
  4140a9:	pop    eax
  4140aa:	add    eax,0xb29872c6
  4140af:	jl     0x4140dc
  4140b1:	fisttp DWORD PTR [ecx-0x255c5b7a]
  4140b7:	cmp    dl,BYTE PTR [edx-0x41416db5]
  4140bd:	in     eax,dx
  4140be:	les    edi,FWORD PTR [esi-0x45f58042]
  4140c4:	fcomp  QWORD PTR [esi+edx*2]
  4140c7:	add    cl,bl
  4140c9:	and    al,0x44
  4140cb:	cs pop ds
  4140cd:	dec    edi
  4140ce:	addr16 cld 
  4140d0:	mov    ah,0x62
  4140d2:	fld    QWORD PTR [ebx-0x72]
  4140d5:	retf   
  4140d6:	rol    BYTE PTR ss:[ecx-0x21e89b62],1
  4140dd:	in     eax,0x37
  4140df:	xor    al,0xaf
  4140e1:	sub    al,0x4c
  4140e3:	ret    0xde2b
  4140e6:	lea    ecx,[edi+0x20c4cf99]
  4140ec:	lds    ecx,FWORD PTR [ebx+ebx*2+0x1d]
  4140f0:	inc    edx
  4140f1:	imul   ebx,DWORD PTR [esi],0xffffffb1
  4140f4:	hlt    
  4140f5:	fstp   DWORD PTR [esi]
  4140f7:	xor    BYTE PTR ds:0xfce6cd1a,al
  4140fd:	mov    BYTE PTR [ebx+eiz*1+0x14],al
  414101:	test   DWORD PTR [ebx-0x7f],esi
  414104:	hlt    
  414105:	jne    0x4140fb
  414107:	dec    esi
  414108:	push   0x50
  41410a:	test   al,dl
  41410c:	jl     0x4140c2
  41410e:	push   ds
  41410f:	in     al,0xd8
  414111:	push   ecx
  414112:	mov    bh,0xac
  414114:	mov    ebx,0xcbb1d589
  414119:	call   0xda096a0a
  41411e:	lock sub BYTE PTR [edi-0x26],dh
  414122:	mov    ecx,0xdd9a0b58
  414127:	sti    
  414128:	cmp    edi,DWORD PTR [ecx]
  41412a:	jmp    0x4140d0
  41412c:	sub    DWORD PTR [ebp+0x6bc09a22],0xffffffc2
  414133:	cdq    
  414134:	rcl    DWORD PTR [edi+0x2d947b87],1
  41413a:	mov    eax,ds:0xc86eea4f
  41413f:	addr16 xchg ecx,eax
  414141:	xchg   edx,eax
  414142:	sahf   
  414143:	and    DWORD PTR [ebx+0x50],esi
  414146:	int    0x32
  414148:	sub    eax,0x617764c
  41414d:	inc    ecx
  41414e:	popa   
  41414f:	mov    al,0x5c
  414151:	out    0x47,al
  414153:	(bad)  
  414154:	jb     0x414159
  414156:	pop    ss
  414157:	cmc    
  414158:	test   al,0xfe
  41415a:	shr    ch,0x2c
  41415d:	adc    cl,BYTE PTR [ebp+ecx*2+0x1e15ad6e]
  414164:	test   DWORD PTR [edx-0x6c],ebx
  414167:	aas    
  414168:	mov    al,0x18
  41416a:	sbb    ecx,DWORD PTR [ecx+0x15]
  41416d:	xor    esi,ebp
  41416f:	sub    bh,bl
  414171:	sbb    al,0x10
  414173:	rcr    BYTE PTR [ebx],0x3d
  414176:	fsub   DWORD PTR [ebp+0x312c35e0]
  41417c:	inc    edx
  41417d:	inc    edi
  41417e:	(bad)  
  41417f:	push   esi
  414180:	(bad)  
  414182:	repz cmp DWORD PTR [ebx+0x9a62c71],eax
  414189:	ds push cs
  41418b:	and    eax,0xf6a7c918
  414190:	pop    ebx
  414191:	leave  
  414192:	fld    QWORD PTR [edx]
  414194:	xchg   edx,eax
  414195:	xchg   ecx,eax
  414196:	xor    al,0xd
  414198:	cmp    BYTE PTR [edi],dl
  41419a:	fdivr  st,st(0)
  41419c:	sti    
  41419d:	push   edi
  41419e:	cmp    al,0x33
  4141a0:	add    BYTE PTR [esp+edx*1-0x64],ah
  4141a4:	mov    bh,0xbe
  4141a6:	fsub   st,st(3)
  4141a8:	adc    eax,0x1a6a3b39
  4141ad:	scas   al,BYTE PTR es:[edi]
  4141ae:	push   eax
  4141af:	mov    esi,0x814aa3c9
  4141b5:	or     BYTE PTR [ebx-0x2f],ch
  4141b8:	(bad)  
  4141b9:	sahf   
  4141ba:	jo     0x4141f4
  4141bc:	shl    DWORD PTR [edi+0x4a7b27a],cl
  4141c2:	mov    eax,0xf4fa6735
  4141c7:	xchg   edx,eax
  4141c8:	sbb    esp,eax
  4141ca:	stc    
  4141cb:	std    
  4141cc:	xor    ebp,DWORD PTR [edx-0x48a5509d]
  4141d2:	lds    ebx,FWORD PTR [edi]
  4141d4:	icebp  
  4141d5:	adc    eax,DWORD PTR [edi-0x18]
  4141d8:	in     al,dx
  4141d9:	or     eax,0x782fbeb1
  4141de:	das    
  4141df:	out    0x3f,al
  4141e1:	sti    
  4141e2:	ret    
  4141e3:	add    BYTE PTR [edi+esi*4+0x30],bh
  4141e7:	test   BYTE PTR [edi],0x6e
  4141ea:	lods   eax,DWORD PTR ds:[esi]
  4141eb:	loop   0x4141f6
  4141ed:	imul   esp,edi,0xffffff8b
  4141f0:	cmp    eax,0x96bfa254
  4141f5:	lahf   
  4141f6:	test   DWORD PTR [edx-0x25],ebx
  4141f9:	bound  eax,QWORD PTR [edx-0x4641f482]
  4141ff:	js     0x41422c
  414201:	xchg   ebx,eax
  414202:	(bad)  
  414203:	shr    ah,0x59
  414206:	fild   WORD PTR [ebx-0x59]
  414209:	lods   eax,DWORD PTR ds:[esi]
  41420a:	fwait
  41420b:	int    0x1a
  41420d:	fucom  st(7)
  41420f:	aaa    
  414210:	mov    dl,BYTE PTR [ebp-0x1d]
  414213:	cdq    
  414214:	pop    ss
  414215:	jb     0x414276
  414217:	and    BYTE PTR [esi-0x3c339d24],dh
  41421d:	jno    0x41428b
  41421f:	sub    BYTE PTR [esi-0x59d81bd6],bl
  414225:	push   ebx
  414226:	(bad)  
  414227:	repz cld 
  414229:	jbe    0x4141c8
  41422b:	sub    cl,BYTE PTR [ecx-0xaf87cbd]
  414231:	sub    esi,DWORD PTR [esi]
  414233:	out    dx,al
  414234:	sahf   
  414235:	into   
  414236:	push   ecx
  414237:	and    ebp,DWORD PTR [esi+ebx*8+0x127d3bc4]
  41423e:	outs   dx,DWORD PTR ds:[esi]
  41423f:	and    BYTE PTR [eax+0x74b4e7f1],0x82
  414246:	xlat   BYTE PTR ds:[ebx]
  414247:	ins    DWORD PTR es:[edi],dx
  414248:	imul   esi,DWORD PTR [esi+0x2a],0x86acf85a
  41424f:	pushf  
  414250:	idiv   DWORD PTR [eax+0x3b]
  414253:	or     ecx,DWORD PTR [eax]
  414255:	je     0x41428d
  414257:	sbb    eax,0xfe516a95
  41425c:	nop
  41425d:	xchg   ecx,eax
  41425e:	mov    WORD PTR [ebx],ds
  414260:	mov    bh,0xf5
  414262:	loope  0x414255
  414264:	dec    edx
  414265:	out    0x7f,al
  414267:	push   ss
  414268:	into   
  414269:	cmc    
  41426a:	(bad)  
  41426b:	adc    DWORD PTR [edx],esi
  41426d:	loop   0x4142ce
  41426f:	test   BYTE PTR ds:0x71b616e8,dl
  414275:	jno    0x41428a
  414277:	mov    edx,0x5198c416
  41427c:	mov    esi,0x87e4b389
  414281:	adc    al,0xbf
  414283:	and    eax,0xde2f529e
  414288:	xor    ebp,eax
  41428a:	and    cl,bh
  41428c:	test   al,0x75
  41428e:	iret   
  41428f:	push   es
  414290:	adc    ecx,DWORD PTR [ecx]
  414292:	lock mov al,ds:0xf059ac25
  414298:	out    dx,eax
  414299:	popa   
  41429a:	push   esi
  41429b:	dec    esp
  41429c:	mov    bh,0xb5
  41429e:	ror    BYTE PTR ds:0xedcd9c87,1
  4142a4:	push   es
  4142a5:	ins    BYTE PTR es:[edi],dx
  4142a6:	pop    ebx
  4142a7:	or     ch,dh
  4142a9:	cmp    edi,DWORD PTR [edx]
  4142ab:	data16 jnp 0x4142b9
  4142ae:	mov    ds:0x6e78475e,eax
  4142b3:	sahf   
  4142b4:	(bad)  
  4142b5:	mov    edi,cs
  4142b7:	add    esp,DWORD PTR [edi]
  4142b9:	inc    esi
  4142ba:	jge    0x414277
  4142bc:	dec    edx
  4142bd:	(bad)  
  4142bf:	sar    bh,cl
  4142c1:	xchg   ah,al
  4142c3:	jbe    0x414317
  4142c5:	or     DWORD PTR [ebp+0x32b1e54e],0x1c
  4142cc:	xchg   esi,eax
  4142cd:	out    dx,eax
  4142ce:	call   0x80f9:0x9a210912
  4142d5:	mov    dh,0xeb
  4142d7:	mov    DWORD PTR [ecx-0x656ebf63],edi
  4142dd:	sub    DWORD PTR [edi+0x75],edi
  4142e0:	adc    DWORD PTR [eax+edx*1+0x45],edx
  4142e4:	add    BYTE PTR [edi],0x61
  4142e7:	sub    BYTE PTR [ecx],cl
  4142e9:	push   ebx
  4142ea:	sbb    DWORD PTR [ecx],ebx
  4142ec:	rol    BYTE PTR [eax+0x66f570f],1
  4142f2:	push   edx
  4142f3:	or     al,0x9f
  4142f5:	and    ch,al
  4142f7:	repz ror DWORD PTR [edx-0x7aed07ea],0x4b
  4142ff:	pop    ebx
  414300:	lock mov edi,0x67e99610
  414306:	adc    ecx,edi
  414308:	or     al,BYTE PTR [ebp-0x370f016]
  41430e:	mov    dl,0xa8
  414310:	test   al,0x4
  414312:	xor    ch,BYTE PTR [edi-0x1885e3e2]
  414318:	mov    ds:0x32952980,al
  41431d:	fmul   DWORD PTR [ebx-0x250424f9]
  414323:	mov    eax,0xfa81b86
  414328:	or     al,0x9d
  41432a:	push   ds
  41432b:	std    
  41432c:	sahf   
  41432d:	pop    edi
  41432e:	inc    ecx
  41432f:	(bad)  
  414330:	adc    ch,BYTE PTR [edx]
  414332:	enter  0x84b4,0x7a
  414336:	rcl    DWORD PTR [edx-0x258e2cbe],0xd8
  41433d:	mov    dh,0xbe
  41433f:	sub    al,0xae
  414341:	aad    0x17
  414343:	inc    esi
  414344:	inc    ebp
  414345:	mov    ds:0x59f48a05,eax
  41434a:	pop    esp
  41434b:	cs jnp 0x414343
  41434e:	push   ebp
  41434f:	inc    ecx
  414350:	cmp    ah,BYTE PTR [esp+esi*4+0x6053afd7]
  414357:	jmp    0x906bbe5f
  41435c:	and    edi,edi
  41435e:	xchg   ebx,eax
  41435f:	xchg   esp,eax
  414360:	mov    ebp,0x6e3e4af6
  414365:	lahf   
  414366:	jl     0x41436b
  414368:	mov    bl,BYTE PTR [eax+edx*4]
  41436b:	shl    BYTE PTR [esi+0x1a],0xa5
  41436f:	repz jmp 0x4af6a825
  414375:	sbb    BYTE PTR [ecx+0x39e8440b],bl
  41437b:	and    BYTE PTR [edi-0x35],al
  41437e:	(bad)  
  41437f:	or     edi,esi
  414381:	mov    ecx,0x11fcd5a5
  414386:	imul   esp,ebx,0xe2817a4e
  41438c:	mov    ds:0xa9138c81,eax
  414391:	add    eax,0xcc73c1f9
  414396:	adc    eax,0xedc802eb
  41439b:	shl    BYTE PTR [ebx+0x11],cl
  41439e:	aaa    
  41439f:	mov    ebx,0x2df76851
  4143a4:	stc    
  4143a5:	stos   BYTE PTR es:[edi],al
  4143a6:	xor    eax,0x97e95264
  4143ab:	sub    eax,0xf0c25cea
  4143b0:	(bad)  
  4143b1:	jmp    DWORD PTR ds:0x5975cbd6
  4143b7:	xor    eax,0xe8607622
  4143bc:	mov    dh,0xc7
  4143be:	cld    
  4143bf:	mov    ah,0x36
  4143c1:	(bad)  [eax+0x6c]
  4143c4:	sbb    dh,BYTE PTR [ecx-0x94c6fc0]
  4143ca:	call   0x8dc4:0xce17db76
  4143d1:	mov    ebx,0x62b4cf31
  4143d6:	iret   
  4143d7:	mov    ds:0x448310a6,al
  4143dc:	push   edi
  4143dd:	add    eax,ecx
  4143df:	mov    ecx,DWORD PTR [ebp+0x10]
  4143e2:	mov    edx,DWORD PTR [ebp+0x14]
  4143e5:	shrd   ecx,edx,0x2
  4143e9:	shr    edx,0x2
  4143ec:	xor    ecx,esi
  4143ee:	jmp    0x414727
  4143f3:	cmp    eax,0xb8c710f5
  4143f8:	sub    BYTE PTR [ebp+0x76acc878],dl
  4143fe:	xchg   edx,eax
  4143ff:	outs   dx,DWORD PTR ds:[esi]
  414400:	out    dx,al
  414401:	cmp    al,0x92
  414403:	jnp    0x41439d
  414405:	mov    esi,0xbec4edbe
  41440a:	mov    esi,0xdcaeba50
  41440f:	xor    esp,DWORD PTR [ecx]
  414411:	ss mov dh,0xfb
  414414:	repnz push ecx
  414416:	data16 loope 0x4143a1
  414419:	or     ebx,eax
  41441b:	xchg   edi,eax
  41441c:	iret   
  41441d:	jp     0x41441a
  41441f:	ds dec esi
  414421:	lds    edi,FWORD PTR ds:[ecx+0x338ee859]
  414428:	inc    BYTE PTR [esi]
  41442a:	mov    BYTE PTR [ebp-0x73],bl
  41442d:	jnp    0x4143e8
  41442f:	pop    esi
  414430:	and    BYTE PTR [ecx-0x2d11577d],ch
  414436:	cmp    al,0xbf
  414438:	pusha  
  414439:	outs   dx,DWORD PTR ds:[esi]
  41443a:	and    BYTE PTR ds:0x8f0c3169,0xad
  414441:	(bad)  
  414442:	loop   0x41445c
  414444:	xlat   BYTE PTR ds:[ebx]
  414445:	inc    edi
  414446:	fwait
  414447:	jne    0x4143de
  414449:	(bad)  
  41444a:	cmp    al,BYTE PTR [esi+0x74]
  41444d:	sub    dl,BYTE PTR [eax-0x1b]
  414450:	mov    BYTE PTR [edi+0x16f51e25],0xe4
  414457:	iret   
  414458:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414459:	fiadd  DWORD PTR [esi]
  41445b:	push   0x64
  41445d:	jl     0x41446a
  41445f:	xchg   ebp,eax
  414460:	inc    edx
  414461:	xchg   DWORD PTR [esi-0x26a178d9],ebx
  414467:	mov    al,0x66
  414469:	mov    bh,0x16
  41446b:	mov    ds:0x77fafc75,eax
  414470:	scas   al,BYTE PTR es:[edi]
  414471:	(bad)  
  414472:	mov    eax,0x958e7edf
  414477:	sti    
  414478:	mov    DWORD PTR [eax],esp
  41447a:	imul   ebx,DWORD PTR [esi+0x7d],0xcc83ac31
  414481:	cmp    al,0x50
  414483:	push   cs
  414484:	or     DWORD PTR [edx+0x4c],edi
  414487:	addr16 add eax,0x59d3308f
  41448d:	jmp    0x4144a6
  41448f:	mov    esp,0x224be373
  414494:	jecxz  0x414470
  414496:	fwait
  414497:	and    dh,BYTE PTR ds:0x44026534
  41449d:	scas   al,BYTE PTR es:[edi]
  41449e:	faddp  st(1),st
  4144a0:	fwait
  4144a1:	mov    ecx,0xb5cab31c
  4144a6:	push   0x71996053
  4144ab:	lods   eax,DWORD PTR ds:[esi]
  4144ac:	mov    eax,ds:0xf7d7dbf4
  4144b1:	fst    DWORD PTR [edx+0x4ef0f058]
  4144b7:	or     BYTE PTR [ebx-0x5d],al
  4144ba:	xchg   BYTE PTR [edx-0x605bde89],dh
  4144c0:	push   ss
  4144c1:	neg    BYTE PTR [edx+0x15150be9]
  4144c7:	and    al,0xc9
  4144c9:	add    al,0x7e
  4144cb:	out    0xdd,eax
  4144cd:	jne    0x4144b5
  4144cf:	jl     0x4144d5
  4144d1:	cmp    DWORD PTR [eax+0x12],0x53b5fea3
  4144d8:	fmulp  st(6),st
  4144da:	(bad)  
  4144db:	mov    ebx,0xb2bddc66
  4144e0:	adc    ebx,ecx
  4144e2:	xchg   edx,eax
  4144e3:	and    al,0xf1
  4144e5:	fdivr  st(7),st
  4144e7:	xor    ebp,edx
  4144e9:	imul   ebp,DWORD PTR [ecx+ebp*1+0x2d],0xfa759a8c
  4144f1:	mov    ebp,esi
  4144f3:	sti    
  4144f4:	lods   al,BYTE PTR ds:[esi]
  4144f5:	inc    esi
  4144f6:	add    ebp,DWORD PTR ds:0xc5f2926b
  4144fc:	pushf  
  4144fd:	push   ss
  4144fe:	mov    eax,0x17746370
  414503:	xchg   ebx,eax
  414504:	fwait
  414505:	das    
  414506:	dec    esi
  414507:	inc    edx
  414508:	sub    BYTE PTR [eax],cl
  41450a:	mov    al,ds:0x4d4157e7
  41450f:	sti    
  414510:	popa   
  414511:	popa   
  414512:	adc    DWORD PTR [esp+ebx*4],ebx
  414515:	sub    DWORD PTR cs:[eax-0x31],eax
  414519:	and    ecx,edx
  41451b:	pusha  
  41451c:	inc    ebx
  41451d:	hlt    
  41451e:	xchg   ecx,eax
  41451f:	sub    DWORD PTR [esi-0x6afb23b],esi
  414525:	in     eax,dx
  414526:	stos   BYTE PTR es:[edi],al
  414527:	shr    DWORD PTR [eax-0x1784c53d],cl
  41452d:	aam    0x7d
  41452f:	xlat   BYTE PTR ds:[ebx]
  414530:	test   esi,esp
  414532:	daa    
  414533:	sbb    al,0x89
  414535:	std    
  414536:	adc    eax,0x520f7ee
  41453b:	push   edx
  41453c:	mov    cl,0xc9
  41453e:	bound  ebx,QWORD PTR [eax+esi*2]
  414541:	and    eax,0xbaa4aab3
  414546:	xor    dl,dh
  414548:	mov    ch,0xd3
  41454a:	mov    ch,0xf4
  41454c:	retf   
  41454d:	shr    BYTE PTR [ebx+0x7b],1
  414550:	mov    al,0x98
  414552:	popf   
  414553:	xchg   ebp,eax
  414554:	mov    ch,0xad
  414556:	dec    eax
  414557:	outs   dx,DWORD PTR ds:[esi]
  414558:	mov    ebp,0x46da0bb4
  41455d:	mov    eax,0xb7198897
  414562:	idiv   DWORD PTR [esi-0x9]
  414565:	xchg   ebx,eax
  414566:	push   eax
  414567:	inc    esp
  414568:	cmp    BYTE PTR [ebp+edx*1+0x564b147e],al
  41456f:	fidiv  DWORD PTR [edi]
  414571:	or     BYTE PTR [eax-0x61178876],ch
  414577:	jb     0x414526
  414579:	retf   
  41457a:	cdq    
  41457b:	add    BYTE PTR [esi-0x1fe988ff],bh
  414581:	xchg   ebp,eax
  414582:	int    0x81
  414584:	dec    ecx
  414585:	out    dx,eax
  414586:	inc    ebp
  414587:	sub    dl,BYTE PTR [ebp+0x72]
  41458a:	sbb    DWORD PTR [edi-0x4ffea11d],ebx
  414590:	push   esi
  414591:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414592:	ds clc 
  414594:	xchg   esp,eax
  414595:	and    ebp,DWORD PTR [ebp-0x1287a3dc]
  41459b:	add    DWORD PTR [eax+0x76fc872f],ebp
  4145a1:	ja     0x41454a
  4145a3:	leave  
  4145a4:	jp     0x414586
  4145a6:	mov    DWORD PTR [ecx+0x3517178d],ebx
  4145ac:	adc    eax,0x3cf167b
  4145b1:	xchg   ebp,eax
  4145b2:	adc    DWORD PTR [ebx],esp
  4145b4:	icebp  
  4145b5:	push   es
  4145b6:	mov    dh,0x35
  4145b8:	lock cmc 
  4145ba:	in     eax,dx
  4145bb:	xchg   ch,ah
  4145bd:	jl     0x414545
  4145bf:	fldenv ss:[eax]
  4145c2:	push   es
  4145c3:	sub    BYTE PTR [esi],cl
  4145c5:	xchg   esp,eax
  4145c6:	ror    BYTE PTR [edi+0x146e567b],1
  4145cc:	sub    bl,0x92
  4145cf:	jae    0x4145a3
  4145d1:	ins    BYTE PTR es:[edi],dx
  4145d2:	mov    BYTE PTR [edx-0x66058f52],dh
  4145d8:	hlt    
  4145d9:	rcl    DWORD PTR [esi+eax*2+0x15],cl
  4145dd:	cwde   
  4145de:	mov    al,0x2f
  4145e0:	leave  
  4145e1:	push   edi
  4145e2:	lods   eax,DWORD PTR ds:[esi]
  4145e3:	mov    dl,0xc5
  4145e5:	out    0x11,eax
  4145e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145e8:	retf   
  4145e9:	cmp    esp,DWORD PTR [esi]
  4145eb:	cmovle esp,ebp
  4145ee:	add    DWORD PTR [edx+0x45],0x132a43a2
  4145f5:	sti    
  4145f6:	or     al,0xa0
  4145f8:	xchg   edx,eax
  4145f9:	and    ebp,DWORD PTR [edx-0xfabd480]
  4145ff:	loopne 0x414595
  414601:	(bad)  
  414602:	sbb    edx,eax
  414604:	pop    esi
  414605:	jo     0x4145b0
  414607:	and    ch,0x57
  41460a:	or     al,0x87
  41460c:	xlat   BYTE PTR ds:[ebx]
  41460d:	pop    ds
  41460e:	and    cl,ah
  414610:	push   es
  414611:	neg    BYTE PTR [edi+0x70]
  414614:	ret    0xed50
  414617:	pop    edx
  414618:	mov    esp,0x212aac75
  41461d:	data16 mov ah,0x6b
  414620:	clc    
  414621:	adc    bh,BYTE PTR [ecx+0x79]
  414624:	cld    
  414625:	mov    eax,0x120f1b67
  41462a:	fist   DWORD PTR [edx+0x1c4773d7]
  414630:	nop
  414631:	mov    cl,0xc5
  414633:	sub    edx,0xc7e3976f
  414639:	daa    
  41463a:	xor    eax,0x802ae5b6
  41463f:	fld    DWORD PTR [eax]
  414641:	adc    BYTE PTR [edi],cl
  414643:	push   edi
  414644:	int3   
  414645:	out    0x60,al
  414647:	inc    edi
  414648:	or     DWORD PTR [ecx],esp
  41464a:	dec    edx
  41464b:	mov    esp,eax
  41464d:	xchg   BYTE PTR [ecx+0x32ae14f8],al
  414653:	push   ds
  414654:	cmc    
  414655:	jb     0x41462e
  414657:	adc    esp,DWORD PTR [ebp+0x6f]
  41465a:	mov    bl,0x30
  41465c:	xchg   ebp,eax
  41465d:	push   ss
  41465e:	(bad)  [esi+edx*8+0x7e]
  414662:	shl    cl,cl
  414664:	mov    al,0x33
  414666:	cld    
  414667:	dec    ch
  414669:	mov    bh,0xb7
  41466b:	pop    esi
  41466c:	xchg   esp,eax
  41466d:	sti    
  41466e:	(bad)  [ebx-0x5e55657e]
  414674:	pushf  
  414675:	and    DWORD PTR [eax-0x14],esi
  414678:	(bad)  
  414679:	sbb    dl,cl
  41467b:	xor    al,BYTE PTR [edx]
  41467d:	scas   eax,DWORD PTR es:[edi]
  41467e:	ret    
  41467f:	stos   DWORD PTR es:[edi],eax
  414680:	mov    WORD PTR [ecx+0x4dbca209],?
  414686:	rcl    edi,0xa
  414689:	pop    eax
  41468a:	(bad)  
  41468b:	pop    esp
  41468c:	lods   al,BYTE PTR ds:[esi]
  41468d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41468e:	loopne 0x4146c0
  414690:	jo     0x4146f8
  414692:	ja     0x414713
  414694:	dec    eax
  414695:	cmp    eax,0xdb3e510b
  41469a:	mov    esp,0x2a606cfa
  41469f:	cmp    al,0xfa
  4146a1:	or     DWORD PTR cs:[edi],0x26aed3d8
  4146a8:	out    0x80,al
  4146aa:	mov    ah,0x2b
  4146ac:	cmp    eax,0xeea718b
  4146b1:	in     eax,0x1f
  4146b3:	outs   dx,BYTE PTR ds:[esi]
  4146b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146b5:	(bad)
  4146b8:	mov    DWORD PTR [edi+ebx*2+0x19],edi
  4146bc:	in     al,0xbf
  4146be:	ds add eax,0xb036dcbe
  4146c4:	xor    si,ax
  4146c7:	(bad)  
  4146c8:	cmp    bh,ah
  4146ca:	test   al,0xb6
  4146cc:	push   cs
  4146cd:	out    0x80,eax
  4146cf:	push   edi
  4146d0:	out    dx,al
  4146d1:	dec    ecx
  4146d2:	add    ch,al
  4146d4:	into   
  4146d5:	add    al,0x4d
  4146d7:	stos   DWORD PTR es:[edi],eax
  4146d8:	sbb    esp,esp
  4146da:	mov    bl,0x61
  4146dc:	inc    ebp
  4146dd:	int    0xa3
  4146df:	add    al,0x7f
  4146e1:	mov    eax,0x957231ed
  4146e6:	push   0x23
  4146e8:	pop    ds
  4146e9:	xlat   BYTE PTR ds:[ebx]
  4146ea:	cmp    dh,BYTE PTR [edi+0x3b]
  4146ed:	cmc    
  4146ee:	pop    ds
  4146ef:	push   ds
  4146f0:	sub    ch,BYTE PTR [edi+0x1ac27c1e]
  4146f6:	scas   eax,DWORD PTR es:[edi]
  4146f7:	loope  0x41475c
  4146f9:	xchg   esi,eax
  4146fa:	hlt    
  4146fb:	add    BYTE PTR [esi+ecx*2],ah
  4146fe:	fldcw  WORD PTR [eax]
  414700:	xor    ebx,DWORD PTR [eax-0x19]
  414703:	push   ds
  414704:	call   0x60093014
  414709:	shl    DWORD PTR [edx+esi*1],0x5d
  41470d:	out    dx,al
  41470e:	jns    0x414775
  414710:	xor    BYTE PTR [ebx-0x1],dl
  414713:	in     eax,0xa2
  414715:	mov    bh,0x6c
  414717:	stos   DWORD PTR es:[edi],eax
  414718:	stc    
  414719:	scas   eax,DWORD PTR es:[edi]
  41471a:	sbb    eax,0xceb8622d
  41471f:	jl     0x414711
  414721:	pop    es
  414722:	and    dh,bl
  414724:	call   0x8b10:0x558be332
  41472b:	pop    ebp
  41472c:	adc    al,0x33
  41472e:	fisttp DWORD PTR [ebx]
  414730:	retf   
  414731:	add    eax,ecx
  414733:	lea    eax,[ebp+eax*4-0x7c]
  414737:	push   eax
  414738:	shl    edx,0x1e
  41473b:	call   0x411c08
  414740:	mov    eax,DWORD PTR [ebp-0x80]
  414743:	mov    ecx,DWORD PTR [ebp-0x80]
  414746:	xor    eax,edi
  414748:	xor    ecx,0xfffffffe
  41474b:	shr    eax,0x2
  41474e:	shl    ecx,0x1e
  414751:	or     ecx,eax
  414753:	mov    DWORD PTR [ebp-0x80],ecx
  414756:	lea    eax,[ebp-0x80]
  414759:	push   eax
  41475a:	mov    eax,DWORD PTR [ebp+0x10]
  41475d:	mov    ecx,DWORD PTR [ebp+0x14]
  414760:	shrd   eax,ecx,0x2
  414764:	shr    ecx,0x2
  414767:	mov    ecx,DWORD PTR [ebp+0x10]
  41476a:	mov    edx,DWORD PTR [ebp+0x14]
  41476d:	xor    eax,esi
  41476f:	xor    edx,edx
  414771:	or     eax,edx
  414773:	push   eax
  414774:	mov    eax,ds:0x422768
  414779:	mov    edi,0x4226ae
  41477e:	push   edi
  41477f:	push   DWORD PTR [eax]
  414781:	shl    ecx,0x1e
  414784:	call   0x41b447
  414789:	lea    eax,[ebp-0x80]
  41478c:	push   eax
  41478d:	mov    eax,DWORD PTR [ebp+0x10]
  414790:	jmp    0x414ac9
  414795:	pop    ds
  414796:	cmp    eax,0xaf9fd01d
  41479b:	das    
  41479c:	lods   eax,DWORD PTR ds:[esi]
  41479d:	sbb    DWORD PTR [esi-0x48f75b39],edi
  4147a3:	fninit 
  4147a5:	stos   DWORD PTR es:[edi],eax
  4147a6:	sahf   
  4147a7:	mov    esi,0xbec4edbe
  4147ac:	mov    esi,0x94338f2d
  4147b1:	adc    DWORD PTR [ecx],edi
  4147b3:	and    ah,BYTE PTR ds:0x5d50dd2
  4147b9:	iret   
  4147ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147bb:	or     edi,0x6c
  4147be:	xchg   ebp,eax
  4147bf:	xchg   edx,eax
  4147c0:	xchg   edi,eax
  4147c1:	popa   
  4147c2:	and    BYTE PTR [edi+0x5122e48c],ah
  4147c8:	fcom   DWORD PTR [edi-0x307fa4af]
  4147ce:	test   al,0x66
  4147d0:	in     eax,0xc5
  4147d2:	ficomp WORD PTR [edi+eiz*1]
  4147d5:	imul   esi,edx,0x329b2c7a
  4147db:	ins    DWORD PTR es:[edi],dx
  4147dc:	in     al,0x8e
  4147de:	jmp    0x414815
  4147e0:	inc    edi
  4147e1:	and    ecx,DWORD PTR [ecx+ebp*8]
  4147e4:	shl    BYTE PTR [ecx],1
  4147e6:	xlat   BYTE PTR ds:[ebx]
  4147e7:	cdq    
  4147e8:	push   ds
  4147e9:	sahf   
  4147ea:	pop    ds
  4147eb:	jmp    0xd92d2359
  4147f0:	pop    edx
  4147f1:	daa    
  4147f2:	add    al,0x15
  4147f4:	cwde   
  4147f5:	mov    esi,0xbef341d7
  4147fa:	cmp    eax,0x95776383
  4147ff:	add    ecx,edx
  414801:	cli    
  414802:	jo     0x4147cc
  414804:	and    al,0xbe
  414806:	loopne 0x414871
  414808:	shl    BYTE PTR [eax],1
  41480a:	inc    ebx
  41480b:	out    dx,eax
  41480c:	xor    al,0x36
  41480e:	push   ebx
  41480f:	adc    DWORD PTR [ecx+0x34],eax
  414812:	mov    bl,0x15
  414814:	imul   ebx,DWORD PTR [edx+0x7298991c],0x18
  41481b:	xchg   esi,eax
  41481c:	mov    ecx,0xfddee9c1
  414821:	jno    0x414845
  414823:	in     al,dx
  414824:	jno    0x41481d
  414826:	ja     0x4147d3
  414828:	mov    al,ds:0xc54153bc
  41482d:	jp     0x414832
  41482f:	repnz pop edx
  414831:	arpl   ax,si
  414833:	dec    edx
  414834:	sub    bl,bh
  414836:	lock pop eax
  414838:	or     edi,ebx
  41483a:	xchg   esi,eax
  41483b:	ja     0x4147c4
  41483d:	sbb    al,BYTE PTR [edx]
  41483f:	dec    ecx
  414840:	push   edi
  414841:	jmp    0x6a0d:0x5bce80e0
  414848:	neg    BYTE PTR [ebp+ecx*4-0x49]
  41484c:	test   BYTE PTR [eax],dh
  41484e:	jle    0x414855
  414850:	ss jecxz 0x4148ae
  414853:	in     eax,0x39
  414855:	and    DWORD PTR [eax],0xed30ffa3
  41485b:	pop    esi
  41485c:	mov    edx,0x4b438b41
  414861:	jmp    0xd80f4591
  414866:	cmc    
  414867:	iret   
  414868:	cli    
  414869:	xor    eax,0xf72e4976
  41486e:	or     edx,DWORD PTR [ecx]
  414870:	jno    0x4148ec
  414872:	push   esp
  414873:	test   DWORD PTR [edx-0x4b],edi
  414876:	jge    0x4148a8
  414878:	shr    BYTE PTR [esi],cl
  41487a:	bswap  edi
  41487c:	mov    ecx,0xf76fffca
  414881:	dec    esp
  414882:	and    DWORD PTR [edx+edi*2],eax
  414885:	adc    al,0x6f
  414887:	ins    BYTE PTR es:[edi],dx
  414888:	mov    ebx,0x6d75018f
  41488d:	xor    bh,ah
  41488f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414890:	es aaa 
  414892:	xor    eax,0xbb9b50b8
  414897:	jmp    0x3dd5:0x96347832
  41489e:	and    ecx,DWORD PTR [esi]
  4148a0:	into   
  4148a1:	loop   0x4148b2
  4148a3:	(bad)  
  4148a4:	adc    edx,DWORD PTR [edi+0x4d]
  4148a7:	sub    ah,BYTE PTR [edi-0x716a2743]
  4148ad:	mov    ds:0xca76ba58,al
  4148b2:	lods   al,BYTE PTR ds:[esi]
  4148b3:	(bad)  
  4148b4:	dec    edx
  4148b5:	push   0xffffffb3
  4148b7:	add    esi,DWORD PTR [edx]
  4148b9:	dec    edi
  4148ba:	out    dx,al
  4148bb:	mov    BYTE PTR [edx],al
  4148bd:	sbb    eax,0xd33213b1
  4148c2:	sbb    al,BYTE PTR [edx-0x249ed3f7]
  4148c8:	xor    DWORD PTR [edx-0x7f],ebp
  4148cb:	lds    ebp,FWORD PTR [edi+0x4b204e60]
  4148d1:	mov    ebx,0x3226f4b2
  4148d6:	add    dl,BYTE PTR [eax+0x9462d67]
  4148dc:	mov    BYTE PTR [ebx-0x69a8cba1],bl
  4148e2:	cdq    
  4148e3:	mov    ecx,DWORD PTR [ebx]
  4148e5:	sub    al,0xe5
  4148e7:	mov    cl,0xc4
  4148e9:	call   0xa07c:0x59625d68
  4148f0:	add    esi,ebx
  4148f2:	stos   BYTE PTR es:[edi],al
  4148f3:	mov    ebp,0xc9f013a
  4148f8:	mov    ds:0x7afdac9f,eax
  4148fd:	je     0x41492f
  4148ff:	imul   esp,esp,0x7b44cc01
  414905:	xor    al,0xa4
  414907:	dec    ecx
  414908:	dec    esp
  414909:	mov    DWORD PTR [eax-0xe01cfe7],ebx
  41490f:	rcl    DWORD PTR [ebp-0x947f0],cl
  414915:	mov    edi,0xa7b5b312
  41491a:	aam    0x23
  41491c:	sar    BYTE PTR [ebp+0x55],cl
  41491f:	dec    ebp
  414920:	sbb    eax,DWORD PTR [edi-0x6c6bc33]
  414926:	inc    esp
  414927:	cld    
  414928:	in     al,0x66
  41492a:	cwde   
  41492b:	sbb    al,0xb1
  41492d:	add    BYTE PTR [ecx],dh
  41492f:	mov    ah,0xc9
  414931:	jge    0x4148bf
  414933:	ret    
  414934:	stc    
  414935:	jb     0x4149b3
  414937:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414938:	ficom  DWORD PTR [esi]
  41493a:	test   BYTE PTR [ebx],bl
  41493c:	js     0x414910
  41493e:	in     eax,0xbb
  414940:	lahf   
  414941:	sbb    BYTE PTR [ecx-0x3b],bh
  414944:	push   ds
  414945:	mov    dh,0xb7
  414947:	out    dx,eax
  414948:	push   cs
  414949:	jmp    0x41498a
  41494b:	xchg   esi,eax
  41494c:	xchg   ebx,eax
  41494d:	leave  
  41494e:	(bad)  [ecx+0x66]
  414951:	mov    ebx,0xbc27b3c3
  414956:	rcr    BYTE PTR [edi],1
  414958:	out    0x85,eax
  41495a:	and    eax,0x5ddf2f24
  41495f:	mov    ah,0xd2
  414961:	mov    ah,0x21
  414963:	cmp    BYTE PTR [ebx+ecx*4-0x11e2e7d1],cl
  41496a:	sub    DWORD PTR [edx],edi
  41496c:	jns    0x414908
  41496e:	ror    DWORD PTR [ecx-0x3c],0xca
  414972:	(bad)  
  414974:	(bad)  
  414976:	sub    eax,0x22474dc8
  41497b:	push   ecx
  41497c:	xor    eax,DWORD PTR [eax-0x4c]
  41497f:	popa   
  414980:	test   eax,0xd9868919
  414985:	cs sahf 
  414987:	shl    BYTE PTR [eax+0x744c4247],1
  41498d:	push   ds
  41498e:	jge    0x414921
  414990:	int    0xa4
  414992:	loop   0x41498f
  414994:	or     BYTE PTR [edi+0x34],dl
  414997:	inc    edi
  414998:	pop    eax
  414999:	iret   
  41499a:	jns    0x4149b1
  41499c:	sbb    ch,bl
  41499e:	mov    esp,0xa35b230e
  4149a3:	mov    esp,0x10d3eb8c
  4149a8:	inc    ecx
  4149a9:	fs cs mov dh,0x8b
  4149ad:	ss mov esi,0x54e8b4ed
  4149b3:	lahf   
  4149b4:	jl     0x414959
  4149b6:	xchg   esp,eax
  4149b7:	dec    edx
  4149b8:	add    ecx,DWORD PTR [edi-0x7d0c963b]
  4149be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149bf:	add    al,0x8
  4149c1:	out    dx,al
  4149c2:	cmp    DWORD PTR [esi+ebx*8-0x19],ebx
  4149c6:	jbe    0x4149f6
  4149c8:	xor    BYTE PTR [edx*1+0x6d800a3b],ch
  4149cf:	aam    0x1b
  4149d1:	push   ebx
  4149d2:	lods   al,BYTE PTR ds:[esi]
  4149d3:	mov    ds:0xe1f1c651,eax
  4149d8:	cli    
  4149d9:	mov    eax,ds:0xf9e03d0b
  4149de:	pop    ebp
  4149df:	cmp    eax,0x45c8d023
  4149e4:	aaa    
  4149e5:	int3   
  4149e6:	and    DWORD PTR [edx+0x44464dab],ebp
  4149ec:	dec    ebp
  4149ed:	pop    edx
  4149ee:	cli    
  4149ef:	(bad)  
  4149f0:	jmp    0x65731e63
  4149f5:	xchg   esi,eax
  4149f6:	data16 scas al,BYTE PTR es:[edi]
  4149f8:	js     0x4149af
  4149fa:	pop    ecx
  4149fb:	xchg   BYTE PTR [ebx-0x4d01fb2e],bh
  414a01:	dec    edx
  414a02:	dec    esp
  414a03:	int3   
  414a04:	xor    DWORD PTR [edi+edx*1],esp
  414a07:	jmp    0x8dca:0x16d8ffb2
  414a0e:	int3   
  414a0f:	sub    eax,0x5089ed63
  414a14:	mov    bh,0x5f
  414a16:	test   al,0x40
  414a18:	js     0x414a8c
  414a1a:	jp     0x4149b4
  414a1c:	sti    
  414a1d:	push   ss
  414a1e:	dec    eax
  414a1f:	inc    esp
  414a20:	js     0x4149d5
  414a22:	loopne 0x414a13
  414a24:	jmp    0x414a2f
  414a26:	push   edi
  414a27:	dec    BYTE PTR [eax+0x1f6d2365]
  414a2d:	fadd   st,st(6)
  414a2f:	xor    ah,BYTE PTR [esi+0x4a89d31b]
  414a35:	fimul  DWORD PTR [esi-0xe34e0fa]
  414a3b:	jecxz  0x414aad
  414a3d:	shl    bh,0xf3
  414a40:	imul   ebp,DWORD PTR [eax-0x765090fc],0x2fc849e0
  414a4a:	mov    ah,0x2
  414a4c:	cli    
  414a4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a4e:	xor    ebx,ebp
  414a50:	loop   0x414a76
  414a52:	or     al,0x4c
  414a54:	jnp    0x414a56
  414a56:	repz jg 0x414a12
  414a59:	cmp    edi,DWORD PTR [ebp-0x28]
  414a5c:	pop    ebx
  414a5d:	out    dx,eax
  414a5e:	push   esp
  414a5f:	xchg   ebp,eax
  414a60:	jo     0x414a6f
  414a62:	add    DWORD PTR [eax+0x50],esp
  414a65:	ds inc edx
  414a67:	push   edi
  414a68:	jns    0x4149f6
  414a6a:	xchg   esp,eax
  414a6b:	fucomip st,st(0)
  414a6d:	fild   DWORD PTR [ebp-0x29]
  414a70:	js     0x414a95
  414a72:	das    
  414a73:	adc    al,BYTE PTR [esi-0x6a]
  414a76:	out    dx,eax
  414a77:	out    0x65,al
  414a79:	mov    bh,0x97
  414a7b:	shl    BYTE PTR [ebx-0x45cdecd],cl
  414a81:	mov    esp,0x6694e827
  414a86:	aas    
  414a87:	cdq    
  414a88:	aaa    
  414a89:	jne    0x414a1a
  414a8b:	ds sti 
  414a8d:	aas    
  414a8e:	(bad)  
  414a8f:	sub    bh,BYTE PTR [edx]
  414a91:	jns    0x414a36
  414a93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a94:	jb     0x414b0f
  414a96:	aad    0x1b
  414a98:	mov    edi,0x5ec868f4
  414a9d:	ss (bad) 
  414a9f:	jae    0x414a5d
  414aa1:	icebp  
  414aa2:	mov    BYTE PTR [esi-0x63],dl
  414aa5:	jg     0x414b1e
  414aa7:	je     0x414a8c
  414aa9:	arpl   WORD PTR [eax],bx
  414aab:	das    
  414aac:	lahf   
  414aad:	aaa    
  414aae:	mov    al,BYTE PTR [edi]
  414ab0:	pushf  
  414ab1:	rol    edi,cl
  414ab3:	jmp    0x414a50
  414ab5:	or     DWORD PTR [ebx+0x33],0x402084ff
  414abc:	mov    ds:0xadb8f2e,eax
  414ac1:	sub    ebx,DWORD PTR [si]
  414ac4:	jmp    DWORD PTR [ebp-0x74a50491]
  414aca:	dec    ebp
  414acb:	adc    al,0xf
  414acd:	lods   al,BYTE PTR ds:[esi]
  414ace:	enter  0xc102,0xe9
  414ad2:	add    cl,BYTE PTR [ebx+0x558b104d]
  414ad8:	adc    al,0x33
  414ada:	(bad)  
  414adb:	xor    edx,edx
  414add:	or     eax,edx
  414adf:	push   eax
  414ae0:	mov    eax,ds:0x422768
  414ae5:	push   edi
  414ae6:	push   DWORD PTR [eax]
  414ae8:	shl    ecx,0x1e
  414aeb:	call   0x41b447
  414af0:	mov    eax,DWORD PTR [ebp-0x3c]
  414af3:	mov    eax,DWORD PTR [ebp-0x2c]
  414af6:	mov    edi,DWORD PTR [ebp-0x24]
  414af9:	mov    eax,DWORD PTR [ebp-0x30]
  414afc:	mov    ecx,edi
  414afe:	mov    DWORD PTR [ebp-0x1c],eax
  414b01:	rol    ecx,0x2
  414b04:	mov    eax,0xa5069bae
  414b09:	xor    ecx,eax
  414b0b:	jmp    0x414e44
  414b10:	fisttp WORD PTR [eax+0x5aac5a8c]
  414b16:	xor    BYTE PTR [esp+edx*1+0x219e14bc],bh
  414b1d:	pop    ds
  414b1e:	mov    ah,0xcf
  414b20:	(bad)  [esi+edi*4-0x413b1242]
  414b27:	mov    esi,0xc1927385
  414b2c:	(bad)  
  414b2d:	hlt    
  414b2e:	and    esi,edi
  414b30:	inc    ecx
  414b31:	dec    esp
  414b32:	jmp    0xdeb3:0x7b1cfa46
  414b39:	sub    ebp,DWORD PTR [ecx+0x67]
  414b3c:	sub    esp,0xaee6734f
  414b42:	aaa    
  414b43:	push   esi
  414b44:	pop    edi
  414b45:	cmp    eax,0xd5293ac
  414b4a:	jp     0x414ba7
  414b4c:	fistp  DWORD PTR [edi+eax*2]
  414b4f:	dec    eax
  414b50:	rcr    edi,1
  414b52:	dec    esi
  414b53:	xor    eax,0x1eeb7b4b
  414b58:	jno    0x414b0c
  414b5a:	cmp    BYTE PTR [esi+eiz*2+0x21],bh
  414b5e:	jg     0x414b80
  414b60:	jecxz  0x414b1d
  414b62:	mov    esp,0x86e387aa
  414b67:	(bad)  
  414b68:	std    
  414b69:	mov    ah,0x93
  414b6b:	mov    ah,0x9c
  414b6d:	inc    esp
  414b6e:	jb     0x414bb0
  414b70:	je     0x414b40
  414b72:	push   esi
  414b73:	or     DWORD PTR [ebx+ecx*1],ebx
  414b76:	in     eax,dx
  414b77:	jbe    0x414b15
  414b79:	xor    bh,bl
  414b7b:	arpl   WORD PTR [edi+0x22fa4855],bp
  414b81:	out    dx,eax
  414b82:	xor    eax,0x33292940
  414b87:	inc    ebp
  414b88:	inc    edx
  414b89:	mov    ebx,DWORD PTR [ebx-0x3e]
  414b8c:	int    0x64
  414b8e:	xchg   BYTE PTR [ebx+0x5],cl
  414b91:	inc    DWORD PTR [edi+0xe]
  414b94:	cmp    DWORD PTR [ecx],esi
  414b96:	jnp    0x414bd2
  414b98:	xchg   ebp,eax
  414b99:	loop   0x414bde
  414b9b:	mov    ds:0xbb801937,al
  414ba0:	clc    
  414ba1:	and    BYTE PTR [edx],cl
  414ba3:	addr16 out 0xaa,al
  414ba6:	pop    ecx
  414ba7:	push   ds
  414ba8:	es push ds
  414baa:	sbb    al,0x2f
  414bac:	adc    ah,dl
  414bae:	push   esi
  414baf:	xchg   BYTE PTR [edx+0x393f7f7],dl
  414bb5:	push   esi
  414bb6:	lock adc BYTE PTR [edi],ah
  414bb9:	repnz mov ebx,0x7304b7a2
  414bbf:	sub    al,0x3d
  414bc1:	push   esi
  414bc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414bc3:	icebp  
  414bc4:	call   0x4328:0xdfb1e4ae
  414bcb:	adc    al,0x63
  414bcd:	sub    dh,BYTE PTR [edx+0x78]
  414bd0:	xchg   edi,eax
  414bd1:	mov    bl,BYTE PTR [ecx]
  414bd3:	mov    al,ds:0xeaac87ef
  414bd8:	jne    0x414b5c
  414bda:	xchg   esp,eax
  414bdb:	push   ebp
  414bdc:	pop    edi
  414bdd:	loop   0x414b89
  414bdf:	mov    ds:0x6cad9648,eax
  414be4:	cdq    
  414be5:	mov    ?,esp
  414be7:	shr    DWORD PTR [eax+0x5135e44b],cl
  414bed:	(bad)  
  414bee:	in     eax,0x67
  414bf0:	retf   0x613
  414bf3:	cmp    al,0x98
  414bf5:	sbb    DWORD PTR [edi+0x4bf4273f],ebx
  414bfb:	sbb    eax,0x93e46dc5
  414c00:	ror    DWORD PTR [edx+0x5fc29306],1
  414c06:	sub    DWORD PTR [edx-0x6988e47a],0xd133931
  414c10:	aaa    
  414c11:	adc    esi,DWORD PTR [ebp+0x6d088f62]
  414c17:	jg     0x414bb0
  414c19:	addr16 test al,0x33
  414c1c:	test   BYTE PTR [ecx-0x5a],0x4f
  414c20:	mov    ah,0xca
  414c22:	sbb    bh,BYTE PTR es:[eax+0x59fd184c]
  414c29:	sub    bl,BYTE PTR [eax]
  414c2b:	addr16 in eax,dx
  414c2d:	ret    
  414c2e:	mov    esi,0x157fe079
  414c33:	fdiv   st,st(7)
  414c35:	lahf   
  414c36:	dec    ecx
  414c37:	cmp    DWORD PTR [edi],edx
  414c39:	aad    0x5d
  414c3b:	adc    eax,0xb58377a8
  414c40:	adc    al,0x2
  414c42:	pop    ds
  414c43:	xchg   ebp,eax
  414c44:	push   cs
  414c45:	mov    ebx,0x380f179
  414c4a:	pop    edx
  414c4b:	lds    eax,FWORD PTR [edx+eiz*8+0x289613b4]
  414c52:	sbb    dl,BYTE PTR [ebx-0x476fd211]
  414c58:	enter  0xa0ba,0xda
  414c5c:	test   BYTE PTR [esi+0x5f],0xe6
  414c60:	add    BYTE PTR [edi],dh
  414c62:	add    DWORD PTR [edi],esi
  414c64:	inc    esp
  414c65:	sbb    cl,0x42
  414c68:	test   BYTE PTR [ecx+0x2b],0x8f
  414c6c:	test   DWORD PTR [ebp+0x33],edx
  414c6f:	ss out 0x5b,eax
  414c72:	(bad)  
  414c73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c74:	mov    edx,0x8f65246b
  414c79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c7a:	out    dx,eax
  414c7b:	es out dx,al
  414c7d:	iret   
  414c7e:	nop
  414c7f:	sub    eax,DWORD PTR [ebx]
  414c81:	jno    0x414c82
  414c83:	cmp    DWORD PTR [eax],ebx
  414c85:	cli    
  414c86:	stc    
  414c87:	mov    ch,0x54
  414c89:	jb     0x414c32
  414c8b:	xchg   ebx,eax
  414c8c:	je     0x414cfd
  414c8e:	sbb    esp,DWORD PTR [edx-0x3ec51149]
  414c94:	imul   edx,DWORD PTR [edx-0x3755b4d4],0x9328b47d
  414c9e:	call   0x6b92c6c0
  414ca3:	in     al,0x50
  414ca5:	pmovmskb eax,mm3
  414ca8:	outs   dx,BYTE PTR ds:[esi]
  414ca9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414caa:	push   ebp
  414cab:	jp     0x414cf2
  414cad:	js     0x414cc8
  414caf:	mov    edi,0x885cf84f
  414cb4:	adc    al,0xb0
  414cb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414cb7:	mov    ecx,0xe9e7f15e
  414cbc:	dec    ebp
  414cbd:	jmp    0x3027:0xd6bffc58
  414cc4:	inc    eax
  414cc5:	cmp    edi,ebx
  414cc7:	jo     0x414c6f
  414cc9:	ins    DWORD PTR es:[edi],dx
  414cca:	shl    ebp,cl
  414ccc:	jns    0x414c56
  414cce:	cmp    bh,ch
  414cd0:	push   0x748c261
  414cd5:	mov    BYTE PTR [edx-0x3108e807],ah
  414cdb:	and    ah,BYTE PTR [esi]
  414cdd:	cmp    BYTE PTR [edx],0x96
  414ce0:	cld    
  414ce1:	cdq    
  414ce2:	jmp    0xe8330bd1
  414ce7:	repnz clc 
  414ce9:	mov    al,0x5e
  414ceb:	stc    
  414cec:	dec    ebx
  414ced:	mov    eax,0x30412e66
  414cf2:	dec    ecx
  414cf3:	test   DWORD PTR ds:0xc908365,ecx
  414cf9:	cdq    
  414cfa:	scas   al,BYTE PTR es:[edi]
  414cfb:	add    eax,0x57f197a0
  414d00:	leave  
  414d01:	test   eax,0x4274993e
  414d06:	loop   0x414d38
  414d08:	(bad)  
  414d09:	loope  0x414ce3
  414d0b:	sub    DWORD PTR [ecx+eiz*8-0x7209a32d],edi
  414d12:	jb     0x414d80
  414d14:	inc    edx
  414d15:	das    
  414d16:	xchg   ebx,eax
  414d17:	cmp    dl,ah
  414d19:	add    al,0x1f
  414d1b:	pop    eax
  414d1c:	in     al,0xdb
  414d1e:	jae    0x414d09
  414d20:	dec    ebx
  414d21:	xchg   ah,dl
  414d23:	fprem1 
  414d25:	repnz sbb ch,dl
  414d28:	int    0xea
  414d2a:	xor    BYTE PTR [eax+0x6899ce9d],dl
  414d30:	and    BYTE PTR [eax-0x79],0xbc
  414d34:	fild   QWORD PTR [ebp+0x50]
  414d37:	dec    ecx
  414d38:	imul   ebx,DWORD PTR [esp+esi*4],0xffffff83
  414d3c:	mov    al,0xcd
  414d3e:	(bad)  
  414d3f:	xchg   edi,eax
  414d40:	xchg   BYTE PTR [ebp-0x68b8d99],dh
  414d46:	fist   DWORD PTR [edx]
  414d48:	add    eax,0x43e8bcd3
  414d4d:	call   DWORD PTR [ecx]
  414d4f:	outs   dx,DWORD PTR ds:[esi]
  414d50:	adc    ebp,DWORD PTR [edi+0x2234f2ec]
  414d56:	inc    ebx
  414d57:	outs   dx,BYTE PTR ds:[esi]
  414d58:	mov    ss,esi
  414d5a:	and    BYTE PTR [edx+0x4e8f9daf],al
  414d60:	jns    0x414d35
  414d62:	xor    al,0xcb
  414d64:	nop
  414d65:	aaa    
  414d66:	mov    ds:0x5d25e611,al
  414d6b:	inc    edi
  414d6c:	inc    eax
  414d6d:	cmp    ebx,edi
  414d6f:	mov    esi,DWORD PTR [edx-0x4391fa41]
  414d75:	adc    eax,0xe2e1231a
  414d7a:	xor    bl,BYTE PTR [edx]
  414d7c:	les    ecx,FWORD PTR [esp+ebx*1]
  414d7f:	lahf   
  414d80:	jb     0x414d1b
  414d82:	bswap  esp
  414d84:	aam    0x6a
  414d86:	jb     0x414e02
  414d88:	dec    esp
  414d89:	out    0x89,al
  414d8b:	leave  
  414d8c:	xor    edx,DWORD PTR [eax-0x66]
  414d8f:	mov    ch,0xbb
  414d91:	push   edx
  414d92:	pop    edx
  414d93:	arpl   WORD PTR [eax+0x3e51815f],si
  414d99:	(bad)  
  414d9a:	sbb    cl,bl
  414d9c:	xchg   edx,eax
  414d9d:	aaa    
  414d9e:	inc    ebx
  414d9f:	mov    ds:0xb5bae06b,al
  414da4:	call   0x67cf:0x7daf9761
  414dab:	push   edi
  414dac:	shl    BYTE PTR [esi],1
  414dae:	arpl   cx,cx
  414db0:	scas   eax,DWORD PTR es:[edi]
  414db1:	popa   
  414db2:	xor    eax,ebx
  414db4:	pop    ds
  414db5:	loop   0x414dd7
  414db7:	and    al,0x5f
  414db9:	inc    edx
  414dba:	mov    ebp,0x437a4f21
  414dbf:	cmp    al,0x8a
  414dc1:	imul   esp,edx,0xffffffe4
  414dc4:	mov    esi,0xec71289
  414dc9:	sbb    DWORD PTR [eax],0x5e63c04f
  414dcf:	out    0x91,al
  414dd1:	mov    ecx,esp
  414dd3:	(bad)  
  414dd4:	dec    ebx
  414dd5:	push   0xffffffff
  414dd7:	rol    BYTE PTR [eax+0x2e2b93c],0x6f
  414dde:	cld    
  414ddf:	out    0x9,eax
  414de1:	ins    DWORD PTR es:[edi],dx
  414de2:	test   esi,0xb7638721
  414de8:	cmp    eax,0x285dcf54
  414ded:	sbb    eax,ebx
  414def:	and    ecx,DWORD PTR [ebx+ebp*2+0x177dcd68]
  414df6:	or     bl,cl
  414df8:	scas   al,BYTE PTR es:[edi]
  414df9:	dec    ecx
  414dfa:	jnp    0x414d7f
  414dfc:	mov    dl,0xc5
  414dfe:	push   ss
  414dff:	xor    eax,0x25e67451
  414e04:	repz pop ds
  414e06:	cmp    dh,BYTE PTR [esi-0x5b]
  414e09:	push   ss
  414e0a:	inc    edx
  414e0b:	in     eax,dx
  414e0c:	sahf   
  414e0d:	mov    ebp,0x4deea403
  414e12:	sbb    al,0x5d
  414e14:	outs   dx,BYTE PTR ds:[esi]
  414e15:	(bad)  
  414e16:	sub    BYTE PTR [edx+edx*4],ah
  414e19:	push   0x19
  414e1b:	cmp    bl,BYTE PTR [ebp+0xf]
  414e1e:	push   cs
  414e1f:	pop    ss
  414e20:	mov    bl,0x20
  414e22:	adc    eax,0xcdcf3828
  414e27:	ds xchg esp,eax
  414e29:	mov    edi,0x9386d793
  414e2e:	xor    DWORD PTR [edi],edx
  414e30:	scas   al,BYTE PTR es:[edi]
  414e31:	sub    cl,BYTE PTR ds:0x4fa977eb
  414e37:	loopne 0x414e24
  414e39:	lock xor BYTE PTR [eax+0x3a],0x3e
  414e3e:	daa    
  414e3f:	mov    DWORD PTR [ebx],edx
  414e41:	into   
  414e42:	mov    WORD PTR [ebx+edi*1+0x334e9c8],gs
  414e49:	add    BYTE PTR [eax],al
  414e4b:	call   0xa44dd255
  414e50:	mov    WORD PTR [edi+0x2a],fs
  414e53:	mov    eax,0x689e22a6
  414e58:	mov    ebp,DWORD PTR [eax]
  414e5a:	ror    DWORD PTR [edx+ebp*4],1
  414e5d:	mov    esi,0xbec4edbe
  414e62:	mov    esi,0xdb64beae
  414e67:	ret    
  414e68:	imul   esi,DWORD PTR [ecx],0x1c
  414e6b:	(bad)  
  414e6c:	pop    esp
  414e6d:	mov    BYTE PTR [ebp+0x71],ch
  414e70:	leave  
  414e71:	ja     0x414e9d
  414e73:	jge    0x414eaa
  414e75:	xchg   ecx,eax
  414e76:	inc    esi
  414e77:	std    
  414e78:	repz mov esi,0x941661e2
  414e7e:	xchg   di,ax
  414e80:	sbb    ecx,DWORD PTR [ebx]
  414e82:	in     eax,dx
  414e83:	adc    eax,0xda1842ea
  414e88:	jge    0x414e96
  414e8a:	push   ebp
  414e8b:	aaa    
  414e8c:	push   0xc8f36bdb
  414e91:	jnp    0x414e1b
  414e93:	adc    al,0x4f
  414e95:	fild   DWORD PTR [eax+0x18ae85c]
  414e9b:	(bad)  
  414e9c:	inc    edx
  414e9d:	js     0x414e3d
  414e9f:	ficomp DWORD PTR [ecx+0x40909ca2]
  414ea5:	push   edi
  414ea6:	clc    
  414ea7:	and    ah,ah
  414ea9:	mov    cl,0xca
  414eab:	jmp    0x6023020b
  414eb0:	loopne 0x414ea0
  414eb2:	mov    bh,0xcb
  414eb4:	jg     0x414ef9
  414eb6:	sar    DWORD PTR [ebx-0x50],cl
  414eb9:	jge    0x414ec4
  414ebb:	(bad)  
  414ebc:	in     al,0x36
  414ebe:	daa    
  414ebf:	push   edx
  414ec0:	dec    ebx
  414ec1:	idiv   BYTE PTR [edx+0x7c]
  414ec4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ec5:	mov    bh,0x70
  414ec7:	fld    DWORD PTR [edx-0x4c]
  414eca:	adc    al,0x83
  414ecc:	stc    
  414ecd:	pushf  
  414ece:	push   DWORD PTR [ecx]
  414ed0:	scas   al,BYTE PTR es:[edi]
  414ed1:	outs   dx,DWORD PTR ds:[esi]
  414ed2:	ja     0x414ef1
  414ed4:	retf   
  414ed5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ed6:	fs jmp 0x414f20
  414ed9:	test   BYTE PTR [ebx],dl
  414edb:	pusha  
  414edc:	push   eax
  414edd:	jnp    0x414f30
  414edf:	out    0xdd,eax
  414ee1:	xor    eax,ecx
  414ee3:	jmp    0x76da:0x943edbe7
  414eea:	jo     0x414eee
  414eec:	mov    WORD PTR [esi],es
  414eee:	dec    esp
  414eef:	loope  0x414f69
  414ef1:	call   0xf2bc5e56
  414ef6:	or     DWORD PTR [edx-0x2edb93dc],edi
  414efc:	stc    
  414efd:	xchg   ebp,eax
  414efe:	cmp    DWORD PTR [edi-0x9],ecx
  414f01:	xchg   ebx,eax
  414f02:	out    0x1f,al
  414f04:	add    BYTE PTR [si-0x47f7],0x15
  414f0a:	fcomip st,st(4)
  414f0c:	sbb    BYTE PTR [esi],bh
  414f0e:	repz add eax,esp
  414f11:	sahf   
  414f12:	xor    cl,bl
  414f14:	or     DWORD PTR [ebp-0x7142121e],edx
  414f1a:	les    esp,FWORD PTR [edx-0x6f]
  414f1d:	pop    ecx
  414f1e:	or     esp,eax
  414f20:	les    edi,FWORD PTR [ecx]
  414f22:	dec    esp
  414f23:	sti    
  414f24:	ins    BYTE PTR es:[edi],dx
  414f25:	and    DWORD PTR [edx-0x3fc06bb5],0xffffff98
  414f2c:	add    edx,DWORD PTR [eax+edi*4]
  414f2f:	sbb    ch,al
  414f31:	mov    eax,ds:0x9f82ac8b
  414f36:	xor    ch,BYTE PTR [edx]
  414f38:	loop   0x414f2d
  414f3a:	xor    ecx,DWORD PTR [edi]
  414f3c:	in     eax,0xdc
  414f3e:	mov    al,0x16
  414f40:	pop    ecx
  414f42:	idiv   DWORD PTR [edi-0xfdf2a01]
  414f48:	fnstcw WORD PTR [esi-0x44]
  414f4b:	lds    eax,FWORD PTR [ebp-0x2c]
  414f4e:	gs cmp al,dl
  414f51:	mov    al,ds:0xe79293d8
  414f56:	xchg   DWORD PTR [edi-0x2d1f9699],esp
  414f5c:	dec    edi
  414f5d:	lea    esp,[ecx-0x62]
  414f60:	push   ebp
  414f61:	xchg   edx,eax
  414f62:	outs   dx,BYTE PTR ds:[esi]
  414f63:	jno    0x414fba
  414f65:	inc    esp
  414f66:	sahf   
  414f67:	in     eax,dx
  414f68:	add    BYTE PTR [edx+0x54],cl
  414f6b:	jb     0x414f87
  414f6d:	dec    esi
  414f6e:	sub    dl,BYTE PTR [ebx]
  414f70:	push   cs
  414f71:	push   cs
  414f72:	inc    eax
  414f73:	xor    eax,0xca1f1d0d
  414f78:	push   ss
  414f79:	dec    ebx
  414f7a:	(bad)
  414f7e:	jle    0x414fd1
  414f80:	aas    
  414f81:	(bad)  
  414f82:	lock adc BYTE PTR ds:0x61b1f54f,dl
  414f89:	adc    bl,BYTE PTR [ecx+ebp*1+0x72]
  414f8d:	out    dx,eax
  414f8e:	(bad)  
  414f8f:	out    0x8e,al
  414f91:	imul   esp,edx,0x2
  414f94:	push   cs
  414f95:	sar    BYTE PTR [ecx+0x41],cl
  414f98:	push   0x51
  414f9a:	or     edx,DWORD PTR [edx+ebp*1+0x3a]
  414f9e:	add    eax,0x2d787c39
  414fa3:	jg     0x414f38
  414fa5:	jle    0x414f93
  414fa7:	repnz bound edx,QWORD PTR [ecx]
  414faa:	and    BYTE PTR [ecx],ah
  414fac:	jmp    0x240b861
  414fb1:	dec    ebx
  414fb2:	retf   0x11c3
  414fb5:	mov    bh,0x8b
  414fb7:	xor    ah,BYTE PTR [edi-0x3181b00]
  414fbd:	push   esp
  414fbe:	dec    esi
  414fbf:	jle    0x415002
  414fc1:	inc    esi
  414fc2:	lds    esp,FWORD PTR ds:[ecx+0x630a9079]
  414fc9:	adc    bh,BYTE PTR [edx+edx*4+0x28]
  414fcd:	stos   DWORD PTR es:[edi],eax
  414fce:	call   0x33fd:0x75fbfd59
  414fd5:	mov    ds:0x31657bad,al
  414fda:	pop    edx
  414fdb:	pop    edi
  414fdc:	(bad)  
  414fdd:	pop    esi
  414fde:	fnstcw WORD PTR [eax+0x7f]
  414fe1:	ins    BYTE PTR es:[edi],dx
  414fe2:	out    dx,eax
  414fe3:	lods   al,BYTE PTR ds:[esi]
  414fe4:	inc    ebp
  414fe5:	add    al,0x7b
  414fe7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fe8:	push   edx
  414fe9:	dec    esi
  414fea:	scas   eax,DWORD PTR es:[edi]
  414feb:	lea    esi,[esi+0x59822434]
  414ff1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ff2:	inc    BYTE PTR [ecx+eiz*4-0x6e390271]
  414ff9:	inc    edi
  414ffa:	jg     0x41504c
  414ffc:	cs or  eax,0xb17adf6d
  415002:	inc    eax
  415003:	loope  0x414fb4
  415005:	mov    BYTE PTR ds:0xdbbee4fc,bl
  41500b:	pushf  
  41500c:	jns    0x415068
  41500e:	mov    BYTE PTR [ebp+0x1e23cd77],bl
  415014:	ret    0x4e75
  415017:	push   eax
  415018:	out    0x14,eax
  41501a:	mov    edx,DWORD PTR [eax-0xb]
  41501d:	pop    ss
  41501e:	push   ss
  41501f:	hlt    
  415020:	cmp    edx,DWORD PTR [edx]
  415022:	cs std 
  415024:	call   0x4f27:0xf856cd38
  41502b:	repz pop eax
  41502d:	ds jge 0x415068
  415030:	retf   0x394e
  415033:	in     al,dx
  415034:	or     ebx,ebp
  415036:	cmp    edi,DWORD PTR [esi+0x22]
  415039:	jmp    0x251285d2
  41503e:	(bad)  
  415040:	add    eax,0x9c2d3359
  415045:	les    edx,FWORD PTR [ecx-0x51c9f5c8]
  41504b:	or     eax,0xec92ba8c
  415050:	sub    ah,BYTE PTR [edx+ebx*1+0x778e9348]
  415057:	xchg   edx,eax
  415058:	pop    ecx
  415059:	mov    esp,0xda889e3c
  41505e:	mov    ds:0x697cf47a,al
  415063:	pop    edi
  415064:	sbb    al,0xe6
  415066:	xchg   esi,eax
  415067:	cld    
  415068:	mov    ds:0xead932c8,al
  41506d:	sbb    bh,ah
  41506f:	mov    BYTE PTR [edi-0x65],bh
  415072:	add    ch,BYTE PTR [edi]
  415074:	dec    ebx
  415075:	dec    ebp
  415076:	jp     0x4150c0
  415078:	int    0xa1
  41507a:	sti    
  41507b:	les    esp,FWORD PTR [ebx+ebx*2-0x77874238]
  415082:	fldcw  WORD PTR [ebp-0x16]
  415085:	lds    edx,FWORD PTR [edi-0x2917e987]
  41508b:	test   DWORD PTR [ebx],0x7e217023
  415091:	repz imul ecx,esp,0x74cf3d
  415098:	ins    DWORD PTR es:[edi],dx
  415099:	add    ebx,DWORD PTR [esi+0x66ab86fb]
  41509f:	in     eax,dx
  4150a0:	sub    BYTE PTR [edx-0x77],al
  4150a3:	jo     0x41504a
  4150a5:	popf   
  4150a6:	jle    0x4150b3
  4150a8:	in     ax,dx
  4150aa:	xchg   BYTE PTR [esi-0x32978c53],ch
  4150b0:	adc    cl,cl
  4150b2:	xor    BYTE PTR [edx-0x4e],0xd4
  4150b6:	jle    0x4150dc
  4150b8:	in     eax,0xe4
  4150ba:	and    BYTE PTR [edi+0x30ba7649],bl
  4150c0:	jmp    0x415049
  4150c2:	sub    bh,bh
  4150c4:	dec    esi
  4150c5:	pop    ebp
  4150c6:	jle    0x4150d4
  4150c8:	out    0x71,al
  4150ca:	lahf   
  4150cb:	out    dx,eax
  4150cc:	sbb    BYTE PTR [eax+ebp*8-0x4e],0x39
  4150d1:	xchg   edi,eax
  4150d2:	add    al,0x8c
  4150d4:	scas   al,BYTE PTR es:[edi]
  4150d5:	sub    BYTE PTR [edi-0x5c],0xe7
  4150d9:	lock xor BYTE PTR [eax+0x29b39f6],al
  4150e0:	repz cs mov dh,0xad
  4150e4:	call   0xecd9:0x2c77a7a5
  4150eb:	xor    ch,BYTE PTR [ebp+0x1c]
  4150ee:	dec    edi
  4150ef:	retf   0x6c64
  4150f2:	scas   al,BYTE PTR es:[edi]
  4150f3:	dec    ebx
  4150f4:	and    ebx,DWORD PTR [edi+0x41e4ed0a]
  4150fa:	out    dx,eax
  4150fb:	sbb    DWORD PTR [ecx],0xffffff84
  4150fe:	adc    BYTE PTR [edx-0x4e],ah
  415101:	std    
  415102:	daa    
  415103:	frstor [esi-0x78]
  415106:	xchg   esp,eax
  415107:	out    0x9,eax
  415109:	pusha  
  41510a:	push   ecx
  41510b:	repz mov ds:0xbb2ea142,eax
  415111:	xchg   ecx,eax
  415112:	popa   
  415113:	mov    bl,0xd9
  415115:	mov    bh,BYTE PTR [ecx]
  415117:	push   0x1e
  415119:	mov    ds:0xe5233b1b,al
  41511e:	mov    ecx,0xb6eb2b55
  415123:	dec    esi
  415124:	enter  0xcaca,0x9e
  415128:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415129:	sahf   
  41512a:	inc    eax
  41512b:	popa   
  41512c:	loop   0x415144
  41512e:	call   0x4bf6:0xc03abef3
  415135:	xchg   edi,eax
  415136:	jns    0x415110
  415138:	out    0xae,eax
  41513a:	mov    cl,0x53
  41513c:	add    DWORD PTR [ecx+esi*1],edx
  41513f:	mov    DWORD PTR [edx+0x6df6f7b2],ebx
  415145:	bound  edx,QWORD PTR [edx-0x49]
  415148:	and    BYTE PTR [edx+ebx*8],0xb8
  41514c:	xchg   ebx,eax
  41514d:	pop    eax
  41514e:	mov    esi,0xa0941a42
  415153:	in     al,dx
  415154:	loope  0x415124
  415156:	sbb    dl,BYTE PTR [edx-0x3616b4a3]
  41515c:	lods   eax,DWORD PTR ds:[esi]
  41515d:	lock outs dx,DWORD PTR ds:[esi]
  41515f:	mov    BYTE PTR [edx-0xa],ch
  415162:	fs add eax,0x5edcc435
  415168:	dec    edi
  415169:	dec    edi
  41516a:	adc    dl,BYTE PTR [edx-0xd]
  41516d:	(bad)  
  41516e:	dec    esp
  41516f:	push   eax
  415170:	and    al,0x3f
  415172:	pop    esp
  415173:	enter  0xff0d,0x9e
  415177:	adc    eax,DWORD PTR [ebx]
  415179:	cmp    DWORD PTR [eax],esp
  41517b:	pushf  
  41517c:	leave  
  41517d:	xchg   DWORD PTR [edi],edi
  41517f:	je     0x41592b
  415185:	mov    DWORD PTR [ebp-0x18],0x1001
  41518c:	mov    edx,DWORD PTR [ebp-0x1c]
  41518f:	xor    ecx,ecx
  415191:	test   edx,edx
  415193:	jmp    0x4154cc
  415198:	jno    0x4151dd
  41519a:	mov    edx,0xb9bcbc52
  41519f:	fs inc eax
  4151a1:	sub    BYTE PTR [edx],bh
  4151a3:	xchg   edx,eax
  4151a4:	out    dx,eax
  4151a5:	jne    0x41520f
  4151a7:	sar    DWORD PTR [eax+esi*4],1
  4151aa:	mov    esi,0xbec4edbe
  4151af:	mov    esi,0xd9639c4e
  4151b4:	jge    0x415210
  4151b6:	into   
  4151b7:	dec    esp
  4151b8:	fimul  WORD PTR [eax+0x5b]
  4151bb:	xchg   ebp,eax
  4151bc:	push   esi
  4151bd:	cli    
  4151be:	jbe    0x415167
  4151c0:	mov    ebp,0x9c7f06e
  4151c5:	cmp    ch,BYTE PTR [ebp-0x37]
  4151c8:	mov    al,0x18
  4151ca:	(bad)  
  4151cb:	mov    ds:0x52463a97,eax
  4151d0:	popf   
  4151d1:	pop    edx
  4151d2:	pusha  
  4151d3:	sub    cl,BYTE PTR [esi-0x423b4cd8]
  4151d9:	lods   al,BYTE PTR ds:[esi]
  4151da:	pusha  
  4151db:	mov    cl,0xe8
  4151dd:	fs adc eax,0xc4cdb0ce
  4151e3:	jmp    0xf944:0x9bc78a94
  4151ea:	mov    bl,al
  4151ec:	rcr    DWORD PTR [edi+0xdce8b5d],cl
  4151f2:	aam    0xc0
  4151f4:	mov    BYTE PTR [edx+0x58],0x52
  4151f8:	cdq    
  4151f9:	push   ss
  4151fa:	add    DWORD PTR [edi],edi
  4151fc:	or     al,0x92
  4151fe:	xchg   ecx,eax
  4151ff:	adc    eax,0xabf29c27
  415204:	xlat   BYTE PTR ds:[ebx]
  415205:	cmp    edi,DWORD PTR [edx-0x7c]
  415208:	and    al,BYTE PTR [edx]
  41520a:	aaa    
  41520b:	call   0x213f:0x8c577346
  415212:	stc    
  415213:	mov    dh,0xd3
  415215:	into   
  415216:	frstor [esi+0x34d40dea]
  41521c:	into   
  41521d:	mov    cl,0xec
  41521f:	scas   eax,DWORD PTR es:[edi]
  415220:	(bad)  
  415222:	mov    cl,0xf3
  415224:	loope  0x415228
  415226:	shl    DWORD PTR [ebx-0x5e9c5eaf],0x68
  41522d:	and    al,0xff
  41522f:	push   ds
  415230:	int    0x90
  415232:	addr16 out 0x2e,al
  415235:	xor    eax,0xa31c62fe
  41523a:	mov    BYTE PTR [ebx],dh
  41523c:	add    DWORD PTR [ebx+0x23],eax
  41523f:	sbb    esi,ecx
  415241:	scas   al,BYTE PTR es:[edi]
  415242:	jl     0x4152a2
  415244:	jmp    0x415267
  415246:	adc    al,al
  415248:	popf   
  415249:	inc    eax
  41524a:	xor    al,0x91
  41524c:	mov    ah,0xc
  41524e:	xor    BYTE PTR [edi-0x5d],bh
  415251:	xor    ebx,0xa7cc2884
  415257:	pop    edx
  415258:	pop    eax
  415259:	add    al,0x2a
  41525b:	jne    0x4152d6
  41525d:	cld    
  41525e:	stc    
  41525f:	pop    es
  415260:	shl    DWORD PTR [ebp+0x54e5d832],1
  415266:	mov    dl,0xec
  415268:	retf   0x999e
  41526b:	adc    al,0x2b
  41526d:	add    eax,0xe7634294
  415272:	xchg   ebx,eax
  415273:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415274:	mov    esp,0x44b894b
  415279:	sub    eax,0x77097d56
  41527e:	test   BYTE PTR [ebx-0x4e048a0],0xfc
  415285:	(bad)  
  415286:	aad    0x9b
  415288:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415289:	(bad)  
  41528a:	pop    ebx
  41528b:	stos   DWORD PTR es:[edi],eax
  41528c:	sub    bl,BYTE PTR [edi-0x7c]
  41528f:	add    DWORD PTR [edx+0x33],ebx
  415292:	dec    ebx
  415293:	out    0x55,eax
  415295:	popf   
  415296:	xchg   esp,eax
  415297:	fadd   QWORD PTR ds:0x3bcb99ee
  41529d:	es nop
  41529f:	mov    DWORD PTR [edx],0x954d20da
  4152a5:	jo     0x4152c5
  4152a7:	fisttp WORD PTR [edi+eax*2]
  4152aa:	cmp    eax,0x4b52a177
  4152af:	in     eax,0xc0
  4152b1:	xor    ebp,esi
  4152b3:	ror    DWORD PTR [ebx+0x77c5473f],0x3
  4152ba:	inc    esi
  4152bb:	push   ecx
  4152bc:	scas   al,BYTE PTR es:[edi]
  4152bd:	fadd   QWORD PTR [ebx]
  4152bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4152c0:	sbb    DWORD PTR [ebp+0x4b60ef1],ecx
  4152c6:	xor    DWORD PTR [eax+0x66144334],ebx
  4152cc:	hlt    
  4152cd:	sahf   
  4152ce:	adc    eax,0x2d93a50f
  4152d3:	mov    dl,0xdb
  4152d5:	push   cs
  4152d6:	retf   
  4152d7:	mov    WORD PTR [ebx-0x2be14d9c],?
  4152dd:	and    DWORD PTR [edi],esi
  4152df:	pop    esi
  4152e0:	shr    edi,cl
  4152e2:	push   ebp
  4152e3:	cwde   
  4152e4:	repz dec ebx
  4152e6:	xchg   esi,eax
  4152e7:	sub    al,0x7
  4152e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152ea:	and    al,BYTE PTR [eax+0x2a8669e2]
  4152f0:	mov    edi,eax
  4152f2:	pop    edi
  4152f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4152f4:	retf   0x3d6f
  4152f7:	pop    edi
  4152f8:	hlt    
  4152f9:	mov    ebx,0xcb651193
  4152fe:	pop    esp
  4152ff:	sub    eax,0x150f6fd4
  415304:	sbb    BYTE PTR [edx-0x3f],ch
  415307:	xchg   DWORD PTR [eax+0x45],esi
  41530a:	ja     0x415359
  41530c:	xchg   dl,ch
  41530e:	popa   
  41530f:	add    BYTE PTR [esi-0x31],dl
  415312:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415313:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415314:	sub    DWORD PTR [ebp-0x5be8afa8],ebx
  41531a:	xchg   ebx,eax
  41531b:	jge    0x415355
  41531d:	pop    ds
  41531e:	rcl    dh,0xe7
  415321:	sbb    dl,BYTE PTR [edi+0x323ba051]
  415327:	pop    edi
  415328:	xor    bl,cl
  41532a:	fdiv   DWORD PTR [ebp-0x46]
  41532d:	jns    0x41539a
  41532f:	inc    ecx
  415330:	and    DWORD PTR [esi],0xffffffac
  415333:	xchg   edx,eax
  415334:	adc    dl,BYTE PTR [ecx]
  415336:	scas   al,BYTE PTR es:[edi]
  415337:	mov    ds:0x1a70a6e7,eax
  41533c:	je     0x4153ae
  41533e:	aaa    
  41533f:	dec    ebp
  415340:	push   0x273fbd40
  415345:	(bad)  
  415346:	adc    BYTE PTR [ebx-0x1d9c6a68],ah
  41534c:	or     ebp,DWORD PTR [ebx-0x3f836dbe]
  415352:	jnp    0x415388
  415354:	(bad)  
  415355:	lds    esp,FWORD PTR [eax-0x65bd5b06]
  41535b:	sbb    BYTE PTR [esi-0x7d],0x9e
  41535f:	call   0x6214:0x31dffebe
  415366:	(bad)  
  415367:	(bad)  
  415368:	adc    al,0xcc
  41536a:	int3   
  41536b:	and    esp,DWORD PTR [ebx+0x6d]
  41536e:	or     BYTE PTR [edx+0x66],ah
  415371:	push   ss
  415372:	mov    edx,0xa5dbd2d9
  415377:	adc    BYTE PTR [ebp+ebx*2+0x5f],ch
  41537b:	sahf   
  41537c:	rcl    BYTE PTR ds:[eax-0x6728c50d],1
  415383:	pop    esp
  415384:	inc    edi
  415385:	sti    
  415386:	push   0xffffffb4
  415388:	pop    esi
  415389:	ins    BYTE PTR es:[edi],dx
  41538a:	mov    esp,0x81a8d08e
  41538f:	adc    esi,ecx
  415391:	mov    bl,0x44
  415393:	call   0x588e:0xb32cbd46
  41539a:	aam    0xa9
  41539c:	push   ebx
  41539d:	(bad)  
  41539e:	out    0xbe,eax
  4153a0:	sub    BYTE PTR [eax+ecx*4-0x14],cl
  4153a4:	and    eax,0xe9a323db
  4153a9:	jg     0x41536e
  4153ab:	pop    ss
  4153ac:	jge    0x41535b
  4153ae:	push   ss
  4153af:	pop    eax
  4153b0:	xor    al,0xb4
  4153b2:	stos   DWORD PTR es:[edi],eax
  4153b3:	or     dh,al
  4153b5:	lea    ecx,[ecx]
  4153b7:	retf   
  4153b8:	pop    edi
  4153b9:	adc    al,0x9c
  4153bb:	ins    BYTE PTR es:[edi],dx
  4153bc:	ror    DWORD PTR [ecx-0x3f73da39],0x83
  4153c3:	push   esp
  4153c4:	pop    edx
  4153c5:	xchg   ebx,eax
  4153c6:	fs add eax,0xc69b3a45
  4153cc:	sub    ecx,0x17c61bb
  4153d2:	fst    DWORD PTR [eax-0x6ce80a76]
  4153d8:	jmp    0xec6d:0x57827cc2
  4153df:	call   0x4d751744
  4153e4:	mov    ebx,0x71876b7e
  4153e9:	fdiv   st,st(0)
  4153eb:	pop    edx
  4153ec:	and    DWORD PTR [ebx-0x80],edi
  4153ef:	scas   al,BYTE PTR es:[edi]
  4153f0:	push   es
  4153f1:	dec    esi
  4153f2:	lahf   
  4153f3:	xchg   ecx,eax
  4153f4:	(bad)  
  4153f5:	test   eax,0x4e9fa287
  4153fa:	push   edx
  4153fb:	jae    0x4153b2
  4153fd:	or     BYTE PTR [ebx+esi*4-0x7d],dl
  415401:	push   esi
  415402:	or     BYTE PTR [ecx],al
  415404:	mov    eax,ds:0x53d0ac0d
  415409:	leave  
  41540a:	test   BYTE PTR [ecx],0x46
  41540d:	lea    eax,[eax-0x15a89a3]
  415413:	xlat   BYTE PTR ds:[ebx]
  415414:	jb     0x4153a7
  415416:	xchg   esp,eax
  415417:	je     0x4153c2
  415419:	shr    DWORD PTR [ecx+ecx*1],0xf3
  41541d:	xor    DWORD PTR [ebp*4+0x344259fa],esi
  415424:	(bad)  
  415425:	mov    eax,0xc4842641
  41542a:	mov    ah,0xc9
  41542c:	cld    
  41542d:	bound  eax,QWORD PTR [edx+0x28]
  415430:	and    eax,DWORD PTR [ebx+0x15e73fe4]
  415436:	(bad)  
  415437:	xchg   esi,eax
  415438:	sahf   
  415439:	cmc    
  41543a:	xchg   edx,eax
  41543b:	stos   BYTE PTR es:[edi],al
  41543c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41543d:	dec    edi
  41543e:	lds    ecx,FWORD PTR [ecx-0x1f]
  415441:	xor    ah,BYTE PTR [ecx]
  415443:	ret    
  415444:	jmp    FWORD PTR [edi]
  415446:	jo     0x4154a9
  415448:	xchg   ebp,eax
  415449:	dec    eax
  41544a:	inc    esp
  41544b:	outs   dx,BYTE PTR ds:[esi]
  41544c:	fidiv  DWORD PTR ds:0xed90a406
  415452:	bnd je 0x33049035
  415459:	sbb    DWORD PTR ds:0x34fdf7cc,eax
  41545f:	xor    eax,0xa5fe5412
  415464:	ins    DWORD PTR es:[edi],dx
  415465:	add    DWORD PTR [esi+0x41f60cc9],eax
  41546b:	fadd   st(5),st
  41546d:	popf   
  41546e:	lea    edx,[ebx+ecx*2-0x7c]
  415472:	mov    edx,0x144c7515
  415477:	sub    esp,DWORD PTR [esi]
  415479:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41547a:	into   
  41547b:	out    dx,al
  41547c:	std    
  41547d:	stos   DWORD PTR es:[edi],eax
  41547e:	sbb    bl,BYTE PTR [ebp+0x420a018c]
  415484:	bound  edi,QWORD PTR [edi]
  415486:	push   edi
  415487:	add    DWORD PTR [esi],esp
  415489:	jle    0x41549d
  41548b:	add    ch,BYTE PTR [ecx+0x44]
  41548e:	loopne 0x4154ac
  415490:	jae    0x415447
  415492:	fwait
  415493:	repnz add BYTE PTR [eax],ah
  415496:	dec    edi
  415497:	jb     0x4154ae
  415499:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41549a:	mov    ah,0xa3
  41549c:	push   es
  41549d:	mov    cl,0x7b
  41549f:	inc    eax
  4154a0:	call   0xd2ed:0x9d3087fb
  4154a7:	push   esi
  4154a8:	and    al,0xdf
  4154aa:	sbb    BYTE PTR [eax],0xee
  4154ad:	mov    WORD PTR [esi+0x49],es
  4154b0:	fsub   st(5),st
  4154b2:	loop   0x4154f2
  4154b4:	aas    
  4154b5:	xchg   esp,eax
  4154b6:	rol    DWORD PTR [eax],0xa0
  4154b9:	mov    ebp,0x3327bc0b
  4154be:	mov    esi,0x4635ad0
  4154c3:	sbb    al,0xb1
  4154c5:	retf   0xae9a
  4154c8:	cmp    BYTE PTR [edx-0x6b],dh
  4154cb:	stos   BYTE PTR es:[edi],al
  4154cc:	je     0x415550
  4154d2:	mov    al,BYTE PTR [ecx+edi*1]
  4154d5:	mov    BYTE PTR [ebp-0x1],al
  4154d8:	mov    BYTE PTR [ebp-0x3],0x74
  4154dc:	mov    BYTE PTR [ebp-0x2],0x16
  4154e0:	mov    BYTE PTR [ebp-0x4],0x62
  4154e4:	movzx  eax,BYTE PTR [ebp-0x4]
  4154e8:	movzx  ebx,BYTE PTR [ebp-0x2]
  4154ec:	or     eax,0xd4
  4154f1:	and    eax,ebx
  4154f3:	movzx  ebx,BYTE PTR [ebp-0x3]
  4154f7:	and    eax,ebx
  4154f9:	mov    BYTE PTR [ebp-0x12],al
  4154fc:	mov    BYTE PTR [ebp-0x11],0xfe
  415500:	mov    BYTE PTR [ebp-0x14],0x32
  415504:	mov    BYTE PTR [ebp-0x4],0xc7
  415508:	mov    BYTE PTR [ebp-0x2],0x73
  41550c:	mov    BYTE PTR [ebp-0x3],0xb3
  415510:	mov    al,BYTE PTR [ebp-0x3]
  415513:	mov    bl,BYTE PTR [ebp-0x2]
  415516:	or     al,bl
  415518:	mov    bl,BYTE PTR [ebp-0x4]
  41551b:	sub    al,bl
  41551d:	mov    bl,BYTE PTR [ebp-0x14]
  415520:	imul   bl
  415522:	mov    bl,BYTE PTR [ebp-0x11]
  415525:	sub    al,bl
  415527:	mov    bl,BYTE PTR [ebp-0x12]
  41552a:	cmp    bl,al
  41552c:	ja     0x415541
  415532:	movzx  eax,BYTE PTR [ebp-0x1]
  415536:	sub    eax,0xed
  41553b:	mov    BYTE PTR [ebp-0x1],al
  41553e:	ror    BYTE PTR [ebp-0x1],1
  415541:	mov    al,BYTE PTR [ebp-0x1]
  415544:	mov    BYTE PTR [ecx+edi*1],al
  415547:	inc    ecx
  415548:	cmp    ecx,edx
  41554a:	jb     0x4154d2
  415550:	dec    DWORD PTR [ebp-0x18]
  415553:	jne    0x41518c
  415559:	mov    eax,DWORD PTR [ebp+0x8]
  41555c:	mov    ecx,DWORD PTR [ebp+0xc]
  41555f:	shrd   eax,ecx,0x2
  415563:	shr    ecx,0x2
  415566:	mov    ecx,DWORD PTR [ebp+0x8]
  415569:	mov    edx,DWORD PTR [ebp+0xc]
  41556c:	xor    eax,esi
  41556e:	xor    edx,edx
  415570:	jmp    0x4158a9
  415575:	cmp    dl,BYTE PTR [ebx]
  415577:	inc    esi
  415578:	mov    WORD PTR [eax-0x64],gs
  41557b:	cmp    al,0xb3
  41557d:	mov    ch,0xd8
  41557f:	(bad)  
  415580:	fnsave [edi]
  415582:	jo     0x415553
  415584:	nop
  415585:	ins    BYTE PTR es:[edi],dx
  415586:	mov    dh,0xbe
  415588:	mov    esi,0xbebec4ed
  41558d:	outs   dx,DWORD PTR ds:[esi]
  41558e:	mov    ah,0xff
  415590:	les    ebx,FWORD PTR [esi-0x3034c028]
  415596:	mov    cl,0x90
  415598:	mov    eax,0xbe7a147e
  41559d:	mov    al,ds:0x330ec62d
  4155a2:	cdq    
  4155a3:	jge    0x4155e8
  4155a5:	inc    eax
  4155a6:	pusha  
  4155a7:	push   esi
  4155a8:	mov    cl,0xff
  4155aa:	loop   0x415625
  4155ac:	stc    
  4155ad:	fisttp DWORD PTR [ecx-0x1831ae1f]
  4155b3:	mov    esi,edi
  4155b5:	add    eax,0x51c73741
  4155ba:	inc    ebx
  4155bb:	ror    ebp,cl
  4155bd:	mov    edi,0x4c962d4e
  4155c2:	jmp    0x6b8929a9
  4155c7:	sahf   
  4155c8:	push   esp
  4155c9:	pop    edi
  4155ca:	imul   ebp,DWORD PTR [edi+0x61],0x3dc62024
  4155d1:	jns    0x41559b
  4155d3:	add    eax,0xc6c94d3e
  4155d8:	mov    eax,ds:0x7ab4c864
  4155dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155de:	into   
  4155df:	add    BYTE PTR [ebp-0x5e],bh
  4155e2:	mov    ebx,0x6cf21450
  4155e7:	aam    0xcd
  4155e9:	ja     0x415624
  4155eb:	test   eax,0x64aa39b0
  4155f0:	das    
  4155f1:	scas   eax,DWORD PTR es:[edi]
  4155f2:	nop
  4155f3:	ss out dx,al
  4155f5:	xchg   ecx,eax
  4155f6:	mov    edi,0x3abd70f3
  4155fb:	jbe    0x4155c3
  4155fd:	pop    edi
  4155fe:	out    0xfe,eax
  415600:	es test eax,0xbf9b9e02
  415606:	fmul   st(3),st
  415608:	rcl    BYTE PTR [edx+esi*1+0x30],cl
  41560c:	cdq    
  41560d:	outs   dx,DWORD PTR ds:[esi]
  41560e:	(bad)  
  41560f:	jg     0x4155a0
  415611:	stc    
  415612:	ds mov dh,0x7d
  415615:	adc    al,0x39
  415617:	mov    eax,0x2ebe4108
  41561c:	callw  0xaae4
  415620:	scas   eax,DWORD PTR es:[edi]
  415621:	and    cl,dl
  415623:	and    ebp,DWORD PTR [ecx-0x611ba11]
  415629:	add    ch,BYTE PTR [ecx*1+0x207d8d94]
  415630:	aam    0xaa
  415632:	inc    edi
  415633:	pop    ds
  415634:	add    BYTE PTR [edx],al
  415636:	mov    eax,edx
  415638:	pop    ebp
  415639:	js     0x415650
  41563b:	push   eax
  41563c:	aas    
  41563d:	mov    ch,0x5
  41563f:	(bad)  
  415640:	aam    0xe
  415642:	jo     0x415661
  415644:	xor    ecx,ebp
  415646:	shr    DWORD PTR [ecx-0x35ee6cc],0xfa
  41564d:	mov    esi,0xdb01c96
  415652:	cmp    DWORD PTR [esi-0x73],edi
  415655:	adc    eax,0x5593952b
  41565a:	dec    esp
  41565b:	rcr    ecx,1
  41565d:	icebp  
  41565e:	push   eax
  41565f:	cmp    esi,DWORD PTR [edi]
  415661:	adc    dh,BYTE PTR [eax]
  415663:	jb     0x415656
  415665:	inc    edx
  415666:	jbe    0x4156d0
  415668:	and    ecx,ebp
  41566a:	mov    dl,0xed
  41566c:	enter  0x862c,0x38
  415670:	push   eax
  415671:	mov    dh,0x1d
  415673:	mov    bl,BYTE PTR [ebx-0x31]
  415676:	lock mov ds:0x18bf4926,al
  41567c:	mov    gs,WORD PTR [eax]
  41567e:	pop    esp
  41567f:	sti    
  415680:	retf   0x5813
  415683:	xchg   DWORD PTR [edi-0x708779e6],eax
  415689:	(bad)  
  41568b:	sub    DWORD PTR [edx-0x545a3e6e],esp
  415691:	test   DWORD PTR [edi],eax
  415693:	mov    cl,0x21
  415695:	adc    esp,DWORD PTR [edx+0x63]
  415698:	add    BYTE PTR [ebx],dl
  41569a:	(bad)  
  41569b:	leave  
  41569c:	sahf   
  41569d:	xchg   ebx,eax
  41569e:	outs   dx,BYTE PTR ds:[esi]
  41569f:	xchg   DWORD PTR [esp+eax*8],ebp
  4156a2:	push   es
  4156a3:	sbb    BYTE PTR [esi+0x2e],ch
  4156a6:	mov    BYTE PTR [ebx+0x49],bh
  4156a9:	aad    0xcd
  4156ab:	fist   DWORD PTR gs:[ebx-0x9c68086]
  4156b2:	loope  0x41571c
  4156b4:	rol    DWORD PTR ds:0xf66f4365,1
  4156ba:	popf   
  4156bb:	and    eax,0x910322a7
  4156c0:	cmp    ax,0x381a
  4156c4:	enter  0x4ff5,0xa2
  4156c8:	je     0x4156bd
  4156ca:	leave  
  4156cb:	xchg   ecx,eax
  4156cc:	js     0x4156d5
  4156ce:	jge    0x4156c7
  4156d0:	jl     0x4156a5
  4156d2:	dec    esi
  4156d3:	sub    BYTE PTR [ecx-0x4dabb09e],cl
  4156d9:	cmp    al,0xe
  4156db:	retf   
  4156dc:	pusha  
  4156dd:	scas   eax,DWORD PTR es:[edi]
  4156de:	fisub  DWORD PTR [eax-0xc9b04ba]
  4156e4:	mov    BYTE PTR [ebx-0x505a2c79],bh
  4156ea:	dec    esi
  4156eb:	pushf  
  4156ec:	ins    DWORD PTR es:[edi],dx
  4156ed:	es or  dh,al
  4156f0:	inc    ecx
  4156f1:	pop    esi
  4156f2:	dec    edx
  4156f3:	fmul   st(6),st
  4156f5:	xchg   edx,eax
  4156f6:	cmp    ebp,DWORD PTR [edx+0x25]
  4156f9:	jcxz   0x415741
  4156fc:	add    al,0xf1
  4156fe:	leave  
  4156ff:	loop   0x4156b8
  415701:	icebp  
  415702:	jge    0x41574c
  415704:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415705:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415706:	mov    ds:0xa745a9d6,al
  41570b:	nop
  41570c:	cmp    eax,0x31900406
  415711:	or     ch,BYTE PTR [esi-0x44]
  415714:	loop   0x4156bc
  415716:	ss xchg esp,eax
  415718:	repnz inc edx
  41571a:	ficom  WORD PTR [ebx]
  41571c:	mov    edi,0x6dfd1c46
  415721:	xchg   esp,eax
  415722:	iret   
  415723:	mov    al,ds:0x2b00f076
  415728:	jmp    0xab78c699
  41572d:	cld    
  41572e:	xlat   BYTE PTR ds:[ebx]
  41572f:	xchg   esp,eax
  415730:	into   
  415731:	ss (bad) 
  415733:	mov    esi,0xa8fc70e9
  415738:	ror    ch,cl
  41573a:	stos   BYTE PTR es:[edi],al
  41573b:	in     al,dx
  41573c:	fcomi  st,st(0)
  41573e:	inc    esi
  41573f:	je     0x4156f2
  415741:	mov    dh,0x57
  415743:	dec    edx
  415744:	in     eax,dx
  415745:	cld    
  415746:	out    dx,eax
  415747:	lds    ebp,FWORD PTR [ebx]
  415749:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41574a:	scas   al,BYTE PTR es:[edi]
  41574b:	push   ss
  41574c:	div    DWORD PTR [edx-0x47]
  41574f:	push   0x77
  415751:	leave  
  415752:	push   ebp
  415753:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415754:	and    BYTE PTR [ecx-0x13],dh
  415757:	jno    0x41575e
  415759:	jns    0x4156fd
  41575b:	add    al,0xd3
  41575d:	mov    eax,ds:0x7fe78d4f
  415762:	ins    DWORD PTR es:[edi],dx
  415763:	repnz loope 0x415713
  415766:	jns    0x415788
  415768:	fsubr  QWORD PTR [esp+eiz*8]
  41576b:	inc    eax
  41576c:	push   ds
  41576d:	push   ecx
  41576e:	adc    edx,DWORD PTR [edx+0x1d099642]
  415774:	xor    bl,BYTE PTR [edx-0x29ac5df1]
  41577a:	mov    ds:0xd20ab9e5,eax
  41577f:	ja     0x415704
  415781:	out    dx,eax
  415782:	cmc    
  415783:	int3   
  415784:	mov    esp,0x13d6ea49
  415789:	fimul  WORD PTR [esi+ebp*1-0x6]
  41578d:	xor    DWORD PTR [ecx+0x648aee85],eax
  415793:	mov    BYTE PTR [eax],ah
  415795:	fisubr DWORD PTR ds:[eax-0x717b97e9]
  41579c:	(bad)  
  41579d:	push   cs
  41579e:	(bad)  [ecx]
  4157a0:	(bad)  
  4157a1:	and    ah,dh
  4157a3:	and    ebp,DWORD PTR [edi+0x7b6e73e]
  4157a9:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  4157ab:	jbe    0x4157d2
  4157ad:	dec    edx
  4157ae:	dec    edx
  4157af:	outs   dx,BYTE PTR ds:[esi]
  4157b0:	shl    dh,1
  4157b2:	(bad)  [ebp+0x2c9031f1]
  4157b8:	ds pusha 
  4157ba:	mov    edi,0x7803bc17
  4157bf:	push   0x354332fb
  4157c4:	xchg   edi,eax
  4157c5:	retf   0xc9aa
  4157c8:	pusha  
  4157c9:	stos   DWORD PTR es:[edi],eax
  4157ca:	mov    eax,0x8e115d88
  4157cf:	pop    ss
  4157d0:	std    
  4157d1:	retf   
  4157d2:	div    BYTE PTR [ebx-0x1166322c]
  4157d8:	or     al,BYTE PTR [edi+ebx*4]
  4157db:	push   eax
  4157dc:	in     eax,0xa3
  4157de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157df:	int    0xd5
  4157e1:	pop    ecx
  4157e2:	lea    ecx,[esp+edx*1+0x78294460]
  4157e9:	cld    
  4157ea:	clc    
  4157eb:	cdq    
  4157ec:	inc    ecx
  4157ed:	lock sar DWORD PTR [ebp*4-0x66643055],0xce
  4157f6:	lahf   
  4157f7:	jb     0x415786
  4157f9:	mov    dl,0x61
  4157fb:	push   eax
  4157fc:	ficom  DWORD PTR [ecx+0x16ccfd96]
  415802:	jmp    0x415815
  415804:	adc    eax,0x10bb8235
  415809:	sub    al,0x2b
  41580b:	pop    eax
  41580c:	scas   eax,DWORD PTR es:[edi]
  41580d:	adc    esp,0x2e
  415810:	std    
  415811:	enter  0x461a,0x8d
  415815:	out    dx,eax
  415816:	sbb    edi,DWORD PTR [edi-0x2036458d]
  41581c:	xchg   ebp,eax
  41581d:	fistp  WORD PTR [ebx-0x61]
  415820:	mov    cs:0xe9a438ff,eax
  415826:	pop    ss
  415827:	cmp    bl,BYTE PTR ds:0x1448e64
  41582d:	stos   BYTE PTR es:[edi],al
  41582e:	cdq    
  41582f:	xchg   BYTE PTR [ebx+0x2],bl
  415832:	aad    0x4a
  415834:	sub    DWORD PTR [esi-0x1be7fccb],0xbdf3b58c
  41583e:	in     al,0x13
  415840:	mov    edx,0xf22f312e
  415845:	pop    ecx
  415846:	cmp    eax,0x21779271
  41584b:	adc    DWORD PTR [edi+edx*8+0x6296fa6f],esi
  415852:	pushf  
  415853:	sub    BYTE PTR [ebp+esi*4-0x73],ch
  415857:	xchg   DWORD PTR [edi],eax
  415859:	js     0x4157ee
  41585b:	cld    
  41585c:	xor    bl,BYTE PTR ds:0x8f2c0946
  415862:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415863:	adc    DWORD PTR [edi+0x34713193],esp
  415869:	popa   
  41586a:	rcl    edi,1
  41586c:	sbb    DWORD PTR [ebx+0x44],edx
  41586f:	in     al,dx
  415870:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415871:	mov    al,ds:0xc4a9a48f
  415876:	fs or  al,0x88
  415879:	dec    edi
  41587a:	xchg   edx,eax
  41587b:	iret   
  41587c:	ficomp WORD PTR [edx+0x67f86e88]
  415882:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415883:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415884:	inc    ebp
  415885:	adc    BYTE PTR [ecx],ah
  415887:	das    
  415888:	(bad)  
  415889:	sbb    bl,ah
  41588b:	pop    ds
  41588c:	and    DWORD PTR [eax+ecx*2+0x54080786],edi
  415893:	hlt    
  415894:	xchg   esi,eax
  415895:	xor    al,0xbd
  415897:	mov    dh,0x7c
  415899:	mov    ebp,0x965a8d9e
  41589e:	push   ds
  41589f:	mov    bh,BYTE PTR [eax+eiz*4+0x31]
  4158a3:	fdiv   QWORD PTR [edx]
  4158a5:	cmp    bh,bl
  4158a7:	mov    edx,0x6ac20b75
  4158ac:	add    DWORD PTR [ebx],eax
  4158ae:	(bad)  
  4158af:	push   eax
  4158b0:	lea    eax,[ebp-0x13]
  4158b3:	push   eax
  4158b4:	shl    ecx,0x1e
  4158b7:	call   0x411c08
  4158bc:	mov    eax,DWORD PTR [ebp+0x10]
  4158bf:	mov    ecx,DWORD PTR [ebp+0x14]
  4158c2:	shrd   eax,ecx,0x2
  4158c6:	shr    ecx,0x2
  4158c9:	mov    ecx,DWORD PTR [ebp+0x10]
  4158cc:	mov    edx,DWORD PTR [ebp+0x14]
  4158cf:	xor    eax,esi
  4158d1:	xor    edx,edx
  4158d3:	or     eax,edx
  4158d5:	add    eax,edi
  4158d7:	push   0x1
  4158d9:	push   eax
  4158da:	mov    eax,DWORD PTR [ebp+0x8]
  4158dd:	shl    ecx,0x1e
  4158e0:	mov    ecx,DWORD PTR [ebp+0xc]
  4158e3:	shrd   eax,ecx,0x2
  4158e7:	shr    ecx,0x2
  4158ea:	mov    ecx,DWORD PTR [ebp+0x8]
  4158ed:	mov    edx,DWORD PTR [ebp+0xc]
  4158f0:	xor    eax,esi
  4158f2:	xor    edx,edx
  4158f4:	or     eax,edx
  4158f6:	add    eax,edi
  4158f8:	push   eax
  4158f9:	shl    ecx,0x1e
  4158fc:	call   0x411c08
  415901:	push   0x1
  415903:	lea    eax,[ebp-0x13]
  415906:	push   eax
  415907:	mov    eax,DWORD PTR [ebp+0x10]
  41590a:	mov    ecx,DWORD PTR [ebp+0x14]
  41590d:	shrd   eax,ecx,0x2
  415911:	shr    ecx,0x2
  415914:	mov    ecx,DWORD PTR [ebp+0x10]
  415917:	mov    edx,DWORD PTR [ebp+0x14]
  41591a:	xor    eax,esi
  41591c:	xor    edx,edx
  41591e:	or     eax,edx
  415920:	add    eax,edi
  415922:	push   eax
  415923:	shl    ecx,0x1e
  415926:	call   0x411c08
  41592b:	mov    eax,DWORD PTR [ebp+0x10]
  41592e:	mov    ecx,DWORD PTR [ebp+0x14]
  415931:	shrd   eax,ecx,0x2
  415935:	shr    ecx,0x2
  415938:	mov    ecx,DWORD PTR [ebp+0x10]
  41593b:	mov    edx,DWORD PTR [ebp+0x14]
  41593e:	pop    edi
  41593f:	xor    eax,esi
  415941:	xor    edx,edx
  415943:	pop    esi
  415944:	shl    ecx,0x1e
  415947:	or     eax,edx
  415949:	pop    ebx
  41594a:	leave  
  41594b:	ret    0x10
  41594e:	mov    eax,DWORD PTR [esp+0x8]
  415952:	or     DWORD PTR ds:0x4284f5,0x7249
  41595c:	mov    ecx,DWORD PTR [esp+0x10]
  415960:	or     ecx,eax
  415962:	mov    DWORD PTR ds:0x428591,0x6956
  41596c:	mov    ecx,DWORD PTR [esp+0xc]
  415970:	jne    0x4159ee
  415976:	cmp    DWORD PTR ds:0x428465,0x0
  41597d:	mov    DWORD PTR ds:0x428585,0x1bde
  415987:	mov    DWORD PTR ds:0x4284a9,0x1ea7
  415991:	jmp    0x4159e5
  415996:	mov    eax,0x417c
  41599b:	mov    DWORD PTR ds:0x4285b1,ebx
  4159a1:	cmp    DWORD PTR ds:0x428465,0x0
  4159a8:	jne    0x4159d1
  4159ae:	push   DWORD PTR [ebp-0x28]
  4159b1:	call   DWORD PTR ds:0x42e0e0
  4159b7:	adc    DWORD PTR ds:0x4284f5,0x428439
  4159c1:	sub    DWORD PTR ds:0x42846d,0x428529
  4159cb:	and    DWORD PTR ds:0x428485,edi
  4159d1:	mov    DWORD PTR ds:0x42849d,0x6bfe
  4159db:	adc    DWORD PTR ds:0x42850d,0x437a
  4159e5:	mov    eax,DWORD PTR [esp+0x4]
  4159e9:	mul    ecx
  4159eb:	ret    0x10
  4159ee:	push   ebx
  4159ef:	mul    ecx
  4159f1:	mov    ebx,eax
  4159f3:	mov    eax,DWORD PTR [esp+0x8]
  4159f7:	mul    DWORD PTR [esp+0x14]
  4159fb:	add    ebx,eax
  4159fd:	mov    eax,DWORD PTR [esp+0x8]
  415a01:	mul    ecx
  415a03:	add    edx,ebx
  415a05:	pop    ebx
  415a06:	ret    0x10
  415a09:	push   ebp
  415a0a:	mov    ebp,esp
  415a0c:	sub    esp,0x44
  415a0f:	push   ebx
  415a10:	push   esi
  415a11:	push   edi
  415a12:	mov    DWORD PTR [ebp-0x18],0x2
  415a19:	mov    DWORD PTR [ebp-0x14],0x29f0
  415a20:	mov    DWORD PTR [ebp-0x10],0x3716
  415a27:	mov    DWORD PTR [ebp-0x2c],0x4e09
  415a2e:	mov    DWORD PTR [ebp-0x28],0x4497
  415a35:	mov    DWORD PTR [ebp-0x24],0x5
  415a3c:	mov    DWORD PTR [ebp-0x20],0x2a0a
  415a43:	mov    DWORD PTR [ebp-0x1c],0x1
  415a4a:	mov    DWORD PTR [ebp-0xc],0xce6
  415a51:	mov    DWORD PTR [ebp-0x8],0x12b3
  415a58:	mov    DWORD PTR [ebp-0x4],0xb09
  415a5f:	mov    DWORD PTR [ebp-0x44],0x7617
  415a66:	mov    DWORD PTR [ebp-0x40],0x721a
  415a6d:	mov    DWORD PTR [ebp-0x3c],0x5151
  415a74:	mov    DWORD PTR [ebp-0x38],0x14aa
  415a7b:	mov    DWORD PTR [ebp-0x34],0x5a28
  415a82:	mov    DWORD PTR [ebp-0x30],0x19a8
  415a89:	mov    ecx,DWORD PTR [ebp-0x1c]
  415a8c:	mov    eax,DWORD PTR [ebp-0x20]
  415a8f:	xor    edx,edx
  415a91:	div    ecx
  415a93:	mov    ecx,DWORD PTR [ebp-0x24]
  415a96:	xor    edx,edx
  415a98:	mov    esi,0x1ac5
  415a9d:	push   0x20
  415a9f:	div    ecx
  415aa1:	mov    ecx,DWORD PTR [ebp-0x28]
  415aa4:	xor    edx,edx
  415aa6:	xor    eax,0x60dc
  415aab:	sub    eax,ecx
  415aad:	mov    ecx,DWORD PTR [ebp-0x2c]
  415ab0:	lea    edi,[eax+ecx*1-0x6300]
  415ab7:	mov    eax,DWORD PTR [ebp-0x4]
  415aba:	mov    ecx,DWORD PTR [ebp-0x8]
  415abd:	sub    eax,0x7721
  415ac2:	xor    eax,ecx
  415ac4:	mov    ecx,DWORD PTR [ebp-0xc]
  415ac7:	xor    eax,ecx
  415ac9:	or     eax,0x7bc9
  415ace:	xor    eax,0xfffff0db
  415ad3:	mov    ebx,edi
  415ad5:	sub    ebx,eax
  415ad7:	mov    eax,DWORD PTR [ebp-0x10]
  415ada:	mov    ecx,DWORD PTR [ebp-0x14]
  415add:	xor    eax,ecx
  415adf:	mov    ecx,DWORD PTR [ebp-0x18]
  415ae2:	sub    eax,esi
  415ae4:	div    ecx
  415ae6:	mov    ecx,0x211
  415aeb:	pop    edx
  415aec:	xor    eax,ecx
  415aee:	jmp    0x415ef7
  415af3:	push   ds
  415af4:	inc    ecx
  415af5:	cmp    edi,esi
  415af7:	mov    edx,0x9f9c24b7
  415afc:	push   ecx
  415afd:	mov    ebp,0x869cacf
  415b02:	xchg   edx,eax
  415b03:	pushf  
  415b04:	mov    esp,0xc48ebebe
  415b09:	mov    esi,0xe34c28be
  415b0e:	fcomp  QWORD PTR [eax+esi*8-0x65]
  415b12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b13:	cmp    BYTE PTR [eax],bh
  415b15:	mov    bh,0xf5
  415b17:	inc    esi
  415b18:	add    DWORD PTR [edx-0x66ddb83],ebp
  415b1e:	inc    edx
  415b1f:	in     eax,dx
  415b20:	adc    al,0x9c
  415b22:	addr16 sbb edi,esi
  415b25:	mov    edx,0xe0c9ead6
  415b2a:	imul   ecx,DWORD PTR [eax+0x512b031d],0x7d
  415b31:	je     0x415aee
  415b33:	mov    al,0x6
  415b35:	dec    ecx
  415b36:	in     eax,0xe8
  415b38:	js     0x415b84
  415b3a:	leave  
  415b3b:	cs jle 0x415b43
  415b3e:	xchg   BYTE PTR [eax-0x2aa3f4d2],dh
  415b44:	sub    DWORD PTR [edi+0x61],eax
  415b47:	or     ebx,esp
  415b49:	push   cs
  415b4a:	mov    eax,0xfb70907
  415b4f:	dec    esi
  415b50:	pop    ds
  415b51:	jmp    0x415bd0
  415b53:	pop    edi
  415b54:	cld    
  415b55:	sbb    al,dh
  415b57:	add    BYTE PTR [ebx],cl
  415b59:	sub    bl,bh
  415b5b:	mov    dl,0x3b
  415b5d:	leave  
  415b5e:	ret    
  415b5f:	(bad)  [edx-0x13]
  415b62:	adc    dh,al
  415b64:	xchg   ebp,eax
  415b65:	sub    ebp,eax
  415b67:	shl    DWORD PTR [edx+0x7a],0x5
  415b6b:	mov    al,ds:0xf352d394
  415b70:	and    eax,0x3cf056b
  415b75:	mov    ecx,0xaca8e918
  415b7a:	(bad)  
  415b7b:	push   cs
  415b7c:	ror    DWORD PTR [eax],0xb8
  415b7f:	or     DWORD PTR [esi],0x729b9ce7
  415b85:	mov    bl,0x41
  415b87:	pop    eax
  415b88:	pusha  
  415b89:	mov    esp,0x5d80898
  415b8e:	push   ss
  415b8f:	fwait
  415b90:	cmc    
  415b91:	pop    ds
  415b92:	clc    
  415b93:	aad    0x8e
  415b95:	or     al,0x91
  415b97:	stc    
  415b98:	xor    esp,edx
  415b9a:	jb     0x415b74
  415b9c:	mov    bh,0x89
  415b9e:	inc    ebx
  415b9f:	and    DWORD PTR [ecx],eax
  415ba1:	out    0xa5,eax
  415ba3:	fsubr  QWORD PTR [esi+0x913b9ea]
  415ba9:	and    DWORD PTR [edx],eax
  415bab:	lahf   
  415bac:	dec    eax
  415bad:	dec    edx
  415bae:	and    edx,DWORD PTR [ecx]
  415bb0:	or     al,0x3b
  415bb2:	nop
  415bb3:	ja     0x415b99
  415bb5:	std    
  415bb6:	ss mov dh,0xd
  415bb9:	dec    ecx
  415bba:	mov    bl,0x74
  415bbc:	xor    edi,DWORD PTR [ecx+0xe]
  415bbf:	les    eax,FWORD PTR [ecx-0x3b]
  415bc2:	push   cs
  415bc3:	dec    edi
  415bc4:	sbb    eax,0x8f5af8f7
  415bc9:	lods   eax,DWORD PTR ds:[esi]
  415bca:	pop    edx
  415bcb:	(bad)  
  415bcc:	push   edi
  415bcd:	jp     0x415bed
  415bcf:	jns    0x415ba1
  415bd1:	in     eax,0xa2
  415bd3:	push   eax
  415bd4:	dec    ebx
  415bd5:	push   0xffffff93
  415bd7:	xchg   esi,eax
  415bd8:	xor    eax,0xdec0da9c
  415bdd:	inc    BYTE PTR [ebp+0x41914f24]
  415be3:	(bad)  
  415be4:	hlt    
  415be5:	push   ss
  415be6:	xor    DWORD PTR ds:0xe6264576,0x27
  415bed:	fstp   TBYTE PTR [esi+0x65]
  415bf0:	ins    BYTE PTR es:[edi],dx
  415bf1:	jg     0x415be7
  415bf3:	jne    0x415c17
  415bf5:	js     0x415bdd
  415bf7:	mov    ds:0xfbba0c1c,eax
  415bfc:	jno    0x415c56
  415bfe:	xor    edx,esi
  415c00:	sub    al,ch
  415c02:	pop    ebp
  415c03:	ja     0x415bcd
  415c05:	(bad)
  415c08:	jg     0x415bf9
  415c0a:	pop    ebx
  415c0b:	loop   0x415c5d
  415c0d:	scas   eax,DWORD PTR es:[edi]
  415c0e:	sbb    al,0x80
  415c10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c11:	add    BYTE PTR [eax],ah
  415c13:	fsubr  st,st(3)
  415c15:	add    eax,0x28bf944f
  415c1a:	jne    0x415bfe
  415c1c:	fistp  WORD PTR ds:0xc7737f26
  415c23:	ds ins BYTE PTR es:[edi],dx
  415c25:	push   ebp
  415c26:	ss ret 0x9dda
  415c2a:	stc    
  415c2b:	cs iret 
  415c2d:	pop    edx
  415c2e:	xor    al,0xbf
  415c30:	pop    edx
  415c31:	sub    bl,al
  415c33:	mov    ebx,cs
  415c35:	add    eax,0xd5cfd5ba
  415c3a:	shl    BYTE PTR [eax+0x15bb9175],0xef
  415c41:	dec    edx
  415c42:	jge    0x415c6e
  415c44:	or     BYTE PTR [ebp+0x75],ah
  415c47:	push   edx
  415c48:	test   al,0x42
  415c4a:	xor    al,0x1c
  415c4c:	fmul   QWORD PTR [edx+eax*8-0x63]
  415c50:	sub    dh,BYTE PTR [edx+ebp*1]
  415c53:	mov    ds:0x2bc01b81,eax
  415c58:	les    esi,FWORD PTR [ecx-0x7d]
  415c5b:	inc    esi
  415c5c:	test   al,0x28
  415c5e:	mov    ebx,0x5b128f8f
  415c63:	popa   
  415c64:	cmp    dl,BYTE PTR [edx-0x28]
  415c67:	push   ecx
  415c68:	mov    bh,0x9b
  415c6a:	inc    ax
  415c6c:	pop    ss
  415c6d:	retf   0x6b85
  415c70:	inc    eax
  415c71:	call   0x1eaa:0xfd0d0eb1
  415c78:	in     al,dx
  415c79:	fisttp QWORD PTR ds:0x457fb31
  415c7f:	in     eax,0x84
  415c81:	(bad)  
  415c83:	rcr    BYTE PTR [edi-0x7d],0xe9
  415c87:	jnp    0x415d00
  415c89:	addr16 out dx,eax
  415c8b:	pop    ebp
  415c8c:	mov    ch,0x6
  415c8e:	inc    esi
  415c8f:	es inc ecx
  415c91:	xchg   BYTE PTR [eax],bh
  415c93:	ins    DWORD PTR es:[edi],dx
  415c94:	sub    cl,BYTE PTR [esi+0x3645b04b]
  415c9a:	ins    DWORD PTR es:[edi],dx
  415c9b:	call   0xfc11:0x3a886585
  415ca2:	pop    eax
  415ca3:	dec    edi
  415ca4:	sbb    al,0xb0
  415ca6:	dec    eax
  415ca7:	addr16 test al,0x6f
  415caa:	pop    edx
  415cab:	xchg   ecx,eax
  415cac:	cld    
  415cad:	add    al,0x3
  415caf:	ds xchg esi,eax
  415cb1:	sub    eax,DWORD PTR [ebp+0x7ef4aff7]
  415cb7:	xchg   esi,eax
  415cb8:	stos   DWORD PTR es:[edi],eax
  415cb9:	dec    ecx
  415cba:	leave  
  415cbb:	aam    0xec
  415cbd:	jle    0x415cd1
  415cbf:	xchg   DWORD PTR [ebx+0x1c66943e],esp
  415cc5:	and    al,0x69
  415cc7:	mov    ds:0x669bbea,eax
  415ccc:	mov    ebp,0x7d0dd4c1
  415cd1:	aaa    
  415cd2:	push   0x25
  415cd4:	inc    ecx
  415cd5:	outs   dx,BYTE PTR ds:[esi]
  415cd6:	cmp    esp,DWORD PTR [edx-0x65affce9]
  415cdc:	inc    esp
  415cdd:	popa   
  415cde:	mov    al,0x4e
  415ce0:	mov    cl,0xb1
  415ce2:	jne    0x415d4c
  415ce4:	sbb    eax,0x2889832a
  415ce9:	mov    al,0x25
  415ceb:	xor    al,0x83
  415ced:	add    cl,cl
  415cef:	outs   dx,DWORD PTR ds:[esi]
  415cf0:	sub    ebp,DWORD PTR [ebp-0x65665361]
  415cf6:	(bad)  
  415cf8:	xor    ecx,DWORD PTR [ebx]
  415cfa:	rcl    DWORD PTR [ebp-0x6c],0x60
  415cfe:	outs   dx,DWORD PTR ds:[esi]
  415cff:	cs mov al,0x5f
  415d02:	xor    al,0x5
  415d04:	addr16 push esi
  415d06:	lea    edx,[ecx-0x9]
  415d09:	add    eax,0xd7308423
  415d0e:	jg     0x415cce
  415d10:	xchg   BYTE PTR [eax],bl
  415d12:	jnp    0x415d0a
  415d14:	pop    ecx
  415d15:	inc    ebp
  415d16:	rcr    BYTE PTR ds:0x133cd75a,1
  415d1c:	sbb    bh,dl
  415d1e:	jle    0x415d64
  415d20:	(bad)  
  415d22:	neg    DWORD PTR [edx]
  415d24:	inc    ebp
  415d25:	push   es
  415d26:	mov    edx,0x953a5116
  415d2b:	jg     0x415d1a
  415d2d:	lods   al,BYTE PTR ds:[esi]
  415d2e:	aam    0x3c
  415d30:	int3   
  415d31:	jmp    0x415cea
  415d33:	leave  
  415d34:	mov    esp,0x4e50615a
  415d39:	sti    
  415d3a:	mov    ds:0x3361d49b,al
  415d3f:	xchg   ebp,eax
  415d40:	push   es
  415d41:	(bad)  
  415d42:	data16 mov dl,BYTE PTR [edi]
  415d45:	add    ebp,DWORD PTR [ebx]
  415d47:	loop   0x415d1f
  415d49:	or     eax,0x52d8e33e
  415d4e:	stos   BYTE PTR es:[edi],al
  415d4f:	jmp    0x415d63
  415d51:	cli    
  415d52:	mov    ebx,0x79275e03
  415d57:	sbb    DWORD PTR [edx],0x7a
  415d5a:	mov    fs,WORD PTR [ebx-0x346c56ee]
  415d60:	mov    bl,0xc8
  415d62:	inc    esp
  415d63:	into   
  415d64:	pop    ss
  415d65:	sti    
  415d66:	je     0x415dd3
  415d68:	outs   dx,BYTE PTR ds:[esi]
  415d69:	mov    dl,0x70
  415d6b:	sar    ebp,cl
  415d6d:	sti    
  415d6e:	std    
  415d6f:	adc    eax,0x7bedfb16
  415d74:	push   esi
  415d75:	(bad)  
  415d76:	and    eax,0x332d74b1
  415d7b:	cmp    ecx,DWORD PTR [edx-0xd5a914c]
  415d81:	aad    0xb
  415d83:	scas   al,BYTE PTR es:[edi]
  415d84:	and    DWORD PTR [ebp-0x67],edx
  415d87:	imul   edx,ebx,0x927a0918
  415d8d:	int3   
  415d8e:	cmp    DWORD PTR [ebp-0x54],ecx
  415d91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d92:	dec    esi
  415d93:	jle    0x415e11
  415d95:	jnp    0x415dd3
  415d97:	(bad)  
  415d98:	out    dx,al
  415d99:	sub    dl,BYTE PTR [eax+0x1198e5c1]
  415d9f:	test   eax,0x103a7c35
  415da4:	lods   eax,DWORD PTR ds:[esi]
  415da5:	dec    ecx
  415da6:	cs push 0x952a7212
  415dac:	jne    0x415d88
  415dae:	jns    0x415d96
  415db0:	jmp    0xf7448790
  415db5:	mov    al,ds:0x56fbcbbb
  415dba:	std    
  415dbb:	aam    0xd8
  415dbd:	push   eax
  415dbe:	hlt    
  415dbf:	out    0x9c,eax
  415dc1:	push   edx
  415dc2:	mov    ?,esp
  415dc4:	test   eax,0x5e275699
  415dc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415dca:	ror    esi,1
  415dcc:	and    ah,bh
  415dce:	xor    DWORD PTR ds:0xab513e3f,edi
  415dd4:	cmp    BYTE PTR [ebx],0xab
  415dd7:	mov    esp,0x94fe28c3
  415ddc:	pop    ds
  415ddd:	inc    eax
  415dde:	xor    BYTE PTR [ebx],dl
  415de0:	adc    eax,0xe6b06230
  415de5:	aaa    
  415de6:	mov    ?,ecx
  415de8:	add    eax,0x320876d0
  415ded:	xor    dl,dh
  415def:	cmp    BYTE PTR [edx],dh
  415df1:	ins    DWORD PTR es:[edi],dx
  415df2:	cmp    BYTE PTR [ecx-0x57],al
  415df5:	fisttp QWORD PTR [edx]
  415df7:	adc    al,0x35
  415df9:	mov    esi,0xf65f3f76
  415dfe:	cmp    ch,BYTE PTR [esi+0x78df530c]
  415e04:	mov    ebx,0x9b842d80
  415e09:	xlat   BYTE PTR ds:[ebx]
  415e0a:	fldcw  WORD PTR [ebx+0x3d7469dd]
  415e10:	cmp    al,0xed
  415e12:	lds    edi,FWORD PTR [ebp-0x536ce373]
  415e18:	cs jns 0x415e51
  415e1b:	pop    esp
  415e1c:	sti    
  415e1d:	lods   al,BYTE PTR ds:[esi]
  415e1e:	dec    ebp
  415e1f:	fisub  DWORD PTR [eax]
  415e21:	inc    DWORD PTR [edx-0x1901266d]
  415e27:	jmp    0xf7759612
  415e2c:	addr16 mov bl,0xf9
  415e2f:	pop    ebp
  415e30:	xlat   BYTE PTR ds:[ebx]
  415e31:	add    BYTE PTR [edx-0x39],dl
  415e34:	call   0x883f:0x94840665
  415e3b:	and    DWORD PTR [edi],0xfffffffe
  415e3e:	in     eax,dx
  415e3f:	push   ebx
  415e40:	pusha  
  415e41:	xchg   edx,eax
  415e42:	cmc    
  415e43:	or     eax,0x68f69ad5
  415e48:	jecxz  0x415eb9
  415e4a:	cmp    BYTE PTR [eax-0x2bfcf7e8],0xa4
  415e51:	xor    BYTE PTR [eax+0x848842f],bh
  415e57:	inc    edx
  415e58:	psubb  mm0,QWORD PTR [esi]
  415e5b:	push   edi
  415e5c:	mov    edi,0x56370e3a
  415e61:	fld    QWORD PTR fs:[edi]
  415e64:	outs   dx,BYTE PTR ds:[esi]
  415e65:	add    ebp,edi
  415e67:	les    eax,FWORD PTR [esi]
  415e69:	or     al,0x13
  415e6b:	or     al,0x23
  415e6d:	or     eax,ecx
  415e6f:	adc    eax,0x1c6b550c
  415e74:	dec    ebx
  415e75:	cmc    
  415e76:	add    eax,0x3c20ffb1
  415e7b:	iret   
  415e7c:	popf   
  415e7d:	imul   edx,DWORD PTR [ebp-0x59],0x9fc6bc89
  415e84:	mov    al,ds:0x1839d179
  415e89:	fstp   QWORD PTR [edi]
  415e8b:	mov    cs,WORD PTR [ebp+0x5e83a07b]
  415e91:	jno    0x415eee
  415e93:	outs   dx,DWORD PTR ds:[esi]
  415e94:	dec    edx
  415e95:	pop    ds
  415e96:	and    BYTE PTR [ecx+ebx*4],ah
  415e99:	pop    ds
  415e9a:	inc    eax
  415e9b:	push   esi
  415e9c:	js     0x415e8a
  415e9e:	nop
  415e9f:	jecxz  0x415e8b
  415ea1:	call   0xcc684172
  415ea6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ea7:	xchg   ebx,eax
  415ea8:	dec    ebp
  415ea9:	das    
  415eaa:	outs   dx,BYTE PTR ds:[esi]
  415eab:	mov    ah,0x2
  415ead:	xor    eax,0x1c630365
  415eb2:	rcr    DWORD PTR [ecx],0xe9
  415eb5:	jp     0x415e7a
  415eb7:	cmc    
  415eb8:	stos   DWORD PTR es:[edi],eax
  415eb9:	cdq    
  415eba:	dec    ecx
  415ebb:	ss aas 
  415ebd:	mov    bh,0x6f
  415ebf:	rol    dh,1
  415ec1:	shl    edi,cl
  415ec3:	or     BYTE PTR ds:0x36aec64f,dh
  415ec9:	inc    edi
  415eca:	push   ebx
  415ecb:	mov    edx,0xcfae93a6
  415ed0:	imul   edx,DWORD PTR ds:0x4664168d,0xc251a0b4
  415eda:	das    
  415edb:	inc    esi
  415edc:	or     eax,0xaac3b3de
  415ee1:	test   ebx,0x349dad30
  415ee7:	xor    eax,0x96ebebf6
  415eec:	push   edi
  415eed:	push   edi
  415eee:	shl    ch,0xab
  415ef1:	dec    ebx
  415ef2:	mov    dx,0xde9d
  415ef6:	mov    ds:0xda3bd02b,eax
  415efb:	ja     0x4167d7
  415f01:	jmp    0x415f09
  415f06:	mov    edi,DWORD PTR [ebp-0x2c]
  415f09:	mov    DWORD PTR [ebp-0x20],0x1aa3
  415f10:	mov    DWORD PTR [ebp-0x24],0x52d
  415f17:	mov    DWORD PTR [ebp-0x28],0x226c
  415f1e:	jmp    0x416327
  415f23:	dec    eax
  415f24:	pop    edi
  415f25:	xor    ch,BYTE PTR [esi-0x48b34bc6]
  415f2b:	inc    edx
  415f2c:	imul   edx,edi,0x90816ee3
  415f32:	nop
  415f33:	ins    BYTE PTR es:[edi],dx
  415f34:	(bad)  
  415f35:	sar    BYTE PTR [esi-0x41413b72],0x58
  415f3c:	out    0x4,al
  415f3e:	ret    0x4c7e
  415f41:	das    
  415f42:	sub    DWORD PTR [ebp+0x22120cfb],ecx
  415f48:	arpl   WORD PTR [eax],dx
  415f4a:	lods   al,BYTE PTR ds:[esi]
  415f4b:	sti    
  415f4c:	dec    DWORD PTR [ebp-0x6c]
  415f4f:	jecxz  0x415f53
  415f51:	xchg   DWORD PTR [ecx],esi
  415f53:	das    
  415f54:	out    dx,al
  415f55:	inc    edi
  415f56:	cmp    BYTE PTR [esi],dh
  415f58:	test   BYTE PTR [edx],0xae
  415f5b:	mov    esp,edx
  415f5d:	inc    edx
  415f5e:	and    eax,0xfeedeb31
  415f63:	inc    ebp
  415f64:	outs   dx,DWORD PTR ds:[esi]
  415f65:	mov    esi,0xdf04cbff
  415f6a:	clc    
  415f6b:	jbe    0x415f62
  415f6d:	sub    al,0xd8
  415f6f:	int3   
  415f70:	dec    edx
  415f71:	add    al,0x24
  415f73:	sub    DWORD PTR [edx],0xc215d3a4
  415f79:	rcl    BYTE PTR [edi],cl
  415f7b:	inc    esp
  415f7c:	test   DWORD PTR [ebx-0x12],ebp
  415f7f:	pop    es
  415f80:	out    0xb9,eax
  415f82:	ficom  DWORD PTR ds:0xa776024e
  415f88:	call   0xf7f2:0x2171aca
  415f8f:	jmp    0xb8bdaba4
  415f94:	jo     0x415fa8
  415f96:	or     al,0x73
  415f98:	mov    ebx,esp
  415f9a:	xor    bh,BYTE PTR [edi+0xf2892b4]
  415fa0:	adc    eax,eax
  415fa2:	jns    0x415fe1
  415fa4:	xor    DWORD PTR [ecx-0x596e4708],0x63335c14
  415fae:	sbb    eax,0x7ea0ff28
  415fb3:	lods   al,BYTE PTR ds:[esi]
  415fb4:	mov    ebp,0xf7d9d9b3
  415fb9:	mov    edi,0xedc15efd
  415fbe:	popa   
  415fbf:	fisubr WORD PTR [edi]
  415fc1:	dec    ebp
  415fc2:	adc    esp,eax
  415fc4:	(bad)  
  415fc5:	jns    0x415f93
  415fc7:	in     eax,dx
  415fc8:	dec    ebx
  415fc9:	xchg   edx,eax
  415fca:	push   esi
  415fcb:	xchg   BYTE PTR [esi],dh
  415fcd:	push   eax
  415fce:	xor    ebp,DWORD PTR [edi+ecx*2+0x1e]
  415fd2:	dec    edi
  415fd3:	mov    ah,0x7d
  415fd5:	fs retf 0xa347
  415fd9:	add    al,0xf3
  415fdb:	call   0xa4e21224
  415fe0:	das    
  415fe1:	lahf   
  415fe2:	pop    ebp
  415fe3:	cdq    
  415fe4:	cld    
  415fe5:	fild   WORD PTR [ecx+edx*1-0x23]
  415fe9:	push   ecx
  415fea:	loopne 0x416013
  415fec:	mov    ebx,0x4c6daeba
  415ff1:	dec    esi
  415ff2:	rcr    DWORD PTR [edi+0x5b83832f],cl
  415ff8:	call   0xaf6f9301
  415ffd:	jp     0x415f94
  415fff:	pop    ecx
  416000:	add    esp,esp
  416002:	adc    BYTE PTR [ebx],dl
  416004:	pop    eax
  416005:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416006:	or     esp,DWORD PTR [edi+ebp*2]
  416009:	push   0x55
  41600b:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41600d:	jbe    0x416017
  41600f:	xchg   esi,eax
  416010:	push   ss
  416011:	ret    0xfa03
  416014:	lock outs dx,BYTE PTR ds:[esi]
  416016:	mov    ah,0x53
  416018:	sub    BYTE PTR [edi],al
  41601a:	mov    ds:0xe42edea3,eax
  41601f:	mov    eax,ds:0x59b80637
  416024:	call   0x8e5:0xb3522dda
  41602b:	shr    BYTE PTR [edi-0x5a],0xcc
  41602f:	inc    edi
  416030:	test   al,0xfc
  416032:	and    bl,BYTE PTR [edx-0x45]
  416035:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416036:	je     0x41608e
  416038:	bound  eax,QWORD PTR [ebx+0x6856375f]
  41603e:	push   cs
  41603f:	popf   
  416040:	inc    esi
  416041:	xor    al,0xf4
  416043:	daa    
  416044:	jmp    0x41609d
  416046:	mov    bh,0xdf
  416048:	jmp    0x416041
  41604a:	stos   BYTE PTR es:[edi],al
  41604b:	adc    dl,dh
  41604d:	ffree  st(4)
  41604f:	out    dx,eax
  416050:	dec    ebp
  416051:	bound  esi,QWORD PTR [ebx]
  416053:	aam    0x2
  416055:	shl    BYTE PTR es:[ecx+eiz*4+0x274436a0],1
  41605d:	jns    0x416078
  41605f:	cwde   
  416060:	stc    
  416061:	fcomp  st(7)
  416063:	inc    edi
  416064:	cmp    al,0x6a
  416066:	dec    eax
  416067:	test   al,0x6f
  416069:	inc    edx
  41606a:	add    cl,BYTE PTR [ecx+0x6b]
  41606d:	jbe    0x415ff0
  41606f:	repz jge 0x4160a4
  416072:	push   ss
  416073:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416074:	mov    edx,0x82d8f78d
  416079:	add    edi,DWORD PTR [ebp+0x3f7eaafe]
  41607f:	(bad)  
  416080:	jecxz  0x4160e4
  416082:	icebp  
  416083:	push   edi
  416084:	sbb    dh,BYTE PTR [ebx]
  416086:	sahf   
  416087:	sbb    BYTE PTR [esi],0x20
  41608a:	xor    eax,0xc6ac0774
  41608f:	retf   
  416090:	adc    eax,0xd370704f
  416095:	sbb    bh,al
  416097:	dec    edi
  416098:	push   edi
  416099:	fcomp  st(2)
  41609b:	and    al,0x84
  41609d:	aas    
  41609e:	dec    edx
  41609f:	push   esp
  4160a0:	push   ss
  4160a1:	mov    dh,BYTE PTR [edx]
  4160a3:	clc    
  4160a4:	mov    edx,0x78844300
  4160a9:	daa    
  4160aa:	jmp    0x730e0195
  4160af:	sbb    al,0x4d
  4160b1:	xor    eax,0x57fb76ea
  4160b6:	ins    BYTE PTR es:[edi],dx
  4160b7:	cmc    
  4160b8:	sar    DWORD PTR [ebx],0xfd
  4160bb:	shl    DWORD PTR [edi+0x40b292e3],1
  4160c1:	cwde   
  4160c2:	aad    0xa5
  4160c4:	pusha  
  4160c5:	cs out 0x8,eax
  4160c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160c9:	call   0x462:0x7bc3ef26
  4160d0:	std    
  4160d1:	cdq    
  4160d2:	mov    bh,0x3c
  4160d4:	jnp    0x4160da
  4160d6:	aam    0x99
  4160d8:	or     DWORD PTR [edx],0xfffffff1
  4160db:	das    
  4160dc:	in     al,dx
  4160dd:	stos   DWORD PTR es:[edi],eax
  4160de:	mov    ds:0xa66bc03f,al
  4160e3:	enter  0xd867,0x73
  4160e7:	mov    dh,BYTE PTR [ebx]
  4160e9:	cmp    ah,BYTE PTR [eax+0x18]
  4160ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4160ed:	mov    eax,ds:0xc95ac834
  4160f2:	and    eax,0xc88c9704
  4160f7:	add    al,0x14
  4160f9:	inc    esp
  4160fa:	hlt    
  4160fb:	and    ch,bh
  4160fd:	addr16 push cs
  4160ff:	inc    esi
  416100:	pop    ecx
  416101:	int    0x9
  416103:	bound  esi,QWORD PTR [esi+0x20287ebf]
  416109:	push   esi
  41610a:	in     al,0x3c
  41610c:	adc    al,0xa3
  41610e:	inc    edi
  41610f:	mov    ch,BYTE PTR [esi]
  416111:	jmp    0x4160c0
  416113:	mov    edi,0x41ada53b
  416118:	popa   
  416119:	push   es
  41611a:	fcomp  QWORD PTR [ecx]
  41611c:	in     eax,dx
  41611d:	adc    BYTE PTR [esi+0x1989c64a],al
  416123:	mov    esi,ss
  416125:	push   0xf1a9508e
  41612a:	test   eax,esp
  41612c:	std    
  41612d:	jo     0x4160f7
  41612f:	sbb    esp,DWORD PTR [ecx]
  416131:	sub    eax,0x8edaf42c
  416136:	add    ah,dh
  416138:	fcomp  st(4)
  41613a:	and    eax,0x878a7489
  41613f:	scas   eax,DWORD PTR es:[edi]
  416140:	jl     0x4161be
  416142:	pop    ss
  416143:	rcr    BYTE PTR [ebx+0x60],1
  416146:	bswap  ecx
  416148:	xor    al,dl
  41614a:	xor    BYTE PTR [ecx+0x78527ca4],al
  416150:	inc    BYTE PTR [eax]
  416152:	lods   al,BYTE PTR ds:[esi]
  416153:	and    BYTE PTR [ecx-0x7665e2c1],cl
  416159:	mov    BYTE PTR [ecx+0x3e],dl
  41615c:	das    
  41615d:	aam    0x57
  41615f:	shl    cl,cl
  416161:	add    DWORD PTR [ecx+0x7d],ecx
  416164:	push   edi
  416165:	test   eax,0x4dae08be
  41616a:	sbb    BYTE PTR [edi+ecx*4+0x68],ch
  41616e:	or     eax,0x226e1dae
  416173:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416174:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416175:	lods   al,BYTE PTR ds:[esi]
  416176:	call   0xe5528947
  41617b:	adc    al,0x17
  41617d:	mov    ebp,0x4def67c1
  416182:	push   cs
  416183:	fwait
  416184:	add    eax,0xa080293d
  416189:	add    dl,0xff
  41618c:	lock jle 0x41618d
  41618f:	cmp    al,0x68
  416191:	mov    eax,ds:0xb00e05db
  416196:	xchg   DWORD PTR [eax+0x4b44c176],ebp
  41619c:	mov    bl,0xfb
  41619e:	ret    
  41619f:	dec    ecx
  4161a0:	std    
  4161a1:	jmp    0xf177:0xa1302b7d
  4161a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161a9:	pop    ebx
  4161aa:	jmp    0x41620f
  4161ac:	push   edi
  4161ad:	das    
  4161ae:	xchg   ecx,eax
  4161af:	inc    eax
  4161b0:	mov    al,ds:0x192e8c19
  4161b5:	lock out dx,al
  4161b7:	fnstenv [ebx+0x14]
  4161ba:	xor    eax,0xda8dff4f
  4161bf:	into   
  4161c0:	pop    edi
  4161c1:	adc    DWORD PTR [edx],esi
  4161c3:	mov    esi,0x36112667
  4161c8:	rcl    BYTE PTR [ebp+0x2adc118b],cl
  4161ce:	mov    bh,0x66
  4161d0:	push   esi
  4161d1:	sbb    DWORD PTR [ecx],0xa30dc574
  4161d7:	adc    al,bh
  4161d9:	xor    ecx,DWORD PTR [esi]
  4161db:	cmp    eax,0xe78ec356
  4161e0:	inc    esp
  4161e1:	xchg   BYTE PTR [ecx+0x637f71fa],cl
  4161e7:	sub    BYTE PTR [ebx],al
  4161e9:	inc    ebp
  4161ea:	mov    ebx,0x6e6715b0
  4161ef:	mov    al,0x33
  4161f2:	out    dx,eax
  4161f3:	push   eax
  4161f4:	pusha  
  4161f5:	or     eax,0xb99630bd
  4161fa:	add    al,0xa8
  4161fc:	sub    DWORD PTR [ebp*2-0x3bbc0add],0xee1a828
  416207:	cmp    al,0xe3
  416209:	fdivr  QWORD PTR [ecx-0x1e]
  41620c:	adc    BYTE PTR [edx+0x33],ah
  41620f:	imul   edi,DWORD PTR [esi-0x34],0x3e
  416213:	push   esi
  416214:	gs xor edi,edi
  416217:	add    eax,DWORD PTR [edx+0x16]
  41621a:	mov    BYTE PTR [ebx],0xe4
  41621d:	sbb    BYTE PTR [ecx+0x6997b900],dh
  416223:	sub    BYTE PTR [ebp+0x3e],0x61
  416227:	mov    ecx,0x95c2c749
  41622c:	(bad)  
  41622d:	lock cmp eax,0xf698eea2
  416233:	sub    al,bh
  416235:	dec    ebp
  416236:	ret    
  416237:	dec    edi
  416238:	jmp    0x20bf:0xf4fc865e
  41623f:	shl    BYTE PTR [eax],cl
  416241:	mov    ds:0x81dab5fc,eax
  416246:	add    eax,0x635f5267
  41624b:	push   es
  41624c:	xor    eax,0xc77b61dc
  416251:	inc    edi
  416252:	push   ecx
  416253:	stos   BYTE PTR es:[edi],al
  416254:	rcl    DWORD PTR [ebx],1
  416256:	push   ebp
  416257:	clc    
  416258:	addr16 jl 0x9b6d4b07
  41625f:	jno    0x41620c
  416261:	push   0xffffffdd
  416263:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416264:	or     esp,esi
  416266:	aas    
  416267:	retf   
  416268:	mov    esi,0x5831d63b
  41626d:	fistp  DWORD PTR [eax+0x27]
  416270:	(bad)  
  416271:	imul   esi,DWORD PTR [ecx-0x11],0x37
  416275:	mov    bh,0xd6
  416277:	clc    
  416278:	pop    ebp
  416279:	call   0xf0c8:0x5394404a
  416280:	adc    BYTE PTR [esi-0x4f],dh
  416283:	pop    ss
  416284:	jle    0x4162d0
  416286:	pop    edx
  416287:	push   esp
  416288:	cmp    bl,dl
  41628a:	add    dh,BYTE PTR [ebx+0x7a86fce2]
  416290:	mov    ebx,0xd3b26e44
  416295:	mov    edi,0xb730f7bc
  41629a:	out    0x2e,eax
  41629c:	pop    esp
  41629d:	sbb    BYTE PTR [esi+0x14],al
  4162a0:	pop    ecx
  4162a1:	loope  0x416262
  4162a3:	imul   ebp,DWORD PTR [eax+ebx*8],0xffffffb7
  4162a7:	lahf   
  4162a8:	inc    edi
  4162a9:	adc    BYTE PTR [ecx-0x2b],bh
  4162ac:	xchg   edi,eax
  4162ad:	cmc    
  4162ae:	mov    cl,0x15
  4162b0:	jmp    0xff27:0xad4c8834
  4162b7:	mov    dh,0xe
  4162b9:	pop    eax
  4162ba:	add    eax,0xf15bf667
  4162bf:	sub    DWORD PTR [edx-0x54],esi
  4162c2:	lds    ebp,FWORD PTR [edx-0x1d7081c4]
  4162c8:	mov    edi,0xc5a4543d
  4162cd:	xlat   BYTE PTR ds:[ebx]
  4162ce:	(bad)
  4162d1:	jg     0x41633b
  4162d3:	fist   DWORD PTR [edx]
  4162d5:	call   0x7aa9bef9
  4162da:	and    al,0x1a
  4162dc:	outs   dx,DWORD PTR ds:[esi]
  4162dd:	pop    es
  4162de:	mov    ebp,0xb5e94403
  4162e3:	adc    dl,BYTE PTR [edx+edx*1]
  4162e6:	push   esp
  4162e7:	jbe    0x4162ab
  4162e9:	test   DWORD PTR [esp+eiz*2+0x4643a87c],edi
  4162f0:	push   edi
  4162f1:	xchg   edi,eax
  4162f2:	xchg   DWORD PTR [edi],ebx
  4162f4:	push   0x30ba323
  4162f9:	aad    0x50
  4162fb:	xlat   BYTE PTR ds:[ebx]
  4162fc:	jle    0x41628e
  4162fe:	loop   0x4162d6
  416300:	push   esp
  416301:	out    dx,eax
  416302:	push   edx
  416303:	mov    ds:0xbf7ae73,al
  416308:	les    eax,FWORD PTR [edi+0x3f39502e]
  41630e:	retf   0x3b2b
  416311:	dec    eax
  416312:	fsubr  QWORD PTR [esi]
  416314:	pop    ebx
  416315:	loop   0x4162da
  416317:	add    eax,0x95417f07
  41631c:	jle    0x41631c
  41631e:	and    BYTE PTR [ebx],0x2a
  416321:	call   0xc78d:0x24dcd1b4
  416328:	inc    ebp
  416329:	aam    0x7d
  41632b:	xor    al,0x0
  41632d:	add    BYTE PTR [ebx+0x558bd445],cl
  416333:	fmul   DWORD PTR [ebx-0x4cd223a3]
  416339:	and    al,0x0
  41633b:	add    BYTE PTR [edi],cl
  41633d:	scas   eax,DWORD PTR es:[edi]
  41633e:	ret    0xef35
  416341:	je     0x416343
  416343:	add    BYTE PTR [ebx],dh
  416345:	shl    bh,cl
  416347:	repz mov edx,DWORD PTR [ebp-0x20]
  41634b:	mov    ebx,DWORD PTR [ebp+0x8]
  41634e:	push   0x20
  416350:	and    eax,edx
  416352:	mov    edx,edi
  416354:	sub    edx,eax
  416356:	sub    edx,0x683
  41635c:	mov    DWORD PTR [ebp-0x2c],edx
  41635f:	mov    eax,DWORD PTR [ebp-0x30]
  416362:	mov    edx,DWORD PTR [ebp-0x34]
  416365:	xor    al,dl
  416367:	mov    edx,DWORD PTR [ebp-0x2c]
  41636a:	xor    al,0x58
  41636c:	and    al,0xd8
  41636e:	add    al,BYTE PTR [ebp+0xc]
  416371:	add    al,0x28
  416373:	jmp    0x41677c
  416378:	mov    ebx,0x41d6c237
  41637d:	cmp    edi,DWORD PTR [ebx-0x6192d245]
  416383:	nop
  416384:	mov    ds:0x3c927c6e,eax
  416389:	int3   
  41638a:	sar    BYTE PTR [esi-0x41413b72],0x7f
  416391:	mov    edx,0x7cb6daaf
  416396:	mov    esi,0x979e3f0a
  41639b:	out    0x98,al
  41639d:	sub    ebp,DWORD PTR [ebx]
  41639f:	cs jno 0x41638c
  4163a2:	fsubr  QWORD PTR [ebp+esi*8+0x59af8fb5]
  4163a9:	clc    
  4163aa:	pop    esp
  4163ab:	clc    
  4163ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163ad:	push   0x20
  4163af:	push   ebp
  4163b0:	or     DWORD PTR ss:[edx+0x362e1e9a],eax
  4163b7:	ret    0x8012
  4163ba:	mov    dh,0xc7
  4163bc:	push   0xb8408b65
  4163c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163c2:	bound  edx,QWORD PTR [esp+ebp*8-0x42e23fbe]
  4163c9:	push   edi
  4163ca:	sbb    al,BYTE PTR [edx]
  4163cc:	mov    WORD PTR [esi-0x5b],es
  4163cf:	jae    0x41638b
  4163d1:	out    0xa1,eax
  4163d3:	enter  0x8a29,0x45
  4163d7:	imul   esi,DWORD PTR [edx],0x4287d103
  4163dd:	bound  esi,QWORD PTR [ebp-0x49]
  4163e0:	inc    ebp
  4163e1:	adc    ebp,DWORD PTR ds:0x77c58244
  4163e7:	gs (bad) 
  4163e9:	jne    0x4163c5
  4163eb:	jmp    0x11410619
  4163f0:	(bad)  
  4163f2:	push   cs
  4163f3:	sub    BYTE PTR [ecx+0x3551d313],cl
  4163f9:	xchg   ebx,eax
  4163fa:	sbb    edx,DWORD PTR [ebp+0xad18a19]
  416400:	add    BYTE PTR [ebp+0xf],dl
  416403:	cdq    
  416404:	sbb    DWORD PTR [edx+0x70],ebx
  416407:	mov    ebp,0x5b87cf63
  41640c:	out    dx,eax
  41640d:	cld    
  41640e:	mov    bh,BYTE PTR [eax]
  416410:	bound  edi,QWORD PTR [eax-0x19cab258]
  416416:	add    eax,0x4c4407aa
  41641b:	loopne 0x4163f6
  41641d:	push   0x84002381
  416422:	mov    ch,0xd4
  416424:	mov    al,ds:0x4433581
  416429:	inc    ecx
  41642a:	fsub   QWORD PTR ds:0xe2ce40f3
  416430:	enter  0x9933,0x3
  416434:	xor    dh,al
  416436:	sti    
  416437:	stos   DWORD PTR es:[edi],eax
  416438:	cli    
  416439:	nop
  41643a:	fs addr16 push edx
  41643d:	push   ss
  41643e:	xlat   BYTE PTR ds:[ebx]
  41643f:	bound  esi,QWORD PTR [esi]
  416441:	adc    BYTE PTR [esi],0x23
  416444:	cmc    
  416445:	shl    DWORD PTR [edx+0x50],1
  416448:	(bad)  
  41644a:	ins    BYTE PTR es:[edi],dx
  41644b:	loope  0x41640f
  41644d:	mov    bh,0x67
  41644f:	pop    ss
  416450:	aad    0x89
  416452:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416453:	test   DWORD PTR [edx+0x5ebd959f],esi
  416459:	ror    DWORD PTR ds:0xb25b2e4,1
  41645f:	inc    ecx
  416460:	pop    DWORD PTR [eax+0xc]
  416463:	and    BYTE PTR [edx+0x73],al
  416466:	dec    edi
  416467:	xor    dh,al
  416469:	sub    al,0x7
  41646b:	rcl    DWORD PTR [ebp-0x55bb38a6],cl
  416471:	out    0x6a,eax
  416473:	mov    ecx,0x2b2116de
  416478:	cs pop edi
  41647a:	(bad)  
  41647b:	and    eax,0x57b1df21
  416480:	sbb    al,BYTE PTR [edx-0x7e]
  416483:	mov    ecx,0x192cc74c
  416488:	adc    eax,0xc2c53fe2
  41648d:	or     al,0x85
  41648f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416490:	adc    DWORD PTR [edx+esi*2+0x6b],ebx
  416494:	add    BYTE PTR [edx],bh
  416496:	jl     0x4164ed
  416498:	pop    ebp
  416499:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41649a:	cs jmp 0xfae909ff
  4164a0:	pop    edi
  4164a1:	pusha  
  4164a2:	call   0xac75ff34
  4164a7:	(bad)  
  4164a8:	out    0x17,eax
  4164aa:	jg     0x4164cb
  4164ac:	jmp    0x7700:0xd90ecff0
  4164b3:	pop    edi
  4164b4:	in     al,dx
  4164b5:	mov    dh,0x48
  4164b7:	xor    al,cl
  4164b9:	(bad)
  4164bd:	repz xchg esi,eax
  4164bf:	call   0xa60f:0x7133744e
  4164c6:	jge    0x416458
  4164c8:	test   eax,0xbd8198c
  4164cd:	lahf   
  4164ce:	sub    BYTE PTR [ebp+0x39],0x2b
  4164d2:	cmp    dl,al
  4164d4:	sbb    ebp,DWORD PTR [esp+ebx*4+0x53]
  4164d8:	mov    eax,0xfa60b66e
  4164dd:	dec    ebx
  4164de:	push   eax
  4164df:	mov    al,0xb2
  4164e1:	xchg   edi,eax
  4164e2:	inc    ebp
  4164e3:	fcomp  QWORD PTR [ebx+ecx*8+0x3b]
  4164e7:	push   0x132ada77
  4164ec:	sub    ch,ch
  4164ee:	outs   dx,BYTE PTR ds:[esi]
  4164ef:	stos   DWORD PTR es:[edi],eax
  4164f0:	in     al,dx
  4164f1:	xlat   BYTE PTR ds:[ebx]
  4164f2:	dec    ebx
  4164f3:	xor    BYTE PTR [ebx],cl
  4164f5:	in     al,0xf1
  4164f7:	ffreep st(2)
  4164f9:	dec    cx
  4164fb:	cmp    al,0x15
  4164fd:	push   eax
  4164fe:	push   cs
  4164ff:	pop    ebp
  416500:	xchg   ebp,eax
  416501:	jo     0x416536
  416503:	sub    DWORD PTR [esi+0x6f053215],edx
  416509:	ss ss push ecx
  41650c:	sbb    eax,0x6ff1e476
  416511:	inc    edx
  416512:	dec    ecx
  416513:	ss xchg cl,dh
  416516:	push   esp
  416517:	pop    ss
  416518:	or     ebx,DWORD PTR [eax+ecx*2+0x5e0f8623]
  41651f:	call   0xf9ec:0x266bb6e0
  416526:	cs leave 
  416528:	ror    BYTE PTR [edx],cl
  41652a:	dec    esp
  41652b:	sbb    eax,0xc57fb8d6
  416530:	les    esp,FWORD PTR [edx+0x36b8a2fb]
  416536:	adc    DWORD PTR [ecx+0x21],ebp
  416539:	add    al,0x26
  41653b:	dec    ebx
  41653c:	add    al,0x15
  41653e:	push   ss
  41653f:	mov    DWORD PTR [esi+0x79f58cff],ebp
  416545:	cmp    DWORD PTR [edx+0x73],ecx
  416548:	shl    DWORD PTR [esi],1
  41654a:	not    esp
  41654c:	cmp    dl,BYTE PTR [ecx-0x777826c7]
  416552:	enter  0x537a,0x5e
  416556:	xor    eax,0x8a04721b
  41655b:	outs   dx,DWORD PTR ds:[esi]
  41655c:	or     esp,ecx
  41655e:	xchg   edi,eax
  41655f:	jg     0x41652e
  416561:	mov    dl,0x14
  416563:	ret    
  416564:	fdivrp st(1),st
  416566:	fndisi(8087 only) 
  416568:	jmp    DWORD PTR [esi+0x6a]
  41656b:	dec    ecx
  41656c:	sbb    dh,0x27
  41656f:	mov    ebp,0xb656d042
  416575:	mul    BYTE PTR [eax+0xbd504de]
  41657b:	das    
  41657c:	xor    esp,DWORD PTR [ecx+0x52]
  41657f:	pushf  
  416580:	jmp    0xee21:0x786c2d4
  416587:	sub    bh,BYTE PTR [edx]
  416589:	cmp    al,0xe
  41658b:	sbb    edx,DWORD PTR [ebp-0x1ec9f49]
  416591:	xor    bl,bl
  416593:	mov    DWORD PTR [esi-0x1a],ebx
  416596:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416597:	cmp    eax,0xf8475a53
  41659c:	or     edi,esi
  41659e:	mov    ds:0xbbbe87b3,al
  4165a3:	adc    BYTE PTR [eax+eiz*2-0x47],dh
  4165a7:	test   al,0x51
  4165a9:	dec    eax
  4165aa:	mov    ebx,0xfc13dd91
  4165af:	sbb    al,0xde
  4165b1:	sbb    BYTE PTR [esi-0x1ce3b8a0],dl
  4165b7:	adc    edx,ebp
  4165b9:	icebp  
  4165ba:	pop    edi
  4165bb:	sbb    ecx,esp
  4165bd:	dec    eax
  4165be:	xor    al,0x43
  4165c0:	repnz sub BYTE PTR [edx+0x64],al
  4165c4:	fisttp QWORD PTR [ebx-0x56a476e7]
  4165ca:	and    DWORD PTR [esi-0x8],edx
  4165cd:	mov    DWORD PTR [edi+eax*1],ebx
  4165d0:	and    al,0x7f
  4165d2:	jo     0x4165c9
  4165d4:	sahf   
  4165d5:	mov    edi,0x99f10506
  4165da:	dec    esp
  4165db:	dec    DWORD PTR [ebx]
  4165dd:	sti    
  4165de:	dec    ebx
  4165df:	std    
  4165e0:	daa    
  4165e1:	out    0xea,eax
  4165e3:	jg     0x416574
  4165e5:	xor    DWORD PTR [edx+0x56],0x4583b93c
  4165ec:	in     al,0x59
  4165ee:	retf   
  4165ef:	nop
  4165f0:	lock xchg DWORD PTR [edx],edx
  4165f3:	fld    DWORD PTR [esp+ecx*2]
  4165f6:	or     DWORD PTR [ebx],eax
  4165f8:	hlt    
  4165f9:	pushf  
  4165fa:	in     al,dx
  4165fb:	add    eax,edx
  4165fd:	in     al,0xd9
  4165ff:	cli    
  416600:	cld    
  416601:	mov    es,WORD PTR [edi+0x21]
  416604:	add    al,0x13
  416606:	mov    al,0xe3
  416608:	mov    ds:0x20704ca,eax
  41660d:	mov    BYTE PTR [ebp+0x709244d2],dl
  416613:	(bad)  
  416614:	mov    dl,0xc1
  416616:	adc    eax,0xd3a8c957
  41661b:	test   BYTE PTR [esi],ch
  41661d:	mov    cl,0xa
  41661f:	(bad)  
  416621:	sub    BYTE PTR [esi],dh
  416623:	mov    ?,WORD PTR [edi]
  416625:	jno    0x4165d3
  416627:	mov    al,ds:0xf16ec683
  41662c:	inc    esi
  41662d:	xchg   ecx,eax
  41662e:	in     al,dx
  41662f:	xchg   esi,eax
  416630:	out    0x97,eax
  416632:	cli    
  416633:	repz mov ch,BYTE PTR [edx-0x541e1c06]
  41663a:	mov    ebx,0xf2489583
  41663f:	retf   0xf8d8
  416642:	sbb    eax,0x5bff7f36
  416647:	pop    esi
  416648:	clc    
  416649:	sub    edx,DWORD PTR [esi+0x60bd6cde]
  41664f:	(bad)  
  416650:	ss cs mov eax,0xac301449
  416657:	(bad)  
  416658:	push   eax
  416659:	mov    ch,dh
  41665b:	lea    eax,[ecx]
  41665d:	loope  0x41663f
  41665f:	mul    cl
  416661:	jmp    0x1ad5:0xa508a069
  416668:	or     dh,BYTE PTR [ecx+0x1d151b0d]
  41666e:	int3   
  41666f:	lds    edx,FWORD PTR [esi+0x21c112b]
  416675:	ror    bh,1
  416677:	cld    
  416678:	jmp    0xf41fe376
  41667d:	hlt    
  41667e:	in     eax,0xe2
  416680:	outs   dx,BYTE PTR ds:[esi]
  416681:	sub    al,0x1c
  416683:	or     al,BYTE PTR [eax]
  416685:	jg     0x4166a4
  416687:	loopne 0x416682
  416689:	push   cs
  41668a:	outs   dx,DWORD PTR ds:[esi]
  41668b:	xchg   ecx,eax
  41668c:	mov    edi,0x8d1d48e3
  416691:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416692:	fcmovbe st,st(1)
  416694:	pop    esi
  416695:	cmp    ah,bh
  416697:	lahf   
  416698:	xor    edi,DWORD PTR [ebx+edx*4-0x4a]
  41669c:	jl     0x416705
  41669e:	push   es
  41669f:	jo     0x41662a
  4166a1:	jb     0x416694
  4166a3:	and    edi,esi
  4166a5:	fs dec ebx
  4166a7:	fnstsw WORD PTR [edx-0xf]
  4166aa:	gs push es
  4166ac:	cmc    
  4166ad:	in     eax,0x17
  4166af:	pop    edx
  4166b0:	xor    ah,0xaf
  4166b3:	pop    esp
  4166b4:	loope  0x416661
  4166b6:	or     BYTE PTR [ebx-0x60],ah
  4166b9:	int    0x19
  4166bb:	push   cs
  4166bc:	fcomip st,st(0)
  4166be:	shl    BYTE PTR [edi-0x28d6c7f7],1
  4166c4:	xor    BYTE PTR ss:[ebp-0x1d],dl
  4166c8:	test   al,0xfc
  4166ca:	xchg   ecx,eax
  4166cb:	sub    esp,DWORD PTR [ebx]
  4166cd:	push   esi
  4166ce:	adc    eax,esi
  4166d0:	push   eax
  4166d1:	jmp    0x416727
  4166d3:	stos   BYTE PTR es:[edi],al
  4166d4:	xor    al,ch
  4166d6:	retf   
  4166d7:	fisub  DWORD PTR [ebp-0x6a]
  4166da:	or     BYTE PTR [edi+0x16486321],al
  4166e0:	retf   0x157e
  4166e3:	and    bl,BYTE PTR [esi-0x12]
  4166e6:	lock test edx,ebp
  4166e9:	push   0xe8ae9e
  4166ee:	je     0x416719
  4166f0:	enter  0x87db,0x82
  4166f4:	iret   
  4166f5:	test   eax,0x85b51f61
  4166fa:	mov    bh,BYTE PTR [edi]
  4166fc:	ret    
  4166fd:	pop    ss
  4166fe:	or     al,0x3f
  416701:	js     0x4166f8
  416703:	test   al,0xd2
  416705:	cwde   
  416706:	call   0x1722dec0
  41670b:	sub    dl,BYTE PTR [ebx-0x37e379d0]
  416711:	outs   dx,BYTE PTR ds:[esi]
  416712:	pop    ds
  416713:	mov    ch,0x61
  416715:	or     al,0x35
  416717:	and    edx,DWORD PTR [edi+0x4154eef7]
  41671d:	adc    eax,0xdfee87a2
  416722:	jg     0x416795
  416724:	sub    ch,al
  416726:	cmp    dh,BYTE PTR [ebp-0x31]
  416729:	mov    al,ds:0x188684f5
  41672e:	jmp    0xa7276e3e
  416733:	xor    ebp,ebx
  416735:	cmp    ebx,eax
  416737:	jnp    0x416727
  416739:	ja     0x41674e
  41673b:	fisubr WORD PTR [eax]
  41673d:	pop    esi
  41673e:	dec    esp
  41673f:	or     al,0x2b
  416741:	xchg   ebp,eax
  416742:	xchg   DWORD PTR ds:0x72137f87,ecx
  416748:	dec    ebp
  416749:	add    esp,DWORD PTR [esi-0x13837614]
  41674f:	sar    BYTE PTR ds:0xe614c217,0x2d
  416756:	sbb    al,0xd5
  416758:	and    ecx,DWORD PTR [ecx-0x7f]
  41675b:	xor    al,BYTE PTR gs:[eax-0x19f86c03]
  416762:	jg     0x4167bc
  416764:	adc    BYTE PTR [eax-0x3d],ah
  416767:	stos   DWORD PTR es:[edi],eax
  416768:	shr    DWORD PTR [edi-0x5a04be0e],0x17
  41676f:	mov    cl,ah
  416771:	push   esi
  416772:	sbb    DWORD PTR [esp+edi*8+0x5ca89e92],esi
  416779:	add    DWORD PTR [edi],ebx
  41677b:	push   ds
  41677c:	mov    BYTE PTR [edx+ebx*1],al
  41677f:	mov    eax,DWORD PTR [ebp-0x38]
  416782:	add    eax,DWORD PTR [ebp-0x3c]
  416785:	mov    edx,DWORD PTR [ebp-0x40]
  416788:	xor    eax,edx
  41678a:	mov    edx,DWORD PTR [ebp-0x44]
  41678d:	xor    eax,edx
  41678f:	mov    edx,0x61f7
  416794:	sub    edx,eax
  416796:	mov    eax,DWORD PTR [ebp-0x4]
  416799:	add    edi,edx
  41679b:	mov    edx,DWORD PTR [ebp-0x8]
  41679e:	sub    eax,0x7721
  4167a3:	xor    eax,edx
  4167a5:	mov    edx,DWORD PTR [ebp-0xc]
  4167a8:	xor    eax,edx
  4167aa:	or     eax,0x7bc9
  4167af:	xor    eax,0xfffff0db
  4167b4:	mov    DWORD PTR [ebp-0x2c],edi
  4167b7:	sub    edi,eax
  4167b9:	mov    eax,DWORD PTR [ebp-0x10]
  4167bc:	mov    edx,DWORD PTR [ebp-0x14]
  4167bf:	mov    ebx,DWORD PTR [ebp-0x18]
  4167c2:	xor    eax,edx
  4167c4:	xor    edx,edx
  4167c6:	sub    eax,esi
  4167c8:	div    ebx
  4167ca:	pop    edx
  4167cb:	xor    eax,ecx
  4167cd:	sub    edx,eax
  4167cf:	cmp    edi,edx
  4167d1:	jbe    0x415f06
  4167d7:	pop    edi
  4167d8:	pop    esi
  4167d9:	pop    ebx
  4167da:	leave  
  4167db:	ret    0x8
  4167de:	push   ebp
  4167df:	mov    ebp,esp
  4167e1:	and    esp,0xfffffff8
  4167e4:	sub    esp,0x9c
  4167ea:	push   ebx
  4167eb:	push   esi
  4167ec:	push   edi
  4167ed:	push   DWORD PTR ds:0x4225a4
  4167f3:	lea    eax,[esp+0xa4]
  4167fa:	push   eax
  4167fb:	call   DWORD PTR ds:0x42dfe0
  416801:	push   DWORD PTR [esp+0xa4]
  416808:	push   DWORD PTR ds:0x422590
  41680e:	call   DWORD PTR ds:0x42e250
  416814:	push   eax
  416815:	call   DWORD PTR ds:0x42e2b0
  41681b:	cmp    DWORD PTR ds:0x428585,0x0
  416822:	mov    ecx,0x19be
  416827:	mov    ecx,0x6729
  41682c:	not    ecx
  41682e:	mov    DWORD PTR ds:0x428599,0x315f
  416838:	jmp    0x416882
  41683d:	mov    DWORD PTR ds:0x428505,0x96c
  416847:	cmp    DWORD PTR ds:0x428585,0x0
  41684e:	jbe    0x416866
  416854:	push   0x428177
  416859:	call   DWORD PTR ds:0x42e268
  41685f:	inc    ecx
  416860:	adc    ecx,DWORD PTR ds:0x428595
  416866:	and    DWORD PTR ds:0x4284f9,0x5e58
  416870:	mov    ecx,DWORD PTR ds:0x428459
  416876:	sub    ecx,DWORD PTR ds:0x428531
  41687c:	mov    DWORD PTR ds:0x428459,ecx
  416882:	mov    ecx,DWORD PTR ds:0x422958
  416888:	and    DWORD PTR ds:0x4283a5,0x41d
  416892:	push   0x0
  416894:	and    DWORD PTR ds:0x428595,0x428509
  41689e:	push   DWORD PTR [ecx]
  4168a0:	and    DWORD PTR ds:0x42848d,0x7a21
  4168aa:	call   eax
  4168ac:	mov    esi,0x1ff
  4168b1:	xor    DWORD PTR ds:0x428379,ebx
  4168b7:	mov    DWORD PTR [esp+0x24],0x3992
  4168bf:	mov    DWORD PTR [esp+0xc],0x79a2
  4168c7:	cmp    DWORD PTR ds:0x42844d,0x0
  4168ce:	mov    ecx,0x6401
  4168d3:	mov    DWORD PTR ds:0x428385,0x3a8d
  4168dd:	mov    DWORD PTR ds:0x42848d,0x1a46
  4168e7:	mov    DWORD PTR ds:0x4284ad,edx
  4168ed:	jmp    0x416927
  4168f2:	movzx  eax,BYTE PTR ds:0x42844d
  4168f9:	movzx  eax,WORD PTR ds:0x4284a9
  416900:	cmp    DWORD PTR ds:0x42844d,0x0
  416907:	jge    0x41691f
  41690d:	push   DWORD PTR [ebp-0xc]
  416910:	push   0x3a70
  416915:	call   DWORD PTR ds:0x42e0e4
  41691b:	not    ecx
  41691d:	adc    ecx,ecx
  41691f:	xor    ecx,DWORD PTR ds:0x4285a9
  416925:	or     ecx,ecx
  416927:	mov    eax,DWORD PTR [esp+0xc]
  41692b:	mov    ecx,DWORD PTR [esp+0x24]
  41692f:	or     DWORD PTR ds:0x428365,0x42844d
  416939:	xor    eax,0x1d22
  41693e:	and    DWORD PTR ds:0x428395,0x1749
  416948:	imul   eax,eax,0xffffdeb4
  41694e:	or     DWORD PTR ds:0x42857d,0x428599
  416958:	and    eax,0x43eb
  41695d:	sub    eax,ecx
  41695f:	or     DWORD PTR ds:0x428441,ebx
  416965:	mov    DWORD PTR [esp+0x3c],eax
  416969:	dec    eax
  41696a:	mov    DWORD PTR [esp+0x38],0x3b18
  416972:	mov    DWORD PTR [esp+0x2c],0x6c93
  41697a:	or     eax,DWORD PTR ds:0x4284a5
  416980:	mov    DWORD PTR [esp+0x24],0x418e
  416988:	xor    ecx,ecx
  41698a:	mov    DWORD PTR [esp+0xc],0x5ac3
  416992:	mov    eax,DWORD PTR [esp+0xc]
  416996:	sub    ecx,DWORD PTR ds:0x42848d
  41699c:	mov    ecx,DWORD PTR [esp+0x24]
  4169a0:	sub    ecx,eax
  4169a2:	xor    eax,0x684c
  4169a7:	mov    eax,DWORD PTR [esp+0x2c]
  4169ab:	or     DWORD PTR ds:0x428591,0x4866
  4169b5:	and    ecx,eax
  4169b7:	or     DWORD PTR ds:0x42843d,0x3518
  4169c1:	mov    eax,DWORD PTR [esp+0x38]
  4169c5:	xor    ecx,0x10d6
  4169cb:	sub    ecx,0x782c
  4169d1:	add    DWORD PTR ds:0x428475,0x3d80
  4169db:	imul   ecx,eax
  4169de:	mov    eax,DWORD PTR [esp+0x3c]
  4169e2:	mov    DWORD PTR ds:0x42838d,0x7bdf
  4169ec:	cmp    eax,ecx
  4169ee:	mov    DWORD PTR ds:0x42835d,0x6991
  4169f8:	jne    0x41701a
  4169fe:	mov    DWORD PTR [esp+0x10],0x1
  416a06:	sbb    eax,DWORD PTR ds:0x428381
  416a0c:	mov    DWORD PTR [esp+0x30],0x2f16
  416a14:	mov    DWORD PTR [esp+0x48],0x16f
  416a1c:	jmp    0x416c79
  416a21:	and    DWORD PTR [esp+ebp*1+0x3bb6ac2e],eax
  416a28:	xchg   esp,eax
  416a29:	jmp    0x4169d2
  416a2b:	int    0x90
  416a2d:	mov    ecx,0xccfc120
  416a32:	aam    0xc0
  416a34:	mov    esi,0xbebec235
  416a39:	gs jno 0x416a12
  416a3c:	ret    
  416a3d:	pop    edx
  416a3e:	inc    edi
  416a3f:	xor    ebp,DWORD PTR [edx-0x1d]
  416a42:	imul   esi,ebp,0xae35ae6
  416a48:	mov    ebp,0xa547add0
  416a4d:	jge    0x4169da
  416a4f:	out    dx,eax
  416a50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a51:	push   edi
  416a52:	mov    ds:0x1e1c21fc,eax
  416a57:	rol    DWORD PTR [eax],1
  416a59:	out    0x20,eax
  416a5b:	xor    al,0x7d
  416a5d:	icebp  
  416a5e:	mov    DWORD PTR [edi-0x6e526916],ebp
  416a64:	addr16 bswap eax
  416a67:	inc    edi
  416a68:	dec    eax
  416a69:	ins    BYTE PTR es:[edi],dx
  416a6a:	adc    BYTE PTR fs:[eax-0x26],dh
  416a6e:	daa    
  416a6f:	jge    0x416ad1
  416a71:	loopne 0x416ab9
  416a73:	into   
  416a74:	ds cdq 
  416a76:	outs   dx,DWORD PTR ds:[esi]
  416a77:	pop    ss
  416a78:	lock retf 0x2235
  416a7c:	scas   al,BYTE PTR es:[edi]
  416a7d:	cld    
  416a7e:	pop    esp
  416a7f:	sub    eax,0xb1c9ca56
  416a84:	xchg   esi,eax
  416a85:	jle    0x416a56
  416a87:	pop    ebp
  416a88:	add    ecx,DWORD PTR [esi+0x2eba369e]
  416a8e:	push   edi
  416a8f:	neg    DWORD PTR [ebp+0x7d]
  416a92:	mov    al,ds:0xe2eef2c
  416a97:	add    bl,BYTE PTR [edi+0xd3dc27c]
  416a9d:	jnp    0x416ad9
  416a9f:	dec    ebx
  416aa0:	(bad)  
  416aa1:	jge    0x416a48
  416aa3:	lds    eax,FWORD PTR [ebx]
  416aa5:	bound  ecx,QWORD PTR cs:[edx+0x63]
  416aa9:	lock retf 0x2992
  416aad:	pop    eax
  416aae:	pop    ecx
  416aaf:	inc    ebp
  416ab0:	icebp  
  416ab1:	cs mov edx,0x3bdc968a
  416ab7:	fld    st(7)
  416ab9:	cmp    DWORD PTR [ebp+0x2e],0xffffffc8
  416abd:	data16 test BYTE PTR [edx],ah
  416ac0:	dec    esi
  416ac1:	cld    
  416ac2:	ds sti 
  416ac4:	add    edi,DWORD PTR [ecx+ecx*2+0x74]
  416ac8:	jno    0x416ab6
  416aca:	adc    bh,BYTE PTR [edx]
  416acc:	and    al,ah
  416ace:	mov    esi,0x41dc1895
  416ad3:	mov    DWORD PTR [di+0x42],eax
  416ad7:	popa   
  416ad8:	jno    0x416a88
  416ada:	call   0x3ee1555
  416adf:	scas   al,BYTE PTR es:[edi]
  416ae0:	retf   0xd862
  416ae3:	or     ah,bh
  416ae5:	mov    dl,dl
  416ae7:	pusha  
  416ae8:	mov    al,0xe2
  416aea:	mov    eax,ds:0x66346866
  416aef:	fbstp  TBYTE PTR [edx-0x5f5440da]
  416af5:	or     ecx,DWORD PTR [edi]
  416af7:	add    al,0x5b
  416af9:	in     al,dx
  416afa:	sbb    eax,DWORD PTR [eax-0x56751195]
  416b00:	pusha  
  416b01:	adc    al,0xc
  416b03:	loop   0x416b37
  416b05:	shl    ebx,1
  416b07:	sub    eax,0x72a4e312
  416b0c:	fs scas eax,DWORD PTR es:[edi]
  416b0e:	and    eax,0xf8c73c3
  416b13:	ins    BYTE PTR es:[edi],dx
  416b14:	jmp    0x63c53bdd
  416b19:	(bad)  [ecx-0xa]
  416b1c:	mov    dh,0xba
  416b1e:	mov    eax,0xe7a7dc50
  416b23:	jmp    0x1f1a74d2
  416b28:	js     0x416b18
  416b2a:	rcl    DWORD PTR [ebx-0x22],cl
  416b2d:	fmul   QWORD PTR [ebp+0x31b05a64]
  416b33:	adc    al,0xaa
  416b35:	repz cmp al,BYTE PTR [esi+eiz*4+0x5c]
  416b3a:	fdivr  st(1),st
  416b3c:	lock mov ?,WORD PTR [edi-0x11]
  416b40:	dec    esp
  416b41:	sbb    al,0x54
  416b43:	fimul  DWORD PTR [eax+0x26e25ed0]
  416b49:	mov    ds:0xe01ec66c,eax
  416b4e:	jns    0x416ae3
  416b50:	(bad)  
  416b51:	sti    
  416b52:	aad    0xec
  416b54:	push   0x574a1a1
  416b59:	inc    esi
  416b5a:	or     al,0xee
  416b5c:	sub    BYTE PTR [ebx],cl
  416b5e:	test   ecx,edi
  416b60:	retf   0x52d9
  416b63:	mov    ds:0x1aba2395,al
  416b68:	jecxz  0x416b88
  416b6a:	mov    cl,0x42
  416b6c:	jnp    0x416b2a
  416b6e:	fwait
  416b6f:	repnz and eax,0x96b89525
  416b75:	xor    DWORD PTR [ecx-0x27],edi
  416b78:	clc    
  416b79:	mov    edx,0x48e97d08
  416b7e:	pop    ebp
  416b7f:	mov    ch,0x14
  416b81:	hlt    
  416b82:	arpl   WORD PTR [eax+0x43],cx
  416b85:	(bad)  
  416b86:	int    0xe
  416b88:	mov    ch,0xbb
  416b8a:	in     al,0x5a
  416b8c:	xchg   ecx,eax
  416b8d:	cmp    eax,0x5eece2e1
  416b92:	sub    eax,0x2c025493
  416b97:	stos   DWORD PTR es:[edi],eax
  416b98:	jbe    0x416b7b
  416b9a:	sbb    eax,0x1b63cebf
  416b9f:	jl     0x416b6d
  416ba1:	jmp    0xc6a4:0x2990aeb7
  416ba8:	jmp    0x7e28:0x100ba4e6
  416baf:	push   ecx
  416bb0:	imul   esp,DWORD PTR [ebx],0x16430f39
  416bb6:	loopne 0x416b5f
  416bb8:	mov    esp,0x9c812e7
  416bbd:	jl     0x416b93
  416bbf:	out    dx,al
  416bc0:	mov    ds:0x9a6d307a,al
  416bc5:	or     ch,dl
  416bc7:	loopne 0x416bb9
  416bc9:	ins    DWORD PTR es:[edi],dx
  416bca:	sub    eax,0x70f3bc0d
  416bcf:	xchg   ebp,eax
  416bd0:	jnp    0x416b71
  416bd2:	cmp    edx,DWORD PTR [edx+0x2cfb89bf]
  416bd8:	aad    0x94
  416bda:	lods   al,BYTE PTR ds:[esi]
  416bdb:	push   es
  416bdc:	addr16 hlt 
  416bde:	lock xor eax,ebp
  416be1:	cmp    BYTE PTR [edx+0x29fe0072],ah
  416be7:	cmc    
  416be8:	or     eax,0x4822ed98
  416bed:	imul   BYTE PTR [edi-0x1b]
  416bf0:	cmp    DWORD PTR [ebp+0x487d3c28],ebp
  416bf6:	pop    ebp
  416bf7:	pop    esp
  416bf8:	mov    bl,0xdb
  416bfa:	(bad)  
  416bfb:	loopne 0x416c0b
  416bfd:	call   0x725:0x2e14b6b6
  416c04:	sub    DWORD PTR [eax+0x43901039],ecx
  416c0a:	out    0x4b,al
  416c0c:	fild   QWORD PTR [edi-0x39]
  416c0f:	(bad)  
  416c10:	(bad)  [ebp+0x3eac8bfe]
  416c16:	dec    eax
  416c17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c18:	pushf  
  416c19:	sahf   
  416c1a:	sub    DWORD PTR ds:0xaa26d4ef,0xc3ca4a7d
  416c24:	inc    ecx
  416c25:	test   eax,0x2ae59f8a
  416c2a:	mov    ss,WORD PTR [ecx+0x6c]
  416c2d:	imul   edx,DWORD PTR [ebp-0x281557ef],0x52
  416c34:	sti    
  416c35:	fs mov esi,0xc3380380
  416c3b:	cmp    ebx,esp
  416c3d:	test   BYTE PTR [edi+0x62],0x4c
  416c41:	bound  edi,QWORD PTR [edx]
  416c43:	int    0x8f
  416c45:	es call 0xbc49:0xe7df822a
  416c4d:	adc    BYTE PTR [eax-0x57],bh
  416c50:	rcr    BYTE PTR [ebp-0x309153f3],1
  416c56:	cwde   
  416c57:	push   edx
  416c58:	mov    BYTE PTR [edi-0x403dc990],ah
  416c5e:	pop    ds
  416c5f:	xchg   DWORD PTR [edx+0x1d],ebp
  416c62:	retf   0x6f56
  416c65:	ins    BYTE PTR es:[edi],dx
  416c66:	lods   al,BYTE PTR ds:[esi]
  416c67:	mov    esp,edi
  416c69:	pop    ss
  416c6a:	adc    eax,0xadead24
  416c6f:	dec    edi
  416c70:	aas    
  416c71:	fild   DWORD PTR [esi-0x185c9066]
  416c77:	pop    edi
  416c78:	pop    ds
  416c79:	mov    DWORD PTR [esp+0x50],0x30c5
  416c81:	or     ecx,ecx
  416c83:	push   DWORD PTR ds:0xe5bfd6f1
  416c89:	not    eax
  416c8b:	mov    DWORD PTR [esp+0x8c],0x4ebc
  416c96:	mov    DWORD PTR [esp+0x98],0x76
  416ca1:	adc    ecx,DWORD PTR ds:0x428461
  416ca7:	mov    DWORD PTR [esp+0x40],0x556d
  416caf:	mov    DWORD PTR [esp+0x3c],0x63d5
  416cb7:	dec    eax
  416cb8:	mov    DWORD PTR [esp+0x30],0x169
  416cc0:	inc    ecx
  416cc1:	mov    DWORD PTR [esp+0x28],0x101b
  416cc9:	mov    DWORD PTR [esp+0x10],0x6bec
  416cd1:	mov    eax,DWORD PTR [esp+0x10]
  416cd5:	mov    ecx,DWORD PTR [esp+0x28]
  416cd9:	sbb    DWORD PTR ds:0x428469,0x35b0
  416ce3:	imul   eax,ecx
  416ce6:	sub    DWORD PTR ds:0x428521,edx
  416cec:	or     eax,0x7f7d
  416cf1:	xor    eax,0xcf336131
  416cf6:	mov    DWORD PTR ds:0x428505,0x5640
  416d00:	push   DWORD PTR [eax]
  416d02:	cmp    DWORD PTR ds:0x428389,0x0
  416d09:	mov    DWORD PTR ds:0x428371,edi
  416d0f:	mov    DWORD PTR ds:0x428475,0x594e
  416d19:	mov    ecx,0x35fb
  416d1e:	mov    DWORD PTR ds:0x42852d,0x3932
  416d28:	jmp    0x416e08
  416d2d:	mov    DWORD PTR ds:0x428449,0xa9d
  416d37:	cmp    DWORD PTR ds:0x428389,0x0
  416d3e:	jg     0x416d5d
  416d44:	push   0x46ad
  416d49:	call   DWORD PTR ds:0x42e26c
  416d4f:	and    DWORD PTR ds:0x428591,0x42839d
  416d59:	adc    ecx,ecx
  416d5b:	xor    ecx,ecx
  416d5d:	and    ecx,0x3418
  416d63:	and    ecx,0x2934
  416d69:	or     ecx,ecx
  416d6b:	movzx  ecx,BYTE PTR ds:0x428395
  416d72:	adc    DWORD PTR ds:0x428469,ecx
  416d78:	cmp    DWORD PTR ds:0x428585,0x0
  416d7f:	mov    DWORD PTR ds:0x4285a9,edi
  416d85:	mov    DWORD PTR ds:0x4285a9,ebx
  416d8b:	mov    DWORD PTR ds:0x42843d,0x662b
  416d95:	mov    DWORD PTR ds:0x428591,0x653a
  416d9f:	jmp    0x416e08
  416da4:	mov    DWORD PTR ds:0x428385,ebx
  416daa:	cmp    DWORD PTR ds:0x428585,0x0
  416db1:	jg     0x416ded
  416db7:	push   0x2fcf
  416dbc:	push   0x42820b
  416dc1:	call   DWORD PTR ds:0x42e270
  416dc7:	mov    ecx,DWORD PTR ds:0x428561
  416dcd:	mov    ecx,DWORD PTR [ecx]
  416dcf:	adc    DWORD PTR ds:0x42859d,ecx
  416dd5:	sbb    ecx,0x197c
  416ddb:	mov    ecx,DWORD PTR ds:0x428581
  416de1:	and    DWORD PTR ds:0x428491,ecx
  416de7:	sub    ecx,0x1b1e
  416ded:	sub    ecx,DWORD PTR ds:0x428389
  416df3:	add    DWORD PTR ds:0x42836d,0x6bb0
  416dfd:	add    DWORD PTR ds:0x428399,edi
  416e03:	adc    eax,0x3de3
  416e08:	mov    eax,DWORD PTR [esp+0x34]
  416e0c:	add    eax,0x75d9
  416e11:	push   0xd
  416e13:	add    DWORD PTR ds:0x4284b1,ebx
  416e19:	pop    ecx
  416e1a:	xor    edx,edx
  416e1c:	div    ecx
  416e1e:	mov    ecx,DWORD PTR [esp+0x40]
  416e22:	xor    edx,edx
  416e24:	or     eax,ecx
  416e26:	sbb    DWORD PTR ds:0x428381,edi
  416e2c:	mov    ecx,DWORD PTR [esp+0x44]
  416e30:	inc    DWORD PTR ds:0x428461
  416e36:	or     eax,ecx
  416e38:	or     ecx,0x12fe
  416e3e:	mov    ecx,DWORD PTR [esp+0x9c]
  416e45:	div    ecx
  416e47:	xor    edx,edx
  416e49:	cmp    DWORD PTR ds:0x42857d,0x0
  416e50:	movzx  ecx,WORD PTR ds:0x428575
  416e57:	mov    ecx,DWORD PTR ds:0x4284b1
  416e5d:	jmp    0x416ec3
  416e62:	mov    DWORD PTR ds:0x428481,0x6ae9
  416e6c:	cmp    DWORD PTR ds:0x42857d,0x0
  416e73:	jg     0x416ea3
  416e79:	push   0x1
  416e7b:	call   DWORD PTR ds:0x42e0e8
  416e81:	xor    DWORD PTR ds:0x428441,edi
  416e87:	and    DWORD PTR ds:0x4283a1,0x7db2
  416e91:	mov    ecx,DWORD PTR ds:0x428471
  416e97:	or     DWORD PTR ds:0x4285a5,ecx
  416e9d:	add    DWORD PTR ds:0x428511,ebx
  416ea3:	or     DWORD PTR ds:0x428501,0xb88
  416ead:	adc    ecx,DWORD PTR ds:0x428395
  416eb3:	sub    DWORD PTR ds:0x4284f9,0x13f0
  416ebd:	sbb    DWORD PTR ds:0x4283a5,edx
  416ec3:	xor    eax,0x680da048
  416ec8:	cmp    DWORD PTR ds:0x42843d,0x0
  416ecf:	mov    DWORD PTR ds:0x428361,0x5921
  416ed9:	mov    DWORD PTR ds:0x428511,edi
  416edf:	jmp    0x416f57
  416ee4:	mov    ecx,0x423c
  416ee9:	cmp    DWORD PTR ds:0x42843d,0x0
  416ef0:	jne    0x416f33
  416ef6:	push   0x145c
  416efb:	push   0x428381
  416f00:	call   DWORD PTR ds:0x42e274
  416f06:	adc    DWORD PTR ds:0x428501,0x2a49
  416f10:	and    DWORD PTR ds:0x428591,0x95c
  416f1a:	movzx  ecx,BYTE PTR ds:0x42848d
  416f21:	adc    DWORD PTR ds:0x4284a5,ecx
  416f27:	mov    ecx,DWORD PTR ds:0x428575
  416f2d:	adc    DWORD PTR ds:0x428451,ecx
  416f33:	or     DWORD PTR ds:0x428391,0x75b4
  416f3d:	adc    DWORD PTR ds:0x4284f5,edx
  416f43:	or     DWORD PTR ds:0x42852d,0x469c
  416f4d:	or     DWORD PTR ds:0x428489,0x5212
  416f57:	push   DWORD PTR [eax]
  416f59:	adc    DWORD PTR ds:0x428491,0x3264
  416f63:	mov    eax,DWORD PTR [esp+0x94]
  416f6a:	mov    ecx,DWORD PTR ds:0x428451
  416f70:	or     ecx,DWORD PTR ds:0x428531
  416f76:	mov    DWORD PTR ds:0x428451,ecx
  416f7c:	mov    ecx,DWORD PTR [esp+0x5c]
  416f80:	push   DWORD PTR ds:0x4facd31
  416f86:	sbb    DWORD PTR ds:0x428585,0x428581
  416f90:	add    eax,0xb4a
  416f95:	push   DWORD PTR ds:0x1e6ebff7
  416f9b:	imul   eax,ecx
  416f9e:	push   DWORD PTR [eax-0x3f17647c]
  416fa4:	add    DWORD PTR ds:0x4283a5,0x6df5
  416fae:	mov    eax,DWORD PTR [esp+0x60]
  416fb2:	mov    ecx,DWORD PTR [esp+0x48]
  416fb6:	sub    DWORD PTR ds:0x428435,0x428475
  416fc0:	xor    eax,ecx
  416fc2:	sub    DWORD PTR ds:0x428581,0x5fb7
  416fcc:	mov    ecx,DWORD PTR [esp+0x28]
  416fd0:	or     DWORD PTR ds:0x428379,0x42835d
  416fda:	div    ecx
  416fdc:	sbb    DWORD PTR ds:0x42835d,0x428395
  416fe6:	and    eax,0x100
  416feb:	xor    DWORD PTR ds:0x428489,0x79f1
  416ff5:	or     eax,0x290
  416ffa:	add    DWORD PTR ds:0x42839d,0x42835d
  417004:	push   DWORD PTR [eax-0x494a7887]
  41700a:	xor    DWORD PTR ds:0x428455,0x428525
  417014:	call   DWORD PTR ds:0x42e124
  41701a:	or     DWORD PTR ds:0x428501,0x74bf
  417024:	dec    esi
  417025:	mov    DWORD PTR ds:0x428481,0x5180
  41702f:	jne    0x4168b1
  417035:	mov    DWORD PTR [esp+0x18],0xcb79b576
  41703d:	cmp    DWORD PTR ds:0x428505,0x0
  417044:	not    DWORD PTR ds:0x428449
  41704a:	mov    DWORD PTR ds:0x42850d,0x4717
  417054:	jmp    0x4170cc
  417059:	movzx  esi,BYTE PTR ds:0x42838d
  417060:	cmp    DWORD PTR ds:0x428505,0x0
  417067:	jae    0x41709b
  41706d:	push   0x4281e5
  417072:	push   0x6423
  417077:	push   DWORD PTR [ebp-0xc]
  41707a:	push   DWORD PTR [ebp-0x1c]
  41707d:	push   DWORD PTR [ebp-0x28]
  417080:	push   0x1c3a
  417085:	call   DWORD PTR ds:0x42e278
  41708b:	or     DWORD PTR ds:0x428369,edi
  417091:	xor    DWORD PTR ds:0x428489,0x58f
  41709b:	sbb    DWORD PTR ds:0x42849d,ecx
  4170a1:	sub    DWORD PTR ds:0x428591,0x607b
  4170ab:	mov    esi,DWORD PTR ds:0x42840d
  4170b1:	mov    esi,DWORD PTR [esi]
  4170b3:	or     DWORD PTR ds:0x4285b1,esi
  4170b9:	movzx  esi,BYTE PTR ds:0x428491
  4170c0:	add    esi,DWORD PTR ds:0x428531
  4170c6:	mov    DWORD PTR ds:0x428491,esi
  4170cc:	mov    esi,0x9c2b8ae8
  4170d1:	sub    DWORD PTR ds:0x42839d,0x428471
  4170db:	mov    DWORD PTR [esp+0x1c],esi
  4170df:	mov    DWORD PTR [esp+0x70],0xcb79b572
  4170e7:	mov    DWORD PTR [esp+0x74],esi
  4170eb:	call   0x408bfd
  4170f0:	sbb    edi,edx
  4170f2:	jmp    0x41734f
  4170f7:	add    edi,DWORD PTR [esi]
  4170f9:	popf   
  4170fa:	jmp    0x4170a0
  4170fc:	sub    al,0x8c
  4170fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170ff:	scas   eax,DWORD PTR es:[di]
  417101:	xchg   esi,eax
  417102:	jecxz  0x41709b
  417104:	push   ss
  417105:	push   0xc0d884d1
  41710a:	mov    esi,0xbebec235
  41710f:	in     eax,dx
  417110:	sbb    DWORD PTR [ebp-0x27],ebx
  417113:	mov    ecx,0xb5989c58
  417118:	(bad)  
  417119:	push   0xffffffaa
  41711b:	in     al,0x99
  41711d:	push   ds
  41711e:	not    BYTE PTR [ebx+0x30574cda]
  417124:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417125:	fcmovnbe st,st(4)
  417127:	push   eax
  417128:	loopne 0x4170b3
  41712a:	mov    edi,0x1a1681b2
  41712f:	cld    
  417130:	add    DWORD PTR [edi],eax
  417132:	in     al,dx
  417133:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417134:	jecxz  0x417145
  417136:	and    cl,bh
  417138:	fnstcw WORD PTR [eax+0x1dfb4381]
  41713e:	cmp    BYTE PTR [edx+esi*8-0x699945c2],ch
  417145:	sub    ebx,DWORD PTR [edi-0x34]
  417148:	loope  0x4170fe
  41714a:	jnp    0x417191
  41714c:	dec    ebp
  41714d:	jbe    0x4171a1
  41714f:	xchg   edi,eax
  417150:	fnstsw WORD PTR [esi+0x7d]
  417153:	jb     0x417156
  417155:	jno    0x4170ec
  417157:	jecxz  0x41717b
  417159:	lahf   
  41715a:	cwde   
  41715b:	and    al,0x31
  41715d:	xchg   esi,eax
  41715e:	mov    BYTE PTR [eax+ebx*8+0x7163bf7f],al
  417165:	daa    
  417166:	sub    eax,0xe87c91a1
  41716b:	and    bh,BYTE PTR [ebx]
  41716d:	(bad)  
  41716e:	aas    
  41716f:	mov    DWORD PTR [ecx*1-0xb1fe2dd],ebx
  417176:	out    0xd4,al
  417178:	daa    
  417179:	adc    DWORD PTR [ebp+0xd],edx
  41717c:	ret    0x6807
  41717f:	stos   BYTE PTR es:[edi],al
  417180:	jbe    0x41717e
  417182:	mov    eax,DWORD PTR [edx]
  417184:	pop    es
  417185:	pop    ds
  417186:	sahf   
  417187:	iret   
  417188:	xchg   BYTE PTR [ebx-0xa],bl
  41718b:	mov    DWORD PTR [edi-0x39],ecx
  41718e:	repnz call 0x7ec1:0xdf2b3e20
  417196:	fwait
  417197:	cmc    
  417198:	xchg   ebp,eax
  417199:	pop    esp
  41719a:	hlt    
  41719b:	repnz xchg edx,eax
  41719d:	mov    dl,0xee
  41719f:	xor    BYTE PTR [esi+0x251d1157],dl
  4171a5:	mov    edx,0x71682883
  4171aa:	xlat   BYTE PTR ds:[ebx]
  4171ab:	ins    BYTE PTR es:[edi],dx
  4171ac:	push   edx
  4171ad:	sbb    BYTE PTR [edx+0x32],bh
  4171b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4171b1:	pop    edx
  4171b2:	test   bh,bl
  4171b4:	lea    esp,[eax+0x50]
  4171b7:	gs pop ebp
  4171b9:	push   esi
  4171ba:	xor    DWORD PTR [esi],edx
  4171bc:	lea    ebp,[esi+0x70]
  4171bf:	loopne 0x4171cd
  4171c1:	popa   
  4171c2:	les    esp,FWORD PTR [ecx]
  4171c4:	das    
  4171c5:	leave  
  4171c6:	and    bl,BYTE PTR [ebx+ebx*4]
  4171c9:	mov    ds:0x354c392c,eax
  4171ce:	or     BYTE PTR [edi-0x75],0xc
  4171d2:	jnp    0x41722f
  4171d4:	loope  0x41719f
  4171d6:	ret    
  4171d7:	aas    
  4171d8:	jbe    0x417186
  4171da:	(bad)  
  4171dc:	shl    DWORD PTR [ecx-0x78fe4ac7],cl
  4171e2:	mov    bl,0xe7
  4171e4:	fs sahf 
  4171e6:	loopne 0x4171cd
  4171e8:	fdiv   QWORD PTR [ebx-0x2c]
  4171eb:	aaa    
  4171ec:	add    edx,ebx
  4171ee:	rcl    DWORD PTR [edx-0x14],0x4e
  4171f2:	ret    0x70a5
  4171f5:	mov    ah,BYTE PTR [ebx]
  4171f7:	sbb    eax,ecx
  4171f9:	or     BYTE PTR [ecx-0x1aceec78],dh
  4171ff:	add    esi,DWORD PTR [ebp-0xd46064c]
  417205:	iret   
  417206:	pop    ds
  417207:	inc    esp
  417208:	es mov dh,0xa7
  41720b:	stos   DWORD PTR es:[edi],eax
  41720c:	imul   esi
  41720e:	push   edx
  41720f:	lahf   
  417210:	outs   dx,DWORD PTR ds:[esi]
  417212:	int3   
  417213:	nop
  417214:	iret   
  417215:	lods   eax,DWORD PTR ds:[esi]
  417216:	lock mov BYTE PTR [ecx-0x47],dl
  41721a:	aaa    
  41721b:	sar    dl,1
  41721d:	aaa    
  41721e:	mov    bh,0xb0
  417220:	mov    bl,0xb
  417222:	dec    esi
  417223:	es (bad) 
  417226:	or     ah,BYTE PTR [esi+0x61]
  417229:	les    ebp,FWORD PTR [esi]
  41722b:	out    dx,al
  41722c:	mov    dl,0xee
  41722e:	jg     0x41720d
  417230:	fadd   QWORD PTR [esi]
  417232:	or     BYTE PTR [eax],al
  417234:	(bad)  
  417235:	shl    BYTE PTR [esp+edi*2+0x7d],0x73
  41723a:	mov    edi,0xb1472431
  41723f:	in     eax,0x8e
  417241:	sbb    al,0x60
  417243:	mov    ebx,0xbae0346a
  417248:	push   ds
  417249:	je     0x417266
  41724b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41724c:	dec    edx
  41724d:	ret    
  41724e:	dec    edx
  41724f:	pop    ebp
  417250:	inc    edi
  417251:	jp     0x417210
  417253:	mov    ah,0x82
  417255:	dec    ebp
  417256:	and    eax,0xff2ad2bc
  41725b:	shl    dh,0x18
  41725e:	mov    ebx,0x7511aeb
  417263:	dec    eax
  417264:	stos   DWORD PTR es:[edi],eax
  417265:	out    0xad,eax
  417267:	in     eax,dx
  417268:	dec    ebp
  417269:	add    dl,BYTE PTR [ecx-0x22e3df9d]
  41726f:	pop    esp
  417270:	pop    es
  417271:	stc    
  417272:	pop    eax
  417273:	mov    edx,0xd8f743ed
  417278:	call   0x48d5a5bb
  41727d:	mov    edi,0x786fdf01
  417282:	test   BYTE PTR [edx+edi*2-0x63],al
  417286:	fstp   QWORD PTR [eax]
  417288:	xor    al,bh
  41728a:	add    ecx,DWORD PTR [eax-0x4922b5fc]
  417290:	stos   BYTE PTR es:[edi],al
  417291:	jle    0x417261
  417293:	retf   0xea85
  417296:	popf   
  417297:	ret    0xfdaa
  41729a:	xchg   edi,eax
  41729b:	fucomi st,st(1)
  41729d:	xchg   esp,eax
  41729e:	shl    BYTE PTR [ebp+edx*4+0x446c5ef4],0xa5
  4172a6:	test   al,0x8f
  4172a8:	(bad)  
  4172a9:	mov    ah,0x97
  4172ab:	popf   
  4172ac:	stc    
  4172ad:	xor    dl,BYTE PTR [ecx+0x22ba09f5]
  4172b3:	data16 jne 0x41727c
  4172b6:	mov    bh,BYTE PTR [ebp+0x53]
  4172b9:	cdq    
  4172ba:	adc    BYTE PTR [edx+0x18bcc4fa],ch
  4172c0:	es in  eax,0xf6
  4172c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172c4:	xor    bh,BYTE PTR [ecx+0x7a55643]
  4172ca:	dec    ebx
  4172cb:	in     eax,0x67
  4172cd:	adc    eax,0x9296abf1
  4172d2:	stc    
  4172d3:	adc    BYTE PTR [eax],0x74
  4172d6:	xchg   DWORD PTR [ebx-0x38eeaae2],eax
  4172dc:	lea    ecx,[eax+0x63829ec0]
  4172e2:	daa    
  4172e3:	and    eax,ecx
  4172e5:	fimul  DWORD PTR [edx+eiz*1+0x6]
  4172e9:	or     dh,BYTE PTR [edi-0x3a25fa92]
  4172ef:	call   0x8f21:0x29ddd6aa
  4172f6:	xchg   ecx,eax
  4172f7:	jo     0x4172fd
  4172f9:	rcl    DWORD PTR [edx+0x19ed63a7],0xbc
  417300:	cmp    al,0x63
  417302:	jno    0x4172a6
  417304:	mov    esi,0x2798cd58
  417309:	jmp    0x4172ee
  41730b:	mov    dh,0x55
  41730d:	dec    eax
  41730e:	xor    esi,DWORD PTR [esi]
  417310:	sti    
  417311:	mov    ds,WORD PTR [ebx-0x63]
  417314:	fild   QWORD PTR [esi-0x77]
  417317:	and    DWORD PTR [edi+0x1dc1cf5d],edi
  41731d:	push   edi
  41731e:	sbb    DWORD PTR [ebx-0xd80a225],edi
  417324:	cmp    BYTE PTR [eax+0x5e],ch
  417327:	mov    cl,BYTE PTR [ebx]
  417329:	xchg   BYTE PTR [ebx+0x216e9d5d],bl
  41732f:	add    BYTE PTR [edx+0x5a],0x37
  417333:	add    eax,0xf135a2ae
  417338:	popa   
  417339:	imul   edi,DWORD PTR ds:0xdc345984,0x3c
  417340:	xchg   edx,eax
  417341:	lods   al,BYTE PTR ds:[esi]
  417342:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417343:	sbb    ecx,ebx
  417345:	shr    ch,cl
  417347:	pop    eax
  417348:	xor    eax,0x954d740f
  41734d:	jp     0x4173b5
  41734f:	lea    eax,[esp+0x44]
  417353:	mov    DWORD PTR [esp+0xc],eax
  417357:	cmp    DWORD PTR ds:0x42835d,0x0
  41735e:	mov    DWORD PTR ds:0x4284a1,edi
  417364:	mov    ecx,0x653d
  417369:	jmp    0x417446
  41736e:	mov    DWORD PTR ds:0x428445,0x6fab
  417378:	mov    DWORD PTR ds:0x428439,0x3325
  417382:	cmp    DWORD PTR ds:0x42835d,0x0
  417389:	jl     0x4173a7
  41738f:	push   DWORD PTR [ebp-0x20]
  417392:	push   DWORD PTR [ebp-0xc]
  417395:	call   DWORD PTR ds:0x42e0ec
  41739b:	xor    edi,0x628b
  4173a1:	or     edi,0x2ad9
  4173a7:	and    DWORD PTR ds:0x42858d,edx
  4173ad:	and    ecx,DWORD PTR ds:0x4285a9
  4173b3:	xor    edi,edi
  4173b5:	add    edi,DWORD PTR ds:0x4284dd
  4173bb:	mov    edx,DWORD PTR ds:0x4285d5
  4173c1:	sub    edi,edx
  4173c3:	or     edi,DWORD PTR [edi+edx*1]
  4173c6:	inc    edx
  4173c7:	cmp    DWORD PTR ds:0x428385,0x0
  4173ce:	mov    DWORD PTR ds:0x4284a9,0x322b
  4173d8:	mov    DWORD PTR ds:0x4283a5,0x622c
  4173e2:	mov    edx,DWORD PTR ds:0x428375
  4173e8:	mov    DWORD PTR ds:0x4284fd,0x673b
  4173f2:	jmp    0x417446
  4173f7:	mov    DWORD PTR ds:0x42837d,edx
  4173fd:	cmp    DWORD PTR ds:0x428385,0x0
  417404:	jl     0x41742c
  41740a:	push   DWORD PTR [ebp-0x24]
  41740d:	push   0x428273
  417412:	call   DWORD PTR ds:0x42e27c
  417418:	sbb    DWORD PTR ds:0x428381,0x4806
  417422:	add    DWORD PTR ds:0x428511,0x48d6
  41742c:	add    edi,0x263
  417432:	xor    DWORD PTR ds:0x428389,0x2f2b
  41743c:	add    DWORD PTR ds:0x4285b1,0x7768
  417446:	lea    eax,[esp+0x60]
  41744a:	xor    ecx,ecx
  41744c:	or     ecx,DWORD PTR ds:0x42836d
  417452:	xor    DWORD PTR ds:0x428389,ecx
  417458:	mov    DWORD PTR [esp+0x10],eax
  41745c:	sub    edi,DWORD PTR ds:0x42852d
  417462:	mov    eax,ds:0x422738
  417467:	sbb    DWORD PTR ds:0x4284a9,edx
  41746d:	mov    eax,DWORD PTR [eax+0x1d8]
  417473:	cmp    DWORD PTR ds:0x4284ad,0x0
  41747a:	mov    edi,0x142d
  41747f:	mov    DWORD PTR ds:0x42839d,edi
  417485:	jmp    0x4174dd
  41748a:	not    ecx
  41748c:	cmp    DWORD PTR ds:0x4284ad,0x0
  417493:	jg     0x4174bb
  417499:	push   DWORD PTR [ebp-0x1c]
  41749c:	push   0x483b
  4174a1:	call   DWORD PTR ds:0x42e0f0
  4174a7:	and    DWORD PTR ds:0x42851d,0x19ab
  4174b1:	xor    DWORD PTR ds:0x428371,0x742c
  4174bb:	add    edx,DWORD PTR ds:0x428589
  4174c1:	sub    DWORD PTR ds:0x428499,0x7d91
  4174cb:	mov    edx,DWORD PTR ds:0x42844d
  4174d1:	or     DWORD PTR ds:0x428515,edx
  4174d7:	adc    DWORD PTR ds:0x428521,ecx
  4174dd:	mov    eax,DWORD PTR [eax]
  4174df:	mov    edi,DWORD PTR ds:0x428545
  4174e5:	mov    ecx,DWORD PTR ds:0x4285c1
  4174eb:	sub    ecx,edi
  4174ed:	or     edi,DWORD PTR [edi+ecx*1]
  4174f0:	mov    ecx,eax
  4174f2:	xor    ecx,0xa5069baf
  4174f8:	xor    edx,edx
  4174fa:	or     edx,DWORD PTR ds:0x428479
  417500:	sub    edx,DWORD PTR ds:0x42849d
  417506:	mov    DWORD PTR ds:0x428479,edx
  41750c:	xor    eax,0xfffffffe
  41750f:	shl    eax,0x1e
  417512:	and    DWORD PTR ds:0x428369,edi
  417518:	shr    ecx,0x2
  41751b:	or     ecx,eax
  41751d:	mov    eax,DWORD PTR [esp+0x10]
  417521:	inc    edx
  417522:	mov    DWORD PTR [eax],ecx
  417524:	xor    edx,edi
  417526:	mov    edi,0xcb79b566
  41752b:	mov    DWORD PTR [esp+0x80],edi
  417532:	mov    DWORD PTR [esp+0x84],esi
  417539:	cmp    DWORD PTR ds:0x428445,0x0
  417540:	movzx  ecx,WORD PTR ds:0x428375
  417547:	movzx  ecx,BYTE PTR ds:0x428469
  41754e:	jmp    0x4175bc
  417553:	not    edx
  417555:	cmp    DWORD PTR ds:0x428445,0x0
  41755c:	jb     0x4175ae
  417562:	push   DWORD PTR [ebp-0x20]
  417565:	push   0x1e74
  41756a:	push   0x10b8
  41756f:	push   0x6d55
  417574:	push   DWORD PTR [ebp-0x18]
  417577:	push   DWORD PTR [ebp-0x1c]
  41757a:	call   DWORD PTR ds:0x42e0f4
  417580:	movzx  edx,BYTE PTR ds:0x4285b1
  417587:	add    edx,DWORD PTR ds:0x428519
  41758d:	mov    DWORD PTR ds:0x4285b1,edx
  417593:	xor    ecx,ecx
  417595:	xor    ecx,DWORD PTR ds:0x4283e9
  41759b:	xor    edx,edx
  41759d:	xor    edx,DWORD PTR ds:0x428561
  4175a3:	sub    ecx,edx
  4175a5:	sub    ecx,DWORD PTR [ecx+edx*1]
  4175a8:	add    DWORD PTR ds:0x42839d,edx
  4175ae:	xor    DWORD PTR ds:0x428599,ebx
  4175b4:	sbb    DWORD PTR ds:0x428435,edx
  4175ba:	adc    edx,ecx
  4175bc:	mov    eax,DWORD PTR [esp+0x80]
  4175c3:	or     edx,edx
  4175c5:	mov    ecx,DWORD PTR [esp+0x84]
  4175cc:	cmp    DWORD PTR ds:0x4284a9,0x0
  4175d3:	mov    edx,DWORD PTR ds:0x4284ad
  4175d9:	mov    DWORD PTR ds:0x428379,0x64c4
  4175e3:	mov    edx,DWORD PTR ds:0x42843d
  4175e9:	jmp    0x417644
  4175ee:	mov    DWORD PTR ds:0x428461,0x1a08
  4175f8:	cmp    DWORD PTR ds:0x4284a9,0x0
  4175ff:	ja     0x417624
  417605:	push   DWORD PTR [ebp-0x1c]
  417608:	call   DWORD PTR ds:0x42e280
  41760e:	sbb    edx,DWORD PTR ds:0x428381
  417614:	adc    DWORD PTR ds:0x42844d,0x1011
  41761e:	sbb    DWORD PTR ds:0x428505,ebx
  417624:	xor    edx,edx
  417626:	or     edx,DWORD PTR ds:0x428435
  41762c:	xor    DWORD PTR ds:0x42857d,edx
  417632:	add    DWORD PTR ds:0x42843d,ebx
  417638:	add    edx,0x156e
  41763e:	sub    edx,0x437f
  417644:	shrd   eax,ecx,0x2
  417648:	cmp    DWORD PTR ds:0x428531,0x0
  41764f:	mov    edx,0x364f
  417654:	mov    DWORD PTR ds:0x428525,0x205c
  41765e:	mov    edx,0xb6f
  417663:	jmp    0x4176bb
  417668:	mov    edx,DWORD PTR ds:0x428575
  41766e:	mov    DWORD PTR ds:0x4283a1,edi
  417674:	cmp    DWORD PTR ds:0x428531,0x0
  41767b:	jae    0x4176a7
  417681:	push   DWORD PTR [ebp-0x18]
  417684:	call   DWORD PTR ds:0x42e0f8
  41768a:	sub    DWORD PTR ds:0x428479,0x4a16
  417694:	mov    edx,DWORD PTR ds:0x4285b1
  41769a:	or     DWORD PTR ds:0x428595,edx
  4176a0:	sub    DWORD PTR ds:0x42857d,ecx
  4176a6:	dec    edx
  4176a7:	dec    edx
  4176a8:	not    DWORD PTR ds:0x428361
  4176ae:	movzx  edx,WORD PTR ds:0x428575
  4176b5:	sub    DWORD PTR ds:0x42852d,edx
  4176bb:	shr    ecx,0x2
  4176be:	mov    ecx,DWORD PTR [esp+0x80]
  4176c5:	mov    edx,DWORD PTR [esp+0x84]
  4176cc:	add    DWORD PTR ds:0x428365,0x428391
  4176d6:	xor    eax,0x32de6d5d
  4176db:	adc    DWORD PTR ds:0x428395,0x4c3b
  4176e5:	xor    edx,edx
  4176e7:	or     DWORD PTR ds:0x42850d,0x428381
  4176f1:	or     edx,eax
  4176f3:	mov    eax,ds:0x428495
  4176f8:	adc    DWORD PTR ds:0x4285a1,eax
  4176fe:	mov    eax,ds:0x422738
  417703:	or     DWORD PTR ds:0x42843d,0x428471
  41770d:	push   edx
  41770e:	or     DWORD PTR ds:0x428455,0x3421
  417718:	push   DWORD PTR [eax+0x19c]
  41771e:	lea    eax,[esp+0x80]
  417725:	push   eax
  417726:	sbb    DWORD PTR ds:0x428381,0x428495
  417730:	shl    ecx,0x1e
  417733:	call   0x411c08
  417738:	or     DWORD PTR ds:0x42843d,0x889
  417742:	lea    eax,[ebp+0x10]
  417745:	add    DWORD PTR ds:0x428465,0x4283a1
  41774f:	push   eax
  417750:	or     DWORD PTR ds:0x428441,0x378
  41775a:	mov    DWORD PTR [esp+0x14],edi
  41775e:	mov    DWORD PTR [esp+0x18],esi
  417762:	add    DWORD PTR ds:0x42859d,0x1c44
  41776c:	lea    eax,[ebp+0xc]
  41776f:	sbb    DWORD PTR ds:0x428595,0x6a60
  417779:	push   eax
  41777a:	adc    DWORD PTR ds:0x4284b1,0x65f7
  417784:	mov    DWORD PTR [esp+0x18],edi
  417788:	lea    eax,[ebp+0x8]
  41778b:	mov    DWORD PTR [esp+0x1c],esi
  41778f:	sub    DWORD PTR ds:0x4284a9,0x37c8
  417799:	jmp    0x4179f6
  41779e:	cmp    edx,eax
  4177a0:	retf   
  4177a1:	mov    esp,0x44b9bc3c
  4177a6:	out    0x8d,eax
  4177a8:	push   es
  4177a9:	xchg   edx,eax
  4177aa:	scas   al,BYTE PTR es:[edi]
  4177ab:	mov    al,0xf4
  4177ad:	iret   
  4177ae:	sti    
  4177af:	faddp  st(0),st
  4177b1:	mov    esi,0xbebec235
  4177b6:	push   ebp
  4177b7:	lods   eax,DWORD PTR ds:[esi]
  4177b8:	pop    ebx
  4177ba:	cmp    BYTE PTR [eax+0x4f1f5f53],dh
  4177c0:	xchg   esp,eax
  4177c1:	mov    ecx,0x5e1489b7
  4177c6:	xchg   ecx,eax
  4177c7:	mov    WORD PTR [ecx+eax*2+0xb15f1ab],cs
  4177ce:	arpl   WORD PTR [esi-0x33],sp
  4177d1:	lea    esp,[eax-0x32]
  4177d4:	aad    0xdf
  4177d6:	not    DWORD PTR [edi+0x21]
  4177d9:	push   ebx
  4177da:	mov    eax,DWORD PTR [esi]
  4177dc:	add    BYTE PTR [ebp+0x21],ch
  4177df:	and    al,0x69
  4177e1:	arpl   WORD PTR [edi+0x3281577d],cx
  4177e7:	inc    ecx
  4177e8:	je     0x417849
  4177ea:	jp     0x41778f
  4177ec:	mov    dh,0x30
  4177ee:	ins    DWORD PTR es:[edi],dx
  4177ef:	add    eax,0x78d61377
  4177f4:	inc    ebx
  4177f5:	push   eax
  4177f6:	mov    edi,0x8fd99508
  4177fb:	leave  
  4177fc:	popa   
  4177fd:	or     DWORD PTR [ecx-0x6],ebx
  417800:	iret   
  417801:	stos   BYTE PTR es:[edi],al
  417802:	xchg   edi,eax
  417803:	js     0x417875
  417805:	pop    edi
  417806:	leave  
  417807:	xchg   edx,eax
  417808:	pop    ebp
  417809:	mov    ecx,0x348b2d79
  41780e:	rcl    BYTE PTR [eax-0x78],1
  417811:	retf   0xf9d9
  417814:	cdq    
  417815:	dec    bh
  417817:	cmp    DWORD PTR [edx-0x57026512],edx
  41781d:	fmul   QWORD PTR [ecx]
  41781f:	adc    DWORD PTR [edx+0x59fee4fd],0x4d
  417826:	mov    dl,0x91
  417828:	xor    DWORD PTR ds:0x1b7109d6,ebx
  41782e:	in     eax,0x56
  417830:	xor    bl,dl
  417832:	xor    eax,0x390ffada
  417837:	pop    ds
  417838:	out    0xa4,eax
  41783a:	lods   al,BYTE PTR ds:[esi]
  41783b:	add    dh,ah
  41783d:	cwde   
  41783e:	inc    edx
  41783f:	jnp    0x417804
  417841:	adc    al,0x7d
  417843:	stc    
  417844:	mov    ah,0xab
  417846:	popf   
  417847:	ss aad 0xc8
  41784a:	jnp    0x4178c3
  41784c:	ja     0x417820
  41784e:	js     0x417897
  417850:	stos   BYTE PTR es:[edi],al
  417851:	lods   eax,DWORD PTR ds:[esi]
  417852:	xchg   edi,eax
  417853:	jg     0x41781a
  417855:	xor    al,0x9
  417857:	pop    esi
  417858:	stc    
  417859:	ds cli 
  41785b:	mov    ds:0x9c5e2050,al
  417860:	int    0xe5
  417862:	xchg   ecx,eax
  417863:	add    al,0x3b
  417865:	dec    ecx
  417866:	leave  
  417867:	push   ds
  417868:	pop    ecx
  417869:	repz xor al,0xb2
  41786c:	(bad)  
  41786d:	or     eax,0x8a46cdd6
  417872:	les    eax,FWORD PTR [edi-0x30]
  417875:	pop    edi
  417876:	fld    QWORD PTR [ebp-0x3b617982]
  41787c:	xlat   BYTE PTR ds:[ebx]
  41787d:	fst    DWORD PTR [ebx]
  41787f:	loope  0x41782e
  417881:	push   0x5d26f842
  417886:	pusha  
  417887:	iret   
  417888:	or     BYTE PTR [ebp+0x75],bh
  41788b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41788c:	push   edx
  41788d:	loope  0x4178b7
  41788f:	je     0x417905
  417891:	aam    0xf2
  417893:	fisttp DWORD PTR [ebp+ecx*1-0x5efa73fd]
  41789a:	mov    edi,0x3c49b612
  41789f:	push   0xfffffff8
  4178a1:	xchg   edi,eax
  4178a2:	mov    edi,0x8d14a0e6
  4178a7:	mov    dl,0x8
  4178a9:	pop    ecx
  4178aa:	dec    esi
  4178ab:	sub    eax,0xdd808e71
  4178b0:	pop    es
  4178b1:	pop    ebx
  4178b2:	or     ch,bl
  4178b4:	sbb    BYTE PTR [ebx+eax*2+0x47d4ad4e],bl
  4178bb:	xlat   BYTE PTR ds:[ebx]
  4178bc:	pushf  
  4178bd:	pop    ecx
  4178be:	sbb    esi,DWORD PTR [edi-0x16]
  4178c1:	idiv   BYTE PTR [ebp-0x411c0aef]
  4178c7:	mov    al,ds:0xce764614
  4178cd:	in     eax,0xdc
  4178cf:	push   esi
  4178d0:	fs fwait
  4178d2:	(bad)  
  4178d3:	mov    al,BYTE PTR [eax]
  4178d5:	xchg   ebx,eax
  4178d6:	cmp    dh,BYTE PTR [ecx+0x8]
  4178d9:	push   edx
  4178da:	xor    ebp,esp
  4178dc:	cdq    
  4178dd:	fist   DWORD PTR [ebp+0x6d7d20b]
  4178e3:	ret    
  4178e4:	repnz push ebp
  4178e6:	sub    dl,0x86
  4178e9:	cmp    BYTE PTR [ebx+ebp*4+0x36],cl
  4178ed:	pop    es
  4178ee:	sysenter 
  4178f0:	bnd jne 0x417943
  4178f3:	adc    al,0xdd
  4178f5:	in     al,dx
  4178f6:	or     al,0xa3
  4178f8:	or     cl,BYTE PTR [edi+0x5]
  4178fb:	mov    esi,0xd6cb78a1
  417900:	and    cl,ch
  417902:	out    dx,al
  417903:	xchg   esi,eax
  417904:	sub    ebp,esi
  417906:	pop    ds
  417907:	pop    esp
  417908:	adc    eax,0xd1423782
  41790d:	pop    ss
  41790e:	mov    dl,0x7c
  417910:	cs in  eax,dx
  417912:	lds    esi,FWORD PTR [edi+0x7e1d3075]
  417918:	pop    edx
  417919:	fs stc 
  41791b:	test   DWORD PTR [eax-0x3475d72b],eax
  417921:	iret   
  417922:	ret    0x5852
  417925:	sub    eax,0xd38c49a1
  41792a:	or     al,0xe2
  41792c:	loopne 0x41795a
  41792e:	(bad)  
  41792f:	lock sub ch,BYTE PTR [ebx]
  417932:	jb     0x4178f8
  417934:	test   eax,0xc30a18f
  417939:	mov    al,0x54
  41793b:	mov    esi,esp
  41793d:	imul   edi,DWORD PTR [ebp-0x44134f6c],0xce62d275
  417947:	jmp    0x41791e
  417949:	pop    ss
  41794a:	data16 xor ah,BYTE PTR [edi+0x72d305a9]
  417951:	fdivr  DWORD PTR [ebx]
  417953:	dec    ebp
  417954:	cmp    al,0x3b
  417956:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417957:	daa    
  417958:	xrelease xchg BYTE PTR [edi+0x67],dl
  41795c:	adc    ebx,0xfd11364
  417962:	and    al,0x1e
  417964:	cmp    al,ch
  417966:	shr    DWORD PTR [ebx-0x10],0xda
  41796a:	sbb    DWORD PTR [edx-0x6fa1863f],ecx
  417970:	das    
  417971:	dec    edi
  417972:	xor    eax,DWORD PTR [ebx]
  417974:	push   eax
  417975:	mov    edx,es
  417977:	nop
  417978:	mov    edx,0x179de9e2
  41797d:	push   eax
  41797e:	or     BYTE PTR [edx],ch
  417980:	sbb    DWORD PTR [esi+0x7f],esp
  417983:	jbe    0x4179f9
  417985:	fnstsw WORD PTR [ebx+0x8]
  417988:	xchg   ebp,eax
  417989:	in     eax,dx
  41798a:	stc    
  41798b:	in     eax,0xb8
  41798d:	loope  0x417954
  41798f:	pop    es
  417990:	xor    eax,0x10c96b45
  417995:	jnp    0x417922
  417997:	xor    dl,BYTE PTR [eax+0xe16ea55]
  41799d:	dec    edx
  41799e:	stos   BYTE PTR es:[edi],al
  41799f:	sbb    BYTE PTR [esi],dh
  4179a1:	sbb    eax,0xffb3fb1f
  4179a6:	push   es
  4179a7:	and    al,0xd4
  4179a9:	xor    DWORD PTR [esp+edx*8-0x4e],0x60aa2fb6
  4179b1:	cmp    al,0xe6
  4179b3:	call   0xbaad2822
  4179b8:	jg     0x41797e
  4179ba:	test   BYTE PTR [esp+esi*1+0x1bb6f749],bh
  4179c1:	sbb    al,0x78
  4179c3:	std    
  4179c4:	fwait
  4179c5:	gs out dx,eax
  4179c7:	lock dec esp
  4179c9:	add    BYTE PTR [ebx+0x3a],cl
  4179cc:	inc    edx
  4179cd:	xor    al,0x80
  4179cf:	repnz in eax,0x5a
  4179d2:	(bad)  [ebx+0x2b]
  4179d5:	fst    DWORD PTR [ebx+0x45]
  4179d8:	ret    0x8f13
  4179db:	mov    eax,0x788052ca
  4179e0:	stos   DWORD PTR es:[edi],eax
  4179e1:	xchg   DWORD PTR [edx+0x5afe74a1],esp
  4179e7:	das    
  4179e8:	and    eax,0x88e0bce4
  4179ed:	sbb    ah,ah
  4179ef:	cmp    bh,BYTE PTR [edx-0x4edb9cbf]
  4179f5:	pop    esp
  4179f6:	mov    DWORD PTR [esp+0x18],edi
  4179fa:	adc    DWORD PTR ds:0x428509,0x42839d
  417a04:	jmp    0x417c61
  417a09:	and    BYTE PTR [ecx],al
  417a0b:	fst    QWORD PTR [ecx-0x4b4b4d1d]
  417a11:	jb     0x417a54
  417a13:	sahf   
  417a14:	nop
  417a15:	adc    cl,dl
  417a17:	cli    
  417a18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a19:	jae    0x4179fd
  417a1b:	sar    BYTE PTR [esi-0x41413dcb],0xd0
  417a22:	sub    BYTE PTR [ebp-0x369df56d],dh
  417a28:	jmp    0x417a52
  417a2a:	mov    ds:0xfbeafffc,al
  417a2f:	add    BYTE PTR [ebp+0xf],0xdd
  417a33:	sbb    edx,DWORD PTR [ebp-0x3dbeb7e]
  417a39:	xchg   ebp,eax
  417a3a:	lds    eax,FWORD PTR [edi]
  417a3c:	inc    esi
  417a3d:	push   0xee2f174d
  417a42:	or     eax,0x70f85fc1
  417a47:	lods   al,BYTE PTR ds:[esi]
  417a48:	mov    bl,0x2f
  417a4a:	xor    bl,BYTE PTR [ebx+0xf]
  417a4d:	push   ss
  417a4e:	loope  0x4179d8
  417a50:	les    esi,FWORD PTR [edx+0x51b015d8]
  417a56:	int    0xc9
  417a58:	retf   0x523a
  417a5b:	jne    0x417ada
  417a5d:	shr    DWORD PTR [ebp-0x65b976a8],0xd2
  417a64:	sub    BYTE PTR [ecx-0x62ca25fc],0xa2
  417a6b:	les    edx,FWORD PTR [ebx-0x18573674]
  417a71:	add    BYTE PTR [ecx+0x2c],ah
  417a74:	ins    BYTE PTR es:[edi],dx
  417a75:	xor    eax,0xf7b4a8af
  417a7a:	or     BYTE PTR [edx+0x54a9434a],ah
  417a80:	dec    esp
  417a81:	loopne 0x417a84
  417a83:	std    
  417a84:	rcr    BYTE PTR [edx-0xd],cl
  417a87:	push   edx
  417a88:	stos   BYTE PTR es:[edi],al
  417a89:	into   
  417a8a:	mov    edx,0xc1f473e
  417a8f:	mov    ebx,0x9605c969
  417a94:	fld    TBYTE PTR [ebp+0x16]
  417a97:	lds    eax,FWORD PTR es:[esi-0x8d4a577]
  417a9e:	xchg   esi,eax
  417a9f:	mov    bl,0x85
  417aa1:	into   
  417aa2:	push   edi
  417aa3:	(bad)  
  417aa4:	cld    
  417aa5:	push   edx
  417aa6:	or     ebp,edx
  417aa8:	aas    
  417aa9:	les    eax,FWORD PTR [edi+0x60]
  417aac:	inc    edi
  417aad:	sub    al,0x2
  417aaf:	or     BYTE PTR [edx],al
  417ab1:	call   FWORD PTR [ebp+0x7ed5b572]
  417ab7:	inc    ebx
  417ab8:	rol    BYTE PTR [ebx],0x30
  417abb:	data16 rcr BYTE PTR [eax],cl
  417abe:	mov    dl,0x53
  417ac0:	dec    edx
  417ac1:	xchg   ebx,eax
  417ac2:	adc    edi,esi
  417ac4:	xor    bl,al
  417ac6:	(bad)
  417ac9:	dec    eax
  417aca:	outs   dx,BYTE PTR ds:[esi]
  417acb:	les    eax,FWORD PTR [edx+0x18]
  417ace:	sbb    BYTE PTR [ebx+0x7830d468],al
  417ad4:	(bad)  
  417ad5:	add    eax,0x54174abe
  417ada:	xchg   edi,eax
  417adb:	aad    0xa7
  417add:	xor    eax,0x21564d69
  417ae2:	and    edx,DWORD PTR [ebx-0xdf1f62f]
  417ae8:	lds    edx,FWORD PTR [esi+0x14193d8b]
  417aee:	jo     0x417b45
  417af0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417af1:	idiv   DWORD PTR [esi+0x65]
  417af4:	fld    DWORD PTR [esi]
  417af6:	out    0xd1,al
  417af8:	jns    0x417b37
  417afa:	jge    0x417abf
  417afc:	fsub   st,st(0)
  417afe:	fmul   QWORD PTR [esp+edi*2]
  417b01:	add    DWORD PTR [eax],ecx
  417b03:	mov    ah,0x5e
  417b05:	jnp    0x417b01
  417b07:	pop    ecx
  417b08:	js     0x417b4e
  417b0a:	mov    dl,0x66
  417b0c:	or     eax,0xc484d7f
  417b11:	mov    eax,0x2cdf0887
  417b16:	shr    BYTE PTR [ebp+0x6c],0x2
  417b1a:	xor    edx,ebx
  417b1c:	xor    DWORD PTR [ebp+0x53],esi
  417b1f:	cli    
  417b20:	sub    BYTE PTR [ebx],cl
  417b22:	xor    ah,al
  417b24:	iret   
  417b25:	lods   eax,DWORD PTR ds:[esi]
  417b26:	ret    
  417b27:	int    0x5f
  417b29:	xlat   BYTE PTR ds:[ebx]
  417b2a:	scas   al,BYTE PTR es:[edi]
  417b2b:	aas    
  417b2c:	xor    al,ch
  417b2e:	dec    eax
  417b2f:	sub    eax,0x8c7574f6
  417b34:	sbb    DWORD PTR [edi-0x16],ecx
  417b37:	sbb    bl,dh
  417b39:	cmp    al,0x58
  417b3b:	js     0x417b6a
  417b3d:	add    al,0xf1
  417b3f:	out    dx,al
  417b40:	jecxz  0x417b17
  417b42:	repnz dec esi
  417b44:	bnd ss jp 0x417bc3
  417b48:	jle    0x417b22
  417b4a:	icebp  
  417b4b:	jnp    0x417af8
  417b4d:	push   0x74b9373a
  417b52:	popa   
  417b53:	mov    bl,0xb5
  417b55:	jl     0x417b7f
  417b57:	xor    DWORD PTR [eax-0x24],0x571e354
  417b5e:	ja     0x417b0b
  417b60:	aaa    
  417b61:	add    dh,al
  417b63:	mov    ebp,0x232f63cf
  417b68:	test   eax,0x6a6865ee
  417b6d:	in     al,dx
  417b6e:	add    eax,0x2f95541
  417b73:	jg     0x417b02
  417b75:	mov    dh,BYTE PTR [edi+ecx*2-0x79]
  417b79:	push   es
  417b7a:	add    ebx,DWORD PTR [edx-0x5a]
  417b7d:	pop    ds
  417b7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b7f:	scas   eax,DWORD PTR es:[edi]
  417b80:	adc    ch,BYTE PTR [esi]
  417b82:	dec    ebp
  417b83:	mov    edi,0x895644c4
  417b88:	mov    bl,0x8a
  417b8a:	xchg   esi,eax
  417b8b:	cli    
  417b8c:	je     0x417b11
  417b8e:	jge    0x417bbb
  417b90:	mov    dl,0xa1
  417b92:	(bad)  
  417b93:	sbb    esi,DWORD PTR [edi+0x75]
  417b96:	repnz test eax,0xa7f1d781
  417b9c:	ret    0x8f27
  417b9f:	ret    
  417ba0:	add    BYTE PTR ds:0xd35e68ff,0x64
  417ba7:	dec    ebx
  417ba8:	bound  esi,QWORD PTR [edi]
  417baa:	sbb    eax,0x18bf08ec
  417baf:	aaa    
  417bb0:	inc    ebp
  417bb1:	adc    BYTE PTR [ecx-0x21],dh
  417bb4:	pop    eax
  417bb5:	or     BYTE PTR [esi+0x5e3c1375],cl
  417bbb:	imul   DWORD PTR [eax-0x1a0779e7]
  417bc1:	gs jmp 0x2618:0x929fbaf2
  417bc9:	mov    eax,0x2130437a
  417bcf:	adc    eax,0x2c3185d9
  417bd4:	cmp    BYTE PTR [ecx],ah
  417bd6:	repz mov ch,0x70
  417bd9:	cmp    al,0xd
  417bdb:	pop    ebx
  417bdc:	dec    edx
  417bdd:	outs   dx,DWORD PTR ds:[esi]
  417bde:	clc    
  417bdf:	repz jnp 0x417bc5
  417be2:	dec    ecx
  417be3:	addr16 mov edi,0xfbd24242
  417be9:	mov    bh,0xec
  417beb:	sub    esp,edi
  417bed:	ins    DWORD PTR es:[edi],dx
  417bee:	xlat   BYTE PTR ds:[ebx]
  417bef:	arpl   ax,si
  417bf1:	ret    0xf2ff
  417bf4:	out    dx,eax
  417bf5:	fwait
  417bf6:	cmp    eax,ebp
  417bf8:	pusha  
  417bf9:	sti    
  417bfa:	lods   al,BYTE PTR ds:[esi]
  417bfb:	fisubr DWORD PTR [ebx+0x1d]
  417bfe:	fdivr  DWORD PTR [ecx+0x67]
  417c01:	sbb    dh,BYTE PTR [edx]
  417c03:	cmc    
  417c04:	popf   
  417c05:	outs   dx,DWORD PTR ds:[esi]
  417c06:	fs mov cl,0x3a
  417c09:	jmp    0x9bbe57c
  417c0e:	adc    bl,BYTE PTR ds:[esi]
  417c11:	xor    eax,0xc451a53
  417c16:	xchg   esi,eax
  417c17:	sub    eax,0x8558b09
  417c1c:	pop    es
  417c1d:	hlt    
  417c1e:	in     al,0xcc
  417c20:	fwait
  417c21:	into   
  417c22:	mov    eax,0x9602ac95
  417c27:	cwde   
  417c28:	mov    ah,0xfc
  417c2a:	cwde   
  417c2b:	mov    ds:0x692ed0fb,al
  417c30:	hlt    
  417c31:	test   eax,esi
  417c33:	jae    0x417c5d
  417c35:	repz icebp 
  417c37:	xchg   edi,eax
  417c38:	in     al,dx
  417c39:	clc    
  417c3a:	imul   eax,DWORD PTR [edx+0x5daf7449],0xffffffce
  417c41:	jg     0x417c00
  417c43:	sbb    ch,al
  417c45:	cmp    dl,dh
  417c47:	imul   ebx,ebx,0xffffffec
  417c4a:	mov    cl,0x9f
  417c4c:	mov    ecx,0x37f4dc5e
  417c51:	outs   dx,DWORD PTR ds:[esi]
  417c52:	pusha  
  417c53:	loopne 0x417be5
  417c55:	mov    bh,0x15
  417c57:	add    bh,BYTE PTR [ebx+0x14]
  417c5a:	pop    edx
  417c5b:	push   ds
  417c5c:	cmp    dh,BYTE PTR [edx-0x50]
  417c5f:	out    dx,eax
  417c60:	adc    DWORD PTR [ecx-0x7ee3db8c],ecx
  417c66:	add    eax,0x428465
  417c6b:	aam    0x4d
  417c6d:	add    BYTE PTR [eax],al
  417c6f:	push   eax
  417c70:	and    DWORD PTR ds:0x4285ad,0x2c3a
  417c7a:	call   0x40a112
  417c7f:	and    DWORD PTR ds:0x42846d,0x4284ad
  417c89:	push   0x4
  417c8b:	push   0x4225bc
  417c90:	push   DWORD PTR [esp+0x14]
  417c94:	call   0x411c08
  417c99:	mov    eax,DWORD PTR [esp+0xc]
  417c9d:	mov    ecx,DWORD PTR [esp+0xc]
  417ca1:	xor    DWORD PTR ds:0x42847d,ecx
  417ca7:	mov    eax,DWORD PTR [eax]
  417ca9:	mov    ecx,DWORD PTR [ecx]
  417cab:	cmp    DWORD PTR ds:0x42850d,0x0
  417cb2:	mov    DWORD PTR ds:0x4285a1,0x49de
  417cbc:	mov    ebx,0x75ce
  417cc1:	not    edx
  417cc3:	mov    edx,0x562b
  417cc8:	jmp    0x417d30
  417ccd:	mov    DWORD PTR ds:0x42847d,0x3679
  417cd7:	cmp    DWORD PTR ds:0x42850d,0x0
  417cde:	jle    0x417d16
  417ce4:	push   0x3f3a
  417ce9:	push   0x428525
  417cee:	push   DWORD PTR [ebp-0x20]
  417cf1:	push   DWORD PTR [ebp-0x14]
  417cf4:	call   DWORD PTR ds:0x42e284
  417cfa:	xor    edx,DWORD PTR ds:0x42857d
  417d00:	and    DWORD PTR ds:0x42838d,0x535f
  417d0a:	mov    ebx,DWORD PTR ds:0x42836d
  417d10:	and    DWORD PTR ds:0x42835d,ebx
  417d16:	adc    ebx,ebx
  417d18:	neg    DWORD PTR ds:0x428451
  417d1e:	mov    edx,DWORD PTR ds:0x4284c5
  417d24:	mov    ebx,DWORD PTR ds:0x428541
  417d2a:	sub    ebx,edx
  417d2c:	imul   edx,DWORD PTR [edx+ebx*1]
  417d30:	shr    eax,0x1e
  417d33:	shl    ecx,0x2
  417d36:	cmp    DWORD PTR ds:0x428365,0x0
  417d3d:	mov    edx,0x88a
  417d42:	mov    DWORD PTR ds:0x4284fd,0x5f12
  417d4c:	mov    DWORD PTR ds:0x428389,0x1abe
  417d56:	jmp    0x417da7
  417d5b:	mov    DWORD PTR ds:0x42847d,edi
  417d61:	cmp    DWORD PTR ds:0x428365,0x0
  417d68:	ja     0x417d87
  417d6e:	push   DWORD PTR [ebp-0x20]
  417d71:	push   0x428381
  417d76:	push   DWORD PTR [ebp-0x18]
  417d79:	call   DWORD PTR ds:0x42e0fc
  417d7f:	sbb    ebx,ebx
  417d81:	or     DWORD PTR ds:0x428495,ecx
  417d87:	mov    DWORD PTR ds:0x428521,0x1aca
  417d91:	and    ebx,DWORD PTR ds:0x428599
  417d97:	adc    DWORD PTR ds:0x428529,0x890
  417da1:	xor    DWORD PTR ds:0x428395,edi
  417da7:	or     eax,ecx
  417da9:	and    ecx,0x4e3
  417daf:	mov    ecx,DWORD PTR [esp+0xc]
  417db3:	xor    eax,0xa5069bae
  417db8:	and    ebx,ebx
  417dba:	mov    DWORD PTR [ecx],eax
  417dbc:	lea    eax,[esp+0x40]
  417dc0:	sbb    ecx,DWORD PTR ds:0x42835d
  417dc6:	mov    DWORD PTR [esp+0x98],eax
  417dcd:	jmp    0x41802a
  417dd2:	or     eax,0xb0eeb0bf
  417dd7:	scas   al,BYTE PTR es:[edi]
  417dd8:	(bad)  
  417dd9:	and    BYTE PTR [ebx],al
  417ddb:	inc    esp
  417ddc:	lods   al,BYTE PTR ds:[esi]
  417ddd:	jecxz  0x417e1f
  417ddf:	xor    al,cl
  417de1:	iret   
  417de2:	jmp    0x417dca
  417de4:	sar    BYTE PTR [esi-0x41413dcb],0xe
  417deb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417dec:	(bad)  
  417ded:	ret    
  417dee:	rcr    BYTE PTR [edi-0x7e],cl
  417df1:	mov    al,0x7f
  417df3:	push   0xffffffc3
  417df5:	sbb    ebp,DWORD PTR [edx-0x6a]
  417df8:	lods   al,BYTE PTR ds:[esi]
  417df9:	out    0x23,eax
  417dfb:	adc    eax,0xb519d5e
  417e00:	pop    edi
  417e01:	leave  
  417e02:	fmul   DWORD PTR [ecx-0x44]
  417e05:	and    eax,0x30d5a26e
  417e0a:	clc    
  417e0b:	dec    esi
  417e0c:	popa   
  417e0d:	dec    ebp
  417e0e:	fstp   DWORD PTR [edx]
  417e10:	out    0xdd,al
  417e12:	and    al,0xf
  417e14:	pop    ss
  417e15:	xchg   edi,eax
  417e16:	xchg   ecx,eax
  417e17:	js     0x417e66
  417e19:	mov    ebx,0x3099ee31
  417e1e:	adc    bl,BYTE PTR [ecx+0x1c]
  417e21:	aad    0xc1
  417e23:	adc    eax,0x9696bc81
  417e28:	and    al,0xa1
  417e2a:	sub    BYTE PTR [edx-0x41cd0aca],dh
  417e30:	sub    BYTE PTR [esi],0x19
  417e33:	ficom  WORD PTR [edx+0x3c]
  417e36:	enter  0xaf83,0xf7
  417e3a:	mov    esp,edx
  417e3c:	adc    ebx,edi
  417e3e:	xor    al,0xa2
  417e40:	xchg   edi,eax
  417e41:	push   eax
  417e42:	in     eax,dx
  417e43:	loopne 0x417e0a
  417e45:	pop    ebx
  417e46:	std    
  417e47:	inc    edx
  417e48:	mov    edi,0x890190a3
  417e4d:	xchg   edi,eax
  417e4e:	jb     0x417e9e
  417e50:	xor    esi,ebx
  417e52:	bound  ebp,QWORD PTR [edx-0x2f519061]
  417e58:	jmp    0x7003:0x37646d01
  417e5f:	arpl   WORD PTR [ecx+0x6a0d8d0e],sp
  417e65:	adc    bh,BYTE PTR [esp+ebx*2+0x7d]
  417e69:	xchg   edx,eax
  417e6a:	pop    ss
  417e6b:	(bad)  [eax+0x49]
  417e6e:	jbe    0x417e24
  417e70:	jecxz  0x417ec4
  417e72:	sti    
  417e73:	push   edi
  417e74:	cmp    eax,0xf0887313
  417e79:	or     al,bl
  417e7b:	jbe    0x417ef4
  417e7d:	push   ss
  417e7e:	jl     0x417e70
  417e80:	cmp    DWORD PTR [ebp+0x6a1b5d91],0xffffff8c
  417e87:	out    0x32,al
  417e89:	out    0x78,eax
  417e8b:	jge    0x417e9c
  417e8d:	jp     0x417e83
  417e8f:	outs   dx,DWORD PTR ds:[esi]
  417e90:	imul   esi,DWORD PTR [edi-0x4a5dd451],0x77dde624
  417e9a:	mov    dl,0x22
  417e9c:	jmp    0x417e57
  417e9e:	sbb    esi,edi
  417ea0:	pop    ebx
  417ea1:	adc    bl,BYTE PTR [ebx]
  417ea3:	dec    esi
  417ea4:	jecxz  0x417efe
  417ea6:	xchg   ebx,eax
  417ea7:	adc    ecx,ebp
  417ea9:	sti    
  417eaa:	or     DWORD PTR [edx+0x6e],0xffffffc4
  417eae:	push   esp
  417eaf:	inc    esp
  417eb0:	jmp    0x776b:0xc91af2
  417eb7:	sub    eax,0x834ba879
  417ebc:	lock cmp BYTE PTR [eax],al
  417ebf:	aaa    
  417ec0:	aad    0xe
  417ec2:	lods   al,BYTE PTR ds:[esi]
  417ec3:	call   0x8047:0x15f36356
  417eca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ecb:	test   al,0x34
  417ecd:	imul   esp,DWORD PTR [eax+0x6a7546e5],0x4b
  417ed4:	imul   eax,ecx,0x63
  417ed7:	mov    bh,0x2b
  417ed9:	out    0x4f,al
  417edb:	adc    eax,0xa06f2c34
  417ee0:	hlt    
  417ee1:	jle    0x417e80
  417ee3:	mov    esp,0xe78bc41d
  417ee8:	push   edi
  417ee9:	xor    BYTE PTR [edi-0x3bbf132a],ch
  417eef:	lds    edx,FWORD PTR [edx+0x15b8953b]
  417ef5:	cmp    eax,ecx
  417ef7:	jle    0x417ec9
  417ef9:	push   0xa6e2d37f
  417efe:	arpl   WORD PTR [ebx],di
  417f00:	test   DWORD PTR [edx-0x5cf44b0a],edx
  417f06:	ror    BYTE PTR [ebp-0x11],0x7e
  417f0a:	sbb    edi,esp
  417f0c:	inc    esi
  417f0d:	dec    ebp
  417f0e:	push   ebp
  417f0f:	xchg   ebp,eax
  417f10:	ror    BYTE PTR [ebx-0x5313cde5],0x58
  417f17:	(bad)  
  417f18:	sbb    eax,0xddd0161b
  417f1d:	push   ds
  417f1e:	mov    WORD PTR [eax+0x12d79ce],fs
  417f24:	xor    dh,BYTE PTR [esi+0x1a]
  417f27:	or     cl,bl
  417f29:	push   ss
  417f2a:	and    BYTE PTR [edx],cl
  417f2c:	shl    dh,cl
  417f2e:	ds test al,0xa8
  417f31:	pop    ecx
  417f32:	mov    ch,0xd3
  417f34:	xchg   esp,eax
  417f35:	pop    ds
  417f36:	jg     0x417f2b
  417f38:	out    0x10,eax
  417f3a:	loop   0x417f71
  417f3c:	add    eax,0xb43742be
  417f41:	popf   
  417f42:	xor    bl,bl
  417f44:	push   cs
  417f45:	and    BYTE PTR [ecx-0x9],0x7d
  417f49:	loope  0x417fa2
  417f4b:	(bad)  
  417f4d:	adc    DWORD PTR [ebp+0xf],ebp
  417f50:	jge    0x417f43
  417f52:	out    0xcc,eax
  417f54:	jmp    0xf41502f0
  417f59:	lea    edi,[esi+ebx*4]
  417f5c:	stos   DWORD PTR es:[edi],eax
  417f5d:	cmp    eax,0x57a8cc4e
  417f62:	jl     0x417f14
  417f64:	pop    esp
  417f65:	repz int3 
  417f67:	dec    esp
  417f68:	mov    ch,0xc3
  417f6a:	pop    ecx
  417f6b:	shl    eax,0x7f
  417f6e:	push   eax
  417f6f:	aad    0xff
  417f71:	sub    bh,BYTE PTR [edx+0x632cb1be]
  417f77:	bound  ebx,QWORD PTR [eax]
  417f79:	frstor [ecx+0x305100c8]
  417f7f:	lods   eax,DWORD PTR ds:[esi]
  417f80:	test   BYTE PTR [ebp+0x6660463],0x9c
  417f87:	jnp    0x417fb6
  417f89:	js     0x417f2a
  417f8b:	(bad)  
  417f8c:	ins    BYTE PTR es:[edi],dx
  417f8d:	xchg   esi,eax
  417f8e:	fs sbb ebx,eax
  417f91:	sbb    dh,BYTE PTR [ebx-0x34319ba8]
  417f97:	retf   
  417f98:	jge    0x417fd2
  417f9a:	dec    eax
  417f9b:	ins    DWORD PTR es:[edi],dx
  417f9c:	enter  0x4755,0xff
  417fa0:	bswap  esp
  417fa2:	dec    edi
  417fa3:	push   ds
  417fa4:	fcomp  DWORD PTR [ebp-0x528c2d2f]
  417faa:	xchg   ebp,eax
  417fab:	pop    eax
  417fac:	jno    0x417fa5
  417fae:	pop    ds
  417faf:	mov    eax,0x92b2ec3
  417fb4:	call   0x9d503722
  417fb9:	addr16 js 0x418037
  417fbc:	xor    eax,DWORD PTR [edx]
  417fbe:	lahf   
  417fbf:	pop    esi
  417fc0:	stos   DWORD PTR es:[edi],eax
  417fc1:	inc    eax
  417fc2:	and    DWORD PTR [ebx+0x4],edi
  417fc5:	popa   
  417fc6:	pop    ebp
  417fc7:	xor    eax,DWORD PTR [ebx+0x52]
  417fca:	xlat   BYTE PTR ds:[ebx]
  417fcb:	pushf  
  417fcc:	retf   
  417fcd:	mov    cl,0x3a
  417fcf:	rcr    BYTE PTR [eax],1
  417fd1:	jne    0x418031
  417fd3:	stos   DWORD PTR es:[edi],eax
  417fd4:	xor    ch,BYTE PTR [ebx+edx*1+0x23]
  417fd8:	inc    esp
  417fd9:	pop    esi
  417fda:	enter  0xb95c,0x21
  417fde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417fdf:	test   al,0xa8
  417fe1:	xor    ah,BYTE PTR [eax-0x3affc32e]
  417fe7:	mov    edx,0xd7301482
  417fec:	mov    cl,0x33
  417fee:	add    edi,esi
  417ff0:	cmp    al,BYTE PTR [eax]
  417ff2:	adc    eax,0x94cac068
  417ff7:	test   BYTE PTR [ebx+0x4e],bl
  417ffa:	sub    al,0x20
  417ffc:	or     BYTE PTR [eax-0x6],dh
  417fff:	xor    BYTE PTR [esi+0x7ee4116c],ch
  418005:	pop    ecx
  418006:	xor    al,0x58
  418008:	dec    esp
  418009:	pop    ds
  41800a:	and    BYTE PTR [edx],0x85
  41800d:	lahf   
  41800e:	scas   eax,DWORD PTR es:[edi]
  41800f:	mov    edi,0x5214d886
  418014:	jecxz  0x417ffb
  418016:	mov    edi,0x6a39a718
  41801b:	loop   0x417fcd
  41801d:	addr16 pop ebp
  41801f:	or     eax,0x573adf2e
  418024:	mov    cl,0x21
  418026:	push   edi
  418027:	call   0x84cf1786
  41802c:	and    al,0x98
  41802e:	add    BYTE PTR [eax],al
  418030:	add    BYTE PTR [ebx+0x42848d3d],al
  418036:	add    BYTE PTR [eax],al
  418038:	mov    DWORD PTR ds:0x428365,0x1551
  418042:	mov    DWORD PTR ds:0x428575,0x780e
  41804c:	mov    DWORD PTR ds:0x428369,0x4b14
  418056:	jmp    0x418149
  41805b:	mov    DWORD PTR ds:0x428371,edx
  418061:	mov    DWORD PTR ds:0x42836d,0x4140
  41806b:	cmp    DWORD PTR ds:0x42848d,0x0
  418072:	je     0x4180ae
  418078:	push   0x428221
  41807d:	push   0x428187
  418082:	call   DWORD PTR ds:0x42e288
  418088:	mov    ecx,DWORD PTR ds:0x4284c5
  41808e:	xor    ebx,ebx
  418090:	or     ebx,DWORD PTR ds:0x42856d
  418096:	sub    ebx,ecx
  418098:	and    ecx,DWORD PTR [ecx+ebx*1]
  41809b:	mov    ecx,DWORD PTR ds:0x428435
  4180a1:	adc    DWORD PTR ds:0x428531,ecx
  4180a7:	inc    edx
  4180a8:	and    DWORD PTR ds:0x42847d,edi
  4180ae:	adc    DWORD PTR ds:0x428509,edx
  4180b4:	xor    ebx,ebx
  4180b6:	or     ebx,DWORD PTR ds:0x4283e1
  4180bc:	mov    ebx,DWORD PTR [ebx]
  4180be:	sub    DWORD PTR ds:0x428455,ebx
  4180c4:	xor    DWORD PTR ds:0x428519,0x2cb6
  4180ce:	cmp    DWORD PTR ds:0x428495,0x0
  4180d5:	mov    DWORD PTR ds:0x42847d,edx
  4180db:	mov    edx,DWORD PTR ds:0x42850d
  4180e1:	jmp    0x418149
  4180e6:	mov    DWORD PTR ds:0x4285ad,ebx
  4180ec:	cmp    DWORD PTR ds:0x428495,0x0
  4180f3:	jg     0x41811b
  4180f9:	push   0x428441
  4180fe:	push   0x1e32
  418103:	call   DWORD PTR ds:0x42e28c
  418109:	or     DWORD PTR ds:0x428399,ecx
  41810f:	adc    DWORD PTR ds:0x428579,0x3832
  418119:	not    ecx
  41811b:	sub    edx,DWORD PTR ds:0x4284a5
  418121:	mov    edx,DWORD PTR ds:0x4283b9
  418127:	mov    ebx,DWORD PTR ds:0x428541
  41812d:	sub    ebx,edx
  41812f:	sub    edx,DWORD PTR [edx+ebx*1]
  418132:	or     ecx,DWORD PTR ds:0x428579
  418138:	mov    ebx,DWORD PTR ds:0x4283e9
  41813e:	mov    ecx,DWORD PTR ds:0x4285e9
  418144:	sub    ecx,ebx
  418146:	or     ebx,DWORD PTR [ebx+ecx*1]
  418149:	mov    DWORD PTR [esp+0x9c],eax
  418150:	and    DWORD PTR ds:0x428481,ebx
  418156:	mov    eax,DWORD PTR [esp+0x40]
  41815a:	sub    DWORD PTR [esp+0x40],eax
  41815e:	mov    edx,DWORD PTR ds:0x4285ad
  418164:	sub    DWORD PTR ds:0x42848d,edx
  41816a:	lea    eax,[ebp+0x4]
  41816d:	cmp    DWORD PTR ds:0x4285a5,0x0
  418174:	mov    DWORD PTR ds:0x42850d,0x1e13
  41817e:	mov    ecx,0x65ab
  418183:	jmp    0x4181f4
  418188:	mov    ecx,0x6be4
  41818d:	mov    edx,0x487
  418192:	cmp    DWORD PTR ds:0x4285a5,0x0
  418199:	jge    0x4181bd
  41819f:	push   DWORD PTR [ebp-0x1c]
  4181a2:	push   0x28cd
  4181a7:	call   DWORD PTR ds:0x42e100
  4181ad:	sub    DWORD PTR ds:0x4284a5,ebx
  4181b3:	add    DWORD PTR ds:0x4285a9,0x428471
  4181bd:	mov    ebx,DWORD PTR ds:0x428591
  4181c3:	sbb    ebx,DWORD PTR ds:0x428439
  4181c9:	mov    DWORD PTR ds:0x428591,ebx
  4181cf:	mov    edx,DWORD PTR ds:0x4283dd
  4181d5:	mov    ebx,DWORD PTR ds:0x428559
  4181db:	sub    edx,ebx
  4181dd:	add    edx,DWORD PTR [edx+ebx*1]
  4181e0:	mov    ebx,DWORD PTR ds:0x42835d
  4181e6:	and    ebx,DWORD PTR ds:0x428459
  4181ec:	mov    DWORD PTR ds:0x42835d,ebx
  4181f2:	not    edx
  4181f4:	xor    DWORD PTR [esp+0x40],eax
  4181f8:	mov    DWORD PTR [esp+0x30],0x5b3d
  418200:	cmp    DWORD PTR ds:0x42858d,0x0
  418207:	mov    DWORD PTR ds:0x428515,0x564a
  418211:	mov    DWORD PTR ds:0x428495,ecx
  418217:	jmp    0x4184c9
  41821c:	mov    eax,0x378f
  418221:	cmp    DWORD PTR ds:0x42858d,0x0
  418228:	ja     0x41824a
  41822e:	push   0x77e8
  418233:	push   0x361b
  418238:	call   DWORD PTR ds:0x42e104
  41823e:	and    ebx,0x2889
  418244:	not    ebx
  418246:	or     edx,ecx
  418248:	sbb    ecx,ecx
  41824a:	xor    ecx,ecx
  41824c:	xor    ecx,DWORD PTR ds:0x428489
  418252:	adc    DWORD PTR ds:0x42859d,ecx
  418258:	xor    DWORD PTR ds:0x428375,0x4309
  418262:	sub    DWORD PTR ds:0x4283a5,0x3ee2
  41826c:	jmp    0x4184c9
  418271:	inc    esp
  418272:	inc    edx
  418273:	in     al,dx
  418274:	xor    ah,ch
  418276:	mov    eax,0x8987b29c
  41827b:	test   bh,cl
  41827d:	xor    bl,ch
  41827f:	push   esi
  418280:	shl    DWORD PTR [edx+ebp*8-0x40],1
  418284:	mov    esi,0xbebec235
  418289:	dec    ebp
  41828a:	inc    eax
  41828b:	and    eax,0x2b59fd9
  418290:	pop    esp
  418291:	dec    ecx
  418292:	sbb    al,0xad
  418294:	pop    edx
  418295:	mov    dl,0x1b
  418297:	es dec esi
  418299:	je     0x4182a9
  41829b:	xchg   esi,eax
  41829c:	or     ch,ch
  41829e:	dec    edx
  41829f:	int3   
  4182a0:	pop    edi
  4182a1:	cmp    esp,DWORD PTR [ecx-0x5bdbffd]
  4182a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182a8:	sub    dh,BYTE PTR [edi]
  4182aa:	int3   
  4182ab:	mov    al,0xdf
  4182ad:	jne    0x418274
  4182af:	cmc    
  4182b0:	popa   
  4182b1:	jnp    0x418248
  4182b3:	mov    WORD PTR [esi-0x79],cs
  4182b6:	adc    al,BYTE PTR [edx]
  4182b8:	xlat   BYTE PTR ds:[ebx]
  4182b9:	or     DWORD PTR [bx+di],eax
  4182bc:	push   edx
  4182bd:	pop    eax
  4182be:	cmp    eax,0x95b77c28
  4182c3:	shr    ebp,0xbd
  4182c6:	call   DWORD PTR [ebp+0x4c47f365]
  4182cc:	icebp  
  4182cd:	mov    DWORD PTR [ecx],esi
  4182cf:	lds    ecx,FWORD PTR [ebx+0x375431b5]
  4182d5:	cmc    
  4182d6:	lahf   
  4182d7:	mov    BYTE PTR [eax],ch
  4182d9:	pop    ecx
  4182da:	jp     0x4182b9
  4182dc:	xchg   edx,eax
  4182dd:	jb     0x418296
  4182df:	retf   0x4197
  4182e2:	scas   eax,DWORD PTR es:[edi]
  4182e3:	xchg   edx,eax
  4182e4:	je     0x4182cc
  4182e6:	jmp    0xdc034c1a
  4182eb:	sbb    al,0x39
  4182ed:	nop
  4182ee:	(bad)  
  4182f0:	popa   
  4182f1:	jp     0x418342
  4182f3:	and    al,0x40
  4182f5:	cmp    al,0xb
  4182f7:	cli    
  4182f8:	add    BYTE PTR [ebp+0x25],dl
  4182fb:	adc    dl,al
  4182fd:	add    esi,eax
  4182ff:	xchg   ecx,eax
  418300:	xchg   ebx,eax
  418301:	cmc    
  418302:	aaa    
  418303:	and    ah,BYTE PTR [ebx+eax*1]
  418306:	xor    esi,ecx
  418308:	fmul   st(4),st
  41830a:	xchg   ebp,eax
  41830b:	xchg   BYTE PTR [ebp+0x318c8b3e],ch
  418311:	hlt    
  418312:	push   0xffffff90
  418314:	push   ecx
  418315:	jmp    0xaee60f81
  41831a:	call   FWORD PTR cs:[esi+0x4a6e9be6]
  418321:	stos   BYTE PTR es:[edi],al
  418322:	rol    BYTE PTR [ebx+0x4fcf343c],cl
  418328:	sti    
  418329:	(bad)  
  41832a:	in     al,0xf9
  41832c:	mov    dh,al
  41832e:	cs mov esi,fs
  418331:	push   cs
  418332:	sar    BYTE PTR [ecx+ebx*4],cl
  418335:	ins    BYTE PTR es:[edi],dx
  418336:	sbb    al,0x84
  418338:	mov    al,ds:0x30163836
  41833d:	lock add al,0x28
  418340:	stos   DWORD PTR es:[edi],eax
  418341:	mov    bl,0xa5
  418343:	push   0xffffffd6
  418345:	and    ebp,DWORD PTR [esi]
  418347:	inc    ebp
  418348:	sar    DWORD PTR [edx+ebp*8+0x414d00ac],cl
  41834f:	in     eax,dx
  418350:	jno    0x41839f
  418352:	int3   
  418353:	mov    dl,0x4e
  418355:	inc    edi
  418356:	repnz daa 
  418358:	scas   al,BYTE PTR es:[edi]
  418359:	pop    edi
  41835a:	sbb    al,0x84
  41835c:	push   ecx
  41835d:	(bad)  
  41835f:	adc    BYTE PTR [edx-0x13f536f9],ch
  418365:	xor    DWORD PTR [ebx],esi
  418367:	out    dx,eax
  418368:	jp     0x418373
  41836a:	adc    DWORD PTR [edi],ebp
  41836c:	lea    edx,[edx+0x4a]
  41836f:	rcr    BYTE PTR [eax+esi*2],0x5b
  418373:	mov    esp,0x58f30f7e
  418378:	push   0x26
  41837a:	out    0x1a,eax
  41837c:	xor    bl,BYTE PTR [esp]
  41837f:	rol    BYTE PTR [ecx],cl
  418381:	aaa    
  418382:	xchg   ebp,eax
  418383:	dec    ebx
  418384:	cmp    al,ah
  418386:	mov    esp,0x9601d381
  41838b:	push   edi
  41838c:	in     eax,0xfd
  41838e:	imul   ebp,DWORD PTR [eax],0x9c8f72d6
  418394:	aaa    
  418395:	mov    eax,0x8d3096b2
  41839a:	jg     0x41832c
  41839c:	lods   eax,DWORD PTR ds:[esi]
  41839d:	xor    ch,ch
  41839f:	pop    ds
  4183a0:	das    
  4183a1:	or     eax,0x947d06f9
  4183a6:	stos   BYTE PTR es:[edi],al
  4183a7:	(bad)  
  4183a8:	in     eax,dx
  4183a9:	pop    eax
  4183aa:	repz fisubr WORD PTR [edx+0x18baa5]
  4183b1:	stos   DWORD PTR es:[edi],eax
  4183b2:	sar    DWORD PTR ds:0x462fcb43,1
  4183b8:	pop    esi
  4183b9:	es leave 
  4183bb:	nop
  4183bc:	and    ebp,DWORD PTR [esi+0x711bc990]
  4183c2:	xchg   edi,eax
  4183c3:	add    DWORD PTR [ecx+0x6aca61ab],esi
  4183c9:	fcmove st,st(4)
  4183cb:	jl     0x41842d
  4183cd:	push   ds
  4183ce:	mov    ecx,0xa8b8e440
  4183d3:	cwde   
  4183d4:	bound  esi,QWORD PTR [ecx+0x39]
  4183d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4183d8:	mov    WORD PTR [edx+0x79],cs
  4183db:	xor    bh,al
  4183dd:	out    dx,al
  4183de:	cmp    DWORD PTR [ecx+0x4b],ebp
  4183e1:	and    BYTE PTR [esi+eiz*4+0x3b],dh
  4183e5:	addr16 gs ret 0xec55
  4183ea:	push   ecx
  4183eb:	fild   WORD PTR [eax-0x3bfb5cb]
  4183f1:	lock mov WORD PTR [ebp-0x5f],fs
  4183f5:	inc    eax
  4183f6:	ins    BYTE PTR es:[edi],dx
  4183f7:	mov    bl,al
  4183f9:	ret    
  4183fa:	fdiv   DWORD PTR [ecx+edi*2+0x11]
  4183fe:	retf   0x6ce0
  418401:	jecxz  0x4183e4
  418403:	mov    eax,es
  418405:	aad    0x16
  418407:	push   esp
  418408:	push   0x5ed272f3
  41840d:	jmp    0x4183ae
  41840f:	adc    ah,BYTE PTR [eax]
  418411:	test   BYTE PTR [ebx],cl
  418413:	hlt    
  418414:	cmp    DWORD PTR [ebx],0xe31c787
  41841a:	mov    ?,esi
  41841c:	dec    esi
  41841d:	ja     0x4183ac
  41841f:	neg    DWORD PTR [edi+eax*1-0x7c]
  418423:	push   ecx
  418424:	mov    ebx,0x5f9924f5
  418429:	ins    BYTE PTR es:[edi],dx
  41842a:	fnsave [eax+ecx*8-0x4aa358fd]
  418431:	cli    
  418432:	clc    
  418433:	dec    ecx
  418434:	mov    ebp,0x2bb93c15
  418439:	or     ecx,DWORD PTR [eax+0x21f18c62]
  41843f:	mov    WORD PTR [ecx+0x39],es
  418442:	ins    BYTE PTR es:[edi],dx
  418443:	cmp    ah,0x7a
  418446:	shl    dh,cl
  418448:	pop    esp
  418449:	ss xor dl,bh
  41844c:	xor    DWORD PTR [esi],ebp
  41844e:	(bad)  
  41844f:	rol    dh,cl
  418451:	outs   dx,BYTE PTR ds:[esi]
  418452:	cli    
  418453:	pop    edx
  418454:	sbb    al,0xd0
  418457:	dec    eax
  418458:	jmp    0x4183e4
  41845a:	xchg   esp,eax
  41845b:	cmp    BYTE PTR [ecx+0x56],ah
  41845e:	mov    WORD PTR [edi-0x15],ss
  418461:	les    esp,FWORD PTR [edi+esi*1]
  418464:	xor    BYTE PTR [esi+edi*8+0x16],ah
  418468:	xchg   BYTE PTR [edi],ch
  41846a:	out    0xce,al
  41846c:	inc    esp
  41846d:	push   edx
  41846e:	out    dx,eax
  41846f:	xor    BYTE PTR [edi+0x45],al
  418472:	icebp  
  418473:	sahf   
  418474:	mov    al,ds:0xfc5989b9
  418479:	push   ss
  41847a:	xchg   ebx,eax
  41847b:	fwait
  41847c:	xchg   esi,eax
  41847d:	push   esi
  41847e:	jp     0x4184ea
  418480:	mov    eax,ds:0x5e5373fd
  418485:	rol    BYTE PTR [ebp+0x1c],1
  418488:	add    DWORD PTR [edi+0x15],esp
  41848b:	adc    al,0x10
  41848d:	inc    ebp
  41848e:	fisubr WORD PTR [ecx]
  418490:	sbb    BYTE PTR [ebx],al
  418492:	scas   al,BYTE PTR es:[edi]
  418493:	sbb    ecx,DWORD PTR [ebx]
  418495:	xchg   ecx,eax
  418496:	sbb    ebx,DWORD PTR [ebx+0x585146c4]
  41849c:	inc    ebx
  41849d:	jbe    0x4184bf
  41849f:	cmp    cl,BYTE PTR [ecx+0x5]
  4184a2:	mov    esi,0x8eef0560
  4184a7:	push   ebx
  4184a8:	or     eax,0x1de91e29
  4184ad:	(bad)  
  4184ae:	out    0x76,eax
  4184b0:	js     0x4184d3
  4184b2:	ins    DWORD PTR es:[edi],dx
  4184b3:	dec    edi
  4184b4:	lods   al,BYTE PTR ds:[esi]
  4184b5:	outs   dx,DWORD PTR ds:[esi]
  4184b6:	call   0xafe7cb46
  4184bb:	mov    BYTE PTR [ebx+edi*1],dh
  4184be:	adc    DWORD PTR [eax+ebx*4],esi
  4184c1:	and    esi,DWORD PTR [edx-0x13e2e209]
  4184c7:	adc    DWORD PTR [esi],ebp
  4184c9:	mov    DWORD PTR [esp+0x34],0x4445
  4184d1:	mov    DWORD PTR [esp+0x10],0xa52
  4184d9:	mov    DWORD PTR [esp+0x14],0x1c69
  4184e1:	mov    eax,DWORD PTR [esp+0x10]
  4184e5:	mov    ecx,DWORD PTR [esp+0x14]
  4184e9:	mov    edx,DWORD PTR [esp+0x30]
  4184ed:	mov    ebx,DWORD PTR [esp+0x34]
  4184f1:	add    eax,0xffffd1a5
  4184f6:	adc    ecx,0xffffedf0
  4184fc:	xor    eax,edx
  4184fe:	xor    ecx,ebx
  418500:	and    eax,0x325d
  418505:	mov    DWORD PTR [esp+0x50],eax
  418509:	and    ecx,0x3544
  41850f:	mov    DWORD PTR [esp+0x54],ecx
  418513:	mov    DWORD PTR [esp+0x48],0x1704
  41851b:	mov    DWORD PTR [esp+0x4c],0x4a75
  418523:	mov    DWORD PTR [esp+0x30],0x985
  41852b:	mov    DWORD PTR [esp+0x34],0x341
  418533:	mov    DWORD PTR [esp+0x10],0x5aa9
  41853b:	mov    DWORD PTR [esp+0x14],0x221a
  418543:	mov    eax,DWORD PTR [esp+0x10]
  418547:	mov    ecx,DWORD PTR [esp+0x14]
  41854b:	mov    edx,DWORD PTR [esp+0x30]
  41854f:	mov    ebx,DWORD PTR [esp+0x34]
  418553:	push   ebx
  418554:	push   edx
  418555:	or     ecx,0xc32
  41855b:	or     eax,0x502a
  418560:	push   ecx
  418561:	push   eax
  418562:	call   0x41594e
  418567:	mov    ecx,DWORD PTR [esp+0x48]
  41856b:	mov    ebx,DWORD PTR [esp+0x4c]
  41856f:	sub    eax,ecx
  418571:	mov    ecx,DWORD PTR [esp+0x50]
  418575:	sbb    edx,ebx
  418577:	mov    ebx,DWORD PTR [esp+0x54]
  41857b:	cmp    ecx,eax
  41857d:	jne    0x41858b
  418583:	cmp    ebx,edx
  418585:	je     0x41a937
  41858b:	mov    DWORD PTR [esp+0x30],0x71ba
  418593:	mov    DWORD PTR [esp+0x34],0x5f78
  41859b:	mov    DWORD PTR [esp+0x10],0x7b9c
  4185a3:	mov    DWORD PTR [esp+0x14],0x5622
  4185ab:	mov    eax,DWORD PTR [esp+0x10]
  4185af:	mov    ecx,DWORD PTR [esp+0x14]
  4185b3:	mov    edx,DWORD PTR [esp+0x30]
  4185b7:	mov    ebx,DWORD PTR [esp+0x34]
  4185bb:	jmp    0x418818
  4185c0:	inc    edi
  4185c1:	pop    ebp
  4185c2:	sti    
  4185c3:	daa    
  4185c4:	sti    
  4185c5:	mov    ebx,0x271b9d9b
  4185ca:	mov    esp,0x703b10a4
  4185cf:	fstp   st(4)
  4185d1:	out    dx,eax
  4185d2:	sar    BYTE PTR [esi-0x41413dcb],0xce
  4185d9:	jg     0x41855c
  4185db:	mov    al,ah
  4185dd:	jg     0x41860f
  4185df:	fidiv  DWORD PTR [edi-0x14290b49]
  4185e5:	lods   al,BYTE PTR ds:[esi]
  4185e6:	adc    al,0xf8
  4185e8:	dec    eax
  4185e9:	mov    edi,0xb7351b42
  4185ee:	xchg   esi,eax
  4185ef:	xchg   ebx,eax
  4185f0:	std    
  4185f1:	xchg   ebx,eax
  4185f2:	add    DWORD PTR [eax-0x5694214f],esi
  4185f8:	inc    edi
  4185f9:	dec    esi
  4185fa:	inc    DWORD PTR [ebx+ecx*8-0x6196459f]
  418601:	cmp    al,0x5e
  418603:	stc    
  418604:	imul   ecx,ebx,0xffffffd2
  418607:	fld    TBYTE PTR [ecx]
  418609:	push   ebx
  41860a:	mov    esp,0xfdb46076
  41860f:	inc    ebx
  418610:	push   edi
  418611:	ds pop ebp
  418613:	(bad)  
  418614:	dec    esp
  418615:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418616:	mov    esi,?
  418618:	adc    ebx,DWORD PTR [edi-0x3]
  41861b:	inc    ecx
  41861c:	push   0xffffffad
  41861e:	jno    0x4185a3
  418620:	jg     0x418644
  418622:	mov    bh,0x1b
  418624:	pop    ss
  418625:	mov    dl,0xa9
  418627:	ffreep st(1)
  418629:	inc    eax
  41862a:	(bad)  
  41862b:	mov    ebp,0xf16d1fa1
  418630:	xchg   BYTE PTR [ebx],bh
  418632:	int3   
  418633:	mov    ebp,0xa1936c14
  418638:	frstor [edi+0x7f08f5a9]
  41863e:	xchg   dh,dh
  418640:	in     eax,dx
  418641:	add    eax,0x25c0ab3e
  418646:	rcr    BYTE PTR [ebp-0x71],cl
  418649:	mov    gs:0x574b366f,eax
  41864f:	shl    DWORD PTR [edx+0x2db282f6],0x5c
  418656:	xor    al,0x68
  418658:	sub    ebx,edi
  41865a:	adc    cl,BYTE PTR [ebx]
  41865c:	pop    ss
  41865d:	and    al,0x1e
  41865f:	mov    WORD PTR [edx],ds
  418661:	jp     0x4186a8
  418663:	add    ecx,ecx
  418665:	pop    esi
  418666:	mov    ecx,0x79440ba9
  41866b:	ret    
  41866c:	sahf   
  41866d:	(bad)  
  41866e:	push   edi
  41866f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418670:	push   esp
  418671:	stc    
  418672:	pusha  
  418673:	jns    0x418633
  418675:	mov    ds:0x5761112,eax
  41867a:	int3   
  41867b:	or     al,0x43
  41867d:	mov    edx,0xc2e600d8
  418682:	mov    ss,WORD PTR [esi-0x13]
  418685:	add    bl,BYTE PTR [eax+ebp*8+0x2121c09]
  41868c:	push   ebp
  41868d:	test   eax,0x31a0c17c
  418692:	jle    0x41869b
  418694:	outs   dx,BYTE PTR ds:[esi]
  418695:	repnz es bnd jae 0x41864e
  41869a:	mov    bh,0x20
  41869c:	mov    edi,0x1d8d6f8f
  4186a1:	and    DWORD PTR [ebp-0x5f],esi
  4186a4:	mov    eax,ds:0x2cded9b3
  4186a9:	inc    ebx
  4186aa:	xchg   esp,eax
  4186ab:	xchg   ebp,eax
  4186ac:	adc    al,0x3a
  4186ae:	popa   
  4186af:	outs   dx,DWORD PTR ds:[esi]
  4186b0:	pop    eax
  4186b1:	or     ebp,DWORD PTR [edx]
  4186b3:	mov    ch,al
  4186b5:	jecxz  0x41864f
  4186b7:	pop    ds
  4186b8:	xchg   ebp,eax
  4186b9:	in     eax,0x33
  4186bb:	lds    ebp,FWORD PTR [edx+ebp*8+0x75]
  4186bf:	outs   dx,DWORD PTR ds:[esi]
  4186c0:	mov    eax,0x6d89de5e
  4186c5:	hlt    
  4186c6:	cmp    eax,edx
  4186c8:	jl     0x418744
  4186ca:	loopne 0x418739
  4186cc:	and    BYTE PTR [ecx-0x5],bh
  4186cf:	mov    cl,0xa7
  4186d1:	sbb    al,0xe7
  4186d3:	mov    ebx,ebx
  4186d5:	stc    
  4186d6:	ret    0xde30
  4186d9:	fisub  DWORD PTR [eax-0x48]
  4186dc:	push   ecx
  4186dd:	sti    
  4186de:	push   ds
  4186df:	leave  
  4186e0:	push   edx
  4186e1:	push   ds
  4186e2:	jb     0x41871a
  4186e4:	mov    eax,0x60c4729d
  4186e9:	sbb    eax,0xc1c839c2
  4186ee:	adc    BYTE PTR [ebx-0x69488037],al
  4186f4:	cmp    bl,BYTE PTR [edi]
  4186f6:	dec    ebp
  4186f7:	pop    esi
  4186f8:	gs push esp
  4186fa:	dec    edi
  4186fb:	lods   eax,DWORD PTR ds:[esi]
  4186fc:	mov    ch,0x72
  4186fe:	mov    edi,eax
  418700:	mov    bh,0xed
  418702:	pusha  
  418703:	and    al,0xdb
  418705:	retf   
  418706:	xlat   BYTE PTR ds:[ebx]
  418707:	fwait
  418708:	cs dec ebx
  41870a:	in     eax,0xf3
  41870c:	mov    dl,0x3a
  41870e:	scas   eax,DWORD PTR es:[edi]
  41870f:	and    DWORD PTR [ebx+0x59565a6c],edi
  418715:	test   DWORD PTR [eax],esp
  418717:	sub    eax,0x7e037786
  41871c:	fcomi  st,st(0)
  41871e:	test   ah,0x2f
  418721:	jb     0x418770
  418723:	(bad)  
  418724:	mov    BYTE PTR [edi],cl
  418726:	popa   
  418727:	or     al,dh
  418729:	int3   
  41872a:	xchg   DWORD PTR [esp+ebx*8-0x71],eax
  41872e:	and    eax,0xe342addc
  418733:	mov    ds:0x3ad1b4be,eax
  418738:	jmp    0x4186bb
  41873a:	mov    eax,0x5235a16
  41873f:	push   esp
  418740:	imul   edx,DWORD PTR [edi+ecx*2],0x58
  418744:	sbb    cl,al
  418746:	push   ebx
  418747:	mov    ds:0x3209ce3f,eax
  41874c:	xchg   edx,eax
  41874d:	mov    ebx,0x92e24899
  418752:	dec    esp
  418753:	fdivrp st(5),st
  418755:	aaa    
  418756:	dec    ecx
  418757:	jmp    0x8bbfb25e
  41875c:	xor    DWORD PTR [ecx+0x29],ecx
  41875f:	lea    edx,[esi]
  418761:	stc    
  418762:	mov    WORD PTR [edx+0x76d6aeee],es
  418768:	adc    ah,BYTE PTR [esi]
  41876a:	std    
  41876b:	pop    edx
  41876c:	mov    dh,0x38
  41876e:	cmp    bl,BYTE PTR [esi]
  418770:	cmp    al,0xc9
  418772:	adc    ecx,DWORD PTR [ecx]
  418774:	adc    eax,0x5e59ceea
  418779:	xor    BYTE PTR [edx+0x3ba2d2b3],bl
  41877f:	in     eax,dx
  418780:	sbb    cl,BYTE PTR [ebx+0x6b0f02ab]
  418786:	adc    eax,0x94810034
  41878b:	and    esp,DWORD PTR [ebx+0x33ae023e]
  418791:	cwde   
  418792:	sbb    ebx,DWORD PTR [ebx+0x1d]
  418795:	icebp  
  418796:	jns    0x418785
  418798:	sub    bl,bh
  41879a:	aam    0x98
  41879c:	add    eax,0xee94a3bc
  4187a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4187a2:	add    DWORD PTR [eax-0x5acb634f],esp
  4187a8:	xchg   BYTE PTR [esi+esi*4+0x4f4844fa],bl
  4187af:	cld    
  4187b0:	shl    DWORD PTR [ecx],cl
  4187b2:	scas   eax,DWORD PTR es:[edi]
  4187b3:	retf   
  4187b4:	jns    0x4187d6
  4187b6:	push   ecx
  4187b7:	icebp  
  4187b8:	or     al,0x85
  4187ba:	sub    dh,BYTE PTR [edx-0x5b3f5d43]
  4187c0:	jae    0x41876a
  4187c2:	push   esp
  4187c3:	div    DWORD PTR [eax-0x3e]
  4187c6:	mov    ah,0x30
  4187c8:	(bad)  
  4187c9:	push   ebx
  4187ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187cb:	sbb    dh,BYTE PTR [edx]
  4187cd:	mov    ebp,DWORD PTR [ecx+0x38]
  4187d0:	in     al,0x3
  4187d2:	test   BYTE PTR [eax+0x1c4f91c4],0xdc
  4187d9:	cmp    bl,ch
  4187db:	pop    esi
  4187dc:	into   
  4187dd:	int    0xdd
  4187df:	cmp    al,BYTE PTR [ebp-0x2eb106ed]
  4187e5:	mov    cl,0xc0
  4187e7:	jp     0x4187a8
  4187e9:	stos   DWORD PTR es:[edi],eax
  4187ea:	add    DWORD PTR [esi-0x1eedeeeb],esi
  4187f0:	cli    
  4187f1:	pop    edx
  4187f2:	das    
  4187f3:	mov    ah,0x28
  4187f5:	xchg   esp,eax
  4187f6:	xor    al,0x36
  4187f8:	jbe    0x41885b
  4187fa:	scas   eax,DWORD PTR es:[edi]
  4187fb:	add    bh,BYTE PTR [ebp-0x5]
  4187fe:	mov    ecx,0x69ac8d16
  418803:	pop    ds
  418804:	adc    al,0x20
  418806:	dec    DWORD PTR [ecx]
  418808:	mov    DWORD PTR [esi],eax
  41880a:	shl    ecx,cl
  41880c:	ret    0xeca8
  41880f:	or     al,BYTE PTR [ecx]
  418811:	push   ss
  418812:	xlat   BYTE PTR ds:[ebx]
  418813:	and    eax,0xa2a95223
  418818:	add    eax,0x3646
  41881d:	adc    ecx,0x7ace
  418823:	xor    eax,0x3e2e
  418828:	xor    ecx,0x4b71
  41882e:	and    eax,edx
  418830:	mov    DWORD PTR [esp+0x88],eax
  418837:	and    ecx,ebx
  418839:	mov    DWORD PTR [esp+0x8c],ecx
  418840:	mov    DWORD PTR [esp+0x50],0x18d6
  418848:	mov    DWORD PTR [esp+0x54],0x2bb4
  418850:	mov    DWORD PTR [esp+0x48],0x14
  418858:	mov    DWORD PTR [esp+0x4c],0x0
  418860:	mov    DWORD PTR [esp+0x30],0x1
  418868:	mov    DWORD PTR [esp+0x34],0x0
  418870:	mov    DWORD PTR [esp+0x10],0xa87
  418878:	mov    DWORD PTR [esp+0x14],0x7fd9
  418880:	jmp    0x418add
  418885:	mov    dh,0xe5
  418887:	jmp    0x836c:0xb814b913
  41888e:	adc    DWORD PTR [esi-0x4900bf70],ebx
  418894:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418895:	push   ebx
  418896:	repz sar BYTE PTR [esi-0x41413dcb],0x10
  41889e:	in     eax,dx
  41889f:	stos   BYTE PTR es:[edi],al
  4188a0:	xchg   ecx,eax
  4188a1:	in     al,dx
  4188a2:	mov    cl,0xdd
  4188a4:	mov    ds:0x8367089b,eax
  4188a9:	xor    bl,cl
  4188ab:	add    ecx,esi
  4188ad:	cwde   
  4188ae:	adc    cl,BYTE PTR [ebp+0x13827d46]
  4188b4:	add    ah,BYTE PTR [edx-0x6c]
  4188b7:	mov    dl,0xbd
  4188b9:	scas   al,BYTE PTR es:[edi]
  4188ba:	je     0x4188e3
  4188bc:	rol    DWORD PTR [eax+0x6ca450dd],0x55
  4188c3:	mov    bl,0x97
  4188c5:	sbb    edx,DWORD PTR [edx+edi*2]
  4188c8:	add    eax,edi
  4188ca:	mov    ch,0x90
  4188cc:	jge    0x418938
  4188ce:	call   DWORD PTR [ecx]
  4188d0:	scas   eax,DWORD PTR es:[edi]
  4188d1:	and    ebx,ebx
  4188d3:	lds    ebx,FWORD PTR [esi+ebp*8-0x35eeb653]
  4188da:	or     DWORD PTR [ecx],edi
  4188dc:	popf   
  4188dd:	fistp  QWORD PTR [edi+0x2d4920b9]
  4188e3:	test   BYTE PTR [edi+0x15d789ef],0x8d
  4188ea:	adc    cl,BYTE PTR [eax-0x43]
  4188ed:	adc    cl,al
  4188ef:	imul   ecx
  4188f1:	cli    
  4188f2:	pop    ss
  4188f3:	adc    dl,BYTE PTR fs:[eax]
  4188f6:	adc    al,0xa2
  4188f8:	rol    DWORD PTR [eax+0x2878c70d],0x1c
  4188ff:	int    0xf0
  418901:	repnz sti 
  418903:	sbb    BYTE PTR [edi-0x23b0aa79],al
  418909:	xor    eax,0xaad1ef80
  41890e:	out    0x51,al
  418910:	inc    esi
  418911:	xchg   esp,eax
  418912:	or     esp,edx
  418914:	imul   ebx,DWORD PTR [eax+0x3eac4009],0xffffffcf
  41891b:	or     eax,0x983ca4a4
  418920:	sahf   
  418921:	cmc    
  418922:	adc    DWORD PTR [esp+ebp*4+0x303b1951],edx
  418929:	pop    ds
  41892a:	shr    DWORD PTR [esi],0x7e
  41892d:	in     eax,0x17
  41892f:	lock call 0xc11c1c5a
  418935:	ror    DWORD PTR [ecx],cl
  418937:	fbstp  TBYTE PTR [edi+0x57e8db7c]
  41893d:	popa   
  41893e:	lahf   
  41893f:	mov    DWORD PTR [ecx],ebx
  418941:	fneni(8087 only) 
  418943:	gs call 0x4cf6:0x577a0043
  41894b:	or     al,BYTE PTR [ecx-0x6ff85007]
  418951:	ins    BYTE PTR es:[edi],dx
  418952:	mov    al,es:0x831331a
  418958:	xchg   DWORD PTR [edx+edi*8+0x5bfa8cce],edx
  41895f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418960:	mov    DWORD PTR [eax],0xece6411c
  418966:	sub    dl,0x79
  418969:	adc    eax,0x8a76a4cb
  41896f:	test   DWORD PTR [ecx+0x20],0x5dacb9e0
  418976:	inc    eax
  418977:	dec    ebp
  418978:	out    0xda,eax
  41897a:	lock xchg esp,eax
  41897c:	inc    ecx
  41897d:	adc    bh,BYTE PTR [edi]
  41897f:	jmp    0x418923
  418981:	sbb    bl,bl
  418983:	jns    0x4189f2
  418985:	jp     0x4189a2
  418987:	cmp    eax,0xb50c7dbe
  41898c:	mov    al,ds:0x3d5ddd11
  418991:	aas    
  418992:	sub    BYTE PTR [edx+eiz*2],bl
  418995:	or     eax,0xef41897f
  41899a:	cwde   
  41899b:	fstp   TBYTE PTR [edi+0x4f]
  41899e:	mov    ecx,0x1f70a35a
  4189a3:	stos   DWORD PTR es:[edi],eax
  4189a4:	adc    dl,BYTE PTR [eax-0x28]
  4189a7:	aam    0xf2
  4189a9:	ds lahf 
  4189ab:	lock lea ecx,[edx]
  4189ae:	mov    esi,0xa238b4da
  4189b3:	or     DWORD PTR [esi-0x5af53ae1],edi
  4189b9:	fwait
  4189ba:	jmp    0x4189aa
  4189bc:	mov    dl,0x53
  4189be:	push   edi
  4189bf:	xor    ecx,DWORD PTR [edx-0x59]
  4189c2:	cmp    dh,BYTE PTR [esi]
  4189c4:	jge    0x4189bf
  4189c6:	jne    0x4189e1
  4189c8:	mov    eax,ds:0xfac5970d
  4189cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4189ce:	jno    0x418a38
  4189d0:	ss cmp edi,edx
  4189d3:	pushf  
  4189d4:	and    BYTE PTR [ebp+0x31],dl
  4189d7:	push   eax
  4189d8:	sub    edi,DWORD PTR [edx-0x64]
  4189db:	and    DWORD PTR [edi],edx
  4189dd:	(bad)  
  4189df:	not    edi
  4189e1:	jle    0x4189d0
  4189e3:	jmp    DWORD PTR [ebx-0x2e]
  4189e6:	iret   
  4189e7:	xchg   esi,eax
  4189e8:	adc    eax,0x97e8cdc3
  4189ed:	mov    al,0x74
  4189ef:	pusha  
  4189f0:	push   ebx
  4189f1:	adc    DWORD PTR [esi],edi
  4189f3:	jne    0x418a67
  4189f5:	dec    eax
  4189f6:	mov    ebx,0x4d8e8e23
  4189fb:	pop    ds
  4189fc:	in     al,dx
  4189fd:	push   cs
  4189fe:	mov    ebx,0x2097a239
  418a03:	mov    cs:0xb885cd97,eax
  418a09:	inc    edi
  418a0a:	sub    eax,0x775ad7d0
  418a0f:	imul   esi,edi,0x19
  418a12:	mov    BYTE PTR [ecx],bh
  418a14:	jmp    0x418a76
  418a16:	xchg   BYTE PTR [ebx+0x7d566753],dh
  418a1c:	lds    ecx,FWORD PTR [edi-0x58]
  418a1f:	push   ecx
  418a20:	lock js 0x418a99
  418a23:	test   DWORD PTR [edi+ebx*8],esi
  418a26:	aam    0xb
  418a28:	push   esp
  418a29:	shl    DWORD PTR [edi],1
  418a2b:	(bad)  
  418a2c:	mov    ah,0x3a
  418a2e:	popa   
  418a2f:	and    al,0x9d
  418a31:	xchg   esp,eax
  418a32:	xchg   ecx,eax
  418a33:	adc    ebp,ebx
  418a35:	and    dh,ah
  418a37:	mov    ebx,esi
  418a39:	xor    DWORD PTR [ecx+0x5eae78b4],eax
  418a3f:	mov    eax,ds:0x11072a56
  418a44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a45:	and    al,0x9e
  418a47:	icebp  
  418a48:	or     dh,0x78
  418a4b:	loop   0x418a85
  418a4d:	aam    0xd8
  418a4f:	xor    BYTE PTR [ecx],0x48
  418a52:	dec    eax
  418a53:	mov    ecx,0xb7087279
  418a58:	addr16 in eax,dx
  418a5a:	and    eax,0x442cecfb
  418a5f:	mul    DWORD PTR [eax]
  418a61:	mov    ecx,0xbda5ebf1
  418a66:	dec    edx
  418a67:	iret   
  418a68:	mov    ebp,0x5d3913f3
  418a6d:	pop    edi
  418a6e:	in     eax,dx
  418a6f:	in     eax,0x3b
  418a71:	fld    TBYTE PTR [ebp-0xce951b0]
  418a77:	shl    ah,1
  418a79:	mov    dh,0x72
  418a7b:	mov    ds:0xd7ecb247,al
  418a81:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a83:	call   0x535f:0xe37c049c
  418a8a:	scas   al,BYTE PTR es:[edi]
  418a8b:	(bad)  
  418a8c:	and    eax,0x2d53e4c5
  418a91:	call   ebp
  418a93:	sti    
  418a94:	mov    edi,0xc667a868
  418a99:	jge    0x418abd
  418a9b:	(bad)  
  418a9c:	ins    DWORD PTR es:[edi],dx
  418a9d:	jo     0x418a35
  418a9f:	lds    esi,FWORD PTR [ecx-0x7a]
  418aa2:	jg     0x418b13
  418aa4:	xor    bl,BYTE PTR [eax]
  418aa6:	mov    al,ds:0xa56c5ee9
  418aab:	sar    BYTE PTR [ebp*4-0x39c58d96],cl
  418ab2:	and    edi,DWORD PTR [esp+edi*4]
  418ab5:	xor    esi,DWORD PTR [edx-0x68]
  418ab8:	inc    esi
  418ab9:	sbb    BYTE PTR [ecx],bh
  418abb:	mov    ds:0xb366fd78,al
  418ac0:	or     BYTE PTR [ebx+eiz*1-0x63bd210],bl
  418ac7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ac8:	cdq    
  418ac9:	stc    
  418aca:	or     esi,esi
  418acc:	inc    edi
  418acd:	imul   DWORD PTR [eax-0x5b]
  418ad0:	fmul   QWORD PTR [ecx+0x5]
  418ad3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ad4:	jmp    0x7144:0xf6641647
  418adb:	neg    DWORD PTR [esi]
  418add:	mov    eax,DWORD PTR [esp+0x10]
  418ae1:	mov    ecx,DWORD PTR [esp+0x14]
  418ae5:	push   0x2
  418ae7:	push   0x7f349462
  418aec:	xor    ecx,0x3601
  418af2:	xor    eax,0x5491
  418af7:	push   ecx
  418af8:	push   eax
  418af9:	call   0x4222ab
  418afe:	mov    ecx,DWORD PTR [esp+0x30]
  418b02:	mov    ebx,DWORD PTR [esp+0x34]
  418b06:	push   ebx
  418b07:	push   ecx
  418b08:	push   edx
  418b09:	push   eax
  418b0a:	call   0x4222ab
  418b0f:	mov    ecx,DWORD PTR [esp+0x48]
  418b13:	mov    ebx,DWORD PTR [esp+0x4c]
  418b17:	jmp    0x418d74
  418b1c:	jp     0x418ac4
  418b1e:	cld    
  418b1f:	dec    eax
  418b20:	cmp    al,0x9c
  418b22:	jp     0x418ae0
  418b24:	js     0x418b9b
  418b26:	push   esp
  418b27:	sahf   
  418b28:	out    0x67,eax
  418b2a:	out    dx,al
  418b2b:	iret   
  418b2c:	retf   
  418b2d:	test   eax,0xbec235be
  418b33:	mov    esi,0xc38b50ae
  418b38:	sub    eax,0x122ba4e7
  418b3d:	mov    bl,0x63
  418b3f:	pop    edx
  418b40:	or     bh,BYTE PTR [edx+0x18a05ad7]
  418b46:	cld    
  418b47:	(bad)  
  418b48:	bound  edx,QWORD PTR [edx-0x51afa2c7]
  418b4e:	(bad)  
  418b50:	scas   eax,DWORD PTR es:[edi]
  418b51:	retf   0xc585
  418b54:	cwde   
  418b55:	dec    edx
  418b56:	inc    edi
  418b57:	call   0x9c69:0x858faf1d
  418b5e:	push   esp
  418b5f:	pop    ds
  418b60:	stos   BYTE PTR es:[edi],al
  418b61:	xchg   BYTE PTR [edx-0x2ca6ba67],cl
  418b67:	mov    ecx,0xfff6cc93
  418b6c:	fs loopne 0x418afd
  418b6f:	out    0x91,al
  418b71:	push   esi
  418b72:	sub    dh,bh
  418b74:	lds    edx,FWORD PTR ds:0x1761bfd9
  418b7a:	stos   DWORD PTR es:[edi],eax
  418b7b:	loop   0x418bf8
  418b7d:	add    eax,0xd03292bc
  418b82:	pop    ecx
  418b83:	fistp  QWORD PTR [ecx-0x49f42d39]
  418b89:	rcr    dl,0x59
  418b8c:	sub    al,0x58
  418b8e:	shl    bh,cl
  418b90:	push   cs
  418b91:	pop    esi
  418b92:	iret   
  418b93:	out    dx,al
  418b94:	scas   eax,DWORD PTR es:[edi]
  418b95:	pop    es
  418b96:	pop    ebx
  418b97:	and    bh,BYTE PTR [eax+ebp*1+0x7c]
  418b9b:	add    dh,dl
  418b9d:	in     al,0xa5
  418b9f:	sub    DWORD PTR [ecx],esi
  418ba1:	stos   DWORD PTR es:[edi],eax
  418ba2:	adc    edx,ecx
  418ba4:	test   BYTE PTR [edi+0x3c],0x12
  418ba8:	and    BYTE PTR [edx+0x4f],dh
  418bab:	fcom   st(5)
  418bad:	mov    bh,bl
  418baf:	test   DWORD PTR [esi+esi*4],0x78856015
  418bb6:	mov    ah,0x25
  418bb8:	outs   dx,DWORD PTR ds:[esi]
  418bb9:	jg     0x418c00
  418bbb:	adc    al,0xc3
  418bbd:	ret    
  418bbe:	pop    ebx
  418bbf:	pusha  
  418bc0:	jnp    0x418baa
  418bc2:	sbb    ebx,DWORD PTR [ebx+0x42]
  418bc5:	cmp    al,0xbe
  418bc7:	or     eax,0xa757e9d8
  418bcc:	mov    DWORD PTR [ecx],eax
  418bce:	pop    ss
  418bcf:	add    ch,al
  418bd1:	fwait
  418bd2:	sbb    BYTE PTR ds:0xc6ed4cc1,ch
  418bd8:	add    esp,DWORD PTR [ebx+0x2]
  418bdb:	fld    TBYTE PTR [edi+0x72]
  418bde:	fs mov dh,0x46
  418be1:	push   ss
  418be2:	pop    es
  418be3:	les    ecx,FWORD PTR [ebp-0xb6384e0]
  418be9:	out    0x82,eax
  418beb:	push   edx
  418bec:	(bad)  
  418bed:	mov    eax,eax
  418bef:	pop    ecx
  418bf0:	xor    DWORD PTR [esi],ebx
  418bf2:	push   ds
  418bf3:	dec    ebp
  418bf4:	(bad)  [ebx+0x46]
  418bf7:	pushf  
  418bf8:	jg     0x418c50
  418bfa:	repz dec ebp
  418bfc:	das    
  418bfd:	mov    esi,0x9b220601
  418c02:	imul   ebx,DWORD PTR [ebx+ebp*2-0x79],0xffffffe3
  418c07:	cmp    eax,0x5c434c06
  418c0c:	loopne 0x418bdf
  418c0e:	clc    
  418c0f:	repnz shl BYTE PTR cs:[esi],0xea
  418c14:	adc    ah,BYTE PTR [eax+0x79dbc36f]
  418c1a:	and    ch,BYTE PTR [ebx-0x610fa9fe]
  418c20:	stos   BYTE PTR es:[edi],al
  418c21:	adc    edx,DWORD PTR [ebx+0x2b3c05fd]
  418c27:	add    al,0x76
  418c29:	jmp    0xafee:0x128a45b9
  418c30:	cmp    al,0x9b
  418c32:	mov    ds:0x66868d9d,al
  418c37:	sub    BYTE PTR [esi+0x47fe654f],al
  418c3d:	call   0x6e47:0x67cdffc8
  418c44:	jecxz  0x418bd6
  418c46:	dec    ebx
  418c47:	ja     0x418bee
  418c49:	imul   esp,DWORD PTR [esi-0x5a],0x5b
  418c4d:	jno    0x418bff
  418c4f:	in     eax,dx
  418c50:	sar    BYTE PTR [ecx],cl
  418c52:	jge    0x418bd5
  418c54:	and    edx,DWORD PTR [ecx]
  418c56:	scas   al,BYTE PTR es:[edi]
  418c57:	das    
  418c58:	push   cs
  418c59:	push   ebx
  418c5a:	pop    edi
  418c5b:	lock test DWORD PTR [eax+0x1d],eax
  418c5f:	mov    ch,BYTE PTR [ebx+0x6e]
  418c62:	sbb    ch,BYTE PTR [edi-0x7a]
  418c65:	mov    ds:0x23d6816,eax
  418c6a:	test   bl,ch
  418c6c:	jbe    0x418c6d
  418c6e:	or     eax,DWORD PTR [ebp-0x76]
  418c71:	mov    ecx,0x602eb972
  418c76:	(bad)  
  418c77:	push   ds
  418c78:	jp     0x418c60
  418c7a:	xchg   ebx,eax
  418c7b:	jne    0x418c8b
  418c7d:	xor    al,0xf6
  418c7f:	stos   BYTE PTR es:[edi],al
  418c80:	or     ch,BYTE PTR [edi]
  418c82:	daa    
  418c83:	push   0x926e9dad
  418c88:	fstp   DWORD PTR [ebp-0x3d]
  418c8b:	retf   0x75ca
  418c8e:	rol    DWORD PTR [ebx],cl
  418c90:	adc    DWORD PTR [edx+0x43],edi
  418c93:	cmp    esi,ebp
  418c95:	fwait
  418c96:	popa   
  418c97:	xchg   esi,eax
  418c98:	mov    ebp,0x94770a5a
  418c9d:	push   ebp
  418c9e:	push   cs
  418c9f:	pop    esp
  418ca0:	cmc    
  418ca1:	(bad)  
  418ca2:	jmp    0x418cfe
  418ca4:	aad    0xc3
  418ca6:	push   esp
  418ca7:	cmp    ecx,edx
  418ca9:	arpl   WORD PTR [edx],sp
  418cab:	outs   dx,BYTE PTR ds:[esi]
  418cac:	ja     0x418c36
  418cae:	pop    edx
  418caf:	adc    ebp,DWORD PTR [edi+0x5b7e9e35]
  418cb5:	xchg   ebx,eax
  418cb6:	mov    bh,0xeb
  418cb8:	jo     0x418ca2
  418cba:	pop    ds
  418cbb:	sub    ebx,DWORD PTR [edi]
  418cbd:	loop   0x418c59
  418cbf:	mov    dl,BYTE PTR [edx+0x28292e7a]
  418cc5:	jnp    0x418c92
  418cc7:	pushw  ds
  418cc9:	add    DWORD PTR [edx-0x6639d3b1],esp
  418ccf:	push   ecx
  418cd0:	fwait
  418cd1:	in     al,dx
  418cd2:	jl     0x418c7d
  418cd4:	loop   0x418cd2
  418cd6:	enter  0xa418,0xc9
  418cda:	jnp    0x418cc3
  418cdc:	call   DWORD PTR [ecx-0x6e2dc39f]
  418ce2:	cwde   
  418ce3:	stc    
  418ce4:	add    esi,ebp
  418ce6:	cmp    al,0xa4
  418ce8:	pop    edi
  418ce9:	inc    edx
  418cea:	push   ecx
  418ceb:	xor    DWORD PTR [ebp-0x6de28c19],0x3c2eddae
  418cf5:	outs   dx,BYTE PTR ds:[esi]
  418cf6:	aas    
  418cf7:	clts   
  418cf9:	sti    
  418cfa:	add    DWORD PTR [ebx],ecx
  418cfc:	dec    edi
  418cfd:	test   BYTE PTR [edx-0x44a1997],dl
  418d03:	jb     0x418ca0
  418d05:	leave  
  418d06:	iret   
  418d07:	jg     0x418d42
  418d09:	imul   ecx,edi,0x31fb6c61
  418d0f:	shr    BYTE PTR [ecx],0xd7
  418d12:	add    al,0xe
  418d14:	or     cl,bl
  418d16:	mov    ?,ecx
  418d18:	out    dx,eax
  418d19:	int3   
  418d1a:	lods   al,BYTE PTR ds:[esi]
  418d1b:	das    
  418d1c:	test   DWORD PTR [ebp+0x2a],eax
  418d1f:	push   ecx
  418d20:	lods   al,BYTE PTR ds:[esi]
  418d21:	sub    eax,DWORD PTR [edi-0x1d]
  418d24:	adc    BYTE PTR [esi+0x104e5ed6],0xc8
  418d2b:	mov    edx,eax
  418d2d:	xchg   BYTE PTR [esi],dl
  418d2f:	sub    BYTE PTR [eax-0x54e07b73],al
  418d35:	dec    edx
  418d36:	ja     0x418d33
  418d38:	push   ds
  418d39:	outs   dx,DWORD PTR ds:[esi]
  418d3a:	push   esp
  418d3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d3c:	loopne 0x418d07
  418d3e:	fwait
  418d3f:	into   
  418d40:	xchg   edi,eax
  418d41:	(bad)  [ebx+ebx*1-0x4f78449f]
  418d48:	jg     0x418d52
  418d4a:	mov    edx,0x71613da0
  418d4f:	sahf   
  418d50:	repnz (bad) 
  418d52:	arpl   WORD PTR [eax+0x68bc002f],dx
  418d58:	mov    bh,0x82
  418d5a:	or     dl,dh
  418d5c:	hlt    
  418d5d:	sbb    ch,BYTE PTR [ebp+0x76]
  418d60:	out    0xbe,eax
  418d62:	adc    BYTE PTR [eax+0x4b45403e],bl
  418d68:	inc    ebp
  418d69:	sbb    DWORD PTR [eax+0x44],0x9501658b
  418d70:	xchg   ecx,eax
  418d71:	pop    es
  418d72:	jge    0x418d4b
  418d74:	push   ebx
  418d75:	push   ecx
  418d76:	push   edx
  418d77:	push   eax
  418d78:	call   0x4222ab
  418d7d:	mov    ecx,DWORD PTR [esp+0x50]
  418d81:	mov    ebx,DWORD PTR [esp+0x54]
  418d85:	add    eax,ecx
  418d87:	mov    ecx,DWORD PTR [esp+0x88]
  418d8e:	adc    edx,ebx
  418d90:	jmp    0x418fed
  418d95:	jmp    0x6c98:0xba87068d
  418d9c:	mov    bl,0x37
  418d9e:	cmc    
  418d9f:	mov    esp,0x8cb287a4
  418da4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418da5:	inc    esp
  418da6:	sti    
  418da7:	sar    BYTE PTR [esi-0x41413dcb],0x2f
  418dae:	test   eax,0xc4991f0
  418db3:	loope  0x418d97
  418db5:	and    al,0x9
  418db7:	adc    al,0xd6
  418db9:	aas    
  418dba:	sub    BYTE PTR [edi],dl
  418dbc:	push   ss
  418dbd:	mov    ebx,0x821ff66a
  418dc2:	mov    ds:0x4d52acc6,eax
  418dc7:	or     eax,0xcd45a30a
  418dcc:	dec    edx
  418dcd:	adc    BYTE PTR [ebx+esi*1],bh
  418dd0:	and    BYTE PTR [ecx+0x6d],0x47
  418dd4:	cmp    dh,BYTE PTR [ecx+esi*2-0x58]
  418dd8:	mov    ch,0x23
  418dda:	mov    ds:0xbcbc2a29,al
  418ddf:	mov    ecx,0xbd32584f
  418de4:	dec    edx
  418de5:	mov    edi,DWORD PTR [eax-0x4dfaa0f4]
  418deb:	pop    esi
  418dec:	inc    ecx
  418ded:	addps  xmm7,XMMWORD PTR [ebp-0x6dc06a70]
  418df4:	inc    eax
  418df5:	xchg   esi,eax
  418df6:	jl     0x418e1e
  418df8:	jae    0x418e02
  418dfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418dfb:	xchg   ecx,eax
  418dfc:	leave  
  418dfd:	sub    edi,DWORD PTR [eax-0x7f87e59d]
  418e03:	pusha  
  418e04:	pushf  
  418e05:	pop    es
  418e06:	shl    DWORD PTR [eax+0x639aec26],1
  418e0c:	inc    edx
  418e0d:	pop    ebp
  418e0e:	in     al,0xa4
  418e10:	test   DWORD PTR [edx-0x31b28514],0xb108bb29
  418e1a:	xchg   edi,eax
  418e1b:	adc    BYTE PTR [ebp-0x7f788453],bl
  418e21:	pop    esi
  418e22:	(bad)  
  418e23:	pop    esp
  418e24:	pushf  
  418e25:	jl     0x418e5e
  418e27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e28:	enter  0xbac4,0x8f
  418e2c:	enter  0x8556,0x30
  418e30:	mov    fs:0xe8b89dc4,al
  418e36:	out    dx,al
  418e37:	into   
  418e38:	mov    DWORD PTR [ebp-0x55],ecx
  418e3b:	lods   al,BYTE PTR ds:[esi]
  418e3c:	js     0x418ea3
  418e3e:	dec    ebx
  418e3f:	or     al,0xff
  418e41:	xchg   edi,eax
  418e42:	jnp    0x418dd6
  418e44:	mov    eax,0x3927a47
  418e49:	cli    
  418e4a:	loop   0x418e1f
  418e4c:	(bad)  
  418e4e:	sbb    ecx,DWORD PTR [edi+0x2a]
  418e51:	jbe    0x418eb6
  418e53:	stos   DWORD PTR es:[edi],eax
  418e54:	out    dx,eax
  418e55:	dec    DWORD PTR [eax+ebx*4-0x6f761fb4]
  418e5c:	out    dx,al
  418e5d:	arpl   bp,ax
  418e5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e60:	dec    eax
  418e61:	push   eax
  418e62:	leave  
  418e63:	enter  0xaf46,0x77
  418e67:	pop    edi
  418e68:	(bad)  
  418e69:	test   DWORD PTR [edi+0x36],edi
  418e6c:	repz lahf 
  418e6e:	shl    DWORD PTR ds:0x3c159ac,1
  418e74:	push   ebx
  418e75:	out    0x46,al
  418e77:	sub    al,0xa4
  418e79:	xor    bh,BYTE PTR [ebx+esi*1+0x74]
  418e7d:	cmp    dl,BYTE PTR [ecx-0x48c4526a]
  418e83:	add    bl,bl
  418e85:	adc    BYTE PTR [edi+eiz*1],dh
  418e88:	cmp    edx,DWORD PTR [ebp+0x4a]
  418e8b:	je     0x418e4b
  418e8d:	push   edi
  418e8e:	or     al,0x8d
  418e90:	rcr    esi,0x7d
  418e93:	fisttp QWORD PTR [ebx+0x5f]
  418e96:	aas    
  418e97:	fmul   QWORD PTR [ebx+0x7db4fd70]
  418e9d:	(bad)  
  418e9f:	mov    edx,0xdcae4f77
  418ea4:	scas   eax,DWORD PTR es:[edi]
  418ea5:	repnz xlat BYTE PTR ds:[ebx]
  418ea7:	mov    eax,ds:0x638f23d
  418eac:	sahf   
  418ead:	jmp    0x1e34:0x76899194
  418eb4:	rol    DWORD PTR [esi-0x5b],0x35
  418eb8:	xchg   cl,al
  418eba:	mov    ah,BYTE PTR [ebp-0x57]
  418ebd:	loopne 0x418e85
  418ebf:	repz mov edi,0x813b9377
  418ec5:	(bad)  
  418ec6:	jecxz  0x418f32
  418ec8:	and    DWORD PTR [ecx],ebx
  418eca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ecb:	sahf   
  418ecc:	cmp    DWORD PTR ds:0x17d5b201,esi
  418ed2:	dec    edi
  418ed3:	fs sbb eax,0x4f41382
  418ed9:	test   DWORD PTR [esi-0x78b2a1a5],ebx
  418edf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ee0:	xlat   BYTE PTR ds:[ebx]
  418ee1:	jo     0x418f3a
  418ee3:	xor    eax,esi
  418ee5:	inc    ecx
  418ee6:	std    
  418ee7:	push   eax
  418ee8:	add    eax,DWORD PTR [edi-0x640816a3]
  418eee:	jp     0x418ea6
  418ef0:	mov    eax,ds:0xe5357a26
  418ef5:	jmp    0xb3ef:0xd5c86eda
  418efc:	rcl    DWORD PTR [edi],0xb6
  418eff:	sbb    ebx,DWORD PTR [edi]
  418f01:	cmp    BYTE PTR [edi-0x1c],0x61
  418f05:	mov    edx,0x1c4329a6
  418f0a:	cmp    DWORD PTR [esi],ebp
  418f0c:	(bad)  
  418f0e:	pop    ecx
  418f0f:	ss push ds
  418f11:	add    eax,0x23863bd9
  418f16:	mov    eax,ds:0xc4df2204
  418f1b:	xchg   esi,eax
  418f1c:	popf   
  418f1d:	in     al,0x12
  418f1f:	xchg   DWORD PTR [esi],edx
  418f21:	and    cl,BYTE PTR [ebp+0x2086344b]
  418f27:	jae    0x418f13
  418f29:	add    eax,0x5b2b04c3
  418f2e:	leave  
  418f2f:	fimul  WORD PTR [ebx+0x3]
  418f32:	cmp    eax,0x6dd7198f
  418f37:	ss or  ebp,ebp
  418f3a:	adc    dl,BYTE PTR [ecx-0x28]
  418f3d:	rcl    edi,0xa8
  418f40:	je     0x418f54
  418f42:	inc    ebp
  418f43:	test   al,0x5f
  418f45:	mov    bl,0xd2
  418f47:	sub    eax,0x12c6c32b
  418f4c:	jmp    0xd202:0x45d00e4
  418f53:	into   
  418f54:	call   0x932b198b
  418f59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f5a:	pushf  
  418f5b:	not    ecx
  418f5d:	(bad)  
  418f5e:	aas    
  418f5f:	addr16 inc ebx
  418f61:	aad    0x68
  418f63:	in     eax,0x97
  418f65:	addr16 dec ebx
  418f67:	lea    edx,[esi]
  418f69:	out    0x6c,al
  418f6b:	nop
  418f6c:	xor    esi,DWORD PTR [edx+edi*1+0x23c4da20]
  418f73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f74:	mov    bh,0xd5
  418f76:	aad    0x22
  418f78:	int3   
  418f79:	adc    DWORD PTR [esi-0x7c],ebp
  418f7c:	fs ins DWORD PTR es:[edi],dx
  418f7e:	xchg   esp,eax
  418f7f:	jne    0x418f1d
  418f81:	stos   DWORD PTR es:[edi],eax
  418f82:	inc    edi
  418f83:	dec    ecx
  418f84:	scas   al,BYTE PTR es:[edi]
  418f85:	jmp    0x121f806d
  418f8a:	and    eax,0xc5eebdf8
  418f90:	mov    ch,0xe
  418f92:	fs into 
  418f94:	sar    DWORD PTR [ecx-0x3f482b53],cl
  418f9a:	ins    DWORD PTR es:[edi],dx
  418f9b:	jecxz  0x418f58
  418f9d:	or     DWORD PTR [eax-0x62],0x3696854d
  418fa4:	ins    DWORD PTR es:[edi],dx
  418fa5:	adc    DWORD PTR [edx],esi
  418fa7:	and    ch,BYTE PTR [ebx]
  418fa9:	push   esi
  418faa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418fab:	push   ds
  418fac:	loopne 0x419023
  418fae:	cs loopne 0x419022
  418fb1:	xchg   ecx,eax
  418fb2:	out    dx,al
  418fb3:	repz mov ecx,0x786e7bd4
  418fb9:	mov    BYTE PTR [edi-0x49],ah
  418fbc:	xchg   esp,eax
  418fbd:	outs   dx,DWORD PTR ds:[esi]
  418fbe:	es xchg edi,eax
  418fc0:	ja     0x418f98
  418fc2:	mov    esp,0x3f423b3b
  418fc7:	mov    al,0x2f
  418fc9:	data16 outs dx,BYTE PTR ds:[esi]
  418fcb:	sbb    BYTE PTR [esi],dh
  418fcd:	and    al,0x94
  418fcf:	rol    BYTE PTR [ebx],0x72
  418fd2:	mov    DWORD PTR [eax-0x44],0x1eb4f1b3
  418fd9:	(bad)  
  418fda:	sbb    eax,0xf4e3fefe
  418fdf:	js     0x418f64
  418fe1:	mov    ah,0x25
  418fe3:	dec    ebp
  418fe4:	enter  0xd200,0x33
  418fe8:	dec    esp
  418fe9:	push   ss
  418fea:	xchg   BYTE PTR [ecx+0x249c8bc6],bh
  418ff0:	mov    WORD PTR [eax],es
  418ff2:	add    BYTE PTR [eax],al
  418ff4:	cmp    ecx,eax
  418ff6:	jne    0x419004
  418ffc:	cmp    ebx,edx
  418ffe:	je     0x41a937
  419004:	mov    eax,DWORD PTR [esp+0x40]
  419008:	mov    edx,DWORD PTR [esp+0x18]
  41900c:	xor    ecx,ecx
  41900e:	shld   ecx,eax,0x2
  419012:	jmp    0x41926f
  419017:	retf   0xad14
  41901a:	repnz mov eax,0x983c8a74
  419020:	xchg   edx,eax
  419021:	xor    bl,ch
  419023:	call   0xbd110e76
  419028:	inc    eax
  41902a:	mov    esi,0xbebec235
  41902f:	scas   al,BYTE PTR es:[edi]
  419030:	cmp    al,0xc7
  419032:	rol    DWORD PTR [ebp+0x64],0x20
  419036:	pop    ebp
  419037:	ins    BYTE PTR es:[edi],dx
  419038:	xor    al,0xec
  41903a:	retf   
  41903b:	mov    eax,0x2a4dc70c
  419040:	aaa    
  419041:	sbb    eax,0xfdee59cd
  419046:	mov    cl,0x83
  419048:	dec    edx
  419049:	mov    WORD PTR [edx],fs
  41904b:	push   ebx
  41904c:	jns    0x419062
  41904e:	and    BYTE PTR [edx+0x4ddb7fae],al
  419054:	mov    esi,0x5680e866
  419059:	jp     0x418fe5
  41905b:	imul   ebx,DWORD PTR ds:0x63bd9b6f,0xfeff2834
  419065:	xchg   ebp,eax
  419066:	fstp   DWORD PTR [edi]
  419068:	lds    esp,FWORD PTR [ebx-0x5cdc55f]
  41906e:	xor    al,0x80
  419070:	(bad)  
  419071:	and    ebx,DWORD PTR [edi-0x16]
  419074:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419075:	iret   
  419076:	jle    0x419081
  419078:	jnp    0x41900f
  41907a:	cmp    ebx,ebp
  41907c:	nop
  41907d:	inc    eax
  41907e:	fdivp  st(7),st
  419080:	sbb    BYTE PTR [eax+0x32],0x10
  419084:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419085:	sub    al,0x90
  419087:	add    BYTE PTR [edx+0x6da76348],bh
  41908d:	daa    
  41908e:	shr    DWORD PTR [eax-0x1127691],1
  419094:	mov    ebx,0x97d6a122
  419099:	dec    esi
  41909a:	outs   dx,BYTE PTR ds:[esi]
  41909b:	xchg   edx,eax
  41909c:	scas   al,BYTE PTR es:[edi]
  41909d:	push   ds
  41909e:	cs add eax,0xf4e56385
  4190a4:	xor    edi,DWORD PTR [ebx-0x5f]
  4190a7:	xchg   BYTE PTR [esi+ebp*4],bh
  4190aa:	ins    BYTE PTR es:[edi],dx
  4190ab:	aas    
  4190ac:	adc    eax,0x32115ba9
  4190b1:	sub    al,0xa7
  4190b3:	sbb    eax,0xc8c8f236
  4190b8:	jg     0x41912e
  4190ba:	and    BYTE PTR [ecx+0x42],ah
  4190bd:	cwde   
  4190be:	pop    ds
  4190bf:	jbe    0x419122
  4190c1:	adc    eax,0x2e71c89c
  4190c6:	out    dx,al
  4190c7:	stos   DWORD PTR es:[edi],eax
  4190c8:	mov    ds:0xda314806,eax
  4190cd:	fwait
  4190ce:	popa   
  4190cf:	cmp    BYTE PTR [esi],bl
  4190d1:	mov    esi,0x5b47d31
  4190d6:	xor    DWORD PTR [ebx],edi
  4190d8:	or     eax,0x740cb68e
  4190dd:	push   es
  4190de:	adc    DWORD PTR [edi],esp
  4190e0:	scas   eax,DWORD PTR es:[edi]
  4190e1:	jo     0x4190e2
  4190e3:	mov    cl,0xf9
  4190e5:	mov    ebp,0xd2f0102c
  4190ea:	call   0x1f1ea574
  4190ef:	xchg   esi,eax
  4190f0:	cwde   
  4190f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4190f2:	xchg   BYTE PTR [ecx],al
  4190f4:	lahf   
  4190f5:	jmp    0x1f76:0xf655f280
  4190fc:	mul    ebx
  4190fe:	sub    eax,0x9c4249d9
  419103:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419105:	leave  
  419106:	(bad)  
  419107:	jle    0x4190fc
  419109:	sbb    al,0xa4
  41910b:	fwait
  41910c:	leave  
  41910d:	test   DWORD PTR [esi+0x70],esi
  419110:	xchg   esi,eax
  419111:	les    esp,FWORD PTR [ebx]
  419113:	sbb    al,0x87
  419115:	mov    al,0xd1
  419117:	dec    esi
  419118:	cmp    edx,edi
  41911a:	mov    ebx,0x4758f48f
  41911f:	or     eax,0x258fa2ab
  419124:	popf   
  419125:	loopne 0x41916c
  419127:	sub    DWORD PTR [esi-0x54bfda0b],edi
  41912d:	mov    ss,WORD PTR [ebx+eiz*4+0x541a698e]
  419134:	(bad)  
  419135:	cmp    ebp,DWORD PTR [ecx+0x3f]
  419138:	and    edx,DWORD PTR [ecx+0x1e]
  41913b:	dec    ebx
  41913c:	mov    bh,0xe8
  41913e:	inc    ebp
  41913f:	mov    ebp,0xbdf657c1
  419144:	jmp    0xff00b8eb
  419149:	scas   eax,DWORD PTR es:[edi]
  41914a:	inc    ecx
  41914b:	mov    al,cs:0x7063b4ce
  419151:	and    BYTE PTR [ebx],dh
  419153:	and    ah,cl
  419155:	rcr    BYTE PTR [edi],1
  419157:	and    al,0x90
  419159:	rol    DWORD PTR [edx-0x31],0x56
  41915d:	inc    esp
  41915e:	ss jge 0x419129
  419161:	or     al,0x33
  419163:	sahf   
  419164:	hlt    
  419165:	ds xchg esp,eax
  419167:	pop    edx
  419168:	int    0x7e
  41916a:	pusha  
  41916b:	sbb    al,0xd4
  41916d:	inc    ebx
  41916e:	ret    0xb1bd
  419171:	popf   
  419172:	sar    bl,cl
  419174:	aad    0x8e
  419176:	test   DWORD PTR [edi-0x50],ebp
  419179:	xchg   edx,eax
  41917a:	jg     0x4191de
  41917c:	cs ss ins DWORD PTR es:[edi],dx
  41917f:	xor    al,BYTE PTR [ebp-0x1c]
  419182:	push   edx
  419183:	push   ds
  419184:	dec    esi
  419185:	lds    edx,FWORD PTR [ecx+0xa]
  419188:	mov    ds:0x9f1ab00f,eax
  41918d:	inc    esp
  41918e:	adc    eax,0x7a9e0d00
  419193:	loop   0x419117
  419195:	pushf  
  419196:	xor    BYTE PTR [ebp-0x2b],dl
  419199:	mov    bl,0xfa
  41919b:	cmp    BYTE PTR ds:0x92216f78,dl
  4191a1:	fiadd  DWORD PTR [esi-0x359c9959]
  4191a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4191a8:	mov    WORD PTR [eax-0x32d9c768],?
  4191ae:	xlat   BYTE PTR ds:[ebx]
  4191af:	pop    es
  4191b0:	mov    eax,0xec90c862
  4191b5:	fwait
  4191b6:	mov    gs,WORD PTR [ecx]
  4191b8:	inc    ecx
  4191b9:	xor    al,dl
  4191bb:	inc    esi
  4191bc:	stc    
  4191bd:	xlat   BYTE PTR ds:[ebx]
  4191be:	pop    ds
  4191bf:	sbb    BYTE PTR [ecx-0x4f3a3c06],0x2f
  4191c6:	sbb    DWORD PTR [eax],ebp
  4191c8:	or     ah,BYTE PTR [ecx-0x50aa1501]
  4191ce:	pop    eax
  4191cf:	mov    WORD PTR [edx+0x53],cs
  4191d2:	or     esp,esi
  4191d4:	dec    ebx
  4191d5:	mov    WORD PTR [ebx-0x27042123],ds
  4191db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191dc:	inc    ebx
  4191dd:	cmc    
  4191de:	pop    ds
  4191df:	xchg   ebp,eax
  4191e0:	dec    esi
  4191e1:	(bad)  [edx+eiz*2-0x68d41d25]
  4191e8:	fcomp  QWORD PTR [ebp+edi*1-0x7d853100]
  4191ef:	sbb    bl,BYTE PTR [ecx-0x6f9b9936]
  4191f5:	nop
  4191f6:	adc    DWORD PTR [ebx-0x7f4fd93f],0x1cf4cb31
  419200:	inc    eax
  419201:	dec    ebx
  419202:	(bad)  [edi]
  419204:	jb     0x4191da
  419206:	inc    ecx
  419207:	fdivr  st(0),st
  419209:	jno    0x4191d2
  41920b:	iret   
  41920c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41920d:	jge    0x4191ef
  41920f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419210:	mov    eax,ds:0xed84c035
  419215:	or     BYTE PTR [edi],dl
  419217:	cmc    
  419218:	ins    DWORD PTR es:[edi],dx
  419219:	pop    ds
  41921a:	rcr    DWORD PTR [ecx],cl
  41921c:	arpl   WORD PTR [ebx],sp
  41921e:	and    ebp,DWORD PTR [edi]
  419220:	xchg   ebp,eax
  419221:	iretw  
  419223:	lds    edx,FWORD PTR [edi]
  419225:	jno    0x419298
  419227:	clc    
  419228:	xchg   ebp,eax
  419229:	(bad)
  41922d:	js     0x419241
  41922f:	test   DWORD PTR [esp+esi*4-0x5ec22af1],ecx
  419236:	sahf   
  419237:	sbb    eax,0xb21ba6bf
  41923c:	xchg   esi,eax
  41923d:	dec    esp
  41923e:	mov    fs,WORD PTR [ecx-0x53]
  419241:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419242:	int    0x6c
  419244:	xlat   BYTE PTR ds:[ebx]
  419245:	retf   0x17d8
  419248:	cld    
  419249:	push   ds
  41924a:	lds    edi,FWORD PTR [ebx+0x7db3f79]
  419250:	dec    ebp
  419251:	jl     0x419296
  419253:	aas    
  419254:	stos   BYTE PTR es:[edi],al
  419255:	scas   eax,DWORD PTR es:[edi]
  419256:	in     eax,dx
  419257:	mov    BYTE PTR [esi],bh
  419259:	mov    BYTE PTR [edx+0x24320985],cl
  41925f:	icebp  
  419260:	call   0x8befe427
  419265:	push   edx
  419266:	cs std 
  419268:	cmp    BYTE PTR [ecx-0x4a10f68e],0xb1
  41926f:	shl    eax,0x2
  419272:	mov    ebx,0xcb79b576
  419277:	mov    DWORD PTR [esp+0x10],edx
  41927b:	mov    edx,DWORD PTR [esp+0x1c]
  41927f:	xor    eax,ebx
  419281:	xor    ecx,esi
  419283:	mov    DWORD PTR [esp+0x14],edx
  419287:	cmp    eax,DWORD PTR [esp+0x10]
  41928b:	jne    0x419299
  419291:	cmp    ecx,edx
  419293:	je     0x41a93c
  419299:	mov    eax,DWORD PTR [esp+0x44]
  41929d:	cmp    eax,0xa5069baa
  4192a2:	je     0x4192f6
  4192a8:	mov    edx,DWORD PTR [esp+0x18]
  4192ac:	mov    eax,DWORD PTR [esp+0x1c]
  4192b0:	xor    eax,esi
  4192b2:	xor    edx,0xcb79b577
  4192b8:	shrd   edx,eax,0x2
  4192bc:	shr    eax,0x2
  4192bf:	mov    DWORD PTR [esp+0x34],eax
  4192c3:	mov    eax,DWORD PTR [esp+0x18]
  4192c7:	mov    ecx,DWORD PTR [esp+0x1c]
  4192cb:	shl    eax,0x1e
  4192ce:	xor    eax,0x80000000
  4192d3:	or     eax,DWORD PTR [esp+0x34]
  4192d7:	xor    ecx,ecx
  4192d9:	mov    DWORD PTR [esp+0x14],eax
  4192dd:	mov    eax,DWORD PTR [esp+0x60]
  4192e1:	or     ecx,edx
  4192e3:	cdq    
  4192e4:	cmp    ecx,eax
  4192e6:	jne    0x41a93c
  4192ec:	cmp    DWORD PTR [esp+0x14],edx
  4192f0:	jne    0x41a93c
  4192f6:	mov    DWORD PTR [esp+0x5c],0x4227d4
  4192fe:	mov    DWORD PTR [esp+0x68],0x4227cc
  419306:	mov    eax,DWORD PTR [esp+0x78]
  41930a:	mov    eax,DWORD PTR [esp+0x78]
  41930e:	mov    edx,DWORD PTR [esp+0x18]
  419312:	xor    ecx,ecx
  419314:	shld   ecx,eax,0x2
  419318:	shl    eax,0x2
  41931b:	mov    DWORD PTR [esp+0x10],edx
  41931f:	mov    edx,DWORD PTR [esp+0x1c]
  419323:	xor    eax,ebx
  419325:	xor    ecx,esi
  419327:	mov    DWORD PTR [esp+0x14],edx
  41932b:	cmp    DWORD PTR [esp+0x10],eax
  41932f:	jne    0x41a5e3
  419335:	cmp    edx,ecx
  419337:	jne    0x41a5e3
  41933d:	mov    DWORD PTR [esp+0x30],0x42275c
  419345:	mov    eax,DWORD PTR [esp+0x18]
  419349:	mov    ecx,DWORD PTR [esp+0x1c]
  41934d:	shrd   eax,ecx,0x2
  419351:	shr    ecx,0x2
  419354:	mov    ecx,DWORD PTR [esp+0x18]
  419358:	mov    edx,DWORD PTR [esp+0x1c]
  41935c:	mov    edx,DWORD PTR [esp+0x30]
  419360:	mov    edx,DWORD PTR [edx+0xc]
  419363:	mov    DWORD PTR [esp+0xc],eax
  419367:	shl    ecx,0x1e
  41936a:	mov    eax,0x32de6d5d
  41936f:	xor    DWORD PTR [esp+0xc],eax
  419373:	xor    ecx,ecx
  419375:	or     ecx,DWORD PTR [esp+0xc]
  419379:	cmp    ecx,DWORD PTR [edx]
  41937b:	jne    0x41a320
  419381:	mov    ecx,0x65c7
  419386:	mov    WORD PTR [esp+0x2c],cx
  41938b:	mov    ecx,0x6062
  419390:	mov    WORD PTR [esp+0x24],cx
  419395:	mov    ecx,0x125d
  41939a:	mov    WORD PTR [esp+0xc],cx
  41939f:	movzx  ecx,WORD PTR [esp+0xc]
  4193a4:	mov    edx,0x2d0f
  4193a9:	and    cx,dx
  4193ac:	mov    dx,WORD PTR [esp+0x24]
  4193b1:	or     cx,dx
  4193b4:	mov    dx,WORD PTR [esp+0x2c]
  4193b9:	add    cx,dx
  4193bc:	or     ecx,0x3b22
  4193c2:	mov    WORD PTR [esp+0x3c],cx
  4193c7:	mov    ecx,0x57d4
  4193cc:	mov    WORD PTR [esp+0x2c],cx
  4193d1:	mov    ecx,0x3b21
  4193d6:	mov    WORD PTR [esp+0x38],cx
  4193db:	mov    ecx,0x52fd
  4193e0:	mov    WORD PTR [esp+0x24],cx
  4193e5:	mov    ecx,0x2ce0
  4193ea:	mov    WORD PTR [esp+0xc],cx
  4193ef:	mov    cx,WORD PTR [esp+0xc]
  4193f4:	mov    dx,WORD PTR [esp+0x24]
  4193f9:	jmp    0x419656
  4193fe:	gs pop ss
  419400:	dec    BYTE PTR [eax+esi*4]
  419403:	sbb    al,0x6b
  419405:	mov    esp,0xd16889ea
  41940a:	mov    ds:0x3390e3ab,al
  41940f:	add    eax,0xc235bec0
  419414:	mov    esi,0x533d87be
  419419:	les    edx,FWORD PTR [esi]
  41941b:	nop
  41941c:	stc    
  41941d:	test   cl,ch
  41941f:	cmp    al,0x28
  419421:	jmp    0xae33e8a6
  419426:	aad    0xce
  419428:	dec    ebx
  419429:	mov    bl,0x54
  41942b:	sahf   
  41942c:	test   DWORD PTR [ebp+0x333c8b2d],0xbe5fdd1f
  419436:	repz mov eax,esi
  419439:	fcomp  QWORD PTR [ebx-0x8]
  41943c:	(bad)
  41943f:	add    eax,edx
  419441:	add    ebx,DWORD PTR [ebx+eax*1-0x18]
  419445:	jg     0x419446
  419447:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419448:	push   ss
  419449:	add    DWORD PTR [edx],0xb606713b
  41944f:	pop    esp
  419450:	clc    
  419451:	mov    WORD PTR [esi],?
  419453:	mov    ecx,cs
  419455:	sub    cl,al
  419457:	mov    ebp,0x3dcdcaf
  41945c:	xor    DWORD PTR [esi+eiz*1-0x27],0xffffffd8
  419461:	cli    
  419462:	sub    BYTE PTR [edx],bl
  419464:	in     eax,0xd6
  419466:	dec    edi
  419467:	sub    dh,0x44
  41946a:	outs   dx,DWORD PTR ds:[esi]
  41946b:	test   DWORD PTR [eax-0x60],eax
  41946e:	sub    DWORD PTR [ebp+0x43],esi
  419471:	mov    dl,ah
  419473:	(bad)  
  419474:	lock cmp eax,ecx
  419477:	mov    esi,0x97ee7630
  41947c:	arpl   bx,sp
  41947e:	mov    edi,0x65296d2a
  419483:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419484:	test   BYTE PTR [ebx],ch
  419486:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419487:	adc    al,0x58
  419489:	cmp    ebp,DWORD PTR [edx]
  41948b:	mov    ah,0x81
  41948d:	mov    DWORD PTR [esi+0x6c],esp
  419490:	pop    edi
  419491:	add    eax,0x9b318c60
  419496:	clc    
  419497:	jo     0x41948e
  419499:	mov    ds:0x458c6717,eax
  41949e:	inc    esi
  41949f:	dec    esi
  4194a0:	jg     0x4194d0
  4194a2:	test   BYTE PTR [ebp+0x1c],dl
  4194a5:	inc    ebp
  4194a6:	lahf   
  4194a7:	ja     0x41949c
  4194a9:	shufps xmm6,XMMWORD PTR [eax+0x7b],0x75
  4194ae:	lods   eax,DWORD PTR ds:[esi]
  4194af:	mov    ecx,0x55c8ab47
  4194b4:	data16 cmp al,bl
  4194b7:	push   0xa9b2b02c
  4194bc:	sar    DWORD PTR [edi-0x53],cl
  4194bf:	sar    dl,0xec
  4194c2:	stos   BYTE PTR es:[edi],al
  4194c3:	and    al,dh
  4194c5:	xor    ah,bh
  4194c7:	nop
  4194c8:	or     DWORD PTR ds:0xccda6745,0x5c
  4194cf:	jne    0x41946c
  4194d1:	imul   ebp,edx,0xabd5f36f
  4194d7:	inc    ecx
  4194d8:	push   eax
  4194d9:	retf   0xb51f
  4194dc:	icebp  
  4194dd:	inc    ebx
  4194de:	out    0x4f,al
  4194e0:	mov    eax,ds:0x95ec3a72
  4194e5:	inc    edi
  4194e6:	mov    ds:0x140d7d06,eax
  4194eb:	sub    cl,BYTE PTR ds:0x512673a4
  4194f1:	mov    ds:0xf41abc5f,al
  4194f6:	fcom   DWORD PTR [eax+0x6478d042]
  4194fc:	push   ebx
  4194fd:	out    dx,eax
  4194fe:	repnz xor edi,DWORD PTR [ebx-0x68]
  419502:	(bad)  
  419503:	lea    ecx,[edx-0x6a]
  419506:	cld    
  419507:	push   ebp
  419508:	fwait
  419509:	mov    ebx,0xe7b23e05
  41950e:	mov    eax,ds:0xcf286a3d
  419513:	lahf   
  419514:	out    dx,eax
  419515:	xor    DWORD PTR [eax+eiz*4-0x34fa0185],0x6
  41951d:	pop    esp
  41951e:	aad    0x8d
  419520:	repz sbb BYTE PTR [esi-0x1a8635e3],0xa4
  419528:	aas    
  419529:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41952a:	cmp    esi,edi
  41952c:	imul   ebx,DWORD PTR [ebp-0x72939184],0xe8fdbd43
  419536:	pop    es
  419537:	xor    al,BYTE PTR [ebx+0x42]
  41953a:	sbb    esi,DWORD PTR [ebx]
  41953c:	mov    WORD PTR [eax-0x5c],ss
  41953f:	and    al,0x58
  419541:	fdiv   st(5),st
  419543:	test   eax,0x305e7af5
  419548:	test   eax,0x9215bd6b
  41954d:	repnz test BYTE PTR [esi],cl
  419550:	mov    cl,0xab
  419552:	adc    al,0x96
  419554:	or     al,0x9e
  419556:	and    DWORD PTR [edx],edi
  419558:	stos   BYTE PTR es:[edi],al
  419559:	stos   BYTE PTR es:[edi],al
  41955a:	jp     0x4195c9
  41955c:	test   al,0x57
  41955e:	jb     0x419581
  419560:	out    0x75,al
  419562:	test   DWORD PTR [ecx+0x1],edx
  419565:	pop    ds
  419566:	(bad)  
  419567:	rcl    BYTE PTR [esi],cl
  419569:	xchg   BYTE PTR [eax+0x2b2e7af0],ch
  41956f:	mov    BYTE PTR [ecx+0x6a],dh
  419572:	mov    cl,0x69
  419574:	inc    ecx
  419575:	out    0x78,al
  419577:	mov    ds:0xda5cd180,eax
  41957c:	jne    0x41956e
  41957e:	leave  
  41957f:	and    esp,DWORD PTR [ebp+ecx*1-0x22]
  419583:	and    al,0xf4
  419585:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419586:	or     ch,BYTE PTR [ebx-0x1c]
  419589:	jmp    0x41958e
  41958b:	aas    
  41958c:	mov    ebp,0xada4db26
  419591:	xchg   ebp,eax
  419592:	(bad)  
  419593:	lods   eax,DWORD PTR ds:[esi]
  419594:	xchg   ecx,eax
  419595:	cdq    
  419596:	rcl    BYTE PTR ds:0x263e183,0x9a
  41959d:	call   0x4cd4:0x5fea081b
  4195a4:	rol    DWORD PTR [ebp-0x3e1cd26b],cl
  4195aa:	xchg   BYTE PTR [edi+0x55b3224b],bh
  4195b0:	xor    eax,0x42ee2460
  4195b5:	xchg   edx,eax
  4195b6:	outs   dx,BYTE PTR ds:[esi]
  4195b7:	lahf   
  4195b8:	xchg   esi,eax
  4195b9:	mov    ds:0x1243dba1,eax
  4195be:	xlat   BYTE PTR ds:[ebx]
  4195bf:	retf   0x5cc2
  4195c2:	call   0xc6ae:0xa0ddb2da
  4195c9:	bound  ecx,QWORD PTR [esi+0x37d90c74]
  4195cf:	push   esi
  4195d0:	ins    BYTE PTR es:[edi],dx
  4195d1:	mov    ds:0x84889de4,eax
  4195d6:	outs   dx,BYTE PTR ds:[esi]
  4195d7:	xor    BYTE PTR [edx+0xec8f826],cl
  4195dd:	lds    eax,FWORD PTR [esp+ecx*2-0x301ad0df]
  4195e4:	or     bl,dl
  4195e6:	scas   al,BYTE PTR es:[edi]
  4195e7:	lock (bad) 
  4195eb:	mov    edx,0xb306722b
  4195f0:	jmp    0x9b3:0x71e174db
  4195f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4195f8:	push   ds
  4195f9:	dec    ebp
  4195fa:	or     dh,bh
  4195fc:	fild   QWORD PTR [ebp+ecx*1+0x5a]
  419600:	(bad)  
  419601:	mov    ebp,0x1b444595
  419606:	adc    eax,0xe0ffa810
  41960b:	test   al,0x83
  41960d:	adc    BYTE PTR [edx],0x1b
  419610:	les    esi,FWORD PTR [esi+0x5db4e463]
  419616:	hlt    
  419617:	inc    esp
  419618:	and    bh,BYTE PTR [edx]
  41961a:	and    edx,DWORD PTR [ebx+eiz*1]
  41961d:	rol    BYTE PTR [edi+0x27],0xf8
  419621:	mov    ebp,0x4547cf27
  419626:	and    al,0xa5
  419628:	cmp    DWORD PTR [edx-0x3e],eax
  41962b:	arpl   WORD PTR [edi],ax
  41962d:	sti    
  41962e:	xlat   BYTE PTR ds:[ebx]
  41962f:	inc    esi
  419630:	mov    DWORD PTR [edi],edi
  419632:	outs   dx,BYTE PTR ds:[esi]
  419633:	loope  0x419699
  419635:	in     al,dx
  419636:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419637:	loopne 0x419649
  419639:	add    BYTE PTR [eax],ah
  41963b:	shl    dl,cl
  41963d:	dec    esp
  41963e:	or     al,0xf2
  419640:	jnp    0x419678
  419642:	mov    bh,0x74
  419644:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419645:	ins    BYTE PTR es:[edi],dx
  419646:	retf   
  419647:	(bad)  
  419648:	xor    edi,DWORD PTR [ecx+0x1c]
  41964b:	xor    ebx,DWORD PTR [ebp+0x7e]
  41964e:	aas    
  41964f:	sub    DWORD PTR [esi],esp
  419651:	adc    DWORD PTR [esi+ecx*1],ecx
  419654:	jo     0x41966a
  419656:	or     cx,dx
  419659:	mov    edx,0x21a4
  41965e:	or     cx,dx
  419661:	mov    dx,WORD PTR [esp+0x2c]
  419666:	sub    cx,dx
  419669:	mov    dx,WORD PTR [esp+0x38]
  41966e:	sub    cx,dx
  419671:	mov    dx,WORD PTR [esp+0x3c]
  419676:	cmp    dx,cx
  419679:	jbe    0x41a320
  41967f:	mov    ecx,0x5008
  419684:	jmp    0x4198e1
  419689:	xchg   ebx,eax
  41968a:	sub    al,0x3f
  41968c:	jae    0x419706
  41968e:	mov    esp,0x77bf2cb3
  419693:	jo     0x419672
  419695:	call   0xc009:0xab9e504c
  41969c:	mov    esi,0xbebec235
  4196a1:	call   0x98cb9663
  4196a6:	nop
  4196a7:	loop   0x41968d
  4196a9:	(bad)  
  4196aa:	xor    al,0x28
  4196ac:	pop    ds
  4196ad:	lock and edx,esp
  4196b0:	xchg   edi,eax
  4196b1:	shl    DWORD PTR [ecx-0x4186ad00],cl
  4196b7:	or     BYTE PTR [esi+0x3e96b76c],dl
  4196bd:	fnstsw WORD PTR [eax-0x38]
  4196c0:	cmc    
  4196c1:	aad    0x4e
  4196c3:	aaa    
  4196c4:	das    
  4196c5:	or     DWORD PTR [esi+0x62],ebx
  4196c8:	mov    edi,0x2725050c
  4196cd:	pop    ss
  4196ce:	mov    esi,0xaf6a2b24
  4196d3:	(bad)  
  4196d4:	je     0x4196c8
  4196d6:	mov    ds:0x8adc424a,eax
  4196db:	enter  0x2f65,0xf6
  4196df:	and    dh,BYTE PTR [ecx]
  4196e1:	xor    DWORD PTR ds:0xb45aac59,edi
  4196e7:	xchg   ecx,eax
  4196e8:	push   ebx
  4196e9:	and    bh,cl
  4196eb:	xor    DWORD PTR [ebx-0x5d],ebx
  4196ee:	out    0x5c,al
  4196f0:	and    BYTE PTR [eax-0x22],al
  4196f3:	mov    esp,0x71f055bc
  4196f8:	sbb    al,BYTE PTR [ebx]
  4196fa:	lods   eax,DWORD PTR ds:[esi]
  4196fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196fc:	popa   
  4196fd:	inc    ecx
  4196fe:	mov    al,ds:0x429d67ef
  419703:	inc    esi
  419704:	lods   al,BYTE PTR ds:[esi]
  419705:	(bad)  
  419706:	mov    bh,0x5a
  419708:	fstp   TBYTE PTR [ecx-0x376e165e]
  41970e:	fs hlt 
  419710:	je     0x4196db
  419712:	stos   DWORD PTR es:[edi],eax
  419713:	xor    ah,BYTE PTR [ebp-0x39]
  419716:	mov    ebx,0x2b5742e7
  41971b:	outs   dx,BYTE PTR ds:[esi]
  41971c:	dec    edx
  41971d:	xchg   edi,eax
  41971e:	outs   dx,BYTE PTR ds:[esi]
  41971f:	outs   dx,DWORD PTR ds:[esi]
  419720:	mov    esi,0xfff25f85
  419725:	pop    ds
  419726:	sahf   
  419727:	lahf   
  419728:	jle    0x419715
  41972a:	(bad)  
  41972b:	push   ecx
  41972c:	sar    DWORD PTR ds:0x6000f080,1
  419732:	addr16 ret 0x22b7
  419736:	dec    edx
  419737:	jp     0x419731
  419739:	adc    BYTE PTR [ecx+0x43],ah
  41973c:	stos   DWORD PTR es:[edi],eax
  41973d:	push   eax
  41973e:	push   esp
  41973f:	push   edx
  419740:	loope  0x419756
  419742:	fistp  WORD PTR [edx]
  419744:	sahf   
  419745:	jo     0x419761
  419747:	inc    esp
  419748:	clc    
  419749:	pop    ecx
  41974a:	(bad)  
  41974b:	aam    0xa0
  41974d:	and    eax,0x22d0c8b
  419752:	sbb    edi,edi
  419754:	pop    ss
  419755:	mov    ch,BYTE PTR [edx+0x1099e181]
  41975b:	(bad)  
  41975c:	aad    0x4c
  41975e:	repz push ebp
  419760:	(bad)  
  419761:	clc    
  419762:	mov    ds:0xafca6b92,eax
  419767:	and    al,0xc7
  419769:	sbb    al,0x90
  41976b:	(bad)  
  41976c:	push   ds
  41976d:	rol    BYTE PTR gs:[ecx+0x6b115693],cl
  419774:	sti    
  419775:	mov    ds,esi
  419777:	jbe    0x4197d5
  419779:	sbb    BYTE PTR [ecx+ebp*8-0x78],ah
  41977d:	jae    0x4197a9
  41977f:	aam    0x36
  419781:	cmc    
  419782:	jnp    0x41970d
  419784:	sbb    bl,ch
  419786:	les    edx,FWORD PTR [eax+eax*8]
  419789:	pop    edi
  41978a:	mov    eax,ds:0xe74460c1
  41978f:	test   DWORD PTR [esi],edi
  419791:	push   edx
  419792:	or     edi,DWORD PTR [ebx]
  419794:	(bad)  
  419795:	jecxz  0x419813
  419797:	or     eax,0x35fb6ded
  41979c:	sbb    al,0x68
  41979e:	jno    0x419751
  4197a0:	(bad)  
  4197a1:	pop    ds
  4197a2:	out    dx,eax
  4197a3:	or     eax,0xe7cfd9eb
  4197a8:	test   eax,0x6a62cbfd
  4197ad:	in     al,0xe6
  4197af:	ss popf 
  4197b1:	enter  0x44aa,0x89
  4197b5:	lea    esp,[eax-0x2d]
  4197b8:	cmp    bh,dh
  4197ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4197bb:	dec    esi
  4197bc:	mov    ds,WORD PTR [edx-0x62f383b3]
  4197c2:	cli    
  4197c3:	push   edx
  4197c4:	adc    DWORD PTR [ebx+ebx*8],esi
  4197c7:	xchg   ecx,eax
  4197c8:	sbb    ch,BYTE PTR [edx]
  4197ca:	shld   DWORD PTR [esi-0x57be237a],ebx,cl
  4197d1:	add    DWORD PTR [ebp+0x35e35bcd],esi
  4197d7:	nop
  4197d8:	mov    ch,0x42
  4197da:	out    0xf4,al
  4197dc:	add    BYTE PTR [edi+0x72],cl
  4197df:	out    dx,al
  4197e0:	in     eax,0x71
  4197e2:	xor    ebx,ebp
  4197e4:	int    0x51
  4197e6:	(bad)  
  4197e7:	sbb    eax,0x18059b6c
  4197ec:	mov    edi,0x2cffc6cb
  4197f1:	adc    eax,0xac7e0a2f
  4197f6:	inc    ebp
  4197f7:	pop    ebp
  4197f8:	sbb    ebp,edi
  4197fa:	jbe    0x419868
  4197fc:	jmp    0x92d8c8c6
  419801:	add    bh,BYTE PTR [edx]
  419803:	jmp    0x4197f0
  419805:	inc    edx
  419806:	jne    0x419795
  419808:	jb     0x419846
  41980a:	ror    BYTE PTR [edi+0x69],1
  41980d:	xchg   ebx,eax
  41980e:	fwait
  41980f:	sub    ch,bl
  419811:	test   eax,0xa201dc4e
  419816:	movaps xmm0,XMMWORD PTR [ecx-0x2b8c239b]
  41981d:	push   edx
  41981e:	push   esi
  41981f:	mov    ah,0x7
  419821:	out    dx,al
  419822:	mov    bl,cl
  419824:	mov    dh,0x8c
  419826:	add    eax,0x57c04824
  41982b:	sub    DWORD PTR [esi+0x2b705204],0x89d9e2b2
  419835:	jmp    0x419825
  419837:	sbb    BYTE PTR [edi-0x65],ch
  41983a:	loopne 0x4197f2
  41983c:	xor    al,0x23
  41983e:	xchg   edi,eax
  41983f:	mov    dl,0xab
  419841:	rcl    al,cl
  419843:	push   esi
  419844:	jge    0x4197f9
  419846:	sub    BYTE PTR [ecx-0x26],bh
  419849:	gs stos BYTE PTR es:[edi],al
  41984b:	fstp   DWORD PTR [ecx]
  41984d:	ds out 0xe9,eax
  419850:	sub    al,0x26
  419852:	hlt    
  419853:	xchg   edx,eax
  419854:	mov    DWORD PTR [eax-0x77],0xbf8d0e6f
  41985b:	dec    ebp
  41985c:	push   cs
  41985d:	sub    al,0x63
  41985f:	or     BYTE PTR [eax+0x2b],dl
  419862:	rcr    DWORD PTR [esi],0x5f
  419865:	les    edx,FWORD PTR [esi]
  419867:	fstp   TBYTE PTR [ebp+0x21]
  41986a:	mov    bh,0x8d
  41986c:	sbb    BYTE PTR [eax],0x4b
  41986f:	inc    edx
  419870:	xor    dh,BYTE PTR [edi+0x47]
  419873:	fist   DWORD PTR [ecx+0x5458b13b]
  419879:	je     0x419868
  41987b:	test   BYTE PTR [esi],ah
  41987d:	or     ecx,esp
  41987f:	or     BYTE PTR [edx],ch
  419881:	push   ecx
  419882:	mov    eax,0x49148de3
  419887:	pop    ebp
  419888:	cmp    BYTE PTR [edx],bh
  41988a:	int3   
  41988b:	cdq    
  41988c:	ss jns 0x4198e3
  41988f:	push   0xffffffb3
  419891:	mov    eax,0x685d5661
  419896:	data16 into 
  419898:	imul   esi,ebp,0xb11e1bd0
  41989e:	xlat   BYTE PTR ds:[ebx]
  41989f:	inc    ecx
  4198a0:	aam    0x8d
  4198a2:	cmp    eax,0x7a53993a
  4198a7:	cmp    eax,0xd9fd7508
  4198ac:	out    0x2e,eax
  4198ae:	lods   al,BYTE PTR ds:[esi]
  4198af:	jae    0x4198d9
  4198b1:	sub    edi,DWORD PTR [ebx]
  4198b3:	into   
  4198b4:	sbb    al,0x3
  4198b6:	push   edx
  4198b7:	(bad)  
  4198b8:	cli    
  4198b9:	cmp    BYTE PTR ss:[ecx],dl
  4198bc:	into   
  4198bd:	clc    
  4198be:	pop    ds
  4198bf:	push   ss
  4198c0:	xchg   edi,eax
  4198c1:	mov    eax,0x1277b087
  4198c6:	scas   eax,DWORD PTR es:[edi]
  4198c7:	scas   eax,DWORD PTR es:[edi]
  4198c8:	test   eax,0xd69a0543
  4198cd:	jnp    0x41993a
  4198cf:	inc    ebp
  4198d0:	pop    ss
  4198d1:	xchg   BYTE PTR [eax],bl
  4198d3:	scas   eax,DWORD PTR es:[edi]
  4198d4:	inc    dl
  4198d6:	mov    WORD PTR [ebx+0xfd270c9],ds
  4198dc:	mov    esp,0x1ab1f0be
  4198e1:	mov    WORD PTR [esp+0x24],cx
  4198e6:	mov    ecx,0x60ce
  4198eb:	mov    WORD PTR [esp+0xc],cx
  4198f0:	movzx  ecx,WORD PTR [esp+0xc]
  4198f5:	mov    edx,0x2095
  4198fa:	or     cx,dx
  4198fd:	mov    dx,WORD PTR [esp+0x24]
  419902:	sub    cx,dx
  419905:	jmp    0x419b62
  41990a:	loop   0x419959
  41990c:	push   eax
  41990d:	xchg   ebx,eax
  41990e:	je     0x4198a4
  419910:	and    ch,BYTE PTR [edi-0x307dfe70]
  419916:	mov    eax,ds:0x249236db
  41991b:	or     eax,0xc235bec0
  419920:	mov    esi,0xa60287be
  419925:	fmul   st(7),st
  419927:	push   ebp
  419928:	mov    ah,0xf1
  41992a:	sahf   
  41992b:	fstp   DWORD PTR [esi-0x50]
  41992e:	bound  esi,QWORD PTR [edx-0x2a878ae2]
  419934:	push   es
  419935:	sbb    esp,DWORD PTR [edi-0x6f429b34]
  41993b:	bound  ebx,QWORD PTR [eax+0x34d3f053]
  419941:	je     0x4199b5
  419943:	icebp  
  419944:	fiadd  DWORD PTR [ebx-0x25ea25d2]
  41994a:	ret    
  41994b:	jae    0x419963
  41994d:	add    bh,ah
  41994f:	lds    ebp,FWORD PTR [esi-0x9]
  419952:	lahf   
  419953:	inc    esp
  419954:	jp     0x4198f3
  419956:	xor    dl,BYTE PTR [eax]
  419958:	test   DWORD PTR [ebx-0x12],ecx
  41995b:	sub    DWORD PTR [edi+0x50ec609f],ebp
  419961:	push   cs
  419962:	sbb    eax,0x3e17cce0
  419967:	(bad)  
  419968:	mov    edx,0x9f2f013f
  41996d:	pop    edx
  41996e:	retf   0x41b3
  419971:	inc    ebx
  419972:	dec    esp
  419973:	test   eax,ebp
  419975:	mov    edx,0x7da618b0
  41997a:	cmovae edi,DWORD PTR [edi+0x56c02291]
  419981:	pop    es
  419982:	pop    ecx
  419983:	out    dx,eax
  419984:	and    DWORD PTR [edx+ecx*2+0x2e],eax
  419988:	test   BYTE PTR [ebx+ebp*8-0x7e61692b],0xb8
  419990:	inc    edx
  419991:	mov    esi,0xa41bca1f
  419996:	repnz fs mov dh,0x15
  41999a:	and    ebx,DWORD PTR [ebx+0x355edc59]
  4199a0:	pop    es
  4199a1:	xchg   edi,eax
  4199a2:	adc    DWORD PTR [esi+0x4b],ecx
  4199a5:	cmp    bl,BYTE PTR [ebx+eax*4-0x6e]
  4199a9:	cmp    al,0x34
  4199ab:	inc    eax
  4199ac:	aam    0x30
  4199ae:	sti    
  4199af:	mov    ch,0x86
  4199b1:	and    al,0xe6
  4199b3:	inc    esi
  4199b4:	dec    eax
  4199b5:	je     0x419a07
  4199b7:	outs   dx,BYTE PTR ds:[esi]
  4199b8:	jns    0x419a21
  4199ba:	jb     0x4199e3
  4199bc:	outs   dx,DWORD PTR ds:[esi]
  4199bd:	test   BYTE PTR [eax-0x1f9c15cc],bh
  4199c3:	(bad)  
  4199c4:	pop    ebx
  4199c5:	sti    
  4199c6:	shr    BYTE PTR [ebp+0x3675d7b6],1
  4199cc:	nop
  4199cd:	xchg   esi,eax
  4199ce:	loope  0x4199d7
  4199d0:	js     0x41999f
  4199d2:	adc    ah,BYTE PTR [ebp+0x55acd892]
  4199d8:	js     0x4199e6
  4199da:	and    bl,BYTE PTR [eax]
  4199dc:	ins    BYTE PTR es:[edi],dx
  4199dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4199de:	cmc    
  4199df:	cmc    
  4199e0:	jnp    0x41998f
  4199e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199e3:	dec    ecx
  4199e4:	leave  
  4199e5:	js     0x419a53
  4199e7:	ror    BYTE PTR [eax],1
  4199e9:	mov    esp,ebx
  4199eb:	adc    ah,bl
  4199ed:	test   ebp,edi
  4199ef:	(bad)  
  4199f1:	sub    BYTE PTR [ebp+0xf5bea06],0xfb
  4199f8:	pop    edi
  4199f9:	add    BYTE PTR [esi+0x46158556],0x42
  419a00:	call   0xb8f9:0x2e4f02c9
  419a07:	pop    esi
  419a08:	imul   ebx,edx,0xf567476b
  419a0e:	mov    esi,0xab6404d9
  419a13:	js     0x419a34
  419a15:	inc    edx
  419a16:	out    dx,al
  419a17:	(bad)  
  419a18:	enter  0x22cd,0x20
  419a1c:	xor    al,0xf
  419a1e:	ins    DWORD PTR es:[edi],dx
  419a1f:	mov    eax,ds:0x5dba0228
  419a24:	ja     0x4199f7
  419a26:	cwde   
  419a27:	stc    
  419a28:	pop    eax
  419a29:	out    0x38,eax
  419a2b:	(bad)  
  419a2c:	out    dx,al
  419a2d:	jo     0x419a1c
  419a2f:	in     al,0xc2
  419a31:	add    ecx,ebp
  419a33:	into   
  419a34:	adc    DWORD PTR [ecx+0x65f9b4a9],ebx
  419a3a:	xor    al,ch
  419a3c:	lds    esp,FWORD PTR cs:[edx+0x2eaa19bd]
  419a43:	push   edx
  419a44:	jno    0x419ac0
  419a46:	add    al,0x21
  419a48:	data16 into 
  419a4a:	sahf   
  419a4b:	mov    bl,0x17
  419a4d:	push   edi
  419a4e:	cmp    eax,0x6fa7586
  419a53:	test   eax,0xcb65a5f2
  419a58:	ins    DWORD PTR es:[edi],dx
  419a59:	push   ecx
  419a5a:	mov    dl,0x2d
  419a5c:	sar    DWORD PTR [ebx],cl
  419a5e:	shr    DWORD PTR [edi],cl
  419a60:	mov    WORD PTR [esi+0x4f],fs
  419a63:	pusha  
  419a64:	test   al,0x23
  419a66:	stos   BYTE PTR es:[edi],al
  419a67:	(bad)  
  419a68:	imul   eax,DWORD PTR [eax-0x1b],0xff6b0e27
  419a6f:	loope  0x419a5d
  419a71:	cmc    
  419a72:	(bad)  
  419a73:	bound  eax,QWORD PTR [edx+0xd]
  419a76:	xchg   edx,eax
  419a77:	mov    al,0xee
  419a79:	pop    esi
  419a7a:	xchg   ecx,eax
  419a7b:	gs xchg esp,eax
  419a7d:	add    BYTE PTR [ebx],dh
  419a7f:	mov    esi,0x7508ea37
  419a84:	lods   al,BYTE PTR ds:[esi]
  419a85:	mov    cl,0x2a
  419a87:	adc    BYTE PTR [ebx+eiz*2-0x6e],dl
  419a8b:	and    dh,BYTE PTR [ecx]
  419a8d:	jmp    0x4095ab7
  419a92:	dec    edi
  419a93:	inc    esp
  419a94:	push   ecx
  419a95:	hlt    
  419a96:	cmp    eax,0xabbec102
  419a9b:	imul   ecx,DWORD PTR [eax],0xffffffe7
  419a9e:	inc    edx
  419a9f:	nop
  419aa0:	jge    0x419a93
  419aa2:	cmp    DWORD PTR [ebx],ebp
  419aa4:	xchg   ecx,eax
  419aa5:	retf   
  419aa6:	outs   dx,DWORD PTR ds:[esi]
  419aa7:	retf   0x16c0
  419aaa:	sub    eax,0xfe451a1
  419aaf:	push   ds
  419ab0:	jmp    0x4292:0x4ebf201c
  419ab7:	adc    BYTE PTR [eax-0x48],al
  419aba:	cwde   
  419abb:	xchg   edx,eax
  419abc:	jb     0x419ac7
  419abe:	add    eax,0x3ef8ef6e
  419ac3:	xchg   ecx,eax
  419ac4:	jg     0x419a64
  419ac6:	inc    esp
  419ac7:	and    al,0x53
  419ac9:	outs   dx,BYTE PTR gs:[esi]
  419acb:	mov    ch,0xf6
  419acd:	dec    ebx
  419ace:	cmp    DWORD PTR [edi],ecx
  419ad0:	call   0x1178da62
  419ad5:	jp     0x419b3b
  419ad7:	sbb    DWORD PTR [edx+0x283f94cc],esp
  419add:	(bad)  
  419ade:	cdq    
  419adf:	and    al,0xfb
  419ae1:	mov    ch,0x1
  419ae3:	mov    al,0xce
  419ae5:	mov    edi,0xb77cf060
  419aea:	(bad)  
  419aeb:	repz lock sbb eax,0x44937971
  419af2:	arpl   WORD PTR [edi-0xd],cx
  419af5:	mov    esp,0x6aae0d1a
  419afa:	fsubr  st(6),st
  419afc:	fdiv   DWORD PTR [ebp-0x580a0252]
  419b02:	out    0x4b,eax
  419b04:	test   DWORD PTR [edx+ecx*2-0x29],ecx
  419b08:	shl    ebx,cl
  419b0a:	popf   
  419b0b:	dec    ebp
  419b0c:	imul   DWORD PTR [ecx+0x21560d07]
  419b12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b13:	lods   al,BYTE PTR ds:[esi]
  419b14:	cs sbb bh,al
  419b17:	and    esp,ebx
  419b19:	mov    ds,WORD PTR [ebp+esi*8-0x4a]
  419b1d:	sbb    eax,0xc4a35f5d
  419b22:	inc    ebp
  419b23:	cmp    BYTE PTR ds:[edx-0x5a6247aa],ch
  419b2a:	dec    eax
  419b2b:	lock rol ecx,1
  419b2e:	adc    BYTE PTR [ecx],al
  419b30:	in     al,dx
  419b31:	fisttp WORD PTR [eax+0x685f6a00]
  419b37:	fwait
  419b38:	cmp    eax,0xd9c5671a
  419b3d:	fild   WORD PTR [ebp+edx*8+0x4e839112]
  419b44:	iret   
  419b45:	and    ebx,0xf66098ea
  419b4b:	push   ecx
  419b4c:	and    BYTE PTR [edi+0x22d42b99],0x32
  419b53:	or     esp,ebx
  419b55:	cs ret 0xbd0e
  419b59:	mov    ds:0x123c3484,al
  419b5e:	xchg   ebx,eax
  419b5f:	jne    0x419b6a
  419b61:	cdq    
  419b62:	mov    edx,0x10de
  419b67:	or     ecx,0x742f
  419b6d:	imul   ecx,ecx,0x30b2
  419b73:	mov    WORD PTR [esp+0x3c],cx
  419b78:	mov    ecx,0x6143
  419b7d:	mov    WORD PTR [esp+0x38],cx
  419b82:	mov    ecx,0x679f
  419b87:	mov    WORD PTR [esp+0x2c],cx
  419b8c:	mov    ecx,0x1210
  419b91:	mov    WORD PTR [esp+0x24],cx
  419b96:	mov    ecx,0x3308
  419b9b:	mov    WORD PTR [esp+0xc],cx
  419ba0:	mov    cx,WORD PTR [esp+0xc]
  419ba5:	sub    cx,dx
  419ba8:	jmp    0x419e05
  419bad:	jge    0x419b6c
  419baf:	into   
  419bb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419bb1:	mov    ?,WORD PTR [esp+esi*4-0x51b6fd1d]
  419bb8:	iret   
  419bb9:	aam    0xa
  419bbb:	fist   WORD PTR [eax-0x413fee64]
  419bc1:	xor    eax,0xbfbebec2
  419bc6:	int3   
  419bc7:	cmp    eax,0x91e5e7c4
  419bcc:	dec    esp
  419bcd:	test   DWORD PTR [ecx],edx
  419bcf:	mov    ebp,0xf542d928
  419bd4:	push   ebx
  419bd5:	cdq    
  419bd6:	adc    al,0xed
  419bd8:	mov    ecx,0xea1b9a50
  419bdd:	(bad)  
  419bde:	mov    bh,0x55
  419be0:	cs je  0x419c12
  419be3:	mov    ebp,0xaa90e553
  419be8:	mov    ecx,0x614dff0d
  419bed:	dec    ebp
  419bee:	mov    edx,0x374726f2
  419bf3:	ss mov esi,0xc2f02ac7
  419bf9:	punpckhbw mm0,QWORD PTR [esi-0x6a]
  419bfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419bfe:	cdq    
  419bff:	or     DWORD PTR [esi+eiz*4-0x228bc2c2],ebp
  419c06:	and    DWORD PTR [eax+0x5b],0x4b
  419c0a:	ds pushf 
  419c0c:	and    al,cl
  419c0e:	cwde   
  419c0f:	mov    ds:0x69ab258a,al
  419c14:	loope  0x419c56
  419c16:	adc    al,BYTE PTR [eax]
  419c18:	cmp    ah,cl
  419c1a:	xchg   esi,eax
  419c1b:	adc    edx,0xac258b17
  419c21:	in     al,0x30
  419c23:	cmp    cl,BYTE PTR [esi+0x9e3566a]
  419c29:	aad    0xf
  419c2b:	lock and DWORD PTR [edx],edx
  419c2e:	je     0x419bd7
  419c30:	xor    ah,BYTE PTR ds:0x9290b834
  419c36:	loop   0x419c03
  419c38:	xchg   edx,eax
  419c39:	jle    0x419c51
  419c3b:	inc    esp
  419c3c:	jb     0x419bc0
  419c3e:	inc    ebp
  419c3f:	out    dx,al
  419c40:	test   BYTE PTR [ebx+ebx*1+0x3b],bl
  419c44:	loop   0x419bc7
  419c46:	mov    bh,0x6
  419c48:	popf   
  419c49:	mov    al,0x6d
  419c4b:	jl     0x419be9
  419c4d:	xor    al,0x2d
  419c4f:	adc    eax,0xca535981
  419c54:	rol    DWORD PTR [ebp-0x62],1
  419c57:	add    ch,cl
  419c59:	shl    DWORD PTR [esp+eax*1],1
  419c5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c5d:	stos   DWORD PTR es:[edi],eax
  419c5e:	shr    BYTE PTR [edi-0x78fa034c],0xc5
  419c65:	(bad)  
  419c66:	(bad)  
  419c67:	mov    esp,0xf683643d
  419c6c:	cmp    ebp,edi
  419c6e:	or     ah,BYTE PTR [esi+0x4c5ce723]
  419c74:	out    dx,eax
  419c75:	push   eax
  419c76:	loop   0x419ce1
  419c78:	ins    DWORD PTR es:[edi],dx
  419c79:	or     DWORD PTR [eax-0x6fbb1042],0xfffffff1
  419c80:	jne    0x419c37
  419c82:	mov    eax,edi
  419c84:	repz enter 0x48fd,0xae
  419c89:	mov    eax,ds:0x478ce7b3
  419c8e:	mov    bl,0x5e
  419c90:	in     eax,0xbb
  419c92:	and    edi,DWORD PTR [esi]
  419c94:	jo     0x419cd2
  419c96:	fwait
  419c97:	jbe    0x419c41
  419c99:	mov    eax,ds:0x86abaee9
  419c9e:	loopne 0x419ca6
  419ca0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ca1:	cs pop ecx
  419ca3:	jmp    0x419c46
  419ca5:	jns    0x419c30
  419ca7:	xor    bl,BYTE PTR ds:0x772fb810
  419cad:	ret    0xe822
  419cb0:	stc    
  419cb1:	cmc    
  419cb2:	jmp    0x419cd4
  419cb4:	(bad)  
  419cb5:	aaa    
  419cb6:	pusha  
  419cb7:	out    dx,eax
  419cb8:	ss aaa 
  419cba:	push   cs
  419cbb:	or     dl,BYTE PTR [eax+0x7c0eb7c3]
  419cc1:	aad    0x85
  419cc3:	xchg   ecx,eax
  419cc4:	cdq    
  419cc5:	xchg   DWORD PTR [ebx],edi
  419cc7:	imul   ecx,DWORD PTR [ecx],0xfffffffe
  419cca:	push   ebx
  419ccb:	cmp    bh,cl
  419ccd:	sbb    edi,esp
  419ccf:	(bad)  
  419cd0:	clc    
  419cd1:	in     eax,dx
  419cd2:	sub    ch,BYTE PTR [ebx-0x422ec199]
  419cd8:	cmp    al,BYTE PTR [edi-0x61bfa00a]
  419cde:	scas   al,BYTE PTR es:[edi]
  419cdf:	addr16 inc edx
  419ce1:	jmp    0xf0d5:0xe7f4565e
  419ce8:	mov    al,ds:0x3ae61b77
  419ced:	xchg   edi,eax
  419cee:	jae    0x419c78
  419cf0:	jno    0x419d5e
  419cf2:	xchg   esp,eax
  419cf3:	sub    al,0xba
  419cf5:	mov    ebp,0x5f16a7a5
  419cfa:	std    
  419cfb:	stc    
  419cfc:	lods   al,BYTE PTR ds:[esi]
  419cfd:	inc    edi
  419cfe:	int3   
  419cff:	mov    al,0x19
  419d01:	xchg   ebx,eax
  419d02:	imul   ecx,DWORD PTR [ebx],0xb71e5daf
  419d08:	int3   
  419d09:	xchg   ebx,eax
  419d0a:	arpl   dx,cx
  419d0c:	mov    edx,0x96f19cc2
  419d11:	mov    al,ds:0xca05481b
  419d16:	dec    esi
  419d17:	ins    BYTE PTR es:[edi],dx
  419d18:	data16 jne 0x419d24
  419d1b:	loope  0x419d2f
  419d1d:	pop    ecx
  419d1e:	jle    0x419ce5
  419d20:	shl    BYTE PTR [ebp-0xa],0xcc
  419d24:	mov    ecx,0x372b9777
  419d29:	xchg   edx,eax
  419d2a:	mov    edx,0x39a89a3c
  419d2f:	ret    
  419d30:	inc    ebx
  419d31:	jmp    0x419d33
  419d33:	shr    ecx,0x2f
  419d36:	ficom  DWORD PTR [esi]
  419d38:	imul   esi,DWORD PTR [eax],0xfffffff4
  419d3b:	rcl    DWORD PTR [edx-0x6b],0x7
  419d3f:	rcr    DWORD PTR [edx+0x33],cl
  419d42:	xor    edx,DWORD PTR [esi+0x58ca93d6]
  419d48:	cmp    edx,DWORD PTR [ebp+eax*2+0x3f]
  419d4c:	shr    BYTE PTR [ebx-0x60249897],1
  419d52:	leave  
  419d53:	mov    ebx,0x81b0f456
  419d58:	pop    esp
  419d59:	das    
  419d5a:	and    al,0xa4
  419d5c:	(bad)  [ebp-0x71]
  419d5f:	push   0xead7f6a4
  419d64:	lea    edi,[esi]
  419d66:	pop    ecx
  419d67:	sahf   
  419d68:	frstor [esi-0x36]
  419d6b:	adc    BYTE PTR [edi],bh
  419d6d:	gs push ebp
  419d6f:	or     al,0x5b
  419d71:	adc    edx,DWORD PTR [esi-0x36757eff]
  419d77:	adc    al,0xf5
  419d79:	push   edi
  419d7a:	pop    ebp
  419d7b:	ja     0x419d8b
  419d7d:	push   ebx
  419d7e:	mov    ds:0x3bd6ae26,al
  419d83:	in     eax,dx
  419d84:	sub    edx,DWORD PTR [ebx-0x6ae6132e]
  419d8a:	xchg   BYTE PTR [ebp-0x38e5e56f],cl
  419d90:	mov    dl,0xf6
  419d92:	inc    ebx
  419d93:	or     BYTE PTR [edi-0x1dff24f6],0x4d
  419d9a:	cmp    DWORD PTR [ecx+0x59],edx
  419d9d:	and    BYTE PTR [esi+esi*1],ah
  419da0:	xchg   ecx,eax
  419da1:	jmp    0x419dc2
  419da3:	call   DWORD PTR [edx+0x3]
  419da6:	sti    
  419da7:	pop    edx
  419da8:	ins    BYTE PTR es:[edi],dx
  419da9:	push   cs
  419daa:	popa   
  419dab:	ins    DWORD PTR es:[edi],dx
  419dac:	xchg   BYTE PTR [ecx-0x5b],al
  419daf:	mov    ds:0xfb6501f1,eax
  419db4:	mov    ebp,0x84c67d9b
  419db9:	stos   DWORD PTR es:[edi],eax
  419dba:	imul   edx,edi,0xffffff82
  419dbd:	stos   DWORD PTR es:[edi],eax
  419dbe:	sbb    dl,BYTE PTR ds:0x23757f0b
  419dc4:	jecxz  0x419e28
  419dc6:	ds jmp 0x419d4f
  419dc9:	push   esp
  419dca:	sbb    al,0xe3
  419dcc:	popf   
  419dcd:	jmp    0xe4a7:0x5fcb2158
  419dd4:	pop    ebp
  419dd5:	ret    
  419dd6:	stos   BYTE PTR es:[edi],al
  419dd7:	inc    edi
  419dd9:	loop   0x419d5b
  419ddb:	pop    esi
  419ddc:	cmp    al,0xea
  419dde:	daa    
  419ddf:	xchg   esi,eax
  419de0:	js     0x419e45
  419de2:	or     eax,0xfb839edd
  419de7:	xchg   esp,eax
  419de8:	shl    DWORD PTR [ecx+0x72],0x9
  419dec:	jo     0x419e25
  419dee:	outs   dx,DWORD PTR ds:[esi]
  419def:	in     eax,0x69
  419df1:	pop    esi
  419df2:	scas   eax,DWORD PTR es:[edi]
  419df3:	shr    bl,cl
  419df5:	add    eax,0x8c2475c4
  419dfa:	call   0x6b8c:0xf35536da
  419e01:	fnstsw WORD PTR [eax-0x749969f6]
  419e07:	push   esp
  419e08:	and    al,0x24
  419e0a:	xor    cx,dx
  419e0d:	mov    dx,WORD PTR [esp+0x2c]
  419e12:	imul   cx,dx
  419e16:	mov    dx,WORD PTR [esp+0x38]
  419e1b:	and    cx,dx
  419e1e:	mov    edx,0x694c
  419e23:	and    cx,dx
  419e26:	mov    dx,WORD PTR [esp+0x3c]
  419e2b:	cmp    dx,cx
  419e2e:	ja     0x41a320
  419e34:	mov    ecx,DWORD PTR [esp+0x18]
  419e38:	mov    edx,DWORD PTR [esp+0x1c]
  419e3c:	jmp    0x41a099
  419e41:	add    edi,DWORD PTR [edx-0x6d83ed16]
  419e47:	cmp    al,0xbc
  419e49:	loopne 0x419e57
  419e4b:	inc    edx
  419e4c:	fisttp QWORD PTR [ebp+ebp*8-0x6]
  419e50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e51:	adc    edx,DWORD PTR [edi]
  419e53:	sar    BYTE PTR [esi-0x41413dcb],0x20
  419e5a:	mov    dh,0xb9
  419e5c:	xchg   ebx,eax
  419e5d:	das    
  419e5e:	fild   DWORD PTR [ebp+0x3273f1bc]
  419e64:	outs   dx,BYTE PTR ds:[esi]
  419e65:	sub    cl,BYTE PTR [edi+0x4]
  419e68:	mov    cl,ch
  419e6a:	(bad)  
  419e6b:	cmp    al,0x2c
  419e6d:	aas    
  419e6e:	jno    0x419ee0
  419e70:	mov    al,ds:0x9d8da78f
  419e75:	adc    BYTE PTR [edi],cl
  419e77:	add    ebp,edi
  419e79:	or     DWORD PTR [edx],esp
  419e7b:	aas    
  419e7c:	mov    esi,0x150f1781
  419e81:	shl    DWORD PTR [ebx-0xcabf742],cl
  419e87:	dec    esi
  419e88:	dec    eax
  419e89:	mov    esi,0x74ebae3b
  419e8e:	out    dx,eax
  419e8f:	xchg   edi,eax
  419e90:	sbb    bl,BYTE PTR [edx+0x21d4ab31]
  419e96:	pop    esi
  419e97:	xchg   edx,eax
  419e98:	retf   0xa50
  419e9b:	mov    ah,0x20
  419e9d:	lods   al,BYTE PTR ds:[esi]
  419e9e:	inc    esp
  419e9f:	nop
  419ea0:	dec    ebx
  419ea1:	test   al,0xdc
  419ea3:	lods   eax,DWORD PTR ds:[esi]
  419ea4:	rol    DWORD PTR [edx+ebx*8],cl
  419ea7:	push   esp
  419ea8:	loop   0x419ed6
  419eaa:	popf   
  419eab:	push   esp
  419eac:	(bad)  
  419ead:	loopne 0x419e66
  419eaf:	cmp    DWORD PTR [ebp+0x5e],ecx
  419eb2:	jmp    0x9bca:0x17730265
  419eb9:	jbe    0x419ebb
  419ebb:	aaa    
  419ebc:	adc    BYTE PTR [ecx+0x7f193bb],ah
  419ec2:	test   al,0xa2
  419ec4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ec5:	retf   
  419ec6:	pop    es
  419ec7:	lods   eax,DWORD PTR ds:[esi]
  419ec8:	nop
  419ec9:	sbb    BYTE PTR [ecx],0xb7
  419ecc:	jae    0x419ea9
  419ece:	in     eax,0x55
  419ed0:	lock (bad) 
  419ed2:	xchg   ebx,eax
  419ed3:	xchg   esp,eax
  419ed4:	data16 jecxz 0x419e7c
  419ed7:	imul   esi,DWORD PTR ds:0x4abbf32a,0xee7118e2
  419ee1:	inc    ebx
  419ee2:	das    
  419ee3:	add    bl,bl
  419ee5:	lahf   
  419ee6:	cmc    
  419ee7:	jae    0x419f5f
  419ee9:	sti    
  419eea:	mov    esp,edx
  419eec:	out    0x2c,eax
  419eee:	jo     0x419ed3
  419ef0:	lock add al,0xea
  419ef3:	cmp    edi,edi
  419ef5:	clc    
  419ef6:	(bad)  
  419ef7:	fnstcw WORD PTR [eax+0x52]
  419efa:	or     edx,DWORD PTR [edi-0x5dd3071]
  419f00:	push   eax
  419f01:	popa   
  419f02:	or     BYTE PTR [ebp+eiz*4-0xc32ad4f],dl
  419f09:	jae    0x419f41
  419f0b:	jns    0x419ee2
  419f0d:	test   BYTE PTR [ebp+ecx*2-0x7],dh
  419f11:	mov    eax,0x5a9663c6
  419f16:	xor    eax,0xf12bc5a3
  419f1b:	lock daa 
  419f1d:	mov    BYTE PTR [ebx-0xe],bh
  419f20:	cmp    DWORD PTR [ebx],esi
  419f22:	ror    DWORD PTR [edx-0x190863f6],1
  419f28:	(bad)  
  419f29:	mov    ch,0xa8
  419f2b:	scas   eax,DWORD PTR es:[edi]
  419f2c:	dec    esp
  419f2d:	in     eax,dx
  419f2e:	fmul   QWORD PTR [ecx-0x6c3d1614]
  419f34:	lock jecxz 0x419fae
  419f37:	nop
  419f38:	sub    al,0x5a
  419f3a:	dec    eax
  419f3b:	in     eax,dx
  419f3c:	shr    dh,cl
  419f3e:	mov    eax,0x70bf9a02
  419f43:	and    ebp,DWORD PTR [esi+ebp*8-0x4da1e2b6]
  419f4a:	out    0xe7,al
  419f4c:	popf   
  419f4d:	pop    ds
  419f4e:	(bad)  
  419f4f:	call   0xa2b4:0xfb279017
  419f56:	mov    cl,0x53
  419f58:	xchg   edi,eax
  419f59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f5a:	in     eax,dx
  419f5b:	xchg   esi,eax
  419f5c:	jnp    0x419f14
  419f5e:	ja     0x419f58
  419f60:	retf   0xa815
  419f63:	xchg   BYTE PTR [edi-0x53],ch
  419f66:	sub    ah,bh
  419f68:	(bad)  [di-0x4a]
  419f6c:	sahf   
  419f6d:	pop    es
  419f6e:	sbb    ch,BYTE PTR ss:[ebx+0x66]
  419f72:	pop    ebp
  419f73:	loop   0x419f64
  419f75:	adc    BYTE PTR [ecx],0x21
  419f78:	je     0x419f80
  419f7a:	loop   0x419f2f
  419f7c:	inc    ecx
  419f7d:	inc    ebx
  419f7e:	push   ecx
  419f7f:	fbstp  TBYTE PTR [esi]
  419f81:	add    esp,DWORD PTR [esi-0x25]
  419f84:	add    edx,esp
  419f86:	pop    esp
  419f87:	(bad)  
  419f88:	fidiv  WORD PTR [ecx-0x2c]
  419f8b:	pop    ecx
  419f8c:	and    DWORD PTR [esi-0x3fc0e2aa],esp
  419f92:	(bad)  
  419f93:	dec    edi
  419f94:	inc    esp
  419f95:	in     al,dx
  419f96:	dec    edi
  419f97:	pop    edx
  419f98:	int    0xc0
  419f9a:	add    eax,eax
  419f9c:	pop    esp
  419f9d:	popf   
  419f9e:	mov    ds:0x69b8df83,eax
  419fa3:	sahf   
  419fa4:	dec    esp
  419fa5:	test   BYTE PTR ds:[eax+ebx*4],al
  419fa9:	arpl   WORD PTR [eax],cx
  419fab:	jne    0x419fbc
  419fad:	and    eax,0x272009da
  419fb2:	shl    dh,cl
  419fb4:	nop
  419fb5:	mov    cs,WORD PTR [edx-0x53]
  419fb8:	inc    edi
  419fb9:	jle    0x41a038
  419fbb:	sbb    BYTE PTR [ebp+0x6b],dh
  419fbe:	sub    al,0x30
  419fc0:	jo     0x41a02c
  419fc2:	adc    bl,BYTE PTR [ebp+0x26]
  419fc5:	inc    eax
  419fc6:	ficomp DWORD PTR [edi+esi*4-0x3f]
  419fca:	mov    esi,0x2b10a7b4
  419fcf:	pop    edx
  419fd0:	out    0x70,al
  419fd2:	jl     0x419fd5
  419fd4:	ins    BYTE PTR es:[edi],dx
  419fd5:	je     0x419fcc
  419fd7:	clts   
  419fd9:	dec    edi
  419fda:	mov    ecx,0xf2fa118
  419fdf:	xor    DWORD PTR [edx],0xffffffd7
  419fe2:	cld    
  419fe3:	xor    BYTE PTR [edx-0x1c],cl
  419fe6:	ret    
  419fe7:	in     al,dx
  419fe8:	and    al,BYTE PTR [eax+0x6f]
  419feb:	add    eax,0x40b38c38
  419ff0:	sbb    al,0x94
  419ff2:	and    al,0xd9
  419ff4:	loop   0x419ff4
  419ff6:	leave  
  419ff7:	pushf  
  419ff8:	cmp    ecx,ebx
  419ffa:	dec    ecx
  419ffb:	ja     0x419fb3
  419ffd:	xor    BYTE PTR [edx+0x1f],bh
  41a000:	out    0xb3,eax
  41a002:	psubusb mm7,QWORD PTR [ebx+0x40]
  41a006:	sbb    al,0x43
  41a008:	ins    BYTE PTR es:[edi],dx
  41a009:	js     0x419fed
  41a00b:	ficom  WORD PTR [esi]
  41a00d:	stos   DWORD PTR es:[edi],eax
  41a00e:	and    ah,dh
  41a010:	push   ds
  41a011:	popf   
  41a012:	fwait
  41a013:	pop    ss
  41a014:	and    al,0xb9
  41a016:	and    dh,0x20
  41a019:	ret    
  41a01a:	stos   BYTE PTR es:[edi],al
  41a01b:	inc    edi
  41a01c:	cmp    DWORD PTR [esi-0x3a],esi
  41a01f:	imul   bh
  41a021:	inc    ebp
  41a022:	jb     0x419fbb
  41a024:	and    al,0x5a
  41a026:	mov    edi,0x67a2c138
  41a02b:	cmp    al,0x19
  41a02d:	lods   eax,DWORD PTR ds:[esi]
  41a02e:	data16 gs out dx,al
  41a031:	rol    DWORD PTR [eax+0x19],cl
  41a034:	les    edi,FWORD PTR [eax]
  41a036:	sbb    BYTE PTR [edi],0xde
  41a039:	sbb    DWORD PTR [esi],edi
  41a03b:	jl     0x419fbf
  41a03d:	ins    BYTE PTR es:[edi],dx
  41a03e:	jl     0x41a06e
  41a040:	scas   eax,DWORD PTR es:[edi]
  41a041:	retf   
  41a042:	es aam 0xbe
  41a045:	cmc    
  41a046:	call   DWORD PTR [edx-0x74]
  41a049:	push   edi
  41a04a:	fwait
  41a04b:	neg    esp
  41a04d:	loope  0x41a056
  41a04f:	(bad)  
  41a050:	and    edi,DWORD PTR [ecx+edi*1+0x1c]
  41a054:	loop   0x419ff2
  41a056:	(bad)  
  41a058:	ret    
  41a059:	sbb    eax,0xbb02cf68
  41a05e:	bound  ecx,QWORD PTR [edx+0x175cd7e7]
  41a064:	imul   edi,DWORD PTR [ecx-0x4],0x1d
  41a068:	lds    edi,FWORD PTR [ebp-0x23]
  41a06b:	jge    0x41a025
  41a06d:	sub    DWORD PTR [ebx],0x7b06d9fb
  41a073:	je     0x41a064
  41a075:	imul   ebp,DWORD PTR [edi],0xf05efeb6
  41a07b:	shr    DWORD PTR [ebp-0x44f37c],cl
  41a081:	adc    BYTE PTR [esi],ah
  41a083:	inc    eax
  41a084:	pop    ebp
  41a085:	or     eax,0xd1f4ac7e
  41a08a:	jge    0x41a069
  41a08c:	mov    edi,ecx
  41a08e:	push   ss
  41a08f:	addr16 fneni(8087 only) 
  41a092:	ins    DWORD PTR es:[edi],dx
  41a093:	inc    ebp
  41a094:	fistp  DWORD PTR [ecx+0x1b]
  41a097:	ins    DWORD PTR es:[edi],dx
  41a098:	push   eax
  41a099:	shrd   ecx,edx,0x2
  41a09d:	xor    ecx,eax
  41a09f:	mov    eax,DWORD PTR [esp+0x18]
  41a0a3:	shr    edx,0x2
  41a0a6:	mov    edx,DWORD PTR [esp+0x1c]
  41a0aa:	xor    edx,edx
  41a0ac:	jmp    0x41a309
  41a0b1:	scas   ax,WORD PTR es:[edi]
  41a0b3:	xchg   ebx,eax
  41a0b4:	mov    dh,0x9c
  41a0b6:	mov    edx,0x94c4af6c
  41a0bb:	pop    esp
  41a0bc:	rcl    esp,1
  41a0be:	fs loope 0x41a051
  41a0c1:	mov    ebx,DWORD PTR [ebx]
  41a0c3:	sar    BYTE PTR [esi-0x41413dcb],0xbf
  41a0ca:	fs push edi
  41a0cc:	les    ecx,FWORD PTR [edi+0x68]
  41a0cf:	or     ah,BYTE PTR ds:0xb241f37e
  41a0d5:	popf   
  41a0d6:	mov    esp,0x6f7bd6d1
  41a0db:	xchg   ebp,eax
  41a0dc:	int3   
  41a0dd:	out    dx,eax
  41a0de:	mov    ch,0xe4
  41a0e0:	shr    edi,cl
  41a0e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a0e3:	sbb    DWORD PTR [ebx+esi*1-0x41],ebx
  41a0e7:	data16 mov ch,0x49
  41a0ea:	pop    ss
  41a0eb:	add    DWORD PTR [ebp+0x6c],ebx
  41a0ee:	popf   
  41a0ef:	xor    eax,0x40504049
  41a0f4:	or     BYTE PTR [edi],bh
  41a0f6:	lods   eax,DWORD PTR ds:[esi]
  41a0f7:	sar    edi,1
  41a0f9:	jg     0x41a135
  41a0fb:	out    0xd1,eax
  41a0fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a0fe:	push   esp
  41a0ff:	mov    ch,0x7b
  41a101:	cs push ss
  41a103:	push   es
  41a104:	iret   
  41a105:	sbb    al,0xa5
  41a107:	sbb    DWORD PTR [ecx+0x7aa38ee4],0xbb093a1b
  41a111:	push   es
  41a112:	sub    ebx,DWORD PTR [ebx+0x3a]
  41a115:	mov    dh,0xe
  41a117:	mov    esi,DWORD PTR [edx]
  41a119:	pop    es
  41a11a:	jns    0x41a0f9
  41a11c:	push   ss
  41a11d:	addr16 sub al,0x35
  41a120:	and    al,BYTE PTR ds:0x95e8d63b
  41a126:	inc    esp
  41a127:	xor    BYTE PTR [ebx-0x3cf7631b],ah
  41a12d:	push   ecx
  41a12e:	pop    ebp
  41a12f:	sbb    eax,0xc610fc34
  41a134:	sub    DWORD PTR [edi],ebx
  41a136:	aad    0xd
  41a138:	mov    WORD PTR [esi+0x67],cs
  41a13b:	sahf   
  41a13c:	mov    al,0xa2
  41a13e:	ins    BYTE PTR es:[edi],dx
  41a13f:	jmp    0x41a19e
  41a141:	sub    eax,0x7243f8a9
  41a146:	fadd   DWORD PTR [eax-0x44038278]
  41a14c:	mov    ch,0x55
  41a14e:	sub    BYTE PTR [edi+0x69],ah
  41a151:	test   DWORD PTR [edi-0x7f],0x53ba81c6
  41a158:	dec    edi
  41a159:	or     esp,ebp
  41a15b:	pop    edx
  41a15c:	adc    bl,BYTE PTR [ebp-0xc]
  41a15f:	cli    
  41a160:	adc    al,0x2b
  41a162:	scas   al,BYTE PTR es:[edi]
  41a163:	fs mov ah,0xbb
  41a166:	mov    dh,0x7d
  41a168:	ror    edi,1
  41a16a:	inc    eax
  41a16b:	ins    DWORD PTR es:[edi],dx
  41a16c:	xor    al,0x1e
  41a16e:	sub    ch,bh
  41a170:	jle    0x41a16a
  41a172:	jmp    0x78027f54
  41a177:	inc    esi
  41a178:	jno    0x41a158
  41a17a:	sbb    eax,0xf32b166d
  41a17f:	fwait
  41a180:	sbb    DWORD PTR [eax+0x6e5dd5f1],ebp
  41a186:	mov    ebx,0xec303178
  41a18b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a18c:	cmp    BYTE PTR [ebx],al
  41a18e:	adc    edi,DWORD PTR [ebx]
  41a190:	popa   
  41a191:	aaa    
  41a192:	and    ecx,eax
  41a194:	adc    eax,0xd6f8ead
  41a199:	lahf   
  41a19a:	shr    edx,cl
  41a19c:	adc    al,0xe7
  41a19e:	inc    esp
  41a19f:	lods   eax,DWORD PTR ds:[esi]
  41a1a0:	adc    DWORD PTR [edx+0x2d06e501],0xffffffa5
  41a1a7:	in     al,dx
  41a1a8:	xchg   BYTE PTR [eax],dl
  41a1aa:	jge    0x41a1bc
  41a1ac:	test   DWORD PTR [edi],ecx
  41a1ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a1af:	loop   0x41a17f
  41a1b1:	mov    ds:0x63296d84,eax
  41a1b6:	loopne 0x41a1db
  41a1b8:	push   edx
  41a1b9:	xchg   esi,eax
  41a1ba:	fstp   DWORD PTR [ebp-0x72feb390]
  41a1c0:	mov    bh,0x6c
  41a1c2:	xchg   edi,eax
  41a1c3:	enter  0x2cb9,0x8f
  41a1c7:	sub    dl,BYTE PTR [bx+di]
  41a1ca:	outs   dx,BYTE PTR ds:[esi]
  41a1cb:	xchg   DWORD PTR [edi+0x6be7dff6],esp
  41a1d1:	bound  esp,QWORD PTR [edx]
  41a1d3:	cmp    ecx,DWORD PTR [esi-0x3d]
  41a1d6:	xchg   esi,eax
  41a1d7:	lahf   
  41a1d8:	push   eax
  41a1d9:	push   ebp
  41a1da:	push   ebx
  41a1db:	mov    cl,0x18
  41a1dd:	(bad)  
  41a1df:	es push ss
  41a1e1:	sbb    BYTE PTR [edi+0x49],cl
  41a1e4:	push   esp
  41a1e5:	popf   
  41a1e6:	je     0x41a1e5
  41a1e8:	push   ecx
  41a1e9:	push   ecx
  41a1ea:	sbb    cl,dh
  41a1ec:	and    eax,0x9ac6fcc1
  41a1f1:	push   0xffffffd5
  41a1f3:	popf   
  41a1f4:	loopne 0x41a23f
  41a1f6:	out    0x50,al
  41a1f8:	retf   0x2c6c
  41a1fb:	rcl    DWORD PTR [edx-0x42],0x1b
  41a1ff:	jg     0x41a1b2
  41a201:	(bad)  
  41a202:	enter  0xb929,0x23
  41a206:	pushf  
  41a207:	mov    bh,0xfa
  41a209:	xlat   BYTE PTR ds:[ebx]
  41a20a:	cmp    dl,dh
  41a20c:	pusha  
  41a20d:	mov    ecx,0xc1bfa3f6
  41a212:	mov    ds:0x94bfeb65,eax
  41a217:	faddp  st(1),st
  41a219:	push   eax
  41a21a:	xor    al,0x2b
  41a21c:	dec    edx
  41a21d:	shl    BYTE PTR [ebx-0x2c],cl
  41a220:	push   ss
  41a221:	push   ebp
  41a222:	rep ins BYTE PTR es:[edi],dx
  41a224:	(bad)  
  41a225:	push   cs
  41a226:	dec    eax
  41a227:	(bad)  
  41a228:	out    dx,eax
  41a229:	add    eax,DWORD PTR [esi+0x51]
  41a22c:	out    dx,eax
  41a22d:	xor    BYTE PTR [ecx],dl
  41a22f:	mov    ebx,0xcc25d8c
  41a234:	push   0x4e
  41a236:	mov    eax,ds:0x64b8a0b3
  41a23b:	add    cl,bl
  41a23d:	int3   
  41a23e:	scas   eax,DWORD PTR es:[edi]
  41a23f:	dec    edx
  41a240:	pop    ecx
  41a241:	sbb    bh,BYTE PTR [edi+0x7aafc97]
  41a247:	daa    
  41a248:	mov    al,0xab
  41a24a:	xor    ah,ch
  41a24c:	repnz sub al,0xea
  41a24f:	ins    DWORD PTR es:[edi],dx
  41a250:	inc    edi
  41a251:	das    
  41a252:	inc    edx
  41a253:	aad    0xbe
  41a255:	fwait
  41a256:	inc    edx
  41a257:	mov    al,0x1
  41a259:	push   cs
  41a25a:	nop
  41a25b:	pushf  
  41a25c:	xchg   esp,eax
  41a25d:	push   edx
  41a25e:	inc    ecx
  41a25f:	popa   
  41a260:	adc    DWORD PTR [ecx+eiz*2],ecx
  41a263:	shl    esp,0x7d
  41a266:	sahf   
  41a267:	xchg   ebx,eax
  41a268:	lock into 
  41a26a:	and    edi,esi
  41a26c:	xor    ebx,DWORD PTR [edx+0x1ff0283e]
  41a272:	xor    dl,BYTE PTR [ebx-0x62]
  41a275:	mov    ?,WORD PTR [edi]
  41a277:	xchg   edx,eax
  41a278:	(bad)  
  41a279:	rcl    eax,cl
  41a27b:	jnp    0x41a27e
  41a27d:	rcl    BYTE PTR [eax+0x9500cbc],1
  41a283:	and    BYTE PTR [ecx-0x6535be39],cl
  41a289:	mov    eax,ds:0xf3a73608
  41a28e:	lods   al,BYTE PTR ds:[esi]
  41a28f:	cmp    ah,dl
  41a291:	fmul   QWORD PTR [eax]
  41a293:	or     al,0x79
  41a295:	mov    eax,ds:0x8675fc02
  41a29a:	call   DWORD PTR [esi]
  41a29c:	sbb    ch,BYTE PTR [esi-0x6d348e87]
  41a2a2:	arpl   WORD PTR [edx-0x73],si
  41a2a5:	or     BYTE PTR [edx+0x61],al
  41a2a8:	mov    ch,bh
  41a2aa:	iret   
  41a2ab:	(bad)
  41a2ae:	mov    edi,0x4c10700a
  41a2b3:	cmp    DWORD PTR [edi-0x44280949],eax
  41a2b9:	pushf  
  41a2ba:	leave  
  41a2bb:	xchg   ecx,ebx
  41a2bd:	popf   
  41a2be:	je     0x41a2e6
  41a2c0:	sub    eax,0xb807233e
  41a2c5:	mov    esp,0x90bf2c70
  41a2ca:	cmp    DWORD PTR [esi+0xc],edx
  41a2cd:	pop    edi
  41a2ce:	or     eax,0x94c8e230
  41a2d3:	mov    bl,0x24
  41a2d5:	add    eax,DWORD PTR [edx+ecx*1+0x44]
  41a2d9:	fdivrp st(5),st
  41a2db:	dec    edx
  41a2dc:	cmp    eax,0x5368ed55
  41a2e1:	push   0x25c2e4ce
  41a2e6:	dec    ecx
  41a2e7:	dec    edi
  41a2e8:	mov    edx,fs
  41a2ea:	and    eax,DWORD PTR [esi-0x6]
  41a2ed:	jbe    0x41a286
  41a2ef:	jle    0x41a353
  41a2f1:	ins    DWORD PTR es:[edi],dx
  41a2f2:	pop    ds
  41a2f3:	ret    
  41a2f4:	ror    esi,0x95
  41a2f7:	ja     0x41a2ce
  41a2f9:	adc    DWORD PTR [ebp-0x10],edi
  41a2fc:	gs or  esp,esi
  41a2ff:	(bad)  
  41a300:	cmp    ah,ah
  41a302:	cmc    
  41a303:	fsqrt  
  41a305:	loop   0x41a36d
  41a307:	mov    edx,0x52d10be7
  41a30c:	push   esi
  41a30d:	shl    eax,0x1e
  41a310:	push   edi
  41a311:	lea    eax,[esp+0x7c]
  41a315:	push   eax
  41a316:	lea    eax,[esp+0x28]
  41a31a:	push   eax
  41a31b:	call   0x411472
  41a320:	push   DWORD PTR [esp+0x74]
  41a324:	push   DWORD PTR [esp+0x74]
  41a328:	push   DWORD PTR [esp+0x24]
  41a32c:	push   DWORD PTR [esp+0x24]
  41a330:	call   0x412349
  41a335:	mov    edx,DWORD PTR [esp+0x18]
  41a339:	mov    eax,DWORD PTR [esp+0x1c]
  41a33d:	mov    ecx,DWORD PTR [esp+0x18]
  41a341:	mov    edi,DWORD PTR [esp+0x1c]
  41a345:	shrd   edx,eax,0x2
  41a349:	shr    eax,0x2
  41a34c:	shl    ecx,0x1e
  41a34f:	xor    ecx,ecx
  41a351:	mov    eax,0x32de6d5d
  41a356:	xor    edx,eax
  41a358:	or     ecx,edx
  41a35a:	mov    edx,DWORD PTR [esp+0x5c]
  41a35e:	mov    DWORD PTR [edx],ecx
  41a360:	mov    ecx,DWORD PTR [esp+0x18]
  41a364:	jmp    0x41a5c1
  41a369:	repz sub cl,0x71
  41a36d:	mov    edx,0x20807cbb
  41a372:	shl    al,cl
  41a374:	iret   
  41a375:	sub    DWORD PTR [esi],edx
  41a377:	(bad)  
  41a378:	fld    QWORD PTR [edi+ebx*1]
  41a37b:	sar    BYTE PTR [esi-0x41413dcb],0xa5
  41a382:	sbb    eax,ebp
  41a384:	mov    WORD PTR [eax+esi*2-0x7f7f0372],ds
  41a38b:	sub    DWORD PTR [esi-0x6010c4d6],ebx
  41a391:	enter  0x5ab1,0x57
  41a395:	mov    bh,0xab
  41a397:	sbb    eax,0xba3c5c02
  41a39c:	sbb    esp,DWORD PTR [edi]
  41a39e:	test   eax,0xf24625a7
  41a3a3:	sub    eax,0xfda234b
  41a3a8:	xchg   BYTE PTR ss:[ecx-0x2a221809],cl
  41a3af:	sahf   
  41a3b0:	idiv   al
  41a3b2:	bound  ebp,QWORD PTR [edx-0x13]
  41a3b5:	push   eax
  41a3b6:	imul   edx,DWORD PTR [edx],0x4b63d1a1
  41a3bc:	dec    esp
  41a3bd:	sti    
  41a3be:	push   0xff88b750
  41a3c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a3c4:	jge    0x41a41e
  41a3c6:	lock add DWORD PTR ss:[esi],edi
  41a3ca:	lea    esp,[edi+0x1a16099d]
  41a3d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3d1:	das    
  41a3d2:	cmp    ah,BYTE PTR [ebx]
  41a3d4:	leave  
  41a3d5:	mov    ds:0x3330d97f,al
  41a3da:	cmp    BYTE PTR [ecx],dh
  41a3dc:	or     al,0x41
  41a3de:	clc    
  41a3df:	fdiv   DWORD PTR [edx]
  41a3e1:	and    DWORD PTR [bx],edi
  41a3e4:	xchg   ebp,eax
  41a3e5:	sub    ebx,ebp
  41a3e7:	shl    al,0xb2
  41a3ea:	push   ss
  41a3eb:	push   0xffffffed
  41a3ed:	out    dx,eax
  41a3ee:	mov    DWORD PTR [edx+ecx*2+0x38],ebx
  41a3f2:	inc    esp
  41a3f3:	cld    
  41a3f4:	xchg   ebx,eax
  41a3f5:	and    cl,BYTE PTR [ebp+0x3923b96c]
  41a3fb:	pop    eax
  41a3fc:	add    dl,BYTE PTR [eax]
  41a3fe:	retf   
  41a3ff:	push   DWORD PTR [ecx]
  41a401:	pop    edi
  41a402:	sub    DWORD PTR [edx-0x26],ebp
  41a405:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a406:	retf   0x39c
  41a409:	cdq    
  41a40a:	xlat   BYTE PTR ds:[ebx]
  41a40b:	mov    dl,0xae
  41a40d:	into   
  41a40e:	push   esp
  41a40f:	cmc    
  41a410:	ins    DWORD PTR es:[edi],dx
  41a411:	jmp    0xaf37:0x8316506d
  41a418:	ror    DWORD PTR [eax+0x37639c77],cl
  41a41e:	add    edx,DWORD PTR [eax+0x49]
  41a421:	jmp    0x2eea1a1d
  41a426:	jl     0x41a445
  41a428:	repz rcr BYTE PTR [eax+0x6f],0x36
  41a42d:	and    DWORD PTR [eax+0x6b8a9c7c],ebp
  41a433:	push   edi
  41a434:	fmul   st(0),st
  41a436:	inc    esp
  41a437:	outs   dx,DWORD PTR ds:[esi]
  41a438:	shl    BYTE PTR [edx],cl
  41a43a:	scas   al,BYTE PTR es:[edi]
  41a43b:	bound  eax,QWORD PTR [ecx-0x71]
  41a43e:	hlt    
  41a43f:	xor    BYTE PTR [ebp-0x3ff708b6],bl
  41a445:	adc    cl,BYTE PTR [edx-0x1e]
  41a448:	xlat   BYTE PTR ds:[ebx]
  41a449:	imul   ebx,ecx,0xe3872ecf
  41a44f:	pop    ebp
  41a450:	arpl   WORD PTR [ebp-0x40],dx
  41a453:	not    BYTE PTR [edi+0x4a]
  41a456:	pop    ss
  41a457:	jmp    0x14f:0xb7197abe
  41a45e:	push   esp
  41a45f:	cld    
  41a460:	dec    ecx
  41a461:	imul   edx,esi,0x51
  41a464:	inc    ebp
  41a465:	test   eax,0x2246fa90
  41a46a:	cmp    DWORD PTR [edx+0x4c],ecx
  41a46d:	(bad)  
  41a46e:	iret   
  41a46f:	stc    
  41a470:	mov    cl,0x5d
  41a472:	sbb    eax,0xc9ebf892
  41a477:	mov    eax,0x3b956f31
  41a47c:	enter  0x7d9e,0xd6
  41a480:	(bad)  
  41a481:	leave  
  41a482:	adc    al,0x4e
  41a484:	sbb    edx,DWORD PTR [edi+0x1a]
  41a487:	retf   0x921d
  41a48a:	pop    ecx
  41a48b:	pushf  
  41a48c:	sahf   
  41a48d:	cmp    BYTE PTR [ecx+eax*8],bh
  41a490:	jg     0x41a435
  41a492:	mov    al,ds:0x48ac9176
  41a497:	mov    ebx,esi
  41a499:	or     al,0xea
  41a49b:	dec    edx
  41a49c:	imul   edi,DWORD PTR [ecx],0xdadb6569
  41a4a2:	adc    eax,0x33447ad8
  41a4a7:	sub    ebp,DWORD PTR [esi+ecx*4+0x19d802ea]
  41a4ae:	xchg   DWORD PTR [edx],eax
  41a4b0:	or     DWORD PTR [eax+0x6a9bf176],esp
  41a4b6:	adc    DWORD PTR [eax-0x10],eax
  41a4b9:	mov    ds:0xfb82c1dd,eax
  41a4be:	jl     0x41a502
  41a4c0:	pusha  
  41a4c1:	(bad)  
  41a4c2:	sub    ebx,ebp
  41a4c4:	jbe    0x41a530
  41a4c6:	or     eax,0x1c4bd68
  41a4cb:	inc    esp
  41a4cc:	(bad)  
  41a4cd:	pop    ebx
  41a4ce:	jmp    0xe81256d2
  41a4d3:	mov    esi,0x37a1361f
  41a4d8:	dec    edi
  41a4d9:	inc    ebx
  41a4da:	aad    0xa8
  41a4dc:	enter  0xaa25,0x4c
  41a4e0:	inc    ebp
  41a4e1:	push   esi
  41a4e2:	xor    edi,DWORD PTR [esi]
  41a4e4:	loop   0x41a4ea
  41a4e6:	push   DWORD PTR [ebx+0x3b]
  41a4e9:	int    0x98
  41a4eb:	das    
  41a4ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a4ed:	xchg   esp,eax
  41a4ee:	cmp    al,0x32
  41a4f0:	cmp    DWORD PTR [ecx-0x5c0a0a7e],eax
  41a4f6:	shl    DWORD PTR [edi],cl
  41a4f8:	pop    edi
  41a4f9:	test   ebx,ebx
  41a4fb:	sbb    BYTE PTR [edi+0x6e],0x95
  41a4ff:	sbb    al,0x71
  41a501:	jo     0x41a51b
  41a503:	xor    cl,BYTE PTR [ecx-0x23820d5]
  41a509:	and    al,BYTE PTR [edi+ecx*4+0x35]
  41a50d:	dec    edi
  41a50e:	mov    dh,0x67
  41a510:	and    BYTE PTR [edi],0x79
  41a513:	repnz adc BYTE PTR [eax-0xc],ah
  41a517:	inc    ecx
  41a518:	shl    ebp,cl
  41a51a:	sub    eax,0x13301aac
  41a51f:	sub    DWORD PTR [edi+eiz*1],ebp
  41a522:	das    
  41a523:	add    BYTE PTR [edi-0x4a07e3ba],0x4c
  41a52a:	push   edx
  41a52b:	sub    DWORD PTR [edx-0x1383701d],edx
  41a531:	cs push es
  41a533:	jae    0x41a5b3
  41a535:	sbb    al,BYTE PTR [edx+0xe]
  41a538:	add    esp,DWORD PTR [eax-0x26]
  41a53b:	pop    esi
  41a53c:	or     eax,edx
  41a53e:	and    eax,0x32304813
  41a543:	xchg   bh,dh
  41a545:	(bad)  [edi-0x33]
  41a548:	xchg   ecx,esi
  41a54a:	adc    bh,dh
  41a54c:	dec    ecx
  41a54d:	inc    esp
  41a54e:	cmp    eax,DWORD PTR [ebx+0x7e]
  41a551:	push   ds
  41a552:	sti    
  41a553:	add    al,0x78
  41a555:	ins    BYTE PTR es:[edi],dx
  41a556:	push   ecx
  41a557:	xor    eax,0x11182d2e
  41a55c:	jmp    0xb207ad0a
  41a561:	mov    BYTE PTR ds:[eax+0x2e31e73b],ch
  41a568:	xchg   edx,eax
  41a569:	cmc    
  41a56a:	or     bl,BYTE PTR [edx-0x3e]
  41a56d:	jp     0x41a55d
  41a56f:	mov    bh,bh
  41a571:	pop    ebp
  41a572:	hlt    
  41a573:	jne    0x41a5f4
  41a575:	mov    ebx,0x2c8a83e5
  41a57a:	jbe    0x41a5b1
  41a57c:	sub    BYTE PTR [ecx+0x187b0ea0],0xcf
  41a583:	data16 aaa 
  41a585:	cmc    
  41a586:	fwait
  41a587:	loope  0x41a537
  41a589:	into   
  41a58a:	pop    es
  41a58b:	test   DWORD PTR [edx-0x4107146e],ebp
  41a591:	pop    ebx
  41a592:	(bad)  
  41a593:	mov    BYTE PTR [esi],dh
  41a595:	pop    ebp
  41a596:	mov    esp,0x23ae374f
  41a59b:	pop    ecx
  41a59c:	xchg   ebx,eax
  41a59d:	pop    ebx
  41a59e:	sbb    eax,0xb4a328f8
  41a5a3:	pop    edx
  41a5a4:	xchg   esi,eax
  41a5a5:	inc    ecx
  41a5a6:	shl    DWORD PTR [ecx+0x6ce20e4d],1
  41a5ac:	imul   ebp,DWORD PTR [ecx+0xb09e6b4],0x29
  41a5b3:	jne    0x41a571
  41a5b5:	std    
  41a5b6:	(bad)  
  41a5b7:	xchg   edx,eax
  41a5b8:	xor    al,bh
  41a5ba:	imul   ebp,esp,0xead1953
  41a5c0:	mov    edx,DWORD PTR ss:[esp+0x1c]
  41a5c5:	shrd   ecx,edx,0x2
  41a5c9:	xor    ecx,eax
  41a5cb:	mov    eax,DWORD PTR [esp+0x18]
  41a5cf:	shl    eax,0x1e
  41a5d2:	shr    edx,0x2
  41a5d5:	mov    edx,DWORD PTR [esp+0x1c]
  41a5d9:	xor    eax,eax
  41a5db:	or     eax,ecx
  41a5dd:	mov    ecx,DWORD PTR [esp+0x68]
  41a5e1:	mov    DWORD PTR [ecx],eax
  41a5e3:	mov    eax,DWORD PTR [esp+0x68]
  41a5e7:	mov    ecx,DWORD PTR [esp+0x68]
  41a5eb:	mov    eax,DWORD PTR [eax]
  41a5ed:	cmp    eax,DWORD PTR [ecx]
  41a5ef:	jne    0x41a916
  41a5f5:	mov    eax,DWORD PTR [esp+0x5c]
  41a5f9:	mov    ecx,DWORD PTR [esp+0x5c]
  41a5fd:	mov    eax,DWORD PTR [eax]
  41a5ff:	cmp    eax,DWORD PTR [ecx]
  41a601:	jne    0x41a916
  41a607:	mov    BYTE PTR [esp+0x2c],0x20
  41a60c:	mov    BYTE PTR [esp+0x38],0x3
  41a611:	jmp    0x41a86e
  41a616:	cs lock pop ebp
  41a619:	jne    0x41a5ba
  41a61b:	js     0x41a653
  41a61d:	mov    eax,0x90d3c3ca
  41a622:	xchg   esi,eax
  41a623:	xor    bh,BYTE PTR [edx+edx*4+0x7c]
  41a627:	and    eax,eax
  41a629:	mov    esi,0xbebec235
  41a62e:	mul    DWORD PTR [ebp+0x6a1adaad]
  41a634:	pop    edx
  41a635:	dec    esp
  41a636:	scas   eax,DWORD PTR es:[edi]
  41a637:	rcl    BYTE PTR [ecx-0x20319f60],1
  41a63d:	pop    ds
  41a63e:	fwait
  41a63f:	cmp    eax,eax
  41a641:	repz icebp 
  41a643:	add    eax,0x3b4a1ac2
  41a648:	push   DWORD PTR [ebx-0x3dc53d3f]
  41a64e:	imul   esi,DWORD PTR [eax+ebx*1+0x7730df75],0x5a
  41a656:	popa   
  41a657:	jecxz  0x41a63f
  41a659:	xor    dl,BYTE PTR [edx+esi*2+0x28]
  41a65d:	pushf  
  41a65e:	dec    esi
  41a65f:	add    ebx,eax
  41a661:	cmp    ebx,0xffffff9c
  41a664:	fldenv [ecx+0x61]
  41a667:	scas   eax,DWORD PTR es:[edi]
  41a668:	jle    0x41a63a
  41a66a:	or     BYTE PTR [ecx+ecx*8-0x4a],cl
  41a66e:	sub    al,0x2f
  41a670:	pop    esp
  41a671:	xchg   ebx,eax
  41a672:	mov    esp,0x47794326
  41a677:	pop    ecx
  41a678:	lods   al,BYTE PTR ds:[esi]
  41a679:	pusha  
  41a67a:	jp     0x41a681
  41a67c:	xlat   BYTE PTR ds:[ebx]
  41a67d:	out    0xa0,al
  41a67f:	push   0x47
  41a681:	(bad)  
  41a682:	pop    edi
  41a683:	jmp    0x41a6b0
  41a685:	popf   
  41a686:	pop    esi
  41a687:	jge    0x41a6f6
  41a689:	loop   0x41a6af
  41a68b:	mov    WORD PTR [ebp+0x7b903c5a],?
  41a691:	dec    eax
  41a692:	ins    BYTE PTR es:[edi],dx
  41a693:	xor    BYTE PTR [eax-0x7859000f],bh
  41a699:	in     eax,dx
  41a69a:	cmc    
  41a69b:	mov    ds:0x51b7ae46,eax
  41a6a0:	lock cdq 
  41a6a2:	pop    DWORD PTR [ebx+0x74]
  41a6a5:	lds    edi,FWORD PTR [ebp-0xc]
  41a6a8:	repnz loop 0x41a6ef
  41a6ab:	jecxz  0x41a6e5
  41a6ad:	adc    al,0x38
  41a6af:	mov    ebp,0x94bf5705
  41a6b4:	inc    edi
  41a6b5:	push   ss
  41a6b6:	sbb    dh,BYTE PTR [edx]
  41a6b8:	mov    BYTE PTR [ebp-0x74c10fa7],ah
  41a6be:	aaa    
  41a6bf:	ss push edi
  41a6c1:	sbb    eax,0x3e9eebc7
  41a6c6:	cmp    dl,ch
  41a6c8:	ror    esi,cl
  41a6ca:	inc    esp
  41a6cb:	popa   
  41a6cc:	pop    ss
  41a6cd:	jmp    0x41a6df
  41a6cf:	mov    ch,0x3a
  41a6d1:	fwait
  41a6d2:	pop    DWORD PTR [edi+0x7f]
  41a6d5:	mov    ah,0x18
  41a6d7:	dec    edx
  41a6d8:	add    ebp,DWORD PTR [esi]
  41a6da:	repz lds ecx,FWORD PTR [eax]
  41a6dd:	pop    esi
  41a6de:	mov    dl,0x72
  41a6e0:	int3   
  41a6e1:	lods   eax,DWORD PTR ds:[esi]
  41a6e2:	sub    BYTE PTR [ecx+0x6a75b2ff],ch
  41a6e8:	adc    ch,BYTE PTR [edi]
  41a6ea:	imul   eax,DWORD PTR cs:[ebp+esi*4+0x48b6d821],0xcf7ed50b
  41a6f6:	and    DWORD PTR [ebp-0x1a],eax
  41a6f9:	pop    edx
  41a6fa:	adc    dh,ch
  41a6fc:	dec    edi
  41a6fd:	addr16 (bad) 
  41a700:	test   eax,0x3a474ea3
  41a705:	ja     0x41a6aa
  41a707:	fisttp WORD PTR [esi*2-0x7f211fa4]
  41a70e:	pop    edx
  41a70f:	and    eax,0xe6eb1337
  41a714:	mov    edi,0xa72a851f
  41a719:	ja     0x41a6b8
  41a71b:	shl    BYTE PTR [esi-0x3e0e4020],0xc2
  41a722:	adc    al,0xd9
  41a724:	fstp   DWORD PTR [edx+0x17]
  41a727:	jp     0x41a7a4
  41a729:	ret    
  41a72a:	xor    DWORD PTR [edx+0x6938012f],0x57
  41a731:	sub    BYTE PTR [eax],al
  41a733:	mov    al,BYTE PTR [esp+ebx*8]
  41a736:	cdq    
  41a737:	mov    ebp,0x138ecb67
  41a73c:	mov    ecx,0x45bc7800
  41a741:	mov    ds:0x4e0fecc5,al
  41a746:	idiv   BYTE PTR [ebx+0x7e]
  41a749:	dec    esp
  41a74a:	loope  0x41a707
  41a74c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a74d:	xchg   ecx,eax
  41a74e:	mov    bl,0x5c
  41a750:	xchg   ebp,eax
  41a751:	fstp   TBYTE PTR [ebx-0x59]
  41a754:	mov    es,WORD PTR [esi+edx*2]
  41a757:	call   0xad83:0x2746c579
  41a75e:	es dec edx
  41a760:	push   es
  41a761:	outs   dx,BYTE PTR ds:[esi]
  41a762:	sub    al,0x8f
  41a764:	loope  0x41a724
  41a766:	and    DWORD PTR [edi+0xb],ebx
  41a769:	jg     0x41a767
  41a76b:	addr16 fadd st,st(0)
  41a76e:	mov    edx,eax
  41a770:	adc    ecx,DWORD PTR ss:[ecx+0x2bf37b22]
  41a777:	adc    eax,0x1c00d3a7
  41a77c:	and    edx,DWORD PTR [esi]
  41a77e:	sbb    eax,0xffa42918
  41a783:	popf   
  41a784:	mov    al,ds:0xd89bc7fe
  41a789:	cmp    ch,BYTE PTR [edi-0x65c78b46]
  41a78f:	add    DWORD PTR [ecx-0x511fbc7d],ecx
  41a795:	js     0x41a757
  41a797:	mov    ebp,0x90883f8d
  41a79c:	push   edi
  41a79d:	pop    es
  41a79e:	and    BYTE PTR [ecx-0x373fad03],cl
  41a7a4:	sub    edi,DWORD PTR [eax]
  41a7a6:	shr    DWORD PTR [esi-0x51],1
  41a7a9:	xor    eax,0x26ccf1e1
  41a7ae:	add    dh,BYTE PTR [edx]
  41a7b0:	mov    al,ds:0xfd4fda21
  41a7b5:	dec    edx
  41a7b6:	inc    ecx
  41a7b7:	pop    edi
  41a7b8:	inc    ebx
  41a7b9:	or     al,0x34
  41a7bb:	or     ch,BYTE PTR [edx]
  41a7bd:	and    edi,DWORD PTR [ebx+0x379aece9]
  41a7c3:	push   0xffffffda
  41a7c5:	data16 into 
  41a7c7:	clc    
  41a7c8:	ds mov esp,0xb829f191
  41a7ce:	fdiv   DWORD PTR [ecx+0x73]
  41a7d1:	xor    ah,BYTE PTR gs:[esi+0x21686c41]
  41a7d8:	sub    DWORD PTR [ecx+0x22c48aec],ecx
  41a7de:	das    
  41a7df:	lods   al,BYTE PTR ds:[esi]
  41a7e0:	push   edi
  41a7e1:	bound  esi,QWORD PTR [esi+0x30df8b3]
  41a7e7:	inc    ebp
  41a7e8:	scas   eax,DWORD PTR es:[edi]
  41a7e9:	out    dx,al
  41a7ea:	pusha  
  41a7eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7ec:	ja     0x41a7cd
  41a7ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a7ef:	pushf  
  41a7f0:	loop   0x41a798
  41a7f2:	aad    0xa5
  41a7f4:	dec    edx
  41a7f5:	ins    DWORD PTR es:[edi],dx
  41a7f6:	(bad)  
  41a7f8:	out    0x17,al
  41a7fa:	dec    edx
  41a7fb:	dec    ebx
  41a7fc:	ret    0xae9d
  41a7ff:	push   cs
  41a800:	lods   al,BYTE PTR ds:[esi]
  41a801:	mov    eax,ds:0x3d839a16
  41a806:	sub    DWORD PTR ds:0x2b41f653,ebp
  41a80c:	cmp    ebp,DWORD PTR [ebx]
  41a80e:	jmp    0x41a847
  41a810:	add    edx,0x9ed6c7b3
  41a816:	jle    0x41a85b
  41a818:	das    
  41a819:	fwait
  41a81a:	js     0x41a83e
  41a81c:	push   ecx
  41a81d:	out    dx,eax
  41a81e:	mov    ch,BYTE PTR [ebx+0x205737bf]
  41a824:	mov    eax,ds:0x2ec83af5
  41a829:	je     0x41a7e5
  41a82b:	push   esi
  41a82c:	xor    BYTE PTR [ebp+0x1bc7e477],bl
  41a832:	push   cs
  41a833:	outs   dx,DWORD PTR ds:[esi]
  41a834:	jmp    0xfe3c07bc
  41a839:	(bad)  
  41a83a:	jns    0x41a81e
  41a83c:	xor    DWORD PTR [ebx],0xffffffcc
  41a83f:	in     al,0xec
  41a841:	sub    al,BYTE PTR [ebp+0x30]
  41a844:	mov    dh,0x30
  41a846:	push   edi
  41a847:	push   esp
  41a848:	or     ch,BYTE PTR [edi-0x7f]
  41a84b:	dec    ebx
  41a84c:	mov    ds,WORD PTR [edx]
  41a84e:	inc    esi
  41a84f:	xchg   edi,eax
  41a850:	ret    
  41a851:	pop    ss
  41a852:	cdq    
  41a853:	ficom  DWORD PTR [edi+0x717f0755]
  41a859:	push   ebp
  41a85a:	test   DWORD PTR [esi+eiz*2-0x8],ecx
  41a85e:	fdiv   DWORD PTR [eax-0x15673e32]
  41a864:	jne    0x41a8b4
  41a866:	jno    0x41a8c4
  41a868:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a869:	or     DWORD PTR ds:0xc6606407,ebx
  41a86f:	inc    esp
  41a870:	and    al,0x3c
  41a872:	ins    DWORD PTR es:[edi],dx
  41a873:	mov    BYTE PTR [esp+0x2b],0x90
  41a878:	mov    al,BYTE PTR [esp+0x2b]
  41a87c:	mov    cl,BYTE PTR [esp+0x3c]
  41a880:	or     al,0xdc
  41a882:	sub    al,cl
  41a884:	mov    cl,BYTE PTR [esp+0x38]
  41a888:	sub    al,0x56
  41a88a:	movzx  eax,al
  41a88d:	movzx  ecx,cl
  41a890:	cdq    
  41a891:	idiv   ecx
  41a893:	movzx  ecx,BYTE PTR [esp+0x2c]
  41a898:	or     eax,ecx
  41a89a:	mov    BYTE PTR [esp+0xc],al
  41a89e:	mov    BYTE PTR [esp+0x24],0x1
  41a8a3:	mov    BYTE PTR [esp+0x2b],0xcf
  41a8a8:	mov    BYTE PTR [esp+0x3c],0x6
  41a8ad:	mov    BYTE PTR [esp+0x38],0x25
  41a8b2:	mov    BYTE PTR [esp+0x2c],0xf8
  41a8b7:	mov    al,BYTE PTR [esp+0x2c]
  41a8bb:	mov    cl,BYTE PTR [esp+0x38]
  41a8bf:	or     al,0xc4
  41a8c1:	and    al,cl
  41a8c3:	mov    cl,BYTE PTR [esp+0x3c]
  41a8c7:	imul   cl
  41a8c9:	mov    cl,BYTE PTR [esp+0x2b]
  41a8cd:	movzx  ecx,cl
  41a8d0:	movzx  eax,al
  41a8d3:	and    eax,ecx
  41a8d5:	mov    cl,BYTE PTR [esp+0x24]
  41a8d9:	movzx  ecx,cl
  41a8dc:	cdq    
  41a8dd:	idiv   ecx
  41a8df:	mov    cl,BYTE PTR [esp+0xc]
  41a8e3:	cmp    cl,al
  41a8e5:	je     0x41a93c
  41a8eb:	lea    eax,[esp+0x9c]
  41a8f2:	push   eax
  41a8f3:	lea    edi,[esp+0x80]
  41a8fa:	call   0x40b68c
  41a8ff:	cmp    eax,ebx
  41a901:	jne    0x41a93c
  41a907:	cmp    edx,esi
  41a909:	jne    0x41a93c
  41a90f:	xor    eax,eax
  41a911:	jmp    0x41b43e
  41a916:	mov    eax,DWORD PTR [esp+0x70]
  41a91a:	mov    ecx,DWORD PTR [esp+0x74]
  41a91e:	mov    edx,DWORD PTR [esp+0x18]
  41a922:	mov    edi,DWORD PTR [esp+0x1c]
  41a926:	add    eax,edx
  41a928:	adc    ecx,edi
  41a92a:	mov    DWORD PTR [esp+0x18],eax
  41a92e:	mov    DWORD PTR [esp+0x1c],ecx
  41a932:	jmp    0x41a93c
  41a937:	mov    ebx,0xcb79b576
  41a93c:	push   0x4
  41a93e:	push   0x422738
  41a943:	lea    eax,[esp+0x6c]
  41a947:	push   eax
  41a948:	call   0x411c08
  41a94d:	mov    eax,DWORD PTR [esp+0x64]
  41a951:	push   0x4
  41a953:	push   DWORD PTR [eax+0x1a4]
  41a959:	lea    eax,[esp+0x74]
  41a95d:	push   eax
  41a95e:	call   0x411c08
  41a963:	mov    eax,DWORD PTR [esp+0x64]
  41a967:	mov    eax,DWORD PTR [eax+0x1a4]
  41a96d:	mov    eax,DWORD PTR [eax]
  41a96f:	mov    ecx,DWORD PTR [esp+0x64]
  41a973:	mov    eax,DWORD PTR [eax+0x3c]
  41a976:	mov    ecx,DWORD PTR [ecx+0x1a4]
  41a97c:	mov    ecx,DWORD PTR [ecx]
  41a97e:	lea    eax,[ecx+eax*1+0x28]
  41a982:	mov    eax,DWORD PTR [eax]
  41a984:	add    DWORD PTR [esp+0x6c],eax
  41a988:	mov    DWORD PTR [esp+0x30],0x127
  41a990:	mov    DWORD PTR [esp+0x10],0x421a
  41a998:	mov    eax,DWORD PTR [esp+0x10]
  41a99c:	jmp    0x41abf9
  41a9a1:	add    BYTE PTR [edx-0x4b9c4ca1],al
  41a9a7:	adc    al,0xb2
  41a9a9:	sub    eax,0x92d15a28
  41a9ae:	mov    ecx,0x29f3a4b8
  41a9b3:	sar    BYTE PTR [esi-0x41413dcb],0xc8
  41a9ba:	test   DWORD PTR [ecx+edx*4-0x55503778],esp
  41a9c1:	test   BYTE PTR [ebx],dl
  41a9c3:	cmp    al,0xe2
  41a9c5:	dec    esp
  41a9c6:	sbb    bl,cl
  41a9c8:	dec    eax
  41a9c9:	sbb    eax,DWORD PTR [eax+0x2702c364]
  41a9cf:	(bad)  
  41a9d0:	ins    BYTE PTR es:[edi],dx
  41a9d1:	lods   al,BYTE PTR ds:[esi]
  41a9d3:	sub    DWORD PTR [ecx],esp
  41a9d5:	icebp  
  41a9d6:	cmp    eax,0x84a6b5b2
  41a9db:	pusha  
  41a9dc:	push   ebp
  41a9dd:	jp     0x41a974
  41a9df:	jg     0x41aa2a
  41a9e1:	mov    eax,ds:0xe96d3122
  41a9e6:	inc    edx
  41a9e7:	ror    BYTE PTR [esi+0x7e],cl
  41a9ea:	ins    BYTE PTR es:[edi],dx
  41a9eb:	repnz fs (bad) 
  41a9ee:	fidiv  WORD PTR [ecx+ecx*1]
  41a9f1:	mov    ebx,DWORD PTR [eax+0x20b08de]
  41a9f7:	cmp    al,BYTE PTR [ebp+0x2847272f]
  41a9fd:	out    0x6e,eax
  41a9ff:	aas    
  41aa00:	sbb    al,0xd2
  41aa02:	jne    0x41aa3e
  41aa04:	int3   
  41aa05:	call   0xb731c426
  41aa0a:	adc    eax,DWORD PTR [eax-0x1fc041eb]
  41aa10:	jmp    0x41aa29
  41aa12:	jmp    0x8d94:0x2db759ca
  41aa19:	popf   
  41aa1a:	xor    al,0xd2
  41aa1c:	enter  0x9ca,0x57
  41aa20:	xchg   BYTE PTR [ecx],al
  41aa22:	sub    esp,esi
  41aa24:	adc    cl,BYTE PTR [ebx]
  41aa26:	cmc    
  41aa27:	jbe    0x41aa5d
  41aa29:	pop    ds
  41aa2a:	ret    0x17fe
  41aa2d:	dec    esi
  41aa2e:	pop    eax
  41aa2f:	dec    edx
  41aa30:	addr16 dec ebx
  41aa32:	aaa    
  41aa33:	stos   BYTE PTR es:[edi],al
  41aa34:	mov    al,0x87
  41aa36:	stc    
  41aa37:	mov    bl,0xdd
  41aa39:	mov    bh,0x6b
  41aa3b:	cmp    al,BYTE PTR [ebp+0x16]
  41aa3e:	stc    
  41aa3f:	addr16 pop ds
  41aa41:	std    
  41aa42:	inc    ebp
  41aa43:	xor    bl,bl
  41aa45:	sub    ecx,edi
  41aa47:	div    esi
  41aa49:	pop    edx
  41aa4a:	xlat   BYTE PTR ds:[ebx]
  41aa4b:	adc    eax,edi
  41aa4d:	jae    0x41aa6f
  41aa4f:	mov    edi,0x5637a13b
  41aa54:	lods   al,BYTE PTR ds:[esi]
  41aa55:	das    
  41aa56:	stc    
  41aa57:	jg     0x41aa50
  41aa59:	fcmovbe st,st(1)
  41aa5b:	(bad)  
  41aa5d:	push   edx
  41aa5e:	inc    edx
  41aa5f:	pop    ecx
  41aa60:	mov    al,ds:0x79d6d8bd
  41aa65:	cmp    BYTE PTR [ecx+esi*4],bl
  41aa68:	aam    0x3b
  41aa6a:	dec    ebp
  41aa6b:	inc    eax
  41aa6c:	and    BYTE PTR [esi],al
  41aa6e:	jge    0x41aa23
  41aa70:	push   edi
  41aa71:	dec    ecx
  41aa72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa73:	mov    bh,0xac
  41aa75:	xchg   DWORD PTR ds:0x640ef843,edx
  41aa7b:	(bad)  
  41aa7c:	fcomp  DWORD PTR [ebx-0x6d4232f8]
  41aa82:	xchg   ebx,eax
  41aa83:	ins    DWORD PTR es:[edi],dx
  41aa84:	bound  edi,QWORD PTR [ecx]
  41aa86:	mov    edx,0x7b626865
  41aa8b:	lods   eax,DWORD PTR ds:[esi]
  41aa8c:	daa    
  41aa8d:	lar    esi,ax
  41aa90:	jae    0x41aa24
  41aa92:	int3   
  41aa93:	push   esi
  41aa94:	(bad)  
  41aa95:	push   ss
  41aa96:	scas   eax,DWORD PTR es:[edi]
  41aa97:	pop    es
  41aa98:	arpl   si,sp
  41aa9a:	bound  edi,QWORD PTR [edx-0x6cbbbf82]
  41aaa0:	cmp    cl,0xb1
  41aaa3:	sub    al,0x92
  41aaa5:	test   eax,0x45dcbfb6
  41aaaa:	sbb    BYTE PTR [ecx-0x1e],bh
  41aaad:	sbb    eax,0x5d2bcff4
  41aab2:	ins    BYTE PTR es:[edi],dx
  41aab3:	or     edi,DWORD PTR [ecx]
  41aab5:	stc    
  41aab6:	lods   eax,DWORD PTR ds:[esi]
  41aab7:	adc    dh,cl
  41aab9:	and    BYTE PTR [ebp+0x7c1e8271],0x43
  41aac0:	jae    0x41aaf0
  41aac2:	test   eax,0x97bf3c46
  41aac7:	fwait
  41aac8:	mov    es,esp
  41aaca:	loop   0x41aa9f
  41aacc:	fadd   DWORD PTR ds:0xc673b2c9
  41aad2:	mov    cs,WORD PTR [ecx]
  41aad4:	or     dh,BYTE PTR [ecx-0x5d]
  41aad7:	(bad)  
  41aad8:	icebp  
  41aad9:	js     0x41aaf8
  41aadb:	fs push eax
  41aadd:	rol    DWORD PTR [edx-0x65eee2ee],1
  41aae3:	jae    0x41ab2b
  41aae5:	mov    ds:0x95a28dd,al
  41aaea:	hlt    
  41aaeb:	mov    ss:0xdd4d5e8b,al
  41aaf1:	and    al,0xd6
  41aaf3:	ds jg  0x41aa93
  41aaf6:	mov    ebx,DWORD PTR [ecx]
  41aaf8:	push   ebx
  41aaf9:	popa   
  41aafa:	out    dx,eax
  41aafb:	enter  0x13f6,0xfd
  41aaff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab00:	into   
  41ab01:	dec    eax
  41ab02:	sub    BYTE PTR [ebp-0x3f],ch
  41ab05:	leave  
  41ab06:	(bad)  
  41ab07:	pop    ecx
  41ab08:	jno    0x41aaa4
  41ab0a:	stc    
  41ab0b:	mov    ebp,0x6e8bc414
  41ab10:	add    dh,dh
  41ab12:	pop    edi
  41ab13:	popa   
  41ab14:	in     eax,0x92
  41ab16:	inc    eax
  41ab17:	hlt    
  41ab18:	dec    edx
  41ab19:	xor    DWORD PTR [ebx],ebx
  41ab1b:	xor    BYTE PTR [ecx+0x40767a82],0x69
  41ab22:	push   edi
  41ab23:	push   esp
  41ab24:	outs   dx,DWORD PTR ds:[esi]
  41ab25:	daa    
  41ab26:	jb     0x41aad4
  41ab28:	jge    0x41ab9c
  41ab2a:	pop    ds
  41ab2b:	mov    dx,0x799f
  41ab2f:	pop    esi
  41ab30:	dec    ebp
  41ab31:	pop    eax
  41ab32:	xchg   BYTE PTR ds:[ebp+ebp*4+0x40ea5eb7],bl
  41ab3a:	mov    edi,0xf738eb90
  41ab3f:	sbb    al,0xdb
  41ab41:	outs   dx,BYTE PTR ds:[esi]
  41ab42:	pop    ebx
  41ab43:	or     DWORD PTR [edi],edi
  41ab45:	mov    ds:0x29ff5d54,eax
  41ab4a:	ss pop ebp
  41ab4c:	add    eax,0x6d07bdbe
  41ab51:	fcomp  QWORD PTR [esi]
  41ab53:	mov    ebp,0x77d23cba
  41ab58:	std    
  41ab59:	xor    al,0xbd
  41ab5b:	and    DWORD PTR [ebx],0x5dc50cfd
  41ab61:	cld    
  41ab62:	cmc    
  41ab63:	popa   
  41ab64:	mov    eax,ss:0x67057fa
  41ab6a:	test   bh,ah
  41ab6c:	push   eax
  41ab6d:	ins    BYTE PTR es:[edi],dx
  41ab6e:	test   bl,bl
  41ab70:	ins    BYTE PTR es:[edi],dx
  41ab71:	fcom   DWORD PTR [esi]
  41ab73:	jecxz  0x41abed
  41ab75:	mov    dl,0xd6
  41ab77:	leave  
  41ab78:	loope  0x41ab8b
  41ab7a:	xor    al,0x4a
  41ab7c:	and    BYTE PTR [ebx],0x79
  41ab7f:	cmc    
  41ab80:	(bad)  
  41ab82:	inc    esp
  41ab83:	outs   dx,BYTE PTR ds:[esi]
  41ab84:	pop    eax
  41ab85:	cmp    BYTE PTR [eax],bh
  41ab87:	dec    ebp
  41ab88:	jb     0x41ab8d
  41ab8a:	push   ebp
  41ab8b:	popa   
  41ab8c:	icebp  
  41ab8d:	sub    al,0x6
  41ab8f:	xchg   ebp,eax
  41ab90:	call   0x3784:0x2e1fb6a3
  41ab97:	into   
  41ab98:	rcl    BYTE PTR [edi-0x96c251e],0xee
  41ab9f:	dec    edx
  41aba0:	sbb    BYTE PTR ds:0xc2626e74,dl
  41aba6:	lahf   
  41aba7:	aam    0xbd
  41aba9:	sub    ch,BYTE PTR [edi]
  41abab:	icebp  
  41abac:	mov    al,ds:0x8bc2e73f
  41abb1:	and    BYTE PTR [ecx+0x3e],dl
  41abb4:	cli    
  41abb5:	cli    
  41abb6:	out    dx,al
  41abb7:	add    DWORD PTR [esi],esp
  41abb9:	xchg   DWORD PTR [edi+0x33],edx
  41abbc:	adc    bl,BYTE PTR [edx-0x27]
  41abbf:	or     esp,DWORD PTR [ecx-0x7b]
  41abc2:	adc    eax,0xdc0d7141
  41abc7:	lea    esp,[esi-0x1b]
  41abca:	ds xor DWORD PTR gs:[esi],ebp
  41abce:	popf   
  41abcf:	jmp    0xa9268237
  41abd4:	aaa    
  41abd5:	jnp    0x41ab7d
  41abd7:	ret    0x5797
  41abda:	int    0x91
  41abdc:	jo     0x41ab8d
  41abde:	and    esi,DWORD PTR [ecx+0x50b037c4]
  41abe4:	aad    0x22
  41abe6:	jecxz  0x41abc2
  41abe8:	adc    ah,bh
  41abea:	stos   DWORD PTR es:[edi],eax
  41abeb:	adc    eax,0xb28166f1
  41abf0:	sar    BYTE PTR [ebx+0x6c],0x81
  41abf4:	push   edx
  41abf5:	mov    edi,0x258a46e0
  41abfa:	inc    esp
  41abfb:	ret    0xffff
  41abfe:	add    eax,DWORD PTR [esp+0x30]
  41ac02:	and    eax,0xfffffe5a
  41ac07:	jmp    0x41ae64
  41ac0c:	xor    DWORD PTR [edi-0x1f],ebp
  41ac0f:	frstor [esp+esi*2+0x1832b431]
  41ac16:	test   bh,cl
  41ac18:	ss push cs
  41ac1a:	hlt    
  41ac1b:	iret   
  41ac1c:	imul   ebp,DWORD PTR ds:0xc235bec0,0xffffffbe
  41ac23:	mov    esi,0xc38d3775
  41ac28:	test   al,0xe5
  41ac2a:	sti    
  41ac2b:	jmp    0x5b7f:0x7ac8b361
  41ac32:	add    DWORD PTR [eax+ebp*2+0xf],ebx
  41ac36:	sub    DWORD PTR [esi+0x4e],0xffffffc2
  41ac3a:	cmp    ah,ch
  41ac3c:	imul   edx,DWORD PTR [ebp+0x1e],0xdfe1ebc8
  41ac43:	dec    eax
  41ac44:	dec    edx
  41ac45:	inc    esi
  41ac46:	jo     0x41abd0
  41ac48:	sub    esi,edx
  41ac4a:	test   eax,eax
  41ac4c:	pop    ebp
  41ac4d:	push   ebp
  41ac4e:	push   ebx
  41ac4f:	sahf   
  41ac50:	jbe    0x41ac1c
  41ac52:	add    al,BYTE PTR [ecx]
  41ac54:	mov    ebx,0xca8b456a
  41ac59:	aas    
  41ac5a:	add    DWORD PTR [esp+eiz*2+0x72],esi
  41ac5e:	in     eax,0x42
  41ac60:	mov    WORD PTR [esi],gs
  41ac62:	xchg   ebp,eax
  41ac63:	or     bl,dh
  41ac65:	inc    ebp
  41ac66:	mov    dh,0x33
  41ac68:	mov    ds:0x4fab0a8e,al
  41ac6d:	dec    edi
  41ac6e:	test   al,0x7f
  41ac70:	sti    
  41ac71:	(bad)  
  41ac72:	out    0xae,eax
  41ac74:	test   eax,0x5b34316b
  41ac79:	test   DWORD PTR [ebx-0x14],esp
  41ac7c:	sub    BYTE PTR [edi-0x24],cl
  41ac7f:	outs   dx,BYTE PTR ds:[esi]
  41ac80:	lods   al,BYTE PTR ds:[esi]
  41ac81:	sub    BYTE PTR [edx+0x38],0x71
  41ac85:	mov    ch,0x2f
  41ac87:	push   ss
  41ac88:	xor    edi,DWORD PTR [ebx]
  41ac8a:	(bad)  
  41ac8c:	sbb    ah,BYTE PTR [edi+0x19939b13]
  41ac92:	add    dh,BYTE PTR ds:0x7a848351
  41ac98:	jmp    0x41ac79
  41ac9a:	push   cs
  41ac9b:	repnz sub DWORD PTR [ebp+0x313fc2a8],ebx
  41aca2:	in     eax,0x48
  41aca4:	pop    edi
  41aca5:	add    eax,0xfbed5400
  41acaa:	jo     0x41ac87
  41acac:	mov    edi,0x3e02c660
  41acb1:	fidiv  DWORD PTR [eax+0xe60b720]
  41acb7:	inc    ecx
  41acb8:	repnz in eax,0xa6
  41acbb:	or     ebp,DWORD PTR gs:[esi]
  41acbe:	mov    al,ds:0x7631df6
  41acc3:	xchg   ebp,eax
  41acc4:	stos   BYTE PTR es:[edi],al
  41acc5:	pop    ecx
  41acc7:	test   al,0xf8
  41acc9:	(bad)  
  41accb:	jns    0x41accf
  41accd:	clc    
  41acce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41accf:	nop
  41acd0:	fcos   
  41acd2:	icebp  
  41acd3:	fistp  WORD PTR [ecx+0x170692c2]
  41acd9:	(bad)  
  41acdb:	sbb    bh,BYTE PTR [esi+0x59d3a122]
  41ace1:	pop    eax
  41ace2:	inc    ebx
  41ace3:	dec    eax
  41ace4:	cmp    bl,dh
  41ace6:	inc    edx
  41ace7:	out    dx,eax
  41ace8:	mov    DWORD PTR [ebx],0x6d7c30be
  41acee:	adc    BYTE PTR [ecx-0x11],cl
  41acf1:	adc    ebx,DWORD PTR [ecx-0x3e7d293c]
  41acf7:	cli    
  41acf8:	sti    
  41acf9:	push   ebp
  41acfa:	arpl   WORD PTR [edx],sp
  41acfc:	icebp  
  41acfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41acfe:	pushf  
  41acff:	int3   
  41ad00:	(bad)  
  41ad01:	mov    edx,0xf90a15cd
  41ad06:	push   es
  41ad07:	daa    
  41ad08:	outs   dx,DWORD PTR ds:[esi]
  41ad09:	sahf   
  41ad0a:	jb     0x41ace0
  41ad0c:	mov    cl,0x8a
  41ad0e:	ss ja  0x41acee
  41ad11:	xchg   ecx,eax
  41ad12:	retf   
  41ad13:	outs   dx,DWORD PTR ds:[esi]
  41ad14:	sbb    al,0x29
  41ad16:	xchg   ebx,eax
  41ad17:	mov    eax,ds:0xc5de48f0
  41ad1c:	mov    ds:0x96d069ae,al
  41ad21:	out    dx,eax
  41ad22:	cs ss test al,0xed
  41ad26:	xchg   BYTE PTR es:[ebp+edi*2+0x2bde6b5],ch
  41ad2e:	sub    ah,dh
  41ad30:	xchg   DWORD PTR [ebp+0xac9a29c],ecx
  41ad36:	sahf   
  41ad37:	inc    ebx
  41ad38:	xchg   edi,eax
  41ad39:	cwde   
  41ad3a:	pop    ebx
  41ad3b:	mov    ch,0x15
  41ad3d:	jp     0x41acbf
  41ad3f:	dec    esi
  41ad40:	inc    ebp
  41ad41:	dec    edi
  41ad42:	inc    ecx
  41ad43:	jno    0x41ad82
  41ad45:	sbb    eax,0x89dc285c
  41ad4a:	jecxz  0x41ad9c
  41ad4c:	push   ds
  41ad4d:	es into 
  41ad4f:	sub    al,0x98
  41ad51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad52:	jne    0x41adae
  41ad54:	repnz or DWORD PTR ds:0x6402c1b8,0xffffff9f
  41ad5c:	push   ebx
  41ad5d:	sti    
  41ad5e:	push   0x42cbf97d
  41ad63:	inc    esi
  41ad64:	in     eax,0x45
  41ad66:	test   al,0xee
  41ad68:	js     0x41ad0d
  41ad6a:	mov    ebx,0x1c10205b
  41ad6f:	mov    ecx,0x4b992a91
  41ad74:	int3   
  41ad75:	outs   dx,BYTE PTR ds:[esi]
  41ad76:	jne    0x41ad3a
  41ad78:	or     al,0xfb
  41ad7a:	jbe    0x41ad62
  41ad7c:	mov    bl,0x6b
  41ad7e:	mov    cl,0x2
  41ad80:	ficom  WORD PTR [edi+0x65]
  41ad83:	mov    eax,0xc62d254
  41ad88:	pop    eax
  41ad89:	icebp  
  41ad8a:	pop    ebx
  41ad8b:	push   ebp
  41ad8c:	pop    edi
  41ad8d:	or     eax,edi
  41ad8f:	push   eax
  41ad90:	or     BYTE PTR [edx-0x72],ch
  41ad93:	aad    0x2d
  41ad95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad96:	sti    
  41ad97:	add    DWORD PTR [ebp+eiz*2-0x3c3c5d87],edx
  41ad9e:	shl    BYTE PTR [esi],cl
  41ada0:	int    0xbe
  41ada2:	(bad)  
  41ada4:	lods   eax,DWORD PTR ds:[esi]
  41ada5:	aad    0x9a
  41ada7:	cmp    BYTE PTR [esi],bl
  41ada9:	shr    BYTE PTR [ebp-0x33],0x3c
  41adad:	lahf   
  41adae:	call   0x76af:0x3a6b092c
  41adb5:	aam    0x25
  41adb7:	add    al,0xd9
  41adb9:	xchg   ecx,eax
  41adba:	jne    0x41ad58
  41adbc:	sub    DWORD PTR [edx+0x30c7ed2e],edx
  41adc2:	ins    BYTE PTR es:[edi],dx
  41adc3:	fcom   QWORD PTR [edi+0x2acef314]
  41adc9:	mov    ch,0xd8
  41adcb:	xor    al,0xd4
  41adcd:	jae    0x41adb2
  41adcf:	fnop   
  41add1:	sub    ecx,esp
  41add3:	or     eax,0xa980a222
  41add8:	std    
  41add9:	aad    0x28
  41addb:	sub    eax,0xfb8bf834
  41ade0:	mov    ah,0x9f
  41ade2:	sbb    ch,dh
  41ade4:	ja     0x41ade8
  41ade6:	shl    DWORD PTR [ebx+eiz*4],cl
  41ade9:	and    al,0x31
  41adeb:	xchg   ebx,eax
  41adec:	int3   
  41aded:	int3   
  41adee:	push   0xffffffef
  41adf0:	adc    ch,cl
  41adf2:	sub    edi,DWORD PTR gs:[eax+0x38]
  41adf6:	mov    esi,0x696ac3a8
  41adfb:	into   
  41adfc:	mov    BYTE PTR [edi-0x5b],ah
  41adff:	mov    edx,0x6b6e81b6
  41ae04:	jle    0x41ad98
  41ae06:	ins    DWORD PTR es:[edi],dx
  41ae07:	inc    ebx
  41ae08:	cli    
  41ae09:	enter  0xc254,0x47
  41ae0d:	sti    
  41ae0e:	jnp    0x41ade5
  41ae10:	pop    esp
  41ae11:	and    al,0xb9
  41ae13:	xor    BYTE PTR [edx+0x76d3eb69],bh
  41ae19:	cmp    ch,ah
  41ae1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae1c:	(bad)  
  41ae1d:	xor    esi,DWORD PTR [edx]
  41ae1f:	nop
  41ae20:	ror    bl,cl
  41ae22:	je     0x41adef
  41ae24:	(bad)  
  41ae25:	xor    ebp,DWORD PTR [ebx-0x15]
  41ae28:	fwait
  41ae29:	outs   dx,DWORD PTR ds:[esi]
  41ae2a:	pop    edx
  41ae2b:	add    eax,0x84d393d
  41ae30:	cmp    DWORD PTR [ebx+0x38ed7d76],eax
  41ae36:	repnz aad 0x62
  41ae39:	or     al,0x59
  41ae3b:	jbe    0x41ae71
  41ae3d:	xor    BYTE PTR [esi-0x6c12de19],0x3d
  41ae44:	dec    edx
  41ae45:	leave  
  41ae46:	mov    al,0x2d
  41ae48:	nop
  41ae49:	xchg   bh,bh
  41ae4b:	push   0x6c
  41ae4d:	out    0x89,eax
  41ae4f:	adc    al,0x6d
  41ae51:	sti    
  41ae52:	jmp    0x11c1b7ec
  41ae57:	pusha  
  41ae58:	icebp  
  41ae59:	std    
  41ae5a:	push   0xcab5c4dd
  41ae5f:	jmp    0x41adf1
  41ae61:	or     DWORD PTR [ecx+0x2ae12d50],ebp
  41ae67:	add    BYTE PTR [eax],al
  41ae69:	and    eax,0x6f90
  41ae6e:	mov    DWORD PTR [esp+0x30],eax
  41ae72:	mov    DWORD PTR [esp+0x10],0x1515
  41ae7a:	mov    eax,DWORD PTR [esp+0x10]
  41ae7e:	jmp    0x41b0db
  41ae83:	sub    al,0xff
  41ae85:	jmp    0xe1b3:0xbcbce956
  41ae8c:	in     al,0x38
  41ae8e:	xchg   edx,eax
  41ae8f:	outs   dx,BYTE PTR ds:[esi]
  41ae90:	lods   eax,DWORD PTR ds:[esi]
  41ae91:	add    ch,bl
  41ae93:	jecxz  0x41aec6
  41ae95:	sar    BYTE PTR [esi-0x41413dcb],0x56
  41ae9c:	mov    ch,0xc3
  41ae9e:	mov    WORD PTR [ecx+0x2bee03d],fs
  41aea4:	jle    0x41aea1
  41aea6:	mov    ch,BYTE PTR [esp+ecx*8]
  41aea9:	stos   BYTE PTR es:[edi],al
  41aeaa:	xchg   DWORD PTR [esp+esi*8-0x355f3ef6],edi
  41aeb1:	mov    ds:0x7890fecc,al
  41aeb6:	mov    cl,0x40
  41aeb8:	stos   DWORD PTR es:[edi],eax
  41aeb9:	pushf  
  41aeba:	inc    esi
  41aebb:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41aebd:	jle    0x41af3e
  41aebf:	jnp    0x41aee2
  41aec1:	or     dl,BYTE PTR [edx-0x26]
  41aec4:	(bad)
  41aec8:	pop    ecx
  41aec9:	jmp    0xa6b2:0x618a1a2d
  41aed0:	loope  0x41ae6b
  41aed2:	ror    DWORD PTR [eax-0x5f],0x18
  41aed6:	jle    0x41aea9
  41aed8:	sub    ah,BYTE PTR [eax+0xe6d70da]
  41aede:	mov    esi,0xf7faa955
  41aee3:	add    ch,dl
  41aee5:	dec    ebp
  41aee6:	sub    al,0x5a
  41aee8:	pop    es
  41aee9:	xchg   esi,eax
  41aeea:	pop    ebp
  41aeeb:	in     al,0x66
  41aeed:	mov    ds:0x6d078d66,eax
  41aef2:	fwait
  41aef3:	aam    0x66
  41aef5:	stos   DWORD PTR es:[edi],eax
  41aef6:	jbe    0x41af3c
  41aef8:	inc    ebx
  41aef9:	adc    al,0x47
  41aefb:	fcomp  DWORD PTR [esi+eiz*8+0x20]
  41aeff:	cmc    
  41af00:	cmp    DWORD PTR [ebx-0x41],ebx
  41af03:	shl    BYTE PTR [ebp-0x2101bbcb],1
  41af09:	and    DWORD PTR [edx+edx*8-0x29],edi
  41af0d:	mov    dl,0x4f
  41af0f:	pop    edi
  41af10:	jno    0x41af1d
  41af12:	sahf   
  41af13:	or     al,0x26
  41af15:	jle    0x41af19
  41af17:	inc    eax
  41af18:	push   es
  41af19:	jecxz  0x41af79
  41af1b:	lock lods eax,DWORD PTR ds:[esi]
  41af1d:	xchg   BYTE PTR [esp+edi*2-0x9],al
  41af21:	mov    dh,0xe
  41af23:	lods   al,BYTE PTR ds:[esi]
  41af24:	push   edx
  41af25:	fwait
  41af26:	les    esi,FWORD PTR cs:[edx+0x62]
  41af2a:	dec    ebp
  41af2b:	shr    DWORD PTR [ecx+0x6],1
  41af2e:	sbb    bl,0xd9
  41af31:	pop    ebx
  41af32:	data16 repnz int 0x5f
  41af36:	cld    
  41af37:	inc    ebx
  41af38:	ds jns 0x41afac
  41af3b:	in     al,dx
  41af3c:	inc    ebp
  41af3d:	repz or al,0x9b
  41af40:	sti    
  41af41:	jmp    0xf928178b
  41af46:	xor    dl,ch
  41af48:	mov    dl,0xb8
  41af4a:	inc    edi
  41af4b:	xchg   DWORD PTR [ebp+ecx*4-0x3],edx
  41af4f:	mov    ebx,edi
  41af51:	jmp    DWORD PTR [esi-0x2f]
  41af54:	xor    al,0x9c
  41af56:	jne    0x41afd3
  41af58:	and    eax,DWORD PTR [ebx]
  41af5a:	mov    ds,ebx
  41af5c:	and    ebx,DWORD PTR [edi]
  41af5e:	jb     0x41af7a
  41af60:	mov    edx,0xced2f99d
  41af65:	jbe    0x41af01
  41af67:	cmp    eax,0x56eb9eb8
  41af6c:	mov    DWORD PTR [ebp+0x2d],ebp
  41af6f:	ret    0x2f82
  41af72:	and    eax,0xb802f8ed
  41af77:	imul   esi,DWORD PTR [ecx-0x6f],0x4c
  41af7b:	cmp    BYTE PTR [ebp-0x174f4cc6],bl
  41af81:	and    DWORD PTR [esi],0xfffffff4
  41af84:	dec    esi
  41af85:	nop
  41af86:	or     ebp,ebp
  41af88:	cmp    eax,edi
  41af8a:	jnp    0x41af7c
  41af8c:	or     al,0xff
  41af8e:	add    DWORD PTR [ebx],ebx
  41af90:	ror    DWORD PTR [eax],1
  41af92:	push   es
  41af93:	popf   
  41af94:	push   ss
  41af95:	fs sti 
  41af97:	cmc    
  41af98:	or     eax,0x8da7953d
  41af9d:	das    
  41af9e:	cs in  eax,0xec
  41afa1:	jbe    0x41af45
  41afa3:	arpl   WORD PTR [eax+0x23],si
  41afa6:	hlt    
  41afa7:	dec    eax
  41afa8:	sub    DWORD PTR [eax-0x7e51c1bb],0x38a13a03
  41afb2:	(bad)  
  41afb3:	lock xchg esp,eax
  41afb5:	cld    
  41afb6:	enter  0xcd8a,0xf9
  41afba:	mov    ebp,0xd9bfc693
  41afbf:	xchg   BYTE PTR [eax],bl
  41afc1:	add    al,BYTE PTR [ecx-0x789982]
  41afc7:	and    eax,0x9ab5d06e
  41afcc:	(bad)  
  41afce:	lds    eax,FWORD PTR [ecx+0x6a]
  41afd1:	in     al,0xc7
  41afd3:	inc    ebx
  41afd4:	lods   eax,DWORD PTR ds:[esi]
  41afd6:	cli    
  41afd7:	dec    esi
  41afd8:	fstp   DWORD PTR [eax]
  41afda:	or     al,0xde
  41afdc:	arpl   WORD PTR [ecx],di
  41afde:	sub    BYTE PTR [eax],dh
  41afe0:	pop    edi
  41afe1:	mov    ch,0x46
  41afe3:	icebp  
  41afe4:	nop
  41afe5:	mov    edi,ds
  41afe7:	jmp    0x64ca:0x3c266d1a
  41afee:	jp     0x41af86
  41aff0:	lock inc edi
  41aff2:	(bad)  
  41aff3:	rcr    DWORD PTR [edi],0x8f
  41aff6:	ficom  DWORD PTR [eax-0x2b]
  41aff9:	pusha  
  41affa:	pushf  
  41affb:	mov    edx,0x15cec8b8
  41b000:	add    eax,0x569ffda7
  41b005:	in     eax,0x15
  41b007:	scas   eax,DWORD PTR es:[edi]
  41b008:	popa   
  41b009:	inc    esp
  41b00a:	out    dx,al
  41b00b:	mov    esp,0xd349384a
  41b010:	sbb    bl,BYTE PTR [edi*1+0x4484e15a]
  41b017:	and    ebp,esi
  41b019:	arpl   sp,sp
  41b01b:	test   eax,0xe6ecdf3e
  41b020:	fidiv  DWORD PTR [edi]
  41b022:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b023:	mov    esp,0x56c0576a
  41b028:	adc    eax,0xbecdce41
  41b02d:	jno    0x41b01b
  41b02f:	xchg   ebx,eax
  41b030:	mov    al,ds:0xd39bb3d
  41b035:	mov    bh,0xff
  41b037:	xor    eax,0x130551d6
  41b03c:	dec    ebx
  41b03d:	push   edi
  41b03e:	mov    eax,ss:0xcbd7fb7d
  41b044:	or     cl,BYTE PTR [ebx+eiz*4+0x61]
  41b048:	or     al,0x90
  41b04a:	hlt    
  41b04b:	lea    edi,ds:0x9e5c938c
  41b051:	data16 das 
  41b053:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b054:	pop    edi
  41b055:	jns    0x41b0b8
  41b057:	shl    BYTE PTR [edx+0x59f9cbef],0xd0
  41b05e:	ss xchg ebp,eax
  41b060:	cmp    ecx,edi
  41b062:	mov    BYTE PTR [esi+0x2bbaf819],ah
  41b068:	and    eax,0x621e74d1
  41b06d:	sbb    BYTE PTR [ebp+0x70],0xf8
  41b071:	in     al,0x37
  41b073:	jb     0x41b05e
  41b075:	jmp    0xb7fe623c
  41b07a:	push   ebx
  41b07b:	test   DWORD PTR [edi-0x1dd5f661],edi
  41b081:	sub    cl,al
  41b083:	mov    ds:0xd43c1ed,eax
  41b088:	in     eax,0x2d
  41b08a:	or     ah,BYTE PTR [ecx-0x24]
  41b08d:	push   esi
  41b08e:	jg     0x41b060
  41b090:	or     al,0x38
  41b092:	inc    eax
  41b093:	dec    ebp
  41b094:	inc    eax
  41b095:	jne    0x41b05e
  41b097:	adc    BYTE PTR [ecx+0xb],bl
  41b09a:	pop    edi
  41b09b:	mov    ds:0x863177a2,eax
  41b0a0:	or     al,0x17
  41b0a2:	pop    esp
  41b0a3:	jmp    0x4c70:0x97c15bc0
  41b0aa:	iret   
  41b0ab:	shl    BYTE PTR [esp+edx*1-0xc],1
  41b0af:	jmp    0xc5d2:0x176b7a16
  41b0b6:	inc    esp
  41b0b7:	or     BYTE PTR [esi+0x199854ec],cl
  41b0bd:	add    ch,BYTE PTR [ebp+esi*4+0x50afd04]
  41b0c4:	gs mov ecx,0x6488d2ad
  41b0ca:	outs   dx,BYTE PTR ds:[esi]
  41b0cb:	pop    edi
  41b0cc:	in     eax,0x9f
  41b0ce:	arpl   WORD PTR [ecx-0x8],di
  41b0d1:	int3   
  41b0d2:	push   ds
  41b0d3:	dec    ecx
  41b0d4:	pop    ebp
  41b0d5:	and    BYTE PTR [edx],0xcf
  41b0d8:	inc    edi
  41b0d9:	pop    ecx
  41b0da:	dec    esp
  41b0db:	mov    ecx,DWORD PTR [esp+0x30]
  41b0df:	or     eax,0x7113
  41b0e4:	add    eax,0x3d6a
  41b0e9:	cmp    ecx,eax
  41b0eb:	je     0x41b438
  41b0f1:	mov    eax,DWORD PTR [esp+0x40]
  41b0f5:	mov    edx,DWORD PTR [esp+0x18]
  41b0f9:	mov    edi,DWORD PTR [esp+0x1c]
  41b0fd:	xor    ecx,ecx
  41b0ff:	shld   ecx,eax,0x2
  41b103:	shl    eax,0x2
  41b106:	xor    eax,ebx
  41b108:	xor    ecx,esi
  41b10a:	cmp    eax,edx
  41b10c:	jne    0x41b11a
  41b112:	cmp    ecx,edi
  41b114:	je     0x41b3f1
  41b11a:	mov    eax,DWORD PTR [esp+0x44]
  41b11e:	mov    eax,DWORD PTR [esp+0x44]
  41b122:	mov    eax,DWORD PTR [esp+0x44]
  41b126:	mov    ecx,DWORD PTR [esp+0x44]
  41b12a:	jmp    0x41b387
  41b12f:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b131:	lea    ecx,[ecx-0x67]
  41b134:	jnp    0x41b171
  41b136:	mov    bh,0x0
  41b138:	lods   al,BYTE PTR ds:[esi]
  41b139:	dec    esp
  41b13a:	xchg   edx,eax
  41b13b:	cmp    al,0x84
  41b13d:	nop
  41b13e:	nop
  41b13f:	pop    esp
  41b140:	xor    eax,0xc235bec0
  41b145:	mov    esi,0xe05fbe
  41b14a:	ret    0x5485
  41b14d:	and    ch,BYTE PTR ds:0x34d0b050
  41b153:	ss mov bl,0x84
  41b156:	cld    
  41b157:	mov    ?,eax
  41b159:	push   esp
  41b15a:	popa   
  41b15b:	lds    eax,FWORD PTR [esi-0x6eb6717a]
  41b161:	imul   ecx,DWORD PTR [eax-0x6c],0xffffff99
  41b165:	sub    DWORD PTR [eax+0x616bf57f],eax
  41b16b:	cmp    edi,DWORD PTR [edi+0x7e]
  41b16e:	das    
  41b16f:	mov    eax,ds:0x91be1d53
  41b174:	mov    bl,0x87
  41b176:	loope  0x41b155
  41b178:	dec    eax
  41b179:	mov    cl,0x50
  41b17b:	retf   
  41b17c:	fistp  WORD PTR [edi+0x40]
  41b17f:	pop    ecx
  41b180:	shl    BYTE PTR [edx],1
  41b182:	outs   dx,BYTE PTR ds:[esi]
  41b183:	cli    
  41b184:	fdivr  DWORD PTR [esi+0x65e9478f]
  41b18a:	mov    bl,0xd9
  41b18c:	cmp    dl,BYTE PTR [ebp+0x2e]
  41b18f:	mov    eax,ds:0x9b20bac0
  41b194:	popa   
  41b195:	push   ebx
  41b196:	loopne 0x41b11c
  41b198:	xchg   edx,eax
  41b199:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b19a:	or     al,0xaf
  41b19c:	xor    eax,0x59797020
  41b1a1:	xchg   cl,al
  41b1a3:	mov    esp,edi
  41b1a5:	sub    ah,BYTE PTR [edx+0x49c6ee00]
  41b1ab:	(bad)  
  41b1ac:	(bad)  
  41b1ad:	int    0x54
  41b1af:	jmp    0x4f456c8c
  41b1b4:	jp     0x41b182
  41b1b6:	mov    BYTE PTR [edi+0x79],bh
  41b1b9:	and    ah,BYTE PTR [eax]
  41b1bb:	cdq    
  41b1bc:	jno    0x41b207
  41b1be:	cmc    
  41b1bf:	rep ins BYTE PTR es:[edi],dx
  41b1c1:	and    DWORD PTR [edx],esp
  41b1c3:	mov    dl,0xc
  41b1c5:	or     ecx,DWORD PTR [edi+0x5f63c828]
  41b1cb:	adc    al,0xa8
  41b1cd:	or     BYTE PTR [bx+si+0x66d5],ah
  41b1d2:	out    dx,eax
  41b1d3:	ret    
  41b1d4:	mov    ebx,0x4da50c7b
  41b1d9:	xchg   ecx,eax
  41b1da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1db:	inc    ecx
  41b1dc:	push   esp
  41b1dd:	dec    esi
  41b1de:	(bad)  
  41b1df:	xchg   edi,eax
  41b1e0:	inc    ebp
  41b1e1:	int3   
  41b1e2:	mov    ah,0x3c
  41b1e4:	sub    DWORD PTR [di-0x39],ecx
  41b1e8:	test   ch,dl
  41b1ea:	shr    DWORD PTR [ecx+esi*2+0x2a],cl
  41b1ee:	adc    al,BYTE PTR [esi+0x6f]
  41b1f1:	lea    ebp,[ebx-0x29]
  41b1f4:	push   ebx
  41b1f5:	je     0x41b26b
  41b1f7:	enter  0xbdfc,0xa7
  41b1fb:	jnp    0x41b241
  41b1fd:	mov    WORD PTR [edx-0x4f50ed9f],?
  41b203:	call   0x4155461
  41b208:	ins    BYTE PTR es:[edi],dx
  41b209:	sti    
  41b20a:	dec    ebx
  41b20b:	jae    0x41b212
  41b20d:	dec    edx
  41b20e:	pop    esp
  41b20f:	mov    cl,0x50
  41b211:	popa   
  41b212:	dec    esp
  41b213:	sbb    BYTE PTR [ecx+0x4cac04e0],bh
  41b219:	mov    DWORD PTR [esi+0x15],ecx
  41b21c:	jle    0x41b1fa
  41b21e:	ja     0x41b22b
  41b220:	outs   dx,DWORD PTR ds:[esi]
  41b221:	aas    
  41b222:	aas    
  41b223:	cmc    
  41b224:	pop    es
  41b225:	adc    DWORD PTR [eax-0x30],edx
  41b228:	push   ecx
  41b229:	push   ecx
  41b22a:	fist   WORD PTR [ecx]
  41b22c:	lods   al,BYTE PTR ds:[esi]
  41b22d:	dec    eax
  41b22e:	mov    esp,0x1d109f15
  41b233:	mov    bh,0xf6
  41b235:	aam    0x11
  41b237:	push   0xe0020a02
  41b23c:	jg     0x41b2bb
  41b23e:	cs lock out 0xf9,al
  41b242:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b243:	inc    edi
  41b244:	push   ecx
  41b245:	inc    ebp
  41b246:	int3   
  41b247:	pop    edi
  41b248:	rol    DWORD PTR [ecx-0x70860ac5],0x5b
  41b24f:	sti    
  41b250:	pop    edx
  41b251:	push   ds
  41b252:	lods   al,BYTE PTR ds:[esi]
  41b253:	xchg   esp,eax
  41b254:	cmc    
  41b255:	push   esi
  41b256:	call   0x828e:0xf015058d
  41b25d:	imul   ebx,DWORD PTR [edx+0x66052a12],0x2c6c9bc9
  41b267:	dec    ecx
  41b268:	mov    ds:0x40da47e0,eax
  41b26d:	mov    edi,0x565b5f39
  41b272:	test   esi,0x9626a06d
  41b278:	mov    WORD PTR [ebp+eiz*4+0x20b9ef1b],ds
  41b27f:	mov    al,ds:0x2eca5b96
  41b284:	adc    ebx,DWORD PTR [edx]
  41b286:	bound  ebx,QWORD PTR [ebx-0x2e]
  41b289:	lods   eax,DWORD PTR ds:[esi]
  41b28a:	loop   0x41b29d
  41b28c:	arpl   bp,si
  41b28e:	data16 rcr BYTE PTR [edi-0x14],1
  41b292:	xchg   esi,eax
  41b293:	call   DWORD PTR [ebx+0x4f2f6d3a]
  41b299:	test   DWORD PTR [ebx],esi
  41b29b:	mov    ebx,0x486edbcb
  41b2a0:	shl    BYTE PTR [ebx],0x68
  41b2a3:	lea    ebx,[eax-0x7f84820]
  41b2a9:	(bad)  
  41b2aa:	cmc    
  41b2ab:	pop    edi
  41b2ac:	outs   dx,DWORD PTR ds:[esi]
  41b2ad:	aaa    
  41b2ae:	xchg   BYTE PTR [eax-0x74b3c5a2],cl
  41b2b4:	mov    al,0x35
  41b2b6:	scas   al,BYTE PTR es:[edi]
  41b2b7:	mov    cl,bh
  41b2b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b2ba:	inc    esp
  41b2bb:	inc    ecx
  41b2bc:	adc    eax,edi
  41b2be:	ss and ch,0x9c
  41b2c2:	pop    ds
  41b2c3:	neg    esp
  41b2c5:	(bad)  
  41b2c6:	rcl    ah,0x7f
  41b2c9:	fiadd  WORD PTR [ecx]
  41b2cb:	(bad)  
  41b2cc:	cmp    DWORD PTR [ecx],eax
  41b2ce:	ret    0x1000
  41b2d1:	mov    al,0xc3
  41b2d3:	push   esp
  41b2d4:	ins    BYTE PTR es:[edi],dx
  41b2d5:	outs   dx,DWORD PTR ds:[esi]
  41b2d6:	cmp    al,0x3b
  41b2d8:	mov    al,ds:0x28b9d5fb
  41b2dd:	mov    esi,0x182bbcc5
  41b2e2:	jbe    0x41b315
  41b2e4:	in     al,0x4f
  41b2e6:	jmp    0x41b364
  41b2e8:	sub    bh,BYTE PTR [esp+edi*8]
  41b2eb:	test   al,0x7
  41b2ed:	(bad)  
  41b2ee:	das    
  41b2ef:	add    BYTE PTR [edx],bl
  41b2f1:	and    bl,bh
  41b2f3:	imul   ecx,DWORD PTR [ebx-0x6cebe495],0xffffffb4
  41b2fa:	push   esp
  41b2fb:	clc    
  41b2fc:	and    DWORD PTR [ecx+0x3bca56],edi
  41b302:	inc    edx
  41b303:	fnstcw WORD PTR ds:0x4f6d04b6
  41b309:	ja     0x41b31b
  41b30b:	jmp    0x5eef:0xf0e29642
  41b312:	pushf  
  41b313:	mov    esp,0x7761f91c
  41b318:	xor    eax,0xdb5e33f2
  41b31d:	adc    BYTE PTR [ebx+0x55b5bda9],al
  41b323:	push   esp
  41b324:	shl    DWORD PTR [esi+0x26],cl
  41b327:	pop    ecx
  41b328:	jno    0x41b341
  41b32a:	mov    cl,BYTE PTR ds:0x344a642a
  41b330:	mov    bl,BYTE PTR [edi]
  41b332:	adc    BYTE PTR [edi],ah
  41b334:	push   esp
  41b335:	mov    edx,0x3e9e4b69
  41b33a:	xchg   DWORD PTR [esi+0xa317a2d],ebp
  41b340:	es pop ebx
  41b342:	cmp    ebx,DWORD PTR [ecx]
  41b344:	jne    0x41b3be
  41b346:	loop   0x41b323
  41b348:	and    al,0x5f
  41b34a:	and    BYTE PTR [ebx],0xad
  41b34d:	pop    esi
  41b34e:	sub    al,0x5e
  41b350:	mov    ebp,0x475f9375
  41b355:	mov    dh,0x5
  41b357:	xor    al,0xdf
  41b359:	lods   al,BYTE PTR ds:[esi]
  41b35a:	jle    0x41b2fd
  41b35c:	retf   0x5966
  41b35f:	outs   dx,DWORD PTR ds:[esi]
  41b360:	ins    DWORD PTR es:[edi],dx
  41b361:	icebp  
  41b362:	pop    ecx
  41b363:	mov    WORD PTR [ecx],cs
  41b365:	jl     0x41b328
  41b367:	push   ds
  41b368:	sub    edi,DWORD PTR [ebp-0x13bd51a0]
  41b36e:	adc    al,0x49
  41b370:	dec    edx
  41b371:	mov    edx,0xccbc37f
  41b376:	iret   
  41b377:	adc    al,BYTE PTR [edx]
  41b379:	sar    DWORD PTR [eax+0x5a],1
  41b37c:	jns    0x41b33d
  41b37e:	mov    dl,0x4a
  41b380:	dec    edi
  41b381:	inc    ecx
  41b382:	pop    edx
  41b383:	cmc    
  41b384:	int    0xef
  41b386:	jmp    0x83a5:0x69baf35
  41b38d:	icebp  
  41b38e:	inc    cl
  41b390:	call   0x1f237497
  41b395:	or     eax,ecx
  41b397:	xor    ecx,ecx
  41b399:	shld   ecx,eax,0x2
  41b39d:	shl    eax,0x2
  41b3a0:	xor    eax,ebx
  41b3a2:	xor    ecx,esi
  41b3a4:	cmp    eax,0xcb79b572
  41b3a9:	jne    0x41b3b7
  41b3af:	cmp    ecx,esi
  41b3b1:	je     0x41b438
  41b3b7:	mov    eax,DWORD PTR [esp+0x60]
  41b3bb:	cdq    
  41b3bc:	mov    eax,DWORD PTR [esp+0x60]
  41b3c0:	mov    ecx,edx
  41b3c2:	cdq    
  41b3c3:	shld   edx,eax,0x2
  41b3c7:	shr    ecx,0x1e
  41b3ca:	xor    edi,edi
  41b3cc:	shl    eax,0x2
  41b3cf:	or     eax,ecx
  41b3d1:	or     edx,edi
  41b3d3:	mov    ecx,edx
  41b3d5:	mov    edx,DWORD PTR [esp+0x18]
  41b3d9:	xor    eax,ebx
  41b3db:	xor    ecx,esi
  41b3dd:	mov    esi,DWORD PTR [esp+0x1c]
  41b3e1:	cmp    edx,eax
  41b3e3:	jne    0x41b3f1
  41b3e9:	cmp    esi,ecx
  41b3eb:	je     0x41b438
  41b3f1:	push   DWORD PTR ds:0x422828
  41b3f7:	push   DWORD PTR ds:0x4225bc
  41b3fd:	mov    eax,ds:0x422738
  41b402:	mov    eax,DWORD PTR [eax+0x1a4]
  41b408:	push   DWORD PTR [eax]
  41b40a:	mov    eax,DWORD PTR [esp+0x78]
  41b40e:	call   eax
  41b410:	mov    ecx,DWORD PTR ds:0x422738
  41b416:	mov    ecx,DWORD PTR [ecx+0x1dc]
  41b41c:	mov    DWORD PTR [ecx],eax
  41b41e:	mov    eax,ds:0x422738
  41b423:	push   0x4
  41b425:	add    eax,0x1dc
  41b42a:	push   eax
  41b42b:	lea    eax,[esp+0x84]
  41b432:	push   eax
  41b433:	call   0x411c08
  41b438:	mov    eax,DWORD PTR [esp+0x7c]
  41b43c:	mov    eax,DWORD PTR [eax]
  41b43e:	pop    edi
  41b43f:	pop    esi
  41b440:	pop    ebx
  41b441:	mov    esp,ebp
  41b443:	pop    ebp
  41b444:	ret    0xc
  41b447:	push   ebp
  41b448:	mov    ebp,esp
  41b44a:	sub    esp,0x23c
  41b450:	push   ebx
  41b451:	cmp    DWORD PTR ds:0x428595,0x0
  41b458:	mov    DWORD PTR ds:0x42837d,0x2d97
  41b462:	mov    ecx,DWORD PTR ds:0x428495
  41b468:	mov    ecx,DWORD PTR ds:0x428469
  41b46e:	not    ecx
  41b470:	jmp    0x41b4da
  41b475:	mov    eax,ds:0x4284b1
  41b47a:	cmp    DWORD PTR ds:0x428595,0x0
  41b481:	jge    0x41b4c9
  41b487:	push   0x73dd
  41b48c:	push   DWORD PTR [ebp-0x18]
  41b48f:	push   0x428323
  41b494:	push   DWORD PTR [ebp-0x10]
  41b497:	push   DWORD PTR [ebp-0x14]
  41b49a:	call   DWORD PTR ds:0x42e108
  41b4a0:	neg    ecx
  41b4a2:	movzx  ecx,WORD PTR ds:0x428391
  41b4a9:	sbb    ecx,DWORD PTR ds:0x428481
  41b4af:	mov    DWORD PTR ds:0x428391,ecx
  41b4b5:	and    ecx,DWORD PTR ds:0x4285a1
  41b4bb:	xor    ecx,ecx
  41b4bd:	or     ecx,DWORD PTR ds:0x4284a1
  41b4c3:	or     DWORD PTR ds:0x428515,ecx
  41b4c9:	adc    ecx,ecx
  41b4cb:	xor    ecx,ecx
  41b4cd:	movzx  ecx,BYTE PTR ds:0x428441
  41b4d4:	or     DWORD PTR ds:0x428449,ecx
  41b4da:	push   esi
  41b4db:	push   edi
  41b4dc:	cmp    DWORD PTR ds:0x4285ad,0x0
  41b4e3:	mov    ecx,0x4e26
  41b4e8:	mov    DWORD PTR ds:0x4285a1,ebx
  41b4ee:	mov    DWORD PTR ds:0x42844d,ecx
  41b4f4:	mov    DWORD PTR ds:0x42851d,edx
  41b4fa:	jmp    0x41b569
  41b4ff:	mov    DWORD PTR ds:0x4283a1,0x7065
  41b509:	cmp    DWORD PTR ds:0x4285ad,0x0
  41b510:	jae    0x41b54d
  41b516:	push   0x1ec2
  41b51b:	push   DWORD PTR [ebp-0x10]
  41b51e:	push   DWORD PTR [ebp-0x10]
  41b521:	push   0x8dff
  41b526:	push   DWORD PTR [ebp-0x18]
  41b529:	push   0x4285a5
  41b52e:	call   DWORD PTR ds:0x42e290
  41b534:	xor    ecx,0x4175
  41b53a:	movzx  ecx,BYTE PTR ds:0x428499
  41b541:	or     ecx,DWORD PTR ds:0x42845d
  41b547:	mov    DWORD PTR ds:0x428499,ecx
  41b54d:	add    DWORD PTR ds:0x428439,edx
  41b553:	adc    ecx,0x68aa
  41b559:	add    DWORD PTR ds:0x428381,0x591d
  41b563:	dec    DWORD PTR ds:0x4284b1
  41b569:	mov    DWORD PTR [ebp-0x50],0x1
  41b570:	cmp    DWORD PTR ds:0x4285ad,0x0
  41b577:	not    ecx
  41b579:	mov    DWORD PTR ds:0x428391,0x24a
  41b583:	jmp    0x41b5df
  41b588:	mov    DWORD PTR ds:0x428399,0x4cf4
  41b592:	mov    eax,0x7057
  41b597:	cmp    DWORD PTR ds:0x4285ad,0x0
  41b59e:	jl     0x41b5c3
  41b5a4:	push   DWORD PTR [ebp-0xc]
  41b5a7:	call   DWORD PTR ds:0x42e10c
  41b5ad:	adc    ecx,DWORD PTR ds:0x42845d
  41b5b3:	sbb    DWORD PTR ds:0x428481,0x4277
  41b5bd:	and    DWORD PTR ds:0x428505,ecx
  41b5c3:	and    ecx,ecx
  41b5c5:	or     DWORD PTR ds:0x4284a5,0x5b0f
  41b5cf:	sbb    ecx,0x33b5
  41b5d5:	sub    DWORD PTR ds:0x42847d,0xb05
  41b5df:	mov    DWORD PTR [ebp-0xbc],0x61a1
  41b5e9:	xor    DWORD PTR ds:0x428399,0x1f8b
  41b5f3:	mov    DWORD PTR [ebp-0xb8],0x1
  41b5fd:	mov    ecx,DWORD PTR [ebp-0xb8]
  41b603:	mov    eax,0x584
  41b608:	xor    edx,edx
  41b60a:	div    ecx
  41b60c:	cmp    DWORD PTR ds:0x428531,0x0
  41b613:	mov    DWORD PTR ds:0x428395,0x2b7a
  41b61d:	mov    DWORD PTR ds:0x42857d,0x6434
  41b627:	mov    DWORD PTR ds:0x428505,0x53bf
  41b631:	jmp    0x41b6a4
  41b636:	mov    DWORD PTR ds:0x428475,edi
  41b63c:	movzx  ecx,WORD PTR ds:0x428391
  41b643:	cmp    DWORD PTR ds:0x428531,0x0
  41b64a:	jle    0x41b684
  41b650:	push   0x42845d
  41b655:	push   0x428499
  41b65a:	push   0x428435
  41b65f:	call   DWORD PTR ds:0x42e294
  41b665:	xor    DWORD PTR ds:0x428515,edi
  41b66b:	movzx  ecx,BYTE PTR ds:0x428371
  41b672:	sub    ecx,DWORD PTR ds:0x428479
  41b678:	mov    DWORD PTR ds:0x428371,ecx
  41b67e:	adc    DWORD PTR ds:0x428471,ecx
  41b684:	adc    ecx,0x4862
  41b68a:	and    ecx,DWORD PTR ds:0x428471
  41b690:	or     DWORD PTR ds:0x428515,ecx
  41b696:	mov    ecx,DWORD PTR ds:0x4284f1
  41b69c:	mov    ecx,DWORD PTR [ecx]
  41b69e:	sub    DWORD PTR ds:0x428499,ecx
  41b6a4:	imul   eax,eax,0x51d4
  41b6aa:	sub    ecx,0x11f6
  41b6b0:	mov    ecx,DWORD PTR [ebp-0xbc]
  41b6b6:	add    DWORD PTR ds:0x42845d,0x5690
  41b6c0:	xor    eax,ecx
  41b6c2:	adc    DWORD PTR ds:0x428595,edi
  41b6c8:	and    eax,0x4c09
  41b6cd:	sbb    ecx,0x3053
  41b6d3:	mov    ecx,DWORD PTR [ebp-0x50]
  41b6d6:	sub    DWORD PTR ds:0x428459,0x4284a9
  41b6e0:	xor    edx,edx
  41b6e2:	div    ecx
  41b6e4:	sbb    ecx,DWORD PTR ds:0x428455
  41b6ea:	sub    eax,0x401
  41b6ef:	mov    ecx,DWORD PTR ds:0x428531
  41b6f5:	sub    DWORD PTR ds:0x4285a1,ecx
  41b6fb:	mov    DWORD PTR [ebp-0x90],eax
  41b701:	mov    DWORD PTR [ebp-0x8c],0x2ff8
  41b70b:	mov    DWORD PTR [ebp-0x4c],0x39f7
  41b712:	cmp    DWORD PTR ds:0x4284a5,0x0
  41b719:	mov    DWORD PTR ds:0x428389,0x12e0
  41b723:	movzx  edx,WORD PTR ds:0x428469
  41b72a:	jmp    0x41b78a
  41b72f:	not    eax
  41b731:	mov    DWORD PTR ds:0x428505,edi
  41b737:	cmp    DWORD PTR ds:0x4284a5,0x0
  41b73e:	jne    0x41b768
  41b744:	push   0x428187
  41b749:	call   DWORD PTR ds:0x42e298
  41b74f:	movzx  edx,WORD PTR ds:0x42837d
  41b756:	xor    DWORD PTR ds:0x428361,edx
  41b75c:	and    ecx,0x442f
  41b762:	sub    edx,0x55c5
  41b768:	mov    ecx,DWORD PTR ds:0x42850d
  41b76e:	xor    ecx,DWORD PTR ds:0x428515
  41b774:	mov    DWORD PTR ds:0x42850d,ecx
  41b77a:	and    DWORD PTR ds:0x42838d,0x34b7
  41b784:	adc    DWORD PTR ds:0x428531,ebx
  41b78a:	mov    DWORD PTR [ebp-0xb4],0x3842
  41b794:	adc    ecx,edx
  41b796:	mov    eax,DWORD PTR [ebp-0x4c]
  41b799:	and    ecx,edx
  41b79b:	add    eax,DWORD PTR [ebp-0xb4]
  41b7a1:	xor    eax,0x2e02
  41b7a6:	add    ecx,ecx
  41b7a8:	xor    eax,0x7294
  41b7ad:	add    ecx,ecx
  41b7af:	imul   eax,eax,0x68f3
  41b7b5:	mov    ecx,DWORD PTR [ebp-0x8c]
  41b7bb:	cmp    DWORD PTR ds:0x428391,0x0
  41b7c2:	mov    DWORD PTR ds:0x428499,ebx
  41b7c8:	mov    edx,DWORD PTR ds:0x4285ad
  41b7ce:	jmp    0x41b822
  41b7d3:	mov    DWORD PTR ds:0x428385,edx
  41b7d9:	cmp    DWORD PTR ds:0x428391,0x0
  41b7e0:	ja     0x41b810
  41b7e6:	push   DWORD PTR [ebp-0x1c]
  41b7e9:	push   0x2a61
  41b7ee:	push   0x6c90
  41b7f3:	push   0x2be6
  41b7f8:	push   0x2810
  41b7fd:	call   DWORD PTR ds:0x42e054
  41b803:	inc    edx
  41b804:	mov    edx,DWORD PTR ds:0x428381
  41b80a:	sbb    DWORD PTR ds:0x428489,edx
  41b810:	or     edx,DWORD PTR ds:0x4283a1
  41b816:	and    edx,DWORD PTR ds:0x428505
  41b81c:	sub    edx,DWORD PTR ds:0x428599
  41b822:	and    eax,ecx
  41b824:	adc    DWORD PTR ds:0x42849d,0x2bc9
  41b82e:	sub    eax,0x2818
  41b833:	mov    edx,DWORD PTR ds:0x42854d
  41b839:	mov    ecx,DWORD PTR ds:0x428559
  41b83f:	sub    ecx,edx
  41b841:	add    edx,DWORD PTR [edx+ecx*1]
  41b844:	mov    DWORD PTR [ebp-0xe8],eax
  41b84a:	mov    DWORD PTR [ebp-0x70],0x6f89
  41b851:	mov    DWORD PTR [ebp-0xd0],0x5a58
  41b85b:	mov    DWORD PTR [ebp-0x120],0x3c77
  41b865:	sbb    DWORD PTR ds:0x428459,edx
  41b86b:	mov    DWORD PTR [ebp-0x2c],0x2129
  41b872:	cmp    DWORD PTR ds:0x4284b1,0x0
  41b879:	mov    DWORD PTR ds:0x4283a5,0x25cb
  41b883:	mov    edx,0x2db2
  41b888:	mov    DWORD PTR ds:0x428531,0x75fd
  41b892:	jmp    0x41b8de
  41b897:	mov    eax,0x420d
  41b89c:	mov    DWORD PTR ds:0x42850d,0x38f0
  41b8a6:	cmp    DWORD PTR ds:0x4284b1,0x0
  41b8ad:	jge    0x41b8c8
  41b8b3:	push   DWORD PTR [ebp-0xc]
  41b8b6:	call   DWORD PTR ds:0x42e058
  41b8bc:	adc    DWORD PTR ds:0x42857d,edx
  41b8c2:	add    DWORD PTR ds:0x4285a1,edx
  41b8c8:	sbb    edx,DWORD PTR ds:0x428595
  41b8ce:	and    DWORD PTR ds:0x4284fd,0x10d1
  41b8d8:	and    ecx,0x7be2
  41b8de:	mov    eax,DWORD PTR [ebp-0x2c]
  41b8e1:	imul   eax,eax,0x1ada
  41b8e7:	xor    DWORD PTR ds:0x428499,ebx
  41b8ed:	mov    ecx,DWORD PTR [ebp-0x120]
  41b8f3:	mov    edx,DWORD PTR ds:0x428445
  41b8f9:	or     edx,DWORD PTR ds:0x428491
  41b8ff:	mov    DWORD PTR ds:0x428445,edx
  41b905:	imul   ecx,ecx,0x53ae
  41b90b:	xor    DWORD PTR ds:0x428505,0x220b
  41b915:	imul   ecx,ecx,0x7447
  41b91b:	mov    edx,DWORD PTR [ebp-0xd0]
  41b921:	and    ecx,edx
  41b923:	or     ecx,0x2a20
  41b929:	or     DWORD PTR ds:0x428505,0x6762
  41b933:	mov    edx,DWORD PTR [ebp-0x70]
  41b936:	xor    ecx,edx
  41b938:	and    DWORD PTR ds:0x42836d,0x71f
  41b942:	mov    edx,DWORD PTR [ebp+0x14]
  41b945:	or     DWORD PTR ds:0x428481,0x17f4
  41b94f:	mov    eax,DWORD PTR [edx+eax*1-0x37a66ea]
  41b956:	or     DWORD PTR ds:0x428521,0x4284b1
  41b960:	lea    eax,[ecx+eax*1-0x45a1]
  41b967:	mov    DWORD PTR [ebp-0xb0],eax
  41b96d:	add    ecx,eax
  41b96f:	mov    DWORD PTR [ebp-0x11c],0x303f
  41b979:	mov    DWORD PTR [ebp-0x98],0x51a9
  41b983:	sub    ecx,eax
  41b985:	mov    DWORD PTR [ebp-0xcc],0x6d4d
  41b98f:	cmp    DWORD PTR ds:0x4283a5,0x0
  41b996:	mov    DWORD PTR ds:0x428389,0x245f
  41b9a0:	mov    ecx,DWORD PTR ds:0x42845d
  41b9a6:	mov    ecx,0x273f
  41b9ab:	jmp    0x41ba0f
  41b9b0:	mov    DWORD PTR ds:0x428499,ebx
  41b9b6:	mov    DWORD PTR ds:0x428469,0x963
  41b9c0:	cmp    DWORD PTR ds:0x4283a5,0x0
  41b9c7:	jle    0x41b9ee
  41b9cd:	push   DWORD PTR [ebp-0x28]
  41b9d0:	push   0x4284fd
  41b9d5:	push   0x4281e5
  41b9da:	call   DWORD PTR ds:0x42e29c
  41b9e0:	sub    DWORD PTR ds:0x42858d,ebx
  41b9e6:	xor    ecx,ecx
  41b9e8:	sbb    DWORD PTR ds:0x428515,ebx
  41b9ee:	movzx  ecx,BYTE PTR ds:0x42838d
  41b9f5:	adc    DWORD PTR ds:0x428479,ecx
  41b9fb:	add    DWORD PTR ds:0x428381,0x7cea
  41ba05:	sbb    DWORD PTR ds:0x428385,0x6b1e
  41ba0f:	mov    eax,DWORD PTR [ebp-0xcc]
  41ba15:	xor    eax,0x6f65
  41ba1a:	cmp    DWORD PTR ds:0x42837d,0x0
  41ba21:	mov    DWORD PTR ds:0x428475,edx
  41ba27:	mov    ecx,0x51b5
  41ba2c:	jmp    0x41baa2
  41ba31:	mov    DWORD PTR ds:0x42847d,0xb0f
  41ba3b:	cmp    DWORD PTR ds:0x42837d,0x0
  41ba42:	jl     0x41ba7a
  41ba48:	push   0x200e
  41ba4d:	push   0x21c1
  41ba52:	push   DWORD PTR [ebp-0x14]
  41ba55:	push   DWORD PTR [ebp-0x14]
  41ba58:	call   DWORD PTR ds:0x42e110
  41ba5e:	sub    DWORD PTR ds:0x428449,ecx
  41ba64:	sub    ecx,DWORD PTR ds:0x428575
  41ba6a:	sbb    DWORD PTR ds:0x428451,0x42852d
  41ba74:	sub    ecx,0x1dd7
  41ba7a:	mov    ecx,DWORD PTR ds:0x428495
  41ba80:	adc    ecx,DWORD PTR ds:0x4285a9
  41ba86:	mov    DWORD PTR ds:0x428495,ecx
  41ba8c:	adc    DWORD PTR ds:0x428599,0x3dd1
  41ba96:	mov    DWORD PTR ds:0x428399,0x5b91
  41baa0:	neg    ecx
  41baa2:	mov    ecx,DWORD PTR [ebp-0x98]
  41baa8:	add    DWORD PTR ds:0x4285a5,0x72a
  41bab2:	or     eax,ecx
  41bab4:	xor    DWORD PTR ds:0x428499,ebx
  41baba:	add    eax,0x161e
  41babf:	sub    ecx,0x1ef7
  41bac5:	mov    ecx,DWORD PTR [ebp-0x11c]
  41bacb:	or     eax,ecx
  41bacd:	cmp    DWORD PTR ds:0x428449,0x0
  41bad4:	mov    ecx,DWORD PTR ds:0x428461
  41bada:	mov    DWORD PTR ds:0x428485,0x4d
  41bae4:	jmp    0x41bbad
  41bae9:	mov    DWORD PTR ds:0x428485,0x133b
  41baf3:	cmp    DWORD PTR ds:0x428449,0x0
  41bafa:	jne    0x41bb25
  41bb00:	push   0x428591
  41bb05:	push   0x8a51
  41bb0a:	push   0x81dc
  41bb0f:	call   DWORD PTR ds:0x42e05c
  41bb15:	and    DWORD PTR ds:0x42845d,0x4030
  41bb1f:	sub    DWORD PTR ds:0x428509,edx
  41bb25:	add    ecx,0x753f
  41bb2b:	mov    ecx,DWORD PTR ds:0x428445
  41bb31:	xor    DWORD PTR ds:0x428441,ecx
  41bb37:	sbb    DWORD PTR ds:0x42858d,edx
  41bb3d:	cmp    DWORD PTR ds:0x4285a1,0x0
  41bb44:	mov    ecx,DWORD PTR ds:0x4285a5
  41bb4a:	mov    ecx,DWORD PTR ds:0x428521
  41bb50:	mov    DWORD PTR ds:0x42849d,edx
  41bb56:	mov    DWORD PTR ds:0x428455,edi
  41bb5c:	jmp    0x41bbad
  41bb61:	not    ecx
  41bb63:	cmp    DWORD PTR ds:0x4285a1,0x0
  41bb6a:	jne    0x41bb96
  41bb70:	push   0x6108
  41bb75:	push   0x2ee0
  41bb7a:	push   0x4282c5
  41bb7f:	push   0x1382
  41bb84:	call   DWORD PTR ds:0x42e060
  41bb8a:	or     DWORD PTR ds:0x4284f9,edi
  41bb90:	neg    DWORD PTR ds:0x428385
  41bb96:	movzx  ecx,WORD PTR ds:0x428589
  41bb9d:	sbb    DWORD PTR ds:0x4284a1,ecx
  41bba3:	or     DWORD PTR ds:0x428475,0x428481
  41bbad:	add    eax,0x1cca
  41bbb2:	cmp    DWORD PTR ds:0x428381,0x0
  41bbb9:	mov    DWORD PTR ds:0x428481,0x3c56
  41bbc3:	mov    ecx,0x7f6d
  41bbc8:	mov    ecx,DWORD PTR ds:0x42847d
  41bbce:	jmp    0x41bc28
  41bbd3:	not    ecx
  41bbd5:	cmp    DWORD PTR ds:0x428381,0x0
  41bbdc:	jbe    0x41bc10
  41bbe2:	push   0x5de5
  41bbe7:	push   0x4282af
  41bbec:	push   0x27d6
  41bbf1:	call   DWORD PTR ds:0x42e114
  41bbf7:	movzx  ecx,BYTE PTR ds:0x4283a1
  41bbfe:	adc    DWORD PTR ds:0x428395,ecx
  41bc04:	sbb    ecx,0x4cc7
  41bc0a:	sbb    ecx,DWORD PTR ds:0x42847d
  41bc10:	adc    DWORD PTR ds:0x4285a9,ebx
  41bc16:	mov    ecx,DWORD PTR ds:0x42836d
  41bc1c:	sub    DWORD PTR ds:0x4285b1,ecx
  41bc22:	add    ecx,0x5653
  41bc28:	xor    eax,0x96c9
  41bc2d:	sbb    DWORD PTR ds:0x4285a9,0x433e
  41bc37:	mov    DWORD PTR [ebp-0x38],eax
  41bc3a:	mov    DWORD PTR [ebp-0x118],0x6083
  41bc44:	sub    DWORD PTR ds:0x42835d,0x67a3
  41bc4e:	mov    DWORD PTR [ebp-0x88],0x556
  41bc58:	or     ecx,eax
  41bc5a:	mov    DWORD PTR [ebp-0x140],0x6c7d
  41bc64:	cmp    DWORD PTR ds:0x428501,0x0
  41bc6b:	mov    ecx,0x31c9
  41bc70:	mov    DWORD PTR ds:0x4285a9,0x1996
  41bc7a:	jmp    0x41bccd
  41bc7f:	mov    DWORD PTR ds:0x4284fd,edi
  41bc85:	cmp    DWORD PTR ds:0x428501,0x0
  41bc8c:	jb     0x41bcb3
  41bc92:	push   0x428323
  41bc97:	push   DWORD PTR [ebp-0x14]
  41bc9a:	call   DWORD PTR ds:0x42e118
  41bca0:	add    ecx,DWORD PTR ds:0x428485
  41bca6:	movzx  ecx,BYTE PTR ds:0x4284a9
  41bcad:	add    DWORD PTR ds:0x428395,ecx
  41bcb3:	sub    DWORD PTR ds:0x428505,ecx
  41bcb9:	xor    ecx,ecx
  41bcbb:	add    ecx,DWORD PTR ds:0x428439
  41bcc1:	or     DWORD PTR ds:0x428579,ecx
  41bcc7:	add    DWORD PTR ds:0x428441,ebx
  41bccd:	mov    eax,DWORD PTR [ebp-0x140]
  41bcd3:	add    eax,0x5af8
  41bcd8:	sbb    ecx,0x75c4
  41bcde:	mov    ecx,DWORD PTR [ebp-0x88]
  41bce4:	sub    eax,ecx
  41bce6:	mov    ecx,DWORD PTR [ebp-0x118]
  41bcec:	xor    DWORD PTR ds:0x428595,0x6d4
  41bcf6:	lea    eax,[eax+ecx*1+0x68dc]
  41bcfd:	or     eax,0x52f6
  41bd02:	cmp    DWORD PTR ds:0x428489,0x0
  41bd09:	mov    DWORD PTR ds:0x428575,0x1421
  41bd13:	mov    DWORD PTR ds:0x4284b1,0x487c
  41bd1d:	mov    ecx,DWORD PTR ds:0x428465
  41bd23:	jmp    0x41bd91
  41bd28:	mov    DWORD PTR ds:0x42847d,0x10ed
  41bd32:	not    ecx
  41bd34:	cmp    DWORD PTR ds:0x428489,0x0
  41bd3b:	jbe    0x41bd77
  41bd41:	push   0x8eb3
  41bd46:	call   DWORD PTR ds:0x42e11c
  41bd4c:	mov    ecx,DWORD PTR ds:0x428505
  41bd52:	sub    DWORD PTR ds:0x428391,ecx
  41bd58:	mov    ecx,DWORD PTR ds:0x428461
  41bd5e:	sbb    ecx,DWORD PTR ds:0x428491
  41bd64:	mov    DWORD PTR ds:0x428461,ecx
  41bd6a:	movzx  ecx,BYTE PTR ds:0x42837d
  41bd71:	or     DWORD PTR ds:0x4284f5,ecx
  41bd77:	sbb    DWORD PTR ds:0x428375,ebx
  41bd7d:	neg    ecx
  41bd7f:	mov    ecx,DWORD PTR ds:0x428385
  41bd85:	xor    ecx,DWORD PTR ds:0x428439
  41bd8b:	mov    DWORD PTR ds:0x428385,ecx
  41bd91:	sub    eax,0x1dbfe
  41bd96:	sbb    DWORD PTR ds:0x428519,ecx
  41bd9c:	mov    DWORD PTR [ebp-0xac],eax
  41bda2:	xor    DWORD PTR ds:0x42845d,ebx
  41bda8:	mov    DWORD PTR [ebp-0x6c],0x4b56
  41bdaf:	mov    DWORD PTR [ebp-0x100],0x49f7
  41bdb9:	inc    ecx
  41bdba:	mov    eax,DWORD PTR [ebp-0x100]
  41bdc0:	movzx  ecx,BYTE PTR ds:0x428585
  41bdc7:	sub    ecx,DWORD PTR ds:0x4284f9
  41bdcd:	mov    DWORD PTR ds:0x428585,ecx
  41bdd3:	add    eax,0x7b60
  41bdd8:	sbb    ecx,0x7111
  41bdde:	imul   eax,eax,0x5ea
  41bde4:	add    DWORD PTR ds:0x4284a5,ecx
  41bdea:	mov    ecx,DWORD PTR [ebp-0x6c]
  41bded:	imul   eax,ecx
  41bdf0:	xor    edx,edx
  41bdf2:	adc    DWORD PTR ds:0x428441,0x2190
  41bdfc:	mov    ecx,0x3218d
  41be01:	div    ecx
  41be03:	sub    eax,0x24c1
  41be08:	sbb    ecx,0x10cc
  41be0e:	mov    DWORD PTR [ebp-0xa8],eax
  41be14:	xor    eax,eax
  41be16:	add    eax,DWORD PTR ds:0x42850d
  41be1c:	sbb    eax,DWORD PTR ds:0x4284a5
  41be22:	mov    ds:0x42850d,eax
  41be27:	mov    DWORD PTR [ebp-0x84],0x2c40
  41be31:	xor    ecx,ecx
  41be33:	or     ecx,DWORD PTR ds:0x428441
  41be39:	xor    ecx,DWORD PTR ds:0x4284a1
  41be3f:	mov    DWORD PTR ds:0x428441,ecx
  41be45:	mov    DWORD PTR [ebp-0x18],0x6013
  41be4c:	or     DWORD PTR ds:0x428589,ecx
  41be52:	mov    DWORD PTR [ebp-0x80],0xc
  41be59:	and    eax,eax
  41be5b:	mov    eax,DWORD PTR [ebp-0x18]
  41be5e:	and    DWORD PTR ds:0x4284f5,edi
  41be64:	mov    ecx,DWORD PTR [ebp-0x80]
  41be67:	xor    edx,edx
  41be69:	add    DWORD PTR ds:0x42839d,0x428391
  41be73:	div    ecx
  41be75:	imul   eax,eax,0x4312
  41be7b:	cmp    DWORD PTR ds:0x428511,0x0
  41be82:	mov    DWORD PTR ds:0x428441,0x6e4f
  41be8c:	movzx  ecx,WORD PTR ds:0x4285a9
  41be93:	mov    DWORD PTR ds:0x428585,edi
  41be99:	jmp    0x41befc
  41be9e:	mov    DWORD PTR ds:0x42836d,0x5f09
  41bea8:	cmp    DWORD PTR ds:0x428511,0x0
  41beaf:	jge    0x41bed8
  41beb5:	push   DWORD PTR [ebp-0x28]
  41beb8:	call   DWORD PTR ds:0x42e064
  41bebe:	sbb    ecx,DWORD PTR ds:0x4284fd
  41bec4:	xor    ecx,ecx
  41bec6:	xor    ecx,DWORD PTR ds:0x428461
  41becc:	sub    DWORD PTR ds:0x428395,ecx
  41bed2:	and    DWORD PTR ds:0x428469,edi
  41bed8:	xor    ecx,ecx
  41beda:	xor    ecx,DWORD PTR ds:0x428599
  41bee0:	xor    DWORD PTR ds:0x428435,ecx
  41bee6:	or     DWORD PTR ds:0x428475,0x15e9
  41bef0:	xor    ecx,0x6843
  41bef6:	adc    ecx,DWORD PTR ds:0x428479
  41befc:	add    eax,0x5abe
  41bf01:	mov    ecx,DWORD PTR [ebp-0x84]
  41bf07:	add    DWORD PTR ds:0x428511,0x4285a9
  41bf11:	xor    eax,ecx
  41bf13:	mov    ecx,DWORD PTR ds:0x428389
  41bf19:	and    ecx,DWORD PTR ds:0x42858d
  41bf1f:	mov    DWORD PTR ds:0x428389,ecx
  41bf25:	xor    edx,edx
  41bf27:	not    DWORD PTR ds:0x428399
  41bf2d:	mov    ecx,0x5ae
  41bf32:	div    ecx
  41bf34:	jmp    0x41c31b
  41bf39:	xchg   DWORD PTR [edi],esp
  41bf3b:	dec    eax
  41bf3c:	in     al,0x68
  41bf3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf3f:	lods   al,BYTE PTR ds:[esi]
  41bf40:	stos   DWORD PTR es:[edi],eax
  41bf41:	test   BYTE PTR [ebx+eax*8-0x2c708831],bh
  41bf48:	nop
  41bf49:	aam    0x3b
  41bf4b:	sar    BYTE PTR [esi-0x41413bb6],0x70
  41bf52:	xor    DWORD PTR [ebx],edx
  41bf54:	les    ebx,FWORD PTR [esi]
  41bf56:	test   esi,edi
  41bf58:	rol    BYTE PTR [ebp+0xb],1
  41bf5b:	rcr    BYTE PTR [ebx-0x5cdd3ac4],1
  41bf61:	stos   BYTE PTR es:[edi],al
  41bf62:	xchg   edx,esi
  41bf64:	or     ecx,ebp
  41bf66:	dec    eax
  41bf67:	loopne 0x41bfae
  41bf69:	pop    ebx
  41bf6a:	(bad)  
  41bf6b:	jecxz  0x41bf4c
  41bf6d:	cwde   
  41bf6e:	out    0xc9,al
  41bf70:	sbb    DWORD PTR [edx],esp
  41bf72:	adc    eax,0x84b0d39d
  41bf77:	push   ebx
  41bf78:	and    BYTE PTR [eax+ecx*2-0x4438b2c7],dl
  41bf7f:	or     BYTE PTR [eax],al
  41bf81:	scas   al,BYTE PTR es:[edi]
  41bf82:	test   eax,0xd2cec9a7
  41bf87:	dec    ebp
  41bf88:	mov    dl,0x2a
  41bf8a:	mov    eax,0xe6c42891
  41bf8f:	aam    0xbb
  41bf91:	cmp    al,0x48
  41bf93:	pop    ecx
  41bf94:	add    ebx,DWORD PTR ds:0x43f2a35d
  41bf9a:	xchg   ebx,eax
  41bf9b:	ja     0x41c00c
  41bf9d:	pop    eax
  41bf9e:	ret    
  41bf9f:	sub    DWORD PTR ds:0x864d04a3,ebx
  41bfa5:	push   edx
  41bfa6:	leave  
  41bfa7:	sub    ecx,DWORD PTR [ebx+0x79]
  41bfaa:	mov    edx,0x9f82c10d
  41bfaf:	out    0xfd,al
  41bfb1:	and    edx,DWORD PTR [eax-0x1fc5f097]
  41bfb7:	adc    BYTE PTR [edi-0x8],0x42
  41bfbb:	xchg   edx,eax
  41bfbc:	adc    DWORD PTR [edx-0x98dd658],eax
  41bfc2:	xchg   esi,eax
  41bfc3:	mov    ecx,0x81be65b2
  41bfc8:	jp     0x41c030
  41bfca:	cmp    DWORD PTR [esi-0x5a],ecx
  41bfcd:	and    eax,0x497bbc03
  41bfd2:	int3   
  41bfd3:	pop    ecx
  41bfd4:	stos   DWORD PTR es:[edi],eax
  41bfd5:	mov    DWORD PTR [esi-0x3d],esp
  41bfd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bfda:	ffree  st(6)
  41bfdc:	shr    BYTE PTR [edx+esi*4+0x2a],1
  41bfe0:	fst    QWORD PTR [edi-0x77875f80]
  41bfe6:	iret   
  41bfe7:	les    ebp,FWORD PTR [ebp-0x62]
  41bfea:	mov    eax,0x3ac0db85
  41bfef:	add    ah,BYTE PTR [eax-0x5a]
  41bff2:	repz idiv BYTE PTR [ebx+ebp*4]
  41bff6:	stos   BYTE PTR es:[edi],al
  41bff7:	lds    eax,FWORD PTR [eax-0x66]
  41bffa:	inc    edi
  41bffb:	or     edx,0x3b
  41bffe:	test   eax,ebp
  41c000:	add    BYTE PTR [ecx],bh
  41c002:	rcr    esi,cl
  41c004:	push   es
  41c005:	push   eax
  41c006:	aaa    
  41c007:	call   0xd890:0xaa4fee58
  41c00e:	pop    edx
  41c00f:	jmp    0xc6a80d57
  41c014:	xor    DWORD PTR [eax+0x2b302da],esi
  41c01a:	inc    ebp
  41c01b:	icebp  
  41c01c:	pop    es
  41c01d:	dec    edi
  41c01e:	fild   WORD PTR [edi]
  41c020:	arpl   WORD PTR [eax],si
  41c022:	add    ch,BYTE PTR [ebp-0x7d]
  41c025:	dec    ecx
  41c026:	mov    ds:0x443b1230,al
  41c02b:	mov    eax,ds:0x3854dd69
  41c030:	jo     0x41c079
  41c032:	mov    ebx,0x297b3cf7
  41c037:	lods   eax,DWORD PTR ds:[esi]
  41c038:	pop    ecx
  41c039:	xor    al,0xe5
  41c03b:	add    ah,BYTE PTR [ebx+eax*4+0x24d8cd74]
  41c042:	and    cl,BYTE PTR [eax-0x10f2654a]
  41c048:	push   cs
  41c049:	inc    edi
  41c04a:	(bad)  
  41c04c:	sub    ecx,DWORD PTR [ebp+0x2fdc7d46]
  41c052:	sahf   
  41c053:	pop    ecx
  41c054:	add    al,0xd0
  41c056:	hlt    
  41c057:	xor    DWORD PTR ds:0x1a5dd92d,ebx
  41c05d:	(bad)  
  41c05e:	(bad)  [ebx]
  41c060:	and    ecx,DWORD PTR [ecx-0x1e021c4f]
  41c066:	adc    DWORD PTR [edx+0x20233fa],ebp
  41c06c:	or     edx,ecx
  41c06e:	in     eax,0xf8
  41c070:	out    0xe0,al
  41c072:	popf   
  41c073:	fisttp WORD PTR [eax+ebp*4-0x26189f54]
  41c07a:	jo     0x41c0da
  41c07c:	xchg   ebx,eax
  41c07d:	push   ebp
  41c07e:	popa   
  41c07f:	or     bh,0x24
  41c082:	cs push edx
  41c084:	push   esp
  41c085:	pop    esp
  41c086:	(bad)  
  41c087:	in     eax,0x8c
  41c089:	jge    0x41c0eb
  41c08b:	cmp    BYTE PTR [ebx-0x714c1d3a],al
  41c091:	ret    
  41c092:	add    eax,0x129e65c3
  41c097:	cli    
  41c098:	pop    ebx
  41c099:	inc    ebp
  41c09a:	(bad)  
  41c09b:	out    0x7a,eax
  41c09d:	ds mov dl,0x13
  41c0a0:	out    0x98,eax
  41c0a2:	add    al,0x16
  41c0a4:	loop   0x41c058
  41c0a6:	sub    BYTE PTR [eax+ecx*1+0x2c],dh
  41c0aa:	outs   dx,BYTE PTR ds:[esi]
  41c0ab:	jns    0x41c11c
  41c0ad:	(bad)  
  41c0ae:	push   eax
  41c0af:	jno    0x41c06a
  41c0b1:	and    eax,0xb4d58572
  41c0b6:	clc    
  41c0b7:	jno    0x41c135
  41c0b9:	push   ecx
  41c0ba:	sbb    esi,DWORD PTR [eax-0x307bbc7]
  41c0c0:	jge    0x41c05b
  41c0c2:	fstp   QWORD PTR [ecx]
  41c0c4:	add    DWORD PTR ds:0x97625f05,esp
  41c0ca:	sahf   
  41c0cb:	mov    edx,0xe8c3d7c0
  41c0d0:	pop    edx
  41c0d1:	sbb    eax,0x67b05c0c
  41c0d6:	cwde   
  41c0d7:	(bad)  
  41c0d8:	sbb    ah,BYTE PTR [ebx]
  41c0da:	retf   0x828e
  41c0dd:	push   es
  41c0de:	aas    
  41c0df:	push   0xffffffa5
  41c0e1:	add    eax,0x45d9c98a
  41c0e6:	xor    eax,0x3ae7c9c0
  41c0eb:	mul    DWORD PTR [esi-0x6e]
  41c0ee:	jo     0x41c07c
  41c0f0:	test   eax,0x65567208
  41c0f5:	bound  ebp,QWORD PTR [ebp+0x21ee5a3b]
  41c0fb:	in     al,dx
  41c0fc:	sbb    al,BYTE PTR [ecx+0x7335f581]
  41c102:	std    
  41c103:	ja     0x41c0a8
  41c105:	loop   0x41c0ce
  41c107:	ds retf 0xdc81
  41c10b:	dec    ecx
  41c10c:	inc    edi
  41c10d:	mov    ecx,0x2bce0a35
  41c112:	scas   eax,DWORD PTR es:[edi]
  41c113:	adc    al,0xef
  41c115:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c116:	call   0xc3f586a4
  41c11b:	xchg   esp,eax
  41c11c:	jp     0x41c17f
  41c11e:	sub    dl,BYTE PTR [edi-0x7d]
  41c121:	pop    es
  41c122:	sbb    eax,0x1b6f13a9
  41c127:	mov    edi,0xf2d5cd1
  41c12c:	jecxz  0x41c0b7
  41c12e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c12f:	mov    ds:0x949890c9,al
  41c134:	pop    edi
  41c135:	lahf   
  41c136:	cmp    eax,0x62e5840f
  41c13b:	(bad)  
  41c13d:	adc    ecx,DWORD PTR [edx]
  41c13f:	add    DWORD PTR [esi-0xd],ebx
  41c142:	jg     0x41c17c
  41c144:	hlt    
  41c145:	ret    
  41c146:	out    dx,al
  41c147:	icebp  
  41c148:	test   DWORD PTR [eax-0x5b916737],0x1d2d81d0
  41c152:	fsubr  QWORD PTR [edx+0x62]
  41c155:	rcl    BYTE PTR [ebx-0x47],cl
  41c158:	cmp    dh,al
  41c15a:	pop    esp
  41c15b:	push   esi
  41c15c:	mov    edx,0x7ef4bcfa
  41c161:	repnz fbld TBYTE PTR ss:[edi+0xc]
  41c166:	shr    DWORD PTR [edi-0x4d],cl
  41c169:	outs   dx,BYTE PTR ds:[esi]
  41c16a:	addr16 arpl ax,bx
  41c16d:	icebp  
  41c16e:	ins    DWORD PTR es:[edi],dx
  41c16f:	pop    es
  41c170:	xor    BYTE PTR [edi+ebx*4-0x3dcae5d3],dl
  41c177:	or     ebp,0x60
  41c17a:	scas   al,BYTE PTR es:[edi]
  41c17b:	cmp    eax,0x4046580b
  41c180:	cmp    ebx,esi
  41c182:	jp     0x41c12a
  41c184:	imul   esp,esp,0x4fbd6718
  41c18a:	test   ch,ah
  41c18c:	dec    eax
  41c18d:	xchg   ebp,eax
  41c18e:	mov    ds:0x809de299,al
  41c193:	fnstcw WORD PTR [esi-0x3b6adf9e]
  41c199:	cld    
  41c19a:	mov    ecx,0x5c0a6ed2
  41c19f:	(bad)  
  41c1a0:	fnsave [edx+edi*2]
  41c1a3:	out    dx,al
  41c1a4:	jle    0x41c164
  41c1a6:	and    BYTE PTR [esi+0x3],al
  41c1a9:	gs imul ebx,esp,0xffffffd0
  41c1ad:	ins    BYTE PTR es:[edi],dx
  41c1ae:	jle    0x41c18f
  41c1b0:	fs jl  0x41c1c9
  41c1b3:	stos   BYTE PTR es:[edi],al
  41c1b4:	pusha  
  41c1b5:	sub    BYTE PTR [esi-0x22],0xaf
  41c1b9:	xlat   BYTE PTR ds:[ebx]
  41c1ba:	bound  edx,QWORD PTR [ebx]
  41c1bc:	les    ebp,FWORD PTR ds:[eax+0x469e0cf]
  41c1c3:	mov    esp,0x83dd67d2
  41c1c8:	or     ecx,DWORD PTR [esi+0x62]
  41c1cb:	mov    ds:0x13386c34,eax
  41c1d0:	scas   eax,DWORD PTR es:[edi]
  41c1d1:	and    eax,0xeb947fa1
  41c1d6:	sub    eax,0x9e89a643
  41c1db:	mov    BYTE PTR [ebx-0x4e],ah
  41c1de:	shl    BYTE PTR [ebx-0x629d2862],cl
  41c1e4:	jns    0x41c195
  41c1e6:	jo     0x41c183
  41c1e8:	and    eax,esi
  41c1ea:	mov    ds:0x7535eddb,eax
  41c1ef:	sti    
  41c1f0:	pop    edi
  41c1f1:	xchg   edi,eax
  41c1f2:	ret    0xa6e3
  41c1f5:	mov    bl,BYTE PTR [eax+eax*8-0x608f448]
  41c1fc:	push   cs
  41c1fd:	and    al,bl
  41c1ff:	mov    ebp,0xb02a4174
  41c204:	adc    edi,DWORD PTR [edi]
  41c206:	mov    ecx,0x6194413c
  41c20b:	cmp    DWORD PTR [edx-0x50],eax
  41c20e:	loop   0x41c245
  41c210:	cmp    WORD PTR [ecx],cx
  41c213:	adc    al,0x6e
  41c215:	mov    cl,0x9a
  41c217:	ja     0x41c200
  41c219:	aam    0x1a
  41c21b:	mov    dl,0x75
  41c21d:	inc    edx
  41c21e:	mov    ch,BYTE PTR [ecx+0x639064cb]
  41c224:	retf   
  41c225:	inc    ebx
  41c226:	lods   eax,DWORD PTR ds:[esi]
  41c227:	xchg   cl,bl
  41c229:	test   al,0xa9
  41c22b:	xchg   esi,eax
  41c22c:	or     BYTE PTR [eax-0x5cc8fc9d],dh
  41c232:	cmp    bh,BYTE PTR ds:[esi-0x7d]
  41c236:	in     eax,dx
  41c237:	sbb    DWORD PTR [eax],0xffffffe4
  41c23a:	popf   
  41c23b:	jg     0x41c294
  41c23d:	js     0x41c1e9
  41c23f:	sub    eax,0xbea7740f
  41c244:	xchg   ecx,eax
  41c245:	clc    
  41c246:	int3   
  41c247:	aas    
  41c248:	jg     0x41c24c
  41c24a:	sub    DWORD PTR ds:0xd6cb09c3,edi
  41c250:	call   0x66f5:0x3b9cb237
  41c257:	loopne 0x41c288
  41c259:	(bad)  
  41c25b:	(bad)  
  41c25c:	in     eax,dx
  41c25d:	mov    al,ds:0x7f48b800
  41c262:	cmp    BYTE PTR [ecx],ah
  41c264:	imul   eax,DWORD PTR [edx+0x32ed75f5],0xcf01ca30
  41c26e:	test   eax,ecx
  41c270:	test   BYTE PTR [ebp+0xa],cl
  41c273:	dec    edx
  41c274:	cmp    al,0x88
  41c276:	pop    ds
  41c277:	xchg   esi,eax
  41c278:	mov    dl,0xa7
  41c27a:	jp     0x41c24e
  41c27c:	das    
  41c27d:	fs stc 
  41c27f:	sbb    BYTE PTR [edx+edi*4],cl
  41c282:	mov    dl,0x7d
  41c284:	mov    esp,0x763078b0
  41c289:	fsubr  QWORD PTR [ecx+ebx*1-0x4e]
  41c28d:	jle    0x41c272
  41c28f:	jmp    0x41c22f
  41c291:	adc    al,0xda
  41c293:	fidivr DWORD PTR [edx]
  41c295:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c296:	ja     0x41c2d6
  41c298:	push   esi
  41c299:	(bad)  [ebx+edi*8+0x4d468a64]
  41c2a0:	ins    BYTE PTR es:[edi],dx
  41c2a1:	ins    DWORD PTR es:[edi],dx
  41c2a2:	xchg   BYTE PTR [ebp+ecx*8-0x1a],bl
  41c2a6:	bound  ebp,QWORD PTR [ebx+0x38]
  41c2a9:	adc    dl,BYTE PTR [ebx-0x2f976892]
  41c2af:	adc    eax,0x96b747d7
  41c2b4:	addr16 gs push edi
  41c2b7:	stos   DWORD PTR es:[edi],eax
  41c2b8:	fsubp  st(2),st
  41c2ba:	adc    DWORD PTR [esi+0x53b24945],ebx
  41c2c0:	sahf   
  41c2c1:	aas    
  41c2c2:	sub    BYTE PTR [edx+eax*1+0xd339ed6],dl
  41c2c9:	enter  0x97c0,0xe
  41c2cd:	rcl    BYTE PTR [ebx+0xb],1
  41c2d0:	rcl    DWORD PTR [edx],cl
  41c2d2:	mov    eax,ds:0xf378b47b
  41c2d7:	inc    edi
  41c2d8:	mov    bl,0xaa
  41c2da:	pop    esi
  41c2db:	pushf  
  41c2dc:	dec    ebx
  41c2dd:	cmp    eax,ecx
  41c2df:	lods   al,BYTE PTR ds:[esi]
  41c2e0:	xchg   ebp,eax
  41c2e1:	fisub  WORD PTR [edi+0x5d921caa]
  41c2e7:	and    dh,BYTE PTR [ebp-0x58]
  41c2ea:	cs mov ecx,0x666b16c7
  41c2f0:	mov    al,ds:0xe90a2341
  41c2f5:	leave  
  41c2f6:	test   DWORD PTR [ecx-0x5c],esi
  41c2f9:	adc    eax,0x69af9cc8
  41c2fe:	mov    ds:0x268492be,eax
  41c303:	mov    eax,ds:0x8b52a27b
  41c308:	retf   0x390b
  41c30b:	jmp    0xe5dd:0xf412565a
  41c312:	int3   
  41c313:	fidivr WORD PTR [edi+edi*1+0x7e08fecc]
  41c31a:	fnstenv ds:0x5e8c
  41c320:	mov    DWORD PTR [ebp-0x48],eax
  41c323:	sbb    DWORD PTR ds:0x428515,edi
  41c329:	mov    DWORD PTR [ebp-0x13c],0x7b18
  41c333:	mov    DWORD PTR [ebp-0x138],0x1169
  41c33d:	mov    DWORD PTR [ebp-0x12c],0x1379
  41c347:	sbb    DWORD PTR ds:0x428585,ecx
  41c34d:	mov    eax,DWORD PTR [ebp-0x12c]
  41c353:	adc    DWORD PTR ds:0x4284f9,0x44e5
  41c35d:	mov    ecx,0x5856
  41c362:	sub    ecx,eax
  41c364:	and    DWORD PTR ds:0x428455,ecx
  41c36a:	shr    ecx,0x2
  41c36d:	cmp    DWORD PTR ds:0x42859d,0x0
  41c374:	mov    DWORD PTR ds:0x428449,0x1c8e
  41c37e:	mov    DWORD PTR ds:0x428529,0x3a72
  41c388:	mov    DWORD PTR ds:0x42836d,0x2994
  41c392:	jmp    0x41c475
  41c397:	mov    eax,ds:0x42850d
  41c39c:	cmp    DWORD PTR ds:0x42859d,0x0
  41c3a3:	jge    0x41c3d2
  41c3a9:	push   DWORD PTR [ebp-0x20]
  41c3ac:	push   DWORD PTR [ebp-0x24]
  41c3af:	push   DWORD PTR [ebp-0x1c]
  41c3b2:	call   DWORD PTR ds:0x42e120
  41c3b8:	and    DWORD PTR ds:0x428439,edx
  41c3be:	sub    DWORD PTR ds:0x428399,0x53c2
  41c3c8:	and    DWORD PTR ds:0x42839d,0x4285a9
  41c3d2:	or     DWORD PTR ds:0x428579,edi
  41c3d8:	sbb    DWORD PTR ds:0x428395,0x428585
  41c3e2:	cmp    DWORD PTR ds:0x4284a1,0x0
  41c3e9:	mov    DWORD PTR ds:0x428471,0x3b49
  41c3f3:	mov    DWORD PTR ds:0x428481,0x7933
  41c3fd:	mov    DWORD PTR ds:0x428495,0x897
  41c407:	mov    DWORD PTR ds:0x428389,0x5a92
  41c411:	jmp    0x41c475
  41c416:	mov    eax,0x55e0
  41c41b:	movzx  eax,WORD PTR ds:0x4284fd
  41c422:	cmp    DWORD PTR ds:0x4284a1,0x0
  41c429:	ja     0x41c45f
  41c42f:	push   DWORD PTR [ebp-0x18]
  41c432:	push   DWORD PTR [ebp-0x18]
  41c435:	push   DWORD PTR [ebp-0x18]
  41c438:	push   DWORD PTR [ebp-0x20]
  41c43b:	push   0x8c53
  41c440:	push   DWORD PTR [ebp-0x14]
  41c443:	call   DWORD PTR ds:0x42e068
  41c449:	add    DWORD PTR ds:0x428435,ecx
  41c44f:	not    DWORD PTR ds:0x428509
  41c455:	adc    DWORD PTR ds:0x428479,0x2c56
  41c45f:	add    DWORD PTR ds:0x428525,0x42845d
  41c469:	add    DWORD PTR ds:0x42843d,edi
  41c46f:	sub    DWORD PTR ds:0x4284ad,edx
  41c475:	sub    ecx,0x5be6
  41c47b:	mov    eax,DWORD PTR [ebp-0x138]
  41c481:	xor    DWORD PTR ds:0x428465,0x2de
  41c48b:	imul   ecx,eax
  41c48e:	mov    eax,ds:0x428495
  41c493:	add    DWORD PTR ds:0x4285ad,eax
  41c499:	mov    eax,DWORD PTR [ebp-0x13c]
  41c49f:	and    ecx,eax
  41c4a1:	cmp    DWORD PTR ds:0x4285a9,0x0
  41c4a8:	mov    DWORD PTR ds:0x42848d,0x420b
  41c4b2:	mov    DWORD PTR ds:0x428509,0x3ab4
  41c4bc:	mov    DWORD PTR ds:0x4284a9,0x3618
  41c4c6:	jmp    0x41c90c
  41c4cb:	mov    DWORD PTR ds:0x428449,0xf37
  41c4d5:	not    eax
  41c4d7:	cmp    DWORD PTR ds:0x4285a9,0x0
  41c4de:	jg     0x41c505
  41c4e4:	push   0x2612
  41c4e9:	push   DWORD PTR [ebp-0x1c]
  41c4ec:	push   DWORD PTR [ebp-0x14]
  41c4ef:	call   DWORD PTR ds:0x42e06c
  41c4f5:	and    DWORD PTR ds:0x428489,0x428519
  41c4ff:	add    DWORD PTR ds:0x42837d,edi
  41c505:	xor    DWORD PTR ds:0x42844d,edx
  41c50b:	sbb    DWORD PTR ds:0x428495,0x428485
  41c515:	mov    DWORD PTR ds:0x4284a9,0x491d
  41c51f:	add    DWORD PTR ds:0x428381,ebx
  41c525:	jmp    0x41c90c
  41c52a:	sub    ch,BYTE PTR [esi-0x62]
  41c52d:	sbb    DWORD PTR [edx-0x7c9145e7],edi
  41c533:	pop    ebp
  41c534:	and    al,0x9e
  41c536:	sbb    dh,0x38
  41c539:	xchg   edx,eax
  41c53a:	pusha  
  41c53b:	inc    ecx
  41c53c:	sar    BYTE PTR [esi-0x41413bb6],0xf
  41c543:	jbe    0x41c4e7
  41c545:	fdiv   QWORD PTR [esp+edi*2]
  41c548:	aas    
  41c549:	bound  eax,QWORD PTR [ebp+0x72443f48]
  41c54f:	jge    0x41c510
  41c551:	sbb    ebx,ebx
  41c553:	fnstcw WORD PTR [eax+0x19fd0afc]
  41c559:	dec    eax
  41c55a:	fstp   TBYTE PTR [edx+0x1e2730f5]
  41c560:	or     edi,DWORD PTR [edi-0x2ee2d491]
  41c566:	push   edx
  41c567:	mov    esp,DWORD PTR [edi+0x2e68ce61]
  41c56d:	jl     0x41c5a1
  41c56f:	in     al,0xbf
  41c571:	mov    esp,DWORD PTR [edx-0xca4fd93]
  41c577:	mov    ebp,0xed8ca31c
  41c57c:	jae    0x41c593
  41c57e:	ja     0x41c54b
  41c580:	pop    es
  41c581:	ss or  edx,eax
  41c584:	jnp    0x41c5fe
  41c586:	jno    0x41c5f2
  41c588:	xor    dh,bl
  41c58a:	rcl    DWORD PTR [edx],1
  41c58c:	ror    DWORD PTR [eax],cl
  41c58e:	addr16 leave 
  41c590:	inc    edi
  41c591:	sub    esi,DWORD PTR [edx+esi*8+0x61fefde7]
  41c598:	aad    0x76
  41c59a:	sbb    bl,BYTE PTR [eax]
  41c59c:	cs ds dec eax
  41c59f:	(bad)  
  41c5a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c5a1:	jl     0x41c605
  41c5a3:	mov    es,ecx
  41c5a5:	fcomp  DWORD PTR [edi]
  41c5a7:	ds stos BYTE PTR es:[edi],al
  41c5a9:	push   edx
  41c5aa:	mov    dl,0x15
  41c5ac:	ins    BYTE PTR es:[edi],dx
  41c5ad:	jb     0x41c53e
  41c5af:	and    eax,0xdc51e2b
  41c5b4:	pop    es
  41c5b5:	dec    ecx
  41c5b6:	mov    BYTE PTR [ecx],cl
  41c5b8:	adc    al,0x49
  41c5ba:	sbb    al,0xc4
  41c5bc:	adc    DWORD PTR [eax+0x427e8905],ecx
  41c5c2:	pop    ds
  41c5c3:	(bad)  
  41c5c4:	jmp    0x4c50:0x6323b79f
  41c5cb:	rcr    BYTE PTR [ebx],cl
  41c5cd:	jle    0x41c59d
  41c5cf:	pop    esi
  41c5d0:	mov    ds,WORD PTR ds:0x75ab3a4b
  41c5d6:	push   ecx
  41c5d7:	push   eax
  41c5d8:	por    mm1,QWORD PTR [ecx-0x2c]
  41c5dc:	mov    esp,0xf50a7e8d
  41c5e1:	cmp    DWORD PTR [eax-0x2242704d],edi
  41c5e7:	(bad)  
  41c5e8:	out    0xee,eax
  41c5ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c5eb:	jecxz  0x41c660
  41c5ed:	je     0x41c5d9
  41c5ef:	xchg   ebx,eax
  41c5f0:	lods   al,BYTE PTR ds:[esi]
  41c5f1:	cmp    al,0x8f
  41c5f3:	and    al,0x81
  41c5f5:	xchg   dh,ch
  41c5f7:	cmc    
  41c5f8:	dec    ebx
  41c5f9:	xchg   ebx,eax
  41c5fa:	call   0xd26e:0x521c0a20
  41c601:	or     DWORD PTR [ecx],ecx
  41c603:	mov    esp,0x6ead7b47
  41c608:	fimul  WORD PTR [ebp+0x51]
  41c60b:	out    0x9c,al
  41c60d:	jecxz  0x41c613
  41c60f:	sub    eax,0xcabd7345
  41c614:	push   ss
  41c615:	std    
  41c616:	repz push ss
  41c618:	les    ebx,FWORD PTR [ebp-0x79]
  41c61b:	xlat   BYTE PTR ds:[ebx]
  41c61c:	aas    
  41c61d:	push   esp
  41c61e:	add    BYTE PTR [eax-0x46dfc7b6],0x12
  41c625:	push   esi
  41c626:	jno    0x41c65e
  41c628:	rcr    edx,0xc6
  41c62b:	call   0x695c:0xa5df7b37
  41c632:	jecxz  0x41c626
  41c634:	js     0x41c5d5
  41c636:	jl     0x41c693
  41c638:	into   
  41c639:	push   0x57662c83
  41c63e:	mov    cl,0x13
  41c640:	call   0xf8f20218
  41c645:	and    DWORD PTR [edi+0x58],eax
  41c648:	jl     0x41c6b9
  41c64a:	push   0x53
  41c64c:	pop    eax
  41c64d:	and    al,0x5a
  41c64f:	scas   eax,DWORD PTR es:[edi]
  41c650:	out    0xc8,eax
  41c652:	les    eax,FWORD PTR [eax+0x4f]
  41c655:	pop    ss
  41c656:	sahf   
  41c657:	aas    
  41c658:	xor    DWORD PTR [ecx-0x2ed5afd5],ebx
  41c65e:	call   FWORD PTR [esi]
  41c660:	mov    edx,0x5dd3f188
  41c665:	idiv   DWORD PTR [ebp+0x16]
  41c668:	sbb    ebp,DWORD PTR [esi-0xdf4eccf]
  41c66e:	inc    edx
  41c66f:	pop    ebx
  41c670:	(bad)  
  41c671:	cmp    DWORD PTR [edx-0x37348263],edi
  41c677:	(bad)  
  41c678:	pop    ecx
  41c679:	in     al,0x9e
  41c67b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c67c:	pusha  
  41c67d:	retf   0xb784
  41c680:	ins    DWORD PTR es:[edi],dx
  41c681:	xchg   esp,eax
  41c682:	mov    ds,WORD PTR [esi+0x54852a79]
  41c688:	fwait
  41c689:	xchg   ebx,eax
  41c68a:	rcr    cl,0x9b
  41c68d:	pop    ecx
  41c68e:	outs   dx,DWORD PTR ds:[esi]
  41c68f:	add    DWORD PTR [ebp+ebp*4+0x2c9198ba],edi
  41c696:	sahf   
  41c697:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c698:	fwait
  41c699:	inc    eax
  41c69a:	mov    ah,0xe2
  41c69c:	push   ebp
  41c69d:	imul   ecx,DWORD PTR [edi],0xffffffd4
  41c6a0:	rcl    DWORD PTR [edi+0x33],1
  41c6a3:	jp     0x41c70e
  41c6a5:	lods   eax,DWORD PTR ds:[esi]
  41c6a6:	daa    
  41c6a7:	sahf   
  41c6a8:	mov    cl,0xeb
  41c6aa:	mov    WORD PTR [esp+edx*4-0x6c],fs
  41c6ae:	push   ds
  41c6af:	inc    edi
  41c6b0:	dec    eax
  41c6b1:	sbb    al,ch
  41c6b3:	mov    al,ds:0xe66734ec
  41c6b8:	inc    eax
  41c6b9:	xor    al,0x87
  41c6bb:	ins    BYTE PTR es:[edi],dx
  41c6bc:	popa   
  41c6bd:	and    ecx,esp
  41c6bf:	in     al,dx
  41c6c0:	rcl    BYTE PTR [ecx-0x40],0xa9
  41c6c4:	push   ebp
  41c6c5:	(bad)  
  41c6c6:	sbb    edi,DWORD PTR [eax+0x6729ada2]
  41c6cc:	mov    ecx,0x6dd7757f
  41c6d1:	aas    
  41c6d2:	mov    ebx,0x7fa249fb
  41c6d7:	mov    edx,0xf8f29e32
  41c6dc:	cmp    dh,ch
  41c6de:	ret    0xdbf4
  41c6e1:	sub    DWORD PTR [edi+0x32],ebx
  41c6e4:	adc    al,0x99
  41c6e6:	push   ss
  41c6e7:	(bad)  
  41c6e8:	jle    0x41c6dd
  41c6ea:	mov    cl,0xd4
  41c6ec:	push   0x7353ede4
  41c6f1:	pop    edi
  41c6f2:	punpckhbw mm3,QWORD PTR [ecx+0x7d]
  41c6f6:	retf   
  41c6f7:	dec    esp
  41c6f8:	sub    ah,BYTE PTR [ebx]
  41c6fa:	xchg   esi,eax
  41c6fb:	jle    0x41c721
  41c6fd:	push   edi
  41c6fe:	jl     0x41c714
  41c700:	test   al,al
  41c702:	push   esi
  41c703:	call   0x2f9e:0x631aa7b
  41c70a:	fcom   st(6)
  41c70c:	cmp    cl,BYTE PTR [ecx]
  41c70e:	cwde   
  41c70f:	mov    eax,ds:0x3baba604
  41c714:	cmp    al,0x53
  41c716:	mov    eax,ds:0x6d55269d
  41c71b:	add    dh,0x16
  41c71e:	xchg   ebx,eax
  41c71f:	scas   al,BYTE PTR es:[edi]
  41c720:	inc    BYTE PTR [ecx]
  41c722:	xchg   DWORD PTR ds:0xa4b56068,esi
  41c728:	sti    
  41c729:	pop    esp
  41c72a:	xchg   edx,eax
  41c72b:	and    DWORD PTR [eax],edi
  41c72d:	mov    al,0xd
  41c72f:	pop    esi
  41c730:	mov    esp,0xfcc0a931
  41c735:	push   ds
  41c736:	sbb    ebp,DWORD PTR [ecx+0x7e]
  41c739:	pop    esi
  41c73a:	cld    
  41c73b:	not    BYTE PTR [edi]
  41c73d:	pop    esp
  41c73e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c73f:	(bad)  
  41c740:	rcl    DWORD PTR [ebp-0x3d],cl
  41c743:	mov    al,0xb8
  41c745:	std    
  41c746:	push   ds
  41c747:	mov    edx,0x482f1c6f
  41c74c:	inc    ebp
  41c74d:	mov    al,ds:0x45efedb2
  41c752:	popf   
  41c753:	mov    ds:0x20efef82,eax
  41c758:	sbb    DWORD PTR [eax],0x30429523
  41c75e:	dec    edx
  41c75f:	shl    ebx,cl
  41c761:	out    dx,eax
  41c762:	sbb    eax,0x8008fa83
  41c767:	mov    ecx,0x13d00c8a
  41c76c:	mov    bh,0x4c
  41c76e:	out    dx,eax
  41c76f:	and    al,0x2a
  41c771:	jno    0x41c7a2
  41c773:	dec    edi
  41c774:	dec    bp
  41c776:	xchg   ecx,eax
  41c777:	sbb    BYTE PTR [eax+eiz*4+0x54],bl
  41c77b:	pop    esi
  41c77c:	pop    ebp
  41c77d:	sub    eax,0x49f2ebdd
  41c782:	(bad)  
  41c783:	or     ebx,DWORD PTR [esp+eiz*8-0x6341f9cf]
  41c78a:	enter  0x4aae,0xc1
  41c78e:	xchg   ebp,eax
  41c78f:	je     0x41c7b2
  41c791:	int3   
  41c792:	sbb    eax,0x3d2f2926
  41c797:	and    cl,cl
  41c799:	push   cs
  41c79a:	jns    0x41c736
  41c79c:	cs lahf 
  41c79e:	ds out 0xe4,al
  41c7a1:	inc    esi
  41c7a2:	fist   WORD PTR [ebx]
  41c7a4:	sub    bh,BYTE PTR [edx]
  41c7a6:	scas   al,BYTE PTR es:[edi]
  41c7a7:	cmc    
  41c7a8:	jmp    0x41c74a
  41c7aa:	jge    0x41c823
  41c7ac:	mov    DWORD PTR [eax*2+0x6995291b],ebp
  41c7b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c7b4:	dec    edi
  41c7b5:	mov    ds:0xbfde1bbd,al
  41c7ba:	mov    edi,0x58b2343f
  41c7bf:	jle    0x41c77b
  41c7c1:	mov    WORD PTR [edi],es
  41c7c3:	inc    eax
  41c7c4:	addr16 add eax,0x3fd5f83a
  41c7ca:	jl     0x41c79b
  41c7cc:	push   edi
  41c7cd:	lods   eax,DWORD PTR ds:[esi]
  41c7ce:	add    DWORD PTR [ecx],ebx
  41c7d0:	or     al,0xd3
  41c7d2:	mov    ch,0xcc
  41c7d4:	in     al,0xef
  41c7d6:	or     DWORD PTR [ebp+0x46f52c0d],0xffffff9a
  41c7dd:	out    0xac,eax
  41c7df:	aaa    
  41c7e0:	int    0x99
  41c7e2:	xchg   DWORD PTR [edx],ebx
  41c7e4:	push   es
  41c7e5:	dec    esp
  41c7e6:	fsubr  QWORD PTR [esi+0x60]
  41c7e9:	gs mov esp,0xd4a582ed
  41c7ef:	loop   0x41c861
  41c7f1:	dec    ecx
  41c7f2:	xor    DWORD PTR [eax+0x1f72c745],edi
  41c7f8:	mov    BYTE PTR [ebx+eax*8-0x69],dl
  41c7fc:	adc    ecx,DWORD PTR [edi+eiz*1]
  41c7ff:	cmp    eax,0x860b1088
  41c804:	repnz stc 
  41c806:	mov    cl,0xaf
  41c808:	test   DWORD PTR [esi],ebp
  41c80a:	(bad)  
  41c80b:	xor    eax,0x64b5ef1b
  41c810:	jmp    edi
  41c812:	arpl   WORD PTR ds:0xe70f86f4,bp
  41c818:	mov    ecx,0x88c5b553
  41c81d:	push   ebx
  41c81e:	dec    eax
  41c81f:	cmp    ah,BYTE PTR [edx]
  41c821:	les    edi,FWORD PTR [esp+eiz*8-0x29e85404]
  41c828:	rcr    bh,1
  41c82a:	adc    ah,al
  41c82c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c82d:	(bad)  
  41c82e:	das    
  41c82f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c830:	bound  ecx,QWORD PTR [ebp-0x1f]
  41c833:	add    BYTE PTR [ebp+edx*8+0x3f8fd10e],ah
  41c83a:	shl    BYTE PTR [edi+0x24],0x3c
  41c83e:	or     DWORD PTR [ebx-0x8],ecx
  41c841:	adc    bh,ch
  41c843:	repnz xchg ecx,eax
  41c845:	(bad)  
  41c846:	jmp    0x1f4b:0xbaf13955
  41c84d:	sahf   
  41c84e:	(bad)  
  41c84f:	scas   eax,DWORD PTR es:[edi]
  41c850:	sub    ebp,edx
  41c852:	lea    ebp,[eax]
  41c854:	pop    ecx
  41c855:	and    al,0xb8
  41c857:	dec    ebp
  41c858:	arpl   WORD PTR [eax+0x4d],ax
  41c85b:	xchg   edx,eax
  41c85c:	rcr    BYTE PTR [edx-0x922891d],cl
  41c862:	mov    ah,0xed
  41c864:	stc    
  41c865:	int3   
  41c866:	shl    DWORD PTR [edi],0x93
  41c869:	jne    0x41c8d7
  41c86b:	sbb    ch,BYTE PTR [edi+eax*1]
  41c86e:	in     al,0x4
  41c870:	xor    cl,BYTE PTR [esi]
  41c872:	cmp    DWORD PTR [eax+edx*4-0x4058e569],eax
  41c879:	in     eax,0x97
  41c87b:	out    dx,al
  41c87c:	sbb    edx,DWORD PTR [edi-0x19]
  41c87f:	cmp    ebx,DWORD PTR [ebp-0x632fd7ae]
  41c885:	iret   
  41c886:	icebp  
  41c887:	cwde   
  41c888:	inc    ecx
  41c889:	adc    edi,esi
  41c88b:	sbb    eax,0x89166c8c
  41c890:	jne    0x41c85f
  41c892:	mov    al,0x85
  41c894:	mov    cl,0x46
  41c896:	dec    ecx
  41c897:	inc    esp
  41c898:	jecxz  0x41c8b6
  41c89a:	mov    dh,0x9b
  41c89d:	sbb    ebp,DWORD PTR ds:0x5924a3b1
  41c8a3:	add    al,0xc8
  41c8a5:	ror    BYTE PTR [ebx],cl
  41c8a7:	(bad)  
  41c8a9:	arpl   WORD PTR [ebx],bp
  41c8ab:	test   al,0x16
  41c8ad:	dec    ecx
  41c8ae:	aaa    
  41c8af:	push   ebx
  41c8b0:	jmp    DWORD PTR [ebp-0x6823c6ef]
  41c8b6:	cdq    
  41c8b7:	xor    DWORD PTR [esi+0xdedf2f],ecx
  41c8bd:	xchg   ebp,eax
  41c8be:	jne    0x41c902
  41c8c0:	test   eax,0x6ed623f2
  41c8c5:	fcmovnb st,st(2)
  41c8c7:	ins    BYTE PTR es:[edi],dx
  41c8c8:	lock jle 0x41c863
  41c8cb:	stc    
  41c8cc:	mov    ds:0xc65cd6a9,eax
  41c8d1:	ja     0x41c8b2
  41c8d3:	adc    eax,DWORD PTR [esi]
  41c8d5:	dec    BYTE PTR [eax+esi*2-0x61b3e66c]
  41c8dc:	mov    bh,0xc9
  41c8de:	scas   eax,DWORD PTR es:[edi]
  41c8df:	(bad)  
  41c8e0:	pop    ebp
  41c8e1:	pop    ebx
  41c8e2:	mov    al,0x54
  41c8e4:	push   edi
  41c8e5:	out    0x29,al
  41c8e7:	popa   
  41c8e8:	(bad)  
  41c8e9:	pop    ebp
  41c8ea:	add    BYTE PTR [ebp+ebp*8+0x2d5c95fc],ah
  41c8f1:	nop
  41c8f2:	jp     0x41c95e
  41c8f4:	add    ecx,edx
  41c8f6:	popf   
  41c8f7:	jge    0x41c90d
  41c8f9:	pop    es
  41c8fa:	aad    0xdc
  41c8fc:	inc    esi
  41c8fd:	and    ch,dl
  41c8ff:	dec    edi
  41c900:	test   ebp,eax
  41c902:	pop    eax
  41c903:	xchg   ebx,eax
  41c904:	dec    ecx
  41c905:	mov    ebp,0x6ac743b5
  41c90a:	scas   eax,DWORD PTR es:[edi]
  41c90b:	sbb    eax,0x3b18b8
  41c910:	add    BYTE PTR [ecx+0x4285ad0d],al
  41c916:	add    BYTE PTR [ebp-0x7c],al
  41c919:	inc    edx
  41c91a:	add    BYTE PTR [ebx],ch
  41c91c:	ror    DWORD PTR [ebx+0x4284ad0d],0x0
  41c923:	sbb    ecx,DWORD PTR ds:0x428509
  41c929:	mov    DWORD PTR ds:0x4284ad,ecx
  41c92f:	mov    DWORD PTR [ebp-0xfc],eax
  41c935:	movzx  eax,BYTE PTR ds:0x428389
  41c93c:	sub    eax,DWORD PTR ds:0x428369
  41c942:	mov    ds:0x428389,eax
  41c947:	mov    DWORD PTR [ebp-0x28],0x16d7
  41c94e:	mov    DWORD PTR [ebp-0x134],0x6b4
  41c958:	mov    eax,DWORD PTR [ebp-0x134]
  41c95e:	cmp    DWORD PTR ds:0x4285ad,0x0
  41c965:	mov    ecx,0x4723
  41c96a:	mov    DWORD PTR ds:0x428371,0x48a0
  41c974:	jmp    0x41c9c9
  41c979:	mov    ecx,0x5cee
  41c97e:	cmp    DWORD PTR ds:0x4285ad,0x0
  41c985:	jl     0x41c9b9
  41c98b:	push   0x8e3c
  41c990:	call   DWORD PTR ds:0x42e070
  41c996:	movzx  ecx,BYTE PTR ds:0x4284ad
  41c99d:	sbb    DWORD PTR ds:0x428499,ecx
  41c9a3:	xor    DWORD PTR ds:0x42859d,edx
  41c9a9:	mov    DWORD PTR ds:0x428511,0x54fa
  41c9b3:	adc    DWORD PTR ds:0x428485,ebx
  41c9b9:	xor    ecx,DWORD PTR ds:0x428595
  41c9bf:	sub    DWORD PTR ds:0x428461,0x73c7
  41c9c9:	or     eax,0x4f70
  41c9ce:	cmp    DWORD PTR ds:0x42845d,0x0
  41c9d5:	mov    ecx,0x6758
  41c9da:	mov    ecx,0x329e
  41c9df:	mov    DWORD PTR ds:0x4284f5,ecx
  41c9e5:	mov    DWORD PTR ds:0x428499,edi
  41c9eb:	jmp    0x41ca37
  41c9f0:	mov    DWORD PTR ds:0x428395,0x5f4d
  41c9fa:	cmp    DWORD PTR ds:0x42845d,0x0
  41ca01:	jae    0x41ca29
  41ca07:	push   0x67b2
  41ca0c:	push   0x4f13
  41ca11:	call   DWORD PTR ds:0x42e074
  41ca17:	add    ecx,0x3ae9
  41ca1d:	sub    ecx,DWORD PTR ds:0x428389
  41ca23:	xor    ecx,DWORD PTR ds:0x42845d
  41ca29:	adc    DWORD PTR ds:0x42835d,ecx
  41ca2f:	adc    ecx,DWORD PTR ds:0x42845d
  41ca35:	not    ecx
  41ca37:	mov    ecx,DWORD PTR [ebp-0x28]
  41ca3a:	or     DWORD PTR ds:0x4284ad,0x428491
  41ca44:	or     eax,ecx
  41ca46:	xor    ecx,ecx
  41ca48:	xor    ecx,DWORD PTR ds:0x428391
  41ca4e:	xor    DWORD PTR ds:0x428581,ecx
  41ca54:	sub    eax,0x5ff7
  41ca59:	mov    ecx,DWORD PTR ds:0x428389
  41ca5f:	sub    ecx,DWORD PTR ds:0x428519
  41ca65:	mov    DWORD PTR ds:0x428389,ecx
  41ca6b:	mov    DWORD PTR [ebp-0xc8],eax
  41ca71:	sub    DWORD PTR ds:0x428531,0xac
  41ca7b:	mov    DWORD PTR [ebp-0xe4],0x5f39
  41ca85:	cmp    DWORD PTR ds:0x428475,0x0
  41ca8c:	mov    DWORD PTR ds:0x428381,edi
  41ca92:	mov    DWORD PTR ds:0x42844d,edx
  41ca98:	jmp    0x41cafc
  41ca9d:	mov    DWORD PTR ds:0x428459,edx
  41caa3:	mov    DWORD PTR ds:0x428529,ebx
  41caa9:	cmp    DWORD PTR ds:0x428475,0x0
  41cab0:	jbe    0x41cad5
  41cab6:	push   DWORD PTR [ebp-0x1c]
  41cab9:	call   DWORD PTR ds:0x42e128
  41cabf:	sub    DWORD PTR ds:0x428531,edi
  41cac5:	xor    ecx,ecx
  41cac7:	add    ecx,DWORD PTR ds:0x4285c1
  41cacd:	mov    ecx,DWORD PTR [ecx]
  41cacf:	adc    DWORD PTR ds:0x42848d,ecx
  41cad5:	and    ecx,DWORD PTR ds:0x428581
  41cadb:	sub    ecx,ecx
  41cadd:	xor    ecx,ecx
  41cadf:	or     ecx,DWORD PTR ds:0x428589
  41cae5:	and    ecx,DWORD PTR ds:0x428491
  41caeb:	mov    DWORD PTR ds:0x428589,ecx
  41caf1:	adc    ecx,DWORD PTR ds:0x428439
  41caf7:	or     eax,0x53d3
  41cafc:	mov    DWORD PTR [ebp-0xc4],0x6236
  41cb06:	mov    DWORD PTR [ebp-0x7c],0x6ce7
  41cb0d:	jmp    0x41cef4
  41cb12:	pop    ebx
  41cb13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb14:	jmp    0x31aa:0x7b9c3cd8
  41cb1b:	add    al,0x9a
  41cb1d:	jecxz  0x41cafc
  41cb1f:	dec    eax
  41cb20:	jp     0x41cab4
  41cb22:	jmp    0x41cb6d
  41cb24:	sar    BYTE PTR [esi-0x41413bb6],0x98
  41cb2b:	iret   
  41cb2c:	mov    bh,0xda
  41cb2e:	or     al,0x87
  41cb30:	and    bl,al
  41cb32:	sbb    ah,cl
  41cb34:	pop    ebx
  41cb35:	aaa    
  41cb36:	xchg   ecx,eax
  41cb37:	mov    ds:0x701d7b9c,al
  41cb3c:	mov    BYTE PTR [edi],bh
  41cb3e:	and    al,0x1f
  41cb40:	add    DWORD PTR [eax+0x2b],0x38
  41cb44:	std    
  41cb45:	push   ecx
  41cb46:	inc    eax
  41cb47:	outs   dx,BYTE PTR ds:[esi]
  41cb48:	popf   
  41cb49:	push   ds
  41cb4a:	pop    ds
  41cb4b:	outs   dx,BYTE PTR ds:[esi]
  41cb4c:	ins    DWORD PTR es:[edi],dx
  41cb4d:	push   es
  41cb4e:	ins    DWORD PTR es:[edi],dx
  41cb4f:	test   BYTE PTR [edx+0x6633a947],bl
  41cb55:	cmp    al,0xc0
  41cb57:	jl     0x41cb49
  41cb59:	ja     0x41cb09
  41cb5b:	cwde   
  41cb5c:	dec    ecx
  41cb5d:	bound  edi,QWORD PTR [ebx+0x24]
  41cb60:	hlt    
  41cb61:	or     BYTE PTR [eax-0x18],bl
  41cb64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb65:	and    ebp,DWORD PTR [ebx+ebp*8-0x44ba36bc]
  41cb6c:	stos   BYTE PTR es:[edi],al
  41cb6d:	or     BYTE PTR [esi-0x12],al
  41cb70:	not    esp
  41cb72:	retf   
  41cb73:	xor    eax,edi
  41cb75:	in     al,dx
  41cb76:	sahf   
  41cb77:	cli    
  41cb78:	fistp  DWORD PTR [edx]
  41cb7a:	ins    DWORD PTR es:[edi],dx
  41cb7b:	sahf   
  41cb7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb7d:	lods   al,BYTE PTR ds:[esi]
  41cb7e:	cmp    cl,BYTE PTR [esi]
  41cb80:	ret    0x5b09
  41cb83:	test   WORD PTR ds:0x3a0028bd,di
  41cb8a:	dec    edx
  41cb8b:	mov    es,edi
  41cb8d:	cmp    cl,dl
  41cb8f:	adc    DWORD PTR [ebx-0x57],edi
  41cb92:	sbb    al,BYTE PTR [ecx-0x30fed84d]
  41cb98:	pop    es
  41cb99:	push   esi
  41cb9a:	cmpxchg edi,esp
  41cb9d:	mov    bl,0x94
  41cb9f:	pusha  
  41cba0:	arpl   WORD PTR [eax+0x39],dx
  41cba3:	ror    DWORD PTR [eax+0x55],cl
  41cba6:	xchg   DWORD PTR [edi],edi
  41cba8:	adc    edx,DWORD PTR [ebx]
  41cbaa:	cmp    al,0x5f
  41cbac:	sbb    DWORD PTR [eax-0x1d],esp
  41cbaf:	xchg   ebx,eax
  41cbb0:	jne    0x41cbc2
  41cbb2:	cmc    
  41cbb3:	add    al,0x6b
  41cbb5:	into   
  41cbb6:	test   eax,0x84833139
  41cbbb:	mov    ch,0xe
  41cbbd:	inc    ebp
  41cbbe:	jb     0x41cbe5
  41cbc0:	scas   eax,DWORD PTR es:[edi]
  41cbc1:	dec    esi
  41cbc2:	or     bh,ch
  41cbc4:	cmp    al,0xf1
  41cbc6:	sub    DWORD PTR [edx+0x2e],ebp
  41cbc9:	dec    edx
  41cbca:	stos   DWORD PTR es:[edi],eax
  41cbcb:	cli    
  41cbcc:	outs   dx,BYTE PTR ds:[esi]
  41cbcd:	dec    esp
  41cbce:	pop    ecx
  41cbcf:	or     al,0x1b
  41cbd1:	inc    ebx
  41cbd2:	pop    edx
  41cbd3:	push   edx
  41cbd4:	std    
  41cbd5:	mov    ds:0xcf0f6529,eax
  41cbda:	mov    eax,DWORD PTR [edi+0x1c12689d]
  41cbe0:	ss stc 
  41cbe2:	lock adc BYTE PTR [edx],0x2e
  41cbe6:	adc    esp,DWORD PTR [ecx-0x10]
  41cbe9:	rcr    DWORD PTR ds:0xa51b9a37,cl
  41cbef:	fsubp  st(3),st
  41cbf1:	pop    es
  41cbf2:	and    DWORD PTR [esi+ebx*4-0x4ad39532],eax
  41cbf9:	out    0xa6,al
  41cbfb:	sbb    al,0x9e
  41cbfd:	add    BYTE PTR [ecx],dh
  41cbff:	fs push ebx
  41cc01:	xchg   ecx,eax
  41cc02:	and    BYTE PTR [esi+0x79b13f26],dh
  41cc08:	push   ebp
  41cc09:	xchg   ebx,eax
  41cc0a:	dec    eax
  41cc0b:	pop    ebp
  41cc0c:	mov    dl,0x38
  41cc0e:	push   esp
  41cc0f:	xor    al,0x73
  41cc11:	mov    ds:0x8a816cec,al
  41cc16:	test   BYTE PTR [bx+si+0x5cb7],bl
  41cc1b:	push   ebp
  41cc1c:	ror    al,1
  41cc1e:	sti    
  41cc1f:	sub    eax,0xd9514ba2
  41cc24:	ror    esp,cl
  41cc26:	pop    ds
  41cc27:	test   BYTE PTR [ebx],al
  41cc29:	in     eax,0x7c
  41cc2b:	jmp    0x12ef:0xf843551c
  41cc32:	pop    ss
  41cc33:	ret    0x975b
  41cc36:	mov    ah,0x3e
  41cc38:	es mov esp,0x594701b9
  41cc3e:	pop    ebx
  41cc3f:	or     ebp,DWORD PTR [eax+0x7a]
  41cc42:	outs   dx,BYTE PTR ds:[esi]
  41cc43:	xchg   ebp,eax
  41cc44:	imul   edi,DWORD PTR [ebp-0x2b],0xc3927d86
  41cc4b:	das    
  41cc4c:	xor    DWORD PTR [edx],ebp
  41cc4e:	and    ebp,DWORD PTR [ebp+0x71234885]
  41cc54:	mov    al,ds:0x46f6dc52
  41cc59:	xor    BYTE PTR [ebx+0x80c5fda],ch
  41cc5f:	movq   mm3,QWORD PTR [ecx+0x8046061]
  41cc66:	popa   
  41cc67:	xchg   ebp,eax
  41cc68:	jns    0x41cc63
  41cc6a:	iret   
  41cc6b:	das    
  41cc6c:	fistp  WORD PTR [esi-0x71764eab]
  41cc72:	adc    al,0x89
  41cc74:	sub    ebp,DWORD PTR [ebx+ebx*4]
  41cc77:	xchg   ecx,eax
  41cc78:	inc    BYTE PTR [edi+ebp*1+0x7939ad62]
  41cc7f:	cs popa 
  41cc81:	popf   
  41cc82:	das    
  41cc83:	(bad)
  41cc86:	test   DWORD PTR [esi+0x25932dfb],ecx
  41cc8c:	push   ds
  41cc8d:	sbb    cl,BYTE PTR [eax]
  41cc8f:	fs sahf 
  41cc91:	sbb    bh,BYTE PTR [edi]
  41cc93:	sub    bl,BYTE PTR ds:0x5acd300
  41cc99:	sub    ch,BYTE PTR [edx]
  41cc9b:	push   esi
  41cc9c:	lock dec ebp
  41cc9e:	xor    bl,BYTE PTR ds:0x46c11bb6
  41cca4:	cmp    DWORD PTR [ecx+0x12],esi
  41cca7:	mov    bl,0x16
  41cca9:	mov    edi,fs
  41ccab:	dec    edx
  41ccac:	add    BYTE PTR [edx-0x3b],dh
  41ccaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ccb0:	leave  
  41ccb1:	test   eax,0x9ede1a14
  41ccb6:	test   DWORD PTR [ebx-0x41],eax
  41ccb9:	xlat   BYTE PTR ds:[ebx]
  41ccba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ccbb:	out    0xc3,eax
  41ccbd:	in     al,dx
  41ccbe:	sbb    ah,BYTE PTR [ebx+ecx*4-0x53266b03]
  41ccc5:	sahf   
  41ccc6:	sub    ah,BYTE PTR [ebp+esi*2-0x3]
  41ccca:	push   ebx
  41cccb:	push   edi
  41cccc:	(bad)  
  41cccd:	xlat   BYTE PTR ds:[ebx]
  41ccce:	cmp    edi,DWORD PTR [edx]
  41ccd0:	pop    esp
  41ccd1:	imul   DWORD PTR ds:0x8ff36e18
  41ccd7:	xchg   esi,eax
  41ccd8:	push   es
  41ccd9:	iret   
  41ccda:	call   0x9e7:0x7c041597
  41cce1:	loope  0x41cd35
  41cce3:	sti    
  41cce4:	js     0x41cd0d
  41cce6:	int3   
  41cce7:	mov    dh,0xb
  41cce9:	pop    ecx
  41ccea:	push   esp
  41cceb:	mov    esi,0x72126025
  41ccf0:	ds jmp 0x41ccf1
  41ccf3:	rol    dl,cl
  41ccf5:	bound  eax,QWORD PTR [edi-0x3b]
  41ccf8:	scas   al,BYTE PTR es:[edi]
  41ccf9:	ins    DWORD PTR es:[edi],dx
  41ccfa:	pop    ss
  41ccfb:	fcomp  st(4)
  41ccfd:	pop    es
  41ccfe:	fwait
  41ccff:	shl    ah,1
  41cd01:	aas    
  41cd02:	leave  
  41cd03:	cld    
  41cd04:	mov    esp,0x240c7ac7
  41cd09:	xchg   ebp,eax
  41cd0a:	mov    ds:0x84175e3b,al
  41cd0f:	sbb    DWORD PTR [esi+0x24],ebp
  41cd12:	and    ebp,ebp
  41cd14:	sub    al,0x7f
  41cd16:	idiv   BYTE PTR [esi-0x28dd0d8b]
  41cd1c:	retf   0x41a8
  41cd1f:	jle    0x41ccb0
  41cd21:	mov    bh,0x5e
  41cd23:	call   0xcb7a:0x73717556
  41cd2a:	cmp    bl,BYTE PTR cs:[eax+0x77]
  41cd2e:	pop    edx
  41cd2f:	jno    0x41cd60
  41cd31:	fsub   QWORD PTR [edi]
  41cd33:	push   eax
  41cd34:	dec    edi
  41cd35:	add    DWORD PTR [eax-0x8],eax
  41cd38:	sub    ecx,DWORD PTR [ebx-0x49a08501]
  41cd3e:	jmp    0xac0a:0xd472e4
  41cd45:	call   0xe6f8:0xf8e84ec5
  41cd4c:	push   es
  41cd4d:	add    DWORD PTR [ebp-0x623a27d9],esi
  41cd53:	mov    edx,0x4a5875ef
  41cd58:	stos   BYTE PTR es:[edi],al
  41cd59:	adc    BYTE PTR [ebp+0x4fd5e5f3],0x74
  41cd60:	push   ecx
  41cd61:	out    dx,eax
  41cd62:	mov    ch,0xe1
  41cd64:	popf   
  41cd65:	retf   0xb1a7
  41cd68:	aas    
  41cd69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd6a:	es add al,dh
  41cd6d:	das    
  41cd6e:	xor    eax,0xe636e6e2
  41cd73:	int    0xed
  41cd75:	lahf   
  41cd76:	mov    es,WORD PTR [esp+ebp*8-0x71]
  41cd7a:	xchg   edx,eax
  41cd7b:	or     eax,0x49b5ba76
  41cd80:	cmp    DWORD PTR [ebx-0x6466f9b2],ebp
  41cd86:	push   eax
  41cd87:	ror    bl,0xe2
  41cd8a:	xchg   esi,eax
  41cd8b:	mov    edi,0xb97792f
  41cd90:	js     0x41cda8
  41cd92:	(bad)  
  41cd93:	push   edx
  41cd94:	out    0xcd,eax
  41cd96:	xor    esi,esp
  41cd98:	in     al,0x77
  41cd9a:	(bad)  
  41cd9b:	sub    edx,ebp
  41cd9d:	dec    ecx
  41cd9e:	aad    0x42
  41cda0:	pop    ebp
  41cda1:	adc    al,0x94
  41cda3:	clc    
  41cda4:	fs das 
  41cda6:	push   0xe427ab1a
  41cdab:	jmp    0x41cdec
  41cdad:	sub    BYTE PTR [edx-0x2ddef558],bh
  41cdb3:	jns    0x41cd85
  41cdb5:	out    0x55,al
  41cdb7:	xor    BYTE PTR [ecx-0x3d],0xfa
  41cdbb:	repnz fwait
  41cdbd:	js     0x41cd4e
  41cdbf:	stos   BYTE PTR es:[edi],al
  41cdc0:	adc    al,0x97
  41cdc2:	and    DWORD PTR [ebx],edx
  41cdc4:	das    
  41cdc5:	jbe    0x41ce08
  41cdc7:	loop   0x41ce08
  41cdc9:	and    eax,DWORD PTR ds:0x8ee01ba9
  41cdcf:	and    al,0x9e
  41cdd1:	rcr    DWORD PTR [ecx+0x1ebda1d7],cl
  41cdd7:	clc    
  41cdd8:	call   0x3ba847ab
  41cddd:	fidivr DWORD PTR [eax+0x660e997]
  41cde3:	lods   eax,DWORD PTR ds:[esi]
  41cde4:	add    ecx,DWORD PTR [esi-0x4e]
  41cde7:	fsub   DWORD PTR [esi-0x69]
  41cdea:	mov    ds:0x17993048,eax
  41cdef:	jp     0x41ce2e
  41cdf1:	out    0xb3,al
  41cdf3:	imul   edx,DWORD PTR [edx-0x12],0x3e51c95e
  41cdfa:	test   BYTE PTR [ebx+ebx*4-0x4c80be3a],bl
  41ce01:	sub    BYTE PTR [esi+0x4009668f],dl
  41ce07:	inc    esi
  41ce08:	pop    ds
  41ce09:	sub    al,0xd9
  41ce0b:	int    0x81
  41ce0d:	dec    ebx
  41ce0e:	xor    al,0x11
  41ce10:	push   ebx
  41ce11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce12:	lea    ebx,[ebx-0x2]
  41ce15:	mov    cl,0xb2
  41ce17:	enter  0x8be3,0xfa
  41ce1b:	sti    
  41ce1c:	sub    al,0x30
  41ce1e:	and    DWORD PTR [esi-0x61d9fcb],esi
  41ce24:	adc    dh,BYTE PTR [eax+0x57b6a33a]
  41ce2a:	or     BYTE PTR [edi],al
  41ce2c:	jnp    0x41ce4c
  41ce2e:	jo     0x41ce85
  41ce30:	cmp    al,0xca
  41ce32:	in     eax,dx
  41ce33:	shl    esp,1
  41ce35:	pop    edi
  41ce36:	div    dh
  41ce38:	cld    
  41ce39:	clc    
  41ce3a:	jne    0x41ce0c
  41ce3c:	inc    esi
  41ce3d:	addr16 mov dh,0x8c
  41ce40:	test   BYTE PTR [edx-0x6edcf819],bl
  41ce46:	or     ch,BYTE PTR [ebx-0x1f]
  41ce49:	cvtps2pd xmm4,xmm3
  41ce4c:	dec    edx
  41ce4d:	adc    edi,esi
  41ce4f:	dec    esi
  41ce50:	dec    eax
  41ce51:	sub    bh,BYTE PTR [eax]
  41ce53:	outs   dx,DWORD PTR ds:[esi]
  41ce54:	xor    ah,BYTE PTR [edx-0x7f90ec0e]
  41ce5a:	imul   ebx,DWORD PTR [esi-0x59],0xb
  41ce5e:	dec    edi
  41ce5f:	popa   
  41ce60:	repz (bad) fs:[ebx]
  41ce64:	fidiv  WORD PTR [eax+0x4]
  41ce67:	retf   0xeacd
  41ce6a:	loope  0x41ce8f
  41ce6c:	mov    dl,0x67
  41ce6e:	enter  0xeda9,0x82
  41ce72:	push   edi
  41ce73:	ds int 0x66
  41ce76:	xchg   dh,ch
  41ce78:	fwait
  41ce79:	and    eax,0xa9b8ebd2
  41ce7e:	fstp   QWORD PTR [ebx+0x5198ab3e]
  41ce84:	pop    esp
  41ce85:	cdq    
  41ce86:	xor    DWORD PTR [esi-0x7c26ab2a],esi
  41ce8c:	rol    BYTE PTR [ebp+0x7c],0xf1
  41ce90:	jns    0x41ceff
  41ce92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce93:	sbb    eax,0x810c575e
  41ce98:	inc    edx
  41ce99:	mov    al,ds:0xc5b7582f
  41ce9e:	and    eax,0x1843c4c2
  41cea3:	or     DWORD PTR [edx-0x32abdcce],eax
  41cea9:	fadd   QWORD PTR [ebx]
  41ceab:	jmp    0x97e5:0x368d022b
  41ceb2:	dec    esi
  41ceb3:	sub    ecx,edi
  41ceb5:	popf   
  41ceb6:	cs dec esi
  41ceb8:	add    dh,dl
  41ceba:	push   ebx
  41cebb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cebc:	scas   eax,DWORD PTR es:[edi]
  41cebd:	add    ecx,esi
  41cebf:	mov    ds:0x1cb27f37,eax
  41cec4:	imul   edx,DWORD PTR [eax-0x61e677b2],0x32
  41cecb:	mov    edx,0x99c44b9f
  41ced0:	arpl   WORD PTR [edi+0x41474498],dx
  41ced6:	sub    eax,0xe12e8c1d
  41cedb:	fcomp  QWORD PTR [ebx]
  41cedd:	repz adc cl,BYTE PTR [edi]
  41cee0:	xlat   BYTE PTR ds:[ebx]
  41cee1:	out    0x75,al
  41cee3:	and    al,0x3e
  41cee5:	xor    al,0x3a
  41cee7:	aaa    
  41cee8:	adc    esi,DWORD PTR es:[ebp-0xc]
  41ceec:	jbe    0x41cf08
  41ceee:	jl     0x41ceda
  41cef0:	les    ebx,FWORD PTR [ebp-0x7a38da2e]
  41cef6:	fdivr  st,st(6)
  41cef8:	(bad)  
  41cef9:	push   DWORD PTR [edi]
  41cefb:	jne    0x41cefd
  41cefd:	add    BYTE PTR [ecx],dh
  41ceff:	adc    eax,0x4284a9
  41cf04:	mov    DWORD PTR [ebp-0x114],0x6985
  41cf0e:	and    DWORD PTR ds:0x428519,ebx
  41cf14:	mov    DWORD PTR [ebp-0x14],0x5627
  41cf1b:	or     DWORD PTR ds:0x428481,0x428585
  41cf25:	mov    DWORD PTR [ebp-0x64],0x72e7
  41cf2c:	mov    eax,DWORD PTR [ebp-0x14]
  41cf2f:	and    DWORD PTR ds:0x428581,ebx
  41cf35:	add    eax,DWORD PTR [ebp-0x64]
  41cf38:	mov    ecx,DWORD PTR [ebp-0x114]
  41cf3e:	sbb    DWORD PTR ds:0x428505,0x42836d
  41cf48:	sub    eax,ecx
  41cf4a:	xor    DWORD PTR ds:0x4283a1,edi
  41cf50:	mov    ecx,DWORD PTR [ebp-0x128]
  41cf56:	imul   eax,ecx
  41cf59:	cmp    DWORD PTR ds:0x428595,0x0
  41cf60:	mov    DWORD PTR ds:0x428531,0x44b
  41cf6a:	mov    ecx,DWORD PTR ds:0x4284b1
  41cf70:	mov    ecx,DWORD PTR ds:0x4284ad
  41cf76:	mov    ecx,0x4ae9
  41cf7b:	jmp    0x41cfe3
  41cf80:	mov    ecx,DWORD PTR ds:0x428529
  41cf86:	mov    DWORD PTR ds:0x42837d,0x5810
  41cf90:	cmp    DWORD PTR ds:0x428595,0x0
  41cf97:	ja     0x41cfcd
  41cf9d:	push   0x42858d
  41cfa2:	push   0x16d1
  41cfa7:	push   DWORD PTR [ebp-0x20]
  41cfaa:	push   0x7e78
  41cfaf:	call   DWORD PTR ds:0x42e078
  41cfb5:	mov    ecx,DWORD PTR ds:0x42836d
  41cfbb:	sbb    DWORD PTR ds:0x4285ad,ecx
  41cfc1:	sub    DWORD PTR ds:0x42846d,ecx
  41cfc7:	not    DWORD PTR ds:0x428529
  41cfcd:	xor    DWORD PTR ds:0x428525,edi
  41cfd3:	mov    DWORD PTR ds:0x428465,0x4e0f
  41cfdd:	xor    ecx,DWORD PTR ds:0x428581
  41cfe3:	imul   eax,eax,0xe4e
  41cfe9:	mov    ecx,DWORD PTR [ebp-0x7c]
  41cfec:	or     eax,ecx
  41cfee:	mov    ecx,DWORD PTR [ebp+0x8]
  41cff1:	adc    DWORD PTR ds:0x4285a1,0xad
  41cffb:	lea    eax,[ecx+eax*1+0x46210209]
  41d002:	add    DWORD PTR ds:0x428479,0x55ef
  41d00c:	push   eax
  41d00d:	call   0x410df4
  41d012:	mov    ecx,eax
  41d014:	cmp    DWORD PTR ds:0x42836d,0x0
  41d01b:	mov    esi,DWORD PTR ds:0x4285a5
  41d021:	mov    DWORD PTR ds:0x428471,0x25c4
  41d02b:	jmp    0x41d0fd
  41d030:	mov    DWORD PTR ds:0x42849d,0x7eed
  41d03a:	mov    DWORD PTR ds:0x42858d,edx
  41d040:	cmp    DWORD PTR ds:0x42836d,0x0
  41d047:	jbe    0x41d070
  41d04d:	push   0x4283a1
  41d052:	call   DWORD PTR ds:0x42e2a0
  41d058:	and    esi,esi
  41d05a:	and    esi,DWORD PTR ds:0x428509
  41d060:	mov    esi,DWORD PTR ds:0x428541
  41d066:	mov    esi,DWORD PTR [esi]
  41d068:	xor    DWORD PTR ds:0x428519,esi
  41d06e:	xor    esi,esi
  41d070:	add    DWORD PTR ds:0x428385,ebx
  41d076:	movzx  esi,BYTE PTR ds:0x428591
  41d07d:	sbb    DWORD PTR ds:0x428495,esi
  41d083:	sbb    DWORD PTR ds:0x428599,0x428449
  41d08d:	or     esi,esi
  41d08f:	cmp    DWORD PTR ds:0x42839d,0x0
  41d096:	mov    DWORD PTR ds:0x428521,0x3cb6
  41d0a0:	mov    esi,0x65ca
  41d0a5:	mov    DWORD PTR ds:0x428531,edi
  41d0ab:	jmp    0x41d0fd
  41d0b0:	mov    DWORD PTR ds:0x42858d,edi
  41d0b6:	mov    eax,0x6c7b
  41d0bb:	cmp    DWORD PTR ds:0x42839d,0x0
  41d0c2:	jg     0x41d0eb
  41d0c8:	push   0x1a0a
  41d0cd:	push   DWORD PTR [ebp-0x24]
  41d0d0:	push   DWORD PTR [ebp-0xc]
  41d0d3:	call   DWORD PTR ds:0x42e12c
  41d0d9:	and    DWORD PTR ds:0x42857d,edx
  41d0df:	xor    DWORD PTR ds:0x428389,ebx
  41d0e5:	sub    esi,0x4c5f
  41d0eb:	sbb    DWORD PTR ds:0x428361,0x56b4
  41d0f5:	sbb    esi,esi
  41d0f7:	add    DWORD PTR ds:0x428479,ebx
  41d0fd:	mov    eax,DWORD PTR [ebp-0xc4]
  41d103:	imul   eax,eax,0x21b3
  41d109:	cmp    DWORD PTR ds:0x428385,0x0
  41d110:	mov    esi,0x3999
  41d115:	movzx  esi,BYTE PTR ds:0x428591
  41d11c:	mov    esi,0x5e4b
  41d121:	mov    esi,DWORD PTR ds:0x428369
  41d127:	jmp    0x41d1a8
  41d12c:	mov    DWORD PTR ds:0x42851d,0x7a2a
  41d136:	not    esi
  41d138:	cmp    DWORD PTR ds:0x428385,0x0
  41d13f:	jb     0x41d183
  41d145:	push   0x5450
  41d14a:	push   0x3c7c
  41d14f:	call   DWORD PTR ds:0x42e07c
  41d155:	mov    esi,DWORD PTR ds:0x428579
  41d15b:	add    esi,DWORD PTR ds:0x42849d
  41d161:	mov    DWORD PTR ds:0x428579,esi
  41d167:	mov    esi,DWORD PTR ds:0x428441
  41d16d:	and    esi,DWORD PTR ds:0x428469
  41d173:	mov    DWORD PTR ds:0x428441,esi
  41d179:	sbb    DWORD PTR ds:0x4284b1,0x6b94
  41d183:	mov    esi,DWORD PTR ds:0x42847d
  41d189:	add    DWORD PTR ds:0x428505,esi
  41d18f:	movzx  esi,WORD PTR ds:0x428479
  41d196:	adc    esi,DWORD PTR ds:0x428395
  41d19c:	mov    DWORD PTR ds:0x428479,esi
  41d1a2:	xor    DWORD PTR ds:0x428369,edi
  41d1a8:	add    eax,DWORD PTR [ebp-0xe4]
  41d1ae:	and    eax,0xd5c
  41d1b3:	sub    eax,0x2e81
  41d1b8:	xor    edx,edx
  41d1ba:	sbb    DWORD PTR ds:0x42838d,ebx
  41d1c0:	mov    esi,0x2f1dc
  41d1c5:	or     DWORD PTR ds:0x428375,0x1bf3
  41d1cf:	div    esi
  41d1d1:	cmp    DWORD PTR ds:0x42848d,0x0
  41d1d8:	mov    DWORD PTR ds:0x428581,0x7c0f
  41d1e2:	mov    DWORD PTR ds:0x4284a9,0x21cd
  41d1ec:	mov    esi,DWORD PTR ds:0x428361
  41d1f2:	jmp    0x41d24d
  41d1f7:	mov    DWORD PTR ds:0x4285ad,0x7012
  41d201:	mov    esi,0x5ebc
  41d206:	cmp    DWORD PTR ds:0x42848d,0x0
  41d20d:	jne    0x41d239
  41d213:	push   0x389e
  41d218:	push   0x768e
  41d21d:	push   0x6d0b
  41d222:	push   0x8403
  41d227:	call   DWORD PTR ds:0x42e130
  41d22d:	sbb    edx,DWORD PTR ds:0x4284a5
  41d233:	add    edx,0x16c4
  41d239:	movzx  esi,WORD PTR ds:0x428435
  41d240:	adc    DWORD PTR ds:0x428505,esi
  41d246:	sub    DWORD PTR ds:0x428519,edx
  41d24c:	inc    esi
  41d24d:	xor    eax,0x56ef
  41d252:	add    DWORD PTR ds:0x428591,0x7098
  41d25c:	add    ecx,eax
  41d25e:	cmp    DWORD PTR ds:0x428469,0x0
  41d265:	mov    DWORD PTR ds:0x42838d,0x1f02
  41d26f:	mov    esi,0x4128
  41d274:	mov    esi,DWORD PTR ds:0x4284fd
  41d27a:	jmp    0x41d2f7
  41d27f:	mov    DWORD PTR ds:0x42857d,ebx
  41d285:	movzx  eax,WORD PTR ds:0x42844d
  41d28c:	cmp    DWORD PTR ds:0x428469,0x0
  41d293:	jb     0x41d2d0
  41d299:	push   0x4840
  41d29e:	push   DWORD PTR [ebp-0x14]
  41d2a1:	push   0x75a6
  41d2a6:	push   DWORD PTR [ebp-0xc]
  41d2a9:	push   0x428273
  41d2ae:	push   DWORD PTR [ebp-0x28]
  41d2b1:	call   DWORD PTR ds:0x42e134
  41d2b7:	movzx  esi,BYTE PTR ds:0x428579
  41d2be:	xor    DWORD PTR ds:0x428515,esi
  41d2c4:	xor    esi,edx
  41d2c6:	or     DWORD PTR ds:0x4284a1,0x2eb3
  41d2d0:	xor    DWORD PTR ds:0x42858d,ebx
  41d2d6:	adc    edx,DWORD PTR ds:0x4285a1
  41d2dc:	add    DWORD PTR ds:0x42837d,0x1b5f
  41d2e6:	mov    esi,DWORD PTR ds:0x428549
  41d2ec:	mov    edx,DWORD PTR ds:0x4285e1
  41d2f2:	sub    edx,esi
  41d2f4:	sub    esi,DWORD PTR [esi+edx*1]
  41d2f7:	mov    DWORD PTR [ebp-0x90],ecx
  41d2fd:	mov    DWORD PTR [ebp-0xe0],0x7a31
  41d307:	mov    DWORD PTR ds:0x42846d,0x52c8
  41d311:	mov    DWORD PTR [ebp-0x44],0x2514
  41d318:	mov    DWORD PTR [ebp-0xdc],0x699c
  41d322:	cmp    DWORD PTR ds:0x428509,0x0
  41d329:	mov    DWORD PTR ds:0x428531,0x628e
  41d333:	movzx  ecx,BYTE PTR ds:0x428381
  41d33a:	mov    ecx,DWORD PTR ds:0x428461
  41d340:	jmp    0x41d3bd
  41d345:	mov    DWORD PTR ds:0x42843d,0x21ce
  41d34f:	mov    DWORD PTR ds:0x428399,edi
  41d355:	cmp    DWORD PTR ds:0x428509,0x0
  41d35c:	jge    0x41d39a
  41d362:	push   DWORD PTR [ebp-0x20]
  41d365:	push   DWORD PTR [ebp-0xc]
  41d368:	push   DWORD PTR [ebp-0x18]
  41d36b:	call   DWORD PTR ds:0x42e138
  41d371:	mov    ecx,DWORD PTR ds:0x4283c5
  41d377:	mov    edx,DWORD PTR ds:0x4285e9
  41d37d:	sub    ecx,edx
  41d37f:	sub    ecx,DWORD PTR [ecx+edx*1]
  41d382:	sub    ecx,0x1d69
  41d388:	mov    ecx,DWORD PTR ds:0x4284e5
  41d38e:	mov    edx,DWORD PTR ds:0x4285dd
  41d394:	sub    ecx,edx
  41d396:	imul   ecx,DWORD PTR [ecx+edx*1]
  41d39a:	sbb    DWORD PTR ds:0x428521,0x4f1
  41d3a4:	sub    esi,DWORD PTR ds:0x4285ad
  41d3aa:	xor    esi,esi
  41d3ac:	add    esi,DWORD PTR ds:0x428409
  41d3b2:	mov    edx,DWORD PTR ds:0x4284bd
  41d3b8:	sub    edx,esi
  41d3ba:	add    esi,DWORD PTR [esi+edx*1]
  41d3bd:	mov    DWORD PTR [ebp-0xd8],0x1
  41d3c7:	mov    DWORD PTR [ebp-0x24],0x7901
  41d3ce:	mov    esi,DWORD PTR ds:0x4283d5
  41d3d4:	xor    ecx,ecx
  41d3d6:	or     ecx,DWORD PTR ds:0x4283e1
  41d3dc:	sub    esi,ecx
  41d3de:	sub    esi,DWORD PTR [esi+ecx*1]
  41d3e1:	mov    DWORD PTR [ebp-0xc0],0x3e2c
  41d3eb:	mov    DWORD PTR [ebp-0x78],0x37f2
  41d3f2:	add    edx,eax
  41d3f4:	mov    DWORD PTR [ebp-0x10],0x62ba
  41d3fb:	mov    DWORD PTR [ebp-0x94],0x561c
  41d405:	mov    DWORD PTR [ebp-0x34],0x58bc
  41d40c:	mov    ecx,DWORD PTR ds:0x428439
  41d412:	xor    DWORD PTR ds:0x428505,ecx
  41d418:	mov    DWORD PTR [ebp-0x60],0x24c7
  41d41f:	mov    DWORD PTR [ebp-0x5c],0x7a45
  41d426:	adc    eax,eax
  41d428:	mov    eax,DWORD PTR [ebp-0x34]
  41d42b:	add    edx,esi
  41d42d:	mov    ecx,DWORD PTR [ebp-0x60]
  41d430:	adc    DWORD PTR ds:0x4285ad,0x428369
  41d43a:	mov    edx,DWORD PTR [ebp-0x5c]
  41d43d:	neg    esi
  41d43f:	and    edx,0x160e
  41d445:	and    DWORD PTR ds:0x428599,0x7809
  41d44f:	sub    edx,ecx
  41d451:	sub    edx,0x29ad
  41d457:	cmp    DWORD PTR ds:0x428459,0x0
  41d45e:	mov    DWORD PTR ds:0x42857d,0x177e
  41d468:	mov    DWORD PTR ds:0x4284f9,0x4211
  41d472:	mov    esi,0x2b55
  41d477:	mov    ecx,DWORD PTR ds:0x428509
  41d47d:	jmp    0x41d4d7
  41d482:	mov    DWORD PTR ds:0x4283a1,edx
  41d488:	cmp    DWORD PTR ds:0x428459,0x0
  41d48f:	jbe    0x41d4cb
  41d495:	push   0x4285a1
  41d49a:	push   0x428195
  41d49f:	push   0x5caf
  41d4a4:	push   DWORD PTR [ebp-0x28]
  41d4a7:	push   0x7d55
  41d4ac:	call   DWORD PTR ds:0x42e080
  41d4b2:	or     DWORD PTR ds:0x428575,ebx
  41d4b8:	xor    ecx,ecx
  41d4ba:	add    ecx,DWORD PTR ds:0x4283b9
  41d4c0:	mov    esi,DWORD PTR ds:0x428415
  41d4c6:	sub    esi,ecx
  41d4c8:	and    ecx,DWORD PTR [ecx+esi*1]
  41d4cb:	or     DWORD PTR ds:0x4285a1,0x760f
  41d4d5:	xor    ecx,ecx
  41d4d7:	imul   edx,eax
  41d4da:	sbb    DWORD PTR ds:0x4285a5,edi
  41d4e0:	mov    eax,DWORD PTR [ebp-0x90]
  41d4e6:	lea    eax,[eax+edx*1+0x14f2e240]
  41d4ed:	add    edx,ecx
  41d4ef:	mov    DWORD PTR [ebp-0x174],eax
  41d4f5:	mov    eax,DWORD PTR [ebp-0x24]
  41d4f8:	mov    ecx,DWORD PTR [ebp-0x94]
  41d4fe:	mov    edx,DWORD PTR [ebp-0x10]
  41d501:	or     DWORD PTR ds:0x42839d,ecx
  41d507:	xor    edx,ecx
  41d509:	add    edx,DWORD PTR [ebp-0x78]
  41d50c:	not    ecx
  41d50e:	mov    ecx,DWORD PTR [ebp-0xc0]
  41d514:	lea    ecx,[edx+ecx*1+0x6ac1]
  41d51b:	and    ecx,eax
  41d51d:	add    esi,esi
  41d51f:	mov    eax,0x1101
  41d524:	or     esi,DWORD PTR ds:0x4285ad
  41d52a:	sub    eax,ecx
  41d52c:	adc    DWORD PTR ds:0x4283a5,ebx
  41d532:	add    eax,DWORD PTR [ebp+0x8]
  41d535:	cmp    DWORD PTR ds:0x428591,0x0
  41d53c:	mov    DWORD PTR ds:0x428495,0x5bb
  41d546:	mov    edx,0x635
  41d54b:	mov    DWORD PTR ds:0x428495,0x7e26
  41d555:	jmp    0x41d5d0
  41d55a:	mov    DWORD PTR ds:0x4283a5,0x7d12
  41d564:	cmp    DWORD PTR ds:0x428591,0x0
  41d56b:	jae    0x41d5af
  41d571:	push   DWORD PTR [ebp-0x24]
  41d574:	push   0x16b6
  41d579:	push   DWORD PTR [ebp-0x10]
  41d57c:	push   0x5f53
  41d581:	push   DWORD PTR [ebp-0x1c]
  41d584:	push   DWORD PTR [ebp-0x18]
  41d587:	push   DWORD PTR [ebp-0x28]
  41d58a:	push   0x4282af
  41d58f:	call   DWORD PTR ds:0x42e2a4
  41d595:	adc    DWORD PTR ds:0x428369,0x7656
  41d59f:	sbb    DWORD PTR ds:0x428531,edx
  41d5a5:	xor    DWORD PTR ds:0x428379,0x32fd
  41d5af:	mov    edx,DWORD PTR ds:0x428469
  41d5b5:	add    edx,DWORD PTR ds:0x42850d
  41d5bb:	mov    DWORD PTR ds:0x428469,edx
  41d5c1:	sub    esi,esi
  41d5c3:	movzx  edx,BYTE PTR ds:0x428369
  41d5ca:	add    DWORD PTR ds:0x428525,edx
  41d5d0:	mov    DWORD PTR [ebp-0x170],eax
  41d5d6:	mov    DWORD PTR [ebp-0x15c],0xcb79b576
  41d5e0:	mov    DWORD PTR [ebp-0x158],0x9c2b8ae8
  41d5ea:	mov    DWORD PTR [ebp-0x154],0xcb79b572
  41d5f4:	mov    DWORD PTR [ebp-0x150],0x9c2b8ae8
  41d5fe:	mov    esi,DWORD PTR [ebp-0x174]
  41d604:	mov    eax,DWORD PTR [ebp-0x154]
  41d60a:	mov    edx,DWORD PTR [ebp-0x150]
  41d610:	xor    eax,0xcb79b576
  41d615:	xor    edx,0x9c2b8ae8
  41d61b:	mov    cl,0x2
  41d61d:	call   0x408bb8
  41d622:	mov    edi,eax
  41d624:	mov    ebx,edx
  41d626:	mov    eax,DWORD PTR [ebp-0x154]
  41d62c:	jmp    0x41da13
  41d631:	out    dx,al
  41d632:	sbb    DWORD PTR [edi],eax
  41d634:	mov    dh,0x2c
  41d636:	mov    esp,0xfc579970
  41d63b:	bound  ebx,QWORD PTR [esi-0x5b3ab748]
  41d641:	ja     0x41d694
  41d643:	sar    BYTE PTR [esi-0x41413bb6],0x6f
  41d64a:	int    0xe8
  41d64c:	xchg   ebx,eax
  41d64d:	sbb    BYTE PTR [edx],dh
  41d64f:	push   edx
  41d650:	cdq    
  41d651:	xor    DWORD PTR [edx+0x37b0a53b],edx
  41d657:	dec    esp
  41d658:	loop   0x41d669
  41d65a:	sbb    al,0x1a
  41d65c:	pop    eax
  41d65d:	out    0xbc,eax
  41d65f:	das    
  41d660:	sti    
  41d661:	cmp    eax,0x9d4059ff
  41d666:	dec    ecx
  41d667:	jl     0x41d5fd
  41d669:	rcr    BYTE PTR [edx+0x7d],0x8
  41d66d:	arpl   cx,bx
  41d66f:	stos   DWORD PTR es:[edi],eax
  41d670:	je     0x41d667
  41d672:	mov    ds,WORD PTR [edx+eiz*8+0xa]
  41d676:	mov    al,0x17
  41d678:	out    0xfb,al
  41d67a:	inc    esi
  41d67b:	iret   
  41d67c:	add    ch,dh
  41d67e:	ror    DWORD PTR [edx-0x65],1
  41d681:	mov    ah,ah
  41d683:	fs hlt 
  41d685:	pop    es
  41d686:	mov    esi,0x24accf0a
  41d68b:	(bad)  
  41d68c:	mov    esi,0x2e8ce08e
  41d691:	je     0x41d6a6
  41d693:	or     DWORD PTR [edx+0x58],esp
  41d696:	sub    dh,BYTE PTR [ebp+0x2a7e9ead]
  41d69c:	pop    ebx
  41d69d:	or     al,0x75
  41d69f:	cmc    
  41d6a0:	push   edx
  41d6a1:	xlat   BYTE PTR ds:[ebx]
  41d6a2:	out    dx,eax
  41d6a3:	sbb    ah,BYTE PTR [edi-0x4c]
  41d6a6:	xchg   ebx,eax
  41d6a7:	scas   al,BYTE PTR es:[edi]
  41d6a8:	xlat   BYTE PTR ds:[ebx]
  41d6a9:	and    edx,ebx
  41d6ab:	stc    
  41d6ac:	mov    esp,0xcc8e00b8
  41d6b1:	addr16 out dx,eax
  41d6b3:	pop    ebx
  41d6b4:	or     ebx,edx
  41d6b6:	and    bl,al
  41d6b8:	clc    
  41d6b9:	imul   esi,DWORD PTR [esi+0x32],0xb6892e5d
  41d6c0:	adc    BYTE PTR [edx+edx*4],ah
  41d6c3:	ja     0x41d64d
  41d6c5:	stos   DWORD PTR es:[edi],eax
  41d6c6:	cmp    eax,0x7f13f0be
  41d6cb:	push   ecx
  41d6cc:	stc    
  41d6cd:	stos   DWORD PTR es:[edi],eax
  41d6ce:	jnp    0x41d69e
  41d6d0:	jne    0x41d68c
  41d6d2:	add    eax,0x1807680c
  41d6d7:	pop    edx
  41d6d8:	pop    esp
  41d6d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d6da:	imul   edx,DWORD PTR [edi-0x19],0xffffffb5
  41d6de:	adc    BYTE PTR [ecx],dl
  41d6e0:	mov    fs,WORD PTR [ebx-0x5af8ad0e]
  41d6e6:	(bad)  
  41d6e7:	test   DWORD PTR ds:0x79e6504f,0xd9ef47c1
  41d6f1:	or     ebx,ebp
  41d6f3:	pop    ebx
  41d6f4:	iret   
  41d6f5:	xchg   DWORD PTR [ebx-0x79],ebx
  41d6f8:	mov    eax,0xad655a89
  41d6fd:	ja     0x41d69d
  41d6ff:	sbb    BYTE PTR [edx],ah
  41d701:	nop
  41d702:	adc    BYTE PTR [eax+0x78],al
  41d705:	bound  esp,QWORD PTR [edx]
  41d707:	dec    ebp
  41d708:	push   0x4c
  41d70a:	or     BYTE PTR [eax+0x6b6e85b9],0x43
  41d711:	pop    esi
  41d712:	jb     0x41d77a
  41d714:	pop    eax
  41d715:	pop    ebp
  41d716:	ins    BYTE PTR es:[edi],dx
  41d717:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d718:	fbstp  TBYTE PTR [ebp+ebx*8-0x1d]
  41d71c:	(bad)  
  41d71d:	cli    
  41d71e:	push   ds
  41d71f:	shr    edx,1
  41d721:	or     DWORD PTR [ecx],esi
  41d723:	jecxz  0x41d700
  41d725:	mov    ebx,0xaadb752d
  41d72a:	adc    bh,BYTE PTR [ebp-0x149b1447]
  41d730:	test   eax,0x999c4a5
  41d735:	jbe    0x41d6fd
  41d737:	ret    
  41d738:	jb     0x41d7b3
  41d73a:	fisub  DWORD PTR [ebx]
  41d73c:	xchg   edx,eax
  41d73d:	retf   
  41d73e:	mov    bh,0xd7
  41d740:	xchg   dl,dh
  41d742:	ss (bad) 
  41d744:	xor    al,0x61
  41d746:	dec    esp
  41d747:	das    
  41d748:	mov    esi,0x1cbf55c7
  41d74d:	fisttp WORD PTR [ecx+0x40e10325]
  41d753:	out    dx,al
  41d754:	jne    0x41d6e3
  41d756:	int    0x84
  41d758:	cmp    ebp,DWORD PTR [esi]
  41d75a:	cmp    al,0x47
  41d75c:	or     eax,0x2ccf2a6c
  41d761:	sbb    BYTE PTR [esi],ch
  41d763:	jmp    0xb8bc:0x30c3667e
  41d76a:	lds    ebp,FWORD PTR [ebp-0x244559a4]
  41d770:	(bad)  
  41d771:	lods   al,BYTE PTR ds:[esi]
  41d772:	shl    DWORD PTR ds:0x2a7419f8,1
  41d778:	pop    edi
  41d779:	std    
  41d77a:	sub    al,0x22
  41d77c:	outs   dx,BYTE PTR ds:[esi]
  41d77d:	inc    esp
  41d77e:	fst    QWORD PTR [ebx-0x21]
  41d781:	mov    ah,0xb2
  41d783:	mov    ah,0xa4
  41d785:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d786:	mov    ds:0x25a7a167,eax
  41d78b:	cmp    esi,edi
  41d78d:	test   eax,0xd183d1f
  41d792:	fs dec edi
  41d794:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d795:	imul   esp,esp,0xffffff80
  41d798:	aas    
  41d799:	inc    ebx
  41d79a:	add    BYTE PTR [edi-0x47],bl
  41d79d:	mov    WORD PTR [ebp+0x17],gs
  41d7a0:	call   DWORD PTR [edx+0x18]
  41d7a3:	and    BYTE PTR [esi-0x1d],dl
  41d7a6:	fisubr WORD PTR [esi]
  41d7a8:	xchg   ebp,eax
  41d7a9:	sti    
  41d7aa:	nop
  41d7ab:	jecxz  0x41d82a
  41d7ad:	lods   eax,DWORD PTR ds:[esi]
  41d7ae:	sub    esp,ecx
  41d7b0:	and    bh,BYTE PTR [ecx+0x1]
  41d7b3:	daa    
  41d7b4:	pop    esp
  41d7b5:	inc    ebp
  41d7b6:	mov    ds,eax
  41d7b8:	adc    DWORD PTR [edi-0x3b],edi
  41d7bb:	pusha  
  41d7bc:	shl    bl,0xa5
  41d7bf:	aam    0x3a
  41d7c1:	jbe    0x41d806
  41d7c3:	xchg   ecx,eax
  41d7c4:	add    ebp,DWORD PTR [edi+eiz*1]
  41d7c7:	sub    eax,0x645ae2e6
  41d7cc:	adc    ah,BYTE PTR [ebx-0x5]
  41d7cf:	aad    0xda
  41d7d1:	xor    al,0x2
  41d7d3:	lahf   
  41d7d4:	gs push ebx
  41d7d6:	std    
  41d7d7:	sub    al,0x9b
  41d7d9:	inc    ebx
  41d7da:	ins    BYTE PTR es:[edi],dx
  41d7db:	adc    al,0xef
  41d7dd:	adc    bh,ah
  41d7df:	outs   dx,DWORD PTR ds:[esi]
  41d7e0:	sub    eax,0x9dd6506b
  41d7e5:	mov    dl,bl
  41d7e7:	mov    bl,0xf
  41d7e9:	fidiv  DWORD PTR [eax+0x268a0baa]
  41d7ef:	lods   al,BYTE PTR ds:[esi]
  41d7f0:	add    BYTE PTR ds:0xe09ba5b1,ch
  41d7f6:	pop    ecx
  41d7f7:	pop    edx
  41d7f8:	iret   
  41d7f9:	jne    0x41d800
  41d7fb:	pop    edx
  41d7fc:	and    DWORD PTR [edx+0x64],ebp
  41d7ff:	jle    0x41d79a
  41d801:	xchg   DWORD PTR [edx],ecx
  41d803:	nop
  41d804:	cmp    BYTE PTR [edx-0x64],ah
  41d807:	test   BYTE PTR [ebx+esi*2],0x23
  41d80b:	jmp    0xb2698d6d
  41d810:	out    0x74,al
  41d812:	sbb    dh,dh
  41d814:	pop    es
  41d815:	(bad)  
  41d816:	cli    
  41d817:	mov    ds:0xc71fffb4,al
  41d81c:	cmp    al,0x3a
  41d81e:	cld    
  41d81f:	jp     0x41d7a4
  41d821:	fld    TBYTE PTR [edi]
  41d823:	pop    ecx
  41d824:	push   cs
  41d825:	cs mov al,0x84
  41d828:	jmp    0x53f5:0x16c97575
  41d82f:	push   esi
  41d830:	push   edi
  41d831:	jmp    0x41d837
  41d833:	mov    dh,ah
  41d835:	push   es
  41d836:	xchg   ecx,eax
  41d837:	pop    edi
  41d838:	sub    DWORD PTR [esi-0x44],ebp
  41d83b:	dec    eax
  41d83c:	sub    cl,BYTE PTR [eax]
  41d83e:	leave  
  41d83f:	xor    al,0x60
  41d841:	cdq    
  41d842:	sub    DWORD PTR [eax+eiz*1+0x7826fff7],ebp
  41d849:	test   al,0x6b
  41d84b:	xchg   ebp,eax
  41d84c:	out    0x6f,al
  41d84e:	add    edi,DWORD PTR [edi+edi*8-0x3e078309]
  41d855:	sbb    ebp,DWORD PTR [edx+0x3c]
  41d858:	push   ebp
  41d859:	les    eax,FWORD PTR [esi]
  41d85b:	sub    eax,0x9abc686c
  41d860:	mov    ds:0xf17aefcb,al
  41d865:	test   eax,0x127384da
  41d86a:	mov    al,0x4d
  41d86c:	xchg   BYTE PTR [ebp-0x35430137],bl
  41d872:	inc    ebp
  41d873:	iret   
  41d874:	daa    
  41d875:	scas   eax,DWORD PTR es:[edi]
  41d876:	or     eax,0x3e72cdc1
  41d87b:	in     eax,0x9c
  41d87d:	hlt    
  41d87e:	push   ss
  41d87f:	loopne 0x41d837
  41d881:	fs in  al,dx
  41d883:	sbb    edx,DWORD PTR [edi]
  41d885:	mov    cl,0xe6
  41d887:	(bad)  [edx-0x67]
  41d88a:	mov    esi,0x5b1c8052
  41d88f:	pusha  
  41d890:	es mov eax,0x1e0c3574
  41d896:	cli    
  41d897:	jl     0x41d85a
  41d899:	loope  0x41d8fe
  41d89b:	retf   0xa590
  41d89e:	sub    al,0x99
  41d8a0:	push   edi
  41d8a1:	sbb    edx,DWORD PTR [edx]
  41d8a3:	pop    ss
  41d8a4:	mov    ecx,0xf5de8f70
  41d8a9:	sub    esp,DWORD PTR [ebp+0x704f502c]
  41d8af:	xor    dl,cl
  41d8b1:	adc    al,BYTE PTR [ebx+0xd82146d]
  41d8b7:	adc    edi,edx
  41d8b9:	loop   0x41d852
  41d8bb:	mov    eax,ds:0xccf11572
  41d8c0:	mov    dl,0x46
  41d8c2:	jecxz  0x41d869
  41d8c4:	cmp    DWORD PTR [edi-0x7610cd2f],ebx
  41d8ca:	inc    ebp
  41d8cb:	xchg   esi,eax
  41d8cc:	aam    0x8e
  41d8ce:	jg     0x41d85b
  41d8d0:	cmp    al,0x94
  41d8d2:	lea    ebp,[eax]
  41d8d4:	inc    ecx
  41d8d5:	dec    ecx
  41d8d6:	or     ecx,0xffffffe0
  41d8d9:	pop    esi
  41d8da:	cwde   
  41d8db:	(bad)  
  41d8dc:	not    ch
  41d8de:	cmp    DWORD PTR [edi+0xa],edx
  41d8e1:	sub    DWORD PTR [esi-0x39],edx
  41d8e4:	in     al,0xc5
  41d8e6:	shl    BYTE PTR [ebx-0x1f9c00f],cl
  41d8ec:	int3   
  41d8ed:	ins    DWORD PTR es:[edi],dx
  41d8ee:	cmc    
  41d8ef:	pop    esi
  41d8f0:	jo     0x41d96c
  41d8f2:	fwait
  41d8f3:	pop    ss
  41d8f4:	and    eax,0xd3784747
  41d8f9:	(bad)  
  41d8fa:	mov    edi,0x2cf44657
  41d8ff:	dec    ebx
  41d900:	xchg   ebx,eax
  41d901:	push   eax
  41d902:	fistp  DWORD PTR [edx-0x1f]
  41d905:	xchg   esp,eax
  41d906:	mov    esp,edi
  41d908:	iret   
  41d909:	mov    bl,0xc0
  41d90b:	sbb    dh,cl
  41d90d:	inc    ecx
  41d90e:	bound  dx,DWORD PTR [bx+di]
  41d912:	and    DWORD PTR [eax+0x1e],0x436a0010
  41d919:	pop    ecx
  41d91a:	adc    eax,0x5db89f42
  41d91f:	cmp    edi,DWORD PTR [eax]
  41d921:	out    0xc9,eax
  41d923:	in     eax,0xf5
  41d925:	xchg   ebp,eax
  41d926:	cwde   
  41d927:	sbb    BYTE PTR [ecx+0x5d],dh
  41d92a:	cmp    eax,0x7d727e
  41d92f:	xchg   edx,eax
  41d930:	sahf   
  41d931:	inc    esp
  41d932:	cmp    eax,0xed689899
  41d937:	pusha  
  41d938:	sub    DWORD PTR [esp+ebx*8],edi
  41d93b:	mov    ch,0xad
  41d93d:	pop    ebx
  41d93e:	xchg   BYTE PTR [ecx],dh
  41d940:	push   0x363e36c1
  41d945:	out    dx,eax
  41d946:	sub    ah,cl
  41d948:	aas    
  41d949:	xor    al,0x3f
  41d94b:	jae    0x41d98b
  41d94d:	int3   
  41d94e:	scas   eax,DWORD PTR es:[edi]
  41d94f:	or     esp,ebp
  41d951:	fistp  DWORD PTR [ecx+0x18cbaa10]
  41d957:	and    ebp,ebx
  41d959:	in     al,dx
  41d95a:	fwait
  41d95b:	or     DWORD PTR [edx+0x2b9dd988],0xfffffff9
  41d962:	jae    0x41d9b5
  41d964:	mov    esi,0x9f6ea12b
  41d969:	das    
  41d96a:	add    bh,cl
  41d96c:	pushf  
  41d96d:	or     ebp,DWORD PTR [edx-0x5c961dbd]
  41d973:	pop    esi
  41d974:	loope  0x41d975
  41d976:	jo     0x41d921
  41d978:	adc    esi,DWORD PTR [ecx]
  41d97a:	test   DWORD PTR [edi-0x21fda31a],edx
  41d980:	lahf   
  41d981:	pop    edi
  41d982:	stos   DWORD PTR es:[edi],eax
  41d983:	iret   
  41d984:	mov    DWORD PTR [eax-0x7d],esp
  41d987:	or     al,0x90
  41d989:	pop    ebp
  41d98a:	inc    eax
  41d98b:	shl    BYTE PTR [edi],cl
  41d98d:	nop
  41d98e:	rcr    BYTE PTR [esi+0x1a509abd],0x42
  41d995:	fnsave [eax+0x5c668168]
  41d99b:	jns    0x41d950
  41d99d:	pusha  
  41d99e:	ss inc esi
  41d9a0:	ficom  WORD PTR [esp+0x8]
  41d9a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d9a5:	scas   al,BYTE PTR es:[edi]
  41d9a6:	sbb    BYTE PTR [edi+0x11],ch
  41d9a9:	hlt    
  41d9aa:	dec    ebx
  41d9ab:	scas   al,BYTE PTR es:[edi]
  41d9ac:	xchg   edx,eax
  41d9ad:	cs inc ebx
  41d9af:	arpl   dx,si
  41d9b1:	and    BYTE PTR [edi+esi*1-0x20],0xa1
  41d9b6:	xor    BYTE PTR [ebp-0x77],cl
  41d9b9:	mov    DWORD PTR [eax],0x5b9ba006
  41d9bf:	and    esi,DWORD PTR [ebx-0x678bee2e]
  41d9c5:	ficomp DWORD PTR [esi+eax*8+0x60e8a20e]
  41d9cc:	add    esi,edi
  41d9ce:	out    dx,eax
  41d9cf:	adc    BYTE PTR [edi],cl
  41d9d1:	loopne 0x41d9c2
  41d9d3:	sbb    al,0x34
  41d9d5:	repz mov cl,0x92
  41d9d8:	inc    esi
  41d9d9:	data16 ds jg 0x41d968
  41d9dd:	addr16 pop ss
  41d9df:	jl     0x41da1e
  41d9e1:	test   DWORD PTR [eax+eiz*1+0x2f],0x64c7b7fc
  41d9e9:	mov    cl,BYTE PTR [edi+0x4962a0d9]
  41d9ef:	adc    eax,0x962f5ec9
  41d9f4:	mov    ah,ch
  41d9f6:	push   ebx
  41d9f7:	shr    DWORD PTR [ecx-0x1b],0x1c
  41d9fb:	xchg   edx,eax
  41d9fc:	loop   0x41da1c
  41d9fe:	xor    al,0x1c
  41da00:	ja     0x41d9ed
  41da02:	(bad)  
  41da04:	sar    DWORD PTR [ecx+0x3b],0xc8
  41da08:	arpl   di,bx
  41da0a:	lods   al,BYTE PTR ds:[esi]
  41da0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da0c:	xlat   BYTE PTR ds:[ebx]
  41da0d:	pop    esi
  41da0e:	js     0x41d9d5
  41da10:	mov    eax,ds:0x958b1cb2
  41da15:	mov    al,0xfe
  41da17:	(bad)  
  41da18:	push   DWORD PTR ds:0xcb79b576
  41da1e:	xor    edx,0x9c2b8ae8
  41da24:	mov    cl,0x3e
  41da26:	call   0x42241f
  41da2b:	or     edi,eax
  41da2d:	or     ebx,edx
  41da2f:	mov    eax,DWORD PTR [ebp-0x15c]
  41da35:	mov    edx,DWORD PTR [ebp-0x158]
  41da3b:	jmp    0x41de22
  41da40:	outs   dx,BYTE PTR ds:[esi]
  41da41:	cdq    
  41da42:	bound  ebp,QWORD PTR fs:[esp+edi*4+0x63179970]
  41da4a:	xor    bl,ch
  41da4c:	push   ebp
  41da4d:	out    dx,eax
  41da4e:	fld    QWORD PTR cs:[ebx]
  41da51:	pop    ecx
  41da52:	sar    BYTE PTR [esi-0x41413bb6],0xf6
  41da59:	mov    dl,0x8a
  41da5b:	mov    WORD PTR [eax-0x16],ss
  41da5e:	inc    esi
  41da5f:	dec    ebp
  41da60:	add    al,0x7b
  41da62:	xor    edi,DWORD PTR [ebp-0x50]
  41da65:	sub    eax,0xb1fd6e22
  41da6a:	bndstx [eax+edx*8+0x56cc5306],(bad)
  41da72:	pop    edx
  41da73:	push   ebx
  41da74:	xchg   DWORD PTR [esi-0x2c],ebx
  41da77:	pop    ds
  41da78:	arpl   di,bx
  41da7a:	xchg   esi,eax
  41da7b:	sub    al,0xd5
  41da7d:	or     ebp,esp
  41da7f:	or     eax,0xcf8ad656
  41da84:	inc    eax
  41da85:	add    al,0xfa
  41da87:	sub    eax,0x82cd5b4b
  41da8c:	mov    cl,0xb0
  41da8e:	add    DWORD PTR [esi+0x70397374],ebx
  41da94:	sbb    ch,dl
  41da96:	mov    eax,0x12725d42
  41da9b:	jg     0x41daab
  41da9d:	dec    edx
  41da9e:	mov    ds:0x9fafa4be,eax
  41daa3:	jl     0x41da7f
  41daa5:	mov    esi,0xedc1195f
  41daaa:	rcr    bl,1
  41daac:	(bad)  
  41daad:	dec    eax
  41daae:	and    DWORD PTR [ebx],ebx
  41dab0:	add    al,0x8
  41dab2:	mov    ss,WORD PTR [ebp-0x66764744]
  41dab8:	test   DWORD PTR [ecx+0x52],edx
  41dabb:	fimul  WORD PTR [eax+0x3f]
  41dabe:	popf   
  41dabf:	mov    esi,0x23fc0865
  41dac4:	pop    esi
  41dac5:	jo     0x41da4a
  41dac7:	es jp  0x41db3b
  41daca:	push   ds
  41dacb:	and    eax,eax
  41dacd:	jg     0x41dae6
  41dacf:	imul   esp,DWORD PTR [ecx+eax*1+0x22],0xee85a2eb
  41dad7:	jl     0x41dac4
  41dad9:	inc    ecx
  41dada:	xchg   BYTE PTR [edx+0x18613a58],ch
  41dae0:	rcr    DWORD PTR [ebp-0x3],1
  41dae3:	mov    ah,0xfb
  41dae5:	aad    0x4b
  41dae7:	mov    ds:0x158ec0e5,al
  41daec:	mov    dh,0x5a
  41daee:	mov    al,0x4a
  41daf0:	mov    bh,0x8a
  41daf2:	sub    DWORD PTR [edx+0x7b],ebx
  41daf5:	push   eax
  41daf6:	mov    ecx,0x3cebef1e
  41dafb:	dec    esp
  41dafc:	push   0x69
  41dafe:	sbb    DWORD PTR [eax-0x97b98e3],ebp
  41db04:	xor    bl,0xdf
  41db07:	jmp    0xeddfc2c9
  41db0c:	dec    ebx
  41db0d:	into   
  41db0e:	jo     0x41da91
  41db10:	mov    ch,bl
  41db12:	adc    DWORD PTR [esi+0x7b],0x52b4200b
  41db19:	ficom  DWORD PTR [edi-0x1d]
  41db1c:	data16 out dx,al
  41db1e:	add    DWORD PTR [edx-0x43],edx
  41db21:	in     eax,0xe9
  41db23:	xchg   ebp,eax
  41db24:	mov    WORD PTR [edx],es
  41db26:	jo     0x41db55
  41db28:	mov    ebp,0x838d8d34
  41db2d:	inc    ebp
  41db2e:	inc    ecx
  41db2f:	in     eax,dx
  41db30:	xabort 0xae
  41db33:	mov    eax,ds:0xed288c66
  41db38:	(bad)  
  41db39:	ins    DWORD PTR es:[edi],dx
  41db3a:	sbb    eax,0xe28e1aef
  41db3f:	mov    ds:0xebfa8be9,al
  41db44:	clc    
  41db45:	add    al,0x4a
  41db47:	add    ebp,ebp
  41db49:	data16 je 0x41dbab
  41db4c:	mov    bl,BYTE PTR [eax]
  41db4e:	stc    
  41db4f:	das    
  41db50:	and    dh,dl
  41db52:	mov    eax,0xda73b1d1
  41db57:	pop    esp
  41db58:	and    DWORD PTR [edi+0x3e],esi
  41db5b:	inc    eax
  41db5c:	pusha  
  41db5d:	cmp    ah,0x41
  41db60:	pop    ss
  41db61:	pop    edi
  41db62:	ins    DWORD PTR es:[edi],dx
  41db63:	pop    ecx
  41db64:	hlt    
  41db65:	sub    ebx,ebp
  41db67:	aas    
  41db68:	mov    cl,ch
  41db6a:	cli    
  41db6b:	mov    WORD PTR [ebp-0x44],ss
  41db6e:	xor    DWORD PTR [ebx-0x6],eax
  41db71:	ss cdq 
  41db73:	(bad)  
  41db74:	sbb    eax,0x4c0ba37b
  41db79:	cmp    eax,0xdef832f9
  41db7e:	jp     0x41db56
  41db80:	jmp    DWORD PTR [bp-0x79]
  41db84:	cli    
  41db85:	out    0x2,eax
  41db87:	popa   
  41db88:	dec    esp
  41db89:	dec    esp
  41db8a:	stos   BYTE PTR es:[edi],al
  41db8b:	nop
  41db8c:	(bad)  
  41db8d:	loope  0x41dbdb
  41db8f:	mov    eax,0xc54c9f16
  41db94:	mov    ah,0xec
  41db96:	dec    ebx
  41db97:	mov    eax,0x55ec69cc
  41db9c:	jmp    0x41db86
  41db9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db9f:	xchg   BYTE PTR [edx+0x40],ch
  41dba2:	out    0xf4,eax
  41dba4:	add    bl,dh
  41dba6:	xchg   ebx,eax
  41dba7:	clc    
  41dba8:	stos   BYTE PTR es:[edi],al
  41dba9:	sbb    eax,edx
  41dbab:	inc    edi
  41dbac:	cli    
  41dbad:	xchg   esi,eax
  41dbae:	and    al,al
  41dbb0:	es out 0x2,al
  41dbb3:	xor    BYTE PTR [ebx+eax*4-0x1a],bl
  41dbb7:	addr16 adc bl,ah
  41dbba:	xchg   esi,eax
  41dbbb:	jg     0x41db8a
  41dbbd:	shl    edi,0x57
  41dbc0:	fisttp WORD PTR [eax]
  41dbc2:	arpl   sp,si
  41dbc4:	mov    WORD PTR [ebp+0x550d7b0f],es
  41dbca:	fistp  DWORD PTR [edi+0x7d]
  41dbcd:	xchg   ebp,eax
  41dbce:	mov    bh,0xb1
  41dbd0:	or     DWORD PTR [edx+0x3b7a568b],esp
  41dbd6:	test   eax,0x824171cc
  41dbdb:	mov    eax,ds:0xbfdaebde
  41dbe0:	mov    ds:0x76dcfaeb,eax
  41dbe5:	iret   
  41dbe6:	mov    edx,DWORD PTR [edi+0x1d41e827]
  41dbec:	loopne 0x41dc65
  41dbee:	pop    edi
  41dbef:	(bad)
  41dbf4:	and    al,0x19
  41dbf6:	test   al,0x4d
  41dbf8:	rcl    DWORD PTR [eax+edx*4-0x3ae95d7],0x7
  41dc00:	and    BYTE PTR [ebx+0x2],al
  41dc03:	jp     0x41dbbc
  41dc05:	ret    
  41dc06:	lods   eax,DWORD PTR ds:[esi]
  41dc07:	add    DWORD PTR [edx+0x17f4664c],0xf
  41dc0e:	div    BYTE PTR [edx+eax*1-0x44add96d]
  41dc15:	or     al,0xc
  41dc17:	or     BYTE PTR [eax-0x3a],dl
  41dc1a:	retf   0xb09
  41dc1d:	repnz setbe BYTE PTR [ebx-0x19f48f57]
  41dc25:	push   ebp
  41dc26:	(bad)  
  41dc27:	dec    ecx
  41dc28:	inc    ebx
  41dc29:	rcl    cl,0xa3
  41dc2c:	xchg   ebp,eax
  41dc2d:	and    esp,edx
  41dc2f:	push   edi
  41dc30:	mov    ebx,0xadd0681e
  41dc35:	imul   ecx,DWORD PTR [ebp+eax*8-0x3c],0xc36945e1
  41dc3d:	jge    0x41dc81
  41dc3f:	pop    edi
  41dc40:	jae    0x41dc78
  41dc42:	pop    es
  41dc43:	imul   ecx,DWORD PTR [ebx+0x6f],0xfdd4b07b
  41dc4a:	retf   0x133f
  41dc4d:	mov    ds,WORD PTR [edx+edi*1-0x5ed3c2fb]
  41dc54:	(bad)  [edi+0x73]
  41dc57:	pop    eax
  41dc58:	fisttp QWORD PTR [ebx]
  41dc5a:	and    dh,dl
  41dc5c:	pop    ecx
  41dc5d:	xchg   DWORD PTR [edx+0xd2a3dbe],eax
  41dc63:	adc    eax,0x96fcae71
  41dc68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc69:	mov    al,ds:0x640dd760
  41dc6e:	lock cmp esp,eax
  41dc71:	xchg   esi,eax
  41dc72:	mov    edx,DWORD PTR ds:0x18b3b6e0
  41dc78:	xchg   edx,eax
  41dc79:	int    0x10
  41dc7b:	das    
  41dc7c:	push   ds
  41dc7d:	neg    cl
  41dc7f:	push   ss
  41dc80:	daa    
  41dc81:	or     DWORD PTR [edx-0x578450da],esi
  41dc87:	push   ds
  41dc88:	jecxz  0x41dc7b
  41dc8a:	and    al,0x7c
  41dc8c:	rcl    BYTE PTR [ebx+eax*8-0x26],cl
  41dc90:	mov    dh,0xbe
  41dc92:	push   es
  41dc93:	mov    BYTE PTR [edi+0x15],dh
  41dc96:	xchg   edi,eax
  41dc97:	mov    al,gs:0xb2ca319
  41dc9d:	test   BYTE PTR [edx],0x87
  41dca0:	jg     0x41dc4b
  41dca2:	shl    BYTE PTR [esp+eiz*4],cl
  41dca5:	ss jl  0x41dc78
  41dca8:	sub    DWORD PTR [ebx+0x13e263c],ebp
  41dcae:	arpl   WORD PTR [edx-0x1d],sp
  41dcb1:	jno    0x41dd06
  41dcb3:	leave  
  41dcb4:	mov    DWORD PTR [esi-0x72bfc28e],edi
  41dcba:	jno    0x41dcfc
  41dcbc:	add    ebx,DWORD PTR [edx+0xc52d92a]
  41dcc2:	aaa    
  41dcc3:	xchg   edi,eax
  41dcc4:	mov    bh,bl
  41dcc6:	pop    esi
  41dcc7:	add    eax,0xa7776fab
  41dccc:	jg     0x41dc9b
  41dcce:	inc    DWORD PTR [edx+edx*1+0x7a]
  41dcd2:	xchg   DWORD PTR [edi+0x61],esi
  41dcd5:	mov    BYTE PTR [edi],dl
  41dcd7:	mov    al,0xe5
  41dcd9:	loop   0x41dc9d
  41dcdb:	adc    al,ch
  41dcdd:	xchg   ebp,eax
  41dcde:	mov    ebx,0x4ceeb38a
  41dce3:	test   edx,edi
  41dce5:	jo     0x41dcbc
  41dce7:	dec    esp
  41dce8:	cmp    BYTE PTR [esi-0x4e],0x66
  41dcec:	int3   
  41dced:	xlat   BYTE PTR ds:[ebx]
  41dcee:	mov    al,0xf5
  41dcf0:	cmp    BYTE PTR [eax-0x19],al
  41dcf3:	push   ebx
  41dcf4:	jp     0x41dc95
  41dcf6:	retf   
  41dcf7:	and    ebp,DWORD PTR [edx]
  41dcf9:	sub    eax,esi
  41dcfb:	in     eax,dx
  41dcfc:	or     BYTE PTR [ebx+0x37],al
  41dcff:	in     al,0x0
  41dd01:	sub    ebp,ebx
  41dd03:	mov    al,ds:0x90d664a
  41dd08:	jne    0x41dd3b
  41dd0a:	mov    ds:0x1f5373cc,eax
  41dd0f:	sbb    DWORD PTR [ebx],edx
  41dd11:	cmc    
  41dd12:	inc    esi
  41dd13:	repnz xchg esi,eax
  41dd15:	add    ch,bh
  41dd17:	imul   edi,DWORD PTR [ebx+0x61],0xd87c840e
  41dd1e:	xchg   ebp,eax
  41dd1f:	xchg   DWORD PTR [ebx],ebp
  41dd21:	aad    0xf8
  41dd23:	jnp    0x41dd5e
  41dd25:	jmp    0x6140:0x6034a41d
  41dd2c:	les    esi,FWORD PTR [ecx]
  41dd2e:	jge    0x41dcd2
  41dd30:	test   eax,0xfdd1067a
  41dd35:	jne    0x41dd79
  41dd37:	rcr    DWORD PTR [ecx+0xa],0xb
  41dd3b:	mov    ebp,edx
  41dd3d:	adc    eax,0x3db4b5da
  41dd42:	cmp    al,0x49
  41dd44:	add    edx,eax
  41dd46:	(bad)  
  41dd47:	inc    BYTE PTR [edi-0x6c]
  41dd4a:	lahf   
  41dd4b:	push   ecx
  41dd4c:	adc    eax,0x212e56eb
  41dd51:	in     al,dx
  41dd52:	out    0x5d,al
  41dd54:	sbb    ch,ah
  41dd56:	leave  
  41dd57:	xchg   BYTE PTR [ecx+0x38],bl
  41dd5a:	dec    edi
  41dd5b:	ins    DWORD PTR es:[edi],dx
  41dd5c:	fcomip st,st(3)
  41dd5e:	test   DWORD PTR [edx-0x34],ebx
  41dd61:	mov    bl,0x8f
  41dd63:	adc    al,0xf4
  41dd65:	pusha  
  41dd66:	xchg   ebp,eax
  41dd67:	dec    esi
  41dd68:	test   eax,0x695ee6fd
  41dd6d:	jae    0x41dde8
  41dd6f:	xchg   ebx,eax
  41dd70:	or     ch,BYTE PTR [ecx+0x3c]
  41dd73:	test   al,0xb2
  41dd75:	shr    ecx,cl
  41dd77:	push   ds
  41dd78:	std    
  41dd79:	rcr    bl,cl
  41dd7b:	dec    ebx
  41dd7c:	xlat   BYTE PTR ds:[ebx]
  41dd7d:	fistp  WORD PTR [edx+0x10359af0]
  41dd83:	push   edi
  41dd84:	stos   BYTE PTR es:[edi],al
  41dd85:	addr16 pushf 
  41dd87:	add    esi,DWORD PTR [ebx-0x13711cf]
  41dd8d:	xor    bl,ch
  41dd8f:	std    
  41dd90:	shl    BYTE PTR [ecx+0x4d],0x2f
  41dd94:	outs   dx,DWORD PTR ds:[esi]
  41dd95:	pop    edi
  41dd96:	pop    edi
  41dd97:	shr    BYTE PTR [ebx],0x5f
  41dd9a:	into   
  41dd9b:	push   cs
  41dd9c:	rcl    BYTE PTR [esp+edx*8+0x6c],1
  41dda0:	out    dx,al
  41dda1:	xor    ecx,DWORD PTR [eax-0x3e3ee5]
  41dda7:	and    bh,BYTE PTR [edi-0xab21629]
  41ddad:	gs push ebx
  41ddaf:	fwait
  41ddb0:	xor    al,0xeb
  41ddb2:	sub    cl,BYTE PTR [edx+0x4c29d81]
  41ddb8:	dec    edx
  41ddb9:	fwait
  41ddba:	push   ecx
  41ddbb:	xchg   ebx,eax
  41ddbc:	mov    ebp,0xb5f7dedf
  41ddc1:	outs   dx,DWORD PTR ds:[esi]
  41ddc2:	mov    WORD PTR [edx+0x4f114705],es
  41ddc8:	jns    0x41de1f
  41ddca:	sub    DWORD PTR [ebx+ecx*2],ecx
  41ddcd:	gs dec esp
  41ddcf:	out    0xe6,eax
  41ddd1:	adc    BYTE PTR [esi],ch
  41ddd3:	mov    edi,0x70a4a09c
  41ddd8:	sti    
  41ddd9:	test   al,0x3f
  41dddb:	mov    bl,0x3c
  41dddd:	xchg   esp,eax
  41ddde:	hlt    
  41dddf:	jmp    0xedb3f652
  41dde4:	jno    0x41dda9
  41dde6:	cmp    BYTE PTR [ecx],cl
  41dde8:	mov    eax,ds:0x71111420
  41dded:	adc    al,0x84
  41ddef:	dec    ebx
  41ddf0:	xor    eax,0x9960d8ae
  41ddf5:	repz (bad) [edx+0x5a4c9f77]
  41ddfc:	fistp  QWORD PTR [ebp+0x58]
  41ddff:	mov    edi,0x430de1d3
  41de04:	cdq    
  41de05:	xor    al,0x8e
  41de07:	or     dl,ch
  41de09:	bound  eax,QWORD PTR ds:0x8985d9a9
  41de0f:	sti    
  41de10:	sti    
  41de11:	fs mov ebp,0x37d3536d
  41de17:	ins    DWORD PTR es:[edi],dx
  41de18:	leave  
  41de19:	xor    esp,esi
  41de1b:	imul   ecx,DWORD PTR [ecx],0x7f1ed3f8
  41de21:	sbb    dh,BYTE PTR ds:0xcb79b576
  41de27:	xor    edx,0x9c2b8ae8
  41de2d:	mov    cl,0x2
  41de2f:	call   0x408bb8
  41de34:	mov    ecx,edx
  41de36:	mov    edx,DWORD PTR [ebp-0x15c]
  41de3c:	mov    DWORD PTR [ebp-0x218],esi
  41de42:	mov    esi,DWORD PTR [ebp-0x158]
  41de48:	xor    edx,0xcb79b576
  41de4e:	xor    esi,0x9c2b8ae8
  41de54:	mov    DWORD PTR [ebp-0x21c],eax
  41de5a:	mov    eax,edx
  41de5c:	mov    edx,esi
  41de5e:	mov    DWORD PTR [ebp-0x220],ecx
  41de64:	mov    cl,0x3e
  41de66:	call   0x42241f
  41de6b:	mov    esi,DWORD PTR [ebp-0x21c]
  41de71:	or     esi,eax
  41de73:	mov    eax,DWORD PTR [ebp-0x220]
  41de79:	or     eax,edx
  41de7b:	push   eax
  41de7c:	push   esi
  41de7d:	push   ebx
  41de7e:	push   edi
  41de7f:	call   0x41594e
  41de84:	mov    esi,DWORD PTR [ebp-0x218]
  41de8a:	cmp    esi,eax
  41de8c:	jne    0x41df42
  41de92:	mov    eax,DWORD PTR [ebp-0x154]
  41de98:	mov    edx,DWORD PTR [ebp-0x150]
  41de9e:	xor    eax,0xcb79b576
  41dea3:	xor    edx,0x9c2b8ae8
  41dea9:	mov    cl,0x2
  41deab:	call   0x408bb8
  41deb0:	mov    esi,eax
  41deb2:	mov    edi,edx
  41deb4:	mov    eax,DWORD PTR [ebp-0x154]
  41deba:	mov    edx,DWORD PTR [ebp-0x150]
  41dec0:	xor    eax,0xcb79b576
  41dec5:	xor    edx,0x9c2b8ae8
  41decb:	mov    cl,0x3e
  41decd:	call   0x42241f
  41ded2:	or     esi,eax
  41ded4:	or     edi,edx
  41ded6:	mov    eax,DWORD PTR [ebp-0x15c]
  41dedc:	mov    edx,DWORD PTR [ebp-0x158]
  41dee2:	xor    eax,0xcb79b576
  41dee7:	xor    edx,0x9c2b8ae8
  41deed:	mov    cl,0x2
  41deef:	call   0x408bb8
  41def4:	mov    ebx,eax
  41def6:	mov    eax,edx
  41def8:	mov    ecx,DWORD PTR [ebp-0x15c]
  41defe:	mov    edx,DWORD PTR [ebp-0x158]
  41df04:	xor    ecx,0xcb79b576
  41df0a:	xor    edx,0x9c2b8ae8
  41df10:	mov    DWORD PTR [ebp-0x224],eax
  41df16:	mov    eax,ecx
  41df18:	mov    cl,0x3e
  41df1a:	call   0x42241f
  41df1f:	or     ebx,eax
  41df21:	mov    eax,DWORD PTR [ebp-0x224]
  41df27:	or     eax,edx
  41df29:	push   eax
  41df2a:	push   ebx
  41df2b:	push   edi
  41df2c:	push   esi
  41df2d:	call   0x41594e
  41df32:	mov    DWORD PTR [ebp-0x178],eax
  41df38:	jmp    0x41f19e
  41df3d:	jmp    0x41f154
  41df42:	lea    eax,[ebp-0x168]
  41df48:	mov    DWORD PTR [ebp-0x164],eax
  41df4e:	mov    eax,DWORD PTR [ebp-0x164]
  41df54:	mov    DWORD PTR [eax],0xa5069bae
  41df5a:	mov    eax,DWORD PTR [ebp-0x168]
  41df60:	xor    eax,0xa5069bae
  41df65:	shr    eax,0x2
  41df68:	mov    ecx,DWORD PTR [ebp-0x168]
  41df6e:	xor    ecx,0xa5069bae
  41df74:	shl    ecx,0x1e
  41df77:	or     eax,ecx
  41df79:	mov    ecx,DWORD PTR [ebp-0x174]
  41df7f:	mov    eax,DWORD PTR [ecx+eax*8+0x78]
  41df83:	mov    DWORD PTR [ebp-0x160],eax
  41df89:	mov    esi,DWORD PTR [ebp-0x160]
  41df8f:	mov    eax,DWORD PTR [ebp-0x154]
  41df95:	mov    edx,DWORD PTR [ebp-0x150]
  41df9b:	xor    eax,0xcb79b576
  41dfa0:	xor    edx,0x9c2b8ae8
  41dfa6:	mov    cl,0x2
  41dfa8:	call   0x408bb8
  41dfad:	mov    edi,eax
  41dfaf:	mov    ebx,edx
  41dfb1:	mov    eax,DWORD PTR [ebp-0x154]
  41dfb7:	jmp    0x41e39e
  41dfbc:	mov    bl,0xa1
  41dfbe:	mov    eax,ds:0xbba5b3a5
  41dfc3:	mov    ebx,0xd1567b79
  41dfc8:	dec    ecx
  41dfc9:	or     eax,0x5f90cfbd
  41dfce:	sar    BYTE PTR [esi-0x41413bb6],0x26
  41dfd5:	cmp    edx,ecx
  41dfd7:	ret    
  41dfd8:	lea    ebp,[eax+0x2182c63a]
  41dfde:	es inc eax
  41dfe0:	in     eax,dx
  41dfe1:	test   DWORD PTR [ebp+0x50],esi
  41dfe4:	imul   esi,esi,0xd9317d79
  41dfea:	lds    esi,FWORD PTR [ebp+0x4e4a89d]
  41dff0:	dec    esi
  41dff1:	push   ebp
  41dff2:	push   es
  41dff3:	xchg   ebp,eax
  41dff4:	pop    ecx
  41dff5:	(bad)  
  41dff6:	jle    0x41dfa6
  41dff8:	in     al,0xd2
  41dffa:	inc    ecx
  41dffb:	jo     0x41e06e
  41dffd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dffe:	xor    DWORD PTR [eax],0x7cdb9485
  41e004:	mov    ebp,0x6fb6adcf
  41e009:	add    ebx,DWORD PTR [esi+0x7e]
  41e00c:	jge    0x41e05c
  41e00e:	daa    
  41e00f:	xor    BYTE PTR [esi+0x41],al
  41e012:	(bad)  
  41e013:	mov    edi,0x36f8ca5b
  41e018:	cmp    al,0xaa
  41e01a:	je     0x41e004
  41e01c:	mov    ch,0x7f
  41e01e:	mov    ds:0xe188e757,al
  41e023:	loope  0x41e07c
  41e025:	imul   ebx,DWORD PTR [esi+edi*4+0x17d9d9f],0x2f8b68c7
  41e030:	addr16 sti 
  41e032:	in     al,dx
  41e033:	mov    esi,DWORD PTR [esi+0x4f4f71d9]
  41e039:	test   eax,0xdb091301
  41e03e:	inc    esp
  41e03f:	stos   DWORD PTR es:[edi],eax
  41e040:	(bad)  
  41e041:	std    
  41e042:	mov    BYTE PTR [edx+eax*8],0xab
  41e046:	icebp  
  41e047:	dec    edi
  41e048:	cmp    eax,0x508ea59c
  41e04d:	ins    DWORD PTR es:[edi],dx
  41e04e:	and    eax,0x6d4d307f
  41e053:	push   ebx
  41e054:	repz out 0x54,eax
  41e057:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e058:	sub    eax,0xbecd58de
  41e05d:	jo     0x41e0cd
  41e05f:	mov    edx,ebx
  41e061:	xor    esp,DWORD PTR [edx+0xc794a7f]
  41e067:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e068:	sbb    BYTE PTR ds:0xc1651f0e,ch
  41e06e:	repz int3 
  41e070:	inc    eax
  41e071:	or     BYTE PTR [ecx+0x65e90cb2],ah
  41e077:	mov    bh,0x55
  41e079:	cmp    BYTE PTR [ecx],ah
  41e07b:	rcr    DWORD PTR [ebx-0x2abd79c5],1
  41e081:	jmp    0xb1982afc
  41e086:	push   ss
  41e087:	das    
  41e088:	lods   al,BYTE PTR ds:[esi]
  41e089:	stos   BYTE PTR es:[edi],al
  41e08a:	xchg   ebp,eax
  41e08b:	and    eax,0xc93b5521
  41e090:	sub    al,0xb9
  41e092:	add    DWORD PTR [esi-0x7e06013a],ebp
  41e098:	aam    0x76
  41e09a:	xchg   DWORD PTR [esi],edx
  41e09c:	push   es
  41e09d:	mov    ch,0x63
  41e09f:	shl    DWORD PTR [ecx],cl
  41e0a1:	std    
  41e0a2:	(bad)  
  41e0a3:	jb     0x41e0f9
  41e0a5:	mov    ds:0xe4d7738a,eax
  41e0aa:	repz pop ecx
  41e0ac:	add    esp,DWORD PTR [edx+0x49baa71a]
  41e0b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e0b3:	(bad)  
  41e0b4:	fisttp WORD PTR [ecx+esi*2+0x7c]
  41e0b8:	or     al,0x8b
  41e0ba:	(bad)  
  41e0bb:	pop    ebp
  41e0bc:	sbb    esp,DWORD PTR [ebp-0x30]
  41e0bf:	push   edx
  41e0c0:	and    al,0xac
  41e0c2:	nop
  41e0c3:	mov    ch,BYTE PTR [ecx+0x31]
  41e0c6:	dec    ebp
  41e0c7:	sahf   
  41e0c8:	das    
  41e0c9:	jle    0x41e0f5
  41e0cb:	jp     0x41e071
  41e0cd:	test   eax,0xd0ddac10
  41e0d2:	sbb    eax,0xf687a312
  41e0d7:	lahf   
  41e0d8:	sub    DWORD PTR [edx+ebx*1+0x6fbfcb85],esp
  41e0df:	cs ffree st(1)
  41e0e2:	test   eax,0xc0914669
  41e0e7:	mov    cl,0x85
  41e0e9:	xor    eax,0x3eb263eb
  41e0ee:	sub    al,0xb2
  41e0f0:	jne    0x41e0ef
  41e0f2:	jge    0x41e132
  41e0f4:	ja     0x41e171
  41e0f6:	or     edi,edi
  41e0f8:	and    ah,BYTE PTR [ebx+ecx*1-0x5a2352d7]
  41e0ff:	adc    BYTE PTR [ecx-0x562027cb],dh
  41e105:	mov    bl,0x3
  41e107:	mov    dh,0xec
  41e109:	mov    esi,ebx
  41e10b:	sbb    esp,DWORD PTR [ebx-0x7]
  41e10e:	leave  
  41e10f:	jo     0x41e173
  41e111:	add    edx,DWORD PTR [edx-0x1883e050]
  41e117:	fidivr WORD PTR [ebp+0x62f8643a]
  41e11d:	mov    es,WORD PTR [edx-0x65ff8730]
  41e123:	scas   al,BYTE PTR es:[edi]
  41e124:	cdq    
  41e125:	inc    ebx
  41e126:	mov    ebp,0x88295ae8
  41e12b:	fisttp QWORD PTR [ebp+0x4c]
  41e12e:	in     eax,0x7e
  41e130:	add    ch,BYTE PTR [ebx+0x69]
  41e133:	xchg   esp,eax
  41e134:	ins    DWORD PTR es:[edi],dx
  41e135:	sahf   
  41e136:	lods   eax,DWORD PTR ds:[esi]
  41e137:	xor    al,0xa2
  41e139:	fild   WORD PTR [ebx-0x7f26123b]
  41e13f:	and    eax,0x1e60a5b
  41e144:	in     al,0xb5
  41e146:	sub    eax,0x5e372733
  41e14b:	push   ss
  41e14c:	or     DWORD PTR [esi+edi*1-0x54],0x4b
  41e151:	pop    esi
  41e152:	push   ecx
  41e153:	loopne 0x41e12d
  41e155:	iret   
  41e156:	test   al,0xd
  41e158:	sbb    al,0xbe
  41e15a:	jmp    0x13f7:0x5458c6a7
  41e161:	sbb    eax,0x7312942b
  41e166:	into   
  41e167:	adc    DWORD PTR [edi+0x75],0x74
  41e16b:	pushf  
  41e16c:	mov    WORD PTR [esi+ecx*1+0x54e08c],?
  41e173:	cdq    
  41e174:	data16 shl BYTE PTR [ecx-0x59],0x34
  41e179:	cdq    
  41e17a:	add    dh,BYTE PTR [ecx-0x4c67eb84]
  41e180:	arpl   sp,bx
  41e182:	lods   eax,DWORD PTR ds:[esi]
  41e183:	jbe    0x41e1e4
  41e185:	push   esi
  41e186:	addr16 ds int3 
  41e189:	xor    dl,BYTE PTR [eax]
  41e18b:	adc    eax,0x8af1d8de
  41e190:	and    DWORD PTR [ecx+0x6d],ecx
  41e193:	imul   ecx,DWORD PTR [eax+ebx*1+0x167d9fbd],0x3cc04af
  41e19e:	rcl    BYTE PTR [ebx],cl
  41e1a0:	retf   0x24bd
  41e1a3:	and    BYTE PTR [ebp+ecx*4-0x53cfb2c5],0x59
  41e1ab:	xchg   ebx,eax
  41e1ac:	mov    cl,0x59
  41e1ae:	or     eax,0x56013940
  41e1b3:	ins    BYTE PTR es:[edi],dx
  41e1b4:	xchg   edx,esp
  41e1b6:	or     dl,bl
  41e1b8:	stc    
  41e1b9:	add    bl,BYTE PTR [ecx+0x4c]
  41e1bc:	jns    0x41e1e4
  41e1be:	test   ch,cl
  41e1c0:	shr    DWORD PTR [eax],cl
  41e1c2:	pop    esp
  41e1c3:	in     eax,dx
  41e1c4:	add    ecx,ebp
  41e1c6:	lea    edx,[ebx-0x2982fe7c]
  41e1cc:	push   cs
  41e1cd:	push   edi
  41e1ce:	addr16 sub al,bl
  41e1d1:	pop    ss
  41e1d2:	out    dx,al
  41e1d3:	out    dx,al
  41e1d4:	mov    esp,edi
  41e1d6:	sbb    BYTE PTR [edi+ecx*8-0x5f5f37f8],dl
  41e1dd:	jbe    0x41e233
  41e1df:	cmc    
  41e1e0:	xchg   edx,eax
  41e1e1:	jno    0x41e206
  41e1e3:	xchg   al,dl
  41e1e5:	sti    
  41e1e6:	pop    eax
  41e1e7:	inc    edx
  41e1e8:	iret   
  41e1e9:	ret    0x67bf
  41e1ec:	xor    bh,BYTE PTR [edx]
  41e1ee:	and    ah,dl
  41e1f0:	fistp  WORD PTR [esi]
  41e1f2:	outs   dx,DWORD PTR ds:[esi]
  41e1f3:	sub    BYTE PTR [eax+0x40842670],bl
  41e1f9:	jle    0x41e18c
  41e1fb:	add    DWORD PTR [edi+0x64305554],edx
  41e201:	scas   eax,DWORD PTR es:[edi]
  41e202:	and    BYTE PTR [ebx],ah
  41e204:	jns    0x41e26a
  41e206:	iret   
  41e207:	push   es
  41e208:	mov    al,ds:0x4b03fcf
  41e20d:	pop    edx
  41e20e:	sub    al,0x4b
  41e210:	push   edi
  41e211:	arpl   WORD PTR ss:[esi-0x5d],bx
  41e215:	pop    ds
  41e216:	rcr    BYTE PTR [edi-0x335cfdb],0x2b
  41e21d:	pop    ds
  41e21e:	sub    dh,ch
  41e220:	mov    dh,0xb2
  41e222:	in     eax,0x81
  41e224:	xor    BYTE PTR [ecx+0x7e54b48b],ah
  41e22a:	aad    0x70
  41e22c:	mov    edx,0xff47815a
  41e231:	xor    BYTE PTR [esi-0x6f1a3531],dl
  41e237:	xor    al,0x2d
  41e239:	outs   dx,BYTE PTR ds:[esi]
  41e23a:	inc    esp
  41e23b:	rcr    BYTE PTR [esi],cl
  41e23d:	mov    ebp,0x2af112f4
  41e242:	xor    bh,bh
  41e244:	arpl   WORD PTR [esi+0x2b],cx
  41e247:	adc    DWORD PTR [ecx],0xffffff89
  41e24a:	std    
  41e24b:	leave  
  41e24c:	fiadd  DWORD PTR [ebx-0x20]
  41e24f:	push   0x42
  41e251:	imul   ch
  41e253:	push   ss
  41e254:	and    BYTE PTR [esp-0xda9ab8b],0xc1
  41e25c:	sbb    eax,0xd893ece1
  41e261:	out    0xd3,al
  41e263:	stos   BYTE PTR es:[edi],al
  41e264:	nop
  41e265:	mov    bh,0xc0
  41e267:	inc    edx
  41e268:	inc    esi
  41e269:	jns    0x41e289
  41e26b:	out    dx,al
  41e26c:	lods   eax,DWORD PTR ds:[esi]
  41e26d:	stos   DWORD PTR es:[edi],eax
  41e26e:	add    BYTE PTR [ebp+0x265e9878],ch
  41e274:	pusha  
  41e275:	mov    esp,ecx
  41e277:	out    dx,al
  41e278:	aaa    
  41e279:	push   eax
  41e27a:	and    ebx,0xffec8ce9
  41e280:	ja     0x41e22c
  41e282:	iret   
  41e283:	les    edx,FWORD PTR [esi-0x40ca050f]
  41e289:	(bad)  
  41e28a:	in     eax,dx
  41e28b:	cwde   
  41e28c:	lea    ecx,[edi+ebp*4-0x62]
  41e290:	call   0xdadce19e
  41e295:	mul    BYTE PTR [ebx]
  41e297:	xchg   edx,eax
  41e298:	hlt    
  41e299:	mov    eax,ds:0xe8b7de89
  41e29e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e29f:	sub    bh,BYTE PTR ds:0x336e0666
  41e2a5:	mov    BYTE PTR [esi+0x6b],dh
  41e2a8:	out    dx,al
  41e2a9:	mov    cl,0xb0
  41e2ab:	push   ecx
  41e2ac:	pop    edi
  41e2ad:	loope  0x41e275
  41e2af:	fimul  DWORD PTR [edx+0x591475ca]
  41e2b5:	pop    ebp
  41e2b6:	leave  
  41e2b7:	or     al,dh
  41e2b9:	mov    bh,0x67
  41e2bb:	push   edi
  41e2bc:	jno    0x41e2b9
  41e2be:	(bad)
  41e2c2:	pop    ss
  41e2c3:	mov    bl,0xf9
  41e2c5:	cli    
  41e2c6:	cmc    
  41e2c7:	sbb    al,0xda
  41e2c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e2ca:	jge    0x41e2dd
  41e2cc:	das    
  41e2cd:	push   edx
  41e2ce:	shr    BYTE PTR [ebx-0xc19bd37],1
  41e2d4:	sahf   
  41e2d5:	ret    
  41e2d6:	ja     0x41e317
  41e2d8:	inc    ebx
  41e2d9:	pop    ebp
  41e2da:	mov    ch,0x2f
  41e2dc:	dec    esi
  41e2dd:	add    al,0xff
  41e2df:	jmp    0x5790e1ee
  41e2e4:	dec    esi
  41e2e5:	nop
  41e2e6:	dec    edx
  41e2e7:	xchg   DWORD PTR [ebx-0x51],eax
  41e2ea:	push   ds
  41e2eb:	pop    eax
  41e2ec:	sahf   
  41e2ed:	pop    esp
  41e2ee:	addr16 retf 0xcd01
  41e2f2:	stc    
  41e2f3:	aam    0x9a
  41e2f5:	jg     0x41e2b7
  41e2f7:	outs   dx,BYTE PTR ds:[esi]
  41e2f8:	shl    bl,0x9e
  41e2fb:	push   cs
  41e2fc:	test   al,0x63
  41e2fe:	xchg   esi,eax
  41e2ff:	loope  0x41e37d
  41e301:	add    ebp,DWORD PTR [esi-0x28]
  41e304:	or     eax,0x93e2fb55
  41e309:	xchg   edi,eax
  41e30a:	and    BYTE PTR [edx-0x6face23a],bl
  41e310:	out    dx,eax
  41e311:	stc    
  41e312:	lods   eax,DWORD PTR ds:[esi]
  41e313:	sbb    eax,ebp
  41e315:	add    DWORD PTR [edi-0x5a],ebx
  41e318:	push   ebx
  41e319:	fld    QWORD PTR [esi+0x74eb0be5]
  41e31f:	jp     0x41e343
  41e321:	cwde   
  41e322:	js     0x41e311
  41e324:	mov    ecx,0xa552c8b
  41e329:	and    al,0x88
  41e32b:	mov    ebp,0xab23c68d
  41e330:	(bad)  
  41e331:	mov    esp,0x3132dba
  41e336:	jno    0x41e349
  41e338:	enter  0x6077,0x9f
  41e33c:	add    dl,ah
  41e33e:	int3   
  41e33f:	jmp    FWORD PTR [ecx-0x3bff488]
  41e345:	dec    ecx
  41e346:	arpl   ax,ax
  41e348:	adc    esp,ecx
  41e34a:	inc    ebx
  41e34b:	hlt    
  41e34c:	loopne 0x41e35d
  41e34e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e34f:	pusha  
  41e350:	push   eax
  41e351:	into   
  41e352:	(bad)  
  41e353:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e354:	fnstsw WORD PTR [edx+0x2a]
  41e357:	xchg   edi,eax
  41e358:	jae    0x41e3ab
  41e35a:	xlat   BYTE PTR ds:[ebx]
  41e35b:	in     al,dx
  41e35c:	jno    0x41e35b
  41e35e:	popa   
  41e35f:	pop    esp
  41e360:	ret    0x6876
  41e363:	add    al,0x4c
  41e365:	es pusha 
  41e367:	dec    esp
  41e368:	rcr    BYTE PTR [ebp-0x62],cl
  41e36b:	(bad)  
  41e36c:	(bad)  
  41e36d:	hlt    
  41e36e:	mov    dl,0x26
  41e370:	add    BYTE PTR [ecx-0x3a],dh
  41e373:	(bad)  
  41e374:	jmp    0x7206:0xd8a321b5
  41e37b:	std    
  41e37c:	adc    al,0x2
  41e37e:	imul   eax,DWORD PTR es:[eax-0x6c9b556a],0xf225b4f2
  41e389:	(bad)  
  41e38a:	jg     0x41e3fb
  41e38c:	test   DWORD PTR [ecx-0x3b],ebp
  41e38f:	push   ds
  41e390:	lods   al,BYTE PTR ds:[esi]
  41e391:	ret    0xd961
  41e394:	mov    ah,BYTE PTR [edx-0x66208970]
  41e39a:	jmp    0x8b6a0930
  41e39f:	xchg   ebp,eax
  41e3a0:	mov    al,0xfe
  41e3a2:	(bad)  
  41e3a3:	push   DWORD PTR ds:0xcb79b576
  41e3a9:	xor    edx,0x9c2b8ae8
  41e3af:	mov    cl,0x3e
  41e3b1:	call   0x42241f
  41e3b6:	or     edi,eax
  41e3b8:	or     ebx,edx
  41e3ba:	mov    eax,DWORD PTR [ebp-0x15c]
  41e3c0:	mov    edx,DWORD PTR [ebp-0x158]
  41e3c6:	xor    eax,0xcb79b576
  41e3cb:	xor    edx,0x9c2b8ae8
  41e3d1:	mov    cl,0x2
  41e3d3:	call   0x408bb8
  41e3d8:	mov    ecx,edx
  41e3da:	mov    edx,DWORD PTR [ebp-0x15c]
  41e3e0:	mov    DWORD PTR [ebp-0x228],esi
  41e3e6:	mov    esi,DWORD PTR [ebp-0x158]
  41e3ec:	xor    edx,0xcb79b576
  41e3f2:	xor    esi,0x9c2b8ae8
  41e3f8:	mov    DWORD PTR [ebp-0x22c],eax
  41e3fe:	mov    eax,edx
  41e400:	mov    edx,esi
  41e402:	mov    DWORD PTR [ebp-0x230],ecx
  41e408:	mov    cl,0x3e
  41e40a:	call   0x42241f
  41e40f:	mov    esi,DWORD PTR [ebp-0x22c]
  41e415:	or     esi,eax
  41e417:	mov    eax,DWORD PTR [ebp-0x230]
  41e41d:	or     eax,edx
  41e41f:	push   eax
  41e420:	push   esi
  41e421:	jmp    0x41e808
  41e426:	rcl    BYTE PTR [ebp+0x47],cl
  41e429:	cmp    ecx,DWORD PTR [ebx+0x3b]
  41e42c:	mov    cl,0xb7
  41e42e:	scas   eax,DWORD PTR es:[edi]
  41e42f:	xor    ebx,DWORD PTR [ecx+edx*8]
  41e432:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e433:	popa   
  41e434:	and    BYTE PTR [esi-0x413f98e4],bl
  41e43a:	dec    edx
  41e43b:	les    edi,FWORD PTR [esi+0x446ab7be]
  41e441:	mov    eax,DWORD PTR [ebp+0x54]
  41e444:	or     al,0xb6
  41e446:	cli    
  41e447:	push   0xffffffa8
  41e449:	cli    
  41e44a:	dec    esi
  41e44b:	outs   dx,BYTE PTR ds:[esi]
  41e44c:	ret    
  41e44d:	(bad)  
  41e44e:	popf   
  41e44f:	dec    ebp
  41e450:	jmp    0x6478:0x992ed63c
  41e457:	repz pop edi
  41e45a:	out    dx,al
  41e45b:	pop    ebp
  41e45c:	lods   al,BYTE PTR ds:[esi]
  41e45d:	in     al,dx
  41e45e:	pop    ecx
  41e45f:	sahf   
  41e460:	sbb    cl,BYTE PTR [eax+0x37]
  41e463:	retf   
  41e464:	lods   eax,DWORD PTR ds:[esi]
  41e465:	xchg   esp,eax
  41e466:	outs   dx,BYTE PTR ds:[esi]
  41e467:	push   ss
  41e468:	push   edx
  41e469:	out    dx,eax
  41e46a:	xchg   BYTE PTR [eax-0x1e],bh
  41e46d:	je     0x41e4e1
  41e46f:	xor    ch,ah
  41e471:	ret    0xfda6
  41e474:	mov    esi,0xa568bd09
  41e479:	in     al,dx
  41e47a:	shl    BYTE PTR [ebx+edx*4+0x4f],0x35
  41e47f:	sbb    eax,0x85752ac5
  41e484:	es enter 0x74e5,0x45
  41e489:	jl     0x41e4d3
  41e48b:	popa   
  41e48c:	xchg   edx,eax
  41e48d:	adc    al,0x68
  41e48f:	sbb    bh,BYTE PTR [edx]
  41e491:	stc    
  41e492:	pusha  
  41e493:	sbb    eax,DWORD PTR [esi]
  41e495:	xor    ah,BYTE PTR [ebp+0x2b25fec0]
  41e49b:	sti    
  41e49c:	nop
  41e49d:	push   eax
  41e49e:	in     eax,dx
  41e49f:	xor    DWORD PTR [ebx+0x7f92266b],0x829ed1e6
  41e4a9:	pop    eax
  41e4aa:	bound  ebp,QWORD PTR [eax+0x69eb99cd]
  41e4b0:	icebp  
  41e4b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e4b2:	packsswb mm1,QWORD PTR [ebx-0x80]
  41e4b6:	push   es
  41e4b7:	mov    ebx,DWORD PTR ds:0xd8968d25
  41e4bd:	hlt    
  41e4be:	test   DWORD PTR cs:[edi-0x541d23d2],esi
  41e4c5:	fadd   st,st(4)
  41e4c7:	dec    edi
  41e4c8:	xor    edi,0x47
  41e4cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e4cc:	in     al,0x5b
  41e4ce:	add    al,0x5c
  41e4d0:	mov    ds:0xbd9bfd24,al
  41e4d5:	push   ds
  41e4d6:	adc    al,0x98
  41e4d8:	faddp  st(2),st
  41e4da:	add    ch,dl
  41e4dc:	out    0x84,eax
  41e4de:	sbb    bl,BYTE PTR [ecx]
  41e4e0:	idiv   BYTE PTR ds:0x7f8443b3
  41e4e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e4e7:	ss mov ah,0x7f
  41e4ea:	ss push 0x40f2ab5d
  41e4f0:	or     BYTE PTR [ebx-0x256ef6c5],dl
  41e4f6:	mov    ebp,0x1dcc8e3c
  41e4fb:	push   esp
  41e4fc:	adc    bh,0xc1
  41e4ff:	push   esp
  41e500:	loope  0x41e56d
  41e502:	in     al,0x7b
  41e504:	push   esi
  41e505:	pop    edx
  41e506:	ja     0x41e48c
  41e508:	mov    esi,0x9847f246
  41e50d:	addr16 pop esp
  41e50f:	dec    esi
  41e510:	addr16 in eax,0x45
  41e513:	push   0xffffffeb
  41e515:	dec    esi
  41e516:	dec    ebp
  41e517:	adc    al,0xf7
  41e519:	dec    esi
  41e51a:	dec    esi
  41e51b:	test   esi,ecx
  41e51d:	mov    eax,ebx
  41e51f:	lods   al,BYTE PTR ds:[esi]
  41e520:	cmp    eax,0x79c4b628
  41e525:	div    bl
  41e527:	daa    
  41e528:	push   ecx
  41e529:	pusha  
  41e52a:	jle    0x41e53f
  41e52c:	push   es
  41e52d:	out    dx,eax
  41e52e:	mov    dh,0x3a
  41e530:	jb     0x41e4de
  41e532:	adc    ecx,eax
  41e534:	addr16 je 0x41e5aa
  41e537:	push   eax
  41e538:	cs repnz aaa 
  41e53b:	data16 je 0x41e566
  41e53e:	cmp    al,0x1d
  41e540:	mov    dl,0x1c
  41e542:	mov    esp,0x28d8b463
  41e547:	ins    DWORD PTR es:[edi],dx
  41e548:	cdq    
  41e549:	jnp    0x41e51e
  41e54b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e54c:	nop
  41e54d:	mov    bl,0xdd
  41e54f:	dec    BYTE PTR [ebp-0x5a]
  41e552:	scas   eax,DWORD PTR es:[edi]
  41e553:	leave  
  41e554:	pop    esi
  41e555:	lds    eax,FWORD PTR [edi+0x3b]
  41e558:	out    0x95,eax
  41e55a:	add    BYTE PTR [ebx],cl
  41e55c:	sbb    edx,DWORD PTR [ecx]
  41e55e:	int3   
  41e55f:	pusha  
  41e560:	das    
  41e561:	scas   al,BYTE PTR es:[edi]
  41e562:	retf   0x4ab7
  41e565:	stc    
  41e566:	(bad)  
  41e567:	fdivr  st(5),st
  41e569:	cli    
  41e56a:	das    
  41e56b:	jmp    0xe08:0x6e86ab64
  41e572:	addr16 xchg edi,eax
  41e574:	or     al,0x75
  41e576:	test   eax,0x99fbb1f1
  41e57b:	jl     0x41e588
  41e57d:	clc    
  41e57e:	jns    0x41e51b
  41e580:	push   0xffffffdb
  41e582:	mov    al,0x9
  41e584:	pop    esp
  41e585:	pop    es
  41e586:	push   esi
  41e587:	jge    0x41e5d3
  41e589:	es ret 0x22df
  41e58d:	imul   BYTE PTR [edx+eiz*2-0x39]
  41e591:	call   0xd3ef:0x9909e2e2
  41e598:	mov    ecx,0xa169881b
  41e59d:	mov    ah,0x74
  41e59f:	lods   al,BYTE PTR ds:[esi]
  41e5a0:	pusha  
  41e5a1:	out    dx,eax
  41e5a2:	mov    ah,BYTE PTR [ebx-0x79]
  41e5a5:	rep stos BYTE PTR es:[edi],al
  41e5a7:	idiv   BYTE PTR [esi-0x6875bbb3]
  41e5ad:	pusha  
  41e5ae:	sahf   
  41e5af:	cmc    
  41e5b0:	or     al,0x8c
  41e5b2:	icebp  
  41e5b3:	arpl   si,dx
  41e5b5:	scas   eax,DWORD PTR es:[edi]
  41e5b6:	(bad)  
  41e5b8:	bound  edi,QWORD PTR [ebx-0x2c]
  41e5bb:	imul   esp,DWORD PTR fs:[edx],0xffffffcb
  41e5bf:	mov    esi,0xe7a95a65
  41e5c4:	push   ss
  41e5c5:	iret   
  41e5c6:	adc    dl,BYTE PTR [edx]
  41e5c8:	pop    esi
  41e5c9:	cwde   
  41e5ca:	xor    al,0xa8
  41e5cc:	ficomp WORD PTR [edx]
  41e5ce:	xchg   esp,eax
  41e5cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e5d0:	pop    edi
  41e5d1:	xchg   ecx,eax
  41e5d2:	jle    0x41e5f6
  41e5d4:	mov    ch,0x13
  41e5d6:	pop    ebp
  41e5d7:	mov    eax,0xeb07716d
  41e5dc:	mov    dh,0x9d
  41e5de:	sub    BYTE PTR [ecx+0x7a],dh
  41e5e1:	fnstcw WORD PTR [edi+0x33e1c004]
  41e5e7:	xor    al,0xd7
  41e5e9:	inc    edx
  41e5ea:	sbb    dl,bl
  41e5ec:	in     eax,0xf3
  41e5ee:	inc    ebp
  41e5ef:	xchg   BYTE PTR [ecx-0x3e],ch
  41e5f2:	std    
  41e5f3:	mov    cl,BYTE PTR [esi+0x2e]
  41e5f6:	aam    0x31
  41e5f8:	push   cs
  41e5f9:	xor    BYTE PTR [esi+0x5a],dl
  41e5fc:	repnz and al,0xc9
  41e5ff:	jp     0x41e5db
  41e601:	dec    esp
  41e602:	pop    edi
  41e603:	mov    esp,ebp
  41e605:	or     BYTE PTR [eax-0x1a0576f8],bh
  41e60b:	push   edx
  41e60c:	mov    dl,ch
  41e60e:	lahf   
  41e60f:	push   es
  41e610:	(bad)  
  41e611:	shl    BYTE PTR [eax-0x41],1
  41e614:	iret   
  41e615:	xchg   ebp,eax
  41e616:	adc    al,0xa6
  41e618:	ss inc ecx
  41e61a:	test   edi,ebx
  41e61c:	sub    BYTE PTR [eax+ecx*4-0x26],ah
  41e620:	pop    esp
  41e621:	jae    0x41e5c5
  41e623:	call   0xb4550913
  41e628:	mov    BYTE PTR [ecx],bl
  41e62a:	fwait
  41e62b:	push   ss
  41e62c:	push   edi
  41e62d:	or     al,0x21
  41e62f:	nop
  41e630:	ins    DWORD PTR es:[edi],dx
  41e631:	and    DWORD PTR [ebx],edx
  41e633:	push   ecx
  41e634:	and    BYTE PTR [ebx-0x3e8c8114],0xd9
  41e63b:	mov    ch,0x67
  41e63d:	and    DWORD PTR [edx+edi*1-0x15],esp
  41e641:	in     eax,0x2d
  41e643:	call   0x8509:0xb71a4667
  41e64a:	push   0x3b
  41e64c:	int3   
  41e64d:	xlat   BYTE PTR ds:[ebx]
  41e64e:	icebp  
  41e64f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e650:	fild   WORD PTR [edi+0x41]
  41e653:	loope  0x41e66d
  41e655:	in     eax,0x21
  41e657:	sub    al,0xf8
  41e659:	adc    al,0xd1
  41e65b:	pop    ecx
  41e65c:	inc    ecx
  41e65d:	pop    ss
  41e65e:	mov    dh,BYTE PTR [esi]
  41e660:	adc    eax,esi
  41e662:	and    al,0x8c
  41e664:	(bad)  
  41e665:	repz cs sub al,0x73
  41e669:	(bad)  
  41e66a:	fsubr  DWORD PTR [ecx+0x20e5fd0b]
  41e670:	jb     0x41e6b7
  41e672:	ret    0x40a4
  41e675:	(bad)  
  41e677:	(bad)  [edx-0x78]
  41e67a:	push   esp
  41e67b:	aas    
  41e67c:	adc    DWORD PTR [edi+0x79],edi
  41e67f:	fs mov esi,0x8a41edc
  41e685:	aam    0xf
  41e687:	shr    ecx,1
  41e689:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e68a:	int3   
  41e68b:	dec    edi
  41e68c:	fidivr WORD PTR [ebx-0x46]
  41e68f:	dec    esi
  41e690:	cld    
  41e691:	bnd jns 0x41e661
  41e694:	dec    esp
  41e695:	(bad)
  41e699:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e69a:	pop    esi
  41e69b:	dec    ecx
  41e69c:	jne    0x41e679
  41e69e:	outs   dx,DWORD PTR ds:[esi]
  41e69f:	cmp    dh,bl
  41e6a1:	add    BYTE PTR [eax-0x692de3e7],ch
  41e6a7:	cmp    cl,BYTE PTR ds:0xc907bd5f
  41e6ad:	mov    dl,0x94
  41e6af:	xchg   esi,eax
  41e6b0:	call   0xbfb3:0xfd159199
  41e6b7:	fnstenv [ebx+0x1b7efc3f]
  41e6bd:	std    
  41e6be:	sub    al,0xf2
  41e6c0:	xor    al,0x69
  41e6c2:	outs   dx,DWORD PTR ds:[esi]
  41e6c3:	data16 adc al,0x8c
  41e6c6:	jne    0x41e681
  41e6c8:	loop   0x41e6cf
  41e6ca:	inc    ebx
  41e6cb:	das    
  41e6cc:	rcr    esp,0xff
  41e6cf:	xlat   BYTE PTR ds:[ebx]
  41e6d0:	shl    BYTE PTR [eax+0x5e],1
  41e6d3:	xchg   edi,eax
  41e6d4:	xchg   ecx,eax
  41e6d5:	loope  0x41e754
  41e6d7:	int3   
  41e6d8:	sar    DWORD PTR [ecx+ebx*1],cl
  41e6db:	adc    eax,0xfe5666b7
  41e6e0:	pop    edx
  41e6e1:	cs sbb al,0xe1
  41e6e4:	push   edi
  41e6e5:	xchg   ebx,eax
  41e6e6:	xchg   esi,eax
  41e6e7:	test   DWORD PTR [edx-0xf],0x82a48673
  41e6ee:	in     al,dx
  41e6ef:	mov    eax,?
  41e6f1:	mov    ah,0xe0
  41e6f3:	jle    0x41e71a
  41e6f5:	call   0xe743:0x901f4cad
  41e6fc:	xchg   ah,ch
  41e6fe:	jnp    0x41e727
  41e700:	(bad)  
  41e701:	lods   eax,DWORD PTR ds:[esi]
  41e702:	xlat   BYTE PTR ds:[ebx]
  41e703:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e704:	nop
  41e705:	cwde   
  41e706:	(bad)  
  41e707:	scas   al,BYTE PTR es:[edi]
  41e708:	mov    WORD PTR [ecx-0xf],fs
  41e70b:	test   BYTE PTR [eax],bl
  41e70d:	jb     0x41e786
  41e70f:	bnd repz js 0x41e704
  41e713:	aam    0x6b
  41e715:	xchg   edx,ebp
  41e717:	test   al,0x9f
  41e719:	push   cs
  41e71a:	mov    al,0x18
  41e71c:	ret    0x4cb
  41e71f:	sar    BYTE PTR [ebp-0x4f394c3f],1
  41e725:	inc    edi
  41e726:	clc    
  41e727:	ficom  WORD PTR [eax]
  41e729:	fcmovu st,st(0)
  41e72b:	mov    cl,0xe9
  41e72d:	push   esp
  41e72e:	call   0xbf5c:0xf38dc728
  41e735:	mov    al,ds:0x7dd63cbc
  41e73a:	loope  0x41e787
  41e73c:	out    0xd8,al
  41e73e:	xchg   edi,eax
  41e73f:	test   DWORD PTR [esi+0x26],ecx
  41e742:	stos   BYTE PTR es:[edi],al
  41e743:	ficom  WORD PTR [ebx]
  41e745:	(bad)  
  41e746:	dec    edx
  41e747:	pushf  
  41e748:	mov    ecx,0xc7e1bec1
  41e74d:	xchg   bh,dh
  41e74f:	ficom  DWORD PTR es:[eax-0x7d907679]
  41e756:	mov    edx,0xe4b67664
  41e75b:	mov    eax,ds:0xc51d93fe
  41e760:	xor    BYTE PTR [edx],0xd4
  41e763:	repnz pop ss
  41e765:	inc    ebp
  41e766:	ja     0x41e731
  41e768:	lock loope 0x41e6fb
  41e76b:	inc    ebp
  41e76c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e76d:	push   esp
  41e76e:	pop    ebx
  41e76f:	and    edi,DWORD PTR [ecx-0x46]
  41e772:	rcl    esi,cl
  41e774:	mov    ah,BYTE PTR [ecx]
  41e776:	sbb    eax,0xf10b3af1
  41e77b:	mov    dl,0x77
  41e77d:	pop    ss
  41e77e:	fwait
  41e77f:	and    DWORD PTR [edx-0x54],eax
  41e782:	fadd   DWORD PTR [edx]
  41e784:	into   
  41e785:	into   
  41e786:	stc    
  41e787:	fsub   QWORD PTR [ebp+0x67e611c3]
  41e78d:	or     al,0xb6
  41e78f:	push   edi
  41e790:	jle    0x41e773
  41e792:	imul   eax,DWORD PTR [eax-0x3b],0x67a16b41
  41e799:	sbb    al,0x29
  41e79b:	add    BYTE PTR [ecx+esi*8],al
  41e79e:	aam    0xe7
  41e7a0:	ror    DWORD PTR [ecx],cl
  41e7a2:	sbb    eax,0x263dad09
  41e7a7:	or     DWORD PTR [esi],ebx
  41e7a9:	push   ss
  41e7aa:	add    ebx,DWORD PTR [edi]
  41e7ac:	test   eax,0x90b7a6bb
  41e7b1:	test   eax,0x8813cfbe
  41e7b6:	in     al,dx
  41e7b7:	xchg   ebp,eax
  41e7b8:	fild   DWORD PTR [eax]
  41e7ba:	push   DWORD PTR [esi]
  41e7bc:	repz ror BYTE PTR [edx+esi*1-0x50],cl
  41e7c1:	push   ds
  41e7c2:	mov    ch,0x65
  41e7c4:	cmp    dh,cl
  41e7c6:	in     eax,dx
  41e7c7:	fs inc ebx
  41e7c9:	mov    edi,0x61810ea8
  41e7ce:	or     al,0x1c
  41e7d0:	sub    al,0x87
  41e7d2:	sub    eax,0x22a1522
  41e7d7:	stc    
  41e7d8:	dec    eax
  41e7d9:	daa    
  41e7da:	out    0xf9,al
  41e7dc:	sbb    esi,DWORD PTR [edi+ebx*4-0x50]
  41e7e0:	les    edx,FWORD PTR [ebx]
  41e7e2:	ins    DWORD PTR es:[edi],dx
  41e7e3:	mov    dh,0xa0
  41e7e5:	cmp    esi,DWORD PTR [esi]
  41e7e7:	addr16 dec esp
  41e7e9:	add    ecx,DWORD PTR [esi]
  41e7eb:	xchg   edi,eax
  41e7ec:	inc    esp
  41e7ed:	xchg   di,ax
  41e7ef:	mov    eax,0x97243cf3
  41e7f4:	jl     0x41e7c3
  41e7f6:	leave  
  41e7f7:	dec    eax
  41e7f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e7f9:	xchg   edx,eax
  41e7fa:	xchg   ebp,eax
  41e7fb:	or     eax,0xf6fe9eab
  41e800:	jl     0x41e845
  41e802:	xor    ah,BYTE PTR [eax+0x2cc50bfa]
  41e808:	push   ebx
  41e809:	push   edi
  41e80a:	call   0x41594e
  41e80f:	mov    esi,DWORD PTR [ebp-0x228]
  41e815:	cmp    esi,eax
  41e817:	jmp    0x41ebfe
  41e81c:	mov    dh,0x8
  41e81e:	xor    al,0xa5
  41e820:	mov    ah,0xb9
  41e822:	mov    esp,0xddc4c918
  41e827:	nop
  41e828:	stc    
  41e829:	shl    BYTE PTR [edx-0x23],cl
  41e82c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e82d:	outs   dx,DWORD PTR ds:[esi]
  41e82e:	sar    BYTE PTR [esi-0x41413bb6],0x66
  41e835:	sub    al,0x99
  41e837:	mov    bh,dh
  41e839:	xor    esp,ebx
  41e83b:	clc    
  41e83c:	xor    al,0x55
  41e83e:	xlat   BYTE PTR ds:[ebx]
  41e83f:	mov    edx,0x3ed4f163
  41e844:	adc    al,0x8f
  41e846:	dec    eax
  41e847:	push   ecx
  41e848:	sbb    ebp,DWORD PTR [edx+0xd8c1132]
  41e84e:	imul   esi,DWORD PTR [ebx],0x6516d00c
  41e854:	pop    ecx
  41e855:	or     DWORD PTR [esi-0x3a],0x33b66e6d
  41e85c:	aam    0x2b
  41e85e:	inc    eax
  41e85f:	aam    0x61
  41e861:	xchg   esp,eax
  41e862:	dec    esp
  41e863:	xchg   esi,eax
  41e864:	mov    edx,0xefca8121
  41e869:	add    eax,0x739c9ce2
  41e86e:	hlt    
  41e86f:	scas   al,BYTE PTR es:[edi]
  41e870:	mov    bl,0x7
  41e872:	sti    
  41e873:	xor    eax,0x739887d0
  41e878:	dec    edx
  41e879:	pop    edi
  41e87a:	stc    
  41e87b:	jae    0x41e866
  41e87d:	fs pop esi
  41e87f:	scas   eax,DWORD PTR es:[edi]
  41e880:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e881:	pop    edx
  41e882:	push   esp
  41e883:	int    0x47
  41e885:	dec    ecx
  41e886:	ficomp DWORD PTR [eax-0x27a63eb3]
  41e88c:	pop    ds
  41e88d:	es call 0xa6ca:0xc6945faf
  41e895:	jae    0x41e8ee
  41e897:	pop    edi
  41e898:	jecxz  0x41e865
  41e89a:	cmp    al,0xdb
  41e89c:	and    al,dl
  41e89e:	retf   
  41e89f:	pop    eax
  41e8a0:	sub    dl,bl
  41e8a2:	mov    edi,DWORD PTR ds:0xd24f9645
  41e8a8:	daa    
  41e8a9:	clc    
  41e8aa:	mov    eax,0xdad0e100
  41e8af:	std    
  41e8b0:	nop
  41e8b1:	add    al,0xf
  41e8b3:	repz mov esi,0xde30b2b0
  41e8b9:	xor    eax,0xf7227854
  41e8be:	int    0x32
  41e8c0:	in     eax,0x3
  41e8c2:	cli    
  41e8c3:	stos   DWORD PTR es:[edi],eax
  41e8c4:	add    ebp,ebx
  41e8c6:	or     al,0x8d
  41e8c8:	jae    0x41e850
  41e8ca:	mov    esp,0xc483bff5
  41e8cf:	(bad)  
  41e8d0:	jno    0x41e908
  41e8d2:	fcom   DWORD PTR [ecx+0x41]
  41e8d5:	icebp  
  41e8d6:	sbb    edx,ebx
  41e8d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8d9:	jl     0x41e8a7
  41e8db:	mov    bl,0xfd
  41e8dd:	fstp   DWORD PTR ds:0xf73e76bc
  41e8e3:	mov    edi,0x33e55ee6
  41e8e8:	and    eax,DWORD PTR [edi]
  41e8ea:	cs imul ecx,ebp,0xe4b528da
  41e8f1:	sbb    DWORD PTR [edi+ebx*4-0x3c],0x2ca44c24
  41e8f9:	adc    DWORD PTR [eax+0x1a3dc749],ecx
  41e8ff:	hlt    
  41e900:	out    0x1e,al
  41e902:	jg     0x41e8bb
  41e904:	push   ebx
  41e905:	push   esp
  41e906:	mov    dl,0xcc
  41e908:	mov    gs,WORD PTR [ebx+0x28]
  41e90b:	or     cl,dh
  41e90d:	xchg   ebx,eax
  41e90e:	cmp    eax,0x8e6da2aa
  41e913:	data16 add al,0xf4
  41e916:	adc    al,0xa3
  41e918:	arpl   WORD PTR [esi],dx
  41e91a:	pop    ds
  41e91b:	xchg   esi,eax
  41e91c:	push   esi
  41e91d:	mov    dh,0xf
  41e91f:	lds    esp,FWORD PTR [esi+0xe]
  41e922:	add    BYTE PTR [eax-0x3f],bh
  41e925:	xchg   esp,eax
  41e926:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e927:	std    
  41e928:	fmul   QWORD PTR [edx+0x6f6c6a7e]
  41e92e:	inc    eax
  41e92f:	jns    0x41e92e
  41e931:	pop    es
  41e932:	sti    
  41e933:	das    
  41e934:	pop    ss
  41e935:	(bad)  
  41e936:	jbe    0x41e8c6
  41e938:	sbb    esi,edi
  41e93a:	sub    al,0x2c
  41e93c:	jbe    0x41e935
  41e93e:	xor    eax,0xd4587655
  41e943:	pop    esp
  41e944:	leave  
  41e945:	push   ebp
  41e946:	into   
  41e947:	push   esp
  41e948:	inc    edi
  41e949:	adc    edx,DWORD PTR [eax-0x1f]
  41e94c:	enter  0xe8a4,0xb2
  41e950:	addr16 aad 0x92
  41e953:	pop    eax
  41e954:	inc    eax
  41e955:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e956:	test   al,0x6f
  41e958:	repz add BYTE PTR [esp+ecx*8-0x44],0xde
  41e95e:	xchg   BYTE PTR [eax-0x28e67a8c],bl
  41e964:	inc    esp
  41e965:	aam    0x28
  41e967:	cli    
  41e968:	stos   DWORD PTR es:[edi],eax
  41e969:	add    eax,0xd3b4510e
  41e96e:	lods   eax,DWORD PTR ds:[esi]
  41e96f:	inc    edi
  41e970:	dec    ecx
  41e971:	xchg   bl,bh
  41e973:	push   0xffffffbd
  41e975:	or     ch,BYTE PTR [ebx+0x4b]
  41e978:	mov    bh,0xff
  41e97a:	int    0xbe
  41e97c:	mov    WORD PTR [ebx],ss
  41e97e:	push   0x6e
  41e980:	jne    0x41e97f
  41e982:	test   DWORD PTR [edi-0x2e],esp
  41e985:	ficomp WORD PTR [edx]
  41e987:	in     al,dx
  41e988:	rol    BYTE PTR [eax+0x32],0xaa
  41e98c:	les    edx,FWORD PTR [eax+0x34bde140]
  41e992:	clc    
  41e993:	mov    esi,0xbd04d95a
  41e998:	xchg   ecx,eax
  41e999:	shl    DWORD PTR ds:0x6667eedc,cl
  41e99f:	in     eax,0xc
  41e9a1:	jb     0x41e945
  41e9a3:	jae    0x41e9af
  41e9a5:	jnp    0x41e93d
  41e9a7:	mov    bh,0x2a
  41e9a9:	dec    ecx
  41e9aa:	mov    edi,0xc4f22cad
  41e9af:	jno    0x41e993
  41e9b1:	mov    eax,ds:0x97ba5415
  41e9b6:	out    0x53,al
  41e9b8:	(bad)  
  41e9b9:	jle    0x41e9f0
  41e9bb:	sub    al,0x7c
  41e9bd:	xor    eax,0xd8d9120
  41e9c2:	std    
  41e9c3:	dec    ecx
  41e9c4:	mov    cl,0x6d
  41e9c6:	mov    ds:0xb8588688,al
  41e9cb:	push   edi
  41e9cc:	cdq    
  41e9cd:	rcl    DWORD PTR [ecx],cl
  41e9cf:	int    0x33
  41e9d1:	jp     0x41e9c4
  41e9d3:	hlt    
  41e9d4:	jae    0x41ea41
  41e9d6:	sbb    esp,DWORD PTR [esi*4+0x223f26c4]
  41e9dd:	ret    
  41e9de:	sar    BYTE PTR [ebp+0x13],0xb4
  41e9e2:	ret    
  41e9e3:	fld    TBYTE PTR [edx-0x2]
  41e9e6:	xlat   BYTE PTR ds:[ebx]
  41e9e7:	xlat   BYTE PTR ds:[ebx]
  41e9e8:	adc    al,0xe9
  41e9ea:	xor    ch,BYTE PTR [esi+ecx*1+0x281e3590]
  41e9f1:	mov    DWORD PTR [edx-0x74],ecx
  41e9f4:	or     ch,BYTE PTR [ecx+0x591ac4b5]
  41e9fa:	push   esp
  41e9fb:	add    DWORD PTR [ebx],ebx
  41e9fd:	inc    esp
  41e9fe:	aaa    
  41e9ff:	xor    ebp,DWORD PTR [esi-0x1959927e]
  41ea05:	mov    cl,0x7
  41ea07:	mov    ah,0x68
  41ea09:	cli    
  41ea0a:	sti    
  41ea0b:	outs   dx,DWORD PTR ds:[esi]
  41ea0c:	div    DWORD PTR [eax+0x7b]
  41ea0f:	xchg   edx,eax
  41ea10:	aad    0x3a
  41ea12:	and    ebx,DWORD PTR [ecx+0x75dedb3a]
  41ea18:	inc    esi
  41ea19:	test   BYTE PTR [ebp*1+0x76a57505],al
  41ea20:	shl    dl,0x5e
  41ea23:	test   eax,0xa1417577
  41ea28:	stos   DWORD PTR es:[edi],eax
  41ea29:	mov    dh,0xbe
  41ea2b:	or     al,0x4a
  41ea2d:	fist   WORD PTR [ebp+0x2344df81]
  41ea33:	sahf   
  41ea34:	in     eax,0xb5
  41ea36:	push   esi
  41ea37:	push   edi
  41ea38:	add    esi,ebp
  41ea3a:	or     bl,ch
  41ea3c:	sbb    al,0x88
  41ea3e:	je     0x41ea87
  41ea40:	pop    ebp
  41ea41:	inc    ecx
  41ea42:	jns    0x41ea1f
  41ea44:	push   ebx
  41ea45:	scas   al,BYTE PTR es:[edi]
  41ea46:	xor    al,0x95
  41ea48:	rcl    BYTE PTR [ebx+0x3963686b],cl
  41ea4e:	push   ebp
  41ea4f:	call   0xc9560ca6
  41ea54:	cs icebp 
  41ea56:	inc    esi
  41ea57:	sbb    ah,bh
  41ea59:	and    eax,0x7f9eb370
  41ea5e:	push   edi
  41ea5f:	rcr    BYTE PTR [esi+0x3c],cl
  41ea62:	add    al,0xf1
  41ea64:	sub    al,0x1c
  41ea66:	shr    DWORD PTR [ebp+0xe],cl
  41ea69:	je     0x41e9fe
  41ea6b:	xchg   ebp,eax
  41ea6c:	push   ss
  41ea6d:	cwde   
  41ea6e:	gs push ebx
  41ea70:	or     edi,esp
  41ea72:	pop    eax
  41ea73:	xor    edx,esp
  41ea75:	and    ah,BYTE PTR [edi+0x71c9c504]
  41ea7b:	sbb    BYTE PTR [esi+0x2de95c15],0x68
  41ea82:	mov    dh,0x4b
  41ea84:	xor    edi,ecx
  41ea86:	stc    
  41ea87:	inc    ebx
  41ea88:	icebp  
  41ea89:	pop    es
  41ea8a:	into   
  41ea8b:	call   0x31db:0x7dcd469c
  41ea92:	lea    esi,[ebp+0x63]
  41ea95:	ret    
  41ea96:	pushf  
  41ea97:	mov    eax,DWORD PTR [ebx-0x50]
  41ea9a:	cli    
  41ea9b:	pop    edx
  41ea9c:	push   esi
  41ea9d:	popa   
  41ea9e:	std    
  41ea9f:	jmp    0xb77a:0xf722fe54
  41eaa6:	loopne 0x41ea82
  41eaa8:	fmul   st,st(2)
  41eaaa:	mov    ebx,0xeba8dd22
  41eaaf:	imul   ecx,DWORD PTR [ebp-0x638a2a8a],0x7d3a836d
  41eab9:	push   edi
  41eaba:	popf   
  41eabb:	bound  ebp,QWORD PTR [esi+0x17]
  41eabe:	loop   0x41ea63
  41eac0:	add    bl,BYTE PTR [ebx+0x4f]
  41eac3:	dec    edi
  41eac4:	mov    ecx,0x17f49936
  41eac9:	jge    0x41ea65
  41eacb:	inc    esi
  41eacc:	xor    bh,ch
  41eace:	mov    eax,0xde5b446a
  41ead3:	sbb    eax,0xb38ae317
  41ead8:	int3   
  41ead9:	dec    ecx
  41eada:	push   ebx
  41eadb:	int3   
  41eadc:	dec    ecx
  41eadd:	arpl   WORD PTR [edx+0x2e],bp
  41eae0:	sbb    edx,0x4a98a024
  41eae6:	test   esp,edx
  41eae8:	push   0xea6c5047
  41eaed:	std    
  41eaee:	out    dx,eax
  41eaef:	inc    esp
  41eaf0:	mov    dh,0x2c
  41eaf2:	mov    ebx,0x9acccef0
  41eaf7:	sbb    ecx,DWORD PTR [edi]
  41eaf9:	icebp  
  41eafa:	ret    
  41eafb:	fs out 0xc8,al
  41eafe:	cmp    eax,0xcdb9bbe5
  41eb03:	sub    BYTE PTR [ebp+0x1b],bl
  41eb06:	and    cl,al
  41eb08:	lea    esp,ds:0x207e6202
  41eb0e:	sbb    ecx,DWORD PTR [ebp+0x6b05c1ab]
  41eb14:	je     0x41eb10
  41eb16:	jmp    0x9aa3:0xaccc0a91
  41eb1d:	dec    esi
  41eb1e:	xlat   BYTE PTR ds:[ebx]
  41eb1f:	popf   
  41eb20:	dec    edi
  41eb21:	sub    bl,al
  41eb23:	not    BYTE PTR [edx+0x12]
  41eb26:	mov    eax,DWORD PTR [edx+0x3fcf11ee]
  41eb2c:	mov    ah,0x57
  41eb2e:	je     0x41eae4
  41eb30:	cmc    
  41eb31:	stos   DWORD PTR es:[edi],eax
  41eb32:	or     eax,0xfe08ced9
  41eb37:	fild   QWORD PTR [ebp-0x461ebc8b]
  41eb3d:	cmp    bl,BYTE PTR [esi]
  41eb3f:	lods   eax,DWORD PTR ds:[esi]
  41eb40:	bound  esp,QWORD PTR [ecx+0x25]
  41eb43:	mov    edx,DWORD PTR [edi+0x40ba71ee]
  41eb49:	push   0x7cf0dc04
  41eb4e:	addr16 push ss
  41eb50:	xor    al,cl
  41eb52:	clc    
  41eb53:	shr    dl,cl
  41eb55:	call   0xc49e5e96
  41eb5a:	rol    DWORD PTR [edx+0x76b9415e],0xe4
  41eb61:	test   BYTE PTR [ebx+0x27],al
  41eb64:	push   edi
  41eb65:	lock sete BYTE PTR [esi-0x40]
  41eb6a:	div    DWORD PTR [ecx]
  41eb6c:	pop    edx
  41eb6d:	pop    edx
  41eb6e:	sahf   
  41eb6f:	aad    0xdc
  41eb71:	addr16 sbb al,0xa9
  41eb74:	in     eax,dx
  41eb75:	xor    DWORD PTR [ecx+0x61a8301a],eax
  41eb7b:	int3   
  41eb7c:	(bad)  
  41eb7d:	cmp    al,0xb8
  41eb7f:	mov    edx,0xd13353db
  41eb84:	(bad)  
  41eb85:	ror    BYTE PTR [ecx+0x135e5ad0],0xc7
  41eb8c:	(bad)  
  41eb8d:	sub    esp,edi
  41eb8f:	sbb    eax,0xb9f54cf0
  41eb94:	xor    dh,cl
  41eb96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb97:	dec    edi
  41eb98:	lds    ebx,FWORD PTR [ecx+eiz*4]
  41eb9b:	enter  0x38e0,0x2d
  41eb9f:	mov    dl,0x52
  41eba1:	xor    BYTE PTR [esi],dh
  41eba3:	add    edi,DWORD PTR [esi-0x4d38380]
  41eba9:	pop    esi
  41ebaa:	sub    BYTE PTR [edx+esi*1],0x72
  41ebae:	mov    BYTE PTR [eax+0x5cec9f55],bl
  41ebb4:	sub    al,0xfb
  41ebb6:	call   0xa0bf:0xb709a926
  41ebbd:	xor    DWORD PTR [esi+0x65],ebx
  41ebc0:	fstp   DWORD PTR [ebx+0x2b]
  41ebc3:	fild   QWORD PTR [ecx-0x59]
  41ebc6:	cli    
  41ebc7:	in     eax,dx
  41ebc8:	push   0xd5f44e88
  41ebcd:	jae    0x41ebd9
  41ebcf:	dec    ebx
  41ebd0:	sbb    eax,0xad3281d6
  41ebd5:	and    esi,DWORD PTR [edx-0x1e]
  41ebd8:	daa    
  41ebd9:	jo     0x41eb7d
  41ebdb:	cdq    
  41ebdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ebdd:	pop    ss
  41ebde:	xor    DWORD PTR [eax+0xefa4a47],edx
  41ebe4:	push   ebx
  41ebe5:	jo     0x41ec47
  41ebe7:	sub    BYTE PTR [ebx+0x1d],bh
  41ebea:	sbb    bh,BYTE PTR [eax]
  41ebec:	retfw  
  41ebee:	std    
  41ebef:	repz cmp esi,esi
  41ebf2:	xor    DWORD PTR [esi+0x670662db],esi
  41ebf8:	and    eax,DWORD PTR [eax+0x66]
  41ebfb:	pop    ds
  41ebfc:	js     0x41ebfa
  41ebfe:	je     0x41f05a
  41ec04:	mov    eax,DWORD PTR [ebp-0x154]
  41ec0a:	jmp    0x41eff1
  41ec0f:	cld    
  41ec10:	sbb    eax,0x6c1c4604
  41ec15:	mov    esp,0x10e976b3
  41ec1a:	sahf   
  41ec1b:	mov    edx,0x339e200d
  41ec20:	ja     0x41ebe2
  41ec22:	mov    esi,0xbebec44a
  41ec27:	addr16 xor eax,0x6a458b42
  41ec2d:	test   dh,bl
  41ec2f:	sub    al,0x99
  41ec31:	retf   
  41ec32:	inc    ebp
  41ec33:	xor    eax,0xac9c651d
  41ec38:	not    BYTE PTR [edx]
  41ec3a:	js     0x41ec7d
  41ec3c:	jg     0x41ec59
  41ec3e:	and    edx,DWORD PTR [ebx+eax*8+0x2f]
  41ec42:	jb     0x41ebcd
  41ec44:	pop    es
  41ec45:	mov    al,ds:0xbf531ae7
  41ec4a:	jne    0x41ec69
  41ec4c:	add    eax,edi
  41ec4e:	jl     0x41ec88
  41ec50:	ret    0x2d78
  41ec53:	lods   eax,DWORD PTR ds:[esi]
  41ec54:	loop   0x41ec0f
  41ec56:	fsubr  QWORD PTR [edi-0x60]
  41ec59:	pushf  
  41ec5a:	and    bl,BYTE PTR [edx+0x76]
  41ec5d:	sar    DWORD PTR [edi],1
  41ec5f:	(bad)  
  41ec60:	cmp    eax,edi
  41ec62:	or     al,0x54
  41ec64:	pop    ebx
  41ec65:	int    0x2a
  41ec67:	and    ch,al
  41ec69:	xchg   ebx,eax
  41ec6a:	out    0xc8,eax
  41ec6c:	mov    ebx,0x7c97e5c3
  41ec71:	pop    esp
  41ec72:	(bad)  
  41ec73:	psubq  mm6,mm0
  41ec76:	xor    esp,DWORD PTR [edx-0x24]
  41ec79:	out    dx,al
  41ec7a:	fs daa 
  41ec7c:	pop    edi
  41ec7d:	stos   BYTE PTR es:[edi],al
  41ec7e:	pop    ss
  41ec7f:	dec    ecx
  41ec80:	test   al,0xb
  41ec82:	jl     0x41ec38
  41ec84:	cvtdq2ps xmm4,XMMWORD PTR [ecx]
  41ec87:	(bad)  
  41ec88:	fld    QWORD PTR [edi+0x584808ba]
  41ec8e:	lods   eax,DWORD PTR ds:[esi]
  41ec8f:	stos   DWORD PTR es:[edi],eax
  41ec90:	call   0x9a02:0x51b3
  41ec96:	outs   dx,DWORD PTR ds:[esi]
  41ec97:	(bad)  
  41ec98:	icebp  
  41ec99:	mov    ds:0xd10def4d,eax
  41ec9e:	test   esi,ecx
  41eca0:	jo     0x41ec5a
  41eca2:	mov    edx,0xafd50e9c
  41eca7:	mov    ch,0xe0
  41eca9:	dec    eax
  41ecaa:	shl    BYTE PTR [ecx],0x10
  41ecad:	and    al,0x90
  41ecaf:	pop    ecx
  41ecb0:	mov    dh,0x72
  41ecb2:	repz sahf 
  41ecb4:	imul   esp,DWORD PTR [esi],0x35
  41ecb7:	cmp    al,0x47
  41ecb9:	call   0x8721:0xf5c5c214
  41ecc0:	loope  0x41ecd8
  41ecc2:	push   ss
  41ecc3:	add    eax,0xc4a67a4c
  41ecc8:	jecxz  0x41ec79
  41ecca:	icebp  
  41eccb:	mov    esp,0x4ea6151c
  41ecd0:	hlt    
  41ecd1:	cmp    al,0x92
  41ecd3:	xchg   ebx,eax
  41ecd4:	aas    
  41ecd5:	in     al,0x48
  41ecd7:	push   cs
  41ecd8:	mov    bl,BYTE PTR [eax-0x3e]
  41ecdb:	dec    esi
  41ecdc:	outs   dx,DWORD PTR ds:[esi]
  41ecdd:	push   ss
  41ecde:	ja     0x41ec8c
  41ece0:	imul   esi,DWORD PTR [ebx-0x20],0x87b9efc1
  41ece7:	mov    eax,esi
  41ece9:	ins    DWORD PTR es:[edi],dx
  41ecea:	and    edi,esp
  41ecec:	inc    eax
  41eced:	jg     0x41ed6e
  41ecef:	dec    BYTE PTR [edx+0x13]
  41ecf2:	xchg   ebp,eax
  41ecf3:	sub    ecx,DWORD PTR [ebx-0x59]
  41ecf6:	push   esi
  41ecf7:	stos   DWORD PTR es:[edi],eax
  41ecf8:	retf   
  41ecf9:	sbb    DWORD PTR [eax],edx
  41ecfb:	add    DWORD PTR [ecx+0x1e],eax
  41ecfe:	or     al,0xe4
  41ed00:	jns    0x41ed18
  41ed02:	popa   
  41ed03:	fidiv  DWORD PTR [edi-0x51bedc44]
  41ed09:	add    eax,0xfa209686
  41ed0e:	mov    edx,0x8e3ca811
  41ed13:	(bad)  
  41ed14:	dec    ecx
  41ed15:	or     DWORD PTR [ecx*1-0xd3fa5d8],ebx
  41ed1c:	xchg   esp,eax
  41ed1d:	es cli 
  41ed1f:	mov    fs,WORD PTR [eax+0x19]
  41ed22:	(bad)  
  41ed23:	aam    0xa1
  41ed25:	xor    bh,bh
  41ed27:	mov    al,0x30
  41ed29:	dec    ebx
  41ed2a:	push   esp
  41ed2b:	dec    ecx
  41ed2c:	xlat   BYTE PTR ds:[ebx]
  41ed2d:	enter  0x3faa,0xf5
  41ed31:	aas    
  41ed32:	xchg   BYTE PTR [ebp+0x3363f67a],dh
  41ed38:	xchg   edx,eax
  41ed39:	xor    esp,0x7a
  41ed3c:	mov    ecx,0x725a84b2
  41ed41:	sub    eax,0x1b8621e9
  41ed46:	mov    bh,0x22
  41ed48:	xor    eax,0x314d0df1
  41ed4d:	adc    eax,0x71e75239
  41ed52:	scas   eax,DWORD PTR es:[edi]
  41ed53:	mov    ah,0x37
  41ed55:	dec    edx
  41ed56:	test   al,0x34
  41ed58:	push   edx
  41ed59:	sub    al,0xfb
  41ed5b:	pop    ds
  41ed5c:	ficom  DWORD PTR [edi-0x58]
  41ed5f:	fcomi  st,st(1)
  41ed61:	adc    BYTE PTR ss:[eax+0x53088bdb],dh
  41ed68:	repnz fisub DWORD PTR [ebx]
  41ed6b:	rcl    DWORD PTR [eax+0x5a],0xe6
  41ed6f:	cmp    bh,BYTE PTR [edi+0x89db3ad]
  41ed75:	cdq    
  41ed76:	push   ds
  41ed77:	sahf   
  41ed78:	mov    ecx,0x576a6c9d
  41ed7d:	jmp    0x41eded
  41ed7f:	ret    0xf57b
  41ed82:	lds    ebx,FWORD PTR [edi+0x5ffb8fb1]
  41ed88:	hlt    
  41ed89:	jp     0x41ed68
  41ed8b:	cld    
  41ed8c:	and    DWORD PTR [ebx+ebp*2],ecx
  41ed8f:	mov    ah,0x32
  41ed91:	adc    BYTE PTR [esi-0x60cf3f4f],0x1d
  41ed98:	add    BYTE PTR [esi+0x146cc063],bh
  41ed9e:	sahf   
  41ed9f:	arpl   WORD PTR [edi+esi*2],ax
  41eda2:	sub    cl,cl
  41eda4:	inc    ecx
  41eda5:	inc    ebx
  41eda6:	pop    eax
  41eda7:	jmp    0x362610c7
  41edac:	jmp    0x41edd5
  41edae:	mov    esi,DWORD PTR [ebx-0x30]
  41edb1:	ins    DWORD PTR es:[edi],dx
  41edb2:	pop    ebx
  41edb3:	mov    esp,0x18fdf161
  41edb8:	pop    ds
  41edb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41edba:	aas    
  41edbb:	cwde   
  41edbc:	pop    esi
  41edbd:	ja     0x41ed52
  41edbf:	xor    eax,0x57b73db0
  41edc4:	jmp    0x3f9d4a7c
  41edc9:	cli    
  41edca:	imul   edx,DWORD PTR [edi-0x76],0xffffffcd
  41edce:	fist   DWORD PTR [ebx+0x9]
  41edd1:	or     eax,0x75035f61
  41edd6:	test   BYTE PTR [ecx-0x1f],ch
  41edd9:	pop    ecx
  41edda:	mov    edi,0x2d556250
  41eddf:	jecxz  0x41edf4
  41ede1:	fstp   st(0)
  41ede3:	dec    ebx
  41ede4:	sbb    DWORD PTR [eax],0x972ac33d
  41edea:	pop    ss
  41edeb:	dec    edx
  41edec:	jl     0x41ed72
  41edee:	add    eax,0xc88926be
  41edf3:	(bad)  
  41edf4:	fld    QWORD PTR [eax+esi*1+0xc51fb7a]
  41edfb:	cmp    DWORD PTR [esi+0x63d8c966],0xffffffa8
  41ee02:	call   0xdf6b9c8a
  41ee07:	test   BYTE PTR [ecx],ch
  41ee09:	pushf  
  41ee0a:	sbb    dl,BYTE PTR [ecx]
  41ee0c:	adc    BYTE PTR [ebp-0x62e84fd9],dl
  41ee12:	xor    cl,BYTE PTR [esi-0x40]
  41ee15:	cld    
  41ee16:	test   ecx,edi
  41ee18:	xor    DWORD PTR [esi+0x8],esi
  41ee1b:	mov    edi,0xfdb62c55
  41ee20:	mov    dl,0x39
  41ee22:	fmulp  st(6),st
  41ee24:	not    BYTE PTR [ebx]
  41ee26:	add    edi,DWORD PTR [edx-0x6d]
  41ee29:	adc    esp,DWORD PTR [ebp+0x6a]
  41ee2c:	ret    
  41ee2d:	in     al,dx
  41ee2e:	pop    edi
  41ee2f:	jecxz  0x41edce
  41ee31:	dec    esi
  41ee32:	xchg   edi,eax
  41ee33:	aam    0x52
  41ee35:	cmp    al,0x9b
  41ee37:	and    BYTE PTR [ebp-0x16a4c2ec],ch
  41ee3d:	jo     0x41ee6b
  41ee3f:	lds    esi,FWORD PTR [ebx-0x25b8b2ef]
  41ee45:	hlt    
  41ee46:	mov    cl,0x7e
  41ee48:	(bad)  
  41ee49:	cld    
  41ee4a:	xchg   ecx,eax
  41ee4b:	repnz push 0xbd561717
  41ee51:	pop    eax
  41ee52:	test   BYTE PTR [ebp-0x62faa6ba],bl
  41ee58:	fwait
  41ee59:	add    al,BYTE PTR [esi+0x13053b7d]
  41ee5f:	cli    
  41ee60:	cmp    eax,0x52433496
  41ee65:	les    eax,FWORD PTR [eax]
  41ee67:	mov    ah,0x77
  41ee69:	jns    0x41ee62
  41ee6b:	bound  eax,QWORD PTR [eax+0x1df3c704]
  41ee71:	adc    cl,BYTE PTR [ebx+0x650f4464]
  41ee77:	cld    
  41ee78:	cmp    eax,0x4afbe58c
  41ee7d:	and    al,0x3e
  41ee7f:	lods   eax,DWORD PTR ds:[esi]
  41ee80:	xchg   ecx,eax
  41ee81:	test   DWORD PTR ds:[ecx],eax
  41ee84:	dec    edi
  41ee85:	jecxz  0x41eec1
  41ee87:	jge    0x41eee5
  41ee89:	jmp    0x41eee6
  41ee8b:	inc    ecx
  41ee8c:	push   edi
  41ee8d:	out    dx,al
  41ee8e:	gs dec ebp
  41ee90:	and    al,0xe6
  41ee92:	push   ds
  41ee93:	pop    ecx
  41ee94:	sbb    BYTE PTR [edx+0x70],ah
  41ee97:	inc    edi
  41ee98:	jle    0x41eecc
  41ee9a:	mov    ds,WORD PTR [ebp-0x3f]
  41ee9d:	out    dx,al
  41ee9e:	stos   BYTE PTR es:[edi],al
  41ee9f:	cmp    DWORD PTR [edi],ecx
  41eea1:	sbb    BYTE PTR [ebp-0x25],0xfb
  41eea5:	add    DWORD PTR [eax],ebx
  41eea7:	arpl   WORD PTR [esi-0x57],cx
  41eeaa:	test   BYTE PTR ds:0x3f049203,0x16
  41eeb1:	push   ss
  41eeb2:	es push 0xfffffff4
  41eeb5:	retf   
  41eeb6:	fisttp QWORD PTR [edi+ebp*1-0x5af7fce]
  41eebd:	pop    es
  41eebe:	outs   dx,DWORD PTR ds:[esi]
  41eebf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eec0:	(bad)  
  41eec1:	sbb    ch,BYTE PTR [esi-0x7898b05d]
  41eec7:	push   esp
  41eec8:	pop    esi
  41eec9:	pushf  
  41eeca:	arpl   dx,cx
  41eecc:	xor    ecx,eax
  41eece:	pop    ebp
  41eecf:	imul   edx,DWORD PTR [esi],0xffffffb7
  41eed2:	push   eax
  41eed3:	lock and BYTE PTR [ebx-0x44bb3ef7],bh
  41eeda:	scas   eax,DWORD PTR es:[edi]
  41eedb:	push   cs
  41eedc:	and    bl,BYTE PTR [eax]
  41eede:	sti    
  41eedf:	jmp    0xd3fb:0x61a1f2f0
  41eee6:	leave  
  41eee7:	inc    ebp
  41eee8:	push   eax
  41eee9:	outs   dx,DWORD PTR ds:[esi]
  41eeea:	sbb    dl,BYTE PTR [edx-0x59]
  41eeed:	sub    ebx,ecx
  41eeef:	mov    eax,DWORD PTR [ecx+ecx*4]
  41eef2:	aas    
  41eef3:	shr    BYTE PTR [ebp+0x58],1
  41eef6:	fsubr  QWORD PTR [ebp+0xf]
  41eef9:	ror    BYTE PTR ds:[ebx+ecx*1],0xc2
  41eefe:	shl    DWORD PTR [ebx+eiz*4-0x73],cl
  41ef02:	pop    ecx
  41ef03:	push   esi
  41ef04:	pop    es
  41ef05:	push   0x27
  41ef07:	xchg   BYTE PTR [edi+ecx*2-0x40a46063],cl
  41ef0e:	loop   0x41ef18
  41ef10:	pop    ebx
  41ef11:	add    al,0x43
  41ef13:	rcl    BYTE PTR [ebx],1
  41ef15:	jno    0x41ef37
  41ef17:	icebp  
  41ef18:	test   eax,0x98ce438a
  41ef1d:	inc    esp
  41ef1e:	mov    eax,DWORD PTR [esi-0x7c534b73]
  41ef24:	test   BYTE PTR [eax],bh
  41ef26:	xchg   ecx,eax
  41ef27:	iret   
  41ef28:	das    
  41ef29:	xor    al,0x1
  41ef2b:	cmp    DWORD PTR [eax],eax
  41ef2d:	ja     0x41ef8e
  41ef2f:	fcomp  st(7)
  41ef31:	cmp    BYTE PTR [esi],dh
  41ef33:	aaa    
  41ef34:	xor    eax,0xc154a540
  41ef39:	add    edx,DWORD PTR [edi]
  41ef3b:	es call 0xe51:0x15bf28a4
  41ef43:	xor    edi,DWORD PTR [ebx]
  41ef45:	xor    BYTE PTR [edx+0x4d],cl
  41ef48:	push   edx
  41ef49:	cmc    
  41ef4a:	mov    ch,0xd2
  41ef4c:	cmp    dh,BYTE PTR [edi+0x1efbab74]
  41ef52:	mov    bl,0x58
  41ef54:	cli    
  41ef55:	fisttp WORD PTR [ebx-0x3e6cd9bc]
  41ef5b:	and    bh,BYTE PTR [eax-0x14]
  41ef5e:	jecxz  0x41ef17
  41ef60:	pushf  
  41ef61:	gs jg  0x41ef69
  41ef64:	mov    ebp,esi
  41ef66:	mov    eax,ds:0xd26a4f05
  41ef6b:	pop    ecx
  41ef6c:	jge    0x41ef62
  41ef6e:	adc    al,0xc7
  41ef70:	jbe    0x41ef3c
  41ef72:	xchg   DWORD PTR [esi-0x69],ecx
  41ef75:	lds    esp,FWORD PTR ds:0xb7ca2ef8
  41ef7b:	xchg   ecx,eax
  41ef7c:	or     ebp,esp
  41ef7e:	push   ebx
  41ef7f:	mov    edi,0x5b8b8ce6
  41ef84:	sub    BYTE PTR [ecx-0x49],bh
  41ef87:	repnz not DWORD PTR ds:[ebp-0x581db25a]
  41ef8f:	test   dh,0xca
  41ef92:	shr    BYTE PTR [ebp-0x12],0xbb
  41ef96:	mov    cl,0x93
  41ef98:	aad    0x51
  41ef9a:	xor    eax,0x5ac8dbbd
  41ef9f:	(bad)  
  41efa0:	aaa    
  41efa1:	pop    es
  41efa2:	cmp    BYTE PTR [edx+0x1edadecf],ah
  41efa8:	mov    ds:0xbe6dbe48,al
  41efad:	lds    eax,FWORD PTR [eax]
  41efaf:	ror    dl,cl
  41efb1:	jmp    FWORD PTR [edx-0x7165f200]
  41efb7:	inc    ecx
  41efb8:	push   ss
  41efb9:	je     0x41efce
  41efbb:	push   ds
  41efbc:	add    DWORD PTR [esi+edx*2-0x58],eax
  41efc0:	loopne 0x41ef64
  41efc2:	sbb    ah,bl
  41efc4:	lods   al,BYTE PTR ds:[esi]
  41efc5:	das    
  41efc6:	add    ebp,DWORD PTR [ebp-0x4c35cea7]
  41efcc:	outs   dx,BYTE PTR ds:[esi]
  41efcd:	jmp    0xf376:0x6f16247
  41efd4:	(bad)  
  41efd5:	test   al,0xe6
  41efd7:	jnp    0x41efb8
  41efd9:	daa    
  41efda:	aad    0x77
  41efdc:	ins    DWORD PTR es:[edi],dx
  41efdd:	add    eax,0x601a6d31
  41efe2:	sub    cl,bl
  41efe4:	outs   dx,BYTE PTR ds:[esi]
  41efe5:	rcl    DWORD PTR [ebp-0x4ab6df74],cl
  41efeb:	out    0x57,eax
  41efed:	dec    ecx
  41efee:	inc    eax
  41efef:	loope  0x41ef8d
  41eff1:	mov    edx,DWORD PTR [ebp-0x150]
  41eff7:	xor    eax,0xcb79b576
  41effc:	xor    edx,0x9c2b8ae8
  41f002:	mov    cl,0x2
  41f004:	call   0x408bb8
  41f009:	mov    esi,eax
  41f00b:	mov    edi,edx
  41f00d:	mov    eax,DWORD PTR [ebp-0x154]
  41f013:	mov    edx,DWORD PTR [ebp-0x150]
  41f019:	xor    eax,0xcb79b576
  41f01e:	xor    edx,0x9c2b8ae8
  41f024:	mov    cl,0x3e
  41f026:	call   0x42241f
  41f02b:	or     esi,eax
  41f02d:	or     edi,edx
  41f02f:	mov    eax,DWORD PTR [ebp-0x160]
  41f035:	imul   esi,eax
  41f038:	add    esi,DWORD PTR [ebp-0x170]
  41f03e:	mov    DWORD PTR [ebp-0x16c],esi
  41f044:	mov    eax,DWORD PTR [ebp-0x16c]
  41f04a:	mov    DWORD PTR [ebp-0x178],eax
  41f050:	jmp    0x41f19e
  41f055:	jmp    0x41f105
  41f05a:	mov    eax,DWORD PTR [ebp-0x154]
  41f060:	mov    edx,DWORD PTR [ebp-0x150]
  41f066:	xor    eax,0xcb79b576
  41f06b:	xor    edx,0x9c2b8ae8
  41f071:	mov    cl,0x2
  41f073:	call   0x408bb8
  41f078:	mov    esi,eax
  41f07a:	mov    edi,edx
  41f07c:	mov    eax,DWORD PTR [ebp-0x154]
  41f082:	mov    edx,DWORD PTR [ebp-0x150]
  41f088:	xor    eax,0xcb79b576
  41f08d:	xor    edx,0x9c2b8ae8
  41f093:	mov    cl,0x3e
  41f095:	call   0x42241f
  41f09a:	or     esi,eax
  41f09c:	or     edi,edx
  41f09e:	mov    eax,DWORD PTR [ebp-0x15c]
  41f0a4:	mov    edx,DWORD PTR [ebp-0x158]
  41f0aa:	xor    eax,0xcb79b576
  41f0af:	xor    edx,0x9c2b8ae8
  41f0b5:	mov    cl,0x2
  41f0b7:	call   0x408bb8
  41f0bc:	mov    ebx,eax
  41f0be:	mov    eax,edx
  41f0c0:	mov    ecx,DWORD PTR [ebp-0x15c]
  41f0c6:	mov    edx,DWORD PTR [ebp-0x158]
  41f0cc:	xor    ecx,0xcb79b576
  41f0d2:	xor    edx,0x9c2b8ae8
  41f0d8:	mov    DWORD PTR [ebp-0x234],eax
  41f0de:	mov    eax,ecx
  41f0e0:	mov    cl,0x3e
  41f0e2:	call   0x42241f
  41f0e7:	or     ebx,eax
  41f0e9:	mov    eax,DWORD PTR [ebp-0x234]
  41f0ef:	or     eax,edx
  41f0f1:	push   eax
  41f0f2:	push   ebx
  41f0f3:	push   edi
  41f0f4:	push   esi
  41f0f5:	call   0x41594e
  41f0fa:	mov    DWORD PTR [ebp-0x178],eax
  41f100:	jmp    0x41f19e
  41f105:	mov    eax,DWORD PTR [ebp-0x15c]
  41f10b:	mov    edx,DWORD PTR [ebp-0x158]
  41f111:	xor    eax,0xcb79b576
  41f116:	xor    edx,0x9c2b8ae8
  41f11c:	mov    cl,0x2
  41f11e:	call   0x408bb8
  41f123:	mov    esi,eax
  41f125:	mov    edi,edx
  41f127:	mov    eax,DWORD PTR [ebp-0x15c]
  41f12d:	mov    edx,DWORD PTR [ebp-0x158]
  41f133:	xor    eax,0xcb79b576
  41f138:	xor    edx,0x9c2b8ae8
  41f13e:	mov    cl,0x3e
  41f140:	call   0x42241f
  41f145:	or     esi,eax
  41f147:	or     edi,edx
  41f149:	mov    DWORD PTR [ebp-0x178],esi
  41f14f:	jmp    0x41f19e
  41f154:	mov    eax,DWORD PTR [ebp-0x15c]
  41f15a:	mov    edx,DWORD PTR [ebp-0x158]
  41f160:	xor    eax,0xcb79b576
  41f165:	xor    edx,0x9c2b8ae8
  41f16b:	mov    cl,0x2
  41f16d:	call   0x408bb8
  41f172:	mov    esi,eax
  41f174:	mov    edi,edx
  41f176:	mov    eax,DWORD PTR [ebp-0x15c]
  41f17c:	mov    edx,DWORD PTR [ebp-0x158]
  41f182:	xor    eax,0xcb79b576
  41f187:	xor    edx,0x9c2b8ae8
  41f18d:	mov    cl,0x3e
  41f18f:	call   0x42241f
  41f194:	or     esi,eax
  41f196:	or     edi,edx
  41f198:	mov    DWORD PTR [ebp-0x178],esi
  41f19e:	mov    ecx,DWORD PTR [ebp-0xd8]
  41f1a4:	mov    eax,0x459a
  41f1a9:	xor    edx,edx
  41f1ab:	div    ecx
  41f1ad:	jmp    0x41f594
  41f1b2:	push   edx
  41f1b3:	inc    ebx
  41f1b4:	sbb    eax,0xbcab304b
  41f1b9:	pop    esp
  41f1ba:	or     edi,DWORD PTR [edx]
  41f1bc:	cld    
  41f1bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1be:	mov    al,ds:0xc0dd2ef2
  41f1c3:	jg     0x41f185
  41f1c5:	mov    esi,0xbebec44a
  41f1ca:	lea    esp,[esi-0x7d09737a]
  41f1d0:	popf   
  41f1d1:	cmp    al,0xe5
  41f1d3:	mov    cl,0x78
  41f1d5:	push   es
  41f1d6:	int3   
  41f1d7:	clc    
  41f1d8:	and    al,0xa1
  41f1da:	fisttp WORD PTR [esi-0x4e99cc43]
  41f1e0:	push   0x4be8568c
  41f1e5:	or     ch,dl
  41f1e7:	jno    0x41f206
  41f1e9:	es push es
  41f1eb:	loope  0x41f1b3
  41f1ed:	nop
  41f1ee:	test   al,0x2d
  41f1f0:	aam    0xc9
  41f1f2:	lahf   
  41f1f3:	pop    esi
  41f1f4:	dec    ebp
  41f1f5:	sub    al,0x3
  41f1f7:	outs   dx,DWORD PTR ds:[esi]
  41f1f8:	(bad)  [esi-0x66b019db]
  41f1fe:	sub    DWORD PTR [edx],eax
  41f200:	aas    
  41f201:	in     eax,0x23
  41f203:	adc    edx,esi
  41f205:	dec    esp
  41f206:	jge    0x41f217
  41f208:	xor    edi,DWORD PTR [ebp+0x3a4e660f]
  41f20e:	jnp    0x41f1e8
  41f210:	repz and DWORD PTR [edx+0x6c],ebx
  41f214:	(bad)  
  41f215:	retf   0xf76c
  41f218:	enter  0xf60b,0xe0
  41f21c:	mov    ecx,0x33ef1554
  41f221:	popf   
  41f222:	pop    ecx
  41f223:	out    0xb8,al
  41f225:	xchg   BYTE PTR [edi],bh
  41f227:	xor    al,0x7c
  41f229:	cli    
  41f22a:	outs   dx,BYTE PTR ds:[esi]
  41f22b:	lahf   
  41f22c:	cmp    BYTE PTR [ebx+eiz*8+0x3c48bfba],bh
  41f233:	adc    al,0xf6
  41f235:	lea    esp,[eax+0x415fe842]
  41f23b:	sub    cl,BYTE PTR [eax+0x12]
  41f23e:	mov    bh,0x4
  41f240:	add    al,0xdf
  41f242:	push   edi
  41f243:	not    DWORD PTR [ebx-0x33]
  41f246:	sub    al,0x6b
  41f248:	sub    edi,ecx
  41f24a:	mov    ebx,0xdf3b84a0
  41f24f:	stos   DWORD PTR es:[edi],eax
  41f250:	cmp    DWORD PTR [ebx],esi
  41f252:	shr    BYTE PTR [esi-0x53fe3321],cl
  41f258:	xchg   esi,eax
  41f259:	sub    esp,DWORD PTR [edi+ebx*8+0x1c]
  41f25d:	cmc    
  41f25e:	call   0xfe00:0x2e7ee9d5
  41f265:	dec    edx
  41f266:	(bad)  
  41f267:	aad    0xae
  41f269:	mov    ebp,0xed585c6a
  41f26e:	jp     0x41f26d
  41f270:	lods   eax,DWORD PTR ds:[esi]
  41f271:	or     BYTE PTR [ebx+0x2],bl
  41f274:	pop    edi
  41f275:	lods   eax,DWORD PTR ds:[esi]
  41f276:	sbb    eax,0xe0bcf4ff
  41f27b:	pop    eax
  41f27c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f27d:	adc    eax,DWORD PTR [ecx+edx*2]
  41f280:	pop    edx
  41f281:	imul   esi,DWORD PTR ds:0x2b3009b8,0x59
  41f288:	int    0x48
  41f28a:	mov    ah,0x5d
  41f28c:	mov    ebp,0x3d6e600c
  41f291:	adc    DWORD PTR [ecx+ecx*8],0x5f
  41f295:	bound  ebx,QWORD PTR [ecx]
  41f297:	(bad)  
  41f298:	or     eax,0x768238f2
  41f29d:	fwait
  41f29e:	pusha  
  41f29f:	test   BYTE PTR [esi-0x6e],bl
  41f2a2:	mov    esi,0xa4493089
  41f2a7:	and    bl,bl
  41f2a9:	rcl    BYTE PTR [ecx+0x73],cl
  41f2ac:	inc    ecx
  41f2ad:	(bad)  
  41f2ae:	int    0xd6
  41f2b0:	xchg   esp,eax
  41f2b1:	add    al,0x61
  41f2b3:	fld    DWORD PTR [edx+0x25]
  41f2b6:	in     al,0x2
  41f2b8:	(bad)  
  41f2b9:	(bad)  
  41f2ba:	scas   eax,DWORD PTR es:[edi]
  41f2bb:	cmp    DWORD PTR [ecx+0x3ed9bbf0],0x44
  41f2c2:	push   ebp
  41f2c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f2c4:	call   0x721e:0x563609c7
  41f2cb:	(bad)  
  41f2cc:	jbe    0x41f26d
  41f2ce:	pop    DWORD PTR [ebx-0x19]
  41f2d1:	sti    
  41f2d2:	(bad)  
  41f2d3:	or     eax,0x281068de
  41f2d8:	ret    
  41f2d9:	std    
  41f2da:	dec    esp
  41f2db:	call   0xf6eebd4e
  41f2e0:	inc    esi
  41f2e1:	stc    
  41f2e2:	pop    edi
  41f2e3:	push   ecx
  41f2e4:	inc    edx
  41f2e5:	mov    dh,0x32
  41f2e7:	in     al,0x6c
  41f2e9:	jmp    0x41f2d1
  41f2eb:	pop    ds
  41f2ec:	mov    eax,0x224b00a9
  41f2f1:	inc    ebx
  41f2f2:	and    eax,DWORD PTR [ecx]
  41f2f4:	xchg   edi,eax
  41f2f5:	aas    
  41f2f6:	cmp    eax,0x37c898ff
  41f2fb:	add    al,0xf6
  41f2fd:	arpl   WORD PTR [ebx],bp
  41f2ff:	mov    dh,0x66
  41f301:	aam    0x67
  41f303:	(bad)  
  41f305:	jp     0x41f2f3
  41f307:	sbb    DWORD PTR ds:0xcf656627,0x3a
  41f30e:	int3   
  41f30f:	out    0x6d,eax
  41f311:	arpl   WORD PTR [edx-0x30],sp
  41f314:	cwde   
  41f315:	jo     0x41f370
  41f317:	mov    ebp,0xe4c81704
  41f31c:	arpl   WORD PTR [eax-0x2e],si
  41f31f:	stos   DWORD PTR es:[edi],eax
  41f320:	xor    DWORD PTR [eax],0x1d
  41f323:	cmp    eax,0x508c5200
  41f328:	cdq    
  41f329:	xor    eax,0x866de26b
  41f32e:	pop    es
  41f32f:	pop    edi
  41f330:	inc    ebx
  41f331:	adc    eax,0xbe9004ec
  41f336:	push   ds
  41f337:	aaa    
  41f338:	lods   al,BYTE PTR ds:[esi]
  41f339:	add    DWORD PTR ds:0x9d2eea6,ecx
  41f33f:	mov    ebp,0xf2e631a7
  41f344:	int    0x31
  41f346:	sysret 
  41f348:	mov    ?,WORD PTR cs:[ebp-0xa]
  41f34c:	adc    dh,BYTE PTR [esi-0x669628d9]
  41f352:	xchg   BYTE PTR [ebp+0x2b],dh
  41f355:	push   ebp
  41f356:	pop    esp
  41f357:	xor    al,0x76
  41f359:	bnd ds ret 0x994a
  41f35e:	scas   eax,DWORD PTR es:[edi]
  41f35f:	lods   al,BYTE PTR ds:[esi]
  41f360:	or     eax,0xb9663ccc
  41f365:	sub    al,0xf8
  41f367:	mov    bh,0xf1
  41f369:	or     BYTE PTR [esi],bl
  41f36b:	ds mov dl,0xda
  41f36e:	dec    esi
  41f36f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f370:	and    DWORD PTR [edi-0x1319e7b4],0xe26c001b
  41f37a:	(bad)  
  41f37b:	rol    cl,1
  41f37d:	push   eax
  41f37e:	fwait
  41f37f:	lods   al,BYTE PTR ds:[esi]
  41f380:	fisub  DWORD PTR [ebp-0x54]
  41f383:	js     0x41f394
  41f385:	mov    al,0x39
  41f387:	mov    dl,0x22
  41f389:	push   esi
  41f38a:	sahf   
  41f38b:	aas    
  41f38c:	mov    al,ds:0x98a2894b
  41f391:	sbb    al,BYTE PTR [ebp+0x472ec279]
  41f397:	jmp    esi
  41f399:	daa    
  41f39a:	fst    QWORD PTR [edx+0x74f2d9b3]
  41f3a0:	push   ds
  41f3a1:	add    eax,0x213e2671
  41f3a6:	jns    0x41f417
  41f3a8:	cmp    dl,ch
  41f3aa:	stc    
  41f3ab:	test   DWORD PTR [edx],eax
  41f3ad:	xor    ch,ch
  41f3af:	(bad)  
  41f3b0:	ss cdq 
  41f3b2:	stc    
  41f3b3:	mov    ah,0x73
  41f3b5:	sar    BYTE PTR [esi+0x798ffcfa],cl
  41f3bb:	mov    ch,0x18
  41f3bd:	mul    edi
  41f3bf:	dec    edx
  41f3c0:	pop    es
  41f3c1:	enter  0x3009,0x44
  41f3c5:	push   ebx
  41f3c6:	jo     0x41f402
  41f3c8:	loopne 0x41f438
  41f3ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3cb:	stos   BYTE PTR es:[edi],al
  41f3cc:	xchg   edi,eax
  41f3cd:	imul   edx,DWORD PTR [ebx+0x69],0x91a27279
  41f3d4:	ror    DWORD PTR [esi],cl
  41f3d6:	lea    esi,[edi+0x27]
  41f3d9:	loop   0x41f3f9
  41f3db:	ret    0x11a9
  41f3de:	push   edi
  41f3df:	and    eax,0x183329de
  41f3e4:	xchg   ecx,eax
  41f3e5:	dec    edi
  41f3e6:	sub    ch,ch
  41f3e8:	icebp  
  41f3e9:	rol    DWORD PTR [edi+0x3f],cl
  41f3ec:	pop    ecx
  41f3ed:	push   esp
  41f3ee:	stos   DWORD PTR es:[edi],eax
  41f3ef:	out    dx,eax
  41f3f0:	mov    esp,0x34d19b3a
  41f3f5:	and    BYTE PTR [ebx-0x37],cl
  41f3f8:	xchg   DWORD PTR [ebx-0x7904e22d],eax
  41f3fe:	(bad)  
  41f3ff:	div    DWORD PTR [esi-0x3f6e01b6]
  41f405:	dec    edi
  41f406:	mov    dl,BYTE PTR [ebx+0x3b]
  41f409:	es jns 0x41f401
  41f40c:	sub    BYTE PTR [esi-0xa],dh
  41f40f:	jmp    0x31ed474a
  41f414:	dec    BYTE PTR [edi]
  41f416:	jns    0x41f398
  41f418:	jne    0x41f484
  41f41a:	das    
  41f41b:	jmp    0xfece:0xc4e7e381
  41f422:	aas    
  41f423:	imul   esi,DWORD PTR [edx],0x4e
  41f426:	push   ebx
  41f427:	push   0x8195f369
  41f42c:	pop    esi
  41f42d:	mov    dh,0xec
  41f42f:	mov    ss,WORD PTR [ebx+eax*8-0x24]
  41f433:	push   0x65689d
  41f438:	stc    
  41f439:	mov    edi,0xb1504822
  41f43e:	mov    ebp,esp
  41f440:	sub    ebx,DWORD PTR [eax+0x104e915]
  41f446:	pop    es
  41f447:	mov    eax,ds:0xa40ec51a
  41f44c:	test   ecx,0xf0a6263
  41f452:	retf   0xb85b
  41f455:	test   BYTE PTR [ebx+0x60],0x7c
  41f459:	in     al,0xfb
  41f45b:	(bad)  
  41f45d:	lea    esi,[edx]
  41f45f:	add    DWORD PTR [ebx+0x28],ebp
  41f462:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f463:	aaa    
  41f464:	repz and bh,BYTE PTR [ebx]
  41f467:	xchg   cl,bh
  41f469:	cmp    esi,0x3d
  41f46c:	sub    eax,0xf2c19e76
  41f471:	add    ecx,ecx
  41f473:	sub    DWORD PTR [esi-0x2a],eax
  41f476:	fbld   TBYTE PTR [edi-0x80]
  41f479:	nop
  41f47a:	mov    ecx,0x88fab769
  41f47f:	add    al,0x3
  41f481:	int    0xdb
  41f483:	cmp    eax,DWORD PTR [ebp-0x66]
  41f486:	push   cs
  41f487:	mov    esi,0x7dd1c92a
  41f48c:	pusha  
  41f48d:	sub    al,0x5
  41f48f:	add    eax,0x3d72557c
  41f494:	sub    eax,0xb9304e72
  41f499:	add    al,0x87
  41f49b:	pop    es
  41f49c:	cmp    eax,0x47e49aee
  41f4a1:	icebp  
  41f4a2:	arpl   WORD PTR ds:[ecx],si
  41f4a5:	in     eax,0x75
  41f4a7:	clc    
  41f4a8:	call   0x8d63:0x5cce8d8e
  41f4af:	mov    ds:0x466a8e2b,eax
  41f4b4:	stos   DWORD PTR es:[edi],eax
  41f4b5:	repnz xor DWORD PTR [edx+0x11],ebp
  41f4b9:	mov    bl,0x9c
  41f4bb:	mov    ah,0x7c
  41f4bd:	push   esp
  41f4be:	xor    al,0x73
  41f4c0:	xchg   esi,eax
  41f4c1:	add    al,0x8b
  41f4c3:	dec    ebp
  41f4c4:	imul   ebx,DWORD PTR [ecx+ebx*4+0x60],0xffffff8e
  41f4c9:	xchg   DWORD PTR [edi-0x56],ecx
  41f4cc:	add    BYTE PTR [eax+0x51],al
  41f4cf:	xchg   dl,dh
  41f4d1:	pop    ds
  41f4d2:	ss xchg edx,eax
  41f4d4:	push   0x102aa3bb
  41f4d9:	jmp    0x8daf:0xd0e94976
  41f4e0:	int3   
  41f4e1:	and    eax,0x3be03517
  41f4e6:	cmc    
  41f4e7:	rcl    DWORD PTR [edi],cl
  41f4e9:	pop    esi
  41f4ea:	inc    ecx
  41f4eb:	bswap  esi
  41f4ed:	icebp  
  41f4ee:	mov    edi,0xec16b5dc
  41f4f3:	fmul   DWORD PTR ds:0x5d0ab63b
  41f4f9:	cld    
  41f4fa:	rcr    BYTE PTR [edi+0x23],0xcf
  41f4fe:	jmp    0x41f489
  41f500:	add    eax,eax
  41f502:	pusha  
  41f503:	xchg   ebx,eax
  41f504:	cmp    ecx,DWORD PTR [esp+eiz*8]
  41f507:	scas   eax,DWORD PTR es:[edi]
  41f508:	sub    eax,DWORD PTR [esi-0x2c708923]
  41f50e:	sbb    ebp,DWORD PTR [edx+0x62]
  41f511:	pop    ecx
  41f512:	mov    ch,0x62
  41f514:	clc    
  41f515:	cmp    cl,BYTE PTR [ebp+0x33]
  41f518:	inc    ebp
  41f519:	xchg   al,dl
  41f51b:	jmp    0xc882:0x4cbf55e
  41f522:	mov    eax,0x8700a461
  41f527:	lods   al,BYTE PTR ds:[esi]
  41f528:	les    edi,FWORD PTR [edx-0x6e1ca354]
  41f52e:	nop
  41f52f:	push   esp
  41f530:	adc    eax,0xb64b09a6
  41f535:	(bad)  
  41f536:	arpl   WORD PTR [ebp-0x13],bp
  41f539:	sbb    bl,BYTE PTR [ebp-0x37]
  41f53c:	clc    
  41f53d:	(bad)  
  41f53e:	hlt    
  41f53f:	(bad)  
  41f540:	adc    esp,DWORD PTR ds:0x82c029db
  41f546:	xor    al,0x3e
  41f548:	dec    eax
  41f549:	mov    es,ebx
  41f54b:	sub    al,0xcd
  41f54d:	dec    esp
  41f54e:	sar    BYTE PTR [eax+ecx*2-0x50],cl
  41f552:	ret    
  41f553:	jno    0x41f597
  41f555:	inc    edx
  41f556:	xor    ah,bl
  41f558:	in     al,dx
  41f559:	retf   
  41f55a:	xchg   esp,eax
  41f55b:	jl     0x41f564
  41f55d:	mov    ecx,0xccbd37c4
  41f562:	adc    eax,DWORD PTR [esi+0x4d0f59dc]
  41f568:	enter  0x4593,0xcf
  41f56c:	jle    0x41f532
  41f56e:	rcr    DWORD PTR [edx+0x4445bdc0],1
  41f574:	jns    0x41f54f
  41f576:	and    ebx,eax
  41f578:	je     0x41f5da
  41f57a:	js     0x41f50a
  41f57c:	(bad)  
  41f57d:	mov    ah,0x2f
  41f57f:	sub    eax,0x557eb8db
  41f584:	xchg   ebx,eax
  41f585:	mov    ebx,edi
  41f587:	push   esi
  41f588:	call   0x2143:0x18ef5703
  41f58f:	xchg   esi,eax
  41f590:	dec    edx
  41f591:	data16 aaa 
  41f593:	dec    DWORD PTR [ebx-0xdb73]
  41f599:	jmp    DWORD PTR [ebx]
  41f59b:	rol    DWORD PTR [ebx],0x45
  41f59e:	mov    esp,0xff208d8b
  41f5a3:	(bad)  
  41f5a4:	dec    DWORD PTR [ebp+0x272f0884]
  41f5aa:	add    BYTE PTR [eax],al
  41f5ac:	xor    eax,0x1080c
  41f5b1:	add    eax,DWORD PTR [ebp-0x178]
  41f5b7:	mov    DWORD PTR [ebp-0xe8],eax
  41f5bd:	mov    DWORD PTR [ebp-0xc],0x5950
  41f5c4:	mov    DWORD PTR [ebp-0xf8],0x4964
  41f5ce:	mov    DWORD PTR [ebp-0x130],0x3
  41f5d8:	mov    DWORD PTR [ebp-0x20],0x2df9
  41f5df:	mov    DWORD PTR [ebp-0x8],0x4524
  41f5e6:	mov    DWORD PTR [ebp-0xd4],0x637e
  41f5f0:	mov    DWORD PTR [ebp-0x110],0x38c8
  41f5fa:	mov    DWORD PTR [ebp-0xa4],0x7118
  41f604:	mov    DWORD PTR [ebp-0xa0],0xaf6
  41f60e:	mov    DWORD PTR [ebp-0x10c],0x3315
  41f618:	mov    eax,DWORD PTR [ebp-0xf8]
  41f61e:	mov    ecx,DWORD PTR [ebp-0x130]
  41f624:	xor    edx,edx
  41f626:	div    ecx
  41f628:	add    eax,0x454e
  41f62d:	mov    ecx,DWORD PTR [ebp-0xc]
  41f630:	and    eax,ecx
  41f632:	xor    eax,0x5940
  41f637:	add    eax,DWORD PTR [ebp+0x8]
  41f63a:	mov    ecx,DWORD PTR [ebp-0x110]
  41f640:	mov    edx,DWORD PTR [ebp-0xa4]
  41f646:	sub    ecx,edx
  41f648:	mov    edx,DWORD PTR [ebp-0xd4]
  41f64e:	or     ecx,edx
  41f650:	mov    edx,DWORD PTR [ebp-0x8]
  41f653:	and    ecx,edx
  41f655:	jmp    0x41fa3c
  41f65a:	cmp    DWORD PTR [ebx-0x6397a419],esi
  41f660:	mov    edx,0x50f9fab3
  41f665:	sahf   
  41f666:	pop    ebp
  41f667:	push   edi
  41f668:	ins    BYTE PTR es:[edi],dx
  41f669:	ror    DWORD PTR [ebp+eax*4-0x40],1
  41f66d:	mov    esi,0xbebec44a
  41f672:	xchg   esi,eax
  41f673:	adc    dh,BYTE PTR [ebx-0x27]
  41f676:	add    al,0x4d
  41f678:	push   ebp
  41f679:	hlt    
  41f67a:	pushf  
  41f67b:	or     BYTE PTR [esi-0x97e920a],ch
  41f681:	scas   al,BYTE PTR es:[edi]
  41f682:	gs add ch,0xb3
  41f686:	scas   eax,DWORD PTR es:[edi]
  41f687:	inc    edi
  41f688:	or     esp,DWORD PTR [eax+0x55]
  41f68b:	add    BYTE PTR [ecx+0xc7cfaa9],ah
  41f691:	sub    BYTE PTR [eax-0x1e],dl
  41f694:	std    
  41f695:	ror    dh,cl
  41f697:	dec    edi
  41f698:	xor    eax,DWORD PTR [ecx+0x72]
  41f69b:	lock jp 0x41f67e
  41f69e:	push   ecx
  41f69f:	je     0x41f701
  41f6a1:	lahf   
  41f6a2:	pop    edx
  41f6a3:	push   ebp
  41f6a4:	push   ebp
  41f6a5:	mov    ebx,0xa146a204
  41f6aa:	adc    DWORD PTR [ebx],esi
  41f6ac:	icebp  
  41f6ad:	retf   
  41f6ae:	cdq    
  41f6af:	rcl    BYTE PTR [edx+ebx*2+0x75],1
  41f6b3:	xchg   edi,eax
  41f6b4:	shr    esi,0xb0
  41f6b7:	and    ch,BYTE PTR [edi+0x6fc64aeb]
  41f6bd:	mov    ?,WORD PTR [ebp-0x8930412]
  41f6c3:	mul    DWORD PTR [eax+0x77f658c]
  41f6c9:	xchg   al,bh
  41f6cb:	cmp    esi,edx
  41f6cd:	jno    0x41f65f
  41f6cf:	inc    ebp
  41f6d0:	pop    es
  41f6d1:	fldcw  WORD PTR [ebx-0x1b]
  41f6d4:	xor    ecx,DWORD PTR [esi]
  41f6d6:	mov    BYTE PTR [ebp+0x73e8751a],dh
  41f6dc:	inc    eax
  41f6dd:	xor    DWORD PTR [eax+ecx*8],esi
  41f6e0:	sti    
  41f6e1:	mov    al,ds:0xb68ae8a8
  41f6e6:	and    eax,0xd6579aef
  41f6eb:	mov    esi,0xb77339e5
  41f6f0:	jb     0x41f696
  41f6f2:	fcmovu st,st(0)
  41f6f4:	push   edx
  41f6f5:	mov    ch,0x99
  41f6f7:	mov    ebp,0x5732a0c4
  41f6fc:	sbb    dl,BYTE PTR [edx-0x3f]
  41f6ff:	xchg   ebp,eax
  41f700:	xchg   edi,eax
  41f701:	stos   BYTE PTR es:[edi],al
  41f702:	ins    DWORD PTR es:[edi],dx
  41f703:	(bad)  
  41f704:	pop    DWORD PTR ds:0xe445734f
  41f70a:	pop    eax
  41f70b:	or     BYTE PTR [ebp-0x3],ch
  41f70e:	cwde   
  41f70f:	jmp    0x1e9c:0xa1106abc
  41f716:	in     eax,0x8d
  41f718:	fisttp QWORD PTR [ebx+0x2b]
  41f71b:	jb     0x41f6f9
  41f71d:	ror    DWORD PTR [ebx+edi*1-0x63bbf90b],0x2c
  41f725:	out    0xea,al
  41f727:	test   DWORD PTR [edx],ebx
  41f729:	(bad)  
  41f72a:	ins    BYTE PTR es:[edi],dx
  41f72b:	rcr    BYTE PTR [ebp+0x1db59d9d],0x13
  41f732:	sar    BYTE PTR [eax+0x50],1
  41f735:	outs   dx,DWORD PTR ds:[esi]
  41f736:	in     al,0x80
  41f738:	popf   
  41f739:	xchg   eax,esp
  41f73b:	data16 mov ds:0x744f3993,al
  41f741:	xor    ah,BYTE PTR ds:0xe06b4f20
  41f747:	sub    ebp,DWORD PTR [eax-0xb996cc5]
  41f74d:	add    eax,0xaafe4aa5
  41f752:	das    
  41f753:	xchg   ebx,eax
  41f754:	jae    0x41f6dd
  41f756:	cmp    al,0x82
  41f758:	test   DWORD PTR ds:0x11f3e518,edi
  41f75e:	fld    st(6)
  41f761:	je     0x41f6fe
  41f763:	push   esi
  41f764:	mov    eax,0x76648653
  41f769:	and    bl,0x2d
  41f76c:	or     DWORD PTR [edx-0x4fb12783],esi
  41f772:	fiadd  DWORD PTR [ebp-0x52]
  41f775:	jge    0x41f773
  41f777:	and    eax,0x3478c938
  41f77c:	and    BYTE PTR [ebx-0x279e433c],ch
  41f782:	fs mov eax,0xb9bc88a7
  41f788:	loopne 0x41f77a
  41f78a:	cmp    al,0x5a
  41f78c:	mov    ?,WORD PTR [esi*8-0x2d866aa4]
  41f793:	repz dec esi
  41f795:	xchg   ecx,eax
  41f796:	fistp  WORD PTR [edi]
  41f798:	jne    0x41f7c0
  41f79a:	ret    0xd644
  41f79d:	cmp    edx,edx
  41f79f:	or     eax,0xd7467974
  41f7a4:	mov    bh,0xb2
  41f7a6:	pop    eax
  41f7a7:	mov    edi,edx
  41f7a9:	lds    ecx,FWORD PTR [ecx]
  41f7ab:	adc    al,ah
  41f7ad:	mov    al,ds:0x6958653d
  41f7b2:	rcl    BYTE PTR [ebx-0x446e13ec],1
  41f7b8:	out    0xa2,eax
  41f7ba:	xchg   edx,eax
  41f7bb:	fild   QWORD PTR [eax]
  41f7bd:	(bad)  
  41f7be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7bf:	mov    ss,ecx
  41f7c1:	jge    0x41f7b8
  41f7c3:	ds in  eax,dx
  41f7c5:	(bad)  
  41f7c6:	mov    bl,0x23
  41f7c8:	jecxz  0x41f83c
  41f7ca:	inc    eax
  41f7cb:	(bad)  
  41f7cd:	push   edx
  41f7ce:	bound  edx,QWORD PTR [ecx]
  41f7d0:	or     al,0x1d
  41f7d2:	repz mov esi,0x2b5186fc
  41f7d8:	pop    edx
  41f7d9:	paddusb mm1,QWORD PTR es:[ebx-0x72]
  41f7de:	shr    cl,cl
  41f7e0:	cmove  edx,ebp
  41f7e3:	icebp  
  41f7e4:	cmp    ebp,esp
  41f7e6:	fidivr WORD PTR [edx-0x48]
  41f7e9:	and    edx,DWORD PTR [ebx]
  41f7eb:	mov    ah,0xfd
  41f7ed:	ins    DWORD PTR es:[edi],dx
  41f7ee:	loopne 0x41f809
  41f7f0:	sbb    BYTE PTR [eax+ecx*2],0xe7
  41f7f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7f6:	int3   
  41f7f7:	int3   
  41f7f8:	push   esp
  41f7f9:	lea    ebp,[edi]
  41f7fb:	ror    BYTE PTR [edx-0x72],0x72
  41f7ff:	je     0x41f818
  41f801:	cdq    
  41f802:	cmc    
  41f803:	or     eax,0x453a11bd
  41f808:	loope  0x41f867
  41f80a:	in     al,0xe2
  41f80c:	add    al,0x12
  41f80e:	popf   
  41f80f:	mov    bh,0xe5
  41f811:	xor    BYTE PTR [edx-0x75],al
  41f814:	lahf   
  41f815:	and    al,0xc6
  41f817:	(bad)  
  41f818:	hlt    
  41f819:	or     al,ah
  41f81b:	xchg   BYTE PTR [edi-0x7],ah
  41f81e:	mov    dh,0x4b
  41f820:	xor    al,0xf0
  41f822:	cmp    al,0xfc
  41f824:	(bad)  
  41f825:	cmp    ebp,ebp
  41f827:	xchg   BYTE PTR [ebx],dl
  41f829:	xchg   BYTE PTR [ecx+0x36b0fca5],ch
  41f82f:	mov    al,ds:0x5a17ee24
  41f834:	lods   al,BYTE PTR ds:[esi]
  41f835:	pop    ebp
  41f836:	cli    
  41f837:	shl    DWORD PTR [esi+0x17d63e0e],cl
  41f83d:	out    dx,al
  41f83e:	pop    edi
  41f83f:	adc    BYTE PTR [ebp+0x29],0x56
  41f843:	iret   
  41f844:	out    0xdc,al
  41f846:	fs mov esp,0x32cc995f
  41f84c:	call   0xb5d15705
  41f851:	push   0x578539c5
  41f856:	hlt    
  41f857:	mov    ah,0xa
  41f859:	adc    BYTE PTR [esi+0x57843497],al
  41f85f:	shl    DWORD PTR [ecx],1
  41f861:	push   0x4e
  41f863:	inc    edx
  41f864:	push   ebx
  41f865:	cmp    bh,BYTE PTR [eax+0x65]
  41f868:	sub    dh,BYTE PTR [edx*4-0x2fb8fb96]
  41f86f:	or     al,0x2a
  41f871:	and    DWORD PTR [ebx-0x70d10dde],esp
  41f877:	xchg   edx,eax
  41f878:	ffree  st(3)
  41f87a:	fisubr DWORD PTR [esi]
  41f87c:	push   esp
  41f87d:	aas    
  41f87e:	push   es
  41f87f:	sub    al,BYTE PTR [ebp-0x44552c7]
  41f885:	lods   eax,DWORD PTR ds:[esi]
  41f886:	cwde   
  41f887:	scas   al,BYTE PTR es:[edi]
  41f888:	imul   esi,DWORD PTR [edi],0x758854ef
  41f88e:	pop    edx
  41f88f:	push   ds
  41f890:	imul   ecx,DWORD PTR [eax-0x33],0x58
  41f894:	push   ds
  41f895:	mov    al,0x67
  41f897:	jns    0x41f8c0
  41f899:	ss inc edx
  41f89b:	mov    esi,0x45fa295c
  41f8a0:	cmp    edi,esi
  41f8a2:	cmp    edi,DWORD PTR [eax]
  41f8a4:	push   ecx
  41f8a5:	rol    BYTE PTR [esi+0x31],cl
  41f8a8:	or     ecx,edi
  41f8aa:	iret   
  41f8ab:	retf   0x1c1b
  41f8ae:	loope  0x41f8ea
  41f8b0:	call   DWORD PTR ss:[ecx+ebx*1-0x1f]
  41f8b5:	or     eax,0x1fdafa14
  41f8ba:	ja     0x41f91e
  41f8bc:	ret    0x31a9
  41f8bf:	or     DWORD PTR [edi+edi*8],0x7e539576
  41f8c6:	or     al,0xf9
  41f8c8:	dec    esi
  41f8c9:	test   BYTE PTR ds:0x135f1d8d,ah
  41f8cf:	xor    BYTE PTR [esi+ebx*1-0x1d52be5e],bh
  41f8d6:	push   0xffffffe2
  41f8d8:	lock neg DWORD PTR [edi+ebp*2]
  41f8dc:	mov    BYTE PTR [edi+0x5],bl
  41f8df:	sbb    al,0x27
  41f8e1:	bound  eax,QWORD PTR [esi]
  41f8e3:	cmp    al,0xf5
  41f8e5:	xor    BYTE PTR [esi-0x1aa4fad7],bh
  41f8eb:	mov    cl,0x8f
  41f8ed:	dec    edi
  41f8ee:	xchg   BYTE PTR [ebx],ah
  41f8f0:	dec    ebx
  41f8f1:	or     al,0xbf
  41f8f3:	clc    
  41f8f4:	add    al,0x61
  41f8f6:	mov    ebp,0x571c97ba
  41f8fb:	or     DWORD PTR [eax-0x7f59cecf],esp
  41f901:	test   eax,0x9ce0e14a
  41f906:	int    0xd7
  41f908:	xchg   di,ax
  41f90a:	test   DWORD PTR [ebp-0x3cce0d6a],ebp
  41f910:	(bad)
  41f913:	dec    esi
  41f914:	ds jg  0x41f988
  41f917:	push   edi
  41f918:	popf   
  41f919:	mov    ecx,0x9585910a
  41f91e:	jnp    0x41f957
  41f920:	lea    edx,[ebx]
  41f922:	cmp    eax,0x9e2e6ba8
  41f927:	jmp    0xb6ec:0x36ce819d
  41f92e:	push   ecx
  41f92f:	jo     0x41f90b
  41f931:	jno    0x41f8f7
  41f933:	jno    0x41f8ff
  41f935:	call   0xb997:0x85bb093b
  41f93c:	js     0x41f9a9
  41f93e:	je     0x41f993
  41f940:	or     edx,DWORD PTR [ecx+0x5c8558df]
  41f946:	scas   al,BYTE PTR es:[edi]
  41f947:	iret   
  41f948:	sbb    DWORD PTR [edi+eiz*8+0x40],0xfcfb07c7
  41f950:	les    eax,FWORD PTR [eax+0x44b30152]
  41f956:	push   0x856f1bcd
  41f95b:	int    0x14
  41f95d:	(bad)  
  41f95e:	pushf  
  41f95f:	cmovo  eax,DWORD PTR [ebp-0x4a9cc728]
  41f966:	out    0xd8,eax
  41f968:	xchg   DWORD PTR [eax+0x24eddcaf],eax
  41f96e:	xchg   DWORD PTR [esi-0x5e2610d0],edx
  41f974:	pop    ebx
  41f975:	je     0x41f96f
  41f977:	clc    
  41f978:	sub    bh,BYTE PTR [ebx-0x66a719ad]
  41f97e:	int3   
  41f97f:	clc    
  41f980:	ret    0x1228
  41f983:	inc    esi
  41f984:	dec    esp
  41f985:	dec    eax
  41f986:	dec    edi
  41f987:	xchg   edi,eax
  41f988:	loope  0x41f93d
  41f98a:	mov    ebx,0x59aead8
  41f98f:	xchg   edi,eax
  41f990:	xchg   DWORD PTR [esi+0x32e42e70],ebx
  41f996:	add    al,0x87
  41f998:	pop    ss
  41f999:	push   ds
  41f99a:	cwde   
  41f99b:	shl    eax,0x37
  41f99e:	daa    
  41f99f:	push   0xe065ed33
  41f9a4:	arpl   WORD PTR [ebx+0x6d],si
  41f9a7:	les    ebp,FWORD PTR [edx]
  41f9a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f9aa:	outs   dx,DWORD PTR ds:[esi]
  41f9ab:	cmc    
  41f9ac:	sub    DWORD PTR [esi],ebx
  41f9ae:	pop    ecx
  41f9af:	ins    DWORD PTR es:[edi],dx
  41f9b0:	push   0xffffffb2
  41f9b2:	(bad)  
  41f9b3:	fidivr WORD PTR [edi]
  41f9b5:	mov    eax,0x7d112402
  41f9ba:	repnz adc BYTE PTR [eax+0x4b],bl
  41f9be:	pop    es
  41f9bf:	mov    al,ds:0x2d3988aa
  41f9c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f9c5:	not    ch
  41f9c7:	push   ss
  41f9c8:	fbld   TBYTE PTR [ecx+0x6af99394]
  41f9ce:	cmc    
  41f9cf:	cmp    eax,DWORD PTR [ecx+0x7b]
  41f9d2:	out    0x70,al
  41f9d4:	mov    fs,WORD PTR [edi-0x3525916f]
  41f9da:	das    
  41f9db:	ja     0x41f981
  41f9dd:	in     eax,dx
  41f9de:	mov    ebp,0x9c2ae646
  41f9e3:	fbstp  TBYTE PTR [esp+edx*8-0x14]
  41f9e7:	inc    edx
  41f9e8:	call   FWORD PTR [ebp-0x32]
  41f9eb:	fdivr  DWORD PTR [eax+edx*4-0x6]
  41f9ef:	ja     0x41f9a1
  41f9f1:	mov    al,0x69
  41f9f3:	dec    edi
  41f9f4:	push   0xf5afd85f
  41f9f9:	push   eax
  41f9fa:	xor    eax,0x1591a4c5
  41f9ff:	xchg   bh,dl
  41fa01:	mov    edi,0xb38101ab
  41fa06:	cmp    esp,DWORD PTR [esi+esi*1-0x3bfcf520]
  41fa0d:	and    ah,BYTE PTR [eax-0x289ce4b1]
  41fa13:	sub    edi,DWORD PTR [ebx+0x3bd81734]
  41fa19:	cmp    BYTE PTR [ebx-0x5],dh
  41fa1c:	or     al,0xd
  41fa1e:	call   0x3ad77502
  41fa23:	fcomi  st,st(4)
  41fa25:	(bad)  
  41fa26:	iret   
  41fa27:	sbb    DWORD PTR [eax+0x198cf6f8],0xffffffbd
  41fa2e:	fisub  WORD PTR ds:0xb5e56b70
  41fa34:	inc    edx
  41fa35:	inc    ecx
  41fa36:	cs mov bl,0xf2
  41fa39:	xchg   esi,eax
  41fa3a:	lock pusha 
  41fa3c:	mov    edx,DWORD PTR [ebp-0x20]
  41fa3f:	xor    ecx,edx
  41fa41:	mov    edx,DWORD PTR [ebp-0x10c]
  41fa47:	mov    esi,0x180f
  41fa4c:	sub    esi,edx
  41fa4e:	mov    edx,DWORD PTR [ebp-0xa0]
  41fa54:	imul   esi,edx
  41fa57:	xor    esi,0x402b
  41fa5d:	xor    esi,0xfed78c17
  41fa63:	mov    edx,DWORD PTR [ebp-0xe8]
  41fa69:	mov    ecx,DWORD PTR [edx+ecx*1-0x68bd]
  41fa70:	add    ecx,eax
  41fa72:	add    esi,ecx
  41fa74:	mov    DWORD PTR [ebp-0x38],esi
  41fa77:	mov    DWORD PTR [ebp-0x4],0x59a8
  41fa7e:	mov    DWORD PTR [ebp-0x30],0x7021
  41fa85:	mov    DWORD PTR [ebp-0xf4],0x6210
  41fa8f:	mov    DWORD PTR [ebp-0x58],0x73d5
  41fa96:	mov    DWORD PTR [ebp-0x124],0x1e7d
  41faa0:	mov    DWORD PTR [ebp-0x3c],0x3144
  41faa7:	mov    eax,DWORD PTR [ebp-0x30]
  41faaa:	xor    eax,0x75cb
  41faaf:	mov    ecx,DWORD PTR [ebp-0x4]
  41fab2:	imul   eax,ecx
  41fab5:	mov    ecx,DWORD PTR [ebp+0x8]
  41fab8:	lea    ecx,[ecx+eax*1-0x2123b90]
  41fabf:	mov    eax,DWORD PTR [ebp-0xf4]
  41fac5:	and    eax,0x6b34
  41faca:	and    eax,0x658d
  41facf:	xor    edx,edx
  41fad1:	push   0x6
  41fad3:	pop    esi
  41fad4:	div    esi
  41fad6:	imul   eax,eax,0x3fb9
  41fadc:	mov    edx,DWORD PTR [ebp-0x3c]
  41fadf:	and    edx,0x58c7
  41fae5:	mov    esi,DWORD PTR [ebp-0x124]
  41faeb:	or     edx,esi
  41faed:	add    edx,0x7a25
  41faf3:	imul   edx,edx,0x28d2
  41faf9:	mov    esi,DWORD PTR [ebp-0x58]
  41fafc:	xor    edx,esi
  41fafe:	xor    edx,0x1856f731
  41fb04:	mov    esi,DWORD PTR [ebp-0xe8]
  41fb0a:	mov    eax,DWORD PTR [esi+eax*1-0x3fb8fdc]
  41fb11:	add    eax,ecx
  41fb13:	add    edx,eax
  41fb15:	mov    DWORD PTR [ebp-0xac],edx
  41fb1b:	mov    DWORD PTR [ebp-0x54],0x1
  41fb22:	mov    DWORD PTR [ebp-0x40],0x1ee8
  41fb29:	mov    DWORD PTR [ebp-0x1c],0x64d8
  41fb30:	mov    DWORD PTR [ebp-0xf0],0x5a06
  41fb3a:	mov    DWORD PTR [ebp-0x108],0x2eeb
  41fb44:	mov    DWORD PTR [ebp-0x104],0x2108
  41fb4e:	mov    eax,DWORD PTR [ebp-0x1c]
  41fb51:	jmp    0x41ff38
  41fb56:	cwde   
  41fb57:	push   ebx
  41fb58:	popa   
  41fb59:	pop    edx
  41fb5a:	stos   BYTE PTR es:[edi],al
  41fb5b:	jl     0x41fb15
  41fb5d:	xchg   ebx,eax
  41fb5e:	mov    dl,0x3a
  41fb60:	repnz iret 
  41fb62:	push   0xd7a4b6d1
  41fb67:	(bad)  
  41fb68:	sar    BYTE PTR [esi-0x41413bb6],0xb0
  41fb6f:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41fb71:	xchg   ecx,eax
  41fb72:	cwde   
  41fb73:	and    cl,al
  41fb75:	mov    cs,WORD PTR [esp+edx*8-0x5948c98]
  41fb7c:	jmp    0x4e66c8d1
  41fb81:	cmp    BYTE PTR [edi+eiz*8],0x97
  41fb85:	cli    
  41fb86:	xchg   ecx,eax
  41fb87:	pop    edi
  41fb88:	jl     0x41fb71
  41fb8a:	jae    0x41fc00
  41fb8c:	adc    al,0x34
  41fb8e:	mov    dl,BYTE PTR [ecx+0x68884cb7]
  41fb94:	or     BYTE PTR [edx+0x24eec01b],dl
  41fb9a:	les    edi,FWORD PTR [edx-0x6b2f82c7]
  41fba0:	das    
  41fba1:	and    eax,0x4ca917a6
  41fba6:	pop    es
  41fba7:	or     BYTE PTR [ebx+eiz*4-0x76346680],bl
  41fbae:	cld    
  41fbaf:	jo     0x41fc2f
  41fbb1:	and    al,0xe
  41fbb3:	sahf   
  41fbb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fbb5:	push   0x10
  41fbb7:	retf   0xef9d
  41fbba:	jns    0x41fb54
  41fbbc:	fwait
  41fbbd:	sbb    dl,BYTE PTR [edx-0x7daf2871]
  41fbc3:	repnz sbb eax,0x214fd339
  41fbc9:	retf   
  41fbca:	mov    ds:0xf9cbd8e1,eax
  41fbcf:	push   ebp
  41fbd0:	or     al,0xcc
  41fbd2:	add    DWORD PTR [ecx],esp
  41fbd4:	xor    al,0x1b
  41fbd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fbd7:	loopne 0x41fbf7
  41fbd9:	or     ebx,DWORD PTR [edx+0x5a3eb052]
  41fbdf:	sar    BYTE PTR [ecx+0x6c],0x28
  41fbe3:	dec    edx
  41fbe4:	loop   0x41fb89
  41fbe6:	adc    eax,DWORD PTR [edi+0x42]
  41fbe9:	dec    ebp
  41fbea:	jb     0x41fc27
  41fbec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fbed:	xchg   esi,eax
  41fbee:	test   DWORD PTR [edi+0x14],ecx
  41fbf1:	xchg   edx,eax
  41fbf2:	and    eax,0x16479c5a
  41fbf7:	inc    eax
  41fbf8:	and    dl,dl
  41fbfa:	cvttps2pi mm7,QWORD PTR [ebx+0x84d4491]
  41fc01:	xchg   ebx,eax
  41fc02:	xchg   ecx,eax
  41fc03:	loope  0x41fc69
  41fc05:	adc    ch,BYTE PTR [edi+eiz*2]
  41fc08:	cli    
  41fc09:	aas    
  41fc0a:	fist   WORD PTR [eax+0x67]
  41fc0d:	push   ss
  41fc0e:	mov    al,ds:0x6e786622
  41fc13:	push   esp
  41fc14:	adc    BYTE PTR [ecx+0x23700089],0xb2
  41fc1b:	loop   0x41fbde
  41fc1d:	fadd   QWORD PTR [edx]
  41fc1f:	in     eax,dx
  41fc20:	dec    ebp
  41fc21:	lds    edi,FWORD PTR [eax+0x67]
  41fc24:	pop    esi
  41fc25:	loop   0x41fc3e
  41fc27:	jnp    0x41fbe3
  41fc29:	or     al,0x13
  41fc2b:	cdq    
  41fc2c:	inc    ecx
  41fc2d:	repz jle 0x41fc1f
  41fc30:	push   eax
  41fc31:	push   esp
  41fc32:	cmp    al,0x74
  41fc34:	push   ss
  41fc35:	jmp    0x41fc44
  41fc37:	adc    BYTE PTR [edi+edx*2-0x3],bl
  41fc3b:	sti    
  41fc3c:	cmp    dl,BYTE PTR [edx-0x78]
  41fc3f:	jb     0x41fc5a
  41fc41:	in     al,0xdf
  41fc43:	retf   0x1111
  41fc46:	adc    BYTE PTR [ecx+eiz*1+0x6d8280c5],0x21
  41fc4e:	push   edx
  41fc4f:	(bad)  
  41fc50:	xchg   ecx,eax
  41fc51:	inc    ebx
  41fc52:	add    eax,0x744d11f3
  41fc57:	js     0x41fcc7
  41fc59:	push   0x35
  41fc5b:	xor    al,0xb0
  41fc5d:	dec    esp
  41fc5e:	int    0xcf
  41fc60:	shl    ebx,1
  41fc62:	xchg   al,bl
  41fc64:	fwait
  41fc65:	data16 or al,0x54
  41fc68:	cli    
  41fc69:	scas   al,BYTE PTR es:[edi]
  41fc6a:	sub    dl,BYTE PTR [esp+eax*4-0x4c]
  41fc6e:	adc    eax,0xd5d5457c
  41fc73:	pop    es
  41fc74:	dec    edx
  41fc75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc76:	fst    st(3)
  41fc78:	fdivr  QWORD PTR [eax-0x1eec58e6]
  41fc7e:	add    BYTE PTR [eax],dh
  41fc80:	sbb    BYTE PTR [edx-0x4df72caf],dl
  41fc86:	jmp    0x3ce5:0x16b2a610
  41fc8d:	jo     0x41fcdb
  41fc8f:	mov    al,ds:0xaf0e606e
  41fc94:	mov    edx,0x359686f7
  41fc99:	mov    bl,0x43
  41fc9b:	rcr    eax,1
  41fc9d:	stc    
  41fc9e:	(bad)  
  41fc9f:	pop    esp
  41fca0:	(bad)  
  41fca1:	call   0x617f7468
  41fca6:	add    BYTE PTR [eax+eax*2+0x67],dl
  41fcaa:	add    DWORD PTR [ebx-0x568d122f],edi
  41fcb0:	addr16 push edi
  41fcb2:	xchg   esp,eax
  41fcb3:	sub    esi,esp
  41fcb5:	xchg   ebp,eax
  41fcb6:	ins    DWORD PTR es:[edi],dx
  41fcb7:	pop    edx
  41fcb8:	push   cs
  41fcb9:	mov    eax,0xf47e973c
  41fcbe:	(bad)  
  41fcbf:	fwait
  41fcc0:	push   ecx
  41fcc1:	mov    BYTE PTR [edx+0x4a986b0],al
  41fcc7:	cmp    al,0x71
  41fcc9:	lea    edx,[esp+ebp*2+0xa0b1b0c]
  41fcd0:	pop    es
  41fcd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fcd2:	dec    eax
  41fcd3:	mov    al,ds:0x615babd5
  41fcd8:	popa   
  41fcd9:	push   eax
  41fcda:	fdivp  st(0),st
  41fcdc:	sti    
  41fcdd:	mov    ch,0x4c
  41fcdf:	jno    0x41fd4e
  41fce1:	ins    BYTE PTR es:[edi],dx
  41fce2:	fcom   QWORD PTR ds:0xa00288f7
  41fce8:	mov    ch,0x9
  41fcea:	int3   
  41fceb:	ins    BYTE PTR es:[edi],dx
  41fcec:	es mov bl,0xd0
  41fcef:	das    
  41fcf0:	mov    al,0x3d
  41fcf2:	push   eax
  41fcf3:	and    edi,esi
  41fcf5:	jmp    0x3b23:0xceaa9cc1
  41fcfc:	push   0xb0d5ce05
  41fd01:	xchg   ecx,eax
  41fd02:	add    ah,bh
  41fd04:	test   BYTE PTR [eax-0x4f],bl
  41fd07:	mov    edi,0xe5c6615b
  41fd0c:	mov    al,0x51
  41fd0e:	add    eax,DWORD PTR [ecx-0xc]
  41fd11:	adc    edx,0x4f
  41fd14:	clc    
  41fd15:	hlt    
  41fd16:	js     0x41fcba
  41fd18:	jmp    0x41fd6d
  41fd1a:	dec    eax
  41fd1b:	cwde   
  41fd1c:	je     0x41fd20
  41fd1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd1f:	mov    es,WORD PTR [edx+0x6c941726]
  41fd25:	adc    BYTE PTR [ecx-0x482c1e7d],cl
  41fd2b:	test   eax,0x67bb5645
  41fd30:	add    ch,bh
  41fd32:	pop    ebp
  41fd33:	push   0x67074652
  41fd38:	loope  0x41fd14
  41fd3a:	dec    esi
  41fd3b:	ja     0x41fd54
  41fd3d:	cli    
  41fd3e:	aam    0x1a
  41fd40:	cmp    DWORD PTR [edi],edi
  41fd42:	repz jnp 0x41fd24
  41fd45:	inc    eax
  41fd46:	xchg   ebx,eax
  41fd47:	pusha  
  41fd48:	bound  esi,QWORD PTR [edi]
  41fd4a:	daa    
  41fd4b:	(bad)  
  41fd4c:	cld    
  41fd4d:	loope  0x41fd89
  41fd4f:	icebp  
  41fd50:	les    eax,FWORD PTR [ebp+0x6574cc8d]
  41fd56:	mov    ah,0x94
  41fd58:	add    bl,BYTE PTR [ebx+0x4687206e]
  41fd5e:	pop    ecx
  41fd5f:	aam    0x79
  41fd61:	pop    ebx
  41fd62:	sub    edx,DWORD PTR [esi+0x3df1b70b]
  41fd68:	jae    0x41fd8f
  41fd6a:	cvtps2pd xmm3,QWORD PTR [edi+0x4a8377cb]
  41fd71:	jb     0x41fd6e
  41fd73:	jns    0x41fdc1
  41fd75:	jle    0x41fdc4
  41fd77:	(bad)  
  41fd78:	push   0x25
  41fd7a:	mulps  xmm6,XMMWORD PTR [eax+ebp*1+0x7a71ceba]
  41fd82:	call   0xbcf5905f
  41fd87:	js     0x41fda1
  41fd89:	add    DWORD PTR [edx],esi
  41fd8b:	out    dx,al
  41fd8c:	imul   ebp,eax,0x4750acc1
  41fd92:	jnp    0x41fd7c
  41fd94:	push   0xd0c7538a
  41fd99:	repnz push 0xffffff9a
  41fd9c:	sub    al,0xf0
  41fd9e:	adc    eax,0xbb70a5c1
  41fda3:	rcr    ah,1
  41fda5:	mov    esi,ebp
  41fda7:	or     eax,0x44a0f979
  41fdac:	ins    DWORD PTR es:[edi],dx
  41fdad:	add    BYTE PTR [edx-0x34],bh
  41fdb0:	inc    eax
  41fdb1:	fld    DWORD PTR [ebp+eiz*8-0x71]
  41fdb5:	sbb    esi,eax
  41fdb7:	cmp    eax,0x1d3d36c8
  41fdbc:	sub    ebp,DWORD PTR [eax-0xfd96a4d]
  41fdc2:	(bad)  
  41fdc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fdc4:	out    0x4e,eax
  41fdc6:	(bad)  
  41fdc7:	aas    
  41fdc8:	cmp    DWORD PTR [edx],ecx
  41fdca:	or     ebp,DWORD PTR [esi-0x234f5ab0]
  41fdd0:	inc    ebp
  41fdd1:	xor    eax,0x73c49843
  41fdd6:	add    al,0x5c
  41fdd8:	pop    ebp
  41fdd9:	lds    ecx,FWORD PTR [edi+0x6c32ff77]
  41fddf:	sub    BYTE PTR [eax+0x4b],0xc9
  41fde3:	cwde   
  41fde4:	mov    esp,0x42b6af6f
  41fde9:	stc    
  41fdea:	stos   BYTE PTR es:[edi],al
  41fdeb:	jae    0x41fdd1
  41fded:	push   ss
  41fdee:	push   ecx
  41fdef:	jl     0x41fe65
  41fdf1:	dec    edi
  41fdf2:	pop    edi
  41fdf3:	bnd jne 0x41fe1a
  41fdf6:	imul   edi,DWORD PTR [ebp-0x282e78fe],0x75
  41fdfd:	scas   al,BYTE PTR es:[edi]
  41fdfe:	lds    ebx,FWORD PTR [eax-0x66]
  41fe01:	rol    eax,1
  41fe03:	mov    ?,WORD PTR [esi-0x507a1295]
  41fe09:	fcomp  DWORD PTR [edx-0x503ddb4b]
  41fe0f:	cmp    BYTE PTR cs:0x9cff5b3b,ah
  41fe16:	or     ah,al
  41fe18:	xor    eax,0x6a5ca50f
  41fe1d:	aam    0x63
  41fe1f:	arpl   WORD PTR [ecx],cx
  41fe21:	xchg   dl,ah
  41fe23:	pop    eax
  41fe24:	outs   dx,BYTE PTR ds:[esi]
  41fe25:	cmp    bl,BYTE PTR [ebx]
  41fe27:	adc    BYTE PTR [edx],0x3
  41fe2a:	pop    ds
  41fe2b:	pop    edx
  41fe2c:	in     al,dx
  41fe2d:	and    ecx,edi
  41fe2f:	xor    ebp,DWORD PTR [edx]
  41fe31:	mov    ebp,DWORD PTR [ebx]
  41fe33:	add    DWORD PTR [edx+0x63cee19c],esi
  41fe39:	add    BYTE PTR [edx+eax*4-0x418a379c],0x82
  41fe41:	mov    edx,0xc0b83d0
  41fe46:	(bad)  
  41fe47:	xor    al,0x61
  41fe49:	jno    0x41fe32
  41fe4b:	rcr    BYTE PTR [ecx],cl
  41fe4d:	mov    eax,ds:0xd32e4511
  41fe52:	in     eax,dx
  41fe53:	in     al,dx
  41fe54:	sbb    DWORD PTR [ebx],ebx
  41fe56:	aam    0xdb
  41fe58:	je     0x41fdea
  41fe5a:	aas    
  41fe5b:	or     ecx,DWORD PTR ds:0xeddbce3d
  41fe61:	sbb    eax,0x4c703772
  41fe66:	inc    edx
  41fe67:	das    
  41fe68:	dec    eax
  41fe69:	loop   0x41fe41
  41fe6b:	inc    edi
  41fe6c:	xchg   esi,eax
  41fe6d:	ins    DWORD PTR es:[edi],dx
  41fe6e:	iret   
  41fe6f:	pop    ebp
  41fe70:	arpl   WORD PTR [edx],bp
  41fe72:	repnz and DWORD PTR [edi+ecx*4],ebp
  41fe76:	mov    esi,0xfb23232f
  41fe7b:	adc    al,0xdc
  41fe7d:	mov    ebx,0xb55fa978
  41fe82:	sub    BYTE PTR [esi+eax*8],dl
  41fe85:	dec    edi
  41fe86:	lods   eax,DWORD PTR ds:[esi]
  41fe87:	mov    dh,0x17
  41fe89:	inc    esi
  41fe8a:	outs   dx,BYTE PTR ds:[esi]
  41fe8b:	xchg   ecx,eax
  41fe8c:	mov    bh,0xfa
  41fe8e:	push   edx
  41fe8f:	in     al,dx
  41fe90:	mov    al,ds:0x83000f5b
  41fe95:	mov    ss,WORD PTR [ebx+0x54]
  41fe98:	jnp    0x41fe97
  41fe9a:	imul   esp,ebx,0x12
  41fe9d:	mov    ebp,DWORD PTR [edi-0x21ac0a9]
  41fea3:	and    BYTE PTR [edi+esi*4+0x2d],cl
  41fea7:	jb     0x41fe6f
  41fea9:	outs   dx,DWORD PTR ds:[esi]
  41feaa:	cmc    
  41feab:	out    0xa4,eax
  41fead:	xchg   ecx,eax
  41feae:	jge    0x41feca
  41feb0:	mov    dh,0x67
  41feb2:	aad    0x91
  41feb4:	pop    DWORD PTR [edi+eiz*8+0x56]
  41feb8:	(bad)  
  41feb9:	push   0x3a
  41febb:	dec    ebx
  41febc:	and    al,0x95
  41febe:	arpl   WORD PTR [ecx],sp
  41fec0:	pop    esi
  41fec1:	inc    esp
  41fec2:	fs lods al,BYTE PTR ss:[esi]
  41fec5:	dec    eax
  41fec6:	pusha  
  41fec7:	daa    
  41fec8:	jb     0x41fec7
  41feca:	loope  0x41fede
  41fecc:	mov    edx,0xb4a14026
  41fed1:	punpckhdq mm4,QWORD PTR [edx]
  41fed4:	mov    BYTE PTR [ecx+0x2b],cl
  41fed7:	aas    
  41fed8:	pusha  
  41fed9:	not    esp
  41fedb:	or     eax,DWORD PTR ds:0xc5e4a59e
  41fee1:	pop    DWORD PTR [ebx]
  41fee3:	outs   dx,DWORD PTR ds:[esi]
  41fee4:	cmp    eax,DWORD PTR [edx]
  41fee6:	mov    eax,0xb636bec8
  41feeb:	add    eax,0x97ce689c
  41fef0:	cs das 
  41fef2:	ret    
  41fef3:	in     eax,0x75
  41fef5:	mov    ch,0x98
  41fef7:	ret    0x8cc1
  41fefa:	(bad)  
  41fefb:	(bad)  
  41fefc:	adc    eax,0x13cd05e2
  41ff01:	jge    0x9a6cb582
  41ff07:	mov    al,0x64
  41ff09:	mov    ?,WORD PTR [edx+edx*4-0x77b7e069]
  41ff10:	repnz dec ebp
  41ff12:	mov    ch,0x50
  41ff14:	jle    0x41febc
  41ff16:	mov    edx,0xd9903c5f
  41ff1b:	dec    ecx
  41ff1c:	gs ss ret 
  41ff1f:	sahf   
  41ff20:	and    ebp,DWORD PTR [ebp+0x35]
  41ff23:	imul   BYTE PTR [esi+0x22]
  41ff26:	ret    
  41ff27:	mov    eax,ecx
  41ff29:	popf   
  41ff2a:	push   eax
  41ff2b:	stos   DWORD PTR es:[edi],eax
  41ff2c:	test   BYTE PTR [ebx+0x6a],0x53
  41ff30:	sbb    al,0xc
  41ff32:	push   ebp
  41ff33:	stc    
  41ff34:	xor    esi,DWORD PTR [eax-0x2dcc6cb9]
  41ff3a:	push   0x3
  41ff3c:	pop    ecx
  41ff3d:	div    ecx
  41ff3f:	mov    ecx,DWORD PTR [ebp-0x40]
  41ff42:	or     eax,ecx
  41ff44:	mov    ecx,DWORD PTR [ebp-0x54]
  41ff47:	xor    edx,edx
  41ff49:	div    ecx
  41ff4b:	imul   eax,eax,0x7d53
  41ff51:	jmp    0x420338
  41ff56:	xor    DWORD PTR [ebx],edx
  41ff58:	(bad)  
  41ff59:	in     al,dx
  41ff5a:	scas   eax,DWORD PTR es:[edi]
  41ff5b:	imul   edi,DWORD PTR [ebx-0x57113e5],0xffffffa4
  41ff62:	pop    ebx
  41ff63:	stos   DWORD PTR es:[edi],eax
  41ff64:	ss xchg edx,eax
  41ff66:	arpl   WORD PTR [ebp-0x3bb54140],dx
  41ff6c:	mov    esi,0xac41dfbe
  41ff71:	fcom   QWORD PTR [ebx-0x4b11686e]
  41ff77:	mov    ebx,0x5faa582e
  41ff7c:	or     al,0xda
  41ff7e:	pop    edx
  41ff7f:	cld    
  41ff80:	or     esp,ebp
  41ff82:	fiadd  WORD PTR [ecx]
  41ff84:	push   ss
  41ff85:	rcl    DWORD PTR [ecx],1
  41ff87:	data16 or dl,cl
  41ff8a:	out    0xa4,al
  41ff8c:	add    eax,0xb122bcbe
  41ff91:	jmp    0x41ffb8
  41ff93:	dec    edi
  41ff94:	mov    ebp,DWORD PTR fs:[edx+edi*2+0x76b1d6cb]
  41ff9c:	ror    DWORD PTR [ebp+0x530dd507],0xaa
  41ffa3:	test   eax,0xfbcbf6a4
  41ffa8:	popa   
  41ffa9:	ficom  WORD PTR [ebx+0x65]
  41ffac:	ds mov eax,0x98acfd75
  41ffb2:	sbb    ah,BYTE PTR [edx]
  41ffb4:	or     BYTE PTR [ebp+0x635c37fe],al
  41ffba:	outs   dx,BYTE PTR ds:[esi]
  41ffbb:	mov    ebp,0xc7b0e21f
  41ffc0:	shl    BYTE PTR [esi],0x93
  41ffc3:	shr    BYTE PTR [eax],0x62
  41ffc6:	mov    esi,0x79a56525
  41ffcb:	xor    eax,0x865ffccd
  41ffd0:	out    dx,eax
  41ffd1:	pusha  
  41ffd2:	ror    ecx,0x96
  41ffd5:	ret    0x41a6
  41ffd8:	jge    0x41ffe6
  41ffda:	or     al,0xef
  41ffdc:	mov    esi,0xb5a5b896
  41ffe1:	xor    ch,dl
  41ffe3:	push   esp
  41ffe4:	push   0x53
  41ffe6:	mov    al,0x5b
  41ffe8:	and    eax,DWORD PTR [edx-0x3b]
  41ffeb:	push   esp
  41ffec:	test   al,0xf2
  41ffee:	push   eax
  41ffef:	in     al,dx
  41fff0:	popa   
  41fff1:	cmc    
  41fff2:	fsub   DWORD PTR [ebp-0x7b895a6d]
  41fff8:	and    esp,ebx
  41fffa:	add    DWORD PTR [ebx-0x3b],edx
  41fffd:	add    eax,0x51fa40cf
  420002:	dec    ebp
  420003:	clc    
  420004:	adc    eax,0xe5ae4a36
  420009:	cmp    DWORD PTR [ecx],eax
  42000b:	nop
  42000c:	inc    ecx
  42000d:	int    0x26
  42000f:	in     eax,dx
  420010:	jo     0x41fff8
  420012:	pop    ebp
  420013:	pop    edi
  420014:	gs push ebx
  420016:	ror    DWORD PTR [esi+edi*8+0x2d],1
  42001a:	or     al,0x55
  42001c:	xchg   ebx,eax
  42001d:	mov    DWORD PTR [ebx],esi
  42001f:	jp     0x42007e
  420021:	aad    0xe4
  420023:	lds    eax,FWORD PTR [ecx+0x1e766f4b]
  420029:	call   FWORD PTR [edi]
  42002b:	jo     0x41ffc7
  42002d:	dec    BYTE PTR [edx+ecx*8-0x80]
  420031:	fwait
  420032:	mov    ebp,0xe8d7948d
  420037:	aad    0x66
  420039:	xor    ecx,0x7701133e
  42003f:	scas   eax,DWORD PTR es:[edi]
  420040:	push   ds
  420041:	(bad)  
  420042:	int    0x8f
  420044:	sub    edx,0x4
  420047:	add    DWORD PTR [ebp-0x16],0x51
  42004b:	inc    ebp
  42004c:	shr    BYTE PTR [edi],1
  42004e:	sbb    esp,ebx
  420050:	cmp    eax,ebx
  420052:	sub    DWORD PTR [esi],0x68f9f36c
  420058:	pop    esp
  420059:	ds fcomp st(0)
  42005c:	xchg   esi,eax
  42005d:	ror    BYTE PTR [eax-0x4e],1
  420060:	cld    
  420061:	inc    edx
  420062:	in     eax,0x58
  420064:	xor    bl,dl
  420066:	xlat   BYTE PTR ds:[ebx]
  420067:	mov    DWORD PTR [ebx-0x1f],esp
  42006a:	xor    DWORD PTR ds:0x597549f,eax
  420070:	int    0x23
  420072:	dec    edx
  420073:	xor    ch,BYTE PTR [esp+ecx*2]
  420076:	xor    al,0x86
  420078:	xchg   esi,eax
  420079:	iret   
  42007a:	pusha  
  42007b:	test   eax,ebp
  42007d:	xlat   BYTE PTR ds:[ebx]
  42007e:	mov    DWORD PTR [ecx-0x162fac35],ecx
  420084:	mov    bl,0x75
  420086:	xor    cl,ah
  420088:	push   cs
  420089:	sti    
  42008a:	and    edi,edi
  42008c:	or     ebx,ebx
  42008e:	or     al,0x66
  420090:	das    
  420091:	retf   0x3ddb
  420094:	xor    edi,DWORD PTR [edx-0x76730494]
  42009a:	in     eax,dx
  42009b:	lock sub DWORD PTR [ebx-0x4b],eax
  42009f:	scas   eax,DWORD PTR es:[edi]
  4200a0:	out    0x85,al
  4200a2:	and    al,0xdd
  4200a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4200a5:	push   ebp
  4200a6:	xor    al,BYTE PTR [esp+ebp*8-0x80]
  4200aa:	js     0x420053
  4200ac:	jno    0x420098
  4200ae:	pop    edi
  4200af:	xchg   ebp,eax
  4200b0:	xchg   esp,eax
  4200b1:	mov    BYTE PTR [ebx-0x54bcd14],cl
  4200b7:	mov    dl,0x8b
  4200b9:	dec    ebx
  4200ba:	pop    esi
  4200bb:	and    dh,BYTE PTR [esi*2+0x343996be]
  4200c2:	and    eax,DWORD PTR [ebx]
  4200c4:	mov    ebx,edx
  4200c6:	inc    ebx
  4200c7:	cwde   
  4200c8:	push   es
  4200c9:	sbb    al,0x67
  4200cb:	dec    ebx
  4200cc:	es mov ah,0xbb
  4200cf:	sbb    BYTE PTR [edx+0x45a34927],ch
  4200d5:	jo     0x42010d
  4200d7:	cmp    ebx,DWORD PTR [ebx]
  4200d9:	ret    0x3a59
  4200dc:	aam    0x20
  4200de:	inc    eax
  4200df:	rcr    BYTE PTR [eax+0x68e043c1],0x77
  4200e6:	fistp  WORD PTR [edi]
  4200e8:	xor    edi,DWORD PTR [eax+0x7d]
  4200eb:	aad    0x9e
  4200ed:	mov    ebx,0xcbe4664
  4200f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4200f3:	dec    ebp
  4200f4:	(bad)
  4200f7:	int3   
  4200f8:	push   0xc8c1edb
  4200fd:	adc    eax,0xef8a0b7
  420102:	cmp    eax,0x9751c86d
  420107:	or     al,0x49
  420109:	mov    edx,DWORD PTR [esi-0x87a92cc]
  42010f:	aad    0xce
  420111:	xor    BYTE PTR [edx],al
  420113:	dec    ecx
  420114:	adc    al,0x45
  420116:	sub    eax,0x80b92d50
  42011b:	in     al,dx
  42011c:	sub    cl,0xfe
  42011f:	cld    
  420120:	mov    al,ds:0xa92304c6
  420125:	jo     0x420101
  420127:	(bad)  
  420128:	mov    edi,0xa382cf3f
  42012d:	inc    edx
  42012e:	loopne 0x420101
  420130:	in     eax,dx
  420131:	jle    0x4200bb
  420133:	div    ah
  420135:	iret   
  420136:	out    0x2c,eax
  420138:	and    BYTE PTR [esi+0x4b],0x49
  42013c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42013d:	add    eax,0x2ef8c5d
  420142:	test   eax,0xc06c0718
  420147:	mul    eax
  420149:	xchg   esp,eax
  42014a:	xor    edx,ebp
  42014c:	sub    ebp,DWORD PTR [edi]
  42014e:	mov    bl,0x9
  420150:	outs   dx,BYTE PTR ds:[esi]
  420151:	pop    ebx
  420152:	push   esi
  420153:	in     al,0xcb
  420155:	add    BYTE PTR [edx],0x2d
  420158:	xchg   ebp,eax
  420159:	jne    0x4201c9
  42015b:	and    esi,DWORD PTR [edi+0x64]
  42015e:	icebp  
  42015f:	ss fcomip st,st(7)
  420162:	hlt    
  420163:	xchg   BYTE PTR [edx+0x52],bl
  420166:	push   ebp
  420167:	xchg   esp,eax
  420168:	jp     0x42015b
  42016a:	xor    esi,ecx
  42016c:	and    BYTE PTR [edx+0x22c4cfc1],0x8d
  420173:	fst    QWORD PTR [edx]
  420175:	xchg   edi,eax
  420176:	stos   DWORD PTR es:[edi],eax
  420177:	sti    
  420178:	fstp   QWORD PTR [esi+0x48195043]
  42017e:	sahf   
  42017f:	jmp    0x42017c
  420181:	and    DWORD PTR [ebp+0x32],esp
  420184:	dec    ebx
  420185:	mov    al,ds:0x3f9ab8d7
  42018a:	rcr    esp,1
  42018c:	push   0x64
  42018e:	std    
  42018f:	enter  0x7756,0x4c
  420193:	pop    ecx
  420194:	scas   eax,DWORD PTR es:[edi]
  420195:	dec    edi
  420196:	xchg   ebp,eax
  420197:	add    BYTE PTR [ebp+0x32],cl
  42019a:	and    esi,esi
  42019c:	ins    BYTE PTR es:[edi],dx
  42019d:	std    
  42019e:	test   BYTE PTR [edi+0x150b73e5],bh
  4201a4:	stc    
  4201a5:	xor    eax,0x1dc1b7c7
  4201aa:	mov    ebx,0x642c1cbd
  4201af:	outs   dx,DWORD PTR ds:[esi]
  4201b0:	jg     0x4201a1
  4201b2:	(bad)  
  4201b3:	aad    0x95
  4201b5:	icebp  
  4201b6:	jo     0x420192
  4201b8:	xchg   edi,eax
  4201b9:	mov    dl,0x5b
  4201bb:	or     dh,al
  4201bd:	mov    eax,0x12b57ea3
  4201c2:	loope  0x42021c
  4201c4:	pop    esp
  4201c5:	int3   
  4201c6:	test   BYTE PTR [eax],cl
  4201c8:	stc    
  4201c9:	jo     0x42019e
  4201cb:	jge    0x42021e
  4201cd:	ds mov BYTE PTR fs:0x27dce3bc,0x24
  4201d6:	and    BYTE PTR [ecx],bh
  4201d8:	sub    BYTE PTR [edi],ch
  4201da:	push   es
  4201db:	scas   al,BYTE PTR es:[edi]
  4201dc:	pop    ecx
  4201dd:	test   al,0xc2
  4201df:	out    0x2,eax
  4201e1:	mov    edx,0xa9629260
  4201e6:	test   DWORD PTR ds:0xe3eb4904,edi
  4201ec:	pop    ecx
  4201ed:	test   al,0xea
  4201ef:	dec    edi
  4201f0:	sbb    DWORD PTR [ebx+0x38e4aae6],ebx
  4201f6:	cmp    edi,ebp
  4201f8:	push   ebp
  4201f9:	mov    edx,0xb99219a8
  4201fe:	xchg   esi,eax
  4201ff:	retf   0xac78
  420202:	lods   eax,DWORD PTR ds:[esi]
  420203:	jbe    0x4201d1
  420205:	rol    ch,1
  420207:	ret    
  420208:	test   al,0xfc
  42020a:	sub    dl,cl
  42020c:	outs   dx,DWORD PTR ds:[esi]
  42020d:	add    eax,ebx
  42020f:	cmp    edi,DWORD PTR [edx+0x79]
  420212:	leave  
  420213:	mov    dl,0x9b
  420215:	jp     0x42022b
  420217:	nop
  420218:	push   edx
  420219:	mov    WORD PTR [edi],gs
  42021b:	mov    al,ds:0x20aa0b22
  420220:	push   bx
  420222:	inc    esi
  420223:	stos   BYTE PTR es:[edi],al
  420224:	xchg   BYTE PTR [eax+edi*1+0x3],cl
  420228:	(bad)  
  420229:	repnz inc edx
  42022b:	or     ch,bl
  42022d:	cmp    BYTE PTR [eax+0x19],ch
  420230:	xor    DWORD PTR [ecx],edx
  420232:	aaa    
  420233:	pop    edx
  420234:	xor    cl,BYTE PTR [edx]
  420236:	mov    esp,0x3e9f7e89
  42023b:	xchg   DWORD PTR [ebx+ebx*2+0x5e],edi
  42023f:	xchg   DWORD PTR [ecx+eiz*8],edx
  420242:	jae    0x4201c7
  420244:	addr16 and al,0xf4
  420247:	mov    al,ds:0x1cedfc47
  42024c:	pop    ds
  42024d:	stc    
  42024e:	adc    ch,bh
  420250:	fcomp  DWORD PTR [ecx-0x2b]
  420253:	lea    edx,[esp+eiz*4]
  420256:	push   ecx
  420257:	mov    bl,0xd3
  420259:	mov    al,0xc
  42025b:	push   edx
  42025c:	lods   al,BYTE PTR ds:[esi]
  42025d:	jns    0x42029c
  42025f:	(bad)  
  420260:	mov    edi,0xf2870343
  420265:	aaa    
  420266:	xor    edx,DWORD PTR [ebx+eiz*4]
  420269:	les    edx,FWORD PTR [esp+ebx*1+0x12]
  42026d:	mov    ch,BYTE PTR [esi-0x1d]
  420270:	fistp  WORD PTR [ebx]
  420272:	int3   
  420273:	in     eax,dx
  420274:	xor    DWORD PTR [ebp-0x265feb17],ecx
  42027a:	xor    DWORD PTR [ecx+edx*2],0xfffffff9
  42027e:	mov    ah,0x7a
  420280:	imul   ebx,DWORD PTR [ecx+0x11158f80],0x3fd0aef6
  42028a:	xor    BYTE PTR [eax+0x3f],al
  42028d:	sar    BYTE PTR [edx-0x34],cl
  420290:	hlt    
  420291:	(bad)  
  420292:	in     eax,dx
  420293:	popf   
  420294:	pusha  
  420295:	mov    DWORD PTR [eax-0x75665ec2],esp
  42029b:	pop    esp
  42029c:	dec    eax
  42029d:	or     eax,0xb986c7eb
  4202a2:	shl    DWORD PTR [ecx],1
  4202a4:	arpl   WORD PTR [ebp-0x5e],bp
  4202a7:	enter  0xe1a,0x19
  4202ab:	xor    ch,BYTE PTR [esi-0x3f]
  4202ae:	ret    
  4202af:	xchg   ebx,eax
  4202b0:	sub    BYTE PTR [edx],ah
  4202b2:	dec    esp
  4202b3:	stos   DWORD PTR es:[edi],eax
  4202b4:	cwde   
  4202b5:	lods   eax,DWORD PTR ds:[esi]
  4202b6:	fstp   TBYTE PTR [esi-0x53]
  4202b9:	xor    bh,BYTE PTR [edx]
  4202bb:	fwait
  4202bc:	out    0x57,eax
  4202be:	ja     0x420299
  4202c0:	dec    ebp
  4202c1:	cmp    al,0x4f
  4202c3:	loope  0x420270
  4202c5:	mov    dl,0x95
  4202c7:	mov    al,BYTE PTR ds:0x2ad8580d
  4202cd:	fisubr WORD PTR [eax-0x7c0e5034]
  4202d3:	sub    al,0x67
  4202d5:	adc    DWORD PTR [esi+0x378cfd88],ecx
  4202db:	push   ebp
  4202dc:	rcl    DWORD PTR ds:0x8256cf8d,cl
  4202e2:	inc    eax
  4202e3:	add    edx,DWORD PTR [esi]
  4202e5:	and    esp,DWORD PTR [eax+0xa]
  4202e8:	call   0x263b:0x6d07f3e2
  4202ef:	xchg   ebp,eax
  4202f0:	gs inc ecx
  4202f2:	and    al,0xe7
  4202f4:	rol    DWORD PTR [eax],cl
  4202f6:	test   DWORD PTR [edi+0x4e],eax
  4202f9:	rcl    BYTE PTR [eax-0x25],1
  4202fc:	hlt    
  4202fd:	mov    cl,0x22
  4202ff:	ret    0x39c6
  420302:	pop    ecx
  420303:	mov    ebx,0x61f3055e
  420308:	pop    si
  42030a:	mov    bh,0x16
  42030c:	scas   eax,DWORD PTR es:[edi]
  42030d:	je     0x42037b
  42030f:	fcomip st,st(2)
  420311:	and    eax,0x76972406
  420316:	jl     0x5ac3d420
  42031c:	or     al,0x35
  42031e:	ss mov ebx,0xdde048d9
  420324:	push   ebx
  420325:	adc    eax,0x84c0dc82
  42032a:	data16 in al,0x74
  42032d:	pusha  
  42032e:	mov    dl,BYTE PTR [esi-0x5aab9c6a]
  420334:	mov    ch,0xd7
  420336:	mov    ebp,ecx
  420338:	mov    ecx,DWORD PTR [ebp+0x8]
  42033b:	lea    eax,[ecx+eax*1-0x1f534807]
  420342:	mov    ecx,DWORD PTR [ebp-0xf0]
  420348:	and    ecx,0x4108
  42034e:	and    ecx,0x40e7
  420354:	sub    ecx,0x1a54
  42035a:	xor    ecx,0x25ac
  420360:	mov    edx,DWORD PTR [ebp-0x104]
  420366:	jmp    0x42074d
  42036b:	pop    eax
  42036c:	dec    ecx
  42036d:	xchg   esi,eax
  42036e:	jmp    0x42030c
  420370:	cmp    al,0xbc
  420372:	jns    0x4203a4
  420374:	inc    edx
  420375:	aad    0xe3
  420377:	inc    esi
  420378:	add    bh,cl
  42037a:	nop
  42037b:	out    dx,eax
  42037c:	popf   
  42037d:	sar    BYTE PTR [esi-0x41413bb6],0x38
  420384:	in     eax,dx
  420385:	std    
  420386:	les    esp,FWORD PTR [edi+edx*1]
  420389:	lahf   
  42038a:	pop    ebx
  42038b:	and    DWORD PTR [ecx],esi
  42038d:	nop
  42038e:	inc    eax
  42038f:	pop    esp
  420390:	cmp    DWORD PTR [edx-0x1a0f26b5],ebx
  420396:	gs jge 0x4203c1
  420399:	cwde   
  42039a:	sub    ch,ah
  42039c:	in     eax,0x1
  42039e:	mov    ecx,0xd9478886
  4203a3:	std    
  4203a4:	test   DWORD PTR [esi+0x5b44a28f],esp
  4203aa:	gs push esi
  4203ac:	test   ebp,ecx
  4203ae:	push   0x18
  4203b0:	sub    eax,0xcea91d68
  4203b5:	out    dx,al
  4203b6:	leave  
  4203b7:	pop    ss
  4203b8:	mov    esp,DWORD PTR [esi+edi*8-0x65278d5a]
  4203bf:	test   eax,0xc2b09b56
  4203c4:	mov    ch,0x79
  4203c6:	jae    0x420354
  4203c8:	mov    ebx,0xe1362ff4
  4203cd:	or     eax,0xf50dc1ae
  4203d2:	dec    ecx
  4203d3:	adc    ah,ch
  4203d5:	mov    al,BYTE PTR [esi]
  4203d7:	enter  0x7a9d,0xc4
  4203db:	xor    DWORD PTR [ecx+0x61],edx
  4203de:	or     al,0xf4
  4203e0:	loopne 0x4203b0
  4203e2:	add    BYTE PTR [esi-0x60],ah
  4203e5:	lds    esp,FWORD PTR [ecx+0x50]
  4203e8:	push   0x8
  4203ea:	dec    ecx
  4203eb:	sar    DWORD PTR [edx-0x7a],0x75
  4203ef:	and    eax,DWORD PTR [edi-0x59c2da10]
  4203f5:	ja     0x4203aa
  4203f7:	cmp    al,0x6f
  4203f9:	xlat   BYTE PTR ds:[ebx]
  4203fa:	mov    al,ds:0x3d37de79
  4203ff:	addr16 pop ss
  420401:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420402:	cwde   
  420403:	jg     0x420422
  420405:	jb     0x420420
  420407:	pop    edx
  420408:	mov    bl,0x19
  42040a:	mov    ds:0x2ac3cce6,al
  42040f:	xchg   esi,eax
  420410:	jns    0x420424
  420412:	mov    BYTE PTR [edi],dh
  420414:	or     esp,0xffffffd9
  420417:	inc    esp
  420418:	mov    esp,0xfad33dea
  42041d:	jecxz  0x4203bf
  42041f:	test   al,0x92
  420421:	test   DWORD PTR [ebx+0x5f],eax
  420424:	inc    ebp
  420425:	inc    ecx
  420426:	lea    esp,[edi]
  420428:	add    BYTE PTR [ebx],0xfc
  42042b:	mov    edx,0x3ff1a157
  420430:	ror    BYTE PTR [edx+ebx*4+0x1c],cl
  420434:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420435:	add    al,0xad
  420437:	lea    ebx,[esp+edi*1]
  42043a:	sbb    bh,BYTE PTR [edi]
  42043c:	lahf   
  42043d:	pop    ds
  42043e:	xchg   edi,eax
  42043f:	lahf   
  420440:	mov    al,ds:0xf1f2f7c
  420445:	imul   eax,edi,0x32168315
  42044b:	pushf  
  42044c:	std    
  42044d:	push   ebp
  42044e:	cwde   
  42044f:	outs   dx,BYTE PTR ds:[esi]
  420450:	ins    DWORD PTR es:[edi],dx
  420451:	jmp    0xf6a5bb70
  420456:	sbb    BYTE PTR ds:0xdafcd433,al
  42045c:	test   eax,0xafa7fd4b
  420461:	aas    
  420462:	ja     0x420402
  420464:	push   edx
  420465:	leave  
  420466:	push   ss
  420467:	fwait
  420468:	hlt    
  420469:	pop    ebx
  42046a:	pop    ebp
  42046b:	xor    DWORD PTR [eax+0x74],ebx
  42046e:	fs or  cl,0xc6
  420472:	jno    0x420427
  420474:	shr    DWORD PTR [eax+0x2d],0x54
  420478:	jb     0x420480
  42047a:	imul   edx,DWORD PTR [esi+0x5c56a07b],0xdf59674
  420484:	(bad)  
  420485:	jno    0x420436
  420487:	xchg   DWORD PTR [ebp+0x57],eax
  42048a:	push   ss
  42048b:	inc    edi
  42048c:	jl     0x420417
  42048e:	out    dx,al
  42048f:	add    bl,ah
  420491:	stos   BYTE PTR es:[edi],al
  420492:	outs   dx,BYTE PTR ds:[esi]
  420493:	out    0x76,eax
  420495:	test   eax,0x1f5f756d
  42049a:	push   esp
  42049b:	into   
  42049c:	xchg   edi,eax
  42049d:	adc    al,0xba
  42049f:	push   edx
  4204a0:	ret    
  4204a1:	mov    ds,WORD PTR [edi]
  4204a3:	int3   
  4204a4:	cmp    edi,DWORD PTR [ebp+0xdaa6355]
  4204aa:	cs and eax,0xef973ce1
  4204b0:	lods   eax,DWORD PTR ds:[esi]
  4204b1:	or     ebp,DWORD PTR [edi]
  4204b3:	mov    edx,0xf490e2fa
  4204b8:	call   0x3e53460d
  4204bd:	enter  0x3555,0x3d
  4204c1:	pop    esp
  4204c2:	call   FWORD PTR [edx-0x3edf6e5c]
  4204c8:	lea    ebp,[ebp-0x21349bee]
  4204ce:	adc    esi,DWORD PTR ds:0xf72e9c70
  4204d4:	in     eax,dx
  4204d5:	pusha  
  4204d6:	push   edx
  4204d7:	and    BYTE PTR [ebp+0x12],bl
  4204da:	adc    eax,0x3130510d
  4204df:	aam    0x75
  4204e1:	push   0xffffffb8
  4204e3:	cmp    ebp,0xffffffe7
  4204e6:	out    0x7b,eax
  4204e8:	jge    0x4204b3
  4204ea:	mov    edx,0xeb636db9
  4204ef:	push   esp
  4204f0:	sbb    al,0x93
  4204f2:	pop    ebp
  4204f3:	gs (bad) 
  4204f5:	mov    dl,0x35
  4204f7:	ror    BYTE PTR [edi+0x24],cl
  4204fa:	add    dh,BYTE PTR [ecx]
  4204fc:	add    al,0x17
  4204fe:	push   eax
  4204ff:	jge    0x4204a6
  420501:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420502:	rcr    BYTE PTR [edx+0x269183c8],cl
  420508:	test   al,0x98
  42050a:	xor    BYTE PTR [edi+0x61],dh
  42050d:	cwde   
  42050e:	imul   ebx,DWORD PTR [ebp-0x1e51e731],0x1d
  420515:	inc    eax
  420516:	lock dec ebx
  420518:	push   es
  420519:	sbb    BYTE PTR [ebp+0x4133ca06],0x57
  420520:	jg     0x42057e
  420522:	xor    BYTE PTR [esi-0x126abb20],dh
  420528:	dec    ebp
  420529:	add    al,cl
  42052b:	push   0x27
  42052d:	inc    edx
  42052e:	retf   0x2bb6
  420531:	cmp    cl,cl
  420533:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420534:	repnz push edx
  420536:	xor    dl,BYTE PTR [eax+0x4775a2f5]
  42053c:	mov    dh,0x7b
  42053e:	cwde   
  42053f:	jmp    DWORD PTR [eax+0x4ac75fb3]
  420545:	out    0xac,al
  420547:	sbb    al,0xb8
  420549:	mov    ch,0x2a
  42054b:	stos   DWORD PTR es:[edi],eax
  42054c:	ds pop edi
  42054e:	mov    DWORD PTR [ebx+0x2a8a4520],ebx
  420554:	mov    bh,0x29
  420556:	and    al,ah
  420558:	inc    esp
  420559:	mov    esi,0x1ef18079
  42055e:	stos   BYTE PTR es:[edi],al
  42055f:	or     al,0x45
  420561:	retf   0xa3f0
  420564:	ins    DWORD PTR es:[edi],dx
  420565:	fistp  DWORD PTR [ebx-0x3213fbf6]
  42056b:	addr16 (bad) 
  42056e:	or     ebp,ebp
  420570:	ja     0x420532
  420572:	xor    dl,dl
  420574:	mov    ds:0x168760c0,al
  420579:	enter  0x48d,0xfe
  42057d:	or     ch,al
  42057f:	lods   al,BYTE PTR ds:[esi]
  420580:	sbb    ah,cl
  420582:	push   esp
  420583:	and    eax,ebp
  420585:	rol    DWORD PTR [ecx],1
  420587:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  420589:	rcl    bh,cl
  42058b:	jp     0x420534
  42058d:	in     eax,0x4a
  42058f:	repnz cmp al,0xd2
  420592:	mov    al,ds:0x134a6d4e
  420597:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420598:	ret    
  420599:	pushf  
  42059a:	leave  
  42059b:	jmp    0x8a60193e
  4205a0:	pop    eax
  4205a1:	aam    0x78
  4205a3:	stos   BYTE PTR es:[edi],al
  4205a4:	push   cs
  4205a5:	mov    cl,0x1a
  4205a7:	leave  
  4205a8:	xchg   DWORD PTR [esi-0x2789bcd5],edx
  4205ae:	or     al,0x10
  4205b0:	cmp    al,0x4e
  4205b2:	aad    0xa9
  4205b4:	ret    
  4205b5:	sbb    eax,0xa3bf5c09
  4205ba:	push   ss
  4205bb:	push   ecx
  4205bc:	mov    al,ds:0x77339302
  4205c1:	add    edx,DWORD PTR [ecx+0xa]
  4205c4:	lock add ebx,DWORD PTR ds:0xe6cfe72e
  4205cb:	repnz in al,0x9b
  4205ce:	daa    
  4205cf:	rol    ebp,1
  4205d1:	test   DWORD PTR [eax+ebp*2-0x35edbc1],eax
  4205d8:	add    DWORD PTR [edi+0x5f],esp
  4205db:	sti    
  4205dc:	sbb    al,0xb8
  4205de:	jno    0x4205f8
  4205e0:	loop   0x4205ed
  4205e2:	jnp    0x420662
  4205e4:	aaa    
  4205e5:	inc    ebp
  4205e6:	push   0x1ef1c982
  4205eb:	inc    ebp
  4205ec:	mov    esi,0xac98141
  4205f1:	fistp  WORD PTR [ebp+ecx*4+0x6d2ca121]
  4205f8:	in     eax,0x1f
  4205fa:	sti    
  4205fb:	push   ds
  4205fc:	sbb    eax,DWORD PTR [ebp+ebx*1+0x7]
  420600:	sub    eax,0x59efde29
  420605:	pop    ecx
  420606:	test   BYTE PTR [esi+0x7e],dl
  420609:	loopne 0x42061b
  42060b:	std    
  42060c:	(bad)  
  42060d:	xchg   esp,eax
  42060e:	mov    esp,0xd7bb36c7
  420613:	inc    BYTE PTR [esi]
  420615:	imul   cl
  420617:	test   BYTE PTR [ecx+0x4ce9ab83],bl
  42061d:	ins    BYTE PTR es:[edi],dx
  42061e:	sub    al,0xfd
  420620:	xlat   BYTE PTR ds:[ebx]
  420621:	std    
  420622:	shr    BYTE PTR [edi-0x2d],1
  420625:	pop    edx
  420626:	adc    al,0xec
  420628:	jb     0x420699
  42062a:	push   edx
  42062b:	or     BYTE PTR [edx+0x38],bl
  42062e:	out    0x4,eax
  420630:	call   0x32070eb2
  420635:	jl     0x42068f
  420637:	push   eax
  420638:	fistp  WORD PTR [eax+0x27616f7e]
  42063e:	test   eax,0xb194765f
  420643:	mov    BYTE PTR [edi-0x737b709f],al
  420649:	sbb    al,0x36
  42064b:	cmp    bh,BYTE PTR [ebx+0x2d2d9c9b]
  420651:	stc    
  420652:	test   eax,0xb64cd14
  420657:	retf   0x2a5a
  42065a:	leave  
  42065b:	arpl   di,si
  42065d:	ret    
  42065e:	xchg   esp,eax
  42065f:	add    BYTE PTR [edx+0x14709f8a],cl
  420665:	addr16 inc esp
  420667:	dec    eax
  420668:	rcr    dh,cl
  42066a:	or     ah,BYTE PTR [esi+eax*4+0x666bc348]
  420671:	or     al,0xf7
  420673:	pop    ebx
  420674:	add    ah,BYTE PTR [eax]
  420676:	fucomp st(0)
  420678:	adc    eax,esp
  42067a:	cmc    
  42067b:	jmp    0x9a09:0x9635ed12
  420682:	out    dx,eax
  420683:	pusha  
  420684:	sub    eax,0x1a041eea
  420689:	mov    edi,DWORD PTR [ebx*1-0x42158901]
  420690:	push   esi
  420691:	ds loopne 0x42067b
  420694:	or     edx,DWORD PTR [eax+eax*8-0x5e1efe25]
  42069b:	sub    ebx,DWORD PTR [edi]
  42069d:	stos   DWORD PTR es:[edi],eax
  42069e:	mov    ebx,0x68dc771f
  4206a3:	jmp    0xd7cbbf63
  4206a8:	fild   WORD PTR [edi]
  4206aa:	xor    BYTE PTR [ebx-0x40874b20],cl
  4206b0:	test   edi,0x197ba263
  4206b6:	jae    0x42072a
  4206b8:	iret   
  4206b9:	fsincos 
  4206bb:	jmp    0x420648
  4206bd:	push   ds
  4206be:	imul   edx,ebp,0x62
  4206c1:	adc    eax,0x82402b11
  4206c6:	test   eax,0x8db280a7
  4206cb:	in     al,dx
  4206cc:	jl     0x4206bf
  4206ce:	pop    ds
  4206cf:	jge    0x4206e9
  4206d1:	cmp    DWORD PTR ds:0x4d660049,0x1b2b6169
  4206db:	sub    BYTE PTR [eax*2+0x13043034],bl
  4206e2:	leave  
  4206e3:	lods   al,BYTE PTR ds:[esi]
  4206e4:	out    dx,al
  4206e5:	add    al,0x27
  4206e7:	leave  
  4206e8:	and    al,0x49
  4206ea:	setge  BYTE PTR [ebx]
  4206ed:	daa    
  4206ee:	jg     0x420727
  4206f0:	jecxz  0x4206ba
  4206f2:	inc    edi
  4206f3:	sbb    DWORD PTR [edi+0x3996e57d],eax
  4206f9:	sbb    ebx,eax
  4206fb:	sub    DWORD PTR [ebx+0xa124b1],ecx
  420701:	(bad)  
  420702:	mov    cl,0x4d
  420704:	and    DWORD PTR [ebx-0x2f],ecx
  420707:	jns    0x4206d0
  420709:	pop    ecx
  42070a:	(bad)  
  42070b:	hlt    
  42070c:	xchg   esi,eax
  42070d:	sbb    ebp,DWORD PTR [ecx]
  42070f:	push   esp
  420710:	ins    BYTE PTR es:[edi],dx
  420711:	out    dx,al
  420712:	jg     0x420781
  420714:	mov    BYTE PTR fs:[ebx+0x11],dh
  420718:	jb     0x4206aa
  42071a:	cmp    dl,bl
  42071c:	sar    BYTE PTR [ecx+0x6b1b873a],cl
  420722:	pop    edi
  420723:	iret   
  420724:	cmp    dl,BYTE PTR [eax-0x5cc506e1]
  42072a:	pop    edi
  42072b:	push   es
  42072c:	adc    eax,0x8e4f1726
  420731:	div    eax
  420733:	test   eax,0x2115f94a
  420738:	fnsave [ebx-0x2c]
  42073b:	mov    eax,0x7f0c5554
  420740:	pop    esi
  420741:	or     eax,0xd8d69cd2
  420746:	ret    
  420747:	jno    0x4206de
  420749:	lds    edx,FWORD PTR [eax-0xd7e36af]
  42074f:	fisubr DWORD PTR [ebp+0x0]
  420752:	add    BYTE PTR [ebx-0x1074b],cl
  420758:	jmp    DWORD PTR [ebx]
  42075a:	(bad)  
  42075b:	and    edx,0xe0c
  420761:	or     edx,0x5b
  420764:	mov    esi,DWORD PTR [ebp-0xe8]
  42076a:	mov    ecx,DWORD PTR [esi+ecx*1+0x1c]
  42076e:	add    ecx,eax
  420770:	lea    eax,[edx+ecx*1-0xc5b]
  420777:	mov    DWORD PTR [ebp-0xa8],eax
  42077d:	and    DWORD PTR [ebp-0x144],0x0
  420784:	jmp    0x420b7d
  420789:	mov    eax,DWORD PTR [ebp-0x144]
  42078f:	inc    eax
  420790:	mov    DWORD PTR [ebp-0x144],eax
  420796:	jmp    0x420b7d
  42079b:	daa    
  42079c:	cmp    eax,0x75b775ce
  4207a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4207a2:	(bad)  
  4207a3:	xchg   ecx,eax
  4207a4:	(bad)  
  4207a5:	dec    esi
  4207a6:	sahf   
  4207a7:	repnz sub DWORD PTR [esi-0x2f],edx
  4207ab:	jl     0x420750
  4207ad:	sar    BYTE PTR [esi-0x41413bb6],0x46
  4207b4:	inc    edi
  4207b5:	sub    ecx,ebx
  4207b7:	xchg   edx,eax
  4207b8:	add    al,0xba
  4207ba:	and    bl,BYTE PTR [ebx+0x2299b397]
  4207c0:	sbb    BYTE PTR [eax],cl
  4207c2:	push   ebp
  4207c3:	mov    ebx,0x33c06ac0
  4207c8:	je     0x420818
  4207ca:	or     BYTE PTR es:[edx],dh
  4207cd:	in     eax,0x84
  4207cf:	jge    0x42077a
  4207d1:	xchg   esp,eax
  4207d2:	adc    bh,0xdd
  4207d5:	jp     0x4207e8
  4207d7:	mov    bl,0xab
  4207d9:	repz pop ebp
  4207db:	add    DWORD PTR [edx-0x6a0b1b75],esi
  4207e1:	cld    
  4207e2:	xor    DWORD PTR [eax],ecx
  4207e4:	dec    eax
  4207e5:	into   
  4207e6:	shl    DWORD PTR [ebx+edx*8-0x34],cl
  4207ea:	mov    ecx,0xc2c7b645
  4207ef:	xor    BYTE PTR [esi],0x17
  4207f2:	dec    ecx
  4207f3:	repnz test DWORD PTR [ecx],esi
  4207f6:	(bad)  
  4207f7:	(bad)  [ecx-0x24]
  4207fa:	cmc    
  4207fb:	push   edx
  4207fc:	retf   
  4207fd:	fstp   QWORD PTR [esi+0x33]
  420800:	clc    
  420801:	out    0xd2,eax
  420803:	dec    esp
  420804:	cmp    bl,BYTE PTR [edx+0x7ee3fb94]
  42080a:	adc    edi,eax
  42080c:	fimul  WORD PTR [esi]
  42080e:	push   edx
  42080f:	call   0xe7ab:0xd13378e4
  420816:	dec    edx
  420817:	inc    ebp
  420818:	scas   al,BYTE PTR es:[edi]
  420819:	inc    ecx
  42081a:	rol    BYTE PTR [ecx],0xc8
  42081d:	rcpps  xmm6,XMMWORD PTR [ebx+0x1a]
  420821:	fmul   DWORD PTR [edi]
  420823:	mov    esi,0x1d2b5b4a
  420828:	xchg   edi,eax
  420829:	das    
  42082a:	jmp    0x51ee0866
  42082f:	(bad)  
  420830:	shl    al,1
  420832:	jae    0x4207fc
  420834:	sub    eax,0xb0001d3f
  420839:	loope  0x4207d3
  42083b:	(bad)  
  42083d:	add    BYTE PTR [eax+ebx*4],bl
  420840:	mov    ecx,0xe7d1f7d4
  420845:	xchg   BYTE PTR [esi+eiz*8],dl
  420848:	xchg   edi,eax
  420849:	(bad)  
  42084a:	outs   dx,BYTE PTR ds:[esi]
  42084b:	arpl   WORD PTR [esi],si
  42084d:	shr    DWORD PTR [esi-0x465c5297],1
  420853:	mov    ds:0x8f6d21ef,al
  420858:	hlt    
  420859:	sti    
  42085a:	pop    ecx
  42085b:	lea    ebp,[edx+0x4f]
  42085e:	icebp  
  42085f:	(bad)  
  420860:	pop    esp
  420861:	addr16 jno 0x4208d5
  420864:	pop    ebx
  420865:	retf   0x590f
  420868:	repz retf 
  42086a:	rcl    DWORD PTR [ebx],1
  42086c:	dec    ebp
  42086d:	test   eax,0x832d9874
  420872:	add    eax,0xd747895d
  420877:	sub    eax,0xaa658b7e
  42087c:	fwait
  42087d:	das    
  42087e:	push   0x48
  420880:	dec    edx
  420881:	push   ebx
  420882:	call   0x2563:0xae607635
  420889:	ins    DWORD PTR es:[edi],dx
  42088a:	sub    ebp,DWORD PTR [ebx]
  42088c:	cmp    al,0xe2
  42088e:	cmp    BYTE PTR [ebp-0x52],dl
  420891:	jg     0x4208fb
  420893:	pop    esp
  420894:	mov    eax,0xbc504294
  420899:	fsave  [esi]
  42089c:	mov    ds:0x2043b52b,al
  4208a1:	out    0xf7,eax
  4208a3:	cmp    edi,esi
  4208a5:	in     eax,dx
  4208a6:	push   ds
  4208a7:	xor    esi,DWORD PTR [edi+0x554d3f2d]
  4208ad:	ret    
  4208ae:	loope  0x420909
  4208b0:	push   es
  4208b1:	dec    eax
  4208b2:	jo     0x42084f
  4208b4:	lods   eax,DWORD PTR ds:[esi]
  4208b5:	in     eax,0x1b
  4208b7:	rol    DWORD PTR [edi],1
  4208b9:	pop    esp
  4208ba:	bound  esi,QWORD PTR [esi+ebx*1-0x48]
  4208be:	dec    ecx
  4208bf:	inc    ebp
  4208c0:	test   eax,0x4af7ec9
  4208c5:	das    
  4208c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4208c7:	ja     0x42093c
  4208c9:	xchg   ebp,eax
  4208ca:	les    ebp,FWORD PTR [ebp-0x7d]
  4208cd:	pop    ss
  4208ce:	inc    si
  4208d0:	std    
  4208d1:	cwde   
  4208d2:	lods   al,BYTE PTR ds:[esi]
  4208d3:	je     0x420936
  4208d5:	nop
  4208d6:	mov    ds:0x496f2645,al
  4208db:	mov    ah,0x21
  4208dd:	fisub  DWORD PTR [esi-0x1a451d45]
  4208e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4208e4:	ins    BYTE PTR es:[edi],dx
  4208e5:	xchg   esi,eax
  4208e6:	inc    esi
  4208e7:	in     al,dx
  4208e8:	adc    eax,0x2dd63d04
  4208ed:	mov    ds:0xad73240e,al
  4208f2:	dec    esp
  4208f3:	cmp    BYTE PTR [ebp+0x1b9bb059],bl
  4208f9:	add    BYTE PTR [ebp-0x2e147d05],bl
  4208ff:	shl    DWORD PTR [esi+0x78ae73f4],cl
  420905:	xor    al,0x18
  420907:	cmp    dh,BYTE PTR [ecx]
  420909:	dec    esi
  42090a:	(bad)  
  42090c:	sbb    DWORD PTR [edx+0x30],esp
  42090f:	sbb    DWORD PTR [edx-0x7fa7d985],ebp
  420915:	sbb    edi,DWORD PTR [ecx+0x7c80c2d5]
  42091b:	cdq    
  42091c:	(bad)  
  42091d:	pop    esi
  42091e:	imul   ebp,DWORD PTR [ecx+0x3f],0x1de62df5
  420925:	test   eax,0xc3413836
  42092a:	and    al,0x38
  42092c:	pop    esp
  42092d:	stos   BYTE PTR es:[edi],al
  42092e:	sbb    esp,DWORD PTR [ecx*8+0x1f64fe4a]
  420935:	cs mov dl,0x84
  420938:	push   0xc0a1728f
  42093d:	hlt    
  42093e:	sub    ah,dh
  420940:	test   DWORD PTR [edx+0x33],0x38e702ec
  420947:	idiv   BYTE PTR [edi+0x33]
  42094a:	push   ebx
  42094b:	cmp    cl,dh
  42094d:	mov    ch,0xab
  42094f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420950:	cdq    
  420951:	ss popf 
  420953:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420954:	add    eax,0xa9e23588
  420959:	lods   al,BYTE PTR ds:[esi]
  42095a:	push   cs
  42095b:	ja     0x420947
  42095d:	gs jmp 0x4df98de7
  420963:	mov    ds:0x6589f4fc,al
  420968:	push   0xce9d6374
  42096d:	repz adc ah,BYTE PTR [eax-0x23]
  420971:	das    
  420972:	nop
  420973:	aam    0xf6
  420975:	push   ebx
  420976:	imul   eax,DWORD PTR [edx],0x30d3353b
  42097c:	jbe    0x42095d
  42097e:	imul   edi,ecx,0x6a2b044b
  420984:	push   ecx
  420985:	pop    es
  420986:	inc    edi
  420987:	jae    0x42094a
  420989:	push   ss
  42098a:	retf   0x2ee
  42098d:	data16 and al,0x8e
  420990:	jp     0x42093a
  420992:	loopne 0x42094c
  420994:	mov    ah,BYTE PTR [edi-0x178a36b0]
  42099a:	dec    esi
  42099b:	or     ch,BYTE PTR [edi]
  42099d:	inc    ebp
  42099e:	adc    DWORD PTR [edx],0x3944a51e
  4209a4:	loope  0x4209d4
  4209a6:	jecxz  0x4209c0
  4209a8:	and    edi,DWORD PTR [ebx-0x3241ed46]
  4209ae:	popf   
  4209af:	cmp    DWORD PTR [edx],edx
  4209b1:	jp     0x42098c
  4209b3:	push   ss
  4209b4:	ds push eax
  4209b6:	mov    al,ds:0x9e232055
  4209bb:	into   
  4209bc:	pusha  
  4209bd:	fwait
  4209be:	es pushf 
  4209c0:	mov    eax,0x798b05a0
  4209c5:	jmp    0x4209ec
  4209c7:	std    
  4209c8:	push   es
  4209c9:	push   ebp
  4209ca:	in     al,0xf1
  4209cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4209cd:	adc    DWORD PTR [ebp-0x7e4b2126],eax
  4209d3:	out    dx,eax
  4209d4:	jecxz  0x420a4f
  4209d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4209d7:	lahf   
  4209d8:	jmp    0x420a37
  4209da:	push   edx
  4209db:	test   DWORD PTR [ebp+ebp*1+0x5801e8f8],edx
  4209e2:	mov    ebp,0x7f85870a
  4209e7:	adc    dh,BYTE PTR [esi+0x1c72367f]
  4209ed:	jmp    0x29b3:0x44444bc
  4209f4:	cmp    ecx,DWORD PTR [ebp-0x33d57fef]
  4209fa:	adc    al,0xdb
  4209fc:	cmc    
  4209fd:	xor    al,0x63
  4209ff:	mov    gs,WORD PTR ds:0x7f4cef03
  420a05:	push   edx
  420a06:	inc    edi
  420a07:	pop    ebx
  420a08:	fisttp QWORD PTR [edx]
  420a0a:	test   BYTE PTR [ebx],0x8a
  420a0d:	nop
  420a0e:	rol    esi,0x79
  420a11:	adc    al,0x40
  420a13:	jmp    0x3f71:0x7528bb7e
  420a1a:	lahf   
  420a1b:	push   ebp
  420a1c:	pop    es
  420a1d:	loope  0x420a66
  420a1f:	mov    al,0x1c
  420a21:	add    BYTE PTR [ecx*8-0x36765c37],dh
  420a28:	cli    
  420a29:	inc    eax
  420a2a:	cli    
  420a2b:	lock pop ss
  420a2d:	fst    QWORD PTR [edx+0x2a]
  420a30:	sti    
  420a31:	les    ebp,FWORD PTR [ecx]
  420a33:	(bad)  
  420a34:	xchg   ecx,eax
  420a35:	pop    ebx
  420a36:	lods   eax,DWORD PTR ds:[esi]
  420a37:	jle    0x420a30
  420a39:	lds    edx,FWORD PTR [esi+0xf]
  420a3c:	out    0x77,eax
  420a3e:	lock imul ebp,DWORD PTR [esi+0x5e],0x1be0b7d5
  420a46:	adc    bh,BYTE PTR [ecx+0x3a]
  420a49:	mov    WORD PTR [esi+ebx*2],?
  420a4c:	lahf   
  420a4d:	or     edi,edi
  420a4f:	xlat   BYTE PTR ds:[ebx]
  420a50:	ins    DWORD PTR es:[edi],dx
  420a51:	or     al,0x1f
  420a53:	in     al,0x1d
  420a55:	push   ebp
  420a56:	cs jnp 0x420a0a
  420a59:	and    al,0x51
  420a5b:	mov    ecx,0xb78cbeef
  420a60:	out    dx,eax
  420a61:	pop    edx
  420a62:	sbb    bl,dl
  420a64:	pop    ebp
  420a65:	retf   
  420a66:	les    ebx,FWORD PTR [edx+0x470e694b]
  420a6c:	jl     0x420a25
  420a6e:	fimul  WORD PTR [esi+0xd]
  420a71:	dec    ebp
  420a72:	fisttp QWORD PTR [ebx]
  420a74:	add    bh,BYTE PTR [ecx]
  420a76:	aam    0x6d
  420a78:	retf   
  420a79:	iret   
  420a7a:	cs adc al,0xb7
  420a7d:	ret    
  420a7e:	cs hlt 
  420a80:	inc    esi
  420a81:	xchg   edx,eax
  420a82:	mov    ebp,0x1c6ce081
  420a87:	(bad)  
  420a88:	xchg   ecx,eax
  420a89:	test   al,0x4a
  420a8b:	jb     0x420aaa
  420a8d:	scas   al,BYTE PTR es:[edi]
  420a8e:	cmp    ecx,ebp
  420a90:	adc    eax,0x7c0c63d
  420a95:	lock cmp bh,BYTE PTR [eax+0x76]
  420a99:	mov    eax,ds:0x9dab4b3f
  420a9e:	int    0x4d
  420aa0:	mov    bh,0xbb
  420aa2:	rcl    DWORD PTR [edx+edi*2+0x565c00f3],cl
  420aa9:	mov    edx,0x9e267b4d
  420aae:	pusha  
  420aaf:	mov    edi,0x3c2f51c5
  420ab4:	xor    esi,edx
  420ab6:	and    al,0xf2
  420ab8:	pop    ecx
  420ab9:	data16 fdiv QWORD PTR [esi+ecx*1-0x22]
  420abe:	lea    esp,[ecx-0x5c]
  420ac1:	lds    ecx,FWORD PTR [edx-0x52]
  420ac4:	out    dx,eax
  420ac5:	aas    
  420ac6:	pop    ss
  420ac7:	xor    DWORD PTR [ebx-0x7e195a],esi
  420acd:	push   esi
  420ace:	mov    al,0xe7
  420ad0:	mov    dl,0xc6
  420ad2:	or     BYTE PTR [edi+0x78],dl
  420ad5:	push   cs
  420ad6:	add    eax,DWORD PTR [ebp-0x30]
  420ad9:	jl     0x420abf
  420adb:	add    al,0x2f
  420add:	shl    DWORD PTR [esi+0x62b94bb4],cl
  420ae3:	int    0x41
  420ae5:	js     0x420a89
  420ae7:	imul   esp,DWORD PTR [esi+0x4e],0x398bae4d
  420aee:	xor    al,0xc
  420af0:	int    0xa5
  420af2:	scas   al,BYTE PTR es:[edi]
  420af3:	adc    cl,BYTE PTR [esi]
  420af5:	and    bh,BYTE PTR [ebx-0x4f]
  420af8:	push   es
  420af9:	test   al,0x1d
  420afb:	(bad)  
  420afc:	and    cl,BYTE PTR [eax+0x34]
  420aff:	cmc    
  420b00:	shl    BYTE PTR [ebx],1
  420b02:	mov    esi,0x64264dc
  420b07:	inc    esi
  420b08:	ins    BYTE PTR es:[edi],dx
  420b09:	scas   al,BYTE PTR es:[edi]
  420b0a:	fild   WORD PTR ds:0xad10ace4
  420b10:	cmp    eax,0x1227456c
  420b15:	cmp    al,0x10
  420b17:	fadd   st,st(1)
  420b19:	sbb    DWORD PTR [edx+esi*1-0x46],esi
  420b1d:	pushf  
  420b1e:	out    0xa8,eax
  420b20:	pop    esi
  420b21:	adc    DWORD PTR ds:0xb89ee95a,ecx
  420b27:	fld    DWORD PTR [eax+edi*8+0x5c23c378]
  420b2e:	(bad)  
  420b2f:	imul   edx,DWORD PTR [esi+0xb8447f1],0xffffffa6
  420b36:	push   0xf982a53d
  420b3b:	push   0x2c
  420b3d:	adc    al,0x96
  420b3f:	ror    DWORD PTR [ecx-0x5a],1
  420b42:	gs jbe 0x420b0a
  420b45:	lods   al,BYTE PTR ds:[esi]
  420b46:	push   es
  420b47:	iret   
  420b48:	mov    cl,0xd4
  420b4a:	jg     0x420b8a
  420b4c:	mov    al,0x8b
  420b4e:	shl    DWORD PTR [esi+0x38874375],0xbd
  420b55:	pop    ecx
  420b56:	iret   
  420b57:	fcmovbe st,st(1)
  420b59:	jno    0x420b10
  420b5b:	loop   0x420b13
  420b5d:	in     al,dx
  420b5e:	xlat   BYTE PTR ds:[ebx]
  420b5f:	mov    DWORD PTR [ebp-0x4e761687],0xed0e8a21
  420b69:	and    DWORD PTR [eax+edi*1+0x13045b3e],0xffffffbd
  420b71:	fild   DWORD PTR [edx+0x51]
  420b74:	test   al,0xf2
  420b76:	std    
  420b77:	sti    
  420b78:	add    ch,BYTE PTR [ebx+0x4c]
  420b7b:	push   0x18858b8f
  420b80:	(bad)  
  420b81:	(bad)  
  420b82:	dec    DWORD PTR [ebx-0x14373]
  420b88:	(bad)  
  420b89:	jmp    0x420f70
  420b8e:	jo     0x420be5
  420b90:	mov    es,WORD PTR [eax+edi*4-0x74]
  420b94:	mov    ah,0x79
  420b96:	rcl    ah,cl
  420b98:	mov    WORD PTR [edi+eiz*8+0x8e3e7ed],fs
  420b9f:	stos   DWORD PTR es:[edi],eax
  420ba0:	sar    BYTE PTR [esi-0x41413bb6],0xae
  420ba7:	mov    eax,0x713c9461
  420bac:	call   DWORD PTR [ecx]
  420bae:	cdq    
  420baf:	sar    BYTE PTR [edi+edx*8],0xd0
  420bb3:	retf   
  420bb4:	jg     0x420c01
  420bb6:	dec    edi
  420bb7:	or     cl,BYTE PTR [ecx]
  420bb9:	mov    ah,0x34
  420bbb:	xchg   edx,eax
  420bbc:	dec    esi
  420bbd:	jmp    0x420bac
  420bbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420bc0:	or     ebx,DWORD PTR [ebx-0x27]
  420bc3:	imul   edx,edx,0x2beff60d
  420bc9:	dec    edi
  420bca:	pop    es
  420bcb:	xchg   esp,eax
  420bcc:	jg     0x420b98
  420bce:	inc    edi
  420bcf:	in     al,0xe4
  420bd1:	xchg   edi,eax
  420bd2:	sbb    DWORD PTR [eax-0x47666b54],ebx
  420bd8:	in     eax,0x6b
  420bda:	and    BYTE PTR [ecx+esi*2],cl
  420bdd:	repnz adc eax,0xd44265f
  420be3:	lock mov ch,0x3a
  420be6:	jne    0x420c27
  420be8:	(bad)  
  420be9:	jmp    DWORD PTR [ecx]
  420beb:	fadd   QWORD PTR [ecx-0x18]
  420bee:	inc    edi
  420bef:	xchg   ebx,eax
  420bf0:	mov    ah,0xd3
  420bf2:	arpl   WORD PTR [eax],si
  420bf4:	add    DWORD PTR [esi],ecx
  420bf6:	mov    dh,0x4a
  420bf8:	pop    edi
  420bf9:	adc    DWORD PTR [esi+0x12],esi
  420bfc:	or     ebp,eax
  420bfe:	jnp    0x420c66
  420c00:	nop
  420c01:	mov    edi,0xf77b5f2d
  420c06:	pushf  
  420c07:	(bad)
  420c0a:	adc    ebp,edi
  420c0c:	outs   dx,BYTE PTR ds:[esi]
  420c0d:	not    BYTE PTR [ecx]
  420c0f:	jmp    0xf61bc32d
  420c14:	cvtpi2ps xmm4,QWORD PTR [ebx+0xa]
  420c18:	push   es
  420c19:	xchg   BYTE PTR [edx-0x174f47eb],bl
  420c1f:	das    
  420c20:	imul   ecx,DWORD PTR [eax-0x57f4256a],0x82812d39
  420c2a:	adc    ecx,esp
  420c2c:	scas   al,BYTE PTR es:[edi]
  420c2d:	adc    esp,DWORD PTR [esi]
  420c2f:	mov    eax,0xa0230475
  420c34:	sbb    cl,BYTE PTR [edi-0x11]
  420c37:	push   edx
  420c38:	dec    ecx
  420c39:	cmp    DWORD PTR [esi+0x57],edx
  420c3c:	push   es
  420c3d:	ret    0x3d28
  420c40:	retf   0xc352
  420c43:	sbb    BYTE PTR [eax-0x37],0x0
  420c47:	icebp  
  420c48:	adc    al,0xe1
  420c4a:	sub    DWORD PTR [edx+0x63535491],edx
  420c50:	push   ss
  420c51:	xor    eax,0xdc09033e
  420c56:	int    0x9d
  420c58:	iret   
  420c59:	sbb    DWORD PTR [edx],0x50
  420c5c:	add    BYTE PTR [ebx+edx*2+0x71],cl
  420c60:	int    0x6e
  420c62:	pop    es
  420c63:	in     al,0x57
  420c65:	test   DWORD PTR [ecx+0x16f940cd],0xa5d213ad
  420c6f:	push   ebx
  420c70:	out    0x79,al
  420c72:	cmp    eax,0x87e32856
  420c77:	mov    DWORD PTR [edx+0x69],0x82a50ad1
  420c7e:	inc    edx
  420c7f:	mov    dl,0x69
  420c81:	push   esp
  420c82:	outs   dx,DWORD PTR ds:[esi]
  420c83:	pop    edx
  420c84:	mov    esi,0xae2eead8
  420c89:	push   cs
  420c8a:	add    al,0xe7
  420c8d:	aas    
  420c8e:	mov    cl,0xe7
  420c90:	add    BYTE PTR [edi-0x72aa62f8],dh
  420c96:	mov    cl,0xe8
  420c98:	les    ecx,FWORD PTR [eax]
  420c9a:	xchg   DWORD PTR [esi+0x4a],ebx
  420c9d:	sbb    al,0x86
  420c9f:	push   ecx
  420ca0:	jno    0x420d1b
  420ca2:	addr16 sbb eax,0xd784db72
  420ca8:	mov    ecx,eax
  420caa:	pushf  
  420cab:	mov    edx,0x10abdd63
  420cb0:	fmul   DWORD PTR [esi-0x341e61b0]
  420cb6:	xor    al,BYTE PTR [ebx-0x30159858]
  420cbc:	aad    0xe7
  420cbe:	sar    DWORD PTR [ebx-0x62],cl
  420cc1:	pop    ss
  420cc2:	jbe    0x420cc5
  420cc4:	pop    edx
  420cc5:	out    0x1f,al
  420cc7:	cmp    DWORD PTR [edi-0x43],esi
  420cca:	dec    esi
  420ccb:	jns    0x420ca5
  420ccd:	cdq    
  420cce:	jb     0x420d1a
  420cd0:	sti    
  420cd1:	ss icebp 
  420cd3:	or     cl,BYTE PTR [edx-0x73]
  420cd6:	lds    ecx,FWORD PTR [ebp-0x50]
  420cd9:	je     0x420c64
  420cdb:	call   0x1fca:0x5741b70d
  420ce2:	call   0x758d:0x1e8f3873
  420ce9:	cli    
  420cea:	mov    al,BYTE PTR ds:0x71727459
  420cf0:	jl     0x420c7d
  420cf2:	xchg   BYTE PTR [esi],bl
  420cf4:	aad    0xb6
  420cf6:	mul    DWORD PTR [ebx-0x543da029]
  420cfc:	push   ebp
  420cfd:	ret    0x684c
  420d00:	inc    esp
  420d01:	jge    0x420cfb
  420d03:	imul   ebx,DWORD PTR [ebp+eiz*8-0x3c],0xa5c94ddd
  420d0b:	inc    edx
  420d0c:	xor    eax,DWORD PTR [esi-0x42]
  420d0f:	xchg   ecx,eax
  420d10:	jb     0x420d29
  420d12:	std    
  420d13:	fistp  WORD PTR [ecx-0x5b04648e]
  420d19:	mov    cl,0xa3
  420d1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d1c:	push   edi
  420d1d:	xor    DWORD PTR [ebx+0x38],esi
  420d20:	das    
  420d21:	xchg   edx,eax
  420d22:	(bad)  
  420d23:	scas   al,BYTE PTR es:[edi]
  420d24:	fcomp  QWORD PTR [edx+0x41]
  420d27:	pop    ss
  420d28:	cmp    DWORD PTR [ebp-0x68],ebx
  420d2b:	mov    bl,0x6b
  420d2d:	inc    eax
  420d2e:	test   eax,0x11881649
  420d33:	pusha  
  420d34:	jle    0x420d68
  420d36:	xlat   BYTE PTR ds:[ebx]
  420d37:	out    0x55,al
  420d39:	jbe    0x420d74
  420d3b:	jne    0x420d13
  420d3d:	jo     0x420d21
  420d3f:	leave  
  420d40:	pop    esi
  420d41:	mov    DWORD PTR [ecx],0xb3f98e26
  420d47:	fst    DWORD PTR [eax+ecx*2-0x3c88eb00]
  420d4e:	fadd   st,st(2)
  420d50:	inc    esp
  420d51:	test   eax,0x592fdb1d
  420d56:	dec    esp
  420d57:	jns    0x420d6e
  420d59:	fsubr  QWORD PTR gs:[edx+edx*2]
  420d5d:	out    dx,al
  420d5e:	xchg   esi,eax
  420d5f:	hlt    
  420d60:	(bad)  
  420d61:	or     eax,0x5bca8f2c
  420d66:	leave  
  420d67:	jno    0x420da8
  420d69:	jae    0x420dd4
  420d6b:	int    0x59
  420d6d:	icebp  
  420d6e:	aaa    
  420d6f:	and    DWORD PTR [esi],edi
  420d71:	push   ecx
  420d72:	mov    dl,0xe6
  420d74:	xchg   ebp,eax
  420d75:	arpl   WORD PTR [ebx-0x10],dx
  420d78:	sti    
  420d79:	jle    0x420d46
  420d7b:	hlt    
  420d7c:	or     esi,ebx
  420d7e:	push   ss
  420d7f:	test   al,0xb6
  420d81:	sahf   
  420d82:	jecxz  0x420dd9
  420d84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d85:	sub    esi,DWORD PTR [ebx+0x42]
  420d88:	push   es
  420d89:	ror    BYTE PTR [ebx-0x5b],0xfa
  420d8d:	mov    al,ds:0xe73f4cfa
  420d92:	mov    ds:0x2f2f938,al
  420d97:	mov    cl,0xf5
  420d99:	sub    ah,BYTE PTR [ebx]
  420d9b:	mov    cl,0xf
  420d9d:	int    0x3d
  420d9f:	push   ecx
  420da0:	and    al,0x87
  420da2:	ficom  DWORD PTR [edx-0x31]
  420da5:	mov    edi,0xd4c000fe
  420daa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420dab:	(bad)  
  420dac:	ret    
  420dad:	pop    esi
  420dae:	xor    al,0xd7
  420db0:	neg    BYTE PTR cs:0x7d5cea6c
  420db7:	shl    dh,cl
  420db9:	mov    esp,0x1d1e1c92
  420dbe:	mov    bh,0x7c
  420dc0:	dec    ecx
  420dc1:	rol    ebp,1
  420dc3:	or     edx,DWORD PTR [edx-0x6d]
  420dc6:	add    BYTE PTR ds:0x492ec7af,0x28
  420dcd:	push   cs
  420dce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420dcf:	out    0x29,al
  420dd1:	mov    eax,ds:0x45a1ea92
  420dd6:	inc    esi
  420dd7:	clc    
  420dd8:	dec    eax
  420dd9:	in     eax,0x67
  420ddb:	fldenv [ecx+0x68]
  420dde:	pop    es
  420ddf:	out    0xbf,eax
  420de1:	retf   0x772e
  420de4:	mov    dh,0xd1
  420de6:	dec    ebp
  420de7:	fld    DWORD PTR [ebx-0x381e81da]
  420ded:	jecxz  0x420e30
  420def:	test   BYTE PTR [eax+0x69067944],0x85
  420df6:	mov    eax,ds:0x33b78c45
  420dfb:	into   
  420dfc:	mov    DWORD PTR [eax-0x6d058117],eax
  420e02:	mov    dl,0x5f
  420e04:	dec    eax
  420e05:	(bad)  
  420e06:	xchg   edi,eax
  420e07:	shl    DWORD PTR [ecx-0x44d5d353],1
  420e0d:	add    eax,0x8f8341f0
  420e12:	mov    al,ds:0xccad9b1a
  420e17:	dec    esi
  420e18:	pop    ds
  420e19:	push   ebx
  420e1a:	xor    ch,dh
  420e1c:	xor    eax,DWORD PTR [bx+di]
  420e1f:	dec    ebp
  420e20:	hlt    
  420e21:	mov    edi,DWORD PTR [ecx]
  420e23:	xor    ch,cl
  420e25:	and    dh,0x98
  420e28:	jo     0x420e9e
  420e2a:	jge    0x420de1
  420e2c:	push   ecx
  420e2d:	push   esp
  420e2e:	outs   dx,BYTE PTR ds:[esi]
  420e2f:	add    bh,al
  420e31:	loop   0x420dd8
  420e33:	sti    
  420e34:	clc    
  420e35:	rcl    BYTE PTR [ebp-0x5e5231ff],0x8a
  420e3c:	ds jb  0x420de0
  420e3f:	jb     0x420e3c
  420e41:	xchg   edi,eax
  420e42:	sub    DWORD PTR ds:0x1465231a,0x63
  420e49:	mul    DWORD PTR [ecx-0x2c745546]
  420e4f:	pop    esi
  420e50:	or     DWORD PTR [ebp+0x7005d4be],edx
  420e56:	std    
  420e57:	pop    edx
  420e58:	add    BYTE PTR [ecx+0x1ded635b],0x2e
  420e5f:	ins    BYTE PTR es:[edi],dx
  420e60:	repnz and BYTE PTR [ebx],0x85
  420e64:	out    0xf4,al
  420e66:	pop    esp
  420e67:	sti    
  420e68:	sbb    ebx,DWORD PTR [ebp+0x1e]
  420e6b:	retf   0x9ea9
  420e6e:	push   edx
  420e6f:	sbb    eax,0x3f2be22f
  420e74:	adc    eax,0x2016d1b8
  420e79:	ins    BYTE PTR es:[edi],dx
  420e7a:	bound  esi,QWORD PTR [edx+0x20]
  420e7d:	sbb    al,0x11
  420e7f:	daa    
  420e80:	or     DWORD PTR [edi*2+0x75185504],ebx
  420e87:	stos   DWORD PTR es:[edi],eax
  420e88:	shl    BYTE PTR [ecx-0x6dd75dea],cl
  420e8e:	leave  
  420e8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e90:	xchg   ebx,eax
  420e91:	mov    dh,0x29
  420e93:	xlat   BYTE PTR ds:[ebx]
  420e94:	call   0x46fb:0x79ee2a63
  420e9b:	pop    DWORD PTR [edx-0x64ca1aa9]
  420ea1:	nop
  420ea2:	add    al,0x92
  420ea4:	adc    eax,0xde6daf41
  420ea9:	inc    edx
  420eaa:	mov    dh,bh
  420eac:	adc    cl,BYTE PTR ds:0x6c732823
  420eb2:	sahf   
  420eb3:	sahf   
  420eb4:	dec    cx
  420eb6:	xchg   edx,eax
  420eb7:	aad    0x6b
  420eb9:	pop    eax
  420eba:	pushf  
  420ebb:	lea    eax,[edi+esi*8]
  420ebe:	jo     0x420f2a
  420ec0:	or     eax,0x628ec921
  420ec5:	outs   dx,BYTE PTR ds:[esi]
  420ec6:	pop    es
  420ec7:	adc    edi,DWORD PTR [edx+0x75e14994]
  420ecd:	jnp    0x420e97
  420ecf:	ret    0x4782
  420ed2:	imul   ecx,edi,0xfffffff0
  420ed5:	mov    ch,0x27
  420ed7:	sub    eax,0x2d88fc4e
  420edc:	jno    0x420eb9
  420ede:	out    dx,al
  420edf:	mov    al,ds:0xcb5cc298
  420ee4:	cmp    ah,cl
  420ee6:	jp     0x420ee9
  420ee8:	mov    eax,DWORD PTR [ebx-0x1d708b24]
  420eee:	(bad)  
  420eef:	in     al,0xe0
  420ef1:	jbe    0x420e81
  420ef3:	push   ecx
  420ef4:	lock lock dec ecx
  420ef7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ef8:	mov    ebp,0xb73df031
  420efd:	jns    0x420f32
  420eff:	inc    esi
  420f00:	aad    0x2
  420f02:	adc    eax,0x79de9b79
  420f07:	pop    edx
  420f08:	push   ss
  420f09:	dec    esi
  420f0a:	mov    ds:0xe5d3f869,al
  420f0f:	lods   eax,DWORD PTR ds:[esi]
  420f10:	cdq    
  420f11:	js     0x420f7c
  420f13:	pop    es
  420f14:	lods   eax,DWORD PTR ds:[esi]
  420f15:	mov    bh,0x84
  420f17:	mov    cl,0xfe
  420f19:	jl     0x420f3d
  420f1b:	xchg   ecx,eax
  420f1c:	push   ecx
  420f1d:	lods   eax,DWORD PTR ds:[esi]
  420f1e:	jae    0x420f5a
  420f20:	mov    ebx,0x6536def3
  420f25:	shr    DWORD PTR [ecx-0x1db059e9],0xe
  420f2c:	lds    bp,DWORD PTR [edx-0x269e24c]
  420f33:	lods   al,BYTE PTR ds:[esi]
  420f34:	retf   0xaa6
  420f37:	pop    esi
  420f38:	stos   DWORD PTR es:[edi],eax
  420f39:	ds mov edx,0x9348e121
  420f3f:	lds    edx,FWORD PTR [edx+esi*8-0x1388a6ff]
  420f46:	xchg   esp,eax
  420f47:	imul   ebp,DWORD PTR [esp+ebx*1],0x12bb75ec
  420f4e:	addr16 cmc 
  420f50:	mov    edx,0xde6048a7
  420f55:	(bad)  
  420f56:	in     eax,0x12
  420f58:	inc    esi
  420f59:	rcl    ebx,0xd9
  420f5c:	mov    bh,0xe6
  420f5e:	dec    ebp
  420f5f:	cmc    
  420f60:	fadd   QWORD PTR [ecx+ebp*2-0x2a]
  420f64:	and    dh,cl
  420f66:	mov    bh,0x6e
  420f68:	ret    0xe674
  420f6b:	push   ebp
  420f6c:	stos   DWORD PTR es:[edi],eax
  420f6d:	nop
  420f6e:	cdq    
  420f6f:	jmp    0xf5a57af
  420f74:	test   BYTE PTR [ecx+0x12],ch
  420f77:	add    BYTE PTR [eax],al
  420f79:	mov    eax,DWORD PTR [ebp-0x144]
  420f7f:	mov    ecx,DWORD PTR [ebp-0x38]
  420f82:	mov    edx,DWORD PTR [ebp+0x8]
  420f85:	add    edx,DWORD PTR [ecx+eax*4]
  420f88:	mov    DWORD PTR [ebp-0x48],edx
  420f8b:	mov    eax,DWORD PTR [ebp-0x48]
  420f8e:	mov    DWORD PTR [ebp-0x210],eax
  420f94:	mov    eax,DWORD PTR [ebp+0xc]
  420f97:	mov    DWORD PTR [ebp-0x20c],eax
  420f9d:	mov    DWORD PTR [ebp-0x1f0],0xcb79b576
  420fa7:	mov    DWORD PTR [ebp-0x1ec],0x9c2b8ae8
  420fb1:	mov    DWORD PTR [ebp-0x1e0],0xcb79b572
  420fbb:	mov    DWORD PTR [ebp-0x1dc],0x9c2b8ae8
  420fc5:	lea    eax,[ebp-0x1e8]
  420fcb:	mov    DWORD PTR [ebp-0x1f4],eax
  420fd1:	mov    eax,DWORD PTR [ebp-0x20c]
  420fd7:	movzx  eax,WORD PTR [eax+0x20]
  420fdb:	xor    eax,0xa59b
  420fe0:	movzx  eax,ax
  420fe3:	sar    eax,1
  420fe5:	mov    ecx,DWORD PTR [ebp-0x20c]
  420feb:	movzx  ecx,WORD PTR [ecx+0x20]
  420fef:	xor    ecx,0xa59b
  420ff5:	movzx  ecx,cx
  420ff8:	shl    ecx,0xf
  420ffb:	or     eax,ecx
  420ffd:	movzx  eax,ax
  421000:	mov    ecx,DWORD PTR [ebp-0x1f4]
  421006:	mov    DWORD PTR [ecx],eax
  421008:	mov    eax,DWORD PTR [ebp-0x1e0]
  42100e:	mov    edx,DWORD PTR [ebp-0x1dc]
  421014:	xor    eax,0xcb79b576
  421019:	xor    edx,0x9c2b8ae8
  42101f:	mov    cl,0x2
  421021:	call   0x408bb8
  421026:	mov    ebx,eax
  421028:	mov    esi,edx
  42102a:	mov    eax,DWORD PTR [ebp-0x1e0]
  421030:	mov    edx,DWORD PTR [ebp-0x1dc]
  421036:	xor    eax,0xcb79b576
  42103b:	jmp    0x421422
  421040:	xchg   ebp,eax
  421041:	or     ebp,DWORD PTR ds:0x9a3cb322
  421047:	mov    esp,0x90cf9e52
  42104c:	mov    al,0xcc
  42104e:	dec    eax
  42104f:	xchg   edx,eax
  421050:	xchg   ebx,eax
  421051:	mov    bl,0xc0
  421053:	mov    esi,0xbebec44a
  421058:	dec    edi
  421059:	mov    ebp,0x4a24dae2
  42105e:	in     al,dx
  42105f:	cs ins DWORD PTR es:[edi],dx
  421061:	ror    BYTE PTR [edi+ecx*1-0x51a76073],cl
  421068:	and    BYTE PTR [ecx-0x5ba7012a],bl
  42106e:	push   esi
  42106f:	jmp    0x1d93:0x2ac0abb8
  421076:	mov    ds:0x532445aa,al
  42107b:	dec    eax
  42107c:	jl     0x42102f
  42107e:	jl     0x4210e6
  421080:	mov    al,ds:0x1ec23778
  421085:	sub    eax,0x477282fd
  42108a:	div    DWORD PTR [edi]
  42108c:	sub    esi,esp
  42108e:	iret   
  42108f:	leave  
  421090:	nop
  421091:	pushf  
  421092:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421093:	inc    esp
  421094:	retf   0x7cec
  421097:	jb     0x42107e
  421099:	push   0x98e7f7a9
  42109e:	loope  0x421088
  4210a0:	sahf   
  4210a1:	mov    eax,0x380165a4
  4210a6:	jae    0x4210e7
  4210a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4210a9:	imul   esi,DWORD PTR ds:[ebx-0x462b6d24],0xffffffe4
  4210b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210b2:	imul   eax,edx,0x75fc46c4
  4210b8:	pusha  
  4210b9:	xor    al,0x47
  4210bb:	outs   dx,BYTE PTR ds:[esi]
  4210bc:	jg     0x4210c8
  4210be:	cdq    
  4210bf:	sub    al,0x2b
  4210c1:	sub    ecx,DWORD PTR [edx+0x9]
  4210c4:	inc    ecx
  4210c5:	idiv   DWORD PTR ds:0x77fba397
  4210cb:	jge    0x4210a8
  4210cd:	test   ebp,ecx
  4210cf:	xor    DWORD PTR [esi+0x4a8af8c7],esi
  4210d5:	mov    gs,edi
  4210d7:	xchg   ebp,eax
  4210d8:	call   0x359ea18
  4210dd:	(bad)  
  4210de:	(bad)
  4210e2:	xor    DWORD PTR [esi],ebp
  4210e4:	retw   0xd0ca
  4210e8:	jl     0x42109a
  4210ea:	cmp    al,BYTE PTR [eax+ecx*2-0x4c2bf7ca]
  4210f1:	daa    
  4210f2:	shr    BYTE PTR [edx],1
  4210f4:	jbe    0x4210b9
  4210f6:	es jne 0x4210f3
  4210f9:	leave  
  4210fa:	rol    BYTE PTR [ebx],cl
  4210fc:	dec    ecx
  4210fd:	mov    esp,0x4288713b
  421102:	addr16 cdq 
  421104:	arpl   bp,sp
  421106:	adc    BYTE PTR [ebx],cl
  421108:	fs sub eax,edx
  42110b:	ins    BYTE PTR es:[edi],dx
  42110c:	and    BYTE PTR [esi+eax*1+0x45a0496d],0x60
  421114:	mov    ch,0xf6
  421116:	pop    ebx
  421117:	lods   eax,DWORD PTR ds:[esi]
  421118:	push   ebp
  421119:	or     bh,BYTE PTR [edi-0x2e]
  42111c:	add    ebx,DWORD PTR [edx+esi*4+0x56]
  421120:	(bad)  
  421121:	cmp    cl,BYTE PTR [ecx-0x74371449]
  421127:	xchg   BYTE PTR [ebx-0xd767613],ch
  42112d:	jle    0x421150
  42112f:	mov    DWORD PTR [ebx+0x1386f24b],edx
  421135:	test   eax,0x5fd3d2c0
  42113a:	inc    ebp
  42113b:	dec    edi
  42113c:	es int 0x27
  42113f:	mov    ds:0x5d3359cb,eax
  421144:	sub    DWORD PTR [edi+0x5c0c4492],edx
  42114a:	test   eax,0x7905a0ba
  42114f:	into   
  421150:	push   ebp
  421151:	jae    0x4210fa
  421153:	inc    edx
  421154:	inc    edx
  421155:	fadd   DWORD PTR [ecx]
  421157:	mov    BYTE PTR [ecx+0x30b94a0b],0x1d
  42115e:	cmp    eax,0x69cb4c43
  421163:	loopne 0x4211bd
  421165:	or     BYTE PTR [ecx+esi*1-0x7da2ada3],0xde
  42116d:	dec    esp
  42116e:	cli    
  42116f:	xchg   DWORD PTR [edi-0x76],esi
  421172:	sub    al,0x7b
  421174:	ins    BYTE PTR es:[edi],dx
  421175:	and    al,0x91
  421177:	mov    al,ds:0x5f98f744
  42117c:	dec    esi
  42117d:	jne    0x4211be
  42117f:	pop    ebx
  421180:	div    DWORD PTR [edx+0x64]
  421183:	add    DWORD PTR [edi],ebx
  421185:	stos   BYTE PTR es:[edi],al
  421186:	jno    0x42114d
  421188:	out    0x5,al
  42118a:	cmp    al,0xdc
  42118c:	call   0x39ac:0xc37490e8
  421193:	and    DWORD PTR [edx-0x34],0x28ba3933
  42119a:	pop    es
  42119b:	inc    edi
  42119c:	lock test eax,0x4d8a78ed
  4211a2:	xor    eax,0x80df21cb
  4211a7:	adc    ebp,0xe12ba713
  4211ad:	mov    ch,0x91
  4211af:	jecxz  0x42115f
  4211b1:	adc    al,0x33
  4211b3:	sbb    al,BYTE PTR [eax+0x7a]
  4211b6:	pop    esp
  4211b7:	mov    bh,0x50
  4211b9:	lods   al,BYTE PTR ds:[esi]
  4211ba:	(bad)  [edx+0x47]
  4211bd:	mov    al,ds:0x8b1cf9de
  4211c2:	cld    
  4211c3:	jbe    0x4211ee
  4211c5:	stos   BYTE PTR es:[edi],al
  4211c6:	xor    DWORD PTR [ebp+0x68],0x1c
  4211ca:	add    bl,cl
  4211cc:	jns    0x421150
  4211ce:	push   esp
  4211cf:	mov    eax,ds:0xdc405f19
  4211d4:	outs   dx,DWORD PTR ds:[esi]
  4211d5:	sub    DWORD PTR ds:0x3e685cdb,ebx
  4211db:	out    dx,eax
  4211dc:	cli    
  4211dd:	shl    DWORD PTR [edx],0x52
  4211e0:	adc    bh,dh
  4211e2:	and    BYTE PTR [eax+0x64994fc2],0x9d
  4211e9:	push   edi
  4211ea:	mov    WORD PTR [esi],gs
  4211ec:	in     al,0x87
  4211ee:	bound  edx,QWORD PTR [eax+0x32]
  4211f1:	test   bl,dl
  4211f3:	add    eax,0x2fdee131
  4211f8:	repz add ecx,esi
  4211fb:	push   cs
  4211fc:	out    0x6d,eax
  4211fe:	test   al,0xa9
  421200:	and    cl,BYTE PTR [edi-0x1]
  421203:	popf   
  421204:	and    eax,0x6f6236d0
  421209:	aam    0xdf
  42120b:	jo     0x421274
  42120d:	lds    ebp,FWORD PTR [edx]
  42120f:	and    al,0xa
  421211:	aad    0xac
  421213:	jne    0x421280
  421215:	cli    
  421216:	inc    eax
  421217:	xchg   ecx,eax
  421218:	jo     0x4211e5
  42121a:	fcomp  DWORD PTR [ebx-0x5b]
  42121d:	mov    dl,0x80
  42121f:	sbb    edx,DWORD PTR [ecx]
  421221:	sbb    edi,ecx
  421223:	fld    st(2)
  421225:	cmp    BYTE PTR [ecx],dh
  421227:	sahf   
  421228:	jmp    0xa797:0xd8a2c3b0
  42122f:	jne    0x421296
  421231:	rol    BYTE PTR [eax-0xb],0x1e
  421235:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421236:	ins    DWORD PTR es:[edi],dx
  421237:	mov    ch,0x85
  421239:	int    0x91
  42123b:	inc    esi
  42123c:	mov    BYTE PTR [ecx],ah
  42123e:	xchg   esi,eax
  42123f:	pop    ebx
  421240:	jb     0x421200
  421242:	stos   DWORD PTR es:[edi],eax
  421243:	push   esp
  421244:	sub    DWORD PTR [edi-0x7d3de054],ebx
  42124a:	push   ebp
  42124b:	mov    dl,al
  42124d:	js     0x421264
  42124f:	arpl   WORD PTR [edi-0x48],bp
  421252:	std    
  421253:	das    
  421254:	cli    
  421255:	(bad)  
  421256:	mov    esi,0x56696fb1
  42125b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42125c:	adc    al,0x6c
  42125e:	and    eax,0x5f32e5c7
  421263:	loope  0x42122a
  421265:	and    al,0x6f
  421267:	ja     0x4212e0
  421269:	dec    edx
  42126a:	dec    ebp
  42126b:	mov    edx,DWORD PTR [ecx+esi*8-0x6e]
  42126f:	icebp  
  421270:	mov    edx,0x92f54f44
  421275:	jmp    0x761a:0xffe1caf6
  42127c:	and    eax,0x84b2c321
  421281:	cmp    ecx,esp
  421283:	pop    edi
  421284:	add    BYTE PTR ds:0x82d7686e,dh
  42128a:	in     eax,0x98
  42128c:	mov    al,ds:0xe2de0b26
  421291:	outs   dx,DWORD PTR ds:[esi]
  421292:	pusha  
  421293:	pop    esp
  421294:	mov    edx,DWORD PTR [edi]
  421296:	sahf   
  421297:	jbe    0x421226
  421299:	scas   al,BYTE PTR es:[edi]
  42129a:	nop
  42129b:	or     dl,BYTE PTR [edx]
  42129d:	loopne 0x4212f1
  42129f:	retf   0x2c95
  4212a2:	sbb    al,0xf5
  4212a4:	mov    cl,0xf1
  4212a6:	adc    al,0x10
  4212a8:	jl     0x421313
  4212aa:	and    eax,0xab27e385
  4212af:	sub    cl,BYTE PTR [ecx]
  4212b1:	sbb    eax,0xc2bb389f
  4212b6:	and    DWORD PTR [edx],0x54dc34dd
  4212bc:	mov    cs,ecx
  4212be:	iret   
  4212bf:	jl     0x42133f
  4212c1:	sub    eax,0x8acc5e5
  4212c6:	rcl    BYTE PTR [esi],cl
  4212c8:	lods   eax,DWORD PTR ds:[esi]
  4212c9:	neg    DWORD PTR [eax+edx*8-0x4e5a8881]
  4212d0:	ins    BYTE PTR es:[edi],dx
  4212d1:	inc    ebp
  4212d2:	ret    0xd636
  4212d5:	or     al,BYTE PTR [edi]
  4212d7:	mov    ecx,0xb506fda8
  4212dc:	cmp    DWORD PTR [edx+0xf],0xffffff90
  4212e0:	jge    0x42130b
  4212e2:	jne    0x421350
  4212e4:	retf   
  4212e5:	outs   dx,BYTE PTR cs:[esi]
  4212e7:	cmp    bl,ch
  4212e9:	ret    
  4212ea:	xchg   edi,eax
  4212eb:	fldenv [ecx+ebp*4]
  4212ee:	dec    edx
  4212ef:	jo     0x4212f6
  4212f1:	test   DWORD PTR [ebx-0x4d63de0b],esi
  4212f7:	(bad)  
  4212f8:	sbb    BYTE PTR [ebp+0x687a3a13],ah
  4212fe:	loopne 0x42131e
  421300:	and    dh,dl
  421302:	imul   esi,edx,0x7
  421305:	cmp    esp,edi
  421307:	cmp    BYTE PTR [edi+eiz*8-0x4838dc74],dl
  42130e:	and    al,0xd6
  421310:	aam    0x8e
  421312:	or     DWORD PTR [esi+0x26],ecx
  421315:	stos   DWORD PTR es:[edi],eax
  421316:	mov    BYTE PTR [ebp-0x3ee056c2],dl
  42131c:	pop    edx
  42131d:	push   0xd6749fd4
  421322:	mov    BYTE PTR [ebp+ecx*1-0x6bc84d56],bh
  421329:	lahf   
  42132a:	test   BYTE PTR [edx],al
  42132c:	sbb    al,0x1
  42132e:	das    
  42132f:	mov    WORD PTR [edx],fs
  421331:	jo     0x42138f
  421333:	in     eax,0x17
  421335:	sbb    eax,0x91aad8b4
  42133a:	test   eax,0xbdd9f359
  42133f:	cmp    al,0x5e
  421341:	pop    es
  421342:	(bad)  
  421343:	es je  0x42137e
  421346:	xchg   esp,eax
  421347:	pushf  
  421348:	shr    DWORD PTR [ebx+edx*1-0x29],0x91
  42134d:	xchg   ebp,eax
  42134e:	cmp    BYTE PTR [esi],ah
  421350:	in     eax,0x4d
  421352:	sub    BYTE PTR [ecx],bl
  421354:	(bad)  
  421355:	jle    0x4213c3
  421357:	mov    dl,0xde
  421359:	push   edx
  42135a:	mov    DWORD PTR [ecx-0x65],edi
  42135d:	in     al,0xe1
  42135f:	xchg   ebp,eax
  421360:	stc    
  421361:	lods   eax,DWORD PTR ds:[esi]
  421362:	cld    
  421363:	stos   BYTE PTR es:[edi],al
  421364:	call   FWORD PTR [edi-0x69b88a12]
  42136a:	js     0x42139e
  42136c:	jmp    0x1258324e
  421371:	fadd   DWORD PTR [esi+eax*2-0x23]
  421375:	pop    ebx
  421376:	mov    DWORD PTR [esi+0x6e162521],ecx
  42137c:	ins    DWORD PTR es:[edi],dx
  42137d:	sbb    al,0x9d
  42137f:	or     cl,BYTE PTR [ecx]
  421381:	ficomp DWORD PTR [ecx+0x6af42123]
  421387:	jmp    0xf576:0x8f3
  42138d:	sub    ebp,DWORD PTR [eax+0x101b9a26]
  421393:	into   
  421394:	jmp    0x421326
  421396:	pop    ss
  421397:	adc    ebp,DWORD PTR [edi]
  421399:	enter  0xdce,0xb8
  42139d:	mov    ds,esp
  42139f:	mov    eax,0x36efe92d
  4213a4:	mov    ebp,0x45661817
  4213a9:	push   edx
  4213aa:	das    
  4213ab:	inc    ebp
  4213ac:	inc    eax
  4213ad:	rcl    BYTE PTR [ebx+0x77],cl
  4213b0:	cmp    ah,cl
  4213b2:	cmc    
  4213b3:	sub    eax,DWORD PTR [esp+edi*8+0x29]
  4213b7:	jmp    0x4213a0
  4213b9:	pop    esp
  4213ba:	jmp    0xcbf6e42f
  4213bf:	inc    ecx
  4213c0:	sahf   
  4213c1:	fld    TBYTE PTR [edx]
  4213c3:	fadd   st,st(4)
  4213c5:	add    DWORD PTR [edx+0x4c5daeaa],ecx
  4213cb:	mul    DWORD PTR [ecx+0x74]
  4213ce:	gs pop esp
  4213d0:	inc    ecx
  4213d1:	inc    edx
  4213d2:	fld    TBYTE PTR [esi-0x69]
  4213d5:	ds fcomp st(2)
  4213d8:	pop    ss
  4213d9:	inc    esi
  4213da:	adc    bh,BYTE PTR [ecx+0x78dc78f2]
  4213e0:	(bad)  
  4213e1:	std    
  4213e2:	fistp  WORD PTR [ebx+0x5b763b22]
  4213e8:	push   edx
  4213e9:	mov    ah,0xa0
  4213eb:	mov    BYTE PTR ds:[eax+eax*8],bl
  4213ef:	arpl   WORD PTR [edi],bx
  4213f1:	shl    DWORD PTR [edx-0x4c],cl
  4213f4:	and    esi,ebp
  4213f6:	in     al,dx
  4213f7:	dec    ebp
  4213f8:	push   esp
  4213f9:	mov    dh,0x8b
  4213fb:	push   ebx
  4213fc:	imul   edi,DWORD PTR [ebx+0x4f],0xb6d34c71
  421403:	mov    esp,0x1d7eb828
  421408:	fsubr  DWORD PTR [ebx]
  42140a:	jg     0x42138f
  42140c:	pop    es
  42140d:	sbb    DWORD PTR [eax+0x15cdb3ae],edi
  421413:	xchg   ecx,eax
  421414:	ror    BYTE PTR [esp+eiz*4],1
  421417:	add    BYTE PTR [esi-0x11484e85],0x9b
  42141e:	mov    es,WORD PTR [esi-0xd7e9761]
  421424:	call   0xb1de3fb3
  421429:	ds call 0x42241f
  42142f:	or     ebx,eax
  421431:	or     esi,edx
  421433:	movzx  eax,bl
  421436:	push   eax
  421437:	lea    eax,[ebp-0x198]
  42143d:	push   eax
  42143e:	call   0x415a09
  421443:	mov    eax,DWORD PTR [ebp-0x1f0]
  421449:	mov    edx,DWORD PTR [ebp-0x1ec]
  42144f:	xor    eax,0xcb79b576
  421454:	xor    edx,0x9c2b8ae8
  42145a:	mov    cl,0x2
  42145c:	call   0x408bb8
  421461:	mov    esi,eax
  421463:	mov    edi,edx
  421465:	mov    eax,DWORD PTR [ebp-0x1f0]
  42146b:	jmp    0x421852
  421470:	out    0xc8,eax
  421472:	push   esi
  421473:	sub    esi,DWORD PTR [esi-0x44]
  421476:	mov    esp,0xfcb5630c
  42147b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42147c:	mov    cl,0xd2
  42147e:	fstp   QWORD PTR cs:[edi]
  421481:	mov    ebx,0xc44abec0
  421486:	mov    esi,0x8a2a45be
  42148b:	mov    WORD PTR [edx-0x3ebc7147],ds
  421491:	fcmovbe st,st(1)
  421493:	retf   0x5d0a
  421496:	rcr    eax,1
  421498:	and    eax,0x13a9c869
  42149d:	push   edi
  42149e:	neg    BYTE PTR [ebx-0x37]
  4214a1:	ds mov ebx,0x10177d95
  4214a7:	test   al,0x8b
  4214a9:	jecxz  0x421490
  4214ab:	test   esp,esp
  4214ad:	mov    dh,0x9f
  4214af:	jne    0x421468
  4214b1:	lea    ebp,[esi-0x19]
  4214b4:	xchg   edx,eax
  4214b5:	sbb    eax,0x36d0a08a
  4214ba:	jmp    0xf13f:0xf185fb24
  4214c1:	(bad)  
  4214c2:	out    0xfc,al
  4214c4:	sar    DWORD PTR [eax-0x6d144be5],1
  4214ca:	jb     0x421500
  4214cc:	mov    ds,WORD PTR [edi-0x48]
  4214cf:	pusha  
  4214d0:	stc    
  4214d1:	or     ax,0xa906
  4214d5:	cli    
  4214d6:	sub    eax,0xbcdab8f4
  4214db:	in     eax,dx
  4214dc:	xchg   esp,eax
  4214dd:	ja     0xb705df75
  4214e3:	adc    ecx,esi
  4214e5:	std    
  4214e6:	and    eax,0xa25702d8
  4214eb:	cld    
  4214ec:	stos   DWORD PTR es:[edi],eax
  4214ed:	and    esi,DWORD PTR [eax+0x72]
  4214f0:	bound  ecx,QWORD PTR [ebx]
  4214f2:	xchg   BYTE PTR [esi-0x224e0dc1],cl
  4214f8:	addr16 mov cl,0xdf
  4214fb:	xchg   esi,eax
  4214fc:	outs   dx,DWORD PTR ds:[esi]
  4214fd:	mov    ebx,0x5f73ff22
  421502:	fcomp  QWORD PTR [edi-0x49]
  421505:	inc    esp
  421506:	fs aaa 
  421508:	pop    esp
  421509:	bound  edi,QWORD PTR [esi-0x55]
  42150c:	add    ebx,esi
  42150e:	into   
  42150f:	inc    ebp
  421510:	into   
  421511:	pop    ecx
  421512:	pushf  
  421513:	(bad)  [edi-0x6a]
  421516:	xor    ch,ch
  421518:	mov    ecx,0x7e0bd5b0
  42151d:	aam    0x95
  42151f:	call   0xfc44:0x86550396
  421526:	jl     0x4214df
  421528:	pop    ecx
  421529:	stos   DWORD PTR es:[edi],eax
  42152a:	mov    DWORD PTR [esi+0x66],eax
  42152d:	sbb    al,0x5
  42152f:	or     ebp,DWORD PTR [ebp+ebx*1+0x55c1df1f]
  421536:	lahf   
  421537:	jns    0x4214f3
  421539:	lea    esp,[ecx+0x68]
  42153c:	dec    eax
  42153d:	pop    ebp
  42153e:	daa    
  42153f:	and    al,0x7c
  421541:	jns    0x4214ff
  421543:	gs cmp eax,0x4ca091f8
  421549:	mov    bl,0x4a
  42154b:	inc    edi
  42154c:	or     BYTE PTR [ebp-0xb],dl
  42154f:	or     DWORD PTR [ecx],edx
  421551:	daa    
  421552:	sub    DWORD PTR [eax],esi
  421554:	ins    DWORD PTR es:[edi],dx
  421555:	sbb    DWORD PTR [ebp+0x3b33bba9],esi
  42155b:	fmul   DWORD PTR [esi-0x1a]
  42155e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42155f:	jae    0x421567
  421561:	in     eax,0x29
  421563:	fidivr DWORD PTR [edi-0x7783279e]
  421569:	jle    0x4215e1
  42156b:	daa    
  42156c:	or     BYTE PTR [eax],ch
  42156e:	mov    ch,0x29
  421570:	das    
  421571:	rep movs DWORD PTR es:[di],DWORD PTR ds:[si]
  421574:	lahf   
  421575:	retf   
  421576:	mov    al,0x86
  421578:	inc    edx
  421579:	mov    ebx,gs
  42157b:	xchg   ebx,eax
  42157c:	retf   0x113
  42157f:	lods   eax,DWORD PTR ds:[esi]
  421580:	sub    ch,BYTE PTR [edx]
  421582:	hlt    
  421583:	adc    eax,0xdc59ff7e
  421588:	or     DWORD PTR [ebx],esp
  42158a:	in     al,0x37
  42158c:	sti    
  42158d:	fld    TBYTE PTR [eax-0x27dcaaab]
  421593:	jb     0x421517
  421595:	or     dl,cl
  421597:	(bad)  
  421598:	adc    eax,DWORD PTR [ecx-0x1e]
  42159b:	push   ss
  42159c:	mov    dh,0xbb
  42159e:	push   cs
  42159f:	xchg   DWORD PTR [esi-0x34],esp
  4215a2:	mov    eax,ds:0xca38408b
  4215a7:	mov    ch,0x30
  4215a9:	mov    bl,0xad
  4215ab:	ins    DWORD PTR es:[edi],dx
  4215ac:	or     eax,0x3f2c2cd0
  4215b1:	mov    esi,0x4c4a58c3
  4215b6:	mov    bl,0xae
  4215b8:	test   DWORD PTR fs:[esi+ecx*8],ecx
  4215bc:	adc    ah,BYTE PTR [esi*1-0x4fb87588]
  4215c3:	stos   BYTE PTR es:[edi],al
  4215c4:	(bad)  
  4215c5:	aad    0xb0
  4215c7:	push   esp
  4215c8:	or     eax,0x61059495
  4215cd:	lea    eax,[edi+edx*4+0x5d]
  4215d1:	xchg   ebp,eax
  4215d2:	pop    ebp
  4215d3:	iret   
  4215d4:	mov    ecx,0x78aa0eb9
  4215d9:	adc    BYTE PTR [edi+0x3fd21a7c],dl
  4215df:	(bad)  
  4215e0:	in     al,dx
  4215e1:	outs   dx,BYTE PTR ds:[esi]
  4215e2:	mov    WORD PTR [ebx-0x1c],fs
  4215e5:	ins    DWORD PTR es:[edi],dx
  4215e6:	into   
  4215e7:	lea    ecx,[edx+eiz*2]
  4215ea:	repnz icebp 
  4215ec:	add    DWORD PTR [ebp-0x45e74e4c],esp
  4215f2:	aas    
  4215f3:	adc    ah,BYTE PTR [ebp-0x2dc3b371]
  4215f9:	cli    
  4215fa:	push   ebp
  4215fb:	sbb    DWORD PTR [edx+0x34],ebx
  4215fe:	xor    esp,ecx
  421600:	ja     0x421643
  421602:	jns    0x42158d
  421604:	ret    
  421605:	jl     0x42164b
  421607:	cld    
  421608:	in     eax,0x6f
  42160a:	jecxz  0x421656
  42160c:	xchg   ecx,eax
  42160d:	fwait
  42160e:	je     0x421615
  421610:	clc    
  421611:	jg     0x4215be
  421613:	gs pop ds
  421615:	dec    esp
  421616:	push   ss
  421617:	push   es
  421618:	in     al,dx
  421619:	mov    WORD PTR [ebx+ebx*2-0x8b0abb7],fs
  421620:	add    DWORD PTR [esi],esi
  421622:	(bad)  
  421623:	fmul   DWORD PTR [edi-0x525772d1]
  421629:	(bad)  
  42162b:	push   ebp
  42162c:	push   edx
  42162d:	push   edi
  42162e:	or     dh,cl
  421630:	(bad)  
  421631:	cs inc esi
  421633:	mov    edx,0x567fe013
  421638:	fstp   QWORD PTR [eax]
  42163a:	fcom   DWORD PTR [esi]
  42163c:	pop    esp
  42163d:	hlt    
  42163e:	sbb    eax,0x3931332a
  421643:	pop    esp
  421644:	lds    esp,FWORD PTR [ecx+0x2081df75]
  42164a:	ss (bad) 
  42164d:	leave  
  42164e:	jmp    0x421627
  421650:	mov    edx,0x870b03ec
  421655:	repnz push 0x7d
  421658:	and    BYTE PTR [edx],ch
  42165a:	(bad)  
  42165b:	jae    0x421645
  42165d:	inc    esi
  42165e:	fistp  QWORD PTR [edx-0x4147630]
  421664:	jae    0x421691
  421666:	add    eax,0x229d41c5
  42166b:	pop    ebx
  42166c:	mov    DWORD PTR [edx],ecx
  42166e:	xchg   DWORD PTR [ebx+0xb],ebx
  421671:	test   BYTE PTR [edx+0x6b],cl
  421674:	inc    esp
  421675:	cli    
  421676:	adc    al,0x25
  421678:	call   0x63b92a09
  42167d:	mov    dl,0x76
  42167f:	xor    al,ah
  421681:	rcr    esi,1
  421683:	mov    ebp,0x698eb2a8
  421688:	mov    eax,ds:0xd04d5d3f
  42168d:	mov    ebp,0xddb2689b
  421692:	rcr    BYTE PTR [ebx-0x2ee8532f],cl
  421698:	xlat   BYTE PTR ds:[ebx]
  421699:	lds    ebp,FWORD PTR ds:0xbecd3d4b
  42169f:	add    DWORD PTR [ebp+0x4b],edx
  4216a2:	cld    
  4216a3:	sub    eax,0x9f1c87e5
  4216a8:	xchg   esp,eax
  4216a9:	retf   
  4216aa:	(bad)  
  4216ab:	mov    ch,0x35
  4216ad:	rol    DWORD PTR [ebx-0x79],1
  4216b0:	int    0xa1
  4216b2:	dec    esi
  4216b3:	iret   
  4216b4:	or     DWORD PTR [ecx-0x4f563c2a],ecx
  4216ba:	into   
  4216bb:	(bad)  
  4216bd:	aas    
  4216be:	jecxz  0x421651
  4216c0:	mov    ebp,0xb823126a
  4216c5:	and    eax,0x6e8e362c
  4216ca:	inc    esi
  4216cb:	lods   eax,DWORD PTR ds:[esi]
  4216cc:	jne    0x42169e
  4216ce:	out    dx,eax
  4216cf:	aaa    
  4216d0:	retf   
  4216d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4216d2:	(bad)  
  4216d3:	cmp    BYTE PTR [ecx-0x73],bl
  4216d6:	aam    0xc7
  4216d8:	sti    
  4216d9:	adc    BYTE PTR ds:0xc2176c53,cl
  4216df:	shr    DWORD PTR [esi+ebx*4-0x3ded0c6],cl
  4216e6:	jge    0x4216af
  4216e8:	loopne 0x421720
  4216ea:	mov    ch,0x7b
  4216ec:	std    
  4216ed:	mov    dh,0x16
  4216ef:	gs add eax,0x67ed0a77
  4216f5:	or     DWORD PTR [edi],edi
  4216f7:	jns    0x4216c8
  4216f9:	aam    0x58
  4216fb:	into   
  4216fc:	out    dx,al
  4216fd:	jecxz  0x42175b
  4216ff:	mov    bh,0x11
  421701:	mov    ah,0xa1
  421703:	adc    cl,ah
  421705:	sar    BYTE PTR [edi],1
  421707:	cmp    bh,BYTE PTR [ebx]
  421709:	lahf   
  42170a:	jns    0x4216e6
  42170c:	retf   
  42170d:	mov    eax,ds:0xc55418ba
  421712:	leave  
  421713:	and    BYTE PTR [edx+0x68031cc3],ah
  421719:	adc    BYTE PTR [eax+0x42],al
  42171c:	xchg   edx,eax
  42171d:	std    
  42171e:	retf   
  42171f:	pushf  
  421720:	test   BYTE PTR [eax-0x3e],dh
  421723:	leave  
  421724:	push   ss
  421725:	push   ebx
  421726:	xchg   edi,eax
  421727:	push   eax
  421728:	jne    0x4216ba
  42172a:	cli    
  42172b:	add    bl,BYTE PTR [ecx]
  42172d:	test   BYTE PTR [eax+0x5c],0xbb
  421731:	(bad)  
  421732:	aad    0x13
  421734:	mov    eax,DWORD PTR [ebx+0x4b]
  421737:	fsubr  st,st(2)
  421739:	out    dx,al
  42173a:	push   es
  42173b:	ss (bad) 
  42173d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42173e:	jp     0x4217b5
  421740:	add    ch,bh
  421742:	sahf   
  421743:	repnz shl bl,1
  421746:	dec    eax
  421747:	mov    ds:0xf77f3d50,al
  42174c:	dec    esi
  42174d:	cmp    eax,0xdee5725e
  421752:	(bad)  
  421754:	fisttp QWORD PTR [edx]
  421756:	and    edx,DWORD PTR [edx-0x5bbb6cd1]
  42175c:	pop    ebp
  42175d:	jl     0x421764
  42175f:	test   BYTE PTR [edi-0x4ab773cb],al
  421765:	push   esi
  421766:	xchg   esi,eax
  421767:	sub    DWORD PTR [eax+esi*2],esi
  42176a:	inc    esi
  42176b:	sbb    dl,BYTE PTR [ebx]
  42176d:	and    al,0xe
  42176f:	push   es
  421770:	ud0    ebx,DWORD PTR [esi+0x1250d9b9]
  421777:	out    0x2,al
  421779:	stos   DWORD PTR es:[edi],eax
  42177a:	xchg   ebp,eax
  42177b:	fwait
  42177c:	pand   mm7,QWORD PTR [ebp+0x9]
  421780:	jns    0x4217b0
  421782:	jb     0x4217f6
  421784:	shr    BYTE PTR [edi],cl
  421786:	fwait
  421787:	mov    ebx,0x55435643
  42178c:	adc    esi,DWORD PTR [ebx]
  42178e:	cmp    DWORD PTR [ecx-0x560cd63c],0xffffffac
  421795:	dec    eax
  421796:	jbe    0x421803
  421798:	aad    0xca
  42179a:	or     al,0x91
  42179c:	mov    ds:0xa4f71e35,al
  4217a1:	ja     0x42177f
  4217a3:	mov    ecx,0x5b3570d7
  4217a8:	sbb    ch,BYTE PTR [ebp+eiz*2-0x2d]
  4217ac:	push   esp
  4217ad:	stos   DWORD PTR es:[edi],eax
  4217ae:	inc    ebp
  4217af:	adc    BYTE PTR [eax-0x67],ch
  4217b2:	jmp    0x732d:0x1b812e66
  4217b9:	in     al,0xd1
  4217bb:	jae    0x4217dc
  4217bd:	ja     0x4217ae
  4217bf:	sysexit 
  4217c1:	mov    ch,0xb6
  4217c3:	mov    WORD PTR [edx+0x2fcfcce2],gs
  4217c9:	rol    DWORD PTR [eax-0x71fc1dd8],cl
  4217cf:	push   ss
  4217d0:	ds or  eax,0xb0374bf2
  4217d6:	inc    esi
  4217d7:	scas   eax,DWORD PTR es:[edi]
  4217d8:	xchg   DWORD PTR [edi+ebp*8+0x30],edi
  4217dc:	pop    esp
  4217dd:	xor    ebp,DWORD PTR [ecx+0x350c4f07]
  4217e3:	add    bh,ah
  4217e5:	inc    ebp
  4217e6:	mov    ah,0x76
  4217e8:	cli    
  4217e9:	cli    
  4217ea:	add    ebx,DWORD PTR [ecx+ebx*2-0x42c0bb62]
  4217f1:	pop    edx
  4217f2:	jmp    0x62539fec
  4217f7:	mov    al,0xfd
  4217f9:	pop    ss
  4217fa:	adc    DWORD PTR [ebx-0x4f],eax
  4217fd:	popf   
  4217fe:	inc    edi
  4217ff:	sbb    dl,BYTE PTR [ecx-0x481bc2ce]
  421805:	cmp    BYTE PTR [esi+0x4ccdc47d],ch
  42180b:	inc    esi
  42180d:	ds call 0xa1c2fb11
  421813:	pop    esp
  421814:	(bad)  
  421816:	fst    st(1)
  421818:	dec    esi
  421819:	call   0xaf8c:0xf50313a6
  421820:	sbb    eax,0xbb1ed393
  421825:	mov    bh,0x4c
  421827:	sbb    bh,BYTE PTR [esi]
  421829:	retf   0xa1d0
  42182c:	aas    
  42182d:	test   eax,0x8fed7884
  421832:	call   0x71eb:0x6e9de2e8
  421839:	mov    eax,0x2014133
  42183e:	mov    al,0x13
  421840:	idiv   BYTE PTR [edi-0x43d22b78]
  421846:	gs jns 0x421889
  421849:	lods   al,BYTE PTR ds:[esi]
  42184a:	inc    esi
  42184b:	cmc    
  42184c:	loope  0x4218ad
  42184e:	pusha  
  42184f:	add    DWORD PTR [edi-0x4f],edi
  421852:	mov    edx,DWORD PTR [ebp-0x1ec]
  421858:	xor    eax,0xcb79b576
  42185d:	xor    edx,0x9c2b8ae8
  421863:	mov    cl,0x3e
  421865:	call   0x42241f
  42186a:	or     esi,eax
  42186c:	or     edi,edx
  42186e:	mov    DWORD PTR [ebp-0x1f8],esi
  421874:	jmp    0x421cb0
  421879:	mov    eax,DWORD PTR [ebp-0x1e0]
  42187f:	mov    edx,DWORD PTR [ebp-0x1dc]
  421885:	xor    eax,0xcb79b576
  42188a:	xor    edx,0x9c2b8ae8
  421890:	mov    cl,0x2
  421892:	call   0x408bb8
  421897:	mov    esi,eax
  421899:	mov    edi,edx
  42189b:	mov    eax,DWORD PTR [ebp-0x1e0]
  4218a1:	mov    edx,DWORD PTR [ebp-0x1dc]
  4218a7:	xor    eax,0xcb79b576
  4218ac:	xor    edx,0x9c2b8ae8
  4218b2:	mov    cl,0x3e
  4218b4:	call   0x42241f
  4218b9:	or     esi,eax
  4218bb:	or     edi,edx
  4218bd:	jmp    0x421ca4
  4218c2:	sbb    bh,BYTE PTR [esi]
  4218c4:	shr    DWORD PTR [edx+0x6ebaba9a],1
  4218ca:	daa    
  4218cb:	xchg   DWORD PTR [eax-0x2f],ebp
  4218ce:	cmp    al,0x86
  4218d0:	sub    cl,dl
  4218d2:	lods   al,BYTE PTR ds:[esi]
  4218d3:	rol    eax,0xbe
  4218d6:	dec    edx
  4218d7:	les    edi,FWORD PTR [esi+0x60d85dbe]
  4218dd:	fist   DWORD PTR [esi]
  4218df:	xchg   BYTE PTR [eax-0x6f],al
  4218e2:	jo     0x4218ef
  4218e4:	cmc    
  4218e5:	mov    bh,0xf4
  4218e7:	rcl    BYTE PTR [eax-0x203a6e7a],cl
  4218ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4218ee:	mov    ch,0xdb
  4218f0:	sbb    bl,dh
  4218f2:	lods   al,BYTE PTR ds:[esi]
  4218f3:	mov    ecx,0x3769d06c
  4218f8:	fidiv  DWORD PTR [edx+esi*4+0x7b554c79]
  4218ff:	fcmovu st,st(3)
  421901:	jnp    0x4218be
  421903:	dec    ebx
  421904:	neg    DWORD PTR [edx]
  421906:	jg     0x421970
  421908:	mov    ch,0xe0
  42190a:	push   0x834479a1
  42190f:	cmp    eax,0xc7da1e42
  421914:	jnp    0x4218e0
  421916:	mov    edx,0xeec90694
  42191b:	cmp    al,0x1c
  42191d:	xchg   ecx,eax
  42191e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42191f:	inc    esi
  421920:	dec    esi
  421921:	xor    eax,0x18e577dd
  421926:	lea    eax,[esi-0x1d]
  421929:	mov    edx,0x24d9e91a
  42192e:	push   edi
  42192f:	fadd   DWORD PTR [ebp+0x72]
  421932:	mov    ebx,0x7c6e4539
  421937:	arpl   WORD PTR [edx-0x24],cx
  42193a:	adc    eax,0x3b3c2f85
  42193f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421940:	lahf   
  421941:	mov    cl,0x79
  421943:	push   cs
  421944:	shl    esi,cl
  421946:	dec    esp
  421947:	call   0xbb89:0xcf2d013c
  42194e:	ret    
  42194f:	ss sbb al,0x29
  421952:	sub    eax,0x4e240157
  421957:	mov    bl,0x2e
  421959:	push   0xffffffa4
  42195b:	cmp    edx,DWORD PTR [edi]
  42195d:	adc    ecx,0xb85e8532
  421963:	in     al,0x26
  421965:	int    0x3d
  421967:	jg     0x4219a2
  421969:	gs xchg ebx,eax
  42196b:	mov    esp,0x4dfa1976
  421970:	enter  0xd3bc,0xb0
  421974:	or     dh,cl
  421976:	adc    dl,ch
  421978:	xchg   ecx,eax
  421979:	loopne 0x42193d
  42197b:	sahf   
  42197c:	sbb    DWORD PTR [edx],edi
  42197e:	push   ecx
  42197f:	mov    ah,0x62
  421981:	add    eax,0x80b44204
  421986:	in     eax,dx
  421987:	rol    DWORD PTR [eax],1
  421989:	ror    DWORD PTR [esi],0x36
  42198c:	dec    eax
  42198d:	push   0xffffffc7
  42198f:	mov    edi,0x3971277a
  421994:	inc    eax
  421995:	add    bh,ch
  421997:	jecxz  0x421979
  421999:	dec    ecx
  42199a:	mov    ah,0x7
  42199c:	inc    ebp
  42199d:	dec    ecx
  42199e:	(bad)  
  42199f:	aam    0x2a
  4219a1:	inc    esi
  4219a2:	addr16 sbb eax,0x74012011
  4219a8:	and    ecx,DWORD PTR [ebx]
  4219aa:	enter  0xb147,0x60
  4219ae:	adc    bh,dl
  4219b0:	lock adc ebx,DWORD PTR [eax+0x37f4696d]
  4219b7:	(bad)  
  4219b8:	(bad)  
  4219b9:	jle    0x421985
  4219bb:	scas   eax,DWORD PTR es:[edi]
  4219bc:	test   eax,0xda91ce62
  4219c2:	imul   esp,DWORD PTR [ebx+0x79bebfdc],0x68
  4219c9:	les    eax,FWORD PTR [ebp-0x447ac848]
  4219cf:	clc    
  4219d0:	loop   0x421a4c
  4219d2:	fmul   DWORD PTR [eax+0x3a]
  4219d5:	js     0x421a21
  4219d7:	jne    0x421a1f
  4219d9:	hlt    
  4219da:	jae    0x4219f2
  4219dc:	jmp    0xc4a3cb4f
  4219e1:	mov    esp,0x2351452f
  4219e6:	or     DWORD PTR [edi+0x20],eax
  4219e9:	pop    ss
  4219ea:	pop    es
  4219eb:	mov    ebp,0x2005f530
  4219f0:	out    0xa7,al
  4219f2:	sub    al,0x28
  4219f4:	out    dx,al
  4219f5:	mov    edx,DWORD PTR [edi+0x147c6ccf]
  4219fb:	jb     0x4219b4
  4219fd:	cmp    BYTE PTR [ebp-0x34],bh
  421a00:	arpl   WORD PTR [esi],dx
  421a02:	lods   eax,DWORD PTR ds:[esi]
  421a03:	mov    bl,0x54
  421a05:	cdq    
  421a06:	icebp  
  421a07:	call   0x5193fb07
  421a0c:	mov    ds:0x9b374dc9,al
  421a11:	daa    
  421a12:	das    
  421a13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a14:	retf   0xc09d
  421a17:	es pop ebx
  421a19:	jb     0x4219b1
  421a1b:	jmp    0xd9d8b790
  421a20:	ret    0x5cd9
  421a23:	and    esp,DWORD PTR [ecx+0x1a]
  421a26:	rcl    DWORD PTR [edi+0x2b42c874],cl
  421a2c:	sbb    al,0xdf
  421a2e:	add    esp,DWORD PTR [esi-0x3eb2fcf3]
  421a34:	jmp    0x4219fc
  421a36:	jne    0x421a6f
  421a38:	jl     0x4219dc
  421a3a:	repnz retf 0x87a
  421a3e:	fistp  DWORD PTR [esp+esi*4+0x0]
  421a42:	pop    ebx
  421a43:	pusha  
  421a44:	and    ebx,ebx
  421a46:	jmp    0x4219cb
  421a48:	nop
  421a49:	mov    cl,0xb5
  421a4b:	cmp    ecx,ecx
  421a4d:	mov    ah,0xa3
  421a4f:	nop
  421a50:	mov    ecx,0x8e6c1add
  421a55:	dec    eax
  421a56:	popf   
  421a57:	xchg   dl,dl
  421a59:	repz jmp 0xfb428e40
  421a5f:	xchg   ecx,eax
  421a60:	ror    ebx,0x3f
  421a63:	lods   eax,DWORD PTR ds:[esi]
  421a64:	and    ebp,DWORD PTR [ebp+0xc]
  421a67:	xchg   BYTE PTR [edx-0x20],dl
  421a6a:	dec    eax
  421a6b:	iret   
  421a6c:	and    BYTE PTR [ebx+0x1753def8],al
  421a72:	xor    edx,ebx
  421a74:	dec    eax
  421a75:	neg    DWORD PTR [esi-0x66fc5fbc]
  421a7b:	pop    es
  421a7c:	push   esi
  421a7d:	fild   DWORD PTR [ebp-0x78]
  421a80:	add    al,0xd7
  421a82:	ficom  DWORD PTR [ebp+0x6]
  421a85:	mov    bh,0xc2
  421a87:	sar    DWORD PTR [ebx],cl
  421a89:	xlat   BYTE PTR ds:[ebx]
  421a8a:	pop    edx
  421a8b:	ret    
  421a8c:	dec    ebp
  421a8d:	cwde   
  421a8e:	rcr    BYTE PTR [esi+0x47],cl
  421a91:	add    BYTE PTR [ebp-0x54],0x53
  421a95:	mov    WORD PTR [edx],gs
  421a97:	lods   al,BYTE PTR ds:[esi]
  421a98:	retf   
  421a99:	sahf   
  421a9a:	xchg   ebx,eax
  421a9b:	cmp    cl,BYTE PTR [esi-0x58eeee6e]
  421aa1:	xchg   edi,eax
  421aa2:	retf   
  421aa3:	add    eax,0xb691c4
  421aa8:	mov    al,ah
  421aaa:	adc    BYTE PTR [eax],0x89
  421aad:	aad    0xb2
  421aaf:	js     0x421a37
  421ab1:	ins    DWORD PTR es:[edi],dx
  421ab2:	add    DWORD PTR [esp+esi*1-0x79],0x6068870a
  421aba:	add    al,0x6a
  421abc:	(bad)  
  421abd:	retf   
  421abe:	jge    0x689ccc43
  421ac4:	ss stos DWORD PTR es:[edi],eax
  421ac6:	pop    esi
  421ac7:	lock pop ecx
  421ac9:	mov    ebp,ecx
  421acb:	pop    es
  421acc:	fsubr  QWORD PTR [edx+ecx*2-0x6b]
  421ad0:	mov    eax,ds:0x106be63e
  421ad5:	push   esp
  421ad6:	mov    ch,0xe8
  421ad8:	add    ecx,ecx
  421ada:	pop    ebp
  421adb:	cmp    esi,ebp
  421add:	int3   
  421ade:	and    eax,0x1fdf3503
  421ae3:	arpl   di,si
  421ae5:	std    
  421ae6:	add    eax,0xe11dea04
  421aeb:	cs xor eax,0x6d903851
  421af1:	sub    esi,DWORD PTR [ebp+0x67cb24f]
  421af7:	mov    ebp,0x31df5662
  421afc:	pop    edi
  421afd:	sbb    bl,BYTE PTR [ebp-0x48]
  421b00:	push   ds
  421b01:	push   esi
  421b02:	daa    
  421b03:	jb     0x421afe
  421b05:	add    ch,BYTE PTR [ebx+0x73]
  421b08:	xchg   ebx,eax
  421b09:	dec    edi
  421b0a:	bound  edi,QWORD PTR [edx]
  421b0c:	xchg   ebp,eax
  421b0d:	adc    ch,bh
  421b0f:	fistp  DWORD PTR [ecx]
  421b11:	retf   
  421b12:	mov    al,BYTE PTR [ecx+0x35]
  421b15:	(bad)  
  421b16:	test   al,0xbc
  421b18:	mov    edi,0xb539b5ca
  421b1d:	aad    0xc0
  421b1f:	call   0x6318a21
  421b24:	sbb    al,BYTE PTR [edi-0x72]
  421b27:	outs   dx,BYTE PTR ds:[esi]
  421b28:	std    
  421b29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b2a:	daa    
  421b2b:	mov    ch,0x9e
  421b2d:	add    al,0xc1
  421b2f:	mov    bh,0xa3
  421b32:	xchg   esi,eax
  421b33:	repz inc ebx
  421b35:	mov    ch,0xf9
  421b37:	mul    DWORD PTR [ecx+edx*4+0x38bb7573]
  421b3e:	jb     0x421b5f
  421b40:	aad    0xc5
  421b42:	jb     0x421b4a
  421b44:	sbb    al,0x3a
  421b46:	mov    esi,0xb9383dd1
  421b4b:	sub    DWORD PTR [esi*8+0x4d2fdac9],ebp
  421b52:	dec    eax
  421b53:	xlat   BYTE PTR ds:[ebx]
  421b54:	xor    dl,BYTE PTR [eax+0x53fece0b]
  421b5a:	push   edx
  421b5b:	cmp    BYTE PTR [ebx+0x1e],dl
  421b5e:	ds into 
  421b60:	cld    
  421b61:	outs   dx,BYTE PTR ds:[esi]
  421b62:	xor    eax,0x34cd5f5
  421b67:	fnstcw WORD PTR [esi-0xd]
  421b6a:	ja     0x421b4d
  421b6c:	cmp    cl,BYTE PTR [ebp+ebx*8-0x3e]
  421b70:	sbb    eax,DWORD PTR [ebx]
  421b72:	loopne 0x421be0
  421b74:	retf   
  421b75:	inc    DWORD PTR [ecx-0x5079b945]
  421b7b:	(bad)
  421b7e:	cmp    DWORD PTR [esp+esi*2-0x72defe6d],ebp
  421b85:	mov    esp,0xcbb4356c
  421b8a:	mov    eax,ds:0x610742ec
  421b8f:	out    dx,al
  421b90:	das    
  421b91:	xor    eax,0x271d5714
  421b96:	cmp    al,0xab
  421b98:	repnz clc 
  421b9a:	out    dx,al
  421b9b:	push   esp
  421b9c:	call   0xcc8c:0x71790f18
  421ba3:	ret    0x2d4f
  421ba6:	pop    ebp
  421ba7:	int    0xe9
  421ba9:	mov    eax,0x7296bd27
  421bae:	sti    
  421baf:	mov    ecx,0x1beeee3
  421bb4:	jns    0x421b5c
  421bb6:	mov    al,ds:0xccda95e0
  421bbb:	outs   dx,BYTE PTR ds:[esi]
  421bbc:	mov    esi,0x3d9fe434
  421bc1:	nop
  421bc2:	leave  
  421bc3:	pop    edx
  421bc4:	push   0xffffffd5
  421bc6:	scas   eax,DWORD PTR es:[edi]
  421bc7:	jge    0x421bd8
  421bc9:	cdq    
  421bca:	popa   
  421bcb:	icebp  
  421bcc:	jns    0x421c17
  421bce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421bcf:	mov    ecx,DWORD PTR [edi]
  421bd1:	(bad)  
  421bd2:	fcmovnb st,st(7)
  421bd4:	lds    edx,FWORD PTR [ebx+0x56]
  421bd7:	and    DWORD PTR [esi-0x67a51723],ebp
  421bdd:	mov    WORD PTR [edx-0x5d],cs
  421be0:	rep ins BYTE PTR es:[edi],dx
  421be2:	call   0x40f14f29
  421be7:	(bad)  
  421be8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421be9:	xor    eax,0x2b5ca801
  421bee:	or     al,0x1c
  421bf0:	je     0x421bff
  421bf2:	mov    ah,0x28
  421bf4:	call   0x9081:0x4f525a97
  421bfb:	leave  
  421bfc:	pushf  
  421bfd:	sub    eax,0xf68c8971
  421c02:	dec    esi
  421c03:	stc    
  421c04:	xchg   DWORD PTR [eax+0x2816a96d],esi
  421c0a:	add    al,0xc1
  421c0c:	sub    dl,BYTE PTR [ebp-0x6b]
  421c0f:	and    eax,0x8909530c
  421c14:	sub    DWORD PTR [ebx+ebp*2],ecx
  421c17:	mov    ch,0x1
  421c19:	stos   BYTE PTR es:[edi],al
  421c1a:	fnstenv [edi]
  421c1c:	lods   eax,DWORD PTR ds:[esi]
  421c1d:	xor    al,bh
  421c1f:	jo     0x421c18
  421c21:	xchg   ecx,eax
  421c22:	adc    DWORD PTR [eax-0x4b547fce],esp
  421c28:	int    0xbd
  421c2a:	stos   DWORD PTR es:[edi],eax
  421c2b:	out    0xdd,eax
  421c2d:	xchg   edi,eax
  421c2e:	jmp    0x421c28
  421c30:	div    BYTE PTR [edi-0x6a]
  421c33:	and    DWORD PTR [ecx],eax
  421c35:	shl    ebx,1
  421c37:	jns    0x421c78
  421c39:	scas   eax,DWORD PTR es:[edi]
  421c3a:	pusha  
  421c3b:	aas    
  421c3c:	popf   
  421c3d:	mov    edi,0xaabb4522
  421c42:	mov    eax,ds:0x85b171e4
  421c47:	xor    edx,edi
  421c49:	sbb    esp,ecx
  421c4b:	leave  
  421c4c:	xlat   BYTE PTR ds:[ebx]
  421c4d:	dec    eax
  421c4e:	int    0x82
  421c50:	mov    edi,0x3cad4a89
  421c55:	dec    edx
  421c56:	and    al,0x8d
  421c58:	pop    ebx
  421c59:	fwait
  421c5a:	scas   al,BYTE PTR es:[edi]
  421c5b:	std    
  421c5c:	jle    0x421cc6
  421c5e:	cmp    ecx,DWORD PTR [esi]
  421c60:	icebp  
  421c61:	push   ebx
  421c62:	jns    0x421c05
  421c64:	repz cmp eax,0x479ddd1b
  421c6a:	test   al,0xbc
  421c6c:	pop    edx
  421c6d:	jmp    0xbca0:0xc4e0c539
  421c74:	sbb    esp,DWORD PTR [edi+0x3807c6ed]
  421c7a:	ds jle 0x421cd2
  421c7d:	fcmovnb st,st(6)
  421c7f:	shl    DWORD PTR [ebp+0x3d],0x13
  421c83:	mov    eax,ds:0xb718f355
  421c88:	add    al,0xc4
  421c8a:	mov    esi,gs
  421c8c:	and    BYTE PTR [esi],bl
  421c8e:	std    
  421c8f:	or     DWORD PTR [edx+0x55],ecx
  421c92:	jmp    0x421c7f
  421c94:	push   0x1b
  421c96:	jle    0x421cf0
  421c98:	xchg   esp,eax
  421c99:	inc    ebp
  421c9a:	jno    0x421ca0
  421c9c:	mov    ebp,DWORD PTR [esi+edx*2-0x2f624a74]
  421ca3:	push   ecx
  421ca4:	add    esi,DWORD PTR [ebp-0x1f8]
  421caa:	mov    DWORD PTR [ebp-0x1f8],esi
  421cb0:	mov    eax,DWORD PTR [ebp-0x1e8]
  421cb6:	cmp    DWORD PTR [ebp-0x1f8],eax
  421cbc:	je     0x421e50
  421cc2:	mov    eax,DWORD PTR [ebp-0x1f8]
  421cc8:	mov    ecx,DWORD PTR [ebp-0x20c]
  421cce:	movzx  eax,WORD PTR [ecx+eax*4+0x2]
  421cd3:	xor    eax,0xa59b
  421cd8:	movzx  eax,ax
  421cdb:	sar    eax,1
  421cdd:	mov    ecx,DWORD PTR [ebp-0x1f8]
  421ce3:	mov    edx,DWORD PTR [ebp-0x20c]
  421ce9:	movzx  ecx,WORD PTR [edx+ecx*4+0x2]
  421cee:	xor    ecx,0xa59b
  421cf4:	movzx  ecx,cx
  421cf7:	shl    ecx,0xf
  421cfa:	or     eax,ecx
  421cfc:	movzx  eax,ax
  421cff:	mov    DWORD PTR [ebp-0x1fc],eax
  421d05:	jmp    0x421e06
  421d0a:	jg     0x421cee
  421d0c:	sbb    BYTE PTR [edx-0x144c4344],ch
  421d12:	outs   dx,BYTE PTR ds:[esi]
  421d13:	mov    esp,0x8a2290cd
  421d18:	jbe    0x421cac
  421d1a:	cmp    cl,cl
  421d1c:	sar    BYTE PTR [esi-0x41414182],0x87
  421d23:	enter  0xdaa7,0x19
  421d27:	imul   ebx,DWORD PTR [edi],0x1d
  421d2a:	in     al,dx
  421d2b:	out    dx,al
  421d2c:	pop    esi
  421d2d:	xor    edx,DWORD PTR [edi-0x219c6f17]
  421d33:	sub    eax,0xb0430da1
  421d38:	and    BYTE PTR [edi],ah
  421d3a:	fild   QWORD PTR [ebp+0x1365e98b]
  421d40:	jbe    0x421d2d
  421d42:	sub    DWORD PTR [eax],esp
  421d44:	es or  ch,0xe8
  421d48:	fs fdivrp st(0),st
  421d4b:	dec    edx
  421d4c:	jp     0x421d38
  421d4e:	arpl   WORD PTR [eax-0x6cf1d4cb],di
  421d54:	xor    al,0x9
  421d56:	arpl   WORD PTR [eax-0x357b78ed],dx
  421d5c:	and    eax,0x9e02c91d
  421d61:	scas   eax,DWORD PTR es:[edi]
  421d62:	sbb    DWORD PTR [edx+0x121a4c2e],eax
  421d68:	mov    cs:0xb5bd23d1,eax
  421d6e:	(bad)  
  421d6f:	gs inc esi
  421d71:	xor    eax,0x378e8750
  421d76:	cs data16 sti 
  421d79:	pop    edx
  421d7a:	stos   BYTE PTR es:[edi],al
  421d7b:	push   ecx
  421d7c:	popa   
  421d7d:	inc    ecx
  421d7e:	jecxz  0x421d53
  421d80:	pop    eax
  421d81:	mov    dl,0x70
  421d83:	ss fsubrp st(5),st
  421d86:	push   ss
  421d87:	dec    BYTE PTR [esi-0x1e0d8dcf]
  421d8d:	int    0xf3
  421d8f:	call   0xd0ad:0xcf16f987
  421d96:	mov    DWORD PTR [ecx],ebx
  421d98:	mov    ch,0x27
  421d9a:	cdq    
  421d9b:	ss jns 0x421db3
  421d9e:	sti    
  421d9f:	stos   BYTE PTR es:[edi],al
  421da0:	scas   al,BYTE PTR es:[edi]
  421da1:	adc    bl,BYTE PTR [eax+0x7]
  421da4:	push   0xd67fde14
  421da9:	xchg   edx,eax
  421daa:	pop    ecx
  421dab:	aam    0x17
  421dad:	in     al,dx
  421dae:	and    eax,DWORD PTR [eax-0x8]
  421db1:	fld    QWORD PTR [ebx-0x38]
  421db4:	cli    
  421db5:	or     edx,esp
  421db7:	xor    eax,0xaf12a9aa
  421dbc:	and    ecx,ecx
  421dbe:	js     0x421e18
  421dc0:	pusha  
  421dc1:	lea    esp,[ebx+0x1c]
  421dc4:	dec    ebx
  421dc5:	sar    BYTE PTR [ecx+edx*4+0x108c7ed5],0x17
  421dcd:	inc    eax
  421dce:	push   ebp
  421dcf:	xlat   BYTE PTR ds:[ebx]
  421dd0:	jmp    0x97028a9b
  421dd5:	mov    bh,0xe5
  421dd7:	and    ah,BYTE PTR [edx+0x11]
  421dda:	cs mov edi,0xb7ff27e6
  421de0:	shl    DWORD PTR [eax],1
  421de2:	jbe    0x421dbc
  421de4:	xor    al,0x6f
  421de6:	mov    WORD PTR [ecx+0x5b],cs
  421de9:	xor    BYTE PTR [edx+0x3e],dh
  421dec:	inc    edi
  421ded:	aad    0x63
  421def:	mov    ecx,0x1c477e46
  421df4:	das    
  421df5:	xor    al,BYTE PTR [edx-0x10a07995]
  421dfb:	jne    0x421d9c
  421dfd:	mov    esi,0xf96236bc
  421e02:	jae    0x421e48
  421e04:	outs   dx,DWORD PTR ds:[esi]
  421e05:	clc    
  421e06:	mov    eax,DWORD PTR [ebp-0x1f8]
  421e0c:	mov    ecx,DWORD PTR [ebp-0x20c]
  421e12:	movzx  eax,WORD PTR [ecx+eax*4]
  421e16:	xor    eax,0xa59b
  421e1b:	movzx  eax,ax
  421e1e:	sar    eax,1
  421e20:	mov    ecx,DWORD PTR [ebp-0x1f8]
  421e26:	mov    edx,DWORD PTR [ebp-0x20c]
  421e2c:	movzx  ecx,WORD PTR [edx+ecx*4]
  421e30:	xor    ecx,0xa59b
  421e36:	movzx  ecx,cx
  421e39:	shl    ecx,0xf
  421e3c:	or     eax,ecx
  421e3e:	mov    ecx,DWORD PTR [ebp-0x1fc]
  421e44:	mov    BYTE PTR [ebp+ecx*1-0x198],al
  421e4b:	jmp    0x421879
  421e50:	mov    eax,DWORD PTR [ebp-0x1f0]
  421e56:	mov    edx,DWORD PTR [ebp-0x1ec]
  421e5c:	xor    eax,0xcb79b576
  421e61:	xor    edx,0x9c2b8ae8
  421e67:	mov    cl,0x2
  421e69:	call   0x408bb8
  421e6e:	mov    esi,eax
  421e70:	mov    edi,edx
  421e72:	mov    eax,DWORD PTR [ebp-0x1f0]
  421e78:	mov    edx,DWORD PTR [ebp-0x1ec]
  421e7e:	xor    eax,0xcb79b576
  421e83:	xor    edx,0x9c2b8ae8
  421e89:	mov    cl,0x3e
  421e8b:	call   0x42241f
  421e90:	or     esi,eax
  421e92:	or     edi,edx
  421e94:	mov    DWORD PTR [ebp-0x1e4],esi
  421e9a:	mov    eax,DWORD PTR [ebp-0x1e0]
  421ea0:	mov    edx,DWORD PTR [ebp-0x1dc]
  421ea6:	xor    eax,0xcb79b576
  421eab:	xor    edx,0x9c2b8ae8
  421eb1:	mov    cl,0x2
  421eb3:	call   0x408bb8
  421eb8:	mov    esi,eax
  421eba:	mov    edi,edx
  421ebc:	mov    eax,DWORD PTR [ebp-0x1e0]
  421ec2:	mov    edx,DWORD PTR [ebp-0x1dc]
  421ec8:	xor    eax,0xcb79b576
  421ecd:	xor    edx,0x9c2b8ae8
  421ed3:	mov    cl,0x3e
  421ed5:	call   0x42241f
  421eda:	or     esi,eax
  421edc:	or     edi,edx
  421ede:	mov    DWORD PTR [ebp-0x23c],esi
  421ee4:	mov    DWORD PTR [ebp-0x238],edi
  421eea:	mov    eax,DWORD PTR [ebp-0x23c]
  421ef0:	or     eax,DWORD PTR [ebp-0x238]
  421ef6:	je     0x422156
  421efc:	lea    eax,[ebp-0x204]
  421f02:	mov    DWORD PTR [ebp-0x208],eax
  421f08:	mov    eax,DWORD PTR [ebp-0x1e4]
  421f0e:	xor    edx,edx
  421f10:	mov    cl,0x2
  421f12:	call   0x42241f
  421f17:	mov    esi,eax
  421f19:	mov    edi,edx
  421f1b:	mov    eax,DWORD PTR [ebp-0x1e4]
  421f21:	xor    edx,edx
  421f23:	mov    cl,0x3e
  421f25:	call   0x408bb8
  421f2a:	or     esi,eax
  421f2c:	or     edi,edx
  421f2e:	xor    esi,0xcb79b576
  421f34:	xor    edi,0x9c2b8ae8
  421f3a:	mov    eax,DWORD PTR [ebp-0x208]
  421f40:	mov    DWORD PTR [eax],esi
  421f42:	mov    DWORD PTR [eax+0x4],edi
  421f45:	mov    eax,DWORD PTR [ebp-0x1e4]
  421f4b:	movsx  esi,BYTE PTR [ebp+eax*1-0x198]
  421f53:	mov    eax,DWORD PTR [ebp-0x1e0]
  421f59:	mov    edx,DWORD PTR [ebp-0x1dc]
  421f5f:	xor    eax,0xcb79b576
  421f64:	xor    edx,0x9c2b8ae8
  421f6a:	mov    cl,0x2
  421f6c:	call   0x408bb8
  421f71:	mov    ebx,eax
  421f73:	mov    edi,edx
  421f75:	mov    eax,DWORD PTR [ebp-0x1e0]
  421f7b:	mov    edx,DWORD PTR [ebp-0x1dc]
  421f81:	xor    eax,0xcb79b576
  421f86:	xor    edx,0x9c2b8ae8
  421f8c:	mov    cl,0x3e
  421f8e:	call   0x42241f
  421f93:	or     ebx,eax
  421f95:	or     edi,edx
  421f97:	movsx  eax,bl
  421f9a:	cmp    esi,eax
  421f9c:	je     0x4220fc
  421fa2:	mov    eax,DWORD PTR [ebp-0x1e4]
  421fa8:	movsx  esi,BYTE PTR [ebp+eax*1-0x198]
  421fb0:	mov    eax,DWORD PTR [ebp-0x204]
  421fb6:	mov    edx,DWORD PTR [ebp-0x200]
  421fbc:	xor    eax,0xcb79b576
  421fc1:	xor    edx,0x9c2b8ae8
  421fc7:	mov    cl,0x2
  421fc9:	call   0x408bb8
  421fce:	mov    edi,eax
  421fd0:	mov    ebx,edx
  421fd2:	mov    eax,DWORD PTR [ebp-0x204]
  421fd8:	mov    edx,DWORD PTR [ebp-0x200]
  421fde:	xor    eax,0xcb79b576
  421fe3:	xor    edx,0x9c2b8ae8
  421fe9:	mov    cl,0x3e
  421feb:	call   0x42241f
  421ff0:	or     edi,eax
  421ff2:	or     ebx,edx
  421ff4:	mov    eax,DWORD PTR [ebp-0x210]
  421ffa:	movsx  eax,BYTE PTR [eax+edi*1]
  421ffe:	cmp    esi,eax
  422000:	je     0x422010
  422006:	jmp    0x422156
  42200b:	jmp    0x4220fc
  422010:	mov    eax,DWORD PTR [ebp-0x204]
  422016:	mov    edx,DWORD PTR [ebp-0x200]
  42201c:	xor    eax,0xcb79b576
  422021:	xor    edx,0x9c2b8ae8
  422027:	mov    cl,0x2
  422029:	call   0x408bb8
  42202e:	mov    esi,eax
  422030:	mov    edi,edx
  422032:	mov    eax,DWORD PTR [ebp-0x204]
  422038:	mov    edx,DWORD PTR [ebp-0x200]
  42203e:	xor    eax,0xcb79b576
  422043:	xor    edx,0x9c2b8ae8
  422049:	mov    cl,0x3e
  42204b:	call   0x42241f
  422050:	or     esi,eax
  422052:	or     edi,edx
  422054:	mov    eax,DWORD PTR [ebp-0x210]
  42205a:	movsx  esi,BYTE PTR [eax+esi*1]
  42205e:	mov    eax,DWORD PTR [ebp-0x1f0]
  422064:	mov    edx,DWORD PTR [ebp-0x1ec]
  42206a:	xor    eax,0xcb79b576
  42206f:	xor    edx,0x9c2b8ae8
  422075:	mov    cl,0x2
  422077:	call   0x408bb8
  42207c:	mov    ebx,eax
  42207e:	mov    edi,edx
  422080:	mov    eax,DWORD PTR [ebp-0x1f0]
  422086:	mov    edx,DWORD PTR [ebp-0x1ec]
  42208c:	xor    eax,0xcb79b576
  422091:	xor    edx,0x9c2b8ae8
  422097:	mov    cl,0x3e
  422099:	call   0x42241f
  42209e:	or     ebx,eax
  4220a0:	or     edi,edx
  4220a2:	movsx  eax,bl
  4220a5:	cmp    esi,eax
  4220a7:	jne    0x4220fc
  4220ad:	mov    eax,DWORD PTR [ebp-0x1e0]
  4220b3:	mov    edx,DWORD PTR [ebp-0x1dc]
  4220b9:	xor    eax,0xcb79b576
  4220be:	xor    edx,0x9c2b8ae8
  4220c4:	mov    cl,0x2
  4220c6:	call   0x408bb8
  4220cb:	mov    esi,eax
  4220cd:	mov    edi,edx
  4220cf:	mov    eax,DWORD PTR [ebp-0x1e0]
  4220d5:	mov    edx,DWORD PTR [ebp-0x1dc]
  4220db:	xor    eax,0xcb79b576
  4220e0:	xor    edx,0x9c2b8ae8
  4220e6:	mov    cl,0x3e
  4220e8:	call   0x42241f
  4220ed:	or     esi,eax
  4220ef:	or     edi,edx
  4220f1:	mov    DWORD PTR [ebp-0x214],esi
  4220f7:	jmp    0x4221a0
  4220fc:	mov    eax,DWORD PTR [ebp-0x1e0]
  422102:	mov    edx,DWORD PTR [ebp-0x1dc]
  422108:	xor    eax,0xcb79b576
  42210d:	xor    edx,0x9c2b8ae8
  422113:	mov    cl,0x2
  422115:	call   0x408bb8
  42211a:	mov    esi,eax
  42211c:	mov    edi,edx
  42211e:	mov    eax,DWORD PTR [ebp-0x1e0]
  422124:	mov    edx,DWORD PTR [ebp-0x1dc]
  42212a:	xor    eax,0xcb79b576
  42212f:	xor    edx,0x9c2b8ae8
  422135:	mov    cl,0x3e
  422137:	call   0x42241f
  42213c:	or     esi,eax
  42213e:	or     edi,edx
  422140:	add    esi,DWORD PTR [ebp-0x1e4]
  422146:	mov    DWORD PTR [ebp-0x1e4],esi
  42214c:	jmp    0x421e9a
  422151:	jmp    0x421e9a
  422156:	mov    eax,DWORD PTR [ebp-0x1f0]
  42215c:	mov    edx,DWORD PTR [ebp-0x1ec]
  422162:	xor    eax,0xcb79b576
  422167:	xor    edx,0x9c2b8ae8
  42216d:	mov    cl,0x2
  42216f:	call   0x408bb8
  422174:	mov    esi,eax
  422176:	mov    edi,edx
  422178:	mov    eax,DWORD PTR [ebp-0x1f0]
  42217e:	mov    edx,DWORD PTR [ebp-0x1ec]
  422184:	xor    eax,0xcb79b576
  422189:	xor    edx,0x9c2b8ae8
  42218f:	mov    cl,0x3e
  422191:	call   0x42241f
  422196:	or     esi,eax
  422198:	or     edi,edx
  42219a:	mov    DWORD PTR [ebp-0x214],esi
  4221a0:	mov    eax,DWORD PTR [ebp-0x214]
  4221a6:	mov    DWORD PTR [ebp-0xc8],eax
  4221ac:	cmp    DWORD PTR [ebp-0xc8],0x0
  4221b3:	je     0x4221dd
  4221b9:	mov    eax,DWORD PTR [ebp-0x144]
  4221bf:	mov    ecx,DWORD PTR [ebp-0xac]
  4221c5:	movzx  eax,WORD PTR [ecx+eax*2]
  4221c9:	mov    ecx,DWORD PTR [ebp-0xa8]
  4221cf:	mov    eax,DWORD PTR [ecx+eax*4]
  4221d2:	mov    DWORD PTR [ebp-0xfc],eax
  4221d8:	jmp    0x4221e2
  4221dd:	jmp    0x420789
  4221e2:	cmp    DWORD PTR [ebp-0xfc],0x0
  4221e9:	jne    0x4221f6
  4221ef:	xor    eax,eax
  4221f1:	jmp    0x422418
  4221f6:	mov    eax,DWORD PTR [ebp+0x8]
  4221f9:	add    eax,DWORD PTR [ebp-0xfc]
  4221ff:	mov    DWORD PTR [ebp-0xec],eax
  422205:	mov    DWORD PTR [ebp-0x74],0x0
  42220c:	cmp    DWORD PTR [ebp-0xb0],0x0
  422213:	je     0x42228f
  422219:	cmp    DWORD PTR [ebp-0xb0],0x0
  422220:	je     0x42228f
  422226:	mov    eax,DWORD PTR [ebp-0xb0]
  42222c:	shl    eax,0x2
  42222f:	mov    DWORD PTR [ebp-0x74],eax
  422232:	mov    DWORD PTR [ebp-0x14c],0x0
  42223c:	sub    esp,DWORD PTR [ebp-0x74]
  42223f:	mov    DWORD PTR [ebp-0x14c],esp
  422245:	mov    DWORD PTR [ebp-0x148],0x0
  42224f:	mov    eax,DWORD PTR [ebp-0x148]
  422255:	cmp    eax,DWORD PTR [ebp-0xb0]
  42225b:	je     0x42228f
  422261:	mov    eax,DWORD PTR [ebp-0x148]
  422267:	mov    ecx,DWORD PTR [ebp-0x14c]
  42226d:	mov    edx,DWORD PTR [ebp-0x148]
  422273:	mov    esi,DWORD PTR [ebp+0x14]
  422276:	mov    edx,DWORD PTR [esi+edx*4+0x4]
  42227a:	mov    DWORD PTR [ecx+eax*4],edx
  42227d:	mov    eax,DWORD PTR [ebp-0x148]
  422283:	inc    eax
  422284:	mov    DWORD PTR [ebp-0x148],eax
  42228a:	jmp    0x42224f
  42228f:	mov    DWORD PTR [ebp-0x9c],0x0
  422299:	push   0x4223d1
  42229e:	jmp    DWORD PTR [ebp-0xec]
  4222a4:	mov    eax,eax
  4222a6:	mov    ecx,esp
  4222a8:	ret    0x8
  4222ab:	cmp    DWORD PTR ds:0x428435,0x0
  4222b2:	not    DWORD PTR ds:0x428435
  4222b8:	mov    DWORD PTR ds:0x42844d,0x5307
  4222c2:	mov    DWORD PTR ds:0x4285a5,0x4819
  4222cc:	jmp    0x42230e
  4222d1:	not    eax
  4222d3:	cmp    DWORD PTR ds:0x428435,0x0
  4222da:	jl     0x4222fc
  4222e0:	push   0x0
  4222e2:	call   DWORD PTR ds:0x42e13c
  4222e8:	add    DWORD PTR ds:0x428525,0x4c21
  4222f2:	and    DWORD PTR ds:0x42850d,0x73e0
  4222fc:	sub    DWORD PTR ds:0x428479,edx
  422302:	or     DWORD PTR ds:0x428381,ecx
  422308:	sub    DWORD PTR ds:0x42851d,ebx
  42230e:	push   ebx
  42230f:	dec    eax
  422310:	push   esi
  422311:	mov    eax,DWORD PTR [esp+0x18]
  422315:	or     eax,eax
  422317:	mov    DWORD PTR ds:0x42843d,0x72ef
  422321:	jne    0x42235d
  422327:	mov    ecx,DWORD PTR [esp+0x14]
  42232b:	mov    eax,DWORD PTR [esp+0x10]
  42232f:	xor    edx,edx
  422331:	inc    ebx
  422332:	div    ecx
  422334:	sbb    ebx,DWORD PTR ds:0x428589
  42233a:	mov    ebx,eax
  42233c:	mov    eax,DWORD PTR [esp+0xc]
  422340:	adc    DWORD PTR ds:0x42850d,0x42849d
  42234a:	div    ecx
  42234c:	mov    DWORD PTR ds:0x428435,0x3a7e
  422356:	mov    edx,ebx
  422358:	jmp    0x4223cc
  42235d:	mov    ecx,eax
  42235f:	mov    ebx,DWORD PTR [esp+0x14]
  422363:	xor    eax,DWORD PTR ds:0x4285a9
  422369:	mov    edx,DWORD PTR [esp+0x10]
  42236d:	mov    eax,DWORD PTR [esp+0xc]
  422371:	mov    DWORD PTR ds:0x4284a5,0x7dde
  42237b:	shr    ecx,1
  42237d:	mov    DWORD PTR ds:0x428595,0x121c
  422387:	rcr    ebx,1
  422389:	shr    edx,1
  42238b:	rcr    eax,1
  42238d:	or     ecx,ecx
  42238f:	jne    0x422371
  422395:	div    ebx
  422397:	mov    esi,eax
  422399:	mul    DWORD PTR [esp+0x18]
  42239d:	mov    ecx,eax
  42239f:	mov    eax,DWORD PTR [esp+0x14]
  4223a3:	mul    esi
  4223a5:	add    edx,ecx
  4223a7:	jb     0x4223c7
  4223ad:	cmp    edx,DWORD PTR [esp+0x10]
  4223b1:	ja     0x4223c7
  4223b7:	jb     0x4223c8
  4223bd:	cmp    eax,DWORD PTR [esp+0xc]
  4223c1:	jbe    0x4223c8
  4223c7:	dec    esi
  4223c8:	xor    edx,edx
  4223ca:	mov    eax,esi
  4223cc:	pop    esi
  4223cd:	pop    ebx
  4223ce:	ret    0x10
  4223d1:	sub    DWORD PTR [ebp+0x10],0x1
  4223d5:	mov    DWORD PTR ds:0x428511,0x3767
  4223df:	cmp    DWORD PTR [ebp+0x10],0x0
  4223e3:	mov    DWORD PTR ds:0x428599,0xcef
  4223ed:	je     0x422402
  4223f3:	mov    esi,DWORD PTR ds:0x428529
  4223f9:	sbb    DWORD PTR ds:0x428595,esi
  4223ff:	add    esp,DWORD PTR [ebp-0x74]
  422402:	mov    DWORD PTR [ebp-0x9c],eax
  422408:	mov    eax,DWORD PTR [ebp-0x9c]
  42240e:	mov    DWORD PTR ds:0x428461,0x5e8f
  422418:	pop    edi
  422419:	pop    esi
  42241a:	pop    ebx
  42241b:	leave  
  42241c:	ret    0x10
  42241f:	cmp    cl,0x40
  422422:	mov    DWORD PTR ds:0x428465,0x7c93
  42242c:	jae    0x42246c
  422432:	cmp    cl,0x20
  422435:	mov    DWORD PTR ds:0x4283a1,0x440e
  42243f:	jae    0x42244b
  422445:	shld   edx,eax,cl
  422448:	shl    eax,cl
  42244a:	ret    
  42244b:	movzx  edx,WORD PTR ds:0x4284f5
  422452:	add    DWORD PTR ds:0x4284a5,edx
  422458:	mov    edx,eax
  42245a:	xor    eax,eax
  42245c:	mov    DWORD PTR ds:0x428391,0x5f4f
  422466:	and    cl,0x1f
  422469:	shl    edx,cl
  42246b:	ret    
  42246c:	xor    eax,eax
  42246e:	xor    edx,edx
  422470:	ret    
	...
  42247d:	add    BYTE PTR [eax],al
  42247f:	add    BYTE PTR [ebx+esi*2],al
  422482:	xchg   ecx,ebp
  422484:	push   ebx
  422485:	into   
  422486:	jns    0x4224e9
  422488:	push   0x98626f72
  42248d:	xor    eax,0x74b9d761
  422492:	jne    0x422502
  422494:	and    dl,bl
  422496:	mov    ch,0xed
  422498:	popf   
  422499:	bnd ret 0xa4
  42249d:	add    BYTE PTR [eax],al
  42249f:	add    BYTE PTR [edi+0x72],ah
  4224a2:	gs popa 
  4224a4:	je     0x42250d
  4224a6:	jb     0x42250d
  4224a8:	popa   
  4224a9:	je     0x422512
  4224ab:	jb     0x422512
  4224ad:	popa   
  4224ae:	je     0x422517
  4224b0:	jb     0x422517
  4224b2:	popa   
  4224b3:	je     0x42251c
  4224b5:	jb     0x42251c
  4224b7:	popa   
  4224b8:	je     0x422521
  4224ba:	jb     0x422521
  4224bc:	popa   
  4224bd:	je     0x422526
  4224bf:	jb     0x422526
  4224c1:	popa   
  4224c2:	je     0x42252b
  4224c4:	jb     0x42252b
  4224c6:	popa   
  4224c7:	je     0x422530
  4224c9:	jb     0x422530
  4224cb:	popa   
  4224cc:	je     0x422535
  4224ce:	jb     0x422535
  4224d0:	popa   
  4224d1:	je     0x4224d3
  4224d3:	add    BYTE PTR [eax+0x65],ch
  4224d6:	ins    BYTE PTR es:[edi],dx
  4224d7:	ins    BYTE PTR es:[edi],dx
  4224d8:	push   0x686c6c65
  4224dd:	gs ins BYTE PTR es:[edi],dx
  4224df:	ins    BYTE PTR es:[edi],dx
  4224e0:	push   0x686c6c65
  4224e5:	gs ins BYTE PTR es:[edi],dx
  4224e7:	ins    BYTE PTR es:[edi],dx
  4224e8:	push   0x686c6c65
  4224ed:	gs ins BYTE PTR es:[edi],dx
  4224ef:	ins    BYTE PTR es:[edi],dx
  4224f0:	push   0x686c6c65
  4224f5:	gs ins BYTE PTR es:[edi],dx
  4224f7:	ins    BYTE PTR es:[edi],dx
  4224f8:	push   0x686c6c65
  4224fd:	gs ins BYTE PTR es:[edi],dx
  4224ff:	ins    BYTE PTR es:[edi],dx
  422500:	push   0x686c6c65
  422505:	gs ins BYTE PTR es:[edi],dx
  422507:	ins    BYTE PTR es:[edi],dx
  422508:	add    BYTE PTR [eax],al
  42250a:	add    BYTE PTR [eax],al
  42250c:	outs   dx,DWORD PTR ds:[esi]
  42250d:	add    BYTE PTR [eax+eax*1+0x65],ch
  422511:	add    BYTE PTR [ecx+0x0],ah
  422514:	jne    0x422516
  422516:	je     0x422518
  422518:	xor    eax,DWORD PTR [eax]
  42251a:	xor    al,BYTE PTR [eax]
  42251c:	add    BYTE PTR [eax],al
  42251e:	add    BYTE PTR [eax],al
  422520:	push   0x61006500
  422525:	add    BYTE PTR [esi+0x0],dh
  422528:	add    BYTE PTR gs:[esi+0x0],ch
  42252c:	push   0x61006500
  422531:	add    BYTE PTR [esi+0x0],dh
  422534:	add    BYTE PTR gs:[esi+0x0],ch
  422538:	push   0x61006500
  42253d:	add    BYTE PTR [esi+0x0],dh
  422540:	add    BYTE PTR gs:[esi+0x0],ch
  422544:	push   0x61006500
  422549:	add    BYTE PTR [esi+0x0],dh
  42254c:	add    BYTE PTR gs:[esi+0x0],ch
  422550:	push   0x61006500
  422555:	add    BYTE PTR [esi+0x0],dh
  422558:	add    BYTE PTR gs:[esi+0x0],ch
  42255c:	push   0x61006500
  422561:	add    BYTE PTR [esi+0x0],dh
  422564:	add    BYTE PTR gs:[esi+0x0],ch
  422568:	push   0x61006500
  42256d:	add    BYTE PTR [esi+0x0],dh
  422570:	add    BYTE PTR gs:[esi+0x0],ch
  422574:	push   0x61006500
  422579:	add    BYTE PTR [esi+0x0],dh
  42257c:	add    BYTE PTR gs:[esi+0x0],ch
  422580:	push   0x61006500
  422585:	add    BYTE PTR [esi+0x0],dh
  422588:	add    BYTE PTR gs:[esi+0x0],ch
  42258c:	add    BYTE PTR [eax],al
  42258e:	add    BYTE PTR [eax],al
  422590:	or     al,0x25
  422592:	inc    edx
  422593:	add    BYTE PTR [edi+0x6c],cl
  422596:	gs dec ecx
  422598:	arpl   WORD PTR [edi+0x6e],bp
  42259b:	push   esp
  42259c:	outs   dx,DWORD PTR ds:[esi]
  42259d:	inc    ebx
  42259e:	jne    0x422612
  4225a0:	jae    0x422611
  4225a2:	jb     0x4225a4
  4225a4:	xchg   esp,eax
  4225a5:	and    eax,0x42
  4225aa:	add    BYTE PTR [eax],al
  4225ac:	add    BYTE PTR [eax],al
  4225ae:	add    BYTE PTR [eax],al
  4225b0:	push   eax
  4225b1:	sub    DWORD PTR [edx+0x0],eax
  4225b4:	pop    eax
  4225b5:	sub    DWORD PTR [edx+0x0],eax
  4225b8:	adc    BYTE PTR [eax],ch
  4225ba:	inc    edx
  4225bb:	add    dl,dh
  4225bd:	inc    edx
  4225be:	push   ebx
  4225bf:	lea    edx,ds:0x1a59ba5
  4225c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225c6:	popf   
  4225c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225c8:	jno    0x42256f
  4225ca:	xchg   edi,eax
  4225cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225cc:	or     esp,DWORD PTR [ebp-0x5aac5a77]
  4225d2:	and    DWORD PTR [ebp-0x5a7a5ae7],0xffffff9b
  4225d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225da:	mov    ebx,0xd183d3a5
  4225df:	lea    edx,[ebp-0x645aea5b]
  4225e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225e6:	add    DWORD PTR [ebp-0x5a8e5a63],esp
  4225ec:	xchg   edi,eax
  4225ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225ee:	or     esp,DWORD PTR [ebp-0x5aac5a77]
  4225f4:	and    DWORD PTR [ebp-0x5a7a5acb],0xffffff9b
  4225fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225fc:	mov    ebx,0xd1e3d3a5
  422601:	in     eax,dx
  422602:	xchg   ebp,eax
  422603:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422604:	adc    eax,0x3ba59ba5
  422609:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42260a:	popf   
  42260b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42260c:	sbb    DWORD PTR [ebp-0x5a805a6b],esp
  422612:	(bad)  
  422613:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422614:	fwait
  422615:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422616:	xchg   DWORD PTR [ebp-0x322e3c2d],esp
  42261c:	icebp  
  42261d:	sub    eax,0xf172ff7
  422622:	adc    eax,0x3a59109
  422627:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422628:	fwait
  422629:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42262a:	add    esp,DWORD PTR [ebp-0x5a805a6d]
  422630:	xchg   ebp,eax
  422631:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422632:	sbb    DWORD PTR [ebp-0x5a645a73],esp
  422638:	and    DWORD PTR [ebp+0x2dd123d3],0xfffffff1
  42263f:	or     eax,0x6f170ff7
  422644:	adc    eax,0x3a59169
  422649:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42264a:	fwait
  42264b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42264c:	add    esp,DWORD PTR [ebp-0x5a805a6d]
  422652:	xchg   ebp,eax
  422653:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422654:	xor    eax,0x9ba58da5
  422659:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42265a:	and    DWORD PTR [ebp+0xdd103d3],0xfffffff1
  422661:	ins    DWORD PTR es:[edi],dx
  422662:	imul   DWORD PTR [edi+0x17]
  422665:	dec    edi
  422666:	adc    eax,0x37a59149
  42266b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42266c:	fwait
  42266d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42266e:	jae    0x422615
  422670:	popf   
  422671:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422672:	sbb    DWORD PTR [ebp-0x5aba5a6b],esp
  422678:	(bad)  
  422679:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42267a:	fwait
  42267b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42267c:	and    DWORD PTR [ebp+0x6dd163d3],0xfffffff1
  422683:	dec    ebp
  422684:	test   DWORD PTR [edi+0x16],0x91a914af
  42268b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42268c:	aaa    
  42268d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42268e:	fwait
  42268f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422690:	jae    0x422637
  422692:	popf   
  422693:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422694:	pop    ss
  422695:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422696:	xchg   ebp,eax
  422697:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422698:	push   ecx
  422699:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42269a:	mov    DWORD PTR [ebp-0x5a725a65],esp
  4226a0:	rol    DWORD PTR [ebx-0x2f],cl
  4226a3:	dec    ebp
  4226a4:	lock lods eax,DWORD PTR ds:[esi]
  4226a6:	imul   BYTE PTR [edi-0x76eb70ea]
  4226ac:	xchg   ecx,eax
  4226ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226ae:	aaa    
  4226af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226b0:	fwait
  4226b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226b2:	jae    0x422659
  4226b4:	popf   
  4226b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226b6:	cmp    esp,DWORD PTR [ebp-0x5a8c5a6b]
  4226bc:	(bad)  
  4226bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226be:	fwait
  4226bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226c0:	xchg   DWORD PTR [ebp-0x522f5c2e],esp
  4226c6:	lock (bad) 
  4226c8:	test   BYTE PTR [edi-0x16eb10ea],0x91
  4226cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226d0:	aaa    
  4226d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226d2:	fwait
  4226d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226d4:	jae    0x42267b
  4226d6:	popf   
  4226d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226d8:	cmp    DWORD PTR [ebp-0x5a805a6b],esp
  4226de:	(bad)  
  4226df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226e0:	fwait
  4226e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226e2:	and    DWORD PTR [ebp-0x722f7c2e],0xfffffff0
  4226e9:	in     eax,dx
  4226ea:	imul   bh
  4226ec:	push   ss
  4226ed:	iret   
  4226ee:	adc    al,0xc9
  4226f0:	xchg   ecx,eax
  4226f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226f2:	cmp    eax,0x51a59ba5
  4226f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226f8:	popf   
  4226f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226fa:	jnp    0x4226a1
  4226fc:	xchg   ebx,eax
  4226fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226fe:	fwait
  4226ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422700:	xchg   ecx,eax
  422701:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422702:	shl    bl,cl
  422704:	shr    ch,1
  422706:	lock int 0xf6
  422709:	iret   
  42270a:	push   ss
  42270b:	das    
  42270c:	adc    al,0x29
  42270e:	push   ss
  42270f:	unpcklps xmm1,XMMWORD PTR [ecx]
  422712:	xchg   ebx,eax
  422713:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422714:	adc    DWORD PTR [ebp-0x5ab65a65],esp
  42271a:	lahf   
  42271b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42271c:	cmp    esp,DWORD PTR [ebp-0x5a825a6d]
  422722:	mov    DWORD PTR [ebp-0x5a725a65],esp
  422728:	shl    BYTE PTR [ebx],cl
  42272a:	shr    BYTE PTR ds:0xff60df0,1
  422730:	push   ss
  422731:	outs   dx,DWORD PTR ds:[esi]
  422732:	adc    al,0x69
  422734:	xchg   ecx,eax
  422735:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422736:	add    BYTE PTR [eax],al
  422738:	shl    BYTE PTR ds:0x27cc0042,0x42
  42273f:	add    ah,dl
  422741:	daa    
  422742:	inc    edx
  422743:	add    BYTE PTR [ecx+ebp*1+0x42],bl
  422747:	add    BYTE PTR [eax-0x27ffbddb],bh
  42274d:	daa    
  42274e:	inc    edx
  42274f:	add    dh,bh
  422751:	jle    0x422795
  422753:	add    BYTE PTR [esi-0x7f],dh
  422756:	inc    edx
  422757:	add    al,cl
  422759:	sub    BYTE PTR [edx+0x0],al
  42275c:	dec    esp
  42275d:	sub    DWORD PTR [edx+0x0],eax
  422760:	mov    ah,0x27
  422762:	inc    edx
  422763:	add    BYTE PTR [eax+0x48004227],bh
  422769:	sub    DWORD PTR [edx+0x0],eax
  42276c:	sbb    al,0x28
  42276e:	inc    edx
  42276f:	add    BYTE PTR [edx-0x36],cl
  422772:	push   es
  422773:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422774:	scas   al,BYTE PTR es:[edi]
  422775:	or     eax,0x27d0a506
  42277a:	inc    edx
  42277b:	add    BYTE PTR [eax-0x6bffbdd8],al
  422781:	sub    BYTE PTR [edx+0x0],al
  422784:	mov    al,ds:0xb0004228
  422789:	sub    BYTE PTR [edx+0x0],al
  42278c:	or     BYTE PTR [eax],ch
  42278e:	inc    edx
  42278f:	add    BYTE PTR [ebp+eiz*1+0x28280042],bh
  422796:	inc    edx
  422797:	add    BYTE PTR [eax],bl
  422799:	sub    BYTE PTR [edx+0x0],al
  42279c:	pusha  
  42279d:	sub    DWORD PTR [edx+0x0],eax
  4227a0:	scas   al,BYTE PTR es:[edi]
  4227a1:	fwait
  4227a2:	push   es
  4227a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227a4:	cmp    BYTE PTR [edx-0x19],al
  4227a7:	mov    esp,0x422838
  4227ac:	inc    eax
  4227ad:	sub    BYTE PTR [edx+0x0],al
  4227b0:	fsub   QWORD PTR [edi]
  4227b2:	inc    edx
  4227b3:	add    BYTE PTR [esi+eax*4],ah
  4227b6:	loopne 0x422774
  4227b8:	jbe    0x422834
  4227ba:	pop    ds
  4227bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4227bc:	add    BYTE PTR [eax],al
  4227be:	inc    eax
  4227bf:	add    cl,dh
  4227c1:	retf   
  4227c2:	arpl   WORD PTR [eax+0x73],bx
  4227c5:	add    DWORD PTR [edx+0x0],0x6ae878a8
  4227cc:	ja     0x4227dc
  4227ce:	pop    ebx
  4227cf:	xor    BYTE PTR [esi-0x6],dh
  4227d2:	(bad)  
  4227d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4227d4:	mov    dl,0xd
  4227d6:	xchg   ebx,eax
  4227d7:	test   eax,0x4227c4
  4227dc:	stos   BYTE PTR es:[edi],al
  4227dd:	fild   DWORD PTR [esi]
  4227df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227e0:	stos   BYTE PTR es:[edi],al
  4227e1:	fild   WORD PTR [esi]
  4227e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4227e5:	fild   DWORD PTR [esi]
  4227e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227e8:	mov    ds:0xbea506db,al
  4227ed:	fild   DWORD PTR [esi]
  4227ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227f0:	mov    edx,0xb6a506db
  4227f5:	fild   DWORD PTR [esi]
  4227f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227f8:	mov    dl,0xdb
  4227fa:	push   es
  4227fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227fc:	mov    ds,ebx
  4227fe:	push   es
  4227ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422800:	mov    bl,bl
  422802:	push   es
  422803:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422804:	out    dx,al
  422805:	fild   DWORD PTR [esi]
  422807:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422808:	dec    DWORD PTR [edx]
  42280a:	adc    edi,DWORD PTR [ebx]
  42280c:	mov    ah,0x25
  42280e:	inc    edx
  42280f:	add    BYTE PTR [ebp+0x6100422a],ah
  422815:	jae    0x42287f
  422817:	jns    0x4227c7
  422819:	fwait
  42281a:	push   es
  42281b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42281c:	cmp    cl,dl
  42281e:	xlat   BYTE PTR ds:[ebx]
  42281f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422820:	dec    sp
  422822:	add    BYTE PTR [eax],al
  422824:	mov    al,0x25
  422826:	inc    edx
  422827:	add    BYTE PTR [edx],ah
  422829:	inc    edx
  42282a:	sbb    eax,DWORD PTR [ebx+0x0]
	...
  422838:	hlt    
  422839:	stc    
  42283a:	sar    BYTE PTR [edi+edi*4+0x2b309341],cl
  422841:	inc    esi
  422842:	pop    ds
  422843:	jg     0x422845
	...
  422869:	add    BYTE PTR [eax],al
  42286b:	add    dh,bh
  42286d:	jle    0x4228b1
	...
  42287b:	add    BYTE PTR [edi-0x4c],al
  42287e:	inc    ecx
  42287f:	add    BYTE PTR [ebp-0x5b],cl
  422882:	push   ecx
  422883:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422884:	jg     0x42282b
  422886:	inc    edi
  422887:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422888:	push   ecx
  422889:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42288a:	inc    ebx
  42288b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42288c:	std    
  42288d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42288e:	jmp    DWORD PTR [ebp+0xa59b]
  422894:	push   ebp
  422895:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422896:	push   ebx
  422897:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422898:	dec    ecx
  422899:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42289a:	std    
  42289b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42289c:	jmp    DWORD PTR [ebp-0x5a8e5a65]
  4228a2:	jge    0x422849
  4228a4:	push   ecx
  4228a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4228a6:	jg     0x42284d
  4228a8:	std    
  4228a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4228aa:	jmp    DWORD PTR [ebp+0xa59b]
  4228b0:	jge    0x422857
  4228b2:	dec    ebx
  4228b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4228b4:	inc    ebx
  4228b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4228b6:	jne    0x42285d
  4228b8:	pop    ecx
  4228b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4228ba:	jnp    0x422861
  4228bc:	dec    ecx
  4228bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4228be:	fwait
  4228bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  4228c8:	xor    eax,ecx
  4228ca:	xor    esp,DWORD PTR [ecx]
  4228cc:	xor    eax,DWORD PTR [ecx]
  4228ce:	xor    esp,DWORD PTR [ecx+0x33]
  4228d1:	inc    ecx
  4228d2:	xor    ah,BYTE PTR [ecx-0x1ecd7ece]
  4228d8:	xor    al,cl
  4228da:	xor    ah,BYTE PTR [ecx]
  4228dc:	xor    al,BYTE PTR [ecx]
  4228de:	xor    ah,BYTE PTR [ecx+0x32]
  4228e1:	inc    ecx
  4228e2:	xor    eax,DWORD PTR [ecx-0x3ccc1ecd]
  4228e8:	xor    ecx,ebp
  4228ea:	xor    ecx,edi
  4228ec:	xor    ecx,ecx
  4228ee:	xor    ecx,ebx
  4228f0:	xor    edx,ebp
  4228f2:	xor    edx,edi
  4228f4:	xor    edx,ecx
  4228f6:	xor    edx,ebx
  4228f8:	xor    ebx,ebp
  4228fa:	xor    ebx,edi
  4228fc:	xor    ebx,ecx
  4228fe:	xor    ebx,ebx
  422900:	xor    eax,edi
  422902:	push   ebx
  422903:	shl    DWORD PTR [ebx-0x3f],0x93
  422907:	rcl    BYTE PTR [esi-0x55],0x15
  42290b:	iret   
  42290c:	xchg   ebp,eax
  42290d:	dec    eax
  42290e:	xor    ecx,ebp
  422910:	sbb    eax,0x50aaaae3
  422915:	imul   ebx,DWORD PTR [esi],0x2f
  422918:	je     0x42292f
  42291a:	mov    DWORD PTR [edx+0x556ad694],ecx
  422920:	imul   edi,ebx,0xffffffd5
  422923:	enter  0x4927,0xef
  422927:	popf   
  422928:	mov    dh,0xde
  42292a:	dec    esi
  42292b:	xchg   esp,eax
  42292c:	lock xor BYTE PTR [esi-0x6b],ch
  422930:	inc    ebp
  422931:	or     al,0x76
  422933:	or     DWORD PTR [edi-0x40],eax
  422936:	js     0x4228f2
  422938:	popa   
  422939:	pop    eax
  42293a:	jecxz  0x4229a6
  42293c:	mov    BYTE PTR [ebx-0x56],0x4
  422940:	cs leave 
  422942:	inc    esi
  422943:	stos   DWORD PTR es:[edi],eax
  422944:	inc    esp
  422945:	ds inc ebp
  422947:	enter  0x82f6,0x93
  42294b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42294c:	sbb    DWORD PTR [eax],ecx
  42294e:	fdivr  DWORD PTR [esp+ebp*1-0x1e]
  422952:	inc    edx
  422953:	add    cl,dl
  422955:	ja     0x4229c6
  422957:	gs mov esp,0x20004227
  42295d:	sub    BYTE PTR [edx+0x0],al
  422960:	jbe    0x42295c
  422962:	fbld   TBYTE PTR [eax+eax*1+0x0]
  422969:	add    BYTE PTR [eax],al
  42296b:	add    BYTE PTR [eax],al
  42296d:	add    BYTE PTR [eax],al
  42296f:	add    BYTE PTR [eax-0x15],bl
  422972:	push   ss
  422973:	cmp    eax,0x65646543
  422978:	push   esi
  422979:	imul   ebp,DWORD PTR gs:[esi+0x6f],0x616f7377
  422981:	jb     0x4229f7
  422983:	gs bound esp,QWORD PTR gs:[ecx+0x6c]
  422988:	jecxz  0x422951
  42298a:	shr    DWORD PTR [ebx+edx*8-0x3f],0xa3
  42298f:	cmp    al,BYTE PTR [esi-0x2d]
  422992:	jno    0x422a0e
  422994:	outs   dx,DWORD PTR ds:[esi]
  422995:	jae    0x422a07
  422997:	popa   
  422998:	je     0x422a02
  42299a:	bound  esp,QWORD PTR [ecx+0x73]
  42299d:	je     0x422a0e
  42299f:	outs   dx,DWORD PTR ds:[esi]
  4229a0:	test   eax,0xde3655f5
  4229a5:	in     al,0x6c
  4229a7:	jne    0x422a11
  4229a9:	bound  esp,QWORD PTR [ebp+0x4b]
  4229ac:	popa   
  4229ad:	jbe    0x422a10
  4229af:	outs   dx,WORD PTR ds:[esi]
  4229b1:	jns    0x422a22
  4229b3:	imul   edi,DWORD PTR [eax],0x2c054cf4
  4229b9:	pusha  
  4229ba:	and    BYTE PTR [edi+0x79],dh
  4229bd:	gs jo  0x422a2f
  4229c0:	ins    DWORD PTR es:[edi],dx
  4229c1:	ja     0x422a3c
  4229c3:	gs inc ebp
  4229c5:	jns    0x422a2c
  4229c7:	jb     0x4229c9
	...
  4229d9:	add    BYTE PTR [eax],al
  4229db:	add    BYTE PTR [esi-0x4e],dl
  4229de:	and    dl,BYTE PTR [ecx]
  4229e0:	imul   esp,DWORD PTR [ebx+0x75],0x74
  4229e4:	imul   ebp,DWORD PTR [di+0x70],0xd71e3755
  4229ec:	fldcw  WORD PTR [eax+edx*2]
  4229ef:	fimul  WORD PTR [ebx]
  4229f1:	cmp    esi,DWORD PTR [esp+eax*4-0x66]
  4229f5:	fldcw  WORD PTR [eax+0x69]
  4229f8:	lods   al,BYTE PTR ds:[esi]
  4229f9:	repnz retf 0xe41c
  4229fd:	inc    ebx
  4229fe:	outs   dx,DWORD PTR ds:[esi]
  4229ff:	je     0x422a74
  422a01:	dec    esp
  422a02:	popa   
  422a03:	jp     0x422a7e
  422a05:	push   ebx
  422a06:	imul   esp,DWORD PTR [ecx+0x73],0x73
  422a0a:	push   0xc3066a00
  422a0f:	lds    eax,FWORD PTR [eax+0x6569646f]
  422a15:	add    al,bl
  422a17:	mov    ebp,0x2ee9d1e4
  422a1c:	jle    0x4229d0
  422a1e:	data16 gs ja 0x422a95
  422a22:	jne    0x422a86
  422a24:	add    BYTE PTR [eax],al
  422a26:	add    DWORD PTR [edx+0x51cf72f8],edi
  422a2c:	fstp   DWORD PTR [eax+0x74]
  422a2f:	popa   
  422a30:	jae    0x422aa4
  422a32:	popa   
  422a33:	js     0x422a9d
  422a35:	outs   dx,DWORD PTR ds:[esi]
  422a36:	add    BYTE PTR [eax],al
  422a38:	mov    esi,0x4d270df8
  422a3d:	popa   
  422a3e:	ins    BYTE PTR es:[edi],dx
  422a3f:	je     0x422a8d
  422a41:	jne    0x422ab5
  422a43:	imul   eax,DWORD PTR [eax],0x0
  422a46:	dec    edx
  422a47:	loope  0x422a57
  422a49:	out    0xd3,al
  422a4b:	test   al,0x57
  422a4d:	popa   
  422a4e:	jb     0x422abb
  422a50:	jne    0x422ac6
  422a52:	outs   dx,DWORD PTR fs:[esi]
  422a54:	bound  ebp,QWORD PTR [edi+0x0]
  422a57:	add    BYTE PTR [ebp+eax*1+0x62cfc27],dl
  422a5e:	jne    0x422acd
  422a60:	outs   dx,DWORD PTR ds:[esi]
  422a61:	js     0x422a63
  422a63:	add    BYTE PTR [ecx+edx*8+0x58],ch
  422a67:	or     bh,BYTE PTR [ecx+ebx*2]
  422a6a:	add    al,0xd6
  422a6c:	gs ins DWORD PTR es:[edi],dx
  422a6e:	jns    0x422adf
  422a70:	jo     0x422ae7
  422a72:	je     0x422ac7
  422a74:	push   0x6170676f
  422a79:	jns    0x422ae5
  422a7b:	outs   dx,DWORD PTR ds:[esi]
  422a7c:	popa   
  422a7d:	jns    0x422a39
  422a7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a80:	scas   al,BYTE PTR es:[edi]
  422a81:	or     al,0xaf
  422a83:	adc    al,0x63
  422a85:	popa   
  422a86:	jns    0x422acf
  422a88:	jne    0x422b00
  422a8a:	jae    0x422b00
  422a8c:	imul   esp,DWORD PTR [ebx+0x73],0x61636f6e
  422a93:	jb     0x422afa
  422a95:	imul   ebp,DWORD PTR [ecx+0x25],0xffffffda
  422a99:	(bad)  
  422a9a:	out    dx,al
  422a9b:	push   ebx
  422a9c:	popa   
  422a9d:	arpl   WORD PTR [ebx+0x66],si
  422aa0:	imul   esp,DWORD PTR [edx+0x64],0x9780006f
  422aa7:	xchg   DWORD PTR [esi-0x7488fe6a],edx
  422aad:	push   eax
  422aae:	ja     0x422a3a
  422ab0:	cdq    
  422ab1:	adc    bh,0x8a
  422ab4:	pop    esi
  422ab5:	fldenv [ecx+0x6f5038a6]
  422abb:	adc    bh,0x8b
  422abe:	arpl   WORD PTR [edx],si
  422ac0:	test   eax,0x92fcefd7
  422ac5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422ac6:	xchg   ah,bh
  422ac8:	fsubr  st,st(7)
  422aca:	arpl   sp,di
  422acc:	fsub   DWORD PTR [esi+0xc92fc86]
  422ad2:	cdq    
  422ad3:	jo     0x422b49
  422ad5:	xchg   edi,eax
  422ad6:	add    BYTE PTR [edi+0x77019696],0x8b
  422add:	push   eax
  422ade:	ja     0x422a6a
  422ae0:	adc    BYTE PTR [edi-0x2703a176],0x5b
  422ae7:	cmp    BYTE PTR [eax+0xc],dl
  422aea:	adc    BYTE PTR [edi-0x28089c75],0x9
  422af1:	xor    BYTE PTR [edi-0x11],0xfc
  422af5:	xchg   edx,eax
  422af6:	xor    BYTE PTR [ebp+0x138c6dfc],ah
  422afc:	cld    
  422afd:	xchg   edx,eax
  422afe:	outs   dx,DWORD PTR ds:[esi]
  422aff:	mov    ds:0x31ec92fc,eax
  422b04:	jo     0x422b01
  422b06:	out    dx,al
  422b07:	lea    edx,[edi-0x69697880]
  422b0d:	add    DWORD PTR [edi-0x75],esi
  422b10:	push   eax
  422b11:	ja     0x422a9d
  422b13:	adc    BYTE PTR [edi-0x2326a176],0x1c
  422b1a:	hlt    
  422b1b:	push   eax
  422b1c:	or     al,0x80
  422b1e:	xchg   edi,eax
  422b1f:	mov    esp,DWORD PTR [ebx-0x9]
  422b22:	xlat   BYTE PTR ds:[ebx]
  422b23:	out    dx,al
  422b24:	cld    
  422b25:	xchg   edx,eax
  422b26:	mov    WORD PTR [ebx],ss
  422b28:	xor    BYTE PTR [edi-0x11],0xfc
  422b2c:	xchg   edx,eax
  422b2d:	cmp    dl,BYTE PTR [esi+0x65306dfc]
  422b33:	jo     0x422b30
  422b35:	out    dx,al
  422b36:	lea    edx,[edi-0x69697880]
  422b3c:	add    DWORD PTR [edi-0x75],esi
  422b3f:	push   eax
  422b40:	ja     0x422acc
  422b42:	cdq    
  422b43:	adc    bh,0x8a
  422b46:	pop    esi
  422b47:	fsubrp st(7),st
  422b49:	xor    edi,DWORD PTR [eax+edx*2]
  422b4c:	outs   dx,DWORD PTR ds:[esi]
  422b4d:	adc    bh,0x8b
  422b50:	arpl   WORD PTR [edx],si
  422b52:	test   eax,0xd8fca6d7
  422b57:	out    dx,al
  422b58:	fwait
  422b59:	mov    ecx,0x31ec927c
  422b5e:	fwait
  422b5f:	cld    
  422b60:	or     al,0x43
  422b62:	jo     0x422bd8
  422b64:	xchg   edi,eax
  422b65:	add    BYTE PTR [edi+0x77019696],0x8b
  422b6c:	push   eax
  422b6d:	ja     0x422af9
  422b6f:	adc    BYTE PTR [edi-0x6d1fa176],0x3b
  422b76:	cmp    BYTE PTR [eax+0xc],dl
  422b79:	adc    BYTE PTR [edi-0x28089c75],0xff
  422b80:	xor    BYTE PTR [edi-0x11],0xfc
  422b84:	xchg   edx,eax
  422b85:	out    dx,eax
  422b86:	mov    ds:0x963a6dfc,eax
  422b8b:	cld    
  422b8c:	xchg   edx,eax
  422b8d:	das    
  422b8e:	stos   DWORD PTR es:[edi],eax
  422b8f:	jo     0x422b8c
  422b91:	out    dx,al
  422b92:	lea    ebx,[ebx-0x7f686c67]
  422b98:	xchg   DWORD PTR [eax+0x773a3577],eax
  422b9e:	cmp    eax,0xd7808a0a
  422ba3:	sbb    eax,0x9925d73a
  422ba8:	adc    bh,0x15
  422bab:	dec    eax
  422bac:	shr    DWORD PTR [edx-0x12f24e71],1
  422bb2:	std    
  422bb3:	dec    ebp
  422bb4:	xchg   esp,eax
  422bb5:	test   BYTE PTR [ebx-0x9],cl
  422bb8:	or     cl,BYTE PTR [edi+0x4dfded51]
  422bbe:	xchg   esp,eax
  422bbf:	test   BYTE PTR [ebx-0x9],cl
  422bc2:	or     cl,BYTE PTR [esi+edi*8]
  422bc5:	or     BYTE PTR ds:0x432187ed,0x6a
  422bcc:	ins    DWORD PTR es:[edi],dx
  422bcd:	or     cl,BYTE PTR [edx]
  422bcf:	or     cl,BYTE PTR [edx]
  422bd1:	or     bl,BYTE PTR [ebx-0x1266f4bd]
  422bd7:	adc    DWORD PTR [ebp+0x5e],ecx
  422bda:	(bad)  
  422bdb:	in     al,dx
  422bdc:	lea    ecx,[ebp+0x10018494]
  422be2:	pop    ecx
  422be3:	mov    WORD PTR [ebp-0x1172a173],cs
  422be9:	(bad)  
  422bea:	out    dx,al
  422beb:	mov    dh,0xbe
  422bed:	mov    BYTE PTR [edx+eiz*8+0x2f],0x9f
  422bf2:	xchg   BYTE PTR [ecx+0xc],ah
  422bf5:	lea    ecx,[ebp+0x5901cbf8]
  422bfb:	add    DWORD PTR [ebx-0x80],ebp
  422bfe:	out    0x8a,eax
  422c00:	xor    BYTE PTR [edi+0x32],0x43
  422c04:	out    0x35,eax
  422c06:	xor    edi,DWORD PTR [eax+edx*2+0x77]
  422c0a:	xchg   BYTE PTR [edx-0x73],ah
  422c0d:	xchg   BYTE PTR [edi+0x98d8d0c],al
  422c13:	dec    edi
  422c14:	repnz lea ecx,[ebp-0x370f7073]
  422c1b:	xor    esp,edi
  422c1d:	xchg   DWORD PTR [esp+edi*4+0xbefbecd],edx
  422c24:	mov    al,ds:0xec9d8894
  422c29:	or     eax,0xeb6501a9
  422c2e:	mov    dl,0xbc
  422c30:	out    dx,eax
  422c31:	mov    WORD PTR gs:[esi-0x3a17beff],gs
  422c38:	mov    eax,ds:0x99968d8d
  422c3d:	cli    
  422c3e:	lea    edi,[edx]
  422c40:	lea    ecx,[ebp-0x1bc59df6]
  422c46:	push   ebp
  422c47:	and    bh,0x8a
  422c4a:	inc    ebx
  422c4b:	out    0x83,eax
  422c4d:	or     eax,esp
  422c4f:	imul   eax,DWORD PTR [eax-0x43495039],0xffffff80
  422c56:	push   ecx
  422c57:	xor    ecx,DWORD PTR [ebx-0x14]
  422c5a:	push   ecx
  422c5b:	add    ebp,eax
  422c5d:	lock lea eax,[esi-0x7272f3a0]
  422c64:	cmp    ch,0xb2
  422c67:	mov    bh,ch
  422c69:	in     eax,dx
  422c6a:	mov    edx,0xfa05633a
  422c6f:	lea    edi,[edx]
  422c71:	lea    ecx,[ebp-0x39c5e29]
  422c77:	in     al,0x9c
  422c79:	les    esp,FWORD PTR [edi]
  422c7b:	add    bh,0xaf
  422c7e:	xchg   cl,ch
  422c80:	or     al,0x8d
  422c82:	(bad)  
  422c83:	loop   0x422cbf
  422c85:	scas   al,BYTE PTR es:[edi]
  422c86:	in     al,dx
  422c87:	sti    
  422c88:	in     al,dx
  422c89:	ret    0x86ed
  422c8c:	cmp    ch,ch
  422c8e:	mov    BYTE PTR [edx],bh
  422c90:	sub    BYTE PTR [edx+0x63],0xfc
  422c94:	sub    BYTE PTR [edx-0x1c],0xb4
  422c98:	scas   al,BYTE PTR es:[edi]
  422c99:	fsubr  st,st(5)
  422c9b:	test   DWORD PTR [edi],ebp
  422c9d:	fiadd  DWORD PTR [eax-0x27f61b02]
  422ca3:	in     eax,dx
  422ca4:	test   edi,edi
  422ca6:	fimul  DWORD PTR [esi-0x1b8ff212]
  422cac:	out    dx,al
  422cad:	mov    cs,WORD PTR [ebp+ecx*1-0x5549bc90]
  422cb4:	(bad)  
  422cb5:	leave  
  422cb6:	bound  esi,QWORD PTR [edx-0x367902f3]
  422cbc:	or     al,0x8d
  422cbe:	(bad)  
  422cbf:	xlat   BYTE PTR ds:[ebx]
  422cc0:	adc    eax,0x9faeab9d
  422cc5:	scas   al,BYTE PTR es:[edi]
  422cc6:	lahf   
  422cc7:	dec    ebp
  422cc8:	push   ebp
  422cc9:	xor    eax,0xb5f1aa96
  422cce:	outs   dx,DWORD PTR ds:[esi]
  422ccf:	lea    ecx,[ebp-0x2c3b7272]
  422cd5:	bound  edx,QWORD PTR [ecx-0x7e7902f3]
  422cdb:	or     al,0x8d
  422cdd:	(bad)  
  422cde:	xlat   BYTE PTR ds:[ebx]
  422cdf:	dec    ecx
  422ce0:	bound  eax,QWORD PTR ds:0x1786fd0d
  422ce6:	or     al,0x8d
  422ce8:	(bad)  
  422ce9:	xlat   BYTE PTR ds:[ebx]
  422cea:	xchg   ebx,eax
  422ceb:	popf   
  422cec:	mov    WORD PTR gs:[edx+0x30],fs
  422cf0:	in     al,0xc
  422cf2:	(bad)  
  422cf3:	dec    DWORD PTR [edx]
  422cf5:	adc    bh,0x8a
  422cf8:	inc    ebx
  422cf9:	xlat   BYTE PTR ds:[ebx]
  422cfa:	and    DWORD PTR [ebx-0x29],0x35
  422cfe:	or     edx,ebp
  422d00:	mov    dh,0x3a
  422d02:	lea    ecx,[ebp-0x75187fba]
  422d08:	cmc    
  422d09:	mov    esi,0x8d8d3adc
  422d0e:	bound  eax,QWORD PTR [edx-0x72c5347a]
  422d14:	lea    eax,[eax+0x23d582d7]
  422d1a:	(bad)  
  422d1b:	stc    
  422d1c:	xchg   BYTE PTR [eax],cl
  422d1e:	cmp    cl,BYTE PTR [ebp+0x7ad7808d]
  422d24:	aad    0x30
  422d26:	adc    bh,0xf7
  422d29:	xor    al,0x7a
  422d2c:	push   eax
  422d2d:	lock test DWORD PTR [eax-0xfaf7d10],0x83f0807a
  422d38:	push   eax
  422d39:	lock adc BYTE PTR [eax-0x29],0x83
  422d3e:	popf   
  422d3f:	stos   DWORD PTR es:[edi],eax
  422d40:	lahf   
  422d41:	icebp  
  422d42:	mov    ebp,0x8e8d8da6
  422d47:	out    dx,eax
  422d48:	in     al,dx
  422d49:	pushf  
  422d4a:	stos   BYTE PTR es:[edi],al
  422d4b:	fwait
  422d4c:	mov    WORD PTR gs:[edi-0x11f31b4e],cs
  422d53:	in     al,dx
  422d54:	or     al,BYTE PTR [eax-0x5795039]
  422d5a:	cmp    cl,BYTE PTR [ebp-0x7fea2873]
  422d60:	ja     0x422ce8
  422d62:	and    bh,0xaf
  422d65:	mov    dl,0x84
  422d67:	in     al,dx
  422d68:	inc    ebx
  422d69:	jo     0x422d4d
  422d6b:	out    dx,eax
  422d6c:	test   eax,0xee7be501
  422d71:	les    edx,FWORD PTR [edi-0x80]
  422d74:	(bad)  
  422d75:	scas   eax,DWORD PTR es:[edi]
  422d76:	in     eax,dx
  422d77:	js     0x422d85
  422d79:	xchg   BYTE PTR [eax],ch
  422d7b:	cmp    cl,BYTE PTR [ebp-0x7fe22873]
  422d81:	ja     0x422d09
  422d83:	and    bh,0xaf
  422d86:	mov    dl,0x84
  422d88:	in     al,dx
  422d89:	loop   0x422d7a
  422d8b:	lahf   
  422d8c:	loop   0x422d7d
  422d8e:	test   eax,0xee7b6601
  422d93:	cmp    cl,BYTE PTR [ebp+0x6c71c48d]
  422d99:	out    dx,al
  422d9a:	or     al,0x8d
  422d9c:	(bad)  
  422d9d:	in     al,dx
  422d9e:	out    0xaf,eax
  422da0:	loop   0x422e13
  422da2:	lahf   
  422da3:	cli    
  422da4:	lea    edi,[edx]
  422da6:	lea    ecx,[ebp+0x43f9f050]
  422dac:	push   0x6d
  422dae:	and    BYTE PTR [ecx-0x7a],0xbd
  422db2:	cmp    cl,BYTE PTR [ebp+0x43fd808d]
  422db8:	push   ecx
  422db9:	in     al,0xc6
  422dbb:	cmp    dh,al
  422dbd:	stc    
  422dbe:	in     eax,dx
  422dbf:	out    0x76,eax
  422dc1:	out    dx,al
  422dc2:	or     ebp,ebp
  422dc4:	bound  ecx,QWORD PTR [ebp+0x77ed8d8d]
  422dca:	jbe    0x422d58
  422dcc:	xor    al,0xf9
  422dcf:	in     eax,dx
  422dd0:	retf   
  422dd1:	out    dx,al
  422dd2:	in     al,0xec
  422dd4:	loop   0x422dc2
  422dd6:	lahf   
  422dd7:	and    bh,0xfd
  422dda:	mov    dl,0xba
  422ddc:	outs   dx,DWORD PTR ds:[esi]
  422ddd:	inc    ebx
  422dde:	push   0x6d
  422de0:	loop   0x422e4f
  422de2:	test   eax,0xadc96601
  422de7:	in     al,dx
  422de8:	lea    ecx,[ebp+0x45866180]
  422dee:	cmp    cl,BYTE PTR [ebp+0x43fd808d]
  422df4:	push   ecx
  422df5:	in     al,0xc6
  422df7:	push   eax
  422df8:	lock xchg BYTE PTR [eax-0x10],dl
  422dfc:	sub    ebp,0xffffffcb
  422dff:	out    dx,al
  422e00:	in     al,0xd3
  422e02:	add    BYTE PTR ds:0x3a83b7ed,0xb6
  422e09:	mov    ch,ch
  422e0b:	lock or DWORD PTR [ecx+esi*4],0xffffffed
  422e10:	retf   
  422e11:	mov    eax,ds:0x225e1fd3
  422e16:	or     al,0x8d
  422e18:	lea    eax,[ebx-0x4e]
  422e1b:	adc    BYTE PTR [ecx+0x72],0xb7
  422e1f:	sub    esp,0x77
  422e22:	xor    DWORD PTR [esi-0x288137c],0x50
  422e29:	ja     0x422dda
  422e2b:	les    eax,FWORD PTR [edi-0x13]
  422e2e:	mov    dh,ch
  422e30:	xchg   BYTE PTR [eax],bh
  422e32:	lea    ecx,[ebp-0x493b4973]
  422e38:	mov    bh,0x83
  422e3a:	pop    edi
  422e3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e3c:	test   ah,ah
  422e3e:	outs   dx,DWORD PTR ds:[esi]
  422e3f:	dec    ebp
  422e40:	ja     0x422dc5
  422e42:	aas    
  422e43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e44:	test   BYTE PTR [ecx+0x755e86d7],dh
  422e4a:	outs   dx,DWORD PTR ds:[esi]
  422e4b:	lea    ecx,[ebp+0x50fd77ec]
  422e51:	ja     0x422e02
  422e53:	mov    dl,0xb7
  422e55:	sub    esi,0xffffffe2
  422e58:	out    dx,al
  422e59:	test   eax,0x807b4d43
  422e5e:	jl     0x422de0
  422e60:	(bad)  
  422e61:	scas   eax,DWORD PTR es:[edi]
  422e62:	xchg   al,ah
  422e64:	lea    ecx,[ebp-0x2ac5c173]
  422e6a:	in     al,dx
  422e6b:	xor    bh,ah
  422e6d:	xor    DWORD PTR [esi-0x78284e44],0xffffffc4
  422e74:	lea    ecx,[ebp+0x77]
  422e77:	add    DWORD PTR [eax-0x4d120610],0xc
  422e7e:	and    bh,0x8a
  422e81:	cmp    BYTE PTR [ebx+eax*2+0x77],0x35
  422e86:	pop    edi
  422e87:	ja     0x422e0c
  422e89:	fcmovnu st,st(2)
  422e8b:	or     BYTE PTR [ebx+0x43],0xd7
  422e8f:	add    DWORD PTR [eax-0xab9c269],0x63
  422e96:	test   ebx,edx
  422e98:	in     al,dx
  422e99:	jg     0x422e72
  422e9b:	dec    ebx
  422e9c:	push   eax
  422e9d:	out    0x8a,eax
  422e9f:	or     eax,esp
  422ea1:	xor    ah,BYTE PTR [ebx-0x19]
  422ea4:	cmp    eax,0xccaaea09
  422ea9:	dec    ebp
  422eaa:	dec    ebp
  422eab:	xchg   dl,dl
  422ead:	lea    ecx,[ebp+0x16a438d]
  422eb3:	lds    esi,FWORD PTR ds:0x2d978065
  422eb9:	adc    bh,0x8b
  422ebc:	inc    ebx
  422ebd:	xlat   BYTE PTR ds:[ebx]
  422ebe:	sbb    eax,0x9780d450
  422ec3:	inc    ebp
  422ec4:	and    bh,0x8a
  422ec7:	inc    ebx
  422ec8:	out    0x35,eax
  422eca:	push   eax
  422ecb:	(bad)  
  422ecc:	jo     0x422e71
  422ece:	test   eax,0x8d25fbab
  422ed3:	test   eax,0x6d6a439d
  422ed8:	les    eax,FWORD PTR [edx-0x7272f95e]
  422ede:	lea    edi,[edx]
  422ee0:	in     al,0x3a
  422ee2:	je     0x422e96
  422ee4:	mov    ah,0xef
  422ee6:	cdq    
  422ee7:	adc    bh,0x8b
  422eea:	arpl   di,dx
  422eec:	and    eax,0x7780f9d3
  422ef1:	test   BYTE PTR [edx+0x5046ef84],dh
  422ef7:	ja     0x422e7d
  422ef9:	push   eax
  422efa:	xlat   BYTE PTR ds:[ebx]
  422efb:	mov    ebp,DWORD PTR [ecx+0x76f08074]
  422f01:	or     eax,esp
  422f03:	push   0xffffffb2
  422f05:	mov    edx,0x8677ecee
  422f0a:	in     al,dx
  422f0b:	mov    dl,0xc4
  422f0d:	outs   dx,DWORD PTR ds:[esi]
  422f0e:	or     eax,esp
  422f10:	push   0xffffffec
  422f12:	ja     0x422f8a
  422f14:	add    bh,0xfd
  422f17:	add    ebp,eax
  422f19:	ja     0x422ea8
  422f1b:	inc    ebx
  422f1c:	push   0x1
  422f1e:	lds    esi,FWORD PTR [edi-0x73]
  422f21:	mov    ds:0x8d8d8d06,al
  422f26:	cmp    dl,bl
  422f28:	and    eax,0x5d353180
  422f2d:	mov    dl,0xb5
  422f2f:	xor    eax,0x3163ef2d
  422f34:	xor    eax,0x8f26d3a5
  422f39:	push   cs
  422f3a:	dec    ebp
  422f3b:	jne    0x422f72
  422f3d:	pop    ebp
  422f3e:	mov    dl,0xb4
  422f40:	out    dx,eax
  422f41:	adc    BYTE PTR [ebp+0x11802d35],dl
  422f47:	or     DWORD PTR [edi+edx*4-0x73],ebx
  422f4b:	mov    dl,0xbe
  422f4d:	dec    DWORD PTR [ecx]
  422f4f:	and    bh,dh
  422f51:	pop    edi
  422f52:	xor    DWORD PTR ds:0x801bd32d,esi
  422f58:	mov    al,ds:0x8def8d60
  422f5d:	lea    eax,[ebx-0x2]
  422f60:	mov    dl,0xbe
  422f62:	das    
  422f63:	mov    ecx,0xec8df03a
  422f68:	push   0x1
  422f6a:	lds    esi,FWORD PTR ds:0x7b2746d
  422f70:	das    
  422f71:	aas    
  422f72:	xor    DWORD PTR ds:0xb9a0432d,esi
  422f78:	aas    
  422f79:	xchg   edi,eax
  422f7a:	(bad)  
  422f7b:	in     al,dx
  422f7c:	push   0xffffffed
  422f7e:	push   0x3a
  422f80:	add    ebp,eax
  422f82:	xor    eax,0x8099746d
  422f87:	sub    al,BYTE PTR [esi+0x4d4d069c]
  422f8d:	sbb    BYTE PTR [eax+eax*4+0x6ffc51],0x86
  422f95:	repnz push es
  422f97:	dec    ebp
  422f98:	dec    ebp
  422f99:	cdq    
  422f9a:	sub    BYTE PTR [edx],0xfc
  422f9d:	jns    0x422fce
  422f9f:	stos   DWORD PTR es:[edi],eax
  422fa0:	xchg   BYTE PTR [ebx-0x66b2b2fa],dh
  422fa6:	cld    
  422fa7:	jns    0x423018
  422fa9:	mov    ds:0x4d063986,eax
  422fae:	dec    ebp
  422faf:	cld    
  422fb0:	jns    0x422fbe
  422fb2:	cdq    
  422fb3:	cmp    BYTE PTR [esi-0x42],0xc4
  422fb7:	test   DWORD PTR [ebp+0x4d],ecx
  422fba:	xchg   edi,eax
  422fbb:	add    BYTE PTR [edi+0x3a4587a2],0x8d
  422fc2:	lea    edi,[edi+esi*2-0x75]
  422fc6:	mul    BYTE PTR [edi+ebp*2]
  422fc9:	cmp    BYTE PTR [edi+esi*2-0x7],bh
  422fcd:	cmc    
  422fce:	and    al,0x6f
  422fd0:	cmp    BYTE PTR [eax+0x7750ef77],al
  422fd6:	out    dx,eax
  422fd7:	xor    BYTE PTR [edi-0x75],0x80
  422fdb:	xchg   edi,eax
  422fdc:	mov    edx,DWORD PTR [ebx+0xde29b99]
  422fe2:	lahf   
  422fe3:	push   ebx
  422fe4:	mov    dh,0xb2
  422fe6:	clc    
  422fe7:	sub    DWORD PTR [edx+eiz*1+0x24],esp
  422feb:	outs   dx,DWORD PTR ds:[esi]
  422fec:	cmp    BYTE PTR [ebx+0x74],dl
  422fef:	mov    dl,0x86
  422ff1:	or     al,0xff
  422ff3:	sti    
  422ff4:	push   eax
  422ff5:	ja     0x42306d
  422ff7:	xor    BYTE PTR [edi-0x75],0x80
  422ffb:	xchg   edi,eax
  422ffc:	mov    edx,DWORD PTR [ebx+0x74]
  422fff:	mov    dl,0x86
  423001:	or     al,0x53
  423003:	mov    dh,0xb2
  423005:	clc    
  423006:	sub    edi,edi
  423008:	sti    
  423009:	push   eax
  42300a:	ja     0x422f96
  42300c:	xor    BYTE PTR [edi-0x75],0x80
  423010:	xchg   edi,eax
  423011:	mov    edx,DWORD PTR [ebx+0x74]
  423014:	mov    dl,0x86
  423016:	or     al,0x53
  423018:	mov    dh,0xb2
  42301a:	clc    
  42301b:	sub    edi,edi
  42301d:	sti    
  42301e:	push   eax
  42301f:	ja     0x423083
  423021:	xor    BYTE PTR [edi-0x75],0x80
  423025:	xchg   edi,eax
  423026:	mov    edx,DWORD PTR [ebx+0x74]
  423029:	mov    dl,0x86
  42302b:	or     al,0x53
  42302d:	mov    dh,0xb2
  42302f:	clc    
  423030:	sub    edi,edi
  423032:	sti    
  423033:	push   eax
  423034:	ja     0x422fbc
  423036:	jl     0x4230af
  423038:	mul    BYTE PTR cs:[esi+ebp*8]
  42303c:	cmp    BYTE PTR [edi+esi*2+0x66],bh
  423040:	mul    BYTE PTR [ebx+0x777c386f]
  423046:	es cli 
  423048:	and    al,0x6f
  42304a:	cmp    dl,ah
  42304c:	cmp    eax,0x6277509d
  423051:	push   eax
  423052:	ja     0x4230b6
  423054:	loop   0x423013
  423056:	popf   
  423057:	push   eax
  423058:	ja     0x4230bc
  42305a:	push   eax
  42305b:	ja     0x4230bf
  42305d:	jl     0x4230d6
  42305f:	bound  ecx,QWORD PTR [edx]
  423061:	lea    ecx,[ebp+0x62777c8d]
  423067:	jns    0x422ff6
  423069:	lea    ecx,[ebp-0x7f748880]
  42306f:	xchg   edi,eax
  423070:	mov    edx,DWORD PTR [ebx+0x74]
  423073:	push   ebx
  423074:	mov    dh,0xb2
  423076:	xchg   BYTE PTR [edx+esi*4],cl
  423079:	clc    
  42307a:	sub    edi,edi
  42307c:	sti    
  42307d:	push   eax
  42307e:	ja     0x4230e2
  423080:	xor    BYTE PTR [edi-0x75],0x80
  423084:	xchg   edi,eax
  423085:	mov    edx,DWORD PTR [ebx+0x74]
  423088:	push   ebx
  423089:	mov    dh,0xb2
  42308b:	xchg   BYTE PTR [edx+esi*4],cl
  42308e:	clc    
  42308f:	sub    edi,edi
  423091:	sti    
  423092:	push   eax
  423093:	ja     0x4230f7
  423095:	jl     0x42310e
  423097:	jp     0x42303c
  423099:	or     al,0x8d
  42309b:	lea    edi,[edi+esi*2-0x7c]
  42309f:	pop    edi
  4230a0:	lea    ecx,[ebp-0x50888373]
  4230a6:	out    0x8d,eax
  4230a8:	lea    ecx,[ebp+0xdc86801]
  4230ae:	dec    ebp
  4230af:	dec    ebp
  4230b0:	add    DWORD PTR [eax+0x7a],ebx
  4230b3:	or     eax,0xfe864d4d
  4230b8:	or     eax,0xf04d4d4d
  4230bd:	scas   eax,DWORD PTR es:[edi]
  4230be:	xlat   BYTE PTR ds:[ebx]
  4230bf:	pop    es
  4230c0:	dec    ebp
  4230c1:	lock test bh,dl
  4230c4:	add    al,0x4d
  4230c6:	lock jp 0x4230a0
  4230c9:	jb     0x423147
  4230cb:	ja     0x423051
  4230cd:	mov    eax,ds:0x808d8d6d
  4230d2:	ja     0x42305f
  4230d4:	xor    al,0x8b
  4230d7:	push   ebx
  4230d8:	je     0x42308c
  4230da:	xchg   BYTE PTR [edx+eiz*8],cl
  4230dd:	or     eax,0xb25153a9
  4230e2:	mov    edx,0x50b2ff29
  4230e7:	ja     0x423153
  4230e9:	xor    BYTE PTR [edi-0x75],0x80
  4230ed:	lock mov ebp,ebp
  4230f0:	mov    bh,0xc8
  4230f2:	lea    edx,[ebx+0x74]
  4230f5:	mov    dl,0x86
  4230f7:	or     al,0x53
  4230f9:	push   ecx
  4230fa:	mov    dl,0xba
  4230fc:	sub    edi,edi
  4230fe:	mov    dl,0x50
  423100:	ja     0x42317c
  423102:	mov    ch,0x4a
  423104:	sbb    eax,0x508d8d8d
  423109:	ja     0x4230d3
  42310b:	sub    BYTE PTR [ebp-0x7f],0x50
  42310f:	ja     0x423098
  423111:	sub    BYTE PTR [ebp+0x21],0x50
  423115:	ja     0x423149
  423117:	xor    BYTE PTR [edi-0x11],0x1
  42311b:	lock enter 0x1050,0x62
  423120:	cmp    cl,BYTE PTR [ebp-0x10887f73]
  423126:	add    eax,esi
  423128:	xchg   DWORD PTR [eax+0x10],edx
  42312b:	push   esi
  42312c:	cmp    cl,BYTE PTR [ebp-0x10887f73]
  423132:	dec    ebp
  423133:	xlat   BYTE PTR ds:[ebx]
  423134:	out    dx,eax
  423135:	add    eax,esi
  423137:	xor    dl,BYTE PTR [eax+0x10]
  42313a:	pop    esi
  42313b:	cmp    cl,BYTE PTR [ebp+0x3fba868d]
  423141:	lea    ecx,[ebp-0x7f740f80]
  423147:	xchg   edi,eax
  423148:	mov    edx,DWORD PTR [ebx+0x11]
  42314b:	push   ebx
  42314c:	jle    0x423100
  42314e:	mov    esi,0x29f8b20c
  423153:	(bad)  
  423154:	(bad)  
  423155:	arpl   bp,di
  423157:	or     DWORD PTR [edi],ecx
  423159:	(bad)  
  42315a:	in     al,dx
  42315b:	lea    ecx,[ebp-0x7f108880]
  423161:	int    0x36
  423163:	cmp    cl,BYTE PTR [ebp-0x7f107f73]
  423169:	ja     0x42315a
  42316b:	or     ch,0x36
  42316e:	cmp    cl,BYTE PTR [ebp-0x13727f73]
  423174:	xchg   edx,eax
  423175:	gs xor al,0xef
  423179:	adc    BYTE PTR [eax+0x32],0x3a
  42317d:	lea    ecx,[ebp+0x4d151801]
  423183:	dec    ebp
  423184:	dec    ebp
  423185:	stos   BYTE PTR es:[edi],al
  423186:	adc    BYTE PTR [edi+0x26d180ef],0x3a
  42318d:	lea    ecx,[ebp+0x5aec9080]
  423193:	adc    BYTE PTR [ebp-0x111d7273],cl
  423199:	dec    ebp
  42319a:	bound  eax,QWORD PTR [ecx-0x73]
  42319d:	lea    ecx,[ebp+0x25964daa]
  4231a3:	push   ebx
  4231a4:	push   0x7c
  4231a6:	dec    edi
  4231a7:	push   ebp
  4231a8:	dec    ebp
  4231a9:	dec    ebp
  4231aa:	dec    ebp
  4231ab:	outs   dx,BYTE PTR ds:[esi]
  4231ac:	mov    ds:0x4f7c0a43,eax
  4231b1:	pop    ebp
  4231b2:	dec    ebp
  4231b3:	dec    ebp
  4231b4:	dec    ebp
  4231b5:	jg     0x423165
  4231b7:	push   ebp
  4231b8:	fwait
  4231b9:	jl     0x42320a
  4231bb:	gs dec ebp
  4231bd:	dec    ebp
  4231be:	dec    ebp
  4231bf:	stos   DWORD PTR es:[edi],eax
  4231c0:	lock scas al,BYTE PTR es:[edi]
  4231c2:	aas    
  4231c3:	cld    
  4231c4:	dec    edi
  4231c5:	ins    DWORD PTR es:[edi],dx
  4231c6:	dec    ebp
  4231c7:	dec    ebp
  4231c8:	dec    ebp
  4231c9:	xchg   BYTE PTR [ecx],al
  4231cb:	push   0x4d4d4d92
  4231d0:	inc    esp
  4231d1:	mov    ecx,0x6a53f544
  4231d6:	jl     0x423227
  4231d8:	sub    eax,0x6e4d4d4d
  4231dd:	mov    ds:0x4f7c0a43,eax
  4231e2:	xor    eax,0x7f4d4d4d
  4231e7:	scas   al,BYTE PTR es:[edi]
  4231e8:	push   ebp
  4231e9:	fwait
  4231ea:	jl     0x42323b
  4231ec:	cmp    eax,0xab4d4d4d
  4231f1:	lock scas al,BYTE PTR es:[edi]
  4231f3:	imul   edi,esp,0x4f
  4231f6:	inc    ebp
  4231f7:	dec    ebp
  4231f8:	dec    ebp
  4231f9:	dec    ebp
  4231fa:	xchg   BYTE PTR [ecx],al
  4231fc:	push   0x4d4d4d47
  423201:	inc    esp
  423202:	mov    ecx,0x7780f544
  423207:	out    dx,eax
  423208:	or     ch,0x32
  42320b:	cmp    cl,BYTE PTR [ebp-0x10187f73]
  423211:	in     eax,dx
  423212:	push   0x71
  423214:	push   eax
  423215:	ja     0x42324d
  423217:	xor    BYTE PTR [edi-0x11],0x80
  42321b:	int    0xfd
  42321d:	cmp    cl,BYTE PTR [ebp-0x32888373]
  423223:	xchg   ebp,eax
  423224:	mov    ds:0x777caea5,eax
  423229:	lldt   WORD PTR [edi+0x7cb9969d]
  423230:	ja     0x423242
  423232:	aas    
  423233:	xchg   BYTE PTR [edi+ecx*2-0x3b],bh
  423237:	dec    ebp
  423238:	dec    ebp
  423239:	dec    ebp
  42323a:	outs   dx,BYTE PTR ds:[esi]
  42323b:	mov    ds:0x4f7c0a43,eax
  423240:	push   edx
  423241:	dec    ebp
  423242:	dec    ebp
  423243:	dec    ebp
  423244:	jg     0x4231f4
  423246:	aas    
  423247:	xchg   ebp,eax
  423248:	jl     0x423299
  42324a:	aad    0x4d
  42324c:	dec    ebp
  42324d:	dec    ebp
  42324e:	popf   
  42324f:	or     bh,BYTE PTR [edi+0x59]
  423252:	jl     0x4232a3
  423254:	fisttp QWORD PTR [ebp+0x4d]
  423257:	dec    ebp
  423258:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423259:	xchg   edi,eax
  42325a:	lock scas al,BYTE PTR es:[edi]
  42325c:	jl     0x4232ad
  42325e:	in     eax,0x4d
  423260:	dec    ebp
  423261:	dec    ebp
  423262:	xchg   esi,eax
  423263:	add    BYTE PTR [edi],bh
  423265:	xchg   BYTE PTR [edi+ecx*2-0x63],bh
  423269:	dec    ebp
  42326a:	dec    ebp
  42326b:	dec    ebp
  42326c:	outs   dx,BYTE PTR ds:[esi]
  42326d:	mov    ds:0x4f7c0a43,eax
  423272:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423273:	dec    ebp
  423274:	dec    ebp
  423275:	dec    ebp
  423276:	jg     0x423226
  423278:	aas    
  423279:	xchg   ebp,eax
  42327a:	jl     0x4232cb
  42327c:	lods   eax,DWORD PTR ds:[esi]
  42327d:	dec    ebp
  42327e:	dec    ebp
  42327f:	dec    ebp
  423280:	popf   
  423281:	or     bh,BYTE PTR [edi+0x59]
  423284:	jl     0x4232d5
  423286:	mov    ch,0x4d
  423288:	dec    ebp
  423289:	dec    ebp
  42328a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42328b:	xchg   edi,eax
  42328c:	lock scas al,BYTE PTR es:[edi]
  42328e:	jl     0x4232df
  423290:	mov    ebp,0x964d4d4d
  423295:	add    BYTE PTR [ebx-0x7a],ch
  423298:	xchg   BYTE PTR [edx+0x3d],ah
  42329b:	lea    ecx,[ebp+0x3677800a]
  4232a1:	dec    ebp
  4232a2:	jno    0x423224
  4232a4:	ja     0x423231
  4232a6:	xor    al,0x8b
  4232a9:	push   ebx
  4232aa:	je     0x4232ff
  4232ac:	push   ecx
  4232ad:	mov    dl,0xba
  4232af:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4232b5:	xor    al,0x84
  4232b8:	arpl   WORD PTR [edx+0x3aca0f09],si
  4232be:	lea    ecx,[ebp-0x7f068880]
  4232c4:	lock stc 
  4232c6:	push   ebx
  4232c7:	je     0x42331c
  4232c9:	push   ecx
  4232ca:	mov    dl,0xba
  4232cc:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4232d2:	xor    al,0x84
  4232d5:	inc    ebx
  4232d6:	std    
  4232d7:	xor    BYTE PTR [edi+0x6a],0x63
  4232db:	mov    dl,0x9
  4232dd:	into   
  4232de:	xchg   esp,eax
  4232df:	cmp    cl,BYTE PTR [ebp+0x3e777c8d]
  4232e5:	lea    ecx,[ebp+0x77808d8d]
  4232eb:	out    dx,eax
  4232ec:	and    BYTE PTR [edx+0x32],0x3a
  4232f0:	lea    ecx,[ebp-0x7f101880]
  4232f6:	ja     0x4232e7
  4232f8:	or     ch,0x76
  4232fb:	cmp    cl,BYTE PTR [ebp+0x3dda868d]
  423301:	lea    ecx,[ebp+0x71994d0a]
  423307:	xor    al,0xef
  42330a:	adc    BYTE PTR [eax+0x46],0x3a
  42330e:	lea    ecx,[ebp+0x77803a50]
  423314:	out    dx,eax
  423315:	sbb    BYTE PTR [esi+0x32],0x3a
  423319:	lea    ecx,[ebp+0x53efd780]
  42331f:	push   0x1
  423321:	sbb    BYTE PTR [ebp-0x79b2b2b3],bl
  423327:	fwait
  423328:	cmp    eax,0x800a8d8d
  42332d:	ja     0x42331e
  42332f:	or     ch,0x46
  423332:	cmp    cl,BYTE PTR [ebp+0x4d814d8d]
  423338:	fwait
  423339:	out    dx,eax
  42333a:	push   eax
  42333b:	ja     0x423353
  42333d:	xor    BYTE PTR [edi-0x11],0x80
  423341:	pop    esi
  423342:	xor    bh,BYTE PTR [edx]
  423344:	lea    ecx,[ebp+0x53efd780]
  42334a:	push   0x1
  42334c:	sbb    ch,al
  42334e:	dec    ebp
  42334f:	dec    ebp
  423350:	dec    ebp
  423351:	xchg   BYTE PTR [ebp+0x3d],al
  423354:	lea    ecx,[ebp-0x10887ff6]
  42335a:	or     ch,0x46
  42335d:	cmp    cl,BYTE PTR [ebp+0x4d814d8d]
  423363:	fwait
  423364:	out    dx,eax
  423365:	xor    BYTE PTR [edi-0x11],0x80
  423369:	pop    esi
  42336a:	xor    bh,BYTE PTR [edx]
  42336c:	lea    ecx,[ebp+0x53efd780]
  423372:	push   0x1
  423374:	sbb    BYTE PTR [ebp+0x4d],dl
  423377:	dec    ebp
  423378:	dec    ebp
  423379:	xchg   dh,ch
  42337b:	cmp    eax,0x800a8d8d
  423380:	ja     0x423371
  423382:	or     ch,0x46
  423385:	cmp    cl,BYTE PTR [ebp+0x4d814d8d]
  42338b:	fwait
  42338c:	out    dx,eax
  42338d:	in     eax,dx
  42338e:	mov    bh,0x5e
  423390:	lea    edx,[eax+0x77]
  423393:	xor    BYTE PTR ss:[edi+0x5e],0xe2
  423398:	pop    ds
  423399:	push   ebx
  42339a:	jb     0x42333b
  42339c:	dec    ebx
  42339d:	add    eax,0x992fbcd
  4233a2:	loopne 0x42339f
  4233a4:	or     cl,BYTE PTR [ebp-0x69]
  4233a7:	ss dec edi
  4233a9:	push   0xffffffd7
  4233ab:	arpl   WORD PTR [eax-0x7b12a189],ax
  4233b1:	mov    ebp,gs
  4233b3:	push   0x6e
  4233b5:	or     cl,BYTE PTR [ebp-0x69]
  4233b8:	push   ss
  4233b9:	dec    edi
  4233ba:	push   0xffffffd5
  4233bc:	rol    BYTE PTR [eax+0x5e80ef77],cl
  4233c2:	xor    bh,BYTE PTR [edx]
  4233c4:	lea    ecx,[ebp+0x53efd780]
  4233ca:	push   0x1
  4233cc:	xchg   edi,eax
  4233cd:	int    0x86
  4233cf:	and    bh,BYTE PTR [ebx]
  4233d1:	lea    ecx,[ebp-0x10887ff6]
  4233d7:	or     ch,0x3e
  4233da:	cmp    cl,BYTE PTR [ebp+0x4d814d8d]
  4233e0:	fwait
  4233e1:	out    dx,eax
  4233e2:	push   eax
  4233e3:	ja     0x423394
  4233e5:	(bad)  
  4233e6:	out    dx,al
  4233e7:	in     eax,dx
  4233e8:	mov    bh,0xaf
  4233ea:	lea    ecx,[ebp+0x77]
  4233ed:	pop    esi
  4233ee:	in     eax,dx
  4233ef:	out    0x5e,eax
  4233f1:	sub    eax,0x77802ee4
  4233f6:	stc    
  4233f7:	xor    al,0xf9
  4233fa:	adc    bh,0xef
  4233fd:	loop   0x42340c
  4233ff:	stos   DWORD PTR es:[edi],eax
  423400:	push   ebx
  423401:	je     0x423456
  423403:	sub    dh,BYTE PTR [edx-0x454df37a]
  423409:	sub    edi,edi
  42340b:	mov    dl,0x1
  42340d:	sbb    al,cl
  42340f:	or     eax,0xc3864d4d
  423414:	cmp    ecx,DWORD PTR [ebp+0x77800a8d]
  42341a:	mov    eax,DWORD PTR [eax-0x287f7410]
  423420:	out    dx,eax
  423421:	push   ebx
  423422:	je     0x423477
  423424:	sub    dh,BYTE PTR [edx-0x454df37a]
  42342a:	sub    edi,edi
  42342c:	mov    dl,0x1
  42342e:	sbb    BYTE PTR [edx+0xd],bh
  423431:	dec    ebp
  423432:	dec    ebp
  423433:	xchg   dl,bl
  423435:	cmp    ecx,DWORD PTR [ebp-0x68b2f573]
  42343b:	scas   eax,DWORD PTR es:[edi]
  42343c:	xor    al,0x8b
  42343f:	adc    BYTE PTR [edi+0x5311538b],0x9c
  423446:	mov    dl,0xbe
  423448:	or     al,0xb2
  42344a:	clc    
  42344b:	sub    edi,edi
  42344d:	(bad)  
  42344e:	arpl   bp,di
  423450:	xlat   BYTE PTR ds:[ebx]
  423451:	mov    WORD PTR [edi+esi*2+0x3e],?
  423455:	cmp    cl,BYTE PTR [ebp+0x77808d8d]
  42345b:	stc    
  42345c:	xor    al,0xf9
  42345f:	push   ebx
  423460:	je     0x423414
  423462:	xchg   BYTE PTR [ebx+edx*2],cl
  423465:	sub    dh,BYTE PTR [edx-0x4d00d646]
  42346b:	in     al,dx
  42346c:	ja     0x4234d8
  42346e:	push   eax
  42346f:	ja     0x4234db
  423471:	xor    BYTE PTR [edi+0x3e],0x4f
  423475:	push   0xffffffd5
  423477:	sbb    eax,0x80f97780
  42347c:	lock stc 
  42347e:	push   ebx
  42347f:	je     0x4234d4
  423481:	sub    dh,BYTE PTR [edx-0x454df37a]
  423487:	sub    edi,edi
  423489:	mov    dl,0xec
  42348b:	ja     0x423507
  42348d:	push   eax
  42348e:	ja     0x42350a
  423490:	xor    BYTE PTR [edi-0x7],0x80
  423494:	lock stc 
  423496:	push   ebx
  423497:	je     0x4234ec
  423499:	sub    dh,BYTE PTR [edx-0x794dd646]
  42349f:	or     al,0xff
  4234a1:	mov    dl,0x80
  4234a3:	lock test BYTE PTR [ebx-0x3],al
  4234a7:	xor    BYTE PTR [edi+0x6a],0x63
  4234ab:	mov    dl,0x9
  4234ad:	dec    esp
  4234ae:	or     DWORD PTR ds:0xde24d4d,0x7a7780a9
  4234b8:	xor    al,0x6a
  4234bb:	arpl   bp,di
  4234bd:	xlat   BYTE PTR ds:[ebx]
  4234be:	push   cs
  4234bf:	dec    ebp
  4234c0:	xlat   BYTE PTR ds:[ebx]
  4234c1:	out    dx,eax
  4234c2:	add    DWORD PTR [edi-0x76],esi
  4234c5:	or     al,BYTE PTR [esi-0x7272809a]
  4234cb:	push   eax
  4234cc:	ja     0x423544
  4234ce:	les    ebx,FWORD PTR [ebx]
  4234d0:	xor    BYTE PTR [edi+0x76],0x80
  4234d4:	lock stc 
  4234d6:	adc    BYTE PTR [edi+0x531153f9],0x7e
  4234dd:	mov    dl,0xbe
  4234df:	or     al,0xb2
  4234e1:	clc    
  4234e2:	sub    edi,edi
  4234e4:	(bad)  
  4234e5:	outs   dx,BYTE PTR ds:[esi]
  4234e6:	out    dx,eax
  4234e7:	xor    BYTE PTR [edi-0x75],0x80
  4234eb:	lock mov edx,DWORD PTR [ebx+0x74]
  4234ef:	push   ebx
  4234f0:	push   ecx
  4234f1:	mov    dl,0xba
  4234f3:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4234f9:	xor    al,0x76
  4234fc:	arpl   WORD PTR [edx-0x33f0f7],si
  423502:	lea    ecx,[ebp-0x7f748880]
  423508:	lock mov edx,DWORD PTR [ebx+0x74]
  42350c:	push   ebx
  42350d:	push   ecx
  42350e:	mov    dl,0xba
  423510:	sub    DWORD PTR [edx-0x4d00f37a],esi
  423516:	xor    al,0x8a
  423519:	arpl   WORD PTR [edx-0x7bf0f7],si
  42351f:	lea    ecx,[ebp-0x7f748880]
  423525:	lock mov edx,DWORD PTR [ebx+0x74]
  423529:	push   ebx
  42352a:	push   ecx
  42352b:	mov    dl,0x86
  42352d:	or     al,0xb2
  42352f:	mov    edx,0xc4b2ff29
  423534:	adc    eax,0x80f9f080
  423539:	xchg   edi,eax
  42353a:	stc    
  42353b:	push   ebx
  42353c:	adc    DWORD PTR [ebx+0x7e],edx
  42353f:	mov    dl,0xbe
  423541:	or     al,0xb2
  423543:	clc    
  423544:	sub    edi,edi
  423546:	(bad)  
  423547:	in     al,dx
  423548:	mov    dl,0x80
  42354a:	lock mov ah,BYTE PTR [ebx-0x4e]
  42354e:	in     al,0xb8
  423550:	xor    BYTE PTR [edi-0x76],0x50
  423554:	ja     0x4234da
  423556:	xor    BYTE PTR [edi+0x76],0x50
  42355a:	ja     0x4235be
  42355c:	ins    BYTE PTR es:[edi],dx
  42355d:	mul    BYTE PTR [edi+ebp*2]
  423560:	cmp    BYTE PTR [eax-0x19],dl
  423563:	inc    esi
  423564:	jl     0x4235dd
  423566:	xor    ch,0x24
  423569:	outs   dx,DWORD PTR ds:[esi]
  42356a:	cmp    BYTE PTR [eax-0xf7fb989],al
  423570:	inc    esi
  423571:	push   ebx
  423572:	je     0x4235c7
  423574:	push   ecx
  423575:	mov    dl,0x86
  423577:	or     al,0xb2
  423579:	mov    edx,0x50b2ff29
  42357e:	ja     0x4235d6
  423580:	xor    BYTE PTR [edi+0x46],0x80
  423584:	lock inc esi
  423586:	push   ebx
  423587:	je     0x4235dc
  423589:	push   ecx
  42358a:	mov    dl,0x86
  42358c:	or     al,0xb2
  42358e:	mov    edx,0x50b2ff29
  423593:	ja     0x42360f
  423595:	jl     0x42360e
  423597:	ds dec ecx
  423599:	and    al,0x6f
  42359b:	cmp    BYTE PTR [edi+esi*2+0x1e],bh
  42359f:	fisub  WORD PTR [edi+ebp*2]
  4235a2:	cmp    BYTE PTR [eax-0xf7fb989],al
  4235a8:	inc    esi
  4235a9:	push   ebx
  4235aa:	je     0x4235ff
  4235ac:	push   ecx
  4235ad:	mov    dl,0xba
  4235af:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4235b5:	xor    al,0x84
  4235b8:	arpl   bp,di
  4235ba:	or     DWORD PTR [edi],ecx
  4235bc:	pop    ss
  4235bd:	in     al,dx
  4235be:	lea    ecx,[ebp-0x72f35f42]
  4235c4:	lea    eax,[eax+0x77803ef0]
  4235ca:	adc    BYTE PTR ds:[edi+0x53fc5356],0x11
  4235d2:	mov    dl,0x84
  4235d4:	sub    DWORD PTR [edx-0x200f342],esi
  4235da:	xor    BYTE PTR [edi-0x7c],0x43
  4235de:	sti    
  4235df:	push   ebx
  4235e0:	jb     0x42362d
  4235e2:	add    eax,0x807a7750
  4235e7:	ja     0x423607
  4235e9:	xor    al,0x1e
  4235ec:	push   ebx
  4235ed:	je     0x423642
  4235ef:	push   ecx
  4235f0:	mov    dl,0xba
  4235f2:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4235f8:	xor    al,0x7a
  4235fb:	arpl   bp,di
  4235fd:	fst    DWORD PTR [edi]
  4235ff:	xor    BYTE PTR [edi+0x1e],0x80
  423603:	lock push ds
  423605:	push   ebx
  423606:	je     0x42365b
  423608:	push   ecx
  423609:	mov    dl,0x86
  42360b:	or     al,0xb2
  42360d:	mov    edx,0x50b2ff29
  423612:	ja     0x42368e
  423614:	xor    BYTE PTR [edi+0x3e],0x80
  423618:	lock ds push ebx
  42361b:	je     0x423670
  42361d:	push   ecx
  42361e:	mov    dl,0x86
  423620:	or     al,0xb2
  423622:	mov    edx,0x80b2ff29
  423627:	lock jp 0x423633
  42362a:	and    dh,BYTE PTR [edx-0x7f8588b0]
  423630:	ja     0x423678
  423632:	xor    al,0x46
  423635:	push   ebx
  423636:	je     0x42368b
  423638:	push   ecx
  423639:	mov    dl,0xba
  42363b:	sub    DWORD PTR [edx-0x4d00f37a],esi
  423641:	xor    al,0x7a
  423644:	arpl   bp,di
  423646:	or     DWORD PTR [edi],ecx
  423648:	(bad)  
  423649:	or     al,0x8d
  42364b:	lea    eax,[eax+0x77507a77]
  423651:	scas   eax,DWORD PTR es:[edi]
  423652:	xor    BYTE PTR [edi+0x56],0xec
  423656:	ja     0x4236ba
  423658:	push   eax
  423659:	out    0x7a,eax
  42365b:	push   eax
  42365c:	ja     0x4236c8
  42365e:	pop    esi
  42365f:	cmc    
  423660:	and    al,0x6f
  423662:	cmp    BYTE PTR [eax+0x77],dl
  423665:	pop    esi
  423666:	jl     0x4236df
  423668:	push   ss
  423669:	hlt    
  42366a:	and    al,0x6f
  42366c:	cmp    BYTE PTR [edi+esi*2+0x36],bh
  423670:	repz and al,0x6f
  423673:	cmp    BYTE PTR [eax+0x77],dl
  423676:	test   DWORD PTR [eax-0xf7f8589],0x5374537a
  423680:	push   ecx
  423681:	mov    dl,0x86
  423683:	or     al,0xb2
  423685:	mov    edx,0x50b2ff29
  42368a:	ja     0x423689
  42368c:	sub    BYTE PTR [edx-0x42],0x4f
  423690:	cmp    cl,BYTE PTR [ebp+0x7c6a808d]
  423696:	dec    edi
  423697:	or     cl,BYTE PTR [ebp+0x4d]
  42369a:	dec    ebp
  42369b:	jmp    0x7c6a:0x80386f24
  4236a2:	dec    edi
  4236a3:	xchg   ebp,eax
  4236a4:	dec    ebp
  4236a5:	dec    ebp
  4236a6:	dec    ebp
  4236a7:	or     esp,DWORD PTR [edi+ebp*2]
  4236aa:	cmp    BYTE PTR [eax-0x7f957f96],al
  4236b0:	ja     0x4236a9
  4236b2:	xor    al,0xf7
  4236b5:	push   ebx
  4236b6:	je     0x42370b
  4236b8:	push   ecx
  4236b9:	mov    dl,0x86
  4236bb:	or     al,0xb2
  4236bd:	mov    edx,0x80b2ff29
  4236c2:	lock std 
  4236c4:	or     DWORD PTR [edx],esp
  4236c6:	mov    dl,0x80
  4236c8:	lock push 0xffffff8f
  4236cb:	out    dx,al
  4236cc:	out    dx,eax
  4236cd:	adc    BYTE PTR [edi+0x4],dh
  4236d0:	sub    BYTE PTR [edx-0x80],0x77
  4236d4:	test   DWORD PTR [eax+0x5153f7f0],0xbab27453
  4236de:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4236e4:	xor    al,0xfd
  4236e7:	or     DWORD PTR [edx],esp
  4236e9:	mov    dl,0x80
  4236eb:	lock push ss
  4236ed:	adc    BYTE PTR [edi+0x53115316],0x7e
  4236f4:	mov    dl,0xbe
  4236f6:	or     al,0xb2
  4236f8:	clc    
  4236f9:	sub    edi,edi
  4236fb:	(bad)  
  4236fc:	in     al,dx
  4236fd:	mov    dl,0x80
  4236ff:	lock push 0x9
  423702:	loopne 0x423725
  423704:	out    dx,eax
  423705:	or     BYTE PTR [edi+0xa],0x4d
  423709:	dec    ebp
  42370a:	dec    ebp
  42370b:	sbb    BYTE PTR [eax],0xa
  42370e:	dec    ebp
  42370f:	dec    ebp
  423710:	dec    ebp
  423711:	push   ebx
  423712:	je     0x423767
  423714:	jle    0x4236c8
  423716:	xchg   BYTE PTR [edx+esi*4],cl
  423719:	clc    
  42371a:	sub    edi,edi
  42371c:	sti    
  42371d:	in     al,dx
  42371e:	mov    dl,0x9
  423720:	loopne 0x423712
  423722:	add    al,0x53
  423724:	std    
  423725:	adc    al,dh
  423727:	add    al,0x80
  423729:	push   0xffffff8f
  42372b:	ja     0x423731
  42372d:	xor    al,0xf7
  423730:	adc    BYTE PTR [edi+0x531153f7],0x7e
  423737:	mov    dl,0xf8
  423739:	sub    DWORD PTR [edx-0x100f342],esi
  42373f:	adc    BYTE PTR [edi-0x1ddf603],0x80
  423746:	xchg   edi,eax
  423747:	push   0x10
  423749:	out    dx,al
  42374a:	push   cs
  42374b:	sub    BYTE PTR [edx-0x80],0x77
  42374f:	test   DWORD PTR [eax+0x7453f7f0],0x86b25153
  423759:	or     al,0xb2
  42375b:	mov    edx,0x80b2ff29
  423760:	lock std 
  423762:	or     DWORD PTR [edx],esp
  423764:	mov    dl,0x80
  423766:	lock push 0xffffff8f
  423769:	out    dx,al
  42376a:	out    dx,eax
  42376b:	adc    BYTE PTR [edi+0x4],dh
  42376e:	sub    BYTE PTR [edx-0x80],0x77
  423772:	test   DWORD PTR [eax+0x7453f7f0],0x530c86b2
  42377c:	push   ecx
  42377d:	mov    dl,0xba
  42377f:	sub    edi,edi
  423781:	mov    dl,0x80
  423783:	lock std 
  423785:	or     DWORD PTR [edx],esp
  423787:	mov    dl,0x80
  423789:	lock pop esi
  42378b:	adc    BYTE PTR [edi+0x5311535e],0x7e
  423792:	mov    dl,0xbe
  423794:	or     al,0xb2
  423796:	clc    
  423797:	sub    edi,edi
  423799:	(bad)  
  42379a:	in     al,dx
  42379b:	mov    dl,0x80
  42379d:	lock push 0x9
  4237a0:	loopne 0x4237c3
  4237a2:	out    dx,eax
  4237a3:	or     BYTE PTR [edi-0x6b],0x4d
  4237a7:	dec    ebp
  4237a8:	dec    ebp
  4237a9:	sbb    BYTE PTR [eax],0x95
  4237ac:	dec    ebp
  4237ad:	dec    ebp
  4237ae:	dec    ebp
  4237af:	push   ebx
  4237b0:	je     0x423805
  4237b2:	jle    0x423766
  4237b4:	xchg   BYTE PTR [edx+esi*4],cl
  4237b7:	clc    
  4237b8:	sub    edi,edi
  4237ba:	sti    
  4237bb:	in     al,dx
  4237bc:	mov    dl,0x9
  4237be:	loopne 0x4237b0
  4237c0:	add    al,0x53
  4237c2:	std    
  4237c3:	adc    al,dh
  4237c5:	add    al,0x80
  4237c7:	push   0xffffff8f
  4237c9:	ja     0x4237cf
  4237cb:	xor    al,0xf7
  4237ce:	adc    BYTE PTR [edi+0x531153f7],0x7e
  4237d5:	mov    dl,0xf8
  4237d7:	sub    DWORD PTR [edx-0x100f342],esi
  4237dd:	adc    BYTE PTR [edi-0x1ddf603],0x80
  4237e4:	xchg   edi,eax
  4237e5:	push   0x10
  4237e7:	out    dx,al
  4237e8:	push   cs
  4237e9:	sub    BYTE PTR [edx-0x80],0x77
  4237ed:	ss xor al,0x36
  4237f1:	push   ebx
  4237f2:	push   ecx
  4237f3:	push   ebx
  4237f4:	je     0x4237a8
  4237f6:	mov    edx,0xc86b229
  4237fb:	push   DWORD PTR [edx-0x7fa10f80]
  423801:	xchg   edi,eax
  423802:	pop    esi
  423803:	push   ebx
  423804:	adc    DWORD PTR [ebx+0x7e],edx
  423807:	mov    dl,0xbe
  423809:	or     al,0xb2
  42380b:	clc    
  42380c:	sub    edi,edi
  42380e:	dec    BYTE PTR [ecx]
  423810:	and    dh,BYTE PTR [edx+0x50fd77ec]
  423816:	ja     0x423815
  423818:	xor    BYTE PTR [edi-0x3],0x80
  42381c:	lock scas eax,DWORD PTR es:[edi]
  42381e:	arpl   bp,di
  423820:	or     edx,ebp
  423822:	(bad)  
  423823:	or     eax,0x77804d4d
  423828:	pop    esi
  423829:	xor    al,0x5e
  42382c:	push   ebx
  42382d:	push   ecx
  42382e:	mov    dl,0xba
  423830:	sub    DWORD PTR [ebx+0x74],edx
  423833:	mov    dl,0x86
  423835:	or     al,0xff
  423837:	mov    dl,0x80
  423839:	lock scas eax,DWORD PTR es:[edi]
  42383b:	or     DWORD PTR [edx],esp
  42383d:	mov    dl,0x80
  42383f:	lock jp 0x423895
  423842:	adc    DWORD PTR [edx-0x4d00f342],esi
  423848:	xor    al,0x7a
  42384b:	push   ebx
  42384c:	push   ecx
  42384d:	mov    dl,0xba
  42384f:	sub    edi,edi
  423851:	mov    dl,0x50
  423853:	ja     0x42388b
  423855:	xor    BYTE PTR [edi-0x7e],0x80
  423859:	lock adc BYTE PTR [ebx+0x51],0xb2
  42385e:	mov    edx,0xb2745329
  423863:	xchg   BYTE PTR [edi+edi*8],cl
  423866:	mov    dl,0x80
  423868:	lock add BYTE PTR [eax+0x11538297],0xb2
  423870:	mov    esi,0xb27e530c
  423875:	clc    
  423876:	sub    edi,edi
  423878:	(bad)  
  423879:	in     al,dx
  42387a:	lock ss in al,dx
  42387d:	std    
  42387e:	in     al,dx
  42387f:	lock push esi
  423881:	push   eax
  423882:	lock push esi
  423884:	les    ebx,FWORD PTR ds:0x80827780
  42388a:	lock adc BYTE PTR [ebx+0x74],0x53
  42388f:	push   ecx
  423890:	mov    dl,0x86
  423892:	or     al,0xb2
  423894:	mov    edx,0xecb2ff29
  423899:	ja     0x4238f1
  42389b:	push   eax
  42389c:	ja     0x4238f4
  42389e:	xor    BYTE PTR [edi-0x7e],0x80
  4238a2:	lock adc BYTE PTR [ebx+0x74],0xb2
  4238a7:	xchg   BYTE PTR [ebx+edx*2],cl
  4238aa:	push   ecx
  4238ab:	mov    dl,0xba
  4238ad:	sub    edi,edi
  4238af:	mov    dl,0x80
  4238b1:	lock test BYTE PTR [ebx-0x3],al
  4238b5:	xor    BYTE PTR [edi-0x7e],0x80
  4238b9:	xchg   edi,eax
  4238ba:	adc    BYTE PTR [ebx+0x74],0x53
  4238be:	jle    0x423872
  4238c0:	clc    
  4238c1:	sub    DWORD PTR [edx-0x400f37a],esi
  4238c7:	adc    BYTE PTR [edi-0x4ddf6aa],0x63
  4238ce:	mov    dl,0x9
  4238d0:	dec    esp
  4238d1:	xor    cl,BYTE PTR [edx+0x77804d4d]
  4238d7:	mov    eax,DWORD PTR [eax+0x77808b77]
  4238dd:	mov    dl,BYTE PTR [eax+0x77]
  4238e0:	xor    BYTE PTR ss:[edi-0x11],0x80
  4238e5:	lock adc BYTE PTR es:[edi-0x4deeacda],0xbe
  4238ee:	or     al,0x53
  4238f0:	jle    0x423872
  4238f2:	int    0x32
  4238f4:	cmp    cl,BYTE PTR [ebp+0x29f8b28d]
  4238fa:	(bad)  
  4238fb:	(bad)  
  4238fc:	xchg   esi,eax
  4238fd:	xor    al,0x66
  423900:	adc    BYTE PTR [edi+0x53115366],0x7e
  423907:	mov    dl,0xbe
  423909:	or     al,0xb2
  42390b:	clc    
  42390c:	sub    edi,edi
  42390e:	(bad)  
  42390f:	xchg   esi,eax
  423910:	xor    al,0x8b
  423913:	adc    BYTE PTR [edi+0x36d74d8b],0x53
  42391a:	adc    DWORD PTR [ebx+0x7e],edx
  42391d:	mov    dl,0xbe
  42391f:	or     al,0xb2
  423921:	clc    
  423922:	sub    edi,edi
  423924:	(bad)  
  423925:	xchg   esi,eax
  423926:	dec    ebp
  423927:	or     dl,BYTE PTR ds:0x808bf080
  42392d:	xchg   edi,eax
  42392e:	mov    edx,DWORD PTR [ebx+0x11]
  423931:	push   ebx
  423932:	jle    0x4238e6
  423934:	mov    esi,0x29f8b20c
  423939:	(bad)  
  42393a:	(bad)  
  42393b:	push   eax
  42393c:	ja     0x4239a4
  42393e:	arpl   bp,di
  423940:	or     DWORD PTR [edi],ecx
  423942:	cmp    al,0x8d
  423944:	lea    ecx,[ebp-0x3b748880]
  42394a:	lock adc BYTE PTR [edi-0x7b88af9a],0x6e
  423952:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423953:	test   BYTE PTR [eax-0x414d7b10],al
  423959:	or     al,0x53
  42395b:	cld    
  42395c:	mov    dl,0x84
  42395e:	sub    edi,edi
  423960:	mov    dl,0x80
  423962:	lock jbe 0x4238f4
  423965:	and    DWORD PTR [edx],edi
  423967:	adc    BYTE PTR [ecx],ah
  423969:	jno    0x4238eb
  42396b:	lock stc 
  42396d:	xor    al,0xf9
  423970:	adc    BYTE PTR [edi+0x531153f9],0x7e
  423977:	mov    dl,0xf8
  423979:	sub    DWORD PTR [edx-0x100f342],esi
  42397f:	adc    BYTE PTR [edi-0x7f021307],0x77
  423986:	test   BYTE PTR [ebx-0x6c],dl
  423989:	in     eax,dx
  42398a:	test   BYTE PTR [edx-0x4d750713],cl
  423990:	mov    esi,0xfffbec29
  423995:	mov    dl,0x53
  423997:	jl     0x423919
  423999:	lock mov al,BYTE PTR [eax-0x74d7569]
  4239a0:	or     al,0xb2
  4239a2:	mov    esi,0x53b6ff29
  4239a7:	pushf  
  4239a8:	arpl   bx,di
  4239aa:	xlat   BYTE PTR ds:[ebx]
  4239ab:	sub    al,0x80
  4239ad:	ja     0x42399e
  4239af:	xor    al,0x2e
  4239b2:	adc    BYTE PTR [edi+0x32cd802e],0x3a
  4239b9:	lea    ecx,[ebp+0x7e531153]
  4239bf:	mov    dl,0xbe
  4239c1:	or     al,0xb2
  4239c3:	clc    
  4239c4:	sub    edi,edi
  4239c6:	(bad)  
  4239c7:	xchg   esi,eax
  4239c8:	xor    al,0x8b
  4239cb:	adc    BYTE PTR [edi+0x5311538b],0x7e
  4239d2:	mov    dl,0xbe
  4239d4:	or     al,0xb2
  4239d6:	clc    
  4239d7:	sub    edi,edi
  4239d9:	(bad)  
  4239da:	xchg   esi,eax
  4239db:	dec    ebp
  4239dc:	xlat   BYTE PTR ds:[ebx]
  4239dd:	jbe    0x423a2c
  4239df:	or     bl,BYTE PTR ds:0x50667780
  4239e5:	ja     0x423a5d
  4239e7:	xor    BYTE PTR [edi+0x36],0x50
  4239eb:	ja     0x423977
  4239ed:	xor    BYTE PTR [edi-0x76],0x53
  4239f1:	jo     0x4239e0
  4239f3:	xchg   dh,ch
  4239f5:	aad    0x43
  4239f7:	xor    BYTE PTR [edi+0x76],0x80
  4239fb:	adc    eax,0x767780ef
  423a00:	sub    dh,0xef
  423a03:	push   ebx
  423a04:	cld    
  423a05:	push   ebx
  423a06:	xchg   esp,eax
  423a07:	mov    dl,0x84
  423a09:	sub    DWORD PTR [edx-0x400f3f9],esi
  423a0f:	adc    BYTE PTR [edi-0x5911af8a],0x80
  423a16:	ja     0x4239a2
  423a18:	in     eax,dx
  423a19:	mov    dl,0xee
  423a1b:	in     eax,dx
  423a1c:	xchg   dh,ch
  423a1e:	arpl   bp,di
  423a20:	in     al,0x98
  423a22:	xor    BYTE PTR [edi-0x76],0x53
  423a26:	jo     0x423a15
  423a28:	xchg   dh,ch
  423a2a:	aad    0x43
  423a2c:	xor    BYTE PTR [edi+0x76],0x80
  423a30:	adc    eax,0x767780ef
  423a35:	sub    dh,0xef
  423a38:	push   ebx
  423a39:	cld    
  423a3a:	push   ebx
  423a3b:	xchg   esp,eax
  423a3c:	mov    dl,0x84
  423a3e:	sub    DWORD PTR [edx-0x400f3f9],esi
  423a44:	adc    BYTE PTR [edi-0x5911af8a],0x80
  423a4b:	ja     0x4239d7
  423a4d:	in     eax,dx
  423a4e:	mov    dl,0xee
  423a50:	in     eax,dx
  423a51:	xchg   dh,ch
  423a53:	arpl   bp,di
  423a55:	in     al,0x98
  423a57:	xor    BYTE PTR [edi+0x76],0x80
  423a5b:	lock stc 
  423a5d:	push   eax
  423a5e:	ja     0x423a0f
  423a60:	xor    BYTE PTR [edi-0x7],0x53
  423a64:	adc    DWORD PTR [ebx-0x4],edx
  423a67:	mov    dl,0x84
  423a69:	sub    DWORD PTR [edx-0x200f342],esi
  423a6f:	xor    BYTE PTR [edi-0x75],0x50
  423a73:	lock es jl 0x423aee
  423a77:	inc    ecx
  423a78:	ins    DWORD PTR es:[edi],dx
  423a79:	pop    ebp
  423a7a:	ins    DWORD PTR es:[edi],dx
  423a7b:	aas    
  423a7c:	jl     0x423af5
  423a7e:	pop    edx
  423a7f:	ins    DWORD PTR es:[edi],dx
  423a80:	inc    ebx
  423a81:	ins    DWORD PTR es:[edi],dx
  423a82:	push   ebx
  423a83:	push   eax
  423a84:	ja     0x423aec
  423a86:	fsub   QWORD PTR [si]
  423a89:	outs   dx,DWORD PTR ds:[esi]
  423a8a:	cmp    BYTE PTR [ecx],cl
  423a8c:	jg     0x80cfc81f
  423a92:	xchg   edi,eax
  423a93:	scas   eax,DWORD PTR es:[edi]
  423a94:	cmp    ch,0x53
  423a97:	adc    DWORD PTR [eax-0x10],edx
  423a9a:	test   BYTE PTR [edx+0x530c84c7],dh
  423aa0:	cld    
  423aa1:	mov    dl,0x84
  423aa3:	sub    edi,edi
  423aa5:	ja     0x423a2b
  423aa7:	push   eax
  423aa8:	lock bound ecx,QWORD PTR [edi+0x9412f31]
  423aaf:	cli    
  423ab0:	out    dx,al
  423ab1:	jno    0x423a80
  423ab3:	add    eax,0xbdbecdcd
  423ab8:	or     eax,esp
  423aba:	jo     0x423b1f
  423abc:	mov    dl,0xd7
  423abe:	fiadd  DWORD PTR [eax-0xf7f0689]
  423ac4:	stc    
  423ac5:	xor    BYTE PTR [edi-0x7],0x80
  423ac9:	xchg   edi,eax
  423aca:	stc    
  423acb:	push   ebx
  423acc:	cld    
  423acd:	push   ebx
  423ace:	adc    DWORD PTR [edx-0x414dd67c],esi
  423ad4:	or     al,0xff
  423ad6:	std    
  423ad7:	xor    BYTE PTR [edi+0x66],0x53
  423adb:	cld    
  423adc:	mov    dl,0x84
  423ade:	sub    edi,edi
  423ae0:	ja     0x423a66
  423ae2:	push   ebx
  423ae3:	xchg   esp,eax
  423ae4:	in     al,dx
  423ae5:	std    
  423ae6:	xor    BYTE PTR [edi+0x62],0xed
  423aea:	test   BYTE PTR [edx-0x4d750713],cl
  423af0:	mov    esi,0xfff7ec29
  423af5:	(bad)  
  423af6:	push   ebx
  423af7:	sub    al,BYTE PTR [eax+0x66f050b2]
  423afd:	fsub   QWORD PTR [si]
  423b00:	outs   dx,DWORD PTR ds:[esi]
  423b01:	cmp    bh,dl
  423b03:	add    DWORD PTR [eax-0x6f3bd910],eax
  423b09:	xor    al,0x8b
  423b0c:	xor    BYTE PTR [edi-0x75],0x53
  423b10:	adc    DWORD PTR [ebx-0x4],edx
  423b13:	mov    dl,0xbe
  423b15:	or     al,0xb2
  423b17:	test   BYTE PTR [ecx],ch
  423b19:	(bad)  
  423b1a:	std    
  423b1b:	xor    BYTE PTR [edi-0x75],0x80
  423b1f:	xchg   edi,eax
  423b20:	mov    edx,DWORD PTR [ebx+0x74]
  423b23:	push   ebx
  423b24:	jle    0x423ad8
  423b26:	xchg   BYTE PTR [edx+esi*4],cl
  423b29:	clc    
  423b2a:	sub    edi,edi
  423b2c:	sti    
  423b2d:	arpl   WORD PTR [edx+0xc230f09],si
  423b33:	lea    ecx,[ebp-0x7f508880]
  423b39:	ins    DWORD PTR es:[edi],dx
  423b3a:	out    dx,eax
  423b3b:	push   eax
  423b3c:	out    0xf9,eax
  423b3e:	jl     0x423bb7
  423b40:	es repz and al,0x6f
  423b44:	cmp    BYTE PTR [edi+esi*2+0x36],bh
  423b48:	hlt    
  423b49:	and    al,0x6f
  423b4b:	cmp    BYTE PTR [edi+esi*2+0x7a],bh
  423b4f:	mul    BYTE PTR [ebx+0x777c386f]
  423b55:	test   dl,bh
  423b57:	and    al,0x6f
  423b59:	cmp    BYTE PTR [edi+esi*2+0x66],bh
  423b5d:	nop
  423b5e:	shr    BYTE PTR [edi+0x38],1
  423b61:	push   eax
  423b62:	ja     0x423ba2
  423b64:	xor    BYTE PTR [edi-0x11],0x80
  423b68:	lock test BYTE PTR [eax+0x11538497],al
  423b6f:	mov    dl,0xbe
  423b71:	or     al,0x53
  423b73:	jle    0x423b27
  423b75:	clc    
  423b76:	sub    edi,edi
  423b78:	(bad)  
  423b79:	xchg   esi,eax
  423b7a:	xor    al,0x7a
  423b7d:	adc    BYTE PTR [edi-0x4deeac86],0xbe
  423b84:	or     al,0x53
  423b86:	jle    0x423b08
  423b88:	int    0x32
  423b8a:	cmp    cl,BYTE PTR [ebp+0x29f8b28d]
  423b90:	(bad)  
  423b91:	(bad)  
  423b92:	xchg   esi,eax
  423b93:	xor    al,0x66
  423b96:	adc    BYTE PTR [edi+0x53115366],0x7e
  423b9d:	mov    dl,0xbe
  423b9f:	or     al,0xb2
  423ba1:	clc    
  423ba2:	sub    edi,edi
  423ba4:	(bad)  
  423ba5:	xchg   esi,eax
  423ba6:	xor    al,0xf9
  423ba9:	adc    BYTE PTR [edi+0x531153f9],0x7e
  423bb0:	mov    dl,0xbe
  423bb2:	or     al,0xb2
  423bb4:	clc    
  423bb5:	sub    edi,edi
  423bb7:	(bad)  
  423bb8:	xchg   esi,eax
  423bb9:	dec    ebp
  423bba:	or     dl,BYTE PTR ds:0x80667750
  423bc0:	ja     0x423bb1
  423bc2:	xor    al,0x84
  423bc5:	adc    BYTE PTR [edi-0x4deeac7c],0xbe
  423bcc:	or     al,0x53
  423bce:	jle    0x423b50
  423bd0:	int    0x32
  423bd2:	cmp    cl,BYTE PTR [ebp+0x29f8b28d]
  423bd8:	(bad)  
  423bd9:	(bad)  
  423bda:	xchg   esi,eax
  423bdb:	xor    al,0x7a
  423bde:	adc    BYTE PTR [edi+0x5311537a],0x7e
  423be5:	mov    dl,0xbe
  423be7:	or     al,0xb2
  423be9:	clc    
  423bea:	sub    edi,edi
  423bec:	(bad)  
  423bed:	xchg   esi,eax
  423bee:	xor    al,0xf9
  423bf1:	adc    BYTE PTR [edi+0x3ed74df9],0x53
  423bf8:	adc    DWORD PTR [ebx+0x7e],edx
  423bfb:	mov    dl,0xbe
  423bfd:	or     al,0xb2
  423bff:	clc    
  423c00:	sub    edi,edi
  423c02:	(bad)  
  423c03:	xchg   esi,eax
  423c04:	dec    ebp
  423c05:	or     dl,BYTE PTR ds:0x50f9f080
  423c0b:	ja     0x423b91
  423c0d:	xor    BYTE PTR [edi-0x7],0x53
  423c11:	adc    DWORD PTR [ebx-0x4],edx
  423c14:	mov    dl,0xbe
  423c16:	or     al,0xb2
  423c18:	test   BYTE PTR [ecx],ch
  423c1a:	(bad)  
  423c1b:	std    
  423c1c:	xor    BYTE PTR [edi+0x66],0x63
  423c20:	std    
  423c21:	or     DWORD PTR [edi],ecx
  423c23:	cmp    eax,0x808d8d2f
  423c28:	lock stc 
  423c2a:	adc    BYTE PTR [edi+0x531153f9],0x7e
  423c31:	mov    dl,0xbe
  423c33:	or     al,0xb2
  423c35:	clc    
  423c36:	sub    edi,edi
  423c38:	(bad)  
  423c39:	arpl   ax,si
  423c3b:	test   BYTE PTR [ecx],cl
  423c3d:	bswap  edi
  423c3f:	das    
  423c40:	lea    ecx,[ebp-0x7fd90f80]
  423c46:	lock es mov dl,0xbe
  423c4a:	or     al,0xcd
  423c4c:	add    eax,0x80ef10c4
  423c51:	lock stc 
  423c53:	xor    al,0xf9
  423c56:	mov    dl,0xbe
  423c58:	or     al,0xcd
  423c5a:	add    eax,0x3a7d10c4
  423c5f:	xor    al,0x36
  423c62:	xor    al,0x36
  423c65:	mov    dl,0xbe
  423c67:	or     al,0xcd
  423c69:	add    eax,0xc7d10c4
  423c6e:	in     eax,dx
  423c6f:	cmp    BYTE PTR ds:0x8d4d4d4d,bl
  423c75:	in     eax,dx
  423c76:	cmp    BYTE PTR ds:0x8d4d4d4d,ah
  423c7c:	add    DWORD PTR [ecx],eax
  423c7e:	and    eax,0x964d4d4d
  423c83:	dec    ebp
  423c84:	xlat   BYTE PTR ds:[ebx]
  423c85:	add    DWORD PTR ds:[ecx],eax
  423c88:	sbb    eax,0x4d4d4d4d
  423c8d:	xlat   BYTE PTR ds:[ebx]
  423c8e:	test   BYTE PTR [esi+0x4daff080],dl
  423c94:	sahf   
  423c95:	and    DWORD PTR [eax-0x4d128910],eax
  423c9b:	jno    0x423c33
  423c9d:	or     al,BYTE PTR [esi+0x4d4d8832]
  423ca3:	push   eax
  423ca4:	ja     0x423d08
  423ca6:	xor    BYTE PTR [edi-0x11],0x80
  423caa:	lock adc BYTE PTR cs:[edi+0x32cd802e],0x3a
  423cb3:	lea    ecx,[ebp+0x7e531153]
  423cb9:	mov    dl,0xbe
  423cbb:	or     al,0xb2
  423cbd:	clc    
  423cbe:	sub    edi,edi
  423cc0:	(bad)  
  423cc1:	xchg   esi,eax
  423cc2:	xor    al,0xf9
  423cc5:	adc    BYTE PTR [edi+0x531153f9],0x7e
  423ccc:	mov    dl,0xbe
  423cce:	or     al,0xb2
  423cd0:	clc    
  423cd1:	sub    edi,edi
  423cd3:	(bad)  
  423cd4:	xchg   esi,eax
  423cd5:	dec    ebp
  423cd6:	xlat   BYTE PTR ds:[ebx]
  423cd7:	dec    bp
  423cd9:	or     bl,BYTE PTR ds:0xb2627780
  423cdf:	push   0xc
  423ce1:	push   ebx
  423ce2:	jl     0x423d47
  423ce4:	jl     0x423c66
  423ce6:	ja     0x423cd7
  423ce8:	xor    al,0x2e
  423ceb:	or     ch,0x32
  423cee:	cmp    cl,BYTE PTR [ebp+0x2e97808d]
  423cf4:	xlat   BYTE PTR ds:[ebx]
  423cf5:	push   ebp
  423cf6:	push   ebx
  423cf7:	adc    DWORD PTR [ebx+0x7e],edx
  423cfa:	mov    dl,0xbe
  423cfc:	or     al,0xb2
  423cfe:	clc    
  423cff:	sub    edi,edi
  423d01:	(bad)  
  423d02:	xchg   esi,eax
  423d03:	xor    al,0xf9
  423d06:	adc    BYTE PTR [edi+0x531153f9],0x7e
  423d0d:	mov    dl,0xbe
  423d0f:	or     al,0xb2
  423d11:	clc    
  423d12:	sub    edi,edi
  423d14:	(bad)  
  423d15:	xchg   esi,eax
  423d16:	dec    ebp
  423d17:	xlat   BYTE PTR ds:[ebx]
  423d18:	jbe    0x423d67
  423d1a:	or     bl,BYTE PTR ds:0x50847780
  423d20:	ja     0x423d98
  423d22:	xor    BYTE PTR [edi+0x3e],0x50
  423d26:	ja     0x423cb2
  423d28:	les    edi,FWORD PTR [ecx]
  423d2a:	push   ebx
  423d2b:	adc    DWORD PTR [ebx+0x7e],edx
  423d2e:	mov    dl,0xbe
  423d30:	or     al,0xb2
  423d32:	clc    
  423d33:	sub    edi,edi
  423d35:	(bad)  
  423d36:	xchg   esi,eax
  423d37:	xor    al,0xf9
  423d3a:	adc    BYTE PTR [edi+0x531153f9],0x7e
  423d41:	mov    dl,0xbe
  423d43:	or     al,0xb2
  423d45:	clc    
  423d46:	sub    edi,edi
  423d48:	(bad)  
  423d49:	xchg   esi,eax
  423d4a:	dec    ebp
  423d4b:	xlat   BYTE PTR ds:[ebx]
  423d4c:	test   BYTE PTR [ebp+0xa],cl
  423d4f:	sbb    eax,0x508a7780
  423d54:	ja     0x423d74
  423d56:	xor    BYTE PTR [edi+0x76],0x50
  423d5a:	out    0x56,eax
  423d5c:	push   eax
  423d5d:	ja     0x423dc1
  423d5f:	jl     0x423dd8
  423d61:	xor    ch,0x24
  423d64:	outs   dx,DWORD PTR ds:[esi]
  423d65:	cmp    BYTE PTR [eax-0xf7fa989],al
  423d6b:	push   esi
  423d6c:	push   ebx
  423d6d:	cld    
  423d6e:	push   ebx
  423d6f:	adc    DWORD PTR [edx-0x414dd67c],esi
  423d75:	or     al,0xff
  423d77:	mov    dl,0x50
  423d79:	ja     0x423dc1
  423d7b:	xor    BYTE PTR [edi+0x56],0x80
  423d7f:	lock push esi
  423d81:	push   ebx
  423d82:	cld    
  423d83:	push   ebx
  423d84:	adc    DWORD PTR [edx-0x414dd67c],esi
  423d8a:	or     al,0xff
  423d8c:	mov    dl,0x50
  423d8e:	ja     0x423d3f
  423d90:	jl     0x423e09
  423d92:	jp     0x423ddd
  423d94:	and    al,0x6f
  423d96:	cmp    BYTE PTR [edi+esi*2-0x7c],bh
  423d9a:	fisub  WORD PTR [edi+ebp*2]
  423d9d:	cmp    BYTE PTR [eax-0xf7fa989],al
  423da3:	push   esi
  423da4:	push   ebx
  423da5:	cld    
  423da6:	push   ebx
  423da7:	adc    DWORD PTR [edx-0x7b4df342],esi
  423dad:	sub    edi,edi
  423daf:	mov    dl,0x80
  423db1:	lock push ds
  423db3:	arpl   bp,di
  423db5:	or     DWORD PTR [edi],ecx
  423db7:	pop    ss
  423db8:	in     al,dx
  423db9:	lea    ecx,[ebp-0x72f35f42]
  423dbf:	lea    eax,[eax+0x77807af0]
  423dc5:	jp     0x423d47
  423dc7:	xchg   edi,eax
  423dc8:	inc    esi
  423dc9:	push   ebx
  423dca:	je     0x423e1f
  423dcc:	push   ecx
  423dcd:	mov    dl,0x86
  423dcf:	or     al,0xb2
  423dd1:	mov    edx,0x80fdff29
  423dd6:	ja     0x423df6
  423dd8:	inc    ebx
  423dd9:	sti    
  423dda:	push   ebx
  423ddb:	jb     0x423e28
  423ddd:	add    eax,0x80af7750
  423de2:	ja     0x423d68
  423de4:	xor    al,0x84
  423de7:	push   ebx
  423de8:	cld    
  423de9:	push   ebx
  423dea:	adc    DWORD PTR [edx-0x7b4df342],esi
  423df0:	sub    edi,edi
  423df2:	mov    dl,0x80
  423df4:	lock scas eax,DWORD PTR es:[edi]
  423df6:	arpl   bp,di
  423df8:	fst    DWORD PTR [edi]
  423dfa:	xor    BYTE PTR [edi-0x7c],0x80
  423dfe:	lock test BYTE PTR [ebx-0x4],dl
  423e02:	push   ebx
  423e03:	adc    DWORD PTR [edx-0x414dd67c],esi
  423e09:	or     al,0xff
  423e0b:	mov    dl,0x50
  423e0d:	ja     0x423dbe
  423e0f:	xor    BYTE PTR [edi+0x7a],0x80
  423e13:	lock jp 0x423e69
  423e16:	cld    
  423e17:	push   ebx
  423e18:	adc    DWORD PTR [edx-0x414dd67c],esi
  423e1e:	or     al,0xff
  423e20:	mov    dl,0x80
  423e22:	lock scas eax,DWORD PTR es:[edi]
  423e24:	or     DWORD PTR [edx],esp
  423e26:	mov    dl,0x50
  423e28:	ja     0x423dd9
  423e2a:	xor    BYTE PTR [edi+0x56],0x80
  423e2e:	lock push esi
  423e30:	push   ebx
  423e31:	cld    
  423e32:	push   ebx
  423e33:	adc    DWORD PTR [edx-0x7b4df342],esi
  423e39:	sub    edi,edi
  423e3b:	mov    dl,0x80
  423e3d:	lock scas eax,DWORD PTR es:[edi]
  423e3f:	arpl   bp,di
  423e41:	or     DWORD PTR [edi],ecx
  423e43:	(bad)  
  423e44:	or     al,0x8d
  423e46:	lea    eax,[eax+0x7750af77]
  423e4c:	scas   eax,DWORD PTR es:[edi]
  423e4d:	xor    BYTE PTR [edi+0x46],0xec
  423e51:	ja     0x423eb5
  423e53:	push   eax
  423e54:	out    0x3e,eax
  423e56:	push   eax
  423e57:	ja     0x423eb7
  423e59:	pop    esi
  423e5a:	cmc    
  423e5b:	and    al,0x6f
  423e5d:	cmp    BYTE PTR [eax+0x77],dl
  423e60:	push   0x7c
  423e62:	ja     0x423eca
  423e64:	hlt    
  423e65:	and    al,0x6f
  423e67:	cmp    BYTE PTR [edi+esi*2+0x26],bh
  423e6b:	repz and al,0x6f
  423e6e:	cmp    BYTE PTR [eax+0x77],dl
  423e71:	test   DWORD PTR [eax-0xf7fc189],0x53fc533e
  423e7b:	adc    DWORD PTR [edx-0x414dd67c],esi
  423e81:	or     al,0xff
  423e83:	mov    dl,0x50
  423e85:	ja     0x423e84
  423e87:	sub    BYTE PTR [edx-0x42],0x4f
  423e8b:	cmp    cl,BYTE PTR [ebp+0x7c6a808d]
  423e91:	dec    edi
  423e92:	xor    DWORD PTR [ebp+0x4d],ecx
  423e95:	dec    ebp
  423e96:	jmp    0x7c6a:0x80386f24
  423e9d:	dec    edi
  423e9e:	jge    0x423eed
  423ea0:	dec    ebp
  423ea1:	dec    ebp
  423ea2:	or     esp,DWORD PTR [edi+ebp*2]
  423ea5:	cmp    BYTE PTR [eax-0x7f957f96],al
  423eab:	ja     0x423ea4
  423ead:	xor    al,0xf7
  423eb0:	push   ebx
  423eb1:	cld    
  423eb2:	push   ebx
  423eb3:	adc    DWORD PTR [edx-0x414dd67c],esi
  423eb9:	or     al,0xff
  423ebb:	mov    dl,0x80
  423ebd:	lock std 
  423ebf:	or     DWORD PTR [edx],esp
  423ec1:	mov    dl,0x80
  423ec3:	lock pop esi
  423ec5:	(bad)  
  423ec6:	out    dx,al
  423ec7:	out    dx,eax
  423ec8:	adc    BYTE PTR [edi-0x54],dh
  423ecb:	sub    BYTE PTR [edx-0x80],0x77
  423ecf:	test   DWORD PTR [eax+0x1153f7f0],0xbeb2fc53
  423ed9:	or     al,0xb2
  423edb:	test   BYTE PTR [ecx],ch
  423edd:	push   DWORD PTR [edx+0x9fdf080]
  423ee3:	and    dh,BYTE PTR [edx-0x7f990f80]
  423ee9:	xchg   edi,eax
  423eea:	push   bx
  423eec:	push   ecx
  423eed:	push   ebx
  423eee:	xchg   esp,eax
  423eef:	mov    dl,0xba
  423ef1:	sub    DWORD PTR [edx-0x100f3f9],esi
  423ef7:	in     al,dx
  423ef8:	mov    dl,0x80
  423efa:	lock pop esi
  423efc:	or     eax,esp
  423efe:	and    edi,ebp
  423f00:	or     BYTE PTR [edi+0x31],0x4d
  423f04:	dec    ebp
  423f05:	dec    ebp
  423f06:	sbb    BYTE PTR [eax],0x31
  423f09:	dec    ebp
  423f0a:	dec    ebp
  423f0b:	dec    ebp
  423f0c:	push   ebx
  423f0d:	cld    
  423f0e:	push   ebx
  423f0f:	xchg   esp,eax
  423f10:	mov    dl,0x84
  423f12:	sub    DWORD PTR [edx-0x400f3f9],esi
  423f18:	in     al,dx
  423f19:	mov    dl,0x9
  423f1b:	loopne 0x423f0d
  423f1d:	lods   al,BYTE PTR ds:[esi]
  423f1e:	push   ebx
  423f1f:	std    
  423f20:	adc    al,dh
  423f22:	lods   al,BYTE PTR ds:[esi]
  423f23:	sub    BYTE PTR [edx-0x71],0x77
  423f27:	lods   al,BYTE PTR ds:[esi]
  423f28:	xor    al,0xf7
  423f2b:	adc    BYTE PTR [edi+0x535153f7],0x94
  423f32:	mov    dl,0x7
  423f34:	or     al,0xb2
  423f36:	mov    edx,0x80feff29
  423f3b:	xchg   edi,eax
  423f3c:	std    
  423f3d:	or     DWORD PTR [edx],esp
  423f3f:	inc    BYTE PTR [eax-0x11efa169]
  423f45:	push   cs
  423f46:	sub    BYTE PTR [edx-0x80],0x77
  423f4a:	test   DWORD PTR [eax-0x3ac0810],0x84b21153
  423f54:	sub    DWORD PTR [edx-0x4d00f342],esi
  423f5a:	xor    al,0xfd
  423f5d:	or     DWORD PTR [edx],esp
  423f5f:	mov    dl,0x80
  423f61:	lock pop esi
  423f63:	(bad)  
  423f64:	out    dx,al
  423f65:	out    dx,eax
  423f66:	adc    BYTE PTR [edi-0x54],dh
  423f69:	sub    BYTE PTR [edx-0x80],0x77
  423f6d:	test   DWORD PTR [eax-0x3ac0810],0x532984b2
  423f77:	adc    DWORD PTR [edx-0x4d00f342],esi
  423f7d:	xor    al,0xfd
  423f80:	or     DWORD PTR [edx],esp
  423f82:	mov    dl,0x80
  423f84:	lock push 0xffffff80
  423f87:	xchg   edi,eax
  423f88:	push   0x53
  423f8a:	push   ecx
  423f8b:	push   ebx
  423f8c:	xchg   esp,eax
  423f8d:	mov    dl,0xba
  423f8f:	sub    DWORD PTR [edx-0x100f3f9],esi
  423f95:	in     al,dx
  423f96:	mov    dl,0x80
  423f98:	lock pop esi
  423f9a:	or     eax,esp
  423f9c:	and    edi,ebp
  423f9e:	or     BYTE PTR [edi+0x7d],0x4d
  423fa2:	dec    ebp
  423fa3:	dec    ebp
  423fa4:	sbb    BYTE PTR [eax],0x7d
  423fa7:	dec    ebp
  423fa8:	dec    ebp
  423fa9:	dec    ebp
  423faa:	push   ebx
  423fab:	cld    
  423fac:	push   ebx
  423fad:	xchg   esp,eax
  423fae:	mov    dl,0x84
  423fb0:	sub    DWORD PTR [edx-0x400f3f9],esi
  423fb6:	in     al,dx
  423fb7:	mov    dl,0x9
  423fb9:	loopne 0x423fab
  423fbb:	lods   al,BYTE PTR ds:[esi]
  423fbc:	push   ebx
  423fbd:	std    
  423fbe:	adc    al,dh
  423fc0:	lods   al,BYTE PTR ds:[esi]
  423fc1:	sub    BYTE PTR [edx-0x71],0x77
  423fc5:	lods   al,BYTE PTR ds:[esi]
  423fc6:	xor    al,0xf7
  423fc9:	adc    BYTE PTR [edi+0x535153f7],0x94
  423fd0:	mov    dl,0x7
  423fd2:	or     al,0xb2
  423fd4:	mov    edx,0x80feff29
  423fd9:	xchg   edi,eax
  423fda:	std    
  423fdb:	or     DWORD PTR [edx],esp
  423fdd:	inc    BYTE PTR [eax-0x11efa169]
  423fe3:	push   cs
  423fe4:	sub    BYTE PTR [edx-0x80],0x77
  423fe8:	es xor al,0x26
  423fec:	push   ebx
  423fed:	adc    DWORD PTR [ebx-0x4],edx
  423ff0:	mov    dl,0xbe
  423ff2:	or     al,0xb2
  423ff4:	test   BYTE PTR [ecx],ch
  423ff6:	push   DWORD PTR [edx-0x7f950f80]
  423ffc:	xchg   edi,eax
  423ffd:	push   0x53
  423fff:	push   ecx
  424000:	push   ebx
  424001:	xchg   esp,eax
  424002:	mov    dl,0xba
  424004:	sub    DWORD PTR [edx-0x100f3f9],esi
  42400a:	or     DWORD PTR [edx],esp
  42400c:	mov    dl,0xec
  42400e:	ja     0x42400d
  424010:	push   eax
  424011:	ja     0x424010
  424013:	xor    BYTE PTR [edi-0x3],0x80
  424017:	lock scas eax,DWORD PTR es:[edi]
  424019:	arpl   bp,di
  42401b:	or     edx,ebp
  42401d:	(bad)  
  42401e:	or     eax,0x77804d4d
  424023:	push   0xffffff80
  424025:	lock push 0x53
  424028:	adc    DWORD PTR [edx-0x3acf342],esi
  42402e:	mov    dl,0x84
  424030:	sub    edi,edi
  424032:	mov    dl,0x80
  424034:	lock scas eax,DWORD PTR es:[edi]
  424036:	or     DWORD PTR [edx],esp
  424038:	mov    dl,0x80
  42403a:	lock ds push ebx
  42403d:	push   ecx
  42403e:	mov    dl,0xba
  424040:	sub    edi,edi
  424042:	mov    dl,0x80
  424044:	lock ds push ebx
  424047:	adc    DWORD PTR [edx-0x4d00f342],esi
  42404d:	push   eax
  42404e:	ja     0x4240b6
  424050:	xor    BYTE PTR [edi-0x7e],0x80
  424054:	lock adc BYTE PTR [ebx+0x11],0xb2
  424059:	mov    esi,0xb2fc530c
  42405e:	test   BYTE PTR [ecx],ch
  424060:	push   DWORD PTR [edx-0x7f7d0f80]
  424066:	xchg   edi,eax
  424067:	adc    BYTE PTR [ebx+0x51],0xb2
  42406b:	mov    edx,0xb2945329
  424070:	pop    es
  424071:	or     al,0xff
  424073:	(bad)  
  424074:	in     al,dx
  424075:	lock data16 in al,dx
  424078:	std    
  424079:	in     al,dx
  42407a:	lock inc esi
  42407c:	push   eax
  42407d:	lock inc esi
  42407f:	les    ebx,FWORD PTR ds:0x80827780
  424085:	lock adc BYTE PTR [ebx-0x4],0x53
  42408a:	adc    DWORD PTR [edx-0x414dd67c],esi
  424090:	or     al,0xff
  424092:	mov    dl,0xec
  424094:	ja     0x4240dc
  424096:	push   eax
  424097:	ja     0x4240df
  424099:	xor    BYTE PTR [edi-0x7e],0x80
  42409d:	lock adc BYTE PTR [ebx-0x4],0xb2
  4240a2:	test   BYTE PTR [ecx],ch
  4240a4:	push   ebx
  4240a5:	adc    DWORD PTR [edx-0x4d00f342],esi
  4240ab:	xor    al,0x1e
  4240ae:	inc    ebx
  4240af:	std    
  4240b0:	xor    BYTE PTR [edi-0x7e],0x80
  4240b4:	xchg   edi,eax
  4240b5:	adc    BYTE PTR [ebx-0x4],0x53
  4240b9:	xchg   esp,eax
  4240ba:	mov    dl,0x7
  4240bc:	or     al,0xb2
  4240be:	test   BYTE PTR [ecx],ch
  4240c0:	(bad)  
  4240c1:	sti    
  4240c2:	adc    BYTE PTR [edi-0x4ddf6ba],0x63
  4240c9:	mov    dl,0x9
  4240cb:	dec    esp
  4240cc:	xor    cl,BYTE PTR [edx+0x77804d4d]
  4240d2:	out    dx,eax
  4240d3:	dec    ebp
  4240d4:	xlat   BYTE PTR ds:[ebx]
  4240d5:	and    DWORD PTR [ecx],eax
  4240d7:	ja     0x42405f
  4240d9:	dec    ebp
  4240da:	xlat   BYTE PTR ds:[ebx]
  4240db:	out    dx,eax
  4240dc:	or     al,BYTE PTR [eax-0x327f1089]
  4240e2:	jp     0x42411e
  4240e4:	lea    ecx,[ebp+0x7780814d]
  4240ea:	out    dx,eax
  4240eb:	or     ch,0xf7
  4240ee:	cmp    cl,BYTE PTR [ebp+0x4d814d8d]
  4240f4:	xlat   BYTE PTR ds:[ebx]
  4240f5:	mov    cl,BYTE PTR [ebp-0x29]
  4240f8:	jbe    0x424080
  4240fa:	test   eax,0x508d8def
  4240ff:	ja     0x424163
  424101:	xor    BYTE PTR [edi-0x75],0x80
  424105:	lock mov edx,DWORD PTR [ebx+0x74]
  424109:	push   ebx
  42410a:	push   ecx
  42410b:	mov    dl,0xba
  42410d:	sub    DWORD PTR [edx-0x4d00f37a],esi
  424113:	xor    al,0x76
  424116:	arpl   WORD PTR [edx+0x778057d5],si
  42411c:	out    dx,eax
  42411d:	xor    al,0x2e
  424120:	adc    BYTE PTR [edi+0x32cd802e],0x3a
  424127:	lea    ecx,[ebp+0x7e531153]
  42412d:	mov    dl,0xbe
  42412f:	or     al,0xb2
  424131:	clc    
  424132:	sub    edi,edi
  424134:	(bad)  
  424135:	xchg   esi,eax
  424136:	xor    al,0x8b
  424139:	adc    BYTE PTR [edi+0x5311538b],0x7e
  424140:	mov    dl,0xbe
  424142:	or     al,0xb2
  424144:	clc    
  424145:	sub    edi,edi
  424147:	(bad)  
  424148:	xchg   esi,eax
  424149:	dec    ebp
  42414a:	xlat   BYTE PTR ds:[ebx]
  42414b:	jbe    0x42419a
  42414d:	or     bl,BYTE PTR ds:0x70a3a9ab
  424153:	sti    
  424154:	out    dx,eax
  424155:	lea    edx,[edi-0x78127880]
  42415b:	and    eax,0x80328099
  424160:	mov    ds:0x8d8d3a2e,al
  424165:	in     eax,dx
  424166:	pop    ebp
  424167:	lea    ecx,[ecx]
  424169:	(bad)  
  42416b:	cmp    cl,BYTE PTR [ebp+0x9724f8d]
  424171:	(bad)  
  424173:	cmp    cl,BYTE PTR [ebp+0x90b4f8d]
  424179:	jne    0x80cfcf0c
  42417f:	dec    esp
  424180:	adc    BYTE PTR [ebp+0x6a4f8d8d],cl
  424186:	or     DWORD PTR [edi],ecx
  424188:	mov    esp,0xed8d8d8d
  42418d:	cli    
  42418e:	inc    ecx
  42418f:	lea    ecx,[ebp+0xf09718d]
  424195:	add    ecx,DWORD PTR [ebp-0x66a07273]
  42419b:	push   ebp
  42419c:	or     DWORD PTR [edi],ecx
  42419e:	mov    dh,0x8d
  4241a0:	lea    ecx,[ebp+0x3a268e80]
  4241a6:	lea    ecx,[ebp-0x72cd4813]
  4241ac:	cmp    dh,0x43
  4241af:	mov    eax,ds:0x5c09fbec
  4241b4:	or     ah,BYTE PTR [ecx]
  4241b6:	push   eax
  4241b7:	lock stc 
  4241b9:	or     DWORD PTR [ebp+edi*2-0x5f],ebx
  4241bd:	in     al,dx
  4241be:	dec    BYTE PTR [ecx]
  4241c0:	psadbw mm1,QWORD PTR [ebp+0x7d018d8d]
  4241c7:	adc    eax,0x86f05093
  4241cc:	cli    
  4241cd:	dec    ebp
  4241ce:	dec    ebp
  4241cf:	dec    ebp
  4241d0:	jmp    0x42416d
  4241d2:	dec    edi
  4241d3:	outs   dx,BYTE PTR ds:[esi]
  4241d4:	aad    0xeb
  4241d6:	or     BYTE PTR [esi],0xed
  4241d9:	mov    bh,0xc8
  4241db:	lea    esi,[ebx]
  4241dd:	jle    0x4241cb
  4241df:	test   DWORD PTR [ecx],0x9a1e65c
  4241e5:	pop    esp
  4241e6:	scas   al,BYTE PTR es:[edi]
  4241e7:	and    esp,ebp
  4241e9:	push   es
  4241ea:	aad    0xbf
  4241ec:	add    edx,ebx
  4241ee:	adc    eax,0x4f87f050
  4241f3:	outs   dx,BYTE PTR ds:[esi]
  4241f4:	aad    0x92
  4241f6:	xor    BYTE PTR [eax],0xed
  4241f9:	mov    bh,0x8b
  4241fb:	lea    esi,[ebx]
  4241fd:	push   ecx
  4241fe:	in     al,dx
  4241ff:	std    
  424200:	or     DWORD PTR [edi+ebx*8-0x5f],ebx
  424204:	or     DWORD PTR [edi+ebx*4+0x21],ebx
  424208:	in     al,dx
  424209:	push   es
  42420a:	aad    0x43
  42420c:	add    edi,ebx
  42420e:	adc    eax,0x808ae750
  424213:	out    0x8a,eax
  424215:	sub    BYTE PTR [ebx+0x4f],0x4d
  424219:	aad    0x6f
  42421b:	and    BYTE PTR [edi-0x73dac507],0x9
  424222:	pop    esp
  424223:	fbld   TBYTE PTR [ecx+0x219f5c09]
  424229:	dec    ebp
  42422a:	ja     0x4241b7
  42422c:	in     eax,dx
  42422d:	ja     0x4241b9
  42422f:	out    dx,eax
  424230:	in     al,dx
  424231:	push   es
  424232:	pop    edi
  424233:	out    0x8b,eax
  424235:	in     al,0xa4
  424237:	or     DWORD PTR [esi+eiz*8-0x5f],ebx
  42423b:	or     DWORD PTR [esi+ebp*4+0x21],ebx
  42423f:	xor    al,0x87
  424242:	dec    ebp
  424243:	ja     0x42420d
  424245:	in     eax,dx
  424246:	mov    dl,0xef
  424248:	in     al,dx
  424249:	push   es
  42424a:	push   eax
  42424b:	lock xchg DWORD PTR [edi-0x19],ebx
  42424f:	enter  0x2ee4,0x80
  424253:	lock xchg BYTE PTR [ecx],cl
  424256:	pop    esp
  424257:	or     ah,BYTE PTR [ecx+0x21dd5c09]
  42425d:	dec    ebp
  42425e:	ja     0x424292
  424260:	in     eax,dx
  424261:	mov    dl,0xef
  424263:	in     al,dx
  424264:	pushf  
  424265:	push   eax
  424266:	lock xchg BYTE PTR [edi-0x69],bl
  42426a:	xor    cl,BYTE PTR [ecx]
  42426c:	jmp    0xa3ab:0x4d4d4d9a
  424273:	push   ebx
  424274:	push   0x6d
  424276:	les    ecx,FWORD PTR [ebx+edx*2]
  424279:	push   0xffffffa9
  42427b:	jo     0x4242f1
  42427d:	xchg   edi,eax
  42427e:	add    BYTE PTR [edi+0x3a2e5080],0x8d
  424285:	lea    eax,[eax-0x7812de89]
  42428b:	jno    0x424220
  42428d:	push   ebx
  42428e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42428f:	cdq    
  424290:	fwait
  424291:	pop    edi
  424292:	pop    ds
  424293:	or     DWORD PTR [edi],ecx
  424295:	jmp    0xd574:0x638d8d8d
  42429c:	call   0xd81fe000
  4242a1:	das    
  4242a2:	push   ebx
  4242a3:	push   0x6d
  4242a5:	(bad)  
  4242a6:	fld    DWORD PTR [eax+0x77ecdd6d]
  4242ac:	out    dx,eax
  4242ad:	cmp    BYTE PTR [ebp+0x25],0x80
  4242b1:	or     dh,BYTE PTR ds:0x80155280
  4242b7:	fstp   QWORD PTR ds:0xeceff0ec
  4242bd:	xchg   edi,eax
  4242be:	out    dx,eax
  4242bf:	push   eax
  4242c0:	xlat   BYTE PTR ds:[ebx]
  4242c1:	mov    ah,BYTE PTR [ebx+0x4b]
  4242c4:	fucomi st,st(4)
  4242c6:	push   eax
  4242c7:	out    0x8a,eax
  4242c9:	push   eax
  4242ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4242cb:	mov    ebx,DWORD PTR [edi-0x59]
  4242ce:	mov    bl,cl
  4242d0:	mov    dh,0x63
  4242d2:	popf   
  4242d3:	adc    eax,0x5c096fd3
  4242d8:	push   ebp
  4242d9:	scas   al,BYTE PTR es:[edi]
  4242da:	les    ecx,FWORD PTR [eax+eax*4]
  4242dd:	mov    BYTE PTR [ecx],0x55
  4242e0:	mov    es,WORD PTR [eax-0x2ab2b097]
  4242e6:	aas    
  4242e7:	in     al,dx
  4242e8:	out    0xef,eax
  4242ea:	push   eax
  4242eb:	out    0x32,eax
  4242ed:	arpl   WORD PTR [ebx-0x587f8e27],cx
  4242f3:	and    DWORD PTR [eax-0x7d131a5d],eax
  4242f9:	arpl   WORD PTR [esi],ax
  4242fb:	shr    esi,cl
  4242fd:	sbb    BYTE PTR [ecx-0x3c],0xef
  424301:	inc    ebx
  424302:	out    0xef,eax
  424304:	push   eax
  424305:	imul   eax,DWORD PTR [eax+0xb4f32d7],0xa780a1d5
  42430f:	mov    esi,DWORD PTR [ebx+0x50]
  424312:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424313:	mov    esp,DWORD PTR [ebx-0x59]
  424316:	mov    ah,ah
  424318:	pop    esi
  424319:	(bad)  
  42431a:	into   
  42431b:	push   ebx
  42431c:	push   0xffffffab
  42431e:	test   eax,0xeffb70a3
  424323:	lea    edx,[edi-0x78127880]
  424329:	adc    DWORD PTR [ebx+0x24f65e99],0x7750386f
  424333:	mov    bh,BYTE PTR [edi+esi*2-0x75]
  424337:	cmc    
  424338:	and    al,0x6f
  42433a:	cmp    BYTE PTR [eax-0x587f7510],al
  424340:	mov    bl,BYTE PTR [ebx+0x52010de2]
  424346:	cmp    dl,BYTE PTR [ebx+0x51]
  424349:	mov    dl,0xbe
  42434b:	or     al,0xab
  42434d:	push   ebx
  42434e:	lods   al,BYTE PTR ds:[esi]
  42434f:	mov    dl,0xb4
  424351:	sub    edi,edi
  424353:	adc    DWORD PTR [eax-0x10],edx
  424356:	xchg   BYTE PTR [eax-0xf7f7510],al
  42435c:	mov    al,BYTE PTR [eax-0xf7f7510]
  424362:	mov    al,BYTE PTR [eax-0xf7f7510]
  424368:	mov    al,BYTE PTR [eax-0xf7f7510]
  42436e:	mov    al,BYTE PTR [eax-0xf7f7510]
  424374:	mov    bh,BYTE PTR [edi+esi*2+0x32]
  424378:	fsincos 
  42437a:	lods   al,BYTE PTR ds:[esi]
  42437b:	pop    eax
  42437c:	xor    al,0x8a
  42437f:	and    BYTE PTR [edi+0x53ac538a],0x51
  424386:	mov    dl,0xb4
  424388:	sub    DWORD PTR [edx+0x11ff0cbe],esi
  42438e:	and    BYTE PTR [edi+0x2e248021],0x3a
  424395:	lea    ecx,[ebp+0xf09ff63]
  42439b:	sbb    ah,ch
  42439d:	lea    ecx,[ebp-0x7f750f80]
  4243a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4243a4:	mov    dl,BYTE PTR [ebx+0x51]
  4243a7:	push   ebx
  4243a8:	lods   al,BYTE PTR ds:[esi]
  4243a9:	mov    dl,0xbe
  4243ab:	or     al,0xb2
  4243ad:	mov    ah,0x29
  4243af:	call   DWORD PTR [ecx]
  4243b1:	arpl   si,di
  4243b3:	or     DWORD PTR [edi],ecx
  4243b5:	jecxz  0x4243a3
  4243b7:	lea    ecx,[ebp-0x72327080]
  4243bd:	lea    ecx,[ebp-0x7f756880]
  4243c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4243c4:	mov    dl,BYTE PTR [ebx+0x7e]
  4243c7:	push   ebx
  4243c8:	lods   al,BYTE PTR ds:[esi]
  4243c9:	mov    dl,0x7
  4243cb:	or     al,0xb2
  4243cd:	mov    ah,0x29
  4243cf:	call   DWORD PTR [ebx+eiz*2-0x6cf0f602]
  4243d6:	in     al,dx
  4243d7:	lea    ecx,[ebp+0x50eff0ec]
  4243dd:	lock test DWORD PTR [eax-0x7f81ac09],0xb2ac5382
  4243e8:	pop    es
  4243e9:	or     al,0xb2
  4243eb:	mov    ah,0x29
  4243ed:	call   DWORD PTR [eax+edx*2-0x687fcd69]
  4243f4:	xor    ah,BYTE PTR [ebx-0x9]
  4243f7:	aad    0x27
  4243f9:	xor    BYTE PTR [edi-0x76],0x80
  4243fd:	xchg   edi,eax
  4243fe:	mov    dl,BYTE PTR [ebx-0x64]
  424401:	push   ebx
  424402:	cld    
  424403:	mov    dl,0xf8
  424405:	sub    DWORD PTR [edx-0x400f37a],esi
  42440b:	adc    BYTE PTR [edi+0x1572c332],0x5f
  424412:	out    dx,al
  424413:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424414:	xlat   BYTE PTR ds:[ebx]
  424415:	rol    BYTE PTR [eax-0x687f7589],0x8a
  42441c:	push   ebx
  42441d:	pushf  
  42441e:	push   ebx
  42441f:	cld    
  424420:	mov    dl,0xf8
  424422:	sub    DWORD PTR [edx-0x400f37a],esi
  424428:	adc    BYTE PTR [edi+0x1572c332],0x5f
  42442f:	jne    0x4243d7
  424431:	jno    0x42443c
  424433:	push   gs
  424435:	or     al,0x8d
  424437:	lea    eax,[eax+0x77808a77]
  42443d:	mov    al,BYTE PTR [eax+0x77808aa7]
  424443:	mov    dl,BYTE PTR [ebx+0x7c]
  424446:	push   ebx
  424447:	add    al,0xb2
  424449:	test   BYTE PTR [ecx],ch
  42444b:	mov    dl,0xc4
  42444d:	or     al,0xff
  42444f:	add    BYTE PTR [eax+0x6ac33277],0x15
  424456:	in     al,dx
  424457:	mov    dl,0x80
  424459:	jge    0x4244cc
  42445b:	in     al,dx
  42445c:	lock out dx,eax
  42445e:	push   eax
  42445f:	lock test BYTE PTR [eax-0x687f7510],al
  424466:	mov    dl,BYTE PTR [ebx+0x51]
  424469:	push   ebx
  42446a:	pushf  
  42446b:	mov    dl,0xbe
  42446d:	or     al,0xb2
  42446f:	clc    
  424470:	sub    edi,edi
  424472:	inc    BYTE PTR [eax-0xfaf7569]
  424478:	jp     0x4243fa
  42447a:	out    dx,eax
  42447b:	push   eax
  42447c:	lock stc 
  42447e:	xor    al,0x8a
  424481:	push   ebx
  424482:	jle    0x4244d7
  424484:	sub    dh,BYTE PTR [edx+0x7b229ba]
  42448a:	or     al,0xff
  42448c:	mov    dh,0x80
  42448e:	lock stc 
  424490:	arpl   si,di
  424492:	aad    0x6f
  424494:	in     al,dx
  424495:	lock out dx,eax
  424497:	push   eax
  424498:	lock jp 0x42441b
  42449b:	lock mov al,BYTE PTR [eax+0x51538a97]
  4244a2:	push   ebx
  4244a3:	pushf  
  4244a4:	mov    dl,0xbe
  4244a6:	or     al,0xb2
  4244a8:	clc    
  4244a9:	sub    edi,edi
  4244ab:	(bad)  
  4244ac:	in     al,dx
  4244ad:	jge    0x4244d0
  4244af:	jl     0x424528
  4244b1:	xor    cl,0x24
  4244b4:	outs   dx,DWORD PTR ds:[esi]
  4244b5:	cmp    ah,ch
  4244b7:	lock out dx,eax
  4244b9:	push   eax
  4244ba:	lock xchg esp,eax
  4244bd:	in     al,dx
  4244be:	xor    al,0x87
  4244c1:	xor    BYTE PTR [edi+0x21],0x80
  4244c5:	int    0x32
  4244c7:	cmp    cl,BYTE PTR [ebp+0x714d968d]
  4244cd:	xor    BYTE PTR [edi+0x21],0x4d
  4244d1:	xlat   BYTE PTR ds:[ebx]
  4244d2:	xchg   DWORD PTR [eax-0x72c5cd33],eax
  4244d8:	lea    ecx,[ebp+0xa]
  4244db:	and    DWORD PTR [edi+esi*2-0x7d],edi
  4244df:	add    dl,ch
  4244e1:	cs jne 0x424560
  4244e4:	ja     0x424469
  4244e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4244e7:	push   ss
  4244e8:	outs   dx,DWORD PTR ds:[esi]
  4244e9:	cmp    BYTE PTR [eax-0x687f7510],al
  4244ef:	mov    dl,BYTE PTR [ebx+0x51]
  4244f2:	push   ebx
  4244f3:	pushf  
  4244f4:	mov    dl,0xbe
  4244f6:	or     al,0xb2
  4244f8:	clc    
  4244f9:	sub    edi,edi
  4244fb:	(bad)  
  4244fc:	push   eax
  4244fd:	ja     0x4244f8
  4244ff:	arpl   bp,di
  424501:	xlat   BYTE PTR ds:[ebx]
  424502:	pop    ecx
  424503:	xor    BYTE PTR [edi-0x75],0x80
  424507:	lock mov edx,DWORD PTR [ebx-0x4]
  42450b:	push   ebx
  42450c:	sub    dh,BYTE PTR [edx-0x794dd646]
  424512:	or     al,0xff
  424514:	mov    dl,0x80
  424516:	lock add DWORD PTR [eax-0x63ac7c69],0x53
  42451e:	push   ecx
  42451f:	mov    dl,0xf8
  424521:	sub    esp,ebp
  424523:	add    BYTE PTR [eax-0x327fde89],0x32
  42452a:	cmp    cl,BYTE PTR [ebp+0xcbeb28d]
  424530:	push   DWORD PTR [esi-0x556bddf7]
  424536:	dec    ebp
  424537:	or     dh,BYTE PTR ds:0x808a7780
  42453d:	lock mov dl,BYTE PTR [ebx-0x4]
  424541:	push   ebx
  424542:	sub    dh,BYTE PTR [edx-0x454df37a]
  424548:	sub    edi,edi
  42454a:	mov    dl,0x63
  42454c:	ja     0x424547
  42454e:	xlat   BYTE PTR ds:[ebx]
  42454f:	mov    al,0x80
  424551:	ja     0x4244d5
  424553:	xor    al,0x82
  424556:	push   ebx
  424557:	sub    dl,BYTE PTR [ebx-0x4]
  42455a:	mov    dl,0x86
  42455c:	or     al,0xb2
  42455e:	mov    edx,0x63fdff29
  424563:	mov    al,ds:0x4d954c09
  424568:	dec    ebp
  424569:	dec    ebp
  42456a:	xor    BYTE PTR [edi-0x76],0x80
  42456e:	lock mov dl,BYTE PTR [ebx-0x4]
  424572:	push   ebx
  424573:	sub    dh,BYTE PTR [edx-0x454df37a]
  424579:	sub    edi,edi
  42457b:	mov    dl,0x63
  42457d:	ja     0x424578
  42457f:	xlat   BYTE PTR ds:[ebx]
  424580:	mov    al,0x80
  424582:	ja     0x42450f
  424584:	xor    al,0x8b
  424587:	push   ebx
  424588:	cld    
  424589:	push   ebx
  42458a:	sub    dh,BYTE PTR [edx-0x454df37a]
  424590:	sub    edi,edi
  424592:	mov    dl,0x3a
  424594:	ja     0x42451c
  424596:	mov    esi,0x8d8d3aae
  42459b:	jl     0x424614
  42459d:	xchg   DWORD PTR [ecx+0x7c66f7ea],esi
  4245a3:	ja     0x42456d
  4245a5:	fld    DWORD PTR [ebp-0x587f12e3]
  4245ab:	mov    al,BYTE PTR [eax+0x4538a77]
  4245b1:	push   ebx
  4245b2:	jl     0x424566
  4245b4:	les    ecx,FWORD PTR [edx+esi*4]
  4245b7:	test   BYTE PTR [ecx],ch
  4245b9:	inc    DWORD PTR [edx-0x72c5e442]
  4245bf:	lea    eax,[eax-0xf7f7589]
  4245c5:	mov    dl,BYTE PTR [ebx-0x4]
  4245c8:	push   ebx
  4245c9:	sub    dh,BYTE PTR [edx-0x454df37a]
  4245cf:	sub    edi,edi
  4245d1:	mov    dl,0x50
  4245d3:	ja     0x42455c
  4245d5:	xor    BYTE PTR [edi-0x76],0x80
  4245d9:	lock mov dl,BYTE PTR [ebx-0x4]
  4245dd:	push   ebx
  4245de:	sub    dh,BYTE PTR [edx-0x454df37a]
  4245e4:	sub    edi,edi
  4245e6:	mov    dl,0x50
  4245e8:	ja     0x4245b2
  4245ea:	xor    al,0x8a
  4245ed:	xor    BYTE PTR [edi-0x76],0x53
  4245f1:	push   ecx
  4245f2:	push   ebx
  4245f3:	jl     0x4245a7
  4245f5:	test   BYTE PTR [ecx],ch
  4245f7:	mov    dl,0xbe
  4245f9:	or     al,0xff
  4245fb:	std    
  4245fc:	xor    BYTE PTR [edi+0x7a],0x63
  424600:	std    
  424601:	aad    0x6f
  424603:	sub    dh,0x1e
  424606:	push   eax
  424607:	ja     0x424590
  424609:	xor    BYTE PTR [edi-0x7c],0x80
  42460d:	out    dx,al
  42460e:	push   ds
  42460f:	push   eax
  424610:	ja     0x4245da
  424612:	xor    BYTE PTR [edi-0x76],0x80
  424616:	lock mov dl,BYTE PTR [ebx-0x4]
  42461a:	push   ebx
  42461b:	sub    dh,BYTE PTR [edx-0x794dd646]
  424621:	or     al,0xff
  424623:	mov    dl,0x80
  424625:	lock xchg DWORD PTR [ebx-0x4e],esp
  424629:	aad    0x55
  42462b:	xor    BYTE PTR [edi-0x76],0x80
  42462f:	lock mov dl,BYTE PTR [ebx+0x2a]
  424633:	push   ebx
  424634:	cld    
  424635:	mov    dl,0xba
  424637:	sub    DWORD PTR [edx-0x4d00f37a],esi
  42463d:	xor    al,0x87
  424640:	mov    dl,0xbe
  424642:	sub    esp,DWORD PTR [ebx-0x4e]
  424645:	aad    0x1d
  424647:	xor    al,0x87
  42464a:	xor    BYTE PTR [edi+0x21],0x80
  42464e:	int    0x32
  424650:	cmp    cl,BYTE PTR [ebp+0x705c098d]
  424656:	xchg   esi,eax
  424657:	dec    ebp
  424658:	xlat   BYTE PTR ds:[ebx]
  424659:	stc    
  42465a:	dec    ebp
  42465b:	or     ch,bh
  42465d:	les    ebx,FWORD PTR [edi]
  42465f:	xor    BYTE PTR [edi-0x38],0xec
  424663:	ja     0x424654
  424665:	xor    al,0x21
  424668:	adc    BYTE PTR [eax+0x32],0x3a
  42466c:	lea    ecx,[ebp+0xa0c6aed]
  424672:	dec    ebp
  424673:	xlat   BYTE PTR ds:[ebx]
  424674:	stc    
  424675:	dec    ebp
  424676:	xchg   esi,eax
  424677:	out    dx,eax
  424678:	push   eax
  424679:	ja     0x424643
  42467b:	xor    BYTE PTR [edi-0x76],0x80
  42467f:	lock mov dl,BYTE PTR [ebx-0x4]
  424683:	push   ebx
  424684:	sub    dh,BYTE PTR [edx-0x794dd646]
  42468a:	or     al,0xff
  42468c:	mov    dl,0x80
  42468e:	lock enter 0xb263,0x80
  424693:	ja     0x424620
  424695:	xor    al,0x8b
  424698:	xlat   BYTE PTR ds:[ebx]
  424699:	push   cs
  42469a:	push   ebx
  42469b:	cld    
  42469c:	push   ebx
  42469d:	sub    dh,BYTE PTR [edx-0x454df37a]
  4246a3:	sub    edi,edi
  4246a5:	mov    dl,0x3a
  4246a7:	ja     0x42462f
  4246a9:	les    ebx,FWORD PTR ds:0xfc532a53
  4246af:	mov    dl,0xba
  4246b1:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4246b7:	xor    al,0xc8
  4246ba:	or     DWORD PTR [edx],esp
  4246bc:	mov    dl,0x80
  4246be:	lock test BYTE PTR [eax-0x12],dl
  4246c2:	and    BYTE PTR [eax-0xf7f7489],al
  4246c8:	mov    edx,DWORD PTR [ebx-0x4]
  4246cb:	push   ebx
  4246cc:	sub    dh,BYTE PTR [edx-0x454df37a]
  4246d2:	sub    edi,edi
  4246d4:	mov    dl,0xec
  4246d6:	add    BYTE PTR [eax-0xf7f7589],0x8a
  4246dd:	push   ebx
  4246de:	sub    dl,BYTE PTR [ebx-0x4]
  4246e1:	mov    dl,0xba
  4246e3:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4246e9:	xor    al,0x84
  4246ec:	pop    edi
  4246ed:	out    dx,al
  4246ee:	and    BYTE PTR [ecx],cl
  4246f0:	dec    edi
  4246f1:	adc    DWORD PTR ds:0x77804d4d,ecx
  4246f7:	xor    al,BYTE PTR [eax-0x4d92cd10]
  4246fd:	xchg   BYTE PTR [ecx],ch
  4246ff:	add    DWORD PTR [ecx],esp
  424701:	add    esi,ebp
  424703:	lea    ecx,[ebp-0x7f4d0073]
  424709:	lock not DWORD PTR [edi-0xa]
  42470d:	and    al,0x6f
  42470f:	cmp    BYTE PTR [esi+0x4d4d8afe],bh
  424715:	xor    BYTE PTR [edi-0x76],0x80
  424719:	lock mov dl,BYTE PTR [ebx-0x4]
  42471d:	push   ebx
  42471e:	sub    dh,BYTE PTR [edx-0x454df37a]
  424724:	sub    edi,edi
  424726:	mov    dl,0x5f
  424728:	ja     0x4246b0
  42472a:	xlat   BYTE PTR ds:[ebx]
  42472b:	out    dx,eax
  42472c:	xor    BYTE PTR [edi-0x75],0x80
  424730:	lock mov eax,esp
  424733:	outs   dx,DWORD PTR ds:[esi]
  424734:	xor    BYTE PTR [edi-0x76],0x80
  424738:	lock mov dl,BYTE PTR [ebx+0x2a]
  42473c:	push   ebx
  42473d:	cld    
  42473e:	stos   DWORD PTR es:[edi],eax
  42473f:	mov    dl,0xba
  424741:	sub    DWORD PTR [edx-0x56f37a],esi
  424747:	mov    dl,0xa3
  424749:	jo     0x424746
  42474b:	out    dx,eax
  42474c:	lea    edx,[edi-0x78127880]
  424752:	xor    eax,0xf68a777c
  424757:	and    al,0x6f
  424759:	cmp    BYTE PTR [edi+esi*2-0x7c],bh
  42475d:	cmc    
  42475e:	and    al,0x6f
  424760:	cmp    BYTE PTR [eax+0x77502177],al
  424766:	and    DWORD PTR [ecx+0x77806a80],ebx
  42476c:	mov    al,BYTE PTR [eax+0xde28a97]
  424772:	pusha  
  424773:	and    ah,BYTE PTR [edi+ebp*2]
  424776:	cmp    BYTE PTR [ebx-0x4e],dl
  424779:	test   eax,0xf8b27e53
  42477e:	sub    DWORD PTR [edx-0x400f37a],esi
  424784:	adc    BYTE PTR [edi+0x9f763ef],0xf
  42478b:	loopne 0x4247c7
  42478d:	lea    ecx,[ebp-0x7f108880]
  424793:	xchg   edi,eax
  424794:	out    dx,eax
  424795:	in     al,dx
  424796:	or     ah,BYTE PTR [ebp-0x65]
  424799:	push   eax
  42479a:	xchg   edi,eax
  42479b:	enter  0x777c,0x8b
  42479f:	icebp  
  4247a0:	and    al,0x6f
  4247a2:	cmp    BYTE PTR [eax-0x687f7489],al
  4247a8:	mov    edx,DWORD PTR [ebx+0x7e]
  4247ab:	mov    dl,0xf8
  4247ad:	sub    DWORD PTR [ebx-0x4e],edx
  4247b0:	mov    dl,0x86
  4247b2:	or     al,0xff
  4247b4:	sti    
  4247b5:	adc    BYTE PTR [edi-0x75187f76],0x53
  4247bc:	mov    dh,0x53
  4247be:	or     eax,0xb229bcb2
  4247c3:	pop    es
  4247c4:	or     al,0xff
  4247c6:	pushf  
  4247c7:	and    bh,0xc8
  4247ca:	pop    edi
  4247cb:	xchg   ebp,eax
  4247cc:	jl     0x4247ab
  4247ce:	or     DWORD PTR [edi],ecx
  4247d0:	mov    bl,0x3a
  4247d2:	lea    ecx,[ebp-0x7f376880]
  4247d8:	ja     0x4247c9
  4247da:	in     al,dx
  4247db:	jmp    0x9780:0x8d8d8d2e
  4247e2:	out    dx,eax
  4247e3:	and    bh,0xc8
  4247e6:	inc    ebx
  4247e7:	fwait
  4247e8:	push   ebp
  4247e9:	and    bh,0x8a
  4247ec:	xchg   ebx,eax
  4247ed:	and    BYTE PTR [edi+0x53cb538a],0x4
  4247f4:	mov    dl,0x61
  4247f6:	or     al,0xb2
  4247f8:	mov    ah,0x29
  4247fa:	inc    DWORD PTR [esi]
  4247fc:	push   eax
  4247fd:	xchg   edi,eax
  4247fe:	and    DWORD PTR [ebx-0x64],0x9
  424802:	jns    0x80cfd542
  424808:	xchg   edi,eax
  424809:	mov    al,BYTE PTR [eax-0x49ac7519]
  42480f:	push   ebx
  424810:	or     eax,0xb20c07b2
  424815:	mov    esp,0x509cff29
  42481a:	xchg   edi,eax
  42481b:	xor    bh,BYTE PTR [edi+esi*2+0x21]
  42481f:	repz and al,0x6f
  424822:	cmp    BYTE PTR [eax-0x187f7569],al
  424828:	mov    dl,BYTE PTR [ebx-0x4a]
  42482b:	push   ebx
  42482c:	or     eax,0xb20c07b2
  424831:	mov    esp,0xbe9cff29
  424836:	add    eax,0x808d8d8d
  42483b:	xchg   edi,eax
  42483c:	mov    al,BYTE PTR [eax+0xbed8ad7]
  424842:	or     eax,0x2b2b653
  424847:	sub    DWORD PTR [edx+0x7eff0c07],esi
  42484d:	add    ebx,edx
  42484f:	mov    esi,DWORD PTR [esi+0x97e6388]
  424855:	in     eax,dx
  424856:	jmp    0x43cfd5e8
  42485b:	ret    0xe501
  42485e:	or     ch,bh
  424860:	push   eax
  424861:	xlat   BYTE PTR ds:[ebx]
  424862:	stc    
  424863:	or     DWORD PTR [ebx+ebx*1-0x5e],ebx
  424867:	clc    
  424868:	dec    ebp
  424869:	or     DWORD PTR [ebp-0x7868af73],ecx
  42486f:	adc    BYTE PTR [edi-0x7f8e1379],0xd7
  424876:	xchg   esp,ebp
  424878:	xor    DWORD PTR [edx+0x2b22907],0x9c2ff0c
  424882:	pop    esp
  424883:	sbb    esi,DWORD PTR [edx+0xba22107]
  424889:	mul    BYTE PTR [edi+ebp*2]
  42488c:	cmp    BYTE PTR [eax-0x29],dl
  42488f:	xchg   DWORD PTR [eax-0x69],edx
  424892:	xchg   BYTE PTR [eax-0x287f7869],al
  424898:	xchg   DWORD PTR [ebx-0x4a],edx
  42489b:	in     eax,dx
  42489c:	or     ecx,DWORD PTR ds:0xb20c07b2
  4248a2:	add    ch,BYTE PTR [ecx]
  4248a4:	(bad)  
  4248a5:	jle    0x424893
  4248a7:	xchg   edi,eax
  4248a8:	out    dx,eax
  4248a9:	push   eax
  4248aa:	xchg   edi,eax
  4248ab:	xchg   DWORD PTR [eax-0x287fde69],eax
  4248b1:	and    DWORD PTR [ebx-0x4a],edx
  4248b4:	in     eax,dx
  4248b5:	or     ecx,DWORD PTR ds:0xb22902b2
  4248bb:	pop    es
  4248bc:	or     al,0xff
  4248be:	jle    0x424840
  4248c0:	xlat   BYTE PTR ds:[ebx]
  4248c1:	xchg   BYTE PTR [ebx-0x3e],ah
  4248c4:	xlat   BYTE PTR ds:[ebx]
  4248c5:	rol    BYTE PTR [eax-0x287fde69],0x21
  4248cc:	push   ebx
  4248cd:	mov    dh,0xed
  4248cf:	or     ecx,DWORD PTR ds:0xb22902b2
  4248d5:	pop    es
  4248d6:	or     al,0xff
  4248d8:	jle    0x42485a
  4248da:	xlat   BYTE PTR ds:[ebx]
  4248db:	xchg   BYTE PTR [ebx-0x3e],ah
  4248de:	xlat   BYTE PTR ds:[ebx]
  4248df:	out    dx,eax
  4248e0:	adc    BYTE PTR [edi-0x7c287f79],0x3a
  4248e7:	aam    0xed
  4248e9:	jl     0x4248f7
  4248eb:	dec    ebp
  4248ec:	lock stc 
  4248ee:	or     DWORD PTR [edi+0x12],ecx
  4248f1:	dec    ebp
  4248f2:	dec    ebp
  4248f3:	dec    ebp
  4248f4:	cmp    ah,BYTE PTR [edi-0x74687fce]
  4248fa:	adc    bh,0x8b
  4248fd:	push   ebx
  4248fe:	mov    dh,0xed
  424900:	or     ecx,DWORD PTR ds:0xb22902b2
  424906:	pop    es
  424907:	or     al,0xff
  424909:	jle    0x42488b
  42490b:	xlat   BYTE PTR ds:[ebx]
  42490c:	xor    al,BYTE PTR [eax-0x2a9c3719]
  424912:	pushf  
  424913:	in     eax,0xd3
  424915:	sub    eax,0x808a9780
  42491a:	xlat   BYTE PTR ds:[ebx]
  42491b:	mov    dl,BYTE PTR [ebx-0x4a]
  42491e:	in     eax,dx
  42491f:	or     ecx,DWORD PTR ds:0xb20c07b2
  424925:	add    ch,BYTE PTR [ecx]
  424927:	in     al,dx
  424928:	je     0x424929
  42492a:	jle    0x4248ac
  42492c:	popf   
  42492d:	out    dx,al
  42492e:	arpl   WORD PTR [ebx],ax
  424930:	or     DWORD PTR [edi-0x12],ecx
  424933:	dec    ebp
  424934:	dec    ebp
  424935:	dec    ebp
  424936:	mov    ds:0x53847780,eax
  42493b:	mov    dl,0x80
  42493d:	lock test ch,ch
  424940:	add    eax,0xa6c4ab0d
  424945:	xor    BYTE PTR [edi-0x76],0x53
  424949:	mov    dl,0x80
  42494b:	lock mov dl,BYTE PTR [ebx+0x51]
  42494f:	mov    dl,0xba
  424951:	sub    DWORD PTR [edx-0x4d00f37a],esi
  424957:	test   eax,0x8deffb70
  42495c:	xchg   edi,eax
  42495d:	add    BYTE PTR [edi-0x7285785e],0x8d
  424964:	lea    edi,[edi+esi*2-0x76]
  424968:	mul    BYTE PTR [edi+ebp*2]
  42496b:	cmp    BYTE PTR [edi+esi*2-0x75],bh
  42496f:	cmc    
  424970:	and    al,0x6f
  424972:	cmp    BYTE PTR [eax-0xf7f7589],al
  424978:	mov    bl,BYTE PTR [ecx-0x5f21d65]
  42497e:	and    ah,BYTE PTR [edi+ebp*2]
  424981:	cmp    BYTE PTR [ebx-0x4],dl
  424984:	mov    dl,0x86
  424986:	or     al,0xae
  424988:	push   ebx
  424989:	(bad)  
  42498a:	mov    dl,0xba
  42498c:	sub    edi,edi
  42498e:	mov    dl,0x50
  424990:	ja     0x424916
  424992:	xor    BYTE PTR [edi-0x76],0x80
  424996:	lock mov dl,BYTE PTR [ebx-0x4]
  42499a:	mov    dl,0x86
  42499c:	or     al,0x53
  42499e:	(bad)  
  42499f:	mov    dl,0xba
  4249a1:	sub    edi,edi
  4249a3:	mov    dl,0x50
  4249a5:	ja     0x42499e
  4249a7:	and    bh,0x25
  4249aa:	xor    BYTE PTR [edi-0x79],0x80
  4249ae:	lock xchg DWORD PTR [ebx-0x4e],edx
  4249b2:	push   eax
  4249b3:	ja     0x42493c
  4249b5:	mov    ds:0xa3f68777,al
  4249ba:	outs   dx,DWORD PTR ds:[esi]
  4249bb:	cmp    BYTE PTR [eax-0xf7f3789],al
  4249c1:	enter  0xb253,0x50
  4249c5:	ja     0x42498f
  4249c7:	mov    ds:0xe9f6c877,al
  4249cc:	outs   dx,DWORD PTR ds:[esi]
  4249cd:	cmp    BYTE PTR [eax-0xf7fcd89],al
  4249d3:	xor    dl,BYTE PTR [ebx-0x4e]
  4249d6:	push   eax
  4249d7:	ja     0x424a0b
  4249d9:	mov    ds:0x24fa3277,al
  4249de:	outs   dx,DWORD PTR ds:[esi]
  4249df:	cmp    BYTE PTR [eax-0xf7f0689],al
  4249e5:	stc    
  4249e6:	push   ebx
  4249e7:	mov    dl,0x50
  4249e9:	ja     0x4249e4
  4249eb:	mov    ds:0x24f6f977,al
  4249f0:	out    dx,al
  4249f1:	cmp    BYTE PTR [edi+esi*2+0x25],bh
  4249f5:	jmp    0x807ad6bc
  4249fa:	ja     0x4249eb
  4249fc:	dec    edi
  4249fd:	push   0x9
  4249ff:	movd   mm5,DWORD PTR [edi]
  424a02:	lea    ecx,[ebp+0x4f217780]
  424a08:	push   0x9
  424a0a:	(bad)  
  424a0c:	das    
  424a0d:	lea    ecx,[ebp+0x4f1d7780]
  424a13:	push   0x9
  424a15:	mov    db5,edi
  424a18:	lea    ecx,[ebp-0x7fda8880]
  424a1e:	ja     0x424a45
  424a20:	xor    al,0xef
  424a23:	mov    dl,0x86
  424a25:	or     al,0x57
  424a27:	(bad)  
  424a28:	hlt    
  424a29:	lea    ecx,[ebp+0x93a5fb9]
  424a2f:	dec    edi
  424a30:	cmp    ch,BYTE PTR [edi]
  424a32:	lea    ecx,[ebp-0x7f758880]
  424a38:	lock mov dl,BYTE PTR [ebx-0x4]
  424a3c:	mov    dl,0x86
  424a3e:	or     al,0x53
  424a40:	(bad)  
  424a41:	mov    dl,0xba
  424a43:	sub    edi,edi
  424a45:	mov    dl,0x50
  424a47:	ja     0x424a40
  424a49:	xor    BYTE PTR [edi-0x76],0x80
  424a4d:	ja     0x4249d9
  424a4f:	xor    BYTE PTR [edi-0x11],0x80
  424a53:	lock out dx,eax
  424a55:	in     al,dx
  424a56:	jge    0x424abd
  424a58:	adc    BYTE PTR [edx+0x25f0500a],0x4f
  424a5f:	push   0x9
  424a61:	cvtpi2ps xmm5,mm6
  424a64:	lea    ecx,[ebp-0x9858884]
  424a6a:	and    al,0x79
  424a6c:	cmp    BYTE PTR [eax-0x7f6c8589],al
  424a72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424a73:	jp     0x424ac8
  424a75:	cld    
  424a76:	push   ebx
  424a77:	add    esi,DWORD PTR [edx-0x4b4df37a]
  424a7d:	sub    edi,edi
  424a7f:	adc    BYTE PTR [eax-0x59],0x7a
  424a83:	xor    BYTE PTR [edi-0x76],0x80
  424a87:	ja     0x424a13
  424a89:	or     dh,0x2e
  424a8c:	cmp    cl,BYTE PTR [ebp-0x7f8e7f73]
  424a92:	stos   BYTE PTR es:[edi],al
  424a93:	gs in  al,dx
  424a95:	jno    0x424a17
  424a97:	ja     0x424a23
  424a99:	xor    BYTE PTR [edi-0x76],0x80
  424a9d:	into   
  424a9e:	cmp    cl,BYTE PTR es:[ebp+0x501d808d]
  424aa5:	xchg   edi,eax
  424aa6:	and    DWORD PTR [ebx-0x5c],esp
  424aa9:	xlat   BYTE PTR ds:[ebx]
  424aaa:	imul   eax,DWORD PTR [eax-0x317f3710],0x32
  424ab1:	cmp    cl,BYTE PTR [ebp-0x7b68fe73]
  424ab7:	stos   BYTE PTR es:[edi],al
  424ab8:	adc    BYTE PTR [edi-0x12aeac38],0xc2
  424abf:	or     eax,0xb20cbeb2
  424ac4:	clc    
  424ac5:	sub    edi,edi
  424ac7:	mov    dh,0x80
  424ac9:	lock and DWORD PTR [edx-0x6cf561b3],ebp
  424ad0:	dec    ebp
  424ad1:	or     ah,BYTE PTR ds:0x8021f080
  424ad7:	xchg   edx,eax
  424ad8:	xchg   ebp,eax
  424ad9:	cmp    BYTE PTR [edi+0xa],0x43
  424add:	std    
  424ade:	xchg   esi,eax
  424adf:	in     al,dx
  424ae0:	je     0x424aec
  424ae2:	xchg   BYTE PTR [ecx-0x7f727291],ah
  424ae8:	lock and eax,0x3a36ce80
  424aee:	lea    ecx,[ebp-0x61b2e2b0]
  424af4:	xchg   ebp,eax
  424af5:	dec    ebp
  424af6:	xlat   BYTE PTR ds:[ebx]
  424af7:	out    dx,eax
  424af8:	xchg   ebx,eax
  424af9:	xchg   BYTE PTR [edi-0x7f727212],ch
  424aff:	xchg   ebx,eax
  424b00:	gs in  al,dx
  424b02:	xchg   esp,eax
  424b03:	or     DWORD PTR [eax+ebx*8+0x15],ebx
  424b07:	add    DWORD PTR [ebp+0x71],esi
  424b0a:	sbb    eax,0x801d7750
  424b0f:	ja     0x424a9b
  424b11:	xor    al,0x8a
  424b14:	push   ebx
  424b15:	cld    
  424b16:	in     eax,dx
  424b17:	add    eax,0x29bab20d
  424b1c:	mov    dl,0x86
  424b1e:	or     al,0xff
  424b20:	mov    dl,0x9
  424b22:	pop    esp
  424b23:	fisubr DWORD PTR [edi+0x50]
  424b26:	xchg   edi,eax
  424b27:	and    eax,0xf09fd63
  424b2c:	mov    esp,0x808d8d8d
  424b31:	ja     0x424abd
  424b33:	xor    al,0x8a
  424b36:	push   ebx
  424b37:	cld    
  424b38:	in     eax,dx
  424b39:	add    eax,0x29bab20d
  424b3e:	mov    dl,0x86
  424b40:	or     al,0xff
  424b42:	mov    dl,0x50
  424b44:	ja     0x424ac9
  424b46:	xor    BYTE PTR [edi-0x75],0x80
  424b4a:	lock mov ebp,ebp
  424b4d:	add    eax,0xb2fc530d
  424b52:	mov    edx,0xc86b229
  424b57:	push   DWORD PTR [edx+0x6fda5c09]
  424b5d:	inc    ebx
  424b5e:	std    
  424b5f:	pop    edi
  424b60:	lock or DWORD PTR [ecx],0xffffffce
  424b64:	and    cl,BYTE PTR [ebp-0xf7f7273]
  424b6a:	sbb    eax,0x50efb2ed
  424b6f:	lock sbb eax,0xf080ecc4
  424b75:	sbb    eax,0x805dd880
  424b7a:	push   cs
  424b7b:	push   eax
  424b7c:	ja     0x424b00
  424b7e:	jge    0x424bcf
  424b80:	not    ebp
  424b82:	xor    BYTE PTR [ebx-0x9],cl
  424b85:	xor    edi,ebx
  424b87:	in     al,dx
  424b88:	ja     0x424b0c
  424b8a:	les    ecx,FWORD PTR [eax+eax*4]
  424b8d:	sti    
  424b8e:	or     al,BYTE PTR [eax+0x74ecee92]
  424b94:	or     al,BYTE PTR [esi-0x7272d05d]
  424b9a:	xor    BYTE PTR [edi+0x1d],0x80
  424b9e:	jge    0x424b8f
  424ba0:	push   eax
  424ba1:	lock add BYTE PTR [eax-0x687f7510],0x8a
  424ba9:	push   ebx
  424baa:	push   ecx
  424bab:	in     eax,dx
  424bac:	ret    0xb20d
  424baf:	mov    esi,0x29f8b20c
  424bb4:	(bad)  
  424bb5:	(bad)  
  424bb6:	pop    edi
  424bb7:	lock adc ch,0x1d
  424bbb:	xor    al,0xef
  424bbe:	in     al,dx
  424bbf:	jge    0x424be2
  424bc1:	dec    ebp
  424bc2:	xlat   BYTE PTR ds:[ebx]
  424bc3:	add    BYTE PTR [eax-0x13691193],0x74
  424bca:	or     al,BYTE PTR [esi-0x7272137b]
  424bd0:	xor    BYTE PTR [edi+0x1d],0x80
  424bd4:	lock mov eax,DWORD PTR [eax+0x51538b97]
  424bdb:	mov    dl,0xbe
  424bdd:	or     al,0xed
  424bdf:	ret    0xed0d
  424be2:	push   0x3d
  424be4:	mov    dl,0xf8
  424be6:	sub    edi,edi
  424be8:	(bad)  
  424be9:	cmp    dh,al
  424beb:	add    DWORD PTR [eax+0x77502597],0x1d
  424bf2:	xor    BYTE PTR [edi-0x75],0x80
  424bf6:	lock mov ebp,ebp
  424bf9:	add    eax,0xb2fc530d
  424bfe:	mov    edx,0xc86b229
  424c03:	push   DWORD PTR [edx+0x925f080]
  424c09:	pop    esp
  424c0a:	jg     0x424c7b
  424c0c:	inc    ebx
  424c0d:	std    
  424c0e:	pop    edi
  424c0f:	lock or DWORD PTR [ecx],0x4c
  424c13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424c14:	dec    ebp
  424c15:	dec    ebp
  424c16:	dec    ebp
  424c17:	or     dh,0x26
  424c1a:	cmp    cl,BYTE PTR [ebp-0x28e29c73]
  424c20:	push   ebx
  424c21:	xor    al,0x32
  424c24:	or     dh,0x32
  424c27:	cmp    cl,BYTE PTR [ebp-0x7b68fe73]
  424c2d:	stos   BYTE PTR es:[edi],al
  424c2e:	adc    BYTE PTR [edi-0x12aeacce],0xc2
  424c35:	or     eax,0xb20cbeb2
  424c3a:	clc    
  424c3b:	sub    edi,edi
  424c3d:	mov    dh,0x80
  424c3f:	lock and DWORD PTR [edx-0x6c6a61b3],ebp
  424c46:	dec    ebp
  424c47:	or     ah,BYTE PTR ds:0xf096a4f
  424c4d:	pushf  
  424c4e:	or     al,0x8d
  424c50:	lea    eax,[eax-0x317fda69]
  424c56:	cmp    BYTE PTR [edx],0x8d
  424c59:	lea    eax,[eax+0x53fd808d]
  424c5f:	push   ecx
  424c60:	in     eax,dx
  424c61:	xor    cl,BYTE PTR ds:0xb20cbeb2
  424c67:	test   BYTE PTR [ecx],ch
  424c69:	(bad)  
  424c6a:	std    
  424c6b:	or     DWORD PTR [edi],ecx
  424c6d:	jb     0x424ca9
  424c6f:	lea    ecx,[ebp-0x7f758880]
  424c75:	lock mov dl,BYTE PTR [ebx-0x4]
  424c79:	in     eax,dx
  424c7a:	add    eax,0xc86b20d
  424c7f:	mov    dl,0xba
  424c81:	sub    edi,edi
  424c83:	mov    dl,0x50
  424c85:	ja     0x424c0d
  424c87:	pop    esi
  424c88:	imul   ebp,ecx,0x7d01386f
  424c8e:	test   BYTE PTR [eax-0x10],dl
  424c91:	pop    esi
  424c92:	push   eax
  424c93:	lock data16 jl 0x424d0e
  424c97:	inc    esi
  424c98:	sbb    ecx,ebp
  424c9a:	outs   dx,DWORD PTR ds:[esi]
  424c9b:	cmp    BYTE PTR [edi+esi*2+0x62],bh
  424c9f:	call   0x507abc8d
  424ca4:	ja     0x424cfc
  424ca6:	jl     0x424d1f
  424ca8:	push   0xfffffff6
  424caa:	and    al,0x6f
  424cac:	cmp    BYTE PTR [ebx+0x70],dl
  424caf:	adc    BYTE PTR [ebp+0x7b24601],0xc
  424cb6:	mov    ds:0x8df4c4c2,al
  424cbb:	lea    edi,[ecx+0x75f01650]
  424cc1:	dec    ebp
  424cc2:	dec    ebp
  424cc3:	dec    ebp
  424cc4:	xchg   edx,eax
  424cc5:	in     eax,dx
  424cc6:	retf   
  424cc7:	outs   dx,DWORD PTR ds:[esi]
  424cc8:	in     al,0xb8
  424cca:	pusha  
  424ccb:	mov    ecx,0x50386fe9
  424cd0:	dec    edi
  424cd1:	xchg   ebp,eax
  424cd2:	dec    ebp
  424cd3:	dec    ebp
  424cd4:	dec    ebp
  424cd5:	push   eax
  424cd6:	dec    edi
  424cd7:	mov    ebp,0x504d4d4d
  424cdc:	ja     0x424d38
  424cde:	push   eax
  424cdf:	ja     0x424cf7
  424ce1:	add    DWORD PTR [edx+0xa96018a],edx
  424ce7:	push   eax
  424ce8:	ja     0x424d18
  424cea:	push   eax
  424ceb:	ja     0x424d23
  424ced:	jl     0x424d3e
  424cef:	or     cl,BYTE PTR [ebp+0x4d]
  424cf2:	dec    ebp
  424cf3:	bnd jmp 0x1928568
  424cf9:	popf   
  424cfa:	dec    ebp
  424cfb:	dec    ebp
  424cfc:	dec    ebp
  424cfd:	push   eax
  424cfe:	sbb    BYTE PTR [ebp+0x7c4d4d4d],ah
  424d04:	dec    edi
  424d05:	lods   eax,DWORD PTR ds:[esi]
  424d06:	dec    ebp
  424d07:	dec    ebp
  424d08:	dec    ebp
  424d09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424d0a:	jmp    0x4fbe857e
  424d0f:	mov    ch,0x4d
  424d11:	dec    ebp
  424d12:	dec    ebp
  424d13:	sbb    ecx,ebp
  424d15:	outs   dx,DWORD PTR ds:[esi]
  424d16:	cmp    BYTE PTR [edi+ecx*2-0x3b],bh
  424d1a:	dec    ebp
  424d1b:	dec    ebp
  424d1c:	dec    ebp
  424d1d:	icebp  
  424d1e:	jmp    0x4fbe8592
  424d23:	push   edx
  424d24:	dec    ebp
  424d25:	dec    ebp
  424d26:	dec    ebp
  424d27:	sbb    ecx,ebp
  424d29:	outs   dx,DWORD PTR ds:[esi]
  424d2a:	cmp    BYTE PTR [edi+ecx*2-0x2b],bh
  424d2e:	dec    ebp
  424d2f:	dec    ebp
  424d30:	dec    ebp
  424d31:	call   0x507abd1f
  424d36:	add    ebp,ebx
  424d38:	dec    ebp
  424d39:	dec    ebp
  424d3a:	dec    ebp
  424d3b:	jl     0x424d8c
  424d3d:	in     eax,0x4d
  424d3f:	dec    ebp
  424d40:	dec    ebp
  424d41:	fucompp 
  424d43:	outs   dx,DWORD PTR ds:[esi]
  424d44:	cmp    BYTE PTR [eax-0x69],dl
  424d47:	int    0x7c
  424d49:	ja     0x424d5a
  424d4b:	nop
  424d4c:	jmp    0xf09285c0
  424d51:	adc    BYTE PTR [edi+esi*2+0x41],bh
  424d55:	cmc    
  424d56:	jmp    0xf09285ca
  424d5b:	push   ds
  424d5c:	jl     0x424dd5
  424d5e:	es (bad) 
  424d60:	jmp    0x77be85d4
  424d65:	mul    BYTE PTR ds:[edi+ebp*2]
  424d69:	cmp    BYTE PTR [ebx+0x6a],dl
  424d6c:	add    BYTE PTR [ecx+0x4f],0xa
  424d70:	dec    ebp
  424d71:	dec    ebp
  424d72:	dec    ebp
  424d73:	mov    dl,0xbe
  424d75:	or     al,0xcd
  424d77:	add    eax,0x2f4110c4
  424d7c:	inc    ebp
  424d7d:	dec    ebp
  424d7e:	dec    ebp
  424d7f:	dec    ebp
  424d80:	ins    DWORD PTR es:[edi],dx
  424d81:	in     eax,dx
  424d82:	mov    ebx,DWORD PTR [ebx]
  424d84:	in     al,0x2
  424d86:	or     dh,0x32
  424d89:	cmp    cl,BYTE PTR [ebp+0x7501018d]
  424d8f:	dec    ebp
  424d90:	dec    ebp
  424d91:	dec    ebp
  424d92:	xchg   esi,eax
  424d93:	dec    ebp
  424d94:	or     ch,dh
  424d96:	sbb    BYTE PTR [edx],0x32
  424d99:	cmp    cl,BYTE PTR [ebp+0x4518018d]
  424d9f:	dec    ebp
  424da0:	dec    ebp
  424da1:	dec    ebp
  424da2:	stos   BYTE PTR es:[edi],al
  424da3:	or     cl,BYTE PTR [ebp-0x6a]
  424da6:	out    dx,eax
  424da7:	push   eax
  424da8:	ja     0x424da7
  424daa:	add    DWORD PTR [edi-0x7a],esi
  424dad:	or     al,BYTE PTR [eax-0x72c5d932]
  424db3:	lea    ecx,[ebp-0x7f]
  424db6:	xor    BYTE PTR [edi-0x3],0x4d
  424dba:	test   DWORD PTR [eax-0xf7f7589],0xedfc538a
  424dc4:	add    eax,0xc86b20d
  424dc9:	mov    dl,0xba
  424dcb:	sub    edi,edi
  424dcd:	mov    dl,0x50
  424dcf:	ja     0x424d80
  424dd1:	xor    al,0x8a
  424dd4:	xor    BYTE PTR [edi-0x76],0x53
  424dd8:	push   ecx
  424dd9:	in     eax,dx
  424dda:	xor    cl,BYTE PTR ds:0xb22984b2
  424de0:	mov    esi,0x80fdff0c
  424de5:	ja     0x424d6d
  424de7:	arpl   WORD PTR [edx+0x775097d5],si
  424ded:	jbe    0x424db3
  424def:	or     DWORD PTR [eax+0x76f0808d],eax
  424df5:	push   eax
  424df6:	ja     0x424d7e
  424df8:	xor    BYTE PTR [edi-0x7a],0x63
  424dfc:	mov    dl,0xd5
  424dfe:	iret   
  424dff:	or     BYTE PTR [edx],0x1d
  424e02:	sbb    BYTE PTR [edx],0x26
  424e05:	cmp    cl,BYTE PTR [ebp-0x28f19c73]
  424e0b:	stc    
  424e0c:	sbb    BYTE PTR [edx],0x26
  424e0f:	cmp    cl,BYTE PTR [ebp+0x1d0a808d]
  424e15:	arpl   WORD PTR [esi],cx
  424e17:	xlat   BYTE PTR ds:[ebx]
  424e18:	cmp    eax,DWORD PTR [eax-0x72c5d1e6]
  424e1e:	lea    eax,[eax-0x557fde69]
  424e24:	cmp    eax,0xa500eec
  424e29:	and    eax,0x808b7780
  424e2e:	lock mov edx,DWORD PTR [ebx-0x4]
  424e32:	in     eax,dx
  424e33:	add    eax,0xc86b20d
  424e38:	mov    dl,0xba
  424e3a:	sub    edi,edi
  424e3c:	mov    dl,0x50
  424e3e:	ja     0x424def
  424e40:	adc    BYTE PTR [edi-0x796c64db],0x3
  424e47:	enter  0x4d4d,0x4f
  424e4b:	push   0x9
  424e4d:	movd   DWORD PTR [ebp-0x28b27273],mm1
  424e54:	and    eax,0x86932a80
  424e59:	sub    eax,0x4f4d4dc8
  424e5e:	push   0x9
  424e60:	pcmpeqb mm1,QWORD PTR [ebp+0x77808d8d]
  424e67:	and    eax,0x94802a80
  424e6c:	xchg   BYTE PTR [eax+0x4f4d4dc2],bh
  424e72:	push   0x9
  424e74:	mov    cr1,ebp
  424e77:	lea    ecx,[ebp-0x6e796c65]
  424e7d:	mov    ecx,DWORD PTR [ebp+0x4d]
  424e80:	dec    edi
  424e81:	push   0x9
  424e83:	ucomiss xmm1,DWORD PTR [ebp-0x317f7273]
  424e8a:	cmp    cl,BYTE PTR es:[ebp-0x28e29c73]
  424e91:	sbb    eax,DWORD PTR [eax-0x72c5cd32]
  424e97:	lea    eax,[ecx]
  424e99:	lock test BYTE PTR [esi-0x7f7b28b3],dl
  424ea0:	lock and DWORD PTR [ebp-0x62],ecx
  424ea4:	xchg   ebp,eax
  424ea5:	xchg   ebx,eax
  424ea6:	dec    ebp
  424ea7:	or     ah,BYTE PTR ds:0x3a82ce80
  424ead:	lea    ecx,[ebp-0x27f7280]
  424eb3:	push   ebx
  424eb4:	push   ecx
  424eb5:	in     eax,dx
  424eb6:	xor    cl,BYTE PTR ds:0xb20cbeb2
  424ebc:	test   BYTE PTR [ecx],ch
  424ebe:	(bad)  
  424ebf:	std    
  424ec0:	aad    0x0
  424ec2:	jl     0x424f3b
  424ec4:	out    dx,eax
  424ec5:	mul    BYTE PTR [ebx]
  424ec7:	outs   dx,DWORD PTR ds:[esi]
  424ec8:	cmp    BYTE PTR [eax-0xf7f1089],al
  424ece:	out    dx,eax
  424ecf:	xor    BYTE PTR [edi+0x25],0xb2
  424ed3:	mov    esi,0xc405a20c
  424ed8:	hlt    
  424ed9:	lea    ecx,[ebp+0x197d30b9]
  424edf:	sub    BYTE PTR [ebp+0x3d],0x80
  424ee3:	lock sub eax,0x925074ec
  424ee9:	adc    eax,0x7c2d7780
  424eee:	(bad)  
  424eef:	in     al,dx
  424ef0:	lea    ecx,[ebp+0x2d77808d]
  424ef6:	push   eax
  424ef7:	popf   
  424ef8:	out    dx,al
  424ef9:	xor    BYTE PTR [edi+0x71],0x80
  424efd:	lock sub eax,0x80ef9250
  424f03:	ja     0x424f1a
  424f05:	xor    al,0x2d
  424f08:	push   eax
  424f09:	xchg   edx,eax
  424f0a:	and    esp,eax
  424f0c:	adc    eax,0x80257780
  424f11:	ins    DWORD PTR es:[edi],dx
  424f12:	cmp    eax,0xec2df080
  424f17:	je     0x424f69
  424f19:	xchg   edx,eax
  424f1a:	adc    eax,0xed2d7780
  424f1f:	sub    eax,0xf7777c8d
  424f24:	cmp    cl,BYTE PTR [ebp-0x18127273]
  424f2a:	test   DWORD PTR [ebp-0x5bacf329],0xc4a37480
  424f34:	or     al,0x53
  424f36:	push   0xffffffab
  424f38:	test   eax,0x8d25fb70
  424f3d:	xchg   edi,eax
  424f3e:	add    BYTE PTR [edi+0x5c099696],0x92
  424f45:	adc    eax,0x1def7501
  424f4a:	or     DWORD PTR [edi+edi*2+0x6f],ebx
  424f4e:	xchg   ebx,eax
  424f4f:	fwait
  424f50:	jl     0x424fc9
  424f52:	mov    dh,dh
  424f54:	and    al,0x6f
  424f56:	cmp    BYTE PTR [eax-0x10],dl
  424f59:	mov    ecx,DWORD PTR [edi+0x70]
  424f5c:	aad    0xb5
  424f5e:	icebp  
  424f5f:	and    ah,BYTE PTR [edi+ebp*2]
  424f62:	cmp    BYTE PTR [eax-0x187fde83],al
  424f68:	out    dx,eax
  424f69:	in     al,dx
  424f6a:	retf   
  424f6b:	pop    edi
  424f6c:	out    0x21,eax
  424f6e:	in     al,0xcf
  424f70:	sbb    ch,0xef
  424f73:	in     al,dx
  424f74:	retf   
  424f75:	in     al,dx
  424f76:	out    0xef,eax
  424f78:	pop    edi
  424f79:	out    0x21,eax
  424f7b:	in     al,0x7b
  424f7d:	xor    al,0x8a
  424f80:	and    bh,0x8a
  424f83:	push   ebx
  424f84:	(bad)  
  424f85:	in     eax,dx
  424f86:	dec    ebx
  424f87:	or     eax,0x8029bcb2
  424f8c:	mov    al,ds:0xff0cc4b2
  424f91:	push   es
  424f92:	in     eax,dx
  424f93:	mov    edx,0xeeb2ed8a
  424f98:	in     eax,dx
  424f99:	push   0x3d
  424f9b:	jnp    0x424f4f
  424f9d:	popa   
  424f9e:	sub    edi,edi
  424fa0:	retf   
  424fa1:	mov    ds:0x6f24f64b,al
  424fa6:	cmp    BYTE PTR [edx],bh
  424fa8:	out    0x8a,eax
  424faa:	xor    al,0x8a
  424fad:	and    bh,0x8a
  424fb0:	push   ebx
  424fb1:	(bad)  
  424fb2:	in     eax,dx
  424fb3:	dec    ebx
  424fb4:	or     eax,0xb20cbeb2
  424fb9:	mov    esp,0x632aff29
  424fbe:	lock mov esp,esp
  424fc1:	dec    edx
  424fc2:	push   ebx
  424fc3:	push   0xffffffab
  424fc5:	mov    ds:0x8deffb70,eax
  424fca:	xchg   edi,eax
  424fcb:	add    BYTE PTR [edi+0x7c8187ed],0x77
  424fd2:	cmp    DWORD PTR [ebx+0x7c8d8dad],0x77
  424fd9:	stc    
  424fda:	in     al,dx
  424fdb:	ror    DWORD PTR [ebp-0x7b888373],0x14
  424fe2:	ror    BYTE PTR [ebp-0x74888373],cl
  424fe8:	call   0x8a77:0x7c8dee71
  424fef:	stc    
  424ff0:	lods   eax,DWORD PTR ds:[esi]
  424ff1:	lea    ecx,[ebp-0x5088884]
  424ff7:	dec    DWORD PTR [ebp+0x7a777c8d]
  424ffd:	dec    ebx
  424ffe:	aam    0x8d
  425000:	lea    edi,[edi+esi*2-0x7e]
  425004:	in     al,dx
  425005:	lea    ecx,[ebp-0x79888373]
  42500b:	mov    dl,0xb9
  42500d:	lea    ecx,[ebp-0x7f788884]
  425013:	xchg   esi,eax
  425014:	lea    ecx,[ebp+0x332777c]
  42501a:	mov    bh,0x8d
  42501c:	lea    eax,[eax-0x73a17510]
  425022:	fimul  DWORD PTR [ebp-0x7f4dbc73]
  425028:	lock mov edx,DWORD PTR [ebx+0x72]
  42502c:	dec    ebx
  42502d:	add    eax,0xfd809b99
  425032:	mov    ds:0x8d90f1ba,al
  425037:	lea    esp,[edx-0x7238d090]
  42503d:	lea    esp,[edx-0x725a2bfb]
  425043:	lea    esp,[edx-0x72c2204e]
  425049:	lea    edi,[edi+esi*2-0x38]
  42504d:	div    eax
  42504f:	lea    ecx,[ebp-0x24758884]
  425055:	aad    0x8d
  425057:	lea    edi,[edi+esi*2-0x75]
  42505b:	sbb    DWORD PTR [ecx-0x73],esi
  42505e:	lea    eax,[eax-0x687f7489]
  425064:	mov    dh,BYTE PTR [edi]
  425066:	dec    ecx
  425067:	popf   
  425068:	lea    ecx,[ebp+0x77ecfb53]
  42506e:	enter  0xb680,0x57
  425072:	jnp    0x425081
  425074:	lea    ecx,[ebp-0x68af08bd]
  42507a:	mov    al,BYTE PTR [eax+0x77ec8a77]
  425080:	out    dx,eax
  425081:	adc    BYTE PTR [edi+0x2197ec8a],0x8f
  425088:	nop
  425089:	adc    BYTE PTR [ecx-0x80],dh
  42508c:	ja     0x4250c0
  42508e:	adc    BYTE PTR [edi-0x76e6c879],0x8d
  425095:	lea    edx,[ebx-0x5]
  425098:	adc    BYTE PTR [edi-0xe04007a],0x3
  42509f:	(bad)  [ebp-0x7f08bc73]
  4250a5:	ja     0x4250a0
  4250a7:	in     al,dx
  4250a8:	(bad)  
  4250a9:	icebp  
  4250aa:	test   al,0x55
  4250ac:	lea    ecx,[ebp-0x681308bd]
  4250b2:	test   BYTE PTR [eax-0x287f7c89],al
  4250b8:	jno    0x42503a
  4250ba:	out    0x82,eax
  4250bc:	mov    ds:0x8d9630c2,al
  4250c1:	lea    esi,[ebx]
  4250c3:	test   DWORD PTR [eax-0x3d5d8589],0x8d8d2db7
  4250cd:	inc    ebx
  4250ce:	ret    0x7253
  4250d1:	dec    ebx
  4250d2:	dec    ebx
  4250d3:	adc    BYTE PTR [edi+0x1fe757f7],0x8d
  4250da:	lea    esi,[ebx]
  4250dc:	sti    
  4250dd:	xor    BYTE PTR [esi+0x7a2f743],0x4c
  4250e4:	fmul   DWORD PTR [ebp+0x97e638d]
  4250ea:	dec    esp
  4250eb:	mov    ds:0xab4d4d4d,eax
  4250f0:	test   eax,0x8d21fb70
  4250f5:	xchg   edi,eax
  4250f6:	add    BYTE PTR [edi-0x6c8a7813],0x99
  4250fd:	fwait
  4250fe:	jl     0x425177
  425100:	xchg   DWORD PTR [ebx+eiz*2+0x777c8d8d],ebx
  425107:	xor    dl,al
  425109:	jg     0x425098
  42510b:	lea    edi,[edi+esi*2-0x38]
  42510f:	pusha  
  425110:	xchg   esi,eax
  425111:	lea    ecx,[ebp-0x15748884]
  425117:	xchg   esi,eax
  425118:	lea    ecx,[ebp-0xd758884]
  42511e:	sub    eax,0x777c8d8d
  425123:	sbb    ecx,0x59
  425126:	lea    ecx,[ebp+0x7784777c]
  42512c:	out    dx,al
  42512d:	lea    ecx,[ebp+0x6df9777c]
  425133:	xor    DWORD PTR [ebp-0x79888373],ecx
  425139:	sbb    ebx,DWORD PTR [edi-0x73]
  42513c:	lea    edi,[edi+esi*2+0x66]
  425140:	pop    esp
  425141:	leave  
  425142:	lea    ecx,[ebp-0x59958884]
  425148:	lea    ecx,[ebp+0x76777c8d]
  42514e:	iret   
  42514f:	cmp    DWORD PTR [ebp-0x2888373],ecx
  425155:	and    BYTE PTR [ecx],ch
  425157:	lea    ecx,[ebp+0x5caf777c]
  42515d:	iret   
  42515e:	lea    ecx,[ebp-0x1a088884]
  425164:	sbb    eax,0x77808d8d
  425169:	test   BYTE PTR [eax-0x55307c10],al
  42516f:	xor    ecx,DWORD PTR [ebp-0x58c1b873]
  425175:	lea    ecx,[ebp-0x72dcdf31]
  42517b:	lea    ecx,[ecx]
  42517d:	and    dh,BYTE PTR [edx+0x7f549e60]
  425183:	mov    eax,DWORD PTR [ebx-0x3]
  425186:	xor    BYTE PTR [edi-0x76],0x80
  42518a:	xchg   edi,eax
  42518b:	mov    esi,DWORD PTR [ebx]
  42518d:	sti    
  42518e:	adc    BYTE PTR [edi-0x36b73038],0x8d
  425195:	lea    eax,[ebx-0x5]
  425198:	adc    BYTE PTR [edi-0x7f04bcce],0x97
  42519f:	xchg   edi,edi
  4251a1:	sti    
  4251a2:	push   ebx
  4251a3:	jb     0x42519f
  4251a5:	pushf  
  4251a6:	ins    BYTE PTR es:[edi],dx
  4251a7:	dec    ebp
  4251a8:	dec    ebp
  4251a9:	dec    ebx
  4251aa:	or     eax,DWORD PTR [eax-0x2f93de69]
  4251b0:	pop    ds
  4251b1:	lea    ecx,[ebp+0x7780f743]
  4251b7:	xchg   BYTE PTR [eax+0x7c43f9d7],al
  4251bd:	or     DWORD PTR [edx],esp
  4251bf:	cld    
  4251c0:	cli    
  4251c1:	mov    al,ds:0xbe309e50
  4251c6:	icebp  
  4251c7:	lea    ecx,[ebp+0x7a777c8d]
  4251cd:	sbb    al,0x55
  4251cf:	lea    ecx,[ebp+0x2e82777c]
  4251d5:	leave  
  4251d6:	lea    ecx,[ebp-0x327b8884]
  4251dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4251dd:	lea    ecx,[ebp+0x3a83777c]
  4251e3:	lea    ecx,[ebp-0x7c587f73]
  4251e9:	push   ebx
  4251ea:	jb     0x42524a
  4251ec:	fwait
  4251ed:	leave  
  4251ee:	lea    ecx,[ebp-0x687f39b5]
  4251f4:	test   BYTE PTR [eax-0x4001059],al
  4251fa:	adc    BYTE PTR [edi-0x7f04bc7e],0x97
  425201:	jp     0x42523a
  425203:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425204:	or     DWORD PTR [ebp-0x4ddf673],0x59ef0f01
  42520e:	sub    eax,0x77508ade
  425213:	jp     0x425195
  425215:	ja     0x42520e
  425217:	adc    BYTE PTR [edi+0xbc835af],0x7
  42521e:	adc    BYTE PTR [edi+0x4523357a],0x2f
  425225:	and    DWORD PTR [esi+ebp*8-0x4f11efb9],edx
  42522c:	xor    BYTE PTR [edi-0x3],0xcf
  425230:	mov    es,edi
  425232:	lea    ecx,[ebp-0x7f898814]
  425238:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425239:	push   0x53
  42523b:	jb     0x425288
  42523d:	mov    BYTE PTR [eax-0x639b9969],0x6c
  425244:	dec    ebp
  425245:	dec    ebp
  425246:	aaa    
  425247:	cmp    BYTE PTR [edi-0x73],dl
  42524a:	lea    eax,[ebx-0x5]
  42524d:	push   edi
  42524e:	adc    DWORD PTR [edx+0x4d],ebp
  425251:	dec    ebp
  425252:	in     al,dx
  425253:	std    
  425254:	xor    BYTE PTR [edi-0x76],0x80
  425258:	xchg   edi,eax
  425259:	mov    esi,DWORD PTR [ebx]
  42525b:	sti    
  42525c:	adc    BYTE PTR [edi-0x36b73038],0x8d
  425263:	lea    eax,[ebx-0x5]
  425266:	adc    BYTE PTR [edi-0x7f04bcce],0x97
  42526d:	xchg   edi,edi
  42526f:	sti    
  425270:	push   ebx
  425271:	jb     0x4252be
  425273:	mov    BYTE PTR [eax-0x8bcde69],0x80
  42527a:	ja     0x425202
  42527c:	and    BYTE PTR [edi+0x97c43f9],0x22
  425283:	je     0x425205
  425285:	mov    al,ds:0x4ec8243
  42528a:	arpl   WORD PTR [ebx],ax
  42528c:	or     DWORD PTR [ebp+ebx*2+0x4d],ecx
  425290:	dec    ebp
  425291:	dec    ebp
  425292:	stos   DWORD PTR es:[edi],eax
  425293:	test   eax,0xeffb70a3
  425298:	lea    edx,[edi-0x78127880]
  42529e:	or     bh,BYTE PTR [edi+esi*2+0x62]
  4252a2:	in     al,0x58
  4252a4:	fist   WORD PTR [ecx]
  4252a6:	pop    esi
  4252a7:	xchg   BYTE PTR [edi+0x77502643],cl
  4252ad:	push   esi
  4252ae:	jl     0x425327
  4252b0:	pop    esi
  4252b1:	loop   0x42530b
  4252b3:	fist   WORD PTR [ecx]
  4252b5:	push   eax
  4252b6:	ja     0x42531e
  4252b8:	jl     0x425331
  4252ba:	push   0xffffffe6
  4252bc:	pop    eax
  4252bd:	fist   WORD PTR [ecx]
  4252bf:	push   eax
  4252c0:	ja     0x425338
  4252c2:	xchg   ebx,eax
  4252c3:	jl     0x42533c
  4252c5:	std    
  4252c6:	rcr    BYTE PTR [eax-0x21],1
  4252c9:	adc    DWORD PTR [eax+0x77],edx
  4252cc:	scas   eax,DWORD PTR es:[edi]
  4252cd:	cdq    
  4252ce:	fwait
  4252cf:	jl     0x425348
  4252d1:	neg    DWORD PTR [ecx+0x5011df58]
  4252d7:	ja     0x425353
  4252d9:	push   ebx
  4252da:	jb     0x42532f
  4252dc:	dec    ebp
  4252dd:	pusha  
  4252de:	mul    BYTE PTR [edi+ebp*2]
  4252e1:	cmp    BYTE PTR [edi+esi*2-0x7e],bh
  4252e5:	call   0x7b543242
  4252ea:	push   eax
  4252eb:	ja     0x425270
  4252ed:	xor    BYTE PTR [edx+0x50879750],0xe7
  4252f4:	stc    
  4252f5:	add    DWORD PTR [esi+0xd32ed3a],ebx
  4252fb:	mov    dl,0x84
  4252fd:	sub    edi,edi
  4252ff:	sti    
  425300:	add    DWORD PTR [ebp+0x78],esi
  425303:	bound  eax,QWORD PTR [eax-0x11627f8f]
  425309:	or     DWORD PTR [esi+0x3],eax
  42530c:	or     al,0xb2
  42530e:	les    ecx,FWORD PTR [eax+eax*4]
  425311:	sbb    eax,0x53ee6d80
  425316:	push   0xffffffa2
  425318:	ret    0xc7a7
  42531b:	add    al,0xd4
  42531d:	push   edi
  42531f:	push   eax
  425320:	xchg   edi,eax
  425321:	mov    eax,DWORD PTR [eax+0x6aec8b77]
  425327:	mov    dl,0xb4
  425329:	sub    DWORD PTR [ebx+0x77],esp
  42532c:	and    DWORD PTR [ecx],ecx
  42532e:	into   
  42532f:	lea    ecx,fs:[ebp-0x74887f73]
  425336:	in     eax,dx
  425337:	mov    bh,0x86
  425339:	lea    edx,[eax-0x19]
  42533c:	xor    al,BYTE PTR [eax+0x6a4f8b77]
  425342:	aad    0xb7
  425344:	push   ebx
  425345:	push   0x50
  425347:	out    0xc8,eax
  425349:	adc    BYTE PTR [edi-0x10587f7a],0x1
  425350:	gs jno 0x4252d3
  425353:	xchg   edi,eax
  425354:	out    dx,eax
  425355:	in     al,dx
  425356:	pushf  
  425357:	push   eax
  425358:	xchg   edi,eax
  425359:	test   BYTE PTR [edi+0x4d971090],cl
  42535f:	adc    BYTE PTR [edi-0x70631375],0x15
  425366:	mov    al,0x80
  425368:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425369:	test   BYTE PTR [eax],dl
  42536b:	adc    ecx,DWORD PTR [edi-0x587fb269]
  425371:	mov    ebp,esp
  425373:	lods   al,BYTE PTR ds:[esi]
  425374:	and    bh,0xef
  425377:	adc    BYTE PTR ds:0xc8978063,dl
  42537d:	ins    DWORD PTR es:[edi],dx
  42537e:	in     eax,dx
  42537f:	clc    
  425380:	mov    dh,BYTE PTR [edx-0x412d67a]
  425386:	out    dx,al
  425387:	(bad)  
  425388:	sti    
  425389:	push   ebx
  42538a:	mov    dl,0x50
  42538c:	ja     0x425356
  42538e:	outs   dx,BYTE PTR ds:[esi]
  42538f:	xlat   BYTE PTR ds:[ebx]
  425390:	enter  0x9780,0xc8
  425394:	in     eax,dx
  425395:	xor    cl,BYTE PTR ds:0xb20c07b2
  42539b:	test   BYTE PTR [ecx],ch
  42539d:	(bad)  
  42539e:	sti    
  42539f:	adc    BYTE PTR [edi-0x1b049c75],0x34
  4253a6:	push   ebx
  4253a7:	dec    ebp
  4253a8:	jnp    0x42532a
  4253aa:	ja     0x4253de
  4253ac:	adc    BYTE PTR [edi-0x79587f75],0xed
  4253b3:	test   BYTE PTR [edx-0x7f0811ff],cl
  4253b9:	xchg   edi,eax
  4253ba:	mov    eax,DWORD PTR [ecx]
  4253bc:	adc    eax,0x21a78093
  4253c1:	mov    dl,0x7
  4253c3:	sub    edi,edi
  4253c5:	sti    
  4253c6:	push   ebx
  4253c7:	mov    dl,0x50
  4253c9:	ja     0x4253fd
  4253cb:	outs   dx,BYTE PTR ds:[esi]
  4253cc:	xlat   BYTE PTR ds:[ebx]
  4253cd:	xor    al,BYTE PTR [eax+0x32ed3297]
  4253d3:	or     eax,0xb20c07b2
  4253d8:	test   BYTE PTR [ecx],ch
  4253da:	(bad)  
  4253db:	sti    
  4253dc:	adc    BYTE PTR [edi+0x4372ec8b],0x3
  4253e3:	push   eax
  4253e4:	ja     0x42536c
  4253e6:	arpl   WORD PTR [ecx+ecx*1+0x4c],si
  4253ea:	leave  
  4253eb:	dec    ebp
  4253ec:	dec    ebp
  4253ed:	dec    ebp
  4253ee:	xor    BYTE PTR [edi-0x79],0x80
  4253f2:	xchg   edi,eax
  4253f3:	stc    
  4253f4:	in     eax,dx
  4253f5:	clc    
  4253f6:	mov    ch,BYTE PTR [ebp-0x13]
  4253f9:	sti    
  4253fa:	out    dx,al
  4253fb:	mov    dl,0x86
  4253fd:	sub    edi,edi
  4253ff:	sti    
  425400:	push   ebx
  425401:	mov    dl,0x80
  425403:	add    BYTE PTR [eax-0x1281ac09],0xc6
  42540a:	or     eax,0x5029b4b2
  42540f:	xchg   edi,eax
  425410:	stc    
  425411:	mov    dl,0x7
  425413:	or     al,0x50
  425415:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425416:	xchg   DWORD PTR [eax],esi
  425418:	xchg   edi,eax
  425419:	xchg   ebp,ebp
  42541b:	out    0x87,eax
  42541d:	outs   dx,DWORD PTR ds:[esi]
  42541e:	or     edx,ebp
  425420:	jp     0x42542f
  425422:	dec    ebp
  425423:	dec    ebp
  425424:	stos   DWORD PTR es:[edi],eax
  425425:	test   eax,0xeffb70a3
  42542a:	lea    edx,[edi-0x78127880]
  425430:	adc    eax,0x7cef7780
  425435:	ja     0x425469
  425437:	mul    BYTE PTR [edi+ebp*2]
  42543a:	cmp    BYTE PTR [edi+esi*2-0x76],bh
  42543e:	cmc    
  42543f:	and    al,0x6f
  425441:	cmp    BYTE PTR [eax+0x5099938d],al
  425447:	ja     0x4253d4
  425449:	jl     0x4254c2
  42544b:	enter  0x24dc,0x6f
  42544f:	cmp    BYTE PTR [ebx+0x4787777c],bl
  425455:	sbb    al,0xf9
  425457:	adc    eax,DWORD PTR [eax-0xf7f7529]
  42545d:	mov    ah,dl
  42545f:	or     eax,0x6f24225e
  425464:	cmp    BYTE PTR [ebx-0x454dd5ad],ch
  42546a:	sub    DWORD PTR [ebx+0x32],edx
  42546d:	mov    dl,0x88
  42546f:	or     al,0xff
  425471:	add    eax,0x8032f080
  425476:	xchg   edi,eax
  425477:	xor    dl,BYTE PTR [ebx-0x3]
  42547a:	push   ebx
  42547b:	pushf  
  42547c:	mov    dl,0xbe
  42547e:	or     al,0xb2
  425480:	clc    
  425481:	sub    edi,edi
  425483:	dec    BYTE PTR [ecx]
  425485:	and    al,BYTE PTR ds:0x8d8d24be
  42548b:	lea    eax,[eax-0x687f7410]
  425491:	mov    edx,DWORD PTR [ebx-0x64]
  425494:	mov    dl,0xf8
  425496:	sub    DWORD PTR [ebx-0x3],edx
  425499:	mov    dl,0xbe
  42549b:	or     al,0xff
  42549d:	inc    BYTE PTR [eax-0x587f7569]
  4254a3:	mov    dl,BYTE PTR [ebx-0x9]
  4254a6:	push   ebx
  4254a7:	lods   al,BYTE PTR ds:[esi]
  4254a8:	mov    dl,0x7
  4254aa:	or     al,0xb2
  4254ac:	mov    ah,0x29
  4254ae:	call   DWORD PTR [edi+ecx*2-0x74687f02]
  4254b5:	xor    al,0x8b
  4254b8:	aad    0x59
  4254ba:	push   ebx
  4254bb:	sub    dh,BYTE PTR [edx-0x8acd646]
  4254c1:	mov    dl,0x7
  4254c3:	or     al,0xff
  4254c5:	mov    dh,0x80
  4254c7:	lock mov al,BYTE PTR [eax-0x2ac7559]
  4254ce:	push   ebx
  4254cf:	lods   al,BYTE PTR ds:[esi]
  4254d0:	mov    dl,0xbe
  4254d2:	or     al,0xb2
  4254d4:	mov    ah,0x29
  4254d6:	call   DWORD PTR [ecx]
  4254d8:	xchg   esp,eax
  4254d9:	pop    es
  4254da:	xor    al,0x87
  4254dd:	and    BYTE PTR [edi+0x53fd5387],0xac
  4254e4:	mov    dl,0xbe
  4254e6:	or     al,0xb2
  4254e8:	mov    ah,0x29
  4254ea:	call   DWORD PTR [ecx]
  4254ec:	push   ebx
  4254ed:	mov    dh,0xc4
  4254ef:	sub    eax,0xbab22a53
  4254f4:	sub    DWORD PTR [ebx-0x9],edx
  4254f7:	mov    dl,0x7
  4254f9:	or     al,0xff
  4254fb:	mov    dh,0x80
  4254fd:	lock mov al,BYTE PTR [eax-0x2ac7559]
  425504:	push   ebx
  425505:	lods   al,BYTE PTR ds:[esi]
  425506:	mov    dl,0xbe
  425508:	or     al,0xb2
  42550a:	mov    ah,0x29
  42550c:	call   DWORD PTR [ecx]
  42550e:	xchg   esp,eax
  42550f:	pop    es
  425510:	push   eax
  425511:	xchg   edi,eax
  425512:	mov    eax,DWORD PTR [eax-0x687f7510]
  425518:	mov    dl,BYTE PTR [ebx-0x3]
  42551b:	push   ebx
  42551c:	pushf  
  42551d:	mov    dl,0xbe
  42551f:	or     al,0xb2
  425521:	clc    
  425522:	sub    edi,edi
  425524:	(bad)  
  425525:	in     al,dx
  425526:	add    eax,0x80c8f080
  42552b:	xchg   edi,eax
  42552c:	enter  0x9c53,0x53
  425530:	std    
  425531:	mov    dl,0xf8
  425533:	sub    DWORD PTR [edx-0x100f342],esi
  425539:	adc    BYTE PTR [edi-0x75587f76],0x53
  425540:	not    DWORD PTR [ebx-0x54]
  425543:	mov    dl,0xb4
  425545:	sub    DWORD PTR [edx-0x6b00f3f9],esi
  42554b:	inc    ebx
  42554c:	(bad)  
  42554d:	arpl   WORD PTR ds:0x4d5b4c09,ax
  425553:	dec    ebp
  425554:	dec    ebp
  425555:	xor    BYTE PTR [edi-0x75],0x80
  425559:	lock out dx,eax
  42555b:	stos   DWORD PTR es:[edi],eax
  42555c:	test   eax,0x77803a50
  425561:	mov    esp,DWORD PTR [ebx-0x72110490]
  425567:	xchg   edi,eax
  425568:	add    BYTE PTR [edi+0x70539696],0x5f
  42556f:	lock and ebp,edx
  425572:	in     eax,0x5f
  425574:	lock out dx,eax
  425576:	(bad)  
  425578:	(bad)  
  425579:	out    dx,al
  42557a:	outs   dx,BYTE PTR ds:[esi]
  42557b:	adc    BYTE PTR [edi+0x9],dh
  42557e:	cld    
  42557f:	ja     0x42554d
  425581:	aad    0xfc
  425583:	ja     0x425592
  425585:	sbb    esp,edi
  425587:	ja     0x4255d6
  425589:	ror    BYTE PTR [ecx],1
  42558b:	loopne 0x425604
  42558d:	dec    ebp
  42558e:	or     eax,esp
  425590:	xchg   edi,eax
  425591:	or     eax,0x8d8d7acf
  425596:	lea    esi,[ebx]
  425598:	sti    
  425599:	or     eax,esp
  42559b:	xchg   edi,eax
  42559c:	int3   
  42559d:	xor    edi,ebx
  42559f:	adc    BYTE PTR [edi-0x7b],dh
  4255a2:	cld    
  4255a3:	ja     0x4255ab
  4255a5:	or     eax,0xd48a77fc
  4255aa:	cld    
  4255ab:	ja     0x4255fa
  4255ad:	jl     0x4255ab
  4255af:	ja     0x4255be
  4255b1:	sar    esp,cl
  4255b3:	ja     0x425581
  4255b5:	push   esp
  4255b6:	(bad)  
  4255b7:	ja     0x425585
  4255b9:	(bad)  
  4255ba:	xchg   edi,eax
  4255bb:	or     eax,0x978ffba6
  4255c0:	dec    ebp
  4255c1:	sar    bl,cl
  4255c3:	(bad)  
  4255c4:	xchg   edi,eax
  4255c5:	mov    cl,BYTE PTR [ebx]
  4255c7:	pop    es
  4255c8:	(bad)  
  4255c9:	xchg   edi,eax
  4255ca:	push   es
  4255cb:	sar    bl,cl
  4255cd:	(bad)  
  4255ce:	xchg   edi,eax
  4255cf:	test   esi,edx
  4255d1:	neg    ebx
  4255d3:	or     DWORD PTR [ecx],ecx
  4255d5:	loopne 0x42564e
  4255d7:	or     DWORD PTR [edi+0x8],eax
  4255da:	lea    ecx,[ebp+0x977108d]
  4255e0:	div    eax
  4255e2:	or     DWORD PTR [edi-0x11eff689],ecx
  4255e8:	outs   dx,BYTE PTR ds:[esi]
  4255e9:	xchg   edx,eax
  4255ea:	arpl   ax,si
  4255ec:	out    dx,eax
  4255ed:	in     al,0x50
  4255ef:	dec    ebp
  4255f0:	xlat   BYTE PTR ds:[ebx]
  4255f1:	out    dx,eax
  4255f2:	cdq    
  4255f3:	xchg   BYTE PTR [edx-0x76],cl
  4255f6:	dec    ebp
  4255f7:	dec    ebp
  4255f8:	jo     0x4255f5
  4255fa:	out    dx,eax
  4255fb:	lea    edx,[edi-0x785d7880]
  425601:	cmp    eax,0x938d8dee
  425606:	cdq    
  425607:	mul    BYTE PTR fs:[edi+ebp*2]
  42560b:	cmp    BYTE PTR [eax-0x59],dl
  42560e:	xor    bh,BYTE PTR [edi+esi*2-0x76]
  425612:	cmc    
  425613:	and    al,0x6f
  425615:	cmp    BYTE PTR [edi+esi*2-0x79],bh
  425619:	imul   BYTE PTR [edi+ebp*2]
  42561c:	cmp    BYTE PTR [edi+esi*2-0x7],bh
  425620:	xchg   esi,eax
  425621:	mov    ch,0xcb
  425623:	scas   al,BYTE PTR es:[edi]
  425624:	xor    BYTE PTR [edi+0x32],0x80
  425628:	lock xor bl,BYTE PTR [ebx-0x2cfef21e]
  42562f:	cmp    ch,BYTE PTR [ebx+0x2a53fc53]
  425635:	mov    dl,0x86
  425637:	or     al,0xb2
  425639:	mov    edx,0x50b2ff29
  42563e:	ja     0x4255cb
  425640:	jl     0x4256b9
  425642:	sbb    esp,0x24
  425645:	outs   dx,DWORD PTR ds:[esi]
  425646:	cmp    BYTE PTR [edi+esi*2-0x7e],bh
  42564a:	inc    edi
  42564b:	sbb    al,0xf9
  42564d:	adc    edi,DWORD PTR [edi+esi*2-0x7c]
  425651:	out    dx,eax
  425652:	lea    ecx,[ebp-0x7f8f7f73]
  425658:	ja     0x4255e4
  42565a:	xor    al,0x8a
  42565d:	push   ebx
  42565e:	sub    dh,BYTE PTR [edx-0x3acd646]
  425664:	mov    dl,0x86
  425666:	or     al,0xff
  425668:	mov    dl,0x80
  42566a:	lock xor al,BYTE PTR [eax+0x51533297]
  425671:	push   ebx
  425672:	pushf  
  425673:	mov    dl,0xbe
  425675:	or     al,0xb2
  425677:	clc    
  425678:	sub    edi,edi
  42567a:	dec    BYTE PTR [ecx]
  42567c:	and    dh,BYTE PTR [edx+0x778092c4]
  425682:	enter  0xf080,0xc8
  425686:	mov    dl,0x86
  425688:	sub    DWORD PTR [edx-0x4d00f346],esi
  42568e:	push   ebx
  42568f:	je     0x4256e1
  425691:	ja     0x42561e
  425693:	add    DWORD PTR [edi-0x75],esi
  425696:	or     al,BYTE PTR [esi+0x4d4dcc1a]
  42569c:	push   eax
  42569d:	ja     0x42562a
  42569f:	xor    BYTE PTR [edi-0x75],0x80
  4256a3:	lock enter 0xf50,0x1
  4256a8:	add    BYTE PTR [esi],0x4d
  4256ab:	dec    ebp
  4256ac:	xor    BYTE PTR [edi-0x76],0x80
  4256b0:	lock mov dl,BYTE PTR [ebx-0x4]
  4256b4:	push   ebx
  4256b5:	sub    dh,BYTE PTR [edx-0x454df37a]
  4256bb:	sub    edi,edi
  4256bd:	mov    dl,0xec
  4256bf:	ja     0x425689
  4256c1:	push   eax
  4256c2:	ja     0x42568c
  4256c4:	xor    BYTE PTR [edi-0x79],0x80
  4256c8:	lock xchg DWORD PTR [ebx+0x2a],edx
  4256cc:	mov    dl,0xba
  4256ce:	sub    DWORD PTR [ebx-0x4],edx
  4256d1:	mov    dl,0x86
  4256d3:	or     al,0xff
  4256d5:	mov    dl,0x80
  4256d7:	lock mov al,BYTE PTR [eax+0x51538a97]
  4256de:	push   ebx
  4256df:	pushf  
  4256e0:	mov    dl,0xbe
  4256e2:	or     al,0xb2
  4256e4:	clc    
  4256e5:	sub    edi,edi
  4256e7:	inc    BYTE PTR [ebx-0x4e]
  4256ea:	xor    al,0xc8
  4256ed:	arpl   bp,di
  4256ef:	fstp   DWORD PTR [edx]
  4256f1:	xor    BYTE PTR [edi-0x7],0x80
  4256f5:	lock stc 
  4256f7:	push   ebx
  4256f8:	cld    
  4256f9:	push   ebx
  4256fa:	sub    dh,BYTE PTR [edx-0x454df37a]
  425700:	sub    edi,edi
  425702:	mov    dl,0x50
  425704:	ja     0x425691
  425706:	jl     0x42577f
  425708:	xchg   DWORD PTR [edx-0x7fc790e2],ebp
  42570e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42570f:	mov    esi,0x8d8d8dcd
  425714:	xor    al,0x83
  425717:	xor    BYTE PTR [edi-0x7d],0x53
  42571b:	jl     0x4256cf
  42571d:	test   BYTE PTR [ecx],ch
  42571f:	push   ebx
  425720:	push   ecx
  425721:	mov    dl,0xbe
  425723:	or     al,0xff
  425725:	std    
  425726:	xor    BYTE PTR [edi-0x75],0x94
  42572a:	xchg   BYTE PTR [eax+0x77],dl
  42572d:	add    BYTE PTR [eax-0x72701089],0x10
  425734:	ja     0x4256fa
  425736:	(bad)  
  425737:	ja     0x4256fd
  425739:	xor    al,0x8b
  42573c:	or     eax,esp
  42573e:	push   0x53
  425740:	mov    dl,0x50
  425742:	ja     0x42570c
  425744:	xor    BYTE PTR [edi-0x79],0x80
  425748:	lock xchg DWORD PTR [ebx-0x4],edx
  42574c:	mov    dl,0x86
  42574e:	or     al,0x53
  425750:	sub    dh,BYTE PTR [edx-0x4d00d646]
  425756:	xor    al,0xc8
  425759:	xor    esi,DWORD PTR [edx-0x7db0f080]
  42575f:	push   es
  425760:	dec    ebp
  425761:	dec    ebp
  425762:	xor    al,0x82
  425765:	push   ebx
  425766:	mov    dl,0x50
  425768:	ja     0x4256f5
  42576a:	xor    BYTE PTR [edi-0x76],0x80
  42576e:	lock mov dl,BYTE PTR [ebx-0x4]
  425772:	push   ebx
  425773:	sub    dh,BYTE PTR [edx-0x454df37a]
  425779:	sub    edi,edi
  42577b:	mov    dl,0x3a
  42577d:	ja     0x42576e
  42577f:	xor    BYTE PTR [edi-0x76],0x80
  425783:	lock mov dl,BYTE PTR [ebx-0x4]
  425787:	push   ebx
  425788:	sub    dh,BYTE PTR [edx-0x454df37a]
  42578e:	sub    edi,edi
  425790:	mov    dl,0x3f
  425792:	ja     0x425718
  425794:	xor    BYTE PTR [edi+0x32],0x80
  425798:	lock xor dl,BYTE PTR [ebx+0x2a]
  42579c:	push   ebx
  42579d:	cld    
  42579e:	mov    dl,0xba
  4257a0:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4257a6:	xor    al,0x84
  4257a9:	arpl   bp,di
  4257ab:	or     DWORD PTR [edi-0x4d],ecx
  4257ae:	dec    ebp
  4257af:	dec    ebp
  4257b0:	dec    ebp
  4257b1:	xor    BYTE PTR [edi-0x7],0x80
  4257b5:	lock stc 
  4257b7:	push   ebx
  4257b8:	cld    
  4257b9:	push   ebx
  4257ba:	sub    dh,BYTE PTR [edx-0x794dd646]
  4257c0:	or     al,0xab
  4257c2:	push   DWORD PTR [edx-0x56740f80]
  4257c8:	push   ebx
  4257c9:	mov    dl,0xa3
  4257cb:	jo     0x4257c8
  4257cd:	out    dx,al
  4257ce:	lea    edx,[edi-0x78127880]
  4257d4:	jno    0x425829
  4257d6:	jo     0x42576b
  4257d8:	fwait
  4257d9:	pop    edi
  4257da:	lock out dx,eax
  4257dc:	or     DWORD PTR [edi],ecx
  4257de:	pop    esp
  4257df:	lea    ecx,[ebp+0x905638d]
  4257e5:	mov    cr1,ebp
  4257e8:	lea    ecx,[ebp+0x2d995c09]
  4257ee:	pop    esi
  4257ef:	and    al,0x38
  4257f1:	lea    ecx,[ebp+0x508af050]
  4257f7:	lock xor dl,BYTE PTR [ebx-0x9]
  4257fb:	push   eax
  4257fc:	lock mov edi,DWORD PTR [ecx-0x49460180]
  425803:	jo     0x425858
  425805:	dec    ebp
  425806:	jl     0x42587f
  425808:	enter  0x4d07,0x4d
  42580c:	dec    ebp
  42580d:	mov    ecx,0xc5d3cb63
  425812:	mov    ecx,0xb98ae780
  425817:	mov    dh,0x7c
  425819:	mov    ecx,0x5c098b53
  42581e:	lock mov eax,DWORD PTR [ecx]
  425821:	and    esp,ebx
  425823:	mov    ecx,0xd70cdf5f
  425828:	pop    ebx
  425829:	or     DWORD PTR [eax+esi*1+0x50],ebx
  42582d:	lock enter 0x63b9,0xfd
  425832:	xlat   BYTE PTR ds:[ebx]
  425833:	iret   
  425834:	or     DWORD PTR [eax+esi*8-0x76],ebx
  425838:	and    BYTE PTR [edi+0x1f65cdef],0x8d
  42583f:	aad    0x53
  425841:	or     DWORD PTR [eax+esi*8-0x76],ebx
  425845:	and    BYTE PTR [edi-0x5f64611],0x21
  42584c:	pop    ds
  42584d:	mov    ecx,0x53b9b2b6
  425852:	std    
  425853:	mov    ecx,0xd5c8f05f
  425858:	and    edi,DWORD PTR [edi+esi*2-0x38]
  42585c:	xchg   BYTE PTR [ebp+0x4d],cl
  42585f:	dec    ebp
  425860:	dec    ebp
  425861:	ja     0x4257ee
  425863:	cmp    ch,0xb9
  425866:	push   ebx
  425867:	mov    cl,0x2d
  425869:	mov    ecx,0x5fb970b6
  42586e:	lock mov esp,esp
  425871:	cmc    
  425872:	les    esp,FWORD PTR [esi+0x7c32774d]
  425878:	ja     0x425842
  42587a:	mov    esi,0x94d4d4d
  42587f:	pop    esp
  425880:	out    0x8a,eax
  425882:	and    BYTE PTR [edi+0x5d7053ef],0x21
  425889:	sub    edx,ebp
  42588b:	pop    ss
  42588c:	dec    ebp
  42588d:	ja     0x425819
  42588f:	in     eax,dx
  425890:	out    0xc8,eax
  425892:	xchg   BYTE PTR [ecx],cl
  425894:	dec    edi
  425895:	ror    BYTE PTR [ebp+0x4d],1
  425898:	dec    ebp
  425899:	push   ebx
  42589a:	push   0xffffffab
  42589c:	mov    ds:0x8deefb70,eax
  4258a1:	xor    al,0x32
  4258a4:	mov    ecx,0x53b9b2b6
  4258a9:	std    
  4258aa:	push   ebx
  4258ab:	push   0xffffffb9
  4258ad:	arpl   WORD PTR [ecx+0x6a16092d],si
  4258b3:	les    eax,FWORD PTR [edx]
  4258b5:	xchg   edi,eax
  4258b6:	add    BYTE PTR [edi-0x6c427813],0x99
  4258bd:	fwait
  4258be:	loop   0x425905
  4258c0:	dec    ebp
  4258c1:	xlat   BYTE PTR ds:[ebx]
  4258c2:	out    dx,eax
  4258c3:	xor    BYTE PTR [edx],0x86
  4258c6:	inc    ebx
  4258c7:	mov    ecx,DWORD PTR [ebp+0x4d]
  4258ca:	add    DWORD PTR [ecx-0x40],edi
  4258cd:	push   eax
  4258ce:	ja     0x4258f6
  4258d0:	add    DWORD PTR [ecx+0x75],edi
  4258d3:	push   eax
  4258d4:	ja     0x425904
  4258d6:	add    DWORD PTR [ecx-0x47],edi
  4258d9:	push   eax
  4258da:	ja     0x425912
  4258dc:	add    DWORD PTR [eax+edx*1-0x73],ecx
  4258e0:	lea    ecx,[ebp+0x13e7750]
  4258e6:	dec    esp
  4258e7:	cmc    
  4258e8:	lea    ecx,[ebp+0x4677508d]
  4258ee:	add    DWORD PTR [edi+ebp*4-0x73],ecx
  4258f2:	lea    ecx,[ebp+0x1627750]
  4258f8:	dec    esp
  4258f9:	mov    BYTE PTR [ebp+0x77508d8d],cl
  4258ff:	push   esi
  425900:	add    DWORD PTR [ecx+esi*2+0x3a],ecx
  425904:	lea    ecx,[ebp+0x15e7750]
  42590a:	dec    esp
  42590b:	aam    0x3a
  42590d:	lea    ecx,[ebp+0x50667750]
  425913:	xlat   BYTE PTR ds:[ebx]
  425914:	push   ds
  425915:	add    DWORD PTR [ebp+edx*4+0x3a],ecx
  425919:	lea    ecx,[ebp-0x7f9588b0]
  42591f:	dec    esp
  425920:	cmp    cl,BYTE PTR ds:[ebp+0x5381808d]
  425927:	jb     0x425979
  425929:	xchg   edi,eax
  42592a:	not    DWORD PTR [eax-0x69]
  42592d:	jp     0x42597f
  42592f:	xchg   edi,eax
  425930:	adc    BYTE PTR [eax-0x69],0x83
  425934:	jl     0x4259ad
  425936:	std    
  425937:	(bad)  [esi-0x79a1ee21]
  42593d:	pop    DWORD PTR [ebx+0x26]
  425940:	push   eax
  425941:	ja     0x4258f2
  425943:	xor    al,0xfd
  425946:	and    bh,0xaf
  425949:	push   ebx
  42594a:	mov    esp,DWORD PTR [edx-0x20a724fb]
  425950:	adc    DWORD PTR [ecx],ecx
  425952:	inc    esi
  425953:	retf   
  425954:	or     al,0xb2
  425956:	popa   
  425957:	or     al,0x50
  425959:	out    0xf9,eax
  42595b:	and    bh,0xfd
  42595e:	and    BYTE PTR [edi+0x53ac80af],0x4d
  425965:	push   ebx
  425966:	test   DWORD PTR [edx+0x2aff29b4],esi
  42596c:	and    bh,0xf9
  42596f:	icebp  
  425970:	lea    ecx,[ebp+0x353cd8d]
  425976:	inc    DWORD PTR [esi]
  425978:	jmp    FWORD PTR [edx]
  42597a:	push   eax
  42597b:	xlat   BYTE PTR ds:[ebx]
  42597c:	mov    ecx,DWORD PTR [ecx]
  42597e:	(bad)  
  425980:	lea    ecx,[ebp-0x8885d73]
  425986:	rcr    ebp,0x86
  425989:	outs   dx,DWORD PTR ds:[esi]
  42598a:	pusha  
  42598b:	mov    esi,0xe26438f
  425990:	lock jp 0x425935
  425993:	ja     0x425917
  425995:	rcr    ebp,0x52
  425998:	or     al,0xe
  42599a:	lock add DWORD PTR [eax-0x287f0210],0xffffffaf
  4259a2:	and    bh,0xfd
  4259a5:	and    BYTE PTR [edi-0x5dcdac51],0x5
  4259ac:	fistp  DWORD PTR [eax-0x21]
  4259af:	adc    DWORD PTR [ecx],ecx
  4259b1:	inc    esi
  4259b2:	add    eax,0x29bcb20c
  4259b7:	mov    dl,0x88
  4259b9:	or     al,0x53
  4259bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4259bc:	push   ebx
  4259bd:	test   edi,edi
  4259bf:	adc    edi,edi
  4259c1:	dec    ebx
  4259c2:	in     eax,dx
  4259c3:	mov    dl,0x4d
  4259c5:	in     eax,dx
  4259c6:	jle    0x425a15
  4259c8:	push   eax
  4259c9:	lock std 
  4259cb:	push   eax
  4259cc:	xlat   BYTE PTR ds:[ebx]
  4259cd:	scas   eax,DWORD PTR es:[edi]
  4259ce:	xor    al,0xf7
  4259d1:	push   eax
  4259d3:	jp     0x4259aa
  4259d5:	and    esp,DWORD PTR [edx+0x36ff777]
  4259db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4259dc:	retf   
  4259dd:	pusha  
  4259de:	sbb    edi,edx
  4259e0:	jp     0x425995
  4259e2:	push   cs
  4259e3:	lock jp 0x425988
  4259e6:	ja     0x42596a
  4259e8:	sti    
  4259e9:	jl     0x4259c7
  4259eb:	int3   
  4259ec:	push   cs
  4259ed:	lock add esp,0x1d
  4259f1:	mov    ds:0xddc1f7f0,al
  4259f6:	xchg   BYTE PTR [ecx+0x30],bh
  4259f9:	ja     0x425a75
  4259fb:	mov    ds:0xddc182b7,al
  425a00:	push   edx
  425a01:	jmp    0x438f:0xbe83b7a2
  425a08:	es xor al,0xfd
  425a0c:	xor    al,0xaf
  425a0f:	and    bh,0xfd
  425a12:	and    BYTE PTR [edi+0x63609af],0xc
  425a19:	mov    dl,0xbe
  425a1b:	sub    DWORD PTR [ebx+0xb],edx
  425a1e:	inc    esi
  425a20:	mov    dl,0xbc
  425a22:	or     al,0xff
  425a24:	sub    ah,BYTE PTR [edx-0x20a726fb]
  425a2a:	adc    DWORD PTR [eax-0x10],edx
  425a2d:	std    
  425a2e:	push   ebx
  425a2f:	xor    dl,BYTE PTR [eax-0x29]
  425a32:	scas   eax,DWORD PTR es:[edi]
  425a33:	xor    al,0xfd
  425a36:	adc    bh,0xaf
  425a39:	and    bh,0xfd
  425a3c:	and    BYTE PTR [edi-0x5dcdac51],0x5
  425a43:	fistp  DWORD PTR [eax-0x21]
  425a46:	adc    DWORD PTR [ecx],ecx
  425a48:	inc    esi
  425a49:	add    eax,0x29bcb20c
  425a4e:	mov    dl,0x88
  425a50:	or     al,0x53
  425a52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425a53:	push   ebx
  425a54:	test   edi,edi
  425a56:	adc    edi,edi
  425a58:	dec    ebx
  425a59:	call   DWORD PTR [ecx+0x9]
  425a5c:	dec    edi
  425a5d:	ror    BYTE PTR [ebp+0x4d],0x4d
  425a61:	adc    bh,0x8b
  425a64:	dec    edi
  425a65:	or     ecx,DWORD PTR [ecx]
  425a67:	mov    cr1,ebp
  425a6a:	lea    ecx,[ebp-0x7f9a8680]
  425a70:	in     eax,0x81
  425a72:	fucomp st(4)
  425a74:	or     eax,0x80359b80
  425a79:	leave  
  425a7a:	and    eax,0x802d7b80
  425a7f:	stos   DWORD PTR es:[edi],eax
  425a80:	sbb    eax,0x97507eec
  425a85:	scas   eax,DWORD PTR es:[edi]
  425a86:	sbb    BYTE PTR [ebx-0x13ae13eb],0xfc
  425a8d:	push   eax
  425a8e:	lock xchg DWORD PTR [eax+0x77],edx
  425a92:	jp     0x425ae4
  425a94:	xchg   edi,eax
  425a95:	enter  0x9463,0xdb
  425a99:	in     al,dx
  425a9a:	push   eax
  425a9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425a9c:	enter  0x7253,0x50
  425aa0:	xchg   edi,eax
  425aa1:	sbb    DWORD PTR [edi-0x69],0xffffffc8
  425aa5:	(bad)  
  425aa7:	(bad)  
  425aa8:	in     al,dx
  425aa9:	xor    BYTE PTR [edi+0x7a],0x80
  425aad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425aae:	scas   eax,DWORD PTR es:[edi]
  425aaf:	or     DWORD PTR [ebp+eiz*1-0x6d],ebx
  425ab3:	arpl   WORD PTR [ebx+0x63b3d31d],bx
  425ab9:	stos   DWORD PTR es:[edi],eax
  425aba:	adc    eax,0xee80a9d3
  425abf:	pop    edx
  425ac0:	adc    BYTE PTR [edi+0x202580ef],0x50
  425ac7:	xchg   edi,eax
  425ac8:	mov    ch,ah
  425aca:	cld    
  425acb:	add    DWORD PTR [edi+0x4304ec1e],edx
  425ad1:	xchg   edi,eax
  425ad2:	out    dx,eax
  425ad3:	push   eax
  425ad4:	ja     0x425b08
  425ad6:	push   eax
  425ad7:	xchg   edi,eax
  425ad8:	jbe    0x425b56
  425ada:	ja     0x425ad5
  425adc:	dec    DWORD PTR [ebp-0x687f7273]
  425ae2:	mov    ch,ch
  425ae4:	(bad)  
  425ae5:	(bad)  
  425ae6:	xlat   BYTE PTR ds:[ebx]
  425ae7:	sub    DWORD PTR [edx],ecx
  425ae9:	xor    BYTE PTR [edi+0x76],0x80
  425aed:	push   ebp
  425aee:	jno    0x425a76
  425af0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425af1:	mov    cl,BYTE PTR [ebp+0x4d]
  425af4:	adc    bh,0x8b
  425af7:	xor    al,0x87
  425afa:	dec    edi
  425afb:	push   0xffffffd5
  425afd:	das    
  425afe:	xor    BYTE PTR [edi-0x76],0x50
  425b02:	sbb    eax,0xed327780
  425b07:	ja     0x425a93
  425b09:	out    dx,al
  425b0a:	dec    ebp
  425b0b:	lock stc 
  425b0d:	xlat   BYTE PTR ds:[ebx]
  425b0e:	mov    dh,0x80
  425b10:	xchg   edi,eax
  425b11:	sbb    eax,0x50
  425b14:	xchg   edi,eax
  425b15:	and    DWORD PTR [ebx-0x69],0xffffffc8
  425b19:	in     al,0xdc
  425b1b:	stos   DWORD PTR es:[edi],eax
  425b1c:	cmp    ah,0xa9
  425b1f:	mov    ds:0x8deefb70,eax
  425b24:	xchg   edi,eax
  425b25:	add    BYTE PTR [edi-0x10287f67],0x4d
  425b2c:	loopne 0x425b60
  425b2e:	cmp    cl,BYTE PTR [ebp-0x10887f73]
  425b34:	xchg   ch,ah
  425b36:	int3   
  425b37:	dec    ebp
  425b38:	dec    ebp
  425b39:	or     BYTE PTR [esi+edi*1+0x3a],0x8d
  425b3e:	lea    edx,[ebx+0x70]
  425b41:	pop    edi
  425b42:	out    dx,eax
  425b43:	test   eax,0x80b21809
  425b48:	mov    dl,0xa7
  425b4a:	sti    
  425b4b:	out    dx,al
  425b4c:	lea    eax,[eax-0x72c5e1e4]
  425b52:	lea    edx,[ebx+0x5e328099]
  425b58:	and    al,0x38
  425b5a:	lea    ecx,[ebp-0x2ac5e3c]
  425b60:	mov    ecx,0x50b970b6
  425b65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425b66:	in     eax,dx
  425b67:	sti    
  425b68:	or     al,0xed
  425b6a:	cld    
  425b6b:	or     al,0x9
  425b6d:	pop    esp
  425b6e:	mov    eax,ds:0xd7fd63b9
  425b73:	pop    es
  425b74:	push   ebx
  425b75:	push   0xffffffa9
  425b77:	mov    ecx,0xce800c50
  425b7c:	push   ds
  425b7d:	cmp    cl,BYTE PTR [ebp-0x648b5c73]
  425b83:	or     BYTE PTR [ebx+0x3a1e4c80],0x8d
  425b8a:	lea    esi,[edx+0x7cec6fbc]
  425b90:	les    esp,FWORD PTR [esi-0x3232fa33]
  425b96:	mov    esi,0x6def10bd
  425b9b:	fmul   DWORD PTR [edi-0x7934325a]
  425ba1:	xlat   BYTE PTR ds:[ebx]
  425ba2:	popa   
  425ba3:	cld    
  425ba4:	lea    ecx,[ebp+0x3a1e4c80]
  425baa:	lea    ecx,[ebp+0x74ab7cec]
  425bb0:	xchg   edi,eax
  425bb1:	add    BYTE PTR [edi-0x72a5785e],0x8d
  425bb8:	lea    edx,[ebx+0x438f8660]
  425bbe:	es cdq 
  425bc0:	fwait
  425bc1:	jl     0x425c3a
  425bc3:	enter  0x58e4,0xdf
  425bc7:	adc    DWORD PTR [eax-0x10],edx
  425bca:	mov    edi,DWORD PTR [edi+esi*2-0x79]
  425bce:	fstp   DWORD PTR [eax-0x21]
  425bd1:	adc    DWORD PTR [eax-0x10],edx
  425bd4:	xor    dl,BYTE PTR [ebx+0x6a]
  425bd7:	jl     0x425c50
  425bd9:	xchg   dh,dh
  425bdb:	and    al,0x6f
  425bdd:	cmp    BYTE PTR [edi+esi*2-0x76],bh
  425be1:	cmc    
  425be2:	and    al,0x6f
  425be4:	cmp    BYTE PTR [edi+esi*2-0x9],bh
  425be8:	call   0x50543b45
  425bed:	lock jp 0x425c6c
  425bf0:	ja     0x425c50
  425bf2:	out    0x58,al
  425bf4:	fist   WORD PTR [ecx]
  425bf6:	push   eax
  425bf7:	lock data16 xor BYTE PTR [edi-0x79],0x80
  425bfd:	xchg   edi,eax
  425bfe:	xor    cl,BYTE PTR [ecx]
  425c00:	inc    esi
  425c01:	test   DWORD PTR [edx+esi*4],0x97800c07
  425c08:	xchg   DWORD PTR [eax-0x74dcd29],eax
  425c0e:	sub    DWORD PTR [edi+eiz*4-0x39],ebp
  425c12:	add    al,0xd4
  425c14:	push   ebx
  425c15:	jl     0x425c6a
  425c17:	or     edi,edi
  425c19:	cld    
  425c1a:	push   eax
  425c1b:	ja     0x425ba0
  425c1d:	add    DWORD PTR [edi-0x7c],esi
  425c20:	push   eax
  425c21:	ja     0x425bd2
  425c23:	xor    BYTE PTR [edi-0x51],0xfa
  425c27:	and    ah,BYTE PTR [edi+ebp*2]
  425c2a:	cmp    BYTE PTR [ebp+ecx*4-0x47],bh
  425c2e:	pop    eax
  425c2f:	fist   WORD PTR [ecx]
  425c31:	push   eax
  425c32:	jge    0x425c22
  425c34:	xor    al,0x8a
  425c37:	adc    BYTE PTR [edi-0x4daeac76],0xbe
  425c3e:	or     al,0xe2
  425c40:	or     eax,0xb2f7539d
  425c45:	clc    
  425c46:	sub    edi,edi
  425c48:	inc    BYTE PTR [eax-0x587f7569]
  425c4e:	mov    dl,BYTE PTR [ebx+0x7e]
  425c51:	mov    dl,0x7
  425c53:	or     al,0x53
  425c55:	xor    BYTE PTR [edx-0x6b00d64c],0xec
  425c5c:	inc    BYTE PTR [eax-0x587f7569]
  425c62:	mov    dl,BYTE PTR [ebx+0x7e]
  425c65:	mov    dl,0x7
  425c67:	or     al,0x53
  425c69:	xor    BYTE PTR [edx-0x6b00d64c],0xec
  425c70:	inc    BYTE PTR [eax-0x587f7569]
  425c76:	mov    dl,BYTE PTR [ebx+0x7e]
  425c79:	mov    dl,0x7
  425c7b:	or     al,0x53
  425c7d:	xor    BYTE PTR [edx-0x6b00d64c],0xec
  425c84:	(bad)  
  425c85:	push   eax
  425c86:	add    DWORD PTR [edx+0x4d],edx
  425c89:	dec    ebp
  425c8a:	dec    ebp
  425c8b:	xor    al,0x86
  425c8e:	adc    BYTE PTR [edi+0x53f75386],0x51
  425c95:	mov    dl,0xf8
  425c97:	sub    DWORD PTR [edx-0x100f342],esi
  425c9d:	adc    BYTE PTR [edi-0x79587f7a],0x53
  425ca4:	jle    0x425cf9
  425ca6:	xor    BYTE PTR [edx-0x4b4df3f9],0x29
  425cad:	call   DWORD PTR [eax+edx*2+0x4dd51841]
  425cb4:	dec    ebp
  425cb5:	dec    ebp
  425cb6:	xor    al,0x21
  425cb9:	xor    BYTE PTR [eax],0x80
  425cbc:	xchg   edi,eax
  425cbd:	mov    al,BYTE PTR [eax+0x7f808aa7]
  425cc3:	or     dl,BYTE PTR [ebx-0x7e]
  425cc6:	push   ebx
  425cc7:	jle    0x425c7b
  425cc9:	pop    es
  425cca:	or     al,0xb2
  425ccc:	mov    ah,0x29
  425cce:	call   DWORD PTR [eax+edx*2+0x4dd51841]
  425cd5:	dec    ebp
  425cd6:	dec    ebp
  425cd7:	xor    al,0x71
  425cda:	adc    BYTE PTR [edi+0x53f75371],0x51
  425ce1:	mov    dl,0xf8
  425ce3:	sub    DWORD PTR [edx-0x100f342],esi
  425ce9:	adc    BYTE PTR [edi-0x75587f76],0x53
  425cf0:	add    BYTE PTR [eax+0x7e538a77],0xb2
  425cf7:	pop    es
  425cf8:	or     al,0xb2
  425cfa:	mov    ah,0x29
  425cfc:	call   DWORD PTR [eax+eax*4-0x3ac7559]
  425d03:	mov    dl,0x86
  425d05:	or     al,0xed
  425d07:	(bad)  
  425d08:	or     eax,0xff29b4b2
  425d0d:	je     0x425cfb
  425d0f:	test   DWORD PTR [eax+0x41501577],0x4d4dd518
  425d19:	dec    ebp
  425d1a:	xor    al,0x15
  425d1d:	in     eax,dx
  425d1e:	add    eax,0x29bab20d
  425d23:	push   ebx
  425d24:	cld    
  425d25:	mov    dl,0x86
  425d27:	or     al,0xff
  425d29:	mov    dl,0x80
  425d2b:	lock mov al,BYTE PTR [eax-0x3d127569]
  425d32:	or     eax,0xf8b25153
  425d37:	sub    DWORD PTR [edx-0x100f342],esi
  425d3d:	adc    BYTE PTR [edi-0x75587f76],0x53
  425d44:	jle    0x425d33
  425d46:	(bad)  
  425d47:	or     eax,0xb20c07b2
  425d4c:	mov    ah,0x29
  425d4e:	call   DWORD PTR [esp+ebp*8-0x75687f02]
  425d55:	and    BYTE PTR [edi-0x1281ac76],0xc6
  425d5c:	or     eax,0xb229b4b2
  425d61:	pop    es
  425d62:	or     al,0xff
  425d64:	xchg   esp,eax
  425d65:	in     al,dx
  425d66:	(bad)  
  425d67:	push   eax
  425d68:	xend   
  425d6b:	dec    ebp
  425d6c:	dec    ebp
  425d6d:	dec    ebp
  425d6e:	add    DWORD PTR [edi+0x52],ecx
  425d71:	dec    ebp
  425d72:	dec    ebp
  425d73:	dec    ebp
  425d74:	or     al,BYTE PTR [eax-0xf7f7589]
  425d7a:	mov    ah,dl
  425d7c:	or     eax,0x53fc53a3
  425d81:	adc    DWORD PTR [edx-0x454df37a],esi
  425d87:	sub    edi,edi
  425d89:	mov    dl,0xa
  425d8b:	xor    BYTE PTR [edi+0x2d],0x1
  425d8f:	adc    ch,dh
  425d91:	lea    ecx,[ebp-0x327f6973]
  425d97:	cmp    cl,BYTE PTR ds:[ebp+0x4d814d8d]
  425d9e:	xchg   edi,eax
  425d9f:	and    eax,0x5055f080
  425da4:	cmp    al,BYTE PTR [eax-0xf7f7b89]
  425daa:	stc    
  425dab:	or     DWORD PTR [esi-0x3],eax
  425dae:	or     al,0xb2
  425db0:	mov    esi,0x84f0800c
  425db5:	adc    BYTE PTR [edi+0x537c53f9],0x72
  425dbc:	push   edi
  425dbe:	stos   BYTE PTR es:[edi],al
  425dbf:	dec    ebp
  425dc0:	xlat   BYTE PTR ds:[ebx]
  425dc1:	xor    eax,0x4d29bab2
  425dc6:	xlat   BYTE PTR ds:[ebx]
  425dc7:	inc    ebp
  425dc8:	xchg   ah,cl
  425dca:	add    eax,0x77804d4d
  425dcf:	test   BYTE PTR [eax+0x4609f9f0],al
  425dd5:	std    
  425dd6:	or     al,0xb2
  425dd8:	mov    esi,0x84f0800c
  425ddd:	adc    BYTE PTR [edi+0x537c53f9],0x72
  425de4:	push   edi
  425de6:	stos   BYTE PTR es:[edi],al
  425de7:	dec    ebp
  425de8:	xlat   BYTE PTR ds:[ebx]
  425de9:	push   ebp
  425dea:	mov    dl,0xba
  425dec:	sub    DWORD PTR [ebp-0x29],ecx
  425def:	cmp    eax,0x4d059886
  425df4:	dec    ebp
  425df5:	xor    BYTE PTR [edi-0x76],0x80
  425df9:	lock mov dl,BYTE PTR [ebx+0x11]
  425dfd:	mov    dl,0xba
  425dff:	sub    DWORD PTR [ebx-0x4],edx
  425e02:	mov    dl,0x86
  425e04:	or     al,0xff
  425e06:	mov    dl,0x80
  425e08:	lock mov al,BYTE PTR [eax+0x51538a97]
  425e0f:	mov    dl,0xbe
  425e11:	or     al,0x53
  425e13:	xchg   esp,eax
  425e14:	mov    dl,0xf8
  425e16:	sub    edi,edi
  425e18:	(bad)  
  425e19:	in     al,dx
  425e1a:	mov    dl,0x80
  425e1c:	lock mov al,BYTE PTR [eax+0x51538a97]
  425e23:	mov    dl,0xbe
  425e25:	or     al,0x53
  425e27:	xchg   esp,eax
  425e28:	mov    dl,0xf8
  425e2a:	sub    edi,edi
  425e2c:	(bad)  
  425e2d:	in     al,dx
  425e2e:	mov    dl,0x80
  425e30:	lock mov al,BYTE PTR [eax+0x51538a97]
  425e37:	mov    dl,0xbe
  425e39:	or     al,0x53
  425e3b:	xchg   esp,eax
  425e3c:	mov    dl,0xf8
  425e3e:	sub    edi,edi
  425e40:	(bad)  
  425e41:	in     al,dx
  425e42:	mov    dl,0x50
  425e44:	dec    edi
  425e45:	push   edx
  425e46:	dec    ebp
  425e47:	dec    ebp
  425e48:	dec    ebp
  425e49:	xor    BYTE PTR [edi+0x55],0x80
  425e4d:	lea    eax,[eax-0x687f7910]
  425e53:	xchg   BYTE PTR [ebx+0x51],dl
  425e56:	push   ebx
  425e57:	xchg   esp,eax
  425e58:	mov    dl,0xbe
  425e5a:	or     al,0xb2
  425e5c:	clc    
  425e5d:	sub    edi,edi
  425e5f:	(bad)  
  425e60:	push   eax
  425e61:	xend   
  425e64:	dec    ebp
  425e65:	dec    ebp
  425e66:	dec    ebp
  425e67:	xor    BYTE PTR [edi+0x21],0x80
  425e6b:	lea    eax,[eax-0x687f7510]
  425e71:	mov    dl,BYTE PTR [ebx+0x51]
  425e74:	mov    dl,0xbe
  425e76:	or     al,0x80
  425e78:	ins    DWORD PTR es:[edi],dx
  425e79:	or     dl,BYTE PTR [ebx-0x6c]
  425e7c:	mov    dl,0xf8
  425e7e:	sub    edi,edi
  425e80:	(bad)  
  425e81:	push   eax
  425e82:	xend   
  425e85:	dec    ebp
  425e86:	dec    ebp
  425e87:	dec    ebp
  425e88:	xor    BYTE PTR [edi+0x1d],0x80
  425e8c:	lock sbb eax,0xbab21153
  425e92:	sub    DWORD PTR [ebx-0x4],edx
  425e95:	mov    dl,0x86
  425e97:	or     al,0xff
  425e99:	mov    dl,0x80
  425e9b:	lock mov al,BYTE PTR [eax-0x6bac7569]
  425ea2:	push   ebx
  425ea3:	push   ecx
  425ea4:	mov    dl,0xf8
  425ea6:	sub    DWORD PTR [edx-0x100f342],esi
  425eac:	adc    BYTE PTR [edi-0x75587f76],0x53
  425eb3:	jle    0x425e67
  425eb5:	pop    es
  425eb6:	or     al,0xed
  425eb8:	(bad)  
  425eb9:	or     eax,0xff29b4b2
  425ebe:	xchg   esp,eax
  425ebf:	in     al,dx
  425ec0:	(bad)  
  425ec1:	push   eax
  425ec2:	xend   
  425ec5:	dec    ebp
  425ec6:	dec    ebp
  425ec7:	dec    ebp
  425ec8:	xor    BYTE PTR [edi-0x76],0x80
  425ecc:	lock mov ch,ch
  425ecf:	add    eax,0x29bab20d
  425ed4:	push   ebx
  425ed5:	cld    
  425ed6:	mov    dl,0x86
  425ed8:	or     al,0xff
  425eda:	mov    dl,0x80
  425edc:	lock mov al,BYTE PTR [eax-0x3d127569]
  425ee3:	or     eax,0xf8b25153
  425ee8:	sub    DWORD PTR [edx-0x100f342],esi
  425eee:	in     al,dx
  425eef:	mov    dl,0x80
  425ef1:	lock mov al,BYTE PTR [eax-0x3d127569]
  425ef8:	or     eax,0xf8b25153
  425efd:	sub    DWORD PTR [edx-0x100f342],esi
  425f03:	add    DWORD PTR [eax],ebx
  425f05:	push   edx
  425f06:	dec    ebp
  425f07:	dec    ebp
  425f08:	dec    ebp
  425f09:	stos   BYTE PTR es:[edi],al
  425f0a:	adc    BYTE PTR [edi-0x75587f76],0xec
  425f11:	mov    dl,0x53
  425f13:	jle    0x425f16
  425f15:	lock adc DWORD PTR [eax+0x41],0x4f
  425f1a:	aad    0x4d
  425f1c:	dec    ebp
  425f1d:	dec    ebp
  425f1e:	xor    BYTE PTR [edi+0x2d],0xed
  425f22:	(bad)  
  425f23:	or     eax,0xb20c07b2
  425f28:	mov    ah,0x29
  425f2a:	call   DWORD PTR [ecx+eax*1-0x727277f0]
  425f31:	lea    eax,[eax-0x72c5c133]
  425f37:	lea    ebp,[edx+0x4d814d96]
  425f3d:	xchg   edi,eax
  425f3e:	and    eax,0xbdd56a4f
  425f43:	xor    BYTE PTR [edi-0x79],0x80
  425f47:	lock xor cl,BYTE PTR [ecx]
  425f4a:	inc    esi
  425f4b:	std    
  425f4c:	or     al,0xb2
  425f4e:	mov    esi,0x80b6800c
  425f53:	std    
  425f54:	xor    BYTE PTR [edi-0x79],0x80
  425f58:	xchg   edi,eax
  425f59:	xor    dl,BYTE PTR [ebx+0x72]
  425f5c:	push   ebx
  425f5d:	sub    dh,BYTE PTR [edx+0x77802984]
  425f63:	and    edi,edi
  425f65:	inc    BYTE PTR [eax+0xada6371]
  425f6b:	adc    BYTE PTR [edi-0x7faa3bab],0xc
  425f72:	and    BYTE PTR [edi-0xda707f],0x10
  425f79:	and    eax,0xc87780ef
  425f7e:	xor    al,0x8b
  425f81:	or     DWORD PTR [esi-0x3],eax
  425f84:	or     al,0xb2
  425f86:	mov    esi,0xc8f0800c
  425f8b:	and    BYTE PTR [edi+0x537c538b],0xa4
  425f92:	mov    dl,0xba
  425f94:	sub    DWORD PTR [eax+0x74ff71f0],eax
  425f9a:	in     al,dx
  425f9b:	std    
  425f9c:	xor    BYTE PTR [edi+0x21],0x80
  425fa0:	sbb    eax,0x500a0063
  425fa5:	lock jno 0x425f8c
  425fa8:	jl     0x425f6e
  425faa:	outs   dx,DWORD PTR ds:[esi]
  425fab:	adc    BYTE PTR [edi+0x21778055],0x80
  425fb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425fb3:	xor    BYTE PTR [eax+0x50659fec],0x1d
  425fba:	sbb    BYTE PTR ds:0x80eca680,0x2e
  425fc1:	lea    ecx,[ebp+0x71f0508d]
  425fc7:	and    BYTE PTR [esi+0x4381a780],0x11
  425fce:	and    BYTE PTR [edi-0x7f00af11],0x8d
  425fd5:	and    BYTE PTR [esi-0x7fc28214],0x77
  425fdc:	xchg   DWORD PTR [eax-0x10],edx
  425fdf:	scas   eax,DWORD PTR es:[edi]
  425fe0:	xor    al,0x32
  425fe3:	or     DWORD PTR [esi-0x3],eax
  425fe6:	or     al,0xb2
  425fe8:	mov    esi,0x87f0800c
  425fed:	and    BYTE PTR [edi+0x537c5332],0xa4
  425ff4:	mov    dl,0xba
  425ff6:	sub    edi,edi
  425ff8:	je     0x42604a
  425ffa:	ja     0x426041
  425ffc:	xor    BYTE PTR [edi+0x71],0xbe
  426000:	lds    edi,FWORD PTR [edx]
  426002:	lea    ecx,[ebp-0x7f788880]
  426008:	lock xor cl,BYTE PTR [ecx]
  42600b:	inc    esi
  42600c:	std    
  42600d:	or     al,0xb2
  42600f:	mov    esi,0x87f0800c
  426014:	and    BYTE PTR [edi+0x29bab232],0x80
  42601b:	lock adc eax,0xa4537c53
  426021:	in     eax,dx
  426022:	mov    dl,0x8b
  426024:	push   DWORD PTR [esi+esi*4-0x42]
  426028:	arpl   WORD PTR [edx-0x72f412f7],si
  42602e:	lea    ecx,[ebp+0x171a780]
  426034:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426035:	jae    0x426026
  426037:	inc    ebx
  426038:	std    
  426039:	push   eax
  42603a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42603b:	xor    eax,0x803df050
  426040:	lock test DWORD PTR [eax+0x46097a77],0x86b20cb2
  42604b:	or     al,0x80
  42604d:	ja     0x426046
  42604f:	and    BYTE PTR [edi+0x2984b27a],0x80
  426056:	ja     0x426020
  426058:	push   ebx
  426059:	sub    dl,BYTE PTR [ebx-0x5c]
  42605c:	call   DWORD PTR [ecx]
  42605e:	and    BYTE PTR [edi-0x7db9f675],0xc
  426065:	push   eax
  426066:	ja     0x4260bd
  426068:	xor    BYTE PTR [edi-0x38],0x6e
  42606c:	out    0x55,eax
  42606e:	in     eax,dx
  42606f:	mov    dl,0xa6
  426071:	mov    dl,0xc4
  426073:	or     al,0x80
  426075:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426076:	mov    edx,DWORD PTR [ebx-0x5c]
  426079:	xor    BYTE PTR [edi+0x55b79455],ah
  42607f:	and    BYTE PTR [edi-0x740f7f38],0x9
  426086:	inc    esi
  426087:	adc    DWORD PTR [edx+esi*4],ecx
  42608a:	test   BYTE PTR [ecx],ch
  42608c:	xor    BYTE PTR [edi-0x38],0xb2
  426090:	mov    esi,0x8bf0800c
  426095:	push   ebx
  426096:	jo     0x42604a
  426098:	test   BYTE PTR [ecx],ch
  42609a:	xor    BYTE PTR [edi+0x55],0x53
  42609e:	lods   al,BYTE PTR ds:[esi]
  42609f:	jmp    DWORD PTR [eax+0x935f080]
  4260a5:	pop    esp
  4260a6:	xor    BYTE PTR [ebx+0x74],al
  4260a9:	xor    esi,DWORD PTR [edx+0x50f7f080]
  4260af:	ja     0x426106
  4260b1:	xor    BYTE PTR [edi+0x7a],0x9
  4260b5:	inc    esi
  4260b6:	mov    dl,0xc
  4260b8:	mov    dl,0x86
  4260ba:	or     al,0x80
  4260bc:	ja     0x4260b5
  4260be:	and    BYTE PTR [edi+0x2984b27a],0x80
  4260c5:	ja     0x4260fc
  4260c7:	or     DWORD PTR [ebp+ecx*4-0x33],ebx
  4260cb:	add    eax,0xa6a453a7
  4260d0:	adc    ebp,ecx
  4260d2:	mov    dl,0xa6
  4260d4:	xchg   esp,eax
  4260d5:	xchg   BYTE PTR [ebx+0x70],dl
  4260d8:	xchg   BYTE PTR fs:[edi+0x36092643],cl
  4260df:	mov    dl,0xc
  4260e1:	mov    dl,0x84
  4260e3:	or     al,0x57
  4260e5:	fstp   DWORD PTR [eax-0x21]
  4260e8:	adc    DWORD PTR [ebx+0x11],edx
  4260eb:	addr16 out 0x58,al
  4260ee:	fist   WORD PTR [ecx]
  4260f0:	xlat   BYTE PTR ds:[ebx]
  4260f1:	aaa    
  4260f2:	arpl   WORD PTR [ecx],dx
  4260f4:	xlat   BYTE PTR ds:[ebx]
  4260f5:	dec    esi
  4260f6:	or     BYTE PTR [eax+eax*4],0xf0
  4260fa:	jno    0x4260e8
  4260fc:	cmp    al,BYTE PTR [eax+0x65ed55f0]
  426102:	out    dx,eax
  426103:	(bad)  
  426104:	aad    0xe
  426106:	or     BYTE PTR [eax+eax*4],0xf0
  42610a:	jno    0x4260f8
  42610c:	cmp    al,BYTE PTR [eax+0x77eceff0]
  426112:	push   ebp
  426113:	xor    BYTE PTR [eax],0x3a
  426116:	out    dx,eax
  426117:	in     eax,dx
  426118:	ja     0x42614f
  42611a:	or     al,0x4d
  42611c:	lock cmp eax,0x4d234f09
  426122:	dec    ebp
  426123:	dec    ebp
  426124:	les    ebp,FWORD PTR [edi]
  426126:	xchg   BYTE PTR fs:[edi+0x77802643],cl
  42612d:	adc    eax,0x7c45773a
  426132:	ja     0x42619e
  426134:	rcr    BYTE PTR [eax-0x21],1
  426137:	adc    DWORD PTR [eax-0x59],edx
  42613a:	jbe    0x4260bc
  42613c:	ja     0x4261a8
  42613e:	xor    al,0x76
  426141:	or     DWORD PTR [esi-0x3],eax
  426144:	or     al,0xb2
  426146:	mov    esi,0x6af0800c
  42614b:	and    BYTE PTR [edi+0x29bab276],0x80
  426152:	lock and DWORD PTR [eax+0x537c5330],eax
  426159:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42615a:	push   DWORD PTR [ecx+eax*1+0x75]
  42615e:	mov    dl,0xe5
  426160:	xor    al,0x45
  426163:	arpl   di,bp
  426165:	rcl    DWORD PTR [ebp-0x80],cl
  426168:	ja     0x4261db
  42616a:	in     al,dx
  42616b:	ja     0x426182
  42616d:	push   eax
  42616e:	ja     0x4261e1
  426170:	sub    BYTE PTR [ebp-0x12],0x50
  426174:	ja     0x42618b
  426176:	xor    BYTE PTR [edi-0x79],0x80
  42617a:	lock xor cl,BYTE PTR [ecx]
  42617d:	inc    esi
  42617e:	std    
  42617f:	or     al,0xb2
  426181:	mov    esi,0x87f0800c
  426186:	and    BYTE PTR [edi+0x53a45332],0x7c
  42618d:	push   DWORD PTR [edx+esi*4-0x46]
  426191:	sub    DWORD PTR [edi+0x77],ebx
  426194:	adc    eax,0xdbf4f09
  426199:	dec    ebp
  42619a:	dec    ebp
  42619b:	xor    al,0x8a
  42619e:	adc    BYTE PTR [edi-0x4daeac76],0xbe
  4261a5:	or     al,0xe2
  4261a7:	or     eax,0xb2f7539d
  4261ac:	clc    
  4261ad:	sub    edi,edi
  4261af:	inc    BYTE PTR [eax-0x587f7569]
  4261b5:	mov    dl,BYTE PTR [ebx+0x7e]
  4261b8:	mov    dl,0x7
  4261ba:	or     al,0x53
  4261bc:	xor    BYTE PTR [edx-0x6b00d64c],0xec
  4261c3:	inc    BYTE PTR [eax-0x587f7569]
  4261c9:	mov    dl,BYTE PTR [ebx+0x7e]
  4261cc:	mov    dl,0x7
  4261ce:	or     al,0x53
  4261d0:	xor    BYTE PTR [edx-0x6b00d64c],0xec
  4261d7:	inc    BYTE PTR [eax-0x587f7569]
  4261dd:	mov    dl,BYTE PTR [ebx+0x7e]
  4261e0:	push   ebx
  4261e1:	xor    BYTE PTR [edx-0x4b4df3f9],0x29
  4261e8:	call   DWORD PTR [esp+ebp*8+0x520150fe]
  4261ef:	dec    ebp
  4261f0:	dec    ebp
  4261f1:	dec    ebp
  4261f2:	xor    al,0x81
  4261f5:	adc    BYTE PTR [edi-0x79587f7a],0x53
  4261fc:	jle    0x426251
  4261fe:	xor    BYTE PTR [edx-0x4b4df3f9],0x29
  426205:	call   DWORD PTR [eax+edx*2+0x4dd51841]
  42620c:	dec    ebp
  42620d:	dec    ebp
  42620e:	xor    al,0x21
  426211:	xor    BYTE PTR [eax],0x80
  426214:	xchg   edi,eax
  426215:	mov    al,BYTE PTR [eax+0x7f808aa7]
  42621b:	or     dl,BYTE PTR [ebx+0x7e]
  42621e:	push   ebx
  42621f:	xor    BYTE PTR [edx-0x4b4df3f9],0x29
  426226:	call   DWORD PTR [eax+edx*2+0x4dd51841]
  42622d:	dec    ebp
  42622e:	dec    ebp
  42622f:	xor    al,0x1d
  426232:	adc    BYTE PTR [edi-0x4d08ace3],0xf8
  426239:	sub    DWORD PTR [ebx+0x51],edx
  42623c:	mov    dl,0xbe
  42623e:	or     al,0xff
  426240:	inc    BYTE PTR [eax-0x587f7569]
  426246:	mov    dl,BYTE PTR [ebx-0x7e]
  426249:	xor    BYTE PTR [edi-0x76],0x53
  42624d:	jle    0x426201
  42624f:	mov    ah,0x29
  426251:	mov    dl,0x7
  426253:	or     al,0xff
  426255:	xchg   esp,eax
  426256:	and    BYTE PTR [edi-0x1203ac76],0xc6
  42625d:	or     eax,0xb20c86b2
  426262:	mov    ah,0x29
  426264:	push   DWORD PTR [esp+ebp*8-0x9]
  426268:	push   eax
  426269:	inc    ecx
  42626a:	sbb    ch,dl
  42626c:	dec    ebp
  42626d:	dec    ebp
  42626e:	dec    ebp
  42626f:	xor    al,0x8a
  426272:	adc    BYTE PTR [edi-0x4daeac76],0xbe
  426279:	or     al,0xe2
  42627b:	or     eax,0xb2f7539d
  426280:	clc    
  426281:	sub    edi,edi
  426283:	inc    BYTE PTR [eax-0x587f7569]
  426289:	mov    dl,BYTE PTR [ebx+0x7e]
  42628c:	mov    dl,0x7
  42628e:	or     al,0x53
  426290:	xor    BYTE PTR [edx-0x6b00d64c],0xec
  426297:	inc    BYTE PTR [eax-0x587f7569]
  42629d:	mov    dl,BYTE PTR [ebx+0x7e]
  4262a0:	mov    dl,0x7
  4262a2:	or     al,0x53
  4262a4:	xor    BYTE PTR [edx-0x6b00d64c],0xec
  4262ab:	inc    BYTE PTR [ecx]
  4262ad:	xchg   edi,eax
  4262ae:	adc    DWORD PTR [eax+0x16],0x1
  4262b2:	aad    0x4d
  4262b4:	dec    ebp
  4262b5:	dec    ebp
  4262b6:	add    DWORD PTR [ecx],eax
  4262b8:	push   edx
  4262b9:	dec    ebp
  4262ba:	dec    ebp
  4262bb:	dec    ebp
  4262bc:	xchg   esi,eax
  4262bd:	xor    al,0x8a
  4262c0:	adc    BYTE PTR [edi-0x7faeac76],0xd7
  4262c7:	sub    eax,0xbeb2f753
  4262cc:	or     al,0xb2
  4262ce:	clc    
  4262cf:	sub    edi,edi
  4262d1:	(bad)  
  4262d2:	xchg   esi,eax
  4262d3:	add    DWORD PTR [eax+ecx*4-0x73],ecx
  4262d7:	lea    ecx,[ebp+0x3e4c800a]
  4262dd:	cmp    cl,BYTE PTR [ebp+0x4d814d8d]
  4262e3:	xchg   edi,eax
  4262e4:	and    eax,0x3acd4c80
  4262e9:	lea    ecx,[ebp-0x7fde88b0]
  4262ef:	ja     0x4262e0
  4262f1:	sub    bh,0xec
  4262f4:	lock and DWORD PTR [eax-0x10],edx
  4262f8:	and    DWORD PTR [eax-0x687f3710],eax
  4262fe:	mov    ecx,DWORD PTR [ecx]
  426300:	inc    esi
  426301:	mov    dh,0xc
  426303:	mov    dl,0x7
  426305:	or     al,0x80
  426307:	xchg   edi,eax
  426308:	enter  0xd780,0x8b
  42630c:	push   ebx
  42630d:	or     esi,DWORD PTR [edx-0x687fd608]
  426313:	enter  0x2a53,0xff
  426317:	push   ecx
  426318:	adc    bh,0x8b
  42631b:	or     DWORD PTR [esi-0x3e],eax
  42631e:	or     al,0xb2
  426320:	mov    BYTE PTR [eax+eax*4],cl
  426323:	xlat   BYTE PTR ds:[ebx]
  426324:	enter  0xa780,0x8b
  426328:	push   ebx
  426329:	pushf  
  42632a:	push   ebx
  42632b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42632c:	call   DWORD PTR [esp+ebp*8-0x37687f02]
  426333:	mov    dl,0x2
  426335:	sub    DWORD PTR [eax+0x46098bd7],eax
  42633b:	ret    0xb20c
  42633e:	mov    BYTE PTR [eax+eax*4],cl
  426341:	xlat   BYTE PTR ds:[ebx]
  426342:	enter  0xa780,0x8b
  426346:	push   ebx
  426347:	pushf  
  426348:	push   ebx
  426349:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42634a:	call   DWORD PTR [esp+ebp*8-0x37687f02]
  426351:	mov    dl,0x2
  426353:	sub    DWORD PTR [eax+0x46098bd7],eax
  426359:	ret    0xb20c
  42635c:	mov    BYTE PTR [eax+eax*4],cl
  42635f:	xlat   BYTE PTR ds:[ebx]
  426360:	enter  0x9c53,0x80
  426364:	out    0x8b,eax
  426366:	push   ebx
  426367:	dec    ebp
  426368:	call   FWORD PTR [esp+ebp*8+0x4d0a96fe]
  42636f:	xlat   BYTE PTR ds:[ebx]
  426370:	and    DWORD PTR [edx-0x6979d6fe],esi
  426376:	xchg   DWORD PTR [ebp+0x4d],ecx
  426379:	xor    BYTE PTR [edi-0x51],0xab
  42637d:	test   eax,0x81fb70a3
  426382:	lea    edx,[edi-0x78127880]
  426388:	inc    ebp
  426389:	xchg   ebx,eax
  42638a:	cdq    
  42638b:	fwait
  42638c:	push   ebx
  42638d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42638e:	push   ebx
  42638f:	jo     0x42640d
  426391:	ja     0x426315
  426393:	fstp   DWORD PTR [eax-0x21]
  426396:	adc    DWORD PTR [esi-0x7a],ebx
  426399:	pop    DWORD PTR [ebx+0x26]
  42639c:	push   eax
  42639d:	ja     0x426322
  42639f:	jl     0x426418
  4263a1:	xchg   ah,ah
  4263a3:	pop    eax
  4263a4:	fist   WORD PTR [ecx]
  4263a6:	push   eax
  4263a7:	ja     0x426330
  4263a9:	jl     0x426422
  4263ab:	xchg   esi,esi
  4263ad:	mov    ds:0x777c386f,eax
  4263b2:	enter  0xe9f6,0x6f
  4263b6:	cmp    BYTE PTR [edi+esi*2+0x32],bh
  4263ba:	cli    
  4263bb:	and    al,0x6f
  4263bd:	cmp    BYTE PTR [edi+esi*2+0x32],bh
  4263c1:	hlt    
  4263c2:	and    al,0x6f
  4263c4:	cmp    BYTE PTR [edi+esi*2-0x75],bh
  4263c8:	mul    BYTE PTR [esi+ebp*8]
  4263cb:	cmp    BYTE PTR [ecx],al
  4263cd:	ja     0x4263bd
  4263cf:	push   eax
  4263d0:	ja     0x42635d
  4263d2:	xor    BYTE PTR [edi+0x1d],0x80
  4263d6:	bound  esi,QWORD PTR [esi]
  4263d8:	cmp    cl,BYTE PTR [ebp+0x1d77808d]
  4263de:	xor    al,0x1d
  4263e1:	or     ch,0x2e
  4263e4:	cmp    cl,BYTE PTR [ebp-0x7f8e7f73]
  4263ea:	pop    ebp
  4263eb:	in     al,dx
  4263ec:	out    0x65,al
  4263ee:	adc    BYTE PTR [edi+0x26508082],0x3a
  4263f5:	lea    ecx,[ebp-0x7f0618b0]
  4263fb:	out    0x83,eax
  4263fd:	or     DWORD PTR [esi-0x7b],eax
  426400:	or     al,0xb2
  426402:	popa   
  426403:	or     al,0x80
  426405:	out    0x82,eax
  426407:	and    BYTE PTR [edi-0x583d5d7d],0xc7
  42640e:	add    al,0xd4
  426410:	push   ebx
  426411:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426412:	mov    dl,0xbc
  426414:	sub    DWORD PTR [eax+0x6394ff5f],eax
  42641a:	pushf  
  42641b:	xlat   BYTE PTR ds:[ebx]
  42641c:	push   edx
  42641d:	sbb    BYTE PTR [ecx],0x50
  426420:	xchg   edi,eax
  426421:	mov    eax,DWORD PTR [eax-0x687fea69]
  426427:	jno    0x4263a9
  426429:	xchg   edi,eax
  42642a:	and    DWORD PTR [ecx],eax
  42642c:	xchg   edi,eax
  42642d:	test   BYTE PTR [edx-0x697428b3],ch
  426433:	or     bl,BYTE PTR [ecx+0x11dd74d]
  426439:	ja     0x426434
  42643b:	dec    ebp
  42643c:	xlat   BYTE PTR ds:[ebx]
  42643d:	out    dx,eax
  42643e:	dec    ebp
  42643f:	xlat   BYTE PTR ds:[ebx]
  426440:	enter  0xd74d,0x32
  426444:	dec    ebp
  426445:	xlat   BYTE PTR ds:[ebx]
  426446:	xchg   DWORD PTR [edx],ecx
  426448:	add    DWORD PTR [edi-0x76],esi
  42644b:	or     al,BYTE PTR [esi+0x4d4d4bab]
  426451:	push   eax
  426452:	ja     0x426471
  426454:	xor    BYTE PTR [edi+0x1d],0x80
  426458:	lock and eax,0x80159250
  42645e:	ja     0x426485
  426460:	jl     0x4263ef
  426462:	in     al,dx
  426463:	lea    ecx,[ebp-0x7b887f73]
  426469:	xor    al,0x25
  42646c:	push   eax
  42646d:	xchg   edx,eax
  42646e:	out    dx,al
  42646f:	xor    BYTE PTR [edi+0x71],0x80
  426473:	lock and eax,0x80ef9250
  426479:	ja     0x426490
  42647b:	xor    al,0x25
  42647e:	push   eax
  42647f:	xchg   edx,eax
  426480:	and    DWORD PTR [eax+0x6d7c2577],eax
  426486:	and    eax,0x8d8d8d3a
  42648b:	les    ebx,FWORD PTR [edi]
  42648d:	xor    BYTE PTR [edi+0x1d],0x80
  426491:	lock sbb eax,0x3a2ecd80
  426497:	lea    ecx,[ebp+0x3a265080]
  42649d:	lea    ecx,[ebp+0x3a438d80]
  4264a3:	push   eax
  4264a4:	ja     0x426430
  4264a6:	xor    BYTE PTR [edi-0x76],0xab
  4264aa:	test   eax,0x1dfb70a3
  4264af:	lea    edx,[edi+0x77808780]
  4264b5:	and    DWORD PTR [edx-0x72c5c179],esp
  4264bb:	lea    edx,[ebx-0x9986467]
  4264c1:	and    al,0x6f
  4264c3:	cmp    BYTE PTR [ecx],cl
  4264c5:	dec    edi
  4264c6:	mov    esi,0x808d8da6
  4264cb:	ja     0x42653e
  4264cd:	addr16 cmc 
  4264cf:	and    al,0x6f
  4264d1:	cmp    BYTE PTR [ecx],cl
  4264d3:	dec    edi
  4264d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4264d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4264d6:	lea    ecx,[ebp-0x26788884]
  4264dc:	pop    eax
  4264dd:	fist   WORD PTR [ecx]
  4264df:	pop    esi
  4264e0:	xchg   BYTE PTR [edi+0x77502643],cl
  4264e6:	xor    bh,BYTE PTR [edi+esi*2-0x7]
  4264ea:	in     al,0x58
  4264ec:	fist   WORD PTR [ecx]
  4264ee:	push   eax
  4264ef:	ja     0x426477
  4264f1:	xor    BYTE PTR [edi-0x11],0x50
  4264f5:	ja     0x4264bf
  4264f7:	xor    BYTE PTR [edi-0x38],0x80
  4264fb:	int    0x86
  4264fd:	cmp    cl,BYTE PTR [ebp-0x7f727f73]
  426503:	lea    edx,[eax+0x77]
  426506:	mov    esp,DWORD PTR [eax+0x7f]
  426509:	cmp    BYTE PTR [ebp+0x38975e8d],cl
  42650f:	lea    ecx,[ebp+0x5a7750b9]
  426515:	in     eax,dx
  426516:	push   0xd
  426518:	mov    ecx,0x80d17750
  42651d:	mov    dl,0xb9
  42651f:	push   eax
  426520:	ja     0x426538
  426522:	pop    esi
  426523:	int3   
  426524:	cmp    BYTE PTR [ebp-0x46087f73],cl
  42652a:	push   eax
  42652b:	xchg   edi,eax
  42652c:	loope  0x42652f
  42652e:	push   edx
  42652f:	or     al,0x1
  426531:	lahf   
  426532:	stos   BYTE PTR es:[edi],al
  426533:	cmp    BYTE PTR [esi-0x47],0x50
  426537:	xchg   edi,eax
  426538:	push   ds
  426539:	adc    BYTE PTR [ecx+edi*4-0x121668b0],0xfb
  426541:	jle    0x4264fc
  426543:	push   eax
  426544:	xchg   edi,eax
  426545:	int    0x1
  426547:	xchg   esi,eax
  426548:	push   ebp
  426549:	add    BYTE PTR [ebp-0x1518af47],0xed
  426550:	jl     0x4265cc
  426552:	mov    ecx,0x10fe750
  426557:	fistp  WORD PTR [ecx-0x47]
  42655a:	push   eax
  42655b:	out    0x4c,eax
  42655d:	mov    ecx,0xb9107750
  426562:	push   eax
  426563:	xlat   BYTE PTR ds:[ebx]
  426564:	pop    DWORD PTR [eax+0x7750b974]
  42656a:	inc    ecx
  42656b:	mov    ecx,0x4d6d1850
  426570:	dec    ebp
  426571:	dec    ebp
  426572:	in     eax,dx
  426573:	push   0x62
  426575:	mov    ecx,0x4dd84f50
  42657a:	dec    ebp
  42657b:	dec    ebp
  42657c:	add    DWORD PTR [edx+0x4f50b985],edx
  426582:	jne    0x4265d1
  426584:	dec    ebp
  426585:	dec    ebp
  426586:	in     eax,dx
  426587:	push   0xffffffd4
  426589:	mov    ecx,0x4d794f50
  42658e:	dec    ebp
  42658f:	dec    ebp
  426590:	add    DWORD PTR [edx+0x4f50b971],edx
  426596:	jge    0x4265e5
  426598:	dec    ebp
  426599:	dec    ebp
  42659a:	in     eax,dx
  42659b:	push   0xffffffc0
  42659d:	mov    ecx,0x4dda4f50
  4265a2:	dec    ebp
  4265a3:	dec    ebp
  4265a4:	mov    ecx,0x4d310150
  4265a9:	dec    ebp
  4265aa:	dec    ebp
  4265ab:	xor    BYTE PTR [ecx+edi*4+0x50],0x4f
  4265b0:	mov    cl,0x4d
  4265b2:	dec    ebp
  4265b3:	dec    ebp
  4265b4:	xor    BYTE PTR [edi-0x79],0x80
  4265b8:	lock xor cl,BYTE PTR [ecx]
  4265bb:	inc    esi
  4265bc:	std    
  4265bd:	or     al,0xb2
  4265bf:	mov    esi,0x87f0800c
  4265c4:	adc    BYTE PTR [edi-0x385893ce],0x4
  4265cb:	aam    0x53
  4265cd:	jl     0x426622
  4265cf:	jb     0x426583
  4265d1:	mov    edx,0xc4fbff29
  4265d6:	xchg   edx,eax
  4265d7:	add    ebp,edx
  4265d9:	ja     0x426635
  4265db:	mov    ecx,0x5c09a180
  4265e0:	sbb    DWORD PTR [ecx],ecx
  4265e2:	pop    esp
  4265e3:	jo     0x426638
  4265e5:	adc    DWORD PTR [edx-0x72c7163e],esp
  4265eb:	lea    esi,[esi+0x9bab207]
  4265f1:	(bad)  
  4265f2:	(bad)  
  4265f3:	adc    BYTE PTR [ecx+0x2f],al
  4265f6:	or     DWORD PTR ds:0xf0804d4d,0xfffffff9
  4265fd:	adc    BYTE PTR [edi-0x49b9f67a],0xc
  426604:	mov    dl,0x7
  426606:	or     al,0x80
  426608:	xchg   edi,eax
  426609:	stc    
  42660a:	adc    bh,0x86
  42660d:	push   ebx
  42660e:	sub    dl,BYTE PTR [ebx+0xb]
  426611:	call   DWORD PTR [ecx-0x4e]
  426614:	clc    
  426615:	sub    esp,ebp
  426617:	mov    dl,0xed
  426619:	mov    ebp,DWORD PTR [edi-0x29]
  42661c:	icebp  
  42661d:	xor    BYTE PTR [edi-0x79],0x80
  426621:	lock xor cl,BYTE PTR [ecx]
  426624:	inc    esi
  426625:	std    
  426626:	or     al,0xb2
  426628:	mov    esi,0x87f0800c
  42662d:	adc    BYTE PTR [edi+0x537c5332],0x72
  426634:	mov    dl,0xba
  426636:	sub    edi,edi
  426638:	sti    
  426639:	les    edx,FWORD PTR [edx-0x32882aff]
  42663f:	mov    ecx,0x5c09a180
  426644:	sbb    DWORD PTR [ecx],ecx
  426646:	pop    esp
  426647:	jo     0x42669c
  426649:	adc    DWORD PTR [edx-0x72c7163e],esp
  42664f:	lea    esi,[esi+0x9bab207]
  426655:	(bad)  
  426656:	(bad)  
  426657:	adc    BYTE PTR [ecx+0x2f],al
  42665a:	inc    ecx
  42665b:	or     eax,0xf0804d4d
  426660:	stc    
  426661:	adc    BYTE PTR [edi-0x49b9f67a],0xc
  426668:	mov    dl,0x7
  42666a:	or     al,0x80
  42666c:	xchg   edi,eax
  42666d:	stc    
  42666e:	adc    bh,0x86
  426671:	push   ebx
  426672:	sub    dl,BYTE PTR [ebx+0xb]
  426675:	call   DWORD PTR [ecx-0x4e]
  426678:	clc    
  426679:	sub    esp,ebp
  42667b:	mov    dl,0xed
  42667d:	mov    ecx,DWORD PTR [edi+edx*8-0x78887f0f]
  426684:	xor    al,0x32
  426687:	or     DWORD PTR [esi-0x3],eax
  42668a:	or     al,0xb2
  42668c:	mov    esi,0x87f0800c
  426691:	adc    BYTE PTR [edi+0x537c5332],0x72
  426698:	mov    dl,0xba
  42669a:	sub    edi,edi
  42669c:	sti    
  42669d:	les    esi,FWORD PTR [ebp+0x1]
  4266a0:	push   esi
  4266a1:	ja     0x426710
  4266a3:	dec    ebp
  4266a4:	dec    ebp
  4266a5:	dec    ebp
  4266a6:	mov    ecx,0x5c09a180
  4266ab:	sbb    DWORD PTR [ecx],ecx
  4266ad:	pop    esp
  4266ae:	jo     0x426703
  4266b0:	adc    DWORD PTR [edx-0x72c7163e],esp
  4266b6:	lea    esi,[esi+0x9bab207]
  4266bc:	(bad)  
  4266bd:	(bad)  
  4266be:	adc    BYTE PTR [ecx+0x2f],al
  4266c1:	prefetchw BYTE PTR [ebp+0x4d]
  4266c5:	xor    al,0xf9
  4266c8:	adc    BYTE PTR [edi-0x49b9f67a],0xc
  4266cf:	mov    dl,0x7
  4266d1:	or     al,0x80
  4266d3:	xchg   edi,eax
  4266d4:	stc    
  4266d5:	adc    bh,0x86
  4266d8:	push   ebx
  4266d9:	sub    dl,BYTE PTR [ebx+0xb]
  4266dc:	call   DWORD PTR [ecx-0x4e]
  4266df:	clc    
  4266e0:	sub    esp,ebp
  4266e2:	mov    dl,0xed
  4266e4:	mov    ebp,edi
  4266e6:	xlat   BYTE PTR ds:[ebx]
  4266e7:	pop    esp
  4266e8:	add    DWORD PTR [edi-0x7],ecx
  4266eb:	or     eax,0x77504d4d
  4266f0:	mov    eax,DWORD PTR [eax+0x49608b77]
  4266f6:	cmp    eax,0xef50d146
  4266fb:	icebp  
  4266fc:	outs   dx,BYTE PTR ds:[esi]
  4266fd:	sub    ecx,DWORD PTR [ebx]
  4266ff:	sub    BYTE PTR [eax+0xa],dl
  426702:	out    dx,al
  426703:	or     BYTE PTR [edi-0x7],0xd
  426707:	dec    ebp
  426708:	dec    ebp
  426709:	sbb    BYTE PTR [eax-0x7a],0xd
  42670d:	dec    ebp
  42670e:	dec    ebp
  42670f:	push   eax
  426710:	xlat   BYTE PTR ds:[ebx]
  426711:	xchg   dl,bh
  426713:	and    ah,BYTE PTR [edi+ebp*2]
  426716:	cmp    BYTE PTR [ebx-0x4e],ah
  426719:	or     DWORD PTR [edi-0x2a],ecx
  42671c:	cmp    cl,BYTE PTR [ebp-0x7968a073]
  426722:	or     DWORD PTR [edi+0x6e],ecx
  426725:	cmp    cl,BYTE PTR [ebp+0x38305e8d]
  42672b:	lea    ecx,[ebp-0x74b0af47]
  426731:	or     eax,0x74804d4d
  426736:	mov    ecx,0xd854f50
  42673b:	dec    ebp
  42673c:	dec    ebp
  42673d:	pop    esi
  42673e:	daa    
  42673f:	cmp    BYTE PTR [ebp+0x4f50b98d],cl
  426745:	mov    cl,BYTE PTR ds:0x2c5e4d4d
  42674b:	cmp    BYTE PTR [ebp+0x4f50b98d],cl
  426751:	or     eax,0x5e4d4d0d
  426756:	pop    ds
  426757:	cmp    BYTE PTR [ebp+0x4f50b98d],cl
  42675d:	lea    ecx,[ebp+0x4d]
  426760:	dec    ebp
  426761:	in     eax,dx
  426762:	push   0xffffffe8
  426764:	cmp    ch,0xb9
  426767:	push   eax
  426768:	add    DWORD PTR [ecx*2+0x77804d4d],ecx
  42676f:	jno    0x4267d1
  426771:	jae    0x4267ab
  426773:	lea    ecx,[ebp-0x11feaf47]
  426779:	dec    ebp
  42677a:	dec    ebp
  42677b:	dec    ebp
  42677c:	in     eax,dx
  42677d:	mov    dl,0xaa
  42677f:	mov    ecx,0x4d6f0150
  426784:	dec    ebp
  426785:	dec    ebp
  426786:	pusha  
  426787:	push   edi
  426788:	cmp    BYTE PTR [ebp+0x150b98d],cl
  42678e:	out    dx,eax
  42678f:	dec    ebp
  426790:	dec    ebp
  426791:	dec    ebp
  426792:	in     eax,dx
  426793:	mov    dl,0x9d
  426795:	mov    ecx,0x4da60150
  42679a:	dec    ebp
  42679b:	dec    ebp
  42679c:	adc    BYTE PTR [ecx],0xb9
  42679f:	push   eax
  4267a0:	add    DWORD PTR [ecx],esp
  4267a2:	dec    ebp
  4267a3:	dec    ebp
  4267a4:	dec    ebp
  4267a5:	pusha  
  4267a6:	in     eax,dx
  4267a7:	cmp    BYTE PTR [ebp+0x150b98d],cl
  4267ad:	mov    eax,ds:0x534d4d4d
  4267b2:	cld    
  4267b3:	pusha  
  4267b4:	xor    ch,BYTE PTR [esi-0x73]
  4267b7:	lea    edi,[ecx+0x4d710150]
  4267bd:	dec    ebp
  4267be:	dec    ebp
  4267bf:	mov    dl,0x86
  4267c1:	or     al,0x60
  4267c3:	sbb    ebx,DWORD PTR [eax]
  4267c5:	lea    ecx,[ebp-0x6ffeaf47]
  4267cb:	dec    ebp
  4267cc:	dec    ebp
  4267cd:	dec    ebp
  4267ce:	pusha  
  4267cf:	fwait
  4267d0:	xchg   BYTE PTR [ebp+0x150b98d],cl
  4267d6:	adc    eax,0x804d4d4d
  4267db:	lock jno 0x4267cb
  4267de:	add    eax,0x29bab20d
  4267e3:	push   DWORD PTR [edx+0xd164f50]
  4267e9:	dec    ebp
  4267ea:	dec    ebp
  4267eb:	xor    BYTE PTR [edi+0x21],0x80
  4267ef:	lock and DWORD PTR [ebx-0x4],edx
  4267f3:	mov    dl,0x86
  4267f5:	or     al,0xed
  4267f7:	add    eax,0x29bab20d
  4267fc:	push   DWORD PTR [edx+0x1e4f0f7c]
  426802:	or     eax,0x4d4d4d4d
  426807:	lea    ecx,[ebp+0xd164f01]
  42680d:	dec    ebp
  42680e:	dec    ebp
  42680f:	or     al,BYTE PTR [eax-0xf7f8e89]
  426815:	jno    0x42686a
  426817:	cld    
  426818:	mov    dl,0x86
  42681a:	or     al,0xed
  42681c:	add    eax,0x29bab20d
  426821:	push   DWORD PTR [edx-0x74b0fef6]
  426827:	or     eax,0x800a4d4d
  42682c:	ja     0x4267f6
  42682e:	or     ch,0x3e
  426831:	cmp    cl,BYTE PTR [ebp+0x194f7c8d]
  426837:	dec    ebp
  426838:	dec    ebp
  426839:	dec    ebp
  42683a:	sar    ch,cl
  42683c:	sbb    al,0x38
  42683e:	dec    ebp
  42683f:	add    DWORD PTR [eax-0x8b2ea89],0x808b7750
  426849:	ja     0x4267d6
  42684b:	dec    edi
  42684c:	push   0xffffffd5
  42684e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42684f:	mov    ds:0x1d4c6957,al
  426854:	in     eax,dx
  426855:	fstp   st(0)
  426857:	mov    esp,0x21f08076
  42685c:	adc    BYTE PTR [edi+0x530de221],0x51
  426863:	popf   
  426864:	push   ebx
  426865:	div    DWORD PTR [edx-0x414dd608]
  42686b:	or     al,0xff
  42686d:	inc    BYTE PTR [eax-0x2e7f3769]
  426873:	cmp    cl,BYTE PTR es:[ebp+0x9a65f8d]
  42687a:	dec    edi
  42687b:	push   0x808d8d2f
  426880:	lock and DWORD PTR [eax+0x51532197],eax
  426887:	mov    dl,0xbe
  426889:	or     al,0x53
  42688b:	div    DWORD PTR [edx-0x100d608]
  426891:	adc    BYTE PTR [edi-0x1a2e7f38],0x3a
  426898:	lea    ecx,[ebp-0xf7f59b0]
  42689e:	and    DWORD PTR [eax+0x51532197],eax
  4268a4:	mov    dl,0xbe
  4268a6:	or     al,0x53
  4268a8:	div    DWORD PTR [edx-0x100d608]
  4268ae:	adc    BYTE PTR [edi-0x322e7f38],0x3a
  4268b5:	lea    ecx,[ebp+0x6760a650]
  4268bb:	cmp    BYTE PTR [ebp+0x150b98d],cl
  4268c1:	and    eax,0x804d4d4d
  4268c6:	adc    DWORD PTR [ecx+0x4d290150],edi
  4268cc:	dec    ebp
  4268cd:	dec    ebp
  4268ce:	pusha  
  4268cf:	daa    
  4268d0:	cmp    BYTE PTR [ebp+0x150b98d],cl
  4268d6:	sub    eax,0x604d4d4d
  4268db:	sub    BYTE PTR [eax],bh
  4268dd:	lea    ecx,[ebp-0x3ffeaf47]
  4268e3:	dec    ebp
  4268e4:	dec    ebp
  4268e5:	dec    ebp
  4268e6:	in     eax,dx
  4268e7:	mov    dl,0x4
  4268e9:	mov    ecx,0x4d350150
  4268ee:	dec    ebp
  4268ef:	dec    ebp
  4268f0:	pusha  
  4268f1:	adc    al,0x38
  4268f3:	lea    ecx,[ebp+0x390150b9]
  4268f9:	dec    ebp
  4268fa:	dec    ebp
  4268fb:	dec    ebp
  4268fc:	in     eax,dx
  4268fd:	mov    dl,0xf3
  4268ff:	mov    ecx,0x4d3d0150
  426904:	dec    ebp
  426905:	dec    ebp
  426906:	pusha  
  426907:	sbb    al,0x38
  426909:	lea    ecx,[ebp-0x2dfeaf47]
  42690f:	dec    ebp
  426910:	dec    ebp
  426911:	dec    ebp
  426912:	adc    BYTE PTR [ecx],0xb9
  426915:	push   eax
  426916:	add    DWORD PTR [ebp+0x4d],eax
  426919:	dec    ebp
  42691a:	dec    ebp
  42691b:	pusha  
  42691c:	sbb    BYTE PTR [eax],bh
  42691e:	lea    ecx,[ebp+0x490150b9]
  426924:	dec    ebp
  426925:	dec    ebp
  426926:	dec    ebp
  426927:	pusha  
  426928:	daa    
  426929:	pop    ebp
  42692a:	lea    ecx,[ebp-0x7efeaf47]
  426930:	dec    ebp
  426931:	dec    ebp
  426932:	dec    ebp
  426933:	pusha  
  426934:	push   ebx
  426935:	xor    ecx,DWORD PTR [ebp+0x150b98d]
  42693b:	aam    0x4d
  42693d:	dec    ebp
  42693e:	dec    ebp
  42693f:	cld    
  426940:	ja     0x4268c5
  426942:	mov    ds:0x8d185d60,eax
  426947:	lea    edi,[ecx+0x4d550150]
  42694d:	dec    ebp
  42694e:	dec    ebp
  42694f:	in     eax,dx
  426950:	mov    dl,0x5d
  426952:	mov    ecx,0x4d590150
  426957:	dec    ebp
  426958:	dec    ebp
  426959:	cld    
  42695a:	ja     0x426904
  42695c:	or     bh,ah
  42695e:	ja     0x426964
  426960:	xchg   ebp,eax
  426961:	cld    
  426962:	ja     0x426910
  426964:	stos   DWORD PTR es:[edi],eax
  426965:	pusha  
  426966:	(bad)  
  426968:	lea    ecx,[ebp+0x5d0150b9]
  42696e:	dec    ebp
  42696f:	dec    ebp
  426970:	dec    ebp
  426971:	cld    
  426972:	ja     0x4268f8
  426974:	jg     0x4269d6
  426976:	fistp  DWORD PTR [eax-0x73]
  426979:	lea    edi,[ecx+0x4dd60150]
  42697f:	dec    ebp
  426980:	dec    ebp
  426981:	cld    
  426982:	ja     0x42693e
  426984:	popf   
  426985:	cld    
  426986:	ja     0x426980
  426988:	xchg   esi,eax
  426989:	pusha  
  42698a:	inc    edx
  42698b:	cmp    BYTE PTR [ebp+0x150b98d],cl
  426991:	gs dec ebp
  426993:	dec    ebp
  426994:	dec    ebp
  426995:	cld    
  426996:	ja     0x42694c
  426998:	xchg   BYTE PTR [eax-0x687f8e10],al
  42699e:	jno    0x4269f3
  4269a0:	push   ecx
  4269a1:	push   ebx
  4269a2:	div    DWORD PTR [edx-0x74df342]
  4269a8:	sub    edi,edi
  4269aa:	inc    ah
  4269ac:	fwait
  4269ad:	adc    BYTE PTR [edi+0x71e78071],0x53
  4269b4:	jle    0x426968
  4269b6:	pop    es
  4269b7:	or     al,0x53
  4269b9:	mov    esi,DWORD PTR [edx-0x6300d644]
  4269bf:	inc    ebx
  4269c0:	dec    BYTE PTR [ecx]
  4269c2:	loopne 0x4269f5
  4269c4:	iret   
  4269c5:	add    DWORD PTR [eax-0x187f8e69],0x71
  4269cc:	push   ebx
  4269cd:	jle    0x426981
  4269cf:	pop    es
  4269d0:	or     al,0x53
  4269d2:	mov    esi,DWORD PTR [edx-0x6300d644]
  4269d8:	and    bh,0x8b
  4269db:	mov    ds:0x8d8dcd05,al
  4269e0:	lea    esp,[edx-0x7272e14e]
  4269e6:	lea    eax,[ebx-0x7b]
  4269e9:	adc    BYTE PTR [ecx],dh
  4269eb:	add    DWORD PTR [bx+si+0x7197],0xffffff80
  4269f1:	lock jno 0x426a47
  4269f4:	jle    0x426a49
  4269f6:	std    
  4269f7:	mov    dl,0xba
  4269f9:	sub    DWORD PTR [edx-0x4900f3f9],esi
  4269ff:	xor    al,0x8b
  426a02:	in     al,dx
  426a03:	inc    BYTE PTR [eax-0x187f8e69]
  426a09:	jno    0x426a5e
  426a0b:	jle    0x426a60
  426a0d:	mov    esi,DWORD PTR [edx-0x434df3f9]
  426a13:	sub    edi,edi
  426a15:	pushf  
  426a16:	in     eax,dx
  426a17:	sti    
  426a18:	out    dx,eax
  426a19:	push   eax
  426a1a:	lock mov esp,DWORD PTR [ebx-0x2]
  426a1e:	in     al,0x1
  426a20:	xor    al,0x71
  426a23:	adc    BYTE PTR [edi+0x53515371],0xf7
  426a2a:	mov    dl,0xbe
  426a2c:	or     al,0xb2
  426a2e:	clc    
  426a2f:	sub    edi,edi
  426a31:	(bad)  
  426a32:	push   eax
  426a33:	add    DWORD PTR [esi],edx
  426a35:	or     eax,0xf0804d4d
  426a3a:	and    DWORD PTR [eax+0x51532197],eax
  426a40:	push   ebx
  426a41:	div    DWORD PTR [edx-0x414dd608]
  426a47:	or     al,0xff
  426a49:	inc    BYTE PTR [ecx]
  426a4b:	xchg   edi,eax
  426a4c:	adc    DWORD PTR [eax+0x16],0x1
  426a50:	push   ds
  426a51:	or     eax,0xb3f14d4d
  426a56:	cmp    BYTE PTR [ebp-0x46017f73],cl
  426a5c:	push   eax
  426a5d:	lock es in eax,dx
  426a60:	mov    dl,0xfb
  426a62:	or     bl,0xb9
  426a65:	push   eax
  426a66:	out    0xf2,eax
  426a68:	add    esi,esp
  426a6a:	add    al,0xb9
  426a6c:	push   eax
  426a6d:	out    0x2e,eax
  426a6f:	in     eax,dx
  426a70:	jl     0x426a60
  426a72:	mov    ecx,0x1f3e750
  426a77:	out    0x15,al
  426a79:	mov    ecx,0xed36e750
  426a7e:	jl     0x426a83
  426a80:	mov    ecx,0x80f4e750
  426a85:	retf   
  426a86:	mov    ecx,0x803ee750
  426a8b:	test   DWORD PTR [ecx-0x7f0a18b0],edi
  426a91:	push   es
  426a92:	mov    ecx,0x8046e750
  426a97:	test   DWORD PTR [ecx-0x7f9d18b0],edi
  426a9d:	retf   
  426a9e:	mov    ecx,0x1dee750
  426aa3:	out    0xf2,al
  426aa5:	mov    ecx,0xed56e750
  426aaa:	jl     0x426a9a
  426aac:	mov    ecx,0x1e0e750
  426ab1:	out    0x7a,al
  426ab3:	mov    ecx,0xed5ee750
  426ab8:	jl     0x426abd
  426aba:	mov    ecx,0xb9f1e750
  426abf:	push   eax
  426ac0:	lock mov cx,0x9750
  426ac5:	cli    
  426ac6:	adc    BYTE PTR [ecx],0xb9
  426ac9:	push   eax
  426aca:	lock push 0xffffff80
  426acd:	lock and DWORD PTR [eax-0x8acde69],eax
  426ad4:	push   ebx
  426ad5:	push   ecx
  426ad6:	mov    dl,0xf8
  426ad8:	sub    DWORD PTR [edx-0x100f342],esi
  426ade:	adc    BYTE PTR [edi+0x21e78021],0x53
  426ae5:	jle    0x426a99
  426ae7:	pop    es
  426ae8:	or     al,0x1
  426aea:	xor    eax,esi
  426aec:	bound  edx,QWORD PTR [ebx-0x75]
  426aef:	mov    dl,0xbc
  426af1:	sub    edi,edi
  426af3:	pushf  
  426af4:	or     DWORD PTR [edi+ebx*2+0x53],ebx
  426af8:	pushf  
  426af9:	mov    ecx,0xf0800e50
  426afe:	and    DWORD PTR [eax+0x51532197],eax
  426b04:	push   ebx
  426b05:	div    DWORD PTR [edx-0x74df342]
  426b0b:	sub    edi,edi
  426b0d:	inc    BYTE PTR [eax+0x31012197]
  426b13:	lock es push ebx
  426b16:	jle    0x426a98
  426b18:	out    0x21,eax
  426b1a:	mov    dl,0x7
  426b1c:	or     al,0x53
  426b1e:	mov    esi,DWORD PTR [edx-0x6300d644]
  426b24:	or     DWORD PTR [edi+ebx*2+0x53],ebx
  426b28:	pushf  
  426b29:	mov    ecx,0xf0800e50
  426b2e:	and    DWORD PTR [eax-0x8acde69],eax
  426b34:	mov    dl,0xf8
  426b36:	sub    DWORD PTR [ebx+0x51],edx
  426b39:	mov    dl,0xbe
  426b3b:	or     al,0xff
  426b3d:	inc    BYTE PTR [eax-0x187fde69]
  426b43:	and    DWORD PTR [ebx+0x7e],edx
  426b46:	mov    dl,0x7
  426b48:	or     al,0x53
  426b4a:	mov    esi,DWORD PTR [edx-0x6300d644]
  426b50:	mov    ecx,0x52974150
  426b55:	or     eax,0xf0804d4d
  426b5a:	and    DWORD PTR [eax-0x8acde69],eax
  426b60:	mov    dl,0xf8
  426b62:	sub    DWORD PTR [ebx+0x51],edx
  426b65:	mov    dl,0xbe
  426b67:	or     al,0xff
  426b69:	inc    BYTE PTR [eax-0x187fde69]
  426b6f:	and    DWORD PTR [ebx+0x7e],edx
  426b72:	mov    dl,0x7
  426b74:	or     al,0x53
  426b76:	mov    esi,DWORD PTR [edx-0x6300d644]
  426b7c:	mov    ecx,0xa5974150
  426b81:	or     eax,0xf0804d4d
  426b86:	jno    0x426b08
  426b88:	xchg   edi,eax
  426b89:	jno    0x426bde
  426b8b:	not    DWORD PTR [ebx+0x51]
  426b8e:	mov    dl,0xf8
  426b90:	sub    DWORD PTR [edx-0x100f342],esi
  426b96:	adc    BYTE PTR [edi+0x71e78071],0x53
  426b9d:	jle    0x426bf2
  426b9f:	mov    esi,DWORD PTR [edx-0x434df3f9]
  426ba5:	sub    edi,edi
  426ba7:	pushf  
  426ba8:	in     al,dx
  426ba9:	(bad)  
  426baa:	push   eax
  426bab:	add    DWORD PTR [esi],edx
  426bad:	or     eax,0xf0804d4d
  426bb2:	and    DWORD PTR [eax-0x187fde69],eax
  426bb8:	out    dx,eax
  426bb9:	push   ebx
  426bba:	not    DWORD PTR [ebx+0x51]
  426bbd:	mov    dl,0xbe
  426bbf:	or     al,0xb2
  426bc1:	clc    
  426bc2:	sub    edi,edi
  426bc4:	inc    BYTE PTR [ecx]
  426bc6:	dec    edi
  426bc7:	push   edx
  426bc8:	or     eax,0xf504d4d
  426bcd:	add    DWORD PTR [esi],ebx
  426bcf:	or     eax,0x77014d4d
  426bd4:	bound  eax,QWORD PTR [esi+0x4d4d61d3]
  426bda:	xor    al,0x71
  426bdd:	adc    BYTE PTR [edi+0x530de271],0x51
  426be4:	stos   DWORD PTR es:[edi],eax
  426be5:	push   ebx
  426be6:	pushf  
  426be7:	mov    dl,0xbe
  426be9:	or     al,0xb2
  426beb:	clc    
  426bec:	sub    edi,edi
  426bee:	(bad)  
  426bef:	push   eax
  426bf0:	lidtd  [esi]
  426bf3:	or     eax,0x77804d4d
  426bf8:	and    DWORD PTR [eax-0x3acde10],eax
  426bfe:	mov    dl,0x86
  426c00:	or     al,0x53
  426c02:	sub    dh,BYTE PTR [edx-0x4d00d646]
  426c08:	aad    0x3d
  426c0a:	add    DWORD PTR [edi+0x16],ecx
  426c0d:	or     eax,0x800a4d4d
  426c12:	ja     0x426c85
  426c14:	xor    al,0x71
  426c17:	push   ebx
  426c18:	cld    
  426c19:	mov    dl,0x86
  426c1b:	or     al,0x53
  426c1d:	sub    dh,BYTE PTR [edx-0x4d00d646]
  426c23:	or     al,BYTE PTR [ecx]
  426c25:	dec    edi
  426c26:	and    eax,0xa4d4d4d
  426c2b:	xor    BYTE PTR [edi+0x15],0xe2
  426c2f:	lea    ecx,[ebp-0x9]
  426c32:	xor    BYTE PTR [edi+0x21],0x80
  426c36:	lock and DWORD PTR [ebx-0x4],edx
  426c3a:	push   ebx
  426c3b:	sub    al,BYTE PTR [eax-0x794d1019]
  426c41:	or     al,0xb2
  426c43:	mov    edx,0x1b2ff29
  426c48:	add    DWORD PTR [ebp+0x504d4d0d],esp
  426c4e:	inc    ecx
  426c4f:	dec    edi
  426c50:	push   ds
  426c51:	or     eax,0x77014d4d
  426c56:	xchg   BYTE PTR es:0x804d4d88,al
  426c5d:	lock jno 0x426be0
  426c60:	xchg   edi,eax
  426c61:	jno    0x426cb6
  426c63:	push   ecx
  426c64:	mov    dl,0xbe
  426c66:	or     al,0xed
  426c68:	ret    0xb20d
  426c6b:	clc    
  426c6c:	sub    edi,edi
  426c6e:	(bad)  
  426c6f:	push   eax
  426c70:	lidtd  [esi]
  426c73:	or     eax,0x33f14d4d
  426c78:	cmp    BYTE PTR [ebp+0x386b5e8d],cl
  426c7e:	lea    ecx,[ebp+0xa4f50b9]
  426c84:	dec    ebp
  426c85:	dec    ebp
  426c86:	dec    ebp
  426c87:	add    edx,ebx
  426c89:	jno    0x426c44
  426c8b:	push   eax
  426c8c:	add    DWORD PTR [ebp+0x5e4d4d4d],esi
  426c92:	popa   
  426c93:	cmp    BYTE PTR [ebp+0x4f50b98d],cl
  426c99:	stos   BYTE PTR es:[edi],al
  426c9a:	dec    ebp
  426c9b:	dec    ebp
  426c9c:	dec    ebp
  426c9d:	cmp    bl,0xb9
  426ca0:	push   eax
  426ca1:	dec    edi
  426ca2:	xchg   ebp,eax
  426ca3:	dec    ebp
  426ca4:	dec    ebp
  426ca5:	dec    ebp
  426ca6:	xor    BYTE PTR [edx-0x66b0af47],0x4d
  426cad:	dec    ebp
  426cae:	dec    ebp
  426caf:	in     eax,dx
  426cb0:	push   0x29
  426cb2:	cmp    ch,0xb9
  426cb5:	push   eax
  426cb6:	add    DWORD PTR [ecx+0x14d4d4d],edi
  426cbc:	fisubr DWORD PTR [ecx]
  426cbe:	mov    ecx,0x4dbd0150
  426cc3:	dec    ebp
  426cc4:	dec    ebp
  426cc5:	in     eax,dx
  426cc6:	mov    dl,0xd6
  426cc8:	mov    ecx,0x4de20150
  426ccd:	dec    ebp
  426cce:	dec    ebp
  426ccf:	add    edx,ebx
  426cd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426cd2:	mov    ecx,0x4dc50150
  426cd7:	dec    ebp
  426cd8:	dec    ebp
  426cd9:	or     BYTE PTR [ebx-0x6297af47],0x4d
  426ce0:	dec    ebp
  426ce1:	dec    ebp
  426ce2:	add    esi,esp
  426ce4:	scas   al,BYTE PTR es:[edi]
  426ce5:	pusha  
  426ce6:	dec    ebp
  426ce7:	cmp    BYTE PTR [ebp+0x150b98d],cl
  426ced:	ror    DWORD PTR [ebp+0x4d],0x4d
  426cf1:	add    edx,ebx
  426cf3:	or     eax,0x520150b9
  426cf8:	dec    ebp
  426cf9:	dec    ebp
  426cfa:	dec    ebp
  426cfb:	mov    ecx,0x4dae6850
  426d00:	dec    ebp
  426d01:	dec    ebp
  426d02:	in     eax,dx
  426d03:	jl     0x426c90
  426d05:	mov    ecx,0x4da56850
  426d0a:	dec    ebp
  426d0b:	dec    ebp
  426d0c:	or     BYTE PTR [ebx-0x72c783a0],0x8d
  426d13:	mov    ecx,0x4de40150
  426d18:	dec    ebp
  426d19:	dec    ebp
  426d1a:	cmp    ch,0xb9
  426d1d:	push   eax
  426d1e:	add    ebp,edx
  426d20:	dec    ebp
  426d21:	dec    ebp
  426d22:	dec    ebp
  426d23:	xor    BYTE PTR [ecx+edi*4+0x50],0x4f
  426d28:	out    0x4d,al
  426d2a:	dec    ebp
  426d2b:	dec    ebp
  426d2c:	push   ebx
  426d2d:	push   0xffffffb9
  426d2f:	push   eax
  426d30:	push   0x4d4d4da9
  426d35:	add    DWORD PTR [eax-0x1b],ebp
  426d38:	dec    ebp
  426d39:	dec    ebp
  426d3a:	dec    ebp
  426d3b:	jl     0x426d8c
  426d3d:	lods   eax,DWORD PTR ds:[esi]
  426d3e:	dec    ebp
  426d3f:	dec    ebp
  426d40:	dec    ebp
  426d41:	out    0x38,eax
  426d43:	xor    edi,DWORD PTR [eax]
  426d45:	jl     0x426d96
  426d47:	(bad)  [ebp+0x4d]
  426d4a:	dec    ebp
  426d4b:	ret    
  426d4c:	cmp    BYTE PTR [esi-0x7fbb46c8],dl
  426d52:	ja     0x426dc5
  426d54:	xor    al,0x71
  426d57:	adc    BYTE PTR [edi+0xd05ed71],0xb2
  426d5e:	mov    edx,0xb2fc5329
  426d63:	xchg   BYTE PTR [edi+edi*8],cl
  426d66:	mov    dl,0x80
  426d68:	lock jno 0x426d58
  426d6b:	add    eax,0xb27e530d
  426d70:	mov    edx,0xc07b229
  426d75:	push   DWORD PTR [esi-0x4128fad]
  426d7b:	sbb    edx,DWORD PTR [ebx]
  426d7d:	jo     0x426dd2
  426d7f:	dec    ebp
  426d80:	arpl   bx,cx
  426d82:	or     esi,ecx
  426d84:	and    cl,BYTE PTR [ebp-0x101b7273]
  426d8a:	arpl   bx,di
  426d8c:	or     ebp,ebp
  426d8e:	cmp    BYTE PTR [ebp-0xf7f7273],cl
  426d94:	jno    0x426d16
  426d96:	xchg   edi,eax
  426d97:	jno    0x426dec
  426d99:	push   ecx
  426d9a:	mov    dl,0xbe
  426d9c:	or     al,0xed
  426d9e:	ret    0xb20d
  426da1:	clc    
  426da2:	sub    edi,edi
  426da4:	(bad)  
  426da5:	in     al,dx
  426da6:	std    
  426da7:	adc    BYTE PTR [ecx+edi*4+0xaf01653],0x4d
  426daf:	dec    ebp
  426db0:	dec    ebp
  426db1:	xor    al,0x71
  426db4:	and    bh,0x71
  426db7:	push   ebx
  426db8:	push   ecx
  426db9:	mov    dl,0xbe
  426dbb:	or     al,0xed
  426dbd:	dec    ebx
  426dbe:	or     eax,0xff29bcb2
  426dc3:	sub    ch,ah
  426dc5:	std    
  426dc6:	mov    ecx,0xaf04180
  426dcb:	dec    ebp
  426dcc:	dec    ebp
  426dcd:	dec    ebp
  426dce:	mov    ecx,0xb2b9b64b
  426dd3:	mov    edx,0x7b6b909
  426dd8:	mov    ecx,0xf080b6ff
  426ddd:	jno    0x426d5f
  426ddf:	out    0x71,eax
  426de1:	push   ebx
  426de2:	push   ecx
  426de3:	mov    dl,0xbe
  426de5:	or     al,0xed
  426de7:	dec    ebx
  426de8:	or     eax,0xff29bcb2
  426ded:	sub    ch,ah
  426def:	std    
  426df0:	mov    ecx,0xaf01650
  426df5:	dec    ebp
  426df6:	dec    ebp
  426df7:	dec    ebp
  426df8:	xor    al,0x71
  426dfb:	adc    BYTE PTR [edi-0x12aeac8f],0xc2
  426e02:	or     eax,0xb20cbeb2
  426e07:	clc    
  426e08:	sub    edi,edi
  426e0a:	inc    BYTE PTR [eax-0x4d138e69]
  426e10:	xor    al,0x71
  426e13:	in     eax,dx
  426e14:	add    eax,0xb27e530d
  426e19:	mov    edx,0xc07b229
  426e1e:	push   DWORD PTR [esi-0x4128fad]
  426e24:	sbb    edx,DWORD PTR [ebx]
  426e26:	jo     0x426e7b
  426e28:	dec    ebp
  426e29:	arpl   bx,cx
  426e2b:	or     edx,ebp
  426e2d:	call   0x934c:0x94d4d4d
  426e34:	dec    ebp
  426e35:	dec    ebp
  426e36:	dec    ebp
  426e37:	ins    BYTE PTR es:[edi],dx
  426e38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426e39:	mov    DWORD PTR [esp+edx*8],0x50767701
  426e40:	ja     0x426e31
  426e42:	xor    BYTE PTR [edi-0x11],0x64
  426e46:	mov    ecx,0x5011df58
  426e4b:	sbb    eax,0x86ee6d7c
  426e50:	pop    DWORD PTR [ebx+0x26]
  426e53:	xor    BYTE PTR [edi+0x76],0x80
  426e57:	lock std 
  426e59:	or     DWORD PTR [esi-0x3],eax
  426e5c:	or     al,0xb2
  426e5e:	mov    esi,0x76f0800c
  426e63:	adc    BYTE PTR [edi+0x537c53fd],0x72
  426e6a:	push   edi
  426e6c:	xor    BYTE PTR [edi-0x38],0xaa
  426e70:	das    
  426e71:	cmp    cl,BYTE PTR es:[ebp+0x4f010a8d]
  426e78:	enter  0x4d0d,0x4d
  426e7c:	or     dh,BYTE PTR [edx+0x778629ba]
  426e82:	mov    edx,0x77804d4d
  426e87:	xchg   DWORD PTR [eax+0x460932f0],eax
  426e8d:	std    
  426e8e:	or     al,0xb2
  426e90:	mov    esi,0x87f0800c
  426e95:	adc    BYTE PTR [edi+0x29bab232],0x80
  426e9c:	add    eax,ecx
  426e9e:	or     eax,0x30804d4d
  426ea3:	push   ebx
  426ea4:	jl     0x426ef9
  426ea6:	jb     0x426ea7
  426ea8:	sti    
  426ea9:	arpl   bp,di
  426eab:	or     DWORD PTR [edi+0x56],ecx
  426eae:	lea    ecx,[ebp-0x37287f73]
  426eb4:	jl     0x426f2d
  426eb6:	scas   eax,DWORD PTR es:[edi]
  426eb7:	fst    DWORD PTR [edi-0x21]
  426eba:	adc    DWORD PTR [esi-0x7a],ebx
  426ebd:	pop    DWORD PTR [ebx+0x26]
  426ec0:	push   eax
  426ec1:	ja     0x426eba
  426ec3:	push   eax
  426ec4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426ec5:	jp     0x426f17
  426ec7:	ja     0x426e4b
  426ec9:	xor    BYTE PTR [edi+0x7a],0x80
  426ecd:	lock or BYTE PTR [ecx],0x46
  426ed1:	std    
  426ed2:	or     al,0xb2
  426ed4:	mov    esi,0x7af0800c
  426ed9:	adc    BYTE PTR [edi+0x537c5382],0x72
  426ee0:	push   edi
  426ee2:	stos   BYTE PTR es:[edi],al
  426ee3:	dec    ebp
  426ee4:	xlat   BYTE PTR ds:[ebx]
  426ee5:	xor    eax,0x4d29bab2
  426eea:	loopne 0x426f22
  426eec:	cmp    cl,BYTE PTR [ebp-0x7b817973]
  426ef2:	dec    ebp
  426ef3:	dec    ebp
  426ef4:	xor    BYTE PTR [edi+0x7a],0x80
  426ef8:	lock or BYTE PTR [ecx],0x46
  426efc:	std    
  426efd:	or     al,0xb2
  426eff:	mov    esi,0x7af0800c
  426f04:	adc    BYTE PTR [edi+0x537c5382],0x72
  426f0b:	push   edi
  426f0d:	stos   BYTE PTR es:[edi],al
  426f0e:	dec    ebp
  426f0f:	loopne 0x426f47
  426f11:	cmp    cl,BYTE PTR [ebp+0x29bab28d]
  426f17:	dec    ebp
  426f18:	loopne 0x426f48
  426f1a:	cmp    cl,BYTE PTR [ebp-0x7bc17973]
  426f20:	dec    ebp
  426f21:	dec    ebp
  426f22:	or     BYTE PTR [esi+esi*1+0x3a],0x8d
  426f27:	lea    eax,[eax+0x657f80ef]
  426f2d:	in     al,dx
  426f2e:	out    dx,eax
  426f2f:	push   eax
  426f30:	lock out dx,eax
  426f32:	xor    al,0xaf
  426f35:	xor    BYTE PTR [edi-0x9],0x9
  426f39:	inc    esi
  426f3a:	mov    dl,0xc
  426f3c:	mov    dl,0x86
  426f3e:	or     al,0x80
  426f40:	ja     0x426ef1
  426f42:	adc    BYTE PTR [edi-0x4dd5ac09],0x84
  426f49:	sub    DWORD PTR [ebx+0x6a],edx
  426f4c:	push   DWORD PTR [edx+0x9eff080]
  426f52:	pop    esp
  426f53:	jg     0x426f6e
  426f55:	dec    edi
  426f56:	std    
  426f57:	aad    0x21
  426f59:	or     BYTE PTR [edx+eax*4+0x3a],0x8d
  426f5e:	lea    edi,[ebp+ecx*4-0xb]
  426f62:	and    al,0x6f
  426f64:	cmp    BYTE PTR [eax+0x77802177],al
  426f6a:	jno    0x426fb9
  426f6c:	xlat   BYTE PTR ds:[ebx]
  426f6d:	cmp    eax,0x4dc8d74d
  426f72:	xlat   BYTE PTR ds:[ebx]
  426f73:	sub    eax,0x4d25d74d
  426f78:	xlat   BYTE PTR ds:[ebx]
  426f79:	sbb    eax,0x8615d74d
  426f7e:	cmp    cl,al
  426f80:	dec    ebp
  426f81:	dec    ebp
  426f82:	push   eax
  426f83:	dec    edi
  426f84:	xor    cl,BYTE PTR ds:0x77804d4d
  426f8a:	cmp    eax,0x8d15dded
  426f8f:	aad    0x1b
  426f91:	xor    BYTE PTR [edi+0x3d],0xed
  426f95:	frstor ds:0x80a1d58d
  426f9b:	dec    edi
  426f9c:	xor    cl,BYTE PTR ds:0xf0804d4d
  426fa2:	cmp    eax,0xc41d9250
  426fa7:	dec    DWORD PTR [ebp-0x29]
  426faa:	cmp    eax,0x86c8d74d
  426faf:	mov    WORD PTR [edx+0x4d],gs
  426fb2:	dec    ebp
  426fb3:	stos   DWORD PTR es:[edi],eax
  426fb4:	test   eax,0x35fb70a3
  426fb9:	lea    edx,[edi-0x78127880]
  426fbf:	and    DWORD PTR [ecx-0x9748884],ebx
  426fc5:	and    al,0x6f
  426fc7:	cmp    BYTE PTR [edi+esi*2-0x38],bh
  426fcb:	cmc    
  426fcc:	and    al,0x6f
  426fce:	cmp    BYTE PTR [eax-0x287f7489],al
  426fd4:	mov    esp,edx
  426fd6:	or     eax,0x6f242260
  426fdb:	cmp    BYTE PTR [ebx-0x4e],dl
  426fde:	scas   al,BYTE PTR es:[edi]
  426fdf:	push   ebx
  426fe0:	ret    0x86b2
  426fe3:	or     al,0xb2
  426fe5:	add    ch,BYTE PTR [ecx]
  426fe7:	(bad)  
  426fe8:	cld    
  426fe9:	adc    bh,0xef
  426fec:	arpl   WORD PTR [edx],si
  426fee:	xor    BYTE PTR [edi-0x75],0x9
  426ff2:	sete   BYTE PTR [ebp-0x287f7273]
  426ff9:	mov    edx,DWORD PTR [ebx-0x4e]
  426ffc:	push   ebx
  426ffd:	ret    0x2b2
  427000:	sub    DWORD PTR [edx-0x300f37a],esi
  427006:	adc    bh,0x21
  427009:	arpl   WORD PTR [edx],si
  42700b:	or     DWORD PTR [edi],ecx
  42700d:	loopne 0x426f9c
  42700f:	lea    ecx,[ebp-0x7f8e8880]
  427015:	xchg   edi,eax
  427016:	and    DWORD PTR [eax+0x539befd7],eax
  42701c:	dec    ebp
  42701d:	push   eax
  42701e:	ja     0x426fab
  427020:	dec    edi
  427021:	jb     0x42702c
  427023:	cmovb  ecx,DWORD PTR [ebp-0x706c7273]
  42702a:	out    dx,al
  42702b:	pop    ebx
  42702c:	adc    BYTE PTR [edi+0x9],dh
  42702f:	cld    
  427030:	ja     0x42707f
  427032:	aad    0xfc
  427034:	ja     0x427049
  427036:	sbb    esp,edi
  427038:	ja     0x427039
  42703a:	ror    BYTE PTR [ecx],1
  42703c:	loopne 0x4270b5
  42703e:	dec    DWORD PTR [ecx]
  427040:	loopne 0x426fe9
  427042:	adc    ecx,edi
  427044:	jp     0x426fd3
  427046:	lea    ecx,[ebp-0x1ff68bcd]
  42704c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42704d:	dec    ebp
  42704e:	xor    esi,DWORD PTR [eax+edx*1+0x77]
  427052:	mov    bh,ah
  427054:	ja     0x427022
  427056:	or     eax,0xd40d77fc
  42705b:	cld    
  42705c:	ja     0x4270ab
  42705e:	jl     0x42705c
  427060:	ja     0x427075
  427062:	sar    esp,cl
  427064:	ja     0x427065
  427066:	push   esp
  427067:	(bad)  
  427068:	ja     0x427069
  42706a:	(bad)  
  42706b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42706c:	adc    esp,DWORD PTR [esi+0x4da78f74]
  427072:	shl    BYTE PTR [edi+ecx*4-0x59],cl
  427076:	or     eax,0xa78fc40b
  42707b:	int3   
  42707c:	shl    BYTE PTR [edi+ecx*4-0x59],cl
  427080:	mov    dl,dh
  427082:	sbb    bl,0x35
  427085:	in     eax,dx
  427086:	out    0x8b,eax
  427088:	lea    ecx,[ecx]
  42708a:	loopne 0x427103
  42708c:	or     edi,edx
  42708e:	or     DWORD PTR [edi-0x33],edx
  427091:	lea    ecx,[ebp-0x72e1d073]
  427097:	lea    ecx,[ebp-0x3bf688f0]
  42709d:	inc    DWORD PTR [edi+0x8]
  4270a0:	lea    ecx,[ebp+0x977108d]
  4270a6:	div    eax
  4270a8:	or     DWORD PTR [edi-0x11eff689],ecx
  4270ae:	pop    ebx
  4270af:	jnp    0x427114
  4270b1:	test   DWORD PTR [ecx],ecx
  4270b3:	jmp    0x80a3:0x4d4d4d9e
  4270ba:	ja     0x427084
  4270bc:	push   ebx
  4270bd:	mov    dl,0x80
  4270bf:	lock enter 0x5ed,0xd
  4270c4:	stos   DWORD PTR es:[edi],eax
  4270c5:	les    esp,FWORD PTR [esi+0x538b7780]
  4270cb:	mov    dl,0x80
  4270cd:	lock mov edx,DWORD PTR [ebx-0x2]
  4270d1:	mov    dl,0xba
  4270d3:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4270d9:	test   eax,0x8d21fb70
  4270de:	xchg   edi,eax
  4270df:	add    BYTE PTR [edi+0x7cc587ed],0x77
  4270e6:	mov    dh,dh
  4270e8:	and    al,0x6f
  4270ea:	cmp    cl,dh
  4270ec:	cmc    
  4270ed:	and    al,0x6f
  4270ef:	cmp    BYTE PTR [eax-0x69],dl
  4270f2:	mov    eax,DWORD PTR [eax+0x77501577]
  4270f8:	adc    eax,0x80157780
  4270fd:	int    0x2e
  4270ff:	cmp    cl,BYTE PTR [ebp+0x15f0808d]
  427105:	or     BYTE PTR [ebp+0x3a2e5080],0x8d
  42710c:	lea    eax,[eax+0x657dec30]
  427112:	xchg   ebx,eax
  427113:	push   eax
  427114:	lock stc 
  427116:	xor    BYTE PTR [edi-0x76],0x80
  42711a:	lock mov bl,BYTE PTR [ecx+0x10de29b]
  427121:	out    0x2f,al
  427123:	push   ebx
  427124:	jl     0x4270d8
  427126:	xchg   BYTE PTR [ebx+eiz*4],cl
  427129:	push   ebx
  42712a:	adc    DWORD PTR [edx-0x4d00d646],esi
  427130:	push   eax
  427131:	ja     0x4270b5
  427133:	xor    BYTE PTR [edi-0x76],0x80
  427137:	lock mov dl,BYTE PTR [ebx+0x7c]
  42713b:	mov    dl,0x86
  42713d:	or     al,0x53
  42713f:	adc    DWORD PTR [edx-0x4d00d646],esi
  427145:	push   eax
  427146:	ja     0x4270cc
  427148:	xor    BYTE PTR [edi-0x7],0x80
  42714c:	ins    DWORD PTR es:[edi],dx
  42714d:	or     ch,ch
  42714f:	xchg   BYTE PTR [ecx],ah
  427151:	push   eax
  427152:	ja     0x42714b
  427154:	xor    BYTE PTR [edi-0x7],0x80
  427158:	ins    DWORD PTR es:[edi],dx
  427159:	pop    ebp
  42715a:	xor    al,0xf9
  42715d:	jge    0x4271ae
  42715f:	xchg   edx,eax
  427160:	xchg   ebp,eax
  427161:	xor    BYTE PTR [edi-0x7],0xd5
  427165:	sbb    eax,0x805d6d80
  42716a:	lock stc 
  42716c:	cmp    BYTE PTR [edi-0x6b],0x7d
  427170:	dec    ebx
  427171:	div    DWORD PTR [ebx]
  427173:	std    
  427174:	xor    BYTE PTR [edi-0x7],0x80
  427178:	ins    DWORD PTR es:[edi],dx
  427179:	pop    ebp
  42717a:	in     al,dx
  42717b:	mov    dl,0xc4
  42717d:	in     al,dx
  42717e:	sub    BYTE PTR [ebp-0x6b],0x50
  427182:	ja     0x42710a
  427184:	xor    BYTE PTR [edi-0x76],0x80
  427188:	lock mov dl,BYTE PTR [ebx+0x7c]
  42718c:	push   ebx
  42718d:	adc    DWORD PTR [edx-0x454df37a],esi
  427193:	sub    edi,edi
  427195:	mov    dl,0x50
  427197:	ja     0x4271ae
  427199:	xor    BYTE PTR [edi-0x76],0x80
  42719d:	lock mov dl,BYTE PTR [ebx+0x7c]
  4271a1:	push   ebx
  4271a2:	adc    DWORD PTR [edx-0x794dd646],esi
  4271a8:	or     al,0xff
  4271aa:	mov    dl,0x50
  4271ac:	ja     0x4271c3
  4271ae:	xor    BYTE PTR [edi-0x76],0x80
  4271b2:	lock mov dl,BYTE PTR [ebx+0x11]
  4271b6:	push   ebx
  4271b7:	jl     0x42716b
  4271b9:	mov    edx,0xc86b229
  4271be:	push   DWORD PTR [edx+0x5071f080]
  4271c4:	cmp    dl,BYTE PTR [eax-0x69]
  4271c7:	adc    eax,0xf415777c
  4271cc:	and    al,0x6f
  4271ce:	cmp    BYTE PTR [edi+esi*2+0x15],bh
  4271d2:	repz and al,0x6f
  4271d5:	cmp    BYTE PTR [edi+esi*2+0x15],bh
  4271d9:	cli    
  4271da:	and    al,0x6f
  4271dc:	cmp    BYTE PTR [esi-0x727290c9],bh
  4271e2:	xor    BYTE PTR [edi-0x76],0x80
  4271e6:	lock mov dl,BYTE PTR [ebx+0x7c]
  4271ea:	push   ebx
  4271eb:	adc    DWORD PTR [edx-0x454df37a],esi
  4271f1:	sub    edi,edi
  4271f3:	mov    dl,0x50
  4271f5:	ja     0x42717b
  4271f7:	xor    BYTE PTR [edi-0x7a],0xec
  4271fb:	ja     0x42721e
  4271fd:	push   eax
  4271fe:	ja     0x427182
  427200:	dec    ebp
  427201:	xlat   BYTE PTR ds:[ebx]
  427202:	or     BYTE PTR [ebp-0x29],0x21
  427206:	xor    al,0xf9
  427209:	xchg   BYTE PTR [ecx+0x504d4da8],cl
  42720f:	ja     0x427226
  427211:	xor    BYTE PTR [edi+0x15],0x4f
  427215:	push   0xffffffd5
  427217:	(bad)  
  427218:	xor    BYTE PTR [edi-0x7e],0x50
  42721c:	ja     0x4271a1
  42721e:	xor    BYTE PTR [edi-0x7d],0x80
  427222:	lock and DWORD PTR [ebx-0x4e],eax
  427226:	push   eax
  427227:	ja     0x4271ac
  427229:	xor    BYTE PTR [edi+0x15],0x80
  42722d:	lock adc eax,0xec716d80
  427233:	xchg   edx,eax
  427234:	and    DWORD PTR [eax-0x29c7c10],eax
  42723a:	in     al,0x19
  42723c:	xor    BYTE PTR [edi+0x15],0x80
  427240:	ins    DWORD PTR es:[edi],dx
  427241:	and    DWORD PTR [eax-0x6d13ea10],eax
  427247:	out    dx,eax
  427248:	xor    al,0x83
  42724b:	inc    ebx
  42724c:	mov    dl,0xbe
  42724e:	and    ch,BYTE PTR [edi]
  427250:	lea    ecx,[ebp+0x6f24f6fa]
  427256:	cmp    BYTE PTR [eax-0x29],dl
  427259:	scas   eax,DWORD PTR es:[edi]
  42725a:	jl     0x4272d3
  42725c:	std    
  42725d:	cmc    
  42725e:	and    al,0x6f
  427260:	cmp    BYTE PTR [edi+esi*2+0x76],bh
  427264:	hlt    
  427265:	and    al,0x6f
  427267:	cmp    BYTE PTR [edi+esi*2+0x6a],bh
  42726b:	repz and al,0x6f
  42726e:	cmp    BYTE PTR [ecx],al
  427270:	ja     0x427221
  427272:	push   eax
  427273:	ja     0x42723d
  427275:	add    DWORD PTR [edi-0x3],esi
  427278:	push   eax
  427279:	ja     0x4272ad
  42727b:	add    DWORD PTR [edi+0x76],esi
  42727e:	push   eax
  42727f:	ja     0x427296
  427281:	add    DWORD PTR [edi+0x6a],esi
  427284:	push   eax
  427285:	ja     0x42720e
  427287:	xor    BYTE PTR [edi-0x76],0x80
  42728b:	lock mov dl,BYTE PTR [ebx+0x7c]
  42728f:	push   ebx
  427290:	adc    DWORD PTR [edx-0x454df37a],esi
  427296:	sub    edi,edi
  427298:	mov    dl,0x50
  42729a:	ja     0x42721f
  42729c:	mov    esi,0x8d8decfe
  4272a1:	mov    ds:0x6f24f30d,al
  4272a6:	cmp    BYTE PTR [ecx],cl
  4272a8:	shld   esp,ebp,0x8d
  4272ac:	(bad)  
  4272ad:	loop   0x4272d0
  4272af:	dec    ebp
  4272b0:	xlat   BYTE PTR ds:[ebx]
  4272b1:	add    BYTE PTR [ecx],0x77
  4272b4:	bound  ecx,QWORD PTR [edx]
  4272b6:	xchg   BYTE PTR [ecx],cl
  4272b8:	test   al,0x4d
  4272ba:	dec    ebp
  4272bb:	xor    BYTE PTR [edi-0x75],0x80
  4272bf:	lock mov edx,DWORD PTR [ebx+0x7c]
  4272c3:	push   ebx
  4272c4:	adc    DWORD PTR [edx-0x794dd646],esi
  4272ca:	or     al,0xff
  4272cc:	mov    dl,0x50
  4272ce:	ja     0x427254
  4272d0:	push   eax
  4272d1:	xlat   BYTE PTR ds:[ebx]
  4272d2:	jp     0x427342
  4272d4:	out    0x7a,eax
  4272d6:	xor    BYTE PTR [edi+0x7a],0xb2
  4272da:	xchg   BYTE PTR [ebx+edx*2],cl
  4272dd:	(bad)  
  4272de:	mov    dl,0x2
  4272e0:	sub    edi,edi
  4272e2:	xor    dl,BYTE PTR [eax-0x29]
  4272e5:	add    DWORD PTR [eax-0xf7f7489],0xffffff8b
  4272ec:	push   ebx
  4272ed:	adc    DWORD PTR [edx+0x7c5329ba],esi
  4272f3:	mov    dl,0x86
  4272f5:	or     al,0xff
  4272f7:	mov    dl,0x80
  4272f9:	lock mov eax,DWORD PTR [eax+0x2a538b97]
  427300:	push   ebx
  427301:	xchg   esp,eax
  427302:	mov    dl,0xbe
  427304:	or     al,0xb2
  427306:	clc    
  427307:	sub    edi,edi
  427309:	(bad)  
  42730a:	in     al,dx
  42730b:	mov    dl,0x80
  42730d:	lock adc DWORD PTR [eax-0x29],0x66
  427312:	arpl   bp,di
  427314:	xlat   BYTE PTR ds:[ebx]
  427315:	sub    DWORD PTR [eax-0xf7f7489],eax
  42731b:	mov    edx,DWORD PTR [ebx+0x7c]
  42731e:	push   ebx
  42731f:	adc    DWORD PTR [edx-0x454df37a],esi
  427325:	sub    edi,edi
  427327:	mov    dl,0xa
  427329:	loop   0x42734c
  42732b:	add    DWORD PTR [edi+0x62],esi
  42732e:	or     al,BYTE PTR [esi+0x4d4d8a4c]
  427334:	xor    BYTE PTR [edi-0x76],0x80
  427338:	lock mov dl,BYTE PTR [ebx+0x7c]
  42733c:	push   ebx
  42733d:	adc    DWORD PTR [edx-0x794dd646],esi
  427343:	or     al,0xff
  427345:	mov    dl,0x80
  427347:	lock and DWORD PTR [ebx-0x3],0xffffffd5
  42734c:	sub    DWORD PTR [eax-0xf7f7589],eax
  427352:	mov    dl,BYTE PTR [ebx+0x7c]
  427355:	push   ebx
  427356:	adc    DWORD PTR [edx-0x454df37a],esi
  42735c:	sub    edi,edi
  42735e:	mov    dl,0xa
  427360:	loop   0x427383
  427362:	add    DWORD PTR [edi+0x62],esi
  427365:	or     al,BYTE PTR [esi+0x4d4d8ac9]
  42736b:	xor    BYTE PTR [edi-0x38],0x80
  42736f:	lock enter 0x3080,0x80
  427374:	lea    edx,[ebx+0x11]
  427377:	push   ebx
  427378:	jl     0x42732c
  42737a:	mov    edx,0xc86b229
  42737f:	push   DWORD PTR [edx+0x622f758f]
  427385:	xor    al,0x8a
  427388:	adc    BYTE PTR [edi+0x532a538a],0x94
  42738f:	mov    dl,0xbe
  427391:	or     al,0xb2
  427393:	clc    
  427394:	sub    DWORD PTR [ecx],ecx
  427396:	loopne 0x427402
  427398:	(bad)  
  427399:	(bad)  
  42739a:	arpl   WORD PTR [edx+0xca20f09],si
  4273a0:	lea    ecx,[ebp-0x7fcd8880]
  4273a6:	lock xor al,BYTE PTR [eax+0x538d8030]
  4273ad:	adc    DWORD PTR [ebx+0x7c],edx
  4273b0:	mov    dl,0xba
  4273b2:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4273b8:	(bad)  
  4273b9:	jne    0x4273ea
  4273bb:	bound  eax,QWORD PTR [eax-0x687f7510]
  4273c1:	mov    dl,BYTE PTR [ebx+0x2a]
  4273c4:	push   ebx
  4273c5:	xchg   esp,eax
  4273c6:	mov    dl,0xbe
  4273c8:	or     al,0xb2
  4273ca:	clc    
  4273cb:	sub    DWORD PTR [ecx],ecx
  4273cd:	loopne 0x427439
  4273cf:	(bad)  
  4273d0:	(bad)  
  4273d1:	arpl   WORD PTR [edx+0xcda0f09],si
  4273d7:	lea    ecx,[ebp-0x7fea8880]
  4273dd:	lock adc eax,0x8d803080
  4273e3:	push   ebx
  4273e4:	adc    DWORD PTR [ebx+0x7c],edx
  4273e7:	mov    dl,0xba
  4273e9:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4273ef:	(bad)  
  4273f0:	jne    0x427421
  4273f2:	bound  eax,QWORD PTR [eax-0x687f7510]
  4273f8:	mov    dl,BYTE PTR [ebx+0x2a]
  4273fb:	push   ebx
  4273fc:	xchg   esp,eax
  4273fd:	mov    dl,0xbe
  4273ff:	or     al,0xb2
  427401:	clc    
  427402:	sub    DWORD PTR [ecx],ecx
  427404:	loopne 0x427470
  427406:	(bad)  
  427407:	(bad)  
  427408:	arpl   WORD PTR [edx+0xc130f09],si
  42740e:	lea    ecx,[ebp-0x7f788880]
  427414:	lock xchg DWORD PTR [eax+0x538d8030],eax
  42741b:	adc    DWORD PTR [ebx+0x7c],edx
  42741e:	mov    dl,0xba
  427420:	sub    DWORD PTR [edx-0x4d00f37a],esi
  427426:	(bad)  
  427427:	jne    0x427458
  427429:	bound  eax,QWORD PTR [eax-0x687f7510]
  42742f:	mov    dl,BYTE PTR [ebx+0x2a]
  427432:	push   ebx
  427433:	xchg   esp,eax
  427434:	mov    dl,0xbe
  427436:	or     al,0xb2
  427438:	clc    
  427439:	sub    DWORD PTR [ecx],ecx
  42743b:	loopne 0x4274a7
  42743d:	(bad)  
  42743e:	(bad)  
  42743f:	arpl   WORD PTR [edx+0x3a830f09],si
  427445:	lea    ecx,[ebp-0x7fcd8880]
  42744b:	lock xor al,BYTE PTR [eax+0x538d8030]
  427452:	adc    DWORD PTR [edx+0x7c5329ba],esi
  427458:	mov    dl,0x86
  42745a:	or     al,0xff
  42745c:	mov    dl,0x8f
  42745e:	jne    0x42748f
  427460:	bound  eax,QWORD PTR [eax+0x3080c8f0]
  427466:	adc    BYTE PTR [edi+0x539080c8],0x2a
  42746d:	mov    dl,0xbe
  42746f:	or     al,0x53
  427471:	xchg   esp,eax
  427472:	mov    dl,0xf8
  427474:	sub    edi,edi
  427476:	dec    BYTE PTR [edi-0x2b9d30cf]
  42747c:	mov    dl,0x80
  42747e:	lock adc eax,0x97803080
  427484:	adc    eax,0x2a539080
  427489:	mov    dl,0xbe
  42748b:	or     al,0x53
  42748d:	xchg   esp,eax
  42748e:	mov    dl,0xf8
  427490:	sub    edi,edi
  427492:	dec    BYTE PTR [edi-0x599d30cf]
  427498:	mov    dl,0x80
  42749a:	lock enter 0x3080,0x80
  42749f:	xchg   edi,eax
  4274a0:	enter  0x9080,0x53
  4274a4:	sub    dl,BYTE PTR [ebx-0x6c]
  4274a7:	mov    dl,0xbe
  4274a9:	or     al,0xb2
  4274ab:	clc    
  4274ac:	sub    edi,edi
  4274ae:	dec    BYTE PTR [edi-0x29a930cf]
  4274b4:	std    
  4274b5:	or     DWORD PTR [edi-0x43],ecx
  4274b8:	cmp    cl,BYTE PTR [ebp+0x1577808d]
  4274be:	xor    al,0x15
  4274c1:	xor    BYTE PTR [eax],0x80
  4274c4:	lea    edx,[ebx+0x11]
  4274c7:	mov    dl,0xba
  4274c9:	sub    DWORD PTR [ebx+0x7c],edx
  4274cc:	mov    dl,0x86
  4274ce:	or     al,0xff
  4274d0:	mov    dl,0x8f
  4274d2:	jne    0x427503
  4274d4:	bound  eax,QWORD PTR [eax+0x308032f0]
  4274da:	adc    BYTE PTR [edi+0x53908032],0x2a
  4274e1:	mov    dl,0xbe
  4274e3:	or     al,0x53
  4274e5:	xchg   esp,eax
  4274e6:	mov    dl,0xf8
  4274e8:	sub    edi,edi
  4274ea:	dec    BYTE PTR [edi-0x2b9d30cf]
  4274f0:	mov    dl,0x80
  4274f2:	lock xchg DWORD PTR [eax-0x78687fd0],eax
  4274f9:	adc    BYTE PTR [eax-0x414dd5ad],0xc
  427500:	push   ebx
  427501:	xchg   esp,eax
  427502:	mov    dl,0xf8
  427504:	sub    edi,edi
  427506:	dec    BYTE PTR [edi-0x599d30cf]
  42750c:	mov    dl,0x80
  42750e:	lock xor al,BYTE PTR [eax+0x32978030]
  427515:	adc    BYTE PTR [eax-0x6bacd5ad],0xb2
  42751c:	mov    esi,0x29f8b20c
  427521:	(bad)  
  427522:	dec    BYTE PTR [edi-0x29a930cf]
  427528:	std    
  427529:	or     DWORD PTR [edi-0x38],ecx
  42752c:	lea    ecx,[ebp-0x78887f73]
  427532:	xor    al,0x87
  427535:	xor    BYTE PTR [eax],0x80
  427538:	lea    edx,[ebx+0x11]
  42753b:	mov    dl,0xba
  42753d:	sub    DWORD PTR [ebx+0x7c],edx
  427540:	mov    dl,0x86
  427542:	or     al,0xff
  427544:	mov    dl,0x8f
  427546:	jne    0x427577
  427548:	bound  eax,QWORD PTR [eax+0x308015f0]
  42754e:	adc    BYTE PTR [edi+0x53908015],0x2a
  427555:	mov    dl,0xbe
  427557:	or     al,0x53
  427559:	xchg   esp,eax
  42755a:	mov    dl,0xf8
  42755c:	sub    edi,edi
  42755e:	dec    BYTE PTR [edi-0x2b9d30cf]
  427564:	mov    dl,0x80
  427566:	lock enter 0x3080,0x80
  42756b:	xchg   edi,eax
  42756c:	enter  0x9080,0x53
  427570:	sub    dh,BYTE PTR [edx-0x6bacf342]
  427576:	mov    dl,0xf8
  427578:	sub    edi,edi
  42757a:	dec    BYTE PTR [edi-0x599d30cf]
  427580:	mov    dl,0x80
  427582:	lock adc eax,0x97803080
  427588:	adc    eax,0x2a539080
  42758d:	push   ebx
  42758e:	xchg   esp,eax
  42758f:	mov    dl,0xbe
  427591:	or     al,0xb2
  427593:	clc    
  427594:	sub    edi,edi
  427596:	dec    BYTE PTR [edi-0x29a930cf]
  42759c:	std    
  42759d:	or     DWORD PTR [edi-0x33],ecx
  4275a0:	lea    ecx,[ebp-0x78887f73]
  4275a6:	xor    al,0x87
  4275a9:	xor    BYTE PTR [eax],0x80
  4275ac:	lea    edx,[ebx+0x11]
  4275af:	mov    dl,0xba
  4275b1:	sub    DWORD PTR [ebx+0x7c],edx
  4275b4:	mov    dl,0x86
  4275b6:	or     al,0xff
  4275b8:	mov    dl,0x8f
  4275ba:	jne    0x4275eb
  4275bc:	bound  eax,QWORD PTR [eax+0x3080c8f0]
  4275c2:	adc    BYTE PTR [edi+0x539080c8],0x2a
  4275c9:	mov    dl,0xbe
  4275cb:	or     al,0x53
  4275cd:	xchg   esp,eax
  4275ce:	mov    dl,0xf8
  4275d0:	sub    edi,edi
  4275d2:	dec    BYTE PTR [edi-0x2b9d30cf]
  4275d8:	mov    dl,0x80
  4275da:	lock xor al,BYTE PTR [eax+0x32978030]
  4275e1:	adc    BYTE PTR [eax-0x414dd5ad],0xc
  4275e8:	push   ebx
  4275e9:	xchg   esp,eax
  4275ea:	mov    dl,0xf8
  4275ec:	sub    edi,edi
  4275ee:	dec    BYTE PTR [edi-0x599d30cf]
  4275f4:	mov    dl,0x80
  4275f6:	lock xchg DWORD PTR [eax-0x78687fd0],eax
  4275fd:	adc    BYTE PTR [eax-0x6bacd5ad],0xb2
  427604:	mov    esi,0x29f8b20c
  427609:	(bad)  
  42760a:	dec    BYTE PTR [edi-0x29a930cf]
  427610:	std    
  427611:	xlat   BYTE PTR ds:[ebx]
  427612:	jno    0x427615
  427614:	ja     0x427678
  427616:	or     al,BYTE PTR [esi+0x4d4dac84]
  42761c:	xor    al,0x5e
  42761f:	arpl   WORD PTR [edx+0x778017d5],si
  427625:	mov    al,BYTE PTR [eax+0x11538af0]
  42762b:	push   ebx
  42762c:	jl     0x4275e0
  42762e:	mov    edx,0xc86b229
  427633:	push   DWORD PTR [edx-0x7f7b88b0]
  427639:	ja     0x4275c6
  42763b:	adc    bh,0x8b
  42763e:	xor    BYTE PTR [edi-0x75],0x80
  427642:	lock mov edx,DWORD PTR [ebx+0x4b]
  427646:	push   ebx
  427647:	je     0x4275fb
  427649:	mov    BYTE PTR [edx+esi*4],cl
  42764c:	test   BYTE PTR [ecx],ch
  42764e:	push   DWORD PTR [edx]
  427650:	in     al,dx
  427651:	xlat   BYTE PTR ds:[ebx]
  427652:	data16 xor BYTE PTR [edi+0x7a],0x53
  427657:	sub    ch,ch
  427659:	mov    edx,0x8a84ed8a
  42765e:	mov    dl,0x88
  427660:	sub    esp,ebp
  427662:	std    
  427663:	inc    DWORD PTR ds:0x24f60ba2
  427669:	outs   dx,DWORD PTR ds:[esi]
  42766a:	cmp    BYTE PTR [eax-0xf7f7589],al
  427670:	mov    dl,BYTE PTR [ebx+0x11]
  427673:	push   ebx
  427674:	jl     0x427628
  427676:	mov    edx,0xc86b229
  42767b:	push   DWORD PTR [edx+0x6384f080]
  427681:	std    
  427682:	or     DWORD PTR [edi],ecx
  427684:	pop    ds
  427685:	mov    cl,BYTE PTR [ebp+0x4d]
  427688:	xor    BYTE PTR [edi-0x76],0x80
  42768c:	lock mov dl,BYTE PTR [ebx+0x7c]
  427690:	push   ebx
  427691:	adc    DWORD PTR [edx-0x794dd646],esi
  427697:	or     al,0xff
  427699:	mov    dl,0x80
  42769b:	lock test BYTE PTR [ebx-0x3],ah
  42769f:	xlat   BYTE PTR ds:[ebx]
  4276a0:	sbb    eax,DWORD PTR [eax-0xf7f7489]
  4276a6:	mov    edx,DWORD PTR [ebx+0x7c]
  4276a9:	push   ebx
  4276aa:	adc    DWORD PTR [edx-0x454df37a],esi
  4276b0:	sub    edi,edi
  4276b2:	mov    dl,0xbe
  4276b4:	jg     0x4276f0
  4276b6:	lea    ecx,[ebp-0x6656da1e]
  4276bc:	dec    ebp
  4276bd:	xlat   BYTE PTR ds:[ebx]
  4276be:	add    BYTE PTR [ecx],0x77
  4276c1:	push   ss
  4276c2:	or     al,BYTE PTR [esi+0x4d4da00c]
  4276c8:	xor    BYTE PTR [edi-0x76],0x80
  4276cc:	lock mov dl,BYTE PTR [ebx+0x7c]
  4276d0:	push   ebx
  4276d1:	adc    DWORD PTR [edx-0x794dd646],esi
  4276d7:	or     al,0xff
  4276d9:	mov    dl,0x80
  4276db:	lock and DWORD PTR [ebx-0x4e],0xffffffd5
  4276e0:	xchg   ebx,eax
  4276e1:	xor    BYTE PTR [edi-0x75],0x80
  4276e5:	lock mov edx,DWORD PTR [ebx+0x7c]
  4276e9:	push   ebx
  4276ea:	adc    DWORD PTR [edx-0x794dd646],esi
  4276f0:	or     al,0xff
  4276f2:	mov    dl,0x80
  4276f4:	lock and DWORD PTR [ebx-0x4e],0xffffffd5
  4276f9:	daa    
  4276fa:	xor    BYTE PTR [edi-0x75],0x80
  4276fe:	lock mov edx,DWORD PTR [ebx+0x7c]
  427702:	push   ebx
  427703:	adc    DWORD PTR [edx-0x454df37a],esi
  427709:	sub    edi,edi
  42770b:	mov    dl,0xa
  42770d:	cdq    
  42770e:	add    DWORD PTR [edi+0x16],esi
  427711:	or     al,BYTE PTR [esi+0x4d4d8b34]
  427717:	xor    BYTE PTR [edi-0x76],0x80
  42771b:	lock mov dl,BYTE PTR [ebx+0x7c]
  42771f:	push   ebx
  427720:	adc    DWORD PTR [edx-0x454df37a],esi
  427726:	sub    edi,edi
  427728:	mov    dl,0xa
  42772a:	cdq    
  42772b:	add    DWORD PTR [edi+0x16],esi
  42772e:	or     al,BYTE PTR [esi+0x4d4d8b4c]
  427734:	xor    BYTE PTR [edi-0x7e],0xec
  427738:	cld    
  427739:	push   eax
  42773a:	ja     0x427751
  42773c:	dec    ebp
  42773d:	xlat   BYTE PTR ds:[ebx]
  42773e:	ds dec ebp
  427740:	xlat   BYTE PTR ds:[ebx]
  427741:	adc    eax,0xec367780
  427746:	ja     0x427737
  427748:	or     al,BYTE PTR [esi+0x4d4d82e5]
  42774e:	xor    BYTE PTR [edi-0x76],0x80
  427752:	lock mov dl,BYTE PTR [ebx+0x7c]
  427756:	push   ebx
  427757:	adc    DWORD PTR [edx-0x794dd646],esi
  42775d:	or     al,0xff
  42775f:	mov    dl,0x80
  427761:	lock and DWORD PTR [ebx-0x4e],0xffffffd5
  427766:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427767:	xor    BYTE PTR [edi-0x75],0x80
  42776b:	lock mov edx,DWORD PTR [ebx+0x7c]
  42776f:	push   ebx
  427770:	adc    DWORD PTR [edx-0x794dd646],esi
  427776:	or     al,0xff
  427778:	mov    dl,0x80
  42777a:	lock and DWORD PTR [ebx-0x4e],0xffffffd5
  42777f:	rol    BYTE PTR [eax-0xf7f7489],0x8b
  427786:	push   ebx
  427787:	jl     0x42773b
  427789:	xchg   BYTE PTR [ebx+edx*2],cl
  42778c:	adc    DWORD PTR [edx-0x4d00d646],esi
  427792:	or     cl,BYTE PTR [ebp-0x29]
  427795:	xor    BYTE PTR ds:[edi+0x36],0xec
  42779a:	ja     0x42778b
  42779c:	or     al,BYTE PTR [esi+0x4d4d8b1d]
  4277a2:	xor    BYTE PTR [edi-0x76],0x80
  4277a6:	lock mov dl,BYTE PTR [ebx+0x7c]
  4277aa:	mov    dl,0x86
  4277ac:	or     al,0x53
  4277ae:	adc    DWORD PTR [edx-0x4d00d646],esi
  4277b4:	or     cl,BYTE PTR [ebp-0x29]
  4277b7:	xor    BYTE PTR ds:[edi+0x36],0xec
  4277bc:	ja     0x4277ad
  4277be:	or     al,BYTE PTR [esi+0x4d4d4b0b]
  4277c4:	xor    al,0x46
  4277c7:	xor    BYTE PTR [edi+0x46],0x53
  4277cb:	je     0x427820
  4277cd:	sub    dh,BYTE PTR [edx-0x7b4df342]
  4277d3:	sub    edi,edi
  4277d5:	mov    dl,0x80
  4277d7:	lock cs push ebx
  4277da:	mov    dl,0x40
  4277dc:	lea    edi,[edx]
  4277de:	lea    ecx,[ebp-0x72c8ea2b]
  4277e4:	int    0x8d
  4277e6:	lea    ecx,[edx]
  4277e8:	dec    ebp
  4277e9:	xlat   BYTE PTR ds:[ebx]
  4277ea:	ds adc bh,0x36
  4277ee:	in     al,dx
  4277ef:	xlat   BYTE PTR ds:[ebx]
  4277f0:	out    dx,eax
  4277f1:	xchg   BYTE PTR [esi-0x7fb2b258],bl
  4277f7:	ja     0x42786a
  4277f9:	xor    al,0x3e
  4277fc:	cmp    ch,bh
  4277fe:	xor    BYTE PTR [edi+0x3e],0xec
  427802:	ja     0x42778a
  427804:	push   eax
  427805:	ja     0x42778d
  427807:	xor    BYTE PTR [edi-0x75],0x80
  42780b:	lock mov edx,DWORD PTR [ebx+0x11]
  42780f:	mov    dl,0xba
  427811:	sub    DWORD PTR [ebx+0x7c],edx
  427814:	mov    dl,0x86
  427816:	or     al,0xff
  427818:	mov    dl,0x80
  42781a:	lock xchg BYTE PTR [ecx],cl
  42781d:	and    dh,BYTE PTR [edx-0x7f750f80]
  427823:	xchg   edi,eax
  427824:	mov    dl,BYTE PTR [ebx+0x2a]
  427827:	push   ebx
  427828:	xchg   esp,eax
  427829:	mov    dl,0xbe
  42782b:	or     al,0xb2
  42782d:	clc    
  42782e:	sub    edi,edi
  427830:	(bad)  
  427831:	in     al,dx
  427832:	lock mul DWORD PTR [ebx-0x4e]
  427836:	or     edx,ebp
  427838:	hlt    
  427839:	retf   
  42783a:	dec    ebp
  42783b:	dec    ebp
  42783c:	xor    BYTE PTR [edi-0x11],0xab
  427840:	test   eax,0x71fb70a3
  427845:	lea    edx,[edi-0x78127880]
  42784b:	adc    eax,0x539b9993
  427850:	push   0xffffff80
  427852:	ja     0x427889
  427854:	or     ch,0x2e
  427857:	cmp    cl,BYTE PTR [ebp-0x10687f73]
  42785d:	or     BYTE PTR [ebp-0x7fde2880],0xe7
  427864:	out    dx,eax
  427865:	and    BYTE PTR [edi-0x7588afdf],0x60
  42786c:	fistp  DWORD PTR [eax-0x21]
  42786f:	adc    DWORD PTR [ebx-0x4a],edx
  427872:	pop    esi
  427873:	xchg   BYTE PTR [edi+0x32532643],cl
  427879:	or     DWORD PTR [esi-0x3e],eax
  42787c:	or     al,0xb2
  42787e:	mov    esp,0x8d4ba229
  427883:	lea    ecx,[ebp+0xc88b2cd]
  427889:	push   ebx
  42788a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42788b:	dec    DWORD PTR [ebx-0x80]
  42788e:	out    0x1d,eax
  427890:	call   DWORD PTR [ebx+eiz*2+0x6313d79c]
  427897:	(bad)  
  427898:	xlat   BYTE PTR ds:[ebx]
  427899:	or     DWORD PTR [edx-0x54881f31],esp
  42789f:	push   esi
  4278a0:	sar    ebx,cl
  4278a2:	adc    al,0x62
  4278a4:	mov    esi,0x8d8d3a9c
  4278a9:	adc    BYTE PTR [edi+0x15d78071],0x80
  4278b0:	xchg   edi,eax
  4278b1:	out    dx,eax
  4278b2:	adc    bh,0x21
  4278b5:	adc    BYTE PTR [edi+0x21d780ef],0x80
  4278bc:	out    0xef,eax
  4278be:	and    BYTE PTR [edi+0x53325321],0xb6
  4278c5:	or     DWORD PTR [esi-0x3e],eax
  4278c8:	or     al,0xb2
  4278ca:	mov    esp,0x8d4ba229
  4278cf:	lea    ecx,[ebp-0x5bac33]
  4278d5:	xchg   esp,eax
  4278d6:	mov    dl,0x88
  4278d8:	or     al,0xff
  4278da:	dec    ebx
  4278db:	and    bh,0x71
  4278de:	and    BYTE PTR [edi-0x7f7daceb],0x77
  4278e5:	jno    0x42793a
  4278e7:	retf   
  4278e8:	xor    al,0x15
  4278eb:	or     DWORD PTR [esi-0x54],eax
  4278ee:	or     al,0xb2
  4278f0:	test   BYTE PTR [ecx],ch
  4278f2:	push   ebx
  4278f3:	jo     0x4278f4
  4278f5:	retf   
  4278f6:	push   edi
  4278f7:	lea    ecx,[ebp-0x3b4d3273]
  4278fd:	or     al,0xff
  4278ff:	add    BYTE PTR [eax-0x63131089],0x13
  427906:	mov    BYTE PTR [eax+0x21d78051],0x80
  42790d:	out    0x71,eax
  42790f:	and    BYTE PTR [edi-0x757b12eb],0xed
  427916:	mov    esp,0x29beb28a
  42791b:	push   ebx
  42791c:	jb     0x427975
  42791e:	aad    0x58
  427920:	fist   WORD PTR [ecx]
  427922:	mov    ds:0x438f860b,al
  427927:	mov    es:0xdf58d54b,al
  42792d:	adc    DWORD PTR [edx+0x438f86c6],esp
  427933:	es in  al,dx
  427935:	jl     0x42794a
  427937:	(bad)  
  427938:	(bad)  
  427939:	std    
  42793a:	(bad)  
  42793b:	jle    0x42799b
  42793d:	xchg   BYTE PTR [edi+0x5a22643],cl
  427943:	fstp   DWORD PTR [eax-0x21]
  427946:	adc    DWORD PTR [ebx-0x9],edx
  427949:	mov    ds:0xdf58e8cb,al
  42794e:	adc    edi,edx
  427950:	adc    esp,DWORD PTR [ebx-0x9]
  427953:	xlat   BYTE PTR ds:[ebx]
  427954:	or     DWORD PTR [edx+0x3ca10d57],esp
  42795a:	(bad)  
  42795c:	loope  0x427972
  42795e:	enter  0x25be,0x3a
  427962:	lea    ecx,[ebp-0x7f106880]
  427968:	xlat   BYTE PTR ds:[ebx]
  427969:	and    DWORD PTR [eax-0x187f1059],eax
  42796f:	and    DWORD PTR [ebx+0x32],edx
  427972:	pusha  
  427973:	fistp  DWORD PTR [eax-0x21]
  427976:	adc    DWORD PTR [ebx-0x4a],edx
  427979:	or     DWORD PTR [esi-0x3e],eax
  42797c:	or     al,0xb2
  42797e:	mov    BYTE PTR [ebx+edx*2],cl
  427981:	dec    ebp
  427982:	mov    dl,0xb4
  427984:	sub    DWORD PTR [eax-0x29],edx
  427987:	enter  0x9cff,0x80
  42798b:	out    0xc8,eax
  42798d:	cli    
  42798e:	lea    ecx,[ebp+0x453cd8d]
  427994:	inc    DWORD PTR [esi]
  427996:	and    BYTE PTR [edi+0x50238025],0xa7
  42799d:	xor    ah,BYTE PTR [ebx+0x3]
  4279a0:	xlat   BYTE PTR ds:[ebx]
  4279a1:	outs   dx,DWORD PTR ds:[esi]
  4279a2:	push   ebx
  4279a3:	jb     0x427a08
  4279a5:	pushf  
  4279a6:	aad    0xb0
  4279a8:	dec    ebp
  4279a9:	xlat   BYTE PTR ds:[ebx]
  4279aa:	xor    eax,0x4d25d780
  4279af:	xlat   BYTE PTR ds:[ebx]
  4279b0:	sub    eax,0x4d8ad74d
  4279b5:	pop    ecx
  4279b6:	xchg   BYTE PTR [ebx],dh
  4279b8:	dec    ebx
  4279b9:	dec    ebp
  4279ba:	dec    ebp
  4279bb:	push   eax
  4279bc:	outs   dx,DWORD PTR ds:[esi]
  4279bd:	mov    esi,0x8d8d8dfa
  4279c2:	adc    BYTE PTR [edi+0x21e780ef],0x53
  4279c9:	mov    edx,DWORD PTR [ebx-0x4a]
  4279cc:	or     DWORD PTR [esi-0x7b],eax
  4279cf:	or     al,0xb2
  4279d1:	popa   
  4279d2:	or     al,0x50
  4279d4:	out    0xc8,eax
  4279d6:	and    bh,0xef
  4279d9:	and    BYTE PTR [edi+0x29bcb221],0x53
  4279e0:	or     eax,0x53c8d780
  4279e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4279e6:	dec    DWORD PTR [ebx-0x80]
  4279e9:	out    0x71,eax
  4279eb:	push   ebx
  4279ec:	retf   
  4279ed:	call   DWORD PTR [eax+eax*4-0x7dacea59]
  4279f4:	cmp    BYTE PTR [eax+eax*4-0x19],0x71
  4279f9:	adc    BYTE PTR [ecx],0x80
  4279fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4279fd:	adc    eax,0xcfd4609
  427a02:	mov    dl,0xbc
  427a04:	sub    DWORD PTR [ebx-0x5c],edx
  427a07:	mov    dl,0xbe
  427a09:	or     al,0xa2
  427a0b:	dec    ebx
  427a0c:	lea    ecx,[ebp+0x74ffcd8d]
  427a12:	jmp    FWORD PTR [edx]
  427a14:	arpl   di,si
  427a16:	xlat   BYTE PTR ds:[ebx]
  427a17:	sbb    DWORD PTR [ebx+0x5],esp
  427a1a:	xlat   BYTE PTR ds:[ebx]
  427a1b:	nop
  427a1c:	dec    edx
  427a1d:	push   ebx
  427a1e:	test   DWORD PTR [esi],ebx
  427a20:	jne    0x4279e1
  427a22:	push   0xffffffc8
  427a24:	outs   dx,DWORD PTR ds:[esi]
  427a25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427a26:	jbe    0x427a5c
  427a28:	push   ebx
  427a29:	test   DWORD PTR [esi],ebx
  427a2b:	jne    0x4279f1
  427a2d:	stos   BYTE PTR es:[edi],al
  427a2e:	xor    BYTE PTR [edi-0x11],0x80
  427a32:	lock and DWORD PTR [eax-0x287f1069],eax
  427a39:	and    DWORD PTR [edx+0x438f8605],esp
  427a3f:	es push edi
  427a41:	fistp  DWORD PTR [eax-0x21]
  427a44:	adc    DWORD PTR [ecx],ecx
  427a46:	inc    esi
  427a47:	std    
  427a48:	or     al,0x80
  427a4a:	ret    0x4d53
  427a4d:	push   ebx
  427a4e:	jb     0x427a02
  427a50:	add    ch,BYTE PTR [ecx]
  427a52:	push   ebx
  427a53:	test   DWORD PTR [edx+0xba20cbe],esi
  427a59:	lea    ecx,[ebp+0x7cffcd8d]
  427a5f:	call   DWORD PTR [ecx+0x5f]
  427a62:	ja     0x4279ee
  427a64:	xlat   BYTE PTR ds:[ebx]
  427a65:	out    dx,al
  427a66:	arpl   WORD PTR [esi+0x47a221d5],si
  427a6c:	fisubr WORD PTR [eax+0x2d]
  427a6f:	mov    ds:0xe3bb390a,al
  427a74:	les    esp,FWORD PTR [esi-0x5e2bc85e]
  427a7a:	adc    edx,ebp
  427a7c:	pop    esp
  427a7d:	js     0x427aa3
  427a7f:	xor    ch,BYTE PTR [ebx-0x48f5c57]
  427a85:	sub    eax,0x8780978d
  427a8a:	in     eax,dx
  427a8b:	xchg   DWORD PTR [ecx],esp
  427a8d:	xor    BYTE PTR [edi-0x11],0x80
  427a91:	lock and DWORD PTR [ecx],ecx
  427a94:	inc    esi
  427a95:	std    
  427a96:	or     al,0xb2
  427a98:	mov    esi,0xeff0800c
  427a9d:	adc    BYTE PTR [edi-0x454d66df],0x29
  427aa4:	xor    al,0x1d
  427aa7:	cli    
  427aa8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427aa9:	mov    DWORD PTR [esp+edx*8],0x7253fc53
  427ab0:	(bad)  
  427ab1:	sti    
  427ab2:	push   eax
  427ab3:	cmp    al,BYTE PTR [eax-0x327fda89]
  427ab9:	cmp    cl,BYTE PTR ss:[ebp-0x7f107f73]
  427ac0:	ja     0x427ae7
  427ac2:	or     ch,0x36
  427ac5:	cmp    cl,BYTE PTR [ebp-0x13727f73]
  427acb:	xchg   edx,eax
  427acc:	gs xor al,0x25
  427ad0:	adc    BYTE PTR [eax+0x32],0x3a
  427ad4:	lea    ecx,[ebp-0x1dea8080]
  427ada:	out    dx,al
  427adb:	mov    ebp,0x8d8d818d
  427ae0:	dec    ebp
  427ae1:	push   edx
  427ae2:	or     ch,BYTE PTR [edx-0x73af49b3]
  427ae8:	xor    BYTE PTR [edi-0x11],0x80
  427aec:	lock and DWORD PTR [ecx],ecx
  427aef:	inc    esi
  427af0:	std    
  427af1:	or     al,0xb2
  427af3:	mov    esi,0xeff0800c
  427af8:	adc    BYTE PTR [edi+0x25d74d21],0x53
  427aff:	cld    
  427b00:	push   ebx
  427b01:	jb     0x427b02
  427b03:	sti    
  427b04:	push   eax
  427b05:	ja     0x427a91
  427b07:	add    DWORD PTR [edi-0x76],esi
  427b0a:	or     bl,BYTE PTR [ebx-0x4de228b3]
  427b10:	mov    edx,0x15d74d29
  427b15:	dec    ebp
  427b16:	xlat   BYTE PTR ds:[ebx]
  427b17:	jno    0x427b66
  427b19:	xlat   BYTE PTR ds:[ebx]
  427b1a:	and    DWORD PTR [ebp-0x29],ecx
  427b1d:	out    dx,eax
  427b1e:	xchg   BYTE PTR [ebx],dh
  427b20:	int3   
  427b21:	dec    ebp
  427b22:	dec    ebp
  427b23:	xor    BYTE PTR [edi-0x11],0x80
  427b27:	lock and DWORD PTR [ecx],ecx
  427b2a:	inc    esi
  427b2b:	std    
  427b2c:	or     al,0xb2
  427b2e:	mov    esi,0xeff0800c
  427b33:	adc    BYTE PTR [edi+0x53fc5321],0x72
  427b3a:	mov    dl,0xba
  427b3c:	sub    DWORD PTR [eax+0x63fbff09],eax
  427b42:	std    
  427b43:	aad    0x37
  427b45:	xor    BYTE PTR [edi+0x71],0x80
  427b49:	lock adc eax,0xcfd4609
  427b4f:	mov    dl,0xbe
  427b51:	or     al,0x80
  427b53:	lock jno 0x427ad6
  427b56:	xchg   edi,eax
  427b57:	adc    eax,0x7253fc53
  427b5c:	mov    dl,0xba
  427b5e:	sub    DWORD PTR [eax-0x400e210],eax
  427b64:	or     DWORD PTR [edx],esp
  427b66:	ja     0x427af2
  427b68:	push   eax
  427b69:	cmp    ch,BYTE PTR [ecx-0x72e20490]
  427b6f:	xchg   edi,eax
  427b70:	add    BYTE PTR [edi-0x64666c6a],0x53
  427b77:	push   0xffffff80
  427b79:	xlat   BYTE PTR ds:[ebx]
  427b7a:	cmp    eax,0x80459780
  427b7f:	out    0x25,eax
  427b81:	pop    esi
  427b82:	xchg   BYTE PTR [edi-0x249fd9bd],cl
  427b88:	pop    eax
  427b89:	fist   WORD PTR [ecx]
  427b8b:	arpl   di,si
  427b8d:	or     esi,ecx
  427b8f:	dec    esp
  427b90:	lea    ecx,[ebp-0x3960fe73]
  427b96:	in     al,0xee
  427b98:	arpl   si,ax
  427b9a:	(bad)  
  427b9c:	arpl   si,ax
  427b9e:	xlat   BYTE PTR ds:[ebx]
  427b9f:	out    dx,eax
  427ba0:	arpl   di,si
  427ba2:	or     DWORD PTR [edi],ecx
  427ba4:	pop    ss
  427ba5:	or     al,0x8d
  427ba7:	lea    esp,[edx-0x20a755f3]
  427bad:	adc    edi,edx
  427baf:	out    dx,eax
  427bb0:	arpl   di,si
  427bb2:	or     DWORD PTR [edi],ecx
  427bb4:	das    
  427bb5:	or     al,0x8d
  427bb7:	lea    esp,[edx-0x20a766f3]
  427bbd:	adc    edi,edx
  427bbf:	out    dx,eax
  427bc0:	arpl   di,si
  427bc2:	or     DWORD PTR [edi],ecx
  427bc4:	dec    ebx
  427bc5:	lea    ecx,[ebp-0x56f25d73]
  427bcb:	pop    eax
  427bcc:	fist   WORD PTR [ecx]
  427bce:	xlat   BYTE PTR ds:[ebx]
  427bcf:	out    dx,al
  427bd0:	arpl   di,si
  427bd2:	aad    0x3f
  427bd4:	mov    ds:0xdf58d00d,al
  427bd9:	adc    edi,edx
  427bdb:	out    dx,eax
  427bdc:	arpl   di,si
  427bde:	or     DWORD PTR [edi],ecx
  427be0:	mov    al,ds:0xa28d8d3a
  427be5:	or     eax,0x11df58b9
  427bea:	or     DWORD PTR [edi-0x24],ecx
  427bed:	cmp    cl,BYTE PTR [ebp+0x9f7638d]
  427bf3:	(bad)  
  427bf5:	lea    ecx,[ebp+0x3aa2be8d]
  427bfb:	lea    ecx,[ebp+0x4d1dd74d]
  427c01:	xlat   BYTE PTR ds:[ebx]
  427c02:	sub    eax,0x4d15d74d
  427c07:	xlat   BYTE PTR ds:[ebx]
  427c08:	jno    0x427c57
  427c0a:	xlat   BYTE PTR ds:[ebx]
  427c0b:	and    DWORD PTR [ebp-0x29],ecx
  427c0e:	out    dx,eax
  427c0f:	xchg   bl,dl
  427c11:	or     eax,0xb7be4d4d
  427c16:	cmp    cl,BYTE PTR [ebp-0x3ef25d73]
  427c1c:	pop    eax
  427c1d:	fist   WORD PTR [ecx]
  427c1f:	xlat   BYTE PTR ds:[ebx]
  427c20:	out    dx,eax
  427c21:	arpl   di,si
  427c23:	or     DWORD PTR [edi],ecx
  427c25:	loope  0x427bb4
  427c27:	lea    ecx,[ebp+0x58e40da2]
  427c2d:	fist   WORD PTR [ecx]
  427c2f:	xlat   BYTE PTR ds:[ebx]
  427c30:	out    dx,eax
  427c31:	arpl   di,si
  427c33:	or     DWORD PTR [edi],ecx
  427c35:	mov    cl,0x3a
  427c37:	lea    ecx,[ebp+0x58d90da2]
  427c3d:	fist   WORD PTR [ecx]
  427c3f:	xlat   BYTE PTR ds:[ebx]
  427c40:	out    dx,al
  427c41:	arpl   di,si
  427c43:	aad    0x1d
  427c45:	mov    ds:0xdf58e60d,al
  427c4a:	adc    edi,edx
  427c4c:	out    dx,eax
  427c4d:	arpl   di,si
  427c4f:	or     DWORD PTR [edi],ecx
  427c51:	aam    0x3a
  427c53:	lea    ecx,[ebp+0x58e80da2]
  427c59:	fist   WORD PTR [ecx]
  427c5b:	les    eax,FWORD PTR [ecx]
  427c5d:	adc    BYTE PTR [edi+0x21d780ef],0x80
  427c64:	out    0xef,eax
  427c66:	and    BYTE PTR [edi+0x53325321],0xb6
  427c6d:	or     DWORD PTR [esi-0x3e],eax
  427c70:	or     al,0xb2
  427c72:	mov    esp,0x8d4ba229
  427c77:	lea    ecx,[ebp+0xc88b2cd]
  427c7d:	push   ebx
  427c7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427c7f:	dec    DWORD PTR [ebx-0x80]
  427c82:	out    0xef,eax
  427c84:	call   DWORD PTR [eax+eax*4-0x6313de59]
  427c8b:	adc    eax,esi
  427c8d:	push   eax
  427c8e:	xchg   edi,eax
  427c8f:	out    dx,eax
  427c90:	push   eax
  427c91:	xlat   BYTE PTR ds:[ebx]
  427c92:	and    DWORD PTR [eax-0x287f1069],eax
  427c98:	and    DWORD PTR [eax-0x587f1019],eax
  427c9e:	and    DWORD PTR [ebx+0x32],edx
  427ca1:	push   ebx
  427ca2:	mov    dh,0x9
  427ca4:	inc    esi
  427ca5:	ret    0xb20c
  427ca8:	mov    esp,0xb2a45329
  427cad:	mov    BYTE PTR [edx+eiz*4],cl
  427cb0:	dec    ebx
  427cb1:	lea    ecx,[ebp-0x6b003273]
  427cb7:	dec    DWORD PTR [ebx+0x3f]
  427cba:	xchg   edi,eax
  427cbb:	jno    0x427cdc
  427cbd:	xlat   BYTE PTR ds:[ebx]
  427cbe:	adc    eax,0x803d9780
  427cc3:	xlat   BYTE PTR ds:[ebx]
  427cc4:	inc    ebp
  427cc5:	adc    BYTE PTR [edi+0x15d78071],0x80
  427ccc:	xchg   edi,eax
  427ccd:	jno    0x427c4f
  427ccf:	xlat   BYTE PTR ds:[ebx]
  427cd0:	adc    eax,0x8071e780
  427cd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427cd6:	adc    eax,0xb6533253
  427cdb:	or     DWORD PTR [esi-0x3e],eax
  427cde:	or     al,0xb2
  427ce0:	mov    esp,0xa2a45329
  427ce5:	dec    ebx
  427ce6:	lea    ecx,[ebp-0x774d3273]
  427cec:	or     al,0xff
  427cee:	dec    ebx
  427cef:	and    bh,0x3d
  427cf2:	call   DWORD PTR [eax+eax*4-0x34acba59]
  427cf9:	push   ebx
  427cfa:	add    BYTE PTR [eax-0xf7fc289],0x45
  427d01:	or     DWORD PTR [esi-0x54],eax
  427d04:	or     al,0x53
  427d06:	jo     0x427cba
  427d08:	test   BYTE PTR [ecx],ch
  427d0a:	push   edi
  427d0b:	lea    ecx,[ebp-0x34003273]
  427d11:	xor    al,0x71
  427d14:	mov    dl,0xc4
  427d16:	or     al,0xff
  427d18:	sub    ah,0x9c
  427d1b:	adc    BYTE PTR [edi-0x1239eceb],0xba
  427d22:	mov    dh,BYTE PTR [edx+0x6a532988]
  427d28:	mov    ds:0xdf58d505,al
  427d2d:	adc    DWORD PTR [edx+0x438f86c2],esp
  427d33:	es and bh,0x3d
  427d37:	and    BYTE PTR [edi-0x754312bb],0xa2
  427d3e:	dec    ebx
  427d3f:	aad    0x58
  427d41:	fist   WORD PTR [ecx]
  427d43:	mov    ds:0x438f86c6,al
  427d48:	es in  al,dx
  427d4a:	sub    al,BYTE PTR [eax-0x6becda19]
  427d50:	(bad)  
  427d51:	sti    
  427d52:	push   edi
  427d53:	xchg   BYTE PTR [edi-0xf5d9bd],cl
  427d59:	add    eax,0x58d90ba2
  427d5e:	fist   WORD PTR [ecx]
  427d60:	cdq    
  427d61:	dec    ebp
  427d62:	xlat   BYTE PTR ds:[ebx]
  427d63:	xor    eax,0x9b2dd74d
  427d68:	dec    ebp
  427d69:	xlat   BYTE PTR ds:[ebx]
  427d6a:	sbb    eax,0x4d15d74d
  427d6f:	xlat   BYTE PTR ds:[ebx]
  427d70:	jno    0x427dbf
  427d72:	xlat   BYTE PTR ds:[ebx]
  427d73:	and    DWORD PTR [ebp-0x29],ecx
  427d76:	out    dx,eax
  427d77:	xchg   dh,al
  427d79:	int3   
  427d7a:	dec    ebp
  427d7b:	dec    ebp
  427d7c:	push   eax
  427d7d:	mov    WORD PTR [eax-0x5c565474],es
  427d83:	jo     0x427d80
  427d85:	cmp    eax,0xef97808d
  427d8a:	adc    bh,0x21
  427d8d:	and    bh,0xef
  427d90:	and    BYTE PTR [edi+0x53b65321],0x32
  427d97:	or     DWORD PTR [esi-0x3e],eax
  427d9a:	or     al,0xb2
  427d9c:	mov    esp,0x8d4ba229
  427da1:	lea    ecx,[ebp+0xc88b2cd]
  427da7:	push   ebx
  427da8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427da9:	call   DWORD PTR [edi+edi*8+0x71e7804b]
  427db0:	and    BYTE PTR [edi-0x6300eb],0xc6
  427db7:	push   eax
  427db8:	xchg   edi,eax
  427db9:	jno    0x427e0b
  427dbb:	xlat   BYTE PTR ds:[ebx]
  427dbc:	adc    eax,0x803d9780
  427dc1:	xlat   BYTE PTR ds:[ebx]
  427dc2:	inc    ebp
  427dc3:	adc    BYTE PTR [edi+0x15d78071],0x80
  427dca:	xchg   edi,eax
  427dcb:	out    dx,eax
  427dcc:	adc    bh,0x21
  427dcf:	adc    BYTE PTR [edi+0x21d780ef],0x80
  427dd6:	out    0xef,eax
  427dd8:	and    BYTE PTR [edi+0x53b65321],0x32
  427ddf:	or     DWORD PTR [esi-0x3e],eax
  427de2:	or     al,0xb2
  427de4:	mov    esp,0x8d4ba229
  427de9:	lea    ecx,[ebp-0x5bac33]
  427def:	xchg   esp,eax
  427df0:	mov    dl,0x88
  427df2:	or     al,0xff
  427df4:	dec    ebx
  427df5:	and    bh,0x71
  427df8:	and    BYTE PTR [edi+0x53cb5315],0x82
  427dff:	xor    BYTE PTR [edi+0x71],0x80
  427e03:	lock adc eax,0xcac4609
  427e09:	push   ebx
  427e0a:	jo     0x427e0b
  427e0c:	retf   
  427e0d:	mov    dl,0x84
  427e0f:	sub    DWORD PTR [edi-0x73],edx
  427e12:	lea    ecx,[ebp+0xcc4b2cd]
  427e18:	inc    DWORD PTR [edx-0x7fc28880]
  427e1e:	lock inc ebp
  427e20:	in     al,dx
  427e21:	pushf  
  427e22:	and    bh,0x3d
  427e25:	adc    eax,esi
  427e27:	and    BYTE PTR [edi-0x79fa5dbb],0x8f
  427e2e:	inc    ebx
  427e2f:	es push edi
  427e31:	fistp  DWORD PTR [eax-0x21]
  427e34:	adc    DWORD PTR [ecx],ecx
  427e36:	inc    esi
  427e37:	std    
  427e38:	or     al,0xb2
  427e3a:	mov    esp,0xcbeb229
  427e3f:	push   ebx
  427e40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427e41:	mov    ds:0x8d8d8d4b,al
  427e46:	int    0xff
  427e48:	sub    bh,bh
  427e4a:	je     0x427e38
  427e4c:	not    DWORD PTR [ebx]
  427e4e:	add    eax,0x80eff080
  427e53:	xchg   edi,eax
  427e54:	and    DWORD PTR [eax-0x587f8e19],eax
  427e5a:	adc    eax,0xed8abaed
  427e5f:	mov    esp,0xd505a28a
  427e64:	pop    eax
  427e65:	fist   WORD PTR [ecx]
  427e67:	mov    ds:0xdf58d54b,al
  427e6c:	adc    DWORD PTR [edx+0x6a532988],esi
  427e72:	mov    ds:0x438f86c2,al
  427e77:	mov    es:0x438f86c6,al
  427e7d:	es in  al,dx
  427e7f:	sub    dl,BYTE PTR [ebx]
  427e81:	xchg   esp,eax
  427e82:	mov    esi,0x4d4d0d48
  427e87:	xchg   edi,eax
  427e88:	add    BYTE PTR [edi-0x66e27813],0x60
  427e8f:	fstp   DWORD PTR [eax-0x21]
  427e92:	adc    DWORD PTR [eax-0x10],edx
  427e95:	xor    bl,BYTE PTR [esi-0x7a]
  427e98:	pop    DWORD PTR [ebx+0x26]
  427e9b:	push   eax
  427e9c:	ja     0x427e66
  427e9e:	jl     0x427f17
  427ea0:	xchg   ah,ah
  427ea2:	pop    eax
  427ea3:	fist   WORD PTR [ecx]
  427ea5:	push   eax
  427ea6:	ja     0x427e2f
  427ea8:	adc    BYTE PTR [edi-0x37287fce],0x9b
  427eaf:	or     DWORD PTR [esi-0x3e],eax
  427eb2:	or     al,0xb2
  427eb4:	mov    BYTE PTR [eax+eax*4],cl
  427eb7:	xlat   BYTE PTR ds:[ebx]
  427eb8:	xor    al,BYTE PTR [eax-0x5df53719]
  427ebe:	ret    0xc7a7
  427ec1:	add    al,0xd4
  427ec3:	push   ebx
  427ec4:	dec    ebp
  427ec5:	xchg   esi,eax
  427ec6:	call   FWORD PTR [eax+edx*2-0x687f7569]
  427ecd:	and    DWORD PTR [eax-0x69],edx
  427ed0:	and    DWORD PTR [ebp-0x29],ecx
  427ed3:	and    DWORD PTR [ecx],eax
  427ed5:	ja     0x427e61
  427ed7:	dec    ebp
  427ed8:	xlat   BYTE PTR ds:[ebx]
  427ed9:	out    dx,eax
  427eda:	mov    dl,0x2
  427edc:	sub    DWORD PTR [edx],ecx
  427ede:	dec    ebp
  427edf:	xlat   BYTE PTR ds:[ebx]
  427ee0:	and    DWORD PTR [ebp-0x29],ecx
  427ee3:	xchg   DWORD PTR [ebp-0x29],ecx
  427ee6:	xchg   BYTE PTR [ebp-0x29],cl
  427ee9:	enter  0xd74d,0x32
  427eed:	xchg   bh,ah
  427eef:	mov    cl,BYTE PTR [ebp+0x4d]
  427ef2:	stos   DWORD PTR es:[edi],eax
  427ef3:	push   eax
  427ef4:	ja     0x427e80
  427ef6:	xor    BYTE PTR [edi-0x76],0xa9
  427efa:	jo     0x427ef7
  427efc:	out    dx,eax
  427efd:	lea    edx,[edi-0x6127880]
  427f03:	mov    ebp,ebp
  427f05:	xchg   DWORD PTR [ebp-0x67],eax
  427f08:	jl     0x427f7f
  427f0a:	xor    eax,0x8d8d8d35
  427f0f:	lea    edi,[ebp+esi*2+0x35]
  427f13:	inc    ebp
  427f14:	lea    ecx,[ebp+0x75018d8d]
  427f1a:	xor    eax,0xd74d0a71
  427f1f:	xor    eax,0x4d2dd74d
  427f24:	xlat   BYTE PTR ds:[ebx]
  427f25:	and    eax,0x4d1dd74d
  427f2a:	xlat   BYTE PTR ds:[ebx]
  427f2b:	adc    eax,0x4d71d74d
  427f30:	xlat   BYTE PTR ds:[ebx]
  427f31:	and    DWORD PTR [ebp-0x29],ecx
  427f34:	out    dx,eax
  427f35:	xchg   cl,bl
  427f37:	mov    eax,0x77804d4d
  427f3c:	out    dx,eax
  427f3d:	push   eax
  427f3e:	jne    0x427f75
  427f40:	out    dx,al
  427f41:	xor    BYTE PTR [ebp+0x35],0x35
  427f45:	dec    edi
  427f46:	push   0x9
  427f48:	prefetcht0 BYTE PTR [ebp+0x75808d8d]
  427f4f:	xor    eax,0x96a4f45
  427f54:	(bad)  
  427f56:	lea    ecx,[ebp+0x35d54d8d]
  427f5c:	and    eax,0x2535d54d
  427f61:	dec    ebp
  427f62:	aad    0x35
  427f64:	and    eax,0x81357580
  427f69:	dec    ebp
  427f6a:	test   DWORD PTR [eax-0x7f11ca8b],0x80ee3575
  427f74:	jne    0x427fab
  427f76:	out    dx,al
  427f77:	add    DWORD PTR [edi-0x12],esi
  427f7a:	push   eax
  427f7b:	jne    0x427fb2
  427f7d:	out    dx,eax
  427f7e:	xor    BYTE PTR [ebp+0x35],0x3d
  427f82:	in     al,dx
  427f83:	jne    0x427fba
  427f85:	out    dx,al
  427f86:	push   eax
  427f87:	jne    0x427fbe
  427f89:	out    dx,al
  427f8a:	xor    BYTE PTR [ebp+0x35],0xee
  427f8e:	xor    BYTE PTR [ebp+0x35],0xee
  427f92:	xor    BYTE PTR [ecx],0x35
  427f95:	out    dx,al
  427f96:	adc    BYTE PTR [eax+0x26],0x3a
  427f9a:	lea    ecx,[ebp-0x2a7ff180]
  427fa0:	xor    eax,0x2ecd80ef
  427fa5:	cmp    cl,BYTE PTR [ebp+0x9195f8d]
  427fab:	jmp    0x7180:0x8d8d3a16
  427fb2:	add    BYTE PTR [ecx+0x165aa80],0x95
  427fb9:	sbb    DWORD PTR [edx],ecx
  427fbb:	sub    BYTE PTR [esi-0x80],0x90
  427fbf:	in     al,dx
  427fc0:	jle    0x427f42
  427fc2:	aad    0x35
  427fc4:	out    dx,eax
  427fc5:	pop    edi
  427fc6:	sbb    DWORD PTR [ecx],ecx
  427fc8:	in     eax,dx
  427fc9:	fstp   TBYTE PTR [edx]
  427fcb:	lea    ecx,[ebp-0x10ca6a80]
  427fd1:	sub    BYTE PTR [esi-0x80],0xa6
  427fd5:	or     BYTE PTR [ebp-0x4d13aebd],0x50
  427fdc:	or     al,0xbe
  427fde:	sar    BYTE PTR [edx],1
  427fe0:	lea    ecx,[ebp+0x45357580]
  427fe6:	dec    edi
  427fe7:	push   0x9
  427fe9:	dec    edi
  427fea:	cdq    
  427feb:	cmp    cl,BYTE PTR [ebp+0x3575808d]
  427ff1:	out    dx,al
  427ff2:	or     ch,0x2e
  427ff5:	cmp    cl,BYTE PTR [ebp+0x508d808d]
  427ffb:	jne    0x428032
  427ffd:	and    DWORD PTR [eax-0x7f11ca8b],eax
  428003:	int    0x26
  428005:	cmp    cl,BYTE PTR [ebp+0x508d808d]
  42800b:	jne    0x428042
  42800d:	and    DWORD PTR [eax-0x7f11ca8b],eax
  428013:	int    0x10
  428015:	cmp    cl,BYTE PTR [ebp-0x7f727f73]
  42801b:	lea    edx,[eax+0x75]
  42801e:	xor    eax,0x35758021
  428023:	out    dx,al
  428024:	or     ch,0x41
  428027:	cmp    cl,BYTE PTR [ebp-0x7f727f73]
  42802d:	lea    edx,[eax+0x75]
  428030:	xor    eax,0x35758021
  428035:	out    dx,al
  428036:	xor    BYTE PTR [ecx],0x35
  428039:	out    dx,al
  42803a:	or     ch,0x82
  42803d:	cmp    cl,BYTE PTR [ebp-0x7daf7f73]
  428043:	cmp    cl,BYTE PTR [ebp-0x7f727f73]
  428049:	xor    dl,bh
  42804b:	and    ah,BYTE PTR [edi+ebp*2]
  42804e:	cmp    BYTE PTR [ebx-0x4],dl
  428051:	in     eax,dx
  428052:	add    eax,0xc86b20d
  428057:	mov    dl,0xba
  428059:	sub    edi,edi
  42805b:	std    
  42805c:	push   eax
  42805d:	xor    DWORD PTR ds:0x35757c21,esi
  428063:	out    dx,eax
  428064:	lea    ecx,[ebp+0x75808d8d]
  42806a:	xor    eax,0xd56a4f35
  42806f:	ret    
  428070:	xor    BYTE PTR [ebp+0x35],0x71
  428074:	in     eax,dx
  428075:	xchg   BYTE PTR [ebp-0x2a82272b],cl
  42807b:	push   ebx
  42807c:	jge    0x4280fb
  42807e:	aad    0x23
  428080:	jge    0x428059
  428082:	fmul   DWORD PTR [ebp-0x2b]
  428085:	xor    eax,0x35d54d2d
  42808a:	sub    eax,0x2d35d54d
  42808f:	dec    ebp
  428090:	aad    0x35
  428092:	sub    eax,0x55357580
  428097:	dec    ebp
  428098:	test   esp,0x35d54d39
  42809e:	and    eax,0x2535d54d
  4280a3:	dec    ebp
  4280a4:	aad    0x35
  4280a6:	and    eax,0x81357580
  4280ab:	dec    ebp
  4280ac:	test   esp,0x35d54d90
  4280b2:	adc    eax,0x3d357580
  4280b7:	dec    ebp
  4280b8:	test   esp,0x3575806f
  4280be:	xor    eax,0x7550f74d
  4280c3:	xor    eax,0x357580ef
  4280c8:	and    DWORD PTR [edi+0x6a],ecx
  4280cb:	aad    0xa1
  4280cd:	xor    BYTE PTR [ebp+0x35],0xee
  4280d1:	jl     0x4280a0
  4280d3:	test   BYTE PTR [edx],bh
  4280d5:	lea    ecx,[ebp+0x386f24f5]
  4280db:	xor    BYTE PTR [ebp+0x35],0xef
  4280df:	xor    BYTE PTR [ecx],0x35
  4280e2:	out    dx,al
  4280e3:	adc    BYTE PTR [eax-0x7d],0x3a
  4280e7:	lea    ecx,[ebp+0x757c3a50]
  4280ed:	xor    eax,0x6f24f6ef
  4280f2:	cmp    BYTE PTR [eax-0x7f10ca8b],al
  4280f8:	xor    DWORD PTR ds:0xedfc53ef,esi
  4280fe:	add    eax,0x29bab20d
  428103:	mov    dl,0x86
  428105:	or     al,0xff
  428107:	mov    dl,0x80
  428109:	xor    DWORD PTR ds:0xd7b26321,esi
  42810f:	and    eax,DWORD PTR [eax-0x7f11ca8b]
  428115:	xor    DWORD PTR ds:0x835080ee,esi
  42811b:	cmp    cl,BYTE PTR [ebp-0x7f91b273]
  428121:	int    0x32
  428123:	cmp    cl,BYTE PTR [ebp+0x3d0a4d8d]
  428129:	les    ebx,FWORD PTR [edi]
  42812b:	add    DWORD PTR [edi-0x12],esi
  42812e:	push   eax
  42812f:	jne    0x428166
  428131:	and    DWORD PTR [eax-0x7fdeca8b],eax
  428137:	xor    DWORD PTR ds:0xe55080ee,esi
  42813d:	cmp    cl,BYTE PTR [ebp+0x3a30808d]
  428143:	out    dx,eax
  428144:	xor    BYTE PTR [ebp+0x35],0xee
  428148:	or     ch,0x87
  42814b:	cmp    cl,BYTE PTR [ebp-0x7f10b273]
  428151:	xor    DWORD PTR ds:0x865080ee,esi
  428157:	cmp    cl,BYTE PTR [ebp+0x18d808d]
  42815d:	out    dx,al
  42815e:	mov    ds:0xee353180,al
  428163:	adc    BYTE PTR [eax-0x1b],0x3a
  428167:	lea    ecx,[ebp+0x30808d80]
  42816d:	cmp    ch,bh
  42816f:	test   eax,0xfba7b880
  428174:	sub    eax,0x614c748d
  428179:	imul   edi,DWORD PTR [ecx+0x62],0x69
  42817d:	popa   
  42817e:	push   0x6c656548
  428183:	ins    BYTE PTR es:[edi],dx
  428184:	outs   dx,DWORD PTR ds:[esi]
  428185:	ja     0x428187
  428187:	popa   
  428188:	ins    DWORD PTR es:[edi],dx
  428189:	imul   edi,DWORD PTR [edx+0x65],0x676f6e70
  428190:	push   ebp
  428191:	outs   dx,BYTE PTR ds:[esi]
  428192:	bound  esp,QWORD PTR [ebp+0x0]
  428195:	push   0x6572576d
  42819a:	outs   dx,BYTE PTR ds:[esi]
  42819b:	jne    0x428201
  42819d:	outs   dx,DWORD PTR ds:[esi]
  42819e:	popa   
  42819f:	push   0x6b637573
  4281a4:	add    BYTE PTR [ebp+0x6f],cl
  4281a7:	ins    DWORD PTR es:[edi],dx
  4281a8:	imul   ecx,DWORD PTR [ebp+0x75],0x6c617367
  4281af:	jo     0x428216
  4281b1:	je     0x4281b3
  4281b3:	dec    edx
  4281b4:	gs jae 0x42822a
  4281b7:	ins    BYTE PTR es:[edi],dx
  4281b8:	outs   dx,DWORD PTR ds:[esi]
  4281b9:	dec    edi
  4281ba:	js     0x428221
  4281bc:	outs   dx,BYTE PTR ds:[esi]
  4281bd:	outs   dx,DWORD PTR ds:[esi]
  4281be:	jb     0x428221
  4281c0:	add    BYTE PTR [edi+0x6f],al
  4281c3:	ja     0x428229
  4281c5:	dec    ebp
  4281c6:	imul   esi,DWORD PTR [ebx+0x6f],0x706179
  4281cd:	imul   esi,DWORD PTR fs:[eax+0x6f],0x6d6f6d72
  4281d5:	imul   esp,DWORD PTR [ebx+0x6b],0x6c6c4900
  4281dc:	jae    0x42824b
  4281de:	popa   
  4281df:	fs jns 0x428251
  4281e2:	imul   ebp,DWORD PTR [ecx+0x0],0x6b
  4281e6:	imul   esi,DWORD PTR [edx+0x7a],0x64756261
  4281ed:	bound  esi,QWORD PTR [ebp+0x6d]
  4281f0:	add    BYTE PTR [ebp+0x72],al
  4281f3:	outs   dx,DWORD PTR ds:[si]
  4281f5:	jo     0x428258
  4281f7:	jns    0x42825f
  4281f9:	imul   edi,DWORD PTR [eax+0x0],0x6d736e6f
  428200:	jne    0x42826f
  428202:	popa   
  428203:	gs fs jo 0x42826c
  428207:	imul   esi,DWORD PTR [esi+0x79],0x67756800
  42820e:	dec    esp
  42820f:	outs   dx,DWORD PTR ds:[esi]
  428210:	jne    0x428276
  428212:	push   0x6d6d7069
  428217:	add    BYTE PTR [edi+0x6c],al
  42821a:	outs   dx,DWORD PTR ds:[esi]
  42821b:	jo     0x428270
  42821d:	ja     0x42828e
  42821f:	bound  eax,QWORD PTR [eax]
  428221:	jns    0x428292
  428223:	pop    ecx
  428224:	gs ins BYTE PTR es:[edi],dx
  428226:	jo     0x428281
  428228:	jne    0x428296
  42822a:	gs gs jae 0x42828f
  42822e:	popa   
  42822f:	add    BYTE PTR [ecx+0x77],ah
  428232:	popa   
  428233:	inc    esi
  428234:	imul   ebp,DWORD PTR [esi+0x65],0x4f706173
  42823b:	outs   dx,BYTE PTR ds:[esi]
  42823c:	je     0x4282ad
  42823e:	add    BYTE PTR [ebp+0x73],ah
  428241:	dec    esp
  428242:	imul   ebp,DWORD PTR [esi+0x67],0x68737574
  428249:	ins    BYTE PTR es:[edi],dx
  42824a:	outs   dx,DWORD PTR ds:[esi]
  42824b:	bound  esp,QWORD PTR [ebp+0x0]
  42824e:	push   0x617a6761
  428253:	bound  ebp,QWORD PTR [edi+0x75]
  428256:	jo     0x428258
  428258:	inc    edx
  428259:	outs   dx,DWORD PTR ds:[esi]
  42825a:	jb     0x4282d0
  42825c:	popa   
  42825d:	js     0x4282ce
  42825f:	data16 jo 0x4282c7
  428262:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x776f0077
  42826a:	fs gs popa 
  42826d:	outs   dx,DWORD PTR fs:[esi]
  42826f:	jae    0x4282e9
  428271:	jne    0x428273
  428273:	inc    edi
  428274:	add    BYTE PTR [edi+0x0],ch
  428277:	add    BYTE PTR gs:[ebx+0x0],dh
  42827b:	dec    edx
  42827c:	add    BYTE PTR [ecx+0x0],ah
  42827f:	jbe    0x428281
  428281:	popa   
  428282:	add    BYTE PTR [eax],al
  428284:	add    BYTE PTR [edx+0x0],al
  428287:	popa   
  428288:	add    BYTE PTR [edx+0x0],ah
  42828b:	jne    0x42828d
  42828d:	outs   dx,DWORD PTR ds:[esi]
  42828e:	add    BYTE PTR [ebp+0x0],ch
  428291:	push   0x6d00
  428296:	add    BYTE PTR [edx+0x0],dh
  428299:	popa   
  42829a:	add    BYTE PTR [eax+eax*1+0x74],dh
  42829e:	add    BYTE PTR [ecx+0x0],ah
  4282a1:	ins    DWORD PTR es:[edi],dx
  4282a2:	add    BYTE PTR [edi+0x0],ah
  4282a5:	popa   
  4282a6:	add    BYTE PTR [ecx+0x0],bh
  4282a9:	js     0x4282ab
  4282ab:	imul   eax,DWORD PTR [eax],0x610000
  4282b1:	ins    DWORD PTR es:[edi],dx
  4282b2:	add    BYTE PTR [ecx+0x0],ah
  4282b5:	ins    BYTE PTR es:[edi],dx
  4282b6:	add    BYTE PTR [edx+0x0],ah
  4282b9:	outs   dx,DWORD PTR ds:[esi]
  4282ba:	add    BYTE PTR [edi+0x0],ch
  4282bd:	popa   
  4282be:	add    BYTE PTR [eax+0x0],dh
  4282c1:	jo     0x4282c3
  4282c3:	add    BYTE PTR [eax],al
  4282c5:	popa   
  4282c6:	add    BYTE PTR [esi+0x0],dh
  4282c9:	popa   
  4282ca:	add    BYTE PTR [edi+0x0],ah
  4282cd:	outs   dx,DWORD PTR ds:[esi]
  4282ce:	add    BYTE PTR [ebx+0x0],dh
  4282d1:	push   0x77006f00
  4282d6:	add    BYTE PTR [eax+eax*1+0x65],ch
  4282da:	add    BYTE PTR [ebp+0x0],dh
  4282dd:	add    BYTE PTR fs:[ebp+0x0],ah
  4282e1:	add    BYTE PTR fs:[eax],al
  4282e4:	add    BYTE PTR [eax+0x0],cl
  4282e7:	popa   
  4282e8:	add    BYTE PTR [edx+0x0],dh
  4282eb:	add    BYTE PTR gs:[edx+0x0],al
  4282ef:	imul   eax,DWORD PTR [eax],0x6b0072
  4282f5:	arpl   WORD PTR [eax],ax
  4282f7:	popa   
  4282f8:	add    BYTE PTR [ebp+0x0],ch
  4282fb:	add    BYTE PTR [eax],al
  4282fd:	imul   eax,DWORD PTR [eax],0x61
  428300:	add    BYTE PTR [edi+0x0],dh
  428303:	popa   
  428304:	add    BYTE PTR [eax+0x0],bh
  428307:	outs   dx,DWORD PTR ds:[esi]
  428308:	add    BYTE PTR [edi+0x0],ch
  42830b:	je     0x42830d
  42830d:	add    BYTE PTR [eax],al
  42830f:	jb     0x428311
  428311:	jne    0x428313
  428313:	add    BYTE PTR gs:[ecx+0x0],ah
  428317:	ins    BYTE PTR es:[edi],dx
  428318:	add    BYTE PTR [eax+eax*1+0x68],ch
  42831c:	add    BYTE PTR [ebp+0x0],ch
  42831f:	ins    DWORD PTR es:[edi],dx
  428320:	add    BYTE PTR [eax],al
  428322:	add    BYTE PTR [edi+0x0],ch
  428325:	add    BYTE PTR gs:[eax+0x0],bh
  428329:	imul   eax,DWORD PTR [eax],0x650072
  42832f:	ja     0x428331
  428331:	outs   dx,DWORD PTR ds:[esi]
  428332:	add    BYTE PTR [ebp+0x0],ah
  428335:	popa   
  428336:	add    BYTE PTR [edx+0x0],ah
  428339:	ins    BYTE PTR es:[edi],dx
  42833a:	add    BYTE PTR [ecx+0x0],ch
  42833d:	add    BYTE PTR [eax],al
  42833f:	jne    0x428341
  428341:	ins    DWORD PTR es:[edi],dx
  428342:	add    BYTE PTR [esi+0x0],ch
  428345:	outs   dx,DWORD PTR ds:[esi]
  428346:	add    BYTE PTR [edi+0x0],ah
  428349:	bound  eax,QWORD PTR [eax]
  42834b:	popa   
  42834c:	add    BYTE PTR [esi+0x0],dh
  42834f:	outs   dx,DWORD PTR ds:[esi]
  428350:	add    BYTE PTR [edi+0x0],dh
  428353:	bound  eax,QWORD PTR [eax]
  428355:	add    BYTE PTR gs:[eax+eax*1+0x0],ch
  42835a:	add    BYTE PTR [eax],al
  42835c:	add    bh,dh
  42835e:	sub    al,0x10
  428360:	add    BYTE PTR [esi],bl
  428362:	aaa    
  428363:	adc    BYTE PTR [eax],al
  428365:	and    al,0x42
  428367:	adc    BYTE PTR [eax],al
  428369:	rol    BYTE PTR [eax+edx*1],cl
  42836c:	add    ch,dh
  42836e:	xor    BYTE PTR [eax],dl
  428370:	add    BYTE PTR [esi-0x1affefcf],dh
  428376:	cmp    dl,BYTE PTR [eax]
  428378:	add    BYTE PTR [ebx],dh
  42837a:	ins    BYTE PTR es:[edi],dx
  42837b:	adc    BYTE PTR [eax],al
  42837d:	sub    DWORD PTR [eax+edx*1+0x0],esp
  428381:	push   ecx
  428382:	inc    ecx
  428383:	adc    BYTE PTR [eax],al
  428385:	mov    cl,0x60
  428387:	adc    BYTE PTR [eax],al
  428389:	aas    
  42838a:	or     al,0x10
  42838c:	add    al,bh
  42838e:	and    DWORD PTR [eax],edx
  428390:	add    BYTE PTR [edx+0x37],dl
  428393:	adc    BYTE PTR [eax],al
  428395:	test   eax,0xa3001054
  42839a:	add    DWORD PTR [eax],edx
  42839c:	add    BYTE PTR [edi],ah
  42839e:	push   esp
  42839f:	adc    BYTE PTR [eax],al
  4283a1:	cmc    
  4283a2:	push   esi
  4283a3:	adc    BYTE PTR [eax],al
  4283a5:	imul   ecx,DWORD PTR [ebx],0x10
  4283a8:	add    BYTE PTR [ebp-0x7d],bl
  4283ab:	inc    edx
  4283ac:	add    BYTE PTR [ecx-0x7d],ah
  4283af:	inc    edx
  4283b0:	add    BYTE PTR [ebp-0x7d],ah
  4283b3:	inc    edx
  4283b4:	add    BYTE PTR [ecx-0x7d],ch
  4283b7:	inc    edx
  4283b8:	add    BYTE PTR [ebp-0x7d],ch
  4283bb:	inc    edx
  4283bc:	add    BYTE PTR [ecx-0x7d],dh
  4283bf:	inc    edx
  4283c0:	add    BYTE PTR [ebp-0x7d],dh
  4283c3:	inc    edx
  4283c4:	add    BYTE PTR [ecx-0x7d],bh
  4283c7:	inc    edx
  4283c8:	add    BYTE PTR [ebp-0x7d],bh
  4283cb:	inc    edx
  4283cc:	add    BYTE PTR [ecx-0x7affbd7d],al
  4283d2:	add    DWORD PTR [edx+0x0],0xffffff89
  4283d6:	add    DWORD PTR [edx+0x0],0xffffff8d
  4283da:	add    DWORD PTR [edx+0x0],0xffffff91
  4283de:	add    DWORD PTR [edx+0x0],0xffffff95
  4283e2:	add    DWORD PTR [edx+0x0],0xffffff99
  4283e6:	add    DWORD PTR [edx+0x0],0xffffff9d
  4283ea:	add    DWORD PTR [edx+0x0],0xffffffa1
  4283ee:	add    DWORD PTR [edx+0x0],0xffffffa5
  4283f2:	add    DWORD PTR [edx+0x0],0x35
  4283f6:	test   BYTE PTR [edx+0x0],al
  4283f9:	cmp    DWORD PTR [edx+eax*2+0x42843d00],eax
  428400:	add    BYTE PTR [ecx-0x7c],al
  428403:	inc    edx
  428404:	add    BYTE PTR [ebp-0x7c],al
  428407:	inc    edx
  428408:	add    BYTE PTR [ecx-0x7c],cl
  42840b:	inc    edx
  42840c:	add    BYTE PTR [ebp-0x7c],cl
  42840f:	inc    edx
  428410:	add    BYTE PTR [ecx-0x7c],dl
  428413:	inc    edx
  428414:	add    BYTE PTR [ebp-0x7c],dl
  428417:	inc    edx
  428418:	add    BYTE PTR [ecx-0x7c],bl
  42841b:	inc    edx
  42841c:	add    BYTE PTR [ebp-0x7c],bl
  42841f:	inc    edx
  428420:	add    BYTE PTR [ecx-0x7c],ah
  428423:	inc    edx
  428424:	add    BYTE PTR [ebp-0x7c],ah
  428427:	inc    edx
  428428:	add    BYTE PTR [ecx-0x7c],ch
  42842b:	inc    edx
  42842c:	add    BYTE PTR [ebp-0x7c],ch
  42842f:	inc    edx
  428430:	add    BYTE PTR [ecx-0x7c],dh
  428433:	inc    edx
  428434:	add    BYTE PTR [ebx+0x30],ah
  428437:	adc    BYTE PTR [eax],al
  428439:	push   ecx
  42843a:	xor    DWORD PTR [eax],edx
  42843c:	add    BYTE PTR [edi+ebx*2+0x10],ch
  428440:	add    BYTE PTR [ebx-0x5ffefc3],bl
  428446:	aaa    
  428447:	adc    BYTE PTR [eax],al
  428449:	(bad)  
  42844a:	pop    esi
  42844b:	adc    BYTE PTR [eax],al
  42844d:	call   0x1040:0xa400106a
  428454:	add    BYTE PTR [esi+0x23],ah
  428457:	adc    BYTE PTR [eax],al
  428459:	xor    DWORD PTR [eax],ebx
  42845b:	adc    BYTE PTR [eax],al
  42845d:	mov    edi,DWORD PTR [edi]
  42845f:	adc    BYTE PTR [eax],al
  428461:	and    BYTE PTR [ecx+0x10],0x0
  428465:	clc    
  428466:	ja     0x428478
  428468:	add    BYTE PTR [eax],dh
  42846a:	xor    dl,BYTE PTR [eax]
  42846c:	add    BYTE PTR [edx+esi*2+0x6bfb0010],ch
  428473:	adc    BYTE PTR [eax],al
  428475:	mov    fs,WORD PTR [ebx+0x10]
  428478:	add    BYTE PTR [ecx+0x6200107e],bl
  42847e:	daa    
  42847f:	adc    BYTE PTR [eax],al
  428481:	mov    edi,0x2e001069
  428486:	sub    eax,0x413c0010
  42848b:	adc    BYTE PTR [eax],al
  42848d:	xor    BYTE PTR [eax],dh
  42848f:	adc    BYTE PTR [eax],al
  428491:	outs   dx,BYTE PTR ds:[esi]
  428492:	dec    edi
  428493:	adc    BYTE PTR [eax],al
  428495:	adc    eax,0xeb001025
  42849a:	bound  edx,QWORD PTR [eax]
  42849c:	add    BYTE PTR [edi],dh
  42849e:	and    dl,BYTE PTR [eax]
  4284a0:	add    BYTE PTR [ebx+0x1a],bl
  4284a3:	adc    BYTE PTR [eax],al
  4284a5:	mov    BYTE PTR [esi+0x10],ch
  4284a8:	add    BYTE PTR [esi],ah
  4284aa:	pusha  
  4284ab:	adc    BYTE PTR [eax],al
  4284ad:	pop    es
  4284ae:	adc    eax,0x1ca50010
  4284b3:	adc    BYTE PTR [eax],al
  4284b5:	jne    0x42843b
  4284b7:	inc    edx
  4284b8:	add    BYTE PTR [ecx-0x7c],bh
  4284bb:	inc    edx
  4284bc:	add    BYTE PTR [ebp-0x7c],bh
  4284bf:	inc    edx
  4284c0:	add    BYTE PTR [ecx-0x7affbd7c],al
  4284c6:	test   BYTE PTR [edx+0x0],al
  4284c9:	mov    DWORD PTR [edx+eax*2+0x42848d00],eax
  4284d0:	add    BYTE PTR [ecx-0x6affbd7c],dl
  4284d6:	test   BYTE PTR [edx+0x0],al
  4284d9:	cdq    
  4284da:	test   BYTE PTR [edx+0x0],al
  4284dd:	popf   
  4284de:	test   BYTE PTR [edx+0x0],al
  4284e1:	mov    eax,ds:0xa5004284
  4284e6:	test   BYTE PTR [edx+0x0],al
  4284e9:	test   eax,0xad004284
  4284ee:	test   BYTE PTR [edx+0x0],al
  4284f1:	mov    cl,0x84
  4284f3:	inc    edx
  4284f4:	add    BYTE PTR [ebp+0x200102f],ah
  4284fa:	jle    0x42850c
  4284fc:	add    BYTE PTR [ebx],ch
  4284fe:	adc    al,0x10
  428500:	add    BYTE PTR ds:0x4b001060,ah
  428506:	pop    edx
  428507:	adc    BYTE PTR [eax],al
  428509:	dec    ecx
  42850a:	jne    0x42851c
  42850c:	add    dh,ch
  42850e:	pop    esp
  42850f:	adc    BYTE PTR [eax],al
  428511:	push   edx
  428512:	cmp    eax,0x529b0010
  428517:	adc    BYTE PTR [eax],al
  428519:	pop    ss
  42851a:	cmp    dl,BYTE PTR [eax]
  42851c:	add    BYTE PTR [ebp-0x64ffef93],cl
  428522:	xor    eax,0x158d0010
  428527:	adc    BYTE PTR [eax],al
  428529:	adc    DWORD PTR [edi+0x10],ebp
  42852c:	add    BYTE PTR [ecx+0x51],ch
  42852f:	adc    BYTE PTR [eax],al
  428531:	jmp    0x42853f
  428533:	adc    BYTE PTR [eax],al
  428535:	cmc    
  428536:	test   BYTE PTR [edx+0x0],al
  428539:	stc    
  42853a:	test   BYTE PTR [edx+0x0],al
  42853d:	std    
  42853e:	test   BYTE PTR [edx+0x0],al
  428541:	add    DWORD PTR [ebp-0x7afaffbe],eax
  428547:	inc    edx
  428548:	add    BYTE PTR [ecx],cl
  42854a:	test   DWORD PTR [edx+0x0],eax
  42854d:	or     eax,0x11004285
  428552:	test   DWORD PTR [edx+0x0],eax
  428555:	adc    eax,0x19004285
  42855a:	test   DWORD PTR [edx+0x0],eax
  42855d:	sbb    eax,0x21004285
  428562:	test   DWORD PTR [edx+0x0],eax
  428565:	and    eax,0x29004285
  42856a:	test   DWORD PTR [edx+0x0],eax
  42856d:	sub    eax,0x31004285
  428572:	test   DWORD PTR [edx+0x0],eax
  428575:	xlat   BYTE PTR ds:[ebx]
  428576:	inc    ebp
  428577:	adc    BYTE PTR [eax],al
  428579:	xlat   BYTE PTR ds:[ebx]
  42857a:	pusha  
  42857b:	adc    BYTE PTR [eax],al
  42857d:	lea    ebp,[eax+edx*1+0x0]
  428581:	hlt    
  428582:	add    BYTE PTR [eax],dl
  428584:	add    BYTE PTR [esp+esi*2],dl
  428587:	adc    BYTE PTR [eax],al
  428589:	out    0x44,al
  42858b:	adc    BYTE PTR [eax],al
  42858d:	dec    esi
  42858e:	bound  edx,QWORD PTR [eax]
  428590:	add    BYTE PTR [edi+ebp*2],ch
  428593:	adc    BYTE PTR [eax],al
  428595:	cmp    ebx,DWORD PTR [ebx]
  428597:	adc    BYTE PTR [eax],al
  428599:	inc    ebp
  42859a:	pop    ecx
  42859b:	adc    BYTE PTR [eax],al
  42859d:	imul   BYTE PTR [ecx+0x10]
  4285a0:	add    BYTE PTR [esi],ah
  4285a2:	arpl   WORD PTR [eax],dx
  4285a4:	add    BYTE PTR [ebp-0x4fffefee],bh
  4285aa:	sbb    edx,DWORD PTR [eax]
  4285ac:	add    BYTE PTR [ebx],ah
  4285ae:	adc    BYTE PTR ds:[eax],al
  4285b1:	xchg   ebx,eax
  4285b2:	push   ecx
  4285b3:	adc    BYTE PTR [eax],al
  4285b5:	jne    0x42853c
  4285b7:	inc    edx
  4285b8:	add    BYTE PTR [ecx-0x7b],bh
  4285bb:	inc    edx
  4285bc:	add    BYTE PTR [ebp-0x7b],bh
  4285bf:	inc    edx
  4285c0:	add    BYTE PTR [ecx-0x7affbd7b],al
  4285c6:	test   DWORD PTR [edx+0x0],eax
  4285c9:	mov    DWORD PTR [ebp-0x7a72ffbe],eax
  4285cf:	inc    edx
  4285d0:	add    BYTE PTR [ecx-0x6affbd7b],dl
  4285d6:	test   DWORD PTR [edx+0x0],eax
  4285d9:	cdq    
  4285da:	test   DWORD PTR [edx+0x0],eax
  4285dd:	popf   
  4285de:	test   DWORD PTR [edx+0x0],eax
  4285e1:	mov    eax,ds:0xa5004285
  4285e6:	test   DWORD PTR [edx+0x0],eax
  4285e9:	test   eax,0xad004285
  4285ee:	test   DWORD PTR [edx+0x0],eax
  4285f1:	mov    cl,0x85
  4285f3:	inc    edx
	...
  428604:	sub    ch,dl
  428606:	mov    dh,0x4f
  428608:	add    BYTE PTR [eax],al
  42860a:	add    BYTE PTR [eax],al
  42860c:	jo     0x4285a4
  42860e:	add    al,BYTE PTR [eax]
  428610:	add    DWORD PTR [eax],eax
  428612:	add    BYTE PTR [eax],al
  428614:	add    DWORD PTR [eax],eax
  428616:	add    BYTE PTR [eax],al
  428618:	add    DWORD PTR [eax],eax
  42861a:	add    BYTE PTR [eax],al
  42861c:	inc    eax
  42861d:	xchg   esi,eax
  42861e:	add    al,BYTE PTR [eax]
  428620:	pusha  
  428621:	xchg   esi,eax
  428622:	add    al,BYTE PTR [eax]
  428624:	push   eax
  428625:	xchg   esi,eax
  428626:	add    al,BYTE PTR [eax]
	...
  428630:	inc    eax
  428631:	mov    DWORD PTR [edx],eax
  428633:	add    BYTE PTR [eax],al
  428635:	add    BYTE PTR [eax],al
  428637:	add    BYTE PTR [esi-0x77],bl
  42863a:	add    al,BYTE PTR [eax]
  42863c:	jb     0x4285c7
  42863e:	add    al,BYTE PTR [eax]
  428640:	mov    BYTE PTR [ecx-0x7667fffe],cl
  428646:	add    al,BYTE PTR [eax]
  428648:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428649:	mov    DWORD PTR [edx],eax
  42864b:	add    BYTE PTR [esi-0x35fffd77],bh
  428651:	mov    DWORD PTR [edx],eax
  428653:	add    al,ah
  428655:	mov    DWORD PTR [edx],eax
  428657:	add    ah,ch
  428659:	mov    DWORD PTR [edx],eax
  42865b:	add    dh,bh
  42865d:	mov    DWORD PTR [edx],eax
  42865f:	add    BYTE PTR [edx],cl
  428661:	mov    al,BYTE PTR [edx]
  428663:	add    BYTE PTR [edx],bl
  428665:	mov    al,BYTE PTR [edx]
  428667:	add    BYTE PTR [edx],ch
  428669:	mov    al,BYTE PTR [edx]
  42866b:	add    BYTE PTR [esi],dh
  42866d:	mov    al,BYTE PTR [edx]
  42866f:	add    BYTE PTR [edx+ecx*4+0x2],al
  428673:	add    BYTE PTR [eax-0x76],dl
  428676:	add    al,BYTE PTR [eax]
  428678:	pop    esp
  428679:	mov    al,BYTE PTR [edx]
  42867b:	add    BYTE PTR [esi-0x76],ah
  42867e:	add    al,BYTE PTR [eax]
  428680:	jp     0x42860c
  428682:	add    al,BYTE PTR [eax]
  428684:	mov    WORD PTR [edx-0x7569fffe],cs
  42868a:	add    al,BYTE PTR [eax]
  42868c:	mov    al,ds:0xb000028a
  428691:	mov    al,BYTE PTR [edx]
  428693:	add    al,al
  428695:	mov    al,BYTE PTR [edx]
  428697:	add    dl,dl
  428699:	mov    al,BYTE PTR [edx]
  42869b:	add    dl,ah
  42869d:	mov    al,BYTE PTR [edx]
  42869f:	add    al,dh
  4286a1:	mov    al,BYTE PTR [edx]
  4286a3:	add    ah,bh
  4286a5:	mov    al,BYTE PTR [edx]
  4286a7:	add    BYTE PTR [edx],cl
  4286a9:	mov    eax,DWORD PTR [edx]
  4286ab:	add    BYTE PTR [edx],bl
  4286ad:	mov    eax,DWORD PTR [edx]
  4286af:	add    BYTE PTR [edx],ch
  4286b1:	mov    eax,DWORD PTR [edx]
  4286b3:	add    BYTE PTR [eax],bh
  4286b5:	mov    eax,DWORD PTR [edx]
  4286b7:	add    BYTE PTR [eax-0x75],dl
  4286ba:	add    al,BYTE PTR [eax]
  4286bc:	pop    edx
  4286bd:	mov    eax,DWORD PTR [edx]
  4286bf:	add    BYTE PTR [edx-0x75],ch
  4286c2:	add    al,BYTE PTR [eax]
  4286c4:	or     BYTE PTR [ebx-0x746bfffe],0x2
  4286cb:	add    BYTE PTR [ebx+ecx*4-0x744bfffe],ah
  4286d2:	add    al,BYTE PTR [eax]
  4286d4:	mov    esi,0xcc00028b
  4286d9:	mov    eax,DWORD PTR [edx]
  4286db:	add    ah,bl
  4286dd:	mov    eax,DWORD PTR [edx]
  4286df:	add    al,ch
  4286e1:	mov    eax,DWORD PTR [edx]
	...
  4286eb:	add    BYTE PTR [edx],dl
  4286ed:	mov    WORD PTR [edx],es
  4286ef:	add    BYTE PTR [eax],ah
  4286f1:	mov    WORD PTR [edx],es
  4286f3:	add    BYTE PTR [esp+ecx*4],dh
  4286f6:	add    al,BYTE PTR [eax]
  4286f8:	inc    edx
  4286f9:	mov    WORD PTR [edx],es
  4286fb:	add    BYTE PTR [eax-0x74],bl
  4286fe:	add    al,BYTE PTR [eax]
  428700:	bound  ecx,QWORD PTR [edx+eax*1+0x28c6e00]
  428707:	add    BYTE PTR [esi-0x74],bh
  42870a:	add    al,BYTE PTR [eax]
  42870c:	nop
  42870d:	mov    WORD PTR [edx],es
  42870f:	add    BYTE PTR [esi-0x3ffffd74],ch
  428715:	mov    WORD PTR [edx],es
  428717:	add    dh,cl
  428719:	mov    WORD PTR [edx],es
  42871b:	add    ah,bl
  42871d:	mov    WORD PTR [edx],es
  42871f:	add    al,dh
  428721:	mov    WORD PTR [edx],es
  428723:	add    BYTE PTR [ecx*4-0x72ebfffe],al
  42872a:	add    al,BYTE PTR [eax]
  42872c:	and    cl,BYTE PTR [ebp-0x72cffffe]
  428732:	add    al,BYTE PTR [eax]
  428734:	inc    edx
  428735:	lea    eax,[edx]
  428737:	add    BYTE PTR [ebp+ecx*4+0x2],dl
  42873b:	add    BYTE PTR [ebp+ecx*4+0x2],ah
  42873f:	add    BYTE PTR [esi-0x73],dh
  428742:	add    al,BYTE PTR [eax]
  428744:	or     BYTE PTR [ebp-0x7269fffe],0x2
  42874b:	add    BYTE PTR [edx-0x45fffd73],ch
  428751:	lea    eax,[edx]
  428753:	add    dh,al
  428755:	lea    eax,[edx]
  428757:	add    ah,dl
  428759:	lea    eax,[edx]
  42875b:	add    dl,ah
  42875d:	lea    eax,[edx]
  42875f:	add    dl,dh
  428761:	lea    eax,[edx]
  428763:	add    BYTE PTR [eax],cl
  428765:	mov    es,WORD PTR [edx]
  428767:	add    BYTE PTR [esi+ecx*4],dl
  42876a:	add    al,BYTE PTR [eax]
  42876c:	and    BYTE PTR [esi-0x71d3fffe],cl
  428772:	add    al,BYTE PTR [eax]
  428774:	inc    edx
  428775:	mov    es,WORD PTR [edx]
  428777:	add    BYTE PTR [esi+ecx*4+0x2],dl
  42877b:	add    BYTE PTR [esi+ecx*4+0x2],ah
  42877f:	add    BYTE PTR [edx-0x72],dh
  428782:	add    al,BYTE PTR [eax]
  428784:	xchg   BYTE PTR [esi-0x716bfffe],cl
  42878a:	add    al,BYTE PTR [eax]
  42878c:	test   al,0x8e
  42878e:	add    al,BYTE PTR [eax]
  428790:	mov    edx,0xc800028e
  428795:	mov    es,WORD PTR [edx]
  428797:	add    ah,ah
  428799:	mov    es,WORD PTR [edx]
  42879b:	add    dh,dh
  42879d:	mov    es,WORD PTR [edx]
  42879f:	add    BYTE PTR [esi],al
  4287a1:	pop    DWORD PTR [edx]
  4287a3:	add    BYTE PTR [eax],ah
  4287a5:	pop    DWORD PTR [edx]
  4287a7:	add    BYTE PTR [esi],dh
  4287a9:	pop    DWORD PTR [edx]
  4287ab:	add    BYTE PTR [edi+ecx*4+0x2],al
  4287af:	add    BYTE PTR [edx-0x71],dl
  4287b2:	add    al,BYTE PTR [eax]
  4287b4:	push   0x8400028f
  4287b9:	pop    DWORD PTR [edx]
  4287bb:	add    BYTE PTR [edx-0x5bfffd71],dl
  4287c1:	pop    DWORD PTR [edx]
  4287c3:	add    BYTE PTR [eax-0x31fffd71],bh
  4287c9:	pop    DWORD PTR [edx]
  4287cb:	add    ah,ah
  4287cd:	pop    DWORD PTR [edx]
  4287cf:	add    dl,bh
  4287d1:	pop    DWORD PTR [edx]
  4287d3:	add    BYTE PTR [eax],cl
  4287d5:	nop
  4287d6:	add    al,BYTE PTR [eax]
  4287d8:	sbb    al,0x90
  4287da:	add    al,BYTE PTR [eax]
  4287dc:	sub    al,0x90
  4287de:	add    al,BYTE PTR [eax]
  4287e0:	cmp    BYTE PTR [eax-0x6fb5fffe],dl
  4287e6:	add    al,BYTE PTR [eax]
  4287e8:	pop    edx
  4287e9:	nop
  4287ea:	add    al,BYTE PTR [eax]
  4287ec:	ins    BYTE PTR es:[edi],dx
  4287ed:	nop
  4287ee:	add    al,BYTE PTR [eax]
  4287f0:	jp     0x428782
  4287f2:	add    al,BYTE PTR [eax]
  4287f4:	mov    WORD PTR [eax-0x6f5dfffe],ss
  4287fa:	add    al,BYTE PTR [eax]
  4287fc:	mov    esi,0xd4000290
  428801:	nop
  428802:	add    al,BYTE PTR [eax]
  428804:	out    0x90,al
  428806:	add    al,BYTE PTR [eax]
  428808:	clc    
  428809:	nop
  42880a:	add    al,BYTE PTR [eax]
  42880c:	or     dl,BYTE PTR [ecx-0x6ee1fffe]
  428812:	add    al,BYTE PTR [eax]
  428814:	sub    al,0x91
  428816:	add    al,BYTE PTR [eax]
  428818:	cmp    al,0x91
  42881a:	add    al,BYTE PTR [eax]
  42881c:	dec    eax
  42881d:	xchg   ecx,eax
  42881e:	add    al,BYTE PTR [eax]
  428820:	push   esi
  428821:	xchg   ecx,eax
  428822:	add    al,BYTE PTR [eax]
  428824:	outs   dx,BYTE PTR ds:[esi]
  428825:	xchg   ecx,eax
  428826:	add    al,BYTE PTR [eax]
  428828:	jle    0x4287bb
  42882a:	add    al,BYTE PTR [eax]
  42882c:	mov    WORD PTR [ecx-0x6e5ffffe],ss
  428832:	add    al,BYTE PTR [eax]
  428834:	scas   al,BYTE PTR es:[edi]
  428835:	xchg   ecx,eax
  428836:	add    al,BYTE PTR [eax]
  428838:	mov    edx,0xcc000291
  42883d:	xchg   ecx,eax
  42883e:	add    al,BYTE PTR [eax]
  428840:	ficom  WORD PTR [ecx-0x6e0ffffe]
  428846:	add    al,BYTE PTR [eax]
  428848:	push   es
  428849:	xchg   edx,eax
  42884a:	add    al,BYTE PTR [eax]
  42884c:	adc    dl,BYTE PTR [edx-0x6ddffffe]
  428852:	add    al,BYTE PTR [eax]
  428854:	sub    al,0x92
  428856:	add    al,BYTE PTR [eax]
  428858:	cmp    dl,BYTE PTR [edx-0x6db1fffe]
  42885e:	add    al,BYTE PTR [eax]
  428860:	pop    edx
  428861:	xchg   edx,eax
  428862:	add    al,BYTE PTR [eax]
  428864:	outs   dx,BYTE PTR ds:[esi]
  428865:	xchg   edx,eax
  428866:	add    al,BYTE PTR [eax]
  428868:	jp     0x4287fc
  42886a:	add    al,BYTE PTR [eax]
  42886c:	mov    dl,BYTE PTR [edx-0x6d67fffe]
  428872:	add    al,BYTE PTR [eax]
  428874:	scas   al,BYTE PTR es:[edi]
  428875:	xchg   edx,eax
  428876:	add    al,BYTE PTR [eax]
  428878:	add    BYTE PTR [eax],al
  42887a:	add    BYTE PTR [eax],al
  42887c:	(bad)  
  42887d:	xchg   edx,eax
  42887e:	add    al,BYTE PTR [eax]
  428880:	aam    0x92
  428882:	add    al,BYTE PTR [eax]
  428884:	out    0x92,al
  428886:	add    al,BYTE PTR [eax]
  428888:	(bad)  
  428889:	xchg   edx,eax
  42888a:	add    al,BYTE PTR [eax]
  42888c:	adc    BYTE PTR [ebx-0x6cddfffe],dl
  428892:	add    al,BYTE PTR [eax]
  428894:	cmp    al,0x93
  428896:	add    al,BYTE PTR [eax]
  428898:	dec    esp
  428899:	xchg   ebx,eax
  42889a:	add    al,BYTE PTR [eax]
  42889c:	push   esi
  42889d:	xchg   ebx,eax
  42889e:	add    al,BYTE PTR [eax]
  4288a0:	push   0x78000293
  4288a5:	xchg   ebx,eax
  4288a6:	add    al,BYTE PTR [eax]
  4288a8:	nop
  4288a9:	xchg   ebx,eax
  4288aa:	add    al,BYTE PTR [eax]
  4288ac:	mov    al,ds:0xb0000293
  4288b1:	xchg   ebx,eax
  4288b2:	add    al,BYTE PTR [eax]
  4288b4:	ret    0x293
  4288b7:	add    ah,dl
  4288b9:	xchg   ebx,eax
  4288ba:	add    al,BYTE PTR [eax]
  4288bc:	loopne 0x428851
  4288be:	add    al,BYTE PTR [eax]
  4288c0:	in     al,dx
  4288c1:	xchg   ebx,eax
  4288c2:	add    al,BYTE PTR [eax]
  4288c4:	add    dl,BYTE PTR [edx+eax*1+0x2941600]
  4288cb:	add    BYTE PTR [esp+edx*4],ch
  4288ce:	add    al,BYTE PTR [eax]
  4288d0:	inc    eax
  4288d1:	xchg   esp,eax
  4288d2:	add    al,BYTE PTR [eax]
  4288d4:	push   esi
  4288d5:	xchg   esp,eax
  4288d6:	add    al,BYTE PTR [eax]
  4288d8:	push   0x74000294
  4288dd:	xchg   esp,eax
  4288de:	add    al,BYTE PTR [eax]
  4288e0:	test   BYTE PTR [edx+eax*1+0x294a200],dl
  4288e7:	add    BYTE PTR [esp+edx*4-0x6b35fffe],bh
  4288ee:	add    al,BYTE PTR [eax]
  4288f0:	ficom  WORD PTR [edx+eax*1+0x294f600]
  4288f7:	add    BYTE PTR [edx],cl
  4288f9:	xchg   ebp,eax
  4288fa:	add    al,BYTE PTR [eax]
  4288fc:	sbb    dl,BYTE PTR [ebp-0x6acffffe]
  428902:	add    al,BYTE PTR [eax]
  428904:	inc    edx
  428905:	xchg   ebp,eax
  428906:	add    al,BYTE PTR [eax]
  428908:	push   eax
  428909:	xchg   ebp,eax
  42890a:	add    al,BYTE PTR [eax]
  42890c:	bound  edx,QWORD PTR [ebp-0x6a8ffffe]
  428912:	add    al,BYTE PTR [eax]
  428914:	adc    BYTE PTR [ebp-0x6a69fffe],0x2
  42891b:	add    BYTE PTR [ebp+edx*4-0x6a43fffe],ch
  428922:	add    al,BYTE PTR [eax]
  428924:	rcl    BYTE PTR [ebp-0x6a23fffe],cl
  42892a:	add    al,BYTE PTR [eax]
  42892c:	out    dx,al
  42892d:	xchg   ebp,eax
  42892e:	add    al,BYTE PTR [eax]
  428930:	(bad)  
  428931:	xchg   ebp,eax
  428932:	add    al,BYTE PTR [eax]
  428934:	or     al,0x96
  428936:	add    al,BYTE PTR [eax]
  428938:	and    dl,BYTE PTR [esi+0x2]
  42893e:	add    BYTE PTR [eax],al
  428940:	xchg   edx,eax
  428941:	add    edx,DWORD PTR [edx+0x74]
  428944:	ins    BYTE PTR es:[edi],dx
  428945:	dec    ecx
  428946:	outs   dx,BYTE PTR ds:[esi]
  428947:	imul   esi,DWORD PTR [ecx+eax*2+0x6e],0x74536973
  42894f:	jb     0x4289ba
  428951:	outs   dx,BYTE PTR ds:[esi]
  428952:	add    BYTE PTR [bp+0x74],ch
  428956:	fs ins BYTE PTR es:[edi],dx
  428958:	ins    BYTE PTR es:[edi],dx
  428959:	cs fs ins BYTE PTR es:[edi],dx
  42895c:	ins    BYTE PTR es:[edi],dx
  42895d:	add    BYTE PTR [ecx+0x74654701],dl
  428963:	push   esi
  428964:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  42896b:	dec    edi
  42896c:	jb     0x4289d5
  42896e:	inc    ebp
  42896f:	js     0x428971
  428971:	add    BYTE PTR [edx+0x74654701],cl
  428977:	push   esp
  428978:	gs js  0x4289ef
  42897b:	inc    ebp
  42897c:	js     0x4289f2
  42897e:	outs   dx,BYTE PTR gs:[esi]
  428980:	je     0x4289d2
  428982:	outs   dx,DWORD PTR ds:[esi]
  428983:	imul   ebp,DWORD PTR [esi+0x74],0x1fb0057
  42898a:	push   ebx
  42898b:	gs je  0x4289e2
  42898e:	gs js  0x428a05
  428991:	inc    ecx
  428992:	ins    BYTE PTR es:[edi],dx
  428993:	imul   esp,DWORD PTR [edi+0x6e],0xd50000
  42899a:	inc    ebp
  42899b:	js     0x428a11
  42899d:	push   esp
  42899e:	gs js  0x428a15
  4289a1:	dec    edi
  4289a2:	jne    0x428a18
  4289a4:	push   edi
  4289a5:	add    BYTE PTR [eax],dl
  4289a7:	add    dl,BYTE PTR [edx+esi*2+0x61]
  4289ab:	outs   dx,BYTE PTR ds:[esi]
  4289ac:	jae    0x428a1a
  4289ae:	popa   
  4289af:	je     0x428a16
  4289b1:	inc    ebx
  4289b2:	push   0x65737261
  4289b7:	je     0x428a02
  4289b9:	outs   dx,BYTE PTR ds:[esi]
  4289ba:	outs   dx,WORD PTR ds:[esi]
  4289bc:	add    BYTE PTR [eax],al
  4289be:	pop    ss
  4289bf:	add    dl,BYTE PTR [edi+0x69]
  4289c2:	fs outs dx,BYTE PTR gs:[esi]
  4289c5:	push   eax
  4289c6:	popa   
  4289c7:	je     0x428a31
  4289c9:	add    BYTE PTR [ebp+0x65724300],cl
  4289cf:	popa   
  4289d0:	je     0x428a37
  4289d2:	inc    ebx
  4289d3:	outs   dx,DWORD PTR ds:[esi]
  4289d4:	ins    DWORD PTR es:[edi],dx
  4289d5:	jo     0x428a38
  4289d7:	je     0x428a42
  4289d9:	bound  ebp,QWORD PTR [ebp+eiz*2+0x44]
  4289dd:	inc    ebx
  4289de:	add    BYTE PTR [eax],al
  4289e0:	mov    bh,0x1
  4289e2:	push   eax
  4289e3:	outs   dx,DWORD PTR ds:[esi]
  4289e4:	ins    BYTE PTR es:[edi],dx
  4289e5:	jns    0x428a53
  4289e7:	imul   ebp,DWORD PTR [esi+0x65],0x1940000
  4289ee:	inc    edi
  4289ef:	gs je  0x428a49
  4289f2:	imul   ebp,DWORD PTR [esi+0x64],0x724f776f
  4289f9:	addr16 inc ebp
  4289fb:	js     0x4289fd
  4289fd:	add    cl,ch
  4289ff:	add    DWORD PTR [ebx+0x65],edx
  428a02:	je     0x428a50
  428a04:	popa   
  428a05:	jns    0x428a76
  428a07:	jne    0x428a7d
  428a09:	add    bl,dl
  428a0b:	add    DWORD PTR [ebx+0x65],edx
  428a0e:	je     0x428a51
  428a10:	bound  ebp,QWORD PTR [edi+0x72]
  428a13:	je     0x428a65
  428a15:	jb     0x428a86
  428a17:	arpl   WORD PTR [eax],ax
  428a19:	add    BYTE PTR [edx],cl
  428a1b:	add    dl,BYTE PTR [ebx+0x74]
  428a1e:	jb     0x428a85
  428a20:	je     0x428a85
  428a22:	push   0x69424944
  428a27:	je     0x428a9c
  428a29:	add    BYTE PTR [ebx+0x1],al
  428a2c:	inc    edi
  428a2d:	gs je  0x428a74
  428a30:	dec    ecx
  428a31:	inc    edx
  428a32:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x655301eb
  428a3a:	je     0x428a89
  428a3c:	popa   
  428a3d:	jo     0x428a8c
  428a3f:	outs   dx,DWORD PTR ds:[esi]
  428a40:	fs add BYTE PTR gs:[eax],al
  428a44:	daa    
  428a45:	add    DWORD PTR [edi+0x65],eax
  428a48:	je     0x428a8c
  428a4a:	imul   ecx,DWORD PTR [ebp+0x6f],0x64
  428a4e:	add    BYTE PTR gs:[ebx+0x66664f01],ah
  428a55:	jae    0x428abc
  428a57:	je     0x428aab
  428a59:	outs   dx,BYTE PTR ds:[si]
  428a5b:	add    BYTE PTR [eax+eax*1+0x696c6c45],bh
  428a62:	jo     0x428ad7
  428a64:	gs add ah,cl
  428a67:	add    DWORD PTR [ebx+0x63],edx
  428a6a:	popa   
  428a6b:	ins    BYTE PTR es:[edi],dx
  428a6c:	gs push edi
  428a6e:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  428a75:	je     0x428abc
  428a77:	js     0x428a79
  428a79:	add    BYTE PTR [edx+0x1],bh
  428a7c:	inc    edi
  428a7d:	gs je  0x428ad3
  428a80:	je     0x428af1
  428a82:	arpl   WORD PTR [ebx+0x4f],bp
  428a85:	bound  ebp,QWORD PTR [edx+0x65]
  428a88:	arpl   WORD PTR [eax+eax*1+0x0],si
  428a8c:	call   0x5465:0x6e694c01
  428a93:	outs   dx,DWORD PTR ds:[esi]
  428a94:	add    BYTE PTR [eax],al
  428a96:	mov    dh,0x1
  428a98:	push   eax
  428a99:	outs   dx,DWORD PTR ds:[esi]
  428a9a:	ins    BYTE PTR es:[edi],dx
  428a9b:	jns    0x428b04
  428a9d:	outs   dx,DWORD PTR ds:[esi]
  428a9e:	outs   dx,BYTE PTR ds:[esi]
  428a9f:	add    BYTE PTR [esi+0x1],bh
  428aa2:	inc    edi
  428aa3:	gs je  0x428afa
  428aa6:	gs js  0x428b1d
  428aa9:	inc    ecx
  428aaa:	ins    BYTE PTR es:[edi],dx
  428aab:	imul   esp,DWORD PTR [edi+0x6e],0x18c0000
  428ab2:	inc    edi
  428ab3:	gs je  0x428b0a
  428ab6:	gs js  0x428b2d
  428ab9:	inc    esi
  428aba:	popa   
  428abb:	arpl   WORD PTR [ebp+0x57],sp
  428abe:	add    BYTE PTR [eax],al
  428ac0:	mov    ebx,0x61655201
  428ac5:	ins    BYTE PTR es:[edi],dx
  428ac6:	imul   edi,DWORD PTR [edx+0x65],0x656c6150
  428acd:	je     0x428b43
  428acf:	add    BYTE PTR gs:[eax],al
  428ad2:	mov    DWORD PTR [ecx],0x69736552
  428ad8:	jp     0x428b3f
  428ada:	push   eax
  428adb:	popa   
  428adc:	ins    BYTE PTR es:[edi],dx
  428add:	gs je  0x428b54
  428ae0:	add    BYTE PTR gs:[ecx+0x6d6f4300],al
  428ae7:	bound  ebp,QWORD PTR [ecx+0x6e]
  428aea:	gs push edx
  428aec:	outs   dx,BYTE PTR ds:[si]
  428aee:	add    BYTE PTR [eax],al
  428af0:	push   cs
  428af1:	add    dl,BYTE PTR [ebp+eiz*2+0x78]
  428af5:	je     0x428b46
  428af7:	jne    0x428b6d
  428af9:	inc    ecx
  428afa:	add    BYTE PTR [eax],al
  428afc:	test   DWORD PTR [ecx],0x52746553
  428b02:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  428b07:	outs   dx,BYTE PTR ds:[esi]
  428b08:	add    BYTE PTR [eax],al
  428b0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428b0b:	add    BYTE PTR [ebx+0x72],al
  428b0e:	gs popa 
  428b10:	je     0x428b77
  428b12:	push   eax
  428b13:	popa   
  428b14:	ins    BYTE PTR es:[edi],dx
  428b15:	gs je  0x428b8c
  428b18:	add    BYTE PTR gs:[ecx+eax*1],ah
  428b1c:	inc    edi
  428b1d:	gs je  0x428b62
  428b20:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  428b28:	jae    0x428b2a
  428b2a:	mov    DWORD PTR [eax],0x6d756e45
  428b30:	inc    esi
  428b31:	outs   dx,DWORD PTR ds:[esi]
  428b32:	outs   dx,BYTE PTR ds:[esi]
  428b33:	je     0x428ba8
  428b35:	push   edi
  428b36:	add    BYTE PTR [eax],al
  428b38:	lods   al,BYTE PTR ds:[esi]
  428b39:	add    BYTE PTR [ebx+0x72],al
  428b3c:	gs popa 
  428b3e:	je     0x428ba5
  428b40:	push   edx
  428b41:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  428b46:	outs   dx,BYTE PTR ds:[esi]
  428b47:	dec    ecx
  428b48:	outs   dx,BYTE PTR ds:[esi]
  428b49:	imul   esi,DWORD PTR fs:[edx+0x65],0x99007463
  428b51:	add    DWORD PTR [ecx+ebp*2+0x6e],ecx
  428b55:	gs inc esp
  428b57:	inc    esp
  428b58:	inc    ecx
  428b59:	add    ch,dl
  428b5b:	add    DWORD PTR [ebx+0x65],edx
  428b5e:	je     0x428ba2
  428b60:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  428b68:	jae    0x428b6a
  428b6a:	mov    BYTE PTR [eax],al
  428b6c:	inc    ebx
  428b6d:	jb     0x428bd4
  428b6f:	popa   
  428b70:	je     0x428bd7
  428b72:	inc    edx
  428b73:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x646e4970
  428b7b:	imul   esi,DWORD PTR [edx+0x65],0x7463
  428b82:	mov    es,WORD PTR [ecx]
  428b84:	inc    edi
  428b85:	gs je  0x428bdc
  428b88:	gs js  0x428bff
  428b8b:	dec    ebp
  428b8c:	gs je  0x428c01
  428b8f:	imul   esp,DWORD PTR [ebx+0x73],0x1da0057
  428b96:	push   ebx
  428b97:	gs je  0x428bdc
  428b9a:	jb     0x428c11
  428b9c:	jae    0x428c06
  428b9e:	dec    edi
  428b9f:	jb     0x428c08
  428ba1:	inc    ebp
  428ba2:	js     0x428ba4
  428ba4:	mov    esp,0x63655201
  428ba9:	je     0x428bf4
  428bab:	outs   dx,BYTE PTR ds:[esi]
  428bac:	push   edx
  428bad:	imul   ebp,DWORD PTR gs:[bx+0x6e],0xcd0000
  428bb6:	inc    ebp
  428bb7:	jae    0x428c1c
  428bb9:	popa   
  428bba:	jo     0x428c21
  428bbc:	add    BYTE PTR [eax],al
  428bbe:	scas   eax,DWORD PTR es:[edi]
  428bbf:	add    DWORD PTR [eax+0x6f],edx
  428bc2:	ins    BYTE PTR es:[edi],dx
  428bc3:	jns    0x428c07
  428bc5:	gs jp  0x428c31
  428bc8:	gs jb  0x428bcb
  428bcb:	add    BYTE PTR [ebx+0x65724300],ch
  428bd1:	popa   
  428bd2:	je     0x428c39
  428bd4:	push   edx
  428bd5:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  428bda:	outs   dx,BYTE PTR ds:[esi]
  428bdb:	add    BYTE PTR [edi+0x65724300],cl
  428be1:	popa   
  428be2:	je     0x428c49
  428be4:	inc    esp
  428be5:	inc    ebx
  428be6:	push   edi
  428be7:	add    BYTE PTR ds:0x74654701,bh
  428bed:	inc    ebx
  428bee:	jne    0x428c62
  428bf0:	jb     0x428c57
  428bf2:	outs   dx,BYTE PTR ds:[esi]
  428bf3:	je     0x428c44
  428bf5:	bound  ebp,QWORD PTR [edx+0x65]
  428bf8:	arpl   WORD PTR [eax+eax*1+0x0],si
  428bfc:	inc    edi
  428bfd:	inc    esp
  428bfe:	dec    ecx
  428bff:	xor    esi,DWORD PTR [edx]
  428c01:	cs fs ins BYTE PTR es:[edi],dx
  428c04:	ins    BYTE PTR es:[edi],dx
  428c05:	add    BYTE PTR [ebx+0x6f],ah
  428c08:	outs   dx,BYTE PTR ds:[esi]
  428c09:	jae    0x428c7a
  428c0b:	ins    BYTE PTR es:[edi],dx
  428c0c:	gs cs fs ins BYTE PTR es:[edi],dx
  428c10:	ins    BYTE PTR es:[edi],dx
  428c11:	add    BYTE PTR [ecx],bh
  428c13:	add    BYTE PTR [ebx+0x68],al
  428c16:	popa   
  428c17:	jb     0x428c6e
  428c19:	jo     0x428c8b
  428c1b:	gs jb  0x428c75
  428c1e:	add    BYTE PTR [eax],al
  428c20:	dec    esi
  428c21:	add    dl,BYTE PTR [ebx+0x65]
  428c24:	je     0x428c73
  428c26:	outs   dx,BYTE PTR gs:[esi]
  428c28:	jne    0x428c73
  428c2a:	je     0x428c91
  428c2c:	ins    DWORD PTR es:[edi],dx
  428c2d:	dec    ecx
  428c2e:	outs   dx,BYTE PTR ds:[esi]
  428c2f:	outs   dx,WORD PTR ds:[esi]
  428c31:	push   edi
  428c32:	add    BYTE PTR [eax],al
  428c34:	scas   al,BYTE PTR es:[edi]
  428c35:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  428c39:	fs inc ebx
  428c3b:	jne    0x428caf
  428c3d:	jae    0x428cae
  428c3f:	jb     0x428c98
  428c41:	add    BYTE PTR [eax+0x0],bl
  428c44:	inc    ebx
  428c45:	jb     0x428cac
  428c47:	popa   
  428c48:	je     0x428caf
  428c4a:	inc    esp
  428c4b:	imul   esp,DWORD PTR [ecx+0x6c],0x6150676f
  428c52:	jb     0x428cb5
  428c54:	ins    DWORD PTR es:[edi],dx
  428c55:	inc    ecx
  428c56:	add    BYTE PTR [eax],al
  428c58:	popf   
  428c59:	add    DWORD PTR [ecx+0x73],ecx
  428c5c:	dec    ebp
  428c5d:	outs   dx,BYTE PTR gs:[esi]
  428c5f:	jne    0x428c61
  428c61:	add    BYTE PTR [eax+0x1],ch
  428c64:	inc    edi
  428c65:	gs je  0x428cbf
  428c68:	imul   ebp,DWORD PTR [esi+0x64],0x6200776f
  428c6f:	add    DWORD PTR [edi+0x65],eax
  428c72:	je     0x428cc8
  428c74:	outs   dx,DWORD PTR ds:[esi]
  428c75:	jo     0x428cce
  428c77:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  428c7e:	mov    ds:0x57734901,eax
  428c83:	imul   ebp,DWORD PTR [esi+0x64],0x6956776f
  428c8a:	jae    0x428cf5
  428c8c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  428c90:	sub    eax,0x74654701
  428c95:	dec    ebp
  428c96:	outs   dx,BYTE PTR gs:[esi]
  428c98:	jne    0x428cdd
  428c9a:	push   0x4d6b6365
  428c9f:	popa   
  428ca0:	jb     0x428d0d
  428ca2:	inc    esp
  428ca3:	imul   ebp,DWORD PTR [ebp+0x65],0x6f69736e
  428caa:	outs   dx,BYTE PTR ds:[esi]
  428cab:	jae    0x428cad
  428cad:	add    BYTE PTR [edx],bl
  428caf:	add    BYTE PTR [ebx+0x61],al
  428cb2:	ins    BYTE PTR es:[edi],dx
  428cb3:	ins    BYTE PTR es:[edi],dx
  428cb4:	push   edi
  428cb5:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  428cbc:	outs   dx,DWORD PTR ds:[esi]
  428cbd:	arpl   WORD PTR [ecx+0x0],ax
  428cc0:	repz add BYTE PTR [edi+0x65],al
  428cc4:	je     0x428d09
  428cc6:	popa   
  428cc7:	jb     0x428d2e
  428cc9:	je     0x428d1b
  428ccb:	outs   dx,DWORD PTR ds:[esi]
  428ccc:	jae    0x428cce
  428cce:	ret    0x7702
  428cd1:	jbe    0x428d46
  428cd3:	jo     0x428d47
  428cd5:	imul   ebp,DWORD PTR [esi+0x74],0x5766
  428cdc:	test   al,0x1
  428cde:	dec    esp
  428cdf:	outs   dx,DWORD PTR ds:[esi]
  428ce0:	popa   
  428ce1:	fs inc ecx
  428ce3:	arpl   WORD PTR [ebx+0x65],sp
  428ce6:	ins    BYTE PTR es:[edi],dx
  428ce7:	gs jb  0x428d4b
  428cea:	je     0x428d5b
  428cec:	jb     0x428d61
  428cee:	push   edi
  428cef:	add    BYTE PTR [edi],cl
  428cf1:	add    BYTE PTR [edx+0x72],al
  428cf4:	imul   ebp,DWORD PTR [esi+0x67],0x646e6957
  428cfb:	outs   dx,DWORD PTR ds:[esi]
  428cfc:	ja     0x428d52
  428cfe:	outs   dx,DWORD PTR ds:[esi]
  428cff:	push   esp
  428d00:	outs   dx,DWORD PTR ds:[esi]
  428d01:	jo     0x428d03
  428d03:	add    BYTE PTR [ecx+0x66654400],cl
  428d09:	inc    esi
  428d0a:	jb     0x428d6d
  428d0c:	ins    DWORD PTR es:[edi],dx
  428d0d:	gs push eax
  428d0f:	jb     0x428d80
  428d11:	arpl   WORD PTR [ecx+0x0],ax
  428d14:	mov    ebx,0x61724400
  428d19:	ja     0x428d6f
  428d1b:	gs js  0x428d92
  428d1e:	inc    ebp
  428d1f:	js     0x428d78
  428d21:	add    BYTE PTR [edx+0x666e4901],al
  428d27:	ins    BYTE PTR es:[edi],dx
  428d28:	popa   
  428d29:	je     0x428d90
  428d2b:	push   edx
  428d2c:	arpl   WORD PTR gs:[eax+eax*1+0x5],si
  428d31:	add    dl,BYTE PTR [edx+0x65]
  428d34:	imul   esi,DWORD PTR [bp+di+0x74],0x6c437265
  428d3c:	popa   
  428d3d:	jae    0x428db2
  428d3f:	push   edi
  428d40:	add    BYTE PTR [eax],al
  428d42:	inc    ebp
  428d43:	add    dl,BYTE PTR [ebx+0x65]
  428d46:	je     0x428d94
  428d48:	popa   
  428d49:	jae    0x428dbf
  428d4b:	inc    ebp
  428d4c:	jb     0x428dc0
  428d4e:	outs   dx,DWORD PTR ds:[esi]
  428d4f:	jb     0x428d96
  428d51:	js     0x428d53
  428d53:	add    BYTE PTR [edx+0x43734901],dl
  428d59:	push   0x70557261
  428d5e:	jo     0x428dc5
  428d60:	jb     0x428da3
  428d62:	add    BYTE PTR [eax],al
  428d64:	inc    ebx
  428d65:	add    BYTE PTR [ebx+0x6c],al
  428d68:	imul   esp,DWORD PTR [ebp+0x6e],0x536f5474
  428d6f:	arpl   WORD PTR [edx+0x65],si
  428d72:	outs   dx,BYTE PTR gs:[esi]
  428d74:	add    BYTE PTR [eax],al
  428d76:	push   ecx
  428d77:	add    dl,BYTE PTR [ebx+0x65]
  428d7a:	je     0x428dcc
  428d7c:	popa   
  428d7d:	jb     0x428de4
  428d7f:	outs   dx,BYTE PTR ds:[esi]
  428d80:	je     0x428d82
  428d82:	xchg   ecx,eax
  428d83:	add    dl,BYTE PTR [edx+esi*2+0x61]
  428d87:	arpl   WORD PTR [ebx+0x50],bp
  428d8a:	outs   dx,DWORD PTR ds:[esi]
  428d8b:	jo     0x428e02
  428d8d:	jo     0x428ddc
  428d8f:	outs   dx,BYTE PTR gs:[esi]
  428d91:	jne    0x428dd8
  428d93:	js     0x428d95
  428d95:	add    BYTE PTR [edx],ah
  428d97:	add    DWORD PTR [edi+0x65],eax
  428d9a:	je     0x428de7
  428d9c:	gs jns 0x428e01
  428d9f:	outs   dx,DWORD PTR ds:[esi]
  428da0:	popa   
  428da1:	jb     0x428e07
  428da3:	dec    esp
  428da4:	popa   
  428da5:	jns    0x428e16
  428da7:	jne    0x428e1d
  428da9:	add    bl,bh
  428dab:	add    BYTE PTR [edi+0x65],al
  428dae:	je     0x428df3
  428db0:	ins    BYTE PTR es:[edi],dx
  428db1:	popa   
  428db2:	jae    0x428e27
  428db4:	dec    esi
  428db5:	popa   
  428db6:	ins    DWORD PTR es:[edi],dx
  428db7:	gs push edi
  428db9:	add    ch,bl
  428dbb:	add    BYTE PTR [ebp+0x71],al
  428dbe:	jne    0x428e21
  428dc0:	ins    BYTE PTR es:[edi],dx
  428dc1:	push   edx
  428dc2:	arpl   WORD PTR gs:[eax+eax*1+0x32],si
  428dc7:	add    dl,BYTE PTR [ebx+0x65]
  428dca:	je     0x428e0f
  428dcc:	popa   
  428dcd:	jb     0x428e34
  428dcf:	je     0x428e21
  428dd1:	outs   dx,DWORD PTR ds:[esi]
  428dd2:	jae    0x428dd4
  428dd4:	and    al,0x0
  428dd6:	inc    ebx
  428dd7:	push   0x65676e61
  428ddc:	dec    ebp
  428ddd:	outs   dx,BYTE PTR gs:[esi]
  428ddf:	jne    0x428e38
  428de1:	add    BYTE PTR [eax+0x73654400],bl
  428de7:	je     0x428e5b
  428de9:	outs   dx,DWORD PTR ds:[esi]
  428dea:	jns    0x428e43
  428dec:	imul   ebp,DWORD PTR [esi+0x64],0xf500776f
  428df3:	add    DWORD PTR [eax+0x6f],edx
  428df6:	jae    0x428e6c
  428df8:	push   esp
  428df9:	push   0x64616572
  428dfe:	dec    ebp
  428dff:	gs jae 0x428e75
  428e02:	popa   
  428e03:	addr16 gs push edi
  428e06:	add    BYTE PTR [eax],al
  428e08:	push   edi
  428e09:	add    dl,BYTE PTR [ebx+0x65]
  428e0c:	je     0x428e5e
  428e0e:	jb     0x428e7f
  428e10:	jo     0x428e69
  428e12:	add    BYTE PTR [eax],al
  428e14:	mov    al,0x1
  428e16:	dec    esp
  428e17:	outs   dx,DWORD PTR ds:[esi]
  428e18:	popa   
  428e19:	fs dec ecx
  428e1b:	arpl   WORD PTR [edi+0x6e],bp
  428e1e:	push   edi
  428e1f:	add    bl,bh
  428e21:	add    DWORD PTR [eax+0x74],edx
  428e24:	dec    ecx
  428e25:	outs   dx,BYTE PTR ds:[esi]
  428e26:	push   edx
  428e27:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  428e2c:	dec    edx
  428e2d:	add    dl,BYTE PTR [ebx+0x65]
  428e30:	je     0x428e7f
  428e32:	outs   dx,BYTE PTR gs:[esi]
  428e34:	jne    0x428e7a
  428e36:	gs popaw 
  428e39:	jne    0x428ea7
  428e3b:	je     0x428e86
  428e3d:	je     0x428ea4
  428e3f:	ins    DWORD PTR es:[edi],dx
  428e40:	add    BYTE PTR [eax],al
  428e42:	sti    
  428e43:	add    dl,BYTE PTR [edx+esi*2+0x61]
  428e47:	arpl   WORD PTR [ebx+0x50],bp
  428e4a:	outs   dx,DWORD PTR ds:[esi]
  428e4b:	jo     0x428ec2
  428e4d:	jo     0x428e9c
  428e4f:	outs   dx,BYTE PTR gs:[esi]
  428e51:	jne    0x428e53
  428e53:	add    BYTE PTR [ebp+0x64705502],ah
  428e59:	popa   
  428e5a:	je     0x428ec1
  428e5c:	push   edi
  428e5d:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  428e64:	push   ss
  428e65:	add    dl,BYTE PTR [edx+0x65]
  428e68:	ins    DWORD PTR es:[edi],dx
  428e69:	outs   dx,DWORD PTR ds:[esi]
  428e6a:	jbe    0x428ed1
  428e6c:	dec    ebp
  428e6d:	outs   dx,BYTE PTR gs:[esi]
  428e6f:	jne    0x428e71
  428e71:	add    BYTE PTR [edx+0x61724400],dh
  428e77:	ja     0x428ebf
  428e79:	jb     0x428edc
  428e7b:	ins    DWORD PTR es:[edi],dx
  428e7c:	gs inc ebx
  428e7e:	outs   dx,DWORD PTR ds:[esi]
  428e7f:	outs   dx,BYTE PTR ds:[esi]
  428e80:	je     0x428ef4
  428e82:	outs   dx,DWORD PTR ds:[esi]
  428e83:	ins    BYTE PTR es:[edi],dx
  428e84:	add    BYTE PTR [eax],al
  428e86:	mov    dl,0x1
  428e88:	dec    esp
  428e89:	outs   dx,DWORD PTR ds:[esi]
  428e8a:	popa   
  428e8b:	fs dec ecx
  428e8d:	ins    DWORD PTR es:[edi],dx
  428e8e:	popa   
  428e8f:	addr16 gs push edi
  428e92:	add    BYTE PTR [eax],al
  428e94:	add    al,BYTE PTR [eax]
  428e96:	inc    ecx
  428e97:	fs push 0x75
  428e9a:	jae    0x428f10
  428e9c:	push   edi
  428e9d:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  428ea4:	arpl   WORD PTR [eax+eax*1+0x0],si
  428ea8:	add    DWORD PTR [ecx],0x65536e49
  428eae:	outs   dx,BYTE PTR ds:[esi]
  428eaf:	fs dec ebp
  428eb1:	gs jae 0x428f27
  428eb4:	popa   
  428eb5:	addr16 gs inc ebp
  428eb8:	js     0x428eba
  428eba:	xchg   BYTE PTR [ecx],al
  428ebc:	dec    ecx
  428ebd:	outs   dx,BYTE PTR ds:[esi]
  428ebe:	jae    0x428f25
  428ec0:	jb     0x428f36
  428ec2:	dec    ebp
  428ec3:	outs   dx,BYTE PTR gs:[esi]
  428ec5:	jne    0x428f1e
  428ec7:	add    BYTE PTR ds:0x6c6c4100,al
  428ecd:	outs   dx,DWORD PTR ds:[esi]
  428ece:	ja     0x428f23
  428ed0:	gs je  0x428f19
  428ed3:	outs   dx,DWORD PTR ds:[esi]
  428ed4:	jb     0x428f3b
  428ed6:	addr16 jb 0x428f48
  428ed9:	jne    0x428f49
  428edb:	fs push edi
  428edd:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  428ee4:	add    BYTE PTR [edx],0x53
  428ee7:	ja     0x428f4a
  428ee9:	jo     0x428f38
  428eeb:	outs   dx,DWORD PTR ds:[esi]
  428eec:	jne    0x428f61
  428eee:	gs inc edx
  428ef0:	jne    0x428f66
  428ef2:	je     0x428f63
  428ef4:	outs   dx,BYTE PTR ds:[esi]
  428ef5:	add    bh,ch
  428ef7:	add    DWORD PTR [eax+0x65],edx
  428efa:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  428eff:	jae    0x428f62
  428f01:	addr16 gs push edi
  428f04:	add    BYTE PTR [eax],al
  428f06:	cdq    
  428f07:	add    BYTE PTR [ecx+ebp*2+0x61],al
  428f0b:	ins    BYTE PTR es:[edi],dx
  428f0c:	outs   dx,DWORD PTR ds:[esi]
  428f0d:	addr16 inc edx
  428f0f:	outs   dx,DWORD PTR ds:[esi]
  428f10:	js     0x428f5b
  428f12:	outs   dx,BYTE PTR ds:[esi]
  428f13:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  428f1b:	jb     0x428f7e
  428f1d:	ins    DWORD PTR es:[edi],dx
  428f1e:	inc    ecx
  428f1f:	add    BYTE PTR [ebp+0x0],bl
  428f22:	inc    ebx
  428f23:	jb     0x428f8a
  428f25:	popa   
  428f26:	je     0x428f8d
  428f28:	dec    ecx
  428f29:	arpl   WORD PTR [edi+0x6e],bp
  428f2c:	dec    ecx
  428f2d:	outs   dx,BYTE PTR ds:[esi]
  428f2e:	imul   esi,DWORD PTR fs:[edx+0x65],0x7463
  428f36:	stos   BYTE PTR es:[edi],al
  428f37:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  428f3b:	fs inc edx
  428f3d:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xb1005770
  428f45:	add    dl,BYTE PTR [esi+0x6b]
  428f48:	dec    ebx
  428f49:	gs jns 0x428f9f
  428f4c:	arpl   WORD PTR [ecx+0x6e],sp
  428f4f:	push   edi
  428f50:	add    BYTE PTR [eax],al
  428f52:	adc    eax,DWORD PTR [ecx]
  428f54:	inc    edi
  428f55:	gs je  0x428f9c
  428f58:	outs   dx,DWORD PTR ds:[esi]
  428f59:	jne    0x428fbd
  428f5b:	ins    BYTE PTR es:[edi],dx
  428f5c:	gs inc ebx
  428f5e:	ins    BYTE PTR es:[edi],dx
  428f5f:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  428f66:	add    BYTE PTR [eax],al
  428f68:	add    WORD PTR [edi+0x65],ax
  428f6c:	je     0x428fc3
  428f6e:	jae    0x428fd5
  428f70:	jb     0x428fc1
  428f72:	bound  ebp,QWORD PTR [edx+0x65]
  428f75:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  428f79:	outs   dx,WORD PTR ds:[esi]
  428f7b:	jb     0x428fea
  428f7d:	popa   
  428f7e:	je     0x428fe9
  428f80:	outs   dx,DWORD PTR ds:[esi]
  428f81:	outs   dx,BYTE PTR ds:[esi]
  428f82:	push   edi
  428f83:	add    BYTE PTR [eax+0x1],bl
  428f86:	inc    edi
  428f87:	gs je  0x428fdd
  428f8a:	jne    0x428fee
  428f8c:	dec    ebp
  428f8d:	outs   dx,BYTE PTR gs:[esi]
  428f8f:	jne    0x428f91
  428f91:	add    dh,dh
  428f93:	add    BYTE PTR [edi+0x65],al
  428f96:	je     0x428fdb
  428f98:	ins    BYTE PTR es:[edi],dx
  428f99:	popa   
  428f9a:	jae    0x42900f
  428f9c:	dec    ecx
  428f9d:	outs   dx,BYTE PTR ds:[esi]
  428f9e:	outs   dx,WORD PTR ds:[esi]
  428fa0:	inc    ebp
  428fa1:	js     0x428ffa
  428fa3:	add    BYTE PTR [ecx+eax*1],cl
  428fa6:	inc    edi
  428fa7:	gs je  0x428fee
  428faa:	gs jae 0x429018
  428fad:	je     0x42901e
  428faf:	jo     0x429008
  428fb1:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  428fb8:	sub    eax,0x6e655302
  428fbd:	fs dec esi
  428fbf:	outs   dx,DWORD PTR ds:[esi]
  428fc0:	je     0x42902b
  428fc2:	data16 jns 0x429012
  428fc5:	gs jae 0x42903b
  428fc8:	popa   
  428fc9:	addr16 gs push edi
  428fcc:	add    BYTE PTR [eax],al
  428fce:	and    al,BYTE PTR [edx]
  428fd0:	push   ebx
  428fd1:	outs   dx,BYTE PTR gs:[esi]
  428fd3:	fs inc esp
  428fd5:	ins    BYTE PTR es:[edi],dx
  428fd6:	addr16 dec ecx
  428fd8:	je     0x42903f
  428fda:	ins    DWORD PTR es:[edi],dx
  428fdb:	dec    ebp
  428fdc:	gs jae 0x429052
  428fdf:	popa   
  428fe0:	addr16 gs push edi
  428fe3:	add    BYTE PTR [eax],ch
  428fe5:	add    DWORD PTR [edi+0x65],eax
  428fe8:	je     0x429036
  428fea:	popa   
  428feb:	jae    0x429061
  428fed:	inc    ecx
  428fee:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  428ff2:	gs push eax
  428ff4:	outs   dx,DWORD PTR ds:[esi]
  428ff5:	jo     0x42906c
  428ff7:	jo     0x428ff9
  428ff9:	add    BYTE PTR [ecx],ch
  428ffb:	add    BYTE PTR [ebx+0x68],al
  428ffe:	popa   
  428fff:	jb     0x42904d
  429001:	outs   dx,DWORD PTR ds:[esi]
  429002:	ja     0x429069
  429004:	jb     0x42905d
  429006:	add    BYTE PTR [eax],al
  429008:	xor    al,BYTE PTR [ecx]
  42900a:	inc    edi
  42900b:	gs je  0x42905b
  42900e:	outs   dx,BYTE PTR gs:[esi]
  429010:	jne    0x42905b
  429012:	je     0x429079
  429014:	ins    DWORD PTR es:[edi],dx
  429015:	inc    ebx
  429016:	outs   dx,DWORD PTR ds:[esi]
  429017:	jne    0x429087
  429019:	je     0x42901b
  42901b:	add    BYTE PTR ds:0x74655302,bh
  429021:	inc    esp
  429022:	ins    BYTE PTR es:[edi],dx
  429023:	addr16 dec ecx
  429025:	je     0x42908c
  429027:	ins    DWORD PTR es:[edi],dx
  429028:	dec    ecx
  429029:	outs   dx,BYTE PTR ds:[esi]
  42902a:	je     0x42902c
  42902c:	mov    al,ds:0x57734901
  429031:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  429038:	mov    ds:0x57734901,al
  42903d:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  429044:	imul   esp,DWORD PTR [ebx+0x6f],0xe7006564
  42904b:	add    DWORD PTR [edi+0x70],ecx
  42904e:	outs   dx,BYTE PTR gs:[esi]
  429050:	inc    esp
  429051:	gs jae 0x4290bf
  429054:	je     0x4290c5
  429056:	jo     0x4290af
  429058:	add    BYTE PTR [eax],al
  42905a:	cmp    al,BYTE PTR [eax]
  42905c:	inc    ebx
  42905d:	push   0x446b6365
  429062:	ins    BYTE PTR es:[edi],dx
  429063:	addr16 inc edx
  429065:	jne    0x4290db
  429067:	je     0x4290d8
  429069:	outs   dx,BYTE PTR ds:[esi]
  42906a:	add    BYTE PTR [eax],al
  42906c:	mov    eax,DWORD PTR [ecx]
  42906e:	dec    ecx
  42906f:	outs   dx,BYTE PTR ds:[esi]
  429070:	jbe    0x4290d7
  429072:	jb     0x4290e8
  429074:	push   edx
  429075:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  42907a:	pop    DWORD PTR [eax]
  42907c:	inc    esp
  42907d:	gs push di
  429080:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  429087:	outs   dx,DWORD PTR ds:[esi]
  429088:	arpl   WORD PTR [edi+0x0],dx
  42908b:	add    BYTE PTR ds:0x74654701,cl
  429091:	inc    esp
  429092:	imul   esp,DWORD PTR [ecx+0x6c],0x6142676f
  429099:	jae    0x429100
  42909b:	push   ebp
  42909c:	outs   dx,BYTE PTR ds:[esi]
  42909d:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x47016500
  4290a5:	gs je  0x4290fd
  4290a8:	jae    0x42910f
  4290aa:	jb     0x4290fb
  4290ac:	bound  ebp,QWORD PTR [edx+0x65]
  4290af:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  4290b3:	outs   dx,WORD PTR ds:[esi]
  4290b5:	jb     0x429124
  4290b7:	popa   
  4290b8:	je     0x429123
  4290ba:	outs   dx,DWORD PTR ds:[esi]
  4290bb:	outs   dx,BYTE PTR ds:[esi]
  4290bc:	inc    ecx
  4290bd:	add    BYTE PTR [ecx+0x44734901],bl
  4290c3:	ins    BYTE PTR es:[edi],dx
  4290c4:	addr16 inc edx
  4290c6:	jne    0x42913c
  4290c8:	je     0x429139
  4290ca:	outs   dx,BYTE PTR ds:[esi]
  4290cb:	inc    ebx
  4290cc:	push   0x656b6365
  4290d1:	add    BYTE PTR fs:[eax],al
  4290d4:	ins    DWORD PTR es:[edi],dx
  4290d5:	add    DWORD PTR [edi+0x65],eax
  4290d8:	je     0x429131
  4290da:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  4290e1:	outs   dx,BYTE PTR ds:[esi]
  4290e2:	addr16 push edi
  4290e4:	add    BYTE PTR [eax],al
  4290e6:	popa   
  4290e7:	add    BYTE PTR [ebx+0x72],al
  4290ea:	gs popa 
  4290ec:	je     0x429153
  4290ee:	push   eax
  4290ef:	outs   dx,DWORD PTR ds:[esi]
  4290f0:	jo     0x429167
  4290f2:	jo     0x429141
  4290f4:	outs   dx,BYTE PTR gs:[esi]
  4290f6:	jne    0x4290f8
  4290f8:	sbb    eax,DWORD PTR [eax]
  4290fa:	inc    ebx
  4290fb:	popa   
  4290fc:	ins    BYTE PTR es:[edi],dx
  4290fd:	ins    BYTE PTR es:[edi],dx
  4290fe:	push   edi
  4290ff:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  429106:	outs   dx,DWORD PTR ds:[esi]
  429107:	arpl   WORD PTR [edi+0x0],dx
  42910a:	stos   DWORD PTR es:[edi],eax
  42910b:	add    BYTE PTR [edx+esi*2+0x61],al
  42910f:	ja     0x429152
  429111:	outs   dx,BYTE PTR ds:[esi]
  429112:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  429119:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  42911e:	sahf   
  42911f:	add    DWORD PTR [ecx+0x73],ecx
  429122:	push   edx
  429123:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  429128:	jo     0x42919e
  42912a:	jns    0x42912c
  42912c:	inc    BYTE PTR [eax]
  42912e:	inc    edi
  42912f:	gs je  0x429175
  429132:	ins    BYTE PTR es:[edi],dx
  429133:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  42913a:	jb     0x42913c
  42913c:	lds    eax,FWORD PTR [eax]
  42913e:	inc    ebp
  42913f:	outs   dx,BYTE PTR ds:[esi]
  429140:	fs push eax
  429142:	popa   
  429143:	imul   ebp,DWORD PTR [esi+0x74],0xdc0000
  42914a:	inc    ebp
  42914b:	outs   dx,BYTE PTR ds:[esi]
  42914c:	jne    0x4291bb
  42914e:	push   edi
  42914f:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  429156:	xchg   DWORD PTR [ecx],eax
  429158:	dec    ecx
  429159:	outs   dx,BYTE PTR ds:[esi]
  42915a:	je     0x4291c1
  42915c:	jb     0x4291cc
  42915e:	popa   
  42915f:	ins    BYTE PTR es:[edi],dx
  429160:	inc    edi
  429161:	gs je  0x4291bb
  429164:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  42916b:	js     0x4291e1
  42916d:	add    BYTE PTR [eax+0x43734901],dl
  429173:	push   0x6f4c7261
  429178:	ja     0x4291df
  42917a:	jb     0x4291bd
  42917c:	add    BYTE PTR [eax],al
  42917e:	aad    0x1
  429180:	dec    ebp
  429181:	gs jae 0x4291f7
  429184:	popa   
  429185:	addr16 gs inc edx
  429188:	outs   dx,DWORD PTR ds:[esi]
  429189:	js     0x4291e2
  42918b:	add    BYTE PTR [edi+0x636f4c01],bh
  429191:	imul   edx,DWORD PTR [edi+0x69],0x6e
  429195:	outs   dx,DWORD PTR fs:[esi]
  429197:	ja     0x4291ee
  429199:	jo     0x4291ff
  42919b:	popa   
  42919c:	je     0x429203
  42919e:	add    BYTE PTR [eax],al
  4291a0:	add    BYTE PTR es:[ebx+0x68],al
  4291a4:	popa   
  4291a5:	jb     0x4291f3
  4291a7:	outs   dx,DWORD PTR ds:[esi]
  4291a8:	ja     0x42920f
  4291aa:	jb     0x4291ed
  4291ac:	add    BYTE PTR [eax],al
  4291ae:	call   0x6e6f:0x696e5502
  4291b5:	push   edx
  4291b6:	arpl   WORD PTR gs:[eax+eax*1+0x38],si
  4291bb:	add    DWORD PTR [edi+0x65],eax
  4291be:	je     0x42920d
  4291c0:	outs   dx,BYTE PTR gs:[esi]
  4291c2:	jne    0x429217
  4291c4:	je     0x429238
  4291c6:	imul   ebp,DWORD PTR [esi+0x67],0xd9000041
  4291cd:	add    DWORD PTR [ebp+0x6f],ecx
  4291d0:	outs   dx,BYTE PTR ds:[esi]
  4291d1:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x6d6f7246
  4291d9:	push   edx
  4291da:	arpl   WORD PTR gs:[eax+eax*1+0x6d],si
  4291df:	add    dl,BYTE PTR [ebx+0x65]
  4291e2:	je     0x42923b
  4291e4:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  4291eb:	outs   dx,BYTE PTR ds:[esi]
  4291ec:	addr16 inc ecx
  4291ee:	add    BYTE PTR [eax],al
  4291f0:	or     al,0x0
  4291f2:	inc    edx
  4291f3:	imul   ebp,DWORD PTR gs:[bp+0x44],0x72656665
  4291fc:	push   edi
  4291fd:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  429204:	jae    0x429206
  429206:	add    BYTE PTR cs:[ebx+0x68],al
  42920a:	popa   
  42920b:	jb     0x42925d
  42920d:	jb     0x429274
  42920f:	jbe    0x429252
  429211:	add    bl,bl
  429213:	add    DWORD PTR [ebp+0x6f],ecx
  429216:	jbe    0x42927d
  429218:	push   edi
  429219:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  429220:	mov    dh,0x1
  429222:	dec    esp
  429223:	outs   dx,DWORD PTR ds:[esi]
  429224:	popa   
  429225:	fs dec ebp
  429227:	outs   dx,BYTE PTR gs:[esi]
  429229:	jne    0x42926c
  42922b:	add    BYTE PTR [ebp+0x79656b02],bh
  429231:	bound  esp,QWORD PTR [edi+ebx*2+0x65]
  429235:	jbe    0x42929c
  429237:	outs   dx,BYTE PTR ds:[esi]
  429238:	je     0x42923a
  42923a:	pop    esp
  42923b:	add    DWORD PTR [edi+0x65],eax
  42923e:	je     0x429293
  429240:	jns    0x4292b5
  429242:	je     0x4292a9
  429244:	ins    DWORD PTR es:[edi],dx
  429245:	dec    ebp
  429246:	gs je  0x4292bb
  429249:	imul   esp,DWORD PTR [ebx+0x73],0x1af0000
  429250:	dec    esp
  429251:	outs   dx,DWORD PTR ds:[esi]
  429252:	popa   
  429253:	fs dec ecx
  429255:	arpl   WORD PTR [edi+0x6e],bp
  429258:	inc    ecx
  429259:	add    BYTE PTR [ebx+0x1],al
  42925c:	inc    edi
  42925d:	gs je  0x4292ae
  429260:	gs js  0x4292d7
  429263:	inc    esp
  429264:	ins    BYTE PTR es:[edi],dx
  429265:	addr16 push esp
  429267:	popa   
  429268:	bound  ecx,QWORD PTR [ecx+0x74]
  42926b:	gs ins DWORD PTR es:[edi],dx
  42926d:	add    BYTE PTR [ebx+0x61724400],dh
  429273:	ja     0x4292be
  429275:	arpl   WORD PTR [edi+0x6e],bp
  429278:	add    BYTE PTR [eax],al
  42927a:	std    
  42927b:	add    BYTE PTR [edi+0x65],al
  42927e:	je     0x4292c3
  429280:	ins    BYTE PTR es:[edi],dx
  429281:	imul   esp,DWORD PTR [ebp+0x6e],0x63655274
  429288:	je     0x42928a
  42928a:	add    DWORD PTR ds:[edi+0x65],eax
  42928e:	je     0x4292dd
  429290:	gs jae 0x429306
  429293:	popa   
  429294:	addr16 gs push edi
  429297:	add    BYTE PTR [edx+0x1],al
  42929a:	inc    edi
  42929b:	gs je  0x4292ec
  42929e:	gs js  0x429315
  4292a1:	inc    esp
  4292a2:	ins    BYTE PTR es:[edi],dx
  4292a3:	addr16 inc edi
  4292a5:	jb     0x429316
  4292a7:	jne    0x429319
  4292a9:	dec    ecx
  4292aa:	je     0x429311
  4292ac:	ins    DWORD PTR es:[edi],dx
  4292ad:	add    BYTE PTR ds:0x6c655202,dl
  4292b3:	gs popa 
  4292b5:	jae    0x42931c
  4292b7:	inc    esp
  4292b8:	inc    ebx
  4292b9:	add    BYTE PTR [ebp+0x53],dl
  4292bc:	inc    ebp
  4292bd:	push   edx
  4292be:	xor    esi,DWORD PTR [edx]
  4292c0:	cs fs ins BYTE PTR es:[edi],dx
  4292c3:	ins    BYTE PTR es:[edi],dx
  4292c4:	add    BYTE PTR [eax],al
  4292c6:	add    ecx,DWORD PTR ss:[ebp+0x6f]
  4292ca:	jbe    0x429331
  4292cc:	inc    esi
  4292cd:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0x71004178
  4292d5:	add    DWORD PTR [esi+0x69],eax
  4292d8:	outs   dx,BYTE PTR ds:[esi]
  4292d9:	fs push edx
  4292db:	gs jae 0x42934d
  4292de:	jne    0x429352
  4292e0:	arpl   WORD PTR [ebp+0x45],sp
  4292e3:	js     0x42933c
  4292e5:	add    BYTE PTR [ebx],dl
  4292e7:	add    al,0x53
  4292e9:	gs je  0x42932f
  4292ec:	jne    0x429360
  4292ee:	jb     0x429355
  4292f0:	outs   dx,BYTE PTR ds:[esi]
  4292f1:	je     0x429337
  4292f3:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4292fa:	jns    0x42933d
  4292fc:	add    BYTE PTR [eax],al
  4292fe:	sub    BYTE PTR [ebx+edx*2],al
  429301:	gs je  0x42934c
  429304:	popa   
  429305:	outs   dx,BYTE PTR ds:[esi]
  429306:	fs ins BYTE PTR es:[edi],dx
  429308:	gs inc ebx
  42930a:	outs   dx,DWORD PTR ds:[esi]
  42930b:	jne    0x42937b
  42930d:	je     0x42930f
  42930f:	add    BYTE PTR [ebx+0x6d6f4300],dh
  429315:	jo     0x429378
  429317:	jb     0x42937e
  429319:	push   ebx
  42931a:	je     0x42938e
  42931c:	imul   ebp,DWORD PTR [esi+0x67],0x52000041
  429323:	add    DWORD PTR [esi+0x69],eax
  429326:	ins    BYTE PTR es:[edi],dx
  429327:	gs push esp
  429329:	imul   ebp,DWORD PTR [ebp+0x65],0x6f4c6f54
  429330:	arpl   WORD PTR [ecx+0x6c],sp
  429333:	inc    esi
  429334:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x656d69
  42933c:	cmp    eax,DWORD PTR [ebx+edx*2]
  42933f:	gs je  0x429395
  429342:	jns    0x4293b7
  429344:	je     0x4293ab
  429346:	ins    DWORD PTR es:[edi],dx
  429347:	push   esp
  429348:	imul   ebp,DWORD PTR [ebp+0x65],0x47018e00
  42934f:	gs je  0x429393
  429352:	inc    ebx
  429353:	push   eax
  429354:	add    BYTE PTR [eax],al
  429356:	arpl   WORD PTR [ecx],ax
  429358:	inc    esi
  429359:	imul   ebp,DWORD PTR [esi+0x64],0x73726946
  429360:	je     0x4293a8
  429362:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x33f0000
  42936a:	dec    esp
  42936b:	outs   dx,DWORD PTR ds:[esi]
  42936c:	popa   
  42936d:	fs dec esp
  42936f:	imul   esp,DWORD PTR [edx+0x72],0x57797261
  429376:	add    BYTE PTR [eax],al
  429378:	push   ss
  429379:	add    DWORD PTR [ebp+0x6e],eax
  42937c:	je     0x4293e3
  42937e:	jb     0x4293c3
  429380:	jb     0x4293eb
  429382:	je     0x4293ed
  429384:	arpl   WORD PTR [ecx+0x6c],sp
  429387:	push   ebx
  429388:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  42938d:	outs   dx,BYTE PTR ds:[esi]
  42938e:	add    BYTE PTR [eax],al
  429390:	cdq    
  429391:	add    DWORD PTR [edi+0x65],eax
  429394:	je     0x4293d9
  429396:	outs   dx,DWORD PTR ds:[esi]
  429397:	ins    DWORD PTR es:[edi],dx
  429398:	ins    DWORD PTR es:[edi],dx
  429399:	inc    ebx
  42939a:	outs   dx,DWORD PTR ds:[esi]
  42939b:	outs   dx,BYTE PTR ds:[esi]
  42939c:	imul   sp,WORD PTR [edi+0x0],0x188
  4293a2:	inc    esi
  4293a3:	jb     0x42940a
  4293a5:	gs push edx
  4293a7:	gs jae 0x429419
  4293aa:	jne    0x42941e
  4293ac:	arpl   WORD PTR [ebp+0x0],sp
  4293af:	add    BYTE PTR [eax+0x1],ah
  4293b2:	inc    esi
  4293b3:	imul   ebp,DWORD PTR [esi+0x64],0x73726946
  4293ba:	je     0x429402
  4293bc:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x1930000
  4293c4:	inc    edi
  4293c5:	gs je  0x42940a
  4293c8:	imul   ebp,DWORD PTR [esi+0x61],0x79547972
  4293cf:	jo     0x429436
  4293d1:	push   edi
  4293d2:	add    BYTE PTR [eax],al
  4293d4:	fiadd  WORD PTR [esp+ebp*2]
  4293d7:	jae    0x42944d
  4293d9:	jb     0x429447
  4293db:	outs   dx,BYTE PTR gs:[esi]
  4293dd:	push   edi
  4293de:	add    BYTE PTR [eax],al
  4293e0:	pop    ds
  4293e1:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
  4293e5:	popa   
  4293e6:	ins    BYTE PTR es:[edi],dx
  4293e7:	push   ebx
  4293e8:	imul   edi,DWORD PTR [edx+0x65],0x47025700
  4293ef:	gs je  0x429445
  4293f2:	jns    0x429467
  4293f4:	je     0x42945b
  4293f6:	ins    DWORD PTR es:[edi],dx
  4293f7:	inc    esp
  4293f8:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4293ff:	jns    0x429442
  429401:	add    BYTE PTR [esi+0x74654701],ah
  429407:	inc    ebx
  429408:	outs   dx,DWORD PTR ds:[esi]
  429409:	ins    DWORD PTR es:[edi],dx
  42940a:	jo     0x429481
  42940c:	je     0x429473
  42940e:	jb     0x42945e
  429410:	popa   
  429411:	ins    DWORD PTR es:[edi],dx
  429412:	gs push edi
  429414:	add    BYTE PTR [eax],al
  429416:	rol    BYTE PTR [eax],cl
  429418:	inc    ebx
  429419:	jb     0x429480
  42941b:	popa   
  42941c:	je     0x429483
  42941e:	inc    esi
  42941f:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  429427:	outs   dx,BYTE PTR ds:[esi]
  429428:	addr16 inc ecx
  42942a:	add    BYTE PTR [eax],al
  42942c:	retf   0x4300
  42942f:	jb     0x429496
  429431:	popa   
  429432:	je     0x429499
  429434:	inc    esp
  429435:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  42943c:	jns    0x429495
  42943e:	add    BYTE PTR [eax],al
  429440:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429441:	add    BYTE PTR [ebx+0x61],al
  429444:	outs   dx,BYTE PTR ds:[esi]
  429445:	arpl   WORD PTR [ebp+0x6c],sp
  429448:	push   edi
  429449:	popa   
  42944a:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  429452:	ins    DWORD PTR es:[edi],dx
  429453:	gs jb  0x429456
  429456:	add    al,0x2
  429458:	inc    edi
  429459:	gs je  0x4294a8
  42945c:	outs   dx,DWORD PTR ds:[esi]
  42945d:	arpl   WORD PTR [ecx+0x6c],sp
  429460:	gs dec ecx
  429462:	outs   dx,BYTE PTR ds:[esi]
  429463:	outs   dx,WORD PTR ds:[esi]
  429465:	inc    ecx
  429466:	add    BYTE PTR [eax],al
  429468:	xor    eax,0x766f4d03
  42946d:	gs inc esi
  42946f:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x47019d00
  429477:	gs je  0x4294bd
  42947a:	outs   dx,DWORD PTR ds:[esi]
  42947b:	ins    DWORD PTR es:[edi],dx
  42947c:	ins    DWORD PTR es:[edi],dx
  42947d:	push   ebx
  42947e:	je     0x4294e1
  429480:	je     0x4294e7
  429482:	add    BYTE PTR [eax],al
  429484:	mov    ah,0x3
  429486:	push   edx
  429487:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x61577265
  429490:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6e695372
  429498:	ins    BYTE PTR es:[di],dx
  42949a:	gs dec edi
  42949c:	bound  ebp,QWORD PTR [edx+0x65]
  42949f:	arpl   WORD PTR [eax+eax*1+0x5d],si
  4294a3:	add    al,BYTE PTR [edi+0x65]
  4294a6:	je     0x4294fb
  4294a8:	jns    0x42951d
  4294aa:	je     0x429511
  4294ac:	ins    DWORD PTR es:[edi],dx
  4294ad:	push   esp
  4294ae:	imul   ebp,DWORD PTR [ebp+0x65],0x756a6441
  4294b5:	jae    0x42952b
  4294b7:	ins    DWORD PTR es:[edi],dx
  4294b8:	outs   dx,BYTE PTR gs:[esi]
  4294ba:	je     0x4294bc
  4294bc:	add    al,0x1
  4294be:	inc    esp
  4294bf:	gs ins BYTE PTR es:[edi],dx
  4294c1:	gs je  0x429529
  4294c4:	inc    esi
  4294c5:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x47024900
  4294cd:	gs je  0x429523
  4294d0:	push   0x5074726f
  4294d5:	popa   
  4294d6:	je     0x429540
  4294d8:	dec    esi
  4294d9:	popa   
  4294da:	ins    DWORD PTR es:[edi],dx
  4294db:	gs inc ecx
  4294dd:	add    BYTE PTR [edx],al
  4294df:	add    DWORD PTR [ebp+eiz*2+0x6c],eax
  4294e3:	gs je  0x42954b
  4294e6:	inc    ebx
  4294e7:	jb     0x429552
  4294e9:	je     0x429554
  4294eb:	arpl   WORD PTR [ecx+0x6c],sp
  4294ee:	push   ebx
  4294ef:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  4294f4:	outs   dx,BYTE PTR ds:[esi]
  4294f5:	add    bl,ah
  4294f7:	add    BYTE PTR [ebx+0x72],al
  4294fa:	gs popa 
  4294fc:	je     0x429563
  4294fe:	dec    esi
  4294ff:	popa   
  429500:	ins    DWORD PTR es:[edi],dx
  429501:	gs fs push eax
  429504:	imul   esi,DWORD PTR [eax+0x65],0xd4000057
  42950b:	add    cl,BYTE PTR [ecx+0x73]
  42950e:	inc    edx
  42950f:	popa   
  429510:	fs push edx
  429512:	gs popa 
  429514:	fs push eax
  429516:	je     0x42958a
  429518:	add    BYTE PTR [eax],al
  42951a:	jnp    0x42951e
  42951c:	inc    edi
  42951d:	gs je  0x429575
  429520:	jae    0x429587
  429522:	jb     0x429568
  429524:	gs popaw 
  429527:	jne    0x429595
  429529:	je     0x429577
  42952b:	inc    ebx
  42952c:	dec    ecx
  42952d:	inc    esp
  42952e:	add    BYTE PTR [eax],al
  429530:	inc    ebp
  429531:	add    al,BYTE PTR [edi+0x65]
  429534:	je     0x429586
  429536:	jb     0x4295a7
  429538:	arpl   WORD PTR [ecx+0x64],ax
  42953b:	fs jb  0x4295a3
  42953e:	jae    0x4295b3
  429540:	add    BYTE PTR [eax],al
  429542:	mov    BYTE PTR [ebx],0x52
  429545:	gs jae 0x4295ad
  429548:	je     0x42958f
  42954a:	jbe    0x4295b1
  42954c:	outs   dx,BYTE PTR ds:[esi]
  42954d:	je     0x42954f
  42954f:	add    BYTE PTR [edx+0x656c4300],ch
  429555:	popa   
  429556:	jb     0x42959b
  429558:	outs   dx,DWORD PTR ds:[esi]
  429559:	ins    DWORD PTR es:[edi],dx
  42955a:	ins    DWORD PTR es:[edi],dx
  42955b:	inc    ebp
  42955c:	jb     0x4295d0
  42955e:	outs   dx,DWORD PTR ds:[esi]
  42955f:	jb     0x429561
  429561:	add    BYTE PTR [eax+0x61654802],bh
  429567:	jo     0x4295be
  429569:	outs   dx,BYTE PTR ds:[esi]
  42956a:	ins    BYTE PTR es:[edi],dx
  42956b:	outs   dx,DWORD PTR ds:[esi]
  42956c:	arpl   WORD PTR [ebx+0x0],bp
  42956f:	add    dh,ch
  429571:	add    edx,DWORD PTR [ebx+0x65]
  429574:	je     0x4295b9
  429576:	outs   dx,DWORD PTR ds:[esi]
  429577:	ins    DWORD PTR es:[edi],dx
  429578:	ins    DWORD PTR es:[edi],dx
  429579:	push   ebx
  42957a:	je     0x4295dd
  42957c:	je     0x4295e3
  42957e:	add    BYTE PTR [eax],al
  429580:	out    dx,eax
  429581:	add    DWORD PTR [edi+0x65],eax
  429584:	je     0x4295cc
  429586:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x69727474
  42958e:	bound  esi,QWORD PTR [ebp+0x74]
  429591:	gs jae 0x4295d5
  429594:	add    BYTE PTR [eax],al
  429596:	sub    al,0x1
  429598:	inc    ebp
  429599:	outs   dx,BYTE PTR ds:[esi]
  42959a:	jne    0x429609
  42959c:	push   ebx
  42959d:	jns    0x429612
  42959f:	je     0x429606
  4295a1:	ins    DWORD PTR es:[edi],dx
  4295a2:	dec    esp
  4295a3:	outs   dx,DWORD PTR ds:[esi]
  4295a4:	arpl   WORD PTR [ecx+0x6c],sp
  4295a7:	gs jae 0x4295eb
  4295aa:	add    BYTE PTR [eax],al
  4295ac:	sub    eax,0x74655304
  4295b1:	dec    esp
  4295b2:	outs   dx,DWORD PTR ds:[esi]
  4295b3:	arpl   WORD PTR [ecx+0x6c],sp
  4295b6:	push   esp
  4295b7:	imul   ebp,DWORD PTR [ebp+0x65],0x1240000
  4295be:	inc    ebp
  4295bf:	outs   dx,BYTE PTR ds:[esi]
  4295c0:	jne    0x42962f
  4295c2:	push   edx
  4295c3:	gs jae 0x429635
  4295c6:	jne    0x42963a
  4295c8:	arpl   WORD PTR [ebp+0x4e],sp
  4295cb:	popa   
  4295cc:	ins    DWORD PTR es:[edi],dx
  4295cd:	gs jae 0x429627
  4295d0:	add    BYTE PTR [eax],al
  4295d2:	imul   eax,DWORD PTR [esp+edx*2],0x7246736c
  4295d9:	gs add BYTE PTR gs:[ebx],ah
  4295dd:	add    al,0x53
  4295df:	gs je  0x429628
  4295e2:	imul   ebp,DWORD PTR [ebp+eiz*2+0x50],0x746e696f
  4295ea:	gs jb  0x4295ed
  4295ed:	add    BYTE PTR [edi+0x1],ch
  4295f0:	inc    esi
  4295f1:	imul   ebp,DWORD PTR [esi+0x64],0x6f736552
  4295f8:	jne    0x42966c
  4295fa:	arpl   WORD PTR [ebp+0x41],sp
  4295fd:	add    BYTE PTR ds:0x6c654401,al
  429603:	gs je  0x42966b
  429606:	inc    esi
  429607:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x4701a400
  42960f:	gs je  0x429655
  429612:	outs   dx,DWORD PTR ds:[esi]
  429613:	ins    DWORD PTR es:[edi],dx
  429614:	jo     0x42968b
  429616:	je     0x42967d
  429618:	jb     0x429668
  42961a:	popa   
  42961b:	ins    DWORD PTR es:[edi],dx
  42961c:	gs inc ebp
  42961e:	js     0x429661
  429620:	add    BYTE PTR [eax],al
  429622:	cmp    BYTE PTR [ebx],al
  429624:	dec    ebp
  429625:	outs   dx,DWORD PTR ds:[esi]
  429626:	jbe    0x42968d
  429628:	inc    esi
  429629:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x52454b00
  429631:	dec    esi
  429632:	inc    ebp
  429633:	dec    esp
  429634:	xor    esi,DWORD PTR [edx]
  429636:	cs fs ins BYTE PTR es:[edi],dx
  429639:	ins    BYTE PTR es:[edi],dx
  42963a:	add    BYTE PTR [eax],al
  42963c:	add    BYTE PTR [eax],al
  42963e:	add    BYTE PTR [eax],al
  429640:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429641:	and    al,BYTE PTR [edx]
	...
  42965f:	add    BYTE PTR [ebx-0x6a],bh
  429662:	add    al,BYTE PTR [eax]
	...
  429670:	imul   esp,DWORD PTR fs:[edx+0x6f],0x632e6661
  429678:	outs   dx,DWORD PTR ds:[esi]
  429679:	ins    DWORD PTR es:[edi],dx
  42967a:	add    BYTE PTR [ebx+0x72],al
  42967d:	je     0x4296d3
  42967f:	push   0x64616572
  429684:	inc    ebp
  429685:	js     0x4296c8
  429687:	inc    eax
  429688:	cmp    BYTE PTR [eax],al
