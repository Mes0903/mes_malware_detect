
9c3950db6ef461ab7f5fa3964f1a575b97a600ed1ae8680a95a021ae2a45ea40.exe:     file format pei-i386


Disassembly of section .text:

00010600 <.text>:
   10600:	add    BYTE PTR [eax],al
   10602:	add    BYTE PTR [eax],al
   10604:	add    BYTE PTR [eax],al
   10606:	mov    edi,edi
   10608:	push   ebp
   10609:	mov    ebp,esp
   1060b:	mov    eax,DWORD PTR [ebp+0xc]
   1060e:	xor    eax,DWORD PTR [ebp+0x10]
   10611:	mov    ecx,DWORD PTR [ebp+0x10]
   10614:	and    eax,0x7ffffffe
   10619:	xor    eax,DWORD PTR [ebp+0xc]
   1061c:	and    cl,0x1
   1061f:	movzx  ecx,cl
   10622:	shr    eax,1
   10624:	neg    ecx
   10626:	sbb    ecx,ecx
   10628:	and    ecx,0x9908b0df
   1062e:	xor    eax,ecx
   10630:	xor    eax,DWORD PTR [ebp+0x8]
   10633:	pop    ebp
   10634:	ret    0xc
   10637:	int3   
   10638:	int3   
   10639:	int3   
   1063a:	int3   
   1063b:	int3   
   1063c:	mov    edi,edi
   1063e:	push   ebp
   1063f:	mov    ebp,esp
   10641:	mov    eax,DWORD PTR [ebp+0x8]
   10644:	xor    edx,edx
   10646:	inc    edx
   10647:	mov    DWORD PTR [ecx],eax
   10649:	push   esi
   1064a:	mov    eax,DWORD PTR [ecx]
   1064c:	mov    esi,eax
   1064e:	shr    esi,0x1e
   10651:	xor    esi,eax
   10653:	imul   esi,esi,0x6c078965
   10659:	add    ecx,0x4
   1065c:	add    esi,edx
   1065e:	inc    edx
   1065f:	cmp    edx,0x270
   10665:	mov    DWORD PTR [ecx],esi
   10667:	jl     0x1064a
   10669:	pop    esi
   1066a:	pop    ebp
   1066b:	ret    0x4
   1066e:	int3   
   1066f:	int3   
   10670:	int3   
   10671:	int3   
   10672:	int3   
   10673:	int3   
   10674:	mov    edi,edi
   10676:	push   ebp
   10677:	mov    ebp,esp
   10679:	push   ecx
   1067a:	push   ebx
   1067b:	push   esi
   1067c:	push   edi
   1067d:	mov    edi,ecx
   1067f:	mov    esi,edi
   10681:	mov    ebx,0xe3
   10686:	push   DWORD PTR [esi+0x4]
   10689:	mov    ecx,edi
   1068b:	push   DWORD PTR [esi]
   1068d:	dec    ebx
   1068e:	push   DWORD PTR [esi+0x634]
   10694:	call   0x10606
   10699:	mov    DWORD PTR [esi],eax
   1069b:	add    esi,0x4
   1069e:	test   ebx,ebx
   106a0:	jne    0x10686
   106a2:	mov    DWORD PTR [ebp-0x4],0x18c
   106a9:	lea    ebx,[esi+0x4]
   106ac:	push   DWORD PTR [ebx]
   106ae:	mov    ecx,edi
   106b0:	push   DWORD PTR [esi]
   106b2:	push   DWORD PTR [esi-0x38c]
   106b8:	call   0x10606
   106bd:	dec    DWORD PTR [ebp-0x4]
   106c0:	mov    DWORD PTR [esi],eax
   106c2:	mov    esi,ebx
   106c4:	jne    0x106a9
   106c6:	push   DWORD PTR [edi]
   106c8:	mov    ecx,edi
   106ca:	push   DWORD PTR [esi]
   106cc:	push   DWORD PTR [esi-0x38c]
   106d2:	call   0x10606
   106d7:	mov    DWORD PTR [esi],eax
   106d9:	mov    DWORD PTR [edi+0x9c4],0x270
   106e3:	mov    DWORD PTR [edi+0x9c0],edi
   106e9:	pop    edi
   106ea:	pop    esi
   106eb:	pop    ebx
   106ec:	leave  
   106ed:	ret    
   106ee:	int3   
   106ef:	int3   
   106f0:	int3   
   106f1:	int3   
   106f2:	int3   
   106f3:	int3   
   106f4:	mov    edi,edi
   106f6:	push   ebp
   106f7:	mov    ebp,esp
   106f9:	push   esi
   106fa:	push   DWORD PTR [ebp+0x8]
   106fd:	mov    esi,ecx
   106ff:	call   0x1063c
   10704:	mov    ecx,esi
   10706:	call   0x10674
   1070b:	pop    esi
   1070c:	pop    ebp
   1070d:	ret    0x4
   10710:	int3   
   10711:	int3   
   10712:	int3   
   10713:	int3   
   10714:	int3   
   10715:	int3   
   10716:	mov    edi,edi
   10718:	push   esi
   10719:	push   edi
   1071a:	mov    edi,ecx
   1071c:	lea    esi,[edi+0x9c4]
   10722:	cmp    DWORD PTR [esi],0x0
   10725:	jne    0x1072c
   10727:	call   0x10674
   1072c:	dec    DWORD PTR [esi]
   1072e:	lea    eax,[edi+0x9c0]
   10734:	mov    edx,DWORD PTR [eax]
   10736:	mov    ecx,DWORD PTR [edx]
   10738:	add    edx,0x4
   1073b:	mov    DWORD PTR [eax],edx
   1073d:	mov    eax,ecx
   1073f:	shr    eax,0xb
   10742:	xor    ecx,eax
   10744:	mov    eax,ecx
   10746:	and    eax,0xff3a58ad
   1074b:	shl    eax,0x7
   1074e:	xor    ecx,eax
   10750:	mov    eax,ecx
   10752:	and    eax,0xffffdf8c
   10757:	shl    eax,0xf
   1075a:	xor    ecx,eax
   1075c:	mov    eax,ecx
   1075e:	shr    eax,0x12
   10761:	pop    edi
   10762:	xor    eax,ecx
   10764:	pop    esi
   10765:	ret    
   10766:	int3   
   10767:	int3   
   10768:	int3   
   10769:	int3   
   1076a:	int3   
   1076b:	int3   
   1076c:	mov    edi,edi
   1076e:	push   ebp
   1076f:	mov    ebp,esp
   10771:	push   esi
   10772:	mov    esi,DWORD PTR [ebp+0x8]
   10775:	shr    esi,1
   10777:	or     esi,DWORD PTR [ebp+0x8]
   1077a:	push   edi
   1077b:	mov    eax,esi
   1077d:	shr    eax,0x2
   10780:	or     esi,eax
   10782:	mov    eax,esi
   10784:	shr    eax,0x4
   10787:	or     esi,eax
   10789:	mov    eax,esi
   1078b:	shr    eax,0x8
   1078e:	or     esi,eax
   10790:	mov    eax,esi
   10792:	shr    eax,0x10
   10795:	mov    edi,ecx
   10797:	or     esi,eax
   10799:	mov    ecx,edi
   1079b:	call   0x10716
   107a0:	and    eax,esi
   107a2:	cmp    eax,DWORD PTR [ebp+0x8]
   107a5:	ja     0x10799
   107a7:	pop    edi
   107a8:	pop    esi
   107a9:	pop    ebp
   107aa:	ret    0x4
   107ad:	int3   
   107ae:	int3   
   107af:	int3   
   107b0:	int3   
   107b1:	int3   
   107b2:	mov    edi,edi
   107b4:	push   ebp
   107b5:	mov    ebp,esp
   107b7:	sub    esp,0xa04
   107bd:	push   ebx
   107be:	push   esi
   107bf:	mov    esi,DWORD PTR [ebp+0x14]
   107c2:	push   edi
   107c3:	test   esi,esi
   107c5:	jne    0x108a0
   107cb:	xor    ecx,ecx
   107cd:	lea    eax,[ebp-0x3c]
   107d0:	mov    edx,0xff
   107d5:	shl    edx,cl
   107d7:	and    edx,DWORD PTR [ebp+0x8]
   107da:	shr    edx,cl
   107dc:	inc    ecx
   107dd:	inc    ecx
   107de:	mov    DWORD PTR [eax],edx
   107e0:	add    eax,0x4
   107e3:	cmp    ecx,0x14
   107e6:	jne    0x107d0
   107e8:	mov    ebx,DWORD PTR [ebp+0xc]
   107eb:	xor    eax,eax
   107ed:	mov    WORD PTR [ebx],ax
   107f0:	mov    eax,DWORD PTR [ebp-0x3c]
   107f3:	push   0x5
   107f5:	cdq    
   107f6:	pop    ecx
   107f7:	idiv   ecx
   107f9:	mov    DWORD PTR [ebp-0x14],0x1df26
   10800:	mov    DWORD PTR [ebp-0x10],0x1df1c
   10807:	mov    DWORD PTR [ebp-0xc],0x1df14
   1080e:	mov    DWORD PTR [ebp-0x8],0x1df0a
   10815:	mov    DWORD PTR [ebp-0x4],0x1df00
   1081c:	mov    edx,DWORD PTR [ebp+edx*4-0x14]
   10820:	mov    ecx,edx
   10822:	mov    ax,WORD PTR [edx]
   10825:	inc    edx
   10826:	inc    edx
   10827:	test   ax,ax
   1082a:	jne    0x10822
   1082c:	sub    edx,ecx
   1082e:	mov    edi,ebx
   10830:	dec    edi
   10831:	mov    esi,ecx
   10833:	dec    edi
   10834:	mov    ax,WORD PTR [edi+0x2]
   10838:	inc    edi
   10839:	inc    edi
   1083a:	test   ax,ax
   1083d:	jne    0x10834
   1083f:	mov    ecx,edx
   10841:	shr    ecx,0x2
   10844:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   10846:	mov    ecx,edx
   10848:	and    ecx,0x3
   1084b:	mov    eax,ebx
   1084d:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1084f:	lea    ecx,[eax+0x2]
   10852:	mov    dx,WORD PTR [eax]
   10855:	inc    eax
   10856:	inc    eax
   10857:	test   dx,dx
   1085a:	jne    0x10852
   1085c:	sub    eax,ecx
   1085e:	sar    eax,1
   10860:	mov    ecx,eax
   10862:	mov    eax,DWORD PTR [ebp-0x38]
   10865:	push   0x3
   10867:	cdq    
   10868:	pop    esi
   10869:	idiv   esi
   1086b:	cmp    edx,0xfffffffe
   1086e:	je     0x10954
   10874:	add    edx,0x2
   10877:	lea    esi,[ebp-0x34]
   1087a:	mov    DWORD PTR [ebp+0x8],edx
   1087d:	mov    eax,DWORD PTR [esi]
   1087f:	cdq    
   10880:	push   0x1a
   10882:	pop    edi
   10883:	idiv   edi
   10885:	add    esi,0x4
   10888:	xor    eax,eax
   1088a:	add    edx,0x61
   1088d:	mov    WORD PTR [ebx+ecx*2],dx
   10891:	inc    ecx
   10892:	dec    DWORD PTR [ebp+0x8]
   10895:	mov    WORD PTR [ebx+ecx*2],ax
   10899:	jne    0x1087d
   1089b:	jmp    0x10954
   108a0:	cmp    esi,0x1
   108a3:	je     0x108b0
   108a5:	mov    eax,esi
   108a7:	imul   eax,eax,0xa
   108aa:	add    eax,DWORD PTR [ebp+0x10]
   108ad:	add    DWORD PTR [ebp+0x8],eax
   108b0:	push   DWORD PTR [ebp+0x8]
   108b3:	lea    ecx,[ebp-0xa04]
   108b9:	call   0x106f4
   108be:	lea    eax,[esi-0x1]
   108c1:	cmp    eax,0x5
   108c4:	ja     0x108d5
   108c6:	imul   esi,esi,0x3
   108c9:	add    esi,DWORD PTR [ebp+0x10]
   108cc:	mov    esi,DWORD PTR [esi*4+0x774bc]
   108d3:	jmp    0x108da
   108d5:	mov    esi,0x1defe
   108da:	mov    ebx,DWORD PTR [ebp+0xc]
   108dd:	xor    eax,eax
   108df:	mov    WORD PTR [ebx],ax
   108e2:	mov    eax,esi
   108e4:	mov    edx,esi
   108e6:	mov    cx,WORD PTR [eax]
   108e9:	inc    eax
   108ea:	inc    eax
   108eb:	test   cx,cx
   108ee:	jne    0x108e6
   108f0:	sub    eax,edx
   108f2:	mov    edi,ebx
   108f4:	dec    edi
   108f5:	dec    edi
   108f6:	mov    cx,WORD PTR [edi+0x2]
   108fa:	inc    edi
   108fb:	inc    edi
   108fc:	test   cx,cx
   108ff:	jne    0x108f6
   10901:	mov    ecx,eax
   10903:	shr    ecx,0x2
   10906:	mov    esi,edx
   10908:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1090a:	mov    ecx,eax
   1090c:	and    ecx,0x3
   1090f:	mov    eax,ebx
   10911:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   10913:	lea    ecx,[eax+0x2]
   10916:	mov    dx,WORD PTR [eax]
   10919:	inc    eax
   1091a:	inc    eax
   1091b:	test   dx,dx
   1091e:	jne    0x10916
   10920:	sub    eax,ecx
   10922:	sar    eax,1
   10924:	push   0x5
   10926:	mov    esi,eax
   10928:	pop    edi
   10929:	push   0x23
   1092b:	lea    ecx,[ebp-0xa04]
   10931:	call   0x1076c
   10936:	cmp    eax,0xa
   10939:	jae    0x10940
   1093b:	add    eax,0x30
   1093e:	jmp    0x10943
   10940:	add    eax,0x57
   10943:	movzx  eax,ax
   10946:	mov    WORD PTR [ebx+esi*2],ax
   1094a:	inc    esi
   1094b:	xor    eax,eax
   1094d:	dec    edi
   1094e:	mov    WORD PTR [ebx+esi*2],ax
   10952:	jne    0x10929
   10954:	pop    edi
   10955:	pop    esi
   10956:	pop    ebx
   10957:	leave  
   10958:	ret    0x10
   1095b:	int3   
   1095c:	int3   
   1095d:	int3   
   1095e:	int3   
   1095f:	int3   
   10960:	mov    edi,edi
   10962:	push   ebp
   10963:	mov    ebp,esp
   10965:	mov    eax,DWORD PTR [ebp+0x8]
   10968:	lea    edx,[eax+0x2]
   1096b:	mov    cx,WORD PTR [eax]
   1096e:	inc    eax
   1096f:	inc    eax
   10970:	test   cx,cx
   10973:	jne    0x1096b
   10975:	sub    eax,edx
   10977:	sar    eax,1
   10979:	pop    ebp
   1097a:	ret    0x4
   1097d:	int3   
   1097e:	int3   
   1097f:	int3   
   10980:	int3   
   10981:	int3   
   10982:	mov    eax,ecx
   10984:	ret    
   10985:	int3   
   10986:	int3   
   10987:	int3   
   10988:	int3   
   10989:	int3   
   1098a:	ret    
   1098b:	int3   
   1098c:	int3   
   1098d:	int3   
   1098e:	int3   
   1098f:	int3   
   10990:	mov    edi,edi
   10992:	push   ebp
   10993:	mov    ebp,esp
   10995:	push   esi
   10996:	mov    esi,DWORD PTR [ebp+0x8]
   10999:	push   edi
   1099a:	mov    edi,DWORD PTR [ebp+0xc]
   1099d:	jmp    0x109ed
   1099f:	push   0x0
   109a1:	push   0x100
   109a6:	push   edi
   109a7:	push   esi
   109a8:	call   0x1db40
   109ad:	lea    eax,[eax*8+0x780b0]
   109b4:	add    DWORD PTR [eax],esi
   109b6:	adc    DWORD PTR [eax+0x4],edi
   109b9:	test   edi,edi
   109bb:	jl     0x109f6
   109bd:	jg     0x109c3
   109bf:	test   esi,esi
   109c1:	jbe    0x109f6
   109c3:	mov    eax,esi
   109c5:	xor    ecx,ecx
   109c7:	and    eax,0x1
   109ca:	or     eax,ecx
   109cc:	push   ecx
   109cd:	jne    0x109da
   109cf:	push   0x2
   109d1:	push   edi
   109d2:	push   esi
   109d3:	call   0x1db34
   109d8:	jmp    0x109e9
   109da:	push   0x3
   109dc:	push   edi
   109dd:	push   esi
   109de:	call   0x1db28
   109e3:	add    eax,0x1
   109e6:	adc    edx,0x0
   109e9:	mov    edi,edx
   109eb:	mov    esi,eax
   109ed:	cmp    esi,0x4
   109f0:	jne    0x1099f
   109f2:	test   edi,edi
   109f4:	jne    0x1099f
   109f6:	mov    edx,edi
   109f8:	pop    edi
   109f9:	mov    eax,esi
   109fb:	pop    esi
   109fc:	pop    ebp
   109fd:	ret    0x8
   10a00:	int3   
   10a01:	int3   
   10a02:	int3   
   10a03:	int3   
   10a04:	int3   
   10a05:	int3   
   10a06:	mov    edi,edi
   10a08:	push   ebp
   10a09:	mov    ebp,esp
   10a0b:	push   esi
   10a0c:	push   0x20
   10a0e:	push   0x61737973
   10a13:	push   DWORD PTR [ebp+0x8]
   10a16:	push   0x1
   10a18:	call   DWORD PTR ds:0x1f01c
   10a1e:	mov    esi,eax
   10a20:	test   esi,esi
   10a22:	jne    0x10a2f
   10a24:	push   0xc000009a
   10a29:	call   DWORD PTR ds:0x1f018
   10a2f:	mov    eax,esi
   10a31:	pop    esi
   10a32:	pop    ebp
   10a33:	ret    
   10a34:	int3   
   10a35:	int3   
   10a36:	int3   
   10a37:	int3   
   10a38:	int3   
   10a39:	int3   
   10a3a:	mov    edi,edi
   10a3c:	push   ebp
   10a3d:	mov    ebp,esp
   10a3f:	cmp    DWORD PTR [ebp+0x8],0x0
   10a43:	je     0x10a50
   10a45:	push   0x0
   10a47:	push   DWORD PTR [ebp+0x8]
   10a4a:	call   DWORD PTR ds:0x1f020
   10a50:	pop    ebp
   10a51:	ret    
   10a52:	int3   
   10a53:	int3   
   10a54:	int3   
   10a55:	int3   
   10a56:	int3   
   10a57:	int3   
   10a58:	mov    edi,edi
   10a5a:	push   esi
   10a5b:	mov    esi,ecx
   10a5d:	dec    DWORD PTR [esi+0x4]
   10a60:	jne    0x10a71
   10a62:	push   DWORD PTR [esi]
   10a64:	call   0x10a3a
   10a69:	push   esi
   10a6a:	call   0x10a3a
   10a6f:	pop    ecx
   10a70:	pop    ecx
   10a71:	pop    esi
   10a72:	ret    
   10a73:	int3   
   10a74:	int3   
   10a75:	int3   
   10a76:	int3   
   10a77:	int3   
   10a78:	mov    edi,edi
   10a7a:	push   ebp
   10a7b:	mov    ebp,esp
   10a7d:	push   esi
   10a7e:	xor    esi,esi
   10a80:	xor    edx,edx
   10a82:	cmp    DWORD PTR [ebp+0xc],esi
   10a85:	je     0x10aa2
   10a87:	mov    eax,DWORD PTR [ebp+0x8]
   10a8a:	mov    ecx,DWORD PTR [ebp+0x10]
   10a8d:	mov    cl,BYTE PTR [edx+ecx*1]
   10a90:	add    eax,esi
   10a92:	xor    BYTE PTR [eax],cl
   10a94:	lea    eax,[edx+0x1]
   10a97:	xor    edx,edx
   10a99:	div    DWORD PTR [ebp+0x14]
   10a9c:	inc    esi
   10a9d:	cmp    esi,DWORD PTR [ebp+0xc]
   10aa0:	jne    0x10a87
   10aa2:	pop    esi
   10aa3:	pop    ebp
   10aa4:	ret    0x10
   10aa7:	int3   
   10aa8:	int3   
   10aa9:	int3   
   10aaa:	int3   
   10aab:	int3   
   10aac:	mov    edi,edi
   10aae:	push   ebp
   10aaf:	mov    ebp,esp
   10ab1:	mov    ecx,DWORD PTR [ebp+0x8]
   10ab4:	mov    eax,ecx
   10ab6:	lea    edx,[eax+0x2]
   10ab9:	push   esi
   10aba:	mov    si,WORD PTR [eax]
   10abd:	inc    eax
   10abe:	inc    eax
   10abf:	test   si,si
   10ac2:	jne    0x10aba
   10ac4:	sub    eax,edx
   10ac6:	sar    eax,1
   10ac8:	cmp    eax,0xc
   10acb:	jae    0x10ad4
   10acd:	xor    al,al
   10acf:	jmp    0x10ba2
   10ad4:	lea    eax,[ecx+eax*2-0x18]
   10ad8:	movzx  ecx,WORD PTR [eax]
   10adb:	cmp    cx,0x69
   10adf:	je     0x10ae7
   10ae1:	cmp    cx,0x49
   10ae5:	jne    0x10acd
   10ae7:	movzx  ecx,WORD PTR [eax+0x2]
   10aeb:	push   0x45
   10aed:	pop    esi
   10aee:	push   0x65
   10af0:	pop    edx
   10af1:	cmp    cx,dx
   10af4:	je     0x10afb
   10af6:	cmp    cx,si
   10af9:	jne    0x10acd
   10afb:	movzx  ecx,WORD PTR [eax+0x4]
   10aff:	cmp    cx,0x78
   10b03:	je     0x10b0b
   10b05:	cmp    cx,0x58
   10b09:	jne    0x10acd
   10b0b:	movzx  ecx,WORD PTR [eax+0x6]
   10b0f:	cmp    cx,0x70
   10b13:	je     0x10b1b
   10b15:	cmp    cx,0x50
   10b19:	jne    0x10acd
   10b1b:	movzx  ecx,WORD PTR [eax+0x8]
   10b1f:	cmp    cx,0x6c
   10b23:	je     0x10b2b
   10b25:	cmp    cx,0x4c
   10b29:	jne    0x10acd
   10b2b:	movzx  ecx,WORD PTR [eax+0xa]
   10b2f:	cmp    cx,0x6f
   10b33:	je     0x10b3b
   10b35:	cmp    cx,0x4f
   10b39:	jne    0x10acd
   10b3b:	movzx  ecx,WORD PTR [eax+0xc]
   10b3f:	cmp    cx,0x72
   10b43:	je     0x10b4b
   10b45:	cmp    cx,0x52
   10b49:	jne    0x10acd
   10b4b:	movzx  ecx,WORD PTR [eax+0xe]
   10b4f:	cmp    cx,dx
   10b52:	je     0x10b5d
   10b54:	cmp    cx,si
   10b57:	jne    0x10acd
   10b5d:	cmp    WORD PTR [eax+0x10],0x2e
   10b62:	jne    0x10acd
   10b68:	movzx  ecx,WORD PTR [eax+0x12]
   10b6c:	cmp    cx,dx
   10b6f:	je     0x10b7a
   10b71:	cmp    cx,si
   10b74:	jne    0x10acd
   10b7a:	movzx  ecx,WORD PTR [eax+0x14]
   10b7e:	cmp    cx,0x78
   10b82:	je     0x10b8e
   10b84:	cmp    cx,0x58
   10b88:	jne    0x10acd
   10b8e:	movzx  eax,WORD PTR [eax+0x16]
   10b92:	cmp    ax,dx
   10b95:	je     0x10ba0
   10b97:	cmp    ax,si
   10b9a:	jne    0x10acd
   10ba0:	mov    al,0x1
   10ba2:	pop    esi
   10ba3:	pop    ebp
   10ba4:	ret    0x4
   10ba7:	int3   
   10ba8:	int3   
   10ba9:	int3   
   10baa:	int3   
   10bab:	int3   
   10bac:	mov    edi,edi
   10bae:	push   ebp
   10baf:	mov    ebp,esp
   10bb1:	mov    ecx,DWORD PTR [ebp+0x8]
   10bb4:	mov    eax,ecx
   10bb6:	lea    edx,[eax+0x2]
   10bb9:	push   esi
   10bba:	mov    si,WORD PTR [eax]
   10bbd:	inc    eax
   10bbe:	inc    eax
   10bbf:	test   si,si
   10bc2:	jne    0x10bba
   10bc4:	sub    eax,edx
   10bc6:	sar    eax,1
   10bc8:	pop    esi
   10bc9:	cmp    eax,0xb
   10bcc:	jae    0x10bd5
   10bce:	xor    al,al
   10bd0:	jmp    0x10c91
   10bd5:	lea    eax,[ecx+eax*2-0x16]
   10bd9:	movzx  ecx,WORD PTR [eax]
   10bdc:	cmp    cx,0x66
   10be0:	je     0x10be8
   10be2:	cmp    cx,0x46
   10be6:	jne    0x10bce
   10be8:	movzx  ecx,WORD PTR [eax+0x2]
   10bec:	cmp    cx,0x69
   10bf0:	je     0x10bf8
   10bf2:	cmp    cx,0x49
   10bf6:	jne    0x10bce
   10bf8:	movzx  ecx,WORD PTR [eax+0x4]
   10bfc:	cmp    cx,0x72
   10c00:	je     0x10c08
   10c02:	cmp    cx,0x52
   10c06:	jne    0x10bce
   10c08:	movzx  ecx,WORD PTR [eax+0x6]
   10c0c:	cmp    cx,0x65
   10c10:	je     0x10c18
   10c12:	cmp    cx,0x45
   10c16:	jne    0x10bce
   10c18:	movzx  ecx,WORD PTR [eax+0x8]
   10c1c:	cmp    cx,0x66
   10c20:	je     0x10c28
   10c22:	cmp    cx,0x46
   10c26:	jne    0x10bce
   10c28:	movzx  ecx,WORD PTR [eax+0xa]
   10c2c:	cmp    cx,0x6f
   10c30:	je     0x10c38
   10c32:	cmp    cx,0x4f
   10c36:	jne    0x10bce
   10c38:	movzx  ecx,WORD PTR [eax+0xc]
   10c3c:	cmp    cx,0x78
   10c40:	je     0x10c48
   10c42:	cmp    cx,0x58
   10c46:	jne    0x10bce
   10c48:	cmp    WORD PTR [eax+0xe],0x2e
   10c4d:	jne    0x10bce
   10c53:	movzx  ecx,WORD PTR [eax+0x10]
   10c57:	cmp    cx,0x65
   10c5b:	je     0x10c67
   10c5d:	cmp    cx,0x45
   10c61:	jne    0x10bce
   10c67:	movzx  ecx,WORD PTR [eax+0x12]
   10c6b:	cmp    cx,0x78
   10c6f:	je     0x10c7b
   10c71:	cmp    cx,0x58
   10c75:	jne    0x10bce
   10c7b:	movzx  eax,WORD PTR [eax+0x14]
   10c7f:	cmp    ax,0x65
   10c83:	je     0x10c8f
   10c85:	cmp    ax,0x45
   10c89:	jne    0x10bce
   10c8f:	mov    al,0x1
   10c91:	pop    ebp
   10c92:	ret    0x4
   10c95:	int3   
   10c96:	int3   
   10c97:	int3   
   10c98:	int3   
   10c99:	int3   
   10c9a:	mov    edi,edi
   10c9c:	push   ebp
   10c9d:	mov    ebp,esp
   10c9f:	mov    ecx,DWORD PTR [ebp+0x8]
   10ca2:	mov    eax,ecx
   10ca4:	lea    edx,[eax+0x2]
   10ca7:	push   esi
   10ca8:	mov    si,WORD PTR [eax]
   10cab:	inc    eax
   10cac:	inc    eax
   10cad:	test   si,si
   10cb0:	jne    0x10ca8
   10cb2:	sub    eax,edx
   10cb4:	sar    eax,1
   10cb6:	pop    esi
   10cb7:	cmp    eax,0xa
   10cba:	jae    0x10cc3
   10cbc:	xor    al,al
   10cbe:	jmp    0x10d6b
   10cc3:	lea    eax,[ecx+eax*2-0x14]
   10cc7:	movzx  ecx,WORD PTR [eax]
   10cca:	cmp    cx,0x63
   10cce:	je     0x10cd6
   10cd0:	cmp    cx,0x43
   10cd4:	jne    0x10cbc
   10cd6:	movzx  ecx,WORD PTR [eax+0x2]
   10cda:	cmp    cx,0x68
   10cde:	je     0x10ce6
   10ce0:	cmp    cx,0x48
   10ce4:	jne    0x10cbc
   10ce6:	movzx  ecx,WORD PTR [eax+0x4]
   10cea:	cmp    cx,0x72
   10cee:	je     0x10cf6
   10cf0:	cmp    cx,0x52
   10cf4:	jne    0x10cbc
   10cf6:	movzx  ecx,WORD PTR [eax+0x6]
   10cfa:	cmp    cx,0x6f
   10cfe:	je     0x10d06
   10d00:	cmp    cx,0x4f
   10d04:	jne    0x10cbc
   10d06:	movzx  ecx,WORD PTR [eax+0x8]
   10d0a:	cmp    cx,0x6d
   10d0e:	je     0x10d16
   10d10:	cmp    cx,0x4d
   10d14:	jne    0x10cbc
   10d16:	movzx  ecx,WORD PTR [eax+0xa]
   10d1a:	cmp    cx,0x65
   10d1e:	je     0x10d26
   10d20:	cmp    cx,0x45
   10d24:	jne    0x10cbc
   10d26:	cmp    WORD PTR [eax+0xc],0x2e
   10d2b:	jne    0x10cbc
   10d2d:	movzx  ecx,WORD PTR [eax+0xe]
   10d31:	cmp    cx,0x65
   10d35:	je     0x10d41
   10d37:	cmp    cx,0x45
   10d3b:	jne    0x10cbc
   10d41:	movzx  ecx,WORD PTR [eax+0x10]
   10d45:	cmp    cx,0x78
   10d49:	je     0x10d55
   10d4b:	cmp    cx,0x58
   10d4f:	jne    0x10cbc
   10d55:	movzx  eax,WORD PTR [eax+0x12]
   10d59:	cmp    ax,0x65
   10d5d:	je     0x10d69
   10d5f:	cmp    ax,0x45
   10d63:	jne    0x10cbc
   10d69:	mov    al,0x1
   10d6b:	pop    ebp
   10d6c:	ret    0x4
   10d6f:	int3   
   10d70:	int3   
   10d71:	int3   
   10d72:	int3   
   10d73:	int3   
   10d74:	mov    edi,edi
   10d76:	push   ebp
   10d77:	mov    ebp,esp
   10d79:	mov    ecx,DWORD PTR [ebp+0x8]
   10d7c:	mov    eax,ecx
   10d7e:	lea    edx,[eax+0x2]
   10d81:	push   esi
   10d82:	mov    si,WORD PTR [eax]
   10d85:	inc    eax
   10d86:	inc    eax
   10d87:	test   si,si
   10d8a:	jne    0x10d82
   10d8c:	sub    eax,edx
   10d8e:	sar    eax,1
   10d90:	pop    esi
   10d91:	cmp    eax,0x9
   10d94:	jae    0x10d9d
   10d96:	xor    al,al
   10d98:	jmp    0x10e31
   10d9d:	lea    eax,[ecx+eax*2-0x12]
   10da1:	movzx  ecx,WORD PTR [eax]
   10da4:	cmp    cx,0x6d
   10da8:	je     0x10db0
   10daa:	cmp    cx,0x4d
   10dae:	jne    0x10d96
   10db0:	movzx  ecx,WORD PTR [eax+0x2]
   10db4:	cmp    cx,0x73
   10db8:	je     0x10dc0
   10dba:	cmp    cx,0x53
   10dbe:	jne    0x10d96
   10dc0:	movzx  ecx,WORD PTR [eax+0x4]
   10dc4:	cmp    cx,0x68
   10dc8:	je     0x10dd0
   10dca:	cmp    cx,0x48
   10dce:	jne    0x10d96
   10dd0:	movzx  ecx,WORD PTR [eax+0x6]
   10dd4:	cmp    cx,0x74
   10dd8:	je     0x10de0
   10dda:	cmp    cx,0x54
   10dde:	jne    0x10d96
   10de0:	movzx  ecx,WORD PTR [eax+0x8]
   10de4:	cmp    cx,0x61
   10de8:	je     0x10df0
   10dea:	cmp    cx,0x41
   10dee:	jne    0x10d96
   10df0:	cmp    WORD PTR [eax+0xa],0x2e
   10df5:	jne    0x10d96
   10df7:	movzx  ecx,WORD PTR [eax+0xc]
   10dfb:	cmp    cx,0x65
   10dff:	je     0x10e07
   10e01:	cmp    cx,0x45
   10e05:	jne    0x10d96
   10e07:	movzx  ecx,WORD PTR [eax+0xe]
   10e0b:	cmp    cx,0x58
   10e0f:	je     0x10e1b
   10e11:	cmp    cx,0x78
   10e15:	jne    0x10d96
   10e1b:	movzx  eax,WORD PTR [eax+0x10]
   10e1f:	cmp    ax,0x65
   10e23:	je     0x10e2f
   10e25:	cmp    ax,0x45
   10e29:	jne    0x10d96
   10e2f:	mov    al,0x1
   10e31:	pop    ebp
   10e32:	ret    0x4
   10e35:	int3   
   10e36:	int3   
   10e37:	int3   
   10e38:	int3   
   10e39:	int3   
   10e3a:	mov    edi,edi
   10e3c:	push   ebp
   10e3d:	mov    ebp,esp
   10e3f:	push   esi
   10e40:	mov    esi,DWORD PTR [ebp+0x8]
   10e43:	push   esi
   10e44:	call   0x10aac
   10e49:	test   al,al
   10e4b:	je     0x10e52
   10e4d:	xor    eax,eax
   10e4f:	inc    eax
   10e50:	jmp    0x10e7f
   10e52:	push   esi
   10e53:	call   0x10bac
   10e58:	test   al,al
   10e5a:	je     0x10e61
   10e5c:	push   0x2
   10e5e:	pop    eax
   10e5f:	jmp    0x10e7f
   10e61:	push   esi
   10e62:	call   0x10c9a
   10e67:	test   al,al
   10e69:	je     0x10e6f
   10e6b:	push   0x3
   10e6d:	jmp    0x10e5e
   10e6f:	push   esi
   10e70:	call   0x10d74
   10e75:	movzx  eax,al
   10e78:	neg    eax
   10e7a:	sbb    eax,eax
   10e7c:	and    eax,0x4
   10e7f:	pop    esi
   10e80:	pop    ebp
   10e81:	ret    0x4
   10e84:	int3   
   10e85:	int3   
   10e86:	int3   
   10e87:	int3   
   10e88:	int3   
   10e89:	int3   
   10e8a:	mov    edi,edi
   10e8c:	push   ebp
   10e8d:	mov    ebp,esp
   10e8f:	sub    esp,0x10
   10e92:	push   esi
   10e93:	push   edi
   10e94:	xor    eax,eax
   10e96:	mov    WORD PTR [ebp-0x8],ax
   10e9a:	lea    edi,[ebp-0x6]
   10e9d:	stos   DWORD PTR es:[edi],eax
   10e9e:	stos   WORD PTR es:[edi],ax
   10ea0:	mov    eax,DWORD PTR [ebp+0xc]
   10ea3:	mov    DWORD PTR [ebp-0x4],eax
   10ea6:	lea    ecx,[eax+0x2]
   10ea9:	mov    dx,WORD PTR [eax]
   10eac:	inc    eax
   10ead:	inc    eax
   10eae:	test   dx,dx
   10eb1:	jne    0x10ea9
   10eb3:	mov    esi,DWORD PTR [ebp+0x8]
   10eb6:	movzx  edx,WORD PTR [esi]
   10eb9:	sub    eax,ecx
   10ebb:	sar    eax,1
   10ebd:	lea    ecx,[eax+eax*1]
   10ec0:	mov    WORD PTR [ebp-0x8],cx
   10ec4:	mov    WORD PTR [ebp-0x6],cx
   10ec8:	cmp    dx,cx
   10ecb:	jb     0x10f0a
   10ecd:	xor    eax,eax
   10ecf:	lea    edi,[ebp-0xe]
   10ed2:	stos   DWORD PTR es:[edi],eax
   10ed3:	stos   WORD PTR es:[edi],ax
   10ed5:	mov    WORD PTR [ebp-0x10],cx
   10ed9:	mov    WORD PTR [ebp-0xe],cx
   10edd:	movzx  eax,dx
   10ee0:	movzx  ecx,cx
   10ee3:	sub    eax,ecx
   10ee5:	mov    ecx,DWORD PTR [esi+0x4]
   10ee8:	cdq    
   10ee9:	sub    eax,edx
   10eeb:	sar    eax,1
   10eed:	lea    eax,[ecx+eax*2]
   10ef0:	mov    DWORD PTR [ebp-0xc],eax
   10ef3:	push   0x1
   10ef5:	lea    eax,[ebp-0x8]
   10ef8:	push   eax
   10ef9:	lea    eax,[ebp-0x10]
   10efc:	push   eax
   10efd:	call   DWORD PTR ds:0x1f024
   10f03:	neg    eax
   10f05:	sbb    eax,eax
   10f07:	inc    eax
   10f08:	jmp    0x10f0c
   10f0a:	xor    al,al
   10f0c:	pop    edi
   10f0d:	pop    esi
   10f0e:	leave  
   10f0f:	ret    0x8
   10f12:	int3   
   10f13:	int3   
   10f14:	int3   
   10f15:	int3   
   10f16:	int3   
   10f17:	int3   
   10f18:	mov    edi,edi
   10f1a:	push   ebp
   10f1b:	mov    ebp,esp
   10f1d:	push   ebx
   10f1e:	xor    eax,eax
   10f20:	push   eax
   10f21:	push   eax
   10f22:	push   eax
   10f23:	push   eax
   10f24:	mov    ebx,0x7752c
   10f29:	push   ebx
   10f2a:	call   DWORD PTR ds:0x1f02c
   10f30:	test   eax,eax
   10f32:	jge    0x10f38
   10f34:	xor    al,al
   10f36:	jmp    0x10f5b
   10f38:	push   esi
   10f39:	mov    esi,DWORD PTR [ebp+0x8]
   10f3c:	push   edi
   10f3d:	imul   esi,esi,0x14
   10f40:	mov    edi,DWORD PTR [ebp+0xc]
   10f43:	push   0x5
   10f45:	pop    ecx
   10f46:	push   0x0
   10f48:	add    esi,0x77f7c
   10f4e:	push   ebx
   10f4f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   10f51:	call   DWORD PTR ds:0x1f028
   10f57:	pop    edi
   10f58:	mov    al,0x1
   10f5a:	pop    esi
   10f5b:	pop    ebx
   10f5c:	pop    ebp
   10f5d:	ret    0x8
   10f60:	int3   
   10f61:	int3   
   10f62:	int3   
   10f63:	int3   
   10f64:	int3   
   10f65:	int3   
   10f66:	mov    edi,edi
   10f68:	push   ebp
   10f69:	mov    ebp,esp
   10f6b:	push   ebx
   10f6c:	xor    eax,eax
   10f6e:	push   eax
   10f6f:	push   eax
   10f70:	push   eax
   10f71:	push   eax
   10f72:	mov    ebx,0x7752c
   10f77:	push   ebx
   10f78:	call   DWORD PTR ds:0x1f02c
   10f7e:	test   eax,eax
   10f80:	jl     0x10fa3
   10f82:	push   esi
   10f83:	mov    esi,DWORD PTR [ebp+0xc]
   10f86:	push   edi
   10f87:	mov    edi,DWORD PTR [ebp+0x8]
   10f8a:	imul   edi,edi,0x14
   10f8d:	push   0x5
   10f8f:	pop    ecx
   10f90:	push   0x0
   10f92:	add    edi,0x77f7c
   10f98:	push   ebx
   10f99:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   10f9b:	call   DWORD PTR ds:0x1f028
   10fa1:	pop    edi
   10fa2:	pop    esi
   10fa3:	pop    ebx
   10fa4:	pop    ebp
   10fa5:	ret    0x8
   10fa8:	int3   
   10fa9:	int3   
   10faa:	int3   
   10fab:	int3   
   10fac:	int3   
   10fad:	int3   
   10fae:	mov    edi,edi
   10fb0:	push   ebp
   10fb1:	mov    ebp,esp
   10fb3:	sub    esp,0x14
   10fb6:	and    DWORD PTR [ebp-0x14],0x0
   10fba:	push   edi
   10fbb:	xor    eax,eax
   10fbd:	lea    edi,[ebp-0x10]
   10fc0:	stos   DWORD PTR es:[edi],eax
   10fc1:	stos   DWORD PTR es:[edi],eax
   10fc2:	stos   DWORD PTR es:[edi],eax
   10fc3:	stos   DWORD PTR es:[edi],eax
   10fc4:	lea    eax,[ebp-0x14]
   10fc7:	push   eax
   10fc8:	push   DWORD PTR [ebp+0x8]
   10fcb:	call   0x10f66
   10fd0:	pop    edi
   10fd1:	leave  
   10fd2:	ret    0x4
   10fd5:	int3   
   10fd6:	int3   
   10fd7:	int3   
   10fd8:	int3   
   10fd9:	int3   
   10fda:	mov    edi,edi
   10fdc:	push   ebp
   10fdd:	mov    ebp,esp
   10fdf:	push   ebx
   10fe0:	xor    eax,eax
   10fe2:	push   eax
   10fe3:	push   eax
   10fe4:	push   eax
   10fe5:	push   eax
   10fe6:	mov    ebx,0x77eb8
   10feb:	push   ebx
   10fec:	call   DWORD PTR ds:0x1f02c
   10ff2:	test   eax,eax
   10ff4:	jl     0x11010
   10ff6:	push   esi
   10ff7:	mov    esi,DWORD PTR [ebp+0x8]
   10ffa:	push   edi
   10ffb:	push   0x40
   10ffd:	pop    ecx
   10ffe:	push   0x0
   11000:	mov    edi,0x77fa8
   11005:	push   ebx
   11006:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   11008:	call   DWORD PTR ds:0x1f028
   1100e:	pop    edi
   1100f:	pop    esi
   11010:	pop    ebx
   11011:	pop    ebp
   11012:	ret    0x4
   11015:	int3   
   11016:	int3   
   11017:	int3   
   11018:	int3   
   11019:	int3   
   1101a:	mov    edi,edi
   1101c:	push   ebp
   1101d:	mov    ebp,esp
   1101f:	push   ebx
   11020:	xor    eax,eax
   11022:	push   eax
   11023:	push   eax
   11024:	push   eax
   11025:	push   eax
   11026:	mov    ebx,0x77eb8
   1102b:	push   ebx
   1102c:	call   DWORD PTR ds:0x1f02c
   11032:	test   eax,eax
   11034:	jge    0x1103a
   11036:	xor    al,al
   11038:	jmp    0x11060
   1103a:	push   esi
   1103b:	push   edi
   1103c:	mov    edi,DWORD PTR [ebp+0x8]
   1103f:	push   0x40
   11041:	pop    ecx
   11042:	push   0x0
   11044:	mov    esi,0x77fa8
   11049:	push   ebx
   1104a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1104c:	call   DWORD PTR ds:0x1f028
   11052:	xor    eax,eax
   11054:	cmp    WORD PTR ds:0x77fa8,ax
   1105b:	pop    edi
   1105c:	setne  al
   1105f:	pop    esi
   11060:	pop    ebx
   11061:	pop    ebp
   11062:	ret    0x4
   11065:	int3   
   11066:	int3   
   11067:	int3   
   11068:	int3   
   11069:	int3   
   1106a:	mov    edi,edi
   1106c:	push   ebp
   1106d:	mov    ebp,esp
   1106f:	push   ebx
   11070:	mov    ebx,DWORD PTR [ebp+0x8]
   11073:	cmp    ebx,0x40
   11076:	ja     0x110a3
   11078:	push   esi
   11079:	push   edi
   1107a:	xor    edi,edi
   1107c:	push   edi
   1107d:	push   edi
   1107e:	push   edi
   1107f:	push   edi
   11080:	mov    esi,0x77ef4
   11085:	push   esi
   11086:	call   DWORD PTR ds:0x1f02c
   1108c:	test   eax,eax
   1108e:	jl     0x110a1
   11090:	push   edi
   11091:	lea    eax,[ebx*4+0x775b8]
   11098:	inc    DWORD PTR [eax]
   1109a:	push   esi
   1109b:	call   DWORD PTR ds:0x1f028
   110a1:	pop    edi
   110a2:	pop    esi
   110a3:	pop    ebx
   110a4:	pop    ebp
   110a5:	ret    0x4
   110a8:	int3   
   110a9:	int3   
   110aa:	int3   
   110ab:	int3   
   110ac:	int3   
   110ad:	int3   
   110ae:	mov    edi,edi
   110b0:	push   ebp
   110b1:	mov    ebp,esp
   110b3:	push   ebx
   110b4:	push   esi
   110b5:	push   edi
   110b6:	mov    edi,DWORD PTR [ebp+0x8]
   110b9:	cmp    edi,0x40
   110bc:	ja     0x110e7
   110be:	xor    ebx,ebx
   110c0:	push   ebx
   110c1:	push   ebx
   110c2:	push   ebx
   110c3:	push   ebx
   110c4:	mov    esi,0x77ef4
   110c9:	push   esi
   110ca:	call   DWORD PTR ds:0x1f02c
   110d0:	test   eax,eax
   110d2:	jl     0x110e7
   110d4:	mov    edi,DWORD PTR [edi*4+0x775b8]
   110db:	push   ebx
   110dc:	push   esi
   110dd:	call   DWORD PTR ds:0x1f028
   110e3:	mov    eax,edi
   110e5:	jmp    0x110e9
   110e7:	xor    eax,eax
   110e9:	pop    edi
   110ea:	pop    esi
   110eb:	pop    ebx
   110ec:	pop    ebp
   110ed:	ret    0x4
   110f0:	int3   
   110f1:	int3   
   110f2:	int3   
   110f3:	int3   
   110f4:	int3   
   110f5:	int3   
   110f6:	mov    edi,edi
   110f8:	push   ebp
   110f9:	mov    ebp,esp
   110fb:	push   esi
   110fc:	mov    esi,DWORD PTR [ebp+0x8]
   110ff:	push   edi
   11100:	push   DWORD PTR [esi]
   11102:	call   0x10a06
   11107:	push   DWORD PTR [esi]
   11109:	mov    edi,eax
   1110b:	push   esi
   1110c:	push   edi
   1110d:	call   0x1db58
   11112:	add    esp,0x10
   11115:	mov    eax,edi
   11117:	pop    edi
   11118:	pop    esi
   11119:	pop    ebp
   1111a:	ret    0x4
   1111d:	int3   
   1111e:	int3   
   1111f:	int3   
   11120:	int3   
   11121:	int3   
   11122:	mov    edi,edi
   11124:	push   esi
   11125:	mov    esi,ecx
   11127:	push   DWORD PTR [esi+0x8]
   1112a:	call   0x10a3a
   1112f:	push   DWORD PTR [esi]
   11131:	call   0x10a3a
   11136:	pop    ecx
   11137:	pop    ecx
   11138:	pop    esi
   11139:	ret    
   1113a:	int3   
   1113b:	int3   
   1113c:	int3   
   1113d:	int3   
   1113e:	int3   
   1113f:	int3   
   11140:	mov    edi,edi
   11142:	push   ebp
   11143:	mov    ebp,esp
   11145:	push   esi
   11146:	mov    esi,DWORD PTR [ebp+0xc]
   11149:	push   edi
   1114a:	mov    edi,ecx
   1114c:	cmp    esi,0xffffffff
   1114f:	jne    0x11160
   11151:	mov    esi,DWORD PTR [ebp+0x8]
   11154:	lea    ecx,[esi+0x1]
   11157:	mov    al,BYTE PTR [esi]
   11159:	inc    esi
   1115a:	test   al,al
   1115c:	jne    0x11157
   1115e:	sub    esi,ecx
   11160:	lea    eax,[esi+0x1]
   11163:	push   eax
   11164:	call   0x10a06
   11169:	pop    ecx
   1116a:	mov    DWORD PTR [edi],eax
   1116c:	test   eax,eax
   1116e:	jne    0x1117b
   11170:	push   0xc000009a
   11175:	call   DWORD PTR ds:0x1f018
   1117b:	mov    eax,DWORD PTR [edi]
   1117d:	push   esi
   1117e:	push   DWORD PTR [ebp+0x8]
   11181:	mov    BYTE PTR [esi+eax*1],0x0
   11185:	push   DWORD PTR [edi]
   11187:	call   0x1db58
   1118c:	add    esp,0xc
   1118f:	mov    DWORD PTR [edi+0x4],esi
   11192:	pop    edi
   11193:	pop    esi
   11194:	pop    ebp
   11195:	ret    0x8
   11198:	int3   
   11199:	int3   
   1119a:	int3   
   1119b:	int3   
   1119c:	int3   
   1119d:	int3   
   1119e:	mov    edi,edi
   111a0:	push   ebp
   111a1:	mov    ebp,esp
   111a3:	mov    eax,DWORD PTR [ebp+0x8]
   111a6:	mov    edx,DWORD PTR [ebp+0xc]
   111a9:	push   esi
   111aa:	xor    esi,esi
   111ac:	jmp    0x111d1
   111ae:	mov    ecx,eax
   111b0:	and    ecx,0x1
   111b3:	or     ecx,esi
   111b5:	push   esi
   111b6:	jne    0x111c3
   111b8:	push   0x2
   111ba:	push   edx
   111bb:	push   eax
   111bc:	call   0x1db34
   111c1:	jmp    0x111d1
   111c3:	push   0x3
   111c5:	push   edx
   111c6:	push   eax
   111c7:	call   0x1db28
   111cc:	add    eax,0x1
   111cf:	adc    edx,esi
   111d1:	cmp    eax,0x4
   111d4:	jne    0x111ae
   111d6:	cmp    edx,esi
   111d8:	jne    0x111ae
   111da:	pop    esi
   111db:	pop    ebp
   111dc:	ret    0x8
   111df:	int3   
   111e0:	int3   
   111e1:	int3   
   111e2:	int3   
   111e3:	int3   
   111e4:	mov    edi,edi
   111e6:	push   ebp
   111e7:	mov    ebp,esp
   111e9:	push   esi
   111ea:	push   edi
   111eb:	mov    edi,DWORD PTR [ebp+0xc]
   111ee:	mov    esi,ecx
   111f0:	cmp    edi,0xffffffff
   111f3:	jne    0x111ff
   111f5:	push   DWORD PTR [ebp+0x8]
   111f8:	call   0x10960
   111fd:	mov    edi,eax
   111ff:	xor    ecx,ecx
   11201:	push   0x2
   11203:	pop    edx
   11204:	lea    eax,[edi+0x1]
   11207:	mul    edx
   11209:	seto   cl
   1120c:	neg    ecx
   1120e:	or     ecx,eax
   11210:	push   ecx
   11211:	call   0x10a06
   11216:	pop    ecx
   11217:	mov    DWORD PTR [esi],eax
   11219:	test   eax,eax
   1121b:	jne    0x11228
   1121d:	push   0xc000009a
   11222:	call   DWORD PTR ds:0x1f018
   11228:	mov    ecx,DWORD PTR [esi]
   1122a:	lea    eax,[edi+edi*1]
   1122d:	push   eax
   1122e:	push   DWORD PTR [ebp+0x8]
   11231:	xor    edx,edx
   11233:	mov    WORD PTR [eax+ecx*1],dx
   11237:	push   DWORD PTR [esi]
   11239:	call   0x1db58
   1123e:	add    esp,0xc
   11241:	mov    DWORD PTR [esi+0x4],edi
   11244:	pop    edi
   11245:	pop    esi
   11246:	pop    ebp
   11247:	ret    0x8
   1124a:	int3   
   1124b:	int3   
   1124c:	int3   
   1124d:	int3   
   1124e:	int3   
   1124f:	int3   
   11250:	mov    edi,edi
   11252:	push   ebp
   11253:	mov    ebp,esp
   11255:	mov    eax,DWORD PTR [ebp+0x8]
   11258:	mov    edx,DWORD PTR ds:0x788b0
   1125e:	jmp    0x11262
   11260:	mov    eax,ecx
   11262:	mov    ecx,DWORD PTR [eax+0x8]
   11265:	cmp    ecx,edx
   11267:	jne    0x11260
   11269:	pop    ebp
   1126a:	ret    0x4
   1126d:	int3   
   1126e:	int3   
   1126f:	int3   
   11270:	int3   
   11271:	int3   
   11272:	mov    edi,edi
   11274:	push   ebp
   11275:	mov    ebp,esp
   11277:	mov    eax,DWORD PTR [ebp+0x8]
   1127a:	mov    edx,DWORD PTR ds:0x788b0
   11280:	jmp    0x11284
   11282:	mov    eax,ecx
   11284:	mov    ecx,DWORD PTR [eax]
   11286:	cmp    ecx,edx
   11288:	jne    0x11282
   1128a:	pop    ebp
   1128b:	ret    0x4
   1128e:	int3   
   1128f:	int3   
   11290:	int3   
   11291:	int3   
   11292:	int3   
   11293:	int3   
   11294:	mov    edi,edi
   11296:	push   ebp
   11297:	mov    ebp,esp
   11299:	mov    eax,DWORD PTR [ebp+0x8]
   1129c:	mov    edx,DWORD PTR ds:0x788b4
   112a2:	jmp    0x112a6
   112a4:	mov    eax,ecx
   112a6:	mov    ecx,DWORD PTR [eax+0x8]
   112a9:	cmp    ecx,edx
   112ab:	jne    0x112a4
   112ad:	pop    ebp
   112ae:	ret    0x4
   112b1:	int3   
   112b2:	int3   
   112b3:	int3   
   112b4:	int3   
   112b5:	int3   
   112b6:	mov    edi,edi
   112b8:	push   ebp
   112b9:	mov    ebp,esp
   112bb:	mov    eax,DWORD PTR [ebp+0x8]
   112be:	mov    edx,DWORD PTR ds:0x788b4
   112c4:	jmp    0x112c8
   112c6:	mov    eax,ecx
   112c8:	mov    ecx,DWORD PTR [eax]
   112ca:	cmp    ecx,edx
   112cc:	jne    0x112c6
   112ce:	pop    ebp
   112cf:	ret    0x4
   112d2:	int3   
   112d3:	int3   
   112d4:	int3   
   112d5:	int3   
   112d6:	int3   
   112d7:	int3   
   112d8:	mov    edi,edi
   112da:	push   ebp
   112db:	mov    ebp,esp
   112dd:	mov    eax,DWORD PTR [ebp+0x8]
   112e0:	mov    edx,DWORD PTR ds:0x788b8
   112e6:	jmp    0x112ea
   112e8:	mov    eax,ecx
   112ea:	mov    ecx,DWORD PTR [eax+0x8]
   112ed:	cmp    ecx,edx
   112ef:	jne    0x112e8
   112f1:	pop    ebp
   112f2:	ret    0x4
   112f5:	int3   
   112f6:	int3   
   112f7:	int3   
   112f8:	int3   
   112f9:	int3   
   112fa:	mov    edi,edi
   112fc:	push   ebp
   112fd:	mov    ebp,esp
   112ff:	mov    eax,DWORD PTR [ebp+0x8]
   11302:	mov    edx,DWORD PTR ds:0x788b8
   11308:	jmp    0x1130c
   1130a:	mov    eax,ecx
   1130c:	mov    ecx,DWORD PTR [eax]
   1130e:	cmp    ecx,edx
   11310:	jne    0x1130a
   11312:	pop    ebp
   11313:	ret    0x4
   11316:	int3   
   11317:	int3   
   11318:	int3   
   11319:	int3   
   1131a:	int3   
   1131b:	int3   
   1131c:	mov    edi,edi
   1131e:	push   esi
   1131f:	mov    esi,ecx
   11321:	mov    ecx,DWORD PTR [esi]
   11323:	cmp    DWORD PTR [ecx+0x14],0x0
   11327:	jne    0x11336
   11329:	mov    eax,DWORD PTR [ecx+0x4]
   1132c:	cmp    DWORD PTR [eax+0x4],ecx
   1132f:	jne    0x11336
   11331:	mov    eax,DWORD PTR [ecx+0x8]
   11334:	jmp    0x11353
   11336:	mov    eax,DWORD PTR [ecx]
   11338:	cmp    eax,DWORD PTR ds:0x788b0
   1133e:	je     0x1134c
   11340:	push   eax
   11341:	call   0x11250
   11346:	jmp    0x11353
   11348:	mov    DWORD PTR [esi],eax
   1134a:	mov    ecx,eax
   1134c:	mov    eax,DWORD PTR [ecx+0x4]
   1134f:	cmp    ecx,DWORD PTR [eax]
   11351:	je     0x11348
   11353:	mov    DWORD PTR [esi],eax
   11355:	pop    esi
   11356:	ret    
   11357:	int3   
   11358:	int3   
   11359:	int3   
   1135a:	int3   
   1135b:	int3   
   1135c:	mov    edi,edi
   1135e:	push   esi
   1135f:	mov    esi,ecx
   11361:	mov    ecx,DWORD PTR [esi]
   11363:	mov    eax,DWORD PTR [ecx+0x8]
   11366:	cmp    eax,DWORD PTR ds:0x788b0
   1136c:	je     0x1137a
   1136e:	push   eax
   1136f:	call   0x11272
   11374:	jmp    0x11389
   11376:	mov    DWORD PTR [esi],eax
   11378:	mov    ecx,eax
   1137a:	mov    eax,DWORD PTR [ecx+0x4]
   1137d:	cmp    ecx,DWORD PTR [eax+0x8]
   11380:	je     0x11376
   11382:	mov    ecx,DWORD PTR [esi]
   11384:	cmp    DWORD PTR [ecx+0x8],eax
   11387:	je     0x1138b
   11389:	mov    DWORD PTR [esi],eax
   1138b:	pop    esi
   1138c:	ret    
   1138d:	int3   
   1138e:	int3   
   1138f:	int3   
   11390:	int3   
   11391:	int3   
   11392:	mov    edi,edi
   11394:	push   ebp
   11395:	mov    ebp,esp
   11397:	mov    edx,DWORD PTR [ebp+0x8]
   1139a:	mov    eax,DWORD PTR [edx+0x8]
   1139d:	push   esi
   1139e:	mov    esi,DWORD PTR [eax]
   113a0:	mov    DWORD PTR [edx+0x8],esi
   113a3:	mov    esi,DWORD PTR [eax]
   113a5:	cmp    esi,DWORD PTR ds:0x788bc
   113ab:	je     0x113b0
   113ad:	mov    DWORD PTR [esi+0x4],edx
   113b0:	mov    esi,DWORD PTR [edx+0x4]
   113b3:	mov    DWORD PTR [eax+0x4],esi
   113b6:	mov    ecx,DWORD PTR [ecx+0x4]
   113b9:	pop    esi
   113ba:	cmp    edx,DWORD PTR [ecx+0x4]
   113bd:	jne    0x113c4
   113bf:	mov    DWORD PTR [ecx+0x4],eax
   113c2:	jmp    0x113d2
   113c4:	mov    ecx,DWORD PTR [edx+0x4]
   113c7:	cmp    edx,DWORD PTR [ecx]
   113c9:	jne    0x113cf
   113cb:	mov    DWORD PTR [ecx],eax
   113cd:	jmp    0x113d2
   113cf:	mov    DWORD PTR [ecx+0x8],eax
   113d2:	mov    DWORD PTR [eax],edx
   113d4:	mov    DWORD PTR [edx+0x4],eax
   113d7:	pop    ebp
   113d8:	ret    0x4
   113db:	int3   
   113dc:	int3   
   113dd:	int3   
   113de:	int3   
   113df:	int3   
   113e0:	mov    edi,edi
   113e2:	push   ebp
   113e3:	mov    ebp,esp
   113e5:	mov    eax,DWORD PTR [ebp+0x8]
   113e8:	mov    edx,DWORD PTR ds:0x788bc
   113ee:	jmp    0x113f2
   113f0:	mov    eax,ecx
   113f2:	mov    ecx,DWORD PTR [eax+0x8]
   113f5:	cmp    ecx,edx
   113f7:	jne    0x113f0
   113f9:	pop    ebp
   113fa:	ret    0x4
   113fd:	int3   
   113fe:	int3   
   113ff:	int3   
   11400:	int3   
   11401:	int3   
   11402:	mov    edi,edi
   11404:	push   ebp
   11405:	mov    ebp,esp
   11407:	mov    edx,DWORD PTR [ebp+0x8]
   1140a:	mov    eax,DWORD PTR [edx]
   1140c:	push   esi
   1140d:	mov    esi,DWORD PTR [eax+0x8]
   11410:	mov    DWORD PTR [edx],esi
   11412:	mov    esi,DWORD PTR [eax+0x8]
   11415:	cmp    esi,DWORD PTR ds:0x788bc
   1141b:	je     0x11420
   1141d:	mov    DWORD PTR [esi+0x4],edx
   11420:	mov    esi,DWORD PTR [edx+0x4]
   11423:	mov    DWORD PTR [eax+0x4],esi
   11426:	mov    ecx,DWORD PTR [ecx+0x4]
   11429:	pop    esi
   1142a:	cmp    edx,DWORD PTR [ecx+0x4]
   1142d:	jne    0x11434
   1142f:	mov    DWORD PTR [ecx+0x4],eax
   11432:	jmp    0x11443
   11434:	mov    ecx,DWORD PTR [edx+0x4]
   11437:	cmp    edx,DWORD PTR [ecx+0x8]
   1143a:	jne    0x11441
   1143c:	mov    DWORD PTR [ecx+0x8],eax
   1143f:	jmp    0x11443
   11441:	mov    DWORD PTR [ecx],eax
   11443:	mov    DWORD PTR [eax+0x8],edx
   11446:	mov    DWORD PTR [edx+0x4],eax
   11449:	pop    ebp
   1144a:	ret    0x4
   1144d:	int3   
   1144e:	int3   
   1144f:	int3   
   11450:	int3   
   11451:	int3   
   11452:	mov    edi,edi
   11454:	push   esi
   11455:	mov    esi,ecx
   11457:	mov    ecx,DWORD PTR [esi]
   11459:	cmp    DWORD PTR [ecx+0x58],0x0
   1145d:	jne    0x1146c
   1145f:	mov    eax,DWORD PTR [ecx+0x4]
   11462:	cmp    DWORD PTR [eax+0x4],ecx
   11465:	jne    0x1146c
   11467:	mov    eax,DWORD PTR [ecx+0x8]
   1146a:	jmp    0x11489
   1146c:	mov    eax,DWORD PTR [ecx]
   1146e:	cmp    eax,DWORD PTR ds:0x788bc
   11474:	je     0x11482
   11476:	push   eax
   11477:	call   0x113e0
   1147c:	jmp    0x11489
   1147e:	mov    DWORD PTR [esi],eax
   11480:	mov    ecx,eax
   11482:	mov    eax,DWORD PTR [ecx+0x4]
   11485:	cmp    ecx,DWORD PTR [eax]
   11487:	je     0x1147e
   11489:	mov    DWORD PTR [esi],eax
   1148b:	pop    esi
   1148c:	ret    
   1148d:	int3   
   1148e:	int3   
   1148f:	int3   
   11490:	int3   
   11491:	int3   
   11492:	mov    edi,edi
   11494:	push   ebp
   11495:	mov    ebp,esp
   11497:	mov    eax,DWORD PTR [ebp+0x8]
   1149a:	mov    edx,DWORD PTR ds:0x788c0
   114a0:	jmp    0x114a4
   114a2:	mov    eax,ecx
   114a4:	mov    ecx,DWORD PTR [eax+0x8]
   114a7:	cmp    ecx,edx
   114a9:	jne    0x114a2
   114ab:	pop    ebp
   114ac:	ret    0x4
   114af:	int3   
   114b0:	int3   
   114b1:	int3   
   114b2:	int3   
   114b3:	int3   
   114b4:	mov    edi,edi
   114b6:	push   ebp
   114b7:	mov    ebp,esp
   114b9:	mov    eax,DWORD PTR [ebp+0x8]
   114bc:	mov    edx,DWORD PTR ds:0x788c0
   114c2:	jmp    0x114c6
   114c4:	mov    eax,ecx
   114c6:	mov    ecx,DWORD PTR [eax]
   114c8:	cmp    ecx,edx
   114ca:	jne    0x114c4
   114cc:	pop    ebp
   114cd:	ret    0x4
   114d0:	int3   
   114d1:	int3   
   114d2:	int3   
   114d3:	int3   
   114d4:	int3   
   114d5:	int3   
   114d6:	mov    edi,edi
   114d8:	push   esi
   114d9:	mov    esi,ecx
   114db:	mov    ecx,DWORD PTR [esi]
   114dd:	cmp    DWORD PTR [ecx+0x1c],0x0
   114e1:	jne    0x114f0
   114e3:	mov    eax,DWORD PTR [ecx+0x4]
   114e6:	cmp    DWORD PTR [eax+0x4],ecx
   114e9:	jne    0x114f0
   114eb:	mov    eax,DWORD PTR [ecx+0x8]
   114ee:	jmp    0x1150d
   114f0:	mov    eax,DWORD PTR [ecx]
   114f2:	cmp    eax,DWORD PTR ds:0x788c0
   114f8:	je     0x11506
   114fa:	push   eax
   114fb:	call   0x11492
   11500:	jmp    0x1150d
   11502:	mov    DWORD PTR [esi],eax
   11504:	mov    ecx,eax
   11506:	mov    eax,DWORD PTR [ecx+0x4]
   11509:	cmp    ecx,DWORD PTR [eax]
   1150b:	je     0x11502
   1150d:	mov    DWORD PTR [esi],eax
   1150f:	pop    esi
   11510:	ret    
   11511:	int3   
   11512:	int3   
   11513:	int3   
   11514:	int3   
   11515:	int3   
   11516:	mov    edi,edi
   11518:	push   ebp
   11519:	mov    ebp,esp
   1151b:	mov    eax,DWORD PTR [ebp+0x8]
   1151e:	mov    edx,DWORD PTR ds:0x788c4
   11524:	jmp    0x11528
   11526:	mov    eax,ecx
   11528:	mov    ecx,DWORD PTR [eax+0x8]
   1152b:	cmp    ecx,edx
   1152d:	jne    0x11526
   1152f:	pop    ebp
   11530:	ret    0x4
   11533:	int3   
   11534:	int3   
   11535:	int3   
   11536:	int3   
   11537:	int3   
   11538:	mov    edi,edi
   1153a:	push   ebp
   1153b:	mov    ebp,esp
   1153d:	mov    eax,DWORD PTR [ebp+0x8]
   11540:	mov    edx,DWORD PTR ds:0x788c4
   11546:	jmp    0x1154a
   11548:	mov    eax,ecx
   1154a:	mov    ecx,DWORD PTR [eax]
   1154c:	cmp    ecx,edx
   1154e:	jne    0x11548
   11550:	pop    ebp
   11551:	ret    0x4
   11554:	int3   
   11555:	int3   
   11556:	int3   
   11557:	int3   
   11558:	int3   
   11559:	int3   
   1155a:	mov    edi,edi
   1155c:	push   esi
   1155d:	mov    esi,ecx
   1155f:	mov    ecx,DWORD PTR [esi]
   11561:	cmp    DWORD PTR [ecx+0x14],0x0
   11565:	jne    0x11574
   11567:	mov    eax,DWORD PTR [ecx+0x4]
   1156a:	cmp    DWORD PTR [eax+0x4],ecx
   1156d:	jne    0x11574
   1156f:	mov    eax,DWORD PTR [ecx+0x8]
   11572:	jmp    0x11591
   11574:	mov    eax,DWORD PTR [ecx]
   11576:	cmp    eax,DWORD PTR ds:0x788c4
   1157c:	je     0x1158a
   1157e:	push   eax
   1157f:	call   0x11516
   11584:	jmp    0x11591
   11586:	mov    DWORD PTR [esi],eax
   11588:	mov    ecx,eax
   1158a:	mov    eax,DWORD PTR [ecx+0x4]
   1158d:	cmp    ecx,DWORD PTR [eax]
   1158f:	je     0x11586
   11591:	mov    DWORD PTR [esi],eax
   11593:	pop    esi
   11594:	ret    
   11595:	int3   
   11596:	int3   
   11597:	int3   
   11598:	int3   
   11599:	int3   
   1159a:	mov    edi,edi
   1159c:	push   esi
   1159d:	mov    esi,ecx
   1159f:	mov    ecx,DWORD PTR [esi]
   115a1:	cmp    DWORD PTR [ecx+0x60],0x0
   115a5:	jne    0x115b4
   115a7:	mov    eax,DWORD PTR [ecx+0x4]
   115aa:	cmp    DWORD PTR [eax+0x4],ecx
   115ad:	jne    0x115b4
   115af:	mov    eax,DWORD PTR [ecx+0x8]
   115b2:	jmp    0x115d1
   115b4:	mov    eax,DWORD PTR [ecx]
   115b6:	cmp    eax,DWORD PTR ds:0x788b8
   115bc:	je     0x115ca
   115be:	push   eax
   115bf:	call   0x112d8
   115c4:	jmp    0x115d1
   115c6:	mov    DWORD PTR [esi],eax
   115c8:	mov    ecx,eax
   115ca:	mov    eax,DWORD PTR [ecx+0x4]
   115cd:	cmp    ecx,DWORD PTR [eax]
   115cf:	je     0x115c6
   115d1:	mov    DWORD PTR [esi],eax
   115d3:	pop    esi
   115d4:	ret    
   115d5:	int3   
   115d6:	int3   
   115d7:	int3   
   115d8:	int3   
   115d9:	int3   
   115da:	mov    edi,edi
   115dc:	push   esi
   115dd:	mov    esi,ecx
   115df:	mov    ecx,DWORD PTR [esi]
   115e1:	mov    eax,DWORD PTR [ecx+0x8]
   115e4:	cmp    eax,DWORD PTR ds:0x788c0
   115ea:	je     0x115f8
   115ec:	push   eax
   115ed:	call   0x114b4
   115f2:	jmp    0x11607
   115f4:	mov    DWORD PTR [esi],eax
   115f6:	mov    ecx,eax
   115f8:	mov    eax,DWORD PTR [ecx+0x4]
   115fb:	cmp    ecx,DWORD PTR [eax+0x8]
   115fe:	je     0x115f4
   11600:	mov    ecx,DWORD PTR [esi]
   11602:	cmp    DWORD PTR [ecx+0x8],eax
   11605:	je     0x11609
   11607:	mov    DWORD PTR [esi],eax
   11609:	pop    esi
   1160a:	ret    
   1160b:	int3   
   1160c:	int3   
   1160d:	int3   
   1160e:	int3   
   1160f:	int3   
   11610:	mov    edi,edi
   11612:	push   esi
   11613:	mov    esi,ecx
   11615:	mov    ecx,DWORD PTR [esi]
   11617:	mov    eax,DWORD PTR [ecx+0x8]
   1161a:	cmp    eax,DWORD PTR ds:0x788c4
   11620:	je     0x1162e
   11622:	push   eax
   11623:	call   0x11538
   11628:	jmp    0x1163d
   1162a:	mov    DWORD PTR [esi],eax
   1162c:	mov    ecx,eax
   1162e:	mov    eax,DWORD PTR [ecx+0x4]
   11631:	cmp    ecx,DWORD PTR [eax+0x8]
   11634:	je     0x1162a
   11636:	mov    ecx,DWORD PTR [esi]
   11638:	cmp    DWORD PTR [ecx+0x8],eax
   1163b:	je     0x1163f
   1163d:	mov    DWORD PTR [esi],eax
   1163f:	pop    esi
   11640:	ret    
   11641:	int3   
   11642:	int3   
   11643:	int3   
   11644:	int3   
   11645:	int3   
   11646:	mov    edi,edi
   11648:	push   ebp
   11649:	mov    ebp,esp
   1164b:	mov    eax,DWORD PTR [ebp+0x8]
   1164e:	mov    edx,DWORD PTR ds:0x788cc
   11654:	jmp    0x11658
   11656:	mov    eax,ecx
   11658:	mov    ecx,DWORD PTR [eax+0x8]
   1165b:	cmp    ecx,edx
   1165d:	jne    0x11656
   1165f:	pop    ebp
   11660:	ret    0x4
   11663:	int3   
   11664:	int3   
   11665:	int3   
   11666:	int3   
   11667:	int3   
   11668:	mov    edi,edi
   1166a:	push   ebp
   1166b:	mov    ebp,esp
   1166d:	push   ecx
   1166e:	push   ecx
   1166f:	mov    eax,DWORD PTR [ebp+0x8]
   11672:	mov    DWORD PTR [ebp-0x4],eax
   11675:	lea    ecx,[eax+0x2]
   11678:	mov    dx,WORD PTR [eax]
   1167b:	inc    eax
   1167c:	inc    eax
   1167d:	test   dx,dx
   11680:	jne    0x11678
   11682:	sub    eax,ecx
   11684:	sar    eax,1
   11686:	mov    WORD PTR [ebp-0x8],ax
   1168a:	mov    eax,DWORD PTR [ebp-0x8]
   1168d:	add    eax,eax
   1168f:	mov    WORD PTR [ebp-0x6],ax
   11693:	mov    WORD PTR [ebp-0x8],ax
   11697:	lea    eax,[ebp-0x8]
   1169a:	push   eax
   1169b:	call   DWORD PTR ds:0x1f038
   116a1:	leave  
   116a2:	ret    0x4
   116a5:	int3   
   116a6:	int3   
   116a7:	int3   
   116a8:	int3   
   116a9:	int3   
   116aa:	mov    edi,edi
   116ac:	push   ebp
   116ad:	mov    ebp,esp
   116af:	cmp    DWORD PTR [ebp+0x8],0x0
   116b3:	jge    0x116b9
   116b5:	and    DWORD PTR [ebp+0x8],0x0
   116b9:	push   DWORD PTR [ebp+0x8]
   116bc:	call   0x10a06
   116c1:	pop    ecx
   116c2:	pop    ebp
   116c3:	ret    0x8
   116c6:	int3   
   116c7:	int3   
   116c8:	int3   
   116c9:	int3   
   116ca:	int3   
   116cb:	int3   
   116cc:	mov    edi,edi
   116ce:	push   ebp
   116cf:	mov    ebp,esp
   116d1:	mov    eax,DWORD PTR [ebp+0x8]
   116d4:	test   eax,eax
   116d6:	je     0x116e5
   116d8:	mov    ecx,DWORD PTR [ebp+0xc]
   116db:	mov    edx,DWORD PTR [ecx]
   116dd:	mov    DWORD PTR [eax],edx
   116df:	mov    ecx,DWORD PTR [ecx+0x4]
   116e2:	mov    DWORD PTR [eax+0x4],ecx
   116e5:	pop    ebp
   116e6:	ret    0x8
   116e9:	int3   
   116ea:	int3   
   116eb:	int3   
   116ec:	int3   
   116ed:	int3   
   116ee:	mov    edi,edi
   116f0:	push   ebp
   116f1:	mov    ebp,esp
   116f3:	push   esi
   116f4:	mov    esi,ecx
   116f6:	call   0x11122
   116fb:	test   BYTE PTR [ebp+0x8],0x1
   116ff:	je     0x11708
   11701:	push   esi
   11702:	call   0x10a3a
   11707:	pop    ecx
   11708:	mov    eax,esi
   1170a:	pop    esi
   1170b:	pop    ebp
   1170c:	ret    0x4
   1170f:	int3   
   11710:	int3   
   11711:	int3   
   11712:	int3   
   11713:	int3   
   11714:	test   BYTE PTR ds:0x788d4,0x1
   1171b:	jne    0x11733
   1171d:	or     DWORD PTR ds:0x788d4,0x1
   11724:	push   0x1dfcc
   11729:	call   0x11668
   1172e:	mov    ds:0x788d0,eax
   11733:	mov    eax,ds:0x788d0
   11738:	ret    
   11739:	int3   
   1173a:	int3   
   1173b:	int3   
   1173c:	int3   
   1173d:	int3   
   1173e:	test   BYTE PTR ds:0x788dc,0x1
   11745:	jne    0x1175d
   11747:	or     DWORD PTR ds:0x788dc,0x1
   1174e:	push   0x1dfe8
   11753:	call   0x11668
   11758:	mov    ds:0x788d8,eax
   1175d:	mov    eax,ds:0x788d8
   11762:	ret    
   11763:	int3   
   11764:	int3   
   11765:	int3   
   11766:	int3   
   11767:	int3   
   11768:	test   BYTE PTR ds:0x788e4,0x1
   1176f:	jne    0x11787
   11771:	or     DWORD PTR ds:0x788e4,0x1
   11778:	push   0x1e020
   1177d:	call   0x11668
   11782:	mov    ds:0x788e0,eax
   11787:	mov    eax,ds:0x788e0
   1178c:	ret    
   1178d:	int3   
   1178e:	int3   
   1178f:	int3   
   11790:	int3   
   11791:	int3   
   11792:	test   BYTE PTR ds:0x788ec,0x1
   11799:	jne    0x117b1
   1179b:	or     DWORD PTR ds:0x788ec,0x1
   117a2:	push   0x1e042
   117a7:	call   0x11668
   117ac:	mov    ds:0x788e8,eax
   117b1:	mov    eax,ds:0x788e8
   117b6:	ret    
   117b7:	int3   
   117b8:	int3   
   117b9:	int3   
   117ba:	int3   
   117bb:	int3   
   117bc:	test   BYTE PTR ds:0x788f4,0x1
   117c3:	jne    0x117db
   117c5:	or     DWORD PTR ds:0x788f4,0x1
   117cc:	push   0x1e082
   117d1:	call   0x11668
   117d6:	mov    ds:0x788f0,eax
   117db:	mov    eax,ds:0x788f0
   117e0:	ret    
   117e1:	int3   
   117e2:	int3   
   117e3:	int3   
   117e4:	int3   
   117e5:	int3   
   117e6:	test   BYTE PTR ds:0x788fc,0x1
   117ed:	jne    0x11805
   117ef:	or     DWORD PTR ds:0x788fc,0x1
   117f6:	push   0x1e098
   117fb:	call   0x11668
   11800:	mov    ds:0x788f8,eax
   11805:	mov    eax,ds:0x788f8
   1180a:	ret    
   1180b:	int3   
   1180c:	int3   
   1180d:	int3   
   1180e:	int3   
   1180f:	int3   
   11810:	test   BYTE PTR ds:0x78904,0x1
   11817:	jne    0x1182f
   11819:	or     DWORD PTR ds:0x78904,0x1
   11820:	push   0x1e0cc
   11825:	call   0x11668
   1182a:	mov    ds:0x78900,eax
   1182f:	mov    eax,ds:0x78900
   11834:	ret    
   11835:	int3   
   11836:	int3   
   11837:	int3   
   11838:	int3   
   11839:	int3   
   1183a:	test   BYTE PTR ds:0x7890c,0x1
   11841:	jne    0x11859
   11843:	or     DWORD PTR ds:0x7890c,0x1
   1184a:	push   0x1e0fe
   1184f:	call   0x11668
   11854:	mov    ds:0x78908,eax
   11859:	mov    eax,ds:0x78908
   1185e:	ret    
   1185f:	int3   
   11860:	int3   
   11861:	int3   
   11862:	int3   
   11863:	int3   
   11864:	test   BYTE PTR ds:0x78914,0x1
   1186b:	jne    0x11883
   1186d:	or     DWORD PTR ds:0x78914,0x1
   11874:	push   0x1e112
   11879:	call   0x11668
   1187e:	mov    ds:0x78910,eax
   11883:	mov    eax,ds:0x78910
   11888:	ret    
   11889:	int3   
   1188a:	int3   
   1188b:	int3   
   1188c:	int3   
   1188d:	int3   
   1188e:	test   BYTE PTR ds:0x7891c,0x1
   11895:	jne    0x118ad
   11897:	or     DWORD PTR ds:0x7891c,0x1
   1189e:	push   0x1e12a
   118a3:	call   0x11668
   118a8:	mov    ds:0x78918,eax
   118ad:	mov    eax,ds:0x78918
   118b2:	ret    
   118b3:	int3   
   118b4:	int3   
   118b5:	int3   
   118b6:	int3   
   118b7:	int3   
   118b8:	test   BYTE PTR ds:0x78924,0x1
   118bf:	jne    0x118d7
   118c1:	or     DWORD PTR ds:0x78924,0x1
   118c8:	push   0x1e146
   118cd:	call   0x11668
   118d2:	mov    ds:0x78920,eax
   118d7:	mov    eax,ds:0x78920
   118dc:	ret    
   118dd:	int3   
   118de:	int3   
   118df:	int3   
   118e0:	int3   
   118e1:	int3   
   118e2:	test   BYTE PTR ds:0x7892c,0x1
   118e9:	jne    0x11901
   118eb:	or     DWORD PTR ds:0x7892c,0x1
   118f2:	push   0x1e180
   118f7:	call   0x11668
   118fc:	mov    ds:0x78928,eax
   11901:	mov    eax,ds:0x78928
   11906:	ret    
   11907:	int3   
   11908:	int3   
   11909:	int3   
   1190a:	int3   
   1190b:	int3   
   1190c:	test   BYTE PTR ds:0x78934,0x1
   11913:	jne    0x1192b
   11915:	or     DWORD PTR ds:0x78934,0x1
   1191c:	push   0x1e19a
   11921:	call   0x11668
   11926:	mov    ds:0x78930,eax
   1192b:	mov    eax,ds:0x78930
   11930:	ret    
   11931:	int3   
   11932:	int3   
   11933:	int3   
   11934:	int3   
   11935:	int3   
   11936:	test   BYTE PTR ds:0x7893c,0x1
   1193d:	jne    0x11955
   1193f:	or     DWORD PTR ds:0x7893c,0x1
   11946:	push   0x1e1bc
   1194b:	call   0x11668
   11950:	mov    ds:0x78938,eax
   11955:	mov    eax,ds:0x78938
   1195a:	ret    
   1195b:	int3   
   1195c:	int3   
   1195d:	int3   
   1195e:	int3   
   1195f:	int3   
   11960:	test   BYTE PTR ds:0x78944,0x1
   11967:	jne    0x1197f
   11969:	or     DWORD PTR ds:0x78944,0x1
   11970:	push   0x1e1f6
   11975:	call   0x11668
   1197a:	mov    ds:0x78940,eax
   1197f:	mov    eax,ds:0x78940
   11984:	ret    
   11985:	int3   
   11986:	int3   
   11987:	int3   
   11988:	int3   
   11989:	int3   
   1198a:	test   BYTE PTR ds:0x7894c,0x1
   11991:	jne    0x119a9
   11993:	or     DWORD PTR ds:0x7894c,0x1
   1199a:	push   0x1e21c
   1199f:	call   0x11668
   119a4:	mov    ds:0x78948,eax
   119a9:	mov    eax,ds:0x78948
   119ae:	ret    
   119af:	int3   
   119b0:	int3   
   119b1:	int3   
   119b2:	int3   
   119b3:	int3   
   119b4:	test   BYTE PTR ds:0x78954,0x1
   119bb:	jne    0x119d3
   119bd:	or     DWORD PTR ds:0x78954,0x1
   119c4:	push   0x1e24c
   119c9:	call   0x11668
   119ce:	mov    ds:0x78950,eax
   119d3:	mov    eax,ds:0x78950
   119d8:	ret    
   119d9:	int3   
   119da:	int3   
   119db:	int3   
   119dc:	int3   
   119dd:	int3   
   119de:	test   BYTE PTR ds:0x7895c,0x1
   119e5:	jne    0x119fd
   119e7:	or     DWORD PTR ds:0x7895c,0x1
   119ee:	push   0x1e27e
   119f3:	call   0x11668
   119f8:	mov    ds:0x78958,eax
   119fd:	mov    eax,ds:0x78958
   11a02:	ret    
   11a03:	int3   
   11a04:	int3   
   11a05:	int3   
   11a06:	int3   
   11a07:	int3   
   11a08:	test   BYTE PTR ds:0x78964,0x1
   11a0f:	jne    0x11a27
   11a11:	or     DWORD PTR ds:0x78964,0x1
   11a18:	push   0x1e28e
   11a1d:	call   0x11668
   11a22:	mov    ds:0x78960,eax
   11a27:	mov    eax,ds:0x78960
   11a2c:	ret    
   11a2d:	int3   
   11a2e:	int3   
   11a2f:	int3   
   11a30:	int3   
   11a31:	int3   
   11a32:	test   BYTE PTR ds:0x7896c,0x1
   11a39:	jne    0x11a51
   11a3b:	or     DWORD PTR ds:0x7896c,0x1
   11a42:	push   0x1e2a2
   11a47:	call   0x11668
   11a4c:	mov    ds:0x78968,eax
   11a51:	mov    eax,ds:0x78968
   11a56:	ret    
   11a57:	int3   
   11a58:	int3   
   11a59:	int3   
   11a5a:	int3   
   11a5b:	int3   
   11a5c:	test   BYTE PTR ds:0x78974,0x1
   11a63:	jne    0x11a7b
   11a65:	or     DWORD PTR ds:0x78974,0x1
   11a6c:	push   0x1e2c0
   11a71:	call   0x11668
   11a76:	mov    ds:0x78970,eax
   11a7b:	mov    eax,ds:0x78970
   11a80:	ret    
   11a81:	int3   
   11a82:	int3   
   11a83:	int3   
   11a84:	int3   
   11a85:	int3   
   11a86:	test   BYTE PTR ds:0x7897c,0x1
   11a8d:	jne    0x11aa5
   11a8f:	or     DWORD PTR ds:0x7897c,0x1
   11a96:	push   0x1e2da
   11a9b:	call   0x11668
   11aa0:	mov    ds:0x78978,eax
   11aa5:	mov    eax,ds:0x78978
   11aaa:	ret    
   11aab:	int3   
   11aac:	int3   
   11aad:	int3   
   11aae:	int3   
   11aaf:	int3   
   11ab0:	test   BYTE PTR ds:0x78984,0x1
   11ab7:	jne    0x11acf
   11ab9:	or     DWORD PTR ds:0x78984,0x1
   11ac0:	push   0x1e2f2
   11ac5:	call   0x11668
   11aca:	mov    ds:0x78980,eax
   11acf:	mov    eax,ds:0x78980
   11ad4:	ret    
   11ad5:	int3   
   11ad6:	int3   
   11ad7:	int3   
   11ad8:	int3   
   11ad9:	int3   
   11ada:	test   BYTE PTR ds:0x7898c,0x1
   11ae1:	jne    0x11af9
   11ae3:	or     DWORD PTR ds:0x7898c,0x1
   11aea:	push   0x1e310
   11aef:	call   0x11668
   11af4:	mov    ds:0x78988,eax
   11af9:	mov    eax,ds:0x78988
   11afe:	ret    
   11aff:	int3   
   11b00:	int3   
   11b01:	int3   
   11b02:	int3   
   11b03:	int3   
   11b04:	test   BYTE PTR ds:0x78994,0x1
   11b0b:	jne    0x11b23
   11b0d:	or     DWORD PTR ds:0x78994,0x1
   11b14:	push   0x1e330
   11b19:	call   0x11668
   11b1e:	mov    ds:0x78990,eax
   11b23:	mov    eax,ds:0x78990
   11b28:	ret    
   11b29:	int3   
   11b2a:	int3   
   11b2b:	int3   
   11b2c:	int3   
   11b2d:	int3   
   11b2e:	test   BYTE PTR ds:0x7899c,0x1
   11b35:	jne    0x11b4d
   11b37:	or     DWORD PTR ds:0x7899c,0x1
   11b3e:	push   0x1e350
   11b43:	call   0x11668
   11b48:	mov    ds:0x78998,eax
   11b4d:	mov    eax,ds:0x78998
   11b52:	ret    
   11b53:	int3   
   11b54:	int3   
   11b55:	int3   
   11b56:	int3   
   11b57:	int3   
   11b58:	test   BYTE PTR ds:0x789a4,0x1
   11b5f:	jne    0x11b77
   11b61:	or     DWORD PTR ds:0x789a4,0x1
   11b68:	push   0x1e370
   11b6d:	call   0x11668
   11b72:	mov    ds:0x789a0,eax
   11b77:	mov    eax,ds:0x789a0
   11b7c:	ret    
   11b7d:	int3   
   11b7e:	int3   
   11b7f:	int3   
   11b80:	int3   
   11b81:	int3   
   11b82:	test   BYTE PTR ds:0x789ac,0x1
   11b89:	jne    0x11ba1
   11b8b:	or     DWORD PTR ds:0x789ac,0x1
   11b92:	push   0x1e386
   11b97:	call   0x11668
   11b9c:	mov    ds:0x789a8,eax
   11ba1:	mov    eax,ds:0x789a8
   11ba6:	ret    
   11ba7:	int3   
   11ba8:	int3   
   11ba9:	int3   
   11baa:	int3   
   11bab:	int3   
   11bac:	test   BYTE PTR ds:0x789b4,0x1
   11bb3:	jne    0x11bcb
   11bb5:	or     DWORD PTR ds:0x789b4,0x1
   11bbc:	push   0x1e3b0
   11bc1:	call   0x11668
   11bc6:	mov    ds:0x789b0,eax
   11bcb:	mov    eax,ds:0x789b0
   11bd0:	ret    
   11bd1:	int3   
   11bd2:	int3   
   11bd3:	int3   
   11bd4:	int3   
   11bd5:	int3   
   11bd6:	test   BYTE PTR ds:0x789bc,0x1
   11bdd:	jne    0x11bf5
   11bdf:	or     DWORD PTR ds:0x789bc,0x1
   11be6:	push   0x1e3c8
   11beb:	call   0x11668
   11bf0:	mov    ds:0x789b8,eax
   11bf5:	mov    eax,ds:0x789b8
   11bfa:	ret    
   11bfb:	int3   
   11bfc:	int3   
   11bfd:	int3   
   11bfe:	int3   
   11bff:	int3   
   11c00:	test   BYTE PTR ds:0x789c4,0x1
   11c07:	jne    0x11c1f
   11c09:	or     DWORD PTR ds:0x789c4,0x1
   11c10:	push   0x1e3f6
   11c15:	call   0x11668
   11c1a:	mov    ds:0x789c0,eax
   11c1f:	mov    eax,ds:0x789c0
   11c24:	ret    
   11c25:	int3   
   11c26:	int3   
   11c27:	int3   
   11c28:	int3   
   11c29:	int3   
   11c2a:	test   BYTE PTR ds:0x789cc,0x1
   11c31:	jne    0x11c49
   11c33:	or     DWORD PTR ds:0x789cc,0x1
   11c3a:	push   0x1e420
   11c3f:	call   0x11668
   11c44:	mov    ds:0x789c8,eax
   11c49:	mov    eax,ds:0x789c8
   11c4e:	ret    
   11c4f:	int3   
   11c50:	int3   
   11c51:	int3   
   11c52:	int3   
   11c53:	int3   
   11c54:	test   BYTE PTR ds:0x789d4,0x1
   11c5b:	jne    0x11c73
   11c5d:	or     DWORD PTR ds:0x789d4,0x1
   11c64:	push   0x1e43e
   11c69:	call   0x11668
   11c6e:	mov    ds:0x789d0,eax
   11c73:	mov    eax,ds:0x789d0
   11c78:	ret    
   11c79:	int3   
   11c7a:	int3   
   11c7b:	int3   
   11c7c:	int3   
   11c7d:	int3   
   11c7e:	test   BYTE PTR ds:0x789dc,0x1
   11c85:	jne    0x11c9d
   11c87:	or     DWORD PTR ds:0x789dc,0x1
   11c8e:	push   0x1e46c
   11c93:	call   0x11668
   11c98:	mov    ds:0x789d8,eax
   11c9d:	mov    eax,ds:0x789d8
   11ca2:	ret    
   11ca3:	int3   
   11ca4:	int3   
   11ca5:	int3   
   11ca6:	int3   
   11ca7:	int3   
   11ca8:	test   BYTE PTR ds:0x789e4,0x1
   11caf:	jne    0x11cc7
   11cb1:	or     DWORD PTR ds:0x789e4,0x1
   11cb8:	push   0x1e492
   11cbd:	call   0x11668
   11cc2:	mov    ds:0x789e0,eax
   11cc7:	mov    eax,ds:0x789e0
   11ccc:	ret    
   11ccd:	int3   
   11cce:	int3   
   11ccf:	int3   
   11cd0:	int3   
   11cd1:	int3   
   11cd2:	test   BYTE PTR ds:0x789ec,0x1
   11cd9:	jne    0x11cf1
   11cdb:	or     DWORD PTR ds:0x789ec,0x1
   11ce2:	push   0x1e4b2
   11ce7:	call   0x11668
   11cec:	mov    ds:0x789e8,eax
   11cf1:	mov    eax,ds:0x789e8
   11cf6:	ret    
   11cf7:	int3   
   11cf8:	int3   
   11cf9:	int3   
   11cfa:	int3   
   11cfb:	int3   
   11cfc:	test   BYTE PTR ds:0x789f4,0x1
   11d03:	jne    0x11d1b
   11d05:	or     DWORD PTR ds:0x789f4,0x1
   11d0c:	push   0x1e4dc
   11d11:	call   0x11668
   11d16:	mov    ds:0x789f0,eax
   11d1b:	mov    eax,ds:0x789f0
   11d20:	ret    
   11d21:	int3   
   11d22:	int3   
   11d23:	int3   
   11d24:	int3   
   11d25:	int3   
   11d26:	test   BYTE PTR ds:0x789fc,0x1
   11d2d:	jne    0x11d45
   11d2f:	or     DWORD PTR ds:0x789fc,0x1
   11d36:	push   0x1e500
   11d3b:	call   0x11668
   11d40:	mov    ds:0x789f8,eax
   11d45:	mov    eax,ds:0x789f8
   11d4a:	ret    
   11d4b:	int3   
   11d4c:	int3   
   11d4d:	int3   
   11d4e:	int3   
   11d4f:	int3   
   11d50:	test   BYTE PTR ds:0x78a04,0x1
   11d57:	jne    0x11d6f
   11d59:	or     DWORD PTR ds:0x78a04,0x1
   11d60:	push   0x1e536
   11d65:	call   0x11668
   11d6a:	mov    ds:0x78a00,eax
   11d6f:	mov    eax,ds:0x78a00
   11d74:	ret    
   11d75:	int3   
   11d76:	int3   
   11d77:	int3   
   11d78:	int3   
   11d79:	int3   
   11d7a:	call   0x11714
   11d7f:	test   eax,eax
   11d81:	jne    0x11d86
   11d83:	xor    eax,eax
   11d85:	ret    
   11d86:	call   0x1173e
   11d8b:	test   eax,eax
   11d8d:	je     0x11d83
   11d8f:	call   0x11768
   11d94:	test   eax,eax
   11d96:	je     0x11d83
   11d98:	call   0x11792
   11d9d:	test   eax,eax
   11d9f:	je     0x11d83
   11da1:	call   0x117bc
   11da6:	test   eax,eax
   11da8:	je     0x11d83
   11daa:	call   0x117e6
   11daf:	test   eax,eax
   11db1:	je     0x11d83
   11db3:	call   0x11810
   11db8:	test   eax,eax
   11dba:	je     0x11d83
   11dbc:	call   0x1183a
   11dc1:	test   eax,eax
   11dc3:	je     0x11d83
   11dc5:	call   0x11864
   11dca:	test   eax,eax
   11dcc:	je     0x11d83
   11dce:	call   0x1188e
   11dd3:	test   eax,eax
   11dd5:	je     0x11d83
   11dd7:	call   0x118b8
   11ddc:	test   eax,eax
   11dde:	je     0x11d83
   11de0:	call   0x118e2
   11de5:	test   eax,eax
   11de7:	je     0x11d83
   11de9:	call   0x1190c
   11dee:	test   eax,eax
   11df0:	je     0x11d83
   11df2:	call   0x11936
   11df7:	test   eax,eax
   11df9:	je     0x11d83
   11dfb:	call   0x11960
   11e00:	test   eax,eax
   11e02:	je     0x11d83
   11e08:	call   0x1198a
   11e0d:	test   eax,eax
   11e0f:	je     0x11d83
   11e15:	call   0x119b4
   11e1a:	test   eax,eax
   11e1c:	je     0x11d83
   11e22:	call   0x119de
   11e27:	test   eax,eax
   11e29:	je     0x11d83
   11e2f:	call   0x11a08
   11e34:	test   eax,eax
   11e36:	je     0x11d83
   11e3c:	call   0x11a32
   11e41:	test   eax,eax
   11e43:	je     0x11d83
   11e49:	call   0x11a5c
   11e4e:	test   eax,eax
   11e50:	je     0x11d83
   11e56:	call   0x11a86
   11e5b:	test   eax,eax
   11e5d:	je     0x11d83
   11e63:	call   0x11ab0
   11e68:	test   eax,eax
   11e6a:	je     0x11d83
   11e70:	call   0x11ada
   11e75:	test   eax,eax
   11e77:	je     0x11d83
   11e7d:	call   0x11b04
   11e82:	test   eax,eax
   11e84:	je     0x11d83
   11e8a:	call   0x11b2e
   11e8f:	test   eax,eax
   11e91:	je     0x11d83
   11e97:	call   0x11b58
   11e9c:	test   eax,eax
   11e9e:	je     0x11d83
   11ea4:	call   0x11b82
   11ea9:	test   eax,eax
   11eab:	je     0x11d83
   11eb1:	call   0x11bac
   11eb6:	test   eax,eax
   11eb8:	je     0x11d83
   11ebe:	call   0x11bd6
   11ec3:	test   eax,eax
   11ec5:	je     0x11d83
   11ecb:	call   0x11c00
   11ed0:	test   eax,eax
   11ed2:	je     0x11d83
   11ed8:	call   0x11c2a
   11edd:	test   eax,eax
   11edf:	je     0x11d83
   11ee5:	call   0x11c54
   11eea:	test   eax,eax
   11eec:	je     0x11d83
   11ef2:	call   0x11c7e
   11ef7:	test   eax,eax
   11ef9:	je     0x11d83
   11eff:	call   0x11ca8
   11f04:	test   eax,eax
   11f06:	je     0x11d83
   11f0c:	call   0x11cd2
   11f11:	test   eax,eax
   11f13:	je     0x11d83
   11f19:	call   0x11cfc
   11f1e:	test   eax,eax
   11f20:	je     0x11d83
   11f26:	call   0x11d26
   11f2b:	test   eax,eax
   11f2d:	je     0x11d83
   11f33:	call   0x11d50
   11f38:	neg    eax
   11f3a:	sbb    eax,eax
   11f3c:	neg    eax
   11f3e:	ret    
   11f3f:	int3   
   11f40:	int3   
   11f41:	int3   
   11f42:	int3   
   11f43:	int3   
   11f44:	mov    edi,edi
   11f46:	push   esi
   11f47:	mov    esi,ecx
   11f49:	push   DWORD PTR [esi+0x38]
   11f4c:	call   0x10a3a
   11f51:	push   DWORD PTR [esi+0x18]
   11f54:	call   0x10a3a
   11f59:	push   DWORD PTR [esi+0x10]
   11f5c:	call   0x10a3a
   11f61:	push   DWORD PTR [esi+0x8]
   11f64:	call   0x10a3a
   11f69:	push   DWORD PTR [esi]
   11f6b:	call   0x10a3a
   11f70:	add    esp,0x14
   11f73:	pop    esi
   11f74:	ret    
   11f75:	int3   
   11f76:	int3   
   11f77:	int3   
   11f78:	int3   
   11f79:	int3   
   11f7a:	mov    edi,edi
   11f7c:	push   ebp
   11f7d:	mov    ebp,esp
   11f7f:	mov    eax,ecx
   11f81:	mov    ecx,DWORD PTR [ebp+0x8]
   11f84:	mov    edx,DWORD PTR [ecx]
   11f86:	test   edx,edx
   11f88:	je     0x11f91
   11f8a:	mov    DWORD PTR [eax],edx
   11f8c:	inc    DWORD PTR [edx+0x4]
   11f8f:	jmp    0x11f94
   11f91:	and    DWORD PTR [eax],0x0
   11f94:	pop    ebp
   11f95:	ret    0x4
   11f98:	int3   
   11f99:	int3   
   11f9a:	int3   
   11f9b:	int3   
   11f9c:	int3   
   11f9d:	int3   
   11f9e:	mov    edi,edi
   11fa0:	push   ebp
   11fa1:	mov    ebp,esp
   11fa3:	push   esi
   11fa4:	mov    esi,ecx
   11fa6:	mov    ecx,DWORD PTR [esi]
   11fa8:	test   ecx,ecx
   11faa:	je     0x11fb1
   11fac:	call   0x10a58
   11fb1:	mov    eax,DWORD PTR [ebp+0x8]
   11fb4:	mov    eax,DWORD PTR [eax]
   11fb6:	mov    DWORD PTR [esi],eax
   11fb8:	inc    DWORD PTR [eax+0x4]
   11fbb:	mov    eax,esi
   11fbd:	pop    esi
   11fbe:	pop    ebp
   11fbf:	ret    0x4
   11fc2:	int3   
   11fc3:	int3   
   11fc4:	int3   
   11fc5:	int3   
   11fc6:	int3   
   11fc7:	int3   
   11fc8:	mov    edi,edi
   11fca:	push   ebp
   11fcb:	mov    ebp,esp
   11fcd:	push   ebx
   11fce:	push   esi
   11fcf:	push   edi
   11fd0:	mov    edi,DWORD PTR [ebp+0xc]
   11fd3:	mov    esi,ecx
   11fd5:	and    DWORD PTR [esi+0x4],0x0
   11fd9:	lea    eax,[edi+0x1]
   11fdc:	push   eax
   11fdd:	mov    DWORD PTR [esi+0x8],edi
   11fe0:	call   0x10a06
   11fe5:	push   edi
   11fe6:	push   DWORD PTR [ebp+0x8]
   11fe9:	mov    ebx,eax
   11feb:	push   ebx
   11fec:	call   0x1db58
   11ff1:	add    esp,0x10
   11ff4:	inc    DWORD PTR [esi+0x4]
   11ff7:	pop    edi
   11ff8:	mov    DWORD PTR [esi],ebx
   11ffa:	mov    eax,esi
   11ffc:	pop    esi
   11ffd:	pop    ebx
   11ffe:	pop    ebp
   11fff:	ret    0x8
   12002:	int3   
   12003:	int3   
   12004:	int3   
   12005:	int3   
   12006:	int3   
   12007:	int3   
   12008:	mov    edi,edi
   1200a:	push   ebp
   1200b:	mov    ebp,esp
   1200d:	push   ecx
   1200e:	push   edi
   1200f:	lea    eax,[ebp-0x4]
   12012:	push   eax
   12013:	xor    edi,edi
   12015:	push   edi
   12016:	push   edi
   12017:	push   0x1b
   12019:	push   DWORD PTR [ebp+0x8]
   1201c:	call   0x117e6
   12021:	call   eax
   12023:	cmp    eax,0xc0000004
   12028:	jne    0x12090
   1202a:	mov    ecx,DWORD PTR [ebp-0x4]
   1202d:	push   ebx
   1202e:	mov    ebx,DWORD PTR [ebp+0xc]
   12031:	movzx  edx,WORD PTR [ebx+0x2]
   12035:	lea    eax,[ecx-0x8]
   12038:	cmp    edx,eax
   1203a:	jae    0x12046
   1203c:	mov    WORD PTR [ebx],ax
   1203f:	mov    eax,0x80000005
   12044:	jmp    0x1208f
   12046:	push   esi
   12047:	push   0x20736649
   1204c:	push   ecx
   1204d:	push   edi
   1204e:	call   DWORD PTR ds:0x1f064
   12054:	mov    esi,eax
   12056:	cmp    esi,edi
   12058:	jne    0x12061
   1205a:	mov    eax,0xc000009a
   1205f:	jmp    0x1208e
   12061:	lea    eax,[ebp-0x4]
   12064:	push   eax
   12065:	push   DWORD PTR [ebp-0x4]
   12068:	push   esi
   12069:	push   0x1b
   1206b:	push   DWORD PTR [ebp+0x8]
   1206e:	call   0x117e6
   12073:	call   eax
   12075:	mov    edi,eax
   12077:	test   edi,edi
   12079:	jl     0x12083
   1207b:	push   esi
   1207c:	push   ebx
   1207d:	call   DWORD PTR ds:0x1f03c
   12083:	push   0x0
   12085:	push   esi
   12086:	call   DWORD PTR ds:0x1f020
   1208c:	mov    eax,edi
   1208e:	pop    esi
   1208f:	pop    ebx
   12090:	pop    edi
   12091:	leave  
   12092:	ret    0x8
   12095:	int3   
   12096:	int3   
   12097:	int3   
   12098:	int3   
   12099:	int3   
   1209a:	mov    edi,edi
   1209c:	push   ebp
   1209d:	mov    ebp,esp
   1209f:	sub    esp,0x18
   120a2:	push   0x0
   120a4:	push   0x18
   120a6:	lea    eax,[ebp-0x18]
   120a9:	push   eax
   120aa:	push   0x0
   120ac:	push   DWORD PTR [ebp+0x8]
   120af:	call   0x117e6
   120b4:	call   eax
   120b6:	test   eax,eax
   120b8:	jl     0x120bf
   120ba:	mov    eax,DWORD PTR [ebp-0x8]
   120bd:	jmp    0x120c1
   120bf:	xor    eax,eax
   120c1:	leave  
   120c2:	ret    0x4
   120c5:	int3   
   120c6:	int3   
   120c7:	int3   
   120c8:	int3   
   120c9:	int3   
   120ca:	mov    edi,edi
   120cc:	push   ebp
   120cd:	mov    ebp,esp
   120cf:	mov    ecx,DWORD PTR ds:0x77fa4
   120d5:	sub    esp,0x38
   120d8:	push   esi
   120d9:	xor    esi,esi
   120db:	cmp    ecx,esi
   120dd:	jne    0x120e7
   120df:	or     eax,0xffffffff
   120e2:	jmp    0x121ce
   120e7:	push   edi
   120e8:	xor    eax,eax
   120ea:	mov    DWORD PTR [ebp-0x20],esi
   120ed:	lea    edi,[ebp-0x1c]
   120f0:	stos   DWORD PTR es:[edi],eax
   120f1:	lea    eax,[ebp-0x18]
   120f4:	push   eax
   120f5:	lea    eax,[ebp-0x38]
   120f8:	push   eax
   120f9:	push   0x400
   120fe:	lea    eax,[ebp-0x10]
   12101:	push   eax
   12102:	mov    DWORD PTR [ebp-0x4],esi
   12105:	mov    DWORD PTR [ebp-0x38],0x18
   1210c:	mov    DWORD PTR [ebp-0x34],esi
   1210f:	mov    DWORD PTR [ebp-0x2c],esi
   12112:	mov    DWORD PTR [ebp-0x30],esi
   12115:	mov    DWORD PTR [ebp-0x28],esi
   12118:	mov    DWORD PTR [ebp-0x24],esi
   1211b:	mov    DWORD PTR [ebp-0x18],ecx
   1211e:	mov    DWORD PTR [ebp-0x14],esi
   12121:	call   0x11714
   12126:	call   eax
   12128:	mov    edi,eax
   1212a:	cmp    edi,esi
   1212c:	jl     0x121cb
   12132:	lea    eax,[ebp-0xc]
   12135:	push   eax
   12136:	push   0x8
   12138:	push   DWORD PTR [ebp-0x10]
   1213b:	call   0x11960
   12140:	call   eax
   12142:	mov    edi,eax
   12144:	cmp    edi,esi
   12146:	jl     0x121c1
   12148:	lea    eax,[ebp-0x4]
   1214b:	push   eax
   1214c:	push   0x1
   1214e:	push   esi
   1214f:	push   esi
   12150:	push   0x1
   12152:	push   DWORD PTR [ebp-0xc]
   12155:	call   0x11768
   1215a:	call   eax
   1215c:	mov    edi,eax
   1215e:	cmp    edi,esi
   12160:	jl     0x121b7
   12162:	mov    eax,DWORD PTR [ebp+0x8]
   12165:	mov    DWORD PTR [ebp-0x18],eax
   12168:	lea    eax,[ebp-0x18]
   1216b:	push   eax
   1216c:	lea    eax,[ebp-0x38]
   1216f:	push   eax
   12170:	push   0x200
   12175:	lea    eax,[ebp-0x8]
   12178:	push   eax
   12179:	call   0x11714
   1217e:	call   eax
   12180:	mov    edi,eax
   12182:	cmp    edi,esi
   12184:	jl     0x121ad
   12186:	mov    eax,DWORD PTR [ebp-0x4]
   12189:	push   0x8
   1218b:	mov    DWORD PTR [ebp-0x20],eax
   1218e:	lea    eax,[ebp-0x20]
   12191:	push   eax
   12192:	push   0x9
   12194:	push   DWORD PTR [ebp-0x8]
   12197:	mov    DWORD PTR [ebp-0x1c],esi
   1219a:	call   0x1198a
   1219f:	call   eax
   121a1:	push   DWORD PTR [ebp-0x8]
   121a4:	mov    edi,eax
   121a6:	call   0x119de
   121ab:	call   eax
   121ad:	push   DWORD PTR [ebp-0x4]
   121b0:	call   0x119de
   121b5:	call   eax
   121b7:	push   DWORD PTR [ebp-0xc]
   121ba:	call   0x119de
   121bf:	call   eax
   121c1:	push   DWORD PTR [ebp-0x10]
   121c4:	call   0x119de
   121c9:	call   eax
   121cb:	mov    eax,edi
   121cd:	pop    edi
   121ce:	pop    esi
   121cf:	leave  
   121d0:	ret    0x4
   121d3:	int3   
   121d4:	int3   
   121d5:	int3   
   121d6:	int3   
   121d7:	int3   
   121d8:	mov    edi,edi
   121da:	push   ebp
   121db:	mov    ebp,esp
   121dd:	sub    esp,0x43c
   121e3:	mov    eax,ds:0x7751c
   121e8:	xor    eax,ebp
   121ea:	mov    DWORD PTR [ebp-0x4],eax
   121ed:	mov    eax,DWORD PTR [ebp+0xc]
   121f0:	push   ebx
   121f1:	push   esi
   121f2:	mov    esi,DWORD PTR [ebp+0x8]
   121f5:	push   edi
   121f6:	xor    ebx,ebx
   121f8:	push   0x3ff
   121fd:	mov    DWORD PTR [ebp-0x418],eax
   12203:	lea    eax,[ebp-0x403]
   12209:	push   ebx
   1220a:	push   eax
   1220b:	mov    DWORD PTR [ebp-0x424],esi
   12211:	mov    BYTE PTR [ebp-0x404],bl
   12217:	call   0x1db4c
   1221c:	add    esp,0xc
   1221f:	lea    eax,[ebp-0x410]
   12225:	push   eax
   12226:	push   0x400
   1222b:	lea    eax,[ebp-0x404]
   12231:	push   eax
   12232:	push   ebx
   12233:	push   ebx
   12234:	push   esi
   12235:	jmp    0x123e4
   1223a:	cmp    eax,ebx
   1223c:	jl     0x12406
   12242:	mov    eax,DWORD PTR [ebp-0x418]
   12248:	lea    edx,[eax+0x2]
   1224b:	mov    cx,WORD PTR [eax]
   1224e:	inc    eax
   1224f:	inc    eax
   12250:	cmp    cx,bx
   12253:	jne    0x1224b
   12255:	mov    ecx,DWORD PTR [ebp-0x3f8]
   1225b:	sub    eax,edx
   1225d:	shr    ecx,1
   1225f:	sar    eax,1
   12261:	lea    esi,[ecx+eax*1+0x2]
   12265:	xor    ecx,ecx
   12267:	push   0x2
   12269:	pop    edx
   1226a:	mov    eax,esi
   1226c:	mul    edx
   1226e:	seto   cl
   12271:	neg    ecx
   12273:	or     ecx,eax
   12275:	push   ecx
   12276:	call   0x10a06
   1227b:	mov    edi,eax
   1227d:	lea    eax,[esi+esi*1]
   12280:	push   eax
   12281:	push   ebx
   12282:	push   edi
   12283:	mov    DWORD PTR [ebp-0x40c],edi
   12289:	call   0x1db4c
   1228e:	mov    eax,DWORD PTR [ebp-0x418]
   12294:	add    esp,0x10
   12297:	mov    ecx,eax
   12299:	mov    dx,WORD PTR [eax]
   1229c:	inc    eax
   1229d:	inc    eax
   1229e:	cmp    dx,bx
   122a1:	jne    0x12299
   122a3:	sub    eax,ecx
   122a5:	dec    edi
   122a6:	mov    esi,ecx
   122a8:	dec    edi
   122a9:	mov    cx,WORD PTR [edi+0x2]
   122ad:	inc    edi
   122ae:	inc    edi
   122af:	cmp    cx,bx
   122b2:	jne    0x122a9
   122b4:	mov    ecx,eax
   122b6:	shr    ecx,0x2
   122b9:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   122bb:	mov    ecx,eax
   122bd:	and    ecx,0x3
   122c0:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   122c2:	mov    edi,DWORD PTR [ebp-0x40c]
   122c8:	dec    edi
   122c9:	dec    edi
   122ca:	mov    ax,WORD PTR [edi+0x2]
   122ce:	inc    edi
   122cf:	inc    edi
   122d0:	cmp    ax,bx
   122d3:	jne    0x122ca
   122d5:	mov    esi,0x1defa
   122da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   122db:	mov    eax,DWORD PTR [ebp-0x3f8]
   122e1:	shr    eax,1
   122e3:	push   eax
   122e4:	lea    eax,[ebp-0x3f4]
   122ea:	push   eax
   122eb:	push   DWORD PTR [ebp-0x40c]
   122f1:	call   0x1db64
   122f6:	mov    esi,DWORD PTR [ebp-0x40c]
   122fc:	mov    eax,esi
   122fe:	add    esp,0xc
   12301:	mov    DWORD PTR [ebp-0x41c],esi
   12307:	lea    edx,[eax+0x2]
   1230a:	mov    cx,WORD PTR [eax]
   1230d:	inc    eax
   1230e:	inc    eax
   1230f:	cmp    cx,bx
   12312:	jne    0x1230a
   12314:	sub    eax,edx
   12316:	sar    eax,1
   12318:	add    eax,eax
   1231a:	mov    WORD PTR [ebp-0x41e],ax
   12321:	mov    WORD PTR [ebp-0x420],ax
   12328:	lea    eax,[ebp-0x420]
   1232e:	mov    DWORD PTR [ebp-0x434],eax
   12334:	lea    eax,[ebp-0x43c]
   1233a:	push   eax
   1233b:	push   0xf003f
   12340:	lea    eax,[ebp-0x414]
   12346:	push   eax
   12347:	mov    DWORD PTR [ebp-0x43c],0x18
   12351:	mov    DWORD PTR [ebp-0x438],ebx
   12357:	mov    DWORD PTR [ebp-0x430],0x40
   12361:	mov    DWORD PTR [ebp-0x42c],ebx
   12367:	mov    DWORD PTR [ebp-0x428],ebx
   1236d:	call   0x1183a
   12372:	call   eax
   12374:	push   esi
   12375:	test   eax,eax
   12377:	jl     0x12400
   1237d:	push   DWORD PTR [ebp-0x414]
   12383:	call   0x121d8
   12388:	push   esi
   12389:	mov    BYTE PTR [ebp-0x405],al
   1238f:	call   0x10a3a
   12394:	pop    ecx
   12395:	push   DWORD PTR [ebp-0x414]
   1239b:	call   0x11864
   123a0:	call   eax
   123a2:	test   eax,eax
   123a4:	jl     0x12406
   123a6:	cmp    BYTE PTR [ebp-0x405],bl
   123ac:	je     0x12406
   123ae:	push   0x3ff
   123b3:	lea    eax,[ebp-0x403]
   123b9:	push   ebx
   123ba:	push   eax
   123bb:	mov    BYTE PTR [ebp-0x404],bl
   123c1:	call   0x1db4c
   123c6:	add    esp,0xc
   123c9:	lea    eax,[ebp-0x410]
   123cf:	push   eax
   123d0:	push   0x400
   123d5:	lea    eax,[ebp-0x404]
   123db:	push   eax
   123dc:	push   ebx
   123dd:	push   ebx
   123de:	push   DWORD PTR [ebp-0x424]
   123e4:	mov    DWORD PTR [ebp-0x410],ebx
   123ea:	call   0x11a32
   123ef:	call   eax
   123f1:	cmp    eax,0x8000001a
   123f6:	jne    0x1223a
   123fc:	mov    al,0x1
   123fe:	jmp    0x12408
   12400:	call   0x10a3a
   12405:	pop    ecx
   12406:	xor    al,al
   12408:	mov    ecx,DWORD PTR [ebp-0x4]
   1240b:	pop    edi
   1240c:	pop    esi
   1240d:	xor    ecx,ebp
   1240f:	pop    ebx
   12410:	call   0x1dae7
   12415:	leave  
   12416:	ret    0x8
   12419:	int3   
   1241a:	int3   
   1241b:	int3   
   1241c:	int3   
   1241d:	int3   
   1241e:	mov    eax,ds:0x77f24
   12423:	test   eax,eax
   12425:	je     0x12436
   12427:	push   eax
   12428:	call   0x11ab0
   1242d:	call   eax
   1242f:	and    DWORD PTR ds:0x77f24,0x0
   12436:	ret    
   12437:	int3   
   12438:	int3   
   12439:	int3   
   1243a:	int3   
   1243b:	int3   
   1243c:	push   0x28
   1243e:	push   0x771c8
   12443:	call   0x1db88
   12448:	xor    eax,eax
   1244a:	mov    DWORD PTR [ebp-0x28],eax
   1244d:	mov    DWORD PTR [ebp-0x2c],eax
   12450:	mov    ebx,DWORD PTR [ebp+0x8]
   12453:	cmp    ebx,eax
   12455:	jne    0x1245e
   12457:	xor    eax,eax
   12459:	jmp    0x1253b
   1245e:	mov    DWORD PTR [ebp-0x4],eax
   12461:	lea    ecx,[ebp-0x2c]
   12464:	push   ecx
   12465:	push   eax
   12466:	push   0x1
   12468:	push   ebx
   12469:	call   0x11936
   1246e:	call   eax
   12470:	mov    edx,eax
   12472:	sub    edx,ebx
   12474:	mov    DWORD PTR [ebp-0x38],edx
   12477:	mov    esi,DWORD PTR [eax+0x1c]
   1247a:	add    esi,ebx
   1247c:	mov    edi,DWORD PTR [eax+0x24]
   1247f:	add    edi,ebx
   12481:	mov    ecx,DWORD PTR [eax+0x20]
   12484:	add    ecx,ebx
   12486:	and    DWORD PTR [ebp-0x20],0x0
   1248a:	mov    ebx,DWORD PTR [ebp-0x20]
   1248d:	cmp    ebx,DWORD PTR [eax+0x18]
   12490:	jae    0x12523
   12496:	movsx  ebx,WORD PTR [edi+ebx*2]
   1249a:	cmp    ebx,DWORD PTR [eax+0x14]
   1249d:	jae    0x12517
   1249f:	lea    ebx,[esi+ebx*4]
   124a2:	mov    DWORD PTR [ebp-0x34],ebx
   124a5:	cmp    DWORD PTR [ebx],edx
   124a7:	jb     0x124b5
   124a9:	mov    ebx,DWORD PTR [ebp-0x2c]
   124ac:	add    edx,ebx
   124ae:	mov    ebx,DWORD PTR [ebp-0x34]
   124b1:	cmp    DWORD PTR [ebx],edx
   124b3:	jb     0x1250c
   124b5:	mov    edx,DWORD PTR [ebp+0xc]
   124b8:	mov    DWORD PTR [ebp-0x30],edx
   124bb:	mov    edx,DWORD PTR [ebp-0x20]
   124be:	mov    edx,DWORD PTR [ecx+edx*4]
   124c1:	add    edx,DWORD PTR [ebp+0x8]
   124c4:	mov    DWORD PTR [ebp-0x24],edx
   124c7:	mov    dl,BYTE PTR [edx]
   124c9:	mov    ebx,DWORD PTR [ebp-0x30]
   124cc:	cmp    dl,BYTE PTR [ebx]
   124ce:	jne    0x124f9
   124d0:	test   dl,dl
   124d2:	je     0x124f5
   124d4:	mov    edx,DWORD PTR [ebp-0x24]
   124d7:	mov    dl,BYTE PTR [edx+0x1]
   124da:	mov    BYTE PTR [ebp-0x19],dl
   124dd:	cmp    dl,BYTE PTR [ebx+0x1]
   124e0:	jne    0x124f9
   124e2:	mov    edx,DWORD PTR [ebp-0x24]
   124e5:	inc    edx
   124e6:	inc    edx
   124e7:	mov    DWORD PTR [ebp-0x24],edx
   124ea:	inc    ebx
   124eb:	inc    ebx
   124ec:	mov    DWORD PTR [ebp-0x30],ebx
   124ef:	cmp    BYTE PTR [ebp-0x19],0x0
   124f3:	jne    0x124c7
   124f5:	xor    edx,edx
   124f7:	jmp    0x124fe
   124f9:	sbb    edx,edx
   124fb:	sbb    edx,0xffffffff
   124fe:	test   edx,edx
   12500:	jne    0x1250c
   12502:	mov    eax,DWORD PTR [ebp-0x34]
   12505:	mov    eax,DWORD PTR [eax]
   12507:	add    eax,DWORD PTR [ebp+0x8]
   1250a:	jmp    0x12531
   1250c:	inc    DWORD PTR [ebp-0x20]
   1250f:	mov    edx,DWORD PTR [ebp-0x38]
   12512:	jmp    0x1248a
   12517:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1251e:	jmp    0x12457
   12523:	mov    eax,DWORD PTR [ebp-0x28]
   12526:	jmp    0x12534
   12528:	xor    eax,eax
   1252a:	inc    eax
   1252b:	ret    
   1252c:	mov    esp,DWORD PTR [ebp-0x18]
   1252f:	xor    eax,eax
   12531:	mov    DWORD PTR [ebp-0x28],eax
   12534:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1253b:	call   0x1dbcd
   12540:	ret    0x8
   12543:	int3   
   12544:	int3   
   12545:	int3   
   12546:	int3   
   12547:	int3   
   12548:	mov    edi,edi
   1254a:	push   ebp
   1254b:	mov    ebp,esp
   1254d:	sub    esp,0x48
   12550:	mov    eax,DWORD PTR [ebp+0xc]
   12553:	mov    eax,DWORD PTR [eax]
   12555:	push   edi
   12556:	mov    DWORD PTR [ebp-0x30],eax
   12559:	lea    eax,[ebp-0x30]
   1255c:	push   eax
   1255d:	lea    eax,[ebp-0x48]
   12560:	push   eax
   12561:	xor    edi,edi
   12563:	push   0x1f0fff
   12568:	lea    eax,[ebp-0x10]
   1256b:	push   eax
   1256c:	mov    DWORD PTR [ebp-0x48],0x18
   12573:	mov    DWORD PTR [ebp-0x44],edi
   12576:	mov    DWORD PTR [ebp-0x3c],0x200
   1257d:	mov    DWORD PTR [ebp-0x40],edi
   12580:	mov    DWORD PTR [ebp-0x38],edi
   12583:	mov    DWORD PTR [ebp-0x34],edi
   12586:	mov    DWORD PTR [ebp-0x2c],edi
   12589:	mov    DWORD PTR [ebp-0x10],edi
   1258c:	call   0x11714
   12591:	call   eax
   12593:	test   eax,eax
   12595:	jl     0x128e9
   1259b:	push   ebx
   1259c:	push   esi
   1259d:	mov    esi,DWORD PTR ds:0x1f044
   125a3:	push   0x40
   125a5:	mov    ebx,0x1000
   125aa:	push   ebx
   125ab:	lea    eax,[ebp-0x14]
   125ae:	push   eax
   125af:	push   edi
   125b0:	lea    eax,[ebp-0xc]
   125b3:	push   eax
   125b4:	push   DWORD PTR [ebp-0x10]
   125b7:	mov    DWORD PTR [ebp-0xc],edi
   125ba:	mov    DWORD PTR [ebp-0x14],0x400
   125c1:	call   esi
   125c3:	test   eax,eax
   125c5:	jl     0x125d0
   125c7:	mov    eax,DWORD PTR [ebp-0xc]
   125ca:	mov    ecx,DWORD PTR [ebp+0xc]
   125cd:	mov    DWORD PTR [ecx+0x8],eax
   125d0:	push   0x4
   125d2:	push   ebx
   125d3:	lea    eax,[ebp-0x14]
   125d6:	push   eax
   125d7:	push   edi
   125d8:	lea    eax,[ebp-0x18]
   125db:	push   eax
   125dc:	push   DWORD PTR [ebp-0x10]
   125df:	mov    DWORD PTR [ebp-0x18],edi
   125e2:	mov    DWORD PTR [ebp-0x14],0x400
   125e9:	call   esi
   125eb:	test   eax,eax
   125ed:	jl     0x125f8
   125ef:	mov    eax,DWORD PTR [ebp-0x18]
   125f2:	mov    ecx,DWORD PTR [ebp+0xc]
   125f5:	mov    DWORD PTR [ecx+0xc],eax
   125f8:	lea    eax,[ebp-0x24]
   125fb:	push   eax
   125fc:	push   DWORD PTR [ebp-0x30]
   125ff:	call   0x11d26
   12604:	call   eax
   12606:	test   eax,eax
   12608:	jl     0x128e7
   1260e:	push   DWORD PTR [ebp-0x24]
   12611:	call   0x11b04
   12616:	call   eax
   12618:	mov    eax,DWORD PTR [ebp-0xc]
   1261b:	mov    DWORD PTR [ebp-0x20],edi
   1261e:	cmp    eax,edi
   12620:	je     0x128cd
   12626:	mov    esi,DWORD PTR [ebp-0x18]
   12629:	cmp    esi,edi
   1262b:	je     0x1283a
   12631:	push   0x214
   12636:	push   edi
   12637:	push   esi
   12638:	mov    DWORD PTR [ebp-0x4],eax
   1263b:	call   0x1db4c
   12640:	mov    eax,DWORD PTR [ebp-0x4]
   12643:	add    esp,0xc
   12646:	push   0x60
   12648:	lea    ebx,[esi+0xc]
   1264b:	push   eax
   1264c:	mov    DWORD PTR [ebx],edi
   1264e:	mov    DWORD PTR [esi],edi
   12650:	mov    DWORD PTR [ebp-0x20],eax
   12653:	call   0x198a4
   12658:	push   0x68
   1265a:	push   eax
   1265b:	call   0x198a4
   12660:	push   ebx
   12661:	push   eax
   12662:	call   0x198bc
   12667:	push   0x6a
   12669:	pop    ebx
   1266a:	push   ebx
   1266b:	push   eax
   1266c:	call   0x198a4
   12671:	push   edi
   12672:	push   eax
   12673:	call   0x198a4
   12678:	push   ebx
   12679:	push   eax
   1267a:	call   0x198a4
   1267f:	push   edi
   12680:	push   eax
   12681:	call   0x198a4
   12686:	push   0x68
   12688:	push   eax
   12689:	call   0x198a4
   1268e:	push   edi
   1268f:	push   eax
   12690:	mov    DWORD PTR [ebp-0x28],eax
   12693:	call   0x198bc
   12698:	push   ebx
   12699:	push   eax
   1269a:	call   0x198a4
   1269f:	push   edi
   126a0:	push   eax
   126a1:	call   0x198a4
   126a6:	push   ebx
   126a7:	push   eax
   126a8:	call   0x198a4
   126ad:	push   edi
   126ae:	push   eax
   126af:	call   0x198a4
   126b4:	push   0xb8
   126b9:	push   eax
   126ba:	call   0x198a4
   126bf:	push   DWORD PTR ds:0x77f70
   126c5:	push   eax
   126c6:	call   0x198bc
   126cb:	mov    ebx,0xc00b
   126d0:	push   ebx
   126d1:	push   eax
   126d2:	call   0x198d6
   126d7:	push   0x74
   126d9:	push   eax
   126da:	call   0x198a4
   126df:	push   0x9
   126e1:	push   eax
   126e2:	call   0x198a4
   126e7:	mov    edi,0xd0ff
   126ec:	push   edi
   126ed:	push   eax
   126ee:	call   0x198d6
   126f3:	push   0xb9
   126f8:	push   eax
   126f9:	call   0x198a4
   126fe:	lea    ecx,[esi+0x10]
   12701:	push   ecx
   12702:	push   eax
   12703:	call   0x198bc
   12708:	push   0x189
   1270d:	push   eax
   1270e:	call   0x198d6
   12713:	push   0x61
   12715:	push   eax
   12716:	call   0x198a4
   1271b:	and    DWORD PTR [ebp-0x8],0x0
   1271f:	mov    DWORD PTR [ebp-0x4],eax
   12722:	mov    eax,DWORD PTR [ebp+0x8]
   12725:	mov    DWORD PTR [ebp-0x1c],eax
   12728:	push   0x0
   1272a:	push   DWORD PTR [ebp-0x1c]
   1272d:	push   DWORD PTR [ebp-0x4]
   12730:	call   0x1a056
   12735:	mov    ecx,eax
   12737:	sub    ecx,DWORD PTR [ebp-0x1c]
   1273a:	mov    DWORD PTR [ebp-0x1c],eax
   1273d:	add    DWORD PTR [ebp-0x8],ecx
   12740:	add    DWORD PTR [ebp-0x4],ecx
   12743:	cmp    DWORD PTR [ebp-0x8],0x5
   12747:	jb     0x12728
   12749:	mov    ecx,DWORD PTR [ebp+0x8]
   1274c:	push   DWORD PTR [ebp-0x4]
   1274f:	mov    eax,DWORD PTR [ebp-0x8]
   12752:	add    eax,ecx
   12754:	push   eax
   12755:	call   0x1991a
   1275a:	push   eax
   1275b:	push   DWORD PTR [ebp-0x28]
   1275e:	mov    DWORD PTR [ebp-0x4],eax
   12761:	call   0x198bc
   12766:	mov    eax,DWORD PTR [ebp-0x4]
   12769:	push   0xeb
   1276e:	push   eax
   1276f:	mov    DWORD PTR [esi],eax
   12771:	call   0x198a4
   12776:	push   0x0
   12778:	push   eax
   12779:	mov    DWORD PTR [esi+0x4],eax
   1277c:	call   0x198a4
   12781:	push   0x68
   12783:	push   eax
   12784:	call   0x198a4
   12789:	push   0x3e8
   1278e:	push   eax
   1278f:	call   0x198bc
   12794:	push   0xb8
   12799:	push   eax
   1279a:	call   0x198a4
   1279f:	push   DWORD PTR ds:0x77f74
   127a5:	push   eax
   127a6:	call   0x198bc
   127ab:	push   ebx
   127ac:	push   eax
   127ad:	call   0x198d6
   127b2:	push   0x74
   127b4:	push   eax
   127b5:	call   0x198a4
   127ba:	push   0x2
   127bc:	push   eax
   127bd:	call   0x198a4
   127c2:	push   edi
   127c3:	push   eax
   127c4:	call   0x198d6
   127c9:	push   eax
   127ca:	push   DWORD PTR [esi]
   127cc:	call   0x1991a
   127d1:	mov    cl,al
   127d3:	sub    cl,BYTE PTR [esi+0x4]
   127d6:	push   0x68
   127d8:	dec    cl
   127da:	push   eax
   127db:	mov    BYTE PTR [esi+0x8],cl
   127de:	call   0x198a4
   127e3:	add    esi,0x14
   127e6:	push   esi
   127e7:	push   eax
   127e8:	call   0x198bc
   127ed:	push   0xb8
   127f2:	push   eax
   127f3:	call   0x198a4
   127f8:	push   DWORD PTR ds:0x77f68
   127fe:	push   eax
   127ff:	call   0x198bc
   12804:	push   ebx
   12805:	push   eax
   12806:	call   0x198d6
   1280b:	push   0x74
   1280d:	push   eax
   1280e:	call   0x198a4
   12813:	push   0x2
   12815:	push   eax
   12816:	call   0x198a4
   1281b:	push   edi
   1281c:	push   eax
   1281d:	call   0x198d6
   12822:	push   0xc2
   12827:	push   eax
   12828:	call   0x198a4
   1282d:	push   0x4
   1282f:	push   eax
   12830:	call   0x198d6
   12835:	mov    eax,DWORD PTR [ebp-0xc]
   12838:	xor    edi,edi
   1283a:	cmp    eax,edi
   1283c:	je     0x128cd
   12842:	add    eax,0x400
   12847:	lea    esi,[eax-0xc]
   1284a:	lea    ecx,[eax-0x8]
   1284d:	push   esi
   1284e:	lea    ebx,[eax-0x4]
   12851:	lea    edx,[eax-0x10]
   12854:	push   0x40
   12856:	add    eax,0xffffffe8
   12859:	push   ecx
   1285a:	mov    DWORD PTR [ebp-0x1c],eax
   1285d:	mov    eax,DWORD PTR [ebp+0x8]
   12860:	mov    DWORD PTR [ebx],eax
   12862:	push   ebx
   12863:	mov    DWORD PTR [ecx],0x5
   12869:	push   0xffffffff
   1286b:	mov    DWORD PTR [ebp-0x8],ecx
   1286e:	mov    DWORD PTR [ebp-0x28],edx
   12871:	mov    DWORD PTR [esi],edi
   12873:	call   DWORD PTR ds:0x77ee4
   12879:	test   eax,eax
   1287b:	jl     0x128cd
   1287d:	mov    eax,DWORD PTR [ebp-0x20]
   12880:	sub    eax,DWORD PTR [ebp+0x8]
   12883:	sub    eax,0x5
   12886:	push   eax
   12887:	mov    eax,DWORD PTR [ebp-0x1c]
   1288a:	inc    eax
   1288b:	push   eax
   1288c:	call   0x198bc
   12891:	push   0xe9
   12896:	push   DWORD PTR [ebp-0x1c]
   12899:	call   0x198a4
   1289e:	mov    eax,DWORD PTR [ebp-0x28]
   128a1:	push   eax
   128a2:	push   0x5
   128a4:	push   DWORD PTR [ebp-0x1c]
   128a7:	mov    DWORD PTR [eax],edi
   128a9:	push   DWORD PTR [ebp+0x8]
   128ac:	push   0xffffffff
   128ae:	call   DWORD PTR ds:0x77ed8
   128b4:	mov    eax,DWORD PTR [ebp+0xc]
   128b7:	mov    BYTE PTR [eax+0x10],0x1
   128bb:	lea    eax,[ebp-0x20]
   128be:	push   eax
   128bf:	push   DWORD PTR [esi]
   128c1:	push   DWORD PTR [ebp-0x8]
   128c4:	push   ebx
   128c5:	push   0xffffffff
   128c7:	call   DWORD PTR ds:0x77ee4
   128cd:	call   0x11ada
   128d2:	call   eax
   128d4:	mov    ecx,DWORD PTR [ebp-0x24]
   128d7:	call   DWORD PTR ds:0x1f060
   128dd:	push   DWORD PTR [ebp-0x10]
   128e0:	call   0x119de
   128e5:	call   eax
   128e7:	pop    esi
   128e8:	pop    ebx
   128e9:	pop    edi
   128ea:	leave  
   128eb:	ret    0x8
   128ee:	int3   
   128ef:	int3   
   128f0:	int3   
   128f1:	int3   
   128f2:	int3   
   128f3:	int3   
   128f4:	mov    edi,edi
   128f6:	push   ebp
   128f7:	mov    ebp,esp
   128f9:	sub    esp,0x18
   128fc:	and    DWORD PTR [ebp-0x18],0x0
   12900:	push   edi
   12901:	xor    eax,eax
   12903:	lea    edi,[ebp-0x14]
   12906:	stos   DWORD PTR es:[edi],eax
   12907:	stos   DWORD PTR es:[edi],eax
   12908:	stos   DWORD PTR es:[edi],eax
   12909:	stos   DWORD PTR es:[edi],eax
   1290a:	lea    eax,[ebp-0x18]
   1290d:	push   eax
   1290e:	push   0x1
   12910:	call   0x10f18
   12915:	pop    edi
   12916:	test   al,al
   12918:	je     0x1296f
   1291a:	cmp    DWORD PTR [ebp-0x18],0x0
   1291e:	je     0x1296f
   12920:	lea    eax,[ebp-0x4]
   12923:	push   eax
   12924:	push   DWORD PTR [ebp-0x18]
   12927:	call   0x11d26
   1292c:	call   eax
   1292e:	test   eax,eax
   12930:	jl     0x1296f
   12932:	push   esi
   12933:	push   DWORD PTR [ebp-0x4]
   12936:	call   0x11b04
   1293b:	call   eax
   1293d:	mov    esi,DWORD PTR [ebp-0xc]
   12940:	mov    eax,DWORD PTR [ebp+0x8]
   12943:	lea    edx,[esi+0x14]
   12946:	sub    edx,eax
   12948:	movzx  ecx,WORD PTR [eax]
   1294b:	mov    WORD PTR [edx+eax*1],cx
   1294f:	inc    eax
   12950:	inc    eax
   12951:	test   cx,cx
   12954:	jne    0x12948
   12956:	mov    eax,DWORD PTR [esi+0x4]
   12959:	mov    cl,BYTE PTR [esi+0x8]
   1295c:	mov    BYTE PTR [eax],cl
   1295e:	call   0x11ada
   12963:	call   eax
   12965:	mov    ecx,DWORD PTR [ebp-0x4]
   12968:	call   DWORD PTR ds:0x1f060
   1296e:	pop    esi
   1296f:	leave  
   12970:	ret    0x4
   12973:	int3   
   12974:	int3   
   12975:	int3   
   12976:	int3   
   12977:	int3   
   12978:	mov    edi,edi
   1297a:	push   ebp
   1297b:	mov    ebp,esp
   1297d:	push   ecx
   1297e:	and    DWORD PTR [ebp-0x4],0x0
   12982:	push   ebx
   12983:	push   esi
   12984:	push   edi
   12985:	mov    esi,0x1000
   1298a:	push   0x20736649
   1298f:	push   esi
   12990:	push   0x0
   12992:	call   DWORD PTR ds:0x1f064
   12998:	mov    edi,eax
   1299a:	test   edi,edi
   1299c:	je     0x129d0
   1299e:	lea    eax,[ebp-0x4]
   129a1:	push   eax
   129a2:	push   esi
   129a3:	push   edi
   129a4:	push   DWORD PTR [ebp+0x8]
   129a7:	call   0x11810
   129ac:	call   eax
   129ae:	mov    ebx,eax
   129b0:	cmp    ebx,0xc0000004
   129b6:	jne    0x129c3
   129b8:	push   0x0
   129ba:	push   edi
   129bb:	call   DWORD PTR ds:0x1f020
   129c1:	add    esi,esi
   129c3:	test   ebx,ebx
   129c5:	jne    0x1298a
   129c7:	mov    eax,edi
   129c9:	pop    edi
   129ca:	pop    esi
   129cb:	pop    ebx
   129cc:	leave  
   129cd:	ret    0x4
   129d0:	xor    eax,eax
   129d2:	jmp    0x129c9
   129d4:	int3   
   129d5:	int3   
   129d6:	int3   
   129d7:	int3   
   129d8:	int3   
   129d9:	int3   
   129da:	push   0x0
   129dc:	push   0x77ef4
   129e1:	call   0x11cfc
   129e6:	call   eax
   129e8:	push   0x100
   129ed:	push   0x0
   129ef:	push   0x775b8
   129f4:	call   0x1db4c
   129f9:	add    esp,0xc
   129fc:	ret    
   129fd:	int3   
   129fe:	int3   
   129ff:	int3   
   12a00:	int3   
   12a01:	int3   
   12a02:	mov    edi,edi
   12a04:	push   ebp
   12a05:	mov    ebp,esp
   12a07:	push   esi
   12a08:	push   DWORD PTR [ebp+0xc]
   12a0b:	mov    esi,ecx
   12a0d:	push   DWORD PTR [ebp+0x8]
   12a10:	call   0x11140
   12a15:	mov    eax,esi
   12a17:	pop    esi
   12a18:	pop    ebp
   12a19:	ret    0x8
   12a1c:	int3   
   12a1d:	int3   
   12a1e:	int3   
   12a1f:	int3   
   12a20:	int3   
   12a21:	int3   
   12a22:	mov    edi,edi
   12a24:	push   ebp
   12a25:	mov    ebp,esp
   12a27:	mov    eax,DWORD PTR [ebp+0x8]
   12a2a:	push   esi
   12a2b:	push   DWORD PTR [eax+0x4]
   12a2e:	mov    esi,ecx
   12a30:	push   DWORD PTR [eax]
   12a32:	call   0x11140
   12a37:	mov    eax,esi
   12a39:	pop    esi
   12a3a:	pop    ebp
   12a3b:	ret    0x4
   12a3e:	int3   
   12a3f:	int3   
   12a40:	int3   
   12a41:	int3   
   12a42:	int3   
   12a43:	int3   
   12a44:	mov    edi,edi
   12a46:	push   ebp
   12a47:	mov    ebp,esp
   12a49:	push   ebx
   12a4a:	push   esi
   12a4b:	push   edi
   12a4c:	mov    edi,DWORD PTR [ebp+0x8]
   12a4f:	mov    eax,DWORD PTR [edi+0x4]
   12a52:	mov    esi,ecx
   12a54:	mov    ebx,DWORD PTR [esi]
   12a56:	mov    DWORD PTR [esi+0x4],eax
   12a59:	inc    eax
   12a5a:	push   eax
   12a5b:	call   0x10a06
   12a60:	push   DWORD PTR [esi+0x4]
   12a63:	mov    DWORD PTR [esi],eax
   12a65:	push   DWORD PTR [edi]
   12a67:	push   eax
   12a68:	call   0x1db58
   12a6d:	mov    eax,DWORD PTR [esi+0x4]
   12a70:	mov    ecx,DWORD PTR [esi]
   12a72:	push   ebx
   12a73:	mov    BYTE PTR [eax+ecx*1],0x0
   12a77:	call   0x10a3a
   12a7c:	add    esp,0x14
   12a7f:	pop    edi
   12a80:	mov    eax,esi
   12a82:	pop    esi
   12a83:	pop    ebx
   12a84:	pop    ebp
   12a85:	ret    0x4
   12a88:	int3   
   12a89:	int3   
   12a8a:	int3   
   12a8b:	int3   
   12a8c:	int3   
   12a8d:	int3   
   12a8e:	mov    edi,edi
   12a90:	push   esi
   12a91:	push   edi
   12a92:	push   0x20736649
   12a97:	push   0x20
   12a99:	push   0x0
   12a9b:	mov    esi,ecx
   12a9d:	call   DWORD PTR ds:0x1f064
   12aa3:	push   0x0
   12aa5:	mov    edi,eax
   12aa7:	push   0x1
   12aa9:	mov    ecx,esi
   12aab:	mov    DWORD PTR [esi],edi
   12aad:	call   0x1119e
   12ab2:	mov    DWORD PTR [esi+0x8],eax
   12ab5:	mov    DWORD PTR [esi+0xc],edx
   12ab8:	test   edi,edi
   12aba:	jne    0x12ac7
   12abc:	push   0xc000009a
   12ac1:	call   DWORD PTR ds:0x1f018
   12ac7:	pop    edi
   12ac8:	mov    eax,esi
   12aca:	pop    esi
   12acb:	ret    
   12acc:	int3   
   12acd:	int3   
   12ace:	int3   
   12acf:	int3   
   12ad0:	int3   
   12ad1:	int3   
   12ad2:	mov    edi,edi
   12ad4:	push   ebp
   12ad5:	mov    ebp,esp
   12ad7:	push   esi
   12ad8:	push   edi
   12ad9:	mov    edi,DWORD PTR [ebp+0x8]
   12adc:	push   edi
   12add:	mov    esi,ecx
   12adf:	call   0x12a44
   12ae4:	lea    eax,[edi+0x8]
   12ae7:	push   eax
   12ae8:	lea    ecx,[esi+0x8]
   12aeb:	call   0x12a44
   12af0:	lea    eax,[edi+0x10]
   12af3:	push   eax
   12af4:	lea    ecx,[esi+0x10]
   12af7:	call   0x12a44
   12afc:	lea    eax,[edi+0x18]
   12aff:	push   eax
   12b00:	lea    ecx,[esi+0x18]
   12b03:	call   0x12a44
   12b08:	mov    eax,DWORD PTR [edi+0x20]
   12b0b:	mov    DWORD PTR [esi+0x20],eax
   12b0e:	mov    eax,DWORD PTR [edi+0x24]
   12b11:	mov    DWORD PTR [esi+0x24],eax
   12b14:	mov    eax,DWORD PTR [edi+0x28]
   12b17:	mov    DWORD PTR [esi+0x28],eax
   12b1a:	mov    eax,DWORD PTR [edi+0x2c]
   12b1d:	mov    DWORD PTR [esi+0x2c],eax
   12b20:	mov    eax,DWORD PTR [edi+0x30]
   12b23:	mov    DWORD PTR [esi+0x30],eax
   12b26:	mov    eax,DWORD PTR [edi+0x34]
   12b29:	add    edi,0x38
   12b2c:	push   edi
   12b2d:	lea    ecx,[esi+0x38]
   12b30:	mov    DWORD PTR [esi+0x34],eax
   12b33:	call   0x12a44
   12b38:	pop    edi
   12b39:	mov    eax,esi
   12b3b:	pop    esi
   12b3c:	pop    ebp
   12b3d:	ret    0x4
   12b40:	int3   
   12b41:	int3   
   12b42:	int3   
   12b43:	int3   
   12b44:	int3   
   12b45:	int3   
   12b46:	mov    edi,edi
   12b48:	push   esi
   12b49:	mov    esi,ecx
   12b4b:	lea    ecx,[esi+0x8]
   12b4e:	call   0x11f44
   12b53:	push   DWORD PTR [esi]
   12b55:	call   0x10a3a
   12b5a:	pop    ecx
   12b5b:	pop    esi
   12b5c:	ret    
   12b5d:	int3   
   12b5e:	int3   
   12b5f:	int3   
   12b60:	int3   
   12b61:	int3   
   12b62:	mov    edi,edi
   12b64:	push   ebp
   12b65:	mov    ebp,esp
   12b67:	push   esi
   12b68:	push   DWORD PTR [ebp+0xc]
   12b6b:	mov    esi,ecx
   12b6d:	push   DWORD PTR [ebp+0x8]
   12b70:	call   0x111e4
   12b75:	mov    eax,esi
   12b77:	pop    esi
   12b78:	pop    ebp
   12b79:	ret    0x8
   12b7c:	int3   
   12b7d:	int3   
   12b7e:	int3   
   12b7f:	int3   
   12b80:	int3   
   12b81:	int3   
   12b82:	mov    edi,edi
   12b84:	push   ebp
   12b85:	mov    ebp,esp
   12b87:	mov    eax,DWORD PTR [ebp+0x8]
   12b8a:	push   esi
   12b8b:	push   DWORD PTR [eax+0x4]
   12b8e:	mov    esi,ecx
   12b90:	push   DWORD PTR [eax]
   12b92:	call   0x111e4
   12b97:	mov    eax,esi
   12b99:	pop    esi
   12b9a:	pop    ebp
   12b9b:	ret    0x4
   12b9e:	int3   
   12b9f:	int3   
   12ba0:	int3   
   12ba1:	int3   
   12ba2:	int3   
   12ba3:	int3   
   12ba4:	mov    edi,edi
   12ba6:	push   ebp
   12ba7:	mov    ebp,esp
   12ba9:	push   ebx
   12baa:	push   esi
   12bab:	push   edi
   12bac:	mov    edi,DWORD PTR [ebp+0x8]
   12baf:	mov    eax,DWORD PTR [edi+0x4]
   12bb2:	mov    esi,ecx
   12bb4:	mov    ebx,DWORD PTR [esi]
   12bb6:	mov    DWORD PTR [esi+0x4],eax
   12bb9:	xor    ecx,ecx
   12bbb:	push   0x2
   12bbd:	inc    eax
   12bbe:	pop    edx
   12bbf:	mul    edx
   12bc1:	seto   cl
   12bc4:	neg    ecx
   12bc6:	or     ecx,eax
   12bc8:	push   ecx
   12bc9:	call   0x10a06
   12bce:	mov    ecx,DWORD PTR [esi+0x4]
   12bd1:	add    ecx,ecx
   12bd3:	push   ecx
   12bd4:	mov    DWORD PTR [esi],eax
   12bd6:	push   DWORD PTR [edi]
   12bd8:	push   eax
   12bd9:	call   0x1db58
   12bde:	mov    eax,DWORD PTR [esi+0x4]
   12be1:	mov    ecx,DWORD PTR [esi]
   12be3:	xor    edx,edx
   12be5:	push   ebx
   12be6:	mov    WORD PTR [ecx+eax*2],dx
   12bea:	call   0x10a3a
   12bef:	add    esp,0x14
   12bf2:	pop    edi
   12bf3:	mov    eax,esi
   12bf5:	pop    esi
   12bf6:	pop    ebx
   12bf7:	pop    ebp
   12bf8:	ret    0x4
   12bfb:	int3   
   12bfc:	int3   
   12bfd:	int3   
   12bfe:	int3   
   12bff:	int3   
   12c00:	mov    edi,edi
   12c02:	push   ebp
   12c03:	mov    ebp,esp
   12c05:	push   esi
   12c06:	mov    esi,DWORD PTR [ebp+0x8]
   12c09:	lea    eax,[ebp+0xc]
   12c0c:	push   eax
   12c0d:	mov    ecx,esi
   12c0f:	call   0x12b82
   12c14:	xor    ecx,ecx
   12c16:	inc    ecx
   12c17:	cmp    DWORD PTR [esi+0x4],ecx
   12c1a:	jbe    0x12c2e
   12c1c:	mov    eax,DWORD PTR [esi]
   12c1e:	lea    eax,[eax+ecx*2]
   12c21:	mov    dx,WORD PTR [eax-0x2]
   12c25:	xor    WORD PTR [eax],dx
   12c28:	inc    ecx
   12c29:	cmp    ecx,DWORD PTR [esi+0x4]
   12c2c:	jb     0x12c1c
   12c2e:	push   DWORD PTR [ebp+0xc]
   12c31:	call   0x10a3a
   12c36:	pop    ecx
   12c37:	mov    eax,esi
   12c39:	pop    esi
   12c3a:	pop    ebp
   12c3b:	ret    0xc
   12c3e:	int3   
   12c3f:	int3   
   12c40:	int3   
   12c41:	int3   
   12c42:	int3   
   12c43:	int3   
   12c44:	mov    edi,edi
   12c46:	push   ebp
   12c47:	mov    ebp,esp
   12c49:	push   esi
   12c4a:	mov    esi,DWORD PTR [ebp+0x8]
   12c4d:	lea    eax,[ebp+0xc]
   12c50:	push   eax
   12c51:	mov    ecx,esi
   12c53:	call   0x12a22
   12c58:	xor    ecx,ecx
   12c5a:	inc    ecx
   12c5b:	cmp    DWORD PTR [esi+0x4],ecx
   12c5e:	jbe    0x12c6f
   12c60:	mov    eax,DWORD PTR [esi]
   12c62:	add    eax,ecx
   12c64:	mov    dl,BYTE PTR [eax-0x1]
   12c67:	xor    BYTE PTR [eax],dl
   12c69:	inc    ecx
   12c6a:	cmp    ecx,DWORD PTR [esi+0x4]
   12c6d:	jb     0x12c60
   12c6f:	push   DWORD PTR [ebp+0xc]
   12c72:	call   0x10a3a
   12c77:	pop    ecx
   12c78:	mov    eax,esi
   12c7a:	pop    esi
   12c7b:	pop    ebp
   12c7c:	ret    0xc
   12c7f:	int3   
   12c80:	int3   
   12c81:	int3   
   12c82:	int3   
   12c83:	int3   
   12c84:	mov    edi,edi
   12c86:	push   ebp
   12c87:	mov    ebp,esp
   12c89:	push   esi
   12c8a:	push   DWORD PTR [ebp+0x8]
   12c8d:	mov    esi,ecx
   12c8f:	call   0x12a22
   12c94:	push   DWORD PTR [ebp+0xc]
   12c97:	lea    ecx,[esi+0x8]
   12c9a:	call   0x12a22
   12c9f:	mov    eax,esi
   12ca1:	pop    esi
   12ca2:	pop    ebp
   12ca3:	ret    0x8
   12ca6:	int3   
   12ca7:	int3   
   12ca8:	int3   
   12ca9:	int3   
   12caa:	int3   
   12cab:	int3   
   12cac:	mov    edi,edi
   12cae:	push   ebp
   12caf:	mov    ebp,esp
   12cb1:	mov    eax,DWORD PTR [ebp+0x8]
   12cb4:	mov    eax,DWORD PTR [eax]
   12cb6:	push   esi
   12cb7:	push   DWORD PTR [ebp+0xc]
   12cba:	mov    esi,ecx
   12cbc:	lea    ecx,[esi+0x4]
   12cbf:	mov    DWORD PTR [esi],eax
   12cc1:	call   0x11f7a
   12cc6:	mov    eax,esi
   12cc8:	pop    esi
   12cc9:	pop    ebp
   12cca:	ret    0x8
   12ccd:	int3   
   12cce:	int3   
   12ccf:	int3   
   12cd0:	int3   
   12cd1:	int3   
   12cd2:	mov    edi,edi
   12cd4:	push   ebp
   12cd5:	mov    ebp,esp
   12cd7:	push   esi
   12cd8:	push   edi
   12cd9:	mov    edi,DWORD PTR [ebp+0x8]
   12cdc:	push   edi
   12cdd:	mov    esi,ecx
   12cdf:	call   0x12a22
   12ce4:	lea    eax,[edi+0x8]
   12ce7:	push   eax
   12ce8:	lea    ecx,[esi+0x8]
   12ceb:	call   0x12a22
   12cf0:	lea    eax,[edi+0x10]
   12cf3:	push   eax
   12cf4:	lea    ecx,[esi+0x10]
   12cf7:	call   0x12a22
   12cfc:	lea    eax,[edi+0x18]
   12cff:	push   eax
   12d00:	lea    ecx,[esi+0x18]
   12d03:	call   0x12a22
   12d08:	mov    eax,DWORD PTR [edi+0x20]
   12d0b:	mov    DWORD PTR [esi+0x20],eax
   12d0e:	mov    eax,DWORD PTR [edi+0x24]
   12d11:	mov    DWORD PTR [esi+0x24],eax
   12d14:	mov    eax,DWORD PTR [edi+0x28]
   12d17:	mov    DWORD PTR [esi+0x28],eax
   12d1a:	mov    eax,DWORD PTR [edi+0x2c]
   12d1d:	mov    DWORD PTR [esi+0x2c],eax
   12d20:	mov    eax,DWORD PTR [edi+0x30]
   12d23:	mov    DWORD PTR [esi+0x30],eax
   12d26:	mov    eax,DWORD PTR [edi+0x34]
   12d29:	add    edi,0x38
   12d2c:	push   edi
   12d2d:	lea    ecx,[esi+0x38]
   12d30:	mov    DWORD PTR [esi+0x34],eax
   12d33:	call   0x12a22
   12d38:	pop    edi
   12d39:	mov    eax,esi
   12d3b:	pop    esi
   12d3c:	pop    ebp
   12d3d:	ret    0x4
   12d40:	int3   
   12d41:	int3   
   12d42:	int3   
   12d43:	int3   
   12d44:	int3   
   12d45:	int3   
   12d46:	mov    edi,edi
   12d48:	push   ebp
   12d49:	mov    ebp,esp
   12d4b:	mov    eax,DWORD PTR [ebp+0x8]
   12d4e:	mov    edx,DWORD PTR ds:0x788bc
   12d54:	jmp    0x12d58
   12d56:	mov    eax,ecx
   12d58:	mov    ecx,DWORD PTR [eax]
   12d5a:	cmp    ecx,edx
   12d5c:	jne    0x12d56
   12d5e:	pop    ebp
   12d5f:	ret    0x4
   12d62:	int3   
   12d63:	int3   
   12d64:	int3   
   12d65:	int3   
   12d66:	int3   
   12d67:	int3   
   12d68:	mov    edi,edi
   12d6a:	push   ebp
   12d6b:	mov    ebp,esp
   12d6d:	push   esi
   12d6e:	push   DWORD PTR [ebp+0x8]
   12d71:	mov    esi,ecx
   12d73:	call   0x12b82
   12d78:	push   DWORD PTR [ebp+0xc]
   12d7b:	lea    ecx,[esi+0x8]
   12d7e:	call   0x12b82
   12d83:	mov    eax,esi
   12d85:	pop    esi
   12d86:	pop    ebp
   12d87:	ret    0x8
   12d8a:	int3   
   12d8b:	int3   
   12d8c:	int3   
   12d8d:	int3   
   12d8e:	int3   
   12d8f:	int3   
   12d90:	mov    edi,edi
   12d92:	push   ebp
   12d93:	mov    ebp,esp
   12d95:	mov    eax,DWORD PTR [ecx+0x4]
   12d98:	mov    ecx,DWORD PTR [eax+0x4]
   12d9b:	mov    edx,DWORD PTR ds:0x788b0
   12da1:	cmp    ecx,edx
   12da3:	je     0x12dbe
   12da5:	push   esi
   12da6:	mov    esi,DWORD PTR [ebp+0x8]
   12da9:	mov    esi,DWORD PTR [esi]
   12dab:	cmp    DWORD PTR [ecx+0xc],esi
   12dae:	jae    0x12db5
   12db0:	mov    ecx,DWORD PTR [ecx+0x8]
   12db3:	jmp    0x12db9
   12db5:	mov    eax,ecx
   12db7:	mov    ecx,DWORD PTR [ecx]
   12db9:	cmp    ecx,edx
   12dbb:	jne    0x12dab
   12dbd:	pop    esi
   12dbe:	pop    ebp
   12dbf:	ret    0x4
   12dc2:	int3   
   12dc3:	int3   
   12dc4:	int3   
   12dc5:	int3   
   12dc6:	int3   
   12dc7:	int3   
   12dc8:	mov    edi,edi
   12dca:	push   ebp
   12dcb:	mov    ebp,esp
   12dcd:	mov    edx,DWORD PTR [ebp+0x8]
   12dd0:	mov    eax,DWORD PTR [edx+0x8]
   12dd3:	push   esi
   12dd4:	mov    esi,DWORD PTR [eax]
   12dd6:	mov    DWORD PTR [edx+0x8],esi
   12dd9:	mov    esi,DWORD PTR [eax]
   12ddb:	cmp    esi,DWORD PTR ds:0x788b0
   12de1:	je     0x12de6
   12de3:	mov    DWORD PTR [esi+0x4],edx
   12de6:	mov    esi,DWORD PTR [edx+0x4]
   12de9:	mov    DWORD PTR [eax+0x4],esi
   12dec:	mov    ecx,DWORD PTR [ecx+0x4]
   12def:	pop    esi
   12df0:	cmp    edx,DWORD PTR [ecx+0x4]
   12df3:	jne    0x12dfa
   12df5:	mov    DWORD PTR [ecx+0x4],eax
   12df8:	jmp    0x12e08
   12dfa:	mov    ecx,DWORD PTR [edx+0x4]
   12dfd:	cmp    edx,DWORD PTR [ecx]
   12dff:	jne    0x12e05
   12e01:	mov    DWORD PTR [ecx],eax
   12e03:	jmp    0x12e08
   12e05:	mov    DWORD PTR [ecx+0x8],eax
   12e08:	mov    DWORD PTR [eax],edx
   12e0a:	mov    DWORD PTR [edx+0x4],eax
   12e0d:	pop    ebp
   12e0e:	ret    0x4
   12e11:	int3   
   12e12:	int3   
   12e13:	int3   
   12e14:	int3   
   12e15:	int3   
   12e16:	mov    edi,edi
   12e18:	push   ebp
   12e19:	mov    ebp,esp
   12e1b:	mov    edx,DWORD PTR [ebp+0x8]
   12e1e:	mov    eax,DWORD PTR [edx]
   12e20:	push   esi
   12e21:	mov    esi,DWORD PTR [eax+0x8]
   12e24:	mov    DWORD PTR [edx],esi
   12e26:	mov    esi,DWORD PTR [eax+0x8]
   12e29:	cmp    esi,DWORD PTR ds:0x788b0
   12e2f:	je     0x12e34
   12e31:	mov    DWORD PTR [esi+0x4],edx
   12e34:	mov    esi,DWORD PTR [edx+0x4]
   12e37:	mov    DWORD PTR [eax+0x4],esi
   12e3a:	mov    ecx,DWORD PTR [ecx+0x4]
   12e3d:	pop    esi
   12e3e:	cmp    edx,DWORD PTR [ecx+0x4]
   12e41:	jne    0x12e48
   12e43:	mov    DWORD PTR [ecx+0x4],eax
   12e46:	jmp    0x12e57
   12e48:	mov    ecx,DWORD PTR [edx+0x4]
   12e4b:	cmp    edx,DWORD PTR [ecx+0x8]
   12e4e:	jne    0x12e55
   12e50:	mov    DWORD PTR [ecx+0x8],eax
   12e53:	jmp    0x12e57
   12e55:	mov    DWORD PTR [ecx],eax
   12e57:	mov    DWORD PTR [eax+0x8],edx
   12e5a:	mov    DWORD PTR [edx+0x4],eax
   12e5d:	pop    ebp
   12e5e:	ret    0x4
   12e61:	int3   
   12e62:	int3   
   12e63:	int3   
   12e64:	int3   
   12e65:	int3   
   12e66:	mov    edi,edi
   12e68:	push   ebp
   12e69:	mov    ebp,esp
   12e6b:	mov    eax,DWORD PTR [ecx+0x4]
   12e6e:	push   esi
   12e6f:	mov    esi,DWORD PTR [eax+0x4]
   12e72:	push   edi
   12e73:	mov    edi,eax
   12e75:	jmp    0x12e90
   12e77:	push   DWORD PTR [ebp+0x8]
   12e7a:	lea    eax,[esi+0x10]
   12e7d:	push   eax
   12e7e:	call   0x19864
   12e83:	test   al,al
   12e85:	je     0x12e8c
   12e87:	mov    esi,DWORD PTR [esi+0x8]
   12e8a:	jmp    0x12e90
   12e8c:	mov    edi,esi
   12e8e:	mov    esi,DWORD PTR [esi]
   12e90:	cmp    esi,DWORD PTR ds:0x788bc
   12e96:	jne    0x12e77
   12e98:	mov    eax,edi
   12e9a:	pop    edi
   12e9b:	pop    esi
   12e9c:	pop    ebp
   12e9d:	ret    0x4
   12ea0:	int3   
   12ea1:	int3   
   12ea2:	int3   
   12ea3:	int3   
   12ea4:	int3   
   12ea5:	int3   
   12ea6:	mov    edi,edi
   12ea8:	push   ebp
   12ea9:	mov    ebp,esp
   12eab:	mov    eax,DWORD PTR [ecx+0x4]
   12eae:	push   esi
   12eaf:	mov    esi,DWORD PTR [eax+0x4]
   12eb2:	push   edi
   12eb3:	mov    edi,eax
   12eb5:	jmp    0x12ed0
   12eb7:	push   DWORD PTR [ebp+0x8]
   12eba:	lea    eax,[esi+0xc]
   12ebd:	push   eax
   12ebe:	call   0x19864
   12ec3:	test   al,al
   12ec5:	je     0x12ecc
   12ec7:	mov    esi,DWORD PTR [esi+0x8]
   12eca:	jmp    0x12ed0
   12ecc:	mov    edi,esi
   12ece:	mov    esi,DWORD PTR [esi]
   12ed0:	cmp    esi,DWORD PTR ds:0x788c0
   12ed6:	jne    0x12eb7
   12ed8:	mov    eax,edi
   12eda:	pop    edi
   12edb:	pop    esi
   12edc:	pop    ebp
   12edd:	ret    0x4
   12ee0:	int3   
   12ee1:	int3   
   12ee2:	int3   
   12ee3:	int3   
   12ee4:	int3   
   12ee5:	int3   
   12ee6:	mov    edi,edi
   12ee8:	push   ebp
   12ee9:	mov    ebp,esp
   12eeb:	mov    eax,DWORD PTR [ecx+0x4]
   12eee:	mov    ecx,DWORD PTR [eax+0x4]
   12ef1:	mov    edx,DWORD PTR ds:0x788c4
   12ef7:	cmp    ecx,edx
   12ef9:	je     0x12f14
   12efb:	push   esi
   12efc:	mov    esi,DWORD PTR [ebp+0x8]
   12eff:	mov    esi,DWORD PTR [esi]
   12f01:	cmp    DWORD PTR [ecx+0xc],esi
   12f04:	jge    0x12f0b
   12f06:	mov    ecx,DWORD PTR [ecx+0x8]
   12f09:	jmp    0x12f0f
   12f0b:	mov    eax,ecx
   12f0d:	mov    ecx,DWORD PTR [ecx]
   12f0f:	cmp    ecx,edx
   12f11:	jne    0x12f01
   12f13:	pop    esi
   12f14:	pop    ebp
   12f15:	ret    0x4
   12f18:	int3   
   12f19:	int3   
   12f1a:	int3   
   12f1b:	int3   
   12f1c:	int3   
   12f1d:	int3   
   12f1e:	mov    edi,edi
   12f20:	push   esi
   12f21:	mov    esi,ecx
   12f23:	mov    ecx,DWORD PTR [esi]
   12f25:	mov    eax,DWORD PTR [ecx+0x8]
   12f28:	cmp    eax,DWORD PTR ds:0x788b8
   12f2e:	je     0x12f3c
   12f30:	push   eax
   12f31:	call   0x112fa
   12f36:	jmp    0x12f4b
   12f38:	mov    DWORD PTR [esi],eax
   12f3a:	mov    ecx,eax
   12f3c:	mov    eax,DWORD PTR [ecx+0x4]
   12f3f:	cmp    ecx,DWORD PTR [eax+0x8]
   12f42:	je     0x12f38
   12f44:	mov    ecx,DWORD PTR [esi]
   12f46:	cmp    DWORD PTR [ecx+0x8],eax
   12f49:	je     0x12f4d
   12f4b:	mov    DWORD PTR [esi],eax
   12f4d:	pop    esi
   12f4e:	ret    
   12f4f:	int3   
   12f50:	int3   
   12f51:	int3   
   12f52:	int3   
   12f53:	int3   
   12f54:	mov    edi,edi
   12f56:	push   esi
   12f57:	mov    esi,ecx
   12f59:	mov    ecx,DWORD PTR [esi]
   12f5b:	cmp    DWORD PTR [ecx+0x10],0x0
   12f5f:	jne    0x12f6e
   12f61:	mov    eax,DWORD PTR [ecx+0x4]
   12f64:	cmp    DWORD PTR [eax+0x4],ecx
   12f67:	jne    0x12f6e
   12f69:	mov    eax,DWORD PTR [ecx+0x8]
   12f6c:	jmp    0x12f8b
   12f6e:	mov    eax,DWORD PTR [ecx]
   12f70:	cmp    eax,DWORD PTR ds:0x788b4
   12f76:	je     0x12f84
   12f78:	push   eax
   12f79:	call   0x11294
   12f7e:	jmp    0x12f8b
   12f80:	mov    DWORD PTR [esi],eax
   12f82:	mov    ecx,eax
   12f84:	mov    eax,DWORD PTR [ecx+0x4]
   12f87:	cmp    ecx,DWORD PTR [eax]
   12f89:	je     0x12f80
   12f8b:	mov    DWORD PTR [esi],eax
   12f8d:	pop    esi
   12f8e:	ret    
   12f8f:	int3   
   12f90:	int3   
   12f91:	int3   
   12f92:	int3   
   12f93:	int3   
   12f94:	mov    edi,edi
   12f96:	push   esi
   12f97:	mov    esi,ecx
   12f99:	mov    ecx,DWORD PTR [esi]
   12f9b:	mov    eax,DWORD PTR [ecx+0x8]
   12f9e:	cmp    eax,DWORD PTR ds:0x788b4
   12fa4:	je     0x12fb2
   12fa6:	push   eax
   12fa7:	call   0x112b6
   12fac:	jmp    0x12fc1
   12fae:	mov    DWORD PTR [esi],eax
   12fb0:	mov    ecx,eax
   12fb2:	mov    eax,DWORD PTR [ecx+0x4]
   12fb5:	cmp    ecx,DWORD PTR [eax+0x8]
   12fb8:	je     0x12fae
   12fba:	mov    ecx,DWORD PTR [esi]
   12fbc:	cmp    DWORD PTR [ecx+0x8],eax
   12fbf:	je     0x12fc3
   12fc1:	mov    DWORD PTR [esi],eax
   12fc3:	pop    esi
   12fc4:	ret    
   12fc5:	int3   
   12fc6:	int3   
   12fc7:	int3   
   12fc8:	int3   
   12fc9:	int3   
   12fca:	mov    edi,edi
   12fcc:	push   ebp
   12fcd:	mov    ebp,esp
   12fcf:	mov    edx,DWORD PTR [ebp+0x8]
   12fd2:	mov    eax,DWORD PTR [edx+0x8]
   12fd5:	push   esi
   12fd6:	mov    esi,DWORD PTR [eax]
   12fd8:	mov    DWORD PTR [edx+0x8],esi
   12fdb:	mov    esi,DWORD PTR [eax]
   12fdd:	cmp    esi,DWORD PTR ds:0x788b4
   12fe3:	je     0x12fe8
   12fe5:	mov    DWORD PTR [esi+0x4],edx
   12fe8:	mov    esi,DWORD PTR [edx+0x4]
   12feb:	mov    DWORD PTR [eax+0x4],esi
   12fee:	mov    ecx,DWORD PTR [ecx+0x4]
   12ff1:	pop    esi
   12ff2:	cmp    edx,DWORD PTR [ecx+0x4]
   12ff5:	jne    0x12ffc
   12ff7:	mov    DWORD PTR [ecx+0x4],eax
   12ffa:	jmp    0x1300a
   12ffc:	mov    ecx,DWORD PTR [edx+0x4]
   12fff:	cmp    edx,DWORD PTR [ecx]
   13001:	jne    0x13007
   13003:	mov    DWORD PTR [ecx],eax
   13005:	jmp    0x1300a
   13007:	mov    DWORD PTR [ecx+0x8],eax
   1300a:	mov    DWORD PTR [eax],edx
   1300c:	mov    DWORD PTR [edx+0x4],eax
   1300f:	pop    ebp
   13010:	ret    0x4
   13013:	int3   
   13014:	int3   
   13015:	int3   
   13016:	int3   
   13017:	int3   
   13018:	mov    edi,edi
   1301a:	push   ebp
   1301b:	mov    ebp,esp
   1301d:	mov    edx,DWORD PTR [ebp+0x8]
   13020:	mov    eax,DWORD PTR [edx]
   13022:	push   esi
   13023:	mov    esi,DWORD PTR [eax+0x8]
   13026:	mov    DWORD PTR [edx],esi
   13028:	mov    esi,DWORD PTR [eax+0x8]
   1302b:	cmp    esi,DWORD PTR ds:0x788b4
   13031:	je     0x13036
   13033:	mov    DWORD PTR [esi+0x4],edx
   13036:	mov    esi,DWORD PTR [edx+0x4]
   13039:	mov    DWORD PTR [eax+0x4],esi
   1303c:	mov    ecx,DWORD PTR [ecx+0x4]
   1303f:	pop    esi
   13040:	cmp    edx,DWORD PTR [ecx+0x4]
   13043:	jne    0x1304a
   13045:	mov    DWORD PTR [ecx+0x4],eax
   13048:	jmp    0x13059
   1304a:	mov    ecx,DWORD PTR [edx+0x4]
   1304d:	cmp    edx,DWORD PTR [ecx+0x8]
   13050:	jne    0x13057
   13052:	mov    DWORD PTR [ecx+0x8],eax
   13055:	jmp    0x13059
   13057:	mov    DWORD PTR [ecx],eax
   13059:	mov    DWORD PTR [eax+0x8],edx
   1305c:	mov    DWORD PTR [edx+0x4],eax
   1305f:	pop    ebp
   13060:	ret    0x4
   13063:	int3   
   13064:	int3   
   13065:	int3   
   13066:	int3   
   13067:	int3   
   13068:	mov    edi,edi
   1306a:	push   ebp
   1306b:	mov    ebp,esp
   1306d:	mov    eax,DWORD PTR [ecx+0x4]
   13070:	push   esi
   13071:	mov    esi,DWORD PTR [eax+0x4]
   13074:	push   edi
   13075:	mov    edi,eax
   13077:	jmp    0x13092
   13079:	push   DWORD PTR [ebp+0x8]
   1307c:	lea    eax,[esi+0x10]
   1307f:	push   eax
   13080:	call   0x19864
   13085:	test   al,al
   13087:	je     0x1308e
   13089:	mov    esi,DWORD PTR [esi+0x8]
   1308c:	jmp    0x13092
   1308e:	mov    edi,esi
   13090:	mov    esi,DWORD PTR [esi]
   13092:	cmp    esi,DWORD PTR ds:0x788b8
   13098:	jne    0x13079
   1309a:	mov    eax,edi
   1309c:	pop    edi
   1309d:	pop    esi
   1309e:	pop    ebp
   1309f:	ret    0x4
   130a2:	int3   
   130a3:	int3   
   130a4:	int3   
   130a5:	int3   
   130a6:	int3   
   130a7:	int3   
   130a8:	mov    edi,edi
   130aa:	push   ebp
   130ab:	mov    ebp,esp
   130ad:	mov    edx,DWORD PTR [ebp+0x8]
   130b0:	mov    eax,DWORD PTR [edx+0x8]
   130b3:	push   esi
   130b4:	mov    esi,DWORD PTR [eax]
   130b6:	mov    DWORD PTR [edx+0x8],esi
   130b9:	mov    esi,DWORD PTR [eax]
   130bb:	cmp    esi,DWORD PTR ds:0x788b8
   130c1:	je     0x130c6
   130c3:	mov    DWORD PTR [esi+0x4],edx
   130c6:	mov    esi,DWORD PTR [edx+0x4]
   130c9:	mov    DWORD PTR [eax+0x4],esi
   130cc:	mov    ecx,DWORD PTR [ecx+0x4]
   130cf:	pop    esi
   130d0:	cmp    edx,DWORD PTR [ecx+0x4]
   130d3:	jne    0x130da
   130d5:	mov    DWORD PTR [ecx+0x4],eax
   130d8:	jmp    0x130e8
   130da:	mov    ecx,DWORD PTR [edx+0x4]
   130dd:	cmp    edx,DWORD PTR [ecx]
   130df:	jne    0x130e5
   130e1:	mov    DWORD PTR [ecx],eax
   130e3:	jmp    0x130e8
   130e5:	mov    DWORD PTR [ecx+0x8],eax
   130e8:	mov    DWORD PTR [eax],edx
   130ea:	mov    DWORD PTR [edx+0x4],eax
   130ed:	pop    ebp
   130ee:	ret    0x4
   130f1:	int3   
   130f2:	int3   
   130f3:	int3   
   130f4:	int3   
   130f5:	int3   
   130f6:	mov    edi,edi
   130f8:	push   ebp
   130f9:	mov    ebp,esp
   130fb:	mov    edx,DWORD PTR [ebp+0x8]
   130fe:	mov    eax,DWORD PTR [edx]
   13100:	push   esi
   13101:	mov    esi,DWORD PTR [eax+0x8]
   13104:	mov    DWORD PTR [edx],esi
   13106:	mov    esi,DWORD PTR [eax+0x8]
   13109:	cmp    esi,DWORD PTR ds:0x788b8
   1310f:	je     0x13114
   13111:	mov    DWORD PTR [esi+0x4],edx
   13114:	mov    esi,DWORD PTR [edx+0x4]
   13117:	mov    DWORD PTR [eax+0x4],esi
   1311a:	mov    ecx,DWORD PTR [ecx+0x4]
   1311d:	pop    esi
   1311e:	cmp    edx,DWORD PTR [ecx+0x4]
   13121:	jne    0x13128
   13123:	mov    DWORD PTR [ecx+0x4],eax
   13126:	jmp    0x13137
   13128:	mov    ecx,DWORD PTR [edx+0x4]
   1312b:	cmp    edx,DWORD PTR [ecx+0x8]
   1312e:	jne    0x13135
   13130:	mov    DWORD PTR [ecx+0x8],eax
   13133:	jmp    0x13137
   13135:	mov    DWORD PTR [ecx],eax
   13137:	mov    DWORD PTR [eax+0x8],edx
   1313a:	mov    DWORD PTR [edx+0x4],eax
   1313d:	pop    ebp
   1313e:	ret    0x4
   13141:	int3   
   13142:	int3   
   13143:	int3   
   13144:	int3   
   13145:	int3   
   13146:	mov    edi,edi
   13148:	push   ebp
   13149:	mov    ebp,esp
   1314b:	mov    eax,DWORD PTR [ecx+0x4]
   1314e:	mov    ecx,DWORD PTR [eax+0x4]
   13151:	mov    edx,DWORD PTR ds:0x788b0
   13157:	cmp    ecx,edx
   13159:	je     0x13174
   1315b:	push   esi
   1315c:	mov    esi,DWORD PTR [ebp+0x8]
   1315f:	mov    esi,DWORD PTR [esi]
   13161:	cmp    esi,DWORD PTR [ecx+0xc]
   13164:	jae    0x1316c
   13166:	mov    eax,ecx
   13168:	mov    ecx,DWORD PTR [ecx]
   1316a:	jmp    0x1316f
   1316c:	mov    ecx,DWORD PTR [ecx+0x8]
   1316f:	cmp    ecx,edx
   13171:	jne    0x13161
   13173:	pop    esi
   13174:	pop    ebp
   13175:	ret    0x4
   13178:	int3   
   13179:	int3   
   1317a:	int3   
   1317b:	int3   
   1317c:	int3   
   1317d:	int3   
   1317e:	mov    edi,edi
   13180:	push   ebp
   13181:	mov    ebp,esp
   13183:	mov    eax,DWORD PTR [ecx+0x4]
   13186:	push   esi
   13187:	mov    esi,DWORD PTR [eax+0x4]
   1318a:	push   edi
   1318b:	mov    edi,eax
   1318d:	jmp    0x131a8
   1318f:	lea    eax,[esi+0x10]
   13192:	push   eax
   13193:	push   DWORD PTR [ebp+0x8]
   13196:	call   0x19864
   1319b:	test   al,al
   1319d:	je     0x131a5
   1319f:	mov    edi,esi
   131a1:	mov    esi,DWORD PTR [esi]
   131a3:	jmp    0x131a8
   131a5:	mov    esi,DWORD PTR [esi+0x8]
   131a8:	cmp    esi,DWORD PTR ds:0x788bc
   131ae:	jne    0x1318f
   131b0:	mov    eax,edi
   131b2:	pop    edi
   131b3:	pop    esi
   131b4:	pop    ebp
   131b5:	ret    0x4
   131b8:	int3   
   131b9:	int3   
   131ba:	int3   
   131bb:	int3   
   131bc:	int3   
   131bd:	int3   
   131be:	mov    edi,edi
   131c0:	push   ebp
   131c1:	mov    ebp,esp
   131c3:	mov    edx,DWORD PTR [ebp+0x8]
   131c6:	mov    eax,DWORD PTR [edx+0x8]
   131c9:	push   esi
   131ca:	mov    esi,DWORD PTR [eax]
   131cc:	mov    DWORD PTR [edx+0x8],esi
   131cf:	mov    esi,DWORD PTR [eax]
   131d1:	cmp    esi,DWORD PTR ds:0x788c0
   131d7:	je     0x131dc
   131d9:	mov    DWORD PTR [esi+0x4],edx
   131dc:	mov    esi,DWORD PTR [edx+0x4]
   131df:	mov    DWORD PTR [eax+0x4],esi
   131e2:	mov    ecx,DWORD PTR [ecx+0x4]
   131e5:	pop    esi
   131e6:	cmp    edx,DWORD PTR [ecx+0x4]
   131e9:	jne    0x131f0
   131eb:	mov    DWORD PTR [ecx+0x4],eax
   131ee:	jmp    0x131fe
   131f0:	mov    ecx,DWORD PTR [edx+0x4]
   131f3:	cmp    edx,DWORD PTR [ecx]
   131f5:	jne    0x131fb
   131f7:	mov    DWORD PTR [ecx],eax
   131f9:	jmp    0x131fe
   131fb:	mov    DWORD PTR [ecx+0x8],eax
   131fe:	mov    DWORD PTR [eax],edx
   13200:	mov    DWORD PTR [edx+0x4],eax
   13203:	pop    ebp
   13204:	ret    0x4
   13207:	int3   
   13208:	int3   
   13209:	int3   
   1320a:	int3   
   1320b:	int3   
   1320c:	mov    edi,edi
   1320e:	push   ebp
   1320f:	mov    ebp,esp
   13211:	mov    edx,DWORD PTR [ebp+0x8]
   13214:	mov    eax,DWORD PTR [edx]
   13216:	push   esi
   13217:	mov    esi,DWORD PTR [eax+0x8]
   1321a:	mov    DWORD PTR [edx],esi
   1321c:	mov    esi,DWORD PTR [eax+0x8]
   1321f:	cmp    esi,DWORD PTR ds:0x788c0
   13225:	je     0x1322a
   13227:	mov    DWORD PTR [esi+0x4],edx
   1322a:	mov    esi,DWORD PTR [edx+0x4]
   1322d:	mov    DWORD PTR [eax+0x4],esi
   13230:	mov    ecx,DWORD PTR [ecx+0x4]
   13233:	pop    esi
   13234:	cmp    edx,DWORD PTR [ecx+0x4]
   13237:	jne    0x1323e
   13239:	mov    DWORD PTR [ecx+0x4],eax
   1323c:	jmp    0x1324d
   1323e:	mov    ecx,DWORD PTR [edx+0x4]
   13241:	cmp    edx,DWORD PTR [ecx+0x8]
   13244:	jne    0x1324b
   13246:	mov    DWORD PTR [ecx+0x8],eax
   13249:	jmp    0x1324d
   1324b:	mov    DWORD PTR [ecx],eax
   1324d:	mov    DWORD PTR [eax+0x8],edx
   13250:	mov    DWORD PTR [edx+0x4],eax
   13253:	pop    ebp
   13254:	ret    0x4
   13257:	int3   
   13258:	int3   
   13259:	int3   
   1325a:	int3   
   1325b:	int3   
   1325c:	mov    edi,edi
   1325e:	push   ebp
   1325f:	mov    ebp,esp
   13261:	mov    eax,DWORD PTR [ecx+0x4]
   13264:	push   esi
   13265:	mov    esi,DWORD PTR [eax+0x4]
   13268:	push   edi
   13269:	mov    edi,eax
   1326b:	jmp    0x13286
   1326d:	lea    eax,[esi+0xc]
   13270:	push   eax
   13271:	push   DWORD PTR [ebp+0x8]
   13274:	call   0x19864
   13279:	test   al,al
   1327b:	je     0x13283
   1327d:	mov    edi,esi
   1327f:	mov    esi,DWORD PTR [esi]
   13281:	jmp    0x13286
   13283:	mov    esi,DWORD PTR [esi+0x8]
   13286:	cmp    esi,DWORD PTR ds:0x788c0
   1328c:	jne    0x1326d
   1328e:	mov    eax,edi
   13290:	pop    edi
   13291:	pop    esi
   13292:	pop    ebp
   13293:	ret    0x4
   13296:	int3   
   13297:	int3   
   13298:	int3   
   13299:	int3   
   1329a:	int3   
   1329b:	int3   
   1329c:	mov    edi,edi
   1329e:	push   ebp
   1329f:	mov    ebp,esp
   132a1:	mov    edx,DWORD PTR [ebp+0x8]
   132a4:	mov    eax,DWORD PTR [edx+0x8]
   132a7:	push   esi
   132a8:	mov    esi,DWORD PTR [eax]
   132aa:	mov    DWORD PTR [edx+0x8],esi
   132ad:	mov    esi,DWORD PTR [eax]
   132af:	cmp    esi,DWORD PTR ds:0x788c4
   132b5:	je     0x132ba
   132b7:	mov    DWORD PTR [esi+0x4],edx
   132ba:	mov    esi,DWORD PTR [edx+0x4]
   132bd:	mov    DWORD PTR [eax+0x4],esi
   132c0:	mov    ecx,DWORD PTR [ecx+0x4]
   132c3:	pop    esi
   132c4:	cmp    edx,DWORD PTR [ecx+0x4]
   132c7:	jne    0x132ce
   132c9:	mov    DWORD PTR [ecx+0x4],eax
   132cc:	jmp    0x132dc
   132ce:	mov    ecx,DWORD PTR [edx+0x4]
   132d1:	cmp    edx,DWORD PTR [ecx]
   132d3:	jne    0x132d9
   132d5:	mov    DWORD PTR [ecx],eax
   132d7:	jmp    0x132dc
   132d9:	mov    DWORD PTR [ecx+0x8],eax
   132dc:	mov    DWORD PTR [eax],edx
   132de:	mov    DWORD PTR [edx+0x4],eax
   132e1:	pop    ebp
   132e2:	ret    0x4
   132e5:	int3   
   132e6:	int3   
   132e7:	int3   
   132e8:	int3   
   132e9:	int3   
   132ea:	mov    edi,edi
   132ec:	push   ebp
   132ed:	mov    ebp,esp
   132ef:	mov    edx,DWORD PTR [ebp+0x8]
   132f2:	mov    eax,DWORD PTR [edx]
   132f4:	push   esi
   132f5:	mov    esi,DWORD PTR [eax+0x8]
   132f8:	mov    DWORD PTR [edx],esi
   132fa:	mov    esi,DWORD PTR [eax+0x8]
   132fd:	cmp    esi,DWORD PTR ds:0x788c4
   13303:	je     0x13308
   13305:	mov    DWORD PTR [esi+0x4],edx
   13308:	mov    esi,DWORD PTR [edx+0x4]
   1330b:	mov    DWORD PTR [eax+0x4],esi
   1330e:	mov    ecx,DWORD PTR [ecx+0x4]
   13311:	pop    esi
   13312:	cmp    edx,DWORD PTR [ecx+0x4]
   13315:	jne    0x1331c
   13317:	mov    DWORD PTR [ecx+0x4],eax
   1331a:	jmp    0x1332b
   1331c:	mov    ecx,DWORD PTR [edx+0x4]
   1331f:	cmp    edx,DWORD PTR [ecx+0x8]
   13322:	jne    0x13329
   13324:	mov    DWORD PTR [ecx+0x8],eax
   13327:	jmp    0x1332b
   13329:	mov    DWORD PTR [ecx],eax
   1332b:	mov    DWORD PTR [eax+0x8],edx
   1332e:	mov    DWORD PTR [edx+0x4],eax
   13331:	pop    ebp
   13332:	ret    0x4
   13335:	int3   
   13336:	int3   
   13337:	int3   
   13338:	int3   
   13339:	int3   
   1333a:	mov    edi,edi
   1333c:	push   ebp
   1333d:	mov    ebp,esp
   1333f:	mov    eax,DWORD PTR [ecx+0x4]
   13342:	mov    ecx,DWORD PTR [eax+0x4]
   13345:	mov    edx,DWORD PTR ds:0x788c4
   1334b:	cmp    ecx,edx
   1334d:	je     0x13368
   1334f:	push   esi
   13350:	mov    esi,DWORD PTR [ebp+0x8]
   13353:	mov    esi,DWORD PTR [esi]
   13355:	cmp    esi,DWORD PTR [ecx+0xc]
   13358:	jge    0x13360
   1335a:	mov    eax,ecx
   1335c:	mov    ecx,DWORD PTR [ecx]
   1335e:	jmp    0x13363
   13360:	mov    ecx,DWORD PTR [ecx+0x8]
   13363:	cmp    ecx,edx
   13365:	jne    0x13355
   13367:	pop    esi
   13368:	pop    ebp
   13369:	ret    0x4
   1336c:	int3   
   1336d:	int3   
   1336e:	int3   
   1336f:	int3   
   13370:	int3   
   13371:	int3   
   13372:	mov    edi,edi
   13374:	push   ebp
   13375:	mov    ebp,esp
   13377:	mov    eax,DWORD PTR [ecx+0x4]
   1337a:	push   esi
   1337b:	mov    esi,DWORD PTR [eax+0x4]
   1337e:	push   edi
   1337f:	mov    edi,eax
   13381:	jmp    0x1339c
   13383:	push   DWORD PTR [ebp+0x8]
   13386:	lea    eax,[esi+0xc]
   13389:	push   eax
   1338a:	call   0x19894
   1338f:	test   al,al
   13391:	je     0x13398
   13393:	mov    esi,DWORD PTR [esi+0x8]
   13396:	jmp    0x1339c
   13398:	mov    edi,esi
   1339a:	mov    esi,DWORD PTR [esi]
   1339c:	cmp    esi,DWORD PTR ds:0x788cc
   133a2:	jne    0x13383
   133a4:	mov    eax,edi
   133a6:	pop    edi
   133a7:	pop    esi
   133a8:	pop    ebp
   133a9:	ret    0x4
   133ac:	int3   
   133ad:	int3   
   133ae:	int3   
   133af:	int3   
   133b0:	int3   
   133b1:	int3   
   133b2:	mov    edi,edi
   133b4:	push   ebp
   133b5:	mov    ebp,esp
   133b7:	mov    edx,DWORD PTR [ebp+0x8]
   133ba:	mov    eax,DWORD PTR [edx+0x8]
   133bd:	push   esi
   133be:	mov    esi,DWORD PTR [eax]
   133c0:	mov    DWORD PTR [edx+0x8],esi
   133c3:	mov    esi,DWORD PTR [eax]
   133c5:	cmp    esi,DWORD PTR ds:0x788cc
   133cb:	je     0x133d0
   133cd:	mov    DWORD PTR [esi+0x4],edx
   133d0:	mov    esi,DWORD PTR [edx+0x4]
   133d3:	mov    DWORD PTR [eax+0x4],esi
   133d6:	mov    ecx,DWORD PTR [ecx+0x4]
   133d9:	pop    esi
   133da:	cmp    edx,DWORD PTR [ecx+0x4]
   133dd:	jne    0x133e4
   133df:	mov    DWORD PTR [ecx+0x4],eax
   133e2:	jmp    0x133f2
   133e4:	mov    ecx,DWORD PTR [edx+0x4]
   133e7:	cmp    edx,DWORD PTR [ecx]
   133e9:	jne    0x133ef
   133eb:	mov    DWORD PTR [ecx],eax
   133ed:	jmp    0x133f2
   133ef:	mov    DWORD PTR [ecx+0x8],eax
   133f2:	mov    DWORD PTR [eax],edx
   133f4:	mov    DWORD PTR [edx+0x4],eax
   133f7:	pop    ebp
   133f8:	ret    0x4
   133fb:	int3   
   133fc:	int3   
   133fd:	int3   
   133fe:	int3   
   133ff:	int3   
   13400:	mov    edi,edi
   13402:	push   ebp
   13403:	mov    ebp,esp
   13405:	mov    edx,DWORD PTR [ebp+0x8]
   13408:	mov    eax,DWORD PTR [edx]
   1340a:	push   esi
   1340b:	mov    esi,DWORD PTR [eax+0x8]
   1340e:	mov    DWORD PTR [edx],esi
   13410:	mov    esi,DWORD PTR [eax+0x8]
   13413:	cmp    esi,DWORD PTR ds:0x788cc
   13419:	je     0x1341e
   1341b:	mov    DWORD PTR [esi+0x4],edx
   1341e:	mov    esi,DWORD PTR [edx+0x4]
   13421:	mov    DWORD PTR [eax+0x4],esi
   13424:	mov    ecx,DWORD PTR [ecx+0x4]
   13427:	pop    esi
   13428:	cmp    edx,DWORD PTR [ecx+0x4]
   1342b:	jne    0x13432
   1342d:	mov    DWORD PTR [ecx+0x4],eax
   13430:	jmp    0x13441
   13432:	mov    ecx,DWORD PTR [edx+0x4]
   13435:	cmp    edx,DWORD PTR [ecx+0x8]
   13438:	jne    0x1343f
   1343a:	mov    DWORD PTR [ecx+0x8],eax
   1343d:	jmp    0x13441
   1343f:	mov    DWORD PTR [ecx],eax
   13441:	mov    DWORD PTR [eax+0x8],edx
   13444:	mov    DWORD PTR [edx+0x4],eax
   13447:	pop    ebp
   13448:	ret    0x4
   1344b:	int3   
   1344c:	int3   
   1344d:	int3   
   1344e:	int3   
   1344f:	int3   
   13450:	mov    edi,edi
   13452:	push   esi
   13453:	mov    esi,ecx
   13455:	mov    ecx,DWORD PTR [esi]
   13457:	cmp    DWORD PTR [ecx+0x1c],0x0
   1345b:	jne    0x1346a
   1345d:	mov    eax,DWORD PTR [ecx+0x4]
   13460:	cmp    DWORD PTR [eax+0x4],ecx
   13463:	jne    0x1346a
   13465:	mov    eax,DWORD PTR [ecx+0x8]
   13468:	jmp    0x13487
   1346a:	mov    eax,DWORD PTR [ecx]
   1346c:	cmp    eax,DWORD PTR ds:0x788cc
   13472:	je     0x13480
   13474:	push   eax
   13475:	call   0x11646
   1347a:	jmp    0x13487
   1347c:	mov    DWORD PTR [esi],eax
   1347e:	mov    ecx,eax
   13480:	mov    eax,DWORD PTR [ecx+0x4]
   13483:	cmp    ecx,DWORD PTR [eax]
   13485:	je     0x1347c
   13487:	mov    DWORD PTR [esi],eax
   13489:	pop    esi
   1348a:	ret    
   1348b:	int3   
   1348c:	int3   
   1348d:	int3   
   1348e:	int3   
   1348f:	int3   
   13490:	mov    edi,edi
   13492:	push   ebp
   13493:	mov    ebp,esp
   13495:	mov    eax,DWORD PTR [ecx+0x4]
   13498:	mov    ecx,DWORD PTR [eax+0x4]
   1349b:	mov    edx,DWORD PTR ds:0x788b4
   134a1:	cmp    ecx,edx
   134a3:	je     0x134be
   134a5:	push   esi
   134a6:	mov    esi,DWORD PTR [ebp+0x8]
   134a9:	mov    esi,DWORD PTR [esi]
   134ab:	cmp    DWORD PTR [ecx+0xc],esi
   134ae:	jae    0x134b5
   134b0:	mov    ecx,DWORD PTR [ecx+0x8]
   134b3:	jmp    0x134b9
   134b5:	mov    eax,ecx
   134b7:	mov    ecx,DWORD PTR [ecx]
   134b9:	cmp    ecx,edx
   134bb:	jne    0x134ab
   134bd:	pop    esi
   134be:	pop    ebp
   134bf:	ret    0x4
   134c2:	int3   
   134c3:	int3   
   134c4:	int3   
   134c5:	int3   
   134c6:	int3   
   134c7:	int3   
   134c8:	mov    edi,edi
   134ca:	push   ebp
   134cb:	mov    ebp,esp
   134cd:	mov    eax,DWORD PTR [ecx+0x4]
   134d0:	mov    ecx,DWORD PTR [eax+0x4]
   134d3:	mov    edx,DWORD PTR ds:0x788b4
   134d9:	cmp    ecx,edx
   134db:	je     0x134f6
   134dd:	push   esi
   134de:	mov    esi,DWORD PTR [ebp+0x8]
   134e1:	mov    esi,DWORD PTR [esi]
   134e3:	cmp    esi,DWORD PTR [ecx+0xc]
   134e6:	jae    0x134ee
   134e8:	mov    eax,ecx
   134ea:	mov    ecx,DWORD PTR [ecx]
   134ec:	jmp    0x134f1
   134ee:	mov    ecx,DWORD PTR [ecx+0x8]
   134f1:	cmp    ecx,edx
   134f3:	jne    0x134e3
   134f5:	pop    esi
   134f6:	pop    ebp
   134f7:	ret    0x4
   134fa:	int3   
   134fb:	int3   
   134fc:	int3   
   134fd:	int3   
   134fe:	int3   
   134ff:	int3   
   13500:	mov    edi,edi
   13502:	push   ebp
   13503:	mov    ebp,esp
   13505:	push   esi
   13506:	push   edi
   13507:	mov    edi,DWORD PTR [ebp+0x8]
   1350a:	push   edi
   1350b:	mov    esi,ecx
   1350d:	call   0x12b82
   13512:	add    edi,0x8
   13515:	push   edi
   13516:	lea    ecx,[esi+0x8]
   13519:	call   0x12b82
   1351e:	pop    edi
   1351f:	mov    eax,esi
   13521:	pop    esi
   13522:	pop    ebp
   13523:	ret    0x4
   13526:	int3   
   13527:	int3   
   13528:	int3   
   13529:	int3   
   1352a:	int3   
   1352b:	int3   
   1352c:	mov    edi,edi
   1352e:	push   ebp
   1352f:	mov    ebp,esp
   13531:	push   esi
   13532:	push   edi
   13533:	mov    edi,DWORD PTR [ebp+0x8]
   13536:	push   edi
   13537:	mov    esi,ecx
   13539:	call   0x12a22
   1353e:	add    edi,0x8
   13541:	push   edi
   13542:	lea    ecx,[esi+0x8]
   13545:	call   0x12a22
   1354a:	pop    edi
   1354b:	mov    eax,esi
   1354d:	pop    esi
   1354e:	pop    ebp
   1354f:	ret    0x4
   13552:	int3   
   13553:	int3   
   13554:	int3   
   13555:	int3   
   13556:	int3   
   13557:	int3   
   13558:	mov    edi,edi
   1355a:	push   ebp
   1355b:	mov    ebp,esp
   1355d:	mov    ecx,DWORD PTR [ebp+0x8]
   13560:	push   0x0
   13562:	call   0x116ee
   13567:	pop    ebp
   13568:	ret    0x4
   1356b:	int3   
   1356c:	int3   
   1356d:	int3   
   1356e:	int3   
   1356f:	int3   
   13570:	mov    edi,edi
   13572:	push   ebp
   13573:	mov    ebp,esp
   13575:	push   esi
   13576:	push   edi
   13577:	mov    edi,DWORD PTR [ebp+0x8]
   1357a:	push   edi
   1357b:	mov    esi,ecx
   1357d:	call   0x12cd2
   13582:	mov    eax,DWORD PTR [edi+0x40]
   13585:	mov    DWORD PTR [esi+0x40],eax
   13588:	pop    edi
   13589:	mov    eax,esi
   1358b:	pop    esi
   1358c:	pop    ebp
   1358d:	ret    0x4
   13590:	int3   
   13591:	int3   
   13592:	int3   
   13593:	int3   
   13594:	int3   
   13595:	int3   
   13596:	mov    edi,edi
   13598:	push   ebp
   13599:	mov    ebp,esp
   1359b:	push   esi
   1359c:	mov    esi,ecx
   1359e:	call   0x12b46
   135a3:	test   BYTE PTR [ebp+0x8],0x1
   135a7:	je     0x135b0
   135a9:	push   esi
   135aa:	call   0x10a3a
   135af:	pop    ecx
   135b0:	mov    eax,esi
   135b2:	pop    esi
   135b3:	pop    ebp
   135b4:	ret    0x4
   135b7:	int3   
   135b8:	int3   
   135b9:	int3   
   135ba:	int3   
   135bb:	int3   
   135bc:	mov    edi,edi
   135be:	push   ebp
   135bf:	mov    ebp,esp
   135c1:	push   esi
   135c2:	push   edi
   135c3:	mov    edi,DWORD PTR [ebp+0x8]
   135c6:	push   edi
   135c7:	mov    esi,ecx
   135c9:	call   0x12a22
   135ce:	add    edi,0x8
   135d1:	push   edi
   135d2:	lea    ecx,[esi+0x8]
   135d5:	call   0x12cd2
   135da:	pop    edi
   135db:	mov    eax,esi
   135dd:	pop    esi
   135de:	pop    ebp
   135df:	ret    0x4
   135e2:	int3   
   135e3:	int3   
   135e4:	int3   
   135e5:	int3   
   135e6:	int3   
   135e7:	int3   
   135e8:	mov    edi,edi
   135ea:	push   ebp
   135eb:	mov    ebp,esp
   135ed:	mov    eax,DWORD PTR [ebp+0x8]
   135f0:	push   esi
   135f1:	mov    esi,ecx
   135f3:	mov    ecx,DWORD PTR [eax]
   135f5:	add    eax,0x4
   135f8:	mov    DWORD PTR [esi],ecx
   135fa:	push   eax
   135fb:	lea    ecx,[esi+0x4]
   135fe:	call   0x11f7a
   13603:	mov    eax,esi
   13605:	pop    esi
   13606:	pop    ebp
   13607:	ret    0x4
   1360a:	int3   
   1360b:	int3   
   1360c:	int3   
   1360d:	int3   
   1360e:	int3   
   1360f:	int3   
   13610:	mov    edi,edi
   13612:	push   ebp
   13613:	mov    ebp,esp
   13615:	push   esi
   13616:	mov    esi,ecx
   13618:	mov    ecx,DWORD PTR [esi+0x4]
   1361b:	test   ecx,ecx
   1361d:	je     0x13624
   1361f:	call   0x10a58
   13624:	test   BYTE PTR [ebp+0x8],0x1
   13628:	je     0x13631
   1362a:	push   esi
   1362b:	call   0x10a3a
   13630:	pop    ecx
   13631:	mov    eax,esi
   13633:	pop    esi
   13634:	pop    ebp
   13635:	ret    0x4
   13638:	int3   
   13639:	int3   
   1363a:	int3   
   1363b:	int3   
   1363c:	int3   
   1363d:	int3   
   1363e:	mov    edi,edi
   13640:	push   ebp
   13641:	mov    ebp,esp
   13643:	push   esi
   13644:	push   DWORD PTR [ebp+0x8]
   13647:	mov    esi,ecx
   13649:	call   0x12a22
   1364e:	push   DWORD PTR [ebp+0xc]
   13651:	lea    ecx,[esi+0x8]
   13654:	call   0x13570
   13659:	mov    eax,esi
   1365b:	pop    esi
   1365c:	pop    ebp
   1365d:	ret    0x8
   13660:	int3   
   13661:	int3   
   13662:	int3   
   13663:	int3   
   13664:	int3   
   13665:	int3   
   13666:	mov    edi,edi
   13668:	push   ebp
   13669:	mov    ebp,esp
   1366b:	push   edi
   1366c:	mov    edi,DWORD PTR [ebp+0xc]
   1366f:	cmp    DWORD PTR [ebp+0x8],edi
   13672:	je     0x13688
   13674:	push   esi
   13675:	mov    esi,DWORD PTR [ebp+0x10]
   13678:	inc    DWORD PTR [esi]
   1367a:	lea    ecx,[ebp+0x8]
   1367d:	call   0x1135c
   13682:	cmp    DWORD PTR [ebp+0x8],edi
   13685:	jne    0x13678
   13687:	pop    esi
   13688:	pop    edi
   13689:	pop    ebp
   1368a:	ret    
   1368b:	int3   
   1368c:	int3   
   1368d:	int3   
   1368e:	int3   
   1368f:	int3   
   13690:	mov    edi,edi
   13692:	push   ebp
   13693:	mov    ebp,esp
   13695:	push   edi
   13696:	mov    edi,DWORD PTR [ebp+0xc]
   13699:	cmp    DWORD PTR [ebp+0x8],edi
   1369c:	je     0x136b2
   1369e:	push   esi
   1369f:	mov    esi,DWORD PTR [ebp+0x10]
   136a2:	inc    DWORD PTR [esi]
   136a4:	lea    ecx,[ebp+0x8]
   136a7:	call   0x115da
   136ac:	cmp    DWORD PTR [ebp+0x8],edi
   136af:	jne    0x136a2
   136b1:	pop    esi
   136b2:	pop    edi
   136b3:	pop    ebp
   136b4:	ret    
   136b5:	int3   
   136b6:	int3   
   136b7:	int3   
   136b8:	int3   
   136b9:	int3   
   136ba:	mov    edi,edi
   136bc:	push   ebp
   136bd:	mov    ebp,esp
   136bf:	push   edi
   136c0:	mov    edi,DWORD PTR [ebp+0xc]
   136c3:	cmp    DWORD PTR [ebp+0x8],edi
   136c6:	je     0x136dc
   136c8:	push   esi
   136c9:	mov    esi,DWORD PTR [ebp+0x10]
   136cc:	inc    DWORD PTR [esi]
   136ce:	lea    ecx,[ebp+0x8]
   136d1:	call   0x11610
   136d6:	cmp    DWORD PTR [ebp+0x8],edi
   136d9:	jne    0x136cc
   136db:	pop    esi
   136dc:	pop    edi
   136dd:	pop    ebp
   136de:	ret    
   136df:	int3   
   136e0:	int3   
   136e1:	int3   
   136e2:	int3   
   136e3:	int3   
   136e4:	mov    edi,edi
   136e6:	push   ebp
   136e7:	mov    ebp,esp
   136e9:	push   edi
   136ea:	mov    edi,DWORD PTR [ebp+0xc]
   136ed:	cmp    DWORD PTR [ebp+0x8],edi
   136f0:	je     0x13706
   136f2:	push   esi
   136f3:	mov    esi,DWORD PTR [ebp+0x10]
   136f6:	inc    DWORD PTR [esi]
   136f8:	lea    ecx,[ebp+0x8]
   136fb:	call   0x12f94
   13700:	cmp    DWORD PTR [ebp+0x8],edi
   13703:	jne    0x136f6
   13705:	pop    esi
   13706:	pop    edi
   13707:	pop    ebp
   13708:	ret    
   13709:	int3   
   1370a:	int3   
   1370b:	int3   
   1370c:	int3   
   1370d:	int3   
   1370e:	mov    edi,edi
   13710:	push   esi
   13711:	push   edi
   13712:	push   0xffffffff
   13714:	mov    edi,0x1df98
   13719:	push   edi
   1371a:	mov    esi,ecx
   1371c:	call   0x11140
   13721:	push   0xffffffff
   13723:	push   edi
   13724:	lea    ecx,[esi+0x8]
   13727:	call   0x11140
   1372c:	push   0xffffffff
   1372e:	push   edi
   1372f:	lea    ecx,[esi+0x10]
   13732:	call   0x11140
   13737:	push   0xffffffff
   13739:	push   edi
   1373a:	lea    ecx,[esi+0x18]
   1373d:	call   0x11140
   13742:	push   0xffffffff
   13744:	push   edi
   13745:	lea    ecx,[esi+0x38]
   13748:	call   0x11140
   1374d:	xor    eax,eax
   1374f:	mov    DWORD PTR [esi+0x24],eax
   13752:	mov    DWORD PTR [esi+0x20],eax
   13755:	mov    DWORD PTR [esi+0x30],eax
   13758:	mov    DWORD PTR [esi+0x34],eax
   1375b:	pop    edi
   1375c:	mov    eax,esi
   1375e:	pop    esi
   1375f:	ret    
   13760:	int3   
   13761:	int3   
   13762:	int3   
   13763:	int3   
   13764:	int3   
   13765:	int3   
   13766:	mov    edi,edi
   13768:	push   ebp
   13769:	mov    ebp,esp
   1376b:	push   esi
   1376c:	push   DWORD PTR [ebp+0x8]
   1376f:	mov    esi,ecx
   13771:	call   0x12a22
   13776:	push   0xffffffff
   13778:	push   0x1df98
   1377d:	lea    ecx,[esi+0x8]
   13780:	call   0x11140
   13785:	push   DWORD PTR [ebp+0xc]
   13788:	lea    ecx,[esi+0x10]
   1378b:	call   0x12a22
   13790:	push   DWORD PTR [ebp+0x10]
   13793:	lea    ecx,[esi+0x18]
   13796:	call   0x12a22
   1379b:	mov    eax,DWORD PTR [ebp+0x18]
   1379e:	push   DWORD PTR [ebp+0x14]
   137a1:	mov    DWORD PTR [esi+0x20],eax
   137a4:	mov    eax,DWORD PTR [ebp+0x1c]
   137a7:	lea    ecx,[esi+0x38]
   137aa:	mov    DWORD PTR [esi+0x24],eax
   137ad:	call   0x12a22
   137b2:	and    DWORD PTR [esi+0x30],0x0
   137b6:	and    DWORD PTR [esi+0x34],0x0
   137ba:	mov    eax,DWORD PTR [ebp+0x20]
   137bd:	mov    ecx,DWORD PTR [eax]
   137bf:	mov    DWORD PTR [esi+0x28],ecx
   137c2:	mov    eax,DWORD PTR [eax+0x4]
   137c5:	mov    DWORD PTR [esi+0x2c],eax
   137c8:	mov    eax,esi
   137ca:	pop    esi
   137cb:	pop    ebp
   137cc:	ret    0x1c
   137cf:	int3   
   137d0:	int3   
   137d1:	int3   
   137d2:	int3   
   137d3:	int3   
   137d4:	mov    edi,edi
   137d6:	push   ebp
   137d7:	mov    ebp,esp
   137d9:	push   esi
   137da:	push   0xc
   137dc:	mov    esi,ecx
   137de:	call   0x10a06
   137e3:	pop    ecx
   137e4:	test   eax,eax
   137e6:	je     0x137f7
   137e8:	push   DWORD PTR [ebp+0xc]
   137eb:	mov    ecx,eax
   137ed:	push   DWORD PTR [ebp+0x8]
   137f0:	call   0x11fc8
   137f5:	jmp    0x137f9
   137f7:	xor    eax,eax
   137f9:	mov    DWORD PTR [esi],eax
   137fb:	mov    eax,esi
   137fd:	pop    esi
   137fe:	pop    ebp
   137ff:	ret    0x8
   13802:	int3   
   13803:	int3   
   13804:	int3   
   13805:	int3   
   13806:	int3   
   13807:	int3   
   13808:	mov    edi,edi
   1380a:	push   ebp
   1380b:	mov    ebp,esp
   1380d:	sub    esp,0x18
   13810:	lea    eax,[ebp-0x18]
   13813:	push   eax
   13814:	push   DWORD PTR [ebp+0x8]
   13817:	call   0x10f18
   1381c:	test   al,al
   1381e:	je     0x1388c
   13820:	lea    eax,[ebp-0x4]
   13823:	push   eax
   13824:	push   DWORD PTR [ebp+0xc]
   13827:	call   0x11d26
   1382c:	call   eax
   1382e:	test   eax,eax
   13830:	jl     0x1388c
   13832:	push   esi
   13833:	push   0x5
   13835:	call   0x12978
   1383a:	mov    esi,eax
   1383c:	test   esi,esi
   1383e:	je     0x1388b
   13840:	mov    edx,DWORD PTR [ebp+0x10]
   13843:	cmp    DWORD PTR [esi+0x44],edx
   13846:	je     0x13855
   13848:	mov    ecx,DWORD PTR [eax]
   1384a:	test   ecx,ecx
   1384c:	je     0x13879
   1384e:	add    eax,ecx
   13850:	cmp    DWORD PTR [eax+0x44],edx
   13853:	jne    0x13848
   13855:	cmp    DWORD PTR [eax+0x4],0x0
   13859:	je     0x13879
   1385b:	mov    ecx,DWORD PTR [eax+0xd8]
   13861:	mov    eax,DWORD PTR [eax+0xdc]
   13867:	mov    DWORD PTR [ebp-0x14],eax
   1386a:	lea    eax,[ebp-0x18]
   1386d:	push   eax
   1386e:	push   DWORD PTR [ebp+0x8]
   13871:	mov    DWORD PTR [ebp-0x18],ecx
   13874:	call   0x10f66
   13879:	mov    ecx,DWORD PTR [ebp-0x4]
   1387c:	call   DWORD PTR ds:0x1f060
   13882:	push   0x0
   13884:	push   esi
   13885:	call   DWORD PTR ds:0x1f020
   1388b:	pop    esi
   1388c:	leave  
   1388d:	ret    0x10
   13890:	int3   
   13891:	int3   
   13892:	int3   
   13893:	int3   
   13894:	int3   
   13895:	int3   
   13896:	mov    edi,edi
   13898:	push   esi
   13899:	mov    esi,ecx
   1389b:	mov    ecx,DWORD PTR [esi]
   1389d:	mov    eax,DWORD PTR [ecx+0x8]
   138a0:	cmp    eax,DWORD PTR ds:0x788bc
   138a6:	je     0x138b4
   138a8:	push   eax
   138a9:	call   0x12d46
   138ae:	jmp    0x138c3
   138b0:	mov    DWORD PTR [esi],eax
   138b2:	mov    ecx,eax
   138b4:	mov    eax,DWORD PTR [ecx+0x4]
   138b7:	cmp    ecx,DWORD PTR [eax+0x8]
   138ba:	je     0x138b0
   138bc:	mov    ecx,DWORD PTR [esi]
   138be:	cmp    DWORD PTR [ecx+0x8],eax
   138c1:	je     0x138c5
   138c3:	mov    DWORD PTR [esi],eax
   138c5:	pop    esi
   138c6:	ret    
   138c7:	int3   
   138c8:	int3   
   138c9:	int3   
   138ca:	int3   
   138cb:	int3   
   138cc:	mov    edi,edi
   138ce:	push   ebp
   138cf:	mov    ebp,esp
   138d1:	push   esi
   138d2:	push   DWORD PTR [ebp+0x8]
   138d5:	mov    esi,ecx
   138d7:	call   0x12a22
   138dc:	push   DWORD PTR [ebp+0xc]
   138df:	lea    ecx,[esi+0x8]
   138e2:	call   0x12cd2
   138e7:	mov    eax,esi
   138e9:	pop    esi
   138ea:	pop    ebp
   138eb:	ret    0x8
   138ee:	int3   
   138ef:	int3   
   138f0:	int3   
   138f1:	int3   
   138f2:	int3   
   138f3:	int3   
   138f4:	mov    edi,edi
   138f6:	push   ebp
   138f7:	mov    ebp,esp
   138f9:	push   ebx
   138fa:	push   esi
   138fb:	push   edi
   138fc:	mov    edi,DWORD PTR [ebp+0x8]
   138ff:	mov    ebx,ecx
   13901:	mov    esi,edi
   13903:	cmp    edi,DWORD PTR ds:0x788b0
   13909:	je     0x13928
   1390b:	push   DWORD PTR [esi+0x8]
   1390e:	mov    ecx,ebx
   13910:	call   0x138f4
   13915:	mov    esi,DWORD PTR [esi]
   13917:	push   edi
   13918:	call   0x10a3a
   1391d:	pop    ecx
   1391e:	mov    edi,esi
   13920:	cmp    esi,DWORD PTR ds:0x788b0
   13926:	jne    0x1390b
   13928:	pop    edi
   13929:	pop    esi
   1392a:	pop    ebx
   1392b:	pop    ebp
   1392c:	ret    0x4
   1392f:	int3   
   13930:	int3   
   13931:	int3   
   13932:	int3   
   13933:	int3   
   13934:	mov    edi,edi
   13936:	push   ebp
   13937:	mov    ebp,esp
   13939:	push   ebx
   1393a:	push   esi
   1393b:	push   edi
   1393c:	mov    edi,DWORD PTR [ebp+0x8]
   1393f:	mov    ebx,ecx
   13941:	mov    esi,edi
   13943:	cmp    edi,DWORD PTR ds:0x788b4
   13949:	je     0x13968
   1394b:	push   DWORD PTR [esi+0x8]
   1394e:	mov    ecx,ebx
   13950:	call   0x13934
   13955:	mov    esi,DWORD PTR [esi]
   13957:	push   edi
   13958:	call   0x10a3a
   1395d:	pop    ecx
   1395e:	mov    edi,esi
   13960:	cmp    esi,DWORD PTR ds:0x788b4
   13966:	jne    0x1394b
   13968:	pop    edi
   13969:	pop    esi
   1396a:	pop    ebx
   1396b:	pop    ebp
   1396c:	ret    0x4
   1396f:	int3   
   13970:	int3   
   13971:	int3   
   13972:	int3   
   13973:	int3   
   13974:	mov    edi,edi
   13976:	push   ebp
   13977:	mov    ebp,esp
   13979:	push   0x0
   1397b:	push   0x60
   1397d:	call   0x116aa
   13982:	mov    ecx,DWORD PTR [ebp+0x8]
   13985:	mov    DWORD PTR [eax+0x4],ecx
   13988:	mov    ecx,DWORD PTR [ebp+0xc]
   1398b:	mov    DWORD PTR [eax+0x58],ecx
   1398e:	pop    ebp
   1398f:	ret    0x8
   13992:	int3   
   13993:	int3   
   13994:	int3   
   13995:	int3   
   13996:	int3   
   13997:	int3   
   13998:	mov    edi,edi
   1399a:	push   ebp
   1399b:	mov    ebp,esp
   1399d:	push   0x0
   1399f:	push   0x20
   139a1:	call   0x116aa
   139a6:	mov    ecx,DWORD PTR [ebp+0x8]
   139a9:	mov    DWORD PTR [eax+0x4],ecx
   139ac:	mov    ecx,DWORD PTR [ebp+0xc]
   139af:	mov    DWORD PTR [eax+0x1c],ecx
   139b2:	pop    ebp
   139b3:	ret    0x8
   139b6:	int3   
   139b7:	int3   
   139b8:	int3   
   139b9:	int3   
   139ba:	int3   
   139bb:	int3   
   139bc:	mov    edi,edi
   139be:	push   ebp
   139bf:	mov    ebp,esp
   139c1:	push   0x0
   139c3:	push   0x14
   139c5:	call   0x116aa
   139ca:	mov    ecx,DWORD PTR [ebp+0x8]
   139cd:	mov    DWORD PTR [eax+0x4],ecx
   139d0:	mov    ecx,DWORD PTR [ebp+0xc]
   139d3:	mov    DWORD PTR [eax+0x10],ecx
   139d6:	pop    ebp
   139d7:	ret    0x8
   139da:	int3   
   139db:	int3   
   139dc:	int3   
   139dd:	int3   
   139de:	int3   
   139df:	int3   
   139e0:	mov    edi,edi
   139e2:	push   ebp
   139e3:	mov    ebp,esp
   139e5:	push   0x0
   139e7:	push   0x68
   139e9:	call   0x116aa
   139ee:	mov    ecx,DWORD PTR [ebp+0x8]
   139f1:	mov    DWORD PTR [eax+0x4],ecx
   139f4:	mov    ecx,DWORD PTR [ebp+0xc]
   139f7:	mov    DWORD PTR [eax+0x60],ecx
   139fa:	pop    ebp
   139fb:	ret    0x8
   139fe:	int3   
   139ff:	int3   
   13a00:	int3   
   13a01:	int3   
   13a02:	int3   
   13a03:	int3   
   13a04:	mov    edi,edi
   13a06:	push   ebp
   13a07:	mov    ebp,esp
   13a09:	push   esi
   13a0a:	push   edi
   13a0b:	mov    edi,DWORD PTR [ebp+0x8]
   13a0e:	push   edi
   13a0f:	mov    esi,ecx
   13a11:	call   0x12a22
   13a16:	add    edi,0x8
   13a19:	push   edi
   13a1a:	lea    ecx,[esi+0x8]
   13a1d:	call   0x13570
   13a22:	pop    edi
   13a23:	mov    eax,esi
   13a25:	pop    esi
   13a26:	pop    ebp
   13a27:	ret    0x4
   13a2a:	int3   
   13a2b:	int3   
   13a2c:	int3   
   13a2d:	int3   
   13a2e:	int3   
   13a2f:	int3   
   13a30:	mov    edi,edi
   13a32:	push   ebp
   13a33:	mov    ebp,esp
   13a35:	push   ecx
   13a36:	push   DWORD PTR [ebp-0x4]
   13a39:	push   DWORD PTR [ebp+0x10]
   13a3c:	push   DWORD PTR [ebp+0xc]
   13a3f:	push   DWORD PTR [ebp+0x8]
   13a42:	call   0x13666
   13a47:	add    esp,0x10
   13a4a:	leave  
   13a4b:	ret    
   13a4c:	int3   
   13a4d:	int3   
   13a4e:	int3   
   13a4f:	int3   
   13a50:	int3   
   13a51:	int3   
   13a52:	mov    edi,edi
   13a54:	push   ebp
   13a55:	mov    ebp,esp
   13a57:	push   ecx
   13a58:	push   DWORD PTR [ebp-0x4]
   13a5b:	push   DWORD PTR [ebp+0x10]
   13a5e:	push   DWORD PTR [ebp+0xc]
   13a61:	push   DWORD PTR [ebp+0x8]
   13a64:	call   0x13690
   13a69:	add    esp,0x10
   13a6c:	leave  
   13a6d:	ret    
   13a6e:	int3   
   13a6f:	int3   
   13a70:	int3   
   13a71:	int3   
   13a72:	int3   
   13a73:	int3   
   13a74:	mov    edi,edi
   13a76:	push   ebp
   13a77:	mov    ebp,esp
   13a79:	push   ecx
   13a7a:	push   DWORD PTR [ebp-0x4]
   13a7d:	push   DWORD PTR [ebp+0x10]
   13a80:	push   DWORD PTR [ebp+0xc]
   13a83:	push   DWORD PTR [ebp+0x8]
   13a86:	call   0x136ba
   13a8b:	add    esp,0x10
   13a8e:	leave  
   13a8f:	ret    
   13a90:	int3   
   13a91:	int3   
   13a92:	int3   
   13a93:	int3   
   13a94:	int3   
   13a95:	int3   
   13a96:	mov    edi,edi
   13a98:	push   ebp
   13a99:	mov    ebp,esp
   13a9b:	push   ecx
   13a9c:	push   DWORD PTR [ebp-0x4]
   13a9f:	push   DWORD PTR [ebp+0x10]
   13aa2:	push   DWORD PTR [ebp+0xc]
   13aa5:	push   DWORD PTR [ebp+0x8]
   13aa8:	call   0x136e4
   13aad:	add    esp,0x10
   13ab0:	leave  
   13ab1:	ret    
   13ab2:	int3   
   13ab3:	int3   
   13ab4:	int3   
   13ab5:	int3   
   13ab6:	int3   
   13ab7:	int3   
   13ab8:	mov    edi,edi
   13aba:	push   ebp
   13abb:	mov    ebp,esp
   13abd:	mov    ecx,DWORD PTR [ebp+0x8]
   13ac0:	test   ecx,ecx
   13ac2:	je     0x13acc
   13ac4:	push   DWORD PTR [ebp+0xc]
   13ac7:	call   0x13a04
   13acc:	pop    ebp
   13acd:	ret    0x8
   13ad0:	int3   
   13ad1:	int3   
   13ad2:	int3   
   13ad3:	int3   
   13ad4:	int3   
   13ad5:	int3   
   13ad6:	mov    edi,edi
   13ad8:	push   ebp
   13ad9:	mov    ebp,esp
   13adb:	mov    ecx,DWORD PTR [ebp+0x8]
   13ade:	push   0x0
   13ae0:	call   0x13596
   13ae5:	pop    ebp
   13ae6:	ret    0x4
   13ae9:	int3   
   13aea:	int3   
   13aeb:	int3   
   13aec:	int3   
   13aed:	int3   
   13aee:	mov    edi,edi
   13af0:	push   ebp
   13af1:	mov    ebp,esp
   13af3:	mov    ecx,DWORD PTR [ebp+0x8]
   13af6:	test   ecx,ecx
   13af8:	je     0x13b02
   13afa:	push   DWORD PTR [ebp+0xc]
   13afd:	call   0x135bc
   13b02:	pop    ebp
   13b03:	ret    0x8
   13b06:	int3   
   13b07:	int3   
   13b08:	int3   
   13b09:	int3   
   13b0a:	int3   
   13b0b:	int3   
   13b0c:	mov    edi,edi
   13b0e:	push   ebp
   13b0f:	mov    ebp,esp
   13b11:	mov    ecx,DWORD PTR [ebp+0x8]
   13b14:	test   ecx,ecx
   13b16:	je     0x13b20
   13b18:	push   DWORD PTR [ebp+0xc]
   13b1b:	call   0x1352c
   13b20:	pop    ebp
   13b21:	ret    0x8
   13b24:	int3   
   13b25:	int3   
   13b26:	int3   
   13b27:	int3   
   13b28:	int3   
   13b29:	int3   
   13b2a:	mov    edi,edi
   13b2c:	push   ebp
   13b2d:	mov    ebp,esp
   13b2f:	mov    ecx,DWORD PTR [ebp+0x8]
   13b32:	test   ecx,ecx
   13b34:	je     0x13b3e
   13b36:	push   DWORD PTR [ebp+0xc]
   13b39:	call   0x135e8
   13b3e:	pop    ebp
   13b3f:	ret    0x8
   13b42:	int3   
   13b43:	int3   
   13b44:	int3   
   13b45:	int3   
   13b46:	int3   
   13b47:	int3   
   13b48:	mov    edi,edi
   13b4a:	push   ebp
   13b4b:	mov    ebp,esp
   13b4d:	mov    ecx,DWORD PTR [ebp+0x8]
   13b50:	push   0x0
   13b52:	call   0x13610
   13b57:	pop    ebp
   13b58:	ret    0x4
   13b5b:	int3   
   13b5c:	int3   
   13b5d:	int3   
   13b5e:	int3   
   13b5f:	int3   
   13b60:	mov    edi,edi
   13b62:	push   ebp
   13b63:	mov    ebp,esp
   13b65:	mov    ecx,DWORD PTR [ebp+0x8]
   13b68:	test   ecx,ecx
   13b6a:	je     0x13b74
   13b6c:	push   DWORD PTR [ebp+0xc]
   13b6f:	call   0x13500
   13b74:	pop    ebp
   13b75:	ret    0x8
   13b78:	int3   
   13b79:	int3   
   13b7a:	int3   
   13b7b:	int3   
   13b7c:	int3   
   13b7d:	int3   
   13b7e:	mov    edi,edi
   13b80:	push   ebp
   13b81:	mov    ebp,esp
   13b83:	push   ecx
   13b84:	mov    eax,ds:0x788b4
   13b89:	push   ebx
   13b8a:	mov    ebx,DWORD PTR [ebp+0xc]
   13b8d:	push   esi
   13b8e:	mov    esi,DWORD PTR [ebp+0x8]
   13b91:	mov    DWORD PTR [ebp-0x4],ecx
   13b94:	mov    DWORD PTR [ebp+0x8],esi
   13b97:	cmp    esi,eax
   13b99:	je     0x13bde
   13b9b:	push   edi
   13b9c:	push   DWORD PTR [esi+0x10]
   13b9f:	mov    ecx,DWORD PTR [ebp-0x4]
   13ba2:	push   ebx
   13ba3:	call   0x139bc
   13ba8:	mov    edi,eax
   13baa:	cmp    DWORD PTR [ebp+0x8],esi
   13bad:	jne    0x13bb2
   13baf:	mov    DWORD PTR [ebp+0x8],edi
   13bb2:	mov    ecx,DWORD PTR [ebp-0x4]
   13bb5:	push   edi
   13bb6:	push   DWORD PTR [esi+0x8]
   13bb9:	call   0x13b7e
   13bbe:	mov    DWORD PTR [edi+0x8],eax
   13bc1:	lea    eax,[esi+0xc]
   13bc4:	push   eax
   13bc5:	lea    eax,[edi+0xc]
   13bc8:	push   eax
   13bc9:	call   0x1a43e
   13bce:	mov    DWORD PTR [ebx],edi
   13bd0:	mov    esi,DWORD PTR [esi]
   13bd2:	mov    eax,ds:0x788b4
   13bd7:	mov    ebx,edi
   13bd9:	cmp    esi,eax
   13bdb:	jne    0x13b9c
   13bdd:	pop    edi
   13bde:	mov    DWORD PTR [ebx],eax
   13be0:	mov    eax,DWORD PTR [ebp+0x8]
   13be3:	pop    esi
   13be4:	pop    ebx
   13be5:	leave  
   13be6:	ret    0x8
   13be9:	int3   
   13bea:	int3   
   13beb:	int3   
   13bec:	int3   
   13bed:	int3   
   13bee:	mov    edi,edi
   13bf0:	push   ebp
   13bf1:	mov    ebp,esp
   13bf3:	push   ecx
   13bf4:	push   esi
   13bf5:	push   edi
   13bf6:	mov    edi,DWORD PTR [ebp+0xc]
   13bf9:	push   edi
   13bfa:	mov    esi,ecx
   13bfc:	call   0x12d90
   13c01:	mov    esi,DWORD PTR [esi+0x4]
   13c04:	mov    DWORD PTR [ebp+0xc],eax
   13c07:	cmp    eax,esi
   13c09:	je     0x13c17
   13c0b:	mov    ecx,DWORD PTR [edi]
   13c0d:	cmp    ecx,DWORD PTR [eax+0xc]
   13c10:	jb     0x13c17
   13c12:	lea    eax,[ebp+0xc]
   13c15:	jmp    0x13c1d
   13c17:	mov    DWORD PTR [ebp-0x4],esi
   13c1a:	lea    eax,[ebp-0x4]
   13c1d:	mov    ecx,DWORD PTR [eax]
   13c1f:	mov    eax,DWORD PTR [ebp+0x8]
   13c22:	pop    edi
   13c23:	mov    DWORD PTR [eax],ecx
   13c25:	pop    esi
   13c26:	leave  
   13c27:	ret    0x8
   13c2a:	int3   
   13c2b:	int3   
   13c2c:	int3   
   13c2d:	int3   
   13c2e:	int3   
   13c2f:	int3   
   13c30:	mov    edi,edi
   13c32:	push   ebp
   13c33:	mov    ebp,esp
   13c35:	push   ecx
   13c36:	push   esi
   13c37:	push   DWORD PTR [ebp+0xc]
   13c3a:	mov    esi,ecx
   13c3c:	call   0x12e66
   13c41:	mov    DWORD PTR [ebp-0x4],eax
   13c44:	cmp    eax,DWORD PTR [esi+0x4]
   13c47:	je     0x13c5e
   13c49:	add    eax,0x10
   13c4c:	push   eax
   13c4d:	push   DWORD PTR [ebp+0xc]
   13c50:	call   0x19864
   13c55:	test   al,al
   13c57:	jne    0x13c5e
   13c59:	lea    eax,[ebp-0x4]
   13c5c:	jmp    0x13c67
   13c5e:	mov    eax,DWORD PTR [esi+0x4]
   13c61:	mov    DWORD PTR [ebp+0xc],eax
   13c64:	lea    eax,[ebp+0xc]
   13c67:	mov    ecx,DWORD PTR [eax]
   13c69:	mov    eax,DWORD PTR [ebp+0x8]
   13c6c:	mov    DWORD PTR [eax],ecx
   13c6e:	pop    esi
   13c6f:	leave  
   13c70:	ret    0x8
   13c73:	int3   
   13c74:	int3   
   13c75:	int3   
   13c76:	int3   
   13c77:	int3   
   13c78:	mov    edi,edi
   13c7a:	push   ebp
   13c7b:	mov    ebp,esp
   13c7d:	push   ecx
   13c7e:	push   esi
   13c7f:	push   DWORD PTR [ebp+0xc]
   13c82:	mov    esi,ecx
   13c84:	call   0x12ea6
   13c89:	mov    DWORD PTR [ebp-0x4],eax
   13c8c:	cmp    eax,DWORD PTR [esi+0x4]
   13c8f:	je     0x13ca6
   13c91:	add    eax,0xc
   13c94:	push   eax
   13c95:	push   DWORD PTR [ebp+0xc]
   13c98:	call   0x19864
   13c9d:	test   al,al
   13c9f:	jne    0x13ca6
   13ca1:	lea    eax,[ebp-0x4]
   13ca4:	jmp    0x13caf
   13ca6:	mov    eax,DWORD PTR [esi+0x4]
   13ca9:	mov    DWORD PTR [ebp+0xc],eax
   13cac:	lea    eax,[ebp+0xc]
   13caf:	mov    ecx,DWORD PTR [eax]
   13cb1:	mov    eax,DWORD PTR [ebp+0x8]
   13cb4:	mov    DWORD PTR [eax],ecx
   13cb6:	pop    esi
   13cb7:	leave  
   13cb8:	ret    0x8
   13cbb:	int3   
   13cbc:	int3   
   13cbd:	int3   
   13cbe:	int3   
   13cbf:	int3   
   13cc0:	mov    edi,edi
   13cc2:	push   ebp
   13cc3:	mov    ebp,esp
   13cc5:	push   ecx
   13cc6:	push   esi
   13cc7:	push   edi
   13cc8:	mov    edi,DWORD PTR [ebp+0xc]
   13ccb:	push   edi
   13ccc:	mov    esi,ecx
   13cce:	call   0x12ee6
   13cd3:	mov    esi,DWORD PTR [esi+0x4]
   13cd6:	mov    DWORD PTR [ebp+0xc],eax
   13cd9:	cmp    eax,esi
   13cdb:	je     0x13ce9
   13cdd:	mov    ecx,DWORD PTR [edi]
   13cdf:	cmp    ecx,DWORD PTR [eax+0xc]
   13ce2:	jl     0x13ce9
   13ce4:	lea    eax,[ebp+0xc]
   13ce7:	jmp    0x13cef
   13ce9:	mov    DWORD PTR [ebp-0x4],esi
   13cec:	lea    eax,[ebp-0x4]
   13cef:	mov    ecx,DWORD PTR [eax]
   13cf1:	mov    eax,DWORD PTR [ebp+0x8]
   13cf4:	pop    edi
   13cf5:	mov    DWORD PTR [eax],ecx
   13cf7:	pop    esi
   13cf8:	leave  
   13cf9:	ret    0x8
   13cfc:	int3   
   13cfd:	int3   
   13cfe:	int3   
   13cff:	int3   
   13d00:	int3   
   13d01:	int3   
   13d02:	mov    edi,edi
   13d04:	push   ebp
   13d05:	mov    ebp,esp
   13d07:	push   ecx
   13d08:	mov    eax,DWORD PTR [ecx]
   13d0a:	lea    ecx,[ebp-0x4]
   13d0d:	mov    DWORD PTR [ebp-0x4],eax
   13d10:	call   0x12f54
   13d15:	mov    eax,DWORD PTR [ebp-0x4]
   13d18:	add    eax,0xc
   13d1b:	leave  
   13d1c:	ret    
   13d1d:	int3   
   13d1e:	int3   
   13d1f:	int3   
   13d20:	int3   
   13d21:	int3   
   13d22:	mov    edi,edi
   13d24:	push   ebp
   13d25:	mov    ebp,esp
   13d27:	push   ecx
   13d28:	push   esi
   13d29:	push   DWORD PTR [ebp+0xc]
   13d2c:	mov    esi,ecx
   13d2e:	call   0x13068
   13d33:	mov    DWORD PTR [ebp-0x4],eax
   13d36:	cmp    eax,DWORD PTR [esi+0x4]
   13d39:	je     0x13d50
   13d3b:	add    eax,0x10
   13d3e:	push   eax
   13d3f:	push   DWORD PTR [ebp+0xc]
   13d42:	call   0x19864
   13d47:	test   al,al
   13d49:	jne    0x13d50
   13d4b:	lea    eax,[ebp-0x4]
   13d4e:	jmp    0x13d59
   13d50:	mov    eax,DWORD PTR [esi+0x4]
   13d53:	mov    DWORD PTR [ebp+0xc],eax
   13d56:	lea    eax,[ebp+0xc]
   13d59:	mov    ecx,DWORD PTR [eax]
   13d5b:	mov    eax,DWORD PTR [ebp+0x8]
   13d5e:	mov    DWORD PTR [eax],ecx
   13d60:	pop    esi
   13d61:	leave  
   13d62:	ret    0x8
   13d65:	int3   
   13d66:	int3   
   13d67:	int3   
   13d68:	int3   
   13d69:	int3   
   13d6a:	mov    edi,edi
   13d6c:	push   ebp
   13d6d:	mov    ebp,esp
   13d6f:	push   ecx
   13d70:	push   ecx
   13d71:	push   ebx
   13d72:	push   esi
   13d73:	mov    DWORD PTR [ebp-0x4],ecx
   13d76:	push   edi
   13d77:	mov    edi,DWORD PTR [ebp+0xc]
   13d7a:	lea    ecx,[ebp+0xc]
   13d7d:	call   0x1135c
   13d82:	mov    esi,DWORD PTR [edi]
   13d84:	mov    eax,ds:0x788b0
   13d89:	mov    ebx,edi
   13d8b:	mov    DWORD PTR [ebp-0x8],esi
   13d8e:	cmp    esi,eax
   13d90:	jne    0x13dae
   13d92:	mov    esi,DWORD PTR [edi+0x8]
   13d95:	mov    eax,DWORD PTR [ebx+0x4]
   13d98:	mov    ecx,DWORD PTR [ebp-0x4]
   13d9b:	mov    DWORD PTR [esi+0x4],eax
   13d9e:	mov    eax,DWORD PTR [ecx+0x4]
   13da1:	cmp    DWORD PTR [eax+0x4],edi
   13da4:	jne    0x13e23
   13da6:	mov    DWORD PTR [eax+0x4],esi
   13da9:	jmp    0x13e31
   13dae:	mov    ecx,DWORD PTR [edi+0x8]
   13db1:	cmp    ecx,eax
   13db3:	je     0x13d95
   13db5:	push   ecx
   13db6:	call   0x11272
   13dbb:	mov    ebx,eax
   13dbd:	mov    esi,DWORD PTR [ebx+0x8]
   13dc0:	cmp    ebx,edi
   13dc2:	je     0x13d95
   13dc4:	mov    eax,DWORD PTR [ebp-0x8]
   13dc7:	mov    DWORD PTR [eax+0x4],ebx
   13dca:	mov    eax,DWORD PTR [edi]
   13dcc:	mov    DWORD PTR [ebx],eax
   13dce:	cmp    ebx,DWORD PTR [edi+0x8]
   13dd1:	jne    0x13dd8
   13dd3:	mov    DWORD PTR [esi+0x4],ebx
   13dd6:	jmp    0x13def
   13dd8:	mov    eax,DWORD PTR [ebx+0x4]
   13ddb:	mov    DWORD PTR [esi+0x4],eax
   13dde:	mov    eax,DWORD PTR [ebx+0x4]
   13de1:	mov    DWORD PTR [eax],esi
   13de3:	mov    eax,DWORD PTR [edi+0x8]
   13de6:	mov    DWORD PTR [ebx+0x8],eax
   13de9:	mov    eax,DWORD PTR [edi+0x8]
   13dec:	mov    DWORD PTR [eax+0x4],ebx
   13def:	mov    eax,DWORD PTR [ebp-0x4]
   13df2:	mov    eax,DWORD PTR [eax+0x4]
   13df5:	cmp    DWORD PTR [eax+0x4],edi
   13df8:	jne    0x13dff
   13dfa:	mov    DWORD PTR [eax+0x4],ebx
   13dfd:	jmp    0x13e0d
   13dff:	mov    eax,DWORD PTR [edi+0x4]
   13e02:	cmp    DWORD PTR [eax],edi
   13e04:	jne    0x13e0a
   13e06:	mov    DWORD PTR [eax],ebx
   13e08:	jmp    0x13e0d
   13e0a:	mov    DWORD PTR [eax+0x8],ebx
   13e0d:	mov    eax,DWORD PTR [edi+0x4]
   13e10:	mov    DWORD PTR [ebx+0x4],eax
   13e13:	mov    eax,DWORD PTR [ebx+0x14]
   13e16:	mov    ecx,DWORD PTR [edi+0x14]
   13e19:	mov    DWORD PTR [ebx+0x14],ecx
   13e1c:	mov    DWORD PTR [edi+0x14],eax
   13e1f:	mov    ebx,edi
   13e21:	jmp    0x13e84
   13e23:	mov    eax,DWORD PTR [edi+0x4]
   13e26:	cmp    DWORD PTR [eax],edi
   13e28:	jne    0x13e2e
   13e2a:	mov    DWORD PTR [eax],esi
   13e2c:	jmp    0x13e31
   13e2e:	mov    DWORD PTR [eax+0x8],esi
   13e31:	mov    eax,DWORD PTR [ecx+0x4]
   13e34:	mov    DWORD PTR [ebp-0x8],eax
   13e37:	cmp    DWORD PTR [eax],edi
   13e39:	jne    0x13e5b
   13e3b:	mov    edx,DWORD PTR [edi+0x8]
   13e3e:	cmp    edx,DWORD PTR ds:0x788b0
   13e44:	jne    0x13e4d
   13e46:	mov    edx,DWORD PTR [edi+0x4]
   13e49:	mov    DWORD PTR [eax],edx
   13e4b:	jmp    0x13e5b
   13e4d:	push   esi
   13e4e:	call   0x11272
   13e53:	mov    ecx,DWORD PTR [ebp-0x8]
   13e56:	mov    DWORD PTR [ecx],eax
   13e58:	mov    ecx,DWORD PTR [ebp-0x4]
   13e5b:	mov    eax,DWORD PTR [ecx+0x4]
   13e5e:	mov    DWORD PTR [ebp-0x8],eax
   13e61:	cmp    DWORD PTR [eax+0x8],edi
   13e64:	jne    0x13e84
   13e66:	mov    ecx,DWORD PTR [edi]
   13e68:	cmp    ecx,DWORD PTR ds:0x788b0
   13e6e:	jne    0x13e78
   13e70:	mov    ecx,DWORD PTR [edi+0x4]
   13e73:	mov    DWORD PTR [eax+0x8],ecx
   13e76:	jmp    0x13e84
   13e78:	push   esi
   13e79:	call   0x11250
   13e7e:	mov    ecx,DWORD PTR [ebp-0x8]
   13e81:	mov    DWORD PTR [ecx+0x8],eax
   13e84:	xor    edi,edi
   13e86:	inc    edi
   13e87:	cmp    DWORD PTR [ebx+0x14],edi
   13e8a:	jne    0x13fa1
   13e90:	jmp    0x13f4f
   13e95:	cmp    DWORD PTR [esi+0x14],edi
   13e98:	jne    0x13f9e
   13e9e:	mov    eax,DWORD PTR [esi+0x4]
   13ea1:	cmp    esi,DWORD PTR [eax]
   13ea3:	jne    0x13f1a
   13ea5:	mov    eax,DWORD PTR [eax+0x8]
   13ea8:	cmp    DWORD PTR [eax+0x14],0x0
   13eac:	jne    0x13ec6
   13eae:	mov    DWORD PTR [eax+0x14],edi
   13eb1:	mov    eax,DWORD PTR [esi+0x4]
   13eb4:	and    DWORD PTR [eax+0x14],0x0
   13eb8:	push   DWORD PTR [esi+0x4]
   13ebb:	call   0x12dc8
   13ec0:	mov    eax,DWORD PTR [esi+0x4]
   13ec3:	mov    eax,DWORD PTR [eax+0x8]
   13ec6:	mov    ecx,DWORD PTR [eax]
   13ec8:	cmp    DWORD PTR [ecx+0x14],edi
   13ecb:	jne    0x13ed5
   13ecd:	mov    ecx,DWORD PTR [eax+0x8]
   13ed0:	cmp    DWORD PTR [ecx+0x14],edi
   13ed3:	je     0x13f48
   13ed5:	mov    ecx,DWORD PTR [eax+0x8]
   13ed8:	cmp    DWORD PTR [ecx+0x14],edi
   13edb:	jne    0x13ef5
   13edd:	mov    ecx,DWORD PTR [eax]
   13edf:	mov    DWORD PTR [ecx+0x14],edi
   13ee2:	mov    ecx,DWORD PTR [ebp-0x4]
   13ee5:	and    DWORD PTR [eax+0x14],0x0
   13ee9:	push   eax
   13eea:	call   0x12e16
   13eef:	mov    eax,DWORD PTR [esi+0x4]
   13ef2:	mov    eax,DWORD PTR [eax+0x8]
   13ef5:	mov    ecx,DWORD PTR [esi+0x4]
   13ef8:	mov    ecx,DWORD PTR [ecx+0x14]
   13efb:	mov    DWORD PTR [eax+0x14],ecx
   13efe:	mov    ecx,DWORD PTR [esi+0x4]
   13f01:	mov    DWORD PTR [ecx+0x14],edi
   13f04:	mov    eax,DWORD PTR [eax+0x8]
   13f07:	mov    ecx,DWORD PTR [ebp-0x4]
   13f0a:	mov    DWORD PTR [eax+0x14],edi
   13f0d:	push   DWORD PTR [esi+0x4]
   13f10:	call   0x12dc8
   13f15:	jmp    0x13f9e
   13f1a:	mov    eax,DWORD PTR [eax]
   13f1c:	cmp    DWORD PTR [eax+0x14],0x0
   13f20:	jne    0x13f39
   13f22:	mov    DWORD PTR [eax+0x14],edi
   13f25:	mov    eax,DWORD PTR [esi+0x4]
   13f28:	and    DWORD PTR [eax+0x14],0x0
   13f2c:	push   DWORD PTR [esi+0x4]
   13f2f:	call   0x12e16
   13f34:	mov    eax,DWORD PTR [esi+0x4]
   13f37:	mov    eax,DWORD PTR [eax]
   13f39:	mov    ecx,DWORD PTR [eax+0x8]
   13f3c:	cmp    DWORD PTR [ecx+0x14],edi
   13f3f:	jne    0x13f60
   13f41:	mov    ecx,DWORD PTR [eax]
   13f43:	cmp    DWORD PTR [ecx+0x14],edi
   13f46:	jne    0x13f60
   13f48:	and    DWORD PTR [eax+0x14],0x0
   13f4c:	mov    esi,DWORD PTR [esi+0x4]
   13f4f:	mov    ecx,DWORD PTR [ebp-0x4]
   13f52:	mov    eax,DWORD PTR [ecx+0x4]
   13f55:	cmp    esi,DWORD PTR [eax+0x4]
   13f58:	jne    0x13e95
   13f5e:	jmp    0x13f9e
   13f60:	mov    ecx,DWORD PTR [eax]
   13f62:	cmp    DWORD PTR [ecx+0x14],edi
   13f65:	jne    0x13f7f
   13f67:	mov    ecx,DWORD PTR [eax+0x8]
   13f6a:	mov    DWORD PTR [ecx+0x14],edi
   13f6d:	mov    ecx,DWORD PTR [ebp-0x4]
   13f70:	and    DWORD PTR [eax+0x14],0x0
   13f74:	push   eax
   13f75:	call   0x12dc8
   13f7a:	mov    eax,DWORD PTR [esi+0x4]
   13f7d:	mov    eax,DWORD PTR [eax]
   13f7f:	mov    ecx,DWORD PTR [esi+0x4]
   13f82:	mov    ecx,DWORD PTR [ecx+0x14]
   13f85:	mov    DWORD PTR [eax+0x14],ecx
   13f88:	mov    ecx,DWORD PTR [esi+0x4]
   13f8b:	mov    DWORD PTR [ecx+0x14],edi
   13f8e:	mov    eax,DWORD PTR [eax]
   13f90:	mov    ecx,DWORD PTR [ebp-0x4]
   13f93:	mov    DWORD PTR [eax+0x14],edi
   13f96:	push   DWORD PTR [esi+0x4]
   13f99:	call   0x12e16
   13f9e:	mov    DWORD PTR [esi+0x14],edi
   13fa1:	push   ebx
   13fa2:	call   0x10a3a
   13fa7:	mov    eax,DWORD PTR [ebp-0x4]
   13faa:	dec    DWORD PTR [eax+0xc]
   13fad:	mov    eax,DWORD PTR [ebp+0x8]
   13fb0:	pop    ecx
   13fb1:	mov    ecx,DWORD PTR [ebp+0xc]
   13fb4:	pop    edi
   13fb5:	pop    esi
   13fb6:	mov    DWORD PTR [eax],ecx
   13fb8:	pop    ebx
   13fb9:	leave  
   13fba:	ret    0x8
   13fbd:	int3   
   13fbe:	int3   
   13fbf:	int3   
   13fc0:	int3   
   13fc1:	int3   
   13fc2:	mov    edi,edi
   13fc4:	push   ebp
   13fc5:	mov    ebp,esp
   13fc7:	push   esi
   13fc8:	push   edi
   13fc9:	push   DWORD PTR [ebp+0xc]
   13fcc:	mov    edi,ecx
   13fce:	call   0x13146
   13fd3:	push   DWORD PTR [ebp+0xc]
   13fd6:	mov    ecx,edi
   13fd8:	mov    esi,eax
   13fda:	call   0x12d90
   13fdf:	mov    ecx,DWORD PTR [ebp+0x8]
   13fe2:	pop    edi
   13fe3:	mov    DWORD PTR [ecx],eax
   13fe5:	mov    DWORD PTR [ecx+0x4],esi
   13fe8:	mov    eax,ecx
   13fea:	pop    esi
   13feb:	pop    ebp
   13fec:	ret    0x8
   13fef:	int3   
   13ff0:	int3   
   13ff1:	int3   
   13ff2:	int3   
   13ff3:	int3   
   13ff4:	mov    edi,edi
   13ff6:	push   esi
   13ff7:	push   edi
   13ff8:	push   0x1
   13ffa:	xor    edi,edi
   13ffc:	push   edi
   13ffd:	mov    esi,ecx
   13fff:	call   0x1ab00
   14004:	cmp    DWORD PTR ds:0x788b0,edi
   1400a:	jne    0x14021
   1400c:	mov    ecx,eax
   1400e:	mov    DWORD PTR ds:0x788b0,ecx
   14014:	mov    DWORD PTR [ecx],edi
   14016:	mov    ecx,DWORD PTR ds:0x788b0
   1401c:	xor    eax,eax
   1401e:	mov    DWORD PTR [ecx+0x8],edi
   14021:	inc    DWORD PTR ds:0x78a08
   14027:	cmp    eax,edi
   14029:	je     0x14032
   1402b:	push   eax
   1402c:	call   0x10a3a
   14031:	pop    ecx
   14032:	push   edi
   14033:	push   DWORD PTR ds:0x788b0
   14039:	mov    ecx,esi
   1403b:	call   0x1ab00
   14040:	mov    DWORD PTR [esi+0xc],edi
   14043:	mov    DWORD PTR [esi+0x4],eax
   14046:	mov    DWORD PTR [eax],eax
   14048:	mov    esi,DWORD PTR [esi+0x4]
   1404b:	pop    edi
   1404c:	mov    DWORD PTR [esi+0x8],esi
   1404f:	pop    esi
   14050:	ret    
   14051:	int3   
   14052:	int3   
   14053:	int3   
   14054:	int3   
   14055:	int3   
   14056:	mov    edi,edi
   14058:	push   ebp
   14059:	mov    ebp,esp
   1405b:	push   esi
   1405c:	push   edi
   1405d:	push   DWORD PTR [ebp+0xc]
   14060:	mov    edi,ecx
   14062:	call   0x1317e
   14067:	push   DWORD PTR [ebp+0xc]
   1406a:	mov    ecx,edi
   1406c:	mov    esi,eax
   1406e:	call   0x12e66
   14073:	mov    ecx,DWORD PTR [ebp+0x8]
   14076:	pop    edi
   14077:	mov    DWORD PTR [ecx],eax
   14079:	mov    DWORD PTR [ecx+0x4],esi
   1407c:	mov    eax,ecx
   1407e:	pop    esi
   1407f:	pop    ebp
   14080:	ret    0x8
   14083:	int3   
   14084:	int3   
   14085:	int3   
   14086:	int3   
   14087:	int3   
   14088:	mov    edi,edi
   1408a:	push   esi
   1408b:	push   edi
   1408c:	push   0x1
   1408e:	xor    edi,edi
   14090:	push   edi
   14091:	mov    esi,ecx
   14093:	call   0x13974
   14098:	cmp    DWORD PTR ds:0x788bc,edi
   1409e:	jne    0x140b5
   140a0:	mov    ecx,eax
   140a2:	mov    DWORD PTR ds:0x788bc,ecx
   140a8:	mov    DWORD PTR [ecx],edi
   140aa:	mov    ecx,DWORD PTR ds:0x788bc
   140b0:	xor    eax,eax
   140b2:	mov    DWORD PTR [ecx+0x8],edi
   140b5:	inc    DWORD PTR ds:0x78a0c
   140bb:	cmp    eax,edi
   140bd:	je     0x140c6
   140bf:	push   eax
   140c0:	call   0x10a3a
   140c5:	pop    ecx
   140c6:	push   edi
   140c7:	push   DWORD PTR ds:0x788bc
   140cd:	mov    ecx,esi
   140cf:	call   0x13974
   140d4:	mov    DWORD PTR [esi+0xc],edi
   140d7:	mov    DWORD PTR [esi+0x4],eax
   140da:	mov    DWORD PTR [eax],eax
   140dc:	mov    esi,DWORD PTR [esi+0x4]
   140df:	pop    edi
   140e0:	mov    DWORD PTR [esi+0x8],esi
   140e3:	pop    esi
   140e4:	ret    
   140e5:	int3   
   140e6:	int3   
   140e7:	int3   
   140e8:	int3   
   140e9:	int3   
   140ea:	mov    edi,edi
   140ec:	push   ebp
   140ed:	mov    ebp,esp
   140ef:	push   esi
   140f0:	push   edi
   140f1:	push   DWORD PTR [ebp+0xc]
   140f4:	mov    edi,ecx
   140f6:	call   0x1325c
   140fb:	push   DWORD PTR [ebp+0xc]
   140fe:	mov    ecx,edi
   14100:	mov    esi,eax
   14102:	call   0x12ea6
   14107:	mov    ecx,DWORD PTR [ebp+0x8]
   1410a:	pop    edi
   1410b:	mov    DWORD PTR [ecx],eax
   1410d:	mov    DWORD PTR [ecx+0x4],esi
   14110:	mov    eax,ecx
   14112:	pop    esi
   14113:	pop    ebp
   14114:	ret    0x8
   14117:	int3   
   14118:	int3   
   14119:	int3   
   1411a:	int3   
   1411b:	int3   
   1411c:	mov    edi,edi
   1411e:	push   esi
   1411f:	push   edi
   14120:	push   0x1
   14122:	xor    edi,edi
   14124:	push   edi
   14125:	mov    esi,ecx
   14127:	call   0x13998
   1412c:	cmp    DWORD PTR ds:0x788c0,edi
   14132:	jne    0x14149
   14134:	mov    ecx,eax
   14136:	mov    DWORD PTR ds:0x788c0,ecx
   1413c:	mov    DWORD PTR [ecx],edi
   1413e:	mov    ecx,DWORD PTR ds:0x788c0
   14144:	xor    eax,eax
   14146:	mov    DWORD PTR [ecx+0x8],edi
   14149:	inc    DWORD PTR ds:0x78a10
   1414f:	cmp    eax,edi
   14151:	je     0x1415a
   14153:	push   eax
   14154:	call   0x10a3a
   14159:	pop    ecx
   1415a:	push   edi
   1415b:	push   DWORD PTR ds:0x788c0
   14161:	mov    ecx,esi
   14163:	call   0x13998
   14168:	mov    DWORD PTR [esi+0xc],edi
   1416b:	mov    DWORD PTR [esi+0x4],eax
   1416e:	mov    DWORD PTR [eax],eax
   14170:	mov    esi,DWORD PTR [esi+0x4]
   14173:	pop    edi
   14174:	mov    DWORD PTR [esi+0x8],esi
   14177:	pop    esi
   14178:	ret    
   14179:	int3   
   1417a:	int3   
   1417b:	int3   
   1417c:	int3   
   1417d:	int3   
   1417e:	mov    edi,edi
   14180:	push   ebp
   14181:	mov    ebp,esp
   14183:	push   esi
   14184:	push   edi
   14185:	push   DWORD PTR [ebp+0xc]
   14188:	mov    edi,ecx
   1418a:	call   0x1333a
   1418f:	push   DWORD PTR [ebp+0xc]
   14192:	mov    ecx,edi
   14194:	mov    esi,eax
   14196:	call   0x12ee6
   1419b:	mov    ecx,DWORD PTR [ebp+0x8]
   1419e:	pop    edi
   1419f:	mov    DWORD PTR [ecx],eax
   141a1:	mov    DWORD PTR [ecx+0x4],esi
   141a4:	mov    eax,ecx
   141a6:	pop    esi
   141a7:	pop    ebp
   141a8:	ret    0x8
   141ab:	int3   
   141ac:	int3   
   141ad:	int3   
   141ae:	int3   
   141af:	int3   
   141b0:	mov    edi,edi
   141b2:	push   esi
   141b3:	push   edi
   141b4:	push   0x1
   141b6:	xor    edi,edi
   141b8:	push   edi
   141b9:	mov    esi,ecx
   141bb:	call   0x1ab00
   141c0:	cmp    DWORD PTR ds:0x788c4,edi
   141c6:	jne    0x141dd
   141c8:	mov    ecx,eax
   141ca:	mov    DWORD PTR ds:0x788c4,ecx
   141d0:	mov    DWORD PTR [ecx],edi
   141d2:	mov    ecx,DWORD PTR ds:0x788c4
   141d8:	xor    eax,eax
   141da:	mov    DWORD PTR [ecx+0x8],edi
   141dd:	inc    DWORD PTR ds:0x78a14
   141e3:	cmp    eax,edi
   141e5:	je     0x141ee
   141e7:	push   eax
   141e8:	call   0x10a3a
   141ed:	pop    ecx
   141ee:	push   edi
   141ef:	push   DWORD PTR ds:0x788c4
   141f5:	mov    ecx,esi
   141f7:	call   0x1ab00
   141fc:	mov    DWORD PTR [esi+0xc],edi
   141ff:	mov    DWORD PTR [esi+0x4],eax
   14202:	mov    DWORD PTR [eax],eax
   14204:	mov    esi,DWORD PTR [esi+0x4]
   14207:	pop    edi
   14208:	mov    DWORD PTR [esi+0x8],esi
   1420b:	pop    esi
   1420c:	ret    
   1420d:	int3   
   1420e:	int3   
   1420f:	int3   
   14210:	int3   
   14211:	int3   
   14212:	mov    edi,edi
   14214:	push   ebp
   14215:	mov    ebp,esp
   14217:	push   ecx
   14218:	push   esi
   14219:	push   DWORD PTR [ebp+0xc]
   1421c:	mov    esi,ecx
   1421e:	call   0x13372
   14223:	mov    DWORD PTR [ebp-0x4],eax
   14226:	cmp    eax,DWORD PTR [esi+0x4]
   14229:	je     0x14240
   1422b:	add    eax,0xc
   1422e:	push   eax
   1422f:	push   DWORD PTR [ebp+0xc]
   14232:	call   0x19894
   14237:	test   al,al
   14239:	jne    0x14240
   1423b:	lea    eax,[ebp-0x4]
   1423e:	jmp    0x14249
   14240:	mov    eax,DWORD PTR [esi+0x4]
   14243:	mov    DWORD PTR [ebp+0xc],eax
   14246:	lea    eax,[ebp+0xc]
   14249:	mov    ecx,DWORD PTR [eax]
   1424b:	mov    eax,DWORD PTR [ebp+0x8]
   1424e:	mov    DWORD PTR [eax],ecx
   14250:	pop    esi
   14251:	leave  
   14252:	ret    0x8
   14255:	int3   
   14256:	int3   
   14257:	int3   
   14258:	int3   
   14259:	int3   
   1425a:	mov    edi,edi
   1425c:	push   ebp
   1425d:	mov    ebp,esp
   1425f:	push   ecx
   14260:	push   ecx
   14261:	push   ebx
   14262:	push   esi
   14263:	mov    DWORD PTR [ebp-0x4],ecx
   14266:	push   edi
   14267:	mov    edi,DWORD PTR [ebp+0xc]
   1426a:	lea    ecx,[ebp+0xc]
   1426d:	call   0x12f94
   14272:	mov    esi,DWORD PTR [edi]
   14274:	mov    eax,ds:0x788b4
   14279:	mov    ebx,edi
   1427b:	mov    DWORD PTR [ebp-0x8],esi
   1427e:	cmp    esi,eax
   14280:	jne    0x1429e
   14282:	mov    esi,DWORD PTR [edi+0x8]
   14285:	mov    eax,DWORD PTR [ebx+0x4]
   14288:	mov    ecx,DWORD PTR [ebp-0x4]
   1428b:	mov    DWORD PTR [esi+0x4],eax
   1428e:	mov    eax,DWORD PTR [ecx+0x4]
   14291:	cmp    DWORD PTR [eax+0x4],edi
   14294:	jne    0x14313
   14296:	mov    DWORD PTR [eax+0x4],esi
   14299:	jmp    0x14321
   1429e:	mov    ecx,DWORD PTR [edi+0x8]
   142a1:	cmp    ecx,eax
   142a3:	je     0x14285
   142a5:	push   ecx
   142a6:	call   0x112b6
   142ab:	mov    ebx,eax
   142ad:	mov    esi,DWORD PTR [ebx+0x8]
   142b0:	cmp    ebx,edi
   142b2:	je     0x14285
   142b4:	mov    eax,DWORD PTR [ebp-0x8]
   142b7:	mov    DWORD PTR [eax+0x4],ebx
   142ba:	mov    eax,DWORD PTR [edi]
   142bc:	mov    DWORD PTR [ebx],eax
   142be:	cmp    ebx,DWORD PTR [edi+0x8]
   142c1:	jne    0x142c8
   142c3:	mov    DWORD PTR [esi+0x4],ebx
   142c6:	jmp    0x142df
   142c8:	mov    eax,DWORD PTR [ebx+0x4]
   142cb:	mov    DWORD PTR [esi+0x4],eax
   142ce:	mov    eax,DWORD PTR [ebx+0x4]
   142d1:	mov    DWORD PTR [eax],esi
   142d3:	mov    eax,DWORD PTR [edi+0x8]
   142d6:	mov    DWORD PTR [ebx+0x8],eax
   142d9:	mov    eax,DWORD PTR [edi+0x8]
   142dc:	mov    DWORD PTR [eax+0x4],ebx
   142df:	mov    eax,DWORD PTR [ebp-0x4]
   142e2:	mov    eax,DWORD PTR [eax+0x4]
   142e5:	cmp    DWORD PTR [eax+0x4],edi
   142e8:	jne    0x142ef
   142ea:	mov    DWORD PTR [eax+0x4],ebx
   142ed:	jmp    0x142fd
   142ef:	mov    eax,DWORD PTR [edi+0x4]
   142f2:	cmp    DWORD PTR [eax],edi
   142f4:	jne    0x142fa
   142f6:	mov    DWORD PTR [eax],ebx
   142f8:	jmp    0x142fd
   142fa:	mov    DWORD PTR [eax+0x8],ebx
   142fd:	mov    eax,DWORD PTR [edi+0x4]
   14300:	mov    DWORD PTR [ebx+0x4],eax
   14303:	mov    eax,DWORD PTR [ebx+0x10]
   14306:	mov    ecx,DWORD PTR [edi+0x10]
   14309:	mov    DWORD PTR [ebx+0x10],ecx
   1430c:	mov    DWORD PTR [edi+0x10],eax
   1430f:	mov    ebx,edi
   14311:	jmp    0x14374
   14313:	mov    eax,DWORD PTR [edi+0x4]
   14316:	cmp    DWORD PTR [eax],edi
   14318:	jne    0x1431e
   1431a:	mov    DWORD PTR [eax],esi
   1431c:	jmp    0x14321
   1431e:	mov    DWORD PTR [eax+0x8],esi
   14321:	mov    eax,DWORD PTR [ecx+0x4]
   14324:	mov    DWORD PTR [ebp-0x8],eax
   14327:	cmp    DWORD PTR [eax],edi
   14329:	jne    0x1434b
   1432b:	mov    edx,DWORD PTR [edi+0x8]
   1432e:	cmp    edx,DWORD PTR ds:0x788b4
   14334:	jne    0x1433d
   14336:	mov    edx,DWORD PTR [edi+0x4]
   14339:	mov    DWORD PTR [eax],edx
   1433b:	jmp    0x1434b
   1433d:	push   esi
   1433e:	call   0x112b6
   14343:	mov    ecx,DWORD PTR [ebp-0x8]
   14346:	mov    DWORD PTR [ecx],eax
   14348:	mov    ecx,DWORD PTR [ebp-0x4]
   1434b:	mov    eax,DWORD PTR [ecx+0x4]
   1434e:	mov    DWORD PTR [ebp-0x8],eax
   14351:	cmp    DWORD PTR [eax+0x8],edi
   14354:	jne    0x14374
   14356:	mov    ecx,DWORD PTR [edi]
   14358:	cmp    ecx,DWORD PTR ds:0x788b4
   1435e:	jne    0x14368
   14360:	mov    ecx,DWORD PTR [edi+0x4]
   14363:	mov    DWORD PTR [eax+0x8],ecx
   14366:	jmp    0x14374
   14368:	push   esi
   14369:	call   0x11294
   1436e:	mov    ecx,DWORD PTR [ebp-0x8]
   14371:	mov    DWORD PTR [ecx+0x8],eax
   14374:	xor    edi,edi
   14376:	inc    edi
   14377:	cmp    DWORD PTR [ebx+0x10],edi
   1437a:	jne    0x14491
   14380:	jmp    0x1443f
   14385:	cmp    DWORD PTR [esi+0x10],edi
   14388:	jne    0x1448e
   1438e:	mov    eax,DWORD PTR [esi+0x4]
   14391:	cmp    esi,DWORD PTR [eax]
   14393:	jne    0x1440a
   14395:	mov    eax,DWORD PTR [eax+0x8]
   14398:	cmp    DWORD PTR [eax+0x10],0x0
   1439c:	jne    0x143b6
   1439e:	mov    DWORD PTR [eax+0x10],edi
   143a1:	mov    eax,DWORD PTR [esi+0x4]
   143a4:	and    DWORD PTR [eax+0x10],0x0
   143a8:	push   DWORD PTR [esi+0x4]
   143ab:	call   0x12fca
   143b0:	mov    eax,DWORD PTR [esi+0x4]
   143b3:	mov    eax,DWORD PTR [eax+0x8]
   143b6:	mov    ecx,DWORD PTR [eax]
   143b8:	cmp    DWORD PTR [ecx+0x10],edi
   143bb:	jne    0x143c5
   143bd:	mov    ecx,DWORD PTR [eax+0x8]
   143c0:	cmp    DWORD PTR [ecx+0x10],edi
   143c3:	je     0x14438
   143c5:	mov    ecx,DWORD PTR [eax+0x8]
   143c8:	cmp    DWORD PTR [ecx+0x10],edi
   143cb:	jne    0x143e5
   143cd:	mov    ecx,DWORD PTR [eax]
   143cf:	mov    DWORD PTR [ecx+0x10],edi
   143d2:	mov    ecx,DWORD PTR [ebp-0x4]
   143d5:	and    DWORD PTR [eax+0x10],0x0
   143d9:	push   eax
   143da:	call   0x13018
   143df:	mov    eax,DWORD PTR [esi+0x4]
   143e2:	mov    eax,DWORD PTR [eax+0x8]
   143e5:	mov    ecx,DWORD PTR [esi+0x4]
   143e8:	mov    ecx,DWORD PTR [ecx+0x10]
   143eb:	mov    DWORD PTR [eax+0x10],ecx
   143ee:	mov    ecx,DWORD PTR [esi+0x4]
   143f1:	mov    DWORD PTR [ecx+0x10],edi
   143f4:	mov    eax,DWORD PTR [eax+0x8]
   143f7:	mov    ecx,DWORD PTR [ebp-0x4]
   143fa:	mov    DWORD PTR [eax+0x10],edi
   143fd:	push   DWORD PTR [esi+0x4]
   14400:	call   0x12fca
   14405:	jmp    0x1448e
   1440a:	mov    eax,DWORD PTR [eax]
   1440c:	cmp    DWORD PTR [eax+0x10],0x0
   14410:	jne    0x14429
   14412:	mov    DWORD PTR [eax+0x10],edi
   14415:	mov    eax,DWORD PTR [esi+0x4]
   14418:	and    DWORD PTR [eax+0x10],0x0
   1441c:	push   DWORD PTR [esi+0x4]
   1441f:	call   0x13018
   14424:	mov    eax,DWORD PTR [esi+0x4]
   14427:	mov    eax,DWORD PTR [eax]
   14429:	mov    ecx,DWORD PTR [eax+0x8]
   1442c:	cmp    DWORD PTR [ecx+0x10],edi
   1442f:	jne    0x14450
   14431:	mov    ecx,DWORD PTR [eax]
   14433:	cmp    DWORD PTR [ecx+0x10],edi
   14436:	jne    0x14450
   14438:	and    DWORD PTR [eax+0x10],0x0
   1443c:	mov    esi,DWORD PTR [esi+0x4]
   1443f:	mov    ecx,DWORD PTR [ebp-0x4]
   14442:	mov    eax,DWORD PTR [ecx+0x4]
   14445:	cmp    esi,DWORD PTR [eax+0x4]
   14448:	jne    0x14385
   1444e:	jmp    0x1448e
   14450:	mov    ecx,DWORD PTR [eax]
   14452:	cmp    DWORD PTR [ecx+0x10],edi
   14455:	jne    0x1446f
   14457:	mov    ecx,DWORD PTR [eax+0x8]
   1445a:	mov    DWORD PTR [ecx+0x10],edi
   1445d:	mov    ecx,DWORD PTR [ebp-0x4]
   14460:	and    DWORD PTR [eax+0x10],0x0
   14464:	push   eax
   14465:	call   0x12fca
   1446a:	mov    eax,DWORD PTR [esi+0x4]
   1446d:	mov    eax,DWORD PTR [eax]
   1446f:	mov    ecx,DWORD PTR [esi+0x4]
   14472:	mov    ecx,DWORD PTR [ecx+0x10]
   14475:	mov    DWORD PTR [eax+0x10],ecx
   14478:	mov    ecx,DWORD PTR [esi+0x4]
   1447b:	mov    DWORD PTR [ecx+0x10],edi
   1447e:	mov    eax,DWORD PTR [eax]
   14480:	mov    ecx,DWORD PTR [ebp-0x4]
   14483:	mov    DWORD PTR [eax+0x10],edi
   14486:	push   DWORD PTR [esi+0x4]
   14489:	call   0x13018
   1448e:	mov    DWORD PTR [esi+0x10],edi
   14491:	push   ebx
   14492:	call   0x10a3a
   14497:	mov    eax,DWORD PTR [ebp-0x4]
   1449a:	dec    DWORD PTR [eax+0xc]
   1449d:	mov    eax,DWORD PTR [ebp+0x8]
   144a0:	pop    ecx
   144a1:	mov    ecx,DWORD PTR [ebp+0xc]
   144a4:	pop    edi
   144a5:	pop    esi
   144a6:	mov    DWORD PTR [eax],ecx
   144a8:	pop    ebx
   144a9:	leave  
   144aa:	ret    0x8
   144ad:	int3   
   144ae:	int3   
   144af:	int3   
   144b0:	int3   
   144b1:	int3   
   144b2:	mov    edi,edi
   144b4:	push   ebp
   144b5:	mov    ebp,esp
   144b7:	push   esi
   144b8:	push   edi
   144b9:	push   DWORD PTR [ebp+0xc]
   144bc:	mov    edi,ecx
   144be:	call   0x134c8
   144c3:	push   DWORD PTR [ebp+0xc]
   144c6:	mov    ecx,edi
   144c8:	mov    esi,eax
   144ca:	call   0x13490
   144cf:	mov    ecx,DWORD PTR [ebp+0x8]
   144d2:	pop    edi
   144d3:	mov    DWORD PTR [ecx],eax
   144d5:	mov    DWORD PTR [ecx+0x4],esi
   144d8:	mov    eax,ecx
   144da:	pop    esi
   144db:	pop    ebp
   144dc:	ret    0x8
   144df:	int3   
   144e0:	int3   
   144e1:	int3   
   144e2:	int3   
   144e3:	int3   
   144e4:	mov    edi,edi
   144e6:	push   esi
   144e7:	push   edi
   144e8:	push   0x1
   144ea:	xor    edi,edi
   144ec:	push   edi
   144ed:	mov    esi,ecx
   144ef:	call   0x139bc
   144f4:	cmp    DWORD PTR ds:0x788b4,edi
   144fa:	jne    0x14511
   144fc:	mov    ecx,eax
   144fe:	mov    DWORD PTR ds:0x788b4,ecx
   14504:	mov    DWORD PTR [ecx],edi
   14506:	mov    ecx,DWORD PTR ds:0x788b4
   1450c:	xor    eax,eax
   1450e:	mov    DWORD PTR [ecx+0x8],edi
   14511:	inc    DWORD PTR ds:0x78a18
   14517:	cmp    eax,edi
   14519:	je     0x14522
   1451b:	push   eax
   1451c:	call   0x10a3a
   14521:	pop    ecx
   14522:	push   edi
   14523:	push   DWORD PTR ds:0x788b4
   14529:	mov    ecx,esi
   1452b:	call   0x139bc
   14530:	mov    DWORD PTR [esi+0xc],edi
   14533:	mov    DWORD PTR [esi+0x4],eax
   14536:	mov    DWORD PTR [eax],eax
   14538:	mov    esi,DWORD PTR [esi+0x4]
   1453b:	pop    edi
   1453c:	mov    DWORD PTR [esi+0x8],esi
   1453f:	pop    esi
   14540:	ret    
   14541:	int3   
   14542:	int3   
   14543:	int3   
   14544:	int3   
   14545:	int3   
   14546:	mov    edi,edi
   14548:	push   ebp
   14549:	mov    ebp,esp
   1454b:	push   ebx
   1454c:	push   esi
   1454d:	mov    esi,DWORD PTR [ebp+0x10]
   14550:	push   edi
   14551:	push   0x0
   14553:	push   esi
   14554:	mov    edi,ecx
   14556:	call   0x139bc
   1455b:	push   DWORD PTR [ebp+0x14]
   1455e:	mov    ebx,eax
   14560:	mov    eax,ds:0x788b4
   14565:	mov    DWORD PTR [ebx],eax
   14567:	mov    eax,ds:0x788b4
   1456c:	mov    DWORD PTR [ebx+0x8],eax
   1456f:	lea    eax,[ebx+0xc]
   14572:	push   eax
   14573:	call   0x1a43e
   14578:	inc    DWORD PTR [edi+0xc]
   1457b:	cmp    esi,DWORD PTR [edi+0x4]
   1457e:	je     0x145a2
   14580:	mov    eax,DWORD PTR [ebp+0xc]
   14583:	cmp    eax,DWORD PTR ds:0x788b4
   14589:	jne    0x145a2
   1458b:	mov    eax,DWORD PTR [ebp+0x14]
   1458e:	mov    eax,DWORD PTR [eax]
   14590:	cmp    eax,DWORD PTR [esi+0xc]
   14593:	jb     0x145a2
   14595:	mov    DWORD PTR [esi+0x8],ebx
   14598:	mov    eax,DWORD PTR [edi+0x4]
   1459b:	cmp    esi,DWORD PTR [eax+0x8]
   1459e:	jne    0x145bc
   145a0:	jmp    0x145b1
   145a2:	mov    DWORD PTR [esi],ebx
   145a4:	mov    eax,DWORD PTR [edi+0x4]
   145a7:	cmp    esi,eax
   145a9:	jne    0x145b6
   145ab:	mov    DWORD PTR [eax+0x4],ebx
   145ae:	mov    eax,DWORD PTR [edi+0x4]
   145b1:	mov    DWORD PTR [eax+0x8],ebx
   145b4:	jmp    0x145bc
   145b6:	cmp    esi,DWORD PTR [eax]
   145b8:	jne    0x145bc
   145ba:	mov    DWORD PTR [eax],ebx
   145bc:	mov    eax,DWORD PTR [edi+0x4]
   145bf:	mov    esi,ebx
   145c1:	cmp    ebx,DWORD PTR [eax+0x4]
   145c4:	je     0x14678
   145ca:	mov    eax,DWORD PTR [esi+0x4]
   145cd:	xor    edx,edx
   145cf:	cmp    DWORD PTR [eax+0x10],edx
   145d2:	jne    0x14678
   145d8:	mov    ecx,DWORD PTR [eax+0x4]
   145db:	cmp    eax,DWORD PTR [ecx]
   145dd:	jne    0x14619
   145df:	mov    ecx,DWORD PTR [ecx+0x8]
   145e2:	cmp    DWORD PTR [ecx+0x10],edx
   145e5:	je     0x14620
   145e7:	cmp    esi,DWORD PTR [eax+0x8]
   145ea:	jne    0x145f6
   145ec:	mov    esi,eax
   145ee:	push   esi
   145ef:	mov    ecx,edi
   145f1:	call   0x12fca
   145f6:	mov    eax,DWORD PTR [esi+0x4]
   145f9:	mov    DWORD PTR [eax+0x10],0x1
   14600:	mov    eax,DWORD PTR [esi+0x4]
   14603:	mov    eax,DWORD PTR [eax+0x4]
   14606:	and    DWORD PTR [eax+0x10],0x0
   1460a:	mov    eax,DWORD PTR [esi+0x4]
   1460d:	push   DWORD PTR [eax+0x4]
   14610:	mov    ecx,edi
   14612:	call   0x13018
   14617:	jmp    0x1466c
   14619:	mov    ecx,DWORD PTR [ecx]
   1461b:	cmp    DWORD PTR [ecx+0x10],edx
   1461e:	jne    0x1463d
   14620:	mov    edx,eax
   14622:	xor    eax,eax
   14624:	inc    eax
   14625:	mov    DWORD PTR [edx+0x10],eax
   14628:	mov    DWORD PTR [ecx+0x10],eax
   1462b:	mov    eax,DWORD PTR [esi+0x4]
   1462e:	mov    eax,DWORD PTR [eax+0x4]
   14631:	and    DWORD PTR [eax+0x10],0x0
   14635:	mov    eax,DWORD PTR [esi+0x4]
   14638:	mov    esi,DWORD PTR [eax+0x4]
   1463b:	jmp    0x1466c
   1463d:	cmp    esi,DWORD PTR [eax]
   1463f:	jne    0x1464b
   14641:	mov    esi,eax
   14643:	push   esi
   14644:	mov    ecx,edi
   14646:	call   0x13018
   1464b:	mov    eax,DWORD PTR [esi+0x4]
   1464e:	mov    DWORD PTR [eax+0x10],0x1
   14655:	mov    eax,DWORD PTR [esi+0x4]
   14658:	mov    eax,DWORD PTR [eax+0x4]
   1465b:	and    DWORD PTR [eax+0x10],0x0
   1465f:	mov    eax,DWORD PTR [esi+0x4]
   14662:	push   DWORD PTR [eax+0x4]
   14665:	mov    ecx,edi
   14667:	call   0x12fca
   1466c:	mov    eax,DWORD PTR [edi+0x4]
   1466f:	cmp    esi,DWORD PTR [eax+0x4]
   14672:	jne    0x145ca
   14678:	mov    eax,DWORD PTR [edi+0x4]
   1467b:	mov    eax,DWORD PTR [eax+0x4]
   1467e:	pop    edi
   1467f:	mov    DWORD PTR [eax+0x10],0x1
   14686:	mov    eax,DWORD PTR [ebp+0x8]
   14689:	pop    esi
   1468a:	mov    DWORD PTR [eax],ebx
   1468c:	pop    ebx
   1468d:	pop    ebp
   1468e:	ret    0x10
   14691:	int3   
   14692:	int3   
   14693:	int3   
   14694:	int3   
   14695:	int3   
   14696:	mov    edi,edi
   14698:	push   esi
   14699:	push   edi
   1469a:	push   0x1
   1469c:	xor    edi,edi
   1469e:	push   edi
   1469f:	mov    esi,ecx
   146a1:	call   0x139e0
   146a6:	cmp    DWORD PTR ds:0x788b8,edi
   146ac:	jne    0x146c3
   146ae:	mov    ecx,eax
   146b0:	mov    DWORD PTR ds:0x788b8,ecx
   146b6:	mov    DWORD PTR [ecx],edi
   146b8:	mov    ecx,DWORD PTR ds:0x788b8
   146be:	xor    eax,eax
   146c0:	mov    DWORD PTR [ecx+0x8],edi
   146c3:	inc    DWORD PTR ds:0x78a1c
   146c9:	cmp    eax,edi
   146cb:	je     0x146d4
   146cd:	push   eax
   146ce:	call   0x10a3a
   146d3:	pop    ecx
   146d4:	push   edi
   146d5:	push   DWORD PTR ds:0x788b8
   146db:	mov    ecx,esi
   146dd:	call   0x139e0
   146e2:	mov    DWORD PTR [esi+0xc],edi
   146e5:	mov    DWORD PTR [esi+0x4],eax
   146e8:	mov    DWORD PTR [eax],eax
   146ea:	mov    esi,DWORD PTR [esi+0x4]
   146ed:	pop    edi
   146ee:	mov    DWORD PTR [esi+0x8],esi
   146f1:	pop    esi
   146f2:	ret    
   146f3:	int3   
   146f4:	int3   
   146f5:	int3   
   146f6:	int3   
   146f7:	int3   
   146f8:	mov    edi,edi
   146fa:	push   ebp
   146fb:	mov    ebp,esp
   146fd:	push   ebx
   146fe:	push   esi
   146ff:	mov    esi,DWORD PTR [ebp+0x10]
   14702:	push   edi
   14703:	push   0x0
   14705:	push   esi
   14706:	mov    edi,ecx
   14708:	call   0x1ab00
   1470d:	push   DWORD PTR [ebp+0x14]
   14710:	mov    ebx,eax
   14712:	mov    eax,ds:0x788b0
   14717:	mov    DWORD PTR [ebx],eax
   14719:	mov    eax,ds:0x788b0
   1471e:	mov    DWORD PTR [ebx+0x8],eax
   14721:	lea    eax,[ebx+0xc]
   14724:	push   eax
   14725:	call   0x116cc
   1472a:	inc    DWORD PTR [edi+0xc]
   1472d:	cmp    esi,DWORD PTR [edi+0x4]
   14730:	je     0x14754
   14732:	mov    eax,DWORD PTR [ebp+0xc]
   14735:	cmp    eax,DWORD PTR ds:0x788b0
   1473b:	jne    0x14754
   1473d:	mov    eax,DWORD PTR [ebp+0x14]
   14740:	mov    eax,DWORD PTR [eax]
   14742:	cmp    eax,DWORD PTR [esi+0xc]
   14745:	jb     0x14754
   14747:	mov    DWORD PTR [esi+0x8],ebx
   1474a:	mov    eax,DWORD PTR [edi+0x4]
   1474d:	cmp    esi,DWORD PTR [eax+0x8]
   14750:	jne    0x1476e
   14752:	jmp    0x14763
   14754:	mov    DWORD PTR [esi],ebx
   14756:	mov    eax,DWORD PTR [edi+0x4]
   14759:	cmp    esi,eax
   1475b:	jne    0x14768
   1475d:	mov    DWORD PTR [eax+0x4],ebx
   14760:	mov    eax,DWORD PTR [edi+0x4]
   14763:	mov    DWORD PTR [eax+0x8],ebx
   14766:	jmp    0x1476e
   14768:	cmp    esi,DWORD PTR [eax]
   1476a:	jne    0x1476e
   1476c:	mov    DWORD PTR [eax],ebx
   1476e:	mov    eax,DWORD PTR [edi+0x4]
   14771:	mov    esi,ebx
   14773:	cmp    ebx,DWORD PTR [eax+0x4]
   14776:	je     0x1482a
   1477c:	mov    eax,DWORD PTR [esi+0x4]
   1477f:	xor    edx,edx
   14781:	cmp    DWORD PTR [eax+0x14],edx
   14784:	jne    0x1482a
   1478a:	mov    ecx,DWORD PTR [eax+0x4]
   1478d:	cmp    eax,DWORD PTR [ecx]
   1478f:	jne    0x147cb
   14791:	mov    ecx,DWORD PTR [ecx+0x8]
   14794:	cmp    DWORD PTR [ecx+0x14],edx
   14797:	je     0x147d2
   14799:	cmp    esi,DWORD PTR [eax+0x8]
   1479c:	jne    0x147a8
   1479e:	mov    esi,eax
   147a0:	push   esi
   147a1:	mov    ecx,edi
   147a3:	call   0x12dc8
   147a8:	mov    eax,DWORD PTR [esi+0x4]
   147ab:	mov    DWORD PTR [eax+0x14],0x1
   147b2:	mov    eax,DWORD PTR [esi+0x4]
   147b5:	mov    eax,DWORD PTR [eax+0x4]
   147b8:	and    DWORD PTR [eax+0x14],0x0
   147bc:	mov    eax,DWORD PTR [esi+0x4]
   147bf:	push   DWORD PTR [eax+0x4]
   147c2:	mov    ecx,edi
   147c4:	call   0x12e16
   147c9:	jmp    0x1481e
   147cb:	mov    ecx,DWORD PTR [ecx]
   147cd:	cmp    DWORD PTR [ecx+0x14],edx
   147d0:	jne    0x147ef
   147d2:	mov    edx,eax
   147d4:	xor    eax,eax
   147d6:	inc    eax
   147d7:	mov    DWORD PTR [edx+0x14],eax
   147da:	mov    DWORD PTR [ecx+0x14],eax
   147dd:	mov    eax,DWORD PTR [esi+0x4]
   147e0:	mov    eax,DWORD PTR [eax+0x4]
   147e3:	and    DWORD PTR [eax+0x14],0x0
   147e7:	mov    eax,DWORD PTR [esi+0x4]
   147ea:	mov    esi,DWORD PTR [eax+0x4]
   147ed:	jmp    0x1481e
   147ef:	cmp    esi,DWORD PTR [eax]
   147f1:	jne    0x147fd
   147f3:	mov    esi,eax
   147f5:	push   esi
   147f6:	mov    ecx,edi
   147f8:	call   0x12e16
   147fd:	mov    eax,DWORD PTR [esi+0x4]
   14800:	mov    DWORD PTR [eax+0x14],0x1
   14807:	mov    eax,DWORD PTR [esi+0x4]
   1480a:	mov    eax,DWORD PTR [eax+0x4]
   1480d:	and    DWORD PTR [eax+0x14],0x0
   14811:	mov    eax,DWORD PTR [esi+0x4]
   14814:	push   DWORD PTR [eax+0x4]
   14817:	mov    ecx,edi
   14819:	call   0x12dc8
   1481e:	mov    eax,DWORD PTR [edi+0x4]
   14821:	cmp    esi,DWORD PTR [eax+0x4]
   14824:	jne    0x1477c
   1482a:	mov    eax,DWORD PTR [edi+0x4]
   1482d:	mov    eax,DWORD PTR [eax+0x4]
   14830:	pop    edi
   14831:	mov    DWORD PTR [eax+0x14],0x1
   14838:	mov    eax,DWORD PTR [ebp+0x8]
   1483b:	pop    esi
   1483c:	mov    DWORD PTR [eax],ebx
   1483e:	pop    ebx
   1483f:	pop    ebp
   14840:	ret    0x10
   14843:	int3   
   14844:	int3   
   14845:	int3   
   14846:	int3   
   14847:	int3   
   14848:	mov    edi,edi
   1484a:	push   ebp
   1484b:	mov    ebp,esp
   1484d:	push   ecx
   1484e:	push   ecx
   1484f:	push   ebx
   14850:	push   esi
   14851:	mov    DWORD PTR [ebp-0x4],ecx
   14854:	push   edi
   14855:	mov    edi,DWORD PTR [ebp+0xc]
   14858:	lea    ecx,[ebp+0xc]
   1485b:	call   0x115da
   14860:	mov    esi,DWORD PTR [edi]
   14862:	mov    eax,ds:0x788c0
   14867:	mov    ebx,edi
   14869:	mov    DWORD PTR [ebp-0x8],esi
   1486c:	cmp    esi,eax
   1486e:	jne    0x1488c
   14870:	mov    esi,DWORD PTR [edi+0x8]
   14873:	mov    eax,DWORD PTR [ebx+0x4]
   14876:	mov    ecx,DWORD PTR [ebp-0x4]
   14879:	mov    DWORD PTR [esi+0x4],eax
   1487c:	mov    eax,DWORD PTR [ecx+0x4]
   1487f:	cmp    DWORD PTR [eax+0x4],edi
   14882:	jne    0x14901
   14884:	mov    DWORD PTR [eax+0x4],esi
   14887:	jmp    0x1490f
   1488c:	mov    ecx,DWORD PTR [edi+0x8]
   1488f:	cmp    ecx,eax
   14891:	je     0x14873
   14893:	push   ecx
   14894:	call   0x114b4
   14899:	mov    ebx,eax
   1489b:	mov    esi,DWORD PTR [ebx+0x8]
   1489e:	cmp    ebx,edi
   148a0:	je     0x14873
   148a2:	mov    eax,DWORD PTR [ebp-0x8]
   148a5:	mov    DWORD PTR [eax+0x4],ebx
   148a8:	mov    eax,DWORD PTR [edi]
   148aa:	mov    DWORD PTR [ebx],eax
   148ac:	cmp    ebx,DWORD PTR [edi+0x8]
   148af:	jne    0x148b6
   148b1:	mov    DWORD PTR [esi+0x4],ebx
   148b4:	jmp    0x148cd
   148b6:	mov    eax,DWORD PTR [ebx+0x4]
   148b9:	mov    DWORD PTR [esi+0x4],eax
   148bc:	mov    eax,DWORD PTR [ebx+0x4]
   148bf:	mov    DWORD PTR [eax],esi
   148c1:	mov    eax,DWORD PTR [edi+0x8]
   148c4:	mov    DWORD PTR [ebx+0x8],eax
   148c7:	mov    eax,DWORD PTR [edi+0x8]
   148ca:	mov    DWORD PTR [eax+0x4],ebx
   148cd:	mov    eax,DWORD PTR [ebp-0x4]
   148d0:	mov    eax,DWORD PTR [eax+0x4]
   148d3:	cmp    DWORD PTR [eax+0x4],edi
   148d6:	jne    0x148dd
   148d8:	mov    DWORD PTR [eax+0x4],ebx
   148db:	jmp    0x148eb
   148dd:	mov    eax,DWORD PTR [edi+0x4]
   148e0:	cmp    DWORD PTR [eax],edi
   148e2:	jne    0x148e8
   148e4:	mov    DWORD PTR [eax],ebx
   148e6:	jmp    0x148eb
   148e8:	mov    DWORD PTR [eax+0x8],ebx
   148eb:	mov    eax,DWORD PTR [edi+0x4]
   148ee:	mov    DWORD PTR [ebx+0x4],eax
   148f1:	mov    eax,DWORD PTR [ebx+0x1c]
   148f4:	mov    ecx,DWORD PTR [edi+0x1c]
   148f7:	mov    DWORD PTR [ebx+0x1c],ecx
   148fa:	mov    DWORD PTR [edi+0x1c],eax
   148fd:	mov    ebx,edi
   148ff:	jmp    0x14962
   14901:	mov    eax,DWORD PTR [edi+0x4]
   14904:	cmp    DWORD PTR [eax],edi
   14906:	jne    0x1490c
   14908:	mov    DWORD PTR [eax],esi
   1490a:	jmp    0x1490f
   1490c:	mov    DWORD PTR [eax+0x8],esi
   1490f:	mov    eax,DWORD PTR [ecx+0x4]
   14912:	mov    DWORD PTR [ebp-0x8],eax
   14915:	cmp    DWORD PTR [eax],edi
   14917:	jne    0x14939
   14919:	mov    edx,DWORD PTR [edi+0x8]
   1491c:	cmp    edx,DWORD PTR ds:0x788c0
   14922:	jne    0x1492b
   14924:	mov    edx,DWORD PTR [edi+0x4]
   14927:	mov    DWORD PTR [eax],edx
   14929:	jmp    0x14939
   1492b:	push   esi
   1492c:	call   0x114b4
   14931:	mov    ecx,DWORD PTR [ebp-0x8]
   14934:	mov    DWORD PTR [ecx],eax
   14936:	mov    ecx,DWORD PTR [ebp-0x4]
   14939:	mov    eax,DWORD PTR [ecx+0x4]
   1493c:	mov    DWORD PTR [ebp-0x8],eax
   1493f:	cmp    DWORD PTR [eax+0x8],edi
   14942:	jne    0x14962
   14944:	mov    ecx,DWORD PTR [edi]
   14946:	cmp    ecx,DWORD PTR ds:0x788c0
   1494c:	jne    0x14956
   1494e:	mov    ecx,DWORD PTR [edi+0x4]
   14951:	mov    DWORD PTR [eax+0x8],ecx
   14954:	jmp    0x14962
   14956:	push   esi
   14957:	call   0x11492
   1495c:	mov    ecx,DWORD PTR [ebp-0x8]
   1495f:	mov    DWORD PTR [ecx+0x8],eax
   14962:	xor    edi,edi
   14964:	inc    edi
   14965:	cmp    DWORD PTR [ebx+0x1c],edi
   14968:	jne    0x14a7f
   1496e:	jmp    0x14a2d
   14973:	cmp    DWORD PTR [esi+0x1c],edi
   14976:	jne    0x14a7c
   1497c:	mov    eax,DWORD PTR [esi+0x4]
   1497f:	cmp    esi,DWORD PTR [eax]
   14981:	jne    0x149f8
   14983:	mov    eax,DWORD PTR [eax+0x8]
   14986:	cmp    DWORD PTR [eax+0x1c],0x0
   1498a:	jne    0x149a4
   1498c:	mov    DWORD PTR [eax+0x1c],edi
   1498f:	mov    eax,DWORD PTR [esi+0x4]
   14992:	and    DWORD PTR [eax+0x1c],0x0
   14996:	push   DWORD PTR [esi+0x4]
   14999:	call   0x131be
   1499e:	mov    eax,DWORD PTR [esi+0x4]
   149a1:	mov    eax,DWORD PTR [eax+0x8]
   149a4:	mov    ecx,DWORD PTR [eax]
   149a6:	cmp    DWORD PTR [ecx+0x1c],edi
   149a9:	jne    0x149b3
   149ab:	mov    ecx,DWORD PTR [eax+0x8]
   149ae:	cmp    DWORD PTR [ecx+0x1c],edi
   149b1:	je     0x14a26
   149b3:	mov    ecx,DWORD PTR [eax+0x8]
   149b6:	cmp    DWORD PTR [ecx+0x1c],edi
   149b9:	jne    0x149d3
   149bb:	mov    ecx,DWORD PTR [eax]
   149bd:	mov    DWORD PTR [ecx+0x1c],edi
   149c0:	mov    ecx,DWORD PTR [ebp-0x4]
   149c3:	and    DWORD PTR [eax+0x1c],0x0
   149c7:	push   eax
   149c8:	call   0x1320c
   149cd:	mov    eax,DWORD PTR [esi+0x4]
   149d0:	mov    eax,DWORD PTR [eax+0x8]
   149d3:	mov    ecx,DWORD PTR [esi+0x4]
   149d6:	mov    ecx,DWORD PTR [ecx+0x1c]
   149d9:	mov    DWORD PTR [eax+0x1c],ecx
   149dc:	mov    ecx,DWORD PTR [esi+0x4]
   149df:	mov    DWORD PTR [ecx+0x1c],edi
   149e2:	mov    eax,DWORD PTR [eax+0x8]
   149e5:	mov    ecx,DWORD PTR [ebp-0x4]
   149e8:	mov    DWORD PTR [eax+0x1c],edi
   149eb:	push   DWORD PTR [esi+0x4]
   149ee:	call   0x131be
   149f3:	jmp    0x14a7c
   149f8:	mov    eax,DWORD PTR [eax]
   149fa:	cmp    DWORD PTR [eax+0x1c],0x0
   149fe:	jne    0x14a17
   14a00:	mov    DWORD PTR [eax+0x1c],edi
   14a03:	mov    eax,DWORD PTR [esi+0x4]
   14a06:	and    DWORD PTR [eax+0x1c],0x0
   14a0a:	push   DWORD PTR [esi+0x4]
   14a0d:	call   0x1320c
   14a12:	mov    eax,DWORD PTR [esi+0x4]
   14a15:	mov    eax,DWORD PTR [eax]
   14a17:	mov    ecx,DWORD PTR [eax+0x8]
   14a1a:	cmp    DWORD PTR [ecx+0x1c],edi
   14a1d:	jne    0x14a3e
   14a1f:	mov    ecx,DWORD PTR [eax]
   14a21:	cmp    DWORD PTR [ecx+0x1c],edi
   14a24:	jne    0x14a3e
   14a26:	and    DWORD PTR [eax+0x1c],0x0
   14a2a:	mov    esi,DWORD PTR [esi+0x4]
   14a2d:	mov    ecx,DWORD PTR [ebp-0x4]
   14a30:	mov    eax,DWORD PTR [ecx+0x4]
   14a33:	cmp    esi,DWORD PTR [eax+0x4]
   14a36:	jne    0x14973
   14a3c:	jmp    0x14a7c
   14a3e:	mov    ecx,DWORD PTR [eax]
   14a40:	cmp    DWORD PTR [ecx+0x1c],edi
   14a43:	jne    0x14a5d
   14a45:	mov    ecx,DWORD PTR [eax+0x8]
   14a48:	mov    DWORD PTR [ecx+0x1c],edi
   14a4b:	mov    ecx,DWORD PTR [ebp-0x4]
   14a4e:	and    DWORD PTR [eax+0x1c],0x0
   14a52:	push   eax
   14a53:	call   0x131be
   14a58:	mov    eax,DWORD PTR [esi+0x4]
   14a5b:	mov    eax,DWORD PTR [eax]
   14a5d:	mov    ecx,DWORD PTR [esi+0x4]
   14a60:	mov    ecx,DWORD PTR [ecx+0x1c]
   14a63:	mov    DWORD PTR [eax+0x1c],ecx
   14a66:	mov    ecx,DWORD PTR [esi+0x4]
   14a69:	mov    DWORD PTR [ecx+0x1c],edi
   14a6c:	mov    eax,DWORD PTR [eax]
   14a6e:	mov    ecx,DWORD PTR [ebp-0x4]
   14a71:	mov    DWORD PTR [eax+0x1c],edi
   14a74:	push   DWORD PTR [esi+0x4]
   14a77:	call   0x1320c
   14a7c:	mov    DWORD PTR [esi+0x1c],edi
   14a7f:	lea    eax,[ebx+0xc]
   14a82:	push   eax
   14a83:	call   0x13558
   14a88:	push   ebx
   14a89:	call   0x10a3a
   14a8e:	mov    eax,DWORD PTR [ebp-0x4]
   14a91:	dec    DWORD PTR [eax+0xc]
   14a94:	mov    eax,DWORD PTR [ebp+0x8]
   14a97:	pop    ecx
   14a98:	mov    ecx,DWORD PTR [ebp+0xc]
   14a9b:	pop    edi
   14a9c:	pop    esi
   14a9d:	mov    DWORD PTR [eax],ecx
   14a9f:	pop    ebx
   14aa0:	leave  
   14aa1:	ret    0x8
   14aa4:	int3   
   14aa5:	int3   
   14aa6:	int3   
   14aa7:	int3   
   14aa8:	int3   
   14aa9:	int3   
   14aaa:	mov    edi,edi
   14aac:	push   ebp
   14aad:	mov    ebp,esp
   14aaf:	push   ebx
   14ab0:	push   esi
   14ab1:	push   edi
   14ab2:	mov    edi,DWORD PTR [ebp+0x8]
   14ab5:	mov    ebx,ecx
   14ab7:	mov    esi,edi
   14ab9:	cmp    edi,DWORD PTR ds:0x788c0
   14abf:	je     0x14ae7
   14ac1:	push   DWORD PTR [esi+0x8]
   14ac4:	mov    ecx,ebx
   14ac6:	call   0x14aaa
   14acb:	mov    esi,DWORD PTR [esi]
   14acd:	lea    eax,[edi+0xc]
   14ad0:	push   eax
   14ad1:	call   0x13558
   14ad6:	push   edi
   14ad7:	call   0x10a3a
   14adc:	pop    ecx
   14add:	mov    edi,esi
   14adf:	cmp    esi,DWORD PTR ds:0x788c0
   14ae5:	jne    0x14ac1
   14ae7:	pop    edi
   14ae8:	pop    esi
   14ae9:	pop    ebx
   14aea:	pop    ebp
   14aeb:	ret    0x4
   14aee:	int3   
   14aef:	int3   
   14af0:	int3   
   14af1:	int3   
   14af2:	int3   
   14af3:	int3   
   14af4:	mov    edi,edi
   14af6:	push   esi
   14af7:	push   edi
   14af8:	push   0x1
   14afa:	xor    edi,edi
   14afc:	push   edi
   14afd:	mov    esi,ecx
   14aff:	call   0x139e0
   14b04:	cmp    DWORD PTR ds:0x788c8,edi
   14b0a:	jne    0x14b21
   14b0c:	mov    ecx,eax
   14b0e:	mov    DWORD PTR ds:0x788c8,ecx
   14b14:	mov    DWORD PTR [ecx],edi
   14b16:	mov    ecx,DWORD PTR ds:0x788c8
   14b1c:	xor    eax,eax
   14b1e:	mov    DWORD PTR [ecx+0x8],edi
   14b21:	inc    DWORD PTR ds:0x78a20
   14b27:	cmp    eax,edi
   14b29:	je     0x14b32
   14b2b:	push   eax
   14b2c:	call   0x10a3a
   14b31:	pop    ecx
   14b32:	push   edi
   14b33:	push   DWORD PTR ds:0x788c8
   14b39:	mov    ecx,esi
   14b3b:	call   0x139e0
   14b40:	mov    DWORD PTR [esi+0xc],edi
   14b43:	mov    DWORD PTR [esi+0x4],eax
   14b46:	mov    DWORD PTR [eax],eax
   14b48:	mov    esi,DWORD PTR [esi+0x4]
   14b4b:	pop    edi
   14b4c:	mov    DWORD PTR [esi+0x8],esi
   14b4f:	pop    esi
   14b50:	ret    
   14b51:	int3   
   14b52:	int3   
   14b53:	int3   
   14b54:	int3   
   14b55:	int3   
   14b56:	mov    edi,edi
   14b58:	push   ebp
   14b59:	mov    ebp,esp
   14b5b:	push   ebx
   14b5c:	mov    ebx,DWORD PTR [ebp+0x8]
   14b5f:	mov    eax,DWORD PTR [ebx+0x4]
   14b62:	push   esi
   14b63:	push   edi
   14b64:	mov    esi,ecx
   14b66:	mov    edi,DWORD PTR [esi+0x4]
   14b69:	add    eax,0x4
   14b6c:	push   edi
   14b6d:	push   DWORD PTR [eax]
   14b6f:	call   0x13b7e
   14b74:	mov    DWORD PTR [edi+0x4],eax
   14b77:	mov    eax,DWORD PTR [ebx+0xc]
   14b7a:	mov    edi,DWORD PTR [esi+0x4]
   14b7d:	mov    DWORD PTR [esi+0xc],eax
   14b80:	mov    eax,DWORD PTR [edi+0x4]
   14b83:	cmp    eax,DWORD PTR ds:0x788b4
   14b89:	je     0x14ba3
   14b8b:	push   eax
   14b8c:	call   0x112b6
   14b91:	mov    DWORD PTR [edi],eax
   14b93:	mov    esi,DWORD PTR [esi+0x4]
   14b96:	push   DWORD PTR [esi+0x4]
   14b99:	call   0x11294
   14b9e:	mov    DWORD PTR [esi+0x8],eax
   14ba1:	jmp    0x14bab
   14ba3:	mov    DWORD PTR [edi],edi
   14ba5:	mov    esi,DWORD PTR [esi+0x4]
   14ba8:	mov    DWORD PTR [esi+0x8],esi
   14bab:	pop    edi
   14bac:	pop    esi
   14bad:	pop    ebx
   14bae:	pop    ebp
   14baf:	ret    0x4
   14bb2:	int3   
   14bb3:	int3   
   14bb4:	int3   
   14bb5:	int3   
   14bb6:	int3   
   14bb7:	int3   
   14bb8:	mov    edi,edi
   14bba:	push   ebp
   14bbb:	mov    ebp,esp
   14bbd:	push   edi
   14bbe:	mov    edi,DWORD PTR [ebp+0xc]
   14bc1:	cmp    DWORD PTR [ebp+0x8],edi
   14bc4:	je     0x14bda
   14bc6:	push   esi
   14bc7:	mov    esi,DWORD PTR [ebp+0x10]
   14bca:	inc    DWORD PTR [esi]
   14bcc:	lea    ecx,[ebp+0x8]
   14bcf:	call   0x13896
   14bd4:	cmp    DWORD PTR [ebp+0x8],edi
   14bd7:	jne    0x14bca
   14bd9:	pop    esi
   14bda:	pop    edi
   14bdb:	pop    ebp
   14bdc:	ret    
   14bdd:	int3   
   14bde:	int3   
   14bdf:	int3   
   14be0:	int3   
   14be1:	int3   
   14be2:	mov    edi,edi
   14be4:	push   ebp
   14be5:	mov    ebp,esp
   14be7:	push   DWORD PTR [ebp+0xc]
   14bea:	push   DWORD PTR [ebp+0x8]
   14bed:	call   0x13c78
   14bf2:	mov    eax,DWORD PTR [ebp+0x8]
   14bf5:	pop    ebp
   14bf6:	ret    0x8
   14bf9:	int3   
   14bfa:	int3   
   14bfb:	int3   
   14bfc:	int3   
   14bfd:	int3   
   14bfe:	mov    edi,edi
   14c00:	push   ebp
   14c01:	mov    ebp,esp
   14c03:	push   ecx
   14c04:	push   esi
   14c05:	mov    esi,ecx
   14c07:	cmp    DWORD PTR [esi+0xc],0x0
   14c0b:	mov    ecx,DWORD PTR [ebp+0xc]
   14c0e:	je     0x14c48
   14c10:	mov    eax,DWORD PTR [esi+0x4]
   14c13:	cmp    ecx,DWORD PTR [eax]
   14c15:	jne    0x14c48
   14c17:	cmp    DWORD PTR [ebp+0x10],eax
   14c1a:	jne    0x14c48
   14c1c:	push   DWORD PTR [eax+0x4]
   14c1f:	mov    ecx,esi
   14c21:	call   0x138f4
   14c26:	mov    ecx,DWORD PTR ds:0x788b0
   14c2c:	mov    eax,DWORD PTR [esi+0x4]
   14c2f:	mov    DWORD PTR [eax+0x4],ecx
   14c32:	mov    eax,DWORD PTR [esi+0x4]
   14c35:	and    DWORD PTR [esi+0xc],0x0
   14c39:	mov    DWORD PTR [eax],eax
   14c3b:	mov    eax,DWORD PTR [esi+0x4]
   14c3e:	mov    DWORD PTR [eax+0x8],eax
   14c41:	mov    eax,DWORD PTR [esi+0x4]
   14c44:	mov    ecx,DWORD PTR [eax]
   14c46:	jmp    0x14c6d
   14c48:	cmp    ecx,DWORD PTR [ebp+0x10]
   14c4b:	je     0x14c6d
   14c4d:	push   edi
   14c4e:	mov    edi,ecx
   14c50:	lea    ecx,[ebp+0xc]
   14c53:	call   0x1135c
   14c58:	push   edi
   14c59:	lea    eax,[ebp-0x4]
   14c5c:	push   eax
   14c5d:	mov    ecx,esi
   14c5f:	call   0x13d6a
   14c64:	mov    ecx,DWORD PTR [ebp+0xc]
   14c67:	cmp    ecx,DWORD PTR [ebp+0x10]
   14c6a:	jne    0x14c4e
   14c6c:	pop    edi
   14c6d:	mov    eax,DWORD PTR [ebp+0x8]
   14c70:	mov    DWORD PTR [eax],ecx
   14c72:	pop    esi
   14c73:	leave  
   14c74:	ret    0xc
   14c77:	int3   
   14c78:	int3   
   14c79:	int3   
   14c7a:	int3   
   14c7b:	int3   
   14c7c:	mov    edi,edi
   14c7e:	push   ebp
   14c7f:	mov    ebp,esp
   14c81:	push   ecx
   14c82:	push   ecx
   14c83:	push   esi
   14c84:	push   DWORD PTR [ebp+0x8]
   14c87:	lea    eax,[ebp-0x8]
   14c8a:	push   eax
   14c8b:	mov    esi,ecx
   14c8d:	call   0x13fc2
   14c92:	and    DWORD PTR [ebp+0x8],0x0
   14c96:	lea    eax,[ebp+0x8]
   14c99:	push   eax
   14c9a:	push   DWORD PTR [ebp-0x4]
   14c9d:	push   DWORD PTR [ebp-0x8]
   14ca0:	call   0x13a30
   14ca5:	add    esp,0xc
   14ca8:	push   DWORD PTR [ebp-0x4]
   14cab:	lea    eax,[ebp-0x4]
   14cae:	push   DWORD PTR [ebp-0x8]
   14cb1:	mov    ecx,esi
   14cb3:	push   eax
   14cb4:	call   0x14bfe
   14cb9:	mov    eax,DWORD PTR [ebp+0x8]
   14cbc:	pop    esi
   14cbd:	leave  
   14cbe:	ret    0x4
   14cc1:	int3   
   14cc2:	int3   
   14cc3:	int3   
   14cc4:	int3   
   14cc5:	int3   
   14cc6:	mov    edi,edi
   14cc8:	push   ebp
   14cc9:	mov    ebp,esp
   14ccb:	push   ecx
   14ccc:	push   ebx
   14ccd:	push   esi
   14cce:	push   edi
   14ccf:	mov    edi,ecx
   14cd1:	mov    eax,DWORD PTR [edi+0x4]
   14cd4:	mov    esi,DWORD PTR [eax+0x4]
   14cd7:	mov    ebx,eax
   14cd9:	mov    eax,ds:0x788b4
   14cde:	mov    dl,0x1
   14ce0:	cmp    esi,eax
   14ce2:	je     0x14d00
   14ce4:	mov    ecx,DWORD PTR [ebp+0xc]
   14ce7:	mov    ecx,DWORD PTR [ecx]
   14ce9:	cmp    ecx,DWORD PTR [esi+0xc]
   14cec:	mov    ebx,esi
   14cee:	setb   dl
   14cf1:	test   dl,dl
   14cf3:	je     0x14cf9
   14cf5:	mov    esi,DWORD PTR [esi]
   14cf7:	jmp    0x14cfc
   14cf9:	mov    esi,DWORD PTR [esi+0x8]
   14cfc:	cmp    esi,eax
   14cfe:	jne    0x14ce9
   14d00:	cmp    BYTE PTR [edi+0x8],0x0
   14d04:	je     0x14d21
   14d06:	push   DWORD PTR [ebp+0xc]
   14d09:	push   ebx
   14d0a:	push   esi
   14d0b:	lea    eax,[ebp+0xc]
   14d0e:	push   eax
   14d0f:	mov    ecx,edi
   14d11:	call   0x14546
   14d16:	mov    ecx,DWORD PTR [eax]
   14d18:	mov    eax,DWORD PTR [ebp+0x8]
   14d1b:	mov    BYTE PTR [eax+0x4],0x1
   14d1f:	jmp    0x14d50
   14d21:	mov    ecx,ebx
   14d23:	mov    DWORD PTR [ebp-0x4],ecx
   14d26:	test   dl,dl
   14d28:	je     0x14d3c
   14d2a:	mov    eax,DWORD PTR [edi+0x4]
   14d2d:	cmp    ebx,DWORD PTR [eax]
   14d2f:	je     0x14d06
   14d31:	lea    ecx,[ebp-0x4]
   14d34:	call   0x12f54
   14d39:	mov    ecx,DWORD PTR [ebp-0x4]
   14d3c:	mov    edx,DWORD PTR [ecx+0xc]
   14d3f:	mov    eax,DWORD PTR [ebp+0xc]
   14d42:	cmp    edx,DWORD PTR [eax]
   14d44:	jae    0x14d49
   14d46:	push   eax
   14d47:	jmp    0x14d09
   14d49:	mov    eax,DWORD PTR [ebp+0x8]
   14d4c:	mov    BYTE PTR [eax+0x4],0x0
   14d50:	pop    edi
   14d51:	pop    esi
   14d52:	mov    DWORD PTR [eax],ecx
   14d54:	pop    ebx
   14d55:	leave  
   14d56:	ret    0x8
   14d59:	int3   
   14d5a:	int3   
   14d5b:	int3   
   14d5c:	int3   
   14d5d:	int3   
   14d5e:	mov    edi,edi
   14d60:	push   ebp
   14d61:	mov    ebp,esp
   14d63:	push   ecx
   14d64:	push   esi
   14d65:	mov    esi,ecx
   14d67:	cmp    DWORD PTR [esi+0xc],0x0
   14d6b:	mov    ecx,DWORD PTR [ebp+0xc]
   14d6e:	je     0x14da8
   14d70:	mov    eax,DWORD PTR [esi+0x4]
   14d73:	cmp    ecx,DWORD PTR [eax]
   14d75:	jne    0x14da8
   14d77:	cmp    DWORD PTR [ebp+0x10],eax
   14d7a:	jne    0x14da8
   14d7c:	push   DWORD PTR [eax+0x4]
   14d7f:	mov    ecx,esi
   14d81:	call   0x13934
   14d86:	mov    ecx,DWORD PTR ds:0x788b4
   14d8c:	mov    eax,DWORD PTR [esi+0x4]
   14d8f:	mov    DWORD PTR [eax+0x4],ecx
   14d92:	mov    eax,DWORD PTR [esi+0x4]
   14d95:	and    DWORD PTR [esi+0xc],0x0
   14d99:	mov    DWORD PTR [eax],eax
   14d9b:	mov    eax,DWORD PTR [esi+0x4]
   14d9e:	mov    DWORD PTR [eax+0x8],eax
   14da1:	mov    eax,DWORD PTR [esi+0x4]
   14da4:	mov    ecx,DWORD PTR [eax]
   14da6:	jmp    0x14dcd
   14da8:	cmp    ecx,DWORD PTR [ebp+0x10]
   14dab:	je     0x14dcd
   14dad:	push   edi
   14dae:	mov    edi,ecx
   14db0:	lea    ecx,[ebp+0xc]
   14db3:	call   0x12f94
   14db8:	push   edi
   14db9:	lea    eax,[ebp-0x4]
   14dbc:	push   eax
   14dbd:	mov    ecx,esi
   14dbf:	call   0x1425a
   14dc4:	mov    ecx,DWORD PTR [ebp+0xc]
   14dc7:	cmp    ecx,DWORD PTR [ebp+0x10]
   14dca:	jne    0x14dae
   14dcc:	pop    edi
   14dcd:	mov    eax,DWORD PTR [ebp+0x8]
   14dd0:	mov    DWORD PTR [eax],ecx
   14dd2:	pop    esi
   14dd3:	leave  
   14dd4:	ret    0xc
   14dd7:	int3   
   14dd8:	int3   
   14dd9:	int3   
   14dda:	int3   
   14ddb:	int3   
   14ddc:	mov    edi,edi
   14dde:	push   ebp
   14ddf:	mov    ebp,esp
   14de1:	push   ecx
   14de2:	push   ecx
   14de3:	push   esi
   14de4:	push   DWORD PTR [ebp+0x8]
   14de7:	lea    eax,[ebp-0x8]
   14dea:	push   eax
   14deb:	mov    esi,ecx
   14ded:	call   0x144b2
   14df2:	and    DWORD PTR [ebp+0x8],0x0
   14df6:	lea    eax,[ebp+0x8]
   14df9:	push   eax
   14dfa:	push   DWORD PTR [ebp-0x4]
   14dfd:	push   DWORD PTR [ebp-0x8]
   14e00:	call   0x13a96
   14e05:	add    esp,0xc
   14e08:	push   DWORD PTR [ebp-0x4]
   14e0b:	lea    eax,[ebp-0x4]
   14e0e:	push   DWORD PTR [ebp-0x8]
   14e11:	mov    ecx,esi
   14e13:	push   eax
   14e14:	call   0x14d5e
   14e19:	mov    eax,DWORD PTR [ebp+0x8]
   14e1c:	pop    esi
   14e1d:	leave  
   14e1e:	ret    0x4
   14e21:	int3   
   14e22:	int3   
   14e23:	int3   
   14e24:	int3   
   14e25:	int3   
   14e26:	mov    edi,edi
   14e28:	push   ebp
   14e29:	mov    ebp,esp
   14e2b:	push   ecx
   14e2c:	push   ebx
   14e2d:	push   esi
   14e2e:	push   edi
   14e2f:	mov    edi,ecx
   14e31:	mov    eax,DWORD PTR [edi+0x4]
   14e34:	mov    esi,DWORD PTR [eax+0x4]
   14e37:	mov    ebx,eax
   14e39:	mov    eax,ds:0x788b0
   14e3e:	mov    dl,0x1
   14e40:	cmp    esi,eax
   14e42:	je     0x14e60
   14e44:	mov    ecx,DWORD PTR [ebp+0xc]
   14e47:	mov    ecx,DWORD PTR [ecx]
   14e49:	cmp    ecx,DWORD PTR [esi+0xc]
   14e4c:	mov    ebx,esi
   14e4e:	setb   dl
   14e51:	test   dl,dl
   14e53:	je     0x14e59
   14e55:	mov    esi,DWORD PTR [esi]
   14e57:	jmp    0x14e5c
   14e59:	mov    esi,DWORD PTR [esi+0x8]
   14e5c:	cmp    esi,eax
   14e5e:	jne    0x14e49
   14e60:	cmp    BYTE PTR [edi+0x8],0x0
   14e64:	je     0x14e81
   14e66:	push   DWORD PTR [ebp+0xc]
   14e69:	push   ebx
   14e6a:	push   esi
   14e6b:	lea    eax,[ebp+0xc]
   14e6e:	push   eax
   14e6f:	mov    ecx,edi
   14e71:	call   0x146f8
   14e76:	mov    ecx,DWORD PTR [eax]
   14e78:	mov    eax,DWORD PTR [ebp+0x8]
   14e7b:	mov    BYTE PTR [eax+0x4],0x1
   14e7f:	jmp    0x14eb0
   14e81:	mov    ecx,ebx
   14e83:	mov    DWORD PTR [ebp-0x4],ecx
   14e86:	test   dl,dl
   14e88:	je     0x14e9c
   14e8a:	mov    eax,DWORD PTR [edi+0x4]
   14e8d:	cmp    ebx,DWORD PTR [eax]
   14e8f:	je     0x14e66
   14e91:	lea    ecx,[ebp-0x4]
   14e94:	call   0x1131c
   14e99:	mov    ecx,DWORD PTR [ebp-0x4]
   14e9c:	mov    edx,DWORD PTR [ecx+0xc]
   14e9f:	mov    eax,DWORD PTR [ebp+0xc]
   14ea2:	cmp    edx,DWORD PTR [eax]
   14ea4:	jae    0x14ea9
   14ea6:	push   eax
   14ea7:	jmp    0x14e69
   14ea9:	mov    eax,DWORD PTR [ebp+0x8]
   14eac:	mov    BYTE PTR [eax+0x4],0x0
   14eb0:	pop    edi
   14eb1:	pop    esi
   14eb2:	mov    DWORD PTR [eax],ecx
   14eb4:	pop    ebx
   14eb5:	leave  
   14eb6:	ret    0x8
   14eb9:	int3   
   14eba:	int3   
   14ebb:	int3   
   14ebc:	int3   
   14ebd:	int3   
   14ebe:	mov    edi,edi
   14ec0:	push   ebp
   14ec1:	mov    ebp,esp
   14ec3:	push   ecx
   14ec4:	push   esi
   14ec5:	mov    esi,ecx
   14ec7:	cmp    DWORD PTR [esi+0xc],0x0
   14ecb:	mov    ecx,DWORD PTR [ebp+0xc]
   14ece:	je     0x14f08
   14ed0:	mov    eax,DWORD PTR [esi+0x4]
   14ed3:	cmp    ecx,DWORD PTR [eax]
   14ed5:	jne    0x14f08
   14ed7:	cmp    DWORD PTR [ebp+0x10],eax
   14eda:	jne    0x14f08
   14edc:	push   DWORD PTR [eax+0x4]
   14edf:	mov    ecx,esi
   14ee1:	call   0x14aaa
   14ee6:	mov    ecx,DWORD PTR ds:0x788c0
   14eec:	mov    eax,DWORD PTR [esi+0x4]
   14eef:	mov    DWORD PTR [eax+0x4],ecx
   14ef2:	mov    eax,DWORD PTR [esi+0x4]
   14ef5:	and    DWORD PTR [esi+0xc],0x0
   14ef9:	mov    DWORD PTR [eax],eax
   14efb:	mov    eax,DWORD PTR [esi+0x4]
   14efe:	mov    DWORD PTR [eax+0x8],eax
   14f01:	mov    eax,DWORD PTR [esi+0x4]
   14f04:	mov    ecx,DWORD PTR [eax]
   14f06:	jmp    0x14f2d
   14f08:	cmp    ecx,DWORD PTR [ebp+0x10]
   14f0b:	je     0x14f2d
   14f0d:	push   edi
   14f0e:	mov    edi,ecx
   14f10:	lea    ecx,[ebp+0xc]
   14f13:	call   0x115da
   14f18:	push   edi
   14f19:	lea    eax,[ebp-0x4]
   14f1c:	push   eax
   14f1d:	mov    ecx,esi
   14f1f:	call   0x14848
   14f24:	mov    ecx,DWORD PTR [ebp+0xc]
   14f27:	cmp    ecx,DWORD PTR [ebp+0x10]
   14f2a:	jne    0x14f0e
   14f2c:	pop    edi
   14f2d:	mov    eax,DWORD PTR [ebp+0x8]
   14f30:	mov    DWORD PTR [eax],ecx
   14f32:	pop    esi
   14f33:	leave  
   14f34:	ret    0xc
   14f37:	int3   
   14f38:	int3   
   14f39:	int3   
   14f3a:	int3   
   14f3b:	int3   
   14f3c:	mov    edi,edi
   14f3e:	push   ebp
   14f3f:	mov    ebp,esp
   14f41:	push   ecx
   14f42:	push   ecx
   14f43:	push   ebx
   14f44:	push   esi
   14f45:	mov    DWORD PTR [ebp-0x4],ecx
   14f48:	push   edi
   14f49:	mov    edi,DWORD PTR [ebp+0xc]
   14f4c:	lea    ecx,[ebp+0xc]
   14f4f:	call   0x12f1e
   14f54:	mov    esi,DWORD PTR [edi]
   14f56:	mov    eax,ds:0x788b8
   14f5b:	mov    ebx,edi
   14f5d:	mov    DWORD PTR [ebp-0x8],esi
   14f60:	cmp    esi,eax
   14f62:	jne    0x14f80
   14f64:	mov    esi,DWORD PTR [edi+0x8]
   14f67:	mov    eax,DWORD PTR [ebx+0x4]
   14f6a:	mov    ecx,DWORD PTR [ebp-0x4]
   14f6d:	mov    DWORD PTR [esi+0x4],eax
   14f70:	mov    eax,DWORD PTR [ecx+0x4]
   14f73:	cmp    DWORD PTR [eax+0x4],edi
   14f76:	jne    0x14ff5
   14f78:	mov    DWORD PTR [eax+0x4],esi
   14f7b:	jmp    0x15003
   14f80:	mov    ecx,DWORD PTR [edi+0x8]
   14f83:	cmp    ecx,eax
   14f85:	je     0x14f67
   14f87:	push   ecx
   14f88:	call   0x112fa
   14f8d:	mov    ebx,eax
   14f8f:	mov    esi,DWORD PTR [ebx+0x8]
   14f92:	cmp    ebx,edi
   14f94:	je     0x14f67
   14f96:	mov    eax,DWORD PTR [ebp-0x8]
   14f99:	mov    DWORD PTR [eax+0x4],ebx
   14f9c:	mov    eax,DWORD PTR [edi]
   14f9e:	mov    DWORD PTR [ebx],eax
   14fa0:	cmp    ebx,DWORD PTR [edi+0x8]
   14fa3:	jne    0x14faa
   14fa5:	mov    DWORD PTR [esi+0x4],ebx
   14fa8:	jmp    0x14fc1
   14faa:	mov    eax,DWORD PTR [ebx+0x4]
   14fad:	mov    DWORD PTR [esi+0x4],eax
   14fb0:	mov    eax,DWORD PTR [ebx+0x4]
   14fb3:	mov    DWORD PTR [eax],esi
   14fb5:	mov    eax,DWORD PTR [edi+0x8]
   14fb8:	mov    DWORD PTR [ebx+0x8],eax
   14fbb:	mov    eax,DWORD PTR [edi+0x8]
   14fbe:	mov    DWORD PTR [eax+0x4],ebx
   14fc1:	mov    eax,DWORD PTR [ebp-0x4]
   14fc4:	mov    eax,DWORD PTR [eax+0x4]
   14fc7:	cmp    DWORD PTR [eax+0x4],edi
   14fca:	jne    0x14fd1
   14fcc:	mov    DWORD PTR [eax+0x4],ebx
   14fcf:	jmp    0x14fdf
   14fd1:	mov    eax,DWORD PTR [edi+0x4]
   14fd4:	cmp    DWORD PTR [eax],edi
   14fd6:	jne    0x14fdc
   14fd8:	mov    DWORD PTR [eax],ebx
   14fda:	jmp    0x14fdf
   14fdc:	mov    DWORD PTR [eax+0x8],ebx
   14fdf:	mov    eax,DWORD PTR [edi+0x4]
   14fe2:	mov    DWORD PTR [ebx+0x4],eax
   14fe5:	mov    eax,DWORD PTR [ebx+0x60]
   14fe8:	mov    ecx,DWORD PTR [edi+0x60]
   14feb:	mov    DWORD PTR [ebx+0x60],ecx
   14fee:	mov    DWORD PTR [edi+0x60],eax
   14ff1:	mov    ebx,edi
   14ff3:	jmp    0x15056
   14ff5:	mov    eax,DWORD PTR [edi+0x4]
   14ff8:	cmp    DWORD PTR [eax],edi
   14ffa:	jne    0x15000
   14ffc:	mov    DWORD PTR [eax],esi
   14ffe:	jmp    0x15003
   15000:	mov    DWORD PTR [eax+0x8],esi
   15003:	mov    eax,DWORD PTR [ecx+0x4]
   15006:	mov    DWORD PTR [ebp-0x8],eax
   15009:	cmp    DWORD PTR [eax],edi
   1500b:	jne    0x1502d
   1500d:	mov    edx,DWORD PTR [edi+0x8]
   15010:	cmp    edx,DWORD PTR ds:0x788b8
   15016:	jne    0x1501f
   15018:	mov    edx,DWORD PTR [edi+0x4]
   1501b:	mov    DWORD PTR [eax],edx
   1501d:	jmp    0x1502d
   1501f:	push   esi
   15020:	call   0x112fa
   15025:	mov    ecx,DWORD PTR [ebp-0x8]
   15028:	mov    DWORD PTR [ecx],eax
   1502a:	mov    ecx,DWORD PTR [ebp-0x4]
   1502d:	mov    eax,DWORD PTR [ecx+0x4]
   15030:	mov    DWORD PTR [ebp-0x8],eax
   15033:	cmp    DWORD PTR [eax+0x8],edi
   15036:	jne    0x15056
   15038:	mov    ecx,DWORD PTR [edi]
   1503a:	cmp    ecx,DWORD PTR ds:0x788b8
   15040:	jne    0x1504a
   15042:	mov    ecx,DWORD PTR [edi+0x4]
   15045:	mov    DWORD PTR [eax+0x8],ecx
   15048:	jmp    0x15056
   1504a:	push   esi
   1504b:	call   0x112d8
   15050:	mov    ecx,DWORD PTR [ebp-0x8]
   15053:	mov    DWORD PTR [ecx+0x8],eax
   15056:	xor    edi,edi
   15058:	inc    edi
   15059:	cmp    DWORD PTR [ebx+0x60],edi
   1505c:	jne    0x15173
   15062:	jmp    0x15121
   15067:	cmp    DWORD PTR [esi+0x60],edi
   1506a:	jne    0x15170
   15070:	mov    eax,DWORD PTR [esi+0x4]
   15073:	cmp    esi,DWORD PTR [eax]
   15075:	jne    0x150ec
   15077:	mov    eax,DWORD PTR [eax+0x8]
   1507a:	cmp    DWORD PTR [eax+0x60],0x0
   1507e:	jne    0x15098
   15080:	mov    DWORD PTR [eax+0x60],edi
   15083:	mov    eax,DWORD PTR [esi+0x4]
   15086:	and    DWORD PTR [eax+0x60],0x0
   1508a:	push   DWORD PTR [esi+0x4]
   1508d:	call   0x130a8
   15092:	mov    eax,DWORD PTR [esi+0x4]
   15095:	mov    eax,DWORD PTR [eax+0x8]
   15098:	mov    ecx,DWORD PTR [eax]
   1509a:	cmp    DWORD PTR [ecx+0x60],edi
   1509d:	jne    0x150a7
   1509f:	mov    ecx,DWORD PTR [eax+0x8]
   150a2:	cmp    DWORD PTR [ecx+0x60],edi
   150a5:	je     0x1511a
   150a7:	mov    ecx,DWORD PTR [eax+0x8]
   150aa:	cmp    DWORD PTR [ecx+0x60],edi
   150ad:	jne    0x150c7
   150af:	mov    ecx,DWORD PTR [eax]
   150b1:	mov    DWORD PTR [ecx+0x60],edi
   150b4:	mov    ecx,DWORD PTR [ebp-0x4]
   150b7:	and    DWORD PTR [eax+0x60],0x0
   150bb:	push   eax
   150bc:	call   0x130f6
   150c1:	mov    eax,DWORD PTR [esi+0x4]
   150c4:	mov    eax,DWORD PTR [eax+0x8]
   150c7:	mov    ecx,DWORD PTR [esi+0x4]
   150ca:	mov    ecx,DWORD PTR [ecx+0x60]
   150cd:	mov    DWORD PTR [eax+0x60],ecx
   150d0:	mov    ecx,DWORD PTR [esi+0x4]
   150d3:	mov    DWORD PTR [ecx+0x60],edi
   150d6:	mov    eax,DWORD PTR [eax+0x8]
   150d9:	mov    ecx,DWORD PTR [ebp-0x4]
   150dc:	mov    DWORD PTR [eax+0x60],edi
   150df:	push   DWORD PTR [esi+0x4]
   150e2:	call   0x130a8
   150e7:	jmp    0x15170
   150ec:	mov    eax,DWORD PTR [eax]
   150ee:	cmp    DWORD PTR [eax+0x60],0x0
   150f2:	jne    0x1510b
   150f4:	mov    DWORD PTR [eax+0x60],edi
   150f7:	mov    eax,DWORD PTR [esi+0x4]
   150fa:	and    DWORD PTR [eax+0x60],0x0
   150fe:	push   DWORD PTR [esi+0x4]
   15101:	call   0x130f6
   15106:	mov    eax,DWORD PTR [esi+0x4]
   15109:	mov    eax,DWORD PTR [eax]
   1510b:	mov    ecx,DWORD PTR [eax+0x8]
   1510e:	cmp    DWORD PTR [ecx+0x60],edi
   15111:	jne    0x15132
   15113:	mov    ecx,DWORD PTR [eax]
   15115:	cmp    DWORD PTR [ecx+0x60],edi
   15118:	jne    0x15132
   1511a:	and    DWORD PTR [eax+0x60],0x0
   1511e:	mov    esi,DWORD PTR [esi+0x4]
   15121:	mov    ecx,DWORD PTR [ebp-0x4]
   15124:	mov    eax,DWORD PTR [ecx+0x4]
   15127:	cmp    esi,DWORD PTR [eax+0x4]
   1512a:	jne    0x15067
   15130:	jmp    0x15170
   15132:	mov    ecx,DWORD PTR [eax]
   15134:	cmp    DWORD PTR [ecx+0x60],edi
   15137:	jne    0x15151
   15139:	mov    ecx,DWORD PTR [eax+0x8]
   1513c:	mov    DWORD PTR [ecx+0x60],edi
   1513f:	mov    ecx,DWORD PTR [ebp-0x4]
   15142:	and    DWORD PTR [eax+0x60],0x0
   15146:	push   eax
   15147:	call   0x130a8
   1514c:	mov    eax,DWORD PTR [esi+0x4]
   1514f:	mov    eax,DWORD PTR [eax]
   15151:	mov    ecx,DWORD PTR [esi+0x4]
   15154:	mov    ecx,DWORD PTR [ecx+0x60]
   15157:	mov    DWORD PTR [eax+0x60],ecx
   1515a:	mov    ecx,DWORD PTR [esi+0x4]
   1515d:	mov    DWORD PTR [ecx+0x60],edi
   15160:	mov    eax,DWORD PTR [eax]
   15162:	mov    ecx,DWORD PTR [ebp-0x4]
   15165:	mov    DWORD PTR [eax+0x60],edi
   15168:	push   DWORD PTR [esi+0x4]
   1516b:	call   0x130f6
   15170:	mov    DWORD PTR [esi+0x60],edi
   15173:	lea    eax,[ebx+0x10]
   15176:	push   eax
   15177:	call   0x13ad6
   1517c:	push   ebx
   1517d:	call   0x10a3a
   15182:	mov    eax,DWORD PTR [ebp-0x4]
   15185:	dec    DWORD PTR [eax+0xc]
   15188:	mov    eax,DWORD PTR [ebp+0x8]
   1518b:	pop    ecx
   1518c:	mov    ecx,DWORD PTR [ebp+0xc]
   1518f:	pop    edi
   15190:	pop    esi
   15191:	mov    DWORD PTR [eax],ecx
   15193:	pop    ebx
   15194:	leave  
   15195:	ret    0x8
   15198:	int3   
   15199:	int3   
   1519a:	int3   
   1519b:	int3   
   1519c:	int3   
   1519d:	int3   
   1519e:	mov    edi,edi
   151a0:	push   ebp
   151a1:	mov    ebp,esp
   151a3:	push   ebx
   151a4:	push   esi
   151a5:	push   edi
   151a6:	mov    edi,DWORD PTR [ebp+0x8]
   151a9:	mov    ebx,ecx
   151ab:	mov    esi,edi
   151ad:	cmp    edi,DWORD PTR ds:0x788b8
   151b3:	je     0x151db
   151b5:	push   DWORD PTR [esi+0x8]
   151b8:	mov    ecx,ebx
   151ba:	call   0x1519e
   151bf:	mov    esi,DWORD PTR [esi]
   151c1:	lea    eax,[edi+0x10]
   151c4:	push   eax
   151c5:	call   0x13ad6
   151ca:	push   edi
   151cb:	call   0x10a3a
   151d0:	pop    ecx
   151d1:	mov    edi,esi
   151d3:	cmp    esi,DWORD PTR ds:0x788b8
   151d9:	jne    0x151b5
   151db:	pop    edi
   151dc:	pop    esi
   151dd:	pop    ebx
   151de:	pop    ebp
   151df:	ret    0x4
   151e2:	int3   
   151e3:	int3   
   151e4:	int3   
   151e5:	int3   
   151e6:	int3   
   151e7:	int3   
   151e8:	mov    edi,edi
   151ea:	push   ebp
   151eb:	mov    ebp,esp
   151ed:	push   ebx
   151ee:	push   esi
   151ef:	mov    esi,DWORD PTR [ebp+0x10]
   151f2:	push   edi
   151f3:	push   0x0
   151f5:	push   esi
   151f6:	mov    edi,ecx
   151f8:	call   0x139e0
   151fd:	push   DWORD PTR [ebp+0x14]
   15200:	mov    ebx,eax
   15202:	mov    eax,ds:0x788b8
   15207:	mov    DWORD PTR [ebx],eax
   15209:	mov    eax,ds:0x788b8
   1520e:	mov    DWORD PTR [ebx+0x8],eax
   15211:	lea    eax,[ebx+0x10]
   15214:	push   eax
   15215:	call   0x13ab8
   1521a:	inc    DWORD PTR [edi+0xc]
   1521d:	cmp    esi,DWORD PTR [edi+0x4]
   15220:	je     0x1524a
   15222:	mov    eax,DWORD PTR [ebp+0xc]
   15225:	cmp    eax,DWORD PTR ds:0x788b8
   1522b:	jne    0x1524a
   1522d:	lea    eax,[esi+0x10]
   15230:	push   eax
   15231:	push   DWORD PTR [ebp+0x14]
   15234:	call   0x19864
   15239:	test   al,al
   1523b:	jne    0x1524a
   1523d:	mov    DWORD PTR [esi+0x8],ebx
   15240:	mov    eax,DWORD PTR [edi+0x4]
   15243:	cmp    esi,DWORD PTR [eax+0x8]
   15246:	jne    0x15264
   15248:	jmp    0x15259
   1524a:	mov    DWORD PTR [esi],ebx
   1524c:	mov    eax,DWORD PTR [edi+0x4]
   1524f:	cmp    esi,eax
   15251:	jne    0x1525e
   15253:	mov    DWORD PTR [eax+0x4],ebx
   15256:	mov    eax,DWORD PTR [edi+0x4]
   15259:	mov    DWORD PTR [eax+0x8],ebx
   1525c:	jmp    0x15264
   1525e:	cmp    esi,DWORD PTR [eax]
   15260:	jne    0x15264
   15262:	mov    DWORD PTR [eax],ebx
   15264:	mov    eax,DWORD PTR [edi+0x4]
   15267:	mov    esi,ebx
   15269:	cmp    ebx,DWORD PTR [eax+0x4]
   1526c:	je     0x15320
   15272:	mov    eax,DWORD PTR [esi+0x4]
   15275:	xor    edx,edx
   15277:	cmp    DWORD PTR [eax+0x60],edx
   1527a:	jne    0x15320
   15280:	mov    ecx,DWORD PTR [eax+0x4]
   15283:	cmp    eax,DWORD PTR [ecx]
   15285:	jne    0x152c1
   15287:	mov    ecx,DWORD PTR [ecx+0x8]
   1528a:	cmp    DWORD PTR [ecx+0x60],edx
   1528d:	je     0x152c8
   1528f:	cmp    esi,DWORD PTR [eax+0x8]
   15292:	jne    0x1529e
   15294:	mov    esi,eax
   15296:	push   esi
   15297:	mov    ecx,edi
   15299:	call   0x130a8
   1529e:	mov    eax,DWORD PTR [esi+0x4]
   152a1:	mov    DWORD PTR [eax+0x60],0x1
   152a8:	mov    eax,DWORD PTR [esi+0x4]
   152ab:	mov    eax,DWORD PTR [eax+0x4]
   152ae:	and    DWORD PTR [eax+0x60],0x0
   152b2:	mov    eax,DWORD PTR [esi+0x4]
   152b5:	push   DWORD PTR [eax+0x4]
   152b8:	mov    ecx,edi
   152ba:	call   0x130f6
   152bf:	jmp    0x15314
   152c1:	mov    ecx,DWORD PTR [ecx]
   152c3:	cmp    DWORD PTR [ecx+0x60],edx
   152c6:	jne    0x152e5
   152c8:	mov    edx,eax
   152ca:	xor    eax,eax
   152cc:	inc    eax
   152cd:	mov    DWORD PTR [edx+0x60],eax
   152d0:	mov    DWORD PTR [ecx+0x60],eax
   152d3:	mov    eax,DWORD PTR [esi+0x4]
   152d6:	mov    eax,DWORD PTR [eax+0x4]
   152d9:	and    DWORD PTR [eax+0x60],0x0
   152dd:	mov    eax,DWORD PTR [esi+0x4]
   152e0:	mov    esi,DWORD PTR [eax+0x4]
   152e3:	jmp    0x15314
   152e5:	cmp    esi,DWORD PTR [eax]
   152e7:	jne    0x152f3
   152e9:	mov    esi,eax
   152eb:	push   esi
   152ec:	mov    ecx,edi
   152ee:	call   0x130f6
   152f3:	mov    eax,DWORD PTR [esi+0x4]
   152f6:	mov    DWORD PTR [eax+0x60],0x1
   152fd:	mov    eax,DWORD PTR [esi+0x4]
   15300:	mov    eax,DWORD PTR [eax+0x4]
   15303:	and    DWORD PTR [eax+0x60],0x0
   15307:	mov    eax,DWORD PTR [esi+0x4]
   1530a:	push   DWORD PTR [eax+0x4]
   1530d:	mov    ecx,edi
   1530f:	call   0x130a8
   15314:	mov    eax,DWORD PTR [edi+0x4]
   15317:	cmp    esi,DWORD PTR [eax+0x4]
   1531a:	jne    0x15272
   15320:	mov    eax,DWORD PTR [edi+0x4]
   15323:	mov    eax,DWORD PTR [eax+0x4]
   15326:	pop    edi
   15327:	mov    DWORD PTR [eax+0x60],0x1
   1532e:	mov    eax,DWORD PTR [ebp+0x8]
   15331:	pop    esi
   15332:	mov    DWORD PTR [eax],ebx
   15334:	pop    ebx
   15335:	pop    ebp
   15336:	ret    0x10
   15339:	int3   
   1533a:	int3   
   1533b:	int3   
   1533c:	int3   
   1533d:	int3   
   1533e:	mov    edi,edi
   15340:	push   ebp
   15341:	mov    ebp,esp
   15343:	push   ecx
   15344:	push   ecx
   15345:	push   ebx
   15346:	push   esi
   15347:	mov    DWORD PTR [ebp-0x4],ecx
   1534a:	push   edi
   1534b:	mov    edi,DWORD PTR [ebp+0xc]
   1534e:	lea    ecx,[ebp+0xc]
   15351:	call   0x13896
   15356:	mov    esi,DWORD PTR [edi]
   15358:	mov    eax,ds:0x788bc
   1535d:	mov    ebx,edi
   1535f:	mov    DWORD PTR [ebp-0x8],esi
   15362:	cmp    esi,eax
   15364:	jne    0x15382
   15366:	mov    esi,DWORD PTR [edi+0x8]
   15369:	mov    eax,DWORD PTR [ebx+0x4]
   1536c:	mov    ecx,DWORD PTR [ebp-0x4]
   1536f:	mov    DWORD PTR [esi+0x4],eax
   15372:	mov    eax,DWORD PTR [ecx+0x4]
   15375:	cmp    DWORD PTR [eax+0x4],edi
   15378:	jne    0x153f7
   1537a:	mov    DWORD PTR [eax+0x4],esi
   1537d:	jmp    0x15405
   15382:	mov    ecx,DWORD PTR [edi+0x8]
   15385:	cmp    ecx,eax
   15387:	je     0x15369
   15389:	push   ecx
   1538a:	call   0x12d46
   1538f:	mov    ebx,eax
   15391:	mov    esi,DWORD PTR [ebx+0x8]
   15394:	cmp    ebx,edi
   15396:	je     0x15369
   15398:	mov    eax,DWORD PTR [ebp-0x8]
   1539b:	mov    DWORD PTR [eax+0x4],ebx
   1539e:	mov    eax,DWORD PTR [edi]
   153a0:	mov    DWORD PTR [ebx],eax
   153a2:	cmp    ebx,DWORD PTR [edi+0x8]
   153a5:	jne    0x153ac
   153a7:	mov    DWORD PTR [esi+0x4],ebx
   153aa:	jmp    0x153c3
   153ac:	mov    eax,DWORD PTR [ebx+0x4]
   153af:	mov    DWORD PTR [esi+0x4],eax
   153b2:	mov    eax,DWORD PTR [ebx+0x4]
   153b5:	mov    DWORD PTR [eax],esi
   153b7:	mov    eax,DWORD PTR [edi+0x8]
   153ba:	mov    DWORD PTR [ebx+0x8],eax
   153bd:	mov    eax,DWORD PTR [edi+0x8]
   153c0:	mov    DWORD PTR [eax+0x4],ebx
   153c3:	mov    eax,DWORD PTR [ebp-0x4]
   153c6:	mov    eax,DWORD PTR [eax+0x4]
   153c9:	cmp    DWORD PTR [eax+0x4],edi
   153cc:	jne    0x153d3
   153ce:	mov    DWORD PTR [eax+0x4],ebx
   153d1:	jmp    0x153e1
   153d3:	mov    eax,DWORD PTR [edi+0x4]
   153d6:	cmp    DWORD PTR [eax],edi
   153d8:	jne    0x153de
   153da:	mov    DWORD PTR [eax],ebx
   153dc:	jmp    0x153e1
   153de:	mov    DWORD PTR [eax+0x8],ebx
   153e1:	mov    eax,DWORD PTR [edi+0x4]
   153e4:	mov    DWORD PTR [ebx+0x4],eax
   153e7:	mov    eax,DWORD PTR [ebx+0x58]
   153ea:	mov    ecx,DWORD PTR [edi+0x58]
   153ed:	mov    DWORD PTR [ebx+0x58],ecx
   153f0:	mov    DWORD PTR [edi+0x58],eax
   153f3:	mov    ebx,edi
   153f5:	jmp    0x15458
   153f7:	mov    eax,DWORD PTR [edi+0x4]
   153fa:	cmp    DWORD PTR [eax],edi
   153fc:	jne    0x15402
   153fe:	mov    DWORD PTR [eax],esi
   15400:	jmp    0x15405
   15402:	mov    DWORD PTR [eax+0x8],esi
   15405:	mov    eax,DWORD PTR [ecx+0x4]
   15408:	mov    DWORD PTR [ebp-0x8],eax
   1540b:	cmp    DWORD PTR [eax],edi
   1540d:	jne    0x1542f
   1540f:	mov    edx,DWORD PTR [edi+0x8]
   15412:	cmp    edx,DWORD PTR ds:0x788bc
   15418:	jne    0x15421
   1541a:	mov    edx,DWORD PTR [edi+0x4]
   1541d:	mov    DWORD PTR [eax],edx
   1541f:	jmp    0x1542f
   15421:	push   esi
   15422:	call   0x12d46
   15427:	mov    ecx,DWORD PTR [ebp-0x8]
   1542a:	mov    DWORD PTR [ecx],eax
   1542c:	mov    ecx,DWORD PTR [ebp-0x4]
   1542f:	mov    eax,DWORD PTR [ecx+0x4]
   15432:	mov    DWORD PTR [ebp-0x8],eax
   15435:	cmp    DWORD PTR [eax+0x8],edi
   15438:	jne    0x15458
   1543a:	mov    ecx,DWORD PTR [edi]
   1543c:	cmp    ecx,DWORD PTR ds:0x788bc
   15442:	jne    0x1544c
   15444:	mov    ecx,DWORD PTR [edi+0x4]
   15447:	mov    DWORD PTR [eax+0x8],ecx
   1544a:	jmp    0x15458
   1544c:	push   esi
   1544d:	call   0x113e0
   15452:	mov    ecx,DWORD PTR [ebp-0x8]
   15455:	mov    DWORD PTR [ecx+0x8],eax
   15458:	xor    edi,edi
   1545a:	inc    edi
   1545b:	cmp    DWORD PTR [ebx+0x58],edi
   1545e:	jne    0x15575
   15464:	jmp    0x15523
   15469:	cmp    DWORD PTR [esi+0x58],edi
   1546c:	jne    0x15572
   15472:	mov    eax,DWORD PTR [esi+0x4]
   15475:	cmp    esi,DWORD PTR [eax]
   15477:	jne    0x154ee
   15479:	mov    eax,DWORD PTR [eax+0x8]
   1547c:	cmp    DWORD PTR [eax+0x58],0x0
   15480:	jne    0x1549a
   15482:	mov    DWORD PTR [eax+0x58],edi
   15485:	mov    eax,DWORD PTR [esi+0x4]
   15488:	and    DWORD PTR [eax+0x58],0x0
   1548c:	push   DWORD PTR [esi+0x4]
   1548f:	call   0x11392
   15494:	mov    eax,DWORD PTR [esi+0x4]
   15497:	mov    eax,DWORD PTR [eax+0x8]
   1549a:	mov    ecx,DWORD PTR [eax]
   1549c:	cmp    DWORD PTR [ecx+0x58],edi
   1549f:	jne    0x154a9
   154a1:	mov    ecx,DWORD PTR [eax+0x8]
   154a4:	cmp    DWORD PTR [ecx+0x58],edi
   154a7:	je     0x1551c
   154a9:	mov    ecx,DWORD PTR [eax+0x8]
   154ac:	cmp    DWORD PTR [ecx+0x58],edi
   154af:	jne    0x154c9
   154b1:	mov    ecx,DWORD PTR [eax]
   154b3:	mov    DWORD PTR [ecx+0x58],edi
   154b6:	mov    ecx,DWORD PTR [ebp-0x4]
   154b9:	and    DWORD PTR [eax+0x58],0x0
   154bd:	push   eax
   154be:	call   0x11402
   154c3:	mov    eax,DWORD PTR [esi+0x4]
   154c6:	mov    eax,DWORD PTR [eax+0x8]
   154c9:	mov    ecx,DWORD PTR [esi+0x4]
   154cc:	mov    ecx,DWORD PTR [ecx+0x58]
   154cf:	mov    DWORD PTR [eax+0x58],ecx
   154d2:	mov    ecx,DWORD PTR [esi+0x4]
   154d5:	mov    DWORD PTR [ecx+0x58],edi
   154d8:	mov    eax,DWORD PTR [eax+0x8]
   154db:	mov    ecx,DWORD PTR [ebp-0x4]
   154de:	mov    DWORD PTR [eax+0x58],edi
   154e1:	push   DWORD PTR [esi+0x4]
   154e4:	call   0x11392
   154e9:	jmp    0x15572
   154ee:	mov    eax,DWORD PTR [eax]
   154f0:	cmp    DWORD PTR [eax+0x58],0x0
   154f4:	jne    0x1550d
   154f6:	mov    DWORD PTR [eax+0x58],edi
   154f9:	mov    eax,DWORD PTR [esi+0x4]
   154fc:	and    DWORD PTR [eax+0x58],0x0
   15500:	push   DWORD PTR [esi+0x4]
   15503:	call   0x11402
   15508:	mov    eax,DWORD PTR [esi+0x4]
   1550b:	mov    eax,DWORD PTR [eax]
   1550d:	mov    ecx,DWORD PTR [eax+0x8]
   15510:	cmp    DWORD PTR [ecx+0x58],edi
   15513:	jne    0x15534
   15515:	mov    ecx,DWORD PTR [eax]
   15517:	cmp    DWORD PTR [ecx+0x58],edi
   1551a:	jne    0x15534
   1551c:	and    DWORD PTR [eax+0x58],0x0
   15520:	mov    esi,DWORD PTR [esi+0x4]
   15523:	mov    ecx,DWORD PTR [ebp-0x4]
   15526:	mov    eax,DWORD PTR [ecx+0x4]
   15529:	cmp    esi,DWORD PTR [eax+0x4]
   1552c:	jne    0x15469
   15532:	jmp    0x15572
   15534:	mov    ecx,DWORD PTR [eax]
   15536:	cmp    DWORD PTR [ecx+0x58],edi
   15539:	jne    0x15553
   1553b:	mov    ecx,DWORD PTR [eax+0x8]
   1553e:	mov    DWORD PTR [ecx+0x58],edi
   15541:	mov    ecx,DWORD PTR [ebp-0x4]
   15544:	and    DWORD PTR [eax+0x58],0x0
   15548:	push   eax
   15549:	call   0x11392
   1554e:	mov    eax,DWORD PTR [esi+0x4]
   15551:	mov    eax,DWORD PTR [eax]
   15553:	mov    ecx,DWORD PTR [esi+0x4]
   15556:	mov    ecx,DWORD PTR [ecx+0x58]
   15559:	mov    DWORD PTR [eax+0x58],ecx
   1555c:	mov    ecx,DWORD PTR [esi+0x4]
   1555f:	mov    DWORD PTR [ecx+0x58],edi
   15562:	mov    eax,DWORD PTR [eax]
   15564:	mov    ecx,DWORD PTR [ebp-0x4]
   15567:	mov    DWORD PTR [eax+0x58],edi
   1556a:	push   DWORD PTR [esi+0x4]
   1556d:	call   0x11402
   15572:	mov    DWORD PTR [esi+0x58],edi
   15575:	lea    eax,[ebx+0x10]
   15578:	push   eax
   15579:	call   0x13ad6
   1557e:	push   ebx
   1557f:	call   0x10a3a
   15584:	mov    eax,DWORD PTR [ebp-0x4]
   15587:	dec    DWORD PTR [eax+0xc]
   1558a:	mov    eax,DWORD PTR [ebp+0x8]
   1558d:	pop    ecx
   1558e:	mov    ecx,DWORD PTR [ebp+0xc]
   15591:	pop    edi
   15592:	pop    esi
   15593:	mov    DWORD PTR [eax],ecx
   15595:	pop    ebx
   15596:	leave  
   15597:	ret    0x8
   1559a:	int3   
   1559b:	int3   
   1559c:	int3   
   1559d:	int3   
   1559e:	int3   
   1559f:	int3   
   155a0:	mov    edi,edi
   155a2:	push   ebp
   155a3:	mov    ebp,esp
   155a5:	push   ebx
   155a6:	push   esi
   155a7:	push   edi
   155a8:	mov    edi,DWORD PTR [ebp+0x8]
   155ab:	mov    ebx,ecx
   155ad:	mov    esi,edi
   155af:	cmp    edi,DWORD PTR ds:0x788bc
   155b5:	je     0x155dd
   155b7:	push   DWORD PTR [esi+0x8]
   155ba:	mov    ecx,ebx
   155bc:	call   0x155a0
   155c1:	mov    esi,DWORD PTR [esi]
   155c3:	lea    eax,[edi+0x10]
   155c6:	push   eax
   155c7:	call   0x13ad6
   155cc:	push   edi
   155cd:	call   0x10a3a
   155d2:	pop    ecx
   155d3:	mov    edi,esi
   155d5:	cmp    esi,DWORD PTR ds:0x788bc
   155db:	jne    0x155b7
   155dd:	pop    edi
   155de:	pop    esi
   155df:	pop    ebx
   155e0:	pop    ebp
   155e1:	ret    0x4
   155e4:	int3   
   155e5:	int3   
   155e6:	int3   
   155e7:	int3   
   155e8:	int3   
   155e9:	int3   
   155ea:	mov    edi,edi
   155ec:	push   ebp
   155ed:	mov    ebp,esp
   155ef:	push   ebx
   155f0:	push   esi
   155f1:	mov    esi,DWORD PTR [ebp+0x10]
   155f4:	push   edi
   155f5:	push   0x0
   155f7:	push   esi
   155f8:	mov    edi,ecx
   155fa:	call   0x13974
   155ff:	push   DWORD PTR [ebp+0x14]
   15602:	mov    ebx,eax
   15604:	mov    eax,ds:0x788bc
   15609:	mov    DWORD PTR [ebx],eax
   1560b:	mov    eax,ds:0x788bc
   15610:	mov    DWORD PTR [ebx+0x8],eax
   15613:	lea    eax,[ebx+0x10]
   15616:	push   eax
   15617:	call   0x13aee
   1561c:	inc    DWORD PTR [edi+0xc]
   1561f:	cmp    esi,DWORD PTR [edi+0x4]
   15622:	je     0x1564c
   15624:	mov    eax,DWORD PTR [ebp+0xc]
   15627:	cmp    eax,DWORD PTR ds:0x788bc
   1562d:	jne    0x1564c
   1562f:	lea    eax,[esi+0x10]
   15632:	push   eax
   15633:	push   DWORD PTR [ebp+0x14]
   15636:	call   0x19864
   1563b:	test   al,al
   1563d:	jne    0x1564c
   1563f:	mov    DWORD PTR [esi+0x8],ebx
   15642:	mov    eax,DWORD PTR [edi+0x4]
   15645:	cmp    esi,DWORD PTR [eax+0x8]
   15648:	jne    0x15666
   1564a:	jmp    0x1565b
   1564c:	mov    DWORD PTR [esi],ebx
   1564e:	mov    eax,DWORD PTR [edi+0x4]
   15651:	cmp    esi,eax
   15653:	jne    0x15660
   15655:	mov    DWORD PTR [eax+0x4],ebx
   15658:	mov    eax,DWORD PTR [edi+0x4]
   1565b:	mov    DWORD PTR [eax+0x8],ebx
   1565e:	jmp    0x15666
   15660:	cmp    esi,DWORD PTR [eax]
   15662:	jne    0x15666
   15664:	mov    DWORD PTR [eax],ebx
   15666:	mov    eax,DWORD PTR [edi+0x4]
   15669:	mov    esi,ebx
   1566b:	cmp    ebx,DWORD PTR [eax+0x4]
   1566e:	je     0x15722
   15674:	mov    eax,DWORD PTR [esi+0x4]
   15677:	xor    edx,edx
   15679:	cmp    DWORD PTR [eax+0x58],edx
   1567c:	jne    0x15722
   15682:	mov    ecx,DWORD PTR [eax+0x4]
   15685:	cmp    eax,DWORD PTR [ecx]
   15687:	jne    0x156c3
   15689:	mov    ecx,DWORD PTR [ecx+0x8]
   1568c:	cmp    DWORD PTR [ecx+0x58],edx
   1568f:	je     0x156ca
   15691:	cmp    esi,DWORD PTR [eax+0x8]
   15694:	jne    0x156a0
   15696:	mov    esi,eax
   15698:	push   esi
   15699:	mov    ecx,edi
   1569b:	call   0x11392
   156a0:	mov    eax,DWORD PTR [esi+0x4]
   156a3:	mov    DWORD PTR [eax+0x58],0x1
   156aa:	mov    eax,DWORD PTR [esi+0x4]
   156ad:	mov    eax,DWORD PTR [eax+0x4]
   156b0:	and    DWORD PTR [eax+0x58],0x0
   156b4:	mov    eax,DWORD PTR [esi+0x4]
   156b7:	push   DWORD PTR [eax+0x4]
   156ba:	mov    ecx,edi
   156bc:	call   0x11402
   156c1:	jmp    0x15716
   156c3:	mov    ecx,DWORD PTR [ecx]
   156c5:	cmp    DWORD PTR [ecx+0x58],edx
   156c8:	jne    0x156e7
   156ca:	mov    edx,eax
   156cc:	xor    eax,eax
   156ce:	inc    eax
   156cf:	mov    DWORD PTR [edx+0x58],eax
   156d2:	mov    DWORD PTR [ecx+0x58],eax
   156d5:	mov    eax,DWORD PTR [esi+0x4]
   156d8:	mov    eax,DWORD PTR [eax+0x4]
   156db:	and    DWORD PTR [eax+0x58],0x0
   156df:	mov    eax,DWORD PTR [esi+0x4]
   156e2:	mov    esi,DWORD PTR [eax+0x4]
   156e5:	jmp    0x15716
   156e7:	cmp    esi,DWORD PTR [eax]
   156e9:	jne    0x156f5
   156eb:	mov    esi,eax
   156ed:	push   esi
   156ee:	mov    ecx,edi
   156f0:	call   0x11402
   156f5:	mov    eax,DWORD PTR [esi+0x4]
   156f8:	mov    DWORD PTR [eax+0x58],0x1
   156ff:	mov    eax,DWORD PTR [esi+0x4]
   15702:	mov    eax,DWORD PTR [eax+0x4]
   15705:	and    DWORD PTR [eax+0x58],0x0
   15709:	mov    eax,DWORD PTR [esi+0x4]
   1570c:	push   DWORD PTR [eax+0x4]
   1570f:	mov    ecx,edi
   15711:	call   0x11392
   15716:	mov    eax,DWORD PTR [edi+0x4]
   15719:	cmp    esi,DWORD PTR [eax+0x4]
   1571c:	jne    0x15674
   15722:	mov    eax,DWORD PTR [edi+0x4]
   15725:	mov    eax,DWORD PTR [eax+0x4]
   15728:	pop    edi
   15729:	mov    DWORD PTR [eax+0x58],0x1
   15730:	mov    eax,DWORD PTR [ebp+0x8]
   15733:	pop    esi
   15734:	mov    DWORD PTR [eax],ebx
   15736:	pop    ebx
   15737:	pop    ebp
   15738:	ret    0x10
   1573b:	int3   
   1573c:	int3   
   1573d:	int3   
   1573e:	int3   
   1573f:	int3   
   15740:	mov    edi,edi
   15742:	push   ebp
   15743:	mov    ebp,esp
   15745:	push   ebx
   15746:	push   esi
   15747:	mov    esi,DWORD PTR [ebp+0x10]
   1574a:	push   edi
   1574b:	push   0x0
   1574d:	push   esi
   1574e:	mov    edi,ecx
   15750:	call   0x13998
   15755:	push   DWORD PTR [ebp+0x14]
   15758:	mov    ebx,eax
   1575a:	mov    eax,ds:0x788c0
   1575f:	mov    DWORD PTR [ebx],eax
   15761:	mov    eax,ds:0x788c0
   15766:	mov    DWORD PTR [ebx+0x8],eax
   15769:	lea    eax,[ebx+0xc]
   1576c:	push   eax
   1576d:	call   0x13b0c
   15772:	inc    DWORD PTR [edi+0xc]
   15775:	cmp    esi,DWORD PTR [edi+0x4]
   15778:	je     0x157a2
   1577a:	mov    eax,DWORD PTR [ebp+0xc]
   1577d:	cmp    eax,DWORD PTR ds:0x788c0
   15783:	jne    0x157a2
   15785:	lea    eax,[esi+0xc]
   15788:	push   eax
   15789:	push   DWORD PTR [ebp+0x14]
   1578c:	call   0x19864
   15791:	test   al,al
   15793:	jne    0x157a2
   15795:	mov    DWORD PTR [esi+0x8],ebx
   15798:	mov    eax,DWORD PTR [edi+0x4]
   1579b:	cmp    esi,DWORD PTR [eax+0x8]
   1579e:	jne    0x157bc
   157a0:	jmp    0x157b1
   157a2:	mov    DWORD PTR [esi],ebx
   157a4:	mov    eax,DWORD PTR [edi+0x4]
   157a7:	cmp    esi,eax
   157a9:	jne    0x157b6
   157ab:	mov    DWORD PTR [eax+0x4],ebx
   157ae:	mov    eax,DWORD PTR [edi+0x4]
   157b1:	mov    DWORD PTR [eax+0x8],ebx
   157b4:	jmp    0x157bc
   157b6:	cmp    esi,DWORD PTR [eax]
   157b8:	jne    0x157bc
   157ba:	mov    DWORD PTR [eax],ebx
   157bc:	mov    eax,DWORD PTR [edi+0x4]
   157bf:	mov    esi,ebx
   157c1:	cmp    ebx,DWORD PTR [eax+0x4]
   157c4:	je     0x15878
   157ca:	mov    eax,DWORD PTR [esi+0x4]
   157cd:	xor    edx,edx
   157cf:	cmp    DWORD PTR [eax+0x1c],edx
   157d2:	jne    0x15878
   157d8:	mov    ecx,DWORD PTR [eax+0x4]
   157db:	cmp    eax,DWORD PTR [ecx]
   157dd:	jne    0x15819
   157df:	mov    ecx,DWORD PTR [ecx+0x8]
   157e2:	cmp    DWORD PTR [ecx+0x1c],edx
   157e5:	je     0x15820
   157e7:	cmp    esi,DWORD PTR [eax+0x8]
   157ea:	jne    0x157f6
   157ec:	mov    esi,eax
   157ee:	push   esi
   157ef:	mov    ecx,edi
   157f1:	call   0x131be
   157f6:	mov    eax,DWORD PTR [esi+0x4]
   157f9:	mov    DWORD PTR [eax+0x1c],0x1
   15800:	mov    eax,DWORD PTR [esi+0x4]
   15803:	mov    eax,DWORD PTR [eax+0x4]
   15806:	and    DWORD PTR [eax+0x1c],0x0
   1580a:	mov    eax,DWORD PTR [esi+0x4]
   1580d:	push   DWORD PTR [eax+0x4]
   15810:	mov    ecx,edi
   15812:	call   0x1320c
   15817:	jmp    0x1586c
   15819:	mov    ecx,DWORD PTR [ecx]
   1581b:	cmp    DWORD PTR [ecx+0x1c],edx
   1581e:	jne    0x1583d
   15820:	mov    edx,eax
   15822:	xor    eax,eax
   15824:	inc    eax
   15825:	mov    DWORD PTR [edx+0x1c],eax
   15828:	mov    DWORD PTR [ecx+0x1c],eax
   1582b:	mov    eax,DWORD PTR [esi+0x4]
   1582e:	mov    eax,DWORD PTR [eax+0x4]
   15831:	and    DWORD PTR [eax+0x1c],0x0
   15835:	mov    eax,DWORD PTR [esi+0x4]
   15838:	mov    esi,DWORD PTR [eax+0x4]
   1583b:	jmp    0x1586c
   1583d:	cmp    esi,DWORD PTR [eax]
   1583f:	jne    0x1584b
   15841:	mov    esi,eax
   15843:	push   esi
   15844:	mov    ecx,edi
   15846:	call   0x1320c
   1584b:	mov    eax,DWORD PTR [esi+0x4]
   1584e:	mov    DWORD PTR [eax+0x1c],0x1
   15855:	mov    eax,DWORD PTR [esi+0x4]
   15858:	mov    eax,DWORD PTR [eax+0x4]
   1585b:	and    DWORD PTR [eax+0x1c],0x0
   1585f:	mov    eax,DWORD PTR [esi+0x4]
   15862:	push   DWORD PTR [eax+0x4]
   15865:	mov    ecx,edi
   15867:	call   0x131be
   1586c:	mov    eax,DWORD PTR [edi+0x4]
   1586f:	cmp    esi,DWORD PTR [eax+0x4]
   15872:	jne    0x157ca
   15878:	mov    eax,DWORD PTR [edi+0x4]
   1587b:	mov    eax,DWORD PTR [eax+0x4]
   1587e:	pop    edi
   1587f:	mov    DWORD PTR [eax+0x1c],0x1
   15886:	mov    eax,DWORD PTR [ebp+0x8]
   15889:	pop    esi
   1588a:	mov    DWORD PTR [eax],ebx
   1588c:	pop    ebx
   1588d:	pop    ebp
   1588e:	ret    0x10
   15891:	int3   
   15892:	int3   
   15893:	int3   
   15894:	int3   
   15895:	int3   
   15896:	mov    edi,edi
   15898:	push   ebp
   15899:	mov    ebp,esp
   1589b:	push   ecx
   1589c:	push   ecx
   1589d:	push   ebx
   1589e:	push   esi
   1589f:	mov    DWORD PTR [ebp-0x4],ecx
   158a2:	push   edi
   158a3:	mov    edi,DWORD PTR [ebp+0xc]
   158a6:	lea    ecx,[ebp+0xc]
   158a9:	call   0x11610
   158ae:	mov    esi,DWORD PTR [edi]
   158b0:	mov    eax,ds:0x788c4
   158b5:	mov    ebx,edi
   158b7:	mov    DWORD PTR [ebp-0x8],esi
   158ba:	cmp    esi,eax
   158bc:	jne    0x158da
   158be:	mov    esi,DWORD PTR [edi+0x8]
   158c1:	mov    eax,DWORD PTR [ebx+0x4]
   158c4:	mov    ecx,DWORD PTR [ebp-0x4]
   158c7:	mov    DWORD PTR [esi+0x4],eax
   158ca:	mov    eax,DWORD PTR [ecx+0x4]
   158cd:	cmp    DWORD PTR [eax+0x4],edi
   158d0:	jne    0x1594f
   158d2:	mov    DWORD PTR [eax+0x4],esi
   158d5:	jmp    0x1595d
   158da:	mov    ecx,DWORD PTR [edi+0x8]
   158dd:	cmp    ecx,eax
   158df:	je     0x158c1
   158e1:	push   ecx
   158e2:	call   0x11538
   158e7:	mov    ebx,eax
   158e9:	mov    esi,DWORD PTR [ebx+0x8]
   158ec:	cmp    ebx,edi
   158ee:	je     0x158c1
   158f0:	mov    eax,DWORD PTR [ebp-0x8]
   158f3:	mov    DWORD PTR [eax+0x4],ebx
   158f6:	mov    eax,DWORD PTR [edi]
   158f8:	mov    DWORD PTR [ebx],eax
   158fa:	cmp    ebx,DWORD PTR [edi+0x8]
   158fd:	jne    0x15904
   158ff:	mov    DWORD PTR [esi+0x4],ebx
   15902:	jmp    0x1591b
   15904:	mov    eax,DWORD PTR [ebx+0x4]
   15907:	mov    DWORD PTR [esi+0x4],eax
   1590a:	mov    eax,DWORD PTR [ebx+0x4]
   1590d:	mov    DWORD PTR [eax],esi
   1590f:	mov    eax,DWORD PTR [edi+0x8]
   15912:	mov    DWORD PTR [ebx+0x8],eax
   15915:	mov    eax,DWORD PTR [edi+0x8]
   15918:	mov    DWORD PTR [eax+0x4],ebx
   1591b:	mov    eax,DWORD PTR [ebp-0x4]
   1591e:	mov    eax,DWORD PTR [eax+0x4]
   15921:	cmp    DWORD PTR [eax+0x4],edi
   15924:	jne    0x1592b
   15926:	mov    DWORD PTR [eax+0x4],ebx
   15929:	jmp    0x15939
   1592b:	mov    eax,DWORD PTR [edi+0x4]
   1592e:	cmp    DWORD PTR [eax],edi
   15930:	jne    0x15936
   15932:	mov    DWORD PTR [eax],ebx
   15934:	jmp    0x15939
   15936:	mov    DWORD PTR [eax+0x8],ebx
   15939:	mov    eax,DWORD PTR [edi+0x4]
   1593c:	mov    DWORD PTR [ebx+0x4],eax
   1593f:	mov    eax,DWORD PTR [ebx+0x14]
   15942:	mov    ecx,DWORD PTR [edi+0x14]
   15945:	mov    DWORD PTR [ebx+0x14],ecx
   15948:	mov    DWORD PTR [edi+0x14],eax
   1594b:	mov    ebx,edi
   1594d:	jmp    0x159b0
   1594f:	mov    eax,DWORD PTR [edi+0x4]
   15952:	cmp    DWORD PTR [eax],edi
   15954:	jne    0x1595a
   15956:	mov    DWORD PTR [eax],esi
   15958:	jmp    0x1595d
   1595a:	mov    DWORD PTR [eax+0x8],esi
   1595d:	mov    eax,DWORD PTR [ecx+0x4]
   15960:	mov    DWORD PTR [ebp-0x8],eax
   15963:	cmp    DWORD PTR [eax],edi
   15965:	jne    0x15987
   15967:	mov    edx,DWORD PTR [edi+0x8]
   1596a:	cmp    edx,DWORD PTR ds:0x788c4
   15970:	jne    0x15979
   15972:	mov    edx,DWORD PTR [edi+0x4]
   15975:	mov    DWORD PTR [eax],edx
   15977:	jmp    0x15987
   15979:	push   esi
   1597a:	call   0x11538
   1597f:	mov    ecx,DWORD PTR [ebp-0x8]
   15982:	mov    DWORD PTR [ecx],eax
   15984:	mov    ecx,DWORD PTR [ebp-0x4]
   15987:	mov    eax,DWORD PTR [ecx+0x4]
   1598a:	mov    DWORD PTR [ebp-0x8],eax
   1598d:	cmp    DWORD PTR [eax+0x8],edi
   15990:	jne    0x159b0
   15992:	mov    ecx,DWORD PTR [edi]
   15994:	cmp    ecx,DWORD PTR ds:0x788c4
   1599a:	jne    0x159a4
   1599c:	mov    ecx,DWORD PTR [edi+0x4]
   1599f:	mov    DWORD PTR [eax+0x8],ecx
   159a2:	jmp    0x159b0
   159a4:	push   esi
   159a5:	call   0x11516
   159aa:	mov    ecx,DWORD PTR [ebp-0x8]
   159ad:	mov    DWORD PTR [ecx+0x8],eax
   159b0:	xor    edi,edi
   159b2:	inc    edi
   159b3:	cmp    DWORD PTR [ebx+0x14],edi
   159b6:	jne    0x15acd
   159bc:	jmp    0x15a7b
   159c1:	cmp    DWORD PTR [esi+0x14],edi
   159c4:	jne    0x15aca
   159ca:	mov    eax,DWORD PTR [esi+0x4]
   159cd:	cmp    esi,DWORD PTR [eax]
   159cf:	jne    0x15a46
   159d1:	mov    eax,DWORD PTR [eax+0x8]
   159d4:	cmp    DWORD PTR [eax+0x14],0x0
   159d8:	jne    0x159f2
   159da:	mov    DWORD PTR [eax+0x14],edi
   159dd:	mov    eax,DWORD PTR [esi+0x4]
   159e0:	and    DWORD PTR [eax+0x14],0x0
   159e4:	push   DWORD PTR [esi+0x4]
   159e7:	call   0x1329c
   159ec:	mov    eax,DWORD PTR [esi+0x4]
   159ef:	mov    eax,DWORD PTR [eax+0x8]
   159f2:	mov    ecx,DWORD PTR [eax]
   159f4:	cmp    DWORD PTR [ecx+0x14],edi
   159f7:	jne    0x15a01
   159f9:	mov    ecx,DWORD PTR [eax+0x8]
   159fc:	cmp    DWORD PTR [ecx+0x14],edi
   159ff:	je     0x15a74
   15a01:	mov    ecx,DWORD PTR [eax+0x8]
   15a04:	cmp    DWORD PTR [ecx+0x14],edi
   15a07:	jne    0x15a21
   15a09:	mov    ecx,DWORD PTR [eax]
   15a0b:	mov    DWORD PTR [ecx+0x14],edi
   15a0e:	mov    ecx,DWORD PTR [ebp-0x4]
   15a11:	and    DWORD PTR [eax+0x14],0x0
   15a15:	push   eax
   15a16:	call   0x132ea
   15a1b:	mov    eax,DWORD PTR [esi+0x4]
   15a1e:	mov    eax,DWORD PTR [eax+0x8]
   15a21:	mov    ecx,DWORD PTR [esi+0x4]
   15a24:	mov    ecx,DWORD PTR [ecx+0x14]
   15a27:	mov    DWORD PTR [eax+0x14],ecx
   15a2a:	mov    ecx,DWORD PTR [esi+0x4]
   15a2d:	mov    DWORD PTR [ecx+0x14],edi
   15a30:	mov    eax,DWORD PTR [eax+0x8]
   15a33:	mov    ecx,DWORD PTR [ebp-0x4]
   15a36:	mov    DWORD PTR [eax+0x14],edi
   15a39:	push   DWORD PTR [esi+0x4]
   15a3c:	call   0x1329c
   15a41:	jmp    0x15aca
   15a46:	mov    eax,DWORD PTR [eax]
   15a48:	cmp    DWORD PTR [eax+0x14],0x0
   15a4c:	jne    0x15a65
   15a4e:	mov    DWORD PTR [eax+0x14],edi
   15a51:	mov    eax,DWORD PTR [esi+0x4]
   15a54:	and    DWORD PTR [eax+0x14],0x0
   15a58:	push   DWORD PTR [esi+0x4]
   15a5b:	call   0x132ea
   15a60:	mov    eax,DWORD PTR [esi+0x4]
   15a63:	mov    eax,DWORD PTR [eax]
   15a65:	mov    ecx,DWORD PTR [eax+0x8]
   15a68:	cmp    DWORD PTR [ecx+0x14],edi
   15a6b:	jne    0x15a8c
   15a6d:	mov    ecx,DWORD PTR [eax]
   15a6f:	cmp    DWORD PTR [ecx+0x14],edi
   15a72:	jne    0x15a8c
   15a74:	and    DWORD PTR [eax+0x14],0x0
   15a78:	mov    esi,DWORD PTR [esi+0x4]
   15a7b:	mov    ecx,DWORD PTR [ebp-0x4]
   15a7e:	mov    eax,DWORD PTR [ecx+0x4]
   15a81:	cmp    esi,DWORD PTR [eax+0x4]
   15a84:	jne    0x159c1
   15a8a:	jmp    0x15aca
   15a8c:	mov    ecx,DWORD PTR [eax]
   15a8e:	cmp    DWORD PTR [ecx+0x14],edi
   15a91:	jne    0x15aab
   15a93:	mov    ecx,DWORD PTR [eax+0x8]
   15a96:	mov    DWORD PTR [ecx+0x14],edi
   15a99:	mov    ecx,DWORD PTR [ebp-0x4]
   15a9c:	and    DWORD PTR [eax+0x14],0x0
   15aa0:	push   eax
   15aa1:	call   0x1329c
   15aa6:	mov    eax,DWORD PTR [esi+0x4]
   15aa9:	mov    eax,DWORD PTR [eax]
   15aab:	mov    ecx,DWORD PTR [esi+0x4]
   15aae:	mov    ecx,DWORD PTR [ecx+0x14]
   15ab1:	mov    DWORD PTR [eax+0x14],ecx
   15ab4:	mov    ecx,DWORD PTR [esi+0x4]
   15ab7:	mov    DWORD PTR [ecx+0x14],edi
   15aba:	mov    eax,DWORD PTR [eax]
   15abc:	mov    ecx,DWORD PTR [ebp-0x4]
   15abf:	mov    DWORD PTR [eax+0x14],edi
   15ac2:	push   DWORD PTR [esi+0x4]
   15ac5:	call   0x132ea
   15aca:	mov    DWORD PTR [esi+0x14],edi
   15acd:	lea    eax,[ebx+0xc]
   15ad0:	push   eax
   15ad1:	call   0x13b48
   15ad6:	push   ebx
   15ad7:	call   0x10a3a
   15adc:	mov    eax,DWORD PTR [ebp-0x4]
   15adf:	dec    DWORD PTR [eax+0xc]
   15ae2:	mov    eax,DWORD PTR [ebp+0x8]
   15ae5:	pop    ecx
   15ae6:	mov    ecx,DWORD PTR [ebp+0xc]
   15ae9:	pop    edi
   15aea:	pop    esi
   15aeb:	mov    DWORD PTR [eax],ecx
   15aed:	pop    ebx
   15aee:	leave  
   15aef:	ret    0x8
   15af2:	int3   
   15af3:	int3   
   15af4:	int3   
   15af5:	int3   
   15af6:	int3   
   15af7:	int3   
   15af8:	mov    edi,edi
   15afa:	push   ebp
   15afb:	mov    ebp,esp
   15afd:	push   ebx
   15afe:	push   esi
   15aff:	push   edi
   15b00:	mov    edi,DWORD PTR [ebp+0x8]
   15b03:	mov    ebx,ecx
   15b05:	mov    esi,edi
   15b07:	cmp    edi,DWORD PTR ds:0x788c4
   15b0d:	je     0x15b35
   15b0f:	push   DWORD PTR [esi+0x8]
   15b12:	mov    ecx,ebx
   15b14:	call   0x15af8
   15b19:	mov    esi,DWORD PTR [esi]
   15b1b:	lea    eax,[edi+0xc]
   15b1e:	push   eax
   15b1f:	call   0x13b48
   15b24:	push   edi
   15b25:	call   0x10a3a
   15b2a:	pop    ecx
   15b2b:	mov    edi,esi
   15b2d:	cmp    esi,DWORD PTR ds:0x788c4
   15b33:	jne    0x15b0f
   15b35:	pop    edi
   15b36:	pop    esi
   15b37:	pop    ebx
   15b38:	pop    ebp
   15b39:	ret    0x4
   15b3c:	int3   
   15b3d:	int3   
   15b3e:	int3   
   15b3f:	int3   
   15b40:	int3   
   15b41:	int3   
   15b42:	mov    edi,edi
   15b44:	push   ebp
   15b45:	mov    ebp,esp
   15b47:	push   ebx
   15b48:	push   esi
   15b49:	mov    esi,DWORD PTR [ebp+0x10]
   15b4c:	push   edi
   15b4d:	push   0x0
   15b4f:	push   esi
   15b50:	mov    edi,ecx
   15b52:	call   0x1ab00
   15b57:	push   DWORD PTR [ebp+0x14]
   15b5a:	mov    ebx,eax
   15b5c:	mov    eax,ds:0x788c4
   15b61:	mov    DWORD PTR [ebx],eax
   15b63:	mov    eax,ds:0x788c4
   15b68:	mov    DWORD PTR [ebx+0x8],eax
   15b6b:	lea    eax,[ebx+0xc]
   15b6e:	push   eax
   15b6f:	call   0x13b2a
   15b74:	inc    DWORD PTR [edi+0xc]
   15b77:	cmp    esi,DWORD PTR [edi+0x4]
   15b7a:	je     0x15b9e
   15b7c:	mov    eax,DWORD PTR [ebp+0xc]
   15b7f:	cmp    eax,DWORD PTR ds:0x788c4
   15b85:	jne    0x15b9e
   15b87:	mov    eax,DWORD PTR [ebp+0x14]
   15b8a:	mov    eax,DWORD PTR [eax]
   15b8c:	cmp    eax,DWORD PTR [esi+0xc]
   15b8f:	jl     0x15b9e
   15b91:	mov    DWORD PTR [esi+0x8],ebx
   15b94:	mov    eax,DWORD PTR [edi+0x4]
   15b97:	cmp    esi,DWORD PTR [eax+0x8]
   15b9a:	jne    0x15bb8
   15b9c:	jmp    0x15bad
   15b9e:	mov    DWORD PTR [esi],ebx
   15ba0:	mov    eax,DWORD PTR [edi+0x4]
   15ba3:	cmp    esi,eax
   15ba5:	jne    0x15bb2
   15ba7:	mov    DWORD PTR [eax+0x4],ebx
   15baa:	mov    eax,DWORD PTR [edi+0x4]
   15bad:	mov    DWORD PTR [eax+0x8],ebx
   15bb0:	jmp    0x15bb8
   15bb2:	cmp    esi,DWORD PTR [eax]
   15bb4:	jne    0x15bb8
   15bb6:	mov    DWORD PTR [eax],ebx
   15bb8:	mov    eax,DWORD PTR [edi+0x4]
   15bbb:	mov    esi,ebx
   15bbd:	cmp    ebx,DWORD PTR [eax+0x4]
   15bc0:	je     0x15c74
   15bc6:	mov    eax,DWORD PTR [esi+0x4]
   15bc9:	xor    edx,edx
   15bcb:	cmp    DWORD PTR [eax+0x14],edx
   15bce:	jne    0x15c74
   15bd4:	mov    ecx,DWORD PTR [eax+0x4]
   15bd7:	cmp    eax,DWORD PTR [ecx]
   15bd9:	jne    0x15c15
   15bdb:	mov    ecx,DWORD PTR [ecx+0x8]
   15bde:	cmp    DWORD PTR [ecx+0x14],edx
   15be1:	je     0x15c1c
   15be3:	cmp    esi,DWORD PTR [eax+0x8]
   15be6:	jne    0x15bf2
   15be8:	mov    esi,eax
   15bea:	push   esi
   15beb:	mov    ecx,edi
   15bed:	call   0x1329c
   15bf2:	mov    eax,DWORD PTR [esi+0x4]
   15bf5:	mov    DWORD PTR [eax+0x14],0x1
   15bfc:	mov    eax,DWORD PTR [esi+0x4]
   15bff:	mov    eax,DWORD PTR [eax+0x4]
   15c02:	and    DWORD PTR [eax+0x14],0x0
   15c06:	mov    eax,DWORD PTR [esi+0x4]
   15c09:	push   DWORD PTR [eax+0x4]
   15c0c:	mov    ecx,edi
   15c0e:	call   0x132ea
   15c13:	jmp    0x15c68
   15c15:	mov    ecx,DWORD PTR [ecx]
   15c17:	cmp    DWORD PTR [ecx+0x14],edx
   15c1a:	jne    0x15c39
   15c1c:	mov    edx,eax
   15c1e:	xor    eax,eax
   15c20:	inc    eax
   15c21:	mov    DWORD PTR [edx+0x14],eax
   15c24:	mov    DWORD PTR [ecx+0x14],eax
   15c27:	mov    eax,DWORD PTR [esi+0x4]
   15c2a:	mov    eax,DWORD PTR [eax+0x4]
   15c2d:	and    DWORD PTR [eax+0x14],0x0
   15c31:	mov    eax,DWORD PTR [esi+0x4]
   15c34:	mov    esi,DWORD PTR [eax+0x4]
   15c37:	jmp    0x15c68
   15c39:	cmp    esi,DWORD PTR [eax]
   15c3b:	jne    0x15c47
   15c3d:	mov    esi,eax
   15c3f:	push   esi
   15c40:	mov    ecx,edi
   15c42:	call   0x132ea
   15c47:	mov    eax,DWORD PTR [esi+0x4]
   15c4a:	mov    DWORD PTR [eax+0x14],0x1
   15c51:	mov    eax,DWORD PTR [esi+0x4]
   15c54:	mov    eax,DWORD PTR [eax+0x4]
   15c57:	and    DWORD PTR [eax+0x14],0x0
   15c5b:	mov    eax,DWORD PTR [esi+0x4]
   15c5e:	push   DWORD PTR [eax+0x4]
   15c61:	mov    ecx,edi
   15c63:	call   0x1329c
   15c68:	mov    eax,DWORD PTR [edi+0x4]
   15c6b:	cmp    esi,DWORD PTR [eax+0x4]
   15c6e:	jne    0x15bc6
   15c74:	mov    eax,DWORD PTR [edi+0x4]
   15c77:	mov    eax,DWORD PTR [eax+0x4]
   15c7a:	pop    edi
   15c7b:	mov    DWORD PTR [eax+0x14],0x1
   15c82:	mov    eax,DWORD PTR [ebp+0x8]
   15c85:	pop    esi
   15c86:	mov    DWORD PTR [eax],ebx
   15c88:	pop    ebx
   15c89:	pop    ebp
   15c8a:	ret    0x10
   15c8d:	int3   
   15c8e:	int3   
   15c8f:	int3   
   15c90:	int3   
   15c91:	int3   
   15c92:	mov    edi,edi
   15c94:	push   ebp
   15c95:	mov    ebp,esp
   15c97:	push   ebx
   15c98:	push   esi
   15c99:	mov    esi,DWORD PTR [ebp+0x10]
   15c9c:	push   edi
   15c9d:	push   0x0
   15c9f:	push   esi
   15ca0:	mov    edi,ecx
   15ca2:	call   0x13998
   15ca7:	push   DWORD PTR [ebp+0x14]
   15caa:	mov    ebx,eax
   15cac:	mov    eax,ds:0x788cc
   15cb1:	mov    DWORD PTR [ebx],eax
   15cb3:	mov    eax,ds:0x788cc
   15cb8:	mov    DWORD PTR [ebx+0x8],eax
   15cbb:	lea    eax,[ebx+0xc]
   15cbe:	push   eax
   15cbf:	call   0x13b60
   15cc4:	inc    DWORD PTR [edi+0xc]
   15cc7:	cmp    esi,DWORD PTR [edi+0x4]
   15cca:	je     0x15cf4
   15ccc:	mov    eax,DWORD PTR [ebp+0xc]
   15ccf:	cmp    eax,DWORD PTR ds:0x788cc
   15cd5:	jne    0x15cf4
   15cd7:	lea    eax,[esi+0xc]
   15cda:	push   eax
   15cdb:	push   DWORD PTR [ebp+0x14]
   15cde:	call   0x19894
   15ce3:	test   al,al
   15ce5:	jne    0x15cf4
   15ce7:	mov    DWORD PTR [esi+0x8],ebx
   15cea:	mov    eax,DWORD PTR [edi+0x4]
   15ced:	cmp    esi,DWORD PTR [eax+0x8]
   15cf0:	jne    0x15d0e
   15cf2:	jmp    0x15d03
   15cf4:	mov    DWORD PTR [esi],ebx
   15cf6:	mov    eax,DWORD PTR [edi+0x4]
   15cf9:	cmp    esi,eax
   15cfb:	jne    0x15d08
   15cfd:	mov    DWORD PTR [eax+0x4],ebx
   15d00:	mov    eax,DWORD PTR [edi+0x4]
   15d03:	mov    DWORD PTR [eax+0x8],ebx
   15d06:	jmp    0x15d0e
   15d08:	cmp    esi,DWORD PTR [eax]
   15d0a:	jne    0x15d0e
   15d0c:	mov    DWORD PTR [eax],ebx
   15d0e:	mov    eax,DWORD PTR [edi+0x4]
   15d11:	mov    esi,ebx
   15d13:	cmp    ebx,DWORD PTR [eax+0x4]
   15d16:	je     0x15dca
   15d1c:	mov    eax,DWORD PTR [esi+0x4]
   15d1f:	xor    edx,edx
   15d21:	cmp    DWORD PTR [eax+0x1c],edx
   15d24:	jne    0x15dca
   15d2a:	mov    ecx,DWORD PTR [eax+0x4]
   15d2d:	cmp    eax,DWORD PTR [ecx]
   15d2f:	jne    0x15d6b
   15d31:	mov    ecx,DWORD PTR [ecx+0x8]
   15d34:	cmp    DWORD PTR [ecx+0x1c],edx
   15d37:	je     0x15d72
   15d39:	cmp    esi,DWORD PTR [eax+0x8]
   15d3c:	jne    0x15d48
   15d3e:	mov    esi,eax
   15d40:	push   esi
   15d41:	mov    ecx,edi
   15d43:	call   0x133b2
   15d48:	mov    eax,DWORD PTR [esi+0x4]
   15d4b:	mov    DWORD PTR [eax+0x1c],0x1
   15d52:	mov    eax,DWORD PTR [esi+0x4]
   15d55:	mov    eax,DWORD PTR [eax+0x4]
   15d58:	and    DWORD PTR [eax+0x1c],0x0
   15d5c:	mov    eax,DWORD PTR [esi+0x4]
   15d5f:	push   DWORD PTR [eax+0x4]
   15d62:	mov    ecx,edi
   15d64:	call   0x13400
   15d69:	jmp    0x15dbe
   15d6b:	mov    ecx,DWORD PTR [ecx]
   15d6d:	cmp    DWORD PTR [ecx+0x1c],edx
   15d70:	jne    0x15d8f
   15d72:	mov    edx,eax
   15d74:	xor    eax,eax
   15d76:	inc    eax
   15d77:	mov    DWORD PTR [edx+0x1c],eax
   15d7a:	mov    DWORD PTR [ecx+0x1c],eax
   15d7d:	mov    eax,DWORD PTR [esi+0x4]
   15d80:	mov    eax,DWORD PTR [eax+0x4]
   15d83:	and    DWORD PTR [eax+0x1c],0x0
   15d87:	mov    eax,DWORD PTR [esi+0x4]
   15d8a:	mov    esi,DWORD PTR [eax+0x4]
   15d8d:	jmp    0x15dbe
   15d8f:	cmp    esi,DWORD PTR [eax]
   15d91:	jne    0x15d9d
   15d93:	mov    esi,eax
   15d95:	push   esi
   15d96:	mov    ecx,edi
   15d98:	call   0x13400
   15d9d:	mov    eax,DWORD PTR [esi+0x4]
   15da0:	mov    DWORD PTR [eax+0x1c],0x1
   15da7:	mov    eax,DWORD PTR [esi+0x4]
   15daa:	mov    eax,DWORD PTR [eax+0x4]
   15dad:	and    DWORD PTR [eax+0x1c],0x0
   15db1:	mov    eax,DWORD PTR [esi+0x4]
   15db4:	push   DWORD PTR [eax+0x4]
   15db7:	mov    ecx,edi
   15db9:	call   0x133b2
   15dbe:	mov    eax,DWORD PTR [edi+0x4]
   15dc1:	cmp    esi,DWORD PTR [eax+0x4]
   15dc4:	jne    0x15d1c
   15dca:	mov    eax,DWORD PTR [edi+0x4]
   15dcd:	mov    eax,DWORD PTR [eax+0x4]
   15dd0:	pop    edi
   15dd1:	mov    DWORD PTR [eax+0x1c],0x1
   15dd8:	mov    eax,DWORD PTR [ebp+0x8]
   15ddb:	pop    esi
   15ddc:	mov    DWORD PTR [eax],ebx
   15dde:	pop    ebx
   15ddf:	pop    ebp
   15de0:	ret    0x10
   15de3:	int3   
   15de4:	int3   
   15de5:	int3   
   15de6:	int3   
   15de7:	int3   
   15de8:	mov    edi,edi
   15dea:	push   ebp
   15deb:	mov    ebp,esp
   15ded:	push   ecx
   15dee:	push   DWORD PTR [ebp-0x4]
   15df1:	push   DWORD PTR [ebp+0x10]
   15df4:	push   DWORD PTR [ebp+0xc]
   15df7:	push   DWORD PTR [ebp+0x8]
   15dfa:	call   0x14bb8
   15dff:	add    esp,0x10
   15e02:	leave  
   15e03:	ret    
   15e04:	int3   
   15e05:	int3   
   15e06:	int3   
   15e07:	int3   
   15e08:	int3   
   15e09:	int3   
   15e0a:	mov    edi,edi
   15e0c:	push   ebp
   15e0d:	mov    ebp,esp
   15e0f:	push   esi
   15e10:	push   edi
   15e11:	mov    edi,DWORD PTR [ebp+0x8]
   15e14:	mov    al,BYTE PTR [edi+0x8]
   15e17:	mov    esi,ecx
   15e19:	mov    BYTE PTR [esi+0x8],al
   15e1c:	call   0x144e4
   15e21:	push   edi
   15e22:	mov    ecx,esi
   15e24:	call   0x14b56
   15e29:	pop    edi
   15e2a:	mov    eax,esi
   15e2c:	pop    esi
   15e2d:	pop    ebp
   15e2e:	ret    0x4
   15e31:	int3   
   15e32:	int3   
   15e33:	int3   
   15e34:	int3   
   15e35:	int3   
   15e36:	mov    edi,edi
   15e38:	push   ebp
   15e39:	mov    ebp,esp
   15e3b:	push   ecx
   15e3c:	push   esi
   15e3d:	mov    esi,ecx
   15e3f:	cmp    esi,DWORD PTR [ebp+0x8]
   15e42:	je     0x15e60
   15e44:	mov    eax,DWORD PTR [esi+0x4]
   15e47:	mov    ecx,DWORD PTR [eax]
   15e49:	push   eax
   15e4a:	push   ecx
   15e4b:	lea    eax,[ebp-0x4]
   15e4e:	push   eax
   15e4f:	mov    ecx,esi
   15e51:	call   0x14d5e
   15e56:	push   DWORD PTR [ebp+0x8]
   15e59:	mov    ecx,esi
   15e5b:	call   0x14b56
   15e60:	mov    eax,esi
   15e62:	pop    esi
   15e63:	leave  
   15e64:	ret    0x4
   15e67:	int3   
   15e68:	int3   
   15e69:	int3   
   15e6a:	int3   
   15e6b:	int3   
   15e6c:	mov    edi,edi
   15e6e:	push   ebp
   15e6f:	mov    ebp,esp
   15e71:	push   ecx
   15e72:	push   ebx
   15e73:	push   esi
   15e74:	push   edi
   15e75:	xor    edi,edi
   15e77:	push   edi
   15e78:	push   edi
   15e79:	push   edi
   15e7a:	mov    esi,ecx
   15e7c:	mov    eax,DWORD PTR [esi+0x10]
   15e7f:	push   edi
   15e80:	push   eax
   15e81:	xor    ebx,ebx
   15e83:	call   DWORD PTR ds:0x1f02c
   15e89:	test   eax,eax
   15e8b:	jge    0x15e91
   15e8d:	xor    eax,eax
   15e8f:	jmp    0x15eb7
   15e91:	lea    eax,[ebp+0x8]
   15e94:	push   eax
   15e95:	lea    eax,[ebp-0x4]
   15e98:	push   eax
   15e99:	mov    ecx,esi
   15e9b:	call   0x13bee
   15ea0:	mov    eax,DWORD PTR [ebp-0x4]
   15ea3:	cmp    eax,DWORD PTR [esi+0x4]
   15ea6:	je     0x15eab
   15ea8:	mov    ebx,DWORD PTR [eax+0x10]
   15eab:	push   edi
   15eac:	push   DWORD PTR [esi+0x10]
   15eaf:	call   DWORD PTR ds:0x1f028
   15eb5:	mov    eax,ebx
   15eb7:	pop    edi
   15eb8:	pop    esi
   15eb9:	pop    ebx
   15eba:	leave  
   15ebb:	ret    0x4
   15ebe:	int3   
   15ebf:	int3   
   15ec0:	int3   
   15ec1:	int3   
   15ec2:	int3   
   15ec3:	int3   
   15ec4:	push   0x10
   15ec6:	push   0x771e8
   15ecb:	call   0x1db88
   15ed0:	xor    ebx,ebx
   15ed2:	push   ebx
   15ed3:	push   ebx
   15ed4:	push   ebx
   15ed5:	push   ebx
   15ed6:	push   0x77558
   15edb:	call   DWORD PTR ds:0x1f02c
   15ee1:	cmp    eax,ebx
   15ee3:	jl     0x15fa0
   15ee9:	mov    DWORD PTR [ebp-0x4],ebx
   15eec:	push   0xffffffff
   15eee:	push   0x1df98
   15ef3:	lea    ecx,[ebp-0x20]
   15ef6:	call   0x11140
   15efb:	mov    esi,DWORD PTR [ebp+0x8]
   15efe:	push   esi
   15eff:	lea    eax,[ebp+0x8]
   15f02:	push   eax
   15f03:	mov    ecx,DWORD PTR ds:0x77528
   15f09:	call   0x14be2
   15f0e:	mov    eax,ds:0x77528
   15f13:	mov    eax,DWORD PTR [eax+0x4]
   15f16:	mov    ecx,DWORD PTR [ebp+0x8]
   15f19:	cmp    ecx,eax
   15f1b:	je     0x15f29
   15f1d:	add    ecx,0x14
   15f20:	push   ecx
   15f21:	lea    ecx,[ebp-0x20]
   15f24:	call   0x12a44
   15f29:	mov    edx,DWORD PTR [esi+0x4]
   15f2c:	mov    eax,DWORD PTR [ebp-0x1c]
   15f2f:	lea    ecx,[eax+edx*1+0x2]
   15f33:	mov    eax,DWORD PTR [ebp+0xc]
   15f36:	cmp    ecx,DWORD PTR [eax]
   15f38:	jbe    0x15f45
   15f3a:	mov    DWORD PTR [eax],ecx
   15f3c:	mov    DWORD PTR [eax+0x8],0x2
   15f43:	jmp    0x15f68
   15f45:	mov    DWORD PTR [eax+0x8],ebx
   15f48:	mov    esi,DWORD PTR [esi]
   15f4a:	lea    edi,[eax+0xc]
   15f4d:	mov    cl,BYTE PTR [esi]
   15f4f:	mov    BYTE PTR [edi],cl
   15f51:	inc    esi
   15f52:	inc    edi
   15f53:	cmp    cl,bl
   15f55:	jne    0x15f4d
   15f57:	mov    esi,DWORD PTR [ebp-0x20]
   15f5a:	lea    eax,[edx+eax*1+0xd]
   15f5e:	mov    cl,BYTE PTR [esi]
   15f60:	mov    BYTE PTR [eax],cl
   15f62:	inc    esi
   15f63:	inc    eax
   15f64:	cmp    cl,bl
   15f66:	jne    0x15f5e
   15f68:	push   DWORD PTR [ebp-0x20]
   15f6b:	call   0x10a3a
   15f70:	pop    ecx
   15f71:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   15f78:	jmp    0x15f94
   15f7a:	xor    eax,eax
   15f7c:	inc    eax
   15f7d:	ret    
   15f7e:	mov    esp,DWORD PTR [ebp-0x18]
   15f81:	mov    eax,DWORD PTR [ebp+0xc]
   15f84:	mov    DWORD PTR [eax+0x8],0x4
   15f8b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   15f92:	xor    ebx,ebx
   15f94:	push   ebx
   15f95:	push   0x77558
   15f9a:	call   DWORD PTR ds:0x1f028
   15fa0:	call   0x1dbcd
   15fa5:	ret    0x8
   15fa8:	int3   
   15fa9:	int3   
   15faa:	int3   
   15fab:	int3   
   15fac:	int3   
   15fad:	int3   
   15fae:	push   0xc
   15fb0:	push   0x77208
   15fb5:	call   0x1db88
   15fba:	xor    edi,edi
   15fbc:	push   edi
   15fbd:	push   edi
   15fbe:	push   edi
   15fbf:	push   edi
   15fc0:	push   0x77558
   15fc5:	call   DWORD PTR ds:0x1f02c
   15fcb:	cmp    eax,edi
   15fcd:	jl     0x1607c
   15fd3:	mov    DWORD PTR [ebp-0x4],edi
   15fd6:	lea    eax,[ebp+0x8]
   15fd9:	push   eax
   15fda:	lea    eax,[ebp-0x1c]
   15fdd:	push   eax
   15fde:	mov    esi,DWORD PTR ds:0x775b4
   15fe4:	mov    ecx,esi
   15fe6:	call   0x13cc0
   15feb:	mov    esi,DWORD PTR [esi+0x4]
   15fee:	mov    ecx,DWORD PTR [ebp-0x1c]
   15ff1:	cmp    ecx,esi
   15ff3:	jne    0x16001
   15ff5:	mov    eax,DWORD PTR [ebp+0xc]
   15ff8:	mov    DWORD PTR [eax+0x8],0x1
   15fff:	jmp    0x1604d
   16001:	mov    eax,DWORD PTR [ecx+0x10]
   16004:	cmp    eax,edi
   16006:	jne    0x1600c
   16008:	xor    edx,edx
   1600a:	jmp    0x1600f
   1600c:	mov    edx,DWORD PTR [eax+0x8]
   1600f:	mov    eax,DWORD PTR [ebp+0xc]
   16012:	cmp    edx,DWORD PTR [eax]
   16014:	jbe    0x16021
   16016:	mov    DWORD PTR [eax],edx
   16018:	mov    DWORD PTR [eax+0x8],0x2
   1601f:	jmp    0x1604d
   16021:	mov    DWORD PTR [eax+0x8],edi
   16024:	mov    edx,DWORD PTR [ecx+0x10]
   16027:	cmp    edx,edi
   16029:	jne    0x1602f
   1602b:	xor    edx,edx
   1602d:	jmp    0x16032
   1602f:	mov    edx,DWORD PTR [edx+0x8]
   16032:	mov    ecx,DWORD PTR [ecx+0x10]
   16035:	cmp    ecx,edi
   16037:	jne    0x1603d
   16039:	xor    ecx,ecx
   1603b:	jmp    0x1603f
   1603d:	mov    ecx,DWORD PTR [ecx]
   1603f:	push   edx
   16040:	push   ecx
   16041:	add    eax,0xc
   16044:	push   eax
   16045:	call   0x1db58
   1604a:	add    esp,0xc
   1604d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   16054:	jmp    0x16070
   16056:	xor    eax,eax
   16058:	inc    eax
   16059:	ret    
   1605a:	mov    esp,DWORD PTR [ebp-0x18]
   1605d:	mov    eax,DWORD PTR [ebp+0xc]
   16060:	mov    DWORD PTR [eax+0x8],0x4
   16067:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1606e:	xor    edi,edi
   16070:	push   edi
   16071:	push   0x77558
   16076:	call   DWORD PTR ds:0x1f028
   1607c:	call   0x1dbcd
   16081:	ret    0x8
   16084:	int3   
   16085:	int3   
   16086:	int3   
   16087:	int3   
   16088:	int3   
   16089:	int3   
   1608a:	mov    edi,edi
   1608c:	push   ebp
   1608d:	mov    ebp,esp
   1608f:	push   ebx
   16090:	push   esi
   16091:	push   DWORD PTR [ebp+0x8]
   16094:	mov    esi,ecx
   16096:	lea    eax,[ebp+0x8]
   16099:	push   eax
   1609a:	lea    ecx,[esi+0x4]
   1609d:	xor    bl,bl
   1609f:	call   0x13d22
   160a4:	mov    eax,DWORD PTR [ebp+0x8]
   160a7:	cmp    eax,DWORD PTR [esi+0x8]
   160aa:	je     0x160ba
   160ac:	mov    ecx,DWORD PTR [ebp+0xc]
   160af:	add    eax,0x18
   160b2:	push   eax
   160b3:	call   0x12ad2
   160b8:	inc    bl
   160ba:	pop    esi
   160bb:	mov    al,bl
   160bd:	pop    ebx
   160be:	pop    ebp
   160bf:	ret    0x8
   160c2:	int3   
   160c3:	int3   
   160c4:	int3   
   160c5:	int3   
   160c6:	int3   
   160c7:	int3   
   160c8:	mov    edi,edi
   160ca:	push   ebp
   160cb:	mov    ebp,esp
   160cd:	push   ecx
   160ce:	push   ecx
   160cf:	push   DWORD PTR [ebp+0xc]
   160d2:	lea    eax,[ebp-0x8]
   160d5:	push   eax
   160d6:	call   0x14cc6
   160db:	mov    eax,DWORD PTR [ebp+0x8]
   160de:	mov    ecx,DWORD PTR [ebp-0x8]
   160e1:	mov    DWORD PTR [eax],ecx
   160e3:	mov    cl,BYTE PTR [ebp-0x4]
   160e6:	mov    BYTE PTR [eax+0x4],cl
   160e9:	leave  
   160ea:	ret    0x8
   160ed:	int3   
   160ee:	int3   
   160ef:	int3   
   160f0:	int3   
   160f1:	int3   
   160f2:	mov    edi,edi
   160f4:	push   ebp
   160f5:	mov    ebp,esp
   160f7:	push   ecx
   160f8:	push   esi
   160f9:	mov    esi,ecx
   160fb:	mov    eax,DWORD PTR [esi+0x4]
   160fe:	mov    ecx,DWORD PTR [eax]
   16100:	push   eax
   16101:	push   ecx
   16102:	lea    eax,[ebp-0x4]
   16105:	push   eax
   16106:	mov    ecx,esi
   16108:	call   0x14d5e
   1610d:	push   DWORD PTR [esi+0x4]
   16110:	call   0x10a3a
   16115:	xor    eax,eax
   16117:	mov    DWORD PTR [esi+0x4],eax
   1611a:	mov    DWORD PTR [esi+0xc],eax
   1611d:	dec    DWORD PTR ds:0x78a18
   16123:	pop    ecx
   16124:	pop    esi
   16125:	jne    0x1613d
   16127:	mov    ecx,DWORD PTR ds:0x788b4
   1612d:	mov    ds:0x788b4,eax
   16132:	cmp    ecx,eax
   16134:	je     0x1613d
   16136:	push   ecx
   16137:	call   0x10a3a
   1613c:	pop    ecx
   1613d:	leave  
   1613e:	ret    
   1613f:	int3   
   16140:	int3   
   16141:	int3   
   16142:	int3   
   16143:	int3   
   16144:	mov    edi,edi
   16146:	push   ebp
   16147:	mov    ebp,esp
   16149:	push   ecx
   1614a:	push   ecx
   1614b:	push   DWORD PTR [ebp+0xc]
   1614e:	lea    eax,[ebp-0x8]
   16151:	push   eax
   16152:	call   0x14e26
   16157:	mov    eax,DWORD PTR [ebp+0x8]
   1615a:	mov    ecx,DWORD PTR [ebp-0x8]
   1615d:	mov    DWORD PTR [eax],ecx
   1615f:	mov    cl,BYTE PTR [ebp-0x4]
   16162:	mov    BYTE PTR [eax+0x4],cl
   16165:	leave  
   16166:	ret    0x8
   16169:	int3   
   1616a:	int3   
   1616b:	int3   
   1616c:	int3   
   1616d:	int3   
   1616e:	mov    edi,edi
   16170:	push   ebp
   16171:	mov    ebp,esp
   16173:	push   ecx
   16174:	push   ecx
   16175:	push   DWORD PTR [ebp+0x8]
   16178:	lea    eax,[ebp-0x8]
   1617b:	push   eax
   1617c:	call   0x14056
   16181:	and    DWORD PTR [ebp+0x8],0x0
   16185:	lea    eax,[ebp+0x8]
   16188:	push   eax
   16189:	push   DWORD PTR [ebp-0x4]
   1618c:	push   DWORD PTR [ebp-0x8]
   1618f:	call   0x15de8
   16194:	mov    eax,DWORD PTR [ebp+0x8]
   16197:	add    esp,0xc
   1619a:	leave  
   1619b:	ret    0x4
   1619e:	int3   
   1619f:	int3   
   161a0:	int3   
   161a1:	int3   
   161a2:	int3   
   161a3:	int3   
   161a4:	mov    edi,edi
   161a6:	push   ebp
   161a7:	mov    ebp,esp
   161a9:	push   ecx
   161aa:	push   ecx
   161ab:	push   esi
   161ac:	push   DWORD PTR [ebp+0x8]
   161af:	lea    eax,[ebp-0x8]
   161b2:	push   eax
   161b3:	mov    esi,ecx
   161b5:	call   0x140ea
   161ba:	and    DWORD PTR [ebp+0x8],0x0
   161be:	lea    eax,[ebp+0x8]
   161c1:	push   eax
   161c2:	push   DWORD PTR [ebp-0x4]
   161c5:	push   DWORD PTR [ebp-0x8]
   161c8:	call   0x13a52
   161cd:	add    esp,0xc
   161d0:	push   DWORD PTR [ebp-0x4]
   161d3:	lea    eax,[ebp-0x4]
   161d6:	push   DWORD PTR [ebp-0x8]
   161d9:	mov    ecx,esi
   161db:	push   eax
   161dc:	call   0x14ebe
   161e1:	mov    eax,DWORD PTR [ebp+0x8]
   161e4:	pop    esi
   161e5:	leave  
   161e6:	ret    0x4
   161e9:	int3   
   161ea:	int3   
   161eb:	int3   
   161ec:	int3   
   161ed:	int3   
   161ee:	mov    edi,edi
   161f0:	push   ebp
   161f1:	mov    ebp,esp
   161f3:	push   ecx
   161f4:	push   ebx
   161f5:	push   esi
   161f6:	push   edi
   161f7:	mov    edi,ecx
   161f9:	mov    eax,DWORD PTR [edi+0x4]
   161fc:	mov    esi,DWORD PTR [eax+0x4]
   161ff:	mov    ebx,eax
   16201:	mov    al,0x1
   16203:	jmp    0x1621e
   16205:	lea    eax,[esi+0x10]
   16208:	push   eax
   16209:	push   DWORD PTR [ebp+0xc]
   1620c:	mov    ebx,esi
   1620e:	call   0x19864
   16213:	test   al,al
   16215:	je     0x1621b
   16217:	mov    esi,DWORD PTR [esi]
   16219:	jmp    0x1621e
   1621b:	mov    esi,DWORD PTR [esi+0x8]
   1621e:	cmp    esi,DWORD PTR ds:0x788b8
   16224:	jne    0x16205
   16226:	cmp    BYTE PTR [edi+0x8],0x0
   1622a:	je     0x16247
   1622c:	push   DWORD PTR [ebp+0xc]
   1622f:	lea    eax,[ebp+0xc]
   16232:	push   ebx
   16233:	push   esi
   16234:	push   eax
   16235:	mov    ecx,edi
   16237:	call   0x151e8
   1623c:	mov    ecx,DWORD PTR [eax]
   1623e:	mov    eax,DWORD PTR [ebp+0x8]
   16241:	mov    BYTE PTR [eax+0x4],0x1
   16245:	jmp    0x1627a
   16247:	mov    DWORD PTR [ebp-0x4],ebx
   1624a:	test   al,al
   1624c:	je     0x1625d
   1624e:	mov    eax,DWORD PTR [edi+0x4]
   16251:	cmp    ebx,DWORD PTR [eax]
   16253:	je     0x1622c
   16255:	lea    ecx,[ebp-0x4]
   16258:	call   0x1159a
   1625d:	push   DWORD PTR [ebp+0xc]
   16260:	mov    eax,DWORD PTR [ebp-0x4]
   16263:	add    eax,0x10
   16266:	push   eax
   16267:	call   0x19864
   1626c:	test   al,al
   1626e:	jne    0x1622c
   16270:	mov    eax,DWORD PTR [ebp+0x8]
   16273:	mov    ecx,DWORD PTR [ebp-0x4]
   16276:	mov    BYTE PTR [eax+0x4],0x0
   1627a:	pop    edi
   1627b:	pop    esi
   1627c:	mov    DWORD PTR [eax],ecx
   1627e:	pop    ebx
   1627f:	leave  
   16280:	ret    0x8
   16283:	int3   
   16284:	int3   
   16285:	int3   
   16286:	int3   
   16287:	int3   
   16288:	mov    edi,edi
   1628a:	push   ebp
   1628b:	mov    ebp,esp
   1628d:	push   ecx
   1628e:	push   esi
   1628f:	mov    esi,ecx
   16291:	cmp    DWORD PTR [esi+0xc],0x0
   16295:	mov    ecx,DWORD PTR [ebp+0xc]
   16298:	je     0x162d2
   1629a:	mov    eax,DWORD PTR [esi+0x4]
   1629d:	cmp    ecx,DWORD PTR [eax]
   1629f:	jne    0x162d2
   162a1:	cmp    DWORD PTR [ebp+0x10],eax
   162a4:	jne    0x162d2
   162a6:	push   DWORD PTR [eax+0x4]
   162a9:	mov    ecx,esi
   162ab:	call   0x1519e
   162b0:	mov    ecx,DWORD PTR ds:0x788b8
   162b6:	mov    eax,DWORD PTR [esi+0x4]
   162b9:	mov    DWORD PTR [eax+0x4],ecx
   162bc:	mov    eax,DWORD PTR [esi+0x4]
   162bf:	and    DWORD PTR [esi+0xc],0x0
   162c3:	mov    DWORD PTR [eax],eax
   162c5:	mov    eax,DWORD PTR [esi+0x4]
   162c8:	mov    DWORD PTR [eax+0x8],eax
   162cb:	mov    eax,DWORD PTR [esi+0x4]
   162ce:	mov    ecx,DWORD PTR [eax]
   162d0:	jmp    0x162f7
   162d2:	cmp    ecx,DWORD PTR [ebp+0x10]
   162d5:	je     0x162f7
   162d7:	push   edi
   162d8:	mov    edi,ecx
   162da:	lea    ecx,[ebp+0xc]
   162dd:	call   0x12f1e
   162e2:	push   edi
   162e3:	lea    eax,[ebp-0x4]
   162e6:	push   eax
   162e7:	mov    ecx,esi
   162e9:	call   0x14f3c
   162ee:	mov    ecx,DWORD PTR [ebp+0xc]
   162f1:	cmp    ecx,DWORD PTR [ebp+0x10]
   162f4:	jne    0x162d8
   162f6:	pop    edi
   162f7:	mov    eax,DWORD PTR [ebp+0x8]
   162fa:	mov    DWORD PTR [eax],ecx
   162fc:	pop    esi
   162fd:	leave  
   162fe:	ret    0xc
   16301:	int3   
   16302:	int3   
   16303:	int3   
   16304:	int3   
   16305:	int3   
   16306:	mov    edi,edi
   16308:	push   ebp
   16309:	mov    ebp,esp
   1630b:	push   ecx
   1630c:	push   ebx
   1630d:	push   esi
   1630e:	push   edi
   1630f:	mov    edi,ecx
   16311:	mov    eax,DWORD PTR [edi+0x4]
   16314:	mov    esi,DWORD PTR [eax+0x4]
   16317:	mov    ebx,eax
   16319:	mov    al,0x1
   1631b:	jmp    0x16336
   1631d:	lea    eax,[esi+0x10]
   16320:	push   eax
   16321:	push   DWORD PTR [ebp+0xc]
   16324:	mov    ebx,esi
   16326:	call   0x19864
   1632b:	test   al,al
   1632d:	je     0x16333
   1632f:	mov    esi,DWORD PTR [esi]
   16331:	jmp    0x16336
   16333:	mov    esi,DWORD PTR [esi+0x8]
   16336:	cmp    esi,DWORD PTR ds:0x788bc
   1633c:	jne    0x1631d
   1633e:	cmp    BYTE PTR [edi+0x8],0x0
   16342:	je     0x1635f
   16344:	push   DWORD PTR [ebp+0xc]
   16347:	lea    eax,[ebp+0xc]
   1634a:	push   ebx
   1634b:	push   esi
   1634c:	push   eax
   1634d:	mov    ecx,edi
   1634f:	call   0x155ea
   16354:	mov    ecx,DWORD PTR [eax]
   16356:	mov    eax,DWORD PTR [ebp+0x8]
   16359:	mov    BYTE PTR [eax+0x4],0x1
   1635d:	jmp    0x16392
   1635f:	mov    DWORD PTR [ebp-0x4],ebx
   16362:	test   al,al
   16364:	je     0x16375
   16366:	mov    eax,DWORD PTR [edi+0x4]
   16369:	cmp    ebx,DWORD PTR [eax]
   1636b:	je     0x16344
   1636d:	lea    ecx,[ebp-0x4]
   16370:	call   0x11452
   16375:	push   DWORD PTR [ebp+0xc]
   16378:	mov    eax,DWORD PTR [ebp-0x4]
   1637b:	add    eax,0x10
   1637e:	push   eax
   1637f:	call   0x19864
   16384:	test   al,al
   16386:	jne    0x16344
   16388:	mov    eax,DWORD PTR [ebp+0x8]
   1638b:	mov    ecx,DWORD PTR [ebp-0x4]
   1638e:	mov    BYTE PTR [eax+0x4],0x0
   16392:	pop    edi
   16393:	pop    esi
   16394:	mov    DWORD PTR [eax],ecx
   16396:	pop    ebx
   16397:	leave  
   16398:	ret    0x8
   1639b:	int3   
   1639c:	int3   
   1639d:	int3   
   1639e:	int3   
   1639f:	int3   
   163a0:	mov    edi,edi
   163a2:	push   ebp
   163a3:	mov    ebp,esp
   163a5:	push   ecx
   163a6:	push   esi
   163a7:	mov    esi,ecx
   163a9:	cmp    DWORD PTR [esi+0xc],0x0
   163ad:	mov    ecx,DWORD PTR [ebp+0xc]
   163b0:	je     0x163ea
   163b2:	mov    eax,DWORD PTR [esi+0x4]
   163b5:	cmp    ecx,DWORD PTR [eax]
   163b7:	jne    0x163ea
   163b9:	cmp    DWORD PTR [ebp+0x10],eax
   163bc:	jne    0x163ea
   163be:	push   DWORD PTR [eax+0x4]
   163c1:	mov    ecx,esi
   163c3:	call   0x155a0
   163c8:	mov    ecx,DWORD PTR ds:0x788bc
   163ce:	mov    eax,DWORD PTR [esi+0x4]
   163d1:	mov    DWORD PTR [eax+0x4],ecx
   163d4:	mov    eax,DWORD PTR [esi+0x4]
   163d7:	and    DWORD PTR [esi+0xc],0x0
   163db:	mov    DWORD PTR [eax],eax
   163dd:	mov    eax,DWORD PTR [esi+0x4]
   163e0:	mov    DWORD PTR [eax+0x8],eax
   163e3:	mov    eax,DWORD PTR [esi+0x4]
   163e6:	mov    ecx,DWORD PTR [eax]
   163e8:	jmp    0x1640f
   163ea:	cmp    ecx,DWORD PTR [ebp+0x10]
   163ed:	je     0x1640f
   163ef:	push   edi
   163f0:	mov    edi,ecx
   163f2:	lea    ecx,[ebp+0xc]
   163f5:	call   0x13896
   163fa:	push   edi
   163fb:	lea    eax,[ebp-0x4]
   163fe:	push   eax
   163ff:	mov    ecx,esi
   16401:	call   0x1533e
   16406:	mov    ecx,DWORD PTR [ebp+0xc]
   16409:	cmp    ecx,DWORD PTR [ebp+0x10]
   1640c:	jne    0x163f0
   1640e:	pop    edi
   1640f:	mov    eax,DWORD PTR [ebp+0x8]
   16412:	mov    DWORD PTR [eax],ecx
   16414:	pop    esi
   16415:	leave  
   16416:	ret    0xc
   16419:	int3   
   1641a:	int3   
   1641b:	int3   
   1641c:	int3   
   1641d:	int3   
   1641e:	mov    edi,edi
   16420:	push   ebp
   16421:	mov    ebp,esp
   16423:	push   ecx
   16424:	push   ebx
   16425:	push   esi
   16426:	push   edi
   16427:	mov    edi,ecx
   16429:	mov    eax,DWORD PTR [edi+0x4]
   1642c:	mov    esi,DWORD PTR [eax+0x4]
   1642f:	mov    ebx,eax
   16431:	mov    al,0x1
   16433:	jmp    0x1644e
   16435:	lea    eax,[esi+0xc]
   16438:	push   eax
   16439:	push   DWORD PTR [ebp+0xc]
   1643c:	mov    ebx,esi
   1643e:	call   0x19864
   16443:	test   al,al
   16445:	je     0x1644b
   16447:	mov    esi,DWORD PTR [esi]
   16449:	jmp    0x1644e
   1644b:	mov    esi,DWORD PTR [esi+0x8]
   1644e:	cmp    esi,DWORD PTR ds:0x788c0
   16454:	jne    0x16435
   16456:	cmp    BYTE PTR [edi+0x8],0x0
   1645a:	je     0x16477
   1645c:	push   DWORD PTR [ebp+0xc]
   1645f:	lea    eax,[ebp+0xc]
   16462:	push   ebx
   16463:	push   esi
   16464:	push   eax
   16465:	mov    ecx,edi
   16467:	call   0x15740
   1646c:	mov    ecx,DWORD PTR [eax]
   1646e:	mov    eax,DWORD PTR [ebp+0x8]
   16471:	mov    BYTE PTR [eax+0x4],0x1
   16475:	jmp    0x164aa
   16477:	mov    DWORD PTR [ebp-0x4],ebx
   1647a:	test   al,al
   1647c:	je     0x1648d
   1647e:	mov    eax,DWORD PTR [edi+0x4]
   16481:	cmp    ebx,DWORD PTR [eax]
   16483:	je     0x1645c
   16485:	lea    ecx,[ebp-0x4]
   16488:	call   0x114d6
   1648d:	push   DWORD PTR [ebp+0xc]
   16490:	mov    eax,DWORD PTR [ebp-0x4]
   16493:	add    eax,0xc
   16496:	push   eax
   16497:	call   0x19864
   1649c:	test   al,al
   1649e:	jne    0x1645c
   164a0:	mov    eax,DWORD PTR [ebp+0x8]
   164a3:	mov    ecx,DWORD PTR [ebp-0x4]
   164a6:	mov    BYTE PTR [eax+0x4],0x0
   164aa:	pop    edi
   164ab:	pop    esi
   164ac:	mov    DWORD PTR [eax],ecx
   164ae:	pop    ebx
   164af:	leave  
   164b0:	ret    0x8
   164b3:	int3   
   164b4:	int3   
   164b5:	int3   
   164b6:	int3   
   164b7:	int3   
   164b8:	mov    edi,edi
   164ba:	push   ebp
   164bb:	mov    ebp,esp
   164bd:	push   ecx
   164be:	push   ebx
   164bf:	push   esi
   164c0:	push   edi
   164c1:	mov    edi,ecx
   164c3:	mov    eax,DWORD PTR [edi+0x4]
   164c6:	mov    esi,DWORD PTR [eax+0x4]
   164c9:	mov    ebx,eax
   164cb:	mov    eax,ds:0x788c4
   164d0:	mov    dl,0x1
   164d2:	cmp    esi,eax
   164d4:	je     0x164f2
   164d6:	mov    ecx,DWORD PTR [ebp+0xc]
   164d9:	mov    ecx,DWORD PTR [ecx]
   164db:	cmp    ecx,DWORD PTR [esi+0xc]
   164de:	mov    ebx,esi
   164e0:	setl   dl
   164e3:	test   dl,dl
   164e5:	je     0x164eb
   164e7:	mov    esi,DWORD PTR [esi]
   164e9:	jmp    0x164ee
   164eb:	mov    esi,DWORD PTR [esi+0x8]
   164ee:	cmp    esi,eax
   164f0:	jne    0x164db
   164f2:	cmp    BYTE PTR [edi+0x8],0x0
   164f6:	je     0x16513
   164f8:	push   DWORD PTR [ebp+0xc]
   164fb:	push   ebx
   164fc:	push   esi
   164fd:	lea    eax,[ebp+0xc]
   16500:	push   eax
   16501:	mov    ecx,edi
   16503:	call   0x15b42
   16508:	mov    ecx,DWORD PTR [eax]
   1650a:	mov    eax,DWORD PTR [ebp+0x8]
   1650d:	mov    BYTE PTR [eax+0x4],0x1
   16511:	jmp    0x16542
   16513:	mov    ecx,ebx
   16515:	mov    DWORD PTR [ebp-0x4],ecx
   16518:	test   dl,dl
   1651a:	je     0x1652e
   1651c:	mov    eax,DWORD PTR [edi+0x4]
   1651f:	cmp    ebx,DWORD PTR [eax]
   16521:	je     0x164f8
   16523:	lea    ecx,[ebp-0x4]
   16526:	call   0x1155a
   1652b:	mov    ecx,DWORD PTR [ebp-0x4]
   1652e:	mov    edx,DWORD PTR [ecx+0xc]
   16531:	mov    eax,DWORD PTR [ebp+0xc]
   16534:	cmp    edx,DWORD PTR [eax]
   16536:	jge    0x1653b
   16538:	push   eax
   16539:	jmp    0x164fb
   1653b:	mov    eax,DWORD PTR [ebp+0x8]
   1653e:	mov    BYTE PTR [eax+0x4],0x0
   16542:	pop    edi
   16543:	pop    esi
   16544:	mov    DWORD PTR [eax],ecx
   16546:	pop    ebx
   16547:	leave  
   16548:	ret    0x8
   1654b:	int3   
   1654c:	int3   
   1654d:	int3   
   1654e:	int3   
   1654f:	int3   
   16550:	mov    edi,edi
   16552:	push   ebp
   16553:	mov    ebp,esp
   16555:	push   ecx
   16556:	push   esi
   16557:	mov    esi,ecx
   16559:	cmp    DWORD PTR [esi+0xc],0x0
   1655d:	mov    ecx,DWORD PTR [ebp+0xc]
   16560:	je     0x1659a
   16562:	mov    eax,DWORD PTR [esi+0x4]
   16565:	cmp    ecx,DWORD PTR [eax]
   16567:	jne    0x1659a
   16569:	cmp    DWORD PTR [ebp+0x10],eax
   1656c:	jne    0x1659a
   1656e:	push   DWORD PTR [eax+0x4]
   16571:	mov    ecx,esi
   16573:	call   0x15af8
   16578:	mov    ecx,DWORD PTR ds:0x788c4
   1657e:	mov    eax,DWORD PTR [esi+0x4]
   16581:	mov    DWORD PTR [eax+0x4],ecx
   16584:	mov    eax,DWORD PTR [esi+0x4]
   16587:	and    DWORD PTR [esi+0xc],0x0
   1658b:	mov    DWORD PTR [eax],eax
   1658d:	mov    eax,DWORD PTR [esi+0x4]
   16590:	mov    DWORD PTR [eax+0x8],eax
   16593:	mov    eax,DWORD PTR [esi+0x4]
   16596:	mov    ecx,DWORD PTR [eax]
   16598:	jmp    0x165bf
   1659a:	cmp    ecx,DWORD PTR [ebp+0x10]
   1659d:	je     0x165bf
   1659f:	push   edi
   165a0:	mov    edi,ecx
   165a2:	lea    ecx,[ebp+0xc]
   165a5:	call   0x11610
   165aa:	push   edi
   165ab:	lea    eax,[ebp-0x4]
   165ae:	push   eax
   165af:	mov    ecx,esi
   165b1:	call   0x15896
   165b6:	mov    ecx,DWORD PTR [ebp+0xc]
   165b9:	cmp    ecx,DWORD PTR [ebp+0x10]
   165bc:	jne    0x165a0
   165be:	pop    edi
   165bf:	mov    eax,DWORD PTR [ebp+0x8]
   165c2:	mov    DWORD PTR [eax],ecx
   165c4:	pop    esi
   165c5:	leave  
   165c6:	ret    0xc
   165c9:	int3   
   165ca:	int3   
   165cb:	int3   
   165cc:	int3   
   165cd:	int3   
   165ce:	mov    edi,edi
   165d0:	push   ebp
   165d1:	mov    ebp,esp
   165d3:	push   ecx
   165d4:	push   ebx
   165d5:	push   esi
   165d6:	push   edi
   165d7:	mov    edi,ecx
   165d9:	mov    eax,DWORD PTR [edi+0x4]
   165dc:	mov    esi,DWORD PTR [eax+0x4]
   165df:	mov    ebx,eax
   165e1:	mov    al,0x1
   165e3:	jmp    0x165fe
   165e5:	lea    eax,[esi+0xc]
   165e8:	push   eax
   165e9:	push   DWORD PTR [ebp+0xc]
   165ec:	mov    ebx,esi
   165ee:	call   0x19894
   165f3:	test   al,al
   165f5:	je     0x165fb
   165f7:	mov    esi,DWORD PTR [esi]
   165f9:	jmp    0x165fe
   165fb:	mov    esi,DWORD PTR [esi+0x8]
   165fe:	cmp    esi,DWORD PTR ds:0x788cc
   16604:	jne    0x165e5
   16606:	cmp    BYTE PTR [edi+0x8],0x0
   1660a:	je     0x16627
   1660c:	push   DWORD PTR [ebp+0xc]
   1660f:	lea    eax,[ebp+0xc]
   16612:	push   ebx
   16613:	push   esi
   16614:	push   eax
   16615:	mov    ecx,edi
   16617:	call   0x15c92
   1661c:	mov    ecx,DWORD PTR [eax]
   1661e:	mov    eax,DWORD PTR [ebp+0x8]
   16621:	mov    BYTE PTR [eax+0x4],0x1
   16625:	jmp    0x1665a
   16627:	mov    DWORD PTR [ebp-0x4],ebx
   1662a:	test   al,al
   1662c:	je     0x1663d
   1662e:	mov    eax,DWORD PTR [edi+0x4]
   16631:	cmp    ebx,DWORD PTR [eax]
   16633:	je     0x1660c
   16635:	lea    ecx,[ebp-0x4]
   16638:	call   0x13450
   1663d:	push   DWORD PTR [ebp+0xc]
   16640:	mov    eax,DWORD PTR [ebp-0x4]
   16643:	add    eax,0xc
   16646:	push   eax
   16647:	call   0x19894
   1664c:	test   al,al
   1664e:	jne    0x1660c
   16650:	mov    eax,DWORD PTR [ebp+0x8]
   16653:	mov    ecx,DWORD PTR [ebp-0x4]
   16656:	mov    BYTE PTR [eax+0x4],0x0
   1665a:	pop    edi
   1665b:	pop    esi
   1665c:	mov    DWORD PTR [eax],ecx
   1665e:	pop    ebx
   1665f:	leave  
   16660:	ret    0x8
   16663:	int3   
   16664:	int3   
   16665:	int3   
   16666:	int3   
   16667:	int3   
   16668:	mov    edi,edi
   1666a:	push   ebp
   1666b:	mov    ebp,esp
   1666d:	sub    esp,0x10
   16670:	push   DWORD PTR [ebp+0x8]
   16673:	lea    ecx,[ebp-0x10]
   16676:	call   0x15e0a
   1667b:	push   DWORD PTR [ebp+0xc]
   1667e:	mov    ecx,DWORD PTR [ebp+0x8]
   16681:	call   0x15e36
   16686:	mov    ecx,DWORD PTR [ebp+0xc]
   16689:	lea    eax,[ebp-0x10]
   1668c:	push   eax
   1668d:	call   0x15e36
   16692:	lea    ecx,[ebp-0x10]
   16695:	call   0x160f2
   1669a:	leave  
   1669b:	ret    0x8
   1669e:	int3   
   1669f:	int3   
   166a0:	int3   
   166a1:	int3   
   166a2:	int3   
   166a3:	int3   
   166a4:	mov    edi,edi
   166a6:	push   ebp
   166a7:	mov    ebp,esp
   166a9:	push   esi
   166aa:	push   edi
   166ab:	xor    edi,edi
   166ad:	push   edi
   166ae:	push   edi
   166af:	push   edi
   166b0:	mov    esi,ecx
   166b2:	mov    eax,DWORD PTR [esi+0x10]
   166b5:	push   edi
   166b6:	push   eax
   166b7:	call   DWORD PTR ds:0x1f02c
   166bd:	test   eax,eax
   166bf:	jl     0x166d6
   166c1:	lea    eax,[ebp+0x8]
   166c4:	push   eax
   166c5:	mov    ecx,esi
   166c7:	call   0x14c7c
   166cc:	push   edi
   166cd:	push   DWORD PTR [esi+0x10]
   166d0:	call   DWORD PTR ds:0x1f028
   166d6:	pop    edi
   166d7:	pop    esi
   166d8:	pop    ebp
   166d9:	ret    0x4
   166dc:	int3   
   166dd:	int3   
   166de:	int3   
   166df:	int3   
   166e0:	int3   
   166e1:	int3   
   166e2:	mov    edi,edi
   166e4:	push   ebp
   166e5:	mov    ebp,esp
   166e7:	sub    esp,0x40
   166ea:	test   BYTE PTR [ebp+0x8],0x20
   166ee:	je     0x16785
   166f4:	push   ebx
   166f5:	lea    ecx,[ebp-0x40]
   166f8:	call   0x1370e
   166fd:	mov    ecx,DWORD PTR ds:0x77ee8
   16703:	lea    eax,[ebp-0x40]
   16706:	push   eax
   16707:	push   DWORD PTR [ebp+0xc]
   1670a:	call   0x1608a
   1670f:	test   al,al
   16711:	je     0x16781
   16713:	mov    ecx,DWORD PTR [ebp+0x10]
   16716:	lea    eax,[ebp-0x38]
   16719:	push   eax
   1671a:	call   0x12a44
   1671f:	mov    ecx,DWORD PTR [ebp+0x14]
   16722:	lea    eax,[ebp-0x30]
   16725:	push   eax
   16726:	call   0x12a44
   1672b:	mov    ecx,DWORD PTR [ebp+0x18]
   1672e:	lea    eax,[ebp-0x28]
   16731:	push   eax
   16732:	call   0x12a44
   16737:	mov    eax,DWORD PTR [ebp+0x20]
   1673a:	mov    ecx,DWORD PTR [ebp-0x20]
   1673d:	mov    DWORD PTR [eax],ecx
   1673f:	mov    ecx,DWORD PTR [ebp+0x1c]
   16742:	lea    eax,[ebp-0x8]
   16745:	push   eax
   16746:	call   0x12a44
   1674b:	mov    eax,DWORD PTR [ebp+0x28]
   1674e:	mov    ecx,DWORD PTR [ebp-0x18]
   16751:	mov    DWORD PTR [eax],ecx
   16753:	mov    ecx,DWORD PTR [ebp-0x14]
   16756:	mov    DWORD PTR [eax+0x4],ecx
   16759:	mov    eax,DWORD PTR [ebp+0x2c]
   1675c:	mov    ecx,DWORD PTR [ebp-0x10]
   1675f:	mov    DWORD PTR [eax],ecx
   16761:	mov    ecx,DWORD PTR [ebp-0xc]
   16764:	mov    DWORD PTR [eax+0x4],ecx
   16767:	mov    eax,DWORD PTR [ebp+0x24]
   1676a:	mov    ecx,DWORD PTR [ebp-0x1c]
   1676d:	mov    DWORD PTR [eax],ecx
   1676f:	mov    bl,0x1
   16771:	lea    ecx,[ebp-0x40]
   16774:	call   0x11f44
   16779:	mov    al,bl
   1677b:	pop    ebx
   1677c:	jmp    0x16808
   16781:	xor    bl,bl
   16783:	jmp    0x16771
   16785:	mov    ecx,DWORD PTR ds:0x77ee0
   1678b:	push   esi
   1678c:	push   DWORD PTR [ebp+0xc]
   1678f:	lea    eax,[ebp+0xc]
   16792:	push   eax
   16793:	call   0x13c30
   16798:	mov    esi,DWORD PTR [ebp+0xc]
   1679b:	mov    eax,ds:0x77ee0
   167a0:	cmp    esi,DWORD PTR [eax+0x4]
   167a3:	jne    0x167a9
   167a5:	xor    al,al
   167a7:	jmp    0x16807
   167a9:	mov    ecx,DWORD PTR [ebp+0x10]
   167ac:	lea    eax,[esi+0x20]
   167af:	push   eax
   167b0:	call   0x12a44
   167b5:	mov    ecx,DWORD PTR [ebp+0x14]
   167b8:	lea    eax,[esi+0x28]
   167bb:	push   eax
   167bc:	call   0x12a44
   167c1:	mov    ecx,DWORD PTR [ebp+0x18]
   167c4:	lea    eax,[esi+0x30]
   167c7:	push   eax
   167c8:	call   0x12a44
   167cd:	mov    ecx,DWORD PTR [ebp+0x1c]
   167d0:	lea    eax,[esi+0x50]
   167d3:	push   eax
   167d4:	call   0x12a44
   167d9:	mov    eax,DWORD PTR [esi+0x38]
   167dc:	mov    ecx,DWORD PTR [ebp+0x20]
   167df:	mov    DWORD PTR [ecx],eax
   167e1:	mov    ecx,DWORD PTR [esi+0x40]
   167e4:	mov    eax,DWORD PTR [ebp+0x28]
   167e7:	mov    DWORD PTR [eax],ecx
   167e9:	mov    ecx,DWORD PTR [esi+0x44]
   167ec:	mov    DWORD PTR [eax+0x4],ecx
   167ef:	mov    ecx,DWORD PTR [esi+0x48]
   167f2:	mov    eax,DWORD PTR [ebp+0x2c]
   167f5:	mov    DWORD PTR [eax],ecx
   167f7:	mov    ecx,DWORD PTR [esi+0x4c]
   167fa:	mov    DWORD PTR [eax+0x4],ecx
   167fd:	mov    eax,DWORD PTR [esi+0x3c]
   16800:	mov    ecx,DWORD PTR [ebp+0x24]
   16803:	mov    DWORD PTR [ecx],eax
   16805:	mov    al,0x1
   16807:	pop    esi
   16808:	leave  
   16809:	ret    0x28
   1680c:	int3   
   1680d:	int3   
   1680e:	int3   
   1680f:	int3   
   16810:	int3   
   16811:	int3   
   16812:	push   0x44
   16814:	push   0x77228
   16819:	call   0x1db88
   1681e:	xor    esi,esi
   16820:	push   esi
   16821:	push   esi
   16822:	push   esi
   16823:	push   esi
   16824:	push   0x77558
   16829:	call   DWORD PTR ds:0x1f02c
   1682f:	cmp    eax,esi
   16831:	jl     0x169b3
   16837:	mov    DWORD PTR [ebp-0x4],esi
   1683a:	or     edi,0xffffffff
   1683d:	push   edi
   1683e:	mov    esi,0x1df98
   16843:	push   esi
   16844:	lea    ecx,[ebp-0x44]
   16847:	call   0x11140
   1684c:	push   edi
   1684d:	push   esi
   1684e:	lea    ecx,[ebp-0x3c]
   16851:	call   0x11140
   16856:	push   edi
   16857:	push   esi
   16858:	lea    ecx,[ebp-0x34]
   1685b:	call   0x11140
   16860:	push   edi
   16861:	push   esi
   16862:	lea    ecx,[ebp-0x2c]
   16865:	call   0x11140
   1686a:	lea    eax,[ebp-0x54]
   1686d:	push   eax
   1686e:	lea    eax,[ebp-0x4c]
   16871:	push   eax
   16872:	lea    eax,[ebp-0x20]
   16875:	push   eax
   16876:	lea    eax,[ebp-0x1c]
   16879:	push   eax
   1687a:	lea    eax,[ebp-0x2c]
   1687d:	push   eax
   1687e:	lea    eax,[ebp-0x34]
   16881:	push   eax
   16882:	lea    eax,[ebp-0x3c]
   16885:	push   eax
   16886:	lea    eax,[ebp-0x44]
   16889:	push   eax
   1688a:	mov    edi,DWORD PTR [ebp+0x8]
   1688d:	push   edi
   1688e:	mov    esi,DWORD PTR [ebp+0xc]
   16891:	push   DWORD PTR [esi+0x4]
   16894:	call   0x166e2
   16899:	test   al,al
   1689b:	jne    0x168a9
   1689d:	mov    DWORD PTR [esi+0x8],0x1
   168a4:	jmp    0x16969
   168a9:	mov    ecx,DWORD PTR [edi+0x4]
   168ac:	mov    eax,DWORD PTR [ebp-0x40]
   168af:	lea    edx,[eax+ecx*1+0x2]
   168b3:	mov    eax,DWORD PTR [ebp-0x38]
   168b6:	lea    edi,[eax+edx*1+0x1]
   168ba:	mov    eax,DWORD PTR [ebp-0x30]
   168bd:	lea    eax,[eax+edi*1+0x1]
   168c1:	mov    DWORD PTR [ebp-0x24],eax
   168c4:	mov    ebx,DWORD PTR [ebp-0x28]
   168c7:	lea    eax,[ebx+eax*1+0x1]
   168cb:	cmp    eax,DWORD PTR [esi]
   168cd:	jbe    0x168dd
   168cf:	mov    DWORD PTR [esi],eax
   168d1:	mov    DWORD PTR [esi+0x8],0x2
   168d8:	jmp    0x16969
   168dd:	and    DWORD PTR [esi+0x8],0x0
   168e1:	mov    eax,DWORD PTR [ebp-0x1c]
   168e4:	mov    DWORD PTR [esi+0xc],eax
   168e7:	mov    eax,DWORD PTR [ebp-0x4c]
   168ea:	mov    DWORD PTR [esi+0x18],eax
   168ed:	mov    eax,DWORD PTR [ebp-0x48]
   168f0:	mov    DWORD PTR [esi+0x1c],eax
   168f3:	mov    eax,DWORD PTR [ebp-0x54]
   168f6:	mov    DWORD PTR [esi+0x20],eax
   168f9:	mov    eax,DWORD PTR [ebp-0x50]
   168fc:	mov    DWORD PTR [esi+0x24],eax
   168ff:	mov    eax,DWORD PTR [ebp-0x20]
   16902:	mov    DWORD PTR [esi+0x10],eax
   16905:	mov    eax,DWORD PTR [ebp+0x8]
   16908:	mov    eax,DWORD PTR [eax]
   1690a:	mov    DWORD PTR [ebp-0x1c],eax
   1690d:	lea    eax,[esi+0x28]
   16910:	mov    ebx,DWORD PTR [ebp-0x1c]
   16913:	mov    bl,BYTE PTR [ebx]
   16915:	mov    BYTE PTR [ebp+0xb],bl
   16918:	mov    BYTE PTR [eax],bl
   1691a:	inc    DWORD PTR [ebp-0x1c]
   1691d:	inc    eax
   1691e:	test   bl,bl
   16920:	jne    0x16910
   16922:	mov    ebx,DWORD PTR [ebp-0x44]
   16925:	lea    ecx,[ecx+esi*1+0x29]
   16929:	mov    al,BYTE PTR [ebx]
   1692b:	mov    BYTE PTR [ecx],al
   1692d:	inc    ebx
   1692e:	inc    ecx
   1692f:	test   al,al
   16931:	jne    0x16929
   16933:	mov    ecx,DWORD PTR [ebp-0x3c]
   16936:	lea    edx,[edx+esi*1+0x28]
   1693a:	mov    al,BYTE PTR [ecx]
   1693c:	mov    BYTE PTR [edx],al
   1693e:	inc    ecx
   1693f:	inc    edx
   16940:	test   al,al
   16942:	jne    0x1693a
   16944:	mov    ecx,DWORD PTR [ebp-0x34]
   16947:	lea    edi,[edi+esi*1+0x28]
   1694b:	mov    al,BYTE PTR [ecx]
   1694d:	mov    BYTE PTR [edi],al
   1694f:	inc    ecx
   16950:	inc    edi
   16951:	test   al,al
   16953:	jne    0x1694b
   16955:	mov    ecx,DWORD PTR [ebp-0x2c]
   16958:	mov    eax,DWORD PTR [ebp-0x24]
   1695b:	lea    esi,[eax+esi*1+0x28]
   1695f:	mov    al,BYTE PTR [ecx]
   16961:	mov    BYTE PTR [esi],al
   16963:	inc    ecx
   16964:	inc    esi
   16965:	test   al,al
   16967:	jne    0x1695f
   16969:	push   DWORD PTR [ebp-0x2c]
   1696c:	call   0x10a3a
   16971:	push   DWORD PTR [ebp-0x34]
   16974:	call   0x10a3a
   16979:	push   DWORD PTR [ebp-0x3c]
   1697c:	call   0x10a3a
   16981:	push   DWORD PTR [ebp-0x44]
   16984:	call   0x10a3a
   16989:	add    esp,0x10
   1698c:	jmp    0x1699f
   1698e:	xor    eax,eax
   16990:	inc    eax
   16991:	ret    
   16992:	mov    esp,DWORD PTR [ebp-0x18]
   16995:	mov    eax,DWORD PTR [ebp+0xc]
   16998:	mov    DWORD PTR [eax+0x8],0x4
   1699f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   169a6:	push   0x0
   169a8:	push   0x77558
   169ad:	call   DWORD PTR ds:0x1f028
   169b3:	call   0x1dbcd
   169b8:	ret    0x8
   169bb:	int3   
   169bc:	int3   
   169bd:	int3   
   169be:	int3   
   169bf:	int3   
   169c0:	mov    edi,edi
   169c2:	push   ebp
   169c3:	mov    ebp,esp
   169c5:	sub    esp,0x10
   169c8:	mov    eax,DWORD PTR [ebp+0x8]
   169cb:	mov    eax,DWORD PTR [eax]
   169cd:	and    DWORD PTR [ebp-0x4],0x0
   169d1:	mov    DWORD PTR [ebp-0x8],eax
   169d4:	lea    eax,[ebp-0x8]
   169d7:	push   eax
   169d8:	lea    eax,[ebp-0x10]
   169db:	push   eax
   169dc:	call   0x16144
   169e1:	mov    eax,DWORD PTR [eax]
   169e3:	add    eax,0x10
   169e6:	leave  
   169e7:	ret    0x4
   169ea:	int3   
   169eb:	int3   
   169ec:	int3   
   169ed:	int3   
   169ee:	int3   
   169ef:	int3   
   169f0:	mov    edi,edi
   169f2:	push   esi
   169f3:	mov    esi,ecx
   169f5:	mov    BYTE PTR [esi+0x8],0x0
   169f9:	call   0x1411c
   169fe:	mov    eax,esi
   16a00:	pop    esi
   16a01:	ret    0x8
   16a04:	int3   
   16a05:	int3   
   16a06:	int3   
   16a07:	int3   
   16a08:	int3   
   16a09:	int3   
   16a0a:	mov    edi,edi
   16a0c:	push   ebp
   16a0d:	mov    ebp,esp
   16a0f:	push   ecx
   16a10:	push   ecx
   16a11:	push   DWORD PTR [ebp+0xc]
   16a14:	lea    eax,[ebp-0x8]
   16a17:	push   eax
   16a18:	call   0x161ee
   16a1d:	mov    eax,DWORD PTR [ebp+0x8]
   16a20:	mov    ecx,DWORD PTR [ebp-0x8]
   16a23:	mov    DWORD PTR [eax],ecx
   16a25:	mov    cl,BYTE PTR [ebp-0x4]
   16a28:	mov    BYTE PTR [eax+0x4],cl
   16a2b:	leave  
   16a2c:	ret    0x8
   16a2f:	int3   
   16a30:	int3   
   16a31:	int3   
   16a32:	int3   
   16a33:	int3   
   16a34:	mov    edi,edi
   16a36:	push   ebp
   16a37:	mov    ebp,esp
   16a39:	push   ecx
   16a3a:	push   esi
   16a3b:	mov    esi,ecx
   16a3d:	mov    eax,DWORD PTR [esi+0x4]
   16a40:	mov    ecx,DWORD PTR [eax]
   16a42:	push   eax
   16a43:	push   ecx
   16a44:	lea    eax,[ebp-0x4]
   16a47:	push   eax
   16a48:	mov    ecx,esi
   16a4a:	call   0x16288
   16a4f:	push   DWORD PTR [esi+0x4]
   16a52:	call   0x10a3a
   16a57:	xor    eax,eax
   16a59:	mov    DWORD PTR [esi+0x4],eax
   16a5c:	mov    DWORD PTR [esi+0xc],eax
   16a5f:	dec    DWORD PTR ds:0x78a1c
   16a65:	pop    ecx
   16a66:	pop    esi
   16a67:	jne    0x16a7f
   16a69:	mov    ecx,DWORD PTR ds:0x788b8
   16a6f:	mov    ds:0x788b8,eax
   16a74:	cmp    ecx,eax
   16a76:	je     0x16a7f
   16a78:	push   ecx
   16a79:	call   0x10a3a
   16a7e:	pop    ecx
   16a7f:	leave  
   16a80:	ret    
   16a81:	int3   
   16a82:	int3   
   16a83:	int3   
   16a84:	int3   
   16a85:	int3   
   16a86:	mov    edi,edi
   16a88:	push   ebp
   16a89:	mov    ebp,esp
   16a8b:	push   ecx
   16a8c:	push   ecx
   16a8d:	push   DWORD PTR [ebp+0xc]
   16a90:	lea    eax,[ebp-0x8]
   16a93:	push   eax
   16a94:	call   0x16306
   16a99:	mov    eax,DWORD PTR [ebp+0x8]
   16a9c:	mov    ecx,DWORD PTR [ebp-0x8]
   16a9f:	mov    DWORD PTR [eax],ecx
   16aa1:	mov    cl,BYTE PTR [ebp-0x4]
   16aa4:	mov    BYTE PTR [eax+0x4],cl
   16aa7:	leave  
   16aa8:	ret    0x8
   16aab:	int3   
   16aac:	int3   
   16aad:	int3   
   16aae:	int3   
   16aaf:	int3   
   16ab0:	mov    edi,edi
   16ab2:	push   ebp
   16ab3:	mov    ebp,esp
   16ab5:	push   ecx
   16ab6:	mov    eax,DWORD PTR [ecx+0x4]
   16ab9:	mov    edx,DWORD PTR [eax]
   16abb:	push   eax
   16abc:	push   edx
   16abd:	lea    eax,[ebp-0x4]
   16ac0:	push   eax
   16ac1:	call   0x163a0
   16ac6:	leave  
   16ac7:	ret    
   16ac8:	int3   
   16ac9:	int3   
   16aca:	int3   
   16acb:	int3   
   16acc:	int3   
   16acd:	int3   
   16ace:	mov    edi,edi
   16ad0:	push   ebp
   16ad1:	mov    ebp,esp
   16ad3:	push   ecx
   16ad4:	push   ecx
   16ad5:	push   DWORD PTR [ebp+0xc]
   16ad8:	lea    eax,[ebp-0x8]
   16adb:	push   eax
   16adc:	call   0x1641e
   16ae1:	mov    eax,DWORD PTR [ebp+0x8]
   16ae4:	mov    ecx,DWORD PTR [ebp-0x8]
   16ae7:	mov    DWORD PTR [eax],ecx
   16ae9:	mov    cl,BYTE PTR [ebp-0x4]
   16aec:	mov    BYTE PTR [eax+0x4],cl
   16aef:	leave  
   16af0:	ret    0x8
   16af3:	int3   
   16af4:	int3   
   16af5:	int3   
   16af6:	int3   
   16af7:	int3   
   16af8:	mov    edi,edi
   16afa:	push   ebp
   16afb:	mov    ebp,esp
   16afd:	push   ecx
   16afe:	push   ecx
   16aff:	push   DWORD PTR [ebp+0xc]
   16b02:	lea    eax,[ebp-0x8]
   16b05:	push   eax
   16b06:	call   0x164b8
   16b0b:	mov    eax,DWORD PTR [ebp+0x8]
   16b0e:	mov    ecx,DWORD PTR [ebp-0x8]
   16b11:	mov    DWORD PTR [eax],ecx
   16b13:	mov    cl,BYTE PTR [ebp-0x4]
   16b16:	mov    BYTE PTR [eax+0x4],cl
   16b19:	leave  
   16b1a:	ret    0x8
   16b1d:	int3   
   16b1e:	int3   
   16b1f:	int3   
   16b20:	int3   
   16b21:	int3   
   16b22:	mov    edi,edi
   16b24:	push   ebp
   16b25:	mov    ebp,esp
   16b27:	push   ecx
   16b28:	push   ecx
   16b29:	push   esi
   16b2a:	push   DWORD PTR [ebp+0x8]
   16b2d:	lea    eax,[ebp-0x8]
   16b30:	push   eax
   16b31:	mov    esi,ecx
   16b33:	call   0x1417e
   16b38:	and    DWORD PTR [ebp+0x8],0x0
   16b3c:	lea    eax,[ebp+0x8]
   16b3f:	push   eax
   16b40:	push   DWORD PTR [ebp-0x4]
   16b43:	push   DWORD PTR [ebp-0x8]
   16b46:	call   0x13a74
   16b4b:	add    esp,0xc
   16b4e:	push   DWORD PTR [ebp-0x4]
   16b51:	lea    eax,[ebp-0x4]
   16b54:	push   DWORD PTR [ebp-0x8]
   16b57:	mov    ecx,esi
   16b59:	push   eax
   16b5a:	call   0x16550
   16b5f:	mov    eax,DWORD PTR [ebp+0x8]
   16b62:	pop    esi
   16b63:	leave  
   16b64:	ret    0x4
   16b67:	int3   
   16b68:	int3   
   16b69:	int3   
   16b6a:	int3   
   16b6b:	int3   
   16b6c:	mov    edi,edi
   16b6e:	push   ebp
   16b6f:	mov    ebp,esp
   16b71:	push   ecx
   16b72:	mov    eax,DWORD PTR [ecx+0x4]
   16b75:	mov    edx,DWORD PTR [eax]
   16b77:	push   eax
   16b78:	push   edx
   16b79:	lea    eax,[ebp-0x4]
   16b7c:	push   eax
   16b7d:	call   0x16550
   16b82:	leave  
   16b83:	ret    
   16b84:	int3   
   16b85:	int3   
   16b86:	int3   
   16b87:	int3   
   16b88:	int3   
   16b89:	int3   
   16b8a:	mov    edi,edi
   16b8c:	push   ebp
   16b8d:	mov    ebp,esp
   16b8f:	push   ecx
   16b90:	push   ecx
   16b91:	push   DWORD PTR [ebp+0xc]
   16b94:	lea    eax,[ebp-0x8]
   16b97:	push   eax
   16b98:	call   0x165ce
   16b9d:	mov    eax,DWORD PTR [ebp+0x8]
   16ba0:	mov    ecx,DWORD PTR [ebp-0x8]
   16ba3:	mov    DWORD PTR [eax],ecx
   16ba5:	mov    cl,BYTE PTR [ebp-0x4]
   16ba8:	mov    BYTE PTR [eax+0x4],cl
   16bab:	leave  
   16bac:	ret    0x8
   16baf:	int3   
   16bb0:	int3   
   16bb1:	int3   
   16bb2:	int3   
   16bb3:	int3   
   16bb4:	mov    edi,edi
   16bb6:	push   esi
   16bb7:	mov    esi,ecx
   16bb9:	push   edi
   16bba:	mov    BYTE PTR [esi+0x8],0x0
   16bbe:	call   0x13ff4
   16bc3:	lea    edi,[esi+0x10]
   16bc6:	mov    ecx,edi
   16bc8:	call   0x12a8e
   16bcd:	mov    edi,DWORD PTR [edi]
   16bcf:	push   0x0
   16bd1:	push   edi
   16bd2:	call   0x11cfc
   16bd7:	call   eax
   16bd9:	pop    edi
   16bda:	mov    eax,esi
   16bdc:	pop    esi
   16bdd:	ret    
   16bde:	int3   
   16bdf:	int3   
   16be0:	int3   
   16be1:	int3   
   16be2:	int3   
   16be3:	int3   
   16be4:	mov    edi,edi
   16be6:	push   ebp
   16be7:	mov    ebp,esp
   16be9:	push   esi
   16bea:	push   edi
   16beb:	xor    edi,edi
   16bed:	push   edi
   16bee:	push   edi
   16bef:	push   edi
   16bf0:	mov    esi,ecx
   16bf2:	mov    eax,DWORD PTR [esi+0x10]
   16bf5:	push   edi
   16bf6:	push   eax
   16bf7:	call   DWORD PTR ds:0x1f02c
   16bfd:	test   eax,eax
   16bff:	jl     0x16c1b
   16c01:	lea    eax,[ebp+0x8]
   16c04:	push   eax
   16c05:	mov    ecx,esi
   16c07:	call   0x169c0
   16c0c:	mov    ecx,DWORD PTR [ebp+0xc]
   16c0f:	push   edi
   16c10:	mov    DWORD PTR [eax],ecx
   16c12:	push   DWORD PTR [esi+0x10]
   16c15:	call   DWORD PTR ds:0x1f028
   16c1b:	pop    edi
   16c1c:	pop    esi
   16c1d:	pop    ebp
   16c1e:	ret    0x8
   16c21:	int3   
   16c22:	int3   
   16c23:	int3   
   16c24:	int3   
   16c25:	int3   
   16c26:	mov    edi,edi
   16c28:	push   ebp
   16c29:	mov    ebp,esp
   16c2b:	sub    esp,0x38
   16c2e:	push   esi
   16c2f:	call   0x1a270
   16c34:	test   al,al
   16c36:	jne    0x16c40
   16c38:	mov    eax,DWORD PTR [ebp+0x8]
   16c3b:	jmp    0x16d11
   16c40:	push   DWORD PTR [ebp+0xc]
   16c43:	lea    ecx,[ebp-0x8]
   16c46:	push   DWORD PTR [ebp+0x8]
   16c49:	call   0x12b62
   16c4e:	mov    ecx,DWORD PTR ds:0x78a48
   16c54:	lea    eax,[ebp-0x8]
   16c57:	push   eax
   16c58:	lea    eax,[ebp+0xc]
   16c5b:	push   eax
   16c5c:	call   0x14212
   16c61:	mov    esi,DWORD PTR [ebp+0xc]
   16c64:	mov    eax,ds:0x78a48
   16c69:	cmp    esi,DWORD PTR [eax+0x4]
   16c6c:	jne    0x16ccc
   16c6e:	push   ecx
   16c6f:	push   ecx
   16c70:	lea    eax,[ebp-0x8]
   16c73:	mov    ecx,esp
   16c75:	push   eax
   16c76:	call   0x12b82
   16c7b:	lea    eax,[ebp-0x10]
   16c7e:	push   eax
   16c7f:	call   0x12c00
   16c84:	lea    eax,[ebp-0x10]
   16c87:	push   eax
   16c88:	lea    eax,[ebp-0x8]
   16c8b:	push   eax
   16c8c:	lea    ecx,[ebp-0x38]
   16c8f:	call   0x12d68
   16c94:	lea    eax,[ebp-0x38]
   16c97:	push   eax
   16c98:	lea    ecx,[ebp-0x28]
   16c9b:	call   0x13500
   16ca0:	mov    ecx,DWORD PTR ds:0x78a48
   16ca6:	lea    eax,[ebp-0x28]
   16ca9:	push   eax
   16caa:	lea    eax,[ebp-0x18]
   16cad:	push   eax
   16cae:	call   0x16b8a
   16cb3:	lea    ecx,[ebp-0x28]
   16cb6:	call   0x11122
   16cbb:	lea    ecx,[ebp-0x38]
   16cbe:	call   0x11122
   16cc3:	push   DWORD PTR [ebp-0x10]
   16cc6:	call   0x10a3a
   16ccb:	pop    ecx
   16ccc:	mov    eax,DWORD PTR [ebp+0x10]
   16ccf:	movzx  eax,BYTE PTR [eax]
   16cd2:	cmp    eax,0x100
   16cd7:	jge    0x16cef
   16cd9:	mov    ecx,DWORD PTR ds:0x78a48
   16cdf:	lea    eax,[ebp-0x8]
   16ce2:	push   eax
   16ce3:	lea    eax,[ebp+0xc]
   16ce6:	push   eax
   16ce7:	call   0x14212
   16cec:	mov    esi,DWORD PTR [ebp+0xc]
   16cef:	mov    eax,ds:0x78a48
   16cf4:	cmp    esi,DWORD PTR [eax+0x4]
   16cf7:	je     0x16cfe
   16cf9:	mov    esi,DWORD PTR [esi+0x14]
   16cfc:	jmp    0x16d01
   16cfe:	mov    esi,DWORD PTR [ebp+0x8]
   16d01:	call   0x1a28c
   16d06:	push   DWORD PTR [ebp-0x8]
   16d09:	call   0x10a3a
   16d0e:	pop    ecx
   16d0f:	mov    eax,esi
   16d11:	pop    esi
   16d12:	leave  
   16d13:	ret    0xc
   16d16:	int3   
   16d17:	int3   
   16d18:	int3   
   16d19:	int3   
   16d1a:	int3   
   16d1b:	int3   
   16d1c:	mov    edi,edi
   16d1e:	push   ebp
   16d1f:	mov    ebp,esp
   16d21:	sub    esp,0x38
   16d24:	push   esi
   16d25:	call   0x1a270
   16d2a:	test   al,al
   16d2c:	jne    0x16d36
   16d2e:	mov    eax,DWORD PTR [ebp+0x8]
   16d31:	jmp    0x16e07
   16d36:	push   DWORD PTR [ebp+0xc]
   16d39:	lea    ecx,[ebp-0x8]
   16d3c:	push   DWORD PTR [ebp+0x8]
   16d3f:	call   0x12a02
   16d44:	mov    ecx,DWORD PTR ds:0x78a4c
   16d4a:	lea    eax,[ebp-0x8]
   16d4d:	push   eax
   16d4e:	lea    eax,[ebp+0xc]
   16d51:	push   eax
   16d52:	call   0x13c78
   16d57:	mov    esi,DWORD PTR [ebp+0xc]
   16d5a:	mov    eax,ds:0x78a4c
   16d5f:	cmp    esi,DWORD PTR [eax+0x4]
   16d62:	jne    0x16dc2
   16d64:	push   ecx
   16d65:	push   ecx
   16d66:	lea    eax,[ebp-0x8]
   16d69:	mov    ecx,esp
   16d6b:	push   eax
   16d6c:	call   0x12a22
   16d71:	lea    eax,[ebp-0x10]
   16d74:	push   eax
   16d75:	call   0x12c44
   16d7a:	lea    eax,[ebp-0x10]
   16d7d:	push   eax
   16d7e:	lea    eax,[ebp-0x8]
   16d81:	push   eax
   16d82:	lea    ecx,[ebp-0x38]
   16d85:	call   0x12c84
   16d8a:	lea    eax,[ebp-0x38]
   16d8d:	push   eax
   16d8e:	lea    ecx,[ebp-0x28]
   16d91:	call   0x1352c
   16d96:	mov    ecx,DWORD PTR ds:0x78a4c
   16d9c:	lea    eax,[ebp-0x28]
   16d9f:	push   eax
   16da0:	lea    eax,[ebp-0x18]
   16da3:	push   eax
   16da4:	call   0x16ace
   16da9:	lea    ecx,[ebp-0x28]
   16dac:	call   0x11122
   16db1:	lea    ecx,[ebp-0x38]
   16db4:	call   0x11122
   16db9:	push   DWORD PTR [ebp-0x10]
   16dbc:	call   0x10a3a
   16dc1:	pop    ecx
   16dc2:	mov    eax,DWORD PTR [ebp+0x10]
   16dc5:	movzx  eax,BYTE PTR [eax]
   16dc8:	cmp    eax,0x100
   16dcd:	jge    0x16de5
   16dcf:	mov    ecx,DWORD PTR ds:0x78a4c
   16dd5:	lea    eax,[ebp-0x8]
   16dd8:	push   eax
   16dd9:	lea    eax,[ebp+0xc]
   16ddc:	push   eax
   16ddd:	call   0x13c78
   16de2:	mov    esi,DWORD PTR [ebp+0xc]
   16de5:	mov    eax,ds:0x78a4c
   16dea:	cmp    esi,DWORD PTR [eax+0x4]
   16ded:	je     0x16df4
   16def:	mov    esi,DWORD PTR [esi+0x14]
   16df2:	jmp    0x16df7
   16df4:	mov    esi,DWORD PTR [ebp+0x8]
   16df7:	call   0x1a28c
   16dfc:	push   DWORD PTR [ebp-0x8]
   16dff:	call   0x10a3a
   16e04:	pop    ecx
   16e05:	mov    eax,esi
   16e07:	pop    esi
   16e08:	leave  
   16e09:	ret    0xc
   16e0c:	int3   
   16e0d:	int3   
   16e0e:	int3   
   16e0f:	int3   
   16e10:	int3   
   16e11:	int3   
   16e12:	mov    edi,edi
   16e14:	push   esi
   16e15:	mov    esi,ecx
   16e17:	mov    BYTE PTR [esi+0x8],0x0
   16e1b:	call   0x14088
   16e20:	mov    eax,esi
   16e22:	pop    esi
   16e23:	ret    0x8
   16e26:	int3   
   16e27:	int3   
   16e28:	int3   
   16e29:	int3   
   16e2a:	int3   
   16e2b:	int3   
   16e2c:	mov    edi,edi
   16e2e:	push   ebp
   16e2f:	mov    ebp,esp
   16e31:	sub    esp,0x90
   16e37:	push   esi
   16e38:	mov    esi,ecx
   16e3a:	lea    ecx,[ebp-0x48]
   16e3d:	call   0x1370e
   16e42:	push   eax
   16e43:	push   DWORD PTR [ebp+0x8]
   16e46:	lea    ecx,[ebp-0x90]
   16e4c:	call   0x138cc
   16e51:	push   eax
   16e52:	lea    eax,[ebp-0x8]
   16e55:	push   eax
   16e56:	mov    ecx,esi
   16e58:	call   0x16a86
   16e5d:	mov    esi,DWORD PTR [eax]
   16e5f:	lea    ecx,[ebp-0x90]
   16e65:	call   0x12b46
   16e6a:	lea    ecx,[ebp-0x48]
   16e6d:	call   0x11f44
   16e72:	lea    eax,[esi+0x18]
   16e75:	pop    esi
   16e76:	leave  
   16e77:	ret    0x4
   16e7a:	int3   
   16e7b:	int3   
   16e7c:	int3   
   16e7d:	int3   
   16e7e:	int3   
   16e7f:	int3   
   16e80:	mov    edi,edi
   16e82:	push   ebp
   16e83:	mov    ebp,esp
   16e85:	sub    esp,0x20
   16e88:	push   esi
   16e89:	push   0xffffffff
   16e8b:	mov    esi,ecx
   16e8d:	push   0x1df98
   16e92:	lea    ecx,[ebp-0x8]
   16e95:	call   0x11140
   16e9a:	lea    eax,[ebp-0x8]
   16e9d:	push   eax
   16e9e:	push   DWORD PTR [ebp+0x8]
   16ea1:	lea    ecx,[ebp-0x20]
   16ea4:	call   0x12c84
   16ea9:	push   eax
   16eaa:	lea    eax,[ebp-0x10]
   16ead:	push   eax
   16eae:	mov    ecx,esi
   16eb0:	call   0x16ace
   16eb5:	mov    esi,DWORD PTR [eax]
   16eb7:	lea    ecx,[ebp-0x20]
   16eba:	call   0x11122
   16ebf:	push   DWORD PTR [ebp-0x8]
   16ec2:	call   0x10a3a
   16ec7:	pop    ecx
   16ec8:	lea    eax,[esi+0x14]
   16ecb:	pop    esi
   16ecc:	leave  
   16ecd:	ret    0x4
   16ed0:	int3   
   16ed1:	int3   
   16ed2:	int3   
   16ed3:	int3   
   16ed4:	int3   
   16ed5:	int3   
   16ed6:	mov    edi,edi
   16ed8:	push   esi
   16ed9:	mov    esi,ecx
   16edb:	mov    BYTE PTR [esi+0x8],0x0
   16edf:	call   0x141b0
   16ee4:	mov    eax,esi
   16ee6:	pop    esi
   16ee7:	ret    0x8
   16eea:	int3   
   16eeb:	int3   
   16eec:	int3   
   16eed:	int3   
   16eee:	int3   
   16eef:	int3   
   16ef0:	mov    edi,edi
   16ef2:	push   ebp
   16ef3:	mov    ebp,esp
   16ef5:	sub    esp,0x14
   16ef8:	and    DWORD PTR [ebp-0x4],0x0
   16efc:	push   esi
   16efd:	lea    eax,[ebp-0x4]
   16f00:	push   eax
   16f01:	push   DWORD PTR [ebp+0x8]
   16f04:	mov    esi,ecx
   16f06:	lea    ecx,[ebp-0xc]
   16f09:	call   0x12cac
   16f0e:	push   eax
   16f0f:	lea    eax,[ebp-0x14]
   16f12:	push   eax
   16f13:	mov    ecx,esi
   16f15:	call   0x16af8
   16f1a:	mov    ecx,DWORD PTR [ebp-0x8]
   16f1d:	mov    esi,DWORD PTR [eax]
   16f1f:	test   ecx,ecx
   16f21:	je     0x16f28
   16f23:	call   0x10a58
   16f28:	lea    eax,[esi+0x10]
   16f2b:	pop    esi
   16f2c:	leave  
   16f2d:	ret    0x4
   16f30:	int3   
   16f31:	int3   
   16f32:	int3   
   16f33:	int3   
   16f34:	int3   
   16f35:	int3   
   16f36:	mov    edi,edi
   16f38:	push   ebp
   16f39:	mov    ebp,esp
   16f3b:	sub    esp,0x20
   16f3e:	push   esi
   16f3f:	mov    esi,ecx
   16f41:	mov    eax,DWORD PTR [esi+0x24]
   16f44:	mov    ecx,DWORD PTR [esi+0x28]
   16f47:	add    ecx,eax
   16f49:	cmp    DWORD PTR [esi+0x10],ecx
   16f4c:	jbe    0x16fdf
   16f52:	mov    ecx,DWORD PTR [esi+0x18]
   16f55:	mov    ecx,DWORD PTR [ecx]
   16f57:	push   edi
   16f58:	mov    DWORD PTR [ebp-0x4],ecx
   16f5b:	test   eax,eax
   16f5d:	je     0x16f6c
   16f5f:	mov    edi,eax
   16f61:	lea    ecx,[ebp-0x4]
   16f64:	call   0x12f94
   16f69:	dec    edi
   16f6a:	jne    0x16f61
   16f6c:	mov    eax,DWORD PTR [ebp-0x4]
   16f6f:	mov    edi,DWORD PTR [eax+0xc]
   16f72:	lea    ecx,[ebp-0x20]
   16f75:	mov    BYTE PTR [ebp-0x18],0x0
   16f79:	call   0x144e4
   16f7e:	mov    eax,DWORD PTR [esi+0x8]
   16f81:	mov    ecx,DWORD PTR [eax]
   16f83:	mov    DWORD PTR [ebp-0x4],ecx
   16f86:	cmp    ecx,eax
   16f88:	je     0x16fc9
   16f8a:	lea    edx,[ecx+0x58]
   16f8d:	mov    eax,DWORD PTR [edx]
   16f8f:	cmp    eax,edi
   16f91:	jae    0x16fa8
   16f93:	push   ecx
   16f94:	lea    eax,[ebp-0x8]
   16f97:	push   eax
   16f98:	lea    ecx,[esi+0x4]
   16f9b:	call   0x14f3c
   16fa0:	mov    ecx,DWORD PTR [ebp-0x8]
   16fa3:	mov    DWORD PTR [ebp-0x4],ecx
   16fa6:	jmp    0x16fc4
   16fa8:	sub    eax,edi
   16faa:	mov    DWORD PTR [edx],eax
   16fac:	push   edx
   16fad:	lea    eax,[ebp-0x10]
   16fb0:	push   eax
   16fb1:	lea    ecx,[ebp-0x20]
   16fb4:	call   0x160c8
   16fb9:	lea    ecx,[ebp-0x4]
   16fbc:	call   0x12f1e
   16fc1:	mov    ecx,DWORD PTR [ebp-0x4]
   16fc4:	cmp    ecx,DWORD PTR [esi+0x8]
   16fc7:	jne    0x16f8a
   16fc9:	lea    eax,[ebp-0x20]
   16fcc:	push   eax
   16fcd:	add    esi,0x14
   16fd0:	push   esi
   16fd1:	call   0x16668
   16fd6:	lea    ecx,[ebp-0x20]
   16fd9:	call   0x160f2
   16fde:	pop    edi
   16fdf:	pop    esi
   16fe0:	leave  
   16fe1:	ret    
   16fe2:	int3   
   16fe3:	int3   
   16fe4:	int3   
   16fe5:	int3   
   16fe6:	int3   
   16fe7:	int3   
   16fe8:	mov    edi,edi
   16fea:	push   ebp
   16feb:	mov    ebp,esp
   16fed:	sub    esp,0x20
   16ff0:	push   esi
   16ff1:	push   0xffffffff
   16ff3:	mov    esi,ecx
   16ff5:	push   0x1defe
   16ffa:	lea    ecx,[ebp-0x8]
   16ffd:	call   0x111e4
   17002:	lea    eax,[ebp-0x8]
   17005:	push   eax
   17006:	push   DWORD PTR [ebp+0x8]
   17009:	lea    ecx,[ebp-0x20]
   1700c:	call   0x12d68
   17011:	push   eax
   17012:	lea    eax,[ebp-0x10]
   17015:	push   eax
   17016:	mov    ecx,esi
   17018:	call   0x16b8a
   1701d:	mov    esi,DWORD PTR [eax]
   1701f:	lea    ecx,[ebp-0x20]
   17022:	call   0x11122
   17027:	push   DWORD PTR [ebp-0x8]
   1702a:	call   0x10a3a
   1702f:	pop    ecx
   17030:	lea    eax,[esi+0x14]
   17033:	pop    esi
   17034:	leave  
   17035:	ret    0x4
   17038:	int3   
   17039:	int3   
   1703a:	int3   
   1703b:	int3   
   1703c:	int3   
   1703d:	int3   
   1703e:	mov    edi,edi
   17040:	push   ebp
   17041:	mov    ebp,esp
   17043:	sub    esp,0x838
   17049:	mov    eax,ds:0x7751c
   1704e:	xor    eax,ebp
   17050:	mov    DWORD PTR [ebp-0x4],eax
   17053:	mov    eax,DWORD PTR [ebp+0x8]
   17056:	push   ebx
   17057:	push   esi
   17058:	push   edi
   17059:	mov    DWORD PTR [ebp-0x808],eax
   1705f:	xor    eax,eax
   17061:	push   0x7fe
   17066:	mov    WORD PTR [ebp-0x804],ax
   1706d:	xor    ebx,ebx
   1706f:	lea    eax,[ebp-0x802]
   17075:	push   ebx
   17076:	push   eax
   17077:	call   0x1db4c
   1707c:	mov    eax,0x776b8
   17081:	add    esp,0xc
   17084:	mov    edx,eax
   17086:	mov    cx,WORD PTR [eax]
   17089:	inc    eax
   1708a:	inc    eax
   1708b:	cmp    cx,bx
   1708e:	jne    0x17086
   17090:	sub    eax,edx
   17092:	lea    edi,[ebp-0x804]
   17098:	dec    edi
   17099:	dec    edi
   1709a:	mov    cx,WORD PTR [edi+0x2]
   1709e:	inc    edi
   1709f:	inc    edi
   170a0:	cmp    cx,bx
   170a3:	jne    0x1709a
   170a5:	mov    ecx,eax
   170a7:	shr    ecx,0x2
   170aa:	mov    esi,edx
   170ac:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   170ae:	mov    ecx,eax
   170b0:	mov    eax,DWORD PTR [ebp-0x808]
   170b6:	and    ecx,0x3
   170b9:	add    eax,0x400
   170be:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   170c0:	mov    edx,eax
   170c2:	mov    cx,WORD PTR [eax]
   170c5:	inc    eax
   170c6:	inc    eax
   170c7:	cmp    cx,bx
   170ca:	jne    0x170c2
   170cc:	sub    eax,edx
   170ce:	lea    edi,[ebp-0x804]
   170d4:	dec    edi
   170d5:	dec    edi
   170d6:	mov    cx,WORD PTR [edi+0x2]
   170da:	inc    edi
   170db:	inc    edi
   170dc:	cmp    cx,bx
   170df:	jne    0x170d6
   170e1:	mov    ecx,eax
   170e3:	shr    ecx,0x2
   170e6:	mov    esi,edx
   170e8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   170ea:	mov    ecx,eax
   170ec:	and    ecx,0x3
   170ef:	lea    eax,[ebp-0x804]
   170f5:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   170f7:	mov    DWORD PTR [ebp-0x818],eax
   170fd:	lea    ecx,[eax+0x2]
   17100:	mov    dx,WORD PTR [eax]
   17103:	inc    eax
   17104:	inc    eax
   17105:	cmp    dx,bx
   17108:	jne    0x17100
   1710a:	sub    eax,ecx
   1710c:	sar    eax,1
   1710e:	add    eax,eax
   17110:	mov    WORD PTR [ebp-0x81a],ax
   17117:	mov    WORD PTR [ebp-0x81c],ax
   1711e:	lea    eax,[ebp-0x81c]
   17124:	mov    DWORD PTR [ebp-0x82c],eax
   1712a:	lea    eax,[ebp-0x838]
   17130:	push   eax
   17131:	xor    edi,edi
   17133:	inc    edi
   17134:	push   edi
   17135:	push   ebx
   17136:	push   ebx
   17137:	lea    eax,[ebp-0x834]
   1713d:	push   eax
   1713e:	push   0xf003f
   17143:	lea    eax,[ebp-0x80c]
   17149:	push   eax
   1714a:	mov    DWORD PTR [ebp-0x834],0x18
   17154:	mov    DWORD PTR [ebp-0x830],ebx
   1715a:	mov    DWORD PTR [ebp-0x828],0x40
   17164:	mov    DWORD PTR [ebp-0x824],ebx
   1716a:	mov    DWORD PTR [ebp-0x820],ebx
   17170:	call   0x11a86
   17175:	call   eax
   17177:	test   eax,eax
   17179:	jl     0x17309
   1717f:	push   0x1e5f0
   17184:	push   0x9
   17186:	push   0x1e5dc
   1718b:	call   0x16c26
   17190:	mov    DWORD PTR [ebp-0x810],eax
   17196:	lea    edx,[eax+0x2]
   17199:	mov    cx,WORD PTR [eax]
   1719c:	inc    eax
   1719d:	inc    eax
   1719e:	cmp    cx,bx
   171a1:	jne    0x17199
   171a3:	sub    eax,edx
   171a5:	sar    eax,1
   171a7:	add    eax,eax
   171a9:	mov    WORD PTR [ebp-0x812],ax
   171b0:	mov    WORD PTR [ebp-0x814],ax
   171b7:	mov    eax,DWORD PTR [ebp-0x808]
   171bd:	lea    ecx,[eax+0x2]
   171c0:	mov    dx,WORD PTR [eax]
   171c3:	inc    eax
   171c4:	inc    eax
   171c5:	cmp    dx,bx
   171c8:	jne    0x171c0
   171ca:	sub    eax,ecx
   171cc:	sar    eax,1
   171ce:	inc    eax
   171cf:	movzx  eax,ax
   171d2:	add    eax,eax
   171d4:	push   eax
   171d5:	push   DWORD PTR [ebp-0x808]
   171db:	lea    eax,[ebp-0x814]
   171e1:	push   edi
   171e2:	push   ebx
   171e3:	push   eax
   171e4:	push   DWORD PTR [ebp-0x80c]
   171ea:	call   0x1188e
   171ef:	call   eax
   171f1:	test   eax,eax
   171f3:	jl     0x17309
   171f9:	push   0x1e5a8
   171fe:	push   0x5
   17200:	push   0x1e59c
   17205:	mov    DWORD PTR [ebp-0x808],0x3
   1720f:	call   0x16c26
   17214:	mov    DWORD PTR [ebp-0x810],eax
   1721a:	lea    edx,[eax+0x2]
   1721d:	mov    cx,WORD PTR [eax]
   17220:	inc    eax
   17221:	inc    eax
   17222:	cmp    cx,bx
   17225:	jne    0x1721d
   17227:	sub    eax,edx
   17229:	push   0x4
   1722b:	sar    eax,1
   1722d:	pop    esi
   1722e:	add    eax,eax
   17230:	push   esi
   17231:	mov    WORD PTR [ebp-0x812],ax
   17238:	mov    WORD PTR [ebp-0x814],ax
   1723f:	lea    eax,[ebp-0x808]
   17245:	push   eax
   17246:	push   esi
   17247:	push   ebx
   17248:	lea    eax,[ebp-0x814]
   1724e:	push   eax
   1724f:	push   DWORD PTR [ebp-0x80c]
   17255:	call   0x1188e
   1725a:	call   eax
   1725c:	test   eax,eax
   1725e:	jl     0x17309
   17264:	push   0x1e566
   17269:	push   esi
   1726a:	push   0x1e55c
   1726f:	mov    DWORD PTR [ebp-0x808],edi
   17275:	call   0x16c26
   1727a:	mov    DWORD PTR [ebp-0x810],eax
   17280:	lea    ecx,[eax+0x2]
   17283:	mov    dx,WORD PTR [eax]
   17286:	inc    eax
   17287:	inc    eax
   17288:	cmp    dx,bx
   1728b:	jne    0x17283
   1728d:	sub    eax,ecx
   1728f:	sar    eax,1
   17291:	add    eax,eax
   17293:	push   esi
   17294:	mov    WORD PTR [ebp-0x812],ax
   1729b:	mov    WORD PTR [ebp-0x814],ax
   172a2:	lea    eax,[ebp-0x808]
   172a8:	push   eax
   172a9:	push   esi
   172aa:	push   ebx
   172ab:	lea    eax,[ebp-0x814]
   172b1:	push   eax
   172b2:	push   DWORD PTR [ebp-0x80c]
   172b8:	call   0x1188e
   172bd:	call   eax
   172bf:	test   eax,eax
   172c1:	jl     0x17309
   172c3:	lea    eax,[ebp-0x81c]
   172c9:	push   eax
   172ca:	call   0x11a5c
   172cf:	call   eax
   172d1:	test   eax,eax
   172d3:	jl     0x17309
   172d5:	lea    eax,[ebp-0x804]
   172db:	push   eax
   172dc:	push   DWORD PTR [ebp-0x80c]
   172e2:	call   0x121d8
   172e7:	test   al,al
   172e9:	je     0x172fc
   172eb:	push   DWORD PTR [ebp-0x80c]
   172f1:	call   0x11864
   172f6:	call   eax
   172f8:	test   eax,eax
   172fa:	jl     0x17309
   172fc:	push   DWORD PTR [ebp-0x80c]
   17302:	call   0x119de
   17307:	call   eax
   17309:	mov    ecx,DWORD PTR [ebp-0x4]
   1730c:	pop    edi
   1730d:	pop    esi
   1730e:	xor    ecx,ebp
   17310:	pop    ebx
   17311:	call   0x1dae7
   17316:	leave  
   17317:	ret    0x4
   1731a:	int3   
   1731b:	int3   
   1731c:	int3   
   1731d:	int3   
   1731e:	int3   
   1731f:	int3   
   17320:	mov    edi,edi
   17322:	push   ebp
   17323:	mov    ebp,esp
   17325:	sub    esp,0x44
   17328:	mov    eax,DWORD PTR [ebp+0xc]
   1732b:	mov    eax,DWORD PTR [eax]
   1732d:	push   esi
   1732e:	mov    DWORD PTR [ebp-0x2c],eax
   17331:	lea    eax,[ebp-0x2c]
   17334:	push   eax
   17335:	lea    eax,[ebp-0x44]
   17338:	push   eax
   17339:	xor    esi,esi
   1733b:	push   0x1f0fff
   17340:	lea    eax,[ebp-0x10]
   17343:	push   eax
   17344:	mov    DWORD PTR [ebp-0x44],0x18
   1734b:	mov    DWORD PTR [ebp-0x40],esi
   1734e:	mov    DWORD PTR [ebp-0x38],0x200
   17355:	mov    DWORD PTR [ebp-0x3c],esi
   17358:	mov    DWORD PTR [ebp-0x34],esi
   1735b:	mov    DWORD PTR [ebp-0x30],esi
   1735e:	mov    DWORD PTR [ebp-0x28],esi
   17361:	mov    DWORD PTR [ebp-0x10],esi
   17364:	call   0x11714
   17369:	call   eax
   1736b:	test   eax,eax
   1736d:	jl     0x175de
   17373:	push   ebx
   17374:	push   edi
   17375:	push   0x40
   17377:	mov    edi,0x1000
   1737c:	push   edi
   1737d:	lea    eax,[ebp-0x14]
   17380:	push   eax
   17381:	push   esi
   17382:	lea    eax,[ebp-0x8]
   17385:	push   eax
   17386:	push   DWORD PTR [ebp-0x10]
   17389:	mov    DWORD PTR [ebp-0x8],esi
   1738c:	mov    esi,DWORD PTR ds:0x1f044
   17392:	mov    ebx,0x400
   17397:	mov    DWORD PTR [ebp-0x14],ebx
   1739a:	call   esi
   1739c:	test   eax,eax
   1739e:	jl     0x173a9
   173a0:	mov    eax,DWORD PTR [ebp-0x8]
   173a3:	mov    ecx,DWORD PTR [ebp+0xc]
   173a6:	mov    DWORD PTR [ecx+0x8],eax
   173a9:	and    DWORD PTR [ebp-0x18],0x0
   173ad:	push   0x4
   173af:	push   edi
   173b0:	lea    eax,[ebp-0x14]
   173b3:	push   eax
   173b4:	push   0x0
   173b6:	lea    eax,[ebp-0x18]
   173b9:	push   eax
   173ba:	push   DWORD PTR [ebp-0x10]
   173bd:	mov    DWORD PTR [ebp-0x14],ebx
   173c0:	call   esi
   173c2:	test   eax,eax
   173c4:	jl     0x173cf
   173c6:	mov    eax,DWORD PTR [ebp-0x18]
   173c9:	mov    ecx,DWORD PTR [ebp+0xc]
   173cc:	mov    DWORD PTR [ecx+0xc],eax
   173cf:	lea    eax,[ebp-0x1c]
   173d2:	push   eax
   173d3:	push   DWORD PTR [ebp-0x2c]
   173d6:	call   0x11d26
   173db:	call   eax
   173dd:	test   eax,eax
   173df:	jl     0x175dc
   173e5:	push   DWORD PTR [ebp-0x1c]
   173e8:	call   0x11b04
   173ed:	call   eax
   173ef:	mov    ebx,DWORD PTR [ebp-0x8]
   173f2:	and    DWORD PTR [ebp-0x4],0x0
   173f6:	test   ebx,ebx
   173f8:	je     0x175c2
   173fe:	mov    edi,DWORD PTR [ebp-0x18]
   17401:	push   0x40
   17403:	push   0x77408
   17408:	push   edi
   17409:	mov    DWORD PTR [ebp-0xc],edi
   1740c:	call   0x198f2
   17411:	push   0x1e61c
   17416:	push   0x4
   17418:	push   0x1e612
   1741d:	call   0x16c26
   17422:	mov    esi,eax
   17424:	mov    cx,WORD PTR [eax]
   17427:	inc    eax
   17428:	inc    eax
   17429:	test   cx,cx
   1742c:	jne    0x17424
   1742e:	sub    eax,esi
   17430:	dec    edi
   17431:	dec    edi
   17432:	mov    cx,WORD PTR [edi+0x2]
   17436:	inc    edi
   17437:	inc    edi
   17438:	test   cx,cx
   1743b:	jne    0x17432
   1743d:	mov    ecx,eax
   1743f:	shr    ecx,0x2
   17442:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17444:	mov    ecx,eax
   17446:	push   0x60
   17448:	and    ecx,0x3
   1744b:	push   ebx
   1744c:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1744e:	mov    DWORD PTR [ebp-0x20],ebx
   17451:	call   0x198a4
   17456:	push   0x68
   17458:	push   eax
   17459:	call   0x198a4
   1745e:	push   DWORD PTR [ebp-0xc]
   17461:	push   eax
   17462:	call   0x198bc
   17467:	push   0xb8
   1746c:	push   eax
   1746d:	call   0x198a4
   17472:	push   DWORD PTR ds:0x77f68
   17478:	push   eax
   17479:	call   0x198bc
   1747e:	push   0xc00b
   17483:	push   eax
   17484:	call   0x198d6
   17489:	push   0x74
   1748b:	push   eax
   1748c:	call   0x198a4
   17491:	push   0x2
   17493:	push   eax
   17494:	call   0x198a4
   17499:	push   0xd0ff
   1749e:	push   eax
   1749f:	call   0x198d6
   174a4:	push   0x61
   174a6:	push   eax
   174a7:	call   0x198a4
   174ac:	mov    ebx,DWORD PTR [ebp+0x8]
   174af:	mov    edi,eax
   174b1:	mov    esi,ebx
   174b3:	push   0x0
   174b5:	push   esi
   174b6:	push   edi
   174b7:	call   0x1a056
   174bc:	mov    ecx,eax
   174be:	sub    ecx,esi
   174c0:	add    DWORD PTR [ebp-0x4],ecx
   174c3:	add    edi,ecx
   174c5:	cmp    DWORD PTR [ebp-0x4],0x5
   174c9:	mov    esi,eax
   174cb:	jb     0x174b3
   174cd:	mov    eax,DWORD PTR [ebp-0x4]
   174d0:	push   edi
   174d1:	add    eax,ebx
   174d3:	push   eax
   174d4:	call   0x1991a
   174d9:	mov    eax,DWORD PTR [ebp-0x8]
   174dc:	test   eax,eax
   174de:	je     0x175c2
   174e4:	add    eax,0x400
   174e9:	lea    ecx,[eax-0x10]
   174ec:	mov    DWORD PTR [ebp-0x24],ecx
   174ef:	mov    ecx,DWORD PTR [ebp-0x4]
   174f2:	lea    esi,[eax-0xc]
   174f5:	push   esi
   174f6:	lea    edi,[eax-0x4]
   174f9:	lea    ebx,[eax-0x8]
   174fc:	shr    ecx,0x2
   174ff:	lea    ecx,[ecx*4+0x14]
   17506:	push   0x40
   17508:	sub    eax,ecx
   1750a:	push   ebx
   1750b:	mov    DWORD PTR [ebp-0xc],eax
   1750e:	mov    eax,DWORD PTR [ebp+0x8]
   17511:	mov    DWORD PTR [edi],eax
   17513:	push   edi
   17514:	mov    DWORD PTR [ebx],0x5
   1751a:	and    DWORD PTR [esi],0x0
   1751d:	push   0xffffffff
   1751f:	call   DWORD PTR ds:0x77ee4
   17525:	test   eax,eax
   17527:	jl     0x1758c
   17529:	push   DWORD PTR [ebp-0x4]
   1752c:	push   0x90
   17531:	push   DWORD PTR [ebp-0xc]
   17534:	call   0x1db4c
   17539:	mov    eax,DWORD PTR [ebp-0x20]
   1753c:	sub    eax,DWORD PTR [ebp+0x8]
   1753f:	add    esp,0xc
   17542:	sub    eax,0x5
   17545:	push   eax
   17546:	mov    eax,DWORD PTR [ebp-0xc]
   17549:	inc    eax
   1754a:	push   eax
   1754b:	call   0x198bc
   17550:	push   0xe9
   17555:	push   DWORD PTR [ebp-0xc]
   17558:	call   0x198a4
   1755d:	mov    eax,DWORD PTR [ebp-0x24]
   17560:	and    DWORD PTR [eax],0x0
   17563:	push   eax
   17564:	push   DWORD PTR [ebp-0x4]
   17567:	push   DWORD PTR [ebp-0xc]
   1756a:	push   DWORD PTR [ebp+0x8]
   1756d:	push   0xffffffff
   1756f:	call   DWORD PTR ds:0x77ed8
   17575:	mov    eax,DWORD PTR [ebp+0xc]
   17578:	mov    BYTE PTR [eax+0x10],0x1
   1757c:	lea    eax,[ebp-0x20]
   1757f:	push   eax
   17580:	push   DWORD PTR [esi]
   17582:	push   ebx
   17583:	push   edi
   17584:	push   0xffffffff
   17586:	call   DWORD PTR ds:0x77ee4
   1758c:	mov    esi,DWORD PTR [ebp-0x8]
   1758f:	test   esi,esi
   17591:	je     0x175c2
   17593:	lea    eax,[esi+0x400]
   17599:	lea    ecx,[eax-0x4]
   1759c:	lea    edx,[eax-0x8]
   1759f:	add    eax,0xfffffff4
   175a2:	push   eax
   175a3:	push   0x20
   175a5:	push   edx
   175a6:	mov    DWORD PTR [ecx],esi
   175a8:	push   ecx
   175a9:	mov    DWORD PTR [edx],0x400
   175af:	and    DWORD PTR [eax],0x0
   175b2:	push   0xffffffff
   175b4:	call   DWORD PTR ds:0x77ee4
   175ba:	test   eax,eax
   175bc:	jge    0x175c2
   175be:	and    DWORD PTR [ebp-0x8],0x0
   175c2:	call   0x11ada
   175c7:	call   eax
   175c9:	mov    ecx,DWORD PTR [ebp-0x1c]
   175cc:	call   DWORD PTR ds:0x1f060
   175d2:	push   DWORD PTR [ebp-0x10]
   175d5:	call   0x119de
   175da:	call   eax
   175dc:	pop    edi
   175dd:	pop    ebx
   175de:	pop    esi
   175df:	leave  
   175e0:	ret    0x8
   175e3:	int3   
   175e4:	int3   
   175e5:	int3   
   175e6:	int3   
   175e7:	int3   
   175e8:	mov    edi,edi
   175ea:	push   ebp
   175eb:	mov    ebp,esp
   175ed:	cmp    DWORD PTR ds:0x77f68,0x0
   175f4:	push   esi
   175f5:	mov    esi,DWORD PTR [ebp+0x10]
   175f8:	jne    0x176c3
   175fe:	push   0x1e7de
   17603:	push   0xc
   17605:	push   0x1e7c4
   1760a:	call   0x16c26
   1760f:	push   eax
   17610:	push   DWORD PTR [ebp+0x8]
   17613:	call   0x10e8a
   17618:	test   al,al
   1761a:	je     0x176c3
   17620:	mov    eax,DWORD PTR [esi+0x4]
   17623:	push   0x1e78e
   17628:	push   0xc
   1762a:	push   0x1e780
   1762f:	mov    ds:0x77f60,eax
   17634:	call   0x16d1c
   17639:	push   eax
   1763a:	push   DWORD PTR [esi+0x4]
   1763d:	call   0x1243c
   17642:	push   0x1e744
   17647:	push   0xc
   17649:	push   0x1e736
   1764e:	mov    ds:0x77f68,eax
   17653:	call   0x16d1c
   17658:	push   eax
   17659:	push   DWORD PTR [esi+0x4]
   1765c:	call   0x1243c
   17661:	push   0x1e714
   17666:	push   0xc
   17668:	push   0x1e706
   1766d:	mov    ds:0x77f6c,eax
   17672:	call   0x16d1c
   17677:	push   eax
   17678:	push   DWORD PTR [esi+0x4]
   1767b:	call   0x1243c
   17680:	push   0x1e6d0
   17685:	push   0x5
   17687:	push   0x1e6ca
   1768c:	mov    ds:0x77f70,eax
   17691:	call   0x16d1c
   17696:	push   eax
   17697:	push   DWORD PTR [esi+0x4]
   1769a:	call   0x1243c
   1769f:	push   0x1e69e
   176a4:	push   0x4
   176a6:	push   0x1e698
   176ab:	mov    ds:0x77f74,eax
   176b0:	call   0x16d1c
   176b5:	push   eax
   176b6:	push   DWORD PTR [esi+0x4]
   176b9:	call   0x1243c
   176be:	mov    ds:0x77f78,eax
   176c3:	cmp    DWORD PTR ds:0x77f64,0x0
   176ca:	jne    0x176f2
   176cc:	push   0x1e66e
   176d1:	push   0x9
   176d3:	push   0x1e65a
   176d8:	call   0x16c26
   176dd:	push   eax
   176de:	push   DWORD PTR [ebp+0x8]
   176e1:	call   0x10e8a
   176e6:	test   al,al
   176e8:	je     0x176f2
   176ea:	mov    eax,DWORD PTR [esi+0x4]
   176ed:	mov    ds:0x77f64,eax
   176f2:	pop    esi
   176f3:	pop    ebp
   176f4:	ret    0xc
   176f7:	int3   
   176f8:	int3   
   176f9:	int3   
   176fa:	int3   
   176fb:	int3   
   176fc:	mov    edi,edi
   176fe:	push   ebp
   176ff:	mov    ebp,esp
   17701:	sub    esp,0x4c
   17704:	push   ebx
   17705:	push   esi
   17706:	push   edi
   17707:	push   DWORD PTR [ebp+0xc]
   1770a:	push   DWORD PTR [ebp+0x8]
   1770d:	call   DWORD PTR ds:0x77ef0
   17713:	mov    DWORD PTR [ebp-0x8],eax
   17716:	xor    eax,eax
   17718:	xor    ebx,ebx
   1771a:	mov    DWORD PTR [ebp-0x30],ebx
   1771d:	lea    edi,[ebp-0x2c]
   17720:	stos   DWORD PTR es:[edi],eax
   17721:	stos   DWORD PTR es:[edi],eax
   17722:	stos   DWORD PTR es:[edi],eax
   17723:	stos   DWORD PTR es:[edi],eax
   17724:	xor    eax,eax
   17726:	mov    DWORD PTR [ebp-0x1c],ebx
   17729:	lea    edi,[ebp-0x18]
   1772c:	stos   DWORD PTR es:[edi],eax
   1772d:	stos   DWORD PTR es:[edi],eax
   1772e:	stos   DWORD PTR es:[edi],eax
   1772f:	stos   DWORD PTR es:[edi],eax
   17730:	lea    eax,[ebp-0x30]
   17733:	push   eax
   17734:	push   ebx
   17735:	call   0x10f18
   1773a:	mov    BYTE PTR [ebp+0xf],al
   1773d:	lea    eax,[ebp-0x1c]
   17740:	push   eax
   17741:	push   0x1
   17743:	call   0x10f18
   17748:	mov    BYTE PTR [ebp-0x1],al
   1774b:	cmp    BYTE PTR [ebp+0xf],bl
   1774e:	je     0x177af
   17750:	mov    esi,DWORD PTR [ebp-0x30]
   17753:	cmp    esi,ebx
   17755:	je     0x177af
   17757:	push   0x6
   17759:	pop    ecx
   1775a:	push   ebx
   1775b:	xor    eax,eax
   1775d:	mov    DWORD PTR [ebp-0x4c],ebx
   17760:	lea    edi,[ebp-0x48]
   17763:	push   0x1c
   17765:	rep stos DWORD PTR es:[edi],eax
   17767:	lea    eax,[ebp-0x4c]
   1776a:	push   eax
   1776b:	push   ebx
   1776c:	push   DWORD PTR [ebp+0x8]
   1776f:	call   0x119b4
   17774:	call   eax
   17776:	cmp    DWORD PTR [ebp-0x44],esi
   17779:	jne    0x177af
   1777b:	push   ebx
   1777c:	push   0x4
   1777e:	lea    eax,[ebp+0xc]
   17781:	push   eax
   17782:	push   0x9
   17784:	push   DWORD PTR [ebp+0x8]
   17787:	mov    DWORD PTR [ebp+0xc],ebx
   1778a:	call   0x119b4
   1778f:	call   eax
   17791:	test   eax,eax
   17793:	jge    0x17798
   17795:	mov    DWORD PTR [ebp+0xc],ebx
   17798:	cmp    DWORD PTR [ebp+0xc],ebx
   1779b:	je     0x177af
   1779d:	lea    eax,[ebp-0x30]
   177a0:	push   eax
   177a1:	push   DWORD PTR [ebp+0xc]
   177a4:	call   0x17320
   177a9:	push   ebx
   177aa:	call   0x10fae
   177af:	cmp    BYTE PTR [ebp-0x1],bl
   177b2:	je     0x1781d
   177b4:	mov    esi,DWORD PTR [ebp-0x1c]
   177b7:	cmp    esi,ebx
   177b9:	je     0x1781d
   177bb:	cmp    BYTE PTR [ebp-0xc],bl
   177be:	jne    0x1781d
   177c0:	push   0x6
   177c2:	pop    ecx
   177c3:	push   ebx
   177c4:	xor    eax,eax
   177c6:	mov    DWORD PTR [ebp-0x4c],ebx
   177c9:	lea    edi,[ebp-0x48]
   177cc:	push   0x1c
   177ce:	rep stos DWORD PTR es:[edi],eax
   177d0:	lea    eax,[ebp-0x4c]
   177d3:	push   eax
   177d4:	push   ebx
   177d5:	push   DWORD PTR [ebp+0x8]
   177d8:	call   0x119b4
   177dd:	call   eax
   177df:	cmp    DWORD PTR [ebp-0x44],esi
   177e2:	jne    0x1781d
   177e4:	push   ebx
   177e5:	push   0x4
   177e7:	lea    eax,[ebp+0xc]
   177ea:	push   eax
   177eb:	push   0x9
   177ed:	push   DWORD PTR [ebp+0x8]
   177f0:	mov    DWORD PTR [ebp+0xc],ebx
   177f3:	call   0x119b4
   177f8:	call   eax
   177fa:	test   eax,eax
   177fc:	jge    0x17801
   177fe:	mov    DWORD PTR [ebp+0xc],ebx
   17801:	cmp    DWORD PTR [ebp+0xc],ebx
   17804:	je     0x1781d
   17806:	lea    eax,[ebp-0x1c]
   17809:	push   eax
   1780a:	push   DWORD PTR [ebp+0xc]
   1780d:	call   0x12548
   17812:	lea    eax,[ebp-0x1c]
   17815:	push   eax
   17816:	push   0x1
   17818:	call   0x10f66
   1781d:	mov    eax,DWORD PTR [ebp-0x8]
   17820:	pop    edi
   17821:	pop    esi
   17822:	pop    ebx
   17823:	leave  
   17824:	ret    0x8
   17827:	int3   
   17828:	int3   
   17829:	int3   
   1782a:	int3   
   1782b:	int3   
   1782c:	push   0x24
   1782e:	push   0x77248
   17833:	call   0x1db88
   17838:	xor    ebx,ebx
   1783a:	push   ebx
   1783b:	push   ebx
   1783c:	push   ebx
   1783d:	push   ebx
   1783e:	push   0x77558
   17843:	call   DWORD PTR ds:0x1f02c
   17849:	cmp    eax,ebx
   1784b:	jge    0x1785c
   1784d:	mov    eax,DWORD PTR [ebp+0x8]
   17850:	mov    DWORD PTR [eax+0x8],0x4
   17857:	jmp    0x17914
   1785c:	mov    DWORD PTR [ebp-0x4],ebx
   1785f:	push   0xffffffff
   17861:	mov    esi,DWORD PTR [ebp+0x8]
   17864:	lea    eax,[esi+0xc]
   17867:	push   eax
   17868:	lea    ecx,[ebp-0x24]
   1786b:	call   0x12a02
   17870:	push   0xffffffff
   17872:	mov    eax,DWORD PTR [ebp-0x20]
   17875:	lea    eax,[eax+esi*1+0xd]
   17879:	push   eax
   1787a:	lea    ecx,[ebp-0x2c]
   1787d:	call   0x12a02
   17882:	push   0xffffffff
   17884:	push   0x1df98
   17889:	lea    ecx,[ebp-0x34]
   1788c:	call   0x11140
   17891:	lea    eax,[ebp-0x34]
   17894:	push   eax
   17895:	lea    eax,[ebp-0x2c]
   17898:	push   eax
   17899:	call   0x19874
   1789e:	mov    BYTE PTR [ebp-0x19],al
   178a1:	push   DWORD PTR [ebp-0x34]
   178a4:	call   0x10a3a
   178a9:	pop    ecx
   178aa:	lea    eax,[ebp-0x24]
   178ad:	mov    ecx,DWORD PTR ds:0x77528
   178b3:	push   eax
   178b4:	cmp    BYTE PTR [ebp-0x19],bl
   178b7:	je     0x178c0
   178b9:	call   0x161a4
   178be:	jmp    0x178d0
   178c0:	call   0x16e80
   178c5:	lea    ecx,[ebp-0x2c]
   178c8:	push   ecx
   178c9:	mov    ecx,eax
   178cb:	call   0x12a44
   178d0:	mov    DWORD PTR [esi+0x8],ebx
   178d3:	push   DWORD PTR [ebp-0x2c]
   178d6:	call   0x10a3a
   178db:	push   DWORD PTR [ebp-0x24]
   178de:	call   0x10a3a
   178e3:	pop    ecx
   178e4:	pop    ecx
   178e5:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   178ec:	jmp    0x17908
   178ee:	xor    eax,eax
   178f0:	inc    eax
   178f1:	ret    
   178f2:	mov    esp,DWORD PTR [ebp-0x18]
   178f5:	mov    eax,DWORD PTR [ebp+0x8]
   178f8:	mov    DWORD PTR [eax+0x8],0x4
   178ff:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   17906:	xor    ebx,ebx
   17908:	push   ebx
   17909:	push   0x77558
   1790e:	call   DWORD PTR ds:0x1f028
   17914:	call   0x1dbcd
   17919:	ret    0x4
   1791c:	int3   
   1791d:	int3   
   1791e:	int3   
   1791f:	int3   
   17920:	int3   
   17921:	int3   
   17922:	push   0xc
   17924:	push   0x77268
   17929:	call   0x1db88
   1792e:	xor    edi,edi
   17930:	push   edi
   17931:	push   edi
   17932:	push   edi
   17933:	push   edi
   17934:	push   0x77558
   17939:	call   DWORD PTR ds:0x1f02c
   1793f:	cmp    eax,edi
   17941:	jge    0x1794f
   17943:	mov    eax,DWORD PTR [ebp+0x8]
   17946:	mov    DWORD PTR [eax+0x8],0x4
   1794d:	jmp    0x179c5
   1794f:	mov    DWORD PTR [ebp-0x4],edi
   17952:	mov    esi,DWORD PTR [ebp+0x8]
   17955:	lea    eax,[esi+0x4]
   17958:	mov    ecx,DWORD PTR ds:0x775b4
   1795e:	push   eax
   1795f:	cmp    DWORD PTR [esi],edi
   17961:	jbe    0x1798e
   17963:	call   0x16ef0
   17968:	mov    ebx,eax
   1796a:	push   DWORD PTR [esi]
   1796c:	lea    eax,[esi+0xc]
   1796f:	push   eax
   17970:	lea    ecx,[ebp-0x1c]
   17973:	call   0x137d4
   17978:	push   eax
   17979:	mov    ecx,ebx
   1797b:	call   0x11f9e
   17980:	mov    ecx,DWORD PTR [ebp-0x1c]
   17983:	cmp    ecx,edi
   17985:	je     0x17993
   17987:	call   0x10a58
   1798c:	jmp    0x17993
   1798e:	call   0x16b22
   17993:	mov    DWORD PTR [esi+0x8],edi
   17996:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1799d:	jmp    0x179b9
   1799f:	xor    eax,eax
   179a1:	inc    eax
   179a2:	ret    
   179a3:	mov    esp,DWORD PTR [ebp-0x18]
   179a6:	mov    eax,DWORD PTR [ebp+0x8]
   179a9:	mov    DWORD PTR [eax+0x8],0x4
   179b0:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   179b7:	xor    edi,edi
   179b9:	push   edi
   179ba:	push   0x77558
   179bf:	call   DWORD PTR ds:0x1f028
   179c5:	call   0x1dbcd
   179ca:	ret    0x4
   179cd:	int3   
   179ce:	int3   
   179cf:	int3   
   179d0:	int3   
   179d1:	int3   
   179d2:	mov    edi,edi
   179d4:	push   ebp
   179d5:	mov    ebp,esp
   179d7:	sub    esp,0x10
   179da:	and    DWORD PTR [ebp-0xc],0x0
   179de:	xor    ecx,ecx
   179e0:	mov    DWORD PTR [ebp-0x10],0x1
   179e7:	xor    eax,eax
   179e9:	mov    dl,BYTE PTR [eax+0x735cc]
   179ef:	xor    BYTE PTR [ebp+ecx*1-0x10],dl
   179f3:	inc    ecx
   179f4:	inc    eax
   179f5:	and    eax,0xf
   179f8:	cmp    ecx,0x8
   179fb:	jne    0x179e9
   179fd:	push   ecx
   179fe:	lea    eax,[ebp-0x10]
   17a01:	push   eax
   17a02:	lea    ecx,[ebp-0x8]
   17a05:	mov    DWORD PTR [ebp-0x4],0x2
   17a0c:	call   0x137d4
   17a11:	mov    ecx,DWORD PTR ds:0x775b4
   17a17:	push   eax
   17a18:	lea    eax,[ebp-0x4]
   17a1b:	push   eax
   17a1c:	call   0x16ef0
   17a21:	mov    ecx,eax
   17a23:	call   0x11f9e
   17a28:	mov    ecx,DWORD PTR [ebp-0x8]
   17a2b:	test   ecx,ecx
   17a2d:	je     0x17a34
   17a2f:	call   0x10a58
   17a34:	leave  
   17a35:	ret    
   17a36:	int3   
   17a37:	int3   
   17a38:	int3   
   17a39:	int3   
   17a3a:	int3   
   17a3b:	int3   
   17a3c:	push   0x848
   17a41:	push   0x77288
   17a46:	call   0x1de90
   17a4b:	xor    ebx,ebx
   17a4d:	mov    BYTE PTR [ebp-0x81d],bl
   17a53:	xor    eax,eax
   17a55:	mov    WORD PTR [ebp-0x81c],ax
   17a5c:	push   0x7fe
   17a61:	push   ebx
   17a62:	lea    eax,[ebp-0x81a]
   17a68:	push   eax
   17a69:	call   0x1db4c
   17a6e:	add    esp,0xc
   17a71:	push   0x1e87e
   17a76:	push   0x15
   17a78:	push   0x1e852
   17a7d:	call   0x16c26
   17a82:	mov    edx,eax
   17a84:	mov    cx,WORD PTR [eax]
   17a87:	inc    eax
   17a88:	inc    eax
   17a89:	cmp    cx,bx
   17a8c:	jne    0x17a84
   17a8e:	sub    eax,edx
   17a90:	lea    edi,[ebp-0x81c]
   17a96:	dec    edi
   17a97:	dec    edi
   17a98:	mov    cx,WORD PTR [edi+0x2]
   17a9c:	inc    edi
   17a9d:	inc    edi
   17a9e:	cmp    cx,bx
   17aa1:	jne    0x17a98
   17aa3:	mov    ecx,eax
   17aa5:	mov    esi,edx
   17aa7:	shr    ecx,0x2
   17aaa:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17aac:	mov    ecx,eax
   17aae:	and    ecx,0x3
   17ab1:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17ab3:	mov    eax,0x77408
   17ab8:	mov    edx,eax
   17aba:	mov    cx,WORD PTR [eax]
   17abd:	inc    eax
   17abe:	inc    eax
   17abf:	cmp    cx,bx
   17ac2:	jne    0x17aba
   17ac4:	sub    eax,edx
   17ac6:	lea    edi,[ebp-0x81c]
   17acc:	dec    edi
   17acd:	dec    edi
   17ace:	mov    cx,WORD PTR [edi+0x2]
   17ad2:	inc    edi
   17ad3:	inc    edi
   17ad4:	cmp    cx,bx
   17ad7:	jne    0x17ace
   17ad9:	mov    ecx,eax
   17adb:	mov    esi,edx
   17add:	shr    ecx,0x2
   17ae0:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17ae2:	mov    ecx,eax
   17ae4:	and    ecx,0x3
   17ae7:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17ae9:	push   0x1e81a
   17aee:	push   0x4
   17af0:	push   0x1e612
   17af5:	call   0x16c26
   17afa:	mov    edx,eax
   17afc:	mov    cx,WORD PTR [eax]
   17aff:	inc    eax
   17b00:	inc    eax
   17b01:	cmp    cx,bx
   17b04:	jne    0x17afc
   17b06:	sub    eax,edx
   17b08:	lea    edi,[ebp-0x81c]
   17b0e:	dec    edi
   17b0f:	dec    edi
   17b10:	mov    cx,WORD PTR [edi+0x2]
   17b14:	inc    edi
   17b15:	inc    edi
   17b16:	cmp    cx,bx
   17b19:	jne    0x17b10
   17b1b:	mov    ecx,eax
   17b1d:	mov    esi,edx
   17b1f:	shr    ecx,0x2
   17b22:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17b24:	mov    ecx,eax
   17b26:	and    ecx,0x3
   17b29:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17b2b:	lea    eax,[ebp-0x81c]
   17b31:	push   eax
   17b32:	lea    eax,[ebp-0x858]
   17b38:	push   eax
   17b39:	call   DWORD PTR ds:0x1f008
   17b3f:	mov    DWORD PTR [ebp-0x824],ebx
   17b45:	xor    eax,eax
   17b47:	lea    edi,[ebp-0x84c]
   17b4d:	stos   DWORD PTR es:[edi],eax
   17b4e:	stos   DWORD PTR es:[edi],eax
   17b4f:	stos   DWORD PTR es:[edi],eax
   17b50:	stos   DWORD PTR es:[edi],eax
   17b51:	stos   DWORD PTR es:[edi],eax
   17b52:	mov    DWORD PTR [ebp-0x830],ebx
   17b58:	xor    eax,eax
   17b5a:	lea    edi,[ebp-0x82c]
   17b60:	stos   DWORD PTR es:[edi],eax
   17b61:	mov    DWORD PTR [ebp-0x850],0x18
   17b6b:	mov    DWORD PTR [ebp-0x84c],ebx
   17b71:	mov    DWORD PTR [ebp-0x844],0x240
   17b7b:	lea    eax,[ebp-0x858]
   17b81:	mov    DWORD PTR [ebp-0x848],eax
   17b87:	mov    DWORD PTR [ebp-0x840],ebx
   17b8d:	mov    DWORD PTR [ebp-0x83c],ebx
   17b93:	push   ebx
   17b94:	push   ebx
   17b95:	push   0x60
   17b97:	push   0x1
   17b99:	push   ebx
   17b9a:	push   0x80
   17b9f:	push   ebx
   17ba0:	lea    eax,[ebp-0x830]
   17ba6:	push   eax
   17ba7:	lea    eax,[ebp-0x850]
   17bad:	push   eax
   17bae:	push   0x100001
   17bb3:	lea    eax,[ebp-0x824]
   17bb9:	push   eax
   17bba:	call   0x118e2
   17bbf:	call   eax
   17bc1:	cmp    eax,ebx
   17bc3:	jge    0x17bcc
   17bc5:	xor    al,al
   17bc7:	jmp    0x17c62
   17bcc:	mov    DWORD PTR [ebp-0x4],ebx
   17bcf:	mov    esi,DWORD PTR [ebp+0xc]
   17bd2:	mov    eax,0x10000
   17bd7:	cmp    esi,eax
   17bd9:	jbe    0x17bdd
   17bdb:	mov    esi,eax
   17bdd:	push   esi
   17bde:	call   0x10a06
   17be3:	pop    ecx
   17be4:	mov    DWORD PTR [ebp-0x828],eax
   17bea:	mov    DWORD PTR [ebp-0x838],ebx
   17bf0:	xor    eax,eax
   17bf2:	lea    edi,[ebp-0x834]
   17bf8:	stos   DWORD PTR es:[edi],eax
   17bf9:	push   ebx
   17bfa:	lea    eax,[ebp-0x838]
   17c00:	push   eax
   17c01:	push   esi
   17c02:	push   DWORD PTR [ebp-0x828]
   17c08:	lea    eax,[ebp-0x830]
   17c0e:	push   eax
   17c0f:	push   ebx
   17c10:	push   ebx
   17c11:	push   ebx
   17c12:	push   DWORD PTR [ebp-0x824]
   17c18:	call   0x11b58
   17c1d:	call   eax
   17c1f:	cmp    eax,ebx
   17c21:	jl     0x17c48
   17c23:	mov    ecx,DWORD PTR [ebp-0x82c]
   17c29:	mov    edi,DWORD PTR [ebp+0x8]
   17c2c:	mov    esi,DWORD PTR [ebp-0x828]
   17c32:	xor    eax,eax
   17c34:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
   17c36:	sete   al
   17c39:	mov    BYTE PTR [ebp-0x81d],al
   17c3f:	jmp    0x17c48
   17c41:	xor    eax,eax
   17c43:	inc    eax
   17c44:	ret    
   17c45:	mov    esp,DWORD PTR [ebp-0x18]
   17c48:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   17c4f:	push   DWORD PTR [ebp-0x824]
   17c55:	call   0x119de
   17c5a:	call   eax
   17c5c:	mov    al,BYTE PTR [ebp-0x81d]
   17c62:	call   0x1ded8
   17c67:	ret    0x8
   17c6a:	int3   
   17c6b:	int3   
   17c6c:	int3   
   17c6d:	int3   
   17c6e:	int3   
   17c6f:	int3   
   17c70:	push   0x874
   17c75:	push   0x772a8
   17c7a:	call   0x1de90
   17c7f:	mov    eax,DWORD PTR [ebp+0x8]
   17c82:	mov    DWORD PTR [ebp-0x830],eax
   17c88:	xor    ebx,ebx
   17c8a:	mov    BYTE PTR [ebp-0x81d],bl
   17c90:	xor    eax,eax
   17c92:	mov    WORD PTR [ebp-0x81c],ax
   17c99:	push   0x7fe
   17c9e:	push   ebx
   17c9f:	lea    eax,[ebp-0x81a]
   17ca5:	push   eax
   17ca6:	call   0x1db4c
   17cab:	add    esp,0xc
   17cae:	push   0x1e8da
   17cb3:	push   0x15
   17cb5:	push   0x1e852
   17cba:	call   0x16c26
   17cbf:	mov    edx,eax
   17cc1:	mov    cx,WORD PTR [eax]
   17cc4:	inc    eax
   17cc5:	inc    eax
   17cc6:	cmp    cx,bx
   17cc9:	jne    0x17cc1
   17ccb:	sub    eax,edx
   17ccd:	lea    edi,[ebp-0x81c]
   17cd3:	dec    edi
   17cd4:	dec    edi
   17cd5:	mov    cx,WORD PTR [edi+0x2]
   17cd9:	inc    edi
   17cda:	inc    edi
   17cdb:	cmp    cx,bx
   17cde:	jne    0x17cd5
   17ce0:	mov    ecx,eax
   17ce2:	mov    esi,edx
   17ce4:	shr    ecx,0x2
   17ce7:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17ce9:	mov    ecx,eax
   17ceb:	and    ecx,0x3
   17cee:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17cf0:	mov    eax,0x77408
   17cf5:	mov    edx,eax
   17cf7:	mov    cx,WORD PTR [eax]
   17cfa:	inc    eax
   17cfb:	inc    eax
   17cfc:	cmp    cx,bx
   17cff:	jne    0x17cf7
   17d01:	sub    eax,edx
   17d03:	lea    edi,[ebp-0x81c]
   17d09:	dec    edi
   17d0a:	dec    edi
   17d0b:	mov    cx,WORD PTR [edi+0x2]
   17d0f:	inc    edi
   17d10:	inc    edi
   17d11:	cmp    cx,bx
   17d14:	jne    0x17d0b
   17d16:	mov    ecx,eax
   17d18:	mov    esi,edx
   17d1a:	shr    ecx,0x2
   17d1d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17d1f:	mov    ecx,eax
   17d21:	and    ecx,0x3
   17d24:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17d26:	push   0x1e8a0
   17d2b:	push   0x4
   17d2d:	push   0x1e612
   17d32:	call   0x16c26
   17d37:	mov    edx,eax
   17d39:	mov    cx,WORD PTR [eax]
   17d3c:	inc    eax
   17d3d:	inc    eax
   17d3e:	cmp    cx,bx
   17d41:	jne    0x17d39
   17d43:	sub    eax,edx
   17d45:	lea    edi,[ebp-0x81c]
   17d4b:	dec    edi
   17d4c:	dec    edi
   17d4d:	mov    cx,WORD PTR [edi+0x2]
   17d51:	inc    edi
   17d52:	inc    edi
   17d53:	cmp    cx,bx
   17d56:	jne    0x17d4d
   17d58:	mov    ecx,eax
   17d5a:	mov    esi,edx
   17d5c:	shr    ecx,0x2
   17d5f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17d61:	mov    ecx,eax
   17d63:	and    ecx,0x3
   17d66:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17d68:	lea    eax,[ebp-0x81c]
   17d6e:	push   eax
   17d6f:	lea    eax,[ebp-0x884]
   17d75:	push   eax
   17d76:	call   DWORD PTR ds:0x1f008
   17d7c:	mov    DWORD PTR [ebp-0x824],ebx
   17d82:	xor    eax,eax
   17d84:	lea    edi,[ebp-0x850]
   17d8a:	stos   DWORD PTR es:[edi],eax
   17d8b:	stos   DWORD PTR es:[edi],eax
   17d8c:	stos   DWORD PTR es:[edi],eax
   17d8d:	stos   DWORD PTR es:[edi],eax
   17d8e:	stos   DWORD PTR es:[edi],eax
   17d8f:	mov    DWORD PTR [ebp-0x82c],ebx
   17d95:	xor    eax,eax
   17d97:	lea    edi,[ebp-0x828]
   17d9d:	stos   DWORD PTR es:[edi],eax
   17d9e:	mov    DWORD PTR [ebp-0x854],0x18
   17da8:	mov    DWORD PTR [ebp-0x850],ebx
   17dae:	mov    DWORD PTR [ebp-0x848],0x240
   17db8:	lea    eax,[ebp-0x884]
   17dbe:	mov    DWORD PTR [ebp-0x84c],eax
   17dc4:	mov    DWORD PTR [ebp-0x844],ebx
   17dca:	mov    DWORD PTR [ebp-0x840],ebx
   17dd0:	push   ebx
   17dd1:	push   ebx
   17dd2:	push   0x60
   17dd4:	push   ebx
   17dd5:	push   ebx
   17dd6:	push   0x80
   17ddb:	push   ebx
   17ddc:	lea    eax,[ebp-0x82c]
   17de2:	push   eax
   17de3:	lea    eax,[ebp-0x854]
   17de9:	push   eax
   17dea:	push   0x100002
   17def:	lea    eax,[ebp-0x824]
   17df5:	push   eax
   17df6:	call   0x118e2
   17dfb:	call   eax
   17dfd:	cmp    eax,ebx
   17dff:	jge    0x17e08
   17e01:	xor    al,al
   17e03:	jmp    0x17f0e
   17e08:	mov    DWORD PTR [ebp-0x4],ebx
   17e0b:	xor    eax,eax
   17e0d:	lea    edi,[ebp-0x82c]
   17e13:	stos   DWORD PTR es:[edi],eax
   17e14:	stos   DWORD PTR es:[edi],eax
   17e15:	xor    edi,edi
   17e17:	mov    esi,0x10000
   17e1c:	mov    DWORD PTR [ebp-0x834],edi
   17e22:	mov    eax,DWORD PTR [ebp+0xc]
   17e25:	cmp    edi,eax
   17e27:	jae    0x17e72
   17e29:	mov    DWORD PTR [ebp-0x83c],ebx
   17e2f:	mov    DWORD PTR [ebp-0x83c],edi
   17e35:	mov    DWORD PTR [ebp-0x838],ebx
   17e3b:	sub    eax,edi
   17e3d:	cmp    eax,esi
   17e3f:	jb     0x17e43
   17e41:	mov    eax,esi
   17e43:	push   ebx
   17e44:	push   ebx
   17e45:	push   eax
   17e46:	mov    eax,DWORD PTR [ebp-0x830]
   17e4c:	add    eax,edi
   17e4e:	push   eax
   17e4f:	lea    eax,[ebp-0x82c]
   17e55:	push   eax
   17e56:	push   ebx
   17e57:	push   ebx
   17e58:	push   ebx
   17e59:	push   DWORD PTR [ebp-0x824]
   17e5f:	call   0x11bac
   17e64:	call   eax
   17e66:	cmp    eax,ebx
   17e68:	jl     0x17ef4
   17e6e:	add    edi,esi
   17e70:	jmp    0x17e1c
   17e72:	mov    BYTE PTR [ebp-0x81d],0x1
   17e79:	mov    DWORD PTR [ebp-0x87c],ebx
   17e7f:	push   0x9
   17e81:	pop    ecx
   17e82:	xor    eax,eax
   17e84:	lea    edi,[ebp-0x878]
   17e8a:	rep stos DWORD PTR es:[edi],eax
   17e8c:	mov    eax,DWORD PTR [ebp+0x10]
   17e8f:	mov    DWORD PTR [ebp-0x86c],eax
   17e95:	mov    ecx,DWORD PTR [ebp+0x14]
   17e98:	mov    DWORD PTR [ebp-0x868],ecx
   17e9e:	mov    DWORD PTR [ebp-0x874],eax
   17ea4:	mov    DWORD PTR [ebp-0x870],ecx
   17eaa:	mov    DWORD PTR [ebp-0x864],eax
   17eb0:	mov    DWORD PTR [ebp-0x860],ecx
   17eb6:	mov    DWORD PTR [ebp-0x87c],eax
   17ebc:	mov    DWORD PTR [ebp-0x878],ecx
   17ec2:	mov    DWORD PTR [ebp-0x85c],0x80
   17ecc:	push   0x4
   17ece:	push   0x28
   17ed0:	lea    eax,[ebp-0x87c]
   17ed6:	push   eax
   17ed7:	lea    eax,[ebp-0x82c]
   17edd:	push   eax
   17ede:	push   DWORD PTR [ebp-0x824]
   17ee4:	call   0x11b82
   17ee9:	call   eax
   17eeb:	jmp    0x17ef4
   17eed:	xor    eax,eax
   17eef:	inc    eax
   17ef0:	ret    
   17ef1:	mov    esp,DWORD PTR [ebp-0x18]
   17ef4:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   17efb:	push   DWORD PTR [ebp-0x824]
   17f01:	call   0x119de
   17f06:	call   eax
   17f08:	mov    al,BYTE PTR [ebp-0x81d]
   17f0e:	call   0x1ded8
   17f13:	ret    0x10
   17f16:	int3   
   17f17:	int3   
   17f18:	int3   
   17f19:	int3   
   17f1a:	int3   
   17f1b:	int3   
   17f1c:	push   0x874
   17f21:	push   0x772c8
   17f26:	call   0x1de90
   17f2b:	xor    ebx,ebx
   17f2d:	mov    BYTE PTR [ebp-0x81d],bl
   17f33:	mov    BYTE PTR [ebp-0x81e],bl
   17f39:	mov    DWORD PTR [ebp-0x828],ebx
   17f3f:	mov    DWORD PTR [ebp-0x824],ebx
   17f45:	xor    eax,eax
   17f47:	mov    WORD PTR [ebp-0x81c],ax
   17f4e:	push   0x7fe
   17f53:	push   ebx
   17f54:	lea    eax,[ebp-0x81a]
   17f5a:	push   eax
   17f5b:	call   0x1db4c
   17f60:	add    esp,0xc
   17f63:	push   0x1e98a
   17f68:	push   0x1d
   17f6a:	push   0x1e94e
   17f6f:	call   0x16c26
   17f74:	mov    edx,eax
   17f76:	mov    cx,WORD PTR [eax]
   17f79:	inc    eax
   17f7a:	inc    eax
   17f7b:	cmp    cx,bx
   17f7e:	jne    0x17f76
   17f80:	sub    eax,edx
   17f82:	lea    edi,[ebp-0x81c]
   17f88:	dec    edi
   17f89:	dec    edi
   17f8a:	mov    cx,WORD PTR [edi+0x2]
   17f8e:	inc    edi
   17f8f:	inc    edi
   17f90:	cmp    cx,bx
   17f93:	jne    0x17f8a
   17f95:	mov    ecx,eax
   17f97:	mov    esi,edx
   17f99:	shr    ecx,0x2
   17f9c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17f9e:	mov    ecx,eax
   17fa0:	and    ecx,0x3
   17fa3:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17fa5:	mov    eax,0x77448
   17faa:	mov    edx,eax
   17fac:	mov    cx,WORD PTR [eax]
   17faf:	inc    eax
   17fb0:	inc    eax
   17fb1:	cmp    cx,bx
   17fb4:	jne    0x17fac
   17fb6:	sub    eax,edx
   17fb8:	lea    edi,[ebp-0x81c]
   17fbe:	dec    edi
   17fbf:	dec    edi
   17fc0:	mov    cx,WORD PTR [edi+0x2]
   17fc4:	inc    edi
   17fc5:	inc    edi
   17fc6:	cmp    cx,bx
   17fc9:	jne    0x17fc0
   17fcb:	mov    ecx,eax
   17fcd:	mov    esi,edx
   17fcf:	shr    ecx,0x2
   17fd2:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17fd4:	mov    ecx,eax
   17fd6:	and    ecx,0x3
   17fd9:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17fdb:	push   0x1e912
   17fe0:	push   0x4
   17fe2:	push   0x1e908
   17fe7:	call   0x16c26
   17fec:	mov    edx,eax
   17fee:	mov    cx,WORD PTR [eax]
   17ff1:	inc    eax
   17ff2:	inc    eax
   17ff3:	cmp    cx,bx
   17ff6:	jne    0x17fee
   17ff8:	sub    eax,edx
   17ffa:	lea    edi,[ebp-0x81c]
   18000:	dec    edi
   18001:	dec    edi
   18002:	mov    cx,WORD PTR [edi+0x2]
   18006:	inc    edi
   18007:	inc    edi
   18008:	cmp    cx,bx
   1800b:	jne    0x18002
   1800d:	mov    ecx,eax
   1800f:	mov    esi,edx
   18011:	shr    ecx,0x2
   18014:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18016:	mov    ecx,eax
   18018:	and    ecx,0x3
   1801b:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1801d:	lea    eax,[ebp-0x81c]
   18023:	push   eax
   18024:	lea    eax,[ebp-0x85c]
   1802a:	push   eax
   1802b:	call   DWORD PTR ds:0x1f008
   18031:	xor    eax,eax
   18033:	lea    edi,[ebp-0x850]
   18039:	stos   DWORD PTR es:[edi],eax
   1803a:	stos   DWORD PTR es:[edi],eax
   1803b:	stos   DWORD PTR es:[edi],eax
   1803c:	stos   DWORD PTR es:[edi],eax
   1803d:	stos   DWORD PTR es:[edi],eax
   1803e:	mov    DWORD PTR [ebp-0x834],ebx
   18044:	xor    eax,eax
   18046:	lea    edi,[ebp-0x830]
   1804c:	stos   DWORD PTR es:[edi],eax
   1804d:	mov    DWORD PTR [ebp-0x82c],ebx
   18053:	mov    DWORD PTR [ebp-0x854],0x18
   1805d:	mov    DWORD PTR [ebp-0x850],ebx
   18063:	mov    DWORD PTR [ebp-0x848],0x240
   1806d:	lea    eax,[ebp-0x85c]
   18073:	mov    DWORD PTR [ebp-0x84c],eax
   18079:	mov    DWORD PTR [ebp-0x844],ebx
   1807f:	mov    DWORD PTR [ebp-0x840],ebx
   18085:	push   ebx
   18086:	push   ebx
   18087:	push   ebx
   18088:	push   0x1
   1808a:	push   0x7
   1808c:	push   ebx
   1808d:	push   ebx
   1808e:	lea    eax,[ebp-0x834]
   18094:	push   eax
   18095:	lea    eax,[ebp-0x854]
   1809b:	push   eax
   1809c:	push   0x89
   180a1:	lea    eax,[ebp-0x82c]
   180a7:	push   eax
   180a8:	call   0x118e2
   180ad:	call   eax
   180af:	cmp    eax,ebx
   180b1:	jge    0x180ba
   180b3:	xor    al,al
   180b5:	jmp    0x181da
   180ba:	mov    DWORD PTR [ebp-0x884],ebx
   180c0:	push   0x9
   180c2:	pop    ecx
   180c3:	xor    eax,eax
   180c5:	lea    edi,[ebp-0x880]
   180cb:	rep stos DWORD PTR es:[edi],eax
   180cd:	mov    DWORD PTR [ebp-0x4],ebx
   180d0:	push   0x4
   180d2:	push   0x28
   180d4:	lea    eax,[ebp-0x884]
   180da:	push   eax
   180db:	lea    eax,[ebp-0x834]
   180e1:	push   eax
   180e2:	push   DWORD PTR [ebp-0x82c]
   180e8:	call   0x11bd6
   180ed:	call   eax
   180ef:	cmp    eax,ebx
   180f1:	jl     0x1816f
   180f3:	mov    esi,0x54502
   180f8:	push   esi
   180f9:	call   0x10a06
   180fe:	mov    edi,eax
   18100:	push   esi
   18101:	push   0x1f0a0
   18106:	push   edi
   18107:	call   0x1db58
   1810c:	add    esp,0x10
   1810f:	push   0x25
   18111:	push   0x735a4
   18116:	push   esi
   18117:	push   edi
   18118:	call   0x10a78
   1811d:	lea    eax,[ebp-0x828]
   18123:	push   eax
   18124:	push   esi
   18125:	push   edi
   18126:	lea    eax,[ebp-0x83c]
   1812c:	push   eax
   1812d:	call   0x1a0e6
   18132:	mov    BYTE PTR [ebp-0x83c],bl
   18138:	mov    eax,DWORD PTR [ebp-0x838]
   1813e:	mov    DWORD PTR [ebp-0x824],eax
   18144:	cmp    eax,ebx
   18146:	je     0x18161
   18148:	push   DWORD PTR [ebp-0x828]
   1814e:	push   eax
   1814f:	call   0x17a3c
   18154:	test   al,al
   18156:	je     0x18161
   18158:	mov    BYTE PTR [ebp-0x81d],0x1
   1815f:	jmp    0x1816f
   18161:	mov    BYTE PTR [ebp-0x81d],0x1
   18168:	mov    BYTE PTR [ebp-0x81e],0x1
   1816f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   18176:	jmp    0x18188
   18178:	xor    eax,eax
   1817a:	inc    eax
   1817b:	ret    
   1817c:	mov    esp,DWORD PTR [ebp-0x18]
   1817f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   18186:	xor    ebx,ebx
   18188:	push   DWORD PTR [ebp-0x82c]
   1818e:	call   0x119de
   18193:	call   eax
   18195:	cmp    BYTE PTR [ebp-0x81e],bl
   1819b:	je     0x181c0
   1819d:	push   DWORD PTR [ebp-0x880]
   181a3:	push   DWORD PTR [ebp-0x884]
   181a9:	push   DWORD PTR [ebp-0x828]
   181af:	push   DWORD PTR [ebp-0x824]
   181b5:	call   0x17c70
   181ba:	mov    BYTE PTR [ebp-0x81d],al
   181c0:	cmp    DWORD PTR [ebp-0x824],ebx
   181c6:	je     0x181d4
   181c8:	push   DWORD PTR [ebp-0x824]
   181ce:	call   0x10a3a
   181d3:	pop    ecx
   181d4:	mov    al,BYTE PTR [ebp-0x81d]
   181da:	call   0x1ded8
   181df:	ret    
   181e0:	int3   
   181e1:	int3   
   181e2:	int3   
   181e3:	int3   
   181e4:	int3   
   181e5:	int3   
   181e6:	mov    edi,edi
   181e8:	push   ebp
   181e9:	mov    ebp,esp
   181eb:	sub    esp,0xbc
   181f1:	mov    eax,ds:0x7751c
   181f6:	xor    eax,ebp
   181f8:	mov    DWORD PTR [ebp-0x4],eax
   181fb:	push   ebx
   181fc:	push   edi
   181fd:	push   0x1e9cc
   18202:	push   0xb
   18204:	push   0x1e9b4
   18209:	call   0x16c26
   1820e:	push   eax
   1820f:	lea    eax,[ebp-0xbc]
   18215:	push   eax
   18216:	call   DWORD PTR ds:0x1f008
   1821c:	xor    eax,eax
   1821e:	lea    edi,[ebp-0xb0]
   18224:	stos   DWORD PTR es:[edi],eax
   18225:	stos   DWORD PTR es:[edi],eax
   18226:	stos   DWORD PTR es:[edi],eax
   18227:	stos   DWORD PTR es:[edi],eax
   18228:	xor    ebx,ebx
   1822a:	push   ebx
   1822b:	stos   DWORD PTR es:[edi],eax
   1822c:	push   ebx
   1822d:	push   ebx
   1822e:	push   0x1
   18230:	xor    eax,eax
   18232:	push   0x7
   18234:	push   ebx
   18235:	mov    DWORD PTR [ebp-0x94],ebx
   1823b:	lea    edi,[ebp-0x90]
   18241:	stos   DWORD PTR es:[edi],eax
   18242:	lea    eax,[ebp-0xbc]
   18248:	mov    DWORD PTR [ebp-0xac],eax
   1824e:	push   ebx
   1824f:	lea    eax,[ebp-0x94]
   18255:	push   eax
   18256:	lea    eax,[ebp-0xb4]
   1825c:	push   eax
   1825d:	push   0x89
   18262:	lea    eax,[ebp-0x8c]
   18268:	push   eax
   18269:	mov    DWORD PTR [ebp-0x8c],ebx
   1826f:	mov    DWORD PTR [ebp-0xb4],0x18
   18279:	mov    DWORD PTR [ebp-0xb0],ebx
   1827f:	mov    DWORD PTR [ebp-0xa8],0x240
   18289:	mov    DWORD PTR [ebp-0xa4],ebx
   1828f:	mov    DWORD PTR [ebp-0xa0],ebx
   18295:	call   0x118e2
   1829a:	call   eax
   1829c:	test   eax,eax
   1829e:	jge    0x182a7
   182a0:	xor    al,al
   182a2:	jmp    0x18363
   182a7:	push   esi
   182a8:	mov    esi,0x20c
   182ad:	push   esi
   182ae:	call   0x10a06
   182b3:	pop    ecx
   182b4:	push   0x1
   182b6:	mov    edi,eax
   182b8:	push   esi
   182b9:	push   edi
   182ba:	lea    eax,[ebp-0x94]
   182c0:	push   eax
   182c1:	push   DWORD PTR [ebp-0x8c]
   182c7:	cmp    edi,ebx
   182c9:	setne  BYTE PTR [ebp-0x9c]
   182d0:	call   0x118b8
   182d5:	call   eax
   182d7:	push   DWORD PTR [ebp-0x8c]
   182dd:	mov    esi,eax
   182df:	call   0x119de
   182e4:	call   eax
   182e6:	cmp    esi,ebx
   182e8:	pop    esi
   182e9:	jge    0x182fc
   182eb:	cmp    BYTE PTR [ebp-0x9c],bl
   182f1:	je     0x182a0
   182f3:	push   edi
   182f4:	call   0x10a3a
   182f9:	pop    ecx
   182fa:	jmp    0x182a0
   182fc:	push   0x6
   182fe:	push   0x1
   18300:	lea    eax,[ebp-0x84]
   18306:	push   eax
   18307:	push   DWORD PTR [edi+0x8]
   1830a:	call   0x107b2
   1830f:	mov    ecx,0x77408
   18314:	lea    eax,[ebp-0x84]
   1831a:	mov    dx,WORD PTR [eax]
   1831d:	cmp    dx,WORD PTR [ecx]
   18320:	jne    0x18340
   18322:	cmp    dx,bx
   18325:	je     0x1833c
   18327:	mov    dx,WORD PTR [eax+0x2]
   1832b:	cmp    dx,WORD PTR [ecx+0x2]
   1832f:	jne    0x18340
   18331:	add    eax,0x4
   18334:	add    ecx,0x4
   18337:	cmp    dx,bx
   1833a:	jne    0x1831a
   1833c:	xor    eax,eax
   1833e:	jmp    0x18345
   18340:	sbb    eax,eax
   18342:	sbb    eax,0xffffffff
   18345:	cmp    eax,ebx
   18347:	sete   BYTE PTR [ebp-0x85]
   1834e:	cmp    BYTE PTR [ebp-0x9c],bl
   18354:	je     0x1835d
   18356:	push   edi
   18357:	call   0x10a3a
   1835c:	pop    ecx
   1835d:	mov    al,BYTE PTR [ebp-0x85]
   18363:	mov    ecx,DWORD PTR [ebp-0x4]
   18366:	pop    edi
   18367:	xor    ecx,ebp
   18369:	pop    ebx
   1836a:	call   0x1dae7
   1836f:	leave  
   18370:	ret    
   18371:	int3   
   18372:	int3   
   18373:	int3   
   18374:	int3   
   18375:	int3   
   18376:	push   0x0
   18378:	push   0x19
   1837a:	call   0x10990
   1837f:	test   edx,edx
   18381:	jl     0x183b4
   18383:	jg     0x1838a
   18385:	cmp    eax,0x3
   18388:	jbe    0x183b4
   1838a:	call   0x1a302
   1838f:	push   0x1ea6c
   18394:	push   0x34
   18396:	push   0x1ea02
   1839b:	call   0x16c26
   183a0:	mov    edx,0x776b8
   183a5:	movzx  ecx,WORD PTR [eax]
   183a8:	inc    eax
   183a9:	mov    WORD PTR [edx],cx
   183ac:	inc    eax
   183ad:	inc    edx
   183ae:	inc    edx
   183af:	test   cx,cx
   183b2:	jne    0x183a5
   183b4:	ret    
   183b5:	int3   
   183b6:	int3   
   183b7:	int3   
   183b8:	int3   
   183b9:	int3   
   183ba:	mov    edi,edi
   183bc:	push   ebp
   183bd:	mov    ebp,esp
   183bf:	push   esi
   183c0:	mov    esi,ecx
   183c2:	lea    ecx,[esi+0x4]
   183c5:	mov    DWORD PTR [esi],0x735dc
   183cb:	mov    BYTE PTR [ecx+0x8],0x0
   183cf:	call   0x14696
   183d4:	lea    ecx,[esi+0x14]
   183d7:	mov    BYTE PTR [ecx+0x8],0x0
   183db:	call   0x144e4
   183e0:	mov    eax,DWORD PTR [ebp+0x8]
   183e3:	mov    DWORD PTR [esi+0x24],eax
   183e6:	mov    eax,DWORD PTR [ebp+0xc]
   183e9:	mov    DWORD PTR [esi+0x28],eax
   183ec:	mov    eax,esi
   183ee:	pop    esi
   183ef:	pop    ebp
   183f0:	ret    0x8
   183f3:	int3   
   183f4:	int3   
   183f5:	int3   
   183f6:	int3   
   183f7:	int3   
   183f8:	mov    edi,edi
   183fa:	push   esi
   183fb:	mov    esi,ecx
   183fd:	lea    ecx,[esi+0x14]
   18400:	mov    DWORD PTR [esi],0x735dc
   18406:	call   0x160f2
   1840b:	lea    ecx,[esi+0x4]
   1840e:	pop    esi
   1840f:	jmp    0x16a34
   18414:	int3   
   18415:	int3   
   18416:	int3   
   18417:	int3   
   18418:	int3   
   18419:	int3   
   1841a:	mov    edi,edi
   1841c:	push   ebp
   1841d:	mov    ebp,esp
   1841f:	sub    esp,0xf4
   18425:	push   ebx
   18426:	push   esi
   18427:	push   edi
   18428:	mov    esi,ecx
   1842a:	call   0x16f36
   1842f:	push   DWORD PTR [ebp+0x8]
   18432:	lea    eax,[ebp-0x4]
   18435:	lea    edi,[esi+0x4]
   18438:	push   eax
   18439:	mov    ecx,edi
   1843b:	call   0x13d22
   18440:	mov    ebx,DWORD PTR [ebp-0x4]
   18443:	cmp    ebx,DWORD PTR [esi+0x8]
   18446:	je     0x18491
   18448:	mov    eax,DWORD PTR [esi+0x18]
   1844b:	lea    ecx,[ebp+0x8]
   1844e:	mov    DWORD PTR [ebp+0x8],eax
   18451:	call   0x13d02
   18456:	mov    edi,DWORD PTR [eax]
   18458:	lea    eax,[ebx+0x58]
   1845b:	add    esi,0x14
   1845e:	inc    edi
   1845f:	push   eax
   18460:	mov    ecx,esi
   18462:	mov    DWORD PTR [ebp+0x8],edi
   18465:	mov    DWORD PTR [ebp-0x4],eax
   18468:	call   0x14ddc
   1846d:	lea    eax,[ebp+0x8]
   18470:	push   eax
   18471:	lea    eax,[ebp-0xc]
   18474:	push   eax
   18475:	mov    ecx,esi
   18477:	call   0x160c8
   1847c:	push   DWORD PTR [ebp+0xc]
   1847f:	lea    ecx,[ebx+0x18]
   18482:	call   0x12ad2
   18487:	mov    eax,DWORD PTR [ebp-0x4]
   1848a:	mov    DWORD PTR [eax],edi
   1848c:	jmp    0x18526
   18491:	lea    ecx,[ebp-0x54]
   18494:	call   0x1370e
   18499:	xor    eax,eax
   1849b:	cmp    DWORD PTR [esi+0x20],eax
   1849e:	je     0x184b1
   184a0:	mov    eax,DWORD PTR [esi+0x18]
   184a3:	lea    ecx,[ebp-0x4]
   184a6:	mov    DWORD PTR [ebp-0x4],eax
   184a9:	call   0x13d02
   184ae:	mov    eax,DWORD PTR [eax]
   184b0:	inc    eax
   184b1:	push   DWORD PTR [ebp+0xc]
   184b4:	lea    ecx,[ebp-0x54]
   184b7:	mov    DWORD PTR [ebp-0x4],eax
   184ba:	mov    DWORD PTR [ebp-0x14],eax
   184bd:	call   0x12ad2
   184c2:	lea    eax,[ebp-0x54]
   184c5:	push   eax
   184c6:	push   DWORD PTR [ebp+0x8]
   184c9:	lea    ecx,[ebp-0xf4]
   184cf:	call   0x1363e
   184d4:	lea    eax,[ebp-0xf4]
   184da:	push   eax
   184db:	lea    ecx,[ebp-0xa4]
   184e1:	call   0x13a04
   184e6:	lea    eax,[ebp-0xa4]
   184ec:	push   eax
   184ed:	lea    eax,[ebp-0xc]
   184f0:	push   eax
   184f1:	mov    ecx,edi
   184f3:	call   0x16a0a
   184f8:	lea    ecx,[ebp-0xa4]
   184fe:	call   0x12b46
   18503:	lea    ecx,[ebp-0xf4]
   18509:	call   0x12b46
   1850e:	lea    eax,[ebp-0x4]
   18511:	push   eax
   18512:	lea    eax,[ebp-0xc]
   18515:	push   eax
   18516:	lea    ecx,[esi+0x14]
   18519:	call   0x160c8
   1851e:	lea    ecx,[ebp-0x54]
   18521:	call   0x11f44
   18526:	pop    edi
   18527:	pop    esi
   18528:	pop    ebx
   18529:	leave  
   1852a:	ret    0x8
   1852d:	int3   
   1852e:	int3   
   1852f:	int3   
   18530:	int3   
   18531:	int3   
   18532:	mov    edi,edi
   18534:	push   ebp
   18535:	mov    ebp,esp
   18537:	sub    esp,0x10
   1853a:	call   0x1a270
   1853f:	test   al,al
   18541:	jne    0x1854b
   18543:	mov    eax,DWORD PTR [ebp+0x8]
   18546:	jmp    0x185df
   1854b:	push   esi
   1854c:	mov    esi,DWORD PTR [ebp+0x8]
   1854f:	push   0xffffffff
   18551:	push   esi
   18552:	lea    ecx,[ebp-0x8]
   18555:	call   0x111e4
   1855a:	mov    ecx,DWORD PTR ds:0x78a48
   18560:	lea    eax,[ebp-0x8]
   18563:	push   eax
   18564:	lea    eax,[ebp+0x8]
   18567:	push   eax
   18568:	call   0x14212
   1856d:	mov    eax,DWORD PTR [ebp+0x8]
   18570:	mov    ecx,DWORD PTR ds:0x78a48
   18576:	cmp    eax,DWORD PTR [ecx+0x4]
   18579:	jne    0x185aa
   1857b:	lea    eax,[ebp-0x8]
   1857e:	push   eax
   1857f:	lea    ecx,[ebp-0x10]
   18582:	call   0x12b82
   18587:	mov    ecx,DWORD PTR ds:0x78a48
   1858d:	lea    eax,[ebp-0x10]
   18590:	push   eax
   18591:	lea    eax,[ebp-0x8]
   18594:	push   eax
   18595:	call   0x16fe8
   1859a:	mov    ecx,eax
   1859c:	call   0x12ba4
   185a1:	push   DWORD PTR [ebp-0x10]
   185a4:	call   0x10a3a
   185a9:	pop    ecx
   185aa:	mov    ecx,DWORD PTR ds:0x78a48
   185b0:	lea    eax,[ebp-0x8]
   185b3:	push   eax
   185b4:	lea    eax,[ebp+0x8]
   185b7:	push   eax
   185b8:	call   0x14212
   185bd:	mov    eax,DWORD PTR [ebp+0x8]
   185c0:	mov    ecx,DWORD PTR ds:0x78a48
   185c6:	cmp    eax,DWORD PTR [ecx+0x4]
   185c9:	je     0x185ce
   185cb:	mov    esi,DWORD PTR [eax+0x14]
   185ce:	call   0x1a28c
   185d3:	push   DWORD PTR [ebp-0x8]
   185d6:	call   0x10a3a
   185db:	pop    ecx
   185dc:	mov    eax,esi
   185de:	pop    esi
   185df:	leave  
   185e0:	ret    0x4
   185e3:	int3   
   185e4:	int3   
   185e5:	int3   
   185e6:	int3   
   185e7:	int3   
   185e8:	mov    edi,edi
   185ea:	push   ebp
   185eb:	mov    ebp,esp
   185ed:	push   esi
   185ee:	mov    esi,ecx
   185f0:	call   0x183f8
   185f5:	test   BYTE PTR [ebp+0x8],0x1
   185f9:	je     0x18602
   185fb:	push   esi
   185fc:	call   0x10a3a
   18601:	pop    ecx
   18602:	mov    eax,esi
   18604:	pop    esi
   18605:	pop    ebp
   18606:	ret    0x4
   18609:	int3   
   1860a:	int3   
   1860b:	int3   
   1860c:	int3   
   1860d:	int3   
   1860e:	mov    edi,edi
   18610:	push   ebp
   18611:	mov    ebp,esp
   18613:	push   esi
   18614:	push   DWORD PTR [ebp+0xc]
   18617:	mov    esi,ecx
   18619:	push   DWORD PTR [ebp+0x8]
   1861c:	call   0x183ba
   18621:	mov    eax,esi
   18623:	pop    esi
   18624:	pop    ebp
   18625:	ret    0x8
   18628:	int3   
   18629:	int3   
   1862a:	int3   
   1862b:	int3   
   1862c:	int3   
   1862d:	int3   
   1862e:	push   0x33c
   18633:	push   0x772e8
   18638:	call   0x1de90
   1863d:	mov    esi,DWORD PTR [ebp+0xc]
   18640:	mov    DWORD PTR [ebp-0x32c],esi
   18646:	call   DWORD PTR ds:0x1f000
   1864c:	xor    ebx,ebx
   1864e:	cmp    BYTE PTR [ebp+0x10],bl
   18651:	jne    0x1868f
   18653:	push   esi
   18654:	mov    ecx,DWORD PTR ds:0x77550
   1865a:	call   0x15e6c
   1865f:	mov    edi,eax
   18661:	push   esi
   18662:	mov    ecx,DWORD PTR ds:0x77550
   18668:	call   0x166a4
   1866d:	mov    eax,edi
   1866f:	dec    eax
   18670:	je     0x18684
   18672:	dec    eax
   18673:	je     0x18680
   18675:	dec    eax
   18676:	jne    0x1886a
   1867c:	push   0xa
   1867e:	jmp    0x18685
   18680:	push   0x2
   18682:	jmp    0x18685
   18684:	push   ebx
   18685:	call   0x1106a
   1868a:	jmp    0x1886a
   1868f:	mov    DWORD PTR [ebp-0x320],ebx
   18695:	xor    eax,eax
   18697:	lea    edi,[ebp-0x326]
   1869d:	stos   DWORD PTR es:[edi],eax
   1869e:	stos   WORD PTR es:[edi],ax
   186a0:	xor    eax,eax
   186a2:	mov    WORD PTR [ebp-0x21c],ax
   186a9:	push   0x1fc
   186ae:	push   ebx
   186af:	lea    eax,[ebp-0x21a]
   186b5:	push   eax
   186b6:	call   0x1db4c
   186bb:	add    esp,0xc
   186be:	lea    eax,[ebp-0x21c]
   186c4:	mov    DWORD PTR [ebp-0x324],eax
   186ca:	xor    eax,eax
   186cc:	mov    WORD PTR [ebp-0x328],ax
   186d3:	mov    eax,0x1fe
   186d8:	mov    WORD PTR [ebp-0x326],ax
   186df:	mov    DWORD PTR [ebp-0x34c],0x18
   186e9:	mov    DWORD PTR [ebp-0x348],ebx
   186ef:	mov    DWORD PTR [ebp-0x340],0x200
   186f9:	mov    DWORD PTR [ebp-0x344],ebx
   186ff:	mov    DWORD PTR [ebp-0x33c],ebx
   18705:	mov    DWORD PTR [ebp-0x338],ebx
   1870b:	mov    DWORD PTR [ebp-0x334],esi
   18711:	mov    DWORD PTR [ebp-0x330],ebx
   18717:	lea    eax,[ebp-0x334]
   1871d:	push   eax
   1871e:	lea    eax,[ebp-0x34c]
   18724:	push   eax
   18725:	push   0x1f0fff
   1872a:	lea    eax,[ebp-0x320]
   18730:	push   eax
   18731:	call   0x11714
   18736:	call   eax
   18738:	test   eax,eax
   1873a:	jl     0x1886a
   18740:	lea    eax,[ebp-0x328]
   18746:	push   eax
   18747:	push   DWORD PTR [ebp-0x320]
   1874d:	call   0x12008
   18752:	cmp    eax,ebx
   18754:	jl     0x1885d
   1875a:	movzx  eax,WORD PTR [ebp-0x328]
   18761:	shr    eax,1
   18763:	xor    ecx,ecx
   18765:	mov    WORD PTR [ebp+eax*2-0x21c],cx
   1876d:	push   DWORD PTR [ebp-0x320]
   18773:	call   0x1209a
   18778:	lea    eax,[ebp-0x21c]
   1877e:	push   eax
   1877f:	call   0x10e3a
   18784:	cmp    eax,ebx
   18786:	je     0x187ab
   18788:	push   eax
   18789:	push   esi
   1878a:	mov    ecx,DWORD PTR ds:0x77550
   18790:	call   0x16be4
   18795:	push   DWORD PTR [ebp-0x320]
   1879b:	push   DWORD PTR [ebp-0x320]
   187a1:	call   0x1209a
   187a6:	push   eax
   187a7:	push   esi
   187a8:	push   ebx
   187a9:	jmp    0x18829
   187ab:	push   0x1eab2
   187b0:	push   0x9
   187b2:	push   0x1ea9e
   187b7:	call   0x16c26
   187bc:	push   eax
   187bd:	lea    eax,[ebp-0x328]
   187c3:	push   eax
   187c4:	call   0x10e8a
   187c9:	test   al,al
   187cb:	je     0x18830
   187cd:	cmp    DWORD PTR ds:0x78a24,ebx
   187d3:	jne    0x18806
   187d5:	mov    DWORD PTR ds:0x78a24,0x1
   187df:	mov    DWORD PTR [ebp-0x4],ebx
   187e2:	call   0x17f1c
   187e7:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   187ee:	jmp    0x18806
   187f0:	xor    eax,eax
   187f2:	inc    eax
   187f3:	ret    
   187f4:	mov    esp,DWORD PTR [ebp-0x18]
   187f7:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   187fe:	xor    ebx,ebx
   18800:	mov    esi,DWORD PTR [ebp-0x32c]
   18806:	cmp    DWORD PTR ds:0x77fa4,ebx
   1880c:	jne    0x18814
   1880e:	mov    DWORD PTR ds:0x77fa4,esi
   18814:	push   DWORD PTR [ebp-0x320]
   1881a:	push   DWORD PTR [ebp-0x320]
   18820:	call   0x1209a
   18825:	push   eax
   18826:	push   esi
   18827:	push   0x1
   18829:	call   0x13808
   1882e:	jmp    0x1885d
   18830:	lea    eax,[ebp-0x31c]
   18836:	push   eax
   18837:	call   0x1101a
   1883c:	test   al,al
   1883e:	je     0x1885d
   18840:	lea    eax,[ebp-0x31c]
   18846:	push   eax
   18847:	lea    eax,[ebp-0x328]
   1884d:	push   eax
   1884e:	call   0x10e8a
   18853:	test   al,al
   18855:	je     0x1885d
   18857:	push   esi
   18858:	call   0x120ca
   1885d:	push   DWORD PTR [ebp-0x320]
   18863:	call   0x119de
   18868:	call   eax
   1886a:	call   0x1ded8
   1886f:	ret    0xc
   18872:	int3   
   18873:	int3   
   18874:	int3   
   18875:	int3   
   18876:	int3   
   18877:	int3   
   18878:	mov    edi,edi
   1887a:	push   ebp
   1887b:	mov    ebp,esp
   1887d:	push   ecx
   1887e:	cli    
   1887f:	mov    eax,cr0
   18882:	mov    DWORD PTR [ebp-0x4],eax
   18885:	and    eax,0xfffeffff
   1888a:	mov    cr0,eax
   1888d:	push   0x176fc
   18892:	push   DWORD PTR ds:0x77eec
   18898:	call   0x1993c
   1889d:	push   0x0
   1889f:	push   0x1862e
   188a4:	mov    ds:0x77ef0,eax
   188a9:	call   0x11792
   188ae:	call   eax
   188b0:	push   0x175e8
   188b5:	call   0x1173e
   188ba:	call   eax
   188bc:	mov    eax,DWORD PTR [ebp-0x4]
   188bf:	mov    cr0,eax
   188c2:	sti    
   188c3:	leave  
   188c4:	ret    
   188c5:	int3   
   188c6:	int3   
   188c7:	int3   
   188c8:	int3   
   188c9:	int3   
   188ca:	mov    edi,edi
   188cc:	push   ebp
   188cd:	mov    ebp,esp
   188cf:	sub    esp,0x40
   188d2:	push   ebx
   188d3:	mov    ebx,DWORD PTR [ebp+0x8]
   188d6:	push   esi
   188d7:	test   bl,0x20
   188da:	je     0x18917
   188dc:	push   DWORD PTR [ebp+0x28]
   188df:	mov    esi,DWORD PTR ds:0x77ee8
   188e5:	push   DWORD PTR [ebp+0x24]
   188e8:	lea    ecx,[ebp-0x40]
   188eb:	push   DWORD PTR [ebp+0x20]
   188ee:	push   DWORD PTR [ebp+0x1c]
   188f1:	push   DWORD PTR [ebp+0x18]
   188f4:	push   DWORD PTR [ebp+0x14]
   188f7:	push   DWORD PTR [ebp+0xc]
   188fa:	call   0x13766
   188ff:	push   eax
   18900:	push   DWORD PTR [ebp+0xc]
   18903:	mov    ecx,esi
   18905:	call   0x1841a
   1890a:	lea    ecx,[ebp-0x40]
   1890d:	call   0x11f44
   18912:	jmp    0x18a4b
   18917:	push   DWORD PTR [ebp+0xc]
   1891a:	mov    ecx,DWORD PTR ds:0x77ee0
   18920:	call   0x1616e
   18925:	test   eax,eax
   18927:	jne    0x18935
   18929:	test   bl,0x1
   1892c:	jne    0x18935
   1892e:	xor    al,al
   18930:	jmp    0x18a4d
   18935:	push   DWORD PTR [ebp+0xc]
   18938:	mov    ecx,DWORD PTR ds:0x77ee0
   1893e:	call   0x16e2c
   18943:	mov    esi,eax
   18945:	test   bl,0x1
   18948:	je     0x18981
   1894a:	mov    eax,DWORD PTR [ebp+0x20]
   1894d:	push   DWORD PTR [ebp+0xc]
   18950:	mov    ecx,esi
   18952:	mov    DWORD PTR [esi+0x20],eax
   18955:	call   0x12a44
   1895a:	push   DWORD PTR [ebp+0x10]
   1895d:	lea    ecx,[esi+0x8]
   18960:	call   0x12a44
   18965:	push   DWORD PTR [ebp+0x14]
   18968:	lea    ecx,[esi+0x10]
   1896b:	call   0x12a44
   18970:	push   DWORD PTR [ebp+0x18]
   18973:	lea    ecx,[esi+0x18]
   18976:	call   0x12a44
   1897b:	mov    eax,DWORD PTR [ebp+0x24]
   1897e:	mov    DWORD PTR [esi+0x24],eax
   18981:	mov    DWORD PTR [ebp+0x20],ebx
   18984:	and    DWORD PTR [ebp+0x20],0x2
   18988:	je     0x18998
   1898a:	mov    eax,DWORD PTR [ebp+0x28]
   1898d:	mov    ecx,DWORD PTR [eax]
   1898f:	mov    DWORD PTR [esi+0x28],ecx
   18992:	mov    eax,DWORD PTR [eax+0x4]
   18995:	mov    DWORD PTR [esi+0x2c],eax
   18998:	mov    DWORD PTR [ebp+0x14],ebx
   1899b:	and    DWORD PTR [ebp+0x14],0x4
   1899f:	je     0x189af
   189a1:	mov    eax,DWORD PTR [ebp+0x2c]
   189a4:	mov    ecx,DWORD PTR [eax]
   189a6:	mov    DWORD PTR [esi+0x30],ecx
   189a9:	mov    eax,DWORD PTR [eax+0x4]
   189ac:	mov    DWORD PTR [esi+0x34],eax
   189af:	test   bl,0x10
   189b2:	je     0x18a4b
   189b8:	cmp    DWORD PTR [esi+0xc],0x0
   189bc:	jbe    0x18a4b
   189c2:	mov    eax,ds:0x77ee0
   189c7:	mov    eax,DWORD PTR [eax+0x4]
   189ca:	push   edi
   189cb:	mov    edi,DWORD PTR [eax]
   189cd:	mov    DWORD PTR [ebp+0x18],edi
   189d0:	cmp    edi,eax
   189d2:	je     0x18a4a
   189d4:	push   DWORD PTR [ebp+0xc]
   189d7:	lea    ebx,[edi+0x10]
   189da:	push   ebx
   189db:	call   0x19884
   189e0:	test   al,al
   189e2:	je     0x18a35
   189e4:	lea    eax,[esi+0x8]
   189e7:	push   eax
   189e8:	add    edi,0x20
   189eb:	push   edi
   189ec:	call   0x19874
   189f1:	test   al,al
   189f3:	je     0x18a35
   189f5:	cmp    DWORD PTR [ebp+0x20],0x0
   189f9:	je     0x18a15
   189fb:	mov    ecx,DWORD PTR ds:0x77ee0
   18a01:	push   ebx
   18a02:	call   0x16e2c
   18a07:	mov    ecx,DWORD PTR [ebp+0x28]
   18a0a:	mov    edx,DWORD PTR [ecx]
   18a0c:	mov    DWORD PTR [eax+0x28],edx
   18a0f:	mov    ecx,DWORD PTR [ecx+0x4]
   18a12:	mov    DWORD PTR [eax+0x2c],ecx
   18a15:	cmp    DWORD PTR [ebp+0x14],0x0
   18a19:	je     0x18a35
   18a1b:	mov    ecx,DWORD PTR ds:0x77ee0
   18a21:	push   ebx
   18a22:	call   0x16e2c
   18a27:	mov    ecx,DWORD PTR [ebp+0x2c]
   18a2a:	mov    edx,DWORD PTR [ecx]
   18a2c:	mov    DWORD PTR [eax+0x30],edx
   18a2f:	mov    ecx,DWORD PTR [ecx+0x4]
   18a32:	mov    DWORD PTR [eax+0x34],ecx
   18a35:	lea    ecx,[ebp+0x18]
   18a38:	call   0x13896
   18a3d:	mov    edi,DWORD PTR [ebp+0x18]
   18a40:	mov    eax,ds:0x77ee0
   18a45:	cmp    edi,DWORD PTR [eax+0x4]
   18a48:	jne    0x189d4
   18a4a:	pop    edi
   18a4b:	mov    al,0x1
   18a4d:	pop    esi
   18a4e:	pop    ebx
   18a4f:	leave  
   18a50:	ret    0x28
   18a53:	int3   
   18a54:	int3   
   18a55:	int3   
   18a56:	int3   
   18a57:	int3   
   18a58:	push   0x40
   18a5a:	push   0x77308
   18a5f:	call   0x1db88
   18a64:	xor    esi,esi
   18a66:	push   esi
   18a67:	push   esi
   18a68:	push   esi
   18a69:	push   esi
   18a6a:	push   0x77558
   18a6f:	call   DWORD PTR ds:0x1f02c
   18a75:	cmp    eax,esi
   18a77:	jge    0x18a88
   18a79:	mov    eax,DWORD PTR [ebp+0x8]
   18a7c:	mov    DWORD PTR [eax+0x8],0x4
   18a83:	jmp    0x18b8f
   18a88:	mov    DWORD PTR [ebp-0x4],esi
   18a8b:	or     ebx,0xffffffff
   18a8e:	push   ebx
   18a8f:	mov    esi,DWORD PTR [ebp+0x8]
   18a92:	lea    eax,[esi+0x28]
   18a95:	push   eax
   18a96:	lea    ecx,[ebp-0x38]
   18a99:	call   0x12a02
   18a9e:	mov    edi,DWORD PTR [ebp-0x34]
   18aa1:	inc    edi
   18aa2:	push   ebx
   18aa3:	lea    eax,[edi+esi*1+0x28]
   18aa7:	push   eax
   18aa8:	lea    ecx,[ebp-0x30]
   18aab:	call   0x12a02
   18ab0:	mov    eax,DWORD PTR [ebp-0x2c]
   18ab3:	lea    edi,[edi+eax*1+0x1]
   18ab7:	push   ebx
   18ab8:	lea    eax,[edi+esi*1+0x28]
   18abc:	push   eax
   18abd:	lea    ecx,[ebp-0x28]
   18ac0:	call   0x12a02
   18ac5:	mov    eax,DWORD PTR [ebp-0x24]
   18ac8:	lea    edi,[edi+eax*1+0x1]
   18acc:	push   ebx
   18acd:	lea    eax,[edi+esi*1+0x28]
   18ad1:	push   eax
   18ad2:	lea    ecx,[ebp-0x20]
   18ad5:	call   0x12a02
   18ada:	mov    eax,DWORD PTR [ebp-0x1c]
   18add:	lea    eax,[edi+eax*1+0x1]
   18ae1:	push   ebx
   18ae2:	lea    eax,[eax+esi*1+0x28]
   18ae6:	push   eax
   18ae7:	lea    ecx,[ebp-0x50]
   18aea:	call   0x12a02
   18aef:	mov    eax,DWORD PTR [esi+0xc]
   18af2:	mov    ecx,DWORD PTR [esi+0x18]
   18af5:	mov    DWORD PTR [ebp-0x48],ecx
   18af8:	mov    ecx,DWORD PTR [esi+0x1c]
   18afb:	mov    DWORD PTR [ebp-0x44],ecx
   18afe:	mov    ecx,DWORD PTR [esi+0x20]
   18b01:	mov    DWORD PTR [ebp-0x40],ecx
   18b04:	mov    ecx,DWORD PTR [esi+0x24]
   18b07:	mov    DWORD PTR [ebp-0x3c],ecx
   18b0a:	mov    ecx,DWORD PTR [esi+0x10]
   18b0d:	lea    edx,[ebp-0x40]
   18b10:	push   edx
   18b11:	lea    edx,[ebp-0x48]
   18b14:	push   edx
   18b15:	push   ecx
   18b16:	push   eax
   18b17:	lea    eax,[ebp-0x50]
   18b1a:	push   eax
   18b1b:	lea    eax,[ebp-0x20]
   18b1e:	push   eax
   18b1f:	lea    eax,[ebp-0x28]
   18b22:	push   eax
   18b23:	lea    eax,[ebp-0x30]
   18b26:	push   eax
   18b27:	lea    eax,[ebp-0x38]
   18b2a:	push   eax
   18b2b:	push   DWORD PTR [esi+0x4]
   18b2e:	call   0x188ca
   18b33:	xor    ecx,ecx
   18b35:	test   al,al
   18b37:	sete   cl
   18b3a:	mov    DWORD PTR [esi+0x8],ecx
   18b3d:	push   DWORD PTR [ebp-0x50]
   18b40:	call   0x10a3a
   18b45:	push   DWORD PTR [ebp-0x20]
   18b48:	call   0x10a3a
   18b4d:	push   DWORD PTR [ebp-0x28]
   18b50:	call   0x10a3a
   18b55:	push   DWORD PTR [ebp-0x30]
   18b58:	call   0x10a3a
   18b5d:	push   DWORD PTR [ebp-0x38]
   18b60:	call   0x10a3a
   18b65:	add    esp,0x14
   18b68:	jmp    0x18b7b
   18b6a:	xor    eax,eax
   18b6c:	inc    eax
   18b6d:	ret    
   18b6e:	mov    esp,DWORD PTR [ebp-0x18]
   18b71:	mov    eax,DWORD PTR [ebp+0x8]
   18b74:	mov    DWORD PTR [eax+0x8],0x4
   18b7b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   18b82:	push   0x0
   18b84:	push   0x77558
   18b89:	call   DWORD PTR ds:0x1f028
   18b8f:	call   0x1dbcd
   18b94:	ret    0x4
   18b97:	int3   
   18b98:	int3   
   18b99:	int3   
   18b9a:	int3   
   18b9b:	int3   
   18b9c:	push   0x2c
   18b9e:	push   0x77328
   18ba3:	call   0x1db88
   18ba8:	xor    edi,edi
   18baa:	mov    DWORD PTR [ebp-0x24],edi
   18bad:	mov    ebx,DWORD PTR [ebp+0xc]
   18bb0:	mov    DWORD PTR [ebx+0x18],edi
   18bb3:	mov    DWORD PTR [ebx+0x1c],edi
   18bb6:	mov    eax,DWORD PTR [ebx+0x60]
   18bb9:	cmp    BYTE PTR [eax],0xe
   18bbc:	jne    0x1905c
   18bc2:	mov    eax,DWORD PTR [eax+0xc]
   18bc5:	mov    DWORD PTR [ebx+0x1c],0x84c
   18bcc:	mov    ecx,0x22c068
   18bd1:	cmp    eax,ecx
   18bd3:	ja     0x18f0d
   18bd9:	je     0x18efe
   18bdf:	add    ecx,0xffffffd0
   18be2:	cmp    eax,ecx
   18be4:	ja     0x18d01
   18bea:	je     0x18ce8
   18bf0:	sub    eax,0x22c020
   18bf5:	je     0x18cb2
   18bfb:	push   0x4
   18bfd:	pop    esi
   18bfe:	sub    eax,esi
   18c00:	je     0x18c7c
   18c02:	sub    eax,esi
   18c04:	je     0x18c61
   18c06:	sub    eax,esi
   18c08:	je     0x18c54
   18c0a:	sub    eax,esi
   18c0c:	je     0x18c23
   18c0e:	sub    eax,esi
   18c10:	jne    0x18ffc
   18c16:	push   DWORD PTR [ebx+0xc]
   18c19:	call   0x17922
   18c1e:	jmp    0x19059
   18c23:	mov    esi,DWORD PTR [ebx+0xc]
   18c26:	mov    eax,DWORD PTR [esi]
   18c28:	add    eax,0x28
   18c2b:	mov    DWORD PTR [ebx+0x1c],eax
   18c2e:	push   0xffffffff
   18c30:	lea    eax,[esi+0x28]
   18c33:	push   eax
   18c34:	lea    ecx,[ebp-0x34]
   18c37:	call   0x11140
   18c3c:	push   esi
   18c3d:	lea    eax,[ebp-0x34]
   18c40:	push   eax
   18c41:	call   0x16812
   18c46:	push   DWORD PTR [ebp-0x34]
   18c49:	call   0x10a3a
   18c4e:	pop    ecx
   18c4f:	jmp    0x1905c
   18c54:	push   DWORD PTR [ebx+0xc]
   18c57:	call   0x18a58
   18c5c:	jmp    0x19059
   18c61:	mov    ecx,DWORD PTR ds:0x77ee0
   18c67:	call   0x16ab0
   18c6c:	mov    ecx,DWORD PTR ds:0x775b4
   18c72:	call   0x16b6c
   18c77:	jmp    0x1905c
   18c7c:	mov    eax,DWORD PTR [ebx+0xc]
   18c7f:	mov    DWORD PTR [ebx+0x1c],0x10
   18c86:	mov    ecx,DWORD PTR [eax]
   18c88:	cmp    ecx,edi
   18c8a:	jl     0x1905c
   18c90:	cmp    ecx,0x6
   18c93:	jge    0x1905c
   18c99:	mov    edx,DWORD PTR [eax+0x8]
   18c9c:	mov    DWORD PTR [ecx*8+0x77f30],edx
   18ca3:	mov    eax,DWORD PTR [eax+0xc]
   18ca6:	mov    DWORD PTR [ecx*8+0x77f34],eax
   18cad:	jmp    0x1905c
   18cb2:	mov    eax,DWORD PTR [ebx+0xc]
   18cb5:	mov    DWORD PTR [ebx+0x1c],0x10
   18cbc:	mov    ecx,DWORD PTR [eax]
   18cbe:	cmp    ecx,edi
   18cc0:	jl     0x1905c
   18cc6:	cmp    ecx,0x6
   18cc9:	jge    0x1905c
   18ccf:	mov    edx,DWORD PTR [ecx*8+0x77f30]
   18cd6:	mov    DWORD PTR [eax+0x8],edx
   18cd9:	mov    ecx,DWORD PTR [ecx*8+0x77f34]
   18ce0:	mov    DWORD PTR [eax+0xc],ecx
   18ce3:	jmp    0x1905c
   18ce8:	mov    eax,DWORD PTR [ebx+0xc]
   18ceb:	mov    ecx,DWORD PTR [eax]
   18ced:	add    ecx,0xc
   18cf0:	mov    DWORD PTR [ebx+0x1c],ecx
   18cf3:	push   eax
   18cf4:	push   DWORD PTR [eax+0x4]
   18cf7:	call   0x15fae
   18cfc:	jmp    0x1905c
   18d01:	sub    eax,0x22c03c
   18d06:	je     0x18e7a
   18d0c:	sub    eax,0x10
   18d0f:	je     0x18e70
   18d15:	push   0x4
   18d17:	pop    esi
   18d18:	sub    eax,esi
   18d1a:	je     0x18d70
   18d1c:	sub    eax,0xc
   18d1f:	je     0x18d58
   18d21:	sub    eax,esi
   18d23:	je     0x18d3a
   18d25:	sub    eax,esi
   18d27:	jne    0x18ffc
   18d2d:	push   DWORD PTR [ebx+0xc]
   18d30:	call   0x128f4
   18d35:	jmp    0x19059
   18d3a:	mov    DWORD PTR [ebx+0x1c],0x8
   18d41:	mov    ebx,DWORD PTR [ebx+0xc]
   18d44:	mov    eax,ds:0x77f14
   18d49:	mov    DWORD PTR [ebx],eax
   18d4b:	mov    eax,ds:0x77f18
   18d50:	mov    DWORD PTR [ebx+0x4],eax
   18d53:	jmp    0x1905c
   18d58:	mov    eax,DWORD PTR [ebx+0xc]
   18d5b:	mov    ecx,DWORD PTR [eax]
   18d5d:	mov    DWORD PTR ds:0x77f14,ecx
   18d63:	mov    eax,DWORD PTR [eax+0x4]
   18d66:	mov    ds:0x77f18,eax
   18d6b:	jmp    0x19059
   18d70:	mov    DWORD PTR [ebx+0x1c],edi
   18d73:	mov    esi,DWORD PTR [ebx+0xc]
   18d76:	mov    DWORD PTR [ebp-0x20],esi
   18d79:	push   0xffffffff
   18d7b:	push   0x1df98
   18d80:	lea    ecx,[ebp-0x2c]
   18d83:	call   0x11140
   18d88:	xor    edi,edi
   18d8a:	inc    edi
   18d8b:	mov    DWORD PTR [esi+0x8],edi
   18d8e:	xor    eax,eax
   18d90:	push   eax
   18d91:	push   eax
   18d92:	push   eax
   18d93:	push   eax
   18d94:	push   0x77558
   18d99:	call   DWORD PTR ds:0x1f02c
   18d9f:	test   eax,eax
   18da1:	jge    0x18dab
   18da3:	push   DWORD PTR [ebp-0x2c]
   18da6:	jmp    0x18c49
   18dab:	and    DWORD PTR [ebp-0x4],0x0
   18daf:	mov    DWORD PTR [ebp-0x4],edi
   18db2:	mov    eax,DWORD PTR [esi]
   18db4:	add    eax,0x28
   18db7:	mov    DWORD PTR [ebx+0x1c],eax
   18dba:	mov    eax,ds:0x77ee0
   18dbf:	mov    ebx,DWORD PTR [eax+0x4]
   18dc2:	mov    eax,DWORD PTR [ebx]
   18dc4:	mov    DWORD PTR [ebp+0xc],eax
   18dc7:	and    DWORD PTR [ebp-0x1c],0x0
   18dcb:	mov    edi,DWORD PTR [esi+0x28]
   18dce:	cmp    DWORD PTR [ebp-0x1c],edi
   18dd1:	jge    0x18de5
   18dd3:	cmp    DWORD PTR [ebp+0xc],ebx
   18dd6:	je     0x18de5
   18dd8:	lea    ecx,[ebp+0xc]
   18ddb:	call   0x13896
   18de0:	inc    DWORD PTR [ebp-0x1c]
   18de3:	jmp    0x18dce
   18de5:	mov    eax,DWORD PTR [ebp+0xc]
   18de8:	cmp    eax,ebx
   18dea:	je     0x18dfe
   18dec:	and    DWORD PTR [esi+0x8],0x0
   18df0:	add    eax,0x10
   18df3:	push   eax
   18df4:	lea    ecx,[ebp-0x2c]
   18df7:	call   0x12a44
   18dfc:	jmp    0x18e05
   18dfe:	mov    DWORD PTR [esi+0x8],0x1
   18e05:	and    DWORD PTR [esi+0x4],0x0
   18e09:	and    DWORD PTR [ebp-0x4],0x0
   18e0d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   18e14:	call   0x18e62
   18e19:	cmp    DWORD PTR [esi+0x8],0x0
   18e1d:	jne    0x18da3
   18e1f:	push   esi
   18e20:	lea    eax,[ebp-0x2c]
   18e23:	push   eax
   18e24:	call   0x16812
   18e29:	jmp    0x18da3
   18e2e:	xor    eax,eax
   18e30:	inc    eax
   18e31:	ret    
   18e32:	mov    esp,DWORD PTR [ebp-0x18]
   18e35:	mov    eax,DWORD PTR [ebp-0x20]
   18e38:	mov    DWORD PTR [eax+0x8],0x4
   18e3f:	push   DWORD PTR [ebp-0x2c]
   18e42:	call   0x10a3a
   18e47:	push   0xfffffffe
   18e49:	lea    eax,[ebp-0x10]
   18e4c:	push   eax
   18e4d:	push   0x7751c
   18e52:	call   0x1dd4c
   18e57:	add    esp,0x10
   18e5a:	jmp    0x1905c
   18e5f:	mov    esi,DWORD PTR [ebp-0x20]
   18e62:	push   0x0
   18e64:	push   0x77558
   18e69:	call   DWORD PTR ds:0x1f028
   18e6f:	ret    
   18e70:	call   0x1241e
   18e75:	jmp    0x1905c
   18e7a:	mov    eax,DWORD PTR [ebx+0xc]
   18e7d:	mov    ecx,DWORD PTR ds:0x77404
   18e83:	mov    esi,eax
   18e85:	sub    esi,ecx
   18e87:	push   0x2
   18e89:	pop    edi
   18e8a:	movzx  edx,WORD PTR [ecx]
   18e8d:	mov    WORD PTR [esi+ecx*1],dx
   18e91:	add    ecx,edi
   18e93:	test   dx,dx
   18e96:	jne    0x18e8a
   18e98:	mov    ecx,0x77448
   18e9d:	lea    esi,[eax+0x50]
   18ea0:	sub    esi,ecx
   18ea2:	movzx  edx,WORD PTR [ecx]
   18ea5:	mov    WORD PTR [esi+ecx*1],dx
   18ea9:	add    ecx,edi
   18eab:	test   dx,dx
   18eae:	jne    0x18ea2
   18eb0:	mov    ecx,0x77408
   18eb5:	lea    esi,[eax+0x90]
   18ebb:	sub    esi,ecx
   18ebd:	movzx  edx,WORD PTR [ecx]
   18ec0:	mov    WORD PTR [esi+ecx*1],dx
   18ec4:	add    ecx,edi
   18ec6:	test   dx,dx
   18ec9:	jne    0x18ebd
   18ecb:	mov    ecx,0x77488
   18ed0:	lea    esi,[eax+0xd0]
   18ed6:	sub    esi,ecx
   18ed8:	movzx  edx,WORD PTR [ecx]
   18edb:	mov    WORD PTR [esi+ecx*1],dx
   18edf:	add    ecx,edi
   18ee1:	test   dx,dx
   18ee4:	jne    0x18ed8
   18ee6:	lea    edi,[eax+0x40]
   18ee9:	mov    esi,0x735cc
   18eee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18eef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18ef0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18ef1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18ef2:	mov    DWORD PTR [ebx+0x1c],0x110
   18ef9:	jmp    0x1905c
   18efe:	mov    eax,DWORD PTR [ebx+0xc]
   18f01:	push   DWORD PTR [eax]
   18f03:	call   0x1106a
   18f08:	jmp    0x19059
   18f0d:	mov    ecx,0x22c088
   18f12:	cmp    eax,ecx
   18f14:	ja     0x18fde
   18f1a:	je     0x18fb3
   18f20:	sub    eax,0x22c06c
   18f25:	je     0x18f9b
   18f27:	push   0x4
   18f29:	pop    esi
   18f2a:	sub    eax,esi
   18f2c:	je     0x18f8e
   18f2e:	push   0x8
   18f30:	pop    ecx
   18f31:	sub    eax,ecx
   18f33:	je     0x18f81
   18f35:	sub    eax,esi
   18f37:	je     0x18f69
   18f39:	sub    eax,esi
   18f3b:	je     0x18f52
   18f3d:	sub    eax,esi
   18f3f:	jne    0x18ffc
   18f45:	push   DWORD PTR [ebx+0xc]
   18f48:	call   0x1782c
   18f4d:	jmp    0x19059
   18f52:	mov    DWORD PTR [ebx+0x1c],ecx
   18f55:	mov    ebx,DWORD PTR [ebx+0xc]
   18f58:	mov    eax,ds:0x77f1c
   18f5d:	mov    DWORD PTR [ebx],eax
   18f5f:	mov    eax,ds:0x77f20
   18f64:	jmp    0x18d50
   18f69:	mov    eax,DWORD PTR [ebx+0xc]
   18f6c:	mov    ecx,DWORD PTR [eax]
   18f6e:	mov    DWORD PTR ds:0x77f1c,ecx
   18f74:	mov    eax,DWORD PTR [eax+0x4]
   18f77:	mov    ds:0x77f20,eax
   18f7c:	jmp    0x19059
   18f81:	push   DWORD PTR [ebx+0xc]
   18f84:	call   0x1703e
   18f89:	jmp    0x19059
   18f8e:	push   DWORD PTR [ebx+0xc]
   18f91:	call   0x10fda
   18f96:	jmp    0x19059
   18f9b:	mov    esi,DWORD PTR [ebx+0xc]
   18f9e:	push   DWORD PTR [esi]
   18fa0:	call   0x110ae
   18fa5:	mov    DWORD PTR [esi],eax
   18fa7:	mov    DWORD PTR [ebx+0x1c],0x4
   18fae:	jmp    0x1905c
   18fb3:	mov    esi,DWORD PTR [ebx+0xc]
   18fb6:	mov    eax,DWORD PTR [esi]
   18fb8:	add    eax,0xc
   18fbb:	mov    DWORD PTR [ebx+0x1c],eax
   18fbe:	push   0xffffffff
   18fc0:	lea    eax,[esi+0xc]
   18fc3:	push   eax
   18fc4:	lea    ecx,[ebp-0x3c]
   18fc7:	call   0x11140
   18fcc:	push   esi
   18fcd:	lea    eax,[ebp-0x3c]
   18fd0:	push   eax
   18fd1:	call   0x15ec4
   18fd6:	push   DWORD PTR [ebp-0x3c]
   18fd9:	jmp    0x18c49
   18fde:	sub    eax,0x22c08c
   18fe3:	je     0x1904b
   18fe5:	push   0x4
   18fe7:	pop    esi
   18fe8:	sub    eax,esi
   18fea:	je     0x19037
   18fec:	sub    eax,esi
   18fee:	je     0x19030
   18ff0:	sub    eax,esi
   18ff2:	je     0x1901c
   18ff4:	sub    eax,esi
   18ff6:	je     0x19012
   18ff8:	sub    eax,esi
   18ffa:	je     0x19005
   18ffc:	mov    DWORD PTR [ebp-0x24],0xc0000010
   19003:	jmp    0x19059
   19005:	push   DWORD PTR [ebx+0xc]
   19008:	call   0x1ab46
   1900d:	mov    DWORD PTR [ebx+0x1c],esi
   19010:	jmp    0x1905c
   19012:	push   DWORD PTR [ebx+0xc]
   19015:	call   0x1b5cc
   1901a:	jmp    0x19059
   1901c:	mov    eax,DWORD PTR [ebx+0xc]
   1901f:	mov    ecx,DWORD PTR [eax+0x4]
   19022:	add    ecx,0x8
   19025:	mov    DWORD PTR [ebx+0x1c],ecx
   19028:	push   eax
   19029:	call   0x1b89a
   1902e:	jmp    0x1905c
   19030:	call   0x1b4dc
   19035:	jmp    0x19059
   19037:	mov    eax,DWORD PTR [ebx+0xc]
   1903a:	mov    ecx,DWORD PTR [eax+0x4]
   1903d:	add    ecx,0x8
   19040:	mov    DWORD PTR [ebx+0x1c],ecx
   19043:	push   eax
   19044:	call   0x1a902
   19049:	jmp    0x1905c
   1904b:	push   DWORD PTR [ebx+0xc]
   1904e:	call   0x110f6
   19053:	push   eax
   19054:	call   0x1b6fe
   19059:	mov    DWORD PTR [ebx+0x1c],edi
   1905c:	mov    eax,DWORD PTR [ebp-0x24]
   1905f:	call   0x1dbcd
   19064:	ret    0x8
   19067:	int3   
   19068:	int3   
   19069:	int3   
   1906a:	int3   
   1906b:	int3   
   1906c:	push   0xc
   1906e:	push   0x77350
   19073:	call   0x1db88
   19078:	and    DWORD PTR [ebp-0x4],0x0
   1907c:	push   DWORD PTR [ebp+0xc]
   1907f:	push   DWORD PTR [ebp+0x8]
   19082:	call   0x18b9c
   19087:	mov    esi,eax
   19089:	jmp    0x1909e
   1908b:	xor    eax,eax
   1908d:	inc    eax
   1908e:	ret    
   1908f:	mov    esp,DWORD PTR [ebp-0x18]
   19092:	push   0xd
   19094:	call   0x1106a
   19099:	mov    esi,0xc0000001
   1909e:	mov    DWORD PTR [ebp-0x1c],esi
   190a1:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   190a8:	cmp    esi,0x103
   190ae:	je     0x190be
   190b0:	mov    ecx,DWORD PTR [ebp+0xc]
   190b3:	mov    DWORD PTR [ecx+0x18],esi
   190b6:	xor    dl,dl
   190b8:	call   DWORD PTR ds:0x1f048
   190be:	mov    eax,esi
   190c0:	call   0x1dbcd
   190c5:	ret    0x8
   190c8:	int3   
   190c9:	int3   
   190ca:	int3   
   190cb:	int3   
   190cc:	int3   
   190cd:	int3   
   190ce:	mov    edi,edi
   190d0:	push   ebp
   190d1:	mov    ebp,esp
   190d3:	push   esi
   190d4:	mov    esi,ecx
   190d6:	mov    BYTE PTR [esi+0x8],0x0
   190da:	call   0x14af4
   190df:	lea    ecx,[esi+0x10]
   190e2:	mov    BYTE PTR [ecx+0x8],0x0
   190e6:	call   0x144e4
   190eb:	mov    eax,DWORD PTR [ebp+0x8]
   190ee:	mov    DWORD PTR [esi+0x20],eax
   190f1:	mov    eax,DWORD PTR [ebp+0xc]
   190f4:	mov    DWORD PTR [esi+0x24],eax
   190f7:	mov    eax,esi
   190f9:	pop    esi
   190fa:	pop    ebp
   190fb:	ret    0x8
   190fe:	int3   
   190ff:	int3   
   19100:	int3   
   19101:	int3   
   19102:	int3   
   19103:	int3   
   19104:	push   0x854
   19109:	push   0x77370
   1910e:	call   0x1de90
   19113:	mov    esi,DWORD PTR [ebp+0x8]
   19116:	mov    DWORD PTR [ebp-0x830],esi
   1911c:	mov    edi,DWORD PTR [ebp+0xc]
   1911f:	call   0x18376
   19124:	call   0x11d7a
   19129:	test   eax,eax
   1912b:	je     0x1974a
   19131:	xor    ebx,ebx
   19133:	mov    DWORD PTR [ebp-0x834],ebx
   19139:	call   0x181e6
   1913e:	cmp    al,bl
   19140:	jne    0x19373
   19146:	mov    DWORD PTR [ebp-0x4],ebx
   19149:	push   ebx
   1914a:	push   0x19
   1914c:	call   0x10990
   19151:	cmp    edx,ebx
   19153:	jl     0x19169
   19155:	jg     0x1915c
   19157:	cmp    eax,0x5
   1915a:	jbe    0x19169
   1915c:	push   ebx
   1915d:	push   0x77eb8
   19162:	call   0x11cfc
   19167:	call   eax
   19169:	push   0x10
   1916b:	call   0x10a06
   19170:	pop    ecx
   19171:	cmp    eax,ebx
   19173:	je     0x1918c
   19175:	lea    ecx,[ebp-0x81d]
   1917b:	push   ecx
   1917c:	lea    ecx,[ebp-0x81d]
   19182:	push   ecx
   19183:	mov    ecx,eax
   19185:	call   0x16e12
   1918a:	jmp    0x1918e
   1918c:	xor    eax,eax
   1918e:	mov    ecx,eax
   19190:	mov    DWORD PTR ds:0x77ee0,ecx
   19196:	call   0x16ab0
   1919b:	push   edi
   1919c:	push   0x1ed52
   191a1:	lea    eax,[ebp-0x41c]
   191a7:	push   eax
   191a8:	call   0x1db7c
   191ad:	add    esp,0xc
   191b0:	push   0xffffffff
   191b2:	lea    eax,[ebp-0x41c]
   191b8:	push   eax
   191b9:	lea    ecx,[ebp-0x828]
   191bf:	call   0x11140
   191c4:	lea    eax,[ebp-0x828]
   191ca:	push   eax
   191cb:	mov    ecx,DWORD PTR ds:0x77ee0
   191d1:	call   0x16e2c
   191d6:	mov    edi,eax
   191d8:	push   DWORD PTR [ebp-0x828]
   191de:	call   0x10a3a
   191e3:	pop    ecx
   191e4:	lea    eax,[ebp-0x83c]
   191ea:	push   eax
   191eb:	call   DWORD PTR ds:0x1f050
   191f1:	push   ebx
   191f2:	push   0x989680
   191f7:	push   DWORD PTR [ebp-0x838]
   191fd:	push   DWORD PTR [ebp-0x83c]
   19203:	call   0x1db34
   19208:	inc    eax
   19209:	mov    DWORD PTR [edi+0x20],eax
   1920c:	cmp    eax,ebx
   1920e:	jge    0x19217
   19210:	mov    DWORD PTR [edi+0x20],0x1
   19217:	push   0xffffffff
   19219:	push   0x1ed1e
   1921e:	push   0x4
   19220:	push   0x1ed18
   19225:	call   0x16d1c
   1922a:	push   eax
   1922b:	lea    ecx,[ebp-0x828]
   19231:	call   0x12a02
   19236:	lea    eax,[ebp-0x828]
   1923c:	push   eax
   1923d:	mov    ecx,edi
   1923f:	call   0x12a44
   19244:	push   DWORD PTR [ebp-0x828]
   1924a:	call   0x10a3a
   1924f:	mov    DWORD PTR [esp],0x1ece2
   19256:	push   0x4
   19258:	push   0x1ecd8
   1925d:	call   0x16c26
   19262:	mov    DWORD PTR [ebp-0x824],eax
   19268:	lea    ecx,[eax+0x2]
   1926b:	mov    dx,WORD PTR [eax]
   1926e:	inc    eax
   1926f:	inc    eax
   19270:	cmp    dx,bx
   19273:	jne    0x1926b
   19275:	sub    eax,ecx
   19277:	sar    eax,1
   19279:	add    eax,eax
   1927b:	mov    WORD PTR [ebp-0x826],ax
   19282:	mov    WORD PTR [ebp-0x828],ax
   19289:	mov    DWORD PTR [ebp-0x854],0x18
   19293:	mov    DWORD PTR [ebp-0x850],ebx
   19299:	mov    DWORD PTR [ebp-0x848],0x40
   192a3:	lea    eax,[ebp-0x828]
   192a9:	mov    DWORD PTR [ebp-0x84c],eax
   192af:	mov    DWORD PTR [ebp-0x844],ebx
   192b5:	mov    DWORD PTR [ebp-0x840],ebx
   192bb:	mov    eax,DWORD PTR [ebp-0x824]
   192c1:	lea    ecx,[eax+0x2]
   192c4:	mov    dx,WORD PTR [eax]
   192c7:	inc    eax
   192c8:	inc    eax
   192c9:	cmp    dx,bx
   192cc:	jne    0x192c4
   192ce:	sub    eax,ecx
   192d0:	sar    eax,1
   192d2:	mov    DWORD PTR [ebp-0x834],eax
   192d8:	push   0xffffffff
   192da:	push   0x1ecaa
   192df:	push   0x8
   192e1:	push   0x1eca0
   192e6:	call   0x16d1c
   192eb:	push   eax
   192ec:	lea    ecx,[ebp-0x828]
   192f2:	call   0x12a02
   192f7:	lea    ecx,[edi+0x8]
   192fa:	lea    eax,[ebp-0x828]
   19300:	push   eax
   19301:	call   0x12a44
   19306:	push   DWORD PTR [ebp-0x828]
   1930c:	call   0x10a3a
   19311:	pop    ecx
   19312:	push   0xffffffff
   19314:	push   0x1df98
   19319:	lea    ecx,[ebp-0x828]
   1931f:	call   0x11140
   19324:	lea    eax,[ebp-0x828]
   1932a:	push   eax
   1932b:	lea    ecx,[edi+0x10]
   1932e:	call   0x12a44
   19333:	push   DWORD PTR [ebp-0x828]
   19339:	call   0x10a3a
   1933e:	pop    ecx
   1933f:	lea    eax,[edi+0x8]
   19342:	push   eax
   19343:	lea    ecx,[edi+0x18]
   19346:	call   0x12a44
   1934b:	mov    eax,DWORD PTR [edi+0x20]
   1934e:	or     DWORD PTR [ebp-0x834],eax
   19354:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1935b:	jmp    0x19373
   1935d:	xor    eax,eax
   1935f:	inc    eax
   19360:	ret    
   19361:	mov    esp,DWORD PTR [ebp-0x18]
   19364:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1936b:	xor    ebx,ebx
   1936d:	mov    esi,DWORD PTR [ebp-0x830]
   19373:	cmp    DWORD PTR [ebp-0x834],ebx
   19379:	jne    0x1974a
   1937f:	xor    eax,eax
   19381:	lea    edi,[ebp-0x844]
   19387:	stos   DWORD PTR es:[edi],eax
   19388:	stos   DWORD PTR es:[edi],eax
   19389:	mov    DWORD PTR [ebp-0x848],0xc
   19393:	mov    DWORD PTR [ebp-0x844],0x2
   1939d:	mov    BYTE PTR [ebp-0x840],bl
   193a3:	mov    BYTE PTR [ebp-0x83f],bl
   193a9:	push   0x77578
   193ae:	push   ebx
   193af:	lea    eax,[ebp-0x848]
   193b5:	push   eax
   193b6:	call   0x11d50
   193bb:	call   eax
   193bd:	push   eax
   193be:	call   0x11c54
   193c3:	call   eax
   193c5:	push   0x10
   193c7:	call   0x10a06
   193cc:	pop    ecx
   193cd:	cmp    eax,ebx
   193cf:	je     0x193ed
   193d1:	lea    ecx,[ebp-0x81d]
   193d7:	push   ecx
   193d8:	lea    ecx,[ebp-0x81d]
   193de:	push   ecx
   193df:	mov    ecx,eax
   193e1:	call   0x16e12
   193e6:	mov    ds:0x77ee0,eax
   193eb:	jmp    0x193f3
   193ed:	mov    DWORD PTR ds:0x77ee0,ebx
   193f3:	push   0x2c
   193f5:	call   0x10a06
   193fa:	pop    ecx
   193fb:	cmp    eax,ebx
   193fd:	je     0x19414
   193ff:	push   0x5dc
   19404:	push   0x14
   19406:	mov    ecx,eax
   19408:	call   0x1860e
   1940d:	mov    ds:0x77ee8,eax
   19412:	jmp    0x1941a
   19414:	mov    DWORD PTR ds:0x77ee8,ebx
   1941a:	push   0x10
   1941c:	call   0x10a06
   19421:	pop    ecx
   19422:	cmp    eax,ebx
   19424:	je     0x19442
   19426:	lea    ecx,[ebp-0x81d]
   1942c:	push   ecx
   1942d:	lea    ecx,[ebp-0x81d]
   19433:	push   ecx
   19434:	mov    ecx,eax
   19436:	call   0x169f0
   1943b:	mov    ds:0x77528,eax
   19440:	jmp    0x19448
   19442:	mov    DWORD PTR ds:0x77528,ebx
   19448:	push   0x10
   1944a:	call   0x10a06
   1944f:	pop    ecx
   19450:	cmp    eax,ebx
   19452:	je     0x19470
   19454:	lea    ecx,[ebp-0x81d]
   1945a:	push   ecx
   1945b:	lea    ecx,[ebp-0x81d]
   19461:	push   ecx
   19462:	mov    ecx,eax
   19464:	call   0x16ed6
   19469:	mov    ds:0x775b4,eax
   1946e:	jmp    0x19476
   19470:	mov    DWORD PTR ds:0x775b4,ebx
   19476:	push   0x28
   19478:	call   0x10a06
   1947d:	pop    ecx
   1947e:	cmp    eax,ebx
   19480:	je     0x19497
   19482:	push   0x3e8
   19487:	push   0x14
   19489:	mov    ecx,eax
   1948b:	call   0x190ce
   19490:	mov    ds:0x77554,eax
   19495:	jmp    0x1949d
   19497:	mov    DWORD PTR ds:0x77554,ebx
   1949d:	push   0x20
   1949f:	call   0x10a06
   194a4:	pop    ecx
   194a5:	cmp    eax,ebx
   194a7:	je     0x194b7
   194a9:	mov    ecx,eax
   194ab:	call   0x16bb4
   194b0:	mov    ds:0x77550,eax
   194b5:	jmp    0x194bd
   194b7:	mov    DWORD PTR ds:0x77550,ebx
   194bd:	call   0x129da
   194c2:	call   0x1b666
   194c7:	call   0x179d2
   194cc:	push   0x1ec90
   194d1:	call   0x18532
   194d6:	push   eax
   194d7:	push   0x1ec6e
   194dc:	push   0xa
   194de:	push   0x1ec58
   194e3:	call   0x16c26
   194e8:	push   eax
   194e9:	lea    eax,[ebp-0x41c]
   194ef:	push   eax
   194f0:	call   0x1db70
   194f5:	add    esp,0xc
   194f8:	lea    eax,[ebp-0x41c]
   194fe:	push   eax
   194ff:	lea    eax,[ebp-0x85c]
   19505:	push   eax
   19506:	mov    edi,DWORD PTR ds:0x1f008
   1950c:	call   edi
   1950e:	push   0x1ec90
   19513:	call   0x18532
   19518:	push   eax
   19519:	push   0x1ec34
   1951e:	push   0xe
   19520:	push   0x1ec16
   19525:	call   0x16c26
   1952a:	push   eax
   1952b:	lea    eax,[ebp-0x81c]
   19531:	push   eax
   19532:	call   0x1db70
   19537:	add    esp,0xc
   1953a:	lea    eax,[ebp-0x81c]
   19540:	push   eax
   19541:	lea    eax,[ebp-0x864]
   19547:	push   eax
   19548:	call   edi
   1954a:	push   0x77f24
   1954f:	push   ebx
   19550:	push   0x100
   19555:	push   0x22
   19557:	lea    eax,[ebp-0x85c]
   1955d:	push   eax
   1955e:	push   ebx
   1955f:	push   esi
   19560:	call   0x11c2a
   19565:	call   eax
   19567:	cmp    eax,ebx
   19569:	jl     0x1974c
   1956f:	mov    eax,0x1906c
   19574:	mov    DWORD PTR [esi+0x94],eax
   1957a:	mov    DWORD PTR [esi+0x90],eax
   19580:	mov    DWORD PTR [esi+0xa4],eax
   19586:	mov    DWORD PTR [esi+0x70],eax
   19589:	mov    DWORD PTR [esi+0x48],eax
   1958c:	mov    DWORD PTR [esi+0x44],eax
   1958f:	mov    DWORD PTR [esi+0x40],eax
   19592:	mov    DWORD PTR [esi+0x38],eax
   19595:	mov    eax,ds:0x77f24
   1959a:	or     DWORD PTR [eax+0x1c],0x4
   1959e:	lea    eax,[ebp-0x85c]
   195a4:	push   eax
   195a5:	lea    eax,[ebp-0x864]
   195ab:	push   eax
   195ac:	call   0x11c00
   195b1:	call   eax
   195b3:	mov    DWORD PTR [ebp-0x830],eax
   195b9:	cmp    eax,ebx
   195bb:	jge    0x195d2
   195bd:	push   DWORD PTR [esi+0x4]
   195c0:	call   0x11ab0
   195c5:	call   eax
   195c7:	mov    eax,DWORD PTR [ebp-0x830]
   195cd:	jmp    0x1974c
   195d2:	push   ebx
   195d3:	push   0x77eb8
   195d8:	call   0x11cfc
   195dd:	call   eax
   195df:	push   ebx
   195e0:	push   0x77558
   195e5:	call   0x11cfc
   195ea:	call   eax
   195ec:	push   ebx
   195ed:	push   0x7752c
   195f2:	call   0x11cfc
   195f7:	call   eax
   195f9:	push   0x8000000
   195fe:	push   0x1ebda
   19603:	push   0x9
   19605:	push   0x1e810
   1960a:	call   0x16d1c
   1960f:	push   eax
   19610:	lea    eax,[ebp-0x82c]
   19616:	push   eax
   19617:	call   0x19b86
   1961c:	push   DWORD PTR [ebp-0x82c]
   19622:	call   0x1190c
   19627:	call   eax
   19629:	mov    DWORD PTR [ebp-0x838],eax
   1962f:	push   ebx
   19630:	push   0x1eba0
   19635:	push   0x16
   19637:	push   0x1eb88
   1963c:	call   0x16d1c
   19641:	push   eax
   19642:	push   DWORD PTR [ebp-0x82c]
   19648:	call   0x19a6c
   1964d:	push   eax
   1964e:	push   DWORD PTR [ebp-0x838]
   19654:	call   0x19a12
   19659:	mov    edi,eax
   1965b:	add    edi,DWORD PTR [ebp-0x82c]
   19661:	mov    esi,0x1df9a
   19666:	push   esi
   19667:	call   0x11668
   1966c:	mov    DWORD PTR [ebp-0x824],eax
   19672:	push   edi
   19673:	call   0x199ba
   19678:	mov    ecx,DWORD PTR [ebp-0x824]
   1967e:	mov    ecx,DWORD PTR [ecx]
   19680:	mov    eax,DWORD PTR [ecx+eax*4]
   19683:	mov    ds:0x77ee4,eax
   19688:	push   ebx
   19689:	push   0x1eb54
   1968e:	push   0x14
   19690:	push   0x1eb3e
   19695:	call   0x16d1c
   1969a:	push   eax
   1969b:	push   DWORD PTR [ebp-0x82c]
   196a1:	call   0x19a6c
   196a6:	push   eax
   196a7:	push   DWORD PTR [ebp-0x838]
   196ad:	call   0x19a12
   196b2:	mov    edi,eax
   196b4:	add    edi,DWORD PTR [ebp-0x82c]
   196ba:	push   esi
   196bb:	call   0x11668
   196c0:	mov    DWORD PTR [ebp-0x824],eax
   196c6:	push   edi
   196c7:	call   0x199ba
   196cc:	mov    ecx,DWORD PTR [ebp-0x824]
   196d2:	mov    ecx,DWORD PTR [ecx]
   196d4:	mov    eax,DWORD PTR [ecx+eax*4]
   196d7:	mov    ds:0x77ed8,eax
   196dc:	push   ebx
   196dd:	push   0x1eb00
   196e2:	push   0xe
   196e4:	push   0x1eaf0
   196e9:	call   0x16d1c
   196ee:	push   eax
   196ef:	push   DWORD PTR [ebp-0x82c]
   196f5:	call   0x19a6c
   196fa:	push   eax
   196fb:	push   DWORD PTR [ebp-0x838]
   19701:	call   0x19a12
   19706:	mov    edi,eax
   19708:	add    edi,DWORD PTR [ebp-0x82c]
   1970e:	push   esi
   1970f:	call   0x11668
   19714:	mov    esi,eax
   19716:	push   edi
   19717:	call   0x199ba
   1971c:	mov    ecx,DWORD PTR [esi]
   1971e:	mov    eax,DWORD PTR [ecx+eax*4]
   19721:	mov    ds:0x77eec,eax
   19726:	push   DWORD PTR [ebp-0x82c]
   1972c:	call   0x19cd4
   19731:	push   ebx
   19732:	push   0x19
   19734:	call   0x10990
   19739:	call   0x18878
   1973e:	mov    BYTE PTR ds:0x77f28,0x1
   19745:	jmp    0x195c7
   1974a:	xor    eax,eax
   1974c:	call   0x1ded8
   19751:	ret    0x8
   19754:	int3   
   19755:	int3   
   19756:	int3   
   19757:	int3   
   19758:	int3   
   19759:	int3   
   1975a:	mov    edi,edi
   1975c:	push   ebp
   1975d:	mov    ebp,esp
   1975f:	push   ecx
   19760:	mov    ecx,DWORD PTR [ebp+0x8]
   19763:	mov    eax,DWORD PTR [ecx+0x4]
   19766:	mov    edx,DWORD PTR [ebp+0xc]
   19769:	push   ebx
   1976a:	mov    ebx,DWORD PTR [edx+0x4]
   1976d:	push   esi
   1976e:	push   edi
   1976f:	mov    DWORD PTR [ebp-0x4],eax
   19772:	mov    DWORD PTR [ebp+0x8],eax
   19775:	cmp    eax,ebx
   19777:	jbe    0x1977c
   19779:	mov    DWORD PTR [ebp+0x8],ebx
   1977c:	xor    eax,eax
   1977e:	cmp    DWORD PTR [ebp+0x8],eax
   19781:	jbe    0x19799
   19783:	mov    esi,DWORD PTR [ecx]
   19785:	mov    edi,DWORD PTR [edx]
   19787:	mov    cl,BYTE PTR [esi+eax*1]
   1978a:	mov    dl,BYTE PTR [edi+eax*1]
   1978d:	cmp    cl,dl
   1978f:	jl     0x197a6
   19791:	jg     0x197aa
   19793:	inc    eax
   19794:	cmp    eax,DWORD PTR [ebp+0x8]
   19797:	jb     0x19787
   19799:	cmp    DWORD PTR [ebp-0x4],ebx
   1979c:	setb   al
   1979f:	pop    edi
   197a0:	pop    esi
   197a1:	pop    ebx
   197a2:	leave  
   197a3:	ret    0x8
   197a6:	mov    al,0x1
   197a8:	jmp    0x1979f
   197aa:	xor    al,al
   197ac:	jmp    0x1979f
   197ae:	int3   
   197af:	int3   
   197b0:	int3   
   197b1:	int3   
   197b2:	int3   
   197b3:	int3   
   197b4:	mov    edi,edi
   197b6:	push   ebp
   197b7:	mov    ebp,esp
   197b9:	mov    eax,DWORD PTR [ebp+0x8]
   197bc:	mov    ecx,DWORD PTR [eax+0x4]
   197bf:	mov    edx,DWORD PTR [ebp+0xc]
   197c2:	cmp    ecx,DWORD PTR [edx+0x4]
   197c5:	je     0x197cb
   197c7:	xor    al,al
   197c9:	jmp    0x197da
   197cb:	push   esi
   197cc:	mov    esi,DWORD PTR [eax]
   197ce:	push   edi
   197cf:	mov    edi,DWORD PTR [edx]
   197d1:	xor    eax,eax
   197d3:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
   197d5:	pop    edi
   197d6:	sete   al
   197d9:	pop    esi
   197da:	pop    ebp
   197db:	ret    0x8
   197de:	int3   
   197df:	int3   
   197e0:	int3   
   197e1:	int3   
   197e2:	int3   
   197e3:	int3   
   197e4:	mov    edi,edi
   197e6:	push   ebp
   197e7:	mov    ebp,esp
   197e9:	push   DWORD PTR [ebp+0xc]
   197ec:	push   DWORD PTR [ebp+0x8]
   197ef:	call   0x197b4
   197f4:	xor    ecx,ecx
   197f6:	test   al,al
   197f8:	sete   cl
   197fb:	mov    al,cl
   197fd:	pop    ebp
   197fe:	ret    0x8
   19801:	int3   
   19802:	int3   
   19803:	int3   
   19804:	int3   
   19805:	int3   
   19806:	mov    edi,edi
   19808:	push   ebp
   19809:	mov    ebp,esp
   1980b:	push   ecx
   1980c:	mov    ecx,DWORD PTR [ebp+0x8]
   1980f:	mov    eax,DWORD PTR [ebp+0xc]
   19812:	push   ebx
   19813:	mov    ebx,DWORD PTR [eax+0x4]
   19816:	push   esi
   19817:	push   edi
   19818:	mov    edi,DWORD PTR [ecx+0x4]
   1981b:	mov    DWORD PTR [ebp-0x4],edi
   1981e:	cmp    edi,ebx
   19820:	jbe    0x19824
   19822:	mov    edi,ebx
   19824:	and    DWORD PTR [ebp+0x8],0x0
   19828:	test   edi,edi
   1982a:	jbe    0x1984a
   1982c:	mov    eax,DWORD PTR [eax]
   1982e:	mov    ecx,DWORD PTR [ecx]
   19830:	sub    ecx,eax
   19832:	movzx  edx,WORD PTR [ecx+eax*1]
   19836:	movzx  esi,WORD PTR [eax]
   19839:	cmp    dx,si
   1983c:	jb     0x19857
   1983e:	ja     0x1985b
   19840:	inc    DWORD PTR [ebp+0x8]
   19843:	inc    eax
   19844:	inc    eax
   19845:	cmp    DWORD PTR [ebp+0x8],edi
   19848:	jb     0x19832
   1984a:	cmp    DWORD PTR [ebp-0x4],ebx
   1984d:	setb   al
   19850:	pop    edi
   19851:	pop    esi
   19852:	pop    ebx
   19853:	leave  
   19854:	ret    0x8
   19857:	mov    al,0x1
   19859:	jmp    0x19850
   1985b:	xor    al,al
   1985d:	jmp    0x19850
   1985f:	int3   
   19860:	int3   
   19861:	int3   
   19862:	int3   
   19863:	int3   
   19864:	mov    edi,edi
   19866:	push   ebp
   19867:	mov    ebp,esp
   19869:	pop    ebp
   1986a:	jmp    0x1975a
   1986f:	int3   
   19870:	int3   
   19871:	int3   
   19872:	int3   
   19873:	int3   
   19874:	mov    edi,edi
   19876:	push   ebp
   19877:	mov    ebp,esp
   19879:	pop    ebp
   1987a:	jmp    0x197b4
   1987f:	int3   
   19880:	int3   
   19881:	int3   
   19882:	int3   
   19883:	int3   
   19884:	mov    edi,edi
   19886:	push   ebp
   19887:	mov    ebp,esp
   19889:	pop    ebp
   1988a:	jmp    0x197e4
   1988f:	int3   
   19890:	int3   
   19891:	int3   
   19892:	int3   
   19893:	int3   
   19894:	mov    edi,edi
   19896:	push   ebp
   19897:	mov    ebp,esp
   19899:	pop    ebp
   1989a:	jmp    0x19806
   1989f:	int3   
   198a0:	int3   
   198a1:	int3   
   198a2:	int3   
   198a3:	int3   
   198a4:	mov    edi,edi
   198a6:	push   ebp
   198a7:	mov    ebp,esp
   198a9:	mov    eax,DWORD PTR [ebp+0x8]
   198ac:	mov    cl,BYTE PTR [ebp+0xc]
   198af:	mov    BYTE PTR [eax],cl
   198b1:	inc    eax
   198b2:	pop    ebp
   198b3:	ret    0x8
   198b6:	int3   
   198b7:	int3   
   198b8:	int3   
   198b9:	int3   
   198ba:	int3   
   198bb:	int3   
   198bc:	mov    edi,edi
   198be:	push   ebp
   198bf:	mov    ebp,esp
   198c1:	mov    eax,DWORD PTR [ebp+0x8]
   198c4:	mov    ecx,DWORD PTR [ebp+0xc]
   198c7:	mov    DWORD PTR [eax],ecx
   198c9:	add    eax,0x4
   198cc:	pop    ebp
   198cd:	ret    0x8
   198d0:	int3   
   198d1:	int3   
   198d2:	int3   
   198d3:	int3   
   198d4:	int3   
   198d5:	int3   
   198d6:	mov    edi,edi
   198d8:	push   ebp
   198d9:	mov    ebp,esp
   198db:	mov    eax,DWORD PTR [ebp+0x8]
   198de:	mov    cx,WORD PTR [ebp+0xc]
   198e2:	mov    WORD PTR [eax],cx
   198e5:	add    eax,0x2
   198e8:	pop    ebp
   198e9:	ret    0x8
   198ec:	int3   
   198ed:	int3   
   198ee:	int3   
   198ef:	int3   
   198f0:	int3   
   198f1:	int3   
   198f2:	mov    edi,edi
   198f4:	push   ebp
   198f5:	mov    ebp,esp
   198f7:	push   esi
   198f8:	mov    esi,DWORD PTR [ebp+0x10]
   198fb:	push   edi
   198fc:	mov    edi,DWORD PTR [ebp+0x8]
   198ff:	push   esi
   19900:	push   DWORD PTR [ebp+0xc]
   19903:	push   edi
   19904:	call   0x1db58
   19909:	add    esp,0xc
   1990c:	lea    eax,[edi+esi*1]
   1990f:	pop    edi
   19910:	pop    esi
   19911:	pop    ebp
   19912:	ret    0xc
   19915:	int3   
   19916:	int3   
   19917:	int3   
   19918:	int3   
   19919:	int3   
   1991a:	mov    edi,edi
   1991c:	push   ebp
   1991d:	mov    ebp,esp
   1991f:	mov    eax,DWORD PTR [ebp+0xc]
   19922:	mov    ecx,DWORD PTR [ebp+0x8]
   19925:	sub    ecx,eax
   19927:	sub    ecx,0x5
   1992a:	mov    DWORD PTR [eax+0x1],ecx
   1992d:	mov    BYTE PTR [eax],0xe9
   19930:	add    eax,0x5
   19933:	pop    ebp
   19934:	ret    0x8
   19937:	int3   
   19938:	int3   
   19939:	int3   
   1993a:	int3   
   1993b:	int3   
   1993c:	mov    edi,edi
   1993e:	push   ebp
   1993f:	mov    ebp,esp
   19941:	push   ecx
   19942:	push   ebx
   19943:	mov    ebx,DWORD PTR [ebp+0x8]
   19946:	and    DWORD PTR [ebp+0x8],0x0
   1994a:	push   edi
   1994b:	mov    edi,ebx
   1994d:	test   ebx,ebx
   1994f:	jne    0x19955
   19951:	xor    eax,eax
   19953:	jmp    0x199af
   19955:	push   esi
   19956:	push   0x20736649
   1995b:	push   0x80
   19960:	push   0x0
   19962:	call   DWORD PTR ds:0x1f064
   19968:	mov    esi,eax
   1996a:	mov    DWORD PTR [ebp-0x4],esi
   1996d:	push   0x0
   1996f:	push   edi
   19970:	push   esi
   19971:	call   0x1a056
   19976:	mov    ecx,eax
   19978:	sub    ecx,edi
   1997a:	add    DWORD PTR [ebp+0x8],ecx
   1997d:	add    esi,ecx
   1997f:	cmp    DWORD PTR [ebp+0x8],0x5
   19983:	mov    edi,eax
   19985:	jb     0x1996d
   19987:	push   DWORD PTR [ebp+0x8]
   1998a:	push   0x90
   1998f:	push   ebx
   19990:	call   0x1db4c
   19995:	add    esp,0xc
   19998:	push   esi
   19999:	lea    eax,[ebx+0x5]
   1999c:	push   eax
   1999d:	call   0x1991a
   199a2:	push   ebx
   199a3:	push   DWORD PTR [ebp+0xc]
   199a6:	call   0x1991a
   199ab:	mov    eax,DWORD PTR [ebp-0x4]
   199ae:	pop    esi
   199af:	pop    edi
   199b0:	pop    ebx
   199b1:	leave  
   199b2:	ret    0x8
   199b5:	int3   
   199b6:	int3   
   199b7:	int3   
   199b8:	int3   
   199b9:	int3   
   199ba:	mov    edi,edi
   199bc:	push   ebp
   199bd:	mov    ebp,esp
   199bf:	mov    eax,DWORD PTR [ebp+0x8]
   199c2:	mov    eax,DWORD PTR [eax+0x1]
   199c5:	pop    ebp
   199c6:	ret    0x4
   199c9:	int3   
   199ca:	int3   
   199cb:	int3   
   199cc:	int3   
   199cd:	int3   
   199ce:	mov    edi,edi
   199d0:	push   ebp
   199d1:	mov    ebp,esp
   199d3:	mov    ecx,DWORD PTR [ebp+0x8]
   199d6:	movzx  eax,WORD PTR [ecx+0x14]
   199da:	lea    eax,[eax+ecx*1+0x18]
   199de:	movzx  ecx,WORD PTR [ecx+0x6]
   199e2:	push   esi
   199e3:	xor    esi,esi
   199e5:	push   edi
   199e6:	test   ecx,ecx
   199e8:	jbe    0x19a04
   199ea:	mov    edx,DWORD PTR [eax+0xc]
   199ed:	cmp    DWORD PTR [ebp+0xc],edx
   199f0:	jb     0x199fc
   199f2:	mov    edi,DWORD PTR [eax+0x8]
   199f5:	add    edi,edx
   199f7:	cmp    DWORD PTR [ebp+0xc],edi
   199fa:	jb     0x19a06
   199fc:	add    eax,0x28
   199ff:	inc    esi
   19a00:	cmp    esi,ecx
   19a02:	jb     0x199ea
   19a04:	xor    eax,eax
   19a06:	pop    edi
   19a07:	pop    esi
   19a08:	pop    ebp
   19a09:	ret    0x8
   19a0c:	int3   
   19a0d:	int3   
   19a0e:	int3   
   19a0f:	int3   
   19a10:	int3   
   19a11:	int3   
   19a12:	mov    edi,edi
   19a14:	push   ebp
   19a15:	mov    ebp,esp
   19a17:	push   esi
   19a18:	push   DWORD PTR [ebp+0xc]
   19a1b:	mov    esi,DWORD PTR [ebp+0x8]
   19a1e:	push   esi
   19a1f:	call   0x199ce
   19a24:	mov    ecx,eax
   19a26:	test   ecx,ecx
   19a28:	je     0x19a3b
   19a2a:	mov    eax,DWORD PTR [esi+0x3c]
   19a2d:	dec    eax
   19a2e:	not    eax
   19a30:	and    eax,DWORD PTR [ecx+0x14]
   19a33:	sub    eax,DWORD PTR [ecx+0xc]
   19a36:	add    eax,DWORD PTR [ebp+0xc]
   19a39:	jmp    0x19a3e
   19a3b:	mov    eax,DWORD PTR [ebp+0xc]
   19a3e:	pop    esi
   19a3f:	pop    ebp
   19a40:	ret    0x8
   19a43:	int3   
   19a44:	int3   
   19a45:	int3   
   19a46:	int3   
   19a47:	int3   
   19a48:	mov    edi,edi
   19a4a:	push   ebp
   19a4b:	mov    ebp,esp
   19a4d:	cmp    DWORD PTR [ebp+0x10],0x0
   19a51:	je     0x19a58
   19a53:	mov    eax,DWORD PTR [ebp+0xc]
   19a56:	jmp    0x19a63
   19a58:	push   DWORD PTR [ebp+0xc]
   19a5b:	push   DWORD PTR [ebp+0x8]
   19a5e:	call   0x19a12
   19a63:	pop    ebp
   19a64:	ret    0xc
   19a67:	int3   
   19a68:	int3   
   19a69:	int3   
   19a6a:	int3   
   19a6b:	int3   
   19a6c:	mov    edi,edi
   19a6e:	push   ebp
   19a6f:	mov    ebp,esp
   19a71:	sub    esp,0x1c
   19a74:	push   ebx
   19a75:	push   esi
   19a76:	mov    esi,DWORD PTR [ebp+0x8]
   19a79:	push   edi
   19a7a:	push   esi
   19a7b:	call   0x1190c
   19a80:	call   eax
   19a82:	mov    ebx,eax
   19a84:	lea    eax,[ebp-0x14]
   19a87:	push   eax
   19a88:	push   0x0
   19a8a:	push   0x0
   19a8c:	push   esi
   19a8d:	mov    DWORD PTR [ebp-0x4],ebx
   19a90:	call   0x11936
   19a95:	call   eax
   19a97:	mov    edi,eax
   19a99:	mov    eax,DWORD PTR [ebx+0x50]
   19a9c:	mov    ecx,edi
   19a9e:	sub    ecx,esi
   19aa0:	cmp    eax,ecx
   19aa2:	jb     0x19af3
   19aa4:	mov    ecx,DWORD PTR [ebp-0x14]
   19aa7:	sub    ecx,esi
   19aa9:	add    ecx,edi
   19aab:	cmp    eax,ecx
   19aad:	jb     0x19af3
   19aaf:	push   DWORD PTR [ebp+0x10]
   19ab2:	push   DWORD PTR [edi+0x20]
   19ab5:	push   ebx
   19ab6:	call   0x19a48
   19abb:	push   DWORD PTR [ebp+0x10]
   19abe:	mov    ebx,eax
   19ac0:	push   DWORD PTR [edi+0x1c]
   19ac3:	add    ebx,esi
   19ac5:	push   DWORD PTR [ebp-0x4]
   19ac8:	call   0x19a48
   19acd:	push   DWORD PTR [ebp+0x10]
   19ad0:	add    eax,esi
   19ad2:	push   DWORD PTR [edi+0x24]
   19ad5:	mov    DWORD PTR [ebp-0x1c],eax
   19ad8:	push   DWORD PTR [ebp-0x4]
   19adb:	call   0x19a48
   19ae0:	and    DWORD PTR [ebp-0xc],0x0
   19ae4:	add    eax,esi
   19ae6:	mov    esi,DWORD PTR [edi+0x18]
   19ae9:	mov    DWORD PTR [ebp-0x18],eax
   19aec:	mov    DWORD PTR [ebp-0x8],esi
   19aef:	test   esi,esi
   19af1:	jg     0x19aff
   19af3:	xor    eax,eax
   19af5:	pop    edi
   19af6:	pop    esi
   19af7:	pop    ebx
   19af8:	leave  
   19af9:	ret    0xc
   19afc:	mov    esi,DWORD PTR [ebp-0x8]
   19aff:	mov    eax,DWORD PTR [ebp-0xc]
   19b02:	push   DWORD PTR [ebp+0x10]
   19b05:	add    esi,eax
   19b07:	mov    eax,DWORD PTR [ebp+0xc]
   19b0a:	sar    esi,1
   19b0c:	push   DWORD PTR [ebx+esi*4]
   19b0f:	mov    DWORD PTR [ebp-0x10],eax
   19b12:	push   DWORD PTR [ebp-0x4]
   19b15:	call   0x19a48
   19b1a:	add    eax,DWORD PTR [ebp+0x8]
   19b1d:	mov    cl,BYTE PTR [eax]
   19b1f:	mov    edx,DWORD PTR [ebp-0x10]
   19b22:	cmp    cl,BYTE PTR [edx]
   19b24:	jne    0x19b41
   19b26:	test   cl,cl
   19b28:	je     0x19b3d
   19b2a:	mov    cl,BYTE PTR [eax+0x1]
   19b2d:	cmp    cl,BYTE PTR [edx+0x1]
   19b30:	jne    0x19b41
   19b32:	inc    eax
   19b33:	inc    eax
   19b34:	inc    edx
   19b35:	inc    edx
   19b36:	mov    DWORD PTR [ebp-0x10],edx
   19b39:	test   cl,cl
   19b3b:	jne    0x19b1d
   19b3d:	xor    eax,eax
   19b3f:	jmp    0x19b46
   19b41:	sbb    eax,eax
   19b43:	sbb    eax,0xffffffff
   19b46:	test   eax,eax
   19b48:	je     0x19b5f
   19b4a:	jge    0x19b52
   19b4c:	inc    esi
   19b4d:	mov    DWORD PTR [ebp-0xc],esi
   19b50:	jmp    0x19b55
   19b52:	mov    DWORD PTR [ebp-0x8],esi
   19b55:	mov    eax,DWORD PTR [ebp-0x8]
   19b58:	cmp    DWORD PTR [ebp-0xc],eax
   19b5b:	jl     0x19afc
   19b5d:	jmp    0x19af3
   19b5f:	mov    eax,DWORD PTR [ebp-0x18]
   19b62:	movzx  eax,WORD PTR [eax+esi*2]
   19b66:	mov    ecx,DWORD PTR [ebp-0x1c]
   19b69:	mov    ecx,DWORD PTR [ecx+eax*4]
   19b6c:	mov    eax,ecx
   19b6e:	sub    eax,edi
   19b70:	add    eax,DWORD PTR [ebp+0x8]
   19b73:	cmp    eax,DWORD PTR [ebp-0x14]
   19b76:	sbb    eax,eax
   19b78:	not    eax
   19b7a:	and    eax,ecx
   19b7c:	jmp    0x19af5
   19b81:	int3   
   19b82:	int3   
   19b83:	int3   
   19b84:	int3   
   19b85:	int3   
   19b86:	mov    edi,edi
   19b88:	push   ebp
   19b89:	mov    ebp,esp
   19b8b:	sub    esp,0x814
   19b91:	mov    eax,ds:0x7751c
   19b96:	xor    eax,ebp
   19b98:	mov    DWORD PTR [ebp-0x4],eax
   19b9b:	mov    ecx,DWORD PTR [ebp+0xc]
   19b9e:	push   ebx
   19b9f:	mov    ebx,DWORD PTR [ebp+0x8]
   19ba2:	push   esi
   19ba3:	push   edi
   19ba4:	xor    esi,esi
   19ba6:	xor    eax,eax
   19ba8:	push   ecx
   19ba9:	mov    DWORD PTR [ebp-0x7ec],esi
   19baf:	lea    edi,[ebp-0x7e8]
   19bb5:	stos   DWORD PTR es:[edi],eax
   19bb6:	lea    eax,[ebp-0x7d4]
   19bbc:	push   0x1ed56
   19bc1:	push   eax
   19bc2:	mov    DWORD PTR [ebp-0x7d8],esi
   19bc8:	mov    DWORD PTR [ebp-0x7e4],esi
   19bce:	call   DWORD PTR ds:0x1f04c
   19bd4:	add    esp,0xc
   19bd7:	lea    eax,[ebp-0x7d4]
   19bdd:	push   eax
   19bde:	lea    eax,[ebp-0x80c]
   19be4:	push   eax
   19be5:	call   DWORD PTR ds:0x1f008
   19beb:	push   0x10
   19bed:	lea    eax,[ebp-0x80c]
   19bf3:	mov    DWORD PTR [ebp-0x7fc],eax
   19bf9:	push   0x1
   19bfb:	lea    eax,[ebp-0x814]
   19c01:	push   eax
   19c02:	lea    eax,[ebp-0x804]
   19c08:	push   eax
   19c09:	push   0x80100000
   19c0e:	lea    eax,[ebp-0x7dc]
   19c14:	push   eax
   19c15:	mov    DWORD PTR [ebp-0x804],0x18
   19c1f:	mov    DWORD PTR [ebp-0x800],esi
   19c25:	mov    DWORD PTR [ebp-0x7f8],esi
   19c2b:	mov    DWORD PTR [ebp-0x7f4],esi
   19c31:	mov    DWORD PTR [ebp-0x7f0],esi
   19c37:	call   0x117bc
   19c3c:	call   eax
   19c3e:	cmp    eax,esi
   19c40:	jl     0x19cbe
   19c42:	push   DWORD PTR [ebp-0x7dc]
   19c48:	lea    eax,[ebp-0x7ec]
   19c4e:	push   DWORD PTR [ebp+0x10]
   19c51:	push   0x2
   19c53:	push   eax
   19c54:	push   esi
   19c55:	push   0x4
   19c57:	lea    eax,[ebp-0x7e0]
   19c5d:	push   eax
   19c5e:	call   0x11ca8
   19c63:	call   eax
   19c65:	push   DWORD PTR [ebp-0x7dc]
   19c6b:	mov    edi,eax
   19c6d:	call   0x119de
   19c72:	call   eax
   19c74:	cmp    edi,esi
   19c76:	jge    0x19c7c
   19c78:	mov    eax,edi
   19c7a:	jmp    0x19cbe
   19c7c:	push   0x2
   19c7e:	push   esi
   19c7f:	push   0x2
   19c81:	lea    eax,[ebp-0x7e4]
   19c87:	push   eax
   19c88:	push   esi
   19c89:	push   esi
   19c8a:	push   esi
   19c8b:	lea    eax,[ebp-0x7d8]
   19c91:	push   eax
   19c92:	push   0xffffffff
   19c94:	push   DWORD PTR [ebp-0x7e0]
   19c9a:	call   0x11c7e
   19c9f:	call   eax
   19ca1:	push   DWORD PTR [ebp-0x7e0]
   19ca7:	mov    edi,eax
   19ca9:	call   0x119de
   19cae:	call   eax
   19cb0:	cmp    edi,esi
   19cb2:	jl     0x19c78
   19cb4:	mov    eax,DWORD PTR [ebp-0x7d8]
   19cba:	mov    DWORD PTR [ebx],eax
   19cbc:	xor    eax,eax
   19cbe:	mov    ecx,DWORD PTR [ebp-0x4]
   19cc1:	pop    edi
   19cc2:	pop    esi
   19cc3:	xor    ecx,ebp
   19cc5:	pop    ebx
   19cc6:	call   0x1dae7
   19ccb:	leave  
   19ccc:	ret    0xc
   19ccf:	int3   
   19cd0:	int3   
   19cd1:	int3   
   19cd2:	int3   
   19cd3:	int3   
   19cd4:	mov    edi,edi
   19cd6:	push   ebp
   19cd7:	mov    ebp,esp
   19cd9:	push   DWORD PTR [ebp+0x8]
   19cdc:	push   0xffffffff
   19cde:	call   0x11cd2
   19ce3:	call   eax
   19ce5:	pop    ebp
   19ce6:	ret    0x4
   19ce9:	int3   
   19cea:	int3   
   19ceb:	int3   
   19cec:	int3   
   19ced:	int3   
   19cee:	mov    edi,edi
   19cf0:	push   ebp
   19cf1:	mov    ebp,esp
   19cf3:	push   esi
   19cf4:	mov    esi,DWORD PTR [ebp+0x8]
   19cf7:	test   esi,esi
   19cf9:	jne    0x19cfe
   19cfb:	lea    esi,[ecx+0x18]
   19cfe:	mov    edx,DWORD PTR [ebp+0xc]
   19d01:	test   edx,edx
   19d03:	jne    0x19d09
   19d05:	xor    eax,eax
   19d07:	jmp    0x19d19
   19d09:	movzx  eax,BYTE PTR [edx]
   19d0c:	push   edx
   19d0d:	lea    eax,[eax*8+0x736e0]
   19d14:	push   esi
   19d15:	push   eax
   19d16:	call   DWORD PTR [eax+0x4]
   19d19:	pop    esi
   19d1a:	pop    ebp
   19d1b:	ret    0x8
   19d1e:	int3   
   19d1f:	int3   
   19d20:	int3   
   19d21:	int3   
   19d22:	int3   
   19d23:	int3   
   19d24:	mov    edi,edi
   19d26:	push   ebp
   19d27:	mov    ebp,esp
   19d29:	mov    eax,DWORD PTR [ebp+0x14]
   19d2c:	push   ebx
   19d2d:	mov    ebx,DWORD PTR [ebp+0x8]
   19d30:	push   esi
   19d31:	mov    esi,DWORD PTR [ebp+0x10]
   19d34:	sub    esi,eax
   19d36:	push   edi
   19d37:	lea    edi,[ebx+eax*1]
   19d3a:	mov    eax,esi
   19d3c:	xor    edx,edx
   19d3e:	dec    eax
   19d3f:	je     0x19d60
   19d41:	dec    eax
   19d42:	je     0x19d52
   19d44:	dec    eax
   19d45:	dec    eax
   19d46:	jne    0x19d6c
   19d48:	mov    eax,DWORD PTR [ecx+0xc]
   19d4b:	mov    edx,DWORD PTR [edi]
   19d4d:	and    DWORD PTR [eax],0x0
   19d50:	jmp    0x19d6c
   19d52:	mov    eax,DWORD PTR [ecx+0xc]
   19d55:	movsx  edx,WORD PTR [edi]
   19d58:	mov    DWORD PTR [eax],0x2
   19d5e:	jmp    0x19d6c
   19d60:	mov    eax,DWORD PTR [ecx+0xc]
   19d63:	movsx  edx,BYTE PTR [edi]
   19d66:	mov    DWORD PTR [eax],0x3
   19d6c:	mov    ecx,DWORD PTR [ebp+0xc]
   19d6f:	lea    eax,[edx+ecx*1]
   19d72:	add    eax,DWORD PTR [ebp+0x10]
   19d75:	sub    edx,ebx
   19d77:	add    edx,ecx
   19d79:	dec    esi
   19d7a:	je     0x19d8c
   19d7c:	dec    esi
   19d7d:	je     0x19d87
   19d7f:	dec    esi
   19d80:	dec    esi
   19d81:	jne    0x19d8e
   19d83:	mov    DWORD PTR [edi],edx
   19d85:	jmp    0x19d8e
   19d87:	mov    WORD PTR [edi],dx
   19d8a:	jmp    0x19d8e
   19d8c:	mov    BYTE PTR [edi],dl
   19d8e:	pop    edi
   19d8f:	pop    esi
   19d90:	pop    ebx
   19d91:	pop    ebp
   19d92:	ret    0x10
   19d95:	int3   
   19d96:	int3   
   19d97:	int3   
   19d98:	int3   
   19d99:	int3   
   19d9a:	mov    edi,edi
   19d9c:	push   ebp
   19d9d:	mov    ebp,esp
   19d9f:	mov    eax,DWORD PTR [ebp+0x10]
   19da2:	inc    eax
   19da3:	pop    ebp
   19da4:	ret    0xc
   19da7:	int3   
   19da8:	int3   
   19da9:	int3   
   19daa:	int3   
   19dab:	int3   
   19dac:	mov    edi,edi
   19dae:	push   ebp
   19daf:	mov    ebp,esp
   19db1:	mov    eax,ecx
   19db3:	mov    ecx,DWORD PTR [ebp+0x8]
   19db6:	and    DWORD PTR [eax],0x0
   19db9:	and    DWORD PTR [eax+0x4],0x0
   19dbd:	test   ecx,ecx
   19dbf:	jne    0x19dc4
   19dc1:	lea    ecx,[eax+0x14]
   19dc4:	mov    edx,DWORD PTR [ebp+0xc]
   19dc7:	mov    DWORD PTR [eax+0x8],ecx
   19dca:	test   edx,edx
   19dcc:	jne    0x19dd1
   19dce:	lea    edx,[eax+0x10]
   19dd1:	mov    DWORD PTR [eax+0xc],edx
   19dd4:	and    DWORD PTR [ecx],0x0
   19dd7:	mov    ecx,DWORD PTR [eax+0xc]
   19dda:	and    DWORD PTR [ecx],0x0
   19ddd:	pop    ebp
   19dde:	ret    0x8
   19de1:	int3   
   19de2:	int3   
   19de3:	int3   
   19de4:	int3   
   19de5:	int3   
   19de6:	mov    edi,edi
   19de8:	push   ebp
   19de9:	mov    ebp,esp
   19deb:	push   ecx
   19dec:	mov    eax,DWORD PTR [ebp+0x8]
   19def:	mov    eax,DWORD PTR [eax]
   19df1:	push   ebx
   19df2:	push   esi
   19df3:	push   edi
   19df4:	mov    DWORD PTR [ebp-0x4],ecx
   19df7:	mov    esi,eax
   19df9:	test   eax,0x200000
   19dfe:	je     0x19e0b
   19e00:	cmp    DWORD PTR [ecx+0x4],0x0
   19e04:	je     0x19e10
   19e06:	shr    esi,0xb
   19e09:	jmp    0x19e13
   19e0b:	cmp    DWORD PTR [ecx],0x0
   19e0e:	jmp    0x19e04
   19e10:	shr    esi,0x8
   19e13:	mov    ebx,DWORD PTR [ebp+0x10]
   19e16:	and    esi,0x7
   19e19:	shr    eax,0xe
   19e1c:	and    eax,0x7
   19e1f:	mov    edi,esi
   19e21:	jbe    0x19e5d
   19e23:	add    eax,ebx
   19e25:	mov    cl,BYTE PTR [eax]
   19e27:	movzx  edx,cl
   19e2a:	mov    dl,BYTE PTR [edx+0x735e0]
   19e30:	test   dl,0x10
   19e33:	je     0x19e55
   19e35:	mov    al,BYTE PTR [eax+0x1]
   19e38:	and    al,0x7
   19e3a:	cmp    al,0x5
   19e3c:	jne    0x19e55
   19e3e:	and    cl,0xc0
   19e41:	je     0x19e52
   19e43:	cmp    cl,0x40
   19e46:	jne    0x19e4d
   19e48:	lea    edi,[esi+0x1]
   19e4b:	jmp    0x19e55
   19e4d:	cmp    cl,0x80
   19e50:	jne    0x19e55
   19e52:	lea    edi,[esi+0x4]
   19e55:	movzx  eax,dl
   19e58:	and    eax,0xf
   19e5b:	add    edi,eax
   19e5d:	push   edi
   19e5e:	push   ebx
   19e5f:	push   DWORD PTR [ebp+0xc]
   19e62:	call   0x1db58
   19e67:	mov    ecx,DWORD PTR [ebp+0x8]
   19e6a:	mov    eax,DWORD PTR [ecx]
   19e6c:	shl    eax,0xc
   19e6f:	sar    eax,0x1d
   19e72:	add    esp,0xc
   19e75:	test   eax,eax
   19e77:	je     0x19e93
   19e79:	push   eax
   19e7a:	push   esi
   19e7b:	mov    esi,DWORD PTR [ebp-0x4]
   19e7e:	push   ebx
   19e7f:	push   DWORD PTR [ebp+0xc]
   19e82:	mov    ecx,esi
   19e84:	call   0x19d24
   19e89:	mov    ecx,DWORD PTR [esi+0x8]
   19e8c:	mov    DWORD PTR [ecx],eax
   19e8e:	mov    ecx,DWORD PTR [ebp+0x8]
   19e91:	jmp    0x19e96
   19e93:	mov    esi,DWORD PTR [ebp-0x4]
   19e96:	test   DWORD PTR [ecx],0x400000
   19e9c:	je     0x19ea3
   19e9e:	mov    eax,DWORD PTR [esi+0xc]
   19ea1:	neg    DWORD PTR [eax]
   19ea3:	test   DWORD PTR [ecx],0x100000
   19ea9:	je     0x19eb1
   19eab:	mov    eax,DWORD PTR [esi+0x8]
   19eae:	or     DWORD PTR [eax],0xffffffff
   19eb1:	lea    eax,[edi+ebx*1]
   19eb4:	pop    edi
   19eb5:	pop    esi
   19eb6:	pop    ebx
   19eb7:	leave  
   19eb8:	ret    0xc
   19ebb:	int3   
   19ebc:	int3   
   19ebd:	int3   
   19ebe:	int3   
   19ebf:	int3   
   19ec0:	mov    edi,edi
   19ec2:	push   ebp
   19ec3:	mov    ebp,esp
   19ec5:	push   ebx
   19ec6:	push   esi
   19ec7:	mov    esi,DWORD PTR [ebp+0x10]
   19eca:	push   edi
   19ecb:	mov    edi,DWORD PTR [ebp+0xc]
   19ece:	push   esi
   19ecf:	push   edi
   19ed0:	push   DWORD PTR [ebp+0x8]
   19ed3:	mov    ebx,ecx
   19ed5:	call   0x19de6
   19eda:	lea    eax,[esi+0x1]
   19edd:	movzx  edx,BYTE PTR [eax]
   19ee0:	push   eax
   19ee1:	inc    edi
   19ee2:	lea    edx,[edx*8+0x736e0]
   19ee9:	push   edi
   19eea:	push   edx
   19eeb:	mov    ecx,ebx
   19eed:	call   DWORD PTR [edx+0x4]
   19ef0:	pop    edi
   19ef1:	pop    esi
   19ef2:	pop    ebx
   19ef3:	pop    ebp
   19ef4:	ret    0xc
   19ef7:	int3   
   19ef8:	int3   
   19ef9:	int3   
   19efa:	int3   
   19efb:	int3   
   19efc:	mov    edi,edi
   19efe:	push   ebp
   19eff:	mov    ebp,esp
   19f01:	push   ebx
   19f02:	push   esi
   19f03:	mov    esi,DWORD PTR [ebp+0x10]
   19f06:	push   edi
   19f07:	mov    edi,DWORD PTR [ebp+0xc]
   19f0a:	push   esi
   19f0b:	push   edi
   19f0c:	push   DWORD PTR [ebp+0x8]
   19f0f:	mov    ebx,ecx
   19f11:	call   0x19de6
   19f16:	lea    eax,[esi+0x1]
   19f19:	movzx  edx,BYTE PTR [eax]
   19f1c:	push   eax
   19f1d:	inc    edi
   19f1e:	lea    edx,[edx*8+0x73ee8]
   19f25:	push   edi
   19f26:	push   edx
   19f27:	mov    ecx,ebx
   19f29:	call   DWORD PTR [edx+0x4]
   19f2c:	pop    edi
   19f2d:	pop    esi
   19f2e:	pop    ebx
   19f2f:	pop    ebp
   19f30:	ret    0xc
   19f33:	int3   
   19f34:	int3   
   19f35:	int3   
   19f36:	int3   
   19f37:	int3   
   19f38:	mov    edi,edi
   19f3a:	push   ebp
   19f3b:	mov    ebp,esp
   19f3d:	mov    DWORD PTR [ecx],0x1
   19f43:	pop    ebp
   19f44:	jmp    0x19ec0
   19f49:	int3   
   19f4a:	int3   
   19f4b:	int3   
   19f4c:	int3   
   19f4d:	int3   
   19f4e:	mov    edi,edi
   19f50:	push   ebp
   19f51:	mov    ebp,esp
   19f53:	mov    DWORD PTR [ecx+0x4],0x1
   19f5a:	pop    ebp
   19f5b:	jmp    0x19ec0
   19f60:	int3   
   19f61:	int3   
   19f62:	int3   
   19f63:	int3   
   19f64:	int3   
   19f65:	int3   
   19f66:	mov    edi,edi
   19f68:	push   ebp
   19f69:	mov    ebp,esp
   19f6b:	mov    eax,DWORD PTR [ebp+0x10]
   19f6e:	sub    esp,0x10
   19f71:	test   BYTE PTR [eax+0x1],0x38
   19f75:	push   eax
   19f76:	push   DWORD PTR [ebp+0xc]
   19f79:	jne    0x19f8e
   19f7b:	mov    DWORD PTR [ebp-0x8],0x5bf6
   19f82:	mov    DWORD PTR [ebp-0x4],0x19de6
   19f89:	lea    eax,[ebp-0x8]
   19f8c:	jmp    0x19f9f
   19f8e:	mov    DWORD PTR [ebp-0x10],0x52f6
   19f95:	mov    DWORD PTR [ebp-0xc],0x19de6
   19f9c:	lea    eax,[ebp-0x10]
   19f9f:	push   eax
   19fa0:	call   0x19de6
   19fa5:	leave  
   19fa6:	ret    0xc
   19fa9:	int3   
   19faa:	int3   
   19fab:	int3   
   19fac:	int3   
   19fad:	int3   
   19fae:	mov    edi,edi
   19fb0:	push   ebp
   19fb1:	mov    ebp,esp
   19fb3:	mov    eax,DWORD PTR [ebp+0x10]
   19fb6:	sub    esp,0x10
   19fb9:	test   BYTE PTR [eax+0x1],0x38
   19fbd:	push   eax
   19fbe:	push   DWORD PTR [ebp+0xc]
   19fc1:	jne    0x19fd6
   19fc3:	mov    DWORD PTR [ebp-0x8],0x66f7
   19fca:	mov    DWORD PTR [ebp-0x4],0x19de6
   19fd1:	lea    eax,[ebp-0x8]
   19fd4:	jmp    0x19fe7
   19fd6:	mov    DWORD PTR [ebp-0x10],0x52f7
   19fdd:	mov    DWORD PTR [ebp-0xc],0x19de6
   19fe4:	lea    eax,[ebp-0x10]
   19fe7:	push   eax
   19fe8:	call   0x19de6
   19fed:	leave  
   19fee:	ret    0xc
   19ff1:	int3   
   19ff2:	int3   
   19ff3:	int3   
   19ff4:	int3   
   19ff5:	int3   
   19ff6:	mov    edi,edi
   19ff8:	push   ebp
   19ff9:	mov    ebp,esp
   19ffb:	push   ecx
   19ffc:	push   ecx
   19ffd:	mov    edx,DWORD PTR [ebp+0x10]
   1a000:	mov    al,BYTE PTR [edx+0x1]
   1a003:	cmp    al,0x15
   1a005:	je     0x1a025
   1a007:	cmp    al,0x25
   1a009:	je     0x1a025
   1a00b:	and    al,0x38
   1a00d:	cmp    al,0x10
   1a00f:	je     0x1a01d
   1a011:	cmp    al,0x18
   1a013:	je     0x1a01d
   1a015:	cmp    al,0x20
   1a017:	je     0x1a01d
   1a019:	cmp    al,0x28
   1a01b:	jne    0x1a031
   1a01d:	mov    eax,DWORD PTR [ecx+0x8]
   1a020:	or     DWORD PTR [eax],0xffffffff
   1a023:	jmp    0x1a031
   1a025:	mov    eax,DWORD PTR [edx+0x2]
   1a028:	mov    eax,DWORD PTR [eax]
   1a02a:	push   esi
   1a02b:	mov    esi,DWORD PTR [ecx+0x8]
   1a02e:	mov    DWORD PTR [esi],eax
   1a030:	pop    esi
   1a031:	push   edx
   1a032:	push   DWORD PTR [ebp+0xc]
   1a035:	lea    eax,[ebp-0x8]
   1a038:	push   eax
   1a039:	mov    DWORD PTR [ebp-0x8],0x52ff
   1a040:	mov    DWORD PTR [ebp-0x4],0x19de6
   1a047:	call   0x19de6
   1a04c:	leave  
   1a04d:	ret    0xc
   1a050:	int3   
   1a051:	int3   
   1a052:	int3   
   1a053:	int3   
   1a054:	int3   
   1a055:	int3   
   1a056:	mov    edi,edi
   1a058:	push   ebp
   1a059:	mov    ebp,esp
   1a05b:	sub    esp,0x5c
   1a05e:	mov    eax,ds:0x7751c
   1a063:	xor    eax,ebp
   1a065:	mov    DWORD PTR [ebp-0x4],eax
   1a068:	mov    eax,DWORD PTR [ebp+0x10]
   1a06b:	push   esi
   1a06c:	mov    esi,DWORD PTR [ebp+0x8]
   1a06f:	push   edi
   1a070:	mov    edi,DWORD PTR [ebp+0xc]
   1a073:	push   0x0
   1a075:	push   eax
   1a076:	lea    ecx,[ebp-0x5c]
   1a079:	call   0x19dac
   1a07e:	push   edi
   1a07f:	push   esi
   1a080:	lea    ecx,[ebp-0x5c]
   1a083:	call   0x19cee
   1a088:	mov    ecx,DWORD PTR [ebp-0x4]
   1a08b:	pop    edi
   1a08c:	xor    ecx,ebp
   1a08e:	pop    esi
   1a08f:	call   0x1dae7
   1a094:	leave  
   1a095:	ret    0xc
   1a098:	int3   
   1a099:	int3   
   1a09a:	int3   
   1a09b:	int3   
   1a09c:	int3   
   1a09d:	int3   
   1a09e:	mov    edi,edi
   1a0a0:	push   ebp
   1a0a1:	mov    ebp,esp
   1a0a3:	push   esi
   1a0a4:	mov    esi,DWORD PTR [ebp+0x8]
   1a0a7:	push   edi
   1a0a8:	mov    edi,ecx
   1a0aa:	cmp    edi,esi
   1a0ac:	je     0x1a0d9
   1a0ae:	mov    eax,DWORD PTR [edi+0x4]
   1a0b1:	cmp    eax,DWORD PTR [esi+0x4]
   1a0b4:	je     0x1a0c8
   1a0b6:	cmp    BYTE PTR [edi],0x0
   1a0b9:	je     0x1a0c2
   1a0bb:	push   eax
   1a0bc:	call   0x10a3a
   1a0c1:	pop    ecx
   1a0c2:	mov    al,BYTE PTR [esi]
   1a0c4:	mov    BYTE PTR [edi],al
   1a0c6:	jmp    0x1a0d0
   1a0c8:	cmp    BYTE PTR [esi],0x0
   1a0cb:	je     0x1a0d0
   1a0cd:	mov    BYTE PTR [edi],0x1
   1a0d0:	mov    eax,DWORD PTR [esi+0x4]
   1a0d3:	mov    BYTE PTR [esi],0x0
   1a0d6:	mov    DWORD PTR [edi+0x4],eax
   1a0d9:	mov    eax,edi
   1a0db:	pop    edi
   1a0dc:	pop    esi
   1a0dd:	pop    ebp
   1a0de:	ret    0x4
   1a0e1:	int3   
   1a0e2:	int3   
   1a0e3:	int3   
   1a0e4:	int3   
   1a0e5:	int3   
   1a0e6:	mov    edi,edi
   1a0e8:	push   ebp
   1a0e9:	mov    ebp,esp
   1a0eb:	sub    esp,0x50
   1a0ee:	push   ebx
   1a0ef:	push   esi
   1a0f0:	push   edi
   1a0f1:	mov    edi,0x4000
   1a0f6:	push   edi
   1a0f7:	call   0x10a06
   1a0fc:	pop    ecx
   1a0fd:	xor    ebx,ebx
   1a0ff:	push   0x38
   1a101:	push   0x1ed86
   1a106:	cmp    eax,ebx
   1a108:	mov    DWORD PTR [ebp-0x4],eax
   1a10b:	mov    DWORD PTR [ebp-0xc],eax
   1a10e:	push   0x2f
   1a110:	lea    eax,[ebp-0x50]
   1a113:	setne  BYTE PTR [ebp-0x10]
   1a117:	push   eax
   1a118:	xor    esi,esi
   1a11a:	mov    DWORD PTR [ebp-0x30],ebx
   1a11d:	mov    DWORD PTR [ebp-0x2c],ebx
   1a120:	mov    DWORD PTR [ebp-0x28],ebx
   1a123:	mov    DWORD PTR [ebp-0x4c],ebx
   1a126:	mov    DWORD PTR [ebp-0x50],ebx
   1a129:	call   0x1b9dc
   1a12e:	test   eax,eax
   1a130:	je     0x1a14f
   1a132:	mov    esi,DWORD PTR [ebp+0x8]
   1a135:	mov    BYTE PTR [esi],bl
   1a137:	mov    DWORD PTR [esi+0x4],ebx
   1a13a:	cmp    BYTE PTR [ebp-0x10],bl
   1a13d:	je     0x1a148
   1a13f:	push   DWORD PTR [ebp-0x4]
   1a142:	call   0x10a3a
   1a147:	pop    ecx
   1a148:	mov    eax,esi
   1a14a:	jmp    0x1a264
   1a14f:	mov    eax,DWORD PTR [ebp+0x10]
   1a152:	mov    DWORD PTR [ebp-0x4c],eax
   1a155:	mov    eax,DWORD PTR [ebp+0xc]
   1a158:	mov    DWORD PTR [ebp-0x50],eax
   1a15b:	mov    eax,DWORD PTR [ebp-0xc]
   1a15e:	add    eax,esi
   1a160:	mov    DWORD PTR [ebp-0x44],eax
   1a163:	push   0x4
   1a165:	lea    eax,[ebp-0x50]
   1a168:	push   eax
   1a169:	mov    DWORD PTR [ebp-0x40],edi
   1a16c:	call   0x1bb70
   1a171:	cmp    eax,0xfffffffc
   1a174:	mov    DWORD PTR [ebp+0x10],eax
   1a177:	jl     0x1a18b
   1a179:	cmp    eax,0xfffffffd
   1a17c:	jle    0x1a214
   1a182:	cmp    eax,0x2
   1a185:	je     0x1a214
   1a18b:	mov    eax,edi
   1a18d:	sub    eax,DWORD PTR [ebp-0x40]
   1a190:	add    esi,eax
   1a192:	cmp    DWORD PTR [ebp-0x40],ebx
   1a195:	jne    0x1a1fe
   1a197:	mov    al,BYTE PTR [ebp-0x10]
   1a19a:	mov    BYTE PTR [ebp-0x18],al
   1a19d:	mov    eax,DWORD PTR [ebp-0xc]
   1a1a0:	mov    DWORD PTR [ebp-0x14],eax
   1a1a3:	lea    eax,[esi+0x4000]
   1a1a9:	push   eax
   1a1aa:	mov    BYTE PTR [ebp-0x10],bl
   1a1ad:	call   0x10a06
   1a1b2:	pop    ecx
   1a1b3:	cmp    eax,ebx
   1a1b5:	setne  cl
   1a1b8:	mov    DWORD PTR [ebp-0x4],eax
   1a1bb:	lea    eax,[ebp-0x8]
   1a1be:	mov    BYTE PTR [ebp-0x8],cl
   1a1c1:	push   eax
   1a1c2:	lea    ecx,[ebp-0x10]
   1a1c5:	call   0x1a09e
   1a1ca:	cmp    BYTE PTR [ebp-0x8],bl
   1a1cd:	je     0x1a1d8
   1a1cf:	push   DWORD PTR [ebp-0x4]
   1a1d2:	call   0x10a3a
   1a1d7:	pop    ecx
   1a1d8:	push   esi
   1a1d9:	push   DWORD PTR [ebp-0x14]
   1a1dc:	push   DWORD PTR [ebp-0xc]
   1a1df:	call   0x1db58
   1a1e4:	add    esp,0xc
   1a1e7:	cmp    BYTE PTR [ebp-0x18],bl
   1a1ea:	je     0x1a1f5
   1a1ec:	push   DWORD PTR [ebp-0x14]
   1a1ef:	call   0x10a3a
   1a1f4:	pop    ecx
   1a1f5:	cmp    DWORD PTR [ebp-0x40],ebx
   1a1f8:	je     0x1a15b
   1a1fe:	lea    eax,[ebp-0x50]
   1a201:	push   eax
   1a202:	call   0x1cd8e
   1a207:	cmp    DWORD PTR [ebp+0x10],0x1
   1a20b:	jne    0x1a236
   1a20d:	mov    eax,DWORD PTR [ebp+0x14]
   1a210:	mov    DWORD PTR [eax],esi
   1a212:	jmp    0x1a256
   1a214:	lea    eax,[ebp-0x50]
   1a217:	push   eax
   1a218:	call   0x1cd8e
   1a21d:	mov    esi,DWORD PTR [ebp+0x8]
   1a220:	mov    BYTE PTR [esi],bl
   1a222:	mov    DWORD PTR [esi+0x4],ebx
   1a225:	cmp    BYTE PTR [ebp-0x10],bl
   1a228:	je     0x1a148
   1a22e:	push   DWORD PTR [ebp-0xc]
   1a231:	jmp    0x1a142
   1a236:	lea    eax,[ebp-0x18]
   1a239:	push   eax
   1a23a:	lea    ecx,[ebp-0x10]
   1a23d:	mov    BYTE PTR [ebp-0x18],bl
   1a240:	mov    DWORD PTR [ebp-0x14],ebx
   1a243:	call   0x1a09e
   1a248:	cmp    BYTE PTR [ebp-0x18],bl
   1a24b:	je     0x1a256
   1a24d:	push   DWORD PTR [ebp-0x14]
   1a250:	call   0x10a3a
   1a255:	pop    ecx
   1a256:	mov    eax,DWORD PTR [ebp+0x8]
   1a259:	mov    cl,BYTE PTR [ebp-0x10]
   1a25c:	mov    BYTE PTR [eax],cl
   1a25e:	mov    ecx,DWORD PTR [ebp-0xc]
   1a261:	mov    DWORD PTR [eax+0x4],ecx
   1a264:	pop    edi
   1a265:	pop    esi
   1a266:	pop    ebx
   1a267:	leave  
   1a268:	ret    0x10
   1a26b:	int3   
   1a26c:	int3   
   1a26d:	int3   
   1a26e:	int3   
   1a26f:	int3   
   1a270:	xor    eax,eax
   1a272:	push   eax
   1a273:	push   eax
   1a274:	push   eax
   1a275:	push   eax
   1a276:	push   0x78a28
   1a27b:	call   DWORD PTR ds:0x1f02c
   1a281:	test   eax,eax
   1a283:	setge  al
   1a286:	ret    
   1a287:	int3   
   1a288:	int3   
   1a289:	int3   
   1a28a:	int3   
   1a28b:	int3   
   1a28c:	push   0x0
   1a28e:	push   0x78a28
   1a293:	call   DWORD PTR ds:0x1f028
   1a299:	ret    
   1a29a:	int3   
   1a29b:	int3   
   1a29c:	int3   
   1a29d:	int3   
   1a29e:	int3   
   1a29f:	int3   
   1a2a0:	mov    edi,edi
   1a2a2:	push   esi
   1a2a3:	push   edi
   1a2a4:	push   0x1
   1a2a6:	xor    edi,edi
   1a2a8:	push   edi
   1a2a9:	mov    esi,ecx
   1a2ab:	call   0x13998
   1a2b0:	cmp    DWORD PTR ds:0x788cc,edi
   1a2b6:	jne    0x1a2cd
   1a2b8:	mov    ecx,eax
   1a2ba:	mov    DWORD PTR ds:0x788cc,ecx
   1a2c0:	mov    DWORD PTR [ecx],edi
   1a2c2:	mov    ecx,DWORD PTR ds:0x788cc
   1a2c8:	xor    eax,eax
   1a2ca:	mov    DWORD PTR [ecx+0x8],edi
   1a2cd:	inc    DWORD PTR ds:0x78a50
   1a2d3:	cmp    eax,edi
   1a2d5:	je     0x1a2de
   1a2d7:	push   eax
   1a2d8:	call   0x10a3a
   1a2dd:	pop    ecx
   1a2de:	push   edi
   1a2df:	push   DWORD PTR ds:0x788cc
   1a2e5:	mov    ecx,esi
   1a2e7:	call   0x13998
   1a2ec:	mov    DWORD PTR [esi+0xc],edi
   1a2ef:	mov    DWORD PTR [esi+0x4],eax
   1a2f2:	mov    DWORD PTR [eax],eax
   1a2f4:	mov    esi,DWORD PTR [esi+0x4]
   1a2f7:	pop    edi
   1a2f8:	mov    DWORD PTR [esi+0x8],esi
   1a2fb:	pop    esi
   1a2fc:	ret    
   1a2fd:	int3   
   1a2fe:	int3   
   1a2ff:	int3   
   1a300:	int3   
   1a301:	int3   
   1a302:	mov    edi,edi
   1a304:	push   ebx
   1a305:	push   esi
   1a306:	xor    ebx,ebx
   1a308:	push   ebx
   1a309:	push   0x78a28
   1a30e:	call   0x11cfc
   1a313:	call   eax
   1a315:	push   0x10
   1a317:	call   0x10a06
   1a31c:	mov    esi,eax
   1a31e:	pop    ecx
   1a31f:	cmp    esi,ebx
   1a321:	je     0x1a335
   1a323:	mov    ecx,esi
   1a325:	mov    BYTE PTR [esi+0x8],bl
   1a328:	call   0x1a2a0
   1a32d:	mov    DWORD PTR ds:0x78a48,esi
   1a333:	jmp    0x1a33b
   1a335:	mov    DWORD PTR ds:0x78a48,ebx
   1a33b:	push   0x10
   1a33d:	call   0x10a06
   1a342:	mov    esi,eax
   1a344:	pop    ecx
   1a345:	cmp    esi,ebx
   1a347:	je     0x1a35b
   1a349:	mov    ecx,esi
   1a34b:	mov    BYTE PTR [esi+0x8],bl
   1a34e:	call   0x1411c
   1a353:	mov    DWORD PTR ds:0x78a4c,esi
   1a359:	jmp    0x1a361
   1a35b:	mov    DWORD PTR ds:0x78a4c,ebx
   1a361:	pop    esi
   1a362:	pop    ebx
   1a363:	ret    
   1a364:	int3   
   1a365:	int3   
   1a366:	int3   
   1a367:	int3   
   1a368:	int3   
   1a369:	int3   
   1a36a:	mov    eax,ecx
   1a36c:	add    DWORD PTR [eax+0x8],0x4
   1a370:	mov    ecx,DWORD PTR [eax+0x8]
   1a373:	cmp    ecx,DWORD PTR [eax+0x4]
   1a376:	jne    0x1a391
   1a378:	add    DWORD PTR [eax+0xc],0x4
   1a37c:	mov    ecx,DWORD PTR [eax+0xc]
   1a37f:	mov    ecx,DWORD PTR [ecx]
   1a381:	mov    DWORD PTR [eax],ecx
   1a383:	add    ecx,0x1000
   1a389:	mov    DWORD PTR [eax+0x4],ecx
   1a38c:	mov    ecx,DWORD PTR [eax]
   1a38e:	mov    DWORD PTR [eax+0x8],ecx
   1a391:	ret    
   1a392:	int3   
   1a393:	int3   
   1a394:	int3   
   1a395:	int3   
   1a396:	int3   
   1a397:	int3   
   1a398:	mov    edi,edi
   1a39a:	push   ebp
   1a39b:	mov    ebp,esp
   1a39d:	mov    eax,ecx
   1a39f:	mov    ecx,DWORD PTR [ebp+0xc]
   1a3a2:	mov    edx,DWORD PTR [ecx]
   1a3a4:	mov    DWORD PTR [eax],edx
   1a3a6:	mov    edx,DWORD PTR [ecx]
   1a3a8:	add    edx,0x1000
   1a3ae:	mov    DWORD PTR [eax+0x4],edx
   1a3b1:	mov    edx,DWORD PTR [ebp+0x8]
   1a3b4:	mov    DWORD PTR [eax+0x8],edx
   1a3b7:	mov    DWORD PTR [eax+0xc],ecx
   1a3ba:	pop    ebp
   1a3bb:	ret    0x8
   1a3be:	int3   
   1a3bf:	int3   
   1a3c0:	int3   
   1a3c1:	int3   
   1a3c2:	int3   
   1a3c3:	int3   
   1a3c4:	mov    edi,edi
   1a3c6:	push   ebp
   1a3c7:	mov    ebp,esp
   1a3c9:	mov    eax,DWORD PTR [ebp+0x8]
   1a3cc:	mov    edx,DWORD PTR ds:0x78a84
   1a3d2:	jmp    0x1a3d6
   1a3d4:	mov    eax,ecx
   1a3d6:	mov    ecx,DWORD PTR [eax+0x8]
   1a3d9:	cmp    ecx,edx
   1a3db:	jne    0x1a3d4
   1a3dd:	pop    ebp
   1a3de:	ret    0x4
   1a3e1:	int3   
   1a3e2:	int3   
   1a3e3:	int3   
   1a3e4:	int3   
   1a3e5:	int3   
   1a3e6:	mov    edi,edi
   1a3e8:	push   ebp
   1a3e9:	mov    ebp,esp
   1a3eb:	mov    eax,DWORD PTR [ebp+0x8]
   1a3ee:	mov    edx,DWORD PTR ds:0x78a84
   1a3f4:	jmp    0x1a3f8
   1a3f6:	mov    eax,ecx
   1a3f8:	mov    ecx,DWORD PTR [eax]
   1a3fa:	cmp    ecx,edx
   1a3fc:	jne    0x1a3f6
   1a3fe:	pop    ebp
   1a3ff:	ret    0x4
   1a402:	int3   
   1a403:	int3   
   1a404:	int3   
   1a405:	int3   
   1a406:	int3   
   1a407:	int3   
   1a408:	mov    edi,edi
   1a40a:	push   esi
   1a40b:	mov    esi,ecx
   1a40d:	mov    ecx,DWORD PTR [esi]
   1a40f:	mov    eax,DWORD PTR [ecx+0x8]
   1a412:	cmp    eax,DWORD PTR ds:0x78a84
   1a418:	je     0x1a426
   1a41a:	push   eax
   1a41b:	call   0x1a3e6
   1a420:	jmp    0x1a435
   1a422:	mov    DWORD PTR [esi],eax
   1a424:	mov    ecx,eax
   1a426:	mov    eax,DWORD PTR [ecx+0x4]
   1a429:	cmp    ecx,DWORD PTR [eax+0x8]
   1a42c:	je     0x1a422
   1a42e:	mov    ecx,DWORD PTR [esi]
   1a430:	cmp    DWORD PTR [ecx+0x8],eax
   1a433:	je     0x1a437
   1a435:	mov    DWORD PTR [esi],eax
   1a437:	pop    esi
   1a438:	ret    
   1a439:	int3   
   1a43a:	int3   
   1a43b:	int3   
   1a43c:	int3   
   1a43d:	int3   
   1a43e:	mov    edi,edi
   1a440:	push   ebp
   1a441:	mov    ebp,esp
   1a443:	mov    eax,DWORD PTR [ebp+0x8]
   1a446:	test   eax,eax
   1a448:	je     0x1a451
   1a44a:	mov    ecx,DWORD PTR [ebp+0xc]
   1a44d:	mov    ecx,DWORD PTR [ecx]
   1a44f:	mov    DWORD PTR [eax],ecx
   1a451:	pop    ebp
   1a452:	ret    0x8
   1a455:	int3   
   1a456:	int3   
   1a457:	int3   
   1a458:	int3   
   1a459:	int3   
   1a45a:	mov    edi,edi
   1a45c:	push   ebp
   1a45d:	mov    ebp,esp
   1a45f:	mov    eax,DWORD PTR [ebp+0x8]
   1a462:	jmp    0x1a472
   1a464:	mov    ecx,DWORD PTR [eax]
   1a466:	mov    edx,DWORD PTR [ebp+0x10]
   1a469:	add    DWORD PTR [ebp+0x10],0x4
   1a46d:	mov    DWORD PTR [edx],ecx
   1a46f:	add    eax,0x4
   1a472:	cmp    eax,DWORD PTR [ebp+0xc]
   1a475:	jne    0x1a464
   1a477:	mov    eax,DWORD PTR [ebp+0x10]
   1a47a:	pop    ebp
   1a47b:	ret    0xc
   1a47e:	int3   
   1a47f:	int3   
   1a480:	int3   
   1a481:	int3   
   1a482:	int3   
   1a483:	int3   
   1a484:	mov    edi,edi
   1a486:	push   ebp
   1a487:	mov    ebp,esp
   1a489:	mov    eax,DWORD PTR [ebp+0x8]
   1a48c:	test   eax,eax
   1a48e:	jge    0x1a492
   1a490:	xor    eax,eax
   1a492:	shl    eax,0x2
   1a495:	push   eax
   1a496:	call   0x10a06
   1a49b:	pop    ecx
   1a49c:	pop    ebp
   1a49d:	ret    0x8
   1a4a0:	int3   
   1a4a1:	int3   
   1a4a2:	int3   
   1a4a3:	int3   
   1a4a4:	int3   
   1a4a5:	int3   
   1a4a6:	mov    edi,edi
   1a4a8:	push   ebp
   1a4a9:	mov    ebp,esp
   1a4ab:	push   esi
   1a4ac:	mov    esi,ecx
   1a4ae:	push   DWORD PTR [esi]
   1a4b0:	call   0x10a3a
   1a4b5:	test   BYTE PTR [ebp+0x8],0x1
   1a4b9:	pop    ecx
   1a4ba:	je     0x1a4c3
   1a4bc:	push   esi
   1a4bd:	call   0x10a3a
   1a4c2:	pop    ecx
   1a4c3:	mov    eax,esi
   1a4c5:	pop    esi
   1a4c6:	pop    ebp
   1a4c7:	ret    0x4
   1a4ca:	int3   
   1a4cb:	int3   
   1a4cc:	int3   
   1a4cd:	int3   
   1a4ce:	int3   
   1a4cf:	int3   
   1a4d0:	mov    edi,edi
   1a4d2:	push   ebp
   1a4d3:	mov    ebp,esp
   1a4d5:	mov    eax,ds:0x78a7c
   1a4da:	sub    esp,0x20
   1a4dd:	push   ebx
   1a4de:	push   esi
   1a4df:	push   edi
   1a4e0:	lea    esi,[eax+0x4]
   1a4e3:	lea    edi,[ebp-0x10]
   1a4e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a4e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a4e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a4e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a4ea:	lea    ebx,[eax+0x14]
   1a4ed:	jmp    0x1a50b
   1a4ef:	mov    eax,DWORD PTR [eax]
   1a4f1:	mov    ecx,DWORD PTR [eax+0x8]
   1a4f4:	cmp    ecx,DWORD PTR [ebp+0x8]
   1a4f7:	jne    0x1a503
   1a4f9:	cmp    BYTE PTR [eax+0x24],0x0
   1a4fd:	jne    0x1a51c
   1a4ff:	mov    BYTE PTR [eax+0x24],0x1
   1a503:	lea    ecx,[ebp-0x10]
   1a506:	call   0x1a36a
   1a50b:	mov    eax,DWORD PTR [ebp-0x8]
   1a50e:	lea    edi,[ebp-0x20]
   1a511:	mov    esi,ebx
   1a513:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a514:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a515:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a516:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a517:	cmp    eax,DWORD PTR [ebp-0x18]
   1a51a:	jne    0x1a4ef
   1a51c:	pop    edi
   1a51d:	pop    esi
   1a51e:	pop    ebx
   1a51f:	leave  
   1a520:	ret    0x4
   1a523:	int3   
   1a524:	int3   
   1a525:	int3   
   1a526:	int3   
   1a527:	int3   
   1a528:	mov    eax,ecx
   1a52a:	xor    ecx,ecx
   1a52c:	mov    DWORD PTR [eax+0x4],ecx
   1a52f:	mov    DWORD PTR [eax+0x8],ecx
   1a532:	mov    DWORD PTR [eax+0xc],ecx
   1a535:	mov    DWORD PTR [eax+0x10],ecx
   1a538:	mov    DWORD PTR [eax+0x14],ecx
   1a53b:	mov    DWORD PTR [eax+0x18],ecx
   1a53e:	mov    DWORD PTR [eax+0x1c],ecx
   1a541:	mov    DWORD PTR [eax+0x20],ecx
   1a544:	mov    DWORD PTR [eax+0x24],ecx
   1a547:	mov    DWORD PTR [eax+0x28],ecx
   1a54a:	mov    DWORD PTR [eax+0x2c],ecx
   1a54d:	ret    0x4
   1a550:	int3   
   1a551:	int3   
   1a552:	int3   
   1a553:	int3   
   1a554:	int3   
   1a555:	int3   
   1a556:	mov    edi,edi
   1a558:	push   ebp
   1a559:	mov    ebp,esp
   1a55b:	sub    esp,0x10
   1a55e:	push   esi
   1a55f:	push   edi
   1a560:	lea    esi,[ecx+0x4]
   1a563:	lea    edi,[ebp-0x10]
   1a566:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a567:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a568:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a569:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a56a:	mov    eax,DWORD PTR [ebp-0x8]
   1a56d:	pop    edi
   1a56e:	pop    esi
   1a56f:	leave  
   1a570:	ret    
   1a571:	int3   
   1a572:	int3   
   1a573:	int3   
   1a574:	int3   
   1a575:	int3   
   1a576:	mov    edi,edi
   1a578:	push   ebp
   1a579:	mov    ebp,esp
   1a57b:	mov    edx,DWORD PTR [ebp+0x8]
   1a57e:	mov    eax,DWORD PTR [edx+0x8]
   1a581:	push   esi
   1a582:	mov    esi,DWORD PTR [eax]
   1a584:	mov    DWORD PTR [edx+0x8],esi
   1a587:	mov    esi,DWORD PTR [eax]
   1a589:	cmp    esi,DWORD PTR ds:0x78a84
   1a58f:	je     0x1a594
   1a591:	mov    DWORD PTR [esi+0x4],edx
   1a594:	mov    esi,DWORD PTR [edx+0x4]
   1a597:	mov    DWORD PTR [eax+0x4],esi
   1a59a:	mov    ecx,DWORD PTR [ecx+0x4]
   1a59d:	pop    esi
   1a59e:	cmp    edx,DWORD PTR [ecx+0x4]
   1a5a1:	jne    0x1a5a8
   1a5a3:	mov    DWORD PTR [ecx+0x4],eax
   1a5a6:	jmp    0x1a5b6
   1a5a8:	mov    ecx,DWORD PTR [edx+0x4]
   1a5ab:	cmp    edx,DWORD PTR [ecx]
   1a5ad:	jne    0x1a5b3
   1a5af:	mov    DWORD PTR [ecx],eax
   1a5b1:	jmp    0x1a5b6
   1a5b3:	mov    DWORD PTR [ecx+0x8],eax
   1a5b6:	mov    DWORD PTR [eax],edx
   1a5b8:	mov    DWORD PTR [edx+0x4],eax
   1a5bb:	pop    ebp
   1a5bc:	ret    0x4
   1a5bf:	int3   
   1a5c0:	int3   
   1a5c1:	int3   
   1a5c2:	int3   
   1a5c3:	int3   
   1a5c4:	mov    edi,edi
   1a5c6:	push   ebp
   1a5c7:	mov    ebp,esp
   1a5c9:	mov    edx,DWORD PTR [ebp+0x8]
   1a5cc:	mov    eax,DWORD PTR [edx]
   1a5ce:	push   esi
   1a5cf:	mov    esi,DWORD PTR [eax+0x8]
   1a5d2:	mov    DWORD PTR [edx],esi
   1a5d4:	mov    esi,DWORD PTR [eax+0x8]
   1a5d7:	cmp    esi,DWORD PTR ds:0x78a84
   1a5dd:	je     0x1a5e2
   1a5df:	mov    DWORD PTR [esi+0x4],edx
   1a5e2:	mov    esi,DWORD PTR [edx+0x4]
   1a5e5:	mov    DWORD PTR [eax+0x4],esi
   1a5e8:	mov    ecx,DWORD PTR [ecx+0x4]
   1a5eb:	pop    esi
   1a5ec:	cmp    edx,DWORD PTR [ecx+0x4]
   1a5ef:	jne    0x1a5f6
   1a5f1:	mov    DWORD PTR [ecx+0x4],eax
   1a5f4:	jmp    0x1a605
   1a5f6:	mov    ecx,DWORD PTR [edx+0x4]
   1a5f9:	cmp    edx,DWORD PTR [ecx+0x8]
   1a5fc:	jne    0x1a603
   1a5fe:	mov    DWORD PTR [ecx+0x8],eax
   1a601:	jmp    0x1a605
   1a603:	mov    DWORD PTR [ecx],eax
   1a605:	mov    DWORD PTR [eax+0x8],edx
   1a608:	mov    DWORD PTR [edx+0x4],eax
   1a60b:	pop    ebp
   1a60c:	ret    0x4
   1a60f:	int3   
   1a610:	int3   
   1a611:	int3   
   1a612:	int3   
   1a613:	int3   
   1a614:	mov    edi,edi
   1a616:	push   esi
   1a617:	mov    esi,ecx
   1a619:	mov    ecx,DWORD PTR [esi]
   1a61b:	cmp    DWORD PTR [ecx+0x14],0x0
   1a61f:	jne    0x1a62e
   1a621:	mov    eax,DWORD PTR [ecx+0x4]
   1a624:	cmp    DWORD PTR [eax+0x4],ecx
   1a627:	jne    0x1a62e
   1a629:	mov    eax,DWORD PTR [ecx+0x8]
   1a62c:	jmp    0x1a64b
   1a62e:	mov    eax,DWORD PTR [ecx]
   1a630:	cmp    eax,DWORD PTR ds:0x78a84
   1a636:	je     0x1a644
   1a638:	push   eax
   1a639:	call   0x1a3c4
   1a63e:	jmp    0x1a64b
   1a640:	mov    DWORD PTR [esi],eax
   1a642:	mov    ecx,eax
   1a644:	mov    eax,DWORD PTR [ecx+0x4]
   1a647:	cmp    ecx,DWORD PTR [eax]
   1a649:	je     0x1a640
   1a64b:	mov    DWORD PTR [esi],eax
   1a64d:	pop    esi
   1a64e:	ret    
   1a64f:	int3   
   1a650:	int3   
   1a651:	int3   
   1a652:	int3   
   1a653:	int3   
   1a654:	mov    edi,edi
   1a656:	push   ebp
   1a657:	mov    ebp,esp
   1a659:	mov    eax,DWORD PTR [ecx+0x4]
   1a65c:	push   esi
   1a65d:	mov    esi,DWORD PTR [eax+0x4]
   1a660:	push   edi
   1a661:	mov    edi,eax
   1a663:	jmp    0x1a67e
   1a665:	push   DWORD PTR [ebp+0x8]
   1a668:	lea    eax,[esi+0xc]
   1a66b:	push   eax
   1a66c:	call   0x19864
   1a671:	test   al,al
   1a673:	je     0x1a67a
   1a675:	mov    esi,DWORD PTR [esi+0x8]
   1a678:	jmp    0x1a67e
   1a67a:	mov    edi,esi
   1a67c:	mov    esi,DWORD PTR [esi]
   1a67e:	cmp    esi,DWORD PTR ds:0x78a84
   1a684:	jne    0x1a665
   1a686:	mov    eax,edi
   1a688:	pop    edi
   1a689:	pop    esi
   1a68a:	pop    ebp
   1a68b:	ret    0x4
   1a68e:	int3   
   1a68f:	int3   
   1a690:	int3   
   1a691:	int3   
   1a692:	int3   
   1a693:	int3   
   1a694:	mov    edi,edi
   1a696:	push   ebp
   1a697:	mov    ebp,esp
   1a699:	mov    eax,DWORD PTR [ecx+0x4]
   1a69c:	push   esi
   1a69d:	mov    esi,DWORD PTR [eax+0x4]
   1a6a0:	push   edi
   1a6a1:	mov    edi,eax
   1a6a3:	jmp    0x1a6be
   1a6a5:	lea    eax,[esi+0xc]
   1a6a8:	push   eax
   1a6a9:	push   DWORD PTR [ebp+0x8]
   1a6ac:	call   0x19864
   1a6b1:	test   al,al
   1a6b3:	je     0x1a6bb
   1a6b5:	mov    edi,esi
   1a6b7:	mov    esi,DWORD PTR [esi]
   1a6b9:	jmp    0x1a6be
   1a6bb:	mov    esi,DWORD PTR [esi+0x8]
   1a6be:	cmp    esi,DWORD PTR ds:0x78a84
   1a6c4:	jne    0x1a6a5
   1a6c6:	mov    eax,edi
   1a6c8:	pop    edi
   1a6c9:	pop    esi
   1a6ca:	pop    ebp
   1a6cb:	ret    0x4
   1a6ce:	int3   
   1a6cf:	int3   
   1a6d0:	int3   
   1a6d1:	int3   
   1a6d2:	int3   
   1a6d3:	int3   
   1a6d4:	mov    edi,edi
   1a6d6:	push   ebp
   1a6d7:	mov    ebp,esp
   1a6d9:	mov    ecx,DWORD PTR [ebp+0x8]
   1a6dc:	test   ecx,ecx
   1a6de:	je     0x1a6e8
   1a6e0:	push   DWORD PTR [ebp+0xc]
   1a6e3:	call   0x12a22
   1a6e8:	pop    ebp
   1a6e9:	ret    0x8
   1a6ec:	int3   
   1a6ed:	int3   
   1a6ee:	int3   
   1a6ef:	int3   
   1a6f0:	int3   
   1a6f1:	int3   
   1a6f2:	mov    edi,edi
   1a6f4:	push   ebp
   1a6f5:	mov    ebp,esp
   1a6f7:	mov    ecx,DWORD PTR [ebp+0x8]
   1a6fa:	push   0x0
   1a6fc:	call   0x1a4a6
   1a701:	pop    ebp
   1a702:	ret    0x4
   1a705:	int3   
   1a706:	int3   
   1a707:	int3   
   1a708:	int3   
   1a709:	int3   
   1a70a:	mov    edi,edi
   1a70c:	push   ebp
   1a70d:	mov    ebp,esp
   1a70f:	push   edi
   1a710:	mov    edi,DWORD PTR [ebp+0xc]
   1a713:	cmp    DWORD PTR [ebp+0x8],edi
   1a716:	je     0x1a72c
   1a718:	push   esi
   1a719:	mov    esi,DWORD PTR [ebp+0x10]
   1a71c:	inc    DWORD PTR [esi]
   1a71e:	lea    ecx,[ebp+0x8]
   1a721:	call   0x1a408
   1a726:	cmp    DWORD PTR [ebp+0x8],edi
   1a729:	jne    0x1a71c
   1a72b:	pop    esi
   1a72c:	pop    edi
   1a72d:	pop    ebp
   1a72e:	ret    
   1a72f:	int3   
   1a730:	int3   
   1a731:	int3   
   1a732:	int3   
   1a733:	int3   
   1a734:	mov    edi,edi
   1a736:	push   ebp
   1a737:	mov    ebp,esp
   1a739:	mov    eax,DWORD PTR [ebp+0xc]
   1a73c:	mov    ecx,DWORD PTR [eax+0x34]
   1a73f:	lea    eax,[ecx+eax*1+0x40]
   1a743:	mov    ecx,DWORD PTR [ebp+0x8]
   1a746:	push   0xffffffff
   1a748:	push   eax
   1a749:	call   0x12a02
   1a74e:	mov    eax,DWORD PTR [ebp+0x8]
   1a751:	pop    ebp
   1a752:	ret    0x8
   1a755:	int3   
   1a756:	int3   
   1a757:	int3   
   1a758:	int3   
   1a759:	int3   
   1a75a:	mov    edi,edi
   1a75c:	push   ebp
   1a75d:	mov    ebp,esp
   1a75f:	mov    eax,DWORD PTR [ebp+0xc]
   1a762:	mov    ecx,DWORD PTR [eax+0x38]
   1a765:	lea    eax,[ecx+eax*1+0x40]
   1a769:	mov    ecx,DWORD PTR [ebp+0x8]
   1a76c:	push   0xffffffff
   1a76e:	push   eax
   1a76f:	call   0x12a02
   1a774:	mov    eax,DWORD PTR [ebp+0x8]
   1a777:	pop    ebp
   1a778:	ret    0x8
   1a77b:	int3   
   1a77c:	int3   
   1a77d:	int3   
   1a77e:	int3   
   1a77f:	int3   
   1a780:	mov    edi,edi
   1a782:	push   ebp
   1a783:	mov    ebp,esp
   1a785:	mov    eax,DWORD PTR [ebp+0xc]
   1a788:	mov    ecx,DWORD PTR [eax+0x3c]
   1a78b:	lea    eax,[ecx+eax*1+0x40]
   1a78f:	mov    ecx,DWORD PTR [ebp+0x8]
   1a792:	push   0xffffffff
   1a794:	push   eax
   1a795:	call   0x12a02
   1a79a:	mov    eax,DWORD PTR [ebp+0x8]
   1a79d:	pop    ebp
   1a79e:	ret    0x8
   1a7a1:	int3   
   1a7a2:	int3   
   1a7a3:	int3   
   1a7a4:	int3   
   1a7a5:	int3   
   1a7a6:	mov    edi,edi
   1a7a8:	push   ebp
   1a7a9:	mov    ebp,esp
   1a7ab:	sub    esp,0x1c
   1a7ae:	mov    eax,ds:0x78a7c
   1a7b3:	and    DWORD PTR [ebp-0x4],0x0
   1a7b7:	push   ebx
   1a7b8:	mov    ebx,DWORD PTR [ebp+0x8]
   1a7bb:	push   esi
   1a7bc:	push   edi
   1a7bd:	lea    esi,[eax+0x4]
   1a7c0:	mov    edi,ebx
   1a7c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7c6:	lea    esi,[eax+0x14]
   1a7c9:	jmp    0x1a826
   1a7cb:	push   DWORD PTR [ebp+0xc]
   1a7ce:	mov    eax,DWORD PTR [ebx+0x8]
   1a7d1:	push   DWORD PTR [eax]
   1a7d3:	or     DWORD PTR [ebp-0x4],0x1
   1a7d7:	lea    eax,[ebp-0xc]
   1a7da:	push   eax
   1a7db:	call   0x1a780
   1a7e0:	push   eax
   1a7e1:	call   0x19874
   1a7e6:	test   al,al
   1a7e8:	je     0x1a7f9
   1a7ea:	mov    eax,DWORD PTR [ebx+0x8]
   1a7ed:	mov    eax,DWORD PTR [eax]
   1a7ef:	cmp    BYTE PTR [eax+0x1c],0x0
   1a7f3:	mov    BYTE PTR [ebp+0xb],0x1
   1a7f7:	jne    0x1a7fd
   1a7f9:	mov    BYTE PTR [ebp+0xb],0x0
   1a7fd:	test   BYTE PTR [ebp-0x4],0x1
   1a801:	je     0x1a810
   1a803:	push   DWORD PTR [ebp-0xc]
   1a806:	and    DWORD PTR [ebp-0x4],0xfffffffe
   1a80a:	call   0x10a3a
   1a80f:	pop    ecx
   1a810:	cmp    BYTE PTR [ebp+0xb],0x0
   1a814:	jne    0x1a835
   1a816:	mov    ecx,ebx
   1a818:	call   0x1a36a
   1a81d:	mov    esi,DWORD PTR ds:0x78a7c
   1a823:	add    esi,0x14
   1a826:	mov    eax,DWORD PTR [ebx+0x8]
   1a829:	lea    edi,[ebp-0x1c]
   1a82c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a82d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a82e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a82f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a830:	cmp    eax,DWORD PTR [ebp-0x14]
   1a833:	jne    0x1a7cb
   1a835:	pop    edi
   1a836:	pop    esi
   1a837:	mov    eax,ebx
   1a839:	pop    ebx
   1a83a:	leave  
   1a83b:	ret    0x8
   1a83e:	int3   
   1a83f:	int3   
   1a840:	int3   
   1a841:	int3   
   1a842:	int3   
   1a843:	int3   
   1a844:	mov    edi,edi
   1a846:	push   ebp
   1a847:	mov    ebp,esp
   1a849:	sub    esp,0x28
   1a84c:	mov    eax,DWORD PTR [ebp+0x8]
   1a84f:	push   ebx
   1a850:	push   esi
   1a851:	push   edi
   1a852:	lea    esi,[eax+0x4]
   1a855:	mov    DWORD PTR [ebp-0x8],esi
   1a858:	lea    edi,[ebp-0x18]
   1a85b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a85c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a85d:	and    DWORD PTR [ebp-0x4],0x0
   1a861:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a862:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a863:	lea    ecx,[eax+0x14]
   1a866:	mov    eax,DWORD PTR [ebp-0x10]
   1a869:	mov    esi,ecx
   1a86b:	lea    edi,[ebp-0x28]
   1a86e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a86f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a870:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a871:	push   0x4
   1a873:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a874:	pop    ebx
   1a875:	mov    DWORD PTR [ebp+0x8],ecx
   1a878:	cmp    eax,DWORD PTR [ebp-0x20]
   1a87b:	je     0x1a89d
   1a87d:	mov    esi,ecx
   1a87f:	lea    edi,[ebp-0x28]
   1a882:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a883:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a884:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a885:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a886:	mov    eax,DWORD PTR [eax]
   1a888:	add    ebx,DWORD PTR [eax]
   1a88a:	inc    DWORD PTR [ebp-0x4]
   1a88d:	lea    ecx,[ebp-0x18]
   1a890:	call   0x1a36a
   1a895:	mov    eax,DWORD PTR [ebp-0x10]
   1a898:	cmp    eax,DWORD PTR [ebp-0x20]
   1a89b:	jne    0x1a886
   1a89d:	mov    eax,DWORD PTR [ebp+0xc]
   1a8a0:	cmp    ebx,DWORD PTR [eax+0x4]
   1a8a3:	mov    DWORD PTR [eax+0x4],ebx
   1a8a6:	jbe    0x1a8b0
   1a8a8:	mov    DWORD PTR [eax],0x1
   1a8ae:	jmp    0x1a8f6
   1a8b0:	and    DWORD PTR [eax],0x0
   1a8b3:	mov    esi,DWORD PTR [ebp-0x8]
   1a8b6:	lea    ebx,[eax+0x8]
   1a8b9:	mov    eax,DWORD PTR [ebp-0x4]
   1a8bc:	mov    DWORD PTR [ebx],eax
   1a8be:	lea    edi,[ebp-0x28]
   1a8c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a8c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a8c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a8c4:	add    ebx,0x4
   1a8c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a8c8:	jmp    0x1a8e4
   1a8ca:	mov    eax,DWORD PTR [esi]
   1a8cc:	push   DWORD PTR [eax]
   1a8ce:	push   eax
   1a8cf:	push   ebx
   1a8d0:	call   0x1db58
   1a8d5:	mov    eax,DWORD PTR [esi]
   1a8d7:	add    ebx,DWORD PTR [eax]
   1a8d9:	add    esp,0xc
   1a8dc:	lea    ecx,[ebp-0x28]
   1a8df:	call   0x1a36a
   1a8e4:	mov    esi,DWORD PTR [ebp+0x8]
   1a8e7:	lea    edi,[ebp-0x18]
   1a8ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a8eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a8ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a8ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a8ee:	mov    esi,DWORD PTR [ebp-0x20]
   1a8f1:	cmp    esi,DWORD PTR [ebp-0x10]
   1a8f4:	jne    0x1a8ca
   1a8f6:	pop    edi
   1a8f7:	pop    esi
   1a8f8:	pop    ebx
   1a8f9:	leave  
   1a8fa:	ret    0x8
   1a8fd:	int3   
   1a8fe:	int3   
   1a8ff:	int3   
   1a900:	int3   
   1a901:	int3   
   1a902:	push   0x8
   1a904:	push   0x77390
   1a909:	call   0x1db88
   1a90e:	xor    esi,esi
   1a910:	push   esi
   1a911:	push   esi
   1a912:	push   esi
   1a913:	push   esi
   1a914:	push   0x78a54
   1a919:	call   DWORD PTR ds:0x1f02c
   1a91f:	cmp    eax,esi
   1a921:	jl     0x1a962
   1a923:	mov    DWORD PTR [ebp-0x4],esi
   1a926:	push   DWORD PTR [ebp+0x8]
   1a929:	push   DWORD PTR ds:0x78a7c
   1a92f:	call   0x1a844
   1a934:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1a93b:	jmp    0x1a956
   1a93d:	xor    eax,eax
   1a93f:	inc    eax
   1a940:	ret    
   1a941:	mov    esp,DWORD PTR [ebp-0x18]
   1a944:	mov    eax,DWORD PTR [ebp+0x8]
   1a947:	mov    DWORD PTR [eax],0x2
   1a94d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1a954:	xor    esi,esi
   1a956:	push   esi
   1a957:	push   0x78a54
   1a95c:	call   DWORD PTR ds:0x1f028
   1a962:	call   0x1dbcd
   1a967:	ret    0x4
   1a96a:	int3   
   1a96b:	int3   
   1a96c:	int3   
   1a96d:	int3   
   1a96e:	int3   
   1a96f:	int3   
   1a970:	mov    edi,edi
   1a972:	push   ebp
   1a973:	mov    ebp,esp
   1a975:	sub    esp,0x10
   1a978:	push   ebx
   1a979:	mov    ebx,ecx
   1a97b:	mov    eax,DWORD PTR [ebx+0x10]
   1a97e:	push   esi
   1a97f:	lea    ecx,[eax+0x4]
   1a982:	push   edi
   1a983:	mov    DWORD PTR [ebx+0x10],ecx
   1a986:	push   DWORD PTR [eax]
   1a988:	call   0x10a3a
   1a98d:	xor    eax,eax
   1a98f:	pop    ecx
   1a990:	cmp    DWORD PTR [ebx+0x2c],eax
   1a993:	jne    0x1a9c0
   1a995:	mov    DWORD PTR [ebp-0x10],eax
   1a998:	mov    DWORD PTR [ebp-0xc],eax
   1a99b:	mov    DWORD PTR [ebp-0x8],eax
   1a99e:	mov    DWORD PTR [ebp-0x4],eax
   1a9a1:	lea    edi,[ebx+0x4]
   1a9a4:	lea    esi,[ebp-0x10]
   1a9a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a9a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a9a9:	push   DWORD PTR [ebx+0x24]
   1a9ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a9ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a9ae:	lea    edi,[ebx+0x14]
   1a9b1:	lea    esi,[ebp-0x10]
   1a9b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a9b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a9b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a9b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a9b8:	call   0x10a3a
   1a9bd:	pop    ecx
   1a9be:	jmp    0x1a9d7
   1a9c0:	mov    eax,DWORD PTR [ebx+0x10]
   1a9c3:	push   eax
   1a9c4:	push   DWORD PTR [eax]
   1a9c6:	lea    ecx,[ebp-0x10]
   1a9c9:	call   0x1a398
   1a9ce:	lea    edi,[ebx+0x4]
   1a9d1:	mov    esi,eax
   1a9d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a9d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a9d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a9d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a9d7:	pop    edi
   1a9d8:	pop    esi
   1a9d9:	pop    ebx
   1a9da:	leave  
   1a9db:	ret    
   1a9dc:	int3   
   1a9dd:	int3   
   1a9de:	int3   
   1a9df:	int3   
   1a9e0:	int3   
   1a9e1:	int3   
   1a9e2:	mov    edi,edi
   1a9e4:	push   ebp
   1a9e5:	mov    ebp,esp
   1a9e7:	mov    eax,DWORD PTR [ebp+0xc]
   1a9ea:	push   esi
   1a9eb:	mov    esi,ecx
   1a9ed:	mov    ecx,DWORD PTR [eax]
   1a9ef:	mov    DWORD PTR [ebp+0xc],ecx
   1a9f2:	mov    ecx,DWORD PTR [eax+0x4]
   1a9f5:	mov    edx,DWORD PTR [eax]
   1a9f7:	mov    DWORD PTR [ecx],edx
   1a9f9:	mov    ecx,DWORD PTR [eax]
   1a9fb:	mov    edx,DWORD PTR [eax+0x4]
   1a9fe:	push   eax
   1a9ff:	mov    DWORD PTR [ecx+0x4],edx
   1aa02:	call   0x10a3a
   1aa07:	mov    eax,DWORD PTR [ebp+0x8]
   1aa0a:	dec    DWORD PTR [esi+0x8]
   1aa0d:	pop    ecx
   1aa0e:	mov    ecx,DWORD PTR [ebp+0xc]
   1aa11:	mov    DWORD PTR [eax],ecx
   1aa13:	pop    esi
   1aa14:	pop    ebp
   1aa15:	ret    0x8
   1aa18:	int3   
   1aa19:	int3   
   1aa1a:	int3   
   1aa1b:	int3   
   1aa1c:	int3   
   1aa1d:	int3   
   1aa1e:	mov    edi,edi
   1aa20:	push   ebp
   1aa21:	mov    ebp,esp
   1aa23:	push   ecx
   1aa24:	push   esi
   1aa25:	mov    esi,ecx
   1aa27:	jmp    0x1aa3c
   1aa29:	mov    eax,ecx
   1aa2b:	mov    ecx,DWORD PTR [ecx]
   1aa2d:	push   eax
   1aa2e:	lea    eax,[ebp-0x4]
   1aa31:	mov    DWORD PTR [ebp+0xc],ecx
   1aa34:	push   eax
   1aa35:	mov    ecx,esi
   1aa37:	call   0x1a9e2
   1aa3c:	mov    ecx,DWORD PTR [ebp+0xc]
   1aa3f:	cmp    ecx,DWORD PTR [ebp+0x10]
   1aa42:	jne    0x1aa29
   1aa44:	mov    eax,DWORD PTR [ebp+0x8]
   1aa47:	mov    DWORD PTR [eax],ecx
   1aa49:	pop    esi
   1aa4a:	leave  
   1aa4b:	ret    0xc
   1aa4e:	int3   
   1aa4f:	int3   
   1aa50:	int3   
   1aa51:	int3   
   1aa52:	int3   
   1aa53:	int3   
   1aa54:	mov    edi,edi
   1aa56:	push   ebp
   1aa57:	mov    ebp,esp
   1aa59:	push   0x0
   1aa5b:	push   0xc
   1aa5d:	call   0x116aa
   1aa62:	mov    ecx,DWORD PTR [ebp+0x8]
   1aa65:	test   ecx,ecx
   1aa67:	jne    0x1aa6b
   1aa69:	mov    ecx,eax
   1aa6b:	mov    DWORD PTR [eax],ecx
   1aa6d:	mov    ecx,DWORD PTR [ebp+0xc]
   1aa70:	test   ecx,ecx
   1aa72:	jne    0x1aa76
   1aa74:	mov    ecx,eax
   1aa76:	mov    DWORD PTR [eax+0x4],ecx
   1aa79:	pop    ebp
   1aa7a:	ret    0x8
   1aa7d:	int3   
   1aa7e:	int3   
   1aa7f:	int3   
   1aa80:	int3   
   1aa81:	int3   
   1aa82:	mov    edi,edi
   1aa84:	push   esi
   1aa85:	mov    esi,ecx
   1aa87:	mov    eax,DWORD PTR [esi+0x28]
   1aa8a:	shl    eax,0x2
   1aa8d:	push   0x0
   1aa8f:	push   eax
   1aa90:	call   0x116aa
   1aa95:	mov    DWORD PTR [esi+0x24],eax
   1aa98:	pop    esi
   1aa99:	ret    
   1aa9a:	int3   
   1aa9b:	int3   
   1aa9c:	int3   
   1aa9d:	int3   
   1aa9e:	int3   
   1aa9f:	int3   
   1aaa0:	mov    edi,edi
   1aaa2:	push   ebp
   1aaa3:	mov    ebp,esp
   1aaa5:	push   ebx
   1aaa6:	push   esi
   1aaa7:	push   edi
   1aaa8:	mov    edi,DWORD PTR [ebp+0x8]
   1aaab:	mov    eax,0xfffffff
   1aab0:	mov    esi,ecx
   1aab2:	cmp    edi,eax
   1aab4:	jbe    0x1aab8
   1aab6:	mov    edi,eax
   1aab8:	mov    eax,edi
   1aaba:	push   0x0
   1aabc:	shl    eax,0x2
   1aabf:	push   eax
   1aac0:	call   0x116aa
   1aac5:	mov    ebx,eax
   1aac7:	mov    eax,edi
   1aac9:	shr    eax,0x2
   1aacc:	lea    eax,[ebx+eax*4]
   1aacf:	push   eax
   1aad0:	mov    DWORD PTR [ebp+0x8],eax
   1aad3:	mov    eax,DWORD PTR [esi+0x20]
   1aad6:	add    eax,0x4
   1aad9:	push   eax
   1aada:	push   DWORD PTR [esi+0x10]
   1aadd:	call   0x1a45a
   1aae2:	push   DWORD PTR [esi+0x24]
   1aae5:	call   0x10a3a
   1aaea:	mov    eax,DWORD PTR [ebp+0x8]
   1aaed:	pop    ecx
   1aaee:	mov    DWORD PTR [esi+0x28],edi
   1aaf1:	pop    edi
   1aaf2:	mov    DWORD PTR [esi+0x24],ebx
   1aaf5:	pop    esi
   1aaf6:	pop    ebx
   1aaf7:	pop    ebp
   1aaf8:	ret    0x4
   1aafb:	int3   
   1aafc:	int3   
   1aafd:	int3   
   1aafe:	int3   
   1aaff:	int3   
   1ab00:	mov    edi,edi
   1ab02:	push   ebp
   1ab03:	mov    ebp,esp
   1ab05:	push   0x0
   1ab07:	push   0x18
   1ab09:	call   0x116aa
   1ab0e:	mov    ecx,DWORD PTR [ebp+0x8]
   1ab11:	mov    DWORD PTR [eax+0x4],ecx
   1ab14:	mov    ecx,DWORD PTR [ebp+0xc]
   1ab17:	mov    DWORD PTR [eax+0x14],ecx
   1ab1a:	pop    ebp
   1ab1b:	ret    0x8
   1ab1e:	int3   
   1ab1f:	int3   
   1ab20:	int3   
   1ab21:	int3   
   1ab22:	int3   
   1ab23:	int3   
   1ab24:	mov    edi,edi
   1ab26:	push   ebp
   1ab27:	mov    ebp,esp
   1ab29:	push   ecx
   1ab2a:	push   DWORD PTR [ebp-0x4]
   1ab2d:	push   DWORD PTR [ebp+0x10]
   1ab30:	push   DWORD PTR [ebp+0xc]
   1ab33:	push   DWORD PTR [ebp+0x8]
   1ab36:	call   0x1a70a
   1ab3b:	add    esp,0x10
   1ab3e:	leave  
   1ab3f:	ret    
   1ab40:	int3   
   1ab41:	int3   
   1ab42:	int3   
   1ab43:	int3   
   1ab44:	int3   
   1ab45:	int3   
   1ab46:	mov    edi,edi
   1ab48:	push   ebp
   1ab49:	mov    ebp,esp
   1ab4b:	sub    esp,0x28
   1ab4e:	push   ebx
   1ab4f:	mov    ebx,DWORD PTR [ebp+0x8]
   1ab52:	push   esi
   1ab53:	push   edi
   1ab54:	push   0xffffffff
   1ab56:	push   ebx
   1ab57:	lea    ecx,[ebp-0x8]
   1ab5a:	call   0x11140
   1ab5f:	and    DWORD PTR [ebx],0x0
   1ab62:	lea    eax,[ebp-0x8]
   1ab65:	push   eax
   1ab66:	lea    eax,[ebp-0x18]
   1ab69:	push   eax
   1ab6a:	call   0x1a7a6
   1ab6f:	mov    esi,DWORD PTR ds:0x78a7c
   1ab75:	mov    eax,DWORD PTR [ebp-0x10]
   1ab78:	push   DWORD PTR [ebp-0x8]
   1ab7b:	add    esi,0x14
   1ab7e:	lea    edi,[ebp-0x28]
   1ab81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ab82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ab83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ab84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ab85:	cmp    eax,DWORD PTR [ebp-0x20]
   1ab88:	je     0x1ab92
   1ab8a:	mov    eax,DWORD PTR [eax]
   1ab8c:	mov    eax,DWORD PTR [eax+0x20]
   1ab8f:	inc    eax
   1ab90:	mov    DWORD PTR [ebx],eax
   1ab92:	call   0x10a3a
   1ab97:	pop    ecx
   1ab98:	pop    edi
   1ab99:	pop    esi
   1ab9a:	pop    ebx
   1ab9b:	leave  
   1ab9c:	ret    0x4
   1ab9f:	int3   
   1aba0:	int3   
   1aba1:	int3   
   1aba2:	int3   
   1aba3:	int3   
   1aba4:	add    DWORD PTR [ecx+0xc],0x4
   1aba8:	dec    DWORD PTR [ecx+0x2c]
   1abab:	mov    eax,DWORD PTR [ecx+0xc]
   1abae:	je     0x1abb5
   1abb0:	cmp    eax,DWORD PTR [ecx+0x8]
   1abb3:	jne    0x1abba
   1abb5:	jmp    0x1a970
   1abba:	ret    
   1abbb:	int3   
   1abbc:	int3   
   1abbd:	int3   
   1abbe:	int3   
   1abbf:	int3   
   1abc0:	mov    edi,edi
   1abc2:	push   esi
   1abc3:	push   0x0
   1abc5:	push   0xc
   1abc7:	mov    esi,ecx
   1abc9:	call   0x116aa
   1abce:	mov    DWORD PTR [eax],eax
   1abd0:	mov    DWORD PTR [eax+0x4],eax
   1abd3:	and    DWORD PTR [esi+0x8],0x0
   1abd7:	mov    DWORD PTR [esi+0x4],eax
   1abda:	mov    eax,esi
   1abdc:	pop    esi
   1abdd:	ret    0x4
   1abe0:	int3   
   1abe1:	int3   
   1abe2:	int3   
   1abe3:	int3   
   1abe4:	int3   
   1abe5:	int3   
   1abe6:	mov    edi,edi
   1abe8:	push   ebp
   1abe9:	mov    ebp,esp
   1abeb:	push   ecx
   1abec:	push   esi
   1abed:	mov    esi,ecx
   1abef:	mov    eax,DWORD PTR [esi+0x4]
   1abf2:	mov    ecx,DWORD PTR [eax]
   1abf4:	push   eax
   1abf5:	push   ecx
   1abf6:	lea    eax,[ebp-0x4]
   1abf9:	push   eax
   1abfa:	mov    ecx,esi
   1abfc:	call   0x1aa1e
   1ac01:	push   DWORD PTR [esi+0x4]
   1ac04:	call   0x10a3a
   1ac09:	and    DWORD PTR [esi+0x4],0x0
   1ac0d:	and    DWORD PTR [esi+0x8],0x0
   1ac11:	pop    ecx
   1ac12:	pop    esi
   1ac13:	leave  
   1ac14:	ret    
   1ac15:	int3   
   1ac16:	int3   
   1ac17:	int3   
   1ac18:	int3   
   1ac19:	int3   
   1ac1a:	mov    edi,edi
   1ac1c:	push   ebp
   1ac1d:	mov    ebp,esp
   1ac1f:	push   ecx
   1ac20:	mov    eax,DWORD PTR [ecx+0x4]
   1ac23:	push   DWORD PTR [eax]
   1ac25:	lea    eax,[ebp-0x4]
   1ac28:	push   eax
   1ac29:	call   0x1a9e2
   1ac2e:	leave  
   1ac2f:	ret    
   1ac30:	int3   
   1ac31:	int3   
   1ac32:	int3   
   1ac33:	int3   
   1ac34:	int3   
   1ac35:	int3   
   1ac36:	mov    edi,edi
   1ac38:	push   ebp
   1ac39:	mov    ebp,esp
   1ac3b:	sub    esp,0x18
   1ac3e:	push   ebx
   1ac3f:	push   esi
   1ac40:	push   edi
   1ac41:	push   0x0
   1ac43:	push   0x400
   1ac48:	mov    ebx,ecx
   1ac4a:	call   0x1a484
   1ac4f:	cmp    DWORD PTR [ebx+0x2c],0x0
   1ac53:	mov    esi,eax
   1ac55:	mov    DWORD PTR [ebp-0x8],esi
   1ac58:	jne    0x1ac8f
   1ac5a:	mov    ecx,ebx
   1ac5c:	mov    DWORD PTR [ebx+0x28],0x2
   1ac63:	call   0x1aa82
   1ac68:	mov    eax,DWORD PTR [ebx+0x24]
   1ac6b:	mov    DWORD PTR [eax+0x4],esi
   1ac6e:	mov    eax,DWORD PTR [ebx+0x24]
   1ac71:	add    eax,0x4
   1ac74:	push   eax
   1ac75:	add    esi,0x800
   1ac7b:	push   esi
   1ac7c:	lea    ecx,[ebp-0x18]
   1ac7f:	call   0x1a398
   1ac84:	lea    edi,[ebx+0x4]
   1ac87:	mov    esi,eax
   1ac89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ac8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ac8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ac8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ac8d:	jmp    0x1aced
   1ac8f:	mov    ecx,DWORD PTR [ebx+0x28]
   1ac92:	mov    edx,DWORD PTR [ebx+0x24]
   1ac95:	mov    eax,DWORD PTR [ebx+0x20]
   1ac98:	lea    ecx,[edx+ecx*4-0x4]
   1ac9c:	cmp    eax,ecx
   1ac9e:	jae    0x1acae
   1aca0:	add    eax,0x4
   1aca3:	mov    DWORD PTR [ebx+0x20],eax
   1aca6:	mov    DWORD PTR [eax],esi
   1aca8:	push   DWORD PTR [ebx+0x20]
   1acab:	push   esi
   1acac:	jmp    0x1ace5
   1acae:	sub    eax,DWORD PTR [ebx+0x10]
   1acb1:	mov    ecx,ebx
   1acb3:	sar    eax,0x2
   1acb6:	inc    eax
   1acb7:	mov    edi,eax
   1acb9:	lea    eax,[edi+edi*1]
   1acbc:	push   eax
   1acbd:	call   0x1aaa0
   1acc2:	lea    ecx,[eax+edi*4]
   1acc5:	mov    DWORD PTR [ecx],esi
   1acc7:	push   eax
   1acc8:	push   DWORD PTR [ebx+0xc]
   1accb:	mov    DWORD PTR [ebp-0x4],ecx
   1acce:	lea    ecx,[ebp-0x18]
   1acd1:	call   0x1a398
   1acd6:	push   DWORD PTR [ebp-0x4]
   1acd9:	lea    edi,[ebx+0x4]
   1acdc:	push   DWORD PTR [ebp-0x8]
   1acdf:	mov    esi,eax
   1ace1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ace2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ace3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ace4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ace5:	lea    ecx,[ebp-0x18]
   1ace8:	call   0x1a398
   1aced:	lea    edi,[ebx+0x14]
   1acf0:	mov    esi,eax
   1acf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1acf3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1acf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1acf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1acf6:	pop    edi
   1acf7:	pop    esi
   1acf8:	pop    ebx
   1acf9:	leave  
   1acfa:	ret    
   1acfb:	int3   
   1acfc:	int3   
   1acfd:	int3   
   1acfe:	int3   
   1acff:	int3   
   1ad00:	mov    edi,edi
   1ad02:	push   ebp
   1ad03:	mov    ebp,esp
   1ad05:	mov    eax,DWORD PTR [ebp+0xc]
   1ad08:	push   ebx
   1ad09:	push   esi
   1ad0a:	push   edi
   1ad0b:	lea    edi,[eax+0x4]
   1ad0e:	push   DWORD PTR [edi]
   1ad10:	mov    ebx,ecx
   1ad12:	push   eax
   1ad13:	call   0x1aa54
   1ad18:	push   DWORD PTR [ebp+0x10]
   1ad1b:	mov    esi,eax
   1ad1d:	mov    DWORD PTR [edi],esi
   1ad1f:	mov    eax,DWORD PTR [esi+0x4]
   1ad22:	mov    DWORD PTR [eax],esi
   1ad24:	lea    eax,[esi+0x8]
   1ad27:	push   eax
   1ad28:	call   0x1a43e
   1ad2d:	mov    eax,DWORD PTR [ebp+0x8]
   1ad30:	inc    DWORD PTR [ebx+0x8]
   1ad33:	pop    edi
   1ad34:	mov    DWORD PTR [eax],esi
   1ad36:	pop    esi
   1ad37:	pop    ebx
   1ad38:	pop    ebp
   1ad39:	ret    0xc
   1ad3c:	int3   
   1ad3d:	int3   
   1ad3e:	int3   
   1ad3f:	int3   
   1ad40:	int3   
   1ad41:	int3   
   1ad42:	mov    edi,edi
   1ad44:	push   ebp
   1ad45:	mov    ebp,esp
   1ad47:	push   ecx
   1ad48:	mov    eax,DWORD PTR [ebp+0xc]
   1ad4b:	push   esi
   1ad4c:	mov    esi,ecx
   1ad4e:	jmp    0x1ad6a
   1ad50:	add    eax,0x8
   1ad53:	push   eax
   1ad54:	push   DWORD PTR [ebp+0x8]
   1ad57:	lea    eax,[ebp-0x4]
   1ad5a:	push   eax
   1ad5b:	mov    ecx,esi
   1ad5d:	call   0x1ad00
   1ad62:	mov    eax,DWORD PTR [ebp+0xc]
   1ad65:	mov    eax,DWORD PTR [eax]
   1ad67:	mov    DWORD PTR [ebp+0xc],eax
   1ad6a:	cmp    eax,DWORD PTR [ebp+0x10]
   1ad6d:	jne    0x1ad50
   1ad6f:	pop    esi
   1ad70:	leave  
   1ad71:	ret    0xc
   1ad74:	int3   
   1ad75:	int3   
   1ad76:	int3   
   1ad77:	int3   
   1ad78:	int3   
   1ad79:	int3   
   1ad7a:	mov    edi,edi
   1ad7c:	push   ebp
   1ad7d:	mov    ebp,esp
   1ad7f:	push   esi
   1ad80:	push   edi
   1ad81:	push   DWORD PTR [ebp+0xc]
   1ad84:	mov    edi,ecx
   1ad86:	call   0x1a694
   1ad8b:	push   DWORD PTR [ebp+0xc]
   1ad8e:	mov    ecx,edi
   1ad90:	mov    esi,eax
   1ad92:	call   0x1a654
   1ad97:	mov    ecx,DWORD PTR [ebp+0x8]
   1ad9a:	pop    edi
   1ad9b:	mov    DWORD PTR [ecx],eax
   1ad9d:	mov    DWORD PTR [ecx+0x4],esi
   1ada0:	mov    eax,ecx
   1ada2:	pop    esi
   1ada3:	pop    ebp
   1ada4:	ret    0x8
   1ada7:	int3   
   1ada8:	int3   
   1ada9:	int3   
   1adaa:	int3   
   1adab:	int3   
   1adac:	mov    edi,edi
   1adae:	push   ebp
   1adaf:	mov    ebp,esp
   1adb1:	push   ecx
   1adb2:	push   ebx
   1adb3:	push   esi
   1adb4:	push   edi
   1adb5:	push   0x1
   1adb7:	xor    edi,edi
   1adb9:	push   edi
   1adba:	mov    esi,ecx
   1adbc:	call   0x1ab00
   1adc1:	lea    ecx,[ebp-0x1]
   1adc4:	mov    ebx,eax
   1adc6:	call   DWORD PTR ds:0x771bc
   1adcc:	cmp    DWORD PTR ds:0x78a84,edi
   1add2:	jne    0x1ade7
   1add4:	mov    eax,ebx
   1add6:	mov    ds:0x78a84,eax
   1addb:	mov    DWORD PTR [eax],edi
   1addd:	mov    eax,ds:0x78a84
   1ade2:	xor    ebx,ebx
   1ade4:	mov    DWORD PTR [eax+0x8],edi
   1ade7:	inc    DWORD PTR ds:0x78a88
   1aded:	lea    ecx,[ebp-0x1]
   1adf0:	call   DWORD PTR ds:0x771b8
   1adf6:	cmp    ebx,edi
   1adf8:	je     0x1ae01
   1adfa:	push   ebx
   1adfb:	call   0x10a3a
   1ae00:	pop    ecx
   1ae01:	push   edi
   1ae02:	push   DWORD PTR ds:0x78a84
   1ae08:	mov    ecx,esi
   1ae0a:	call   0x1ab00
   1ae0f:	mov    DWORD PTR [esi+0xc],edi
   1ae12:	mov    DWORD PTR [esi+0x4],eax
   1ae15:	mov    DWORD PTR [eax],eax
   1ae17:	mov    esi,DWORD PTR [esi+0x4]
   1ae1a:	pop    edi
   1ae1b:	mov    DWORD PTR [esi+0x8],esi
   1ae1e:	pop    esi
   1ae1f:	pop    ebx
   1ae20:	leave  
   1ae21:	ret    
   1ae22:	int3   
   1ae23:	int3   
   1ae24:	int3   
   1ae25:	int3   
   1ae26:	int3   
   1ae27:	int3   
   1ae28:	mov    edi,edi
   1ae2a:	push   ebp
   1ae2b:	mov    ebp,esp
   1ae2d:	push   ebx
   1ae2e:	push   esi
   1ae2f:	mov    esi,DWORD PTR [ebp+0x10]
   1ae32:	push   edi
   1ae33:	push   0x0
   1ae35:	push   esi
   1ae36:	mov    edi,ecx
   1ae38:	call   0x1ab00
   1ae3d:	push   DWORD PTR [ebp+0x14]
   1ae40:	mov    ebx,eax
   1ae42:	mov    eax,ds:0x78a84
   1ae47:	mov    DWORD PTR [ebx],eax
   1ae49:	mov    eax,ds:0x78a84
   1ae4e:	mov    DWORD PTR [ebx+0x8],eax
   1ae51:	lea    eax,[ebx+0xc]
   1ae54:	push   eax
   1ae55:	call   0x1a6d4
   1ae5a:	inc    DWORD PTR [edi+0xc]
   1ae5d:	cmp    esi,DWORD PTR [edi+0x4]
   1ae60:	je     0x1ae8a
   1ae62:	mov    eax,DWORD PTR [ebp+0xc]
   1ae65:	cmp    eax,DWORD PTR ds:0x78a84
   1ae6b:	jne    0x1ae8a
   1ae6d:	lea    eax,[esi+0xc]
   1ae70:	push   eax
   1ae71:	push   DWORD PTR [ebp+0x14]
   1ae74:	call   0x19864
   1ae79:	test   al,al
   1ae7b:	jne    0x1ae8a
   1ae7d:	mov    DWORD PTR [esi+0x8],ebx
   1ae80:	mov    eax,DWORD PTR [edi+0x4]
   1ae83:	cmp    esi,DWORD PTR [eax+0x8]
   1ae86:	jne    0x1aea4
   1ae88:	jmp    0x1ae99
   1ae8a:	mov    DWORD PTR [esi],ebx
   1ae8c:	mov    eax,DWORD PTR [edi+0x4]
   1ae8f:	cmp    esi,eax
   1ae91:	jne    0x1ae9e
   1ae93:	mov    DWORD PTR [eax+0x4],ebx
   1ae96:	mov    eax,DWORD PTR [edi+0x4]
   1ae99:	mov    DWORD PTR [eax+0x8],ebx
   1ae9c:	jmp    0x1aea4
   1ae9e:	cmp    esi,DWORD PTR [eax]
   1aea0:	jne    0x1aea4
   1aea2:	mov    DWORD PTR [eax],ebx
   1aea4:	mov    eax,DWORD PTR [edi+0x4]
   1aea7:	mov    esi,ebx
   1aea9:	cmp    ebx,DWORD PTR [eax+0x4]
   1aeac:	je     0x1af60
   1aeb2:	mov    eax,DWORD PTR [esi+0x4]
   1aeb5:	xor    edx,edx
   1aeb7:	cmp    DWORD PTR [eax+0x14],edx
   1aeba:	jne    0x1af60
   1aec0:	mov    ecx,DWORD PTR [eax+0x4]
   1aec3:	cmp    eax,DWORD PTR [ecx]
   1aec5:	jne    0x1af01
   1aec7:	mov    ecx,DWORD PTR [ecx+0x8]
   1aeca:	cmp    DWORD PTR [ecx+0x14],edx
   1aecd:	je     0x1af08
   1aecf:	cmp    esi,DWORD PTR [eax+0x8]
   1aed2:	jne    0x1aede
   1aed4:	mov    esi,eax
   1aed6:	push   esi
   1aed7:	mov    ecx,edi
   1aed9:	call   0x1a576
   1aede:	mov    eax,DWORD PTR [esi+0x4]
   1aee1:	mov    DWORD PTR [eax+0x14],0x1
   1aee8:	mov    eax,DWORD PTR [esi+0x4]
   1aeeb:	mov    eax,DWORD PTR [eax+0x4]
   1aeee:	and    DWORD PTR [eax+0x14],0x0
   1aef2:	mov    eax,DWORD PTR [esi+0x4]
   1aef5:	push   DWORD PTR [eax+0x4]
   1aef8:	mov    ecx,edi
   1aefa:	call   0x1a5c4
   1aeff:	jmp    0x1af54
   1af01:	mov    ecx,DWORD PTR [ecx]
   1af03:	cmp    DWORD PTR [ecx+0x14],edx
   1af06:	jne    0x1af25
   1af08:	mov    edx,eax
   1af0a:	xor    eax,eax
   1af0c:	inc    eax
   1af0d:	mov    DWORD PTR [edx+0x14],eax
   1af10:	mov    DWORD PTR [ecx+0x14],eax
   1af13:	mov    eax,DWORD PTR [esi+0x4]
   1af16:	mov    eax,DWORD PTR [eax+0x4]
   1af19:	and    DWORD PTR [eax+0x14],0x0
   1af1d:	mov    eax,DWORD PTR [esi+0x4]
   1af20:	mov    esi,DWORD PTR [eax+0x4]
   1af23:	jmp    0x1af54
   1af25:	cmp    esi,DWORD PTR [eax]
   1af27:	jne    0x1af33
   1af29:	mov    esi,eax
   1af2b:	push   esi
   1af2c:	mov    ecx,edi
   1af2e:	call   0x1a5c4
   1af33:	mov    eax,DWORD PTR [esi+0x4]
   1af36:	mov    DWORD PTR [eax+0x14],0x1
   1af3d:	mov    eax,DWORD PTR [esi+0x4]
   1af40:	mov    eax,DWORD PTR [eax+0x4]
   1af43:	and    DWORD PTR [eax+0x14],0x0
   1af47:	mov    eax,DWORD PTR [esi+0x4]
   1af4a:	push   DWORD PTR [eax+0x4]
   1af4d:	mov    ecx,edi
   1af4f:	call   0x1a576
   1af54:	mov    eax,DWORD PTR [edi+0x4]
   1af57:	cmp    esi,DWORD PTR [eax+0x4]
   1af5a:	jne    0x1aeb2
   1af60:	mov    eax,DWORD PTR [edi+0x4]
   1af63:	mov    eax,DWORD PTR [eax+0x4]
   1af66:	pop    edi
   1af67:	mov    DWORD PTR [eax+0x14],0x1
   1af6e:	mov    eax,DWORD PTR [ebp+0x8]
   1af71:	pop    esi
   1af72:	mov    DWORD PTR [eax],ebx
   1af74:	pop    ebx
   1af75:	pop    ebp
   1af76:	ret    0x10
   1af79:	int3   
   1af7a:	int3   
   1af7b:	int3   
   1af7c:	int3   
   1af7d:	int3   
   1af7e:	mov    edi,edi
   1af80:	push   ebp
   1af81:	mov    ebp,esp
   1af83:	sub    esp,0x10
   1af86:	push   ebx
   1af87:	push   esi
   1af88:	mov    DWORD PTR [ebp-0xc],ecx
   1af8b:	push   edi
   1af8c:	mov    edi,DWORD PTR [ebp+0xc]
   1af8f:	lea    ecx,[ebp+0xc]
   1af92:	call   0x1a408
   1af97:	mov    esi,DWORD PTR [edi]
   1af99:	mov    eax,ds:0x78a84
   1af9e:	lea    ebx,[edi+0x8]
   1afa1:	mov    DWORD PTR [ebp-0x8],edi
   1afa4:	mov    DWORD PTR [ebp-0x10],ebx
   1afa7:	cmp    esi,eax
   1afa9:	jne    0x1afaf
   1afab:	mov    esi,DWORD PTR [ebx]
   1afad:	jmp    0x1afc6
   1afaf:	mov    ecx,DWORD PTR [ebx]
   1afb1:	cmp    ecx,eax
   1afb3:	je     0x1afc6
   1afb5:	push   ecx
   1afb6:	call   0x1a3e6
   1afbb:	mov    DWORD PTR [ebp-0x8],eax
   1afbe:	add    eax,0x8
   1afc1:	mov    esi,DWORD PTR [eax]
   1afc3:	mov    DWORD PTR [ebp-0x10],eax
   1afc6:	lea    ecx,[ebp-0x1]
   1afc9:	call   DWORD PTR ds:0x771bc
   1afcf:	mov    eax,DWORD PTR [ebp-0x8]
   1afd2:	cmp    eax,edi
   1afd4:	je     0x1b036
   1afd6:	mov    ecx,DWORD PTR [edi]
   1afd8:	mov    DWORD PTR [ecx+0x4],eax
   1afdb:	mov    ecx,DWORD PTR [edi]
   1afdd:	mov    DWORD PTR [eax],ecx
   1afdf:	cmp    eax,DWORD PTR [ebx]
   1afe1:	jne    0x1afe8
   1afe3:	mov    DWORD PTR [esi+0x4],eax
   1afe6:	jmp    0x1afff
   1afe8:	mov    ecx,DWORD PTR [eax+0x4]
   1afeb:	mov    edx,DWORD PTR [ebp-0x10]
   1afee:	mov    DWORD PTR [esi+0x4],ecx
   1aff1:	mov    ecx,DWORD PTR [eax+0x4]
   1aff4:	mov    DWORD PTR [ecx],esi
   1aff6:	mov    ecx,DWORD PTR [ebx]
   1aff8:	mov    DWORD PTR [edx],ecx
   1affa:	mov    ecx,DWORD PTR [ebx]
   1affc:	mov    DWORD PTR [ecx+0x4],eax
   1afff:	mov    ebx,DWORD PTR [ebp-0xc]
   1b002:	mov    ecx,DWORD PTR [ebx+0x4]
   1b005:	cmp    DWORD PTR [ecx+0x4],edi
   1b008:	jne    0x1b00f
   1b00a:	mov    DWORD PTR [ecx+0x4],eax
   1b00d:	jmp    0x1b01d
   1b00f:	mov    ecx,DWORD PTR [edi+0x4]
   1b012:	cmp    DWORD PTR [ecx],edi
   1b014:	jne    0x1b01a
   1b016:	mov    DWORD PTR [ecx],eax
   1b018:	jmp    0x1b01d
   1b01a:	mov    DWORD PTR [ecx+0x8],eax
   1b01d:	mov    ecx,DWORD PTR [edi+0x4]
   1b020:	mov    DWORD PTR [eax+0x4],ecx
   1b023:	mov    ecx,DWORD PTR [eax+0x14]
   1b026:	mov    edx,DWORD PTR [edi+0x14]
   1b029:	mov    DWORD PTR [eax+0x14],edx
   1b02c:	mov    DWORD PTR [edi+0x14],ecx
   1b02f:	mov    DWORD PTR [ebp-0x8],edi
   1b032:	mov    eax,edi
   1b034:	jmp    0x1b0af
   1b036:	mov    ecx,DWORD PTR [eax+0x4]
   1b039:	mov    edx,DWORD PTR [ebp-0xc]
   1b03c:	mov    DWORD PTR [esi+0x4],ecx
   1b03f:	mov    ecx,DWORD PTR [edx+0x4]
   1b042:	cmp    DWORD PTR [ecx+0x4],edi
   1b045:	jne    0x1b04c
   1b047:	mov    DWORD PTR [ecx+0x4],esi
   1b04a:	jmp    0x1b05a
   1b04c:	mov    ecx,DWORD PTR [edi+0x4]
   1b04f:	cmp    DWORD PTR [ecx],edi
   1b051:	jne    0x1b057
   1b053:	mov    DWORD PTR [ecx],esi
   1b055:	jmp    0x1b05a
   1b057:	mov    DWORD PTR [ecx+0x8],esi
   1b05a:	mov    ecx,DWORD PTR [edx+0x4]
   1b05d:	mov    DWORD PTR [ebp-0x10],ecx
   1b060:	cmp    DWORD PTR [ecx],edi
   1b062:	jne    0x1b086
   1b064:	mov    ebx,DWORD PTR [ebx]
   1b066:	cmp    ebx,DWORD PTR ds:0x78a84
   1b06c:	jne    0x1b075
   1b06e:	mov    ebx,DWORD PTR [edi+0x4]
   1b071:	mov    DWORD PTR [ecx],ebx
   1b073:	jmp    0x1b086
   1b075:	push   esi
   1b076:	call   0x1a3e6
   1b07b:	mov    ecx,DWORD PTR [ebp-0x10]
   1b07e:	mov    edx,DWORD PTR [ebp-0xc]
   1b081:	mov    DWORD PTR [ecx],eax
   1b083:	mov    eax,DWORD PTR [ebp-0x8]
   1b086:	mov    ebx,DWORD PTR [edx+0x4]
   1b089:	cmp    DWORD PTR [ebx+0x8],edi
   1b08c:	jne    0x1b0ac
   1b08e:	mov    ecx,DWORD PTR [edi]
   1b090:	cmp    ecx,DWORD PTR ds:0x78a84
   1b096:	jne    0x1b0a0
   1b098:	mov    ecx,DWORD PTR [edi+0x4]
   1b09b:	mov    DWORD PTR [ebx+0x8],ecx
   1b09e:	jmp    0x1b0ac
   1b0a0:	push   esi
   1b0a1:	call   0x1a3c4
   1b0a6:	mov    DWORD PTR [ebx+0x8],eax
   1b0a9:	mov    eax,DWORD PTR [ebp-0x8]
   1b0ac:	mov    ebx,DWORD PTR [ebp-0xc]
   1b0af:	xor    edi,edi
   1b0b1:	inc    edi
   1b0b2:	cmp    DWORD PTR [eax+0x14],edi
   1b0b5:	jne    0x1b1c9
   1b0bb:	jmp    0x1b17c
   1b0c0:	cmp    DWORD PTR [esi+0x14],edi
   1b0c3:	jne    0x1b1c6
   1b0c9:	mov    eax,DWORD PTR [esi+0x4]
   1b0cc:	cmp    esi,DWORD PTR [eax]
   1b0ce:	jne    0x1b145
   1b0d0:	mov    eax,DWORD PTR [eax+0x8]
   1b0d3:	cmp    DWORD PTR [eax+0x14],0x0
   1b0d7:	jne    0x1b0f3
   1b0d9:	mov    DWORD PTR [eax+0x14],edi
   1b0dc:	mov    eax,DWORD PTR [esi+0x4]
   1b0df:	and    DWORD PTR [eax+0x14],0x0
   1b0e3:	push   DWORD PTR [esi+0x4]
   1b0e6:	mov    ecx,ebx
   1b0e8:	call   0x1a576
   1b0ed:	mov    eax,DWORD PTR [esi+0x4]
   1b0f0:	mov    eax,DWORD PTR [eax+0x8]
   1b0f3:	mov    ecx,DWORD PTR [eax]
   1b0f5:	cmp    DWORD PTR [ecx+0x14],edi
   1b0f8:	jne    0x1b102
   1b0fa:	mov    ecx,DWORD PTR [eax+0x8]
   1b0fd:	cmp    DWORD PTR [ecx+0x14],edi
   1b100:	je     0x1b175
   1b102:	mov    ecx,DWORD PTR [eax+0x8]
   1b105:	cmp    DWORD PTR [ecx+0x14],edi
   1b108:	jne    0x1b121
   1b10a:	mov    ecx,DWORD PTR [eax]
   1b10c:	mov    DWORD PTR [ecx+0x14],edi
   1b10f:	and    DWORD PTR [eax+0x14],0x0
   1b113:	push   eax
   1b114:	mov    ecx,ebx
   1b116:	call   0x1a5c4
   1b11b:	mov    eax,DWORD PTR [esi+0x4]
   1b11e:	mov    eax,DWORD PTR [eax+0x8]
   1b121:	mov    ecx,DWORD PTR [esi+0x4]
   1b124:	mov    ecx,DWORD PTR [ecx+0x14]
   1b127:	mov    DWORD PTR [eax+0x14],ecx
   1b12a:	mov    ecx,DWORD PTR [esi+0x4]
   1b12d:	mov    DWORD PTR [ecx+0x14],edi
   1b130:	mov    eax,DWORD PTR [eax+0x8]
   1b133:	mov    DWORD PTR [eax+0x14],edi
   1b136:	push   DWORD PTR [esi+0x4]
   1b139:	mov    ecx,ebx
   1b13b:	call   0x1a576
   1b140:	jmp    0x1b1c6
   1b145:	mov    eax,DWORD PTR [eax]
   1b147:	cmp    DWORD PTR [eax+0x14],0x0
   1b14b:	jne    0x1b166
   1b14d:	mov    DWORD PTR [eax+0x14],edi
   1b150:	mov    eax,DWORD PTR [esi+0x4]
   1b153:	and    DWORD PTR [eax+0x14],0x0
   1b157:	push   DWORD PTR [esi+0x4]
   1b15a:	mov    ecx,ebx
   1b15c:	call   0x1a5c4
   1b161:	mov    eax,DWORD PTR [esi+0x4]
   1b164:	mov    eax,DWORD PTR [eax]
   1b166:	mov    ecx,DWORD PTR [eax+0x8]
   1b169:	cmp    DWORD PTR [ecx+0x14],edi
   1b16c:	jne    0x1b18a
   1b16e:	mov    ecx,DWORD PTR [eax]
   1b170:	cmp    DWORD PTR [ecx+0x14],edi
   1b173:	jne    0x1b18a
   1b175:	and    DWORD PTR [eax+0x14],0x0
   1b179:	mov    esi,DWORD PTR [esi+0x4]
   1b17c:	mov    eax,DWORD PTR [ebx+0x4]
   1b17f:	cmp    esi,DWORD PTR [eax+0x4]
   1b182:	jne    0x1b0c0
   1b188:	jmp    0x1b1c6
   1b18a:	mov    ecx,DWORD PTR [eax]
   1b18c:	cmp    DWORD PTR [ecx+0x14],edi
   1b18f:	jne    0x1b1a8
   1b191:	mov    ecx,DWORD PTR [eax+0x8]
   1b194:	mov    DWORD PTR [ecx+0x14],edi
   1b197:	and    DWORD PTR [eax+0x14],0x0
   1b19b:	push   eax
   1b19c:	mov    ecx,ebx
   1b19e:	call   0x1a576
   1b1a3:	mov    eax,DWORD PTR [esi+0x4]
   1b1a6:	mov    eax,DWORD PTR [eax]
   1b1a8:	mov    ecx,DWORD PTR [esi+0x4]
   1b1ab:	mov    ecx,DWORD PTR [ecx+0x14]
   1b1ae:	mov    DWORD PTR [eax+0x14],ecx
   1b1b1:	mov    ecx,DWORD PTR [esi+0x4]
   1b1b4:	mov    DWORD PTR [ecx+0x14],edi
   1b1b7:	mov    eax,DWORD PTR [eax]
   1b1b9:	mov    DWORD PTR [eax+0x14],edi
   1b1bc:	push   DWORD PTR [esi+0x4]
   1b1bf:	mov    ecx,ebx
   1b1c1:	call   0x1a5c4
   1b1c6:	mov    DWORD PTR [esi+0x14],edi
   1b1c9:	lea    ecx,[ebp-0x1]
   1b1cc:	call   DWORD PTR ds:0x771b8
   1b1d2:	mov    esi,DWORD PTR [ebp-0x8]
   1b1d5:	lea    eax,[esi+0xc]
   1b1d8:	push   eax
   1b1d9:	call   0x1a6f2
   1b1de:	push   esi
   1b1df:	call   0x10a3a
   1b1e4:	mov    eax,DWORD PTR [ebp+0x8]
   1b1e7:	dec    DWORD PTR [ebx+0xc]
   1b1ea:	pop    ecx
   1b1eb:	mov    ecx,DWORD PTR [ebp+0xc]
   1b1ee:	pop    edi
   1b1ef:	pop    esi
   1b1f0:	mov    DWORD PTR [eax],ecx
   1b1f2:	pop    ebx
   1b1f3:	leave  
   1b1f4:	ret    0x8
   1b1f7:	int3   
   1b1f8:	int3   
   1b1f9:	int3   
   1b1fa:	int3   
   1b1fb:	int3   
   1b1fc:	mov    edi,edi
   1b1fe:	push   ebp
   1b1ff:	mov    ebp,esp
   1b201:	push   ebx
   1b202:	push   esi
   1b203:	push   edi
   1b204:	mov    edi,DWORD PTR [ebp+0x8]
   1b207:	mov    ebx,ecx
   1b209:	mov    esi,edi
   1b20b:	cmp    edi,DWORD PTR ds:0x78a84
   1b211:	je     0x1b239
   1b213:	push   DWORD PTR [esi+0x8]
   1b216:	mov    ecx,ebx
   1b218:	call   0x1b1fc
   1b21d:	mov    esi,DWORD PTR [esi]
   1b21f:	lea    eax,[edi+0xc]
   1b222:	push   eax
   1b223:	call   0x1a6f2
   1b228:	push   edi
   1b229:	call   0x10a3a
   1b22e:	pop    ecx
   1b22f:	mov    edi,esi
   1b231:	cmp    esi,DWORD PTR ds:0x78a84
   1b237:	jne    0x1b213
   1b239:	pop    edi
   1b23a:	pop    esi
   1b23b:	pop    ebx
   1b23c:	pop    ebp
   1b23d:	ret    0x4
   1b240:	int3   
   1b241:	int3   
   1b242:	int3   
   1b243:	int3   
   1b244:	int3   
   1b245:	int3   
   1b246:	mov    edi,edi
   1b248:	push   esi
   1b249:	mov    esi,ecx
   1b24b:	jmp    0x1b254
   1b24d:	mov    ecx,esi
   1b24f:	call   0x1aba4
   1b254:	cmp    DWORD PTR [esi+0x2c],0x0
   1b258:	jne    0x1b24d
   1b25a:	pop    esi
   1b25b:	ret    
   1b25c:	int3   
   1b25d:	int3   
   1b25e:	int3   
   1b25f:	int3   
   1b260:	int3   
   1b261:	int3   
   1b262:	mov    edi,edi
   1b264:	push   ebp
   1b265:	mov    ebp,esp
   1b267:	push   esi
   1b268:	mov    esi,ecx
   1b26a:	cmp    DWORD PTR [esi+0x2c],0x0
   1b26e:	je     0x1b296
   1b270:	mov    ecx,DWORD PTR [esi+0x1c]
   1b273:	mov    edx,DWORD PTR [esi+0x18]
   1b276:	cmp    ecx,edx
   1b278:	je     0x1b296
   1b27a:	push   DWORD PTR [ebp+0x8]
   1b27d:	lea    eax,[ecx+0x4]
   1b280:	mov    DWORD PTR [esi+0x1c],eax
   1b283:	push   ecx
   1b284:	cmp    eax,edx
   1b286:	jne    0x1b2aa
   1b288:	call   0x1a43e
   1b28d:	mov    ecx,esi
   1b28f:	call   0x1ac36
   1b294:	jmp    0x1b2af
   1b296:	mov    ecx,esi
   1b298:	call   0x1ac36
   1b29d:	mov    eax,DWORD PTR [esi+0x1c]
   1b2a0:	push   DWORD PTR [ebp+0x8]
   1b2a3:	lea    ecx,[eax+0x4]
   1b2a6:	mov    DWORD PTR [esi+0x1c],ecx
   1b2a9:	push   eax
   1b2aa:	call   0x1a43e
   1b2af:	inc    DWORD PTR [esi+0x2c]
   1b2b2:	pop    esi
   1b2b3:	pop    ebp
   1b2b4:	ret    0x4
   1b2b7:	int3   
   1b2b8:	int3   
   1b2b9:	int3   
   1b2ba:	int3   
   1b2bb:	int3   
   1b2bc:	mov    edi,edi
   1b2be:	push   ebp
   1b2bf:	mov    ebp,esp
   1b2c1:	push   esi
   1b2c2:	push   0x0
   1b2c4:	push   0xc
   1b2c6:	mov    esi,ecx
   1b2c8:	call   0x116aa
   1b2cd:	mov    ecx,DWORD PTR [ebp+0x8]
   1b2d0:	mov    DWORD PTR [eax],eax
   1b2d2:	mov    DWORD PTR [eax+0x4],eax
   1b2d5:	and    DWORD PTR [esi+0x8],0x0
   1b2d9:	mov    DWORD PTR [esi+0x4],eax
   1b2dc:	mov    ecx,DWORD PTR [ecx+0x4]
   1b2df:	mov    edx,DWORD PTR [ecx]
   1b2e1:	mov    eax,DWORD PTR [eax]
   1b2e3:	push   ecx
   1b2e4:	push   edx
   1b2e5:	push   eax
   1b2e6:	mov    ecx,esi
   1b2e8:	call   0x1ad42
   1b2ed:	mov    eax,esi
   1b2ef:	pop    esi
   1b2f0:	pop    ebp
   1b2f1:	ret    0x4
   1b2f4:	int3   
   1b2f5:	int3   
   1b2f6:	int3   
   1b2f7:	int3   
   1b2f8:	int3   
   1b2f9:	int3   
   1b2fa:	mov    edi,edi
   1b2fc:	push   ebp
   1b2fd:	mov    ebp,esp
   1b2ff:	push   ecx
   1b300:	mov    edx,DWORD PTR [ebp+0x8]
   1b303:	mov    DWORD PTR [ebp-0x4],ecx
   1b306:	cmp    ecx,edx
   1b308:	je     0x1b347
   1b30a:	push   ebx
   1b30b:	mov    ebx,DWORD PTR [edx+0x4]
   1b30e:	push   esi
   1b30f:	mov    esi,DWORD PTR [ecx+0x4]
   1b312:	mov    eax,DWORD PTR [esi]
   1b314:	push   edi
   1b315:	mov    edi,DWORD PTR [ebx]
   1b317:	jmp    0x1b327
   1b319:	cmp    edi,ebx
   1b31b:	je     0x1b32b
   1b31d:	mov    edx,DWORD PTR [edi+0x8]
   1b320:	mov    DWORD PTR [eax+0x8],edx
   1b323:	mov    eax,DWORD PTR [eax]
   1b325:	mov    edi,DWORD PTR [edi]
   1b327:	cmp    eax,esi
   1b329:	jne    0x1b319
   1b32b:	push   esi
   1b32c:	push   eax
   1b32d:	lea    eax,[ebp+0x8]
   1b330:	push   eax
   1b331:	call   0x1aa1e
   1b336:	mov    ecx,DWORD PTR [ebp-0x4]
   1b339:	push   ebx
   1b33a:	push   edi
   1b33b:	push   esi
   1b33c:	call   0x1ad42
   1b341:	mov    ecx,DWORD PTR [ebp-0x4]
   1b344:	pop    edi
   1b345:	pop    esi
   1b346:	pop    ebx
   1b347:	mov    eax,ecx
   1b349:	leave  
   1b34a:	ret    0x4
   1b34d:	int3   
   1b34e:	int3   
   1b34f:	int3   
   1b350:	int3   
   1b351:	int3   
   1b352:	mov    edi,edi
   1b354:	push   ebp
   1b355:	mov    ebp,esp
   1b357:	push   DWORD PTR [ebp+0x8]
   1b35a:	mov    eax,DWORD PTR [ecx+0x4]
   1b35d:	push   eax
   1b35e:	lea    eax,[ebp+0x8]
   1b361:	push   eax
   1b362:	call   0x1ad00
   1b367:	pop    ebp
   1b368:	ret    0x4
   1b36b:	int3   
   1b36c:	int3   
   1b36d:	int3   
   1b36e:	int3   
   1b36f:	int3   
   1b370:	mov    edi,edi
   1b372:	push   ebp
   1b373:	mov    ebp,esp
   1b375:	push   ecx
   1b376:	push   ebx
   1b377:	push   esi
   1b378:	push   edi
   1b379:	mov    edi,ecx
   1b37b:	mov    eax,DWORD PTR [edi+0x4]
   1b37e:	mov    esi,DWORD PTR [eax+0x4]
   1b381:	mov    ebx,eax
   1b383:	mov    al,0x1
   1b385:	jmp    0x1b3a0
   1b387:	lea    eax,[esi+0xc]
   1b38a:	push   eax
   1b38b:	push   DWORD PTR [ebp+0xc]
   1b38e:	mov    ebx,esi
   1b390:	call   0x19864
   1b395:	test   al,al
   1b397:	je     0x1b39d
   1b399:	mov    esi,DWORD PTR [esi]
   1b39b:	jmp    0x1b3a0
   1b39d:	mov    esi,DWORD PTR [esi+0x8]
   1b3a0:	cmp    esi,DWORD PTR ds:0x78a84
   1b3a6:	jne    0x1b387
   1b3a8:	cmp    BYTE PTR [edi+0x8],0x0
   1b3ac:	je     0x1b3c9
   1b3ae:	push   DWORD PTR [ebp+0xc]
   1b3b1:	lea    eax,[ebp+0xc]
   1b3b4:	push   ebx
   1b3b5:	push   esi
   1b3b6:	push   eax
   1b3b7:	mov    ecx,edi
   1b3b9:	call   0x1ae28
   1b3be:	mov    ecx,DWORD PTR [eax]
   1b3c0:	mov    eax,DWORD PTR [ebp+0x8]
   1b3c3:	mov    BYTE PTR [eax+0x4],0x1
   1b3c7:	jmp    0x1b3fc
   1b3c9:	mov    DWORD PTR [ebp-0x4],ebx
   1b3cc:	test   al,al
   1b3ce:	je     0x1b3df
   1b3d0:	mov    eax,DWORD PTR [edi+0x4]
   1b3d3:	cmp    ebx,DWORD PTR [eax]
   1b3d5:	je     0x1b3ae
   1b3d7:	lea    ecx,[ebp-0x4]
   1b3da:	call   0x1a614
   1b3df:	push   DWORD PTR [ebp+0xc]
   1b3e2:	mov    eax,DWORD PTR [ebp-0x4]
   1b3e5:	add    eax,0xc
   1b3e8:	push   eax
   1b3e9:	call   0x19864
   1b3ee:	test   al,al
   1b3f0:	jne    0x1b3ae
   1b3f2:	mov    eax,DWORD PTR [ebp+0x8]
   1b3f5:	mov    ecx,DWORD PTR [ebp-0x4]
   1b3f8:	mov    BYTE PTR [eax+0x4],0x0
   1b3fc:	pop    edi
   1b3fd:	pop    esi
   1b3fe:	mov    DWORD PTR [eax],ecx
   1b400:	pop    ebx
   1b401:	leave  
   1b402:	ret    0x8
   1b405:	int3   
   1b406:	int3   
   1b407:	int3   
   1b408:	int3   
   1b409:	int3   
   1b40a:	mov    edi,edi
   1b40c:	push   ebp
   1b40d:	mov    ebp,esp
   1b40f:	push   ecx
   1b410:	push   ecx
   1b411:	push   DWORD PTR [ebp+0x8]
   1b414:	lea    eax,[ebp-0x8]
   1b417:	push   eax
   1b418:	call   0x1ad7a
   1b41d:	and    DWORD PTR [ebp+0x8],0x0
   1b421:	lea    eax,[ebp+0x8]
   1b424:	push   eax
   1b425:	push   DWORD PTR [ebp-0x4]
   1b428:	push   DWORD PTR [ebp-0x8]
   1b42b:	call   0x1ab24
   1b430:	mov    eax,DWORD PTR [ebp+0x8]
   1b433:	add    esp,0xc
   1b436:	leave  
   1b437:	ret    0x4
   1b43a:	int3   
   1b43b:	int3   
   1b43c:	int3   
   1b43d:	int3   
   1b43e:	int3   
   1b43f:	int3   
   1b440:	mov    edi,edi
   1b442:	push   ebp
   1b443:	mov    ebp,esp
   1b445:	push   ecx
   1b446:	push   esi
   1b447:	mov    esi,ecx
   1b449:	cmp    DWORD PTR [esi+0xc],0x0
   1b44d:	mov    ecx,DWORD PTR [ebp+0xc]
   1b450:	je     0x1b48a
   1b452:	mov    eax,DWORD PTR [esi+0x4]
   1b455:	cmp    ecx,DWORD PTR [eax]
   1b457:	jne    0x1b48a
   1b459:	cmp    DWORD PTR [ebp+0x10],eax
   1b45c:	jne    0x1b48a
   1b45e:	push   DWORD PTR [eax+0x4]
   1b461:	mov    ecx,esi
   1b463:	call   0x1b1fc
   1b468:	mov    ecx,DWORD PTR ds:0x78a84
   1b46e:	mov    eax,DWORD PTR [esi+0x4]
   1b471:	mov    DWORD PTR [eax+0x4],ecx
   1b474:	mov    eax,DWORD PTR [esi+0x4]
   1b477:	and    DWORD PTR [esi+0xc],0x0
   1b47b:	mov    DWORD PTR [eax],eax
   1b47d:	mov    eax,DWORD PTR [esi+0x4]
   1b480:	mov    DWORD PTR [eax+0x8],eax
   1b483:	mov    eax,DWORD PTR [esi+0x4]
   1b486:	mov    ecx,DWORD PTR [eax]
   1b488:	jmp    0x1b4af
   1b48a:	cmp    ecx,DWORD PTR [ebp+0x10]
   1b48d:	je     0x1b4af
   1b48f:	push   edi
   1b490:	mov    edi,ecx
   1b492:	lea    ecx,[ebp+0xc]
   1b495:	call   0x1a408
   1b49a:	push   edi
   1b49b:	lea    eax,[ebp-0x4]
   1b49e:	push   eax
   1b49f:	mov    ecx,esi
   1b4a1:	call   0x1af7e
   1b4a6:	mov    ecx,DWORD PTR [ebp+0xc]
   1b4a9:	cmp    ecx,DWORD PTR [ebp+0x10]
   1b4ac:	jne    0x1b490
   1b4ae:	pop    edi
   1b4af:	mov    eax,DWORD PTR [ebp+0x8]
   1b4b2:	mov    DWORD PTR [eax],ecx
   1b4b4:	pop    esi
   1b4b5:	leave  
   1b4b6:	ret    0xc
   1b4b9:	int3   
   1b4ba:	int3   
   1b4bb:	int3   
   1b4bc:	int3   
   1b4bd:	int3   
   1b4be:	mov    edi,edi
   1b4c0:	push   ebp
   1b4c1:	mov    ebp,esp
   1b4c3:	push   esi
   1b4c4:	push   DWORD PTR [ebp+0x8]
   1b4c7:	mov    esi,ecx
   1b4c9:	mov    ecx,DWORD PTR [esi]
   1b4cb:	call   0x1b262
   1b4d0:	mov    eax,esi
   1b4d2:	pop    esi
   1b4d3:	pop    ebp
   1b4d4:	ret    0x4
   1b4d7:	int3   
   1b4d8:	int3   
   1b4d9:	int3   
   1b4da:	int3   
   1b4db:	int3   
   1b4dc:	mov    edi,edi
   1b4de:	push   ebp
   1b4df:	mov    ebp,esp
   1b4e1:	push   ecx
   1b4e2:	push   esi
   1b4e3:	push   edi
   1b4e4:	xor    edi,edi
   1b4e6:	push   edi
   1b4e7:	push   edi
   1b4e8:	push   edi
   1b4e9:	push   edi
   1b4ea:	mov    esi,0x78a54
   1b4ef:	push   esi
   1b4f0:	call   DWORD PTR ds:0x1f02c
   1b4f6:	test   eax,eax
   1b4f8:	jl     0x1b51c
   1b4fa:	mov    eax,ds:0x78a80
   1b4ff:	mov    ecx,DWORD PTR ds:0x78a78
   1b505:	add    eax,0x9
   1b508:	mov    DWORD PTR [ebp-0x4],eax
   1b50b:	lea    eax,[ebp-0x4]
   1b50e:	push   eax
   1b50f:	call   0x1b352
   1b514:	push   edi
   1b515:	push   esi
   1b516:	call   DWORD PTR ds:0x1f028
   1b51c:	pop    edi
   1b51d:	pop    esi
   1b51e:	leave  
   1b51f:	ret    
   1b520:	int3   
   1b521:	int3   
   1b522:	int3   
   1b523:	int3   
   1b524:	int3   
   1b525:	int3   
   1b526:	mov    edi,edi
   1b528:	push   ebp
   1b529:	mov    ebp,esp
   1b52b:	push   ecx
   1b52c:	push   ecx
   1b52d:	push   DWORD PTR [ebp+0xc]
   1b530:	lea    eax,[ebp-0x8]
   1b533:	push   eax
   1b534:	call   0x1b370
   1b539:	mov    eax,DWORD PTR [ebp+0x8]
   1b53c:	mov    ecx,DWORD PTR [ebp-0x8]
   1b53f:	mov    DWORD PTR [eax],ecx
   1b541:	mov    cl,BYTE PTR [ebp-0x4]
   1b544:	mov    BYTE PTR [eax+0x4],cl
   1b547:	leave  
   1b548:	ret    0x8
   1b54b:	int3   
   1b54c:	int3   
   1b54d:	int3   
   1b54e:	int3   
   1b54f:	int3   
   1b550:	mov    edi,edi
   1b552:	push   ebp
   1b553:	mov    ebp,esp
   1b555:	push   ecx
   1b556:	push   ecx
   1b557:	push   esi
   1b558:	push   DWORD PTR [ebp+0x8]
   1b55b:	lea    eax,[ebp-0x8]
   1b55e:	push   eax
   1b55f:	mov    esi,ecx
   1b561:	call   0x1ad7a
   1b566:	and    DWORD PTR [ebp+0x8],0x0
   1b56a:	lea    eax,[ebp+0x8]
   1b56d:	push   eax
   1b56e:	push   DWORD PTR [ebp-0x4]
   1b571:	push   DWORD PTR [ebp-0x8]
   1b574:	call   0x1ab24
   1b579:	add    esp,0xc
   1b57c:	push   DWORD PTR [ebp-0x4]
   1b57f:	lea    eax,[ebp-0x4]
   1b582:	push   DWORD PTR [ebp-0x8]
   1b585:	mov    ecx,esi
   1b587:	push   eax
   1b588:	call   0x1b440
   1b58d:	mov    eax,DWORD PTR [ebp+0x8]
   1b590:	pop    esi
   1b591:	leave  
   1b592:	ret    0x4
   1b595:	int3   
   1b596:	int3   
   1b597:	int3   
   1b598:	int3   
   1b599:	int3   
   1b59a:	mov    edi,edi
   1b59c:	push   ebp
   1b59d:	mov    ebp,esp
   1b59f:	jmp    0x1b5b2
   1b5a1:	push   eax
   1b5a2:	lea    ecx,[ebp+0x2c]
   1b5a5:	call   0x1b4be
   1b5aa:	lea    ecx,[ebp+0xc]
   1b5ad:	call   0x1a36a
   1b5b2:	mov    eax,DWORD PTR [ebp+0x14]
   1b5b5:	cmp    eax,DWORD PTR [ebp+0x24]
   1b5b8:	jne    0x1b5a1
   1b5ba:	mov    eax,DWORD PTR [ebp+0x8]
   1b5bd:	mov    ecx,DWORD PTR [ebp+0x2c]
   1b5c0:	mov    DWORD PTR [eax],ecx
   1b5c2:	pop    ebp
   1b5c3:	ret    0x28
   1b5c6:	int3   
   1b5c7:	int3   
   1b5c8:	int3   
   1b5c9:	int3   
   1b5ca:	int3   
   1b5cb:	int3   
   1b5cc:	mov    edi,edi
   1b5ce:	push   ebp
   1b5cf:	mov    ebp,esp
   1b5d1:	sub    esp,0x10
   1b5d4:	push   0xffffffff
   1b5d6:	push   DWORD PTR [ebp+0x8]
   1b5d9:	lea    ecx,[ebp-0x8]
   1b5dc:	call   0x11140
   1b5e1:	mov    ecx,DWORD PTR ds:0x78a74
   1b5e7:	lea    eax,[ebp-0x8]
   1b5ea:	push   eax
   1b5eb:	lea    eax,[ebp-0x10]
   1b5ee:	push   eax
   1b5ef:	call   0x1b526
   1b5f4:	push   DWORD PTR [ebp-0x8]
   1b5f7:	call   0x10a3a
   1b5fc:	pop    ecx
   1b5fd:	leave  
   1b5fe:	ret    0x4
   1b601:	int3   
   1b602:	int3   
   1b603:	int3   
   1b604:	int3   
   1b605:	int3   
   1b606:	mov    edi,edi
   1b608:	push   ebp
   1b609:	mov    ebp,esp
   1b60b:	xor    eax,eax
   1b60d:	push   ebx
   1b60e:	push   esi
   1b60f:	push   edi
   1b610:	mov    ebx,ecx
   1b612:	mov    DWORD PTR [ebx+0x4],eax
   1b615:	mov    DWORD PTR [ebx+0x8],eax
   1b618:	mov    DWORD PTR [ebx+0xc],eax
   1b61b:	mov    DWORD PTR [ebx+0x10],eax
   1b61e:	mov    DWORD PTR [ebx+0x14],eax
   1b621:	mov    DWORD PTR [ebx+0x18],eax
   1b624:	mov    DWORD PTR [ebx+0x1c],eax
   1b627:	mov    DWORD PTR [ebx+0x20],eax
   1b62a:	mov    DWORD PTR [ebx+0x24],eax
   1b62d:	mov    DWORD PTR [ebx+0x28],eax
   1b630:	mov    DWORD PTR [ebx+0x2c],eax
   1b633:	mov    eax,DWORD PTR [ebp+0x8]
   1b636:	push   ebx
   1b637:	sub    esp,0x10
   1b63a:	mov    edi,esp
   1b63c:	lea    esi,[eax+0x14]
   1b63f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b640:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b641:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b642:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b643:	sub    esp,0x10
   1b646:	lea    esi,[eax+0x4]
   1b649:	mov    edi,esp
   1b64b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b64c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b64d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b64e:	lea    eax,[ebp+0x8]
   1b651:	push   eax
   1b652:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b653:	call   0x1b59a
   1b658:	pop    edi
   1b659:	pop    esi
   1b65a:	mov    eax,ebx
   1b65c:	pop    ebx
   1b65d:	pop    ebp
   1b65e:	ret    0x4
   1b661:	int3   
   1b662:	int3   
   1b663:	int3   
   1b664:	int3   
   1b665:	int3   
   1b666:	mov    edi,edi
   1b668:	push   ebp
   1b669:	mov    ebp,esp
   1b66b:	push   ecx
   1b66c:	push   ebx
   1b66d:	push   0x30
   1b66f:	call   0x10a06
   1b674:	xor    ebx,ebx
   1b676:	pop    ecx
   1b677:	cmp    eax,ebx
   1b679:	je     0x1b68d
   1b67b:	lea    ecx,[ebp-0x1]
   1b67e:	push   ecx
   1b67f:	mov    ecx,eax
   1b681:	call   0x1a528
   1b686:	mov    ds:0x78a7c,eax
   1b68b:	jmp    0x1b693
   1b68d:	mov    DWORD PTR ds:0x78a7c,ebx
   1b693:	push   esi
   1b694:	push   0x10
   1b696:	call   0x10a06
   1b69b:	mov    esi,eax
   1b69d:	pop    ecx
   1b69e:	cmp    esi,ebx
   1b6a0:	je     0x1b6b4
   1b6a2:	mov    ecx,esi
   1b6a4:	mov    BYTE PTR [esi+0x8],bl
   1b6a7:	call   0x1adac
   1b6ac:	mov    DWORD PTR ds:0x78a74,esi
   1b6b2:	jmp    0x1b6ba
   1b6b4:	mov    DWORD PTR ds:0x78a74,ebx
   1b6ba:	push   0xc
   1b6bc:	call   0x10a06
   1b6c1:	pop    ecx
   1b6c2:	pop    esi
   1b6c3:	cmp    eax,ebx
   1b6c5:	je     0x1b6d9
   1b6c7:	lea    ecx,[ebp-0x1]
   1b6ca:	push   ecx
   1b6cb:	mov    ecx,eax
   1b6cd:	call   0x1abc0
   1b6d2:	mov    ds:0x78a78,eax
   1b6d7:	jmp    0x1b6df
   1b6d9:	mov    DWORD PTR ds:0x78a78,ebx
   1b6df:	push   ebx
   1b6e0:	push   0x78a54
   1b6e5:	call   0x11cfc
   1b6ea:	call   eax
   1b6ec:	mov    DWORD PTR ds:0x78a80,0x1
   1b6f6:	pop    ebx
   1b6f7:	leave  
   1b6f8:	ret    
   1b6f9:	int3   
   1b6fa:	int3   
   1b6fb:	int3   
   1b6fc:	int3   
   1b6fd:	int3   
   1b6fe:	push   0x3c
   1b700:	push   0x773b0
   1b705:	call   0x1db88
   1b70a:	xor    esi,esi
   1b70c:	push   esi
   1b70d:	push   esi
   1b70e:	push   esi
   1b70f:	push   esi
   1b710:	push   0x78a54
   1b715:	call   DWORD PTR ds:0x1f02c
   1b71b:	cmp    eax,esi
   1b71d:	jl     0x1b88d
   1b723:	mov    DWORD PTR [ebp-0x4],esi
   1b726:	mov    edi,DWORD PTR [ebp+0x8]
   1b729:	push   edi
   1b72a:	lea    eax,[ebp-0x24]
   1b72d:	push   eax
   1b72e:	call   0x1a734
   1b733:	cmp    DWORD PTR [eax+0x4],esi
   1b736:	setne  BYTE PTR [ebp-0x19]
   1b73a:	push   DWORD PTR [ebp-0x24]
   1b73d:	call   0x10a3a
   1b742:	pop    ecx
   1b743:	push   edi
   1b744:	lea    eax,[ebp-0x2c]
   1b747:	push   eax
   1b748:	call   0x1a75a
   1b74d:	xor    al,al
   1b74f:	cmp    DWORD PTR [edi+0x14],esi
   1b752:	jne    0x1b768
   1b754:	lea    eax,[ebp-0x2c]
   1b757:	push   eax
   1b758:	mov    ecx,DWORD PTR ds:0x78a74
   1b75e:	call   0x1b40a
   1b763:	test   eax,eax
   1b765:	setne  al
   1b768:	test   al,al
   1b76a:	je     0x1b77b
   1b76c:	lea    eax,[ebp-0x2c]
   1b76f:	push   eax
   1b770:	mov    ecx,DWORD PTR ds:0x78a74
   1b776:	call   0x1b550
   1b77b:	mov    ebx,DWORD PTR ds:0x78a7c
   1b781:	cmp    DWORD PTR [ebx+0x2c],esi
   1b784:	jbe    0x1b7e4
   1b786:	mov    eax,ds:0x77f1c
   1b78b:	mov    DWORD PTR [ebp-0x20],eax
   1b78e:	cmp    eax,esi
   1b790:	ja     0x1b799
   1b792:	mov    DWORD PTR [ebp-0x20],0x1
   1b799:	mov    eax,DWORD PTR [ebp-0x20]
   1b79c:	cmp    DWORD PTR [ebx+0x2c],eax
   1b79f:	jb     0x1b7e4
   1b7a1:	lea    esi,[ebx+0x4]
   1b7a4:	lea    edi,[ebp-0x3c]
   1b7a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b7a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b7a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b7aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b7ab:	mov    eax,DWORD PTR [ebp-0x34]
   1b7ae:	mov    eax,DWORD PTR [eax]
   1b7b0:	mov    eax,DWORD PTR [eax+0xc]
   1b7b3:	xor    ecx,ecx
   1b7b5:	add    eax,0x9c40
   1b7ba:	push   ecx
   1b7bb:	pop    esi
   1b7bc:	adc    ecx,esi
   1b7be:	mov    edx,DWORD PTR [ebp+0x8]
   1b7c1:	mov    edx,DWORD PTR [edx+0xc]
   1b7c4:	cmp    ecx,esi
   1b7c6:	ja     0x1b7e4
   1b7c8:	jb     0x1b7ce
   1b7ca:	cmp    eax,edx
   1b7cc:	jae    0x1b7e4
   1b7ce:	mov    ecx,ebx
   1b7d0:	call   0x1a556
   1b7d5:	mov    ecx,ebx
   1b7d7:	call   0x1aba4
   1b7dc:	mov    ebx,DWORD PTR ds:0x78a7c
   1b7e2:	jmp    0x1b799
   1b7e4:	push   DWORD PTR [ebp+0x8]
   1b7e7:	lea    eax,[ebp-0x24]
   1b7ea:	push   eax
   1b7eb:	call   0x1a75a
   1b7f0:	push   eax
   1b7f1:	lea    eax,[ebp-0x3c]
   1b7f4:	push   eax
   1b7f5:	call   0x1a7a6
   1b7fa:	push   DWORD PTR [ebp-0x24]
   1b7fd:	call   0x10a3a
   1b802:	pop    ecx
   1b803:	mov    ebx,DWORD PTR ds:0x78a7c
   1b809:	lea    esi,[ebx+0x14]
   1b80c:	lea    edi,[ebp-0x4c]
   1b80f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b810:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b811:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b812:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b813:	mov    esi,DWORD PTR [ebp-0x34]
   1b816:	cmp    esi,DWORD PTR [ebp-0x44]
   1b819:	je     0x1b84d
   1b81b:	mov    eax,DWORD PTR [esi]
   1b81d:	mov    BYTE PTR [eax+0x1c],0x0
   1b821:	mov    eax,DWORD PTR [esi]
   1b823:	cmp    BYTE PTR [eax+0x24],0x0
   1b827:	jne    0x1b837
   1b829:	mov    BYTE PTR [eax+0x24],0x1
   1b82d:	mov    eax,DWORD PTR [esi]
   1b82f:	push   DWORD PTR [eax+0x8]
   1b832:	call   0x1a4d0
   1b837:	mov    eax,DWORD PTR [esi]
   1b839:	mov    ecx,DWORD PTR [eax+0x8]
   1b83c:	mov    eax,DWORD PTR [ebp+0x8]
   1b83f:	mov    DWORD PTR [eax+0x8],ecx
   1b842:	mov    ecx,DWORD PTR [esi]
   1b844:	mov    ecx,DWORD PTR [ecx+0x20]
   1b847:	inc    ecx
   1b848:	mov    DWORD PTR [eax+0x20],ecx
   1b84b:	jmp    0x1b850
   1b84d:	mov    eax,DWORD PTR [ebp+0x8]
   1b850:	mov    cl,BYTE PTR [ebp-0x19]
   1b853:	mov    BYTE PTR [eax+0x1c],cl
   1b856:	lea    eax,[ebp+0x8]
   1b859:	push   eax
   1b85a:	mov    ecx,ebx
   1b85c:	call   0x1b262
   1b861:	inc    DWORD PTR ds:0x78a80
   1b867:	push   DWORD PTR [ebp-0x2c]
   1b86a:	call   0x10a3a
   1b86f:	pop    ecx
   1b870:	jmp    0x1b879
   1b872:	xor    eax,eax
   1b874:	inc    eax
   1b875:	ret    
   1b876:	mov    esp,DWORD PTR [ebp-0x18]
   1b879:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1b880:	push   0x0
   1b882:	push   0x78a54
   1b887:	call   DWORD PTR ds:0x1f028
   1b88d:	call   0x1dbcd
   1b892:	ret    0x4
   1b895:	int3   
   1b896:	int3   
   1b897:	int3   
   1b898:	int3   
   1b899:	int3   
   1b89a:	push   0x48
   1b89c:	push   0x773d0
   1b8a1:	call   0x1db88
   1b8a6:	xor    ebx,ebx
   1b8a8:	push   ebx
   1b8a9:	push   ebx
   1b8aa:	push   ebx
   1b8ab:	push   ebx
   1b8ac:	push   0x78a54
   1b8b1:	call   DWORD PTR ds:0x1f02c
   1b8b7:	cmp    eax,ebx
   1b8b9:	jl     0x1b967
   1b8bf:	mov    DWORD PTR [ebp-0x4],ebx
   1b8c2:	push   DWORD PTR ds:0x78a78
   1b8c8:	lea    ecx,[ebp-0x28]
   1b8cb:	call   0x1b2bc
   1b8d0:	mov    BYTE PTR [ebp-0x19],bl
   1b8d3:	cmp    DWORD PTR [ebp-0x20],ebx
   1b8d6:	je     0x1b8f6
   1b8d8:	mov    eax,DWORD PTR [ebp-0x24]
   1b8db:	mov    eax,DWORD PTR [eax]
   1b8dd:	mov    eax,DWORD PTR [eax+0x8]
   1b8e0:	cmp    eax,DWORD PTR ds:0x78a80
   1b8e6:	ja     0x1b8f6
   1b8e8:	mov    BYTE PTR [ebp-0x19],0x1
   1b8ec:	lea    ecx,[ebp-0x28]
   1b8ef:	call   0x1ac1a
   1b8f4:	jmp    0x1b8d3
   1b8f6:	cmp    BYTE PTR [ebp-0x19],bl
   1b8f9:	je     0x1b931
   1b8fb:	push   DWORD PTR ds:0x78a7c
   1b901:	lea    ecx,[ebp-0x58]
   1b904:	call   0x1b606
   1b909:	mov    esi,DWORD PTR [ebp+0x8]
   1b90c:	push   esi
   1b90d:	lea    eax,[ebp-0x58]
   1b910:	push   eax
   1b911:	call   0x1a844
   1b916:	cmp    DWORD PTR [esi],ebx
   1b918:	jne    0x1b929
   1b91a:	lea    eax,[ebp-0x28]
   1b91d:	push   eax
   1b91e:	mov    ecx,DWORD PTR ds:0x78a78
   1b924:	call   0x1b2fa
   1b929:	lea    ecx,[ebp-0x58]
   1b92c:	call   0x1b246
   1b931:	lea    ecx,[ebp-0x28]
   1b934:	call   0x1abe6
   1b939:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1b940:	jmp    0x1b95b
   1b942:	xor    eax,eax
   1b944:	inc    eax
   1b945:	ret    
   1b946:	mov    esp,DWORD PTR [ebp-0x18]
   1b949:	mov    eax,DWORD PTR [ebp+0x8]
   1b94c:	mov    DWORD PTR [eax],0x2
   1b952:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1b959:	xor    ebx,ebx
   1b95b:	push   ebx
   1b95c:	push   0x78a54
   1b961:	call   DWORD PTR ds:0x1f028
   1b967:	call   0x1dbcd
   1b96c:	ret    0x4
   1b96f:	int3   
   1b970:	int3   
   1b971:	int3   
   1b972:	int3   
   1b973:	int3   
   1b974:	mov    edi,edi
   1b976:	push   ebp
   1b977:	mov    ebp,esp
   1b979:	mov    ecx,DWORD PTR [ebp+0x8]
   1b97c:	xor    edx,edx
   1b97e:	cmp    ecx,edx
   1b980:	je     0x1b9d0
   1b982:	mov    eax,DWORD PTR [ecx+0x1c]
   1b985:	cmp    eax,edx
   1b987:	je     0x1b9d0
   1b989:	mov    DWORD PTR [eax+0x1c],edx
   1b98c:	mov    DWORD PTR [ecx+0x14],edx
   1b98f:	mov    DWORD PTR [ecx+0x8],edx
   1b992:	mov    DWORD PTR [ecx+0x18],edx
   1b995:	mov    DWORD PTR [ecx+0x30],0x1
   1b99c:	lea    ecx,[eax+0x530]
   1b9a2:	mov    DWORD PTR [eax],edx
   1b9a4:	mov    DWORD PTR [eax+0x4],edx
   1b9a7:	mov    DWORD PTR [eax+0xc],edx
   1b9aa:	mov    DWORD PTR [eax+0x14],0x8000
   1b9b1:	mov    DWORD PTR [eax+0x20],edx
   1b9b4:	mov    DWORD PTR [eax+0x28],edx
   1b9b7:	mov    DWORD PTR [eax+0x2c],edx
   1b9ba:	mov    DWORD PTR [eax+0x30],edx
   1b9bd:	mov    DWORD PTR [eax+0x38],edx
   1b9c0:	mov    DWORD PTR [eax+0x3c],edx
   1b9c3:	mov    DWORD PTR [eax+0x6c],ecx
   1b9c6:	mov    DWORD PTR [eax+0x50],ecx
   1b9c9:	mov    DWORD PTR [eax+0x4c],ecx
   1b9cc:	xor    eax,eax
   1b9ce:	jmp    0x1b9d3
   1b9d0:	push   0xfffffffe
   1b9d2:	pop    eax
   1b9d3:	pop    ebp
   1b9d4:	ret    0x4
   1b9d7:	int3   
   1b9d8:	int3   
   1b9d9:	int3   
   1b9da:	int3   
   1b9db:	int3   
   1b9dc:	mov    edi,edi
   1b9de:	push   ebp
   1b9df:	mov    ebp,esp
   1b9e1:	mov    eax,DWORD PTR [ebp+0x10]
   1b9e4:	push   esi
   1b9e5:	push   edi
   1b9e6:	xor    edi,edi
   1b9e8:	cmp    eax,edi
   1b9ea:	je     0x1ba85
   1b9f0:	cmp    BYTE PTR [eax],0x31
   1b9f3:	jne    0x1ba85
   1b9f9:	cmp    DWORD PTR [ebp+0x14],0x38
   1b9fd:	jne    0x1ba85
   1ba03:	mov    esi,DWORD PTR [ebp+0x8]
   1ba06:	cmp    esi,edi
   1ba08:	jne    0x1ba0e
   1ba0a:	push   0xfffffffe
   1ba0c:	jmp    0x1ba87
   1ba0e:	mov    DWORD PTR [esi+0x18],edi
   1ba11:	cmp    DWORD PTR [esi+0x20],edi
   1ba14:	jne    0x1ba20
   1ba16:	mov    DWORD PTR [esi+0x20],0x1cdd4
   1ba1d:	mov    DWORD PTR [esi+0x28],edi
   1ba20:	cmp    DWORD PTR [esi+0x24],edi
   1ba23:	jne    0x1ba2c
   1ba25:	mov    DWORD PTR [esi+0x24],0x1cdf0
   1ba2c:	push   0x2530
   1ba31:	push   0x1
   1ba33:	push   DWORD PTR [esi+0x28]
   1ba36:	call   DWORD PTR [esi+0x20]
   1ba39:	cmp    eax,edi
   1ba3b:	jne    0x1ba41
   1ba3d:	push   0xfffffffc
   1ba3f:	jmp    0x1ba87
   1ba41:	mov    ecx,DWORD PTR [ebp+0xc]
   1ba44:	cmp    ecx,edi
   1ba46:	mov    DWORD PTR [esi+0x1c],eax
   1ba49:	jge    0x1ba52
   1ba4b:	mov    DWORD PTR [eax+0x8],edi
   1ba4e:	neg    ecx
   1ba50:	jmp    0x1ba63
   1ba52:	mov    edx,ecx
   1ba54:	sar    edx,0x4
   1ba57:	inc    edx
   1ba58:	cmp    ecx,0x30
   1ba5b:	mov    DWORD PTR [eax+0x8],edx
   1ba5e:	jge    0x1ba63
   1ba60:	and    ecx,0xf
   1ba63:	lea    edx,[ecx-0x8]
   1ba66:	cmp    edx,0x7
   1ba69:	ja     0x1ba79
   1ba6b:	push   esi
   1ba6c:	mov    DWORD PTR [eax+0x24],ecx
   1ba6f:	mov    DWORD PTR [eax+0x34],edi
   1ba72:	call   0x1b974
   1ba77:	jmp    0x1ba88
   1ba79:	push   eax
   1ba7a:	push   DWORD PTR [esi+0x28]
   1ba7d:	call   DWORD PTR [esi+0x24]
   1ba80:	mov    DWORD PTR [esi+0x1c],edi
   1ba83:	jmp    0x1ba0a
   1ba85:	push   0xfffffffa
   1ba87:	pop    eax
   1ba88:	pop    edi
   1ba89:	pop    esi
   1ba8a:	pop    ebp
   1ba8b:	ret    0x10
   1ba8e:	int3   
   1ba8f:	int3   
   1ba90:	int3   
   1ba91:	int3   
   1ba92:	int3   
   1ba93:	int3   
   1ba94:	mov    edi,edi
   1ba96:	push   ebp
   1ba97:	mov    ebp,esp
   1ba99:	push   ecx
   1ba9a:	push   ebx
   1ba9b:	push   esi
   1ba9c:	mov    esi,DWORD PTR [edi+0x1c]
   1ba9f:	cmp    DWORD PTR [esi+0x34],0x0
   1baa3:	mov    ebx,eax
   1baa5:	jne    0x1bac5
   1baa7:	mov    ecx,DWORD PTR [esi+0x24]
   1baaa:	xor    eax,eax
   1baac:	inc    eax
   1baad:	shl    eax,cl
   1baaf:	push   0x1
   1bab1:	push   eax
   1bab2:	push   DWORD PTR [edi+0x28]
   1bab5:	call   DWORD PTR [edi+0x20]
   1bab8:	mov    DWORD PTR [esi+0x34],eax
   1babb:	test   eax,eax
   1babd:	jne    0x1bac5
   1babf:	inc    eax
   1bac0:	jmp    0x1bb67
   1bac5:	xor    eax,eax
   1bac7:	cmp    DWORD PTR [esi+0x28],eax
   1baca:	jne    0x1badd
   1bacc:	mov    ecx,DWORD PTR [esi+0x24]
   1bacf:	xor    edx,edx
   1bad1:	inc    edx
   1bad2:	shl    edx,cl
   1bad4:	mov    DWORD PTR [esi+0x30],eax
   1bad7:	mov    DWORD PTR [esi+0x2c],eax
   1bada:	mov    DWORD PTR [esi+0x28],edx
   1badd:	sub    ebx,DWORD PTR [edi+0x10]
   1bae0:	mov    eax,DWORD PTR [esi+0x28]
   1bae3:	cmp    ebx,eax
   1bae5:	jb     0x1baff
   1bae7:	mov    ecx,DWORD PTR [edi+0xc]
   1baea:	push   eax
   1baeb:	sub    ecx,eax
   1baed:	push   ecx
   1baee:	push   DWORD PTR [esi+0x34]
   1baf1:	call   0x1db58
   1baf6:	add    esp,0xc
   1baf9:	and    DWORD PTR [esi+0x30],0x0
   1bafd:	jmp    0x1bb40
   1baff:	sub    eax,DWORD PTR [esi+0x30]
   1bb02:	mov    DWORD PTR [ebp-0x4],eax
   1bb05:	cmp    eax,ebx
   1bb07:	jbe    0x1bb0c
   1bb09:	mov    DWORD PTR [ebp-0x4],ebx
   1bb0c:	mov    eax,DWORD PTR [edi+0xc]
   1bb0f:	push   DWORD PTR [ebp-0x4]
   1bb12:	sub    eax,ebx
   1bb14:	push   eax
   1bb15:	mov    eax,DWORD PTR [esi+0x34]
   1bb18:	add    eax,DWORD PTR [esi+0x30]
   1bb1b:	push   eax
   1bb1c:	call   0x1db58
   1bb21:	mov    eax,DWORD PTR [ebp-0x4]
   1bb24:	add    esp,0xc
   1bb27:	sub    ebx,eax
   1bb29:	je     0x1bb48
   1bb2b:	mov    eax,DWORD PTR [edi+0xc]
   1bb2e:	push   ebx
   1bb2f:	sub    eax,ebx
   1bb31:	push   eax
   1bb32:	push   DWORD PTR [esi+0x34]
   1bb35:	call   0x1db58
   1bb3a:	add    esp,0xc
   1bb3d:	mov    DWORD PTR [esi+0x30],ebx
   1bb40:	mov    eax,DWORD PTR [esi+0x28]
   1bb43:	mov    DWORD PTR [esi+0x2c],eax
   1bb46:	jmp    0x1bb65
   1bb48:	add    DWORD PTR [esi+0x30],eax
   1bb4b:	mov    ecx,DWORD PTR [esi+0x30]
   1bb4e:	mov    edx,DWORD PTR [esi+0x28]
   1bb51:	cmp    ecx,edx
   1bb53:	jne    0x1bb59
   1bb55:	and    DWORD PTR [esi+0x30],0x0
   1bb59:	mov    ecx,DWORD PTR [esi+0x2c]
   1bb5c:	cmp    ecx,edx
   1bb5e:	jae    0x1bb65
   1bb60:	add    ecx,eax
   1bb62:	mov    DWORD PTR [esi+0x2c],ecx
   1bb65:	xor    eax,eax
   1bb67:	pop    esi
   1bb68:	pop    ebx
   1bb69:	leave  
   1bb6a:	ret    
   1bb6b:	int3   
   1bb6c:	int3   
   1bb6d:	int3   
   1bb6e:	int3   
   1bb6f:	int3   
   1bb70:	mov    edi,edi
   1bb72:	push   ebp
   1bb73:	mov    ebp,esp
   1bb75:	mov    edx,DWORD PTR [ebp+0x8]
   1bb78:	sub    esp,0x2c
   1bb7b:	push   ebx
   1bb7c:	xor    eax,eax
   1bb7e:	push   esi
   1bb7f:	push   edi
   1bb80:	cmp    edx,eax
   1bb82:	je     0x1bbd2
   1bb84:	mov    esi,DWORD PTR [edx+0x1c]
   1bb87:	cmp    esi,eax
   1bb89:	je     0x1bbd2
   1bb8b:	cmp    DWORD PTR [edx+0xc],eax
   1bb8e:	je     0x1bbd2
   1bb90:	cmp    DWORD PTR [edx],eax
   1bb92:	jne    0x1bb99
   1bb94:	cmp    DWORD PTR [edx+0x4],eax
   1bb97:	jne    0x1bbd2
   1bb99:	cmp    DWORD PTR [esi],0xb
   1bb9c:	jne    0x1bba4
   1bb9e:	mov    DWORD PTR [esi],0xc
   1bba4:	mov    eax,DWORD PTR [edx+0xc]
   1bba7:	mov    ecx,DWORD PTR [edx+0x10]
   1bbaa:	and    DWORD PTR [ebp-0x24],0x0
   1bbae:	mov    ebx,DWORD PTR [esi+0x38]
   1bbb1:	mov    edi,DWORD PTR [esi+0x3c]
   1bbb4:	mov    DWORD PTR [ebp-0x18],eax
   1bbb7:	mov    eax,DWORD PTR [edx]
   1bbb9:	mov    DWORD PTR [ebp-0x4],eax
   1bbbc:	mov    eax,DWORD PTR [edx+0x4]
   1bbbf:	mov    DWORD PTR [ebp-0x8],eax
   1bbc2:	mov    DWORD PTR [ebp-0x2c],eax
   1bbc5:	mov    eax,DWORD PTR [esi]
   1bbc7:	mov    DWORD PTR [ebp-0x10],ecx
   1bbca:	mov    DWORD PTR [ebp-0x1c],ecx
   1bbcd:	cmp    eax,0x1c
   1bbd0:	jbe    0x1bbdf
   1bbd2:	push   0xfffffffe
   1bbd4:	pop    eax
   1bbd5:	pop    edi
   1bbd6:	pop    esi
   1bbd7:	pop    ebx
   1bbd8:	leave  
   1bbd9:	ret    0x8
   1bbdc:	mov    edx,DWORD PTR [ebp+0x8]
   1bbdf:	jmp    DWORD PTR [eax*4+0x1cd14]
   1bbe6:	mov    eax,DWORD PTR [esi+0x8]
   1bbe9:	test   eax,eax
   1bbeb:	jne    0x1bc17
   1bbed:	mov    DWORD PTR [esi],0xc
   1bbf3:	jmp    0x1cbe5
   1bbf8:	cmp    DWORD PTR [ebp-0x8],0x0
   1bbfc:	je     0x1cc33
   1bc02:	mov    ecx,DWORD PTR [ebp-0x4]
   1bc05:	movzx  edx,BYTE PTR [ecx]
   1bc08:	dec    DWORD PTR [ebp-0x8]
   1bc0b:	mov    ecx,edi
   1bc0d:	shl    edx,cl
   1bc0f:	add    ebx,edx
   1bc11:	inc    DWORD PTR [ebp-0x4]
   1bc14:	add    edi,0x8
   1bc17:	cmp    edi,0x10
   1bc1a:	jb     0x1bbf8
   1bc1c:	test   al,0x2
   1bc1e:	je     0x1bc5b
   1bc20:	cmp    ebx,0x8b1f
   1bc26:	jne    0x1bc5b
   1bc28:	xor    edi,edi
   1bc2a:	push   edi
   1bc2b:	push   edi
   1bc2c:	push   edi
   1bc2d:	call   0x1da96
   1bc32:	mov    DWORD PTR [esi+0x18],eax
   1bc35:	push   0x2
   1bc37:	lea    eax,[ebp-0x14]
   1bc3a:	push   eax
   1bc3b:	mov    BYTE PTR [ebp-0x14],0x1f
   1bc3f:	mov    BYTE PTR [ebp-0x13],0x8b
   1bc43:	push   DWORD PTR [esi+0x18]
   1bc46:	call   0x1da96
   1bc4b:	mov    DWORD PTR [esi+0x18],eax
   1bc4e:	xor    ebx,ebx
   1bc50:	mov    DWORD PTR [esi],0x1
   1bc56:	jmp    0x1cbe5
   1bc5b:	mov    eax,DWORD PTR [esi+0x20]
   1bc5e:	and    DWORD PTR [esi+0x10],0x0
   1bc62:	test   eax,eax
   1bc64:	je     0x1bc6a
   1bc66:	or     DWORD PTR [eax+0x30],0xffffffff
   1bc6a:	test   BYTE PTR [esi+0x8],0x1
   1bc6e:	je     0x1bcf4
   1bc74:	movzx  eax,bl
   1bc77:	shl    eax,0x8
   1bc7a:	mov    ecx,ebx
   1bc7c:	shr    ecx,0x8
   1bc7f:	add    eax,ecx
   1bc81:	push   0x1f
   1bc83:	xor    edx,edx
   1bc85:	pop    ecx
   1bc86:	div    ecx
   1bc88:	test   edx,edx
   1bc8a:	jne    0x1bcf4
   1bc8c:	mov    eax,ebx
   1bc8e:	and    al,0xf
   1bc90:	cmp    al,0x8
   1bc92:	je     0x1bca3
   1bc94:	mov    eax,DWORD PTR [ebp+0x8]
   1bc97:	mov    DWORD PTR [eax+0x18],0x1ef20
   1bc9e:	jmp    0x1cbdf
   1bca3:	shr    ebx,0x4
   1bca6:	mov    ecx,ebx
   1bca8:	and    ecx,0xf
   1bcab:	add    ecx,0x8
   1bcae:	sub    edi,0x4
   1bcb1:	cmp    ecx,DWORD PTR [esi+0x24]
   1bcb4:	jbe    0x1bcc5
   1bcb6:	mov    eax,DWORD PTR [ebp+0x8]
   1bcb9:	mov    DWORD PTR [eax+0x18],0x1ef0c
   1bcc0:	jmp    0x1cbdf
   1bcc5:	xor    eax,eax
   1bcc7:	xor    edi,edi
   1bcc9:	inc    eax
   1bcca:	push   edi
   1bccb:	shl    eax,cl
   1bccd:	push   edi
   1bcce:	push   edi
   1bccf:	mov    DWORD PTR [esi+0x14],eax
   1bcd2:	call   0x1d5f4
   1bcd7:	mov    ecx,DWORD PTR [ebp+0x8]
   1bcda:	shr    ebx,0x8
   1bcdd:	not    ebx
   1bcdf:	and    ebx,0x2
   1bce2:	or     ebx,0x9
   1bce5:	mov    DWORD PTR [esi+0x18],eax
   1bce8:	mov    DWORD PTR [ecx+0x30],eax
   1bceb:	mov    DWORD PTR [esi],ebx
   1bced:	xor    ebx,ebx
   1bcef:	jmp    0x1cbe5
   1bcf4:	mov    eax,DWORD PTR [ebp+0x8]
   1bcf7:	mov    DWORD PTR [eax+0x18],0x1eef4
   1bcfe:	jmp    0x1cbdf
   1bd03:	cmp    edi,0x10
   1bd06:	jae    0x1bd2f
   1bd08:	cmp    DWORD PTR [ebp-0x8],0x0
   1bd0c:	je     0x1cc33
   1bd12:	mov    eax,DWORD PTR [ebp-0x4]
   1bd15:	movzx  eax,BYTE PTR [eax]
   1bd18:	dec    DWORD PTR [ebp-0x8]
   1bd1b:	mov    ecx,edi
   1bd1d:	shl    eax,cl
   1bd1f:	add    edi,0x8
   1bd22:	add    ebx,eax
   1bd24:	inc    DWORD PTR [ebp-0x4]
   1bd27:	cmp    edi,0x10
   1bd2a:	jb     0x1bd08
   1bd2c:	mov    edx,DWORD PTR [ebp+0x8]
   1bd2f:	mov    DWORD PTR [esi+0x10],ebx
   1bd32:	cmp    bl,0x8
   1bd35:	je     0x1bd43
   1bd37:	mov    DWORD PTR [edx+0x18],0x1ef20
   1bd3e:	jmp    0x1cbdf
   1bd43:	test   ebx,0xe000
   1bd49:	je     0x1bd57
   1bd4b:	mov    DWORD PTR [edx+0x18],0x1eeda
   1bd52:	jmp    0x1cbdf
   1bd57:	mov    eax,DWORD PTR [esi+0x20]
   1bd5a:	test   eax,eax
   1bd5c:	je     0x1bd68
   1bd5e:	mov    ecx,ebx
   1bd60:	shr    ecx,0x8
   1bd63:	and    ecx,0x1
   1bd66:	mov    DWORD PTR [eax],ecx
   1bd68:	test   DWORD PTR [esi+0x10],0x200
   1bd6f:	je     0x1bd8e
   1bd71:	mov    BYTE PTR [ebp-0x14],bl
   1bd74:	push   0x2
   1bd76:	lea    eax,[ebp-0x14]
   1bd79:	shr    ebx,0x8
   1bd7c:	push   eax
   1bd7d:	mov    BYTE PTR [ebp-0x13],bl
   1bd80:	push   DWORD PTR [esi+0x18]
   1bd83:	call   0x1da96
   1bd88:	mov    edx,DWORD PTR [ebp+0x8]
   1bd8b:	mov    DWORD PTR [esi+0x18],eax
   1bd8e:	xor    ebx,ebx
   1bd90:	xor    edi,edi
   1bd92:	mov    DWORD PTR [esi],0x2
   1bd98:	cmp    edi,0x20
   1bd9b:	jae    0x1bdc4
   1bd9d:	cmp    DWORD PTR [ebp-0x8],0x0
   1bda1:	je     0x1cc33
   1bda7:	mov    eax,DWORD PTR [ebp-0x4]
   1bdaa:	movzx  eax,BYTE PTR [eax]
   1bdad:	dec    DWORD PTR [ebp-0x8]
   1bdb0:	mov    ecx,edi
   1bdb2:	shl    eax,cl
   1bdb4:	add    edi,0x8
   1bdb7:	add    ebx,eax
   1bdb9:	inc    DWORD PTR [ebp-0x4]
   1bdbc:	cmp    edi,0x20
   1bdbf:	jb     0x1bd9d
   1bdc1:	mov    edx,DWORD PTR [ebp+0x8]
   1bdc4:	mov    eax,DWORD PTR [esi+0x20]
   1bdc7:	test   eax,eax
   1bdc9:	je     0x1bdce
   1bdcb:	mov    DWORD PTR [eax+0x4],ebx
   1bdce:	test   DWORD PTR [esi+0x10],0x200
   1bdd5:	je     0x1be04
   1bdd7:	mov    eax,ebx
   1bdd9:	shr    eax,0x8
   1bddc:	mov    BYTE PTR [ebp-0x13],al
   1bddf:	mov    eax,ebx
   1bde1:	shr    eax,0x10
   1bde4:	mov    BYTE PTR [ebp-0x12],al
   1bde7:	mov    BYTE PTR [ebp-0x14],bl
   1bdea:	push   0x4
   1bdec:	lea    eax,[ebp-0x14]
   1bdef:	shr    ebx,0x18
   1bdf2:	push   eax
   1bdf3:	mov    BYTE PTR [ebp-0x11],bl
   1bdf6:	push   DWORD PTR [esi+0x18]
   1bdf9:	call   0x1da96
   1bdfe:	mov    edx,DWORD PTR [ebp+0x8]
   1be01:	mov    DWORD PTR [esi+0x18],eax
   1be04:	xor    ebx,ebx
   1be06:	xor    edi,edi
   1be08:	mov    DWORD PTR [esi],0x3
   1be0e:	cmp    edi,0x10
   1be11:	jae    0x1be3a
   1be13:	cmp    DWORD PTR [ebp-0x8],0x0
   1be17:	je     0x1cc33
   1be1d:	mov    eax,DWORD PTR [ebp-0x4]
   1be20:	movzx  eax,BYTE PTR [eax]
   1be23:	dec    DWORD PTR [ebp-0x8]
   1be26:	mov    ecx,edi
   1be28:	shl    eax,cl
   1be2a:	add    edi,0x8
   1be2d:	add    ebx,eax
   1be2f:	inc    DWORD PTR [ebp-0x4]
   1be32:	cmp    edi,0x10
   1be35:	jb     0x1be13
   1be37:	mov    edx,DWORD PTR [ebp+0x8]
   1be3a:	mov    eax,DWORD PTR [esi+0x20]
   1be3d:	test   eax,eax
   1be3f:	je     0x1be57
   1be41:	mov    ecx,ebx
   1be43:	and    ecx,0xff
   1be49:	mov    DWORD PTR [eax+0x8],ecx
   1be4c:	mov    ecx,DWORD PTR [esi+0x20]
   1be4f:	mov    eax,ebx
   1be51:	shr    eax,0x8
   1be54:	mov    DWORD PTR [ecx+0xc],eax
   1be57:	test   DWORD PTR [esi+0x10],0x200
   1be5e:	je     0x1be7d
   1be60:	mov    BYTE PTR [ebp-0x14],bl
   1be63:	push   0x2
   1be65:	lea    eax,[ebp-0x14]
   1be68:	shr    ebx,0x8
   1be6b:	push   eax
   1be6c:	mov    BYTE PTR [ebp-0x13],bl
   1be6f:	push   DWORD PTR [esi+0x18]
   1be72:	call   0x1da96
   1be77:	mov    edx,DWORD PTR [ebp+0x8]
   1be7a:	mov    DWORD PTR [esi+0x18],eax
   1be7d:	xor    ebx,ebx
   1be7f:	xor    edi,edi
   1be81:	mov    DWORD PTR [esi],0x4
   1be87:	test   DWORD PTR [esi+0x10],0x400
   1be8e:	je     0x1bef5
   1be90:	cmp    edi,0x10
   1be93:	jae    0x1bebc
   1be95:	cmp    DWORD PTR [ebp-0x8],0x0
   1be99:	je     0x1cc33
   1be9f:	mov    eax,DWORD PTR [ebp-0x4]
   1bea2:	movzx  eax,BYTE PTR [eax]
   1bea5:	dec    DWORD PTR [ebp-0x8]
   1bea8:	mov    ecx,edi
   1beaa:	shl    eax,cl
   1beac:	add    edi,0x8
   1beaf:	add    ebx,eax
   1beb1:	inc    DWORD PTR [ebp-0x4]
   1beb4:	cmp    edi,0x10
   1beb7:	jb     0x1be95
   1beb9:	mov    edx,DWORD PTR [ebp+0x8]
   1bebc:	mov    eax,DWORD PTR [esi+0x20]
   1bebf:	mov    DWORD PTR [esi+0x40],ebx
   1bec2:	test   eax,eax
   1bec4:	je     0x1bec9
   1bec6:	mov    DWORD PTR [eax+0x14],ebx
   1bec9:	test   DWORD PTR [esi+0x10],0x200
   1bed0:	je     0x1beef
   1bed2:	mov    BYTE PTR [ebp-0x14],bl
   1bed5:	push   0x2
   1bed7:	lea    eax,[ebp-0x14]
   1beda:	shr    ebx,0x8
   1bedd:	push   eax
   1bede:	mov    BYTE PTR [ebp-0x13],bl
   1bee1:	push   DWORD PTR [esi+0x18]
   1bee4:	call   0x1da96
   1bee9:	mov    edx,DWORD PTR [ebp+0x8]
   1beec:	mov    DWORD PTR [esi+0x18],eax
   1beef:	xor    ebx,ebx
   1bef1:	xor    edi,edi
   1bef3:	jmp    0x1bf00
   1bef5:	mov    eax,DWORD PTR [esi+0x20]
   1bef8:	test   eax,eax
   1befa:	je     0x1bf00
   1befc:	and    DWORD PTR [eax+0x10],0x0
   1bf00:	mov    DWORD PTR [esi],0x5
   1bf06:	test   DWORD PTR [esi+0x10],0x400
   1bf0d:	je     0x1bf97
   1bf13:	mov    edx,DWORD PTR [esi+0x40]
   1bf16:	mov    eax,DWORD PTR [ebp-0x8]
   1bf19:	mov    DWORD PTR [ebp-0xc],edx
   1bf1c:	cmp    edx,eax
   1bf1e:	jbe    0x1bf23
   1bf20:	mov    DWORD PTR [ebp-0xc],eax
   1bf23:	cmp    DWORD PTR [ebp-0xc],0x0
   1bf27:	je     0x1bf8a
   1bf29:	mov    ecx,DWORD PTR [esi+0x20]
   1bf2c:	test   ecx,ecx
   1bf2e:	je     0x1bf64
   1bf30:	mov    eax,DWORD PTR [ecx+0x10]
   1bf33:	mov    DWORD PTR [ebp-0x28],eax
   1bf36:	test   eax,eax
   1bf38:	je     0x1bf64
   1bf3a:	mov    eax,DWORD PTR [ecx+0x14]
   1bf3d:	mov    ecx,DWORD PTR [ecx+0x18]
   1bf40:	sub    eax,edx
   1bf42:	mov    edx,DWORD PTR [ebp-0xc]
   1bf45:	add    edx,eax
   1bf47:	cmp    edx,ecx
   1bf49:	jbe    0x1bf4f
   1bf4b:	sub    ecx,eax
   1bf4d:	jmp    0x1bf52
   1bf4f:	mov    ecx,DWORD PTR [ebp-0xc]
   1bf52:	push   ecx
   1bf53:	mov    ecx,DWORD PTR [ebp-0x28]
   1bf56:	push   DWORD PTR [ebp-0x4]
   1bf59:	add    ecx,eax
   1bf5b:	push   ecx
   1bf5c:	call   0x1db58
   1bf61:	add    esp,0xc
   1bf64:	test   DWORD PTR [esi+0x10],0x200
   1bf6b:	je     0x1bf7e
   1bf6d:	push   DWORD PTR [ebp-0xc]
   1bf70:	push   DWORD PTR [ebp-0x4]
   1bf73:	push   DWORD PTR [esi+0x18]
   1bf76:	call   0x1da96
   1bf7b:	mov    DWORD PTR [esi+0x18],eax
   1bf7e:	mov    eax,DWORD PTR [ebp-0xc]
   1bf81:	sub    DWORD PTR [ebp-0x8],eax
   1bf84:	add    DWORD PTR [ebp-0x4],eax
   1bf87:	sub    DWORD PTR [esi+0x40],eax
   1bf8a:	cmp    DWORD PTR [esi+0x40],0x0
   1bf8e:	jne    0x1cc33
   1bf94:	mov    edx,DWORD PTR [ebp+0x8]
   1bf97:	and    DWORD PTR [esi+0x40],0x0
   1bf9b:	mov    DWORD PTR [esi],0x6
   1bfa1:	test   DWORD PTR [esi+0x10],0x800
   1bfa8:	je     0x1c025
   1bfaa:	cmp    DWORD PTR [ebp-0x8],0x0
   1bfae:	je     0x1cc33
   1bfb4:	xor    ecx,ecx
   1bfb6:	mov    eax,DWORD PTR [ebp-0x4]
   1bfb9:	movzx  eax,BYTE PTR [ecx+eax*1]
   1bfbd:	inc    ecx
   1bfbe:	mov    DWORD PTR [ebp-0xc],ecx
   1bfc1:	mov    ecx,DWORD PTR [esi+0x20]
   1bfc4:	mov    DWORD PTR [ebp-0x20],eax
   1bfc7:	test   ecx,ecx
   1bfc9:	je     0x1bfe6
   1bfcb:	mov    edx,DWORD PTR [ecx+0x1c]
   1bfce:	mov    DWORD PTR [ebp-0x28],edx
   1bfd1:	test   edx,edx
   1bfd3:	je     0x1bfe6
   1bfd5:	mov    edx,DWORD PTR [esi+0x40]
   1bfd8:	cmp    edx,DWORD PTR [ecx+0x20]
   1bfdb:	jae    0x1bfe6
   1bfdd:	mov    ecx,DWORD PTR [ebp-0x28]
   1bfe0:	mov    BYTE PTR [ecx+edx*1],al
   1bfe3:	inc    DWORD PTR [esi+0x40]
   1bfe6:	test   eax,eax
   1bfe8:	je     0x1bff2
   1bfea:	mov    ecx,DWORD PTR [ebp-0xc]
   1bfed:	cmp    ecx,DWORD PTR [ebp-0x8]
   1bff0:	jb     0x1bfb6
   1bff2:	test   DWORD PTR [esi+0x10],0x200
   1bff9:	je     0x1c00f
   1bffb:	push   DWORD PTR [ebp-0xc]
   1bffe:	push   DWORD PTR [ebp-0x4]
   1c001:	push   DWORD PTR [esi+0x18]
   1c004:	call   0x1da96
   1c009:	mov    DWORD PTR [esi+0x18],eax
   1c00c:	mov    eax,DWORD PTR [ebp-0x20]
   1c00f:	mov    ecx,DWORD PTR [ebp-0xc]
   1c012:	sub    DWORD PTR [ebp-0x8],ecx
   1c015:	add    DWORD PTR [ebp-0x4],ecx
   1c018:	test   eax,eax
   1c01a:	jne    0x1cc33
   1c020:	mov    edx,DWORD PTR [ebp+0x8]
   1c023:	jmp    0x1c030
   1c025:	mov    eax,DWORD PTR [esi+0x20]
   1c028:	test   eax,eax
   1c02a:	je     0x1c030
   1c02c:	and    DWORD PTR [eax+0x1c],0x0
   1c030:	and    DWORD PTR [esi+0x40],0x0
   1c034:	mov    DWORD PTR [esi],0x7
   1c03a:	test   DWORD PTR [esi+0x10],0x1000
   1c041:	je     0x1c0be
   1c043:	cmp    DWORD PTR [ebp-0x8],0x0
   1c047:	je     0x1cc33
   1c04d:	xor    ecx,ecx
   1c04f:	mov    eax,DWORD PTR [ebp-0x4]
   1c052:	movzx  eax,BYTE PTR [ecx+eax*1]
   1c056:	inc    ecx
   1c057:	mov    DWORD PTR [ebp-0xc],ecx
   1c05a:	mov    ecx,DWORD PTR [esi+0x20]
   1c05d:	mov    DWORD PTR [ebp-0x20],eax
   1c060:	test   ecx,ecx
   1c062:	je     0x1c07f
   1c064:	mov    edx,DWORD PTR [ecx+0x24]
   1c067:	mov    DWORD PTR [ebp-0x28],edx
   1c06a:	test   edx,edx
   1c06c:	je     0x1c07f
   1c06e:	mov    edx,DWORD PTR [esi+0x40]
   1c071:	cmp    edx,DWORD PTR [ecx+0x28]
   1c074:	jae    0x1c07f
   1c076:	mov    ecx,DWORD PTR [ebp-0x28]
   1c079:	mov    BYTE PTR [ecx+edx*1],al
   1c07c:	inc    DWORD PTR [esi+0x40]
   1c07f:	test   eax,eax
   1c081:	je     0x1c08b
   1c083:	mov    ecx,DWORD PTR [ebp-0xc]
   1c086:	cmp    ecx,DWORD PTR [ebp-0x8]
   1c089:	jb     0x1c04f
   1c08b:	test   DWORD PTR [esi+0x10],0x200
   1c092:	je     0x1c0a8
   1c094:	push   DWORD PTR [ebp-0xc]
   1c097:	push   DWORD PTR [ebp-0x4]
   1c09a:	push   DWORD PTR [esi+0x18]
   1c09d:	call   0x1da96
   1c0a2:	mov    DWORD PTR [esi+0x18],eax
   1c0a5:	mov    eax,DWORD PTR [ebp-0x20]
   1c0a8:	mov    ecx,DWORD PTR [ebp-0xc]
   1c0ab:	sub    DWORD PTR [ebp-0x8],ecx
   1c0ae:	add    DWORD PTR [ebp-0x4],ecx
   1c0b1:	test   eax,eax
   1c0b3:	jne    0x1cc33
   1c0b9:	mov    edx,DWORD PTR [ebp+0x8]
   1c0bc:	jmp    0x1c0c9
   1c0be:	mov    eax,DWORD PTR [esi+0x20]
   1c0c1:	test   eax,eax
   1c0c3:	je     0x1c0c9
   1c0c5:	and    DWORD PTR [eax+0x24],0x0
   1c0c9:	mov    DWORD PTR [esi],0x8
   1c0cf:	test   DWORD PTR [esi+0x10],0x200
   1c0d6:	je     0x1c11c
   1c0d8:	cmp    edi,0x10
   1c0db:	jae    0x1c104
   1c0dd:	cmp    DWORD PTR [ebp-0x8],0x0
   1c0e1:	je     0x1cc33
   1c0e7:	mov    eax,DWORD PTR [ebp-0x4]
   1c0ea:	movzx  eax,BYTE PTR [eax]
   1c0ed:	dec    DWORD PTR [ebp-0x8]
   1c0f0:	mov    ecx,edi
   1c0f2:	shl    eax,cl
   1c0f4:	add    edi,0x8
   1c0f7:	add    ebx,eax
   1c0f9:	inc    DWORD PTR [ebp-0x4]
   1c0fc:	cmp    edi,0x10
   1c0ff:	jb     0x1c0dd
   1c101:	mov    edx,DWORD PTR [ebp+0x8]
   1c104:	movzx  eax,WORD PTR [esi+0x18]
   1c108:	cmp    ebx,eax
   1c10a:	je     0x1c118
   1c10c:	mov    DWORD PTR [edx+0x18],0x1eec6
   1c113:	jmp    0x1cbdf
   1c118:	xor    ebx,ebx
   1c11a:	xor    edi,edi
   1c11c:	mov    eax,DWORD PTR [esi+0x20]
   1c11f:	test   eax,eax
   1c121:	je     0x1c137
   1c123:	mov    edx,DWORD PTR [esi+0x10]
   1c126:	xor    ecx,ecx
   1c128:	inc    ecx
   1c129:	sar    edx,0x9
   1c12c:	and    edx,ecx
   1c12e:	mov    DWORD PTR [eax+0x2c],edx
   1c131:	mov    eax,DWORD PTR [esi+0x20]
   1c134:	mov    DWORD PTR [eax+0x30],ecx
   1c137:	xor    eax,eax
   1c139:	push   eax
   1c13a:	push   eax
   1c13b:	push   eax
   1c13c:	call   0x1da96
   1c141:	mov    ecx,DWORD PTR [ebp+0x8]
   1c144:	mov    DWORD PTR [esi+0x18],eax
   1c147:	mov    DWORD PTR [ecx+0x30],eax
   1c14a:	jmp    0x1c848
   1c14f:	cmp    edi,0x20
   1c152:	jae    0x1c17b
   1c154:	cmp    DWORD PTR [ebp-0x8],0x0
   1c158:	je     0x1cc33
   1c15e:	mov    eax,DWORD PTR [ebp-0x4]
   1c161:	movzx  eax,BYTE PTR [eax]
   1c164:	dec    DWORD PTR [ebp-0x8]
   1c167:	mov    ecx,edi
   1c169:	shl    eax,cl
   1c16b:	add    edi,0x8
   1c16e:	add    ebx,eax
   1c170:	inc    DWORD PTR [ebp-0x4]
   1c173:	cmp    edi,0x20
   1c176:	jb     0x1c154
   1c178:	mov    edx,DWORD PTR [ebp+0x8]
   1c17b:	mov    ecx,ebx
   1c17d:	mov    eax,0xff00
   1c182:	and    ecx,eax
   1c184:	mov    edi,ebx
   1c186:	shl    edi,0x10
   1c189:	add    ecx,edi
   1c18b:	mov    edi,ebx
   1c18d:	shr    edi,0x8
   1c190:	and    edi,eax
   1c192:	shl    ecx,0x8
   1c195:	shr    ebx,0x18
   1c198:	add    ecx,edi
   1c19a:	lea    eax,[ecx+ebx*1]
   1c19d:	mov    DWORD PTR [esi+0x18],eax
   1c1a0:	mov    DWORD PTR [edx+0x30],eax
   1c1a3:	xor    ebx,ebx
   1c1a5:	xor    edi,edi
   1c1a7:	mov    DWORD PTR [esi],0xa
   1c1ad:	cmp    DWORD PTR [esi+0xc],0x0
   1c1b1:	je     0x1cbf5
   1c1b7:	xor    eax,eax
   1c1b9:	push   eax
   1c1ba:	push   eax
   1c1bb:	push   eax
   1c1bc:	call   0x1d5f4
   1c1c1:	mov    ecx,DWORD PTR [ebp+0x8]
   1c1c4:	mov    DWORD PTR [esi+0x18],eax
   1c1c7:	mov    DWORD PTR [ecx+0x30],eax
   1c1ca:	mov    DWORD PTR [esi],0xb
   1c1d0:	cmp    DWORD PTR [ebp+0xc],0x5
   1c1d4:	je     0x1cc33
   1c1da:	mov    edx,DWORD PTR [ebp+0x8]
   1c1dd:	cmp    DWORD PTR [esi+0x4],0x0
   1c1e1:	je     0x1c1f7
   1c1e3:	mov    ecx,edi
   1c1e5:	and    ecx,0x7
   1c1e8:	shr    ebx,cl
   1c1ea:	sub    edi,ecx
   1c1ec:	mov    DWORD PTR [esi],0x18
   1c1f2:	jmp    0x1cbe5
   1c1f7:	cmp    edi,0x3
   1c1fa:	jae    0x1c223
   1c1fc:	cmp    DWORD PTR [ebp-0x8],0x0
   1c200:	je     0x1cc33
   1c206:	mov    eax,DWORD PTR [ebp-0x4]
   1c209:	movzx  eax,BYTE PTR [eax]
   1c20c:	dec    DWORD PTR [ebp-0x8]
   1c20f:	mov    ecx,edi
   1c211:	shl    eax,cl
   1c213:	add    edi,0x8
   1c216:	add    ebx,eax
   1c218:	inc    DWORD PTR [ebp-0x4]
   1c21b:	cmp    edi,0x3
   1c21e:	jb     0x1c1fc
   1c220:	mov    edx,DWORD PTR [ebp+0x8]
   1c223:	mov    eax,ebx
   1c225:	and    eax,0x1
   1c228:	shr    ebx,1
   1c22a:	mov    DWORD PTR [esi+0x4],eax
   1c22d:	mov    eax,ebx
   1c22f:	and    eax,0x3
   1c232:	dec    edi
   1c233:	sub    eax,0x0
   1c236:	je     0x1c27c
   1c238:	dec    eax
   1c239:	je     0x1c258
   1c23b:	dec    eax
   1c23c:	je     0x1c250
   1c23e:	dec    eax
   1c23f:	jne    0x1c282
   1c241:	mov    DWORD PTR [edx+0x18],0x1eeb2
   1c248:	mov    DWORD PTR [esi],0x1b
   1c24e:	jmp    0x1c282
   1c250:	mov    DWORD PTR [esi],0xf
   1c256:	jmp    0x1c282
   1c258:	mov    DWORD PTR [esi+0x4c],0x746f0
   1c25f:	mov    DWORD PTR [esi+0x54],0x9
   1c266:	mov    DWORD PTR [esi+0x50],0x74ef0
   1c26d:	mov    DWORD PTR [esi+0x58],0x5
   1c274:	mov    DWORD PTR [esi],0x12
   1c27a:	jmp    0x1c282
   1c27c:	mov    DWORD PTR [esi],0xd
   1c282:	shr    ebx,0x2
   1c285:	dec    edi
   1c286:	dec    edi
   1c287:	jmp    0x1cbe5
   1c28c:	mov    ecx,edi
   1c28e:	and    ecx,0x7
   1c291:	sub    edi,ecx
   1c293:	shr    ebx,cl
   1c295:	cmp    edi,0x20
   1c298:	jae    0x1c2c1
   1c29a:	cmp    DWORD PTR [ebp-0x8],0x0
   1c29e:	je     0x1cc33
   1c2a4:	mov    eax,DWORD PTR [ebp-0x4]
   1c2a7:	movzx  eax,BYTE PTR [eax]
   1c2aa:	dec    DWORD PTR [ebp-0x8]
   1c2ad:	mov    ecx,edi
   1c2af:	shl    eax,cl
   1c2b1:	add    edi,0x8
   1c2b4:	add    ebx,eax
   1c2b6:	inc    DWORD PTR [ebp-0x4]
   1c2b9:	cmp    edi,0x20
   1c2bc:	jb     0x1c29a
   1c2be:	mov    edx,DWORD PTR [ebp+0x8]
   1c2c1:	mov    ecx,ebx
   1c2c3:	mov    eax,ebx
   1c2c5:	not    ecx
   1c2c7:	and    eax,0xffff
   1c2cc:	shr    ecx,0x10
   1c2cf:	cmp    eax,ecx
   1c2d1:	je     0x1c2df
   1c2d3:	mov    DWORD PTR [edx+0x18],0x1ee94
   1c2da:	jmp    0x1cbdf
   1c2df:	xor    ebx,ebx
   1c2e1:	mov    DWORD PTR [esi+0x40],eax
   1c2e4:	xor    edi,edi
   1c2e6:	mov    DWORD PTR [esi],0xe
   1c2ec:	mov    eax,DWORD PTR [esi+0x40]
   1c2ef:	mov    DWORD PTR [ebp-0xc],eax
   1c2f2:	test   eax,eax
   1c2f4:	je     0x1c848
   1c2fa:	mov    eax,DWORD PTR [ebp-0x8]
   1c2fd:	cmp    DWORD PTR [ebp-0xc],eax
   1c300:	jbe    0x1c305
   1c302:	mov    DWORD PTR [ebp-0xc],eax
   1c305:	mov    eax,DWORD PTR [ebp-0x10]
   1c308:	cmp    DWORD PTR [ebp-0xc],eax
   1c30b:	jbe    0x1c310
   1c30d:	mov    DWORD PTR [ebp-0xc],eax
   1c310:	cmp    DWORD PTR [ebp-0xc],0x0
   1c314:	je     0x1cc33
   1c31a:	push   DWORD PTR [ebp-0xc]
   1c31d:	push   DWORD PTR [ebp-0x4]
   1c320:	push   DWORD PTR [ebp-0x18]
   1c323:	call   0x1db58
   1c328:	mov    eax,DWORD PTR [ebp-0xc]
   1c32b:	sub    DWORD PTR [ebp-0x8],eax
   1c32e:	add    DWORD PTR [ebp-0x4],eax
   1c331:	sub    DWORD PTR [ebp-0x10],eax
   1c334:	add    DWORD PTR [ebp-0x18],eax
   1c337:	add    esp,0xc
   1c33a:	sub    DWORD PTR [esi+0x40],eax
   1c33d:	jmp    0x1cbe5
   1c342:	cmp    edi,0xe
   1c345:	jae    0x1c36e
   1c347:	cmp    DWORD PTR [ebp-0x8],0x0
   1c34b:	je     0x1cc33
   1c351:	mov    eax,DWORD PTR [ebp-0x4]
   1c354:	movzx  eax,BYTE PTR [eax]
   1c357:	dec    DWORD PTR [ebp-0x8]
   1c35a:	mov    ecx,edi
   1c35c:	shl    eax,cl
   1c35e:	add    edi,0x8
   1c361:	add    ebx,eax
   1c363:	inc    DWORD PTR [ebp-0x4]
   1c366:	cmp    edi,0xe
   1c369:	jb     0x1c347
   1c36b:	mov    edx,DWORD PTR [ebp+0x8]
   1c36e:	mov    eax,ebx
   1c370:	and    eax,0x1f
   1c373:	add    eax,0x101
   1c378:	mov    DWORD PTR [esi+0x60],eax
   1c37b:	shr    ebx,0x5
   1c37e:	mov    eax,ebx
   1c380:	and    eax,0x1f
   1c383:	inc    eax
   1c384:	shr    ebx,0x5
   1c387:	mov    DWORD PTR [esi+0x64],eax
   1c38a:	mov    eax,ebx
   1c38c:	and    eax,0xf
   1c38f:	add    eax,0x4
   1c392:	shr    ebx,0x4
   1c395:	sub    edi,0xe
   1c398:	cmp    DWORD PTR [esi+0x60],0x11e
   1c39f:	mov    DWORD PTR [esi+0x5c],eax
   1c3a2:	ja     0x1c3b6
   1c3a4:	cmp    DWORD PTR [esi+0x64],0x1e
   1c3a8:	ja     0x1c3b6
   1c3aa:	and    DWORD PTR [esi+0x68],0x0
   1c3ae:	mov    DWORD PTR [esi],0x10
   1c3b4:	jmp    0x1c404
   1c3b6:	mov    DWORD PTR [edx+0x18],0x1ee70
   1c3bd:	jmp    0x1cbdf
   1c3c2:	cmp    DWORD PTR [ebp-0x8],0x0
   1c3c6:	je     0x1cc33
   1c3cc:	mov    eax,DWORD PTR [ebp-0x4]
   1c3cf:	movzx  eax,BYTE PTR [eax]
   1c3d2:	dec    DWORD PTR [ebp-0x8]
   1c3d5:	mov    ecx,edi
   1c3d7:	shl    eax,cl
   1c3d9:	add    ebx,eax
   1c3db:	inc    DWORD PTR [ebp-0x4]
   1c3de:	add    edi,0x8
   1c3e1:	cmp    edi,0x3
   1c3e4:	jb     0x1c3c2
   1c3e6:	mov    ecx,DWORD PTR [esi+0x68]
   1c3e9:	movzx  ecx,WORD PTR [ecx*2+0x74f70]
   1c3f1:	mov    eax,ebx
   1c3f3:	and    eax,0x7
   1c3f6:	mov    WORD PTR [esi+ecx*2+0x70],ax
   1c3fb:	inc    DWORD PTR [esi+0x68]
   1c3fe:	shr    ebx,0x3
   1c401:	sub    edi,0x3
   1c404:	mov    eax,DWORD PTR [esi+0x68]
   1c407:	cmp    eax,DWORD PTR [esi+0x5c]
   1c40a:	jb     0x1c3e1
   1c40c:	jmp    0x1c423
   1c40e:	mov    eax,DWORD PTR [esi+0x68]
   1c411:	movzx  eax,WORD PTR [eax*2+0x74f70]
   1c419:	xor    ecx,ecx
   1c41b:	mov    WORD PTR [esi+eax*2+0x70],cx
   1c420:	inc    DWORD PTR [esi+0x68]
   1c423:	cmp    DWORD PTR [esi+0x68],0x13
   1c427:	jb     0x1c40e
   1c429:	lea    eax,[esi+0x530]
   1c42f:	lea    ecx,[esi+0x6c]
   1c432:	mov    DWORD PTR [ecx],eax
   1c434:	mov    DWORD PTR [esi+0x4c],eax
   1c437:	lea    edx,[esi+0x2f0]
   1c43d:	push   edx
   1c43e:	lea    eax,[esi+0x54]
   1c441:	push   eax
   1c442:	push   ecx
   1c443:	mov    DWORD PTR [eax],0x7
   1c449:	push   0x13
   1c44b:	lea    eax,[esi+0x70]
   1c44e:	push   eax
   1c44f:	push   0x0
   1c451:	call   0x1d1ee
   1c456:	mov    DWORD PTR [ebp-0x24],eax
   1c459:	test   eax,eax
   1c45b:	je     0x1c46c
   1c45d:	mov    eax,DWORD PTR [ebp+0x8]
   1c460:	mov    DWORD PTR [eax+0x18],0x1ee56
   1c467:	jmp    0x1cbdf
   1c46c:	and    DWORD PTR [esi+0x68],0x0
   1c470:	mov    DWORD PTR [esi],0x11
   1c476:	jmp    0x1c672
   1c47b:	cmp    DWORD PTR [ebp-0x8],0x0
   1c47f:	je     0x1cc33
   1c485:	mov    eax,DWORD PTR [ebp-0x4]
   1c488:	movzx  eax,BYTE PTR [eax]
   1c48b:	dec    DWORD PTR [ebp-0x8]
   1c48e:	mov    ecx,edi
   1c490:	shl    eax,cl
   1c492:	add    ebx,eax
   1c494:	inc    DWORD PTR [ebp-0x4]
   1c497:	add    edi,0x8
   1c49a:	mov    ecx,DWORD PTR [esi+0x54]
   1c49d:	xor    eax,eax
   1c49f:	inc    eax
   1c4a0:	shl    eax,cl
   1c4a2:	mov    ecx,DWORD PTR [esi+0x4c]
   1c4a5:	dec    eax
   1c4a6:	and    eax,ebx
   1c4a8:	mov    eax,DWORD PTR [ecx+eax*4]
   1c4ab:	mov    ecx,eax
   1c4ad:	shr    ecx,0x8
   1c4b0:	movzx  ecx,cl
   1c4b3:	mov    DWORD PTR [ebp-0x20],eax
   1c4b6:	cmp    ecx,edi
   1c4b8:	ja     0x1c47b
   1c4ba:	mov    ecx,eax
   1c4bc:	shr    ecx,0x10
   1c4bf:	cmp    cx,0x10
   1c4c3:	jae    0x1c510
   1c4c5:	mov    ecx,eax
   1c4c7:	shr    ecx,0x8
   1c4ca:	movzx  ecx,cl
   1c4cd:	jmp    0x1c4f1
   1c4cf:	cmp    DWORD PTR [ebp-0x8],0x0
   1c4d3:	je     0x1cc33
   1c4d9:	mov    ecx,DWORD PTR [ebp-0x4]
   1c4dc:	movzx  edx,BYTE PTR [ecx]
   1c4df:	dec    DWORD PTR [ebp-0x8]
   1c4e2:	mov    ecx,edi
   1c4e4:	shl    edx,cl
   1c4e6:	movzx  ecx,ah
   1c4e9:	add    ebx,edx
   1c4eb:	inc    DWORD PTR [ebp-0x4]
   1c4ee:	add    edi,0x8
   1c4f1:	cmp    edi,ecx
   1c4f3:	jb     0x1c4cf
   1c4f5:	movzx  ecx,ah
   1c4f8:	mov    eax,DWORD PTR [esi+0x68]
   1c4fb:	shr    ebx,cl
   1c4fd:	sub    edi,ecx
   1c4ff:	mov    cx,WORD PTR [ebp-0x1e]
   1c503:	mov    WORD PTR [esi+eax*2+0x70],cx
   1c508:	inc    DWORD PTR [esi+0x68]
   1c50b:	jmp    0x1c672
   1c510:	cmp    WORD PTR [ebp-0x1e],0x10
   1c515:	jne    0x1c56d
   1c517:	movzx  eax,ah
   1c51a:	jmp    0x1c53b
   1c51c:	cmp    DWORD PTR [ebp-0x8],0x0
   1c520:	je     0x1cc33
   1c526:	mov    ecx,DWORD PTR [ebp-0x4]
   1c529:	movzx  edx,BYTE PTR [ecx]
   1c52c:	dec    DWORD PTR [ebp-0x8]
   1c52f:	mov    ecx,edi
   1c531:	shl    edx,cl
   1c533:	add    ebx,edx
   1c535:	inc    DWORD PTR [ebp-0x4]
   1c538:	add    edi,0x8
   1c53b:	lea    ecx,[eax+0x2]
   1c53e:	cmp    edi,ecx
   1c540:	jb     0x1c51c
   1c542:	mov    ecx,eax
   1c544:	sub    edi,eax
   1c546:	mov    eax,DWORD PTR [esi+0x68]
   1c549:	shr    ebx,cl
   1c54b:	test   eax,eax
   1c54d:	je     0x1c683
   1c553:	movzx  eax,WORD PTR [esi+eax*2+0x6e]
   1c558:	mov    DWORD PTR [ebp-0x20],eax
   1c55b:	mov    eax,ebx
   1c55d:	and    eax,0x3
   1c560:	add    eax,0x3
   1c563:	shr    ebx,0x2
   1c566:	dec    edi
   1c567:	dec    edi
   1c568:	jmp    0x1c5f2
   1c56d:	cmp    WORD PTR [ebp-0x1e],0x11
   1c572:	movzx  edx,ah
   1c575:	jne    0x1c5d1
   1c577:	jmp    0x1c598
   1c579:	cmp    DWORD PTR [ebp-0x8],0x0
   1c57d:	je     0x1cc33
   1c583:	mov    eax,DWORD PTR [ebp-0x4]
   1c586:	movzx  eax,BYTE PTR [eax]
   1c589:	dec    DWORD PTR [ebp-0x8]
   1c58c:	mov    ecx,edi
   1c58e:	shl    eax,cl
   1c590:	add    ebx,eax
   1c592:	inc    DWORD PTR [ebp-0x4]
   1c595:	add    edi,0x8
   1c598:	lea    eax,[edx+0x3]
   1c59b:	cmp    edi,eax
   1c59d:	jb     0x1c579
   1c59f:	mov    ecx,edx
   1c5a1:	shr    ebx,cl
   1c5a3:	push   0xfffffffd
   1c5a5:	mov    eax,ebx
   1c5a7:	and    eax,0x7
   1c5aa:	add    eax,0x3
   1c5ad:	shr    ebx,0x3
   1c5b0:	jmp    0x1c5e9
   1c5b2:	cmp    DWORD PTR [ebp-0x8],0x0
   1c5b6:	je     0x1cc33
   1c5bc:	mov    eax,DWORD PTR [ebp-0x4]
   1c5bf:	movzx  eax,BYTE PTR [eax]
   1c5c2:	dec    DWORD PTR [ebp-0x8]
   1c5c5:	mov    ecx,edi
   1c5c7:	shl    eax,cl
   1c5c9:	add    ebx,eax
   1c5cb:	inc    DWORD PTR [ebp-0x4]
   1c5ce:	add    edi,0x8
   1c5d1:	lea    eax,[edx+0x7]
   1c5d4:	cmp    edi,eax
   1c5d6:	jb     0x1c5b2
   1c5d8:	mov    ecx,edx
   1c5da:	shr    ebx,cl
   1c5dc:	push   0xfffffff9
   1c5de:	mov    eax,ebx
   1c5e0:	and    eax,0x7f
   1c5e3:	add    eax,0xb
   1c5e6:	shr    ebx,0x7
   1c5e9:	and    DWORD PTR [ebp-0x20],0x0
   1c5ed:	pop    ecx
   1c5ee:	sub    ecx,edx
   1c5f0:	add    edi,ecx
   1c5f2:	mov    ecx,DWORD PTR [esi+0x64]
   1c5f5:	mov    edx,DWORD PTR [esi+0x68]
   1c5f8:	add    ecx,DWORD PTR [esi+0x60]
   1c5fb:	add    edx,eax
   1c5fd:	cmp    edx,ecx
   1c5ff:	jbe    0x1c66e
   1c601:	mov    eax,DWORD PTR [ebp+0x8]
   1c604:	mov    DWORD PTR [eax+0x18],0x1ee3c
   1c60b:	mov    DWORD PTR [esi],0x1b
   1c611:	cmp    DWORD PTR [esi],0x1b
   1c614:	je     0x1cbe5
   1c61a:	lea    eax,[esi+0x530]
   1c620:	lea    ecx,[esi+0x6c]
   1c623:	mov    DWORD PTR [ecx],eax
   1c625:	mov    DWORD PTR [esi+0x4c],eax
   1c628:	lea    edx,[esi+0x2f0]
   1c62e:	push   edx
   1c62f:	lea    eax,[esi+0x54]
   1c632:	push   eax
   1c633:	push   ecx
   1c634:	push   DWORD PTR [esi+0x60]
   1c637:	mov    DWORD PTR [eax],0x9
   1c63d:	lea    eax,[esi+0x70]
   1c640:	push   eax
   1c641:	push   0x1
   1c643:	call   0x1d1ee
   1c648:	mov    DWORD PTR [ebp-0x24],eax
   1c64b:	test   eax,eax
   1c64d:	je     0x1c692
   1c64f:	mov    eax,DWORD PTR [ebp+0x8]
   1c652:	mov    DWORD PTR [eax+0x18],0x1ee20
   1c659:	jmp    0x1cbdf
   1c65e:	mov    ecx,DWORD PTR [esi+0x68]
   1c661:	mov    dx,WORD PTR [ebp-0x20]
   1c665:	dec    eax
   1c666:	mov    WORD PTR [esi+ecx*2+0x70],dx
   1c66b:	inc    DWORD PTR [esi+0x68]
   1c66e:	test   eax,eax
   1c670:	jne    0x1c65e
   1c672:	mov    eax,DWORD PTR [esi+0x64]
   1c675:	add    eax,DWORD PTR [esi+0x60]
   1c678:	cmp    DWORD PTR [esi+0x68],eax
   1c67b:	jb     0x1c49a
   1c681:	jmp    0x1c611
   1c683:	mov    eax,DWORD PTR [ebp+0x8]
   1c686:	mov    DWORD PTR [eax+0x18],0x1ee3c
   1c68d:	jmp    0x1cbdf
   1c692:	lea    ecx,[esi+0x6c]
   1c695:	mov    eax,DWORD PTR [ecx]
   1c697:	mov    DWORD PTR [esi+0x50],eax
   1c69a:	lea    edx,[esi+0x2f0]
   1c6a0:	push   edx
   1c6a1:	lea    eax,[esi+0x58]
   1c6a4:	push   eax
   1c6a5:	push   ecx
   1c6a6:	push   DWORD PTR [esi+0x64]
   1c6a9:	mov    DWORD PTR [eax],0x6
   1c6af:	mov    eax,DWORD PTR [esi+0x60]
   1c6b2:	lea    eax,[esi+eax*2+0x70]
   1c6b6:	push   eax
   1c6b7:	push   0x2
   1c6b9:	call   0x1d1ee
   1c6be:	mov    DWORD PTR [ebp-0x24],eax
   1c6c1:	test   eax,eax
   1c6c3:	je     0x1c6d4
   1c6c5:	mov    eax,DWORD PTR [ebp+0x8]
   1c6c8:	mov    DWORD PTR [eax+0x18],0x1ee0a
   1c6cf:	jmp    0x1cbdf
   1c6d4:	mov    DWORD PTR [esi],0x12
   1c6da:	cmp    DWORD PTR [ebp-0x8],0x6
   1c6de:	jb     0x1c737
   1c6e0:	cmp    DWORD PTR [ebp-0x10],0x102
   1c6e7:	jb     0x1c737
   1c6e9:	mov    eax,DWORD PTR [ebp+0x8]
   1c6ec:	mov    ecx,DWORD PTR [ebp-0x18]
   1c6ef:	push   DWORD PTR [ebp-0x1c]
   1c6f2:	mov    DWORD PTR [eax+0xc],ecx
   1c6f5:	mov    ecx,DWORD PTR [ebp-0x10]
   1c6f8:	mov    DWORD PTR [eax+0x10],ecx
   1c6fb:	mov    ecx,DWORD PTR [ebp-0x4]
   1c6fe:	mov    DWORD PTR [eax],ecx
   1c700:	mov    ecx,DWORD PTR [ebp-0x8]
   1c703:	mov    DWORD PTR [eax+0x4],ecx
   1c706:	push   eax
   1c707:	mov    DWORD PTR [esi+0x38],ebx
   1c70a:	mov    DWORD PTR [esi+0x3c],edi
   1c70d:	call   0x1ce08
   1c712:	mov    eax,DWORD PTR [ebp+0x8]
   1c715:	mov    ecx,DWORD PTR [eax+0xc]
   1c718:	mov    ebx,DWORD PTR [esi+0x38]
   1c71b:	mov    edi,DWORD PTR [esi+0x3c]
   1c71e:	mov    DWORD PTR [ebp-0x18],ecx
   1c721:	mov    ecx,DWORD PTR [eax+0x10]
   1c724:	mov    DWORD PTR [ebp-0x10],ecx
   1c727:	mov    ecx,DWORD PTR [eax]
   1c729:	mov    eax,DWORD PTR [eax+0x4]
   1c72c:	mov    DWORD PTR [ebp-0x4],ecx
   1c72f:	mov    DWORD PTR [ebp-0x8],eax
   1c732:	jmp    0x1cbe5
   1c737:	mov    ecx,DWORD PTR [esi+0x54]
   1c73a:	mov    eax,DWORD PTR [esi+0x4c]
   1c73d:	xor    edx,edx
   1c73f:	inc    edx
   1c740:	shl    edx,cl
   1c742:	dec    edx
   1c743:	and    edx,ebx
   1c745:	mov    eax,DWORD PTR [eax+edx*4]
   1c748:	jmp    0x1c77a
   1c74a:	cmp    DWORD PTR [ebp-0x8],0x0
   1c74e:	je     0x1cc33
   1c754:	mov    eax,DWORD PTR [ebp-0x4]
   1c757:	movzx  eax,BYTE PTR [eax]
   1c75a:	dec    DWORD PTR [ebp-0x8]
   1c75d:	mov    ecx,edi
   1c75f:	shl    eax,cl
   1c761:	mov    ecx,DWORD PTR [esi+0x54]
   1c764:	add    edi,0x8
   1c767:	add    ebx,eax
   1c769:	inc    DWORD PTR [ebp-0x4]
   1c76c:	xor    eax,eax
   1c76e:	inc    eax
   1c76f:	shl    eax,cl
   1c771:	mov    ecx,DWORD PTR [esi+0x4c]
   1c774:	dec    eax
   1c775:	and    eax,ebx
   1c777:	mov    eax,DWORD PTR [ecx+eax*4]
   1c77a:	mov    ecx,eax
   1c77c:	shr    ecx,0x8
   1c77f:	movzx  ecx,cl
   1c782:	cmp    ecx,edi
   1c784:	ja     0x1c74a
   1c786:	test   al,al
   1c788:	je     0x1c821
   1c78e:	test   al,0xf0
   1c790:	jne    0x1c821
   1c796:	mov    DWORD PTR [ebp-0xc],eax
   1c799:	shr    DWORD PTR [ebp-0xc],0x8
   1c79d:	movzx  edx,BYTE PTR [ebp-0xc]
   1c7a1:	mov    DWORD PTR [ebp-0x28],edx
   1c7a4:	movzx  ecx,al
   1c7a7:	add    ecx,edx
   1c7a9:	xor    edx,edx
   1c7ab:	inc    edx
   1c7ac:	shl    edx,cl
   1c7ae:	mov    ecx,DWORD PTR [ebp-0x28]
   1c7b1:	mov    DWORD PTR [ebp-0x20],eax
   1c7b4:	shr    eax,0x10
   1c7b7:	dec    edx
   1c7b8:	and    edx,ebx
   1c7ba:	shr    edx,cl
   1c7bc:	add    edx,eax
   1c7be:	mov    eax,DWORD PTR [esi+0x4c]
   1c7c1:	mov    eax,DWORD PTR [eax+edx*4]
   1c7c4:	movzx  edx,BYTE PTR [ebp-0xc]
   1c7c8:	jmp    0x1c80b
   1c7ca:	cmp    DWORD PTR [ebp-0x8],0x0
   1c7ce:	je     0x1cc33
   1c7d4:	mov    eax,DWORD PTR [ebp-0x4]
   1c7d7:	movzx  eax,BYTE PTR [eax]
   1c7da:	movzx  edx,BYTE PTR [ebp-0x1f]
   1c7de:	dec    DWORD PTR [ebp-0x8]
   1c7e1:	mov    ecx,edi
   1c7e3:	shl    eax,cl
   1c7e5:	movzx  ecx,BYTE PTR [ebp-0x20]
   1c7e9:	add    ebx,eax
   1c7eb:	inc    DWORD PTR [ebp-0x4]
   1c7ee:	xor    eax,eax
   1c7f0:	add    ecx,edx
   1c7f2:	inc    eax
   1c7f3:	shl    eax,cl
   1c7f5:	add    edi,0x8
   1c7f8:	mov    ecx,edx
   1c7fa:	dec    eax
   1c7fb:	and    eax,ebx
   1c7fd:	shr    eax,cl
   1c7ff:	movzx  ecx,WORD PTR [ebp-0x1e]
   1c803:	add    eax,ecx
   1c805:	mov    ecx,DWORD PTR [esi+0x4c]
   1c808:	mov    eax,DWORD PTR [ecx+eax*4]
   1c80b:	mov    ecx,eax
   1c80d:	shr    ecx,0x8
   1c810:	movzx  ecx,cl
   1c813:	add    ecx,edx
   1c815:	cmp    ecx,edi
   1c817:	ja     0x1c7ca
   1c819:	movzx  ecx,BYTE PTR [ebp-0x1f]
   1c81d:	shr    ebx,cl
   1c81f:	sub    edi,ecx
   1c821:	mov    ecx,eax
   1c823:	shr    ecx,0x8
   1c826:	movzx  ecx,cl
   1c829:	shr    ebx,cl
   1c82b:	sub    edi,ecx
   1c82d:	mov    ecx,eax
   1c82f:	shr    ecx,0x10
   1c832:	mov    DWORD PTR [esi+0x40],ecx
   1c835:	test   al,al
   1c837:	jne    0x1c844
   1c839:	mov    DWORD PTR [esi],0x17
   1c83f:	jmp    0x1cbe5
   1c844:	test   al,0x20
   1c846:	je     0x1c853
   1c848:	mov    DWORD PTR [esi],0xb
   1c84e:	jmp    0x1cbe5
   1c853:	test   al,0x40
   1c855:	je     0x1c866
   1c857:	mov    eax,DWORD PTR [ebp+0x8]
   1c85a:	mov    DWORD PTR [eax+0x18],0x1edee
   1c861:	jmp    0x1cbdf
   1c866:	movzx  eax,al
   1c869:	and    eax,0xf
   1c86c:	mov    DWORD PTR [esi+0x48],eax
   1c86f:	mov    DWORD PTR [esi],0x13
   1c875:	mov    eax,DWORD PTR [esi+0x48]
   1c878:	test   eax,eax
   1c87a:	je     0x1c8b5
   1c87c:	cmp    edi,eax
   1c87e:	jae    0x1c8a4
   1c880:	cmp    DWORD PTR [ebp-0x8],0x0
   1c884:	je     0x1cc33
   1c88a:	mov    ecx,DWORD PTR [ebp-0x4]
   1c88d:	movzx  edx,BYTE PTR [ecx]
   1c890:	dec    DWORD PTR [ebp-0x8]
   1c893:	mov    ecx,edi
   1c895:	shl    edx,cl
   1c897:	add    edi,0x8
   1c89a:	add    ebx,edx
   1c89c:	inc    DWORD PTR [ebp-0x4]
   1c89f:	cmp    edi,DWORD PTR [esi+0x48]
   1c8a2:	jb     0x1c880
   1c8a4:	xor    edx,edx
   1c8a6:	inc    edx
   1c8a7:	mov    ecx,eax
   1c8a9:	shl    edx,cl
   1c8ab:	dec    edx
   1c8ac:	and    edx,ebx
   1c8ae:	add    DWORD PTR [esi+0x40],edx
   1c8b1:	shr    ebx,cl
   1c8b3:	sub    edi,eax
   1c8b5:	mov    DWORD PTR [esi],0x14
   1c8bb:	mov    ecx,DWORD PTR [esi+0x58]
   1c8be:	mov    eax,DWORD PTR [esi+0x50]
   1c8c1:	xor    edx,edx
   1c8c3:	inc    edx
   1c8c4:	shl    edx,cl
   1c8c6:	dec    edx
   1c8c7:	and    edx,ebx
   1c8c9:	mov    eax,DWORD PTR [eax+edx*4]
   1c8cc:	jmp    0x1c8fe
   1c8ce:	cmp    DWORD PTR [ebp-0x8],0x0
   1c8d2:	je     0x1cc33
   1c8d8:	mov    eax,DWORD PTR [ebp-0x4]
   1c8db:	movzx  eax,BYTE PTR [eax]
   1c8de:	dec    DWORD PTR [ebp-0x8]
   1c8e1:	mov    ecx,edi
   1c8e3:	shl    eax,cl
   1c8e5:	mov    ecx,DWORD PTR [esi+0x58]
   1c8e8:	add    edi,0x8
   1c8eb:	add    ebx,eax
   1c8ed:	inc    DWORD PTR [ebp-0x4]
   1c8f0:	xor    eax,eax
   1c8f2:	inc    eax
   1c8f3:	shl    eax,cl
   1c8f5:	mov    ecx,DWORD PTR [esi+0x50]
   1c8f8:	dec    eax
   1c8f9:	and    eax,ebx
   1c8fb:	mov    eax,DWORD PTR [ecx+eax*4]
   1c8fe:	mov    ecx,eax
   1c900:	shr    ecx,0x8
   1c903:	movzx  ecx,cl
   1c906:	cmp    ecx,edi
   1c908:	ja     0x1c8ce
   1c90a:	test   al,0xf0
   1c90c:	jne    0x1c99d
   1c912:	mov    DWORD PTR [ebp-0xc],eax
   1c915:	shr    DWORD PTR [ebp-0xc],0x8
   1c919:	movzx  edx,BYTE PTR [ebp-0xc]
   1c91d:	mov    DWORD PTR [ebp-0x28],edx
   1c920:	movzx  ecx,al
   1c923:	add    ecx,edx
   1c925:	xor    edx,edx
   1c927:	inc    edx
   1c928:	shl    edx,cl
   1c92a:	mov    ecx,DWORD PTR [ebp-0x28]
   1c92d:	mov    DWORD PTR [ebp-0x20],eax
   1c930:	shr    eax,0x10
   1c933:	dec    edx
   1c934:	and    edx,ebx
   1c936:	shr    edx,cl
   1c938:	add    edx,eax
   1c93a:	mov    eax,DWORD PTR [esi+0x50]
   1c93d:	mov    eax,DWORD PTR [eax+edx*4]
   1c940:	movzx  edx,BYTE PTR [ebp-0xc]
   1c944:	jmp    0x1c987
   1c946:	cmp    DWORD PTR [ebp-0x8],0x0
   1c94a:	je     0x1cc33
   1c950:	mov    eax,DWORD PTR [ebp-0x4]
   1c953:	movzx  eax,BYTE PTR [eax]
   1c956:	movzx  edx,BYTE PTR [ebp-0x1f]
   1c95a:	dec    DWORD PTR [ebp-0x8]
   1c95d:	mov    ecx,edi
   1c95f:	shl    eax,cl
   1c961:	movzx  ecx,BYTE PTR [ebp-0x20]
   1c965:	add    ebx,eax
   1c967:	inc    DWORD PTR [ebp-0x4]
   1c96a:	xor    eax,eax
   1c96c:	add    ecx,edx
   1c96e:	inc    eax
   1c96f:	shl    eax,cl
   1c971:	add    edi,0x8
   1c974:	mov    ecx,edx
   1c976:	dec    eax
   1c977:	and    eax,ebx
   1c979:	shr    eax,cl
   1c97b:	movzx  ecx,WORD PTR [ebp-0x1e]
   1c97f:	add    eax,ecx
   1c981:	mov    ecx,DWORD PTR [esi+0x50]
   1c984:	mov    eax,DWORD PTR [ecx+eax*4]
   1c987:	mov    ecx,eax
   1c989:	shr    ecx,0x8
   1c98c:	movzx  ecx,cl
   1c98f:	add    ecx,edx
   1c991:	cmp    ecx,edi
   1c993:	ja     0x1c946
   1c995:	movzx  ecx,BYTE PTR [ebp-0x1f]
   1c999:	shr    ebx,cl
   1c99b:	sub    edi,ecx
   1c99d:	mov    ecx,eax
   1c99f:	shr    ecx,0x8
   1c9a2:	movzx  ecx,cl
   1c9a5:	shr    ebx,cl
   1c9a7:	sub    edi,ecx
   1c9a9:	test   al,0x40
   1c9ab:	je     0x1c9bc
   1c9ad:	mov    eax,DWORD PTR [ebp+0x8]
   1c9b0:	mov    DWORD PTR [eax+0x18],0x1edd8
   1c9b7:	jmp    0x1cbdf
   1c9bc:	mov    edx,DWORD PTR [ebp+0x8]
   1c9bf:	mov    ecx,eax
   1c9c1:	movzx  eax,al
   1c9c4:	shr    ecx,0x10
   1c9c7:	and    eax,0xf
   1c9ca:	mov    DWORD PTR [esi+0x44],ecx
   1c9cd:	mov    DWORD PTR [esi+0x48],eax
   1c9d0:	mov    DWORD PTR [esi],0x15
   1c9d6:	mov    eax,DWORD PTR [esi+0x48]
   1c9d9:	test   eax,eax
   1c9db:	je     0x1ca1a
   1c9dd:	cmp    edi,eax
   1c9df:	jae    0x1ca08
   1c9e1:	cmp    DWORD PTR [ebp-0x8],0x0
   1c9e5:	je     0x1cc33
   1c9eb:	mov    eax,DWORD PTR [ebp-0x4]
   1c9ee:	movzx  eax,BYTE PTR [eax]
   1c9f1:	dec    DWORD PTR [ebp-0x8]
   1c9f4:	mov    ecx,edi
   1c9f6:	shl    eax,cl
   1c9f8:	add    edi,0x8
   1c9fb:	add    ebx,eax
   1c9fd:	inc    DWORD PTR [ebp-0x4]
   1ca00:	cmp    edi,DWORD PTR [esi+0x48]
   1ca03:	jb     0x1c9e1
   1ca05:	mov    edx,DWORD PTR [ebp+0x8]
   1ca08:	mov    ecx,DWORD PTR [esi+0x48]
   1ca0b:	xor    eax,eax
   1ca0d:	inc    eax
   1ca0e:	shl    eax,cl
   1ca10:	dec    eax
   1ca11:	and    eax,ebx
   1ca13:	add    DWORD PTR [esi+0x44],eax
   1ca16:	shr    ebx,cl
   1ca18:	sub    edi,ecx
   1ca1a:	mov    eax,DWORD PTR [esi+0x2c]
   1ca1d:	sub    eax,DWORD PTR [ebp-0x10]
   1ca20:	add    eax,DWORD PTR [ebp-0x1c]
   1ca23:	cmp    DWORD PTR [esi+0x44],eax
   1ca26:	jbe    0x1ca34
   1ca28:	mov    DWORD PTR [edx+0x18],0x1edba
   1ca2f:	jmp    0x1cbdf
   1ca34:	mov    DWORD PTR [esi],0x16
   1ca3a:	cmp    DWORD PTR [ebp-0x10],0x0
   1ca3e:	je     0x1cc33
   1ca44:	mov    eax,DWORD PTR [ebp-0x1c]
   1ca47:	sub    eax,DWORD PTR [ebp-0x10]
   1ca4a:	mov    ecx,DWORD PTR [esi+0x44]
   1ca4d:	cmp    ecx,eax
   1ca4f:	jbe    0x1ca7e
   1ca51:	sub    ecx,eax
   1ca53:	mov    eax,DWORD PTR [esi+0x34]
   1ca56:	mov    DWORD PTR [ebp-0xc],ecx
   1ca59:	mov    ecx,DWORD PTR [esi+0x30]
   1ca5c:	cmp    DWORD PTR [ebp-0xc],ecx
   1ca5f:	jbe    0x1ca6c
   1ca61:	add    eax,DWORD PTR [esi+0x28]
   1ca64:	sub    DWORD PTR [ebp-0xc],ecx
   1ca67:	sub    eax,DWORD PTR [ebp-0xc]
   1ca6a:	jmp    0x1ca71
   1ca6c:	sub    eax,DWORD PTR [ebp-0xc]
   1ca6f:	add    eax,ecx
   1ca71:	mov    ecx,DWORD PTR [esi+0x40]
   1ca74:	mov    DWORD PTR [ebp-0x28],ecx
   1ca77:	cmp    DWORD PTR [ebp-0xc],ecx
   1ca7a:	jbe    0x1ca8c
   1ca7c:	jmp    0x1ca89
   1ca7e:	mov    eax,DWORD PTR [ebp-0x18]
   1ca81:	sub    eax,ecx
   1ca83:	mov    ecx,DWORD PTR [esi+0x40]
   1ca86:	mov    DWORD PTR [ebp-0x28],ecx
   1ca89:	mov    DWORD PTR [ebp-0xc],ecx
   1ca8c:	mov    ecx,DWORD PTR [ebp-0x10]
   1ca8f:	cmp    DWORD PTR [ebp-0xc],ecx
   1ca92:	jbe    0x1ca97
   1ca94:	mov    DWORD PTR [ebp-0xc],ecx
   1ca97:	sub    ecx,DWORD PTR [ebp-0xc]
   1ca9a:	mov    DWORD PTR [ebp-0x10],ecx
   1ca9d:	mov    ecx,DWORD PTR [ebp-0x28]
   1caa0:	sub    ecx,DWORD PTR [ebp-0xc]
   1caa3:	mov    DWORD PTR [esi+0x40],ecx
   1caa6:	mov    edx,DWORD PTR [ebp-0x18]
   1caa9:	mov    cl,BYTE PTR [eax]
   1caab:	inc    DWORD PTR [ebp-0x18]
   1caae:	inc    eax
   1caaf:	dec    DWORD PTR [ebp-0xc]
   1cab2:	mov    BYTE PTR [edx],cl
   1cab4:	jne    0x1caa6
   1cab6:	cmp    DWORD PTR [esi+0x40],0x0
   1caba:	jne    0x1cbe5
   1cac0:	jmp    0x1cada
   1cac2:	cmp    DWORD PTR [ebp-0x10],0x0
   1cac6:	je     0x1cc33
   1cacc:	mov    ecx,DWORD PTR [ebp-0x18]
   1cacf:	mov    al,BYTE PTR [esi+0x40]
   1cad2:	inc    DWORD PTR [ebp-0x18]
   1cad5:	dec    DWORD PTR [ebp-0x10]
   1cad8:	mov    BYTE PTR [ecx],al
   1cada:	mov    DWORD PTR [esi],0x12
   1cae0:	jmp    0x1cbe5
   1cae5:	cmp    DWORD PTR [esi+0x8],0x0
   1cae9:	je     0x1cb99
   1caef:	cmp    edi,0x20
   1caf2:	jae    0x1cb1b
   1caf4:	cmp    DWORD PTR [ebp-0x8],0x0
   1caf8:	je     0x1cc33
   1cafe:	mov    eax,DWORD PTR [ebp-0x4]
   1cb01:	movzx  eax,BYTE PTR [eax]
   1cb04:	dec    DWORD PTR [ebp-0x8]
   1cb07:	mov    ecx,edi
   1cb09:	shl    eax,cl
   1cb0b:	add    edi,0x8
   1cb0e:	add    ebx,eax
   1cb10:	inc    DWORD PTR [ebp-0x4]
   1cb13:	cmp    edi,0x20
   1cb16:	jb     0x1caf4
   1cb18:	mov    edx,DWORD PTR [ebp+0x8]
   1cb1b:	mov    eax,DWORD PTR [ebp-0x1c]
   1cb1e:	sub    eax,DWORD PTR [ebp-0x10]
   1cb21:	add    DWORD PTR [edx+0x14],eax
   1cb24:	add    DWORD PTR [esi+0x1c],eax
   1cb27:	mov    DWORD PTR [ebp-0x1c],eax
   1cb2a:	test   eax,eax
   1cb2c:	je     0x1cb56
   1cb2e:	push   eax
   1cb2f:	mov    eax,DWORD PTR [ebp-0x18]
   1cb32:	sub    eax,DWORD PTR [ebp-0x1c]
   1cb35:	cmp    DWORD PTR [esi+0x10],0x0
   1cb39:	push   eax
   1cb3a:	push   DWORD PTR [esi+0x18]
   1cb3d:	je     0x1cb46
   1cb3f:	call   0x1da96
   1cb44:	jmp    0x1cb4b
   1cb46:	call   0x1d5f4
   1cb4b:	mov    ecx,DWORD PTR [ebp+0x8]
   1cb4e:	mov    DWORD PTR [esi+0x18],eax
   1cb51:	mov    DWORD PTR [ecx+0x30],eax
   1cb54:	mov    edx,ecx
   1cb56:	cmp    DWORD PTR [esi+0x10],0x0
   1cb5a:	mov    eax,DWORD PTR [ebp-0x10]
   1cb5d:	mov    DWORD PTR [ebp-0x1c],eax
   1cb60:	mov    eax,ebx
   1cb62:	jne    0x1cb87
   1cb64:	and    eax,0xff00
   1cb69:	mov    ecx,ebx
   1cb6b:	shl    ecx,0x10
   1cb6e:	add    eax,ecx
   1cb70:	mov    ecx,ebx
   1cb72:	shr    ecx,0x8
   1cb75:	and    ecx,0xff00
   1cb7b:	shl    eax,0x8
   1cb7e:	add    eax,ecx
   1cb80:	mov    ecx,ebx
   1cb82:	shr    ecx,0x18
   1cb85:	add    eax,ecx
   1cb87:	cmp    eax,DWORD PTR [esi+0x18]
   1cb8a:	je     0x1cb95
   1cb8c:	mov    DWORD PTR [edx+0x18],0x1eda4
   1cb93:	jmp    0x1cbdf
   1cb95:	xor    ebx,ebx
   1cb97:	xor    edi,edi
   1cb99:	mov    DWORD PTR [esi],0x19
   1cb9f:	cmp    DWORD PTR [esi+0x8],0x0
   1cba3:	je     0x1cc1d
   1cba5:	cmp    DWORD PTR [esi+0x10],0x0
   1cba9:	je     0x1cc1d
   1cbab:	cmp    edi,0x20
   1cbae:	jae    0x1cbd3
   1cbb0:	cmp    DWORD PTR [ebp-0x8],0x0
   1cbb4:	je     0x1cc33
   1cbb6:	mov    eax,DWORD PTR [ebp-0x4]
   1cbb9:	movzx  eax,BYTE PTR [eax]
   1cbbc:	dec    DWORD PTR [ebp-0x8]
   1cbbf:	mov    ecx,edi
   1cbc1:	shl    eax,cl
   1cbc3:	add    edi,0x8
   1cbc6:	add    ebx,eax
   1cbc8:	inc    DWORD PTR [ebp-0x4]
   1cbcb:	cmp    edi,0x20
   1cbce:	jb     0x1cbb0
   1cbd0:	mov    edx,DWORD PTR [ebp+0x8]
   1cbd3:	cmp    ebx,DWORD PTR [esi+0x1c]
   1cbd6:	je     0x1cc19
   1cbd8:	mov    DWORD PTR [edx+0x18],0x1ed8c
   1cbdf:	mov    DWORD PTR [esi],0x1b
   1cbe5:	mov    eax,DWORD PTR [esi]
   1cbe7:	cmp    eax,0x1c
   1cbea:	jbe    0x1bbdc
   1cbf0:	jmp    0x1bbd2
   1cbf5:	mov    eax,DWORD PTR [ebp-0x18]
   1cbf8:	mov    DWORD PTR [edx+0xc],eax
   1cbfb:	mov    eax,DWORD PTR [ebp-0x10]
   1cbfe:	mov    DWORD PTR [edx+0x10],eax
   1cc01:	mov    eax,DWORD PTR [ebp-0x4]
   1cc04:	mov    DWORD PTR [edx],eax
   1cc06:	mov    eax,DWORD PTR [ebp-0x8]
   1cc09:	mov    DWORD PTR [edx+0x4],eax
   1cc0c:	mov    DWORD PTR [esi+0x38],ebx
   1cc0f:	mov    DWORD PTR [esi+0x3c],edi
   1cc12:	push   0x2
   1cc14:	jmp    0x1bbd4
   1cc19:	xor    ebx,ebx
   1cc1b:	xor    edi,edi
   1cc1d:	mov    DWORD PTR [esi],0x1a
   1cc23:	mov    DWORD PTR [ebp-0x24],0x1
   1cc2a:	jmp    0x1cc33
   1cc2c:	mov    DWORD PTR [ebp-0x24],0xfffffffd
   1cc33:	mov    eax,DWORD PTR [ebp+0x8]
   1cc36:	mov    ecx,DWORD PTR [ebp-0x18]
   1cc39:	mov    DWORD PTR [eax+0xc],ecx
   1cc3c:	mov    ecx,DWORD PTR [ebp-0x10]
   1cc3f:	mov    DWORD PTR [eax+0x10],ecx
   1cc42:	mov    ecx,DWORD PTR [ebp-0x4]
   1cc45:	mov    DWORD PTR [eax],ecx
   1cc47:	mov    ecx,DWORD PTR [ebp-0x8]
   1cc4a:	mov    DWORD PTR [eax+0x4],ecx
   1cc4d:	cmp    DWORD PTR [esi+0x28],0x0
   1cc51:	mov    DWORD PTR [esi+0x38],ebx
   1cc54:	mov    DWORD PTR [esi+0x3c],edi
   1cc57:	jne    0x1cc69
   1cc59:	cmp    DWORD PTR [esi],0x18
   1cc5c:	jge    0x1cc85
   1cc5e:	mov    eax,DWORD PTR [ebp-0x1c]
   1cc61:	mov    ecx,DWORD PTR [ebp+0x8]
   1cc64:	cmp    eax,DWORD PTR [ecx+0x10]
   1cc67:	je     0x1cc85
   1cc69:	mov    eax,DWORD PTR [ebp-0x1c]
   1cc6c:	mov    edi,DWORD PTR [ebp+0x8]
   1cc6f:	call   0x1ba94
   1cc74:	test   eax,eax
   1cc76:	je     0x1cc85
   1cc78:	mov    DWORD PTR [esi],0x1c
   1cc7e:	push   0xfffffffc
   1cc80:	jmp    0x1bbd4
   1cc85:	mov    edi,DWORD PTR [ebp+0x8]
   1cc88:	mov    eax,DWORD PTR [ebp-0x2c]
   1cc8b:	sub    eax,DWORD PTR [edi+0x4]
   1cc8e:	mov    ebx,DWORD PTR [ebp-0x1c]
   1cc91:	sub    ebx,DWORD PTR [edi+0x10]
   1cc94:	add    DWORD PTR [edi+0x8],eax
   1cc97:	add    DWORD PTR [edi+0x14],ebx
   1cc9a:	add    DWORD PTR [esi+0x1c],ebx
   1cc9d:	cmp    DWORD PTR [esi+0x8],0x0
   1cca1:	mov    DWORD PTR [ebp-0x2c],eax
   1cca4:	je     0x1cccf
   1cca6:	test   ebx,ebx
   1cca8:	je     0x1cccf
   1ccaa:	mov    eax,DWORD PTR [edi+0xc]
   1ccad:	push   ebx
   1ccae:	sub    eax,ebx
   1ccb0:	cmp    DWORD PTR [esi+0x10],0x0
   1ccb4:	push   eax
   1ccb5:	push   DWORD PTR [esi+0x18]
   1ccb8:	je     0x1ccc1
   1ccba:	call   0x1da96
   1ccbf:	jmp    0x1ccc6
   1ccc1:	call   0x1d5f4
   1ccc6:	mov    DWORD PTR [esi+0x18],eax
   1ccc9:	mov    DWORD PTR [edi+0x30],eax
   1cccc:	mov    eax,DWORD PTR [ebp-0x2c]
   1cccf:	cmp    DWORD PTR [esi],0xb
   1ccd2:	jne    0x1ccdb
   1ccd4:	mov    ecx,0x80
   1ccd9:	jmp    0x1ccdd
   1ccdb:	xor    ecx,ecx
   1ccdd:	mov    edx,DWORD PTR [esi+0x4]
   1cce0:	neg    edx
   1cce2:	sbb    edx,edx
   1cce4:	and    edx,0x40
   1cce7:	add    edx,ecx
   1cce9:	add    edx,DWORD PTR [esi+0x3c]
   1ccec:	mov    DWORD PTR [edi+0x2c],edx
   1ccef:	test   eax,eax
   1ccf1:	jne    0x1ccf7
   1ccf3:	test   ebx,ebx
   1ccf5:	je     0x1ccfd
   1ccf7:	cmp    DWORD PTR [ebp+0xc],0x4
   1ccfb:	jne    0x1cd0a
   1ccfd:	cmp    DWORD PTR [ebp-0x24],0x0
   1cd01:	jne    0x1cd0a
   1cd03:	mov    DWORD PTR [ebp-0x24],0xfffffffb
   1cd0a:	mov    eax,DWORD PTR [ebp-0x24]
   1cd0d:	jmp    0x1bbd5
   1cd12:	mov    edi,edi
   1cd14:	out    0xbb,al
   1cd16:	add    DWORD PTR [eax],eax
   1cd18:	add    edi,DWORD PTR [ebp-0x4267ffff]
   1cd1e:	add    DWORD PTR [eax],eax
   1cd20:	push   cs
   1cd21:	mov    esi,0xbe870001
   1cd26:	add    DWORD PTR [eax],eax
   1cd28:	push   es
   1cd29:	mov    edi,0xbfa10001
   1cd2e:	add    DWORD PTR [eax],eax
   1cd30:	cmp    al,al
   1cd32:	add    DWORD PTR [eax],eax
   1cd34:	iret   
   1cd35:	rol    BYTE PTR [ecx],0x0
   1cd38:	dec    edi
   1cd39:	rol    DWORD PTR [ecx],0x0
   1cd3c:	lods   eax,DWORD PTR ds:[esi]
   1cd3d:	rol    DWORD PTR [ecx],0x0
   1cd40:	rol    cl,1
   1cd42:	add    DWORD PTR [eax],eax
   1cd44:	ffree  st(1)
   1cd46:	add    DWORD PTR [eax],eax
   1cd48:	mov    edx,es
   1cd4a:	add    DWORD PTR [eax],eax
   1cd4c:	in     al,dx
   1cd4d:	ret    0x1
   1cd50:	inc    edx
   1cd51:	ret    
   1cd52:	add    DWORD PTR [eax],eax
   1cd54:	add    al,0xc4
   1cd56:	add    DWORD PTR [eax],eax
   1cd58:	jb     0x1cd20
   1cd5a:	add    DWORD PTR [eax],eax
   1cd5c:	fcmovb st,st(6)
   1cd5e:	add    DWORD PTR [eax],eax
   1cd60:	jne    0x1cd2a
   1cd62:	add    DWORD PTR [eax],eax
   1cd64:	mov    ebx,0xd60001c8
   1cd69:	leave  
   1cd6a:	add    DWORD PTR [eax],eax
   1cd6c:	cmp    cl,dl
   1cd6e:	add    DWORD PTR [eax],eax
   1cd70:	ret    0x1ca
   1cd73:	add    ch,ah
   1cd75:	retf   0x1
   1cd78:	lahf   
   1cd79:	retf   
   1cd7a:	add    DWORD PTR [eax],eax
   1cd7c:	and    ecx,esp
   1cd7e:	add    DWORD PTR [eax],eax
   1cd80:	sub    al,0xcc
   1cd82:	add    DWORD PTR [eax],eax
   1cd84:	jle    0x1cd52
   1cd86:	add    DWORD PTR [eax],eax
   1cd88:	int3   
   1cd89:	int3   
   1cd8a:	int3   
   1cd8b:	int3   
   1cd8c:	int3   
   1cd8d:	int3   
   1cd8e:	mov    edi,edi
   1cd90:	push   ebp
   1cd91:	mov    ebp,esp
   1cd93:	push   esi
   1cd94:	mov    esi,DWORD PTR [ebp+0x8]
   1cd97:	test   esi,esi
   1cd99:	je     0x1cdc7
   1cd9b:	mov    eax,DWORD PTR [esi+0x1c]
   1cd9e:	test   eax,eax
   1cda0:	je     0x1cdc7
   1cda2:	mov    ecx,DWORD PTR [esi+0x24]
   1cda5:	test   ecx,ecx
   1cda7:	je     0x1cdc7
   1cda9:	mov    eax,DWORD PTR [eax+0x34]
   1cdac:	test   eax,eax
   1cdae:	je     0x1cdb6
   1cdb0:	push   eax
   1cdb1:	push   DWORD PTR [esi+0x28]
   1cdb4:	call   ecx
   1cdb6:	push   DWORD PTR [esi+0x1c]
   1cdb9:	push   DWORD PTR [esi+0x28]
   1cdbc:	call   DWORD PTR [esi+0x24]
   1cdbf:	and    DWORD PTR [esi+0x1c],0x0
   1cdc3:	xor    eax,eax
   1cdc5:	jmp    0x1cdca
   1cdc7:	push   0xfffffffe
   1cdc9:	pop    eax
   1cdca:	pop    esi
   1cdcb:	pop    ebp
   1cdcc:	ret    0x4
   1cdcf:	int3   
   1cdd0:	int3   
   1cdd1:	int3   
   1cdd2:	int3   
   1cdd3:	int3   
   1cdd4:	mov    edi,edi
   1cdd6:	push   ebp
   1cdd7:	mov    ebp,esp
   1cdd9:	mov    eax,DWORD PTR [ebp+0xc]
   1cddc:	imul   eax,DWORD PTR [ebp+0x10]
   1cde0:	push   eax
   1cde1:	call   0x1daba
   1cde6:	pop    ecx
   1cde7:	pop    ebp
   1cde8:	ret    0xc
   1cdeb:	int3   
   1cdec:	int3   
   1cded:	int3   
   1cdee:	int3   
   1cdef:	int3   
   1cdf0:	mov    edi,edi
   1cdf2:	push   ebp
   1cdf3:	mov    ebp,esp
   1cdf5:	push   DWORD PTR [ebp+0xc]
   1cdf8:	call   0x10a3a
   1cdfd:	pop    ecx
   1cdfe:	pop    ebp
   1cdff:	ret    0x8
   1ce02:	int3   
   1ce03:	int3   
   1ce04:	int3   
   1ce05:	int3   
   1ce06:	int3   
   1ce07:	int3   
   1ce08:	mov    edi,edi
   1ce0a:	push   ebp
   1ce0b:	mov    ebp,esp
   1ce0d:	sub    esp,0x40
   1ce10:	mov    eax,DWORD PTR [ebp+0x8]
   1ce13:	mov    ecx,DWORD PTR [eax+0x4]
   1ce16:	mov    edx,DWORD PTR [eax+0x10]
   1ce19:	push   ebx
   1ce1a:	mov    ebx,DWORD PTR [eax]
   1ce1c:	dec    ebx
   1ce1d:	lea    ecx,[ecx+ebx*1-0x5]
   1ce21:	mov    DWORD PTR [ebp-0x2c],ecx
   1ce24:	mov    ecx,edx
   1ce26:	sub    ecx,DWORD PTR [ebp+0xc]
   1ce29:	push   esi
   1ce2a:	mov    esi,DWORD PTR [eax+0x1c]
   1ce2d:	push   edi
   1ce2e:	mov    edi,DWORD PTR [eax+0xc]
   1ce31:	dec    edi
   1ce32:	add    ecx,edi
   1ce34:	mov    DWORD PTR [ebp-0x3c],ecx
   1ce37:	lea    ecx,[edx+edi*1-0x101]
   1ce3e:	mov    DWORD PTR [ebp-0x30],ecx
   1ce41:	mov    ecx,DWORD PTR [esi+0x28]
   1ce44:	mov    DWORD PTR [ebp-0x24],ecx
   1ce47:	mov    ecx,DWORD PTR [esi+0x2c]
   1ce4a:	mov    DWORD PTR [ebp-0x40],ecx
   1ce4d:	mov    ecx,DWORD PTR [esi+0x30]
   1ce50:	mov    DWORD PTR [ebp-0x18],ecx
   1ce53:	mov    ecx,DWORD PTR [esi+0x34]
   1ce56:	mov    DWORD PTR [ebp-0x28],ecx
   1ce59:	mov    ecx,DWORD PTR [esi+0x38]
   1ce5c:	mov    DWORD PTR [ebp-0x4],ecx
   1ce5f:	mov    ecx,DWORD PTR [esi+0x3c]
   1ce62:	mov    DWORD PTR [ebp+0xc],ecx
   1ce65:	mov    ecx,DWORD PTR [esi+0x4c]
   1ce68:	xor    edx,edx
   1ce6a:	mov    DWORD PTR [ebp-0x1c],ecx
   1ce6d:	mov    ecx,DWORD PTR [esi+0x50]
   1ce70:	inc    edx
   1ce71:	mov    DWORD PTR [ebp-0x20],ecx
   1ce74:	mov    ecx,DWORD PTR [esi+0x54]
   1ce77:	shl    edx,cl
   1ce79:	mov    ecx,DWORD PTR [esi+0x58]
   1ce7c:	dec    edx
   1ce7d:	mov    DWORD PTR [ebp-0x34],edx
   1ce80:	xor    edx,edx
   1ce82:	inc    edx
   1ce83:	shl    edx,cl
   1ce85:	dec    edx
   1ce86:	mov    DWORD PTR [ebp-0x38],edx
   1ce89:	mov    ecx,DWORD PTR [ebp+0xc]
   1ce8c:	cmp    ecx,0xf
   1ce8f:	jae    0x1ceae
   1ce91:	add    DWORD PTR [ebp+0xc],0x8
   1ce95:	inc    ebx
   1ce96:	movzx  edx,BYTE PTR [ebx]
   1ce99:	shl    edx,cl
   1ce9b:	mov    ecx,DWORD PTR [ebp+0xc]
   1ce9e:	add    DWORD PTR [ebp-0x4],edx
   1cea1:	inc    ebx
   1cea2:	movzx  edx,BYTE PTR [ebx]
   1cea5:	shl    edx,cl
   1cea7:	add    DWORD PTR [ebp-0x4],edx
   1ceaa:	add    DWORD PTR [ebp+0xc],0x8
   1ceae:	mov    ecx,DWORD PTR [ebp-0x34]
   1ceb1:	and    ecx,DWORD PTR [ebp-0x4]
   1ceb4:	mov    edx,DWORD PTR [ebp-0x1c]
   1ceb7:	mov    ecx,DWORD PTR [edx+ecx*4]
   1ceba:	mov    DWORD PTR [ebp-0x10],ecx
   1cebd:	mov    edx,DWORD PTR [ebp-0x10]
   1cec0:	shr    ecx,0x8
   1cec3:	movzx  ecx,cl
   1cec6:	shr    DWORD PTR [ebp-0x4],cl
   1cec9:	sub    DWORD PTR [ebp+0xc],ecx
   1cecc:	mov    DWORD PTR [ebp-0x8],ecx
   1cecf:	movzx  ecx,dl
   1ced2:	mov    DWORD PTR [ebp-0x8],ecx
   1ced5:	test   ecx,ecx
   1ced7:	je     0x1cf20
   1ced9:	mov    ecx,DWORD PTR [ebp-0x8]
   1cedc:	test   cl,0x10
   1cedf:	jne    0x1cf2b
   1cee1:	test   cl,0x40
   1cee4:	jne    0x1d17a
   1ceea:	xor    edx,edx
   1ceec:	inc    edx
   1ceed:	shl    edx,cl
   1ceef:	mov    ecx,DWORD PTR [ebp-0x10]
   1cef2:	shr    ecx,0x10
   1cef5:	dec    edx
   1cef6:	and    edx,DWORD PTR [ebp-0x4]
   1cef9:	add    edx,ecx
   1cefb:	mov    ecx,DWORD PTR [ebp-0x1c]
   1cefe:	mov    ecx,DWORD PTR [ecx+edx*4]
   1cf01:	mov    DWORD PTR [ebp-0x10],ecx
   1cf04:	mov    edx,DWORD PTR [ebp-0x10]
   1cf07:	shr    ecx,0x8
   1cf0a:	movzx  ecx,cl
   1cf0d:	shr    DWORD PTR [ebp-0x4],cl
   1cf10:	sub    DWORD PTR [ebp+0xc],ecx
   1cf13:	mov    DWORD PTR [ebp-0x8],ecx
   1cf16:	movzx  ecx,dl
   1cf19:	mov    DWORD PTR [ebp-0x8],ecx
   1cf1c:	test   ecx,ecx
   1cf1e:	jne    0x1ced9
   1cf20:	inc    edi
   1cf21:	shr    edx,0x10
   1cf24:	mov    BYTE PTR [edi],dl
   1cf26:	jmp    0x1d158
   1cf2b:	shr    edx,0x10
   1cf2e:	and    ecx,0xf
   1cf31:	mov    DWORD PTR [ebp-0xc],edx
   1cf34:	mov    DWORD PTR [ebp-0x8],ecx
   1cf37:	je     0x1cf63
   1cf39:	mov    ecx,DWORD PTR [ebp+0xc]
   1cf3c:	cmp    ecx,DWORD PTR [ebp-0x8]
   1cf3f:	jae    0x1cf4e
   1cf41:	inc    ebx
   1cf42:	movzx  edx,BYTE PTR [ebx]
   1cf45:	shl    edx,cl
   1cf47:	add    DWORD PTR [ebp-0x4],edx
   1cf4a:	add    DWORD PTR [ebp+0xc],0x8
   1cf4e:	mov    ecx,DWORD PTR [ebp-0x8]
   1cf51:	xor    edx,edx
   1cf53:	inc    edx
   1cf54:	shl    edx,cl
   1cf56:	dec    edx
   1cf57:	and    edx,DWORD PTR [ebp-0x4]
   1cf5a:	shr    DWORD PTR [ebp-0x4],cl
   1cf5d:	add    DWORD PTR [ebp-0xc],edx
   1cf60:	sub    DWORD PTR [ebp+0xc],ecx
   1cf63:	mov    ecx,DWORD PTR [ebp+0xc]
   1cf66:	cmp    ecx,0xf
   1cf69:	jae    0x1cf88
   1cf6b:	add    DWORD PTR [ebp+0xc],0x8
   1cf6f:	inc    ebx
   1cf70:	movzx  edx,BYTE PTR [ebx]
   1cf73:	shl    edx,cl
   1cf75:	mov    ecx,DWORD PTR [ebp+0xc]
   1cf78:	add    DWORD PTR [ebp-0x4],edx
   1cf7b:	inc    ebx
   1cf7c:	movzx  edx,BYTE PTR [ebx]
   1cf7f:	shl    edx,cl
   1cf81:	add    DWORD PTR [ebp-0x4],edx
   1cf84:	add    DWORD PTR [ebp+0xc],0x8
   1cf88:	mov    ecx,DWORD PTR [ebp-0x38]
   1cf8b:	and    ecx,DWORD PTR [ebp-0x4]
   1cf8e:	mov    edx,DWORD PTR [ebp-0x20]
   1cf91:	mov    ecx,DWORD PTR [edx+ecx*4]
   1cf94:	jmp    0x1cfb4
   1cf96:	test   cl,0x40
   1cf99:	jne    0x1d171
   1cf9f:	xor    edx,edx
   1cfa1:	inc    edx
   1cfa2:	shl    edx,cl
   1cfa4:	movzx  ecx,WORD PTR [ebp-0xe]
   1cfa8:	dec    edx
   1cfa9:	and    edx,DWORD PTR [ebp-0x4]
   1cfac:	add    edx,ecx
   1cfae:	mov    ecx,DWORD PTR [ebp-0x20]
   1cfb1:	mov    ecx,DWORD PTR [ecx+edx*4]
   1cfb4:	mov    DWORD PTR [ebp-0x10],ecx
   1cfb7:	mov    edx,DWORD PTR [ebp-0x10]
   1cfba:	shr    ecx,0x8
   1cfbd:	movzx  ecx,cl
   1cfc0:	shr    DWORD PTR [ebp-0x4],cl
   1cfc3:	sub    DWORD PTR [ebp+0xc],ecx
   1cfc6:	mov    DWORD PTR [ebp-0x8],ecx
   1cfc9:	movzx  ecx,dl
   1cfcc:	test   cl,0x10
   1cfcf:	je     0x1cf96
   1cfd1:	and    ecx,0xf
   1cfd4:	shr    edx,0x10
   1cfd7:	mov    DWORD PTR [ebp-0x14],edx
   1cfda:	mov    DWORD PTR [ebp-0x8],ecx
   1cfdd:	cmp    DWORD PTR [ebp+0xc],ecx
   1cfe0:	jae    0x1d00d
   1cfe2:	mov    ecx,DWORD PTR [ebp+0xc]
   1cfe5:	add    DWORD PTR [ebp+0xc],0x8
   1cfe9:	inc    ebx
   1cfea:	movzx  edx,BYTE PTR [ebx]
   1cfed:	shl    edx,cl
   1cfef:	mov    ecx,DWORD PTR [ebp-0x8]
   1cff2:	add    DWORD PTR [ebp-0x4],edx
   1cff5:	cmp    DWORD PTR [ebp+0xc],ecx
   1cff8:	jae    0x1d00d
   1cffa:	mov    ecx,DWORD PTR [ebp+0xc]
   1cffd:	inc    ebx
   1cffe:	movzx  edx,BYTE PTR [ebx]
   1d001:	shl    edx,cl
   1d003:	mov    ecx,DWORD PTR [ebp-0x8]
   1d006:	add    DWORD PTR [ebp-0x4],edx
   1d009:	add    DWORD PTR [ebp+0xc],0x8
   1d00d:	xor    edx,edx
   1d00f:	inc    edx
   1d010:	shl    edx,cl
   1d012:	mov    ecx,DWORD PTR [ebp-0x8]
   1d015:	sub    DWORD PTR [ebp+0xc],ecx
   1d018:	dec    edx
   1d019:	and    edx,DWORD PTR [ebp-0x4]
   1d01c:	shr    DWORD PTR [ebp-0x4],cl
   1d01f:	add    DWORD PTR [ebp-0x14],edx
   1d022:	mov    edx,DWORD PTR [ebp-0x14]
   1d025:	mov    ecx,edi
   1d027:	sub    ecx,DWORD PTR [ebp-0x3c]
   1d02a:	cmp    edx,ecx
   1d02c:	jbe    0x1d120
   1d032:	sub    edx,ecx
   1d034:	mov    DWORD PTR [ebp-0x8],edx
   1d037:	cmp    edx,DWORD PTR [ebp-0x40]
   1d03a:	ja     0x1d168
   1d040:	mov    ecx,DWORD PTR [ebp-0x28]
   1d043:	dec    ecx
   1d044:	mov    DWORD PTR [ebp-0x10],ecx
   1d047:	mov    ecx,DWORD PTR [ebp-0x18]
   1d04a:	test   ecx,ecx
   1d04c:	jne    0x1d074
   1d04e:	mov    ecx,DWORD PTR [ebp-0x24]
   1d051:	sub    ecx,edx
   1d053:	add    DWORD PTR [ebp-0x10],ecx
   1d056:	mov    ecx,edx
   1d058:	cmp    ecx,DWORD PTR [ebp-0xc]
   1d05b:	jae    0x1d0e9
   1d061:	sub    DWORD PTR [ebp-0xc],ecx
   1d064:	mov    ecx,DWORD PTR [ebp-0x10]
   1d067:	inc    ecx
   1d068:	mov    dl,BYTE PTR [ecx]
   1d06a:	inc    edi
   1d06b:	dec    DWORD PTR [ebp-0x8]
   1d06e:	mov    BYTE PTR [edi],dl
   1d070:	jne    0x1d067
   1d072:	jmp    0x1d0bf
   1d074:	cmp    ecx,edx
   1d076:	jae    0x1d0c9
   1d078:	sub    ecx,edx
   1d07a:	add    ecx,DWORD PTR [ebp-0x24]
   1d07d:	add    DWORD PTR [ebp-0x10],ecx
   1d080:	mov    ecx,DWORD PTR [ebp-0x8]
   1d083:	sub    ecx,DWORD PTR [ebp-0x18]
   1d086:	cmp    ecx,DWORD PTR [ebp-0xc]
   1d089:	jae    0x1d0e9
   1d08b:	sub    DWORD PTR [ebp-0xc],ecx
   1d08e:	inc    DWORD PTR [ebp-0x10]
   1d091:	mov    edx,DWORD PTR [ebp-0x10]
   1d094:	mov    dl,BYTE PTR [edx]
   1d096:	inc    edi
   1d097:	dec    ecx
   1d098:	mov    BYTE PTR [edi],dl
   1d09a:	jne    0x1d08e
   1d09c:	mov    ecx,DWORD PTR [ebp-0x28]
   1d09f:	dec    ecx
   1d0a0:	mov    DWORD PTR [ebp-0x10],ecx
   1d0a3:	mov    ecx,DWORD PTR [ebp-0x18]
   1d0a6:	cmp    ecx,DWORD PTR [ebp-0xc]
   1d0a9:	jae    0x1d0e9
   1d0ab:	sub    DWORD PTR [ebp-0xc],ecx
   1d0ae:	mov    DWORD PTR [ebp-0x8],ecx
   1d0b1:	mov    ecx,DWORD PTR [ebp-0x10]
   1d0b4:	inc    ecx
   1d0b5:	mov    dl,BYTE PTR [ecx]
   1d0b7:	inc    edi
   1d0b8:	dec    DWORD PTR [ebp-0x8]
   1d0bb:	mov    BYTE PTR [edi],dl
   1d0bd:	jne    0x1d0b4
   1d0bf:	mov    ecx,edi
   1d0c1:	sub    ecx,DWORD PTR [ebp-0x14]
   1d0c4:	mov    DWORD PTR [ebp-0x10],ecx
   1d0c7:	jmp    0x1d0ec
   1d0c9:	sub    ecx,edx
   1d0cb:	add    DWORD PTR [ebp-0x10],ecx
   1d0ce:	mov    ecx,DWORD PTR [ebp-0x8]
   1d0d1:	cmp    ecx,DWORD PTR [ebp-0xc]
   1d0d4:	jae    0x1d0e9
   1d0d6:	sub    DWORD PTR [ebp-0xc],ecx
   1d0d9:	mov    ecx,DWORD PTR [ebp-0x10]
   1d0dc:	inc    ecx
   1d0dd:	mov    dl,BYTE PTR [ecx]
   1d0df:	inc    edi
   1d0e0:	dec    DWORD PTR [ebp-0x8]
   1d0e3:	mov    BYTE PTR [edi],dl
   1d0e5:	jne    0x1d0dc
   1d0e7:	jmp    0x1d0bf
   1d0e9:	mov    ecx,DWORD PTR [ebp-0x10]
   1d0ec:	mov    edx,DWORD PTR [ebp-0xc]
   1d0ef:	cmp    edx,0x2
   1d0f2:	jbe    0x1d140
   1d0f4:	lea    eax,[edx-0x3]
   1d0f7:	push   0x3
   1d0f9:	xor    edx,edx
   1d0fb:	pop    ecx
   1d0fc:	div    ecx
   1d0fe:	mov    ecx,DWORD PTR [ebp-0x10]
   1d101:	inc    eax
   1d102:	sub    DWORD PTR [ebp-0xc],0x3
   1d106:	inc    ecx
   1d107:	mov    dl,BYTE PTR [ecx]
   1d109:	inc    edi
   1d10a:	mov    BYTE PTR [edi],dl
   1d10c:	inc    ecx
   1d10d:	mov    dl,BYTE PTR [ecx]
   1d10f:	inc    edi
   1d110:	inc    ecx
   1d111:	mov    BYTE PTR [edi],dl
   1d113:	mov    dl,BYTE PTR [ecx]
   1d115:	inc    edi
   1d116:	dec    eax
   1d117:	mov    BYTE PTR [edi],dl
   1d119:	jne    0x1d102
   1d11b:	mov    eax,DWORD PTR [ebp+0x8]
   1d11e:	jmp    0x1d140
   1d120:	mov    ecx,edi
   1d122:	sub    ecx,edx
   1d124:	sub    DWORD PTR [ebp-0xc],0x3
   1d128:	inc    ecx
   1d129:	mov    dl,BYTE PTR [ecx]
   1d12b:	inc    edi
   1d12c:	mov    BYTE PTR [edi],dl
   1d12e:	inc    ecx
   1d12f:	mov    dl,BYTE PTR [ecx]
   1d131:	inc    edi
   1d132:	inc    ecx
   1d133:	mov    BYTE PTR [edi],dl
   1d135:	mov    dl,BYTE PTR [ecx]
   1d137:	inc    edi
   1d138:	cmp    DWORD PTR [ebp-0xc],0x2
   1d13c:	mov    BYTE PTR [edi],dl
   1d13e:	ja     0x1d124
   1d140:	cmp    DWORD PTR [ebp-0xc],0x0
   1d144:	je     0x1d158
   1d146:	inc    ecx
   1d147:	mov    dl,BYTE PTR [ecx]
   1d149:	inc    edi
   1d14a:	cmp    DWORD PTR [ebp-0xc],0x1
   1d14e:	mov    BYTE PTR [edi],dl
   1d150:	jbe    0x1d158
   1d152:	mov    cl,BYTE PTR [ecx+0x1]
   1d155:	inc    edi
   1d156:	mov    BYTE PTR [edi],cl
   1d158:	cmp    ebx,DWORD PTR [ebp-0x2c]
   1d15b:	jae    0x1d194
   1d15d:	cmp    edi,DWORD PTR [ebp-0x30]
   1d160:	jb     0x1ce89
   1d166:	jmp    0x1d194
   1d168:	mov    DWORD PTR [eax+0x18],0x1edba
   1d16f:	jmp    0x1d18e
   1d171:	mov    DWORD PTR [eax+0x18],0x1edd8
   1d178:	jmp    0x1d18e
   1d17a:	test   cl,0x20
   1d17d:	je     0x1d187
   1d17f:	mov    DWORD PTR [esi],0xb
   1d185:	jmp    0x1d194
   1d187:	mov    DWORD PTR [eax+0x18],0x1edee
   1d18e:	mov    DWORD PTR [esi],0x1b
   1d194:	mov    ecx,DWORD PTR [ebp+0xc]
   1d197:	shr    ecx,0x3
   1d19a:	sub    ebx,ecx
   1d19c:	shl    ecx,0x3
   1d19f:	sub    DWORD PTR [ebp+0xc],ecx
   1d1a2:	xor    ecx,ecx
   1d1a4:	inc    ecx
   1d1a5:	mov    edx,ecx
   1d1a7:	mov    ecx,DWORD PTR [ebp+0xc]
   1d1aa:	shl    edx,cl
   1d1ac:	dec    edx
   1d1ad:	mov    ecx,edx
   1d1af:	mov    edx,DWORD PTR [ebp-0x4]
   1d1b2:	and    edx,ecx
   1d1b4:	lea    ecx,[ebx+0x1]
   1d1b7:	mov    DWORD PTR [eax],ecx
   1d1b9:	lea    ecx,[edi+0x1]
   1d1bc:	mov    DWORD PTR [eax+0xc],ecx
   1d1bf:	mov    ecx,DWORD PTR [ebp-0x2c]
   1d1c2:	sub    ecx,ebx
   1d1c4:	add    ecx,0x5
   1d1c7:	mov    DWORD PTR [eax+0x4],ecx
   1d1ca:	mov    ecx,DWORD PTR [ebp-0x30]
   1d1cd:	sub    ecx,edi
   1d1cf:	add    ecx,0x101
   1d1d5:	mov    DWORD PTR [eax+0x10],ecx
   1d1d8:	mov    eax,DWORD PTR [ebp+0xc]
   1d1db:	pop    edi
   1d1dc:	mov    DWORD PTR [esi+0x38],edx
   1d1df:	mov    DWORD PTR [esi+0x3c],eax
   1d1e2:	pop    esi
   1d1e3:	pop    ebx
   1d1e4:	leave  
   1d1e5:	ret    0x8
   1d1e8:	int3   
   1d1e9:	int3   
   1d1ea:	int3   
   1d1eb:	int3   
   1d1ec:	int3   
   1d1ed:	int3   
   1d1ee:	mov    edi,edi
   1d1f0:	push   ebp
   1d1f1:	mov    ebp,esp
   1d1f3:	sub    esp,0x90
   1d1f9:	mov    eax,ds:0x7751c
   1d1fe:	xor    eax,ebp
   1d200:	mov    DWORD PTR [ebp-0x4],eax
   1d203:	mov    eax,DWORD PTR [ebp+0xc]
   1d206:	mov    edx,DWORD PTR [ebp+0x18]
   1d209:	mov    DWORD PTR [ebp-0x7c],eax
   1d20c:	mov    eax,DWORD PTR [ebp+0x1c]
   1d20f:	push   ebx
   1d210:	mov    DWORD PTR [ebp-0x4c],eax
   1d213:	xor    eax,eax
   1d215:	push   esi
   1d216:	mov    esi,DWORD PTR [ebp+0x14]
   1d219:	movzx  ebx,ax
   1d21c:	push   edi
   1d21d:	mov    eax,ebx
   1d21f:	shl    ebx,0x10
   1d222:	push   0x8
   1d224:	or     eax,ebx
   1d226:	pop    ecx
   1d227:	lea    edi,[ebp-0x24]
   1d22a:	rep stos DWORD PTR es:[edi],eax
   1d22c:	xor    edi,edi
   1d22e:	xor    ecx,ecx
   1d230:	mov    DWORD PTR [ebp-0x90],edx
   1d236:	cmp    DWORD PTR [ebp+0x10],edi
   1d239:	jbe    0x1d24f
   1d23b:	mov    eax,DWORD PTR [ebp-0x7c]
   1d23e:	movzx  eax,WORD PTR [eax+ecx*2]
   1d242:	lea    eax,[ebp+eax*2-0x24]
   1d246:	inc    WORD PTR [eax]
   1d249:	inc    ecx
   1d24a:	cmp    ecx,DWORD PTR [ebp+0x10]
   1d24d:	jb     0x1d23b
   1d24f:	mov    ecx,DWORD PTR [edx]
   1d251:	push   0xf
   1d253:	pop    eax
   1d254:	mov    DWORD PTR [ebp-0x54],ecx
   1d257:	mov    DWORD PTR [ebp-0x60],eax
   1d25a:	cmp    WORD PTR [ebp+eax*2-0x24],di
   1d25f:	jne    0x1d26a
   1d261:	dec    eax
   1d262:	mov    DWORD PTR [ebp-0x60],eax
   1d265:	cmp    eax,0x1
   1d268:	jae    0x1d25a
   1d26a:	cmp    ecx,eax
   1d26c:	jbe    0x1d271
   1d26e:	mov    DWORD PTR [ebp-0x54],eax
   1d271:	cmp    eax,edi
   1d273:	jne    0x1d29f
   1d275:	mov    ecx,DWORD PTR [esi]
   1d277:	xor    eax,eax
   1d279:	mov    BYTE PTR [ebp-0x48],0x40
   1d27d:	mov    BYTE PTR [ebp-0x47],0x1
   1d281:	mov    WORD PTR [ebp-0x46],ax
   1d285:	mov    eax,DWORD PTR [ebp-0x48]
   1d288:	mov    DWORD PTR [ecx],eax
   1d28a:	add    DWORD PTR [esi],0x4
   1d28d:	mov    ecx,DWORD PTR [esi]
   1d28f:	mov    DWORD PTR [ecx],eax
   1d291:	add    DWORD PTR [esi],0x4
   1d294:	mov    DWORD PTR [edx],0x1
   1d29a:	jmp    0x1d5db
   1d29f:	xor    ecx,ecx
   1d2a1:	inc    ecx
   1d2a2:	mov    edx,ecx
   1d2a4:	cmp    WORD PTR [ebp+edx*2-0x24],di
   1d2a9:	jne    0x1d2b1
   1d2ab:	inc    edx
   1d2ac:	cmp    edx,0xf
   1d2af:	jbe    0x1d2a4
   1d2b1:	cmp    DWORD PTR [ebp-0x54],edx
   1d2b4:	jae    0x1d2b9
   1d2b6:	mov    DWORD PTR [ebp-0x54],edx
   1d2b9:	mov    edi,ecx
   1d2bb:	movzx  ebx,WORD PTR [ebp+ecx*2-0x24]
   1d2c0:	add    edi,edi
   1d2c2:	sub    edi,ebx
   1d2c4:	js     0x1d350
   1d2ca:	inc    ecx
   1d2cb:	cmp    ecx,0xf
   1d2ce:	jbe    0x1d2bb
   1d2d0:	xor    ebx,ebx
   1d2d2:	cmp    edi,ebx
   1d2d4:	jle    0x1d2e0
   1d2d6:	cmp    DWORD PTR [ebp+0x8],ebx
   1d2d9:	je     0x1d350
   1d2db:	cmp    eax,0x1
   1d2de:	jne    0x1d350
   1d2e0:	xor    eax,eax
   1d2e2:	push   0x2
   1d2e4:	mov    WORD PTR [ebp-0x42],ax
   1d2e8:	pop    ecx
   1d2e9:	mov    ax,WORD PTR [ebp+ecx*1-0x44]
   1d2ee:	add    ax,WORD PTR [ebp+ecx*1-0x24]
   1d2f3:	inc    ecx
   1d2f4:	mov    WORD PTR [ebp+ecx*1-0x43],ax
   1d2f9:	inc    ecx
   1d2fa:	cmp    ecx,0x1e
   1d2fd:	jb     0x1d2e9
   1d2ff:	mov    eax,DWORD PTR [ebp-0x4c]
   1d302:	xor    edi,edi
   1d304:	cmp    DWORD PTR [ebp+0x10],ebx
   1d307:	jbe    0x1d332
   1d309:	mov    ecx,DWORD PTR [ebp-0x7c]
   1d30c:	lea    ecx,[ecx+edi*2]
   1d30f:	cmp    WORD PTR [ecx],bx
   1d312:	je     0x1d32c
   1d314:	movzx  ebx,WORD PTR [ecx]
   1d317:	movzx  ebx,WORD PTR [ebp+ebx*2-0x44]
   1d31c:	mov    WORD PTR [eax+ebx*2],di
   1d320:	movzx  ecx,WORD PTR [ecx]
   1d323:	lea    ecx,[ebp+ecx*2-0x44]
   1d327:	inc    WORD PTR [ecx]
   1d32a:	xor    ebx,ebx
   1d32c:	inc    edi
   1d32d:	cmp    edi,DWORD PTR [ebp+0x10]
   1d330:	jb     0x1d309
   1d332:	mov    ecx,DWORD PTR [ebp+0x8]
   1d335:	sub    ecx,ebx
   1d337:	je     0x1d37a
   1d339:	dec    ecx
   1d33a:	je     0x1d358
   1d33c:	or     DWORD PTR [ebp-0x68],0xffffffff
   1d340:	mov    DWORD PTR [ebp-0x6c],0x750f0
   1d347:	mov    DWORD PTR [ebp-0x78],0x75130
   1d34e:	jmp    0x1d387
   1d350:	or     eax,0xffffffff
   1d353:	jmp    0x1d5dd
   1d358:	mov    ecx,0x202
   1d35d:	mov    edi,0x75070
   1d362:	sub    edi,ecx
   1d364:	mov    DWORD PTR [ebp-0x6c],edi
   1d367:	mov    edi,0x750b0
   1d36c:	sub    edi,ecx
   1d36e:	mov    DWORD PTR [ebp-0x78],edi
   1d371:	mov    DWORD PTR [ebp-0x68],0x100
   1d378:	jmp    0x1d387
   1d37a:	mov    DWORD PTR [ebp-0x78],eax
   1d37d:	mov    DWORD PTR [ebp-0x6c],eax
   1d380:	mov    DWORD PTR [ebp-0x68],0x13
   1d387:	mov    ecx,DWORD PTR [ebp-0x54]
   1d38a:	or     DWORD PTR [ebp-0x74],0xffffffff
   1d38e:	mov    edi,DWORD PTR [esi]
   1d390:	mov    eax,edx
   1d392:	xor    edx,edx
   1d394:	inc    edx
   1d395:	shl    edx,cl
   1d397:	cmp    DWORD PTR [ebp+0x8],0x1
   1d39b:	mov    DWORD PTR [ebp-0x5c],ebx
   1d39e:	mov    DWORD PTR [ebp-0x84],eax
   1d3a4:	lea    ecx,[edx-0x1]
   1d3a7:	mov    DWORD PTR [ebp-0x50],ebx
   1d3aa:	mov    DWORD PTR [ebp-0x80],edx
   1d3ad:	mov    DWORD PTR [ebp-0x64],edx
   1d3b0:	mov    DWORD PTR [ebp-0x88],ecx
   1d3b6:	jne    0x1d3c8
   1d3b8:	cmp    edx,0x5b0
   1d3be:	jb     0x1d3c8
   1d3c0:	xor    eax,eax
   1d3c2:	inc    eax
   1d3c3:	jmp    0x1d5dd
   1d3c8:	mov    ecx,DWORD PTR [ebp-0x4c]
   1d3cb:	mov    DWORD PTR [ebp-0x58],ecx
   1d3ce:	mov    cl,al
   1d3d0:	sub    cl,BYTE PTR [ebp-0x50]
   1d3d3:	mov    BYTE PTR [ebp-0x47],cl
   1d3d6:	mov    ecx,DWORD PTR [ebp-0x58]
   1d3d9:	movzx  edx,WORD PTR [ecx]
   1d3dc:	movzx  ecx,dx
   1d3df:	cmp    ecx,DWORD PTR [ebp-0x68]
   1d3e2:	jge    0x1d3ee
   1d3e4:	mov    BYTE PTR [ebp-0x48],0x0
   1d3e8:	mov    WORD PTR [ebp-0x46],dx
   1d3ec:	jmp    0x1d414
   1d3ee:	jle    0x1d40a
   1d3f0:	mov    ecx,DWORD PTR [ebp-0x58]
   1d3f3:	movzx  ecx,WORD PTR [ecx]
   1d3f6:	mov    edx,DWORD PTR [ebp-0x78]
   1d3f9:	add    ecx,ecx
   1d3fb:	mov    dl,BYTE PTR [ecx+edx*1]
   1d3fe:	mov    BYTE PTR [ebp-0x48],dl
   1d401:	mov    edx,DWORD PTR [ebp-0x6c]
   1d404:	mov    cx,WORD PTR [ecx+edx*1]
   1d408:	jmp    0x1d410
   1d40a:	mov    BYTE PTR [ebp-0x48],0x60
   1d40e:	xor    ecx,ecx
   1d410:	mov    WORD PTR [ebp-0x46],cx
   1d414:	xor    edx,edx
   1d416:	mov    ecx,eax
   1d418:	sub    ecx,DWORD PTR [ebp-0x50]
   1d41b:	inc    edx
   1d41c:	shl    edx,cl
   1d41e:	mov    ecx,DWORD PTR [ebp-0x80]
   1d421:	mov    DWORD PTR [ebp-0x4c],ecx
   1d424:	mov    DWORD PTR [ebp-0x70],ecx
   1d427:	mov    ecx,DWORD PTR [ebp-0x50]
   1d42a:	shr    ebx,cl
   1d42c:	add    ebx,DWORD PTR [ebp-0x4c]
   1d42f:	lea    ecx,[edi+ebx*4]
   1d432:	sub    DWORD PTR [ebp-0x4c],edx
   1d435:	mov    ebx,edx
   1d437:	shl    ebx,0x2
   1d43a:	sub    ecx,ebx
   1d43c:	cmp    DWORD PTR [ebp-0x4c],0x0
   1d440:	mov    ebx,DWORD PTR [ebp-0x48]
   1d443:	mov    DWORD PTR [ecx],ebx
   1d445:	jne    0x1d432
   1d447:	xor    edx,edx
   1d449:	lea    ecx,[eax-0x1]
   1d44c:	inc    edx
   1d44d:	shl    edx,cl
   1d44f:	mov    ecx,DWORD PTR [ebp-0x5c]
   1d452:	jmp    0x1d456
   1d454:	shr    edx,1
   1d456:	test   ecx,edx
   1d458:	jne    0x1d454
   1d45a:	test   edx,edx
   1d45c:	je     0x1d467
   1d45e:	lea    ebx,[edx-0x1]
   1d461:	and    ebx,ecx
   1d463:	add    ebx,edx
   1d465:	jmp    0x1d469
   1d467:	xor    ebx,ebx
   1d469:	add    DWORD PTR [ebp-0x58],0x2
   1d46d:	lea    ecx,[ebp+eax*2-0x24]
   1d471:	mov    edx,0xffff
   1d476:	add    WORD PTR [ecx],dx
   1d479:	movzx  ecx,WORD PTR [ecx]
   1d47c:	mov    DWORD PTR [ebp-0x5c],ebx
   1d47f:	test   cx,cx
   1d482:	jne    0x1d4a0
   1d484:	cmp    eax,DWORD PTR [ebp-0x60]
   1d487:	je     0x1d563
   1d48d:	mov    eax,DWORD PTR [ebp-0x58]
   1d490:	movzx  eax,WORD PTR [eax]
   1d493:	mov    ecx,DWORD PTR [ebp-0x7c]
   1d496:	movzx  eax,WORD PTR [ecx+eax*2]
   1d49a:	mov    DWORD PTR [ebp-0x84],eax
   1d4a0:	mov    edx,DWORD PTR [ebp-0x54]
   1d4a3:	cmp    eax,edx
   1d4a5:	jbe    0x1d3ce
   1d4ab:	mov    ecx,DWORD PTR [ebp-0x88]
   1d4b1:	and    ecx,ebx
   1d4b3:	mov    DWORD PTR [ebp-0x8c],ecx
   1d4b9:	cmp    ecx,DWORD PTR [ebp-0x74]
   1d4bc:	je     0x1d3ce
   1d4c2:	cmp    DWORD PTR [ebp-0x50],0x0
   1d4c6:	jne    0x1d4cb
   1d4c8:	mov    DWORD PTR [ebp-0x50],edx
   1d4cb:	mov    ecx,DWORD PTR [ebp-0x70]
   1d4ce:	lea    edi,[edi+ecx*4]
   1d4d1:	mov    ecx,eax
   1d4d3:	mov    eax,DWORD PTR [ebp-0x50]
   1d4d6:	xor    edx,edx
   1d4d8:	sub    ecx,eax
   1d4da:	inc    edx
   1d4db:	add    eax,ecx
   1d4dd:	shl    edx,cl
   1d4df:	cmp    eax,DWORD PTR [ebp-0x60]
   1d4e2:	jae    0x1d50c
   1d4e4:	mov    DWORD PTR [ebp-0x4c],eax
   1d4e7:	lea    eax,[ebp+eax*2-0x24]
   1d4eb:	jmp    0x1d4f0
   1d4ed:	mov    eax,DWORD PTR [ebp-0x70]
   1d4f0:	movzx  ebx,WORD PTR [eax]
   1d4f3:	sub    edx,ebx
   1d4f5:	test   edx,edx
   1d4f7:	jle    0x1d50c
   1d4f9:	inc    ecx
   1d4fa:	inc    DWORD PTR [ebp-0x4c]
   1d4fd:	inc    eax
   1d4fe:	inc    eax
   1d4ff:	mov    DWORD PTR [ebp-0x70],eax
   1d502:	mov    eax,DWORD PTR [ebp-0x4c]
   1d505:	add    edx,edx
   1d507:	cmp    eax,DWORD PTR [ebp-0x60]
   1d50a:	jb     0x1d4ed
   1d50c:	xor    eax,eax
   1d50e:	inc    eax
   1d50f:	mov    edx,eax
   1d511:	shl    edx,cl
   1d513:	add    DWORD PTR [ebp-0x64],edx
   1d516:	mov    DWORD PTR [ebp-0x80],edx
   1d519:	cmp    DWORD PTR [ebp+0x8],eax
   1d51c:	jne    0x1d52b
   1d51e:	cmp    DWORD PTR [ebp-0x64],0x5b0
   1d525:	jae    0x1d5dd
   1d52b:	mov    eax,DWORD PTR [ebp-0x8c]
   1d531:	mov    ebx,DWORD PTR [ebp-0x5c]
   1d534:	mov    edx,eax
   1d536:	mov    DWORD PTR [ebp-0x74],eax
   1d539:	mov    eax,DWORD PTR [esi]
   1d53b:	shl    edx,0x2
   1d53e:	mov    BYTE PTR [edx+eax*1],cl
   1d541:	mov    eax,DWORD PTR [esi]
   1d543:	mov    cl,BYTE PTR [ebp-0x54]
   1d546:	mov    BYTE PTR [edx+eax*1+0x1],cl
   1d54a:	mov    eax,DWORD PTR [esi]
   1d54c:	mov    ecx,edi
   1d54e:	sub    ecx,eax
   1d550:	sar    ecx,0x2
   1d553:	mov    WORD PTR [edx+eax*1+0x2],cx
   1d558:	mov    eax,DWORD PTR [ebp-0x84]
   1d55e:	jmp    0x1d3ce
   1d563:	mov    cl,al
   1d565:	sub    cl,BYTE PTR [ebp-0x50]
   1d568:	mov    BYTE PTR [ebp-0x48],0x40
   1d56c:	mov    BYTE PTR [ebp-0x47],cl
   1d56f:	xor    ecx,ecx
   1d571:	mov    WORD PTR [ebp-0x46],cx
   1d575:	jmp    0x1d5c4
   1d577:	cmp    DWORD PTR [ebp-0x50],0x0
   1d57b:	je     0x1d596
   1d57d:	mov    ecx,DWORD PTR [ebp-0x88]
   1d583:	and    ecx,ebx
   1d585:	cmp    ecx,DWORD PTR [ebp-0x74]
   1d588:	je     0x1d596
   1d58a:	mov    eax,DWORD PTR [ebp-0x54]
   1d58d:	and    DWORD PTR [ebp-0x50],0x0
   1d591:	mov    edi,DWORD PTR [esi]
   1d593:	mov    BYTE PTR [ebp-0x47],al
   1d596:	mov    ecx,DWORD PTR [ebp-0x50]
   1d599:	mov    edx,ebx
   1d59b:	shr    edx,cl
   1d59d:	mov    ecx,DWORD PTR [ebp-0x48]
   1d5a0:	mov    DWORD PTR [edi+edx*4],ecx
   1d5a3:	xor    edx,edx
   1d5a5:	lea    ecx,[eax-0x1]
   1d5a8:	inc    edx
   1d5a9:	shl    edx,cl
   1d5ab:	jmp    0x1d5af
   1d5ad:	shr    edx,1
   1d5af:	test   ebx,edx
   1d5b1:	jne    0x1d5ad
   1d5b3:	test   edx,edx
   1d5b5:	je     0x1d5c2
   1d5b7:	lea    ecx,[edx-0x1]
   1d5ba:	and    ecx,ebx
   1d5bc:	add    ecx,edx
   1d5be:	mov    ebx,ecx
   1d5c0:	jmp    0x1d5c4
   1d5c2:	xor    ebx,ebx
   1d5c4:	test   ebx,ebx
   1d5c6:	jne    0x1d577
   1d5c8:	mov    eax,DWORD PTR [ebp-0x64]
   1d5cb:	mov    ecx,DWORD PTR [ebp-0x54]
   1d5ce:	shl    eax,0x2
   1d5d1:	add    DWORD PTR [esi],eax
   1d5d3:	mov    eax,DWORD PTR [ebp-0x90]
   1d5d9:	mov    DWORD PTR [eax],ecx
   1d5db:	xor    eax,eax
   1d5dd:	mov    ecx,DWORD PTR [ebp-0x4]
   1d5e0:	pop    edi
   1d5e1:	pop    esi
   1d5e2:	xor    ecx,ebp
   1d5e4:	pop    ebx
   1d5e5:	call   0x1dae7
   1d5ea:	leave  
   1d5eb:	ret    0x18
   1d5ee:	int3   
   1d5ef:	int3   
   1d5f0:	int3   
   1d5f1:	int3   
   1d5f2:	int3   
   1d5f3:	int3   
   1d5f4:	mov    edi,edi
   1d5f6:	push   ebp
   1d5f7:	mov    ebp,esp
   1d5f9:	push   ebx
   1d5fa:	mov    ebx,DWORD PTR [ebp+0x10]
   1d5fd:	push   esi
   1d5fe:	mov    esi,DWORD PTR [ebp+0x8]
   1d601:	push   edi
   1d602:	xor    eax,eax
   1d604:	mov    edi,esi
   1d606:	inc    eax
   1d607:	shr    edi,0x10
   1d60a:	and    esi,0xffff
   1d610:	cmp    ebx,eax
   1d612:	jne    0x1d638
   1d614:	mov    eax,DWORD PTR [ebp+0xc]
   1d617:	movzx  eax,BYTE PTR [eax]
   1d61a:	add    esi,eax
   1d61c:	mov    eax,0xfff1
   1d621:	cmp    esi,eax
   1d623:	jb     0x1d627
   1d625:	sub    esi,eax
   1d627:	add    edi,esi
   1d629:	cmp    edi,eax
   1d62b:	jb     0x1d80a
   1d631:	sub    edi,eax
   1d633:	jmp    0x1d80a
   1d638:	mov    ecx,DWORD PTR [ebp+0xc]
   1d63b:	test   ecx,ecx
   1d63d:	je     0x1d811
   1d643:	cmp    ebx,0x10
   1d646:	jb     0x1d7cd
   1d64c:	cmp    ebx,0x15b0
   1d652:	jb     0x1d720
   1d658:	mov    eax,ebx
   1d65a:	mov    ebx,0x15b0
   1d65f:	xor    edx,edx
   1d661:	div    ebx
   1d663:	mov    ebx,DWORD PTR [ebp+0x10]
   1d666:	mov    DWORD PTR [ebp+0xc],eax
   1d669:	sub    ebx,0x15b0
   1d66f:	mov    eax,0x15b
   1d674:	movzx  edx,BYTE PTR [ecx]
   1d677:	add    esi,edx
   1d679:	movzx  edx,BYTE PTR [ecx+0x1]
   1d67d:	add    edi,esi
   1d67f:	add    esi,edx
   1d681:	movzx  edx,BYTE PTR [ecx+0x2]
   1d685:	add    edi,esi
   1d687:	add    esi,edx
   1d689:	movzx  edx,BYTE PTR [ecx+0x3]
   1d68d:	add    edi,esi
   1d68f:	add    esi,edx
   1d691:	movzx  edx,BYTE PTR [ecx+0x4]
   1d695:	add    edi,esi
   1d697:	add    esi,edx
   1d699:	movzx  edx,BYTE PTR [ecx+0x5]
   1d69d:	add    edi,esi
   1d69f:	add    esi,edx
   1d6a1:	movzx  edx,BYTE PTR [ecx+0x6]
   1d6a5:	add    edi,esi
   1d6a7:	add    esi,edx
   1d6a9:	movzx  edx,BYTE PTR [ecx+0x7]
   1d6ad:	add    edi,esi
   1d6af:	add    esi,edx
   1d6b1:	movzx  edx,BYTE PTR [ecx+0x8]
   1d6b5:	add    edi,esi
   1d6b7:	add    esi,edx
   1d6b9:	movzx  edx,BYTE PTR [ecx+0x9]
   1d6bd:	add    edi,esi
   1d6bf:	add    esi,edx
   1d6c1:	movzx  edx,BYTE PTR [ecx+0xa]
   1d6c5:	add    edi,esi
   1d6c7:	add    esi,edx
   1d6c9:	movzx  edx,BYTE PTR [ecx+0xb]
   1d6cd:	add    edi,esi
   1d6cf:	add    esi,edx
   1d6d1:	movzx  edx,BYTE PTR [ecx+0xc]
   1d6d5:	add    edi,esi
   1d6d7:	add    esi,edx
   1d6d9:	movzx  edx,BYTE PTR [ecx+0xd]
   1d6dd:	add    edi,esi
   1d6df:	add    esi,edx
   1d6e1:	movzx  edx,BYTE PTR [ecx+0xe]
   1d6e5:	add    edi,esi
   1d6e7:	add    esi,edx
   1d6e9:	movzx  edx,BYTE PTR [ecx+0xf]
   1d6ed:	add    edi,esi
   1d6ef:	add    esi,edx
   1d6f1:	add    edi,esi
   1d6f3:	add    ecx,0x10
   1d6f6:	dec    eax
   1d6f7:	jne    0x1d674
   1d6fd:	mov    eax,esi
   1d6ff:	xor    edx,edx
   1d701:	mov    esi,0xfff1
   1d706:	div    esi
   1d708:	mov    eax,edi
   1d70a:	mov    edi,0xfff1
   1d70f:	mov    esi,edx
   1d711:	xor    edx,edx
   1d713:	div    edi
   1d715:	dec    DWORD PTR [ebp+0xc]
   1d718:	mov    edi,edx
   1d71a:	jne    0x1d669
   1d720:	test   ebx,ebx
   1d722:	je     0x1d80a
   1d728:	cmp    ebx,0x10
   1d72b:	jb     0x1d7ef
   1d731:	mov    eax,ebx
   1d733:	shr    eax,0x4
   1d736:	movzx  edx,BYTE PTR [ecx]
   1d739:	add    esi,edx
   1d73b:	movzx  edx,BYTE PTR [ecx+0x1]
   1d73f:	add    edi,esi
   1d741:	add    esi,edx
   1d743:	movzx  edx,BYTE PTR [ecx+0x2]
   1d747:	add    edi,esi
   1d749:	add    esi,edx
   1d74b:	movzx  edx,BYTE PTR [ecx+0x3]
   1d74f:	add    edi,esi
   1d751:	add    esi,edx
   1d753:	movzx  edx,BYTE PTR [ecx+0x4]
   1d757:	add    edi,esi
   1d759:	add    esi,edx
   1d75b:	movzx  edx,BYTE PTR [ecx+0x5]
   1d75f:	add    edi,esi
   1d761:	add    esi,edx
   1d763:	movzx  edx,BYTE PTR [ecx+0x6]
   1d767:	add    edi,esi
   1d769:	add    esi,edx
   1d76b:	movzx  edx,BYTE PTR [ecx+0x7]
   1d76f:	add    edi,esi
   1d771:	add    esi,edx
   1d773:	movzx  edx,BYTE PTR [ecx+0x8]
   1d777:	add    edi,esi
   1d779:	add    esi,edx
   1d77b:	movzx  edx,BYTE PTR [ecx+0x9]
   1d77f:	add    edi,esi
   1d781:	add    esi,edx
   1d783:	movzx  edx,BYTE PTR [ecx+0xa]
   1d787:	add    edi,esi
   1d789:	add    esi,edx
   1d78b:	movzx  edx,BYTE PTR [ecx+0xb]
   1d78f:	add    edi,esi
   1d791:	add    esi,edx
   1d793:	movzx  edx,BYTE PTR [ecx+0xc]
   1d797:	add    edi,esi
   1d799:	add    esi,edx
   1d79b:	movzx  edx,BYTE PTR [ecx+0xd]
   1d79f:	add    edi,esi
   1d7a1:	add    esi,edx
   1d7a3:	movzx  edx,BYTE PTR [ecx+0xe]
   1d7a7:	add    edi,esi
   1d7a9:	add    esi,edx
   1d7ab:	movzx  edx,BYTE PTR [ecx+0xf]
   1d7af:	add    edi,esi
   1d7b1:	add    esi,edx
   1d7b3:	sub    ebx,0x10
   1d7b6:	add    edi,esi
   1d7b8:	add    ecx,0x10
   1d7bb:	dec    eax
   1d7bc:	jne    0x1d736
   1d7c2:	jmp    0x1d7ef
   1d7c4:	movzx  eax,BYTE PTR [ecx]
   1d7c7:	dec    ebx
   1d7c8:	add    esi,eax
   1d7ca:	inc    ecx
   1d7cb:	add    edi,esi
   1d7cd:	test   ebx,ebx
   1d7cf:	jne    0x1d7c4
   1d7d1:	mov    ecx,0xfff1
   1d7d6:	cmp    esi,ecx
   1d7d8:	jb     0x1d7dc
   1d7da:	sub    esi,ecx
   1d7dc:	mov    eax,edi
   1d7de:	xor    edx,edx
   1d7e0:	div    ecx
   1d7e2:	mov    eax,edx
   1d7e4:	jmp    0x1d80c
   1d7e6:	movzx  eax,BYTE PTR [ecx]
   1d7e9:	dec    ebx
   1d7ea:	add    esi,eax
   1d7ec:	inc    ecx
   1d7ed:	add    edi,esi
   1d7ef:	test   ebx,ebx
   1d7f1:	jne    0x1d7e6
   1d7f3:	mov    eax,esi
   1d7f5:	mov    ecx,0xfff1
   1d7fa:	xor    edx,edx
   1d7fc:	mov    esi,ecx
   1d7fe:	div    esi
   1d800:	mov    eax,edi
   1d802:	mov    esi,edx
   1d804:	xor    edx,edx
   1d806:	div    ecx
   1d808:	mov    edi,edx
   1d80a:	mov    eax,edi
   1d80c:	shl    eax,0x10
   1d80f:	or     eax,esi
   1d811:	pop    edi
   1d812:	pop    esi
   1d813:	pop    ebx
   1d814:	pop    ebp
   1d815:	ret    0xc
   1d818:	int3   
   1d819:	int3   
   1d81a:	int3   
   1d81b:	int3   
   1d81c:	int3   
   1d81d:	int3   
   1d81e:	mov    edi,edi
   1d820:	push   ebp
   1d821:	mov    ebp,esp
   1d823:	push   ecx
   1d824:	cmp    DWORD PTR [ebp+0x8],0x0
   1d828:	push   esi
   1d829:	not    eax
   1d82b:	mov    ecx,0xff
   1d830:	je     0x1d84e
   1d832:	test   dl,0x3
   1d835:	je     0x1d84e
   1d837:	movzx  esi,BYTE PTR [edx]
   1d83a:	xor    esi,eax
   1d83c:	and    esi,ecx
   1d83e:	shr    eax,0x8
   1d841:	xor    eax,DWORD PTR [esi*4+0x75170]
   1d848:	inc    edx
   1d849:	dec    DWORD PTR [ebp+0x8]
   1d84c:	jne    0x1d832
   1d84e:	cmp    DWORD PTR [ebp+0x8],0x20
   1d852:	push   ebx
   1d853:	push   edi
   1d854:	push   0x4
   1d856:	mov    esi,edx
   1d858:	pop    edi
   1d859:	jb     0x1da1d
   1d85f:	mov    edx,DWORD PTR [ebp+0x8]
   1d862:	shr    edx,0x5
   1d865:	mov    DWORD PTR [ebp-0x4],edx
   1d868:	xor    eax,DWORD PTR [esi]
   1d86a:	add    esi,edi
   1d86c:	mov    edx,eax
   1d86e:	shr    edx,0x10
   1d871:	mov    ebx,eax
   1d873:	shr    ebx,0x8
   1d876:	and    edx,ecx
   1d878:	mov    edx,DWORD PTR [edx*4+0x75570]
   1d87f:	and    ebx,ecx
   1d881:	xor    edx,DWORD PTR [ebx*4+0x75970]
   1d888:	mov    ebx,eax
   1d88a:	shr    ebx,0x18
   1d88d:	xor    edx,DWORD PTR [ebx*4+0x75170]
   1d894:	and    eax,ecx
   1d896:	xor    edx,DWORD PTR [eax*4+0x75d70]
   1d89d:	xor    edx,DWORD PTR [esi]
   1d89f:	add    esi,edi
   1d8a1:	mov    eax,edx
   1d8a3:	shr    eax,0x10
   1d8a6:	mov    ebx,edx
   1d8a8:	shr    ebx,0x8
   1d8ab:	and    eax,ecx
   1d8ad:	mov    eax,DWORD PTR [eax*4+0x75570]
   1d8b4:	and    ebx,ecx
   1d8b6:	xor    eax,DWORD PTR [ebx*4+0x75970]
   1d8bd:	mov    ebx,edx
   1d8bf:	shr    ebx,0x18
   1d8c2:	xor    eax,DWORD PTR [ebx*4+0x75170]
   1d8c9:	and    edx,ecx
   1d8cb:	xor    eax,DWORD PTR [edx*4+0x75d70]
   1d8d2:	xor    eax,DWORD PTR [esi]
   1d8d4:	add    esi,edi
   1d8d6:	mov    edx,eax
   1d8d8:	shr    edx,0x10
   1d8db:	mov    ebx,eax
   1d8dd:	and    edx,ecx
   1d8df:	mov    edx,DWORD PTR [edx*4+0x75570]
   1d8e6:	shr    ebx,0x8
   1d8e9:	and    ebx,ecx
   1d8eb:	xor    edx,DWORD PTR [ebx*4+0x75970]
   1d8f2:	mov    ebx,eax
   1d8f4:	shr    ebx,0x18
   1d8f7:	xor    edx,DWORD PTR [ebx*4+0x75170]
   1d8fe:	and    eax,ecx
   1d900:	xor    edx,DWORD PTR [eax*4+0x75d70]
   1d907:	xor    edx,DWORD PTR [esi]
   1d909:	add    esi,edi
   1d90b:	mov    eax,edx
   1d90d:	shr    eax,0x10
   1d910:	mov    ebx,edx
   1d912:	shr    ebx,0x8
   1d915:	and    eax,ecx
   1d917:	mov    eax,DWORD PTR [eax*4+0x75570]
   1d91e:	and    ebx,ecx
   1d920:	xor    eax,DWORD PTR [ebx*4+0x75970]
   1d927:	mov    ebx,edx
   1d929:	shr    ebx,0x18
   1d92c:	xor    eax,DWORD PTR [ebx*4+0x75170]
   1d933:	and    edx,ecx
   1d935:	xor    eax,DWORD PTR [edx*4+0x75d70]
   1d93c:	xor    eax,DWORD PTR [esi]
   1d93e:	add    esi,edi
   1d940:	mov    edx,eax
   1d942:	shr    edx,0x10
   1d945:	mov    ebx,eax
   1d947:	and    edx,ecx
   1d949:	mov    edx,DWORD PTR [edx*4+0x75570]
   1d950:	shr    ebx,0x8
   1d953:	and    ebx,ecx
   1d955:	xor    edx,DWORD PTR [ebx*4+0x75970]
   1d95c:	mov    ebx,eax
   1d95e:	shr    ebx,0x18
   1d961:	xor    edx,DWORD PTR [ebx*4+0x75170]
   1d968:	and    eax,ecx
   1d96a:	xor    edx,DWORD PTR [eax*4+0x75d70]
   1d971:	xor    edx,DWORD PTR [esi]
   1d973:	add    esi,edi
   1d975:	mov    eax,edx
   1d977:	shr    eax,0x10
   1d97a:	and    eax,ecx
   1d97c:	mov    ebx,edx
   1d97e:	mov    eax,DWORD PTR [eax*4+0x75570]
   1d985:	shr    ebx,0x8
   1d988:	and    ebx,ecx
   1d98a:	xor    eax,DWORD PTR [ebx*4+0x75970]
   1d991:	mov    ebx,edx
   1d993:	shr    ebx,0x18
   1d996:	xor    eax,DWORD PTR [ebx*4+0x75170]
   1d99d:	and    edx,ecx
   1d99f:	xor    eax,DWORD PTR [edx*4+0x75d70]
   1d9a6:	sub    DWORD PTR [ebp+0x8],0x20
   1d9aa:	xor    eax,DWORD PTR [esi]
   1d9ac:	add    esi,edi
   1d9ae:	mov    edx,eax
   1d9b0:	mov    ebx,eax
   1d9b2:	shr    edx,0x10
   1d9b5:	shr    ebx,0x8
   1d9b8:	and    edx,ecx
   1d9ba:	mov    edx,DWORD PTR [edx*4+0x75570]
   1d9c1:	and    ebx,ecx
   1d9c3:	xor    edx,DWORD PTR [ebx*4+0x75970]
   1d9ca:	mov    ebx,eax
   1d9cc:	shr    ebx,0x18
   1d9cf:	xor    edx,DWORD PTR [ebx*4+0x75170]
   1d9d6:	and    eax,ecx
   1d9d8:	xor    edx,DWORD PTR [eax*4+0x75d70]
   1d9df:	xor    edx,DWORD PTR [esi]
   1d9e1:	add    esi,edi
   1d9e3:	mov    eax,edx
   1d9e5:	shr    eax,0x10
   1d9e8:	and    eax,ecx
   1d9ea:	mov    eax,DWORD PTR [eax*4+0x75570]
   1d9f1:	mov    ebx,edx
   1d9f3:	shr    ebx,0x8
   1d9f6:	and    ebx,ecx
   1d9f8:	xor    eax,DWORD PTR [ebx*4+0x75970]
   1d9ff:	mov    ebx,edx
   1da01:	shr    ebx,0x18
   1da04:	xor    eax,DWORD PTR [ebx*4+0x75170]
   1da0b:	and    edx,ecx
   1da0d:	xor    eax,DWORD PTR [edx*4+0x75d70]
   1da14:	dec    DWORD PTR [ebp-0x4]
   1da17:	jne    0x1d868
   1da1d:	cmp    DWORD PTR [ebp+0x8],edi
   1da20:	jb     0x1da6a
   1da22:	mov    edx,DWORD PTR [ebp+0x8]
   1da25:	shr    edx,0x2
   1da28:	mov    DWORD PTR [ebp-0x4],edx
   1da2b:	xor    eax,DWORD PTR [esi]
   1da2d:	sub    DWORD PTR [ebp+0x8],edi
   1da30:	mov    edx,eax
   1da32:	shr    edx,0x10
   1da35:	and    edx,ecx
   1da37:	mov    edx,DWORD PTR [edx*4+0x75570]
   1da3e:	mov    ebx,eax
   1da40:	shr    ebx,0x8
   1da43:	and    ebx,ecx
   1da45:	xor    edx,DWORD PTR [ebx*4+0x75970]
   1da4c:	mov    ebx,eax
   1da4e:	shr    ebx,0x18
   1da51:	xor    edx,DWORD PTR [ebx*4+0x75170]
   1da58:	and    eax,ecx
   1da5a:	xor    edx,DWORD PTR [eax*4+0x75d70]
   1da61:	add    esi,edi
   1da63:	dec    DWORD PTR [ebp-0x4]
   1da66:	mov    eax,edx
   1da68:	jne    0x1da2b
   1da6a:	cmp    DWORD PTR [ebp+0x8],0x0
   1da6e:	pop    edi
   1da6f:	pop    ebx
   1da70:	je     0x1da89
   1da72:	movzx  edx,BYTE PTR [esi]
   1da75:	xor    edx,eax
   1da77:	and    edx,ecx
   1da79:	shr    eax,0x8
   1da7c:	xor    eax,DWORD PTR [edx*4+0x75170]
   1da83:	inc    esi
   1da84:	dec    DWORD PTR [ebp+0x8]
   1da87:	jne    0x1da72
   1da89:	not    eax
   1da8b:	pop    esi
   1da8c:	leave  
   1da8d:	ret    0x4
   1da90:	int3   
   1da91:	int3   
   1da92:	int3   
   1da93:	int3   
   1da94:	int3   
   1da95:	int3   
   1da96:	mov    edi,edi
   1da98:	push   ebp
   1da99:	mov    ebp,esp
   1da9b:	mov    edx,DWORD PTR [ebp+0xc]
   1da9e:	test   edx,edx
   1daa0:	jne    0x1daa6
   1daa2:	xor    eax,eax
   1daa4:	jmp    0x1dab1
   1daa6:	push   DWORD PTR [ebp+0x10]
   1daa9:	mov    eax,DWORD PTR [ebp+0x8]
   1daac:	call   0x1d81e
   1dab1:	pop    ebp
   1dab2:	ret    0xc
   1dab5:	int3   
   1dab6:	int3   
   1dab7:	int3   
   1dab8:	int3   
   1dab9:	int3   
   1daba:	mov    edi,edi
   1dabc:	push   ebp
   1dabd:	mov    ebp,esp
   1dabf:	push   0x20
   1dac1:	push   0x61737973
   1dac6:	push   DWORD PTR [ebp+0x8]
   1dac9:	push   0x1
   1dacb:	call   DWORD PTR ds:0x1f01c
   1dad1:	test   eax,eax
   1dad3:	jne    0x1dae0
   1dad5:	push   0xc000009a
   1dada:	call   DWORD PTR ds:0x1f018
   1dae0:	pop    ebp
   1dae1:	ret    
   1dae2:	int3   
   1dae3:	int3   
   1dae4:	int3   
   1dae5:	int3   
   1dae6:	int3   
   1dae7:	cmp    ecx,DWORD PTR ds:0x7751c
   1daed:	jne    0x1daf2
   1daef:	ret    0x0
   1daf2:	jmp    0x1dafc
   1daf7:	int3   
   1daf8:	int3   
   1daf9:	int3   
   1dafa:	int3   
   1dafb:	int3   
   1dafc:	mov    edi,edi
   1dafe:	push   ebp
   1daff:	mov    ebp,esp
   1db01:	push   ecx
   1db02:	mov    DWORD PTR [ebp-0x4],ecx
   1db05:	push   0x0
   1db07:	push   DWORD PTR ds:0x77520
   1db0d:	push   DWORD PTR ds:0x7751c
   1db13:	push   DWORD PTR [ebp-0x4]
   1db16:	push   0xf7
   1db1b:	call   DWORD PTR ds:0x1f05c
   1db21:	int3   
   1db22:	int3   
   1db23:	int3   
   1db24:	int3   
   1db25:	int3   
   1db26:	int3   
   1db27:	int3   
   1db28:	jmp    DWORD PTR ds:0x1f00c
   1db2e:	int3   
   1db2f:	int3   
   1db30:	int3   
   1db31:	int3   
   1db32:	int3   
   1db33:	int3   
   1db34:	jmp    DWORD PTR ds:0x1f010
   1db3a:	int3   
   1db3b:	int3   
   1db3c:	int3   
   1db3d:	int3   
   1db3e:	int3   
   1db3f:	int3   
   1db40:	jmp    DWORD PTR ds:0x1f014
   1db46:	int3   
   1db47:	int3   
   1db48:	int3   
   1db49:	int3   
   1db4a:	int3   
   1db4b:	int3   
   1db4c:	jmp    DWORD PTR ds:0x1f030
   1db52:	int3   
   1db53:	int3   
   1db54:	int3   
   1db55:	int3   
   1db56:	int3   
   1db57:	int3   
   1db58:	jmp    DWORD PTR ds:0x1f034
   1db5e:	int3   
   1db5f:	int3   
   1db60:	int3   
   1db61:	int3   
   1db62:	int3   
   1db63:	int3   
   1db64:	jmp    DWORD PTR ds:0x1f040
   1db6a:	int3   
   1db6b:	int3   
   1db6c:	int3   
   1db6d:	int3   
   1db6e:	int3   
   1db6f:	int3   
   1db70:	jmp    DWORD PTR ds:0x1f04c
   1db76:	int3   
   1db77:	int3   
   1db78:	int3   
   1db79:	int3   
   1db7a:	int3   
   1db7b:	int3   
   1db7c:	jmp    DWORD PTR ds:0x1f054
   1db82:	int3   
   1db83:	int3   
   1db84:	int3   
   1db85:	int3   
   1db86:	int3   
   1db87:	int3   
   1db88:	push   0x1dbf0
   1db8d:	push   DWORD PTR fs:0x0
   1db94:	mov    eax,DWORD PTR [esp+0x10]
   1db98:	mov    DWORD PTR [esp+0x10],ebp
   1db9c:	lea    ebp,[esp+0x10]
   1dba0:	sub    esp,eax
   1dba2:	push   ebx
   1dba3:	push   esi
   1dba4:	push   edi
   1dba5:	mov    eax,ds:0x7751c
   1dbaa:	xor    DWORD PTR [ebp-0x4],eax
   1dbad:	xor    eax,ebp
   1dbaf:	push   eax
   1dbb0:	mov    DWORD PTR [ebp-0x18],esp
   1dbb3:	push   DWORD PTR [ebp-0x8]
   1dbb6:	mov    eax,DWORD PTR [ebp-0x4]
   1dbb9:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1dbc0:	mov    DWORD PTR [ebp-0x8],eax
   1dbc3:	lea    eax,[ebp-0x10]
   1dbc6:	mov    fs:0x0,eax
   1dbcc:	ret    
   1dbcd:	mov    ecx,DWORD PTR [ebp-0x10]
   1dbd0:	mov    DWORD PTR fs:0x0,ecx
   1dbd7:	pop    ecx
   1dbd8:	pop    edi
   1dbd9:	pop    edi
   1dbda:	pop    esi
   1dbdb:	pop    ebx
   1dbdc:	mov    esp,ebp
   1dbde:	pop    ebp
   1dbdf:	push   ecx
   1dbe0:	ret    
   1dbe1:	int3   
   1dbe2:	int3   
   1dbe3:	int3   
   1dbe4:	int3   
   1dbe5:	int3   
   1dbe6:	int3   
   1dbe7:	int3   
   1dbe8:	int3   
   1dbe9:	int3   
   1dbea:	int3   
   1dbeb:	int3   
   1dbec:	int3   
   1dbed:	int3   
   1dbee:	int3   
   1dbef:	int3   
   1dbf0:	mov    edi,edi
   1dbf2:	push   ebp
   1dbf3:	mov    ebp,esp
   1dbf5:	sub    esp,0x14
   1dbf8:	push   ebx
   1dbf9:	mov    ebx,DWORD PTR [ebp+0xc]
   1dbfc:	push   esi
   1dbfd:	mov    esi,DWORD PTR [ebx+0x8]
   1dc00:	xor    esi,DWORD PTR ds:0x7751c
   1dc06:	push   edi
   1dc07:	mov    eax,DWORD PTR [esi]
   1dc09:	mov    BYTE PTR [ebp-0x1],0x0
   1dc0d:	mov    DWORD PTR [ebp-0x8],0x1
   1dc14:	lea    edi,[ebx+0x10]
   1dc17:	cmp    eax,0xfffffffe
   1dc1a:	je     0x1dc29
   1dc1c:	mov    ecx,DWORD PTR [esi+0x4]
   1dc1f:	add    ecx,edi
   1dc21:	xor    ecx,DWORD PTR [eax+edi*1]
   1dc24:	call   0x1dae7
   1dc29:	mov    ecx,DWORD PTR [esi+0xc]
   1dc2c:	mov    eax,DWORD PTR [esi+0x8]
   1dc2f:	add    ecx,edi
   1dc31:	xor    ecx,DWORD PTR [eax+edi*1]
   1dc34:	call   0x1dae7
   1dc39:	mov    eax,DWORD PTR [ebp+0x8]
   1dc3c:	test   BYTE PTR [eax+0x4],0x66
   1dc40:	jne    0x1dd28
   1dc46:	mov    ecx,DWORD PTR [ebp+0x10]
   1dc49:	lea    edx,[ebp-0x14]
   1dc4c:	mov    DWORD PTR [ebx-0x4],edx
   1dc4f:	mov    ebx,DWORD PTR [ebx+0xc]
   1dc52:	mov    DWORD PTR [ebp-0x14],eax
   1dc55:	mov    DWORD PTR [ebp-0x10],ecx
   1dc58:	cmp    ebx,0xfffffffe
   1dc5b:	je     0x1dcbc
   1dc5d:	lea    ecx,[ecx+0x0]
   1dc60:	lea    eax,[ebx+ebx*2]
   1dc63:	mov    ecx,DWORD PTR [esi+eax*4+0x14]
   1dc67:	lea    eax,[esi+eax*4+0x10]
   1dc6b:	mov    DWORD PTR [ebp-0xc],eax
   1dc6e:	mov    eax,DWORD PTR [eax]
   1dc70:	mov    DWORD PTR [ebp+0x8],eax
   1dc73:	test   ecx,ecx
   1dc75:	je     0x1dc8b
   1dc77:	mov    edx,edi
   1dc79:	call   0x1de31
   1dc7e:	mov    BYTE PTR [ebp-0x1],0x1
   1dc82:	test   eax,eax
   1dc84:	jl     0x1dcc6
   1dc86:	jg     0x1dccf
   1dc88:	mov    eax,DWORD PTR [ebp+0x8]
   1dc8b:	mov    ebx,eax
   1dc8d:	cmp    eax,0xfffffffe
   1dc90:	jne    0x1dc60
   1dc92:	cmp    BYTE PTR [ebp-0x1],0x0
   1dc96:	je     0x1dcbc
   1dc98:	mov    eax,DWORD PTR [esi]
   1dc9a:	cmp    eax,0xfffffffe
   1dc9d:	je     0x1dcac
   1dc9f:	mov    ecx,DWORD PTR [esi+0x4]
   1dca2:	add    ecx,edi
   1dca4:	xor    ecx,DWORD PTR [eax+edi*1]
   1dca7:	call   0x1dae7
   1dcac:	mov    ecx,DWORD PTR [esi+0xc]
   1dcaf:	mov    edx,DWORD PTR [esi+0x8]
   1dcb2:	add    ecx,edi
   1dcb4:	xor    ecx,DWORD PTR [edx+edi*1]
   1dcb7:	call   0x1dae7
   1dcbc:	mov    eax,DWORD PTR [ebp-0x8]
   1dcbf:	pop    edi
   1dcc0:	pop    esi
   1dcc1:	pop    ebx
   1dcc2:	mov    esp,ebp
   1dcc4:	pop    ebp
   1dcc5:	ret    
   1dcc6:	mov    DWORD PTR [ebp-0x8],0x0
   1dccd:	jmp    0x1dc98
   1dccf:	mov    ecx,DWORD PTR [ebp+0xc]
   1dcd2:	call   0x1de5a
   1dcd7:	mov    eax,DWORD PTR [ebp+0xc]
   1dcda:	cmp    DWORD PTR [eax+0xc],ebx
   1dcdd:	je     0x1dcf1
   1dcdf:	push   0x7751c
   1dce4:	push   edi
   1dce5:	mov    edx,ebx
   1dce7:	mov    ecx,eax
   1dce9:	call   0x1de74
   1dcee:	mov    eax,DWORD PTR [ebp+0xc]
   1dcf1:	mov    ecx,DWORD PTR [ebp+0x8]
   1dcf4:	mov    DWORD PTR [eax+0xc],ecx
   1dcf7:	mov    eax,DWORD PTR [esi]
   1dcf9:	cmp    eax,0xfffffffe
   1dcfc:	je     0x1dd0b
   1dcfe:	mov    ecx,DWORD PTR [esi+0x4]
   1dd01:	add    ecx,edi
   1dd03:	xor    ecx,DWORD PTR [eax+edi*1]
   1dd06:	call   0x1dae7
   1dd0b:	mov    ecx,DWORD PTR [esi+0xc]
   1dd0e:	mov    edx,DWORD PTR [esi+0x8]
   1dd11:	add    ecx,edi
   1dd13:	xor    ecx,DWORD PTR [edx+edi*1]
   1dd16:	call   0x1dae7
   1dd1b:	mov    eax,DWORD PTR [ebp-0xc]
   1dd1e:	mov    ecx,DWORD PTR [eax+0x8]
   1dd21:	mov    edx,edi
   1dd23:	call   0x1de48
   1dd28:	mov    edx,0xfffffffe
   1dd2d:	cmp    DWORD PTR [ebx+0xc],edx
   1dd30:	je     0x1dcbc
   1dd32:	push   0x7751c
   1dd37:	push   edi
   1dd38:	mov    ecx,ebx
   1dd3a:	call   0x1de74
   1dd3f:	jmp    0x1dc98
   1dd44:	int3   
   1dd45:	int3   
   1dd46:	int3   
   1dd47:	int3   
   1dd48:	int3   
   1dd49:	int3   
   1dd4a:	int3   
   1dd4b:	int3   
   1dd4c:	push   ebx
   1dd4d:	push   esi
   1dd4e:	push   edi
   1dd4f:	mov    edx,DWORD PTR [esp+0x10]
   1dd53:	mov    eax,DWORD PTR [esp+0x14]
   1dd57:	mov    ecx,DWORD PTR [esp+0x18]
   1dd5b:	push   ebp
   1dd5c:	push   edx
   1dd5d:	push   eax
   1dd5e:	push   ecx
   1dd5f:	push   ecx
   1dd60:	push   0x1ddcf
   1dd65:	push   DWORD PTR fs:0x0
   1dd6c:	mov    eax,ds:0x7751c
   1dd71:	xor    eax,esp
   1dd73:	mov    DWORD PTR [esp+0x8],eax
   1dd77:	mov    DWORD PTR fs:0x0,esp
   1dd7e:	mov    eax,DWORD PTR [esp+0x30]
   1dd82:	mov    ebx,DWORD PTR [eax+0x8]
   1dd85:	mov    ecx,DWORD PTR [esp+0x2c]
   1dd89:	xor    ebx,DWORD PTR [ecx]
   1dd8b:	mov    esi,DWORD PTR [eax+0xc]
   1dd8e:	cmp    esi,0xfffffffe
   1dd91:	je     0x1ddc1
   1dd93:	mov    edx,DWORD PTR [esp+0x34]
   1dd97:	cmp    edx,0xfffffffe
   1dd9a:	je     0x1dda0
   1dd9c:	cmp    esi,edx
   1dd9e:	jbe    0x1ddc1
   1dda0:	lea    esi,[esi+esi*2]
   1dda3:	lea    ebx,[ebx+esi*4+0x10]
   1dda7:	mov    ecx,DWORD PTR [ebx]
   1dda9:	mov    DWORD PTR [eax+0xc],ecx
   1ddac:	cmp    DWORD PTR [ebx+0x4],0x0
   1ddb0:	jne    0x1dd7e
   1ddb2:	mov    ecx,0x1
   1ddb7:	mov    eax,DWORD PTR [ebx+0x8]
   1ddba:	call   0x1deec
   1ddbf:	jmp    0x1dd7e
   1ddc1:	pop    DWORD PTR fs:0x0
   1ddc8:	add    esp,0x18
   1ddcb:	pop    edi
   1ddcc:	pop    esi
   1ddcd:	pop    ebx
   1ddce:	ret    
   1ddcf:	mov    ecx,DWORD PTR [esp+0x4]
   1ddd3:	test   DWORD PTR [ecx+0x4],0x6
   1ddda:	mov    eax,0x1
   1dddf:	je     0x1de14
   1dde1:	mov    eax,DWORD PTR [esp+0x8]
   1dde5:	mov    ecx,DWORD PTR [eax+0x8]
   1dde8:	xor    ecx,eax
   1ddea:	call   0x1dae7
   1ddef:	push   ebp
   1ddf0:	mov    ebp,DWORD PTR [eax+0x18]
   1ddf3:	push   DWORD PTR [eax+0xc]
   1ddf6:	push   DWORD PTR [eax+0x10]
   1ddf9:	push   DWORD PTR [eax+0x14]
   1ddfc:	call   0x1dd4c
   1de01:	add    esp,0xc
   1de04:	pop    ebp
   1de05:	mov    eax,DWORD PTR [esp+0x8]
   1de09:	mov    edx,DWORD PTR [esp+0x10]
   1de0d:	mov    DWORD PTR [edx],eax
   1de0f:	mov    eax,0x3
   1de14:	ret    
   1de15:	push   ebp
   1de16:	mov    ecx,DWORD PTR [esp+0x8]
   1de1a:	mov    ebp,DWORD PTR [ecx]
   1de1c:	push   DWORD PTR [ecx+0x1c]
   1de1f:	push   DWORD PTR [ecx+0x18]
   1de22:	push   DWORD PTR [ecx+0x28]
   1de25:	call   0x1dd4c
   1de2a:	add    esp,0xc
   1de2d:	pop    ebp
   1de2e:	ret    0x4
   1de31:	push   ebp
   1de32:	push   esi
   1de33:	push   edi
   1de34:	push   ebx
   1de35:	mov    ebp,edx
   1de37:	xor    eax,eax
   1de39:	xor    ebx,ebx
   1de3b:	xor    edx,edx
   1de3d:	xor    esi,esi
   1de3f:	xor    edi,edi
   1de41:	call   ecx
   1de43:	pop    ebx
   1de44:	pop    edi
   1de45:	pop    esi
   1de46:	pop    ebp
   1de47:	ret    
   1de48:	mov    ebp,edx
   1de4a:	mov    esi,ecx
   1de4c:	mov    eax,ecx
   1de4e:	xor    eax,eax
   1de50:	xor    ebx,ebx
   1de52:	xor    ecx,ecx
   1de54:	xor    edx,edx
   1de56:	xor    edi,edi
   1de58:	jmp    esi
   1de5a:	push   ebp
   1de5b:	mov    ebp,esp
   1de5d:	push   ebx
   1de5e:	push   esi
   1de5f:	push   edi
   1de60:	push   0x0
   1de62:	push   0x0
   1de64:	push   0x1de6f
   1de69:	push   ecx
   1de6a:	call   0x1def4
   1de6f:	pop    edi
   1de70:	pop    esi
   1de71:	pop    ebx
   1de72:	pop    ebp
   1de73:	ret    
   1de74:	push   ebp
   1de75:	mov    ebp,DWORD PTR [esp+0x8]
   1de79:	push   edx
   1de7a:	push   ecx
   1de7b:	push   DWORD PTR [esp+0x14]
   1de7f:	call   0x1dd4c
   1de84:	add    esp,0xc
   1de87:	pop    ebp
   1de88:	ret    0x8
   1de8b:	int3   
   1de8c:	int3   
   1de8d:	int3   
   1de8e:	int3   
   1de8f:	int3   
   1de90:	push   0x1dbf0
   1de95:	push   DWORD PTR fs:0x0
   1de9c:	mov    eax,DWORD PTR [esp+0x10]
   1dea0:	mov    DWORD PTR [esp+0x10],ebp
   1dea4:	lea    ebp,[esp+0x10]
   1dea8:	sub    esp,eax
   1deaa:	push   ebx
   1deab:	push   esi
   1deac:	push   edi
   1dead:	mov    eax,ds:0x7751c
   1deb2:	xor    DWORD PTR [ebp-0x4],eax
   1deb5:	xor    eax,ebp
   1deb7:	mov    DWORD PTR [ebp-0x1c],eax
   1deba:	push   eax
   1debb:	mov    DWORD PTR [ebp-0x18],esp
   1debe:	push   DWORD PTR [ebp-0x8]
   1dec1:	mov    eax,DWORD PTR [ebp-0x4]
   1dec4:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1decb:	mov    DWORD PTR [ebp-0x8],eax
   1dece:	lea    eax,[ebp-0x10]
   1ded1:	mov    fs:0x0,eax
   1ded7:	ret    
   1ded8:	mov    ecx,DWORD PTR [ebp-0x1c]
   1dedb:	xor    ecx,ebp
   1dedd:	call   0x1dae7
   1dee2:	jmp    0x1dbcd
   1dee7:	int3   
   1dee8:	int3   
   1dee9:	int3   
   1deea:	int3   
   1deeb:	int3   
   1deec:	call   eax
   1deee:	ret    
   1deef:	int3   
   1def0:	int3   
   1def1:	int3   
   1def2:	int3   
   1def3:	int3   
   1def4:	jmp    DWORD PTR ds:0x1f068
   1defa:	pop    esp
   1defb:	add    BYTE PTR [eax],al
   1defd:	add    BYTE PTR [eax],al
   1deff:	add    BYTE PTR [ebx+0x0],ch
   1df02:	bound  eax,QWORD PTR [eax]
   1df04:	add    BYTE PTR fs:[ecx+0x0],dh
   1df08:	add    BYTE PTR [eax],al
   1df0a:	add    BYTE PTR fs:[ebx],dh
   1df0d:	add    BYTE PTR [eax+eax*1+0x73],ah
   1df11:	add    BYTE PTR [eax],al
   1df13:	add    BYTE PTR [esi+0x0],ch
   1df16:	je     0x1df18
   1df18:	outs   dx,BYTE PTR ds:[esi]
   1df19:	add    BYTE PTR [eax],al
   1df1b:	add    BYTE PTR [ebx+0x0],dh
   1df1e:	jns    0x1df20
   1df20:	jae    0x1df22
   1df22:	popa   
   1df23:	add    BYTE PTR [eax],al
   1df25:	add    BYTE PTR [edi+0x0],dh
   1df28:	imul   eax,DWORD PTR [eax],0x65006e
   1df2e:	add    BYTE PTR [eax],al
   1df30:	jo     0x1df32
   1df32:	arpl   WORD PTR [eax],ax
   1df34:	imul   eax,DWORD PTR [eax],0x6d0000
   1df3a:	jae    0x1df3c
   1df3c:	jb     0x1df3e
   1df3e:	add    BYTE PTR [eax],al
   1df40:	je     0x1df42
   1df42:	ins    DWORD PTR es:[edi],dx
   1df43:	add    BYTE PTR [eax+0x0],dh
   1df46:	add    BYTE PTR [eax],al
   1df48:	jne    0x1df4a
   1df4a:	jae    0x1df4c
   1df4c:	bound  eax,QWORD PTR [eax]
   1df4e:	add    BYTE PTR [eax],al
   1df50:	outs   dx,DWORD PTR ds:[esi]
   1df51:	add    BYTE PTR [eax+eax*1+0x65],ch
   1df55:	add    BYTE PTR [eax],al
   1df57:	add    BYTE PTR [ecx+0x0],ah
   1df5a:	imul   eax,DWORD PTR [eax],0x70
   1df60:	push   0x0
   1df62:	popa   
   1df63:	add    BYTE PTR [ecx+0x0],bh
   1df66:	add    BYTE PTR [eax],al
   1df68:	jbe    0x1df6a
   1df6a:	add    BYTE PTR gs:[edx+0x0],dh
   1df6e:	add    BYTE PTR [eax],al
   1df70:	jae    0x1df72
   1df72:	popa   
   1df73:	add    BYTE PTR [ecx+0x0],ch
   1df76:	add    BYTE PTR [eax],al
   1df78:	ins    BYTE PTR es:[edi],dx
   1df79:	add    BYTE PTR [ecx+0x0],ah
   1df7c:	arpl   WORD PTR [eax],ax
   1df7e:	add    BYTE PTR [eax],al
   1df80:	push   0x0
   1df82:	jo     0x1df84
   1df84:	add    BYTE PTR [bx+si],al
   1df87:	add    BYTE PTR [eax+0x0],ch
   1df8a:	imul   eax,DWORD PTR [eax],0x64
   1df90:	jo     0x1df92
   1df92:	outs   dx,BYTE PTR ds:[esi]
   1df93:	add    BYTE PTR [edi+0x0],ah
   1df96:	add    BYTE PTR [eax],al
   1df98:	add    ah,cl
   1df9a:	dec    ebx
   1df9b:	add    BYTE PTR [ebp+0x0],ah
   1df9e:	push   ebx
   1df9f:	add    BYTE PTR [ebp+0x0],ah
   1dfa2:	jb     0x1dfa4
   1dfa4:	jbe    0x1dfa6
   1dfa6:	imul   eax,DWORD PTR [eax],0x650063
   1dfac:	inc    esp
   1dfad:	add    BYTE PTR [ebp+0x0],ah
   1dfb0:	jae    0x1dfb2
   1dfb2:	arpl   WORD PTR [eax],ax
   1dfb4:	jb     0x1dfb6
   1dfb6:	imul   eax,DWORD PTR [eax],0x740070
   1dfbc:	outs   dx,DWORD PTR ds:[esi]
   1dfbd:	add    BYTE PTR [edx+0x0],dh
   1dfc0:	push   esp
   1dfc1:	add    BYTE PTR [ecx+0x0],ah
   1dfc4:	bound  eax,QWORD PTR [eax]
   1dfc6:	ins    BYTE PTR es:[edi],dx
   1dfc7:	add    BYTE PTR [ebp+0x0],ah
   1dfca:	add    BYTE PTR [eax],al
   1dfcc:	pop    edx
   1dfcd:	add    BYTE PTR [edi+0x0],dh
   1dfd0:	dec    edi
   1dfd1:	add    BYTE PTR [eax+0x0],dh
   1dfd4:	add    BYTE PTR gs:[esi+0x0],ch
   1dfd8:	push   eax
   1dfd9:	add    BYTE PTR [edx+0x0],dh
   1dfdc:	outs   dx,DWORD PTR ds:[esi]
   1dfdd:	add    BYTE PTR [ebx+0x0],ah
   1dfe0:	add    BYTE PTR gs:[ebx+0x0],dh
   1dfe4:	jae    0x1dfe6
   1dfe6:	add    BYTE PTR [eax],al
   1dfe8:	push   eax
   1dfe9:	add    BYTE PTR [ebx+0x0],dh
   1dfec:	push   ebx
   1dfed:	add    BYTE PTR [ebp+0x0],ah
   1dff0:	je     0x1dff2
   1dff2:	dec    esp
   1dff3:	add    BYTE PTR [edi+0x0],ch
   1dff6:	popa   
   1dff7:	add    BYTE PTR [eax+eax*1+0x49],ah
   1dffb:	add    BYTE PTR [ebp+0x0],ch
   1dffe:	popa   
   1dfff:	add    BYTE PTR [edi+0x0],ah
   1e002:	add    BYTE PTR gs:[esi+0x0],cl
   1e006:	outs   dx,DWORD PTR ds:[esi]
   1e007:	add    BYTE PTR [eax+eax*1+0x69],dh
   1e00b:	add    BYTE PTR [esi+0x0],ah
   1e00e:	jns    0x1e010
   1e010:	push   edx
   1e011:	add    BYTE PTR [edi+0x0],ch
   1e014:	jne    0x1e016
   1e016:	je     0x1e018
   1e018:	imul   eax,DWORD PTR [eax],0x65006e
   1e01e:	add    BYTE PTR [eax],al
   1e020:	pop    edx
   1e021:	add    BYTE PTR [edi+0x0],dh
   1e024:	inc    esp
   1e025:	add    BYTE PTR [ebp+0x0],dh
   1e028:	jo     0x1e02a
   1e02a:	ins    BYTE PTR es:[edi],dx
   1e02b:	add    BYTE PTR [ecx+0x0],ch
   1e02e:	arpl   WORD PTR [eax],ax
   1e030:	popa   
   1e031:	add    BYTE PTR [eax+eax*1+0x65],dh
   1e035:	add    BYTE PTR [eax+eax*1+0x6f],dl
   1e039:	add    BYTE PTR [ebx+0x0],ch
   1e03c:	add    BYTE PTR gs:[esi+0x0],ch
   1e040:	add    BYTE PTR [eax],al
   1e042:	push   eax
   1e043:	add    BYTE PTR [ebx+0x0],dh
   1e046:	push   ebx
   1e047:	add    BYTE PTR [ebp+0x0],ah
   1e04a:	je     0x1e04c
   1e04c:	inc    ebx
   1e04d:	add    BYTE PTR [edx+0x0],dh
   1e050:	add    BYTE PTR gs:[ecx+0x0],ah
   1e054:	je     0x1e056
   1e056:	add    BYTE PTR gs:[eax+0x0],dl
   1e05a:	jb     0x1e05c
   1e05c:	outs   dx,DWORD PTR ds:[esi]
   1e05d:	add    BYTE PTR [ebx+0x0],ah
   1e060:	add    BYTE PTR gs:[ebx+0x0],dh
   1e064:	jae    0x1e066
   1e066:	dec    esi
   1e067:	add    BYTE PTR [edi+0x0],ch
   1e06a:	je     0x1e06c
   1e06c:	imul   eax,DWORD PTR [eax],0x790066
   1e072:	push   edx
   1e073:	add    BYTE PTR [edi+0x0],ch
   1e076:	jne    0x1e078
   1e078:	je     0x1e07a
   1e07a:	imul   eax,DWORD PTR [eax],0x65006e
   1e080:	add    BYTE PTR [eax],al
   1e082:	pop    edx
   1e083:	add    BYTE PTR [edi+0x0],dh
   1e086:	dec    edi
   1e087:	add    BYTE PTR [eax+0x0],dh
   1e08a:	add    BYTE PTR gs:[esi+0x0],ch
   1e08e:	inc    esi
   1e08f:	add    BYTE PTR [ecx+0x0],ch
   1e092:	ins    BYTE PTR es:[edi],dx
   1e093:	add    BYTE PTR [ebp+0x0],ah
   1e096:	add    BYTE PTR [eax],al
   1e098:	pop    edx
   1e099:	add    BYTE PTR [edi+0x0],dh
   1e09c:	push   ecx
   1e09d:	add    BYTE PTR [ebp+0x0],dh
   1e0a0:	add    BYTE PTR gs:[edx+0x0],dh
   1e0a4:	jns    0x1e0a6
   1e0a6:	dec    ecx
   1e0a7:	add    BYTE PTR [esi+0x0],ch
   1e0aa:	data16 add BYTE PTR [edi+0x0],ch
   1e0ae:	jb     0x1e0b0
   1e0b0:	ins    DWORD PTR es:[edi],dx
   1e0b1:	add    BYTE PTR [ecx+0x0],ah
   1e0b4:	je     0x1e0b6
   1e0b6:	imul   eax,DWORD PTR [eax],0x6e006f
   1e0bc:	push   eax
   1e0bd:	add    BYTE PTR [edx+0x0],dh
   1e0c0:	outs   dx,DWORD PTR ds:[esi]
   1e0c1:	add    BYTE PTR [ebx+0x0],ah
   1e0c4:	add    BYTE PTR gs:[ebx+0x0],dh
   1e0c8:	jae    0x1e0ca
   1e0ca:	add    BYTE PTR [eax],al
   1e0cc:	pop    edx
   1e0cd:	add    BYTE PTR [edi+0x0],dh
   1e0d0:	push   ecx
   1e0d1:	add    BYTE PTR [ebp+0x0],dh
   1e0d4:	add    BYTE PTR gs:[edx+0x0],dh
   1e0d8:	jns    0x1e0da
   1e0da:	push   ebx
   1e0db:	add    BYTE PTR [ecx+0x0],bh
   1e0de:	jae    0x1e0e0
   1e0e0:	je     0x1e0e2
   1e0e2:	add    BYTE PTR gs:[ebp+0x0],ch
   1e0e6:	dec    ecx
   1e0e7:	add    BYTE PTR [esi+0x0],ch
   1e0ea:	data16 add BYTE PTR [edi+0x0],ch
   1e0ee:	jb     0x1e0f0
   1e0f0:	ins    DWORD PTR es:[edi],dx
   1e0f1:	add    BYTE PTR [ecx+0x0],ah
   1e0f4:	je     0x1e0f6
   1e0f6:	imul   eax,DWORD PTR [eax],0x6e006f
   1e0fc:	add    BYTE PTR [eax],al
   1e0fe:	pop    edx
   1e0ff:	add    BYTE PTR [edi+0x0],dh
   1e102:	dec    edi
   1e103:	add    BYTE PTR [eax+0x0],dh
   1e106:	add    BYTE PTR gs:[esi+0x0],ch
   1e10a:	dec    ebx
   1e10b:	add    BYTE PTR [ebp+0x0],ah
   1e10e:	jns    0x1e110
   1e110:	add    BYTE PTR [eax],al
   1e112:	pop    edx
   1e113:	add    BYTE PTR [edi+0x0],dh
   1e116:	inc    esp
   1e117:	add    BYTE PTR [ebp+0x0],ah
   1e11a:	ins    BYTE PTR es:[edi],dx
   1e11b:	add    BYTE PTR [ebp+0x0],ah
   1e11e:	je     0x1e120
   1e120:	add    BYTE PTR gs:[ebx+0x0],cl
   1e124:	add    BYTE PTR gs:[ecx+0x0],bh
   1e128:	add    BYTE PTR [eax],al
   1e12a:	pop    edx
   1e12b:	add    BYTE PTR [edi+0x0],dh
   1e12e:	push   ebx
   1e12f:	add    BYTE PTR [ebp+0x0],ah
   1e132:	je     0x1e134
   1e134:	push   esi
   1e135:	add    BYTE PTR [ecx+0x0],ah
   1e138:	ins    BYTE PTR es:[edi],dx
   1e139:	add    BYTE PTR [ebp+0x0],dh
   1e13c:	add    BYTE PTR gs:[ebx+0x0],cl
   1e140:	add    BYTE PTR gs:[ecx+0x0],bh
   1e144:	add    BYTE PTR [eax],al
   1e146:	pop    edx
   1e147:	add    BYTE PTR [edi+0x0],dh
   1e14a:	push   ecx
   1e14b:	add    BYTE PTR [ebp+0x0],dh
   1e14e:	add    BYTE PTR gs:[edx+0x0],dh
   1e152:	jns    0x1e154
   1e154:	push   esi
   1e155:	add    BYTE PTR [edi+0x0],ch
   1e158:	ins    BYTE PTR es:[edi],dx
   1e159:	add    BYTE PTR [ebp+0x0],dh
   1e15c:	ins    DWORD PTR es:[edi],dx
   1e15d:	add    BYTE PTR [ebp+0x0],ah
   1e160:	dec    ecx
   1e161:	add    BYTE PTR [esi+0x0],ch
   1e164:	data16 add BYTE PTR [edi+0x0],ch
   1e168:	jb     0x1e16a
   1e16a:	ins    DWORD PTR es:[edi],dx
   1e16b:	add    BYTE PTR [ecx+0x0],ah
   1e16e:	je     0x1e170
   1e170:	imul   eax,DWORD PTR [eax],0x6e006f
   1e176:	inc    esi
   1e177:	add    BYTE PTR [ecx+0x0],ch
   1e17a:	ins    BYTE PTR es:[edi],dx
   1e17b:	add    BYTE PTR [ebp+0x0],ah
   1e17e:	add    BYTE PTR [eax],al
   1e180:	pop    edx
   1e181:	add    BYTE PTR [edi+0x0],dh
   1e184:	inc    ebx
   1e185:	add    BYTE PTR [edx+0x0],dh
   1e188:	add    BYTE PTR gs:[ecx+0x0],ah
   1e18c:	je     0x1e18e
   1e18e:	add    BYTE PTR gs:[esi+0x0],al
   1e192:	imul   eax,DWORD PTR [eax],0x65006c
   1e198:	add    BYTE PTR [eax],al
   1e19a:	push   edx
   1e19b:	add    BYTE PTR [eax+eax*1+0x6c],dh
   1e19f:	add    BYTE PTR [ecx+0x0],cl
   1e1a2:	ins    DWORD PTR es:[edi],dx
   1e1a3:	add    BYTE PTR [ecx+0x0],ah
   1e1a6:	add    BYTE PTR [di+0x0],ah
   1e1aa:	dec    esi
   1e1ab:	add    BYTE PTR [eax+eax*1+0x48],dh
   1e1af:	add    BYTE PTR [ebp+0x0],ah
   1e1b2:	popa   
   1e1b3:	add    BYTE PTR [eax+eax*1+0x65],ah
   1e1b7:	add    BYTE PTR [edx+0x0],dh
   1e1ba:	add    BYTE PTR [eax],al
   1e1bc:	push   edx
   1e1bd:	add    BYTE PTR [eax+eax*1+0x6c],dh
   1e1c1:	add    BYTE PTR [ecx+0x0],cl
   1e1c4:	ins    DWORD PTR es:[edi],dx
   1e1c5:	add    BYTE PTR [ecx+0x0],ah
   1e1c8:	add    BYTE PTR [di+0x0],ah
   1e1cc:	inc    esp
   1e1cd:	add    BYTE PTR [ecx+0x0],ch
   1e1d0:	jb     0x1e1d2
   1e1d2:	add    BYTE PTR gs:[ebx+0x0],ah
   1e1d6:	je     0x1e1d8
   1e1d8:	outs   dx,DWORD PTR ds:[esi]
   1e1d9:	add    BYTE PTR [edx+0x0],dh
   1e1dc:	jns    0x1e1de
   1e1de:	inc    ebp
   1e1df:	add    BYTE PTR [esi+0x0],ch
   1e1e2:	je     0x1e1e4
   1e1e4:	jb     0x1e1e6
   1e1e6:	jns    0x1e1e8
   1e1e8:	push   esp
   1e1e9:	add    BYTE PTR [edi+0x0],ch
   1e1ec:	inc    esp
   1e1ed:	add    BYTE PTR [ecx+0x0],ah
   1e1f0:	je     0x1e1f2
   1e1f2:	popa   
   1e1f3:	add    BYTE PTR [eax],al
   1e1f5:	add    BYTE PTR [edx+0x0],bl
   1e1f8:	ja     0x1e1fa
   1e1fa:	dec    edi
   1e1fb:	add    BYTE PTR [eax+0x0],dh
   1e1fe:	add    BYTE PTR gs:[esi+0x0],ch
   1e202:	push   eax
   1e203:	add    BYTE PTR [edx+0x0],dh
   1e206:	outs   dx,DWORD PTR ds:[esi]
   1e207:	add    BYTE PTR [ebx+0x0],ah
   1e20a:	add    BYTE PTR gs:[ebx+0x0],dh
   1e20e:	jae    0x1e210
   1e210:	push   esp
   1e211:	add    BYTE PTR [edi+0x0],ch
   1e214:	imul   eax,DWORD PTR [eax],0x65
   1e217:	add    BYTE PTR [esi+0x0],ch
   1e21a:	add    BYTE PTR [eax],al
   1e21c:	pop    edx
   1e21d:	add    BYTE PTR [edi+0x0],dh
   1e220:	push   ebx
   1e221:	add    BYTE PTR [ebp+0x0],ah
   1e224:	je     0x1e226
   1e226:	dec    ecx
   1e227:	add    BYTE PTR [esi+0x0],ch
   1e22a:	data16 add BYTE PTR [edi+0x0],ch
   1e22e:	jb     0x1e230
   1e230:	ins    DWORD PTR es:[edi],dx
   1e231:	add    BYTE PTR [ecx+0x0],ah
   1e234:	je     0x1e236
   1e236:	imul   eax,DWORD PTR [eax],0x6e006f
   1e23c:	push   eax
   1e23d:	add    BYTE PTR [edx+0x0],dh
   1e240:	outs   dx,DWORD PTR ds:[esi]
   1e241:	add    BYTE PTR [ebx+0x0],ah
   1e244:	add    BYTE PTR gs:[ebx+0x0],dh
   1e248:	jae    0x1e24a
   1e24a:	add    BYTE PTR [eax],al
   1e24c:	pop    edx
   1e24d:	add    BYTE PTR [edi+0x0],dh
   1e250:	push   ecx
   1e251:	add    BYTE PTR [ebp+0x0],dh
   1e254:	add    BYTE PTR gs:[edx+0x0],dh
   1e258:	jns    0x1e25a
   1e25a:	dec    ecx
   1e25b:	add    BYTE PTR [esi+0x0],ch
   1e25e:	data16 add BYTE PTR [edi+0x0],ch
   1e262:	jb     0x1e264
   1e264:	ins    DWORD PTR es:[edi],dx
   1e265:	add    BYTE PTR [ecx+0x0],ah
   1e268:	je     0x1e26a
   1e26a:	imul   eax,DWORD PTR [eax],0x6e006f
   1e270:	push   esp
   1e271:	add    BYTE PTR [eax+0x0],ch
   1e274:	jb     0x1e276
   1e276:	add    BYTE PTR gs:[ecx+0x0],ah
   1e27a:	add    BYTE PTR fs:[eax],al
   1e27d:	add    BYTE PTR [edx+0x0],bl
   1e280:	ja     0x1e282
   1e282:	inc    ebx
   1e283:	add    BYTE PTR [eax+eax*1+0x6f],ch
   1e287:	add    BYTE PTR [ebx+0x0],dh
   1e28a:	add    BYTE PTR gs:[eax],al
   1e28d:	add    BYTE PTR [edx+0x0],dl
   1e290:	je     0x1e292
   1e292:	ins    BYTE PTR es:[edi],dx
   1e293:	add    BYTE PTR [ecx+0x0],al
   1e296:	jae    0x1e298
   1e298:	jae    0x1e29a
   1e29a:	add    BYTE PTR gs:[edx+0x0],dh
   1e29e:	je     0x1e2a0
   1e2a0:	add    BYTE PTR [eax],al
   1e2a2:	pop    edx
   1e2a3:	add    BYTE PTR [edi+0x0],dh
   1e2a6:	inc    ebp
   1e2a7:	add    BYTE PTR [esi+0x0],ch
   1e2aa:	jne    0x1e2ac
   1e2ac:	ins    DWORD PTR es:[edi],dx
   1e2ad:	add    BYTE PTR [ebp+0x0],ah
   1e2b0:	jb     0x1e2b2
   1e2b2:	popa   
   1e2b3:	add    BYTE PTR [eax+eax*1+0x65],dh
   1e2b7:	add    BYTE PTR [ebx+0x0],cl
   1e2ba:	add    BYTE PTR gs:[ecx+0x0],bh
   1e2be:	add    BYTE PTR [eax],al
   1e2c0:	pop    edx
   1e2c1:	add    BYTE PTR [edi+0x0],dh
   1e2c4:	dec    esp
   1e2c5:	add    BYTE PTR [edi+0x0],ch
   1e2c8:	popa   
   1e2c9:	add    BYTE PTR [eax+eax*1+0x44],ah
   1e2cd:	add    BYTE PTR [edx+0x0],dh
   1e2d0:	imul   eax,DWORD PTR [eax],0x650076
   1e2d6:	jb     0x1e2d8
   1e2d8:	add    BYTE PTR [eax],al
   1e2da:	pop    edx
   1e2db:	add    BYTE PTR [edi+0x0],dh
   1e2de:	inc    ebx
   1e2df:	add    BYTE PTR [edx+0x0],dh
   1e2e2:	add    BYTE PTR gs:[ecx+0x0],ah
   1e2e6:	je     0x1e2e8
   1e2e8:	add    BYTE PTR gs:[ebx+0x0],cl
   1e2ec:	add    BYTE PTR gs:[ecx+0x0],bh
   1e2f0:	add    BYTE PTR [eax],al
   1e2f2:	dec    ecx
   1e2f3:	add    BYTE PTR [edi+0x0],ch
   1e2f6:	inc    esp
   1e2f7:	add    BYTE PTR [ebp+0x0],ah
   1e2fa:	ins    BYTE PTR es:[edi],dx
   1e2fb:	add    BYTE PTR [ebp+0x0],ah
   1e2fe:	je     0x1e300
   1e300:	add    BYTE PTR gs:[eax+eax*1+0x65],al
   1e305:	add    BYTE PTR [esi+0x0],dh
   1e308:	imul   eax,DWORD PTR [eax],0x650063
   1e30e:	add    BYTE PTR [eax],al
   1e310:	dec    ebx
   1e311:	add    BYTE PTR [ebp+0x0],ah
   1e314:	inc    esp
   1e315:	add    BYTE PTR [ebp+0x0],ah
   1e318:	je     0x1e31a
   1e31a:	popa   
   1e31b:	add    BYTE PTR [ebx+0x0],ah
   1e31e:	push   0x72005000
   1e323:	add    BYTE PTR [edi+0x0],ch
   1e326:	arpl   WORD PTR [eax],ax
   1e328:	add    BYTE PTR gs:[ebx+0x0],dh
   1e32c:	jae    0x1e32e
   1e32e:	add    BYTE PTR [eax],al
   1e330:	dec    ebx
   1e331:	add    BYTE PTR [ebp+0x0],ah
   1e334:	inc    ecx
   1e335:	add    BYTE PTR [eax+eax*1+0x74],dh
   1e339:	add    BYTE PTR [ecx+0x0],ah
   1e33c:	arpl   WORD PTR [eax],ax
   1e33e:	push   0x72005000
   1e343:	add    BYTE PTR [edi+0x0],ch
   1e346:	arpl   WORD PTR [eax],ax
   1e348:	add    BYTE PTR gs:[ebx+0x0],dh
   1e34c:	jae    0x1e34e
   1e34e:	add    BYTE PTR [eax],al
   1e350:	pop    edx
   1e351:	add    BYTE PTR [edi+0x0],dh
   1e354:	push   ecx
   1e355:	add    BYTE PTR [ebp+0x0],dh
   1e358:	add    BYTE PTR gs:[edx+0x0],dh
   1e35c:	jns    0x1e35e
   1e35e:	push   esi
   1e35f:	add    BYTE PTR [ecx+0x0],ah
   1e362:	ins    BYTE PTR es:[edi],dx
   1e363:	add    BYTE PTR [ebp+0x0],dh
   1e366:	add    BYTE PTR gs:[ebx+0x0],cl
   1e36a:	add    BYTE PTR gs:[ecx+0x0],bh
   1e36e:	add    BYTE PTR [eax],al
   1e370:	pop    edx
   1e371:	add    BYTE PTR [edi+0x0],dh
   1e374:	push   edx
   1e375:	add    BYTE PTR [ebp+0x0],ah
   1e378:	popa   
   1e379:	add    BYTE PTR [eax+eax*1+0x46],ah
   1e37d:	add    BYTE PTR [ecx+0x0],ch
   1e380:	ins    BYTE PTR es:[edi],dx
   1e381:	add    BYTE PTR [ebp+0x0],ah
   1e384:	add    BYTE PTR [eax],al
   1e386:	pop    edx
   1e387:	add    BYTE PTR [edi+0x0],dh
   1e38a:	push   ebx
   1e38b:	add    BYTE PTR [ebp+0x0],ah
   1e38e:	je     0x1e390
   1e390:	dec    ecx
   1e391:	add    BYTE PTR [esi+0x0],ch
   1e394:	data16 add BYTE PTR [edi+0x0],ch
   1e398:	jb     0x1e39a
   1e39a:	ins    DWORD PTR es:[edi],dx
   1e39b:	add    BYTE PTR [ecx+0x0],ah
   1e39e:	je     0x1e3a0
   1e3a0:	imul   eax,DWORD PTR [eax],0x6e006f
   1e3a6:	inc    esi
   1e3a7:	add    BYTE PTR [ecx+0x0],ch
   1e3aa:	ins    BYTE PTR es:[edi],dx
   1e3ab:	add    BYTE PTR [ebp+0x0],ah
   1e3ae:	add    BYTE PTR [eax],al
   1e3b0:	pop    edx
   1e3b1:	add    BYTE PTR [edi+0x0],dh
   1e3b4:	push   edi
   1e3b5:	add    BYTE PTR [edx+0x0],dh
   1e3b8:	imul   eax,DWORD PTR [eax],0x650074
   1e3be:	inc    esi
   1e3bf:	add    BYTE PTR [ecx+0x0],ch
   1e3c2:	ins    BYTE PTR es:[edi],dx
   1e3c3:	add    BYTE PTR [ebp+0x0],ah
   1e3c6:	add    BYTE PTR [eax],al
   1e3c8:	pop    edx
   1e3c9:	add    BYTE PTR [edi+0x0],dh
   1e3cc:	push   ecx
   1e3cd:	add    BYTE PTR [ebp+0x0],dh
   1e3d0:	add    BYTE PTR gs:[edx+0x0],dh
   1e3d4:	jns    0x1e3d6
   1e3d6:	dec    ecx
   1e3d7:	add    BYTE PTR [esi+0x0],ch
   1e3da:	data16 add BYTE PTR [edi+0x0],ch
   1e3de:	jb     0x1e3e0
   1e3e0:	ins    DWORD PTR es:[edi],dx
   1e3e1:	add    BYTE PTR [ecx+0x0],ah
   1e3e4:	je     0x1e3e6
   1e3e6:	imul   eax,DWORD PTR [eax],0x6e006f
   1e3ec:	inc    esi
   1e3ed:	add    BYTE PTR [ecx+0x0],ch
   1e3f0:	ins    BYTE PTR es:[edi],dx
   1e3f1:	add    BYTE PTR [ebp+0x0],ah
   1e3f4:	add    BYTE PTR [eax],al
   1e3f6:	dec    ecx
   1e3f7:	add    BYTE PTR [edi+0x0],ch
   1e3fa:	inc    ebx
   1e3fb:	add    BYTE PTR [edx+0x0],dh
   1e3fe:	add    BYTE PTR gs:[ecx+0x0],ah
   1e402:	je     0x1e404
   1e404:	add    BYTE PTR gs:[ebx+0x0],dl
   1e408:	jns    0x1e40a
   1e40a:	ins    DWORD PTR es:[edi],dx
   1e40b:	add    BYTE PTR [edx+0x0],ah
   1e40e:	outs   dx,DWORD PTR ds:[esi]
   1e40f:	add    BYTE PTR [eax+eax*1+0x69],ch
   1e413:	add    BYTE PTR [ebx+0x0],ah
   1e416:	dec    esp
   1e417:	add    BYTE PTR [ecx+0x0],ch
   1e41a:	outs   dx,BYTE PTR ds:[esi]
   1e41b:	add    BYTE PTR [ebx+0x0],ch
   1e41e:	add    BYTE PTR [eax],al
   1e420:	dec    ecx
   1e421:	add    BYTE PTR [edi+0x0],ch
   1e424:	inc    ebx
   1e425:	add    BYTE PTR [edx+0x0],dh
   1e428:	add    BYTE PTR gs:[ecx+0x0],ah
   1e42c:	je     0x1e42e
   1e42e:	add    BYTE PTR gs:[eax+eax*1+0x65],al
   1e433:	add    BYTE PTR [esi+0x0],dh
   1e436:	imul   eax,DWORD PTR [eax],0x650063
   1e43c:	add    BYTE PTR [eax],al
   1e43e:	push   ebx
   1e43f:	add    BYTE PTR [ebp+0x0],ah
   1e442:	inc    ebx
   1e443:	add    BYTE PTR [edx+0x0],dh
   1e446:	add    BYTE PTR gs:[ecx+0x0],ah
   1e44a:	je     0x1e44c
   1e44c:	add    BYTE PTR gs:[ebx+0x0],al
   1e450:	ins    BYTE PTR es:[edi],dx
   1e451:	add    BYTE PTR [ecx+0x0],ch
   1e454:	add    BYTE PTR gs:[esi+0x0],ch
   1e458:	je     0x1e45a
   1e45a:	push   ebx
   1e45b:	add    BYTE PTR [ebp+0x0],ah
   1e45e:	arpl   WORD PTR [eax],ax
   1e460:	jne    0x1e462
   1e462:	jb     0x1e464
   1e464:	imul   eax,DWORD PTR [eax],0x790074
   1e46a:	add    BYTE PTR [eax],al
   1e46c:	pop    edx
   1e46d:	add    BYTE PTR [edi+0x0],dh
   1e470:	dec    ebp
   1e471:	add    BYTE PTR [ecx+0x0],ah
   1e474:	jo     0x1e476
   1e476:	push   esi
   1e477:	add    BYTE PTR [ecx+0x0],ch
   1e47a:	add    BYTE PTR gs:[edi+0x0],dh
   1e47e:	dec    edi
   1e47f:	add    BYTE PTR [esi+0x0],ah
   1e482:	push   ebx
   1e483:	add    BYTE PTR [ebp+0x0],ah
   1e486:	arpl   WORD PTR [eax],ax
   1e488:	je     0x1e48a
   1e48a:	imul   eax,DWORD PTR [eax],0x6e006f
   1e490:	add    BYTE PTR [eax],al
   1e492:	pop    edx
   1e493:	add    BYTE PTR [edi+0x0],dh
   1e496:	inc    ebx
   1e497:	add    BYTE PTR [edx+0x0],dh
   1e49a:	add    BYTE PTR gs:[ecx+0x0],ah
   1e49e:	je     0x1e4a0
   1e4a0:	add    BYTE PTR gs:[ebx+0x0],dl
   1e4a4:	add    BYTE PTR gs:[ebx+0x0],ah
   1e4a8:	je     0x1e4aa
   1e4aa:	imul   eax,DWORD PTR [eax],0x6e006f
   1e4b0:	add    BYTE PTR [eax],al
   1e4b2:	pop    edx
   1e4b3:	add    BYTE PTR [edi+0x0],dh
   1e4b6:	push   ebp
   1e4b7:	add    BYTE PTR [esi+0x0],ch
   1e4ba:	ins    DWORD PTR es:[edi],dx
   1e4bb:	add    BYTE PTR [ecx+0x0],ah
   1e4be:	jo     0x1e4c0
   1e4c0:	push   esi
   1e4c1:	add    BYTE PTR [ecx+0x0],ch
   1e4c4:	add    BYTE PTR gs:[edi+0x0],dh
   1e4c8:	dec    edi
   1e4c9:	add    BYTE PTR [esi+0x0],ah
   1e4cc:	push   ebx
   1e4cd:	add    BYTE PTR [ebp+0x0],ah
   1e4d0:	arpl   WORD PTR [eax],ax
   1e4d2:	je     0x1e4d4
   1e4d4:	imul   eax,DWORD PTR [eax],0x6e006f
   1e4da:	add    BYTE PTR [eax],al
   1e4dc:	dec    ebx
   1e4dd:	add    BYTE PTR [ebp+0x0],ah
   1e4e0:	dec    ecx
   1e4e1:	add    BYTE PTR [esi+0x0],ch
   1e4e4:	imul   eax,DWORD PTR [eax],0x690074
   1e4ea:	popa   
   1e4eb:	add    BYTE PTR [eax+eax*1+0x69],ch
   1e4ef:	add    BYTE PTR [edx+0x0],bh
   1e4f2:	add    BYTE PTR gs:[ebp+0x0],cl
   1e4f6:	jne    0x1e4f8
   1e4f8:	je     0x1e4fa
   1e4fa:	add    BYTE PTR gs:[eax+0x0],bh
   1e4fe:	add    BYTE PTR [eax],al
   1e500:	push   eax
   1e501:	add    BYTE PTR [ebx+0x0],dh
   1e504:	dec    esp
   1e505:	add    BYTE PTR [edi+0x0],ch
   1e508:	outs   dx,DWORD PTR ds:[esi]
   1e509:	add    BYTE PTR [ebx+0x0],ch
   1e50c:	jne    0x1e50e
   1e50e:	jo     0x1e510
   1e510:	push   eax
   1e511:	add    BYTE PTR [edx+0x0],dh
   1e514:	outs   dx,DWORD PTR ds:[esi]
   1e515:	add    BYTE PTR [ebx+0x0],ah
   1e518:	add    BYTE PTR gs:[ebx+0x0],dh
   1e51c:	jae    0x1e51e
   1e51e:	inc    edx
   1e51f:	add    BYTE PTR [ecx+0x0],bh
   1e522:	push   eax
   1e523:	add    BYTE PTR [edx+0x0],dh
   1e526:	outs   dx,DWORD PTR ds:[esi]
   1e527:	add    BYTE PTR [ebx+0x0],ah
   1e52a:	add    BYTE PTR gs:[ebx+0x0],dh
   1e52e:	jae    0x1e530
   1e530:	dec    ecx
   1e531:	add    BYTE PTR [eax+eax*1+0x0],ah
   1e535:	add    BYTE PTR [ebx+0x0],cl
   1e538:	add    BYTE PTR gs:[edi+0x0],al
   1e53c:	add    BYTE PTR gs:[eax+eax*1+0x43],dh
   1e541:	add    BYTE PTR [ebp+0x0],dh
   1e544:	jb     0x1e546
   1e546:	jb     0x1e548
   1e548:	add    BYTE PTR gs:[esi+0x0],ch
   1e54c:	je     0x1e54e
   1e54e:	push   esp
   1e54f:	add    BYTE PTR [eax+0x0],ch
   1e552:	jb     0x1e554
   1e554:	add    BYTE PTR gs:[ecx+0x0],ah
   1e558:	add    BYTE PTR fs:[eax],al
   1e55b:	add    BYTE PTR [eax+eax*1+0x2d],dl
   1e55f:	add    BYTE PTR [ecx],cl
   1e561:	add    BYTE PTR ds:0x24000000,dl
   1e567:	adc    BYTE PTR [ecx-0xb],dl
   1e56a:	jae    0x1e572
   1e56c:	push   DWORD PTR ds:0xef7c369d
   1e572:	icebp  
   1e573:	fsubr  QWORD PTR [esi]
   1e575:	mov    BYTE PTR [ebx-0x7cac801a],cl
   1e57b:	dec    ebx
   1e57c:	(bad)  [ebx-0x3fcd79c6]
   1e582:	mov    cl,0x9f
   1e584:	into   
   1e585:	fldenv [edx]
   1e587:	pop    ss
   1e588:	fstp   QWORD PTR [edi+esi*2]
   1e58b:	xchg   ecx,eax
   1e58c:	sti    
   1e58d:	mov    dl,0x88
   1e58f:	div    DWORD PTR [edi+0x4c27e096]
   1e595:	mov    eax,ds:0xffa60fed
   1e59a:	add    ah,cl
   1e59c:	push   ebx
   1e59d:	add    BYTE PTR [edi],ah
   1e59f:	add    BYTE PTR ds:0x6001300,dl
   1e5a5:	add    BYTE PTR [eax],al
   1e5a7:	add    bl,al
   1e5a9:	call   0xb50a43e8
   1e5ae:	cmp    BYTE PTR [edi+0x70],bl
   1e5b1:	adc    BYTE PTR [edx-0x59c57604],ah
   1e5b7:	or     ebp,DWORD PTR [eax+eiz*2+0xd749c74]
   1e5be:	pushf  
   1e5bf:	pop    ds
   1e5c0:	mov    cl,0x70
   1e5c2:	fistp  QWORD PTR [eax]
   1e5c4:	mov    ebx,?
   1e5c6:	or     esp,DWORD PTR [eax+eiz*1+0x5ba41e3]
   1e5cd:	popf   
   1e5ce:	or     BYTE PTR [ecx+0x11],dl
   1e5d1:	pop    ds
   1e5d2:	pop    fs
   1e5d4:	push   cs
   1e5d5:	fs push esi
   1e5d7:	fstp   QWORD PTR [ebx+0x49cc0046]
   1e5dd:	add    BYTE PTR [eax+eax*1],ah
   1e5e0:	or     al,0x0
   1e5e2:	push   es
   1e5e3:	add    BYTE PTR [edx],al
   1e5e5:	add    BYTE PTR ds:0x15003100,dh
   1e5eb:	add    BYTE PTR [eax+eax*1],bl
   1e5ee:	add    BYTE PTR [eax],al
   1e5f0:	mov    ss,WORD PTR [edx+0x16bb6bba]
   1e5f6:	mov    ?,WORD PTR [esi+0x1d]
   1e5f9:	jmp    0x3974d9d6
   1e5fe:	out    dx,al
   1e5ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1e600:	enter  0xc2c4,0x34
   1e604:	push   edi
   1e605:	(bad)  
   1e606:	test   eax,0x979b6207
   1e60b:	inc    ebx
   1e60c:	retf   
   1e60d:	mov    ebx,0xcc0017f8
   1e612:	add    BYTE PTR cs:[edx+0x0],cl
   1e616:	or     BYTE PTR [eax],al
   1e618:	add    BYTE PTR [eax],al
   1e61a:	add    BYTE PTR [eax],al
   1e61c:	inc    esi
   1e61d:	sbb    al,0x74
   1e61f:	retf   0x894b
   1e622:	test   eax,0xb9b11d06
   1e627:	lea    esp,[edi+0x40]
   1e62a:	cmp    BYTE PTR [ecx],al
   1e62c:	sub    al,0xf6
   1e62e:	mov    edi,0xfb45f923
   1e633:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1e634:	and    al,0xe3
   1e636:	sbb    edi,DWORD PTR [edi]
   1e638:	gs stc 
   1e63a:	out    dx,al
   1e63b:	fidivr WORD PTR [ecx]
   1e63d:	push   edx
   1e63e:	inc    esi
   1e63f:	push   cs
   1e640:	sbb    al,0xd3
   1e642:	mul    BYTE PTR [esi+0x790baf9b]
   1e648:	call   0x4def:0x4397bfe
   1e64f:	pusha  
   1e650:	adc    ecx,DWORD PTR [ebp+0x2f2273eb]
   1e656:	cli    
   1e657:	rol    BYTE PTR [eax],1
   1e659:	int3   
   1e65a:	outs   dx,BYTE PTR ds:[esi]
   1e65b:	add    BYTE PTR [edx],bl
   1e65d:	add    BYTE PTR [eax],dl
   1e65f:	add    BYTE PTR [eax],cl
   1e661:	add    BYTE PTR [eax],al
   1e663:	add    BYTE PTR [edx+0x0],al
   1e666:	dec    edx
   1e667:	add    BYTE PTR [eax],cl
   1e669:	add    BYTE PTR [eax],al
   1e66b:	add    BYTE PTR [eax],al
   1e66d:	add    ah,al
   1e66f:	cmc    
   1e670:	mov    esi,0xfe6b7148
   1e675:	cmp    al,BYTE PTR [ebx+0x33]
   1e678:	icebp  
   1e679:	(bad)  
   1e67a:	int    0x57
   1e67c:	jl     0x1e642
   1e67e:	or     al,0xcc
   1e680:	test   eax,0x1565411f
   1e685:	sbb    BYTE PTR [ebp+0x21],al
   1e688:	xor    BYTE PTR [esi+0x24ea3748],bl
   1e68e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1e68f:	in     eax,0x33
   1e691:	sub    ch,BYTE PTR [eax]
   1e693:	pop    ds
   1e694:	pop    edx
   1e695:	pop    ebx
   1e696:	add    ah,cl
   1e698:	inc    edx
   1e699:	daa    
   1e69a:	add    BYTE PTR ds:0x36eacc00,dl
   1e6a0:	sahf   
   1e6a1:	aad    0x15
   1e6a3:	std    
   1e6a4:	in     al,dx
   1e6a5:	jae    0x1e6ab
   1e6a7:	or     ecx,DWORD PTR [edi]
   1e6a9:	jp     0x1e638
   1e6ab:	mov    ebx,0x194fc218
   1e6b0:	xor    ebx,DWORD PTR [esi-0x2f]
   1e6b3:	sub    DWORD PTR [edx],0xe5d715ef
   1e6b9:	stos   BYTE PTR es:[edi],al
   1e6ba:	pop    esp
   1e6bb:	dec    edx
   1e6bc:	inc    ecx
   1e6bd:	arpl   bp,si
   1e6bf:	cmc    
   1e6c0:	lea    ecx,[edx+ebx*2+0x2c]
   1e6c4:	call   0x53cc:0xa952a2
   1e6cb:	aas    
   1e6cc:	or     DWORD PTR [eax],eax
   1e6ce:	adc    eax,0xd3e3e200
   1e6d3:	cmp    ah,0x62
   1e6d6:	push   esp
   1e6d7:	cs aas 
   1e6d9:	cmp    eax,0xb10500d5
   1e6de:	ret    
   1e6df:	push   edx
   1e6e0:	push   cs
   1e6e1:	loop   0x1e679
   1e6e3:	or     al,0xfd
   1e6e5:	dec    esi
   1e6e6:	test   al,0x94
   1e6e8:	repnz mov eax,ds:0xdb0297b1
   1e6ee:	jmp    0x534ab20a
   1e6f3:	mov    ebx,0x1056e94d
   1e6f8:	push   ds
   1e6f9:	mov    edi,0xb3a056e8
   1e6fe:	leave  
   1e6ff:	xor    eax,0xb0e86eb7
   1e704:	add    ah,cl
   1e706:	inc    ebx
   1e707:	xor    DWORD PTR [edi],edx
   1e709:	add    al,0x15
   1e70b:	adc    DWORD PTR [ecx],esi
   1e70d:	cmp    al,0x1a
   1e70f:	pop    ss
   1e710:	add    al,0x5
   1e712:	add    ah,cl
   1e714:	push   0xffffff83
   1e716:	xor    eax,0xcb9635ea
   1e71b:	xchg   ebp,edx
   1e71d:	mov    edx,0x2b787979
   1e722:	sub    eax,0x4019c6f2
   1e727:	sub    BYTE PTR [esi-0x18482eb9],cl
   1e72d:	(bad)  
   1e72e:	xor    BYTE PTR [eax],bl
   1e730:	in     al,dx
   1e731:	push   ebx
   1e732:	sti    
   1e733:	mov    dl,0x0
   1e735:	int3   
   1e736:	dec    esp
   1e737:	and    ecx,DWORD PTR [esi]
   1e739:	add    eax,0x100b2528
   1e73e:	adc    edx,DWORD PTR [ebx]
   1e740:	or     edi,DWORD PTR [eax]
   1e742:	add    ah,cl
   1e744:	js     0x1e791
   1e746:	int3   
   1e747:	sub    eax,0xcf2aff18
   1e74c:	mov    edx,0x85bb5605
   1e751:	sub    BYTE PTR [eax+0x77],0x5e
   1e755:	adc    edx,DWORD PTR [eax-0x7b]
   1e758:	fisttp QWORD PTR [esp+edx*8-0x58]
   1e75c:	push   ebp
   1e75d:	fist   WORD PTR [ecx-0x49]
   1e760:	cwde   
   1e761:	mov    ch,0x95
   1e763:	scas   eax,DWORD PTR es:[edi]
   1e764:	jge    0x1e7bb
   1e766:	sbb    eax,0xd3052607
   1e76b:	rcl    bl,cl
   1e76d:	test   DWORD PTR [edx],eax
   1e76f:	(bad)  
   1e770:	xchg   ebx,eax
   1e771:	pop    edx
   1e772:	cmp    dl,dl
   1e774:	arpl   WORD PTR ds:0x2e076db0,sp
   1e77a:	pop    ecx
   1e77b:	xlat   BYTE PTR ds:[ebx]
   1e77c:	arpl   WORD PTR [edx+0x234ccc00],sp
   1e782:	push   cs
   1e783:	add    eax,0x100b2528
   1e788:	adc    edx,DWORD PTR [ebx]
   1e78a:	or     ebp,DWORD PTR [esi]
   1e78c:	add    ah,cl
   1e78e:	mov    ah,0x4a
   1e790:	xchg   BYTE PTR ds:0x5a0c7e0e,cl
   1e796:	xchg   edi,eax
   1e797:	stos   BYTE PTR es:[edi],al
   1e798:	iret   
   1e799:	inc    ebx
   1e79a:	mov    ah,al
   1e79c:	push   0xffffffcd
   1e79e:	mov    bh,0xbf
   1e7a0:	add    eax,0x9656745b
   1e7a5:	je     0x1e754
   1e7a7:	(bad)  
   1e7a8:	in     al,dx
   1e7a9:	jnp    0x1e752
   1e7ab:	out    dx,al
   1e7ac:	push   ebp
   1e7ad:	jle    0x1e74b
   1e7af:	xchg   esi,eax
   1e7b0:	mov    ebp,0xb929ff9b
   1e7b5:	mov    eax,0x1c0ad7a
   1e7ba:	push   ecx
   1e7bb:	idiv   BYTE PTR [edx+0x4d4f5126]
   1e7c1:	loope  0x1e7c0
   1e7c3:	add    BYTE PTR [ebx+0x0],ch
   1e7c6:	push   cs
   1e7c7:	add    BYTE PTR [edi],dl
   1e7c9:	add    BYTE PTR [eax+eax*1],bl
   1e7cc:	or     eax,DWORD PTR [eax]
   1e7ce:	or     DWORD PTR [eax],eax
   1e7d0:	pop    edi
   1e7d1:	add    BYTE PTR [ecx],al
   1e7d3:	add    BYTE PTR [eax+eax*1],bl
   1e7d6:	dec    edx
   1e7d7:	add    BYTE PTR [eax],cl
   1e7d9:	add    BYTE PTR [eax],al
   1e7db:	add    BYTE PTR [eax],al
   1e7dd:	add    BYTE PTR [esi-0x527dced5],dh
   1e7e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1e7e4:	mov    dh,0x6f
   1e7e6:	fdiv   QWORD PTR [eax-0x2b]
   1e7e9:	mov    al,0x45
   1e7eb:	mov    ds:0x67aca399,al
   1e7f0:	imul   BYTE PTR [edx]
   1e7f2:	xchg   ecx,eax
   1e7f3:	fisttp DWORD PTR [edi+edi*2+0x5cb50f13]
   1e7fa:	adc    eax,0xf8123681
   1e7ff:	fisubr WORD PTR [edx]
   1e801:	fbld   TBYTE PTR [ecx+0x366d5514]
   1e807:	lods   eax,DWORD PTR ds:[esi]
   1e808:	jo     0x1e83d
   1e80a:	sub    DWORD PTR [edi-0x50],0x6e0061d1
   1e811:	sbb    dl,BYTE PTR [eax]
   1e813:	or     BYTE PTR [eax],al
   1e815:	inc    edx
   1e816:	dec    edx
   1e817:	or     BYTE PTR [eax],al
   1e819:	add    BYTE PTR [edi+esi*2-0x41],cl
   1e81d:	jae    0x1e842
   1e81f:	add    eax,0x798b68de
   1e824:	pop    ecx
   1e825:	leave  
   1e826:	ror    BYTE PTR [ecx],cl
   1e828:	test   BYTE PTR [eax+0x36],0x6
   1e82c:	arpl   WORD PTR [esi-0x3a60402b],ax
   1e832:	jno    0x1e80a
   1e834:	ja     0x1e836
   1e836:	cld    
   1e837:	sub    al,0x43
   1e839:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1e83a:	add    DWORD PTR [edx+edx*1+0x54],ebx
   1e83e:	xchg   ebx,eax
   1e83f:	fmul   DWORD PTR [esi+eax*1]
   1e842:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1e843:	mov    bl,0x9f
   1e845:	push   eax
   1e846:	mov    cl,0x9
   1e848:	mov    bh,0xc0
   1e84a:	sbb    dl,BYTE PTR [ebx]
   1e84c:	mov    ?,WORD PTR [ecx-0xd]
   1e84f:	jns    0x1e866
   1e851:	add    BYTE PTR [eax+eax*1+0xf],bl
   1e855:	add    BYTE PTR [edx],ch
   1e857:	add    BYTE PTR [edx],cl
   1e859:	add    BYTE PTR [edi],al
   1e85b:	add    BYTE PTR [ecx],dl
   1e85d:	add    BYTE PTR [eax],cl
   1e85f:	add    BYTE PTR [edi],bh
   1e861:	add    BYTE PTR ds:0x1b000000,bh
   1e867:	add    BYTE PTR [eax],ch
   1e869:	add    BYTE PTR [edi],ch
   1e86b:	add    BYTE PTR [edx],cl
   1e86d:	add    BYTE PTR [edx],cl
   1e86f:	add    BYTE PTR [edi],al
   1e871:	add    BYTE PTR [ecx],dl
   1e873:	add    BYTE PTR [eax],cl
   1e875:	add    BYTE PTR [esi+0x0],bl
   1e878:	add    DWORD PTR [eax],eax
   1e87a:	outs   dx,BYTE PTR ds:[esi]
   1e87b:	add    BYTE PTR [eax],al
   1e87d:	add    BYTE PTR [eax+0x6a814661],cl
   1e883:	sbb    DWORD PTR [ecx+0x49],edx
   1e886:	xor    ebp,DWORD PTR [ebp+0x5f936970]
   1e88c:	cmp    al,0x4a
   1e88e:	jp     0x1e8cf
   1e890:	adc    DWORD PTR [esi+ecx*2-0x360faf77],edx
   1e897:	loop   0x1e8f9
   1e899:	pushf  
   1e89a:	(bad)  
   1e89c:	push   0x1b
   1e89e:	add    ah,cl
   1e8a0:	les    ebp,FWORD PTR ds:0xeb34c387
   1e8a6:	add    DWORD PTR [esi+0x25],edx
   1e8a9:	dec    ecx
   1e8aa:	add    BYTE PTR [edx-0x1],bh
   1e8ad:	sbb    dl,dh
   1e8af:	out    0x31,eax
   1e8b1:	push   es
   1e8b2:	xchg   DWORD PTR [ebx],esp
   1e8b4:	loopne 0x1e858
   1e8b6:	lds    ecx,FWORD PTR [eax+edi*1-0x2f408816]
   1e8bd:	out    dx,al
   1e8be:	(bad)  
   1e8bf:	pop    ds
   1e8c0:	pop    es
   1e8c1:	xchg   esp,eax
   1e8c2:	dec    ecx
   1e8c3:	cmp    BYTE PTR [eax+edi*8],dh
   1e8c6:	pop    ebp
   1e8c7:	hlt    
   1e8c8:	je     0x1e902
   1e8ca:	xchg   edi,eax
   1e8cb:	cmp    edx,esp
   1e8cd:	fdivr  st,st(5)
   1e8cf:	aad    0xd4
   1e8d1:	add    bh,0xf
   1e8d4:	cwde   
   1e8d5:	mov    dl,0x50
   1e8d7:	in     al,dx
   1e8d8:	sbb    eax,0xc8352500
   1e8dd:	sbb    dl,dl
   1e8df:	je     0x1e8e7
   1e8e1:	stc    
   1e8e2:	xchg   ecx,eax
   1e8e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
   1e8e4:	jmp    0x709616d1
   1e8e9:	sbb    al,0x76
   1e8eb:	lods   al,BYTE PTR es:[esi]
   1e8ed:	jg     0x1e90b
   1e8ef:	jne    0x1e8a7
   1e8f1:	mov    eax,ds:0xddb8a5c4
   1e8f6:	sub    ch,BYTE PTR [esp+eax*1+0x76]
   1e8fa:	(bad)  
   1e8fb:	test   eax,0x108face0
   1e901:	mov    al,0x5d
   1e903:	mov    ds:0xcc00e456,eax
   1e908:	add    BYTE PTR cs:[ebp+0x0],bl
   1e90c:	or     al,BYTE PTR [eax]
   1e90e:	or     al,BYTE PTR [eax]
   1e910:	add    BYTE PTR [eax],al
   1e912:	retf   
   1e913:	push   ebp
   1e914:	add    al,0x3e
   1e916:	mov    ah,0xf
   1e918:	sti    
   1e919:	out    0xc6,eax
   1e91b:	jl     0x1e8b9
   1e91d:	add    BYTE PTR [esi],dl
   1e91f:	dec    edi
   1e920:	stos   DWORD PTR es:[edi],eax
   1e921:	aaa    
   1e922:	imul   ebx,DWORD PTR [ebx-0x537d20e3],0x10e29b35
   1e92c:	test   BYTE PTR [edi-0x6],0x9d
   1e930:	pop    ecx
   1e931:	dec    edi
   1e932:	or     eax,0xb305aac0
   1e937:	inc    ebx
   1e938:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
   1e93a:	lods   al,BYTE PTR ds:[esi]
   1e93b:	sti    
   1e93c:	xlat   BYTE PTR ds:[ebx]
   1e93d:	popa   
   1e93e:	gs mov cl,al
   1e941:	push   es
   1e942:	add    cl,0xdc
   1e945:	sbb    BYTE PTR [eax+0x617e9d2e],dh
   1e94b:	jl     0x1e9a1
   1e94d:	add    BYTE PTR [eax+eax*1+0xf],bl
   1e951:	add    BYTE PTR [edx],ch
   1e953:	add    BYTE PTR [edx],cl
   1e955:	add    BYTE PTR [edi],al
   1e957:	add    BYTE PTR [ecx],dl
   1e959:	add    BYTE PTR [eax],cl
   1e95b:	add    BYTE PTR [edi],bh
   1e95d:	add    BYTE PTR ds:0x1b000000,bh
   1e963:	add    BYTE PTR [eax],ch
   1e965:	add    BYTE PTR [edi],ch
   1e967:	add    BYTE PTR [edx],cl
   1e969:	add    BYTE PTR [edx],cl
   1e96b:	add    BYTE PTR [edi],al
   1e96d:	add    BYTE PTR [ecx],dl
   1e96f:	add    BYTE PTR [eax],cl
   1e971:	add    BYTE PTR [esi+0x0],bl
   1e974:	add    DWORD PTR [eax],eax
   1e976:	outs   dx,BYTE PTR ds:[esi]
   1e977:	add    BYTE PTR [eax],bh
   1e979:	add    BYTE PTR [esi],dl
   1e97b:	add    BYTE PTR [ebx],bl
   1e97d:	add    BYTE PTR [edi],bl
   1e97f:	add    BYTE PTR [ebx],dl
   1e981:	add    BYTE PTR [edi],dl
   1e983:	add    BYTE PTR [ecx],al
   1e985:	add    BYTE PTR [edi],ch
   1e987:	add    BYTE PTR [eax],al
   1e989:	add    BYTE PTR ds:0x3a7052fd,cl
   1e98f:	mov    ebx,0x43b5a690
   1e994:	daa    
   1e995:	jmp    0x1e980
   1e997:	jmp    0xae41:0x9ebfa523
   1e99e:	push   DWORD PTR [eax]
   1e9a0:	enter  0x5c9a,0xbd
   1e9a4:	dec    edx
   1e9a5:	fnstsw WORD PTR [edx]
   1e9a7:	jb     0x1e92a
   1e9a9:	sbb    eax,0x8e9f501b
   1e9ae:	cmp    cl,BYTE PTR [ecx]
   1e9b0:	jb     0x1e9ed
   1e9b2:	data16 add BYTE PTR [eax+eax*1+0xf],bl
   1e9b7:	add    BYTE PTR [edx],ch
   1e9b9:	add    BYTE PTR [edx],cl
   1e9bb:	add    BYTE PTR [edi],al
   1e9bd:	add    BYTE PTR [ecx],dl
   1e9bf:	add    BYTE PTR [eax],cl
   1e9c1:	add    BYTE PTR [edi],bh
   1e9c3:	add    BYTE PTR ds:0x1b000000,bh
   1e9c9:	add    BYTE PTR [eax],al
   1e9cb:	add    BYTE PTR [eax-0x6b],dl
   1e9ce:	cmp    eax,DWORD PTR [esp+edi*8+0x66]
   1e9d2:	mov    edi,0x79761bb
   1e9d7:	sbb    edi,DWORD PTR [ecx]
   1e9d9:	(bad)  
   1e9da:	in     al,dx
   1e9db:	and    eax,eax
   1e9dd:	push   edx
   1e9de:	test   ch,bh
   1e9e0:	mov    cl,0x74
   1e9e2:	out    dx,eax
   1e9e3:	(bad)  [edi+0x456a6519]
   1e9e9:	cmp    eax,0xd4938b03
   1e9ee:	cli    
   1e9ef:	ffree  st(3)
   1e9f1:	call   0x1333:0xac38b9ae
   1e9f8:	inc    esp
   1e9f9:	xchg   edi,eax
   1e9fa:	adc    eax,0x15bfe620
   1e9ff:	es int 0x0
   1ea02:	pop    esp
   1ea03:	add    BYTE PTR [esi],cl
   1ea05:	add    BYTE PTR [edi],dh
   1ea07:	add    BYTE PTR [edx],al
   1ea09:	add    BYTE PTR [esi],cl
   1ea0b:	add    BYTE PTR [edx],bl
   1ea0d:	add    BYTE PTR [edi],al
   1ea0f:	add    BYTE PTR [esi],al
   1ea11:	add    BYTE PTR [ebx],cl
   1ea13:	add    BYTE PTR ds:0x2c001100,ah
   1ea19:	add    BYTE PTR [edx],al
   1ea1b:	add    BYTE PTR [ebx],cl
   1ea1d:	add    BYTE PTR [ecx],al
   1ea1f:	add    BYTE PTR [edi],al
   1ea21:	add    BYTE PTR [ebx],cl
   1ea23:	add    BYTE PTR [ecx],bh
   1ea25:	add    BYTE PTR [edi],cl
   1ea27:	add    BYTE PTR [edx],cl
   1ea29:	add    BYTE PTR [edx],cl
   1ea2b:	add    BYTE PTR [edi],al
   1ea2d:	add    BYTE PTR [ecx],dl
   1ea2f:	add    BYTE PTR [eax],cl
   1ea31:	add    BYTE PTR [ecx],dl
   1ea33:	add    BYTE PTR [edi],bl
   1ea35:	add    BYTE PTR [esi],dh
   1ea37:	add    BYTE PTR [edi],al
   1ea39:	add    BYTE PTR [eax],al
   1ea3b:	add    BYTE PTR [edi],dl
   1ea3d:	add    BYTE PTR [ebx],cl
   1ea3f:	add    BYTE PTR [edx],bl
   1ea41:	add    BYTE PTR [edi],dh
   1ea43:	add    BYTE PTR [eax+eax*1],ch
   1ea46:	add    DWORD PTR [eax],eax
   1ea48:	sbb    al,BYTE PTR [eax]
   1ea4a:	push   es
   1ea4b:	add    BYTE PTR ds:0x3f000300,bl
   1ea51:	add    BYTE PTR [esi],dh
   1ea53:	add    BYTE PTR [ecx],dl
   1ea55:	add    BYTE PTR [eax],ch
   1ea57:	add    BYTE PTR [edi],cl
   1ea59:	add    BYTE PTR [esi],dh
   1ea5b:	add    BYTE PTR [edi],dl
   1ea5d:	add    BYTE PTR [eax+eax*1],al
   1ea60:	pop    ds
   1ea61:	add    BYTE PTR [edx],cl
   1ea63:	add    BYTE PTR [esi],al
   1ea65:	add    BYTE PTR [esi],dl
   1ea67:	add    BYTE PTR [edi],ch
   1ea69:	add    BYTE PTR [eax],al
   1ea6b:	add    BYTE PTR [esi-0x30775745],dl
   1ea71:	stos   BYTE PTR es:[edi],al
   1ea72:	mov    ebx,0xea77479e
   1ea77:	lahf   
   1ea78:	outs   dx,DWORD PTR ds:[esi]
   1ea79:	test   edx,edi
   1ea7b:	(bad)  
   1ea7c:	test   al,0x24
   1ea7e:	adc    BYTE PTR [ebx],bl
   1ea80:	push   es
   1ea81:	xor    eax,0x7ce59fc4
   1ea86:	jbe    0x1ea5e
   1ea88:	pop    edi
   1ea89:	clc    
   1ea8a:	daa    
   1ea8b:	inc    ebp
   1ea8c:	pop    edx
   1ea8d:	sub    al,0x9b
   1ea8f:	imul   ecx,DWORD PTR [edi-0x6a],0x8f089d3c
   1ea96:	push   ebp
   1ea97:	stc    
   1ea98:	sub    al,0x41
   1ea9a:	and    al,0xa5
   1ea9c:	test   eax,0x1f006c00
   1eaa1:	add    BYTE PTR [edx],dl
   1eaa3:	add    BYTE PTR [edx],dl
   1eaa5:	add    BYTE PTR [eax],al
   1eaa7:	add    BYTE PTR [ebp+0x0],bl
   1eaaa:	dec    ebx
   1eaab:	add    BYTE PTR ds:0x1d00,bl
   1eab1:	add    BYTE PTR [ebp+ebx*1+0x5a],ah
   1eab5:	jbe    0x1eb00
   1eab7:	sbb    al,0x2d
   1eab9:	mov    edx,0xa03362c5
   1eabe:	pop    esp
   1eabf:	leave  
   1eac0:	je     0x1eaaf
   1eac2:	and    BYTE PTR [ebp+0x44],al
   1eac5:	mov    ecx,0xd6ee79a8
   1eaca:	pop    eax
   1eacb:	mov    ch,BYTE PTR [eax]
   1eacd:	cli    
   1eace:	jno    0x1ea5c
   1ead0:	jge    0x1eb0d
   1ead2:	inc    ecx
   1ead3:	lds    esi,FWORD PTR [eax+0x6e]
   1ead6:	into   
   1ead7:	dec    edi
   1ead8:	jns    0x1eb2a
   1eada:	imul   edx,DWORD PTR [esi-0x7a1b99a0],0xffffffbf
   1eae1:	mov    al,0xec
   1eae3:	pushaw 
   1eae5:	gs enter 0x9707,0x2e
   1eaea:	xor    DWORD PTR [ebx-0x33ffcbd1],esi
   1eaf0:	pop    edx
   1eaf1:	sub    eax,0x6163725
   1eaf6:	sbb    BYTE PTR [eax],cl
   1eaf8:	xor    DWORD PTR [edx+ebx*1],edi
   1eafb:	pop    ss
   1eafc:	add    al,0x5
   1eafe:	add    ah,cl
   1eb00:	outs   dx,DWORD PTR ds:[esi]
   1eb01:	mov    al,ds:0xacfbf67d
   1eb06:	sub    BYTE PTR [ebp-0x2f],0xb8
   1eb0a:	or     al,0x51
   1eb0c:	push   esp
   1eb0d:	jge    0x1eae2
   1eb0f:	in     al,dx
   1eb10:	sbb    BYTE PTR [esp+eiz*2],bl
   1eb13:	js     0x1eaf4
   1eb15:	mov    eax,ds:0xb0a4976c
   1eb1a:	mov    BYTE PTR [ebp+0x5c],cl
   1eb1d:	add    ebx,DWORD PTR [esi+0x55a91f12]
   1eb23:	(bad)  
   1eb25:	push   esp
   1eb26:	scas   eax,DWORD PTR es:[edi]
   1eb27:	xchg   edi,eax
   1eb28:	cmp    bl,BYTE PTR [esi+0x2971ba6b]
   1eb2e:	stc    
   1eb2f:	jmp    0x4dc5:0x221f6f73
   1eb36:	je     0x1eaed
   1eb38:	sub    ebp,eax
   1eb3a:	mov    eax,0x4e00a94c
   1eb3f:	cmp    ah,BYTE PTR [ebx]
   1eb41:	and    eax,0x33111d1b
   1eb46:	aas    
   1eb47:	sbb    eax,DWORD PTR [esi]
   1eb49:	add    DWORD PTR [ecx*1+0x2082821],edx
   1eb50:	sbb    eax,0x10cc000b
   1eb55:	(bad)  
   1eb56:	xor    al,0x4d
   1eb58:	retf   0xcef5
   1eb5b:	fwait
   1eb5c:	push   esi
   1eb5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1eb5e:	mov    ds:0x9f87fe52,al
   1eb63:	sbb    ah,BYTE PTR [edi+esi*1+0x67]
   1eb67:	jns    0x1eb4c
   1eb69:	rol    BYTE PTR [edx+edi*4+0x19],1
   1eb6d:	mov    bl,0x5d
   1eb6f:	jp     0x1eb87
   1eb71:	jecxz  0x1eb54
   1eb73:	pop    ebx
   1eb74:	in     eax,dx
   1eb75:	fwait
   1eb76:	rcr    DWORD PTR [esi+0x76],1
   1eb79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1eb7a:	inc    edx
   1eb7b:	ror    DWORD PTR [ebx+0x55],cl
   1eb7e:	push   0xadafbe11
   1eb83:	js     0x1eb66
   1eb85:	rol    BYTE PTR [eax],cl
   1eb87:	int3   
   1eb88:	pop    edx
   1eb89:	sub    eax,0x1b1d2227
   1eb8e:	adc    DWORD PTR [esi],eax
   1eb90:	pop    ss
   1eb91:	and    bh,BYTE PTR [edi]
   1eb93:	sbb    eax,DWORD PTR [esi]
   1eb95:	add    DWORD PTR [ecx*1+0x2082821],edx
   1eb9c:	sbb    eax,0x11cc000b
   1eba1:	repz inc edx
   1eba3:	jecxz  0x1ebb2
   1eba5:	addr16 in al,0xe
   1eba8:	mov    ch,0xf
   1ebaa:	jae    0x1ec09
   1ebac:	shr    BYTE PTR [ebp+0x5e],cl
   1ebaf:	imul   edx,DWORD PTR [edx+0x4029bdde],0x7858de99
   1ebb9:	stc    
   1ebba:	adc    eax,DWORD PTR [ebx+eiz*2+0x35223549]
   1ebc1:	neg    esp
   1ebc3:	cli    
   1ebc4:	push   ebp
   1ebc5:	int3   
   1ebc6:	shr    DWORD PTR [eax],1
   1ebc8:	mov    ds:0x4c904c20,eax
   1ebcd:	and    al,0xb0
   1ebcf:	mov    edi,DWORD PTR [eax+eax*2-0x4e5d641]
   1ebd6:	or     ah,BYTE PTR [eax+eax*1]
   1ebd9:	int3   
   1ebda:	sar    DWORD PTR [edi+0x40bf08b4],1
   1ebe0:	leave  
   1ebe1:	stos   BYTE PTR es:[edi],al
   1ebe2:	sub    al,BYTE PTR [edx]
   1ebe4:	xchg   edi,eax
   1ebe5:	dec    esi
   1ebe6:	imul   edx,DWORD PTR [ebx+0x2ba02a23],0xf122daaa
   1ebf0:	fs mov ebp,0xe93f0cf6
   1ebf6:	jle    0x1ebbb
   1ebf8:	sbb    BYTE PTR [ebp+0x3c78bcb4],al
   1ebfe:	stc    
   1ebff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
   1ec00:	loope  0x1ec46
   1ec02:	jmp    0x830:0x502c5b13
   1ec09:	mov    ds:0xfc8ea99b,al
   1ec0e:	(bad)  
   1ec0f:	jne    0x1ec30
   1ec11:	outs   dx,DWORD PTR ds:[esi]
   1ec12:	mov    DWORD PTR [esi],ebp
   1ec14:	add    ah,cl
   1ec16:	pop    esp
   1ec17:	add    BYTE PTR [eax],bl
   1ec19:	add    BYTE PTR [ebx],ch
   1ec1b:	add    BYTE PTR [eax+eax*1],bl
   1ec1e:	aaa    
   1ec1f:	add    BYTE PTR [ecx],ah
   1ec21:	add    BYTE PTR [ebx],dl
   1ec23:	add    BYTE PTR [edi],bl
   1ec25:	add    BYTE PTR [edx],cl
   1ec27:	add    BYTE PTR [esi],al
   1ec29:	add    BYTE PTR [esi],dl
   1ec2b:	add    BYTE PTR [edi],ch
   1ec2d:	add    BYTE PTR [ecx+0x0],bh
   1ec30:	push   esi
   1ec31:	add    BYTE PTR [eax],al
   1ec33:	add    cl,al
   1ec35:	or     eax,0xef22f149
   1ec3a:	inc    esi
   1ec3b:	(bad)  
   1ec3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
   1ec3d:	pop    edi
   1ec3e:	jne    0x1ec60
   1ec40:	pop    ebx
   1ec41:	inc    eax
   1ec42:	pop    es
   1ec43:	popa   
   1ec44:	aad    0x56
   1ec46:	imul   ecx,DWORD PTR [edx-0x2d],0x72
   1ec4a:	lds    ebx,FWORD PTR [eax+0x5e]
   1ec4d:	in     eax,0xd4
   1ec4f:	cs mov bl,0x60
   1ec52:	mov    ebx,0x7e3e90af
   1ec57:	add    BYTE PTR [eax+eax*1+0x18],bl
   1ec5b:	add    BYTE PTR [ecx],ah
   1ec5d:	add    BYTE PTR [ebx],dl
   1ec5f:	add    BYTE PTR [edi],bl
   1ec61:	add    BYTE PTR [edx],cl
   1ec63:	add    BYTE PTR [esi],al
   1ec65:	add    BYTE PTR [ecx],bh
   1ec67:	add    BYTE PTR [ecx+0x0],bh
   1ec6a:	push   esi
   1ec6b:	add    BYTE PTR [eax],al
   1ec6d:	add    BYTE PTR [esp+edi*4-0x297f7ecb],bl
   1ec74:	xlat   BYTE PTR ds:[ebx]
   1ec75:	pop    DWORD PTR [ecx]
   1ec77:	nop
   1ec78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ec79:	mov    eax,ds:0x1c910486
   1ec7e:	cld    
   1ec7f:	push   0xe4d7a174
   1ec84:	fisubr DWORD PTR [eax]
   1ec86:	sub    edi,ebp
   1ec88:	sbb    bh,BYTE PTR [ecx+0x45504411]
   1ec8e:	inc    ebp
   1ec8f:	add    BYTE PTR [ebx+0x0],dl
   1ec92:	jns    0x1ec94
   1ec94:	jae    0x1ec96
   1ec96:	inc    ebp
   1ec97:	add    BYTE PTR [esi+0x0],dh
   1ec9a:	je     0x1ec9c
   1ec9c:	inc    ebx
   1ec9d:	add    BYTE PTR [eax],al
   1ec9f:	add    BYTE PTR [eax+ebx*1+0x21],bl
   1eca3:	adc    ebx,DWORD PTR [edi]
   1eca5:	or     al,BYTE PTR [esi]
   1eca7:	cmp    DWORD PTR [eax],eax
   1eca9:	int3   
   1ecaa:	mov    ds:0x26c98693,al
   1ecaf:	(bad)  
   1ecb0:	(bad)  
   1ecb1:	push   ds
   1ecb2:	push   esp
   1ecb3:	je     0x1ed33
   1ecb5:	jmp    0x1ec66
   1ecb7:	bound  edx,QWORD PTR [edx+ebx*1+0x67]
   1ecbb:	aas    
   1ecbc:	inc    ebp
   1ecbd:	mov    eax,ds:0xec5689b
   1ecc2:	xlat   BYTE PTR ds:[ebx]
   1ecc3:	nop
   1ecc4:	xchg   DWORD PTR [eax],ebp
   1ecc6:	cdq    
   1ecc7:	rcl    BYTE PTR [ebp-0x7e910fe0],0x2c
   1ecce:	sbb    ch,BYTE PTR [esi]
   1ecd0:	and    DWORD PTR [eax+eax*8+0xca5369],ebx
   1ecd7:	add    BYTE PTR [eax+eax*1+0x0],bl
   1ecdb:	add    BYTE PTR [edx+0x0],dh
   1ecde:	jb     0x1ece0
   1ece0:	add    BYTE PTR [eax],al
   1ece2:	sub    al,BYTE PTR [edi]
   1ece4:	shl    DWORD PTR [edi-0x1267db34],0x94
   1eceb:	adc    al,0xea
   1eced:	pop    ebp
   1ecee:	mov    al,0xa4
   1ecf0:	dec    ebx
   1ecf1:	scas   al,BYTE PTR es:[edi]
   1ecf2:	dec    edi
   1ecf3:	js     0x1ecfb
   1ecf5:	push   ebp
   1ecf6:	fisttp WORD PTR [edx+0x16]
   1ecf9:	icebp  
   1ecfa:	test   eax,0xae60b08f
   1ecff:	sar    BYTE PTR [esi-0x76],1
   1ed02:	jnp    0x1ed0a
   1ed04:	outs   dx,BYTE PTR ds:[esi]
   1ed05:	and    DWORD PTR [ecx],ebp
   1ed07:	clc    
   1ed08:	into   
   1ed09:	mov    ?,WORD PTR [edi+0x1b]
   1ed0c:	outs   dx,BYTE PTR ds:[esi]
   1ed0d:	out    dx,eax
   1ed0e:	aaa    
   1ed0f:	arpl   cx,bx
   1ed11:	je     0x1ed88
   1ed13:	or     esi,DWORD PTR [ebp+0x5ccc007d]
   1ed19:	add    BYTE PTR [ebx+0x63],ah
   1ed1c:	add    ah,cl
   1ed1e:	ret    0x5483
   1ed21:	and    ah,BYTE PTR [esi]
   1ed23:	xor    al,0x90
   1ed25:	xchg   esp,eax
   1ed26:	push   ebx
   1ed27:	out    dx,al
   1ed28:	dec    esp
   1ed29:	mov    edi,0x7aaac485
   1ed2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
   1ed2f:	push   DWORD PTR [edi]
   1ed31:	ins    DWORD PTR es:[edi],dx
   1ed32:	in     eax,0xc3
   1ed34:	cmova  edx,DWORD PTR [esi+0x66]
   1ed38:	pop    esi
   1ed39:	mov    edi,esi
   1ed3b:	test   DWORD PTR [esi+ebp*8-0x2a],ecx
   1ed3f:	outs   dx,BYTE PTR ds:[esi]
   1ed40:	jmp    0xc4a0899c
   1ed45:	sub    BYTE PTR [esi],al
   1ed47:	arpl   WORD PTR [edx],ax
   1ed49:	or     DWORD PTR [edx+0x14],ecx
   1ed4c:	push   0x4da613
   1ed51:	int3   
   1ed52:	and    eax,0x5ccc0053
   1ed57:	add    BYTE PTR [ebx+0x0],dh
   1ed5a:	jns    0x1ed5c
   1ed5c:	jae    0x1ed5e
   1ed5e:	je     0x1ed60
   1ed60:	add    BYTE PTR gs:[ebp+0x0],ch
   1ed64:	jb     0x1ed66
   1ed66:	outs   dx,DWORD PTR ds:[esi]
   1ed67:	add    BYTE PTR [edi+0x0],ch
   1ed6a:	je     0x1ed6c
   1ed6c:	pop    esp
   1ed6d:	add    BYTE PTR [ebx+0x0],dh
   1ed70:	jns    0x1ed72
   1ed72:	jae    0x1ed74
   1ed74:	je     0x1ed76
   1ed76:	add    BYTE PTR gs:[ebp+0x0],ch
   1ed7a:	xor    eax,DWORD PTR [eax]
   1ed7c:	xor    al,BYTE PTR [eax]
   1ed7e:	pop    esp
   1ed7f:	add    BYTE PTR ds:0x5300,ah
   1ed85:	add    BYTE PTR [ecx],dh
   1ed87:	xor    ch,BYTE PTR cs:[esi]
   1ed8a:	xor    eax,DWORD PTR [eax]
   1ed8c:	imul   ebp,DWORD PTR [esi+0x63],0x6572726f
   1ed93:	arpl   WORD PTR [eax+eiz*1+0x6c],si
   1ed97:	outs   dx,BYTE PTR gs:[esi]
   1ed99:	addr16 je 0x1ee04
   1ed9c:	and    BYTE PTR [ebx+0x68],ah
   1ed9f:	arpl   WORD PTR gs:[ebx+0x0],bp
   1eda3:	int3   
   1eda4:	imul   ebp,DWORD PTR [esi+0x63],0x6572726f
   1edab:	arpl   WORD PTR [eax+eiz*1+0x64],si
   1edaf:	popa   
   1edb0:	je     0x1ee13
   1edb2:	and    BYTE PTR [ebx+0x68],ah
   1edb5:	arpl   WORD PTR gs:[ebx+0x0],bp
   1edb9:	int3   
   1edba:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1edc1:	and    BYTE PTR [ecx+ebp*2+0x73],ah
   1edc5:	je     0x1ee28
   1edc7:	outs   dx,BYTE PTR ds:[esi]
   1edc8:	arpl   WORD PTR [ebp+0x20],sp
   1edcb:	je     0x1ee3c
   1edcd:	outs   dx,DWORD PTR ds:[esi]
   1edce:	and    BYTE PTR [esi+0x61],ah
   1edd1:	jb     0x1edf3
   1edd3:	bound  esp,QWORD PTR [ecx+0x63]
   1edd6:	imul   eax,DWORD PTR [eax],0x69
   1edd9:	outs   dx,BYTE PTR ds:[esi]
   1edda:	jbe    0x1ee3d
   1eddc:	ins    BYTE PTR es:[edi],dx
   1eddd:	imul   esp,DWORD PTR [eax+eiz*1+0x64],0x61747369
   1ede5:	outs   dx,BYTE PTR ds:[esi]
   1ede6:	arpl   WORD PTR [ebp+0x20],sp
   1ede9:	arpl   WORD PTR [edi+0x64],bp
   1edec:	add    BYTE PTR gs:[ecx+0x6e],ch
   1edf0:	jbe    0x1ee53
   1edf2:	ins    BYTE PTR es:[edi],dx
   1edf3:	imul   esp,DWORD PTR [eax+eiz*1+0x6c],0x72657469
   1edfb:	popa   
   1edfc:	ins    BYTE PTR es:[edi],dx
   1edfd:	das    
   1edfe:	ins    BYTE PTR es:[edi],dx
   1edff:	outs   dx,BYTE PTR gs:[esi]
   1ee01:	addr16 je 0x1ee6c
   1ee04:	and    BYTE PTR [ebx+0x6f],ah
   1ee07:	fs add BYTE PTR gs:[ecx+0x6e],ch
   1ee0c:	jbe    0x1ee6f
   1ee0e:	ins    BYTE PTR es:[edi],dx
   1ee0f:	imul   esp,DWORD PTR [eax+eiz*1+0x64],0x61747369
   1ee17:	outs   dx,BYTE PTR ds:[esi]
   1ee18:	arpl   WORD PTR [ebp+0x73],sp
   1ee1b:	and    BYTE PTR [ebx+0x65],dh
   1ee1e:	je     0x1ee20
   1ee20:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1ee27:	and    BYTE PTR [ecx+ebp*2+0x74],ch
   1ee2b:	gs jb  0x1ee8f
   1ee2e:	ins    BYTE PTR es:[edi],dx
   1ee2f:	das    
   1ee30:	ins    BYTE PTR es:[edi],dx
   1ee31:	outs   dx,BYTE PTR gs:[esi]
   1ee33:	addr16 je 0x1ee9e
   1ee36:	jae    0x1ee58
   1ee38:	jae    0x1ee9f
   1ee3a:	je     0x1ee3c
   1ee3c:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1ee43:	and    BYTE PTR [edx+0x69],ah
   1ee46:	je     0x1ee68
   1ee48:	ins    BYTE PTR es:[edi],dx
   1ee49:	outs   dx,BYTE PTR gs:[esi]
   1ee4b:	addr16 je 0x1eeb6
   1ee4e:	and    BYTE PTR [edx+0x65],dh
   1ee51:	jo     0x1eeb8
   1ee53:	popa   
   1ee54:	je     0x1ee56
   1ee56:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1ee5d:	and    BYTE PTR [ebx+0x6f],ah
   1ee60:	fs and BYTE PTR gs:[ebp+eiz*2+0x6e],ch
   1ee66:	addr16 je 0x1eed1
   1ee69:	jae    0x1ee8b
   1ee6b:	jae    0x1eed2
   1ee6d:	je     0x1ee6f
   1ee6f:	int3   
   1ee70:	je     0x1eee1
   1ee72:	outs   dx,DWORD PTR ds:[esi]
   1ee73:	and    BYTE PTR [ebp+0x61],ch
   1ee76:	outs   dx,BYTE PTR ds:[esi]
   1ee77:	jns    0x1ee99
   1ee79:	ins    BYTE PTR es:[edi],dx
   1ee7a:	outs   dx,BYTE PTR gs:[esi]
   1ee7c:	addr16 je 0x1eee7
   1ee7f:	and    BYTE PTR [edi+0x72],ch
   1ee82:	and    BYTE PTR [ecx+ebp*2+0x73],ah
   1ee86:	je     0x1eee9
   1ee88:	outs   dx,BYTE PTR ds:[esi]
   1ee89:	arpl   WORD PTR [ebp+0x20],sp
   1ee8c:	jae    0x1ef07
   1ee8e:	ins    DWORD PTR es:[edi],dx
   1ee8f:	bound  ebp,QWORD PTR [edi+0x6c]
   1ee92:	jae    0x1ee94
   1ee94:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1ee9b:	and    BYTE PTR [ebx+0x74],dh
   1ee9e:	outs   dx,DWORD PTR ds:[esi]
   1ee9f:	jb     0x1ef06
   1eea1:	and    BYTE PTR fs:[edx+0x6c],ah
   1eea5:	outs   dx,DWORD PTR ds:[esi]
   1eea6:	arpl   WORD PTR [ebx+0x20],bp
   1eea9:	ins    BYTE PTR es:[edi],dx
   1eeaa:	outs   dx,BYTE PTR gs:[esi]
   1eeac:	addr16 je 0x1ef17
   1eeaf:	jae    0x1eeb1
   1eeb1:	int3   
   1eeb2:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1eeb9:	and    BYTE PTR [edx+0x6c],ah
   1eebc:	outs   dx,DWORD PTR ds:[esi]
   1eebd:	arpl   WORD PTR [ebx+0x20],bp
   1eec0:	je     0x1ef3b
   1eec2:	jo     0x1ef29
   1eec4:	add    ah,cl
   1eec6:	push   0x65646165
   1eecb:	jb     0x1eeed
   1eecd:	arpl   WORD PTR [edx+0x63],si
   1eed0:	and    BYTE PTR [ebp+0x69],ch
   1eed3:	jae    0x1ef42
   1eed5:	popa   
   1eed6:	je     0x1ef3b
   1eed8:	push   0x6b6e7500
   1eedd:	outs   dx,BYTE PTR ds:[esi]
   1eede:	outs   dx,DWORD PTR ds:[esi]
   1eedf:	ja     0x1ef4f
   1eee1:	and    BYTE PTR [eax+0x65],ch
   1eee4:	popa   
   1eee5:	fs gs jb 0x1ef09
   1eee9:	data16 ins BYTE PTR es:[edi],dx
   1eeeb:	popa   
   1eeec:	addr16 jae 0x1ef0f
   1eeef:	jae    0x1ef56
   1eef1:	je     0x1eef3
   1eef3:	int3   
   1eef4:	imul   ebp,DWORD PTR [esi+0x63],0x6572726f
   1eefb:	arpl   WORD PTR [eax+eiz*1+0x68],si
   1eeff:	gs popa 
   1ef01:	fs gs jb 0x1ef25
   1ef05:	arpl   WORD PTR [eax+0x65],bp
   1ef08:	arpl   WORD PTR [ebx+0x0],bp
   1ef0b:	int3   
   1ef0c:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1ef13:	and    BYTE PTR [edi+0x69],dh
   1ef16:	outs   dx,BYTE PTR ds:[esi]
   1ef17:	outs   dx,DWORD PTR fs:[esi]
   1ef19:	ja     0x1ef3b
   1ef1b:	jae    0x1ef86
   1ef1d:	jp     0x1ef84
   1ef1f:	add    BYTE PTR [ebp+0x6e],dh
   1ef22:	imul   ebp,DWORD PTR [esi+0x6f],0x77
   1ef26:	outs   dx,BYTE PTR ds:[esi]
   1ef27:	and    BYTE PTR [ebx+0x6f],ah
   1ef2a:	ins    DWORD PTR es:[edi],dx
   1ef2b:	jo     0x1ef9f
   1ef2d:	gs jae 0x1efa3
   1ef30:	imul   ebp,DWORD PTR [edi+0x6e],0x74656d20
   1ef37:	.byte 0x68
   1ef38:	outs   dx,DWORD PTR ds:[esi]
   1ef39:	fs
	...

Disassembly of section INIT:

00078c00 <INIT>:
   78c00:	add    BYTE PTR [eax],al
   78c02:	add    BYTE PTR [eax],al
   78c04:	add    BYTE PTR [ecx+0x7751c],ah
   78c0a:	mov    ecx,0xbb40e64e
   78c0f:	test   eax,eax
   78c11:	je     0x78c17
   78c13:	cmp    eax,ecx
   78c15:	jne    0x78c31
   78c17:	mov    eax,ds:0x1f058
   78c1c:	mov    eax,DWORD PTR [eax]
   78c1e:	xor    eax,0x7751c
   78c23:	mov    ds:0x7751c,eax
   78c28:	jne    0x78c31
   78c2a:	mov    eax,ecx
   78c2c:	mov    ds:0x7751c,eax
   78c31:	not    eax
   78c33:	mov    ds:0x77520,eax
   78c38:	ret    
   78c39:	sub    esi,DWORD PTR [edi-0x74dac09f]
   78c3f:	call   DWORD PTR [ebp-0x75]
   78c42:	in     al,dx
   78c43:	call   0x78c05
   78c48:	pop    ebp
   78c49:	jmp    0x19104
   78c4e:	int3   
   78c4f:	int3   
   78c50:	xchg   esp,eax
   78c51:	mov    WORD PTR [esi],es
	...
   78c5b:	add    BYTE PTR [esi+ecx*4-0xff7fffa],dh
   78c62:	add    BYTE PTR [eax],al
   78c64:	mov    WORD PTR [esi+eax*1+0x0],cs
   78c6b:	add    BYTE PTR [eax],al
   78c6d:	add    BYTE PTR [eax],al
   78c6f:	add    dh,dl
   78c71:	mov    es,WORD PTR [esi]
   78c73:	add    BYTE PTR [eax],al
   78c75:	lock add BYTE PTR [eax],al
	...
   78c8c:	ret    0x68e
   78c8f:	add    BYTE PTR [eax],al
   78c91:	add    BYTE PTR [eax],al
   78c93:	add    BYTE PTR [ecx*4-0x72d3fffa],dl
   78c9a:	push   es
   78c9b:	add    BYTE PTR [esi],dh
   78c9d:	lea    eax,[esi]
   78c9f:	add    BYTE PTR [eax-0x73],al
   78ca2:	push   es
   78ca3:	add    BYTE PTR [edx-0x73],cl
   78ca6:	push   es
   78ca7:	add    BYTE PTR [edx-0x73],bl
   78caa:	push   es
   78cab:	add    BYTE PTR [edx-0x73],bh
   78cae:	push   es
   78caf:	add    BYTE PTR [esi-0x57fff973],cl
   78cb5:	lea    eax,[esi]
   78cb7:	add    BYTE PTR [edx-0x2dfff973],bh
   78cbd:	lea    eax,[esi]
   78cbf:	add    ah,dh
   78cc1:	lea    eax,[esi]
   78cc3:	add    dh,bh
   78cc5:	lea    eax,[esi]
   78cc7:	add    BYTE PTR [edx],bl
   78cc9:	mov    es,WORD PTR [esi]
   78ccb:	add    BYTE PTR [edx],dh
   78ccd:	mov    es,WORD PTR [esi]
   78ccf:	add    BYTE PTR [esi+ecx*4],bh
   78cd2:	push   es
   78cd3:	add    BYTE PTR [esi-0x72],dl
   78cd6:	push   es
   78cd7:	add    BYTE PTR [esi+ecx*4+0x6],ch
   78cdb:	add    BYTE PTR [eax-0x72],bh
   78cde:	push   es
   78cdf:	add    BYTE PTR [esi+ecx*4-0x7169fffa],cl
   78ce6:	push   es
   78ce7:	add    BYTE PTR [esi+ecx*4-0x7303fffa],ah
   78cee:	push   es
   78cef:	add    ah,bl
   78cf1:	lea    eax,[esi]
   78cf3:	add    dh,bl
   78cf5:	mov    es,WORD PTR [esi]
   78cf7:	add    BYTE PTR [eax],al
   78cf9:	add    BYTE PTR [eax],al
   78cfb:	add    BYTE PTR [eax],dh
   78cfd:	add    ecx,DWORD PTR [edi+0x62]
   78d00:	inc    sp
   78d02:	gs jb  0x78d6a
   78d05:	data16 gs jb 0x78d6e
   78d09:	outs   dx,BYTE PTR ds:[esi]
   78d0a:	arpl   WORD PTR [ebp+0x4f],sp
   78d0d:	bound  ebp,QWORD PTR [edx+0x65]
   78d10:	arpl   WORD PTR [eax+eax*1+0x0],si
   78d14:	sbb    eax,0x6c745204
   78d19:	dec    ecx
   78d1a:	outs   dx,BYTE PTR ds:[esi]
   78d1b:	imul   esi,DWORD PTR [ebp+edx*2+0x6e],0x646f6369
   78d23:	gs push ebx
   78d25:	je     0x78d99
   78d27:	imul   ebp,DWORD PTR [esi+0x67],0x57b0000
   78d2e:	pop    edi
   78d2f:	popa   
   78d30:	ins    BYTE PTR es:[edi],dx
   78d31:	ins    BYTE PTR es:[edi],dx
   78d32:	ins    DWORD PTR es:[edi],dx
   78d33:	jne    0x78da1
   78d35:	add    BYTE PTR [ecx+0x5],bh
   78d38:	pop    edi
   78d39:	popa   
   78d3a:	ins    BYTE PTR es:[edi],dx
   78d3b:	ins    BYTE PTR es:[edi],dx
   78d3c:	imul   esi,DWORD PTR fs:[esi+0x0],0x615f057d
   78d44:	ins    BYTE PTR es:[edi],dx
   78d45:	ins    BYTE PTR es:[edi],dx
   78d46:	jb     0x78dad
   78d48:	ins    DWORD PTR es:[edi],dx
   78d49:	add    BYTE PTR [ebp+0x0],dh
   78d4c:	inc    ebp
   78d4d:	js     0x78da1
   78d4f:	popa   
   78d50:	imul   esi,DWORD PTR [ebx+0x65],0x74617453
   78d57:	jne    0x78dcc
   78d59:	add    BYTE PTR [edx+0x0],al
   78d5c:	inc    ebp
   78d5d:	js     0x78da0
   78d5f:	ins    BYTE PTR es:[edi],dx
   78d60:	ins    BYTE PTR es:[edi],dx
   78d61:	outs   dx,DWORD PTR ds:[esi]
   78d62:	arpl   WORD PTR [ecx+0x74],sp
   78d65:	gs push eax
   78d67:	outs   dx,DWORD PTR ds:[esi]
   78d68:	outs   dx,DWORD PTR ds:[esi]
   78d69:	ins    BYTE PTR es:[edi],dx
   78d6a:	push   edi
   78d6b:	imul   esi,DWORD PTR [eax+ebp*2+0x54],0x72506761
   78d73:	imul   ebp,DWORD PTR [edi+0x72],0x797469
   78d7a:	dec    esi
   78d7b:	add    BYTE PTR [ebp+0x78],al
   78d7e:	inc    esi
   78d7f:	jb     0x78de6
   78d81:	gs push eax
   78d83:	outs   dx,DWORD PTR ds:[esi]
   78d84:	outs   dx,DWORD PTR ds:[esi]
   78d85:	ins    BYTE PTR es:[edi],dx
   78d86:	push   edi
   78d87:	imul   esi,DWORD PTR [eax+ebp*2+0x54],0xbd006761
   78d8f:	add    edx,DWORD PTR [edx+0x74]
   78d92:	ins    BYTE PTR es:[edi],dx
   78d93:	inc    ebx
   78d94:	outs   dx,DWORD PTR ds:[esi]
   78d95:	ins    DWORD PTR es:[edi],dx
   78d96:	jo     0x78df9
   78d98:	jb     0x78dff
   78d9a:	push   ebp
   78d9b:	outs   dx,BYTE PTR ds:[esi]
   78d9c:	imul   esp,DWORD PTR [ebx+0x6f],0x74536564
   78da3:	jb     0x78e0e
   78da5:	outs   dx,BYTE PTR ds:[esi]
   78da6:	add    BYTE PTR [bp+si+0x2],al
   78daa:	dec    ebx
   78dab:	gs push edx
   78dad:	gs ins BYTE PTR es:[edi],dx
   78daf:	gs popa 
   78db1:	jae    0x78e18
   78db3:	dec    ebp
   78db4:	jne    0x78e2a
   78db6:	gs js  0x78db9
   78db9:	add    BYTE PTR [ebp+0x2],ch
   78dbc:	dec    ebx
   78dbd:	gs push edi
   78dbf:	popa   
   78dc0:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6e695372
   78dc8:	ins    BYTE PTR es:[di],dx
   78dca:	gs dec edi
   78dcc:	bound  ebp,QWORD PTR [edx+0x65]
   78dcf:	arpl   WORD PTR [eax+eax*1-0x57],si
   78dd3:	add    eax,0x736d656d
   78dd8:	gs je  0x78ddb
   78ddb:	add    BYTE PTR [ecx+0x0],al
   78dde:	inc    ebp
   78ddf:	js     0x78e22
   78de1:	ins    BYTE PTR es:[edi],dx
   78de2:	ins    BYTE PTR es:[edi],dx
   78de3:	outs   dx,DWORD PTR ds:[esi]
   78de4:	arpl   WORD PTR [ecx+0x74],sp
   78de7:	gs push eax
   78de9:	outs   dx,DWORD PTR ds:[esi]
   78dea:	outs   dx,DWORD PTR ds:[esi]
   78deb:	ins    BYTE PTR es:[edi],dx
   78dec:	push   edi
   78ded:	imul   esi,DWORD PTR [eax+ebp*2+0x54],0xa7006761
   78df5:	add    eax,0x636d656d
   78dfa:	jo     0x78e75
   78dfc:	add    BYTE PTR [eax],al
   78dfe:	mov    eax,ds:0x476d4d02
   78e03:	gs je  0x78e59
   78e06:	jns    0x78e7b
   78e08:	je     0x78e6f
   78e0a:	ins    DWORD PTR es:[edi],dx
   78e0b:	push   edx
   78e0c:	outs   dx,DWORD PTR ds:[esi]
   78e0d:	jne    0x78e83
   78e0f:	imul   ebp,DWORD PTR [esi+0x65],0x72646441
   78e16:	gs jae 0x78e8c
   78e19:	add    bh,al
   78e1b:	add    edx,DWORD PTR [edx+0x74]
   78e1e:	ins    BYTE PTR es:[edi],dx
   78e1f:	inc    ebx
   78e20:	outs   dx,DWORD PTR ds:[esi]
   78e21:	jo     0x78e9c
   78e23:	push   ebp
   78e24:	outs   dx,BYTE PTR ds:[esi]
   78e25:	imul   esp,DWORD PTR [ebx+0x6f],0x74536564
   78e2c:	jb     0x78e97
   78e2e:	outs   dx,BYTE PTR ds:[esi]
   78e2f:	add    BYTE PTR [bx+si],al
   78e32:	mov    DWORD PTR ds:0x6e736377,0x746163
   78e3c:	push   es
   78e3d:	add    eax,0x6c41775a
   78e42:	ins    BYTE PTR es:[edi],dx
   78e43:	outs   dx,DWORD PTR ds:[esi]
   78e44:	arpl   WORD PTR [ecx+0x74],sp
   78e47:	gs push esi
   78e49:	imul   esi,DWORD PTR [edx+0x74],0x4d6c6175
   78e50:	gs ins DWORD PTR es:[edi],dx
   78e52:	outs   dx,DWORD PTR ds:[esi]
   78e53:	jb     0x78ece
   78e55:	add    bl,ah
   78e57:	add    DWORD PTR [ecx+0x6f],ecx
   78e5a:	inc    bx
   78e5c:	outs   dx,DWORD PTR ds:[esi]
   78e5d:	ins    DWORD PTR es:[edi],dx
   78e5e:	jo     0x78ecc
   78e60:	gs je  0x78ec8
   78e63:	push   edx
   78e64:	gs jno 0x78edc
   78e67:	gs jae 0x78ede
   78e6a:	add    BYTE PTR [eax],al
   78e6c:	mov    ecx,0x70777305
   78e71:	jb     0x78edc
   78e73:	outs   dx,BYTE PTR ds:[esi]
   78e74:	je     0x78edc
   78e76:	add    BYTE PTR [eax],al
   78e78:	xor    eax,DWORD PTR [edx]
   78e7a:	dec    ebx
   78e7b:	gs push ecx
   78e7d:	jne    0x78ee4
   78e7f:	jb     0x78efa
   78e81:	push   ebx
   78e82:	jns    0x78ef7
   78e84:	je     0x78eeb
   78e86:	ins    DWORD PTR es:[edi],dx
   78e87:	push   esp
   78e88:	imul   ebp,DWORD PTR [ebp+0x65],0x7305ac00
   78e8f:	jo     0x78f03
   78e91:	imul   ebp,DWORD PTR [esi+0x74],0x2660066
   78e98:	dec    ebx
   78e99:	gs push esp
   78e9b:	imul   esp,DWORD PTR [ebx+0x6b],0x6e756f43
   78ea2:	je     0x78ea4
   78ea4:	test   BYTE PTR [ecx],0x4b
   78ea7:	gs inc edx
   78ea9:	jne    0x78f12
   78eab:	inc    ebx
   78eac:	push   0x456b6365
   78eb1:	js     0x78eb3
   78eb3:	add    BYTE PTR [esi+0x74],ch
   78eb6:	outs   dx,DWORD PTR ds:[esi]
   78eb7:	jae    0x78f24
   78eb9:	jb     0x78f29
   78ebb:	ins    BYTE PTR es:[edi],dx
   78ebc:	cs gs js 0x78f25
   78ec0:	add    BYTE PTR [eax],al
   78ec2:	inc    eax
   78ec3:	add    BYTE PTR [ebx+0x65],cl
   78ec6:	inc    edi
   78ec7:	gs je  0x78f0d
   78eca:	jne    0x78f3e
   78ecc:	jb     0x78f33
   78ece:	outs   dx,BYTE PTR ds:[esi]
   78ecf:	je     0x78f1a
   78ed1:	jb     0x78f44
   78ed3:	ins    BYTE PTR es:[edi],dx
   78ed4:	add    BYTE PTR [eax],al
   78ed6:	dec    eax
   78ed7:	inc    ecx
   78ed8:	dec    esp
   78ed9:	cs fs ins BYTE PTR es:[edi],dx
   78edc:	ins    BYTE PTR es:[edi],dx
   78edd:	add    BYTE PTR [eax+0x6c745204],ah
   78ee3:	push   ebp
   78ee4:	outs   dx,BYTE PTR ds:[esi]
   78ee5:	ja     0x78f50
   78ee7:	outs   dx,BYTE PTR ds:[esi]
   78ee8:	fs
	...
